{"sha": "d232417a8832c480abeb1c28abd66978b85e5081", "node_id": "C_kwDOANBUbNoAKGQyMzI0MTdhODgzMmM0ODBhYmViMWMyOGFiZDY2OTc4Yjg1ZTUwODE", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2021-07-12T10:14:15Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-09-22T15:01:41Z"}, "message": "[Ada] Make Ada.Task_Initialization compatible with No_Elaboration_Code_All\n\ngcc/ada/\n\n\t* libgnarl/a-tasini.ads, libgnarl/a-tasini.adb: Make compatible\n\twith No_Elaboration_Code_All.\n\t* libgnarl/s-taskin.ads, libgnarl/s-tassta.adb: Adjust\n\taccordingly.", "tree": {"sha": "50aedc5876fbc1d100628a2cbbc977c92f000d8d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/50aedc5876fbc1d100628a2cbbc977c92f000d8d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d232417a8832c480abeb1c28abd66978b85e5081", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d232417a8832c480abeb1c28abd66978b85e5081", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d232417a8832c480abeb1c28abd66978b85e5081", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d232417a8832c480abeb1c28abd66978b85e5081/comments", "author": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ab857d1a3b4b726262c4c9d31c22d214a3ffee53", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab857d1a3b4b726262c4c9d31c22d214a3ffee53", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab857d1a3b4b726262c4c9d31c22d214a3ffee53"}], "stats": {"total": 32, "additions": 17, "deletions": 15}, "files": [{"sha": "a8981d6dd69da5bf81d79e4551fafa1a8fe98825", "filename": "gcc/ada/libgnarl/a-tasini.adb", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d232417a8832c480abeb1c28abd66978b85e5081/gcc%2Fada%2Flibgnarl%2Fa-tasini.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d232417a8832c480abeb1c28abd66978b85e5081/gcc%2Fada%2Flibgnarl%2Fa-tasini.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnarl%2Fa-tasini.adb?ref=d232417a8832c480abeb1c28abd66978b85e5081", "patch": "@@ -26,21 +26,21 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n-with Ada.Unchecked_Conversion;\n-with System.Tasking;\n-\n package body Ada.Task_Initialization is\n \n-   function To_STIH is new Ada.Unchecked_Conversion\n-     (Initialization_Handler, System.Tasking.Initialization_Handler);\n+   Global_Initialization_Handler : Initialization_Handler := null;\n+   pragma Atomic (Global_Initialization_Handler);\n+   pragma Export (Ada, Global_Initialization_Handler,\n+                  \"__gnat_global_initialization_handler\");\n+   --  Global handler called when each task initializes.\n \n    --------------------------------\n    -- Set_Initialization_Handler --\n    --------------------------------\n \n    procedure Set_Initialization_Handler (Handler : Initialization_Handler) is\n    begin\n-      System.Tasking.Global_Initialization_Handler := To_STIH (Handler);\n+      Global_Initialization_Handler := Handler;\n    end Set_Initialization_Handler;\n \n end Ada.Task_Initialization;"}, {"sha": "2366145da04fef92e6cb70cf83757ba06ae29427", "filename": "gcc/ada/libgnarl/a-tasini.ads", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d232417a8832c480abeb1c28abd66978b85e5081/gcc%2Fada%2Flibgnarl%2Fa-tasini.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d232417a8832c480abeb1c28abd66978b85e5081/gcc%2Fada%2Flibgnarl%2Fa-tasini.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnarl%2Fa-tasini.ads?ref=d232417a8832c480abeb1c28abd66978b85e5081", "patch": "@@ -30,7 +30,8 @@\n --  when tasks start.\n \n package Ada.Task_Initialization is\n-   pragma Preelaborate (Task_Initialization);\n+   pragma Preelaborate;\n+   pragma No_Elaboration_Code_All;\n \n    type Initialization_Handler is access procedure;\n "}, {"sha": "cf560b569fb0a297b1e773afffecce1782c9c4c4", "filename": "gcc/ada/libgnarl/s-taskin.ads", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d232417a8832c480abeb1c28abd66978b85e5081/gcc%2Fada%2Flibgnarl%2Fs-taskin.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d232417a8832c480abeb1c28abd66978b85e5081/gcc%2Fada%2Flibgnarl%2Fs-taskin.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnarl%2Fs-taskin.ads?ref=d232417a8832c480abeb1c28abd66978b85e5081", "patch": "@@ -368,14 +368,6 @@ package System.Tasking is\n    --  Used to represent protected procedures to be executed when task\n    --  terminates.\n \n-   type Initialization_Handler is access procedure;\n-   pragma Favor_Top_Level (Initialization_Handler);\n-   --  Use to represent procedures to be executed at task initialization.\n-\n-   Global_Initialization_Handler : Initialization_Handler := null;\n-   pragma Atomic (Global_Initialization_Handler);\n-   --  Global handler called when each task initializes.\n-\n    ------------------------------------\n    -- Dispatching domain definitions --\n    ------------------------------------"}, {"sha": "bbc7d14d5d8ad9e1680afd7f710b6fbe84fe9b6a", "filename": "gcc/ada/libgnarl/s-tassta.adb", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d232417a8832c480abeb1c28abd66978b85e5081/gcc%2Fada%2Flibgnarl%2Fs-tassta.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d232417a8832c480abeb1c28abd66978b85e5081/gcc%2Fada%2Flibgnarl%2Fs-tassta.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnarl%2Fs-tassta.adb?ref=d232417a8832c480abeb1c28abd66978b85e5081", "patch": "@@ -35,6 +35,7 @@ pragma Partition_Elaboration_Policy (Concurrent);\n \n with Ada.Exceptions;\n with Ada.Unchecked_Deallocation;\n+with Ada.Task_Initialization;\n \n with System.Interrupt_Management;\n with System.Tasking.Debug;\n@@ -1177,6 +1178,14 @@ package body System.Tasking.Stages is\n          Debug.Signal_Debug_Event (Debug.Debug_Event_Run, Self_ID);\n       end if;\n \n+      declare\n+         use Ada.Task_Initialization;\n+\n+         Global_Initialization_Handler : Initialization_Handler;\n+         pragma Atomic (Global_Initialization_Handler);\n+         pragma Import (Ada, Global_Initialization_Handler,\n+                        \"__gnat_global_initialization_handler\");\n+\n       begin\n          --  We are separating the following portion of the code in order to\n          --  place the exception handlers in a different block. In this way,"}]}