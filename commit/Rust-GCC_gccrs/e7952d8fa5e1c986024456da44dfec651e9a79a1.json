{"sha": "e7952d8fa5e1c986024456da44dfec651e9a79a1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTc5NTJkOGZhNWUxYzk4NjAyNDQ1NmRhNDRkZmVjNjUxZTlhNzlhMQ==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1992-08-26T03:22:37Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1992-08-26T03:22:37Z"}, "message": "(SF_MODES): Allow SImode in fp registers.\n\n(output_floatsisf2, output_floatsidf2, output_floatsitf2): Delete.\n\nFrom-SVN: r1955", "tree": {"sha": "db3a7684d8a8ae7d3a4af6341abb0242af302537", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/db3a7684d8a8ae7d3a4af6341abb0242af302537"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e7952d8fa5e1c986024456da44dfec651e9a79a1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7952d8fa5e1c986024456da44dfec651e9a79a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7952d8fa5e1c986024456da44dfec651e9a79a1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7952d8fa5e1c986024456da44dfec651e9a79a1/comments", "author": null, "committer": null, "parents": [{"sha": "e939539ba6ecb082e0352bca5026c7c9e9850716", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e939539ba6ecb082e0352bca5026c7c9e9850716", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e939539ba6ecb082e0352bca5026c7c9e9850716"}], "stats": {"total": 41, "additions": 1, "deletions": 40}, "files": [{"sha": "77aec46737cba5b0ebd482e14fe45499269f9197", "filename": "gcc/config/sparc/sparc.c", "status": "modified", "additions": 1, "deletions": 40, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7952d8fa5e1c986024456da44dfec651e9a79a1/gcc%2Fconfig%2Fsparc%2Fsparc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7952d8fa5e1c986024456da44dfec651e9a79a1/gcc%2Fconfig%2Fsparc%2Fsparc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.c?ref=e7952d8fa5e1c986024456da44dfec651e9a79a1", "patch": "@@ -1958,7 +1958,7 @@ output_scc_insn (operands, insn)\n #define T_MODES (~C_MODES)\n \n /* Modes for single-float quantities.  */\n-#define SF_MODES ((1 << (int) SFmode))\n+#define SF_MODES ((1 << (int) SFmode) | (1 << (int) SImode))\n \n /* Modes for double-float quantities.  */\n #define DF_MODES (SF_MODES | (1 << (int) DFmode) | (1 << (int) SCmode))\n@@ -2474,45 +2474,6 @@ output_return (operands)\n \treturn \"ret\\n\\trestore\";\n     }\n }\n-\n-/* Output assembler code for a SImode to SFmode conversion.  */\n-\n-char *\n-output_floatsisf2 (operands)\n-     rtx *operands;\n-{\n-  if (GET_CODE (operands[1]) == MEM)\n-    return \"ld %1,%0\\n\\tfitos %0,%0\";\n-  else if (FP_REG_P (operands[1]))\n-    return \"fitos %1,%0\";\n-  return \"st %r1,[%%fp-4]\\n\\tld [%%fp-4],%0\\n\\tfitos %0,%0\";\n-}\n-\n-/* Output assembler code for a SImode to DFmode conversion.  */\n-\n-char *\n-output_floatsidf2 (operands)\n-     rtx *operands;\n-{\n-  if (GET_CODE (operands[1]) == MEM)\n-    return \"ld %1,%0\\n\\tfitod %0,%0\";\n-  else if (FP_REG_P (operands[1]))\n-    return \"fitod %1,%0\";\n-  return \"st %r1,[%%fp-4]\\n\\tld [%%fp-4],%0\\n\\tfitod %0,%0\";\n-}\n-\n-/* Output assembler code for a SImode to TFmode conversion.  */\n-\n-char *\n-output_floatsitf2 (operands)\n-     rtx *operands;\n-{\n-  if (GET_CODE (operands[1]) == MEM)\n-    return \"ld %1,%0\\n\\tfitoq %0,%0\";\n-  else if (FP_REG_P (operands[1]))\n-    return \"fitoq %1,%0\";\n-  return \"st %r1,[%%fp-4]\\n\\tld [%%fp-4],%0\\n\\tfitoq %0,%0\";\n-}\n \f\n /* Leaf functions and non-leaf functions have different needs.  */\n "}]}