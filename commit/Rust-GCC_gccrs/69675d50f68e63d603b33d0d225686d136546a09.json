{"sha": "69675d50f68e63d603b33d0d225686d136546a09", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Njk2NzVkNTBmNjhlNjNkNjAzYjMzZDBkMjI1Njg2ZDEzNjU0NmEwOQ==", "commit": {"author": {"name": "Tejas Belagod", "email": "tejas.belagod@arm.com", "date": "2014-01-20T12:34:13Z"}, "committer": {"name": "Tejas Belagod", "email": "belagod@gcc.gnu.org", "date": "2014-01-20T12:34:13Z"}, "message": "[AArch64] Relax CANNOT_CHANGE_MODE_CLASS\n\ngcc/\n\t* config/aarch64/aarch64-protos.h\n\t(aarch64_cannot_change_mode_class_ptr): Declare.\n\t* config/aarch64/aarch64.c (aarch64_cannot_change_mode_class,\n\taarch64_cannot_change_mode_class_ptr): New.\n\t* config/aarch64/aarch64.h (CANNOT_CHANGE_MODE_CLASS): Change to call\n\tbackend hook aarch64_cannot_change_mode_class.\n\nFrom-SVN: r206804", "tree": {"sha": "470dd9a2241c08e0ab9949c6a9eabf5db74ab79d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/470dd9a2241c08e0ab9949c6a9eabf5db74ab79d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/69675d50f68e63d603b33d0d225686d136546a09", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69675d50f68e63d603b33d0d225686d136546a09", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69675d50f68e63d603b33d0d225686d136546a09", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69675d50f68e63d603b33d0d225686d136546a09/comments", "author": {"login": "tejas-belagod-arm", "id": 92718852, "node_id": "U_kgDOBYbHBA", "avatar_url": "https://avatars.githubusercontent.com/u/92718852?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tejas-belagod-arm", "html_url": "https://github.com/tejas-belagod-arm", "followers_url": "https://api.github.com/users/tejas-belagod-arm/followers", "following_url": "https://api.github.com/users/tejas-belagod-arm/following{/other_user}", "gists_url": "https://api.github.com/users/tejas-belagod-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/tejas-belagod-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tejas-belagod-arm/subscriptions", "organizations_url": "https://api.github.com/users/tejas-belagod-arm/orgs", "repos_url": "https://api.github.com/users/tejas-belagod-arm/repos", "events_url": "https://api.github.com/users/tejas-belagod-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/tejas-belagod-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ffee7aa91a16a2a037aee7f96dd635df18cd7109", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ffee7aa91a16a2a037aee7f96dd635df18cd7109", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ffee7aa91a16a2a037aee7f96dd635df18cd7109"}], "stats": {"total": 55, "additions": 49, "deletions": 6}, "files": [{"sha": "de8322b31ea3e9b847b65a1187f92c04be78ba21", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69675d50f68e63d603b33d0d225686d136546a09/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69675d50f68e63d603b33d0d225686d136546a09/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=69675d50f68e63d603b33d0d225686d136546a09", "patch": "@@ -1,3 +1,12 @@\n+2014-01-20  Tejas Belagod  <tejas.belagod@arm.com>\n+\n+\t* config/aarch64/aarch64-protos.h\n+\t(aarch64_cannot_change_mode_class_ptr): Declare.\n+\t* config/aarch64/aarch64.c (aarch64_cannot_change_mode_class,\n+\taarch64_cannot_change_mode_class_ptr): New.\n+\t* config/aarch64/aarch64.h (CANNOT_CHANGE_MODE_CLASS): Change to call\n+\tbackend hook aarch64_cannot_change_mode_class.\n+\n 2014-01-20  James Greenhalgh  <james.greenhalgh@arm.com>\n \n \t* common/config/aarch64/aarch64-common.c"}, {"sha": "5542f023b33d9467daa63d33185d414e89e57d2e", "filename": "gcc/config/aarch64/aarch64-protos.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69675d50f68e63d603b33d0d225686d136546a09/gcc%2Fconfig%2Faarch64%2Faarch64-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69675d50f68e63d603b33d0d225686d136546a09/gcc%2Fconfig%2Faarch64%2Faarch64-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-protos.h?ref=69675d50f68e63d603b33d0d225686d136546a09", "patch": "@@ -161,6 +161,9 @@ struct tune_params\n \n HOST_WIDE_INT aarch64_initial_elimination_offset (unsigned, unsigned);\n bool aarch64_bitmask_imm (HOST_WIDE_INT val, enum machine_mode);\n+bool aarch64_cannot_change_mode_class (enum machine_mode,\n+\t\t\t\t       enum machine_mode,\n+\t\t\t\t       enum reg_class);\n enum aarch64_symbol_type\n aarch64_classify_symbolic_expression (rtx, enum aarch64_symbol_context);\n bool aarch64_constant_address_p (rtx);"}, {"sha": "57b66455dc3424a517706c93453256353d94a4e6", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69675d50f68e63d603b33d0d225686d136546a09/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69675d50f68e63d603b33d0d225686d136546a09/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=69675d50f68e63d603b33d0d225686d136546a09", "patch": "@@ -8259,6 +8259,42 @@ aarch64_vectorize_vec_perm_const_ok (enum machine_mode vmode,\n   return ret;\n }\n \n+/* Implement target hook CANNOT_CHANGE_MODE_CLASS.  */\n+bool\n+aarch64_cannot_change_mode_class (enum machine_mode from,\n+\t\t\t\t  enum machine_mode to,\n+\t\t\t\t  enum reg_class rclass)\n+{\n+  /* Full-reg subregs are allowed on general regs or any class if they are\n+     the same size.  */\n+  if (GET_MODE_SIZE (from) == GET_MODE_SIZE (to)\n+      || !reg_classes_intersect_p (FP_REGS, rclass))\n+    return false;\n+\n+  /* Limited combinations of subregs are safe on FPREGs.  Particularly,\n+     1. Vector Mode to Scalar mode where 1 unit of the vector is accessed.\n+     2. Scalar to Scalar for integer modes or same size float modes.\n+     3. Vector to Vector modes.  */\n+  if (GET_MODE_SIZE (from) > GET_MODE_SIZE (to))\n+    {\n+      if (aarch64_vector_mode_supported_p (from)\n+\t  && GET_MODE_SIZE (GET_MODE_INNER (from)) == GET_MODE_SIZE (to))\n+\treturn false;\n+\n+      if (GET_MODE_NUNITS (from) == 1\n+\t  && GET_MODE_NUNITS (to) == 1\n+\t  && (GET_MODE_CLASS (from) == MODE_INT\n+\t      || from == to))\n+\treturn false;\n+\n+      if (aarch64_vector_mode_supported_p (from)\n+\t  && aarch64_vector_mode_supported_p (to))\n+\treturn false;\n+    }\n+\n+  return true;\n+}\n+\n #undef TARGET_ADDRESS_COST\n #define TARGET_ADDRESS_COST aarch64_address_cost\n "}, {"sha": "a08dee0532f656e13196812853385fa1dea18d8b", "filename": "gcc/config/aarch64/aarch64.h", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69675d50f68e63d603b33d0d225686d136546a09/gcc%2Fconfig%2Faarch64%2Faarch64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69675d50f68e63d603b33d0d225686d136546a09/gcc%2Fconfig%2Faarch64%2Faarch64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.h?ref=69675d50f68e63d603b33d0d225686d136546a09", "patch": "@@ -822,13 +822,8 @@ do {\t\t\t\t\t\t\t\t\t     \\\n   extern void  __aarch64_sync_cache_range (void *, void *);\t\\\n   __aarch64_sync_cache_range (beg, end)\n \n-/*  VFP registers may only be accessed in the mode they\n-   were set.  */\n #define CANNOT_CHANGE_MODE_CLASS(FROM, TO, CLASS)\t\\\n-  (GET_MODE_SIZE (FROM) != GET_MODE_SIZE (TO)\t\t\\\n-   ? reg_classes_intersect_p (FP_REGS, (CLASS))\t\t\\\n-   : 0)\n-\n+  aarch64_cannot_change_mode_class (FROM, TO, CLASS)\n \n #define SHIFT_COUNT_TRUNCATED !TARGET_SIMD\n "}]}