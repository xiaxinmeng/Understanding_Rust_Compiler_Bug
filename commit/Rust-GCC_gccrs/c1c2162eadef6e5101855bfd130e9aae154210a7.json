{"sha": "c1c2162eadef6e5101855bfd130e9aae154210a7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzFjMjE2MmVhZGVmNmU1MTAxODU1YmZkMTMwZTlhYWUxNTQyMTBhNw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2013-10-31T15:45:04Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2013-10-31T15:45:04Z"}, "message": "semantics.c (cxx_eval_call_expression): Handle trivial value-initialization.\n\n\t* semantics.c (cxx_eval_call_expression): Handle trivial\n\tvalue-initialization.\n\t* typeck2.c (store_init_value): Call maybe_constant_init after\n\tcxx_constant_value.\n\nFrom-SVN: r204266", "tree": {"sha": "149c1199defc0e613fbac5a900e06d8a2a26c6ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/149c1199defc0e613fbac5a900e06d8a2a26c6ec"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c1c2162eadef6e5101855bfd130e9aae154210a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1c2162eadef6e5101855bfd130e9aae154210a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c1c2162eadef6e5101855bfd130e9aae154210a7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1c2162eadef6e5101855bfd130e9aae154210a7/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b8aaa1a3b97790dfaf45c2fdf671ed1ae81e3b07", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8aaa1a3b97790dfaf45c2fdf671ed1ae81e3b07", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8aaa1a3b97790dfaf45c2fdf671ed1ae81e3b07"}], "stats": {"total": 23, "additions": 17, "deletions": 6}, "files": [{"sha": "c7a0e5d9dc98de1c5a112653850f2eab2fd958f4", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1c2162eadef6e5101855bfd130e9aae154210a7/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1c2162eadef6e5101855bfd130e9aae154210a7/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=c1c2162eadef6e5101855bfd130e9aae154210a7", "patch": "@@ -1,5 +1,10 @@\n 2013-10-31  Jason Merrill  <jason@redhat.com>\n \n+\t* semantics.c (cxx_eval_call_expression): Handle trivial\n+\tvalue-initialization.\n+\t* typeck2.c (store_init_value): Call maybe_constant_init after\n+\tcxx_constant_value.\n+\n \t* decl.c (cxx_maybe_build_cleanup): Always set LOOKUP_NONVIRTUAL.\n \t* decl2.c (build_cleanup): Just call cxx_maybe_build_cleanup.\n "}, {"sha": "de3e8e7dcb895554cb333b99ff6321864cbcac0c", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1c2162eadef6e5101855bfd130e9aae154210a7/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1c2162eadef6e5101855bfd130e9aae154210a7/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=c1c2162eadef6e5101855bfd130e9aae154210a7", "patch": "@@ -8289,12 +8289,18 @@ cxx_eval_call_expression (const constexpr_call *old_call, tree t,\n       return t;\n     }\n \n-  /* Shortcut trivial copy constructor/op=.  */\n-  if (call_expr_nargs (t) == 2 && trivial_fn_p (fun))\n+  /* Shortcut trivial constructor/op=.  */\n+  if (trivial_fn_p (fun))\n     {\n-      tree arg = convert_from_reference (get_nth_callarg (t, 1));\n-      return cxx_eval_constant_expression (old_call, arg, allow_non_constant,\n-\t\t\t\t\t   addr, non_constant_p, overflow_p);\n+      if (call_expr_nargs (t) == 2)\n+\t{\n+\t  tree arg = convert_from_reference (get_nth_callarg (t, 1));\n+\t  return cxx_eval_constant_expression (old_call, arg, allow_non_constant,\n+\t\t\t\t\t       addr, non_constant_p, overflow_p);\n+\t}\n+      else if (TREE_CODE (t) == AGGR_INIT_EXPR\n+\t       && AGGR_INIT_ZERO_FIRST (t))\n+\treturn build_zero_init (DECL_CONTEXT (fun), NULL_TREE, false);\n     }\n \n   /* If in direct recursive call, optimize definition search.  */"}, {"sha": "9da8e3de8444f8533470c0c2f6f63ffacad8326c", "filename": "gcc/cp/typeck2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1c2162eadef6e5101855bfd130e9aae154210a7/gcc%2Fcp%2Ftypeck2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1c2162eadef6e5101855bfd130e9aae154210a7/gcc%2Fcp%2Ftypeck2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck2.c?ref=c1c2162eadef6e5101855bfd130e9aae154210a7", "patch": "@@ -775,7 +775,6 @@ store_init_value (tree decl, tree init, vec<tree, va_gc>** cleanups, int flags)\n     {\n       bool const_init;\n       value = fold_non_dependent_expr (value);\n-      value = maybe_constant_init (value);\n       if (DECL_DECLARED_CONSTEXPR_P (decl)\n \t  || DECL_IN_AGGR_P (decl))\n \t{\n@@ -786,6 +785,7 @@ store_init_value (tree decl, tree init, vec<tree, va_gc>** cleanups, int flags)\n \t  else\n \t    value = cxx_constant_value (value);\n \t}\n+      value = maybe_constant_init (value);\n       const_init = (reduced_constant_expression_p (value)\n \t\t    || error_operand_p (value));\n       DECL_INITIALIZED_BY_CONSTANT_EXPRESSION_P (decl) = const_init;"}]}