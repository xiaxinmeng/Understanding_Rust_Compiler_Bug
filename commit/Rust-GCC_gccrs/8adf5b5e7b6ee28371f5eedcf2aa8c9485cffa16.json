{"sha": "8adf5b5e7b6ee28371f5eedcf2aa8c9485cffa16", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGFkZjViNWU3YjZlZTI4MzcxZjVlZWRjZjJhYThjOTQ4NWNmZmExNg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@yorick.cygnus.com", "date": "1998-02-24T01:41:45Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1998-02-24T01:41:45Z"}, "message": "pt.c (instantiate_class_template): Don't instantiate if pedantic and the args use template parms.\n\n\t* pt.c (instantiate_class_template): Don't instantiate if pedantic\n\tand the args use template parms.\n\t* pt.c (push_tinst_level): If the instantiaton uses template parms,\n\tfail silently.\n\t* decl.c (xref_basetypes): Do call complete_type for basetypes\n\tthat involve template parameters.\n\nFrom-SVN: r18215", "tree": {"sha": "e3cb5205033abb6c63826ee65112b84c41b185bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e3cb5205033abb6c63826ee65112b84c41b185bc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8adf5b5e7b6ee28371f5eedcf2aa8c9485cffa16", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8adf5b5e7b6ee28371f5eedcf2aa8c9485cffa16", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8adf5b5e7b6ee28371f5eedcf2aa8c9485cffa16", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8adf5b5e7b6ee28371f5eedcf2aa8c9485cffa16/comments", "author": null, "committer": null, "parents": [{"sha": "6c3e25ebe24f8b757d68fdfcff6c46238d24efa4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c3e25ebe24f8b757d68fdfcff6c46238d24efa4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c3e25ebe24f8b757d68fdfcff6c46238d24efa4"}], "stats": {"total": 30, "additions": 27, "deletions": 3}, "files": [{"sha": "757a1fd238944ed8c315c85a47a4ad21e7d125b5", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8adf5b5e7b6ee28371f5eedcf2aa8c9485cffa16/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8adf5b5e7b6ee28371f5eedcf2aa8c9485cffa16/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=8adf5b5e7b6ee28371f5eedcf2aa8c9485cffa16", "patch": "@@ -1,3 +1,13 @@\n+Tue Feb 24 01:40:24 1998  Jason Merrill  <jason@yorick.cygnus.com>\n+\n+\t* pt.c (instantiate_class_template): Don't instantiate if pedantic\n+\tand the args use template parms.\n+\n+\t* pt.c (push_tinst_level): If the instantiaton uses template parms,\n+\tfail silently.\n+\t* decl.c (xref_basetypes): Do call complete_type for basetypes\n+\tthat involve template parameters.\n+\n Tue Feb 24 00:36:43 1998  Jason Merrill  <jason@yorick.cygnus.com>\n \n \t* typeck2.c (process_init_constructor): Fix labeled init check."}, {"sha": "df260a304cdb22f42f049ac90d5c72687c8d7f4d", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8adf5b5e7b6ee28371f5eedcf2aa8c9485cffa16/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8adf5b5e7b6ee28371f5eedcf2aa8c9485cffa16/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=8adf5b5e7b6ee28371f5eedcf2aa8c9485cffa16", "patch": "@@ -11038,9 +11038,10 @@ xref_basetypes (code_type_node, name, ref, binfo)\n \t  continue;\n \t}\n #if 1\n-      /* This code replaces similar code in layout_basetypes.  */\n-      else if (! (current_template_parms && uses_template_parms (basetype))\n-\t       && TYPE_SIZE (complete_type (basetype)) == NULL_TREE)\n+      /* This code replaces similar code in layout_basetypes.\n+         We put the complete_type first for implicit `typename'.  */\n+      else if (TYPE_SIZE (complete_type (basetype)) == NULL_TREE\n+\t       && ! (current_template_parms && uses_template_parms (basetype)))\n \t{\n \t  cp_error (\"base class `%T' has incomplete type\", basetype);\n \t  continue;"}, {"sha": "d70bc62f27ce7172c6865129f8aee50bd366b9ab", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8adf5b5e7b6ee28371f5eedcf2aa8c9485cffa16/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8adf5b5e7b6ee28371f5eedcf2aa8c9485cffa16/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=8adf5b5e7b6ee28371f5eedcf2aa8c9485cffa16", "patch": "@@ -2749,6 +2749,12 @@ push_tinst_level (d)\n       int line = lineno;\n       char *file = input_filename;\n \n+      /* If the instantiation in question still has unbound template parms,\n+\t we don't really care if we can't instantiate it, so just return.\n+         This happens with base instantiation for implicit `typename'.  */\n+      if (uses_template_parms (d))\n+\treturn 0;\n+\n       error (\"template instantiation depth exceeds maximum of %d\",\n \t     max_tinst_depth);\n       error (\" (use -ftemplate-depth-NN to increase the maximum)\");\n@@ -2951,6 +2957,13 @@ instantiate_class_template (type)\n   if (t)\n     args = get_class_bindings (TREE_VALUE (t), TREE_PURPOSE (t), args);\n \n+  if (pedantic && uses_template_parms (args))\n+    /* If there are still template parameters amongst the args, then\n+       we can't instantiate the type; there's no telling whether or not one\n+       of the template parameters might eventually be instantiated to some\n+       value that results in a specialization being used.  */\n+    return type;\n+\n   TYPE_BEING_DEFINED (type) = 1;\n \n   if (! push_tinst_level (type))"}]}