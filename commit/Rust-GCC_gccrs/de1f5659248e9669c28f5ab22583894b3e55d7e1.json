{"sha": "de1f5659248e9669c28f5ab22583894b3e55d7e1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGUxZjU2NTkyNDhlOTY2OWMyOGY1YWIyMjU4Mzg5NGIzZTU1ZDdlMQ==", "commit": {"author": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2003-07-01T02:04:11Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2003-07-01T02:04:11Z"}, "message": "stmt.c (any_pending_cleanups): Lose argument THIS_CONTOUR, it was always passed in the value '1'.\n\n        * stmt.c (any_pending_cleanups): Lose argument THIS_CONTOUR, it\n        was always passed in the value '1'.  Simplify body appropriately.\n        * tree.h (any_pending_cleanups): Corresponding changes.\n        * calls.c: (expand_call): Corresponding changes.\n\nFrom-SVN: r68754", "tree": {"sha": "817cd4c08365bd915978dc7e81826a941b90962e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/817cd4c08365bd915978dc7e81826a941b90962e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/de1f5659248e9669c28f5ab22583894b3e55d7e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de1f5659248e9669c28f5ab22583894b3e55d7e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de1f5659248e9669c28f5ab22583894b3e55d7e1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de1f5659248e9669c28f5ab22583894b3e55d7e1/comments", "author": null, "committer": null, "parents": [{"sha": "6001794def1de775fa296fa60b8bf5630dc97736", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6001794def1de775fa296fa60b8bf5630dc97736", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6001794def1de775fa296fa60b8bf5630dc97736"}], "stats": {"total": 26, "additions": 16, "deletions": 10}, "files": [{"sha": "1204d54d0c12df06d59f7e1fbd930fe4adfaf831", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de1f5659248e9669c28f5ab22583894b3e55d7e1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de1f5659248e9669c28f5ab22583894b3e55d7e1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=de1f5659248e9669c28f5ab22583894b3e55d7e1", "patch": "@@ -1,3 +1,10 @@\n+2003-06-30  Jeff Law  <law@redhat.com>\n+\n+\t* stmt.c (any_pending_cleanups): Lose argument THIS_CONTOUR, it\n+\twas always passed in the value '1'.  Simplify body appropriately.\n+\t* tree.h (any_pending_cleanups): Corresponding changes.\n+\t* calls.c: (expand_call): Corresponding changes.\n+\n 2003-06-30  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* combine.c (distribute_notes): Don't bother REG_WAS_0."}, {"sha": "0415744711403c2a97f488cccf6175e5046c3a60", "filename": "gcc/calls.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de1f5659248e9669c28f5ab22583894b3e55d7e1/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de1f5659248e9669c28f5ab22583894b3e55d7e1/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=de1f5659248e9669c28f5ab22583894b3e55d7e1", "patch": "@@ -2353,7 +2353,7 @@ expand_call (tree exp, rtx target, int ignore)\n   if (currently_expanding_call++ != 0\n       || !flag_optimize_sibling_calls\n       || !rtx_equal_function_value_matters\n-      || any_pending_cleanups (1)\n+      || any_pending_cleanups ()\n       || args_size.var)\n     try_tail_call = try_tail_recursion = 0;\n \n@@ -2445,7 +2445,7 @@ expand_call (tree exp, rtx target, int ignore)\n         addr = fix_unsafe_tree (addr);\n       /* Expanding one of those dangerous arguments could have added\n \t cleanups, but otherwise give it a whirl.  */\n-      if (any_pending_cleanups (1))\n+      if (any_pending_cleanups ())\n \ttry_tail_call = try_tail_recursion = 0;\n     }\n \n@@ -2477,7 +2477,7 @@ expand_call (tree exp, rtx target, int ignore)\n       expand_start_target_temps ();\n       if (optimize_tail_recursion (actparms, get_last_insn ()))\n \t{\n-\t  if (any_pending_cleanups (1))\n+\t  if (any_pending_cleanups ())\n \t    try_tail_call = try_tail_recursion = 0;\n \t  else\n \t    tail_recursion_insns = get_insns ();\n@@ -3083,7 +3083,7 @@ expand_call (tree exp, rtx target, int ignore)\n \n       /* If there are cleanups to be called, don't use a hard reg as target.\n \t We need to double check this and see if it matters anymore.  */\n-      if (any_pending_cleanups (1))\n+      if (any_pending_cleanups ())\n \t{\n \t  if (target && REG_P (target)\n \t      && REGNO (target) < FIRST_PSEUDO_REGISTER)"}, {"sha": "e216642e2a051f89110fca42974b12ca01356060", "filename": "gcc/stmt.c", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de1f5659248e9669c28f5ab22583894b3e55d7e1/gcc%2Fstmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de1f5659248e9669c28f5ab22583894b3e55d7e1/gcc%2Fstmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstmt.c?ref=de1f5659248e9669c28f5ab22583894b3e55d7e1", "patch": "@@ -4378,19 +4378,18 @@ last_cleanup_this_contour ()\n }\n \n /* Return 1 if there are any pending cleanups at this point.\n-   If THIS_CONTOUR is nonzero, check the current contour as well.\n-   Otherwise, look only at the contours that enclose this one.  */\n+   Check the current contour as well as contours that enclose\n+   the current contour.  */\n \n int\n-any_pending_cleanups (this_contour)\n-     int this_contour;\n+any_pending_cleanups ()\n {\n   struct nesting *block;\n \n   if (cfun == NULL || cfun->stmt == NULL || block_stack == 0)\n     return 0;\n \n-  if (this_contour && block_stack->data.block.cleanups != NULL)\n+  if (block_stack->data.block.cleanups != NULL)\n     return 1;\n   if (block_stack->data.block.cleanups == 0\n       && block_stack->data.block.outer_cleanups == 0)"}, {"sha": "21c96125663b16260b7b647fca003c34b384641c", "filename": "gcc/tree.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de1f5659248e9669c28f5ab22583894b3e55d7e1/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de1f5659248e9669c28f5ab22583894b3e55d7e1/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=de1f5659248e9669c28f5ab22583894b3e55d7e1", "patch": "@@ -2919,7 +2919,7 @@ extern bool parse_output_constraint     PARAMS ((const char **,\n extern void expand_asm_operands\t\tPARAMS ((tree, tree, tree, tree, int,\n \t\t\t\t\t\t const char *, int));\n extern tree resolve_asm_operand_names (tree, tree, tree);\n-extern int any_pending_cleanups\t\tPARAMS ((int));\n+extern int any_pending_cleanups\t\tPARAMS ((void));\n extern void init_stmt_for_function\tPARAMS ((void));\n extern void expand_start_target_temps\tPARAMS ((void));\n extern void expand_end_target_temps\tPARAMS ((void));"}]}