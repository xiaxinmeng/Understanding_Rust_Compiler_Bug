{"sha": "b08889882442e6b36fe49033fa658ec6cc489199", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjA4ODg5ODgyNDQyZTZiMzZmZTQ5MDMzZmE2NThlYzZjYzQ4OTE5OQ==", "commit": {"author": {"name": "Richard Earnshaw", "email": "rearnsha@arm.com", "date": "2001-01-05T16:15:59Z"}, "committer": {"name": "Richard Earnshaw", "email": "rearnsha@gcc.gnu.org", "date": "2001-01-05T16:15:59Z"}, "message": "arm.md (ldmsi_postinc): Avoid use of match_dup between input and output operands.\n\n* arm.md (ldmsi_postinc): Avoid use of match_dup between input and\noutput operands.  Use arm_hard_register_operand for operand 4.\n(stmsi_postinc): Similarly.\n(ldmsi): Use arm_hard_register_operand for opernand 2.\n(stmsi): Similarly.\n* arm.c (arm_hard_register_operand): New function.\n* arm-protos.h (arm_hard_register_operand): Prototype it.\n\n* arm.h (HARD_REGNO_RENAME_OK): Define.\n\nFrom-SVN: r38712", "tree": {"sha": "dda0f91a0d096ff79819d94abedbd4b383c66795", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dda0f91a0d096ff79819d94abedbd4b383c66795"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b08889882442e6b36fe49033fa658ec6cc489199", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b08889882442e6b36fe49033fa658ec6cc489199", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b08889882442e6b36fe49033fa658ec6cc489199", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b08889882442e6b36fe49033fa658ec6cc489199/comments", "author": null, "committer": null, "parents": [{"sha": "90a747032a88e99270a882e1d33a87fd55ef8520", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90a747032a88e99270a882e1d33a87fd55ef8520", "html_url": "https://github.com/Rust-GCC/gccrs/commit/90a747032a88e99270a882e1d33a87fd55ef8520"}], "stats": {"total": 74, "additions": 56, "deletions": 18}, "files": [{"sha": "7f44b557e9094dbbabf86c5fd408fe064a5b86b2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b08889882442e6b36fe49033fa658ec6cc489199/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b08889882442e6b36fe49033fa658ec6cc489199/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b08889882442e6b36fe49033fa658ec6cc489199", "patch": "@@ -1,3 +1,15 @@\n+2001-01-05  Richard Earnshaw  <rearnsha@arm.com>\n+\n+\t* arm.md (ldmsi_postinc): Avoid use of match_dup between input and\n+\toutput operands.  Use arm_hard_register_operand for operand 4.\n+\t(stmsi_postinc): Similarly.\n+\t(ldmsi): Use arm_hard_register_operand for opernand 2.\n+\t(stmsi): Similarly.\n+\t* arm.c (arm_hard_register_operand): New function.\n+\t* arm-protos.h (arm_hard_register_operand): Prototype it.\n+\n+\t* arm.h (HARD_REGNO_RENAME_OK): Define.\n+\n Fri Jan  5 16:29:49 MET 2001  Jan Hubicka  <jh@suse.cz>\n \n \t* simplify-rtx.c (cfc_args): add \"unordered\" field."}, {"sha": "087d8cdb61f84a9367bc745fea162d2816c0feac", "filename": "gcc/config/arm/arm-protos.h", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b08889882442e6b36fe49033fa658ec6cc489199/gcc%2Fconfig%2Farm%2Farm-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b08889882442e6b36fe49033fa658ec6cc489199/gcc%2Fconfig%2Farm%2Farm-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-protos.h?ref=b08889882442e6b36fe49033fa658ec6cc489199", "patch": "@@ -1,5 +1,5 @@\n /* Prototypes for exported functions defined in arm.c and pe.c\n-   Copyright (C) 1999, 2000 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2000, 2001 Free Software Foundation, Inc.\n    Contributed by Richard Earnshaw (rearnsha@arm.com)\n    Minor hacks by Nick Clifton (nickc@cygnus.com)\n \n@@ -60,6 +60,7 @@ extern int    neg_const_double_rtx_ok_for_fpu\tPARAMS ((rtx));\n \n /* Predicates.  */\n extern int    s_register_operand\tPARAMS ((rtx, enum machine_mode));\n+extern int    arm_hard_register_operand\tPARAMS ((rtx, enum machine_mode));\n extern int    f_register_operand\tPARAMS ((rtx, enum machine_mode));\n extern int    reg_or_int_operand\tPARAMS ((rtx, enum machine_mode));\n extern int    arm_reload_memory_operand\tPARAMS ((rtx, enum machine_mode));\n@@ -129,6 +130,7 @@ extern const char * output_return_instruction PARAMS ((rtx, int, int));\n extern void   arm_poke_function_name\tPARAMS ((FILE *, char *));\n extern void   output_arm_prologue\tPARAMS ((FILE *, int));\n extern void   arm_print_operand\t\tPARAMS ((FILE *, rtx, int));\n+extern void   arm_print_operand_address\tPARAMS ((FILE *, rtx));\n extern void   arm_final_prescan_insn\tPARAMS ((rtx));\n extern int    arm_go_if_legitimate_address PARAMS ((enum machine_mode, rtx));\n extern int    arm_debugger_arg_offset\tPARAMS ((int, rtx));"}, {"sha": "16479d4fba733566a6da48ee6cc4db8f4e7bfc26", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b08889882442e6b36fe49033fa658ec6cc489199/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b08889882442e6b36fe49033fa658ec6cc489199/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=b08889882442e6b36fe49033fa658ec6cc489199", "patch": "@@ -1,5 +1,5 @@\n /* Output routines for GCC for ARM.\n-   Copyright (C) 1991, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000\n+   Copyright (C) 1991, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001\n    Free Software Foundation, Inc.\n    Contributed by Pieter `Tiggr' Schoenmakers (rcpieter@win.tue.nl)\n    and Martin Simmons (@harleqn.co.uk).\n@@ -2861,6 +2861,19 @@ s_register_operand (op, mode)\n \t      || REGNO_REG_CLASS (REGNO (op)) != NO_REGS));\n }\n \n+/* A hard register operand (even before reload.  */\n+int\n+arm_hard_register_operand (op, mode)\n+     register rtx op;\n+     enum machine_mode mode;\n+{\n+  if (GET_MODE (op) != mode && mode != VOIDmode)\n+    return 0;\n+\n+  return (GET_CODE (op) == REG\n+\t  && REGNO (op) < FIRST_PSEUDO_REGISTER);\n+}\n+    \n /* Only accept reg, subreg(reg), const_int.  */\n \n int"}, {"sha": "43d31386b3a7ae2b72e80eca1c0ee61bc1e44be4", "filename": "gcc/config/arm/arm.h", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b08889882442e6b36fe49033fa658ec6cc489199/gcc%2Fconfig%2Farm%2Farm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b08889882442e6b36fe49033fa658ec6cc489199/gcc%2Fconfig%2Farm%2Farm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.h?ref=b08889882442e6b36fe49033fa658ec6cc489199", "patch": "@@ -1319,6 +1319,17 @@ enum reg_class\n    :\t\t\t\t\t\t\t\\\n    ((FROM) == HI_REGS || (TO) == HI_REGS) ? 4 : 2)\n \f\n+/* Register Renaming Parameters.  */\n+\n+/* A C expression that is nonzero if hard register number TO can be\n+   considered for use as a rename register for FROM.\n+\n+   If the return register isn't already live, we mustn't use it.  */\n+\n+#define HARD_REGNO_RENAME_OK(FROM,TO) \\\n+  ((TO) != LR_REGNUM || regs_ever_live[LR_REGNUM])\n+\n+\f\n /* Stack layout; function entry, exit and calling.  */\n \n /* Define this if pushing a word on the stack"}, {"sha": "d391dae6f6b351961536f091c763cb2d4f427e36", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b08889882442e6b36fe49033fa658ec6cc489199/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b08889882442e6b36fe49033fa658ec6cc489199/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=b08889882442e6b36fe49033fa658ec6cc489199", "patch": "@@ -1,5 +1,5 @@\n ;;- Machine description for ARM for GNU compiler\n-;;  Copyright 1991, 1993, 1994, 1995, 1996, 1996, 1997, 1998, 1999, 2000\n+;;  Copyright 1991, 1993, 1994, 1995, 1996, 1996, 1997, 1998, 1999, 2000, 2001\n ;;  Free Software Foundation, Inc.\n ;;  Contributed by Pieter `Tiggr' Schoenmakers (rcpieter@win.tue.nl)\n ;;  and Martin Simmons (@harleqn.co.uk).\n@@ -5187,12 +5187,12 @@\n \n (define_insn \"*ldmsi_postinc\"\n   [(match_parallel 0 \"load_multiple_operation\"\n-    [(set (match_operand:SI 1 \"s_register_operand\" \"+r\")\n-\t  (plus:SI (match_dup 1)\n-\t\t   (match_operand:SI 2 \"const_int_operand\" \"n\")))\n-     (set (match_operand:SI 3 \"s_register_operand\" \"=r\")\n-\t  (mem:SI (match_dup 1)))])]\n-  \"TARGET_ARM && (INTVAL (operands[2])  == 4 * (XVECLEN (operands[0], 0) - 1))\"\n+    [(set (match_operand:SI 1 \"s_register_operand\" \"=r\")\n+\t  (plus:SI (match_operand:SI 2 \"s_register_operand\" \"1\")\n+\t\t   (match_operand:SI 3 \"const_int_operand\" \"n\")))\n+     (set (match_operand:SI 4 \"arm_hard_register_operand\" \"\")\n+\t  (mem:SI (match_dup 2)))])]\n+  \"TARGET_ARM && (INTVAL (operands[3])  == 4 * (XVECLEN (operands[0], 0) - 1))\"\n   \"*\n   {\n     rtx ops[3];\n@@ -5214,7 +5214,7 @@\n \n (define_insn \"*ldmsi\"\n   [(match_parallel 0 \"load_multiple_operation\"\n-    [(set (match_operand:SI 1 \"s_register_operand\" \"=r\")\n+    [(set (match_operand:SI 1 \"arm_hard_register_operand\" \"\")\n \t  (mem:SI (match_operand:SI 2 \"s_register_operand\" \"r\")))])]\n   \"TARGET_ARM\"\n   \"*\n@@ -5263,12 +5263,12 @@\n \n (define_insn \"*stmsi_postinc\"\n   [(match_parallel 0 \"store_multiple_operation\"\n-    [(set (match_operand:SI 1 \"s_register_operand\" \"+r\")\n-\t  (plus:SI (match_dup 1)\n-\t\t   (match_operand:SI 2 \"const_int_operand\" \"n\")))\n-     (set (mem:SI (match_dup 1))\n-\t  (match_operand:SI 3 \"s_register_operand\" \"r\"))])]\n-  \"TARGET_ARM && (INTVAL (operands[2]) == 4 * (XVECLEN (operands[0], 0) - 1))\"\n+    [(set (match_operand:SI 1 \"s_register_operand\" \"=r\")\n+\t  (plus:SI (match_operand:SI 2 \"s_register_operand\" \"1\")\n+\t\t   (match_operand:SI 3 \"const_int_operand\" \"n\")))\n+     (set (mem:SI (match_dup 2))\n+\t  (match_operand:SI 4 \"arm_hard_register_operand\" \"\"))])]\n+  \"TARGET_ARM && (INTVAL (operands[3]) == 4 * (XVECLEN (operands[0], 0) - 1))\"\n   \"*\n   {\n     rtx ops[3];\n@@ -5295,8 +5295,8 @@\n \n (define_insn \"*stmsi\"\n   [(match_parallel 0 \"store_multiple_operation\"\n-    [(set (mem:SI (match_operand:SI 2 \"s_register_operand\" \"r\"))\n-\t  (match_operand:SI 1 \"s_register_operand\" \"r\"))])]\n+    [(set (mem:SI (match_operand:SI 1 \"s_register_operand\" \"r\"))\n+\t  (match_operand:SI 2 \"arm_hard_register_operand\" \"\"))])]\n   \"TARGET_ARM\"\n   \"*\n   {"}]}