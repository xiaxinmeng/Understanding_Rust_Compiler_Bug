{"sha": "16a1d8fe2955c301ae61a13c4cbf8bd2c83d17f0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTZhMWQ4ZmUyOTU1YzMwMWFlNjFhMTNjNGNiZjhiZDJjODNkMTdmMA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2013-07-22T19:43:27Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2013-07-22T19:43:27Z"}, "message": "re PR libstdc++/57914 (Memory leak in __cxa_thread_atexit when using thread_local)\n\n\tPR libstdc++/57914\n\t* libsupc++/atexit_thread.cc (run): Delete cleanup elts.\n\nFrom-SVN: r201146", "tree": {"sha": "700a56f1839927ca984c08e54562bdacd88d23ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/700a56f1839927ca984c08e54562bdacd88d23ea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/16a1d8fe2955c301ae61a13c4cbf8bd2c83d17f0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16a1d8fe2955c301ae61a13c4cbf8bd2c83d17f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16a1d8fe2955c301ae61a13c4cbf8bd2c83d17f0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16a1d8fe2955c301ae61a13c4cbf8bd2c83d17f0/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fb4149396a6445e2cb9a16faa64c9b2231719955", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb4149396a6445e2cb9a16faa64c9b2231719955", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb4149396a6445e2cb9a16faa64c9b2231719955"}], "stats": {"total": 24, "additions": 20, "deletions": 4}, "files": [{"sha": "879fd617aebb7e157de6d67bbdf374f339c36b81", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16a1d8fe2955c301ae61a13c4cbf8bd2c83d17f0/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16a1d8fe2955c301ae61a13c4cbf8bd2c83d17f0/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=16a1d8fe2955c301ae61a13c4cbf8bd2c83d17f0", "patch": "@@ -1,3 +1,8 @@\n+2013-07-22  Jason Merrill  <jason@redhat.com>\n+\n+\tPR libstdc++/57914\n+\t* libsupc++/atexit_thread.cc (run): Delete cleanup elts.\n+\n 2013-07-22  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/57920"}, {"sha": "11f1dbdeac4a4655cac5f3c57f74695b38e7dc9d", "filename": "libstdc++-v3/libsupc++/atexit_thread.cc", "status": "modified", "additions": 15, "deletions": 4, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16a1d8fe2955c301ae61a13c4cbf8bd2c83d17f0/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fatexit_thread.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16a1d8fe2955c301ae61a13c4cbf8bd2c83d17f0/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fatexit_thread.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fatexit_thread.cc?ref=16a1d8fe2955c301ae61a13c4cbf8bd2c83d17f0", "patch": "@@ -58,18 +58,29 @@ namespace {\n   void run (void *p)\n   {\n     elt *e = static_cast<elt*>(p);\n-    for (; e; e = e->next)\n-      e->destructor (e->object);\n+    while (e)\n+      {\n+\telt *old_e = e;\n+\te->destructor (e->object);\n+\te = e->next;\n+\tdelete (old_e);\n+      }\n   }\n \n   // Run the stack of cleanups for the current thread.\n   void run ()\n   {\n     void *e;\n     if (__gthread_active_p ())\n-      e = __gthread_getspecific (key);\n+      {\n+\te = __gthread_getspecific (key);\n+\t__gthread_setspecific (key, NULL);\n+      }\n     else\n-      e = single_thread;\n+      {\n+\te = single_thread;\n+\tsingle_thread = NULL;\n+      }\n     run (e);\n   }\n "}]}