{"sha": "a2c2dcc6ca205a8c5c76b04ef2eb4fb097dcb069", "node_id": "C_kwDOANBUbNoAKGEyYzJkY2M2Y2EyMDVhOGM1Yzc2YjA0ZWYyZWI0ZmIwOTdkY2IwNjk", "commit": {"author": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2021-10-21T01:34:18Z"}, "committer": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2021-10-21T01:34:18Z"}, "message": "libstdc++: Implement LWG 3481 change to ranges::viewable_range\n\nlibstdc++-v3/ChangeLog:\n\n\t* include/bits/ranges_base.h (viewable_range): Adjust as per\n\tLWG 3481.\n\t* testsuite/std/ranges/adaptors/all.cc (test07): New test.", "tree": {"sha": "613a9b16d9b5da3ac11c73b49b5c8532b18dd6b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/613a9b16d9b5da3ac11c73b49b5c8532b18dd6b9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a2c2dcc6ca205a8c5c76b04ef2eb4fb097dcb069", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2c2dcc6ca205a8c5c76b04ef2eb4fb097dcb069", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2c2dcc6ca205a8c5c76b04ef2eb4fb097dcb069", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2c2dcc6ca205a8c5c76b04ef2eb4fb097dcb069/comments", "author": null, "committer": null, "parents": [{"sha": "0fac85a24f40ef6098b756e8e8655205f4bfbf3e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0fac85a24f40ef6098b756e8e8655205f4bfbf3e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0fac85a24f40ef6098b756e8e8655205f4bfbf3e"}], "stats": {"total": 18, "additions": 17, "deletions": 1}, "files": [{"sha": "43b0b9f7bf3044ceb44351fb14649e95be097703", "filename": "libstdc++-v3/include/bits/ranges_base.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2c2dcc6ca205a8c5c76b04ef2eb4fb097dcb069/libstdc%2B%2B-v3%2Finclude%2Fbits%2Franges_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2c2dcc6ca205a8c5c76b04ef2eb4fb097dcb069/libstdc%2B%2B-v3%2Finclude%2Fbits%2Franges_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Franges_base.h?ref=a2c2dcc6ca205a8c5c76b04ef2eb4fb097dcb069", "patch": "@@ -688,7 +688,8 @@ namespace ranges\n   /// A range which can be safely converted to a view.\n   template<typename _Tp>\n     concept viewable_range = range<_Tp>\n-      && (borrowed_range<_Tp> || view<remove_cvref_t<_Tp>>);\n+      && ((view<remove_cvref_t<_Tp>> && constructible_from<remove_cvref_t<_Tp>, _Tp>)\n+\t  || (!view<remove_cvref_t<_Tp>> && borrowed_range<_Tp>));\n \n   // [range.iter.ops] range iterator operations\n "}, {"sha": "ce1384c28901bdd672feb7f94383a146b5228ece", "filename": "libstdc++-v3/testsuite/std/ranges/adaptors/all.cc", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2c2dcc6ca205a8c5c76b04ef2eb4fb097dcb069/libstdc%2B%2B-v3%2Ftestsuite%2Fstd%2Franges%2Fadaptors%2Fall.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2c2dcc6ca205a8c5c76b04ef2eb4fb097dcb069/libstdc%2B%2B-v3%2Ftestsuite%2Fstd%2Franges%2Fadaptors%2Fall.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fstd%2Franges%2Fadaptors%2Fall.cc?ref=a2c2dcc6ca205a8c5c76b04ef2eb4fb097dcb069", "patch": "@@ -159,6 +159,20 @@ test06()\n   static_assert(!noexcept(views::all(BorrowedRange<false, false>(x))));\n }\n \n+void\n+test07()\n+{\n+  // LWG 3481\n+  struct view_t : ranges::empty_view<int> { // move-only view\n+    view_t(const view_t&) = delete;\n+    view_t(view_t&&) = default;\n+    view_t& operator=(const view_t&) = delete;\n+    view_t& operator=(view_t&&) = default;\n+  };\n+  static_assert(std::movable<view_t> && !std::copyable<view_t>);\n+  static_assert(!ranges::viewable_range<view_t&>);\n+}\n+\n int\n main()\n {\n@@ -168,4 +182,5 @@ main()\n   static_assert(test04());\n   test05();\n   test06();\n+  test07();\n }"}]}