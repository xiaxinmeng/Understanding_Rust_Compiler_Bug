{"sha": "22371ff356e90dd06b1bdbe097e246e3b63d7426", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjIzNzFmZjM1NmU5MGRkMDZiMWJkYmUwOTdlMjQ2ZTNiNjNkNzQyNg==", "commit": {"author": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1996-09-13T22:23:04Z"}, "committer": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1996-09-13T22:23:04Z"}, "message": "lb1spc.asm (.div): Fixed typo so sign is returned correctly.\n\n        * sparc/lb1spc.asm (.div): Fixed typo so sign is returned correctly.\n        TOPBITS was 2 and should have been 4.\n\t(.rem): Likewise.\n\nFrom-SVN: r12707", "tree": {"sha": "0937a72d039d76f0c45ae530a7cf0985ff3b3978", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0937a72d039d76f0c45ae530a7cf0985ff3b3978"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/22371ff356e90dd06b1bdbe097e246e3b63d7426", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22371ff356e90dd06b1bdbe097e246e3b63d7426", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22371ff356e90dd06b1bdbe097e246e3b63d7426", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22371ff356e90dd06b1bdbe097e246e3b63d7426/comments", "author": null, "committer": null, "parents": [{"sha": "a526200977c3bd00a8935f2336644a6728ddd958", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a526200977c3bd00a8935f2336644a6728ddd958", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a526200977c3bd00a8935f2336644a6728ddd958"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "ec9532d3ec08f2051f1d7ee0578053a89e386356", "filename": "gcc/config/sparc/lb1spc.asm", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22371ff356e90dd06b1bdbe097e246e3b63d7426/gcc%2Fconfig%2Fsparc%2Flb1spc.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22371ff356e90dd06b1bdbe097e246e3b63d7426/gcc%2Fconfig%2Fsparc%2Flb1spc.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Flb1spc.asm?ref=22371ff356e90dd06b1bdbe097e246e3b63d7426", "patch": "@@ -87,14 +87,14 @@ mul_shortway:\n .udiv:\n \tsave\t%sp, -64, %sp\n \tb\tdivide\n-\tmov\t0, %i2\t\t! result always positive\n+\tmov\t0, %l2\t\t! result always positive\n \t.global .div\n \t.proc 4\n .div:\n \tsave\t%sp, -64, %sp\n \torcc\t%i1, %i0, %g0\t! is either operand negative\n \tbge\tdivide\t\t! if not, skip this junk\n-\txor\t%i1, %i0, %i2\t! record sign of result in sign of %i2\n+\txor\t%i1, %i0, %l2\t! record sign of result in sign of %l2\n \ttst\t%i1\n \tbge\t2f\n \ttst\t%i0\n@@ -110,7 +110,7 @@ divide:\n \tte\t2\t\t\t! if %i1 = 0\n \tmov\t%i0, %i3\n \tmov\t0, %i2\n-\tsethi\t%hi(1<<(32-2-1)), %l3\n+\tsethi\t%hi(1<<(32-4-1)), %l3\n \tcmp \t%i3, %l3\n \tblu\tnot_really_big\n \tmov\t0, %l0\n@@ -137,7 +137,7 @@ divide:\n \t! We are here if the %i1 overflowed when Shifting.\n \t! This means that %i3 has the high-order bit set.\n \t! Restore %l1 and subtract from %i3.\n-\tsll\t%l3, 2, %l3\n+\tsll\t%l3, 4, %l3\n \tsrl\t%l1, 1, %l1\n \tadd\t%l1, %l3, %l1\n \tb\tdo_single_div\n@@ -271,7 +271,7 @@ end_regular_divide:\n \t! non-restoring fixup here\n \tdec\t%i2\n got_result:\n-\ttst\t%i2\n+\ttst\t%l2\n \tbge\t1f\n \trestore\n \t! answer < 0\n@@ -289,14 +289,14 @@ got_result:\n .urem:\n \tsave\t%sp, -64, %sp\n \tb\tdivide\n-\tmov\t0, %i2\t\t! result always positive\n+\tmov\t0, %l2\t\t! result always positive\n \t.global .rem\n \t.proc 4\n .rem:\n \tsave\t%sp, -64, %sp\n \torcc\t%i1, %i0, %g0\t! is either operand negative\n \tbge\tdivide\t\t! if not, skip this junk\n-\tmov\t%i0, %i2\t! record sign of result in sign of %i2\n+\tmov\t%i0, %l2\t! record sign of result in sign of %i2\n \ttst\t%i1\n \tbge\t2f\n \ttst\t%i0\n@@ -312,7 +312,7 @@ divide:\n \tte\t2\t\t\t! if %i1 = 0\n \tmov\t%i0, %i3\n \tmov\t0, %i2\n-\tsethi\t%hi(1<<(32-2-1)), %l3\n+\tsethi\t%hi(1<<(32-4-1)), %l3\n \tcmp \t%i3, %l3\n \tblu\tnot_really_big\n \tmov\t0, %l0\n@@ -339,7 +339,7 @@ divide:\n \t! We are here if the %i1 overflowed when Shifting.\n \t! This means that %i3 has the high-order bit set.\n \t! Restore %l1 and subtract from %i3.\n-\tsll\t%l3, 2, %l3\n+\tsll\t%l3, 4, %l3\n \tsrl\t%l1, 1, %l1\n \tadd\t%l1, %l3, %l1\n \tb\tdo_single_div\n@@ -473,7 +473,7 @@ end_regular_divide:\n \t! non-restoring fixup here\n \tadd\t%i3, %i1, %i3\n got_result:\n-\ttst\t%i2\n+\ttst\t%l2\n \tbge\t1f\n \trestore\n \t! answer < 0"}]}