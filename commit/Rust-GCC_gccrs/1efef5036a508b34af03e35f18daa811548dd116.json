{"sha": "1efef5036a508b34af03e35f18daa811548dd116", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWVmZWY1MDM2YTUwOGIzNGFmMDNlMzVmMThkYWE4MTE1NDhkZDExNg==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@gnu.org", "date": "2000-08-21T07:11:38Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2000-08-21T07:11:38Z"}, "message": "string-inst.cc: Tweak instantiations for new-gxx-abi.\n\n\n2000-08-20  Benjamin Kosnik  <bkoz@gnu.org>\n\n\t* src/string-inst.cc: Tweak instantiations for new-gxx-abi.\n\nFrom-SVN: r35831", "tree": {"sha": "080a508a5337ad33ff00e72c0e7299d341f8fab5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/080a508a5337ad33ff00e72c0e7299d341f8fab5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1efef5036a508b34af03e35f18daa811548dd116", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1efef5036a508b34af03e35f18daa811548dd116", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1efef5036a508b34af03e35f18daa811548dd116", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1efef5036a508b34af03e35f18daa811548dd116/comments", "author": {"login": "bdekoz", "id": 997439, "node_id": "MDQ6VXNlcjk5NzQzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/997439?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bdekoz", "html_url": "https://github.com/bdekoz", "followers_url": "https://api.github.com/users/bdekoz/followers", "following_url": "https://api.github.com/users/bdekoz/following{/other_user}", "gists_url": "https://api.github.com/users/bdekoz/gists{/gist_id}", "starred_url": "https://api.github.com/users/bdekoz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bdekoz/subscriptions", "organizations_url": "https://api.github.com/users/bdekoz/orgs", "repos_url": "https://api.github.com/users/bdekoz/repos", "events_url": "https://api.github.com/users/bdekoz/events{/privacy}", "received_events_url": "https://api.github.com/users/bdekoz/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d832fd8147f4266cda69144ff0b171a6c9e4a76e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d832fd8147f4266cda69144ff0b171a6c9e4a76e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d832fd8147f4266cda69144ff0b171a6c9e4a76e"}], "stats": {"total": 46, "additions": 24, "deletions": 22}, "files": [{"sha": "83b391580bd38488944a98e3d7fedffa01469f86", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1efef5036a508b34af03e35f18daa811548dd116/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1efef5036a508b34af03e35f18daa811548dd116/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=1efef5036a508b34af03e35f18daa811548dd116", "patch": "@@ -1,3 +1,7 @@\n+2000-08-20  Benjamin Kosnik  <bkoz@gnu.org>\n+\n+\t* src/string-inst.cc: Tweak instantiations for new-gxx-abi.\n+\n 2000-08-19  Gabriel Dos Reis  <gdr@codesourcery.com>\n \n \t* bits/valarray_array.h (__valarray_min, __valarray_max): Fix"}, {"sha": "425413ad5613b6899d56608b92259b4b302c7a03", "filename": "libstdc++-v3/src/string-inst.cc", "status": "modified", "additions": 20, "deletions": 22, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1efef5036a508b34af03e35f18daa811548dd116/libstdc%2B%2B-v3%2Fsrc%2Fstring-inst.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1efef5036a508b34af03e35f18daa811548dd116/libstdc%2B%2B-v3%2Fsrc%2Fstring-inst.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fstring-inst.cc?ref=1efef5036a508b34af03e35f18daa811548dd116", "patch": "@@ -50,45 +50,43 @@ namespace std\n   template C S::_Rep::_S_terminal;\n   template S::size_type S::_Rep::_S_max_size;\n   template S::size_type S::_S_empty_rep_storage[];\n-\n-  template S::basic_string(S const&);\n   template S::_Rep* S::_Rep::_S_create(size_t, S::allocator_type const&);\n-  template void S::_Rep::_M_destroy(S::allocator_type const&) throw();\n+  template void S::_Rep::_M_destroy(const S::allocator_type&) throw();\n   template void __destroy_aux(S*, S*, __false_type);\n \n+  template S::basic_string(S const&);\n+\n   template \n-    S::basic_string(S::size_type, C, S::allocator_type const&);\n+    S::basic_string(S::size_type, C, const S::allocator_type&);\n \n   template \n-    S::basic_string(S::allocator_type const&);\n+    S::basic_string(const S::allocator_type&);\n \n   template \n-    S::basic_string(S const&, S::size_type, S::size_type);\n+    S::basic_string(const S&, S::size_type, S::size_type);\n \n   template \n-    S::basic_string(\n-      S const&, S::size_type, S::size_type, S::allocator_type const&);\n+    S::basic_string(const S&, S::size_type, S::size_type, \n+\t\t    const S::allocator_type&);\n \n   template \n-    S::basic_string(\n-      C const*, S::size_type, S::allocator_type const&);\n+    S::basic_string(C const*, S::size_type, const S::allocator_type&);\n \n   template \n-    S::basic_string(\n-      C const*, S::allocator_type const&);\n+    S::basic_string(C const*, S::allocator_type const&);\n \n   template \n-    S::basic_string\n-    (C*, C*, const allocator<C>&);\n+    S::basic_string(C*, C*, const allocator<C>&);\n \n   template \n-    S::basic_string\n-    (S::iterator, S::iterator, const allocator<C>&);\n+    S::basic_string(S::iterator, S::iterator, const allocator<C>&);\n \n   template\n     void S::_M_leak_hard();\n+\n   template\n     void S::_M_mutate(S::size_type, S::size_type, S::size_type);\n+\n   template\n     C* S::_Rep::_M_clone(S::allocator_type const&, S::size_type);\n \n@@ -101,6 +99,7 @@ namespace std\n # ifdef _GLIBCPP_ALLOC_CONTROL\n     template\n       bool (* S::_Rep::_S_excess_slop)(size_t, size_t); \n+\n     template\n       bool S::_Rep::_S_default_excess(size_t, size_t); \n # endif\n@@ -122,26 +121,24 @@ namespace std\n \n   template \n     S& \n-    S::append<S::iterator>\n-    (S::iterator, S::iterator);\n+    S::append<S::iterator>(S::iterator, S::iterator);\n \n   template\n     S& \n     S::assign(S const&);\n \n   template \n     S& \n-    S::assign<S::iterator>\n-    (S::iterator, S::iterator);\n+    S::assign<S::iterator>(S::iterator, S::iterator);\n \n   template \n     void\n     S::insert<S::iterator> //c*\n     (S::iterator, S::iterator, S::iterator); //it, c+, c+ and temptype = char*\n \n   template\n-    S& S::replace(\n-      S::size_type, S::size_type, S const&, S::size_type, S::size_type);\n+    S& S::replace(S::size_type, S::size_type, S const&, \n+\t\t  S::size_type, S::size_type);\n \n   template \n     S& S::replace(S::iterator, S::iterator, S::size_type, C);\n@@ -275,3 +272,4 @@ namespace std\n \n \n \n+"}]}