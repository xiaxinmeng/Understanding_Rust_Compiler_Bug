{"sha": "5f431007f1a4d5a23578bbef6cbe7b4402bbb40e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWY0MzEwMDdmMWE0ZDVhMjM1NzhiYmVmNmNiZTdiNDQwMmJiYjQwZQ==", "commit": {"author": {"name": "Mircea Namolaru", "email": "namolaru@il.ibm.com", "date": "2006-05-30T07:53:02Z"}, "committer": {"name": "Olga Golovanevsky", "email": "olga@gcc.gnu.org", "date": "2006-05-30T07:53:02Z"}, "message": "fix for see\n\nFrom-SVN: r114230", "tree": {"sha": "1bb4924799172a87305974be9521497fb6a0ad2b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1bb4924799172a87305974be9521497fb6a0ad2b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5f431007f1a4d5a23578bbef6cbe7b4402bbb40e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f431007f1a4d5a23578bbef6cbe7b4402bbb40e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f431007f1a4d5a23578bbef6cbe7b4402bbb40e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f431007f1a4d5a23578bbef6cbe7b4402bbb40e/comments", "author": null, "committer": null, "parents": [{"sha": "55b2de7516de84ee94926fd4466ceb34c49a93c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55b2de7516de84ee94926fd4466ceb34c49a93c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/55b2de7516de84ee94926fd4466ceb34c49a93c3"}], "stats": {"total": 12, "additions": 10, "deletions": 2}, "files": [{"sha": "d20cdf4be28799a014922164e5db44df81065d34", "filename": "gcc/see.c", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f431007f1a4d5a23578bbef6cbe7b4402bbb40e/gcc%2Fsee.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f431007f1a4d5a23578bbef6cbe7b4402bbb40e/gcc%2Fsee.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsee.c?ref=5f431007f1a4d5a23578bbef6cbe7b4402bbb40e", "patch": "@@ -674,6 +674,10 @@ see_get_extension_reg (rtx extension, bool return_dest_reg)\n   rtx reg1 = NULL;\n   rtx reg2 = NULL;\n \n+  /* Parallel pattern for extension not supported for the moment.  */\n+  if (GET_CODE (PATTERN (extension)) == PARALLEL)\n+    return NULL;\n+\n   set = single_set (extension);\n   if (!set)\n     return NULL;\n@@ -719,6 +723,10 @@ see_get_extension_data (rtx extension, enum machine_mode *source_mode)\n   if (!extension || !INSN_P (extension))\n     return UNKNOWN;\n \n+  /* Parallel pattern for extension not supported for the moment.  */\n+  if (GET_CODE (PATTERN (extension)) == PARALLEL)\n+    return NOT_RELEVANT;\n+\n   set = single_set (extension);\n   if (!set)\n     return NOT_RELEVANT;\n@@ -3462,8 +3470,8 @@ see_analyze_one_def (rtx insn, enum machine_mode *source_mode,\n \t relevant.  Handling this extension as relevant would make things much\n \t more complicated.  */\n       next_insn = NEXT_INSN (insn);\n-      if (prev_insn\n-\t  && INSN_P (prev_insn)\n+      if (next_insn\n+\t  && INSN_P (next_insn)\n \t  && (see_get_extension_data (next_insn, &next_source_mode) !=\n \t      NOT_RELEVANT))\n \t{"}]}