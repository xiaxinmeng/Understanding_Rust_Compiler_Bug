{"sha": "78a4cb56a0f6fd46d469e6835fac6216ff91e29d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzhhNGNiNTZhMGY2ZmQ0NmQ0NjllNjgzNWZhYzYyMTZmZjkxZTI5ZA==", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2021-01-08T18:53:41Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-05-05T08:18:59Z"}, "message": "[Ada] Remove unnecessary parameter of Apply_Compile_Time_Constraint_Error\n\ngcc/ada/\n\n\t* sem_util.ads (Apply_Compile_Time_Constraint_Error): Remove\n\tparameter Rep from the function spec and \"and if the flag Rep is\n\tset\" from the comment.\n\t* sem_util.adb (Apply_Compile_Time_Constraint_Error): Remove\n\tparameter Rep.", "tree": {"sha": "c0b094953b0743af90c13a5e81629ac44b80c1a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c0b094953b0743af90c13a5e81629ac44b80c1a3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/78a4cb56a0f6fd46d469e6835fac6216ff91e29d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78a4cb56a0f6fd46d469e6835fac6216ff91e29d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78a4cb56a0f6fd46d469e6835fac6216ff91e29d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78a4cb56a0f6fd46d469e6835fac6216ff91e29d/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d4780139532eefbccd8a52baf5206a0b08e851e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4780139532eefbccd8a52baf5206a0b08e851e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d4780139532eefbccd8a52baf5206a0b08e851e9"}], "stats": {"total": 33, "additions": 15, "deletions": 18}, "files": [{"sha": "e64c5452225aa80deb90e24e5add3f80331e1137", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78a4cb56a0f6fd46d469e6835fac6216ff91e29d/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78a4cb56a0f6fd46d469e6835fac6216ff91e29d/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=78a4cb56a0f6fd46d469e6835fac6216ff91e29d", "patch": "@@ -1412,7 +1412,6 @@ package body Sem_Util is\n       Ent    : Entity_Id  := Empty;\n       Typ    : Entity_Id  := Empty;\n       Loc    : Source_Ptr := No_Location;\n-      Rep    : Boolean    := True;\n       Warn   : Boolean    := False)\n    is\n       Stat   : constant Boolean := Is_Static_Expression (N);\n@@ -1436,7 +1435,7 @@ package body Sem_Util is\n       --  a few cases where a suitable check flag is set for GNATprove to\n       --  generate a check message.\n \n-      if not Rep or GNATprove_Mode then\n+      if GNATprove_Mode then\n          return;\n       end if;\n "}, {"sha": "ec4704d1b2ac3ba31eb47b7b4f0266d8e52cc73f", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 14, "deletions": 16, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78a4cb56a0f6fd46d469e6835fac6216ff91e29d/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78a4cb56a0f6fd46d469e6835fac6216ff91e29d/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=78a4cb56a0f6fd46d469e6835fac6216ff91e29d", "patch": "@@ -162,7 +162,6 @@ package Sem_Util is\n       Ent    : Entity_Id  := Empty;\n       Typ    : Entity_Id  := Empty;\n       Loc    : Source_Ptr := No_Location;\n-      Rep    : Boolean    := True;\n       Warn   : Boolean    := False);\n    --  N is a subexpression that will raise Constraint_Error when evaluated\n    --  at run time. Msg is a message that explains the reason for raising the\n@@ -171,21 +170,20 @@ package Sem_Util is\n    --  (because of violation of static expression rules) in Ada 95 (but not\n    --  in Ada 83). Typically this routine posts all messages at the Sloc of\n    --  node N. However, if Loc /= No_Location, Loc is the Sloc used to output\n-   --  the message. After posting the appropriate message, and if the flag\n-   --  Rep is set, this routine replaces the expression with an appropriate\n-   --  N_Raise_Constraint_Error node using the given Reason code. This node\n-   --  is then marked as being static if the original node is static, but\n-   --  sets the flag Raises_Constraint_Error, preventing further evaluation.\n-   --  The error message may contain a } or & insertion character. This\n-   --  normally references Etype (N), unless the Ent argument is given\n-   --  explicitly, in which case it is used instead. The type of the raise\n-   --  node that is built is normally Etype (N), but if the Typ parameter\n-   --  is present, this is used instead. Warn is normally False. If it is\n-   --  True then the message is treated as a warning even though it does\n-   --  not end with a ? (this is used when the caller wants to parameterize\n-   --  whether an error or warning is given), or when the message should be\n-   --  treated as a warning even when SPARK_Mode is On (which otherwise would\n-   --  force an error).\n+   --  the message. After posting the appropriate message, this routine\n+   --  replaces the expression with an appropriate N_Raise_Constraint_Error\n+   --  node using the given Reason code. This node is then marked as being\n+   --  static if the original node is static, but sets the flag\n+   --  Raises_Constraint_Error, preventing further evaluation. The error\n+   --  message may contain a } or & insertion character. This normally\n+   --  references Etype (N), unless the Ent argument is given explicitly, in\n+   --  which case it is used instead. The type of the raise node that is built\n+   --  is normally Etype (N), but if the Typ parameter is present, this is used\n+   --  instead. Warn is normally False. If it is True then the message is\n+   --  treated as a warning even though it does not end with a ? (this is used\n+   --  when the caller wants to parameterize whether an error or warning is\n+   --  given), or when the message should be treated as a warning even when\n+   --  SPARK_Mode is On (which otherwise would force an error).\n \n    function Async_Readers_Enabled (Id : Entity_Id) return Boolean;\n    --  Id should be the entity of a state abstraction, an object, or a type."}]}