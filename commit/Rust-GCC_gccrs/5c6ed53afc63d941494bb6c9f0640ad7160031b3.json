{"sha": "5c6ed53afc63d941494bb6c9f0640ad7160031b3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWM2ZWQ1M2FmYzYzZDk0MTQ5NGJiNmM5ZjA2NDBhZDcxNjAwMzFiMw==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2008-11-04T18:16:17Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2008-11-04T18:16:17Z"}, "message": "re PR libgomp/37935 (omp_set_schedule not documented in libgomp.texi)\n\n2008-11-04  Tobias Burnus  <burnus@net-b.de>\n\n        PR libgomp/37935\n        * libgomp.texi (Runtime library routines, environment\n        * variables):\n        Update for OpenMP version 3.0.\n\nFrom-SVN: r141583", "tree": {"sha": "865b3c519ac9d0df0b5dcd05badf877c3f45f6a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/865b3c519ac9d0df0b5dcd05badf877c3f45f6a5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5c6ed53afc63d941494bb6c9f0640ad7160031b3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c6ed53afc63d941494bb6c9f0640ad7160031b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c6ed53afc63d941494bb6c9f0640ad7160031b3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c6ed53afc63d941494bb6c9f0640ad7160031b3/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d793c2a59404318d082c3f78590734f82e24497c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d793c2a59404318d082c3f78590734f82e24497c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d793c2a59404318d082c3f78590734f82e24497c"}], "stats": {"total": 473, "additions": 413, "deletions": 60}, "files": [{"sha": "bc2f3a8e09db3e621d50835a1fc29fe2718bf5f3", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c6ed53afc63d941494bb6c9f0640ad7160031b3/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c6ed53afc63d941494bb6c9f0640ad7160031b3/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=5c6ed53afc63d941494bb6c9f0640ad7160031b3", "patch": "@@ -1,3 +1,9 @@\n+2008-11-04  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR libgomp/37935\n+\t* libgomp.texi (Runtime library routines, environment variables):\n+\tUpdate for OpenMP version 3.0.\n+\n 2008-09-26  Peter O'Gorman  <pogma@thewrittenword.com>\n \t    Steve Ellcey  <sje@cup.hp.com>\n "}, {"sha": "5e68aad62abb05c5f4080d14506c2e250976376d", "filename": "libgomp/libgomp.texi", "status": "modified", "additions": 407, "deletions": 60, "changes": 467, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c6ed53afc63d941494bb6c9f0640ad7160031b3/libgomp%2Flibgomp.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c6ed53afc63d941494bb6c9f0640ad7160031b3/libgomp%2Flibgomp.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Flibgomp.texi?ref=5c6ed53afc63d941494bb6c9f0640ad7160031b3", "patch": "@@ -116,7 +116,7 @@ arranges for automatic linking of the OpenMP runtime library\n \n A complete description of all OpenMP directives accepted may be found in \n the @uref{http://www.openmp.org, OpenMP Application Program Interface} manual,\n-version 2.5.\n+version 3.0.\n \n \n @c ---------------------------------------------------------------------\n@@ -127,21 +127,31 @@ version 2.5.\n @chapter Runtime Library Routines\n \n The runtime routines described here are defined by section 3 of the OpenMP \n-specifications in version 2.5.\n+specifications in version 3.0. The routines are structured in following\n+three parts:\n \n Control threads, processors and the parallel environment.\n \n @menu\n-* omp_get_dynamic::          Dynamic teams setting\n-* omp_get_max_threads::      Maximum number of threads\n-* omp_get_nested::           Nested parallel regions\n-* omp_get_num_procs::        Number of processors online\n-* omp_get_num_threads::      Size of the active team\n-* omp_get_thread_num::       Current thread ID\n-* omp_in_parallel::          Whether a parallel region is active\n-* omp_set_dynamic::          Enable/disable dynamic teams\n-* omp_set_nested::           Enable/disable nested parallel regions\n-* omp_set_num_threads::      Set upper team size limit\n+* omp_get_active_level::        Number of active parallel regions\n+* omp_get_ancestor_thread_num:: Ancestor thread ID\n+* omp_get_dynamic::             Dynamic teams setting\n+* omp_get_level::               Number of parallel regions\n+* omp_get_max_active_levels::   Maximal number of active regions\n+* omp_get_max_threads::         Maximal number of threads of parallel region\n+* omp_get_nested::              Nested parallel regions\n+* omp_get_num_procs::           Number of processors online\n+* omp_get_num_threads::         Size of the active team\n+* omp_get_schedule::            Obtain the runtime scheduling method\n+* omp_get_team_size::           Number of threads in a team\n+* omp_get_thread_limit::        Maximal number of threads\n+* omp_get_thread_num::          Current thread ID\n+* omp_in_parallel::             Whether a parallel region is active\n+* omp_set_dynamic::             Enable/disable dynamic teams\n+* omp_set_max_active_levels::   Limits the number of active parallel regions\n+* omp_set_nested::              Enable/disable nested parallel regions\n+* omp_set_num_threads::         Set upper team size limit\n+* omp_set_schedule::            Set the runtime scheduling method\n @end menu\n \n Initialize, set, test, unset and destroy simple and nested locks.\n@@ -166,6 +176,63 @@ Portable, thread-based, wall clock timer.\n * omp_get_wtime::            Elapsed wall clock time.\n @end menu\n \n+\n+\n+@node omp_get_active_level\n+@section @code{omp_get_active_level} -- Number of parallel regions\n+@table @asis\n+@item @emph{Description}:\n+This function returns the nesting level for the active parallel blocks,\n+which enclose the calling call.\n+\n+@item @emph{C/C++}\n+@multitable @columnfractions .20 .80\n+@item @emph{Prototype}: @tab @code{int omp_get_active_level();}\n+@end multitable\n+\n+@item @emph{Fortran}:\n+@multitable @columnfractions .20 .80\n+@item @emph{Interface}: @tab @code{integer omp_get_active_level()}\n+@end multitable\n+\n+@item @emph{See also}:\n+@ref{omp_get_level}, @ref{omp_get_max_active_levels}, @ref{omp_set_max_active_levels}\n+\n+@item @emph{Reference}:\n+@uref{http://www.openmp.org/, OpenMP specifications v3.0}, section 3.2.19.\n+@end table\n+\n+\n+\n+@node omp_get_ancestor_thread_num\n+@section @code{omp_get_ancestor_thread_num} -- Ancestor thread ID\n+@table @asis\n+@item @emph{Description}:\n+This function returns the thread identification number for the given\n+nesting level of the current thread. For values of @var{level} outside\n+zero to @code{omp_get_level} -1 is returned; if @var{level} is\n+@code{omp_get_level} the result is identical to @code{omp_get_thread_num}.\n+\n+@item @emph{C/C++}\n+@multitable @columnfractions .20 .80\n+@item @emph{Prototype}: @tab @code{int omp_get_ancestor_thread_num(int level);}\n+@end multitable\n+\n+@item @emph{Fortran}:\n+@multitable @columnfractions .20 .80\n+@item @emph{Interface}: @tab @code{integer omp_ancestor_thread_num(level)}\n+@item                   @tab @code{integer level}\n+@end multitable\n+\n+@item @emph{See also}:\n+@ref{omp_get_level}, @ref{omp_get_thread_num}, @ref{omp_get_team_size}\n+\n+@item @emph{Reference}:\n+@uref{http://www.openmp.org/, OpenMP specifications v3.0}, section 3.2.17.\n+@end table\n+\n+\n+\n @node omp_get_dynamic\n @section @code{omp_get_dynamic} -- Dynamic teams setting\n @table @asis\n@@ -193,17 +260,68 @@ disabled by default.\n @ref{omp_set_dynamic}, @ref{OMP_DYNAMIC}\n \n @item @emph{Reference}:\n-@uref{http://www.openmp.org/, OpenMP specifications v2.5}, section 3.2.8.\n+@uref{http://www.openmp.org/, OpenMP specifications v3.0}, section 3.2.8.\n+@end table\n+\n+\n+\n+@node omp_get_level\n+@section @code{omp_get_level} -- Obtain the current nesting level\n+@table @asis\n+@item @emph{Description}:\n+This function returns the nesting level for the parallel blocks,\n+which enclose the calling call.\n+\n+@item @emph{C/C++}\n+@multitable @columnfractions .20 .80\n+@item @emph{Prototype}: @tab @code{int omp_get level();}\n+@end multitable\n+\n+@item @emph{Fortran}:\n+@multitable @columnfractions .20 .80\n+@item @emph{Interface}: @tab @code{integer omp_level()}\n+@end multitable\n+\n+@item @emph{See also}:\n+@ref{omp_get_active_level}\n+\n+@item @emph{Reference}:\n+@uref{http://www.openmp.org/, OpenMP specifications v3.0}, section 3.2.16.\n+@end table\n+\n+\n+\n+@node omp_get_max_active_levels\n+@section @code{omp_set_max_active_levels} -- Maximal number of active regions\n+@table @asis\n+@item @emph{Description}:\n+This function obtains the maximally allowed number of nested, active parallel regions.\n+\n+@item @emph{C/C++}\n+@multitable @columnfractions .20 .80\n+@item @emph{Prototype}: @tab @code{int omp_get_max_active_levels();}\n+@end multitable\n+\n+@item @emph{Fortran}:\n+@multitable @columnfractions .20 .80\n+@item @emph{Interface}: @tab @code{int omp_get_max_active_levels()}\n+@end multitable\n+\n+@item @emph{See also}:\n+@ref{omp_set_max_active_levels}, @ref{omp_get_active_level}\n+\n+@item @emph{Reference}:\n+@uref{http://www.openmp.org/, OpenMP specifications v3.0}, section 3.2.14.\n @end table\n \n \n \n @node omp_get_max_threads\n-@section @code{omp_get_max_threads} -- Maximum number of threads\n+@section @code{omp_get_max_threads} -- Maximal number of threads of parallel region\n @table @asis\n @item @emph{Description}:\n-Return the maximum number of threads used for parallel regions that do\n-not use the clause @code{num_threads}.\n+Return the maximal number of threads used for the current parallel region\n+that does not use the clause @code{num_threads}.\n \n @item @emph{C/C++}:\n @multitable @columnfractions .20 .80\n@@ -216,10 +334,10 @@ not use the clause @code{num_threads}.\n @end multitable\n \n @item @emph{See also}:\n-@ref{omp_set_num_threads}, @ref{omp_set_dynamic}\n+@ref{omp_set_num_threads}, @ref{omp_set_dynamic}, @ref{omp_get_thread_limit}\n \n @item @emph{Reference}:\n-@uref{http://www.openmp.org/, OpenMP specifications v2.5}, section 3.2.3.\n+@uref{http://www.openmp.org/, OpenMP specifications v3.0}, section 3.2.3.\n @end table\n \n \n@@ -251,7 +369,7 @@ disabled by default.\n @ref{omp_set_nested}, @ref{OMP_NESTED}\n \n @item @emph{Reference}:\n-@uref{http://www.openmp.org/, OpenMP specifications v2.5}, section 3.2.10.\n+@uref{http://www.openmp.org/, OpenMP specifications v3.0}, section 3.2.10.\n @end table\n \n \n@@ -273,7 +391,7 @@ Returns the number of processors online.\n @end multitable\n \n @item @emph{Reference}:\n-@uref{http://www.openmp.org/, OpenMP specifications v2.5}, section 3.2.5.\n+@uref{http://www.openmp.org/, OpenMP specifications v3.0}, section 3.2.5.\n @end table\n \n \n@@ -306,7 +424,92 @@ one thread per CPU online is used.\n @ref{omp_get_max_threads}, @ref{omp_set_num_threads}, @ref{OMP_NUM_THREADS}\n \n @item @emph{Reference}:\n-@uref{http://www.openmp.org/, OpenMP specifications v2.5}, section 3.2.2.\n+@uref{http://www.openmp.org/, OpenMP specifications v3.0}, section 3.2.2.\n+@end table\n+\n+\n+\n+@node omp_get_schedule\n+@section @code{omp_get_schedule} -- Obtain the runtime scheduling method\n+@table @asis\n+@item @emph{Description}:\n+Obtain runtime the scheduling method. The @var{kind} argument will be\n+set to the value @code{omp_sched_static}, @code{omp_sched_dynamic},\n+@code{opm_sched_guided} or @code{auto}. The second argument, @var{modifier},\n+is set to the chunk size.\n+\n+@item @emph{C/C++}\n+@multitable @columnfractions .20 .80\n+@item @emph{Prototype}: @tab @code{omp_schedule(omp_sched_t * kind, int *modifier);}\n+@end multitable\n+\n+@item @emph{Fortran}:\n+@multitable @columnfractions .20 .80\n+@item @emph{Interface}: @tab @code{subroutine omp_schedule(kind, modifier)}\n+@item                   @tab @code{integer(kind=omp_sched_kind) kind}\n+@item                   @tab @code{integer modifier}\n+@end multitable\n+\n+@item @emph{See also}:\n+@ref{omp_set_schedule}, @ref{OMP_SCHEDULE}\n+\n+@item @emph{Reference}:\n+@uref{http://www.openmp.org/, OpenMP specifications v3.0}, section 3.2.12.\n+@end table\n+\n+\n+\n+@node omp_get_team_size\n+@section @code{omp_get_team_size} -- Number of threads in a team\n+@table @asis\n+@item @emph{Description}:\n+This function returns the number of threads in a thread team to which\n+either the current thread or its ancestor belongs. For values of @var{level}\n+outside zero to @code{omp_get_level} -1 is returned; if @var{level} is zero\n+1 is returned and for @code{omp_get_level} the result is identical\n+to @code{omp_get_num_threads}.\n+\n+@item @emph{C/C++}:\n+@multitable @columnfractions .20 .80\n+@item @emph{Prototype}: @tab @code{int omp_get_time_size(int level);}\n+@end multitable\n+\n+@item @emph{Fortran}:\n+@multitable @columnfractions .20 .80\n+@item @emph{Interface}: @tab @code{integer function omp_get_team_size(level)}\n+@item                   @tab @code{integer level}\n+@end multitable\n+\n+@item @emph{See also}:\n+@ref{omp_get_num_threads}, @ref{omp_get_level}, @ref{omp_get_ancestor_thread_num}\n+\n+@item @emph{Reference}:\n+@uref{http://www.openmp.org/, OpenMP specifications v3.0}, section 3.2.18.\n+@end table\n+\n+\n+\n+@node omp_get_thread_limit\n+@section @code{omp_get_thread_limit} -- Maximal number of threads\n+@table @asis\n+@item @emph{Description}:\n+Return the maximal number of threads of the program.\n+\n+@item @emph{C/C++}:\n+@multitable @columnfractions .20 .80\n+@item @emph{Prototype}: @tab @code{int omp_get_thread_limit();}\n+@end multitable\n+\n+@item @emph{Fortran}:\n+@multitable @columnfractions .20 .80\n+@item @emph{Interface}: @tab @code{integer function omp_get_thread_limit()}\n+@end multitable\n+\n+@item @emph{See also}:\n+@ref{omp_get_max_threads}, @ref{OMP_THREAD_LIMIT}\n+\n+@item @emph{Reference}:\n+@uref{http://www.openmp.org/, OpenMP specifications v3.0}, section 3.2.13.\n @end table\n \n \n@@ -315,9 +518,10 @@ one thread per CPU online is used.\n @section @code{omp_get_thread_num} -- Current thread ID\n @table @asis\n @item @emph{Description}:\n-Unique thread identification number. In a sequential parts of the program, \n-@code{omp_get_thread_num} always returns 0. In parallel regions the return\n-value varies from 0 to @code{omp_get_max_threads}-1 inclusive. The return \n+Unique thread identification number within the current team.\n+In a sequential parts of the program, @code{omp_get_thread_num}\n+always returns 0. In parallel regions the return value varies\n+from 0 to @code{omp_get_num_threads}-1 inclusive. The return \n value of the master thread of a team is always 0.\n \n @item @emph{C/C++}:\n@@ -331,10 +535,10 @@ value of the master thread of a team is always 0.\n @end multitable\n \n @item @emph{See also}:\n-@ref{omp_get_max_threads}\n+@ref{omp_get_num_threads}, @ref{omp_get_ancestor_thread_num}\n \n @item @emph{Reference}:\n-@uref{http://www.openmp.org/, OpenMP specifications v2.5}, section 3.2.4.\n+@uref{http://www.openmp.org/, OpenMP specifications v3.0}, section 3.2.4.\n @end table\n \n \n@@ -358,7 +562,7 @@ their language-specific counterparts.\n @end multitable\n \n @item @emph{Reference}:\n-@uref{http://www.openmp.org/, OpenMP specifications v2.5}, section 3.2.6.\n+@uref{http://www.openmp.org/, OpenMP specifications v3.0}, section 3.2.6.\n @end table\n \n \n@@ -386,7 +590,33 @@ adjustment of team sizes and @code{false} disables it.\n @ref{OMP_DYNAMIC}, @ref{omp_get_dynamic}\n \n @item @emph{Reference}:\n-@uref{http://www.openmp.org/, OpenMP specifications v2.5}, section 3.2.7.\n+@uref{http://www.openmp.org/, OpenMP specifications v3.0}, section 3.2.7.\n+@end table\n+\n+\n+\n+@node omp_set_max_active_levels\n+@section @code{omp_set_max_active_levels} -- Limits the number of active parallel regions\n+@table @asis\n+@item @emph{Description}:\n+This function limits the maximally allowed number of nested, active parallel regions.\n+\n+@item @emph{C/C++}\n+@multitable @columnfractions .20 .80\n+@item @emph{Prototype}: @tab @code{omp_set_max_active_levels(int max_levels);}\n+@end multitable\n+\n+@item @emph{Fortran}:\n+@multitable @columnfractions .20 .80\n+@item @emph{Interface}: @tab @code{omp_max_active_levels(max_levels)}\n+@item                   @tab @code{integer max_levels}\n+@end multitable\n+\n+@item @emph{See also}:\n+@ref{omp_get_max_active_levels}, @ref{omp_get_active_level}\n+\n+@item @emph{Reference}:\n+@uref{http://www.openmp.org/, OpenMP specifications v3.0}, section 3.2.14.\n @end table\n \n \n@@ -415,7 +645,7 @@ dynamic adjustment of team sizes and @code{false} disables it.\n @ref{OMP_NESTED}, @ref{omp_get_nested}\n \n @item @emph{Reference}:\n-@uref{http://www.openmp.org/, OpenMP specifications v2.5}, section 3.2.9.\n+@uref{http://www.openmp.org/, OpenMP specifications v3.0}, section 3.2.9.\n @end table\n \n \n@@ -443,7 +673,40 @@ argument of @code{omp_set_num_threads} shall be a positive integer.\n @ref{OMP_NUM_THREADS}, @ref{omp_get_num_threads}, @ref{omp_get_max_threads}\n \n @item @emph{Reference}:\n-@uref{http://www.openmp.org/, OpenMP specifications v2.5}, section 3.2.1.\n+@uref{http://www.openmp.org/, OpenMP specifications v3.0}, section 3.2.1.\n+@end table\n+\n+\n+\n+@node omp_set_schedule\n+@section @code{omp_set_schedule} -- Set the runtime scheduling method\n+@table @asis\n+@item @emph{Description}:\n+Sets the runtime scheduling method. The @var{kind} argument can have the\n+value @code{omp_sched_static}, @code{omp_sched_dynamic},\n+@code{opm_sched_guided} or @code{omp_sched_auto}. Except for\n+@code{omp_sched_auto}, the chunk size is set to the value of\n+@var{modifier} if positive or to the default value if zero or negative.\n+For @code{omp_sched_auto} the @var{modifier} argument is ignored.\n+\n+@item @emph{C/C++}\n+@multitable @columnfractions .20 .80\n+@item @emph{Prototype}: @tab @code{int omp_schedule(omp_sched_t * kind, int *modifier);}\n+@end multitable\n+\n+@item @emph{Fortran}:\n+@multitable @columnfractions .20 .80\n+@item @emph{Interface}: @tab @code{subroutine omp_schedule(kind, modifier)}\n+@item                   @tab @code{integer(kind=omp_sched_kind) kind}\n+@item                   @tab @code{integer modifier}\n+@end multitable\n+\n+@item @emph{See also}:\n+@ref{omp_get_schedule}\n+@ref{OMP_SCHEDULE}\n+\n+@item @emph{Reference}:\n+@uref{http://www.openmp.org/, OpenMP specifications v3.0}, section 3.2.11.\n @end table\n \n \n@@ -470,7 +733,7 @@ an unlocked state.\n @ref{omp_destroy_lock}\n \n @item @emph{Reference}: \n-@uref{http://www.openmp.org/, OpenMP specifications v2.5}, section 3.3.1.\n+@uref{http://www.openmp.org/, OpenMP specifications v3.0}, section 3.3.1.\n @end table\n \n \n@@ -499,7 +762,7 @@ a deadlock occurs.\n @ref{omp_init_lock}, @ref{omp_test_lock}, @ref{omp_unset_lock}\n \n @item @emph{Reference}: \n-@uref{http://www.openmp.org/, OpenMP specifications v2.5}, section 3.3.3.\n+@uref{http://www.openmp.org/, OpenMP specifications v3.0}, section 3.3.3.\n @end table\n \n \n@@ -530,7 +793,7 @@ does not block if the lock is not available. This function returns\n @ref{omp_init_lock}, @ref{omp_set_lock}, @ref{omp_set_lock}\n \n @item @emph{Reference}: \n-@uref{http://www.openmp.org/, OpenMP specifications v2.5}, section 3.3.5.\n+@uref{http://www.openmp.org/, OpenMP specifications v3.0}, section 3.3.5.\n @end table\n \n \n@@ -560,7 +823,7 @@ again, set the lock for itself.\n @ref{omp_set_lock}, @ref{omp_test_lock}\n \n @item @emph{Reference}: \n-@uref{http://www.openmp.org/, OpenMP specifications v2.5}, section 3.3.4.\n+@uref{http://www.openmp.org/, OpenMP specifications v3.0}, section 3.3.4.\n @end table\n \n \n@@ -587,7 +850,7 @@ in the unlocked state.\n @ref{omp_init_lock}\n \n @item @emph{Reference}: \n-@uref{http://www.openmp.org/, OpenMP specifications v2.5}, section 3.3.2.\n+@uref{http://www.openmp.org/, OpenMP specifications v3.0}, section 3.3.2.\n @end table\n \n \n@@ -614,7 +877,7 @@ an unlocked state and the nesting count is set to zero.\n @ref{omp_destroy_nest_lock}\n \n @item @emph{Reference}:\n-@uref{http://www.openmp.org/, OpenMP specifications v2.5}, section 3.3.1.\n+@uref{http://www.openmp.org/, OpenMP specifications v3.0}, section 3.3.1.\n @end table\n \n \n@@ -642,7 +905,7 @@ nesting count for the lock in incremented.\n @ref{omp_init_nest_lock}, @ref{omp_unset_nest_lock}\n \n @item @emph{Reference}: \n-@uref{http://www.openmp.org/, OpenMP specifications v2.5}, section 3.3.3.\n+@uref{http://www.openmp.org/, OpenMP specifications v3.0}, section 3.3.3.\n @end table\n \n \n@@ -674,7 +937,7 @@ is returned. Otherwise, the return value equals zero.\n @ref{omp_init_lock}, @ref{omp_set_lock}, @ref{omp_set_lock}\n \n @item @emph{Reference}: \n-@uref{http://www.openmp.org/, OpenMP specifications v2.5}, section 3.3.5.\n+@uref{http://www.openmp.org/, OpenMP specifications v3.0}, section 3.3.5.\n @end table\n \n \n@@ -704,7 +967,7 @@ one of them is chosen to, again, set the lock for itself.\n @ref{omp_set_nest_lock}\n \n @item @emph{Reference}: \n-@uref{http://www.openmp.org/, OpenMP specifications v2.5}, section 3.3.4.\n+@uref{http://www.openmp.org/, OpenMP specifications v3.0}, section 3.3.4.\n @end table\n \n \n@@ -731,7 +994,7 @@ in the unlocked state and its nesting count must equal zero.\n @ref{omp_init_lock}\n \n @item @emph{Reference}: \n-@uref{http://www.openmp.org/, OpenMP specifications v2.5}, section 3.3.2.\n+@uref{http://www.openmp.org/, OpenMP specifications v3.0}, section 3.3.2.\n @end table\n \n \n@@ -757,7 +1020,7 @@ successive clock ticks.\n @ref{omp_get_wtime}\n \n @item @emph{Reference}: \n-@uref{http://www.openmp.org/, OpenMP specifications v2.5}, section 3.4.2.\n+@uref{http://www.openmp.org/, OpenMP specifications v3.0}, section 3.4.2.\n @end table\n \n \n@@ -785,7 +1048,7 @@ the seconds since the Epoch (00:00:00 UTC, January 1, 1970) are returned.\n @ref{omp_get_wtick}\n \n @item @emph{Reference}: \n-@uref{http://www.openmp.org/, OpenMP specifications v2.5}, section 3.4.1.\n+@uref{http://www.openmp.org/, OpenMP specifications v3.0}, section 3.4.1.\n @end table\n \n \n@@ -797,25 +1060,30 @@ the seconds since the Epoch (00:00:00 UTC, January 1, 1970) are returned.\n @node Environment Variables\n @chapter Environment Variables\n \n-The variables @env{OMP_DYNAMIC}, @env{OMP_NESTED}, @env{OMP_NUM_THREADS} and \n-@env{OMP_SCHEDULE} are defined by section 4 of the OpenMP specifications in \n-version 2.5, while @env{GOMP_CPU_AFFINITY} and @env{GOMP_STACKSIZE} are GNU \n+The variables @env{OMP_DYNAMIC}, @env{OMP_MAX_ACTIVE_LEVELS},\n+@env{OMP_NESTED}, @env{OMP_NUM_THREADS}, @env{OMP_SCHEDULE},\n+@env{OMP_STACKSIZE},@env{OMP_THREAD_LIMIT} and @env{OMP_WAIT_POLICY}\n+are defined by section 4 of the OpenMP specifications in version 3.0,\n+while @env{GOMP_CPU_AFFINITY} and @env{GOMP_STACKSIZE} are GNU \n extensions.\n \n @menu\n-* OMP_DYNAMIC::        Dynamic adjustment of threads\n-* OMP_NESTED::         Nested parallel regions\n-* OMP_NUM_THREADS::    Specifies the number of threads to use\n-* OMP_SCHEDULE::       How threads are scheduled\n-* GOMP_CPU_AFFINITY::  Bind threads to specific CPUs\n-* GOMP_STACKSIZE::     Set default thread stack size\n+* OMP_DYNAMIC::           Dynamic adjustment of threads\n+* OMP_MAX_ACTIVE_LEVELS:: Set the maximal number of nested parallel regions\n+* OMP_NESTED::            Nested parallel regions\n+* OMP_NUM_THREADS::       Specifies the number of threads to use\n+* OMP_STACKSIZE::         Set default thread stack size\n+* OMP_SCHEDULE::          How threads are scheduled\n+* OMP_THREAD_LIMIT::      Set the maximal number of threads\n+* OMP_WAIT_POLICY::       How waiting threads are handled\n+* GOMP_CPU_AFFINITY::     Bind threads to specific CPUs\n+* GOMP_STACKSIZE::        Set default thread stack size\n @end menu\n \n \n @node OMP_DYNAMIC\n @section @env{OMP_DYNAMIC} -- Dynamic adjustment of threads\n @cindex Environment Variable\n-@cindex Implementation specific setting\n @table @asis\n @item @emph{Description}:\n Enable or disable the dynamic adjustment of the number of threads \n@@ -827,7 +1095,25 @@ disabled by default.\n @ref{omp_set_dynamic}\n \n @item @emph{Reference}: \n-@uref{http://www.openmp.org/, OpenMP specifications v2.5}, section 4.3\n+@uref{http://www.openmp.org/, OpenMP specifications v3.0}, section 4.3\n+@end table\n+\n+\n+\n+@node OMP_MAX_ACTIVE_LEVELS\n+@section @env{OMP_MAX_ACTIVE_LEVELS} -- Set the maximal number of nested parallel regions\n+@cindex Environment Variable\n+@table @asis\n+@item @emph{Description}:\n+Specifies the initial value for the maximal number of nested parallel\n+regions. The value of this variable shall be positive integer.\n+If undefined, the number of active levels is unlimited.\n+\n+@item @emph{See also}:\n+@ref{omp_set_max_active_levels}\n+\n+@item @emph{Reference}: \n+@uref{http://www.openmp.org/, OpenMP specifications v3.0}, section 4.7\n @end table\n \n \n@@ -847,7 +1133,7 @@ regions are disabled by default.\n @ref{omp_set_nested}\n \n @item @emph{Reference}: \n-@uref{http://www.openmp.org/, OpenMP specifications v2.5}, section 4.4\n+@uref{http://www.openmp.org/, OpenMP specifications v3.0}, section 4.4\n @end table\n \n \n@@ -866,7 +1152,7 @@ per CPU online is used.\n @ref{omp_set_num_threads}\n \n @item @emph{Reference}: \n-@uref{http://www.openmp.org/, OpenMP specifications v2.5}, section 4.2\n+@uref{http://www.openmp.org/, OpenMP specifications v3.0}, section 4.2\n @end table\n \n \n@@ -879,12 +1165,70 @@ per CPU online is used.\n @item @emph{Description}:\n Allows to specify @code{schedule type} and @code{chunk size}. \n The value of the variable shall have the form: @code{type[,chunk]} where\n-@code{type} is one of @code{static}, @code{dynamic} or @code{guided}. \n-The optional @code{chunk size} shall be a positive integer. If undefined,\n+@code{type} is one of @code{static}, @code{dynamic}, @code{guided} or @code{auto}\n+The optional @code{chunk} size shall be a positive integer. If undefined,\n dynamic scheduling and a chunk size of 1 is used.\n \n+@item @emph{See also}:\n+@ref{omp_set_schedule}\n+\n+@item @emph{Reference}: \n+@uref{http://www.openmp.org/, OpenMP specifications v3.0}, sections 2.5.1 and 4.1\n+@end table\n+\n+\n+\n+@node OMP_STACKSIZE\n+@section @env{OMP_STACKSIZE} -- Set default thread stack size\n+@cindex Environment Variable\n+@table @asis\n+@item @emph{Description}:\n+Set the default thread stack size in kilobytes, unless the number\n+is suffixed by @code{B}, @code{K}, @code{M} or @code{G}, in which\n+case the size is, respectively, in bytes, kilobytes, megabytes\n+or gigabytes. This is different from @code{pthread_attr_setstacksize}\n+which gets the number of bytes as an argument. If the stacksize can not\n+be set due to system constraints, an error is reported and the initial\n+stacksize is left unchanged. If undefined, the stack size is system\n+dependent.\n+\n @item @emph{Reference}: \n-@uref{http://www.openmp.org/, OpenMP specifications v2.5}, sections 2.5.1 and 4.1\n+@uref{http://www.openmp.org/, OpenMP specifications v3.0}, sections 4.5\n+@end table\n+\n+\n+\n+@node OMP_THREAD_LIMIT\n+@section @env{OMP_THREAD_LIMIT} -- Set the maximal number of threads\n+@cindex Environment Variable\n+@table @asis\n+@item @emph{Description}:\n+Specifies the number of threads to use for the whole program. The\n+value of this variable shall be positive integer. If undefined,\n+the number of threads is not limited.\n+\n+@item @emph{See also}:\n+@ref{OMP_NUM_THREADS}\n+@ref{omp_get_thread_limit}\n+\n+@item @emph{Reference}: \n+@uref{http://www.openmp.org/, OpenMP specifications v3.0}, section 4.8\n+@end table\n+\n+\n+\n+@node OMP_WAIT_POLICY\n+@section @env{OMP_WAIT_POLICY} -- How waiting threads are handled\n+@cindex Environment Variable\n+@table @asis\n+@item @emph{Description}:\n+Specifies whether waiting threads should be active or passive. If\n+the value is @code{PASSIVE}, waiting threads should not consume CPU\n+power while waiting; while the value is @code{ACTIVE} specifies that\n+they should.\n+\n+@item @emph{Reference}: \n+@uref{http://www.openmp.org/, OpenMP specifications v3.0}, sections 4.6\n @end table\n \n \n@@ -923,12 +1267,15 @@ assignment of threads to CPUs.\n @cindex Implementation specific setting\n @table @asis\n @item @emph{Description}:\n-Set the default thread stack size in kilobytes. This is in opposition \n-to @code{pthread_attr_setstacksize} which gets the number of bytes as an \n+Set the default thread stack size in kilobytes. This is different from\n+@code{pthread_attr_setstacksize} which gets the number of bytes as an \n argument. If the stacksize can not be set due to system constraints, an \n error is reported and the initial stacksize is left unchanged. If undefined,\n the stack size is system dependent.\n \n+@item @emph{See also}:\n+@ref{GOMP_STACKSIZE}\n+\n @item @emph{Reference}: \n @uref{http://gcc.gnu.org/ml/gcc-patches/2006-06/msg00493.html, \n GCC Patches Mailinglist}, "}]}