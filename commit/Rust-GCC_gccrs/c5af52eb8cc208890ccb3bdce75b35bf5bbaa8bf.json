{"sha": "c5af52eb8cc208890ccb3bdce75b35bf5bbaa8bf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzVhZjUyZWI4Y2MyMDg4OTBjY2IzYmRjZTc1YjM1YmY1YmJhYThiZg==", "commit": {"author": {"name": "Cesar Philippidis", "email": "cesar@codesourcery.com", "date": "2016-12-02T14:54:39Z"}, "committer": {"name": "Cesar Philippidis", "email": "cesar@gcc.gnu.org", "date": "2016-12-02T14:54:39Z"}, "message": "c-parser.c (c_parser_pragma): Error when PRAGMA_OACC_{ENTER_DATA...\n\n\tgcc/c/\n\t* c-parser.c (c_parser_pragma): Error when PRAGMA_OACC_{ENTER_DATA,\n\tEXIT_DATA,WAIT} are not used in compound statements.\n\t(c_parser_oacc_enter_exit_data): Update diagnostics.\n\n\tgcc/cp/\n\t* parser.c (cp_parser_oacc_enter_exit_data): Update diagnostics.\n\t(cp_parser_pragma): Error when PRAGMA_OACC_{ENTER_DATA,\n\tEXIT_DATA,WAIT} are not used in compound statements.\n\n\tgcc/testsuite/\n\t* c-c++-common/goacc/data-2.c: Adjust test.\n\t* c-c++-common/goacc/executeables-1.c: New test.\n\t* g++.dg/goacc/data-1.C: Adjust test.\n\n\nCo-Authored-By: James Norris <jnorris@codesourcery.com>\n\nFrom-SVN: r243185", "tree": {"sha": "2f0ce488844285e012110f8b14e864975bded2ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2f0ce488844285e012110f8b14e864975bded2ec"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c5af52eb8cc208890ccb3bdce75b35bf5bbaa8bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5af52eb8cc208890ccb3bdce75b35bf5bbaa8bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c5af52eb8cc208890ccb3bdce75b35bf5bbaa8bf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5af52eb8cc208890ccb3bdce75b35bf5bbaa8bf/comments", "author": {"login": "cesarjp", "id": 4576177, "node_id": "MDQ6VXNlcjQ1NzYxNzc=", "avatar_url": "https://avatars.githubusercontent.com/u/4576177?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cesarjp", "html_url": "https://github.com/cesarjp", "followers_url": "https://api.github.com/users/cesarjp/followers", "following_url": "https://api.github.com/users/cesarjp/following{/other_user}", "gists_url": "https://api.github.com/users/cesarjp/gists{/gist_id}", "starred_url": "https://api.github.com/users/cesarjp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cesarjp/subscriptions", "organizations_url": "https://api.github.com/users/cesarjp/orgs", "repos_url": "https://api.github.com/users/cesarjp/repos", "events_url": "https://api.github.com/users/cesarjp/events{/privacy}", "received_events_url": "https://api.github.com/users/cesarjp/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "69a71a6d071a5eae8a06282351e53d8c383aba9a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69a71a6d071a5eae8a06282351e53d8c383aba9a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69a71a6d071a5eae8a06282351e53d8c383aba9a"}], "stats": {"total": 240, "additions": 199, "deletions": 41}, "files": [{"sha": "f3626e28205af952b4704e83c9ba531afd0f17d3", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5af52eb8cc208890ccb3bdce75b35bf5bbaa8bf/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5af52eb8cc208890ccb3bdce75b35bf5bbaa8bf/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=c5af52eb8cc208890ccb3bdce75b35bf5bbaa8bf", "patch": "@@ -1,3 +1,10 @@\n+2016-12-02  Cesar Philippidis  <cesar@codesourcery.com>\n+\t    James Norris  <jnorris@codesourcery.com>\n+\n+\t* c-parser.c (c_parser_pragma): Error when PRAGMA_OACC_{ENTER_DATA,\n+\tEXIT_DATA,WAIT} are not used in compound statements.\n+\t(c_parser_oacc_enter_exit_data): Update diagnostics.\n+\n 2016-11-21  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n \n \tPR c++/71973"}, {"sha": "f7bf9c4d9bdc9f5dd2c3b891e0d56afac1e4725c", "filename": "gcc/c/c-parser.c", "status": "modified", "additions": 32, "deletions": 10, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5af52eb8cc208890ccb3bdce75b35bf5bbaa8bf/gcc%2Fc%2Fc-parser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5af52eb8cc208890ccb3bdce75b35bf5bbaa8bf/gcc%2Fc%2Fc-parser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-parser.c?ref=c5af52eb8cc208890ccb3bdce75b35bf5bbaa8bf", "patch": "@@ -10145,10 +10145,24 @@ c_parser_pragma (c_parser *parser, enum pragma_context context, bool *if_p)\n       return false;\n \n     case PRAGMA_OACC_ENTER_DATA:\n+      if (context != pragma_compound)\n+\t{\n+\t  if (context == pragma_stmt)\n+\t    c_parser_error (parser, \"%<#pragma acc enter data%> may only be \"\n+\t\t\t    \"used in compound statements\");\n+\t  goto bad_stmt;\n+\t}\n       c_parser_oacc_enter_exit_data (parser, true);\n       return false;\n \n     case PRAGMA_OACC_EXIT_DATA:\n+      if (context != pragma_compound)\n+\t{\n+\t  if (context == pragma_stmt)\n+\t    c_parser_error (parser, \"%<#pragma acc exit data%> may only be \"\n+\t\t\t    \"used in compound statements\");\n+\t  goto bad_stmt;\n+\t}\n       c_parser_oacc_enter_exit_data (parser, false);\n       return false;\n \n@@ -10305,6 +10319,16 @@ c_parser_pragma (c_parser *parser, enum pragma_context context, bool *if_p)\n       c_parser_cilk_grainsize (parser, if_p);\n       return false;\n \n+    case PRAGMA_OACC_WAIT:\n+      if (context != pragma_compound)\n+\t{\n+\t  if (context == pragma_stmt)\n+\t    c_parser_error (parser, \"%<#pragma acc enter data%> may only be \"\n+\t\t\t    \"used in compound statements\");\n+\t  goto bad_stmt;\n+\t}\n+\t/* FALL THROUGH.  */\n+\n     default:\n       if (id < PRAGMA_FIRST_EXTERNAL)\n \t{\n@@ -13871,28 +13895,26 @@ c_parser_oacc_enter_exit_data (c_parser *parser, bool enter)\n {\n   location_t loc = c_parser_peek_token (parser)->location;\n   tree clauses, stmt;\n+  const char *p = \"\";\n \n   c_parser_consume_pragma (parser);\n \n-  if (!c_parser_next_token_is (parser, CPP_NAME))\n+  if (c_parser_next_token_is (parser, CPP_NAME))\n     {\n-      c_parser_error (parser, enter\n-\t\t      ? \"expected %<data%> in %<#pragma acc enter data%>\"\n-\t\t      : \"expected %<data%> in %<#pragma acc exit data%>\");\n-      c_parser_skip_to_pragma_eol (parser);\n-      return;\n+      p = IDENTIFIER_POINTER (c_parser_peek_token (parser)->value);\n+      c_parser_consume_token (parser);\n     }\n \n-  const char *p = IDENTIFIER_POINTER (c_parser_peek_token (parser)->value);\n   if (strcmp (p, \"data\") != 0)\n     {\n-      c_parser_error (parser, \"invalid pragma\");\n+      error_at (loc, enter\n+\t\t? \"expected %<data%> after %<#pragma acc enter%>\"\n+\t\t: \"expected %<data%> after %<#pragma acc exit%>\");\n+      parser->error = true;\n       c_parser_skip_to_pragma_eol (parser);\n       return;\n     }\n \n-  c_parser_consume_token (parser);\n-\n   if (enter)\n     clauses = c_parser_oacc_all_clauses (parser, OACC_ENTER_DATA_CLAUSE_MASK,\n \t\t\t\t\t \"#pragma acc enter data\");"}, {"sha": "d39c222d16a3ea807e492c2de4425ff152f53d07", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5af52eb8cc208890ccb3bdce75b35bf5bbaa8bf/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5af52eb8cc208890ccb3bdce75b35bf5bbaa8bf/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=c5af52eb8cc208890ccb3bdce75b35bf5bbaa8bf", "patch": "@@ -1,3 +1,10 @@\n+2016-12-02  Cesar Philippidis  <cesar@codesourcery.com>\n+\t    James Norris  <jnorris@codesourcery.com>\n+\n+\t* parser.c (cp_parser_oacc_enter_exit_data): Update diagnostics.\n+\t(cp_parser_pragma): Error when PRAGMA_OACC_{ENTER_DATA,\n+\tEXIT_DATA,WAIT} are not used in compound statements.\n+\n 2016-12-01  Jason Merrill  <jason@redhat.com>\n \n \t* call.c (add_function_candidate): Also exclude inherited ctors"}, {"sha": "08f5f9e52ef22fc7aa2798ab7f48887e979478af", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 57, "deletions": 18, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5af52eb8cc208890ccb3bdce75b35bf5bbaa8bf/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5af52eb8cc208890ccb3bdce75b35bf5bbaa8bf/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=c5af52eb8cc208890ccb3bdce75b35bf5bbaa8bf", "patch": "@@ -36175,23 +36175,18 @@ static tree\n cp_parser_oacc_enter_exit_data (cp_parser *parser, cp_token *pragma_tok,\n \t\t\t\tbool enter)\n {\n+  location_t loc = pragma_tok->location;\n   tree stmt, clauses;\n+  const char *p = \"\";\n \n-  if (cp_lexer_next_token_is (parser->lexer, CPP_PRAGMA_EOL)\n-     || cp_lexer_next_token_is_not (parser->lexer, CPP_NAME))\n-    {\n-      cp_parser_error (parser, enter\n-\t\t       ? \"expected %<data%> in %<#pragma acc enter data%>\"\n-\t\t       : \"expected %<data%> in %<#pragma acc exit data%>\");\n-      cp_parser_skip_to_pragma_eol (parser, pragma_tok);\n-      return NULL_TREE;\n-    }\n+  if (cp_lexer_next_token_is (parser->lexer, CPP_NAME))\n+    p = IDENTIFIER_POINTER (cp_lexer_peek_token (parser->lexer)->u.value);\n \n-  const char *p =\n-    IDENTIFIER_POINTER (cp_lexer_peek_token (parser->lexer)->u.value);\n   if (strcmp (p, \"data\") != 0)\n     {\n-      cp_parser_error (parser, \"invalid pragma\");\n+      error_at (loc, enter\n+\t\t? \"expected %<data%> after %<#pragma acc enter%>\"\n+\t\t: \"expected %<data%> after %<#pragma acc exit%>\");\n       cp_parser_skip_to_pragma_eol (parser, pragma_tok);\n       return NULL_TREE;\n     }\n@@ -36207,8 +36202,8 @@ cp_parser_oacc_enter_exit_data (cp_parser *parser, cp_token *pragma_tok,\n \n   if (find_omp_clause (clauses, OMP_CLAUSE_MAP) == NULL_TREE)\n     {\n-      error_at (pragma_tok->location,\n-\t\t\"%<#pragma acc enter data%> has no data movement clause\");\n+      error_at (loc, \"%<#pragma acc %s data%> has no data movement clause\",\n+\t\tenter ? \"enter\" : \"exit\");\n       return NULL_TREE;\n     }\n \n@@ -38083,6 +38078,30 @@ cp_parser_pragma (cp_parser *parser, enum pragma_context context, bool *if_p)\n       cp_parser_oacc_declare (parser, pragma_tok);\n       return false;\n \n+    case PRAGMA_OACC_ENTER_DATA:\n+      if (context == pragma_stmt)\n+\t{\n+\t  cp_parser_error (parser, \"%<#pragma acc enter data%> may only be \"\n+\t\t\t   \"used in compound statements\");\n+\t  break;\n+\t}\n+      else if (context != pragma_compound)\n+\tgoto bad_stmt;\n+      cp_parser_omp_construct (parser, pragma_tok, if_p);\n+      return true;\n+\n+    case PRAGMA_OACC_EXIT_DATA:\n+      if (context == pragma_stmt)\n+\t{\n+\t  cp_parser_error (parser, \"%<#pragma acc exit data%> may only be \"\n+\t\t\t   \"used in compound statements\");\n+\t  break;\n+\t}\n+      else if (context != pragma_compound)\n+\tgoto bad_stmt;\n+      cp_parser_omp_construct (parser, pragma_tok, if_p);\n+      return true;\n+\n     case PRAGMA_OACC_ROUTINE:\n       if (context != pragma_external)\n \t{\n@@ -38093,17 +38112,37 @@ cp_parser_pragma (cp_parser *parser, enum pragma_context context, bool *if_p)\n       cp_parser_oacc_routine (parser, pragma_tok, context);\n       return false;\n \n+    case PRAGMA_OACC_UPDATE:\n+      if (context == pragma_stmt)\n+\t{\n+\t  cp_parser_error (parser, \"%<#pragma acc update%> may only be \"\n+\t\t\t   \"used in compound statements\");\n+\t  break;\n+\t}\n+      else if (context != pragma_compound)\n+\tgoto bad_stmt;\n+      cp_parser_omp_construct (parser, pragma_tok, if_p);\n+      return true;\n+\n+    case PRAGMA_OACC_WAIT:\n+      if (context == pragma_stmt)\n+\t{\n+\t  cp_parser_error (parser, \"%<#pragma acc wait%> may only be \"\n+\t\t\t   \"used in compound statements\");\n+\t  break;\n+\t}\n+      else if (context != pragma_compound)\n+\tgoto bad_stmt;\n+      cp_parser_omp_construct (parser, pragma_tok, if_p);\n+      return true;\n+\n     case PRAGMA_OACC_ATOMIC:\n     case PRAGMA_OACC_CACHE:\n     case PRAGMA_OACC_DATA:\n-    case PRAGMA_OACC_ENTER_DATA:\n-    case PRAGMA_OACC_EXIT_DATA:\n     case PRAGMA_OACC_HOST_DATA:\n     case PRAGMA_OACC_KERNELS:\n     case PRAGMA_OACC_PARALLEL:\n     case PRAGMA_OACC_LOOP:\n-    case PRAGMA_OACC_UPDATE:\n-    case PRAGMA_OACC_WAIT:\n     case PRAGMA_OMP_ATOMIC:\n     case PRAGMA_OMP_CRITICAL:\n     case PRAGMA_OMP_DISTRIBUTE:"}, {"sha": "f1b5c350a282db7ab7d32cf8a751509536e04d22", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5af52eb8cc208890ccb3bdce75b35bf5bbaa8bf/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5af52eb8cc208890ccb3bdce75b35bf5bbaa8bf/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c5af52eb8cc208890ccb3bdce75b35bf5bbaa8bf", "patch": "@@ -1,3 +1,10 @@\n+2016-12-02  Cesar Philippidis  <cesar@codesourcery.com>\n+\t    James Norris  <jnorris@codesourcery.com>\n+\n+\t* c-c++-common/goacc/data-2.c: Adjust test.\n+\t* c-c++-common/goacc/executeables-1.c: New test.\n+\t* g++.dg/goacc/data-1.C: Adjust test.\n+\n 2016-12-02  James Greenhalgh  <james.greenhalgh@arm.com>\n \n \tPR rtl-optimization/78561"}, {"sha": "1043bf8a0720aa9857c3622b74ad63ef7150a89d", "filename": "gcc/testsuite/c-c++-common/goacc/data-2.c", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5af52eb8cc208890ccb3bdce75b35bf5bbaa8bf/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fdata-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5af52eb8cc208890ccb3bdce75b35bf5bbaa8bf/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fdata-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fdata-2.c?ref=c5af52eb8cc208890ccb3bdce75b35bf5bbaa8bf", "patch": "@@ -10,12 +10,14 @@ foo (void)\n #pragma acc exit data delete (a) if (0)\n #pragma acc exit data copyout (b) if (a)\n #pragma acc exit data delete (b)\n-#pragma acc enter /* { dg-error \"expected 'data' in\" } */\n-#pragma acc exit /* { dg-error \"expected 'data' in\" } */\n+#pragma acc enter /* { dg-error \"expected 'data' after\" } */\n+#pragma acc exit /* { dg-error \"expected 'data' after\" } */\n #pragma acc enter data /* { dg-error \"has no data movement clause\" } */\n-#pragma acc exit data /* { dg-error \"has no data movement clause\" } */\n-#pragma acc enter Data /* { dg-error \"invalid pragma before\" } */\n-#pragma acc exit copyout (b) /* { dg-error \"invalid pragma before\" } */\n+#pragma acc exit data /* { dg-error \"no data movement clause\" } */\n+#pragma acc enter Data /* { dg-error \"expected 'data' after\" } */\n+#pragma acc exit copyout (b) /* { dg-error \"expected 'data' after\" } */\n+#pragma acc enter for /* { dg-error \"expected 'data' after\" } */\n+#pragma acc enter data2 /* { dg-error \"expected 'data' after\" } */\n }\n \n /* { dg-error \"has no data movement clause\" \"\" { target *-*-* } 8 } */"}, {"sha": "da89437e9242a192f6e1a857c8548f96a2c13317", "filename": "gcc/testsuite/c-c++-common/goacc/executeables-1.c", "status": "added", "additions": 74, "deletions": 0, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5af52eb8cc208890ccb3bdce75b35bf5bbaa8bf/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fexecuteables-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5af52eb8cc208890ccb3bdce75b35bf5bbaa8bf/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fexecuteables-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fexecuteables-1.c?ref=c5af52eb8cc208890ccb3bdce75b35bf5bbaa8bf", "patch": "@@ -0,0 +1,74 @@\n+/* { dg-do compile } */\n+\n+void\n+foo (void)\n+{\n+  const int N = 32;\n+  float x[N], y[N];\n+  int flag = 0;\n+\n+  if (flag)\n+#pragma acc update host (x[0:N]) /* { dg-error \"may only be used in compound statements\" } */\n+  flag = 1;\n+\n+  while (flag)\n+#pragma acc update host (x[0:N]) /* { dg-error \"may only be used in compound statements\" } */\n+  flag = 2;\n+\n+#pragma acc enter data create (x[0:N])\n+  {\n+    if (flag)\n+#pragma acc update host (x[0:N]) /* { dg-error \"may only be used in compound statements\" } */\n+    flag = 1;\n+  }\n+\n+  if (flag)\n+  while (flag)\n+#pragma acc update host (x[0:N]) /* { dg-error \"may only be used in compound statements\" } */\n+  flag = 2;\n+\n+  if (flag)\n+#pragma acc wait /* { dg-error \"may only be used in compound statements\" } */\n+  flag = 1;\n+\n+  while (flag)\n+#pragma acc wait /* { dg-error \"may only be used in compound statements\" } */\n+  flag = 2;\n+\n+#pragma acc enter data create (x[0:N])\n+  {\n+    if (flag)\n+#pragma acc wait /* { dg-error \"may only be used in compound statements\" } */\n+    flag = 1;\n+  }\n+\n+  if (flag)\n+#pragma acc enter data create (x[0:N]) /* { dg-error \"may only be used in compound statements\" } */\n+  flag = 1;\n+\n+  while (flag)\n+#pragma acc enter data create (x[0:N]) /* { dg-error \"may only be used in compound statements\" } */\n+  flag = 2;\n+\n+#pragma acc enter data create (x[0:N])\n+  {\n+    if (flag)\n+#pragma acc enter data create (y[0:N]) /* { dg-error \"may only be used in compound statements\" } */\n+    flag = 1;\n+  }\n+\n+  if (flag)\n+#pragma acc exit data delete (x[0:N]) /* { dg-error \"may only be used in compound statements\" } */\n+  flag = 1;\n+\n+  while (flag)\n+#pragma acc exit data delete (x[0:N]) /* { dg-error \"may only be used in compound statements\" } */\n+  flag = 2;\n+\n+#pragma acc enter data create (x[0:N])\n+  {\n+    if (flag)\n+#pragma acc exit data delete (x[0:N]) /* { dg-error \"may only be used in compound statements\" } */\n+    flag = 1;\n+  }\n+}"}, {"sha": "2b210dcd6d7e3842495eceb62a34675a75f8915c", "filename": "gcc/testsuite/g++.dg/goacc/data-1.C", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5af52eb8cc208890ccb3bdce75b35bf5bbaa8bf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgoacc%2Fdata-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5af52eb8cc208890ccb3bdce75b35bf5bbaa8bf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgoacc%2Fdata-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgoacc%2Fdata-1.C?ref=c5af52eb8cc208890ccb3bdce75b35bf5bbaa8bf", "patch": "@@ -8,12 +8,12 @@ foo (int &a, int (&b)[100], int &n)\n #pragma acc exit data delete (a) if (0)\n #pragma acc exit data copyout (b) if (a)\n #pragma acc exit data delete (b)\n-#pragma acc enter /* { dg-error \"expected 'data' in\" } */\n-#pragma acc exit /* { dg-error \"expected 'data' in\" } */\n+#pragma acc enter /* { dg-error \"expected 'data' after\" } */\n+#pragma acc exit /* { dg-error \"expected 'data' after\" } */\n #pragma acc enter data /* { dg-error \"has no data movement clause\" } */\n #pragma acc exit data /* { dg-error \"has no data movement clause\" } */\n-#pragma acc enter Data /* { dg-error \"invalid pragma before\" } */\n-#pragma acc exit copyout (b) /* { dg-error \"invalid pragma before\" } */\n+#pragma acc enter Data /* { dg-error \"expected 'data' after\" } */\n+#pragma acc exit copyout (b) /* { dg-error \"expected 'data' after\" } */\n }\n \n template<typename T>\n@@ -27,12 +27,12 @@ foo (T &a, T (&b)[100], T &n)\n #pragma acc exit data delete (a) if (0)\n #pragma acc exit data copyout (b) if (a)\n #pragma acc exit data delete (b)\n-#pragma acc enter /* { dg-error \"expected 'data' in\" } */\n-#pragma acc exit /* { dg-error \"expected 'data' in\" } */\n+#pragma acc enter /* { dg-error \"expected 'data' after\" } */\n+#pragma acc exit /* { dg-error \"expected 'data' after\" } */\n #pragma acc enter data /* { dg-error \"has no data movement clause\" } */\n #pragma acc exit data /* { dg-error \"has no data movement clause\" } */\n-#pragma acc enter Data /* { dg-error \"invalid pragma before\" } */\n-#pragma acc exit copyout (b) /* { dg-error \"invalid pragma before\" } */\n+#pragma acc enter Data /* { dg-error \"expected 'data' after\" } */\n+#pragma acc exit copyout (b) /* { dg-error \"expected 'data' after\" } */\n }\n \n /* { dg-error \"has no data movement clause\" \"\" { target *-*-* } 6 } */"}]}