{"sha": "5c43f06c228d169c370e99fa009154344fa305b8", "node_id": "C_kwDOANBUbNoAKDVjNDNmMDZjMjI4ZDE2OWMzNzBlOTlmYTAwOTE1NDM0NGZhMzA1Yjg", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2023-02-02T16:00:21Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2023-02-02T16:57:27Z"}, "message": "libstdc++: Use ENOSYS for unsupported filesystem ops on AVR\n\nBecause avr-libc <errno.h> defines most error numbers with duplicate\nvalues it's not sufficient to check #ifdef ENOTSUP when deciding which\nstd::errc constant to use for the filesystem library's __unsupported()\nhelper. Add a special case for AVR to always use the ENOSYS value.\n\nlibstdc++-v3/ChangeLog:\n\n\t* src/filesystem/ops-common.h [AVR] (__unsupported): Always use\n\terrc::function_not_supported instead of errc::not_supported.", "tree": {"sha": "ab96262784a3c5c9ae5934379602f72b7e6cc0de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ab96262784a3c5c9ae5934379602f72b7e6cc0de"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5c43f06c228d169c370e99fa009154344fa305b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c43f06c228d169c370e99fa009154344fa305b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c43f06c228d169c370e99fa009154344fa305b8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c43f06c228d169c370e99fa009154344fa305b8/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "331b4f168a06cd85fe40fd03b48b128cc8af399c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/331b4f168a06cd85fe40fd03b48b128cc8af399c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/331b4f168a06cd85fe40fd03b48b128cc8af399c"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "abbfca43e5c64132fe8b8f0b6ee9c3dad3d1e201", "filename": "libstdc++-v3/src/filesystem/ops-common.h", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c43f06c228d169c370e99fa009154344fa305b8/libstdc%2B%2B-v3%2Fsrc%2Ffilesystem%2Fops-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c43f06c228d169c370e99fa009154344fa305b8/libstdc%2B%2B-v3%2Fsrc%2Ffilesystem%2Fops-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Ffilesystem%2Fops-common.h?ref=5c43f06c228d169c370e99fa009154344fa305b8", "patch": "@@ -84,7 +84,12 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   inline error_code\n   __unsupported() noexcept\n   {\n-#if defined ENOTSUP\n+#if defined __AVR__\n+    // avr-libc defines ENOTSUP and EOPNOTSUPP but with nonsense values.\n+    // ENOSYS is defined though, so use an error_code corresponding to that.\n+    // This contradicts the comment above, but we don't have much choice.\n+    return std::make_error_code(std::errc::function_not_supported);\n+#elif defined ENOTSUP\n     return std::make_error_code(std::errc::not_supported);\n #elif defined EOPNOTSUPP\n     // This is supposed to be for socket operations"}]}