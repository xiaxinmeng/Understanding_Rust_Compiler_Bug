{"sha": "1cf1719bc07ade2e96d47c7bae00d1203c847ee0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWNmMTcxOWJjMDdhZGUyZTk2ZDQ3YzdiYWUwMGQxMjAzYzg0N2VlMA==", "commit": {"author": {"name": "Fritz Reese", "email": "fritzoreese@gmail.com", "date": "2016-10-25T15:30:51Z"}, "committer": {"name": "Fritz Reese", "email": "foreese@gcc.gnu.org", "date": "2016-10-25T15:30:51Z"}, "message": "Enable .XOR. operator with -std=legacy.\n\n\tgcc/fortran/\n\t* match.c (gfc_match_intrinsic_op): Match \".XOR.\" with -std=legacy.\n\t* gfortran.texi: Document.\n\n\tgcc/testsuite/gfortran.dg/\n\t* dec_logical_xor_1.f90: New.\n        * dec_logical_xor_2.f90: New.\n        * dec_logical_xor_3.f03: New.\n\nFrom-SVN: r241520", "tree": {"sha": "4168fa510d949da5efd576836059e0d1cea0bb96", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4168fa510d949da5efd576836059e0d1cea0bb96"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1cf1719bc07ade2e96d47c7bae00d1203c847ee0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1cf1719bc07ade2e96d47c7bae00d1203c847ee0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1cf1719bc07ade2e96d47c7bae00d1203c847ee0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1cf1719bc07ade2e96d47c7bae00d1203c847ee0/comments", "author": {"login": "fritzr", "id": 2230564, "node_id": "MDQ6VXNlcjIyMzA1NjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2230564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fritzr", "html_url": "https://github.com/fritzr", "followers_url": "https://api.github.com/users/fritzr/followers", "following_url": "https://api.github.com/users/fritzr/following{/other_user}", "gists_url": "https://api.github.com/users/fritzr/gists{/gist_id}", "starred_url": "https://api.github.com/users/fritzr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fritzr/subscriptions", "organizations_url": "https://api.github.com/users/fritzr/orgs", "repos_url": "https://api.github.com/users/fritzr/repos", "events_url": "https://api.github.com/users/fritzr/events{/privacy}", "received_events_url": "https://api.github.com/users/fritzr/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cd714e1e56c53aeda0fe365a1daebf217731b42a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd714e1e56c53aeda0fe365a1daebf217731b42a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd714e1e56c53aeda0fe365a1daebf217731b42a"}], "stats": {"total": 104, "additions": 100, "deletions": 4}, "files": [{"sha": "c6a07e92241d9308d7a63efc5904c2634feb3a66", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1cf1719bc07ade2e96d47c7bae00d1203c847ee0/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1cf1719bc07ade2e96d47c7bae00d1203c847ee0/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=1cf1719bc07ade2e96d47c7bae00d1203c847ee0", "patch": "@@ -1,7 +1,12 @@\n 2016-10-25  Fritz Reese <fritzoreese@gmail.com>\n \n-        * primary.c (gfc_match_rvalue): Match %LOC as LOC with -std=legacy.\n-        * gfortran.texi: Document.\n+\t* match.c (gfc_match_intrinsic_op): Match \".XOR.\" with -std=legacy.\n+\t* gfortran.texi: Document.\n+\n+2016-10-25  Fritz Reese <fritzoreese@gmail.com>\n+\n+\t* primary.c (gfc_match_rvalue): Match %LOC as LOC with -std=legacy.\n+\t* gfortran.texi: Document.\n \n 2016-10-25  Fritz Reese <fritzoreese@gmail.com>\n "}, {"sha": "60b619f71a91340866e83462a5a3bdc7d09b85eb", "filename": "gcc/fortran/gfortran.texi", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1cf1719bc07ade2e96d47c7bae00d1203c847ee0/gcc%2Ffortran%2Fgfortran.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1cf1719bc07ade2e96d47c7bae00d1203c847ee0/gcc%2Ffortran%2Fgfortran.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.texi?ref=1cf1719bc07ade2e96d47c7bae00d1203c847ee0", "patch": "@@ -1468,6 +1468,7 @@ compatibility extensions along with those enabled by @option{-std=legacy}.\n * Form feed as whitespace::\n * TYPE as an alias for PRINT::\n * %LOC as an rvalue::\n+* .XOR. operator::\n @end menu\n \n @node Old-style kind specifications\n@@ -2558,6 +2559,14 @@ integer :: i\n call sub(%loc(i))\n @end smallexample\n \n+@node .XOR. operator\n+@subsection .XOR. operator\n+@cindex operators, xor\n+\n+GNU Fortran supports @code{.XOR.} as a logical operator with @code{-std=legacy}\n+for compatibility with legacy code. @code{.XOR.} is equivalent to\n+@code{.NEQV.}. That is, the output is true if and only if the inputs differ.\n+\n \n @node Extensions not implemented in GNU Fortran\n @section Extensions not implemented in GNU Fortran\n@@ -2582,7 +2591,6 @@ code that uses them running with the GNU Fortran compiler.\n * Variable FORMAT expressions::\n @c * Q edit descriptor::\n @c * TYPE and ACCEPT I/O Statements::\n-@c * .XOR. operator::\n @c * CARRIAGECONTROL, DEFAULTFILE, DISPOSE and RECORDTYPE I/O specifiers::\n @c * Omitted arguments in procedure call::\n * Alternate complex function syntax::"}, {"sha": "94aa830acd383aede1efd138fcb1a9b74df5030b", "filename": "gcc/fortran/match.c", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1cf1719bc07ade2e96d47c7bae00d1203c847ee0/gcc%2Ffortran%2Fmatch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1cf1719bc07ade2e96d47c7bae00d1203c847ee0/gcc%2Ffortran%2Fmatch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fmatch.c?ref=1cf1719bc07ade2e96d47c7bae00d1203c847ee0", "patch": "@@ -960,6 +960,19 @@ gfc_match_intrinsic_op (gfc_intrinsic_op *result)\n \t    }\n \t  break;\n \n+\tcase 'x':\n+\t  if (gfc_next_ascii_char () == 'o'\n+\t      && gfc_next_ascii_char () == 'r'\n+\t      && gfc_next_ascii_char () == '.')\n+\t    {\n+              if (!gfc_notify_std (GFC_STD_LEGACY, \".XOR. operator at %C\"))\n+                return MATCH_ERROR;\n+\t      /* Matched \".xor.\" - equivalent to \".neqv.\".  */\n+\t      *result = INTRINSIC_NEQV;\n+\t      return MATCH_YES;\n+\t    }\n+\t  break;\n+\n \tdefault:\n \t  break;\n \t}"}, {"sha": "78a9bdab8a86cb3d570fd58d584b2505c9ab6c25", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1cf1719bc07ade2e96d47c7bae00d1203c847ee0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1cf1719bc07ade2e96d47c7bae00d1203c847ee0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1cf1719bc07ade2e96d47c7bae00d1203c847ee0", "patch": "@@ -1,8 +1,14 @@\n+2016-10-25  Fritz Reese <fritzoreese@gmail.com>\n+\n+\t* gfortran.dg/dec_logical_xor_1.f90: New test.\n+\t* gfortran.dg/dec_logical_xor_2.f90: New test.\n+\t* gfortran.dg/dec_logical_xor_3.f03: New test.\n+\n 2016-10-25  Fritz Reese <fritzoreese@gmail.com>\n \n \t* gfortran.dg/dec_loc_rval_1.f90: New test.\n \t* gfortran.dg/dec_loc_rval_2.f90: New test.\n-\t* gfortran.dg/dec_loc_rval_3.f90: New test.\n+\t* gfortran.dg/dec_loc_rval_3.f03: New test.\n \n 2016-10-25  Fritz Reese <fritzoreese@gmail.com>\n "}, {"sha": "d10fa19892a937a3ecb68625af0b60f1d638e408", "filename": "gcc/testsuite/gfortran.dg/dec_logical_xor_1.f90", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1cf1719bc07ade2e96d47c7bae00d1203c847ee0/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec_logical_xor_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1cf1719bc07ade2e96d47c7bae00d1203c847ee0/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec_logical_xor_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec_logical_xor_1.f90?ref=1cf1719bc07ade2e96d47c7bae00d1203c847ee0", "patch": "@@ -0,0 +1,40 @@\n+! { dg-do run }\n+! { dg-options \"-std=legacy\" }\n+!\n+! Test logical .XOR. operator.\n+!\n+\n+implicit none\n+\n+logical :: in1, in2, neqv_out, lxor_out, truth_table(2)\n+integer :: i, j, ixor_out, ieor_out\n+\n+truth_table(1) = .true.\n+truth_table(2) = .false.\n+do i = 1,2\n+  do j = 1,2\n+    in1 = truth_table(j)\n+    in2 = truth_table(i)\n+\n+    ! make sure logical xor works\n+    neqv_out = in1 .neqv. in2\n+    lxor_out = in1 .xor. in2\n+\n+    if ( neqv_out .neqv. lxor_out ) then\n+      print *, \"(\",in1,in2,\") .neqv.: \",neqv_out,\"  .xor.: \",lxor_out\n+      call abort()\n+    endif\n+\n+    ! make sure we didn't break xor() intrinsic\n+    ixor_out = xor(i*7, j*5)\n+    ieor_out = ieor(i*7, j*5)\n+\n+    if ( ixor_out .ne. ieor_out ) then\n+      print *, \"(\",in1,in2,\") ieor(): \",ieor_out,\"  xor(): \",ixor_out\n+      call abort()\n+    endif\n+\n+  enddo\n+enddo\n+\n+end"}, {"sha": "4e43179f868f86fe0d5b767938cc1d7af25dc2c0", "filename": "gcc/testsuite/gfortran.dg/dec_logical_xor_2.f90", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1cf1719bc07ade2e96d47c7bae00d1203c847ee0/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec_logical_xor_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1cf1719bc07ade2e96d47c7bae00d1203c847ee0/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec_logical_xor_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec_logical_xor_2.f90?ref=1cf1719bc07ade2e96d47c7bae00d1203c847ee0", "patch": "@@ -0,0 +1,12 @@\n+! { dg-do compile }\n+! { dg-options \"-std=gnu\" }\n+!\n+! Test warnings for logical .XOR. operator without -std=legacy.\n+!\n+\n+implicit none\n+\n+logical, volatile :: in1, in2, xor_out\n+xor_out = in1 .xor. in2 ! { dg-warning \".XOR. operator\" }\n+\n+end"}, {"sha": "ff029fc8f0c0d6e960594a3e4af551b4bb7e7136", "filename": "gcc/testsuite/gfortran.dg/dec_logical_xor_3.f03", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1cf1719bc07ade2e96d47c7bae00d1203c847ee0/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec_logical_xor_3.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1cf1719bc07ade2e96d47c7bae00d1203c847ee0/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec_logical_xor_3.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec_logical_xor_3.f03?ref=1cf1719bc07ade2e96d47c7bae00d1203c847ee0", "patch": "@@ -0,0 +1,12 @@\n+! { dg-do compile }\n+! { dg-options \"-std=f2003\" }\n+!\n+! Test errors for logical .XOR. operator with a real standard.\n+!\n+\n+implicit none\n+\n+logical, volatile :: in1, in2, xor_out\n+xor_out = in1 .xor. in2 ! { dg-error \".XOR. operator\" }\n+\n+end"}]}