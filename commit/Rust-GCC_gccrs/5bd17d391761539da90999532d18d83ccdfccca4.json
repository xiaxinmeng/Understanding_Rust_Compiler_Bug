{"sha": "5bd17d391761539da90999532d18d83ccdfccca4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWJkMTdkMzkxNzYxNTM5ZGE5MDk5OTUzMmQxOGQ4M2NjZGZjY2NhNA==", "commit": {"author": {"name": "Phil Edwards", "email": "pme@gcc.gnu.org", "date": "2000-10-27T12:29:42Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2000-10-27T12:29:42Z"}, "message": "acinclude.m4 (GLIBCPP_CHECK_LINKER_FEATURES): Comment out --gc-sections stuff entirely to avoid misleading people.\n\n\n2000-10-26  Phil Edwards  <pme@sources.redhat.com>\n\t    David Edelsohn  <dje@watson.ibm.com>\n\n\t* acinclude.m4 (GLIBCPP_CHECK_LINKER_FEATURES): Comment out\n\t--gc-sections stuff entirely to avoid misleading people.\n        (GLIBCPP_ENABLE_CSTDIO): Merge need_libio and need_xtra_libio.\n        * libio/Makefile.am (LIBIO_SRCS,LIBIO_WSRCS,LIBIO_XTRA_SRCS):\n\tRearrange and merge.\n        * libio/libio.h: Simplify, make fewer assumptions.  Define those\n\tmacros which must be defined.\n        * config/os/solaris/solaris2.7/bits/os_defines.h: Simplify as a\n\tresult.\n\nFrom-SVN: r37082", "tree": {"sha": "3fe2123edc7e88989934f1aeaba5db32d2f02033", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3fe2123edc7e88989934f1aeaba5db32d2f02033"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5bd17d391761539da90999532d18d83ccdfccca4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5bd17d391761539da90999532d18d83ccdfccca4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5bd17d391761539da90999532d18d83ccdfccca4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5bd17d391761539da90999532d18d83ccdfccca4/comments", "author": null, "committer": null, "parents": [{"sha": "128e977c58b95f6f6a0808b4959c8613c25d4190", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/128e977c58b95f6f6a0808b4959c8613c25d4190", "html_url": "https://github.com/Rust-GCC/gccrs/commit/128e977c58b95f6f6a0808b4959c8613c25d4190"}], "stats": {"total": 218, "additions": 117, "deletions": 101}, "files": [{"sha": "f3df3bddfe439db3e4ab877b964e53fe387156fa", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 65, "deletions": 18, "changes": 83, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bd17d391761539da90999532d18d83ccdfccca4/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bd17d391761539da90999532d18d83ccdfccca4/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=5bd17d391761539da90999532d18d83ccdfccca4", "patch": "@@ -258,16 +258,16 @@ AC_DEFUN(GLIBCPP_CHECK_LINKER_FEATURES, [\n   SECTION_LDFLAGS=''\n   OPT_LDFLAGS=''\n   AC_REQUIRE([AC_PROG_LD])\n-  if test \"$ac_cv_prog_gnu_ld\" = \"yes\"; then\n+\n+  # Set --gc-sections.\n+  if test \"$ac_cv_prog_gnu_ld\" = \"broken\"; then\n     # GNU ld it is!  Joy and bunny rabbits!\n \n     # All these tests are for C++; save the language and the compiler flags.\n     # Need to do this so that g++ won't try to link in libstdc++\n     ac_test_CFLAGS=\"${CFLAGS+set}\"\n     ac_save_CFLAGS=\"$CFLAGS\"\n-#    CFLAGS='-x c++  -Wl,--gc-sections'\n-#XXX\n-    CFLAGS=''\n+    CFLAGS='-x c++  -Wl,--gc-sections'\n \n     # Check for -Wl,--gc-sections\n     # XXX This test is broken at the moment, as symbols required for\n@@ -292,15 +292,16 @@ AC_DEFUN(GLIBCPP_CHECK_LINKER_FEATURES, [\n       CFLAGS=''\n     fi\n     if test \"$ac_sectionLDflags\" = \"yes\"; then\n-#      SECTION_LDFLAGS='-Wl,--gc-sections'\n-#XXX\n-      SECTION_LDFLAGS=''\n+      SECTION_LDFLAGS='-Wl,--gc-sections'\n     fi\n     AC_MSG_RESULT($ac_sectionLDflags)\n+  fi\n \n+  # Set linker optimization flags.\n+  if test \"$ac_cv_prog_gnu_ld\" = \"yes\"; then\n     OPT_LDFLAGS='-Wl,-O1'\n-\n   fi\n+\n   AC_SUBST(SECTION_LDFLAGS)\n   AC_SUBST(OPT_LDFLAGS)\n ])\n@@ -393,6 +394,36 @@ AC_DEFUN(GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_3, [\n ])\n \n \n+dnl\n+dnl Check to see if the (stdlib function) argument passed is\n+dnl 1) declared when using the c++ compiler\n+dnl 2) has \"C\" linkage\n+dnl\n+dnl Define HAVE_STRTOLD if \"strtold\" is declared and links\n+dnl Define HAVE_STRTOF if \"strtof\" is declared and links\n+dnl\n+dnl argument 1 is name of function to check\n+dnl\n+dnl ASSUMES argument is a math function with TWO parameters\n+dnl\n+dnl GLIBCPP_CHECK_STDLIB_DECL_AND_LINKAGE_2\n+AC_DEFUN(GLIBCPP_CHECK_STDLIB_DECL_AND_LINKAGE_2, [\n+  AC_MSG_CHECKING([for $1 declaration])\n+  AC_CACHE_VAL(glibcpp_cv_func_$1_use, [\n+    AC_LANG_SAVE\n+    AC_LANG_CPLUSPLUS\n+    AC_TRY_COMPILE([#include <stdlib.h>], \n+                   [ $1(0, 0);], \n+                   [glibcpp_cv_func_$1_use=yes], [glibcpp_cv_func_$1_use=no])\n+    AC_LANG_RESTORE\n+  ])\n+  AC_MSG_RESULT($glibcpp_cv_func_$1_use)\n+  if test x$glibcpp_cv_func_$1_use = x\"yes\"; then\n+    AC_CHECK_FUNCS($1)    \n+  fi\n+])\n+\n+\n dnl\n dnl Because the builtins are picky picky picky about the arguments they take, \n dnl do an explict linkage tests here.\n@@ -500,6 +531,29 @@ AC_DEFUN(GLIBCPP_CHECK_BUILTIN_MATH_SUPPORT, [\n ])\n \n \n+dnl\n+dnl Check to see what the underlying c library \n+dnl These checks need to do two things: \n+dnl 1) make sure the name is declared when using the c++ compiler\n+dnl 2) make sure the name has \"C\" linkage\n+dnl This might seem like overkill but experience has shown that it's not...\n+dnl\n+dnl Define HAVE_STRTOF etc if \"strtof\" is found.\n+dnl Define HAVE_STRTOLD etc if \"strtold\" is found.\n+dnl\n+dnl GLIBCPP_CHECK_STDLIB_SUPPORT\n+AC_DEFUN(GLIBCPP_CHECK_STDLIB_SUPPORT, [\n+  ac_test_CXXFLAGS=\"${CXXFLAGS+set}\"\n+  ac_save_CXXFLAGS=\"$CXXFLAGS\"\n+  CXXFLAGS='-fno-builtins -D_GNU_SOURCE'\n+\n+  AC_CHECK_FUNCS(strtof)\n+  GLIBCPP_CHECK_STDLIB_DECL_AND_LINKAGE_2(strtold)\n+\n+  CXXFLAGS=\"$ac_save_CXXFLAGS\"\n+])\n+\n+\n dnl\n dnl Check to see what the underlying c library or math library is like.\n dnl These checks need to do two things: \n@@ -520,9 +574,6 @@ AC_DEFUN(GLIBCPP_CHECK_MATH_SUPPORT, [\n   ac_save_LIBS=\"$LIBS\"\n   LIBS=\"$LIBS $libm\"\n \n-  dnl Although not math functions, needed and for some reason checked here.\n-  AC_CHECK_FUNCS(strtof strtold)\n-\n   dnl Check to see if certain C math functions exist.\n   GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_1(isinf)\n   GLIBCPP_CHECK_MATH_DECL_AND_LINKAGE_1(isnan)\n@@ -782,8 +833,8 @@ dnl\n dnl Depending on what is found, select various configure/*/bits/ctype_base.h \n dnl Depending on what is found, select various configure/*/ctype.cc\n dnl\n-dnl GLIBCPP_CHECK_CTYPE\n-AC_DEFUN(GLIBCPP_CHECK_CTYPE, [\n+dnl GLIBCPP_CHECK_CTYPE_SUPPORT\n+AC_DEFUN(GLIBCPP_CHECK_CTYPE_SUPPORT, [\n   AC_CHECK_HEADER(ctype.h, [\n     \n     dnl If doesn't match any specified, go with defaults.\n@@ -1247,11 +1298,9 @@ AC_DEFUN(GLIBCPP_ENABLE_CSTDIO, [\n \n         if test x$glibc_satisfactory = x\"yes\"; then\n            need_libio=no\n-           need_xtra_libio=no\n            need_wlibio=no        \n         else\n            need_libio=yes\n-           need_xtra_libio=yes\n            # bkoz XXX need to add checks to enable this\n            # pme XXX here's a first pass at such a check\n            if test x$enable_c_mbchar != xno; then\n@@ -1261,10 +1310,9 @@ AC_DEFUN(GLIBCPP_ENABLE_CSTDIO, [\n            fi\n         fi\n \n-      # Using libio, but <libio.h> doesn't exist on the target system. . .\n       else\n+         # Using libio, but <libio.h> doesn't exist on the target system. . .\n          need_libio=yes\n-         need_xtra_libio=no\n          # bkoz XXX need to add checks to enable this\n          # pme XXX here's a first pass at such a check\n          if test x$enable_c_mbchar != xno; then\n@@ -1296,7 +1344,6 @@ AC_DEFUN(GLIBCPP_ENABLE_CSTDIO, [\n   # 2000-08-04 bkoz hack\n \n   AM_CONDITIONAL(GLIBCPP_NEED_LIBIO, test \"$need_libio\" = yes)\n-  AM_CONDITIONAL(GLIBCPP_NEED_XTRA_LIBIO, test \"$need_xtra_libio\" = yes)\n   AM_CONDITIONAL(GLIBCPP_NEED_WLIBIO, test \"$need_wlibio\" = yes)\n ])\n "}, {"sha": "23f12e77feea72d0d4a612f86254dc527f730fa1", "filename": "libstdc++-v3/config/os/solaris/solaris2.7/bits/os_defines.h", "status": "modified", "additions": 15, "deletions": 4, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bd17d391761539da90999532d18d83ccdfccca4/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fsolaris%2Fsolaris2.7%2Fbits%2Fos_defines.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bd17d391761539da90999532d18d83ccdfccca4/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fsolaris%2Fsolaris2.7%2Fbits%2Fos_defines.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fsolaris%2Fsolaris2.7%2Fbits%2Fos_defines.h?ref=5bd17d391761539da90999532d18d83ccdfccca4", "patch": "@@ -28,9 +28,20 @@\n // the GNU General Public License.\n \n \n-#ifndef __P\n-#  define __P(p) p\n-#  define __PMT(p) p\n-#endif\n+#ifndef _GLIBCPP_OS_DEFINES\n+#  define _GLIBCPP_OS_DEFINES\n+\n+// Need these to get sane definitions, esp. of 64-bit types and typedefs.\n+#define _XOPEN_SOURCE        500\n+#define _LARGEFILE64_SOURCE  1\n+\n+// These are typedefs which libio assumes are already in place (because\n+// they really are, under Linux).\n+#define __off_t     off_t\n+#define __off64_t   off64_t\n+#define __ssize_t   ssize_t\n \n \n+\n+#endif\n+"}, {"sha": "9a824387c26875aca8502f47c6e901e34d7a15d8", "filename": "libstdc++-v3/libio/Makefile.am", "status": "modified", "additions": 4, "deletions": 9, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bd17d391761539da90999532d18d83ccdfccca4/libstdc%2B%2B-v3%2Flibio%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bd17d391761539da90999532d18d83ccdfccca4/libstdc%2B%2B-v3%2Flibio%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibio%2FMakefile.am?ref=5bd17d391761539da90999532d18d83ccdfccca4", "patch": "@@ -44,28 +44,23 @@ libio_headers = \\\n \n if GLIBCPP_NEED_LIBIO\n LIBIO_SRCS = \\\n-\tfiledoalloc.c genops.c fileops.c stdfiles.c c_codecvt.c\n+\tfiledoalloc.c genops.c fileops.c stdfiles.c c_codecvt.c iofclose.c \\\n+    iofopen.c stdio.c\n else\n LIBIO_SRCS =\n endif\n \n if GLIBCPP_NEED_WLIBIO\n LIBIO_WSRCS = \\\n-\twfiledoalloc.c wfileops.c wgenops.c\n+\twfiledoalloc.c wfileops.c wgenops.c iofwide.c\n else\n LIBIO_WSRCS =\n endif\n \n-if GLIBCPP_NEED_XTRA_LIBIO\n-LIBIO_XTRASRCS = \\\n-\tiofwide.c iofclose.c iofopen.c stdio.c\n-else\n-LIBIO_XTRASRCS =\n-endif\n \n EXTRA_DIST = iostreamP.h\n \n-libio_la_SOURCES = $(LIBIO_SRCS) $(LIBIO_WSRCS) $(LIBIO_XTRASRCS)\n+libio_la_SOURCES = $(LIBIO_SRCS) $(LIBIO_WSRCS)\n \n \n AM_CFLAGS = -D_GNU_SOURCE @DEBUG_FLAGS@ "}, {"sha": "dd34dfb6cb609109e4255eb43b6e49961d14ca8e", "filename": "libstdc++-v3/libio/Makefile.in", "status": "modified", "additions": 28, "deletions": 61, "changes": 89, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bd17d391761539da90999532d18d83ccdfccca4/libstdc%2B%2B-v3%2Flibio%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bd17d391761539da90999532d18d83ccdfccca4/libstdc%2B%2B-v3%2Flibio%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibio%2FMakefile.in?ref=5bd17d391761539da90999532d18d83ccdfccca4", "patch": "@@ -123,16 +123,14 @@ INCLUDES =  \t-nostdinc++ \t-I$(top_builddir) -I$(GLIBCPP_INCLUDE_DIR) \t$(LIBIO_IN\n \n libio_headers =          libio.h libioP.h iolibio.h\n \n-@GLIBCPP_NEED_LIBIO_TRUE@LIBIO_SRCS = \tfiledoalloc.c genops.c fileops.c stdfiles.c c_codecvt.c\n+@GLIBCPP_NEED_LIBIO_TRUE@LIBIO_SRCS = \tfiledoalloc.c genops.c fileops.c stdfiles.c c_codecvt.c iofclose.c     iofopen.c stdio.c\n @GLIBCPP_NEED_LIBIO_FALSE@LIBIO_SRCS = \n-@GLIBCPP_NEED_WLIBIO_TRUE@LIBIO_WSRCS = \twfiledoalloc.c wfileops.c wgenops.c\n+@GLIBCPP_NEED_WLIBIO_TRUE@LIBIO_WSRCS = \twfiledoalloc.c wfileops.c wgenops.c iofwide.c\n @GLIBCPP_NEED_WLIBIO_FALSE@LIBIO_WSRCS = \n-@GLIBCPP_NEED_XTRA_LIBIO_TRUE@LIBIO_XTRASRCS = \tiofwide.c iofclose.c iofopen.c stdio.c\n-@GLIBCPP_NEED_XTRA_LIBIO_FALSE@LIBIO_XTRASRCS = \n \n EXTRA_DIST = iostreamP.h\n \n-libio_la_SOURCES = $(LIBIO_SRCS) $(LIBIO_WSRCS) $(LIBIO_XTRASRCS)\n+libio_la_SOURCES = $(LIBIO_SRCS) $(LIBIO_WSRCS)\n \n AM_CFLAGS = -D_GNU_SOURCE @DEBUG_FLAGS@ \n mkinstalldirs = $(SHELL) $(top_srcdir)/../mkinstalldirs\n@@ -147,62 +145,31 @@ LDFLAGS = @LDFLAGS@\n LIBS = @LIBS@\n libio_la_LDFLAGS = \n libio_la_LIBADD = \n-@GLIBCPP_NEED_WLIBIO_FALSE@@GLIBCPP_NEED_XTRA_LIBIO_FALSE@@GLIBCPP_NEED_LIBIO_FALSE@libio_la_OBJECTS = \n-@GLIBCPP_NEED_WLIBIO_FALSE@@GLIBCPP_NEED_XTRA_LIBIO_TRUE@@GLIBCPP_NEED_LIBIO_FALSE@libio_la_OBJECTS =  \\\n-@GLIBCPP_NEED_WLIBIO_FALSE@@GLIBCPP_NEED_XTRA_LIBIO_TRUE@@GLIBCPP_NEED_LIBIO_FALSE@iofwide.lo \\\n-@GLIBCPP_NEED_WLIBIO_FALSE@@GLIBCPP_NEED_XTRA_LIBIO_TRUE@@GLIBCPP_NEED_LIBIO_FALSE@iofclose.lo \\\n-@GLIBCPP_NEED_WLIBIO_FALSE@@GLIBCPP_NEED_XTRA_LIBIO_TRUE@@GLIBCPP_NEED_LIBIO_FALSE@iofopen.lo \\\n-@GLIBCPP_NEED_WLIBIO_FALSE@@GLIBCPP_NEED_XTRA_LIBIO_TRUE@@GLIBCPP_NEED_LIBIO_FALSE@stdio.lo\n-@GLIBCPP_NEED_WLIBIO_TRUE@@GLIBCPP_NEED_XTRA_LIBIO_FALSE@@GLIBCPP_NEED_LIBIO_TRUE@libio_la_OBJECTS =  \\\n-@GLIBCPP_NEED_WLIBIO_TRUE@@GLIBCPP_NEED_XTRA_LIBIO_FALSE@@GLIBCPP_NEED_LIBIO_TRUE@filedoalloc.lo \\\n-@GLIBCPP_NEED_WLIBIO_TRUE@@GLIBCPP_NEED_XTRA_LIBIO_FALSE@@GLIBCPP_NEED_LIBIO_TRUE@genops.lo \\\n-@GLIBCPP_NEED_WLIBIO_TRUE@@GLIBCPP_NEED_XTRA_LIBIO_FALSE@@GLIBCPP_NEED_LIBIO_TRUE@fileops.lo \\\n-@GLIBCPP_NEED_WLIBIO_TRUE@@GLIBCPP_NEED_XTRA_LIBIO_FALSE@@GLIBCPP_NEED_LIBIO_TRUE@stdfiles.lo \\\n-@GLIBCPP_NEED_WLIBIO_TRUE@@GLIBCPP_NEED_XTRA_LIBIO_FALSE@@GLIBCPP_NEED_LIBIO_TRUE@c_codecvt.lo \\\n-@GLIBCPP_NEED_WLIBIO_TRUE@@GLIBCPP_NEED_XTRA_LIBIO_FALSE@@GLIBCPP_NEED_LIBIO_TRUE@wfiledoalloc.lo \\\n-@GLIBCPP_NEED_WLIBIO_TRUE@@GLIBCPP_NEED_XTRA_LIBIO_FALSE@@GLIBCPP_NEED_LIBIO_TRUE@wfileops.lo \\\n-@GLIBCPP_NEED_WLIBIO_TRUE@@GLIBCPP_NEED_XTRA_LIBIO_FALSE@@GLIBCPP_NEED_LIBIO_TRUE@wgenops.lo\n-@GLIBCPP_NEED_WLIBIO_FALSE@@GLIBCPP_NEED_XTRA_LIBIO_FALSE@@GLIBCPP_NEED_LIBIO_TRUE@libio_la_OBJECTS =  \\\n-@GLIBCPP_NEED_WLIBIO_FALSE@@GLIBCPP_NEED_XTRA_LIBIO_FALSE@@GLIBCPP_NEED_LIBIO_TRUE@filedoalloc.lo \\\n-@GLIBCPP_NEED_WLIBIO_FALSE@@GLIBCPP_NEED_XTRA_LIBIO_FALSE@@GLIBCPP_NEED_LIBIO_TRUE@genops.lo \\\n-@GLIBCPP_NEED_WLIBIO_FALSE@@GLIBCPP_NEED_XTRA_LIBIO_FALSE@@GLIBCPP_NEED_LIBIO_TRUE@fileops.lo \\\n-@GLIBCPP_NEED_WLIBIO_FALSE@@GLIBCPP_NEED_XTRA_LIBIO_FALSE@@GLIBCPP_NEED_LIBIO_TRUE@stdfiles.lo \\\n-@GLIBCPP_NEED_WLIBIO_FALSE@@GLIBCPP_NEED_XTRA_LIBIO_FALSE@@GLIBCPP_NEED_LIBIO_TRUE@c_codecvt.lo\n-@GLIBCPP_NEED_WLIBIO_FALSE@@GLIBCPP_NEED_XTRA_LIBIO_TRUE@@GLIBCPP_NEED_LIBIO_TRUE@libio_la_OBJECTS =  \\\n-@GLIBCPP_NEED_WLIBIO_FALSE@@GLIBCPP_NEED_XTRA_LIBIO_TRUE@@GLIBCPP_NEED_LIBIO_TRUE@filedoalloc.lo \\\n-@GLIBCPP_NEED_WLIBIO_FALSE@@GLIBCPP_NEED_XTRA_LIBIO_TRUE@@GLIBCPP_NEED_LIBIO_TRUE@genops.lo \\\n-@GLIBCPP_NEED_WLIBIO_FALSE@@GLIBCPP_NEED_XTRA_LIBIO_TRUE@@GLIBCPP_NEED_LIBIO_TRUE@fileops.lo \\\n-@GLIBCPP_NEED_WLIBIO_FALSE@@GLIBCPP_NEED_XTRA_LIBIO_TRUE@@GLIBCPP_NEED_LIBIO_TRUE@stdfiles.lo \\\n-@GLIBCPP_NEED_WLIBIO_FALSE@@GLIBCPP_NEED_XTRA_LIBIO_TRUE@@GLIBCPP_NEED_LIBIO_TRUE@c_codecvt.lo \\\n-@GLIBCPP_NEED_WLIBIO_FALSE@@GLIBCPP_NEED_XTRA_LIBIO_TRUE@@GLIBCPP_NEED_LIBIO_TRUE@iofwide.lo \\\n-@GLIBCPP_NEED_WLIBIO_FALSE@@GLIBCPP_NEED_XTRA_LIBIO_TRUE@@GLIBCPP_NEED_LIBIO_TRUE@iofclose.lo \\\n-@GLIBCPP_NEED_WLIBIO_FALSE@@GLIBCPP_NEED_XTRA_LIBIO_TRUE@@GLIBCPP_NEED_LIBIO_TRUE@iofopen.lo \\\n-@GLIBCPP_NEED_WLIBIO_FALSE@@GLIBCPP_NEED_XTRA_LIBIO_TRUE@@GLIBCPP_NEED_LIBIO_TRUE@stdio.lo\n-@GLIBCPP_NEED_WLIBIO_TRUE@@GLIBCPP_NEED_XTRA_LIBIO_FALSE@@GLIBCPP_NEED_LIBIO_FALSE@libio_la_OBJECTS =  \\\n-@GLIBCPP_NEED_WLIBIO_TRUE@@GLIBCPP_NEED_XTRA_LIBIO_FALSE@@GLIBCPP_NEED_LIBIO_FALSE@wfiledoalloc.lo \\\n-@GLIBCPP_NEED_WLIBIO_TRUE@@GLIBCPP_NEED_XTRA_LIBIO_FALSE@@GLIBCPP_NEED_LIBIO_FALSE@wfileops.lo \\\n-@GLIBCPP_NEED_WLIBIO_TRUE@@GLIBCPP_NEED_XTRA_LIBIO_FALSE@@GLIBCPP_NEED_LIBIO_FALSE@wgenops.lo\n-@GLIBCPP_NEED_WLIBIO_TRUE@@GLIBCPP_NEED_XTRA_LIBIO_TRUE@@GLIBCPP_NEED_LIBIO_FALSE@libio_la_OBJECTS =  \\\n-@GLIBCPP_NEED_WLIBIO_TRUE@@GLIBCPP_NEED_XTRA_LIBIO_TRUE@@GLIBCPP_NEED_LIBIO_FALSE@wfiledoalloc.lo \\\n-@GLIBCPP_NEED_WLIBIO_TRUE@@GLIBCPP_NEED_XTRA_LIBIO_TRUE@@GLIBCPP_NEED_LIBIO_FALSE@wfileops.lo \\\n-@GLIBCPP_NEED_WLIBIO_TRUE@@GLIBCPP_NEED_XTRA_LIBIO_TRUE@@GLIBCPP_NEED_LIBIO_FALSE@wgenops.lo \\\n-@GLIBCPP_NEED_WLIBIO_TRUE@@GLIBCPP_NEED_XTRA_LIBIO_TRUE@@GLIBCPP_NEED_LIBIO_FALSE@iofwide.lo \\\n-@GLIBCPP_NEED_WLIBIO_TRUE@@GLIBCPP_NEED_XTRA_LIBIO_TRUE@@GLIBCPP_NEED_LIBIO_FALSE@iofclose.lo \\\n-@GLIBCPP_NEED_WLIBIO_TRUE@@GLIBCPP_NEED_XTRA_LIBIO_TRUE@@GLIBCPP_NEED_LIBIO_FALSE@iofopen.lo \\\n-@GLIBCPP_NEED_WLIBIO_TRUE@@GLIBCPP_NEED_XTRA_LIBIO_TRUE@@GLIBCPP_NEED_LIBIO_FALSE@stdio.lo\n-@GLIBCPP_NEED_WLIBIO_TRUE@@GLIBCPP_NEED_XTRA_LIBIO_TRUE@@GLIBCPP_NEED_LIBIO_TRUE@libio_la_OBJECTS =  \\\n-@GLIBCPP_NEED_WLIBIO_TRUE@@GLIBCPP_NEED_XTRA_LIBIO_TRUE@@GLIBCPP_NEED_LIBIO_TRUE@filedoalloc.lo \\\n-@GLIBCPP_NEED_WLIBIO_TRUE@@GLIBCPP_NEED_XTRA_LIBIO_TRUE@@GLIBCPP_NEED_LIBIO_TRUE@genops.lo \\\n-@GLIBCPP_NEED_WLIBIO_TRUE@@GLIBCPP_NEED_XTRA_LIBIO_TRUE@@GLIBCPP_NEED_LIBIO_TRUE@fileops.lo \\\n-@GLIBCPP_NEED_WLIBIO_TRUE@@GLIBCPP_NEED_XTRA_LIBIO_TRUE@@GLIBCPP_NEED_LIBIO_TRUE@stdfiles.lo \\\n-@GLIBCPP_NEED_WLIBIO_TRUE@@GLIBCPP_NEED_XTRA_LIBIO_TRUE@@GLIBCPP_NEED_LIBIO_TRUE@c_codecvt.lo \\\n-@GLIBCPP_NEED_WLIBIO_TRUE@@GLIBCPP_NEED_XTRA_LIBIO_TRUE@@GLIBCPP_NEED_LIBIO_TRUE@wfiledoalloc.lo \\\n-@GLIBCPP_NEED_WLIBIO_TRUE@@GLIBCPP_NEED_XTRA_LIBIO_TRUE@@GLIBCPP_NEED_LIBIO_TRUE@wfileops.lo \\\n-@GLIBCPP_NEED_WLIBIO_TRUE@@GLIBCPP_NEED_XTRA_LIBIO_TRUE@@GLIBCPP_NEED_LIBIO_TRUE@wgenops.lo \\\n-@GLIBCPP_NEED_WLIBIO_TRUE@@GLIBCPP_NEED_XTRA_LIBIO_TRUE@@GLIBCPP_NEED_LIBIO_TRUE@iofwide.lo \\\n-@GLIBCPP_NEED_WLIBIO_TRUE@@GLIBCPP_NEED_XTRA_LIBIO_TRUE@@GLIBCPP_NEED_LIBIO_TRUE@iofclose.lo \\\n-@GLIBCPP_NEED_WLIBIO_TRUE@@GLIBCPP_NEED_XTRA_LIBIO_TRUE@@GLIBCPP_NEED_LIBIO_TRUE@iofopen.lo \\\n-@GLIBCPP_NEED_WLIBIO_TRUE@@GLIBCPP_NEED_XTRA_LIBIO_TRUE@@GLIBCPP_NEED_LIBIO_TRUE@stdio.lo\n+@GLIBCPP_NEED_WLIBIO_TRUE@@GLIBCPP_NEED_LIBIO_TRUE@libio_la_OBJECTS =  \\\n+@GLIBCPP_NEED_WLIBIO_TRUE@@GLIBCPP_NEED_LIBIO_TRUE@filedoalloc.lo \\\n+@GLIBCPP_NEED_WLIBIO_TRUE@@GLIBCPP_NEED_LIBIO_TRUE@genops.lo fileops.lo \\\n+@GLIBCPP_NEED_WLIBIO_TRUE@@GLIBCPP_NEED_LIBIO_TRUE@stdfiles.lo \\\n+@GLIBCPP_NEED_WLIBIO_TRUE@@GLIBCPP_NEED_LIBIO_TRUE@c_codecvt.lo \\\n+@GLIBCPP_NEED_WLIBIO_TRUE@@GLIBCPP_NEED_LIBIO_TRUE@iofclose.lo \\\n+@GLIBCPP_NEED_WLIBIO_TRUE@@GLIBCPP_NEED_LIBIO_TRUE@iofopen.lo stdio.lo \\\n+@GLIBCPP_NEED_WLIBIO_TRUE@@GLIBCPP_NEED_LIBIO_TRUE@wfiledoalloc.lo \\\n+@GLIBCPP_NEED_WLIBIO_TRUE@@GLIBCPP_NEED_LIBIO_TRUE@wfileops.lo \\\n+@GLIBCPP_NEED_WLIBIO_TRUE@@GLIBCPP_NEED_LIBIO_TRUE@wgenops.lo \\\n+@GLIBCPP_NEED_WLIBIO_TRUE@@GLIBCPP_NEED_LIBIO_TRUE@iofwide.lo\n+@GLIBCPP_NEED_WLIBIO_TRUE@@GLIBCPP_NEED_LIBIO_FALSE@libio_la_OBJECTS =  \\\n+@GLIBCPP_NEED_WLIBIO_TRUE@@GLIBCPP_NEED_LIBIO_FALSE@wfiledoalloc.lo \\\n+@GLIBCPP_NEED_WLIBIO_TRUE@@GLIBCPP_NEED_LIBIO_FALSE@wfileops.lo \\\n+@GLIBCPP_NEED_WLIBIO_TRUE@@GLIBCPP_NEED_LIBIO_FALSE@wgenops.lo \\\n+@GLIBCPP_NEED_WLIBIO_TRUE@@GLIBCPP_NEED_LIBIO_FALSE@iofwide.lo\n+@GLIBCPP_NEED_WLIBIO_FALSE@@GLIBCPP_NEED_LIBIO_TRUE@libio_la_OBJECTS =  \\\n+@GLIBCPP_NEED_WLIBIO_FALSE@@GLIBCPP_NEED_LIBIO_TRUE@filedoalloc.lo \\\n+@GLIBCPP_NEED_WLIBIO_FALSE@@GLIBCPP_NEED_LIBIO_TRUE@genops.lo \\\n+@GLIBCPP_NEED_WLIBIO_FALSE@@GLIBCPP_NEED_LIBIO_TRUE@fileops.lo \\\n+@GLIBCPP_NEED_WLIBIO_FALSE@@GLIBCPP_NEED_LIBIO_TRUE@stdfiles.lo \\\n+@GLIBCPP_NEED_WLIBIO_FALSE@@GLIBCPP_NEED_LIBIO_TRUE@c_codecvt.lo \\\n+@GLIBCPP_NEED_WLIBIO_FALSE@@GLIBCPP_NEED_LIBIO_TRUE@iofclose.lo \\\n+@GLIBCPP_NEED_WLIBIO_FALSE@@GLIBCPP_NEED_LIBIO_TRUE@iofopen.lo stdio.lo\n+@GLIBCPP_NEED_WLIBIO_FALSE@@GLIBCPP_NEED_LIBIO_FALSE@libio_la_OBJECTS = \n CFLAGS = @CFLAGS@\n COMPILE = $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)\n LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)"}, {"sha": "fb404b652838061dcb7cf65b3345fc26395eca91", "filename": "libstdc++-v3/libio/libio.h", "status": "modified", "additions": 5, "deletions": 9, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bd17d391761539da90999532d18d83ccdfccca4/libstdc%2B%2B-v3%2Flibio%2Flibio.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bd17d391761539da90999532d18d83ccdfccca4/libstdc%2B%2B-v3%2Flibio%2Flibio.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibio%2Flibio.h?ref=5bd17d391761539da90999532d18d83ccdfccca4", "patch": "@@ -56,17 +56,13 @@\n #endif\n \n #ifndef __P\n-# if _G_HAVE_SYS_CDEFS\n-#  include <sys/cdefs.h>\n+# ifdef __cplusplus\n+#  define __THROW throw ()\n # else\n-#  ifdef __STDC__\n-#   define __P(p) p\n-#   define __PMT(p) p\n-#  else\n-#   define __P(p) ()\n-#   define __PMT(p) ()\n-#  endif\n+#  define __THROW\n # endif\n+# define __P(p) p __THROW\n+# define __PMT(p) p\n #endif /*!__P*/\n \n /* For backward compatibility */"}]}