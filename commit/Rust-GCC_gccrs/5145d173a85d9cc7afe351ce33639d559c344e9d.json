{"sha": "5145d173a85d9cc7afe351ce33639d559c344e9d", "node_id": "C_kwDOANBUbNoAKDUxNDVkMTczYTg1ZDljYzdhZmUzNTFjZTMzNjM5ZDU1OWMzNDRlOWQ", "commit": {"author": {"name": "Yannick Moy", "email": "moy@adacore.com", "date": "2021-10-15T13:06:34Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-10-25T15:07:19Z"}, "message": "[Ada] Issue error on invalid use of Ghost inside pragma Predicate\n\ngcc/ada/\n\n\t* sem_ch13.adb (Freeze_Entity_Checks): Perform same check on\n\tpredicate expression inside pragma as inside aspect.\n\t* sem_util.adb (Is_Current_Instance): Recognize possible\n\toccurrence of subtype as current instance inside the pragma\n\tPredicate.", "tree": {"sha": "a94d062a23988a46032adeb799a7027029730324", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a94d062a23988a46032adeb799a7027029730324"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5145d173a85d9cc7afe351ce33639d559c344e9d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5145d173a85d9cc7afe351ce33639d559c344e9d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5145d173a85d9cc7afe351ce33639d559c344e9d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5145d173a85d9cc7afe351ce33639d559c344e9d/comments", "author": {"login": "yannickmoy", "id": 859440, "node_id": "MDQ6VXNlcjg1OTQ0MA==", "avatar_url": "https://avatars.githubusercontent.com/u/859440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yannickmoy", "html_url": "https://github.com/yannickmoy", "followers_url": "https://api.github.com/users/yannickmoy/followers", "following_url": "https://api.github.com/users/yannickmoy/following{/other_user}", "gists_url": "https://api.github.com/users/yannickmoy/gists{/gist_id}", "starred_url": "https://api.github.com/users/yannickmoy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yannickmoy/subscriptions", "organizations_url": "https://api.github.com/users/yannickmoy/orgs", "repos_url": "https://api.github.com/users/yannickmoy/repos", "events_url": "https://api.github.com/users/yannickmoy/events{/privacy}", "received_events_url": "https://api.github.com/users/yannickmoy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ea5f7f3962a0781cfd36016776adf79986929bfa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea5f7f3962a0781cfd36016776adf79986929bfa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea5f7f3962a0781cfd36016776adf79986929bfa"}], "stats": {"total": 28, "additions": 26, "deletions": 2}, "files": [{"sha": "0b9bce7f4be020e06a1c798c8ed230866258eb4a", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5145d173a85d9cc7afe351ce33639d559c344e9d/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5145d173a85d9cc7afe351ce33639d559c344e9d/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=5145d173a85d9cc7afe351ce33639d559c344e9d", "patch": "@@ -13144,6 +13144,28 @@ package body Sem_Ch13 is\n                   else\n                      Check_Aspect_At_Freeze_Point (Ritem);\n                   end if;\n+\n+               --  A pragma Predicate should be checked like one of the\n+               --  corresponding aspects, wrt possible misuse of ghost\n+               --  entities.\n+\n+               elsif Nkind (Ritem) = N_Pragma\n+                 and then No (Corresponding_Aspect (Ritem))\n+                 and then\n+                   Get_Pragma_Id (Pragma_Name (Ritem)) = Pragma_Predicate\n+               then\n+                  --  Retrieve the visibility to components and discriminants\n+                  --  in order to properly analyze the pragma.\n+\n+                  declare\n+                     Arg : constant Node_Id :=\n+                        Next (First (Pragma_Argument_Associations (Ritem)));\n+                  begin\n+                     Push_Type (E);\n+                     Preanalyze_Spec_Expression\n+                       (Expression (Arg), Standard_Boolean);\n+                     Pop_Type (E);\n+                  end;\n                end if;\n \n                Next_Rep_Item (Ritem);"}, {"sha": "4dfee1edca55213f3ffec33edfca1b0c54c0d389", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5145d173a85d9cc7afe351ce33639d559c344e9d/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5145d173a85d9cc7afe351ce33639d559c344e9d/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=5145d173a85d9cc7afe351ce33639d559c344e9d", "patch": "@@ -16644,15 +16644,17 @@ package body Sem_Util is\n             --  Predicate_Failure aspect, for which we do not construct a\n             --  wrapper procedure. The subtype will be replaced by the\n             --  expression being tested when the corresponding predicate\n-            --  check is expanded.\n+            --  check is expanded. It may also appear in the pragma Predicate\n+            --  expression during legality checking.\n \n             elsif Nkind (P) = N_Aspect_Specification\n               and then Nkind (Parent (P)) = N_Subtype_Declaration\n             then\n                return True;\n \n             elsif Nkind (P) = N_Pragma\n-              and then Get_Pragma_Id (P) = Pragma_Predicate_Failure\n+              and then Get_Pragma_Id (P) in Pragma_Predicate\n+                                          | Pragma_Predicate_Failure\n             then\n                return True;\n             end if;"}]}