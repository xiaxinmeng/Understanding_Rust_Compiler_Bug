{"sha": "104b260cac1c7d17b1a325f98c35f4a27a163cd1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTA0YjI2MGNhYzFjN2QxN2IxYTMyNWY5OGMzNWY0YTI3YTE2M2NkMQ==", "commit": {"author": {"name": "Tobias Schl\u00fcter", "email": "tobias.schlueter@physik.uni-muenchen.de", "date": "2004-07-10T17:30:40Z"}, "committer": {"name": "Tobias Schl\u00fcter", "email": "tobi@gcc.gnu.org", "date": "2004-07-10T17:30:40Z"}, "message": "re PR fortran/15969 (ICE and assertion failure in trans-expr.c)\n\nPR fortran/15969\n* trans-expr.c (gfc_conv_structure): Handle initialization\nof scalar pointer components.\n\nFrom-SVN: r84464", "tree": {"sha": "7f70f15047d4c324c8509ed89a37edaf52fa838b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7f70f15047d4c324c8509ed89a37edaf52fa838b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/104b260cac1c7d17b1a325f98c35f4a27a163cd1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/104b260cac1c7d17b1a325f98c35f4a27a163cd1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/104b260cac1c7d17b1a325f98c35f4a27a163cd1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/104b260cac1c7d17b1a325f98c35f4a27a163cd1/comments", "author": {"login": "TobiSchluter", "id": 11887541, "node_id": "MDQ6VXNlcjExODg3NTQx", "avatar_url": "https://avatars.githubusercontent.com/u/11887541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TobiSchluter", "html_url": "https://github.com/TobiSchluter", "followers_url": "https://api.github.com/users/TobiSchluter/followers", "following_url": "https://api.github.com/users/TobiSchluter/following{/other_user}", "gists_url": "https://api.github.com/users/TobiSchluter/gists{/gist_id}", "starred_url": "https://api.github.com/users/TobiSchluter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TobiSchluter/subscriptions", "organizations_url": "https://api.github.com/users/TobiSchluter/orgs", "repos_url": "https://api.github.com/users/TobiSchluter/repos", "events_url": "https://api.github.com/users/TobiSchluter/events{/privacy}", "received_events_url": "https://api.github.com/users/TobiSchluter/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TobiSchluter", "id": 11887541, "node_id": "MDQ6VXNlcjExODg3NTQx", "avatar_url": "https://avatars.githubusercontent.com/u/11887541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TobiSchluter", "html_url": "https://github.com/TobiSchluter", "followers_url": "https://api.github.com/users/TobiSchluter/followers", "following_url": "https://api.github.com/users/TobiSchluter/following{/other_user}", "gists_url": "https://api.github.com/users/TobiSchluter/gists{/gist_id}", "starred_url": "https://api.github.com/users/TobiSchluter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TobiSchluter/subscriptions", "organizations_url": "https://api.github.com/users/TobiSchluter/orgs", "repos_url": "https://api.github.com/users/TobiSchluter/repos", "events_url": "https://api.github.com/users/TobiSchluter/events{/privacy}", "received_events_url": "https://api.github.com/users/TobiSchluter/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "794ba78be2148d3a92bccea446169e4dfad90c45", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/794ba78be2148d3a92bccea446169e4dfad90c45", "html_url": "https://github.com/Rust-GCC/gccrs/commit/794ba78be2148d3a92bccea446169e4dfad90c45"}], "stats": {"total": 35, "additions": 28, "deletions": 7}, "files": [{"sha": "ded551cb2d67dc2b5ce33263ee5f5dcf4f26ea44", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/104b260cac1c7d17b1a325f98c35f4a27a163cd1/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/104b260cac1c7d17b1a325f98c35f4a27a163cd1/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=104b260cac1c7d17b1a325f98c35f4a27a163cd1", "patch": "@@ -6,6 +6,10 @@\n \tPR fortran/16336\n \t* match.c (match_common): Fix error reporting for used common.\n \n+\tPR fortran/15969\n+\t* trans-expr.c (gfc_conv_structure): Handle initialization\n+\tof scalar pointer components.\n+\n 2004-07-10  Tobias Schlueter  <tobias.schlueter@physik.uni-muenchen.de>\n \n \t* trans-common.c: Fix whitespace issues, make variable names"}, {"sha": "5c62234660fc8779cc76652971c5f0f2075ba7b5", "filename": "gcc/fortran/trans-expr.c", "status": "modified", "additions": 24, "deletions": 7, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/104b260cac1c7d17b1a325f98c35f4a27a163cd1/gcc%2Ffortran%2Ftrans-expr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/104b260cac1c7d17b1a325f98c35f4a27a163cd1/gcc%2Ffortran%2Ftrans-expr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-expr.c?ref=104b260cac1c7d17b1a325f98c35f4a27a163cd1", "patch": "@@ -1381,7 +1381,7 @@ gfc_conv_structure (gfc_se * se, gfc_expr * expr, int init)\n   tree type;\n   tree arraytype;\n \n-  assert (expr->expr_type == EXPR_STRUCTURE);\n+  assert (expr->expr_type == EXPR_STRUCTURE || expr->expr_type == EXPR_NULL);\n   type = gfc_typenode_for_spec (&expr->ts);\n   head = build1 (CONSTRUCTOR, type, NULL_TREE);\n   tail = NULL_TREE;\n@@ -1397,15 +1397,32 @@ gfc_conv_structure (gfc_se * se, gfc_expr * expr, int init)\n       /* Evaluate the expression for this component.  */\n       if (init)\n \t{\n-\t  if (cm->dimension)\n+\t  if (!cm->pointer)\n \t    {\n-\t      arraytype = TREE_TYPE (cm->backend_decl);\n-\t      cse.expr = gfc_conv_array_initializer (arraytype, c->expr);\n+\t      /* Initializing a non-pointer element.  */\n+\t      if (cm->dimension)\n+\t\t{\n+\t\t  arraytype = TREE_TYPE (cm->backend_decl);\n+\t\t  cse.expr = gfc_conv_array_initializer (arraytype, c->expr);\n+\t\t}\n+\t      else if (cm->ts.type == BT_DERIVED)\n+\t\tgfc_conv_structure (&cse, c->expr, 1);\n+\t      else\n+\t\tgfc_conv_expr (&cse, c->expr);\n+\n \t    }\n-\t  else if (cm->ts.type == BT_DERIVED)\n-\t    gfc_conv_structure (&cse, c->expr, 1);\n \t  else\n-\t    gfc_conv_expr (&cse, c->expr);\n+\t    {\n+\t      /* Pointer components may only be initialized to\n+\t\t NULL. This should have been enforced by the frontend.  */\n+\t      if (cm->dimension)\n+\t\t{\n+\t\t  gfc_todo_error (\"Initialization of pointer members\");\n+\t\t}\n+\t      else\n+\t\tcse.expr = fold_convert (TREE_TYPE (cm->backend_decl), \n+\t\t\t\t\t null_pointer_node);\n+\t    }\n \t}\n       else\n \t{"}]}