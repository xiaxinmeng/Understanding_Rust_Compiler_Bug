{"sha": "8bb8e838416dce451fae352df5198f99e5f84da5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGJiOGU4Mzg0MTZkY2U0NTFmYWUzNTJkZjUxOThmOTllNWY4NGRhNQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2015-07-22T11:31:50Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2015-07-22T11:31:50Z"}, "message": "re PR tree-optimization/66952 (wrong code at -O2 and -O3 on x86_64-linux-gnu)\n\n2015-07-22  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/66952\n\t* tree-ssa-ifcombine.c (pass_tree_ifcombine::execute): For\n\tblocks we end up executing unconditionally reset all SSA\n\tinfo such as range and alignment.\n\t* tree-ssanames.h (reset_flow_sensitive_info): Declare.\n\t* tree-ssanames.c (reset_flow_sensitive_info): New function.\n\n\t* gcc.dg/torture/pr66952.c: New testcase.\n\nFrom-SVN: r226062", "tree": {"sha": "2b717adaafe8433027ff31c83f676589f58cf74b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2b717adaafe8433027ff31c83f676589f58cf74b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8bb8e838416dce451fae352df5198f99e5f84da5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8bb8e838416dce451fae352df5198f99e5f84da5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8bb8e838416dce451fae352df5198f99e5f84da5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8bb8e838416dce451fae352df5198f99e5f84da5/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b1db706aba296e3bbb369102a540169315888dce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1db706aba296e3bbb369102a540169315888dce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1db706aba296e3bbb369102a540169315888dce"}], "stats": {"total": 77, "additions": 76, "deletions": 1}, "files": [{"sha": "c1838eac3539ac209b88fee1334b9448dc5f39f9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bb8e838416dce451fae352df5198f99e5f84da5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bb8e838416dce451fae352df5198f99e5f84da5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8bb8e838416dce451fae352df5198f99e5f84da5", "patch": "@@ -1,3 +1,12 @@\n+2015-07-22  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/66952\n+\t* tree-ssa-ifcombine.c (pass_tree_ifcombine::execute): For\n+\tblocks we end up executing unconditionally reset all SSA\n+\tinfo such as range and alignment.\n+\t* tree-ssanames.h (reset_flow_sensitive_info): Declare.\n+\t* tree-ssanames.c (reset_flow_sensitive_info): New function.\n+\n 2015-07-22  Charles Baylis  <charles.baylis@linaro.org>\n \n \t* config/aarch64/aarch64-simd.md (vec_store_lanesoi_lane<mode>): Fix"}, {"sha": "f4eb4c9f94c1afd031dc5f9a1b955febc05177a7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bb8e838416dce451fae352df5198f99e5f84da5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bb8e838416dce451fae352df5198f99e5f84da5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8bb8e838416dce451fae352df5198f99e5f84da5", "patch": "@@ -1,3 +1,8 @@\n+2015-07-22  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/66952\n+\t* gcc.dg/torture/pr66952.c: New testcase.\n+\n 2015-07-22  Charles Baylis  <charles.baylis@linaro.org>\n \n         * gcc.target/aarch64/advsimd-intrinsics/vld2_lane_f32_indices_1.c: New"}, {"sha": "2a98d2ebcfef4776a59010f99e48647fd4859906", "filename": "gcc/testsuite/gcc.dg/torture/pr66952.c", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bb8e838416dce451fae352df5198f99e5f84da5/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr66952.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bb8e838416dce451fae352df5198f99e5f84da5/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr66952.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr66952.c?ref=8bb8e838416dce451fae352df5198f99e5f84da5", "patch": "@@ -0,0 +1,28 @@\n+/* { dg-do run } */\n+\n+int a = 128, b;\n+\n+static int\n+fn1 (char p1, int p2)\n+{\n+  return p1 < 0 || p1 > 1 >> p2 ? 0 : p1 << 1;\n+}\n+\n+static int\n+fn2 ()\n+{\n+  char c = a;\n+  b = fn1 (c, 1);\n+  if ((128 | c) < 0 ? 1 : 0)\n+    return 1;\n+  return 0;\n+}\n+\n+int\n+main ()\n+{\n+  if (fn2 () != 1)\n+    __builtin_abort ();\n+\n+  return 0;\n+}"}, {"sha": "ef3d16de4120c2311d6dd448da2ff86b849220b7", "filename": "gcc/tree-ssa-ifcombine.c", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bb8e838416dce451fae352df5198f99e5f84da5/gcc%2Ftree-ssa-ifcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bb8e838416dce451fae352df5198f99e5f84da5/gcc%2Ftree-ssa-ifcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-ifcombine.c?ref=8bb8e838416dce451fae352df5198f99e5f84da5", "patch": "@@ -765,7 +765,22 @@ pass_tree_ifcombine::execute (function *fun)\n \n       if (stmt\n \t  && gimple_code (stmt) == GIMPLE_COND)\n-\tcfg_changed |= tree_ssa_ifcombine_bb (bb);\n+\tif (tree_ssa_ifcombine_bb (bb))\n+\t  {\n+\t    /* Clear range info from all stmts in BB which is now executed\n+\t       conditional on a always true/false condition.  */\n+\t    for (gimple_stmt_iterator gsi = gsi_start_bb (bb);\n+\t\t !gsi_end_p (gsi); gsi_next (&gsi))\n+\t      {\n+\t\tgimple stmt = gsi_stmt (gsi);\n+\t\tssa_op_iter i;\n+\t\ttree op;\n+\t\tFOR_EACH_SSA_TREE_OPERAND (op, stmt, i, SSA_OP_DEF)\n+\t\t  reset_flow_sensitive_info (op);\n+\t      }\n+\n+\t    cfg_changed |= true;\n+\t  }\n     }\n \n   free (bbs);"}, {"sha": "910cb19b8d14dc64e232c176497a4ffe05b24846", "filename": "gcc/tree-ssanames.c", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bb8e838416dce451fae352df5198f99e5f84da5/gcc%2Ftree-ssanames.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bb8e838416dce451fae352df5198f99e5f84da5/gcc%2Ftree-ssanames.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssanames.c?ref=8bb8e838416dce451fae352df5198f99e5f84da5", "patch": "@@ -528,6 +528,23 @@ duplicate_ssa_name_fn (struct function *fn, tree name, gimple stmt)\n }\n \n \n+/* Reset all flow sensitive data on NAME such as range-info, nonzero\n+   bits and alignment.  */\n+\n+void\n+reset_flow_sensitive_info (tree name)\n+{\n+  if (POINTER_TYPE_P (TREE_TYPE (name)))\n+    {\n+      /* points-to info is not flow-sensitive.  */\n+      if (SSA_NAME_PTR_INFO (name))\n+\tmark_ptr_info_alignment_unknown (SSA_NAME_PTR_INFO (name));\n+    }\n+  else\n+    SSA_NAME_RANGE_INFO (name) = NULL;\n+}\n+\n+\n /* Release all the SSA_NAMEs created by STMT.  */\n \n void"}, {"sha": "c6db57e9660ea4b32f329f36cb7f87cebb70ff92", "filename": "gcc/tree-ssanames.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bb8e838416dce451fae352df5198f99e5f84da5/gcc%2Ftree-ssanames.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bb8e838416dce451fae352df5198f99e5f84da5/gcc%2Ftree-ssanames.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssanames.h?ref=8bb8e838416dce451fae352df5198f99e5f84da5", "patch": "@@ -94,6 +94,7 @@ extern void duplicate_ssa_name_ptr_info (tree, struct ptr_info_def *);\n extern tree duplicate_ssa_name_fn (struct function *, tree, gimple);\n extern void duplicate_ssa_name_range_info (tree, enum value_range_type,\n \t\t\t\t\t   struct range_info_def *);\n+extern void reset_flow_sensitive_info (tree);\n extern void release_defs (gimple);\n extern void replace_ssa_name_symbol (tree, tree);\n "}]}