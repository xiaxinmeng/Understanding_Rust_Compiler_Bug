{"sha": "84dc00e8ac2ca08a80bbbe55ad8ec29ed8393a26", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODRkYzAwZThhYzJjYTA4YTgwYmJiZTU1YWQ4ZWMyOWVkODM5M2EyNg==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@codesourcery.com", "date": "2006-04-08T14:15:44Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2006-04-08T14:15:44Z"}, "message": "* decl2.c, pt.c, semantics.c: Fix comment typos.\n\nFrom-SVN: r112779", "tree": {"sha": "843900f8abe8b2eb417ea2bdcd27a02c379218f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/843900f8abe8b2eb417ea2bdcd27a02c379218f4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/84dc00e8ac2ca08a80bbbe55ad8ec29ed8393a26", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84dc00e8ac2ca08a80bbbe55ad8ec29ed8393a26", "html_url": "https://github.com/Rust-GCC/gccrs/commit/84dc00e8ac2ca08a80bbbe55ad8ec29ed8393a26", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84dc00e8ac2ca08a80bbbe55ad8ec29ed8393a26/comments", "author": null, "committer": null, "parents": [{"sha": "675f0a8ab7d937701f2f4b2185318b15dd6e6f67", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/675f0a8ab7d937701f2f4b2185318b15dd6e6f67", "html_url": "https://github.com/Rust-GCC/gccrs/commit/675f0a8ab7d937701f2f4b2185318b15dd6e6f67"}], "stats": {"total": 12, "additions": 8, "deletions": 4}, "files": [{"sha": "ea00b4b398bd3544d7470b4300b4d140e78e7640", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84dc00e8ac2ca08a80bbbe55ad8ec29ed8393a26/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84dc00e8ac2ca08a80bbbe55ad8ec29ed8393a26/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=84dc00e8ac2ca08a80bbbe55ad8ec29ed8393a26", "patch": "@@ -1,3 +1,7 @@\n+2006-04-08  Kazu Hirata  <kazu@codesourcery.com>\n+\n+\t* decl2.c, pt.c, semantics.c: Fix comment typos.\n+\n 2006-04-06  Roger Sayle  <roger@eyesopen.com>\n \n \t* call.c (null_ptr_cst_p): Add explicit TREE_CONSTANT_OVERFLOW check."}, {"sha": "ed26db2fe3414f2975f1f248e7d543604183de8b", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84dc00e8ac2ca08a80bbbe55ad8ec29ed8393a26/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84dc00e8ac2ca08a80bbbe55ad8ec29ed8393a26/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=84dc00e8ac2ca08a80bbbe55ad8ec29ed8393a26", "patch": "@@ -787,7 +787,7 @@ finish_static_data_member_decl (tree decl,\n   cp_finish_decl (decl, init, init_const_expr_p, asmspec_tree, flags);\n }\n \n-/* DECLARATOR and DECLSPECS correspond to a class member.  The othe\n+/* DECLARATOR and DECLSPECS correspond to a class member.  The other\n    parameters are as for cp_finish_decl.  Return the DECL for the\n    class member declared.  */ \n "}, {"sha": "adabe7698dce9249129a0adb333dc96581e0f760", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84dc00e8ac2ca08a80bbbe55ad8ec29ed8393a26/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84dc00e8ac2ca08a80bbbe55ad8ec29ed8393a26/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=84dc00e8ac2ca08a80bbbe55ad8ec29ed8393a26", "patch": "@@ -3984,7 +3984,7 @@ convert_template_argument (tree parm,\n    warning messages are issued under control of COMPLAIN.\n \n    If REQUIRE_ALL_ARGS is false, argument deduction will be performed\n-   for arugments not specified in ARGS.  Otherwise, if\n+   for arguments not specified in ARGS.  Otherwise, if\n    USE_DEFAULT_ARGS is true, default arguments will be used to fill in\n    unspecified arguments.  If REQUIRE_ALL_ARGS is true, but\n    USE_DEFAULT_ARGS is false, then all arguments must be specified in"}, {"sha": "114f3d221459e4397b488b4dbd58c4548bfb80d9", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84dc00e8ac2ca08a80bbbe55ad8ec29ed8393a26/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84dc00e8ac2ca08a80bbbe55ad8ec29ed8393a26/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=84dc00e8ac2ca08a80bbbe55ad8ec29ed8393a26", "patch": "@@ -3512,7 +3512,7 @@ finish_omp_clauses (tree clauses)\n       while (TREE_CODE (inner_type) == ARRAY_TYPE)\n \tinner_type = TREE_TYPE (inner_type);\n \n-      /* Check for special function availablity by building a call to one.\n+      /* Check for special function availability by building a call to one.\n \t Save the results, because later we won't be in the right context\n \t for making these queries.  */\n       if (CLASS_TYPE_P (inner_type)\n@@ -3658,7 +3658,7 @@ finish_omp_structured_block (tree block)\n   return do_poplevel (block);\n }\n \n-/* Similarly, except force the retension of the BLOCK.  */\n+/* Similarly, except force the retention of the BLOCK.  */\n \n tree\n begin_omp_parallel (void)"}]}