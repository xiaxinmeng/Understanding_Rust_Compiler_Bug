{"sha": "e5022f0dcc0471672a62bd7618bf813cd84c7f98", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTUwMjJmMGRjYzA0NzE2NzJhNjJiZDc2MThiZjgxM2NkODRjN2Y5OA==", "commit": {"author": {"name": "Mike Stump", "email": "mrs@apple.com", "date": "2005-03-27T00:49:23Z"}, "committer": {"name": "Mike Stump", "email": "mrs@gcc.gnu.org", "date": "2005-03-27T00:49:23Z"}, "message": "configure.ac: Fix ZIP and GCJH at configure time to absolute paths like we do for the compiler...\n\n        * configure.ac: Fix ZIP and GCJH at configure time to absolute\n        paths like we do for the compiler, as we use it in external/sax\n        and it doesn't get MULTIBUILDTOP right when multilibing.\n\nFrom-SVN: r97091", "tree": {"sha": "1a4608d950c7ae434b1519aa000a5b624cdb58b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1a4608d950c7ae434b1519aa000a5b624cdb58b0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e5022f0dcc0471672a62bd7618bf813cd84c7f98", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5022f0dcc0471672a62bd7618bf813cd84c7f98", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e5022f0dcc0471672a62bd7618bf813cd84c7f98", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5022f0dcc0471672a62bd7618bf813cd84c7f98/comments", "author": null, "committer": null, "parents": [{"sha": "e732e137e01b6e582b85d56932946742f46b2d9b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e732e137e01b6e582b85d56932946742f46b2d9b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e732e137e01b6e582b85d56932946742f46b2d9b"}], "stats": {"total": 20, "additions": 16, "deletions": 4}, "files": [{"sha": "5b76363c064b996eb70fd27462a24cf8bd947c8b", "filename": "libjava/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5022f0dcc0471672a62bd7618bf813cd84c7f98/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5022f0dcc0471672a62bd7618bf813cd84c7f98/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=e5022f0dcc0471672a62bd7618bf813cd84c7f98", "patch": "@@ -1,3 +1,9 @@\n+2005-03-25  Mike Stump  <mrs@apple.com>\n+\n+\t* configure.ac: Fix ZIP and GCJH at configure time to absolute\n+\tpaths like we do for the compiler, as we use it in external/sax\n+\tand it doesn't get MULTIBUILDTOP right when multilibing.\n+\n 2005-03-24  Anthony Green  <green@redhat.com>\n \n \t* gnu/gcj/tools/gcj_dbtool/Main.java: Accept libdir argument with"}, {"sha": "076a4a00d41b7de12174b1e90cb03141f0a3ab90", "filename": "libjava/configure", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5022f0dcc0471672a62bd7618bf813cd84c7f98/libjava%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5022f0dcc0471672a62bd7618bf813cd84c7f98/libjava%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fconfigure?ref=e5022f0dcc0471672a62bd7618bf813cd84c7f98", "patch": "@@ -13275,6 +13275,7 @@ NATIVE=yes\n # Which gcj do we use?\n which_gcj=default\n built_gcc_dir=\"`cd ${builddotdot}/../../${host_subdir}/gcc && ${PWDCMD-pwd}`\"\n+built_hostdir=\"`cd ${builddotdot}/../../${host_subdir} && ${PWDCMD-pwd}`\"\n if test -n \"${with_cross_host}\"; then\n   # We are being configured with a cross compiler. We can't\n   # use ac_exeext, because that is for the target platform.\n@@ -13313,8 +13314,10 @@ fi\n case \"${which_gcj}\" in\n    built)\n       GCJ=\"$built_gcc_dir/gcj -B`${PWDCMD-pwd}`/ -B$built_gcc_dir/\"\n-      GCJH='$(MULTIBUILDTOP)../../$(host_subdir)/gcc/gcjh'\n-      ZIP='$(MULTIBUILDTOP)../../$(host_subdir)/fastjar/fastjar'\n+      # GCJH='$(MULTIBUILDTOP)../../$(host_subdir)/gcc/gcjh'\n+      GCJH=\"$built_gcc_dir/gcjh\"\n+      # ZIP='$(MULTIBUILDTOP)../../$(host_subdir)/fastjar/fastjar'\n+      ZIP=\"$built_hostdir/fastjar/fastjar\"\n    ;;\n    cross)\n       if test \"x${with_newlib}\" = \"xyes\"; then"}, {"sha": "9f16149a8f6b0fa1a853ac97c0427e6e4c61db35", "filename": "libjava/configure.ac", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5022f0dcc0471672a62bd7618bf813cd84c7f98/libjava%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5022f0dcc0471672a62bd7618bf813cd84c7f98/libjava%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fconfigure.ac?ref=e5022f0dcc0471672a62bd7618bf813cd84c7f98", "patch": "@@ -1029,6 +1029,7 @@ NATIVE=yes\n # Which gcj do we use?\n which_gcj=default\n built_gcc_dir=\"`cd ${builddotdot}/../../${host_subdir}/gcc && ${PWDCMD-pwd}`\"\n+built_hostdir=\"`cd ${builddotdot}/../../${host_subdir} && ${PWDCMD-pwd}`\"\n if test -n \"${with_cross_host}\"; then\n   # We are being configured with a cross compiler. We can't\n   # use ac_exeext, because that is for the target platform.\n@@ -1067,8 +1068,10 @@ fi\n case \"${which_gcj}\" in\n    built)\n       GCJ=\"$built_gcc_dir/gcj -B`${PWDCMD-pwd}`/ -B$built_gcc_dir/\"\n-      GCJH='$(MULTIBUILDTOP)../../$(host_subdir)/gcc/gcjh'\n-      ZIP='$(MULTIBUILDTOP)../../$(host_subdir)/fastjar/fastjar'\n+      # GCJH='$(MULTIBUILDTOP)../../$(host_subdir)/gcc/gcjh'\n+      GCJH=\"$built_gcc_dir/gcjh\"\n+      # ZIP='$(MULTIBUILDTOP)../../$(host_subdir)/fastjar/fastjar'\n+      ZIP=\"$built_hostdir/fastjar/fastjar\"\n    ;;\n    cross)\n       if test \"x${with_newlib}\" = \"xyes\"; then"}]}