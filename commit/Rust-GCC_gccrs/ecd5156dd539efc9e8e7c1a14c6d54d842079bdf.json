{"sha": "ecd5156dd539efc9e8e7c1a14c6d54d842079bdf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWNkNTE1NmRkNTM5ZWZjOWU4ZTdjMWExNGM2ZDU0ZDg0MjA3OWJkZg==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2017-09-28T17:12:19Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2017-09-28T17:12:19Z"}, "message": "jit: document function pointers\n\ngcc/jit/ChangeLog:\n\t* docs/topics/expressions.rst (Function calls): Add link to\n\tgcc_jit_context_new_function_ptr_type.\n\t(Function pointers): Convert to cross-references to\n\tfunction-pointers.rst, moving material there.\n\t* docs/topics/function-pointers.rst: New page.\n\t* docs/topics/index.rst: Add function-pointers.rst.\n\t* docs/topics/types.rst (Function pointer types): New section.\n\t* docs/_build/texinfo/libgccjit.texi: Regenerate.\n\nFrom-SVN: r253257", "tree": {"sha": "b05eb2d2943cc4be7511e34d9c9c0720df40ead4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b05eb2d2943cc4be7511e34d9c9c0720df40ead4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ecd5156dd539efc9e8e7c1a14c6d54d842079bdf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ecd5156dd539efc9e8e7c1a14c6d54d842079bdf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ecd5156dd539efc9e8e7c1a14c6d54d842079bdf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ecd5156dd539efc9e8e7c1a14c6d54d842079bdf/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6050d55ca84fe96018e99afa5e1403341c538f3f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6050d55ca84fe96018e99afa5e1403341c538f3f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6050d55ca84fe96018e99afa5e1403341c538f3f"}], "stats": {"total": 1160, "additions": 677, "deletions": 483}, "files": [{"sha": "aabcefa7c683be8b7ce44601de3964b4c68a434e", "filename": "gcc/jit/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecd5156dd539efc9e8e7c1a14c6d54d842079bdf/gcc%2Fjit%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecd5156dd539efc9e8e7c1a14c6d54d842079bdf/gcc%2Fjit%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjit%2FChangeLog?ref=ecd5156dd539efc9e8e7c1a14c6d54d842079bdf", "patch": "@@ -1,3 +1,14 @@\n+2017-09-28  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* docs/topics/expressions.rst (Function calls): Add link to\n+\tgcc_jit_context_new_function_ptr_type.\n+\t(Function pointers): Convert to cross-references to\n+\tfunction-pointers.rst, moving material there.\n+\t* docs/topics/function-pointers.rst: New page.\n+\t* docs/topics/index.rst: Add function-pointers.rst.\n+\t* docs/topics/types.rst (Function pointer types): New section.\n+\t* docs/_build/texinfo/libgccjit.texi: Regenerate.\n+\n 2017-09-28  David Malcolm  <dmalcolm@redhat.com>\n \n \t* jit-recording.c"}, {"sha": "1d21e81b9abbbfffd63b09755f92165ca8ec4c59", "filename": "gcc/jit/docs/_build/texinfo/libgccjit.texi", "status": "modified", "additions": 570, "deletions": 471, "changes": 1041, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecd5156dd539efc9e8e7c1a14c6d54d842079bdf/gcc%2Fjit%2Fdocs%2F_build%2Ftexinfo%2Flibgccjit.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecd5156dd539efc9e8e7c1a14c6d54d842079bdf/gcc%2Fjit%2Fdocs%2F_build%2Ftexinfo%2Flibgccjit.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjit%2Fdocs%2F_build%2Ftexinfo%2Flibgccjit.texi?ref=ecd5156dd539efc9e8e7c1a14c6d54d842079bdf"}, {"sha": "76aa4eb4fc67381ad2d16aa5d073c6699caa730b", "filename": "gcc/jit/docs/topics/expressions.rst", "status": "modified", "additions": 9, "deletions": 12, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecd5156dd539efc9e8e7c1a14c6d54d842079bdf/gcc%2Fjit%2Fdocs%2Ftopics%2Fexpressions.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecd5156dd539efc9e8e7c1a14c6d54d842079bdf/gcc%2Fjit%2Fdocs%2Ftopics%2Fexpressions.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjit%2Fdocs%2Ftopics%2Fexpressions.rst?ref=ecd5156dd539efc9e8e7c1a14c6d54d842079bdf", "patch": "@@ -416,7 +416,8 @@ Function calls\n                                                     int numargs, \\\n                                                     gcc_jit_rvalue **args)\n \n-   Given an rvalue of function pointer type, and the given table of\n+   Given an rvalue of function pointer type (e.g. from\n+   :c:func:`gcc_jit_context_new_function_ptr_type`), and the given table of\n    argument rvalues, construct a call to the function pointer, with the\n    result as an rvalue.\n \n@@ -452,19 +453,15 @@ Function calls\n Function pointers\n *****************\n \n-.. function:: gcc_jit_rvalue *\\\n-\t      gcc_jit_function_get_address (gcc_jit_function *fn,\\\n-                                            gcc_jit_location *loc)\n-\n-   Get the address of a function as an rvalue, of function pointer\n-   type.\n+Function pointers can be obtained:\n \n-   This entrypoint was added in :ref:`LIBGCCJIT_ABI_9`; you can test\n-   for its presence using\n-\n-   .. code-block:: c\n+  * from a :c:type:`gcc_jit_function` using\n+    :c:func:`gcc_jit_function_get_address`, or\n \n-      #ifdef LIBGCCJIT_HAVE_gcc_jit_function_get_address\n+  * from an existing function using\n+    :c:func:`gcc_jit_context_new_rvalue_from_ptr`,\n+    using a function pointer type obtained using\n+    :c:func:`gcc_jit_context_new_function_ptr_type`.\n \n Type-coercion\n *************"}, {"sha": "b5b9d1b72b522d3395b0a3ad9eb6e9c79db37967", "filename": "gcc/jit/docs/topics/function-pointers.rst", "status": "added", "additions": 80, "deletions": 0, "changes": 80, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecd5156dd539efc9e8e7c1a14c6d54d842079bdf/gcc%2Fjit%2Fdocs%2Ftopics%2Ffunction-pointers.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecd5156dd539efc9e8e7c1a14c6d54d842079bdf/gcc%2Fjit%2Fdocs%2Ftopics%2Ffunction-pointers.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjit%2Fdocs%2Ftopics%2Ffunction-pointers.rst?ref=ecd5156dd539efc9e8e7c1a14c6d54d842079bdf", "patch": "@@ -0,0 +1,80 @@\n+.. Copyright (C) 2017 Free Software Foundation, Inc.\n+   Originally contributed by David Malcolm <dmalcolm@redhat.com>\n+\n+   This is free software: you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published by\n+   the Free Software Foundation, either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful, but\n+   WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+   General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program.  If not, see\n+   <http://www.gnu.org/licenses/>.\n+\n+.. default-domain:: c\n+\n+Function pointers\n+=================\n+\n+You can generate calls that use a function pointer via\n+:c:func:`gcc_jit_context_new_call_through_ptr`.\n+\n+To do requires a :c:type:`gcc_jit_rvalue` of the correct function pointer type.\n+\n+Function pointers for a :c:type:`gcc_jit_function` can be obtained\n+via :c:func:`gcc_jit_function_get_address`.\n+\n+.. function:: gcc_jit_rvalue *\\\n+\t      gcc_jit_function_get_address (gcc_jit_function *fn,\\\n+                                            gcc_jit_location *loc)\n+\n+   Get the address of a function as an rvalue, of function pointer\n+   type.\n+\n+   This entrypoint was added in :ref:`LIBGCCJIT_ABI_9`; you can test\n+   for its presence using\n+\n+   .. code-block:: c\n+\n+      #ifdef LIBGCCJIT_HAVE_gcc_jit_function_get_address\n+\n+Alternatively, given an existing function, you can obtain a pointer\n+to it in :c:type:`gcc_jit_rvalue` form using\n+:c:func:`gcc_jit_context_new_rvalue_from_ptr`, using a function pointer\n+type obtained using :c:func:`gcc_jit_context_new_function_ptr_type`.\n+\n+Here's an example of creating a function pointer type corresponding to C's\n+:c:type:`void (*) (int, int, int)`:\n+\n+.. code-block:: c\n+\n+  gcc_jit_type *void_type =\n+    gcc_jit_context_get_type (ctxt, GCC_JIT_TYPE_VOID);\n+  gcc_jit_type *int_type =\n+    gcc_jit_context_get_type (ctxt, GCC_JIT_TYPE_INT);\n+\n+  /* Build the function ptr type.  */\n+  gcc_jit_type *param_types[3];\n+  param_types[0] = int_type;\n+  param_types[1] = int_type;\n+  param_types[2] = int_type;\n+\n+  gcc_jit_type *fn_ptr_type =\n+    gcc_jit_context_new_function_ptr_type (ctxt, NULL,\n+\t\t\t\t\t   void_type,\n+\t\t\t\t\t   3, param_types, 0);\n+\n+.. function:: gcc_jit_type *\\\n+\t      gcc_jit_context_new_function_ptr_type (gcc_jit_context *ctxt,\\\n+\t\t\t\t       gcc_jit_location *loc,\\\n+\t\t\t\t       gcc_jit_type *return_type,\\\n+\t\t\t\t       int num_params,\\\n+\t\t\t\t       gcc_jit_type **param_types,\\\n+\t\t\t\t       int is_variadic)\n+\n+   Generate a :c:type:`gcc_jit_type` for a function pointer with the\n+   given return type and parameters."}, {"sha": "a912a6d933f29ccc810a5dbe40e14ccdbbd2c839", "filename": "gcc/jit/docs/topics/index.rst", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecd5156dd539efc9e8e7c1a14c6d54d842079bdf/gcc%2Fjit%2Fdocs%2Ftopics%2Findex.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecd5156dd539efc9e8e7c1a14c6d54d842079bdf/gcc%2Fjit%2Fdocs%2Ftopics%2Findex.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjit%2Fdocs%2Ftopics%2Findex.rst?ref=ecd5156dd539efc9e8e7c1a14c6d54d842079bdf", "patch": "@@ -26,6 +26,7 @@ Topic Reference\n    types.rst\n    expressions.rst\n    functions.rst\n+   function-pointers.rst\n    locations.rst\n    compilation.rst\n    compatibility.rst"}, {"sha": "35a82310b63e2ce024555fab8ec71ea1714a2563", "filename": "gcc/jit/docs/topics/types.rst", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecd5156dd539efc9e8e7c1a14c6d54d842079bdf/gcc%2Fjit%2Fdocs%2Ftopics%2Ftypes.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecd5156dd539efc9e8e7c1a14c6d54d842079bdf/gcc%2Fjit%2Fdocs%2Ftopics%2Ftypes.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjit%2Fdocs%2Ftopics%2Ftypes.rst?ref=ecd5156dd539efc9e8e7c1a14c6d54d842079bdf", "patch": "@@ -309,3 +309,9 @@ You can model C `struct` types by creating :c:type:`gcc_jit_struct *` and\n        :start-after: /* Quote from here in docs/topics/types.rst.  */\n        :end-before: /* Quote up to here in docs/topics/types.rst.  */\n        :language: c\n+\n+Function pointer types\n+----------------------\n+\n+Function pointer types can be created using\n+:c:func:`gcc_jit_context_new_function_ptr_type`."}]}