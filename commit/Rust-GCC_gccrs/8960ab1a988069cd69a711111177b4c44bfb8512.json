{"sha": "8960ab1a988069cd69a711111177b4c44bfb8512", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODk2MGFiMWE5ODgwNjljZDY5YTcxMTExMTE3N2I0YzQ0YmZiODUxMg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-08-02T17:18:49Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-08-02T17:18:49Z"}, "message": "(chkr_{check_addr,set_right}_libfunc): New definitions.\n\n(chkr_{copy_bitmap,check_exec}_libfunc): Likewise.\n(init_optabs): Initialize these chkr_*_libfunc.\n\nFrom-SVN: r14615", "tree": {"sha": "8ec147e7ff919976e8520288e2ebcb63e2698bc6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8ec147e7ff919976e8520288e2ebcb63e2698bc6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8960ab1a988069cd69a711111177b4c44bfb8512", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8960ab1a988069cd69a711111177b4c44bfb8512", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8960ab1a988069cd69a711111177b4c44bfb8512", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8960ab1a988069cd69a711111177b4c44bfb8512/comments", "author": null, "committer": null, "parents": [{"sha": "86fa911a16e131d69d9db7e6a9f5e63693f5aa09", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86fa911a16e131d69d9db7e6a9f5e63693f5aa09", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86fa911a16e131d69d9db7e6a9f5e63693f5aa09"}], "stats": {"total": 11, "additions": 11, "deletions": 0}, "files": [{"sha": "a5f2e7ed064311f71f45fec0ee4d6f0aa095bebd", "filename": "gcc/optabs.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8960ab1a988069cd69a711111177b4c44bfb8512/gcc%2Foptabs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8960ab1a988069cd69a711111177b4c44bfb8512/gcc%2Foptabs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptabs.c?ref=8960ab1a988069cd69a711111177b4c44bfb8512", "patch": "@@ -209,6 +209,11 @@ rtx fixunstfsi_libfunc;\n rtx fixunstfdi_libfunc;\n rtx fixunstfti_libfunc;\n \n+rtx chkr_check_addr_libfunc;\n+rtx chkr_set_right_libfunc;\n+rtx chkr_copy_bitmap_libfunc;\n+rtx chkr_check_exec_libfunc;\n+\n /* Indexed by the rtx-code for a conditional (eg. EQ, LT,...)\n    gives the gen_function to make a branch to test that condition.  */\n \n@@ -4369,6 +4374,12 @@ init_optabs ()\n   fixunstfdi_libfunc = gen_rtx (SYMBOL_REF, Pmode, \"__fixunstfdi\");\n   fixunstfti_libfunc = gen_rtx (SYMBOL_REF, Pmode, \"__fixunstfti\");\n \n+  /* For check-memory-usage.  */\n+  chkr_check_addr_libfunc = gen_rtx (SYMBOL_REF, VOIDmode, \"chkr_check_addr\");\n+  chkr_set_right_libfunc = gen_rtx (SYMBOL_REF, VOIDmode, \"chkr_set_right\");\n+  chkr_copy_bitmap_libfunc = gen_rtx (SYMBOL_REF, VOIDmode, \"chkr_copy_bitmap\");\n+  chkr_check_exec_libfunc = gen_rtx (SYMBOL_REF, VOIDmode, \"chkr_check_exec\");\n+\n #ifdef INIT_TARGET_OPTABS\n   /* Allow the target to add more libcalls or rename some, etc.  */\n   INIT_TARGET_OPTABS;"}]}