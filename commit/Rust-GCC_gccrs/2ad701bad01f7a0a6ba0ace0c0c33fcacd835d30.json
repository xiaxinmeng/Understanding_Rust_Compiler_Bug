{"sha": "2ad701bad01f7a0a6ba0ace0c0c33fcacd835d30", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmFkNzAxYmFkMDFmN2EwYTZiYTBhY2UwYzBjMzNmY2FjZDgzNWQzMA==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-11-25T18:03:49Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-11-25T18:03:49Z"}, "message": "(expand_inline_function): Ensure a REG used as\nCOPY has REG_USERVAR_P set if LOC does.\n\nFrom-SVN: r2796", "tree": {"sha": "e678acc5aba06f6bb73426ad7ee054b9278f20f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e678acc5aba06f6bb73426ad7ee054b9278f20f3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2ad701bad01f7a0a6ba0ace0c0c33fcacd835d30", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ad701bad01f7a0a6ba0ace0c0c33fcacd835d30", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ad701bad01f7a0a6ba0ace0c0c33fcacd835d30", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ad701bad01f7a0a6ba0ace0c0c33fcacd835d30/comments", "author": null, "committer": null, "parents": [{"sha": "77636079f9e3661e3e2321b37a29c20284449f9e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77636079f9e3661e3e2321b37a29c20284449f9e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77636079f9e3661e3e2321b37a29c20284449f9e"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "14ce727532353efeb525dab393f92671071de490", "filename": "gcc/integrate.c", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ad701bad01f7a0a6ba0ace0c0c33fcacd835d30/gcc%2Fintegrate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ad701bad01f7a0a6ba0ace0c0c33fcacd835d30/gcc%2Fintegrate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fintegrate.c?ref=2ad701bad01f7a0a6ba0ace0c0c33fcacd835d30", "patch": "@@ -1372,10 +1372,17 @@ expand_inline_function (fndecl, parms, target, ignore, type, structure_value_add\n \t{\n \t  /* This is the good case where the parameter is in a register.\n \t     If it is read-only and our argument is a constant, set up the\n-\t     constant equivalence.  */\n-\t  if (GET_CODE (copy) != REG && GET_CODE (copy) != SUBREG)\n+\t     constant equivalence.\n+\n+\t     If LOC is REG_USERVAR_P, the usual case, COPY must also have\n+\t     that flag set if it is a register.  */\n+\n+\t  if ((GET_CODE (copy) != REG && GET_CODE (copy) != SUBREG)\n+\t      || (GET_CODE (copy) == REG && REG_USERVAR_P (loc)\n+\t\t  && ! REG_USERVAR_P (copy)))\n \t    {\n \t      temp = copy_to_mode_reg (GET_MODE (loc), copy);\n+\t      REG_USERVAR_P (temp) = REG_USERVAR_P (loc);\n \t      if (CONSTANT_P (copy) || FIXED_BASE_PLUS_P (copy))\n \t\t{\n \t\t  map->const_equiv_map[REGNO (temp)] = copy;"}]}