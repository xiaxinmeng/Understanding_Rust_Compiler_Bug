{"sha": "fbc2782eff5df7b8d6c2c4a2cdf4cb92933aeeea", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmJjMjc4MmVmZjVkZjdiOGQ2YzJjNGEyY2RmNGNiOTI5MzNhZWVlYQ==", "commit": {"author": {"name": "DJ Delorie", "email": "dj@redhat.com", "date": "2002-03-22T02:50:15Z"}, "committer": {"name": "DJ Delorie", "email": "dj@gcc.gnu.org", "date": "2002-03-22T02:50:15Z"}, "message": "bb-reorder.c (make_reorder_chain_1): Protect against when redundant edges are omitted.\n\n* bb-reorder.c (make_reorder_chain_1): Protect against\nwhen redundant edges are omitted.\n* predict.c (dump_prediction): Likewise.\n\nFrom-SVN: r51160", "tree": {"sha": "d7d23d6655c2f0ceba0beacba09ffb8ab6a2d87c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d7d23d6655c2f0ceba0beacba09ffb8ab6a2d87c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fbc2782eff5df7b8d6c2c4a2cdf4cb92933aeeea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fbc2782eff5df7b8d6c2c4a2cdf4cb92933aeeea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fbc2782eff5df7b8d6c2c4a2cdf4cb92933aeeea", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fbc2782eff5df7b8d6c2c4a2cdf4cb92933aeeea/comments", "author": null, "committer": null, "parents": [{"sha": "c0561434cdccc513e6b1238302a5b8f798456b66", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0561434cdccc513e6b1238302a5b8f798456b66", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0561434cdccc513e6b1238302a5b8f798456b66"}], "stats": {"total": 19, "additions": 14, "deletions": 5}, "files": [{"sha": "a9753047c9989ae314887569dc5bd7360b3c7626", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbc2782eff5df7b8d6c2c4a2cdf4cb92933aeeea/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbc2782eff5df7b8d6c2c4a2cdf4cb92933aeeea/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fbc2782eff5df7b8d6c2c4a2cdf4cb92933aeeea", "patch": "@@ -1,3 +1,9 @@\n+2002-03-21  DJ Delorie  <dj@redhat.com>\n+\n+\t* bb-reorder.c (make_reorder_chain_1): Protect against\n+\twhen redundant edges are omitted.\n+\t* predict.c (dump_prediction): Likewise.\n+\n 2002-03-21  Richard Henderson  <rth@redhat.com>\n \n \tPR target/5996"}, {"sha": "3647ad6ec4b45dfcecdf47ab0bf56b2395a3cf6d", "filename": "gcc/bb-reorder.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbc2782eff5df7b8d6c2c4a2cdf4cb92933aeeea/gcc%2Fbb-reorder.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbc2782eff5df7b8d6c2c4a2cdf4cb92933aeeea/gcc%2Fbb-reorder.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbb-reorder.c?ref=fbc2782eff5df7b8d6c2c4a2cdf4cb92933aeeea", "patch": "@@ -205,7 +205,7 @@ make_reorder_chain_1 (bb, prev)\n \t    e_taken = e;\n \t}\n \n-      next = (taken ? e_taken : e_fall)->dest;\n+      next = ((taken && e_taken) ? e_taken : e_fall)->dest;\n     }\n \n   /* In the absence of a prediction, disturb things as little as possible"}, {"sha": "56b04365b3f7dbe1aeaf3ed5383b0a75260ae215", "filename": "gcc/predict.c", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbc2782eff5df7b8d6c2c4a2cdf4cb92933aeeea/gcc%2Fpredict.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbc2782eff5df7b8d6c2c4a2cdf4cb92933aeeea/gcc%2Fpredict.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpredict.c?ref=fbc2782eff5df7b8d6c2c4a2cdf4cb92933aeeea", "patch": "@@ -194,7 +194,7 @@ dump_prediction (predictor, probability, bb, used)\n   if (!rtl_dump_file)\n     return;\n \n-  while (e->flags & EDGE_FALLTHRU)\n+  while (e && (e->flags & EDGE_FALLTHRU))\n     e = e->succ_next;\n \n   fprintf (rtl_dump_file, \"  %s heuristics%s: %.1f%%\",\n@@ -205,9 +205,12 @@ dump_prediction (predictor, probability, bb, used)\n     {\n       fprintf (rtl_dump_file, \"  exec \");\n       fprintf (rtl_dump_file, HOST_WIDEST_INT_PRINT_DEC, bb->count);\n-      fprintf (rtl_dump_file, \" hit \");\n-      fprintf (rtl_dump_file, HOST_WIDEST_INT_PRINT_DEC, e->count);\n-      fprintf (rtl_dump_file, \" (%.1f%%)\", e->count * 100.0 / bb->count);\n+      if (e)\n+\t{\n+\t  fprintf (rtl_dump_file, \" hit \");\n+\t  fprintf (rtl_dump_file, HOST_WIDEST_INT_PRINT_DEC, e->count);\n+\t  fprintf (rtl_dump_file, \" (%.1f%%)\", e->count * 100.0 / bb->count);\n+\t}\n     }\n \n   fprintf (rtl_dump_file, \"\\n\");"}]}