{"sha": "03407c75274a50c1d131dbd9522bd9cdf0f6fab6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDM0MDdjNzUyNzRhNTBjMWQxMzFkYmQ5NTIyYmQ5Y2RmMGY2ZmFiNg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-03-03T00:01:48Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-03-03T00:01:48Z"}, "message": "(collect_iterators): Handle simple expressions quickly.\n\nDon't try to interpret operands that are RTL as if they were trees.\n\nFrom-SVN: r3616", "tree": {"sha": "9f6382f4940740ef79be67d142603c1126f7ed1f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9f6382f4940740ef79be67d142603c1126f7ed1f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/03407c75274a50c1d131dbd9522bd9cdf0f6fab6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03407c75274a50c1d131dbd9522bd9cdf0f6fab6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/03407c75274a50c1d131dbd9522bd9cdf0f6fab6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03407c75274a50c1d131dbd9522bd9cdf0f6fab6/comments", "author": null, "committer": null, "parents": [{"sha": "be8dcd745fe101829bcdb446ec3ac45fe8da13ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be8dcd745fe101829bcdb446ec3ac45fe8da13ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be8dcd745fe101829bcdb446ec3ac45fe8da13ae"}], "stats": {"total": 23, "additions": 23, "deletions": 0}, "files": [{"sha": "91d9c3598f7afdcf6c8890816d298db009de3888", "filename": "gcc/c-iterate.c", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03407c75274a50c1d131dbd9522bd9cdf0f6fab6/gcc%2Fc-iterate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03407c75274a50c1d131dbd9522bd9cdf0f6fab6/gcc%2Fc-iterate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-iterate.c?ref=03407c75274a50c1d131dbd9522bd9cdf0f6fab6", "patch": "@@ -212,14 +212,37 @@ collect_iterators (exp, list)\n       switch (TREE_CODE_CLASS (TREE_CODE (exp)))\n \t{\n \tcase '1':\n+\t  return collect_iterators (TREE_OPERAND (exp, 0), list);\n+\n \tcase '2':\n \tcase '<':\n+\t  return collect_iterators (TREE_OPERAND (exp, 0),\n+\t\t\t\t    collect_iterators (TREE_OPERAND (exp, 1),\n+\t\t\t\t\t\t       list));\n+\n \tcase 'e':\n \tcase 'r':\n \t  {\n \t    int num_args = tree_code_length[TREE_CODE (exp)];\n \t    int i;\n \n+\t    /* Some tree codes have RTL, not trees, as operands.  */\n+\t    switch (TREE_CODE (exp))\n+\t      {\n+\t      case SAVE_EXPR:\n+\t      case CALL_EXPR:\n+\t\tnum_args = 2;\n+\t\tbreak;\n+\t      case METHOD_CALL_EXPR:\n+\t\tnum_args = 3;\n+\t\tbreak;\n+\t      case WITH_CLEANUP_EXPR:\n+\t\tnum_args = 1;\n+\t\tbreak;\n+\t      case RTL_EXPR:\n+\t\treturn list;\n+\t      }\n+\t\t\n \t    for (i = 0; i < num_args; i++)\n \t      list = collect_iterators (TREE_OPERAND (exp, i), list);\n \t    return list;"}]}