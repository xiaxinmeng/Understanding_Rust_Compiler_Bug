{"sha": "a23001f6770607fa8eee9b6ad3f0ca95ecc81ee6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTIzMDAxZjY3NzA2MDdmYThlZWU5YjZhZDNmMGNhOTVlY2M4MWVlNg==", "commit": {"author": {"name": "Christophe Lyon", "email": "christophe.lyon@linaro.org", "date": "2014-10-24T11:52:40Z"}, "committer": {"name": "Christophe Lyon", "email": "clyon@gcc.gnu.org", "date": "2014-10-24T11:52:40Z"}, "message": "vld1_dup.c: New file.\n\n2014-10-24  Christophe Lyon  <christophe.lyon@linaro.org>\n\n\t* gcc.target/aarch64/advsimd-intrinsics/vld1_dup.c: New file.\n\nFrom-SVN: r216657", "tree": {"sha": "4c3c3039cb0c911a45cdce498c1420ae500d0b8c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4c3c3039cb0c911a45cdce498c1420ae500d0b8c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a23001f6770607fa8eee9b6ad3f0ca95ecc81ee6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a23001f6770607fa8eee9b6ad3f0ca95ecc81ee6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a23001f6770607fa8eee9b6ad3f0ca95ecc81ee6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a23001f6770607fa8eee9b6ad3f0ca95ecc81ee6/comments", "author": null, "committer": null, "parents": [{"sha": "2191f6602f3e8881dcbdcddfa0f269fe20636784", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2191f6602f3e8881dcbdcddfa0f269fe20636784", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2191f6602f3e8881dcbdcddfa0f269fe20636784"}], "stats": {"total": 184, "additions": 184, "deletions": 0}, "files": [{"sha": "c34cd511d1c6bf4120bd13ea5e32fe34daabeb7a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a23001f6770607fa8eee9b6ad3f0ca95ecc81ee6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a23001f6770607fa8eee9b6ad3f0ca95ecc81ee6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a23001f6770607fa8eee9b6ad3f0ca95ecc81ee6", "patch": "@@ -1,3 +1,7 @@\n+2014-10-24  Christophe Lyon  <christophe.lyon@linaro.org>\n+\n+\t* gcc.target/aarch64/advsimd-intrinsics/vld1_dup.c: New file.\n+\n 2014-10-24  Christophe Lyon  <christophe.lyon@linaro.org>\n \n \t* gcc.target/aarch64/advsimd-intrinsics/vdup-vmov.c: New file."}, {"sha": "0e052743926ca7cdc3108a4e6ef96b54e815de1d", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vld1_dup.c", "status": "added", "additions": 180, "deletions": 0, "changes": 180, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a23001f6770607fa8eee9b6ad3f0ca95ecc81ee6/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld1_dup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a23001f6770607fa8eee9b6ad3f0ca95ecc81ee6/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld1_dup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvld1_dup.c?ref=a23001f6770607fa8eee9b6ad3f0ca95ecc81ee6", "patch": "@@ -0,0 +1,180 @@\n+#include <arm_neon.h>\n+#include \"arm-neon-ref.h\"\n+#include \"compute-ref-data.h\"\n+\n+/* Expected results.  */\n+/* Chunk 0.  */\n+VECT_VAR_DECL(expected0,int,8,8) [] = { 0xf0, 0xf0, 0xf0, 0xf0,\n+\t\t\t\t\t0xf0, 0xf0, 0xf0, 0xf0 };\n+VECT_VAR_DECL(expected0,int,16,4) [] = { 0xfff0, 0xfff0, 0xfff0, 0xfff0 };\n+VECT_VAR_DECL(expected0,int,32,2) [] = { 0xfffffff0, 0xfffffff0 };\n+VECT_VAR_DECL(expected0,int,64,1) [] = { 0xfffffffffffffff0 };\n+VECT_VAR_DECL(expected0,uint,8,8) [] = { 0xf0, 0xf0, 0xf0, 0xf0,\n+\t\t\t\t\t 0xf0, 0xf0, 0xf0, 0xf0 };\n+VECT_VAR_DECL(expected0,uint,16,4) [] = { 0xfff0, 0xfff0, 0xfff0, 0xfff0 };\n+VECT_VAR_DECL(expected0,uint,32,2) [] = { 0xfffffff0, 0xfffffff0 };\n+VECT_VAR_DECL(expected0,uint,64,1) [] = { 0xfffffffffffffff0 };\n+VECT_VAR_DECL(expected0,poly,8,8) [] = { 0xf0, 0xf0, 0xf0, 0xf0,\n+\t\t\t\t\t 0xf0, 0xf0, 0xf0, 0xf0 };\n+VECT_VAR_DECL(expected0,poly,16,4) [] = { 0xfff0, 0xfff0, 0xfff0, 0xfff0 };\n+VECT_VAR_DECL(expected0,hfloat,32,2) [] = { 0xc1800000, 0xc1800000 };\n+VECT_VAR_DECL(expected0,int,8,16) [] = { 0xf0, 0xf0, 0xf0, 0xf0,\n+\t\t\t\t\t 0xf0, 0xf0, 0xf0, 0xf0,\n+\t\t\t\t\t 0xf0, 0xf0, 0xf0, 0xf0,\n+\t\t\t\t\t 0xf0, 0xf0, 0xf0, 0xf0 };\n+VECT_VAR_DECL(expected0,int,16,8) [] = { 0xfff0, 0xfff0, 0xfff0, 0xfff0,\n+\t\t\t\t\t 0xfff0, 0xfff0, 0xfff0, 0xfff0 };\n+VECT_VAR_DECL(expected0,int,32,4) [] = { 0xfffffff0, 0xfffffff0,\n+\t\t\t\t\t 0xfffffff0, 0xfffffff0 };\n+VECT_VAR_DECL(expected0,int,64,2) [] = { 0xfffffffffffffff0,\n+\t\t\t\t\t 0xfffffffffffffff0 };\n+VECT_VAR_DECL(expected0,uint,8,16) [] = { 0xf0, 0xf0, 0xf0, 0xf0,\n+\t\t\t\t\t  0xf0, 0xf0, 0xf0, 0xf0,\n+\t\t\t\t\t  0xf0, 0xf0, 0xf0, 0xf0,\n+\t\t\t\t\t  0xf0, 0xf0, 0xf0, 0xf0 };\n+VECT_VAR_DECL(expected0,uint,16,8) [] = { 0xfff0, 0xfff0, 0xfff0, 0xfff0,\n+\t\t\t\t\t  0xfff0, 0xfff0, 0xfff0, 0xfff0 };\n+VECT_VAR_DECL(expected0,uint,32,4) [] = { 0xfffffff0, 0xfffffff0,\n+\t\t\t\t\t  0xfffffff0, 0xfffffff0 };\n+VECT_VAR_DECL(expected0,uint,64,2) [] = { 0xfffffffffffffff0,\n+\t\t\t\t\t  0xfffffffffffffff0 };\n+VECT_VAR_DECL(expected0,poly,8,16) [] = { 0xf0, 0xf0, 0xf0, 0xf0,\n+\t\t\t\t\t  0xf0, 0xf0, 0xf0, 0xf0,\n+\t\t\t\t\t  0xf0, 0xf0, 0xf0, 0xf0,\n+\t\t\t\t\t  0xf0, 0xf0, 0xf0, 0xf0 };\n+VECT_VAR_DECL(expected0,poly,16,8) [] = { 0xfff0, 0xfff0, 0xfff0, 0xfff0,\n+\t\t\t\t\t  0xfff0, 0xfff0, 0xfff0, 0xfff0 };\n+VECT_VAR_DECL(expected0,hfloat,32,4) [] = { 0xc1800000, 0xc1800000,\n+\t\t\t\t\t    0xc1800000, 0xc1800000 };\n+\n+/* Chunk 1.  */\n+VECT_VAR_DECL(expected1,int,8,8) [] = { 0xf1, 0xf1, 0xf1, 0xf1,\n+\t\t\t\t\t0xf1, 0xf1, 0xf1, 0xf1 };\n+VECT_VAR_DECL(expected1,int,16,4) [] = { 0xfff1, 0xfff1, 0xfff1, 0xfff1 };\n+VECT_VAR_DECL(expected1,int,32,2) [] = { 0xfffffff1, 0xfffffff1 };\n+VECT_VAR_DECL(expected1,int,64,1) [] = { 0xfffffffffffffff1 };\n+VECT_VAR_DECL(expected1,uint,8,8) [] = { 0xf1, 0xf1, 0xf1, 0xf1,\n+\t\t\t\t\t 0xf1, 0xf1, 0xf1, 0xf1 };\n+VECT_VAR_DECL(expected1,uint,16,4) [] = { 0xfff1, 0xfff1, 0xfff1, 0xfff1 };\n+VECT_VAR_DECL(expected1,uint,32,2) [] = { 0xfffffff1, 0xfffffff1 };\n+VECT_VAR_DECL(expected1,uint,64,1) [] = { 0xfffffffffffffff1 };\n+VECT_VAR_DECL(expected1,poly,8,8) [] = { 0xf1, 0xf1, 0xf1, 0xf1,\n+\t\t\t\t\t 0xf1, 0xf1, 0xf1, 0xf1 };\n+VECT_VAR_DECL(expected1,poly,16,4) [] = { 0xfff1, 0xfff1, 0xfff1, 0xfff1 };\n+VECT_VAR_DECL(expected1,hfloat,32,2) [] = { 0xc1700000, 0xc1700000 };\n+VECT_VAR_DECL(expected1,int,8,16) [] = { 0xf1, 0xf1, 0xf1, 0xf1,\n+\t\t\t\t\t 0xf1, 0xf1, 0xf1, 0xf1,\n+\t\t\t\t\t 0xf1, 0xf1, 0xf1, 0xf1,\n+\t\t\t\t\t 0xf1, 0xf1, 0xf1, 0xf1 };\n+VECT_VAR_DECL(expected1,int,16,8) [] = { 0xfff1, 0xfff1, 0xfff1, 0xfff1,\n+\t\t\t\t\t 0xfff1, 0xfff1, 0xfff1, 0xfff1 };\n+VECT_VAR_DECL(expected1,int,32,4) [] = { 0xfffffff1, 0xfffffff1,\n+\t\t\t\t\t 0xfffffff1, 0xfffffff1 };\n+VECT_VAR_DECL(expected1,int,64,2) [] = { 0xfffffffffffffff1,\n+\t\t\t\t\t 0xfffffffffffffff1 };\n+VECT_VAR_DECL(expected1,uint,8,16) [] = { 0xf1, 0xf1, 0xf1, 0xf1,\n+\t\t\t\t\t  0xf1, 0xf1, 0xf1, 0xf1,\n+\t\t\t\t\t  0xf1, 0xf1, 0xf1, 0xf1,\n+\t\t\t\t\t  0xf1, 0xf1, 0xf1, 0xf1 };\n+VECT_VAR_DECL(expected1,uint,16,8) [] = { 0xfff1, 0xfff1, 0xfff1, 0xfff1,\n+\t\t\t\t\t  0xfff1, 0xfff1, 0xfff1, 0xfff1 };\n+VECT_VAR_DECL(expected1,uint,32,4) [] = { 0xfffffff1, 0xfffffff1,\n+\t\t\t\t\t  0xfffffff1, 0xfffffff1 };\n+VECT_VAR_DECL(expected1,uint,64,2) [] = { 0xfffffffffffffff1,\n+\t\t\t\t\t  0xfffffffffffffff1 };\n+VECT_VAR_DECL(expected1,poly,8,16) [] = { 0xf1, 0xf1, 0xf1, 0xf1,\n+\t\t\t\t\t  0xf1, 0xf1, 0xf1, 0xf1,\n+\t\t\t\t\t  0xf1, 0xf1, 0xf1, 0xf1,\n+\t\t\t\t\t  0xf1, 0xf1, 0xf1, 0xf1 };\n+VECT_VAR_DECL(expected1,poly,16,8) [] = { 0xfff1, 0xfff1, 0xfff1, 0xfff1,\n+\t\t\t\t\t  0xfff1, 0xfff1, 0xfff1, 0xfff1 };\n+VECT_VAR_DECL(expected1,hfloat,32,4) [] = { 0xc1700000, 0xc1700000,\n+\t\t\t\t\t    0xc1700000, 0xc1700000 };\n+\n+/* Chunk 2.  */\n+VECT_VAR_DECL(expected2,int,8,8) [] = { 0xf2, 0xf2, 0xf2, 0xf2,\n+\t\t\t\t\t0xf2, 0xf2, 0xf2, 0xf2 };\n+VECT_VAR_DECL(expected2,int,16,4) [] = { 0xfff2, 0xfff2, 0xfff2, 0xfff2 };\n+VECT_VAR_DECL(expected2,int,32,2) [] = { 0xfffffff2, 0xfffffff2 };\n+VECT_VAR_DECL(expected2,int,64,1) [] = { 0xfffffffffffffff2 };\n+VECT_VAR_DECL(expected2,uint,8,8) [] = { 0xf2, 0xf2, 0xf2, 0xf2,\n+\t\t\t\t\t 0xf2, 0xf2, 0xf2, 0xf2 };\n+VECT_VAR_DECL(expected2,uint,16,4) [] = { 0xfff2, 0xfff2, 0xfff2, 0xfff2 };\n+VECT_VAR_DECL(expected2,uint,32,2) [] = { 0xfffffff2, 0xfffffff2 };\n+VECT_VAR_DECL(expected2,uint,64,1) [] = { 0xfffffffffffffff2 };\n+VECT_VAR_DECL(expected2,poly,8,8) [] = { 0xf2, 0xf2, 0xf2, 0xf2,\n+\t\t\t\t\t 0xf2, 0xf2, 0xf2, 0xf2 };\n+VECT_VAR_DECL(expected2,poly,16,4) [] = { 0xfff2, 0xfff2, 0xfff2, 0xfff2 };\n+VECT_VAR_DECL(expected2,hfloat,32,2) [] = { 0xc1600000, 0xc1600000 };\n+VECT_VAR_DECL(expected2,int,8,16) [] = { 0xf2, 0xf2, 0xf2, 0xf2,\n+\t\t\t\t\t 0xf2, 0xf2, 0xf2, 0xf2,\n+\t\t\t\t\t 0xf2, 0xf2, 0xf2, 0xf2,\n+\t\t\t\t\t 0xf2, 0xf2, 0xf2, 0xf2 };\n+VECT_VAR_DECL(expected2,int,16,8) [] = { 0xfff2, 0xfff2, 0xfff2, 0xfff2,\n+\t\t\t\t\t 0xfff2, 0xfff2, 0xfff2, 0xfff2 };\n+VECT_VAR_DECL(expected2,int,32,4) [] = { 0xfffffff2, 0xfffffff2,\n+\t\t\t\t\t 0xfffffff2, 0xfffffff2 };\n+VECT_VAR_DECL(expected2,int,64,2) [] = { 0xfffffffffffffff2,\n+\t\t\t\t\t 0xfffffffffffffff2 };\n+VECT_VAR_DECL(expected2,uint,8,16) [] = { 0xf2, 0xf2, 0xf2, 0xf2,\n+\t\t\t\t\t  0xf2, 0xf2, 0xf2, 0xf2,\n+\t\t\t\t\t  0xf2, 0xf2, 0xf2, 0xf2,\n+\t\t\t\t\t  0xf2, 0xf2, 0xf2, 0xf2 };\n+VECT_VAR_DECL(expected2,uint,16,8) [] = { 0xfff2, 0xfff2, 0xfff2, 0xfff2,\n+\t\t\t\t\t  0xfff2, 0xfff2, 0xfff2, 0xfff2 };\n+VECT_VAR_DECL(expected2,uint,32,4) [] = { 0xfffffff2, 0xfffffff2,\n+\t\t\t\t\t  0xfffffff2, 0xfffffff2 };\n+VECT_VAR_DECL(expected2,uint,64,2) [] = { 0xfffffffffffffff2,\n+\t\t\t\t\t  0xfffffffffffffff2 };\n+VECT_VAR_DECL(expected2,poly,8,16) [] = { 0xf2, 0xf2, 0xf2, 0xf2,\n+\t\t\t\t\t  0xf2, 0xf2, 0xf2, 0xf2,\n+\t\t\t\t\t  0xf2, 0xf2, 0xf2, 0xf2,\n+\t\t\t\t\t  0xf2, 0xf2, 0xf2, 0xf2 };\n+VECT_VAR_DECL(expected2,poly,16,8) [] = { 0xfff2, 0xfff2, 0xfff2, 0xfff2,\n+\t\t\t\t\t  0xfff2, 0xfff2, 0xfff2, 0xfff2 };\n+VECT_VAR_DECL(expected2,hfloat,32,4) [] = { 0xc1600000, 0xc1600000,\n+\t\t\t\t\t    0xc1600000, 0xc1600000 };\n+\n+#define TEST_MSG \"VLD1_DUP/VLD1_DUPQ\"\n+void exec_vld1_dup (void)\n+{\n+  int i;\n+\n+  /* Fill vector with buffer item #i.  */\n+#define TEST_VLD1_DUP(VAR, BUF, Q, T1, T2, W, N)\t\t\t\\\n+  VECT_VAR(VAR, T1, W, N) =\t\t\t\t\t\t\\\n+    vld1##Q##_dup_##T2##W(&VECT_VAR(BUF, T1, W, N)[i]);\t\t\t\\\n+  vst1##Q##_##T2##W(VECT_VAR(result, T1, W, N), VECT_VAR(VAR, T1, W, N))\n+\n+  DECL_VARIABLE_ALL_VARIANTS(vector);\n+\n+  /* Try to read different places from the input buffer.  */\n+  for (i=0; i<3; i++) {\n+    clean_results ();\n+\n+    TEST_MACRO_ALL_VARIANTS_2_5(TEST_VLD1_DUP, vector, buffer_dup);\n+\n+    TEST_VLD1_DUP(vector, buffer_dup, , float, f, 32, 2);\n+    TEST_VLD1_DUP(vector, buffer_dup, q, float, f, 32, 4);\n+\n+    switch (i) {\n+    case 0:\n+      CHECK_RESULTS_NAMED (TEST_MSG, expected0, \"\");\n+      break;\n+    case 1:\n+      CHECK_RESULTS_NAMED (TEST_MSG, expected1, \"\");\n+      break;\n+    case 2:\n+      CHECK_RESULTS_NAMED (TEST_MSG, expected2, \"\");\n+      break;\n+    default:\n+      abort();\n+    }\n+  }\n+}\n+\n+int main (void)\n+{\n+  exec_vld1_dup ();\n+  return 0;\n+}"}]}