{"sha": "c87e6352ed5daad3c13f0ca4056b07de910daf12", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzg3ZTYzNTJlZDVkYWFkM2MxM2YwY2E0MDU2YjA3ZGU5MTBkYWYxMg==", "commit": {"author": {"name": "Richard Earnshaw", "email": "rearnsha@gcc.gnu.org", "date": "2005-05-09T22:00:06Z"}, "committer": {"name": "Richard Earnshaw", "email": "rearnsha@gcc.gnu.org", "date": "2005-05-09T22:00:06Z"}, "message": "arm.c (arm_gen_constant): Add new heuristic for generating constant integers that can be expressed as the...\n\n\t* arm.c (arm_gen_constant): Add new heuristic for generating\n\tconstant integers that can be expressed as the difference of two\n\tvalid immediates.\n\nFrom-SVN: r99474", "tree": {"sha": "bf2d8266f765fdf7ede2269eadf8359befd33cd6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bf2d8266f765fdf7ede2269eadf8359befd33cd6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c87e6352ed5daad3c13f0ca4056b07de910daf12", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c87e6352ed5daad3c13f0ca4056b07de910daf12", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c87e6352ed5daad3c13f0ca4056b07de910daf12", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c87e6352ed5daad3c13f0ca4056b07de910daf12/comments", "author": null, "committer": null, "parents": [{"sha": "e3d97bde61135c9962234fdb1eed22a059709ca0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3d97bde61135c9962234fdb1eed22a059709ca0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e3d97bde61135c9962234fdb1eed22a059709ca0"}], "stats": {"total": 35, "additions": 35, "deletions": 0}, "files": [{"sha": "6b84d77b2c65dc80cf45ea88bea0eaaa623942d8", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c87e6352ed5daad3c13f0ca4056b07de910daf12/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c87e6352ed5daad3c13f0ca4056b07de910daf12/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=c87e6352ed5daad3c13f0ca4056b07de910daf12", "patch": "@@ -1909,6 +1909,41 @@ arm_gen_constant (enum rtx_code code, enum machine_mode mode, rtx cond,\n \t    }\n \t}\n \n+      /* See if we can calculate the value as the difference between two\n+\t valid immediates.  */\n+      if (clear_sign_bit_copies + clear_zero_bit_copies <= 16)\n+\t{\n+\t  int topshift = clear_sign_bit_copies & ~1;\n+\n+\t  temp1 = ((remainder + (0x00800000 >> topshift))\n+\t\t   & (0xff000000 >> topshift));\n+\n+\t  /* If temp1 is zero, then that means the 9 most significant\n+\t     bits of remainder were 1 and we've caused it to overflow.\n+\t     When topshift is 0 we don't need to do anything since we\n+\t     can borrow from 'bit 32'.  */\n+\t  if (temp1 == 0 && topshift != 0)\n+\t    temp1 = 0x80000000 >> (topshift - 1);\n+\n+\t  temp2 = temp1 - remainder;\n+\t  \n+\t  if (const_ok_for_arm (temp2))\n+\t    {\n+\t      if (generate)\n+\t\t{\n+\t\t  rtx new_src = subtargets ? gen_reg_rtx (mode) : target;\n+\t\t  emit_constant_insn (cond,\n+\t\t\t\t      gen_rtx_SET (VOIDmode, new_src,\n+\t\t\t\t\t\t   GEN_INT (temp1)));\n+\t\t  emit_constant_insn (cond,\n+\t\t\t\t      gen_addsi3 (target, new_src,\n+\t\t\t\t\t\t  GEN_INT (-temp2)));\n+\t\t}\n+\n+\t      return 2;\n+\t    }\n+\t}\n+\n       /* See if we can generate this by setting the bottom (or the top)\n \t 16 bits, and then shifting these into the other half of the\n \t word.  We only look for the simplest cases, to do more would cost"}]}