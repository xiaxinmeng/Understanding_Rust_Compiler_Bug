{"sha": "8d42565b847d588e6c04e9c3cd5a3157859e2c6a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGQ0MjU2NWI4NDdkNTg4ZTZjMDRlOWMzY2Q1YTMxNTc4NTllMmM2YQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2000-12-15T16:23:26Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2000-12-15T16:23:26Z"}, "message": "* init.c (build_new_1): Don't strip quals from type.\n\nFrom-SVN: r38291", "tree": {"sha": "1e9ff9723405cf4774900bf257364fd0badea45d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1e9ff9723405cf4774900bf257364fd0badea45d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8d42565b847d588e6c04e9c3cd5a3157859e2c6a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d42565b847d588e6c04e9c3cd5a3157859e2c6a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d42565b847d588e6c04e9c3cd5a3157859e2c6a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d42565b847d588e6c04e9c3cd5a3157859e2c6a/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fab09a2494224143e42b78a8b4af1c318cc188cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fab09a2494224143e42b78a8b4af1c318cc188cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fab09a2494224143e42b78a8b4af1c318cc188cb"}], "stats": {"total": 17, "additions": 14, "deletions": 3}, "files": [{"sha": "d92e24e1fd4fffc94c6c5051e360eaf865dabde6", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d42565b847d588e6c04e9c3cd5a3157859e2c6a/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d42565b847d588e6c04e9c3cd5a3157859e2c6a/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=8d42565b847d588e6c04e9c3cd5a3157859e2c6a", "patch": "@@ -1,5 +1,7 @@\n 2000-12-15  Jason Merrill  <jason@redhat.com>\n \n+\t* init.c (build_new_1): Don't strip quals from type.\n+\n \t* decl.c (pushdecl): Don't check for linkage on a non-decl.\n \n \t* call.c (build_op_delete_call): See through ARRAY_TYPEs."}, {"sha": "7a2ce18970495fac8d6004122d210bf5e8c5b020", "filename": "gcc/cp/init.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d42565b847d588e6c04e9c3cd5a3157859e2c6a/gcc%2Fcp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d42565b847d588e6c04e9c3cd5a3157859e2c6a/gcc%2Fcp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.c?ref=8d42565b847d588e6c04e9c3cd5a3157859e2c6a", "patch": "@@ -2268,9 +2268,6 @@ build_new_1 (exp)\n \n   code = has_array ? VEC_NEW_EXPR : NEW_EXPR;\n \n-  if (CP_TYPE_QUALS (type))\n-    type = TYPE_MAIN_VARIANT (type);\n-\n   /* If our base type is an array, then make sure we know how many elements\n      it has.  */\n   while (TREE_CODE (true_type) == ARRAY_TYPE)"}, {"sha": "99f3b076fe0254c76de0f9f44eb7f4d0530d3c2c", "filename": "gcc/testsuite/g++.old-deja/g++.other/new5.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d42565b847d588e6c04e9c3cd5a3157859e2c6a/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fnew5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d42565b847d588e6c04e9c3cd5a3157859e2c6a/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fnew5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fnew5.C?ref=8d42565b847d588e6c04e9c3cd5a3157859e2c6a", "patch": "@@ -0,0 +1,12 @@\n+// Test that const-correctness is observed when using new.\n+\n+struct A {\n+  A() { }\n+  int f () { return 1; }\n+  int f () const { return 0; }\n+};\n+\n+int main ()\n+{\n+  return (new const A)->f ();\n+}"}]}