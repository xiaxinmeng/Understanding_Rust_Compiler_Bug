{"sha": "18a3c539ee506283fb09cb4646e832497cc05bf0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MThhM2M1MzllZTUwNjI4M2ZiMDljYjQ2NDZlODMyNDk3Y2MwNWJmMA==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@cygnus.com", "date": "2000-10-23T23:38:39Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "2000-10-23T23:38:39Z"}, "message": "Fix Turbo's LPRng compilation failure due to assembler errors.\n\n\t* ia64.c (ia64_print_operand, case 'r'): Correct comment.  Handle\n\tCONST_INT.\n\t* ia64.md (cmpsi_adjusted): Use %r3.\n\t(cmpdi_adjusted): Likewise.\n\nFrom-SVN: r37025", "tree": {"sha": "7ed58bf400ab78ca07272eed4b6918aec3518e15", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7ed58bf400ab78ca07272eed4b6918aec3518e15"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/18a3c539ee506283fb09cb4646e832497cc05bf0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18a3c539ee506283fb09cb4646e832497cc05bf0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/18a3c539ee506283fb09cb4646e832497cc05bf0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18a3c539ee506283fb09cb4646e832497cc05bf0/comments", "author": null, "committer": null, "parents": [{"sha": "6c6ed0ef928235a51966759aa3d6ca6cb960f334", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c6ed0ef928235a51966759aa3d6ca6cb960f334", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c6ed0ef928235a51966759aa3d6ca6cb960f334"}], "stats": {"total": 22, "additions": 19, "deletions": 3}, "files": [{"sha": "4ed9cd34a1b17819a7264668fd9b720fbc9fd81c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18a3c539ee506283fb09cb4646e832497cc05bf0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18a3c539ee506283fb09cb4646e832497cc05bf0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=18a3c539ee506283fb09cb4646e832497cc05bf0", "patch": "@@ -1,3 +1,10 @@\n+2000-10-23  Jim Wilson  <wilson@cygnus.com>\n+\n+\t* ia64.c (ia64_print_operand, case 'r'): Correct comment.  Handle\n+\tCONST_INT.\n+\t* ia64.md (cmpsi_adjusted): Use %r3.\n+\t(cmpdi_adjusted): Likewise.\n+\n 2000-10-23  Diego Novillo  <dnovillo@cygnus.com>\n \n \t* config/i386/att.h (ASM_FILE_START): Define."}, {"sha": "6d13ef8c7ef9772852ec380b78f1b218620cde4c", "filename": "gcc/config/ia64/ia64.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18a3c539ee506283fb09cb4646e832497cc05bf0/gcc%2Fconfig%2Fia64%2Fia64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18a3c539ee506283fb09cb4646e832497cc05bf0/gcc%2Fconfig%2Fia64%2Fia64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.c?ref=18a3c539ee506283fb09cb4646e832497cc05bf0", "patch": "@@ -3261,11 +3261,14 @@ ia64_print_operand (file, x, code)\n       break;\n \n     case 'r':\n-      /* If this operand is the constant zero, write it as zero.  */\n+      /* If this operand is the constant zero, write it as register zero.\n+\t Any register, zero, or CONST_INT value is OK here.  */\n       if (GET_CODE (x) == REG)\n \tfputs (reg_names[REGNO (x)], file);\n       else if (x == CONST0_RTX (GET_MODE (x)))\n \tfputs (\"r0\", file);\n+      else if (GET_CODE (x) == CONST_INT)\n+\toutput_addr_const (file, x);\n       else\n \toutput_operand_lossage (\"invalid %%r value\");\n       return;"}, {"sha": "cf6fdd2aec94e4bde19304f2ead424d7ea987481", "filename": "gcc/config/ia64/ia64.md", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18a3c539ee506283fb09cb4646e832497cc05bf0/gcc%2Fconfig%2Fia64%2Fia64.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18a3c539ee506283fb09cb4646e832497cc05bf0/gcc%2Fconfig%2Fia64%2Fia64.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.md?ref=18a3c539ee506283fb09cb4646e832497cc05bf0", "patch": "@@ -4200,13 +4200,16 @@\n   \"cmp4.%C1 %0, %I0 = %3, %2\"\n   [(set_attr \"type\" \"A\")])\n \n+;; We use %r3 because it is possible for us to match a 0, and two of the\n+;; unsigned comparisons don't accept immediate operands of zero.\n+\n (define_insn \"*cmpsi_adjusted\"\n   [(set (match_operand:BI 0 \"register_operand\" \"=c\")\n \t(match_operator:BI 1 \"adjusted_comparison_operator\"\n \t   [(match_operand:SI 2 \"gr_register_operand\" \"r\")\n \t    (match_operand:SI 3 \"gr_reg_or_8bit_adjusted_operand\" \"rL\")]))]\n   \"\"\n-  \"cmp4.%C1 %0, %I0 = %3, %2\"\n+  \"cmp4.%C1 %0, %I0 = %r3, %2\"\n   [(set_attr \"type\" \"A\")])\n \n (define_insn \"*cmpdi_normal\"\n@@ -4218,13 +4221,16 @@\n   \"cmp.%C1 %0, %I0 = %3, %r2\"\n   [(set_attr \"type\" \"A\")])\n \n+;; We use %r3 because it is possible for us to match a 0, and two of the\n+;; unsigned comparisons don't accept immediate operands of zero.\n+\n (define_insn \"*cmpdi_adjusted\"\n   [(set (match_operand:BI 0 \"register_operand\" \"=c\")\n \t(match_operator:BI 1 \"adjusted_comparison_operator\"\n \t   [(match_operand:DI 2 \"gr_register_operand\" \"r\")\n \t    (match_operand:DI 3 \"gr_reg_or_8bit_adjusted_operand\" \"rL\")]))]\n   \"\"\n-  \"cmp.%C1 %0, %I0 = %3, %2\"\n+  \"cmp.%C1 %0, %I0 = %r3, %2\"\n   [(set_attr \"type\" \"A\")])\n \n (define_insn \"*cmpsf_internal\""}]}