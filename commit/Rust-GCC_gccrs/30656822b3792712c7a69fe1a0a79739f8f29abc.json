{"sha": "30656822b3792712c7a69fe1a0a79739f8f29abc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzA2NTY4MjJiMzc5MjcxMmM3YTY5ZmUxYTBhNzk3MzlmOGYyOWFiYw==", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2021-06-05T20:39:21Z"}, "committer": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2021-06-08T10:00:15Z"}, "message": "[GCN] Fix run-time variable 'num_workers'\n\n... which currently has *not* been forced to 'num_workers (1)'.\n\nIn addition to the testcases modified here, this also fixes:\n\n    FAIL: libgomp.oacc-c/../libgomp.oacc-c-c++-common/mode-transitions.c -DACC_DEVICE_TYPE_radeon=1 -DACC_MEM_SHARED=0 -foffload=amdgcn-amdhsa  -O0  execution test\n    [Etc.]\n\n    mode-transitions.exe: [...]/libgomp.oacc-c-c++-common/mode-transitions.c:702: t17: Assertion `arr_b[i] == (i ^ 31) * 8' failed.\n\n\tlibgomp/\n\t* plugin/plugin-gcn.c (gcn_exec): Force 'num_workers (1)'\n\tunconditionally.\n\t* testsuite/libgomp.oacc-c-c++-common/acc_prof-kernels-1.c:\n\tUpdate.\n\t* testsuite/libgomp.oacc-c-c++-common/parallel-dims.c: Likewise.\n\t* testsuite/libgomp.oacc-c-c++-common/routine-wv-2.c: Likewise.", "tree": {"sha": "a051252a37a9a28d890b497773fb6a850877fe09", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a051252a37a9a28d890b497773fb6a850877fe09"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/30656822b3792712c7a69fe1a0a79739f8f29abc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30656822b3792712c7a69fe1a0a79739f8f29abc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/30656822b3792712c7a69fe1a0a79739f8f29abc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30656822b3792712c7a69fe1a0a79739f8f29abc/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c68ddd5e2a9dd0cfe21c3661404d7d4c323b23cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c68ddd5e2a9dd0cfe21c3661404d7d4c323b23cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c68ddd5e2a9dd0cfe21c3661404d7d4c323b23cf"}], "stats": {"total": 17, "additions": 8, "deletions": 9}, "files": [{"sha": "cfed42a2d4d89e7a7f2885117e64c56aa4fac77e", "filename": "libgomp/plugin/plugin-gcn.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30656822b3792712c7a69fe1a0a79739f8f29abc/libgomp%2Fplugin%2Fplugin-gcn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30656822b3792712c7a69fe1a0a79739f8f29abc/libgomp%2Fplugin%2Fplugin-gcn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fplugin%2Fplugin-gcn.c?ref=30656822b3792712c7a69fe1a0a79739f8f29abc", "patch": "@@ -3041,10 +3041,9 @@ gcn_exec (struct kernel_info *kernel, size_t mapnum, void **hostaddrs,\n      problem size, so let's do a reasonable number of single-worker gangs.\n      64 gangs matches a typical Fiji device.  */\n \n-  /* NOTE: Until support for middle-end worker partitioning is merged, use 1\n-     for the default number of workers.  */\n   if (dims[0] == 0) dims[0] = get_cu_count (kernel->agent); /* Gangs.  */\n-  if (dims[1] == 0) dims[1] = 1;  /* Workers.  */\n+  /* NOTE: Until support for middle-end worker partitioning is merged, force 'num_workers (1)'.  */\n+  if (/*TODO dims[1] == 0*/ true) dims[1] = 1;  /* Workers.  */\n \n   /* The incoming dimensions are expressed in terms of gangs, workers, and\n      vectors.  The HSA dimensions are expressed in terms of \"work-items\","}, {"sha": "6c136c26c939399ede26e38b74735ccb3ca41c3d", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/acc_prof-kernels-1.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30656822b3792712c7a69fe1a0a79739f8f29abc/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Facc_prof-kernels-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30656822b3792712c7a69fe1a0a79739f8f29abc/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Facc_prof-kernels-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Facc_prof-kernels-1.c?ref=30656822b3792712c7a69fe1a0a79739f8f29abc", "patch": "@@ -94,9 +94,7 @@ static void cb_enqueue_launch_start (acc_prof_info *prof_info, acc_event_info *e\n   if (num_workers < 1)\n     assert (event_info->launch_event.num_workers >= 1);\n   /* GCN currently enforces 'num_workers (1)'.  */\n-  else if (acc_device_type == acc_device_radeon\n-\t   /*TODO ... just not in the \"Parallelism dimensions: variable\" case.  */\n-\t   && /*TODO*/ num_gangs != 22)\n+  else if (acc_device_type == acc_device_radeon)\n     assert (event_info->launch_event.num_workers == 1);\n   else\n     {"}, {"sha": "fe0dacd5aac409c2ba3b2c8431816170e746826e", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/parallel-dims.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30656822b3792712c7a69fe1a0a79739f8f29abc/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fparallel-dims.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30656822b3792712c7a69fe1a0a79739f8f29abc/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fparallel-dims.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fparallel-dims.c?ref=30656822b3792712c7a69fe1a0a79739f8f29abc", "patch": "@@ -313,8 +313,9 @@ int main ()\n \t}\n       else if (acc_on_device (acc_device_radeon))\n \t{\n-\t  /* The GCC GCN back end is limited to num_workers (16).  */\n-\t  workers_actual = 16;\n+\t  /* The GCC GCN back end is limited to num_workers (16).\n+\t     Temporarily set this to 1 until multiple workers are permitted. */\n+\t  workers_actual = 1; // 16;\n \t}\n       else\n \t__builtin_abort ();"}, {"sha": "624ec24e43747c28d4e500cd9a82c64c2a57405e", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/routine-wv-2.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30656822b3792712c7a69fe1a0a79739f8f29abc/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Froutine-wv-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30656822b3792712c7a69fe1a0a79739f8f29abc/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Froutine-wv-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Froutine-wv-2.c?ref=30656822b3792712c7a69fe1a0a79739f8f29abc", "patch": "@@ -6,7 +6,8 @@\n #include <gomp-constants.h>\n \n #ifdef ACC_DEVICE_TYPE_radeon\n-#define NUM_WORKERS 16\n+/* Temporarily set this to 1 until multiple workers are permitted.  */\n+#define NUM_WORKERS 1\n #define NUM_VECTORS 1\n #else\n #define NUM_WORKERS 16"}]}