{"sha": "94f0f2ccaff7f298a21fb1daa39c720d3cbd73cb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTRmMGYyY2NhZmY3ZjI5OGEyMWZiMWRhYTM5YzcyMGQzY2JkNzNjYg==", "commit": {"author": {"name": "James Greenhalgh", "email": "james.greenhalgh@arm.com", "date": "2014-11-18T09:48:14Z"}, "committer": {"name": "James Greenhalgh", "email": "jgreenhalgh@gcc.gnu.org", "date": "2014-11-18T09:48:14Z"}, "message": "[ARM Refactor Builtins: 1/8] Remove arm_neon.h's \"Magic Words\"\n\ngcc/testsuite/\n\n\t* gcc.target/arm/pr51968.c (foo): Do not try to pass \"Magic Word\".\n\ngcc/\n\n\t* config/arm/arm.c (arm_expand_neon_builtin): Remove \"Magic Word\"\n\tparameter, rearrange switch statement accordingly.\n\t(arm_evpc_neon_vrev): Remove \"Magic Word\".\n\t* config/arm/unspecs.md (unspec): Split many UNSPECs to\n\trounding, or signed/unsigned variants.\n\t* config/arm/neon.md: Remove \"Magic Word\" code.\n\t* config/arm/iterators.md (VPF): New.\n\t(VADDL): Likewise.\n\t(VADDW): Likewise.\n\t(VHADD): Likewise.\n\t(VQADD): Likewise.\n\t(VADDHN): Likewise.\n\t(VMLAL): Likewise.\n\t(VMLAL_LANE): Likewise.\n\t(VLMSL): Likewise.\n\t(VMLSL_LANE): Likewise.\n\t(VQDMULH): Likewise,\n\t(VQDMULH_LANE): Likewise.\n\t(VMULL): Likewise.\n\t(VMULL_LANE): Likewise.\n\t(VSUBL): Likewise.\n\t(VSUBW): Likewise.\n\t(VHSUB): Likewise.\n\t(VQSUB): Likewise.\n\t(VSUBHN): Likewise.\n\t(VABD): Likewise.\n\t(VABDL): Likewise.\n\t(VMAXMIN): Likewise.\n\t(VMAXMINF): Likewise.\n\t(VPADDL): Likewise.\n\t(VPADAL): Likewise.\n\t(VPMAXMIN): Likewise.\n\t(VPMAXMINF): Likewise.\n\t(VCVT_US): Likewise.\n\t(VCVT_US_N): Likewise.\n\t(VQMOVN): Likewise.\n\t(VMOVL): Likewise.\n\t(VSHL): Likewise.\n\t(VQSHL): Likewise.\n\t(VSHR_N): Likewise.\n\t(VSHRN_N): Likewise.\n\t(VQSHRN_N): Likewise.\n\t(VQSHRUN_N): Likewise.\n\t(VQSHL_N): Likewise.\n\t(VSHLL_N): Likewise.\n\t(VSRA_N): Likewise.\n\t(pf): Likewise.\n\t(sup): Likewise.\n\t(r): Liekwise.\n\t(maxmin): Likewise.\n\t(shift_op): Likewise.\n\t* config/arm/arm_neon_builtins.def: Split many patterns.\n\t* config/arm/arm_neon.h (vaddl_s8): Remove \"Magic Word\" code.\n\nFrom-SVN: r217693", "tree": {"sha": "28525749a915895e3b582d1245aaa0f2f6da4edc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/28525749a915895e3b582d1245aaa0f2f6da4edc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/94f0f2ccaff7f298a21fb1daa39c720d3cbd73cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94f0f2ccaff7f298a21fb1daa39c720d3cbd73cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/94f0f2ccaff7f298a21fb1daa39c720d3cbd73cb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94f0f2ccaff7f298a21fb1daa39c720d3cbd73cb/comments", "author": {"login": "jgreenhalgh-arm", "id": 6104025, "node_id": "MDQ6VXNlcjYxMDQwMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6104025?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jgreenhalgh-arm", "html_url": "https://github.com/jgreenhalgh-arm", "followers_url": "https://api.github.com/users/jgreenhalgh-arm/followers", "following_url": "https://api.github.com/users/jgreenhalgh-arm/following{/other_user}", "gists_url": "https://api.github.com/users/jgreenhalgh-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jgreenhalgh-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jgreenhalgh-arm/subscriptions", "organizations_url": "https://api.github.com/users/jgreenhalgh-arm/orgs", "repos_url": "https://api.github.com/users/jgreenhalgh-arm/repos", "events_url": "https://api.github.com/users/jgreenhalgh-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/jgreenhalgh-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e8c430897708622510974ecff782d3ac8cac1d1b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8c430897708622510974ecff782d3ac8cac1d1b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e8c430897708622510974ecff782d3ac8cac1d1b"}], "stats": {"total": 4232, "additions": 2835, "deletions": 1397}, "files": [{"sha": "430373ea08f71171d4a093b90f868d9b1026b15b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 1182, "deletions": 0, "changes": 1182, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94f0f2ccaff7f298a21fb1daa39c720d3cbd73cb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94f0f2ccaff7f298a21fb1daa39c720d3cbd73cb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=94f0f2ccaff7f298a21fb1daa39c720d3cbd73cb", "patch": "@@ -1,3 +1,1185 @@\n+2014-11-18  James Greenhalgh  <james.greenhalgh@arm.com>\n+\n+\t* config/arm/arm.c (arm_expand_neon_builtin): Remove \"Magic Word\"\n+\tparameter, rearrange switch statement accordingly.\n+\t(arm_evpc_neon_vrev): Remove \"Magic Word\".\n+\t* config/arm/unspecs.md (unspec): Split many UNSPECs to\n+\trounding, or signed/unsigned variants.\n+\t* config/arm/neon.md (vcond<mode><mode>): Remove \"Magic Word\" code.\n+\t(vcondu<mode><mode>): Likewise.\n+\t(neon_vadd): Remove \"Magic Word\" operand.\n+\t(neon_vaddl): Remove \"Magic Word\" operand, convert to use\n+\tsigned/unsigned iterator.\n+\t(neon_vaddw): Likewise.\n+\t(neon_vhadd): Likewise, also iterate over \"rounding\" forms.\n+\t(neon_vqadd): Remove \"Magic Word\" operand, convert to use\n+\tsigned/unsigned iterator.\n+\t(neon_v<r>addhn): Remove \"Magic Word\" operand, convert to iterate\n+\tover \"rounding\" forms.\n+\t(neon_vmul): Remove \"Magic Word\" operand, iterate over\n+\tpolynomial/float instruction forms.\n+\t(neon_vmla): Remove \"Magic Word\" operand.\n+\t(neon_vfma): Likewise.\n+\t(neon_vfms): Likewise.\n+\t(neon_vmls): Likewise.\n+\t(neon_vmlal): Remove \"Magic Word\" operand, iterate over\n+\tsigned/unsigned forms.\n+\t(neon_vmlsl): Likewise.\n+\t(neon_vqdmulh): Remove \"Magic Word\" operand, iterate over \"rounding\"\n+\tforms.\n+\t(neon_vqdmlal): Remove \"Magic Word\" operand, iterate over\n+\tsigned/unsigned forms.\n+\t(neon_vqdmlsl): Likewise.\n+\t(neon_vmull): Likewise.\n+\t(neon_vqdmull): Remove \"Magic Word\" operand.\n+\t(neon_vsub): Remove \"Magic Word\" operand.\n+\t(neon_vsubl): Remove \"Magic Word\" operand, convert to use\n+\tsigned/unsigned iterator.\n+\t(neon_vsubw): Likewise.\n+\t(neon_vhsub): Likewise.\n+\t(neon_vqsub): Likewise.\n+\t(neon_v<r>subhn): Remove \"Magic Word\" operand, convert to iterate\n+\tover \"rounding\" forms.\n+\t(neon_vceq): Remove \"Magic Word\" operand.\n+\t(neon_vcge): Likewise.\n+\t(neon_vcgeu): Likewise.\n+\t(neon_vcgt): Likewise.\n+\t(neon_vcgtu): Likewise.\n+\t(neon_vcle): Likewise.\n+\t(neon_vclt): Likewise.\n+\t(neon_vcage): Likewise.\n+\t(neon_vcagt): Likewise.\n+\t(neon_vabd): Remove \"Magic Word\" operand, iterate over\n+\tsigned/unsigned forms, and split out...\n+\t(neon_vabdf): ...this as new.\n+\t(neon_vabdl): Remove \"Magic Word\" operand, iterate over\n+\tsigned/unsigned forms.\n+\t(neon_vaba): Likewise.\n+\t(neon_vmax): Remove \"Magic Word\" operand, iterate over\n+\tsigned/unsigned and max/min forms, and split out...\n+\t(neon_v<maxmin>f): ...this as new.\n+\t(neon_vmin): Delete.\n+\t(neon_vpadd): Remove \"Magic Word\" operand.\n+\t(neon_vpaddl): Remove \"Magic Word\" operand, iterate over\n+\tsigned/unsigned variants.\n+\t(neon_vpadal): Likewise.\n+\t(neon_vpmax): Remove \"Magic Word\" operand, iterate over\n+\tsigned/unsigned and max/min forms, and split out...\n+\t(neon_vp<maxmin>f): ...this as new.\n+\t(neon_vpmin): Delete.\n+\t(neon_vrecps): Remove \"Magic Word\" operand.\n+\t(neon_vrsqrts): Likewise.\n+\t(neon_vabs): Likewise.\n+\t(neon_vqabs): Likewise.\n+\t(neon_vneg): Likewise.\n+\t(neon_vqneg): Likewise.\n+\t(neon_vcls): Likewise.\n+\t(neon_vcnt): Likewise.\n+\t(neon_vrecpe): Likewise.\n+\t(neon_vrsqrte): Likewise.\n+\t(neon_vmvn): Likewise.\n+\t(neon_vget_lane): Likewise.\n+\t(neon_vget_laneu): New.\n+\t(neon_vget_lanedi): Remove \"Magic Word\" operand.\n+\t(neon_vget_lanev2di): Likewise.\n+\t(neon_vcvt): Remove \"Magic Word\" operand, iterate over\n+\tsigned/unsigned variants.\n+\t(neon_vcvt_n): Likewise.\n+\t(neon_vmovn): Remove \"Magic Word\" operand.\n+\t(neon_vqmovn): Remove \"Magic Word\" operand, iterate over\n+\tsigned/unsigned variants.\n+\t(neon_vmovun): Remove \"Magic Word\" operand.\n+\t(neon_vmovl): Remove \"Magic Word\" operand, iterate over\n+\tsigned/unsigned variants.\n+\t(neon_vmul_lane): Remove \"Magic Word\" operand.\n+\t(neon_vmull_lane): Remove \"Magic Word\" operand, iterate over\n+\tsigned/unsigned variants.\n+\t(neon_vqdmull_lane): Remove \"Magic Word\" operand.\n+\t(neon_vqdmulh_lane): Remove \"Magic Word\" operand, iterate over\n+\trounding variants.\n+\t(neon_vmla_lane): Remove \"Magic Word\" operand.\n+\t(neon_vmlal_lane): Remove \"Magic Word\" operand, iterate over\n+\tsigned/unsigned variants.\n+\t(neon_vqdmlal_lane): Remove \"Magic Word\" operand.\n+\t(neon_vmls_lane): Likewise.\n+\t(neon_vmlsl_lane): Remove \"Magic Word\" operand, iterate over\n+\tsigned/unsigned variants.\n+\t(neon_vqdmlsl_lane): Remove \"Magic Word\" operand.\n+\t(neon_vmul_n): Remove \"Magic Word\" operand.\n+\t(neon_vmull_n): Rename to...\n+\t(neon_vmulls_n): ...this, remove \"Magic Word\" operand.\n+\t(neon_vmullu_n): New.\n+\t(neon_vqdmull_n): Remove \"Magic Word\" operand.\n+\t(neon_vqdmulh_n): Likewise.\n+\t(neon_vqrdmulh_n): New.\n+\t(neon_vmla_n): Remove \"Magic Word\" operand.\n+\t(neon_vmls_n): Likewise.\n+\t(neon_vmlal_n): Rename to...\n+\t(neon_vmlals_n): ...this, remove \"Magic Word\" operand.\n+\t(neon_vmlalu_n): New.\n+\t(neon_vqdmlal_n): Remove \"Magic Word\" operand.\n+\t(neon_vmlsl_n): Rename to...\n+\t(neon_vmlsls_n): ...this, remove \"Magic Word\" operand.\n+\t(neon_vmlslu_n): New.\n+\t(neon_vqdmlsl_n): Remove \"Magic Word\" operand.\n+\t(neon_vrev64): Remove \"Magic Word\" operand.\n+\t(neon_vrev32): Likewise.\n+\t(neon_vrev16): Likewise.\n+\t(neon_vshl): Remove \"Magic Word\" operand, iterate over\n+\tsigned/unsigned and \"rounding\" forms.\n+\t(neon_vqshl): Likewise.\n+\t(neon_vshr_n): Likewise.\n+\t(neon_vshrn_n): Remove \"Magic Word\" operand, iterate over\n+\t\"rounding\" forms.\n+\t(neon_vqshrn_n): Remove \"Magic Word\" operand, iterate over\n+\tsigned/unsigned and \"rounding\" forms.\n+\t(neon_vqshrun_n): Remove \"Magic Word\" operand, iterate over\n+\t\"rounding\" forms.\n+\t(neon_vshl_n): Remove \"Magic Word\" operand.\n+\t(neon_vqshl_n): Remove \"Magic Word\" operand, iterate over\n+\tsigned/unsigned variants.\n+\t(neon_vqshlu_n): Remove \"Magic Word\" operand.\n+\t(neon_vshll_n): Remove \"Magic Word\" operand, iterate over\n+\tsigned/unsigned variants.\n+\t(neon_vsra_n): Remove \"Magic Word\" operand, iterate over\n+\tsigned/unsigned and \"rounding\" forms.\n+\t* config/arm/iterators.md (VPF): New.\n+\t(VADDL): Likewise.\n+\t(VADDW): Likewise.\n+\t(VHADD): Likewise.\n+\t(VQADD): Likewise.\n+\t(VADDHN): Likewise.\n+\t(VMLAL): Likewise.\n+\t(VMLAL_LANE): Likewise.\n+\t(VLMSL): Likewise.\n+\t(VMLSL_LANE): Likewise.\n+\t(VQDMULH): Likewise,\n+\t(VQDMULH_LANE): Likewise.\n+\t(VMULL): Likewise.\n+\t(VMULL_LANE): Likewise.\n+\t(VSUBL): Likewise.\n+\t(VSUBW): Likewise.\n+\t(VHSUB): Likewise.\n+\t(VQSUB): Likewise.\n+\t(VSUBHN): Likewise.\n+\t(VABD): Likewise.\n+\t(VABDL): Likewise.\n+\t(VMAXMIN): Likewise.\n+\t(VMAXMINF): Likewise.\n+\t(VPADDL): Likewise.\n+\t(VPADAL): Likewise.\n+\t(VPMAXMIN): Likewise.\n+\t(VPMAXMINF): Likewise.\n+\t(VCVT_US): Likewise.\n+\t(VCVT_US_N): Likewise.\n+\t(VQMOVN): Likewise.\n+\t(VMOVL): Likewise.\n+\t(VSHL): Likewise.\n+\t(VQSHL): Likewise.\n+\t(VSHR_N): Likewise.\n+\t(VSHRN_N): Likewise.\n+\t(VQSHRN_N): Likewise.\n+\t(VQSHRUN_N): Likewise.\n+\t(VQSHL_N): Likewise.\n+\t(VSHLL_N): Likewise.\n+\t(VSRA_N): Likewise.\n+\t(pf): Likewise.\n+\t(sup): Likewise.\n+\t(r): Liekwise.\n+\t(maxmin): Likewise.\n+\t(shift_op): Likewise.\n+\t* config/arm/arm_neon_builtins.def (vaddl): Split to...\n+\t(vaddls): ...this and...\n+\t(vaddlu): ...this.\n+\t(vaddw): Split to...\n+\t(vaddws): ...this and...\n+\t(vaddwu): ...this.\n+\t(vhadd): Split to...\n+\t(vhadds): ...this and...\n+\t(vhaddu): ...this and...\n+\t(vrhadds): ...this and...\n+\t(vrhaddu): ...this.\n+\t(vqadd): Split to...\n+\t(vqadds): ...this and...\n+\t(vqaddu): ...this.\n+\t(vaddhn): Split to itself and...\n+\t(vraddhn): ...this.\n+\t(vmul): Split to...\n+\t(vmulf): ...this and...\n+\t(vmulp): ...this.\n+\t(vmlal): Split to...\n+\t(vmlals): ...this and...\n+\t(vmlalu): ...this.\n+\t(vmlsl): Split to...\n+\t(vmlsls): ...this and...\n+\t(vmlslu): ...this.\n+\t(vqdmulh): Split to itself and...\n+\t(vqrdmulh): ...this.\n+\t(vmull): Split to...\n+\t(vmullp): ...this and...\n+\t(vmulls): ...this and...\n+\t(vmullu): ...this.\n+\t(vmull_n): Split to...\n+\t(vmulls_n): ...this and...\n+\t(vmullu_n): ...this.\n+\t(vmull_lane): Split to...\n+\t(vmulls_lane): ...this and...\n+\t(vmullu_lane): ...this.\n+\t(vqdmulh_n): Split to itself and...\n+\t(vqrdmulh_n): ...this.\n+\t(vqdmulh_lane): Split to itself and...\n+\t(vqrdmulh_lane): ...this.\n+\t(vshl): Split to...\n+\t(vshls): ...this and...\n+\t(vshlu): ...this and...\n+\t(vrshls): ...this and...\n+\t(vrshlu): ...this.\n+\t(vqshl): Split to...\n+\t(vqshls): ...this and...\n+\t(vqrshlu): ...this and...\n+\t(vqrshls): ...this and...\n+\t(vqrshlu): ...this.\n+\t(vshr_n): Split to...\n+\t(vshrs_n): ...this and...\n+\t(vshru_n): ...this and...\n+\t(vrshrs_n): ...this and...\n+\t(vrshru_n): ...this.\n+\t(vshrn_n): Split to itself and...\n+\t(vrshrn_n): ...this.\n+\t(vqshrn_n): Split to...\n+\t(vqshrns_n): ...this and...\n+\t(vqshrnu_n): ...this and...\n+\t(vqrshrns_n): ...this and...\n+\t(vqrshrnu_n): ...this.\n+\t(vqshrun_n): Split to itself and...\n+\t(vqrshrun_n): ...this.\n+\t(vqshl_n): Split to...\n+\t(vqshl_s_n): ...this and...\n+\t(vqshl_u_n): ...this.\n+\t(vshll_n): Split to...\n+\t(vshlls_n): ...this and...\n+\t(vshllu_n): ...this.\n+\t(vsra_n): Split to...\n+\t(vsras_n): ...this and...\n+\t(vsrau_n): ...this and.\n+\t(vrsras_n): ...this and...\n+\t(vrsrau_n): ...this and.\n+\t(vsubl): Split to...\n+\t(vsubls): ...this and...\n+\t(vsublu): ...this.\n+\t(vsubw): Split to...\n+\t(vsubws): ...this and...\n+\t(vsubwu): ...this.\n+\t(vqsub): Split to...\n+\t(vqsubs): ...this and...\n+\t(vqsubu): ...this.\n+\t(vhsub): Split to...\n+\t(vhsubs): ...this and...\n+\t(vhsubu): ...this.\n+\t(vsubhn): Split to itself and...\n+\t(vrsubhn): ...this.\n+\t(vabd): Split to...\n+\t(vabds): ...this and...\n+\t(vabdu): ...this and...\n+\t(vabdf): ...this.\n+\t(vabdl): Split to...\n+\t(vabdls): ...this and...\n+\t(vabdlu): ...this.\n+\t(vaba): Split to...\n+\t(vabas): ...this and...\n+\t(vabau): ...this and...\n+\t(vabal): Split to...\n+\t(vabals): ...this and...\n+\t(vabalu): ...this.\n+\t(vmax): Split to...\n+\t(vmaxs): ...this and...\n+\t(vmaxu): ...this and...\n+\t(vmaxf): ...this.\n+\t(vmin): Split to...\n+\t(vmins): ...this and...\n+\t(vminu): ...this and...\n+\t(vminf): ...this.\n+\t(vpmax): Split to...\n+\t(vpmaxs): ...this and...\n+\t(vpmaxu): ...this and...\n+\t(vpmaxf): ...this.\n+\t(vpmin): Split to...\n+\t(vpmins): ...this and...\n+\t(vpminu): ...this and...\n+\t(vpminf): ...this.\n+\t(vpaddl): Split to...\n+\t(vpaddls): ...this and...\n+\t(vpaddlu): ...this.\n+\t(vpadal): Split to...\n+\t(vpadals): ...this and...\n+\t(vpadalu): ...this.\n+\t(vget_laneu): New.\n+\t(vqmovn): Split to...\n+\t(vqmovns): ...this and...\n+\t(vqmovnu): ...this.\n+\t(vmovl): Split to...\n+\t(vmovls): ...this and...\n+\t(vmovlu): ...this.\n+\t(vmlal_lane): Split to...\n+\t(vmlals_lane): ...this and...\n+\t(vmlalu_lane): ...this.\n+\t(vmlsl_lane): Split to...\n+\t(vmlsls_lane): ...this and...\n+\t(vmlslu_lane): ...this.\n+\t(vmlal_n): Split to...\n+\t(vmlals_n): ...this and...\n+\t(vmlalu_n): ...this.\n+\t(vmlsl_n): Split to...\n+\t(vmlsls_n): ...this and...\n+\t(vmlslu_n): ...this.\n+\t(vext): Make type \"SHIFTINSERT\".\n+\t(vcvt): Split to...\n+\t(vcvts): ...this and...\n+\t(vcvtu): ...this.\n+\t(vcvt_n): Split to...\n+\t(vcvts_n): ...this and...\n+\t(vcvtu_n): ...this.\n+\t* config/arm/arm_neon.h (vaddl_s8): Remove \"Magic Word\".\n+\t(vaddl_s16): Likewise.\n+\t(vaddl_s32): Likewise.\n+\t(vaddl_u8): Likewise.\n+\t(vaddl_u16): Likewise.\n+\t(vaddl_u32): Likewise.\n+\t(vaddw_s8): Likewise.\n+\t(vaddw_s16): Likewise.\n+\t(vaddw_s32): Likewise.\n+\t(vaddw_u8): Likewise.\n+\t(vaddw_u16): Likewise.\n+\t(vaddw_u32): Likewise.\n+\t(vhadd_s8): Likewise.\n+\t(vhadd_s16): Likewise.\n+\t(vhadd_s32): Likewise.\n+\t(vhadd_u8): Likewise.\n+\t(vhadd_u16): Likewise.\n+\t(vhadd_u32): Likewise.\n+\t(vhaddq_s8): Likewise.\n+\t(vhaddq_s16): Likewise.\n+\t(vhaddq_s32): Likewise.\n+\t(vhaddq_u8): Likewise.\n+\t(vhaddq_u16): Likewise.\n+\t(vrhadd_s8): Likewise.\n+\t(vrhadd_s16): Likewise.\n+\t(vrhadd_s32): Likewise.\n+\t(vrhadd_u8): Likewise.\n+\t(vrhadd_u16): Likewise.\n+\t(vrhadd_u32): Likewise.\n+\t(vrhaddq_s8): Likewise.\n+\t(vrhaddq_s16): Likewise.\n+\t(vrhaddq_s32): Likewise.\n+\t(vrhaddq_u8): Likewise.\n+\t(vrhaddq_u16): Likewise.\n+\t(vrhaddq_u32): Likewise.\n+\t(vqadd_s8): Likewise.\n+\t(vqadd_s16): Likewise.\n+\t(vqadd_s32): Likewise.\n+\t(vqadd_s64): Likewise.\n+\t(vqadd_u8): Likewise.\n+\t(vqadd_u16): Likewise.\n+\t(vqadd_u32): Likewise.\n+\t(vqadd_u64): Likewise.\n+\t(vqaddq_s8): Likewise.\n+\t(vqaddq_s16): Likewise.\n+\t(vqaddq_s32): Likewise.\n+\t(vqaddq_s64): Likewise.\n+\t(vqaddq_u8): Likewise.\n+\t(vqaddq_u16): Likewise.\n+\t(vqaddq_u32): Likewise.\n+\t(vqaddq_u64): Likewise.\n+\t(vaddhn_s16): Likewise.\n+\t(vaddhn_s32): Likewise.\n+\t(vaddhn_s64): Likewise.\n+\t(vaddhn_u16): Likewise.\n+\t(vaddhn_u32): Likewise.\n+\t(vaddhn_u64): Likewise.\n+\t(vraddhn_s16): Likewise.\n+\t(vraddhn_s32): Likewise.\n+\t(vraddhn_s64): Likewise.\n+\t(vraddhn_u16): Likewise.\n+\t(vraddhn_u32): Likewise.\n+\t(vraddhn_u64): Likewise.\n+\t(vmul_p8): Likewise.\n+\t(vmulq_p8): Likewise.\n+\t(vqdmulh_s16): Likewise.\n+\t(vqdmulh_s32): Likewise.\n+\t(vqdmulhq_s16): Likewise.\n+\t(vqdmulhq_s32): Likewise.\n+\t(vqrdmulh_s16): Likewise.\n+\t(vqrdmulh_s32): Likewise.\n+\t(vqrdmulhq_s16): Likewise.\n+\t(vqrdmulhq_s32): Likewise.\n+\t(vmull_s8): Likewise.\n+\t(vmull_s16): Likewise.\n+\t(vmull_s32): Likewise.\n+\t(vmull_u8): Likewise.\n+\t(vmull_u16): Likewise.\n+\t(vmull_u32): Likewise.\n+\t(vmull_p8): Likewise.\n+\t(vqdmull_s16): Likewise.\n+\t(vqdmull_s32): Likewise.\n+\t(vmla_s8): Likewise.\n+\t(vmla_s16): Likewise.\n+\t(vmla_s32): Likewise.\n+\t(vmla_f32): Likewise.\n+\t(vmla_u8): Likewise.\n+\t(vmla_u16): Likewise.\n+\t(vmla_u32): Likewise.\n+\t(vmlaq_s8): Likewise.\n+\t(vmlaq_s16): Likewise.\n+\t(vmlaq_s32): Likewise.\n+\t(vmlaq_f32): Likewise.\n+\t(vmlaq_u8): Likewise.\n+\t(vmlaq_u16): Likewise.\n+\t(vmlaq_u32): Likewise.\n+\t(vmlal_s8): Likewise.\n+\t(vmlal_s16): Likewise.\n+\t(vmlal_s32): Likewise.\n+\t(vmlal_u8): Likewise.\n+\t(vmlal_u16): Likewise.\n+\t(vmlal_u32): Likewise.\n+\t(vqdmlal_s16): Likewise.\n+\t(vqdmlal_s32): Likewise.\n+\t(vmls_s8): Likewise.\n+\t(vmls_s16): Likewise.\n+\t(vmls_s32): Likewise.\n+\t(vmls_f32): Likewise.\n+\t(vmls_u8): Likewise.\n+\t(vmls_u16): Likewise.\n+\t(vmls_u32): Likewise.\n+\t(vmlsq_s8): Likewise.\n+\t(vmlsq_s16): Likewise.\n+\t(vmlsq_s32): Likewise.\n+\t(vmlsq_f32): Likewise.\n+\t(vmlsq_u8): Likewise.\n+\t(vmlsq_u16): Likewise.\n+\t(vmlsq_u32): Likewise.\n+\t(vmlsl_s8): Likewise.\n+\t(vmlsl_s16): Likewise.\n+\t(vmlsl_s32): Likewise.\n+\t(vmlsl_u8): Likewise.\n+\t(vmlsl_u16): Likewise.\n+\t(vmlsl_u32): Likewise.\n+\t(vqdmlsl_s16): Likewise.\n+\t(vqdmlsl_s32): Likewise.\n+\t(vfma_f32): Likewise.\n+\t(vfmaq_f32): Likewise.\n+\t(vfms_f32): Likewise.\n+\t(vfmsq_f32): Likewise.\n+\t(vsubl_s8): Likewise.\n+\t(vsubl_s16): Likewise.\n+\t(vsubl_s32): Likewise.\n+\t(vsubl_u8): Likewise.\n+\t(vsubl_u16): Likewise.\n+\t(vsubl_u32): Likewise.\n+\t(vsubw_s8): Likewise.\n+\t(vsubw_s16): Likewise.\n+\t(vsubw_s32): Likewise.\n+\t(vsubw_u8): Likewise.\n+\t(vsubw_u16): Likewise.\n+\t(vsubw_u32): Likewise.\n+\t(vhsub_s8): Likewise.\n+\t(vhsub_s16): Likewise.\n+\t(vhsub_s32): Likewise.\n+\t(vhsub_u8): Likewise.\n+\t(vhsub_u16): Likewise.\n+\t(vhsub_u32): Likewise.\n+\t(vhsubq_s8): Likewise.\n+\t(vhsubq_s16): Likewise.\n+\t(vhsubq_s32): Likewise.\n+\t(vhsubq_u8): Likewise.\n+\t(vhsubq_u16): Likewise.\n+\t(vhsubq_u32): Likewise.\n+\t(vqsub_s8): Likewise.\n+\t(vqsub_s16): Likewise.\n+\t(vqsub_s32): Likewise.\n+\t(vqsub_s64): Likewise.\n+\t(vqsub_u8): Likewise.\n+\t(vqsub_u16): Likewise.\n+\t(vqsub_u32): Likewise.\n+\t(vqsub_u64): Likewise.\n+\t(vqsubq_s8): Likewise.\n+\t(vqsubq_s16): Likewise.\n+\t(vqsubq_s32): Likewise.\n+\t(vqsubq_s64): Likewise.\n+\t(vqsubq_u8): Likewise.\n+\t(vqsubq_u16): Likewise.\n+\t(vqsubq_u32): Likewise.\n+\t(vqsubq_u64): Likewise.\n+\t(vsubhn_s16): Likewise.\n+\t(vsubhn_s32): Likewise.\n+\t(vsubhn_s64): Likewise.\n+\t(vsubhn_u16): Likewise.\n+\t(vsubhn_u32): Likewise.\n+\t(vsubhn_u64): Likewise.\n+\t(vrsubhn_s16): Likewise.\n+\t(vrsubhn_s32): Likewise.\n+\t(vrsubhn_s64): Likewise.\n+\t(vrsubhn_u16): Likewise.\n+\t(vrsubhn_u32): Likewise.\n+\t(vrsubhn_u64): Likewise.\n+\t(vceq_s8): Likewise.\n+\t(vceq_s16): Likewise.\n+\t(vceq_s32): Likewise.\n+\t(vceq_f32): Likewise.\n+\t(vceq_u8): Likewise.\n+\t(vceq_u16): Likewise.\n+\t(vceq_u32): Likewise.\n+\t(vceq_p8): Likewise.\n+\t(vceqq_s8): Likewise.\n+\t(vceqq_s16): Likewise.\n+\t(vceqq_s32): Likewise.\n+\t(vceqq_f32): Likewise.\n+\t(vceqq_u8): Likewise.\n+\t(vceqq_u16): Likewise.\n+\t(vceqq_u32): Likewise.\n+\t(vceqq_p8): Likewise.\n+\t(vcge_s8): Likewise.\n+\t(vcge_s16): Likewise.\n+\t(vcge_s32): Likewise.\n+\t(vcge_f32): Likewise.\n+\t(vcge_u8): Likewise.\n+\t(vcge_u16): Likewise.\n+\t(vcge_u32): Likewise.\n+\t(vcgeq_s8): Likewise.\n+\t(vcgeq_s16): Likewise.\n+\t(vcgeq_s32): Likewise.\n+\t(vcgeq_f32): Likewise.\n+\t(vcgeq_u8): Likewise.\n+\t(vcgeq_u16): Likewise.\n+\t(vcgeq_u32): Likewise.\n+\t(vcle_s8): Likewise.\n+\t(vcle_s16): Likewise.\n+\t(vcle_s32): Likewise.\n+\t(vcle_f32): Likewise.\n+\t(vcle_u8): Likewise.\n+\t(vcle_u16): Likewise.\n+\t(vcle_u32): Likewise.\n+\t(vcleq_s8): Likewise.\n+\t(vcleq_s16): Likewise.\n+\t(vcleq_s32): Likewise.\n+\t(vcleq_f32): Likewise.\n+\t(vcleq_u8): Likewise.\n+\t(vcleq_u16): Likewise.\n+\t(vcleq_u32): Likewise.\n+\t(vcgt_s8): Likewise.\n+\t(vcgt_s16): Likewise.\n+\t(vcgt_s32): Likewise.\n+\t(vcgt_f32): Likewise.\n+\t(vcgt_u8): Likewise.\n+\t(vcgt_u16): Likewise.\n+\t(vcgt_u32): Likewise.\n+\t(vcgtq_s8): Likewise.\n+\t(vcgtq_s16): Likewise.\n+\t(vcgtq_s32): Likewise.\n+\t(vcgtq_f32): Likewise.\n+\t(vcgtq_u8): Likewise.\n+\t(vcgtq_u16): Likewise.\n+\t(vcgtq_u32): Likewise.\n+\t(vclt_s8): Likewise.\n+\t(vclt_s16): Likewise.\n+\t(vclt_s32): Likewise.\n+\t(vclt_f32): Likewise.\n+\t(vclt_u8): Likewise.\n+\t(vclt_u16): Likewise.\n+\t(vclt_u32): Likewise.\n+\t(vcltq_s8): Likewise.\n+\t(vcltq_s16): Likewise.\n+\t(vcltq_s32): Likewise.\n+\t(vcltq_f32): Likewise.\n+\t(vcltq_u8): Likewise.\n+\t(vcltq_u16): Likewise.\n+\t(vcltq_u32): Likewise.\n+\t(vcage_f32): Likewise.\n+\t(vcageq_f32): Likewise.\n+\t(vcale_f32): Likewise.\n+\t(vcaleq_f32): Likewise.\n+\t(vcagt_f32): Likewise.\n+\t(vcagtq_f32): Likewise.\n+\t(vcalt_f32): Likewise.\n+\t(vcaltq_f32): Likewise.\n+\t(vtst_s8): Likewise.\n+\t(vtst_s16): Likewise.\n+\t(vtst_s32): Likewise.\n+\t(vtst_u8): Likewise.\n+\t(vtst_u16): Likewise.\n+\t(vtst_u32): Likewise.\n+\t(vtst_p8): Likewise.\n+\t(vtstq_s8): Likewise.\n+\t(vtstq_s16): Likewise.\n+\t(vtstq_s32): Likewise.\n+\t(vtstq_u8): Likewise.\n+\t(vtstq_u16): Likewise.\n+\t(vtstq_u32): Likewise.\n+\t(vtstq_p8): Likewise.\n+\t(vabd_s8): Likewise.\n+\t(vabd_s16): Likewise.\n+\t(vabd_s32): Likewise.\n+\t(vabd_f32): Likewise.\n+\t(vabd_u8): Likewise.\n+\t(vabd_u16): Likewise.\n+\t(vabd_u32): Likewise.\n+\t(vabdq_s8): Likewise.\n+\t(vabdq_s16): Likewise.\n+\t(vabdq_s32): Likewise.\n+\t(vabdq_f32): Likewise.\n+\t(vabdq_u8): Likewise.\n+\t(vabdq_u16): Likewise.\n+\t(vabdq_u32): Likewise.\n+\t(vabdl_s8): Likewise.\n+\t(vabdl_s16): Likewise.\n+\t(vabdl_s32): Likewise.\n+\t(vabdl_u8): Likewise.\n+\t(vabdl_u16): Likewise.\n+\t(vabdl_u32): Likewise.\n+\t(vaba_s8): Likewise.\n+\t(vaba_s16): Likewise.\n+\t(vaba_s32): Likewise.\n+\t(vaba_u8): Likewise.\n+\t(vaba_u16): Likewise.\n+\t(vaba_u32): Likewise.\n+\t(vabaq_s8): Likewise.\n+\t(vabaq_s16): Likewise.\n+\t(vabaq_s32): Likewise.\n+\t(vabaq_u8): Likewise.\n+\t(vabaq_u16): Likewise.\n+\t(vabaq_u32): Likewise.\n+\t(vabal_s8): Likewise.\n+\t(vabal_s16): Likewise.\n+\t(vabal_s32): Likewise.\n+\t(vabal_u8): Likewise.\n+\t(vabal_u16): Likewise.\n+\t(vabal_u32): Likewise.\n+\t(vmax_s8): Likewise.\n+\t(vmax_s16): Likewise.\n+\t(vmax_s32): Likewise.\n+\t(vmax_f32): Likewise.\n+\t(vmax_u8): Likewise.\n+\t(vmax_u16): Likewise.\n+\t(vmax_u32): Likewise.\n+\t(vmaxq_s8): Likewise.\n+\t(vmaxq_s16): Likewise.\n+\t(vmaxq_s32): Likewise.\n+\t(vmaxq_f32): Likewise.\n+\t(vmaxq_u8): Likewise.\n+\t(vmaxq_u16): Likewise.\n+\t(vmaxq_u32): Likewise.\n+\t(vmin_s8): Likewise.\n+\t(vmin_s16): Likewise.\n+\t(vmin_s32): Likewise.\n+\t(vmin_f32): Likewise.\n+\t(vmin_u8): Likewise.\n+\t(vmin_u16): Likewise.\n+\t(vmin_u32): Likewise.\n+\t(vminq_s8): Likewise.\n+\t(vminq_s16): Likewise.\n+\t(vminq_s32): Likewise.\n+\t(vminq_f32): Likewise.\n+\t(vminq_u8): Likewise.\n+\t(vminq_u16): Likewise.\n+\t(vminq_u32): Likewise.\n+\t(vpadd_s8): Likewise.\n+\t(vpadd_s16): Likewise.\n+\t(vpadd_s32): Likewise.\n+\t(vpadd_f32): Likewise.\n+\t(vpadd_u8): Likewise.\n+\t(vpadd_u16): Likewise.\n+\t(vpadd_u32): Likewise.\n+\t(vpaddl_s8): Likewise.\n+\t(vpaddl_s16): Likewise.\n+\t(vpaddl_s32): Likewise.\n+\t(vpaddl_u8): Likewise.\n+\t(vpaddl_u16): Likewise.\n+\t(vpaddl_u32): Likewise.\n+\t(vpaddlq_s8): Likewise.\n+\t(vpaddlq_s16): Likewise.\n+\t(vpaddlq_s32): Likewise.\n+\t(vpaddlq_u8): Likewise.\n+\t(vpaddlq_u16): Likewise.\n+\t(vpaddlq_u32): Likewise.\n+\t(vpadal_s8): Likewise.\n+\t(vpadal_s16): Likewise.\n+\t(vpadal_s32): Likewise.\n+\t(vpadal_u8): Likewise.\n+\t(vpadal_u16): Likewise.\n+\t(vpadal_u32): Likewise.\n+\t(vpadalq_s8): Likewise.\n+\t(vpadalq_s16): Likewise.\n+\t(vpadalq_s32): Likewise.\n+\t(vpadalq_u8): Likewise.\n+\t(vpadalq_u16): Likewise.\n+\t(vpadalq_u32): Likewise.\n+\t(vpmax_s8): Likewise.\n+\t(vpmax_s16): Likewise.\n+\t(vpmax_s32): Likewise.\n+\t(vpmax_f32): Likewise.\n+\t(vpmax_u8): Likewise.\n+\t(vpmax_u16): Likewise.\n+\t(vpmax_u32): Likewise.\n+\t(vpmin_s8): Likewise.\n+\t(vpmin_s16): Likewise.\n+\t(vpmin_s32): Likewise.\n+\t(vpmin_f32): Likewise.\n+\t(vpmin_u8): Likewise.\n+\t(vpmin_u16): Likewise.\n+\t(vpmin_u32): Likewise.\n+\t(vrecps_f32): Likewise.\n+\t(vrecpsq_f32): Likewise.\n+\t(vrsqrts_f32): Likewise.\n+\t(vrsqrtsq_f32): Likewise.\n+\t(vshl_s8): Likewise.\n+\t(vshl_s16): Likewise.\n+\t(vshl_s32): Likewise.\n+\t(vshl_s64): Likewise.\n+\t(vshl_u8): Likewise.\n+\t(vshl_u16): Likewise.\n+\t(vshl_u32): Likewise.\n+\t(vshl_u64): Likewise.\n+\t(vshlq_s8): Likewise.\n+\t(vshlq_s16): Likewise.\n+\t(vshlq_s32): Likewise.\n+\t(vshlq_s64): Likewise.\n+\t(vshlq_u8): Likewise.\n+\t(vshlq_u16): Likewise.\n+\t(vshlq_u32): Likewise.\n+\t(vshlq_u64): Likewise.\n+\t(vrshl_s8): Likewise.\n+\t(vrshl_s16): Likewise.\n+\t(vrshl_s32): Likewise.\n+\t(vrshl_s64): Likewise.\n+\t(vrshl_u8): Likewise.\n+\t(vrshl_u16): Likewise.\n+\t(vrshl_u32): Likewise.\n+\t(vrshl_u64): Likewise.\n+\t(vrshlq_s8): Likewise.\n+\t(vrshlq_s16): Likewise.\n+\t(vrshlq_s32): Likewise.\n+\t(vrshlq_s64): Likewise.\n+\t(vrshlq_u8): Likewise.\n+\t(vrshlq_u16): Likewise.\n+\t(vrshlq_u32): Likewise.\n+\t(vrshlq_u64): Likewise.\n+\t(vqshl_s8): Likewise.\n+\t(vqshl_s16): Likewise.\n+\t(vqshl_s32): Likewise.\n+\t(vqshl_s64): Likewise.\n+\t(vqshl_u8): Likewise.\n+\t(vqshl_u16): Likewise.\n+\t(vqshl_u32): Likewise.\n+\t(vqshl_u64): Likewise.\n+\t(vqshlq_s8): Likewise.\n+\t(vqshlq_s16): Likewise.\n+\t(vqshlq_s32): Likewise.\n+\t(vqshlq_s64): Likewise.\n+\t(vqshlq_u8): Likewise.\n+\t(vqshlq_u16): Likewise.\n+\t(vqshlq_u32): Likewise.\n+\t(vqshlq_u64): Likewise.\n+\t(vqrshl_s8): Likewise.\n+\t(vqrshl_s16): Likewise.\n+\t(vqrshl_s32): Likewise.\n+\t(vqrshl_s64): Likewise.\n+\t(vqrshl_u8): Likewise.\n+\t(vqrshl_u16): Likewise.\n+\t(vqrshl_u32): Likewise.\n+\t(vqrshl_u64): Likewise.\n+\t(vqrshlq_s8): Likewise.\n+\t(vqrshlq_s16): Likewise.\n+\t(vqrshlq_s32): Likewise.\n+\t(vqrshlq_s64): Likewise.\n+\t(vqrshlq_u8): Likewise.\n+\t(vqrshlq_u16): Likewise.\n+\t(vqrshlq_u32): Likewise.\n+\t(vqrshlq_u64): Likewise.\n+\t(vshr_n_s8): Likewise.\n+\t(vshr_n_s16): Likewise.\n+\t(vshr_n_s32): Likewise.\n+\t(vshr_n_s64): Likewise.\n+\t(vshr_n_u8): Likewise.\n+\t(vshr_n_u16): Likewise.\n+\t(vshr_n_u32): Likewise.\n+\t(vshr_n_u64): Likewise.\n+\t(vshrq_n_s8): Likewise.\n+\t(vshrq_n_s16): Likewise.\n+\t(vshrq_n_s32): Likewise.\n+\t(vshrq_n_s64): Likewise.\n+\t(vshrq_n_u8): Likewise.\n+\t(vshrq_n_u16): Likewise.\n+\t(vshrq_n_u32): Likewise.\n+\t(vshrq_n_u64): Likewise.\n+\t(vrshr_n_s8): Likewise.\n+\t(vrshr_n_s16): Likewise.\n+\t(vrshr_n_s32): Likewise.\n+\t(vrshr_n_s64): Likewise.\n+\t(vrshr_n_u8): Likewise.\n+\t(vrshr_n_u16): Likewise.\n+\t(vrshr_n_u32): Likewise.\n+\t(vrshr_n_u64): Likewise.\n+\t(vrshrq_n_s8): Likewise.\n+\t(vrshrq_n_s16): Likewise.\n+\t(vrshrq_n_s32): Likewise.\n+\t(vrshrq_n_s64): Likewise.\n+\t(vrshrq_n_u8): Likewise.\n+\t(vrshrq_n_u16): Likewise.\n+\t(vrshrq_n_u32): Likewise.\n+\t(vrshrq_n_u64): Likewise.\n+\t(vshrn_n_s16): Likewise.\n+\t(vshrn_n_s32): Likewise.\n+\t(vshrn_n_s64): Likewise.\n+\t(vshrn_n_u16): Likewise.\n+\t(vshrn_n_u32): Likewise.\n+\t(vshrn_n_u64): Likewise.\n+\t(vrshrn_n_s16): Likewise.\n+\t(vrshrn_n_s32): Likewise.\n+\t(vrshrn_n_s64): Likewise.\n+\t(vrshrn_n_u16): Likewise.\n+\t(vrshrn_n_u32): Likewise.\n+\t(vrshrn_n_u64): Likewise.\n+\t(vqshrn_n_s16): Likewise.\n+\t(vqshrn_n_s32): Likewise.\n+\t(vqshrn_n_s64): Likewise.\n+\t(vqshrn_n_u16): Likewise.\n+\t(vqshrn_n_u32): Likewise.\n+\t(vqshrn_n_u64): Likewise.\n+\t(vqrshrn_n_s16): Likewise.\n+\t(vqrshrn_n_s32): Likewise.\n+\t(vqrshrn_n_s64): Likewise.\n+\t(vqrshrn_n_u16): Likewise.\n+\t(vqrshrn_n_u32): Likewise.\n+\t(vqrshrn_n_u64): Likewise.\n+\t(vqshrun_n_s16): Likewise.\n+\t(vqshrun_n_s32): Likewise.\n+\t(vqshrun_n_s64): Likewise.\n+\t(vqrshrun_n_s16): Likewise.\n+\t(vqrshrun_n_s32): Likewise.\n+\t(vqrshrun_n_s64): Likewise.\n+\t(vshl_n_s8): Likewise.\n+\t(vshl_n_s16): Likewise.\n+\t(vshl_n_s32): Likewise.\n+\t(vshl_n_s64): Likewise.\n+\t(vshl_n_u8): Likewise.\n+\t(vshl_n_u16): Likewise.\n+\t(vshl_n_u32): Likewise.\n+\t(vshl_n_u64): Likewise.\n+\t(vshlq_n_s8): Likewise.\n+\t(vshlq_n_s16): Likewise.\n+\t(vshlq_n_s32): Likewise.\n+\t(vshlq_n_s64): Likewise.\n+\t(vshlq_n_u8): Likewise.\n+\t(vshlq_n_u16): Likewise.\n+\t(vshlq_n_u32): Likewise.\n+\t(vshlq_n_u64): Likewise.\n+\t(vqshl_n_s8): Likewise.\n+\t(vqshl_n_s16): Likewise.\n+\t(vqshl_n_s32): Likewise.\n+\t(vqshl_n_s64): Likewise.\n+\t(vqshl_n_u8): Likewise.\n+\t(vqshl_n_u16): Likewise.\n+\t(vqshl_n_u32): Likewise.\n+\t(vqshl_n_u64): Likewise.\n+\t(vqshlq_n_s8): Likewise.\n+\t(vqshlq_n_s16): Likewise.\n+\t(vqshlq_n_s32): Likewise.\n+\t(vqshlq_n_s64): Likewise.\n+\t(vqshlq_n_u8): Likewise.\n+\t(vqshlq_n_u16): Likewise.\n+\t(vqshlq_n_u32): Likewise.\n+\t(vqshlq_n_u64): Likewise.\n+\t(vqshlu_n_s8): Likewise.\n+\t(vqshlu_n_s16): Likewise.\n+\t(vqshlu_n_s32): Likewise.\n+\t(vqshlu_n_s64): Likewise.\n+\t(vqshluq_n_s8): Likewise.\n+\t(vqshluq_n_s16): Likewise.\n+\t(vqshluq_n_s32): Likewise.\n+\t(vqshluq_n_s64): Likewise.\n+\t(vshll_n_s8): Likewise.\n+\t(vshll_n_s16): Likewise.\n+\t(vshll_n_s32): Likewise.\n+\t(vshll_n_u8): Likewise.\n+\t(vshll_n_u16): Likewise.\n+\t(vshll_n_u32): Likewise.\n+\t(vsra_n_s8): Likewise.\n+\t(vsra_n_s16): Likewise.\n+\t(vsra_n_s32): Likewise.\n+\t(vsra_n_s64): Likewise.\n+\t(vsra_n_u8): Likewise.\n+\t(vsra_n_u16): Likewise.\n+\t(vsra_n_u32): Likewise.\n+\t(vsra_n_u64): Likewise.\n+\t(vsraq_n_s8): Likewise.\n+\t(vsraq_n_s16): Likewise.\n+\t(vsraq_n_s32): Likewise.\n+\t(vsraq_n_s64): Likewise.\n+\t(vsraq_n_u8): Likewise.\n+\t(vsraq_n_u16): Likewise.\n+\t(vsraq_n_u32): Likewise.\n+\t(vsraq_n_u64): Likewise.\n+\t(vrsra_n_s8): Likewise.\n+\t(vrsra_n_s16): Likewise.\n+\t(vrsra_n_s32): Likewise.\n+\t(vrsra_n_s64): Likewise.\n+\t(vrsra_n_u8): Likewise.\n+\t(vrsra_n_u16): Likewise.\n+\t(vrsra_n_u32): Likewise.\n+\t(vrsra_n_u64): Likewise.\n+\t(vrsraq_n_s8): Likewise.\n+\t(vrsraq_n_s16): Likewise.\n+\t(vrsraq_n_s32): Likewise.\n+\t(vrsraq_n_s64): Likewise.\n+\t(vrsraq_n_u8): Likewise.\n+\t(vrsraq_n_u16): Likewise.\n+\t(vrsraq_n_u32): Likewise.\n+\t(vrsraq_n_u64): Likewise.\n+\t(vabs_s8): Likewise.\n+\t(vabs_s16): Likewise.\n+\t(vabs_s32): Likewise.\n+\t(vabs_f32): Likewise.\n+\t(vabsq_s8): Likewise.\n+\t(vabsq_s16): Likewise.\n+\t(vabsq_s32): Likewise.\n+\t(vabsq_f32): Likewise.\n+\t(vqabs_s8): Likewise.\n+\t(vqabs_s16): Likewise.\n+\t(vqabs_s32): Likewise.\n+\t(vqabsq_s8): Likewise.\n+\t(vqabsq_s16): Likewise.\n+\t(vqabsq_s32): Likewise.\n+\t(vneg_s8): Likewise.\n+\t(vneg_s16): Likewise.\n+\t(vneg_s32): Likewise.\n+\t(vneg_f32): Likewise.\n+\t(vnegq_s8): Likewise.\n+\t(vnegq_s16): Likewise.\n+\t(vnegq_s32): Likewise.\n+\t(vnegq_f32): Likewise.\n+\t(vqneg_s8): Likewise.\n+\t(vqneg_s16): Likewise.\n+\t(vqneg_s32): Likewise.\n+\t(vqnegq_s8): Likewise.\n+\t(vqnegq_s16): Likewise.\n+\t(vqnegq_s32): Likewise.\n+\t(vmvn_s8): Likewise.\n+\t(vmvn_s16): Likewise.\n+\t(vmvn_s32): Likewise.\n+\t(vmvn_u8): Likewise.\n+\t(vmvn_u16): Likewise.\n+\t(vmvn_u32): Likewise.\n+\t(vmvn_p8): Likewise.\n+\t(vmvnq_s8): Likewise.\n+\t(vmvnq_s16): Likewise.\n+\t(vmvnq_s32): Likewise.\n+\t(vmvnq_u8): Likewise.\n+\t(vmvnq_u16): Likewise.\n+\t(vmvnq_u32): Likewise.\n+\t(vmvnq_p8): Likewise.\n+\t(vcls_s8): Likewise.\n+\t(vcls_s16): Likewise.\n+\t(vcls_s32): Likewise.\n+\t(vclsq_s8): Likewise.\n+\t(vclsq_s16): Likewise.\n+\t(vclsq_s32): Likewise.\n+\t(vclz_s8): Likewise.\n+\t(vclz_s16): Likewise.\n+\t(vclz_s32): Likewise.\n+\t(vclz_u8): Likewise.\n+\t(vclz_u16): Likewise.\n+\t(vclz_u32): Likewise.\n+\t(vclzq_s8): Likewise.\n+\t(vclzq_s16): Likewise.\n+\t(vclzq_s32): Likewise.\n+\t(vclzq_u8): Likewise.\n+\t(vclzq_u16): Likewise.\n+\t(vclzq_u32): Likewise.\n+\t(vcnt_s8): Likewise.\n+\t(vcnt_u8): Likewise.\n+\t(vcnt_p8): Likewise.\n+\t(vcntq_s8): Likewise.\n+\t(vcntq_u8): Likewise.\n+\t(vcntq_p8): Likewise.\n+\t(vrecpe_f32): Likewise.\n+\t(vrecpe_u32): Likewise.\n+\t(vrecpeq_f32): Likewise.\n+\t(vrecpeq_u32): Likewise.\n+\t(vrsqrte_f32): Likewise.\n+\t(vrsqrte_u32): Likewise.\n+\t(vrsqrteq_f32): Likewise.\n+\t(vrsqrteq_u32): Likewise.\n+\t(vget_lane_s8): Likewise.\n+\t(vget_lane_s16): Likewise.\n+\t(vget_lane_s32): Likewise.\n+\t(vget_lane_f32): Likewise.\n+\t(vget_lane_u8): Likewise.\n+\t(vget_lane_u16): Likewise.\n+\t(vget_lane_u32): Likewise.\n+\t(vget_lane_p8): Likewise.\n+\t(vget_lane_p16): Likewise.\n+\t(vget_lane_s64): Likewise.\n+\t(vget_lane_u64): Likewise.\n+\t(vgetq_lane_s8): Likewise.\n+\t(vgetq_lane_s16): Likewise.\n+\t(vgetq_lane_s32): Likewise.\n+\t(vgetq_lane_f32): Likewise.\n+\t(vgetq_lane_u8): Likewise.\n+\t(vgetq_lane_u16): Likewise.\n+\t(vgetq_lane_u32): Likewise.\n+\t(vgetq_lane_p8): Likewise.\n+\t(vgetq_lane_p16): Likewise.\n+\t(vgetq_lane_s64): Likewise.\n+\t(vgetq_lane_u64): Likewise.\n+\t(vcvt_s32_f32): Likewise.\n+\t(vcvt_f32_s32): Likewise.\n+\t(vcvt_f32_u32): Likewise.\n+\t(vcvt_u32_f32): Likewise.\n+\t(vcvtq_s32_f32): Likewise.\n+\t(vcvtq_f32_s32): Likewise.\n+\t(vcvtq_f32_u32): Likewise.\n+\t(vcvtq_u32_f32): Likewise.\n+\t(vcvt_n_s32_f32): Likewise.\n+\t(vcvt_n_f32_s32): Likewise.\n+\t(vcvt_n_f32_u32): Likewise.\n+\t(vcvt_n_u32_f32): Likewise.\n+\t(vcvtq_n_s32_f32): Likewise.\n+\t(vcvtq_n_f32_s32): Likewise.\n+\t(vcvtq_n_f32_u32): Likewise.\n+\t(vcvtq_n_u32_f32): Likewise.\n+\t(vmovn_s16): Likewise.\n+\t(vmovn_s32): Likewise.\n+\t(vmovn_s64): Likewise.\n+\t(vmovn_u16): Likewise.\n+\t(vmovn_u32): Likewise.\n+\t(vmovn_u64): Likewise.\n+\t(vqmovn_s16): Likewise.\n+\t(vqmovn_s32): Likewise.\n+\t(vqmovn_s64): Likewise.\n+\t(vqmovn_u16): Likewise.\n+\t(vqmovn_u32): Likewise.\n+\t(vqmovn_u64): Likewise.\n+\t(vqmovun_s16): Likewise.\n+\t(vqmovun_s32): Likewise.\n+\t(vqmovun_s64): Likewise.\n+\t(vmovl_s8): Likewise.\n+\t(vmovl_s16): Likewise.\n+\t(vmovl_s32): Likewise.\n+\t(vmovl_u8): Likewise.\n+\t(vmovl_u16): Likewise.\n+\t(vmovl_u32): Likewise.\n+\t(vmul_lane_s16): Likewise.\n+\t(vmul_lane_s32): Likewise.\n+\t(vmul_lane_f32): Likewise.\n+\t(vmul_lane_u16): Likewise.\n+\t(vmul_lane_u32): Likewise.\n+\t(vmulq_lane_s16): Likewise.\n+\t(vmulq_lane_s32): Likewise.\n+\t(vmulq_lane_f32): Likewise.\n+\t(vmulq_lane_u16): Likewise.\n+\t(vmulq_lane_u32): Likewise.\n+\t(vmla_lane_s16): Likewise.\n+\t(vmla_lane_s32): Likewise.\n+\t(vmla_lane_f32): Likewise.\n+\t(vmla_lane_u16): Likewise.\n+\t(vmla_lane_u32): Likewise.\n+\t(vmlaq_lane_s16): Likewise.\n+\t(vmlaq_lane_s32): Likewise.\n+\t(vmlaq_lane_f32): Likewise.\n+\t(vmlaq_lane_u16): Likewise.\n+\t(vmlaq_lane_u32): Likewise.\n+\t(vmlal_lane_s16): Likewise.\n+\t(vmlal_lane_s32): Likewise.\n+\t(vmlal_lane_u16): Likewise.\n+\t(vmlal_lane_u32): Likewise.\n+\t(vqdmlal_lane_s16): Likewise.\n+\t(vqdmlal_lane_s32): Likewise.\n+\t(vmls_lane_s16): Likewise.\n+\t(vmls_lane_s32): Likewise.\n+\t(vmls_lane_f32): Likewise.\n+\t(vmls_lane_u16): Likewise.\n+\t(vmls_lane_u32): Likewise.\n+\t(vmlsq_lane_s16): Likewise.\n+\t(vmlsq_lane_s32): Likewise.\n+\t(vmlsq_lane_f32): Likewise.\n+\t(vmlsq_lane_u16): Likewise.\n+\t(vmlsq_lane_u32): Likewise.\n+\t(vmlsl_lane_s16): Likewise.\n+\t(vmlsl_lane_s32): Likewise.\n+\t(vmlsl_lane_u16): Likewise.\n+\t(vmlsl_lane_u32): Likewise.\n+\t(vqdmlsl_lane_s16): Likewise.\n+\t(vqdmlsl_lane_s32): Likewise.\n+\t(vmull_lane_s16): Likewise.\n+\t(vmull_lane_s32): Likewise.\n+\t(vmull_lane_u16): Likewise.\n+\t(vmull_lane_u32): Likewise.\n+\t(vqdmull_lane_s16): Likewise.\n+\t(vqdmull_lane_s32): Likewise.\n+\t(vqdmulhq_lane_s16): Likewise.\n+\t(vqdmulhq_lane_s32): Likewise.\n+\t(vqdmulh_lane_s16): Likewise.\n+\t(vqdmulh_lane_s32): Likewise.\n+\t(vqrdmulhq_lane_s16): Likewise.\n+\t(vqrdmulhq_lane_s32): Likewise.\n+\t(vqrdmulh_lane_s16): Likewise.\n+\t(vqrdmulh_lane_s32): Likewise.\n+\t(vmul_n_s16): Likewise.\n+\t(vmul_n_s32): Likewise.\n+\t(vmul_n_f32): Likewise.\n+\t(vmul_n_u16): Likewise.\n+\t(vmul_n_u32): Likewise.\n+\t(vmulq_n_s16): Likewise.\n+\t(vmulq_n_s32): Likewise.\n+\t(vmulq_n_f32): Likewise.\n+\t(vmulq_n_u16): Likewise.\n+\t(vmulq_n_u32): Likewise.\n+\t(vmull_n_s16): Likewise.\n+\t(vmull_n_s32): Likewise.\n+\t(vmull_n_u16): Likewise.\n+\t(vmull_n_u32): Likewise.\n+\t(vqdmull_n_s16): Likewise.\n+\t(vqdmull_n_s32): Likewise.\n+\t(vqdmulhq_n_s16): Likewise.\n+\t(vqdmulhq_n_s32): Likewise.\n+\t(vqdmulh_n_s16): Likewise.\n+\t(vqdmulh_n_s32): Likewise.\n+\t(vqrdmulhq_n_s16): Likewise.\n+\t(vqrdmulhq_n_s32): Likewise.\n+\t(vqrdmulh_n_s16): Likewise.\n+\t(vqrdmulh_n_s32): Likewise.\n+\t(vmla_n_s16): Likewise.\n+\t(vmla_n_s32): Likewise.\n+\t(vmla_n_f32): Likewise.\n+\t(vmla_n_u16): Likewise.\n+\t(vmla_n_u32): Likewise.\n+\t(vmlaq_n_s16): Likewise.\n+\t(vmlaq_n_s32): Likewise.\n+\t(vmlaq_n_f32): Likewise.\n+\t(vmlaq_n_u16): Likewise.\n+\t(vmlaq_n_u32): Likewise.\n+\t(vmlal_n_s16): Likewise.\n+\t(vmlal_n_s32): Likewise.\n+\t(vmlal_n_u16): Likewise.\n+\t(vmlal_n_u32): Likewise.\n+\t(vqdmlal_n_s16): Likewise.\n+\t(vqdmlal_n_s32): Likewise.\n+\t(vmls_n_s16): Likewise.\n+\t(vmls_n_s32): Likewise.\n+\t(vmls_n_f32): Likewise.\n+\t(vmls_n_u16): Likewise.\n+\t(vmls_n_u32): Likewise.\n+\t(vmlsq_n_s16): Likewise.\n+\t(vmlsq_n_s32): Likewise.\n+\t(vmlsq_n_f32): Likewise.\n+\t(vmlsq_n_u16): Likewise.\n+\t(vmlsq_n_u32): Likewise.\n+\t(vmlsl_n_s16): Likewise.\n+\t(vmlsl_n_s32): Likewise.\n+\t(vmlsl_n_u16): Likewise.\n+\t(vmlsl_n_u32): Likewise.\n+\t(vqdmlsl_n_s16): Likewise.\n+\t(vqdmlsl_n_s32): Likewise.\n+\n 2014-11-18  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* config/arm/arm.c (arm_new_rtx_costs, case PLUS, MINUS):"}, {"sha": "36ce3877326156101bde809eda8e84debef0cb8c", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 13, "deletions": 16, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94f0f2ccaff7f298a21fb1daa39c720d3cbd73cb/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94f0f2ccaff7f298a21fb1daa39c720d3cbd73cb/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=94f0f2ccaff7f298a21fb1daa39c720d3cbd73cb", "patch": "@@ -25535,29 +25535,26 @@ arm_expand_neon_builtin (int fcode, tree exp, rtx target)\n     case NEON_CONVERT:\n     case NEON_DUPLANE:\n       return arm_expand_neon_args (target, icode, 1, type_mode, exp, fcode,\n-        NEON_ARG_COPY_TO_REG, NEON_ARG_CONSTANT, NEON_ARG_STOP);\n+        NEON_ARG_COPY_TO_REG, NEON_ARG_STOP);\n \n     case NEON_BINOP:\n-    case NEON_SETLANE:\n+    case NEON_LOGICBINOP:\n     case NEON_SCALARMUL:\n     case NEON_SCALARMULL:\n     case NEON_SCALARMULH:\n-    case NEON_SHIFTINSERT:\n-    case NEON_LOGICBINOP:\n       return arm_expand_neon_args (target, icode, 1, type_mode, exp, fcode,\n-        NEON_ARG_COPY_TO_REG, NEON_ARG_COPY_TO_REG, NEON_ARG_CONSTANT,\n-        NEON_ARG_STOP);\n+        NEON_ARG_COPY_TO_REG, NEON_ARG_COPY_TO_REG, NEON_ARG_STOP);\n \n     case NEON_TERNOP:\n       return arm_expand_neon_args (target, icode, 1, type_mode, exp, fcode,\n         NEON_ARG_COPY_TO_REG, NEON_ARG_COPY_TO_REG, NEON_ARG_COPY_TO_REG,\n-        NEON_ARG_CONSTANT, NEON_ARG_STOP);\n+        NEON_ARG_STOP);\n \n     case NEON_GETLANE:\n     case NEON_FIXCONV:\n     case NEON_SHIFTIMM:\n       return arm_expand_neon_args (target, icode, 1, type_mode, exp, fcode,\n-        NEON_ARG_COPY_TO_REG, NEON_ARG_CONSTANT, NEON_ARG_CONSTANT,\n+        NEON_ARG_COPY_TO_REG, NEON_ARG_CONSTANT,\n         NEON_ARG_STOP);\n \n     case NEON_CREATE:\n@@ -25583,24 +25580,26 @@ arm_expand_neon_builtin (int fcode, tree exp, rtx target)\n     case NEON_LANEMUL:\n     case NEON_LANEMULL:\n     case NEON_LANEMULH:\n+    case NEON_SETLANE:\n+    case NEON_SHIFTINSERT:\n       return arm_expand_neon_args (target, icode, 1, type_mode, exp, fcode,\n         NEON_ARG_COPY_TO_REG, NEON_ARG_COPY_TO_REG, NEON_ARG_CONSTANT,\n-        NEON_ARG_CONSTANT, NEON_ARG_STOP);\n+        NEON_ARG_STOP);\n \n     case NEON_LANEMAC:\n       return arm_expand_neon_args (target, icode, 1, type_mode, exp, fcode,\n         NEON_ARG_COPY_TO_REG, NEON_ARG_COPY_TO_REG, NEON_ARG_COPY_TO_REG,\n-        NEON_ARG_CONSTANT, NEON_ARG_CONSTANT, NEON_ARG_STOP);\n+        NEON_ARG_CONSTANT, NEON_ARG_STOP);\n \n     case NEON_SHIFTACC:\n       return arm_expand_neon_args (target, icode, 1, type_mode, exp, fcode,\n         NEON_ARG_COPY_TO_REG, NEON_ARG_COPY_TO_REG, NEON_ARG_CONSTANT,\n-        NEON_ARG_CONSTANT, NEON_ARG_STOP);\n+        NEON_ARG_STOP);\n \n     case NEON_SCALARMAC:\n       return arm_expand_neon_args (target, icode, 1, type_mode, exp, fcode,\n \tNEON_ARG_COPY_TO_REG, NEON_ARG_COPY_TO_REG, NEON_ARG_COPY_TO_REG,\n-        NEON_ARG_CONSTANT, NEON_ARG_STOP);\n+        NEON_ARG_STOP);\n \n     case NEON_SELECT:\n     case NEON_VTBX:\n@@ -31003,7 +31002,7 @@ static bool\n arm_evpc_neon_vrev (struct expand_vec_perm_d *d)\n {\n   unsigned int i, j, diff, nelt = d->nelt;\n-  rtx (*gen)(rtx, rtx, rtx);\n+  rtx (*gen)(rtx, rtx);\n \n   if (!d->one_vector_p)\n     return false;\n@@ -31067,9 +31066,7 @@ arm_evpc_neon_vrev (struct expand_vec_perm_d *d)\n   if (d->testing_p)\n     return true;\n \n-  /* ??? The third operand is an artifact of the builtin infrastructure\n-     and is ignored by the actual instruction.  */\n-  emit_insn (gen (d->target, d->op0, const0_rtx));\n+  emit_insn (gen (d->target, d->op0));\n   return true;\n }\n "}, {"sha": "d27d970a846ae47cef6c9c05e42b47465cb2d37f", "filename": "gcc/config/arm/arm_neon.h", "status": "modified", "additions": 847, "deletions": 847, "changes": 1694, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94f0f2ccaff7f298a21fb1daa39c720d3cbd73cb/gcc%2Fconfig%2Farm%2Farm_neon.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94f0f2ccaff7f298a21fb1daa39c720d3cbd73cb/gcc%2Fconfig%2Farm%2Farm_neon.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm_neon.h?ref=94f0f2ccaff7f298a21fb1daa39c720d3cbd73cb"}, {"sha": "5451524a2001b6257c3d229ff9575348c7c583b8", "filename": "gcc/config/arm/arm_neon_builtins.def", "status": "modified", "additions": 110, "deletions": 41, "changes": 151, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94f0f2ccaff7f298a21fb1daa39c720d3cbd73cb/gcc%2Fconfig%2Farm%2Farm_neon_builtins.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94f0f2ccaff7f298a21fb1daa39c720d3cbd73cb/gcc%2Fconfig%2Farm%2Farm_neon_builtins.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm_neon_builtins.def?ref=94f0f2ccaff7f298a21fb1daa39c720d3cbd73cb", "patch": "@@ -19,46 +19,87 @@\n    <http://www.gnu.org/licenses/>.  */\n \n VAR2 (BINOP, vadd, v2sf, v4sf),\n-VAR3 (BINOP, vaddl, v8qi, v4hi, v2si),\n-VAR3 (BINOP, vaddw, v8qi, v4hi, v2si),\n-VAR6 (BINOP, vhadd, v8qi, v4hi, v2si, v16qi, v8hi, v4si),\n-VAR8 (BINOP, vqadd, v8qi, v4hi, v2si, di, v16qi, v8hi, v4si, v2di),\n+VAR3 (BINOP, vaddls, v8qi, v4hi, v2si),\n+VAR3 (BINOP, vaddlu, v8qi, v4hi, v2si),\n+VAR3 (BINOP, vaddws, v8qi, v4hi, v2si),\n+VAR3 (BINOP, vaddwu, v8qi, v4hi, v2si),\n+VAR6 (BINOP, vhaddu, v8qi, v4hi, v2si, v16qi, v8hi, v4si),\n+VAR6 (BINOP, vhadds, v8qi, v4hi, v2si, v16qi, v8hi, v4si),\n+VAR6 (BINOP, vrhaddu, v8qi, v4hi, v2si, v16qi, v8hi, v4si),\n+VAR6 (BINOP, vrhadds, v8qi, v4hi, v2si, v16qi, v8hi, v4si),\n+VAR8 (BINOP, vqadds, v8qi, v4hi, v2si, di, v16qi, v8hi, v4si, v2di),\n+VAR8 (BINOP, vqaddu, v8qi, v4hi, v2si, di, v16qi, v8hi, v4si, v2di),\n VAR3 (BINOP, vaddhn, v8hi, v4si, v2di),\n-VAR8 (BINOP, vmul, v8qi, v4hi, v2si, v2sf, v16qi, v8hi, v4si, v4sf),\n+VAR3 (BINOP, vraddhn, v8hi, v4si, v2di),\n+VAR2 (BINOP, vmulf, v2sf, v4sf),\n+VAR2 (BINOP, vmulp, v8qi, v16qi),\n VAR8 (TERNOP, vmla, v8qi, v4hi, v2si, v2sf, v16qi, v8hi, v4si, v4sf),\n-VAR3 (TERNOP, vmlal, v8qi, v4hi, v2si),\n+VAR3 (TERNOP, vmlals, v8qi, v4hi, v2si),\n+VAR3 (TERNOP, vmlalu, v8qi, v4hi, v2si),\n VAR2 (TERNOP, vfma, v2sf, v4sf),\n VAR2 (TERNOP, vfms, v2sf, v4sf),\n VAR8 (TERNOP, vmls, v8qi, v4hi, v2si, v2sf, v16qi, v8hi, v4si, v4sf),\n-VAR3 (TERNOP, vmlsl, v8qi, v4hi, v2si),\n+VAR3 (TERNOP, vmlsls, v8qi, v4hi, v2si),\n+VAR3 (TERNOP, vmlslu, v8qi, v4hi, v2si),\n VAR4 (BINOP, vqdmulh, v4hi, v2si, v8hi, v4si),\n+VAR4 (BINOP, vqrdmulh, v4hi, v2si, v8hi, v4si),\n VAR2 (TERNOP, vqdmlal, v4hi, v2si),\n VAR2 (TERNOP, vqdmlsl, v4hi, v2si),\n-VAR3 (BINOP, vmull, v8qi, v4hi, v2si),\n-VAR2 (SCALARMULL, vmull_n, v4hi, v2si),\n-VAR2 (LANEMULL, vmull_lane, v4hi, v2si),\n+VAR3 (BINOP, vmullp, v8qi, v4hi, v2si),\n+VAR3 (BINOP, vmulls, v8qi, v4hi, v2si),\n+VAR3 (BINOP, vmullu, v8qi, v4hi, v2si),\n+VAR2 (SCALARMULL, vmulls_n, v4hi, v2si),\n+VAR2 (SCALARMULL, vmullu_n, v4hi, v2si),\n+VAR2 (LANEMULL, vmulls_lane, v4hi, v2si),\n+VAR2 (LANEMULL, vmullu_lane, v4hi, v2si),\n VAR2 (SCALARMULL, vqdmull_n, v4hi, v2si),\n VAR2 (LANEMULL, vqdmull_lane, v4hi, v2si),\n VAR4 (SCALARMULH, vqdmulh_n, v4hi, v2si, v8hi, v4si),\n+VAR4 (SCALARMULH, vqrdmulh_n, v4hi, v2si, v8hi, v4si),\n VAR4 (LANEMULH, vqdmulh_lane, v4hi, v2si, v8hi, v4si),\n+VAR4 (LANEMULH, vqrdmulh_lane, v4hi, v2si, v8hi, v4si),\n VAR2 (BINOP, vqdmull, v4hi, v2si),\n-VAR8 (BINOP, vshl, v8qi, v4hi, v2si, di, v16qi, v8hi, v4si, v2di),\n-VAR8 (BINOP, vqshl, v8qi, v4hi, v2si, di, v16qi, v8hi, v4si, v2di),\n-VAR8 (SHIFTIMM, vshr_n, v8qi, v4hi, v2si, di, v16qi, v8hi, v4si, v2di),\n+VAR8 (BINOP, vshls, v8qi, v4hi, v2si, di, v16qi, v8hi, v4si, v2di),\n+VAR8 (BINOP, vshlu, v8qi, v4hi, v2si, di, v16qi, v8hi, v4si, v2di),\n+VAR8 (BINOP, vrshls, v8qi, v4hi, v2si, di, v16qi, v8hi, v4si, v2di),\n+VAR8 (BINOP, vrshlu, v8qi, v4hi, v2si, di, v16qi, v8hi, v4si, v2di),\n+VAR8 (BINOP, vqshls, v8qi, v4hi, v2si, di, v16qi, v8hi, v4si, v2di),\n+VAR8 (BINOP, vqshlu, v8qi, v4hi, v2si, di, v16qi, v8hi, v4si, v2di),\n+VAR8 (BINOP, vqrshls, v8qi, v4hi, v2si, di, v16qi, v8hi, v4si, v2di),\n+VAR8 (BINOP, vqrshlu, v8qi, v4hi, v2si, di, v16qi, v8hi, v4si, v2di),\n+VAR8 (SHIFTIMM, vshrs_n, v8qi, v4hi, v2si, di, v16qi, v8hi, v4si, v2di),\n+VAR8 (SHIFTIMM, vshru_n, v8qi, v4hi, v2si, di, v16qi, v8hi, v4si, v2di),\n+VAR8 (SHIFTIMM, vrshrs_n, v8qi, v4hi, v2si, di, v16qi, v8hi, v4si, v2di),\n+VAR8 (SHIFTIMM, vrshru_n, v8qi, v4hi, v2si, di, v16qi, v8hi, v4si, v2di),\n VAR3 (SHIFTIMM, vshrn_n, v8hi, v4si, v2di),\n-VAR3 (SHIFTIMM, vqshrn_n, v8hi, v4si, v2di),\n+VAR3 (SHIFTIMM, vrshrn_n, v8hi, v4si, v2di),\n+VAR3 (SHIFTIMM, vqshrns_n, v8hi, v4si, v2di),\n+VAR3 (SHIFTIMM, vqshrnu_n, v8hi, v4si, v2di),\n+VAR3 (SHIFTIMM, vqrshrns_n, v8hi, v4si, v2di),\n+VAR3 (SHIFTIMM, vqrshrnu_n, v8hi, v4si, v2di),\n VAR3 (SHIFTIMM, vqshrun_n, v8hi, v4si, v2di),\n+VAR3 (SHIFTIMM, vqrshrun_n, v8hi, v4si, v2di),\n VAR8 (SHIFTIMM, vshl_n, v8qi, v4hi, v2si, di, v16qi, v8hi, v4si, v2di),\n-VAR8 (SHIFTIMM, vqshl_n, v8qi, v4hi, v2si, di, v16qi, v8hi, v4si, v2di),\n+VAR8 (SHIFTIMM, vqshl_s_n, v8qi, v4hi, v2si, di, v16qi, v8hi, v4si, v2di),\n+VAR8 (SHIFTIMM, vqshl_u_n, v8qi, v4hi, v2si, di, v16qi, v8hi, v4si, v2di),\n VAR8 (SHIFTIMM, vqshlu_n, v8qi, v4hi, v2si, di, v16qi, v8hi, v4si, v2di),\n-VAR3 (SHIFTIMM, vshll_n, v8qi, v4hi, v2si),\n-VAR8 (SHIFTACC, vsra_n, v8qi, v4hi, v2si, di, v16qi, v8hi, v4si, v2di),\n+VAR3 (SHIFTIMM, vshlls_n, v8qi, v4hi, v2si),\n+VAR3 (SHIFTIMM, vshllu_n, v8qi, v4hi, v2si),\n+VAR8 (SHIFTACC, vsras_n, v8qi, v4hi, v2si, di, v16qi, v8hi, v4si, v2di),\n+VAR8 (SHIFTACC, vsrau_n, v8qi, v4hi, v2si, di, v16qi, v8hi, v4si, v2di),\n+VAR8 (SHIFTACC, vrsras_n, v8qi, v4hi, v2si, di, v16qi, v8hi, v4si, v2di),\n+VAR8 (SHIFTACC, vrsrau_n, v8qi, v4hi, v2si, di, v16qi, v8hi, v4si, v2di),\n VAR2 (BINOP, vsub, v2sf, v4sf),\n-VAR3 (BINOP, vsubl, v8qi, v4hi, v2si),\n-VAR3 (BINOP, vsubw, v8qi, v4hi, v2si),\n-VAR8 (BINOP, vqsub, v8qi, v4hi, v2si, di, v16qi, v8hi, v4si, v2di),\n-VAR6 (BINOP, vhsub, v8qi, v4hi, v2si, v16qi, v8hi, v4si),\n+VAR3 (BINOP, vsubls, v8qi, v4hi, v2si),\n+VAR3 (BINOP, vsublu, v8qi, v4hi, v2si),\n+VAR3 (BINOP, vsubws, v8qi, v4hi, v2si),\n+VAR3 (BINOP, vsubwu, v8qi, v4hi, v2si),\n+VAR8 (BINOP, vqsubs, v8qi, v4hi, v2si, di, v16qi, v8hi, v4si, v2di),\n+VAR8 (BINOP, vqsubu, v8qi, v4hi, v2si, di, v16qi, v8hi, v4si, v2di),\n+VAR6 (BINOP, vhsubs, v8qi, v4hi, v2si, v16qi, v8hi, v4si),\n+VAR6 (BINOP, vhsubu, v8qi, v4hi, v2si, v16qi, v8hi, v4si),\n VAR3 (BINOP, vsubhn, v8hi, v4si, v2di),\n+VAR3 (BINOP, vrsubhn, v8hi, v4si, v2di),\n VAR8 (BINOP, vceq, v8qi, v4hi, v2si, v2sf, v16qi, v8hi, v4si, v4sf),\n VAR8 (BINOP, vcge, v8qi, v4hi, v2si, v2sf, v16qi, v8hi, v4si, v4sf),\n VAR6 (BINOP, vcgeu, v8qi, v4hi, v2si, v16qi, v8hi, v4si),\n@@ -67,17 +108,36 @@ VAR6 (BINOP, vcgtu, v8qi, v4hi, v2si, v16qi, v8hi, v4si),\n VAR2 (BINOP, vcage, v2sf, v4sf),\n VAR2 (BINOP, vcagt, v2sf, v4sf),\n VAR6 (BINOP, vtst, v8qi, v4hi, v2si, v16qi, v8hi, v4si),\n-VAR8 (BINOP, vabd, v8qi, v4hi, v2si, v2sf, v16qi, v8hi, v4si, v4sf),\n-VAR3 (BINOP, vabdl, v8qi, v4hi, v2si),\n-VAR6 (TERNOP, vaba, v8qi, v4hi, v2si, v16qi, v8hi, v4si),\n-VAR3 (TERNOP, vabal, v8qi, v4hi, v2si),\n-VAR8 (BINOP, vmax, v8qi, v4hi, v2si, v2sf, v16qi, v8hi, v4si, v4sf),\n-VAR8 (BINOP, vmin, v8qi, v4hi, v2si, v2sf, v16qi, v8hi, v4si, v4sf),\n+VAR6 (BINOP, vabds, v8qi, v4hi, v2si, v16qi, v8hi, v4si),\n+VAR6 (BINOP, vabdu, v8qi, v4hi, v2si, v16qi, v8hi, v4si),\n+VAR2 (BINOP, vabdf, v2sf, v4sf),\n+VAR3 (BINOP, vabdls, v8qi, v4hi, v2si),\n+VAR3 (BINOP, vabdlu, v8qi, v4hi, v2si),\n+\n+VAR6 (TERNOP, vabas, v8qi, v4hi, v2si, v16qi, v8hi, v4si),\n+VAR6 (TERNOP, vabau, v8qi, v4hi, v2si, v16qi, v8hi, v4si),\n+VAR3 (TERNOP, vabals, v8qi, v4hi, v2si),\n+VAR3 (TERNOP, vabalu, v8qi, v4hi, v2si),\n+\n+VAR6 (BINOP, vmaxs, v8qi, v4hi, v2si, v16qi, v8hi, v4si),\n+VAR6 (BINOP, vmaxu, v8qi, v4hi, v2si, v16qi, v8hi, v4si),\n+VAR2 (BINOP, vmaxf, v2sf, v4sf),\n+VAR6 (BINOP, vmins, v8qi, v4hi, v2si, v16qi, v8hi, v4si),\n+VAR6 (BINOP, vminu, v8qi, v4hi, v2si, v16qi, v8hi, v4si),\n+VAR2 (BINOP, vminf, v2sf, v4sf),\n+\n+VAR3 (BINOP, vpmaxs, v8qi, v4hi, v2si),\n+VAR3 (BINOP, vpmaxu, v8qi, v4hi, v2si),\n+VAR1 (BINOP, vpmaxf, v2sf),\n+VAR3 (BINOP, vpmins, v8qi, v4hi, v2si),\n+VAR3 (BINOP, vpminu, v8qi, v4hi, v2si),\n+VAR1 (BINOP, vpminf, v2sf),\n+\n VAR4 (BINOP, vpadd, v8qi, v4hi, v2si, v2sf),\n-VAR6 (UNOP, vpaddl, v8qi, v4hi, v2si, v16qi, v8hi, v4si),\n-VAR6 (BINOP, vpadal, v8qi, v4hi, v2si, v16qi, v8hi, v4si),\n-VAR4 (BINOP, vpmax, v8qi, v4hi, v2si, v2sf),\n-VAR4 (BINOP, vpmin, v8qi, v4hi, v2si, v2sf),\n+VAR6 (UNOP, vpaddls, v8qi, v4hi, v2si, v16qi, v8hi, v4si),\n+VAR6 (UNOP, vpaddlu, v8qi, v4hi, v2si, v16qi, v8hi, v4si),\n+VAR6 (BINOP, vpadals, v8qi, v4hi, v2si, v16qi, v8hi, v4si),\n+VAR6 (BINOP, vpadalu, v8qi, v4hi, v2si, v16qi, v8hi, v4si),\n VAR2 (BINOP, vrecps, v2sf, v4sf),\n VAR2 (BINOP, vrsqrts, v2sf, v4sf),\n VAR8 (SHIFTINSERT, vsri_n, v8qi, v4hi, v2si, di, v16qi, v8hi, v4si, v2di),\n@@ -96,41 +156,50 @@ VAR6 (UNOP, vmvn, v8qi, v4hi, v2si, v16qi, v8hi, v4si),\n   /* FIXME: vget_lane supports more variants than this!  */\n VAR10 (GETLANE, vget_lane,\n \t v8qi, v4hi, v2si, v2sf, di, v16qi, v8hi, v4si, v4sf, v2di),\n+VAR6 (GETLANE, vget_laneu, v8qi, v4hi, v2si, v16qi, v8hi, v4si),\n VAR10 (SETLANE, vset_lane,\n \t v8qi, v4hi, v2si, v2sf, di, v16qi, v8hi, v4si, v4sf, v2di),\n VAR5 (CREATE, vcreate, v8qi, v4hi, v2si, v2sf, di),\n VAR10 (DUP, vdup_n,\n \t v8qi, v4hi, v2si, v2sf, di, v16qi, v8hi, v4si, v4sf, v2di),\n-VAR10 (DUPLANE, vdup_lane,\n+VAR10 (BINOP, vdup_lane,\n \t v8qi, v4hi, v2si, v2sf, di, v16qi, v8hi, v4si, v4sf, v2di),\n VAR5 (COMBINE, vcombine, v8qi, v4hi, v2si, v2sf, di),\n VAR5 (SPLIT, vget_high, v16qi, v8hi, v4si, v4sf, v2di),\n VAR5 (SPLIT, vget_low, v16qi, v8hi, v4si, v4sf, v2di),\n VAR3 (UNOP, vmovn, v8hi, v4si, v2di),\n-VAR3 (UNOP, vqmovn, v8hi, v4si, v2di),\n+VAR3 (UNOP, vqmovns, v8hi, v4si, v2di),\n+VAR3 (UNOP, vqmovnu, v8hi, v4si, v2di),\n VAR3 (UNOP, vqmovun, v8hi, v4si, v2di),\n-VAR3 (UNOP, vmovl, v8qi, v4hi, v2si),\n+VAR3 (UNOP, vmovls, v8qi, v4hi, v2si),\n+VAR3 (UNOP, vmovlu, v8qi, v4hi, v2si),\n VAR6 (LANEMUL, vmul_lane, v4hi, v2si, v2sf, v8hi, v4si, v4sf),\n VAR6 (LANEMAC, vmla_lane, v4hi, v2si, v2sf, v8hi, v4si, v4sf),\n-VAR2 (LANEMAC, vmlal_lane, v4hi, v2si),\n+VAR2 (LANEMAC, vmlals_lane, v4hi, v2si),\n+VAR2 (LANEMAC, vmlalu_lane, v4hi, v2si),\n VAR2 (LANEMAC, vqdmlal_lane, v4hi, v2si),\n VAR6 (LANEMAC, vmls_lane, v4hi, v2si, v2sf, v8hi, v4si, v4sf),\n-VAR2 (LANEMAC, vmlsl_lane, v4hi, v2si),\n+VAR2 (LANEMAC, vmlsls_lane, v4hi, v2si),\n+VAR2 (LANEMAC, vmlslu_lane, v4hi, v2si),\n VAR2 (LANEMAC, vqdmlsl_lane, v4hi, v2si),\n VAR6 (SCALARMUL, vmul_n, v4hi, v2si, v2sf, v8hi, v4si, v4sf),\n VAR6 (SCALARMAC, vmla_n, v4hi, v2si, v2sf, v8hi, v4si, v4sf),\n-VAR2 (SCALARMAC, vmlal_n, v4hi, v2si),\n+VAR2 (SCALARMAC, vmlals_n, v4hi, v2si),\n+VAR2 (SCALARMAC, vmlalu_n, v4hi, v2si),\n VAR2 (SCALARMAC, vqdmlal_n, v4hi, v2si),\n VAR6 (SCALARMAC, vmls_n, v4hi, v2si, v2sf, v8hi, v4si, v4sf),\n-VAR2 (SCALARMAC, vmlsl_n, v4hi, v2si),\n+VAR2 (SCALARMAC, vmlsls_n, v4hi, v2si),\n+VAR2 (SCALARMAC, vmlslu_n, v4hi, v2si),\n VAR2 (SCALARMAC, vqdmlsl_n, v4hi, v2si),\n-VAR10 (BINOP, vext,\n+VAR10 (SHIFTINSERT, vext,\n \t v8qi, v4hi, v2si, v2sf, di, v16qi, v8hi, v4si, v4sf, v2di),\n VAR8 (UNOP, vrev64, v8qi, v4hi, v2si, v2sf, v16qi, v8hi, v4si, v4sf),\n VAR4 (UNOP, vrev32, v8qi, v4hi, v16qi, v8hi),\n VAR2 (UNOP, vrev16, v8qi, v16qi),\n-VAR4 (CONVERT, vcvt, v2si, v2sf, v4si, v4sf),\n-VAR4 (FIXCONV, vcvt_n, v2si, v2sf, v4si, v4sf),\n+VAR4 (CONVERT, vcvts, v2si, v2sf, v4si, v4sf),\n+VAR4 (CONVERT, vcvtu, v2si, v2sf, v4si, v4sf),\n+VAR4 (FIXCONV, vcvts_n, v2si, v2sf, v4si, v4sf),\n+VAR4 (FIXCONV, vcvtu_n, v2si, v2sf, v4si, v4sf),\n VAR1 (FLOAT_WIDEN, vcvtv4sf, v4hf),\n VAR1 (FLOAT_NARROW, vcvtv4hf, v4sf),\n VAR10 (SELECT, vbsl,"}, {"sha": "bf0329a3c0f28e4282fbb5922f71816342cd60d9", "filename": "gcc/config/arm/iterators.md", "status": "modified", "additions": 167, "deletions": 0, "changes": 167, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94f0f2ccaff7f298a21fb1daa39c720d3cbd73cb/gcc%2Fconfig%2Farm%2Fiterators.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94f0f2ccaff7f298a21fb1daa39c720d3cbd73cb/gcc%2Fconfig%2Farm%2Fiterators.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fiterators.md?ref=94f0f2ccaff7f298a21fb1daa39c720d3cbd73cb", "patch": "@@ -169,6 +169,9 @@\n \n (define_mode_iterator QMUL [HQ HA])\n \n+;; Modes for polynomial or float values.\n+(define_mode_iterator VPF [V8QI V16QI V2SF V4SF])\n+\n ;;----------------------------------------------------------------------------\n ;; Code iterators\n ;;----------------------------------------------------------------------------\n@@ -225,6 +228,92 @@\n \n (define_int_iterator NEON_VCVT [UNSPEC_NVRINTP UNSPEC_NVRINTM UNSPEC_NVRINTA])\n \n+(define_int_iterator VADDL [UNSPEC_VADDL_S UNSPEC_VADDL_U])\n+\n+(define_int_iterator VADDW [UNSPEC_VADDW_S UNSPEC_VADDW_U])\n+\n+(define_int_iterator VHADD [UNSPEC_VRHADD_S UNSPEC_VRHADD_U\n+\t\t\t    UNSPEC_VHADD_S UNSPEC_VHADD_U])\n+\n+(define_int_iterator VQADD [UNSPEC_VQADD_S UNSPEC_VQADD_U])\n+\n+(define_int_iterator VADDHN [UNSPEC_VADDHN UNSPEC_VRADDHN])\n+\n+(define_int_iterator VMLAL [UNSPEC_VMLAL_S UNSPEC_VMLAL_U])\n+\n+(define_int_iterator VMLAL_LANE [UNSPEC_VMLAL_S_LANE UNSPEC_VMLAL_U_LANE])\n+\n+(define_int_iterator VMLSL [UNSPEC_VMLSL_S UNSPEC_VMLSL_U])\n+\n+(define_int_iterator VMLSL_LANE [UNSPEC_VMLSL_S_LANE UNSPEC_VMLSL_U_LANE])\n+\n+(define_int_iterator VQDMULH [UNSPEC_VQDMULH UNSPEC_VQRDMULH])\n+\n+(define_int_iterator VQDMULH_LANE [UNSPEC_VQDMULH_LANE UNSPEC_VQRDMULH_LANE])\n+\n+(define_int_iterator VMULL [UNSPEC_VMULL_S UNSPEC_VMULL_U UNSPEC_VMULL_P])\n+\n+(define_int_iterator VMULL_LANE [UNSPEC_VMULL_S_LANE UNSPEC_VMULL_U_LANE])\n+\n+(define_int_iterator VSUBL [UNSPEC_VSUBL_S UNSPEC_VSUBL_U])\n+\n+(define_int_iterator VSUBW [UNSPEC_VSUBW_S UNSPEC_VSUBW_U])\n+\n+(define_int_iterator VHSUB [UNSPEC_VHSUB_S UNSPEC_VHSUB_U])\n+\n+(define_int_iterator VQSUB [UNSPEC_VQSUB_S UNSPEC_VQSUB_U])\n+\n+(define_int_iterator VSUBHN [UNSPEC_VSUBHN UNSPEC_VRSUBHN])\n+\n+(define_int_iterator VABD [UNSPEC_VABD_S UNSPEC_VABD_U])\n+\n+(define_int_iterator VABDL [UNSPEC_VABDL_S UNSPEC_VABDL_U])\n+\n+(define_int_iterator VMAXMIN [UNSPEC_VMAX UNSPEC_VMAX_U\n+\t\t\t      UNSPEC_VMIN UNSPEC_VMIN_U])\n+\n+(define_int_iterator VMAXMINF [UNSPEC_VMAX UNSPEC_VMIN])\n+\n+(define_int_iterator VPADDL [UNSPEC_VPADDL_S UNSPEC_VPADDL_U])\n+\n+(define_int_iterator VPADAL [UNSPEC_VPADAL_S UNSPEC_VPADAL_U])\n+\n+(define_int_iterator VPMAXMIN [UNSPEC_VPMAX UNSPEC_VPMAX_U\n+\t\t\t       UNSPEC_VPMIN UNSPEC_VPMIN_U])\n+\n+(define_int_iterator VPMAXMINF [UNSPEC_VPMAX UNSPEC_VPMIN])\n+\n+(define_int_iterator VCVT_US [UNSPEC_VCVT_S UNSPEC_VCVT_U])\n+\n+(define_int_iterator VCVT_US_N [UNSPEC_VCVT_S_N UNSPEC_VCVT_U_N])\n+\n+(define_int_iterator VQMOVN [UNSPEC_VQMOVN_S UNSPEC_VQMOVN_U])\n+\n+(define_int_iterator VMOVL [UNSPEC_VMOVL_S UNSPEC_VMOVL_U])\n+\n+(define_int_iterator VSHL [UNSPEC_VSHL_S UNSPEC_VSHL_U\n+\t\t\t   UNSPEC_VRSHL_S UNSPEC_VRSHL_U])\n+\n+(define_int_iterator VQSHL [UNSPEC_VQSHL_S UNSPEC_VQSHL_U\n+\t\t\t    UNSPEC_VQRSHL_S UNSPEC_VQRSHL_U])\n+\n+(define_int_iterator VSHR_N [UNSPEC_VSHR_S_N UNSPEC_VSHR_U_N\n+\t\t\t     UNSPEC_VRSHR_S_N UNSPEC_VRSHR_U_N])\n+\n+(define_int_iterator VSHRN_N [UNSPEC_VSHRN_N UNSPEC_VRSHRN_N])\n+\n+(define_int_iterator VQSHRN_N [UNSPEC_VQSHRN_S_N UNSPEC_VQSHRN_U_N\n+\t\t\t       UNSPEC_VQRSHRN_S_N UNSPEC_VQRSHRN_U_N])\n+\n+(define_int_iterator VQSHRUN_N [UNSPEC_VQSHRUN_N UNSPEC_VQRSHRUN_N])\n+\n+(define_int_iterator VQSHL_N [UNSPEC_VQSHL_S_N UNSPEC_VQSHL_U_N])\n+\n+(define_int_iterator VSHLL_N [UNSPEC_VSHLL_S_N UNSPEC_VSHLL_U_N])\n+\n+(define_int_iterator VSRA_N [UNSPEC_VSRA_S_N UNSPEC_VSRA_U_N\n+\t\t\t     UNSPEC_VRSRA_S_N UNSPEC_VRSRA_U_N])\n+\n (define_int_iterator CRC [UNSPEC_CRC32B UNSPEC_CRC32H UNSPEC_CRC32W\n                           UNSPEC_CRC32CB UNSPEC_CRC32CH UNSPEC_CRC32CW])\n \n@@ -504,6 +593,8 @@\n                      (DI \"\")   (V2DI \"_q\")\n                      (DF \"\")   (V2DF \"_q\")])\n \n+(define_mode_attr pf [(V8QI \"p\") (V16QI \"p\") (V2SF \"f\") (V4SF \"f\")])\n+\n ;;----------------------------------------------------------------------------\n ;; Code attributes\n ;;----------------------------------------------------------------------------\n@@ -541,6 +632,82 @@\n ;; Int attributes\n ;;----------------------------------------------------------------------------\n \n+;; Mapping between vector UNSPEC operations and the signed ('s'),\n+;; unsigned ('u'), poly ('p') or float ('f') nature of their data type.\n+(define_int_attr sup [\n+  (UNSPEC_VADDL_S \"s\") (UNSPEC_VADDL_U \"u\")\n+  (UNSPEC_VADDW_S \"s\") (UNSPEC_VADDW_U \"u\")\n+  (UNSPEC_VRHADD_S \"s\") (UNSPEC_VRHADD_U \"u\")\n+  (UNSPEC_VHADD_S \"s\") (UNSPEC_VHADD_U \"u\")\n+  (UNSPEC_VQADD_S \"s\") (UNSPEC_VQADD_U \"u\")\n+  (UNSPEC_VMLAL_S \"s\") (UNSPEC_VMLAL_U \"u\")\n+  (UNSPEC_VMLAL_S_LANE \"s\") (UNSPEC_VMLAL_U_LANE \"u\")\n+  (UNSPEC_VMLSL_S \"s\") (UNSPEC_VMLSL_U \"u\")\n+  (UNSPEC_VMLSL_S_LANE \"s\") (UNSPEC_VMLSL_U_LANE \"u\")\n+  (UNSPEC_VMULL_S \"s\") (UNSPEC_VMULL_U \"u\") (UNSPEC_VMULL_P \"p\")\n+  (UNSPEC_VMULL_S_LANE \"s\") (UNSPEC_VMULL_U_LANE \"u\")\n+  (UNSPEC_VSUBL_S \"s\") (UNSPEC_VSUBL_U \"u\")\n+  (UNSPEC_VSUBW_S \"s\") (UNSPEC_VSUBW_U \"u\")\n+  (UNSPEC_VHSUB_S \"s\") (UNSPEC_VHSUB_U \"u\")\n+  (UNSPEC_VQSUB_S \"s\") (UNSPEC_VQSUB_U \"u\")\n+  (UNSPEC_VABD_S \"s\") (UNSPEC_VABD_U \"u\")\n+  (UNSPEC_VABDL_S \"s\") (UNSPEC_VABDL_U \"u\")\n+  (UNSPEC_VMAX \"s\") (UNSPEC_VMAX_U \"u\")\n+  (UNSPEC_VMIN \"s\") (UNSPEC_VMIN_U \"u\")\n+  (UNSPEC_VPADDL_S \"s\") (UNSPEC_VPADDL_U \"u\")\n+  (UNSPEC_VPADAL_S \"s\") (UNSPEC_VPADAL_U \"u\")\n+  (UNSPEC_VPMAX \"s\") (UNSPEC_VPMAX_U \"u\")\n+  (UNSPEC_VPMIN \"s\") (UNSPEC_VPMIN_U \"u\")\n+  (UNSPEC_VCVT_S \"s\") (UNSPEC_VCVT_U \"u\")\n+  (UNSPEC_VCVT_S_N \"s\") (UNSPEC_VCVT_U_N \"u\")\n+  (UNSPEC_VQMOVN_S \"s\") (UNSPEC_VQMOVN_U \"u\")\n+  (UNSPEC_VMOVL_S \"s\") (UNSPEC_VMOVL_U \"u\")\n+  (UNSPEC_VSHL_S \"s\") (UNSPEC_VSHL_U \"u\")\n+  (UNSPEC_VRSHL_S \"s\") (UNSPEC_VRSHL_U \"u\")\n+  (UNSPEC_VQSHL_S \"s\") (UNSPEC_VQSHL_U \"u\")\n+  (UNSPEC_VQRSHL_S \"s\") (UNSPEC_VQRSHL_U \"u\")\n+  (UNSPEC_VSHR_S_N \"s\") (UNSPEC_VSHR_U_N \"u\")\n+  (UNSPEC_VRSHR_S_N \"s\") (UNSPEC_VRSHR_U_N \"u\")\n+  (UNSPEC_VQSHRN_S_N \"s\") (UNSPEC_VQSHRN_U_N \"u\")\n+  (UNSPEC_VQRSHRN_S_N \"s\") (UNSPEC_VQRSHRN_U_N \"u\")\n+  (UNSPEC_VQSHL_S_N \"s\") (UNSPEC_VQSHL_U_N \"u\")\n+  (UNSPEC_VSHLL_S_N \"s\") (UNSPEC_VSHLL_U_N \"u\")\n+  (UNSPEC_VSRA_S_N \"s\") (UNSPEC_VSRA_U_N \"u\")\n+  (UNSPEC_VRSRA_S_N \"s\") (UNSPEC_VRSRA_U_N \"u\")\n+\n+])\n+\n+(define_int_attr r [\n+  (UNSPEC_VRHADD_S \"r\") (UNSPEC_VRHADD_U \"r\")\n+  (UNSPEC_VHADD_S \"\") (UNSPEC_VHADD_U \"\")\n+  (UNSPEC_VADDHN \"\") (UNSPEC_VRADDHN \"r\")\n+  (UNSPEC_VQDMULH \"\") (UNSPEC_VQRDMULH \"r\")\n+  (UNSPEC_VQDMULH_LANE \"\") (UNSPEC_VQRDMULH_LANE \"r\")\n+  (UNSPEC_VSUBHN \"\") (UNSPEC_VRSUBHN \"r\")\n+])\n+\n+(define_int_attr maxmin [\n+  (UNSPEC_VMAX \"max\") (UNSPEC_VMAX_U \"max\")\n+  (UNSPEC_VMIN \"min\") (UNSPEC_VMIN_U \"min\")\n+  (UNSPEC_VPMAX \"max\") (UNSPEC_VPMAX_U \"max\")\n+  (UNSPEC_VPMIN \"min\") (UNSPEC_VPMIN_U \"min\")\n+])\n+\n+(define_int_attr shift_op [\n+  (UNSPEC_VSHL_S \"shl\") (UNSPEC_VSHL_U \"shl\")\n+  (UNSPEC_VRSHL_S \"rshl\") (UNSPEC_VRSHL_U \"rshl\")\n+  (UNSPEC_VQSHL_S \"qshl\") (UNSPEC_VQSHL_U \"qshl\")\n+  (UNSPEC_VQRSHL_S \"qrshl\") (UNSPEC_VQRSHL_U \"qrshl\")\n+  (UNSPEC_VSHR_S_N \"shr\") (UNSPEC_VSHR_U_N \"shr\")\n+  (UNSPEC_VRSHR_S_N \"rshr\") (UNSPEC_VRSHR_U_N \"rshr\")\n+  (UNSPEC_VSHRN_N \"shrn\") (UNSPEC_VRSHRN_N \"rshrn\")\n+  (UNSPEC_VQRSHRN_S_N \"qrshrn\") (UNSPEC_VQRSHRN_U_N \"qrshrn\")\n+  (UNSPEC_VQSHRN_S_N \"qshrn\") (UNSPEC_VQSHRN_U_N \"qshrn\")\n+  (UNSPEC_VQSHRUN_N \"qshrun\") (UNSPEC_VQRSHRUN_N \"qrshrun\")\n+  (UNSPEC_VSRA_S_N \"sra\") (UNSPEC_VSRA_U_N \"sra\")\n+  (UNSPEC_VRSRA_S_N \"rsra\") (UNSPEC_VRSRA_U_N \"rsra\")\n+])\n+\n ;; Standard names for floating point to integral rounding instructions.\n (define_int_attr vrint_pattern [(UNSPEC_VRINTZ \"btrunc\") (UNSPEC_VRINTP \"ceil\")\n                          (UNSPEC_VRINTA \"round\") (UNSPEC_VRINTM \"floor\")"}, {"sha": "22318de6d7b1a951117909460afdd38c05cf7442", "filename": "gcc/config/arm/neon.md", "status": "modified", "additions": 428, "deletions": 465, "changes": 893, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94f0f2ccaff7f298a21fb1daa39c720d3cbd73cb/gcc%2Fconfig%2Farm%2Fneon.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94f0f2ccaff7f298a21fb1daa39c720d3cbd73cb/gcc%2Fconfig%2Farm%2Fneon.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fneon.md?ref=94f0f2ccaff7f298a21fb1daa39c720d3cbd73cb", "patch": "@@ -1627,17 +1627,14 @@\n \t  (match_operand:VDQW 2 \"s_register_operand\" \"\")))]\n   \"TARGET_NEON && (!<Is_float_mode> || flag_unsafe_math_optimizations)\"\n {\n-  HOST_WIDE_INT magic_word = (<MODE>mode == V2SFmode || <MODE>mode == V4SFmode)\n-\t\t\t     ? 3 : 1;\n-  rtx magic_rtx = GEN_INT (magic_word);\n   int inverse = 0;\n   int use_zero_form = 0;\n   int swap_bsl_operands = 0;\n   rtx mask = gen_reg_rtx (<V_cmp_result>mode);\n   rtx tmp = gen_reg_rtx (<V_cmp_result>mode);\n \n-  rtx (*base_comparison) (rtx, rtx, rtx, rtx);\n-  rtx (*complimentary_comparison) (rtx, rtx, rtx, rtx);\n+  rtx (*base_comparison) (rtx, rtx, rtx);\n+  rtx (*complimentary_comparison) (rtx, rtx, rtx);\n \n   switch (GET_CODE (operands[3]))\n     {\n@@ -1724,9 +1721,9 @@\n \t}\n \n       if (!inverse)\n-\temit_insn (base_comparison (mask, operands[4], operands[5], magic_rtx));\n+\temit_insn (base_comparison (mask, operands[4], operands[5]));\n       else\n-\temit_insn (complimentary_comparison (mask, operands[5], operands[4], magic_rtx));\n+\temit_insn (complimentary_comparison (mask, operands[5], operands[4]));\n       break;\n     case UNLT:\n     case UNLE:\n@@ -1746,9 +1743,9 @@\n \t a NE b -> !(a EQ b)  */\n \n       if (inverse)\n-\temit_insn (base_comparison (mask, operands[4], operands[5], magic_rtx));\n+\temit_insn (base_comparison (mask, operands[4], operands[5]));\n       else\n-\temit_insn (complimentary_comparison (mask, operands[5], operands[4], magic_rtx));\n+\temit_insn (complimentary_comparison (mask, operands[5], operands[4]));\n \n       swap_bsl_operands = 1;\n       break;\n@@ -1757,8 +1754,8 @@\n \t true iff !(a != b && a ORDERED b), swapping the operands to BSL\n \t will then give us (a == b ||  a UNORDERED b) as intended.  */\n \n-      emit_insn (gen_neon_vcgt<mode> (mask, operands[4], operands[5], magic_rtx));\n-      emit_insn (gen_neon_vcgt<mode> (tmp, operands[5], operands[4], magic_rtx));\n+      emit_insn (gen_neon_vcgt<mode> (mask, operands[4], operands[5]));\n+      emit_insn (gen_neon_vcgt<mode> (tmp, operands[5], operands[4]));\n       emit_insn (gen_ior<v_cmp_result>3 (mask, mask, tmp));\n       swap_bsl_operands = 1;\n       break;\n@@ -1768,8 +1765,8 @@\n      swap_bsl_operands = 1;\n      /* Fall through.  */\n     case ORDERED:\n-      emit_insn (gen_neon_vcgt<mode> (tmp, operands[4], operands[5], magic_rtx));\n-      emit_insn (gen_neon_vcge<mode> (mask, operands[5], operands[4], magic_rtx));\n+      emit_insn (gen_neon_vcgt<mode> (tmp, operands[4], operands[5]));\n+      emit_insn (gen_neon_vcge<mode> (mask, operands[5], operands[4]));\n       emit_insn (gen_ior<v_cmp_result>3 (mask, mask, tmp));\n       break;\n     default:\n@@ -1808,41 +1805,33 @@\n   switch (GET_CODE (operands[3]))\n     {\n     case GEU:\n-      emit_insn (gen_neon_vcge<mode> (mask, operands[4], operands[5],\n-\t\t\t\t      const0_rtx));\n+      emit_insn (gen_neon_vcgeu<mode> (mask, operands[4], operands[5]));\n       break;\n     \n     case GTU:\n-      emit_insn (gen_neon_vcgt<mode> (mask, operands[4], operands[5],\n-\t\t\t\t      const0_rtx));\n+      emit_insn (gen_neon_vcgtu<mode> (mask, operands[4], operands[5]));\n       break;\n     \n     case EQ:\n-      emit_insn (gen_neon_vceq<mode> (mask, operands[4], operands[5],\n-\t\t\t\t      const0_rtx));\n+      emit_insn (gen_neon_vceq<mode> (mask, operands[4], operands[5]));\n       break;\n     \n     case LEU:\n       if (immediate_zero)\n-\temit_insn (gen_neon_vcle<mode> (mask, operands[4], operands[5],\n-\t\t\t\t\tconst0_rtx));\n+\temit_insn (gen_neon_vcle<mode> (mask, operands[4], operands[5]));\n       else\n-\temit_insn (gen_neon_vcge<mode> (mask, operands[5], operands[4],\n-\t\t\t\t\tconst0_rtx));\n+\temit_insn (gen_neon_vcgeu<mode> (mask, operands[5], operands[4]));\n       break;\n     \n     case LTU:\n       if (immediate_zero)\n-        emit_insn (gen_neon_vclt<mode> (mask, operands[4], operands[5],\n-\t\t\t\t\tconst0_rtx));\n+        emit_insn (gen_neon_vclt<mode> (mask, operands[4], operands[5]));\n       else\n-\temit_insn (gen_neon_vcgt<mode> (mask, operands[5], operands[4],\n-\t\t\t\t\tconst0_rtx));\n+\temit_insn (gen_neon_vcgtu<mode> (mask, operands[5], operands[4]));\n       break;\n     \n     case NE:\n-      emit_insn (gen_neon_vceq<mode> (mask, operands[4], operands[5],\n-\t\t\t\t      const0_rtx));\n+      emit_insn (gen_neon_vceq<mode> (mask, operands[4], operands[5]));\n       inverse = 1;\n       break;\n     \n@@ -1867,8 +1856,7 @@\n (define_expand \"neon_vadd<mode>\"\n   [(match_operand:VCVTF 0 \"s_register_operand\" \"=w\")\n    (match_operand:VCVTF 1 \"s_register_operand\" \"w\")\n-   (match_operand:VCVTF 2 \"s_register_operand\" \"w\")\n-   (match_operand:SI 3 \"immediate_operand\" \"i\")]\n+   (match_operand:VCVTF 2 \"s_register_operand\" \"w\")]\n   \"TARGET_NEON\"\n {\n   if (!<Is_float_mode> || flag_unsafe_math_optimizations)\n@@ -1904,77 +1892,66 @@\n                     (const_string \"neon_add<q>\")))]\n )\n \n-; operand 3 represents in bits:\n-;  bit 0: signed (vs unsigned).\n-;  bit 1: rounding (vs none).\n-\n-(define_insn \"neon_vaddl<mode>\"\n+(define_insn \"neon_vaddl<sup><mode>\"\n   [(set (match_operand:<V_widen> 0 \"s_register_operand\" \"=w\")\n         (unspec:<V_widen> [(match_operand:VDI 1 \"s_register_operand\" \"w\")\n-\t\t           (match_operand:VDI 2 \"s_register_operand\" \"w\")\n-                           (match_operand:SI 3 \"immediate_operand\" \"i\")]\n-                          UNSPEC_VADDL))]\n+\t\t           (match_operand:VDI 2 \"s_register_operand\" \"w\")]\n+                          VADDL))]\n   \"TARGET_NEON\"\n-  \"vaddl.%T3%#<V_sz_elem>\\t%q0, %P1, %P2\"\n+  \"vaddl.<sup>%#<V_sz_elem>\\t%q0, %P1, %P2\"\n   [(set_attr \"type\" \"neon_add_long\")]\n )\n \n-(define_insn \"neon_vaddw<mode>\"\n+(define_insn \"neon_vaddw<sup><mode>\"\n   [(set (match_operand:<V_widen> 0 \"s_register_operand\" \"=w\")\n         (unspec:<V_widen> [(match_operand:<V_widen> 1 \"s_register_operand\" \"w\")\n-\t\t           (match_operand:VDI 2 \"s_register_operand\" \"w\")\n-                           (match_operand:SI 3 \"immediate_operand\" \"i\")]\n-                          UNSPEC_VADDW))]\n+\t\t           (match_operand:VDI 2 \"s_register_operand\" \"w\")]\n+                          VADDW))]\n   \"TARGET_NEON\"\n-  \"vaddw.%T3%#<V_sz_elem>\\t%q0, %q1, %P2\"\n+  \"vaddw.<sup>%#<V_sz_elem>\\t%q0, %q1, %P2\"\n   [(set_attr \"type\" \"neon_add_widen\")]\n )\n \n ; vhadd and vrhadd.\n \n-(define_insn \"neon_vhadd<mode>\"\n+(define_insn \"neon_v<r>hadd<sup><mode>\"\n   [(set (match_operand:VDQIW 0 \"s_register_operand\" \"=w\")\n         (unspec:VDQIW [(match_operand:VDQIW 1 \"s_register_operand\" \"w\")\n-\t\t       (match_operand:VDQIW 2 \"s_register_operand\" \"w\")\n-\t\t       (match_operand:SI 3 \"immediate_operand\" \"i\")]\n-\t\t      UNSPEC_VHADD))]\n+\t\t       (match_operand:VDQIW 2 \"s_register_operand\" \"w\")]\n+\t\t      VHADD))]\n   \"TARGET_NEON\"\n-  \"v%O3hadd.%T3%#<V_sz_elem>\\t%<V_reg>0, %<V_reg>1, %<V_reg>2\"\n+  \"v<r>hadd.<sup>%#<V_sz_elem>\\t%<V_reg>0, %<V_reg>1, %<V_reg>2\"\n   [(set_attr \"type\" \"neon_add_halve_q\")]\n )\n \n-(define_insn \"neon_vqadd<mode>\"\n+(define_insn \"neon_vqadd<sup><mode>\"\n   [(set (match_operand:VDQIX 0 \"s_register_operand\" \"=w\")\n         (unspec:VDQIX [(match_operand:VDQIX 1 \"s_register_operand\" \"w\")\n-\t\t       (match_operand:VDQIX 2 \"s_register_operand\" \"w\")\n-                       (match_operand:SI 3 \"immediate_operand\" \"i\")]\n-                     UNSPEC_VQADD))]\n+\t\t       (match_operand:VDQIX 2 \"s_register_operand\" \"w\")]\n+                     VQADD))]\n   \"TARGET_NEON\"\n-  \"vqadd.%T3%#<V_sz_elem>\\t%<V_reg>0, %<V_reg>1, %<V_reg>2\"\n+  \"vqadd.<sup>%#<V_sz_elem>\\t%<V_reg>0, %<V_reg>1, %<V_reg>2\"\n   [(set_attr \"type\" \"neon_qadd<q>\")]\n )\n \n-(define_insn \"neon_vaddhn<mode>\"\n+(define_insn \"neon_v<r>addhn<mode>\"\n   [(set (match_operand:<V_narrow> 0 \"s_register_operand\" \"=w\")\n         (unspec:<V_narrow> [(match_operand:VN 1 \"s_register_operand\" \"w\")\n-\t\t            (match_operand:VN 2 \"s_register_operand\" \"w\")\n-                            (match_operand:SI 3 \"immediate_operand\" \"i\")]\n-                           UNSPEC_VADDHN))]\n+\t\t            (match_operand:VN 2 \"s_register_operand\" \"w\")]\n+                           VADDHN))]\n   \"TARGET_NEON\"\n-  \"v%O3addhn.<V_if_elem>\\t%P0, %q1, %q2\"\n+  \"v<r>addhn.<V_if_elem>\\t%P0, %q1, %q2\"\n   [(set_attr \"type\" \"neon_add_halve_narrow_q\")]\n )\n \n-;; We cannot replace this unspec with mul<mode>3 because of the odd \n-;; polynomial multiplication case that can specified by operand 3.\n-(define_insn \"neon_vmul<mode>\"\n-  [(set (match_operand:VDQW 0 \"s_register_operand\" \"=w\")\n-        (unspec:VDQW [(match_operand:VDQW 1 \"s_register_operand\" \"w\")\n-\t\t      (match_operand:VDQW 2 \"s_register_operand\" \"w\")\n-\t\t      (match_operand:SI 3 \"immediate_operand\" \"i\")]\n+;; Polynomial and Float multiplication.\n+(define_insn \"neon_vmul<pf><mode>\"\n+  [(set (match_operand:VPF 0 \"s_register_operand\" \"=w\")\n+        (unspec:VPF [(match_operand:VPF 1 \"s_register_operand\" \"w\")\n+\t\t      (match_operand:VPF 2 \"s_register_operand\" \"w\")]\n \t\t     UNSPEC_VMUL))]\n   \"TARGET_NEON\"\n-  \"vmul.%F3%#<V_sz_elem>\\t%<V_reg>0, %<V_reg>1, %<V_reg>2\"\n+  \"vmul.<pf>%#<V_sz_elem>\\t%<V_reg>0, %<V_reg>1, %<V_reg>2\"\n   [(set (attr \"type\")\n       (if_then_else (match_test \"<Is_float_mode>\")\n                     (const_string \"neon_fp_mul_s<q>\")\n@@ -1985,8 +1962,7 @@\n   [(match_operand:VDQW 0 \"s_register_operand\" \"=w\")\n    (match_operand:VDQW 1 \"s_register_operand\" \"0\")\n    (match_operand:VDQW 2 \"s_register_operand\" \"w\")\n-   (match_operand:VDQW 3 \"s_register_operand\" \"w\")\n-   (match_operand:SI 4 \"immediate_operand\" \"i\")]\n+   (match_operand:VDQW 3 \"s_register_operand\" \"w\")]\n   \"TARGET_NEON\"\n {\n   if (!<Is_float_mode> || flag_unsafe_math_optimizations)\n@@ -2002,8 +1978,7 @@\n   [(match_operand:VCVTF 0 \"s_register_operand\")\n    (match_operand:VCVTF 1 \"s_register_operand\")\n    (match_operand:VCVTF 2 \"s_register_operand\")\n-   (match_operand:VCVTF 3 \"s_register_operand\")\n-   (match_operand:SI 4 \"immediate_operand\")]\n+   (match_operand:VCVTF 3 \"s_register_operand\")]\n   \"TARGET_NEON && TARGET_FMA\"\n {\n   emit_insn (gen_fma<mode>4_intrinsic (operands[0], operands[2], operands[3],\n@@ -2015,8 +1990,7 @@\n   [(match_operand:VCVTF 0 \"s_register_operand\")\n    (match_operand:VCVTF 1 \"s_register_operand\")\n    (match_operand:VCVTF 2 \"s_register_operand\")\n-   (match_operand:VCVTF 3 \"s_register_operand\")\n-   (match_operand:SI 4 \"immediate_operand\")]\n+   (match_operand:VCVTF 3 \"s_register_operand\")]\n   \"TARGET_NEON && TARGET_FMA\"\n {\n   emit_insn (gen_fmsub<mode>4_intrinsic (operands[0], operands[2], operands[3],\n@@ -2040,24 +2014,22 @@\n                     (const_string \"neon_mla_<V_elem_ch><q>\")))]\n )\n \n-(define_insn \"neon_vmlal<mode>\"\n+(define_insn \"neon_vmlal<sup><mode>\"\n   [(set (match_operand:<V_widen> 0 \"s_register_operand\" \"=w\")\n         (unspec:<V_widen> [(match_operand:<V_widen> 1 \"s_register_operand\" \"0\")\n \t\t           (match_operand:VW 2 \"s_register_operand\" \"w\")\n-\t\t           (match_operand:VW 3 \"s_register_operand\" \"w\")\n-                           (match_operand:SI 4 \"immediate_operand\" \"i\")]\n-                          UNSPEC_VMLAL))]\n+\t\t           (match_operand:VW 3 \"s_register_operand\" \"w\")]\n+                          VMLAL))]\n   \"TARGET_NEON\"\n-  \"vmlal.%T4%#<V_sz_elem>\\t%q0, %P2, %P3\"\n+  \"vmlal.<sup>%#<V_sz_elem>\\t%q0, %P2, %P3\"\n   [(set_attr \"type\" \"neon_mla_<V_elem_ch>_long\")]\n )\n \n (define_expand \"neon_vmls<mode>\"\n   [(match_operand:VDQW 0 \"s_register_operand\" \"=w\")\n    (match_operand:VDQW 1 \"s_register_operand\" \"0\")\n    (match_operand:VDQW 2 \"s_register_operand\" \"w\")\n-   (match_operand:VDQW 3 \"s_register_operand\" \"w\")\n-   (match_operand:SI 4 \"immediate_operand\" \"i\")]\n+   (match_operand:VDQW 3 \"s_register_operand\" \"w\")]\n   \"TARGET_NEON\"\n {\n   if (!<Is_float_mode> || flag_unsafe_math_optimizations)\n@@ -2085,35 +2057,33 @@\n                     (const_string \"neon_mla_<V_elem_ch><q>\")))]\n )\n \n-(define_insn \"neon_vmlsl<mode>\"\n+(define_insn \"neon_vmlsl<sup><mode>\"\n   [(set (match_operand:<V_widen> 0 \"s_register_operand\" \"=w\")\n         (unspec:<V_widen> [(match_operand:<V_widen> 1 \"s_register_operand\" \"0\")\n \t\t           (match_operand:VW 2 \"s_register_operand\" \"w\")\n-\t\t           (match_operand:VW 3 \"s_register_operand\" \"w\")\n-                           (match_operand:SI 4 \"immediate_operand\" \"i\")]\n-                          UNSPEC_VMLSL))]\n+\t\t           (match_operand:VW 3 \"s_register_operand\" \"w\")]\n+                          VMLSL))]\n   \"TARGET_NEON\"\n-  \"vmlsl.%T4%#<V_sz_elem>\\t%q0, %P2, %P3\"\n+  \"vmlsl.<sup>%#<V_sz_elem>\\t%q0, %P2, %P3\"\n   [(set_attr \"type\" \"neon_mla_<V_elem_ch>_long\")]\n )\n \n-(define_insn \"neon_vqdmulh<mode>\"\n+;; vqdmulh, vqrdmulh\n+(define_insn \"neon_vq<r>dmulh<mode>\"\n   [(set (match_operand:VMDQI 0 \"s_register_operand\" \"=w\")\n         (unspec:VMDQI [(match_operand:VMDQI 1 \"s_register_operand\" \"w\")\n-\t\t       (match_operand:VMDQI 2 \"s_register_operand\" \"w\")\n-                       (match_operand:SI 3 \"immediate_operand\" \"i\")]\n-                      UNSPEC_VQDMULH))]\n+\t\t       (match_operand:VMDQI 2 \"s_register_operand\" \"w\")]\n+                      VQDMULH))]\n   \"TARGET_NEON\"\n-  \"vq%O3dmulh.<V_s_elem>\\t%<V_reg>0, %<V_reg>1, %<V_reg>2\"\n+  \"vq<r>dmulh.<V_s_elem>\\t%<V_reg>0, %<V_reg>1, %<V_reg>2\"\n   [(set_attr \"type\" \"neon_sat_mul_<V_elem_ch><q>\")]\n )\n \n (define_insn \"neon_vqdmlal<mode>\"\n   [(set (match_operand:<V_widen> 0 \"s_register_operand\" \"=w\")\n         (unspec:<V_widen> [(match_operand:<V_widen> 1 \"s_register_operand\" \"0\")\n \t\t           (match_operand:VMDI 2 \"s_register_operand\" \"w\")\n-\t\t           (match_operand:VMDI 3 \"s_register_operand\" \"w\")\n-                           (match_operand:SI 4 \"immediate_operand\" \"i\")]\n+\t\t           (match_operand:VMDI 3 \"s_register_operand\" \"w\")]\n                           UNSPEC_VQDMLAL))]\n   \"TARGET_NEON\"\n   \"vqdmlal.<V_s_elem>\\t%q0, %P2, %P3\"\n@@ -2124,30 +2094,27 @@\n   [(set (match_operand:<V_widen> 0 \"s_register_operand\" \"=w\")\n         (unspec:<V_widen> [(match_operand:<V_widen> 1 \"s_register_operand\" \"0\")\n \t\t           (match_operand:VMDI 2 \"s_register_operand\" \"w\")\n-\t\t           (match_operand:VMDI 3 \"s_register_operand\" \"w\")\n-                           (match_operand:SI 4 \"immediate_operand\" \"i\")]\n+\t\t           (match_operand:VMDI 3 \"s_register_operand\" \"w\")]\n                           UNSPEC_VQDMLSL))]\n   \"TARGET_NEON\"\n   \"vqdmlsl.<V_s_elem>\\t%q0, %P2, %P3\"\n   [(set_attr \"type\" \"neon_sat_mla_<V_elem_ch>_long\")]\n )\n \n-(define_insn \"neon_vmull<mode>\"\n+(define_insn \"neon_vmull<sup><mode>\"\n   [(set (match_operand:<V_widen> 0 \"s_register_operand\" \"=w\")\n         (unspec:<V_widen> [(match_operand:VW 1 \"s_register_operand\" \"w\")\n-\t\t           (match_operand:VW 2 \"s_register_operand\" \"w\")\n-                           (match_operand:SI 3 \"immediate_operand\" \"i\")]\n-                          UNSPEC_VMULL))]\n+\t\t           (match_operand:VW 2 \"s_register_operand\" \"w\")]\n+                          VMULL))]\n   \"TARGET_NEON\"\n-  \"vmull.%T3%#<V_sz_elem>\\t%q0, %P1, %P2\"\n+  \"vmull.<sup>%#<V_sz_elem>\\t%q0, %P1, %P2\"\n   [(set_attr \"type\" \"neon_mul_<V_elem_ch>_long\")]\n )\n \n (define_insn \"neon_vqdmull<mode>\"\n   [(set (match_operand:<V_widen> 0 \"s_register_operand\" \"=w\")\n         (unspec:<V_widen> [(match_operand:VMDI 1 \"s_register_operand\" \"w\")\n-\t\t           (match_operand:VMDI 2 \"s_register_operand\" \"w\")\n-                           (match_operand:SI 3 \"immediate_operand\" \"i\")]\n+\t\t           (match_operand:VMDI 2 \"s_register_operand\" \"w\")]\n                           UNSPEC_VQDMULL))]\n   \"TARGET_NEON\"\n   \"vqdmull.<V_s_elem>\\t%q0, %P1, %P2\"\n@@ -2157,8 +2124,7 @@\n (define_expand \"neon_vsub<mode>\"\n   [(match_operand:VCVTF 0 \"s_register_operand\" \"=w\")\n    (match_operand:VCVTF 1 \"s_register_operand\" \"w\")\n-   (match_operand:VCVTF 2 \"s_register_operand\" \"w\")\n-   (match_operand:SI 3 \"immediate_operand\" \"i\")]\n+   (match_operand:VCVTF 2 \"s_register_operand\" \"w\")]\n   \"TARGET_NEON\"\n {\n   if (!<Is_float_mode> || flag_unsafe_math_optimizations)\n@@ -2184,67 +2150,61 @@\n                     (const_string \"neon_sub<q>\")))]\n )\n \n-(define_insn \"neon_vsubl<mode>\"\n+(define_insn \"neon_vsubl<sup><mode>\"\n   [(set (match_operand:<V_widen> 0 \"s_register_operand\" \"=w\")\n         (unspec:<V_widen> [(match_operand:VDI 1 \"s_register_operand\" \"w\")\n-\t\t           (match_operand:VDI 2 \"s_register_operand\" \"w\")\n-                           (match_operand:SI 3 \"immediate_operand\" \"i\")]\n-                          UNSPEC_VSUBL))]\n+\t\t           (match_operand:VDI 2 \"s_register_operand\" \"w\")]\n+                          VSUBL))]\n   \"TARGET_NEON\"\n-  \"vsubl.%T3%#<V_sz_elem>\\t%q0, %P1, %P2\"\n+  \"vsubl.<sup>%#<V_sz_elem>\\t%q0, %P1, %P2\"\n   [(set_attr \"type\" \"neon_sub_long\")]\n )\n \n-(define_insn \"neon_vsubw<mode>\"\n+(define_insn \"neon_vsubw<sup><mode>\"\n   [(set (match_operand:<V_widen> 0 \"s_register_operand\" \"=w\")\n         (unspec:<V_widen> [(match_operand:<V_widen> 1 \"s_register_operand\" \"w\")\n-\t\t           (match_operand:VDI 2 \"s_register_operand\" \"w\")\n-                           (match_operand:SI 3 \"immediate_operand\" \"i\")]\n-\t\t\t  UNSPEC_VSUBW))]\n+\t\t           (match_operand:VDI 2 \"s_register_operand\" \"w\")]\n+\t\t\t  VSUBW))]\n   \"TARGET_NEON\"\n-  \"vsubw.%T3%#<V_sz_elem>\\t%q0, %q1, %P2\"\n+  \"vsubw.<sup>%#<V_sz_elem>\\t%q0, %q1, %P2\"\n   [(set_attr \"type\" \"neon_sub_widen\")]\n )\n \n-(define_insn \"neon_vqsub<mode>\"\n+(define_insn \"neon_vqsub<sup><mode>\"\n   [(set (match_operand:VDQIX 0 \"s_register_operand\" \"=w\")\n         (unspec:VDQIX [(match_operand:VDQIX 1 \"s_register_operand\" \"w\")\n-\t\t       (match_operand:VDQIX 2 \"s_register_operand\" \"w\")\n-                       (match_operand:SI 3 \"immediate_operand\" \"i\")]\n-\t\t      UNSPEC_VQSUB))]\n+\t\t       (match_operand:VDQIX 2 \"s_register_operand\" \"w\")]\n+\t\t      VQSUB))]\n   \"TARGET_NEON\"\n-  \"vqsub.%T3%#<V_sz_elem>\\t%<V_reg>0, %<V_reg>1, %<V_reg>2\"\n+  \"vqsub.<sup>%#<V_sz_elem>\\t%<V_reg>0, %<V_reg>1, %<V_reg>2\"\n   [(set_attr \"type\" \"neon_qsub<q>\")]\n )\n \n-(define_insn \"neon_vhsub<mode>\"\n+(define_insn \"neon_vhsub<sup><mode>\"\n   [(set (match_operand:VDQIW 0 \"s_register_operand\" \"=w\")\n         (unspec:VDQIW [(match_operand:VDQIW 1 \"s_register_operand\" \"w\")\n-\t\t       (match_operand:VDQIW 2 \"s_register_operand\" \"w\")\n-                       (match_operand:SI 3 \"immediate_operand\" \"i\")]\n-\t\t      UNSPEC_VHSUB))]\n+\t\t       (match_operand:VDQIW 2 \"s_register_operand\" \"w\")]\n+\t\t      VHSUB))]\n   \"TARGET_NEON\"\n-  \"vhsub.%T3%#<V_sz_elem>\\t%<V_reg>0, %<V_reg>1, %<V_reg>2\"\n+  \"vhsub.<sup>%#<V_sz_elem>\\t%<V_reg>0, %<V_reg>1, %<V_reg>2\"\n   [(set_attr \"type\" \"neon_sub_halve<q>\")]\n )\n \n-(define_insn \"neon_vsubhn<mode>\"\n+(define_insn \"neon_v<r>subhn<mode>\"\n   [(set (match_operand:<V_narrow> 0 \"s_register_operand\" \"=w\")\n         (unspec:<V_narrow> [(match_operand:VN 1 \"s_register_operand\" \"w\")\n-\t\t            (match_operand:VN 2 \"s_register_operand\" \"w\")\n-                            (match_operand:SI 3 \"immediate_operand\" \"i\")]\n-                           UNSPEC_VSUBHN))]\n+\t\t            (match_operand:VN 2 \"s_register_operand\" \"w\")]\n+                           VSUBHN))]\n   \"TARGET_NEON\"\n-  \"v%O3subhn.<V_if_elem>\\t%P0, %q1, %q2\"\n+  \"v<r>subhn.<V_if_elem>\\t%P0, %q1, %q2\"\n   [(set_attr \"type\" \"neon_sub_halve_narrow_q\")]\n )\n \n (define_insn \"neon_vceq<mode>\"\n   [(set (match_operand:<V_cmp_result> 0 \"s_register_operand\" \"=w,w\")\n         (unspec:<V_cmp_result>\n \t  [(match_operand:VDQW 1 \"s_register_operand\" \"w,w\")\n-\t   (match_operand:VDQW 2 \"reg_or_zero_operand\" \"w,Dz\")\n-\t   (match_operand:SI 3 \"immediate_operand\" \"i,i\")]\n+\t   (match_operand:VDQW 2 \"reg_or_zero_operand\" \"w,Dz\")]\n           UNSPEC_VCEQ))]\n   \"TARGET_NEON\"\n   \"@\n@@ -2262,13 +2222,12 @@\n   [(set (match_operand:<V_cmp_result> 0 \"s_register_operand\" \"=w,w\")\n         (unspec:<V_cmp_result>\n \t  [(match_operand:VDQW 1 \"s_register_operand\" \"w,w\")\n-\t   (match_operand:VDQW 2 \"reg_or_zero_operand\" \"w,Dz\")\n-\t   (match_operand:SI 3 \"immediate_operand\" \"i,i\")]\n+\t   (match_operand:VDQW 2 \"reg_or_zero_operand\" \"w,Dz\")]\n           UNSPEC_VCGE))]\n   \"TARGET_NEON\"\n   \"@\n-  vcge.%T3%#<V_sz_elem>\\t%<V_reg>0, %<V_reg>1, %<V_reg>2\n-  vcge.%T3%#<V_sz_elem>\\t%<V_reg>0, %<V_reg>1, #0\"\n+  vcge.<V_s_elem>\\t%<V_reg>0, %<V_reg>1, %<V_reg>2\n+  vcge.<V_s_elem>\\t%<V_reg>0, %<V_reg>1, #0\"\n   [(set (attr \"type\")\n      (if_then_else (match_test \"<Is_float_mode>\")\n                    (const_string \"neon_fp_compare_s<q>\")\n@@ -2281,25 +2240,23 @@\n   [(set (match_operand:<V_cmp_result> 0 \"s_register_operand\" \"=w\")\n         (unspec:<V_cmp_result>\n \t  [(match_operand:VDQIW 1 \"s_register_operand\" \"w\")\n-\t   (match_operand:VDQIW 2 \"s_register_operand\" \"w\")\n-           (match_operand:SI 3 \"immediate_operand\" \"i\")]\n+\t   (match_operand:VDQIW 2 \"s_register_operand\" \"w\")]\n           UNSPEC_VCGEU))]\n   \"TARGET_NEON\"\n-  \"vcge.%T3%#<V_sz_elem>\\t%<V_reg>0, %<V_reg>1, %<V_reg>2\"\n+  \"vcge.u%#<V_sz_elem>\\t%<V_reg>0, %<V_reg>1, %<V_reg>2\"\n   [(set_attr \"type\" \"neon_compare<q>\")]\n )\n \n (define_insn \"neon_vcgt<mode>\"\n   [(set (match_operand:<V_cmp_result> 0 \"s_register_operand\" \"=w,w\")\n         (unspec:<V_cmp_result>\n \t  [(match_operand:VDQW 1 \"s_register_operand\" \"w,w\")\n-\t   (match_operand:VDQW 2 \"reg_or_zero_operand\" \"w,Dz\")\n-           (match_operand:SI 3 \"immediate_operand\" \"i,i\")]\n+\t   (match_operand:VDQW 2 \"reg_or_zero_operand\" \"w,Dz\")]\n           UNSPEC_VCGT))]\n   \"TARGET_NEON\"\n   \"@\n-  vcgt.%T3%#<V_sz_elem>\\t%<V_reg>0, %<V_reg>1, %<V_reg>2\n-  vcgt.%T3%#<V_sz_elem>\\t%<V_reg>0, %<V_reg>1, #0\"\n+  vcgt.<V_s_elem>\\t%<V_reg>0, %<V_reg>1, %<V_reg>2\n+  vcgt.<V_s_elem>\\t%<V_reg>0, %<V_reg>1, #0\"\n   [(set (attr \"type\")\n      (if_then_else (match_test \"<Is_float_mode>\")\n                    (const_string \"neon_fp_compare_s<q>\")\n@@ -2312,11 +2269,10 @@\n   [(set (match_operand:<V_cmp_result> 0 \"s_register_operand\" \"=w\")\n         (unspec:<V_cmp_result>\n \t  [(match_operand:VDQIW 1 \"s_register_operand\" \"w\")\n-\t   (match_operand:VDQIW 2 \"s_register_operand\" \"w\")\n-           (match_operand:SI 3 \"immediate_operand\" \"i\")]\n+\t   (match_operand:VDQIW 2 \"s_register_operand\" \"w\")]\n           UNSPEC_VCGTU))]\n   \"TARGET_NEON\"\n-  \"vcgt.%T3%#<V_sz_elem>\\t%<V_reg>0, %<V_reg>1, %<V_reg>2\"\n+  \"vcgt.u%#<V_sz_elem>\\t%<V_reg>0, %<V_reg>1, %<V_reg>2\"\n   [(set_attr \"type\" \"neon_compare<q>\")]\n )\n \n@@ -2327,11 +2283,10 @@\n   [(set (match_operand:<V_cmp_result> 0 \"s_register_operand\" \"=w\")\n         (unspec:<V_cmp_result>\n \t  [(match_operand:VDQW 1 \"s_register_operand\" \"w\")\n-\t   (match_operand:VDQW 2 \"zero_operand\" \"Dz\")\n-\t   (match_operand:SI 3 \"immediate_operand\" \"i\")]\n+\t   (match_operand:VDQW 2 \"zero_operand\" \"Dz\")]\n           UNSPEC_VCLE))]\n   \"TARGET_NEON\"\n-  \"vcle.%T3%#<V_sz_elem>\\t%<V_reg>0, %<V_reg>1, #0\"\n+  \"vcle.<V_s_elem>\\t%<V_reg>0, %<V_reg>1, #0\"\n   [(set (attr \"type\")\n       (if_then_else (match_test \"<Is_float_mode>\")\n                     (const_string \"neon_fp_compare_s<q>\")\n@@ -2344,11 +2299,10 @@\n   [(set (match_operand:<V_cmp_result> 0 \"s_register_operand\" \"=w\")\n         (unspec:<V_cmp_result>\n \t  [(match_operand:VDQW 1 \"s_register_operand\" \"w\")\n-\t   (match_operand:VDQW 2 \"zero_operand\" \"Dz\")\n-\t   (match_operand:SI 3 \"immediate_operand\" \"i\")]\n+\t   (match_operand:VDQW 2 \"zero_operand\" \"Dz\")]\n           UNSPEC_VCLT))]\n   \"TARGET_NEON\"\n-  \"vclt.%T3%#<V_sz_elem>\\t%<V_reg>0, %<V_reg>1, #0\"\n+  \"vclt.<V_s_elem>\\t%<V_reg>0, %<V_reg>1, #0\"\n   [(set (attr \"type\")\n       (if_then_else (match_test \"<Is_float_mode>\")\n                     (const_string \"neon_fp_compare_s<q>\")\n@@ -2360,8 +2314,7 @@\n (define_insn \"neon_vcage<mode>\"\n   [(set (match_operand:<V_cmp_result> 0 \"s_register_operand\" \"=w\")\n         (unspec:<V_cmp_result> [(match_operand:VCVTF 1 \"s_register_operand\" \"w\")\n-\t\t                (match_operand:VCVTF 2 \"s_register_operand\" \"w\")\n-                                (match_operand:SI 3 \"immediate_operand\" \"i\")]\n+\t\t                (match_operand:VCVTF 2 \"s_register_operand\" \"w\")]\n                                UNSPEC_VCAGE))]\n   \"TARGET_NEON\"\n   \"vacge.<V_if_elem>\\t%<V_reg>0, %<V_reg>1, %<V_reg>2\"\n@@ -2371,8 +2324,7 @@\n (define_insn \"neon_vcagt<mode>\"\n   [(set (match_operand:<V_cmp_result> 0 \"s_register_operand\" \"=w\")\n         (unspec:<V_cmp_result> [(match_operand:VCVTF 1 \"s_register_operand\" \"w\")\n-\t\t                (match_operand:VCVTF 2 \"s_register_operand\" \"w\")\n-                                (match_operand:SI 3 \"immediate_operand\" \"i\")]\n+\t\t                (match_operand:VCVTF 2 \"s_register_operand\" \"w\")]\n                                UNSPEC_VCAGT))]\n   \"TARGET_NEON\"\n   \"vacgt.<V_if_elem>\\t%<V_reg>0, %<V_reg>1, %<V_reg>2\"\n@@ -2382,157 +2334,139 @@\n (define_insn \"neon_vtst<mode>\"\n   [(set (match_operand:VDQIW 0 \"s_register_operand\" \"=w\")\n         (unspec:VDQIW [(match_operand:VDQIW 1 \"s_register_operand\" \"w\")\n-\t\t       (match_operand:VDQIW 2 \"s_register_operand\" \"w\")\n-                       (match_operand:SI 3 \"immediate_operand\" \"i\")]\n+\t\t       (match_operand:VDQIW 2 \"s_register_operand\" \"w\")]\n \t\t      UNSPEC_VTST))]\n   \"TARGET_NEON\"\n   \"vtst.<V_sz_elem>\\t%<V_reg>0, %<V_reg>1, %<V_reg>2\"\n   [(set_attr \"type\" \"neon_tst<q>\")]\n )\n \n-(define_insn \"neon_vabd<mode>\"\n-  [(set (match_operand:VDQW 0 \"s_register_operand\" \"=w\")\n-        (unspec:VDQW [(match_operand:VDQW 1 \"s_register_operand\" \"w\")\n-\t\t      (match_operand:VDQW 2 \"s_register_operand\" \"w\")\n-\t\t      (match_operand:SI 3 \"immediate_operand\" \"i\")]\n-\t\t     UNSPEC_VABD))]\n+(define_insn \"neon_vabd<sup><mode>\"\n+  [(set (match_operand:VDQIW 0 \"s_register_operand\" \"=w\")\n+        (unspec:VDQIW [(match_operand:VDQIW 1 \"s_register_operand\" \"w\")\n+\t\t      (match_operand:VDQIW 2 \"s_register_operand\" \"w\")]\n+\t\t     VABD))]\n   \"TARGET_NEON\"\n-  \"vabd.%T3%#<V_sz_elem>\\t%<V_reg>0, %<V_reg>1, %<V_reg>2\"\n-  [(set (attr \"type\")\n-     (if_then_else (match_test \"<Is_float_mode>\")\n-                   (const_string \"neon_fp_abd_s<q>\")\n-                   (const_string \"neon_abd<q>\")))]\n+  \"vabd.<sup>%#<V_sz_elem>\\t%<V_reg>0, %<V_reg>1, %<V_reg>2\"\n+  [(set_attr \"type\" \"neon_abd<q>\")]\n )\n \n-(define_insn \"neon_vabdl<mode>\"\n+(define_insn \"neon_vabdf<mode>\"\n+  [(set (match_operand:VCVTF 0 \"s_register_operand\" \"=w\")\n+        (unspec:VCVTF [(match_operand:VCVTF 1 \"s_register_operand\" \"w\")\n+\t\t      (match_operand:VCVTF 2 \"s_register_operand\" \"w\")]\n+\t\t     UNSPEC_VABD_F))]\n+  \"TARGET_NEON\"\n+  \"vabd.<V_s_elem>\\t%<V_reg>0, %<V_reg>1, %<V_reg>2\"\n+  [(set_attr \"type\" \"neon_fp_abd_s<q>\")]\n+)\n+\n+(define_insn \"neon_vabdl<sup><mode>\"\n   [(set (match_operand:<V_widen> 0 \"s_register_operand\" \"=w\")\n         (unspec:<V_widen> [(match_operand:VW 1 \"s_register_operand\" \"w\")\n-\t\t           (match_operand:VW 2 \"s_register_operand\" \"w\")\n-                           (match_operand:SI 3 \"immediate_operand\" \"i\")]\n-                          UNSPEC_VABDL))]\n+\t\t           (match_operand:VW 2 \"s_register_operand\" \"w\")]\n+                          VABDL))]\n   \"TARGET_NEON\"\n-  \"vabdl.%T3%#<V_sz_elem>\\t%q0, %P1, %P2\"\n+  \"vabdl.<sup>%#<V_sz_elem>\\t%q0, %P1, %P2\"\n   [(set_attr \"type\" \"neon_abd_long\")]\n )\n \n-(define_insn \"neon_vaba<mode>\"\n+(define_insn \"neon_vaba<sup><mode>\"\n   [(set (match_operand:VDQIW 0 \"s_register_operand\" \"=w\")\n         (plus:VDQIW (unspec:VDQIW [(match_operand:VDQIW 2 \"s_register_operand\" \"w\")\n-\t\t                   (match_operand:VDQIW 3 \"s_register_operand\" \"w\")\n-                                   (match_operand:SI 4 \"immediate_operand\" \"i\")]\n-\t\t                  UNSPEC_VABD)\n+\t\t                   (match_operand:VDQIW 3 \"s_register_operand\" \"w\")]\n+\t\t                  VABD)\n \t\t    (match_operand:VDQIW 1 \"s_register_operand\" \"0\")))]\n   \"TARGET_NEON\"\n-  \"vaba.%T4%#<V_sz_elem>\\t%<V_reg>0, %<V_reg>2, %<V_reg>3\"\n+  \"vaba.<sup>%#<V_sz_elem>\\t%<V_reg>0, %<V_reg>2, %<V_reg>3\"\n   [(set_attr \"type\" \"neon_arith_acc<q>\")]\n )\n \n-(define_insn \"neon_vabal<mode>\"\n+(define_insn \"neon_vabal<sup><mode>\"\n   [(set (match_operand:<V_widen> 0 \"s_register_operand\" \"=w\")\n         (plus:<V_widen> (unspec:<V_widen> [(match_operand:VW 2 \"s_register_operand\" \"w\")\n-                                           (match_operand:VW 3 \"s_register_operand\" \"w\")\n-                                           (match_operand:SI 4 \"immediate_operand\" \"i\")]\n-\t\t\t\t\t   UNSPEC_VABDL)\n+                                           (match_operand:VW 3 \"s_register_operand\" \"w\")]\n+\t\t\t\t\t   VABDL)\n \t\t\t (match_operand:<V_widen> 1 \"s_register_operand\" \"0\")))]\n   \"TARGET_NEON\"\n-  \"vabal.%T4%#<V_sz_elem>\\t%q0, %P2, %P3\"\n+  \"vabal.<sup>%#<V_sz_elem>\\t%q0, %P2, %P3\"\n   [(set_attr \"type\" \"neon_arith_acc<q>\")]\n )\n \n-(define_insn \"neon_vmax<mode>\"\n-  [(set (match_operand:VDQW 0 \"s_register_operand\" \"=w\")\n-        (unspec:VDQW [(match_operand:VDQW 1 \"s_register_operand\" \"w\")\n-\t\t      (match_operand:VDQW 2 \"s_register_operand\" \"w\")\n-\t\t      (match_operand:SI 3 \"immediate_operand\" \"i\")]\n-                     UNSPEC_VMAX))]\n+(define_insn \"neon_v<maxmin><sup><mode>\"\n+  [(set (match_operand:VDQIW 0 \"s_register_operand\" \"=w\")\n+        (unspec:VDQIW [(match_operand:VDQIW 1 \"s_register_operand\" \"w\")\n+\t\t      (match_operand:VDQIW 2 \"s_register_operand\" \"w\")]\n+                     VMAXMIN))]\n   \"TARGET_NEON\"\n-  \"vmax.%T3%#<V_sz_elem>\\t%<V_reg>0, %<V_reg>1, %<V_reg>2\"\n-  [(set (attr \"type\")\n-    (if_then_else (match_test \"<Is_float_mode>\")\n-                  (const_string \"neon_fp_minmax_s<q>\")\n-                  (const_string \"neon_minmax<q>\")))]\n+  \"v<maxmin>.<sup>%#<V_sz_elem>\\t%<V_reg>0, %<V_reg>1, %<V_reg>2\"\n+  [(set_attr \"type\" \"neon_minmax<q>\")]\n )\n \n-(define_insn \"neon_vmin<mode>\"\n-  [(set (match_operand:VDQW 0 \"s_register_operand\" \"=w\")\n-        (unspec:VDQW [(match_operand:VDQW 1 \"s_register_operand\" \"w\")\n-\t\t      (match_operand:VDQW 2 \"s_register_operand\" \"w\")\n-\t\t      (match_operand:SI 3 \"immediate_operand\" \"i\")]\n-                     UNSPEC_VMIN))]\n+(define_insn \"neon_v<maxmin>f<mode>\"\n+  [(set (match_operand:VCVTF 0 \"s_register_operand\" \"=w\")\n+        (unspec:VCVTF [(match_operand:VCVTF 1 \"s_register_operand\" \"w\")\n+\t\t      (match_operand:VCVTF 2 \"s_register_operand\" \"w\")]\n+                     VMAXMINF))]\n   \"TARGET_NEON\"\n-  \"vmin.%T3%#<V_sz_elem>\\t%<V_reg>0, %<V_reg>1, %<V_reg>2\"\n-  [(set (attr \"type\")\n-    (if_then_else (match_test \"<Is_float_mode>\")\n-                  (const_string \"neon_fp_minmax_s<q>\")\n-                  (const_string \"neon_minmax<q>\")))]\n+  \"v<maxmin>.<V_s_elem>\\t%<V_reg>0, %<V_reg>1, %<V_reg>2\"\n+  [(set_attr \"type\" \"neon_fp_minmax_s<q>\")]\n )\n \n (define_expand \"neon_vpadd<mode>\"\n   [(match_operand:VD 0 \"s_register_operand\" \"=w\")\n    (match_operand:VD 1 \"s_register_operand\" \"w\")\n-   (match_operand:VD 2 \"s_register_operand\" \"w\")\n-   (match_operand:SI 3 \"immediate_operand\" \"i\")]\n+   (match_operand:VD 2 \"s_register_operand\" \"w\")]\n   \"TARGET_NEON\"\n {\n   emit_insn (gen_neon_vpadd_internal<mode> (operands[0], operands[1],\n \t\t\t\t\t    operands[2]));\n   DONE;\n })\n \n-(define_insn \"neon_vpaddl<mode>\"\n+(define_insn \"neon_vpaddl<sup><mode>\"\n   [(set (match_operand:<V_double_width> 0 \"s_register_operand\" \"=w\")\n-        (unspec:<V_double_width> [(match_operand:VDQIW 1 \"s_register_operand\" \"w\")\n-                                  (match_operand:SI 2 \"immediate_operand\" \"i\")]\n-                                 UNSPEC_VPADDL))]\n+        (unspec:<V_double_width> [(match_operand:VDQIW 1 \"s_register_operand\" \"w\")]\n+                                 VPADDL))]\n   \"TARGET_NEON\"\n-  \"vpaddl.%T2%#<V_sz_elem>\\t%<V_reg>0, %<V_reg>1\"\n+  \"vpaddl.<sup>%#<V_sz_elem>\\t%<V_reg>0, %<V_reg>1\"\n   [(set_attr \"type\" \"neon_reduc_add_long\")]\n )\n \n-(define_insn \"neon_vpadal<mode>\"\n+(define_insn \"neon_vpadal<sup><mode>\"\n   [(set (match_operand:<V_double_width> 0 \"s_register_operand\" \"=w\")\n         (unspec:<V_double_width> [(match_operand:<V_double_width> 1 \"s_register_operand\" \"0\")\n-                                  (match_operand:VDQIW 2 \"s_register_operand\" \"w\")\n-                                  (match_operand:SI 3 \"immediate_operand\" \"i\")]\n-                                 UNSPEC_VPADAL))]\n+                                  (match_operand:VDQIW 2 \"s_register_operand\" \"w\")]\n+                                 VPADAL))]\n   \"TARGET_NEON\"\n-  \"vpadal.%T3%#<V_sz_elem>\\t%<V_reg>0, %<V_reg>2\"\n+  \"vpadal.<sup>%#<V_sz_elem>\\t%<V_reg>0, %<V_reg>2\"\n   [(set_attr \"type\" \"neon_reduc_add_acc\")]\n )\n \n-(define_insn \"neon_vpmax<mode>\"\n-  [(set (match_operand:VD 0 \"s_register_operand\" \"=w\")\n-        (unspec:VD [(match_operand:VD 1 \"s_register_operand\" \"w\")\n-\t\t    (match_operand:VD 2 \"s_register_operand\" \"w\")\n-                    (match_operand:SI 3 \"immediate_operand\" \"i\")]\n-                   UNSPEC_VPMAX))]\n+(define_insn \"neon_vp<maxmin><sup><mode>\"\n+  [(set (match_operand:VDI 0 \"s_register_operand\" \"=w\")\n+        (unspec:VDI [(match_operand:VDI 1 \"s_register_operand\" \"w\")\n+\t\t    (match_operand:VDI 2 \"s_register_operand\" \"w\")]\n+                   VPMAXMIN))]\n   \"TARGET_NEON\"\n-  \"vpmax.%T3%#<V_sz_elem>\\t%<V_reg>0, %<V_reg>1, %<V_reg>2\"\n-  [(set (attr \"type\")\n-    (if_then_else (match_test \"<Is_float_mode>\")\n-                  (const_string \"neon_fp_reduc_minmax_s<q>\")\n-                  (const_string \"neon_reduc_minmax<q>\")))]\n+  \"vp<maxmin>.<sup>%#<V_sz_elem>\\t%<V_reg>0, %<V_reg>1, %<V_reg>2\"\n+  [(set_attr \"type\" \"neon_reduc_minmax<q>\")]\n )\n \n-(define_insn \"neon_vpmin<mode>\"\n-  [(set (match_operand:VD 0 \"s_register_operand\" \"=w\")\n-        (unspec:VD [(match_operand:VD 1 \"s_register_operand\" \"w\")\n-\t\t    (match_operand:VD 2 \"s_register_operand\" \"w\")\n-                    (match_operand:SI 3 \"immediate_operand\" \"i\")]\n-                   UNSPEC_VPMIN))]\n+(define_insn \"neon_vp<maxmin>f<mode>\"\n+  [(set (match_operand:VCVTF 0 \"s_register_operand\" \"=w\")\n+        (unspec:VCVTF [(match_operand:VCVTF 1 \"s_register_operand\" \"w\")\n+\t\t    (match_operand:VCVTF 2 \"s_register_operand\" \"w\")]\n+                   VPMAXMINF))]\n   \"TARGET_NEON\"\n-  \"vpmin.%T3%#<V_sz_elem>\\t%<V_reg>0, %<V_reg>1, %<V_reg>2\"\n-  [(set (attr \"type\")\n-    (if_then_else (match_test \"<Is_float_mode>\")\n-                  (const_string \"neon_fp_reduc_minmax_s<q>\")\n-                  (const_string \"neon_reduc_minmax<q>\")))]\n+  \"vp<maxmin>.<V_s_elem>\\t%<V_reg>0, %<V_reg>1, %<V_reg>2\"\n+  [(set_attr \"type\" \"neon_fp_reduc_minmax_s<q>\")]\n )\n \n (define_insn \"neon_vrecps<mode>\"\n   [(set (match_operand:VCVTF 0 \"s_register_operand\" \"=w\")\n         (unspec:VCVTF [(match_operand:VCVTF 1 \"s_register_operand\" \"w\")\n-\t\t       (match_operand:VCVTF 2 \"s_register_operand\" \"w\")\n-                       (match_operand:SI 3 \"immediate_operand\" \"i\")]\n+\t\t       (match_operand:VCVTF 2 \"s_register_operand\" \"w\")]\n                       UNSPEC_VRECPS))]\n   \"TARGET_NEON\"\n   \"vrecps.<V_if_elem>\\t%<V_reg>0, %<V_reg>1, %<V_reg>2\"\n@@ -2542,8 +2476,7 @@\n (define_insn \"neon_vrsqrts<mode>\"\n   [(set (match_operand:VCVTF 0 \"s_register_operand\" \"=w\")\n         (unspec:VCVTF [(match_operand:VCVTF 1 \"s_register_operand\" \"w\")\n-\t\t       (match_operand:VCVTF 2 \"s_register_operand\" \"w\")\n-                       (match_operand:SI 3 \"immediate_operand\" \"i\")]\n+\t\t       (match_operand:VCVTF 2 \"s_register_operand\" \"w\")]\n                       UNSPEC_VRSQRTS))]\n   \"TARGET_NEON\"\n   \"vrsqrts.<V_if_elem>\\t%<V_reg>0, %<V_reg>1, %<V_reg>2\"\n@@ -2552,8 +2485,7 @@\n \n (define_expand \"neon_vabs<mode>\"\n   [(match_operand:VDQW 0 \"s_register_operand\" \"\")\n-   (match_operand:VDQW 1 \"s_register_operand\" \"\")\n-   (match_operand:SI 2 \"immediate_operand\" \"\")]\n+   (match_operand:VDQW 1 \"s_register_operand\" \"\")]\n   \"TARGET_NEON\"\n {\n   emit_insn (gen_abs<mode>2 (operands[0], operands[1]));\n@@ -2562,8 +2494,7 @@\n \n (define_insn \"neon_vqabs<mode>\"\n   [(set (match_operand:VDQIW 0 \"s_register_operand\" \"=w\")\n-\t(unspec:VDQIW [(match_operand:VDQIW 1 \"s_register_operand\" \"w\")\n-\t\t       (match_operand:SI 2 \"immediate_operand\" \"i\")]\n+\t(unspec:VDQIW [(match_operand:VDQIW 1 \"s_register_operand\" \"w\")]\n \t\t      UNSPEC_VQABS))]\n   \"TARGET_NEON\"\n   \"vqabs.<V_s_elem>\\t%<V_reg>0, %<V_reg>1\"\n@@ -2580,8 +2511,7 @@\n \n (define_expand \"neon_vneg<mode>\"\n   [(match_operand:VDQW 0 \"s_register_operand\" \"\")\n-   (match_operand:VDQW 1 \"s_register_operand\" \"\")\n-   (match_operand:SI 2 \"immediate_operand\" \"\")]\n+   (match_operand:VDQW 1 \"s_register_operand\" \"\")]\n   \"TARGET_NEON\"\n {\n   emit_insn (gen_neg<mode>2 (operands[0], operands[1]));\n@@ -2617,8 +2547,7 @@\n \n (define_insn \"neon_vqneg<mode>\"\n   [(set (match_operand:VDQIW 0 \"s_register_operand\" \"=w\")\n-\t(unspec:VDQIW [(match_operand:VDQIW 1 \"s_register_operand\" \"w\")\n-\t\t       (match_operand:SI 2 \"immediate_operand\" \"i\")]\n+\t(unspec:VDQIW [(match_operand:VDQIW 1 \"s_register_operand\" \"w\")]\n \t\t      UNSPEC_VQNEG))]\n   \"TARGET_NEON\"\n   \"vqneg.<V_s_elem>\\t%<V_reg>0, %<V_reg>1\"\n@@ -2627,8 +2556,7 @@\n \n (define_insn \"neon_vcls<mode>\"\n   [(set (match_operand:VDQIW 0 \"s_register_operand\" \"=w\")\n-\t(unspec:VDQIW [(match_operand:VDQIW 1 \"s_register_operand\" \"w\")\n-\t\t       (match_operand:SI 2 \"immediate_operand\" \"i\")]\n+\t(unspec:VDQIW [(match_operand:VDQIW 1 \"s_register_operand\" \"w\")]\n \t\t      UNSPEC_VCLS))]\n   \"TARGET_NEON\"\n   \"vcls.<V_s_elem>\\t%<V_reg>0, %<V_reg>1\"\n@@ -2645,8 +2573,7 @@\n \n (define_expand \"neon_vclz<mode>\"\n   [(match_operand:VDQIW 0 \"s_register_operand\" \"\")\n-   (match_operand:VDQIW 1 \"s_register_operand\" \"\")\n-   (match_operand:SI 2 \"immediate_operand\" \"\")]\n+   (match_operand:VDQIW 1 \"s_register_operand\" \"\")]\n   \"TARGET_NEON\"\n {\n   emit_insn (gen_clz<mode>2 (operands[0], operands[1]));\n@@ -2663,8 +2590,7 @@\n \n (define_expand \"neon_vcnt<mode>\"\n   [(match_operand:VE 0 \"s_register_operand\" \"=w\")\n-   (match_operand:VE 1 \"s_register_operand\" \"w\")\n-   (match_operand:SI 2 \"immediate_operand\" \"i\")]\n+   (match_operand:VE 1 \"s_register_operand\" \"w\")]\n   \"TARGET_NEON\"\n {\n   emit_insn (gen_popcount<mode>2 (operands[0], operands[1]));\n@@ -2673,8 +2599,7 @@\n \n (define_insn \"neon_vrecpe<mode>\"\n   [(set (match_operand:V32 0 \"s_register_operand\" \"=w\")\n-\t(unspec:V32 [(match_operand:V32 1 \"s_register_operand\" \"w\")\n-                     (match_operand:SI 2 \"immediate_operand\" \"i\")]\n+\t(unspec:V32 [(match_operand:V32 1 \"s_register_operand\" \"w\")]\n                     UNSPEC_VRECPE))]\n   \"TARGET_NEON\"\n   \"vrecpe.<V_u_elem>\\t%<V_reg>0, %<V_reg>1\"\n@@ -2683,8 +2608,7 @@\n \n (define_insn \"neon_vrsqrte<mode>\"\n   [(set (match_operand:V32 0 \"s_register_operand\" \"=w\")\n-\t(unspec:V32 [(match_operand:V32 1 \"s_register_operand\" \"w\")\n-                     (match_operand:SI 2 \"immediate_operand\" \"i\")]\n+\t(unspec:V32 [(match_operand:V32 1 \"s_register_operand\" \"w\")]\n                     UNSPEC_VRSQRTE))]\n   \"TARGET_NEON\"\n   \"vrsqrte.<V_u_elem>\\t%<V_reg>0, %<V_reg>1\"\n@@ -2693,8 +2617,7 @@\n \n (define_expand \"neon_vmvn<mode>\"\n   [(match_operand:VDQIW 0 \"s_register_operand\" \"\")\n-   (match_operand:VDQIW 1 \"s_register_operand\" \"\")\n-   (match_operand:SI 2 \"immediate_operand\" \"\")]\n+   (match_operand:VDQIW 1 \"s_register_operand\" \"\")]\n   \"TARGET_NEON\"\n {\n   emit_insn (gen_one_cmpl<mode>2 (operands[0], operands[1]));\n@@ -2796,13 +2719,9 @@\n (define_expand \"neon_vget_lane<mode>\"\n   [(match_operand:<V_ext> 0 \"s_register_operand\" \"\")\n    (match_operand:VDQW 1 \"s_register_operand\" \"\")\n-   (match_operand:SI 2 \"immediate_operand\" \"\")\n-   (match_operand:SI 3 \"immediate_operand\" \"\")]\n+   (match_operand:SI 2 \"immediate_operand\" \"\")]\n   \"TARGET_NEON\"\n {\n-  HOST_WIDE_INT magic = INTVAL (operands[3]);\n-  rtx insn;\n-\n   neon_lane_bounds (operands[2], 0, GET_MODE_NUNITS (<MODE>mode));\n \n   if (BYTES_BIG_ENDIAN)\n@@ -2819,29 +2738,50 @@\n       operands[2] = GEN_INT (elt);\n     }\n \n-  if ((magic & 3) == 3 || GET_MODE_BITSIZE (GET_MODE_INNER (<MODE>mode)) == 32)\n-    insn = gen_vec_extract<mode> (operands[0], operands[1], operands[2]);\n+  if (GET_MODE_BITSIZE (GET_MODE_INNER (<MODE>mode)) == 32)\n+    emit_insn (gen_vec_extract<mode> (operands[0], operands[1], operands[2]));\n   else\n+    emit_insn (gen_neon_vget_lane<mode>_sext_internal (operands[0],\n+\t\t\t\t\t\t       operands[1],\n+\t\t\t\t\t\t       operands[2]));\n+  DONE;\n+})\n+\n+(define_expand \"neon_vget_laneu<mode>\"\n+  [(match_operand:<V_ext> 0 \"s_register_operand\" \"\")\n+   (match_operand:VDQIW 1 \"s_register_operand\" \"\")\n+   (match_operand:SI 2 \"immediate_operand\" \"\")]\n+  \"TARGET_NEON\"\n+{\n+  neon_lane_bounds (operands[2], 0, GET_MODE_NUNITS (<MODE>mode));\n+\n+  if (BYTES_BIG_ENDIAN)\n     {\n-      if ((magic & 1) != 0)\n-\tinsn = gen_neon_vget_lane<mode>_sext_internal (operands[0], operands[1],\n-\t\t\t\t\t\t       operands[2]);\n-      else\n-\tinsn = gen_neon_vget_lane<mode>_zext_internal (operands[0], operands[1],\n-\t\t\t\t\t\t       operands[2]);\n+      /* The intrinsics are defined in terms of a model where the\n+\t element ordering in memory is vldm order, whereas the generic\n+\t RTL is defined in terms of a model where the element ordering\n+\t in memory is array order.  Convert the lane number to conform\n+\t to this model.  */\n+      unsigned int elt = INTVAL (operands[2]);\n+      unsigned int reg_nelts\n+\t= 64 / GET_MODE_BITSIZE (GET_MODE_INNER (<MODE>mode));\n+      elt ^= reg_nelts - 1;\n+      operands[2] = GEN_INT (elt);\n     }\n-  emit_insn (insn);\n+\n+  if (GET_MODE_BITSIZE (GET_MODE_INNER (<MODE>mode)) == 32)\n+    emit_insn (gen_vec_extract<mode> (operands[0], operands[1], operands[2]));\n+  else\n+    emit_insn (gen_neon_vget_lane<mode>_zext_internal (operands[0],\n+\t\t\t\t\t\t       operands[1],\n+\t\t\t\t\t\t       operands[2]));\n   DONE;\n })\n \n-; Operand 3 (info word) is ignored because it does nothing useful with 64-bit\n-; elements.\n-\n (define_expand \"neon_vget_lanedi\"\n   [(match_operand:DI 0 \"s_register_operand\" \"=r\")\n    (match_operand:DI 1 \"s_register_operand\" \"w\")\n-   (match_operand:SI 2 \"immediate_operand\" \"i\")\n-   (match_operand:SI 3 \"immediate_operand\" \"i\")]\n+   (match_operand:SI 2 \"immediate_operand\" \"\")]\n   \"TARGET_NEON\"\n {\n   neon_lane_bounds (operands[2], 0, 1);\n@@ -2852,8 +2792,7 @@\n (define_expand \"neon_vget_lanev2di\"\n   [(match_operand:DI 0 \"s_register_operand\" \"\")\n    (match_operand:V2DI 1 \"s_register_operand\" \"\")\n-   (match_operand:SI 2 \"immediate_operand\" \"\")\n-   (match_operand:SI 3 \"immediate_operand\" \"\")]\n+   (match_operand:SI 2 \"immediate_operand\" \"\")]\n   \"TARGET_NEON\"\n {\n   switch (INTVAL (operands[2]))\n@@ -3110,23 +3049,21 @@\n   [(set_attr \"type\" \"neon_fp_to_int_<V_elem_ch><q>\")]\n )\n \n-(define_insn \"neon_vcvt<mode>\"\n+(define_insn \"neon_vcvt<sup><mode>\"\n   [(set (match_operand:<V_CVTTO> 0 \"s_register_operand\" \"=w\")\n-\t(unspec:<V_CVTTO> [(match_operand:VCVTF 1 \"s_register_operand\" \"w\")\n-\t\t\t   (match_operand:SI 2 \"immediate_operand\" \"i\")]\n-\t\t\t  UNSPEC_VCVT))]\n+\t(unspec:<V_CVTTO> [(match_operand:VCVTF 1 \"s_register_operand\" \"w\")]\n+\t\t\t  VCVT_US))]\n   \"TARGET_NEON\"\n-  \"vcvt.%T2%#32.f32\\t%<V_reg>0, %<V_reg>1\"\n+  \"vcvt.<sup>%#32.f32\\t%<V_reg>0, %<V_reg>1\"\n   [(set_attr \"type\" \"neon_fp_to_int_<V_elem_ch><q>\")]\n )\n \n-(define_insn \"neon_vcvt<mode>\"\n+(define_insn \"neon_vcvt<sup><mode>\"\n   [(set (match_operand:<V_CVTTO> 0 \"s_register_operand\" \"=w\")\n-\t(unspec:<V_CVTTO> [(match_operand:VCVTI 1 \"s_register_operand\" \"w\")\n-\t\t\t   (match_operand:SI 2 \"immediate_operand\" \"i\")]\n-\t\t\t  UNSPEC_VCVT))]\n+\t(unspec:<V_CVTTO> [(match_operand:VCVTI 1 \"s_register_operand\" \"w\")]\n+\t\t\t  VCVT_US))]\n   \"TARGET_NEON\"\n-  \"vcvt.f32.%T2%#32\\t%<V_reg>0, %<V_reg>1\"\n+  \"vcvt.f32.<sup>%#32\\t%<V_reg>0, %<V_reg>1\"\n   [(set_attr \"type\" \"neon_int_to_fp_<V_elem_ch><q>\")]\n )\n \n@@ -3148,71 +3085,65 @@\n   [(set_attr \"type\" \"neon_fp_cvt_narrow_s_q\")]\n )\n \n-(define_insn \"neon_vcvt_n<mode>\"\n+(define_insn \"neon_vcvt<sup>_n<mode>\"\n   [(set (match_operand:<V_CVTTO> 0 \"s_register_operand\" \"=w\")\n \t(unspec:<V_CVTTO> [(match_operand:VCVTF 1 \"s_register_operand\" \"w\")\n-\t\t\t   (match_operand:SI 2 \"immediate_operand\" \"i\")\n-                           (match_operand:SI 3 \"immediate_operand\" \"i\")]\n-\t\t\t  UNSPEC_VCVT_N))]\n+\t\t\t   (match_operand:SI 2 \"immediate_operand\" \"i\")]\n+\t\t\t  VCVT_US_N))]\n   \"TARGET_NEON\"\n {\n   neon_const_bounds (operands[2], 1, 33);\n-  return \"vcvt.%T3%#32.f32\\t%<V_reg>0, %<V_reg>1, %2\";\n+  return \"vcvt.<sup>%#32.f32\\t%<V_reg>0, %<V_reg>1, %2\";\n }\n   [(set_attr \"type\" \"neon_fp_to_int_<V_elem_ch><q>\")]\n )\n \n-(define_insn \"neon_vcvt_n<mode>\"\n+(define_insn \"neon_vcvt<sup>_n<mode>\"\n   [(set (match_operand:<V_CVTTO> 0 \"s_register_operand\" \"=w\")\n \t(unspec:<V_CVTTO> [(match_operand:VCVTI 1 \"s_register_operand\" \"w\")\n-\t\t\t   (match_operand:SI 2 \"immediate_operand\" \"i\")\n-                           (match_operand:SI 3 \"immediate_operand\" \"i\")]\n-\t\t\t  UNSPEC_VCVT_N))]\n+\t\t\t   (match_operand:SI 2 \"immediate_operand\" \"i\")]\n+\t\t\t  VCVT_US_N))]\n   \"TARGET_NEON\"\n {\n   neon_const_bounds (operands[2], 1, 33);\n-  return \"vcvt.f32.%T3%#32\\t%<V_reg>0, %<V_reg>1, %2\";\n+  return \"vcvt.f32.<sup>%#32\\t%<V_reg>0, %<V_reg>1, %2\";\n }\n   [(set_attr \"type\" \"neon_int_to_fp_<V_elem_ch><q>\")]\n )\n \n (define_insn \"neon_vmovn<mode>\"\n   [(set (match_operand:<V_narrow> 0 \"s_register_operand\" \"=w\")\n-\t(unspec:<V_narrow> [(match_operand:VN 1 \"s_register_operand\" \"w\")\n-\t\t\t    (match_operand:SI 2 \"immediate_operand\" \"i\")]\n+\t(unspec:<V_narrow> [(match_operand:VN 1 \"s_register_operand\" \"w\")]\n                            UNSPEC_VMOVN))]\n   \"TARGET_NEON\"\n   \"vmovn.<V_if_elem>\\t%P0, %q1\"\n   [(set_attr \"type\" \"neon_shift_imm_narrow_q\")]\n )\n \n-(define_insn \"neon_vqmovn<mode>\"\n+(define_insn \"neon_vqmovn<sup><mode>\"\n   [(set (match_operand:<V_narrow> 0 \"s_register_operand\" \"=w\")\n-\t(unspec:<V_narrow> [(match_operand:VN 1 \"s_register_operand\" \"w\")\n-\t\t\t    (match_operand:SI 2 \"immediate_operand\" \"i\")]\n-                           UNSPEC_VQMOVN))]\n+\t(unspec:<V_narrow> [(match_operand:VN 1 \"s_register_operand\" \"w\")]\n+                           VQMOVN))]\n   \"TARGET_NEON\"\n-  \"vqmovn.%T2%#<V_sz_elem>\\t%P0, %q1\"\n+  \"vqmovn.<sup>%#<V_sz_elem>\\t%P0, %q1\"\n   [(set_attr \"type\" \"neon_sat_shift_imm_narrow_q\")]\n )\n \n (define_insn \"neon_vqmovun<mode>\"\n   [(set (match_operand:<V_narrow> 0 \"s_register_operand\" \"=w\")\n-\t(unspec:<V_narrow> [(match_operand:VN 1 \"s_register_operand\" \"w\")\n-\t\t\t    (match_operand:SI 2 \"immediate_operand\" \"i\")]\n+\t(unspec:<V_narrow> [(match_operand:VN 1 \"s_register_operand\" \"w\")]\n                            UNSPEC_VQMOVUN))]\n   \"TARGET_NEON\"\n   \"vqmovun.<V_s_elem>\\t%P0, %q1\"\n   [(set_attr \"type\" \"neon_sat_shift_imm_narrow_q\")]\n )\n \n-(define_insn \"neon_vmovl<mode>\"\n+(define_insn \"neon_vmovl<sup><mode>\"\n   [(set (match_operand:<V_widen> 0 \"s_register_operand\" \"=w\")\n-\t(unspec:<V_widen> [(match_operand:VW 1 \"s_register_operand\" \"w\")\n-\t\t\t   (match_operand:SI 2 \"immediate_operand\" \"i\")]\n-                          UNSPEC_VMOVL))]\n+\t(unspec:<V_widen> [(match_operand:VW 1 \"s_register_operand\" \"w\")]\n+                          VMOVL))]\n   \"TARGET_NEON\"\n-  \"vmovl.%T2%#<V_sz_elem>\\t%q0, %P1\"\n+  \"vmovl.<sup>%#<V_sz_elem>\\t%q0, %P1\"\n   [(set_attr \"type\" \"neon_shift_imm_long\")]\n )\n \n@@ -3221,8 +3152,7 @@\n \t(unspec:VMD [(match_operand:VMD 1 \"s_register_operand\" \"w\")\n \t\t     (match_operand:VMD 2 \"s_register_operand\"\n                                         \"<scalar_mul_constraint>\")\n-                     (match_operand:SI 3 \"immediate_operand\" \"i\")\n-                     (match_operand:SI 4 \"immediate_operand\" \"i\")]\n+                     (match_operand:SI 3 \"immediate_operand\" \"i\")]\n                     UNSPEC_VMUL_LANE))]\n   \"TARGET_NEON\"\n {\n@@ -3240,8 +3170,7 @@\n \t(unspec:VMQ [(match_operand:VMQ 1 \"s_register_operand\" \"w\")\n \t\t     (match_operand:<V_HALF> 2 \"s_register_operand\"\n                                              \"<scalar_mul_constraint>\")\n-                     (match_operand:SI 3 \"immediate_operand\" \"i\")\n-                     (match_operand:SI 4 \"immediate_operand\" \"i\")]\n+                     (match_operand:SI 3 \"immediate_operand\" \"i\")]\n                     UNSPEC_VMUL_LANE))]\n   \"TARGET_NEON\"\n {\n@@ -3254,18 +3183,17 @@\n                    (const_string \"neon_mul_<V_elem_ch>_scalar<q>\")))]\n )\n \n-(define_insn \"neon_vmull_lane<mode>\"\n+(define_insn \"neon_vmull<sup>_lane<mode>\"\n   [(set (match_operand:<V_widen> 0 \"s_register_operand\" \"=w\")\n \t(unspec:<V_widen> [(match_operand:VMDI 1 \"s_register_operand\" \"w\")\n \t\t           (match_operand:VMDI 2 \"s_register_operand\"\n \t\t\t\t\t       \"<scalar_mul_constraint>\")\n-                           (match_operand:SI 3 \"immediate_operand\" \"i\")\n-                           (match_operand:SI 4 \"immediate_operand\" \"i\")]\n-                          UNSPEC_VMULL_LANE))]\n+                           (match_operand:SI 3 \"immediate_operand\" \"i\")]\n+                          VMULL_LANE))]\n   \"TARGET_NEON\"\n {\n   neon_lane_bounds (operands[3], 0, GET_MODE_NUNITS (<MODE>mode));\n-  return \"vmull.%T4%#<V_sz_elem>\\t%q0, %P1, %P2[%c3]\";\n+  return \"vmull.<sup>%#<V_sz_elem>\\t%q0, %P1, %P2[%c3]\";\n }\n   [(set_attr \"type\" \"neon_mul_<V_elem_ch>_scalar_long\")]\n )\n@@ -3275,8 +3203,7 @@\n \t(unspec:<V_widen> [(match_operand:VMDI 1 \"s_register_operand\" \"w\")\n \t\t           (match_operand:VMDI 2 \"s_register_operand\"\n \t\t\t\t\t       \"<scalar_mul_constraint>\")\n-                           (match_operand:SI 3 \"immediate_operand\" \"i\")\n-                           (match_operand:SI 4 \"immediate_operand\" \"i\")]\n+                           (match_operand:SI 3 \"immediate_operand\" \"i\")]\n                           UNSPEC_VQDMULL_LANE))]\n   \"TARGET_NEON\"\n {\n@@ -3286,34 +3213,32 @@\n   [(set_attr \"type\" \"neon_sat_mul_<V_elem_ch>_scalar_long\")]\n )\n \n-(define_insn \"neon_vqdmulh_lane<mode>\"\n+(define_insn \"neon_vq<r>dmulh_lane<mode>\"\n   [(set (match_operand:VMQI 0 \"s_register_operand\" \"=w\")\n \t(unspec:VMQI [(match_operand:VMQI 1 \"s_register_operand\" \"w\")\n \t\t      (match_operand:<V_HALF> 2 \"s_register_operand\"\n \t\t\t\t\t      \"<scalar_mul_constraint>\")\n-                      (match_operand:SI 3 \"immediate_operand\" \"i\")\n-                      (match_operand:SI 4 \"immediate_operand\" \"i\")]\n-                      UNSPEC_VQDMULH_LANE))]\n+                      (match_operand:SI 3 \"immediate_operand\" \"i\")]\n+                      VQDMULH_LANE))]\n   \"TARGET_NEON\"\n {\n   neon_lane_bounds (operands[3], 0, GET_MODE_NUNITS (<MODE>mode));\n-  return \"vq%O4dmulh.%T4%#<V_sz_elem>\\t%q0, %q1, %P2[%c3]\";\n+  return \"vq<r>dmulh.<V_s_elem>\\t%q0, %q1, %P2[%c3]\";\n }\n   [(set_attr \"type\" \"neon_sat_mul_<V_elem_ch>_scalar_q\")]\n )\n \n-(define_insn \"neon_vqdmulh_lane<mode>\"\n+(define_insn \"neon_vq<r>dmulh_lane<mode>\"\n   [(set (match_operand:VMDI 0 \"s_register_operand\" \"=w\")\n \t(unspec:VMDI [(match_operand:VMDI 1 \"s_register_operand\" \"w\")\n \t\t      (match_operand:VMDI 2 \"s_register_operand\"\n \t\t\t\t\t  \"<scalar_mul_constraint>\")\n-                      (match_operand:SI 3 \"immediate_operand\" \"i\")\n-                      (match_operand:SI 4 \"immediate_operand\" \"i\")]\n-                      UNSPEC_VQDMULH_LANE))]\n+                      (match_operand:SI 3 \"immediate_operand\" \"i\")]\n+                      VQDMULH_LANE))]\n   \"TARGET_NEON\"\n {\n   neon_lane_bounds (operands[3], 0, GET_MODE_NUNITS (<MODE>mode));\n-  return \"vq%O4dmulh.%T4%#<V_sz_elem>\\t%P0, %P1, %P2[%c3]\";\n+  return \"vq<r>dmulh.<V_s_elem>\\t%P0, %P1, %P2[%c3]\";\n }\n   [(set_attr \"type\" \"neon_sat_mul_<V_elem_ch>_scalar_q\")]\n )\n@@ -3324,8 +3249,7 @@\n \t\t     (match_operand:VMD 2 \"s_register_operand\" \"w\")\n                      (match_operand:VMD 3 \"s_register_operand\"\n \t\t\t\t\t\"<scalar_mul_constraint>\")\n-                     (match_operand:SI 4 \"immediate_operand\" \"i\")\n-                     (match_operand:SI 5 \"immediate_operand\" \"i\")]\n+                     (match_operand:SI 4 \"immediate_operand\" \"i\")]\n                      UNSPEC_VMLA_LANE))]\n   \"TARGET_NEON\"\n {\n@@ -3344,8 +3268,7 @@\n \t\t     (match_operand:VMQ 2 \"s_register_operand\" \"w\")\n                      (match_operand:<V_HALF> 3 \"s_register_operand\"\n \t\t\t\t\t     \"<scalar_mul_constraint>\")\n-                     (match_operand:SI 4 \"immediate_operand\" \"i\")\n-                     (match_operand:SI 5 \"immediate_operand\" \"i\")]\n+                     (match_operand:SI 4 \"immediate_operand\" \"i\")]\n                      UNSPEC_VMLA_LANE))]\n   \"TARGET_NEON\"\n {\n@@ -3358,19 +3281,18 @@\n                    (const_string \"neon_mla_<V_elem_ch>_scalar<q>\")))]\n )\n \n-(define_insn \"neon_vmlal_lane<mode>\"\n+(define_insn \"neon_vmlal<sup>_lane<mode>\"\n   [(set (match_operand:<V_widen> 0 \"s_register_operand\" \"=w\")\n \t(unspec:<V_widen> [(match_operand:<V_widen> 1 \"s_register_operand\" \"0\")\n \t\t\t   (match_operand:VMDI 2 \"s_register_operand\" \"w\")\n                            (match_operand:VMDI 3 \"s_register_operand\"\n \t\t\t\t\t       \"<scalar_mul_constraint>\")\n-                           (match_operand:SI 4 \"immediate_operand\" \"i\")\n-                           (match_operand:SI 5 \"immediate_operand\" \"i\")]\n-                          UNSPEC_VMLAL_LANE))]\n+                           (match_operand:SI 4 \"immediate_operand\" \"i\")]\n+                          VMLAL_LANE))]\n   \"TARGET_NEON\"\n {\n   neon_lane_bounds (operands[4], 0, GET_MODE_NUNITS (<MODE>mode));\n-  return \"vmlal.%T5%#<V_sz_elem>\\t%q0, %P2, %P3[%c4]\";\n+  return \"vmlal.<sup>%#<V_sz_elem>\\t%q0, %P2, %P3[%c4]\";\n }\n   [(set_attr \"type\" \"neon_mla_<V_elem_ch>_scalar_long\")]\n )\n@@ -3381,8 +3303,7 @@\n \t\t\t   (match_operand:VMDI 2 \"s_register_operand\" \"w\")\n                            (match_operand:VMDI 3 \"s_register_operand\"\n \t\t\t\t\t       \"<scalar_mul_constraint>\")\n-                           (match_operand:SI 4 \"immediate_operand\" \"i\")\n-                           (match_operand:SI 5 \"immediate_operand\" \"i\")]\n+                           (match_operand:SI 4 \"immediate_operand\" \"i\")]\n                           UNSPEC_VQDMLAL_LANE))]\n   \"TARGET_NEON\"\n {\n@@ -3398,8 +3319,7 @@\n \t\t     (match_operand:VMD 2 \"s_register_operand\" \"w\")\n                      (match_operand:VMD 3 \"s_register_operand\"\n \t\t\t\t\t\"<scalar_mul_constraint>\")\n-                     (match_operand:SI 4 \"immediate_operand\" \"i\")\n-                     (match_operand:SI 5 \"immediate_operand\" \"i\")]\n+                     (match_operand:SI 4 \"immediate_operand\" \"i\")]\n                     UNSPEC_VMLS_LANE))]\n   \"TARGET_NEON\"\n {\n@@ -3418,8 +3338,7 @@\n \t\t     (match_operand:VMQ 2 \"s_register_operand\" \"w\")\n                      (match_operand:<V_HALF> 3 \"s_register_operand\"\n \t\t\t\t\t     \"<scalar_mul_constraint>\")\n-                     (match_operand:SI 4 \"immediate_operand\" \"i\")\n-                     (match_operand:SI 5 \"immediate_operand\" \"i\")]\n+                     (match_operand:SI 4 \"immediate_operand\" \"i\")]\n                     UNSPEC_VMLS_LANE))]\n   \"TARGET_NEON\"\n {\n@@ -3432,19 +3351,18 @@\n                    (const_string \"neon_mla_<V_elem_ch>_scalar<q>\")))]\n )\n \n-(define_insn \"neon_vmlsl_lane<mode>\"\n+(define_insn \"neon_vmlsl<sup>_lane<mode>\"\n   [(set (match_operand:<V_widen> 0 \"s_register_operand\" \"=w\")\n \t(unspec:<V_widen> [(match_operand:<V_widen> 1 \"s_register_operand\" \"0\")\n \t\t\t   (match_operand:VMDI 2 \"s_register_operand\" \"w\")\n                            (match_operand:VMDI 3 \"s_register_operand\"\n \t\t\t\t\t       \"<scalar_mul_constraint>\")\n-                           (match_operand:SI 4 \"immediate_operand\" \"i\")\n-                           (match_operand:SI 5 \"immediate_operand\" \"i\")]\n-                          UNSPEC_VMLSL_LANE))]\n+                           (match_operand:SI 4 \"immediate_operand\" \"i\")]\n+                          VMLSL_LANE))]\n   \"TARGET_NEON\"\n {\n   neon_lane_bounds (operands[4], 0, GET_MODE_NUNITS (<MODE>mode));\n-  return \"vmlsl.%T5%#<V_sz_elem>\\t%q0, %P2, %P3[%c4]\";\n+  return \"vmlsl.<sup>%#<V_sz_elem>\\t%q0, %P2, %P3[%c4]\";\n }\n   [(set_attr \"type\" \"neon_mla_<V_elem_ch>_scalar_long\")]\n )\n@@ -3455,8 +3373,7 @@\n \t\t\t   (match_operand:VMDI 2 \"s_register_operand\" \"w\")\n                            (match_operand:VMDI 3 \"s_register_operand\"\n \t\t\t\t\t       \"<scalar_mul_constraint>\")\n-                           (match_operand:SI 4 \"immediate_operand\" \"i\")\n-                           (match_operand:SI 5 \"immediate_operand\" \"i\")]\n+                           (match_operand:SI 4 \"immediate_operand\" \"i\")]\n                           UNSPEC_VQDMLSL_LANE))]\n   \"TARGET_NEON\"\n {\n@@ -3476,204 +3393,257 @@\n (define_expand \"neon_vmul_n<mode>\"\n   [(match_operand:VMD 0 \"s_register_operand\" \"\")\n    (match_operand:VMD 1 \"s_register_operand\" \"\")\n-   (match_operand:<V_elem> 2 \"s_register_operand\" \"\")\n-   (match_operand:SI 3 \"immediate_operand\" \"\")]\n+   (match_operand:<V_elem> 2 \"s_register_operand\" \"\")]\n   \"TARGET_NEON\"\n {\n   rtx tmp = gen_reg_rtx (<MODE>mode);\n   emit_insn (gen_neon_vset_lane<mode> (tmp, operands[2], tmp, const0_rtx));\n   emit_insn (gen_neon_vmul_lane<mode> (operands[0], operands[1], tmp,\n-\t\t\t\t       const0_rtx, const0_rtx));\n+\t\t\t\t       const0_rtx));\n   DONE;\n })\n \n (define_expand \"neon_vmul_n<mode>\"\n   [(match_operand:VMQ 0 \"s_register_operand\" \"\")\n    (match_operand:VMQ 1 \"s_register_operand\" \"\")\n-   (match_operand:<V_elem> 2 \"s_register_operand\" \"\")\n-   (match_operand:SI 3 \"immediate_operand\" \"\")]\n+   (match_operand:<V_elem> 2 \"s_register_operand\" \"\")]\n   \"TARGET_NEON\"\n {\n   rtx tmp = gen_reg_rtx (<V_HALF>mode);\n   emit_insn (gen_neon_vset_lane<V_half> (tmp, operands[2], tmp, const0_rtx));\n   emit_insn (gen_neon_vmul_lane<mode> (operands[0], operands[1], tmp,\n-\t\t\t\t       const0_rtx, const0_rtx));\n+\t\t\t\t       const0_rtx));\n   DONE;\n })\n \n-(define_expand \"neon_vmull_n<mode>\"\n+(define_expand \"neon_vmulls_n<mode>\"\n   [(match_operand:<V_widen> 0 \"s_register_operand\" \"\")\n    (match_operand:VMDI 1 \"s_register_operand\" \"\")\n-   (match_operand:<V_elem> 2 \"s_register_operand\" \"\")\n-   (match_operand:SI 3 \"immediate_operand\" \"\")]\n+   (match_operand:<V_elem> 2 \"s_register_operand\" \"\")]\n   \"TARGET_NEON\"\n {\n   rtx tmp = gen_reg_rtx (<MODE>mode);\n   emit_insn (gen_neon_vset_lane<mode> (tmp, operands[2], tmp, const0_rtx));\n-  emit_insn (gen_neon_vmull_lane<mode> (operands[0], operands[1], tmp,\n-\t\t\t\t        const0_rtx, operands[3]));\n+  emit_insn (gen_neon_vmulls_lane<mode> (operands[0], operands[1], tmp,\n+\t\t\t\t\t const0_rtx));\n+  DONE;\n+})\n+\n+(define_expand \"neon_vmullu_n<mode>\"\n+  [(match_operand:<V_widen> 0 \"s_register_operand\" \"\")\n+   (match_operand:VMDI 1 \"s_register_operand\" \"\")\n+   (match_operand:<V_elem> 2 \"s_register_operand\" \"\")]\n+  \"TARGET_NEON\"\n+{\n+  rtx tmp = gen_reg_rtx (<MODE>mode);\n+  emit_insn (gen_neon_vset_lane<mode> (tmp, operands[2], tmp, const0_rtx));\n+  emit_insn (gen_neon_vmullu_lane<mode> (operands[0], operands[1], tmp,\n+\t\t\t\t\t const0_rtx));\n   DONE;\n })\n \n (define_expand \"neon_vqdmull_n<mode>\"\n   [(match_operand:<V_widen> 0 \"s_register_operand\" \"\")\n    (match_operand:VMDI 1 \"s_register_operand\" \"\")\n-   (match_operand:<V_elem> 2 \"s_register_operand\" \"\")\n-   (match_operand:SI 3 \"immediate_operand\" \"\")]\n+   (match_operand:<V_elem> 2 \"s_register_operand\" \"\")]\n   \"TARGET_NEON\"\n {\n   rtx tmp = gen_reg_rtx (<MODE>mode);\n   emit_insn (gen_neon_vset_lane<mode> (tmp, operands[2], tmp, const0_rtx));\n   emit_insn (gen_neon_vqdmull_lane<mode> (operands[0], operands[1], tmp,\n-\t\t\t\t          const0_rtx, const0_rtx));\n+\t\t\t\t          const0_rtx));\n   DONE;\n })\n \n (define_expand \"neon_vqdmulh_n<mode>\"\n   [(match_operand:VMDI 0 \"s_register_operand\" \"\")\n    (match_operand:VMDI 1 \"s_register_operand\" \"\")\n-   (match_operand:<V_elem> 2 \"s_register_operand\" \"\")\n-   (match_operand:SI 3 \"immediate_operand\" \"\")]\n+   (match_operand:<V_elem> 2 \"s_register_operand\" \"\")]\n   \"TARGET_NEON\"\n {\n   rtx tmp = gen_reg_rtx (<MODE>mode);\n   emit_insn (gen_neon_vset_lane<mode> (tmp, operands[2], tmp, const0_rtx));\n   emit_insn (gen_neon_vqdmulh_lane<mode> (operands[0], operands[1], tmp,\n-\t\t\t\t          const0_rtx, operands[3]));\n+\t\t\t\t          const0_rtx));\n+  DONE;\n+})\n+\n+(define_expand \"neon_vqrdmulh_n<mode>\"\n+  [(match_operand:VMDI 0 \"s_register_operand\" \"\")\n+   (match_operand:VMDI 1 \"s_register_operand\" \"\")\n+   (match_operand:<V_elem> 2 \"s_register_operand\" \"\")]\n+  \"TARGET_NEON\"\n+{\n+  rtx tmp = gen_reg_rtx (<MODE>mode);\n+  emit_insn (gen_neon_vset_lane<mode> (tmp, operands[2], tmp, const0_rtx));\n+  emit_insn (gen_neon_vqrdmulh_lane<mode> (operands[0], operands[1], tmp,\n+\t\t\t\t          const0_rtx));\n   DONE;\n })\n \n (define_expand \"neon_vqdmulh_n<mode>\"\n   [(match_operand:VMQI 0 \"s_register_operand\" \"\")\n    (match_operand:VMQI 1 \"s_register_operand\" \"\")\n-   (match_operand:<V_elem> 2 \"s_register_operand\" \"\")\n-   (match_operand:SI 3 \"immediate_operand\" \"\")]\n+   (match_operand:<V_elem> 2 \"s_register_operand\" \"\")]\n   \"TARGET_NEON\"\n {\n   rtx tmp = gen_reg_rtx (<V_HALF>mode);\n   emit_insn (gen_neon_vset_lane<V_half> (tmp, operands[2], tmp, const0_rtx));\n   emit_insn (gen_neon_vqdmulh_lane<mode> (operands[0], operands[1], tmp,\n-\t\t\t\t          const0_rtx, operands[3]));\n+\t\t\t\t\t  const0_rtx));\n+  DONE;\n+})\n+\n+(define_expand \"neon_vqrdmulh_n<mode>\"\n+  [(match_operand:VMQI 0 \"s_register_operand\" \"\")\n+   (match_operand:VMQI 1 \"s_register_operand\" \"\")\n+   (match_operand:<V_elem> 2 \"s_register_operand\" \"\")]\n+  \"TARGET_NEON\"\n+{\n+  rtx tmp = gen_reg_rtx (<V_HALF>mode);\n+  emit_insn (gen_neon_vset_lane<V_half> (tmp, operands[2], tmp, const0_rtx));\n+  emit_insn (gen_neon_vqrdmulh_lane<mode> (operands[0], operands[1], tmp,\n+\t\t\t\t\t   const0_rtx));\n   DONE;\n })\n \n (define_expand \"neon_vmla_n<mode>\"\n   [(match_operand:VMD 0 \"s_register_operand\" \"\")\n    (match_operand:VMD 1 \"s_register_operand\" \"\")\n    (match_operand:VMD 2 \"s_register_operand\" \"\")\n-   (match_operand:<V_elem> 3 \"s_register_operand\" \"\")\n-   (match_operand:SI 4 \"immediate_operand\" \"\")]\n+   (match_operand:<V_elem> 3 \"s_register_operand\" \"\")]\n   \"TARGET_NEON\"\n {\n   rtx tmp = gen_reg_rtx (<MODE>mode);\n   emit_insn (gen_neon_vset_lane<mode> (tmp, operands[3], tmp, const0_rtx));\n   emit_insn (gen_neon_vmla_lane<mode> (operands[0], operands[1], operands[2],\n-\t\t\t\t       tmp, const0_rtx, operands[4]));\n+\t\t\t\t       tmp, const0_rtx));\n   DONE;\n })\n \n (define_expand \"neon_vmla_n<mode>\"\n   [(match_operand:VMQ 0 \"s_register_operand\" \"\")\n    (match_operand:VMQ 1 \"s_register_operand\" \"\")\n    (match_operand:VMQ 2 \"s_register_operand\" \"\")\n-   (match_operand:<V_elem> 3 \"s_register_operand\" \"\")\n-   (match_operand:SI 4 \"immediate_operand\" \"\")]\n+   (match_operand:<V_elem> 3 \"s_register_operand\" \"\")]\n   \"TARGET_NEON\"\n {\n   rtx tmp = gen_reg_rtx (<V_HALF>mode);\n   emit_insn (gen_neon_vset_lane<V_half> (tmp, operands[3], tmp, const0_rtx));\n   emit_insn (gen_neon_vmla_lane<mode> (operands[0], operands[1], operands[2],\n-\t\t\t\t       tmp, const0_rtx, operands[4]));\n+\t\t\t\t       tmp, const0_rtx));\n   DONE;\n })\n \n-(define_expand \"neon_vmlal_n<mode>\"\n+(define_expand \"neon_vmlals_n<mode>\"\n   [(match_operand:<V_widen> 0 \"s_register_operand\" \"\")\n    (match_operand:<V_widen> 1 \"s_register_operand\" \"\")\n    (match_operand:VMDI 2 \"s_register_operand\" \"\")\n-   (match_operand:<V_elem> 3 \"s_register_operand\" \"\")\n-   (match_operand:SI 4 \"immediate_operand\" \"\")]\n+   (match_operand:<V_elem> 3 \"s_register_operand\" \"\")]\n   \"TARGET_NEON\"\n {\n   rtx tmp = gen_reg_rtx (<MODE>mode);\n   emit_insn (gen_neon_vset_lane<mode> (tmp, operands[3], tmp, const0_rtx));\n-  emit_insn (gen_neon_vmlal_lane<mode> (operands[0], operands[1], operands[2],\n-\t\t\t\t\ttmp, const0_rtx, operands[4]));\n+  emit_insn (gen_neon_vmlals_lane<mode> (operands[0], operands[1], operands[2],\n+\t\t\t\t\t tmp, const0_rtx));\n+  DONE;\n+})\n+\n+(define_expand \"neon_vmlalu_n<mode>\"\n+  [(match_operand:<V_widen> 0 \"s_register_operand\" \"\")\n+   (match_operand:<V_widen> 1 \"s_register_operand\" \"\")\n+   (match_operand:VMDI 2 \"s_register_operand\" \"\")\n+   (match_operand:<V_elem> 3 \"s_register_operand\" \"\")]\n+  \"TARGET_NEON\"\n+{\n+  rtx tmp = gen_reg_rtx (<MODE>mode);\n+  emit_insn (gen_neon_vset_lane<mode> (tmp, operands[3], tmp, const0_rtx));\n+  emit_insn (gen_neon_vmlalu_lane<mode> (operands[0], operands[1], operands[2],\n+\t\t\t\t\t tmp, const0_rtx));\n   DONE;\n })\n \n (define_expand \"neon_vqdmlal_n<mode>\"\n   [(match_operand:<V_widen> 0 \"s_register_operand\" \"\")\n    (match_operand:<V_widen> 1 \"s_register_operand\" \"\")\n    (match_operand:VMDI 2 \"s_register_operand\" \"\")\n-   (match_operand:<V_elem> 3 \"s_register_operand\" \"\")\n-   (match_operand:SI 4 \"immediate_operand\" \"\")]\n+   (match_operand:<V_elem> 3 \"s_register_operand\" \"\")]\n   \"TARGET_NEON\"\n {\n   rtx tmp = gen_reg_rtx (<MODE>mode);\n   emit_insn (gen_neon_vset_lane<mode> (tmp, operands[3], tmp, const0_rtx));\n   emit_insn (gen_neon_vqdmlal_lane<mode> (operands[0], operands[1], operands[2],\n-\t\t\t\t\t  tmp, const0_rtx, operands[4]));\n+\t\t\t\t\t  tmp, const0_rtx));\n   DONE;\n })\n \n (define_expand \"neon_vmls_n<mode>\"\n   [(match_operand:VMD 0 \"s_register_operand\" \"\")\n    (match_operand:VMD 1 \"s_register_operand\" \"\")\n    (match_operand:VMD 2 \"s_register_operand\" \"\")\n-   (match_operand:<V_elem> 3 \"s_register_operand\" \"\")\n-   (match_operand:SI 4 \"immediate_operand\" \"\")]\n+   (match_operand:<V_elem> 3 \"s_register_operand\" \"\")]\n   \"TARGET_NEON\"\n {\n   rtx tmp = gen_reg_rtx (<MODE>mode);\n   emit_insn (gen_neon_vset_lane<mode> (tmp, operands[3], tmp, const0_rtx));\n   emit_insn (gen_neon_vmls_lane<mode> (operands[0], operands[1], operands[2],\n-\t\t\t\t       tmp, const0_rtx, operands[4]));\n+\t\t\t\t       tmp, const0_rtx));\n   DONE;\n })\n \n (define_expand \"neon_vmls_n<mode>\"\n   [(match_operand:VMQ 0 \"s_register_operand\" \"\")\n    (match_operand:VMQ 1 \"s_register_operand\" \"\")\n    (match_operand:VMQ 2 \"s_register_operand\" \"\")\n-   (match_operand:<V_elem> 3 \"s_register_operand\" \"\")\n-   (match_operand:SI 4 \"immediate_operand\" \"\")]\n+   (match_operand:<V_elem> 3 \"s_register_operand\" \"\")]\n   \"TARGET_NEON\"\n {\n   rtx tmp = gen_reg_rtx (<V_HALF>mode);\n   emit_insn (gen_neon_vset_lane<V_half> (tmp, operands[3], tmp, const0_rtx));\n   emit_insn (gen_neon_vmls_lane<mode> (operands[0], operands[1], operands[2],\n-\t\t\t\t       tmp, const0_rtx, operands[4]));\n+\t\t\t\t       tmp, const0_rtx));\n+  DONE;\n+})\n+\n+(define_expand \"neon_vmlsls_n<mode>\"\n+  [(match_operand:<V_widen> 0 \"s_register_operand\" \"\")\n+   (match_operand:<V_widen> 1 \"s_register_operand\" \"\")\n+   (match_operand:VMDI 2 \"s_register_operand\" \"\")\n+   (match_operand:<V_elem> 3 \"s_register_operand\" \"\")]\n+  \"TARGET_NEON\"\n+{\n+  rtx tmp = gen_reg_rtx (<MODE>mode);\n+  emit_insn (gen_neon_vset_lane<mode> (tmp, operands[3], tmp, const0_rtx));\n+  emit_insn (gen_neon_vmlsls_lane<mode> (operands[0], operands[1], operands[2],\n+\t\t\t\t\ttmp, const0_rtx));\n   DONE;\n })\n \n-(define_expand \"neon_vmlsl_n<mode>\"\n+(define_expand \"neon_vmlslu_n<mode>\"\n   [(match_operand:<V_widen> 0 \"s_register_operand\" \"\")\n    (match_operand:<V_widen> 1 \"s_register_operand\" \"\")\n    (match_operand:VMDI 2 \"s_register_operand\" \"\")\n-   (match_operand:<V_elem> 3 \"s_register_operand\" \"\")\n-   (match_operand:SI 4 \"immediate_operand\" \"\")]\n+   (match_operand:<V_elem> 3 \"s_register_operand\" \"\")]\n   \"TARGET_NEON\"\n {\n   rtx tmp = gen_reg_rtx (<MODE>mode);\n   emit_insn (gen_neon_vset_lane<mode> (tmp, operands[3], tmp, const0_rtx));\n-  emit_insn (gen_neon_vmlsl_lane<mode> (operands[0], operands[1], operands[2],\n-\t\t\t\t\ttmp, const0_rtx, operands[4]));\n+  emit_insn (gen_neon_vmlslu_lane<mode> (operands[0], operands[1], operands[2],\n+\t\t\t\t\ttmp, const0_rtx));\n   DONE;\n })\n \n (define_expand \"neon_vqdmlsl_n<mode>\"\n   [(match_operand:<V_widen> 0 \"s_register_operand\" \"\")\n    (match_operand:<V_widen> 1 \"s_register_operand\" \"\")\n    (match_operand:VMDI 2 \"s_register_operand\" \"\")\n-   (match_operand:<V_elem> 3 \"s_register_operand\" \"\")\n-   (match_operand:SI 4 \"immediate_operand\" \"\")]\n+   (match_operand:<V_elem> 3 \"s_register_operand\" \"\")]\n   \"TARGET_NEON\"\n {\n   rtx tmp = gen_reg_rtx (<MODE>mode);\n   emit_insn (gen_neon_vset_lane<mode> (tmp, operands[3], tmp, const0_rtx));\n   emit_insn (gen_neon_vqdmlsl_lane<mode> (operands[0], operands[1], operands[2],\n-\t\t\t\t\t  tmp, const0_rtx, operands[4]));\n+\t\t\t\t\t  tmp, const0_rtx));\n   DONE;\n })\n \n@@ -3693,8 +3663,7 @@\n \n (define_insn \"neon_vrev64<mode>\"\n   [(set (match_operand:VDQ 0 \"s_register_operand\" \"=w\")\n-\t(unspec:VDQ [(match_operand:VDQ 1 \"s_register_operand\" \"w\")\n-\t\t     (match_operand:SI 2 \"immediate_operand\" \"i\")]\n+\t(unspec:VDQ [(match_operand:VDQ 1 \"s_register_operand\" \"w\")]\n                     UNSPEC_VREV64))]\n   \"TARGET_NEON\"\n   \"vrev64.<V_sz_elem>\\t%<V_reg>0, %<V_reg>1\"\n@@ -3703,8 +3672,7 @@\n \n (define_insn \"neon_vrev32<mode>\"\n   [(set (match_operand:VX 0 \"s_register_operand\" \"=w\")\n-\t(unspec:VX [(match_operand:VX 1 \"s_register_operand\" \"w\")\n-\t\t    (match_operand:SI 2 \"immediate_operand\" \"i\")]\n+\t(unspec:VX [(match_operand:VX 1 \"s_register_operand\" \"w\")]\n                    UNSPEC_VREV32))]\n   \"TARGET_NEON\"\n   \"vrev32.<V_sz_elem>\\t%<V_reg>0, %<V_reg>1\"\n@@ -3713,8 +3681,7 @@\n \n (define_insn \"neon_vrev16<mode>\"\n   [(set (match_operand:VE 0 \"s_register_operand\" \"=w\")\n-\t(unspec:VE [(match_operand:VE 1 \"s_register_operand\" \"w\")\n-\t\t    (match_operand:SI 2 \"immediate_operand\" \"i\")]\n+\t(unspec:VE [(match_operand:VE 1 \"s_register_operand\" \"w\")]\n                    UNSPEC_VREV16))]\n   \"TARGET_NEON\"\n   \"vrev16.<V_sz_elem>\\t%<V_reg>0, %<V_reg>1\"\n@@ -3755,89 +3722,88 @@\n   operands[1] = gen_lowpart (<MODE>mode, operands[1]);\n })\n \n-(define_insn \"neon_vshl<mode>\"\n+;; vshl, vrshl\n+(define_insn \"neon_v<shift_op><sup><mode>\"\n   [(set (match_operand:VDQIX 0 \"s_register_operand\" \"=w\")\n \t(unspec:VDQIX [(match_operand:VDQIX 1 \"s_register_operand\" \"w\")\n-\t\t       (match_operand:VDQIX 2 \"s_register_operand\" \"w\")\n-                       (match_operand:SI 3 \"immediate_operand\" \"i\")]\n-                      UNSPEC_VSHL))]\n+\t\t       (match_operand:VDQIX 2 \"s_register_operand\" \"w\")]\n+                      VSHL))]\n   \"TARGET_NEON\"\n-  \"v%O3shl.%T3%#<V_sz_elem>\\t%<V_reg>0, %<V_reg>1, %<V_reg>2\"\n+  \"v<shift_op>.<sup>%#<V_sz_elem>\\t%<V_reg>0, %<V_reg>1, %<V_reg>2\"\n   [(set_attr \"type\" \"neon_shift_imm<q>\")]\n )\n \n-(define_insn \"neon_vqshl<mode>\"\n+;; vqshl, vqrshl\n+(define_insn \"neon_v<shift_op><sup><mode>\"\n   [(set (match_operand:VDQIX 0 \"s_register_operand\" \"=w\")\n \t(unspec:VDQIX [(match_operand:VDQIX 1 \"s_register_operand\" \"w\")\n-\t\t       (match_operand:VDQIX 2 \"s_register_operand\" \"w\")\n-                       (match_operand:SI 3 \"immediate_operand\" \"i\")]\n-                      UNSPEC_VQSHL))]\n+\t\t       (match_operand:VDQIX 2 \"s_register_operand\" \"w\")]\n+                      VQSHL))]\n   \"TARGET_NEON\"\n-  \"vq%O3shl.%T3%#<V_sz_elem>\\t%<V_reg>0, %<V_reg>1, %<V_reg>2\"\n+  \"v<shift_op>.<sup>%#<V_sz_elem>\\t%<V_reg>0, %<V_reg>1, %<V_reg>2\"\n   [(set_attr \"type\" \"neon_sat_shift_imm<q>\")]\n )\n \n-(define_insn \"neon_vshr_n<mode>\"\n+;; vshr_n, vrshr_n\n+(define_insn \"neon_v<shift_op><sup>_n<mode>\"\n   [(set (match_operand:VDQIX 0 \"s_register_operand\" \"=w\")\n \t(unspec:VDQIX [(match_operand:VDQIX 1 \"s_register_operand\" \"w\")\n-\t\t       (match_operand:SI 2 \"immediate_operand\" \"i\")\n-                       (match_operand:SI 3 \"immediate_operand\" \"i\")]\n-                      UNSPEC_VSHR_N))]\n+\t\t       (match_operand:SI 2 \"immediate_operand\" \"i\")]\n+                      VSHR_N))]\n   \"TARGET_NEON\"\n {\n   neon_const_bounds (operands[2], 1, neon_element_bits (<MODE>mode) + 1);\n-  return \"v%O3shr.%T3%#<V_sz_elem>\\t%<V_reg>0, %<V_reg>1, %2\";\n+  return \"v<shift_op>.<sup>%#<V_sz_elem>\\t%<V_reg>0, %<V_reg>1, %2\";\n }\n   [(set_attr \"type\" \"neon_shift_imm<q>\")]\n )\n \n-(define_insn \"neon_vshrn_n<mode>\"\n+;; vshrn_n, vrshrn_n\n+(define_insn \"neon_v<shift_op>_n<mode>\"\n   [(set (match_operand:<V_narrow> 0 \"s_register_operand\" \"=w\")\n \t(unspec:<V_narrow> [(match_operand:VN 1 \"s_register_operand\" \"w\")\n-\t\t\t    (match_operand:SI 2 \"immediate_operand\" \"i\")\n-\t\t\t    (match_operand:SI 3 \"immediate_operand\" \"i\")]\n-                           UNSPEC_VSHRN_N))]\n+\t\t\t    (match_operand:SI 2 \"immediate_operand\" \"i\")]\n+                           VSHRN_N))]\n   \"TARGET_NEON\"\n {\n   neon_const_bounds (operands[2], 1, neon_element_bits (<MODE>mode) / 2 + 1);\n-  return \"v%O3shrn.<V_if_elem>\\t%P0, %q1, %2\";\n+  return \"v<shift_op>.<V_if_elem>\\t%P0, %q1, %2\";\n }\n   [(set_attr \"type\" \"neon_shift_imm_narrow_q\")]\n )\n \n-(define_insn \"neon_vqshrn_n<mode>\"\n+;; vqshrn_n, vqrshrn_n\n+(define_insn \"neon_v<shift_op><sup>_n<mode>\"\n   [(set (match_operand:<V_narrow> 0 \"s_register_operand\" \"=w\")\n \t(unspec:<V_narrow> [(match_operand:VN 1 \"s_register_operand\" \"w\")\n-\t\t\t    (match_operand:SI 2 \"immediate_operand\" \"i\")\n-\t\t\t    (match_operand:SI 3 \"immediate_operand\" \"i\")]\n-                           UNSPEC_VQSHRN_N))]\n+\t\t\t    (match_operand:SI 2 \"immediate_operand\" \"i\")]\n+                           VQSHRN_N))]\n   \"TARGET_NEON\"\n {\n   neon_const_bounds (operands[2], 1, neon_element_bits (<MODE>mode) / 2 + 1);\n-  return \"vq%O3shrn.%T3%#<V_sz_elem>\\t%P0, %q1, %2\";\n+  return \"v<shift_op>.<sup>%#<V_sz_elem>\\t%P0, %q1, %2\";\n }\n   [(set_attr \"type\" \"neon_sat_shift_imm_narrow_q\")]\n )\n \n-(define_insn \"neon_vqshrun_n<mode>\"\n+;; vqshrun_n, vqrshrun_n\n+(define_insn \"neon_v<shift_op>_n<mode>\"\n   [(set (match_operand:<V_narrow> 0 \"s_register_operand\" \"=w\")\n \t(unspec:<V_narrow> [(match_operand:VN 1 \"s_register_operand\" \"w\")\n-\t\t\t    (match_operand:SI 2 \"immediate_operand\" \"i\")\n-\t\t\t    (match_operand:SI 3 \"immediate_operand\" \"i\")]\n-                           UNSPEC_VQSHRUN_N))]\n+\t\t\t    (match_operand:SI 2 \"immediate_operand\" \"i\")]\n+                           VQSHRUN_N))]\n   \"TARGET_NEON\"\n {\n   neon_const_bounds (operands[2], 1, neon_element_bits (<MODE>mode) / 2 + 1);\n-  return \"vq%O3shrun.%T3%#<V_sz_elem>\\t%P0, %q1, %2\";\n+  return \"v<shift_op>.<V_s_elem>\\t%P0, %q1, %2\";\n }\n   [(set_attr \"type\" \"neon_sat_shift_imm_narrow_q\")]\n )\n \n (define_insn \"neon_vshl_n<mode>\"\n   [(set (match_operand:VDQIX 0 \"s_register_operand\" \"=w\")\n \t(unspec:VDQIX [(match_operand:VDQIX 1 \"s_register_operand\" \"w\")\n-\t\t       (match_operand:SI 2 \"immediate_operand\" \"i\")\n-                       (match_operand:SI 3 \"immediate_operand\" \"i\")]\n+\t\t       (match_operand:SI 2 \"immediate_operand\" \"i\")]\n                       UNSPEC_VSHL_N))]\n   \"TARGET_NEON\"\n {\n@@ -3847,60 +3813,57 @@\n   [(set_attr \"type\" \"neon_shift_imm<q>\")]\n )\n \n-(define_insn \"neon_vqshl_n<mode>\"\n+(define_insn \"neon_vqshl_<sup>_n<mode>\"\n   [(set (match_operand:VDQIX 0 \"s_register_operand\" \"=w\")\n \t(unspec:VDQIX [(match_operand:VDQIX 1 \"s_register_operand\" \"w\")\n-\t\t       (match_operand:SI 2 \"immediate_operand\" \"i\")\n-                       (match_operand:SI 3 \"immediate_operand\" \"i\")]\n-                      UNSPEC_VQSHL_N))]\n+\t\t       (match_operand:SI 2 \"immediate_operand\" \"i\")]\n+                      VQSHL_N))]\n   \"TARGET_NEON\"\n {\n   neon_const_bounds (operands[2], 0, neon_element_bits (<MODE>mode));\n-  return \"vqshl.%T3%#<V_sz_elem>\\t%<V_reg>0, %<V_reg>1, %2\";\n+  return \"vqshl.<sup>%#<V_sz_elem>\\t%<V_reg>0, %<V_reg>1, %2\";\n }\n   [(set_attr \"type\" \"neon_sat_shift_imm<q>\")]\n )\n \n (define_insn \"neon_vqshlu_n<mode>\"\n   [(set (match_operand:VDQIX 0 \"s_register_operand\" \"=w\")\n \t(unspec:VDQIX [(match_operand:VDQIX 1 \"s_register_operand\" \"w\")\n-\t\t       (match_operand:SI 2 \"immediate_operand\" \"i\")\n-                       (match_operand:SI 3 \"immediate_operand\" \"i\")]\n+\t\t       (match_operand:SI 2 \"immediate_operand\" \"i\")]\n                       UNSPEC_VQSHLU_N))]\n   \"TARGET_NEON\"\n {\n   neon_const_bounds (operands[2], 0, neon_element_bits (<MODE>mode));\n-  return \"vqshlu.%T3%#<V_sz_elem>\\t%<V_reg>0, %<V_reg>1, %2\";\n+  return \"vqshlu.<V_s_elem>\\t%<V_reg>0, %<V_reg>1, %2\";\n }\n   [(set_attr \"type\" \"neon_sat_shift_imm<q>\")]\n )\n \n-(define_insn \"neon_vshll_n<mode>\"\n+(define_insn \"neon_vshll<sup>_n<mode>\"\n   [(set (match_operand:<V_widen> 0 \"s_register_operand\" \"=w\")\n \t(unspec:<V_widen> [(match_operand:VW 1 \"s_register_operand\" \"w\")\n-\t\t\t   (match_operand:SI 2 \"immediate_operand\" \"i\")\n-\t\t\t   (match_operand:SI 3 \"immediate_operand\" \"i\")]\n-\t\t\t  UNSPEC_VSHLL_N))]\n+\t\t\t   (match_operand:SI 2 \"immediate_operand\" \"i\")]\n+\t\t\t  VSHLL_N))]\n   \"TARGET_NEON\"\n {\n   /* The boundaries are: 0 < imm <= size.  */\n   neon_const_bounds (operands[2], 0, neon_element_bits (<MODE>mode) + 1);\n-  return \"vshll.%T3%#<V_sz_elem>\\t%q0, %P1, %2\";\n+  return \"vshll.<sup>%#<V_sz_elem>\\t%q0, %P1, %2\";\n }\n   [(set_attr \"type\" \"neon_shift_imm_long\")]\n )\n \n-(define_insn \"neon_vsra_n<mode>\"\n+;; vsra_n, vrsra_n\n+(define_insn \"neon_v<shift_op><sup>_n<mode>\"\n   [(set (match_operand:VDQIX 0 \"s_register_operand\" \"=w\")\n \t(unspec:VDQIX [(match_operand:VDQIX 1 \"s_register_operand\" \"0\")\n \t\t       (match_operand:VDQIX 2 \"s_register_operand\" \"w\")\n-                       (match_operand:SI 3 \"immediate_operand\" \"i\")\n-                       (match_operand:SI 4 \"immediate_operand\" \"i\")]\n-                      UNSPEC_VSRA_N))]\n+                       (match_operand:SI 3 \"immediate_operand\" \"i\")]\n+                      VSRA_N))]\n   \"TARGET_NEON\"\n {\n   neon_const_bounds (operands[3], 1, neon_element_bits (<MODE>mode) + 1);\n-  return \"v%O4sra.%T4%#<V_sz_elem>\\t%<V_reg>0, %<V_reg>2, %3\";\n+  return \"v<shift_op>.<sup>%#<V_sz_elem>\\t%<V_reg>0, %<V_reg>2, %3\";\n }\n   [(set_attr \"type\" \"neon_shift_acc<q>\")]\n )"}, {"sha": "fcee30b62c35b4392748f15038b8c555b444bb55", "filename": "gcc/config/arm/unspecs.md", "status": "modified", "additions": 82, "deletions": 27, "changes": 109, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94f0f2ccaff7f298a21fb1daa39c720d3cbd73cb/gcc%2Fconfig%2Farm%2Funspecs.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94f0f2ccaff7f298a21fb1daa39c720d3cbd73cb/gcc%2Fconfig%2Farm%2Funspecs.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Funspecs.md?ref=94f0f2ccaff7f298a21fb1daa39c720d3cbd73cb", "patch": "@@ -173,12 +173,18 @@\n   UNSPEC_SHA256SU1\n   UNSPEC_VMULLP64\n   UNSPEC_LOAD_COUNT\n-  UNSPEC_VABD\n-  UNSPEC_VABDL\n+  UNSPEC_VABD_F\n+  UNSPEC_VABD_S\n+  UNSPEC_VABD_U\n+  UNSPEC_VABDL_S\n+  UNSPEC_VABDL_U\n   UNSPEC_VADD\n   UNSPEC_VADDHN\n-  UNSPEC_VADDL\n-  UNSPEC_VADDW\n+  UNSPEC_VRADDHN\n+  UNSPEC_VADDL_S\n+  UNSPEC_VADDL_U\n+  UNSPEC_VADDW_S\n+  UNSPEC_VADDW_U\n   UNSPEC_VBSL\n   UNSPEC_VCAGE\n   UNSPEC_VCAGT\n@@ -190,10 +196,17 @@\n   UNSPEC_VCLS\n   UNSPEC_VCONCAT\n   UNSPEC_VCVT\n-  UNSPEC_VCVT_N\n+  UNSPEC_VCVT_S\n+  UNSPEC_VCVT_U\n+  UNSPEC_VCVT_S_N\n+  UNSPEC_VCVT_U_N\n   UNSPEC_VEXT\n-  UNSPEC_VHADD\n-  UNSPEC_VHSUB\n+  UNSPEC_VHADD_S\n+  UNSPEC_VHADD_U\n+  UNSPEC_VRHADD_S\n+  UNSPEC_VRHADD_U\n+  UNSPEC_VHSUB_S\n+  UNSPEC_VHSUB_U\n   UNSPEC_VLD1\n   UNSPEC_VLD1_LANE\n   UNSPEC_VLD2\n@@ -210,63 +223,102 @@\n   UNSPEC_VLD4_DUP\n   UNSPEC_VLD4_LANE\n   UNSPEC_VMAX\n+  UNSPEC_VMAX_U\n   UNSPEC_VMIN\n+  UNSPEC_VMIN_U\n   UNSPEC_VMLA\n-  UNSPEC_VMLAL\n   UNSPEC_VMLA_LANE\n-  UNSPEC_VMLAL_LANE\n+  UNSPEC_VMLAL_S\n+  UNSPEC_VMLAL_U\n+  UNSPEC_VMLAL_S_LANE\n+  UNSPEC_VMLAL_U_LANE\n   UNSPEC_VMLS\n-  UNSPEC_VMLSL\n   UNSPEC_VMLS_LANE\n+  UNSPEC_VMLSL_S\n+  UNSPEC_VMLSL_U\n+  UNSPEC_VMLSL_S_LANE\n+  UNSPEC_VMLSL_U_LANE\n   UNSPEC_VMLSL_LANE\n-  UNSPEC_VMOVL\n+  UNSPEC_VMOVL_S\n+  UNSPEC_VMOVL_U\n   UNSPEC_VMOVN\n   UNSPEC_VMUL\n-  UNSPEC_VMULL\n+  UNSPEC_VMULL_P\n+  UNSPEC_VMULL_S\n+  UNSPEC_VMULL_U\n   UNSPEC_VMUL_LANE\n-  UNSPEC_VMULL_LANE\n-  UNSPEC_VPADAL\n+  UNSPEC_VMULL_S_LANE\n+  UNSPEC_VMULL_U_LANE\n+  UNSPEC_VPADAL_S\n+  UNSPEC_VPADAL_U\n   UNSPEC_VPADD\n-  UNSPEC_VPADDL\n+  UNSPEC_VPADDL_S\n+  UNSPEC_VPADDL_U\n   UNSPEC_VPMAX\n+  UNSPEC_VPMAX_U\n   UNSPEC_VPMIN\n+  UNSPEC_VPMIN_U\n   UNSPEC_VPSMAX\n   UNSPEC_VPSMIN\n   UNSPEC_VPUMAX\n   UNSPEC_VPUMIN\n   UNSPEC_VQABS\n-  UNSPEC_VQADD\n+  UNSPEC_VQADD_S\n+  UNSPEC_VQADD_U\n   UNSPEC_VQDMLAL\n   UNSPEC_VQDMLAL_LANE\n   UNSPEC_VQDMLSL\n   UNSPEC_VQDMLSL_LANE\n   UNSPEC_VQDMULH\n   UNSPEC_VQDMULH_LANE\n+  UNSPEC_VQRDMULH\n+  UNSPEC_VQRDMULH_LANE\n   UNSPEC_VQDMULL\n   UNSPEC_VQDMULL_LANE\n-  UNSPEC_VQMOVN\n+  UNSPEC_VQMOVN_S\n+  UNSPEC_VQMOVN_U\n   UNSPEC_VQMOVUN\n   UNSPEC_VQNEG\n-  UNSPEC_VQSHL\n-  UNSPEC_VQSHL_N\n+  UNSPEC_VQSHL_S\n+  UNSPEC_VQSHL_U\n+  UNSPEC_VQRSHL_S\n+  UNSPEC_VQRSHL_U\n+  UNSPEC_VQSHL_S_N\n+  UNSPEC_VQSHL_U_N\n   UNSPEC_VQSHLU_N\n-  UNSPEC_VQSHRN_N\n+  UNSPEC_VQSHRN_S_N\n+  UNSPEC_VQSHRN_U_N\n+  UNSPEC_VQRSHRN_S_N\n+  UNSPEC_VQRSHRN_U_N\n   UNSPEC_VQSHRUN_N\n-  UNSPEC_VQSUB\n+  UNSPEC_VQRSHRUN_N\n+  UNSPEC_VQSUB_S\n+  UNSPEC_VQSUB_U\n   UNSPEC_VRECPE\n   UNSPEC_VRECPS\n   UNSPEC_VREV16\n   UNSPEC_VREV32\n   UNSPEC_VREV64\n   UNSPEC_VRSQRTE\n   UNSPEC_VRSQRTS\n-  UNSPEC_VSHL\n-  UNSPEC_VSHLL_N\n+  UNSPEC_VSHL_S\n+  UNSPEC_VSHL_U\n+  UNSPEC_VRSHL_S\n+  UNSPEC_VRSHL_U\n+  UNSPEC_VSHLL_S_N\n+  UNSPEC_VSHLL_U_N\n   UNSPEC_VSHL_N\n-  UNSPEC_VSHR_N\n+  UNSPEC_VSHR_S_N\n+  UNSPEC_VSHR_U_N\n+  UNSPEC_VRSHR_S_N\n+  UNSPEC_VRSHR_U_N\n   UNSPEC_VSHRN_N\n+  UNSPEC_VRSHRN_N\n   UNSPEC_VSLI\n-  UNSPEC_VSRA_N\n+  UNSPEC_VSRA_S_N\n+  UNSPEC_VSRA_U_N\n+  UNSPEC_VRSRA_S_N\n+  UNSPEC_VRSRA_U_N\n   UNSPEC_VSRI\n   UNSPEC_VST1\n   UNSPEC_VST1_LANE\n@@ -283,8 +335,11 @@\n   UNSPEC_VSTRUCTDUMMY\n   UNSPEC_VSUB\n   UNSPEC_VSUBHN\n-  UNSPEC_VSUBL\n-  UNSPEC_VSUBW\n+  UNSPEC_VRSUBHN\n+  UNSPEC_VSUBL_S\n+  UNSPEC_VSUBL_U\n+  UNSPEC_VSUBW_S\n+  UNSPEC_VSUBW_U\n   UNSPEC_VTBL\n   UNSPEC_VTBX\n   UNSPEC_VTRN1"}, {"sha": "c89309680834e522e919705624a7454396ccd06c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94f0f2ccaff7f298a21fb1daa39c720d3cbd73cb/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94f0f2ccaff7f298a21fb1daa39c720d3cbd73cb/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=94f0f2ccaff7f298a21fb1daa39c720d3cbd73cb", "patch": "@@ -1,3 +1,8 @@\n+2014-11-18  James Greenhalgh  <james.greenhalgh@arm.com>\n+\n+\t* gcc.target/arm/pr51968.c (foo): Fix call to\n+\t__builtin_neon_vqmovunv8hi.\n+\n 2014-11-18  Marat Zakirov  <m.zakirov@samsung.com>\n \n \t* c-c++-common/asan/aggressive-opts.c: New test."}, {"sha": "99bdb961757bfa62aec5ef1426137425e57898b0", "filename": "gcc/testsuite/gcc.target/arm/pr51968.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94f0f2ccaff7f298a21fb1daa39c720d3cbd73cb/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr51968.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94f0f2ccaff7f298a21fb1daa39c720d3cbd73cb/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr51968.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr51968.c?ref=94f0f2ccaff7f298a21fb1daa39c720d3cbd73cb", "patch": "@@ -24,7 +24,7 @@ foo (int8x8_t z, int8x8_t x, int16x8_t b, int8x8_t n)\n       int8x16_t g;\n       int8x8_t h, j, k;\n       struct T m;\n-      j = __builtin_neon_vqmovunv8hi (b, 1);\n+      j = __builtin_neon_vqmovunv8hi (b);\n       g = __builtin_neon_vcombinev8qi (j, h);\n       k = __builtin_neon_vget_lowv16qi (g);\n       __builtin_neon_vuzpv8qi (&m.val[0], k, n);"}]}