{"sha": "4b91b67bcb6ab749f530aec156a46188a388a518", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGI5MWI2N2JjYjZhYjc0OWY1MzBhZWMxNTZhNDYxODhhMzg4YTUxOA==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@eyesopen.com", "date": "2006-04-06T16:47:40Z"}, "committer": {"name": "Roger Sayle", "email": "sayle@gcc.gnu.org", "date": "2006-04-06T16:47:40Z"}, "message": "call.c (null_ptr_cst_p): Add explicit TREE_CONSTANT_OVERFLOW check.\n\n\n\t* call.c (null_ptr_cst_p): Add explicit TREE_CONSTANT_OVERFLOW check.\n\n\t* g++.dg/conversion/nullptr1.C: New test case.\n\t* g++.dg/conversion/nullptr2.C: Likewise.\n\nFrom-SVN: r112734", "tree": {"sha": "fd7a3c08d7f0205a9ddb7c18a52a076dcc41e6f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fd7a3c08d7f0205a9ddb7c18a52a076dcc41e6f4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4b91b67bcb6ab749f530aec156a46188a388a518", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b91b67bcb6ab749f530aec156a46188a388a518", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b91b67bcb6ab749f530aec156a46188a388a518", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b91b67bcb6ab749f530aec156a46188a388a518/comments", "author": null, "committer": null, "parents": [{"sha": "06a103af0e61d634e1fa730a1865eb4e98748e72", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06a103af0e61d634e1fa730a1865eb4e98748e72", "html_url": "https://github.com/Rust-GCC/gccrs/commit/06a103af0e61d634e1fa730a1865eb4e98748e72"}], "stats": {"total": 33, "additions": 32, "deletions": 1}, "files": [{"sha": "266e34762608ac7a54766170de11d85a1ab69ccf", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b91b67bcb6ab749f530aec156a46188a388a518/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b91b67bcb6ab749f530aec156a46188a388a518/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=4b91b67bcb6ab749f530aec156a46188a388a518", "patch": "@@ -1,3 +1,7 @@\n+2006-04-06  Roger Sayle  <roger@eyesopen.com>\n+\n+\t* call.c (null_ptr_cst_p): Add explicit TREE_CONSTANT_OVERFLOW check.\n+\n 2006-04-05  Jason Merrill  <jason@redhat.com>\n \n \t* name-lookup.c (push_namespace_with_attribs): Temporarily disable"}, {"sha": "0413a9885ddb39bc987ac0d31299dcf0bfbe6ed7", "filename": "gcc/cp/call.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b91b67bcb6ab749f530aec156a46188a388a518/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b91b67bcb6ab749f530aec156a46188a388a518/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=4b91b67bcb6ab749f530aec156a46188a388a518", "patch": "@@ -427,7 +427,9 @@ null_ptr_cst_p (tree t)\n      (_expr.const_) rvalue of integer type that evaluates to zero.  */\n   t = integral_constant_value (t);\n   if (t == null_node\n-      || (CP_INTEGRAL_TYPE_P (TREE_TYPE (t)) && integer_zerop (t)))\n+      || (CP_INTEGRAL_TYPE_P (TREE_TYPE (t))\n+\t  && integer_zerop (t)\n+\t  && !TREE_CONSTANT_OVERFLOW (t)))\n     return true;\n   return false;\n }"}, {"sha": "814f957662741504f143ced09e56f435cbfd3176", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b91b67bcb6ab749f530aec156a46188a388a518/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b91b67bcb6ab749f530aec156a46188a388a518/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4b91b67bcb6ab749f530aec156a46188a388a518", "patch": "@@ -1,3 +1,8 @@\n+2006-04-06  Roger Sayle  <roger@eyesopen.com>\n+\n+\t* g++.dg/conversion/nullptr1.C: New test case.\n+\t* g++.dg/conversion/nullptr2.C: Likewise.\n+\n 2006-04-05  Roger Sayle  <roger@eyesopen.com>\n \n \t* gfortran.dg/dependency_18.f90: New test case."}, {"sha": "6230a2999ef499fbeeb35c422e879a7b62cd2634", "filename": "gcc/testsuite/g++.dg/conversion/nullptr1.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b91b67bcb6ab749f530aec156a46188a388a518/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fnullptr1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b91b67bcb6ab749f530aec156a46188a388a518/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fnullptr1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fnullptr1.C?ref=4b91b67bcb6ab749f530aec156a46188a388a518", "patch": "@@ -0,0 +1,10 @@\n+/* Test for overflow in NULL pointer constant.  */\n+/* { dg-do compile } */\n+\n+#include <limits.h>\n+\n+void *p = 0;\n+\n+void *q = 0 * (INT_MAX + 1);  // { dg-error \"invalid conversion\" }\n+\n+"}, {"sha": "74ceff49dba63c020d8906689c1f98819e164329", "filename": "gcc/testsuite/g++.dg/conversion/nullptr2.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b91b67bcb6ab749f530aec156a46188a388a518/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fnullptr2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b91b67bcb6ab749f530aec156a46188a388a518/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fnullptr2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fnullptr2.C?ref=4b91b67bcb6ab749f530aec156a46188a388a518", "patch": "@@ -0,0 +1,10 @@\n+/* Test for enumeration as NULL pointer constant.  */\n+/* PR c++/14644 */\n+/* { dg-do compile } */\n+\n+enum { NULL = 0 };\n+\n+void *p = 0;\n+\n+void *q = NULL;  // { dg-error \"cannot convert\" }\n+"}]}