{"sha": "c80476994516f9df0063bd787a5cfc8aed686c3c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzgwNDc2OTk0NTE2ZjlkZjAwNjNiZDc4N2E1Y2ZjOGFlZDY4NmMzYw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2015-04-29T08:15:52Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2015-04-29T08:15:52Z"}, "message": "tree-vect-data-refs.c (vect_analyze_group_access): Properly compute GROUP_SIZE for basic-block SLP.\n\n2015-04-29  Richard Biener  <rguenther@suse.de>\n\n\t* tree-vect-data-refs.c (vect_analyze_group_access): Properly\n\tcompute GROUP_SIZE for basic-block SLP.\n\t* tree-vect-slp.c (vect_get_place_in_interleaving_chain): Properly\n\ttake into account gaps.\n\t(vect_get_mask_element): Properly reject references to previous\n\tvectors.\n\t(vect_transform_slp_perm_load): Likewise.\n\nFrom-SVN: r222560", "tree": {"sha": "2435464918c4b85c27aa58a119d6e54feebcbdc6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2435464918c4b85c27aa58a119d6e54feebcbdc6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c80476994516f9df0063bd787a5cfc8aed686c3c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c80476994516f9df0063bd787a5cfc8aed686c3c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c80476994516f9df0063bd787a5cfc8aed686c3c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c80476994516f9df0063bd787a5cfc8aed686c3c/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b4d1725b5481fd693f078bd06e1e5b8209a89269", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4d1725b5481fd693f078bd06e1e5b8209a89269", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b4d1725b5481fd693f078bd06e1e5b8209a89269"}], "stats": {"total": 30, "additions": 27, "deletions": 3}, "files": [{"sha": "49e6d805650ab8bbf79ad3e9e42752d4c4e8555d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c80476994516f9df0063bd787a5cfc8aed686c3c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c80476994516f9df0063bd787a5cfc8aed686c3c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c80476994516f9df0063bd787a5cfc8aed686c3c", "patch": "@@ -1,3 +1,13 @@\n+2015-04-29  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-vect-data-refs.c (vect_analyze_group_access): Properly\n+\tcompute GROUP_SIZE for basic-block SLP.\n+\t* tree-vect-slp.c (vect_get_place_in_interleaving_chain): Properly\n+\ttake into account gaps.\n+\t(vect_get_mask_element): Properly reject references to previous\n+\tvectors.\n+\t(vect_transform_slp_perm_load): Likewise.\n+\n 2015-04-29  Christian Bruel  <christian.bruel@st.com>\n \n \tPR target/64835"}, {"sha": "96afc7ab68d40c3d3eb815dad84c6421229a9914", "filename": "gcc/tree-vect-data-refs.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c80476994516f9df0063bd787a5cfc8aed686c3c/gcc%2Ftree-vect-data-refs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c80476994516f9df0063bd787a5cfc8aed686c3c/gcc%2Ftree-vect-data-refs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-data-refs.c?ref=c80476994516f9df0063bd787a5cfc8aed686c3c", "patch": "@@ -2245,7 +2245,7 @@ vect_analyze_group_access (struct data_reference *dr)\n         }\n \n       if (groupsize == 0)\n-        groupsize = count;\n+        groupsize = count + gaps;\n \n       GROUP_SIZE (vinfo_for_stmt (stmt)) = groupsize;\n       if (dump_enabled_p ())"}, {"sha": "60f257b4da98a403b083e3670a4a9c9e1526da12", "filename": "gcc/tree-vect-slp.c", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c80476994516f9df0063bd787a5cfc8aed686c3c/gcc%2Ftree-vect-slp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c80476994516f9df0063bd787a5cfc8aed686c3c/gcc%2Ftree-vect-slp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-slp.c?ref=c80476994516f9df0063bd787a5cfc8aed686c3c", "patch": "@@ -223,8 +223,9 @@ vect_get_place_in_interleaving_chain (gimple stmt, gimple first_stmt)\n     {\n       if (next_stmt == stmt)\n \treturn result;\n-      result++;\n       next_stmt = GROUP_NEXT_ELEMENT (vinfo_for_stmt (next_stmt));\n+      if (next_stmt)\n+\tresult += GROUP_GAP (vinfo_for_stmt (next_stmt));\n     }\n   while (next_stmt);\n \n@@ -3008,6 +3009,18 @@ vect_get_mask_element (gimple stmt, int first_mask_element, int m,\n   /* Adjust the value in case it's a mask for second and third vectors.  */\n   *current_mask_element -= mask_nunits * (*number_of_mask_fixes - 1);\n \n+  if (*current_mask_element < 0)\n+    {\n+      if (dump_enabled_p ())\n+\t{\n+\t  dump_printf_loc (MSG_MISSED_OPTIMIZATION, vect_location,\n+\t\t\t   \"permutation requires past vector \");\n+\t  dump_gimple_stmt (MSG_MISSED_OPTIMIZATION, TDF_SLIM, stmt, 0);\n+\t  dump_printf (MSG_MISSED_OPTIMIZATION, \"\\n\");\n+\t}\n+      return false;\n+    }\n+\n   if (*current_mask_element < mask_nunits)\n     *needs_first_vector = true;\n \n@@ -3178,7 +3191,8 @@ vect_transform_slp_perm_load (slp_tree node, vec<tree> dr_chain,\n \t\t\t\t\t  &number_of_mask_fixes, &mask_fixed,\n \t\t\t\t\t  &needs_first_vector))\n \t\treturn false;\n-\t      gcc_assert (current_mask_element < 2 * nunits);\n+\t      gcc_assert (current_mask_element >= 0\n+\t\t\t  && current_mask_element < 2 * nunits);\n \t      mask[index++] = current_mask_element;\n \n               if (index == nunits)"}]}