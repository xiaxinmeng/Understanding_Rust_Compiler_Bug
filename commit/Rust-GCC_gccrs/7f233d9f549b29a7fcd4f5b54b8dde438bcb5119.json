{"sha": "7f233d9f549b29a7fcd4f5b54b8dde438bcb5119", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2YyMzNkOWY1NDliMjlhN2ZjZDRmNWI1NGI4ZGRlNDM4YmNiNTExOQ==", "commit": {"author": {"name": "Daniel Berlin", "email": "dberlin@dberlin.org", "date": "2005-01-17T00:45:51Z"}, "committer": {"name": "Daniel Berlin", "email": "dberlin@gcc.gnu.org", "date": "2005-01-17T00:45:51Z"}, "message": "tree-ssa-pre.c (add_to_sets): s1 may be NULL.\n\n2005-01-16  Daniel Berlin  <dberlin@dberlin.org>\n\n\t* tree-ssa-pre.c (add_to_sets): s1 may be NULL.\n\t(compute_avail): Uses don't go in tmp_gen.\n\nFrom-SVN: r93749", "tree": {"sha": "61b6d5b4f7040d2dde138b6faf48f1e5a8930713", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/61b6d5b4f7040d2dde138b6faf48f1e5a8930713"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7f233d9f549b29a7fcd4f5b54b8dde438bcb5119", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f233d9f549b29a7fcd4f5b54b8dde438bcb5119", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f233d9f549b29a7fcd4f5b54b8dde438bcb5119", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f233d9f549b29a7fcd4f5b54b8dde438bcb5119/comments", "author": {"login": "dberlin", "id": 324715, "node_id": "MDQ6VXNlcjMyNDcxNQ==", "avatar_url": "https://avatars.githubusercontent.com/u/324715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dberlin", "html_url": "https://github.com/dberlin", "followers_url": "https://api.github.com/users/dberlin/followers", "following_url": "https://api.github.com/users/dberlin/following{/other_user}", "gists_url": "https://api.github.com/users/dberlin/gists{/gist_id}", "starred_url": "https://api.github.com/users/dberlin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dberlin/subscriptions", "organizations_url": "https://api.github.com/users/dberlin/orgs", "repos_url": "https://api.github.com/users/dberlin/repos", "events_url": "https://api.github.com/users/dberlin/events{/privacy}", "received_events_url": "https://api.github.com/users/dberlin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "15ce652006345a094c11c04e5fa2835c95dc5775", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15ce652006345a094c11c04e5fa2835c95dc5775", "html_url": "https://github.com/Rust-GCC/gccrs/commit/15ce652006345a094c11c04e5fa2835c95dc5775"}], "stats": {"total": 27, "additions": 23, "deletions": 4}, "files": [{"sha": "fb1eebeaadb86e156f6a691e4bff90c369db11bd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f233d9f549b29a7fcd4f5b54b8dde438bcb5119/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f233d9f549b29a7fcd4f5b54b8dde438bcb5119/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7f233d9f549b29a7fcd4f5b54b8dde438bcb5119", "patch": "@@ -1,3 +1,8 @@\n+2005-01-16  Daniel Berlin  <dberlin@dberlin.org>\n+\n+\t* tree-ssa-pre.c (add_to_sets): s1 may be NULL.\n+\t(compute_avail): Uses don't go in tmp_gen.\n+\n 2005-01-16  Steven Bosscher  <stevenb@suse.de>\n \n \t* ggc-page.c (ggc_alloc_stat): Use __builtin_ctzl instead of a"}, {"sha": "839f351f53dd95db962f3d494b1b7eb1532bf350", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-pre-3.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f233d9f549b29a7fcd4f5b54b8dde438bcb5119/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-pre-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f233d9f549b29a7fcd4f5b54b8dde438bcb5119/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-pre-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-pre-3.c?ref=7f233d9f549b29a7fcd4f5b54b8dde438bcb5119", "patch": "@@ -0,0 +1,14 @@\n+/* { dg-do compile } */ \n+/* { dg-options \"-O2 -fdump-tree-pre-stats\" } */\n+unsigned foo1 (unsigned a, unsigned b)\n+{\n+  unsigned i, j, k;\n+  for (i = 0; i != a; i++)\n+    {\n+      j += 4*b;\n+      k += 4*a;\n+    }\n+  return j + k;\n+}\n+/* We should eliminate both 4*b and 4*a from the main body of the loop */\n+/* { dg-final { scan-tree-dump-times \"Eliminated:2\" 1 \"pre\"} } */"}, {"sha": "1a5f7ed515219a0392890d71ee523d185e3bdbe6", "filename": "gcc/testsuite/gcc.dg/vect/vect.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f233d9f549b29a7fcd4f5b54b8dde438bcb5119/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f233d9f549b29a7fcd4f5b54b8dde438bcb5119/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect.exp?ref=7f233d9f549b29a7fcd4f5b54b8dde438bcb5119", "patch": "@@ -23,7 +23,7 @@ load_lib gcc-dg.exp\n set DEFAULT_VECTCFLAGS \"\"\n \n # These flags are used for all targets.\n-lappend DEFAULT_VECTCFLAGS \"-O2\" \"-ftree-vectorize\" \"-fdump-tree-vect-stats\"\n+lappend DEFAULT_VECTCFLAGS \"-O2\" \"-ftree-vectorize\" \"-fdump-tree-vect-stats\" \"-fno-tree-pre\"\n \n # If the target system supports vector instructions, the default action\n # for a test is 'run', otherwise it's 'compile'.  Save current default."}, {"sha": "ae3e66d677bd2bbd0b1e60ef907f9961bb6d7372", "filename": "gcc/tree-ssa-pre.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f233d9f549b29a7fcd4f5b54b8dde438bcb5119/gcc%2Ftree-ssa-pre.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f233d9f549b29a7fcd4f5b54b8dde438bcb5119/gcc%2Ftree-ssa-pre.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-pre.c?ref=7f233d9f549b29a7fcd4f5b54b8dde438bcb5119", "patch": "@@ -1695,7 +1695,8 @@ add_to_sets (tree var, tree expr, vuse_optype vuses, bitmap_set_t s1,\n   if (var != expr)\n     vn_add (var, val, NULL);\n \n-  bitmap_insert_into_set (s1, var);\n+  if (s1)\n+    bitmap_insert_into_set (s1, var);\n   bitmap_value_insert_into_set (s2, var);\n }\n \n@@ -1881,8 +1882,7 @@ compute_avail (void)\n \t  for (j = 0; j < NUM_USES (STMT_USE_OPS (stmt)); j++)\n \t    {\n \t      tree use = USE_OP (STMT_USE_OPS (stmt), j);\n-\t      add_to_sets (use, use, NULL, TMP_GEN (block),\n-\t\t\t    AVAIL_OUT (block));\n+\t      add_to_sets (use, use, NULL, NULL, AVAIL_OUT (block));\n \t    }\n \t}\n "}]}