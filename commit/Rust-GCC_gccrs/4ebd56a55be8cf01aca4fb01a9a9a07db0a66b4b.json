{"sha": "4ebd56a55be8cf01aca4fb01a9a9a07db0a66b4b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGViZDU2YTU1YmU4Y2YwMWFjYTRmYjAxYTlhOWEwN2RiMGE2NmI0Yg==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely.gcc@gmail.com", "date": "2013-01-22T21:58:39Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2013-01-22T21:58:39Z"}, "message": "* doc/extend.texi (__int128): Improve grammar.\n\nFrom-SVN: r195387", "tree": {"sha": "3bcd04ff39c671a636fbddb067399187b4cfeca4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3bcd04ff39c671a636fbddb067399187b4cfeca4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4ebd56a55be8cf01aca4fb01a9a9a07db0a66b4b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ebd56a55be8cf01aca4fb01a9a9a07db0a66b4b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ebd56a55be8cf01aca4fb01a9a9a07db0a66b4b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ebd56a55be8cf01aca4fb01a9a9a07db0a66b4b/comments", "author": null, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "32fc5b8a4bbdf22d8af25310760d229319f7afbb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32fc5b8a4bbdf22d8af25310760d229319f7afbb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/32fc5b8a4bbdf22d8af25310760d229319f7afbb"}], "stats": {"total": 12, "additions": 8, "deletions": 4}, "files": [{"sha": "5870b5d6604c61c975c1bf81f5633d077e5e5afc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ebd56a55be8cf01aca4fb01a9a9a07db0a66b4b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ebd56a55be8cf01aca4fb01a9a9a07db0a66b4b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4ebd56a55be8cf01aca4fb01a9a9a07db0a66b4b", "patch": "@@ -1,3 +1,7 @@\n+2012-01-22  Jonathan Wakely  <jwakely.gcc@gmail.com>\n+\n+\t* doc/extend.texi (__int128): Improve grammar.\n+\n 2012-01-22  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/56028"}, {"sha": "076aa68c9dd574f1440ef5799043bc5894aa096c", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ebd56a55be8cf01aca4fb01a9a9a07db0a66b4b/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ebd56a55be8cf01aca4fb01a9a9a07db0a66b4b/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=4ebd56a55be8cf01aca4fb01a9a9a07db0a66b4b", "patch": "@@ -811,15 +811,15 @@ the middle operand uses the value already computed without the undesirable\n effects of recomputing it.\n \n @node __int128\n-@section 128-bits integers\n+@section 128-bit integers\n @cindex @code{__int128} data types\n \n As an extension the integer scalar type @code{__int128} is supported for\n-targets having an integer mode wide enough to hold 128 bits.\n+targets which have an integer mode wide enough to hold 128 bits.\n Simply write @code{__int128} for a signed 128-bit integer, or\n @code{unsigned __int128} for an unsigned 128-bit integer.  There is no\n-support in GCC to express an integer constant of type @code{__int128}\n-for targets having @code{long long} integer less than 128 bits wide.\n+support in GCC for expressing an integer constant of type @code{__int128}\n+for targets with @code{long long} integer less than 128 bits wide.\n \n @node Long Long\n @section Double-Word Integers"}]}