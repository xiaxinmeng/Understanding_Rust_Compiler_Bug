{"sha": "7c9e1645836d7746838acebb7018b1774490ab5c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2M5ZTE2NDU4MzZkNzc0NjgzOGFjZWJiNzAxOGIxNzc0NDkwYWI1Yw==", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-08-21T00:16:29Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-08-21T00:16:29Z"}, "message": "Daily bump.", "tree": {"sha": "45928d9de422bce44920dae15d6aca53da9610de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/45928d9de422bce44920dae15d6aca53da9610de"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7c9e1645836d7746838acebb7018b1774490ab5c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c9e1645836d7746838acebb7018b1774490ab5c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c9e1645836d7746838acebb7018b1774490ab5c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c9e1645836d7746838acebb7018b1774490ab5c/comments", "author": null, "committer": null, "parents": [{"sha": "9b24c20cb3af3a917cd7bf804e08ac3ef9defb10", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b24c20cb3af3a917cd7bf804e08ac3ef9defb10", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b24c20cb3af3a917cd7bf804e08ac3ef9defb10"}], "stats": {"total": 260, "additions": 259, "deletions": 1}, "files": [{"sha": "69fdc627b552ee3596954fc51dd21df48ffe08eb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 104, "deletions": 0, "changes": 104, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c9e1645836d7746838acebb7018b1774490ab5c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c9e1645836d7746838acebb7018b1774490ab5c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7c9e1645836d7746838acebb7018b1774490ab5c", "patch": "@@ -1,3 +1,107 @@\n+2021-08-20  Serge Belyshev  <belyshev@depni.sinp.msu.ru>\n+\n+\t* configure.ac (thread-local storage support): Remove tls_first_major\n+\tand tls_first_minor.  Use \"$conftest_s\" to check support.\n+\t* configure: Regenerate.\n+\n+2021-08-20  Serge Belyshev  <belyshev@depni.sinp.msu.ru>\n+\n+\t* configure.ac: Fixup formatting.\n+\n+2021-08-20  Serge Belyshev  <belyshev@depni.sinp.msu.ru>\n+\n+\t* acinclude.m4 (gcc_GAS_CHECK_FEATURE): Remove third argument and ...\n+\t* configure.ac: ... update all callers.\n+\n+2021-08-20  Serge Belyshev  <belyshev@depni.sinp.msu.ru>\n+\n+\tPR target/91602\n+\t* acinclude.m4 (_gcc_COMPUTE_GAS_VERSION, _gcc_GAS_VERSION_GTE_IFELSE)\n+\t(gcc_GAS_VERSION_GTE_IFELSE): Remove.\n+\t(gcc_GAS_CHECK_FEATURE): Do not handle in-tree case specially.\n+\t* configure.ac: Remove gcc_cv_gas_major_version, gcc_cv_gas_minor_version.\n+\tRemove remaining checks for in-tree assembler.\n+\t* configure: Regenerate.\n+\n+2021-08-20  Jeff Law  <jlaw@localhost.localdomain>\n+\n+\t* config/h8300/h8300.c (shift_alg_hi): Improve arithmetic shift right\n+\tby 15 bits for H8/300H and H8/S.  Improve logical shifts by 12\n+\tbits for H8/S.\n+\t(shift_alg_si): Improve arithmetic right shift by 28-30 bits for\n+\tH8/300H.  Improve arithmetic shift right by 15 bits for H8/S.\n+\tImprove logical shifts by 27 bits for H8/S.\n+\t(get_shift_alg): Corresponding changes.\n+\t(h8300_option_override): Revert to loops for -Os when profitable.\n+\n+2021-08-20  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-vect-data-refs.c (dr_group_sort_cmp): Do not compare\n+\tBBs.\n+\t(vect_analyze_data_ref_accesses): Likewise.  Assign the BB\n+\tindex as group_id when dataref_groups were not computed.\n+\t* tree-vect-slp.c (vect_slp_bbs): Bump current_group when\n+\twe advace to the next BB.\n+\n+2021-08-20  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* omp-builtins.def (BUILT_IN_GOMP_WARNING, BUILT_IN_GOMP_ERROR): New\n+\tbuiltins.\n+\n+2021-08-20  Martin Liska  <mliska@suse.cz>\n+\n+\tPR gcov-profile/89961\n+\t* gcov.c (make_gcov_file_name): Rewrite using std::string.\n+\t(mangle_name): Simplify, do not used the second argument.\n+\t(strip_extention): New function.\n+\t(get_md5sum): Likewise.\n+\t(get_gcov_intermediate_filename): Handle properly -p and -x\n+\toptions.\n+\t(output_gcov_file): Use string type.\n+\t(generate_results): Likewise.\n+\t(md5sum_to_hex): Remove.\n+\n+2021-08-20  Michael Meissner  <meissner@linux.ibm.com>\n+\n+\t* config/rs6000/altivec.md (UNSPEC_XXEVAL): Move to vsx.md.\n+\t(UNSPEC_XXSPLTIW): Move to vsx.md.\n+\t(UNSPEC_XXSPLTID): Move to vsx.md.\n+\t(UNSPEC_XXSPLTI32DX): Move to vsx.md.\n+\t(UNSPEC_XXBLEND): Move to vsx.md.\n+\t(UNSPEC_XXPERMX): Move to vsx.md.\n+\t(VM3): Move to vsx.md.\n+\t(VM3_char): Move to vsx.md.\n+\t(xxspltiw_v4si): Move to vsx.md.\n+\t(xxspltiw_v4sf): Move to vsx.md.\n+\t(xxspltiw_v4sf_inst): Move to vsx.md.\n+\t(xxspltidp_v2df): Move to vsx.md.\n+\t(xxspltidp_v2df_inst): Move to vsx.md.\n+\t(xxsplti32dx_v4si_inst): Move to vsx.md.\n+\t(xxsplti32dx_v4sf): Move to vsx.md.\n+\t(xxsplti32dx_v4sf_inst): Move to vsx.md.\n+\t(xxblend_<mode>): Move to vsx.md.\n+\t(xxpermx): Move to vsx.md.\n+\t(xxpermx_inst): Move to vsx.md.\n+\t* config/rs6000/vsx.md (UNSPEC_XXEVAL): Move from altivec.md.\n+\t(UNSPEC_XXSPLTIW): Move from altivec.md.\n+\t(UNSPEC_XXSPLTID): Move from altivec.md.\n+\t(UNSPEC_XXSPLTI32DX): Move from altivec.md.\n+\t(UNSPEC_XXBLEND): Move from altivec.md.\n+\t(UNSPEC_XXPERMX): Move from altivec.md.\n+\t(VM3): Move from altivec.md.\n+\t(VM3_char): Move from altivec.md.\n+\t(xxspltiw_v4si): Move from altivec.md.\n+\t(xxspltiw_v4sf): Move from altivec.md.\n+\t(xxspltiw_v4sf_inst): Move from altivec.md.\n+\t(xxspltidp_v2df): Move from altivec.md.\n+\t(xxspltidp_v2df_inst): Move from altivec.md.\n+\t(xxsplti32dx_v4si_inst): Move from altivec.md.\n+\t(xxsplti32dx_v4sf): Move from altivec.md.\n+\t(xxsplti32dx_v4sf_inst): Move from altivec.md.\n+\t(xxblend_<mode>): Move from altivec.md.\n+\t(xxpermx): Move from altivec.md.\n+\t(xxpermx_inst): Move from altivec.md.\n+\n 2021-08-19  Roger Sayle  <roger@nextmovesoftware.com>\n \n \t* tree-vect-generic.c (expand_vector_operations_1): Use either"}, {"sha": "550c2a688af8ccfd01fe3314824e7c9b99be6323", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c9e1645836d7746838acebb7018b1774490ab5c/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c9e1645836d7746838acebb7018b1774490ab5c/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=7c9e1645836d7746838acebb7018b1774490ab5c", "patch": "@@ -1 +1 @@\n-20210820\n+20210821"}, {"sha": "873d7ab02f10a681debe86da3113245a06ec9de4", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c9e1645836d7746838acebb7018b1774490ab5c/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c9e1645836d7746838acebb7018b1774490ab5c/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=7c9e1645836d7746838acebb7018b1774490ab5c", "patch": "@@ -1,3 +1,19 @@\n+2021-08-20  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* c-format.c (gcc_gfc_length_specs): Add 'll' and 'w'.\n+\t(gcc_gfc_char_table): Add T9L_LL and T9L_ULL to\n+\t\"di\" and \"u\", respecitively; fill with BADLEN to match\n+\tsize of 'types'.\n+\t(get_init_dynamic_hwi): Split off from ...\n+\t(init_dynamic_diag_info): ... here. Call it.\n+\t(init_dynamic_gfc_info): Call it.\n+\n+2021-08-20  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* c-pragma.h (enum pragma_kind): Add PRAGMA_OMP_ERROR.\n+\t* c-pragma.c (omp_pragmas): Add error directive.\n+\t* c-omp.c (omp_directives): Uncomment error directive entry.\n+\n 2021-08-18  Jakub Jelinek  <jakub@redhat.com>\n \n \t* c-pragma.h (enum pragma_kind): Add PRAGMA_OMP_NOTHING."}, {"sha": "e5e12b33f517c1944311fbb3e384374e62e62e36", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c9e1645836d7746838acebb7018b1774490ab5c/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c9e1645836d7746838acebb7018b1774490ab5c/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=7c9e1645836d7746838acebb7018b1774490ab5c", "patch": "@@ -1,3 +1,14 @@\n+2021-08-20  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* c-parser.c (c_parser_omp_error): New function.\n+\t(c_parser_pragma): Handle PRAGMA_OMP_ERROR.\n+\n+2021-08-20  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* c-parser.c (c_parser_omp_clause_depend_sink): Reject spurious\n+\tcomma at the end of list.\n+\t(c_parser_omp_requires): Likewise.\n+\n 2021-08-19  Jakub Jelinek  <jakub@redhat.com>\n \n \t* c-parser.c (c_parser_omp_requires): Don't call"}, {"sha": "d49620204c94290b7bb22e2cc543779bcc8917bd", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c9e1645836d7746838acebb7018b1774490ab5c/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c9e1645836d7746838acebb7018b1774490ab5c/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=7c9e1645836d7746838acebb7018b1774490ab5c", "patch": "@@ -1,3 +1,16 @@\n+2021-08-20  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* parser.c (cp_parser_handle_statement_omp_attributes): Determine if\n+\tPRAGMA_OMP_ERROR directive is C_OMP_DIR_STANDALONE.\n+\t(cp_parser_omp_error): New function.\n+\t(cp_parser_pragma): Handle PRAGMA_OMP_ERROR.\n+\n+2021-08-20  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* parser.c (cp_parser_omp_clause_depend_sink): Reject spurious\n+\tcomma at the end of list.  Don't parse closing paren here...\n+\t(cp_parser_omp_clause_depend): ... but here instead.\n+\n 2021-08-19  Patrick Palka  <ppalka@redhat.com>\n \n \tPR c++/101803"}, {"sha": "7da56e7987ba489d47b4487ef2178c6a6918bfdb", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c9e1645836d7746838acebb7018b1774490ab5c/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c9e1645836d7746838acebb7018b1774490ab5c/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=7c9e1645836d7746838acebb7018b1774490ab5c", "patch": "@@ -1,3 +1,51 @@\n+2021-08-20  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* error.c\n+\t(error_uinteger): Take 'long long unsigned' instead\n+\tof 'long unsigned' as argumpent.\n+\t(error_integer): Take 'long long' instead of 'long'.\n+\t(error_hwuint, error_hwint): New.\n+\t(error_print): Update to handle 'll' and 'w'\n+\tlength modifiers.\n+\t* simplify.c (substring_has_constant_len): Use '%wd'\n+\tin gfc_error.\n+\n+2021-08-20  Harald Anlauf  <anlauf@gmx.de>\n+\n+\tPR fortran/100950\n+\t* simplify.c (substring_has_constant_len): Fix format string of\n+\tgfc_error, pass HOST_WIDE_INT bounds values via char buffer.\n+\n+2021-08-20  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* dump-parse-tree.c (show_omp_clauses): Handle 'at', 'severity'\n+\tand 'message' clauses.\n+\t(show_omp_node, show_code_node): Handle EXEC_OMP_ERROR.\n+\t* gfortran.h (gfc_statement): Add ST_OMP_ERROR.\n+\t(gfc_omp_severity_type, gfc_omp_at_type): New.\n+\t(gfc_omp_clauses): Add 'at', 'severity' and 'message' clause;\n+\tuse more bitfields + ENUM_BITFIELD.\n+\t(gfc_exec_op): Add EXEC_OMP_ERROR.\n+\t* match.h (gfc_match_omp_error): New.\n+\t* openmp.c (enum omp_mask1): Add OMP_CLAUSE_(AT,SEVERITY,MESSAGE).\n+\t(gfc_match_omp_clauses): Handle new clauses.\n+\t(OMP_ERROR_CLAUSES, gfc_match_omp_error): New.\n+\t(resolve_omp_clauses): Resolve new clauses.\n+\t(omp_code_to_statement, gfc_resolve_omp_directive): Handle\n+\tEXEC_OMP_ERROR.\n+\t* parse.c (decode_omp_directive, next_statement,\n+\tgfc_ascii_statement): Handle 'omp error'.\n+\t* resolve.c (gfc_resolve_blocks): Likewise.\n+\t* st.c (gfc_free_statement): Likewise.\n+\t* trans-openmp.c (gfc_trans_omp_error): Likewise.\n+\t(gfc_trans_omp_directive): Likewise.\n+\t* trans.c (trans_code): Likewise.\n+\n+2021-08-20  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* types.def (BT_FN_VOID_CONST_PTR_SIZE): New DEF_FUNCTION_TYPE_2.\n+\t* f95-lang.c (ATTR_COLD_NORETURN_NOTHROW_LEAF_LIST): Define.\n+\n 2021-08-19  Harald Anlauf  <anlauf@gmx.de>\n \n \tPR fortran/100950"}, {"sha": "0c8f274fdfbbdc3e236fa450d6f35294d0d7f0e4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c9e1645836d7746838acebb7018b1774490ab5c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c9e1645836d7746838acebb7018b1774490ab5c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7c9e1645836d7746838acebb7018b1774490ab5c", "patch": "@@ -1,3 +1,25 @@\n+2021-08-20  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* gfortran.dg/gomp/error-1.f90: New test.\n+\t* gfortran.dg/gomp/error-2.f90: New test.\n+\t* gfortran.dg/gomp/error-3.f90: New test.\n+\n+2021-08-20  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* c-c++-common/gomp/error-1.c: New test.\n+\t* c-c++-common/gomp/error-2.c: New test.\n+\t* c-c++-common/gomp/error-3.c: New test.\n+\t* g++.dg/gomp/attrs-1.C (bar): Add error directive test.\n+\t* g++.dg/gomp/attrs-2.C (bar): Add error directive test.\n+\t* g++.dg/gomp/attrs-13.C: New test.\n+\t* g++.dg/gomp/error-1.C: New test.\n+\n+2021-08-20  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* c-c++-common/gomp/sink-5.c: New test.\n+\t* c-c++-common/gomp/requires-3.c: Add test for spurious comma\n+\tat the end of pragma line.\n+\n 2021-08-19  Roger Sayle  <roger@nextmovesoftware.com>\n \n \t* c-c++-common/Wunused-var-16.c: Add an extra check that ~0"}, {"sha": "ad9781df569e5c549b499f744e473e97400a9e6c", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c9e1645836d7746838acebb7018b1774490ab5c/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c9e1645836d7746838acebb7018b1774490ab5c/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=7c9e1645836d7746838acebb7018b1774490ab5c", "patch": "@@ -1,3 +1,14 @@\n+2021-08-20  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* testsuite/libgomp.fortran/error-1.f90: New test.\n+\n+2021-08-20  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* libgomp.map (GOMP_5.1): Add GOMP_error and GOMP_warning.\n+\t* libgomp_g.h (GOMP_warning, GOMP_error): Declare.\n+\t* error.c (GOMP_warning, GOMP_error): New functions.\n+\t* testsuite/libgomp.c-c++-common/error-1.c: New test.\n+\n 2021-08-18  Tobias Burnus  <tobias@codesourcery.com>\n \n \t* omp_lib.f90.in (omp_alloc, omp_free, omp_target_alloc,"}, {"sha": "7ec0fbdee65704b9c3fb1f1a22669dcae04758ac", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c9e1645836d7746838acebb7018b1774490ab5c/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c9e1645836d7746838acebb7018b1774490ab5c/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=7c9e1645836d7746838acebb7018b1774490ab5c", "patch": "@@ -1,3 +1,36 @@\n+2021-08-20  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/90787\n+\t* testsuite/27_io/filesystem/iterators/directory_iterator.cc:\n+\tUse new __gnu_test::permissions_are_testable() function.\n+\t* testsuite/27_io/filesystem/iterators/recursive_directory_iterator.cc:\n+\tLikewise.\n+\t* testsuite/27_io/filesystem/operations/exists.cc: Likewise.\n+\t* testsuite/27_io/filesystem/operations/is_empty.cc: Likewise.\n+\t* testsuite/27_io/filesystem/operations/remove.cc: Likewise.\n+\t* testsuite/27_io/filesystem/operations/remove_all.cc: Likewise.\n+\t* testsuite/27_io/filesystem/operations/status.cc: Likewise.\n+\t* testsuite/27_io/filesystem/operations/symlink_status.cc:\n+\tLikewise.\n+\t* testsuite/27_io/filesystem/operations/temp_directory_path.cc:\n+\tLikewise.\n+\t* testsuite/experimental/filesystem/iterators/directory_iterator.cc:\n+\tLikewise.\n+\t* testsuite/experimental/filesystem/iterators/recursive_directory_iterator.cc:\n+\tLikewise.\n+\t* testsuite/experimental/filesystem/operations/exists.cc:\n+\tLikewise.\n+\t* testsuite/experimental/filesystem/operations/is_empty.cc:\n+\tLikewise.\n+\t* testsuite/experimental/filesystem/operations/remove.cc:\n+\tLikewise.\n+\t* testsuite/experimental/filesystem/operations/remove_all.cc:\n+\tLikewise.\n+\t* testsuite/experimental/filesystem/operations/temp_directory_path.cc:\n+\tLikewise.\n+\t* testsuite/util/testsuite_fs.h (__gnu_test::permissions_are_testable):\n+\tNew function to guess whether testing permissions will work.\n+\n 2021-08-19  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* doc/xml/manual/status_cxx2020.xml: Move row  earlier in table."}]}