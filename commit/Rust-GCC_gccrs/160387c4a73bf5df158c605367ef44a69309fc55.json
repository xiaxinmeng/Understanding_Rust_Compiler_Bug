{"sha": "160387c4a73bf5df158c605367ef44a69309fc55", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTYwMzg3YzRhNzNiZjVkZjE1OGM2MDUzNjdlZjQ0YTY5MzA5ZmM1NQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1998-07-20T00:29:35Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1998-07-20T00:29:35Z"}, "message": "new\n\nFrom-SVN: r21300", "tree": {"sha": "0fb298afbb40e29495e2a9bd695cfbaa96a9f81b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0fb298afbb40e29495e2a9bd695cfbaa96a9f81b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/160387c4a73bf5df158c605367ef44a69309fc55", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/160387c4a73bf5df158c605367ef44a69309fc55", "html_url": "https://github.com/Rust-GCC/gccrs/commit/160387c4a73bf5df158c605367ef44a69309fc55", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/160387c4a73bf5df158c605367ef44a69309fc55/comments", "author": null, "committer": null, "parents": [{"sha": "6288717fb39fab96c4f18bbd5a3ec01cecf92542", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6288717fb39fab96c4f18bbd5a3ec01cecf92542", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6288717fb39fab96c4f18bbd5a3ec01cecf92542"}], "stats": {"total": 80, "additions": 79, "deletions": 1}, "files": [{"sha": "399d2329758386a1ae71f56caefbdff803b25b4e", "filename": "gcc/testsuite/g++.old-deja/g++.ext/implicit1.C", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/160387c4a73bf5df158c605367ef44a69309fc55/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ext%2Fimplicit1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/160387c4a73bf5df158c605367ef44a69309fc55/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ext%2Fimplicit1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ext%2Fimplicit1.C?ref=160387c4a73bf5df158c605367ef44a69309fc55", "patch": "@@ -0,0 +1,14 @@\n+// test for implicit declaration\n+// Special g++ Options: -w\n+\n+int\n+main ()\n+{\n+  return blarg ();\n+}\n+\n+extern \"C\" int\n+blarg (...)\n+{\n+  return 0;\n+}"}, {"sha": "2565a9e849d5e5397c2f93bff22465814e784285", "filename": "gcc/testsuite/g++.old-deja/g++.ns/koenig7.C", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/160387c4a73bf5df158c605367ef44a69309fc55/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ns%2Fkoenig7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/160387c4a73bf5df158c605367ef44a69309fc55/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ns%2Fkoenig7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ns%2Fkoenig7.C?ref=160387c4a73bf5df158c605367ef44a69309fc55", "patch": "@@ -0,0 +1,22 @@\n+// Test for Koenig lookup involving overloaded functions.\n+\n+namespace N1 {\n+  struct A { };\n+  void f1(A) {}\n+  void f2(float) {}\n+  void g(void (*)(float)) {}\n+}\n+\n+using N1::f1;\n+void f1(float) {}\n+\n+using N1::f2;\n+template <class T>\n+void f2(N1::A, T) {}\n+\n+void g(void (*)(int)) {}\n+\n+int main() {  \n+   g(&f1); // Works?\n+   g(f2); // Works?\n+}"}, {"sha": "c83b50a9779b1a7a058e276c2e72fd7dcb75b593", "filename": "gcc/testsuite/g++.old-deja/g++.ns/lookup5.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/160387c4a73bf5df158c605367ef44a69309fc55/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ns%2Flookup5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/160387c4a73bf5df158c605367ef44a69309fc55/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ns%2Flookup5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ns%2Flookup5.C?ref=160387c4a73bf5df158c605367ef44a69309fc55", "patch": "@@ -5,7 +5,7 @@ namespace A{\n \n namespace B{\n   using namespace A;\n-  void f(int);\n+  void f(int);\t\t\t// ERROR - referenced below\n }\n \n using namespace B;"}, {"sha": "9dc7a396a7efcab9bd6fa13209a058ca6092d464", "filename": "gcc/testsuite/g++.old-deja/g++.ns/template5.C", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/160387c4a73bf5df158c605367ef44a69309fc55/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ns%2Ftemplate5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/160387c4a73bf5df158c605367ef44a69309fc55/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ns%2Ftemplate5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ns%2Ftemplate5.C?ref=160387c4a73bf5df158c605367ef44a69309fc55", "patch": "@@ -0,0 +1,33 @@\n+//Check whether namespace-scoped template instantiations\n+//are mangled differently.\n+\n+namespace X{\n+  template<class T>\n+  struct Y{\n+   int f(T){\n+     return 1;\n+   }\n+   template<class X>void g(){}\n+  };\n+}\n+\n+template<class T>\n+struct Y{\n+  int f(T){\n+    return 2;\n+  }\n+};\n+\n+int main()\n+{\n+  X::Y<int> z;\n+  if (z.f(4) != 1)\n+    return 1;\n+  z.template g<long>();\n+\n+  Y<int> z1;\n+  if (z1.f(5) != 2)\n+    return 1;\n+  return 0;\n+}\n+"}, {"sha": "f3ea5ebbb7275e04762b68a718393e70173b6817", "filename": "gcc/testsuite/g++.old-deja/g++.other/lookup1.C", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/160387c4a73bf5df158c605367ef44a69309fc55/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Flookup1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/160387c4a73bf5df158c605367ef44a69309fc55/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Flookup1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Flookup1.C?ref=160387c4a73bf5df158c605367ef44a69309fc55", "patch": "@@ -0,0 +1,9 @@\n+// simple test for id from base class during class defn\n+// Build don't link:\n+\n+struct foo {\n+  enum { blah = 1 };\n+};\n+struct bar : public foo {\n+  char cache[blah];\n+};"}]}