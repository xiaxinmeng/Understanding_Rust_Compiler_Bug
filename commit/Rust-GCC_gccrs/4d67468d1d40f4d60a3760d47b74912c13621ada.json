{"sha": "4d67468d1d40f4d60a3760d47b74912c13621ada", "node_id": "C_kwDOANBUbNoAKDRkNjc0NjhkMWQ0MGY0ZDYwYTM3NjBkNDdiNzQ5MTJjMTM2MjFhZGE", "commit": {"author": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2022-08-23T15:35:44Z"}, "committer": {"name": "Arthur Cohen", "email": "arthur.cohen@embecosm.com", "date": "2022-12-13T13:00:06Z"}, "message": "gccrs: Add unused variable scan\n\nThis is a simple walk_tree which acts on the monomorphized code by walking\nthe compiled translation unit of functions.\n\n\tgcc/rust/\n\t* checks/lints/rust-lint-unused-var.cc: New.\n\t* checks/lints/rust-lint-unused-var.h: New.", "tree": {"sha": "fea867f7479eb602bd29f6574cd4483ccef8ad98", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fea867f7479eb602bd29f6574cd4483ccef8ad98"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4d67468d1d40f4d60a3760d47b74912c13621ada", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d67468d1d40f4d60a3760d47b74912c13621ada", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d67468d1d40f4d60a3760d47b74912c13621ada", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d67468d1d40f4d60a3760d47b74912c13621ada/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "520b52b24e73d2ec48fd6f492266df42c218bdf2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/520b52b24e73d2ec48fd6f492266df42c218bdf2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/520b52b24e73d2ec48fd6f492266df42c218bdf2"}], "stats": {"total": 134, "additions": 134, "deletions": 0}, "files": [{"sha": "d4317e5328011b54455af45cf8ef10b3c0432fb9", "filename": "gcc/rust/checks/lints/rust-lint-unused-var.cc", "status": "added", "additions": 98, "deletions": 0, "changes": 98, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d67468d1d40f4d60a3760d47b74912c13621ada/gcc%2Frust%2Fchecks%2Flints%2Frust-lint-unused-var.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d67468d1d40f4d60a3760d47b74912c13621ada/gcc%2Frust%2Fchecks%2Flints%2Frust-lint-unused-var.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fchecks%2Flints%2Frust-lint-unused-var.cc?ref=4d67468d1d40f4d60a3760d47b74912c13621ada", "patch": "@@ -0,0 +1,98 @@\n+// Copyright (C) 2021-2022 Free Software Foundation, Inc.\n+\n+// This file is part of GCC.\n+\n+// GCC is free software; you can redistribute it and/or modify it under\n+// the terms of the GNU General Public License as published by the Free\n+// Software Foundation; either version 3, or (at your option) any later\n+// version.\n+\n+// GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+// WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+// for more details.\n+\n+// You should have received a copy of the GNU General Public License\n+// along with GCC; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include \"rust-lint-unused-var.h\"\n+#include \"print-tree.h\"\n+\n+namespace Rust {\n+namespace Analysis {\n+\n+static void\n+check_decl (tree *t)\n+{\n+  rust_assert (TREE_CODE (*t) == VAR_DECL || TREE_CODE (*t) == PARM_DECL\n+\t       || TREE_CODE (*t) == CONST_DECL);\n+\n+  tree var_name = DECL_NAME (*t);\n+  const char *var_name_ptr = IDENTIFIER_POINTER (var_name);\n+  bool starts_with_under_score = strncmp (var_name_ptr, \"_\", 1) == 0;\n+\n+  bool is_constant = TREE_CODE (*t) == CONST_DECL;\n+  // if (!is_constant)\n+  //   {\n+  //     debug_tree (*t);\n+  //     rust_debug (\"found var-decl: used %s artifical %s underscore %s name\n+  //     %s\",\n+  //       \t  TREE_USED (*t) ? \"true\" : \"false\",\n+  //       \t  DECL_ARTIFICIAL (*t) ? \"true\" : \"false\",\n+  //       \t  starts_with_under_score ? \"true\" : \"false\", var_name_ptr);\n+  //   }\n+\n+  if (!TREE_USED (*t) && !DECL_ARTIFICIAL (*t) && !starts_with_under_score)\n+    {\n+      warning_at (DECL_SOURCE_LOCATION (*t),\n+\t\t  is_constant ? OPT_Wunused_const_variable_\n+\t\t\t      : OPT_Wunused_variable,\n+\t\t  \"unused name %qE\", *t);\n+    }\n+}\n+\n+static tree\n+unused_var_walk_fn (tree *t, int *walk_subtrees, void *closure)\n+{\n+  switch (TREE_CODE (*t))\n+    {\n+    case VAR_DECL:\n+    case CONST_DECL:\n+      check_decl (t);\n+      break;\n+\n+    default:\n+      break;\n+    }\n+  return NULL_TREE;\n+}\n+\n+void\n+UnusedVariables::Lint (Compile::Context &ctx)\n+{\n+  for (auto &fndecl : ctx.get_func_decls ())\n+    {\n+      for (tree p = DECL_ARGUMENTS (fndecl); p != NULL_TREE; p = DECL_CHAIN (p))\n+\t{\n+\t  check_decl (&p);\n+\t}\n+\n+      walk_tree_without_duplicates (&DECL_SAVED_TREE (fndecl),\n+\t\t\t\t    &unused_var_walk_fn, &ctx);\n+    }\n+\n+  for (auto &var : ctx.get_var_decls ())\n+    {\n+      tree t = ctx.get_backend ()->var_expression (var, Location ());\n+      check_decl (&t);\n+    }\n+\n+  for (auto &const_decl : ctx.get_const_decls ())\n+    {\n+      check_decl (&const_decl);\n+    }\n+}\n+\n+} // namespace Analysis\n+} // namespace Rust"}, {"sha": "6fabfeff01ba2c325a178d3f54ba37cdb53e4c50", "filename": "gcc/rust/checks/lints/rust-lint-unused-var.h", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d67468d1d40f4d60a3760d47b74912c13621ada/gcc%2Frust%2Fchecks%2Flints%2Frust-lint-unused-var.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d67468d1d40f4d60a3760d47b74912c13621ada/gcc%2Frust%2Fchecks%2Flints%2Frust-lint-unused-var.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fchecks%2Flints%2Frust-lint-unused-var.h?ref=4d67468d1d40f4d60a3760d47b74912c13621ada", "patch": "@@ -0,0 +1,36 @@\n+// Copyright (C) 2021-2022 Free Software Foundation, Inc.\n+\n+// This file is part of GCC.\n+\n+// GCC is free software; you can redistribute it and/or modify it under\n+// the terms of the GNU General Public License as published by the Free\n+// Software Foundation; either version 3, or (at your option) any later\n+// version.\n+\n+// GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+// WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+// for more details.\n+\n+// You should have received a copy of the GNU General Public License\n+// along with GCC; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#ifndef RUST_LINT_UNUSED_VAR\n+#define RUST_LINT_UNUSED_VAR\n+\n+#include \"rust-compile-context.h\"\n+\n+namespace Rust {\n+namespace Analysis {\n+\n+class UnusedVariables\n+{\n+public:\n+  static void Lint (Compile::Context &ctx);\n+};\n+\n+} // namespace Analysis\n+} // namespace Rust\n+\n+#endif // RUST_LINT_UNUSED_VAR"}]}