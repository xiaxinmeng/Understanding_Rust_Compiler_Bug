{"sha": "58d169ba9ffca04d77314f525af9efd93881a86b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NThkMTY5YmE5ZmZjYTA0ZDc3MzE0ZjUyNWFmOWVmZDkzODgxYTg2Yg==", "commit": {"author": {"name": "Richard Henderson", "email": "richard.henderson@linaro.org", "date": "2019-09-25T22:51:55Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2019-09-25T22:51:55Z"}, "message": "aarch64: Configure for sys/auxv.h in libgcc for lse-init.c\n\n\tPR target/91833\n\t* config/aarch64/lse-init.c: Include auto-target.h.  Disable\n\tinitialization if !HAVE_SYS_AUXV_H.\n\t* configure.ac (AC_CHECK_HEADERS): Add sys/auxv.h.\n\t* config.in, configure: Rebuild.\n\nFrom-SVN: r276134", "tree": {"sha": "a51ee36283d23805d1a340046084adf6eb3d918b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a51ee36283d23805d1a340046084adf6eb3d918b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/58d169ba9ffca04d77314f525af9efd93881a86b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58d169ba9ffca04d77314f525af9efd93881a86b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/58d169ba9ffca04d77314f525af9efd93881a86b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58d169ba9ffca04d77314f525af9efd93881a86b/comments", "author": {"login": "rth7680", "id": 2529319, "node_id": "MDQ6VXNlcjI1MjkzMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2529319?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rth7680", "html_url": "https://github.com/rth7680", "followers_url": "https://api.github.com/users/rth7680/followers", "following_url": "https://api.github.com/users/rth7680/following{/other_user}", "gists_url": "https://api.github.com/users/rth7680/gists{/gist_id}", "starred_url": "https://api.github.com/users/rth7680/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rth7680/subscriptions", "organizations_url": "https://api.github.com/users/rth7680/orgs", "repos_url": "https://api.github.com/users/rth7680/repos", "events_url": "https://api.github.com/users/rth7680/events{/privacy}", "received_events_url": "https://api.github.com/users/rth7680/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "88a51d68c4aaa61adb36a9cad6f25ef214bde853", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88a51d68c4aaa61adb36a9cad6f25ef214bde853", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88a51d68c4aaa61adb36a9cad6f25ef214bde853"}], "stats": {"total": 46, "additions": 37, "deletions": 9}, "files": [{"sha": "20e42786f2f790a2ad29b700885df356a8b4754a", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58d169ba9ffca04d77314f525af9efd93881a86b/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58d169ba9ffca04d77314f525af9efd93881a86b/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=58d169ba9ffca04d77314f525af9efd93881a86b", "patch": "@@ -1,5 +1,11 @@\n 2019-09-25  Richard Henderson  <richard.henderson@linaro.org>\n \n+\tPR target/91833\n+\t* config/aarch64/lse-init.c: Include auto-target.h.  Disable\n+\tinitialization if !HAVE_SYS_AUXV_H.\n+\t* configure.ac (AC_CHECK_HEADERS): Add sys/auxv.h.\n+\t* config.in, configure: Rebuild.\n+\n \tPR target/91834\n \t* config/aarch64/lse.S (LDNM): Ensure STXR output does not\n \toverlap the inputs."}, {"sha": "59a3d8daf52e72e548d3d9425d6043d5e0c663ad", "filename": "libgcc/config.in", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58d169ba9ffca04d77314f525af9efd93881a86b/libgcc%2Fconfig.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58d169ba9ffca04d77314f525af9efd93881a86b/libgcc%2Fconfig.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig.in?ref=58d169ba9ffca04d77314f525af9efd93881a86b", "patch": "@@ -43,6 +43,9 @@\n /* Define to 1 if you have the <string.h> header file. */\n #undef HAVE_STRING_H\n \n+/* Define to 1 if you have the <sys/auxv.h> header file. */\n+#undef HAVE_SYS_AUXV_H\n+\n /* Define to 1 if you have the <sys/stat.h> header file. */\n #undef HAVE_SYS_STAT_H\n \n@@ -82,6 +85,11 @@\n /* Define to 1 if the target use emutls for thread-local storage. */\n #undef USE_EMUTLS\n \n+/* Enable large inode numbers on Mac OS X 10.5.  */\n+#ifndef _DARWIN_USE_64_BIT_INODE\n+# define _DARWIN_USE_64_BIT_INODE 1\n+#endif\n+\n /* Number of bits in a file offset, on hosts where this is settable. */\n #undef _FILE_OFFSET_BITS\n "}, {"sha": "1a8f4c55213f25c67c8bb8cdc1cc6f1bbe3255cb", "filename": "libgcc/config/aarch64/lse-init.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58d169ba9ffca04d77314f525af9efd93881a86b/libgcc%2Fconfig%2Faarch64%2Flse-init.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58d169ba9ffca04d77314f525af9efd93881a86b/libgcc%2Fconfig%2Faarch64%2Flse-init.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Faarch64%2Flse-init.c?ref=58d169ba9ffca04d77314f525af9efd93881a86b", "patch": "@@ -23,12 +23,14 @@ a copy of the GCC Runtime Library Exception along with this program;\n see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n <http://www.gnu.org/licenses/>.  */\n \n+#include \"auto-target.h\"\n+\n /* Define the symbol gating the LSE implementations.  */\n _Bool __aarch64_have_lse_atomics\n   __attribute__((visibility(\"hidden\"), nocommon));\n \n /* Disable initialization of __aarch64_have_lse_atomics during bootstrap.  */\n-#ifndef inhibit_libc\n+#if !defined(inhibit_libc) && defined(HAVE_SYS_AUXV_H)\n # include <sys/auxv.h>\n \n /* Disable initialization if the system headers are too old.  */"}, {"sha": "28c7394b3f9b3a7e331fdb3a50a0b6b4194a635e", "filename": "libgcc/configure", "status": "modified", "additions": 19, "deletions": 7, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58d169ba9ffca04d77314f525af9efd93881a86b/libgcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58d169ba9ffca04d77314f525af9efd93881a86b/libgcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfigure?ref=58d169ba9ffca04d77314f525af9efd93881a86b", "patch": "@@ -675,6 +675,7 @@ infodir\n docdir\n oldincludedir\n includedir\n+runstatedir\n localstatedir\n sharedstatedir\n sysconfdir\n@@ -765,6 +766,7 @@ datadir='${datarootdir}'\n sysconfdir='${prefix}/etc'\n sharedstatedir='${prefix}/com'\n localstatedir='${prefix}/var'\n+runstatedir='${localstatedir}/run'\n includedir='${prefix}/include'\n oldincludedir='/usr/include'\n docdir='${datarootdir}/doc/${PACKAGE_TARNAME}'\n@@ -1017,6 +1019,15 @@ do\n   | -silent | --silent | --silen | --sile | --sil)\n     silent=yes ;;\n \n+  -runstatedir | --runstatedir | --runstatedi | --runstated \\\n+  | --runstate | --runstat | --runsta | --runst | --runs \\\n+  | --run | --ru | --r)\n+    ac_prev=runstatedir ;;\n+  -runstatedir=* | --runstatedir=* | --runstatedi=* | --runstated=* \\\n+  | --runstate=* | --runstat=* | --runsta=* | --runst=* | --runs=* \\\n+  | --run=* | --ru=* | --r=*)\n+    runstatedir=$ac_optarg ;;\n+\n   -sbindir | --sbindir | --sbindi | --sbind | --sbin | --sbi | --sb)\n     ac_prev=sbindir ;;\n   -sbindir=* | --sbindir=* | --sbindi=* | --sbind=* | --sbin=* \\\n@@ -1154,7 +1165,7 @@ fi\n for ac_var in\texec_prefix prefix bindir sbindir libexecdir datarootdir \\\n \t\tdatadir sysconfdir sharedstatedir localstatedir includedir \\\n \t\toldincludedir docdir infodir htmldir dvidir pdfdir psdir \\\n-\t\tlibdir localedir mandir\n+\t\tlibdir localedir mandir runstatedir\n do\n   eval ac_val=\\$$ac_var\n   # Remove trailing slashes.\n@@ -1307,6 +1318,7 @@ Fine tuning of the installation directories:\n   --sysconfdir=DIR        read-only single-machine data [PREFIX/etc]\n   --sharedstatedir=DIR    modifiable architecture-independent data [PREFIX/com]\n   --localstatedir=DIR     modifiable single-machine data [PREFIX/var]\n+  --runstatedir=DIR       modifiable per-process data [LOCALSTATEDIR/run]\n   --libdir=DIR            object code libraries [EPREFIX/lib]\n   --includedir=DIR        C header files [PREFIX/include]\n   --oldincludedir=DIR     C header files for non-gcc [/usr/include]\n@@ -4173,7 +4185,7 @@ else\n     We can't simply define LARGE_OFF_T to be 9223372036854775807,\n     since some C++ compilers masquerading as C compilers\n     incorrectly reject 9223372036854775807.  */\n-#define LARGE_OFF_T (((off_t) 1 << 62) - 1 + ((off_t) 1 << 62))\n+#define LARGE_OFF_T ((((off_t) 1 << 31) << 31) - 1 + (((off_t) 1 << 31) << 31))\n   int off_t_is_large[(LARGE_OFF_T % 2147483629 == 721\n \t\t       && LARGE_OFF_T % 2147483647 == 1)\n \t\t      ? 1 : -1];\n@@ -4219,7 +4231,7 @@ else\n     We can't simply define LARGE_OFF_T to be 9223372036854775807,\n     since some C++ compilers masquerading as C compilers\n     incorrectly reject 9223372036854775807.  */\n-#define LARGE_OFF_T (((off_t) 1 << 62) - 1 + ((off_t) 1 << 62))\n+#define LARGE_OFF_T ((((off_t) 1 << 31) << 31) - 1 + (((off_t) 1 << 31) << 31))\n   int off_t_is_large[(LARGE_OFF_T % 2147483629 == 721\n \t\t       && LARGE_OFF_T % 2147483647 == 1)\n \t\t      ? 1 : -1];\n@@ -4243,7 +4255,7 @@ rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n     We can't simply define LARGE_OFF_T to be 9223372036854775807,\n     since some C++ compilers masquerading as C compilers\n     incorrectly reject 9223372036854775807.  */\n-#define LARGE_OFF_T (((off_t) 1 << 62) - 1 + ((off_t) 1 << 62))\n+#define LARGE_OFF_T ((((off_t) 1 << 31) << 31) - 1 + (((off_t) 1 << 31) << 31))\n   int off_t_is_large[(LARGE_OFF_T % 2147483629 == 721\n \t\t       && LARGE_OFF_T % 2147483647 == 1)\n \t\t      ? 1 : -1];\n@@ -4288,7 +4300,7 @@ else\n     We can't simply define LARGE_OFF_T to be 9223372036854775807,\n     since some C++ compilers masquerading as C compilers\n     incorrectly reject 9223372036854775807.  */\n-#define LARGE_OFF_T (((off_t) 1 << 62) - 1 + ((off_t) 1 << 62))\n+#define LARGE_OFF_T ((((off_t) 1 << 31) << 31) - 1 + (((off_t) 1 << 31) << 31))\n   int off_t_is_large[(LARGE_OFF_T % 2147483629 == 721\n \t\t       && LARGE_OFF_T % 2147483647 == 1)\n \t\t      ? 1 : -1];\n@@ -4312,7 +4324,7 @@ rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n     We can't simply define LARGE_OFF_T to be 9223372036854775807,\n     since some C++ compilers masquerading as C compilers\n     incorrectly reject 9223372036854775807.  */\n-#define LARGE_OFF_T (((off_t) 1 << 62) - 1 + ((off_t) 1 << 62))\n+#define LARGE_OFF_T ((((off_t) 1 << 31) << 31) - 1 + (((off_t) 1 << 31) << 31))\n   int off_t_is_large[(LARGE_OFF_T % 2147483629 == 721\n \t\t       && LARGE_OFF_T % 2147483647 == 1)\n \t\t      ? 1 : -1];\n@@ -4424,7 +4436,7 @@ as_fn_arith $ac_cv_sizeof_long_double \\* 8 && long_double_type_size=$as_val\n \n for ac_header in inttypes.h stdint.h stdlib.h ftw.h \\\n \tunistd.h sys/stat.h sys/types.h \\\n-\tstring.h strings.h memory.h\n+\tstring.h strings.h memory.h sys/auxv.h\n do :\n   as_ac_Header=`$as_echo \"ac_cv_header_$ac_header\" | $as_tr_sh`\n ac_fn_c_check_header_preproc \"$LINENO\" \"$ac_header\" \"$as_ac_Header\""}, {"sha": "f63c5e736e5a447b4fd9cd22eddcad3f0100b3d0", "filename": "libgcc/configure.ac", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58d169ba9ffca04d77314f525af9efd93881a86b/libgcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58d169ba9ffca04d77314f525af9efd93881a86b/libgcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfigure.ac?ref=58d169ba9ffca04d77314f525af9efd93881a86b", "patch": "@@ -207,7 +207,7 @@ AC_SUBST(long_double_type_size)\n \n AC_CHECK_HEADERS(inttypes.h stdint.h stdlib.h ftw.h \\\n \tunistd.h sys/stat.h sys/types.h \\\n-\tstring.h strings.h memory.h)\n+\tstring.h strings.h memory.h sys/auxv.h)\n AC_HEADER_STDC\n \n # Check for decimal float support."}]}