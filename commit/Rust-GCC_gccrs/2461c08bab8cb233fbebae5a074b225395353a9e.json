{"sha": "2461c08bab8cb233fbebae5a074b225395353a9e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjQ2MWMwOGJhYjhjYjIzM2ZiZWJhZTVhMDc0YjIyNTM5NTM1M2E5ZQ==", "commit": {"author": {"name": "Andreas Schwab", "email": "schwab@suse.de", "date": "2003-10-22T13:57:12Z"}, "committer": {"name": "Andreas Schwab", "email": "schwab@gcc.gnu.org", "date": "2003-10-22T13:57:12Z"}, "message": "* src/ia64/ffi.c: Replace FALSE/TRUE with false/true.\n\nFrom-SVN: r72797", "tree": {"sha": "77aec050604bc623660e4099c74404b6e295f9a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/77aec050604bc623660e4099c74404b6e295f9a6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2461c08bab8cb233fbebae5a074b225395353a9e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2461c08bab8cb233fbebae5a074b225395353a9e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2461c08bab8cb233fbebae5a074b225395353a9e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2461c08bab8cb233fbebae5a074b225395353a9e/comments", "author": {"login": "andreas-schwab", "id": 2175493, "node_id": "MDQ6VXNlcjIxNzU0OTM=", "avatar_url": "https://avatars.githubusercontent.com/u/2175493?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andreas-schwab", "html_url": "https://github.com/andreas-schwab", "followers_url": "https://api.github.com/users/andreas-schwab/followers", "following_url": "https://api.github.com/users/andreas-schwab/following{/other_user}", "gists_url": "https://api.github.com/users/andreas-schwab/gists{/gist_id}", "starred_url": "https://api.github.com/users/andreas-schwab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andreas-schwab/subscriptions", "organizations_url": "https://api.github.com/users/andreas-schwab/orgs", "repos_url": "https://api.github.com/users/andreas-schwab/repos", "events_url": "https://api.github.com/users/andreas-schwab/events{/privacy}", "received_events_url": "https://api.github.com/users/andreas-schwab/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "77c018b7b8dfaaf0981ef3c79b04cbf72e2c1f3b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77c018b7b8dfaaf0981ef3c79b04cbf72e2c1f3b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77c018b7b8dfaaf0981ef3c79b04cbf72e2c1f3b"}], "stats": {"total": 30, "additions": 17, "deletions": 13}, "files": [{"sha": "3fef2f8a3faeefb6fc0fa0f54296962d800d4920", "filename": "libffi/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2461c08bab8cb233fbebae5a074b225395353a9e/libffi%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2461c08bab8cb233fbebae5a074b225395353a9e/libffi%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2FChangeLog?ref=2461c08bab8cb233fbebae5a074b225395353a9e", "patch": "@@ -1,3 +1,7 @@\n+2003-10-22  Andreas Schwab  <schwab@suse.de>\n+\n+\t* src/ia64/ffi.c: Replace FALSE/TRUE with false/true.\n+\n 2003-10-21  Andreas Tobler  <a.tobler@schweiz.ch>\n \n \t* configure.in: AC_LINK_FILES(ffitarget.h)."}, {"sha": "c846f6e1338913ac3057d1698157a425624166ac", "filename": "libffi/src/ia64/ffi.c", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2461c08bab8cb233fbebae5a074b225395353a9e/libffi%2Fsrc%2Fia64%2Fffi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2461c08bab8cb233fbebae5a074b225395353a9e/libffi%2Fsrc%2Fia64%2Fffi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fia64%2Fffi.c?ref=2461c08bab8cb233fbebae5a074b225395353a9e", "patch": "@@ -93,33 +93,33 @@ static bool is_homogeneous_fp_aggregate(ffi_type * type, int n,\n       switch((*ptr) -> type) {\n \tcase FFI_TYPE_FLOAT:\n \t  if (type_set && element != FFI_TYPE_FLOAT) return 0;\n-\t  if (--n < 0) return FALSE;\n+\t  if (--n < 0) return false;\n \t  type_set = 1;\n \t  element = FFI_TYPE_FLOAT;\n \t  break;\n \tcase FFI_TYPE_DOUBLE:\n \t  if (type_set && element != FFI_TYPE_DOUBLE) return 0;\n-\t  if (--n < 0) return FALSE;\n+\t  if (--n < 0) return false;\n \t  type_set = 1;\n \t  element = FFI_TYPE_DOUBLE;\n \t  break;\n \tcase FFI_TYPE_STRUCT:\n \t  if (!is_homogeneous_fp_aggregate(type, n, &struct_element))\n-\t      return FALSE;\n-\t  if (type_set && struct_element != element) return FALSE;\n+\t      return false;\n+\t  if (type_set && struct_element != element) return false;\n \t  n -= (type -> size)/float_type_size(element);\n \t  element = struct_element;\n-\t  if (n < 0) return FALSE;\n+\t  if (n < 0) return false;\n \t  break;\n \t/* case FFI_TYPE_LONGDOUBLE:\n \t  Not yet implemented.\t*/\n \tdefault:\n-\t  return FALSE;\n+\t  return false;\n       }\n       ptr++;\n     }\n   *element_type = element;\n-  return TRUE;\n+  return true;\n    \n } \n \n@@ -252,7 +252,7 @@ ffi_status\n ffi_prep_cif_machdep(ffi_cif *cif)\n {\n   long i, avn;\n-  bool is_simple = TRUE;\n+  bool is_simple = true;\n   long simple_flag = FFI_SIMPLE_V;\n   /* Adjust cif->bytes to include space for the 2 scratch words,\n      r8 register contents, spare word,\n@@ -282,11 +282,11 @@ ffi_prep_cif_machdep(ffi_cif *cif)\n \t  simple_flag = FFI_ADD_LONG_ARG(simple_flag);\n \t  break;\n \tdefault:\n-\t  is_simple = FALSE;\n+\t  is_simple = false;\n       }\n     }\n   } else {\n-    is_simple = FALSE;\n+    is_simple = false;\n   }\n \n   /* Set the return type flag */\n@@ -301,7 +301,7 @@ ffi_prep_cif_machdep(ffi_cif *cif)\n         size_t sz = cif -> rtype -> size;\n   \tunsigned short element_type;\n \n-\tis_simple = FALSE;\n+\tis_simple = false;\n   \tif (is_homogeneous_fp_aggregate(cif -> rtype, 8, &element_type)) {\n \t  int nelements = sz/float_type_size(element_type);\n \t  if (nelements <= 1) {\n@@ -342,12 +342,12 @@ ffi_prep_cif_machdep(ffi_cif *cif)\n       break;\n \n     case FFI_TYPE_FLOAT:\n-      is_simple = FALSE;\n+      is_simple = false;\n       cif->flags = FFI_TYPE_FLOAT;\n       break;\n \n     case FFI_TYPE_DOUBLE:\n-      is_simple = FALSE;\n+      is_simple = false;\n       cif->flags = FFI_TYPE_DOUBLE;\n       break;\n "}]}