{"sha": "d25f0ebc386ed1a8579c54e3b7d815633daaee1d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDI1ZjBlYmMzODZlZDFhODU3OWM1NGUzYjdkODE1NjMzZGFhZWUxZA==", "commit": {"author": {"name": "Andreas Tobler", "email": "a.tobler@schweiz.ch", "date": "2006-07-04T20:21:40Z"}, "committer": {"name": "Andreas Tobler", "email": "andreast@gcc.gnu.org", "date": "2006-07-04T20:21:40Z"}, "message": "re PR libgcj/28226 (posix.cc:222: error: invalid conversion from 'const void*' to 'void*')\n\n2006-07-04  Andreas Tobler  <a.tobler@schweiz.ch>\n\n\tPR libgcj/28226:\n\t* include/posix.h (_Jv_platform_dladdr): Remove const qualifier.\n\t* include/win32.h (_Jv_platform_dladdr): Likewise.\n\t* posix.cc (_Jv_platform_dladdr): Likewise.\n\t* win32.cc (_Jv_platform_dladdr): Likewise.\n\nFrom-SVN: r115184", "tree": {"sha": "df79bd6e530999bef7480c314c71636a275971fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/df79bd6e530999bef7480c314c71636a275971fc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d25f0ebc386ed1a8579c54e3b7d815633daaee1d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d25f0ebc386ed1a8579c54e3b7d815633daaee1d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d25f0ebc386ed1a8579c54e3b7d815633daaee1d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d25f0ebc386ed1a8579c54e3b7d815633daaee1d/comments", "author": null, "committer": null, "parents": [{"sha": "706601d965756f53d473d8b173c788cefc9b2917", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/706601d965756f53d473d8b173c788cefc9b2917", "html_url": "https://github.com/Rust-GCC/gccrs/commit/706601d965756f53d473d8b173c788cefc9b2917"}], "stats": {"total": 14, "additions": 10, "deletions": 4}, "files": [{"sha": "fd3b6d0e572ca2fa35bd009fa85368bfc73e00fa", "filename": "libjava/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d25f0ebc386ed1a8579c54e3b7d815633daaee1d/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d25f0ebc386ed1a8579c54e3b7d815633daaee1d/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=d25f0ebc386ed1a8579c54e3b7d815633daaee1d", "patch": "@@ -1,5 +1,11 @@\n 2006-07-04  Andreas Tobler  <a.tobler@schweiz.ch>\n \n+\tPR libgcj/28226:\n+\t* include/posix.h (_Jv_platform_dladdr): Remove const qualifier.\n+\t* include/win32.h (_Jv_platform_dladdr): Likewise.\n+\t* posix.cc (_Jv_platform_dladdr): Likewise.\n+\t* win32.cc (_Jv_platform_dladdr): Likewise.\n+\n \t* testsuite/lib/libjava.exp (libjava_init): Look for libgcj-$version.jar\n \tinstead of libgcj-*.jar.\n "}, {"sha": "ea4762c6a1bfef46500fa4c2e70edab21c0c37e6", "filename": "libjava/include/posix.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d25f0ebc386ed1a8579c54e3b7d815633daaee1d/libjava%2Finclude%2Fposix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d25f0ebc386ed1a8579c54e3b7d815633daaee1d/libjava%2Finclude%2Fposix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Finclude%2Fposix.h?ref=d25f0ebc386ed1a8579c54e3b7d815633daaee1d", "patch": "@@ -199,6 +199,6 @@ struct _Jv_AddrInfo;\n \n // Given an address, determine the executable or shared object that defines\n // it and the nearest named symbol.\n-extern int _Jv_platform_dladdr (const void *addr, _Jv_AddrInfo *info);\n+extern int _Jv_platform_dladdr (void *addr, _Jv_AddrInfo *info);\n \n #endif /* __JV_POSIX_H__ */"}, {"sha": "a461d88f56ca788d607d79e513238721251db33d", "filename": "libjava/include/win32.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d25f0ebc386ed1a8579c54e3b7d815633daaee1d/libjava%2Finclude%2Fwin32.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d25f0ebc386ed1a8579c54e3b7d815633daaee1d/libjava%2Finclude%2Fwin32.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Finclude%2Fwin32.h?ref=d25f0ebc386ed1a8579c54e3b7d815633daaee1d", "patch": "@@ -180,6 +180,6 @@ struct _Jv_AddrInfo;\n \n // Given an address, determine the executable or shared object that defines\n // it and the nearest named symbol.\n-extern int _Jv_platform_dladdr (const void *addr, _Jv_AddrInfo *info);\n+extern int _Jv_platform_dladdr (void *addr, _Jv_AddrInfo *info);\n \n #endif /* __JV_WIN32_H__ */"}, {"sha": "d191d8ea7a1c8303d66c98feae45a4faf7b4cb7b", "filename": "libjava/posix.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d25f0ebc386ed1a8579c54e3b7d815633daaee1d/libjava%2Fposix.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d25f0ebc386ed1a8579c54e3b7d815633daaee1d/libjava%2Fposix.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fposix.cc?ref=d25f0ebc386ed1a8579c54e3b7d815633daaee1d", "patch": "@@ -213,7 +213,7 @@ _Jv_select (int n, fd_set *readfds, fd_set  *writefds,\n // defined symbol to that address.  Returns 0 if no object defines this\n // address.\n int\n-_Jv_platform_dladdr (const void *addr, _Jv_AddrInfo *info)\n+_Jv_platform_dladdr (void *addr, _Jv_AddrInfo *info)\n {\n   int ret_val = 0;\n "}, {"sha": "00b42796ce46c35f776e293eda8be0c7d332d4c7", "filename": "libjava/win32.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d25f0ebc386ed1a8579c54e3b7d815633daaee1d/libjava%2Fwin32.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d25f0ebc386ed1a8579c54e3b7d815633daaee1d/libjava%2Fwin32.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fwin32.cc?ref=d25f0ebc386ed1a8579c54e3b7d815633daaee1d", "patch": "@@ -463,7 +463,7 @@ _Jv_platform_close_on_exec (HANDLE h)\n // defined symbol to that address.  Returns 0 if no object defines this\n // address.\n int\n-_Jv_platform_dladdr (const void *addr, _Jv_AddrInfo *info)\n+_Jv_platform_dladdr (void *addr, _Jv_AddrInfo *info)\n {\n   // Since we do not have dladdr() on Windows, we use a trick involving\n   // VirtualQuery() to find the module (EXE or DLL) that contains a given"}]}