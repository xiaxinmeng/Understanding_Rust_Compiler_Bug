{"sha": "f5dbb57cce8c2e929b60924ce4614f9d6d65dc44", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjVkYmI1N2NjZThjMmU5MjliNjA5MjRjZTQ2MTRmOWQ2ZDY1ZGM0NA==", "commit": {"author": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2010-05-10T12:54:25Z"}, "committer": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2010-05-10T12:54:25Z"}, "message": "re PR fortran/44044 ([OOP] SELECT TYPE with class-valued function)\n\n2010-05-10  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/44044\n\t* match.c (gfc_match_select_type): Move error message to\n\tresolve_select_type.\n\t* resolve.c (resolve_select_type): Error message moved here from\n\tgfc_match_select_type. Correctly set type of temporary.\n\n\n2010-05-10  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/44044\n\t* gfortran.dg/class_7.f03: Modified.\n\t* gfortran.dg/select_type_1.f03: Modified.\n\t* gfortran.dg/select_type_12.f03: New.\n\nFrom-SVN: r159217", "tree": {"sha": "e563d36b6b1d235413284a75df8c5b7e88a33c68", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e563d36b6b1d235413284a75df8c5b7e88a33c68"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f5dbb57cce8c2e929b60924ce4614f9d6d65dc44", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5dbb57cce8c2e929b60924ce4614f9d6d65dc44", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f5dbb57cce8c2e929b60924ce4614f9d6d65dc44", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5dbb57cce8c2e929b60924ce4614f9d6d65dc44/comments", "author": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "571943de9aaa2135d90dc042f80081fc11d9761d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/571943de9aaa2135d90dc042f80081fc11d9761d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/571943de9aaa2135d90dc042f80081fc11d9761d"}], "stats": {"total": 99, "additions": 87, "deletions": 12}, "files": [{"sha": "d168a3b44aa1ac5023cb63c53809b7c6ce344e15", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5dbb57cce8c2e929b60924ce4614f9d6d65dc44/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5dbb57cce8c2e929b60924ce4614f9d6d65dc44/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=f5dbb57cce8c2e929b60924ce4614f9d6d65dc44", "patch": "@@ -1,3 +1,11 @@\n+2010-05-10  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/44044\n+\t* match.c (gfc_match_select_type): Move error message to\n+\tresolve_select_type.\n+\t* resolve.c (resolve_select_type): Error message moved here from\n+\tgfc_match_select_type. Correctly set type of temporary.\n+\n 2010-05-10  Richard Guenther  <rguenther@suse.de>\n \n \t* trans-decl.c (gfc_build_library_function_decl): Split out"}, {"sha": "3dfe0880bfe439eb1624932485bbab0e5bafac5e", "filename": "gcc/fortran/match.c", "status": "modified", "additions": 4, "deletions": 9, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5dbb57cce8c2e929b60924ce4614f9d6d65dc44/gcc%2Ffortran%2Fmatch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5dbb57cce8c2e929b60924ce4614f9d6d65dc44/gcc%2Ffortran%2Fmatch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fmatch.c?ref=f5dbb57cce8c2e929b60924ce4614f9d6d65dc44", "patch": "@@ -4314,7 +4314,10 @@ gfc_match_select_type (void)\n       expr1->expr_type = EXPR_VARIABLE;\n       if (gfc_get_sym_tree (name, NULL, &expr1->symtree, false))\n \treturn MATCH_ERROR;\n-      expr1->symtree->n.sym->ts = expr2->ts;\n+      if (expr2->ts.type == BT_UNKNOWN)\n+\texpr1->symtree->n.sym->attr.untyped = 1;\n+      else\n+\texpr1->symtree->n.sym->ts = expr2->ts;\n       expr1->symtree->n.sym->attr.referenced = 1;\n       expr1->symtree->n.sym->attr.class_ok = 1;\n     }\n@@ -4337,14 +4340,6 @@ gfc_match_select_type (void)\n       return MATCH_ERROR;\n     }\n \n-  /* Check for F03:C813.  */\n-  if (expr1->ts.type != BT_CLASS && !(expr2 && expr2->ts.type == BT_CLASS))\n-    {\n-      gfc_error (\"Selector shall be polymorphic in SELECT TYPE statement \"\n-\t\t \"at %C\");\n-      return MATCH_ERROR;\n-    }\n-\n   new_st.op = EXEC_SELECT_TYPE;\n   new_st.expr1 = expr1;\n   new_st.expr2 = expr2;"}, {"sha": "5afb08d516f6e9de233c9580a5dfed2277667b3f", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5dbb57cce8c2e929b60924ce4614f9d6d65dc44/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5dbb57cce8c2e929b60924ce4614f9d6d65dc44/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=f5dbb57cce8c2e929b60924ce4614f9d6d65dc44", "patch": "@@ -7078,8 +7078,21 @@ resolve_select_type (gfc_code *code)\n   ns = code->ext.ns;\n   gfc_resolve (ns);\n \n+  /* Check for F03:C813.  */\n+  if (code->expr1->ts.type != BT_CLASS\n+      && !(code->expr2 && code->expr2->ts.type == BT_CLASS))\n+    {\n+      gfc_error (\"Selector shall be polymorphic in SELECT TYPE statement \"\n+\t\t \"at %L\", &code->loc);\n+      return;\n+    }\n+\n   if (code->expr2)\n-    selector_type = code->expr2->ts.u.derived->components->ts.u.derived;\n+    {\n+      if (code->expr1->symtree->n.sym->attr.untyped)\n+\tcode->expr1->symtree->n.sym->ts = code->expr2->ts;\n+      selector_type = code->expr2->ts.u.derived->components->ts.u.derived;\n+    }\n   else\n     selector_type = code->expr1->ts.u.derived->components->ts.u.derived;\n "}, {"sha": "e9ab06abbb5bf8ff91fb24624b67444564f04647", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5dbb57cce8c2e929b60924ce4614f9d6d65dc44/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5dbb57cce8c2e929b60924ce4614f9d6d65dc44/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f5dbb57cce8c2e929b60924ce4614f9d6d65dc44", "patch": "@@ -1,3 +1,10 @@\n+2010-05-10  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/44044\n+\t* gfortran.dg/class_7.f03: Modified.\n+\t* gfortran.dg/select_type_1.f03: Modified.\n+\t* gfortran.dg/select_type_12.f03: New.\n+\n 2010-05-10  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/44050"}, {"sha": "99fbf6fc69bb49ad008e742b839779aeb6fc5e5d", "filename": "gcc/testsuite/gfortran.dg/class_7.f03", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5dbb57cce8c2e929b60924ce4614f9d6d65dc44/gcc%2Ftestsuite%2Fgfortran.dg%2Fclass_7.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5dbb57cce8c2e929b60924ce4614f9d6d65dc44/gcc%2Ftestsuite%2Fgfortran.dg%2Fclass_7.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fclass_7.f03?ref=f5dbb57cce8c2e929b60924ce4614f9d6d65dc44", "patch": "@@ -16,6 +16,6 @@\n   class(t1), pointer :: c  ! { dg-error \"before it is defined\" }\n \n   select type (c)          ! { dg-error \"shall be polymorphic\" }\n-    type is (t1)           ! { dg-error \"Unexpected\" }\n-  end select               ! { dg-error \"Expecting END PROGRAM\" }\n+    type is (t0)\n+  end select\n end"}, {"sha": "840dde922f28decc8ba323be1b3b29dce240ca6c", "filename": "gcc/testsuite/gfortran.dg/select_type_1.f03", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5dbb57cce8c2e929b60924ce4614f9d6d65dc44/gcc%2Ftestsuite%2Fgfortran.dg%2Fselect_type_1.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5dbb57cce8c2e929b60924ce4614f9d6d65dc44/gcc%2Ftestsuite%2Fgfortran.dg%2Fselect_type_1.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fselect_type_1.f03?ref=f5dbb57cce8c2e929b60924ce4614f9d6d65dc44", "patch": "@@ -33,6 +33,7 @@\n   select type (3.5)  ! { dg-error \"is not a named variable\" }\n   select type (a%cp) ! { dg-error \"is not a named variable\" }\n   select type (b)    ! { dg-error \"Selector shall be polymorphic\" }\n+  end select\n \n   select type (a)\n     print *,\"hello world!\"  ! { dg-error \"Expected TYPE IS, CLASS IS or END SELECT\" }"}, {"sha": "eb942d1e13b6bec2bd6e5f761e489596aa60faa7", "filename": "gcc/testsuite/gfortran.dg/select_type_12.f03", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5dbb57cce8c2e929b60924ce4614f9d6d65dc44/gcc%2Ftestsuite%2Fgfortran.dg%2Fselect_type_12.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5dbb57cce8c2e929b60924ce4614f9d6d65dc44/gcc%2Ftestsuite%2Fgfortran.dg%2Fselect_type_12.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fselect_type_12.f03?ref=f5dbb57cce8c2e929b60924ce4614f9d6d65dc44", "patch": "@@ -0,0 +1,51 @@\n+! { dg-do compile }\n+!\n+! PR 44044: [OOP] SELECT TYPE with class-valued function\n+!\n+! Contributed by Janus Weil <janus@gcc.gnu.org>\n+\n+implicit none\n+\n+type :: t1\n+  integer :: i\n+end type\n+\n+type, extends(t1) :: t2\n+end type\n+\n+type(t1),target :: x1\n+type(t2),target :: x2\n+\n+select type ( y => fun(1) )\n+type is (t1)\n+  print *,\"t1\"\n+type is (t2)\n+  print *,\"t2\"\n+class default\n+  print *,\"default\"\n+end select\n+\n+select type ( y => fun(-1) )\n+type is (t1)\n+  print *,\"t1\"\n+type is (t2)\n+  print *,\"t2\"\n+class default\n+  print *,\"default\"\n+end select\n+\n+contains\n+\n+  function fun(i)\n+    class(t1),pointer :: fun\n+    integer :: i\n+    if (i>0) then\n+      fun => x1\n+    else if (i<0) then\n+      fun => x2\n+    else\n+      fun => NULL()\n+    end if\n+  end function\n+\n+end"}]}