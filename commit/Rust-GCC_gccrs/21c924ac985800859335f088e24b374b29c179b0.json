{"sha": "21c924ac985800859335f088e24b374b29c179b0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjFjOTI0YWM5ODU4MDA4NTkzMzVmMDg4ZTI0YjM3NGIyOWMxNzliMA==", "commit": {"author": {"name": "Alexander Ivchenko", "email": "alexander.ivchenko@intel.com", "date": "2014-08-19T07:32:22Z"}, "committer": {"name": "Kirill Yukhin", "email": "kyukhin@gcc.gnu.org", "date": "2014-08-19T07:32:22Z"}, "message": "sse.md (define_mode_iterator VI48_AVX512F): Delete.\n\ngcc/\n\t* config/i386/sse.md\n\t(define_mode_iterator VI48_AVX512F): Delete.\n\t(define_mode_iterator VI48_AVX512F_AVX512VL): New.\n\t(define_mode_iterator VI2_AVX512VL): Ditto.\n\t(define_insn \"<mask_codefor>avx512f_ufix_notruncv16sfv16si<mask_name><round_name>\"):\n\tDelete.\n\t(define_insn\n\t(\"<mask_codefor><avx512>_ufix_notrunc<sf2simodelower><mode><mask_name><round_name>\"):\n\tNew.\n\t(define_insn \"avx512cd_maskw_vec_dup<mode>\"): Macroize.\n\t(define_insn \"<avx2_avx512f>_ashrv<mode><mask_name>\"): Delete.\n\t(define_insn \"<avx2_avx512bw>_ashrv<mode><mask_name>\",\n\twith VI48_AVX512F_AVX512VL): New.\n\t(define_insn \"<avx2_avx512bw>_ashrv<mode><mask_name>\",\n\twith VI2_AVX512VL): Ditto.\n\nCo-Authored-By: Andrey Turetskiy <andrey.turetskiy@intel.com>\nCo-Authored-By: Anna Tikhonova <anna.tikhonova@intel.com>\nCo-Authored-By: Ilya Tocar <ilya.tocar@intel.com>\nCo-Authored-By: Ilya Verbin <ilya.verbin@intel.com>\nCo-Authored-By: Kirill Yukhin <kirill.yukhin@intel.com>\nCo-Authored-By: Maxim Kuznetsov <maxim.kuznetsov@intel.com>\nCo-Authored-By: Michael Zolotukhin <michael.v.zolotukhin@intel.com>\n\nFrom-SVN: r214134", "tree": {"sha": "a1f180486d339bea069c4821194b17669c8112af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a1f180486d339bea069c4821194b17669c8112af"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/21c924ac985800859335f088e24b374b29c179b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21c924ac985800859335f088e24b374b29c179b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/21c924ac985800859335f088e24b374b29c179b0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21c924ac985800859335f088e24b374b29c179b0/comments", "author": null, "committer": null, "parents": [{"sha": "35aff4fb82ce0f615dc5e0ad73341a1fe77cbd12", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35aff4fb82ce0f615dc5e0ad73341a1fe77cbd12", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35aff4fb82ce0f615dc5e0ad73341a1fe77cbd12"}], "stats": {"total": 74, "additions": 58, "deletions": 16}, "files": [{"sha": "d0f260b4712b3081aa446777130bbd549db1d3c2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21c924ac985800859335f088e24b374b29c179b0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21c924ac985800859335f088e24b374b29c179b0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=21c924ac985800859335f088e24b374b29c179b0", "patch": "@@ -1,3 +1,28 @@\n+2014-08-19  Alexander Ivchenko  <alexander.ivchenko@intel.com>\n+\t    Maxim Kuznetsov  <maxim.kuznetsov@intel.com>\n+\t    Anna Tikhonova  <anna.tikhonova@intel.com>\n+\t    Ilya Tocar  <ilya.tocar@intel.com>\n+\t    Andrey Turetskiy  <andrey.turetskiy@intel.com>\n+\t    Ilya Verbin  <ilya.verbin@intel.com>\n+\t    Kirill Yukhin  <kirill.yukhin@intel.com>\n+\t    Michael Zolotukhin  <michael.v.zolotukhin@intel.com>\n+\n+\t* config/i386/sse.md\n+\t(define_mode_iterator VI48_AVX512F): Delete.\n+\t(define_mode_iterator VI48_AVX512F_AVX512VL): New.\n+\t(define_mode_iterator VI2_AVX512VL): Ditto.\n+\t(define_insn \"<mask_codefor>avx512f_ufix_notruncv16sfv16si<mask_name><round_name>\"):\n+\tDelete.\n+\t(define_insn\n+\t(\"<mask_codefor><avx512>_ufix_notrunc<sf2simodelower><mode><mask_name><round_name>\"):\n+\tNew.\n+\t(define_insn \"avx512cd_maskw_vec_dup<mode>\"): Macroize.\n+\t(define_insn \"<avx2_avx512f>_ashrv<mode><mask_name>\"): Delete.\n+\t(define_insn \"<avx2_avx512bw>_ashrv<mode><mask_name>\",\n+\twith VI48_AVX512F_AVX512VL): New.\n+\t(define_insn \"<avx2_avx512bw>_ashrv<mode><mask_name>\",\n+\twith VI2_AVX512VL): Ditto.\n+\n 2014-08-19  Marek Polacek  <polacek@redhat.com>\n \n \t* doc/invoke.texi: Document -Wc99-c11-compat."}, {"sha": "967092e35fb0009f757039de08a96ae14d5d9444", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 33, "deletions": 16, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21c924ac985800859335f088e24b374b29c179b0/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21c924ac985800859335f088e24b374b29c179b0/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=21c924ac985800859335f088e24b374b29c179b0", "patch": "@@ -284,9 +284,15 @@\n (define_mode_iterator VI4_AVX512F\n   [(V16SI \"TARGET_AVX512F\") (V8SI \"TARGET_AVX2\") V4SI])\n \n-(define_mode_iterator VI48_AVX512F\n-  [(V16SI \"TARGET_AVX512F\") (V8SI \"TARGET_AVX2\") V4SI\n-   (V8DI \"TARGET_AVX512F\")])\n+(define_mode_iterator VI4_AVX512VL\n+  [V16SI (V8SI \"TARGET_AVX512VL\") (V4SI \"TARGET_AVX512VL\")])\n+\n+(define_mode_iterator VI48_AVX512F_AVX512VL\n+  [V4SI V8SI (V16SI \"TARGET_AVX512F\")\n+   (V2DI \"TARGET_AVX512VL\") (V4DI \"TARGET_AVX512VL\") (V8DI \"TARGET_AVX512F\")])\n+\n+(define_mode_iterator VI2_AVX512VL\n+  [(V8HI \"TARGET_AVX512VL\") (V16HI \"TARGET_AVX512VL\") V32HI])\n \n (define_mode_iterator VI8_AVX2_AVX512BW\n   [(V8DI \"TARGET_AVX512BW\") (V4DI \"TARGET_AVX2\") V2DI])\n@@ -3747,16 +3753,16 @@\n    (set_attr \"prefix\" \"evex\")\n    (set_attr \"mode\" \"XI\")])\n \n-(define_insn \"<mask_codefor>avx512f_ufix_notruncv16sfv16si<mask_name><round_name>\"\n-  [(set (match_operand:V16SI 0 \"register_operand\" \"=v\")\n-\t(unspec:V16SI\n-\t  [(match_operand:V16SF 1 \"<round_nimm_predicate>\" \"<round_constraint>\")]\n+(define_insn \"<mask_codefor><avx512>_ufix_notrunc<sf2simodelower><mode><mask_name><round_name>\"\n+  [(set (match_operand:VI4_AVX512VL 0 \"register_operand\" \"=v\")\n+\t(unspec:VI4_AVX512VL\n+\t  [(match_operand:<ssePSmode> 1 \"nonimmediate_operand\" \"<round_constraint>\")]\n \t  UNSPEC_UNSIGNED_FIX_NOTRUNC))]\n   \"TARGET_AVX512F\"\n   \"vcvtps2udq\\t{<round_mask_op2>%1, %0<mask_operand2>|%0<mask_operand2>, %1<round_mask_op2>}\"\n   [(set_attr \"type\" \"ssecvt\")\n    (set_attr \"prefix\" \"evex\")\n-   (set_attr \"mode\" \"XI\")])\n+   (set_attr \"mode\" \"<sseinsnmode>\")])\n \n (define_insn \"<fixsuffix>fix_truncv16sfv16si2<mask_name><round_saeonly_name>\"\n   [(set (match_operand:V16SI 0 \"register_operand\" \"=v\")\n@@ -14486,9 +14492,9 @@\n    (set_attr \"prefix\" \"evex\")\n    (set_attr \"mode\" \"XI\")])\n \n-(define_insn \"avx512cd_maskw_vec_dupv16si\"\n-  [(set (match_operand:V16SI 0 \"register_operand\" \"=v\")\n-\t(vec_duplicate:V16SI\n+(define_insn \"avx512cd_maskw_vec_dup<mode>\"\n+  [(set (match_operand:VI4_AVX512VL 0 \"register_operand\" \"=v\")\n+\t(vec_duplicate:VI4_AVX512VL\n \t  (zero_extend:SI\n \t    (match_operand:HI 1 \"register_operand\" \"Yk\"))))]\n   \"TARGET_AVX512CD\"\n@@ -15170,17 +15176,28 @@\n   DONE;\n })\n \n-(define_insn \"<avx2_avx512f>_ashrv<mode><mask_name>\"\n-  [(set (match_operand:VI48_AVX512F 0 \"register_operand\" \"=v\")\n-\t(ashiftrt:VI48_AVX512F\n-\t  (match_operand:VI48_AVX512F 1 \"register_operand\" \"v\")\n-\t  (match_operand:VI48_AVX512F 2 \"nonimmediate_operand\" \"vm\")))]\n+(define_insn \"<avx2_avx512bw>_ashrv<mode><mask_name>\"\n+  [(set (match_operand:VI48_AVX512F_AVX512VL 0 \"register_operand\" \"=v\")\n+\t(ashiftrt:VI48_AVX512F_AVX512VL\n+\t  (match_operand:VI48_AVX512F_AVX512VL 1 \"register_operand\" \"v\")\n+\t  (match_operand:VI48_AVX512F_AVX512VL 2 \"nonimmediate_operand\" \"vm\")))]\n   \"TARGET_AVX2 && <mask_mode512bit_condition>\"\n   \"vpsrav<ssemodesuffix>\\t{%2, %1, %0<mask_operand3>|%0<mask_operand3>, %1, %2}\"\n   [(set_attr \"type\" \"sseishft\")\n    (set_attr \"prefix\" \"maybe_evex\")\n    (set_attr \"mode\" \"<sseinsnmode>\")])\n \n+(define_insn \"<avx2_avx512bw>_ashrv<mode><mask_name>\"\n+  [(set (match_operand:VI2_AVX512VL 0 \"register_operand\" \"=v\")\n+\t(ashiftrt:VI2_AVX512VL\n+\t  (match_operand:VI2_AVX512VL 1 \"register_operand\" \"v\")\n+\t  (match_operand:VI2_AVX512VL 2 \"nonimmediate_operand\" \"vm\")))]\n+  \"TARGET_AVX512BW\"\n+  \"vpsravw\\t{%2, %1, %0<mask_operand3>|%0<mask_operand3>, %1, %2}\"\n+  [(set_attr \"type\" \"sseishft\")\n+   (set_attr \"prefix\" \"maybe_evex\")\n+   (set_attr \"mode\" \"<sseinsnmode>\")])\n+\n (define_insn \"<avx2_avx512f>_<shift_insn>v<mode><mask_name>\"\n   [(set (match_operand:VI48_AVX2_48_AVX512F 0 \"register_operand\" \"=v\")\n \t(any_lshift:VI48_AVX2_48_AVX512F"}]}