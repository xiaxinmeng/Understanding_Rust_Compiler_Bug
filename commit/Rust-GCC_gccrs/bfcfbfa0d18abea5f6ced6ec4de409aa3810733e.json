{"sha": "bfcfbfa0d18abea5f6ced6ec4de409aa3810733e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmZjZmJmYTBkMThhYmVhNWY2Y2VkNmVjNGRlNDA5YWEzODEwNzMzZQ==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2015-11-05T18:21:30Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2015-11-05T18:21:30Z"}, "message": "re PR c/68090 (VLA compound literal  -- \"confused by earlier errors, bailing out\")\n\n\tPR c/68090\n\t* c-parser.c (c_parser_postfix_expression_after_paren_type): Don't\n\tdeal with pre-evaluation on invalid types.\n\n\t* gcc.dg/pr68090.c: New test.\n\nFrom-SVN: r229823", "tree": {"sha": "ef71137066f2639805c87c5bb97d6e1665cf4a6f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ef71137066f2639805c87c5bb97d6e1665cf4a6f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bfcfbfa0d18abea5f6ced6ec4de409aa3810733e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bfcfbfa0d18abea5f6ced6ec4de409aa3810733e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bfcfbfa0d18abea5f6ced6ec4de409aa3810733e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bfcfbfa0d18abea5f6ced6ec4de409aa3810733e/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5d819bb7c82fa999fd4a1da2a3afdf715667859c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d819bb7c82fa999fd4a1da2a3afdf715667859c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d819bb7c82fa999fd4a1da2a3afdf715667859c"}], "stats": {"total": 26, "additions": 25, "deletions": 1}, "files": [{"sha": "7839024cc8875df6031fbfa0bc82ef5d23f2cc45", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfcfbfa0d18abea5f6ced6ec4de409aa3810733e/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfcfbfa0d18abea5f6ced6ec4de409aa3810733e/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=bfcfbfa0d18abea5f6ced6ec4de409aa3810733e", "patch": "@@ -1,3 +1,9 @@\n+2015-11-05  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c/68090\n+\t* c-parser.c (c_parser_postfix_expression_after_paren_type): Don't\n+\tdeal with pre-evaluation on invalid types.\n+\n 2015-11-05  Jakub Jelinek  <jakub@redhat.com>\n \t    Ilya Verbin  <ilya.verbin@intel.com>\n "}, {"sha": "e2f55b354d10e5ce2a9762bbe79af865ea81db29", "filename": "gcc/c/c-parser.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfcfbfa0d18abea5f6ced6ec4de409aa3810733e/gcc%2Fc%2Fc-parser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfcfbfa0d18abea5f6ced6ec4de409aa3810733e/gcc%2Fc%2Fc-parser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-parser.c?ref=bfcfbfa0d18abea5f6ced6ec4de409aa3810733e", "patch": "@@ -7855,7 +7855,7 @@ c_parser_postfix_expression_after_paren_type (c_parser *parser,\n   expr.value = build_compound_literal (start_loc, type, init.value, non_const);\n   expr.original_code = ERROR_MARK;\n   expr.original_type = NULL;\n-  if (type_expr)\n+  if (type != error_mark_node && type_expr)\n     {\n       if (TREE_CODE (expr.value) == C_MAYBE_CONST_EXPR)\n \t{"}, {"sha": "2727d7da42419bef1e264fbeb65ebace8a9ad17e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfcfbfa0d18abea5f6ced6ec4de409aa3810733e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfcfbfa0d18abea5f6ced6ec4de409aa3810733e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bfcfbfa0d18abea5f6ced6ec4de409aa3810733e", "patch": "@@ -1,3 +1,8 @@\n+2015-11-05  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c/68090\n+\t* gcc.dg/pr68090.c: New test.\n+\n 2015-11-05  James Greenhalgh  <james.greenhalgh@arm.com>\n \n \t* gcc.dg/ifcvt-4.c: New."}, {"sha": "87b3b93ed0352623de617b9d161e3805b1ed69bc", "filename": "gcc/testsuite/gcc.dg/pr68090.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfcfbfa0d18abea5f6ced6ec4de409aa3810733e/gcc%2Ftestsuite%2Fgcc.dg%2Fpr68090.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfcfbfa0d18abea5f6ced6ec4de409aa3810733e/gcc%2Ftestsuite%2Fgcc.dg%2Fpr68090.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr68090.c?ref=bfcfbfa0d18abea5f6ced6ec4de409aa3810733e", "patch": "@@ -0,0 +1,13 @@\n+/* PR c/68090 */\n+/* { dg-do compile } */\n+/* { dg-options \"\" } */\n+\n+void\n+fn (int i)\n+{\n+  (int[(0, 1)]) { 0 }; /* { dg-error \"compound literal has variable size\" } */\n+  (int[i]) { 0 }; /* { dg-error \"compound literal has variable size\" } */\n+  (int[(0, i)]) { 0 }; /* { dg-error \"compound literal has variable size\" } */\n+  (int [][i]){ 0 }; /* { dg-error \"compound literal has variable size\" } */\n+  (int [][(1, 2)]){ 0 }; /* { dg-error \"compound literal has variable size\" } */\n+}"}]}