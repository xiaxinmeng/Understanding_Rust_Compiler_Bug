{"sha": "66b466c309828b8b2f09bcd3a614e59ff5ded8c3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjZiNDY2YzMwOTgyOGI4YjJmMDliY2QzYTYxNGU1OWZmNWRlZDhjMw==", "commit": {"author": {"name": "Sebastian Pop", "email": "sebastian.pop@amd.com", "date": "2009-08-28T20:23:46Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2009-08-28T20:23:46Z"}, "message": "graphite-dependences.c (graphite_legal_transform_dr): Fix formatting.\n\n2009-08-28  Sebastian Pop  <sebastian.pop@amd.com>\n\n\t* graphite-dependences.c (graphite_legal_transform_dr): Fix formatting.\n\t(graphite_legal_transform_bb): Same.\n\t(poly_drs_may_alias_p): Same.\n\nFrom-SVN: r151179", "tree": {"sha": "95959930b7884cdb44e9f52d959c2831d03e160b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/95959930b7884cdb44e9f52d959c2831d03e160b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/66b466c309828b8b2f09bcd3a614e59ff5ded8c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66b466c309828b8b2f09bcd3a614e59ff5ded8c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/66b466c309828b8b2f09bcd3a614e59ff5ded8c3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66b466c309828b8b2f09bcd3a614e59ff5ded8c3/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0b7da9ce03450658dfe2dd769512cdec27ed8f62", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b7da9ce03450658dfe2dd769512cdec27ed8f62", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b7da9ce03450658dfe2dd769512cdec27ed8f62"}], "stats": {"total": 98, "additions": 55, "deletions": 43}, "files": [{"sha": "8ce1105992fef0a44986bf281bc92073e9cd3663", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66b466c309828b8b2f09bcd3a614e59ff5ded8c3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66b466c309828b8b2f09bcd3a614e59ff5ded8c3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=66b466c309828b8b2f09bcd3a614e59ff5ded8c3", "patch": "@@ -1,3 +1,9 @@\n+2009-08-28  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\t* graphite-dependences.c (graphite_legal_transform_dr): Fix formatting.\n+\t(graphite_legal_transform_bb): Same.\n+\t(poly_drs_may_alias_p): Same.\n+\n 2009-08-28  Richard Guenther  <rguenther@suse.de>\n \n \t* tree.def: Remove note about obsolete TYPE_NONCOPIED_PARTS."}, {"sha": "662e08595008c7fee158ed42202a24aa2327a1b1", "filename": "gcc/ChangeLog.graphite", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66b466c309828b8b2f09bcd3a614e59ff5ded8c3/gcc%2FChangeLog.graphite", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66b466c309828b8b2f09bcd3a614e59ff5ded8c3/gcc%2FChangeLog.graphite", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog.graphite?ref=66b466c309828b8b2f09bcd3a614e59ff5ded8c3", "patch": "@@ -1,3 +1,9 @@\n+2009-08-18  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\t* graphite-dependences.c (graphite_legal_transform_dr): Fix formatting.\n+\t(graphite_legal_transform_bb): Same.\n+\t(poly_drs_may_alias_p): Same.\n+\n 2009-08-15  Sebastian Pop  <sebastian.pop@amd.com>\n \n \tPR middle-end/40981"}, {"sha": "ccb32d696674933ac4dc79b5091fc2174e3ab17c", "filename": "gcc/graphite-dependences.c", "status": "modified", "additions": 43, "deletions": 43, "changes": 86, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66b466c309828b8b2f09bcd3a614e59ff5ded8c3/gcc%2Fgraphite-dependences.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66b466c309828b8b2f09bcd3a614e59ff5ded8c3/gcc%2Fgraphite-dependences.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-dependences.c?ref=66b466c309828b8b2f09bcd3a614e59ff5ded8c3", "patch": "@@ -486,12 +486,18 @@ static bool\n graphite_legal_transform_dr (poly_bb_p pbb1, poly_bb_p pbb2,\n \t\t\t     poly_dr_p pdr1, poly_dr_p pdr2)\n {\n+  ppl_Polyhedron_t st1, st2;\n+  ppl_Pointset_Powerset_C_Polyhedron_t pt;\n+  graphite_dim_t ddim1, otdim1, otdim2, ttdim1, ttdim2;\n+  ppl_Pointset_Powerset_C_Polyhedron_t temp;\n+  ppl_dimension_type pdim;\n+  bool is_empty_p;\n+  ppl_Pointset_Powerset_C_Polyhedron_t po;\n+\n   ppl_Pointset_Powerset_C_Polyhedron_t d1 = PBB_DOMAIN (pbb1);\n   ppl_Pointset_Powerset_C_Polyhedron_t d2 = PBB_DOMAIN (pbb2);\n   ppl_Polyhedron_t so1 = PBB_ORIGINAL_SCATTERING (pbb1);\n   ppl_Polyhedron_t so2 = PBB_ORIGINAL_SCATTERING (pbb2);\n-  ppl_Pointset_Powerset_C_Polyhedron_t po;\n-\n   graphite_dim_t sdim1 = PDR_NB_SUBSCRIPTS (pdr1) + 1;\n   graphite_dim_t sdim2 = PDR_NB_SUBSCRIPTS (pdr2) + 1;\n \n@@ -503,47 +509,40 @@ graphite_legal_transform_dr (poly_bb_p pbb1, poly_bb_p pbb2,\n \n   if (ppl_Pointset_Powerset_C_Polyhedron_is_empty (po))\n     return true;\n-  else\n-    {\n-      ppl_Polyhedron_t st1 = PBB_TRANSFORMED_SCATTERING (pbb1);\n-      ppl_Polyhedron_t st2 = PBB_TRANSFORMED_SCATTERING (pbb2);\n-      ppl_Pointset_Powerset_C_Polyhedron_t pt;\n-      graphite_dim_t ddim1 = pbb_dim_iter_domain (pbb1);\n-      graphite_dim_t otdim1 = pbb_nb_scattering_orig (pbb1);\n-      graphite_dim_t otdim2 = pbb_nb_scattering_orig (pbb2);\n-      graphite_dim_t ttdim1 = pbb_nb_scattering_transform (pbb1);\n-      graphite_dim_t ttdim2 = pbb_nb_scattering_transform (pbb2);\n-      ppl_Pointset_Powerset_C_Polyhedron_t temp;\n-      ppl_dimension_type pdim;\n-      bool is_empty_p;\n-\n-      /* Copy the PO polyhedron into the TEMP, so it is not destroyed.\n-         Keep in mind, that PO polyhedron might be restored from the cache\n-         and should not be modified!  */\n-      ppl_Pointset_Powerset_C_Polyhedron_space_dimension (po, &pdim);\n-      ppl_new_Pointset_Powerset_C_Polyhedron_from_space_dimension (&temp,\n-\t\t\t\t\t\t\t\t   pdim, 0);\n-      ppl_Pointset_Powerset_C_Polyhedron_intersection_assign (temp, po);\n \n-      if (dump_file && (dump_flags & TDF_DETAILS))\n-\tfprintf (dump_file, \"\\nloop carries dependency.\\n\");\n-      pt = dependence_polyhedron (pbb1, pbb2, d1, d2, pdr1, pdr2, st1, st2,\n-\t\t\t\t  false, false);\n-\n-      /* Extend PO and PT to have the same dimensions.  */\n-      ppl_insert_dimensions_pointset (temp, otdim1, ttdim1);\n-      ppl_insert_dimensions_pointset (temp, otdim1 + ttdim1 + ddim1 + otdim2,\n-\t\t\t\t      ttdim2);\n-      ppl_insert_dimensions_pointset (pt, 0, otdim1);\n-      ppl_insert_dimensions_pointset (pt, otdim1 + ttdim1 + ddim1, otdim2);\n-\n-      ppl_Pointset_Powerset_C_Polyhedron_intersection_assign (temp, pt);\n-      is_empty_p = ppl_Pointset_Powerset_C_Polyhedron_is_empty (temp);\n-\n-      ppl_delete_Pointset_Powerset_C_Polyhedron (temp);\n-      ppl_delete_Pointset_Powerset_C_Polyhedron (pt);\n-      return is_empty_p;\n-    }\n+  if (dump_file && (dump_flags & TDF_DETAILS))\n+    fprintf (dump_file, \"\\nloop carries dependency.\\n\");\n+\n+  st1 = PBB_TRANSFORMED_SCATTERING (pbb1);\n+  st2 = PBB_TRANSFORMED_SCATTERING (pbb2);\n+  ddim1 = pbb_dim_iter_domain (pbb1);\n+  otdim1 = pbb_nb_scattering_orig (pbb1);\n+  otdim2 = pbb_nb_scattering_orig (pbb2);\n+  ttdim1 = pbb_nb_scattering_transform (pbb1);\n+  ttdim2 = pbb_nb_scattering_transform (pbb2);\n+\n+  /* Copy the PO polyhedron into the TEMP, so it is not destroyed.\n+     Keep in mind, that PO polyhedron might be restored from the cache\n+     and should not be modified!  */\n+  ppl_Pointset_Powerset_C_Polyhedron_space_dimension (po, &pdim);\n+  ppl_new_Pointset_Powerset_C_Polyhedron_from_space_dimension (&temp, pdim, 0);\n+  ppl_Pointset_Powerset_C_Polyhedron_intersection_assign (temp, po);\n+\n+  pt = dependence_polyhedron (pbb1, pbb2, d1, d2, pdr1, pdr2, st1, st2,\n+\t\t\t      false, false);\n+\n+  /* Extend PO and PT to have the same dimensions.  */\n+  ppl_insert_dimensions_pointset (temp, otdim1, ttdim1);\n+  ppl_insert_dimensions_pointset (temp, otdim1 + ttdim1 + ddim1 + otdim2, ttdim2);\n+  ppl_insert_dimensions_pointset (pt, 0, otdim1);\n+  ppl_insert_dimensions_pointset (pt, otdim1 + ttdim1 + ddim1, otdim2);\n+\n+  ppl_Pointset_Powerset_C_Polyhedron_intersection_assign (temp, pt);\n+  is_empty_p = ppl_Pointset_Powerset_C_Polyhedron_is_empty (temp);\n+\n+  ppl_delete_Pointset_Powerset_C_Polyhedron (temp);\n+  ppl_delete_Pointset_Powerset_C_Polyhedron (pt);\n+  return is_empty_p;\n }\n \n /* Iterates over the data references of PBB1 and PBB2 and detect\n@@ -559,6 +558,7 @@ graphite_legal_transform_bb (poly_bb_p pbb1, poly_bb_p pbb2)\n     for (j = 0; VEC_iterate (poly_dr_p, PBB_DRS (pbb2), j, pdr2); j++)\n       if (!graphite_legal_transform_dr (pbb1, pbb2, pdr1, pdr2))\n         return false;\n+\n   return true;\n }\n \n@@ -637,7 +637,7 @@ poly_drs_may_alias_p (poly_dr_p pdr1, poly_dr_p pdr2)\n   ppl_Pointset_Powerset_C_Polyhedron_intersection_assign\n     (alias_powerset1, alias_powerset2);\n \n-  empty_p =  ppl_Pointset_Powerset_C_Polyhedron_is_empty (alias_powerset1);\n+  empty_p = ppl_Pointset_Powerset_C_Polyhedron_is_empty (alias_powerset1);\n \n   ppl_delete_Pointset_Powerset_C_Polyhedron (alias_powerset1);\n   ppl_delete_Pointset_Powerset_C_Polyhedron (alias_powerset2);"}]}