{"sha": "f28d806256a9b8741f42997649561121cff6ba23", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjI4ZDgwNjI1NmE5Yjg3NDFmNDI5OTc2NDk1NjExMjFjZmY2YmEyMw==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard@codesourcery.com", "date": "2007-04-12T17:44:57Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2007-04-12T17:44:57Z"}, "message": "mips.md (load_call<mode>): Allow any general register.\n\ngcc/\n\t* config/mips/mips.md (load_call<mode>): Allow any general register.\n\tdestination.\n\t(sibcall_value_internal, sibcall_value_multiple_internal)\n\t(call_value_internal, call_value_split, call_value_multiple_internal)\n\t(call_value_multiple_split): Remove constraints from operand 0.\n\nFrom-SVN: r123756", "tree": {"sha": "8f076f29b3fd3960536c224c9eb8b9812aadae07", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8f076f29b3fd3960536c224c9eb8b9812aadae07"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f28d806256a9b8741f42997649561121cff6ba23", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f28d806256a9b8741f42997649561121cff6ba23", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f28d806256a9b8741f42997649561121cff6ba23", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f28d806256a9b8741f42997649561121cff6ba23/comments", "author": null, "committer": null, "parents": [{"sha": "dc7750b1a9b7e961354334a4a34f4b384c2240c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc7750b1a9b7e961354334a4a34f4b384c2240c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc7750b1a9b7e961354334a4a34f4b384c2240c0"}], "stats": {"total": 28, "additions": 18, "deletions": 10}, "files": [{"sha": "aff318411cbda392e30fb72acaf770bcec196688", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f28d806256a9b8741f42997649561121cff6ba23/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f28d806256a9b8741f42997649561121cff6ba23/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f28d806256a9b8741f42997649561121cff6ba23", "patch": "@@ -1,3 +1,11 @@\n+2007-04-12  Richard Sandiford  <richard@codesourcery.com>\n+\n+\t* config/mips/mips.md (load_call<mode>): Allow any general register.\n+\tdestination.\n+\t(sibcall_value_internal, sibcall_value_multiple_internal)\n+\t(call_value_internal, call_value_split, call_value_multiple_internal)\n+\t(call_value_multiple_split): Remove constraints from operand 0.\n+\n 2007-04-12  Richard Sandiford  <richard@codesourcery.com>\n \n \t* config/mips/mips-protos.h: In comments, refer to loadgp_absolute"}, {"sha": "8fb78ca90ff307b767e43c729f7befaafe650b2e", "filename": "gcc/config/mips/mips.md", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f28d806256a9b8741f42997649561121cff6ba23/gcc%2Fconfig%2Fmips%2Fmips.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f28d806256a9b8741f42997649561121cff6ba23/gcc%2Fconfig%2Fmips%2Fmips.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.md?ref=f28d806256a9b8741f42997649561121cff6ba23", "patch": "@@ -5139,7 +5139,7 @@\n ;; we tell the target-independent code that the address could be changed\n ;; by any call insn.\n (define_insn \"load_call<mode>\"\n-  [(set (match_operand:P 0 \"register_operand\" \"=c\")\n+  [(set (match_operand:P 0 \"register_operand\" \"=d\")\n \t(unspec:P [(match_operand:P 1 \"register_operand\" \"r\")\n \t\t   (match_operand:P 2 \"immediate_operand\" \"\")\n \t\t   (reg:P FAKE_CALL_REGNO)]\n@@ -5194,18 +5194,18 @@\n })\n \n (define_insn \"sibcall_value_internal\"\n-  [(set (match_operand 0 \"register_operand\" \"=df,df\")\n+  [(set (match_operand 0 \"register_operand\" \"\")\n         (call (mem:SI (match_operand 1 \"call_insn_operand\" \"j,S\"))\n               (match_operand 2 \"\" \"\")))]\n   \"TARGET_SIBCALLS && SIBLING_CALL_P (insn)\"\n   { return MIPS_CALL (\"j\", operands, 1); }\n   [(set_attr \"type\" \"call\")])\n \n (define_insn \"sibcall_value_multiple_internal\"\n-  [(set (match_operand 0 \"register_operand\" \"=df,df\")\n+  [(set (match_operand 0 \"register_operand\" \"\")\n         (call (mem:SI (match_operand 1 \"call_insn_operand\" \"j,S\"))\n               (match_operand 2 \"\" \"\")))\n-   (set (match_operand 3 \"register_operand\" \"=df,df\")\n+   (set (match_operand 3 \"register_operand\" \"\")\n \t(call (mem:SI (match_dup 1))\n \t      (match_dup 2)))]\n   \"TARGET_SIBCALLS && SIBLING_CALL_P (insn)\"\n@@ -5300,7 +5300,7 @@\n \n ;; See comment for call_internal.\n (define_insn_and_split \"call_value_internal\"\n-  [(set (match_operand 0 \"register_operand\" \"=df,df\")\n+  [(set (match_operand 0 \"register_operand\" \"\")\n         (call (mem:SI (match_operand 1 \"call_insn_operand\" \"c,S\"))\n               (match_operand 2 \"\" \"\")))\n    (clobber (reg:SI 31))]\n@@ -5319,7 +5319,7 @@\n    (set_attr \"extended_mips16\" \"no,yes\")])\n \n (define_insn \"call_value_split\"\n-  [(set (match_operand 0 \"register_operand\" \"=df\")\n+  [(set (match_operand 0 \"register_operand\" \"\")\n         (call (mem:SI (match_operand 1 \"call_insn_operand\" \"cS\"))\n               (match_operand 2 \"\" \"\")))\n    (clobber (reg:SI 31))\n@@ -5330,10 +5330,10 @@\n \n ;; See comment for call_internal.\n (define_insn_and_split \"call_value_multiple_internal\"\n-  [(set (match_operand 0 \"register_operand\" \"=df,df\")\n+  [(set (match_operand 0 \"register_operand\" \"\")\n         (call (mem:SI (match_operand 1 \"call_insn_operand\" \"c,S\"))\n               (match_operand 2 \"\" \"\")))\n-   (set (match_operand 3 \"register_operand\" \"=df,df\")\n+   (set (match_operand 3 \"register_operand\" \"\")\n \t(call (mem:SI (match_dup 1))\n \t      (match_dup 2)))\n    (clobber (reg:SI 31))]\n@@ -5352,10 +5352,10 @@\n    (set_attr \"extended_mips16\" \"no,yes\")])\n \n (define_insn \"call_value_multiple_split\"\n-  [(set (match_operand 0 \"register_operand\" \"=df\")\n+  [(set (match_operand 0 \"register_operand\" \"\")\n         (call (mem:SI (match_operand 1 \"call_insn_operand\" \"cS\"))\n               (match_operand 2 \"\" \"\")))\n-   (set (match_operand 3 \"register_operand\" \"=df\")\n+   (set (match_operand 3 \"register_operand\" \"\")\n \t(call (mem:SI (match_dup 1))\n \t      (match_dup 2)))\n    (clobber (reg:SI 31))"}]}