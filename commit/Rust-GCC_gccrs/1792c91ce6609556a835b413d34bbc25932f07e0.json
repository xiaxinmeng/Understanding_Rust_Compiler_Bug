{"sha": "1792c91ce6609556a835b413d34bbc25932f07e0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTc5MmM5MWNlNjYwOTU1NmE4MzViNDEzZDM0YmJjMjU5MzJmMDdlMA==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2000-10-04T03:09:19Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2000-10-04T03:09:19Z"}, "message": "Self-compile with shadow headers.\n\n\n2000-10-02  Benjamin Kosnik  <bkoz@purist.soma.redhat.com>\n\n\tSelf-compile with shadow headers.\n\t* acconfig.h (_GLIBCPP_USE_SHADOW_HEADERS): Define. Eventually,\n\tlike _GLIBCPP_USE_NAMESPACES before it, this macro will die when\n\tit becomes the default way the library is built.\n\t* acinclude.m4 (GLIBCPP_ENABLE_SHADOW): New macro.\n\t* config/gnu-linux/bits/ctype_base.h (ctype_base): Use it.\n\t* config/gnu-linux/ctype.cc (ctype): Use it.\n\n\t* src/localename.cc (locale::_Impl::_M_replace_categories): Remove\n\tcall to assert.\n\t* src/locale.cc: Explicitly cast mbstate_t to void* in calls to\n\tmemset. This should not be necessary, but an ambiguous overload\n\twith it in.\n\n\t* shadow/bits/std_cwchar.h: Fix.\n\t* shadow/wchar.h: Fix.\n\n\t* config/gnu-linux/bits/ctype_base.h (ctype_base): Inject ctype\n\tenums into namespace std:: for ctype_base enum. Other OS types\n\twill have to do this as well.\n\t* config/gnu-linux/ctype.cc (ctype): Inject ctype data into\n\tnamespace std, in particular __ctype_toupper, __ctype_tolower,\n\t__ctype_b.\n\n\t* shadow/iolibio.h: New file.\n\t* shadow/bits/wrap_iolibio.h: New file.\n\t* shadow/libioP.h: New file.\n\t* shadow/bits/wrap_libioP.h: New file.\n\t* shadow/bits/wrap_fcntl.h: New file.\n\t* shadow/fcntl.h: New file.\n\t* shadow/iconv.h: New file. Inject iconv names into the global\n\tnamespace, unmangled for the moment.\n\t* shadow/bits/wrap_iconv.h: New file.\n\t* shadow/unistd.h: Remove. Useless.\n\t* shadow/bits/wrap_unistd.h: Remove.\n\n\t* src/Makefile.am: Take out machine-ansi.h, add fcntl.h unistd.h.\n\t* src/Makefile.in: Regenerate.\n\n\t* config/c_io_libio.h (_IO_codecvt): Change to normal C++ decl.\n\n\t* shadow/libio.h: Fix.\n\t* shadow/bits/wrap_libio.h: Fix.\n\n\t* shadow/bits/std_clocale.h: Remove typedef struct construct,\n\twhich will not compile.\n\t* shadow/bits/std_ctime.h: Same.\n\n\t* shadow/pthread.h: New file. Put pthreads types and functions\n\tinto global scope, which is probably not the correct long-term\n\tsolution but has to be done at the moment before libio wrappers\n\tcan even be started.\n\t* shadow/bits/wrap_pthread.h: New file.\n\n\t* bits/std_ios.h: Formatting tweak.\n\t* shadow/bits/std_cstdio.h: Format. Remove extraneous bits.\n\n\t* acinclude.m4 (GLIBCPP_CHECK_COMPILER_FEATURES): Add -Werror to\n\ttests for compiler features.\n\t* aclocal.m4: Regenerate.\n\t* configure: Regenerate.\n\n\t* config/c_io_libio.cc: Remove fcntl.h include, as SEEK_SET\n\tredefined.\n\t* libio/libioP.h: Comment out fcntl.h include.\n\n\t* shadow/math.h: Add in float and long declarations, as per ISO C9X.\n\n\t* bits/c++config: Define _ISOC99_SOURCE.\n\n\t* acinclude.m4 (GLIBCPP_ENABLE_SHADOW): Add -fno-builtins to\n\tCSHADOWFLAGS, as well as _ISOC99_SOURCE.\n\t* aclocal.m4: Regenerate.\n\t* configure: Regenerate.\n\t* src/Makefile.am (CSHADOW_INCLUDES): Enable, again.\n\t(CSHADOW_INCLUDES): Add -I$(top_srcdir)/std before shadow include dir.\n\t(CXXCOMPILE): Remove $(DEFS), which searches $(top_srcdir) before\n\tstd or shadow directories.\n\t(LTCXXCOMPILE): Same.\n\t(INCLUDES): Add $(top_builddir) before $(top_srcdir).\n\t(AC_CXXFLAGS): Add CSHADOWFLAGS.\n\t* src/Makefile.in: Regenerate.\n\n\t* src/complex.cc (FCT): Change ::name to name.\n\t* src/complexl.cc (FCT): Same. Use _GLIBCPP_USE_LONG_LONG here.\n\t* src/complexf.cc (FCT): Same.\n\n\t* src/complexf.cc: Remove FCT define, as things are properly\n\toverloaded in the std namespace with the shadow headers.\n\t* src/complexl.cc: Same.\n\t* src/complex.cc: Same.\n\nFrom-SVN: r36706", "tree": {"sha": "7eb7e7118b95a8ac365a12efc5c401915f174a5a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7eb7e7118b95a8ac365a12efc5c401915f174a5a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1792c91ce6609556a835b413d34bbc25932f07e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1792c91ce6609556a835b413d34bbc25932f07e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1792c91ce6609556a835b413d34bbc25932f07e0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1792c91ce6609556a835b413d34bbc25932f07e0/comments", "author": null, "committer": null, "parents": [{"sha": "fee0225a383cdc396a720a2a8639d4fb99e7f084", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fee0225a383cdc396a720a2a8639d4fb99e7f084", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fee0225a383cdc396a720a2a8639d4fb99e7f084"}], "stats": {"total": 626, "additions": 585, "deletions": 41}, "files": [{"sha": "0bed4bf1d4af890187748e539881860e0f2417d2", "filename": "libstdc++-v3/shadow/bits/wrap_fcntl.h", "status": "renamed", "additions": 49, "deletions": 30, "changes": 79, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1792c91ce6609556a835b413d34bbc25932f07e0/libstdc%2B%2B-v3%2Fshadow%2Fbits%2Fwrap_fcntl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1792c91ce6609556a835b413d34bbc25932f07e0/libstdc%2B%2B-v3%2Fshadow%2Fbits%2Fwrap_fcntl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fshadow%2Fbits%2Fwrap_fcntl.h?ref=1792c91ce6609556a835b413d34bbc25932f07e0", "patch": "@@ -1,6 +1,6 @@\n // -*- C++ -*- header wrapper.\n \n-// Copyright (C) 1997-1999 Free Software Foundation, Inc.\n+// Copyright (C) 2000 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -28,46 +28,65 @@\n // the GNU General Public License.\n \n //\n-// ISO C++ 14882: 20.5  Date and time\n+// ISO C++ 14882: 26.5  C library extensions\n //\n \n-// XXX incomplete\n+#ifndef _CPP_FCNTL\n+#define _CPP_FCNTL 1\n \n-#ifndef _CPP_WRAP_UNISTD_H\n-#define _CPP_WRAP_UNISTD_H 1\n+# include <bits/c++config.h>\n \n-  namespace _C_legacy {\n-    extern \"C\" {\n+namespace _C_legacy {\n+  extern \"C\" {\n #     define _IN_C_LEGACY_\n #     pragma GCC system_header\n-#     include_next <unistd.h>\n-    }\n+    // XXX\n+# undef SEEK_SET\n+# undef SEEK_CUR\n+# undef SEEK_END\n \n-    namespace _C_shadow { }\n-  } // close namespace ::_C_legacy::\n+#     include_next <fcntl.h>\n+  }\n+} // namespace _C_legacy\n \n-// #  undef that\n+# undef SEEK_SET\n+# undef SEEK_CUR\n+# undef SEEK_END\n \n-  namespace _C_legacy {\n-    namespace _C_shadow {\n-      // typedef stuff\n-    }\n-  }\n-  namespace std {\n-\n-    using ::_C_legacy::read;\n-    using ::_C_legacy::write;\n-    using ::_C_legacy::open;\n-\n-  } // close namespace std::\n-  \n-  namespace _C_legacy {\n-    namespace _C_shadow {\n-      // using ::std::stuff\n-    }\n-  }\n+// NB: Don't bring elements from this non-standard header into namespace std.\n \n # undef _IN_C_LEGACY_\n \n #endif\n \n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+", "previous_filename": "libstdc++-v3/shadow/bits/wrap_unistd.h"}, {"sha": "3e72e2d46eeb50be14d4e5fce473d818409c3466", "filename": "libstdc++-v3/shadow/bits/wrap_iconv.h", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1792c91ce6609556a835b413d34bbc25932f07e0/libstdc%2B%2B-v3%2Fshadow%2Fbits%2Fwrap_iconv.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1792c91ce6609556a835b413d34bbc25932f07e0/libstdc%2B%2B-v3%2Fshadow%2Fbits%2Fwrap_iconv.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fshadow%2Fbits%2Fwrap_iconv.h?ref=1792c91ce6609556a835b413d34bbc25932f07e0", "patch": "@@ -0,0 +1,51 @@\n+// -*- C++ -*- header wrapper.\n+\n+// Copyright (C) 2000 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+//\n+// ISO C++ 14882: 20.5 Extensions  \n+//\n+\n+#ifndef _CPP_WRAP_ICONV_H\n+#define _CPP_WRAP_ICONV_H 1\n+\n+namespace _C_legacy {\n+  extern \"C\" {\n+#     define _IN_C_LEGACY_\n+#     pragma GCC system_header\n+#     include_next <iconv.h>\n+  }\n+} // namespace _C_legacy\n+\n+// NB: Don't bring elements from this non-standard header into namespace std.\n+\n+# undef _IN_C_LEGACY_\n+\n+#endif\n+\n+"}, {"sha": "ddbabd7a424c70a5cff442c613ca2f2609abe18b", "filename": "libstdc++-v3/shadow/bits/wrap_iolibio.h", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1792c91ce6609556a835b413d34bbc25932f07e0/libstdc%2B%2B-v3%2Fshadow%2Fbits%2Fwrap_iolibio.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1792c91ce6609556a835b413d34bbc25932f07e0/libstdc%2B%2B-v3%2Fshadow%2Fbits%2Fwrap_iolibio.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fshadow%2Fbits%2Fwrap_iolibio.h?ref=1792c91ce6609556a835b413d34bbc25932f07e0", "patch": "@@ -0,0 +1,50 @@\n+// -*- C++ -*- header wrapper.\n+\n+// Copyright (C) 1997-1999, 2000 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+//\n+// ISO C++ 14882: 20.5 Extensions  \n+//\n+\n+#ifndef _CPP_WRAP_IOLIBIO_H\n+#define _CPP_WRAP_IOLIBIO_H 1\n+\n+namespace _C_legacy {\n+  extern \"C\" {\n+#     define _IN_C_LEGACY_\n+#     pragma GCC system_header\n+#     include_next <iolibio.h>\n+  }\n+} // namespace _C_legacy\n+\n+// NB: Don't bring elements from this non-standard header into namespace std.\n+\n+# undef _IN_C_LEGACY_\n+\n+#endif\n+"}, {"sha": "32f8c2ebd10a60f0bb663326f936b0347a6a6434", "filename": "libstdc++-v3/shadow/bits/wrap_libioP.h", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1792c91ce6609556a835b413d34bbc25932f07e0/libstdc%2B%2B-v3%2Fshadow%2Fbits%2Fwrap_libioP.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1792c91ce6609556a835b413d34bbc25932f07e0/libstdc%2B%2B-v3%2Fshadow%2Fbits%2Fwrap_libioP.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fshadow%2Fbits%2Fwrap_libioP.h?ref=1792c91ce6609556a835b413d34bbc25932f07e0", "patch": "@@ -0,0 +1,50 @@\n+// -*- C++ -*- header wrapper.\n+\n+// Copyright (C) 1997-1999, 2000 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+//\n+// ISO C++ 14882: 20.5 Extensions  \n+//\n+\n+#ifndef _CPP_WRAP_LIBIOP_H\n+#define _CPP_WRAP_LIBIOP_H 1\n+\n+namespace _C_legacy {\n+  extern \"C\" {\n+#     define _IN_C_LEGACY_\n+#     pragma GCC system_header\n+#     include_next <libioP.h>\n+  }\n+} // namespace _C_legacy\n+\n+// NB: Don't bring elements from this non-standard header into namespace std.\n+\n+# undef _IN_C_LEGACY_\n+\n+#endif\n+"}, {"sha": "d04eeba8a31b8f68d9bff5ad6e891eeee99d3164", "filename": "libstdc++-v3/shadow/bits/wrap_pthread.h", "status": "renamed", "additions": 48, "deletions": 11, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1792c91ce6609556a835b413d34bbc25932f07e0/libstdc%2B%2B-v3%2Fshadow%2Fbits%2Fwrap_pthread.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1792c91ce6609556a835b413d34bbc25932f07e0/libstdc%2B%2B-v3%2Fshadow%2Fbits%2Fwrap_pthread.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fshadow%2Fbits%2Fwrap_pthread.h?ref=1792c91ce6609556a835b413d34bbc25932f07e0", "patch": "@@ -1,6 +1,6 @@\n // -*- C++ -*- header wrapper.\n \n-// Copyright (C) 1997-1999 Free Software Foundation, Inc.\n+// Copyright (C) 2000 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -26,19 +26,56 @@\n // the GNU General Public License.  This exception does not however\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n+\n+//\n+// ISO C++ 14882: 26.5  C library extensions\n+//\n+\n+#ifndef _CPP_WRAP_PTHREAD_H\n+#define _CPP_WRAP_PTHREAD_H 1\n+\n+# include <bits/c++config.h>\n+\n+namespace _C_legacy {\n+  extern \"C\" {\n+#     define _IN_C_LEGACY_\n+#     pragma GCC system_header\n+#     include_next <pthread.h>\n+  }\n+} // namespace _C_legacy\n+\n+# undef _IN_C_LEGACY_\n+\n+#endif\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n \n \n-#ifndef  _INCLUDED_CPP_UNISTD_H_\n \n-# undef _SHADOW_NAME\n-# define _SHADOW_NAME <bits/wrap_unistd.h>\n-# include <bits/generic_shadow.h>\n-# undef _SHADOW_NAME\n \n-# ifndef _IN_C_LEGACY_\n-  // using ::std::stuff\n \n-# define _INCLUDED_CPP_UNISTD_H_ 1\n-# endif\n \n-#endif /* _INCLUDED_CPP_UNISTD_H_ */", "previous_filename": "libstdc++-v3/shadow/unistd.h"}, {"sha": "f19a15492741348eaf7596f73619eb05f350caee", "filename": "libstdc++-v3/shadow/fcntl.h", "status": "added", "additions": 63, "deletions": 0, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1792c91ce6609556a835b413d34bbc25932f07e0/libstdc%2B%2B-v3%2Fshadow%2Ffcntl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1792c91ce6609556a835b413d34bbc25932f07e0/libstdc%2B%2B-v3%2Fshadow%2Ffcntl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fshadow%2Ffcntl.h?ref=1792c91ce6609556a835b413d34bbc25932f07e0", "patch": "@@ -0,0 +1,63 @@\n+// -*- C++ -*- header wrapper.\n+\n+// Copyright (C) 1997-1999, 2000 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+\n+#ifndef  _INCLUDED_CPP_FCNTL_H_\n+# define _INCLUDED_CPP_FCNTL_H_ 1\n+\n+# ifdef _IN_C_LEGACY_  /* sub-included by a C header */\n+      // get out of the \"legacy\"\n+    } // close extern \"C\"\n+  }   // close namespace _C_legacy::\n+#  undef _IN_C_LEGACY_\n+#  define _FCNTL_NEED_C_LEGACY_\n+# endif\n+\n+# include <bits/wrap_fcntl.h>\n+\n+  // Expose global C names, including non-standard ones, but shadow\n+  // some names and types with the std:: C++ version.\n+  using _C_legacy::flock;\n+\n+  using _C_legacy::creat;\n+  using _C_legacy::open;\n+  using _C_legacy::fcntl;\n+\n+# ifdef _FCNTL_NEED_C_LEGACY_\n+  // dive back into the \"swamp\"\n+  namespace _C_legacy {\n+    extern \"C\" {\n+#  define _IN_C_LEGACY_\n+#  undef _FCNTL_NEED_C_LEGACY_\n+# endif /* _FCNTL_NEED_C_LEGACY_ */\n+#endif /* _INCLUDED_CPP_FCNTL_H_ */\n+\n+\n+\n+"}, {"sha": "1ea5038c24a2a222aab81477cf9f7837ad31dac5", "filename": "libstdc++-v3/shadow/iconv.h", "status": "added", "additions": 66, "deletions": 0, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1792c91ce6609556a835b413d34bbc25932f07e0/libstdc%2B%2B-v3%2Fshadow%2Ficonv.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1792c91ce6609556a835b413d34bbc25932f07e0/libstdc%2B%2B-v3%2Fshadow%2Ficonv.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fshadow%2Ficonv.h?ref=1792c91ce6609556a835b413d34bbc25932f07e0", "patch": "@@ -0,0 +1,66 @@\n+// -*- C++ -*- header wrapper.\n+\n+// Copyright (C) 2000 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+\n+#ifndef  _INCLUDED_CPP_ICONV_H_\n+# define _INCLUDED_CPP_ICONV_H_ 1\n+\n+# ifdef _IN_C_LEGACY_  /* sub-included by a C header */\n+      // get out of the \"legacy\"\n+    } // close extern \"C\"\n+  }   // close namespace _C_legacy::\n+#  undef _IN_C_LEGACY_\n+#  define _ICONV_NEED_C_LEGACY_\n+# endif\n+\n+# include <bits/wrap_iconv.h>\n+\n+  // Expose global C names, including non-standard ones, but shadow\n+  // some names and types with the std:: C++ version.\n+\n+  // NB: Cannot use typedefs here to inject the names as the \"C\" headers\n+  // often include typedefs that include the keyword 'struct'\n+  using _C_legacy::iconv_t;\n+\n+  using _C_legacy::iconv_open;\n+  using _C_legacy::iconv;\n+  using _C_legacy::iconv_close;\n+\n+# ifdef _ICONV_NEED_C_LEGACY_\n+  // dive back into the \"swamp\"\n+  namespace _C_legacy {\n+    extern \"C\" {\n+#  define _IN_C_LEGACY_\n+#  undef _ICONV_NEED_C_LEGACY_\n+# endif /* _ICONV_NEED_C_LEGACY_ */\n+#endif /* _INCLUDED_CPP_ICONV_H_ */\n+\n+\n+\n+"}, {"sha": "845f6403594e3068f23d69da5ee3e0385a49bceb", "filename": "libstdc++-v3/shadow/iolibio.h", "status": "added", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1792c91ce6609556a835b413d34bbc25932f07e0/libstdc%2B%2B-v3%2Fshadow%2Fiolibio.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1792c91ce6609556a835b413d34bbc25932f07e0/libstdc%2B%2B-v3%2Fshadow%2Fiolibio.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fshadow%2Fiolibio.h?ref=1792c91ce6609556a835b413d34bbc25932f07e0", "patch": "@@ -0,0 +1,58 @@\n+// -*- C++ -*- header wrapper.\n+\n+// Copyright (C) 2000 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+\n+#ifndef  _INCLUDED_CPP_IOLIBIO_H_\n+# define _INCLUDED_CPP_IOLIBIO_H_ 1\n+\n+# ifdef _IN_C_LEGACY_  /* sub-included by a C header */\n+      // get out of the \"legacy\"\n+    } // close extern \"C\"\n+  }   // close namespace _C_legacy::\n+#  undef _IN_C_LEGACY_\n+#  define _IOLIBIO_NEED_C_LEGACY_\n+# endif\n+\n+# include <bits/wrap_iolibio.h>\n+\n+  // Expose global C names, including non-standard ones, but shadow\n+  // some names and types with the std:: C++ version.\n+\n+# ifdef _IOLIBIO_NEED_C_LEGACY_\n+  // dive back into the \"swamp\"\n+  namespace _C_legacy {\n+    extern \"C\" {\n+#  define _IN_C_LEGACY_\n+#  undef _IOLIBIO_NEED_C_LEGACY_\n+# endif /* _IOLIBIO_NEED_C_LEGACY_ */\n+#endif /* _INCLUDED_CPP_IOLIBIO_H_ */\n+\n+\n+\n+"}, {"sha": "da3e716768fb92dedc657b098ed1a34433f644ed", "filename": "libstdc++-v3/shadow/libioP.h", "status": "added", "additions": 64, "deletions": 0, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1792c91ce6609556a835b413d34bbc25932f07e0/libstdc%2B%2B-v3%2Fshadow%2FlibioP.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1792c91ce6609556a835b413d34bbc25932f07e0/libstdc%2B%2B-v3%2Fshadow%2FlibioP.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fshadow%2FlibioP.h?ref=1792c91ce6609556a835b413d34bbc25932f07e0", "patch": "@@ -0,0 +1,64 @@\n+// -*- C++ -*- header wrapper.\n+\n+// Copyright (C) 2000 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+\n+#ifndef  _INCLUDED_CPP_LIBIOP_H_\n+# define _INCLUDED_CPP_LIBIOP_H_ 1\n+\n+# ifdef _IN_C_LEGACY_  /* sub-included by a C header */\n+      // get out of the \"legacy\"\n+    } // close extern \"C\"\n+  }   // close namespace _C_legacy::\n+#  undef _IN_C_LEGACY_\n+#  define _LIBIOP_NEED_C_LEGACY_\n+# endif\n+\n+# include <bits/wrap_libioP.h>\n+\n+  // Expose global C names, including non-standard ones, but shadow\n+  // some names and types with the std:: C++ version.\n+  using _C_legacy::_IO_jump_t;\n+  using _C_legacy::_IO_FILE_plus;\n+  using _C_legacy::_IO_cookie_file;\n+\n+  using _C_legacy::_IO_file_jumps;\n+  using _C_legacy::_IO_wfile_jumps;\n+\n+# ifdef _LIBIOP_NEED_C_LEGACY_\n+  // dive back into the \"swamp\"\n+  namespace _C_legacy {\n+    extern \"C\" {\n+#  define _IN_C_LEGACY_\n+#  undef _LIBIOP_NEED_C_LEGACY_\n+# endif /* _LIBIOP_NEED_C_LEGACY_ */\n+#endif /* _INCLUDED_CPP_LIBIOP_H_ */\n+\n+\n+\n+"}, {"sha": "8692d3e52d43b6b88822ad4249c2b4f974b569cb", "filename": "libstdc++-v3/shadow/pthread.h", "status": "added", "additions": 86, "deletions": 0, "changes": 86, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1792c91ce6609556a835b413d34bbc25932f07e0/libstdc%2B%2B-v3%2Fshadow%2Fpthread.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1792c91ce6609556a835b413d34bbc25932f07e0/libstdc%2B%2B-v3%2Fshadow%2Fpthread.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fshadow%2Fpthread.h?ref=1792c91ce6609556a835b413d34bbc25932f07e0", "patch": "@@ -0,0 +1,86 @@\n+// -*- C++ -*- header wrapper.\n+\n+// Copyright (C) 2000 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+\n+#ifndef  _INCLUDED_CPP_PTHREAD_H_\n+# define _INCLUDED_CPP_PTHREAD_H_ 1\n+\n+# ifdef _IN_C_LEGACY_  /* sub-included by a C header */\n+      // get out of the \"legacy\"\n+    } // close extern \"C\"\n+  }   // close namespace _C_legacy::\n+#  undef _IN_C_LEGACY_\n+#  define _PTHREAD_NEED_C_LEGACY_\n+# endif\n+\n+# include <bits/wrap_pthread.h>\n+\n+  // Expose global C names, including non-standard ones, but shadow\n+  // some names and types with the std:: C++ version.\n+  using _C_legacy::__sched_param;\n+\n+  using _C_legacy::pthread_attr_t;\n+  using _C_legacy::pthread_cond_t;\n+  using _C_legacy::pthread_condattr_t;\n+  using _C_legacy::pthread_key_t;\n+  using _C_legacy::pthread_mutex_t;\n+  using _C_legacy::pthread_mutexattr_t;\n+  using _C_legacy::pthread_once_t;\n+  using _C_legacy::pthread_rwlock_t;\n+  using _C_legacy::pthread_rwlockattr_t;\n+  using _C_legacy::pthread_t;\n+\n+  using _C_legacy::pthread_mutex_init;\n+  using _C_legacy::pthread_mutex_destroy;\n+  using _C_legacy::pthread_mutex_lock;\n+  using _C_legacy::pthread_mutex_trylock;\n+  using _C_legacy::pthread_mutex_unlock;\n+  using _C_legacy::pthread_mutexattr_init;\n+  using _C_legacy::pthread_mutexattr_destroy;\n+  using _C_legacy::pthread_mutexattr_settype;\n+  using _C_legacy::pthread_mutexattr_gettype;\n+  using _C_legacy::pthread_key_create;\n+  using _C_legacy::pthread_key_delete;\n+  using _C_legacy::pthread_setspecific;\n+  using _C_legacy::pthread_getspecific;\n+  using _C_legacy::pthread_once;\n+  using _C_legacy::pthread_atfork;\n+\n+# ifdef _PTHREAD_NEED_C_LEGACY_\n+  // dive back into the \"swamp\"\n+  namespace _C_legacy {\n+    extern \"C\" {\n+#  define _IN_C_LEGACY_\n+#  undef _PTHREAD_NEED_C_LEGACY_\n+# endif /* _PTHREAD_NEED_C_LEGACY_ */\n+#endif /* _INCLUDED_CPP_PTHREAD_H_ */\n+\n+\n+\n+"}]}