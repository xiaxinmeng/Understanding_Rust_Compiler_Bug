{"sha": "3881e1823c5a59d988ddcddcc1e25c5738e228fb", "node_id": "C_kwDOANBUbNoAKDM4ODFlMTgyM2M1YTU5ZDk4OGRkY2RkY2MxZTI1YzU3MzhlMjI4ZmI", "commit": {"author": {"name": "Roger Sayle", "email": "roger@nextmovesoftware.com", "date": "2022-02-10T13:32:07Z"}, "committer": {"name": "Roger Sayle", "email": "roger@nextmovesoftware.com", "date": "2022-02-10T13:32:07Z"}, "message": "gfortran: Respect target's NO_DOT_IN_LABEL in trans-common.cc\n\nThis patch fixes 9 unexpected failures in the gfortran testsuite on\nnvptx-none.  The issue is that gfortran's EQUIVALENCE internally uses\nsymbols such as \"equiv.0\" even on platforms that define NO_DOT_IN_LABEL.\nOn nvptx-none, this then results in the following error message(s):\nptxas application ptx input, fatal: Parsing error near '.0': syntax error\nptxas fatal: Ptx assembly aborted due to errors\n\nThe fix is to tweak trans-common.cc to respect the target's NO_DOT_IN_LABEL\n(and NO_DOLLAR_IN_LABEL) when generating internal equiv.%d symbols.\nOnly the nvptx, mmix and xtensa backends define NO_DOT_IN_LABEL which\nexplains why no-one has spotted/fixed this issue since the problematic\ncode was last changed back in 2005(!).\n\n2022-02-10  Roger Sayle  <roger@nextmovesoftware.com>\n\t    Tobias Burnus  <tobias@codesourcery.com>\n\ngcc/fortran/ChangeLog\n\t* trans-common.cc (GFC_EQUIV_FMT): New macro respecting the\n\ttarget's NO_DOT_IN_LABEL and NO_DOLLAR_IN_LABEL preferences.\n\t(build_equiv_decl): Use GFC_EQUIV_FMT here.", "tree": {"sha": "a4dcb8a36cb8745a0abe7e381bfdd4fd9b886dda", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a4dcb8a36cb8745a0abe7e381bfdd4fd9b886dda"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3881e1823c5a59d988ddcddcc1e25c5738e228fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3881e1823c5a59d988ddcddcc1e25c5738e228fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3881e1823c5a59d988ddcddcc1e25c5738e228fb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3881e1823c5a59d988ddcddcc1e25c5738e228fb/comments", "author": {"login": "rogersayle", "id": 13512313, "node_id": "MDQ6VXNlcjEzNTEyMzEz", "avatar_url": "https://avatars.githubusercontent.com/u/13512313?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rogersayle", "html_url": "https://github.com/rogersayle", "followers_url": "https://api.github.com/users/rogersayle/followers", "following_url": "https://api.github.com/users/rogersayle/following{/other_user}", "gists_url": "https://api.github.com/users/rogersayle/gists{/gist_id}", "starred_url": "https://api.github.com/users/rogersayle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rogersayle/subscriptions", "organizations_url": "https://api.github.com/users/rogersayle/orgs", "repos_url": "https://api.github.com/users/rogersayle/repos", "events_url": "https://api.github.com/users/rogersayle/events{/privacy}", "received_events_url": "https://api.github.com/users/rogersayle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rogersayle", "id": 13512313, "node_id": "MDQ6VXNlcjEzNTEyMzEz", "avatar_url": "https://avatars.githubusercontent.com/u/13512313?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rogersayle", "html_url": "https://github.com/rogersayle", "followers_url": "https://api.github.com/users/rogersayle/followers", "following_url": "https://api.github.com/users/rogersayle/following{/other_user}", "gists_url": "https://api.github.com/users/rogersayle/gists{/gist_id}", "starred_url": "https://api.github.com/users/rogersayle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rogersayle/subscriptions", "organizations_url": "https://api.github.com/users/rogersayle/orgs", "repos_url": "https://api.github.com/users/rogersayle/repos", "events_url": "https://api.github.com/users/rogersayle/events{/privacy}", "received_events_url": "https://api.github.com/users/rogersayle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3e539985cc7a28516054cc080ffd9681aa745afa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e539985cc7a28516054cc080ffd9681aa745afa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e539985cc7a28516054cc080ffd9681aa745afa"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "7c8cba0b2da1277e14259783c611cc13d1cbd194", "filename": "gcc/fortran/trans-common.cc", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3881e1823c5a59d988ddcddcc1e25c5738e228fb/gcc%2Ffortran%2Ftrans-common.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3881e1823c5a59d988ddcddcc1e25c5738e228fb/gcc%2Ffortran%2Ftrans-common.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-common.cc?ref=3881e1823c5a59d988ddcddcc1e25c5738e228fb", "patch": "@@ -338,6 +338,13 @@ build_field (segment_info *h, tree union_type, record_layout_info rli)\n   h->field = field;\n }\n \n+#if !defined (NO_DOT_IN_LABEL)\n+#define GFC_EQUIV_FMT \"equiv.%d\"\n+#elif !defined (NO_DOLLAR_IN_LABEL)\n+#define GFC_EQUIV_FMT \"_Equiv$%d\"\n+#else\n+#define GFC_EQUIV_FMT \"_Equiv_%d\"\n+#endif\n \n /* Get storage for local equivalence.  */\n \n@@ -356,7 +363,7 @@ build_equiv_decl (tree union_type, bool is_init, bool is_saved, bool is_auto)\n       return decl;\n     }\n \n-  snprintf (name, sizeof (name), \"equiv.%d\", serial++);\n+  snprintf (name, sizeof (name), GFC_EQUIV_FMT, serial++);\n   decl = build_decl (input_location,\n \t\t     VAR_DECL, get_identifier (name), union_type);\n   DECL_ARTIFICIAL (decl) = 1;"}]}