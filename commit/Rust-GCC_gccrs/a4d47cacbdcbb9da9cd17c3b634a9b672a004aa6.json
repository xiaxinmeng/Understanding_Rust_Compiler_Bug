{"sha": "a4d47cacbdcbb9da9cd17c3b634a9b672a004aa6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTRkNDdjYWNiZGNiYjlkYTljZDE3YzNiNjM0YTliNjcyYTAwNGFhNg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2013-12-18T10:34:00Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2013-12-18T10:34:00Z"}, "message": "re PR debug/59418 (ICE in maybe_record_trace_start, at dwarf2cfi.c:2221)\n\n\tPR debug/59418\n\t* dwarf2cfi.c (dwarf2out_frame_debug_cfa_offset): Fix comment and tidy.\n\t(dwarf2out_frame_debug_cfa_restore): Handle TARGET_DWARF_REGISTER_SPAN.\n\t(dwarf2out_frame_debug_expr): Tidy.\n\nFrom-SVN: r206084", "tree": {"sha": "7f3383d6e4eab7aaaa10969fbe0b55e3dbbc85f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7f3383d6e4eab7aaaa10969fbe0b55e3dbbc85f1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a4d47cacbdcbb9da9cd17c3b634a9b672a004aa6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4d47cacbdcbb9da9cd17c3b634a9b672a004aa6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a4d47cacbdcbb9da9cd17c3b634a9b672a004aa6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4d47cacbdcbb9da9cd17c3b634a9b672a004aa6/comments", "author": null, "committer": null, "parents": [{"sha": "468f5fc95c5c1820014e074841310a7014862e47", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/468f5fc95c5c1820014e074841310a7014862e47", "html_url": "https://github.com/Rust-GCC/gccrs/commit/468f5fc95c5c1820014e074841310a7014862e47"}], "stats": {"total": 92, "additions": 78, "deletions": 14}, "files": [{"sha": "52a1998cf36ea72ee2378da8611d651ad91cb987", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d47cacbdcbb9da9cd17c3b634a9b672a004aa6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d47cacbdcbb9da9cd17c3b634a9b672a004aa6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a4d47cacbdcbb9da9cd17c3b634a9b672a004aa6", "patch": "@@ -1,3 +1,10 @@\n+2013-12-18  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\tPR debug/59418\n+\t* dwarf2cfi.c (dwarf2out_frame_debug_cfa_offset): Fix comment and tidy.\n+\t(dwarf2out_frame_debug_cfa_restore): Handle TARGET_DWARF_REGISTER_SPAN.\n+\t(dwarf2out_frame_debug_expr): Tidy.\n+\n 2013-12-18  Alexander Ivchenko  <alexander.ivchenko@intel.com>\n \t    Maxim Kuznetsov  <maxim.kuznetsov@intel.com>\n \t    Sergey Lega  <sergey.s.lega@intel.com>"}, {"sha": "77152990ea5bdaddf17dd7cba6656cfa54bc40d0", "filename": "gcc/dwarf2cfi.c", "status": "modified", "additions": 32, "deletions": 14, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d47cacbdcbb9da9cd17c3b634a9b672a004aa6/gcc%2Fdwarf2cfi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d47cacbdcbb9da9cd17c3b634a9b672a004aa6/gcc%2Fdwarf2cfi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2cfi.c?ref=a4d47cacbdcbb9da9cd17c3b634a9b672a004aa6", "patch": "@@ -1149,18 +1149,15 @@ dwarf2out_frame_debug_cfa_offset (rtx set)\n   else\n     {\n       /* We have a PARALLEL describing where the contents of SRC live.\n-   \t Queue register saves for each piece of the PARALLEL.  */\n-      int par_index;\n-      int limit;\n+   \t Adjust the offset for each piece of the PARALLEL.  */\n       HOST_WIDE_INT span_offset = offset;\n \n       gcc_assert (GET_CODE (span) == PARALLEL);\n \n-      limit = XVECLEN (span, 0);\n-      for (par_index = 0; par_index < limit; par_index++)\n+      const int par_len = XVECLEN (span, 0);\n+      for (int par_index = 0; par_index < par_len; par_index++)\n \t{\n \t  rtx elem = XVECEXP (span, 0, par_index);\n-\n \t  sregno = dwf_regno (src);\n \t  reg_save (sregno, INVALID_REGNUM, span_offset);\n \t  span_offset += GET_MODE_SIZE (GET_MODE (elem));\n@@ -1229,10 +1226,31 @@ dwarf2out_frame_debug_cfa_expression (rtx set)\n static void\n dwarf2out_frame_debug_cfa_restore (rtx reg)\n {\n-  unsigned int regno = dwf_regno (reg);\n+  gcc_assert (REG_P (reg));\n+\n+  rtx span = targetm.dwarf_register_span (reg);\n+  if (!span)\n+    {\n+      unsigned int regno = dwf_regno (reg);\n+      add_cfi_restore (regno);\n+      update_row_reg_save (cur_row, regno, NULL);\n+    }\n+  else\n+    {\n+      /* We have a PARALLEL describing where the contents of REG live.\n+\t Restore the register for each piece of the PARALLEL.  */\n+      gcc_assert (GET_CODE (span) == PARALLEL);\n \n-  add_cfi_restore (regno);\n-  update_row_reg_save (cur_row, regno, NULL);\n+      const int par_len = XVECLEN (span, 0);\n+      for (int par_index = 0; par_index < par_len; par_index++)\n+\t{\n+\t  reg = XVECEXP (span, 0, par_index);\n+\t  gcc_assert (REG_P (reg));\n+\t  unsigned int regno = dwf_regno (reg);\n+\t  add_cfi_restore (regno);\n+\t  update_row_reg_save (cur_row, regno, NULL);\n+\t}\n+    }\n }\n \n /* A subroutine of dwarf2out_frame_debug, process a REG_CFA_WINDOW_SAVE.\n@@ -1884,23 +1902,23 @@ dwarf2out_frame_debug_expr (rtx expr)\n \t    }\n \t}\n \n-      span = NULL;\n       if (REG_P (src))\n \tspan = targetm.dwarf_register_span (src);\n+      else\n+\tspan = NULL;\n+\n       if (!span)\n \tqueue_reg_save (src, NULL_RTX, offset);\n       else\n \t{\n \t  /* We have a PARALLEL describing where the contents of SRC live.\n \t     Queue register saves for each piece of the PARALLEL.  */\n-\t  int par_index;\n-\t  int limit;\n \t  HOST_WIDE_INT span_offset = offset;\n \n \t  gcc_assert (GET_CODE (span) == PARALLEL);\n \n-\t  limit = XVECLEN (span, 0);\n-\t  for (par_index = 0; par_index < limit; par_index++)\n+\t  const int par_len = XVECLEN (span, 0);\n+\t  for (int par_index = 0; par_index < par_len; par_index++)\n \t    {\n \t      rtx elem = XVECEXP (span, 0, par_index);\n \t      queue_reg_save (elem, NULL_RTX, span_offset);"}, {"sha": "f192b5d3526868cac555ca696fa74f51f10f17d1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d47cacbdcbb9da9cd17c3b634a9b672a004aa6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d47cacbdcbb9da9cd17c3b634a9b672a004aa6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a4d47cacbdcbb9da9cd17c3b634a9b672a004aa6", "patch": "@@ -1,3 +1,7 @@\n+2013-12-18  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc.dg/pr59418.c: New test.\n+\n 2013-12-17  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/59523"}, {"sha": "114c1d383c4b69b99c27a1afbbcad3498782b66f", "filename": "gcc/testsuite/gcc.dg/pr59418.c", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d47cacbdcbb9da9cd17c3b634a9b672a004aa6/gcc%2Ftestsuite%2Fgcc.dg%2Fpr59418.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d47cacbdcbb9da9cd17c3b634a9b672a004aa6/gcc%2Ftestsuite%2Fgcc.dg%2Fpr59418.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr59418.c?ref=a4d47cacbdcbb9da9cd17c3b634a9b672a004aa6", "patch": "@@ -0,0 +1,35 @@\n+/* PR debug/59418 */\n+/* Reported by Ryan Mansfield <rmansfield@qnx.com> */\n+\n+/* { dg-do compile } */\n+/* { dg-options \"-Os -g\" } */\n+/* { dg-options \"-march=armv7-a -mfloat-abi=hard -Os -g\" { target arm*-*-* } } */\n+\n+extern int printf (const char *__format, ...);\n+\n+void\n+foo (const char *pptr, int caplen)\n+{\n+  int type;\n+  const char *tptr;\n+  if (caplen < 4)\n+    {\n+      (void) printf (\"foo\");\n+      return;\n+    }\n+  while (tptr < pptr)\n+    {\n+      switch (type)\n+\t{\n+\tcase 0x01:\n+\t  printf (\"\");\n+\tcase 0x0b:\n+\t  printf (\"\");\n+\tcase 0x0e:\n+\t  printf (\"\");\n+\tcase 0x10:\n+\t  printf (\"%1.2fW\", bar (tptr, caplen) / 1000.0);\n+\t}\n+    }\n+  printf (\"foo\");\n+}"}]}