{"sha": "e507a43338b75714233a271186baa4c68bf50e64", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTUwN2E0MzMzOGI3NTcxNDIzM2EyNzExODZiYWE0YzY4YmY1MGU2NA==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2014-09-01T09:18:43Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2014-09-01T09:18:43Z"}, "message": "re PR middle-end/61903 (signed integer overflow in expmed.c store_fixed_bit_filed_1)\n\n\tPR middle-end/61903\n\t* expmed.c (store_fixed_bit_field_1): Shift UHWI 1 instead of HWI 1.\n\tChange the type of V to unsigned HOST_WIDE_INT.\n\nFrom-SVN: r214781", "tree": {"sha": "41fdc21f64faaca5558438f1c9624a5f383275b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/41fdc21f64faaca5558438f1c9624a5f383275b3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e507a43338b75714233a271186baa4c68bf50e64", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e507a43338b75714233a271186baa4c68bf50e64", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e507a43338b75714233a271186baa4c68bf50e64", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e507a43338b75714233a271186baa4c68bf50e64/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e3ef4162ba903788ebd080eef633841dc9690430", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3ef4162ba903788ebd080eef633841dc9690430", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e3ef4162ba903788ebd080eef633841dc9690430"}], "stats": {"total": 15, "additions": 11, "deletions": 4}, "files": [{"sha": "ec0e6c44fd045f12053cc65d12112db42dc6b3af", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e507a43338b75714233a271186baa4c68bf50e64/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e507a43338b75714233a271186baa4c68bf50e64/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e507a43338b75714233a271186baa4c68bf50e64", "patch": "@@ -1,3 +1,9 @@\n+2014-09-01  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR middle-end/61903\n+\t* expmed.c (store_fixed_bit_field_1): Shift UHWI 1 instead of HWI 1.\n+\tChange the type of V to unsigned HOST_WIDE_INT.\n+\n 2014-09-01  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n \n \t* tree-ssa-math-opts.c (struct symbolic_number): Clarify comment about"}, {"sha": "82afd7fee50402d4286e09785a267d5df19a441b", "filename": "gcc/expmed.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e507a43338b75714233a271186baa4c68bf50e64/gcc%2Fexpmed.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e507a43338b75714233a271186baa4c68bf50e64/gcc%2Fexpmed.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpmed.c?ref=e507a43338b75714233a271186baa4c68bf50e64", "patch": "@@ -1057,16 +1057,17 @@ store_fixed_bit_field_1 (rtx op0, unsigned HOST_WIDE_INT bitsize,\n \n   if (CONST_INT_P (value))\n     {\n-      HOST_WIDE_INT v = INTVAL (value);\n+      unsigned HOST_WIDE_INT v = UINTVAL (value);\n \n       if (bitsize < HOST_BITS_PER_WIDE_INT)\n-\tv &= ((HOST_WIDE_INT) 1 << bitsize) - 1;\n+\tv &= ((unsigned HOST_WIDE_INT) 1 << bitsize) - 1;\n \n       if (v == 0)\n \tall_zero = 1;\n       else if ((bitsize < HOST_BITS_PER_WIDE_INT\n-\t\t&& v == ((HOST_WIDE_INT) 1 << bitsize) - 1)\n-\t       || (bitsize == HOST_BITS_PER_WIDE_INT && v == -1))\n+\t\t&& v == ((unsigned HOST_WIDE_INT) 1 << bitsize) - 1)\n+\t       || (bitsize == HOST_BITS_PER_WIDE_INT\n+\t\t   && v == (unsigned HOST_WIDE_INT) -1))\n \tall_one = 1;\n \n       value = lshift_value (mode, v, bitnum);"}]}