{"sha": "5fa3ea21352a956a05859c65a2107f019c16013c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWZhM2VhMjEzNTJhOTU2YTA1ODU5YzY1YTIxMDdmMDE5YzE2MDEzYw==", "commit": {"author": {"name": "Dave Korn", "email": "dave.korn.cygwin@gmail.com", "date": "2011-12-06T20:31:31Z"}, "committer": {"name": "Dave Korn", "email": "davek@gcc.gnu.org", "date": "2011-12-06T20:31:31Z"}, "message": "Makefile.in (LIBGNAT_TARGET_PAIRS [windows targets]): Correctly detect cygwin...\n\n\t* gcc-interface/Makefile.in (LIBGNAT_TARGET_PAIRS [windows targets]):\n\tCorrectly detect cygwin, which no longer has the '32' suffix, and use\n\tappropriate implementations of the sockets and memory packages.\n\t* sysdep.c (WIN_SETMODE): New define to choose the correct spelling of\n\tsetmode/_setmode for MinGW and Cygwin, respectively.\n\t(__gnat_set_binary_mode [windows targets]): Use the above, and enable\n\tthe windows version for Cygwin as well as MinGW.\n\t(__gnat_set_text_mode [windows targets]): Likewise.\n\t(__gnat_ttyname [windows targets]): Provide a Cygwin implementation\n\tin addition to the MinGW version.\n\t(__gnat_is_windows_xp): Make available to Cygwin as well as MinGW.\n\t(__gnat_get_stack_bounds): Likewise.\n\nFrom-SVN: r182065", "tree": {"sha": "6005299b48b36986550a31c13d9a70d4ec01a4ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6005299b48b36986550a31c13d9a70d4ec01a4ce"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5fa3ea21352a956a05859c65a2107f019c16013c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5fa3ea21352a956a05859c65a2107f019c16013c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5fa3ea21352a956a05859c65a2107f019c16013c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5fa3ea21352a956a05859c65a2107f019c16013c/comments", "author": {"login": "davek-cygwin", "id": 530057, "node_id": "MDQ6VXNlcjUzMDA1Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/530057?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davek-cygwin", "html_url": "https://github.com/davek-cygwin", "followers_url": "https://api.github.com/users/davek-cygwin/followers", "following_url": "https://api.github.com/users/davek-cygwin/following{/other_user}", "gists_url": "https://api.github.com/users/davek-cygwin/gists{/gist_id}", "starred_url": "https://api.github.com/users/davek-cygwin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davek-cygwin/subscriptions", "organizations_url": "https://api.github.com/users/davek-cygwin/orgs", "repos_url": "https://api.github.com/users/davek-cygwin/repos", "events_url": "https://api.github.com/users/davek-cygwin/events{/privacy}", "received_events_url": "https://api.github.com/users/davek-cygwin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8535715d0fb7c430787c257a9fc14cb34794e676", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8535715d0fb7c430787c257a9fc14cb34794e676", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8535715d0fb7c430787c257a9fc14cb34794e676"}], "stats": {"total": 92, "additions": 72, "deletions": 20}, "files": [{"sha": "94875aba18a9756a62a05e9279596e11c57395db", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fa3ea21352a956a05859c65a2107f019c16013c/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fa3ea21352a956a05859c65a2107f019c16013c/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=5fa3ea21352a956a05859c65a2107f019c16013c", "patch": "@@ -1,3 +1,18 @@\n+2011-12-06  Dave Korn  <dave.korn.cygwin@gmail.com>\n+\n+\t* gcc-interface/Makefile.in (LIBGNAT_TARGET_PAIRS [windows targets]):\n+\tCorrectly detect cygwin, which no longer has the '32' suffix, and use\n+\tappropriate implementations of the sockets and memory packages.\n+\t* sysdep.c (WIN_SETMODE): New define to choose the correct spelling of\n+\tsetmode/_setmode for MinGW and Cygwin, respectively.\n+\t(__gnat_set_binary_mode [windows targets]): Use the above, and enable\n+\tthe windows version for Cygwin as well as MinGW.\n+\t(__gnat_set_text_mode [windows targets]): Likewise.\n+\t(__gnat_ttyname [windows targets]): Provide a Cygwin implementation\n+\tin addition to the MinGW version.\n+\t(__gnat_is_windows_xp): Make available to Cygwin as well as MinGW.\n+\t(__gnat_get_stack_bounds): Likewise.\n+\n 2011-12-05  Bob Duff  <duff@adacore.com>\n \n \t* sem_ch4.adb: Minor comment fix."}, {"sha": "f6aac1c38e7eb5abcf913f6dccf21a609ce7d32f", "filename": "gcc/ada/gcc-interface/Makefile.in", "status": "modified", "additions": 19, "deletions": 5, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fa3ea21352a956a05859c65a2107f019c16013c/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fa3ea21352a956a05859c65a2107f019c16013c/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMakefile.in?ref=5fa3ea21352a956a05859c65a2107f019c16013c", "patch": "@@ -1580,18 +1580,32 @@ ifeq ($(strip $(filter-out avr none powerpc% eabispe leon% erc32% unknown elf,$(\n   indepsw.adb<indepsw-gnu.adb\n endif\n \n-ifeq ($(strip $(filter-out cygwin32% mingw32% pe,$(osys))),)\n-  LIBGNAT_TARGET_PAIRS = \\\n+ifeq ($(strip $(filter-out cygwin% mingw32% pe,$(osys))),)\n+  # Cygwin provides a full Posix environment, and so we use the default\n+  # versions of s-memory and g-socthi rather than the Windows-specific\n+  # MinGW versions.  Ideally we would use all the default versions for\n+  # Cygwin and none of the MinGW versions, but for historical reasons\n+  # the Cygwin port has always been a CygMing frankenhybrid and it is\n+  # a long-term project to disentangle them.\n+  ifeq ($(strip $(filter-out cygwin%,$(osys))),)\n+    LIBGNAT_TARGET_PAIRS = \\\n+    s-memory.adb<s-memory.adb \\\n+    g-socthi.ads<g-socthi.ads \\\n+    g-socthi.adb<g-socthi.adb\n+  else\n+    LIBGNAT_TARGET_PAIRS = \\\n+    s-memory.adb<s-memory-mingw.adb \\\n+    g-socthi.ads<g-socthi-mingw.ads \\\n+    g-socthi.adb<g-socthi-mingw.adb\n+  endif\n+  LIBGNAT_TARGET_PAIRS += \\\n   a-dirval.adb<a-dirval-mingw.adb \\\n   a-excpol.adb<a-excpol-abort.adb \\\n   s-gloloc.adb<s-gloloc-mingw.adb \\\n   s-inmaop.adb<s-inmaop-dummy.adb \\\n-  s-memory.adb<s-memory-mingw.adb \\\n   s-taspri.ads<s-taspri-mingw.ads \\\n   s-tasinf.adb<s-tasinf-mingw.adb \\\n   s-tasinf.ads<s-tasinf-mingw.ads \\\n-  g-socthi.ads<g-socthi-mingw.ads \\\n-  g-socthi.adb<g-socthi-mingw.adb \\\n   g-stsifd.adb<g-stsifd-sockets.adb \\\n   g-soliop.ads<g-soliop-mingw.ads \\\n   $(ATOMICS_TARGET_PAIRS)"}, {"sha": "2b99a32b1322dd651c86c154931f35e7ff6e3cb4", "filename": "gcc/ada/sysdep.c", "status": "modified", "additions": 38, "deletions": 15, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fa3ea21352a956a05859c65a2107f019c16013c/gcc%2Fada%2Fsysdep.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fa3ea21352a956a05859c65a2107f019c16013c/gcc%2Fada%2Fsysdep.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsysdep.c?ref=5fa3ea21352a956a05859c65a2107f019c16013c", "patch": "@@ -120,38 +120,44 @@ extern struct tm *localtime_r(const time_t *, struct tm *);\n \n */\n \n-#if defined(WINNT)\n+#if defined (WINNT) || defined (__CYGWIN__)\n \n const char __gnat_text_translation_required = 1;\n \n+#ifdef __CYGWIN__\n+#define WIN_SETMODE setmode\n+#include <io.h>\n+#else\n+#define WIN_SETMODE _setmode\n+#endif\n+\n void\n __gnat_set_binary_mode (int handle)\n {\n-  _setmode (handle, O_BINARY);\n+  WIN_SETMODE (handle, O_BINARY);\n }\n \n void\n __gnat_set_text_mode (int handle)\n {\n-  _setmode (handle, O_TEXT);\n+  WIN_SETMODE (handle, O_TEXT);\n }\n \n-#ifdef __MINGW32__\n-#include <windows.h>\n-\n-/* Return the name of the tty.   Under windows there is no name for\n-   the tty, so this function, if connected to a tty, returns the generic name\n-   \"console\".  */\n+#ifdef __CYGWIN__\n \n char *\n __gnat_ttyname (int filedes)\n {\n-  if (isatty (filedes))\n-    return \"console\";\n-  else\n-    return NULL;\n+  extern char *ttyname (int);\n+\n+  return ttyname (filedes);\n }\n \n+#endif /* __CYGWIN__ */\n+\n+#if defined (__CYGWIN__) || defined (__MINGW32__)\n+#include <windows.h>\n+\n #ifndef RTX\n \n int __gnat_is_windows_xp (void);\n@@ -178,7 +184,7 @@ __gnat_is_windows_xp (void)\n   return is_win_xp;\n }\n \n-#endif\n+#endif /* !RTX */\n \n /* Get the bounds of the stack.  The stack pointer is supposed to be\n    initialized to BASE when a thread is created and the stack can be extended\n@@ -198,7 +204,24 @@ __gnat_get_stack_bounds (void **base, void **limit)\n   *limit = tib->StackLimit;\n }\n \n-#endif /* !__MINGW32__ */\n+#endif /* __CYGWIN__ || __MINGW32__ */\n+\n+#ifdef __MINGW32__\n+\n+/* Return the name of the tty.   Under windows there is no name for\n+   the tty, so this function, if connected to a tty, returns the generic name\n+   \"console\".  */\n+\n+char *\n+__gnat_ttyname (int filedes)\n+{\n+  if (isatty (filedes))\n+    return \"console\";\n+  else\n+    return NULL;\n+}\n+\n+#endif /* __MINGW32__ */\n \n #else\n "}]}