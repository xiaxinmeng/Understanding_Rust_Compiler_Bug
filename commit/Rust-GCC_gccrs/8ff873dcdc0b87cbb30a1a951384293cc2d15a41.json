{"sha": "8ff873dcdc0b87cbb30a1a951384293cc2d15a41", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGZmODczZGNkYzBiODdjYmIzMGExYTk1MTM4NDI5M2NjMmQxNWE0MQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2017-02-24T10:07:45Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2017-02-24T10:07:45Z"}, "message": "trans.c (Handled_Sequence_Of_Statements_to_gnu): If there is no end label...\n\n\t* gcc-interface/trans.c (Handled_Sequence_Of_Statements_to_gnu): If\n\tthere is no end label, put the location of the At_End procedure on\n\tthe call to the procedure.\n\nFrom-SVN: r245699", "tree": {"sha": "9e32a0eaa2a85bed5e902e2a6054c0013ea30aee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9e32a0eaa2a85bed5e902e2a6054c0013ea30aee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8ff873dcdc0b87cbb30a1a951384293cc2d15a41", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ff873dcdc0b87cbb30a1a951384293cc2d15a41", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ff873dcdc0b87cbb30a1a951384293cc2d15a41", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ff873dcdc0b87cbb30a1a951384293cc2d15a41/comments", "author": null, "committer": null, "parents": [{"sha": "bf6b72928e7a8d1734e14ef075dc9c985a4902fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf6b72928e7a8d1734e14ef075dc9c985a4902fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf6b72928e7a8d1734e14ef075dc9c985a4902fe"}], "stats": {"total": 31, "additions": 24, "deletions": 7}, "files": [{"sha": "4b60b3e69df33c798deb8aeeb59e1fd3d089f0aa", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ff873dcdc0b87cbb30a1a951384293cc2d15a41/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ff873dcdc0b87cbb30a1a951384293cc2d15a41/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=8ff873dcdc0b87cbb30a1a951384293cc2d15a41", "patch": "@@ -1,3 +1,16 @@\n+2017-02-24  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/trans.c (Handled_Sequence_Of_Statements_to_gnu): If\n+\tthere is no end label, put the location of the At_End procedure on\n+\tthe call to the procedure.\n+\n+2017-02-24  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/misc.c (gnat_type_max_size): Try to return a meaningful\n+\tvalue for array types with TYPE_INDEX_TYPE set on their domain type.\n+\t* gcc-interface/utils.c (max_size): For operations and expressions, do\n+\tnot build a new node if the operands have not changed or are missing.\n+\n 2017-02-24  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/utils.c (max_size) <tcc_expression>: Flip the second"}, {"sha": "7cde23064808c842741143b597b05f90e30a067c", "filename": "gcc/ada/gcc-interface/trans.c", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ff873dcdc0b87cbb30a1a951384293cc2d15a41/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ff873dcdc0b87cbb30a1a951384293cc2d15a41/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Ftrans.c?ref=8ff873dcdc0b87cbb30a1a951384293cc2d15a41", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                          C Implementation File                           *\n  *                                                                          *\n- *          Copyright (C) 1992-2016, Free Software Foundation, Inc.         *\n+ *          Copyright (C) 1992-2017, Free Software Foundation, Inc.         *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n@@ -4965,10 +4965,6 @@ Handled_Sequence_Of_Statements_to_gnu (Node_Id gnat_node)\n   tree gnu_result;\n   tree gnu_expr;\n   Node_Id gnat_temp;\n-  /* Node providing the sloc for the cleanup actions.  */\n-  Node_Id gnat_cleanup_loc_node = (Present (End_Label (gnat_node)) ?\n-                                   End_Label (gnat_node) :\n-                                   gnat_node);\n \n   /* The GCC exception handling mechanism can handle both ZCX and SJLJ schemes\n      and we have our own SJLJ mechanism.  To call the GCC mechanism, we call\n@@ -5018,7 +5014,8 @@ Handled_Sequence_Of_Statements_to_gnu (Node_Id gnat_node)\n \n       /* When we exit this block, restore the saved value.  */\n       add_cleanup (build_call_n_expr (set_jmpbuf_decl, 1, gnu_jmpsave_decl),\n-\t\t   gnat_cleanup_loc_node);\n+\t\t   Present (End_Label (gnat_node))\n+\t\t   ? End_Label (gnat_node) : gnat_node);\n     }\n \n   /* If we are to call a function when exiting this block, add a cleanup\n@@ -5027,11 +5024,18 @@ Handled_Sequence_Of_Statements_to_gnu (Node_Id gnat_node)\n   if (at_end)\n     {\n       tree proc_decl = gnat_to_gnu (At_End_Proc (gnat_node));\n+\n       /* When not optimizing, disable inlining of finalizers as this can\n \t create a more complex CFG in the parent function.  */\n       if (!optimize)\n \tDECL_DECLARED_INLINE_P (proc_decl) = 0;\n-      add_cleanup (build_call_n_expr (proc_decl, 0), gnat_cleanup_loc_node);\n+\n+      /* If there is no end label attached, we use the location of the At_End\n+\t procedure because Expand_Cleanup_Actions might reset the location of\n+\t the enclosing construct to that of an inner statement.  */\n+      add_cleanup (build_call_n_expr (proc_decl, 0),\n+\t\t   Present (End_Label (gnat_node))\n+\t\t   ? End_Label (gnat_node) : At_End_Proc (gnat_node));\n     }\n \n   /* Now build the tree for the declarations and statements inside this block."}]}