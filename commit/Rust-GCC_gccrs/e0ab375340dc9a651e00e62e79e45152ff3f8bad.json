{"sha": "e0ab375340dc9a651e00e62e79e45152ff3f8bad", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTBhYjM3NTM0MGRjOWE2NTFlMDBlNjJlNzllNDUxNTJmZjNmOGJhZA==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2016-09-28T18:22:16Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2016-09-28T18:22:16Z"}, "message": "cpuinfo.c (__get_cpuid_output): Remove.\n\n\t* config/i386/cpuinfo.c (__get_cpuid_output): Remove.\n\t(__cpu_indicator_init): Call __get_cpuid, not __get_cpuid_output.\n\nFrom-SVN: r240590", "tree": {"sha": "8acd6bcd258d1618a832923ef740c2337b5b7938", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8acd6bcd258d1618a832923ef740c2337b5b7938"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e0ab375340dc9a651e00e62e79e45152ff3f8bad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0ab375340dc9a651e00e62e79e45152ff3f8bad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e0ab375340dc9a651e00e62e79e45152ff3f8bad", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0ab375340dc9a651e00e62e79e45152ff3f8bad/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b236debd3b05584e8f5091fe35f1e071a2f4385b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b236debd3b05584e8f5091fe35f1e071a2f4385b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b236debd3b05584e8f5091fe35f1e071a2f4385b"}], "stats": {"total": 25, "additions": 8, "deletions": 17}, "files": [{"sha": "f876b9b16d3416ea057448b7652ca90598e5d1ac", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0ab375340dc9a651e00e62e79e45152ff3f8bad/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0ab375340dc9a651e00e62e79e45152ff3f8bad/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=e0ab375340dc9a651e00e62e79e45152ff3f8bad", "patch": "@@ -1,3 +1,8 @@\n+2015-09-28  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/cpuinfo.c (__get_cpuid_output): Remove.\n+\t(__cpu_indicator_init): Call __get_cpuid, not __get_cpuid_output.\n+\n 2016-09-27  Martin Liska  <mliska@suse.cz>\n \n \tPR gcov-profile/7970"}, {"sha": "af203f2a37e433813d3889f6dde7688caafb2561", "filename": "libgcc/config/i386/cpuinfo.c", "status": "modified", "additions": 3, "deletions": 17, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0ab375340dc9a651e00e62e79e45152ff3f8bad/libgcc%2Fconfig%2Fi386%2Fcpuinfo.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0ab375340dc9a651e00e62e79e45152ff3f8bad/libgcc%2Fconfig%2Fi386%2Fcpuinfo.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fi386%2Fcpuinfo.c?ref=e0ab375340dc9a651e00e62e79e45152ff3f8bad", "patch": "@@ -381,20 +381,6 @@ get_available_features (unsigned int ecx, unsigned int edx,\n   __cpu_model.__cpu_features[0] = features;\n }\n \n-/* A noinline function calling __get_cpuid. Having many calls to\n-   cpuid in one function in 32-bit mode causes GCC to complain:\n-   \"can't find a register in class CLOBBERED_REGS\".  This is\n-   related to PR rtl-optimization 44174. */\n-\n-static int __attribute__ ((noinline))\n-__get_cpuid_output (unsigned int __level,\n-\t\t    unsigned int *__eax, unsigned int *__ebx,\n-\t\t    unsigned int *__ecx, unsigned int *__edx)\n-{\n-  return __get_cpuid (__level, __eax, __ebx, __ecx, __edx);\n-}\n-\n-\n /* A constructor function that is sets __cpu_model and __cpu_features with\n    the right values.  This needs to run only once.  This constructor is\n    given the highest priority and it should run before constructors without\n@@ -406,7 +392,7 @@ __cpu_indicator_init (void)\n {\n   unsigned int eax, ebx, ecx, edx;\n \n-  int max_level = 5;\n+  int max_level;\n   unsigned int vendor;\n   unsigned int model, family, brand_id;\n   unsigned int extended_model, extended_family;\n@@ -416,7 +402,7 @@ __cpu_indicator_init (void)\n     return 0;\n \n   /* Assume cpuid insn present. Run in level 0 to get vendor id. */\n-  if (!__get_cpuid_output (0, &eax, &ebx, &ecx, &edx))\n+  if (!__get_cpuid (0, &eax, &ebx, &ecx, &edx))\n     {\n       __cpu_model.__cpu_vendor = VENDOR_OTHER;\n       return -1;\n@@ -431,7 +417,7 @@ __cpu_indicator_init (void)\n       return -1;\n     }\n \n-  if (!__get_cpuid_output (1, &eax, &ebx, &ecx, &edx))\n+  if (!__get_cpuid (1, &eax, &ebx, &ecx, &edx))\n     {\n       __cpu_model.__cpu_vendor = VENDOR_OTHER;\n       return -1;"}]}