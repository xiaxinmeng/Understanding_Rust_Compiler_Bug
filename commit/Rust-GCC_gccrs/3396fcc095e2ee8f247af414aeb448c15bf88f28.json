{"sha": "3396fcc095e2ee8f247af414aeb448c15bf88f28", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzM5NmZjYzA5NWUyZWU4ZjI0N2FmNDE0YWViNDQ4YzE1YmY4OGYyOA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2016-10-13T12:39:19Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2016-10-13T12:39:19Z"}, "message": "Restore __bind_simple for compat symbols\n\n\t* src/c++11/compatibility-thread-c++0x.cc (_Bind_simple)\n\t(_Bind_simple_helper, __bind_simple): Restore for ABI compat symbols.\n\nFrom-SVN: r241111", "tree": {"sha": "f771e63ba9e58153e1af8040341106c963990059", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f771e63ba9e58153e1af8040341106c963990059"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3396fcc095e2ee8f247af414aeb448c15bf88f28", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3396fcc095e2ee8f247af414aeb448c15bf88f28", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3396fcc095e2ee8f247af414aeb448c15bf88f28", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3396fcc095e2ee8f247af414aeb448c15bf88f28/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6c25a6761881392598626f3af828b1c213057efd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c25a6761881392598626f3af828b1c213057efd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c25a6761881392598626f3af828b1c213057efd"}], "stats": {"total": 65, "additions": 65, "deletions": 0}, "files": [{"sha": "1dac9caa868deddd43b473016572727f582021d7", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3396fcc095e2ee8f247af414aeb448c15bf88f28/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3396fcc095e2ee8f247af414aeb448c15bf88f28/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=3396fcc095e2ee8f247af414aeb448c15bf88f28", "patch": "@@ -1,5 +1,8 @@\n 2016-10-13  Jonathan Wakely  <jwakely@redhat.com>\n \n+\t* src/c++11/compatibility-thread-c++0x.cc (_Bind_simple)\n+\t(_Bind_simple_helper, __bind_simple): Restore for ABI compat symbols.\n+\n \t* include/std/functional (_Bind_simple, _Bind_simple_helper)\n \t(__bind_simple): Remove.\n \t* include/std/future: Include <bits/invoke.h> instead of <functional>."}, {"sha": "5ca2da8d22ef1714dd27ff82517a81d116f45cdd", "filename": "libstdc++-v3/src/c++11/compatibility-thread-c++0x.cc", "status": "modified", "additions": 62, "deletions": 0, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3396fcc095e2ee8f247af414aeb448c15bf88f28/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fcompatibility-thread-c%2B%2B0x.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3396fcc095e2ee8f247af414aeb448c15bf88f28/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fcompatibility-thread-c%2B%2B0x.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fcompatibility-thread-c%2B%2B0x.cc?ref=3396fcc095e2ee8f247af414aeb448c15bf88f28", "patch": "@@ -116,6 +116,68 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   // Replaced with inline definition in gcc-4.8.0\n   __future_base::_Async_state_common::~_Async_state_common() { _M_join(); }\n \n+  template<typename _Signature>\n+    struct _Bind_simple;\n+\n+  template<typename _Callable, typename... _Args>\n+    struct _Bind_simple<_Callable(_Args...)>\n+    {\n+      typedef typename result_of<_Callable(_Args...)>::type result_type;\n+\n+      template<typename _Tp, typename... _Up>\n+        explicit\n+        _Bind_simple(_Tp&& __f, _Up&&... __args)\n+        : _M_bound(std::forward<_Tp>(__f), std::forward<_Up>(__args)...)\n+        { }\n+\n+      _Bind_simple(const _Bind_simple&) = default;\n+      _Bind_simple(_Bind_simple&&) = default;\n+\n+      result_type\n+      operator()()\n+      {\n+        typedef typename _Build_index_tuple<sizeof...(_Args)>::__type _Indices;\n+        return _M_invoke(_Indices());\n+      }\n+\n+    private:\n+      template<std::size_t... _Indices>\n+        typename result_of<_Callable(_Args...)>::type\n+        _M_invoke(_Index_tuple<_Indices...>)\n+        {\n+         // std::bind always forwards bound arguments as lvalues,\n+         // but this type can call functions which only accept rvalues.\n+          return std::forward<_Callable>(std::get<0>(_M_bound))(\n+              std::forward<_Args>(std::get<_Indices+1>(_M_bound))...);\n+        }\n+\n+      std::tuple<_Callable, _Args...> _M_bound;\n+    };\n+\n+  template<typename _Func, typename... _BoundArgs>\n+    struct _Bind_simple_helper\n+    {\n+      typedef _Maybe_wrap_member_pointer<typename decay<_Func>::type>\n+        __maybe_type;\n+      typedef typename __maybe_type::type __func_type;\n+      typedef _Bind_simple<__func_type(typename decay<_BoundArgs>::type...)>\n+               __type;\n+    };\n+\n+  // Simplified version of std::bind for internal use, without support for\n+  // unbound arguments, placeholders or nested bind expressions.\n+  template<typename _Callable, typename... _Args>\n+    typename _Bind_simple_helper<_Callable, _Args...>::__type\n+    __bind_simple(_Callable&& __callable, _Args&&... __args)\n+    {\n+      typedef _Bind_simple_helper<_Callable, _Args...> __helper_type;\n+      typedef typename __helper_type::__maybe_type __maybe_type;\n+      typedef typename __helper_type::__type __result_type;\n+      return __result_type(\n+          __maybe_type::__do_wrap( std::forward<_Callable>(__callable)),\n+          std::forward<_Args>(__args)...);\n+    }\n+\n   // Explicit instantiation due to -fno-implicit-instantiation.\n   template void call_once(once_flag&, void (thread::*&&)(), reference_wrapper<thread>&&);\n   template _Bind_simple_helper<void (thread::*)(), reference_wrapper<thread>>::__type __bind_simple(void (thread::*&&)(), reference_wrapper<thread>&&);"}]}