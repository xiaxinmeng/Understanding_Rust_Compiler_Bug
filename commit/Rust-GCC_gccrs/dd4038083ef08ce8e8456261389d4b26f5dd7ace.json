{"sha": "dd4038083ef08ce8e8456261389d4b26f5dd7ace", "node_id": "C_kwDOANBUbNoAKGRkNDAzODA4M2VmMDhjZThlODQ1NjI2MTM4OWQ0YjI2ZjVkZDdhY2U", "commit": {"author": {"name": "Mahmoud Mohamed", "email": "mahadelr19@gmail.com", "date": "2023-03-16T11:53:44Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2023-03-17T16:30:46Z"}, "message": "resolve: Fix multiple bindings handling in match\n\ngcc/rust/ChangeLog:\n\n\t* resolve/rust-ast-resolve-expr.cc (ResolveExpr::visit):\n\tPush a Product context instead of an Or context.\n\ngcc/testsuite/ChangeLog:\n\n\t* rust/compile/multiple_bindings2.rs: New test.\n\nSigned-off-by: Mahmoud Mohamed <mahadelr19@gmail.com>", "tree": {"sha": "eaafb2d60f06131687e1d82731347e03d230e15a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eaafb2d60f06131687e1d82731347e03d230e15a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dd4038083ef08ce8e8456261389d4b26f5dd7ace", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd4038083ef08ce8e8456261389d4b26f5dd7ace", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd4038083ef08ce8e8456261389d4b26f5dd7ace", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd4038083ef08ce8e8456261389d4b26f5dd7ace/comments", "author": {"login": "goar5670", "id": 40712841, "node_id": "MDQ6VXNlcjQwNzEyODQx", "avatar_url": "https://avatars.githubusercontent.com/u/40712841?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goar5670", "html_url": "https://github.com/goar5670", "followers_url": "https://api.github.com/users/goar5670/followers", "following_url": "https://api.github.com/users/goar5670/following{/other_user}", "gists_url": "https://api.github.com/users/goar5670/gists{/gist_id}", "starred_url": "https://api.github.com/users/goar5670/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goar5670/subscriptions", "organizations_url": "https://api.github.com/users/goar5670/orgs", "repos_url": "https://api.github.com/users/goar5670/repos", "events_url": "https://api.github.com/users/goar5670/events{/privacy}", "received_events_url": "https://api.github.com/users/goar5670/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7334fb00e9cf2c8adfe2a197087652f5af451614", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7334fb00e9cf2c8adfe2a197087652f5af451614", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7334fb00e9cf2c8adfe2a197087652f5af451614"}], "stats": {"total": 26, "additions": 20, "deletions": 6}, "files": [{"sha": "a6b16f32a294f24836355e4f8ef2c359c9753280", "filename": "gcc/rust/resolve/rust-ast-resolve-expr.cc", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd4038083ef08ce8e8456261389d4b26f5dd7ace/gcc%2Frust%2Fresolve%2Frust-ast-resolve-expr.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd4038083ef08ce8e8456261389d4b26f5dd7ace/gcc%2Frust%2Fresolve%2Frust-ast-resolve-expr.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fresolve%2Frust-ast-resolve-expr.cc?ref=dd4038083ef08ce8e8456261389d4b26f5dd7ace", "patch": "@@ -207,10 +207,10 @@ ResolveExpr::visit (AST::IfLetExpr &expr)\n   resolver->push_new_type_rib (resolver->get_type_scope ().peek ());\n   resolver->push_new_label_rib (resolver->get_type_scope ().peek ());\n \n-  // FIXME: this declaration should be removed after refactoring\n-  // parse_match_arm_patterns output into an AltPattern\n+  // We know expr.get_patterns () has one pattern at most\n+  // so there's no reason to handle it like an AltPattern.\n   std::vector<PatternBinding> bindings\n-    = {PatternBinding (PatternBoundCtx::Or, std::set<Identifier> ())};\n+    = {PatternBinding (PatternBoundCtx::Product, std::set<Identifier> ())};\n \n   for (auto &pattern : expr.get_patterns ())\n     {\n@@ -522,10 +522,10 @@ ResolveExpr::visit (AST::MatchExpr &expr)\n \tResolveExpr::go (arm.get_guard_expr ().get (), prefix,\n \t\t\t canonical_prefix);\n \n-      // FIXME: this declaration should be removed after refactoring\n-      // parse_match_arms_patterns output into a single AltPattern\n+      // We know expr.get_patterns () has one pattern at most\n+      // so there's no reason to handle it like an AltPattern.\n       std::vector<PatternBinding> bindings\n-\t= {PatternBinding (PatternBoundCtx::Or, std::set<Identifier> ())};\n+\t= {PatternBinding (PatternBoundCtx::Product, std::set<Identifier> ())};\n \n       // insert any possible new patterns\n       for (auto &pattern : arm.get_patterns ())"}, {"sha": "e62b18f6843a817fa3f773ff56e5ba46ea23f0eb", "filename": "gcc/testsuite/rust/compile/multiple_bindings2.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd4038083ef08ce8e8456261389d4b26f5dd7ace/gcc%2Ftestsuite%2Frust%2Fcompile%2Fmultiple_bindings2.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd4038083ef08ce8e8456261389d4b26f5dd7ace/gcc%2Ftestsuite%2Frust%2Fcompile%2Fmultiple_bindings2.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Fmultiple_bindings2.rs?ref=dd4038083ef08ce8e8456261389d4b26f5dd7ace", "patch": "@@ -0,0 +1,14 @@\n+fn main()\n+{\n+  match (1, 2) {\n+    (a, a) => {},\n+  }\n+  // { dg-error \"identifier .a. is bound more than once in the same pattern .E0416.\" \"\" { target *-*-* } .-2 }\n+\n+  if let (a, a) = (1, 2) {}\n+  // { dg-error \"identifier .a. is bound more than once in the same pattern .E0416.\" \"\" { target *-*-* } .-1 }\n+\n+  let (a, a) = (1, 2);\n+  // { dg-error \"identifier .a. is bound more than once in the same pattern .E0416.\" \"\" { target *-*-* } .-1 }\n+\n+}"}]}