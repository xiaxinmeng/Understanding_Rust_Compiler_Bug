{"sha": "b64ca2cebde1b42fbb52b7325af823cb41989125", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjY0Y2EyY2ViZGUxYjQyZmJiNTJiNzMyNWFmODIzY2I0MTk4OTEyNQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "iant@google.com", "date": "2012-09-29T18:16:01Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2012-09-29T18:16:01Z"}, "message": "Update to current version of Go testsuite.\n\n\t* go.test/go-test.exp: Update for latest version of Go testsuite.\n\nFrom-SVN: r191858", "tree": {"sha": "3c86aa8e1b912b9f8d6820bb2aa110ab530c900f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3c86aa8e1b912b9f8d6820bb2aa110ab530c900f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b64ca2cebde1b42fbb52b7325af823cb41989125", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b64ca2cebde1b42fbb52b7325af823cb41989125", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b64ca2cebde1b42fbb52b7325af823cb41989125", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b64ca2cebde1b42fbb52b7325af823cb41989125/comments", "author": null, "committer": null, "parents": [{"sha": "4e57a5c302be5611b20752d24ed4862be007e206", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e57a5c302be5611b20752d24ed4862be007e206", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e57a5c302be5611b20752d24ed4862be007e206"}], "stats": {"total": 9390, "additions": 7107, "deletions": 2283}, "files": [{"sha": "fe022d54e342b6a2b793a75f682883f43561c999", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,3 +1,7 @@\n+2012-09-29  Ian Lance Taylor  <iant@google.com>\n+\n+\t* go.test/go-test.exp: Update for latest version of Go testsuite.\n+\n 2012-09-29  Thomas K\u00f6nig  <tkoenig@gcc.gnu.org>\n \n \tPR fortran/52724"}, {"sha": "b093f01c843f88dee9325f36c098ac02f9fa82d4", "filename": "gcc/testsuite/go.test/go-test.exp", "status": "modified", "additions": 127, "deletions": 284, "changes": 411, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Fgo-test.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Fgo-test.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Fgo-test.exp?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -26,6 +26,8 @@\n #   D   The directory of the test.\n #\n # Typical command lines:\n+# // compile\n+# // run\n # // $G $D/$F.go && $L $F.$A && ./$A.out\n # // $G $D/$F.go && $L $F.$A || echo BUG: known to fail incorrectly\n # // $G $D/$F.go && echo BUG: compilation succeeds incorrectly\n@@ -267,7 +269,7 @@ proc go-gc-tests { } {\n     # frontend ignores the standard options, it doesn't significantly\n     # improve testing.\n     set saved_torture_options $TORTURE_OPTIONS\n-    set TORTURE_OPTIONS [ list { -O2 -g }]\n+    set TORTURE_OPTIONS [list { -O2 -g }]\n \n     set saved-dg-do-what-default ${dg-do-what-default}\n \n@@ -316,13 +318,6 @@ proc go-gc-tests { } {\n \t    }\n \t}\n \n-\tif { [string match \"*bug347*\" $test] \\\n-\t\t || [string match \"*bug348*\" $test] } {\n-\t    # These bugs rely on runtime.Caller which currently fails.\n-\t    untested $name\n-\t    continue\n-\t}\n-\n \tif { [file tail $test] == \"init1.go\" } {\n \t    # This tests whether GC runs during init, which for gccgo\n \t    # it currently does not.\n@@ -347,6 +342,22 @@ proc go-gc-tests { } {\n \t    continue\n \t}\n \n+\tif { [file tail $test] == \"rotate.go\" } {\n+\t    # This test produces a temporary file that takes too long\n+\t    # to compile--5 minutes on my laptop without optimization.\n+\t    # When compiling without optimization it tests nothing\n+\t    # useful, since the point of the test is to see whether\n+\t    # the compiler generates rotate instructions.\n+\t    untested $name\n+\t    continue\n+\t}\n+\n+\tif { [file tail $test] == \"bug347.go\" \\\n+\t\t || [file tail $test] == \"bug348.go\" } {\n+\t    # These tests don't work if the functions are inlined.\n+\t    set TORTURE_OPTIONS [list { -O0 -g }]\n+\t}\n+\n \tset fd [open $test r]\n \n \tset lines_ok 1\n@@ -424,9 +435,24 @@ proc go-gc-tests { } {\n \t    }\n \t}\n \n-\tif { $test_line == \"// \\$G \\$D/\\$F\\.go && \\$L \\$F\\.\\$A && \\./\\$A\\.out >tmp.go &&\" \\\n-\t     && $test_line2 == \"// \\$G tmp\\.go && \\$L tmp\\.\\$A && \\./\\$A\\.out || echo BUG: 64bit\" } {\n-\t    # 64bit.go is a special case.\n+\tif { $test_line == \"// compile\"\n+\t     || $test_line == \"// echo bug395 is broken  # takes 90+ seconds to break\" } {\n+\t    # This is a vanilla compile test.\n+\t    set dg-do-what-default \"assemble\"\n+\t    go-dg-runtest $test \"-w $DEFAULT_GOCFLAGS\"\n+\t} elseif { $test_line == \"// run\"\n+\t\t   || $test_line == \"// \\$G \\$F.go && \\$L \\$F.\\$A && ./\\$A.out\" } {\n+\t    # This is a vanilla execution test.\n+\t    go-torture-execute $test\n+\t    file delete core [glob -nocomplain core.*]\n+\t} elseif { $test_line == \"// build\" } {\n+\t    # This is a vanilla compile and link test.\n+\t    set dg-do-what-default \"link\"\n+\t    go-dg-runtest $test \"-w $DEFAULT_GOCFLAGS\"\n+\t} elseif { $test_line == \"// runoutput\" \\\n+\t\t       || ($test_line == \"// \\$G \\$D/\\$F.go && \\$L \\$F.\\$A &&\"\n+\t\t\t   && $test_line2 == \"// ./\\$A.out >tmp.go && \\$G tmp.go && \\$L -o \\$A.out1 tmp.\\$A && ./\\$A.out1\") } {\n+\t    # Run the test to get a .go program to run.\n \t    set go_execute_args \"\"\n \t    set hold_runtests $runtests\n \t    set runtests \"go-test.exp\"\n@@ -440,42 +466,17 @@ proc go-gc-tests { } {\n \t\t} else {\n \t\t    pass \"$name execution\"\n \t\t    file delete $base-out.x\n-\t\t    # Disable optimizations as this test takes a long time\n-\t\t    # to compile.\n-\t\t    set hold $TORTURE_OPTIONS\n-\t\t    set TORTURE_OPTIONS [ list { -O0 -g }]\n+\t\t    # Disable optimizations as some of these tests\n+\t\t    # take a long time to compile.\n+\t\t    set TORTURE_OPTIONS [list { -O0 -g -fno-var-tracking-assignments }]\n \t\t    go-torture-execute \"./$base-out.go\"\n-\t\t    set TORTURE_OPTIONS $hold\n \t\t}\n \t\tfile delete $base-out.go\n \t    }\n \t    file delete $output_file\n \t    set runtests $hold_runtests\n-\t} elseif { $test_line == \"// \\$G \\$D/\\$F.go && \\$L \\$F.\\$A && ./\\$A.out\" \\\n-\t\t   || $test_line == \"// \\$G \\$F.go && \\$L \\$F.\\$A && ./\\$A.out\" \\\n-\t\t   || $test_line == \"// \\$G \\$F.go && \\$L \\$F.\\$A &&./\\$A.out\" \\\n-\t\t   || $test_line == \"// \\$G \\$D/\\$F.go && \\$L \\$F.\\$A && \\$A.out\" \\\n-\t\t   || [string match \\\n-\t\t\t   \"// \\$G \\$D/\\$F.go && \\$L \\$F.\\$A && ./\\$A.out || echo BUG*\" \\\n-\t\t\t   $test_line]\n-\t\t   || [string match \\\n-\t\t\t   \"// \\$G \\$F.go && \\$L \\$F.\\$A && (./\\$A.out || echo BUG*\" \\\n-\t\t\t   $test_line]\n-\t\t   || [string match \\\n-\t\t\t   \"// \\$G \\$D/\\$F.go && \\$L \\$F.\\$A && (./\\$A.out || echo BUG*\" \\\n-\t\t\t   $test_line]\n-\t\t   || [string match \\\n-\t\t\t   \"// \\$G \\$F.go && \\$L \\$F.\\$A && GOMAXPROCS=* ./\\$A.out\" \\\n-\t\t\t   $test_line]\n-\t\t   || [string match \\\n-\t\t\t   \"// \\$G \\$D/\\$F.go && \\$L \\$F.\\$A && ./\\$A.out >* || echo BUG*\" \\\n-\t\t\t   $test_line] } {\n-\t    # This is a vanilla execution test.\n-\t    go-torture-execute $test\n-\t    file delete core [glob -nocomplain core.*]\n-\t} elseif { $test_line == \"// \\$G \\$D/\\$F.go && \\$L \\$F.\\$A && ./\\$A.out 2>&1 | cmp - \\$D/\\$F.out\" \\\n-\t\t       || $test_line == \"// \\$G \\$F.go && \\$L \\$F.\\$A && ./\\$A.out 2>&1 | cmp - \\$D/\\$F.out\" \\\n-\t\t       || $test_line == \"// (\\$G \\$D/\\$F.go && \\$L \\$F.\\$A && ./\\$A.out 2>&1 | cmp - \\$D/\\$F.out)\" } {\n+\t} elseif { $test_line == \"// cmpout\" \\\n+\t\t   || $test_line == \"// (\\$G \\$D/\\$F.go && \\$L \\$F.\\$A && ./\\$A.out 2>&1 | cmp - \\$D/\\$F.out)\" } {\n \t    # This is an execution test for which we need to check the\n \t    # program output.\n \t    set hold_runtests $runtests\n@@ -495,109 +496,38 @@ proc go-gc-tests { } {\n \t\t    regsub \"\\\\.go$\" $test \".out\" expect\n \t\t    filecmp $expect $base.p \"$name compare\"\n \t\t}\n-\t\t#file delete $base.p\n+\t\tfile delete $base.p\n \t    } else {\n \t\tuntested \"$name execution\"\n \t\tuntested \"$name compare\"\n \t    }\n \t    set runtests $hold_runtests\n-\t} elseif { [string match \\\n-\t\t\t\"// \\$G \\$D/\\$F.go && \\$L \\$F.\\$A || echo BUG*\" \\\n-\t\t\t$test_line] \\\n-\t\t   || [string match \"// \\$G \\$F.go && \\$L \\$F.\\$A  #*\" \\\n-\t\t\t   $test_line]\n-\t\t   || $test_line == \"// \\$G \\$D/\\$F.go && \\$L \\$F.\\$A\" } {\n-\t    # This is a vanilla compile and link test.\n-\t    set dg-do-what-default \"link\"\n-\t    go-dg-runtest $test \"-w $DEFAULT_GOCFLAGS\"\n-\t} elseif { [string match \"// \\$G \\$D/\\$F.go\" $test_line] \\\n-\t\t   || [string match \"// \\$G \\$D/\\$F.go || echo BUG*\" \\\n-\t\t\t   $test_line] \\\n-\t\t   || [string match \"// \\$G \\$D/\\$F.go || echo \\\"Bug*\" \\\n-\t\t\t   $test_line] \\\n-\t\t   || [string match \"// \\$G \\$D/\\$F.go || echo \\\"Issue*\" \\\n-\t\t\t   $test_line] \\\n-\t\t   || [string match \"// \\$G \\$F.go || echo BUG*\" \\\n-\t\t\t   $test_line] \\\n-\t\t   || [string match \"// ! \\$G \\$D/\\$F.go && echo BUG*\" \\\n-\t\t\t   $test_line] \\\n-\t\t   || $test_line == \"// echo bug395 is broken  # takes 90+ seconds to break\" } {\n-\t    # This is a vanilla compile test.\n-\t    set dg-do-what-default \"assemble\"\n-\t    go-dg-runtest $test \"-w $DEFAULT_GOCFLAGS\"\n-\t} elseif { [string match \"// \\$G \\$D/\\$F.go && echo BUG*\" \\\n-\t\t\t$test_line] \\\n-\t\t   || $test_line == \"// ! \\$G \\$D/\\$F.go >/dev/null\" \\\n-\t\t   || $test_line == \"// ! \\$G \\$D/\\$F.go\" \\\n-\t\t   || $test_line == \"// ! \\$G \\$F.go\" \\\n-\t           || [string match \"// ! \\$G \\$D/\\$F.go || echo BUG*\" \\\n-\t\t\t$test_line] } {\n-\t    # This is a compile test which should fail.\n-\t    set dg-do-what-default \"assemble\"\n-\t    setup_xfail \"*-*-*\"\n-\t    go-dg-runtest $test \"-w $DEFAULT_GOCFLAGS\"\n-\t} elseif { [string match \"// \\$G \\$D/\\$F.go && \\$L \\$F.\\$A && ! ./\\$A.out\" \\\n-\t\t\t$test_line] \\\n-\t\t   || [string match \"// \\$G \\$D/\\$F.go && \\$L \\$F.\\$A && ! ./\\$A.out || echo BUG: *\" \\\n-\t\t\t$test_line] \\\n-\t\t   || [string match \"// \\$G \\$D/\\$F.go && \\$L \\$F.\\$A && (! ./\\$A.out || echo BUG: *\" \\\n-\t\t\t$test_line] \\\n-\t\t   || ($test_line == \"// \\$G \\$D/\\$F.go && \\$L \\$F.\\$A &&\"\n-\t\t       && $test_line2 == \"//\t((! sh -c ./\\$A.out) >/dev/null 2>&1 || echo BUG: should fail)\") } {\n+\t} elseif { [string match \"// \\$G \\$D/\\$F.go && \\$L \\$F.\\$A && ! ./\\$A.out || echo BUG: *\" \\\n+\t\t    $test_line] } {\n \t    go-execute-xfail $test\n-\t} elseif { [string match \"// errchk \\$G \\$F.go\" $test_line] \\\n-\t\t    || [string match \"// errchk \\$G -e \\$F.go\" $test_line] \\\n-\t\t    || [string match \"// errchk \\$G \\$D/\\$F.go\" $test_line] \\\n-\t\t    || [string match \"//errchk \\$G \\$D/\\$F.go\" $test_line] \\\n-\t\t    || [string match \"// errchk \\$G -e \\$D/\\$F.go\" \\\n-\t\t\t    $test_line] \\\n-\t\t    || [string match \"// ! errchk \\$G \\$D/\\$F.go\" $test_line] \\\n-\t\t    || [string match \"// ! errchk \\$G -e \\$D/\\$F.go\" \\\n-\t\t\t    $test_line] \\\n-\t\t    || [string match \"// errchk \\$G \\$F.go || true\" \\\n-\t\t\t    $test_line] \\\n-\t\t    || [string match \"// errchk \\$G \\$D/\\$F.go || true\" \\\n-\t\t\t    $test_line] \\\n-\t\t    || [string match \"// errchk \\$G -e \\$D/\\$F.go || true\" \\\n-\t\t\t    $test_line] \\\n-\t\t    || [string match \"// errchk \\$G \\$D/\\$F.go || echo BUG*\" \\\n-\t\t\t    $test_line] } {\n+\t} elseif { $test_line == \"// errorcheck\" } {\n \t    errchk $test \"\"\n-\t} elseif { [string match \\\n-\t\t\t\"// \\$G \\$D/\\$F.dir/bug0.go && \\$G \\$D/\\$F.dir/bug1.go || echo BUG*\" \\\n-\t\t\t$test_line] \\\n-\t\t       || [string match \\\n-\t\t\t       \"// \\$G \\$D/\\$F.dir/one.go && \\$G \\$D/\\$F.dir/two.go\" \\\n-\t\t\t       $test_line] } {\n-\t    if { [string match \\\n-\t\t      \"// \\$G \\$D/\\$F.dir/bug0.go && \\$G \\$D/\\$F.dir/bug1.go || echo BUG*\" \\\n-\t\t      $test_line] } {\n-\t\tset name1 \"bug0.go\"\n-\t\tset name2 \"bug1.go\"\n-\t    } elseif { [string match \\\n-\t\t\t    \"// \\$G \\$D/\\$F.dir/one.go && \\$G \\$D/\\$F.dir/two.go\" \\\n-\t\t\t    $test_line] } {\n-\t\tset name1 \"one.go\"\n-\t\tset name2 \"two.go\"\n-\t    }\n+\t} elseif { $test_line == \"// compiledir\" } {\n \t    set hold_runtests $runtests\n \t    set runtests \"go-test.exp\"\n \t    set dg-do-what-default \"assemble\"\n-\t    regsub \"\\\\.go$\" $test \".dir/$name1\" file1\n-\t    dg-test -keep-output $file1 \"-O\" \"-w $DEFAULT_GOCFLAGS\"\n-\t    regsub \"\\\\.go$\" $test \".dir/$name2\" file2\n-\t    dg-test $file2 \"-O\" \"-w $DEFAULT_GOCFLAGS\"\n-\t    file delete \"[file rootname [file tail $file1]].o\"\n+\t    set dir \"[file rootname $test].dir\"\n+\t    set del {}\n+\t    foreach f [lsort [glob \"$dir/*.go\"]] {\n+\t\tdg-test -keep-output $f \"-O\" \"-w $DEFAULT_GOCFLAGS\"\n+\t\tlappend del \"[file rootname [file tail $f]].o\"\n+\t    }\n+\t    foreach f $del {\n+\t\tfile delete $f\n+\t    }\n \t    set runtests $hold_runtests\n+\t} elseif { \"$test_line\" == \"\"\n+\t\t   || [string match \"// true*\" $test_line]\n+\t\t   || [string match \"// skip*\" $test_line] } {\n+\t    # Not a real test, just ignore.\n \t} elseif { [string match \\\n \t\t\t\"// \\$G \\$D/\\$F.dir/bug0.go && errchk \\$G \\$D/\\$F.dir/bug1.go\" \\\n \t\t\t$test_line] \\\n-\t\t       || [string match \\\n-\t\t\t       \"// \\$G \\$D/\\$F.dir/p1.go && \\$G \\$D/\\$F.dir/p2.go\" \\\n-\t\t\t       $test_line] \\\n-\t\t       || [string match \\\n-\t\t\t       \"// \\$G \\$D/\\$F.dir/b.go && \\$G \\$D/\\$F.dir/a.go\" \\\n-\t\t\t       $test_line] \\\n \t\t       || [string match \\\n \t\t\t       \"// \\$G \\$D/\\$F.dir/io.go && errchk \\$G -e \\$D/\\$F.dir/main.go\" \\\n \t\t\t       $test_line] } {\n@@ -606,16 +536,6 @@ proc go-gc-tests { } {\n \t\t      $test_line] } {\n \t\tset name1 \"bug0.go\"\n \t\tset name2 \"bug1.go\"\n-\t    } elseif { [string match \\\n-\t\t\t    \"// \\$G \\$D/\\$F.dir/p1.go && \\$G \\$D/\\$F.dir/p2.go\" \\\n-\t\t\t    $test_line] } {\n-\t\tset name1 \"p1.go\"\n-\t\tset name2 \"p2.go\"\n-\t    } elseif { [string match \\\n-\t\t\t    \"// \\$G \\$D/\\$F.dir/b.go && \\$G \\$D/\\$F.dir/a.go\" \\\n-\t\t\t    $test_line] } {\n-\t\tset name1 \"b.go\"\n-\t\tset name2 \"a.go\"\n \t    } elseif { [string match \\\n \t\t\t    \"// \\$G \\$D/\\$F.dir/io.go && errchk \\$G -e \\$D/\\$F.dir/main.go\" \\\n \t\t\t    $test_line] } {\n@@ -642,35 +562,6 @@ proc go-gc-tests { } {\n \t    errchk $test \"\"\n \t    file delete \"[file rootname [file tail $file1]].o\"\n \t    set runtests $hold_runtests\n-\t} elseif { [string match \\\n-\t\t\t\"// \\$G \\$D/\\$F.dir/bug0.go && (! \\$G \\$D/\\$F.dir/bug1.go || echo BUG*\" \\\n-\t\t\t$test_line] } {\n-\t    set hold_runtests $runtests\n-\t    set runtests \"go-test.exp\"\n-\t    set dg-do-what-default \"assemble\"\n-\t    regsub \"\\\\.go$\" $test \".dir/bug0.go\" file1\n-\t    dg-test -keep-output $file1 \"-O\" \"-w $DEFAULT_GOCFLAGS\"\n-\t    regsub \"\\\\.go$\" $test \".dir/bug1.go\" file2\n-\t    setup_xfail \"*-*-*\"\n-\t    dg-test $file2 \"-O\" \"-w $DEFAULT_GOCFLAGS\"\n-\t    file delete \"[file rootname [file tail $file1]].o\"\n-\t    set runtests $hold_runtests\n-\t} elseif { [string match \\\n-\t\t\t\"// \\$G \\$D/\\$F.dir/bug0.go && \\$G \\$D/\\$F.dir/bug1.go && (! \\$G \\$D/\\$F.dir/bug2.go || echo BUG*\" \\\n-\t\t\t$test_line] } {\n-\t    set hold_runtests $runtests\n-\t    set runtests \"go-test.exp\"\n-\t    set dg-do-what-default \"assemble\"\n-\t    regsub \"\\\\.go$\" $test \".dir/bug0.go\" file1\n-\t    dg-test -keep-output $file1 \"-O\" \"-w $DEFAULT_GOCFLAGS\"\n-\t    regsub \"\\\\.go$\" $test \".dir/bug1.go\" file2\n-\t    dg-test -keep-output $file2 \"-O\" \"-w $DEFAULT_GOCFLAGS\"\n-\t    regsub \"\\\\.go$\" $test \".dir/bug2.go\" file3\n-\t    setup_xfail \"*-*-*\"\n-\t    dg-test $file3 \"-O\" \"-w $DEFAULT_GOCFLAGS\"\n-\t    file delete \"[file rootname [file tail $file1]].o\"\n-\t    file delete \"[file rootname [file tail $file2]].o\"\n-\t    set runtests $hold_runtests\n \t} elseif { [string match \\\n \t\t\t\"// \\$G \\$D/\\$F.dir/bug0.go && \\$G \\$D/\\$F.dir/bug1.go && errchk \\$G \\$D/\\$F.dir/bug2.go\" \\\n \t\t\t$test_line] } {\n@@ -691,7 +582,10 @@ proc go-gc-tests { } {\n \t\t\t$test_line] \\\n \t\t       || [string match \\\n \t\t\t       \"// \\$G \\$D/\\$F.dir/p.go && \\$G \\$D/\\$F.dir/main.go && \\$L main.\\$A && ./\\$A.out\" \\\n-\t\t\t       $test_line] } {\n+\t\t\t       $test_line] \\\n+\t\t       || $test_line == \"// \\$G \\$D/\\$F.dir/p1.go && \\$G \\$D/\\$F.dir/main.go && \\$L main.\\$A && ./\\$A.out\" \\\n+\t\t       || $test_line == \"// \\$G \\$D/\\$F.dir/lib.go && \\$G \\$D/\\$F.go && \\$L \\$F.\\$A && ./\\$A.out\" \\\n+\t\t       || $test_line == \"// \\$G \\$D/method4a.go && \\$G \\$D/\\$F.go && \\$L \\$F.\\$A && ./$\\A.out\" } {\n \t    if { [string match \\\n \t\t\t\"// \\$G \\$D/bug160.dir/x.go && \\$G \\$D/bug160.dir/y.go && \\$L y.\\$A && ./\\$A.out\" \\\n \t\t      $test_line] } {\n@@ -702,14 +596,29 @@ proc go-gc-tests { } {\n \t\t\t    $test_line] } {\n \t\tset name1 \"p.go\"\n \t\tset name2 \"main.go\"\n+\t    } elseif { $test_line == \"// \\$G \\$D/\\$F.dir/p1.go && \\$G \\$D/\\$F.dir/main.go && \\$L main.\\$A && ./\\$A.out\" } {\n+\t\tset name1 \"p1.go\"\n+\t\tset name2 \"main.go\"\n+\t    } elseif { $test_line == \"// \\$G \\$D/\\$F.dir/lib.go && \\$G \\$D/\\$F.go && \\$L \\$F.\\$A && ./\\$A.out\" } {\n+\t\tset name1 \"lib.go\"\n+\t\tset name2 \"\"\n+\t    } elseif { $test_line == \"// \\$G \\$D/method4a.go && \\$G \\$D/\\$F.go && \\$L \\$F.\\$A && ./$\\A.out\" } {\n+\t\tset name1 \"method4a.go\"\n+\t\tset name2 \"\"\n \t    }\n \t    set hold_runtests $runtests\n \t    set runtests \"go-test.exp\"\n \t    set dg-do-what-default \"assemble\"\n \t    regsub \"\\\\.go$\" $test \".dir/$name1\" file1\n+\t    if { $name1 == \"method4a.go\" } {\n+\t\tset file1 \"[file dirname $test]/method4a.go\"\n+\t    }\n \t    dg-test -keep-output $file1 \"-O\" \"-w $DEFAULT_GOCFLAGS\"\n \t    set ofile1 \"[file rootname [file tail $file1]].o\"\n \t    regsub \"\\\\.go$\" $test \".dir/$name2\" file2\n+\t    if { $name2 == \"\" } {\n+\t\tset file2 $test\n+\t    }\n \t    dg-test -keep-output $file2 \"-O\" \"-w $DEFAULT_GOCFLAGS\"\n \t    set ofile2 \"[file rootname [file tail $file2]].o\"\n \t    set dg-do-what-default \"link\"\n@@ -723,6 +632,29 @@ proc go-gc-tests { } {\n \t    $status $name\n \t    file delete $ofile1 $ofile2 $output_file\n \t    set runtests $hold_runtests\n+\t} elseif { $test_line == \"// \\$G \\$D/\\$F.dir/one.go && \\$G \\$D/\\$F.dir/two.go && \\$G \\$D/\\$F.go && \\$L \\$F.\\$A && ./\\$A.out\" } {\n+\t    set hold_runtests $runtests\n+\t    set runtests \"go-test.exp\"\n+\t    set dg-do-what-default \"assemble\"\n+\t    regsub \"\\\\.go$\" $test \".dir/one.go\" file1\n+\t    dg-test -keep-output $file1 \"-O\" \"-w $DEFAULT_GOCFLAGS\"\n+\t    set ofile1 \"[file rootname [file tail $file1]].o\"\n+\t    regsub \"\\\\.go$\" $test \".dir/two.go\" file2\n+\t    dg-test -keep-output $file2 \"-O\" \"-w $DEFAULT_GOCFLAGS\"\n+\t    set ofile2 \"[file rootname [file tail $file2]].o\"\n+\t    dg-test -keep-output $test \"-O\" \"-w $DEFAULT_GOCFLAGS\"\n+\t    set ofile3 \"[file rootname [file tail $test]].o\"\n+\t    set dg-do-what-default \"link\"\n+\t    set output_file \"./[file rootname [file tail $test]].exe\"\n+\t    set comp_output [go_target_compile \"$ofile1 $ofile2 $ofile3\" \\\n+\t\t\t\t $output_file \"executable\" \"$options\"]\n+\t    set comp_output [go-dg-prune $target_triplet $comp_output]\n+\t    verbose -log $comp_output\n+\t    set result [go_load \"$output_file\" \"\" \"\"]\n+\t    set status [lindex $result 0]\n+\t    $status $name\n+\t    file delete $ofile1 $ofile2 $ofile3 $output_file\n+\t    set runtests $hold_runtests\n \t} elseif { [string match \\\n \t\t\t\"// \\$G \\$D/bug191.dir/a.go && \\$G \\$D/bug191.dir/b.go && \\$G \\$D/\\$F.go && \\$L \\$F.\\$A\" \\\n \t\t\t$test_line] } {\n@@ -816,38 +748,6 @@ proc go-gc-tests { } {\n \t    }\n \t    file delete $ofile1 $ofile2 $output_file\n \t    set runtests $hold_runtests\n-\t} elseif { [string match \\\n-\t\t\t\"// \\$G \\$D/\\$F.dir/chanbug.go && \\$G -I. \\$D/\\$F.dir/chanbug2.go\" \\\n-\t\t\t$test_line] } {\n-\t    set hold_runtests $runtests\n-\t    set runtests \"go-test.exp\"\n-\t    set dg-do-what-default \"assemble\"\n-\t    regsub \"\\\\.go$\" $test \".dir/chanbug.go\" file1\n-\t    dg-test -keep-output $file1 \"-O\" \"-w $DEFAULT_GOCFLAGS\"\n-\t    regsub \"\\\\.go$\" $test \".dir/chanbug2.go\" file2\n-\t    dg-test $file2 \"-O\" \"-w $DEFAULT_GOCFLAGS\"\n-\t    file delete \"[file rootname [file tail $file1]].o\"\n-\t    set runtests $hold_runtests\n-\t} elseif { [string match \\\n-\t\t\t\"// (! \\$G \\$D/\\$F.go) | grep 'initialization loop' *\" \\\n-\t\t\t$test_line] } {\n-\t    set dg-do-what-default \"assemble\"\n-\t    setup_xfail \"*-*-*\"\n-\t    go-dg-runtest $test \"-w $DEFAULT_GOCFLAGS\"\n-\t} elseif { [string match \\\n-\t\t\t\"// \\$G \\$D/\\$F.dir/x.go && errchk \\$G \\$D/\\$F.dir/y.go\" \\\n-\t\t\t$test_line] } {\n-\t    set hold_runtests $runtests\n-\t    set runtests \"go-test.exp\"\n-\t    set dg-do-what-default \"assemble\"\n-\t    regsub \"\\\\.go$\" $test \".dir/x.go\" file1\n-\t    dg-test -keep-output $file1 \"-O\" \"-w $DEFAULT_GOCFLAGS\"\n-\t    regsub \"\\\\.go$\" $test \".dir/y.go\" file2\n-\t    errchk $file2 \"\"\n-\t    file delete \"[file rootname [file tail $file1]].o\"\n-\t    set runtests $hold_runtests\n-\t} elseif { \"$test_line\" == \"\" || [string match \"// true*\" $test_line] } {\n-\t    # Not a real test, just ignore.\n \t} elseif { $test_line == \"// \\$G \\$D/\\$F.dir/bug0.go &&\" \\\n \t\t       && $test_line2 == \"// \\$G \\$D/\\$F.dir/bug1.go &&\" \\\n \t\t       && $test_line3 == \"// \\$G \\$D/\\$F.dir/bug2.go &&\" \\\n@@ -921,7 +821,7 @@ proc go-gc-tests { } {\n \t    }\n \t    file delete $ofile1 $ofile2 $output_file\n \t    set runtests $hold_runtests\n-\t} elseif { $test_line == \"// \\$G \\$D/\\$F.go \\$D/cmplxdivide1.go && \\$L \\$D/\\$F.\\$A && ./\\$A.out\" } {\n+\t} elseif { $test_line == \"// run cmplxdivide1.go\" } {\n \t    regsub \"/\\[^/\\]*$\" $test \"/cmplxdivide1.go\" test2\n \t    set output_file \"./[file rootname [file tail $test]].o\"\n \t    set comp_output [go_target_compile \"$test $test2\" \\\n@@ -954,10 +854,8 @@ proc go-gc-tests { } {\n \t\t    file delete tmp.x\n \t\t    # Disable optimizations as this test takes a long time\n \t\t    # to compile.\n-\t\t    set hold $TORTURE_OPTIONS\n-\t\t    set TORTURE_OPTIONS [ list { -O0 -g }]\n+\t\t    set TORTURE_OPTIONS [list { -O0 -g -fno-var-tracking-assignments }]\n \t\t    go-torture-execute \"./tmp.go\"\n-\t\t    set TORTURE_OPTIONS $hold\n \t\t}\n \t\tif { [catch \"exec $output_file -pass 1 >tmp.go\"] != 0 } {\n \t\t    fail \"$name execution 1\"\n@@ -994,59 +892,6 @@ proc go-gc-tests { } {\n \t    }\n \t    file delete $output_file\n \t    set runtests $hold_runtests\n-\t} elseif { [string match \\\n-\t\t\t\"// \\$G \\$D/\\$F.dir/p.go && \\$G \\$D/\\$F.dir/main.go && \\$L main.\\$A && ! ./\\$A.out || echo BUG*\" \\\n-\t\t\t$test_line] } {\n-\t    set hold_runtests $runtests\n-\t    set runtests \"go-test.exp\"\n-\t    set dg-do-what-default \"assemble\"\n-\t    regsub \"\\\\.go$\" $test \".dir/p.go\" file1\n-\t    dg-test -keep-output $file1 \"-O\" \"-w $DEFAULT_GOCFLAGS\"\n-\t    set ofile1 \"[file rootname [file tail $file1]].o\"\n-\t    regsub \"\\\\.go$\" $test \".dir/main.go\" file2\n-\t    dg-test -keep-output $file2 \"-O\" \"-w $DEFAULT_GOCFLAGS\"\n-\t    set ofile2 \"[file rootname [file tail $file2]].o\"\n-\t    set output_file \"./[file rootname [file tail $test]].exe\"\n-\t    set comp_output [go_target_compile \"$ofile1 $ofile2\" \\\n-\t\t\t\t $output_file \"executable\" \"$options\"]\n-\t    set comp_output [go-dg-prune $target_triplet $comp_output]\n-\t    if [string match \"\" $comp_output] {\n-\t\tsetup_xfail \"*-*-*\"\n-\t\tset result [go_load \"$output_file\" \"\" \"\"]\n-\t\tset status [lindex $result 0]\n-\t\t$status $name\n-\t    } else {\n-\t\tverbose -log $comp_output\n-\t\tfail $name\n-\t    }\n-\t    file delete $ofile1 $ofile2 $output_file\n-\t    set runtests $hold_runtests\n-\t} elseif { $test_line == \"// \\$G \\$D/\\$F.go && \\$L \\$F.\\$A && ./\\$A.out >tmp.go &&\"\n-\t\t   && $test_line2 == \"// \\$G tmp.go && \\$L tmp.\\$A && ./\\$A.out || echo BUG: select5\" } {\n-\t    set go_execute_args \"\"\n-\t    set hold_runtests $runtests\n-\t    set runtests \"go-test.exp\"\n-\t    set dg-do-what-default \"link\"\n-\t    dg-test -keep-output $test \"-O\" \"-w $DEFAULT_GOCFLAGS\"\n-\t    set output_file \"./[file rootname [file tail $test]].exe\"\n-\t    set base \"[file rootname [file tail $test]]\"\n-\t    if [isnative] {\n-\t\tif { [catch \"exec $output_file > $base-out.go\"] != 0 } {\n-\t\t    fail \"$name execution\"\n-\t\t} else {\n-\t\t    pass \"$name execution\"\n-\t\t    file delete $base-out.x\n-\t\t    # Disable optimizations as this test takes a long time\n-\t\t    # to compile.\n-\t\t    set hold $TORTURE_OPTIONS\n-\t\t    set TORTURE_OPTIONS [ list { -O0 -g }]\n-\t\t    go-torture-execute \"./$base-out.go\"\n-\t\t    set TORTURE_OPTIONS $hold\n-\t\t}\n-\t\tfile delete $base-out.go\n-\t    }\n-\t    file delete $output_file\n-\t    set runtests $hold_runtests\n \t} elseif { $test_line == \"// errchk \\$G -e \\$D/\\$F.dir/\\[ab\\].go\" } {\n \t    regsub \"\\\\.go$\" $test \".dir/a.go\" file1\n \t    regsub \"\\\\.go$\" $test \".dir/b.go\" file2\n@@ -1057,7 +902,7 @@ proc go-gc-tests { } {\n \t    go-torture-execute $test\n \t} elseif { $test_line == \"// \\$G -N -o slow.\\$A \\$D/bug369.dir/pkg.go &&\" \\\n \t\t       && $test_line2 == \"// \\$G -o fast.\\$A \\$D/bug369.dir/pkg.go &&\" \\\n-\t\t       && $test_line3 == \"// \\$G \\$D/\\$F.go && \\$L \\$F.\\$A && ./\\$A.out\" } {\n+\t\t       && $test_line3 == \"// run\" } {\n \t    set hold_runtests $runtests\n \t    set runtests \"go-test.exp\"\n \t    set dg-do-what-default \"assemble\"\n@@ -1094,30 +939,19 @@ proc go-gc-tests { } {\n \t    dg-test $test \"-O\" \"-w $DEFAULT_GOCFLAGS\"\n \t    file delete \"[file rootname [file tail $file1]].o\"\n \t    set runtests $hold_runtests\n-\t} elseif { $test_line == \"// \\$G \\$D/\\$F.go && \\$L \\$F.\\$A && ./\\$A.out >tmp.go &&\"\n-\t\t   && $test_line2 == \"// \\$G tmp.go && \\$L tmp.\\$A && ./\\$A.out\" } {\n-\t    set go_execute_args \"\"\n+\t} elseif { [string match \"// \\$G \\$D/\\$F.dir/one.go && \\$G \\$D/\\$F.dir/two.go || echo BUG*\" \\\n+\t\t\t$test_line ] } {\n \t    set hold_runtests $runtests\n \t    set runtests \"go-test.exp\"\n-\t    set dg-do-what-default \"link\"\n-\t    dg-test -keep-output $test \"-O\" \"-w $DEFAULT_GOCFLAGS\"\n-\t    set output_file \"./[file rootname [file tail $test]].exe\"\n-\t    set base \"[file rootname [file tail $test]]\"\n-\t    if [isnative] {\n-\t\tif { [catch \"exec $output_file >$base-out.go\"] != 0 } {\n-\t\t    fail \"$name execution\"\n-\t\t} else {\n-\t\t    pass \"$name execution\"\n-\t\t    file delete $base-out.x\n-\t\t    go-torture-execute \"./$base-out.go\"\n-\t\t}\n-\t\tfile delete $base-out.go\n-\t    }\n-\t    file delete $output_file\n+\t    set dg-do-what-default \"assemble\"\n+\t    regsub \"\\\\.go$\" $test \".dir/one.go\" file1\n+\t    dg-test -keep-output $file1 \"-O\" \"-w $DEFAULT_GOCFLAGS\"\n+\t    set ofile1 \"[file rootname [file tail $file1]].o\"\n+\t    regsub \"\\\\.go$\" $test \".dir/two.go\" file2\n+\t    dg-test $file2 \"-O\" \"-w $DEFAULT_GOCFLAGS\"\n+\t    file delete $ofile1\n \t    set runtests $hold_runtests\n-\t} elseif { $test_line == \"// # generated by cmplxdivide.c\" } {\n-\t    # Ignore.\n-\t} elseif { $test_line == \"// \\$G \\$D/bug302.dir/p.go && gopack grc pp.a p.\\$A && \\$G \\$D/bug302.dir/main.go\" \\\n+\t} elseif { $test_line == \"// \\$G \\$D/bug302.dir/p.go && pack grc pp.a p.\\$A && \\$G \\$D/bug302.dir/main.go\" \\\n \t\t   || $test_line == \"// \\$G \\$D/empty.go && errchk \\$G \\$D/\\$F.go\" } {\n \t    # These tests import the same package under two different\n \t    # names, which gccgo does not support.\n@@ -1127,21 +961,30 @@ proc go-gc-tests { } {\n \t    # as an initializer will be generated for any code which\n \t    # has global variables which need to be registered as GC\n \t    # roots.\n-\t} elseif { $test_line == \"// errchk -0 \\$G -m -l \\$D/\\$F.go\" } {\n+\t} elseif { $test_line == \"// errorcheck -0 -m\"\n+\t\t   || $test_line == \"// errorcheck -0 -m -l\" } { \n \t    # This tests debug output of the gc compiler, which is\n \t    # meaningless for gccgo.\n-\t} elseif { $test_line == \"// \\[ \\$O == 6 \\] || errchk \\$G -e \\$D/\\$F.go\" \\\n-\t\t       || $test_line == \"// \\[ \\$O != 6 \\]  || errchk \\$G -e \\$D/\\$F.go\" } {\n+\t} elseif { $test_line == \"// \\[ \\$A == 6 \\] || errchk \\$G -e \\$D/\\$F.go\" \\\n+\t\t       || $test_line == \"// \\[ \\$A != 6 \\]  || errchk \\$G -e \\$D/\\$F.go\" } {\n \t    # This tests specific handling of the gc compiler on types\n \t    # that are too large.  It is target specific in a way I\n \t    # haven't bothered to check for here.\n+\t} elseif { $test_line == \"// \\$G \\$D/\\$F.go && \\$L -X main.tbd hello \\$F.\\$A && ./\\$A.out\" } {\n+\t    # This tests the gc ld -X option, which gccgo does not\n+\t    # support.\n+\t} elseif { $test_line == \"// \\$G \\$D/pkg.go && pack grc pkg.a pkg.\\$A 2> /dev/null && rm pkg.\\$A && errchk \\$G -I. -u \\$D/main.go\"\n+\t\t   || $test_line == \"// \\$G \\$D/pkg.go && pack grcS pkg.a pkg.\\$A 2> /dev/null && rm pkg.\\$A && \\$G -I. -u \\$D/main.go\" } {\n+\t    # This tests the gc -u option, which gccgo does not\n+\t    # support.\n \t} else {\n \t    clone_output \"$name: unrecognized test line: $test_line\"\n \t    unsupported $name\n \t}\n \n \tset go_compile_args \"\"\n \tset go_execute_args \"\"\n+        set TORTURE_OPTIONS [list { -O2 -g }]\n     }\n \n     set dg-do-what-default ${saved-dg-do-what-default}"}, {"sha": "6745dde41ab7d8560f32e1ee526c1d6efd63f611", "filename": "gcc/testsuite/go.test/test/235.go", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2F235.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2F235.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2F235.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,9 +1,12 @@\n-// $G $F.go && $L $F.$A && ./$A.out\n+// run\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n+// Solve the 2,3,5 problem (print all numbers with 2, 3, or 5 as factor) using channels.\n+// Test the solution, silently.\n+\n package main\n \n type T chan uint64"}, {"sha": "7ad28ad4bc0e13bda3f0082aec42928352b6f38b", "filename": "gcc/testsuite/go.test/test/64bit.go", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2F64bit.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2F64bit.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2F64bit.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,6 +1,4 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out >tmp.go &&\n-// $G tmp.go && $L tmp.$A && ./$A.out || echo BUG: 64bit\n-// rm -f tmp.go\n+// runoutput\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "ec93a2d101ff0ed42efc8248fa4917ff5c0dd30a", "filename": "gcc/testsuite/go.test/test/alias.go", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Falias.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Falias.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Falias.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,13 +1,14 @@\n-// errchk $G -e $D/$F.go\n+// errorcheck\n \n // Copyright 2011 The Go Authors.  All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-package main\n-\n // Test that error messages say what the source file says\n // (uint8 vs byte, int32 vs. rune).\n+// Does not compile.\n+\n+package main\n \n import (\n \t\"fmt\""}, {"sha": "4219af8cd58ac7ecd7f532bbf165660022f693e8", "filename": "gcc/testsuite/go.test/test/alias1.go", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Falias1.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Falias1.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Falias1.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,14 +1,14 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out\n+// run\n \n // Copyright 2011 The Go Authors.  All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-package main\n-\n // Test that dynamic interface checks treat byte=uint8\n // and rune=int or rune=int32.\n \n+package main\n+\n func main() {\n \tvar x interface{}\n "}, {"sha": "3f6251ee507668f6ce9828149417e628066472e3", "filename": "gcc/testsuite/go.test/test/append.go", "status": "modified", "additions": 17, "deletions": 2, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fappend.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fappend.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fappend.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,10 +1,10 @@\n-// $G $F.go && $L $F.$A && ./$A.out\n+// run\n \n // Copyright 2010 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// Semi-exhaustive test for append()\n+// Semi-exhaustive test for the append predeclared function.\n \n package main\n \n@@ -27,6 +27,7 @@ func main() {\n \t}\n \tverifyStruct()\n \tverifyInterface()\n+\tverifyType()\n }\n \n \n@@ -230,3 +231,17 @@ func verifyInterface() {\n \tverify(\"interface l\", append(s), s)\n \tverify(\"interface m\", append(s, e...), r)\n }\n+\n+type T1 []int\n+type T2 []int\n+\n+func verifyType() {\n+\t// The second argument to append has type []E where E is the\n+\t// element type of the first argument.  Test that the compiler\n+\t// accepts two slice types that meet that requirement but are\n+\t// not assignment compatible.  The return type of append is\n+\t// the type of the first argument.\n+\tt1 := T1{1}\n+\tt2 := T2{2}\n+\tverify(\"T1\", append(t1, t2...), T1{1, 2})\n+}"}, {"sha": "9cfddc338b0c4bd84b4014bd09ffa2bc1b3b91a3", "filename": "gcc/testsuite/go.test/test/args.go", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fargs.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fargs.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fargs.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,9 +1,14 @@\n // $G $F.go && $L $F.$A && ./$A.out arg1 arg2\n \n+// NOTE: This test is not run by 'run.go' and so not run by all.bash.\n+// To run this test you must use the ./run shell script.\n+\n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n+// Test os.Args.\n+\n package main\n \n import \"os\""}, {"sha": "da0192f838d84c79199450be392c67eb50dac578", "filename": "gcc/testsuite/go.test/test/assign.go", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fassign.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fassign.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fassign.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,9 +1,12 @@\n-// errchk $G -e $D/$F.go\n+// errorcheck\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n+// Verify simple assignment errors are caught by the compiler.\n+// Does not compile.\n+\n package main\n \n import \"sync\""}, {"sha": "b9e0325ce8c9757a7f0aabdc16b864f32fadd1d2", "filename": "gcc/testsuite/go.test/test/assign1.go", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fassign1.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fassign1.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fassign1.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,9 +1,12 @@\n-// errchk $G -e $D/$F.go\n+// errorcheck\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n+// Verify assignment rules are enforced by the compiler.\n+// Does not compile.\n+\n package main\n \n type ("}, {"sha": "98838453aa6f49a28d27428ba9285d21490c8138", "filename": "gcc/testsuite/go.test/test/bench/garbage/Makefile", "status": "modified", "additions": 6, "deletions": 11, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fgarbage%2FMakefile", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fgarbage%2FMakefile", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fgarbage%2FMakefile?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -2,27 +2,22 @@\n # Use of this source code is governed by a BSD-style\n # license that can be found in the LICENSE file.\n \n-include ../../../src/Make.inc\n-\n ALL=\\\n \tparser\\\n \tpeano\\\n \ttree\\\n \ttree2\\\n \n-all: $(addsuffix .out, $(ALL))\n-\n-%.$O: %.go stats.go\n-\t$(GC) $(GCFLAGS) $(GCIMPORTS) $*.go stats.go\n+all: $(ALL)\n \n-%.out: %.$O\n-\t$(LD) -o $@ $*.$O\n+%: %.go\n+\tgo build $*.go stats.go\n \n-%.bench: %.out\n-\ttime ./$*.out\n+%.bench: %\n+\ttime ./$*\n \n bench: $(addsuffix .bench, $(ALL))\n \n clean:\n-\trm -f *.[$(OS)] $(addsuffix .out, $(ALL))\n+\trm -f $(ALL)\n "}, {"sha": "b91e0248f534058b77912be87ed857e263917824", "filename": "gcc/testsuite/go.test/test/bench/garbage/parser.go", "status": "modified", "additions": 9, "deletions": 11, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fgarbage%2Fparser.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fgarbage%2Fparser.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fgarbage%2Fparser.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -73,7 +73,7 @@ func parseDir(dirpath string) map[string]*ast.Package {\n }\n \n func main() {\n-\tst := &runtime.MemStats\n+\tst := new(runtime.MemStats)\n \tpackages = append(packages, packages...)\n \tpackages = append(packages, packages...)\n \tn := flag.Int(\"n\", 4, \"iterations\")\n@@ -83,14 +83,17 @@ func main() {\n \n \tvar lastParsed []map[string]*ast.Package\n \tvar t0 time.Time\n+\tvar numGC uint32\n+\tvar pauseTotalNs uint64\n \tpkgroot := runtime.GOROOT() + \"/src/pkg/\"\n \tfor pass := 0; pass < 2; pass++ {\n \t\t// Once the heap is grown to full size, reset counters.\n \t\t// This hides the start-up pauses, which are much smaller\n \t\t// than the normal pauses and would otherwise make\n \t\t// the average look much better than it actually is.\n-\t\tst.NumGC = 0\n-\t\tst.PauseTotalNs = 0\n+\t\truntime.ReadMemStats(st)\n+\t\tnumGC = st.NumGC\n+\t\tpauseTotalNs = st.PauseTotalNs\n \t\tt0 = time.Now()\n \n \t\tfor i := 0; i < *n; i++ {\n@@ -107,6 +110,9 @@ func main() {\n \t}\n \tt1 := time.Now()\n \n+\truntime.ReadMemStats(st)\n+\tst.NumGC -= numGC\n+\tst.PauseTotalNs -= pauseTotalNs\n \tfmt.Printf(\"Alloc=%d/%d Heap=%d Mallocs=%d PauseTime=%.3f/%d = %.3f\\n\",\n \t\tst.Alloc, st.TotalAlloc,\n \t\tst.Sys,\n@@ -142,9 +148,7 @@ var packages = []string{\n \t\"container/list\",\n \t\"container/ring\",\n \t\"crypto/aes\",\n-\t\"crypto/blowfish\",\n \t\"crypto/hmac\",\n-\t\"crypto/md4\",\n \t\"crypto/md5\",\n \t\"crypto/rand\",\n \t\"crypto/rc4\",\n@@ -155,7 +159,6 @@ var packages = []string{\n \t\"crypto/subtle\",\n \t\"crypto/tls\",\n \t\"crypto/x509\",\n-\t\"crypto/xtea\",\n \t\"debug/dwarf\",\n \t\"debug/macho\",\n \t\"debug/elf\",\n@@ -164,7 +167,6 @@ var packages = []string{\n \t\"encoding/ascii85\",\n \t\"encoding/base64\",\n \t\"encoding/binary\",\n-\t\"encoding/git85\",\n \t\"encoding/hex\",\n \t\"encoding/pem\",\n \t\"os/exec\",\n@@ -193,8 +195,6 @@ var packages = []string{\n \t\"mime\",\n \t\"net\",\n \t\"os\",\n-\t\"os/signal\",\n-\t\"patch\",\n \t\"path\",\n \t\"math/rand\",\n \t\"reflect\",\n@@ -214,11 +214,9 @@ var packages = []string{\n \t\"testing\",\n \t\"testing/iotest\",\n \t\"testing/quick\",\n-\t\"testing/script\",\n \t\"time\",\n \t\"unicode\",\n \t\"unicode/utf8\",\n \t\"unicode/utf16\",\n-\t\"websocket\",\n \t\"encoding/xml\",\n }"}, {"sha": "6c7e523145a14f47034f72fe202afbe039998d18", "filename": "gcc/testsuite/go.test/test/bench/garbage/peano.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fgarbage%2Fpeano.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fgarbage%2Fpeano.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fgarbage%2Fpeano.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $F.go && $L $F.$A && ./$A.out\n+// run\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "6dc0aeb2331140d96701cdcefeba6886c89f7a84", "filename": "gcc/testsuite/go.test/test/bench/garbage/stats.go", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fgarbage%2Fstats.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fgarbage%2Fstats.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fgarbage%2Fstats.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -12,17 +12,23 @@ import (\n )\n \n func gcstats(name string, n int, t time.Duration) {\n-\tst := &runtime.MemStats\n-\tfmt.Printf(\"garbage.%sMem Alloc=%d/%d Heap=%d NextGC=%d Mallocs=%d\\n\", name, st.Alloc, st.TotalAlloc, st.Sys, st.NextGC, st.Mallocs)\n-\tfmt.Printf(\"garbage.%s %d %d ns/op\\n\", name, n, t.Nanoseconds()/int64(n))\n-\tfmt.Printf(\"garbage.%sLastPause 1 %d ns/op\\n\", name, st.PauseNs[(st.NumGC-1)%uint32(len(st.PauseNs))])\n-\tfmt.Printf(\"garbage.%sPause %d %d ns/op\\n\", name, st.NumGC, int64(st.PauseTotalNs)/int64(st.NumGC))\n+\tst := new(runtime.MemStats)\n+\truntime.ReadMemStats(st)\n+\tnprocs := runtime.GOMAXPROCS(-1)\n+\tcpus := \"\"\n+\tif nprocs != 1 {\n+\t\tcpus = fmt.Sprintf(\"-%d\", nprocs)\n+\t}\n+\tfmt.Printf(\"garbage.%sMem%s Alloc=%d/%d Heap=%d NextGC=%d Mallocs=%d\\n\", name, cpus, st.Alloc, st.TotalAlloc, st.Sys, st.NextGC, st.Mallocs)\n+\tfmt.Printf(\"garbage.%s%s %d %d ns/op\\n\", name, cpus, n, t.Nanoseconds()/int64(n))\n+\tfmt.Printf(\"garbage.%sLastPause%s 1 %d ns/op\\n\", name, cpus, st.PauseNs[(st.NumGC-1)%uint32(len(st.PauseNs))])\n+\tfmt.Printf(\"garbage.%sPause%s %d %d ns/op\\n\", name, cpus, st.NumGC, int64(st.PauseTotalNs)/int64(st.NumGC))\n \tnn := int(st.NumGC)\n \tif nn >= len(st.PauseNs) {\n \t\tnn = len(st.PauseNs)\n \t}\n \tt1, t2, t3, t4, t5 := tukey5(st.PauseNs[0:nn])\n-\tfmt.Printf(\"garbage.%sPause5: %d %d %d %d %d\\n\", name, t1, t2, t3, t4, t5)\n+\tfmt.Printf(\"garbage.%sPause5%s: %d %d %d %d %d\\n\", name, cpus, t1, t2, t3, t4, t5)\n \n \t//\tfmt.Printf(\"garbage.%sScan: %v\\n\", name, st.ScanDist)\n }"}, {"sha": "a171c696bbc5d7484a449416d29acfeba028a884", "filename": "gcc/testsuite/go.test/test/bench/garbage/tree2.go", "status": "modified", "additions": 15, "deletions": 8, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fgarbage%2Ftree2.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fgarbage%2Ftree2.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fgarbage%2Ftree2.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -11,6 +11,7 @@ import (\n \t\"os\"\n \t\"runtime\"\n \t\"runtime/pprof\"\n+\t\"time\"\n \t\"unsafe\"\n )\n \n@@ -30,6 +31,7 @@ var (\n \theap        *Object\n \tcalls       [20]int\n \tnumobjects  int64\n+\tmemstats    runtime.MemStats\n )\n \n func buildHeap() {\n@@ -55,10 +57,10 @@ func buildTree(objsize, size float64, depth int) (*Object, float64) {\n \n func gc() {\n \truntime.GC()\n-\truntime.UpdateMemStats()\n-\tpause := runtime.MemStats.PauseTotalNs\n-\tinuse := runtime.MemStats.Alloc\n-\tfree := runtime.MemStats.TotalAlloc - inuse\n+\truntime.ReadMemStats(&memstats)\n+\tpause := memstats.PauseTotalNs\n+\tinuse := memstats.Alloc\n+\tfree := memstats.TotalAlloc - inuse\n \tfmt.Printf(\"gc pause: %8.3f ms; collect: %8.0f MB; heapsize: %8.0f MB\\n\",\n \t\tfloat64(pause-lastPauseNs)/1e6,\n \t\tfloat64(free-lastFree)/1048576,\n@@ -71,9 +73,9 @@ func main() {\n \tflag.Parse()\n \tbuildHeap()\n \truntime.GOMAXPROCS(*cpus)\n-\truntime.UpdateMemStats()\n-\tlastPauseNs = runtime.MemStats.PauseTotalNs\n-\tlastFree = runtime.MemStats.TotalAlloc - runtime.MemStats.Alloc\n+\truntime.ReadMemStats(&memstats)\n+\tlastPauseNs = memstats.PauseTotalNs\n+\tlastFree = memstats.TotalAlloc - memstats.Alloc\n \tif *cpuprofile != \"\" {\n \t\tf, err := os.Create(*cpuprofile)\n \t\tif err != nil {\n@@ -82,7 +84,12 @@ func main() {\n \t\tpprof.StartCPUProfile(f)\n \t\tdefer pprof.StopCPUProfile()\n \t}\n-\tfor i := 0; i < 10; i++ {\n+\tconst N = 10\n+\tvar t0 time.Time\n+\tfor i := 0; i < N; i++ {\n+\t\tt0 = time.Now()\n \t\tgc()\n \t}\n+\t// Standard gotest benchmark output, collected by build dashboard.\n+\tgcstats(\"BenchmarkTree2\", N, time.Now().Sub(t0))\n }"}, {"sha": "94847438f9c62a1039c899a902fc61f583bf4425", "filename": "gcc/testsuite/go.test/test/bench/go1/Makefile", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e57a5c302be5611b20752d24ed4862be007e206/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fgo1%2FMakefile", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e57a5c302be5611b20752d24ed4862be007e206/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fgo1%2FMakefile", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fgo1%2FMakefile?ref=4e57a5c302be5611b20752d24ed4862be007e206", "patch": "@@ -1,7 +0,0 @@\n-include $(GOROOT)/src/Make.inc\n-\n-TARG=go1\n-GOFILES=\\\n-\tdummy.go\\\n-\n-include $(GOROOT)/src/Make.pkg"}, {"sha": "bedc373a575d34065d9467a3ceb87a18bce581f4", "filename": "gcc/testsuite/go.test/test/bench/go1/_testmain.go", "status": "removed", "additions": 0, "deletions": 40, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e57a5c302be5611b20752d24ed4862be007e206/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fgo1%2F_testmain.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e57a5c302be5611b20752d24ed4862be007e206/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fgo1%2F_testmain.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fgo1%2F_testmain.go?ref=4e57a5c302be5611b20752d24ed4862be007e206", "patch": "@@ -1,40 +0,0 @@\n-package main\n-\n-import target \"go1\"\n-import \"testing\"\n-import \"regexp\"\n-\n-var tests = []testing.InternalTest{\n-}\n-\n-var benchmarks = []testing.InternalBenchmark{\n-\t{\"go1.BenchmarkBinaryTree17\", target.BenchmarkBinaryTree17},\n-\t{\"go1.BenchmarkFannkuch11\", target.BenchmarkFannkuch11},\n-\t{\"go1.BenchmarkGobDecode\", target.BenchmarkGobDecode},\n-\t{\"go1.BenchmarkGobEncode\", target.BenchmarkGobEncode},\n-\t{\"go1.BenchmarkGzip\", target.BenchmarkGzip},\n-\t{\"go1.BenchmarkGunzip\", target.BenchmarkGunzip},\n-\t{\"go1.BenchmarkJSONEncode\", target.BenchmarkJSONEncode},\n-\t{\"go1.BenchmarkJSONDecode\", target.BenchmarkJSONDecode},\n-\t{\"go1.BenchmarkRevcomp25M\", target.BenchmarkRevcomp25M},\n-\t{\"go1.BenchmarkTemplate\", target.BenchmarkTemplate},\n-}\n-var examples = []testing.InternalExample{}\n-\n-var matchPat string\n-var matchRe *regexp.Regexp\n-\n-func matchString(pat, str string) (result bool, err error) {\n-\tif matchRe == nil || matchPat != pat {\n-\t\tmatchPat = pat\n-\t\tmatchRe, err = regexp.Compile(matchPat)\n-\t\tif err != nil {\n-\t\t\treturn\n-\t\t}\n-\t}\n-\treturn matchRe.MatchString(str), nil\n-}\n-\n-func main() {\n-\ttesting.Main(matchString, tests, benchmarks, examples)\n-}"}, {"sha": "4956bc7b79ffdc7655c08917adcbb2d7119a384d", "filename": "gcc/testsuite/go.test/test/bench/go1/dummy.go", "status": "removed", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e57a5c302be5611b20752d24ed4862be007e206/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fgo1%2Fdummy.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e57a5c302be5611b20752d24ed4862be007e206/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fgo1%2Fdummy.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fgo1%2Fdummy.go?ref=4e57a5c302be5611b20752d24ed4862be007e206", "patch": "@@ -1,3 +0,0 @@\n-package go1\n-\n-// Nothing to see here: everything is in the _test files."}, {"sha": "bff056fa90c9602a45024d4a82ae9dec3110325e", "filename": "gcc/testsuite/go.test/test/bench/go1/fasta_test.go", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fgo1%2Ffasta_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fgo1%2Ffasta_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fgo1%2Ffasta_test.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -4,9 +4,24 @@\n \n package go1\n \n+import \"runtime\"\n+\n // Not a benchmark; input for revcomp.\n \n-var fasta25m = fasta(25e6)\n+var fastabytes = makefasta()\n+\n+func makefasta() []byte {\n+\tvar n int = 25e6\n+\tif runtime.GOARCH == \"arm\" {\n+\t\t// TODO(dfc) remove this limitation after precise gc.\n+\t\t// A value of 25e6 consumes 465mb of heap on 32bit \n+\t\t// platforms, which is too much for most ARM systems. \n+\t\t// A value of 25e5 produces a memory layout that \n+\t\t// confuses the gc on 32bit platforms. So 25e4 it is.\n+\t\tn = 25e4\n+\t}\n+\treturn fasta(n)\n+}\n \n func fasta(n int) []byte {\n \tout := make(fastaBuffer, 0, 11*n)"}, {"sha": "b172b805ad284efa25b96e643742798420e1193a", "filename": "gcc/testsuite/go.test/test/bench/go1/gob_test.go", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fgo1%2Fgob_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fgo1%2Fgob_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fgo1%2Fgob_test.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -21,9 +21,7 @@ var (\n \tgobdata  *JSONResponse\n )\n \n-func gobinit() {\n-\t// gobinit is called after json's init,\n-\t// because it uses jsondata.\n+func init() {\n \tgobdata = gobResponse(&jsondata)\n \n \tvar buf bytes.Buffer"}, {"sha": "fe4c480eb8470f9875dc5121dbcc454fdf426d06", "filename": "gcc/testsuite/go.test/test/bench/go1/gzip_test.go", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fgo1%2Fgzip_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fgo1%2Fgzip_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fgo1%2Fgzip_test.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -21,20 +21,14 @@ var (\n \n func init() {\n \tvar buf bytes.Buffer\n-\tc, err := gz.NewWriter(&buf)\n-\tif err != nil {\n-\t\tpanic(err)\n-\t}\n+\tc := gz.NewWriter(&buf)\n \tc.Write(jsongunz)\n \tc.Close()\n \tjsongz = buf.Bytes()\n }\n \n func gzip() {\n-\tc, err := gz.NewWriter(ioutil.Discard)\n-\tif err != nil {\n-\t\tpanic(err)\n-\t}\n+\tc := gz.NewWriter(ioutil.Discard)\n \tif _, err := c.Write(jsongunz); err != nil {\n \t\tpanic(err)\n \t}"}, {"sha": "614e24a810cff229797ad7d45cde290d0b182008", "filename": "gcc/testsuite/go.test/test/bench/go1/json_test.go", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fgo1%2Fjson_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fgo1%2Fjson_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fgo1%2Fjson_test.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -17,11 +17,11 @@ import (\n )\n \n var (\n-\tjsonbytes []byte\n-\tjsondata  JSONResponse\n+\tjsonbytes = makeJsonBytes()\n+\tjsondata  = makeJsonData()\n )\n \n-func init() {\n+func makeJsonBytes() []byte {\n \tvar r io.Reader\n \tr = strings.NewReader(jsonbz2_base64)\n \tr = base64.NewDecoder(base64.StdEncoding, r)\n@@ -30,12 +30,15 @@ func init() {\n \tif err != nil {\n \t\tpanic(err)\n \t}\n-\tjsonbytes = b\n+\treturn b\n+}\n \n-\tif err := json.Unmarshal(jsonbytes, &jsondata); err != nil {\n+func makeJsonData() JSONResponse {\n+\tvar v JSONResponse\n+\tif err := json.Unmarshal(jsonbytes, &v); err != nil {\n \t\tpanic(err)\n \t}\n-\tgobinit()\n+\treturn v\n }\n \n type JSONResponse struct {"}, {"sha": "888c5e4ea82a7e1edfd9328998dd55aefe3be258", "filename": "gcc/testsuite/go.test/test/bench/go1/mandel_test.go", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fgo1%2Fmandel_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fgo1%2Fmandel_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fgo1%2Fmandel_test.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -0,0 +1,41 @@\n+// Copyright 2012 The Go Authors.  All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+// This benchmark, taken from the shootuot, tests floating point performance.\n+\n+package go1\n+\n+import \"testing\"\n+\n+func mandelbrot(n int) int {\n+\tconst Iter = 50\n+\tconst Zero float64 = 0\n+\tconst Limit = 2.0\n+\tok := 0\n+\tfor y := 0; y < n; y++ {\n+\t\tfor x := 0; x < n; x++ {\n+\t\t\tZr, Zi, Tr, Ti := Zero, Zero, Zero, Zero\n+\t\t\tCr := (2*float64(x)/float64(n) - 1.5)\n+\t\t\tCi := (2*float64(y)/float64(n) - 1.0)\n+\n+\t\t\tfor i := 0; i < Iter && (Tr+Ti <= Limit*Limit); i++ {\n+\t\t\t\tZi = 2*Zr*Zi + Ci\n+\t\t\t\tZr = Tr - Ti + Cr\n+\t\t\t\tTr = Zr * Zr\n+\t\t\t\tTi = Zi * Zi\n+\t\t\t}\n+\n+\t\t\tif Tr+Ti <= Limit*Limit {\n+\t\t\t\tok++\n+\t\t\t}\n+\t\t}\n+\t}\n+\treturn ok\n+}\n+\n+func BenchmarkMandelbrot200(b *testing.B) {\n+\tfor i := 0; i < b.N; i++ {\n+\t\tmandelbrot(200)\n+\t}\n+}"}, {"sha": "26580b887255f307e0ba3a9427ba330a4a712850", "filename": "gcc/testsuite/go.test/test/bench/go1/parser_test.go", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fgo1%2Fparser_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fgo1%2Fparser_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fgo1%2Fparser_test.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -0,0 +1,43 @@\n+// Copyright 2012 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+package go1\n+\n+// go parser benchmark based on go/parser/performance_test.go\n+\n+import (\n+\t\"compress/bzip2\"\n+\t\"encoding/base64\"\n+\t\"go/parser\"\n+\t\"go/token\"\n+\t\"io\"\n+\t\"io/ioutil\"\n+\t\"strings\"\n+\t\"testing\"\n+)\n+\n+var (\n+\tparserbytes = makeParserBytes()\n+)\n+\n+func makeParserBytes() []byte {\n+\tvar r io.Reader\n+\tr = strings.NewReader(parserbz2_base64)\n+\tr = base64.NewDecoder(base64.StdEncoding, r)\n+\tr = bzip2.NewReader(r)\n+\tb, err := ioutil.ReadAll(r)\n+\tif err != nil {\n+\t\tpanic(err)\n+\t}\n+\treturn b\n+}\n+\n+func BenchmarkParse(b *testing.B) {\n+\tb.SetBytes(int64(len(parserbytes)))\n+\tfor i := 0; i < b.N; i++ {\n+\t\tif _, err := parser.ParseFile(token.NewFileSet(), \"\", parserbytes, parser.ParseComments); err != nil {\n+\t\t\tb.Fatalf(\"benchmark failed due to parse error: %s\", err)\n+\t\t}\n+\t}\n+}"}, {"sha": "113e5e3e38e7300efe7d26231de29a1990d2600c", "filename": "gcc/testsuite/go.test/test/bench/go1/parserdata_test.go", "status": "added", "additions": 245, "deletions": 0, "changes": 245, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fgo1%2Fparserdata_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fgo1%2Fparserdata_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fgo1%2Fparserdata_test.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -0,0 +1,245 @@\n+// Copyright 2012 The Go Authors.  All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+// Input for parser benchmark.\n+// This was generated by starting with a the contents of\n+// src/pkg/go/parser/parser.go at rev 9b455eb64690, then \n+// compressing with bzip2 -9, then encoding to base64.\n+// We compile the data into the binary so that the benchmark is\n+// a stand-alone binary that can be copied easily from machine to\n+// machine. parser_test.go decodes this during init.\n+\n+package go1\n+\n+var parserbz2_base64 = \"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\" +\n+\t\"v9hdyRThQkN3QmOE\""}, {"sha": "6b6c1e5772b99759469af7b006aa1f41d15de7e2", "filename": "gcc/testsuite/go.test/test/bench/go1/revcomp_test.go", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fgo1%2Frevcomp_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fgo1%2Frevcomp_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fgo1%2Frevcomp_test.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -77,9 +77,9 @@ func revcomp(data []byte) {\n \t}\n }\n \n-func BenchmarkRevcomp25M(b *testing.B) {\n-\tb.SetBytes(int64(len(fasta25m)))\n+func BenchmarkRevcomp(b *testing.B) {\n+\tb.SetBytes(int64(len(fastabytes)))\n \tfor i := 0; i < b.N; i++ {\n-\t\trevcomp(fasta25m)\n+\t\trevcomp(fastabytes)\n \t}\n }"}, {"sha": "e1c9b7b80ec3907e3b50e07db5e8aed0e49e2aed", "filename": "gcc/testsuite/go.test/test/bench/shootout/Makefile", "status": "removed", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e57a5c302be5611b20752d24ed4862be007e206/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2FMakefile", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e57a5c302be5611b20752d24ed4862be007e206/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2FMakefile", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2FMakefile?ref=4e57a5c302be5611b20752d24ed4862be007e206", "patch": "@@ -1,14 +0,0 @@\n-# Copyright 2011 The Go Authors. All rights reserved.\n-# Use of this source code is governed by a BSD-style\n-# license that can be found in the LICENSE file.\n-\n-include ../../../src/Make.inc\n-\n-all:\n-\t@echo \"make clean or timing\"\n-\n-timing:\n-\t./timing.sh\n-\n-clean:\n-\trm -f [568].out *.[568]"}, {"sha": "9c35ac52a96026c8cf96cb5f229825016448e2a7", "filename": "gcc/testsuite/go.test/test/bench/shootout/binary-tree.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fbinary-tree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fbinary-tree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fbinary-tree.c?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -36,7 +36,6 @@ POSSIBILITY OF SUCH DAMAGE.\n        icc -O3 -ip -unroll -static binary-trees.c -lm\n */\n \n-#include <malloc.h>\n #include <math.h>\n #include <stdio.h>\n #include <stdlib.h>"}, {"sha": "9c30620209e24e54059a9e0207c5bdf2f7f9829d", "filename": "gcc/testsuite/go.test/test/bench/shootout/k-nucleotide.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fk-nucleotide.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fk-nucleotide.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fk-nucleotide.c?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -221,7 +221,7 @@ main ()\n \n    free(s);\n \n-   g_ptr_array_foreach(roots, free, NULL);\n+   g_ptr_array_foreach(roots, (GFunc)free, NULL);\n    g_ptr_array_free(roots, TRUE);\n \n    return 0;"}, {"sha": "df60343c240d453c41eab40dba0302863645adfe", "filename": "gcc/testsuite/go.test/test/bench/shootout/mandelbrot.go", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fmandelbrot.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fmandelbrot.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fmandelbrot.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -50,21 +50,21 @@ func main() {\n \tout := bufio.NewWriter(os.Stdout)\n \tdefer out.Flush()\n \n-\tw := *n\n-\th := *n\n+\tw := float64(*n)\n+\th := float64(*n)\n \tbit_num := 0\n \tbyte_acc := byte(0)\n \tconst Iter = 50\n \tconst Zero float64 = 0\n \tconst Limit = 2.0\n \n-\tfmt.Fprintf(out, \"P4\\n%d %d\\n\", w, h)\n+\tfmt.Fprintf(out, \"P4\\n%d %d\\n\", *n, *n)\n \n-\tfor y := 0; y < h; y++ {\n-\t\tfor x := 0; x < w; x++ {\n+\tfor y := 0.0; y < h; y++ {\n+\t\tfor x := 0.0; x < w; x++ {\n \t\t\tZr, Zi, Tr, Ti := Zero, Zero, Zero, Zero\n-\t\t\tCr := (2*float64(x)/float64(w) - 1.5)\n-\t\t\tCi := (2*float64(y)/float64(h) - 1.0)\n+\t\t\tCr := (2*x/w - 1.5)\n+\t\t\tCi := (2*y/h - 1.0)\n \n \t\t\tfor i := 0; i < Iter && (Tr+Ti <= Limit*Limit); i++ {\n \t\t\t\tZi = 2*Zr*Zi + Ci\n@@ -85,7 +85,7 @@ func main() {\n \t\t\t\tbyte_acc = 0\n \t\t\t\tbit_num = 0\n \t\t\t} else if x == w-1 {\n-\t\t\t\tbyte_acc <<= uint(8 - w%8)\n+\t\t\t\tbyte_acc <<= uint(8 - uint(*n)%8)\n \t\t\t\tout.WriteByte(byte_acc)\n \t\t\t\tbyte_acc = 0\n \t\t\t\tbit_num = 0"}, {"sha": "a518134ba65e6e8459a4c59607514d99a2e22a7e", "filename": "gcc/testsuite/go.test/test/bench/shootout/threadring.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fthreadring.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fthreadring.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Fthreadring.c?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -34,6 +34,7 @@ POSSIBILITY OF SUCH DAMAGE.\n * contributed by Premysl Hruby\n */\n \n+#include <stdint.h>\n #include <stdio.h>\n #include <stdlib.h>\n #include <pthread.h>\n@@ -57,7 +58,7 @@ static struct stack stacks[THREADS];\n \n static void* thread(void *num)\n {\n-   int l = (int)num;\n+   int l = (int)(uintptr_t)num;\n    int r = (l+1) % THREADS;\n    int token;\n \n@@ -94,7 +95,7 @@ int main(int argc, char **argv)\n       pthread_mutex_lock(mutex + i);\n \n       pthread_attr_setstack(&stack_attr, &stacks[i], sizeof(struct stack));\n-      pthread_create(&cthread, &stack_attr, thread, (void*)i);\n+      pthread_create(&cthread, &stack_attr, thread, (void*)(uintptr_t)i);\n    }\n \n    pthread_mutex_unlock(mutex + 0);"}, {"sha": "ee1f889b4a5f152cc5ad30b197fbbda80c6c505b", "filename": "gcc/testsuite/go.test/test/bench/shootout/timing.log", "status": "modified", "additions": 261, "deletions": 0, "changes": 261, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Ftiming.log", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Ftiming.log", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Ftiming.log?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -900,3 +900,264 @@ threadring 50000000\n \n chameneos 6000000\n \tgc chameneosredux\t7.41u 0.00s 7.42r # -3%\n+\n+# A complete run at the Go 1 release.\n+# Significant changes:\n+# - gccgo is now enabled for all tests (goroutines are cheap enough)\n+# - threadring and chameneos are 14% faster, probably due to runtime changes\n+# - regex-dna 36% faster\n+# - fannkuch-parallel (only) slowed down 40%\n+# - gccgo on binary-tree-freelist is still optimized to nothing\n+# Other changes are modest.\n+\n+fasta -n 25000000\n+\tgcc -O2 fasta.c\t1.45u 0.02s 1.48r\n+\tgccgo -O2 fasta.go\t1.46u 0.00s 1.47r\n+\tgc fasta\t1.99u 0.01s 2.00r\n+\tgc_B fasta\t1.99u 0.01s 2.01r\n+\n+reverse-complement < output-of-fasta-25000000\n+\tgcc -O2 reverse-complement.c\t0.95u 0.48s 4.99r\n+\tgccgo -O2 reverse-complement.go\t0.93u 0.16s 1.09r\n+\tgc reverse-complement\t1.20u 0.19s 1.39r\n+\tgc_B reverse-complement\t1.04u 0.16s 1.20r\n+\n+nbody -n 50000000\n+\tgcc -O2 -lm nbody.c\t13.02u 0.00s 13.05r\n+\tgccgo -O2 nbody.go\t14.46u 0.00s 14.49r\n+\tgc nbody\t21.79u 0.00s 21.84r\n+\tgc_B nbody\t21.74u 0.00s 21.79r\n+\n+binary-tree 15 # too slow to use 20\n+\tgcc -O2 binary-tree.c -lm\t0.60u 0.01s 0.61r\n+\tgccgo -O2 binary-tree.go\t1.30u 0.01s 1.32r\n+\tgccgo -O2 binary-tree-freelist.go\t0.00u 0.00s 0.00r\n+\tgc binary-tree\t1.84u 0.01s 1.86r\n+\tgc binary-tree-freelist\t0.33u 0.00s 0.33r\n+\n+fannkuch 12\n+\tgcc -O2 fannkuch.c\t45.24u 0.00s 45.34r\n+\tgccgo -O2 fannkuch.go\t59.76u 0.01s 59.90r\n+\tgccgo -O2 fannkuch-parallel.go\t218.20u 0.01s 61.60r\n+\tgc fannkuch\t103.92u 0.00s 104.16r\n+\tgc fannkuch-parallel\t221.61u 0.00s 60.49r\n+\tgc_B fannkuch\t53.17u 0.00s 53.30r\n+\n+regex-dna 100000\n+\tgcc -O2 regex-dna.c -lpcre\t0.47u 0.00s 0.48r\n+\tgccgo -O2 regex-dna.go\t6.52u 0.00s 6.54r\n+\tgccgo -O2 regex-dna-parallel.go\t14.40u 0.73s 4.35r\n+\tgc regex-dna\t2.63u 0.02s 2.66r # -36%\n+\tgc regex-dna-parallel\t2.87u 0.01s 1.11r\n+\tgc_B regex-dna\t2.65u 0.00s 2.66r\n+\n+spectral-norm 5500\n+\tgcc -O2 spectral-norm.c -lm\t15.78u 0.00s 15.82r\n+\tgccgo -O2 spectral-norm.go\t15.79u 0.00s 15.83r\n+\tgc spectral-norm\t19.76u 0.00s 19.80r\n+\tgc_B spectral-norm\t19.73u 0.01s 19.78r\n+\n+k-nucleotide 1000000\n+\tgcc -O2  k-nucleotide.c\t5.59u 0.03s 5.63r\n+\tgccgo -O2 k-nucleotide.go\t4.09u 0.03s 4.13r\n+\tgccgo -O2 k-nucleotide-parallel.go\t4.50u 0.06s 1.63r\n+\tgc k-nucleotide\t9.23u 0.02s 9.27r\n+\tgc k-nucleotide-parallel\t9.87u 0.03s 3.55r\n+\tgc_B k-nucleotide\t9.20u 0.00s 9.22r\n+\n+mandelbrot 16000\n+\tgcc -O2 mandelbrot.c\t36.09u 0.00s 36.18r\n+\tgccgo -O2 mandelbrot.go\t41.69u 0.01s 41.80r\n+\tgc mandelbrot\t60.91u 0.02s 61.07r\n+\tgc_B mandelbrot\t60.90u 0.00s 61.04r\n+\n+meteor 2098\n+\tgcc -O2 meteor-contest.c\t0.09u 0.00s 0.09r\n+\tgccgo -O2 meteor-contest.go\t0.09u 0.00s 0.09r\n+\tgc meteor-contest\t0.14u 0.00s 0.15r\n+\tgc_B meteor-contest\t0.14u 0.00s 0.14r\n+\n+pidigits 10000\n+\tgcc -O2 pidigits.c -lgmp\t2.27u 0.00s 2.27r\n+\tgccgo -O2 pidigits.go\t8.65u 0.00s 8.67r\n+\tgc pidigits\t3.70u 0.04s 3.75r\n+\tgc_B pidigits\t3.72u 0.02s 3.75r\n+\n+threadring 50000000\n+\tgcc -O2 threadring.c\t40.91u 369.85s 323.31r\n+\tgccgo -O2 threadring.go\t26.97u 30.82s 57.93r\n+\tgc threadring\t12.81u 0.01s 12.85r # -13%\n+\n+chameneos 6000000\n+\tgcc -O2 chameneosredux.c -lpthread\t9.44u 72.90s 12.65r\n+\tgccgo -O2 chameneosredux.go\t7.73u 7.53s 15.30r\n+\tgc chameneosredux\t6.51u 0.00s 6.53r # - 14%\n+\n+# After http://codereview.appspot.com/6248049, moving panicindex\n+# calls out of line (putting the likely code into a single path and shortening\n+# loops). Significant changes since the last run (note: some are slower for\n+# unrelated and as yet undiagnosed reasons):\n+\n+nbody -n 50000000\n+\tgc nbody\t19.10u 0.01s 19.19r # -12%\n+\tgc_B nbody\t19.19u 0.00s 19.23r # -12%\n+\n+binary-tree 15 # too slow to use 20\n+\tgc binary-tree\t1.49u 0.01s 1.51r # -19%\n+\t\n+fannkuch 12\n+\tgc fannkuch\t60.79u 0.00s 60.92r # -41%\n+\tgc fannkuch-parallel\t183.51u 0.01s 51.75r # -14%\n+\tgc_B fannkuch\t51.68u 0.00s 51.79r # -3%\n+\n+k-nucleotide 1000000\n+\tgc k-nucleotide\t9.74u 0.04s 9.80r # +6%\n+\tgc k-nucleotide-parallel\t9.89u 0.05s 3.59r # +1%\n+\tgc_B k-nucleotide\t9.39u 0.02s 9.43r # +2%\n+\n+mandelbrot (much slower, due to unrelated http://codereview.appspot.com/6209077)\n+\tgc mandelbrot\t100.98u 0.00s 101.20r # +65%\n+\tgc_B mandelbrot\t100.90u 0.01s 101.17r # +65%\n+\n+meteor 2098\n+\tgc meteor-contest\t0.13u 0.00s 0.13r # -13%\n+\tgc_B meteor-contest\t0.13u 0.00s 0.13r # -7%\n+\n+# May 30, 2012.\n+# After http://codereview.appspot.com/6261051, restoring old code generated\n+# for floating-point constants. Mandelbrot is back to its previous numbers.\n+\n+mandelbrot 16000\n+\tgcc -O2 mandelbrot.c\t36.07u 0.00s 36.16r\n+\tgccgo -O2 mandelbrot.go\t41.72u 0.01s 41.90r\n+\tgc mandelbrot\t60.62u 0.00s 60.76r\n+\tgc_B mandelbrot\t60.68u 0.00s 60.82r\n+\n+# May 30, 2012.\n+# After http://codereview.appspot.com/6248068, better FP code\n+# by avoiding MOVSD between registers.\n+# Plus some other timing changes that have crept in from other speedups,\n+# from garbage collection to Printf.\n+\n+fasta -n 25000000\n+\tgc fasta\t1.76u 0.00s 1.76r # -12%\n+\tgc_B fasta\t1.71u 0.00s 1.72r # -12%\n+\n+nbody -n 50000000\n+\tgc nbody\t17.56u 0.00s 17.60r # -8%\n+\tgc_B nbody\t17.30u 0.00s 17.34r # -10%\n+\n+fannkuch 12\n+\tgc fannkuch-parallel\t155.92u 0.01s 44.05r # -15%\n+\n+k-nucleotide 1000000\n+\tgc k-nucleotide\t9.22u 0.01s 9.26r # -5%\n+\tgc k-nucleotide-parallel\t9.23u 0.03s 3.26r # -9%\n+\tgc_B k-nucleotide\t9.22u 0.03s 9.28r # -2%\n+\n+mandelbrot 16000\n+\tgc mandelbrot\t44.80u 0.00s 44.90r # -27%\n+\tgc_B mandelbrot\t44.81u 0.00s 44.92r # -26%\n+\n+pidigits 10000\n+\tgc pidigits\t3.51u 0.00s 3.52r # -6%\n+\tgc_B pidigits\t3.51u 0.00s 3.52r # -6%\n+\n+# Aug 28, 2012\n+# After some assembler work in package big.\n+pidigits 10000\n+\tgc pidigits\t2.85u 0.02s 2.88r # -22%\n+\tgc_B pidigits\t2.88u 0.01s 2.90r # -21%\n+\n+# Sep 26, 2012\n+# 64-bit ints, plus significantly better floating-point code.\n+# Interesting details:\n+# \tGenerally something in the 0-10% slower range, some (binary tree) more\n+#\tFloating-point noticeably faster:\n+#\t\tnbody -25%\n+#\t\tmandelbrot -37% relative to Go 1.\n+#\tOther:\n+#\t\tregex-dna +47%\n+fasta -n 25000000\n+\tgcc -O2 fasta.c\t1.43u 0.03s 1.46r\n+\tgccgo -O2 fasta.go\t1.47u 0.00s 1.47r\n+\tgc fasta\t1.78u 0.01s 1.80r\n+\tgc_B fasta\t1.76u 0.00s 1.76r\n+\n+reverse-complement < output-of-fasta-25000000\n+\tgcc -O2 reverse-complement.c\t1.14u 0.39s 11.19r\n+\tgccgo -O2 reverse-complement.go\t0.91u 0.17s 1.09r\n+\tgc reverse-complement\t1.12u 0.18s 1.31r\n+\tgc_B reverse-complement\t1.12u 0.15s 1.28r\n+\n+nbody -n 50000000\n+\tgcc -O2 nbody.c -lm\t13.02u 0.00s 13.05r\n+\tgccgo -O2 nbody.go\t13.90u 0.00s 13.93r\n+\tgc nbody\t17.05u 0.00s 17.09r\n+\tgc_B nbody\t16.30u 0.00s 16.34r\n+\n+binary-tree 15 # too slow to use 20\n+\tgcc -O2 binary-tree.c -lm\t0.61u 0.00s 0.61r\n+\tgccgo -O2 binary-tree.go\t1.24u 0.04s 1.29r\n+\tgccgo -O2 binary-tree-freelist.go\t0.21u 0.01s 0.22r\n+\tgc binary-tree\t1.93u 0.02s 1.96r\n+\tgc binary-tree-freelist\t0.32u 0.00s 0.33r\n+\n+fannkuch 12\n+\tgcc -O2 fannkuch.c\t45.19u 0.00s 45.29r\n+\tgccgo -O2 fannkuch.go\t60.32u 0.00s 60.45r\n+\tgccgo -O2 fannkuch-parallel.go\t185.59u 0.00s 59.49r\n+\tgc fannkuch\t72.14u 0.00s 72.30r\n+\tgc fannkuch-parallel\t172.54u 0.00s 43.59r\n+\tgc_B fannkuch\t53.55u 0.00s 53.67r\n+\n+regex-dna 100000\n+\tgcc -O2 regex-dna.c -lpcre\t0.47u 0.00s 0.47r\n+\tgccgo -O2 regex-dna.go\t6.49u 0.05s 6.56r\n+\tgccgo -O2 regex-dna-parallel.go\t14.60u 0.67s 4.42r\n+\tgc regex-dna\t3.91u 0.00s 3.92r\n+\tgc regex-dna-parallel\t4.01u 0.03s 1.56r\n+\tgc_B regex-dna\t3.91u 0.00s 3.92r\n+\n+spectral-norm 5500\n+\tgcc -O2 spectral-norm.c -lm\t15.85u 0.00s 15.89r\n+\tgccgo -O2 spectral-norm.go\t15.86u 0.00s 15.89r\n+\tgc spectral-norm\t19.72u 0.00s 19.76r\n+\tgc_B spectral-norm\t19.68u 0.01s 19.74r\n+\n+k-nucleotide 1000000\n+\tgcc -O2 k-nucleotide.c -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -lglib-2.0 \t4.90u 0.01s 4.93r\n+\tgccgo -O2 k-nucleotide.go\t4.78u 0.01s 4.80r\n+\tgccgo -O2 k-nucleotide-parallel.go\t6.49u 0.02s 2.18r\n+\tgc k-nucleotide\t9.05u 0.02s 9.09r\n+\tgc k-nucleotide-parallel\t9.27u 0.01s 3.29r\n+\tgc_B k-nucleotide\t8.95u 0.03s 9.00r\n+\n+mandelbrot 16000\n+\tgcc -O2 mandelbrot.c\t36.11u 0.00s 36.19r\n+\tgccgo -O2 mandelbrot.go\t43.67u 0.00s 43.77r\n+\tgc mandelbrot\t38.57u 0.00s 38.66r\n+\tgc_B mandelbrot\t38.59u 0.00s 38.68r\n+\n+meteor 2098\n+\tgcc -O2 meteor-contest.c\t0.09u 0.00s 0.09r\n+\tgccgo -O2 meteor-contest.go\t0.09u 0.00s 0.09r\n+\tgc meteor-contest\t0.13u 0.00s 0.14r\n+\tgc_B meteor-contest\t0.12u 0.00s 0.13r\n+\n+pidigits 10000\n+\tgcc -O2 pidigits.c -lgmp\t2.26u 0.00s 2.27r\n+\tgccgo -O2 pidigits.go\t9.05u 0.00s 9.07r\n+\tgc pidigits\t2.88u 0.02s 2.90r\n+\tgc_B pidigits\t2.89u 0.00s 2.90r\n+\n+threadring 50000000\n+\tgcc -O2 threadring.c -lpthread\t37.30u 327.81s 289.28r\n+\tgccgo -O2 threadring.go\t42.83u 26.15s 69.14r\n+\tgc threadring\t13.00u 0.00s 13.03r\n+\n+chameneos 6000000\n+\tgcc -O2 chameneosredux.c -lpthread\t8.80u 71.67s 12.19r\n+\tgccgo -O2 chameneosredux.go\t11.28u 6.68s 18.00r\n+\tgc chameneosredux\t6.94u 0.00s 6.96r\n+"}, {"sha": "d269b875680973d18990512964603762d1310c03", "filename": "gcc/testsuite/go.test/test/bench/shootout/timing.sh", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Ftiming.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Ftiming.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbench%2Fshootout%2Ftiming.sh?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -5,7 +5,11 @@\n \n set -e\n \n-eval $(gomake --no-print-directory -f ../../../src/Make.inc go-env)\n+eval $(go tool dist env)\n+O=$GOCHAR\n+GC=\"go tool ${O}g\"\n+LD=\"go tool ${O}l\"\n+\n PATH=.:$PATH\n \n havegccgo=false\n@@ -93,7 +97,7 @@ revcomp() {\n \n nbody() {\n \trunonly echo 'nbody -n 50000000'\n-\trun 'gcc -O2 -lm nbody.c' a.out 50000000\n+\trun 'gcc -O2 nbody.c -lm' a.out 50000000\n \trun 'gccgo -O2 nbody.go' a.out -n 50000000\n \trun 'gc nbody' $O.out -n 50000000\n \trun 'gc_B nbody' $O.out -n 50000000\n@@ -103,7 +107,7 @@ binarytree() {\n \trunonly echo 'binary-tree 15 # too slow to use 20'\n \trun 'gcc -O2 binary-tree.c -lm' a.out 15\n \trun 'gccgo -O2 binary-tree.go' a.out -n 15\n-\trun 'gccgo -O2 binary-tree-freelist.go' $O.out -n 15\n+\trun 'gccgo -O2 binary-tree-freelist.go' a.out -n 15\n \trun 'gc binary-tree' $O.out -n 15\n \trun 'gc binary-tree-freelist' $O.out -n 15\n }\n@@ -143,7 +147,9 @@ knucleotide() {\n \trunonly gcc -O2 fasta.c\n \trunonly a.out 1000000 > x  # should be using 25000000\n \trunonly echo 'k-nucleotide 1000000'\n-\trun 'gcc -O2 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include k-nucleotide.c -lglib-2.0' a.out <x\n+\tif [ $mode = run ]; then\n+\t\trun \"gcc -O2 k-nucleotide.c $(pkg-config glib-2.0 --cflags --libs)\" a.out <x\n+\tfi\n \trun 'gccgo -O2 k-nucleotide.go' a.out <x\n \trun 'gccgo -O2 k-nucleotide-parallel.go' a.out <x\n \trun 'gc k-nucleotide' $O.out <x"}, {"sha": "55a15c30abed450ccd38c32f998e239060988bb4", "filename": "gcc/testsuite/go.test/test/bigalg.go", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbigalg.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbigalg.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbigalg.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,9 +1,11 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out\n+// run\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n+// Test the internal \"algorithms\" for objects larger than a word: hashing, equality etc.\n+\n package main\n \n type T struct {"}, {"sha": "c5e4f91e11951964d5889363edcf002e7a3cdc46", "filename": "gcc/testsuite/go.test/test/bigmap.go", "status": "modified", "additions": 106, "deletions": 1, "changes": 107, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbigmap.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbigmap.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbigmap.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,9 +1,13 @@\n-// $G $F.go && $L $F.$A && ./$A.out\n+// run\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n+// Internally a map holds elements in up to 255 bytes of key+value.\n+// When key or value or both are too large, it uses pointers to key+value\n+// instead.  Test all the combinations.\n+\n package main\n \n func seq(x, y int) [1000]byte {\n@@ -31,4 +35,105 @@ func main() {\n \tcmp(m[1], seq(11, 13))\n \tcmp(m[2], seq(2, 9))\n \tcmp(m[3], seq(3, 17))\n+\t\n+\n+\t{\n+\t\ttype T [1]byte\n+\t\ttype V [1]byte\n+\t\tm := make(map[T]V)\n+\t\tm[T{}] = V{1}\n+\t\tm[T{1}] = V{2}\n+\t\tif x, y := m[T{}][0], m[T{1}][0]; x != 1 || y != 2 {\n+\t\t\tprintln(x, y)\n+\t\t\tpanic(\"bad map\")\n+\t\t}\n+  \t}\n+\t{\n+\t\ttype T [100]byte\n+\t\ttype V [1]byte\n+\t\tm := make(map[T]V)\n+\t\tm[T{}] = V{1}\n+\t\tm[T{1}] = V{2}\n+\t\tif x, y := m[T{}][0], m[T{1}][0]; x != 1 || y != 2 {\n+\t\t\tprintln(x, y)\n+\t\t\tpanic(\"bad map\")\n+\t\t}\n+\t}\n+\t{\n+\t\ttype T [1]byte\n+\t\ttype V [100]byte\n+\t\tm := make(map[T]V)\n+\t\tm[T{}] = V{1}\n+\t\tm[T{1}] = V{2}\n+\t\tif x, y := m[T{}][0], m[T{1}][0]; x != 1 || y != 2 {\n+\t\t\tprintln(x, y)\n+\t\t\tpanic(\"bad map\")\n+\t\t}\n+\t}\n+\t{\n+\t\ttype T [1000]byte\n+\t\ttype V [1]byte\n+\t\tm := make(map[T]V)\n+\t\tm[T{}] = V{1}\n+\t\tm[T{1}] = V{2}\n+\t\tif x, y := m[T{}][0], m[T{1}][0]; x != 1 || y != 2 {\n+\t\t\tprintln(x, y)\n+\t\t\tpanic(\"bad map\")\n+\t\t}\n+\t}\n+\t{\n+\t\ttype T [1]byte\n+\t\ttype V [1000]byte\n+\t\tm := make(map[T]V)\n+\t\tm[T{}] = V{1}\n+\t\tm[T{1}] = V{2}\n+\t\tif x, y := m[T{}][0], m[T{1}][0]; x != 1 || y != 2 {\n+\t\t\tprintln(x, y)\n+\t\t\tpanic(\"bad map\")\n+\t\t}\n+\t}\n+\t{\n+\t\ttype T [1000]byte\n+\t\ttype V [1000]byte\n+\t\tm := make(map[T]V)\n+\t\tm[T{}] = V{1}\n+\t\tm[T{1}] = V{2}\n+\t\tif x, y := m[T{}][0], m[T{1}][0]; x != 1 || y != 2 {\n+\t\t\tprintln(x, y)\n+\t\t\tpanic(\"bad map\")\n+\t\t}\n+\t}\n+\t{\n+\t\ttype T [200]byte\n+\t\ttype V [1]byte\n+\t\tm := make(map[T]V)\n+\t\tm[T{}] = V{1}\n+\t\tm[T{1}] = V{2}\n+\t\tif x, y := m[T{}][0], m[T{1}][0]; x != 1 || y != 2 {\n+\t\t\tprintln(x, y)\n+\t\t\tpanic(\"bad map\")\n+\t\t}\n+\t}\n+\t{\n+\t\ttype T [1]byte\n+\t\ttype V [200]byte\n+\t\tm := make(map[T]V)\n+\t\tm[T{}] = V{1}\n+\t\tm[T{1}] = V{2}\n+\t\tif x, y := m[T{}][0], m[T{1}][0]; x != 1 || y != 2 {\n+\t\t\tprintln(x, y)\n+\t\t\tpanic(\"bad map\")\n+\t\t}\n+\t}\n+\t{\n+\t\ttype T [200]byte\n+\t\ttype V [200]byte\n+\t\tm := make(map[T]V)\n+\t\tm[T{}] = V{1}\n+\t\tm[T{1}] = V{2}\n+\t\tif x, y := m[T{}][0], m[T{1}][0]; x != 1 || y != 2 {\n+\t\t\tprintln(x, y)\n+\t\t\tpanic(\"bad map\")\n+  \t\t}\n+  \t}\n }"}, {"sha": "ee618b148585675d8c52ae1652c2af63f73d767c", "filename": "gcc/testsuite/go.test/test/blank.go", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fblank.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fblank.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fblank.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,9 +1,11 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out\n+// run\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n+// Test behavior of the blank identifier (_).\n+\n package main\n \n import _ \"fmt\"\n@@ -111,7 +113,7 @@ type I interface {\n \n type TI struct{}\n \n-func (TI) M(x int, y int) {\n+func (_ TI) M(x int, y int) {\n \tif x != y {\n \t\tprintln(\"invalid M call:\", x, y)\n \t\tpanic(\"bad M\")"}, {"sha": "c6e038a0d923c7553eda6a89c19077d79e744274", "filename": "gcc/testsuite/go.test/test/blank1.go", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fblank1.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fblank1.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fblank1.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,9 +1,12 @@\n-// errchk $G -e $D/$F.go\n+// errorcheck\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n+// Test that incorrect uses of the blank identifer are caught.\n+// Does not compile.\n+\n package _\t// ERROR \"invalid package name _\"\n \n func main() {"}, {"sha": "37f73bc5d2afa7567c00e3e670a353828ae168c1", "filename": "gcc/testsuite/go.test/test/bom.go", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbom.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbom.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbom.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -0,0 +1,26 @@\n+// runoutput\n+\n+// Copyright 2011 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+// Test source file beginning with a byte order mark.\n+\n+package main\n+\n+import (\n+\t\"fmt\"\n+\t\"strings\"\n+)\n+\n+func main() {\n+\tprog = strings.Replace(prog, \"BOM\", \"\\uFEFF\", -1)\n+\tfmt.Print(prog)\n+}\n+\n+var prog = `BOM\n+package main\n+\n+func main() {\n+}\n+`"}, {"sha": "b894d9ba9f211d0b5058597a3316b6ef23773174", "filename": "gcc/testsuite/go.test/test/bombad.go", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbombad.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbombad.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbombad.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -0,0 +1,18 @@\n+// errorcheck\n+\n+// Copyright 2012 The Go Authors.  All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+// Here for reference, but hard to test automatically\n+// because the BOM muddles the\n+// processing done by ../run.\n+\n+package main\n+\n+func main() {\n+\t\ufeff// There's a bom here.\t// ERROR \"BOM\"\n+\t//\ufeff And here.\t// ERROR \"BOM\"\n+\t/*\ufeff And here.*/\t// ERROR \"BOM\"\n+\tprintln(\"hi\ufeff there\") // and here\t// ERROR \"BOM\"\n+}"}, {"sha": "50f7ad74196c5376e2cc46d647eaf863164866ce", "filename": "gcc/testsuite/go.test/test/bounds.go", "status": "added", "additions": 270, "deletions": 0, "changes": 270, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbounds.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbounds.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbounds.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -0,0 +1,270 @@\n+// errorcheck -0 -m -l\n+\n+// Copyright 2012 The Go Authors.  All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+// Test, using compiler diagnostic flags, that bounds check elimination\n+// is eliminating the correct checks.\n+\n+package foo\n+\n+var (\n+\ts []int\n+\n+\ta1 [1]int\n+\ta1k [1000]int\n+\ta100k [100000]int\n+\n+\tp1 *[1]int\n+\tp1k *[1000]int\n+\tp100k *[100000]int\n+\n+\ti int\n+\tui uint\n+\ti8 int8\n+\tui8 uint8\n+\ti16 int16\n+\tui16 uint16\n+\ti32 int32\n+\tui32 uint32\n+\ti64 int64\n+\tui64 uint64\n+)\n+\n+func main() {\n+\t// Most things need checks.\n+\tuse(s[i])\n+\tuse(a1[i])\n+\tuse(a1k[i])\n+\tuse(a100k[i])\n+\tuse(p1[i])\n+\tuse(p1k[i])\n+\tuse(p100k[i])\n+\n+\tuse(s[ui])\n+\tuse(a1[ui])\n+\tuse(a1k[ui])\n+\tuse(a100k[ui])\n+\tuse(p1[ui])\n+\tuse(p1k[ui])\n+\tuse(p100k[ui])\n+\n+\tuse(s[i8])\n+\tuse(a1[i8])\n+\tuse(a1k[i8])\n+\tuse(a100k[i8])\n+\tuse(p1[i8])\n+\tuse(p1k[i8])\n+\tuse(p100k[i8])\n+\n+\t// Unsigned 8-bit numbers don't need checks for len >= 2\u2078.\n+\tuse(s[ui8])\n+\tuse(a1[ui8])\n+\tuse(a1k[ui8])  // ERROR \"index bounds check elided\"\n+\tuse(a100k[ui8])  // ERROR \"index bounds check elided\"\n+\tuse(p1[ui8])\n+\tuse(p1k[ui8])  // ERROR \"index bounds check elided\"\n+\tuse(p100k[ui8])  // ERROR \"index bounds check elided\"\n+\n+\tuse(s[i16])\n+\tuse(a1[i16])\n+\tuse(a1k[i16])\n+\tuse(a100k[i16])\n+\tuse(p1[i16])\n+\tuse(p1k[i16])\n+\tuse(p100k[i16])\n+\n+\t// Unsigned 16-bit numbers don't need checks for len >= 2\u00b9\u2076.\n+\tuse(s[ui16])\n+\tuse(a1[ui16])\n+\tuse(a1k[ui16])\n+\tuse(a100k[ui16])  // ERROR \"index bounds check elided\"\n+\tuse(p1[ui16])\n+\tuse(p1k[ui16])\n+\tuse(p100k[ui16])  // ERROR \"index bounds check elided\"\n+\n+\tuse(s[i32])\n+\tuse(a1[i32])\n+\tuse(a1k[i32])\n+\tuse(a100k[i32])\n+\tuse(p1[i32])\n+\tuse(p1k[i32])\n+\tuse(p100k[i32])\n+\n+\tuse(s[ui32])\n+\tuse(a1[ui32])\n+\tuse(a1k[ui32])\n+\tuse(a100k[ui32])\n+\tuse(p1[ui32])\n+\tuse(p1k[ui32])\n+\tuse(p100k[ui32])\n+\n+\tuse(s[i64])\n+\tuse(a1[i64])\n+\tuse(a1k[i64])\n+\tuse(a100k[i64])\n+\tuse(p1[i64])\n+\tuse(p1k[i64])\n+\tuse(p100k[i64])\n+\n+\tuse(s[ui64])\n+\tuse(a1[ui64])\n+\tuse(a1k[ui64])\n+\tuse(a100k[ui64])\n+\tuse(p1[ui64])\n+\tuse(p1k[ui64])\n+\tuse(p100k[ui64])\n+\n+\t// Mod truncates the maximum value to one less than the argument,\n+\t// but signed mod can be negative, so only unsigned mod counts.\n+\tuse(s[i%999])\n+\tuse(a1[i%999])\n+\tuse(a1k[i%999])\n+\tuse(a100k[i%999])\n+\tuse(p1[i%999])\n+\tuse(p1k[i%999])\n+\tuse(p100k[i%999])\n+\n+\tuse(s[ui%999])\n+\tuse(a1[ui%999])\n+\tuse(a1k[ui%999])  // ERROR \"index bounds check elided\"\n+\tuse(a100k[ui%999])  // ERROR \"index bounds check elided\"\n+\tuse(p1[ui%999])\n+\tuse(p1k[ui%999])  // ERROR \"index bounds check elided\"\n+\tuse(p100k[ui%999])  // ERROR \"index bounds check elided\"\n+\n+\tuse(s[i%1000])\n+\tuse(a1[i%1000])\n+\tuse(a1k[i%1000])\n+\tuse(a100k[i%1000])\n+\tuse(p1[i%1000])\n+\tuse(p1k[i%1000])\n+\tuse(p100k[i%1000])\n+\n+\tuse(s[ui%1000])\n+\tuse(a1[ui%1000])\n+\tuse(a1k[ui%1000])  // ERROR \"index bounds check elided\"\n+\tuse(a100k[ui%1000])  // ERROR \"index bounds check elided\"\n+\tuse(p1[ui%1000])\n+\tuse(p1k[ui%1000])  // ERROR \"index bounds check elided\"\n+\tuse(p100k[ui%1000])  // ERROR \"index bounds check elided\"\n+\n+\tuse(s[i%1001])\n+\tuse(a1[i%1001])\n+\tuse(a1k[i%1001])\n+\tuse(a100k[i%1001])\n+\tuse(p1[i%1001])\n+\tuse(p1k[i%1001])\n+\tuse(p100k[i%1001])\n+\n+\tuse(s[ui%1001])\n+\tuse(a1[ui%1001])\n+\tuse(a1k[ui%1001])\n+\tuse(a100k[ui%1001])  // ERROR \"index bounds check elided\"\n+\tuse(p1[ui%1001])\n+\tuse(p1k[ui%1001])\n+\tuse(p100k[ui%1001])  // ERROR \"index bounds check elided\"\n+\n+\t// Bitwise and truncates the maximum value to the mask value.\n+\t// The result (for a positive mask) cannot be negative, so elision\n+\t// applies to both signed and unsigned indexes.\n+\tuse(s[i&999])\n+\tuse(a1[i&999])\n+\tuse(a1k[i&999])  // ERROR \"index bounds check elided\"\n+\tuse(a100k[i&999])  // ERROR \"index bounds check elided\"\n+\tuse(p1[i&999])\n+\tuse(p1k[i&999])  // ERROR \"index bounds check elided\"\n+\tuse(p100k[i&999])  // ERROR \"index bounds check elided\"\n+\n+\tuse(s[ui&999])\n+\tuse(a1[ui&999])\n+\tuse(a1k[ui&999])  // ERROR \"index bounds check elided\"\n+\tuse(a100k[ui&999])  // ERROR \"index bounds check elided\"\n+\tuse(p1[ui&999])\n+\tuse(p1k[ui&999])  // ERROR \"index bounds check elided\"\n+\tuse(p100k[ui&999])  // ERROR \"index bounds check elided\"\n+\n+\tuse(s[i&1000])\n+\tuse(a1[i&1000])\n+\tuse(a1k[i&1000])\n+\tuse(a100k[i&1000])  // ERROR \"index bounds check elided\"\n+\tuse(p1[i&1000])\n+\tuse(p1k[i&1000])\n+\tuse(p100k[i&1000])  // ERROR \"index bounds check elided\"\n+\n+\tuse(s[ui&1000])\n+\tuse(a1[ui&1000])\n+\tuse(a1k[ui&1000])\n+\tuse(a100k[ui&1000])  // ERROR \"index bounds check elided\"\n+\tuse(p1[ui&1000])\n+\tuse(p1k[ui&1000])\n+\tuse(p100k[ui&1000])  // ERROR \"index bounds check elided\"\n+\n+\t// Right shift cuts the effective number of bits in the index,\n+\t// but only for unsigned (signed stays negative).\n+\tuse(s[i32>>22])\n+\tuse(a1[i32>>22])\n+\tuse(a1k[i32>>22])\n+\tuse(a100k[i32>>22])\n+\tuse(p1[i32>>22])\n+\tuse(p1k[i32>>22])\n+\tuse(p100k[i32>>22])\n+\n+\tuse(s[ui32>>22])\n+\tuse(a1[ui32>>22])\n+\tuse(a1k[ui32>>22])\n+\tuse(a100k[ui32>>22])  // ERROR \"index bounds check elided\"\n+\tuse(p1[ui32>>22])\n+\tuse(p1k[ui32>>22])\n+\tuse(p100k[ui32>>22])  // ERROR \"index bounds check elided\"\n+\n+\tuse(s[i32>>23])\n+\tuse(a1[i32>>23])\n+\tuse(a1k[i32>>23])\n+\tuse(a100k[i32>>23])\n+\tuse(p1[i32>>23])\n+\tuse(p1k[i32>>23])\n+\tuse(p100k[i32>>23])\n+\n+\tuse(s[ui32>>23])\n+\tuse(a1[ui32>>23])\n+\tuse(a1k[ui32>>23])  // ERROR \"index bounds check elided\"\n+\tuse(a100k[ui32>>23])  // ERROR \"index bounds check elided\"\n+\tuse(p1[ui32>>23])\n+\tuse(p1k[ui32>>23])  // ERROR \"index bounds check elided\"\n+\tuse(p100k[ui32>>23])  // ERROR \"index bounds check elided\"\n+\n+\t// Division cuts the range like right shift does.\n+\tuse(s[i/1e6])\n+\tuse(a1[i/1e6])\n+\tuse(a1k[i/1e6])\n+\tuse(a100k[i/1e6])\n+\tuse(p1[i/1e6])\n+\tuse(p1k[i/1e6])\n+\tuse(p100k[i/1e6])\n+\n+\tuse(s[ui/1e6])\n+\tuse(a1[ui/1e6])\n+\tuse(a1k[ui/1e6])\n+\tuse(p1[ui/1e6])\n+\tuse(p1k[ui/1e6])\n+\n+\tuse(s[i/1e7])\n+\tuse(a1[i/1e7])\n+\tuse(a1k[i/1e7])\n+\tuse(a100k[i/1e7])\n+\tuse(p1[i/1e7])\n+\tuse(p1k[i/1e7])\n+\tuse(p100k[i/1e7])\n+\n+\tuse(s[ui/1e7])\n+\tuse(a1[ui/1e7])\n+\tuse(p1[ui/1e7])\n+}\n+\n+var sum int \n+\n+func use(x int) {\n+\tsum += x\n+}"}, {"sha": "4632dcd0f7906a483044f428590337b90c66aca9", "filename": "gcc/testsuite/go.test/test/bugs/bug395.go", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbugs%2Fbug395.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbugs%2Fbug395.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbugs%2Fbug395.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,6 +1,9 @@\n // echo bug395 is broken  # takes 90+ seconds to break\n // # $G $D/$F.go || echo bug395\n \n+// NOTE: This test is not run by 'run.go' and so not run by all.bash.\n+// To run this test you must use the ./run shell script.\n+\n // Copyright 2011 The Go Authors.  All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file."}, {"sha": "491ada1d9c4ebf30c881715d00f6215d2babef92", "filename": "gcc/testsuite/go.test/test/bugs/bug434.dir/one.go", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbugs%2Fbug434.dir%2Fone.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbugs%2Fbug434.dir%2Fone.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbugs%2Fbug434.dir%2Fone.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -0,0 +1,28 @@\n+// Copyright 2012 The Go Authors.  All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+package one\n+\n+// Issue 3552\n+\n+type T struct { int }\n+\n+func (t T) F() int { return t.int }\n+\n+type U struct { int int }\n+\n+func (u U) F() int { return u.int }\n+\n+type lint int\n+\n+type V struct { lint }\n+\n+func (v V) F() int { return int(v.lint) }\n+\n+type W struct { lint lint }\n+\n+func (w W) F() int { return int(w.lint) }\n+\n+\n+"}, {"sha": "1366d244d3e91180c3d86c01fee2dfb3998af332", "filename": "gcc/testsuite/go.test/test/bugs/bug434.dir/two.go", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbugs%2Fbug434.dir%2Ftwo.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbugs%2Fbug434.dir%2Ftwo.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbugs%2Fbug434.dir%2Ftwo.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -0,0 +1,22 @@\n+// Copyright 2012 The Go Authors.  All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+// Use the functions in one.go so that the inlined\n+// forms get type-checked.\n+\n+package two\n+\n+import \"./one\"\n+\n+func use() {\n+\tvar t one.T\n+\tvar u one.U\n+\tvar v one.V\n+\tvar w one.W\n+\n+\t_ = t.F()\n+\t_ = u.F()\n+\t_ = v.F()\n+\t_ = w.F()\n+}"}, {"sha": "5eec7a577e73bbe1500cdd1afd0f48827ed68e87", "filename": "gcc/testsuite/go.test/test/bugs/bug434.go", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbugs%2Fbug434.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbugs%2Fbug434.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fbugs%2Fbug434.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -0,0 +1,10 @@\n+// $G $D/$F.dir/one.go && $G $D/$F.dir/two.go || echo BUG:bug434\n+\n+// NOTE: This test is not run by 'run.go' and so not run by all.bash.\n+// To run this test you must use the ./run shell script.\n+\n+// Copyright 2011 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+package ignored"}, {"sha": "ac559302d9bfef215aa33b430ada0adc1c010b2c", "filename": "gcc/testsuite/go.test/test/chan/doubleselect.go", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchan%2Fdoubleselect.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchan%2Fdoubleselect.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchan%2Fdoubleselect.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,11 +1,12 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out\n+// run\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// This test is designed to flush out the case where two cases of a select can\n+// Test the situation in which two cases of a select can\n // both end up running. See http://codereview.appspot.com/180068.\n+\n package main\n \n import ("}, {"sha": "70d20b31f098ee0f5f629c10fbd7ac93b9e2afad", "filename": "gcc/testsuite/go.test/test/chan/fifo.go", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchan%2Ffifo.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchan%2Ffifo.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchan%2Ffifo.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,10 +1,10 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out\n+// run\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// Verify that unbuffered channels act as pure fifos.\n+// Test that unbuffered channels act as pure fifos.\n \n package main\n "}, {"sha": "6ffae7df65f45406b423113de7d5817fc00b808a", "filename": "gcc/testsuite/go.test/test/chan/goroutines.go", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchan%2Fgoroutines.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchan%2Fgoroutines.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchan%2Fgoroutines.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,11 +1,11 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out\n+// run\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// make a lot of goroutines, threaded together.\n-// tear them down cleanly.\n+// Torture test for goroutines.\n+// Make a lot of goroutines, threaded together, and tear them down cleanly.\n \n package main\n "}, {"sha": "7e3c0c74daec7568d6d1b6ee4f3ca2d785e5fcb7", "filename": "gcc/testsuite/go.test/test/chan/nonblock.go", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchan%2Fnonblock.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchan%2Fnonblock.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchan%2Fnonblock.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,11 +1,11 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out\n+// run\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// Verify channel operations that test for blocking\n-// Use several sizes and types of operands\n+// Test channel operations that test for blocking.\n+// Use several sizes and types of operands.\n \n package main\n "}, {"sha": "7e152c5eb5a2f51d896d4c94706780947dd92861", "filename": "gcc/testsuite/go.test/test/chan/perm.go", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchan%2Fperm.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchan%2Fperm.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchan%2Fperm.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,9 +1,13 @@\n-// errchk $G -e $D/$F.go\n+// errorcheck\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n+// Test various correct and incorrect permutations of send-only,\n+// receive-only, and bidirectional channels.\n+// Does not compile.\n+\n package main\n \n var ("}, {"sha": "6bf2a911157d1a73ee2116994fd2571ec01c0dff", "filename": "gcc/testsuite/go.test/test/chan/powser1.go", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchan%2Fpowser1.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchan%2Fpowser1.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchan%2Fpowser1.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,9 +1,11 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out\n+// run\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n+// Test concurrency primitives: power series.\n+\n // Power series package\n // A power series is a channel, along which flow rational\n // coefficients.  A denominator of zero signifies the end."}, {"sha": "33abd5c53fe7b2378274d4939d0aea2951241e28", "filename": "gcc/testsuite/go.test/test/chan/powser2.go", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchan%2Fpowser2.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchan%2Fpowser2.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchan%2Fpowser2.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,18 +1,21 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out\n+// run\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n+// Test concurrency primitives: power series.\n+\n+// Like powser1.go but uses channels of interfaces.\n+// Has not been cleaned up as much as powser1.go, to keep\n+// it distinct and therefore a different test.\n+\n // Power series package\n // A power series is a channel, along which flow rational\n // coefficients.  A denominator of zero signifies the end.\n // Original code in Newsqueak by Doug McIlroy.\n // See Squinting at Power Series by Doug McIlroy,\n //   http://www.cs.bell-labs.com/who/rsc/thread/squint.pdf\n-// Like powser1.go but uses channels of interfaces.\n-// Has not been cleaned up as much as powser1.go, to keep\n-// it distinct and therefore a different test.\n \n package main\n "}, {"sha": "38fa7e1e3f8708c0871402def9778e43f93928b5", "filename": "gcc/testsuite/go.test/test/chan/select.go", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchan%2Fselect.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchan%2Fselect.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchan%2Fselect.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,9 +1,11 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out\n+// run\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n+// Test simple select.\n+\n package main\n \n var counter uint"}, {"sha": "40bc357b5d715e652be55692bc1d70f2d0939bd1", "filename": "gcc/testsuite/go.test/test/chan/select2.go", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchan%2Fselect2.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchan%2Fselect2.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchan%2Fselect2.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,9 +1,11 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out\n+// run\n \n // Copyright 2010 The Go Authors.  All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n+// Test that selects do not consume undue memory.\n+\n package main\n \n import \"runtime\""}, {"sha": "847d8ed37ed25a4c06db3188f063b5fb808867e7", "filename": "gcc/testsuite/go.test/test/chan/select3.go", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchan%2Fselect3.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchan%2Fselect3.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchan%2Fselect3.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,10 +1,10 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out\n+// run\n \n // Copyright 2010 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// Tests verifying the semantics of the select statement\n+// Test the semantics of the select statement\n // for basic empty/non-empty cases.\n \n package main\n@@ -197,13 +197,13 @@ func main() {\n \t})\n \ttestBlock(never, func() {\n \t\tselect {\n-\t\tcase x := <-closedch:\n+\t\tcase x := (<-closedch):\n \t\t\t_ = x\n \t\t}\n \t})\n \ttestBlock(never, func() {\n \t\tselect {\n-\t\tcase x, ok := <-closedch:\n+\t\tcase x, ok := (<-closedch):\n \t\t\t_, _ = x, ok\n \t\t}\n \t})"}, {"sha": "500364038566baba9a65f953a01dabde30171212", "filename": "gcc/testsuite/go.test/test/chan/select4.go", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchan%2Fselect4.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchan%2Fselect4.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchan%2Fselect4.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,10 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out\n+// run\n+\n+// Copyright 2010 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file\n+\n+// Test that a select statement proceeds when a value is ready.\n \n package main\n "}, {"sha": "f72cfe4b461c2eee647ff4370b06af87d899288c", "filename": "gcc/testsuite/go.test/test/chan/select5.go", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchan%2Fselect5.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchan%2Fselect5.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchan%2Fselect5.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,13 +1,14 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out >tmp.go &&\n-// $G tmp.go && $L tmp.$A && ./$A.out || echo BUG: select5\n-// rm -f tmp.go\n+// runoutput\n \n // Copyright 2011 The Go Authors.  All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n // Generate test of channel operations and simple selects.\n-// Only doing one real send or receive at a time, but phrased\n+// The output of this program is compiled and run to do the\n+// actual test.\n+\n+// Each test does only one real send or receive at a time, but phrased\n // in various ways that the compiler may or may not rewrite\n // into simpler expressions.\n "}, {"sha": "af470a0d0d187fcc5ac237118c7b8a98ab6b8ce6", "filename": "gcc/testsuite/go.test/test/chan/select6.go", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchan%2Fselect6.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchan%2Fselect6.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchan%2Fselect6.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,10 +1,10 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out\n+// run\n \n // Copyright 2011 The Go Authors.  All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// Issue 2075\n+// Test for select: Issue 2075\n // A bug in select corrupts channel queues of failed cases\n // if there are multiple waiters on those channels and the\n // select is the last in the queue. If further waits are made"}, {"sha": "20456a9d62ec755867e2172ac0c5c954903a70e0", "filename": "gcc/testsuite/go.test/test/chan/select7.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchan%2Fselect7.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchan%2Fselect7.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchan%2Fselect7.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out\n+// run\n \n // Copyright 2011 The Go Authors.  All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "a92c4f63a7af85f96e2ed617282a7490f3daba0c", "filename": "gcc/testsuite/go.test/test/chan/sendstmt.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchan%2Fsendstmt.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchan%2Fsendstmt.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchan%2Fsendstmt.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out\n+// run\n \n // Copyright 2011 The Go Authors.  All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "acc310f6c79ae6ce958b656663d7184aeff0dbe5", "filename": "gcc/testsuite/go.test/test/chan/sieve1.go", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchan%2Fsieve1.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchan%2Fsieve1.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchan%2Fsieve1.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,9 +1,11 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out\n+// run\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n+// Test concurrency primitives: classical inefficient concurrent prime sieve.\n+\n // Generate primes up to 100 using channels, checking the results.\n // This sieve consists of a linear chain of divisibility filters,\n // equivalent to trial-dividing each n by all primes p \u2264 n."}, {"sha": "09e5c527b6cca9c3c59f05676c1732d3fb5a0132", "filename": "gcc/testsuite/go.test/test/chan/sieve2.go", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchan%2Fsieve2.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchan%2Fsieve2.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchan%2Fsieve2.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,9 +1,11 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out\n+// run\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n+// Test concurrency primitives: prime sieve of Eratosthenes.\n+\n // Generate primes up to 100 using channels, checking the results.\n // This sieve is Eratosthenesque and only considers odd candidates.\n // See discussion at <http://blog.onideas.ws/eratosthenes.go>."}, {"sha": "50aca857cbed5f049c6ea6176d691da8caaae7ce", "filename": "gcc/testsuite/go.test/test/chan/zerosize.go", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchan%2Fzerosize.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchan%2Fzerosize.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchan%2Fzerosize.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,10 +1,10 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out\n+// run\n \n // Copyright 2011 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// Making channels of a zero-sized type should not panic.\n+// Test making channels of a zero-sized type.\n \n package main\n "}, {"sha": "b3e40233f5b29a9a9ff60bfd43e55ac74312facc", "filename": "gcc/testsuite/go.test/test/chancap.go", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchancap.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchancap.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchancap.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,9 +1,11 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out\n+// run\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n+// Test the cap predeclared function applied to channels.\n+\n package main\n \n func main() {"}, {"sha": "836c3c1a2d0b0de309abe4b8a6ffa0aabc85668a", "filename": "gcc/testsuite/go.test/test/char_lit.go", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchar_lit.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchar_lit.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchar_lit.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,9 +1,11 @@\n-// $G $F.go && $L $F.$A &&./$A.out\n+// run\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n+// Test character literal syntax.\n+\n package main\n \n import \"os\""}, {"sha": "489744b6e9888c733d05fa84baa34bbce2f48a1e", "filename": "gcc/testsuite/go.test/test/char_lit1.go", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchar_lit1.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchar_lit1.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchar_lit1.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,9 +1,12 @@\n-// errchk $G -e $F.go\n+// errorcheck\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n+// Verify that illegal character literals are detected.\n+// Does not compile.\n+\n package main\n \n const ("}, {"sha": "043a92d3880e83fb8aef11cc358bf1e49d02a7ab", "filename": "gcc/testsuite/go.test/test/closedchan.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fclosedchan.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fclosedchan.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fclosedchan.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out\n+// run\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "c4a312464bcf4e130143941e67421b1a1615fa94", "filename": "gcc/testsuite/go.test/test/closure.go", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fclosure.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fclosure.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fclosure.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,9 +1,11 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out\n+// run\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n+// Test the behavior of closures.\n+\n package main\n \n import \"runtime\"\n@@ -79,6 +81,7 @@ func h() {\n func newfunc() func(int) int { return func(x int) int { return x } }\n \n func main() {\n+\truntime.GOMAXPROCS(1)\n \tvar fail bool\n \n \tgo f()\n@@ -92,25 +95,26 @@ func main() {\n \tgo h()\n \tcheck([]int{100, 200, 101, 201, 500, 101, 201, 500})\n \n-\truntime.UpdateMemStats()\n-        n0 := runtime.MemStats.Mallocs\n+\tmemstats := new(runtime.MemStats)\n+\truntime.ReadMemStats(memstats)\n+\tn0 := memstats.Mallocs\n \n \tx, y := newfunc(), newfunc()\n \tif x(1) != 1 || y(2) != 2 {\n \t\tprintln(\"newfunc returned broken funcs\")\n \t\tfail = true\n \t}\n \n-\truntime.UpdateMemStats()\n-        if n0 != runtime.MemStats.Mallocs {\n+\truntime.ReadMemStats(memstats)\n+\tif n0 != memstats.Mallocs {\n \t\tprintln(\"newfunc allocated unexpectedly\")\n \t\tfail = true\n \t}\n \n \tff(1)\n \n \tif fail {\n-\t\tpanic(\"fail\") \n+\t\tpanic(\"fail\")\n \t}\n }\n "}, {"sha": "a56ca6eadddc2732dbf3245a51980c3f4e33e9a3", "filename": "gcc/testsuite/go.test/test/cmp.go", "status": "modified", "additions": 22, "deletions": 1, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fcmp.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fcmp.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fcmp.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,9 +1,11 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out\n+// run\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n+// Test equality and inequality operations.\n+\n package main\n \n import \"unsafe\"\n@@ -281,6 +283,25 @@ func main() {\n \t\tisfalse(ix != z)\n \t\tisfalse(iz != x)\n \t}\n+\t\n+\t// structs with _ fields\n+\t{\n+\t\tvar x = struct {\n+\t\t\tx int\n+\t\t\t_ []int\n+\t\t\ty float64\n+\t\t\t_ float64\n+\t\t\tz int\n+\t\t}{\n+\t\t\tx: 1, y: 2, z: 3,\n+\t\t}\n+\t\tvar ix interface{} = x\n+\t\t\n+\t\tistrue(x == x)\n+\t\tistrue(x == ix)\n+\t\tistrue(ix == x)\n+\t\tistrue(ix == ix)\n+\t}\n \n \t// arrays\n \t{"}, {"sha": "7d99aae18b322ac4ca889e8d91492b3aefc08436", "filename": "gcc/testsuite/go.test/test/cmp6.go", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fcmp6.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fcmp6.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fcmp6.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,9 +1,12 @@\n-// errchk $G -e $D/$F.go\n+// errorcheck\n \n // Copyright 2010 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n+// Verify that incorrect comparisons are detected.\n+// Does not compile.\n+\n package main\n \n func use(bool) {}\n@@ -15,6 +18,10 @@ type T3 struct{ z []int }\n \n var t3 T3\n \n+type T4 struct { _ []int; a float64 }\n+\n+var t4 T4\n+\n func main() {\n \t// Arguments to comparison must be\n \t// assignable one to the other (or vice versa)\n@@ -46,6 +53,7 @@ func main() {\n \n \t// Comparison of structs should have a good message\n \tuse(t3 == t3) // ERROR \"struct|expected\"\n+\tuse(t4 == t4) // ok; the []int is a blank field\n \n \t// Slices, functions, and maps too.\n \tvar x []int"}, {"sha": "248672e7dd5076dda87a359fad00338e39149f74", "filename": "gcc/testsuite/go.test/test/cmplx.go", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fcmplx.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fcmplx.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fcmplx.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,9 +1,12 @@\n-// errchk $G -e $D/$F.go\n+// errorcheck\n \n // Copyright 2010 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n+// Verify that incorrect invocations of the complex predeclared function are detected.\n+// Does not compile.\n+\n package main\n \n var ("}, {"sha": "12dc4f1c0c914c3293a5604083c5d4c56c67054f", "filename": "gcc/testsuite/go.test/test/cmplxdivide.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fcmplxdivide.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fcmplxdivide.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fcmplxdivide.c?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -51,6 +51,7 @@ main(void)\n \tint i, j, k, l;\n \tdouble complex n, d, q;\n \t\n+\tprintf(\"// skip\\n\");\n \tprintf(\"// # generated by cmplxdivide.c\\n\");\n \tprintf(\"\\n\");\n \tprintf(\"package main\\n\");"}, {"sha": "92a98356d0a518469064a9156257ff1bcc7c090c", "filename": "gcc/testsuite/go.test/test/cmplxdivide.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fcmplxdivide.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fcmplxdivide.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fcmplxdivide.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go $D/cmplxdivide1.go && $L $D/$F.$A && ./$A.out\n+// run cmplxdivide1.go\n \n // Copyright 2010 The Go Authors.  All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "e9031dd15143248b5857d4a891dde0800a1d6596", "filename": "gcc/testsuite/go.test/test/cmplxdivide1.go", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fcmplxdivide1.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fcmplxdivide1.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fcmplxdivide1.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,3 +1,4 @@\n+// skip\n // # generated by cmplxdivide.c\n \n package main"}, {"sha": "649be6d4d39ce02c2c4a8954680825a7f2ac00ed", "filename": "gcc/testsuite/go.test/test/complit.go", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fcomplit.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fcomplit.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fcomplit.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,9 +1,11 @@\n-// $G $F.go && $L $F.$A && ./$A.out\n+// run\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n+// Test composite literals.\n+\n package main\n \n type T struct {"}, {"sha": "521401d73936c9a78bcc7518bb76e91893cea847", "filename": "gcc/testsuite/go.test/test/complit1.go", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fcomplit1.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fcomplit1.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fcomplit1.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,9 +1,12 @@\n-// errchk $G -e $D/$F.go\n+// errorcheck\n \n // Copyright 2011 The Go Authors.  All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n+// Verify that illegal composite literals are detected.\n+// Does not compile.\n+\n package main\n \n var m map[int][3]int"}, {"sha": "de688b39bb60c146ca3f70cc990963fed7ddd058", "filename": "gcc/testsuite/go.test/test/compos.go", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fcompos.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fcompos.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fcompos.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,9 +1,11 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out || echo BUG: compos\n+// run\n \n // Copyright 2009 The Go Authors.  All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n+// Test that returning &T{} from a function causes an allocation.\n+\n package main\n \n type T struct {"}, {"sha": "80fbfaf3ea0b2e3b46e6bced8329a1c8cd850e85", "filename": "gcc/testsuite/go.test/test/const.go", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fconst.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fconst.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fconst.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,9 +1,11 @@\n-// $G $F.go && $L $F.$A && ./$A.out\n+// run\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n+// Test simple boolean and numeric constants.\n+\n package main\n \n const ("}, {"sha": "1580b76c68374f1582171ddc5246cf68be890953", "filename": "gcc/testsuite/go.test/test/const1.go", "status": "modified", "additions": 34, "deletions": 28, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fconst1.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fconst1.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fconst1.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,9 +1,12 @@\n-// errchk $G -e $F.go\n+// errorcheck\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n+// Verify overflow is detected when using numeric constants.\n+// Does not compile.\n+\n package main\n \n type I interface{}\n@@ -13,11 +16,11 @@ const (\n \tInt8   int8  = 101\n \tMinus1 int8  = -1\n \tUint8  uint8 = 102\n-\tConst  = 103\n+\tConst        = 103\n \n \tFloat32    float32 = 104.5\n \tFloat64    float64 = 105.5\n-\tConstFloat = 106.5\n+\tConstFloat         = 106.5\n \tBig        float64 = 1e300\n \n \tString = \"abc\"\n@@ -35,32 +38,35 @@ var (\n \ta8 = Int8 * Const / 100      // ERROR \"overflow\"\n \ta9 = Int8 * (Const / 100)    // OK\n \n-\tb1   = Uint8 * Uint8                                 // ERROR \"overflow\"\n-\tb2   = Uint8 * -1                                    // ERROR \"overflow\"\n-\tb3   = Uint8 - Uint8                                 // OK\n-\tb4   = Uint8 - Uint8 - Uint8                         // ERROR \"overflow\"\n-\tb5   = uint8(^0)                                     // ERROR \"overflow\"\n-\tb6   = ^uint8(0)                                     // OK\n-\tb7   = uint8(Minus1)                                 // ERROR \"overflow\"\n-\tb8   = uint8(int8(-1))                               // ERROR \"overflow\"\n-\tb8a  = uint8(-1)                                     // ERROR \"overflow\"\n-\tb9   byte                    = (1 << 10) >> 8        // OK\n-\tb10  byte                    = (1 << 10)             // ERROR \"overflow\"\n-\tb11  byte                    = (byte(1) << 10) >> 8  // ERROR \"overflow\"\n-\tb12  byte                    = 1000                  // ERROR \"overflow\"\n-\tb13  byte                    = byte(1000)            // ERROR \"overflow\"\n-\tb14  byte                    = byte(100) * byte(100) // ERROR \"overflow\"\n-\tb15  byte                    = byte(100) * 100       // ERROR \"overflow\"\n-\tb16  byte                    = byte(0) * 1000        // ERROR \"overflow\"\n-\tb16a byte                    = 0 * 1000              // OK\n-\tb17  byte                    = byte(0) * byte(1000)  // ERROR \"overflow\"\n-\tb18  byte                    = Uint8 / 0             // ERROR \"division by zero\"\n+\tb1        = Uint8 * Uint8         // ERROR \"overflow\"\n+\tb2        = Uint8 * -1            // ERROR \"overflow\"\n+\tb3        = Uint8 - Uint8         // OK\n+\tb4        = Uint8 - Uint8 - Uint8 // ERROR \"overflow\"\n+\tb5        = uint8(^0)             // ERROR \"overflow\"\n+\tb5a       = int64(^0)             // OK\n+\tb6        = ^uint8(0)             // OK\n+\tb6a       = ^int64(0)             // OK\n+\tb7        = uint8(Minus1)         // ERROR \"overflow\"\n+\tb8        = uint8(int8(-1))       // ERROR \"overflow\"\n+\tb8a       = uint8(-1)             // ERROR \"overflow\"\n+\tb9   byte = (1 << 10) >> 8        // OK\n+\tb10  byte = (1 << 10)             // ERROR \"overflow\"\n+\tb11  byte = (byte(1) << 10) >> 8  // ERROR \"overflow\"\n+\tb12  byte = 1000                  // ERROR \"overflow\"\n+\tb13  byte = byte(1000)            // ERROR \"overflow\"\n+\tb14  byte = byte(100) * byte(100) // ERROR \"overflow\"\n+\tb15  byte = byte(100) * 100       // ERROR \"overflow\"\n+\tb16  byte = byte(0) * 1000        // ERROR \"overflow\"\n+\tb16a byte = 0 * 1000              // OK\n+\tb17  byte = byte(0) * byte(1000)  // ERROR \"overflow\"\n+\tb18  byte = Uint8 / 0             // ERROR \"division by zero\"\n \n-\tc1 float64     = Big\n-\tc2 float64     = Big * Big          // ERROR \"overflow\"\n-\tc3 float64     = float64(Big) * Big // ERROR \"overflow\"\n-\tc4 = Big * Big                      // ERROR \"overflow\"\n-\tc5 = Big / 0                        // ERROR \"division by zero\"\n+\tc1 float64 = Big\n+\tc2 float64 = Big * Big          // ERROR \"overflow\"\n+\tc3 float64 = float64(Big) * Big // ERROR \"overflow\"\n+\tc4         = Big * Big          // ERROR \"overflow\"\n+\tc5         = Big / 0            // ERROR \"division by zero\"\n+\tc6         = 1000 % 1e3         // ERROR \"floating-point % operation|expected integer type\"\n )\n \n func f(int)"}, {"sha": "048d0cb9f397634791841763e9de764967342918", "filename": "gcc/testsuite/go.test/test/const2.go", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fconst2.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fconst2.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fconst2.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,12 +1,21 @@\n-// errchk $G $D/$F.go\n+// errorcheck\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n+// Verify that large integer constant expressions cause overflow.\n+// Does not compile.\n+\n package main\n \n const (\n \tA int = 1\n \tB byte;\t// ERROR \"type without expr|expected .=.\"\n )\n+\n+const LargeA = 1000000000000000000\n+const LargeB = LargeA * LargeA * LargeA\n+const LargeC = LargeB * LargeB * LargeB // GC_ERROR \"constant multiplication overflow\"\n+\n+const AlsoLargeA = LargeA << 400 << 400 >> 400 >> 400 // GC_ERROR \"constant shift overflow\""}, {"sha": "3f4e3d1ae6fa9adf095afe91e176daa3708fe86b", "filename": "gcc/testsuite/go.test/test/const3.go", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fconst3.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fconst3.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fconst3.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,9 +1,11 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out\n+// run\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n+// Test typed integer constants.\n+\n package main\n \n import \"fmt\""}, {"sha": "677fcefa7506d464c25c0a697c0443de611f5110", "filename": "gcc/testsuite/go.test/test/const4.go", "status": "added", "additions": 77, "deletions": 0, "changes": 77, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fconst4.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fconst4.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fconst4.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -0,0 +1,77 @@\n+// run\n+\n+// Copyright 2011 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+// Test len constants and non-constants, http://golang.org/issue/3244.\n+\n+package main\n+\n+var b struct {\n+\ta[10]int\n+}\n+\n+var m map[string][20]int\n+\n+var s [][30]int\n+\n+const (\n+\tn1 = len(b.a)\n+\tn2 = len(m[\"\"])\n+\tn3 = len(s[10])\n+)\n+\n+// Non-constants (see also const5.go).\n+var (\n+\tn4 = len(f())\n+\tn5 = len(<-c)\n+\tn6 = cap(g())\n+\tn7 = cap(<-c1)\n+)\n+\n+var calledF = false\n+\n+func f() *[40]int {\n+\tcalledF = true\n+\treturn nil\n+}\n+\n+var c = func() chan *[50]int {\n+\tc := make(chan *[50]int, 2)\n+\tc <- nil\n+\tc <- new([50]int)\n+\treturn c\n+}()\n+\n+var calledG = false\n+\n+func g() *[60]int {\n+\tcalledG = true\n+\treturn nil\n+}\n+\n+var c1 = func() chan *[70]int {\n+\tc := make(chan *[70]int, 2)\n+\tc <- nil\n+\tc <- new([70]int)\n+\treturn c\n+}()\n+\n+func main() {\n+\tif n1 != 10 || n2 != 20 || n3 != 30 || n4 != 40 || n5 != 50 || n6 != 60 || n7 != 70 {\n+\t\tprintln(\"BUG:\", n1, n2, n3, n4, n5, n6, n7)\n+\t}\n+\tif !calledF {\n+\t\tprintln(\"BUG: did not call f\")\n+\t}\n+\tif <-c == nil {\n+\t\tprintln(\"BUG: did not receive from c\")\n+\t}\n+\tif !calledG {\n+\t\tprintln(\"BUG: did not call g\")\n+\t}\n+\tif <-c1 == nil {\n+\t\tprintln(\"BUG: did not receive from c1\")\n+\t}\n+}"}, {"sha": "d0eed137d1ab7567d41246b8a616f0fb9fde2fc5", "filename": "gcc/testsuite/go.test/test/const5.go", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fconst5.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fconst5.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fconst5.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -0,0 +1,33 @@\n+// errorcheck\n+\n+// Copyright 2011 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+// Test that len non-constants are not constants, http://golang.org/issue/3244.\n+\n+package p\n+\n+var b struct {\n+\ta[10]int\n+}\n+\n+var m map[string][20]int\n+\n+var s [][30]int\n+\n+func f() *[40]int\n+var c chan *[50]int\n+\n+const (\n+\tn1 = len(b.a)\n+\tn2 = len(m[\"\"])\n+\tn3 = len(s[10])\n+\n+\tn4 = len(f())  // ERROR \"must be constant|is not constant\"\n+\tn5 = len(<-c) // ERROR \"must be constant|is not constant\"\n+\n+\tn6 = cap(f())  // ERROR \"must be constant|is not constant\"\n+\tn7 = cap(<-c) // ERROR \"must be constant|is not constant\"\n+)\n+"}, {"sha": "7e27f06b0cbe4f1830a264f0d040328b45f8e405", "filename": "gcc/testsuite/go.test/test/convT2X.go", "status": "added", "additions": 195, "deletions": 0, "changes": 195, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2FconvT2X.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2FconvT2X.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2FconvT2X.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -0,0 +1,195 @@\n+// run\n+\n+// Copyright 2012 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+// Test conversion from non-interface types to the empty interface.\n+\n+package main\n+\n+type J interface {\n+\tMethod()\n+}\n+\n+type (\n+\tU16  uint16\n+\tU32  uint32\n+\tU64  uint64\n+\tU128 [2]uint64\n+\tF32  float32\n+\tF64  float64\n+\tC128 complex128\n+\tS    string\n+\tB    []byte\n+\tM    map[int]int\n+\tC    chan int\n+\tZ    struct{}\n+)\n+\n+func (U16) Method()  {}\n+func (U32) Method()  {}\n+func (U64) Method()  {}\n+func (U128) Method() {}\n+func (F32) Method()  {}\n+func (F64) Method()  {}\n+func (C128) Method() {}\n+func (S) Method()    {}\n+func (B) Method()    {}\n+func (M) Method()    {}\n+func (C) Method()    {}\n+func (Z) Method()    {}\n+\n+var (\n+\tu16  = U16(1)\n+\tu32  = U32(2)\n+\tu64  = U64(3)\n+\tu128 = U128{4, 5}\n+\tf32  = F32(6)\n+\tf64  = F64(7)\n+\tc128 = C128(8 + 9i)\n+\ts    = S(\"10\")\n+\tb    = B(\"11\")\n+\tm    = M{12: 13}\n+\tc    = make(C, 14)\n+\tz    = Z{}\n+\tp    = &z\n+\tpp   = &p\n+)\n+\n+var (\n+\tiu16  interface{} = u16\n+\tiu32  interface{} = u32\n+\tiu64  interface{} = u64\n+\tiu128 interface{} = u128\n+\tif32  interface{} = f32\n+\tif64  interface{} = f64\n+\tic128 interface{} = c128\n+\tis    interface{} = s\n+\tib    interface{} = b\n+\tim    interface{} = m\n+\tic    interface{} = c\n+\tiz    interface{} = z\n+\tip    interface{} = p\n+\tipp   interface{} = pp\n+\n+\tju16  J = u16\n+\tju32  J = u32\n+\tju64  J = u64\n+\tju128 J = u128\n+\tjf32  J = f32\n+\tjf64  J = f64\n+\tjc128 J = c128\n+\tjs    J = s\n+\tjb    J = b\n+\tjm    J = m\n+\tjc    J = c\n+\tjz J = z\n+\tjp J = p // The method set for *T contains the methods for T.\n+\t// pp does not implement error.\n+)\n+\n+func second(a ...interface{}) interface{} {\n+\treturn a[1]\n+}\n+\n+func main() {\n+\t// Test equality.\n+\tif u16 != iu16 {\n+\t\tpanic(\"u16 != iu16\")\n+\t}\n+\tif u16 != ju16 {\n+\t\tpanic(\"u16 != ju16\")\n+\t}\n+\tif u32 != iu32 {\n+\t\tpanic(\"u32 != iu32\")\n+\t}\n+\tif u32 != ju32 {\n+\t\tpanic(\"u32 != ju32\")\n+\t}\n+\tif u64 != iu64 {\n+\t\tpanic(\"u64 != iu64\")\n+\t}\n+\tif u64 != ju64 {\n+\t\tpanic(\"u64 != ju64\")\n+\t}\n+\tif u128 != iu128 {\n+\t\tpanic(\"u128 != iu128\")\n+\t}\n+\tif u128 != ju128 {\n+\t\tpanic(\"u128 != ju128\")\n+\t}\n+\tif f32 != if32 {\n+\t\tpanic(\"f32 != if32\")\n+\t}\n+\tif f32 != jf32 {\n+\t\tpanic(\"f32 != jf32\")\n+\t}\n+\tif f64 != if64 {\n+\t\tpanic(\"f64 != if64\")\n+\t}\n+\tif f64 != jf64 {\n+\t\tpanic(\"f64 != jf64\")\n+\t}\n+\tif c128 != ic128 {\n+\t\tpanic(\"c128 != ic128\")\n+\t}\n+\tif c128 != jc128 {\n+\t\tpanic(\"c128 != jc128\")\n+\t}\n+\tif s != is {\n+\t\tpanic(\"s != is\")\n+\t}\n+\tif s != js {\n+\t\tpanic(\"s != js\")\n+\t}\n+\tif c != ic {\n+\t\tpanic(\"c != ic\")\n+\t}\n+\tif c != jc {\n+\t\tpanic(\"c != jc\")\n+\t}\n+\t// There are no tests for b and m, as slices and maps are not comparable by ==.\n+\tif z != iz {\n+\t\tpanic(\"z != iz\")\n+\t}\n+\tif z != jz {\n+\t\tpanic(\"z != jz\")\n+\t}\n+\tif p != ip {\n+\t\tpanic(\"p != ip\")\n+\t}\n+\tif p != jp {\n+\t\tpanic(\"p != jp\")\n+\t}\n+\tif pp != ipp {\n+\t\tpanic(\"pp != ipp\")\n+\t}\n+\t// pp does not implement J.\n+\n+\t// Test that non-interface types can be used as ...interface{} arguments.\n+\tif got := second(z, p, pp, u16, u32, u64, u128, f32, f64, c128, s, b, m, c); got != ip {\n+\t\tprintln(\"second: got\", got, \"want\", ip)\n+\t\tpanic(\"fail\")\n+\t}\n+\n+\t// Test that non-interface types can be sent on a chan interface{}.\n+\tconst n = 100\n+\tuc := make(chan interface{})\n+\tgo func() {\n+\t\tfor i := 0; i < n; i++ {\n+\t\t\tselect {\n+\t\t\tcase uc <- nil:\n+\t\t\tcase uc <- u32:\n+\t\t\tcase uc <- u64:\n+\t\t\tcase uc <- u128:\n+\t\t\t}\n+\t\t}\n+\t}()\n+\tfor i := 0; i < n; i++ {\n+\t\tif got := <-uc; got != nil && got != u32 && got != u64 && got != u128 {\n+\t\t\tprintln(\"recv: i\", i, \"got\", got)\n+\t\t\tpanic(\"fail\")\n+\t\t}\n+\t}\n+}"}, {"sha": "7280edf333cdc841b3d762d68a5684b66f6a0c3d", "filename": "gcc/testsuite/go.test/test/convert.go", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fconvert.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fconvert.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fconvert.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,9 +1,11 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out\n+// run\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n+// Test types of constant expressions, using reflect.\n+\n package main\n \n import \"reflect\""}, {"sha": "0f417a33804e3db4e787b2065e308583d5bf32ba", "filename": "gcc/testsuite/go.test/test/convert1.go", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fconvert1.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fconvert1.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fconvert1.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,9 +1,12 @@\n-// errchk $G -e $D/$F.go\n+// errorcheck\n \n // Copyright 2011 The Go Authors.  All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n+// Verify that illegal conversions involving strings are detected.\n+// Does not compile.\n+\n package main\n \n type Tbyte []byte"}, {"sha": "143aff04f6a472e7bb2728208ad30e4b1d93ac55", "filename": "gcc/testsuite/go.test/test/convert3.go", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fconvert3.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fconvert3.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fconvert3.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,9 +1,12 @@\n-// errchk $G $D/$F.go\n+// errorcheck\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n+// Verify allowed and disallowed conversions.\n+// Does not compile.\n+\n package main\n \n // everything here is legal except the ERROR line"}, {"sha": "8a6145d2a0bed8cc6623f5f79aa773df26a16f6c", "filename": "gcc/testsuite/go.test/test/convlit.go", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fconvlit.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fconvlit.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fconvlit.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,14 +1,15 @@\n-// errchk $G -e $D/$F.go\n+// errorcheck\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n+// Verify that illegal assignments with both explicit and implicit conversions of literals are detected.\n+// Does not compile.\n+\n package main\n \n-// explicit conversion of constants is work in progress.\n-// the ERRORs in this block are debatable, but they're what\n-// the language spec says for now.\n+// explicit conversion of constants\n var x1 = string(1)\n var x2 string = string(1)\n var x3 = int(1.5)     // ERROR \"convert|truncate\""}, {"sha": "c06bd74438373a92a900b3273dbd3a369a0f611a", "filename": "gcc/testsuite/go.test/test/convlit1.go", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fconvlit1.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fconvlit1.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fconvlit1.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,9 +1,12 @@\n-// errchk $G $D/$F.go\n+// errorcheck\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n+// Verify that illegal uses of composite literals are detected.\n+// Does not compile.\n+\n package main\n \n var a = []int { \"a\" };\t// ERROR \"conver|incompatible|cannot\""}, {"sha": "65ffb6ff8f5d573c84830a160f6d4ebeaeab0e79", "filename": "gcc/testsuite/go.test/test/copy.go", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fcopy.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fcopy.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fcopy.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,10 +1,10 @@\n-// $G $F.go && $L $F.$A && ./$A.out\n+// run\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// Semi-exhaustive test for copy()\n+// Semi-exhaustive test for the copy predeclared function.\n \n package main\n "}, {"sha": "2d56889b039abe6927d20f824616414997c782eb", "filename": "gcc/testsuite/go.test/test/crlf.go", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fcrlf.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fcrlf.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fcrlf.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,6 +1,4 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out >tmp.go &&\n-// $G tmp.go && $L tmp.$A && ./$A.out\n-// rm -f tmp.go\n+// runoutput\n \n // Copyright 2011 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "01768b89f3be7c9139754920cfe73da4c4284e39", "filename": "gcc/testsuite/go.test/test/ddd.go", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fddd.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fddd.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fddd.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,9 +1,11 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out\n+// run\n \n // Copyright 2010 The Go Authors.  All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n+// Test variadic functions and calls (dot-dot-dot).\n+\n package main\n \n func sum(args ...int) int {\n@@ -58,6 +60,10 @@ type U struct {\n \t*T\n }\n \n+type I interface {\n+\tSum(...int) int\n+}\n+\n func main() {\n \tif x := sum(1, 2, 3); x != 6 {\n \t\tprintln(\"sum 6\", x)\n@@ -205,7 +211,14 @@ func main() {\n \t\tprintln(\"i(=u).Sum\", x)\n \t\tpanic(\"fail\")\n \t}\n-\t/* TODO(rsc): Enable once nested method expressions work.\n+\tvar s struct {\n+\t\tI\n+\t}\n+\ts.I = &u\n+\tif x := s.Sum(2, 3, 5, 8); x != 18 {\n+\t\tprintln(\"s{&u}.Sum\", x)\n+\t\tpanic(\"fail\")\n+\t}\n \tif x := (*U).Sum(&U{}, 1, 3, 5, 2); x != 11 {\n \t\tprintln(\"(*U).Sum\", x)\n \t\tpanic(\"fail\")\n@@ -214,5 +227,4 @@ func main() {\n \t\tprintln(\"U.Sum\", x)\n \t\tpanic(\"fail\")\n \t}\n-\t*/\n }"}, {"sha": "07981af126acfe3544aeb9eaa782263d9094e95d", "filename": "gcc/testsuite/go.test/test/ddd1.go", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fddd1.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fddd1.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fddd1.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,9 +1,12 @@\n-// errchk $G -e $D/$F.go\n+// errorcheck\n \n // Copyright 2010 The Go Authors.  All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n+// Verify that illegal uses of ... are detected.\n+// Does not compile.\n+\n package main\n \n import \"unsafe\"\n@@ -19,6 +22,16 @@ var (\n \t_ = sum([]int{1}) // ERROR \"\\[\\]int literal.*as type int|incompatible\"\n )\n \n+func sum3(int, int, int) int { return 0 }\n+func tuple() (int, int, int) { return 1, 2, 3 }\n+\n+var (\n+\t_ = sum(tuple())\n+\t_ = sum(tuple()...) // ERROR \"multiple-value|[.][.][.]\"\n+\t_ = sum3(tuple())\n+\t_ = sum3(tuple()...) // ERROR \"multiple-value|[.][.][.]\" \"not enough\"\n+)\n+\n type T []T\n \n func funny(args ...T) int { return 0 }"}, {"sha": "a141a39c7667a53b59ec275f944c3eae840a8b1d", "filename": "gcc/testsuite/go.test/test/ddd2.go", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fddd2.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fddd2.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fddd2.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,9 +1,11 @@\n-// true\n+// skip\n \n // Copyright 2010 The Go Authors.  All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n+// This file is compiled and then imported by ddd3.go.\n+\n package ddd\n \n func Sum(args ...int) int {"}, {"sha": "d8de0a77e903abba31c6041427044df3eb56d49b", "filename": "gcc/testsuite/go.test/test/ddd3.go", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fddd3.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fddd3.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fddd3.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,9 +1,14 @@\n // $G $D/ddd2.go && $G $D/$F.go && $L $F.$A && ./$A.out\n \n+// NOTE: This test is not run by 'run.go' and so not run by all.bash.\n+// To run this test you must use the ./run shell script.\n+\n // Copyright 2010 The Go Authors.  All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n+// Test that variadic functions work across package boundaries.\n+\n package main\n \n import \"./ddd2\""}, {"sha": "6f84245f1522de0e6602179f1e6eb9cf86dfb58c", "filename": "gcc/testsuite/go.test/test/decl.go", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fdecl.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fdecl.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fdecl.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,10 +1,10 @@\n-// $G $F.go && $L $F.$A && ./$A.out\n+// run\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// Correct short declarations and redeclarations.\n+// Test correct short declarations and redeclarations.\n \n package main\n "}, {"sha": "ff53ab0d7c5a6627d7c3d3c87c8951156cccdc93", "filename": "gcc/testsuite/go.test/test/declbad.go", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fdeclbad.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fdeclbad.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fdeclbad.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,10 +1,11 @@\n-// errchk $G -e $F.go\n+// errorcheck\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// Incorrect short declarations and redeclarations.\n+// Test that incorrect short declarations and redeclarations are detected.\n+// Does not compile.\n \n package main\n \n@@ -37,6 +38,13 @@ func main() {\n \t\ti, f := f2() // ERROR \"redeclared|no new\"\n \t\t_, _, _ = i, f, s\n \t}\n+\t{\n+\t\t// multiline no new variables\n+\t\ti := f1\n+\t\ti := func() { // ERROR \"redeclared|no new|incompatible\"\n+\t\t}\n+\t\t_ = i\n+\t}\n \t{\n \t\t// single redeclaration\n \t\ti, f, s := f3()"}, {"sha": "2f67d356091fc650201e0a4b2f300d6b74d9bd15", "filename": "gcc/testsuite/go.test/test/defer.go", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fdefer.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fdefer.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fdefer.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,9 +1,11 @@\n-// $G $F.go && $L $F.$A && ./$A.out\n+// run\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n+// Test defer.\n+\n package main\n \n import \"fmt\""}, {"sha": "72c98b19fc960246cce7426bf875f1656b9f9ad7", "filename": "gcc/testsuite/go.test/test/deferprint.go", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fdeferprint.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fdeferprint.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fdeferprint.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,14 +1,17 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out 2>&1 | cmp - $D/$F.out\n+// cmpout\n \n // Copyright 2010 The Go Authors.  All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n+// Test that we can defer the predeclared functions print and println.\n+\n package main\n \n func main() {\n \tdefer println(42, true, false, true, 1.5, \"world\", (chan int)(nil), []int(nil), (map[string]int)(nil), (func())(nil), byte(255))\n \tdefer println(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20)\n-//\tdefer panic(\"dead\")\n+\t// Disabled so the test doesn't crash but left here for reference.\n+\t// defer panic(\"dead\")\n \tdefer print(\"printing: \")\n }"}, {"sha": "c91a33e9db283829519ecf50315f04b9b8995582", "filename": "gcc/testsuite/go.test/test/divide.go", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fdivide.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fdivide.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fdivide.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,10 +1,10 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out\n+// run\n \n // Copyright 2011 The Go Authors.  All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// divide corner cases\n+// Test divide corner cases.\n \n package main\n "}, {"sha": "cc4ffb000fd4f9081b97ace402b0b42abbcbd404", "filename": "gcc/testsuite/go.test/test/dwarf/linedirectives.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fdwarf%2Flinedirectives.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fdwarf%2Flinedirectives.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fdwarf%2Flinedirectives.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out\n+// run\n \n // Copyright 2011 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "175a09c7799734082fe0c69d704d40558f1eb952", "filename": "gcc/testsuite/go.test/test/dwarf/main.go", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fdwarf%2Fmain.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fdwarf%2Fmain.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fdwarf%2Fmain.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,5 +1,8 @@\n // $G $D/$F.go $D/z*.go && $L $F.$A && ./$A.out\n \n+// NOTE: This test is not run by 'run.go' and so not run by all.bash.\n+// To run this test you must use the ./run shell script.\n+\n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file."}, {"sha": "92a79a4e0d802d184f1b066d0a142a455e805e2f", "filename": "gcc/testsuite/go.test/test/empty.go", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fempty.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fempty.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fempty.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,9 +1,12 @@\n-// $G $D/$F.go\n+// compile\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n+// Test that top-level parenthesized declarations can be empty.\n+// Compiles but does not run.\n+\n package P\n \n import ( )"}, {"sha": "972374679ac83d387bb97dfe3f0a714e14ba3830", "filename": "gcc/testsuite/go.test/test/env.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fenv.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fenv.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fenv.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $F.go && $L $F.$A && ./$A.out\n+// run\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "06c779046b668fc75ca21bbbdb7519e22b1aa4e7", "filename": "gcc/testsuite/go.test/test/eof.go", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Feof.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Feof.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Feof.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,9 +1,12 @@\n-// $G $D/$F.go\n+// compile\n \n // Copyright 2010 The Go Authors.  All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n+// Test a source file does not need a final newline.\n+// Compiles but does not run.\n+\n // No newline at the end of this file.\n \n package main\n\\ No newline at end of file"}, {"sha": "2105b89080bad9e03ae1d6c4e3d97f2873276ef7", "filename": "gcc/testsuite/go.test/test/eof1.go", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Feof1.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Feof1.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Feof1.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,9 +1,12 @@\n-// $G $D/$F.go\n+// compile\n \n // Copyright 2010 The Go Authors.  All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-package main\n+// Test that a comment ending a source file does not need a final newline.\n+// Compiles but does not run.\n+\n+package eof1\n \n // No newline at the end of this comment.\n\\ No newline at end of file"}, {"sha": "e8ede52760aa4b6418b3585a0278ce1d27142f02", "filename": "gcc/testsuite/go.test/test/escape.go", "status": "modified", "additions": 24, "deletions": 9, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fescape.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fescape.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fescape.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,13 +1,13 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out\n+// run\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n package main\n \n-// check for correct heap-moving of escaped variables.\n-// it is hard to check for the allocations, but it is easy\n+// Test for correct heap-moving of escaped variables.\n+// It is hard to check for the allocations, but it is easy\n // to check that if you call the function twice at the\n // same stack level, the pointers returned should be\n // different.\n@@ -18,15 +18,15 @@ var allptr = make([]*int, 0, 100)\n \n func noalias(p, q *int, s string) {\n \tn := len(allptr)\n-\t*p = -(n+1)\n-\t*q = -(n+2)\n-\tallptr = allptr[0:n+2]\n+\t*p = -(n + 1)\n+\t*q = -(n + 2)\n+\tallptr = allptr[0 : n+2]\n \tallptr[n] = p\n \tallptr[n+1] = q\n \tn += 2\n \tfor i := 0; i < n; i++ {\n \t\tif allptr[i] != nil && *allptr[i] != -(i+1) {\n-\t\t\tprintln(\"aliased pointers\", -(i+1), *allptr[i], \"after\", s)\n+\t\t\tprintln(\"aliased pointers\", -(i + 1), *allptr[i], \"after\", s)\n \t\t\tallptr[i] = nil\n \t\t\tbad = true\n \t\t}\n@@ -141,15 +141,27 @@ func for_escapes2(x int, y int) (*int, *int) {\n \treturn p[0], p[1]\n }\n \n+func for_escapes3(x int, y int) (*int, *int) {\n+\tvar f [2]func() *int\n+\tn := 0\n+\tfor i := x; n < 2; i = y {\n+\t\tp := new(int)\n+\t\t*p = i\n+\t\tf[n] = func() *int { return p }\n+\t\tn++\n+\t}\n+\treturn f[0](), f[1]()\n+}\n+\n func out_escapes(i int) (x int, p *int) {\n \tx = i\n-\tp = &x\t// ERROR \"address of out parameter\"\n+\tp = &x // ERROR \"address of out parameter\"\n \treturn\n }\n \n func out_escapes_2(i int) (x int, p *int) {\n \tx = i\n-\treturn x, &x\t// ERROR \"address of out parameter\"\n+\treturn x, &x // ERROR \"address of out parameter\"\n }\n \n func defer1(i int) (x int) {\n@@ -187,6 +199,9 @@ func main() {\n \tp, q = for_escapes2(103, 104)\n \tchkalias(p, q, 103, \"for_escapes2\")\n \n+\tp, q = for_escapes3(105, 106)\n+\tchk(p, q, 105, \"for_escapes3\")\n+\n \t_, p = out_escapes(15)\n \t_, q = out_escapes(16)\n \tchk(p, q, 15, \"out_escapes\")"}, {"sha": "8db12d99131f77862e1dec65195eff60a8eca12e", "filename": "gcc/testsuite/go.test/test/escape2.go", "status": "modified", "additions": 170, "deletions": 3, "changes": 173, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fescape2.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fescape2.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fescape2.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,9 +1,12 @@\n-// errchk -0 $G -m -l $D/$F.go\n+// errorcheck -0 -m -l\n \n // Copyright 2010 The Go Authors.  All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n+// Test, using compiler diagnostic flags, that the escape analysis is working.\n+// Compiles but does not run.  Inlining is disabled.\n+\n package foo\n \n import (\n@@ -537,6 +540,19 @@ func foo74() {\n \t}\n }\n \n+// issue 3975\n+func foo74b() {\n+\tvar array [3]func()\n+\ts := []int{3, 2, 1} // ERROR \"\\[\\]int literal does not escape\"\n+\tfor i, v := range s {\n+\t\tvv := v // ERROR \"moved to heap: vv\"\n+\t\t// actually just escapes its scope\n+\t\tarray[i] = func() { // ERROR \"func literal escapes to heap\"\n+\t\t\tprintln(vv) // ERROR \"&vv escapes to heap\"\n+\t\t}\n+\t}\n+}\n+\n func myprint(y *int, x ...interface{}) *int { // ERROR \"x does not escape\" \"leaking param: y\"\n \treturn y\n }\n@@ -1048,7 +1064,7 @@ func foo122() {\n \n \tgoto L1\n L1:\n-\ti = new(int) // ERROR \"does not escape\"\n+\ti = new(int) // ERROR \"new.int. does not escape\"\n \t_ = i\n }\n \n@@ -1057,8 +1073,159 @@ func foo123() {\n \tvar i *int\n \n L1:\n-\ti = new(int) // ERROR \"escapes\"\n+\ti = new(int) // ERROR \"new.int. escapes to heap\"\n \n \tgoto L1\n \t_ = i\n }\n+\n+func foo124(x **int) {\t// ERROR \"x does not escape\"\n+\tvar i int\t// ERROR \"moved to heap: i\"\n+\tp := &i \t// ERROR \"&i escapes\"\n+\tfunc() {\t// ERROR \"func literal does not escape\"\n+\t\t*x = p\t// ERROR \"leaking closure reference p\"\n+\t}()\n+}\n+\n+func foo125(ch chan *int) {\t// ERROR \"does not escape\"\n+\tvar i int\t// ERROR \"moved to heap\"\n+\tp := &i \t// ERROR \"&i escapes to heap\"\n+\tfunc() {\t// ERROR \"func literal does not escape\"\n+\t\tch <- p\t// ERROR \"leaking closure reference p\"\n+\t}()\n+}\n+\n+func foo126() {\n+\tvar px *int  // loopdepth 0\n+\tfor {\n+\t\t// loopdepth 1\n+\t\tvar i int  // ERROR \"moved to heap\"\n+\t\tfunc() {  // ERROR \"func literal does not escape\"\n+\t\t\tpx = &i  // ERROR \"&i escapes\"\n+\t\t}()\n+\t}\n+}\n+\n+var px *int\n+\n+func foo127() {\n+\tvar i int  // ERROR \"moved to heap: i\"\n+\tp := &i  // ERROR \"&i escapes to heap\"\n+\tq := p\n+\tpx = q\n+}\n+\n+func foo128() {\n+\tvar i int\n+\tp := &i // ERROR \"&i does not escape\"\n+\tq := p\n+\t_ = q\n+}\n+\n+func foo129() {\n+\tvar i int  // ERROR \"moved to heap: i\"\n+\tp := &i  // ERROR \"&i escapes to heap\"\n+\tfunc() {  // ERROR \"func literal does not escape\"\n+\t\tq := p  // ERROR \"leaking closure reference p\"\n+\t\tfunc() {  // ERROR \"func literal does not escape\"\n+\t\t\tr := q  // ERROR \"leaking closure reference q\"\n+\t\t\tpx = r\n+\t\t}()\n+\t}()\n+}\n+\n+func foo130() {\n+\tfor {\n+\t\tvar i int  // ERROR \"moved to heap\"\n+\t\tfunc() {  // ERROR \"func literal does not escape\"\n+\t\t\tpx = &i  // ERROR \"&i escapes\" \"leaking closure reference i\"\n+\t\t}()\n+\t}\n+}\n+\n+func foo131() {\n+\tvar i int  // ERROR \"moved to heap\"\n+\tfunc() {  // ERROR \"func literal does not escape\"\n+\t\tpx = &i  // ERROR \"&i escapes\" \"leaking closure reference i\"\n+\t}()\n+}\n+\n+func foo132() {\n+\tvar i int  // ERROR \"moved to heap\"\n+\tgo func() {  // ERROR \"func literal escapes to heap\"\n+\t\tpx = &i  // ERROR \"&i escapes\" \"leaking closure reference i\"\n+\t}()\n+}\n+\n+func foo133() {\n+\tvar i int  // ERROR \"moved to heap\"\n+\tdefer func() {  // ERROR \"func literal does not escape\"\n+\t\tpx = &i  // ERROR \"&i escapes\" \"leaking closure reference i\"\n+\t}()\n+}\n+\n+func foo134() {\n+\tvar i int\n+\tp := &i  // ERROR \"&i does not escape\"\n+\tfunc() {  // ERROR \"func literal does not escape\"\n+\t\tq := p\n+\t\tfunc() {  // ERROR \"func literal does not escape\"\n+\t\t\tr := q\n+\t\t\t_ = r\n+\t\t}()\n+\t}()\n+}\n+\n+func foo135() {\n+\tvar i int  // ERROR \"moved to heap: i\"\n+\tp := &i  // ERROR \"&i escapes to heap\" \"moved to heap: p\"\n+\tgo func() {  // ERROR \"func literal escapes to heap\"\n+\t\tq := p  // ERROR \"&p escapes to heap\"\n+\t\tfunc() {  // ERROR \"func literal does not escape\"\n+\t\t\tr := q\n+\t\t\t_ = r\n+\t\t}()\n+\t}()\n+}\n+\n+func foo136() {\n+\tvar i int  // ERROR \"moved to heap: i\"\n+\tp := &i  // ERROR \"&i escapes to heap\" \"moved to heap: p\"\n+\tgo func() {  // ERROR \"func literal escapes to heap\"\n+\t\tq := p  // ERROR \"&p escapes to heap\" \"leaking closure reference p\"\n+\t\tfunc() {  // ERROR \"func literal does not escape\"\n+\t\t\tr := q // ERROR \"leaking closure reference q\"\n+\t\t\tpx = r\n+\t\t}()\n+\t}()\n+}\n+\n+func foo137() {\n+\tvar i int  // ERROR \"moved to heap: i\"\n+\tp := &i  // ERROR \"&i escapes to heap\"\n+\tfunc() {  // ERROR \"func literal does not escape\"\n+\t\tq := p  // ERROR \"leaking closure reference p\" \"moved to heap: q\"\n+\t\tgo func() { // ERROR \"func literal escapes to heap\"\n+\t\t\tr := q  // ERROR \"&q escapes to heap\"\n+\t\t\t_ = r\n+\t\t}()\n+\t}()\n+}\n+\n+func foo138() *byte {\n+\ttype T struct {\n+\t\tx [1]byte\n+\t}\n+\tt := new(T) // ERROR \"new.T. escapes to heap\"\n+\treturn &t.x[0] // ERROR \"&t.x.0. escapes to heap\"\n+}\n+\n+func foo139() *byte {\n+\ttype T struct {\n+\t\tx struct {\n+\t\t\ty byte\n+\t\t}\n+\t}\n+\tt := new(T) // ERROR \"new.T. escapes to heap\"\n+\treturn &t.x.y // ERROR \"&t.x.y escapes to heap\"\n+}"}, {"sha": "4c1989151465d0f69eefb41aa20a590e72715ab4", "filename": "gcc/testsuite/go.test/test/escape3.go", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fescape3.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fescape3.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fescape3.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,10 +1,10 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out\n+// run\n \n // Copyright 2011 The Go Authors.  All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// Test run-time behavior of escape analysis-related optimizations.\n+// Test the run-time behavior of escape analysis-related optimizations.\n \n package main\n "}, {"sha": "83bc8eb123dd976c93d2dfb3fefc131fb56efde1", "filename": "gcc/testsuite/go.test/test/escape4.go", "status": "added", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fescape4.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fescape4.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fescape4.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -0,0 +1,57 @@\n+// errorcheck -0 -m\n+\n+// Copyright 2010 The Go Authors.  All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+// Test, using compiler diagnostic flags, that the escape analysis is working.\n+// Compiles but does not run.  Inlining is enabled.\n+\n+package foo\n+\n+var p *int\n+\n+func alloc(x int) *int { // ERROR \"can inline alloc\" \"moved to heap: x\"\n+\treturn &x // ERROR \"&x escapes to heap\"\n+}\n+\n+var f func()\n+\n+func f1() {\n+\tp = alloc(2) // ERROR \"inlining call to alloc\" \"&x escapes to heap\" \"moved to heap: x\"\n+\n+\t// Escape analysis used to miss inlined code in closures.\n+\n+\tfunc() { // ERROR \"func literal does not escape\"\n+\t\tp = alloc(3) // ERROR \"inlining call to alloc\" \"&x escapes to heap\" \"moved to heap: x\"\n+\t}()\n+\n+\tf = func() { // ERROR \"func literal escapes to heap\"\n+\t\tp = alloc(3) // ERROR \"inlining call to alloc\" \"&x escapes to heap\" \"moved to heap: x\"\n+\t}\n+\tf()\n+}\n+\n+func f2() {} // ERROR \"can inline f2\"\n+\n+// No inline for panic, recover.\n+func f3() { panic(1) }\n+func f4() { recover() }\n+\n+func f5() *byte {\n+\ttype T struct {\n+\t\tx [1]byte\n+\t}\n+\tt := new(T) // ERROR \"new.T. escapes to heap\"\n+\treturn &t.x[0] // ERROR \"&t.x.0. escapes to heap\"\n+}\n+\n+func f6() *byte {\n+\ttype T struct {\n+\t\tx struct {\n+\t\t\ty byte\n+\t\t}\n+\t}\n+\tt := new(T) // ERROR \"new.T. escapes to heap\"\n+\treturn &t.x.y // ERROR \"&t.x.y escapes to heap\"\n+}"}, {"sha": "9104a57aaf6e77404a80759c0cb0e386226900e3", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug000.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug000.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug000.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug000.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out\n+// run\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "3493426d3774dbd0672535dc34ef66d39871dbd1", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug002.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug002.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug002.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug002.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out\n+// run\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "7165d9d2099f73106f184616b93fc9c38ed34801", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug003.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug003.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug003.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug003.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out\n+// run\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "fb207e9bc8e64385564cf55a9ec12f6a203e45de", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug004.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug004.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug004.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug004.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out\n+// run\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "3798f8321a12306868139b03e95f4e800cdc6bd6", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug005.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug005.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug005.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug005.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out\n+// run\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "6761682b39957db29d290122a654a08aa41b1d67", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug006.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug006.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug006.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug006.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out\n+// run\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "3d9fcb9e01e0c343d5d1a5abf648b74084a5081d", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug007.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug007.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug007.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug007.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out\n+// run\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "48f74a52d95963e0afd6cb6701a079ab150412e4", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug008.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug008.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug008.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug008.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out\n+// run\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "0467b297a2cb5b959917d9caf840ad0776211d5d", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug009.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug009.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug009.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug009.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out\n+// run\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "f54b1d54a861cc1a08545c874f2465746309b332", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug010.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug010.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug010.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug010.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out\n+// run\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "519c3585f06ba7d5e82bda5278cac96424d7902d", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug011.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug011.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug011.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug011.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out\n+// run\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "38efb6d979225ae94393e06d4aa8030f1f4cf7e6", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug012.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug012.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug012.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug012.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out\n+// run\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "045786bf7a891cdcc05650df9dbacb4ef2b4a604", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug013.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug013.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug013.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug013.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out\n+// run\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "a20f0310e7cce4b8207037ae324c90e278aa7bb4", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug014.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug014.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug014.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug014.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// errchk $G $D/$F.go\n+// errorcheck\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "d3a9f22ed0826e35c4d6d65bb11cff3ac3db0183", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug015.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug015.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug015.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug015.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// errchk $G $D/$F.go\n+// errorcheck\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "18fac78f34ac828e40af93cee5b3475caaafd3c7", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug016.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug016.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug016.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug016.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// errchk $G -e $D/$F.go\n+// errorcheck\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "2f5960d10446d6f7f5fa08bbe84a886b71f8e297", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug017.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug017.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug017.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug017.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out\n+// run\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "cde3f8679bea9f1cfc7d029c0aa5b508b4aef260", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug020.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug020.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug020.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug020.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go || echo BUG should compile\n+// compile\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "bf936e875cd54fc613ad255b23852c480eb75202", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug021.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug021.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug021.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug021.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out\n+// run\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "65a8bfe9a1989a732ba8ee4f84fda84484f8d1ea", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug022.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug022.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug022.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug022.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// errchk $G $D/$F.go\n+// errorcheck\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "9b211cd54f8c2b3ec3a9ad951102b5086900375a", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug023.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug023.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug023.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug023.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out\n+// run\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "2e235b7b46b08aebd0d8b0456fa05e06bade0c54", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug024.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug024.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug024.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug024.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out\n+// run\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "bfd03cc9555cd1789da5cd03366df6e8d0a5a462", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug026.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug026.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug026.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug026.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out\n+// run\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "874b47e7adc3f4ab88ef8127af72e5c04479e99f", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug027.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug027.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug027.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug027.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out\n+// run\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "2edf5a9106fb1fb73e5b71e7dad4cf611b0561db", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug028.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug028.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug028.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug028.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out\n+// run\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "ffd29e057a9bb377d97e198a4279e0e7e3458698", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug030.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug030.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug030.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug030.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// errchk $G $D/$F.go\n+// errorcheck\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "529e5ce84ce83ff0e5ca90185a50d94dee134392", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug031.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug031.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug031.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug031.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out\n+// run\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "ae41a1795370f4d8e6834547789daa0fb9b80c78", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug035.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug035.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug035.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug035.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// errchk $G $D/$F.go\n+// errorcheck\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "cc20516ce89488f3074c47c9135316406894cf19", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug036.go", "status": "removed", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e57a5c302be5611b20752d24ed4862be007e206/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug036.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e57a5c302be5611b20752d24ed4862be007e206/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug036.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug036.go?ref=4e57a5c302be5611b20752d24ed4862be007e206", "patch": "@@ -1,13 +0,0 @@\n-// ! $G $D/$F.go >/dev/null\n-// # ignoring error messages...\n-\n-// Copyright 2009 The Go Authors. All rights reserved.\n-// Use of this source code is governed by a BSD-style\n-// license that can be found in the LICENSE file.\n-\n-package main\n-\n-func main() {\n-\ts := float(0);\n-\ts := float(0);  // BUG redeclaration\n-}"}, {"sha": "f17fb3fd74cc0a283621d44bc800d4951d1ff4d6", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug037.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug037.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug037.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug037.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// errchk $G $D/$F.go\n+// errorcheck\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "7585376a36fbf013dd3c0f8213bee76a5b6c1b30", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug038.go", "status": "removed", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e57a5c302be5611b20752d24ed4862be007e206/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug038.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e57a5c302be5611b20752d24ed4862be007e206/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug038.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug038.go?ref=4e57a5c302be5611b20752d24ed4862be007e206", "patch": "@@ -1,13 +0,0 @@\n-// ! $G $D/$F.go >/dev/null\n-// # ignoring error messages...\n-\n-// Copyright 2009 The Go Authors. All rights reserved.\n-// Use of this source code is governed by a BSD-style\n-// license that can be found in the LICENSE file.\n-\n-package main\n-\n-func main() {\n-\tvar z [3]byte;\n-\tz := new([3]byte);  // BUG redeclaration\n-}"}, {"sha": "d34f5e62e479c651835ada704e2882f696dcb122", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug039.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug039.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug039.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug039.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// errchk $G $D/$F.go\n+// errorcheck\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "007f47f9f56a3cd0efe840aaa608b996e30ee570", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug040.go", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug040.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug040.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug040.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,11 +1,11 @@\n-// ! $G $D/$F.go >/dev/null\n-// # ignoring error messages...\n+// errorcheck\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n package main\n \n-func main (x, x int) {  // BUG redeclaration error\n+func f (x,\t\t// GCCGO_ERROR \"previous\"\n+\tx int) {\t// ERROR \"redeclared|redefinition\" \"duplicate\"\n }"}, {"sha": "c66a2411a89201520dc989c04060171b89734e45", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug045.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug045.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug045.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug045.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out\n+// run\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "219e91d537b42788da0a72c640e7fc139493ba05", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug046.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug046.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug046.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug046.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// errchk $G $D/$F.go\n+// errorcheck\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "7619ae73c6680b87d7181042aeb978aade367fef", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug047.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug047.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug047.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug047.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out\n+// run\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "48ad751e2c67d25fb23cd528fafe70e2f5dc72e8", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug048.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug048.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug048.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug048.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out\n+// run\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "51990f2dfbcd2621a17214798be3a97e3ad638d3", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug049.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug049.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug049.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug049.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// errchk $G $D/$F.go\n+// errorcheck\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "aba68b1dcbb428e89fce247ab982bf3e735ad461", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug050.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug050.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug050.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug050.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// errchk $G $D/$F.go\n+// errorcheck\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "c4ba2eff67587d10a498ee2a71b60c63594bfb3e", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug051.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug051.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug051.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug051.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// errchk $G $D/$F.go\n+// errorcheck\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "440a00ebebdf3f11bfda2373b99ee92f91dc5a52", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug052.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug052.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug052.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug052.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out\n+// run\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "00625fd7c30432ec5f73b1e234bf2e10adc564a1", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug053.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug053.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug053.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug053.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out\n+// run\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "01590585c53d6b3d7a1b97783edbf15684c8b204", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug054.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug054.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug054.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug054.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out\n+// run\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "c3073cc1eac367b33976bafef6d67141937d3ba1", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug055.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug055.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug055.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug055.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out\n+// run\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "13eac29204745b3ad1a7028fcc9cf1de5f1c2d9a", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug056.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug056.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug056.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug056.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out\n+// run\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "19b8651a547b844ddeb114e834d1d94b1fc5fcd5", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug057.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug057.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug057.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug057.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go\n+// compile\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "2b97dbf7c0e7607457f6248fb06d35eabb6e4428", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug058.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug058.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug058.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug058.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out\n+// run\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "6f64b9e0b16ddc1213cb8606c6a6c491dc683852", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug059.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug059.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug059.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug059.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out\n+// run\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "8260729056bbe8130353af24dcba1cd631b120e0", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug060.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug060.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug060.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug060.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out\n+// run\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "ae99b186d81379f8c9e6f64e556f0c0e5deabf85", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug061.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug061.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug061.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug061.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out\n+// run\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "1cc50036559d661000ab187dff72c3e48e207387", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug062.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug062.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug062.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug062.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// errchk $G $D/$F.go\n+// errorcheck\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "a3ae3f0962074352b1905bd458ab1ba9dac39164", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug063.go", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug063.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug063.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug063.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,8 +1,8 @@\n-// $G $D/$F.go\n+// compile\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-package main\n+package bug063\n const c = 0 ^ 0"}, {"sha": "d8b3bea9a60874cbc3f4a9ea51e07de382031f89", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug064.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug064.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug064.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug064.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go || echo BUG: compilation should succeed\n+// compile\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "a1e3b08bbaed6c5a14e1cb20abcefd340126e161", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug065.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug065.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug065.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug065.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out\n+// run\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "db3d7f86028bfe4829045b32e178b19f72c310fb", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug066.go", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug066.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug066.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug066.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,10 +1,10 @@\n-// $G $D/$F.go\n+// compile\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-package main\n+package bug066\n \n type Scope struct {\n \tentries map[string] *Object;"}, {"sha": "aaeefb0ba16fa53310c7ffffccc36e534ace7dee", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug067.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug067.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug067.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug067.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out\n+// run\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "2cb10ab3a190a4ba602f513a86f20f2d3eaec530", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug068.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug068.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug068.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug068.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// errchk $G $D/$F.go\n+// errorcheck\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "7b07b773d4bb118bcc054e92c2f6170b15008350", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug069.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug069.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug069.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug069.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go\n+// compile\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "3f3ffcf615151603ab88e360d2612d1d5a2f06d7", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug070.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug070.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug070.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug070.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out\n+// run\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "ec38f7a9799cdc052aac3039e52ecf919fd228f0", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug071.go", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug071.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug071.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug071.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,10 +1,10 @@\n-// $G $D/$F.go || echo BUG: compiler crashes\n+// compile\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-package main\n+package bug071\n \n type rat struct  {\n \tden  int;"}, {"sha": "05ad93dac2ded82d078a8a2ac903e317b4556e99", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug072.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug072.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug072.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug072.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// errchk $G $D/$F.go\n+// errorcheck\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "49b47ae464915450aeedda0a32ede85b96e831a4", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug073.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug073.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug073.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug073.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// errchk $G $D/$F.go\n+// errorcheck\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "fb789cb4c1b511ea681fd91eccc6a6102b3a8922", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug074.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug074.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug074.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug074.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// errchk $G $D/$F.go\n+// errorcheck\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "d0b7d14e71bd77943a540e3bdc1be38e36d521a4", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug075.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug075.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug075.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug075.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out\n+// run\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "60aaa976083352e4e5a0492aea99aff8c881aacc", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug076.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug076.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug076.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug076.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go && $L $F.$A\n+// build\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "80581a8a3b6ccec380c6401596364ef4e0134ccb", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug077.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug077.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug077.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug077.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go || echo BUG: should compile\n+// compile\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "1041b858c84acb6558dfdd8e87cf37b3947c6cdc", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug078.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug078.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug078.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug078.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out\n+// run\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "32b2c53b9e76e32067716dcb3bca3f487d9f2f3b", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug080.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug080.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug080.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug080.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go || echo BUG: fails incorrectly\n+// compile\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "c25d2883704945e5cfa988ed9dc0ddda639222ad", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug081.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug081.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug081.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug081.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// errchk $G $D/$F.go\n+// errorcheck\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "e184ef1930156395e3ef69c9b11f6996680d6ae7", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug082.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug082.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug082.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug082.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out\n+// run\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "8bdecaadb514247450b52d8460a0bc3c3a141447", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug083.go", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug083.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug083.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug083.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,5 +1,8 @@\n // $G $D/$F.dir/bug0.go && errchk $G $D/$F.dir/bug1.go\n \n+// NOTE: This test is not run by 'run.go' and so not run by all.bash.\n+// To run this test you must use the ./run shell script.\n+\n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file."}, {"sha": "700a674339dbe64318a3f228780b01015bfc3197", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug084.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug084.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug084.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug084.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out\n+// run\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "93ae7e0a496788f54adfb76d19ddf0175d2c8990", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug085.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug085.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug085.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug085.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// errchk $G $D/$F.go\n+// errorcheck\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "fc69e0e3fc7a34cdc20b04993032d0de767bc97d", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug086.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug086.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug086.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug086.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// errchk $G $D/$F.go\n+// errorcheck\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "67e7210cdb38ba6b09d9979d1b8c5aa24299755d", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug087.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug087.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug087.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug087.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go || echo BUG: fails incorrectly\n+// compile\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "3b99da84d4ba1d6a0ae65397970314f5d08475f9", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug088.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug088.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug088.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug088.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.dir/bug0.go && $G $D/$F.dir/bug1.go || echo BUG: fails incorrectly\n+// compiledir\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "e88f17babb808ae6b057f844aaa809ac9f33f616", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug089.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug089.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug089.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug089.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go\n+// compile\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "320bd57f5c17fb9cf6ff0b17f598a02ac6c9af9a", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug090.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug090.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug090.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug090.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// errchk $G $D/$F.go\n+// errorcheck\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "dbb1287a151777ba14dd26b633ed9040288243c8", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug091.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug091.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug091.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug091.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// errchk $G $D/$F.go\n+// errorcheck\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "8027d941ea485dd4c7aed4371e092a38fbec3860", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug092.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug092.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug092.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug092.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out\n+// run\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "acd94466f599f43abcc61ec0b66833c8108753a2", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug093.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug093.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug093.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug093.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out || echo BUG: fails incorrectly\n+// run\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "3ef11da3d3a24212de57cd972197482a7be0f1a4", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug094.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug094.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug094.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug094.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go || echo BUG: fails incorrectly\n+// compile\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "411ba74e0caedfa078acdf6e68eb53d7f22d8e90", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug096.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug096.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug096.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug096.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go || echo BUG should compile\n+// compile\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "a067e0f57aa08e4c64652e7ec3035c19f1d25061", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug097.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug097.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug097.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug097.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out || echo BUG wrong result\n+// run\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "eb4ee4de03fef25f13e47ccc84b0727253e9deaf", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug098.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug098.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug098.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug098.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go || echo BUG should compile\n+// compile\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "03a5c454b0b17191129d1d7b256ac8cbb590fbed", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug099.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug099.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug099.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug099.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out || echo BUG should not crash\n+// run\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "82e496a8a6ae2d03eb67ff5ecfd3991ffa62e906", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug101.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug101.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug101.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug101.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out\n+// run\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "f1c2324b783ea26bc0ae33605eddfd70313e4b11", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug102.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug102.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug102.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug102.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out || echo BUG: should not crash\n+// run\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "1cb710e36887f77754bb4cb3407c0a95c6996dd8", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug103.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug103.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug103.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug103.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// errchk $G $D/$F.go\n+// errorcheck\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "f0c19a8aa752828ada2e4e9da2dd4e03907fb871", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug104.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug104.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug104.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug104.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// errchk $G $D/$F.go\n+// errorcheck\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "3b99da84d4ba1d6a0ae65397970314f5d08475f9", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug106.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug106.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug106.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug106.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.dir/bug0.go && $G $D/$F.dir/bug1.go || echo BUG: failed to compile\n+// compiledir\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "dcd8e9d1138f4481eb5399b7f476a70b6ed49da6", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug107.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug107.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug107.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug107.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// errchk $G $D/$F.go\n+// errorcheck\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "9f2a27ebd97431e0d3c9b42499ab896473f2875d", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug108.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug108.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug108.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug108.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// errchk $G $D/$F.go\n+// errorcheck\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "556dc34dde70769affa31744ba73ebcb611ba249", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug109.go", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug109.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug109.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug109.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,10 +1,10 @@\n-// $G $D/$F.go || echo BUG: should compile\n+// compile\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-package main\n+package bug109\n \n func f(a float64) float64 {\n \te := 1.0"}, {"sha": "5528ba3f16d39b40b72b858c7ef1d37eedfa897f", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug110.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug110.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug110.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug110.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go && $L $F.$A || echo BUG: const bug\n+// build\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "d977bd54fb1248e9e4ed7fd140b08f01a20901ce", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug111.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug111.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug111.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug111.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out || echo BUG should compile and run\n+// run\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "e2ed5c0d41e54538e6db3522e30eaffa6ec4af75", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug112.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug112.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug112.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug112.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go || echo BUG should compile\n+// compile\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "a1e61cb36fd83228267a3d02ee338d7a7c5e1d73", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug113.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug113.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug113.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug113.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out\n+// run\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "99e66a2ddc1154b0737664ba0c1cc74b5f676ec0", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug114.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug114.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug114.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug114.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go && $L $F.$A && (./$A.out || echo BUG: bug114 failed)\n+// run\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "7cc3dc40a604bc8e824061df132c424397148d04", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug115.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug115.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug115.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug115.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go || echo BUG: bug115 should compile\n+// compile\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "5d8e52031509b969464199a70c38c8ac158f50c8", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug116.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug116.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug116.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug116.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out || echo BUG: bug116\n+// run\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "038826cbce836eb0ba52994ef180b43835161c5e", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug117.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug117.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug117.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug117.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// errchk $G $D/$F.go\n+// errorcheck\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "198b8ff2801d76f86549f082c4535de0bd403a3d", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug118.go", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug118.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug118.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug118.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,10 +1,10 @@\n-// $G $D/$F.go || echo BUG should compile\n+// compile\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-package main\n+package bug118\n \n func Send(c chan int) int {\n \tselect {"}, {"sha": "6f2514c24ec750336cb785fe58961821c38c2232", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug119.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug119.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug119.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug119.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out || echo BUG: should not fail\n+// run\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "58355e53de951479be053f51811be84e68540a38", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug120.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug120.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug120.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug120.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out || echo BUG: bug120\n+// run\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "5adf9827fa12de32f4858765cd763dbca2f06a9b", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug121.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug121.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug121.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug121.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// errchk $G $D/$F.go\n+// errorcheck\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "fb4eb9f3adebed21309c3940a568e071c181a088", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug122.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug122.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug122.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug122.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// errchk $G $D/$F.go\n+// errorcheck\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "f38551a9142373606d52e9718e6e5b71837eaeee", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug123.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug123.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug123.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug123.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// errchk $G $D/$F.go\n+// errorcheck\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "f5d9763412984e81c15af58821af9479cf460be5", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug126.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug126.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug126.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug126.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// errchk $G $D/$F.go\n+// errorcheck\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "f8ea99470c300e5f5ea1224c4c954e5e4617a47d", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug127.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug127.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug127.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug127.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// errchk $G $D/$F.go\n+// errorcheck\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "e8cbea079feb912611468dbe35aaa65714dd761c", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug128.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug128.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug128.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug128.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out || echo BUG: should compile\n+// run\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "157ce78ff729b7573387f5e5e85668b4a06bd0f6", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug129.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug129.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug129.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug129.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go || echo BUG129\n+// compile\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "16b029af34ff78fa1b44e6194f9ceaae26f5b2b1", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug130.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug130.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug130.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug130.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out || echo BUG: should run\n+// run\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "0ebbd26069e16ba2f2e57abcd27cbcf874f66b98", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug131.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug131.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug131.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug131.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// errchk $G $D/$F.go\n+// errorcheck\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "e334566c79b9c157fab2d7b3f3e70e84a229d61d", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug132.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug132.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug132.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug132.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// errchk $G $D/$F.go\n+// errorcheck\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "a6baac26ca330062e65659a782a11dbd0e4c1bf2", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug133.go", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug133.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug133.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug133.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,5 +1,8 @@\n // $G $D/$F.dir/bug0.go && $G $D/$F.dir/bug1.go && errchk $G $D/$F.dir/bug2.go\n \n+// NOTE: This test is not run by 'run.go' and so not run by all.bash.\n+// To run this test you must use the ./run shell script.\n+\n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file."}, {"sha": "34d234e2247955f3bef76a37678610aef657d3a1", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug135.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug135.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug135.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug135.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go || echo BUG: should compile\n+// compile\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "bea9bac083282a88fbb0bcb89f0de8174fc64e0d", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug136.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug136.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug136.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug136.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// errchk $G $D/$F.go\n+// errorcheck\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "48368177a2395a8f6c482f67e05a34963ebb84c7", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug137.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug137.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug137.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug137.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go || echo BUG should compile\n+// compile\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "095e5c93cc36ebc987e6690b044bf22a415d9594", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug139.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug139.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug139.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug139.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go || echo BUG should compile\n+// compile\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "8caf1d7d9f05a8ada9779b09715ed94673a2f4ce", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug140.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug140.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug140.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug140.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go || echo BUG should compile\n+// compile\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "81ba6f1b561e64dfc370c9da63de4be9584b1fe0", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug141.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug141.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug141.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug141.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out || echo BUG: should run\n+// run\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "e28d889a93d1308f5f07ca6355d554a740219cf8", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug142.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug142.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug142.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug142.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out || echo BUG: bug142\n+// run\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "a43e406676aa3a20f02256b5e38c48091092b656", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug143.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug143.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug143.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug143.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go || echo BUG should compile\n+// compile\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "9f8ec7667ccecbaceafb69fc8c1ea800ee5d6d22", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug144.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug144.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug144.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug144.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go || echo BUG should compile\n+// compile\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "602fe7426df2f7c3089b0bb0df20cc1ef12416d5", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug145.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug145.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug145.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug145.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go || echo BUG should compile\n+// compile\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "e29f910ba50055061b101d12cd4b7753c4420f66", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug146.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug146.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug146.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug146.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// errchk $G $D/$F.go\n+// errorcheck\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "e8b3d243949f2c09b0976edf1da5b4c433bfa5b1", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug147.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug147.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug147.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug147.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out || echo BUG: bug147\n+// run\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "b67870b12a61d0bd3bfe4fdb9932ca59ea7fb4ba", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug148.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug148.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug148.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug148.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out\n+// run\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "78b687e9718cf72fd716a43f7fdf2ae2e7d4299f", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug149.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug149.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug149.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug149.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go || echo BUG: should compile\n+// compile\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "b565ef73dd8b823aea9f48b0c3d56ee875f01ba8", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug150.go", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug150.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug150.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug150.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,10 +1,10 @@\n-// $G $D/$F.go || echo BUG: bug150 \n+// compile\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-package main\n+package bug150\n \n type T int\n func (t T) M()"}, {"sha": "d9f5e021c974f60362e9e3ae4a9b5e5912eff570", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug151.go", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug151.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug151.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug151.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,10 +1,10 @@\n-// $G $D/$F.go || echo BUG: bug151\n+// compile\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-package main\n+package bug151\n \n type S string\n "}, {"sha": "a4baccda779e267a0492a7b9dc392847bb4173ed", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug1515.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug1515.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug1515.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug1515.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out\n+// run\n \n // Copyright 2011 The Go Authors.  All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "45b9b3d53038e18eeaea789582c4ad889637fd62", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug152.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug152.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug152.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug152.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out\n+// run\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "a2cfd4accdbc128cea1c75098eceff4be7999620", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug154.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug154.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug154.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug154.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out || echo BUG: should not panic\n+// run\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "8872e978daae6d605b01541ca04a549e6c46bc98", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug155.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug155.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug155.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug155.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go && $L $F.$A || echo BUG: bug155\n+// build\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "f26658729f82e455098ddacec3c6c6fee32ffba0", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug156.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug156.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug156.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug156.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go || echo BUG: bug156\n+// compile\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "1072d7df49808bfd1ea9150261c207be96b7cf37", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug157.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug157.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug157.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug157.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go || echo BUG: should compile\n+// compile\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "496d7e0db00b2ca11b7cc0aecb7bd6018eaea41c", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug158.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug158.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug158.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug158.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go || echo BUG: should compile\n+// compile\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "92d5345635d7a4a8ee631883d5da286016680de9", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug159.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug159.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug159.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug159.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out || echo BUG: bug159\n+// run\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "c5e166a0cf90a11c2d1b595fb8fb20e512cf3e94", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug160.go", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug160.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug160.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug160.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,5 +1,8 @@\n // $G $D/bug160.dir/x.go && $G $D/bug160.dir/y.go && $L y.$A && ./$A.out\n \n+// NOTE: This test is not run by 'run.go' and so not run by all.bash.\n+// To run this test you must use the ./run shell script.\n+\n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file."}, {"sha": "aab58ee895344ae7b0f27c0c53444aeb7e9754cd", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug161.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug161.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug161.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug161.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go || echo BUG: should compile\n+// compile\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "d69f6bef03a70d77327eec3692731fd49727f165", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug163.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug163.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug163.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug163.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// errchk $G $D/$F.go\n+// errorcheck\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "888b495eec3f238df18036b4a9d6c216b3f19ff8", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug164.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug164.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug164.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug164.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go\n+// compile\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "f8d50af13fdf7cba799169c684bda747b2c49650", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug165.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug165.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug165.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug165.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// errchk $G $D/$F.go\n+// errorcheck\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "3a50e6ff0c12730e398601eb470971b24496af00", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug167.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug167.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug167.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug167.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go && $L $F.$A || echo BUG: bug167\n+// build\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "53301fa81ef4d689b1cf2c82f94fb7690b851c59", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug168.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug168.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug168.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug168.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out || echo BUG: bug168\n+// run\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "f63c2f3e1af85f619d1c4c2458ebc26d800b5fdf", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug169.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug169.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug169.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug169.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// errchk $G $D/$F.go\n+// errorcheck\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "11ff5ff3c7563802a084e353d7ca11100f1b4b33", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug170.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug170.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug170.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug170.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// errchk $G $D/$F.go\n+// errorcheck\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "49bbb3b892d8288320b0647926dff59537ee6c26", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug171.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug171.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug171.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug171.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// errchk $G $D/$F.go\n+// errorcheck\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "4dbe7930f907f0ddf99c092d0850687266ba9d11", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug172.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug172.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug172.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug172.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// errchk $G $D/$F.go\n+// errorcheck\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "6479bb2531b26880f6a4bb02d66bf8831e086707", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug173.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug173.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug173.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug173.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go || echo BUG: bug173\n+// compile\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "448f630867cf5af19a3a672263010427af56596c", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug174.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug174.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug174.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug174.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go || echo BUG: bug174\n+// compile\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "5fca4b22bc5539ba3f91f580d232aacab90292a5", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug175.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug175.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug175.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug175.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// errchk $G $D/$F.go\n+// errorcheck\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "82f8dba0ad0b5ec71d97df454ddd10907a22d171", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug176.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug176.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug176.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug176.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// errchk $G $D/$F.go\n+// errorcheck\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "9f2c1ea52f05c79184a114203ee0a0b767331aa5", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug177.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug177.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug177.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug177.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out\n+// run\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "2bae5a1c5645d3d513e10b8f5822569a3a762cf0", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug178.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug178.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug178.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug178.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out\n+// run\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "dea82fe0a06accd0d5afc429a040c6853fa903db", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug179.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug179.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug179.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug179.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// errchk $G -e $D/$F.go\n+// errorcheck\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "cfdcfab26711ae75c11c0e71c7f8d8ddd6b01441", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug180.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug180.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug180.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug180.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out\n+// run\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "4827e9cf03d966410827258ec38ad0e33cc029a8", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug181.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug181.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug181.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug181.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// errchk $G $D/$F.go\n+// errorcheck\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "e02dc59f8601f11c29e9eeedc4661b99ff5df4f0", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug182.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug182.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug182.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug182.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// errchk $G $D/$F.go\n+// errorcheck\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "dc9f5356e03c1801334bc416812c78f041096dd7", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug183.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug183.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug183.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug183.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-//errchk $G $D/$F.go\n+// errorcheck\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "c084ea5cf5ecae3644c431564d309bf4f393a149", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug184.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug184.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug184.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug184.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out\n+// run\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "890900600f43c57c015d67727e42897a6ccb08f7", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug185.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug185.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug185.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug185.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out\n+// run\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "5aefd7e5cfd709d7786605d47332302404980a8b", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug186.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug186.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug186.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug186.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// errchk $G $D/$F.go\n+// errorcheck\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "5c3c2bb1e170d21dddb3a5514ea3b703458a3797", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug187.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug187.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug187.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug187.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out\n+// run\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "550614789456ee060ca951cf209d04c44e6c7a91", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug188.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug188.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug188.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug188.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// errchk $G $D/$F.go\n+// errorcheck\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "9e412c66d86812d16e5b9bc143e71b5c41379e4b", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug189.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug189.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug189.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug189.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// errchk $G $D/$F.go\n+// errorcheck\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "bb2d81cbb9abd88dd8bc2a06fdeb277e5374f654", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug190.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug190.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug190.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug190.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go || echo BUG: should compile\n+// compile\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "11a6e58e516f13c6241839cc075b01063f0585fd", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug191.go", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug191.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug191.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug191.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,5 +1,8 @@\n // $G $D/bug191.dir/a.go && $G $D/bug191.dir/b.go && $G $D/$F.go && $L $F.$A\n \n+// NOTE: This test is not run by 'run.go' and so not run by all.bash.\n+// To run this test you must use the ./run shell script.\n+\n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file."}, {"sha": "679aaed1f2d05eb75c5240744276c6dd1b125899", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug192.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug192.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug192.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug192.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// errchk $G $D/$F.go\n+// errorcheck\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "64e06da897516c359a0493c725e5fd926eac046b", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug193.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug193.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug193.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug193.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// errchk $G $D/$F.go\n+// errorcheck\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "2976529031140b62e0de2e5ee6913dcb509b8e81", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug194.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug194.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug194.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug194.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out || echo BUG should compile and run\n+// run\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "85367cb8882939edc758352b073620cb4b1d523d", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug195.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug195.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug195.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug195.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// errchk $G $D/$F.go\n+// errorcheck\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "5255de1892e680fbb8f1065e33e1c660c5891843", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug196.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug196.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug196.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug196.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out || echo BUG: bug196\n+// run\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "4a9f103ea00b35d3e6d8deb12812cbaef2ad994a", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug197.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug197.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug197.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug197.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// errchk $G $D/$F.go\n+// errorcheck\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "73bb64688aeba2fab56c63a361ff156c0d190fad", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug198.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug198.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug198.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug198.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// errchk $G $D/$F.go\n+// errorcheck\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "f69f23b5913366f8f1638282351cb641656a99a7", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug199.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug199.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug199.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug199.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out\n+// run\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "da628faf5d0921fb68847e7888ec0de0de95a3ad", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug200.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug200.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug200.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug200.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// errchk $G $D/$F.go\n+// errorcheck\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "59248231aea7bb212267be8fe2804653e0bc9278", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug201.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug201.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug201.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug201.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out\n+// run\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "49871e3e06151c4dce1f1202cf494108c90014b0", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug202.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug202.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug202.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug202.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out || echo BUG should run\n+// run\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "2fb084bd65820fa0a1ab0d33f4821d9797b38b97", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug203.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug203.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug203.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug203.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out\n+// run\n \n // Copyright 2009 The Go Authors.  All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "8810a5f921b443ac55a01f57c9d8b501a0759252", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug204.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug204.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug204.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug204.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out\n+// run\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "de17cb698416c1988dc53682f9c421086b85862b", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug205.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug205.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug205.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug205.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// errchk $G $D/$F.go\n+// errorcheck\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "c2382acf13ff5119c7f03f55413785545c4043b7", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug206.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug206.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug206.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug206.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out >/dev/null 2>&1 || echo BUG: bug206\n+// cmpout\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "aa47d0d46d47a06090f436b0b851b76bb6f3b6e2", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug206.out", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug206.out", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug206.out", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug206.out?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -0,0 +1,2 @@\n+0\n+0"}, {"sha": "50923df1c23f2785b0ec7711b96992e07c3e3d00", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug207.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug207.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug207.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug207.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// $G $D/$F.go && $L $F.$A && ./$A.out\n+// run\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "09ec0afbedf566dc16f970593b7a7eff3001688a", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug208.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug208.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug208.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug208.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// errchk $G $D/$F.go\n+// errorcheck\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "52faf1fb925fbd3a22e27de38b661db9e31a127a", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug209.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug209.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug209.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug209.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// errchk $G $D/$F.go\n+// errorcheck\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "b150479276366f1ce9e0ed4132371f7360be7b8d", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug211.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug211.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug211.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug211.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// errchk $G $D/$F.go\n+// errorcheck\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}, {"sha": "4e58b91ec05997daf3f526b7ff06eb82b66adf0d", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug212.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug212.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64ca2cebde1b42fbb52b7325af823cb41989125/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug212.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug212.go?ref=b64ca2cebde1b42fbb52b7325af823cb41989125", "patch": "@@ -1,4 +1,4 @@\n-// errchk $G $D/$F.go\n+// errorcheck\n \n // Copyright 2009 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style"}]}