{"sha": "a50e9b2f5d4be81e7da7cf55e6ade4c6c575de03", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTUwZTliMmY1ZDRiZTgxZTdkYTdjZjU1ZTZhZGU0YzZjNTc1ZGUwMw==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2017-12-22T17:03:16Z"}, "committer": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2017-12-22T17:03:16Z"}, "message": "[PR 82027] Also stream opt_info of former_clones\n\n2017-12-22  Martin Jambor  <mjambor@suse.cz>\n\n\tPR lto/82027\n\t* lto-cgraph.c (output_cgraph_opt_summary_p): Also check former\n\tclones.\n\ntestsuite/\n\t* g++.dg/lto/pr82027_0.C: New test.\n\nFrom-SVN: r255978", "tree": {"sha": "24dc8c5619b99187259be97646cc81c8b04e937d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/24dc8c5619b99187259be97646cc81c8b04e937d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a50e9b2f5d4be81e7da7cf55e6ade4c6c575de03", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a50e9b2f5d4be81e7da7cf55e6ade4c6c575de03", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a50e9b2f5d4be81e7da7cf55e6ade4c6c575de03", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a50e9b2f5d4be81e7da7cf55e6ade4c6c575de03/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d7b24d5556b2dae71e1ed3c907d33db21cd2ce72", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7b24d5556b2dae71e1ed3c907d33db21cd2ce72", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7b24d5556b2dae71e1ed3c907d33db21cd2ce72"}], "stats": {"total": 86, "additions": 85, "deletions": 1}, "files": [{"sha": "fed24f776d5ceeec7c8f3bb0cbfeb86766c26c60", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a50e9b2f5d4be81e7da7cf55e6ade4c6c575de03/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a50e9b2f5d4be81e7da7cf55e6ade4c6c575de03/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a50e9b2f5d4be81e7da7cf55e6ade4c6c575de03", "patch": "@@ -1,3 +1,9 @@\n+2017-12-22  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR lto/82027\n+\t* lto-cgraph.c (output_cgraph_opt_summary_p): Also check former\n+\tclones.\n+\n 2017-12-22  Julia Koval  <julia.koval@intel.com>\n \tSebastian Peryt <sebastian.peryt@intel.com>\n "}, {"sha": "ed3df15b14389535f0f1b997bac8e72544ea58e5", "filename": "gcc/lto-cgraph.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a50e9b2f5d4be81e7da7cf55e6ade4c6c575de03/gcc%2Flto-cgraph.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a50e9b2f5d4be81e7da7cf55e6ade4c6c575de03/gcc%2Flto-cgraph.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-cgraph.c?ref=a50e9b2f5d4be81e7da7cf55e6ade4c6c575de03", "patch": "@@ -1958,7 +1958,7 @@ input_offload_tables (bool do_force_output)\n static int\n output_cgraph_opt_summary_p (struct cgraph_node *node)\n {\n-  return (node->clone_of\n+  return ((node->clone_of || node->former_clone_of)\n \t  && (node->clone.tree_map\n \t      || node->clone.args_to_skip\n \t      || node->clone.combined_args_to_skip));"}, {"sha": "209d4fc7e558e818060f907df904d2b11ab56046", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a50e9b2f5d4be81e7da7cf55e6ade4c6c575de03/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a50e9b2f5d4be81e7da7cf55e6ade4c6c575de03/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a50e9b2f5d4be81e7da7cf55e6ade4c6c575de03", "patch": "@@ -1,3 +1,8 @@\n+2017-12-22  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR lto/82027\n+\t* g++.dg/lto/pr82027_0.C: New test.\n+\n 2017-12-22  Julia Koval  <julia.koval@intel.com>\n \tSebastian Peryt <sebastian.peryt@intel.com>\n "}, {"sha": "70cc776b2db96a0c04e186a133bd335f4b71c230", "filename": "gcc/testsuite/g++.dg/lto/pr82027_0.C", "status": "added", "additions": 73, "deletions": 0, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a50e9b2f5d4be81e7da7cf55e6ade4c6c575de03/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr82027_0.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a50e9b2f5d4be81e7da7cf55e6ade4c6c575de03/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr82027_0.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr82027_0.C?ref=a50e9b2f5d4be81e7da7cf55e6ade4c6c575de03", "patch": "@@ -0,0 +1,73 @@\n+// { dg-lto-do run }\n+// { dg-lto-options { { -O3 -flto } } }\n+\n+class Position\n+{\n+  public:\n+    Position( void ) {}\n+    virtual ~Position() {}\n+\n+    virtual void calcPercent( const char *name,int pos,int size ) {}\n+};\n+\n+\n+class Looper\n+{\n+  public:\n+    Looper( Position *cc,int size )\n+      : m_cc(cc), m_size(size) {}\n+    virtual ~Looper() {}\n+\n+    void loop( void )\n+    {\n+      for( int pos=0; pos<m_size; pos++ )\n+      {\n+        m_cc->calcPercent( \"\",pos,m_size );\n+      }\n+    }\n+\n+  private:\n+    Position *m_cc;\n+    int m_size;\n+};\n+\n+\n+class EmptyClass\n+{\n+  public:\n+    EmptyClass( void ) {}\n+    virtual ~EmptyClass() {}\n+};\n+\n+\n+class Combined : public EmptyClass, public Position\n+{\n+  public:\n+    Combined( void ) : m_percent(0) {}\n+    ~Combined() {}\n+\n+    void calcPercent( const char *name,int pos,int size )\n+    {\n+      int percent = 100*pos/size;\n+      if( percent!=m_percent )\n+        m_percent = percent;\n+    }\n+\n+  private:\n+    int m_percent;\n+};\n+\n+\n+\n+int main( int argc,char **argv )\n+{\n+  Combined *comb = new Combined();\n+  Looper *looper = new Looper( comb,argc );\n+\n+  looper->loop();\n+\n+  delete comb;\n+  delete looper;\n+\n+  return( 0 );\n+}"}]}