{"sha": "1509ec034c5996a6efeb24d5aad6154cb90b5b65", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTUwOWVjMDM0YzU5OTZhNmVmZWIyNGQ1YWFkNjE1NGNiOTBiNWI2NQ==", "commit": {"author": {"name": "Chung-Ju Wu", "email": "jasonwucj@gmail.com", "date": "2014-09-03T08:28:02Z"}, "committer": {"name": "Chung-Ju Wu", "email": "jasonwucj@gcc.gnu.org", "date": "2014-09-03T08:28:02Z"}, "message": "[NDS32] In nds32_valid_stack_push_pop_p(), we look into OP rtx to see if we indeed save $fp/$gp/$lp registers.\n\n\t* config/nds32/nds32-predicates.c\n\t(nds32_valid_stack_push_pop): Rename to ...\n\t(nds32_valid_stack_push_pop_p): ... this.\n\t* config/nds32/nds32-protos.h: Likewise.\n\t* config/nds32/predicates.md: Likewise.\n\nFrom-SVN: r214853", "tree": {"sha": "0d250e26087a7a807591864b12461f750f7c3346", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0d250e26087a7a807591864b12461f750f7c3346"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1509ec034c5996a6efeb24d5aad6154cb90b5b65", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1509ec034c5996a6efeb24d5aad6154cb90b5b65", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1509ec034c5996a6efeb24d5aad6154cb90b5b65", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1509ec034c5996a6efeb24d5aad6154cb90b5b65/comments", "author": {"login": "jasonwucj", "id": 5520732, "node_id": "MDQ6VXNlcjU1MjA3MzI=", "avatar_url": "https://avatars.githubusercontent.com/u/5520732?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jasonwucj", "html_url": "https://github.com/jasonwucj", "followers_url": "https://api.github.com/users/jasonwucj/followers", "following_url": "https://api.github.com/users/jasonwucj/following{/other_user}", "gists_url": "https://api.github.com/users/jasonwucj/gists{/gist_id}", "starred_url": "https://api.github.com/users/jasonwucj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jasonwucj/subscriptions", "organizations_url": "https://api.github.com/users/jasonwucj/orgs", "repos_url": "https://api.github.com/users/jasonwucj/repos", "events_url": "https://api.github.com/users/jasonwucj/events{/privacy}", "received_events_url": "https://api.github.com/users/jasonwucj/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "88437f39a89d08001c26e9f0390772591f980b76", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88437f39a89d08001c26e9f0390772591f980b76", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88437f39a89d08001c26e9f0390772591f980b76"}], "stats": {"total": 37, "additions": 25, "deletions": 12}, "files": [{"sha": "f67e58db5d6a92d10321079375f78675b8b87af4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1509ec034c5996a6efeb24d5aad6154cb90b5b65/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1509ec034c5996a6efeb24d5aad6154cb90b5b65/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1509ec034c5996a6efeb24d5aad6154cb90b5b65", "patch": "@@ -1,3 +1,11 @@\n+2014-09-03  Chung-Ju Wu  <jasonwucj@gmail.com>\n+\n+\t* config/nds32/nds32-predicates.c\n+\t(nds32_valid_stack_push_pop): Rename to ...\n+\t(nds32_valid_stack_push_pop_p): ... this.\n+\t* config/nds32/nds32-protos.h: Likewise.\n+\t* config/nds32/predicates.md: Likewise.\n+\n 2014-09-03  Chung-Ju Wu  <jasonwucj@gmail.com>\n \n \t* config/nds32/nds32.c (nds32_gen_stack_v3push): Rename to ..."}, {"sha": "374a1a8112420f87c9620883d0c87a8d7b599c0d", "filename": "gcc/config/nds32/nds32-predicates.c", "status": "modified", "additions": 12, "deletions": 7, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1509ec034c5996a6efeb24d5aad6154cb90b5b65/gcc%2Fconfig%2Fnds32%2Fnds32-predicates.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1509ec034c5996a6efeb24d5aad6154cb90b5b65/gcc%2Fconfig%2Fnds32%2Fnds32-predicates.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnds32%2Fnds32-predicates.c?ref=1509ec034c5996a6efeb24d5aad6154cb90b5b65", "patch": "@@ -173,12 +173,13 @@ nds32_valid_multiple_load_store (rtx op, bool load_p)\n      3. The last element must be stack adjustment rtx.\n    See the prologue/epilogue implementation for details.  */\n bool\n-nds32_valid_stack_push_pop (rtx op, bool push_p)\n+nds32_valid_stack_push_pop_p (rtx op, bool push_p)\n {\n   int index;\n   int total_count;\n   int rest_count;\n   int first_regno;\n+  int save_fp, save_gp, save_lp;\n   rtx elt;\n   rtx elt_reg;\n   rtx elt_mem;\n@@ -234,14 +235,18 @@ nds32_valid_stack_push_pop (rtx op, bool push_p)\n         The $sp adjustment rtx, $fp push rtx, $gp push rtx,\n         and $lp push rtx are excluded.  */\n \n+  /* Detect whether we have $fp, $gp, or $lp in the parallel rtx.  */\n+  save_fp = reg_mentioned_p (gen_rtx_REG (SImode, FP_REGNUM), op);\n+  save_gp = reg_mentioned_p (gen_rtx_REG (SImode, GP_REGNUM), op);\n+  save_lp = reg_mentioned_p (gen_rtx_REG (SImode, LP_REGNUM), op);\n   /* Exclude last $sp adjustment rtx.  */\n   rest_count = total_count - 1;\n   /* Exclude $fp, $gp, and $lp if they are in the parallel rtx.  */\n-  if (cfun->machine->fp_size)\n+  if (save_fp)\n     rest_count--;\n-  if (cfun->machine->gp_size)\n+  if (save_gp)\n     rest_count--;\n-  if (cfun->machine->lp_size)\n+  if (save_lp)\n     rest_count--;\n \n   if (rest_count > 0)\n@@ -275,7 +280,7 @@ nds32_valid_stack_push_pop (rtx op, bool push_p)\n \n   /* Check $fp/$gp/$lp one by one.\n      We use 'push_p' to pick up reg rtx and mem rtx.  */\n-  if (cfun->machine->fp_size)\n+  if (save_fp)\n     {\n       elt = XVECEXP (op, 0, index);\n       elt_mem = push_p ? SET_DEST (elt) : SET_SRC (elt);\n@@ -287,7 +292,7 @@ nds32_valid_stack_push_pop (rtx op, bool push_p)\n           || REGNO (elt_reg) != FP_REGNUM)\n         return false;\n     }\n-  if (cfun->machine->gp_size)\n+  if (save_gp)\n     {\n       elt = XVECEXP (op, 0, index);\n       elt_mem = push_p ? SET_DEST (elt) : SET_SRC (elt);\n@@ -299,7 +304,7 @@ nds32_valid_stack_push_pop (rtx op, bool push_p)\n           || REGNO (elt_reg) != GP_REGNUM)\n         return false;\n     }\n-  if (cfun->machine->lp_size)\n+  if (save_lp)\n     {\n       elt = XVECEXP (op, 0, index);\n       elt_mem = push_p ? SET_DEST (elt) : SET_SRC (elt);"}, {"sha": "e2810163ec94bbe95eb1afd1392a428561860d2b", "filename": "gcc/config/nds32/nds32-protos.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1509ec034c5996a6efeb24d5aad6154cb90b5b65/gcc%2Fconfig%2Fnds32%2Fnds32-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1509ec034c5996a6efeb24d5aad6154cb90b5b65/gcc%2Fconfig%2Fnds32%2Fnds32-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnds32%2Fnds32-protos.h?ref=1509ec034c5996a6efeb24d5aad6154cb90b5b65", "patch": "@@ -80,7 +80,7 @@ extern bool nds32_valid_multiple_load_store (rtx, bool);\n \n /* Auxiliary functions for stack operation predicate checking.  */\n \n-extern bool nds32_valid_stack_push_pop (rtx, bool);\n+extern bool nds32_valid_stack_push_pop_p (rtx, bool);\n \n /* Auxiliary functions for bit operation detection.  */\n "}, {"sha": "6877187b5a17fb33dbb8f4bc050057e63c22cfe7", "filename": "gcc/config/nds32/predicates.md", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1509ec034c5996a6efeb24d5aad6154cb90b5b65/gcc%2Fconfig%2Fnds32%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1509ec034c5996a6efeb24d5aad6154cb90b5b65/gcc%2Fconfig%2Fnds32%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnds32%2Fpredicates.md?ref=1509ec034c5996a6efeb24d5aad6154cb90b5b65", "patch": "@@ -77,16 +77,16 @@\n   (match_code \"parallel\")\n {\n   /* To verify 'push' operation, pass 'true' for the second argument.\n-     See the implementation in nds32.c for details.  */\n-  return nds32_valid_stack_push_pop (op, true);\n+     See the implementation in nds32-predicates.c for details.  */\n+  return nds32_valid_stack_push_pop_p (op, true);\n })\n \n (define_special_predicate \"nds32_stack_pop_operation\"\n   (match_code \"parallel\")\n {\n   /* To verify 'pop' operation, pass 'false' for the second argument.\n-     See the implementation in nds32.c for details.  */\n-  return nds32_valid_stack_push_pop (op, false);\n+     See the implementation in nds32-predicates.c for details.  */\n+  return nds32_valid_stack_push_pop_p (op, false);\n })\n \n ;; ------------------------------------------------------------------------"}]}