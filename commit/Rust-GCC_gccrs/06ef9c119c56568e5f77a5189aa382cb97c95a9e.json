{"sha": "06ef9c119c56568e5f77a5189aa382cb97c95a9e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDZlZjljMTE5YzU2NTY4ZTVmNzdhNTE4OWFhMzgyY2I5N2M5NWE5ZQ==", "commit": {"author": {"name": "Alexandre Oliva", "email": "oliva@adacore.com", "date": "2020-06-10T20:56:36Z"}, "committer": {"name": "Alexandre Oliva", "email": "oliva@gnu.org", "date": "2020-06-10T20:56:36Z"}, "message": "[PR51447] restore the global reg var before returning from main\n\nA runtime system might legitimately hold in rbx a value expected to be\npreserved across the call to main, but its use as a global register\nvariable stops main from preserving it.\n\n\nfor  gcc/testsuite/ChangeLog\n\n\tPR rtl-optimization/51447\n\t* gcc.c-torture/execute/pr51447.c (main): Preserve call-saved\n\tregister.", "tree": {"sha": "84ad8879bdf6ecf21a79e64f09569a2e6fc0a04f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/84ad8879bdf6ecf21a79e64f09569a2e6fc0a04f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/06ef9c119c56568e5f77a5189aa382cb97c95a9e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06ef9c119c56568e5f77a5189aa382cb97c95a9e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/06ef9c119c56568e5f77a5189aa382cb97c95a9e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06ef9c119c56568e5f77a5189aa382cb97c95a9e/comments", "author": null, "committer": null, "parents": [{"sha": "a9eec9625ea7165292958be04899b057804192fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9eec9625ea7165292958be04899b057804192fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a9eec9625ea7165292958be04899b057804192fb"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "1d00953af3aa7777f2742946bba47b5d34ee0ba1", "filename": "gcc/testsuite/gcc.c-torture/execute/pr51447.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06ef9c119c56568e5f77a5189aa382cb97c95a9e/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr51447.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06ef9c119c56568e5f77a5189aa382cb97c95a9e/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr51447.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr51447.c?ref=06ef9c119c56568e5f77a5189aa382cb97c95a9e", "patch": "@@ -14,6 +14,9 @@ int\n main (void)\n {\n   __label__ nonlocal_lab;\n+#ifdef __x86_64__\n+  void *save = ptr;\n+#endif\n   __attribute__((noinline, noclone)) void\n     bar (void *func)\n       {\n@@ -25,5 +28,8 @@ main (void)\n nonlocal_lab:\n   if (ptr != &&nonlocal_lab)\n     abort ();\n+#ifdef __x86_64__\n+  ptr = save; /* Restore the call-saved register.  */\n+#endif\n   return 0;\n }"}]}