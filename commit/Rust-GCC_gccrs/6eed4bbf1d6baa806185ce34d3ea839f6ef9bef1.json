{"sha": "6eed4bbf1d6baa806185ce34d3ea839f6ef9bef1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmVlZDRiYmYxZDZiYWE4MDYxODVjZTM0ZDNlYTgzOWY2ZWY5YmVmMQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "rsandifo@nildram.co.uk", "date": "2007-09-21T07:33:31Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2007-09-21T07:33:31Z"}, "message": "mt-sde (CFLAGS_FOR_TARGET): Replace -fno-optimize-sibling-calls with -minterlink-mips16.\n\nconfig/\n\t* mt-sde (CFLAGS_FOR_TARGET): Replace -fno-optimize-sibling-calls\n\twith -minterlink-mips16.\n\t(CXXFLAGS_FOR_TARGET): Likewise.\n\ngcc/\n\t* config/mips/t-sde (TARGET_LIBGCC2_CFLAGS): Delete.\n\nFrom-SVN: r128644", "tree": {"sha": "f4058ebabcf7c855c32a3f0b3f2687b77017a3a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f4058ebabcf7c855c32a3f0b3f2687b77017a3a1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6eed4bbf1d6baa806185ce34d3ea839f6ef9bef1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6eed4bbf1d6baa806185ce34d3ea839f6ef9bef1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6eed4bbf1d6baa806185ce34d3ea839f6ef9bef1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6eed4bbf1d6baa806185ce34d3ea839f6ef9bef1/comments", "author": null, "committer": null, "parents": [{"sha": "51b09ce3d9f6c39d2fd89f5351b064ca1f356a1b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51b09ce3d9f6c39d2fd89f5351b064ca1f356a1b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/51b09ce3d9f6c39d2fd89f5351b064ca1f356a1b"}], "stats": {"total": 38, "additions": 20, "deletions": 18}, "files": [{"sha": "f3d9fe98d704d5c968417f0bbaf8d7996f3030fa", "filename": "config/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6eed4bbf1d6baa806185ce34d3ea839f6ef9bef1/config%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6eed4bbf1d6baa806185ce34d3ea839f6ef9bef1/config%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2FChangeLog?ref=6eed4bbf1d6baa806185ce34d3ea839f6ef9bef1", "patch": "@@ -1,3 +1,9 @@\n+2007-09-21  Richard Sandiford  <rsandifo@nildram.co.uk>\n+\n+\t* mt-sde (CFLAGS_FOR_TARGET): Replace -fno-optimize-sibling-calls\n+\twith -minterlink-mips16.\n+\t(CXXFLAGS_FOR_TARGET): Likewise.\n+\n 2007-09-20  Richard Sandiford  <rsandifo@nildram.co.uk>\n \n \t* mt-mips-elfoabi: New file."}, {"sha": "775e50dd7325749e8491f5b8624740660024d56a", "filename": "config/mt-sde", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6eed4bbf1d6baa806185ce34d3ea839f6ef9bef1/config%2Fmt-sde", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6eed4bbf1d6baa806185ce34d3ea839f6ef9bef1/config%2Fmt-sde", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2Fmt-sde?ref=6eed4bbf1d6baa806185ce34d3ea839f6ef9bef1", "patch": "@@ -1,10 +1,10 @@\n-# We default to building libraries optimised for size.  We switch off\n-# sibling-call optimization to permit interlinking of MIPS16 and\n-# non-MIPS16 functions.  The -mcode-xonly option allows MIPS16 libraries\n-# to run on Harvard-style split I/D memories, so long as they have the\n-# D-to-I redirect for PC-relative loads.  -mno-gpopt has two purposes:\n-# it allows libraries to be used in situations where $gp != our _gp,\n-# and it allows them to be built with -G8 while retaining link compability\n-# with -G0 and -G4.\n-CFLAGS_FOR_TARGET = -Os -fno-optimize-sibling-calls -mcode-xonly -mno-gpopt\n-CXXFLAGS_FOR_TARGET = -Os -fno-optimize-sibling-calls -mcode-xonly -mno-gpopt\n+# We default to building libraries optimised for size.  We use\n+# -minterlink-mips16 so that the non-MIPS16 libraries can still be\n+# linked against partly-MIPS16 code.  The -mcode-xonly option allows\n+# MIPS16 libraries to run on Harvard-style split I/D memories, so long\n+# as they have the D-to-I redirect for PC-relative loads.  -mno-gpopt\n+# has two purposes: it allows libraries to be used in situations where\n+# $gp != our _gp, and it allows them to be built with -G8 while\n+# retaining link compability with -G0 and -G4.\n+CFLAGS_FOR_TARGET = -Os -minterlink-mips16 -mcode-xonly -mno-gpopt\n+CXXFLAGS_FOR_TARGET = -Os -minterlink-mips16 -mcode-xonly -mno-gpopt"}, {"sha": "d6eeb98af3e59bc0dcfbf0e8bf076f070114f517", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6eed4bbf1d6baa806185ce34d3ea839f6ef9bef1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6eed4bbf1d6baa806185ce34d3ea839f6ef9bef1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6eed4bbf1d6baa806185ce34d3ea839f6ef9bef1", "patch": "@@ -1,3 +1,7 @@\n+2007-09-21  Richard Sandiford  <rsandifo@nildram.co.uk>\n+\n+\t* config/mips/t-sde (TARGET_LIBGCC2_CFLAGS): Delete.\n+\n 2007-09-20  Nigel Stephens  <nigel@mips.com>\n \t    Chao-ying Fu  <fu@mips.com>\n "}, {"sha": "a6d4290750f7f200f50bd7592f8f032bb398d3c5", "filename": "gcc/config/mips/t-sde", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6eed4bbf1d6baa806185ce34d3ea839f6ef9bef1/gcc%2Fconfig%2Fmips%2Ft-sde", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6eed4bbf1d6baa806185ce34d3ea839f6ef9bef1/gcc%2Fconfig%2Fmips%2Ft-sde", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Ft-sde?ref=6eed4bbf1d6baa806185ce34d3ea839f6ef9bef1", "patch": "@@ -10,14 +10,6 @@ $(T)crtn.o: $(srcdir)/config/mips/crtn.asm $(GCC_PASSES)\n \t$(GCC_FOR_TARGET) $(GCC_CFLAGS) $(MULTILIB_CFLAGS) $(INCLUDES) \\\n \t-c -o $(T)crtn.o -x assembler-with-cpp $(srcdir)/config/mips/crtn.asm\n \n-# We must build libgcc2.a with -G 0, in case the user wants to link\n-# without the $gp register. Use -fno-optimize-sibling-calls in case\n-# we have a mixed mips16/non-mips16 environment where a plain \"jump\"\n-# instuction won't work across the divide (no jx instruction).\n-# Compile libraries with -mcode-xonly, so that they are link-compatible\n-# with both -mcode-readable=pcrel and -mcode-readable=yes.\n-TARGET_LIBGCC2_CFLAGS = -G 0 -fno-optimize-sibling-calls -mcode-xonly\n-\n MULTILIB_OPTIONS = EL/EB mips32/mips32r2/mips64 mips16 msoft-float/mfp64 mcode-readable=no\n MULTILIB_DIRNAMES = el eb mips32 mips32r2 mips64 mips16 sof f64 spram\n MULTILIB_MATCHES = EL=mel EB=meb"}]}