{"sha": "12b38cca4a25ca8dcda775ebdbcb57e4c622eb0b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTJiMzhjY2E0YTI1Y2E4ZGNkYTc3NWViZGJjYjU3ZTRjNjIyZWIwYg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2018-01-16T23:11:10Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2018-01-16T23:11:10Z"}, "message": "gimple-ssa-warn-restrict.c (builtin_memref::builtin_memref): For an ADDR_EXPR, do not count the offset of a COMPONENT_REF twice.\n\n\t* gimple-ssa-warn-restrict.c (builtin_memref::builtin_memref): For an\n\tADDR_EXPR, do not count the offset of a COMPONENT_REF twice.\n\nFrom-SVN: r256766", "tree": {"sha": "b35c60a150370db2798b69a8e8ebc0a4b3109841", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b35c60a150370db2798b69a8e8ebc0a4b3109841"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/12b38cca4a25ca8dcda775ebdbcb57e4c622eb0b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12b38cca4a25ca8dcda775ebdbcb57e4c622eb0b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/12b38cca4a25ca8dcda775ebdbcb57e4c622eb0b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12b38cca4a25ca8dcda775ebdbcb57e4c622eb0b/comments", "author": null, "committer": null, "parents": [{"sha": "035181c3129648328176cbdee69d2a7a66e0a895", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/035181c3129648328176cbdee69d2a7a66e0a895", "html_url": "https://github.com/Rust-GCC/gccrs/commit/035181c3129648328176cbdee69d2a7a66e0a895"}], "stats": {"total": 28, "additions": 16, "deletions": 12}, "files": [{"sha": "66fd97ed2de397da185d0a57b4d95f2290c98621", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12b38cca4a25ca8dcda775ebdbcb57e4c622eb0b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12b38cca4a25ca8dcda775ebdbcb57e4c622eb0b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=12b38cca4a25ca8dcda775ebdbcb57e4c622eb0b", "patch": "@@ -1,3 +1,8 @@\n+2018-01-16  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gimple-ssa-warn-restrict.c (builtin_memref::builtin_memref): For an\n+\tADDR_EXPR, do not count the offset of a COMPONENT_REF twice.\n+\n 2018-01-16  Kelvin Nilsen  <kelvin@gcc.gnu.org>\n \n \t* config/rs6000/rs6000-p8swap.c (rs6000_gen_stvx): Generate"}, {"sha": "d3e4e5242a48ba804452e904d875ab6a75dac04c", "filename": "gcc/gimple-ssa-warn-restrict.c", "status": "modified", "additions": 5, "deletions": 11, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12b38cca4a25ca8dcda775ebdbcb57e4c622eb0b/gcc%2Fgimple-ssa-warn-restrict.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12b38cca4a25ca8dcda775ebdbcb57e4c622eb0b/gcc%2Fgimple-ssa-warn-restrict.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-ssa-warn-restrict.c?ref=12b38cca4a25ca8dcda775ebdbcb57e4c622eb0b", "patch": "@@ -312,11 +312,11 @@ builtin_memref::builtin_memref (tree expr, tree size)\n   if (TREE_CODE (expr) == ADDR_EXPR)\n     {\n       poly_int64 off;\n-      tree oper = TREE_OPERAND (expr, 0);\n+      tree op = TREE_OPERAND (expr, 0);\n \n       /* Determine the base object or pointer of the reference\n \t and its constant offset from the beginning of the base.  */\n-      base = get_addr_base_and_unit_offset (oper, &off);\n+      base = get_addr_base_and_unit_offset (op, &off);\n \n       HOST_WIDE_INT const_off;\n       if (base && off.is_constant (&const_off))\n@@ -325,17 +325,11 @@ builtin_memref::builtin_memref (tree expr, tree size)\n \t  offrange[1] += const_off;\n \n \t  /* Stash the reference for offset validation.  */\n-\t  ref = oper;\n+\t  ref = op;\n \n \t  /* Also stash the constant offset for offset validation.  */\n-\t  tree_code code = TREE_CODE (oper);\n-\t  if (code == COMPONENT_REF)\n-\t    {\n-\t      tree field = TREE_OPERAND (ref, 1);\n-\t      tree fldoff = DECL_FIELD_OFFSET (field);\n-\t      if (TREE_CODE (fldoff) == INTEGER_CST)\n-\t\trefoff = const_off + wi::to_offset (fldoff);\n-\t    }\n+\t  if (TREE_CODE (op) == COMPONENT_REF)\n+\t    refoff = const_off;\n \t}\n       else\n \t{"}, {"sha": "a4fc221f136cbe07a15e731116122e8f285ad5ad", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12b38cca4a25ca8dcda775ebdbcb57e4c622eb0b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12b38cca4a25ca8dcda775ebdbcb57e4c622eb0b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=12b38cca4a25ca8dcda775ebdbcb57e4c622eb0b", "patch": "@@ -1,3 +1,7 @@\n+2018-01-16  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* c-c++-common/Warray-bounds-3.c (test_memmove_bounds): Fix mismatch.\n+\n 2018-01-16  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* c-c++-common/Wrestrict.c (test_strcpy_range): Bump string size of one"}, {"sha": "3445b950811b4429ea971997b0def986ce24805c", "filename": "gcc/testsuite/c-c++-common/Warray-bounds-3.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12b38cca4a25ca8dcda775ebdbcb57e4c622eb0b/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWarray-bounds-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12b38cca4a25ca8dcda775ebdbcb57e4c622eb0b/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWarray-bounds-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWarray-bounds-3.c?ref=12b38cca4a25ca8dcda775ebdbcb57e4c622eb0b", "patch": "@@ -199,7 +199,8 @@ void test_memmove_bounds (char *d, const char *s, size_t n)\n   T (int,  2, a + SR ( 1, 3), pi, n);\n   T (int,  2, a + SR ( 2, 3), pi, n);\n \n-  T (int32_t, 2, a + SR ( 3, 4), pi, n);      /* { dg-warning \"offset \\\\\\[12, 16] is out of the bounds \\\\\\[0, 8] of object .\\[^\\n\\r]+. with type .int32_t ?\\\\\\[2].\" } */\n+  const int32_t *pi32 = (const int32_t*)s;\n+  T (int32_t, 2, a + SR ( 3, 4), pi32, n);      /* { dg-warning \"offset \\\\\\[12, 16] is out of the bounds \\\\\\[0, 8] of object .\\[^\\n\\r]+. with type .int32_t ?\\\\\\[2].\" } */\n }\n \n "}]}