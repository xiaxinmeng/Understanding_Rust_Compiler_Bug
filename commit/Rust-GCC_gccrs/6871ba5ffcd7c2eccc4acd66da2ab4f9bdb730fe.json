{"sha": "6871ba5ffcd7c2eccc4acd66da2ab4f9bdb730fe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Njg3MWJhNWZmY2Q3YzJlY2NjNGFjZDY2ZGEyYWI0ZjliZGI3MzBmZQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2004-02-23T11:17:13Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2004-02-23T11:17:13Z"}, "message": "[multiple changes]\n\n2004-02-23  Ed Schonberg  <schonberg@gnat.com>\n\n\t* exp_ch6.adb (Expand_N_Subprogram_Declaration): Do not create\n\tprotected operations if original subprogram is flagged as eliminated.\n\t(Expand_N_Subprogram_Body): For a protected operation, create\n\tdiscriminals for next operation before checking whether the operation\n\tis eliminated.\n\n\t* exp_ch9.adb (Expand_N_Protected_Body,\n\tExpand_N_Protected_Type_Declaration): Do not generate specs and bodies\n\tfor internal protected operations if the original subprogram is\n\teliminated.\n\n\t* sem_elim.adb (Check_Eliminated): Handle properly protected operations\n\tdeclared in a single protected object.\n\n2004-02-23  Vincent Celier  <celier@gnat.com>\n\n\t* prj-attr.adb: Make attribute Builder'Executable an associative array,\n\tcase insensitive if file names are case insensitive, instead of a\n\tstandard associative array.\n\n\t* prj-attr.adb (Initialize): For 'b' associative arrays, do not set\n\tthem as case insensitive on platforms where the file names are case\n\tsensitive.\n\n\t* prj-part.adb (Parse_Single_Project): Make sure, when checking if\n\tproject file has already been parsed that canonical path are compared.\n\n2004-02-23  Robert Dewar  <dewar@gnat.com>\n\n\t* sinput-c.ads: Correct bad unit title in header\n\n\t* freeze.adb: Minor reformatting\n\n2004-02-23  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n\n\t* trans.c (tree_transform, case N_Procedure_Call_Statement): For\n\tnonaddressable COMPONENT_REF that is removing padding that we are\n\ttaking the address of, take the address of the padded record instead\n\tif item is variable size.\n\nFrom-SVN: r78292", "tree": {"sha": "aa3ca3b1faa65ad0d368c42ec6ebdd8fe39f73b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aa3ca3b1faa65ad0d368c42ec6ebdd8fe39f73b6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6871ba5ffcd7c2eccc4acd66da2ab4f9bdb730fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6871ba5ffcd7c2eccc4acd66da2ab4f9bdb730fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6871ba5ffcd7c2eccc4acd66da2ab4f9bdb730fe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6871ba5ffcd7c2eccc4acd66da2ab4f9bdb730fe/comments", "author": null, "committer": null, "parents": [{"sha": "615a5ba6b1c6f787b952541c5b727107f351aa43", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/615a5ba6b1c6f787b952541c5b727107f351aa43", "html_url": "https://github.com/Rust-GCC/gccrs/commit/615a5ba6b1c6f787b952541c5b727107f351aa43"}], "stats": {"total": 301, "additions": 202, "deletions": 99}, "files": [{"sha": "7ecb98ec53403565d7f1600219d204cf23425fc3", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6871ba5ffcd7c2eccc4acd66da2ab4f9bdb730fe/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6871ba5ffcd7c2eccc4acd66da2ab4f9bdb730fe/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=6871ba5ffcd7c2eccc4acd66da2ab4f9bdb730fe", "patch": "@@ -1,3 +1,45 @@\n+2004-02-23  Ed Schonberg  <schonberg@gnat.com>\n+\n+\t* exp_ch6.adb (Expand_N_Subprogram_Declaration): Do not create\n+\tprotected operations if original subprogram is flagged as eliminated.\n+\t(Expand_N_Subprogram_Body): For a protected operation, create\n+\tdiscriminals for next operation before checking whether the operation\n+\tis eliminated.\n+\n+\t* exp_ch9.adb (Expand_N_Protected_Body,\n+\tExpand_N_Protected_Type_Declaration): Do not generate specs and bodies\n+\tfor internal protected operations if the original subprogram is\n+\teliminated.\n+\n+\t* sem_elim.adb (Check_Eliminated): Handle properly protected operations\n+\tdeclared in a single protected object.\n+\n+2004-02-23  Vincent Celier  <celier@gnat.com>\n+\n+\t* prj-attr.adb: Make attribute Builder'Executable an associative array,\n+\tcase insensitive if file names are case insensitive, instead of a\n+\tstandard associative array.\n+\n+\t* prj-attr.adb (Initialize): For 'b' associative arrays, do not set\n+\tthem as case insensitive on platforms where the file names are case\n+\tsensitive.\n+\n+\t* prj-part.adb (Parse_Single_Project): Make sure, when checking if\n+\tproject file has already been parsed that canonical path are compared.\n+\n+2004-02-23  Robert Dewar  <dewar@gnat.com>\n+\n+\t* sinput-c.ads: Correct bad unit title in header\n+\n+\t* freeze.adb: Minor reformatting\n+\n+2004-02-23  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\t* trans.c (tree_transform, case N_Procedure_Call_Statement): For\n+\tnonaddressable COMPONENT_REF that is removing padding that we are\n+\ttaking the address of, take the address of the padded record instead\n+\tif item is variable size.\n+\n 2004-02-20  Robert Dewar  <dewar@gnat.com>\n \n \t* bld.adb, exp_util.adb, gprcmd.adb: Minor reformatting"}, {"sha": "b8d8ed2d76f08433167460f1a19bd23759845481", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 33, "deletions": 30, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6871ba5ffcd7c2eccc4acd66da2ab4f9bdb730fe/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6871ba5ffcd7c2eccc4acd66da2ab4f9bdb730fe/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=6871ba5ffcd7c2eccc4acd66da2ab4f9bdb730fe", "patch": "@@ -3191,6 +3191,34 @@ package body Exp_Ch6 is\n          end;\n       end if;\n \n+      Scop := Scope (Spec_Id);\n+\n+      --  Add discriminal renamings to protected subprograms.\n+      --  Install new discriminals for expansion of the next\n+      --  subprogram of this protected type, if any.\n+\n+      if Is_List_Member (N)\n+        and then Present (Parent (List_Containing (N)))\n+        and then Nkind (Parent (List_Containing (N))) = N_Protected_Body\n+      then\n+         Add_Discriminal_Declarations\n+           (Declarations (N), Scop, Name_uObject, Loc);\n+         Add_Private_Declarations (Declarations (N), Scop, Name_uObject, Loc);\n+\n+         --  Associate privals and discriminals with the next protected\n+         --  operation body to be expanded. These are used to expand\n+         --  references to private data objects and discriminants,\n+         --  respectively.\n+\n+         Next_Op := Next_Protected_Operation (N);\n+\n+         if Present (Next_Op) then\n+            Dec := Parent (Base_Type (Scop));\n+            Set_Privals (Dec, Next_Op, Loc);\n+            Set_Discriminals (Dec);\n+         end if;\n+      end if;\n+\n       --  Clear out statement list for stubbed procedure\n \n       if Present (Corresponding_Spec (N)) then\n@@ -3208,8 +3236,6 @@ package body Exp_Ch6 is\n          end if;\n       end if;\n \n-      Scop := Scope (Spec_Id);\n-\n       --  Returns_By_Ref flag is normally set when the subprogram is frozen\n       --  but subprograms with no specs are not frozen\n \n@@ -3298,32 +3324,6 @@ package body Exp_Ch6 is\n          end;\n       end if;\n \n-      --  Add discriminal renamings to protected subprograms.\n-      --  Install new discriminals for expansion of the next\n-      --  subprogram of this protected type, if any.\n-\n-      if Is_List_Member (N)\n-        and then Present (Parent (List_Containing (N)))\n-        and then Nkind (Parent (List_Containing (N))) = N_Protected_Body\n-      then\n-         Add_Discriminal_Declarations\n-           (Declarations (N), Scop, Name_uObject, Loc);\n-         Add_Private_Declarations (Declarations (N), Scop, Name_uObject, Loc);\n-\n-         --  Associate privals and discriminals with the next protected\n-         --  operation body to be expanded. These are used to expand\n-         --  references to private data objects and discriminants,\n-         --  respectively.\n-\n-         Next_Op := Next_Protected_Operation (N);\n-\n-         if Present (Next_Op) then\n-            Dec := Parent (Base_Type (Scop));\n-            Set_Privals (Dec, Next_Op, Loc);\n-            Set_Discriminals (Dec);\n-         end if;\n-      end if;\n-\n       --  If subprogram contains a parameterless recursive call, then we may\n       --  have an infinite recursion, so see if we can generate code to check\n       --  for this possibility if storage checks are not suppressed.\n@@ -3420,14 +3420,17 @@ package body Exp_Ch6 is\n       Prot_Id   : Entity_Id;\n \n    begin\n-      --  Deal with case of protected subprogram\n+      --  Deal with case of protected subprogram. Do not generate\n+      --  protected operation if operation is flagged as eliminated.\n \n       if Is_List_Member (N)\n         and then Present (Parent (List_Containing (N)))\n         and then Nkind (Parent (List_Containing (N))) = N_Protected_Body\n         and then Is_Protected_Type (Scop)\n       then\n-         if No (Protected_Body_Subprogram (Subp)) then\n+         if No (Protected_Body_Subprogram (Subp))\n+           and then not Is_Eliminated (Subp)\n+         then\n             Prot_Decl :=\n               Make_Subprogram_Declaration (Loc,\n                 Specification =>"}, {"sha": "ddaf2aa13e8d53e3c4db6a5445010d40f0c14f13", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6871ba5ffcd7c2eccc4acd66da2ab4f9bdb730fe/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6871ba5ffcd7c2eccc4acd66da2ab4f9bdb730fe/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=6871ba5ffcd7c2eccc4acd66da2ab4f9bdb730fe", "patch": "@@ -4885,7 +4885,9 @@ package body Exp_Ch9 is\n \n                --  Exclude functions created to analyze defaults.\n \n-               if not Is_Eliminated (Defining_Entity (Op_Body)) then\n+               if not Is_Eliminated (Defining_Entity (Op_Body))\n+                 and then not Is_Eliminated (Corresponding_Spec (Op_Body))\n+               then\n                   New_Op_Body :=\n                     Build_Unprotected_Subprogram_Body (Op_Body, Pid);\n \n@@ -5372,14 +5374,17 @@ package body Exp_Ch9 is\n       --  subprogram; one to call from outside the object and one to\n       --  call from inside. Build a barrier function and an entry\n       --  body action procedure specification for each protected entry.\n-      --  Initialize the entry body array.\n+      --  Initialize the entry body array. If subprogram is flagged as\n+      --  eliminated, do not generate any internal operations.\n \n       E_Count := 0;\n \n       Comp := First (Visible_Declarations (Pdef));\n \n       while Present (Comp) loop\n-         if Nkind (Comp) = N_Subprogram_Declaration then\n+         if Nkind (Comp) = N_Subprogram_Declaration\n+           and then not Is_Eliminated (Defining_Entity (Comp))\n+         then\n             Sub :=\n               Make_Subprogram_Declaration (Loc,\n                 Specification =>"}, {"sha": "11f8270c7569fca0a00210498bedf3867c279521", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6871ba5ffcd7c2eccc4acd66da2ab4f9bdb730fe/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6871ba5ffcd7c2eccc4acd66da2ab4f9bdb730fe/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=6871ba5ffcd7c2eccc4acd66da2ab4f9bdb730fe", "patch": "@@ -1479,6 +1479,10 @@ package body Freeze is\n          --  might otherwise be frozen in the wrong scope, and a freeze node\n          --  on subtype has no effect.\n \n+         -----------------\n+         -- Check_Itype --\n+         -----------------\n+\n          procedure Check_Itype (Desig : Entity_Id) is\n          begin\n             if not Is_Frozen (Desig)\n@@ -1522,11 +1526,10 @@ package body Freeze is\n             then\n                Set_First_Entity (Rec, First_Entity (Base_Type (Rec)));\n \n-            --  If this is an internal type without a declaration, as for\n-            --  a record component, the base type may not yet be frozen,\n-            --  and its controller has not been created. Add an explicit\n-            --  freeze node for the itype, so it will be frozen after the\n-            --  base type.\n+            --  If this is an internal type without a declaration, as for a\n+            --  record component, the base type may not yet be frozen, and its\n+            --  controller has not been created. Add an explicit freeze node\n+            --  for the itype, so it will be frozen after the base type.\n \n             elsif Is_Itype (Rec)\n               and then Has_Delayed_Freeze (Base_Type (Rec))\n@@ -1997,7 +2000,6 @@ package body Freeze is\n                   --  Loop through formals\n \n                   Formal := First_Formal (E);\n-\n                   while Present (Formal) loop\n                      F_Type := Etype (Formal);\n                      Freeze_And_Append (F_Type, Loc, Result);"}, {"sha": "6e8cc6cccb0c93c696849cfaff5f7dff8a3c3788", "filename": "gcc/ada/prj-attr.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6871ba5ffcd7c2eccc4acd66da2ab4f9bdb730fe/gcc%2Fada%2Fprj-attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6871ba5ffcd7c2eccc4acd66da2ab4f9bdb730fe/gcc%2Fada%2Fprj-attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-attr.adb?ref=6871ba5ffcd7c2eccc4acd66da2ab4f9bdb730fe", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---             Copyright (C) 2001-2003 Free Software Foundation, Inc.       --\n+--             Copyright (C) 2001-2004 Free Software Foundation, Inc.       --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -105,7 +105,7 @@ package body Prj.Attr is\n      \"Pbuilder#\" &\n      \"Ladefault_switches#\" &\n      \"Lbswitches#\" &\n-     \"SAexecutable#\" &\n+     \"Sbexecutable#\" &\n      \"SVexecutable_suffix#\" &\n      \"SVglobal_configuration_pragmas#\" &\n \n@@ -258,7 +258,7 @@ package body Prj.Attr is\n \n                when 'b' =>\n                   if File_Names_Case_Sensitive then\n-                     Kind_2 := Case_Insensitive_Associative_Array;\n+                     Kind_2 := Associative_Array;\n                   else\n                      Kind_2 := Case_Insensitive_Associative_Array;\n                   end if;"}, {"sha": "a6c8f7b8f313952ae0102ecf38122f1e3931f65e", "filename": "gcc/ada/prj-part.adb", "status": "modified", "additions": 68, "deletions": 53, "changes": 121, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6871ba5ffcd7c2eccc4acd66da2ab4f9bdb730fe/gcc%2Fada%2Fprj-part.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6871ba5ffcd7c2eccc4acd66da2ab4f9bdb730fe/gcc%2Fada%2Fprj-part.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-part.adb?ref=6871ba5ffcd7c2eccc4acd66da2ab4f9bdb730fe", "patch": "@@ -97,13 +97,14 @@ package body Prj.Part is\n    --  projects. These imported projects will be effectively parsed after the\n    --  name of the current project has been extablished.\n \n-   type Name_And_Id is record\n-      Name : Name_Id;\n+   type Names_And_Id is record\n+      Path_Name           : Name_Id;\n+      Canonical_Path_Name : Name_Id;\n       Id   : Project_Node_Id;\n    end record;\n \n    package Project_Stack is new Table.Table\n-     (Table_Component_Type => Name_And_Id,\n+     (Table_Component_Type => Names_And_Id,\n       Table_Index_Type     => Nat,\n       Table_Low_Bound      => 1,\n       Table_Initial        => 10,\n@@ -717,7 +718,7 @@ package body Prj.Part is\n \n                if Project_Stack.Last > 1 then\n                   for Index in reverse 1 .. Project_Stack.Last loop\n-                     Error_Msg_Name_1 := Project_Stack.Table (Index).Name;\n+                     Error_Msg_Name_1 := Project_Stack.Table (Index).Path_Name;\n                      Error_Msg (\"\\imported by {\", Current_With.Location);\n                   end loop;\n                end if;\n@@ -761,7 +762,7 @@ package body Prj.Part is\n                      Canonical_Path_Name := Name_Find;\n \n                      for Index in 1 .. Project_Stack.Last loop\n-                        if Project_Stack.Table (Index).Name =\n+                        if Project_Stack.Table (Index).Canonical_Path_Name =\n                           Canonical_Path_Name\n                         then\n                            --  We have found the limited imported project,\n@@ -875,13 +876,15 @@ package body Prj.Part is\n       --  Check for a circular dependency\n \n       for Index in 1 .. Project_Stack.Last loop\n-         if Canonical_Path_Name = Project_Stack.Table (Index).Name then\n+         if Canonical_Path_Name =\n+              Project_Stack.Table (Index).Canonical_Path_Name\n+         then\n             Error_Msg (\"circular dependency detected\", Token_Ptr);\n             Error_Msg_Name_1 := Normed_Path_Name;\n             Error_Msg (\"\\  { is imported by\", Token_Ptr);\n \n             for Current in reverse 1 .. Project_Stack.Last loop\n-               Error_Msg_Name_1 := Project_Stack.Table (Current).Name;\n+               Error_Msg_Name_1 := Project_Stack.Table (Current).Path_Name;\n \n                if Error_Msg_Name_1 /= Canonical_Path_Name then\n                   Error_Msg\n@@ -901,63 +904,74 @@ package body Prj.Part is\n       --  Put the new path name on the stack\n \n       Project_Stack.Increment_Last;\n-      Project_Stack.Table (Project_Stack.Last).Name := Canonical_Path_Name;\n+      Project_Stack.Table (Project_Stack.Last).Path_Name := Normed_Path_Name;\n+      Project_Stack.Table (Project_Stack.Last).Canonical_Path_Name :=\n+        Canonical_Path_Name;\n \n       --  Check if the project file has already been parsed.\n \n       while\n         A_Project_Name_And_Node /= Tree_Private_Part.No_Project_Name_And_Node\n       loop\n-         if\n-           Path_Name_Of (A_Project_Name_And_Node.Node) = Canonical_Path_Name\n-         then\n-            if Extended then\n+         declare\n+            Path_Id : Name_Id := Path_Name_Of (A_Project_Name_And_Node.Node);\n+         begin\n+            if Path_Id /= No_Name then\n+               Get_Name_String (Path_Id);\n+               Canonical_Case_File_Name (Name_Buffer (1 .. Name_Len));\n+               Path_Id := Name_Find;\n+            end if;\n \n-               if A_Project_Name_And_Node.Extended then\n-                  Error_Msg\n-                    (\"cannot extend the same project file several times\",\n-                     Token_Ptr);\n+            if Path_Id = Canonical_Path_Name then\n+               if Extended then\n \n-               else\n-                  Error_Msg\n-                    (\"cannot extend an already imported project file\",\n-                     Token_Ptr);\n-               end if;\n+                  if A_Project_Name_And_Node.Extended then\n+                     Error_Msg\n+                       (\"cannot extend the same project file several times\",\n+                        Token_Ptr);\n \n-            elsif A_Project_Name_And_Node.Extended then\n-               Extends_All := Is_Extending_All (A_Project_Name_And_Node.Node);\n-\n-               --  If the imported project is an extended project A, and we are\n-               --  in an extended project, replace A with the ultimate project\n-               --  extending A.\n+                  else\n+                     Error_Msg\n+                       (\"cannot extend an already imported project file\",\n+                        Token_Ptr);\n+                  end if;\n \n-               if From_Extended /= None then\n-                  declare\n-                     Decl : Project_Node_Id :=\n-                       Project_Declaration_Of\n-                         (A_Project_Name_And_Node.Node);\n-                     Prj : Project_Node_Id :=\n-                       Extending_Project_Of (Decl);\n-                  begin\n-                     loop\n-                        Decl := Project_Declaration_Of (Prj);\n-                        exit when Extending_Project_Of (Decl) = Empty_Node;\n-                        Prj := Extending_Project_Of (Decl);\n-                     end loop;\n+               elsif A_Project_Name_And_Node.Extended then\n+                  Extends_All :=\n+                    Is_Extending_All (A_Project_Name_And_Node.Node);\n+\n+                  --  If the imported project is an extended project A,\n+                  --  and we are in an extended project, replace A with the\n+                  --  ultimate project extending A.\n+\n+                  if From_Extended /= None then\n+                     declare\n+                        Decl : Project_Node_Id :=\n+                          Project_Declaration_Of\n+                            (A_Project_Name_And_Node.Node);\n+                        Prj : Project_Node_Id :=\n+                          Extending_Project_Of (Decl);\n+                     begin\n+                        loop\n+                           Decl := Project_Declaration_Of (Prj);\n+                           exit when Extending_Project_Of (Decl) = Empty_Node;\n+                           Prj := Extending_Project_Of (Decl);\n+                        end loop;\n \n-                     A_Project_Name_And_Node.Node := Prj;\n-                  end;\n-               else\n-                  Error_Msg\n-                    (\"cannot import an already extended project file\",\n-                     Token_Ptr);\n+                        A_Project_Name_And_Node.Node := Prj;\n+                     end;\n+                  else\n+                     Error_Msg\n+                       (\"cannot import an already extended project file\",\n+                        Token_Ptr);\n+                  end if;\n                end if;\n-            end if;\n \n-            Project := A_Project_Name_And_Node.Node;\n-            Project_Stack.Decrement_Last;\n-            return;\n-         end if;\n+               Project := A_Project_Name_And_Node.Node;\n+               Project_Stack.Decrement_Last;\n+               return;\n+            end if;\n+         end;\n \n          A_Project_Name_And_Node := Tree_Private_Part.Projects_Htable.Get_Next;\n       end loop;\n@@ -1202,11 +1216,12 @@ package body Prj.Part is\n \n                   if Project_Stack.Last > 1 then\n                      Error_Msg_Name_1 :=\n-                       Project_Stack.Table (Project_Stack.Last).Name;\n+                       Project_Stack.Table (Project_Stack.Last).Path_Name;\n                      Error_Msg (\"\\extended by {\", Token_Ptr);\n \n                      for Index in reverse 1 .. Project_Stack.Last - 1 loop\n-                        Error_Msg_Name_1 := Project_Stack.Table (Index).Name;\n+                        Error_Msg_Name_1 :=\n+                          Project_Stack.Table (Index).Path_Name;\n                         Error_Msg (\"\\imported by {\", Token_Ptr);\n                      end loop;\n                   end if;"}, {"sha": "2a6ead46f5677f7de99af6ef7758fc61f0cb0285", "filename": "gcc/ada/sem_elim.adb", "status": "modified", "additions": 25, "deletions": 2, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6871ba5ffcd7c2eccc4acd66da2ab4f9bdb730fe/gcc%2Fada%2Fsem_elim.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6871ba5ffcd7c2eccc4acd66da2ab4f9bdb730fe/gcc%2Fada%2Fsem_elim.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_elim.adb?ref=6871ba5ffcd7c2eccc4acd66da2ab4f9bdb730fe", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1997-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1997-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -232,6 +232,29 @@ package body Sem_Elim is\n       Ctr  : Nat;\n       Ent  : Entity_Id;\n \n+      function Original_Chars (S : Entity_Id) return Name_Id;\n+      --  If the candidate subprogram is a protected operation of a single\n+      --  protected object, the scope of the operation is the created\n+      --  protected type, and we have to retrieve the original name of\n+      --  the object.\n+\n+      --------------------\n+      -- Original_Chars --\n+      --------------------\n+\n+      function Original_Chars (S : Entity_Id) return Name_Id is\n+      begin\n+         if Ekind (S) /= E_Protected_Type\n+           or else Comes_From_Source (S)\n+         then\n+            return Chars (S);\n+         else\n+            return Chars (Defining_Identifier (Original_Node (Parent (S))));\n+         end if;\n+      end Original_Chars;\n+\n+   --  Start of processing for Check_Eliminated\n+\n    begin\n       if No_Elimination then\n          return;\n@@ -270,7 +293,7 @@ package body Sem_Elim is\n             Scop := Scope (E);\n             if Elmt.Entity_Scope /= null then\n                for J in reverse Elmt.Entity_Scope'Range loop\n-                  if Elmt.Entity_Scope (J) /= Chars (Scop) then\n+                  if Elmt.Entity_Scope (J) /= Original_Chars (Scop) then\n                      goto Continue;\n                   end if;\n "}, {"sha": "974b5af5b99fd524c443169129b745e803eb9010", "filename": "gcc/ada/sinput-c.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6871ba5ffcd7c2eccc4acd66da2ab4f9bdb730fe/gcc%2Fada%2Fsinput-c.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6871ba5ffcd7c2eccc4acd66da2ab4f9bdb730fe/gcc%2Fada%2Fsinput-c.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinput-c.ads?ref=6871ba5ffcd7c2eccc4acd66da2ab4f9bdb730fe", "patch": "@@ -2,11 +2,11 @@\n --                                                                          --\n --                         GNAT COMPILER COMPONENTS                         --\n --                                                                          --\n---                             S I N P U T . P                              --\n+--                             S I N P U T . C                              --\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2002, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2004, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "ba8d16405c2ee48d1b2fcaecf61872e183937221", "filename": "gcc/ada/trans.c", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6871ba5ffcd7c2eccc4acd66da2ab4f9bdb730fe/gcc%2Fada%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6871ba5ffcd7c2eccc4acd66da2ab4f9bdb730fe/gcc%2Fada%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftrans.c?ref=6871ba5ffcd7c2eccc4acd66da2ab4f9bdb730fe", "patch": "@@ -2997,6 +2997,19 @@ tree_transform (Node_Id gnat_node)\n \t\t\t\t   gnu_actual);\n \t\t  }\n \n+\t\t/* Otherwise, if we have a non-addressable COMPONENT_REF of a\n+\t\t   variable-size type see if it's doing a unpadding operation.\n+\t\t   If so, remove that operation since we have no way of\n+\t\t   allocating the required temporary.  */\n+\t\tif (TREE_CODE (gnu_actual) == COMPONENT_REF\n+\t\t    && ! TREE_CONSTANT (TYPE_SIZE (TREE_TYPE (gnu_actual)))\n+\t\t    && (TREE_CODE (TREE_TYPE (TREE_OPERAND (gnu_actual, 0)))\n+\t\t\t== RECORD_TYPE)\n+\t\t    && TYPE_IS_PADDING_P (TREE_TYPE\n+\t\t\t\t\t  (TREE_OPERAND (gnu_actual, 0)))\n+\t\t    && !addressable_p (gnu_actual))\n+\t\t  gnu_actual = TREE_OPERAND (gnu_actual, 0);\n+\n \t\t/* The symmetry of the paths to the type of an entity is\n \t\t   broken here since arguments don't know that they will\n \t\t   be passed by ref. */"}]}