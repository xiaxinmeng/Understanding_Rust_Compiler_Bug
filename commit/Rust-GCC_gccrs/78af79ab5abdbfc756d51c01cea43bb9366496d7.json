{"sha": "78af79ab5abdbfc756d51c01cea43bb9366496d7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzhhZjc5YWI1YWJkYmZjNzU2ZDUxYzAxY2VhNDNiYjkzNjY0OTZkNw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-09-03T22:03:32Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-09-03T22:03:32Z"}, "message": "(skip_if_group): Check for traditional mode when skipping ahead to\nnext #, ignore unless at beginning of line.\n\nFrom-SVN: r5257", "tree": {"sha": "39450a24efc13872cf32527a9310cb03a376d57a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/39450a24efc13872cf32527a9310cb03a376d57a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/78af79ab5abdbfc756d51c01cea43bb9366496d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78af79ab5abdbfc756d51c01cea43bb9366496d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78af79ab5abdbfc756d51c01cea43bb9366496d7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78af79ab5abdbfc756d51c01cea43bb9366496d7/comments", "author": null, "committer": null, "parents": [{"sha": "3c58aa350db775eb62cbbdcc12d92889bb51b5bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c58aa350db775eb62cbbdcc12d92889bb51b5bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c58aa350db775eb62cbbdcc12d92889bb51b5bf"}], "stats": {"total": 34, "additions": 18, "deletions": 16}, "files": [{"sha": "3be2bfa1799a15f6c829d08316dffce1981428a7", "filename": "gcc/cccp.c", "status": "modified", "additions": 18, "deletions": 16, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78af79ab5abdbfc756d51c01cea43bb9366496d7/gcc%2Fcccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78af79ab5abdbfc756d51c01cea43bb9366496d7/gcc%2Fcccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcccp.c?ref=78af79ab5abdbfc756d51c01cea43bb9366496d7", "patch": "@@ -1,5 +1,5 @@\n /* C Compatible Compiler Preprocessor (CCCP)\n-Copyright (C) 1986, 1987, 1989, 1992 Free Software Foundation, Inc.\n+Copyright (C) 1986, 1987, 1989, 1992, 1993 Free Software Foundation, Inc.\n                     Written by Paul Rubin, June 1986\n \t\t    Adapted to ANSI C, Richard Stallman, Jan 1987\n \n@@ -6429,22 +6429,24 @@ skip_if_group (ip, any)\n \t and backslash-newlines, and see if we reach this #.\n \t If not, this # is not special.  */\n       bp = beg_of_line;\n-      while (1) {\n-\tif (is_hor_space[*bp])\n-\t  bp++;\n-\telse if (*bp == '\\\\' && bp[1] == '\\n')\n-\t  bp += 2;\n-\telse if (*bp == '/' && bp[1] == '*') {\n-\t  bp += 2;\n-\t  while (!(*bp == '*' && bp[1] == '/'))\n+      /* If -traditional, require # to be at beginning of line.  */\n+      if (!traditional)\n+\twhile (1) {\n+\t  if (is_hor_space[*bp])\n \t    bp++;\n-\t  bp += 2;\n-\t} else if (cplusplus_comments && *bp == '/' && bp[1] == '/') {\n-\t  bp += 2;\n-\t  while (*bp++ != '\\n') ;\n-        }\n-\telse break;\n-      }\n+\t  else if (*bp == '\\\\' && bp[1] == '\\n')\n+\t    bp += 2;\n+\t  else if (*bp == '/' && bp[1] == '*') {\n+\t    bp += 2;\n+\t    while (!(*bp == '*' && bp[1] == '/'))\n+\t      bp++;\n+\t    bp += 2;\n+\t  } else if (cplusplus_comments && *bp == '/' && bp[1] == '/') {\n+\t    bp += 2;\n+\t    while (*bp++ != '\\n') ;\n+\t  }\n+\t  else break;\n+\t}\n       if (bp != ip->bufp) {\n \tbp = ip->bufp + 1;\t/* Reset bp to after the #.  */\n \tbreak;"}]}