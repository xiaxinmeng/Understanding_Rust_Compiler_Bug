{"sha": "18eaea7f15cf89aa5e0c9c99c76b14dfc39563c5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MThlYWVhN2YxNWNmODlhYTVlMGM5Yzk5Yzc2YjE0ZGZjMzk1NjNjNQ==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@eyesopen.com", "date": "2005-11-26T04:06:57Z"}, "committer": {"name": "Roger Sayle", "email": "sayle@gcc.gnu.org", "date": "2005-11-26T04:06:57Z"}, "message": "re PR middle-end/21309 (internal compiler error: in expand_mult_const, at expmed.c:2884)\n\n\n\tPR middle-end/21309\n\t* expmed.c (choose_mult_variant): Return immediately when mult_cost\n\tis less than zero.  Limit mult_cost to a reasonable upper bound for\n\tthe synthetic multiplication sequence.\n\nFrom-SVN: r107537", "tree": {"sha": "c16de2a90743698ed3aced9ff6b2d3d645393e96", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c16de2a90743698ed3aced9ff6b2d3d645393e96"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/18eaea7f15cf89aa5e0c9c99c76b14dfc39563c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18eaea7f15cf89aa5e0c9c99c76b14dfc39563c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/18eaea7f15cf89aa5e0c9c99c76b14dfc39563c5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18eaea7f15cf89aa5e0c9c99c76b14dfc39563c5/comments", "author": null, "committer": null, "parents": [{"sha": "7e7b53aa73f8b47b73e924289204eac5d84723cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e7b53aa73f8b47b73e924289204eac5d84723cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e7b53aa73f8b47b73e924289204eac5d84723cf"}], "stats": {"total": 18, "additions": 18, "deletions": 0}, "files": [{"sha": "c4ec10c521f72e6764699bfb8ecfcffd0f1c6cbe", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18eaea7f15cf89aa5e0c9c99c76b14dfc39563c5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18eaea7f15cf89aa5e0c9c99c76b14dfc39563c5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=18eaea7f15cf89aa5e0c9c99c76b14dfc39563c5", "patch": "@@ -1,3 +1,10 @@\n+2005-11-25  Roger Sayle  <roger@eyesopen.com>\n+\n+\tPR middle-end/21309\n+\t* expmed.c (choose_mult_variant): Return immediately when mult_cost\n+\tis less than zero.  Limit mult_cost to a reasonable upper bound for\n+\tthe synthetic multiplication sequence.\n+\n 2005-11-25  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \tPR middle-end/25022"}, {"sha": "ec2758ec8eff059f15047f4dd1797247b4074ff0", "filename": "gcc/expmed.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18eaea7f15cf89aa5e0c9c99c76b14dfc39563c5/gcc%2Fexpmed.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18eaea7f15cf89aa5e0c9c99c76b14dfc39563c5/gcc%2Fexpmed.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpmed.c?ref=18eaea7f15cf89aa5e0c9c99c76b14dfc39563c5", "patch": "@@ -2836,6 +2836,17 @@ choose_mult_variant (enum machine_mode mode, HOST_WIDE_INT val,\n   struct mult_cost limit;\n   int op_cost;\n \n+  /* Fail quickly for impossible bounds.  */\n+  if (mult_cost < 0)\n+    return false;\n+\n+  /* Ensure that mult_cost provides a reasonable upper bound.\n+     Any constant multiplication can be performed with less\n+     than 2 * bits additions.  */\n+  op_cost = 2 * GET_MODE_BITSIZE (mode) * add_cost[mode];\n+  if (mult_cost > op_cost)\n+    mult_cost = op_cost;\n+\n   *variant = basic_variant;\n   limit.cost = mult_cost;\n   limit.latency = mult_cost;"}]}