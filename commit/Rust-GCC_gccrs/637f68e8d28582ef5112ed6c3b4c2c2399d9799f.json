{"sha": "637f68e8d28582ef5112ed6c3b4c2c2399d9799f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjM3ZjY4ZThkMjg1ODJlZjUxMTJlZDZjM2I0YzJjMjM5OWQ5Nzk5Zg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2012-06-12T18:32:13Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2012-06-12T18:32:13Z"}, "message": "pt.c (tsubst_expr): Instantiate local class.\n\n\t* pt.c (tsubst_expr) [TAG_DEFN]: Instantiate local class.\n\t* class.c (finish_struct): Don't add a TAG_DEFN for a lambda.\n\t* decl2.c (finish_static_data_member_decl): Avoid redundant error.\n\nFrom-SVN: r188474", "tree": {"sha": "02046b2845928e6fc1099d3bc8dab7826a4378df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/02046b2845928e6fc1099d3bc8dab7826a4378df"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/637f68e8d28582ef5112ed6c3b4c2c2399d9799f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/637f68e8d28582ef5112ed6c3b4c2c2399d9799f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/637f68e8d28582ef5112ed6c3b4c2c2399d9799f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/637f68e8d28582ef5112ed6c3b4c2c2399d9799f/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fdaf2f48c02dcb5dcf9bbca130b2de56fc947f75", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fdaf2f48c02dcb5dcf9bbca130b2de56fc947f75", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fdaf2f48c02dcb5dcf9bbca130b2de56fc947f75"}], "stats": {"total": 28, "additions": 25, "deletions": 3}, "files": [{"sha": "9d3fdfefa89f33ce5319443b6cec415b0fdfcbe8", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/637f68e8d28582ef5112ed6c3b4c2c2399d9799f/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/637f68e8d28582ef5112ed6c3b4c2c2399d9799f/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=637f68e8d28582ef5112ed6c3b4c2c2399d9799f", "patch": "@@ -1,5 +1,9 @@\n 2012-06-09  Jason Merrill  <jason@redhat.com>\n \n+\t* pt.c (tsubst_expr) [TAG_DEFN]: Instantiate local class.\n+\t* class.c (finish_struct): Don't add a TAG_DEFN for a lambda.\n+\t* decl2.c (finish_static_data_member_decl): Avoid redundant error.\n+\n \tPR c++/53599\n \t* name-lookup.c (pushtag_1): Add a DECL_EXPR for a local class.\n \t* semantics.c (finish_cond): Build a COMPOUND_EXPR."}, {"sha": "021344bad7c401d241382a3e9b24d4d16a8a512d", "filename": "gcc/cp/class.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/637f68e8d28582ef5112ed6c3b4c2c2399d9799f/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/637f68e8d28582ef5112ed6c3b4c2c2399d9799f/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=637f68e8d28582ef5112ed6c3b4c2c2399d9799f", "patch": "@@ -6337,7 +6337,9 @@ finish_struct (tree t, tree attributes)\n   else\n     error (\"trying to finish struct, but kicked out due to previous parse errors\");\n \n-  if (processing_template_decl && at_function_scope_p ())\n+  if (processing_template_decl && at_function_scope_p ()\n+      /* Lambdas are defined by the LAMBDA_EXPR.  */\n+      && !LAMBDA_TYPE_P (t))\n     add_stmt (build_min (TAG_DEFN, t));\n \n   return t;"}, {"sha": "2e3c9a633625275cf01c3e3a4b73187e5d6b6437", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/637f68e8d28582ef5112ed6c3b4c2c2399d9799f/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/637f68e8d28582ef5112ed6c3b4c2c2399d9799f/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=637f68e8d28582ef5112ed6c3b4c2c2399d9799f", "patch": "@@ -770,7 +770,9 @@ finish_static_data_member_decl (tree decl,\n   if (! processing_template_decl)\n     VEC_safe_push (tree, gc, pending_statics, decl);\n \n-  if (LOCAL_CLASS_P (current_class_type))\n+  if (LOCAL_CLASS_P (current_class_type)\n+      /* We already complained about the template definition.  */\n+      && !DECL_TEMPLATE_INSTANTIATION (decl))\n     permerror (input_location, \"local class %q#T shall not have static data member %q#D\",\n \t       current_class_type, decl);\n "}, {"sha": "5e02c8c41930c2bc60c56f3a91221be2e71dfca7", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/637f68e8d28582ef5112ed6c3b4c2c2399d9799f/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/637f68e8d28582ef5112ed6c3b4c2c2399d9799f/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=637f68e8d28582ef5112ed6c3b4c2c2399d9799f", "patch": "@@ -13123,7 +13123,21 @@ tsubst_expr (tree t, tree args, tsubst_flags_t complain, tree in_decl,\n       break;\n \n     case TAG_DEFN:\n-      tsubst (TREE_TYPE (t), args, complain, NULL_TREE);\n+      tmp = tsubst (TREE_TYPE (t), args, complain, NULL_TREE);\n+      if (CLASS_TYPE_P (tmp))\n+\t{\n+\t  /* Local classes are not independent templates; they are\n+\t     instantiated along with their containing function.  And this\n+\t     way we don't have to deal with pushing out of one local class\n+\t     to instantiate a member of another local class.  */\n+\t  tree fn;\n+\t  /* Closures are handled by the LAMBDA_EXPR.  */\n+\t  gcc_assert (!LAMBDA_TYPE_P (TREE_TYPE (t)));\n+\t  complete_type (tmp);\n+\t  for (fn = TYPE_METHODS (tmp); fn; fn = DECL_CHAIN (fn))\n+\t    if (!DECL_ARTIFICIAL (fn))\n+\t      instantiate_decl (fn, /*defer_ok*/0, /*expl_inst_class*/false);\n+\t}\n       break;\n \n     case STATIC_ASSERT:"}]}