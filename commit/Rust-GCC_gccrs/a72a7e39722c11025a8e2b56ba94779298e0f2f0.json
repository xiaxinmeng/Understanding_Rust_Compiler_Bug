{"sha": "a72a7e39722c11025a8e2b56ba94779298e0f2f0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTcyYTdlMzk3MjJjMTEwMjVhOGUyYjU2YmE5NDc3OTI5OGUwZjJmMA==", "commit": {"author": {"name": "Bill Schmidt", "email": "wschmidt@linux.vnet.ibm.com", "date": "2017-08-14T14:26:33Z"}, "committer": {"name": "William Schmidt", "email": "wschmidt@gcc.gnu.org", "date": "2017-08-14T14:26:33Z"}, "message": "re PR target/79845 (rs6000: make code in rs6000.c more i18n-friendly)\n\n[gcc]\n\n2017-08-14  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n\n\tPR target/79845\n\t* config/rs6000/linux64.h (INVALID_64BIT): Use quoted strings.\n\t* config/rs6000/rs6000-c.c (altivec_resolve_overloaded_builtin):\n\tLikewise.\n\t* config/rs6000/rs6000.c (rs6000_init_hard_regno_mode_ok): Use\n\tquoted strings, and make more translator-friendly.\n\t(darwin_rs6000_override_options): Likewise.\n\t(rs6000_option_override_internal): Likewise.\n\t(rs6000_return_in_memory): Fix overlong line.\n\t(init_cmulative_args): Use quoted strings, and make more\n\ttranslator-friendly.\n\t(rs6000_pass_by_reference): Fix overlong line.\n\t(def_builtin): Use quoted strings.\n\t(altivec_expand_predicate_builtin): Use quoted strings, and make\n\tmore translator-friendly.\n\t(htm_expand_builtin): Use quoted strings.\n\t(cpu_expand_builtin): Use quoted strings, and make more\n\ttranslator-friendly.\n\t(altivec_expand_builtin): Likewise.\n\t(paired_expand_predicate_builtin): Likewise.\n\t(rs6000_invalid_builtin): Likewise.\n\t(builtin_function_type): Use quoted strings.\n\t(rs6000_expand_split_stack_prologue): Use quoted strings, and make\n\tmore translator-friendly.\n\t(rs6000_trampoline_init): Likewise.\n\t(rs6000_handle_altivec_attribute): Likewise.\n\t(rs6000_inner_target_options): Use quoted strings.\n\t(rs6000_disable_incompatible_switches): Likewise.\n\t* config/rs6000/sysv4.h (SUBTARGET_OVERRIDE_OPTIONS): Use quoted\n\tstrings, and make more translator-friendly.\n\t(SUBSUBTARGET_OVERRIDE_OPTIONS): Use quoted strings.\n\n[gcc/testsuite]\n\n2017-08-14  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n\n\tPR target/79845\n\t* g++.dg/ext/altivec-cell-5.C: Adjust diagnostic strings.\n\t* gcc.target/powerpc/altivec-cell-5.c: Likewise.\n\t* gcc.target/powerpc/bfp/scalar-cmp-exp-eq-2.c: Likewise.\n\t* gcc.target/powerpc/bfp/scalar-cmp-exp-gt-2.c: Likewise.\n\t* gcc.target/powerpc/bfp/scalar-cmp-exp-lt-2.c: Likewise.\n\t* gcc.target/powerpc/bfp/scalar-cmp-exp-unordered-2.c: Likewise.\n\t* gcc.target/powerpc/bfp/scalar-extract-exp-1.c: Likewise.\n\t* gcc.target/powerpc/bfp/scalar-extract-exp-2.c: Likewise.\n\t* gcc.target/powerpc/bfp/scalar-extract-exp-4.c: Likewise.\n\t* gcc.target/powerpc/bfp/scalar-extract-exp-5.c: Likewise.\n\t* gcc.target/powerpc/bfp/scalar-extract-sig-1.c: Likewise.\n\t* gcc.target/powerpc/bfp/scalar-extract-sig-2.c: Likewise.\n\t* gcc.target/powerpc/bfp/scalar-extract-sig-4.c: Likewise.\n\t* gcc.target/powerpc/bfp/scalar-extract-sig-5.c: Likewise.\n\t* gcc.target/powerpc/bfp/scalar-insert-exp-1.c: Likewise.\n\t* gcc.target/powerpc/bfp/scalar-insert-exp-10.c: Likewise.\n\t* gcc.target/powerpc/bfp/scalar-insert-exp-11.c: Likewise.\n\t* gcc.target/powerpc/bfp/scalar-insert-exp-2.c: Likewise.\n\t* gcc.target/powerpc/bfp/scalar-insert-exp-4.c: Likewise.\n\t* gcc.target/powerpc/bfp/scalar-insert-exp-5.c: Likewise.\n\t* gcc.target/powerpc/bfp/scalar-insert-exp-7.c: Likewise.\n\t* gcc.target/powerpc/bfp/scalar-insert-exp-8.c: Likewise.\n\t* gcc.target/powerpc/bfp/scalar-test-data-class-11.c: Likewise.\n\t* gcc.target/powerpc/bfp/scalar-test-data-class-6.c: Likewise.\n\t* gcc.target/powerpc/bfp/scalar-test-data-class-7.c: Likewise.\n\t* gcc.target/powerpc/bfp/scalar-test-neg-2.c: Likewise.\n\t* gcc.target/powerpc/bfp/scalar-test-neg-3.c: Likewise.\n\t* gcc.target/powerpc/bfp/scalar-test-neg-5.c: Likewise.\n\t* gcc.target/powerpc/bfp/vec-extract-exp-2.c: Likewise.\n\t* gcc.target/powerpc/bfp/vec-extract-exp-3.c: Likewise.\n\t* gcc.target/powerpc/bfp/vec-extract-sig-2.c: Likewise.\n\t* gcc.target/powerpc/bfp/vec-extract-sig-3.c: Likewise.\n\t* gcc.target/powerpc/bfp/vec-insert-exp-2.c: Likewise.\n\t* gcc.target/powerpc/bfp/vec-insert-exp-3.c: Likewise.\n\t* gcc.target/powerpc/bfp/vec-insert-exp-6.c: Likewise.\n\t* gcc.target/powerpc/bfp/vec-insert-exp-7.c: Likewise.\n\t* gcc.target/powerpc/bfp/vec-test-data-class-2.c: Likewise.\n\t* gcc.target/powerpc/bfp/vec-test-data-class-3.c: Likewise.\n\t* gcc.target/powerpc/byte-in-either-range-1.c: Likewise.\n\t* gcc.target/powerpc/byte-in-range-1.c: Likewise.\n\t* gcc.target/powerpc/byte-in-set-1.c: Likewise.\n\t* gcc.target/powerpc/byte-in-set-2.c: Likewise.\n\t* gcc.target/powerpc/cmpb-3.c: Likewise.\n\t* gcc.target/powerpc/crypto-builtin-2.c: Likewise.\n\t* gcc.target/powerpc/dfp/dtstsfi-1.c: Likewise.\n\t* gcc.target/powerpc/dfp/dtstsfi-11.c: Likewise.\n\t* gcc.target/powerpc/dfp/dtstsfi-16.c: Likewise.\n\t* gcc.target/powerpc/dfp/dtstsfi-21.c: Likewise.\n\t* gcc.target/powerpc/dfp/dtstsfi-26.c: Likewise.\n\t* gcc.target/powerpc/dfp/dtstsfi-31.c: Likewise.\n\t* gcc.target/powerpc/dfp/dtstsfi-36.c: Likewise.\n\t* gcc.target/powerpc/dfp/dtstsfi-41.c: Likewise.\n\t* gcc.target/powerpc/dfp/dtstsfi-46.c: Likewise.\n\t* gcc.target/powerpc/dfp/dtstsfi-51.c: Likewise.\n\t* gcc.target/powerpc/dfp/dtstsfi-56.c: Likewise.\n\t* gcc.target/powerpc/dfp/dtstsfi-6.c: Likewise.\n\t* gcc.target/powerpc/dfp/dtstsfi-61.c: Likewise.\n\t* gcc.target/powerpc/dfp/dtstsfi-66.c: Likewise.\n\t* gcc.target/powerpc/dfp/dtstsfi-71.c: Likewise.\n\t* gcc.target/powerpc/dfp/dtstsfi-76.c: Likewise.\n\t* gcc.target/powerpc/no-r11-3.c: Likewise.\n\t* gcc.target/powerpc/pr80098-1.c: Likewise.\n\t* gcc.target/powerpc/pr80098-2.c: Likewise.\n\t* gcc.target/powerpc/pr80098-3.c: Likewise.\n\t* gcc.target/powerpc/pr80098-4.c: Likewise.\n\t* gcc.target/powerpc/vsu/vec-all-nez-7.c: Likewise.\n\t* gcc.target/powerpc/vsu/vec-any-eqz-7.c: Likewise.\n\t* gcc.target/powerpc/vsu/vec-cmpnez-7.c: Likewise.\n\t* gcc.target/powerpc/vsu/vec-cntlz-lsbb-2.c: Likewise.\n\t* gcc.target/powerpc/vsu/vec-cnttz-lsbb-2.c: Likewise.\n\t* gcc.target/powerpc/vsu/vec-xl-len-12.c: Likewise.\n\t* gcc.target/powerpc/vsu/vec-xl-len-13.c: Likewise.\n\t* gcc.target/powerpc/vsu/vec-xlx-7.c: Likewise.\n\t* gcc.target/powerpc/vsu/vec-xrx-7.c: Likewise.\n\t* gcc.target/powerpc/vsu/vec-xst-len-12.c: Likewise.\n\t* gcc.target/powerpc/vsu/vec-xst-len-13.c: Likewise.\n\nFrom-SVN: r251092", "tree": {"sha": "4542956a460a0be0c68e91103c558cae3a9e7c04", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4542956a460a0be0c68e91103c558cae3a9e7c04"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a72a7e39722c11025a8e2b56ba94779298e0f2f0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a72a7e39722c11025a8e2b56ba94779298e0f2f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a72a7e39722c11025a8e2b56ba94779298e0f2f0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a72a7e39722c11025a8e2b56ba94779298e0f2f0/comments", "author": {"login": "wschmidt-ibm", "id": 5520937, "node_id": "MDQ6VXNlcjU1MjA5Mzc=", "avatar_url": "https://avatars.githubusercontent.com/u/5520937?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wschmidt-ibm", "html_url": "https://github.com/wschmidt-ibm", "followers_url": "https://api.github.com/users/wschmidt-ibm/followers", "following_url": "https://api.github.com/users/wschmidt-ibm/following{/other_user}", "gists_url": "https://api.github.com/users/wschmidt-ibm/gists{/gist_id}", "starred_url": "https://api.github.com/users/wschmidt-ibm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wschmidt-ibm/subscriptions", "organizations_url": "https://api.github.com/users/wschmidt-ibm/orgs", "repos_url": "https://api.github.com/users/wschmidt-ibm/repos", "events_url": "https://api.github.com/users/wschmidt-ibm/events{/privacy}", "received_events_url": "https://api.github.com/users/wschmidt-ibm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8d2d0de9f788c71f94b3fb80d1cbcaed9ecea855", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d2d0de9f788c71f94b3fb80d1cbcaed9ecea855", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d2d0de9f788c71f94b3fb80d1cbcaed9ecea855"}], "stats": {"total": 613, "additions": 374, "deletions": 239}, "files": [{"sha": "8bc4e2228b10930f3b5e354d5f12a0da82ff0337", "filename": "gcc/ChangeLog", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a72a7e39722c11025a8e2b56ba94779298e0f2f0", "patch": "@@ -1,3 +1,37 @@\n+2017-08-14  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n+\n+\tPR target/79845\n+\t* config/rs6000/linux64.h (INVALID_64BIT): Use quoted strings.\n+\t* config/rs6000/rs6000-c.c (altivec_resolve_overloaded_builtin):\n+\tLikewise.\n+\t* config/rs6000/rs6000.c (rs6000_init_hard_regno_mode_ok): Use\n+\tquoted strings, and make more translator-friendly.\n+\t(darwin_rs6000_override_options): Likewise.\n+\t(rs6000_option_override_internal): Likewise.\n+\t(rs6000_return_in_memory): Fix overlong line.\n+\t(init_cmulative_args): Use quoted strings, and make more\n+\ttranslator-friendly.\n+\t(rs6000_pass_by_reference): Fix overlong line.\n+\t(def_builtin): Use quoted strings.\n+\t(altivec_expand_predicate_builtin): Use quoted strings, and make\n+\tmore translator-friendly.\n+\t(htm_expand_builtin): Use quoted strings.\n+\t(cpu_expand_builtin): Use quoted strings, and make more\n+\ttranslator-friendly.\n+\t(altivec_expand_builtin): Likewise.\n+\t(paired_expand_predicate_builtin): Likewise.\n+\t(rs6000_invalid_builtin): Likewise.\n+\t(builtin_function_type): Use quoted strings.\n+\t(rs6000_expand_split_stack_prologue): Use quoted strings, and make\n+\tmore translator-friendly.\n+\t(rs6000_trampoline_init): Likewise.\n+\t(rs6000_handle_altivec_attribute): Likewise.\n+\t(rs6000_inner_target_options): Use quoted strings.\n+\t(rs6000_disable_incompatible_switches): Likewise.\n+\t* config/rs6000/sysv4.h (SUBTARGET_OVERRIDE_OPTIONS): Use quoted\n+\tstrings, and make more translator-friendly.\n+\t(SUBSUBTARGET_OVERRIDE_OPTIONS): Use quoted strings.\n+\n 2017-08-14  Bin Cheng  <bin.cheng@arm.com>\n \n \tPR tree-optimization/81799"}, {"sha": "f119457ffe70362070933ed6a4059ccce86f5d94", "filename": "gcc/config/rs6000/linux64.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Fconfig%2Frs6000%2Flinux64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Fconfig%2Frs6000%2Flinux64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Flinux64.h?ref=a72a7e39722c11025a8e2b56ba94779298e0f2f0", "patch": "@@ -85,7 +85,7 @@ extern int dot_symbols;\n #undef\tRS6000_ABI_NAME\n #define\tRS6000_ABI_NAME \"linux\"\n \n-#define INVALID_64BIT \"-m%s not supported in this configuration\"\n+#define INVALID_64BIT \"%<-m%s%> not supported in this configuration\"\n #define INVALID_32BIT INVALID_64BIT\n \n #ifdef LINUX64_DEFAULT_ABI_ELFv2"}, {"sha": "16328fcaaaadd267cac8a9f3c67bee9b08781376", "filename": "gcc/config/rs6000/rs6000-c.c", "status": "modified", "additions": 14, "deletions": 18, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Fconfig%2Frs6000%2Frs6000-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Fconfig%2Frs6000%2Frs6000-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-c.c?ref=a72a7e39722c11025a8e2b56ba94779298e0f2f0", "patch": "@@ -5812,7 +5812,7 @@ altivec_resolve_overloaded_builtin (location_t loc, tree fndecl,\n \t types.  */\n       if (nargs != 2)\n \t{\n-\t  error (\"vec_mul only accepts 2 arguments\");\n+\t  error (\"builtin %qs only accepts 2 arguments\", \"vec_mul\");\n \t  return error_mark_node;\n \t}\n \n@@ -5863,7 +5863,7 @@ altivec_resolve_overloaded_builtin (location_t loc, tree fndecl,\n \t for it (prior to power 9).  */\n       if (nargs != 2)\n \t{\n-\t  error (\"vec_cmpne only accepts 2 arguments\");\n+\t  error (\"builtin %qs only accepts 2 arguments\", \"vec_cmpne\");\n \t  return error_mark_node;\n \t}\n \n@@ -5936,7 +5936,7 @@ altivec_resolve_overloaded_builtin (location_t loc, tree fndecl,\n \t{\n \t  const char *name = fcode == ALTIVEC_BUILTIN_VEC_ADDE ?\n \t    \"vec_adde\": \"vec_sube\";\n-\t  error (\"%s only accepts 3 arguments\", name);\n+\t  error (\"builtin %qs only accepts 3 arguments\", name);\n \t  return error_mark_node;\n \t}\n \n@@ -6019,7 +6019,7 @@ altivec_resolve_overloaded_builtin (location_t loc, tree fndecl,\n \t{\n \t  const char *name = fcode == ALTIVEC_BUILTIN_VEC_ADDEC ?\n \t    \"vec_addec\": \"vec_subec\";\n-\t  error (\"%s only accepts 3 arguments\", name);\n+\t  error (\"builtin %qs only accepts 3 arguments\", name);\n \t  return error_mark_node;\n \t}\n \n@@ -6126,19 +6126,14 @@ altivec_resolve_overloaded_builtin (location_t loc, tree fndecl,\n       vec<constructor_elt, va_gc> *vec;\n       const char *name = fcode == ALTIVEC_BUILTIN_VEC_SPLATS ? \"vec_splats\": \"vec_promote\";\n \n-      if (nargs == 0)\n-\t{\n-\t  error (\"%s only accepts %d arguments\", name, (fcode == ALTIVEC_BUILTIN_VEC_PROMOTE)+1 );\n-\t  return error_mark_node;\n-\t}\n       if (fcode == ALTIVEC_BUILTIN_VEC_SPLATS && nargs != 1)\n \t{\n-\t  error (\"%s only accepts 1 argument\", name);\n+\t  error (\"builtin %qs only accepts 1 argument\", name);\n \t  return error_mark_node;\n \t}\n       if (fcode == ALTIVEC_BUILTIN_VEC_PROMOTE && nargs != 2)\n \t{\n-\t  error (\"%s only accepts 2 arguments\", name);\n+\t  error (\"builtin %qs only accepts 2 arguments\", name);\n \t  return error_mark_node;\n \t}\n       /* Ignore promote's element argument.  */\n@@ -6204,7 +6199,7 @@ altivec_resolve_overloaded_builtin (location_t loc, tree fndecl,\n       /* No second argument. */\n       if (nargs != 2)\n \t{\n-\t  error (\"vec_extract only accepts 2 arguments\");\n+\t  error (\"builtin %qs only accepts 2 arguments\", \"vec_extract\");\n \t  return error_mark_node;\n \t}\n \n@@ -6373,7 +6368,7 @@ altivec_resolve_overloaded_builtin (location_t loc, tree fndecl,\n       /* No second or third arguments. */\n       if (nargs != 3)\n \t{\n-\t  error (\"vec_insert only accepts 3 arguments\");\n+\t  error (\"builtin %qs only accepts 3 arguments\", \"vec_insert\");\n \t  return error_mark_node;\n \t}\n \n@@ -6698,7 +6693,7 @@ altivec_resolve_overloaded_builtin (location_t loc, tree fndecl,\n \n \tif (nargs != 2)\n \t  {\n-\t    error (\"__builtin_cmpb only accepts 2 arguments\");\n+\t    error (\"builtin %qs only accepts 2 arguments\", \"__builtin_cmpb\");\n \t    return error_mark_node;\n \t  }\n \n@@ -6739,7 +6734,8 @@ altivec_resolve_overloaded_builtin (location_t loc, tree fndecl,\n \n \tif (nargs != 2)\n \t  {\n-\t    error (\"scalar_insert_exp only accepts 2 arguments\");\n+\t    error (\"builtin %qs only accepts 2 arguments\",\n+\t\t   \"scalar_insert_exp\");\n \t    return error_mark_node;\n \t  }\n \n@@ -6802,15 +6798,15 @@ altivec_resolve_overloaded_builtin (location_t loc, tree fndecl,\n     if (unsupported_builtin)\n       {\n \tconst char *name = rs6000_overloaded_builtin_name (fcode);\n-\terror (\"builtin function %s not supported in this compiler configuration\",\n-\t       name);\n+\terror (\"builtin function %qs not supported in this compiler \"\n+\t       \"configuration\", name);\n \treturn error_mark_node;\n       }\n   }\n  bad:\n   {\n     const char *name = rs6000_overloaded_builtin_name (fcode);\n-    error (\"invalid parameter combination for AltiVec intrinsic %s\", name);\n+    error (\"invalid parameter combination for AltiVec intrinsic %qs\", name);\n     return error_mark_node;\n   }\n }"}, {"sha": "1360c15eb693059649b41bd701f02d664205c50b", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 122, "deletions": 98, "changes": 220, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=a72a7e39722c11025a8e2b56ba94779298e0f2f0", "patch": "@@ -3648,11 +3648,14 @@ rs6000_init_hard_regno_mode_ok (bool global_init_p)\n   if (rs6000_recip_control)\n     {\n       if (!flag_finite_math_only)\n-\twarning (0, \"-mrecip requires -ffinite-math or -ffast-math\");\n+\twarning (0, \"%qs requires %qs or %qs\", \"-mrecip\", \"-ffinite-math\",\n+\t\t \"-ffast-math\");\n       if (flag_trapping_math)\n-\twarning (0, \"-mrecip requires -fno-trapping-math or -ffast-math\");\n+\twarning (0, \"%qs requires %qs or %qs\", \"-mrecip\",\n+\t\t \"-fno-trapping-math\", \"-ffast-math\");\n       if (!flag_reciprocal_math)\n-\twarning (0, \"-mrecip requires -freciprocal-math or -ffast-math\");\n+\twarning (0, \"%qs requires %qs or %qs\", \"-mrecip\", \"-freciprocal-math\",\n+\t\t \"-ffast-math\");\n       if (flag_finite_math_only && !flag_trapping_math && flag_reciprocal_math)\n \t{\n \t  if (RS6000_RECIP_HAVE_RE_P (SFmode)\n@@ -3752,7 +3755,7 @@ darwin_rs6000_override_options (void)\n   if (TARGET_64BIT && ! TARGET_POWERPC64)\n     {\n       rs6000_isa_flags |= OPTION_MASK_POWERPC64;\n-      warning (0, \"-m64 requires PowerPC64 architecture, enabling\");\n+      warning (0, \"%qs requires PowerPC64 architecture, enabling\", \"-m64\");\n     }\n   if (flag_mkernel)\n     {\n@@ -3934,8 +3937,9 @@ rs6000_option_override_internal (bool global_init_p)\n       && rs6000_alignment_flags == MASK_ALIGN_POWER\n       && DEFAULT_ABI == ABI_DARWIN\n       && TARGET_64BIT)\n-    warning (0, \"-malign-power is not supported for 64-bit Darwin;\"\n-\t     \" it is incompatible with the installed C and C++ libraries\");\n+    warning (0, \"%qs is not supported for 64-bit Darwin;\"\n+\t     \" it is incompatible with the installed C and C++ libraries\",\n+\t     \"-malign-power\");\n \n   /* Numerous experiment shows that IRA based loop pressure\n      calculation works better for RTL loop invariant motion on targets\n@@ -4153,14 +4157,16 @@ rs6000_option_override_internal (bool global_init_p)\n \t{\n \t  rs6000_isa_flags &= ~OPTION_MASK_MULTIPLE;\n \t  if ((rs6000_isa_flags_explicit & OPTION_MASK_MULTIPLE) != 0)\n-\t    warning (0, \"-mmultiple is not supported on little endian systems\");\n+\t    warning (0, \"%qs is not supported on little endian systems\",\n+\t\t     \"-mmultiple\");\n \t}\n \n       if (TARGET_STRING)\n \t{\n \t  rs6000_isa_flags &= ~OPTION_MASK_STRING;\n \t  if ((rs6000_isa_flags_explicit & OPTION_MASK_STRING) != 0)\n-\t    warning (0, \"-mstring is not supported on little endian systems\");\n+\t    warning (0, \"%qs is not supported on little endian systems\",\n+\t\t     \"-mstring\");\n \t}\n     }\n \n@@ -4254,15 +4260,16 @@ rs6000_option_override_internal (bool global_init_p)\n \t      rs6000_isa_flags |= (ISA_3_0_MASKS_SERVER & ~ignore_masks);\n \t    }\n \t  else\n-\t    error (\"power9 target option is incompatible with -mcpu=<xxx> for \"\n-\t\t   \"<xxx> less than power9\");\n+\t    error (\"power9 target option is incompatible with %<%s=<xxx>%> \"\n+\t\t   \"for <xxx> less than power9\", \"-mcpu\");\n \t}\n       else if ((ISA_3_0_MASKS_SERVER & rs6000_isa_flags_explicit)\n \t       != (ISA_3_0_MASKS_SERVER & rs6000_isa_flags\n \t\t   & rs6000_isa_flags_explicit))\n \t/* Enforce that none of the ISA_3_0_MASKS_SERVER flags\n \t   were explicitly cleared.  */\n-\terror (\"-mpower9-minmax incompatible with explicitly disabled options\");\n+\terror (\"%qs incompatible with explicitly disabled options\",\n+\t       \"-mpower9-minmax\");\n       else\n \trs6000_isa_flags |= ISA_3_0_MASKS_SERVER;\n     }\n@@ -4286,29 +4293,29 @@ rs6000_option_override_internal (bool global_init_p)\n   if (TARGET_CRYPTO && !TARGET_ALTIVEC)\n     {\n       if (rs6000_isa_flags_explicit & OPTION_MASK_CRYPTO)\n-\terror (\"-mcrypto requires -maltivec\");\n+\terror (\"%qs requires %qs\", \"-mcrypto\", \"-maltivec\");\n       rs6000_isa_flags &= ~OPTION_MASK_CRYPTO;\n     }\n \n   if (TARGET_DIRECT_MOVE && !TARGET_VSX)\n     {\n       if (rs6000_isa_flags_explicit & OPTION_MASK_DIRECT_MOVE)\n-\terror (\"-mdirect-move requires -mvsx\");\n+\terror (\"%qs requires %qs\", \"-mdirect-move\", \"-mvsx\");\n       rs6000_isa_flags &= ~OPTION_MASK_DIRECT_MOVE;\n     }\n \n   if (TARGET_P8_VECTOR && !TARGET_ALTIVEC)\n     {\n       if (rs6000_isa_flags_explicit & OPTION_MASK_P8_VECTOR)\n-\terror (\"-mpower8-vector requires -maltivec\");\n+\terror (\"%qs requires %qs\", \"-mpower8-vector\", \"-maltivec\");\n       rs6000_isa_flags &= ~OPTION_MASK_P8_VECTOR;\n     }\n \n   if (TARGET_P8_VECTOR && !TARGET_VSX)\n     {\n       if ((rs6000_isa_flags_explicit & OPTION_MASK_P8_VECTOR)\n \t  && (rs6000_isa_flags_explicit & OPTION_MASK_VSX))\n-\terror (\"-mpower8-vector requires -mvsx\");\n+\terror (\"%qs requires %qs\", \"-mpower8-vector\", \"-mvsx\");\n       else if ((rs6000_isa_flags_explicit & OPTION_MASK_P8_VECTOR) == 0)\n \t{\n \t  rs6000_isa_flags &= ~OPTION_MASK_P8_VECTOR;\n@@ -4327,14 +4334,14 @@ rs6000_option_override_internal (bool global_init_p)\n   if (TARGET_VSX_TIMODE && !TARGET_VSX)\n     {\n       if (rs6000_isa_flags_explicit & OPTION_MASK_VSX_TIMODE)\n-\terror (\"-mvsx-timode requires -mvsx\");\n+\terror (\"%qs requires %qs\", \"-mvsx-timode\", \"-mvsx\");\n       rs6000_isa_flags &= ~OPTION_MASK_VSX_TIMODE;\n     }\n \n   if (TARGET_DFP && !TARGET_HARD_FLOAT)\n     {\n       if (rs6000_isa_flags_explicit & OPTION_MASK_DFP)\n-\terror (\"-mhard-dfp requires -mhard-float\");\n+\terror (\"%qs requires %qs\", \"-mhard-dfp\", \"-mhard-float\");\n       rs6000_isa_flags &= ~OPTION_MASK_DFP;\n     }\n \n@@ -4358,7 +4365,8 @@ rs6000_option_override_internal (bool global_init_p)\n   if (TARGET_QUAD_MEMORY && !WORDS_BIG_ENDIAN)\n     {\n       if ((rs6000_isa_flags_explicit & OPTION_MASK_QUAD_MEMORY) != 0)\n-\twarning (0, N_(\"-mquad-memory is not available in little endian mode\"));\n+\twarning (0, N_(\"-mquad-memory is not available in little endian \"\n+\t\t       \"mode\"));\n \n       rs6000_isa_flags &= ~OPTION_MASK_QUAD_MEMORY;\n     }\n@@ -4383,10 +4391,11 @@ rs6000_option_override_internal (bool global_init_p)\n       if (rs6000_isa_flags_explicit & OPTION_MASK_P8_FUSION)\n \t{\n \t  if (TARGET_P8_FUSION_SIGN)\n-\t    error (\"-mpower8-fusion-sign requires -mpower8-fusion\");\n+\t    error (\"%qs requires %qs\", \"-mpower8-fusion-sign\",\n+\t\t   \"-mpower8-fusion\");\n \n \t  if (TARGET_TOC_FUSION)\n-\t    error (\"-mtoc-fusion requires -mpower8-fusion\");\n+\t    error (\"%qs requires %qs\", \"-mtoc-fusion\", \"-mpower8-fusion\");\n \n \t  rs6000_isa_flags &= ~OPTION_MASK_P8_FUSION;\n \t}\n@@ -4403,7 +4412,7 @@ rs6000_option_override_internal (bool global_init_p)\n \t     error messages.  However, if users have managed to select\n \t     power9-fusion without selecting power8-fusion, they\n \t     already know about undocumented flags.  */\n-\t  error (\"-mpower9-fusion requires -mpower8-fusion\");\n+\t  error (\"%qs requires %qs\", \"-mpower9-fusion\", \"-mpower8-fusion\");\n \t  rs6000_isa_flags &= ~OPTION_MASK_P9_FUSION;\n \t}\n       else\n@@ -4456,7 +4465,7 @@ rs6000_option_override_internal (bool global_init_p)\n \t already know about undocumented flags.  */\n       if ((rs6000_isa_flags_explicit & OPTION_MASK_P9_VECTOR) &&\n \t  (rs6000_isa_flags_explicit & OPTION_MASK_P8_VECTOR))\n-\terror (\"-mpower9-vector requires -mpower8-vector\");\n+\terror (\"%qs requires %qs\", \"-mpower9-vector\", \"-mpower8-vector\");\n       else if ((rs6000_isa_flags_explicit & OPTION_MASK_P9_VECTOR) == 0)\n \t{\n \t  rs6000_isa_flags &= ~OPTION_MASK_P9_VECTOR;\n@@ -4501,7 +4510,7 @@ rs6000_option_override_internal (bool global_init_p)\n       if ((rs6000_isa_flags_explicit & OPTION_MASK_P9_VECTOR)\n \t  && (rs6000_isa_flags_explicit & (OPTION_MASK_P9_DFORM_SCALAR\n \t\t\t\t\t   | OPTION_MASK_P9_DFORM_VECTOR)))\n-\terror (\"-mpower9-dform requires -mpower9-vector\");\n+\terror (\"%qs requires %qs\", \"-mpower9-dform\", \"-mpower9-vector\");\n       else if (rs6000_isa_flags_explicit & OPTION_MASK_P9_VECTOR)\n \t{\n \t  rs6000_isa_flags &=\n@@ -4530,8 +4539,9 @@ rs6000_option_override_internal (bool global_init_p)\n \t  && ((rs6000_isa_flags_explicit & OPTION_MASK_P9_DFORM_VECTOR) ||\n \t      (rs6000_isa_flags_explicit & OPTION_MASK_P9_DFORM_SCALAR) ||\n \t      (TARGET_P9_DFORM_BOTH == 1)))\n-\terror (\"-mpower9-dform, -mpower9-dform-vector, -mpower9-dform-scalar\"\n-\t       \" require -mdirect-move\");\n+\terror (\"%qs, %qs, %qs require %qs\", \"-mpower9-dform\",\n+\t       \"-mpower9-dform-vector\", \"-mpower9-dform-scalar\",\n+\t       \"-mdirect-move\");\n       else if ((rs6000_isa_flags_explicit & OPTION_MASK_DIRECT_MOVE) == 0)\n \t{\n \t  rs6000_isa_flags |= OPTION_MASK_DIRECT_MOVE;\n@@ -4562,7 +4572,7 @@ rs6000_option_override_internal (bool global_init_p)\n     {\n       if (TARGET_ALLOW_MOVMISALIGN > 0\n \t  && global_options_set.x_TARGET_ALLOW_MOVMISALIGN)\n-\terror (\"-mallow-movmisalign requires -mvsx\");\n+\terror (\"%qs requires %qs\", \"-mallow-movmisalign\", \"-mvsx\");\n \n       TARGET_ALLOW_MOVMISALIGN = 0;\n     }\n@@ -4577,15 +4587,16 @@ rs6000_option_override_internal (bool global_init_p)\n       if (!TARGET_VSX)\n \t{\n \t  if (rs6000_isa_flags_explicit & OPTION_MASK_EFFICIENT_UNALIGNED_VSX)\n-\t    error (\"-mefficient-unaligned-vsx requires -mvsx\");\n+\t    error (\"%qs requires %qs\", \"-mefficient-unaligned-vsx\", \"-mvsx\");\n \n \t  rs6000_isa_flags &= ~OPTION_MASK_EFFICIENT_UNALIGNED_VSX;\n \t}\n \n       else if (!TARGET_ALLOW_MOVMISALIGN)\n \t{\n \t  if (rs6000_isa_flags_explicit & OPTION_MASK_EFFICIENT_UNALIGNED_VSX)\n-\t    error (\"-mefficient-unaligned-vsx requires -mallow-movmisalign\");\n+\t    error (\"%qs requires %qs\", \"-munefficient-unaligned-vsx\",\n+\t\t   \"-mallow-movmisalign\");\n \n \t  rs6000_isa_flags &= ~OPTION_MASK_EFFICIENT_UNALIGNED_VSX;\n \t}\n@@ -4623,7 +4634,7 @@ rs6000_option_override_internal (bool global_init_p)\n       if (TARGET_FLOAT128_KEYWORD)\n \t{\n \t  if ((rs6000_isa_flags_explicit & OPTION_MASK_FLOAT128_KEYWORD) != 0)\n-\t    error (\"-mfloat128 requires VSX support\");\n+\t    error (\"%qs requires VSX support\", \"-mfloat128\");\n \n \t  rs6000_isa_flags &= ~(OPTION_MASK_FLOAT128_TYPE\n \t\t\t\t| OPTION_MASK_FLOAT128_KEYWORD\n@@ -4633,7 +4644,7 @@ rs6000_option_override_internal (bool global_init_p)\n       else if (TARGET_FLOAT128_TYPE)\n \t{\n \t  if ((rs6000_isa_flags_explicit & OPTION_MASK_FLOAT128_TYPE) != 0)\n-\t    error (\"-mfloat128-type requires VSX support\");\n+\t    error (\"%qs requires VSX support\", \"-mfloat128-type\");\n \n \t  rs6000_isa_flags &= ~(OPTION_MASK_FLOAT128_TYPE\n \t\t\t\t| OPTION_MASK_FLOAT128_KEYWORD\n@@ -4649,7 +4660,7 @@ rs6000_option_override_internal (bool global_init_p)\n \t{\n \t  if ((rs6000_isa_flags_explicit & OPTION_MASK_FLOAT128_KEYWORD) != 0)\n \t    {\n-\t      error (\"-mfloat128 requires -mfloat128-type\");\n+\t      error (\"%qs requires %qs\", \"-mfloat128\", \"-mfloat128-type\");\n \t      rs6000_isa_flags &= ~(OPTION_MASK_FLOAT128_TYPE\n \t\t\t\t    | OPTION_MASK_FLOAT128_KEYWORD\n \t\t\t\t    | OPTION_MASK_FLOAT128_HW);\n@@ -4662,7 +4673,8 @@ rs6000_option_override_internal (bool global_init_p)\n \t{\n \t  if ((rs6000_isa_flags_explicit & OPTION_MASK_FLOAT128_HW) != 0)\n \t    {\n-\t      error (\"-mfloat128-hardware requires -mfloat128-type\");\n+\t      error (\"%qs requires %qs\", \"-mfloat128-hardware\",\n+\t\t     \"-mfloat128-type\");\n \t      rs6000_isa_flags &= ~OPTION_MASK_FLOAT128_HW;\n \t    }\n \t  else\n@@ -4685,15 +4697,15 @@ rs6000_option_override_internal (bool global_init_p)\n       && (rs6000_isa_flags & ISA_3_0_MASKS_IEEE) != ISA_3_0_MASKS_IEEE)\n     {\n       if ((rs6000_isa_flags_explicit & OPTION_MASK_FLOAT128_HW) != 0)\n-\terror (\"-mfloat128-hardware requires full ISA 3.0 support\");\n+\terror (\"%qs requires full ISA 3.0 support\", \"-mfloat128-hardware\");\n \n       rs6000_isa_flags &= ~OPTION_MASK_FLOAT128_HW;\n     }\n \n   if (TARGET_FLOAT128_HW && !TARGET_64BIT)\n     {\n       if ((rs6000_isa_flags_explicit & OPTION_MASK_FLOAT128_HW) != 0)\n-\terror (\"-mfloat128-hardware requires -m64\");\n+\terror (\"%qs requires %qs\", \"-mfloat128-hardware\", \"-m64\");\n \n       rs6000_isa_flags &= ~OPTION_MASK_FLOAT128_HW;\n     }\n@@ -4757,8 +4769,8 @@ rs6000_option_override_internal (bool global_init_p)\n \t    rs6000_veclib_handler = rs6000_builtin_vectorized_libmass;\n \t  else\n \t    {\n-\t      error (\"unknown vectorization library ABI type (%s) for \"\n-\t\t     \"-mveclibabi= switch\", rs6000_veclibabi_name);\n+\t      error (\"unknown vectorization library ABI type (%qs) for \"\n+\t\t     \"%qs switch\", rs6000_veclibabi_name, \"-mveclibabi=\");\n \t      ret = false;\n \t    }\n \t}\n@@ -4974,13 +4986,13 @@ rs6000_option_override_internal (bool global_init_p)\n       errno = 0;\n       long offset = strtol (str, &endp, 0);\n       if (!*str || *endp || errno)\n-\terror (\"%qs is not a valid number \"\n-\t       \"in -mstack-protector-guard-offset=\", str);\n+\terror (\"%qs is not a valid number in %qs\", str,\n+\t       \"-mstack-protector-guard-offset=\");\n \n       if (!IN_RANGE (offset, -0x8000, 0x7fff)\n \t  || (TARGET_64BIT && (offset & 3)))\n-\terror (\"%qs is not a valid offset \"\n-\t       \"in -mstack-protector-guard-offset=\", str);\n+\terror (\"%qs is not a valid offset in %qs\", str,\n+\t       \"-mstack-protector-guard-offset=\");\n \n       rs6000_stack_protector_guard_offset = offset;\n     }\n@@ -4991,15 +5003,15 @@ rs6000_option_override_internal (bool global_init_p)\n       int reg = decode_reg_name (str);\n \n       if (!IN_RANGE (reg, 1, 31))\n-\terror (\"%qs is not a valid base register \"\n-\t       \"in -mstack-protector-guard-reg=\", str);\n+\terror (\"%qs is not a valid base register in %qs\", str,\n+\t       \"-mstack-protector-guard-reg=\");\n \n       rs6000_stack_protector_guard_reg = reg;\n     }\n \n   if (rs6000_stack_protector_guard == SSP_TLS\n       && !IN_RANGE (rs6000_stack_protector_guard_reg, 1, 31))\n-    error (\"-mstack-protector-guard=tls needs a valid base register\");\n+    error (\"%qs needs a valid base register\", \"-mstack-protector-guard=tls\");\n \n   if (global_init_p)\n     {\n@@ -5297,7 +5309,7 @@ rs6000_option_override_internal (bool global_init_p)\n \n \t      if (i == ARRAY_SIZE (recip_options))\n \t\t{\n-\t\t  error (\"unknown option for -mrecip=%s\", q);\n+\t\t  error (\"unknown option for %<%s=%s%>\", \"-mrecip\", q);\n \t\t  invert = false;\n \t\t  mask = 0;\n \t\t  ret = false;\n@@ -11231,7 +11243,8 @@ rs6000_return_in_memory (const_tree type, const_tree fntype ATTRIBUTE_UNUSED)\n       if (!warned_for_return_big_vectors)\n \t{\n \t  warning (OPT_Wpsabi, \"GCC vector returned by reference: \"\n-\t\t   \"non-standard ABI extension with no compatibility guarantee\");\n+\t\t   \"non-standard ABI extension with no compatibility \"\n+\t\t   \"guarantee\");\n \t  warned_for_return_big_vectors = true;\n \t}\n       return true;\n@@ -11393,8 +11406,8 @@ init_cumulative_args (CUMULATIVE_ARGS *cum, tree fntype,\n       && ALTIVEC_VECTOR_MODE (TYPE_MODE (TREE_TYPE (fntype))))\n     {\n       error (\"cannot return value in vector register because\"\n-\t     \" altivec instructions are disabled, use -maltivec\"\n-\t     \" to enable them\");\n+\t     \" altivec instructions are disabled, use %qs\"\n+\t     \" to enable them\", \"-maltivec\");\n     }\n }\n \f\n@@ -11860,8 +11873,8 @@ rs6000_function_arg_advance_1 (CUMULATIVE_ARGS *cum, machine_mode mode,\n \n \t  if (!TARGET_ALTIVEC)\n \t    error (\"cannot pass argument in vector register because\"\n-\t\t   \" altivec instructions are disabled, use -maltivec\"\n-\t\t   \" to enable them\");\n+\t\t   \" altivec instructions are disabled, use %qs\"\n+\t\t   \" to enable them\", \"-maltivec\");\n \n \t  /* PowerPC64 Linux and AIX allocate GPRs for a vector argument\n \t     even if it is going to be passed in a vector register.\n@@ -12778,7 +12791,8 @@ rs6000_pass_by_reference (cumulative_args_t cum ATTRIBUTE_UNUSED,\n       if (!warned_for_pass_big_vectors)\n \t{\n \t  warning (OPT_Wpsabi, \"GCC vector passed by reference: \"\n-\t\t   \"non-standard ABI extension with no compatibility guarantee\");\n+\t\t   \"non-standard ABI extension with no compatibility \"\n+\t\t   \"guarantee\");\n \t  warned_for_pass_big_vectors = true;\n \t}\n       return 1;\n@@ -13568,7 +13582,8 @@ def_builtin (const char *name, tree type, enum rs6000_builtins code)\n \n   if (rs6000_builtin_decls[(int)code])\n     fatal_error (input_location,\n-\t\t \"internal error: builtin function %s already processed\", name);\n+\t\t \"internal error: builtin function %qs already processed\",\n+\t\t name);\n \n   rs6000_builtin_decls[(int)code] = t =\n     add_builtin_function (name, type, (int)code, BUILT_IN_MD, NULL, NULL_TREE);\n@@ -14168,7 +14183,8 @@ altivec_expand_predicate_builtin (enum insn_code icode, tree exp, rtx target)\n \n   if (TREE_CODE (cr6_form) != INTEGER_CST)\n     {\n-      error (\"argument 1 of __builtin_altivec_predicate must be a constant\");\n+      error (\"argument 1 of %qs must be a constant\",\n+\t     \"__builtin_altivec_predicate\");\n       return const0_rtx;\n     }\n   else\n@@ -14225,7 +14241,8 @@ altivec_expand_predicate_builtin (enum insn_code icode, tree exp, rtx target)\n       emit_insn (gen_cr6_test_for_lt_reverse (target));\n       break;\n     default:\n-      error (\"argument 1 of __builtin_altivec_predicate is out of range\");\n+      error (\"argument 1 of %qs is out of range\",\n+\t     \"__builtin_altivec_predicate\");\n       break;\n     }\n \n@@ -14732,7 +14749,7 @@ htm_expand_builtin (tree exp, rtx target, bool * expandedp)\n     {\n       size_t uns_fcode = (size_t)fcode;\n       const char *name = rs6000_builtin_info[uns_fcode].name;\n-      error (\"builtin %s is only valid in 64-bit mode\", name);\n+      error (\"builtin %qs is only valid in 64-bit mode\", name);\n       return const0_rtx;\n     }\n \n@@ -14929,7 +14946,7 @@ cpu_expand_builtin (enum rs6000_builtins fcode, tree exp ATTRIBUTE_UNUSED,\n \n   if (TREE_CODE (arg) != STRING_CST)\n     {\n-      error (\"builtin %s only accepts a string argument\",\n+      error (\"builtin %qs only accepts a string argument\",\n \t     rs6000_builtin_info[(size_t) fcode].name);\n       return const0_rtx;\n     }\n@@ -14948,7 +14965,7 @@ cpu_expand_builtin (enum rs6000_builtins fcode, tree exp ATTRIBUTE_UNUSED,\n       if (cpuid == NULL_RTX)\n \t{\n \t  /* Invalid CPU argument.  */\n-\t  error (\"cpu %s is an invalid argument to builtin %s\",\n+\t  error (\"cpu %qs is an invalid argument to builtin %qs\",\n \t\t cpu, rs6000_builtin_info[(size_t) fcode].name);\n \t  return const0_rtx;\n \t}\n@@ -14976,8 +14993,8 @@ cpu_expand_builtin (enum rs6000_builtins fcode, tree exp ATTRIBUTE_UNUSED,\n       if (mask == NULL_RTX)\n \t{\n \t  /* Invalid HWCAP argument.  */\n-\t  error (\"hwcap %s is an invalid argument to builtin %s\",\n-\t\t hwcap, rs6000_builtin_info[(size_t) fcode].name);\n+\t  error (\"%s %qs is an invalid argument to builtin %qs\",\n+\t\t \"hwcap\", hwcap, rs6000_builtin_info[(size_t) fcode].name);\n \t  return const0_rtx;\n \t}\n \n@@ -15002,7 +15019,7 @@ cpu_expand_builtin (enum rs6000_builtins fcode, tree exp ATTRIBUTE_UNUSED,\n   cpu_builtin_p = true;\n \n #else\n-  warning (0, \"%s needs GLIBC (2.23 and newer) that exports hardware \"\n+  warning (0, \"builtin %qs needs GLIBC (2.23 and newer) that exports hardware \"\n \t   \"capability bits\", rs6000_builtin_info[(size_t) fcode].name);\n   \n   /* For old LIBCs, always return FALSE.  */\n@@ -15677,7 +15694,7 @@ altivec_expand_builtin (tree exp, rtx target, bool *expandedp)\n       if (TREE_CODE (arg0) != INTEGER_CST\n \t  || TREE_INT_CST_LOW (arg0) & ~0x3)\n \t{\n-\t  error (\"argument to dss must be a 2-bit unsigned literal\");\n+\t  error (\"argument to %qs must be a 2-bit unsigned literal\", \"dss\");\n \t  return const0_rtx;\n \t}\n \n@@ -15725,7 +15742,7 @@ altivec_expand_builtin (tree exp, rtx target, bool *expandedp)\n \n       if (TREE_CODE (arg1) != INTEGER_CST || TREE_INT_CST_LOW (arg1) > 12)\n \t{\n-\t  error (\"second argument to vec_vextract4b must be 0..12\");\n+\t  error (\"second argument to %qs must be 0..12\", \"vec_vextract4b\");\n \t  return expand_call (exp, target, false);\n \t}\n       break;\n@@ -15742,7 +15759,7 @@ altivec_expand_builtin (tree exp, rtx target, bool *expandedp)\n \n       if (TREE_CODE (arg2) != INTEGER_CST || TREE_INT_CST_LOW (arg2) > 12)\n \t{\n-\t  error (\"third argument to vec_vinsert4b must be 0..12\");\n+\t  error (\"third argument to %qs must be 0..12\", \"vec_vinsert4b\");\n \t  return expand_call (exp, target, false);\n \t}\n       break;\n@@ -15996,7 +16013,8 @@ paired_expand_predicate_builtin (enum insn_code icode, tree exp, rtx target)\n \n   if (TREE_CODE (form) != INTEGER_CST)\n     {\n-      error (\"argument 1 of __builtin_paired_predicate must be a constant\");\n+      error (\"argument 1 of %s must be a constant\",\n+\t     \"__builtin_paired_predicate\");\n       return const0_rtx;\n     }\n   else\n@@ -16043,7 +16061,8 @@ paired_expand_predicate_builtin (enum insn_code icode, tree exp, rtx target)\n       emit_insn (gen_move_from_CR_ov_bit (target, scratch));\n       return target;\n     default:\n-      error (\"argument 1 of __builtin_paired_predicate is out of range\");\n+      error (\"argument 1 of %qs is out of range\",\n+\t     \"__builtin_paired_predicate\");\n       return const0_rtx;\n     }\n \n@@ -16064,45 +16083,49 @@ rs6000_invalid_builtin (enum rs6000_builtins fncode)\n \n   gcc_assert (name != NULL);\n   if ((fnmask & RS6000_BTM_CELL) != 0)\n-    error (\"builtin function %s is only valid for the cell processor\", name);\n+    error (\"builtin function %qs is only valid for the cell processor\", name);\n   else if ((fnmask & RS6000_BTM_VSX) != 0)\n-    error (\"builtin function %s requires the -mvsx option\", name);\n+    error (\"builtin function %qs requires the %qs option\", name, \"-mvsx\");\n   else if ((fnmask & RS6000_BTM_HTM) != 0)\n-    error (\"builtin function %s requires the -mhtm option\", name);\n+    error (\"builtin function %qs requires the %qs option\", name, \"-mhtm\");\n   else if ((fnmask & RS6000_BTM_ALTIVEC) != 0)\n-    error (\"builtin function %s requires the -maltivec option\", name);\n+    error (\"builtin function %qs requires the %qs option\", name, \"-maltivec\");\n   else if ((fnmask & RS6000_BTM_PAIRED) != 0)\n-    error (\"builtin function %s requires the -mpaired option\", name);\n+    error (\"builtin function %qs requires the %qs option\", name, \"-mpaired\");\n   else if ((fnmask & (RS6000_BTM_DFP | RS6000_BTM_P8_VECTOR))\n \t   == (RS6000_BTM_DFP | RS6000_BTM_P8_VECTOR))\n-    error (\"builtin function %s requires the -mhard-dfp and\"\n-\t   \" -mpower8-vector options\", name);\n+    error (\"builtin function %qs requires the %qs and %qs options\",\n+\t   name, \"-mhard-dfp\", \"-mpower8-vector\");\n   else if ((fnmask & RS6000_BTM_DFP) != 0)\n-    error (\"builtin function %s requires the -mhard-dfp option\", name);\n+    error (\"builtin function %qs requires the %qs option\", name, \"-mhard-dfp\");\n   else if ((fnmask & RS6000_BTM_P8_VECTOR) != 0)\n-    error (\"builtin function %s requires the -mpower8-vector option\", name);\n+    error (\"builtin function %qs requires the %qs option\", name,\n+\t   \"-mpower8-vector\");\n   else if ((fnmask & (RS6000_BTM_P9_VECTOR | RS6000_BTM_64BIT))\n \t   == (RS6000_BTM_P9_VECTOR | RS6000_BTM_64BIT))\n-    error (\"builtin function %s requires the -mcpu=power9 and\"\n-\t   \" -m64 options\", name);\n+    error (\"builtin function %qs requires the %qs and %qs options\",\n+\t   name, \"-mcpu=power9\", \"-m64\");\n   else if ((fnmask & RS6000_BTM_P9_VECTOR) != 0)\n-    error (\"builtin function %s requires the -mcpu=power9 option\", name);\n+    error (\"builtin function %qs requires the %qs option\", name,\n+\t   \"-mcpu=power9\");\n   else if ((fnmask & (RS6000_BTM_P9_MISC | RS6000_BTM_64BIT))\n \t   == (RS6000_BTM_P9_MISC | RS6000_BTM_64BIT))\n-    error (\"builtin function %s requires the -mcpu=power9 and\"\n-\t   \" -m64 options\", name);\n+    error (\"builtin function %qs requires the %qs and %qs options\",\n+\t   name, \"-mcpu=power9\", \"-m64\");\n   else if ((fnmask & RS6000_BTM_P9_MISC) == RS6000_BTM_P9_MISC)\n-    error (\"builtin function %s requires the -mcpu=power9 option\", name);\n+    error (\"builtin function %qs requires the %qs option\", name,\n+\t   \"-mcpu=power9\");\n   else if ((fnmask & (RS6000_BTM_HARD_FLOAT | RS6000_BTM_LDBL128))\n \t   == (RS6000_BTM_HARD_FLOAT | RS6000_BTM_LDBL128))\n-    error (\"builtin function %s requires the -mhard-float and\"\n-\t   \" -mlong-double-128 options\", name);\n+    error (\"builtin function %qs requires the %qs and %qs options\",\n+\t   name, \"-mhard-float\", \"-mlong-double-128\");\n   else if ((fnmask & RS6000_BTM_HARD_FLOAT) != 0)\n-    error (\"builtin function %s requires the -mhard-float option\", name);\n+    error (\"builtin function %qs requires the %qs option\", name,\n+\t   \"-mhard-float\");\n   else if ((fnmask & RS6000_BTM_FLOAT128) != 0)\n-    error (\"builtin function %s requires the -mfloat128 option\", name);\n+    error (\"builtin function %qs requires the %qs option\", name, \"-mfloat128\");\n   else\n-    error (\"builtin function %s is not supported with the current options\",\n+    error (\"builtin function %qs is not supported with the current options\",\n \t   name);\n }\n \n@@ -18080,8 +18103,8 @@ builtin_function_type (machine_mode mode_ret, machine_mode mode_arg0,\n \n   if (!ret_type)\n     fatal_error (input_location,\n-\t\t \"internal error: builtin function %s had an unexpected \"\n-\t\t \"return type %s\", name, GET_MODE_NAME (h.mode[0]));\n+\t\t \"internal error: builtin function %qs had an unexpected \"\n+\t\t \"return type %qs\", name, GET_MODE_NAME (h.mode[0]));\n \n   for (i = 0; i < (int) ARRAY_SIZE (arg_type); i++)\n     arg_type[i] = NULL_TREE;\n@@ -18097,8 +18120,8 @@ builtin_function_type (machine_mode mode_ret, machine_mode mode_arg0,\n \n       if (!arg_type[i])\n \tfatal_error (input_location,\n-\t\t     \"internal error: builtin function %s, argument %d \"\n-\t\t     \"had unexpected argument type %s\", name, i,\n+\t\t     \"internal error: builtin function %qs, argument %d \"\n+\t\t     \"had unexpected argument type %qs\", name, i,\n \t\t     GET_MODE_NAME (m));\n     }\n \n@@ -29010,7 +29033,7 @@ rs6000_expand_split_stack_prologue (void)\n \n   if (global_regs[29])\n     {\n-      error (\"-fsplit-stack uses register r29\");\n+      error (\"%qs uses register r29\", \"-fsplit-stack\");\n       inform (DECL_SOURCE_LOCATION (global_regs_decl[29]),\n \t      \"conflicts with %qD\", global_regs_decl[29]);\n     }\n@@ -32309,7 +32332,7 @@ rs6000_trampoline_init (rtx m_tramp, tree fndecl, rtx cxt)\n \n \tif (!TARGET_POINTERS_TO_NESTED_FUNCTIONS)\n \t  error (\"you cannot take the address of a nested function if you use \"\n-\t\t \"the -mno-pointers-to-nested-functions option.\");\n+\t\t \"the %qs option\", \"-mno-pointers-to-nested-functions\");\n \n \tfnmem = gen_const_mem (Pmode, force_reg (Pmode, fnaddr));\n \tfn_reg = gen_reg_rtx (Pmode);\n@@ -32403,17 +32426,18 @@ rs6000_handle_altivec_attribute (tree *node,\n \t{\n \t  if (TARGET_64BIT)\n \t    error (\"use of %<long%> in AltiVec types is invalid for \"\n-\t\t   \"64-bit code without -mvsx\");\n+\t\t   \"64-bit code without %qs\", \"-mvsx\");\n \t  else if (rs6000_warn_altivec_long)\n \t    warning (0, \"use of %<long%> in AltiVec types is deprecated; \"\n \t\t     \"use %<int%>\");\n \t}\n       else if (type == long_long_unsigned_type_node\n \t       || type == long_long_integer_type_node)\n-\terror (\"use of %<long long%> in AltiVec types is invalid without \"\n+\terror (\"use of %<long long%> in AltiVec types is invalid without %qs\",\n \t       \"-mvsx\");\n       else if (type == double_type_node)\n-\terror (\"use of %<double%> in AltiVec types is invalid without -mvsx\");\n+\terror (\"use of %<double%> in AltiVec types is invalid without %qs\",\n+\t       \"-mvsx\");\n     }\n \n   switch (altivec_type)\n@@ -36362,12 +36386,12 @@ rs6000_inner_target_options (tree args, bool attr_p)\n \t\t}\n \n \t      if (cpu_opt)\n-\t\terror (\"invalid cpu \\\"%s\\\" for %s\\\"%s\\\"%s\", cpu_opt, eprefix,\n+\t\terror (\"invalid cpu %qs for %s%qs%s\", cpu_opt, eprefix,\n \t\t       q, esuffix);\n \t      else if (not_valid_p)\n-\t\terror (\"%s\\\"%s\\\"%s is not allowed\", eprefix, q, esuffix);\n+\t\terror (\"%s%qs%s is not allowed\", eprefix, q, esuffix);\n \t      else\n-\t\terror (\"%s\\\"%s\\\"%s is invalid\", eprefix, q, esuffix);\n+\t\terror (\"%s%qs%s is invalid\", eprefix, q, esuffix);\n \t    }\n \t}\n     }\n@@ -36892,7 +36916,7 @@ rs6000_disable_incompatible_switches (void)\n \t\tif ((set_flags & rs6000_opt_masks[j].mask) != 0)\n \t\t  {\n \t\t    set_flags &= ~rs6000_opt_masks[j].mask;\n-\t\t    error (\"-mno-%s turns off -m%s\",\n+\t\t    error (\"%<-mno-%s%> turns off %<-m%s%>\",\n \t\t\t   flags[i].name,\n \t\t\t   rs6000_opt_masks[j].name);\n \t\t  }\n@@ -36909,7 +36933,7 @@ rs6000_disable_incompatible_switches (void)\n       && (rs6000_isa_flags_explicit & OPTION_MASK_P9_VECTOR) != 0\n       && TARGET_P9_DFORM_BOTH > 0)\n     {\n-      error (\"-mno-power9-vector turns off -mpower9-dform\");\n+      error (\"%qs turns off %qs\", \"-mno-power9-vector\", \"-mpower9-dform\");\n       TARGET_P9_DFORM_BOTH = 0;\n     }\n "}, {"sha": "03726b434bdd3c02ad0f21717d7a7106c1c1ae4b", "filename": "gcc/config/rs6000/sysv4.h", "status": "modified", "additions": 16, "deletions": 15, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fsysv4.h?ref=a72a7e39722c11025a8e2b56ba94779298e0f2f0", "patch": "@@ -108,7 +108,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n   else\t\t\t\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\t\t\t\\\n       rs6000_current_abi = ABI_V4;\t\t\t\t\t\\\n-      error (\"bad value for -mcall-%s\", rs6000_abi_name);\t\t\\\n+      error (\"bad value for %<%s-%s%>\", \"-mcall\", rs6000_abi_name);\t\\\n     }\t\t\t\t\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n   if (rs6000_sdata_name)\t\t\t\t\t\t\\\n@@ -124,7 +124,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n       else if (!strcmp (rs6000_sdata_name, \"eabi\"))\t\t\t\\\n \trs6000_sdata = SDATA_EABI;\t\t\t\t\t\\\n       else\t\t\t\t\t\t\t\t\\\n-\terror (\"bad value for -msdata=%s\", rs6000_sdata_name);\t\t\\\n+\terror (\"bad value for %<%s=%s%>\", \"-msdata\", rs6000_sdata_name);\\\n     }\t\t\t\t\t\t\t\t\t\\\n   else if (DEFAULT_ABI == ABI_V4)\t\t\t\t\t\\\n     {\t\t\t\t\t\t\t\t\t\\\n@@ -141,53 +141,54 @@ do {\t\t\t\t\t\t\t\t\t\\\n       (rs6000_sdata == SDATA_EABI || rs6000_sdata == SDATA_SYSV))\t\\\n     {\t\t\t\t\t\t\t\t\t\\\n       rs6000_sdata = SDATA_DATA;\t\t\t\t\t\\\n-      error (\"-mrelocatable and -msdata=%s are incompatible\",\t\t\\\n-\t     rs6000_sdata_name);\t\t\t\t\t\\\n+      error (\"%qs and %<%s=%s%> are incompatible\", rs6000_sdata_name,\t\\\n+\t     \"-mrelocatable\", \"-msdata\");\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n   else if (flag_pic && DEFAULT_ABI == ABI_V4\t\t\t\t\\\n \t   && (rs6000_sdata == SDATA_EABI\t\t\t\t\\\n \t       || rs6000_sdata == SDATA_SYSV))\t\t\t\t\\\n     {\t\t\t\t\t\t\t\t\t\\\n       rs6000_sdata = SDATA_DATA;\t\t\t\t\t\\\n-      error (\"-f%s and -msdata=%s are incompatible\",\t\t\t\\\n+      error (\"%<-f%s%> and %<%s=%s%> are incompatible\",\t\t\t\\\n \t     (flag_pic > 1) ? \"PIC\" : \"pic\",\t\t\t\t\\\n-\t     rs6000_sdata_name);\t\t\t\t\t\\\n+\t     \"-msdata\", rs6000_sdata_name);\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n   if ((rs6000_sdata != SDATA_NONE && DEFAULT_ABI != ABI_V4)\t\t\\\n       || (rs6000_sdata == SDATA_EABI && !TARGET_EABI))\t\t\t\\\n     {\t\t\t\t\t\t\t\t\t\\\n       rs6000_sdata = SDATA_NONE;\t\t\t\t\t\\\n-      error (\"-msdata=%s and -mcall-%s are incompatible\",\t\t\\\n-\t     rs6000_sdata_name, rs6000_abi_name);\t\t\t\\\n+      error (\"%<%s=%s%> and %<%s-%s%> are incompatible\",\t\t\\\n+\t     \"-msdata\", \"-mcall\", rs6000_sdata_name, rs6000_abi_name);\t\\\n     }\t\t\t\t\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n   targetm.have_srodata_section = rs6000_sdata == SDATA_EABI;\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n   if (TARGET_RELOCATABLE && !TARGET_MINIMAL_TOC)\t\t\t\\\n     {\t\t\t\t\t\t\t\t\t\\\n       rs6000_isa_flags |= OPTION_MASK_MINIMAL_TOC;\t\t\t\\\n-      error (\"-mrelocatable and -mno-minimal-toc are incompatible\");\t\\\n+      error (\"%qs and %qs are incompatible\", \"-mrelocatable\",\t\t\\\n+\t     \"-mno-minimal-toc\");\t\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n   if (TARGET_RELOCATABLE && rs6000_current_abi != ABI_V4)\t\t\\\n     {\t\t\t\t\t\t\t\t\t\\\n       rs6000_isa_flags &= ~OPTION_MASK_RELOCATABLE;\t\t\t\\\n-      error (\"-mrelocatable and -mcall-%s are incompatible\",\t\t\\\n-\t     rs6000_abi_name);\t\t\t\t\t\t\\\n+      error (\"%qs and %<%s-%s%> are incompatible\",\t\t\t\\\n+\t     \"-mrelocatable\", \"-mcall\", rs6000_abi_name);\t\t\\\n     }\t\t\t\t\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n   if (!TARGET_64BIT && flag_pic > 1 && rs6000_current_abi != ABI_V4)\t\\\n     {\t\t\t\t\t\t\t\t\t\\\n       flag_pic = 0;\t\t\t\t\t\t\t\\\n-      error (\"-fPIC and -mcall-%s are incompatible\",\t\t\t\\\n-\t     rs6000_abi_name);\t\t\t\t\t\t\\\n+      error (\"%qs and %<%s-%s%> are incompatible\",\t\t\t\\\n+\t     \"-fPIC\", \"-mcall\", rs6000_abi_name);\t\t\t\\\n     }\t\t\t\t\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n   if (TARGET_SECURE_PLT != secure_plt)\t\t\t\t\t\\\n     {\t\t\t\t\t\t\t\t\t\\\n-      error (\"-msecure-plt not supported by your assembler\");\t\t\\\n+      error (\"%qs not supported by your assembler\", \"-msecure-plt\");\t\\\n     }\t\t\t\t\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n   if (flag_pic > 1 && DEFAULT_ABI == ABI_V4)\t\t\t\t\\\n@@ -215,7 +216,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n # define SUBSUBTARGET_OVERRIDE_OPTIONS\t\t\t\t\t\\\n do {\t\t\t\t\t\t\t\t\t\\\n   if ((TARGET_DEFAULT ^ rs6000_isa_flags) & OPTION_MASK_64BIT)\t\t\\\n-    error (\"-m%s not supported in this configuration\",\t\t\t\\\n+    error (\"%<-m%s%> not supported in this configuration\",\t\t\\\n \t   (rs6000_isa_flags & OPTION_MASK_64BIT) ? \"64\" : \"32\");\t\\\n } while (0)\n #endif"}, {"sha": "9e32c8dcad1856bb682d7a6952b2929a4b178890", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 80, "deletions": 0, "changes": 80, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a72a7e39722c11025a8e2b56ba94779298e0f2f0", "patch": "@@ -1,3 +1,83 @@\n+2017-08-14  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n+\n+\tPR target/79845\n+\t* g++.dg/ext/altivec-cell-5.C: Adjust diagnostic strings.\n+\t* gcc.target/powerpc/altivec-cell-5.c: Likewise.\n+\t* gcc.target/powerpc/bfp/scalar-cmp-exp-eq-2.c: Likewise.\n+\t* gcc.target/powerpc/bfp/scalar-cmp-exp-gt-2.c: Likewise.\n+\t* gcc.target/powerpc/bfp/scalar-cmp-exp-lt-2.c: Likewise.\n+\t* gcc.target/powerpc/bfp/scalar-cmp-exp-unordered-2.c: Likewise.\n+\t* gcc.target/powerpc/bfp/scalar-extract-exp-1.c: Likewise.\n+\t* gcc.target/powerpc/bfp/scalar-extract-exp-2.c: Likewise.\n+\t* gcc.target/powerpc/bfp/scalar-extract-exp-4.c: Likewise.\n+\t* gcc.target/powerpc/bfp/scalar-extract-exp-5.c: Likewise.\n+\t* gcc.target/powerpc/bfp/scalar-extract-sig-1.c: Likewise.\n+\t* gcc.target/powerpc/bfp/scalar-extract-sig-2.c: Likewise.\n+\t* gcc.target/powerpc/bfp/scalar-extract-sig-4.c: Likewise.\n+\t* gcc.target/powerpc/bfp/scalar-extract-sig-5.c: Likewise.\n+\t* gcc.target/powerpc/bfp/scalar-insert-exp-1.c: Likewise.\n+\t* gcc.target/powerpc/bfp/scalar-insert-exp-10.c: Likewise.\n+\t* gcc.target/powerpc/bfp/scalar-insert-exp-11.c: Likewise.\n+\t* gcc.target/powerpc/bfp/scalar-insert-exp-2.c: Likewise.\n+\t* gcc.target/powerpc/bfp/scalar-insert-exp-4.c: Likewise.\n+\t* gcc.target/powerpc/bfp/scalar-insert-exp-5.c: Likewise.\n+\t* gcc.target/powerpc/bfp/scalar-insert-exp-7.c: Likewise.\n+\t* gcc.target/powerpc/bfp/scalar-insert-exp-8.c: Likewise.\n+\t* gcc.target/powerpc/bfp/scalar-test-data-class-11.c: Likewise.\n+\t* gcc.target/powerpc/bfp/scalar-test-data-class-6.c: Likewise.\n+\t* gcc.target/powerpc/bfp/scalar-test-data-class-7.c: Likewise.\n+\t* gcc.target/powerpc/bfp/scalar-test-neg-2.c: Likewise.\n+\t* gcc.target/powerpc/bfp/scalar-test-neg-3.c: Likewise.\n+\t* gcc.target/powerpc/bfp/scalar-test-neg-5.c: Likewise.\n+\t* gcc.target/powerpc/bfp/vec-extract-exp-2.c: Likewise.\n+\t* gcc.target/powerpc/bfp/vec-extract-exp-3.c: Likewise.\n+\t* gcc.target/powerpc/bfp/vec-extract-sig-2.c: Likewise.\n+\t* gcc.target/powerpc/bfp/vec-extract-sig-3.c: Likewise.\n+\t* gcc.target/powerpc/bfp/vec-insert-exp-2.c: Likewise.\n+\t* gcc.target/powerpc/bfp/vec-insert-exp-3.c: Likewise.\n+\t* gcc.target/powerpc/bfp/vec-insert-exp-6.c: Likewise.\n+\t* gcc.target/powerpc/bfp/vec-insert-exp-7.c: Likewise.\n+\t* gcc.target/powerpc/bfp/vec-test-data-class-2.c: Likewise.\n+\t* gcc.target/powerpc/bfp/vec-test-data-class-3.c: Likewise.\n+\t* gcc.target/powerpc/byte-in-either-range-1.c: Likewise.\n+\t* gcc.target/powerpc/byte-in-range-1.c: Likewise.\n+\t* gcc.target/powerpc/byte-in-set-1.c: Likewise.\n+\t* gcc.target/powerpc/byte-in-set-2.c: Likewise.\n+\t* gcc.target/powerpc/cmpb-3.c: Likewise.\n+\t* gcc.target/powerpc/crypto-builtin-2.c: Likewise.\n+\t* gcc.target/powerpc/dfp/dtstsfi-1.c: Likewise.\n+\t* gcc.target/powerpc/dfp/dtstsfi-11.c: Likewise.\n+\t* gcc.target/powerpc/dfp/dtstsfi-16.c: Likewise.\n+\t* gcc.target/powerpc/dfp/dtstsfi-21.c: Likewise.\n+\t* gcc.target/powerpc/dfp/dtstsfi-26.c: Likewise.\n+\t* gcc.target/powerpc/dfp/dtstsfi-31.c: Likewise.\n+\t* gcc.target/powerpc/dfp/dtstsfi-36.c: Likewise.\n+\t* gcc.target/powerpc/dfp/dtstsfi-41.c: Likewise.\n+\t* gcc.target/powerpc/dfp/dtstsfi-46.c: Likewise.\n+\t* gcc.target/powerpc/dfp/dtstsfi-51.c: Likewise.\n+\t* gcc.target/powerpc/dfp/dtstsfi-56.c: Likewise.\n+\t* gcc.target/powerpc/dfp/dtstsfi-6.c: Likewise.\n+\t* gcc.target/powerpc/dfp/dtstsfi-61.c: Likewise.\n+\t* gcc.target/powerpc/dfp/dtstsfi-66.c: Likewise.\n+\t* gcc.target/powerpc/dfp/dtstsfi-71.c: Likewise.\n+\t* gcc.target/powerpc/dfp/dtstsfi-76.c: Likewise.\n+\t* gcc.target/powerpc/no-r11-3.c: Likewise.\n+\t* gcc.target/powerpc/pr80098-1.c: Likewise.\n+\t* gcc.target/powerpc/pr80098-2.c: Likewise.\n+\t* gcc.target/powerpc/pr80098-3.c: Likewise.\n+\t* gcc.target/powerpc/pr80098-4.c: Likewise.\n+\t* gcc.target/powerpc/vsu/vec-all-nez-7.c: Likewise.\n+\t* gcc.target/powerpc/vsu/vec-any-eqz-7.c: Likewise.\n+\t* gcc.target/powerpc/vsu/vec-cmpnez-7.c: Likewise.\n+\t* gcc.target/powerpc/vsu/vec-cntlz-lsbb-2.c: Likewise.\n+\t* gcc.target/powerpc/vsu/vec-cnttz-lsbb-2.c: Likewise.\n+\t* gcc.target/powerpc/vsu/vec-xl-len-12.c: Likewise.\n+\t* gcc.target/powerpc/vsu/vec-xl-len-13.c: Likewise.\n+\t* gcc.target/powerpc/vsu/vec-xlx-7.c: Likewise.\n+\t* gcc.target/powerpc/vsu/vec-xrx-7.c: Likewise.\n+\t* gcc.target/powerpc/vsu/vec-xst-len-12.c: Likewise.\n+\t* gcc.target/powerpc/vsu/vec-xst-len-13.c: Likewise.\n+\n 2017-08-14  Bin Cheng  <bin.cheng@arm.com>\n \n \tPR tree-optimization/81799"}, {"sha": "7e5bc78d56853425ab2d7e34556c2442e7e601db", "filename": "gcc/testsuite/g++.dg/ext/altivec-cell-5.C", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Faltivec-cell-5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Faltivec-cell-5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Faltivec-cell-5.C?ref=a72a7e39722c11025a8e2b56ba94779298e0f2f0", "patch": "@@ -8,18 +8,18 @@\n int main(int argc, char **argv)\n {\n vector float t;\n-    vec_promote();                      /* { dg-error \"vec_promote only accepts 2\" } */\n-    vec_promote(1.0f);                  /* { dg-error \"vec_promote only accepts 2\" } */\n-    vec_promote(1.0f, 2, 3);            /* { dg-error \"vec_promote only accepts 2\" } */\n-    vec_extract ();                     /* { dg-error \"vec_extract only accepts 2\" } */\n-    vec_extract (t);                    /* { dg-error \"vec_extract only accepts 2\" } */\n+    vec_promote();                      /* { dg-error \"builtin 'vec_promote' only accepts 2\" } */\n+    vec_promote(1.0f);                  /* { dg-error \"builtin 'vec_promote' only accepts 2\" } */\n+    vec_promote(1.0f, 2, 3);            /* { dg-error \"builtin 'vec_promote' only accepts 2\" } */\n+    vec_extract ();                     /* { dg-error \"builtin 'vec_extract' only accepts 2\" } */\n+    vec_extract (t);                    /* { dg-error \"builtin 'vec_extract' only accepts 2\" } */\n     vec_extract (t, 2);\n-    vec_extract (t, 2, 5, 6);           /* { dg-error \"vec_extract only accepts 2\" } */\n-    vec_splats ();                      /* { dg-error \"vec_splats only accepts 1\" } */\n-    vec_splats (t, 3);                  /* { dg-error \"vec_splats only accepts 1\" } */\n-    vec_insert ();                      /* { dg-error \"vec_insert only accepts 3\" } */\n-    vec_insert (t);                     /* { dg-error \"vec_insert only accepts 3\" } */\n-    vec_insert (t, 3);                  /* { dg-error \"vec_insert only accepts 3\" } */\n-    vec_insert (t, 3, 2, 4, 6, 6);      /* { dg-error \"vec_insert only accepts 3\" } */\n+    vec_extract (t, 2, 5, 6);           /* { dg-error \"builtin 'vec_extract' only accepts 2\" } */\n+    vec_splats ();                      /* { dg-error \"builtin 'vec_splats' only accepts 1\" } */\n+    vec_splats (t, 3);                  /* { dg-error \"builtin 'vec_splats' only accepts 1\" } */\n+    vec_insert ();                      /* { dg-error \"builtin 'vec_insert' only accepts 3\" } */\n+    vec_insert (t);                     /* { dg-error \"builtin 'vec_insert' only accepts 3\" } */\n+    vec_insert (t, 3);                  /* { dg-error \"builtin 'vec_insert' only accepts 3\" } */\n+    vec_insert (t, 3, 2, 4, 6, 6);      /* { dg-error \"builtin 'vec_insert' only accepts 3\" } */\n     return 0;\n }  "}, {"sha": "7e5bc78d56853425ab2d7e34556c2442e7e601db", "filename": "gcc/testsuite/gcc.target/powerpc/altivec-cell-5.c", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Faltivec-cell-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Faltivec-cell-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Faltivec-cell-5.c?ref=a72a7e39722c11025a8e2b56ba94779298e0f2f0", "patch": "@@ -8,18 +8,18 @@\n int main(int argc, char **argv)\n {\n vector float t;\n-    vec_promote();                      /* { dg-error \"vec_promote only accepts 2\" } */\n-    vec_promote(1.0f);                  /* { dg-error \"vec_promote only accepts 2\" } */\n-    vec_promote(1.0f, 2, 3);            /* { dg-error \"vec_promote only accepts 2\" } */\n-    vec_extract ();                     /* { dg-error \"vec_extract only accepts 2\" } */\n-    vec_extract (t);                    /* { dg-error \"vec_extract only accepts 2\" } */\n+    vec_promote();                      /* { dg-error \"builtin 'vec_promote' only accepts 2\" } */\n+    vec_promote(1.0f);                  /* { dg-error \"builtin 'vec_promote' only accepts 2\" } */\n+    vec_promote(1.0f, 2, 3);            /* { dg-error \"builtin 'vec_promote' only accepts 2\" } */\n+    vec_extract ();                     /* { dg-error \"builtin 'vec_extract' only accepts 2\" } */\n+    vec_extract (t);                    /* { dg-error \"builtin 'vec_extract' only accepts 2\" } */\n     vec_extract (t, 2);\n-    vec_extract (t, 2, 5, 6);           /* { dg-error \"vec_extract only accepts 2\" } */\n-    vec_splats ();                      /* { dg-error \"vec_splats only accepts 1\" } */\n-    vec_splats (t, 3);                  /* { dg-error \"vec_splats only accepts 1\" } */\n-    vec_insert ();                      /* { dg-error \"vec_insert only accepts 3\" } */\n-    vec_insert (t);                     /* { dg-error \"vec_insert only accepts 3\" } */\n-    vec_insert (t, 3);                  /* { dg-error \"vec_insert only accepts 3\" } */\n-    vec_insert (t, 3, 2, 4, 6, 6);      /* { dg-error \"vec_insert only accepts 3\" } */\n+    vec_extract (t, 2, 5, 6);           /* { dg-error \"builtin 'vec_extract' only accepts 2\" } */\n+    vec_splats ();                      /* { dg-error \"builtin 'vec_splats' only accepts 1\" } */\n+    vec_splats (t, 3);                  /* { dg-error \"builtin 'vec_splats' only accepts 1\" } */\n+    vec_insert ();                      /* { dg-error \"builtin 'vec_insert' only accepts 3\" } */\n+    vec_insert (t);                     /* { dg-error \"builtin 'vec_insert' only accepts 3\" } */\n+    vec_insert (t, 3);                  /* { dg-error \"builtin 'vec_insert' only accepts 3\" } */\n+    vec_insert (t, 3, 2, 4, 6, 6);      /* { dg-error \"builtin 'vec_insert' only accepts 3\" } */\n     return 0;\n }  "}, {"sha": "8c9a2f308661fa626d5ba7e2b221abc2ea1e2e5e", "filename": "gcc/testsuite/gcc.target/powerpc/bfp/scalar-cmp-exp-eq-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-cmp-exp-eq-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-cmp-exp-eq-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-cmp-exp-eq-2.c?ref=a72a7e39722c11025a8e2b56ba94779298e0f2f0", "patch": "@@ -12,5 +12,5 @@ compare_exponents_eq (double *exponent1_p, double *exponent2_p)\n   double exponent1 = *exponent1_p;\n   double exponent2 = *exponent2_p;\n \n-  return __builtin_vec_scalar_cmp_exp_eq (exponent1, exponent2);\t/* { dg-error \"builtin function __builtin_vsx_scalar_cmp_exp_dp_eq requires\" } */\n+  return __builtin_vec_scalar_cmp_exp_eq (exponent1, exponent2);\t/* { dg-error \"builtin function '__builtin_vsx_scalar_cmp_exp_dp_eq' requires\" } */\n }"}, {"sha": "4a034e0c6e8dd62be1cbb5fbba414d4b3c57fcd5", "filename": "gcc/testsuite/gcc.target/powerpc/bfp/scalar-cmp-exp-gt-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-cmp-exp-gt-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-cmp-exp-gt-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-cmp-exp-gt-2.c?ref=a72a7e39722c11025a8e2b56ba94779298e0f2f0", "patch": "@@ -12,5 +12,5 @@ compare_exponents_gt (double *exponent1_p, double *exponent2_p)\n   double exponent1 = *exponent1_p;\n   double exponent2 = *exponent2_p;\n \n-  return __builtin_vec_scalar_cmp_exp_gt (exponent1, exponent2); /* { dg-error \"builtin function __builtin_vsx_scalar_cmp_exp_dp_gt requires\" } */\n+  return __builtin_vec_scalar_cmp_exp_gt (exponent1, exponent2); /* { dg-error \"builtin function '__builtin_vsx_scalar_cmp_exp_dp_gt' requires\" } */\n }"}, {"sha": "dee1798a49dd308f0b10bca3ac46834159557209", "filename": "gcc/testsuite/gcc.target/powerpc/bfp/scalar-cmp-exp-lt-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-cmp-exp-lt-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-cmp-exp-lt-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-cmp-exp-lt-2.c?ref=a72a7e39722c11025a8e2b56ba94779298e0f2f0", "patch": "@@ -12,5 +12,5 @@ compare_exponents_lt (double *exponent1_p, double *exponent2_p)\n   double exponent1 = *exponent1_p;\n   double exponent2 = *exponent2_p;\n \n-  return __builtin_vec_scalar_cmp_exp_lt (exponent1, exponent2);\t/* { dg-error \"builtin function __builtin_vsx_scalar_cmp_exp_dp_lt requires\" } */\n+  return __builtin_vec_scalar_cmp_exp_lt (exponent1, exponent2);\t/* { dg-error \"builtin function '__builtin_vsx_scalar_cmp_exp_dp_lt' requires\" } */\n }"}, {"sha": "c81540c2a2d7d4f620daa8c4593519ba942dbbcc", "filename": "gcc/testsuite/gcc.target/powerpc/bfp/scalar-cmp-exp-unordered-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-cmp-exp-unordered-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-cmp-exp-unordered-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-cmp-exp-unordered-2.c?ref=a72a7e39722c11025a8e2b56ba94779298e0f2f0", "patch": "@@ -12,5 +12,5 @@ compare_exponents_unordered (double *exponent1_p, double *exponent2_p)\n   double exponent1 = *exponent1_p;\n   double exponent2 = *exponent2_p;\n \n-  return __builtin_vec_scalar_cmp_exp_unordered (exponent1, exponent2);\t/* { dg-error \"builtin function __builtin_vsx_scalar_cmp_exp_dp_unordered requires\" } */\n+  return __builtin_vec_scalar_cmp_exp_unordered (exponent1, exponent2);\t/* { dg-error \"builtin function '__builtin_vsx_scalar_cmp_exp_dp_unordered' requires\" } */\n }"}, {"sha": "fcd5f2eb85499f74effd60f3bb566d50da21d417", "filename": "gcc/testsuite/gcc.target/powerpc/bfp/scalar-extract-exp-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-extract-exp-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-extract-exp-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-extract-exp-1.c?ref=a72a7e39722c11025a8e2b56ba94779298e0f2f0", "patch": "@@ -12,7 +12,7 @@ get_exponent (double *p)\n {\n   double source = *p;\n \n-  return __builtin_vec_scalar_extract_exp (source); /* { dg-error \"builtin function __builtin_vsx_scalar_extract_exp requires\" } */\n+  return __builtin_vec_scalar_extract_exp (source); /* { dg-error \"builtin function '__builtin_vsx_scalar_extract_exp' requires\" } */\n }\n \n "}, {"sha": "5f3f012fc2536619d9f892d89c109c9752e53fe6", "filename": "gcc/testsuite/gcc.target/powerpc/bfp/scalar-extract-exp-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-extract-exp-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-extract-exp-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-extract-exp-2.c?ref=a72a7e39722c11025a8e2b56ba94779298e0f2f0", "patch": "@@ -15,7 +15,7 @@ get_exponent (double *p)\n {\n   double source = *p;\n \n-  return scalar_extract_exp (source);\t/* { dg-error \"builtin function __builtin_vec_scalar_extract_exp not supported in this compiler configuration\" } */\n+  return scalar_extract_exp (source);\t/* { dg-error \"builtin function '__builtin_vec_scalar_extract_exp' not supported in this compiler configuration\" } */\n }\n \n "}, {"sha": "e0d103164be968d61cc2938674e689d72252f826", "filename": "gcc/testsuite/gcc.target/powerpc/bfp/scalar-extract-exp-4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-extract-exp-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-extract-exp-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-extract-exp-4.c?ref=a72a7e39722c11025a8e2b56ba94779298e0f2f0", "patch": "@@ -12,7 +12,7 @@ get_exponent (__ieee128 *p)\n {\n   __ieee128 source = *p;\n \n-  return __builtin_vec_scalar_extract_exp (source); /* { dg-error \"builtin function __builtin_vsx_scalar_extract_expq requires\" } */\n+  return __builtin_vec_scalar_extract_exp (source); /* { dg-error \"builtin function '__builtin_vsx_scalar_extract_expq' requires\" } */\n }\n \n "}, {"sha": "739ccc7a6b184f7c223da254cb435e208b739a81", "filename": "gcc/testsuite/gcc.target/powerpc/bfp/scalar-extract-exp-5.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-extract-exp-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-extract-exp-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-extract-exp-5.c?ref=a72a7e39722c11025a8e2b56ba94779298e0f2f0", "patch": "@@ -15,7 +15,7 @@ get_exponent (__ieee128 *p)\n {\n   __ieee128 source = *p;\n \n-  return scalar_extract_exp (source);\t/* { dg-error \"builtin function __builtin_vec_scalar_extract_exp not supported in this compiler configuration\" } */\n+  return scalar_extract_exp (source);\t/* { dg-error \"builtin function '__builtin_vec_scalar_extract_exp' not supported in this compiler configuration\" } */\n }\n \n "}, {"sha": "7efc8b0645bcb23e7a3157db2feb42f8f94b23e9", "filename": "gcc/testsuite/gcc.target/powerpc/bfp/scalar-extract-sig-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-extract-sig-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-extract-sig-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-extract-sig-1.c?ref=a72a7e39722c11025a8e2b56ba94779298e0f2f0", "patch": "@@ -12,5 +12,5 @@ get_significand (double *p)\n {\n   double source = *p;\n \n-  return __builtin_vec_scalar_extract_sig (source);\t/* { dg-error \"builtin function __builtin_vsx_scalar_extract_sig requires\" } */\n+  return __builtin_vec_scalar_extract_sig (source);\t/* { dg-error \"builtin function '__builtin_vsx_scalar_extract_sig' requires\" } */\n }"}, {"sha": "5e53b0aa0be1b1b3a9457efe7a05f440a29b0eaa", "filename": "gcc/testsuite/gcc.target/powerpc/bfp/scalar-extract-sig-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-extract-sig-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-extract-sig-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-extract-sig-2.c?ref=a72a7e39722c11025a8e2b56ba94779298e0f2f0", "patch": "@@ -13,5 +13,5 @@ get_significand (double *p)\n {\n   double source = *p;\n \n-  return __builtin_vec_scalar_extract_sig (source); /* { dg-error \"builtin function __builtin_vec_scalar_extract_sig not supported in this compiler configuration\" } */\n+  return __builtin_vec_scalar_extract_sig (source); /* { dg-error \"builtin function '__builtin_vec_scalar_extract_sig' not supported in this compiler configuration\" } */\n }"}, {"sha": "8b5ef6f7a37e70e28e2104ef1ab2bbf1ad95f598", "filename": "gcc/testsuite/gcc.target/powerpc/bfp/scalar-extract-sig-4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-extract-sig-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-extract-sig-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-extract-sig-4.c?ref=a72a7e39722c11025a8e2b56ba94779298e0f2f0", "patch": "@@ -12,5 +12,5 @@ get_significand (__ieee128 *p)\n {\n   __ieee128 source = *p;\n \n-  return __builtin_vec_scalar_extract_sig (source);\t/* { dg-error \"builtin function __builtin_vsx_scalar_extract_sigq requires\" } */\n+  return __builtin_vec_scalar_extract_sig (source);\t/* { dg-error \"builtin function '__builtin_vsx_scalar_extract_sigq' requires\" } */\n }"}, {"sha": "f82bbe0262d5b75e1eddad5a19beddbf30f7daa3", "filename": "gcc/testsuite/gcc.target/powerpc/bfp/scalar-extract-sig-5.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-extract-sig-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-extract-sig-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-extract-sig-5.c?ref=a72a7e39722c11025a8e2b56ba94779298e0f2f0", "patch": "@@ -13,5 +13,5 @@ get_significand (__ieee128 *p)\n {\n   __ieee128 source = *p;\n \n-  return __builtin_vec_scalar_extract_sig (source); /* { dg-error \"builtin function __builtin_vec_scalar_extract_sig not supported in this compiler configuration\" } */\n+  return __builtin_vec_scalar_extract_sig (source); /* { dg-error \"builtin function '__builtin_vec_scalar_extract_sig' not supported in this compiler configuration\" } */\n }"}, {"sha": "ea97c6210a1a880673f62f0154901963adc70a47", "filename": "gcc/testsuite/gcc.target/powerpc/bfp/scalar-insert-exp-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-insert-exp-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-insert-exp-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-insert-exp-1.c?ref=a72a7e39722c11025a8e2b56ba94779298e0f2f0", "patch": "@@ -14,5 +14,5 @@ insert_exponent (unsigned long long int *significand_p,\n   unsigned long long int significand = *significand_p;\n   unsigned long long int exponent = *exponent_p;\n \n-  return __builtin_vec_scalar_insert_exp (significand, exponent); /* { dg-error \"builtin function __builtin_vsx_scalar_insert_exp requires\" } */\n+  return __builtin_vec_scalar_insert_exp (significand, exponent); /* { dg-error \"builtin function '__builtin_vsx_scalar_insert_exp' requires\" } */\n }"}, {"sha": "1236f1367b9a784e9df4b624e338593a55d49c5b", "filename": "gcc/testsuite/gcc.target/powerpc/bfp/scalar-insert-exp-10.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-insert-exp-10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-insert-exp-10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-insert-exp-10.c?ref=a72a7e39722c11025a8e2b56ba94779298e0f2f0", "patch": "@@ -14,5 +14,5 @@ insert_exponent (__ieee128 *significand_p,\n   __ieee128 significand = *significand_p;\n   unsigned long long int exponent = *exponent_p;\n \n-  return __builtin_vec_scalar_insert_exp (significand, exponent); /* { dg-error \"builtin function __builtin_vsx_scalar_insert_exp_qp requires\" } */\n+  return __builtin_vec_scalar_insert_exp (significand, exponent); /* { dg-error \"builtin function '__builtin_vsx_scalar_insert_exp_qp' requires\" } */\n }"}, {"sha": "3e47a69a0f44df63d1a8d0b585487f9156b4de6a", "filename": "gcc/testsuite/gcc.target/powerpc/bfp/scalar-insert-exp-11.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-insert-exp-11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-insert-exp-11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-insert-exp-11.c?ref=a72a7e39722c11025a8e2b56ba94779298e0f2f0", "patch": "@@ -17,5 +17,5 @@ insert_exponent (__ieee128 *significand_p,\n   __ieee128 significand = *significand_p;\n   unsigned long long int exponent = *exponent_p;\n \n-  return scalar_insert_exp (significand, exponent); /* { dg-error \"builtin function __builtin_vec_scalar_insert_exp not supported in this compiler configuration\" } */\n+  return scalar_insert_exp (significand, exponent); /* { dg-error \"builtin function '__builtin_vec_scalar_insert_exp' not supported in this compiler configuration\" } */\n }"}, {"sha": "d7ca489652ebc97161d60de63ab3cd4367d55a66", "filename": "gcc/testsuite/gcc.target/powerpc/bfp/scalar-insert-exp-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-insert-exp-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-insert-exp-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-insert-exp-2.c?ref=a72a7e39722c11025a8e2b56ba94779298e0f2f0", "patch": "@@ -17,5 +17,5 @@ insert_exponent (unsigned long long int *significand_p,\n   unsigned long long int significand = *significand_p;\n   unsigned long long int exponent = *exponent_p;\n \n-  return scalar_insert_exp (significand, exponent); /* { dg-error \"builtin function __builtin_vec_scalar_insert_exp not supported in this compiler configuration\" } */\n+  return scalar_insert_exp (significand, exponent); /* { dg-error \"builtin function '__builtin_vec_scalar_insert_exp' not supported in this compiler configuration\" } */\n }"}, {"sha": "2cab19440352d2a76c05be17a85d4739fcb5f3c4", "filename": "gcc/testsuite/gcc.target/powerpc/bfp/scalar-insert-exp-4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-insert-exp-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-insert-exp-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-insert-exp-4.c?ref=a72a7e39722c11025a8e2b56ba94779298e0f2f0", "patch": "@@ -14,5 +14,5 @@ insert_exponent (double *significand_p,\n   double significand = *significand_p;\n   unsigned long long int exponent = *exponent_p;\n \n-  return __builtin_vec_scalar_insert_exp (significand, exponent); /* { dg-error \"builtin function __builtin_vsx_scalar_insert_exp_dp requires\" } */\n+  return __builtin_vec_scalar_insert_exp (significand, exponent); /* { dg-error \"builtin function '__builtin_vsx_scalar_insert_exp_dp' requires\" } */\n }"}, {"sha": "74136913f5f0e27f68e938df80935b4a4be3e5d1", "filename": "gcc/testsuite/gcc.target/powerpc/bfp/scalar-insert-exp-5.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-insert-exp-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-insert-exp-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-insert-exp-5.c?ref=a72a7e39722c11025a8e2b56ba94779298e0f2f0", "patch": "@@ -17,5 +17,5 @@ insert_exponent (double *significand_p,\n   double significand = *significand_p;\n   unsigned long long int exponent = *exponent_p;\n \n-  return scalar_insert_exp (significand, exponent); /* { dg-error \"builtin function __builtin_vec_scalar_insert_exp not supported in this compiler configuration\" } */\n+  return scalar_insert_exp (significand, exponent); /* { dg-error \"builtin function '__builtin_vec_scalar_insert_exp' not supported in this compiler configuration\" } */\n }"}, {"sha": "fb776cb4c54a99412ad4591bd6e6f9d1f4a67b77", "filename": "gcc/testsuite/gcc.target/powerpc/bfp/scalar-insert-exp-7.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-insert-exp-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-insert-exp-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-insert-exp-7.c?ref=a72a7e39722c11025a8e2b56ba94779298e0f2f0", "patch": "@@ -14,5 +14,5 @@ insert_exponent (unsigned __int128 *significand_p,\n   unsigned __int128 significand = *significand_p;\n   unsigned long long int exponent = *exponent_p;\n \n-  return __builtin_vec_scalar_insert_exp (significand, exponent); /* { dg-error \"builtin function __builtin_vsx_scalar_insert_exp_q requires\" } */\n+  return __builtin_vec_scalar_insert_exp (significand, exponent); /* { dg-error \"builtin function '__builtin_vsx_scalar_insert_exp_q' requires\" } */\n }"}, {"sha": "f3873376209016ba0bc52bc10c7a57614b8abbf8", "filename": "gcc/testsuite/gcc.target/powerpc/bfp/scalar-insert-exp-8.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-insert-exp-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-insert-exp-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-insert-exp-8.c?ref=a72a7e39722c11025a8e2b56ba94779298e0f2f0", "patch": "@@ -17,5 +17,5 @@ insert_exponent (unsigned __int128 *significand_p, /* { dg-error \"'__int128' is\n   unsigned __int128 significand = *significand_p;  /* { dg-error \"'__int128' is not supported on this target\" } */\n   unsigned long long int exponent = *exponent_p;\n \n-  return scalar_insert_exp (significand, exponent); /* { dg-error \"builtin function __builtin_vec_scalar_insert_exp not supported in this compiler configuration\" } */\n+  return scalar_insert_exp (significand, exponent); /* { dg-error \"builtin function '__builtin_vec_scalar_insert_exp' not supported in this compiler configuration\" } */\n }"}, {"sha": "525a59c17628078cb4065938a7c9b9c3f8a2bacc", "filename": "gcc/testsuite/gcc.target/powerpc/bfp/scalar-test-data-class-11.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-test-data-class-11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-test-data-class-11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-test-data-class-11.c?ref=a72a7e39722c11025a8e2b56ba94779298e0f2f0", "patch": "@@ -11,5 +11,5 @@ test_data_class (__ieee128 *p)\n {\n   __ieee128 source = *p;\n \n-  return __builtin_vec_scalar_test_data_class (source, 3); /* { dg-error \"builtin function __builtin_vsx_scalar_test_data_class_qp requires\" } */\n+  return __builtin_vec_scalar_test_data_class (source, 3); /* { dg-error \"builtin function '__builtin_vsx_scalar_test_data_class_qp' requires\" } */\n }"}, {"sha": "4d4a198ca8cfa010691f744068728f6aab7e4fb0", "filename": "gcc/testsuite/gcc.target/powerpc/bfp/scalar-test-data-class-6.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-test-data-class-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-test-data-class-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-test-data-class-6.c?ref=a72a7e39722c11025a8e2b56ba94779298e0f2f0", "patch": "@@ -11,5 +11,5 @@ test_data_class (double *p)\n {\n   double source = *p;\n \n-  return __builtin_vec_scalar_test_data_class (source, 3); /* { dg-error \"builtin function __builtin_vsx_scalar_test_data_class_dp requires\" } */\n+  return __builtin_vec_scalar_test_data_class (source, 3); /* { dg-error \"builtin function '__builtin_vsx_scalar_test_data_class_dp' requires\" } */\n }"}, {"sha": "b099c4990beddeaf2366fb78eaa6664fd873bf49", "filename": "gcc/testsuite/gcc.target/powerpc/bfp/scalar-test-data-class-7.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-test-data-class-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-test-data-class-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-test-data-class-7.c?ref=a72a7e39722c11025a8e2b56ba94779298e0f2f0", "patch": "@@ -11,5 +11,5 @@ test_data_class (float *p)\n {\n   float source = *p;\n \n-  return __builtin_vec_scalar_test_data_class (source, 3); /* { dg-error \"builtin function __builtin_vsx_scalar_test_data_class_sp requires\" } */\n+  return __builtin_vec_scalar_test_data_class (source, 3); /* { dg-error \"builtin function '__builtin_vsx_scalar_test_data_class_sp' requires\" } */\n }"}, {"sha": "8c38cbef476f8f112ca0d809c022be7429de5440", "filename": "gcc/testsuite/gcc.target/powerpc/bfp/scalar-test-neg-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-test-neg-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-test-neg-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-test-neg-2.c?ref=a72a7e39722c11025a8e2b56ba94779298e0f2f0", "patch": "@@ -11,5 +11,5 @@ test_neg (float *p)\n {\n   float source = *p;\n \n-  return __builtin_vec_scalar_test_neg_sp (source); /* { dg-error \"builtin function __builtin_vsx_scalar_test_neg_sp requires\" } */\n+  return __builtin_vec_scalar_test_neg_sp (source); /* { dg-error \"builtin function '__builtin_vsx_scalar_test_neg_sp' requires\" } */\n }"}, {"sha": "b01e9a19e085b3d63f00ea5ea6684ec95acb86b7", "filename": "gcc/testsuite/gcc.target/powerpc/bfp/scalar-test-neg-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-test-neg-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-test-neg-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-test-neg-3.c?ref=a72a7e39722c11025a8e2b56ba94779298e0f2f0", "patch": "@@ -11,5 +11,5 @@ test_neg (double *p)\n {\n   double source = *p;\n \n-  return __builtin_vec_scalar_test_neg_dp (source); /* { dg-error \"builtin function __builtin_vsx_scalar_test_neg_dp requires\" } */\n+  return __builtin_vec_scalar_test_neg_dp (source); /* { dg-error \"builtin function '__builtin_vsx_scalar_test_neg_dp' requires\" } */\n }"}, {"sha": "162bc626e0633c4882babd46d5108f0edc3e8a0f", "filename": "gcc/testsuite/gcc.target/powerpc/bfp/scalar-test-neg-5.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-test-neg-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-test-neg-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-test-neg-5.c?ref=a72a7e39722c11025a8e2b56ba94779298e0f2f0", "patch": "@@ -11,5 +11,5 @@ test_neg (__ieee128 *p)\n {\n   __ieee128 source = *p;\n \n-  return __builtin_vec_scalar_test_neg_qp (source); /* { dg-error \"builtin function __builtin_vsx_scalar_test_neg_qp requires\" } */\n+  return __builtin_vec_scalar_test_neg_qp (source); /* { dg-error \"builtin function '__builtin_vsx_scalar_test_neg_qp' requires\" } */\n }"}, {"sha": "4ea885f6f32fec81ed29446ce8afe77fc6671678", "filename": "gcc/testsuite/gcc.target/powerpc/bfp/vec-extract-exp-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fvec-extract-exp-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fvec-extract-exp-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fvec-extract-exp-2.c?ref=a72a7e39722c11025a8e2b56ba94779298e0f2f0", "patch": "@@ -10,5 +10,5 @@ get_exponents (__vector double *p)\n {\n   __vector double source = *p;\n \n-  return __builtin_vec_extract_exp (source); /* { dg-error \"builtin function __builtin_vsx_extract_exp_dp requires\" } */\n+  return __builtin_vec_extract_exp (source); /* { dg-error \"builtin function '__builtin_vsx_extract_exp_dp' requires\" } */\n }"}, {"sha": "8155f960126005ea1745088e2f84ac9b528d3883", "filename": "gcc/testsuite/gcc.target/powerpc/bfp/vec-extract-exp-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fvec-extract-exp-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fvec-extract-exp-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fvec-extract-exp-3.c?ref=a72a7e39722c11025a8e2b56ba94779298e0f2f0", "patch": "@@ -10,5 +10,5 @@ get_exponents (__vector float *p)\n {\n   __vector float source = *p;\n \n-  return __builtin_vec_extract_exp (source);\t/* { dg-error \"builtin function __builtin_vsx_extract_exp_sp requires\" } */\n+  return __builtin_vec_extract_exp (source);\t/* { dg-error \"builtin function '__builtin_vsx_extract_exp_sp' requires\" } */\n }"}, {"sha": "9d42778f112bd9977488e6a41b6d6b51817f7a2f", "filename": "gcc/testsuite/gcc.target/powerpc/bfp/vec-extract-sig-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fvec-extract-sig-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fvec-extract-sig-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fvec-extract-sig-2.c?ref=a72a7e39722c11025a8e2b56ba94779298e0f2f0", "patch": "@@ -10,5 +10,5 @@ get_significands (__vector double *p)\n {\n   __vector double source = *p;\n \n-  return __builtin_vec_extract_sig (source);\t/* { dg-error \"builtin function __builtin_vsx_extract_sig_dp requires\" } */\n+  return __builtin_vec_extract_sig (source);\t/* { dg-error \"builtin function '__builtin_vsx_extract_sig_dp' requires\" } */\n }"}, {"sha": "ae96b3c16b5dafa9a6c4a1bb2e7b2f1af257d95b", "filename": "gcc/testsuite/gcc.target/powerpc/bfp/vec-extract-sig-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fvec-extract-sig-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fvec-extract-sig-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fvec-extract-sig-3.c?ref=a72a7e39722c11025a8e2b56ba94779298e0f2f0", "patch": "@@ -10,5 +10,5 @@ get_significands (__vector float *p)\n {\n   __vector float source = *p;\n \n-  return __builtin_vec_extract_sig (source);\t/* { dg-error \"builtin function __builtin_vsx_extract_sig_sp requires\" } */\n+  return __builtin_vec_extract_sig (source);\t/* { dg-error \"builtin function '__builtin_vsx_extract_sig_sp' requires\" } */\n }"}, {"sha": "b3600e4898266bf6aefbc2f0e78de62826a299b3", "filename": "gcc/testsuite/gcc.target/powerpc/bfp/vec-insert-exp-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fvec-insert-exp-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fvec-insert-exp-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fvec-insert-exp-2.c?ref=a72a7e39722c11025a8e2b56ba94779298e0f2f0", "patch": "@@ -12,5 +12,5 @@ make_floats (__vector unsigned int *significands_p,\n   __vector unsigned int significands = *significands_p;\n   __vector unsigned int exponents = *exponents_p;\n \n-  return __builtin_vec_insert_exp (significands, exponents); /* { dg-error \"builtin function __builtin_vsx_insert_exp_sp requires\" } */\n+  return __builtin_vec_insert_exp (significands, exponents); /* { dg-error \"builtin function '__builtin_vsx_insert_exp_sp' requires\" } */\n }"}, {"sha": "ae98c775684d0ad6d60ef39772ceb55caffa7489", "filename": "gcc/testsuite/gcc.target/powerpc/bfp/vec-insert-exp-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fvec-insert-exp-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fvec-insert-exp-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fvec-insert-exp-3.c?ref=a72a7e39722c11025a8e2b56ba94779298e0f2f0", "patch": "@@ -12,5 +12,5 @@ make_doubles (__vector unsigned long long int *significands_p,\n   __vector unsigned long long int significands = *significands_p;\n   __vector unsigned long long int exponents = *exponents_p;\n \n-  return __builtin_vec_insert_exp (significands, exponents); /* { dg-error \"builtin function __builtin_vsx_insert_exp_dp requires\" } */\n+  return __builtin_vec_insert_exp (significands, exponents); /* { dg-error \"builtin function '__builtin_vsx_insert_exp_dp' requires\" } */\n }"}, {"sha": "aeb25a751135036afca437a5f4a3bb436c7f2b58", "filename": "gcc/testsuite/gcc.target/powerpc/bfp/vec-insert-exp-6.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fvec-insert-exp-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fvec-insert-exp-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fvec-insert-exp-6.c?ref=a72a7e39722c11025a8e2b56ba94779298e0f2f0", "patch": "@@ -12,5 +12,5 @@ make_floats (__vector float *significands_p,\n   __vector float significands = *significands_p;\n   __vector unsigned int exponents = *exponents_p;\n \n-  return __builtin_vec_insert_exp (significands, exponents); /* { dg-error \"builtin function __builtin_vsx_insert_exp_sp requires\" } */\n+  return __builtin_vec_insert_exp (significands, exponents); /* { dg-error \"builtin function '__builtin_vsx_insert_exp_sp' requires\" } */\n }"}, {"sha": "d7d78b9e84891e151b8f08f17bd649b762392125", "filename": "gcc/testsuite/gcc.target/powerpc/bfp/vec-insert-exp-7.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fvec-insert-exp-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fvec-insert-exp-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fvec-insert-exp-7.c?ref=a72a7e39722c11025a8e2b56ba94779298e0f2f0", "patch": "@@ -12,5 +12,5 @@ make_doubles (__vector double *significands_p,\n   __vector double significands = *significands_p;\n   __vector unsigned long long int exponents = *exponents_p;\n \n-  return __builtin_vec_insert_exp (significands, exponents); /* { dg-error \"builtin function __builtin_vsx_insert_exp_dp requires\" } */\n+  return __builtin_vec_insert_exp (significands, exponents); /* { dg-error \"builtin function '__builtin_vsx_insert_exp_dp' requires\" } */\n }"}, {"sha": "dc1fcfcaa2df6cf5e3a611700d809facc1cae8ba", "filename": "gcc/testsuite/gcc.target/powerpc/bfp/vec-test-data-class-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fvec-test-data-class-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fvec-test-data-class-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fvec-test-data-class-2.c?ref=a72a7e39722c11025a8e2b56ba94779298e0f2f0", "patch": "@@ -10,5 +10,5 @@ get_data_class_flags (__vector double *p)\n {\n   __vector double source = *p;\n \n-  return __builtin_vec_test_data_class (source, 0x37); /* { dg-error \"builtin function __builtin_vsx_test_data_class_dp requires\" } */\n+  return __builtin_vec_test_data_class (source, 0x37); /* { dg-error \"builtin function '__builtin_vsx_test_data_class_dp' requires\" } */\n }"}, {"sha": "1539a6024dd3389ca15672198f15870bb1fcf819", "filename": "gcc/testsuite/gcc.target/powerpc/bfp/vec-test-data-class-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fvec-test-data-class-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fvec-test-data-class-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fvec-test-data-class-3.c?ref=a72a7e39722c11025a8e2b56ba94779298e0f2f0", "patch": "@@ -10,5 +10,5 @@ get_data_class_flags (__vector float *p)\n {\n   __vector float source = *p;\n \n-  return __builtin_vec_test_data_class (source, 0x37); /* { dg-error \"builtin function __builtin_vsx_test_data_class_sp requires\" } */\n+  return __builtin_vec_test_data_class (source, 0x37); /* { dg-error \"builtin function '__builtin_vsx_test_data_class_sp' requires\" } */\n }"}, {"sha": "8bbb08e456187dc0a0dd857fa0bc499a33af1882", "filename": "gcc/testsuite/gcc.target/powerpc/byte-in-either-range-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbyte-in-either-range-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbyte-in-either-range-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbyte-in-either-range-1.c?ref=a72a7e39722c11025a8e2b56ba94779298e0f2f0", "patch": "@@ -18,5 +18,5 @@ test_byte_in_either_range (unsigned char b,\n   range_encoding = ((first_hi_bound << 24) | (first_lo_bound << 16)\n \t\t    | (second_hi_bound << 8) | second_lo_bound);\n \n-  return __builtin_byte_in_either_range (b, range_encoding); /* { dg-error \"builtin function __builtin_scalar_byte_in_either_range requires\" } */\n+  return __builtin_byte_in_either_range (b, range_encoding); /* { dg-error \"builtin function '__builtin_scalar_byte_in_either_range' requires\" } */\n }"}, {"sha": "02f2f77eb09ebe3ca38e7f8b8f96060e0bb48954", "filename": "gcc/testsuite/gcc.target/powerpc/byte-in-range-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbyte-in-range-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbyte-in-range-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbyte-in-range-1.c?ref=a72a7e39722c11025a8e2b56ba94779298e0f2f0", "patch": "@@ -11,6 +11,6 @@ test_byte_in_range (unsigned char b,\n \t\t    unsigned char low_range, unsigned char high_range)\n {\n   unsigned int range_encoding = (high_range << 8) | low_range;\n-  return __builtin_byte_in_range (b, range_encoding); /* { dg-error \"builtin function __builtin_scalar_byte_in_range requires\" } */\n+  return __builtin_byte_in_range (b, range_encoding); /* { dg-error \"builtin function '__builtin_scalar_byte_in_range' requires\" } */\n }\n "}, {"sha": "2ccb9605208178eeeb4eb50690287fd9508cd1f2", "filename": "gcc/testsuite/gcc.target/powerpc/byte-in-set-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbyte-in-set-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbyte-in-set-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbyte-in-set-1.c?ref=a72a7e39722c11025a8e2b56ba94779298e0f2f0", "patch": "@@ -10,5 +10,5 @@\n int\n test_byte_in_set (unsigned char b, unsigned long long set_members)\n {\n-  return __builtin_byte_in_set (b, set_members); /* { dg-error \"builtin function __builtin_scalar_byte_in_set requires\" } */\n+  return __builtin_byte_in_set (b, set_members); /* { dg-error \"builtin function '__builtin_scalar_byte_in_set' requires\" } */\n }"}, {"sha": "e2308620e58c78d54f856aac36e8e45a5826aa01", "filename": "gcc/testsuite/gcc.target/powerpc/byte-in-set-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbyte-in-set-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbyte-in-set-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbyte-in-set-2.c?ref=a72a7e39722c11025a8e2b56ba94779298e0f2f0", "patch": "@@ -12,5 +12,5 @@\n int\n test_byte_in_set (unsigned char b, unsigned long long set_members)\n {\n-  return __builtin_byte_in_set (b, set_members); /* { dg-error \"builtin function __builtin_byte_in_set not supported in this compiler configuration\" } */\n+  return __builtin_byte_in_set (b, set_members); /* { dg-error \"builtin function '__builtin_byte_in_set' not supported in this compiler configuration\" } */\n }"}, {"sha": "2e227f44e56adce742fe6f909e846551cab93933", "filename": "gcc/testsuite/gcc.target/powerpc/cmpb-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fcmpb-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fcmpb-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fcmpb-3.c?ref=a72a7e39722c11025a8e2b56ba94779298e0f2f0", "patch": "@@ -9,7 +9,7 @@ void abort ();\n long long int\n do_compare (long long int a, long long int b)\n {\n-  return __builtin_cmpb (a, b);\t/* { dg-error \"builtin function __builtin_cmpb not supported in this compiler configuration\" } */\n+  return __builtin_cmpb (a, b);\t/* { dg-error \"builtin function '__builtin_cmpb' not supported in this compiler configuration\" } */\n }\n \n void expect (long long int pattern, long long int value)"}, {"sha": "1867d7e720f858fc777793c821e72fb051cb0aeb", "filename": "gcc/testsuite/gcc.target/powerpc/crypto-builtin-2.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fcrypto-builtin-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fcrypto-builtin-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fcrypto-builtin-2.c?ref=a72a7e39722c11025a8e2b56ba94779298e0f2f0", "patch": "@@ -6,21 +6,21 @@\n \n void use_builtins_d (__vector unsigned long long *p, __vector unsigned long long *q, __vector unsigned long long *r, __vector unsigned long long *s)\n {\n-  p[0] = __builtin_crypto_vcipher (q[0], r[0]); /* { dg-error \"builtin function __builtin_crypto_vcipher is not supported with the current options\" } */\n-  p[1] = __builtin_crypto_vcipherlast (q[1], r[1]); /* { dg-error \"builtin function __builtin_crypto_vcipherlast is not supported with the current options\" } */\n-  p[2] = __builtin_crypto_vncipher (q[2], r[2]); /* { dg-error \"builtin function __builtin_crypto_vncipher is not supported with the current options\" } */\n-  p[3] = __builtin_crypto_vncipherlast (q[3], r[3]); /* { dg-error \"builtin function __builtin_crypto_vncipherlast is not supported with the current options\" } */\n+  p[0] = __builtin_crypto_vcipher (q[0], r[0]); /* { dg-error \"builtin function '__builtin_crypto_vcipher' is not supported with the current options\" } */\n+  p[1] = __builtin_crypto_vcipherlast (q[1], r[1]); /* { dg-error \"builtin function '__builtin_crypto_vcipherlast' is not supported with the current options\" } */\n+  p[2] = __builtin_crypto_vncipher (q[2], r[2]); /* { dg-error \"builtin function '__builtin_crypto_vncipher' is not supported with the current options\" } */\n+  p[3] = __builtin_crypto_vncipherlast (q[3], r[3]); /* { dg-error \"builtin function '__builtin_crypto_vncipherlast' is not supported with the current options\" } */\n   p[4] = __builtin_crypto_vpermxor (q[4], r[4], s[4]);\n   p[5] = __builtin_crypto_vpmsumd (q[5], r[5]);\n-  p[6] = __builtin_crypto_vshasigmad (q[6], 1, 15); /* { dg-error \"builtin function __builtin_crypto_vshasigmad is not supported with the current options\" } */\n-  p[7] = __builtin_crypto_vsbox (q[7]); /* { dg-error \"builtin function __builtin_crypto_vsbox is not supported with the current options\" } */\n+  p[6] = __builtin_crypto_vshasigmad (q[6], 1, 15); /* { dg-error \"builtin function '__builtin_crypto_vshasigmad' is not supported with the current options\" } */\n+  p[7] = __builtin_crypto_vsbox (q[7]); /* { dg-error \"builtin function '__builtin_crypto_vsbox' is not supported with the current options\" } */\n }\n \n void use_builtins_w (__vector unsigned int *p, __vector unsigned int *q, __vector unsigned int *r, __vector unsigned int *s)\n {\n   p[0] = __builtin_crypto_vpermxor (q[0], r[0], s[0]);\n   p[1] = __builtin_crypto_vpmsumw (q[1], r[1]);\n-  p[2] = __builtin_crypto_vshasigmaw (q[2], 1, 15); /* { dg-error \"builtin function __builtin_crypto_vshasigmaw is not supported with the current options\" } */\n+  p[2] = __builtin_crypto_vshasigmaw (q[2], 1, 15); /* { dg-error \"builtin function '__builtin_crypto_vshasigmaw' is not supported with the current options\" } */\n }\n \n void use_builtins_h (__vector unsigned short *p, __vector unsigned short *q, __vector unsigned short *r, __vector unsigned short *s)"}, {"sha": "3b26244693f049099dc402630e1faaa898ee2aaf", "filename": "gcc/testsuite/gcc.target/powerpc/dfp/dtstsfi-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp%2Fdtstsfi-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp%2Fdtstsfi-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp%2Fdtstsfi-1.c?ref=a72a7e39722c11025a8e2b56ba94779298e0f2f0", "patch": "@@ -10,6 +10,6 @@ int doTestBCDSignificance (_Decimal64 *p)\n {\n   _Decimal64 source = *p;\n \n-  return __builtin_dfp_dtstsfi_lt (5, source);\t/* { dg-error \"builtin function __builtin_dtstsfi_lt_dd requires\" } */\n+  return __builtin_dfp_dtstsfi_lt (5, source);\t/* { dg-error \"builtin function '__builtin_dtstsfi_lt_dd' requires\" } */\n }\n "}, {"sha": "a9939b46b537021f84811e892c96ca6da143c845", "filename": "gcc/testsuite/gcc.target/powerpc/dfp/dtstsfi-11.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp%2Fdtstsfi-11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp%2Fdtstsfi-11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp%2Fdtstsfi-11.c?ref=a72a7e39722c11025a8e2b56ba94779298e0f2f0", "patch": "@@ -10,6 +10,6 @@ int doTestBCDSignificance (_Decimal64 *p)\n {\n   _Decimal64 source = *p;\n \n-  return __builtin_dfp_dtstsfi_lt_dd (5, source);\t/* { dg-error \"builtin function __builtin_dtstsfi_lt_dd requires\" } */\n+  return __builtin_dfp_dtstsfi_lt_dd (5, source);\t/* { dg-error \"builtin function '__builtin_dtstsfi_lt_dd' requires\" } */\n }\n "}, {"sha": "b1e9ebb5ed857e8b7e5e2dae9163168fae726be5", "filename": "gcc/testsuite/gcc.target/powerpc/dfp/dtstsfi-16.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp%2Fdtstsfi-16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp%2Fdtstsfi-16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp%2Fdtstsfi-16.c?ref=a72a7e39722c11025a8e2b56ba94779298e0f2f0", "patch": "@@ -10,7 +10,7 @@ int doTestBCDSignificance (_Decimal128 *p)\n {\n   _Decimal128 source = *p;\n \n-  return __builtin_dfp_dtstsfi_lt_td (5, source);\t/* { dg-error \"builtin function __builtin_dtstsfi_lt_td requires\" } */\n+  return __builtin_dfp_dtstsfi_lt_td (5, source);\t/* { dg-error \"builtin function '__builtin_dtstsfi_lt_td' requires\" } */\n }\n \n "}, {"sha": "4360835a3c24ab757c8dbbbec68b391fe3ff27fe", "filename": "gcc/testsuite/gcc.target/powerpc/dfp/dtstsfi-21.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp%2Fdtstsfi-21.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp%2Fdtstsfi-21.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp%2Fdtstsfi-21.c?ref=a72a7e39722c11025a8e2b56ba94779298e0f2f0", "patch": "@@ -10,6 +10,6 @@ int doTestBCDSignificance (_Decimal64 *p)\n {\n   _Decimal64 source = *p;\n \n-  return __builtin_dfp_dtstsfi_gt (5, source);\t/* { dg-error \"builtin function __builtin_dtstsfi_gt_dd requires\" } */\n+  return __builtin_dfp_dtstsfi_gt (5, source);\t/* { dg-error \"builtin function '__builtin_dtstsfi_gt_dd' requires\" } */\n }\n "}, {"sha": "44645f8b60914905a118927ad336dd3ece0f6b66", "filename": "gcc/testsuite/gcc.target/powerpc/dfp/dtstsfi-26.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp%2Fdtstsfi-26.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp%2Fdtstsfi-26.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp%2Fdtstsfi-26.c?ref=a72a7e39722c11025a8e2b56ba94779298e0f2f0", "patch": "@@ -10,7 +10,7 @@ int doTestBCDSignificance (_Decimal128 *p)\n {\n   _Decimal128 source = *p;\n \n-  return __builtin_dfp_dtstsfi_gt (5, source);\t/* { dg-error \"builtin function __builtin_dtstsfi_gt_td requires\" } */\n+  return __builtin_dfp_dtstsfi_gt (5, source);\t/* { dg-error \"builtin function '__builtin_dtstsfi_gt_td' requires\" } */\n }\n \n "}, {"sha": "af88a51f9c24559ff4a4dad81687baddc6e8ce8b", "filename": "gcc/testsuite/gcc.target/powerpc/dfp/dtstsfi-31.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp%2Fdtstsfi-31.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp%2Fdtstsfi-31.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp%2Fdtstsfi-31.c?ref=a72a7e39722c11025a8e2b56ba94779298e0f2f0", "patch": "@@ -10,6 +10,6 @@ int doTestBCDSignificance (_Decimal64 *p)\n {\n   _Decimal64 source = *p;\n \n-  return __builtin_dfp_dtstsfi_gt_dd (5, source);\t/* { dg-error \"builtin function __builtin_dtstsfi_gt_dd requires\" } */\n+  return __builtin_dfp_dtstsfi_gt_dd (5, source);\t/* { dg-error \"builtin function '__builtin_dtstsfi_gt_dd' requires\" } */\n }\n "}, {"sha": "3780161a3befde9a2968c606dc6fde0c64b87424", "filename": "gcc/testsuite/gcc.target/powerpc/dfp/dtstsfi-36.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp%2Fdtstsfi-36.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp%2Fdtstsfi-36.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp%2Fdtstsfi-36.c?ref=a72a7e39722c11025a8e2b56ba94779298e0f2f0", "patch": "@@ -10,7 +10,7 @@ int doTestBCDSignificance (_Decimal128 *p)\n {\n   _Decimal128 source = *p;\n \n-  return __builtin_dfp_dtstsfi_gt_td (5, source);\t/* { dg-error \"builtin function __builtin_dtstsfi_gt_td requires\" } */\n+  return __builtin_dfp_dtstsfi_gt_td (5, source);\t/* { dg-error \"builtin function '__builtin_dtstsfi_gt_td' requires\" } */\n }\n \n "}, {"sha": "947fb840df1ba74e78066a0a2a165ee65537a702", "filename": "gcc/testsuite/gcc.target/powerpc/dfp/dtstsfi-41.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp%2Fdtstsfi-41.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp%2Fdtstsfi-41.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp%2Fdtstsfi-41.c?ref=a72a7e39722c11025a8e2b56ba94779298e0f2f0", "patch": "@@ -10,6 +10,6 @@ int doTestBCDSignificance (_Decimal64 *p)\n {\n   _Decimal64 source = *p;\n \n-  return __builtin_dfp_dtstsfi_eq (5, source);\t/* { dg-error \"builtin function __builtin_dtstsfi_eq_dd requires\" } */\n+  return __builtin_dfp_dtstsfi_eq (5, source);\t/* { dg-error \"builtin function '__builtin_dtstsfi_eq_dd' requires\" } */\n }\n "}, {"sha": "5486c39aeb658270ab66d63715e196dc55160bda", "filename": "gcc/testsuite/gcc.target/powerpc/dfp/dtstsfi-46.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp%2Fdtstsfi-46.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp%2Fdtstsfi-46.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp%2Fdtstsfi-46.c?ref=a72a7e39722c11025a8e2b56ba94779298e0f2f0", "patch": "@@ -10,7 +10,7 @@ int doTestBCDSignificance (_Decimal128 *p)\n {\n   _Decimal128 source = *p;\n \n-  return __builtin_dfp_dtstsfi_eq (5, source);\t/* { dg-error \"builtin function __builtin_dtstsfi_eq_td requires\" } */\n+  return __builtin_dfp_dtstsfi_eq (5, source);\t/* { dg-error \"builtin function '__builtin_dtstsfi_eq_td' requires\" } */\n }\n \n "}, {"sha": "78efc18601a3e830aca58342f293a501acdeac20", "filename": "gcc/testsuite/gcc.target/powerpc/dfp/dtstsfi-51.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp%2Fdtstsfi-51.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp%2Fdtstsfi-51.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp%2Fdtstsfi-51.c?ref=a72a7e39722c11025a8e2b56ba94779298e0f2f0", "patch": "@@ -10,6 +10,6 @@ int doTestBCDSignificance (_Decimal64 *p)\n {\n   _Decimal64 source = *p;\n \n-  return __builtin_dfp_dtstsfi_eq_dd (5, source);\t/* { dg-error \"builtin function __builtin_dtstsfi_eq_dd requires\" } */\n+  return __builtin_dfp_dtstsfi_eq_dd (5, source);\t/* { dg-error \"builtin function '__builtin_dtstsfi_eq_dd' requires\" } */\n }\n "}, {"sha": "d68a3d60146bca10b74fd1ff5900c14d312e1d84", "filename": "gcc/testsuite/gcc.target/powerpc/dfp/dtstsfi-56.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp%2Fdtstsfi-56.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp%2Fdtstsfi-56.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp%2Fdtstsfi-56.c?ref=a72a7e39722c11025a8e2b56ba94779298e0f2f0", "patch": "@@ -10,7 +10,7 @@ int doTestBCDSignificance (_Decimal128 *p)\n {\n   _Decimal128 source = *p;\n \n-  return __builtin_dfp_dtstsfi_eq_td (5, source);\t/* { dg-error \"builtin function __builtin_dtstsfi_eq_td requires\" } */\n+  return __builtin_dfp_dtstsfi_eq_td (5, source);\t/* { dg-error \"builtin function '__builtin_dtstsfi_eq_td' requires\" } */\n }\n \n "}, {"sha": "9a801f8e95a3d0fc232abf185d9b450344d9fe75", "filename": "gcc/testsuite/gcc.target/powerpc/dfp/dtstsfi-6.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp%2Fdtstsfi-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp%2Fdtstsfi-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp%2Fdtstsfi-6.c?ref=a72a7e39722c11025a8e2b56ba94779298e0f2f0", "patch": "@@ -10,7 +10,7 @@ int doTestBCDSignificance (_Decimal128 *p)\n {\n   _Decimal128 source = *p;\n \n-  return __builtin_dfp_dtstsfi_lt (5, source);\t/* { dg-error \"builtin function __builtin_dtstsfi_lt_td requires\" } */\n+  return __builtin_dfp_dtstsfi_lt (5, source);\t/* { dg-error \"builtin function '__builtin_dtstsfi_lt_td' requires\" } */\n }\n \n "}, {"sha": "8e81de826cc6d9bd6bf4e9fa339b92ab76a332c4", "filename": "gcc/testsuite/gcc.target/powerpc/dfp/dtstsfi-61.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp%2Fdtstsfi-61.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp%2Fdtstsfi-61.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp%2Fdtstsfi-61.c?ref=a72a7e39722c11025a8e2b56ba94779298e0f2f0", "patch": "@@ -10,6 +10,6 @@ int doTestBCDSignificance (_Decimal64 *p)\n {\n   _Decimal64 source = *p;\n \n-  return __builtin_dfp_dtstsfi_ov (5, source);\t/* { dg-error \"builtin function __builtin_dtstsfi_ov_dd requires\" } */\n+  return __builtin_dfp_dtstsfi_ov (5, source);\t/* { dg-error \"builtin function '__builtin_dtstsfi_ov_dd' requires\" } */\n }\n "}, {"sha": "18c0a16b065aead50044a76dc0ecbeccbb78aac4", "filename": "gcc/testsuite/gcc.target/powerpc/dfp/dtstsfi-66.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp%2Fdtstsfi-66.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp%2Fdtstsfi-66.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp%2Fdtstsfi-66.c?ref=a72a7e39722c11025a8e2b56ba94779298e0f2f0", "patch": "@@ -10,7 +10,7 @@ int doTestBCDSignificance (_Decimal128 *p)\n {\n   _Decimal128 source = *p;\n \n-  return __builtin_dfp_dtstsfi_ov (5, source);\t/* { dg-error \"builtin function __builtin_dtstsfi_ov_td requires\" } */\n+  return __builtin_dfp_dtstsfi_ov (5, source);\t/* { dg-error \"builtin function '__builtin_dtstsfi_ov_td' requires\" } */\n }\n \n "}, {"sha": "9eda09754d4883ecfdd05d47d3fdfcdcfa6d288d", "filename": "gcc/testsuite/gcc.target/powerpc/dfp/dtstsfi-71.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp%2Fdtstsfi-71.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp%2Fdtstsfi-71.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp%2Fdtstsfi-71.c?ref=a72a7e39722c11025a8e2b56ba94779298e0f2f0", "patch": "@@ -10,6 +10,6 @@ int doTestBCDSignificance (_Decimal64 *p)\n {\n   _Decimal64 source = *p;\n \n-  return __builtin_dfp_dtstsfi_ov_dd (5, source);\t/* { dg-error \"builtin function __builtin_dtstsfi_ov_dd requires\" } */\n+  return __builtin_dfp_dtstsfi_ov_dd (5, source);\t/* { dg-error \"builtin function '__builtin_dtstsfi_ov_dd' requires\" } */\n }\n "}, {"sha": "e86009abb14125abca67aa3224c329784269441e", "filename": "gcc/testsuite/gcc.target/powerpc/dfp/dtstsfi-76.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp%2Fdtstsfi-76.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp%2Fdtstsfi-76.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp%2Fdtstsfi-76.c?ref=a72a7e39722c11025a8e2b56ba94779298e0f2f0", "patch": "@@ -10,7 +10,7 @@ int doTestBCDSignificance (_Decimal128 *p)\n {\n   _Decimal128 source = *p;\n \n-  return __builtin_dfp_dtstsfi_ov_td (5, source);\t/* { dg-error \"builtin function __builtin_dtstsfi_ov_td requires\" } */\n+  return __builtin_dfp_dtstsfi_ov_td (5, source);\t/* { dg-error \"builtin function '__builtin_dtstsfi_ov_td' requires\" } */\n }\n \n "}, {"sha": "39f54f475330f7b93ef7477a05a48767a3fb7575", "filename": "gcc/testsuite/gcc.target/powerpc/no-r11-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fno-r11-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fno-r11-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fno-r11-3.c?ref=a72a7e39722c11025a8e2b56ba94779298e0f2f0", "patch": "@@ -6,7 +6,7 @@\n extern void ext_call (int (func) (void));\n \n int\n-outer_func (int init)\t/* { dg-error \"-mno-pointers-to-nested-functions option\" } */\n+outer_func (int init)\t/* { dg-error \"'-mno-pointers-to-nested-functions' option\" } */\n {\n   int value = init;\n "}, {"sha": "6a487e32e49fbdc3a1707c03c7d853bb97bea093", "filename": "gcc/testsuite/gcc.target/powerpc/pr80098-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr80098-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr80098-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr80098-1.c?ref=a72a7e39722c11025a8e2b56ba94779298e0f2f0", "patch": "@@ -5,5 +5,5 @@\n \n int i;\n \n-/* { dg-error \"-mno-power9-vector turns off -mpower9-minmax\" \"PR80098\" { target *-*-* } 0 } */\n-/* { dg-error \"-mno-power9-vector turns off -mpower9-dform\"  \"PR80098\" { target *-*-* } 0 } */\n+/* { dg-error \"'-mno-power9-vector' turns off '-mpower9-minmax'\" \"PR80098\" { target *-*-* } 0 } */\n+/* { dg-error \"'-mno-power9-vector' turns off '-mpower9-dform'\"  \"PR80098\" { target *-*-* } 0 } */"}, {"sha": "88f7ee49398ff95ccd5c56d8e1103475d0ddfa73", "filename": "gcc/testsuite/gcc.target/powerpc/pr80098-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr80098-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr80098-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr80098-2.c?ref=a72a7e39722c11025a8e2b56ba94779298e0f2f0", "patch": "@@ -5,5 +5,5 @@\n \n int i;\n \n-/* { dg-error \"-mno-power8-vector turns off -mdirect-move\" \"PR80098\" { target *-*-* } 0 } */\n-/* { dg-error \"-mno-power8-vector turns off -mcrypto\"      \"PR80098\" { target *-*-* } 0 } */\n+/* { dg-error \"'-mno-power8-vector' turns off '-mdirect-move'\" \"PR80098\" { target *-*-* } 0 } */\n+/* { dg-error \"'-mno-power8-vector' turns off '-mcrypto'\"      \"PR80098\" { target *-*-* } 0 } */"}, {"sha": "aae8fa181142e68dfe1e3e2d3acde0adbac01b56", "filename": "gcc/testsuite/gcc.target/powerpc/pr80098-3.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr80098-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr80098-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr80098-3.c?ref=a72a7e39722c11025a8e2b56ba94779298e0f2f0", "patch": "@@ -5,5 +5,5 @@\n \n int i;\n \n-/* { dg-error \"-mno-vsx turns off -mdirect-move\" \"PR80098\" { target *-*-* } 0 } */\n-/* { dg-error \"-mno-vsx turns off -mcrypto\"      \"PR80098\" { target *-*-* } 0 } */\n+/* { dg-error \"'-mno-vsx' turns off '-mdirect-move'\" \"PR80098\" { target *-*-* } 0 } */\n+/* { dg-error \"'-mno-vsx' turns off '-mcrypto'\"      \"PR80098\" { target *-*-* } 0 } */"}, {"sha": "c652ac93a7a8e6c327d4b1c664dc127053ba4520", "filename": "gcc/testsuite/gcc.target/powerpc/pr80098-4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr80098-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr80098-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr80098-4.c?ref=a72a7e39722c11025a8e2b56ba94779298e0f2f0", "patch": "@@ -5,4 +5,4 @@\n \n int i;\n \n-/* { dg-error \"-mno-vsx turns off -mvsx-timode\" \"PR80098\" { target *-*-* } 0 } */\n+/* { dg-error \"'-mno-vsx' turns off '-mvsx-timode'\" \"PR80098\" { target *-*-* } 0 } */"}, {"sha": "0628a85aefe22aefcc662ab2ddc0165a2a16861e", "filename": "gcc/testsuite/gcc.target/powerpc/vsu/vec-all-nez-7.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsu%2Fvec-all-nez-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsu%2Fvec-all-nez-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsu%2Fvec-all-nez-7.c?ref=a72a7e39722c11025a8e2b56ba94779298e0f2f0", "patch": "@@ -12,5 +12,5 @@ test_all_not_equal_and_not_zero (vector unsigned short *arg1_p,\n   vector unsigned short arg_1 = *arg1_p;\n   vector unsigned short arg_2 = *arg2_p;\n \n-  return __builtin_vec_vcmpnez_p (__CR6_LT, arg_1, arg_2);\t/* { dg-error \"builtin function __builtin_vec_vcmpnez_p not supported in this compiler configuration\" } */\n+  return __builtin_vec_vcmpnez_p (__CR6_LT, arg_1, arg_2);\t/* { dg-error \"builtin function '__builtin_vec_vcmpnez_p' not supported in this compiler configuration\" } */\n }"}, {"sha": "f81ad21a2052b42e8e0bcc5571e5e9b0e2c53a66", "filename": "gcc/testsuite/gcc.target/powerpc/vsu/vec-any-eqz-7.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsu%2Fvec-any-eqz-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsu%2Fvec-any-eqz-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsu%2Fvec-any-eqz-7.c?ref=a72a7e39722c11025a8e2b56ba94779298e0f2f0", "patch": "@@ -11,5 +11,5 @@ test_any_equal (vector unsigned int *arg1_p, vector unsigned int *arg2_p)\n   vector unsigned int arg_1 = *arg1_p;\n   vector unsigned int arg_2 = *arg2_p;\n \n-  return __builtin_vec_vcmpnez_p (__CR6_LT_REV, arg_1, arg_2);\t/* { dg-error \"builtin function __builtin_vec_vcmpnez_p not supported in this compiler configuration\" } */\n+  return __builtin_vec_vcmpnez_p (__CR6_LT_REV, arg_1, arg_2);\t/* { dg-error \"builtin function '__builtin_vec_vcmpnez_p' not supported in this compiler configuration\" } */\n }"}, {"sha": "a4d0dbb179fc4e4ab4b564db47e9f31347840a89", "filename": "gcc/testsuite/gcc.target/powerpc/vsu/vec-cmpnez-7.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsu%2Fvec-cmpnez-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsu%2Fvec-cmpnez-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsu%2Fvec-cmpnez-7.c?ref=a72a7e39722c11025a8e2b56ba94779298e0f2f0", "patch": "@@ -11,5 +11,5 @@ fetch_data (vector unsigned int *arg1_p, vector unsigned int *arg2_p)\n   vector unsigned int arg_1 = *arg1_p;\n   vector unsigned int arg_2 = *arg2_p;\n \n-  return __builtin_vec_vcmpnez (arg_1, arg_2);\t/* { dg-error \"builtin function __builtin_altivec_vcmpnezw requires the -mcpu=power9 option\" } */\n+  return __builtin_vec_vcmpnez (arg_1, arg_2);\t/* { dg-error \"builtin function '__builtin_altivec_vcmpnezw' requires the '-mcpu=power9' option\" } */\n }"}, {"sha": "32633e32b1055bd4fbaf155992ab72fa0baa4829", "filename": "gcc/testsuite/gcc.target/powerpc/vsu/vec-cntlz-lsbb-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsu%2Fvec-cntlz-lsbb-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsu%2Fvec-cntlz-lsbb-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsu%2Fvec-cntlz-lsbb-2.c?ref=a72a7e39722c11025a8e2b56ba94779298e0f2f0", "patch": "@@ -10,5 +10,5 @@ count_leading_zero_byte_bits (vector unsigned char *arg1_p)\n {\n   vector unsigned char arg_1 = *arg1_p;\n \n-  return __builtin_vec_vclzlsbb (arg_1);\t/* { dg-error \"builtin function __builtin_altivec_vclzlsbb requires the -mcpu=power9 option\" } */\n+  return __builtin_vec_vclzlsbb (arg_1);\t/* { dg-error \"builtin function '__builtin_altivec_vclzlsbb' requires the '-mcpu=power9' option\" } */\n }"}, {"sha": "969107a24f7162b4c9016adfe5342d9b114b5657", "filename": "gcc/testsuite/gcc.target/powerpc/vsu/vec-cnttz-lsbb-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsu%2Fvec-cnttz-lsbb-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsu%2Fvec-cnttz-lsbb-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsu%2Fvec-cnttz-lsbb-2.c?ref=a72a7e39722c11025a8e2b56ba94779298e0f2f0", "patch": "@@ -10,5 +10,5 @@ count_trailing_zero_byte_bits (vector unsigned char *arg1_p)\n {\n   vector unsigned char arg_1 = *arg1_p;\n \n-  return __builtin_vec_vctzlsbb (arg_1);\t/* { dg-error \"builtin function __builtin_altivec_vctzlsbb requires the -mcpu=power9 option\" } */\n+  return __builtin_vec_vctzlsbb (arg_1);\t/* { dg-error \"builtin function '__builtin_altivec_vctzlsbb' requires the '-mcpu=power9' option\" } */\n }"}, {"sha": "59f146a8a34c56d9a1d55587672790a2a712fc76", "filename": "gcc/testsuite/gcc.target/powerpc/vsu/vec-xl-len-12.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsu%2Fvec-xl-len-12.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsu%2Fvec-xl-len-12.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsu%2Fvec-xl-len-12.c?ref=a72a7e39722c11025a8e2b56ba94779298e0f2f0", "patch": "@@ -12,5 +12,5 @@\n __vector float\n fetch_data (float *address, size_t length)\n {\n-  return __builtin_vec_lxvl (address, length); /* { dg-error \"builtin function __builtin_vsx_lxvl requires\" } */\n+  return __builtin_vec_lxvl (address, length); /* { dg-error \"builtin function '__builtin_vsx_lxvl' requires\" } */\n }"}, {"sha": "a83f1c716cdeeb7f09ba3c6fb3a7a81b8a95c34f", "filename": "gcc/testsuite/gcc.target/powerpc/vsu/vec-xl-len-13.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsu%2Fvec-xl-len-13.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsu%2Fvec-xl-len-13.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsu%2Fvec-xl-len-13.c?ref=a72a7e39722c11025a8e2b56ba94779298e0f2f0", "patch": "@@ -14,5 +14,5 @@\n __vector float\n fetch_data (float *address, size_t length)\n {\n-  return __builtin_vec_lxvl (address, length);\t/* { dg-error \"builtin function __builtin_vec_lxvl not supported in this compiler configuration\" } */\n+  return __builtin_vec_lxvl (address, length);\t/* { dg-error \"builtin function '__builtin_vec_lxvl' not supported in this compiler configuration\" } */\n }"}, {"sha": "2a5d15dd7dcba6bd8e80d1e56199352f9e76e5fd", "filename": "gcc/testsuite/gcc.target/powerpc/vsu/vec-xlx-7.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsu%2Fvec-xlx-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsu%2Fvec-xlx-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsu%2Fvec-xlx-7.c?ref=a72a7e39722c11025a8e2b56ba94779298e0f2f0", "patch": "@@ -11,5 +11,5 @@ fetch_data (unsigned int offset, vector signed int *datap)\n {\n   vector signed int data = *datap;\n \n-  return __builtin_vec_vextulx (offset, data);\t/* { dg-error \"builtin function __builtin_altivec_vextuwlx requires\" } */\n+  return __builtin_vec_vextulx (offset, data);\t/* { dg-error \"builtin function '__builtin_altivec_vextuwlx' requires\" } */\n }"}, {"sha": "940cb80627b6c662139383b9673d1082cdd10806", "filename": "gcc/testsuite/gcc.target/powerpc/vsu/vec-xrx-7.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsu%2Fvec-xrx-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsu%2Fvec-xrx-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsu%2Fvec-xrx-7.c?ref=a72a7e39722c11025a8e2b56ba94779298e0f2f0", "patch": "@@ -11,5 +11,5 @@ fetch_data (unsigned short offset, vector signed short *datap)\n {\n   vector signed short data = *datap;\n \n-  return __builtin_vec_vexturx (offset, data);\t/* { dg-error \"builtin function __builtin_altivec_vextuhrx requires\" } */\n+  return __builtin_vec_vexturx (offset, data);\t/* { dg-error \"builtin function '__builtin_altivec_vextuhrx' requires\" } */\n }"}, {"sha": "2b85b69de17a56d4d15da6d1d333d904c33cdc28", "filename": "gcc/testsuite/gcc.target/powerpc/vsu/vec-xst-len-12.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsu%2Fvec-xst-len-12.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsu%2Fvec-xst-len-12.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsu%2Fvec-xst-len-12.c?ref=a72a7e39722c11025a8e2b56ba94779298e0f2f0", "patch": "@@ -14,5 +14,5 @@ store_data (vector double *datap, double *address, size_t length)\n {\n   vector double data = *datap;\n \n-  __builtin_vec_stxvl (data, address, length); /* { dg-error \"builtin function __builtin_vec_stxvl not supported in this compiler configuration\" } */\n+  __builtin_vec_stxvl (data, address, length); /* { dg-error \"builtin function '__builtin_vec_stxvl' not supported in this compiler configuration\" } */\n }"}, {"sha": "643333accee5e456bd458b7561b029de9ee7deb8", "filename": "gcc/testsuite/gcc.target/powerpc/vsu/vec-xst-len-13.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsu%2Fvec-xst-len-13.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a72a7e39722c11025a8e2b56ba94779298e0f2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsu%2Fvec-xst-len-13.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsu%2Fvec-xst-len-13.c?ref=a72a7e39722c11025a8e2b56ba94779298e0f2f0", "patch": "@@ -15,5 +15,5 @@ store_data (vector double *datap, double *address, size_t length)\n {\n   vector double data = *datap;\n \n-  __builtin_vec_stxvl (data, address, length); /* { dg-error \"builtin function __builtin_altivec_stxvl requires\" } */\n+  __builtin_vec_stxvl (data, address, length); /* { dg-error \"builtin function '__builtin_altivec_stxvl' requires\" } */\n }"}]}