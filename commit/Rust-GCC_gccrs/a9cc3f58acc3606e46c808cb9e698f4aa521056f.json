{"sha": "a9cc3f58acc3606e46c808cb9e698f4aa521056f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTljYzNmNThhY2MzNjA2ZTQ2YzgwOGNiOWU2OThmNGFhNTIxMDU2Zg==", "commit": {"author": {"name": "Andreas Krebbel", "email": "krebbel@gcc.gnu.org", "date": "2013-09-06T07:54:05Z"}, "committer": {"name": "Andreas Krebbel", "email": "krebbel@gcc.gnu.org", "date": "2013-09-06T07:54:05Z"}, "message": "s390.md: Add \"bcr_flush\" value to mnemonic attribute.\n\n2013-09-06  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>\n\n\t* config/s390/s390.md: Add \"bcr_flush\" value to mnemonic\n\tattribute.\n\t(\"mem_thread_fence_1\"): Use bcr 14,0 for z196 and later.\n\tSet the mnemonic attribute to \"bcr_flush\".  Set the \"z196prop\"\n\tattribute to \"z196_alone\".\n\t* config/s390/2827.md: Add \"bcr_flush\" to \"ooo_groupalone\" and\n\t\"zEC12_simple\".\n\nFrom-SVN: r202311", "tree": {"sha": "a1d7826211cd040bb8f3662c80211c89cd4d7ced", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a1d7826211cd040bb8f3662c80211c89cd4d7ced"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a9cc3f58acc3606e46c808cb9e698f4aa521056f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9cc3f58acc3606e46c808cb9e698f4aa521056f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a9cc3f58acc3606e46c808cb9e698f4aa521056f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9cc3f58acc3606e46c808cb9e698f4aa521056f/comments", "author": null, "committer": null, "parents": [{"sha": "c8e9d8c3465954947924050f77c899626631f15d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8e9d8c3465954947924050f77c899626631f15d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c8e9d8c3465954947924050f77c899626631f15d"}], "stats": {"total": 20, "additions": 15, "deletions": 5}, "files": [{"sha": "f4d8836639c3c512d6a1649129f32d1a9b7d55e0", "filename": "gcc/config/s390/2827.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9cc3f58acc3606e46c808cb9e698f4aa521056f/gcc%2Fconfig%2Fs390%2F2827.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9cc3f58acc3606e46c808cb9e698f4aa521056f/gcc%2Fconfig%2Fs390%2F2827.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2F2827.md?ref=a9cc3f58acc3606e46c808cb9e698f4aa521056f", "patch": "@@ -32,12 +32,12 @@\n         (const_int 0)))\n \n (define_attr \"ooo_groupalone\" \"\"\n-  (cond [(eq_attr \"mnemonic\" \"lnxbr,madb,ltxtr,clc,axtr,msebr,slbgr,xc,alcr,lpxbr,slbr,maebr,mlg,mfy,lxdtr,maeb,lxeb,nc,mxtr,sxtr,dxbr,alc,msdbr,ltxbr,lxdb,madbr,lxdbr,lxebr,mvc,m,mseb,mlr,mlgr,slb,tcxb,msdb,sqxbr,alcgr,oc,flogr,alcg,mxbr,dxtr,axbr,mr,sxbr,slbg,ml,lcxbr\") (const_int 1)]\n+  (cond [(eq_attr \"mnemonic\" \"lnxbr,madb,ltxtr,clc,axtr,msebr,slbgr,xc,alcr,lpxbr,slbr,maebr,mlg,mfy,lxdtr,maeb,lxeb,nc,mxtr,sxtr,dxbr,alc,msdbr,ltxbr,lxdb,madbr,lxdbr,lxebr,mvc,m,mseb,mlr,mlgr,slb,tcxb,msdb,sqxbr,alcgr,oc,flogr,alcg,mxbr,dxtr,axbr,mr,sxbr,slbg,ml,lcxbr,bcr_flush\") (const_int 1)]\n         (const_int 0)))\n \n (define_insn_reservation \"zEC12_simple\" 1\n   (and (eq_attr \"cpu\" \"zEC12\")\n-       (eq_attr \"mnemonic\" \"ltg,ogrk,lr,lnebr,lghrl,sdbr,x,asi,lhr,sebr,madb,ar,lhrl,clfxtr,llgfr,clghrl,cgr,cli,agrk,ic,adbr,aebr,lrv,clg,cy,cghi,sy,celfbr,seb,clgfr,al,tm,lang,clfebr,lghr,cdb,lpebr,laa,ark,lh,or,icy,xi,msebr,n,llihl,afi,cs,nrk,sth,lgr,l,lcr,stey,xg,crt,slgfr,ny,ld,j,llihh,slgr,clfhsi,slg,lb,lgrl,lrl,llihf,lndbr,llcr,laxg,mvghi,rllg,sdb,xrk,laag,alhsik,algfi,algr,aly,agfi,lrvr,d,crl,llgc,tmhl,algsi,lgh,icmh,clhrl,xgrk,icm,iilf,ork,lbr,cg,ldgr,lgf,iihf,llghr,sg,clfdbr,llgtr,stam,cebr,tmhh,tceb,slgf,basr,lgbr,maebr,lgb,cgfi,aeb,ltebr,lax,clfit,lrvgr,nihl,ni,clfdtr,srdl,mdb,srk,xihf,stgrl,sthrl,algf,ltr,cdlgbr,cgit,ng,lat,llghrl,ltgr,nihh,clgfrl,srlk,maeb,agr,cxlftr,ler,bcr,stcy,cds,clfi,nihf,ly,clt,lgat,alg,lhy,lgfrl,clghsi,clrt,tmll,srlg,tcdb,ay,sty,clr,lgfi,lan,lpdbr,clgt,adb,ahik,sra,algrk,cdfbr,lcebr,clfxbr,msdbr,ceb,clgr,tmy,tmlh,alghsik,lcgr,mvi,cdbr,ltgf,xr,larl,ldr,llgcr,clgrt,clrl,cghsi,cliy,madbr,oy,ogr,llgt,meebr,slr,clgxbr,chi,s,icmy,llc,ngr,clhhsi,ltgfr,llill,lhi,o,meeb,clgdtr,sll,clgrl,clgf,ledbr,cegbr,mviy,algfr,rll,cdlftr,sldl,cdlgtr,lg,niy,st,sgr,ag,le,xgr,cr,stg,llilh,sr,lzer,cdsg,sllk,mdbr,stoc,csg,clgit,chhsi,strl,llilf,lndfr,ngrk,clgebr,clgfi,llgh,mseb,ltdbr,oill,la,llhrl,stc,lghi,oihl,xiy,sllg,llgf,cgrt,ldeb,cl,sl,cdlfbr,oi,oilh,nr,srak,oihh,ear,slgrk,og,c,slgfi,sthy,oilf,oiy,msdb,oihf,a,cfi,lzxr,lzdr,srag,cdgbr,brasl,alr,cgrl,llgfrl,cit,clgxtr,ley,exrl,lcdfr,lay,xilf,lcdbr,alsi,mvhhi,srl,chsi,lgfr,lrvg,cly,sgrk,ahi,celgbr,nill,clgdbr,jg,slrk,lxr,sar,slfi,cpsdr,lcgfr,aghik,nilh,mvhi,lpdfr,xy,alrk,lao,agsi,ldy,nilf,llhr,alfi,laog,sly,aghi,ldebr,bras,srda,cefbr,lt\")) \"nothing\")\n+       (eq_attr \"mnemonic\" \"ltg,ogrk,lr,lnebr,lghrl,sdbr,x,asi,lhr,sebr,madb,ar,lhrl,clfxtr,llgfr,clghrl,cgr,cli,agrk,ic,adbr,aebr,lrv,clg,cy,cghi,sy,celfbr,seb,clgfr,al,tm,lang,clfebr,lghr,cdb,lpebr,laa,ark,lh,or,icy,xi,msebr,n,llihl,afi,cs,nrk,sth,lgr,l,lcr,stey,xg,crt,slgfr,ny,ld,j,llihh,slgr,clfhsi,slg,lb,lgrl,lrl,llihf,lndbr,llcr,laxg,mvghi,rllg,sdb,xrk,laag,alhsik,algfi,algr,aly,agfi,lrvr,d,crl,llgc,tmhl,algsi,lgh,icmh,clhrl,xgrk,icm,iilf,ork,lbr,cg,ldgr,lgf,iihf,llghr,sg,clfdbr,llgtr,stam,cebr,tmhh,tceb,slgf,basr,lgbr,maebr,lgb,cgfi,aeb,ltebr,lax,clfit,lrvgr,nihl,ni,clfdtr,srdl,mdb,srk,xihf,stgrl,sthrl,algf,ltr,cdlgbr,cgit,ng,lat,llghrl,ltgr,nihh,clgfrl,srlk,maeb,agr,cxlftr,ler,bcr_flush,stcy,cds,clfi,nihf,ly,clt,lgat,alg,lhy,lgfrl,clghsi,clrt,tmll,srlg,tcdb,ay,sty,clr,lgfi,lan,lpdbr,clgt,adb,ahik,sra,algrk,cdfbr,lcebr,clfxbr,msdbr,ceb,clgr,tmy,tmlh,alghsik,lcgr,mvi,cdbr,ltgf,xr,larl,ldr,llgcr,clgrt,clrl,cghsi,cliy,madbr,oy,ogr,llgt,meebr,slr,clgxbr,chi,s,icmy,llc,ngr,clhhsi,ltgfr,llill,lhi,o,meeb,clgdtr,sll,clgrl,clgf,ledbr,cegbr,mviy,algfr,rll,cdlftr,sldl,cdlgtr,lg,niy,st,sgr,ag,le,xgr,cr,stg,llilh,sr,lzer,cdsg,sllk,mdbr,stoc,csg,clgit,chhsi,strl,llilf,lndfr,ngrk,clgebr,clgfi,llgh,mseb,ltdbr,oill,la,llhrl,stc,lghi,oihl,xiy,sllg,llgf,cgrt,ldeb,cl,sl,cdlfbr,oi,oilh,nr,srak,oihh,ear,slgrk,og,c,slgfi,sthy,oilf,oiy,msdb,oihf,a,cfi,lzxr,lzdr,srag,cdgbr,brasl,alr,cgrl,llgfrl,cit,clgxtr,ley,exrl,lcdfr,lay,xilf,lcdbr,alsi,mvhhi,srl,chsi,lgfr,lrvg,cly,sgrk,ahi,celgbr,nill,clgdbr,jg,slrk,lxr,sar,slfi,cpsdr,lcgfr,aghik,nilh,mvhi,lpdfr,xy,alrk,lao,agsi,ldy,nilf,llhr,alfi,laog,sly,aghi,ldebr,bras,srda,cefbr,lt\")) \"nothing\")\n \n (define_insn_reservation \"zEC12_cgdbr\" 2\n   (and (eq_attr \"cpu\" \"zEC12\")"}, {"sha": "d2a744ac63b3ed88464ea6cf7fc2ccb50a7342e1", "filename": "gcc/config/s390/s390.md", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9cc3f58acc3606e46c808cb9e698f4aa521056f/gcc%2Fconfig%2Fs390%2Fs390.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9cc3f58acc3606e46c808cb9e698f4aa521056f/gcc%2Fconfig%2Fs390%2Fs390.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.md?ref=a9cc3f58acc3606e46c808cb9e698f4aa521056f", "patch": "@@ -291,7 +291,7 @@\n                          z196_cracked\"\n              (const_string \"none\"))\n \n-(define_attr \"mnemonic\" \"unknown\" (const_string \"unknown\"))\n+(define_attr \"mnemonic\" \"bcr_flush,unknown\" (const_string \"unknown\"))\n \n ;; Length in bytes.\n \n@@ -9007,12 +9007,22 @@\n \n ; Although bcr is superscalar on Z10, this variant will never\n ; become part of an execution group.\n+; With z196 we can make use of the fast-BCR-serialization facility.\n+; This allows for a slightly faster sync which is sufficient for our\n+; purposes.\n (define_insn \"mem_thread_fence_1\"\n   [(set (match_operand:BLK 0 \"\" \"\")\n \t(unspec:BLK [(match_dup 0)] UNSPEC_MB))]\n   \"\"\n-  \"bcr\\t15,0\"\n-  [(set_attr \"op_type\" \"RR\")])\n+{\n+  if (TARGET_Z196)\n+    return \"bcr\\t14,0\";\n+  else\n+    return \"bcr\\t15,0\";\n+}\n+  [(set_attr \"op_type\" \"RR\")\n+   (set_attr \"mnemonic\" \"bcr_flush\")\n+   (set_attr \"z196prop\" \"z196_alone\")])\n \n ;\n ; atomic load/store operations"}]}