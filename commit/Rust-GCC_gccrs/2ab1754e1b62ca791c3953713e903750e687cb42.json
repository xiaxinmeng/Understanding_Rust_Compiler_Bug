{"sha": "2ab1754e1b62ca791c3953713e903750e687cb42", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmFiMTc1NGUxYjYyY2E3OTFjMzk1MzcxM2U5MDM3NTBlNjg3Y2I0Mg==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2005-06-18T22:40:49Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2005-06-18T22:40:49Z"}, "message": "expr.c (store_constructor): Use store of 0 to indicate value death instead of a clobber.\n\n        * expr.c (store_constructor): Use store of 0 to indicate value\n        death instead of a clobber.\n\n        * config/i386/i386.c (ix86_expand_reduc_v4sf): New.\n        * config/i386/i386-protos.h (ix86_expand_reduc_v4sf): Declare.\n        * config/i386/sse.md (reduc_plus_v4sf): New.\n        (reduc_smax_v4sf, reduc_smin_v4sf): New.\n\nFrom-SVN: r101169", "tree": {"sha": "dcddf82de060145d58d4f0b5d0d26c24cbcedd8b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dcddf82de060145d58d4f0b5d0d26c24cbcedd8b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2ab1754e1b62ca791c3953713e903750e687cb42", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ab1754e1b62ca791c3953713e903750e687cb42", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ab1754e1b62ca791c3953713e903750e687cb42", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ab1754e1b62ca791c3953713e903750e687cb42/comments", "author": null, "committer": null, "parents": [{"sha": "55d4549de80fcfc37d9c8cbafcbf3b8f1d3d82ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55d4549de80fcfc37d9c8cbafcbf3b8f1d3d82ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/55d4549de80fcfc37d9c8cbafcbf3b8f1d3d82ae"}], "stats": {"total": 70, "additions": 68, "deletions": 2}, "files": [{"sha": "67db590e5c9f1a07db70207c243deb728f54fc74", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ab1754e1b62ca791c3953713e903750e687cb42/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ab1754e1b62ca791c3953713e903750e687cb42/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2ab1754e1b62ca791c3953713e903750e687cb42", "patch": "@@ -1,3 +1,13 @@\n+2005-06-18  Richard Henderson  <rth@redhat.com>\n+\n+\t* expr.c (store_constructor): Use store of 0 to indicate value\n+\tdeath instead of a clobber.\n+\n+\t* config/i386/i386.c (ix86_expand_reduc_v4sf): New.\n+\t* config/i386/i386-protos.h (ix86_expand_reduc_v4sf): Declare.\n+\t* config/i386/sse.md (reduc_plus_v4sf): New.\n+\t(reduc_smax_v4sf, reduc_smin_v4sf): New.\n+\n 2005-06-18  James A. Morrison  <phython@gcc.gnu.org>\n \n \t* fold_const (fold_binary): Fold X % (2**N) to X & (2**N - 1) for"}, {"sha": "2dc0f4573d96c25523f6d3e3f2d90eaa73fbc516", "filename": "gcc/config/i386/i386-protos.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ab1754e1b62ca791c3953713e903750e687cb42/gcc%2Fconfig%2Fi386%2Fi386-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ab1754e1b62ca791c3953713e903750e687cb42/gcc%2Fconfig%2Fi386%2Fi386-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-protos.h?ref=2ab1754e1b62ca791c3953713e903750e687cb42", "patch": "@@ -230,6 +230,7 @@ extern rtx ix86_tls_get_addr (void);\n extern void ix86_expand_vector_init (bool, rtx, rtx);\n extern void ix86_expand_vector_set (bool, rtx, rtx, int);\n extern void ix86_expand_vector_extract (bool, rtx, rtx, int);\n+extern void ix86_expand_reduc_v4sf (rtx (*)(rtx, rtx, rtx), rtx, rtx);\n \n /* In winnt.c  */\n extern int i386_pe_dllexport_name_p (const char *);"}, {"sha": "6a5dbdfe5b6b9cf40ae3ad836350453f094d7f44", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ab1754e1b62ca791c3953713e903750e687cb42/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ab1754e1b62ca791c3953713e903750e687cb42/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=2ab1754e1b62ca791c3953713e903750e687cb42", "patch": "@@ -17366,6 +17366,27 @@ ix86_expand_vector_extract (bool mmx_ok, rtx target, rtx vec, int elt)\n       emit_move_insn (target, tmp);\n     }\n }\n+\n+/* Expand a vector reduction on V4SFmode for SSE1.  FN is the binar\n+   pattern to reduce; DEST is the destination; IN is the input vector.  */\n+\n+void\n+ix86_expand_reduc_v4sf (rtx (*fn) (rtx, rtx, rtx), rtx dest, rtx in)\n+{\n+  rtx tmp1, tmp2, tmp3;\n+\n+  tmp1 = gen_reg_rtx (V4SFmode);\n+  tmp2 = gen_reg_rtx (V4SFmode);\n+  tmp3 = gen_reg_rtx (V4SFmode);\n+\n+  emit_insn (gen_sse_movhlps (tmp1, in, in));\n+  emit_insn (fn (tmp2, tmp1, in));\n+\n+  emit_insn (gen_sse_shufps_1 (tmp3, tmp2, tmp2,\n+\t\t\t       GEN_INT (1), GEN_INT (1),\n+\t\t\t       GEN_INT (1+4), GEN_INT (1+4)));\n+  emit_insn (fn (dest, tmp2, tmp3));\n+}\n \f\n /* Implements target hook vector_mode_supported_p.  */\n static bool"}, {"sha": "e323937f592b49434f96d9defe12a975cfcb8310", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ab1754e1b62ca791c3953713e903750e687cb42/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ab1754e1b62ca791c3953713e903750e687cb42/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=2ab1754e1b62ca791c3953713e903750e687cb42", "patch": "@@ -653,6 +653,40 @@\n   [(set_attr \"type\" \"sseadd\")\n    (set_attr \"mode\" \"V4SF\")])\n \n+(define_expand \"reduc_plus_v4sf\"\n+  [(match_operand:V4SF 0 \"register_operand\" \"\")\n+   (match_operand:V4SF 1 \"register_operand\" \"\")]\n+  \"TARGET_SSE\"\n+{\n+  if (TARGET_SSE3)\n+    {\n+      rtx tmp = gen_reg_rtx (V4SFmode);\n+      emit_insn (gen_sse3_haddv4sf3 (tmp, operands[1], operands[1]));\n+      emit_insn (gen_sse3_haddv4sf3 (operands[0], tmp, tmp));\n+    }\n+  else\n+    ix86_expand_reduc_v4sf (gen_addv4sf3, operands[0], operands[1]);\n+  DONE;\n+})\n+\n+(define_expand \"reduc_smax_v4sf\"\n+  [(match_operand:V4SF 0 \"register_operand\" \"\")\n+   (match_operand:V4SF 1 \"register_operand\" \"\")]\n+  \"TARGET_SSE\"\n+{\n+  ix86_expand_reduc_v4sf (gen_smaxv4sf3, operands[0], operands[1]);\n+  DONE;\n+})\n+\n+(define_expand \"reduc_smin_v4sf\"\n+  [(match_operand:V4SF 0 \"register_operand\" \"\")\n+   (match_operand:V4SF 1 \"register_operand\" \"\")]\n+  \"TARGET_SSE\"\n+{\n+  ix86_expand_reduc_v4sf (gen_sminv4sf3, operands[0], operands[1]);\n+  DONE;\n+})\n+\n ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n ;;\n ;; Parallel single-precision floating point comparisons"}, {"sha": "0f9b1d2965c168c3b59928ec04a9a2df1b6812c3", "filename": "gcc/expr.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ab1754e1b62ca791c3953713e903750e687cb42/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ab1754e1b62ca791c3953713e903750e687cb42/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=2ab1754e1b62ca791c3953713e903750e687cb42", "patch": "@@ -5151,9 +5151,9 @@ store_constructor (tree exp, rtx target, int cleared, HOST_WIDE_INT size)\n \t    cleared = 1;\n \t  }\n \t\n+\t/* Inform later passes that the old value is dead.  */\n \tif (!cleared && REG_P (target))\n-\t  /* Inform later passes that the old value is dead.  */\n-\t  emit_insn (gen_rtx_CLOBBER (VOIDmode, target));\n+\t  emit_move_insn (target, CONST0_RTX (GET_MODE (target)));\n \n         /* Store each element of the constructor into the corresponding\n \t   element of TARGET, determined by counting the elements.  */"}]}