{"sha": "562ccc89f50fd7fa7b89ec07d2d3863172869e79", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTYyY2NjODlmNTBmZDdmYTdiODllYzA3ZDJkMzg2MzE3Mjg2OWU3OQ==", "commit": {"author": {"name": "Yannick Moy", "email": "moy@adacore.com", "date": "2020-07-17T07:47:44Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-10-20T07:21:37Z"}, "message": "[Ada] Fix comments as volatility properties can apply to objects\n\ngcc/ada/\n\n\t* sem_util.adb, sem_util.ads: Comment fix.", "tree": {"sha": "34699e0d4824e269257b9a26328fb492715481ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/34699e0d4824e269257b9a26328fb492715481ff"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/562ccc89f50fd7fa7b89ec07d2d3863172869e79", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/562ccc89f50fd7fa7b89ec07d2d3863172869e79", "html_url": "https://github.com/Rust-GCC/gccrs/commit/562ccc89f50fd7fa7b89ec07d2d3863172869e79", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/562ccc89f50fd7fa7b89ec07d2d3863172869e79/comments", "author": {"login": "yannickmoy", "id": 859440, "node_id": "MDQ6VXNlcjg1OTQ0MA==", "avatar_url": "https://avatars.githubusercontent.com/u/859440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yannickmoy", "html_url": "https://github.com/yannickmoy", "followers_url": "https://api.github.com/users/yannickmoy/followers", "following_url": "https://api.github.com/users/yannickmoy/following{/other_user}", "gists_url": "https://api.github.com/users/yannickmoy/gists{/gist_id}", "starred_url": "https://api.github.com/users/yannickmoy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yannickmoy/subscriptions", "organizations_url": "https://api.github.com/users/yannickmoy/orgs", "repos_url": "https://api.github.com/users/yannickmoy/repos", "events_url": "https://api.github.com/users/yannickmoy/events{/privacy}", "received_events_url": "https://api.github.com/users/yannickmoy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8281a07f0cd02f96690b7c96a4768c68c44917a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8281a07f0cd02f96690b7c96a4768c68c44917a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8281a07f0cd02f96690b7c96a4768c68c44917a2"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "f85dfd78a0ea147bd190d6a446e9b93bdc10142c", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/562ccc89f50fd7fa7b89ec07d2d3863172869e79/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/562ccc89f50fd7fa7b89ec07d2d3863172869e79/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=562ccc89f50fd7fa7b89ec07d2d3863172869e79", "patch": "@@ -116,7 +116,7 @@ package body Sem_Util is\n      (Item_Id  : Entity_Id;\n       Property : Name_Id) return Boolean;\n    --  Subsidiary to routines Async_xxx_Enabled and Effective_xxx_Enabled.\n-   --  Determine whether the state abstraction, variable, or type denoted by\n+   --  Determine whether the state abstraction, object, or type denoted by\n    --  entity Item_Id has enabled property Property.\n \n    function Has_Null_Extension (T : Entity_Id) return Boolean;"}, {"sha": "73c7d2b78437d483d745b165b96f86efb64cd456", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/562ccc89f50fd7fa7b89ec07d2d3863172869e79/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/562ccc89f50fd7fa7b89ec07d2d3863172869e79/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=562ccc89f50fd7fa7b89ec07d2d3863172869e79", "patch": "@@ -157,11 +157,11 @@ package Sem_Util is\n    --  force an error).\n \n    function Async_Readers_Enabled (Id : Entity_Id) return Boolean;\n-   --  Id should be the entity of a state abstraction, a variable, or a type.\n+   --  Id should be the entity of a state abstraction, an object, or a type.\n    --  Returns True iff Id is subject to external property Async_Readers.\n \n    function Async_Writers_Enabled (Id : Entity_Id) return Boolean;\n-   --  Id should be the entity of a state abstraction, a variable, or a type.\n+   --  Id should be the entity of a state abstraction, an object, or a type.\n    --  Returns True iff Id is subject to external property Async_Writers.\n \n    function Available_Full_View_Of_Component (T : Entity_Id) return Boolean;\n@@ -676,11 +676,11 @@ package Sem_Util is\n    --  are looked through.\n \n    function Effective_Reads_Enabled (Id : Entity_Id) return Boolean;\n-   --  Id should be the entity of a state abstraction, a variable, or a type.\n+   --  Id should be the entity of a state abstraction, an object, or a type.\n    --  Returns True iff Id is subject to external property Effective_Reads.\n \n    function Effective_Writes_Enabled (Id : Entity_Id) return Boolean;\n-   --  Id should be the entity of a state abstraction, a variable, or a type.\n+   --  Id should be the entity of a state abstraction, an object, or a type.\n    --  Returns True iff Id is subject to external property Effective_Writes.\n \n    function Enclosing_Comp_Unit_Node (N : Node_Id) return Node_Id;"}]}