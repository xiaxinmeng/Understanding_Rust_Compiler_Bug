{"sha": "32128577aed11aa21f3227edc2276da677e97636", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzIxMjg1NzdhZWQxMWFhMjFmMzIyN2VkYzIyNzZkYTY3N2U5NzYzNg==", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2019-12-18T17:00:51Z"}, "committer": {"name": "Thomas Schwinge", "email": "tschwinge@gcc.gnu.org", "date": "2019-12-18T17:00:51Z"}, "message": "[OpenACC] Elaborate/simplify 'exit data' 'finalize' handling\n\nNo functional changes.\n\n\tgcc/\n\t* gimplify.c (gimplify_omp_target_update): Elaborate 'exit data'\n\t'finalize' handling.\n\tgcc/testsuite/\n\t* c-c++-common/goacc/finalize-1.c: Extend.\n\t* gfortran.dg/goacc/finalize-1.f: Likewise.\n\tlibgomp/\n\t* oacc-mem.c (GOACC_enter_exit_data): Simplify 'exit data'\n\t'finalize' handling.\n\nFrom-SVN: r279531", "tree": {"sha": "4167e621c9f26c18650ef4ede579205bde00e0cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4167e621c9f26c18650ef4ede579205bde00e0cf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/32128577aed11aa21f3227edc2276da677e97636", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32128577aed11aa21f3227edc2276da677e97636", "html_url": "https://github.com/Rust-GCC/gccrs/commit/32128577aed11aa21f3227edc2276da677e97636", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32128577aed11aa21f3227edc2276da677e97636/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ba40277f6ac96ceb982120ce95d2b64695a25dff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba40277f6ac96ceb982120ce95d2b64695a25dff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba40277f6ac96ceb982120ce95d2b64695a25dff"}], "stats": {"total": 71, "additions": 49, "deletions": 22}, "files": [{"sha": "be8dfa3fecfe8403ef7385d9c75d8d9bc6e57878", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32128577aed11aa21f3227edc2276da677e97636/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32128577aed11aa21f3227edc2276da677e97636/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=32128577aed11aa21f3227edc2276da677e97636", "patch": "@@ -1,3 +1,8 @@\n+2019-12-18  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\t* gimplify.c (gimplify_omp_target_update): Elaborate 'exit data'\n+\t'finalize' handling.\n+\n 2019-12-18  Tobias Burnus  <tobias@codesourcery.com>\n \n \tPR middle-end/86416"}, {"sha": "60a80cb8098a3538fa6f7971addc3c9ffb8d0c77", "filename": "gcc/gimplify.c", "status": "modified", "additions": 13, "deletions": 10, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32128577aed11aa21f3227edc2276da677e97636/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32128577aed11aa21f3227edc2276da677e97636/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=32128577aed11aa21f3227edc2276da677e97636", "patch": "@@ -12738,27 +12738,30 @@ gimplify_omp_target_update (tree *expr_p, gimple_seq *pre_p)\n \t   && omp_find_clause (OMP_STANDALONE_CLAUSES (expr),\n \t\t\t       OMP_CLAUSE_FINALIZE))\n     {\n-      /* Use GOMP_MAP_DELETE/GOMP_MAP_FORCE_FROM to denote that \"finalize\"\n-\t semantics apply to all mappings of this OpenACC directive.  */\n-      bool finalize_marked = false;\n+      /* Use GOMP_MAP_DELETE/GOMP_MAP_FORCE_FROM to denote \"finalize\"\n+\t semantics.  */\n+      bool have_clause = false;\n       for (tree c = OMP_STANDALONE_CLAUSES (expr); c; c = OMP_CLAUSE_CHAIN (c))\n \tif (OMP_CLAUSE_CODE (c) == OMP_CLAUSE_MAP)\n \t  switch (OMP_CLAUSE_MAP_KIND (c))\n \t    {\n \t    case GOMP_MAP_FROM:\n \t      OMP_CLAUSE_SET_MAP_KIND (c, GOMP_MAP_FORCE_FROM);\n-\t      finalize_marked = true;\n+\t      have_clause = true;\n \t      break;\n \t    case GOMP_MAP_RELEASE:\n \t      OMP_CLAUSE_SET_MAP_KIND (c, GOMP_MAP_DELETE);\n-\t      finalize_marked = true;\n+\t      have_clause = true;\n \t      break;\n-\t    default:\n-\t      /* Check consistency: libgomp relies on the very first data\n-\t\t mapping clause being marked, so make sure we did that before\n-\t\t any other mapping clauses.  */\n-\t      gcc_assert (finalize_marked);\n+\t    case GOMP_MAP_POINTER:\n+\t    case GOMP_MAP_TO_PSET:\n+\t      /* TODO PR92929: we may see these here, but they'll always follow\n+\t\t one of the clauses above, and will be handled by libgomp as\n+\t\t one group, so no handling required here.  */\n+\t      gcc_assert (have_clause);\n \t      break;\n+\t    default:\n+\t      gcc_unreachable ();\n \t    }\n     }\n   stmt = gimple_build_omp_target (NULL, kind, OMP_STANDALONE_CLAUSES (expr));"}, {"sha": "f1bf3452243eeba76e05a3e2a425b7819a2d80d0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32128577aed11aa21f3227edc2276da677e97636/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32128577aed11aa21f3227edc2276da677e97636/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=32128577aed11aa21f3227edc2276da677e97636", "patch": "@@ -1,3 +1,8 @@\n+2019-12-18  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\t* c-c++-common/goacc/finalize-1.c: Extend.\n+\t* gfortran.dg/goacc/finalize-1.f: Likewise.\n+\n 2019-12-18  Harald Anlauf  <anlauf@gmx.de>\n \n \tPR fortran/70853"}, {"sha": "3d64b2e7cb32f75cc5c0077d35902d1edd8be0c6", "filename": "gcc/testsuite/c-c++-common/goacc/finalize-1.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32128577aed11aa21f3227edc2276da677e97636/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Ffinalize-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32128577aed11aa21f3227edc2276da677e97636/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Ffinalize-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Ffinalize-1.c?ref=32128577aed11aa21f3227edc2276da677e97636", "patch": "@@ -4,8 +4,10 @@\n \n extern int del_r;\n extern float del_f[3];\n+extern char *del_f_p;\n extern double cpo_r[8];\n extern long cpo_f;\n+extern char *cpo_f_p;\n \n void f ()\n {\n@@ -17,12 +19,19 @@ void f ()\n /* { dg-final { scan-tree-dump-times \"(?n)#pragma acc exit data map\\\\(release:del_f\\\\) finalize;$\" 1 \"original\" } }\n    { dg-final { scan-tree-dump-times \"(?n)#pragma omp target oacc_enter_exit_data map\\\\(delete:del_f \\\\\\[len: \\[0-9\\]+\\\\\\]\\\\) finalize$\" 1 \"gimple\" } } */\n \n+#pragma acc exit data finalize delete (del_f_p[2:5])\n+/* { dg-final { scan-tree-dump-times \"(?n)#pragma acc exit data map\\\\(release:\\\\*\\\\(del_f_p \\\\+ 2\\\\) \\\\\\[len: 5\\\\\\]\\\\) map\\\\(firstprivate:del_f_p \\\\\\[pointer assign, bias: 2\\\\\\]\\\\) finalize;$\" 1 \"original\" } }\n+   { dg-final { scan-tree-dump-times \"(?n)#pragma omp target oacc_enter_exit_data map\\\\(delete:\\[^ \\]+ \\\\\\[len: 5\\\\\\]\\\\) finalize$\" 1 \"gimple\" } } */\n+\n #pragma acc exit data copyout (cpo_r)\n /* { dg-final { scan-tree-dump-times \"(?n)#pragma acc exit data map\\\\(from:cpo_r\\\\);$\" 1 \"original\" } }\n    { dg-final { scan-tree-dump-times \"(?n)#pragma omp target oacc_enter_exit_data map\\\\(from:cpo_r \\\\\\[len: \\[0-9\\]+\\\\\\]\\\\)$\" 1 \"gimple\" } } */\n \n #pragma acc exit data copyout (cpo_f) finalize\n /* { dg-final { scan-tree-dump-times \"(?n)#pragma acc exit data finalize map\\\\(from:cpo_f\\\\);$\" 1 \"original\" } }\n    { dg-final { scan-tree-dump-times \"(?n)#pragma omp target oacc_enter_exit_data finalize map\\\\(force_from:cpo_f \\\\\\[len: \\[0-9\\]+\\\\\\]\\\\)$\" 1 \"gimple\" } } */\n-}\n \n+#pragma acc exit data copyout (cpo_f_p[4:10]) finalize\n+/* { dg-final { scan-tree-dump-times \"(?n)#pragma acc exit data finalize map\\\\(from:\\\\*\\\\(cpo_f_p \\\\+ 4\\\\) \\\\\\[len: 10\\\\\\]\\\\) map\\\\(firstprivate:cpo_f_p \\\\\\[pointer assign, bias: 4\\\\\\]\\\\);$\" 1 \"original\" } }\n+   { dg-final { scan-tree-dump-times \"(?n)#pragma omp target oacc_enter_exit_data finalize map\\\\(force_from:\\[^ \\]+ \\\\\\[len: 10\\\\\\]\\\\)$\" 1 \"gimple\" } } */\n+}"}, {"sha": "ca642156e9fdef6b8e78bdd61d9a8807bb0dcfa0", "filename": "gcc/testsuite/gfortran.dg/goacc/finalize-1.f", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32128577aed11aa21f3227edc2276da677e97636/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Ffinalize-1.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32128577aed11aa21f3227edc2276da677e97636/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Ffinalize-1.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Ffinalize-1.f?ref=32128577aed11aa21f3227edc2276da677e97636", "patch": "@@ -6,8 +6,10 @@ SUBROUTINE f\n       IMPLICIT NONE\n       INTEGER :: del_r\n       REAL, DIMENSION (3) :: del_f\n+      INTEGER (1), DIMENSION (:), ALLOCATABLE :: del_f_p\n       DOUBLE PRECISION, DIMENSION (8) :: cpo_r\n       LOGICAL :: cpo_f\n+      INTEGER (1), DIMENSION (:), ALLOCATABLE :: cpo_f_p\n \n !$ACC EXIT DATA DELETE (del_r)\n ! { dg-final { scan-tree-dump-times \"(?n)#pragma acc exit data map\\\\(release:del_r\\\\);$\" 1 \"original\" } }\n@@ -17,11 +19,19 @@ SUBROUTINE f\n ! { dg-final { scan-tree-dump-times \"(?n)#pragma acc exit data map\\\\(release:del_f\\\\) finalize;$\" 1 \"original\" } }\n ! { dg-final { scan-tree-dump-times \"(?n)#pragma omp target oacc_enter_exit_data map\\\\(delete:del_f \\\\\\[len: \\[0-9\\]+\\\\\\]\\\\) finalize$\" 1 \"gimple\" } }\n \n+!$ACC EXIT DATA FINALIZE DELETE (del_f_p(2:5))\n+! { dg-final { scan-tree-dump-times \"(?n)#pragma acc exit data map\\\\(release:\\\\*\\\\(c_char \\\\*\\\\) parm\\\\.0\\\\.data \\\\\\[len: \\[^\\\\\\]\\]+\\\\\\]\\\\) map\\\\(to:del_f_p \\\\\\[pointer set, len: \\[0-9\\]+\\\\\\]\\\\) map\\\\(alloc:\\\\(integer\\\\(kind=1\\\\)\\\\\\[0:\\\\\\] \\\\* restrict\\\\) del_f_p\\\\.data \\\\\\[pointer assign, bias: \\\\(sizetype\\\\) parm\\\\.0\\\\.data - \\\\(sizetype\\\\) del_f_p\\\\.data\\\\\\]\\\\) finalize;$\" 1 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"(?n)#pragma omp target oacc_enter_exit_data map\\\\(delete:MEM\\\\\\[\\\\(c_char \\\\*\\\\)\\[^\\\\\\]\\]+\\\\\\] \\\\\\[len: \\[^\\\\\\]\\]+\\\\\\]\\\\) map\\\\(to:del_f_p \\\\\\[pointer set, len: \\[0-9\\]+\\\\\\]\\\\) map\\\\(alloc:del_f_p\\\\.data \\\\\\[pointer assign, bias: \\[^\\\\\\]\\]+\\\\\\]\\\\) finalize$\" 1 \"gimple\" } }\n+\n !$ACC EXIT DATA COPYOUT (cpo_r)\n ! { dg-final { scan-tree-dump-times \"(?n)#pragma acc exit data map\\\\(from:cpo_r\\\\);$\" 1 \"original\" } }\n ! { dg-final { scan-tree-dump-times \"(?n)#pragma omp target oacc_enter_exit_data map\\\\(from:cpo_r \\\\\\[len: \\[0-9\\]+\\\\\\]\\\\)$\" 1 \"gimple\" } }\n \n !$ACC EXIT DATA COPYOUT (cpo_f) FINALIZE\n ! { dg-final { scan-tree-dump-times \"(?n)#pragma acc exit data map\\\\(from:cpo_f\\\\) finalize;$\" 1 \"original\" } }\n ! { dg-final { scan-tree-dump-times \"(?n)#pragma omp target oacc_enter_exit_data map\\\\(force_from:cpo_f \\\\\\[len: \\[0-9\\]+\\\\\\]\\\\) finalize$\" 1 \"gimple\" } }\n+\n+!$ACC EXIT DATA COPYOUT (cpo_f_p(4:10)) FINALIZE\n+! { dg-final { scan-tree-dump-times \"(?n)#pragma acc exit data map\\\\(from:\\\\*\\\\(c_char \\\\*\\\\) parm\\\\.1\\\\.data \\\\\\[len: \\[^\\\\\\]\\]+\\\\\\]\\\\) map\\\\(to:cpo_f_p \\\\\\[pointer set, len: \\[0-9\\]+\\\\\\]\\\\) map\\\\(alloc:\\\\(integer\\\\(kind=1\\\\)\\\\\\[0:\\\\\\] \\\\* restrict\\\\) cpo_f_p\\\\.data \\\\\\[pointer assign, bias: \\\\(sizetype\\\\) parm\\\\.1\\\\.data - \\\\(sizetype\\\\) cpo_f_p\\\\.data\\\\\\]\\\\) finalize;$\" 1 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"(?n)#pragma omp target oacc_enter_exit_data map\\\\(force_from:MEM\\\\\\[\\\\(c_char \\\\*\\\\)\\[^\\\\\\]\\]+\\\\\\] \\\\\\[len: \\[^\\\\\\]\\]+\\\\\\]\\\\) map\\\\(to:cpo_f_p \\\\\\[pointer set, len: \\[0-9\\]+\\\\\\]\\\\) map\\\\(alloc:cpo_f_p\\\\.data \\\\\\[pointer assign, bias: \\[^\\\\\\]\\]+\\\\\\]\\\\) finalize$\" 1 \"gimple\" } }\n       END SUBROUTINE f"}, {"sha": "c4283fdfe1d50ebc1d5402211c7f4f9dafe0f172", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32128577aed11aa21f3227edc2276da677e97636/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32128577aed11aa21f3227edc2276da677e97636/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=32128577aed11aa21f3227edc2276da677e97636", "patch": "@@ -1,5 +1,8 @@\n 2019-12-18  Thomas Schwinge  <thomas@codesourcery.com>\n \n+\t* oacc-mem.c (GOACC_enter_exit_data): Simplify 'exit data'\n+\t'finalize' handling.\n+\n \tPR libgomp/92848\n \t* oacc-mem.c (acc_map_data, present_create_copy)\n \t(goacc_insert_pointer): Use 'GOMP_MAP_VARS_ENTER_DATA'."}, {"sha": "b21d83c37d84edc8b0dd6955fbfba2b47791381b", "filename": "libgomp/oacc-mem.c", "status": "modified", "additions": 3, "deletions": 11, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32128577aed11aa21f3227edc2276da677e97636/libgomp%2Foacc-mem.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32128577aed11aa21f3227edc2276da677e97636/libgomp%2Foacc-mem.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Foacc-mem.c?ref=32128577aed11aa21f3227edc2276da677e97636", "patch": "@@ -1061,17 +1061,6 @@ GOACC_enter_exit_data (int flags_m, size_t mapnum, void **hostaddrs,\n   thr = goacc_thread ();\n   acc_dev = thr->dev;\n \n-  /* Determine whether \"finalize\" semantics apply to all mappings of this\n-     OpenACC directive.  */\n-  bool finalize = false;\n-  if (mapnum > 0)\n-    {\n-      unsigned char kind = kinds[0] & 0xff;\n-      if (kind == GOMP_MAP_DELETE\n-\t  || kind == GOMP_MAP_FORCE_FROM)\n-\tfinalize = true;\n-    }\n-\n   /* Determine if this is an \"acc enter data\".  */\n   for (i = 0; i < mapnum; ++i)\n     {\n@@ -1224,6 +1213,9 @@ GOACC_enter_exit_data (int flags_m, size_t mapnum, void **hostaddrs,\n       {\n \tunsigned char kind = kinds[i] & 0xff;\n \n+\tbool finalize = (kind == GOMP_MAP_DELETE\n+\t\t\t || kind == GOMP_MAP_FORCE_FROM);\n+\n \tint pointer = find_pointer (i, mapnum, kinds);\n \n \tif (!pointer)"}]}