{"sha": "64acfd9910111c7d754802a3b9c92ee82e441113", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjRhY2ZkOTkxMDExMWM3ZDc1NDgwMmEzYjljOTJlZTgyZTQ0MTExMw==", "commit": {"author": {"name": "Janne Blomqvist", "email": "jb@gcc.gnu.org", "date": "2005-11-27T21:03:33Z"}, "committer": {"name": "Janne Blomqvist", "email": "jb@gcc.gnu.org", "date": "2005-11-27T21:03:33Z"}, "message": "libgfortran ChangeLog:\n\n2005-11-27  Janne Blomqvist  <jb@gcc.gnu.org>\n\n\t* m4/*: Add const restrict to function arguments.\n\t* generated/*.c: Regenerate.\n\nFrom-SVN: r107573", "tree": {"sha": "b1791f0354ad0366d696ec9df523d82d3bd9fe26", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b1791f0354ad0366d696ec9df523d82d3bd9fe26"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/64acfd9910111c7d754802a3b9c92ee82e441113", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64acfd9910111c7d754802a3b9c92ee82e441113", "html_url": "https://github.com/Rust-GCC/gccrs/commit/64acfd9910111c7d754802a3b9c92ee82e441113", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64acfd9910111c7d754802a3b9c92ee82e441113/comments", "author": null, "committer": null, "parents": [{"sha": "949446f55711f5fa957caa6a8a1df7bd6b185471", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/949446f55711f5fa957caa6a8a1df7bd6b185471", "html_url": "https://github.com/Rust-GCC/gccrs/commit/949446f55711f5fa957caa6a8a1df7bd6b185471"}], "stats": {"total": 4572, "additions": 2734, "deletions": 1838}, "files": [{"sha": "78df909369b547dfd2bdcb3a714c66290633c639", "filename": "libgfortran/generated/all_l16.c", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fall_l16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fall_l16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fall_l16.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -37,18 +37,21 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_LOGICAL_16) && defined (HAVE_GFC_LOGICAL_16)\n \n \n-extern void all_l16 (gfc_array_l16 *, gfc_array_l16 *, index_type *);\n+extern void all_l16 (gfc_array_l16 * const restrict, \n+\tgfc_array_l16 * const restrict, const index_type * const restrict);\n export_proto(all_l16);\n \n void\n-all_l16 (gfc_array_l16 *retarray, gfc_array_l16 *array, index_type *pdim)\n+all_l16 (gfc_array_l16 * const restrict retarray, \n+\tgfc_array_l16 * const restrict array, \n+\tconst index_type * const restrict pdim)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n-  GFC_LOGICAL_16 *base;\n-  GFC_LOGICAL_16 *dest;\n+  const GFC_LOGICAL_16 * restrict base;\n+  GFC_LOGICAL_16 * restrict dest;\n   index_type rank;\n   index_type n;\n   index_type len;\n@@ -120,7 +123,7 @@ all_l16 (gfc_array_l16 *retarray, gfc_array_l16 *array, index_type *pdim)\n \n   while (base)\n     {\n-      GFC_LOGICAL_16 *src;\n+      const GFC_LOGICAL_16 * restrict src;\n       GFC_LOGICAL_16 result;\n       src = base;\n       {"}, {"sha": "0a6f44de38142d55e6360c901893d2098e02f65a", "filename": "libgfortran/generated/all_l4.c", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fall_l4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fall_l4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fall_l4.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -37,18 +37,21 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_LOGICAL_4) && defined (HAVE_GFC_LOGICAL_4)\n \n \n-extern void all_l4 (gfc_array_l4 *, gfc_array_l4 *, index_type *);\n+extern void all_l4 (gfc_array_l4 * const restrict, \n+\tgfc_array_l4 * const restrict, const index_type * const restrict);\n export_proto(all_l4);\n \n void\n-all_l4 (gfc_array_l4 *retarray, gfc_array_l4 *array, index_type *pdim)\n+all_l4 (gfc_array_l4 * const restrict retarray, \n+\tgfc_array_l4 * const restrict array, \n+\tconst index_type * const restrict pdim)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n-  GFC_LOGICAL_4 *base;\n-  GFC_LOGICAL_4 *dest;\n+  const GFC_LOGICAL_4 * restrict base;\n+  GFC_LOGICAL_4 * restrict dest;\n   index_type rank;\n   index_type n;\n   index_type len;\n@@ -120,7 +123,7 @@ all_l4 (gfc_array_l4 *retarray, gfc_array_l4 *array, index_type *pdim)\n \n   while (base)\n     {\n-      GFC_LOGICAL_4 *src;\n+      const GFC_LOGICAL_4 * restrict src;\n       GFC_LOGICAL_4 result;\n       src = base;\n       {"}, {"sha": "74a3731c5eee80cfc5ea3d14c9e2f19951e793ef", "filename": "libgfortran/generated/all_l8.c", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fall_l8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fall_l8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fall_l8.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -37,18 +37,21 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_LOGICAL_8) && defined (HAVE_GFC_LOGICAL_8)\n \n \n-extern void all_l8 (gfc_array_l8 *, gfc_array_l8 *, index_type *);\n+extern void all_l8 (gfc_array_l8 * const restrict, \n+\tgfc_array_l8 * const restrict, const index_type * const restrict);\n export_proto(all_l8);\n \n void\n-all_l8 (gfc_array_l8 *retarray, gfc_array_l8 *array, index_type *pdim)\n+all_l8 (gfc_array_l8 * const restrict retarray, \n+\tgfc_array_l8 * const restrict array, \n+\tconst index_type * const restrict pdim)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n-  GFC_LOGICAL_8 *base;\n-  GFC_LOGICAL_8 *dest;\n+  const GFC_LOGICAL_8 * restrict base;\n+  GFC_LOGICAL_8 * restrict dest;\n   index_type rank;\n   index_type n;\n   index_type len;\n@@ -120,7 +123,7 @@ all_l8 (gfc_array_l8 *retarray, gfc_array_l8 *array, index_type *pdim)\n \n   while (base)\n     {\n-      GFC_LOGICAL_8 *src;\n+      const GFC_LOGICAL_8 * restrict src;\n       GFC_LOGICAL_8 result;\n       src = base;\n       {"}, {"sha": "114688084591a25dbfe0889403e81d78d0fa2254", "filename": "libgfortran/generated/any_l16.c", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fany_l16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fany_l16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fany_l16.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -37,18 +37,21 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_LOGICAL_16) && defined (HAVE_GFC_LOGICAL_16)\n \n \n-extern void any_l16 (gfc_array_l16 *, gfc_array_l16 *, index_type *);\n+extern void any_l16 (gfc_array_l16 * const restrict, \n+\tgfc_array_l16 * const restrict, const index_type * const restrict);\n export_proto(any_l16);\n \n void\n-any_l16 (gfc_array_l16 *retarray, gfc_array_l16 *array, index_type *pdim)\n+any_l16 (gfc_array_l16 * const restrict retarray, \n+\tgfc_array_l16 * const restrict array, \n+\tconst index_type * const restrict pdim)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n-  GFC_LOGICAL_16 *base;\n-  GFC_LOGICAL_16 *dest;\n+  const GFC_LOGICAL_16 * restrict base;\n+  GFC_LOGICAL_16 * restrict dest;\n   index_type rank;\n   index_type n;\n   index_type len;\n@@ -120,7 +123,7 @@ any_l16 (gfc_array_l16 *retarray, gfc_array_l16 *array, index_type *pdim)\n \n   while (base)\n     {\n-      GFC_LOGICAL_16 *src;\n+      const GFC_LOGICAL_16 * restrict src;\n       GFC_LOGICAL_16 result;\n       src = base;\n       {"}, {"sha": "4a650f019a8621988f335b820d6d330ed300d43f", "filename": "libgfortran/generated/any_l4.c", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fany_l4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fany_l4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fany_l4.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -37,18 +37,21 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_LOGICAL_4) && defined (HAVE_GFC_LOGICAL_4)\n \n \n-extern void any_l4 (gfc_array_l4 *, gfc_array_l4 *, index_type *);\n+extern void any_l4 (gfc_array_l4 * const restrict, \n+\tgfc_array_l4 * const restrict, const index_type * const restrict);\n export_proto(any_l4);\n \n void\n-any_l4 (gfc_array_l4 *retarray, gfc_array_l4 *array, index_type *pdim)\n+any_l4 (gfc_array_l4 * const restrict retarray, \n+\tgfc_array_l4 * const restrict array, \n+\tconst index_type * const restrict pdim)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n-  GFC_LOGICAL_4 *base;\n-  GFC_LOGICAL_4 *dest;\n+  const GFC_LOGICAL_4 * restrict base;\n+  GFC_LOGICAL_4 * restrict dest;\n   index_type rank;\n   index_type n;\n   index_type len;\n@@ -120,7 +123,7 @@ any_l4 (gfc_array_l4 *retarray, gfc_array_l4 *array, index_type *pdim)\n \n   while (base)\n     {\n-      GFC_LOGICAL_4 *src;\n+      const GFC_LOGICAL_4 * restrict src;\n       GFC_LOGICAL_4 result;\n       src = base;\n       {"}, {"sha": "ed45e790db21be1fa2a6d8157c7af2bf39dbf7ce", "filename": "libgfortran/generated/any_l8.c", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fany_l8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fany_l8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fany_l8.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -37,18 +37,21 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_LOGICAL_8) && defined (HAVE_GFC_LOGICAL_8)\n \n \n-extern void any_l8 (gfc_array_l8 *, gfc_array_l8 *, index_type *);\n+extern void any_l8 (gfc_array_l8 * const restrict, \n+\tgfc_array_l8 * const restrict, const index_type * const restrict);\n export_proto(any_l8);\n \n void\n-any_l8 (gfc_array_l8 *retarray, gfc_array_l8 *array, index_type *pdim)\n+any_l8 (gfc_array_l8 * const restrict retarray, \n+\tgfc_array_l8 * const restrict array, \n+\tconst index_type * const restrict pdim)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n-  GFC_LOGICAL_8 *base;\n-  GFC_LOGICAL_8 *dest;\n+  const GFC_LOGICAL_8 * restrict base;\n+  GFC_LOGICAL_8 * restrict dest;\n   index_type rank;\n   index_type n;\n   index_type len;\n@@ -120,7 +123,7 @@ any_l8 (gfc_array_l8 *retarray, gfc_array_l8 *array, index_type *pdim)\n \n   while (base)\n     {\n-      GFC_LOGICAL_8 *src;\n+      const GFC_LOGICAL_8 * restrict src;\n       GFC_LOGICAL_8 result;\n       src = base;\n       {"}, {"sha": "5d27d652213f50f10c579d8067585e736feba61d", "filename": "libgfortran/generated/count_16_l16.c", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fcount_16_l16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fcount_16_l16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fcount_16_l16.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -37,18 +37,21 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_LOGICAL_16) && defined (HAVE_GFC_INTEGER_16)\n \n \n-extern void count_16_l16 (gfc_array_i16 *, gfc_array_l16 *, index_type *);\n+extern void count_16_l16 (gfc_array_i16 * const restrict, \n+\tgfc_array_l16 * const restrict, const index_type * const restrict);\n export_proto(count_16_l16);\n \n void\n-count_16_l16 (gfc_array_i16 *retarray, gfc_array_l16 *array, index_type *pdim)\n+count_16_l16 (gfc_array_i16 * const restrict retarray, \n+\tgfc_array_l16 * const restrict array, \n+\tconst index_type * const restrict pdim)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n-  GFC_LOGICAL_16 *base;\n-  GFC_INTEGER_16 *dest;\n+  const GFC_LOGICAL_16 * restrict base;\n+  GFC_INTEGER_16 * restrict dest;\n   index_type rank;\n   index_type n;\n   index_type len;\n@@ -120,7 +123,7 @@ count_16_l16 (gfc_array_i16 *retarray, gfc_array_l16 *array, index_type *pdim)\n \n   while (base)\n     {\n-      GFC_LOGICAL_16 *src;\n+      const GFC_LOGICAL_16 * restrict src;\n       GFC_INTEGER_16 result;\n       src = base;\n       {"}, {"sha": "b491e90e0445d9632eed16501839e116de8621cd", "filename": "libgfortran/generated/count_16_l4.c", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fcount_16_l4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fcount_16_l4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fcount_16_l4.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -37,18 +37,21 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_LOGICAL_4) && defined (HAVE_GFC_INTEGER_16)\n \n \n-extern void count_16_l4 (gfc_array_i16 *, gfc_array_l4 *, index_type *);\n+extern void count_16_l4 (gfc_array_i16 * const restrict, \n+\tgfc_array_l4 * const restrict, const index_type * const restrict);\n export_proto(count_16_l4);\n \n void\n-count_16_l4 (gfc_array_i16 *retarray, gfc_array_l4 *array, index_type *pdim)\n+count_16_l4 (gfc_array_i16 * const restrict retarray, \n+\tgfc_array_l4 * const restrict array, \n+\tconst index_type * const restrict pdim)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n-  GFC_LOGICAL_4 *base;\n-  GFC_INTEGER_16 *dest;\n+  const GFC_LOGICAL_4 * restrict base;\n+  GFC_INTEGER_16 * restrict dest;\n   index_type rank;\n   index_type n;\n   index_type len;\n@@ -120,7 +123,7 @@ count_16_l4 (gfc_array_i16 *retarray, gfc_array_l4 *array, index_type *pdim)\n \n   while (base)\n     {\n-      GFC_LOGICAL_4 *src;\n+      const GFC_LOGICAL_4 * restrict src;\n       GFC_INTEGER_16 result;\n       src = base;\n       {"}, {"sha": "03ff91f32dd6234bc1ad1d2e96dad0f7e271f3a1", "filename": "libgfortran/generated/count_16_l8.c", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fcount_16_l8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fcount_16_l8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fcount_16_l8.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -37,18 +37,21 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_LOGICAL_8) && defined (HAVE_GFC_INTEGER_16)\n \n \n-extern void count_16_l8 (gfc_array_i16 *, gfc_array_l8 *, index_type *);\n+extern void count_16_l8 (gfc_array_i16 * const restrict, \n+\tgfc_array_l8 * const restrict, const index_type * const restrict);\n export_proto(count_16_l8);\n \n void\n-count_16_l8 (gfc_array_i16 *retarray, gfc_array_l8 *array, index_type *pdim)\n+count_16_l8 (gfc_array_i16 * const restrict retarray, \n+\tgfc_array_l8 * const restrict array, \n+\tconst index_type * const restrict pdim)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n-  GFC_LOGICAL_8 *base;\n-  GFC_INTEGER_16 *dest;\n+  const GFC_LOGICAL_8 * restrict base;\n+  GFC_INTEGER_16 * restrict dest;\n   index_type rank;\n   index_type n;\n   index_type len;\n@@ -120,7 +123,7 @@ count_16_l8 (gfc_array_i16 *retarray, gfc_array_l8 *array, index_type *pdim)\n \n   while (base)\n     {\n-      GFC_LOGICAL_8 *src;\n+      const GFC_LOGICAL_8 * restrict src;\n       GFC_INTEGER_16 result;\n       src = base;\n       {"}, {"sha": "bad5d5e8a8e874e7fa6450ecd85d42a66461e551", "filename": "libgfortran/generated/count_4_l16.c", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fcount_4_l16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fcount_4_l16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fcount_4_l16.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -37,18 +37,21 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_LOGICAL_16) && defined (HAVE_GFC_INTEGER_4)\n \n \n-extern void count_4_l16 (gfc_array_i4 *, gfc_array_l16 *, index_type *);\n+extern void count_4_l16 (gfc_array_i4 * const restrict, \n+\tgfc_array_l16 * const restrict, const index_type * const restrict);\n export_proto(count_4_l16);\n \n void\n-count_4_l16 (gfc_array_i4 *retarray, gfc_array_l16 *array, index_type *pdim)\n+count_4_l16 (gfc_array_i4 * const restrict retarray, \n+\tgfc_array_l16 * const restrict array, \n+\tconst index_type * const restrict pdim)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n-  GFC_LOGICAL_16 *base;\n-  GFC_INTEGER_4 *dest;\n+  const GFC_LOGICAL_16 * restrict base;\n+  GFC_INTEGER_4 * restrict dest;\n   index_type rank;\n   index_type n;\n   index_type len;\n@@ -120,7 +123,7 @@ count_4_l16 (gfc_array_i4 *retarray, gfc_array_l16 *array, index_type *pdim)\n \n   while (base)\n     {\n-      GFC_LOGICAL_16 *src;\n+      const GFC_LOGICAL_16 * restrict src;\n       GFC_INTEGER_4 result;\n       src = base;\n       {"}, {"sha": "440a549b9541687412ad9ea6f3e8c042505240c4", "filename": "libgfortran/generated/count_4_l4.c", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fcount_4_l4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fcount_4_l4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fcount_4_l4.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -37,18 +37,21 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_LOGICAL_4) && defined (HAVE_GFC_INTEGER_4)\n \n \n-extern void count_4_l4 (gfc_array_i4 *, gfc_array_l4 *, index_type *);\n+extern void count_4_l4 (gfc_array_i4 * const restrict, \n+\tgfc_array_l4 * const restrict, const index_type * const restrict);\n export_proto(count_4_l4);\n \n void\n-count_4_l4 (gfc_array_i4 *retarray, gfc_array_l4 *array, index_type *pdim)\n+count_4_l4 (gfc_array_i4 * const restrict retarray, \n+\tgfc_array_l4 * const restrict array, \n+\tconst index_type * const restrict pdim)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n-  GFC_LOGICAL_4 *base;\n-  GFC_INTEGER_4 *dest;\n+  const GFC_LOGICAL_4 * restrict base;\n+  GFC_INTEGER_4 * restrict dest;\n   index_type rank;\n   index_type n;\n   index_type len;\n@@ -120,7 +123,7 @@ count_4_l4 (gfc_array_i4 *retarray, gfc_array_l4 *array, index_type *pdim)\n \n   while (base)\n     {\n-      GFC_LOGICAL_4 *src;\n+      const GFC_LOGICAL_4 * restrict src;\n       GFC_INTEGER_4 result;\n       src = base;\n       {"}, {"sha": "4992b77120635d9ac7322ddb93ce10bd17ec0bca", "filename": "libgfortran/generated/count_4_l8.c", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fcount_4_l8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fcount_4_l8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fcount_4_l8.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -37,18 +37,21 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_LOGICAL_8) && defined (HAVE_GFC_INTEGER_4)\n \n \n-extern void count_4_l8 (gfc_array_i4 *, gfc_array_l8 *, index_type *);\n+extern void count_4_l8 (gfc_array_i4 * const restrict, \n+\tgfc_array_l8 * const restrict, const index_type * const restrict);\n export_proto(count_4_l8);\n \n void\n-count_4_l8 (gfc_array_i4 *retarray, gfc_array_l8 *array, index_type *pdim)\n+count_4_l8 (gfc_array_i4 * const restrict retarray, \n+\tgfc_array_l8 * const restrict array, \n+\tconst index_type * const restrict pdim)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n-  GFC_LOGICAL_8 *base;\n-  GFC_INTEGER_4 *dest;\n+  const GFC_LOGICAL_8 * restrict base;\n+  GFC_INTEGER_4 * restrict dest;\n   index_type rank;\n   index_type n;\n   index_type len;\n@@ -120,7 +123,7 @@ count_4_l8 (gfc_array_i4 *retarray, gfc_array_l8 *array, index_type *pdim)\n \n   while (base)\n     {\n-      GFC_LOGICAL_8 *src;\n+      const GFC_LOGICAL_8 * restrict src;\n       GFC_INTEGER_4 result;\n       src = base;\n       {"}, {"sha": "ec23677298276062dbd1dd172808e111ccbf0428", "filename": "libgfortran/generated/count_8_l16.c", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fcount_8_l16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fcount_8_l16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fcount_8_l16.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -37,18 +37,21 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_LOGICAL_16) && defined (HAVE_GFC_INTEGER_8)\n \n \n-extern void count_8_l16 (gfc_array_i8 *, gfc_array_l16 *, index_type *);\n+extern void count_8_l16 (gfc_array_i8 * const restrict, \n+\tgfc_array_l16 * const restrict, const index_type * const restrict);\n export_proto(count_8_l16);\n \n void\n-count_8_l16 (gfc_array_i8 *retarray, gfc_array_l16 *array, index_type *pdim)\n+count_8_l16 (gfc_array_i8 * const restrict retarray, \n+\tgfc_array_l16 * const restrict array, \n+\tconst index_type * const restrict pdim)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n-  GFC_LOGICAL_16 *base;\n-  GFC_INTEGER_8 *dest;\n+  const GFC_LOGICAL_16 * restrict base;\n+  GFC_INTEGER_8 * restrict dest;\n   index_type rank;\n   index_type n;\n   index_type len;\n@@ -120,7 +123,7 @@ count_8_l16 (gfc_array_i8 *retarray, gfc_array_l16 *array, index_type *pdim)\n \n   while (base)\n     {\n-      GFC_LOGICAL_16 *src;\n+      const GFC_LOGICAL_16 * restrict src;\n       GFC_INTEGER_8 result;\n       src = base;\n       {"}, {"sha": "97ae10e97fb9b46126bc1806a6a351024c5ab8a0", "filename": "libgfortran/generated/count_8_l4.c", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fcount_8_l4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fcount_8_l4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fcount_8_l4.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -37,18 +37,21 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_LOGICAL_4) && defined (HAVE_GFC_INTEGER_8)\n \n \n-extern void count_8_l4 (gfc_array_i8 *, gfc_array_l4 *, index_type *);\n+extern void count_8_l4 (gfc_array_i8 * const restrict, \n+\tgfc_array_l4 * const restrict, const index_type * const restrict);\n export_proto(count_8_l4);\n \n void\n-count_8_l4 (gfc_array_i8 *retarray, gfc_array_l4 *array, index_type *pdim)\n+count_8_l4 (gfc_array_i8 * const restrict retarray, \n+\tgfc_array_l4 * const restrict array, \n+\tconst index_type * const restrict pdim)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n-  GFC_LOGICAL_4 *base;\n-  GFC_INTEGER_8 *dest;\n+  const GFC_LOGICAL_4 * restrict base;\n+  GFC_INTEGER_8 * restrict dest;\n   index_type rank;\n   index_type n;\n   index_type len;\n@@ -120,7 +123,7 @@ count_8_l4 (gfc_array_i8 *retarray, gfc_array_l4 *array, index_type *pdim)\n \n   while (base)\n     {\n-      GFC_LOGICAL_4 *src;\n+      const GFC_LOGICAL_4 * restrict src;\n       GFC_INTEGER_8 result;\n       src = base;\n       {"}, {"sha": "b2d06b968736e512eb346269d0ac487383a86377", "filename": "libgfortran/generated/count_8_l8.c", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fcount_8_l8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fcount_8_l8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fcount_8_l8.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -37,18 +37,21 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_LOGICAL_8) && defined (HAVE_GFC_INTEGER_8)\n \n \n-extern void count_8_l8 (gfc_array_i8 *, gfc_array_l8 *, index_type *);\n+extern void count_8_l8 (gfc_array_i8 * const restrict, \n+\tgfc_array_l8 * const restrict, const index_type * const restrict);\n export_proto(count_8_l8);\n \n void\n-count_8_l8 (gfc_array_i8 *retarray, gfc_array_l8 *array, index_type *pdim)\n+count_8_l8 (gfc_array_i8 * const restrict retarray, \n+\tgfc_array_l8 * const restrict array, \n+\tconst index_type * const restrict pdim)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n-  GFC_LOGICAL_8 *base;\n-  GFC_INTEGER_8 *dest;\n+  const GFC_LOGICAL_8 * restrict base;\n+  GFC_INTEGER_8 * restrict dest;\n   index_type rank;\n   index_type n;\n   index_type len;\n@@ -120,7 +123,7 @@ count_8_l8 (gfc_array_i8 *retarray, gfc_array_l8 *array, index_type *pdim)\n \n   while (base)\n     {\n-      GFC_LOGICAL_8 *src;\n+      const GFC_LOGICAL_8 * restrict src;\n       GFC_INTEGER_8 result;\n       src = base;\n       {"}, {"sha": "c264bb13f923d57cc9fdf6efb73820091ba85d02", "filename": "libgfortran/generated/cshift1_16.c", "status": "modified", "additions": 25, "deletions": 16, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fcshift1_16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fcshift1_16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fcshift1_16.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -37,8 +37,11 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_INTEGER_16)\n \n static void\n-cshift1 (gfc_array_char * ret, const gfc_array_char * array,\n-\t const gfc_array_i16 * h, const GFC_INTEGER_16 * pwhich, index_type size)\n+cshift1 (gfc_array_char * const restrict ret, \n+\tconst gfc_array_char * const restrict array,\n+\tconst gfc_array_i16 * const restrict h, \n+\tconst GFC_INTEGER_16 * const restrict pwhich, \n+\tindex_type size)\n {\n   /* r.* indicates the return array.  */\n   index_type rstride[GFC_MAX_DIMENSIONS];\n@@ -194,30 +197,36 @@ cshift1 (gfc_array_char * ret, const gfc_array_char * array,\n     }\n }\n \n-void cshift1_16 (gfc_array_char *, const gfc_array_char *,\n-\t\t\t   const gfc_array_i16 *, const GFC_INTEGER_16 *);\n+void cshift1_16 (gfc_array_char * const restrict, \n+\tconst gfc_array_char * const restrict,\n+\tconst gfc_array_i16 * const restrict, \n+\tconst GFC_INTEGER_16 * const restrict);\n export_proto(cshift1_16);\n \n void\n-cshift1_16 (gfc_array_char * ret,\n-\t\t      const gfc_array_char * array,\n-\t\t      const gfc_array_i16 * h, const GFC_INTEGER_16 * pwhich)\n+cshift1_16 (gfc_array_char * const restrict ret,\n+\tconst gfc_array_char * const restrict array,\n+\tconst gfc_array_i16 * const restrict h, \n+\tconst GFC_INTEGER_16 * const restrict pwhich)\n {\n   cshift1 (ret, array, h, pwhich, GFC_DESCRIPTOR_SIZE (array));\n }\n \n-void cshift1_16_char (gfc_array_char * ret, GFC_INTEGER_4,\n-\t\t\t\t  const gfc_array_char * array,\n-\t\t\t\t  const gfc_array_i16 * h, const GFC_INTEGER_16 * pwhich,\n-\t\t\t\t  GFC_INTEGER_4);\n+void cshift1_16_char (gfc_array_char * const restrict ret, \n+\tGFC_INTEGER_4,\n+\tconst gfc_array_char * const restrict array,\n+\tconst gfc_array_i16 * const restrict h, \n+\tconst GFC_INTEGER_16 * const restrict pwhich,\n+\tGFC_INTEGER_4);\n export_proto(cshift1_16_char);\n \n void\n-cshift1_16_char (gfc_array_char * ret,\n-\t\t\t     GFC_INTEGER_4 ret_length __attribute__((unused)),\n-\t\t\t     const gfc_array_char * array,\n-\t\t\t     const gfc_array_i16 * h, const GFC_INTEGER_16 * pwhich,\n-\t\t\t     GFC_INTEGER_4 array_length)\n+cshift1_16_char (gfc_array_char * const restrict ret,\n+\tGFC_INTEGER_4 ret_length __attribute__((unused)),\n+\tconst gfc_array_char * const restrict array,\n+\tconst gfc_array_i16 * const restrict h, \n+\tconst GFC_INTEGER_16 * const restrict pwhich,\n+\tGFC_INTEGER_4 array_length)\n {\n   cshift1 (ret, array, h, pwhich, array_length);\n }"}, {"sha": "8eba7b331aa93fe33601ac067299e948d6c315d3", "filename": "libgfortran/generated/cshift1_4.c", "status": "modified", "additions": 25, "deletions": 16, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fcshift1_4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fcshift1_4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fcshift1_4.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -37,8 +37,11 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_INTEGER_4)\n \n static void\n-cshift1 (gfc_array_char * ret, const gfc_array_char * array,\n-\t const gfc_array_i4 * h, const GFC_INTEGER_4 * pwhich, index_type size)\n+cshift1 (gfc_array_char * const restrict ret, \n+\tconst gfc_array_char * const restrict array,\n+\tconst gfc_array_i4 * const restrict h, \n+\tconst GFC_INTEGER_4 * const restrict pwhich, \n+\tindex_type size)\n {\n   /* r.* indicates the return array.  */\n   index_type rstride[GFC_MAX_DIMENSIONS];\n@@ -194,30 +197,36 @@ cshift1 (gfc_array_char * ret, const gfc_array_char * array,\n     }\n }\n \n-void cshift1_4 (gfc_array_char *, const gfc_array_char *,\n-\t\t\t   const gfc_array_i4 *, const GFC_INTEGER_4 *);\n+void cshift1_4 (gfc_array_char * const restrict, \n+\tconst gfc_array_char * const restrict,\n+\tconst gfc_array_i4 * const restrict, \n+\tconst GFC_INTEGER_4 * const restrict);\n export_proto(cshift1_4);\n \n void\n-cshift1_4 (gfc_array_char * ret,\n-\t\t      const gfc_array_char * array,\n-\t\t      const gfc_array_i4 * h, const GFC_INTEGER_4 * pwhich)\n+cshift1_4 (gfc_array_char * const restrict ret,\n+\tconst gfc_array_char * const restrict array,\n+\tconst gfc_array_i4 * const restrict h, \n+\tconst GFC_INTEGER_4 * const restrict pwhich)\n {\n   cshift1 (ret, array, h, pwhich, GFC_DESCRIPTOR_SIZE (array));\n }\n \n-void cshift1_4_char (gfc_array_char * ret, GFC_INTEGER_4,\n-\t\t\t\t  const gfc_array_char * array,\n-\t\t\t\t  const gfc_array_i4 * h, const GFC_INTEGER_4 * pwhich,\n-\t\t\t\t  GFC_INTEGER_4);\n+void cshift1_4_char (gfc_array_char * const restrict ret, \n+\tGFC_INTEGER_4,\n+\tconst gfc_array_char * const restrict array,\n+\tconst gfc_array_i4 * const restrict h, \n+\tconst GFC_INTEGER_4 * const restrict pwhich,\n+\tGFC_INTEGER_4);\n export_proto(cshift1_4_char);\n \n void\n-cshift1_4_char (gfc_array_char * ret,\n-\t\t\t     GFC_INTEGER_4 ret_length __attribute__((unused)),\n-\t\t\t     const gfc_array_char * array,\n-\t\t\t     const gfc_array_i4 * h, const GFC_INTEGER_4 * pwhich,\n-\t\t\t     GFC_INTEGER_4 array_length)\n+cshift1_4_char (gfc_array_char * const restrict ret,\n+\tGFC_INTEGER_4 ret_length __attribute__((unused)),\n+\tconst gfc_array_char * const restrict array,\n+\tconst gfc_array_i4 * const restrict h, \n+\tconst GFC_INTEGER_4 * const restrict pwhich,\n+\tGFC_INTEGER_4 array_length)\n {\n   cshift1 (ret, array, h, pwhich, array_length);\n }"}, {"sha": "d8d0f898377df59b2c1970d273cf8200eef1e887", "filename": "libgfortran/generated/cshift1_8.c", "status": "modified", "additions": 25, "deletions": 16, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fcshift1_8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fcshift1_8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fcshift1_8.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -37,8 +37,11 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_INTEGER_8)\n \n static void\n-cshift1 (gfc_array_char * ret, const gfc_array_char * array,\n-\t const gfc_array_i8 * h, const GFC_INTEGER_8 * pwhich, index_type size)\n+cshift1 (gfc_array_char * const restrict ret, \n+\tconst gfc_array_char * const restrict array,\n+\tconst gfc_array_i8 * const restrict h, \n+\tconst GFC_INTEGER_8 * const restrict pwhich, \n+\tindex_type size)\n {\n   /* r.* indicates the return array.  */\n   index_type rstride[GFC_MAX_DIMENSIONS];\n@@ -194,30 +197,36 @@ cshift1 (gfc_array_char * ret, const gfc_array_char * array,\n     }\n }\n \n-void cshift1_8 (gfc_array_char *, const gfc_array_char *,\n-\t\t\t   const gfc_array_i8 *, const GFC_INTEGER_8 *);\n+void cshift1_8 (gfc_array_char * const restrict, \n+\tconst gfc_array_char * const restrict,\n+\tconst gfc_array_i8 * const restrict, \n+\tconst GFC_INTEGER_8 * const restrict);\n export_proto(cshift1_8);\n \n void\n-cshift1_8 (gfc_array_char * ret,\n-\t\t      const gfc_array_char * array,\n-\t\t      const gfc_array_i8 * h, const GFC_INTEGER_8 * pwhich)\n+cshift1_8 (gfc_array_char * const restrict ret,\n+\tconst gfc_array_char * const restrict array,\n+\tconst gfc_array_i8 * const restrict h, \n+\tconst GFC_INTEGER_8 * const restrict pwhich)\n {\n   cshift1 (ret, array, h, pwhich, GFC_DESCRIPTOR_SIZE (array));\n }\n \n-void cshift1_8_char (gfc_array_char * ret, GFC_INTEGER_4,\n-\t\t\t\t  const gfc_array_char * array,\n-\t\t\t\t  const gfc_array_i8 * h, const GFC_INTEGER_8 * pwhich,\n-\t\t\t\t  GFC_INTEGER_4);\n+void cshift1_8_char (gfc_array_char * const restrict ret, \n+\tGFC_INTEGER_4,\n+\tconst gfc_array_char * const restrict array,\n+\tconst gfc_array_i8 * const restrict h, \n+\tconst GFC_INTEGER_8 * const restrict pwhich,\n+\tGFC_INTEGER_4);\n export_proto(cshift1_8_char);\n \n void\n-cshift1_8_char (gfc_array_char * ret,\n-\t\t\t     GFC_INTEGER_4 ret_length __attribute__((unused)),\n-\t\t\t     const gfc_array_char * array,\n-\t\t\t     const gfc_array_i8 * h, const GFC_INTEGER_8 * pwhich,\n-\t\t\t     GFC_INTEGER_4 array_length)\n+cshift1_8_char (gfc_array_char * const restrict ret,\n+\tGFC_INTEGER_4 ret_length __attribute__((unused)),\n+\tconst gfc_array_char * const restrict array,\n+\tconst gfc_array_i8 * const restrict h, \n+\tconst GFC_INTEGER_8 * const restrict pwhich,\n+\tGFC_INTEGER_4 array_length)\n {\n   cshift1 (ret, array, h, pwhich, array_length);\n }"}, {"sha": "0dccca71ec72eb42d07b9702d345cba318e9dccd", "filename": "libgfortran/generated/dotprod_c10.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fdotprod_c10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fdotprod_c10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fdotprod_c10.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -38,15 +38,16 @@ Boston, MA 02110-1301, USA.  */\n \n typedef GFC_ARRAY_DESCRIPTOR(GFC_MAX_DIMENSIONS, char) char_array;\n \n-extern GFC_COMPLEX_10 dot_product_c10 (gfc_array_c10 * a, gfc_array_c10 * b);\n+extern GFC_COMPLEX_10 dot_product_c10 (gfc_array_c10 * const restrict a, \n+\tgfc_array_c10 * const restrict b);\n export_proto(dot_product_c10);\n \n /* Both parameters will already have been converted to the result type.  */\n GFC_COMPLEX_10\n-dot_product_c10 (gfc_array_c10 * a, gfc_array_c10 * b)\n+dot_product_c10 (gfc_array_c10 * const restrict a, gfc_array_c10 * const restrict b)\n {\n-  GFC_COMPLEX_10 *pa;\n-  GFC_COMPLEX_10 *pb;\n+  const GFC_COMPLEX_10 * restrict pa;\n+  const GFC_COMPLEX_10 * restrict pb;\n   GFC_COMPLEX_10 res;\n   GFC_COMPLEX_10 conjga;\n   index_type count;"}, {"sha": "6d17ba7409d928ced2559e2a21dd38adcbbcb22c", "filename": "libgfortran/generated/dotprod_c16.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fdotprod_c16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fdotprod_c16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fdotprod_c16.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -38,15 +38,16 @@ Boston, MA 02110-1301, USA.  */\n \n typedef GFC_ARRAY_DESCRIPTOR(GFC_MAX_DIMENSIONS, char) char_array;\n \n-extern GFC_COMPLEX_16 dot_product_c16 (gfc_array_c16 * a, gfc_array_c16 * b);\n+extern GFC_COMPLEX_16 dot_product_c16 (gfc_array_c16 * const restrict a, \n+\tgfc_array_c16 * const restrict b);\n export_proto(dot_product_c16);\n \n /* Both parameters will already have been converted to the result type.  */\n GFC_COMPLEX_16\n-dot_product_c16 (gfc_array_c16 * a, gfc_array_c16 * b)\n+dot_product_c16 (gfc_array_c16 * const restrict a, gfc_array_c16 * const restrict b)\n {\n-  GFC_COMPLEX_16 *pa;\n-  GFC_COMPLEX_16 *pb;\n+  const GFC_COMPLEX_16 * restrict pa;\n+  const GFC_COMPLEX_16 * restrict pb;\n   GFC_COMPLEX_16 res;\n   GFC_COMPLEX_16 conjga;\n   index_type count;"}, {"sha": "a575dc9896906577f05e2473dcfd7d1aecbccffd", "filename": "libgfortran/generated/dotprod_c4.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fdotprod_c4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fdotprod_c4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fdotprod_c4.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -38,15 +38,16 @@ Boston, MA 02110-1301, USA.  */\n \n typedef GFC_ARRAY_DESCRIPTOR(GFC_MAX_DIMENSIONS, char) char_array;\n \n-extern GFC_COMPLEX_4 dot_product_c4 (gfc_array_c4 * a, gfc_array_c4 * b);\n+extern GFC_COMPLEX_4 dot_product_c4 (gfc_array_c4 * const restrict a, \n+\tgfc_array_c4 * const restrict b);\n export_proto(dot_product_c4);\n \n /* Both parameters will already have been converted to the result type.  */\n GFC_COMPLEX_4\n-dot_product_c4 (gfc_array_c4 * a, gfc_array_c4 * b)\n+dot_product_c4 (gfc_array_c4 * const restrict a, gfc_array_c4 * const restrict b)\n {\n-  GFC_COMPLEX_4 *pa;\n-  GFC_COMPLEX_4 *pb;\n+  const GFC_COMPLEX_4 * restrict pa;\n+  const GFC_COMPLEX_4 * restrict pb;\n   GFC_COMPLEX_4 res;\n   GFC_COMPLEX_4 conjga;\n   index_type count;"}, {"sha": "00ac8a9d0cc4ecafdac555c7dc3e982c6d7aac26", "filename": "libgfortran/generated/dotprod_c8.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fdotprod_c8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fdotprod_c8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fdotprod_c8.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -38,15 +38,16 @@ Boston, MA 02110-1301, USA.  */\n \n typedef GFC_ARRAY_DESCRIPTOR(GFC_MAX_DIMENSIONS, char) char_array;\n \n-extern GFC_COMPLEX_8 dot_product_c8 (gfc_array_c8 * a, gfc_array_c8 * b);\n+extern GFC_COMPLEX_8 dot_product_c8 (gfc_array_c8 * const restrict a, \n+\tgfc_array_c8 * const restrict b);\n export_proto(dot_product_c8);\n \n /* Both parameters will already have been converted to the result type.  */\n GFC_COMPLEX_8\n-dot_product_c8 (gfc_array_c8 * a, gfc_array_c8 * b)\n+dot_product_c8 (gfc_array_c8 * const restrict a, gfc_array_c8 * const restrict b)\n {\n-  GFC_COMPLEX_8 *pa;\n-  GFC_COMPLEX_8 *pb;\n+  const GFC_COMPLEX_8 * restrict pa;\n+  const GFC_COMPLEX_8 * restrict pb;\n   GFC_COMPLEX_8 res;\n   GFC_COMPLEX_8 conjga;\n   index_type count;"}, {"sha": "292f078653806ff65a99aef71fa739433b8e0276", "filename": "libgfortran/generated/dotprod_i16.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fdotprod_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fdotprod_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fdotprod_i16.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -37,15 +37,16 @@ Boston, MA 02110-1301, USA.  */\n \n typedef GFC_ARRAY_DESCRIPTOR(GFC_MAX_DIMENSIONS, char) char_array;\n \n-extern GFC_INTEGER_16 dot_product_i16 (gfc_array_i16 * a, gfc_array_i16 * b);\n+extern GFC_INTEGER_16 dot_product_i16 (gfc_array_i16 * const restrict a, \n+\tgfc_array_i16 * const restrict b);\n export_proto(dot_product_i16);\n \n /* Both parameters will already have been converted to the result type.  */\n GFC_INTEGER_16\n-dot_product_i16 (gfc_array_i16 * a, gfc_array_i16 * b)\n+dot_product_i16 (gfc_array_i16 * const restrict a, gfc_array_i16 * const restrict b)\n {\n-  GFC_INTEGER_16 *pa;\n-  GFC_INTEGER_16 *pb;\n+  const GFC_INTEGER_16 * restrict pa;\n+  const GFC_INTEGER_16 * restrict pb;\n   GFC_INTEGER_16 res;\n   index_type count;\n   index_type astride;"}, {"sha": "5a8dcd930fef5c42d8883c3c2f49d2449a9161e7", "filename": "libgfortran/generated/dotprod_i4.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fdotprod_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fdotprod_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fdotprod_i4.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -37,15 +37,16 @@ Boston, MA 02110-1301, USA.  */\n \n typedef GFC_ARRAY_DESCRIPTOR(GFC_MAX_DIMENSIONS, char) char_array;\n \n-extern GFC_INTEGER_4 dot_product_i4 (gfc_array_i4 * a, gfc_array_i4 * b);\n+extern GFC_INTEGER_4 dot_product_i4 (gfc_array_i4 * const restrict a, \n+\tgfc_array_i4 * const restrict b);\n export_proto(dot_product_i4);\n \n /* Both parameters will already have been converted to the result type.  */\n GFC_INTEGER_4\n-dot_product_i4 (gfc_array_i4 * a, gfc_array_i4 * b)\n+dot_product_i4 (gfc_array_i4 * const restrict a, gfc_array_i4 * const restrict b)\n {\n-  GFC_INTEGER_4 *pa;\n-  GFC_INTEGER_4 *pb;\n+  const GFC_INTEGER_4 * restrict pa;\n+  const GFC_INTEGER_4 * restrict pb;\n   GFC_INTEGER_4 res;\n   index_type count;\n   index_type astride;"}, {"sha": "c03cbc311e9d3a021f53bcd30ae0a1922788a74c", "filename": "libgfortran/generated/dotprod_i8.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fdotprod_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fdotprod_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fdotprod_i8.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -37,15 +37,16 @@ Boston, MA 02110-1301, USA.  */\n \n typedef GFC_ARRAY_DESCRIPTOR(GFC_MAX_DIMENSIONS, char) char_array;\n \n-extern GFC_INTEGER_8 dot_product_i8 (gfc_array_i8 * a, gfc_array_i8 * b);\n+extern GFC_INTEGER_8 dot_product_i8 (gfc_array_i8 * const restrict a, \n+\tgfc_array_i8 * const restrict b);\n export_proto(dot_product_i8);\n \n /* Both parameters will already have been converted to the result type.  */\n GFC_INTEGER_8\n-dot_product_i8 (gfc_array_i8 * a, gfc_array_i8 * b)\n+dot_product_i8 (gfc_array_i8 * const restrict a, gfc_array_i8 * const restrict b)\n {\n-  GFC_INTEGER_8 *pa;\n-  GFC_INTEGER_8 *pb;\n+  const GFC_INTEGER_8 * restrict pa;\n+  const GFC_INTEGER_8 * restrict pb;\n   GFC_INTEGER_8 res;\n   index_type count;\n   index_type astride;"}, {"sha": "c53b1bb7af5ae2956502a0fce67af99797d68d1b", "filename": "libgfortran/generated/dotprod_l16.c", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fdotprod_l16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fdotprod_l16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fdotprod_l16.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -35,14 +35,16 @@ Boston, MA 02110-1301, USA.  */\n \n #if defined (HAVE_GFC_LOGICAL_16)\n \n-extern GFC_LOGICAL_16 dot_product_l16 (gfc_array_l4 *, gfc_array_l4 *);\n+extern GFC_LOGICAL_16 dot_product_l16 (gfc_array_l4 * const restrict, \n+\tgfc_array_l4 * const restrict);\n export_proto(dot_product_l16);\n \n GFC_LOGICAL_16\n-dot_product_l16 (gfc_array_l4 * a, gfc_array_l4 * b)\n+dot_product_l16 (gfc_array_l4 * const restrict a, \n+\tgfc_array_l4 * const restrict b)\n {\n-  GFC_LOGICAL_4 *pa;\n-  GFC_LOGICAL_4 *pb;\n+  const GFC_LOGICAL_4 * restrict pa;\n+  const GFC_LOGICAL_4 * restrict pb;\n   index_type count;\n   index_type astride;\n   index_type bstride;"}, {"sha": "dcec980b564ec22da19f75b42a1137a8250ca7be", "filename": "libgfortran/generated/dotprod_l4.c", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fdotprod_l4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fdotprod_l4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fdotprod_l4.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -35,14 +35,16 @@ Boston, MA 02110-1301, USA.  */\n \n #if defined (HAVE_GFC_LOGICAL_4)\n \n-extern GFC_LOGICAL_4 dot_product_l4 (gfc_array_l4 *, gfc_array_l4 *);\n+extern GFC_LOGICAL_4 dot_product_l4 (gfc_array_l4 * const restrict, \n+\tgfc_array_l4 * const restrict);\n export_proto(dot_product_l4);\n \n GFC_LOGICAL_4\n-dot_product_l4 (gfc_array_l4 * a, gfc_array_l4 * b)\n+dot_product_l4 (gfc_array_l4 * const restrict a, \n+\tgfc_array_l4 * const restrict b)\n {\n-  GFC_LOGICAL_4 *pa;\n-  GFC_LOGICAL_4 *pb;\n+  const GFC_LOGICAL_4 * restrict pa;\n+  const GFC_LOGICAL_4 * restrict pb;\n   index_type count;\n   index_type astride;\n   index_type bstride;"}, {"sha": "b579f2ff9ed2e3c079eb472b92b5be36fd17533a", "filename": "libgfortran/generated/dotprod_l8.c", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fdotprod_l8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fdotprod_l8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fdotprod_l8.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -35,14 +35,16 @@ Boston, MA 02110-1301, USA.  */\n \n #if defined (HAVE_GFC_LOGICAL_8)\n \n-extern GFC_LOGICAL_8 dot_product_l8 (gfc_array_l4 *, gfc_array_l4 *);\n+extern GFC_LOGICAL_8 dot_product_l8 (gfc_array_l4 * const restrict, \n+\tgfc_array_l4 * const restrict);\n export_proto(dot_product_l8);\n \n GFC_LOGICAL_8\n-dot_product_l8 (gfc_array_l4 * a, gfc_array_l4 * b)\n+dot_product_l8 (gfc_array_l4 * const restrict a, \n+\tgfc_array_l4 * const restrict b)\n {\n-  GFC_LOGICAL_4 *pa;\n-  GFC_LOGICAL_4 *pb;\n+  const GFC_LOGICAL_4 * restrict pa;\n+  const GFC_LOGICAL_4 * restrict pb;\n   index_type count;\n   index_type astride;\n   index_type bstride;"}, {"sha": "e2160c796a209c157bfccc7a3f8f530721db6f80", "filename": "libgfortran/generated/dotprod_r10.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fdotprod_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fdotprod_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fdotprod_r10.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -37,15 +37,16 @@ Boston, MA 02110-1301, USA.  */\n \n typedef GFC_ARRAY_DESCRIPTOR(GFC_MAX_DIMENSIONS, char) char_array;\n \n-extern GFC_REAL_10 dot_product_r10 (gfc_array_r10 * a, gfc_array_r10 * b);\n+extern GFC_REAL_10 dot_product_r10 (gfc_array_r10 * const restrict a, \n+\tgfc_array_r10 * const restrict b);\n export_proto(dot_product_r10);\n \n /* Both parameters will already have been converted to the result type.  */\n GFC_REAL_10\n-dot_product_r10 (gfc_array_r10 * a, gfc_array_r10 * b)\n+dot_product_r10 (gfc_array_r10 * const restrict a, gfc_array_r10 * const restrict b)\n {\n-  GFC_REAL_10 *pa;\n-  GFC_REAL_10 *pb;\n+  const GFC_REAL_10 * restrict pa;\n+  const GFC_REAL_10 * restrict pb;\n   GFC_REAL_10 res;\n   index_type count;\n   index_type astride;"}, {"sha": "40edc497a0d4eda5f410c300a5ef3d407333cda9", "filename": "libgfortran/generated/dotprod_r16.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fdotprod_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fdotprod_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fdotprod_r16.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -37,15 +37,16 @@ Boston, MA 02110-1301, USA.  */\n \n typedef GFC_ARRAY_DESCRIPTOR(GFC_MAX_DIMENSIONS, char) char_array;\n \n-extern GFC_REAL_16 dot_product_r16 (gfc_array_r16 * a, gfc_array_r16 * b);\n+extern GFC_REAL_16 dot_product_r16 (gfc_array_r16 * const restrict a, \n+\tgfc_array_r16 * const restrict b);\n export_proto(dot_product_r16);\n \n /* Both parameters will already have been converted to the result type.  */\n GFC_REAL_16\n-dot_product_r16 (gfc_array_r16 * a, gfc_array_r16 * b)\n+dot_product_r16 (gfc_array_r16 * const restrict a, gfc_array_r16 * const restrict b)\n {\n-  GFC_REAL_16 *pa;\n-  GFC_REAL_16 *pb;\n+  const GFC_REAL_16 * restrict pa;\n+  const GFC_REAL_16 * restrict pb;\n   GFC_REAL_16 res;\n   index_type count;\n   index_type astride;"}, {"sha": "7fdc57fa0a58c71d82769f1116d2d79fab0d7672", "filename": "libgfortran/generated/dotprod_r4.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fdotprod_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fdotprod_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fdotprod_r4.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -37,15 +37,16 @@ Boston, MA 02110-1301, USA.  */\n \n typedef GFC_ARRAY_DESCRIPTOR(GFC_MAX_DIMENSIONS, char) char_array;\n \n-extern GFC_REAL_4 dot_product_r4 (gfc_array_r4 * a, gfc_array_r4 * b);\n+extern GFC_REAL_4 dot_product_r4 (gfc_array_r4 * const restrict a, \n+\tgfc_array_r4 * const restrict b);\n export_proto(dot_product_r4);\n \n /* Both parameters will already have been converted to the result type.  */\n GFC_REAL_4\n-dot_product_r4 (gfc_array_r4 * a, gfc_array_r4 * b)\n+dot_product_r4 (gfc_array_r4 * const restrict a, gfc_array_r4 * const restrict b)\n {\n-  GFC_REAL_4 *pa;\n-  GFC_REAL_4 *pb;\n+  const GFC_REAL_4 * restrict pa;\n+  const GFC_REAL_4 * restrict pb;\n   GFC_REAL_4 res;\n   index_type count;\n   index_type astride;"}, {"sha": "760407736c99850c99c15969f4cd7a554f91f8c2", "filename": "libgfortran/generated/dotprod_r8.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fdotprod_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fdotprod_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fdotprod_r8.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -37,15 +37,16 @@ Boston, MA 02110-1301, USA.  */\n \n typedef GFC_ARRAY_DESCRIPTOR(GFC_MAX_DIMENSIONS, char) char_array;\n \n-extern GFC_REAL_8 dot_product_r8 (gfc_array_r8 * a, gfc_array_r8 * b);\n+extern GFC_REAL_8 dot_product_r8 (gfc_array_r8 * const restrict a, \n+\tgfc_array_r8 * const restrict b);\n export_proto(dot_product_r8);\n \n /* Both parameters will already have been converted to the result type.  */\n GFC_REAL_8\n-dot_product_r8 (gfc_array_r8 * a, gfc_array_r8 * b)\n+dot_product_r8 (gfc_array_r8 * const restrict a, gfc_array_r8 * const restrict b)\n {\n-  GFC_REAL_8 *pa;\n-  GFC_REAL_8 *pb;\n+  const GFC_REAL_8 * restrict pa;\n+  const GFC_REAL_8 * restrict pb;\n   GFC_REAL_8 res;\n   index_type count;\n   index_type astride;"}, {"sha": "bfb051fe1c65eff612f7a0bcff0bcbc83f8becdf", "filename": "libgfortran/generated/eoshift1_16.c", "status": "modified", "additions": 30, "deletions": 19, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Feoshift1_16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Feoshift1_16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Feoshift1_16.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -37,9 +37,12 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_INTEGER_16)\n \n static void\n-eoshift1 (gfc_array_char *ret, const gfc_array_char *array, const gfc_array_i16 *h,\n-\t  const char *pbound, const GFC_INTEGER_16 *pwhich, index_type size,\n-\t  char filler)\n+eoshift1 (gfc_array_char * const restrict ret, \n+\tconst gfc_array_char * const restrict array, \n+\tconst gfc_array_i16 * const restrict h,\n+\tconst char * const restrict pbound, \n+\tconst GFC_INTEGER_16 * const restrict pwhich, \n+\tindex_type size, char filler)\n {\n   /* r.* indicates the return array.  */\n   index_type rstride[GFC_MAX_DIMENSIONS];\n@@ -218,32 +221,40 @@ eoshift1 (gfc_array_char *ret, const gfc_array_char *array, const gfc_array_i16\n     }\n }\n \n-void eoshift1_16 (gfc_array_char *, const gfc_array_char *,\n-\t\t\t    const gfc_array_i16 *, const char *, const GFC_INTEGER_16 *);\n+void eoshift1_16 (gfc_array_char * const restrict, \n+\tconst gfc_array_char * const restrict,\n+\tconst gfc_array_i16 * const restrict, const char * const restrict, \n+\tconst GFC_INTEGER_16 * const restrict);\n export_proto(eoshift1_16);\n \n void\n-eoshift1_16 (gfc_array_char *ret, const gfc_array_char *array,\n-\t\t       const gfc_array_i16 *h, const char *pbound,\n-\t\t       const GFC_INTEGER_16 *pwhich)\n+eoshift1_16 (gfc_array_char * const restrict ret, \n+\tconst gfc_array_char * const restrict array,\n+\tconst gfc_array_i16 * const restrict h, \n+\tconst char * const restrict pbound,\n+\tconst GFC_INTEGER_16 * const restrict pwhich)\n {\n   eoshift1 (ret, array, h, pbound, pwhich, GFC_DESCRIPTOR_SIZE (array), 0);\n }\n \n-void eoshift1_16_char (gfc_array_char *, GFC_INTEGER_4,\n-\t\t\t\t   const gfc_array_char *, const gfc_array_i16 *,\n-\t\t\t\t   const char *, const GFC_INTEGER_16 *,\n-\t\t\t\t   GFC_INTEGER_4, GFC_INTEGER_4);\n+void eoshift1_16_char (gfc_array_char * const restrict, \n+\tGFC_INTEGER_4,\n+\tconst gfc_array_char * const restrict, \n+\tconst gfc_array_i16 * const restrict,\n+\tconst char * const restrict, \n+\tconst GFC_INTEGER_16 * const restrict,\n+\tGFC_INTEGER_4, GFC_INTEGER_4);\n export_proto(eoshift1_16_char);\n \n void\n-eoshift1_16_char (gfc_array_char *ret,\n-\t\t\t      GFC_INTEGER_4 ret_length __attribute__((unused)),\n-\t\t\t      const gfc_array_char *array, const gfc_array_i16 *h,\n-\t\t\t      const char *pbound, const GFC_INTEGER_16 *pwhich,\n-\t\t\t      GFC_INTEGER_4 array_length,\n-\t\t\t      GFC_INTEGER_4 bound_length\n-\t\t\t\t__attribute__((unused)))\n+eoshift1_16_char (gfc_array_char * const restrict ret,\n+\tGFC_INTEGER_4 ret_length __attribute__((unused)),\n+\tconst gfc_array_char * const restrict array, \n+\tconst gfc_array_i16 * const restrict h,\n+\tconst char *  const restrict pbound, \n+\tconst GFC_INTEGER_16 * const restrict pwhich,\n+\tGFC_INTEGER_4 array_length,\n+\tGFC_INTEGER_4 bound_length __attribute__((unused)))\n {\n   eoshift1 (ret, array, h, pbound, pwhich, array_length, ' ');\n }"}, {"sha": "922c46c6830a2c674dcc62b84d70f05f63b72dd9", "filename": "libgfortran/generated/eoshift1_4.c", "status": "modified", "additions": 30, "deletions": 19, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Feoshift1_4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Feoshift1_4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Feoshift1_4.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -37,9 +37,12 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_INTEGER_4)\n \n static void\n-eoshift1 (gfc_array_char *ret, const gfc_array_char *array, const gfc_array_i4 *h,\n-\t  const char *pbound, const GFC_INTEGER_4 *pwhich, index_type size,\n-\t  char filler)\n+eoshift1 (gfc_array_char * const restrict ret, \n+\tconst gfc_array_char * const restrict array, \n+\tconst gfc_array_i4 * const restrict h,\n+\tconst char * const restrict pbound, \n+\tconst GFC_INTEGER_4 * const restrict pwhich, \n+\tindex_type size, char filler)\n {\n   /* r.* indicates the return array.  */\n   index_type rstride[GFC_MAX_DIMENSIONS];\n@@ -218,32 +221,40 @@ eoshift1 (gfc_array_char *ret, const gfc_array_char *array, const gfc_array_i4 *\n     }\n }\n \n-void eoshift1_4 (gfc_array_char *, const gfc_array_char *,\n-\t\t\t    const gfc_array_i4 *, const char *, const GFC_INTEGER_4 *);\n+void eoshift1_4 (gfc_array_char * const restrict, \n+\tconst gfc_array_char * const restrict,\n+\tconst gfc_array_i4 * const restrict, const char * const restrict, \n+\tconst GFC_INTEGER_4 * const restrict);\n export_proto(eoshift1_4);\n \n void\n-eoshift1_4 (gfc_array_char *ret, const gfc_array_char *array,\n-\t\t       const gfc_array_i4 *h, const char *pbound,\n-\t\t       const GFC_INTEGER_4 *pwhich)\n+eoshift1_4 (gfc_array_char * const restrict ret, \n+\tconst gfc_array_char * const restrict array,\n+\tconst gfc_array_i4 * const restrict h, \n+\tconst char * const restrict pbound,\n+\tconst GFC_INTEGER_4 * const restrict pwhich)\n {\n   eoshift1 (ret, array, h, pbound, pwhich, GFC_DESCRIPTOR_SIZE (array), 0);\n }\n \n-void eoshift1_4_char (gfc_array_char *, GFC_INTEGER_4,\n-\t\t\t\t   const gfc_array_char *, const gfc_array_i4 *,\n-\t\t\t\t   const char *, const GFC_INTEGER_4 *,\n-\t\t\t\t   GFC_INTEGER_4, GFC_INTEGER_4);\n+void eoshift1_4_char (gfc_array_char * const restrict, \n+\tGFC_INTEGER_4,\n+\tconst gfc_array_char * const restrict, \n+\tconst gfc_array_i4 * const restrict,\n+\tconst char * const restrict, \n+\tconst GFC_INTEGER_4 * const restrict,\n+\tGFC_INTEGER_4, GFC_INTEGER_4);\n export_proto(eoshift1_4_char);\n \n void\n-eoshift1_4_char (gfc_array_char *ret,\n-\t\t\t      GFC_INTEGER_4 ret_length __attribute__((unused)),\n-\t\t\t      const gfc_array_char *array, const gfc_array_i4 *h,\n-\t\t\t      const char *pbound, const GFC_INTEGER_4 *pwhich,\n-\t\t\t      GFC_INTEGER_4 array_length,\n-\t\t\t      GFC_INTEGER_4 bound_length\n-\t\t\t\t__attribute__((unused)))\n+eoshift1_4_char (gfc_array_char * const restrict ret,\n+\tGFC_INTEGER_4 ret_length __attribute__((unused)),\n+\tconst gfc_array_char * const restrict array, \n+\tconst gfc_array_i4 * const restrict h,\n+\tconst char *  const restrict pbound, \n+\tconst GFC_INTEGER_4 * const restrict pwhich,\n+\tGFC_INTEGER_4 array_length,\n+\tGFC_INTEGER_4 bound_length __attribute__((unused)))\n {\n   eoshift1 (ret, array, h, pbound, pwhich, array_length, ' ');\n }"}, {"sha": "ea23adfaabf11d45cec3e661b261ee8f09d6d937", "filename": "libgfortran/generated/eoshift1_8.c", "status": "modified", "additions": 30, "deletions": 19, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Feoshift1_8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Feoshift1_8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Feoshift1_8.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -37,9 +37,12 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_INTEGER_8)\n \n static void\n-eoshift1 (gfc_array_char *ret, const gfc_array_char *array, const gfc_array_i8 *h,\n-\t  const char *pbound, const GFC_INTEGER_8 *pwhich, index_type size,\n-\t  char filler)\n+eoshift1 (gfc_array_char * const restrict ret, \n+\tconst gfc_array_char * const restrict array, \n+\tconst gfc_array_i8 * const restrict h,\n+\tconst char * const restrict pbound, \n+\tconst GFC_INTEGER_8 * const restrict pwhich, \n+\tindex_type size, char filler)\n {\n   /* r.* indicates the return array.  */\n   index_type rstride[GFC_MAX_DIMENSIONS];\n@@ -218,32 +221,40 @@ eoshift1 (gfc_array_char *ret, const gfc_array_char *array, const gfc_array_i8 *\n     }\n }\n \n-void eoshift1_8 (gfc_array_char *, const gfc_array_char *,\n-\t\t\t    const gfc_array_i8 *, const char *, const GFC_INTEGER_8 *);\n+void eoshift1_8 (gfc_array_char * const restrict, \n+\tconst gfc_array_char * const restrict,\n+\tconst gfc_array_i8 * const restrict, const char * const restrict, \n+\tconst GFC_INTEGER_8 * const restrict);\n export_proto(eoshift1_8);\n \n void\n-eoshift1_8 (gfc_array_char *ret, const gfc_array_char *array,\n-\t\t       const gfc_array_i8 *h, const char *pbound,\n-\t\t       const GFC_INTEGER_8 *pwhich)\n+eoshift1_8 (gfc_array_char * const restrict ret, \n+\tconst gfc_array_char * const restrict array,\n+\tconst gfc_array_i8 * const restrict h, \n+\tconst char * const restrict pbound,\n+\tconst GFC_INTEGER_8 * const restrict pwhich)\n {\n   eoshift1 (ret, array, h, pbound, pwhich, GFC_DESCRIPTOR_SIZE (array), 0);\n }\n \n-void eoshift1_8_char (gfc_array_char *, GFC_INTEGER_4,\n-\t\t\t\t   const gfc_array_char *, const gfc_array_i8 *,\n-\t\t\t\t   const char *, const GFC_INTEGER_8 *,\n-\t\t\t\t   GFC_INTEGER_4, GFC_INTEGER_4);\n+void eoshift1_8_char (gfc_array_char * const restrict, \n+\tGFC_INTEGER_4,\n+\tconst gfc_array_char * const restrict, \n+\tconst gfc_array_i8 * const restrict,\n+\tconst char * const restrict, \n+\tconst GFC_INTEGER_8 * const restrict,\n+\tGFC_INTEGER_4, GFC_INTEGER_4);\n export_proto(eoshift1_8_char);\n \n void\n-eoshift1_8_char (gfc_array_char *ret,\n-\t\t\t      GFC_INTEGER_4 ret_length __attribute__((unused)),\n-\t\t\t      const gfc_array_char *array, const gfc_array_i8 *h,\n-\t\t\t      const char *pbound, const GFC_INTEGER_8 *pwhich,\n-\t\t\t      GFC_INTEGER_4 array_length,\n-\t\t\t      GFC_INTEGER_4 bound_length\n-\t\t\t\t__attribute__((unused)))\n+eoshift1_8_char (gfc_array_char * const restrict ret,\n+\tGFC_INTEGER_4 ret_length __attribute__((unused)),\n+\tconst gfc_array_char * const restrict array, \n+\tconst gfc_array_i8 * const restrict h,\n+\tconst char *  const restrict pbound, \n+\tconst GFC_INTEGER_8 * const restrict pwhich,\n+\tGFC_INTEGER_4 array_length,\n+\tGFC_INTEGER_4 bound_length __attribute__((unused)))\n {\n   eoshift1 (ret, array, h, pbound, pwhich, array_length, ' ');\n }"}, {"sha": "3a8b046bc8e2c7f085ce93922ed407a740f24b24", "filename": "libgfortran/generated/eoshift3_16.c", "status": "modified", "additions": 31, "deletions": 23, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Feoshift3_16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Feoshift3_16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Feoshift3_16.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -37,9 +37,12 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_INTEGER_16)\n \n static void\n-eoshift3 (gfc_array_char *ret, const gfc_array_char *array, const gfc_array_i16 *h,\n-\t  const gfc_array_char *bound, const GFC_INTEGER_16 *pwhich,\n-\t  index_type size, char filler)\n+eoshift3 (gfc_array_char * const restrict ret, \n+\tconst gfc_array_char * const restrict array, \n+\tconst gfc_array_i16 * const restrict h,\n+\tconst gfc_array_char * const restrict bound, \n+\tconst GFC_INTEGER_16 * const restrict pwhich,\n+\tindex_type size, char filler)\n {\n   /* r.* indicates the return array.  */\n   index_type rstride[GFC_MAX_DIMENSIONS];\n@@ -236,36 +239,41 @@ eoshift3 (gfc_array_char *ret, const gfc_array_char *array, const gfc_array_i16\n     }\n }\n \n-extern void eoshift3_16 (gfc_array_char *, const gfc_array_char *,\n-\t\t\t\t   const gfc_array_i16 *, const gfc_array_char *,\n-\t\t\t\t   const GFC_INTEGER_16 *);\n+extern void eoshift3_16 (gfc_array_char * const restrict, \n+\tconst gfc_array_char * const restrict,\n+\tconst gfc_array_i16 * const restrict, \n+\tconst gfc_array_char * const restrict,\n+\tconst GFC_INTEGER_16 *);\n export_proto(eoshift3_16);\n \n void\n-eoshift3_16 (gfc_array_char *ret, const gfc_array_char *array,\n-\t\t       const gfc_array_i16 *h, const gfc_array_char *bound,\n-\t\t       const GFC_INTEGER_16 *pwhich)\n+eoshift3_16 (gfc_array_char * const restrict ret, \n+\tconst gfc_array_char * const restrict array,\n+\tconst gfc_array_i16 * const restrict h, \n+\tconst gfc_array_char * const restrict bound,\n+\tconst GFC_INTEGER_16 * const restrict pwhich)\n {\n   eoshift3 (ret, array, h, bound, pwhich, GFC_DESCRIPTOR_SIZE (array), 0);\n }\n \n-extern void eoshift3_16_char (gfc_array_char *, GFC_INTEGER_4,\n-\t\t\t\t\t  const gfc_array_char *,\n-\t\t\t\t\t  const gfc_array_i16 *,\n-\t\t\t\t\t  const gfc_array_char *,\n-\t\t\t\t\t  const GFC_INTEGER_16 *, GFC_INTEGER_4,\n-\t\t\t\t\t  GFC_INTEGER_4);\n+extern void eoshift3_16_char (gfc_array_char * const restrict, \n+\tGFC_INTEGER_4,\n+\tconst gfc_array_char * const restrict,\n+\tconst gfc_array_i16 * const restrict,\n+\tconst gfc_array_char * const restrict,\n+\tconst GFC_INTEGER_16 * const restrict, \n+\tGFC_INTEGER_4, GFC_INTEGER_4);\n export_proto(eoshift3_16_char);\n \n void\n-eoshift3_16_char (gfc_array_char *ret,\n-\t\t\t      GFC_INTEGER_4 ret_length __attribute__((unused)),\n-\t\t\t      const gfc_array_char *array, const gfc_array_i16 *h,\n-\t\t\t      const gfc_array_char *bound,\n-\t\t\t      const GFC_INTEGER_16 *pwhich,\n-\t\t\t      GFC_INTEGER_4 array_length,\n-\t\t\t      GFC_INTEGER_4 bound_length\n-\t\t\t\t__attribute__((unused)))\n+eoshift3_16_char (gfc_array_char * const restrict ret,\n+\tGFC_INTEGER_4 ret_length __attribute__((unused)),\n+\tconst gfc_array_char * const restrict array, \n+\tconst gfc_array_i16 *  const restrict h,\n+\tconst gfc_array_char * const restrict bound,\n+\tconst GFC_INTEGER_16 * const restrict pwhich,\n+\tGFC_INTEGER_4 array_length,\n+\tGFC_INTEGER_4 bound_length __attribute__((unused)))\n {\n   eoshift3 (ret, array, h, bound, pwhich, array_length, ' ');\n }"}, {"sha": "cfbf449901e839fcb2d694d3448d080307e1c48d", "filename": "libgfortran/generated/eoshift3_4.c", "status": "modified", "additions": 31, "deletions": 23, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Feoshift3_4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Feoshift3_4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Feoshift3_4.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -37,9 +37,12 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_INTEGER_4)\n \n static void\n-eoshift3 (gfc_array_char *ret, const gfc_array_char *array, const gfc_array_i4 *h,\n-\t  const gfc_array_char *bound, const GFC_INTEGER_4 *pwhich,\n-\t  index_type size, char filler)\n+eoshift3 (gfc_array_char * const restrict ret, \n+\tconst gfc_array_char * const restrict array, \n+\tconst gfc_array_i4 * const restrict h,\n+\tconst gfc_array_char * const restrict bound, \n+\tconst GFC_INTEGER_4 * const restrict pwhich,\n+\tindex_type size, char filler)\n {\n   /* r.* indicates the return array.  */\n   index_type rstride[GFC_MAX_DIMENSIONS];\n@@ -236,36 +239,41 @@ eoshift3 (gfc_array_char *ret, const gfc_array_char *array, const gfc_array_i4 *\n     }\n }\n \n-extern void eoshift3_4 (gfc_array_char *, const gfc_array_char *,\n-\t\t\t\t   const gfc_array_i4 *, const gfc_array_char *,\n-\t\t\t\t   const GFC_INTEGER_4 *);\n+extern void eoshift3_4 (gfc_array_char * const restrict, \n+\tconst gfc_array_char * const restrict,\n+\tconst gfc_array_i4 * const restrict, \n+\tconst gfc_array_char * const restrict,\n+\tconst GFC_INTEGER_4 *);\n export_proto(eoshift3_4);\n \n void\n-eoshift3_4 (gfc_array_char *ret, const gfc_array_char *array,\n-\t\t       const gfc_array_i4 *h, const gfc_array_char *bound,\n-\t\t       const GFC_INTEGER_4 *pwhich)\n+eoshift3_4 (gfc_array_char * const restrict ret, \n+\tconst gfc_array_char * const restrict array,\n+\tconst gfc_array_i4 * const restrict h, \n+\tconst gfc_array_char * const restrict bound,\n+\tconst GFC_INTEGER_4 * const restrict pwhich)\n {\n   eoshift3 (ret, array, h, bound, pwhich, GFC_DESCRIPTOR_SIZE (array), 0);\n }\n \n-extern void eoshift3_4_char (gfc_array_char *, GFC_INTEGER_4,\n-\t\t\t\t\t  const gfc_array_char *,\n-\t\t\t\t\t  const gfc_array_i4 *,\n-\t\t\t\t\t  const gfc_array_char *,\n-\t\t\t\t\t  const GFC_INTEGER_4 *, GFC_INTEGER_4,\n-\t\t\t\t\t  GFC_INTEGER_4);\n+extern void eoshift3_4_char (gfc_array_char * const restrict, \n+\tGFC_INTEGER_4,\n+\tconst gfc_array_char * const restrict,\n+\tconst gfc_array_i4 * const restrict,\n+\tconst gfc_array_char * const restrict,\n+\tconst GFC_INTEGER_4 * const restrict, \n+\tGFC_INTEGER_4, GFC_INTEGER_4);\n export_proto(eoshift3_4_char);\n \n void\n-eoshift3_4_char (gfc_array_char *ret,\n-\t\t\t      GFC_INTEGER_4 ret_length __attribute__((unused)),\n-\t\t\t      const gfc_array_char *array, const gfc_array_i4 *h,\n-\t\t\t      const gfc_array_char *bound,\n-\t\t\t      const GFC_INTEGER_4 *pwhich,\n-\t\t\t      GFC_INTEGER_4 array_length,\n-\t\t\t      GFC_INTEGER_4 bound_length\n-\t\t\t\t__attribute__((unused)))\n+eoshift3_4_char (gfc_array_char * const restrict ret,\n+\tGFC_INTEGER_4 ret_length __attribute__((unused)),\n+\tconst gfc_array_char * const restrict array, \n+\tconst gfc_array_i4 *  const restrict h,\n+\tconst gfc_array_char * const restrict bound,\n+\tconst GFC_INTEGER_4 * const restrict pwhich,\n+\tGFC_INTEGER_4 array_length,\n+\tGFC_INTEGER_4 bound_length __attribute__((unused)))\n {\n   eoshift3 (ret, array, h, bound, pwhich, array_length, ' ');\n }"}, {"sha": "402318ff6069d16dca06ab524451289f0a7397d1", "filename": "libgfortran/generated/eoshift3_8.c", "status": "modified", "additions": 31, "deletions": 23, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Feoshift3_8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Feoshift3_8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Feoshift3_8.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -37,9 +37,12 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_INTEGER_8)\n \n static void\n-eoshift3 (gfc_array_char *ret, const gfc_array_char *array, const gfc_array_i8 *h,\n-\t  const gfc_array_char *bound, const GFC_INTEGER_8 *pwhich,\n-\t  index_type size, char filler)\n+eoshift3 (gfc_array_char * const restrict ret, \n+\tconst gfc_array_char * const restrict array, \n+\tconst gfc_array_i8 * const restrict h,\n+\tconst gfc_array_char * const restrict bound, \n+\tconst GFC_INTEGER_8 * const restrict pwhich,\n+\tindex_type size, char filler)\n {\n   /* r.* indicates the return array.  */\n   index_type rstride[GFC_MAX_DIMENSIONS];\n@@ -236,36 +239,41 @@ eoshift3 (gfc_array_char *ret, const gfc_array_char *array, const gfc_array_i8 *\n     }\n }\n \n-extern void eoshift3_8 (gfc_array_char *, const gfc_array_char *,\n-\t\t\t\t   const gfc_array_i8 *, const gfc_array_char *,\n-\t\t\t\t   const GFC_INTEGER_8 *);\n+extern void eoshift3_8 (gfc_array_char * const restrict, \n+\tconst gfc_array_char * const restrict,\n+\tconst gfc_array_i8 * const restrict, \n+\tconst gfc_array_char * const restrict,\n+\tconst GFC_INTEGER_8 *);\n export_proto(eoshift3_8);\n \n void\n-eoshift3_8 (gfc_array_char *ret, const gfc_array_char *array,\n-\t\t       const gfc_array_i8 *h, const gfc_array_char *bound,\n-\t\t       const GFC_INTEGER_8 *pwhich)\n+eoshift3_8 (gfc_array_char * const restrict ret, \n+\tconst gfc_array_char * const restrict array,\n+\tconst gfc_array_i8 * const restrict h, \n+\tconst gfc_array_char * const restrict bound,\n+\tconst GFC_INTEGER_8 * const restrict pwhich)\n {\n   eoshift3 (ret, array, h, bound, pwhich, GFC_DESCRIPTOR_SIZE (array), 0);\n }\n \n-extern void eoshift3_8_char (gfc_array_char *, GFC_INTEGER_4,\n-\t\t\t\t\t  const gfc_array_char *,\n-\t\t\t\t\t  const gfc_array_i8 *,\n-\t\t\t\t\t  const gfc_array_char *,\n-\t\t\t\t\t  const GFC_INTEGER_8 *, GFC_INTEGER_4,\n-\t\t\t\t\t  GFC_INTEGER_4);\n+extern void eoshift3_8_char (gfc_array_char * const restrict, \n+\tGFC_INTEGER_4,\n+\tconst gfc_array_char * const restrict,\n+\tconst gfc_array_i8 * const restrict,\n+\tconst gfc_array_char * const restrict,\n+\tconst GFC_INTEGER_8 * const restrict, \n+\tGFC_INTEGER_4, GFC_INTEGER_4);\n export_proto(eoshift3_8_char);\n \n void\n-eoshift3_8_char (gfc_array_char *ret,\n-\t\t\t      GFC_INTEGER_4 ret_length __attribute__((unused)),\n-\t\t\t      const gfc_array_char *array, const gfc_array_i8 *h,\n-\t\t\t      const gfc_array_char *bound,\n-\t\t\t      const GFC_INTEGER_8 *pwhich,\n-\t\t\t      GFC_INTEGER_4 array_length,\n-\t\t\t      GFC_INTEGER_4 bound_length\n-\t\t\t\t__attribute__((unused)))\n+eoshift3_8_char (gfc_array_char * const restrict ret,\n+\tGFC_INTEGER_4 ret_length __attribute__((unused)),\n+\tconst gfc_array_char * const restrict array, \n+\tconst gfc_array_i8 *  const restrict h,\n+\tconst gfc_array_char * const restrict bound,\n+\tconst GFC_INTEGER_8 * const restrict pwhich,\n+\tGFC_INTEGER_4 array_length,\n+\tGFC_INTEGER_4 bound_length __attribute__((unused)))\n {\n   eoshift3 (ret, array, h, bound, pwhich, array_length, ' ');\n }"}, {"sha": "f61fe0b78d35bfbd2dfd454284e9e8c68655e8ad", "filename": "libgfortran/generated/maxloc0_16_i16.c", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fmaxloc0_16_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fmaxloc0_16_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_16_i16.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -39,17 +39,19 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_INTEGER_16) && defined (HAVE_GFC_INTEGER_16)\n \n \n-extern void maxloc0_16_i16 (gfc_array_i16 * retarray, gfc_array_i16 *array);\n+extern void maxloc0_16_i16 (gfc_array_i16 * const restrict retarray, \n+\tgfc_array_i16 * const restrict array);\n export_proto(maxloc0_16_i16);\n \n void\n-maxloc0_16_i16 (gfc_array_i16 * retarray, gfc_array_i16 *array)\n+maxloc0_16_i16 (gfc_array_i16 * const restrict retarray, \n+\tgfc_array_i16 * const restrict array)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride;\n-  GFC_INTEGER_16 *base;\n+  const GFC_INTEGER_16 *base;\n   GFC_INTEGER_16 *dest;\n   index_type rank;\n   index_type n;\n@@ -154,20 +156,22 @@ maxloc0_16_i16 (gfc_array_i16 * retarray, gfc_array_i16 *array)\n }\n \n \n-extern void mmaxloc0_16_i16 (gfc_array_i16 *, gfc_array_i16 *, gfc_array_l4 *);\n+extern void mmaxloc0_16_i16 (gfc_array_i16 * const restrict, \n+\tgfc_array_i16 * const restrict, gfc_array_l4 * const restrict);\n export_proto(mmaxloc0_16_i16);\n \n void\n-mmaxloc0_16_i16 (gfc_array_i16 * retarray, gfc_array_i16 *array,\n-\t\t\t\t  gfc_array_l4 * mask)\n+mmaxloc0_16_i16 (gfc_array_i16 * const restrict retarray, \n+\tgfc_array_i16 * const restrict array,\n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n   index_type dstride;\n   GFC_INTEGER_16 *dest;\n-  GFC_INTEGER_16 *base;\n+  const GFC_INTEGER_16 *base;\n   GFC_LOGICAL_4 *mbase;\n   int rank;\n   index_type n;"}, {"sha": "da64cddaa5bf6fc53f364266056fe3395881f42c", "filename": "libgfortran/generated/maxloc0_16_i4.c", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fmaxloc0_16_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fmaxloc0_16_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_16_i4.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -39,17 +39,19 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_INTEGER_4) && defined (HAVE_GFC_INTEGER_16)\n \n \n-extern void maxloc0_16_i4 (gfc_array_i16 * retarray, gfc_array_i4 *array);\n+extern void maxloc0_16_i4 (gfc_array_i16 * const restrict retarray, \n+\tgfc_array_i4 * const restrict array);\n export_proto(maxloc0_16_i4);\n \n void\n-maxloc0_16_i4 (gfc_array_i16 * retarray, gfc_array_i4 *array)\n+maxloc0_16_i4 (gfc_array_i16 * const restrict retarray, \n+\tgfc_array_i4 * const restrict array)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride;\n-  GFC_INTEGER_4 *base;\n+  const GFC_INTEGER_4 *base;\n   GFC_INTEGER_16 *dest;\n   index_type rank;\n   index_type n;\n@@ -154,20 +156,22 @@ maxloc0_16_i4 (gfc_array_i16 * retarray, gfc_array_i4 *array)\n }\n \n \n-extern void mmaxloc0_16_i4 (gfc_array_i16 *, gfc_array_i4 *, gfc_array_l4 *);\n+extern void mmaxloc0_16_i4 (gfc_array_i16 * const restrict, \n+\tgfc_array_i4 * const restrict, gfc_array_l4 * const restrict);\n export_proto(mmaxloc0_16_i4);\n \n void\n-mmaxloc0_16_i4 (gfc_array_i16 * retarray, gfc_array_i4 *array,\n-\t\t\t\t  gfc_array_l4 * mask)\n+mmaxloc0_16_i4 (gfc_array_i16 * const restrict retarray, \n+\tgfc_array_i4 * const restrict array,\n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n   index_type dstride;\n   GFC_INTEGER_16 *dest;\n-  GFC_INTEGER_4 *base;\n+  const GFC_INTEGER_4 *base;\n   GFC_LOGICAL_4 *mbase;\n   int rank;\n   index_type n;"}, {"sha": "07cb378d40dca191b1c25b72c24e04a376fc8841", "filename": "libgfortran/generated/maxloc0_16_i8.c", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fmaxloc0_16_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fmaxloc0_16_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_16_i8.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -39,17 +39,19 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_INTEGER_8) && defined (HAVE_GFC_INTEGER_16)\n \n \n-extern void maxloc0_16_i8 (gfc_array_i16 * retarray, gfc_array_i8 *array);\n+extern void maxloc0_16_i8 (gfc_array_i16 * const restrict retarray, \n+\tgfc_array_i8 * const restrict array);\n export_proto(maxloc0_16_i8);\n \n void\n-maxloc0_16_i8 (gfc_array_i16 * retarray, gfc_array_i8 *array)\n+maxloc0_16_i8 (gfc_array_i16 * const restrict retarray, \n+\tgfc_array_i8 * const restrict array)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride;\n-  GFC_INTEGER_8 *base;\n+  const GFC_INTEGER_8 *base;\n   GFC_INTEGER_16 *dest;\n   index_type rank;\n   index_type n;\n@@ -154,20 +156,22 @@ maxloc0_16_i8 (gfc_array_i16 * retarray, gfc_array_i8 *array)\n }\n \n \n-extern void mmaxloc0_16_i8 (gfc_array_i16 *, gfc_array_i8 *, gfc_array_l4 *);\n+extern void mmaxloc0_16_i8 (gfc_array_i16 * const restrict, \n+\tgfc_array_i8 * const restrict, gfc_array_l4 * const restrict);\n export_proto(mmaxloc0_16_i8);\n \n void\n-mmaxloc0_16_i8 (gfc_array_i16 * retarray, gfc_array_i8 *array,\n-\t\t\t\t  gfc_array_l4 * mask)\n+mmaxloc0_16_i8 (gfc_array_i16 * const restrict retarray, \n+\tgfc_array_i8 * const restrict array,\n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n   index_type dstride;\n   GFC_INTEGER_16 *dest;\n-  GFC_INTEGER_8 *base;\n+  const GFC_INTEGER_8 *base;\n   GFC_LOGICAL_4 *mbase;\n   int rank;\n   index_type n;"}, {"sha": "e8ff7c4aae7da7133e3f258848e5503fc59cb9aa", "filename": "libgfortran/generated/maxloc0_16_r10.c", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fmaxloc0_16_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fmaxloc0_16_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_16_r10.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -39,17 +39,19 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_REAL_10) && defined (HAVE_GFC_INTEGER_16)\n \n \n-extern void maxloc0_16_r10 (gfc_array_i16 * retarray, gfc_array_r10 *array);\n+extern void maxloc0_16_r10 (gfc_array_i16 * const restrict retarray, \n+\tgfc_array_r10 * const restrict array);\n export_proto(maxloc0_16_r10);\n \n void\n-maxloc0_16_r10 (gfc_array_i16 * retarray, gfc_array_r10 *array)\n+maxloc0_16_r10 (gfc_array_i16 * const restrict retarray, \n+\tgfc_array_r10 * const restrict array)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride;\n-  GFC_REAL_10 *base;\n+  const GFC_REAL_10 *base;\n   GFC_INTEGER_16 *dest;\n   index_type rank;\n   index_type n;\n@@ -154,20 +156,22 @@ maxloc0_16_r10 (gfc_array_i16 * retarray, gfc_array_r10 *array)\n }\n \n \n-extern void mmaxloc0_16_r10 (gfc_array_i16 *, gfc_array_r10 *, gfc_array_l4 *);\n+extern void mmaxloc0_16_r10 (gfc_array_i16 * const restrict, \n+\tgfc_array_r10 * const restrict, gfc_array_l4 * const restrict);\n export_proto(mmaxloc0_16_r10);\n \n void\n-mmaxloc0_16_r10 (gfc_array_i16 * retarray, gfc_array_r10 *array,\n-\t\t\t\t  gfc_array_l4 * mask)\n+mmaxloc0_16_r10 (gfc_array_i16 * const restrict retarray, \n+\tgfc_array_r10 * const restrict array,\n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n   index_type dstride;\n   GFC_INTEGER_16 *dest;\n-  GFC_REAL_10 *base;\n+  const GFC_REAL_10 *base;\n   GFC_LOGICAL_4 *mbase;\n   int rank;\n   index_type n;"}, {"sha": "da6a3e9c2fd2be475be3823d3095f1e1ca633025", "filename": "libgfortran/generated/maxloc0_16_r16.c", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fmaxloc0_16_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fmaxloc0_16_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_16_r16.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -39,17 +39,19 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_REAL_16) && defined (HAVE_GFC_INTEGER_16)\n \n \n-extern void maxloc0_16_r16 (gfc_array_i16 * retarray, gfc_array_r16 *array);\n+extern void maxloc0_16_r16 (gfc_array_i16 * const restrict retarray, \n+\tgfc_array_r16 * const restrict array);\n export_proto(maxloc0_16_r16);\n \n void\n-maxloc0_16_r16 (gfc_array_i16 * retarray, gfc_array_r16 *array)\n+maxloc0_16_r16 (gfc_array_i16 * const restrict retarray, \n+\tgfc_array_r16 * const restrict array)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride;\n-  GFC_REAL_16 *base;\n+  const GFC_REAL_16 *base;\n   GFC_INTEGER_16 *dest;\n   index_type rank;\n   index_type n;\n@@ -154,20 +156,22 @@ maxloc0_16_r16 (gfc_array_i16 * retarray, gfc_array_r16 *array)\n }\n \n \n-extern void mmaxloc0_16_r16 (gfc_array_i16 *, gfc_array_r16 *, gfc_array_l4 *);\n+extern void mmaxloc0_16_r16 (gfc_array_i16 * const restrict, \n+\tgfc_array_r16 * const restrict, gfc_array_l4 * const restrict);\n export_proto(mmaxloc0_16_r16);\n \n void\n-mmaxloc0_16_r16 (gfc_array_i16 * retarray, gfc_array_r16 *array,\n-\t\t\t\t  gfc_array_l4 * mask)\n+mmaxloc0_16_r16 (gfc_array_i16 * const restrict retarray, \n+\tgfc_array_r16 * const restrict array,\n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n   index_type dstride;\n   GFC_INTEGER_16 *dest;\n-  GFC_REAL_16 *base;\n+  const GFC_REAL_16 *base;\n   GFC_LOGICAL_4 *mbase;\n   int rank;\n   index_type n;"}, {"sha": "6797bd9d52bf14177e5bedf8beb8d83fd711d1eb", "filename": "libgfortran/generated/maxloc0_16_r4.c", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fmaxloc0_16_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fmaxloc0_16_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_16_r4.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -39,17 +39,19 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_REAL_4) && defined (HAVE_GFC_INTEGER_16)\n \n \n-extern void maxloc0_16_r4 (gfc_array_i16 * retarray, gfc_array_r4 *array);\n+extern void maxloc0_16_r4 (gfc_array_i16 * const restrict retarray, \n+\tgfc_array_r4 * const restrict array);\n export_proto(maxloc0_16_r4);\n \n void\n-maxloc0_16_r4 (gfc_array_i16 * retarray, gfc_array_r4 *array)\n+maxloc0_16_r4 (gfc_array_i16 * const restrict retarray, \n+\tgfc_array_r4 * const restrict array)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride;\n-  GFC_REAL_4 *base;\n+  const GFC_REAL_4 *base;\n   GFC_INTEGER_16 *dest;\n   index_type rank;\n   index_type n;\n@@ -154,20 +156,22 @@ maxloc0_16_r4 (gfc_array_i16 * retarray, gfc_array_r4 *array)\n }\n \n \n-extern void mmaxloc0_16_r4 (gfc_array_i16 *, gfc_array_r4 *, gfc_array_l4 *);\n+extern void mmaxloc0_16_r4 (gfc_array_i16 * const restrict, \n+\tgfc_array_r4 * const restrict, gfc_array_l4 * const restrict);\n export_proto(mmaxloc0_16_r4);\n \n void\n-mmaxloc0_16_r4 (gfc_array_i16 * retarray, gfc_array_r4 *array,\n-\t\t\t\t  gfc_array_l4 * mask)\n+mmaxloc0_16_r4 (gfc_array_i16 * const restrict retarray, \n+\tgfc_array_r4 * const restrict array,\n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n   index_type dstride;\n   GFC_INTEGER_16 *dest;\n-  GFC_REAL_4 *base;\n+  const GFC_REAL_4 *base;\n   GFC_LOGICAL_4 *mbase;\n   int rank;\n   index_type n;"}, {"sha": "f03019bd90bdc7aec5778b34a7b60f7c095de5dd", "filename": "libgfortran/generated/maxloc0_16_r8.c", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fmaxloc0_16_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fmaxloc0_16_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_16_r8.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -39,17 +39,19 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_REAL_8) && defined (HAVE_GFC_INTEGER_16)\n \n \n-extern void maxloc0_16_r8 (gfc_array_i16 * retarray, gfc_array_r8 *array);\n+extern void maxloc0_16_r8 (gfc_array_i16 * const restrict retarray, \n+\tgfc_array_r8 * const restrict array);\n export_proto(maxloc0_16_r8);\n \n void\n-maxloc0_16_r8 (gfc_array_i16 * retarray, gfc_array_r8 *array)\n+maxloc0_16_r8 (gfc_array_i16 * const restrict retarray, \n+\tgfc_array_r8 * const restrict array)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride;\n-  GFC_REAL_8 *base;\n+  const GFC_REAL_8 *base;\n   GFC_INTEGER_16 *dest;\n   index_type rank;\n   index_type n;\n@@ -154,20 +156,22 @@ maxloc0_16_r8 (gfc_array_i16 * retarray, gfc_array_r8 *array)\n }\n \n \n-extern void mmaxloc0_16_r8 (gfc_array_i16 *, gfc_array_r8 *, gfc_array_l4 *);\n+extern void mmaxloc0_16_r8 (gfc_array_i16 * const restrict, \n+\tgfc_array_r8 * const restrict, gfc_array_l4 * const restrict);\n export_proto(mmaxloc0_16_r8);\n \n void\n-mmaxloc0_16_r8 (gfc_array_i16 * retarray, gfc_array_r8 *array,\n-\t\t\t\t  gfc_array_l4 * mask)\n+mmaxloc0_16_r8 (gfc_array_i16 * const restrict retarray, \n+\tgfc_array_r8 * const restrict array,\n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n   index_type dstride;\n   GFC_INTEGER_16 *dest;\n-  GFC_REAL_8 *base;\n+  const GFC_REAL_8 *base;\n   GFC_LOGICAL_4 *mbase;\n   int rank;\n   index_type n;"}, {"sha": "aa1c0c0d514011e4b056379e10234aa78a4eb66e", "filename": "libgfortran/generated/maxloc0_4_i16.c", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fmaxloc0_4_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fmaxloc0_4_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_4_i16.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -39,17 +39,19 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_INTEGER_16) && defined (HAVE_GFC_INTEGER_4)\n \n \n-extern void maxloc0_4_i16 (gfc_array_i4 * retarray, gfc_array_i16 *array);\n+extern void maxloc0_4_i16 (gfc_array_i4 * const restrict retarray, \n+\tgfc_array_i16 * const restrict array);\n export_proto(maxloc0_4_i16);\n \n void\n-maxloc0_4_i16 (gfc_array_i4 * retarray, gfc_array_i16 *array)\n+maxloc0_4_i16 (gfc_array_i4 * const restrict retarray, \n+\tgfc_array_i16 * const restrict array)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride;\n-  GFC_INTEGER_16 *base;\n+  const GFC_INTEGER_16 *base;\n   GFC_INTEGER_4 *dest;\n   index_type rank;\n   index_type n;\n@@ -154,20 +156,22 @@ maxloc0_4_i16 (gfc_array_i4 * retarray, gfc_array_i16 *array)\n }\n \n \n-extern void mmaxloc0_4_i16 (gfc_array_i4 *, gfc_array_i16 *, gfc_array_l4 *);\n+extern void mmaxloc0_4_i16 (gfc_array_i4 * const restrict, \n+\tgfc_array_i16 * const restrict, gfc_array_l4 * const restrict);\n export_proto(mmaxloc0_4_i16);\n \n void\n-mmaxloc0_4_i16 (gfc_array_i4 * retarray, gfc_array_i16 *array,\n-\t\t\t\t  gfc_array_l4 * mask)\n+mmaxloc0_4_i16 (gfc_array_i4 * const restrict retarray, \n+\tgfc_array_i16 * const restrict array,\n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n   index_type dstride;\n   GFC_INTEGER_4 *dest;\n-  GFC_INTEGER_16 *base;\n+  const GFC_INTEGER_16 *base;\n   GFC_LOGICAL_4 *mbase;\n   int rank;\n   index_type n;"}, {"sha": "e95e040538fac07ea9e82275e1e9f88003b244e4", "filename": "libgfortran/generated/maxloc0_4_i4.c", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fmaxloc0_4_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fmaxloc0_4_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_4_i4.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -39,17 +39,19 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_INTEGER_4) && defined (HAVE_GFC_INTEGER_4)\n \n \n-extern void maxloc0_4_i4 (gfc_array_i4 * retarray, gfc_array_i4 *array);\n+extern void maxloc0_4_i4 (gfc_array_i4 * const restrict retarray, \n+\tgfc_array_i4 * const restrict array);\n export_proto(maxloc0_4_i4);\n \n void\n-maxloc0_4_i4 (gfc_array_i4 * retarray, gfc_array_i4 *array)\n+maxloc0_4_i4 (gfc_array_i4 * const restrict retarray, \n+\tgfc_array_i4 * const restrict array)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride;\n-  GFC_INTEGER_4 *base;\n+  const GFC_INTEGER_4 *base;\n   GFC_INTEGER_4 *dest;\n   index_type rank;\n   index_type n;\n@@ -154,20 +156,22 @@ maxloc0_4_i4 (gfc_array_i4 * retarray, gfc_array_i4 *array)\n }\n \n \n-extern void mmaxloc0_4_i4 (gfc_array_i4 *, gfc_array_i4 *, gfc_array_l4 *);\n+extern void mmaxloc0_4_i4 (gfc_array_i4 * const restrict, \n+\tgfc_array_i4 * const restrict, gfc_array_l4 * const restrict);\n export_proto(mmaxloc0_4_i4);\n \n void\n-mmaxloc0_4_i4 (gfc_array_i4 * retarray, gfc_array_i4 *array,\n-\t\t\t\t  gfc_array_l4 * mask)\n+mmaxloc0_4_i4 (gfc_array_i4 * const restrict retarray, \n+\tgfc_array_i4 * const restrict array,\n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n   index_type dstride;\n   GFC_INTEGER_4 *dest;\n-  GFC_INTEGER_4 *base;\n+  const GFC_INTEGER_4 *base;\n   GFC_LOGICAL_4 *mbase;\n   int rank;\n   index_type n;"}, {"sha": "94c4997139a156177c139cc9584be6fa59ea217a", "filename": "libgfortran/generated/maxloc0_4_i8.c", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fmaxloc0_4_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fmaxloc0_4_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_4_i8.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -39,17 +39,19 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_INTEGER_8) && defined (HAVE_GFC_INTEGER_4)\n \n \n-extern void maxloc0_4_i8 (gfc_array_i4 * retarray, gfc_array_i8 *array);\n+extern void maxloc0_4_i8 (gfc_array_i4 * const restrict retarray, \n+\tgfc_array_i8 * const restrict array);\n export_proto(maxloc0_4_i8);\n \n void\n-maxloc0_4_i8 (gfc_array_i4 * retarray, gfc_array_i8 *array)\n+maxloc0_4_i8 (gfc_array_i4 * const restrict retarray, \n+\tgfc_array_i8 * const restrict array)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride;\n-  GFC_INTEGER_8 *base;\n+  const GFC_INTEGER_8 *base;\n   GFC_INTEGER_4 *dest;\n   index_type rank;\n   index_type n;\n@@ -154,20 +156,22 @@ maxloc0_4_i8 (gfc_array_i4 * retarray, gfc_array_i8 *array)\n }\n \n \n-extern void mmaxloc0_4_i8 (gfc_array_i4 *, gfc_array_i8 *, gfc_array_l4 *);\n+extern void mmaxloc0_4_i8 (gfc_array_i4 * const restrict, \n+\tgfc_array_i8 * const restrict, gfc_array_l4 * const restrict);\n export_proto(mmaxloc0_4_i8);\n \n void\n-mmaxloc0_4_i8 (gfc_array_i4 * retarray, gfc_array_i8 *array,\n-\t\t\t\t  gfc_array_l4 * mask)\n+mmaxloc0_4_i8 (gfc_array_i4 * const restrict retarray, \n+\tgfc_array_i8 * const restrict array,\n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n   index_type dstride;\n   GFC_INTEGER_4 *dest;\n-  GFC_INTEGER_8 *base;\n+  const GFC_INTEGER_8 *base;\n   GFC_LOGICAL_4 *mbase;\n   int rank;\n   index_type n;"}, {"sha": "4e9dead2e93032e83a63d1385a03b68804b0c894", "filename": "libgfortran/generated/maxloc0_4_r10.c", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fmaxloc0_4_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fmaxloc0_4_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_4_r10.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -39,17 +39,19 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_REAL_10) && defined (HAVE_GFC_INTEGER_4)\n \n \n-extern void maxloc0_4_r10 (gfc_array_i4 * retarray, gfc_array_r10 *array);\n+extern void maxloc0_4_r10 (gfc_array_i4 * const restrict retarray, \n+\tgfc_array_r10 * const restrict array);\n export_proto(maxloc0_4_r10);\n \n void\n-maxloc0_4_r10 (gfc_array_i4 * retarray, gfc_array_r10 *array)\n+maxloc0_4_r10 (gfc_array_i4 * const restrict retarray, \n+\tgfc_array_r10 * const restrict array)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride;\n-  GFC_REAL_10 *base;\n+  const GFC_REAL_10 *base;\n   GFC_INTEGER_4 *dest;\n   index_type rank;\n   index_type n;\n@@ -154,20 +156,22 @@ maxloc0_4_r10 (gfc_array_i4 * retarray, gfc_array_r10 *array)\n }\n \n \n-extern void mmaxloc0_4_r10 (gfc_array_i4 *, gfc_array_r10 *, gfc_array_l4 *);\n+extern void mmaxloc0_4_r10 (gfc_array_i4 * const restrict, \n+\tgfc_array_r10 * const restrict, gfc_array_l4 * const restrict);\n export_proto(mmaxloc0_4_r10);\n \n void\n-mmaxloc0_4_r10 (gfc_array_i4 * retarray, gfc_array_r10 *array,\n-\t\t\t\t  gfc_array_l4 * mask)\n+mmaxloc0_4_r10 (gfc_array_i4 * const restrict retarray, \n+\tgfc_array_r10 * const restrict array,\n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n   index_type dstride;\n   GFC_INTEGER_4 *dest;\n-  GFC_REAL_10 *base;\n+  const GFC_REAL_10 *base;\n   GFC_LOGICAL_4 *mbase;\n   int rank;\n   index_type n;"}, {"sha": "6059c8793f8a1ccf17513c6c281af8238029dc82", "filename": "libgfortran/generated/maxloc0_4_r16.c", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fmaxloc0_4_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fmaxloc0_4_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_4_r16.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -39,17 +39,19 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_REAL_16) && defined (HAVE_GFC_INTEGER_4)\n \n \n-extern void maxloc0_4_r16 (gfc_array_i4 * retarray, gfc_array_r16 *array);\n+extern void maxloc0_4_r16 (gfc_array_i4 * const restrict retarray, \n+\tgfc_array_r16 * const restrict array);\n export_proto(maxloc0_4_r16);\n \n void\n-maxloc0_4_r16 (gfc_array_i4 * retarray, gfc_array_r16 *array)\n+maxloc0_4_r16 (gfc_array_i4 * const restrict retarray, \n+\tgfc_array_r16 * const restrict array)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride;\n-  GFC_REAL_16 *base;\n+  const GFC_REAL_16 *base;\n   GFC_INTEGER_4 *dest;\n   index_type rank;\n   index_type n;\n@@ -154,20 +156,22 @@ maxloc0_4_r16 (gfc_array_i4 * retarray, gfc_array_r16 *array)\n }\n \n \n-extern void mmaxloc0_4_r16 (gfc_array_i4 *, gfc_array_r16 *, gfc_array_l4 *);\n+extern void mmaxloc0_4_r16 (gfc_array_i4 * const restrict, \n+\tgfc_array_r16 * const restrict, gfc_array_l4 * const restrict);\n export_proto(mmaxloc0_4_r16);\n \n void\n-mmaxloc0_4_r16 (gfc_array_i4 * retarray, gfc_array_r16 *array,\n-\t\t\t\t  gfc_array_l4 * mask)\n+mmaxloc0_4_r16 (gfc_array_i4 * const restrict retarray, \n+\tgfc_array_r16 * const restrict array,\n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n   index_type dstride;\n   GFC_INTEGER_4 *dest;\n-  GFC_REAL_16 *base;\n+  const GFC_REAL_16 *base;\n   GFC_LOGICAL_4 *mbase;\n   int rank;\n   index_type n;"}, {"sha": "260c3d35e666793d3f6419e8476de86e46878c23", "filename": "libgfortran/generated/maxloc0_4_r4.c", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fmaxloc0_4_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fmaxloc0_4_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_4_r4.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -39,17 +39,19 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_REAL_4) && defined (HAVE_GFC_INTEGER_4)\n \n \n-extern void maxloc0_4_r4 (gfc_array_i4 * retarray, gfc_array_r4 *array);\n+extern void maxloc0_4_r4 (gfc_array_i4 * const restrict retarray, \n+\tgfc_array_r4 * const restrict array);\n export_proto(maxloc0_4_r4);\n \n void\n-maxloc0_4_r4 (gfc_array_i4 * retarray, gfc_array_r4 *array)\n+maxloc0_4_r4 (gfc_array_i4 * const restrict retarray, \n+\tgfc_array_r4 * const restrict array)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride;\n-  GFC_REAL_4 *base;\n+  const GFC_REAL_4 *base;\n   GFC_INTEGER_4 *dest;\n   index_type rank;\n   index_type n;\n@@ -154,20 +156,22 @@ maxloc0_4_r4 (gfc_array_i4 * retarray, gfc_array_r4 *array)\n }\n \n \n-extern void mmaxloc0_4_r4 (gfc_array_i4 *, gfc_array_r4 *, gfc_array_l4 *);\n+extern void mmaxloc0_4_r4 (gfc_array_i4 * const restrict, \n+\tgfc_array_r4 * const restrict, gfc_array_l4 * const restrict);\n export_proto(mmaxloc0_4_r4);\n \n void\n-mmaxloc0_4_r4 (gfc_array_i4 * retarray, gfc_array_r4 *array,\n-\t\t\t\t  gfc_array_l4 * mask)\n+mmaxloc0_4_r4 (gfc_array_i4 * const restrict retarray, \n+\tgfc_array_r4 * const restrict array,\n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n   index_type dstride;\n   GFC_INTEGER_4 *dest;\n-  GFC_REAL_4 *base;\n+  const GFC_REAL_4 *base;\n   GFC_LOGICAL_4 *mbase;\n   int rank;\n   index_type n;"}, {"sha": "001b6bf2436f1e31fce7b68ae7dd740d58d88961", "filename": "libgfortran/generated/maxloc0_4_r8.c", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fmaxloc0_4_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fmaxloc0_4_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_4_r8.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -39,17 +39,19 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_REAL_8) && defined (HAVE_GFC_INTEGER_4)\n \n \n-extern void maxloc0_4_r8 (gfc_array_i4 * retarray, gfc_array_r8 *array);\n+extern void maxloc0_4_r8 (gfc_array_i4 * const restrict retarray, \n+\tgfc_array_r8 * const restrict array);\n export_proto(maxloc0_4_r8);\n \n void\n-maxloc0_4_r8 (gfc_array_i4 * retarray, gfc_array_r8 *array)\n+maxloc0_4_r8 (gfc_array_i4 * const restrict retarray, \n+\tgfc_array_r8 * const restrict array)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride;\n-  GFC_REAL_8 *base;\n+  const GFC_REAL_8 *base;\n   GFC_INTEGER_4 *dest;\n   index_type rank;\n   index_type n;\n@@ -154,20 +156,22 @@ maxloc0_4_r8 (gfc_array_i4 * retarray, gfc_array_r8 *array)\n }\n \n \n-extern void mmaxloc0_4_r8 (gfc_array_i4 *, gfc_array_r8 *, gfc_array_l4 *);\n+extern void mmaxloc0_4_r8 (gfc_array_i4 * const restrict, \n+\tgfc_array_r8 * const restrict, gfc_array_l4 * const restrict);\n export_proto(mmaxloc0_4_r8);\n \n void\n-mmaxloc0_4_r8 (gfc_array_i4 * retarray, gfc_array_r8 *array,\n-\t\t\t\t  gfc_array_l4 * mask)\n+mmaxloc0_4_r8 (gfc_array_i4 * const restrict retarray, \n+\tgfc_array_r8 * const restrict array,\n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n   index_type dstride;\n   GFC_INTEGER_4 *dest;\n-  GFC_REAL_8 *base;\n+  const GFC_REAL_8 *base;\n   GFC_LOGICAL_4 *mbase;\n   int rank;\n   index_type n;"}, {"sha": "273ceb7c55823ac6dff6d409ac67e57195d79be1", "filename": "libgfortran/generated/maxloc0_8_i16.c", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fmaxloc0_8_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fmaxloc0_8_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_8_i16.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -39,17 +39,19 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_INTEGER_16) && defined (HAVE_GFC_INTEGER_8)\n \n \n-extern void maxloc0_8_i16 (gfc_array_i8 * retarray, gfc_array_i16 *array);\n+extern void maxloc0_8_i16 (gfc_array_i8 * const restrict retarray, \n+\tgfc_array_i16 * const restrict array);\n export_proto(maxloc0_8_i16);\n \n void\n-maxloc0_8_i16 (gfc_array_i8 * retarray, gfc_array_i16 *array)\n+maxloc0_8_i16 (gfc_array_i8 * const restrict retarray, \n+\tgfc_array_i16 * const restrict array)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride;\n-  GFC_INTEGER_16 *base;\n+  const GFC_INTEGER_16 *base;\n   GFC_INTEGER_8 *dest;\n   index_type rank;\n   index_type n;\n@@ -154,20 +156,22 @@ maxloc0_8_i16 (gfc_array_i8 * retarray, gfc_array_i16 *array)\n }\n \n \n-extern void mmaxloc0_8_i16 (gfc_array_i8 *, gfc_array_i16 *, gfc_array_l4 *);\n+extern void mmaxloc0_8_i16 (gfc_array_i8 * const restrict, \n+\tgfc_array_i16 * const restrict, gfc_array_l4 * const restrict);\n export_proto(mmaxloc0_8_i16);\n \n void\n-mmaxloc0_8_i16 (gfc_array_i8 * retarray, gfc_array_i16 *array,\n-\t\t\t\t  gfc_array_l4 * mask)\n+mmaxloc0_8_i16 (gfc_array_i8 * const restrict retarray, \n+\tgfc_array_i16 * const restrict array,\n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n   index_type dstride;\n   GFC_INTEGER_8 *dest;\n-  GFC_INTEGER_16 *base;\n+  const GFC_INTEGER_16 *base;\n   GFC_LOGICAL_4 *mbase;\n   int rank;\n   index_type n;"}, {"sha": "4860ccc2253b426496ae35c7ee24ca31d3d09647", "filename": "libgfortran/generated/maxloc0_8_i4.c", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fmaxloc0_8_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fmaxloc0_8_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_8_i4.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -39,17 +39,19 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_INTEGER_4) && defined (HAVE_GFC_INTEGER_8)\n \n \n-extern void maxloc0_8_i4 (gfc_array_i8 * retarray, gfc_array_i4 *array);\n+extern void maxloc0_8_i4 (gfc_array_i8 * const restrict retarray, \n+\tgfc_array_i4 * const restrict array);\n export_proto(maxloc0_8_i4);\n \n void\n-maxloc0_8_i4 (gfc_array_i8 * retarray, gfc_array_i4 *array)\n+maxloc0_8_i4 (gfc_array_i8 * const restrict retarray, \n+\tgfc_array_i4 * const restrict array)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride;\n-  GFC_INTEGER_4 *base;\n+  const GFC_INTEGER_4 *base;\n   GFC_INTEGER_8 *dest;\n   index_type rank;\n   index_type n;\n@@ -154,20 +156,22 @@ maxloc0_8_i4 (gfc_array_i8 * retarray, gfc_array_i4 *array)\n }\n \n \n-extern void mmaxloc0_8_i4 (gfc_array_i8 *, gfc_array_i4 *, gfc_array_l4 *);\n+extern void mmaxloc0_8_i4 (gfc_array_i8 * const restrict, \n+\tgfc_array_i4 * const restrict, gfc_array_l4 * const restrict);\n export_proto(mmaxloc0_8_i4);\n \n void\n-mmaxloc0_8_i4 (gfc_array_i8 * retarray, gfc_array_i4 *array,\n-\t\t\t\t  gfc_array_l4 * mask)\n+mmaxloc0_8_i4 (gfc_array_i8 * const restrict retarray, \n+\tgfc_array_i4 * const restrict array,\n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n   index_type dstride;\n   GFC_INTEGER_8 *dest;\n-  GFC_INTEGER_4 *base;\n+  const GFC_INTEGER_4 *base;\n   GFC_LOGICAL_4 *mbase;\n   int rank;\n   index_type n;"}, {"sha": "786bf70a295a8d219d827e4e125b821ff55fe39c", "filename": "libgfortran/generated/maxloc0_8_i8.c", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fmaxloc0_8_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fmaxloc0_8_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_8_i8.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -39,17 +39,19 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_INTEGER_8) && defined (HAVE_GFC_INTEGER_8)\n \n \n-extern void maxloc0_8_i8 (gfc_array_i8 * retarray, gfc_array_i8 *array);\n+extern void maxloc0_8_i8 (gfc_array_i8 * const restrict retarray, \n+\tgfc_array_i8 * const restrict array);\n export_proto(maxloc0_8_i8);\n \n void\n-maxloc0_8_i8 (gfc_array_i8 * retarray, gfc_array_i8 *array)\n+maxloc0_8_i8 (gfc_array_i8 * const restrict retarray, \n+\tgfc_array_i8 * const restrict array)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride;\n-  GFC_INTEGER_8 *base;\n+  const GFC_INTEGER_8 *base;\n   GFC_INTEGER_8 *dest;\n   index_type rank;\n   index_type n;\n@@ -154,20 +156,22 @@ maxloc0_8_i8 (gfc_array_i8 * retarray, gfc_array_i8 *array)\n }\n \n \n-extern void mmaxloc0_8_i8 (gfc_array_i8 *, gfc_array_i8 *, gfc_array_l4 *);\n+extern void mmaxloc0_8_i8 (gfc_array_i8 * const restrict, \n+\tgfc_array_i8 * const restrict, gfc_array_l4 * const restrict);\n export_proto(mmaxloc0_8_i8);\n \n void\n-mmaxloc0_8_i8 (gfc_array_i8 * retarray, gfc_array_i8 *array,\n-\t\t\t\t  gfc_array_l4 * mask)\n+mmaxloc0_8_i8 (gfc_array_i8 * const restrict retarray, \n+\tgfc_array_i8 * const restrict array,\n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n   index_type dstride;\n   GFC_INTEGER_8 *dest;\n-  GFC_INTEGER_8 *base;\n+  const GFC_INTEGER_8 *base;\n   GFC_LOGICAL_4 *mbase;\n   int rank;\n   index_type n;"}, {"sha": "566757febc7d146fe805ff7f5f94b3536f9beea4", "filename": "libgfortran/generated/maxloc0_8_r10.c", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fmaxloc0_8_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fmaxloc0_8_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_8_r10.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -39,17 +39,19 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_REAL_10) && defined (HAVE_GFC_INTEGER_8)\n \n \n-extern void maxloc0_8_r10 (gfc_array_i8 * retarray, gfc_array_r10 *array);\n+extern void maxloc0_8_r10 (gfc_array_i8 * const restrict retarray, \n+\tgfc_array_r10 * const restrict array);\n export_proto(maxloc0_8_r10);\n \n void\n-maxloc0_8_r10 (gfc_array_i8 * retarray, gfc_array_r10 *array)\n+maxloc0_8_r10 (gfc_array_i8 * const restrict retarray, \n+\tgfc_array_r10 * const restrict array)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride;\n-  GFC_REAL_10 *base;\n+  const GFC_REAL_10 *base;\n   GFC_INTEGER_8 *dest;\n   index_type rank;\n   index_type n;\n@@ -154,20 +156,22 @@ maxloc0_8_r10 (gfc_array_i8 * retarray, gfc_array_r10 *array)\n }\n \n \n-extern void mmaxloc0_8_r10 (gfc_array_i8 *, gfc_array_r10 *, gfc_array_l4 *);\n+extern void mmaxloc0_8_r10 (gfc_array_i8 * const restrict, \n+\tgfc_array_r10 * const restrict, gfc_array_l4 * const restrict);\n export_proto(mmaxloc0_8_r10);\n \n void\n-mmaxloc0_8_r10 (gfc_array_i8 * retarray, gfc_array_r10 *array,\n-\t\t\t\t  gfc_array_l4 * mask)\n+mmaxloc0_8_r10 (gfc_array_i8 * const restrict retarray, \n+\tgfc_array_r10 * const restrict array,\n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n   index_type dstride;\n   GFC_INTEGER_8 *dest;\n-  GFC_REAL_10 *base;\n+  const GFC_REAL_10 *base;\n   GFC_LOGICAL_4 *mbase;\n   int rank;\n   index_type n;"}, {"sha": "d5232a48248fb0b10119b551ad706d5cbc2fb2cf", "filename": "libgfortran/generated/maxloc0_8_r16.c", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fmaxloc0_8_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fmaxloc0_8_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_8_r16.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -39,17 +39,19 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_REAL_16) && defined (HAVE_GFC_INTEGER_8)\n \n \n-extern void maxloc0_8_r16 (gfc_array_i8 * retarray, gfc_array_r16 *array);\n+extern void maxloc0_8_r16 (gfc_array_i8 * const restrict retarray, \n+\tgfc_array_r16 * const restrict array);\n export_proto(maxloc0_8_r16);\n \n void\n-maxloc0_8_r16 (gfc_array_i8 * retarray, gfc_array_r16 *array)\n+maxloc0_8_r16 (gfc_array_i8 * const restrict retarray, \n+\tgfc_array_r16 * const restrict array)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride;\n-  GFC_REAL_16 *base;\n+  const GFC_REAL_16 *base;\n   GFC_INTEGER_8 *dest;\n   index_type rank;\n   index_type n;\n@@ -154,20 +156,22 @@ maxloc0_8_r16 (gfc_array_i8 * retarray, gfc_array_r16 *array)\n }\n \n \n-extern void mmaxloc0_8_r16 (gfc_array_i8 *, gfc_array_r16 *, gfc_array_l4 *);\n+extern void mmaxloc0_8_r16 (gfc_array_i8 * const restrict, \n+\tgfc_array_r16 * const restrict, gfc_array_l4 * const restrict);\n export_proto(mmaxloc0_8_r16);\n \n void\n-mmaxloc0_8_r16 (gfc_array_i8 * retarray, gfc_array_r16 *array,\n-\t\t\t\t  gfc_array_l4 * mask)\n+mmaxloc0_8_r16 (gfc_array_i8 * const restrict retarray, \n+\tgfc_array_r16 * const restrict array,\n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n   index_type dstride;\n   GFC_INTEGER_8 *dest;\n-  GFC_REAL_16 *base;\n+  const GFC_REAL_16 *base;\n   GFC_LOGICAL_4 *mbase;\n   int rank;\n   index_type n;"}, {"sha": "1effd3a277f96e6ce86f33d5589b7e70e1b0c7fe", "filename": "libgfortran/generated/maxloc0_8_r4.c", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fmaxloc0_8_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fmaxloc0_8_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_8_r4.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -39,17 +39,19 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_REAL_4) && defined (HAVE_GFC_INTEGER_8)\n \n \n-extern void maxloc0_8_r4 (gfc_array_i8 * retarray, gfc_array_r4 *array);\n+extern void maxloc0_8_r4 (gfc_array_i8 * const restrict retarray, \n+\tgfc_array_r4 * const restrict array);\n export_proto(maxloc0_8_r4);\n \n void\n-maxloc0_8_r4 (gfc_array_i8 * retarray, gfc_array_r4 *array)\n+maxloc0_8_r4 (gfc_array_i8 * const restrict retarray, \n+\tgfc_array_r4 * const restrict array)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride;\n-  GFC_REAL_4 *base;\n+  const GFC_REAL_4 *base;\n   GFC_INTEGER_8 *dest;\n   index_type rank;\n   index_type n;\n@@ -154,20 +156,22 @@ maxloc0_8_r4 (gfc_array_i8 * retarray, gfc_array_r4 *array)\n }\n \n \n-extern void mmaxloc0_8_r4 (gfc_array_i8 *, gfc_array_r4 *, gfc_array_l4 *);\n+extern void mmaxloc0_8_r4 (gfc_array_i8 * const restrict, \n+\tgfc_array_r4 * const restrict, gfc_array_l4 * const restrict);\n export_proto(mmaxloc0_8_r4);\n \n void\n-mmaxloc0_8_r4 (gfc_array_i8 * retarray, gfc_array_r4 *array,\n-\t\t\t\t  gfc_array_l4 * mask)\n+mmaxloc0_8_r4 (gfc_array_i8 * const restrict retarray, \n+\tgfc_array_r4 * const restrict array,\n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n   index_type dstride;\n   GFC_INTEGER_8 *dest;\n-  GFC_REAL_4 *base;\n+  const GFC_REAL_4 *base;\n   GFC_LOGICAL_4 *mbase;\n   int rank;\n   index_type n;"}, {"sha": "18b7687d0c8c276e5ce038c33f2a3e9d336f91e0", "filename": "libgfortran/generated/maxloc0_8_r8.c", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fmaxloc0_8_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fmaxloc0_8_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_8_r8.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -39,17 +39,19 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_REAL_8) && defined (HAVE_GFC_INTEGER_8)\n \n \n-extern void maxloc0_8_r8 (gfc_array_i8 * retarray, gfc_array_r8 *array);\n+extern void maxloc0_8_r8 (gfc_array_i8 * const restrict retarray, \n+\tgfc_array_r8 * const restrict array);\n export_proto(maxloc0_8_r8);\n \n void\n-maxloc0_8_r8 (gfc_array_i8 * retarray, gfc_array_r8 *array)\n+maxloc0_8_r8 (gfc_array_i8 * const restrict retarray, \n+\tgfc_array_r8 * const restrict array)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride;\n-  GFC_REAL_8 *base;\n+  const GFC_REAL_8 *base;\n   GFC_INTEGER_8 *dest;\n   index_type rank;\n   index_type n;\n@@ -154,20 +156,22 @@ maxloc0_8_r8 (gfc_array_i8 * retarray, gfc_array_r8 *array)\n }\n \n \n-extern void mmaxloc0_8_r8 (gfc_array_i8 *, gfc_array_r8 *, gfc_array_l4 *);\n+extern void mmaxloc0_8_r8 (gfc_array_i8 * const restrict, \n+\tgfc_array_r8 * const restrict, gfc_array_l4 * const restrict);\n export_proto(mmaxloc0_8_r8);\n \n void\n-mmaxloc0_8_r8 (gfc_array_i8 * retarray, gfc_array_r8 *array,\n-\t\t\t\t  gfc_array_l4 * mask)\n+mmaxloc0_8_r8 (gfc_array_i8 * const restrict retarray, \n+\tgfc_array_r8 * const restrict array,\n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n   index_type dstride;\n   GFC_INTEGER_8 *dest;\n-  GFC_REAL_8 *base;\n+  const GFC_REAL_8 *base;\n   GFC_LOGICAL_4 *mbase;\n   int rank;\n   index_type n;"}, {"sha": "430e6eedcf4b4011c1f2fe00f86f51cbf57648ad", "filename": "libgfortran/generated/maxloc1_16_i16.c", "status": "modified", "additions": 20, "deletions": 14, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fmaxloc1_16_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fmaxloc1_16_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_16_i16.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -39,18 +39,21 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_INTEGER_16) && defined (HAVE_GFC_INTEGER_16)\n \n \n-extern void maxloc1_16_i16 (gfc_array_i16 *, gfc_array_i16 *, index_type *);\n+extern void maxloc1_16_i16 (gfc_array_i16 * const restrict, \n+\tgfc_array_i16 * const restrict, const index_type * const restrict);\n export_proto(maxloc1_16_i16);\n \n void\n-maxloc1_16_i16 (gfc_array_i16 *retarray, gfc_array_i16 *array, index_type *pdim)\n+maxloc1_16_i16 (gfc_array_i16 * const restrict retarray, \n+\tgfc_array_i16 * const restrict array, \n+\tconst index_type * const restrict pdim)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n-  GFC_INTEGER_16 *base;\n-  GFC_INTEGER_16 *dest;\n+  const GFC_INTEGER_16 * restrict base;\n+  GFC_INTEGER_16 * restrict dest;\n   index_type rank;\n   index_type n;\n   index_type len;\n@@ -122,7 +125,7 @@ maxloc1_16_i16 (gfc_array_i16 *retarray, gfc_array_i16 *array, index_type *pdim)\n \n   while (base)\n     {\n-      GFC_INTEGER_16 *src;\n+      const GFC_INTEGER_16 * restrict src;\n       GFC_INTEGER_16 result;\n       src = base;\n       {\n@@ -178,22 +181,25 @@ maxloc1_16_i16 (gfc_array_i16 *retarray, gfc_array_i16 *array, index_type *pdim)\n }\n \n \n-extern void mmaxloc1_16_i16 (gfc_array_i16 *, gfc_array_i16 *, index_type *,\n-\t\t\t\t\t       gfc_array_l4 *);\n+extern void mmaxloc1_16_i16 (gfc_array_i16 * const restrict, \n+\tgfc_array_i16 * const restrict, const index_type * const restrict,\n+\tgfc_array_l4 * const restrict);\n export_proto(mmaxloc1_16_i16);\n \n void\n-mmaxloc1_16_i16 (gfc_array_i16 * retarray, gfc_array_i16 * array,\n-\t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n+mmaxloc1_16_i16 (gfc_array_i16 * const restrict retarray, \n+\tgfc_array_i16 * const restrict array, \n+\tconst index_type * const restrict pdim, \n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n-  GFC_INTEGER_16 *dest;\n-  GFC_INTEGER_16 *base;\n-  GFC_LOGICAL_4 *mbase;\n+  GFC_INTEGER_16 * restrict dest;\n+  const GFC_INTEGER_16 * restrict base;\n+  const GFC_LOGICAL_4 * restrict mbase;\n   int rank;\n   int dim;\n   index_type n;\n@@ -284,8 +290,8 @@ mmaxloc1_16_i16 (gfc_array_i16 * retarray, gfc_array_i16 * array,\n \n   while (base)\n     {\n-      GFC_INTEGER_16 *src;\n-      GFC_LOGICAL_4 *msrc;\n+      const GFC_INTEGER_16 * restrict src;\n+      const GFC_LOGICAL_4 * restrict msrc;\n       GFC_INTEGER_16 result;\n       src = base;\n       msrc = mbase;"}, {"sha": "458b72e7d721882c04bbc6ba64ec50d9d07aa4db", "filename": "libgfortran/generated/maxloc1_16_i4.c", "status": "modified", "additions": 20, "deletions": 14, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fmaxloc1_16_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fmaxloc1_16_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_16_i4.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -39,18 +39,21 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_INTEGER_4) && defined (HAVE_GFC_INTEGER_16)\n \n \n-extern void maxloc1_16_i4 (gfc_array_i16 *, gfc_array_i4 *, index_type *);\n+extern void maxloc1_16_i4 (gfc_array_i16 * const restrict, \n+\tgfc_array_i4 * const restrict, const index_type * const restrict);\n export_proto(maxloc1_16_i4);\n \n void\n-maxloc1_16_i4 (gfc_array_i16 *retarray, gfc_array_i4 *array, index_type *pdim)\n+maxloc1_16_i4 (gfc_array_i16 * const restrict retarray, \n+\tgfc_array_i4 * const restrict array, \n+\tconst index_type * const restrict pdim)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n-  GFC_INTEGER_4 *base;\n-  GFC_INTEGER_16 *dest;\n+  const GFC_INTEGER_4 * restrict base;\n+  GFC_INTEGER_16 * restrict dest;\n   index_type rank;\n   index_type n;\n   index_type len;\n@@ -122,7 +125,7 @@ maxloc1_16_i4 (gfc_array_i16 *retarray, gfc_array_i4 *array, index_type *pdim)\n \n   while (base)\n     {\n-      GFC_INTEGER_4 *src;\n+      const GFC_INTEGER_4 * restrict src;\n       GFC_INTEGER_16 result;\n       src = base;\n       {\n@@ -178,22 +181,25 @@ maxloc1_16_i4 (gfc_array_i16 *retarray, gfc_array_i4 *array, index_type *pdim)\n }\n \n \n-extern void mmaxloc1_16_i4 (gfc_array_i16 *, gfc_array_i4 *, index_type *,\n-\t\t\t\t\t       gfc_array_l4 *);\n+extern void mmaxloc1_16_i4 (gfc_array_i16 * const restrict, \n+\tgfc_array_i4 * const restrict, const index_type * const restrict,\n+\tgfc_array_l4 * const restrict);\n export_proto(mmaxloc1_16_i4);\n \n void\n-mmaxloc1_16_i4 (gfc_array_i16 * retarray, gfc_array_i4 * array,\n-\t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n+mmaxloc1_16_i4 (gfc_array_i16 * const restrict retarray, \n+\tgfc_array_i4 * const restrict array, \n+\tconst index_type * const restrict pdim, \n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n-  GFC_INTEGER_16 *dest;\n-  GFC_INTEGER_4 *base;\n-  GFC_LOGICAL_4 *mbase;\n+  GFC_INTEGER_16 * restrict dest;\n+  const GFC_INTEGER_4 * restrict base;\n+  const GFC_LOGICAL_4 * restrict mbase;\n   int rank;\n   int dim;\n   index_type n;\n@@ -284,8 +290,8 @@ mmaxloc1_16_i4 (gfc_array_i16 * retarray, gfc_array_i4 * array,\n \n   while (base)\n     {\n-      GFC_INTEGER_4 *src;\n-      GFC_LOGICAL_4 *msrc;\n+      const GFC_INTEGER_4 * restrict src;\n+      const GFC_LOGICAL_4 * restrict msrc;\n       GFC_INTEGER_16 result;\n       src = base;\n       msrc = mbase;"}, {"sha": "cda852e1327019b7c4d45a4591d1290d903d4b85", "filename": "libgfortran/generated/maxloc1_16_i8.c", "status": "modified", "additions": 20, "deletions": 14, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fmaxloc1_16_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fmaxloc1_16_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_16_i8.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -39,18 +39,21 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_INTEGER_8) && defined (HAVE_GFC_INTEGER_16)\n \n \n-extern void maxloc1_16_i8 (gfc_array_i16 *, gfc_array_i8 *, index_type *);\n+extern void maxloc1_16_i8 (gfc_array_i16 * const restrict, \n+\tgfc_array_i8 * const restrict, const index_type * const restrict);\n export_proto(maxloc1_16_i8);\n \n void\n-maxloc1_16_i8 (gfc_array_i16 *retarray, gfc_array_i8 *array, index_type *pdim)\n+maxloc1_16_i8 (gfc_array_i16 * const restrict retarray, \n+\tgfc_array_i8 * const restrict array, \n+\tconst index_type * const restrict pdim)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n-  GFC_INTEGER_8 *base;\n-  GFC_INTEGER_16 *dest;\n+  const GFC_INTEGER_8 * restrict base;\n+  GFC_INTEGER_16 * restrict dest;\n   index_type rank;\n   index_type n;\n   index_type len;\n@@ -122,7 +125,7 @@ maxloc1_16_i8 (gfc_array_i16 *retarray, gfc_array_i8 *array, index_type *pdim)\n \n   while (base)\n     {\n-      GFC_INTEGER_8 *src;\n+      const GFC_INTEGER_8 * restrict src;\n       GFC_INTEGER_16 result;\n       src = base;\n       {\n@@ -178,22 +181,25 @@ maxloc1_16_i8 (gfc_array_i16 *retarray, gfc_array_i8 *array, index_type *pdim)\n }\n \n \n-extern void mmaxloc1_16_i8 (gfc_array_i16 *, gfc_array_i8 *, index_type *,\n-\t\t\t\t\t       gfc_array_l4 *);\n+extern void mmaxloc1_16_i8 (gfc_array_i16 * const restrict, \n+\tgfc_array_i8 * const restrict, const index_type * const restrict,\n+\tgfc_array_l4 * const restrict);\n export_proto(mmaxloc1_16_i8);\n \n void\n-mmaxloc1_16_i8 (gfc_array_i16 * retarray, gfc_array_i8 * array,\n-\t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n+mmaxloc1_16_i8 (gfc_array_i16 * const restrict retarray, \n+\tgfc_array_i8 * const restrict array, \n+\tconst index_type * const restrict pdim, \n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n-  GFC_INTEGER_16 *dest;\n-  GFC_INTEGER_8 *base;\n-  GFC_LOGICAL_4 *mbase;\n+  GFC_INTEGER_16 * restrict dest;\n+  const GFC_INTEGER_8 * restrict base;\n+  const GFC_LOGICAL_4 * restrict mbase;\n   int rank;\n   int dim;\n   index_type n;\n@@ -284,8 +290,8 @@ mmaxloc1_16_i8 (gfc_array_i16 * retarray, gfc_array_i8 * array,\n \n   while (base)\n     {\n-      GFC_INTEGER_8 *src;\n-      GFC_LOGICAL_4 *msrc;\n+      const GFC_INTEGER_8 * restrict src;\n+      const GFC_LOGICAL_4 * restrict msrc;\n       GFC_INTEGER_16 result;\n       src = base;\n       msrc = mbase;"}, {"sha": "e368bd900e0d8a57382a19abaa9a60003928c260", "filename": "libgfortran/generated/maxloc1_16_r10.c", "status": "modified", "additions": 20, "deletions": 14, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fmaxloc1_16_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fmaxloc1_16_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_16_r10.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -39,18 +39,21 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_REAL_10) && defined (HAVE_GFC_INTEGER_16)\n \n \n-extern void maxloc1_16_r10 (gfc_array_i16 *, gfc_array_r10 *, index_type *);\n+extern void maxloc1_16_r10 (gfc_array_i16 * const restrict, \n+\tgfc_array_r10 * const restrict, const index_type * const restrict);\n export_proto(maxloc1_16_r10);\n \n void\n-maxloc1_16_r10 (gfc_array_i16 *retarray, gfc_array_r10 *array, index_type *pdim)\n+maxloc1_16_r10 (gfc_array_i16 * const restrict retarray, \n+\tgfc_array_r10 * const restrict array, \n+\tconst index_type * const restrict pdim)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n-  GFC_REAL_10 *base;\n-  GFC_INTEGER_16 *dest;\n+  const GFC_REAL_10 * restrict base;\n+  GFC_INTEGER_16 * restrict dest;\n   index_type rank;\n   index_type n;\n   index_type len;\n@@ -122,7 +125,7 @@ maxloc1_16_r10 (gfc_array_i16 *retarray, gfc_array_r10 *array, index_type *pdim)\n \n   while (base)\n     {\n-      GFC_REAL_10 *src;\n+      const GFC_REAL_10 * restrict src;\n       GFC_INTEGER_16 result;\n       src = base;\n       {\n@@ -178,22 +181,25 @@ maxloc1_16_r10 (gfc_array_i16 *retarray, gfc_array_r10 *array, index_type *pdim)\n }\n \n \n-extern void mmaxloc1_16_r10 (gfc_array_i16 *, gfc_array_r10 *, index_type *,\n-\t\t\t\t\t       gfc_array_l4 *);\n+extern void mmaxloc1_16_r10 (gfc_array_i16 * const restrict, \n+\tgfc_array_r10 * const restrict, const index_type * const restrict,\n+\tgfc_array_l4 * const restrict);\n export_proto(mmaxloc1_16_r10);\n \n void\n-mmaxloc1_16_r10 (gfc_array_i16 * retarray, gfc_array_r10 * array,\n-\t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n+mmaxloc1_16_r10 (gfc_array_i16 * const restrict retarray, \n+\tgfc_array_r10 * const restrict array, \n+\tconst index_type * const restrict pdim, \n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n-  GFC_INTEGER_16 *dest;\n-  GFC_REAL_10 *base;\n-  GFC_LOGICAL_4 *mbase;\n+  GFC_INTEGER_16 * restrict dest;\n+  const GFC_REAL_10 * restrict base;\n+  const GFC_LOGICAL_4 * restrict mbase;\n   int rank;\n   int dim;\n   index_type n;\n@@ -284,8 +290,8 @@ mmaxloc1_16_r10 (gfc_array_i16 * retarray, gfc_array_r10 * array,\n \n   while (base)\n     {\n-      GFC_REAL_10 *src;\n-      GFC_LOGICAL_4 *msrc;\n+      const GFC_REAL_10 * restrict src;\n+      const GFC_LOGICAL_4 * restrict msrc;\n       GFC_INTEGER_16 result;\n       src = base;\n       msrc = mbase;"}, {"sha": "2d2ec0cfadd16b597cc6e6c006bc345d5a42925d", "filename": "libgfortran/generated/maxloc1_16_r16.c", "status": "modified", "additions": 20, "deletions": 14, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fmaxloc1_16_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fmaxloc1_16_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_16_r16.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -39,18 +39,21 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_REAL_16) && defined (HAVE_GFC_INTEGER_16)\n \n \n-extern void maxloc1_16_r16 (gfc_array_i16 *, gfc_array_r16 *, index_type *);\n+extern void maxloc1_16_r16 (gfc_array_i16 * const restrict, \n+\tgfc_array_r16 * const restrict, const index_type * const restrict);\n export_proto(maxloc1_16_r16);\n \n void\n-maxloc1_16_r16 (gfc_array_i16 *retarray, gfc_array_r16 *array, index_type *pdim)\n+maxloc1_16_r16 (gfc_array_i16 * const restrict retarray, \n+\tgfc_array_r16 * const restrict array, \n+\tconst index_type * const restrict pdim)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n-  GFC_REAL_16 *base;\n-  GFC_INTEGER_16 *dest;\n+  const GFC_REAL_16 * restrict base;\n+  GFC_INTEGER_16 * restrict dest;\n   index_type rank;\n   index_type n;\n   index_type len;\n@@ -122,7 +125,7 @@ maxloc1_16_r16 (gfc_array_i16 *retarray, gfc_array_r16 *array, index_type *pdim)\n \n   while (base)\n     {\n-      GFC_REAL_16 *src;\n+      const GFC_REAL_16 * restrict src;\n       GFC_INTEGER_16 result;\n       src = base;\n       {\n@@ -178,22 +181,25 @@ maxloc1_16_r16 (gfc_array_i16 *retarray, gfc_array_r16 *array, index_type *pdim)\n }\n \n \n-extern void mmaxloc1_16_r16 (gfc_array_i16 *, gfc_array_r16 *, index_type *,\n-\t\t\t\t\t       gfc_array_l4 *);\n+extern void mmaxloc1_16_r16 (gfc_array_i16 * const restrict, \n+\tgfc_array_r16 * const restrict, const index_type * const restrict,\n+\tgfc_array_l4 * const restrict);\n export_proto(mmaxloc1_16_r16);\n \n void\n-mmaxloc1_16_r16 (gfc_array_i16 * retarray, gfc_array_r16 * array,\n-\t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n+mmaxloc1_16_r16 (gfc_array_i16 * const restrict retarray, \n+\tgfc_array_r16 * const restrict array, \n+\tconst index_type * const restrict pdim, \n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n-  GFC_INTEGER_16 *dest;\n-  GFC_REAL_16 *base;\n-  GFC_LOGICAL_4 *mbase;\n+  GFC_INTEGER_16 * restrict dest;\n+  const GFC_REAL_16 * restrict base;\n+  const GFC_LOGICAL_4 * restrict mbase;\n   int rank;\n   int dim;\n   index_type n;\n@@ -284,8 +290,8 @@ mmaxloc1_16_r16 (gfc_array_i16 * retarray, gfc_array_r16 * array,\n \n   while (base)\n     {\n-      GFC_REAL_16 *src;\n-      GFC_LOGICAL_4 *msrc;\n+      const GFC_REAL_16 * restrict src;\n+      const GFC_LOGICAL_4 * restrict msrc;\n       GFC_INTEGER_16 result;\n       src = base;\n       msrc = mbase;"}, {"sha": "c5dfba11d1a20c1214abcbc6db01552352560b1a", "filename": "libgfortran/generated/maxloc1_16_r4.c", "status": "modified", "additions": 20, "deletions": 14, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fmaxloc1_16_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fmaxloc1_16_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_16_r4.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -39,18 +39,21 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_REAL_4) && defined (HAVE_GFC_INTEGER_16)\n \n \n-extern void maxloc1_16_r4 (gfc_array_i16 *, gfc_array_r4 *, index_type *);\n+extern void maxloc1_16_r4 (gfc_array_i16 * const restrict, \n+\tgfc_array_r4 * const restrict, const index_type * const restrict);\n export_proto(maxloc1_16_r4);\n \n void\n-maxloc1_16_r4 (gfc_array_i16 *retarray, gfc_array_r4 *array, index_type *pdim)\n+maxloc1_16_r4 (gfc_array_i16 * const restrict retarray, \n+\tgfc_array_r4 * const restrict array, \n+\tconst index_type * const restrict pdim)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n-  GFC_REAL_4 *base;\n-  GFC_INTEGER_16 *dest;\n+  const GFC_REAL_4 * restrict base;\n+  GFC_INTEGER_16 * restrict dest;\n   index_type rank;\n   index_type n;\n   index_type len;\n@@ -122,7 +125,7 @@ maxloc1_16_r4 (gfc_array_i16 *retarray, gfc_array_r4 *array, index_type *pdim)\n \n   while (base)\n     {\n-      GFC_REAL_4 *src;\n+      const GFC_REAL_4 * restrict src;\n       GFC_INTEGER_16 result;\n       src = base;\n       {\n@@ -178,22 +181,25 @@ maxloc1_16_r4 (gfc_array_i16 *retarray, gfc_array_r4 *array, index_type *pdim)\n }\n \n \n-extern void mmaxloc1_16_r4 (gfc_array_i16 *, gfc_array_r4 *, index_type *,\n-\t\t\t\t\t       gfc_array_l4 *);\n+extern void mmaxloc1_16_r4 (gfc_array_i16 * const restrict, \n+\tgfc_array_r4 * const restrict, const index_type * const restrict,\n+\tgfc_array_l4 * const restrict);\n export_proto(mmaxloc1_16_r4);\n \n void\n-mmaxloc1_16_r4 (gfc_array_i16 * retarray, gfc_array_r4 * array,\n-\t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n+mmaxloc1_16_r4 (gfc_array_i16 * const restrict retarray, \n+\tgfc_array_r4 * const restrict array, \n+\tconst index_type * const restrict pdim, \n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n-  GFC_INTEGER_16 *dest;\n-  GFC_REAL_4 *base;\n-  GFC_LOGICAL_4 *mbase;\n+  GFC_INTEGER_16 * restrict dest;\n+  const GFC_REAL_4 * restrict base;\n+  const GFC_LOGICAL_4 * restrict mbase;\n   int rank;\n   int dim;\n   index_type n;\n@@ -284,8 +290,8 @@ mmaxloc1_16_r4 (gfc_array_i16 * retarray, gfc_array_r4 * array,\n \n   while (base)\n     {\n-      GFC_REAL_4 *src;\n-      GFC_LOGICAL_4 *msrc;\n+      const GFC_REAL_4 * restrict src;\n+      const GFC_LOGICAL_4 * restrict msrc;\n       GFC_INTEGER_16 result;\n       src = base;\n       msrc = mbase;"}, {"sha": "5e965b269030b6d431a90a086bb737d093f138d9", "filename": "libgfortran/generated/maxloc1_16_r8.c", "status": "modified", "additions": 20, "deletions": 14, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fmaxloc1_16_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fmaxloc1_16_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_16_r8.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -39,18 +39,21 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_REAL_8) && defined (HAVE_GFC_INTEGER_16)\n \n \n-extern void maxloc1_16_r8 (gfc_array_i16 *, gfc_array_r8 *, index_type *);\n+extern void maxloc1_16_r8 (gfc_array_i16 * const restrict, \n+\tgfc_array_r8 * const restrict, const index_type * const restrict);\n export_proto(maxloc1_16_r8);\n \n void\n-maxloc1_16_r8 (gfc_array_i16 *retarray, gfc_array_r8 *array, index_type *pdim)\n+maxloc1_16_r8 (gfc_array_i16 * const restrict retarray, \n+\tgfc_array_r8 * const restrict array, \n+\tconst index_type * const restrict pdim)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n-  GFC_REAL_8 *base;\n-  GFC_INTEGER_16 *dest;\n+  const GFC_REAL_8 * restrict base;\n+  GFC_INTEGER_16 * restrict dest;\n   index_type rank;\n   index_type n;\n   index_type len;\n@@ -122,7 +125,7 @@ maxloc1_16_r8 (gfc_array_i16 *retarray, gfc_array_r8 *array, index_type *pdim)\n \n   while (base)\n     {\n-      GFC_REAL_8 *src;\n+      const GFC_REAL_8 * restrict src;\n       GFC_INTEGER_16 result;\n       src = base;\n       {\n@@ -178,22 +181,25 @@ maxloc1_16_r8 (gfc_array_i16 *retarray, gfc_array_r8 *array, index_type *pdim)\n }\n \n \n-extern void mmaxloc1_16_r8 (gfc_array_i16 *, gfc_array_r8 *, index_type *,\n-\t\t\t\t\t       gfc_array_l4 *);\n+extern void mmaxloc1_16_r8 (gfc_array_i16 * const restrict, \n+\tgfc_array_r8 * const restrict, const index_type * const restrict,\n+\tgfc_array_l4 * const restrict);\n export_proto(mmaxloc1_16_r8);\n \n void\n-mmaxloc1_16_r8 (gfc_array_i16 * retarray, gfc_array_r8 * array,\n-\t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n+mmaxloc1_16_r8 (gfc_array_i16 * const restrict retarray, \n+\tgfc_array_r8 * const restrict array, \n+\tconst index_type * const restrict pdim, \n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n-  GFC_INTEGER_16 *dest;\n-  GFC_REAL_8 *base;\n-  GFC_LOGICAL_4 *mbase;\n+  GFC_INTEGER_16 * restrict dest;\n+  const GFC_REAL_8 * restrict base;\n+  const GFC_LOGICAL_4 * restrict mbase;\n   int rank;\n   int dim;\n   index_type n;\n@@ -284,8 +290,8 @@ mmaxloc1_16_r8 (gfc_array_i16 * retarray, gfc_array_r8 * array,\n \n   while (base)\n     {\n-      GFC_REAL_8 *src;\n-      GFC_LOGICAL_4 *msrc;\n+      const GFC_REAL_8 * restrict src;\n+      const GFC_LOGICAL_4 * restrict msrc;\n       GFC_INTEGER_16 result;\n       src = base;\n       msrc = mbase;"}, {"sha": "c801e0ec7a5a4598752b1d8beeb3fff872ff8854", "filename": "libgfortran/generated/maxloc1_4_i16.c", "status": "modified", "additions": 20, "deletions": 14, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fmaxloc1_4_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fmaxloc1_4_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_4_i16.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -39,18 +39,21 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_INTEGER_16) && defined (HAVE_GFC_INTEGER_4)\n \n \n-extern void maxloc1_4_i16 (gfc_array_i4 *, gfc_array_i16 *, index_type *);\n+extern void maxloc1_4_i16 (gfc_array_i4 * const restrict, \n+\tgfc_array_i16 * const restrict, const index_type * const restrict);\n export_proto(maxloc1_4_i16);\n \n void\n-maxloc1_4_i16 (gfc_array_i4 *retarray, gfc_array_i16 *array, index_type *pdim)\n+maxloc1_4_i16 (gfc_array_i4 * const restrict retarray, \n+\tgfc_array_i16 * const restrict array, \n+\tconst index_type * const restrict pdim)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n-  GFC_INTEGER_16 *base;\n-  GFC_INTEGER_4 *dest;\n+  const GFC_INTEGER_16 * restrict base;\n+  GFC_INTEGER_4 * restrict dest;\n   index_type rank;\n   index_type n;\n   index_type len;\n@@ -122,7 +125,7 @@ maxloc1_4_i16 (gfc_array_i4 *retarray, gfc_array_i16 *array, index_type *pdim)\n \n   while (base)\n     {\n-      GFC_INTEGER_16 *src;\n+      const GFC_INTEGER_16 * restrict src;\n       GFC_INTEGER_4 result;\n       src = base;\n       {\n@@ -178,22 +181,25 @@ maxloc1_4_i16 (gfc_array_i4 *retarray, gfc_array_i16 *array, index_type *pdim)\n }\n \n \n-extern void mmaxloc1_4_i16 (gfc_array_i4 *, gfc_array_i16 *, index_type *,\n-\t\t\t\t\t       gfc_array_l4 *);\n+extern void mmaxloc1_4_i16 (gfc_array_i4 * const restrict, \n+\tgfc_array_i16 * const restrict, const index_type * const restrict,\n+\tgfc_array_l4 * const restrict);\n export_proto(mmaxloc1_4_i16);\n \n void\n-mmaxloc1_4_i16 (gfc_array_i4 * retarray, gfc_array_i16 * array,\n-\t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n+mmaxloc1_4_i16 (gfc_array_i4 * const restrict retarray, \n+\tgfc_array_i16 * const restrict array, \n+\tconst index_type * const restrict pdim, \n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n-  GFC_INTEGER_4 *dest;\n-  GFC_INTEGER_16 *base;\n-  GFC_LOGICAL_4 *mbase;\n+  GFC_INTEGER_4 * restrict dest;\n+  const GFC_INTEGER_16 * restrict base;\n+  const GFC_LOGICAL_4 * restrict mbase;\n   int rank;\n   int dim;\n   index_type n;\n@@ -284,8 +290,8 @@ mmaxloc1_4_i16 (gfc_array_i4 * retarray, gfc_array_i16 * array,\n \n   while (base)\n     {\n-      GFC_INTEGER_16 *src;\n-      GFC_LOGICAL_4 *msrc;\n+      const GFC_INTEGER_16 * restrict src;\n+      const GFC_LOGICAL_4 * restrict msrc;\n       GFC_INTEGER_4 result;\n       src = base;\n       msrc = mbase;"}, {"sha": "cd6f93a12f5276185ae2f1a01f6bb21f5b9585e8", "filename": "libgfortran/generated/maxloc1_4_i4.c", "status": "modified", "additions": 20, "deletions": 14, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fmaxloc1_4_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fmaxloc1_4_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_4_i4.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -39,18 +39,21 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_INTEGER_4) && defined (HAVE_GFC_INTEGER_4)\n \n \n-extern void maxloc1_4_i4 (gfc_array_i4 *, gfc_array_i4 *, index_type *);\n+extern void maxloc1_4_i4 (gfc_array_i4 * const restrict, \n+\tgfc_array_i4 * const restrict, const index_type * const restrict);\n export_proto(maxloc1_4_i4);\n \n void\n-maxloc1_4_i4 (gfc_array_i4 *retarray, gfc_array_i4 *array, index_type *pdim)\n+maxloc1_4_i4 (gfc_array_i4 * const restrict retarray, \n+\tgfc_array_i4 * const restrict array, \n+\tconst index_type * const restrict pdim)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n-  GFC_INTEGER_4 *base;\n-  GFC_INTEGER_4 *dest;\n+  const GFC_INTEGER_4 * restrict base;\n+  GFC_INTEGER_4 * restrict dest;\n   index_type rank;\n   index_type n;\n   index_type len;\n@@ -122,7 +125,7 @@ maxloc1_4_i4 (gfc_array_i4 *retarray, gfc_array_i4 *array, index_type *pdim)\n \n   while (base)\n     {\n-      GFC_INTEGER_4 *src;\n+      const GFC_INTEGER_4 * restrict src;\n       GFC_INTEGER_4 result;\n       src = base;\n       {\n@@ -178,22 +181,25 @@ maxloc1_4_i4 (gfc_array_i4 *retarray, gfc_array_i4 *array, index_type *pdim)\n }\n \n \n-extern void mmaxloc1_4_i4 (gfc_array_i4 *, gfc_array_i4 *, index_type *,\n-\t\t\t\t\t       gfc_array_l4 *);\n+extern void mmaxloc1_4_i4 (gfc_array_i4 * const restrict, \n+\tgfc_array_i4 * const restrict, const index_type * const restrict,\n+\tgfc_array_l4 * const restrict);\n export_proto(mmaxloc1_4_i4);\n \n void\n-mmaxloc1_4_i4 (gfc_array_i4 * retarray, gfc_array_i4 * array,\n-\t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n+mmaxloc1_4_i4 (gfc_array_i4 * const restrict retarray, \n+\tgfc_array_i4 * const restrict array, \n+\tconst index_type * const restrict pdim, \n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n-  GFC_INTEGER_4 *dest;\n-  GFC_INTEGER_4 *base;\n-  GFC_LOGICAL_4 *mbase;\n+  GFC_INTEGER_4 * restrict dest;\n+  const GFC_INTEGER_4 * restrict base;\n+  const GFC_LOGICAL_4 * restrict mbase;\n   int rank;\n   int dim;\n   index_type n;\n@@ -284,8 +290,8 @@ mmaxloc1_4_i4 (gfc_array_i4 * retarray, gfc_array_i4 * array,\n \n   while (base)\n     {\n-      GFC_INTEGER_4 *src;\n-      GFC_LOGICAL_4 *msrc;\n+      const GFC_INTEGER_4 * restrict src;\n+      const GFC_LOGICAL_4 * restrict msrc;\n       GFC_INTEGER_4 result;\n       src = base;\n       msrc = mbase;"}, {"sha": "6d0353b0a78d31956b5c12a6a8b865f3b87c185c", "filename": "libgfortran/generated/maxloc1_4_i8.c", "status": "modified", "additions": 20, "deletions": 14, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fmaxloc1_4_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fmaxloc1_4_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_4_i8.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -39,18 +39,21 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_INTEGER_8) && defined (HAVE_GFC_INTEGER_4)\n \n \n-extern void maxloc1_4_i8 (gfc_array_i4 *, gfc_array_i8 *, index_type *);\n+extern void maxloc1_4_i8 (gfc_array_i4 * const restrict, \n+\tgfc_array_i8 * const restrict, const index_type * const restrict);\n export_proto(maxloc1_4_i8);\n \n void\n-maxloc1_4_i8 (gfc_array_i4 *retarray, gfc_array_i8 *array, index_type *pdim)\n+maxloc1_4_i8 (gfc_array_i4 * const restrict retarray, \n+\tgfc_array_i8 * const restrict array, \n+\tconst index_type * const restrict pdim)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n-  GFC_INTEGER_8 *base;\n-  GFC_INTEGER_4 *dest;\n+  const GFC_INTEGER_8 * restrict base;\n+  GFC_INTEGER_4 * restrict dest;\n   index_type rank;\n   index_type n;\n   index_type len;\n@@ -122,7 +125,7 @@ maxloc1_4_i8 (gfc_array_i4 *retarray, gfc_array_i8 *array, index_type *pdim)\n \n   while (base)\n     {\n-      GFC_INTEGER_8 *src;\n+      const GFC_INTEGER_8 * restrict src;\n       GFC_INTEGER_4 result;\n       src = base;\n       {\n@@ -178,22 +181,25 @@ maxloc1_4_i8 (gfc_array_i4 *retarray, gfc_array_i8 *array, index_type *pdim)\n }\n \n \n-extern void mmaxloc1_4_i8 (gfc_array_i4 *, gfc_array_i8 *, index_type *,\n-\t\t\t\t\t       gfc_array_l4 *);\n+extern void mmaxloc1_4_i8 (gfc_array_i4 * const restrict, \n+\tgfc_array_i8 * const restrict, const index_type * const restrict,\n+\tgfc_array_l4 * const restrict);\n export_proto(mmaxloc1_4_i8);\n \n void\n-mmaxloc1_4_i8 (gfc_array_i4 * retarray, gfc_array_i8 * array,\n-\t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n+mmaxloc1_4_i8 (gfc_array_i4 * const restrict retarray, \n+\tgfc_array_i8 * const restrict array, \n+\tconst index_type * const restrict pdim, \n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n-  GFC_INTEGER_4 *dest;\n-  GFC_INTEGER_8 *base;\n-  GFC_LOGICAL_4 *mbase;\n+  GFC_INTEGER_4 * restrict dest;\n+  const GFC_INTEGER_8 * restrict base;\n+  const GFC_LOGICAL_4 * restrict mbase;\n   int rank;\n   int dim;\n   index_type n;\n@@ -284,8 +290,8 @@ mmaxloc1_4_i8 (gfc_array_i4 * retarray, gfc_array_i8 * array,\n \n   while (base)\n     {\n-      GFC_INTEGER_8 *src;\n-      GFC_LOGICAL_4 *msrc;\n+      const GFC_INTEGER_8 * restrict src;\n+      const GFC_LOGICAL_4 * restrict msrc;\n       GFC_INTEGER_4 result;\n       src = base;\n       msrc = mbase;"}, {"sha": "e8364e2dcea3adc32cab7d355db3cf1f46a6da7a", "filename": "libgfortran/generated/maxloc1_4_r10.c", "status": "modified", "additions": 20, "deletions": 14, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fmaxloc1_4_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fmaxloc1_4_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_4_r10.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -39,18 +39,21 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_REAL_10) && defined (HAVE_GFC_INTEGER_4)\n \n \n-extern void maxloc1_4_r10 (gfc_array_i4 *, gfc_array_r10 *, index_type *);\n+extern void maxloc1_4_r10 (gfc_array_i4 * const restrict, \n+\tgfc_array_r10 * const restrict, const index_type * const restrict);\n export_proto(maxloc1_4_r10);\n \n void\n-maxloc1_4_r10 (gfc_array_i4 *retarray, gfc_array_r10 *array, index_type *pdim)\n+maxloc1_4_r10 (gfc_array_i4 * const restrict retarray, \n+\tgfc_array_r10 * const restrict array, \n+\tconst index_type * const restrict pdim)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n-  GFC_REAL_10 *base;\n-  GFC_INTEGER_4 *dest;\n+  const GFC_REAL_10 * restrict base;\n+  GFC_INTEGER_4 * restrict dest;\n   index_type rank;\n   index_type n;\n   index_type len;\n@@ -122,7 +125,7 @@ maxloc1_4_r10 (gfc_array_i4 *retarray, gfc_array_r10 *array, index_type *pdim)\n \n   while (base)\n     {\n-      GFC_REAL_10 *src;\n+      const GFC_REAL_10 * restrict src;\n       GFC_INTEGER_4 result;\n       src = base;\n       {\n@@ -178,22 +181,25 @@ maxloc1_4_r10 (gfc_array_i4 *retarray, gfc_array_r10 *array, index_type *pdim)\n }\n \n \n-extern void mmaxloc1_4_r10 (gfc_array_i4 *, gfc_array_r10 *, index_type *,\n-\t\t\t\t\t       gfc_array_l4 *);\n+extern void mmaxloc1_4_r10 (gfc_array_i4 * const restrict, \n+\tgfc_array_r10 * const restrict, const index_type * const restrict,\n+\tgfc_array_l4 * const restrict);\n export_proto(mmaxloc1_4_r10);\n \n void\n-mmaxloc1_4_r10 (gfc_array_i4 * retarray, gfc_array_r10 * array,\n-\t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n+mmaxloc1_4_r10 (gfc_array_i4 * const restrict retarray, \n+\tgfc_array_r10 * const restrict array, \n+\tconst index_type * const restrict pdim, \n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n-  GFC_INTEGER_4 *dest;\n-  GFC_REAL_10 *base;\n-  GFC_LOGICAL_4 *mbase;\n+  GFC_INTEGER_4 * restrict dest;\n+  const GFC_REAL_10 * restrict base;\n+  const GFC_LOGICAL_4 * restrict mbase;\n   int rank;\n   int dim;\n   index_type n;\n@@ -284,8 +290,8 @@ mmaxloc1_4_r10 (gfc_array_i4 * retarray, gfc_array_r10 * array,\n \n   while (base)\n     {\n-      GFC_REAL_10 *src;\n-      GFC_LOGICAL_4 *msrc;\n+      const GFC_REAL_10 * restrict src;\n+      const GFC_LOGICAL_4 * restrict msrc;\n       GFC_INTEGER_4 result;\n       src = base;\n       msrc = mbase;"}, {"sha": "5d7a5a15bd038702a6c31ebb077fc485eaa0adfc", "filename": "libgfortran/generated/maxloc1_4_r16.c", "status": "modified", "additions": 20, "deletions": 14, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fmaxloc1_4_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fmaxloc1_4_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_4_r16.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -39,18 +39,21 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_REAL_16) && defined (HAVE_GFC_INTEGER_4)\n \n \n-extern void maxloc1_4_r16 (gfc_array_i4 *, gfc_array_r16 *, index_type *);\n+extern void maxloc1_4_r16 (gfc_array_i4 * const restrict, \n+\tgfc_array_r16 * const restrict, const index_type * const restrict);\n export_proto(maxloc1_4_r16);\n \n void\n-maxloc1_4_r16 (gfc_array_i4 *retarray, gfc_array_r16 *array, index_type *pdim)\n+maxloc1_4_r16 (gfc_array_i4 * const restrict retarray, \n+\tgfc_array_r16 * const restrict array, \n+\tconst index_type * const restrict pdim)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n-  GFC_REAL_16 *base;\n-  GFC_INTEGER_4 *dest;\n+  const GFC_REAL_16 * restrict base;\n+  GFC_INTEGER_4 * restrict dest;\n   index_type rank;\n   index_type n;\n   index_type len;\n@@ -122,7 +125,7 @@ maxloc1_4_r16 (gfc_array_i4 *retarray, gfc_array_r16 *array, index_type *pdim)\n \n   while (base)\n     {\n-      GFC_REAL_16 *src;\n+      const GFC_REAL_16 * restrict src;\n       GFC_INTEGER_4 result;\n       src = base;\n       {\n@@ -178,22 +181,25 @@ maxloc1_4_r16 (gfc_array_i4 *retarray, gfc_array_r16 *array, index_type *pdim)\n }\n \n \n-extern void mmaxloc1_4_r16 (gfc_array_i4 *, gfc_array_r16 *, index_type *,\n-\t\t\t\t\t       gfc_array_l4 *);\n+extern void mmaxloc1_4_r16 (gfc_array_i4 * const restrict, \n+\tgfc_array_r16 * const restrict, const index_type * const restrict,\n+\tgfc_array_l4 * const restrict);\n export_proto(mmaxloc1_4_r16);\n \n void\n-mmaxloc1_4_r16 (gfc_array_i4 * retarray, gfc_array_r16 * array,\n-\t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n+mmaxloc1_4_r16 (gfc_array_i4 * const restrict retarray, \n+\tgfc_array_r16 * const restrict array, \n+\tconst index_type * const restrict pdim, \n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n-  GFC_INTEGER_4 *dest;\n-  GFC_REAL_16 *base;\n-  GFC_LOGICAL_4 *mbase;\n+  GFC_INTEGER_4 * restrict dest;\n+  const GFC_REAL_16 * restrict base;\n+  const GFC_LOGICAL_4 * restrict mbase;\n   int rank;\n   int dim;\n   index_type n;\n@@ -284,8 +290,8 @@ mmaxloc1_4_r16 (gfc_array_i4 * retarray, gfc_array_r16 * array,\n \n   while (base)\n     {\n-      GFC_REAL_16 *src;\n-      GFC_LOGICAL_4 *msrc;\n+      const GFC_REAL_16 * restrict src;\n+      const GFC_LOGICAL_4 * restrict msrc;\n       GFC_INTEGER_4 result;\n       src = base;\n       msrc = mbase;"}, {"sha": "dd0de4b9ee0b461d86677d359c6ef20c7535122c", "filename": "libgfortran/generated/maxloc1_4_r4.c", "status": "modified", "additions": 20, "deletions": 14, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fmaxloc1_4_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fmaxloc1_4_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_4_r4.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -39,18 +39,21 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_REAL_4) && defined (HAVE_GFC_INTEGER_4)\n \n \n-extern void maxloc1_4_r4 (gfc_array_i4 *, gfc_array_r4 *, index_type *);\n+extern void maxloc1_4_r4 (gfc_array_i4 * const restrict, \n+\tgfc_array_r4 * const restrict, const index_type * const restrict);\n export_proto(maxloc1_4_r4);\n \n void\n-maxloc1_4_r4 (gfc_array_i4 *retarray, gfc_array_r4 *array, index_type *pdim)\n+maxloc1_4_r4 (gfc_array_i4 * const restrict retarray, \n+\tgfc_array_r4 * const restrict array, \n+\tconst index_type * const restrict pdim)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n-  GFC_REAL_4 *base;\n-  GFC_INTEGER_4 *dest;\n+  const GFC_REAL_4 * restrict base;\n+  GFC_INTEGER_4 * restrict dest;\n   index_type rank;\n   index_type n;\n   index_type len;\n@@ -122,7 +125,7 @@ maxloc1_4_r4 (gfc_array_i4 *retarray, gfc_array_r4 *array, index_type *pdim)\n \n   while (base)\n     {\n-      GFC_REAL_4 *src;\n+      const GFC_REAL_4 * restrict src;\n       GFC_INTEGER_4 result;\n       src = base;\n       {\n@@ -178,22 +181,25 @@ maxloc1_4_r4 (gfc_array_i4 *retarray, gfc_array_r4 *array, index_type *pdim)\n }\n \n \n-extern void mmaxloc1_4_r4 (gfc_array_i4 *, gfc_array_r4 *, index_type *,\n-\t\t\t\t\t       gfc_array_l4 *);\n+extern void mmaxloc1_4_r4 (gfc_array_i4 * const restrict, \n+\tgfc_array_r4 * const restrict, const index_type * const restrict,\n+\tgfc_array_l4 * const restrict);\n export_proto(mmaxloc1_4_r4);\n \n void\n-mmaxloc1_4_r4 (gfc_array_i4 * retarray, gfc_array_r4 * array,\n-\t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n+mmaxloc1_4_r4 (gfc_array_i4 * const restrict retarray, \n+\tgfc_array_r4 * const restrict array, \n+\tconst index_type * const restrict pdim, \n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n-  GFC_INTEGER_4 *dest;\n-  GFC_REAL_4 *base;\n-  GFC_LOGICAL_4 *mbase;\n+  GFC_INTEGER_4 * restrict dest;\n+  const GFC_REAL_4 * restrict base;\n+  const GFC_LOGICAL_4 * restrict mbase;\n   int rank;\n   int dim;\n   index_type n;\n@@ -284,8 +290,8 @@ mmaxloc1_4_r4 (gfc_array_i4 * retarray, gfc_array_r4 * array,\n \n   while (base)\n     {\n-      GFC_REAL_4 *src;\n-      GFC_LOGICAL_4 *msrc;\n+      const GFC_REAL_4 * restrict src;\n+      const GFC_LOGICAL_4 * restrict msrc;\n       GFC_INTEGER_4 result;\n       src = base;\n       msrc = mbase;"}, {"sha": "fc0f9f534cfe66bcc3f5a75dee55b4e5770e4623", "filename": "libgfortran/generated/maxloc1_4_r8.c", "status": "modified", "additions": 20, "deletions": 14, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fmaxloc1_4_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fmaxloc1_4_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_4_r8.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -39,18 +39,21 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_REAL_8) && defined (HAVE_GFC_INTEGER_4)\n \n \n-extern void maxloc1_4_r8 (gfc_array_i4 *, gfc_array_r8 *, index_type *);\n+extern void maxloc1_4_r8 (gfc_array_i4 * const restrict, \n+\tgfc_array_r8 * const restrict, const index_type * const restrict);\n export_proto(maxloc1_4_r8);\n \n void\n-maxloc1_4_r8 (gfc_array_i4 *retarray, gfc_array_r8 *array, index_type *pdim)\n+maxloc1_4_r8 (gfc_array_i4 * const restrict retarray, \n+\tgfc_array_r8 * const restrict array, \n+\tconst index_type * const restrict pdim)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n-  GFC_REAL_8 *base;\n-  GFC_INTEGER_4 *dest;\n+  const GFC_REAL_8 * restrict base;\n+  GFC_INTEGER_4 * restrict dest;\n   index_type rank;\n   index_type n;\n   index_type len;\n@@ -122,7 +125,7 @@ maxloc1_4_r8 (gfc_array_i4 *retarray, gfc_array_r8 *array, index_type *pdim)\n \n   while (base)\n     {\n-      GFC_REAL_8 *src;\n+      const GFC_REAL_8 * restrict src;\n       GFC_INTEGER_4 result;\n       src = base;\n       {\n@@ -178,22 +181,25 @@ maxloc1_4_r8 (gfc_array_i4 *retarray, gfc_array_r8 *array, index_type *pdim)\n }\n \n \n-extern void mmaxloc1_4_r8 (gfc_array_i4 *, gfc_array_r8 *, index_type *,\n-\t\t\t\t\t       gfc_array_l4 *);\n+extern void mmaxloc1_4_r8 (gfc_array_i4 * const restrict, \n+\tgfc_array_r8 * const restrict, const index_type * const restrict,\n+\tgfc_array_l4 * const restrict);\n export_proto(mmaxloc1_4_r8);\n \n void\n-mmaxloc1_4_r8 (gfc_array_i4 * retarray, gfc_array_r8 * array,\n-\t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n+mmaxloc1_4_r8 (gfc_array_i4 * const restrict retarray, \n+\tgfc_array_r8 * const restrict array, \n+\tconst index_type * const restrict pdim, \n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n-  GFC_INTEGER_4 *dest;\n-  GFC_REAL_8 *base;\n-  GFC_LOGICAL_4 *mbase;\n+  GFC_INTEGER_4 * restrict dest;\n+  const GFC_REAL_8 * restrict base;\n+  const GFC_LOGICAL_4 * restrict mbase;\n   int rank;\n   int dim;\n   index_type n;\n@@ -284,8 +290,8 @@ mmaxloc1_4_r8 (gfc_array_i4 * retarray, gfc_array_r8 * array,\n \n   while (base)\n     {\n-      GFC_REAL_8 *src;\n-      GFC_LOGICAL_4 *msrc;\n+      const GFC_REAL_8 * restrict src;\n+      const GFC_LOGICAL_4 * restrict msrc;\n       GFC_INTEGER_4 result;\n       src = base;\n       msrc = mbase;"}, {"sha": "8feecfaaf7d603985d3eeec08d4e79754eb29feb", "filename": "libgfortran/generated/maxloc1_8_i16.c", "status": "modified", "additions": 20, "deletions": 14, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fmaxloc1_8_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fmaxloc1_8_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_8_i16.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -39,18 +39,21 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_INTEGER_16) && defined (HAVE_GFC_INTEGER_8)\n \n \n-extern void maxloc1_8_i16 (gfc_array_i8 *, gfc_array_i16 *, index_type *);\n+extern void maxloc1_8_i16 (gfc_array_i8 * const restrict, \n+\tgfc_array_i16 * const restrict, const index_type * const restrict);\n export_proto(maxloc1_8_i16);\n \n void\n-maxloc1_8_i16 (gfc_array_i8 *retarray, gfc_array_i16 *array, index_type *pdim)\n+maxloc1_8_i16 (gfc_array_i8 * const restrict retarray, \n+\tgfc_array_i16 * const restrict array, \n+\tconst index_type * const restrict pdim)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n-  GFC_INTEGER_16 *base;\n-  GFC_INTEGER_8 *dest;\n+  const GFC_INTEGER_16 * restrict base;\n+  GFC_INTEGER_8 * restrict dest;\n   index_type rank;\n   index_type n;\n   index_type len;\n@@ -122,7 +125,7 @@ maxloc1_8_i16 (gfc_array_i8 *retarray, gfc_array_i16 *array, index_type *pdim)\n \n   while (base)\n     {\n-      GFC_INTEGER_16 *src;\n+      const GFC_INTEGER_16 * restrict src;\n       GFC_INTEGER_8 result;\n       src = base;\n       {\n@@ -178,22 +181,25 @@ maxloc1_8_i16 (gfc_array_i8 *retarray, gfc_array_i16 *array, index_type *pdim)\n }\n \n \n-extern void mmaxloc1_8_i16 (gfc_array_i8 *, gfc_array_i16 *, index_type *,\n-\t\t\t\t\t       gfc_array_l4 *);\n+extern void mmaxloc1_8_i16 (gfc_array_i8 * const restrict, \n+\tgfc_array_i16 * const restrict, const index_type * const restrict,\n+\tgfc_array_l4 * const restrict);\n export_proto(mmaxloc1_8_i16);\n \n void\n-mmaxloc1_8_i16 (gfc_array_i8 * retarray, gfc_array_i16 * array,\n-\t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n+mmaxloc1_8_i16 (gfc_array_i8 * const restrict retarray, \n+\tgfc_array_i16 * const restrict array, \n+\tconst index_type * const restrict pdim, \n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n-  GFC_INTEGER_8 *dest;\n-  GFC_INTEGER_16 *base;\n-  GFC_LOGICAL_4 *mbase;\n+  GFC_INTEGER_8 * restrict dest;\n+  const GFC_INTEGER_16 * restrict base;\n+  const GFC_LOGICAL_4 * restrict mbase;\n   int rank;\n   int dim;\n   index_type n;\n@@ -284,8 +290,8 @@ mmaxloc1_8_i16 (gfc_array_i8 * retarray, gfc_array_i16 * array,\n \n   while (base)\n     {\n-      GFC_INTEGER_16 *src;\n-      GFC_LOGICAL_4 *msrc;\n+      const GFC_INTEGER_16 * restrict src;\n+      const GFC_LOGICAL_4 * restrict msrc;\n       GFC_INTEGER_8 result;\n       src = base;\n       msrc = mbase;"}, {"sha": "0bc3cd8bc97972c9fa85d5bbf887c56405fea7b4", "filename": "libgfortran/generated/maxloc1_8_i4.c", "status": "modified", "additions": 20, "deletions": 14, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fmaxloc1_8_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fmaxloc1_8_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_8_i4.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -39,18 +39,21 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_INTEGER_4) && defined (HAVE_GFC_INTEGER_8)\n \n \n-extern void maxloc1_8_i4 (gfc_array_i8 *, gfc_array_i4 *, index_type *);\n+extern void maxloc1_8_i4 (gfc_array_i8 * const restrict, \n+\tgfc_array_i4 * const restrict, const index_type * const restrict);\n export_proto(maxloc1_8_i4);\n \n void\n-maxloc1_8_i4 (gfc_array_i8 *retarray, gfc_array_i4 *array, index_type *pdim)\n+maxloc1_8_i4 (gfc_array_i8 * const restrict retarray, \n+\tgfc_array_i4 * const restrict array, \n+\tconst index_type * const restrict pdim)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n-  GFC_INTEGER_4 *base;\n-  GFC_INTEGER_8 *dest;\n+  const GFC_INTEGER_4 * restrict base;\n+  GFC_INTEGER_8 * restrict dest;\n   index_type rank;\n   index_type n;\n   index_type len;\n@@ -122,7 +125,7 @@ maxloc1_8_i4 (gfc_array_i8 *retarray, gfc_array_i4 *array, index_type *pdim)\n \n   while (base)\n     {\n-      GFC_INTEGER_4 *src;\n+      const GFC_INTEGER_4 * restrict src;\n       GFC_INTEGER_8 result;\n       src = base;\n       {\n@@ -178,22 +181,25 @@ maxloc1_8_i4 (gfc_array_i8 *retarray, gfc_array_i4 *array, index_type *pdim)\n }\n \n \n-extern void mmaxloc1_8_i4 (gfc_array_i8 *, gfc_array_i4 *, index_type *,\n-\t\t\t\t\t       gfc_array_l4 *);\n+extern void mmaxloc1_8_i4 (gfc_array_i8 * const restrict, \n+\tgfc_array_i4 * const restrict, const index_type * const restrict,\n+\tgfc_array_l4 * const restrict);\n export_proto(mmaxloc1_8_i4);\n \n void\n-mmaxloc1_8_i4 (gfc_array_i8 * retarray, gfc_array_i4 * array,\n-\t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n+mmaxloc1_8_i4 (gfc_array_i8 * const restrict retarray, \n+\tgfc_array_i4 * const restrict array, \n+\tconst index_type * const restrict pdim, \n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n-  GFC_INTEGER_8 *dest;\n-  GFC_INTEGER_4 *base;\n-  GFC_LOGICAL_4 *mbase;\n+  GFC_INTEGER_8 * restrict dest;\n+  const GFC_INTEGER_4 * restrict base;\n+  const GFC_LOGICAL_4 * restrict mbase;\n   int rank;\n   int dim;\n   index_type n;\n@@ -284,8 +290,8 @@ mmaxloc1_8_i4 (gfc_array_i8 * retarray, gfc_array_i4 * array,\n \n   while (base)\n     {\n-      GFC_INTEGER_4 *src;\n-      GFC_LOGICAL_4 *msrc;\n+      const GFC_INTEGER_4 * restrict src;\n+      const GFC_LOGICAL_4 * restrict msrc;\n       GFC_INTEGER_8 result;\n       src = base;\n       msrc = mbase;"}, {"sha": "dccffc0d8d008dc7a287ba6f2ccb854f10571a94", "filename": "libgfortran/generated/maxloc1_8_i8.c", "status": "modified", "additions": 20, "deletions": 14, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fmaxloc1_8_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fmaxloc1_8_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_8_i8.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -39,18 +39,21 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_INTEGER_8) && defined (HAVE_GFC_INTEGER_8)\n \n \n-extern void maxloc1_8_i8 (gfc_array_i8 *, gfc_array_i8 *, index_type *);\n+extern void maxloc1_8_i8 (gfc_array_i8 * const restrict, \n+\tgfc_array_i8 * const restrict, const index_type * const restrict);\n export_proto(maxloc1_8_i8);\n \n void\n-maxloc1_8_i8 (gfc_array_i8 *retarray, gfc_array_i8 *array, index_type *pdim)\n+maxloc1_8_i8 (gfc_array_i8 * const restrict retarray, \n+\tgfc_array_i8 * const restrict array, \n+\tconst index_type * const restrict pdim)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n-  GFC_INTEGER_8 *base;\n-  GFC_INTEGER_8 *dest;\n+  const GFC_INTEGER_8 * restrict base;\n+  GFC_INTEGER_8 * restrict dest;\n   index_type rank;\n   index_type n;\n   index_type len;\n@@ -122,7 +125,7 @@ maxloc1_8_i8 (gfc_array_i8 *retarray, gfc_array_i8 *array, index_type *pdim)\n \n   while (base)\n     {\n-      GFC_INTEGER_8 *src;\n+      const GFC_INTEGER_8 * restrict src;\n       GFC_INTEGER_8 result;\n       src = base;\n       {\n@@ -178,22 +181,25 @@ maxloc1_8_i8 (gfc_array_i8 *retarray, gfc_array_i8 *array, index_type *pdim)\n }\n \n \n-extern void mmaxloc1_8_i8 (gfc_array_i8 *, gfc_array_i8 *, index_type *,\n-\t\t\t\t\t       gfc_array_l4 *);\n+extern void mmaxloc1_8_i8 (gfc_array_i8 * const restrict, \n+\tgfc_array_i8 * const restrict, const index_type * const restrict,\n+\tgfc_array_l4 * const restrict);\n export_proto(mmaxloc1_8_i8);\n \n void\n-mmaxloc1_8_i8 (gfc_array_i8 * retarray, gfc_array_i8 * array,\n-\t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n+mmaxloc1_8_i8 (gfc_array_i8 * const restrict retarray, \n+\tgfc_array_i8 * const restrict array, \n+\tconst index_type * const restrict pdim, \n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n-  GFC_INTEGER_8 *dest;\n-  GFC_INTEGER_8 *base;\n-  GFC_LOGICAL_4 *mbase;\n+  GFC_INTEGER_8 * restrict dest;\n+  const GFC_INTEGER_8 * restrict base;\n+  const GFC_LOGICAL_4 * restrict mbase;\n   int rank;\n   int dim;\n   index_type n;\n@@ -284,8 +290,8 @@ mmaxloc1_8_i8 (gfc_array_i8 * retarray, gfc_array_i8 * array,\n \n   while (base)\n     {\n-      GFC_INTEGER_8 *src;\n-      GFC_LOGICAL_4 *msrc;\n+      const GFC_INTEGER_8 * restrict src;\n+      const GFC_LOGICAL_4 * restrict msrc;\n       GFC_INTEGER_8 result;\n       src = base;\n       msrc = mbase;"}, {"sha": "06c8cce98365cacafa5afed0d9e0b67933c31cfb", "filename": "libgfortran/generated/maxloc1_8_r10.c", "status": "modified", "additions": 20, "deletions": 14, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fmaxloc1_8_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fmaxloc1_8_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_8_r10.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -39,18 +39,21 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_REAL_10) && defined (HAVE_GFC_INTEGER_8)\n \n \n-extern void maxloc1_8_r10 (gfc_array_i8 *, gfc_array_r10 *, index_type *);\n+extern void maxloc1_8_r10 (gfc_array_i8 * const restrict, \n+\tgfc_array_r10 * const restrict, const index_type * const restrict);\n export_proto(maxloc1_8_r10);\n \n void\n-maxloc1_8_r10 (gfc_array_i8 *retarray, gfc_array_r10 *array, index_type *pdim)\n+maxloc1_8_r10 (gfc_array_i8 * const restrict retarray, \n+\tgfc_array_r10 * const restrict array, \n+\tconst index_type * const restrict pdim)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n-  GFC_REAL_10 *base;\n-  GFC_INTEGER_8 *dest;\n+  const GFC_REAL_10 * restrict base;\n+  GFC_INTEGER_8 * restrict dest;\n   index_type rank;\n   index_type n;\n   index_type len;\n@@ -122,7 +125,7 @@ maxloc1_8_r10 (gfc_array_i8 *retarray, gfc_array_r10 *array, index_type *pdim)\n \n   while (base)\n     {\n-      GFC_REAL_10 *src;\n+      const GFC_REAL_10 * restrict src;\n       GFC_INTEGER_8 result;\n       src = base;\n       {\n@@ -178,22 +181,25 @@ maxloc1_8_r10 (gfc_array_i8 *retarray, gfc_array_r10 *array, index_type *pdim)\n }\n \n \n-extern void mmaxloc1_8_r10 (gfc_array_i8 *, gfc_array_r10 *, index_type *,\n-\t\t\t\t\t       gfc_array_l4 *);\n+extern void mmaxloc1_8_r10 (gfc_array_i8 * const restrict, \n+\tgfc_array_r10 * const restrict, const index_type * const restrict,\n+\tgfc_array_l4 * const restrict);\n export_proto(mmaxloc1_8_r10);\n \n void\n-mmaxloc1_8_r10 (gfc_array_i8 * retarray, gfc_array_r10 * array,\n-\t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n+mmaxloc1_8_r10 (gfc_array_i8 * const restrict retarray, \n+\tgfc_array_r10 * const restrict array, \n+\tconst index_type * const restrict pdim, \n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n-  GFC_INTEGER_8 *dest;\n-  GFC_REAL_10 *base;\n-  GFC_LOGICAL_4 *mbase;\n+  GFC_INTEGER_8 * restrict dest;\n+  const GFC_REAL_10 * restrict base;\n+  const GFC_LOGICAL_4 * restrict mbase;\n   int rank;\n   int dim;\n   index_type n;\n@@ -284,8 +290,8 @@ mmaxloc1_8_r10 (gfc_array_i8 * retarray, gfc_array_r10 * array,\n \n   while (base)\n     {\n-      GFC_REAL_10 *src;\n-      GFC_LOGICAL_4 *msrc;\n+      const GFC_REAL_10 * restrict src;\n+      const GFC_LOGICAL_4 * restrict msrc;\n       GFC_INTEGER_8 result;\n       src = base;\n       msrc = mbase;"}, {"sha": "057724ad80ed6ca84b489cf54f703b84a2da9594", "filename": "libgfortran/generated/maxloc1_8_r16.c", "status": "modified", "additions": 20, "deletions": 14, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fmaxloc1_8_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fmaxloc1_8_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_8_r16.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -39,18 +39,21 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_REAL_16) && defined (HAVE_GFC_INTEGER_8)\n \n \n-extern void maxloc1_8_r16 (gfc_array_i8 *, gfc_array_r16 *, index_type *);\n+extern void maxloc1_8_r16 (gfc_array_i8 * const restrict, \n+\tgfc_array_r16 * const restrict, const index_type * const restrict);\n export_proto(maxloc1_8_r16);\n \n void\n-maxloc1_8_r16 (gfc_array_i8 *retarray, gfc_array_r16 *array, index_type *pdim)\n+maxloc1_8_r16 (gfc_array_i8 * const restrict retarray, \n+\tgfc_array_r16 * const restrict array, \n+\tconst index_type * const restrict pdim)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n-  GFC_REAL_16 *base;\n-  GFC_INTEGER_8 *dest;\n+  const GFC_REAL_16 * restrict base;\n+  GFC_INTEGER_8 * restrict dest;\n   index_type rank;\n   index_type n;\n   index_type len;\n@@ -122,7 +125,7 @@ maxloc1_8_r16 (gfc_array_i8 *retarray, gfc_array_r16 *array, index_type *pdim)\n \n   while (base)\n     {\n-      GFC_REAL_16 *src;\n+      const GFC_REAL_16 * restrict src;\n       GFC_INTEGER_8 result;\n       src = base;\n       {\n@@ -178,22 +181,25 @@ maxloc1_8_r16 (gfc_array_i8 *retarray, gfc_array_r16 *array, index_type *pdim)\n }\n \n \n-extern void mmaxloc1_8_r16 (gfc_array_i8 *, gfc_array_r16 *, index_type *,\n-\t\t\t\t\t       gfc_array_l4 *);\n+extern void mmaxloc1_8_r16 (gfc_array_i8 * const restrict, \n+\tgfc_array_r16 * const restrict, const index_type * const restrict,\n+\tgfc_array_l4 * const restrict);\n export_proto(mmaxloc1_8_r16);\n \n void\n-mmaxloc1_8_r16 (gfc_array_i8 * retarray, gfc_array_r16 * array,\n-\t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n+mmaxloc1_8_r16 (gfc_array_i8 * const restrict retarray, \n+\tgfc_array_r16 * const restrict array, \n+\tconst index_type * const restrict pdim, \n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n-  GFC_INTEGER_8 *dest;\n-  GFC_REAL_16 *base;\n-  GFC_LOGICAL_4 *mbase;\n+  GFC_INTEGER_8 * restrict dest;\n+  const GFC_REAL_16 * restrict base;\n+  const GFC_LOGICAL_4 * restrict mbase;\n   int rank;\n   int dim;\n   index_type n;\n@@ -284,8 +290,8 @@ mmaxloc1_8_r16 (gfc_array_i8 * retarray, gfc_array_r16 * array,\n \n   while (base)\n     {\n-      GFC_REAL_16 *src;\n-      GFC_LOGICAL_4 *msrc;\n+      const GFC_REAL_16 * restrict src;\n+      const GFC_LOGICAL_4 * restrict msrc;\n       GFC_INTEGER_8 result;\n       src = base;\n       msrc = mbase;"}, {"sha": "4775da2319036266767893ba4030266c87106bda", "filename": "libgfortran/generated/maxloc1_8_r4.c", "status": "modified", "additions": 20, "deletions": 14, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fmaxloc1_8_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fmaxloc1_8_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_8_r4.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -39,18 +39,21 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_REAL_4) && defined (HAVE_GFC_INTEGER_8)\n \n \n-extern void maxloc1_8_r4 (gfc_array_i8 *, gfc_array_r4 *, index_type *);\n+extern void maxloc1_8_r4 (gfc_array_i8 * const restrict, \n+\tgfc_array_r4 * const restrict, const index_type * const restrict);\n export_proto(maxloc1_8_r4);\n \n void\n-maxloc1_8_r4 (gfc_array_i8 *retarray, gfc_array_r4 *array, index_type *pdim)\n+maxloc1_8_r4 (gfc_array_i8 * const restrict retarray, \n+\tgfc_array_r4 * const restrict array, \n+\tconst index_type * const restrict pdim)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n-  GFC_REAL_4 *base;\n-  GFC_INTEGER_8 *dest;\n+  const GFC_REAL_4 * restrict base;\n+  GFC_INTEGER_8 * restrict dest;\n   index_type rank;\n   index_type n;\n   index_type len;\n@@ -122,7 +125,7 @@ maxloc1_8_r4 (gfc_array_i8 *retarray, gfc_array_r4 *array, index_type *pdim)\n \n   while (base)\n     {\n-      GFC_REAL_4 *src;\n+      const GFC_REAL_4 * restrict src;\n       GFC_INTEGER_8 result;\n       src = base;\n       {\n@@ -178,22 +181,25 @@ maxloc1_8_r4 (gfc_array_i8 *retarray, gfc_array_r4 *array, index_type *pdim)\n }\n \n \n-extern void mmaxloc1_8_r4 (gfc_array_i8 *, gfc_array_r4 *, index_type *,\n-\t\t\t\t\t       gfc_array_l4 *);\n+extern void mmaxloc1_8_r4 (gfc_array_i8 * const restrict, \n+\tgfc_array_r4 * const restrict, const index_type * const restrict,\n+\tgfc_array_l4 * const restrict);\n export_proto(mmaxloc1_8_r4);\n \n void\n-mmaxloc1_8_r4 (gfc_array_i8 * retarray, gfc_array_r4 * array,\n-\t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n+mmaxloc1_8_r4 (gfc_array_i8 * const restrict retarray, \n+\tgfc_array_r4 * const restrict array, \n+\tconst index_type * const restrict pdim, \n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n-  GFC_INTEGER_8 *dest;\n-  GFC_REAL_4 *base;\n-  GFC_LOGICAL_4 *mbase;\n+  GFC_INTEGER_8 * restrict dest;\n+  const GFC_REAL_4 * restrict base;\n+  const GFC_LOGICAL_4 * restrict mbase;\n   int rank;\n   int dim;\n   index_type n;\n@@ -284,8 +290,8 @@ mmaxloc1_8_r4 (gfc_array_i8 * retarray, gfc_array_r4 * array,\n \n   while (base)\n     {\n-      GFC_REAL_4 *src;\n-      GFC_LOGICAL_4 *msrc;\n+      const GFC_REAL_4 * restrict src;\n+      const GFC_LOGICAL_4 * restrict msrc;\n       GFC_INTEGER_8 result;\n       src = base;\n       msrc = mbase;"}, {"sha": "8035aa2196b8251fc696adec5d1b0d9e7abe8926", "filename": "libgfortran/generated/maxloc1_8_r8.c", "status": "modified", "additions": 20, "deletions": 14, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fmaxloc1_8_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fmaxloc1_8_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_8_r8.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -39,18 +39,21 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_REAL_8) && defined (HAVE_GFC_INTEGER_8)\n \n \n-extern void maxloc1_8_r8 (gfc_array_i8 *, gfc_array_r8 *, index_type *);\n+extern void maxloc1_8_r8 (gfc_array_i8 * const restrict, \n+\tgfc_array_r8 * const restrict, const index_type * const restrict);\n export_proto(maxloc1_8_r8);\n \n void\n-maxloc1_8_r8 (gfc_array_i8 *retarray, gfc_array_r8 *array, index_type *pdim)\n+maxloc1_8_r8 (gfc_array_i8 * const restrict retarray, \n+\tgfc_array_r8 * const restrict array, \n+\tconst index_type * const restrict pdim)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n-  GFC_REAL_8 *base;\n-  GFC_INTEGER_8 *dest;\n+  const GFC_REAL_8 * restrict base;\n+  GFC_INTEGER_8 * restrict dest;\n   index_type rank;\n   index_type n;\n   index_type len;\n@@ -122,7 +125,7 @@ maxloc1_8_r8 (gfc_array_i8 *retarray, gfc_array_r8 *array, index_type *pdim)\n \n   while (base)\n     {\n-      GFC_REAL_8 *src;\n+      const GFC_REAL_8 * restrict src;\n       GFC_INTEGER_8 result;\n       src = base;\n       {\n@@ -178,22 +181,25 @@ maxloc1_8_r8 (gfc_array_i8 *retarray, gfc_array_r8 *array, index_type *pdim)\n }\n \n \n-extern void mmaxloc1_8_r8 (gfc_array_i8 *, gfc_array_r8 *, index_type *,\n-\t\t\t\t\t       gfc_array_l4 *);\n+extern void mmaxloc1_8_r8 (gfc_array_i8 * const restrict, \n+\tgfc_array_r8 * const restrict, const index_type * const restrict,\n+\tgfc_array_l4 * const restrict);\n export_proto(mmaxloc1_8_r8);\n \n void\n-mmaxloc1_8_r8 (gfc_array_i8 * retarray, gfc_array_r8 * array,\n-\t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n+mmaxloc1_8_r8 (gfc_array_i8 * const restrict retarray, \n+\tgfc_array_r8 * const restrict array, \n+\tconst index_type * const restrict pdim, \n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n-  GFC_INTEGER_8 *dest;\n-  GFC_REAL_8 *base;\n-  GFC_LOGICAL_4 *mbase;\n+  GFC_INTEGER_8 * restrict dest;\n+  const GFC_REAL_8 * restrict base;\n+  const GFC_LOGICAL_4 * restrict mbase;\n   int rank;\n   int dim;\n   index_type n;\n@@ -284,8 +290,8 @@ mmaxloc1_8_r8 (gfc_array_i8 * retarray, gfc_array_r8 * array,\n \n   while (base)\n     {\n-      GFC_REAL_8 *src;\n-      GFC_LOGICAL_4 *msrc;\n+      const GFC_REAL_8 * restrict src;\n+      const GFC_LOGICAL_4 * restrict msrc;\n       GFC_INTEGER_8 result;\n       src = base;\n       msrc = mbase;"}, {"sha": "9ae812ed7eae6300ad8232a349fe03f1511e5eb2", "filename": "libgfortran/generated/maxval_i16.c", "status": "modified", "additions": 20, "deletions": 14, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fmaxval_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fmaxval_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxval_i16.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -38,18 +38,21 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_INTEGER_16) && defined (HAVE_GFC_INTEGER_16)\n \n \n-extern void maxval_i16 (gfc_array_i16 *, gfc_array_i16 *, index_type *);\n+extern void maxval_i16 (gfc_array_i16 * const restrict, \n+\tgfc_array_i16 * const restrict, const index_type * const restrict);\n export_proto(maxval_i16);\n \n void\n-maxval_i16 (gfc_array_i16 *retarray, gfc_array_i16 *array, index_type *pdim)\n+maxval_i16 (gfc_array_i16 * const restrict retarray, \n+\tgfc_array_i16 * const restrict array, \n+\tconst index_type * const restrict pdim)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n-  GFC_INTEGER_16 *base;\n-  GFC_INTEGER_16 *dest;\n+  const GFC_INTEGER_16 * restrict base;\n+  GFC_INTEGER_16 * restrict dest;\n   index_type rank;\n   index_type n;\n   index_type len;\n@@ -121,7 +124,7 @@ maxval_i16 (gfc_array_i16 *retarray, gfc_array_i16 *array, index_type *pdim)\n \n   while (base)\n     {\n-      GFC_INTEGER_16 *src;\n+      const GFC_INTEGER_16 * restrict src;\n       GFC_INTEGER_16 result;\n       src = base;\n       {\n@@ -172,22 +175,25 @@ maxval_i16 (gfc_array_i16 *retarray, gfc_array_i16 *array, index_type *pdim)\n }\n \n \n-extern void mmaxval_i16 (gfc_array_i16 *, gfc_array_i16 *, index_type *,\n-\t\t\t\t\t       gfc_array_l4 *);\n+extern void mmaxval_i16 (gfc_array_i16 * const restrict, \n+\tgfc_array_i16 * const restrict, const index_type * const restrict,\n+\tgfc_array_l4 * const restrict);\n export_proto(mmaxval_i16);\n \n void\n-mmaxval_i16 (gfc_array_i16 * retarray, gfc_array_i16 * array,\n-\t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n+mmaxval_i16 (gfc_array_i16 * const restrict retarray, \n+\tgfc_array_i16 * const restrict array, \n+\tconst index_type * const restrict pdim, \n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n-  GFC_INTEGER_16 *dest;\n-  GFC_INTEGER_16 *base;\n-  GFC_LOGICAL_4 *mbase;\n+  GFC_INTEGER_16 * restrict dest;\n+  const GFC_INTEGER_16 * restrict base;\n+  const GFC_LOGICAL_4 * restrict mbase;\n   int rank;\n   int dim;\n   index_type n;\n@@ -278,8 +284,8 @@ mmaxval_i16 (gfc_array_i16 * retarray, gfc_array_i16 * array,\n \n   while (base)\n     {\n-      GFC_INTEGER_16 *src;\n-      GFC_LOGICAL_4 *msrc;\n+      const GFC_INTEGER_16 * restrict src;\n+      const GFC_LOGICAL_4 * restrict msrc;\n       GFC_INTEGER_16 result;\n       src = base;\n       msrc = mbase;"}, {"sha": "3ee7ce04edd831e24e20a3111c01dca904918dbf", "filename": "libgfortran/generated/maxval_i4.c", "status": "modified", "additions": 20, "deletions": 14, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fmaxval_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fmaxval_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxval_i4.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -38,18 +38,21 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_INTEGER_4) && defined (HAVE_GFC_INTEGER_4)\n \n \n-extern void maxval_i4 (gfc_array_i4 *, gfc_array_i4 *, index_type *);\n+extern void maxval_i4 (gfc_array_i4 * const restrict, \n+\tgfc_array_i4 * const restrict, const index_type * const restrict);\n export_proto(maxval_i4);\n \n void\n-maxval_i4 (gfc_array_i4 *retarray, gfc_array_i4 *array, index_type *pdim)\n+maxval_i4 (gfc_array_i4 * const restrict retarray, \n+\tgfc_array_i4 * const restrict array, \n+\tconst index_type * const restrict pdim)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n-  GFC_INTEGER_4 *base;\n-  GFC_INTEGER_4 *dest;\n+  const GFC_INTEGER_4 * restrict base;\n+  GFC_INTEGER_4 * restrict dest;\n   index_type rank;\n   index_type n;\n   index_type len;\n@@ -121,7 +124,7 @@ maxval_i4 (gfc_array_i4 *retarray, gfc_array_i4 *array, index_type *pdim)\n \n   while (base)\n     {\n-      GFC_INTEGER_4 *src;\n+      const GFC_INTEGER_4 * restrict src;\n       GFC_INTEGER_4 result;\n       src = base;\n       {\n@@ -172,22 +175,25 @@ maxval_i4 (gfc_array_i4 *retarray, gfc_array_i4 *array, index_type *pdim)\n }\n \n \n-extern void mmaxval_i4 (gfc_array_i4 *, gfc_array_i4 *, index_type *,\n-\t\t\t\t\t       gfc_array_l4 *);\n+extern void mmaxval_i4 (gfc_array_i4 * const restrict, \n+\tgfc_array_i4 * const restrict, const index_type * const restrict,\n+\tgfc_array_l4 * const restrict);\n export_proto(mmaxval_i4);\n \n void\n-mmaxval_i4 (gfc_array_i4 * retarray, gfc_array_i4 * array,\n-\t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n+mmaxval_i4 (gfc_array_i4 * const restrict retarray, \n+\tgfc_array_i4 * const restrict array, \n+\tconst index_type * const restrict pdim, \n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n-  GFC_INTEGER_4 *dest;\n-  GFC_INTEGER_4 *base;\n-  GFC_LOGICAL_4 *mbase;\n+  GFC_INTEGER_4 * restrict dest;\n+  const GFC_INTEGER_4 * restrict base;\n+  const GFC_LOGICAL_4 * restrict mbase;\n   int rank;\n   int dim;\n   index_type n;\n@@ -278,8 +284,8 @@ mmaxval_i4 (gfc_array_i4 * retarray, gfc_array_i4 * array,\n \n   while (base)\n     {\n-      GFC_INTEGER_4 *src;\n-      GFC_LOGICAL_4 *msrc;\n+      const GFC_INTEGER_4 * restrict src;\n+      const GFC_LOGICAL_4 * restrict msrc;\n       GFC_INTEGER_4 result;\n       src = base;\n       msrc = mbase;"}, {"sha": "f2cf7fc908fd51073f29f4461e9b435e1c5ef703", "filename": "libgfortran/generated/maxval_i8.c", "status": "modified", "additions": 20, "deletions": 14, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fmaxval_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fmaxval_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxval_i8.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -38,18 +38,21 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_INTEGER_8) && defined (HAVE_GFC_INTEGER_8)\n \n \n-extern void maxval_i8 (gfc_array_i8 *, gfc_array_i8 *, index_type *);\n+extern void maxval_i8 (gfc_array_i8 * const restrict, \n+\tgfc_array_i8 * const restrict, const index_type * const restrict);\n export_proto(maxval_i8);\n \n void\n-maxval_i8 (gfc_array_i8 *retarray, gfc_array_i8 *array, index_type *pdim)\n+maxval_i8 (gfc_array_i8 * const restrict retarray, \n+\tgfc_array_i8 * const restrict array, \n+\tconst index_type * const restrict pdim)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n-  GFC_INTEGER_8 *base;\n-  GFC_INTEGER_8 *dest;\n+  const GFC_INTEGER_8 * restrict base;\n+  GFC_INTEGER_8 * restrict dest;\n   index_type rank;\n   index_type n;\n   index_type len;\n@@ -121,7 +124,7 @@ maxval_i8 (gfc_array_i8 *retarray, gfc_array_i8 *array, index_type *pdim)\n \n   while (base)\n     {\n-      GFC_INTEGER_8 *src;\n+      const GFC_INTEGER_8 * restrict src;\n       GFC_INTEGER_8 result;\n       src = base;\n       {\n@@ -172,22 +175,25 @@ maxval_i8 (gfc_array_i8 *retarray, gfc_array_i8 *array, index_type *pdim)\n }\n \n \n-extern void mmaxval_i8 (gfc_array_i8 *, gfc_array_i8 *, index_type *,\n-\t\t\t\t\t       gfc_array_l4 *);\n+extern void mmaxval_i8 (gfc_array_i8 * const restrict, \n+\tgfc_array_i8 * const restrict, const index_type * const restrict,\n+\tgfc_array_l4 * const restrict);\n export_proto(mmaxval_i8);\n \n void\n-mmaxval_i8 (gfc_array_i8 * retarray, gfc_array_i8 * array,\n-\t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n+mmaxval_i8 (gfc_array_i8 * const restrict retarray, \n+\tgfc_array_i8 * const restrict array, \n+\tconst index_type * const restrict pdim, \n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n-  GFC_INTEGER_8 *dest;\n-  GFC_INTEGER_8 *base;\n-  GFC_LOGICAL_4 *mbase;\n+  GFC_INTEGER_8 * restrict dest;\n+  const GFC_INTEGER_8 * restrict base;\n+  const GFC_LOGICAL_4 * restrict mbase;\n   int rank;\n   int dim;\n   index_type n;\n@@ -278,8 +284,8 @@ mmaxval_i8 (gfc_array_i8 * retarray, gfc_array_i8 * array,\n \n   while (base)\n     {\n-      GFC_INTEGER_8 *src;\n-      GFC_LOGICAL_4 *msrc;\n+      const GFC_INTEGER_8 * restrict src;\n+      const GFC_LOGICAL_4 * restrict msrc;\n       GFC_INTEGER_8 result;\n       src = base;\n       msrc = mbase;"}, {"sha": "9efa92aac8d56b4c447e8801e858fab1cba40e45", "filename": "libgfortran/generated/maxval_r10.c", "status": "modified", "additions": 20, "deletions": 14, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fmaxval_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fmaxval_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxval_r10.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -38,18 +38,21 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_REAL_10) && defined (HAVE_GFC_REAL_10)\n \n \n-extern void maxval_r10 (gfc_array_r10 *, gfc_array_r10 *, index_type *);\n+extern void maxval_r10 (gfc_array_r10 * const restrict, \n+\tgfc_array_r10 * const restrict, const index_type * const restrict);\n export_proto(maxval_r10);\n \n void\n-maxval_r10 (gfc_array_r10 *retarray, gfc_array_r10 *array, index_type *pdim)\n+maxval_r10 (gfc_array_r10 * const restrict retarray, \n+\tgfc_array_r10 * const restrict array, \n+\tconst index_type * const restrict pdim)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n-  GFC_REAL_10 *base;\n-  GFC_REAL_10 *dest;\n+  const GFC_REAL_10 * restrict base;\n+  GFC_REAL_10 * restrict dest;\n   index_type rank;\n   index_type n;\n   index_type len;\n@@ -121,7 +124,7 @@ maxval_r10 (gfc_array_r10 *retarray, gfc_array_r10 *array, index_type *pdim)\n \n   while (base)\n     {\n-      GFC_REAL_10 *src;\n+      const GFC_REAL_10 * restrict src;\n       GFC_REAL_10 result;\n       src = base;\n       {\n@@ -172,22 +175,25 @@ maxval_r10 (gfc_array_r10 *retarray, gfc_array_r10 *array, index_type *pdim)\n }\n \n \n-extern void mmaxval_r10 (gfc_array_r10 *, gfc_array_r10 *, index_type *,\n-\t\t\t\t\t       gfc_array_l4 *);\n+extern void mmaxval_r10 (gfc_array_r10 * const restrict, \n+\tgfc_array_r10 * const restrict, const index_type * const restrict,\n+\tgfc_array_l4 * const restrict);\n export_proto(mmaxval_r10);\n \n void\n-mmaxval_r10 (gfc_array_r10 * retarray, gfc_array_r10 * array,\n-\t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n+mmaxval_r10 (gfc_array_r10 * const restrict retarray, \n+\tgfc_array_r10 * const restrict array, \n+\tconst index_type * const restrict pdim, \n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n-  GFC_REAL_10 *dest;\n-  GFC_REAL_10 *base;\n-  GFC_LOGICAL_4 *mbase;\n+  GFC_REAL_10 * restrict dest;\n+  const GFC_REAL_10 * restrict base;\n+  const GFC_LOGICAL_4 * restrict mbase;\n   int rank;\n   int dim;\n   index_type n;\n@@ -278,8 +284,8 @@ mmaxval_r10 (gfc_array_r10 * retarray, gfc_array_r10 * array,\n \n   while (base)\n     {\n-      GFC_REAL_10 *src;\n-      GFC_LOGICAL_4 *msrc;\n+      const GFC_REAL_10 * restrict src;\n+      const GFC_LOGICAL_4 * restrict msrc;\n       GFC_REAL_10 result;\n       src = base;\n       msrc = mbase;"}, {"sha": "a4d27be7316853af787f73516d53ad3db8be3748", "filename": "libgfortran/generated/maxval_r16.c", "status": "modified", "additions": 20, "deletions": 14, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fmaxval_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fmaxval_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxval_r16.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -38,18 +38,21 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_REAL_16) && defined (HAVE_GFC_REAL_16)\n \n \n-extern void maxval_r16 (gfc_array_r16 *, gfc_array_r16 *, index_type *);\n+extern void maxval_r16 (gfc_array_r16 * const restrict, \n+\tgfc_array_r16 * const restrict, const index_type * const restrict);\n export_proto(maxval_r16);\n \n void\n-maxval_r16 (gfc_array_r16 *retarray, gfc_array_r16 *array, index_type *pdim)\n+maxval_r16 (gfc_array_r16 * const restrict retarray, \n+\tgfc_array_r16 * const restrict array, \n+\tconst index_type * const restrict pdim)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n-  GFC_REAL_16 *base;\n-  GFC_REAL_16 *dest;\n+  const GFC_REAL_16 * restrict base;\n+  GFC_REAL_16 * restrict dest;\n   index_type rank;\n   index_type n;\n   index_type len;\n@@ -121,7 +124,7 @@ maxval_r16 (gfc_array_r16 *retarray, gfc_array_r16 *array, index_type *pdim)\n \n   while (base)\n     {\n-      GFC_REAL_16 *src;\n+      const GFC_REAL_16 * restrict src;\n       GFC_REAL_16 result;\n       src = base;\n       {\n@@ -172,22 +175,25 @@ maxval_r16 (gfc_array_r16 *retarray, gfc_array_r16 *array, index_type *pdim)\n }\n \n \n-extern void mmaxval_r16 (gfc_array_r16 *, gfc_array_r16 *, index_type *,\n-\t\t\t\t\t       gfc_array_l4 *);\n+extern void mmaxval_r16 (gfc_array_r16 * const restrict, \n+\tgfc_array_r16 * const restrict, const index_type * const restrict,\n+\tgfc_array_l4 * const restrict);\n export_proto(mmaxval_r16);\n \n void\n-mmaxval_r16 (gfc_array_r16 * retarray, gfc_array_r16 * array,\n-\t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n+mmaxval_r16 (gfc_array_r16 * const restrict retarray, \n+\tgfc_array_r16 * const restrict array, \n+\tconst index_type * const restrict pdim, \n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n-  GFC_REAL_16 *dest;\n-  GFC_REAL_16 *base;\n-  GFC_LOGICAL_4 *mbase;\n+  GFC_REAL_16 * restrict dest;\n+  const GFC_REAL_16 * restrict base;\n+  const GFC_LOGICAL_4 * restrict mbase;\n   int rank;\n   int dim;\n   index_type n;\n@@ -278,8 +284,8 @@ mmaxval_r16 (gfc_array_r16 * retarray, gfc_array_r16 * array,\n \n   while (base)\n     {\n-      GFC_REAL_16 *src;\n-      GFC_LOGICAL_4 *msrc;\n+      const GFC_REAL_16 * restrict src;\n+      const GFC_LOGICAL_4 * restrict msrc;\n       GFC_REAL_16 result;\n       src = base;\n       msrc = mbase;"}, {"sha": "42f95a18adbabba5e6e935b0444f7e520c93d253", "filename": "libgfortran/generated/maxval_r4.c", "status": "modified", "additions": 20, "deletions": 14, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fmaxval_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fmaxval_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxval_r4.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -38,18 +38,21 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_REAL_4) && defined (HAVE_GFC_REAL_4)\n \n \n-extern void maxval_r4 (gfc_array_r4 *, gfc_array_r4 *, index_type *);\n+extern void maxval_r4 (gfc_array_r4 * const restrict, \n+\tgfc_array_r4 * const restrict, const index_type * const restrict);\n export_proto(maxval_r4);\n \n void\n-maxval_r4 (gfc_array_r4 *retarray, gfc_array_r4 *array, index_type *pdim)\n+maxval_r4 (gfc_array_r4 * const restrict retarray, \n+\tgfc_array_r4 * const restrict array, \n+\tconst index_type * const restrict pdim)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n-  GFC_REAL_4 *base;\n-  GFC_REAL_4 *dest;\n+  const GFC_REAL_4 * restrict base;\n+  GFC_REAL_4 * restrict dest;\n   index_type rank;\n   index_type n;\n   index_type len;\n@@ -121,7 +124,7 @@ maxval_r4 (gfc_array_r4 *retarray, gfc_array_r4 *array, index_type *pdim)\n \n   while (base)\n     {\n-      GFC_REAL_4 *src;\n+      const GFC_REAL_4 * restrict src;\n       GFC_REAL_4 result;\n       src = base;\n       {\n@@ -172,22 +175,25 @@ maxval_r4 (gfc_array_r4 *retarray, gfc_array_r4 *array, index_type *pdim)\n }\n \n \n-extern void mmaxval_r4 (gfc_array_r4 *, gfc_array_r4 *, index_type *,\n-\t\t\t\t\t       gfc_array_l4 *);\n+extern void mmaxval_r4 (gfc_array_r4 * const restrict, \n+\tgfc_array_r4 * const restrict, const index_type * const restrict,\n+\tgfc_array_l4 * const restrict);\n export_proto(mmaxval_r4);\n \n void\n-mmaxval_r4 (gfc_array_r4 * retarray, gfc_array_r4 * array,\n-\t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n+mmaxval_r4 (gfc_array_r4 * const restrict retarray, \n+\tgfc_array_r4 * const restrict array, \n+\tconst index_type * const restrict pdim, \n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n-  GFC_REAL_4 *dest;\n-  GFC_REAL_4 *base;\n-  GFC_LOGICAL_4 *mbase;\n+  GFC_REAL_4 * restrict dest;\n+  const GFC_REAL_4 * restrict base;\n+  const GFC_LOGICAL_4 * restrict mbase;\n   int rank;\n   int dim;\n   index_type n;\n@@ -278,8 +284,8 @@ mmaxval_r4 (gfc_array_r4 * retarray, gfc_array_r4 * array,\n \n   while (base)\n     {\n-      GFC_REAL_4 *src;\n-      GFC_LOGICAL_4 *msrc;\n+      const GFC_REAL_4 * restrict src;\n+      const GFC_LOGICAL_4 * restrict msrc;\n       GFC_REAL_4 result;\n       src = base;\n       msrc = mbase;"}, {"sha": "f70442506dccfbf6e4ddceef8029d6515ca60083", "filename": "libgfortran/generated/maxval_r8.c", "status": "modified", "additions": 20, "deletions": 14, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fmaxval_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fmaxval_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxval_r8.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -38,18 +38,21 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_REAL_8) && defined (HAVE_GFC_REAL_8)\n \n \n-extern void maxval_r8 (gfc_array_r8 *, gfc_array_r8 *, index_type *);\n+extern void maxval_r8 (gfc_array_r8 * const restrict, \n+\tgfc_array_r8 * const restrict, const index_type * const restrict);\n export_proto(maxval_r8);\n \n void\n-maxval_r8 (gfc_array_r8 *retarray, gfc_array_r8 *array, index_type *pdim)\n+maxval_r8 (gfc_array_r8 * const restrict retarray, \n+\tgfc_array_r8 * const restrict array, \n+\tconst index_type * const restrict pdim)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n-  GFC_REAL_8 *base;\n-  GFC_REAL_8 *dest;\n+  const GFC_REAL_8 * restrict base;\n+  GFC_REAL_8 * restrict dest;\n   index_type rank;\n   index_type n;\n   index_type len;\n@@ -121,7 +124,7 @@ maxval_r8 (gfc_array_r8 *retarray, gfc_array_r8 *array, index_type *pdim)\n \n   while (base)\n     {\n-      GFC_REAL_8 *src;\n+      const GFC_REAL_8 * restrict src;\n       GFC_REAL_8 result;\n       src = base;\n       {\n@@ -172,22 +175,25 @@ maxval_r8 (gfc_array_r8 *retarray, gfc_array_r8 *array, index_type *pdim)\n }\n \n \n-extern void mmaxval_r8 (gfc_array_r8 *, gfc_array_r8 *, index_type *,\n-\t\t\t\t\t       gfc_array_l4 *);\n+extern void mmaxval_r8 (gfc_array_r8 * const restrict, \n+\tgfc_array_r8 * const restrict, const index_type * const restrict,\n+\tgfc_array_l4 * const restrict);\n export_proto(mmaxval_r8);\n \n void\n-mmaxval_r8 (gfc_array_r8 * retarray, gfc_array_r8 * array,\n-\t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n+mmaxval_r8 (gfc_array_r8 * const restrict retarray, \n+\tgfc_array_r8 * const restrict array, \n+\tconst index_type * const restrict pdim, \n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n-  GFC_REAL_8 *dest;\n-  GFC_REAL_8 *base;\n-  GFC_LOGICAL_4 *mbase;\n+  GFC_REAL_8 * restrict dest;\n+  const GFC_REAL_8 * restrict base;\n+  const GFC_LOGICAL_4 * restrict mbase;\n   int rank;\n   int dim;\n   index_type n;\n@@ -278,8 +284,8 @@ mmaxval_r8 (gfc_array_r8 * retarray, gfc_array_r8 * array,\n \n   while (base)\n     {\n-      GFC_REAL_8 *src;\n-      GFC_LOGICAL_4 *msrc;\n+      const GFC_REAL_8 * restrict src;\n+      const GFC_LOGICAL_4 * restrict msrc;\n       GFC_REAL_8 result;\n       src = base;\n       msrc = mbase;"}, {"sha": "99d51efe94762514dc9a4cd9e807baddb829b967", "filename": "libgfortran/generated/minloc0_16_i16.c", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fminloc0_16_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fminloc0_16_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_16_i16.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -39,17 +39,19 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_INTEGER_16) && defined (HAVE_GFC_INTEGER_16)\n \n \n-extern void minloc0_16_i16 (gfc_array_i16 * retarray, gfc_array_i16 *array);\n+extern void minloc0_16_i16 (gfc_array_i16 * const restrict retarray, \n+\tgfc_array_i16 * const restrict array);\n export_proto(minloc0_16_i16);\n \n void\n-minloc0_16_i16 (gfc_array_i16 * retarray, gfc_array_i16 *array)\n+minloc0_16_i16 (gfc_array_i16 * const restrict retarray, \n+\tgfc_array_i16 * const restrict array)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride;\n-  GFC_INTEGER_16 *base;\n+  const GFC_INTEGER_16 *base;\n   GFC_INTEGER_16 *dest;\n   index_type rank;\n   index_type n;\n@@ -154,20 +156,22 @@ minloc0_16_i16 (gfc_array_i16 * retarray, gfc_array_i16 *array)\n }\n \n \n-extern void mminloc0_16_i16 (gfc_array_i16 *, gfc_array_i16 *, gfc_array_l4 *);\n+extern void mminloc0_16_i16 (gfc_array_i16 * const restrict, \n+\tgfc_array_i16 * const restrict, gfc_array_l4 * const restrict);\n export_proto(mminloc0_16_i16);\n \n void\n-mminloc0_16_i16 (gfc_array_i16 * retarray, gfc_array_i16 *array,\n-\t\t\t\t  gfc_array_l4 * mask)\n+mminloc0_16_i16 (gfc_array_i16 * const restrict retarray, \n+\tgfc_array_i16 * const restrict array,\n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n   index_type dstride;\n   GFC_INTEGER_16 *dest;\n-  GFC_INTEGER_16 *base;\n+  const GFC_INTEGER_16 *base;\n   GFC_LOGICAL_4 *mbase;\n   int rank;\n   index_type n;"}, {"sha": "27b2bebf021c2655327f3bae80dcc1683177f85b", "filename": "libgfortran/generated/minloc0_16_i4.c", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fminloc0_16_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fminloc0_16_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_16_i4.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -39,17 +39,19 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_INTEGER_4) && defined (HAVE_GFC_INTEGER_16)\n \n \n-extern void minloc0_16_i4 (gfc_array_i16 * retarray, gfc_array_i4 *array);\n+extern void minloc0_16_i4 (gfc_array_i16 * const restrict retarray, \n+\tgfc_array_i4 * const restrict array);\n export_proto(minloc0_16_i4);\n \n void\n-minloc0_16_i4 (gfc_array_i16 * retarray, gfc_array_i4 *array)\n+minloc0_16_i4 (gfc_array_i16 * const restrict retarray, \n+\tgfc_array_i4 * const restrict array)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride;\n-  GFC_INTEGER_4 *base;\n+  const GFC_INTEGER_4 *base;\n   GFC_INTEGER_16 *dest;\n   index_type rank;\n   index_type n;\n@@ -154,20 +156,22 @@ minloc0_16_i4 (gfc_array_i16 * retarray, gfc_array_i4 *array)\n }\n \n \n-extern void mminloc0_16_i4 (gfc_array_i16 *, gfc_array_i4 *, gfc_array_l4 *);\n+extern void mminloc0_16_i4 (gfc_array_i16 * const restrict, \n+\tgfc_array_i4 * const restrict, gfc_array_l4 * const restrict);\n export_proto(mminloc0_16_i4);\n \n void\n-mminloc0_16_i4 (gfc_array_i16 * retarray, gfc_array_i4 *array,\n-\t\t\t\t  gfc_array_l4 * mask)\n+mminloc0_16_i4 (gfc_array_i16 * const restrict retarray, \n+\tgfc_array_i4 * const restrict array,\n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n   index_type dstride;\n   GFC_INTEGER_16 *dest;\n-  GFC_INTEGER_4 *base;\n+  const GFC_INTEGER_4 *base;\n   GFC_LOGICAL_4 *mbase;\n   int rank;\n   index_type n;"}, {"sha": "eed2f9c7a10688559905daa01f78e981965190be", "filename": "libgfortran/generated/minloc0_16_i8.c", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fminloc0_16_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fminloc0_16_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_16_i8.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -39,17 +39,19 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_INTEGER_8) && defined (HAVE_GFC_INTEGER_16)\n \n \n-extern void minloc0_16_i8 (gfc_array_i16 * retarray, gfc_array_i8 *array);\n+extern void minloc0_16_i8 (gfc_array_i16 * const restrict retarray, \n+\tgfc_array_i8 * const restrict array);\n export_proto(minloc0_16_i8);\n \n void\n-minloc0_16_i8 (gfc_array_i16 * retarray, gfc_array_i8 *array)\n+minloc0_16_i8 (gfc_array_i16 * const restrict retarray, \n+\tgfc_array_i8 * const restrict array)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride;\n-  GFC_INTEGER_8 *base;\n+  const GFC_INTEGER_8 *base;\n   GFC_INTEGER_16 *dest;\n   index_type rank;\n   index_type n;\n@@ -154,20 +156,22 @@ minloc0_16_i8 (gfc_array_i16 * retarray, gfc_array_i8 *array)\n }\n \n \n-extern void mminloc0_16_i8 (gfc_array_i16 *, gfc_array_i8 *, gfc_array_l4 *);\n+extern void mminloc0_16_i8 (gfc_array_i16 * const restrict, \n+\tgfc_array_i8 * const restrict, gfc_array_l4 * const restrict);\n export_proto(mminloc0_16_i8);\n \n void\n-mminloc0_16_i8 (gfc_array_i16 * retarray, gfc_array_i8 *array,\n-\t\t\t\t  gfc_array_l4 * mask)\n+mminloc0_16_i8 (gfc_array_i16 * const restrict retarray, \n+\tgfc_array_i8 * const restrict array,\n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n   index_type dstride;\n   GFC_INTEGER_16 *dest;\n-  GFC_INTEGER_8 *base;\n+  const GFC_INTEGER_8 *base;\n   GFC_LOGICAL_4 *mbase;\n   int rank;\n   index_type n;"}, {"sha": "412676059b9806299d9e1ae5b5d0c43cd51c3c49", "filename": "libgfortran/generated/minloc0_16_r10.c", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fminloc0_16_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fminloc0_16_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_16_r10.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -39,17 +39,19 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_REAL_10) && defined (HAVE_GFC_INTEGER_16)\n \n \n-extern void minloc0_16_r10 (gfc_array_i16 * retarray, gfc_array_r10 *array);\n+extern void minloc0_16_r10 (gfc_array_i16 * const restrict retarray, \n+\tgfc_array_r10 * const restrict array);\n export_proto(minloc0_16_r10);\n \n void\n-minloc0_16_r10 (gfc_array_i16 * retarray, gfc_array_r10 *array)\n+minloc0_16_r10 (gfc_array_i16 * const restrict retarray, \n+\tgfc_array_r10 * const restrict array)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride;\n-  GFC_REAL_10 *base;\n+  const GFC_REAL_10 *base;\n   GFC_INTEGER_16 *dest;\n   index_type rank;\n   index_type n;\n@@ -154,20 +156,22 @@ minloc0_16_r10 (gfc_array_i16 * retarray, gfc_array_r10 *array)\n }\n \n \n-extern void mminloc0_16_r10 (gfc_array_i16 *, gfc_array_r10 *, gfc_array_l4 *);\n+extern void mminloc0_16_r10 (gfc_array_i16 * const restrict, \n+\tgfc_array_r10 * const restrict, gfc_array_l4 * const restrict);\n export_proto(mminloc0_16_r10);\n \n void\n-mminloc0_16_r10 (gfc_array_i16 * retarray, gfc_array_r10 *array,\n-\t\t\t\t  gfc_array_l4 * mask)\n+mminloc0_16_r10 (gfc_array_i16 * const restrict retarray, \n+\tgfc_array_r10 * const restrict array,\n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n   index_type dstride;\n   GFC_INTEGER_16 *dest;\n-  GFC_REAL_10 *base;\n+  const GFC_REAL_10 *base;\n   GFC_LOGICAL_4 *mbase;\n   int rank;\n   index_type n;"}, {"sha": "aad0889e03984f786198bfb2735463e11f30cbfe", "filename": "libgfortran/generated/minloc0_16_r16.c", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fminloc0_16_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fminloc0_16_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_16_r16.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -39,17 +39,19 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_REAL_16) && defined (HAVE_GFC_INTEGER_16)\n \n \n-extern void minloc0_16_r16 (gfc_array_i16 * retarray, gfc_array_r16 *array);\n+extern void minloc0_16_r16 (gfc_array_i16 * const restrict retarray, \n+\tgfc_array_r16 * const restrict array);\n export_proto(minloc0_16_r16);\n \n void\n-minloc0_16_r16 (gfc_array_i16 * retarray, gfc_array_r16 *array)\n+minloc0_16_r16 (gfc_array_i16 * const restrict retarray, \n+\tgfc_array_r16 * const restrict array)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride;\n-  GFC_REAL_16 *base;\n+  const GFC_REAL_16 *base;\n   GFC_INTEGER_16 *dest;\n   index_type rank;\n   index_type n;\n@@ -154,20 +156,22 @@ minloc0_16_r16 (gfc_array_i16 * retarray, gfc_array_r16 *array)\n }\n \n \n-extern void mminloc0_16_r16 (gfc_array_i16 *, gfc_array_r16 *, gfc_array_l4 *);\n+extern void mminloc0_16_r16 (gfc_array_i16 * const restrict, \n+\tgfc_array_r16 * const restrict, gfc_array_l4 * const restrict);\n export_proto(mminloc0_16_r16);\n \n void\n-mminloc0_16_r16 (gfc_array_i16 * retarray, gfc_array_r16 *array,\n-\t\t\t\t  gfc_array_l4 * mask)\n+mminloc0_16_r16 (gfc_array_i16 * const restrict retarray, \n+\tgfc_array_r16 * const restrict array,\n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n   index_type dstride;\n   GFC_INTEGER_16 *dest;\n-  GFC_REAL_16 *base;\n+  const GFC_REAL_16 *base;\n   GFC_LOGICAL_4 *mbase;\n   int rank;\n   index_type n;"}, {"sha": "6a89b9be3611d1c7b97dd2c2e1c801694fa95c8a", "filename": "libgfortran/generated/minloc0_16_r4.c", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fminloc0_16_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fminloc0_16_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_16_r4.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -39,17 +39,19 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_REAL_4) && defined (HAVE_GFC_INTEGER_16)\n \n \n-extern void minloc0_16_r4 (gfc_array_i16 * retarray, gfc_array_r4 *array);\n+extern void minloc0_16_r4 (gfc_array_i16 * const restrict retarray, \n+\tgfc_array_r4 * const restrict array);\n export_proto(minloc0_16_r4);\n \n void\n-minloc0_16_r4 (gfc_array_i16 * retarray, gfc_array_r4 *array)\n+minloc0_16_r4 (gfc_array_i16 * const restrict retarray, \n+\tgfc_array_r4 * const restrict array)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride;\n-  GFC_REAL_4 *base;\n+  const GFC_REAL_4 *base;\n   GFC_INTEGER_16 *dest;\n   index_type rank;\n   index_type n;\n@@ -154,20 +156,22 @@ minloc0_16_r4 (gfc_array_i16 * retarray, gfc_array_r4 *array)\n }\n \n \n-extern void mminloc0_16_r4 (gfc_array_i16 *, gfc_array_r4 *, gfc_array_l4 *);\n+extern void mminloc0_16_r4 (gfc_array_i16 * const restrict, \n+\tgfc_array_r4 * const restrict, gfc_array_l4 * const restrict);\n export_proto(mminloc0_16_r4);\n \n void\n-mminloc0_16_r4 (gfc_array_i16 * retarray, gfc_array_r4 *array,\n-\t\t\t\t  gfc_array_l4 * mask)\n+mminloc0_16_r4 (gfc_array_i16 * const restrict retarray, \n+\tgfc_array_r4 * const restrict array,\n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n   index_type dstride;\n   GFC_INTEGER_16 *dest;\n-  GFC_REAL_4 *base;\n+  const GFC_REAL_4 *base;\n   GFC_LOGICAL_4 *mbase;\n   int rank;\n   index_type n;"}, {"sha": "3eee3cf501a23ad997663bab3373999b5975efb3", "filename": "libgfortran/generated/minloc0_16_r8.c", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fminloc0_16_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fminloc0_16_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_16_r8.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -39,17 +39,19 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_REAL_8) && defined (HAVE_GFC_INTEGER_16)\n \n \n-extern void minloc0_16_r8 (gfc_array_i16 * retarray, gfc_array_r8 *array);\n+extern void minloc0_16_r8 (gfc_array_i16 * const restrict retarray, \n+\tgfc_array_r8 * const restrict array);\n export_proto(minloc0_16_r8);\n \n void\n-minloc0_16_r8 (gfc_array_i16 * retarray, gfc_array_r8 *array)\n+minloc0_16_r8 (gfc_array_i16 * const restrict retarray, \n+\tgfc_array_r8 * const restrict array)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride;\n-  GFC_REAL_8 *base;\n+  const GFC_REAL_8 *base;\n   GFC_INTEGER_16 *dest;\n   index_type rank;\n   index_type n;\n@@ -154,20 +156,22 @@ minloc0_16_r8 (gfc_array_i16 * retarray, gfc_array_r8 *array)\n }\n \n \n-extern void mminloc0_16_r8 (gfc_array_i16 *, gfc_array_r8 *, gfc_array_l4 *);\n+extern void mminloc0_16_r8 (gfc_array_i16 * const restrict, \n+\tgfc_array_r8 * const restrict, gfc_array_l4 * const restrict);\n export_proto(mminloc0_16_r8);\n \n void\n-mminloc0_16_r8 (gfc_array_i16 * retarray, gfc_array_r8 *array,\n-\t\t\t\t  gfc_array_l4 * mask)\n+mminloc0_16_r8 (gfc_array_i16 * const restrict retarray, \n+\tgfc_array_r8 * const restrict array,\n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n   index_type dstride;\n   GFC_INTEGER_16 *dest;\n-  GFC_REAL_8 *base;\n+  const GFC_REAL_8 *base;\n   GFC_LOGICAL_4 *mbase;\n   int rank;\n   index_type n;"}, {"sha": "dde98ec86e6a217e2d581a6d88f142eabdea1954", "filename": "libgfortran/generated/minloc0_4_i16.c", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fminloc0_4_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fminloc0_4_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_4_i16.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -39,17 +39,19 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_INTEGER_16) && defined (HAVE_GFC_INTEGER_4)\n \n \n-extern void minloc0_4_i16 (gfc_array_i4 * retarray, gfc_array_i16 *array);\n+extern void minloc0_4_i16 (gfc_array_i4 * const restrict retarray, \n+\tgfc_array_i16 * const restrict array);\n export_proto(minloc0_4_i16);\n \n void\n-minloc0_4_i16 (gfc_array_i4 * retarray, gfc_array_i16 *array)\n+minloc0_4_i16 (gfc_array_i4 * const restrict retarray, \n+\tgfc_array_i16 * const restrict array)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride;\n-  GFC_INTEGER_16 *base;\n+  const GFC_INTEGER_16 *base;\n   GFC_INTEGER_4 *dest;\n   index_type rank;\n   index_type n;\n@@ -154,20 +156,22 @@ minloc0_4_i16 (gfc_array_i4 * retarray, gfc_array_i16 *array)\n }\n \n \n-extern void mminloc0_4_i16 (gfc_array_i4 *, gfc_array_i16 *, gfc_array_l4 *);\n+extern void mminloc0_4_i16 (gfc_array_i4 * const restrict, \n+\tgfc_array_i16 * const restrict, gfc_array_l4 * const restrict);\n export_proto(mminloc0_4_i16);\n \n void\n-mminloc0_4_i16 (gfc_array_i4 * retarray, gfc_array_i16 *array,\n-\t\t\t\t  gfc_array_l4 * mask)\n+mminloc0_4_i16 (gfc_array_i4 * const restrict retarray, \n+\tgfc_array_i16 * const restrict array,\n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n   index_type dstride;\n   GFC_INTEGER_4 *dest;\n-  GFC_INTEGER_16 *base;\n+  const GFC_INTEGER_16 *base;\n   GFC_LOGICAL_4 *mbase;\n   int rank;\n   index_type n;"}, {"sha": "eb12d04c4bac06ba727a0caadac189916e8802ff", "filename": "libgfortran/generated/minloc0_4_i4.c", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fminloc0_4_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fminloc0_4_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_4_i4.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -39,17 +39,19 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_INTEGER_4) && defined (HAVE_GFC_INTEGER_4)\n \n \n-extern void minloc0_4_i4 (gfc_array_i4 * retarray, gfc_array_i4 *array);\n+extern void minloc0_4_i4 (gfc_array_i4 * const restrict retarray, \n+\tgfc_array_i4 * const restrict array);\n export_proto(minloc0_4_i4);\n \n void\n-minloc0_4_i4 (gfc_array_i4 * retarray, gfc_array_i4 *array)\n+minloc0_4_i4 (gfc_array_i4 * const restrict retarray, \n+\tgfc_array_i4 * const restrict array)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride;\n-  GFC_INTEGER_4 *base;\n+  const GFC_INTEGER_4 *base;\n   GFC_INTEGER_4 *dest;\n   index_type rank;\n   index_type n;\n@@ -154,20 +156,22 @@ minloc0_4_i4 (gfc_array_i4 * retarray, gfc_array_i4 *array)\n }\n \n \n-extern void mminloc0_4_i4 (gfc_array_i4 *, gfc_array_i4 *, gfc_array_l4 *);\n+extern void mminloc0_4_i4 (gfc_array_i4 * const restrict, \n+\tgfc_array_i4 * const restrict, gfc_array_l4 * const restrict);\n export_proto(mminloc0_4_i4);\n \n void\n-mminloc0_4_i4 (gfc_array_i4 * retarray, gfc_array_i4 *array,\n-\t\t\t\t  gfc_array_l4 * mask)\n+mminloc0_4_i4 (gfc_array_i4 * const restrict retarray, \n+\tgfc_array_i4 * const restrict array,\n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n   index_type dstride;\n   GFC_INTEGER_4 *dest;\n-  GFC_INTEGER_4 *base;\n+  const GFC_INTEGER_4 *base;\n   GFC_LOGICAL_4 *mbase;\n   int rank;\n   index_type n;"}, {"sha": "715f932f5d21ed0ae9e79955bdaab8fd3473fe19", "filename": "libgfortran/generated/minloc0_4_i8.c", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fminloc0_4_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fminloc0_4_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_4_i8.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -39,17 +39,19 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_INTEGER_8) && defined (HAVE_GFC_INTEGER_4)\n \n \n-extern void minloc0_4_i8 (gfc_array_i4 * retarray, gfc_array_i8 *array);\n+extern void minloc0_4_i8 (gfc_array_i4 * const restrict retarray, \n+\tgfc_array_i8 * const restrict array);\n export_proto(minloc0_4_i8);\n \n void\n-minloc0_4_i8 (gfc_array_i4 * retarray, gfc_array_i8 *array)\n+minloc0_4_i8 (gfc_array_i4 * const restrict retarray, \n+\tgfc_array_i8 * const restrict array)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride;\n-  GFC_INTEGER_8 *base;\n+  const GFC_INTEGER_8 *base;\n   GFC_INTEGER_4 *dest;\n   index_type rank;\n   index_type n;\n@@ -154,20 +156,22 @@ minloc0_4_i8 (gfc_array_i4 * retarray, gfc_array_i8 *array)\n }\n \n \n-extern void mminloc0_4_i8 (gfc_array_i4 *, gfc_array_i8 *, gfc_array_l4 *);\n+extern void mminloc0_4_i8 (gfc_array_i4 * const restrict, \n+\tgfc_array_i8 * const restrict, gfc_array_l4 * const restrict);\n export_proto(mminloc0_4_i8);\n \n void\n-mminloc0_4_i8 (gfc_array_i4 * retarray, gfc_array_i8 *array,\n-\t\t\t\t  gfc_array_l4 * mask)\n+mminloc0_4_i8 (gfc_array_i4 * const restrict retarray, \n+\tgfc_array_i8 * const restrict array,\n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n   index_type dstride;\n   GFC_INTEGER_4 *dest;\n-  GFC_INTEGER_8 *base;\n+  const GFC_INTEGER_8 *base;\n   GFC_LOGICAL_4 *mbase;\n   int rank;\n   index_type n;"}, {"sha": "43118cee8f6565f6e0f85e840b0803351e0f2e77", "filename": "libgfortran/generated/minloc0_4_r10.c", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fminloc0_4_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fminloc0_4_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_4_r10.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -39,17 +39,19 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_REAL_10) && defined (HAVE_GFC_INTEGER_4)\n \n \n-extern void minloc0_4_r10 (gfc_array_i4 * retarray, gfc_array_r10 *array);\n+extern void minloc0_4_r10 (gfc_array_i4 * const restrict retarray, \n+\tgfc_array_r10 * const restrict array);\n export_proto(minloc0_4_r10);\n \n void\n-minloc0_4_r10 (gfc_array_i4 * retarray, gfc_array_r10 *array)\n+minloc0_4_r10 (gfc_array_i4 * const restrict retarray, \n+\tgfc_array_r10 * const restrict array)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride;\n-  GFC_REAL_10 *base;\n+  const GFC_REAL_10 *base;\n   GFC_INTEGER_4 *dest;\n   index_type rank;\n   index_type n;\n@@ -154,20 +156,22 @@ minloc0_4_r10 (gfc_array_i4 * retarray, gfc_array_r10 *array)\n }\n \n \n-extern void mminloc0_4_r10 (gfc_array_i4 *, gfc_array_r10 *, gfc_array_l4 *);\n+extern void mminloc0_4_r10 (gfc_array_i4 * const restrict, \n+\tgfc_array_r10 * const restrict, gfc_array_l4 * const restrict);\n export_proto(mminloc0_4_r10);\n \n void\n-mminloc0_4_r10 (gfc_array_i4 * retarray, gfc_array_r10 *array,\n-\t\t\t\t  gfc_array_l4 * mask)\n+mminloc0_4_r10 (gfc_array_i4 * const restrict retarray, \n+\tgfc_array_r10 * const restrict array,\n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n   index_type dstride;\n   GFC_INTEGER_4 *dest;\n-  GFC_REAL_10 *base;\n+  const GFC_REAL_10 *base;\n   GFC_LOGICAL_4 *mbase;\n   int rank;\n   index_type n;"}, {"sha": "3751d0748e3aedc3e4b06163bcde97b7fa860f0e", "filename": "libgfortran/generated/minloc0_4_r16.c", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fminloc0_4_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fminloc0_4_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_4_r16.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -39,17 +39,19 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_REAL_16) && defined (HAVE_GFC_INTEGER_4)\n \n \n-extern void minloc0_4_r16 (gfc_array_i4 * retarray, gfc_array_r16 *array);\n+extern void minloc0_4_r16 (gfc_array_i4 * const restrict retarray, \n+\tgfc_array_r16 * const restrict array);\n export_proto(minloc0_4_r16);\n \n void\n-minloc0_4_r16 (gfc_array_i4 * retarray, gfc_array_r16 *array)\n+minloc0_4_r16 (gfc_array_i4 * const restrict retarray, \n+\tgfc_array_r16 * const restrict array)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride;\n-  GFC_REAL_16 *base;\n+  const GFC_REAL_16 *base;\n   GFC_INTEGER_4 *dest;\n   index_type rank;\n   index_type n;\n@@ -154,20 +156,22 @@ minloc0_4_r16 (gfc_array_i4 * retarray, gfc_array_r16 *array)\n }\n \n \n-extern void mminloc0_4_r16 (gfc_array_i4 *, gfc_array_r16 *, gfc_array_l4 *);\n+extern void mminloc0_4_r16 (gfc_array_i4 * const restrict, \n+\tgfc_array_r16 * const restrict, gfc_array_l4 * const restrict);\n export_proto(mminloc0_4_r16);\n \n void\n-mminloc0_4_r16 (gfc_array_i4 * retarray, gfc_array_r16 *array,\n-\t\t\t\t  gfc_array_l4 * mask)\n+mminloc0_4_r16 (gfc_array_i4 * const restrict retarray, \n+\tgfc_array_r16 * const restrict array,\n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n   index_type dstride;\n   GFC_INTEGER_4 *dest;\n-  GFC_REAL_16 *base;\n+  const GFC_REAL_16 *base;\n   GFC_LOGICAL_4 *mbase;\n   int rank;\n   index_type n;"}, {"sha": "0c93800a8b81f934e09a5cf66915fc1ab63a7190", "filename": "libgfortran/generated/minloc0_4_r4.c", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fminloc0_4_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fminloc0_4_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_4_r4.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -39,17 +39,19 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_REAL_4) && defined (HAVE_GFC_INTEGER_4)\n \n \n-extern void minloc0_4_r4 (gfc_array_i4 * retarray, gfc_array_r4 *array);\n+extern void minloc0_4_r4 (gfc_array_i4 * const restrict retarray, \n+\tgfc_array_r4 * const restrict array);\n export_proto(minloc0_4_r4);\n \n void\n-minloc0_4_r4 (gfc_array_i4 * retarray, gfc_array_r4 *array)\n+minloc0_4_r4 (gfc_array_i4 * const restrict retarray, \n+\tgfc_array_r4 * const restrict array)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride;\n-  GFC_REAL_4 *base;\n+  const GFC_REAL_4 *base;\n   GFC_INTEGER_4 *dest;\n   index_type rank;\n   index_type n;\n@@ -154,20 +156,22 @@ minloc0_4_r4 (gfc_array_i4 * retarray, gfc_array_r4 *array)\n }\n \n \n-extern void mminloc0_4_r4 (gfc_array_i4 *, gfc_array_r4 *, gfc_array_l4 *);\n+extern void mminloc0_4_r4 (gfc_array_i4 * const restrict, \n+\tgfc_array_r4 * const restrict, gfc_array_l4 * const restrict);\n export_proto(mminloc0_4_r4);\n \n void\n-mminloc0_4_r4 (gfc_array_i4 * retarray, gfc_array_r4 *array,\n-\t\t\t\t  gfc_array_l4 * mask)\n+mminloc0_4_r4 (gfc_array_i4 * const restrict retarray, \n+\tgfc_array_r4 * const restrict array,\n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n   index_type dstride;\n   GFC_INTEGER_4 *dest;\n-  GFC_REAL_4 *base;\n+  const GFC_REAL_4 *base;\n   GFC_LOGICAL_4 *mbase;\n   int rank;\n   index_type n;"}, {"sha": "4226dfd67533fd5ede27ede98480d07420f21845", "filename": "libgfortran/generated/minloc0_4_r8.c", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fminloc0_4_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fminloc0_4_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_4_r8.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -39,17 +39,19 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_REAL_8) && defined (HAVE_GFC_INTEGER_4)\n \n \n-extern void minloc0_4_r8 (gfc_array_i4 * retarray, gfc_array_r8 *array);\n+extern void minloc0_4_r8 (gfc_array_i4 * const restrict retarray, \n+\tgfc_array_r8 * const restrict array);\n export_proto(minloc0_4_r8);\n \n void\n-minloc0_4_r8 (gfc_array_i4 * retarray, gfc_array_r8 *array)\n+minloc0_4_r8 (gfc_array_i4 * const restrict retarray, \n+\tgfc_array_r8 * const restrict array)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride;\n-  GFC_REAL_8 *base;\n+  const GFC_REAL_8 *base;\n   GFC_INTEGER_4 *dest;\n   index_type rank;\n   index_type n;\n@@ -154,20 +156,22 @@ minloc0_4_r8 (gfc_array_i4 * retarray, gfc_array_r8 *array)\n }\n \n \n-extern void mminloc0_4_r8 (gfc_array_i4 *, gfc_array_r8 *, gfc_array_l4 *);\n+extern void mminloc0_4_r8 (gfc_array_i4 * const restrict, \n+\tgfc_array_r8 * const restrict, gfc_array_l4 * const restrict);\n export_proto(mminloc0_4_r8);\n \n void\n-mminloc0_4_r8 (gfc_array_i4 * retarray, gfc_array_r8 *array,\n-\t\t\t\t  gfc_array_l4 * mask)\n+mminloc0_4_r8 (gfc_array_i4 * const restrict retarray, \n+\tgfc_array_r8 * const restrict array,\n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n   index_type dstride;\n   GFC_INTEGER_4 *dest;\n-  GFC_REAL_8 *base;\n+  const GFC_REAL_8 *base;\n   GFC_LOGICAL_4 *mbase;\n   int rank;\n   index_type n;"}, {"sha": "71eaec4ad4d667bc3d60dfb61a0e006b3274e98d", "filename": "libgfortran/generated/minloc0_8_i16.c", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fminloc0_8_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fminloc0_8_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_8_i16.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -39,17 +39,19 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_INTEGER_16) && defined (HAVE_GFC_INTEGER_8)\n \n \n-extern void minloc0_8_i16 (gfc_array_i8 * retarray, gfc_array_i16 *array);\n+extern void minloc0_8_i16 (gfc_array_i8 * const restrict retarray, \n+\tgfc_array_i16 * const restrict array);\n export_proto(minloc0_8_i16);\n \n void\n-minloc0_8_i16 (gfc_array_i8 * retarray, gfc_array_i16 *array)\n+minloc0_8_i16 (gfc_array_i8 * const restrict retarray, \n+\tgfc_array_i16 * const restrict array)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride;\n-  GFC_INTEGER_16 *base;\n+  const GFC_INTEGER_16 *base;\n   GFC_INTEGER_8 *dest;\n   index_type rank;\n   index_type n;\n@@ -154,20 +156,22 @@ minloc0_8_i16 (gfc_array_i8 * retarray, gfc_array_i16 *array)\n }\n \n \n-extern void mminloc0_8_i16 (gfc_array_i8 *, gfc_array_i16 *, gfc_array_l4 *);\n+extern void mminloc0_8_i16 (gfc_array_i8 * const restrict, \n+\tgfc_array_i16 * const restrict, gfc_array_l4 * const restrict);\n export_proto(mminloc0_8_i16);\n \n void\n-mminloc0_8_i16 (gfc_array_i8 * retarray, gfc_array_i16 *array,\n-\t\t\t\t  gfc_array_l4 * mask)\n+mminloc0_8_i16 (gfc_array_i8 * const restrict retarray, \n+\tgfc_array_i16 * const restrict array,\n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n   index_type dstride;\n   GFC_INTEGER_8 *dest;\n-  GFC_INTEGER_16 *base;\n+  const GFC_INTEGER_16 *base;\n   GFC_LOGICAL_4 *mbase;\n   int rank;\n   index_type n;"}, {"sha": "c1871f25918df22495821159911c499b2461f235", "filename": "libgfortran/generated/minloc0_8_i4.c", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fminloc0_8_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fminloc0_8_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_8_i4.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -39,17 +39,19 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_INTEGER_4) && defined (HAVE_GFC_INTEGER_8)\n \n \n-extern void minloc0_8_i4 (gfc_array_i8 * retarray, gfc_array_i4 *array);\n+extern void minloc0_8_i4 (gfc_array_i8 * const restrict retarray, \n+\tgfc_array_i4 * const restrict array);\n export_proto(minloc0_8_i4);\n \n void\n-minloc0_8_i4 (gfc_array_i8 * retarray, gfc_array_i4 *array)\n+minloc0_8_i4 (gfc_array_i8 * const restrict retarray, \n+\tgfc_array_i4 * const restrict array)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride;\n-  GFC_INTEGER_4 *base;\n+  const GFC_INTEGER_4 *base;\n   GFC_INTEGER_8 *dest;\n   index_type rank;\n   index_type n;\n@@ -154,20 +156,22 @@ minloc0_8_i4 (gfc_array_i8 * retarray, gfc_array_i4 *array)\n }\n \n \n-extern void mminloc0_8_i4 (gfc_array_i8 *, gfc_array_i4 *, gfc_array_l4 *);\n+extern void mminloc0_8_i4 (gfc_array_i8 * const restrict, \n+\tgfc_array_i4 * const restrict, gfc_array_l4 * const restrict);\n export_proto(mminloc0_8_i4);\n \n void\n-mminloc0_8_i4 (gfc_array_i8 * retarray, gfc_array_i4 *array,\n-\t\t\t\t  gfc_array_l4 * mask)\n+mminloc0_8_i4 (gfc_array_i8 * const restrict retarray, \n+\tgfc_array_i4 * const restrict array,\n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n   index_type dstride;\n   GFC_INTEGER_8 *dest;\n-  GFC_INTEGER_4 *base;\n+  const GFC_INTEGER_4 *base;\n   GFC_LOGICAL_4 *mbase;\n   int rank;\n   index_type n;"}, {"sha": "b3fbaff52791edccf10e428bd4a88ffc57aab608", "filename": "libgfortran/generated/minloc0_8_i8.c", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fminloc0_8_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fminloc0_8_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_8_i8.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -39,17 +39,19 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_INTEGER_8) && defined (HAVE_GFC_INTEGER_8)\n \n \n-extern void minloc0_8_i8 (gfc_array_i8 * retarray, gfc_array_i8 *array);\n+extern void minloc0_8_i8 (gfc_array_i8 * const restrict retarray, \n+\tgfc_array_i8 * const restrict array);\n export_proto(minloc0_8_i8);\n \n void\n-minloc0_8_i8 (gfc_array_i8 * retarray, gfc_array_i8 *array)\n+minloc0_8_i8 (gfc_array_i8 * const restrict retarray, \n+\tgfc_array_i8 * const restrict array)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride;\n-  GFC_INTEGER_8 *base;\n+  const GFC_INTEGER_8 *base;\n   GFC_INTEGER_8 *dest;\n   index_type rank;\n   index_type n;\n@@ -154,20 +156,22 @@ minloc0_8_i8 (gfc_array_i8 * retarray, gfc_array_i8 *array)\n }\n \n \n-extern void mminloc0_8_i8 (gfc_array_i8 *, gfc_array_i8 *, gfc_array_l4 *);\n+extern void mminloc0_8_i8 (gfc_array_i8 * const restrict, \n+\tgfc_array_i8 * const restrict, gfc_array_l4 * const restrict);\n export_proto(mminloc0_8_i8);\n \n void\n-mminloc0_8_i8 (gfc_array_i8 * retarray, gfc_array_i8 *array,\n-\t\t\t\t  gfc_array_l4 * mask)\n+mminloc0_8_i8 (gfc_array_i8 * const restrict retarray, \n+\tgfc_array_i8 * const restrict array,\n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n   index_type dstride;\n   GFC_INTEGER_8 *dest;\n-  GFC_INTEGER_8 *base;\n+  const GFC_INTEGER_8 *base;\n   GFC_LOGICAL_4 *mbase;\n   int rank;\n   index_type n;"}, {"sha": "9cdf5c611f7a9d0648c0ef5bce8f76fad1394323", "filename": "libgfortran/generated/minloc0_8_r10.c", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fminloc0_8_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fminloc0_8_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_8_r10.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -39,17 +39,19 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_REAL_10) && defined (HAVE_GFC_INTEGER_8)\n \n \n-extern void minloc0_8_r10 (gfc_array_i8 * retarray, gfc_array_r10 *array);\n+extern void minloc0_8_r10 (gfc_array_i8 * const restrict retarray, \n+\tgfc_array_r10 * const restrict array);\n export_proto(minloc0_8_r10);\n \n void\n-minloc0_8_r10 (gfc_array_i8 * retarray, gfc_array_r10 *array)\n+minloc0_8_r10 (gfc_array_i8 * const restrict retarray, \n+\tgfc_array_r10 * const restrict array)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride;\n-  GFC_REAL_10 *base;\n+  const GFC_REAL_10 *base;\n   GFC_INTEGER_8 *dest;\n   index_type rank;\n   index_type n;\n@@ -154,20 +156,22 @@ minloc0_8_r10 (gfc_array_i8 * retarray, gfc_array_r10 *array)\n }\n \n \n-extern void mminloc0_8_r10 (gfc_array_i8 *, gfc_array_r10 *, gfc_array_l4 *);\n+extern void mminloc0_8_r10 (gfc_array_i8 * const restrict, \n+\tgfc_array_r10 * const restrict, gfc_array_l4 * const restrict);\n export_proto(mminloc0_8_r10);\n \n void\n-mminloc0_8_r10 (gfc_array_i8 * retarray, gfc_array_r10 *array,\n-\t\t\t\t  gfc_array_l4 * mask)\n+mminloc0_8_r10 (gfc_array_i8 * const restrict retarray, \n+\tgfc_array_r10 * const restrict array,\n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n   index_type dstride;\n   GFC_INTEGER_8 *dest;\n-  GFC_REAL_10 *base;\n+  const GFC_REAL_10 *base;\n   GFC_LOGICAL_4 *mbase;\n   int rank;\n   index_type n;"}, {"sha": "dc86f6f539fb47475cc793e430538a37b013594d", "filename": "libgfortran/generated/minloc0_8_r16.c", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fminloc0_8_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fminloc0_8_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_8_r16.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -39,17 +39,19 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_REAL_16) && defined (HAVE_GFC_INTEGER_8)\n \n \n-extern void minloc0_8_r16 (gfc_array_i8 * retarray, gfc_array_r16 *array);\n+extern void minloc0_8_r16 (gfc_array_i8 * const restrict retarray, \n+\tgfc_array_r16 * const restrict array);\n export_proto(minloc0_8_r16);\n \n void\n-minloc0_8_r16 (gfc_array_i8 * retarray, gfc_array_r16 *array)\n+minloc0_8_r16 (gfc_array_i8 * const restrict retarray, \n+\tgfc_array_r16 * const restrict array)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride;\n-  GFC_REAL_16 *base;\n+  const GFC_REAL_16 *base;\n   GFC_INTEGER_8 *dest;\n   index_type rank;\n   index_type n;\n@@ -154,20 +156,22 @@ minloc0_8_r16 (gfc_array_i8 * retarray, gfc_array_r16 *array)\n }\n \n \n-extern void mminloc0_8_r16 (gfc_array_i8 *, gfc_array_r16 *, gfc_array_l4 *);\n+extern void mminloc0_8_r16 (gfc_array_i8 * const restrict, \n+\tgfc_array_r16 * const restrict, gfc_array_l4 * const restrict);\n export_proto(mminloc0_8_r16);\n \n void\n-mminloc0_8_r16 (gfc_array_i8 * retarray, gfc_array_r16 *array,\n-\t\t\t\t  gfc_array_l4 * mask)\n+mminloc0_8_r16 (gfc_array_i8 * const restrict retarray, \n+\tgfc_array_r16 * const restrict array,\n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n   index_type dstride;\n   GFC_INTEGER_8 *dest;\n-  GFC_REAL_16 *base;\n+  const GFC_REAL_16 *base;\n   GFC_LOGICAL_4 *mbase;\n   int rank;\n   index_type n;"}, {"sha": "985d60c2dd54278d8d7b2cea7e0fd71b70a9d70c", "filename": "libgfortran/generated/minloc0_8_r4.c", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fminloc0_8_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fminloc0_8_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_8_r4.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -39,17 +39,19 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_REAL_4) && defined (HAVE_GFC_INTEGER_8)\n \n \n-extern void minloc0_8_r4 (gfc_array_i8 * retarray, gfc_array_r4 *array);\n+extern void minloc0_8_r4 (gfc_array_i8 * const restrict retarray, \n+\tgfc_array_r4 * const restrict array);\n export_proto(minloc0_8_r4);\n \n void\n-minloc0_8_r4 (gfc_array_i8 * retarray, gfc_array_r4 *array)\n+minloc0_8_r4 (gfc_array_i8 * const restrict retarray, \n+\tgfc_array_r4 * const restrict array)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride;\n-  GFC_REAL_4 *base;\n+  const GFC_REAL_4 *base;\n   GFC_INTEGER_8 *dest;\n   index_type rank;\n   index_type n;\n@@ -154,20 +156,22 @@ minloc0_8_r4 (gfc_array_i8 * retarray, gfc_array_r4 *array)\n }\n \n \n-extern void mminloc0_8_r4 (gfc_array_i8 *, gfc_array_r4 *, gfc_array_l4 *);\n+extern void mminloc0_8_r4 (gfc_array_i8 * const restrict, \n+\tgfc_array_r4 * const restrict, gfc_array_l4 * const restrict);\n export_proto(mminloc0_8_r4);\n \n void\n-mminloc0_8_r4 (gfc_array_i8 * retarray, gfc_array_r4 *array,\n-\t\t\t\t  gfc_array_l4 * mask)\n+mminloc0_8_r4 (gfc_array_i8 * const restrict retarray, \n+\tgfc_array_r4 * const restrict array,\n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n   index_type dstride;\n   GFC_INTEGER_8 *dest;\n-  GFC_REAL_4 *base;\n+  const GFC_REAL_4 *base;\n   GFC_LOGICAL_4 *mbase;\n   int rank;\n   index_type n;"}, {"sha": "fe98a1e3d14858764ad722eb276b3e9d860c8e0e", "filename": "libgfortran/generated/minloc0_8_r8.c", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fminloc0_8_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fminloc0_8_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_8_r8.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -39,17 +39,19 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_REAL_8) && defined (HAVE_GFC_INTEGER_8)\n \n \n-extern void minloc0_8_r8 (gfc_array_i8 * retarray, gfc_array_r8 *array);\n+extern void minloc0_8_r8 (gfc_array_i8 * const restrict retarray, \n+\tgfc_array_r8 * const restrict array);\n export_proto(minloc0_8_r8);\n \n void\n-minloc0_8_r8 (gfc_array_i8 * retarray, gfc_array_r8 *array)\n+minloc0_8_r8 (gfc_array_i8 * const restrict retarray, \n+\tgfc_array_r8 * const restrict array)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride;\n-  GFC_REAL_8 *base;\n+  const GFC_REAL_8 *base;\n   GFC_INTEGER_8 *dest;\n   index_type rank;\n   index_type n;\n@@ -154,20 +156,22 @@ minloc0_8_r8 (gfc_array_i8 * retarray, gfc_array_r8 *array)\n }\n \n \n-extern void mminloc0_8_r8 (gfc_array_i8 *, gfc_array_r8 *, gfc_array_l4 *);\n+extern void mminloc0_8_r8 (gfc_array_i8 * const restrict, \n+\tgfc_array_r8 * const restrict, gfc_array_l4 * const restrict);\n export_proto(mminloc0_8_r8);\n \n void\n-mminloc0_8_r8 (gfc_array_i8 * retarray, gfc_array_r8 *array,\n-\t\t\t\t  gfc_array_l4 * mask)\n+mminloc0_8_r8 (gfc_array_i8 * const restrict retarray, \n+\tgfc_array_r8 * const restrict array,\n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n   index_type dstride;\n   GFC_INTEGER_8 *dest;\n-  GFC_REAL_8 *base;\n+  const GFC_REAL_8 *base;\n   GFC_LOGICAL_4 *mbase;\n   int rank;\n   index_type n;"}, {"sha": "5b69c5566b6bc4de0da1b021b83708d28102056c", "filename": "libgfortran/generated/minloc1_16_i16.c", "status": "modified", "additions": 20, "deletions": 14, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fminloc1_16_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fminloc1_16_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_16_i16.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -39,18 +39,21 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_INTEGER_16) && defined (HAVE_GFC_INTEGER_16)\n \n \n-extern void minloc1_16_i16 (gfc_array_i16 *, gfc_array_i16 *, index_type *);\n+extern void minloc1_16_i16 (gfc_array_i16 * const restrict, \n+\tgfc_array_i16 * const restrict, const index_type * const restrict);\n export_proto(minloc1_16_i16);\n \n void\n-minloc1_16_i16 (gfc_array_i16 *retarray, gfc_array_i16 *array, index_type *pdim)\n+minloc1_16_i16 (gfc_array_i16 * const restrict retarray, \n+\tgfc_array_i16 * const restrict array, \n+\tconst index_type * const restrict pdim)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n-  GFC_INTEGER_16 *base;\n-  GFC_INTEGER_16 *dest;\n+  const GFC_INTEGER_16 * restrict base;\n+  GFC_INTEGER_16 * restrict dest;\n   index_type rank;\n   index_type n;\n   index_type len;\n@@ -122,7 +125,7 @@ minloc1_16_i16 (gfc_array_i16 *retarray, gfc_array_i16 *array, index_type *pdim)\n \n   while (base)\n     {\n-      GFC_INTEGER_16 *src;\n+      const GFC_INTEGER_16 * restrict src;\n       GFC_INTEGER_16 result;\n       src = base;\n       {\n@@ -178,22 +181,25 @@ minloc1_16_i16 (gfc_array_i16 *retarray, gfc_array_i16 *array, index_type *pdim)\n }\n \n \n-extern void mminloc1_16_i16 (gfc_array_i16 *, gfc_array_i16 *, index_type *,\n-\t\t\t\t\t       gfc_array_l4 *);\n+extern void mminloc1_16_i16 (gfc_array_i16 * const restrict, \n+\tgfc_array_i16 * const restrict, const index_type * const restrict,\n+\tgfc_array_l4 * const restrict);\n export_proto(mminloc1_16_i16);\n \n void\n-mminloc1_16_i16 (gfc_array_i16 * retarray, gfc_array_i16 * array,\n-\t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n+mminloc1_16_i16 (gfc_array_i16 * const restrict retarray, \n+\tgfc_array_i16 * const restrict array, \n+\tconst index_type * const restrict pdim, \n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n-  GFC_INTEGER_16 *dest;\n-  GFC_INTEGER_16 *base;\n-  GFC_LOGICAL_4 *mbase;\n+  GFC_INTEGER_16 * restrict dest;\n+  const GFC_INTEGER_16 * restrict base;\n+  const GFC_LOGICAL_4 * restrict mbase;\n   int rank;\n   int dim;\n   index_type n;\n@@ -284,8 +290,8 @@ mminloc1_16_i16 (gfc_array_i16 * retarray, gfc_array_i16 * array,\n \n   while (base)\n     {\n-      GFC_INTEGER_16 *src;\n-      GFC_LOGICAL_4 *msrc;\n+      const GFC_INTEGER_16 * restrict src;\n+      const GFC_LOGICAL_4 * restrict msrc;\n       GFC_INTEGER_16 result;\n       src = base;\n       msrc = mbase;"}, {"sha": "8d5918972a6fe819ef039a4ca3f603644ad72844", "filename": "libgfortran/generated/minloc1_16_i4.c", "status": "modified", "additions": 20, "deletions": 14, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fminloc1_16_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fminloc1_16_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_16_i4.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -39,18 +39,21 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_INTEGER_4) && defined (HAVE_GFC_INTEGER_16)\n \n \n-extern void minloc1_16_i4 (gfc_array_i16 *, gfc_array_i4 *, index_type *);\n+extern void minloc1_16_i4 (gfc_array_i16 * const restrict, \n+\tgfc_array_i4 * const restrict, const index_type * const restrict);\n export_proto(minloc1_16_i4);\n \n void\n-minloc1_16_i4 (gfc_array_i16 *retarray, gfc_array_i4 *array, index_type *pdim)\n+minloc1_16_i4 (gfc_array_i16 * const restrict retarray, \n+\tgfc_array_i4 * const restrict array, \n+\tconst index_type * const restrict pdim)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n-  GFC_INTEGER_4 *base;\n-  GFC_INTEGER_16 *dest;\n+  const GFC_INTEGER_4 * restrict base;\n+  GFC_INTEGER_16 * restrict dest;\n   index_type rank;\n   index_type n;\n   index_type len;\n@@ -122,7 +125,7 @@ minloc1_16_i4 (gfc_array_i16 *retarray, gfc_array_i4 *array, index_type *pdim)\n \n   while (base)\n     {\n-      GFC_INTEGER_4 *src;\n+      const GFC_INTEGER_4 * restrict src;\n       GFC_INTEGER_16 result;\n       src = base;\n       {\n@@ -178,22 +181,25 @@ minloc1_16_i4 (gfc_array_i16 *retarray, gfc_array_i4 *array, index_type *pdim)\n }\n \n \n-extern void mminloc1_16_i4 (gfc_array_i16 *, gfc_array_i4 *, index_type *,\n-\t\t\t\t\t       gfc_array_l4 *);\n+extern void mminloc1_16_i4 (gfc_array_i16 * const restrict, \n+\tgfc_array_i4 * const restrict, const index_type * const restrict,\n+\tgfc_array_l4 * const restrict);\n export_proto(mminloc1_16_i4);\n \n void\n-mminloc1_16_i4 (gfc_array_i16 * retarray, gfc_array_i4 * array,\n-\t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n+mminloc1_16_i4 (gfc_array_i16 * const restrict retarray, \n+\tgfc_array_i4 * const restrict array, \n+\tconst index_type * const restrict pdim, \n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n-  GFC_INTEGER_16 *dest;\n-  GFC_INTEGER_4 *base;\n-  GFC_LOGICAL_4 *mbase;\n+  GFC_INTEGER_16 * restrict dest;\n+  const GFC_INTEGER_4 * restrict base;\n+  const GFC_LOGICAL_4 * restrict mbase;\n   int rank;\n   int dim;\n   index_type n;\n@@ -284,8 +290,8 @@ mminloc1_16_i4 (gfc_array_i16 * retarray, gfc_array_i4 * array,\n \n   while (base)\n     {\n-      GFC_INTEGER_4 *src;\n-      GFC_LOGICAL_4 *msrc;\n+      const GFC_INTEGER_4 * restrict src;\n+      const GFC_LOGICAL_4 * restrict msrc;\n       GFC_INTEGER_16 result;\n       src = base;\n       msrc = mbase;"}, {"sha": "d3f699503161c2e399d92f0e1a9f9e359f1f7506", "filename": "libgfortran/generated/minloc1_16_i8.c", "status": "modified", "additions": 20, "deletions": 14, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fminloc1_16_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fminloc1_16_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_16_i8.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -39,18 +39,21 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_INTEGER_8) && defined (HAVE_GFC_INTEGER_16)\n \n \n-extern void minloc1_16_i8 (gfc_array_i16 *, gfc_array_i8 *, index_type *);\n+extern void minloc1_16_i8 (gfc_array_i16 * const restrict, \n+\tgfc_array_i8 * const restrict, const index_type * const restrict);\n export_proto(minloc1_16_i8);\n \n void\n-minloc1_16_i8 (gfc_array_i16 *retarray, gfc_array_i8 *array, index_type *pdim)\n+minloc1_16_i8 (gfc_array_i16 * const restrict retarray, \n+\tgfc_array_i8 * const restrict array, \n+\tconst index_type * const restrict pdim)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n-  GFC_INTEGER_8 *base;\n-  GFC_INTEGER_16 *dest;\n+  const GFC_INTEGER_8 * restrict base;\n+  GFC_INTEGER_16 * restrict dest;\n   index_type rank;\n   index_type n;\n   index_type len;\n@@ -122,7 +125,7 @@ minloc1_16_i8 (gfc_array_i16 *retarray, gfc_array_i8 *array, index_type *pdim)\n \n   while (base)\n     {\n-      GFC_INTEGER_8 *src;\n+      const GFC_INTEGER_8 * restrict src;\n       GFC_INTEGER_16 result;\n       src = base;\n       {\n@@ -178,22 +181,25 @@ minloc1_16_i8 (gfc_array_i16 *retarray, gfc_array_i8 *array, index_type *pdim)\n }\n \n \n-extern void mminloc1_16_i8 (gfc_array_i16 *, gfc_array_i8 *, index_type *,\n-\t\t\t\t\t       gfc_array_l4 *);\n+extern void mminloc1_16_i8 (gfc_array_i16 * const restrict, \n+\tgfc_array_i8 * const restrict, const index_type * const restrict,\n+\tgfc_array_l4 * const restrict);\n export_proto(mminloc1_16_i8);\n \n void\n-mminloc1_16_i8 (gfc_array_i16 * retarray, gfc_array_i8 * array,\n-\t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n+mminloc1_16_i8 (gfc_array_i16 * const restrict retarray, \n+\tgfc_array_i8 * const restrict array, \n+\tconst index_type * const restrict pdim, \n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n-  GFC_INTEGER_16 *dest;\n-  GFC_INTEGER_8 *base;\n-  GFC_LOGICAL_4 *mbase;\n+  GFC_INTEGER_16 * restrict dest;\n+  const GFC_INTEGER_8 * restrict base;\n+  const GFC_LOGICAL_4 * restrict mbase;\n   int rank;\n   int dim;\n   index_type n;\n@@ -284,8 +290,8 @@ mminloc1_16_i8 (gfc_array_i16 * retarray, gfc_array_i8 * array,\n \n   while (base)\n     {\n-      GFC_INTEGER_8 *src;\n-      GFC_LOGICAL_4 *msrc;\n+      const GFC_INTEGER_8 * restrict src;\n+      const GFC_LOGICAL_4 * restrict msrc;\n       GFC_INTEGER_16 result;\n       src = base;\n       msrc = mbase;"}, {"sha": "0e3d6053f8bf4515c90cb73a501e6c3de422d663", "filename": "libgfortran/generated/minloc1_16_r10.c", "status": "modified", "additions": 20, "deletions": 14, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fminloc1_16_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fminloc1_16_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_16_r10.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -39,18 +39,21 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_REAL_10) && defined (HAVE_GFC_INTEGER_16)\n \n \n-extern void minloc1_16_r10 (gfc_array_i16 *, gfc_array_r10 *, index_type *);\n+extern void minloc1_16_r10 (gfc_array_i16 * const restrict, \n+\tgfc_array_r10 * const restrict, const index_type * const restrict);\n export_proto(minloc1_16_r10);\n \n void\n-minloc1_16_r10 (gfc_array_i16 *retarray, gfc_array_r10 *array, index_type *pdim)\n+minloc1_16_r10 (gfc_array_i16 * const restrict retarray, \n+\tgfc_array_r10 * const restrict array, \n+\tconst index_type * const restrict pdim)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n-  GFC_REAL_10 *base;\n-  GFC_INTEGER_16 *dest;\n+  const GFC_REAL_10 * restrict base;\n+  GFC_INTEGER_16 * restrict dest;\n   index_type rank;\n   index_type n;\n   index_type len;\n@@ -122,7 +125,7 @@ minloc1_16_r10 (gfc_array_i16 *retarray, gfc_array_r10 *array, index_type *pdim)\n \n   while (base)\n     {\n-      GFC_REAL_10 *src;\n+      const GFC_REAL_10 * restrict src;\n       GFC_INTEGER_16 result;\n       src = base;\n       {\n@@ -178,22 +181,25 @@ minloc1_16_r10 (gfc_array_i16 *retarray, gfc_array_r10 *array, index_type *pdim)\n }\n \n \n-extern void mminloc1_16_r10 (gfc_array_i16 *, gfc_array_r10 *, index_type *,\n-\t\t\t\t\t       gfc_array_l4 *);\n+extern void mminloc1_16_r10 (gfc_array_i16 * const restrict, \n+\tgfc_array_r10 * const restrict, const index_type * const restrict,\n+\tgfc_array_l4 * const restrict);\n export_proto(mminloc1_16_r10);\n \n void\n-mminloc1_16_r10 (gfc_array_i16 * retarray, gfc_array_r10 * array,\n-\t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n+mminloc1_16_r10 (gfc_array_i16 * const restrict retarray, \n+\tgfc_array_r10 * const restrict array, \n+\tconst index_type * const restrict pdim, \n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n-  GFC_INTEGER_16 *dest;\n-  GFC_REAL_10 *base;\n-  GFC_LOGICAL_4 *mbase;\n+  GFC_INTEGER_16 * restrict dest;\n+  const GFC_REAL_10 * restrict base;\n+  const GFC_LOGICAL_4 * restrict mbase;\n   int rank;\n   int dim;\n   index_type n;\n@@ -284,8 +290,8 @@ mminloc1_16_r10 (gfc_array_i16 * retarray, gfc_array_r10 * array,\n \n   while (base)\n     {\n-      GFC_REAL_10 *src;\n-      GFC_LOGICAL_4 *msrc;\n+      const GFC_REAL_10 * restrict src;\n+      const GFC_LOGICAL_4 * restrict msrc;\n       GFC_INTEGER_16 result;\n       src = base;\n       msrc = mbase;"}, {"sha": "29dfe1de0b9c243c9091a1d234b6acca4bbbac97", "filename": "libgfortran/generated/minloc1_16_r16.c", "status": "modified", "additions": 20, "deletions": 14, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fminloc1_16_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fminloc1_16_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_16_r16.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -39,18 +39,21 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_REAL_16) && defined (HAVE_GFC_INTEGER_16)\n \n \n-extern void minloc1_16_r16 (gfc_array_i16 *, gfc_array_r16 *, index_type *);\n+extern void minloc1_16_r16 (gfc_array_i16 * const restrict, \n+\tgfc_array_r16 * const restrict, const index_type * const restrict);\n export_proto(minloc1_16_r16);\n \n void\n-minloc1_16_r16 (gfc_array_i16 *retarray, gfc_array_r16 *array, index_type *pdim)\n+minloc1_16_r16 (gfc_array_i16 * const restrict retarray, \n+\tgfc_array_r16 * const restrict array, \n+\tconst index_type * const restrict pdim)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n-  GFC_REAL_16 *base;\n-  GFC_INTEGER_16 *dest;\n+  const GFC_REAL_16 * restrict base;\n+  GFC_INTEGER_16 * restrict dest;\n   index_type rank;\n   index_type n;\n   index_type len;\n@@ -122,7 +125,7 @@ minloc1_16_r16 (gfc_array_i16 *retarray, gfc_array_r16 *array, index_type *pdim)\n \n   while (base)\n     {\n-      GFC_REAL_16 *src;\n+      const GFC_REAL_16 * restrict src;\n       GFC_INTEGER_16 result;\n       src = base;\n       {\n@@ -178,22 +181,25 @@ minloc1_16_r16 (gfc_array_i16 *retarray, gfc_array_r16 *array, index_type *pdim)\n }\n \n \n-extern void mminloc1_16_r16 (gfc_array_i16 *, gfc_array_r16 *, index_type *,\n-\t\t\t\t\t       gfc_array_l4 *);\n+extern void mminloc1_16_r16 (gfc_array_i16 * const restrict, \n+\tgfc_array_r16 * const restrict, const index_type * const restrict,\n+\tgfc_array_l4 * const restrict);\n export_proto(mminloc1_16_r16);\n \n void\n-mminloc1_16_r16 (gfc_array_i16 * retarray, gfc_array_r16 * array,\n-\t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n+mminloc1_16_r16 (gfc_array_i16 * const restrict retarray, \n+\tgfc_array_r16 * const restrict array, \n+\tconst index_type * const restrict pdim, \n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n-  GFC_INTEGER_16 *dest;\n-  GFC_REAL_16 *base;\n-  GFC_LOGICAL_4 *mbase;\n+  GFC_INTEGER_16 * restrict dest;\n+  const GFC_REAL_16 * restrict base;\n+  const GFC_LOGICAL_4 * restrict mbase;\n   int rank;\n   int dim;\n   index_type n;\n@@ -284,8 +290,8 @@ mminloc1_16_r16 (gfc_array_i16 * retarray, gfc_array_r16 * array,\n \n   while (base)\n     {\n-      GFC_REAL_16 *src;\n-      GFC_LOGICAL_4 *msrc;\n+      const GFC_REAL_16 * restrict src;\n+      const GFC_LOGICAL_4 * restrict msrc;\n       GFC_INTEGER_16 result;\n       src = base;\n       msrc = mbase;"}, {"sha": "65ffe2cfbaf095ffabda4cd3b038258418ac4f94", "filename": "libgfortran/generated/minloc1_16_r4.c", "status": "modified", "additions": 20, "deletions": 14, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fminloc1_16_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fminloc1_16_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_16_r4.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -39,18 +39,21 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_REAL_4) && defined (HAVE_GFC_INTEGER_16)\n \n \n-extern void minloc1_16_r4 (gfc_array_i16 *, gfc_array_r4 *, index_type *);\n+extern void minloc1_16_r4 (gfc_array_i16 * const restrict, \n+\tgfc_array_r4 * const restrict, const index_type * const restrict);\n export_proto(minloc1_16_r4);\n \n void\n-minloc1_16_r4 (gfc_array_i16 *retarray, gfc_array_r4 *array, index_type *pdim)\n+minloc1_16_r4 (gfc_array_i16 * const restrict retarray, \n+\tgfc_array_r4 * const restrict array, \n+\tconst index_type * const restrict pdim)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n-  GFC_REAL_4 *base;\n-  GFC_INTEGER_16 *dest;\n+  const GFC_REAL_4 * restrict base;\n+  GFC_INTEGER_16 * restrict dest;\n   index_type rank;\n   index_type n;\n   index_type len;\n@@ -122,7 +125,7 @@ minloc1_16_r4 (gfc_array_i16 *retarray, gfc_array_r4 *array, index_type *pdim)\n \n   while (base)\n     {\n-      GFC_REAL_4 *src;\n+      const GFC_REAL_4 * restrict src;\n       GFC_INTEGER_16 result;\n       src = base;\n       {\n@@ -178,22 +181,25 @@ minloc1_16_r4 (gfc_array_i16 *retarray, gfc_array_r4 *array, index_type *pdim)\n }\n \n \n-extern void mminloc1_16_r4 (gfc_array_i16 *, gfc_array_r4 *, index_type *,\n-\t\t\t\t\t       gfc_array_l4 *);\n+extern void mminloc1_16_r4 (gfc_array_i16 * const restrict, \n+\tgfc_array_r4 * const restrict, const index_type * const restrict,\n+\tgfc_array_l4 * const restrict);\n export_proto(mminloc1_16_r4);\n \n void\n-mminloc1_16_r4 (gfc_array_i16 * retarray, gfc_array_r4 * array,\n-\t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n+mminloc1_16_r4 (gfc_array_i16 * const restrict retarray, \n+\tgfc_array_r4 * const restrict array, \n+\tconst index_type * const restrict pdim, \n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n-  GFC_INTEGER_16 *dest;\n-  GFC_REAL_4 *base;\n-  GFC_LOGICAL_4 *mbase;\n+  GFC_INTEGER_16 * restrict dest;\n+  const GFC_REAL_4 * restrict base;\n+  const GFC_LOGICAL_4 * restrict mbase;\n   int rank;\n   int dim;\n   index_type n;\n@@ -284,8 +290,8 @@ mminloc1_16_r4 (gfc_array_i16 * retarray, gfc_array_r4 * array,\n \n   while (base)\n     {\n-      GFC_REAL_4 *src;\n-      GFC_LOGICAL_4 *msrc;\n+      const GFC_REAL_4 * restrict src;\n+      const GFC_LOGICAL_4 * restrict msrc;\n       GFC_INTEGER_16 result;\n       src = base;\n       msrc = mbase;"}, {"sha": "379ca41166d1f930d568688d6abf347658174b38", "filename": "libgfortran/generated/minloc1_16_r8.c", "status": "modified", "additions": 20, "deletions": 14, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fminloc1_16_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fminloc1_16_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_16_r8.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -39,18 +39,21 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_REAL_8) && defined (HAVE_GFC_INTEGER_16)\n \n \n-extern void minloc1_16_r8 (gfc_array_i16 *, gfc_array_r8 *, index_type *);\n+extern void minloc1_16_r8 (gfc_array_i16 * const restrict, \n+\tgfc_array_r8 * const restrict, const index_type * const restrict);\n export_proto(minloc1_16_r8);\n \n void\n-minloc1_16_r8 (gfc_array_i16 *retarray, gfc_array_r8 *array, index_type *pdim)\n+minloc1_16_r8 (gfc_array_i16 * const restrict retarray, \n+\tgfc_array_r8 * const restrict array, \n+\tconst index_type * const restrict pdim)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n-  GFC_REAL_8 *base;\n-  GFC_INTEGER_16 *dest;\n+  const GFC_REAL_8 * restrict base;\n+  GFC_INTEGER_16 * restrict dest;\n   index_type rank;\n   index_type n;\n   index_type len;\n@@ -122,7 +125,7 @@ minloc1_16_r8 (gfc_array_i16 *retarray, gfc_array_r8 *array, index_type *pdim)\n \n   while (base)\n     {\n-      GFC_REAL_8 *src;\n+      const GFC_REAL_8 * restrict src;\n       GFC_INTEGER_16 result;\n       src = base;\n       {\n@@ -178,22 +181,25 @@ minloc1_16_r8 (gfc_array_i16 *retarray, gfc_array_r8 *array, index_type *pdim)\n }\n \n \n-extern void mminloc1_16_r8 (gfc_array_i16 *, gfc_array_r8 *, index_type *,\n-\t\t\t\t\t       gfc_array_l4 *);\n+extern void mminloc1_16_r8 (gfc_array_i16 * const restrict, \n+\tgfc_array_r8 * const restrict, const index_type * const restrict,\n+\tgfc_array_l4 * const restrict);\n export_proto(mminloc1_16_r8);\n \n void\n-mminloc1_16_r8 (gfc_array_i16 * retarray, gfc_array_r8 * array,\n-\t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n+mminloc1_16_r8 (gfc_array_i16 * const restrict retarray, \n+\tgfc_array_r8 * const restrict array, \n+\tconst index_type * const restrict pdim, \n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n-  GFC_INTEGER_16 *dest;\n-  GFC_REAL_8 *base;\n-  GFC_LOGICAL_4 *mbase;\n+  GFC_INTEGER_16 * restrict dest;\n+  const GFC_REAL_8 * restrict base;\n+  const GFC_LOGICAL_4 * restrict mbase;\n   int rank;\n   int dim;\n   index_type n;\n@@ -284,8 +290,8 @@ mminloc1_16_r8 (gfc_array_i16 * retarray, gfc_array_r8 * array,\n \n   while (base)\n     {\n-      GFC_REAL_8 *src;\n-      GFC_LOGICAL_4 *msrc;\n+      const GFC_REAL_8 * restrict src;\n+      const GFC_LOGICAL_4 * restrict msrc;\n       GFC_INTEGER_16 result;\n       src = base;\n       msrc = mbase;"}, {"sha": "13ac2d9768cc5a30a73231463ea127d3d84f8989", "filename": "libgfortran/generated/minloc1_4_i16.c", "status": "modified", "additions": 20, "deletions": 14, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fminloc1_4_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fminloc1_4_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_4_i16.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -39,18 +39,21 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_INTEGER_16) && defined (HAVE_GFC_INTEGER_4)\n \n \n-extern void minloc1_4_i16 (gfc_array_i4 *, gfc_array_i16 *, index_type *);\n+extern void minloc1_4_i16 (gfc_array_i4 * const restrict, \n+\tgfc_array_i16 * const restrict, const index_type * const restrict);\n export_proto(minloc1_4_i16);\n \n void\n-minloc1_4_i16 (gfc_array_i4 *retarray, gfc_array_i16 *array, index_type *pdim)\n+minloc1_4_i16 (gfc_array_i4 * const restrict retarray, \n+\tgfc_array_i16 * const restrict array, \n+\tconst index_type * const restrict pdim)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n-  GFC_INTEGER_16 *base;\n-  GFC_INTEGER_4 *dest;\n+  const GFC_INTEGER_16 * restrict base;\n+  GFC_INTEGER_4 * restrict dest;\n   index_type rank;\n   index_type n;\n   index_type len;\n@@ -122,7 +125,7 @@ minloc1_4_i16 (gfc_array_i4 *retarray, gfc_array_i16 *array, index_type *pdim)\n \n   while (base)\n     {\n-      GFC_INTEGER_16 *src;\n+      const GFC_INTEGER_16 * restrict src;\n       GFC_INTEGER_4 result;\n       src = base;\n       {\n@@ -178,22 +181,25 @@ minloc1_4_i16 (gfc_array_i4 *retarray, gfc_array_i16 *array, index_type *pdim)\n }\n \n \n-extern void mminloc1_4_i16 (gfc_array_i4 *, gfc_array_i16 *, index_type *,\n-\t\t\t\t\t       gfc_array_l4 *);\n+extern void mminloc1_4_i16 (gfc_array_i4 * const restrict, \n+\tgfc_array_i16 * const restrict, const index_type * const restrict,\n+\tgfc_array_l4 * const restrict);\n export_proto(mminloc1_4_i16);\n \n void\n-mminloc1_4_i16 (gfc_array_i4 * retarray, gfc_array_i16 * array,\n-\t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n+mminloc1_4_i16 (gfc_array_i4 * const restrict retarray, \n+\tgfc_array_i16 * const restrict array, \n+\tconst index_type * const restrict pdim, \n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n-  GFC_INTEGER_4 *dest;\n-  GFC_INTEGER_16 *base;\n-  GFC_LOGICAL_4 *mbase;\n+  GFC_INTEGER_4 * restrict dest;\n+  const GFC_INTEGER_16 * restrict base;\n+  const GFC_LOGICAL_4 * restrict mbase;\n   int rank;\n   int dim;\n   index_type n;\n@@ -284,8 +290,8 @@ mminloc1_4_i16 (gfc_array_i4 * retarray, gfc_array_i16 * array,\n \n   while (base)\n     {\n-      GFC_INTEGER_16 *src;\n-      GFC_LOGICAL_4 *msrc;\n+      const GFC_INTEGER_16 * restrict src;\n+      const GFC_LOGICAL_4 * restrict msrc;\n       GFC_INTEGER_4 result;\n       src = base;\n       msrc = mbase;"}, {"sha": "c9f5194bc3b940ac024db772a9fc0a204ce68299", "filename": "libgfortran/generated/minloc1_4_i4.c", "status": "modified", "additions": 20, "deletions": 14, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fminloc1_4_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fminloc1_4_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_4_i4.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -39,18 +39,21 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_INTEGER_4) && defined (HAVE_GFC_INTEGER_4)\n \n \n-extern void minloc1_4_i4 (gfc_array_i4 *, gfc_array_i4 *, index_type *);\n+extern void minloc1_4_i4 (gfc_array_i4 * const restrict, \n+\tgfc_array_i4 * const restrict, const index_type * const restrict);\n export_proto(minloc1_4_i4);\n \n void\n-minloc1_4_i4 (gfc_array_i4 *retarray, gfc_array_i4 *array, index_type *pdim)\n+minloc1_4_i4 (gfc_array_i4 * const restrict retarray, \n+\tgfc_array_i4 * const restrict array, \n+\tconst index_type * const restrict pdim)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n-  GFC_INTEGER_4 *base;\n-  GFC_INTEGER_4 *dest;\n+  const GFC_INTEGER_4 * restrict base;\n+  GFC_INTEGER_4 * restrict dest;\n   index_type rank;\n   index_type n;\n   index_type len;\n@@ -122,7 +125,7 @@ minloc1_4_i4 (gfc_array_i4 *retarray, gfc_array_i4 *array, index_type *pdim)\n \n   while (base)\n     {\n-      GFC_INTEGER_4 *src;\n+      const GFC_INTEGER_4 * restrict src;\n       GFC_INTEGER_4 result;\n       src = base;\n       {\n@@ -178,22 +181,25 @@ minloc1_4_i4 (gfc_array_i4 *retarray, gfc_array_i4 *array, index_type *pdim)\n }\n \n \n-extern void mminloc1_4_i4 (gfc_array_i4 *, gfc_array_i4 *, index_type *,\n-\t\t\t\t\t       gfc_array_l4 *);\n+extern void mminloc1_4_i4 (gfc_array_i4 * const restrict, \n+\tgfc_array_i4 * const restrict, const index_type * const restrict,\n+\tgfc_array_l4 * const restrict);\n export_proto(mminloc1_4_i4);\n \n void\n-mminloc1_4_i4 (gfc_array_i4 * retarray, gfc_array_i4 * array,\n-\t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n+mminloc1_4_i4 (gfc_array_i4 * const restrict retarray, \n+\tgfc_array_i4 * const restrict array, \n+\tconst index_type * const restrict pdim, \n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n-  GFC_INTEGER_4 *dest;\n-  GFC_INTEGER_4 *base;\n-  GFC_LOGICAL_4 *mbase;\n+  GFC_INTEGER_4 * restrict dest;\n+  const GFC_INTEGER_4 * restrict base;\n+  const GFC_LOGICAL_4 * restrict mbase;\n   int rank;\n   int dim;\n   index_type n;\n@@ -284,8 +290,8 @@ mminloc1_4_i4 (gfc_array_i4 * retarray, gfc_array_i4 * array,\n \n   while (base)\n     {\n-      GFC_INTEGER_4 *src;\n-      GFC_LOGICAL_4 *msrc;\n+      const GFC_INTEGER_4 * restrict src;\n+      const GFC_LOGICAL_4 * restrict msrc;\n       GFC_INTEGER_4 result;\n       src = base;\n       msrc = mbase;"}, {"sha": "57aee811d50a2eb4abd64e87c32dfd6f3afee330", "filename": "libgfortran/generated/minloc1_4_i8.c", "status": "modified", "additions": 20, "deletions": 14, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fminloc1_4_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fminloc1_4_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_4_i8.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -39,18 +39,21 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_INTEGER_8) && defined (HAVE_GFC_INTEGER_4)\n \n \n-extern void minloc1_4_i8 (gfc_array_i4 *, gfc_array_i8 *, index_type *);\n+extern void minloc1_4_i8 (gfc_array_i4 * const restrict, \n+\tgfc_array_i8 * const restrict, const index_type * const restrict);\n export_proto(minloc1_4_i8);\n \n void\n-minloc1_4_i8 (gfc_array_i4 *retarray, gfc_array_i8 *array, index_type *pdim)\n+minloc1_4_i8 (gfc_array_i4 * const restrict retarray, \n+\tgfc_array_i8 * const restrict array, \n+\tconst index_type * const restrict pdim)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n-  GFC_INTEGER_8 *base;\n-  GFC_INTEGER_4 *dest;\n+  const GFC_INTEGER_8 * restrict base;\n+  GFC_INTEGER_4 * restrict dest;\n   index_type rank;\n   index_type n;\n   index_type len;\n@@ -122,7 +125,7 @@ minloc1_4_i8 (gfc_array_i4 *retarray, gfc_array_i8 *array, index_type *pdim)\n \n   while (base)\n     {\n-      GFC_INTEGER_8 *src;\n+      const GFC_INTEGER_8 * restrict src;\n       GFC_INTEGER_4 result;\n       src = base;\n       {\n@@ -178,22 +181,25 @@ minloc1_4_i8 (gfc_array_i4 *retarray, gfc_array_i8 *array, index_type *pdim)\n }\n \n \n-extern void mminloc1_4_i8 (gfc_array_i4 *, gfc_array_i8 *, index_type *,\n-\t\t\t\t\t       gfc_array_l4 *);\n+extern void mminloc1_4_i8 (gfc_array_i4 * const restrict, \n+\tgfc_array_i8 * const restrict, const index_type * const restrict,\n+\tgfc_array_l4 * const restrict);\n export_proto(mminloc1_4_i8);\n \n void\n-mminloc1_4_i8 (gfc_array_i4 * retarray, gfc_array_i8 * array,\n-\t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n+mminloc1_4_i8 (gfc_array_i4 * const restrict retarray, \n+\tgfc_array_i8 * const restrict array, \n+\tconst index_type * const restrict pdim, \n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n-  GFC_INTEGER_4 *dest;\n-  GFC_INTEGER_8 *base;\n-  GFC_LOGICAL_4 *mbase;\n+  GFC_INTEGER_4 * restrict dest;\n+  const GFC_INTEGER_8 * restrict base;\n+  const GFC_LOGICAL_4 * restrict mbase;\n   int rank;\n   int dim;\n   index_type n;\n@@ -284,8 +290,8 @@ mminloc1_4_i8 (gfc_array_i4 * retarray, gfc_array_i8 * array,\n \n   while (base)\n     {\n-      GFC_INTEGER_8 *src;\n-      GFC_LOGICAL_4 *msrc;\n+      const GFC_INTEGER_8 * restrict src;\n+      const GFC_LOGICAL_4 * restrict msrc;\n       GFC_INTEGER_4 result;\n       src = base;\n       msrc = mbase;"}, {"sha": "d33be8450309c5e783daf0ad2c922ea5522d3046", "filename": "libgfortran/generated/minloc1_4_r10.c", "status": "modified", "additions": 20, "deletions": 14, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fminloc1_4_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fminloc1_4_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_4_r10.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -39,18 +39,21 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_REAL_10) && defined (HAVE_GFC_INTEGER_4)\n \n \n-extern void minloc1_4_r10 (gfc_array_i4 *, gfc_array_r10 *, index_type *);\n+extern void minloc1_4_r10 (gfc_array_i4 * const restrict, \n+\tgfc_array_r10 * const restrict, const index_type * const restrict);\n export_proto(minloc1_4_r10);\n \n void\n-minloc1_4_r10 (gfc_array_i4 *retarray, gfc_array_r10 *array, index_type *pdim)\n+minloc1_4_r10 (gfc_array_i4 * const restrict retarray, \n+\tgfc_array_r10 * const restrict array, \n+\tconst index_type * const restrict pdim)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n-  GFC_REAL_10 *base;\n-  GFC_INTEGER_4 *dest;\n+  const GFC_REAL_10 * restrict base;\n+  GFC_INTEGER_4 * restrict dest;\n   index_type rank;\n   index_type n;\n   index_type len;\n@@ -122,7 +125,7 @@ minloc1_4_r10 (gfc_array_i4 *retarray, gfc_array_r10 *array, index_type *pdim)\n \n   while (base)\n     {\n-      GFC_REAL_10 *src;\n+      const GFC_REAL_10 * restrict src;\n       GFC_INTEGER_4 result;\n       src = base;\n       {\n@@ -178,22 +181,25 @@ minloc1_4_r10 (gfc_array_i4 *retarray, gfc_array_r10 *array, index_type *pdim)\n }\n \n \n-extern void mminloc1_4_r10 (gfc_array_i4 *, gfc_array_r10 *, index_type *,\n-\t\t\t\t\t       gfc_array_l4 *);\n+extern void mminloc1_4_r10 (gfc_array_i4 * const restrict, \n+\tgfc_array_r10 * const restrict, const index_type * const restrict,\n+\tgfc_array_l4 * const restrict);\n export_proto(mminloc1_4_r10);\n \n void\n-mminloc1_4_r10 (gfc_array_i4 * retarray, gfc_array_r10 * array,\n-\t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n+mminloc1_4_r10 (gfc_array_i4 * const restrict retarray, \n+\tgfc_array_r10 * const restrict array, \n+\tconst index_type * const restrict pdim, \n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n-  GFC_INTEGER_4 *dest;\n-  GFC_REAL_10 *base;\n-  GFC_LOGICAL_4 *mbase;\n+  GFC_INTEGER_4 * restrict dest;\n+  const GFC_REAL_10 * restrict base;\n+  const GFC_LOGICAL_4 * restrict mbase;\n   int rank;\n   int dim;\n   index_type n;\n@@ -284,8 +290,8 @@ mminloc1_4_r10 (gfc_array_i4 * retarray, gfc_array_r10 * array,\n \n   while (base)\n     {\n-      GFC_REAL_10 *src;\n-      GFC_LOGICAL_4 *msrc;\n+      const GFC_REAL_10 * restrict src;\n+      const GFC_LOGICAL_4 * restrict msrc;\n       GFC_INTEGER_4 result;\n       src = base;\n       msrc = mbase;"}, {"sha": "fb602e20f3001019daa742006f8dd0008b008d2b", "filename": "libgfortran/generated/minloc1_4_r16.c", "status": "modified", "additions": 20, "deletions": 14, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fminloc1_4_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fminloc1_4_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_4_r16.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -39,18 +39,21 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_REAL_16) && defined (HAVE_GFC_INTEGER_4)\n \n \n-extern void minloc1_4_r16 (gfc_array_i4 *, gfc_array_r16 *, index_type *);\n+extern void minloc1_4_r16 (gfc_array_i4 * const restrict, \n+\tgfc_array_r16 * const restrict, const index_type * const restrict);\n export_proto(minloc1_4_r16);\n \n void\n-minloc1_4_r16 (gfc_array_i4 *retarray, gfc_array_r16 *array, index_type *pdim)\n+minloc1_4_r16 (gfc_array_i4 * const restrict retarray, \n+\tgfc_array_r16 * const restrict array, \n+\tconst index_type * const restrict pdim)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n-  GFC_REAL_16 *base;\n-  GFC_INTEGER_4 *dest;\n+  const GFC_REAL_16 * restrict base;\n+  GFC_INTEGER_4 * restrict dest;\n   index_type rank;\n   index_type n;\n   index_type len;\n@@ -122,7 +125,7 @@ minloc1_4_r16 (gfc_array_i4 *retarray, gfc_array_r16 *array, index_type *pdim)\n \n   while (base)\n     {\n-      GFC_REAL_16 *src;\n+      const GFC_REAL_16 * restrict src;\n       GFC_INTEGER_4 result;\n       src = base;\n       {\n@@ -178,22 +181,25 @@ minloc1_4_r16 (gfc_array_i4 *retarray, gfc_array_r16 *array, index_type *pdim)\n }\n \n \n-extern void mminloc1_4_r16 (gfc_array_i4 *, gfc_array_r16 *, index_type *,\n-\t\t\t\t\t       gfc_array_l4 *);\n+extern void mminloc1_4_r16 (gfc_array_i4 * const restrict, \n+\tgfc_array_r16 * const restrict, const index_type * const restrict,\n+\tgfc_array_l4 * const restrict);\n export_proto(mminloc1_4_r16);\n \n void\n-mminloc1_4_r16 (gfc_array_i4 * retarray, gfc_array_r16 * array,\n-\t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n+mminloc1_4_r16 (gfc_array_i4 * const restrict retarray, \n+\tgfc_array_r16 * const restrict array, \n+\tconst index_type * const restrict pdim, \n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n-  GFC_INTEGER_4 *dest;\n-  GFC_REAL_16 *base;\n-  GFC_LOGICAL_4 *mbase;\n+  GFC_INTEGER_4 * restrict dest;\n+  const GFC_REAL_16 * restrict base;\n+  const GFC_LOGICAL_4 * restrict mbase;\n   int rank;\n   int dim;\n   index_type n;\n@@ -284,8 +290,8 @@ mminloc1_4_r16 (gfc_array_i4 * retarray, gfc_array_r16 * array,\n \n   while (base)\n     {\n-      GFC_REAL_16 *src;\n-      GFC_LOGICAL_4 *msrc;\n+      const GFC_REAL_16 * restrict src;\n+      const GFC_LOGICAL_4 * restrict msrc;\n       GFC_INTEGER_4 result;\n       src = base;\n       msrc = mbase;"}, {"sha": "d8e7fbff0787fdb884402e77f293d168c7012fbf", "filename": "libgfortran/generated/minloc1_4_r4.c", "status": "modified", "additions": 20, "deletions": 14, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fminloc1_4_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fminloc1_4_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_4_r4.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -39,18 +39,21 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_REAL_4) && defined (HAVE_GFC_INTEGER_4)\n \n \n-extern void minloc1_4_r4 (gfc_array_i4 *, gfc_array_r4 *, index_type *);\n+extern void minloc1_4_r4 (gfc_array_i4 * const restrict, \n+\tgfc_array_r4 * const restrict, const index_type * const restrict);\n export_proto(minloc1_4_r4);\n \n void\n-minloc1_4_r4 (gfc_array_i4 *retarray, gfc_array_r4 *array, index_type *pdim)\n+minloc1_4_r4 (gfc_array_i4 * const restrict retarray, \n+\tgfc_array_r4 * const restrict array, \n+\tconst index_type * const restrict pdim)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n-  GFC_REAL_4 *base;\n-  GFC_INTEGER_4 *dest;\n+  const GFC_REAL_4 * restrict base;\n+  GFC_INTEGER_4 * restrict dest;\n   index_type rank;\n   index_type n;\n   index_type len;\n@@ -122,7 +125,7 @@ minloc1_4_r4 (gfc_array_i4 *retarray, gfc_array_r4 *array, index_type *pdim)\n \n   while (base)\n     {\n-      GFC_REAL_4 *src;\n+      const GFC_REAL_4 * restrict src;\n       GFC_INTEGER_4 result;\n       src = base;\n       {\n@@ -178,22 +181,25 @@ minloc1_4_r4 (gfc_array_i4 *retarray, gfc_array_r4 *array, index_type *pdim)\n }\n \n \n-extern void mminloc1_4_r4 (gfc_array_i4 *, gfc_array_r4 *, index_type *,\n-\t\t\t\t\t       gfc_array_l4 *);\n+extern void mminloc1_4_r4 (gfc_array_i4 * const restrict, \n+\tgfc_array_r4 * const restrict, const index_type * const restrict,\n+\tgfc_array_l4 * const restrict);\n export_proto(mminloc1_4_r4);\n \n void\n-mminloc1_4_r4 (gfc_array_i4 * retarray, gfc_array_r4 * array,\n-\t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n+mminloc1_4_r4 (gfc_array_i4 * const restrict retarray, \n+\tgfc_array_r4 * const restrict array, \n+\tconst index_type * const restrict pdim, \n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n-  GFC_INTEGER_4 *dest;\n-  GFC_REAL_4 *base;\n-  GFC_LOGICAL_4 *mbase;\n+  GFC_INTEGER_4 * restrict dest;\n+  const GFC_REAL_4 * restrict base;\n+  const GFC_LOGICAL_4 * restrict mbase;\n   int rank;\n   int dim;\n   index_type n;\n@@ -284,8 +290,8 @@ mminloc1_4_r4 (gfc_array_i4 * retarray, gfc_array_r4 * array,\n \n   while (base)\n     {\n-      GFC_REAL_4 *src;\n-      GFC_LOGICAL_4 *msrc;\n+      const GFC_REAL_4 * restrict src;\n+      const GFC_LOGICAL_4 * restrict msrc;\n       GFC_INTEGER_4 result;\n       src = base;\n       msrc = mbase;"}, {"sha": "a0f018b15b362862cb5da6e15b72ed489fe145ff", "filename": "libgfortran/generated/minloc1_4_r8.c", "status": "modified", "additions": 20, "deletions": 14, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fminloc1_4_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fminloc1_4_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_4_r8.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -39,18 +39,21 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_REAL_8) && defined (HAVE_GFC_INTEGER_4)\n \n \n-extern void minloc1_4_r8 (gfc_array_i4 *, gfc_array_r8 *, index_type *);\n+extern void minloc1_4_r8 (gfc_array_i4 * const restrict, \n+\tgfc_array_r8 * const restrict, const index_type * const restrict);\n export_proto(minloc1_4_r8);\n \n void\n-minloc1_4_r8 (gfc_array_i4 *retarray, gfc_array_r8 *array, index_type *pdim)\n+minloc1_4_r8 (gfc_array_i4 * const restrict retarray, \n+\tgfc_array_r8 * const restrict array, \n+\tconst index_type * const restrict pdim)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n-  GFC_REAL_8 *base;\n-  GFC_INTEGER_4 *dest;\n+  const GFC_REAL_8 * restrict base;\n+  GFC_INTEGER_4 * restrict dest;\n   index_type rank;\n   index_type n;\n   index_type len;\n@@ -122,7 +125,7 @@ minloc1_4_r8 (gfc_array_i4 *retarray, gfc_array_r8 *array, index_type *pdim)\n \n   while (base)\n     {\n-      GFC_REAL_8 *src;\n+      const GFC_REAL_8 * restrict src;\n       GFC_INTEGER_4 result;\n       src = base;\n       {\n@@ -178,22 +181,25 @@ minloc1_4_r8 (gfc_array_i4 *retarray, gfc_array_r8 *array, index_type *pdim)\n }\n \n \n-extern void mminloc1_4_r8 (gfc_array_i4 *, gfc_array_r8 *, index_type *,\n-\t\t\t\t\t       gfc_array_l4 *);\n+extern void mminloc1_4_r8 (gfc_array_i4 * const restrict, \n+\tgfc_array_r8 * const restrict, const index_type * const restrict,\n+\tgfc_array_l4 * const restrict);\n export_proto(mminloc1_4_r8);\n \n void\n-mminloc1_4_r8 (gfc_array_i4 * retarray, gfc_array_r8 * array,\n-\t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n+mminloc1_4_r8 (gfc_array_i4 * const restrict retarray, \n+\tgfc_array_r8 * const restrict array, \n+\tconst index_type * const restrict pdim, \n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n-  GFC_INTEGER_4 *dest;\n-  GFC_REAL_8 *base;\n-  GFC_LOGICAL_4 *mbase;\n+  GFC_INTEGER_4 * restrict dest;\n+  const GFC_REAL_8 * restrict base;\n+  const GFC_LOGICAL_4 * restrict mbase;\n   int rank;\n   int dim;\n   index_type n;\n@@ -284,8 +290,8 @@ mminloc1_4_r8 (gfc_array_i4 * retarray, gfc_array_r8 * array,\n \n   while (base)\n     {\n-      GFC_REAL_8 *src;\n-      GFC_LOGICAL_4 *msrc;\n+      const GFC_REAL_8 * restrict src;\n+      const GFC_LOGICAL_4 * restrict msrc;\n       GFC_INTEGER_4 result;\n       src = base;\n       msrc = mbase;"}, {"sha": "9e90549a6cd6fa8dd79709dbe45016dd9b6ee7d5", "filename": "libgfortran/generated/minloc1_8_i16.c", "status": "modified", "additions": 20, "deletions": 14, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fminloc1_8_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fminloc1_8_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_8_i16.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -39,18 +39,21 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_INTEGER_16) && defined (HAVE_GFC_INTEGER_8)\n \n \n-extern void minloc1_8_i16 (gfc_array_i8 *, gfc_array_i16 *, index_type *);\n+extern void minloc1_8_i16 (gfc_array_i8 * const restrict, \n+\tgfc_array_i16 * const restrict, const index_type * const restrict);\n export_proto(minloc1_8_i16);\n \n void\n-minloc1_8_i16 (gfc_array_i8 *retarray, gfc_array_i16 *array, index_type *pdim)\n+minloc1_8_i16 (gfc_array_i8 * const restrict retarray, \n+\tgfc_array_i16 * const restrict array, \n+\tconst index_type * const restrict pdim)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n-  GFC_INTEGER_16 *base;\n-  GFC_INTEGER_8 *dest;\n+  const GFC_INTEGER_16 * restrict base;\n+  GFC_INTEGER_8 * restrict dest;\n   index_type rank;\n   index_type n;\n   index_type len;\n@@ -122,7 +125,7 @@ minloc1_8_i16 (gfc_array_i8 *retarray, gfc_array_i16 *array, index_type *pdim)\n \n   while (base)\n     {\n-      GFC_INTEGER_16 *src;\n+      const GFC_INTEGER_16 * restrict src;\n       GFC_INTEGER_8 result;\n       src = base;\n       {\n@@ -178,22 +181,25 @@ minloc1_8_i16 (gfc_array_i8 *retarray, gfc_array_i16 *array, index_type *pdim)\n }\n \n \n-extern void mminloc1_8_i16 (gfc_array_i8 *, gfc_array_i16 *, index_type *,\n-\t\t\t\t\t       gfc_array_l4 *);\n+extern void mminloc1_8_i16 (gfc_array_i8 * const restrict, \n+\tgfc_array_i16 * const restrict, const index_type * const restrict,\n+\tgfc_array_l4 * const restrict);\n export_proto(mminloc1_8_i16);\n \n void\n-mminloc1_8_i16 (gfc_array_i8 * retarray, gfc_array_i16 * array,\n-\t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n+mminloc1_8_i16 (gfc_array_i8 * const restrict retarray, \n+\tgfc_array_i16 * const restrict array, \n+\tconst index_type * const restrict pdim, \n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n-  GFC_INTEGER_8 *dest;\n-  GFC_INTEGER_16 *base;\n-  GFC_LOGICAL_4 *mbase;\n+  GFC_INTEGER_8 * restrict dest;\n+  const GFC_INTEGER_16 * restrict base;\n+  const GFC_LOGICAL_4 * restrict mbase;\n   int rank;\n   int dim;\n   index_type n;\n@@ -284,8 +290,8 @@ mminloc1_8_i16 (gfc_array_i8 * retarray, gfc_array_i16 * array,\n \n   while (base)\n     {\n-      GFC_INTEGER_16 *src;\n-      GFC_LOGICAL_4 *msrc;\n+      const GFC_INTEGER_16 * restrict src;\n+      const GFC_LOGICAL_4 * restrict msrc;\n       GFC_INTEGER_8 result;\n       src = base;\n       msrc = mbase;"}, {"sha": "078ba6fcf8591a05427dc5c26c62ae5b85e8499f", "filename": "libgfortran/generated/minloc1_8_i4.c", "status": "modified", "additions": 20, "deletions": 14, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fminloc1_8_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fminloc1_8_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_8_i4.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -39,18 +39,21 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_INTEGER_4) && defined (HAVE_GFC_INTEGER_8)\n \n \n-extern void minloc1_8_i4 (gfc_array_i8 *, gfc_array_i4 *, index_type *);\n+extern void minloc1_8_i4 (gfc_array_i8 * const restrict, \n+\tgfc_array_i4 * const restrict, const index_type * const restrict);\n export_proto(minloc1_8_i4);\n \n void\n-minloc1_8_i4 (gfc_array_i8 *retarray, gfc_array_i4 *array, index_type *pdim)\n+minloc1_8_i4 (gfc_array_i8 * const restrict retarray, \n+\tgfc_array_i4 * const restrict array, \n+\tconst index_type * const restrict pdim)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n-  GFC_INTEGER_4 *base;\n-  GFC_INTEGER_8 *dest;\n+  const GFC_INTEGER_4 * restrict base;\n+  GFC_INTEGER_8 * restrict dest;\n   index_type rank;\n   index_type n;\n   index_type len;\n@@ -122,7 +125,7 @@ minloc1_8_i4 (gfc_array_i8 *retarray, gfc_array_i4 *array, index_type *pdim)\n \n   while (base)\n     {\n-      GFC_INTEGER_4 *src;\n+      const GFC_INTEGER_4 * restrict src;\n       GFC_INTEGER_8 result;\n       src = base;\n       {\n@@ -178,22 +181,25 @@ minloc1_8_i4 (gfc_array_i8 *retarray, gfc_array_i4 *array, index_type *pdim)\n }\n \n \n-extern void mminloc1_8_i4 (gfc_array_i8 *, gfc_array_i4 *, index_type *,\n-\t\t\t\t\t       gfc_array_l4 *);\n+extern void mminloc1_8_i4 (gfc_array_i8 * const restrict, \n+\tgfc_array_i4 * const restrict, const index_type * const restrict,\n+\tgfc_array_l4 * const restrict);\n export_proto(mminloc1_8_i4);\n \n void\n-mminloc1_8_i4 (gfc_array_i8 * retarray, gfc_array_i4 * array,\n-\t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n+mminloc1_8_i4 (gfc_array_i8 * const restrict retarray, \n+\tgfc_array_i4 * const restrict array, \n+\tconst index_type * const restrict pdim, \n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n-  GFC_INTEGER_8 *dest;\n-  GFC_INTEGER_4 *base;\n-  GFC_LOGICAL_4 *mbase;\n+  GFC_INTEGER_8 * restrict dest;\n+  const GFC_INTEGER_4 * restrict base;\n+  const GFC_LOGICAL_4 * restrict mbase;\n   int rank;\n   int dim;\n   index_type n;\n@@ -284,8 +290,8 @@ mminloc1_8_i4 (gfc_array_i8 * retarray, gfc_array_i4 * array,\n \n   while (base)\n     {\n-      GFC_INTEGER_4 *src;\n-      GFC_LOGICAL_4 *msrc;\n+      const GFC_INTEGER_4 * restrict src;\n+      const GFC_LOGICAL_4 * restrict msrc;\n       GFC_INTEGER_8 result;\n       src = base;\n       msrc = mbase;"}, {"sha": "6de37f1753e0158e490db3a09f414980d554f876", "filename": "libgfortran/generated/minloc1_8_i8.c", "status": "modified", "additions": 20, "deletions": 14, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fminloc1_8_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fminloc1_8_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_8_i8.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -39,18 +39,21 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_INTEGER_8) && defined (HAVE_GFC_INTEGER_8)\n \n \n-extern void minloc1_8_i8 (gfc_array_i8 *, gfc_array_i8 *, index_type *);\n+extern void minloc1_8_i8 (gfc_array_i8 * const restrict, \n+\tgfc_array_i8 * const restrict, const index_type * const restrict);\n export_proto(minloc1_8_i8);\n \n void\n-minloc1_8_i8 (gfc_array_i8 *retarray, gfc_array_i8 *array, index_type *pdim)\n+minloc1_8_i8 (gfc_array_i8 * const restrict retarray, \n+\tgfc_array_i8 * const restrict array, \n+\tconst index_type * const restrict pdim)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n-  GFC_INTEGER_8 *base;\n-  GFC_INTEGER_8 *dest;\n+  const GFC_INTEGER_8 * restrict base;\n+  GFC_INTEGER_8 * restrict dest;\n   index_type rank;\n   index_type n;\n   index_type len;\n@@ -122,7 +125,7 @@ minloc1_8_i8 (gfc_array_i8 *retarray, gfc_array_i8 *array, index_type *pdim)\n \n   while (base)\n     {\n-      GFC_INTEGER_8 *src;\n+      const GFC_INTEGER_8 * restrict src;\n       GFC_INTEGER_8 result;\n       src = base;\n       {\n@@ -178,22 +181,25 @@ minloc1_8_i8 (gfc_array_i8 *retarray, gfc_array_i8 *array, index_type *pdim)\n }\n \n \n-extern void mminloc1_8_i8 (gfc_array_i8 *, gfc_array_i8 *, index_type *,\n-\t\t\t\t\t       gfc_array_l4 *);\n+extern void mminloc1_8_i8 (gfc_array_i8 * const restrict, \n+\tgfc_array_i8 * const restrict, const index_type * const restrict,\n+\tgfc_array_l4 * const restrict);\n export_proto(mminloc1_8_i8);\n \n void\n-mminloc1_8_i8 (gfc_array_i8 * retarray, gfc_array_i8 * array,\n-\t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n+mminloc1_8_i8 (gfc_array_i8 * const restrict retarray, \n+\tgfc_array_i8 * const restrict array, \n+\tconst index_type * const restrict pdim, \n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n-  GFC_INTEGER_8 *dest;\n-  GFC_INTEGER_8 *base;\n-  GFC_LOGICAL_4 *mbase;\n+  GFC_INTEGER_8 * restrict dest;\n+  const GFC_INTEGER_8 * restrict base;\n+  const GFC_LOGICAL_4 * restrict mbase;\n   int rank;\n   int dim;\n   index_type n;\n@@ -284,8 +290,8 @@ mminloc1_8_i8 (gfc_array_i8 * retarray, gfc_array_i8 * array,\n \n   while (base)\n     {\n-      GFC_INTEGER_8 *src;\n-      GFC_LOGICAL_4 *msrc;\n+      const GFC_INTEGER_8 * restrict src;\n+      const GFC_LOGICAL_4 * restrict msrc;\n       GFC_INTEGER_8 result;\n       src = base;\n       msrc = mbase;"}, {"sha": "cb6d4d43a1eaae60d82a06a7c5f951ec9359291c", "filename": "libgfortran/generated/minloc1_8_r10.c", "status": "modified", "additions": 20, "deletions": 14, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fminloc1_8_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fminloc1_8_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_8_r10.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -39,18 +39,21 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_REAL_10) && defined (HAVE_GFC_INTEGER_8)\n \n \n-extern void minloc1_8_r10 (gfc_array_i8 *, gfc_array_r10 *, index_type *);\n+extern void minloc1_8_r10 (gfc_array_i8 * const restrict, \n+\tgfc_array_r10 * const restrict, const index_type * const restrict);\n export_proto(minloc1_8_r10);\n \n void\n-minloc1_8_r10 (gfc_array_i8 *retarray, gfc_array_r10 *array, index_type *pdim)\n+minloc1_8_r10 (gfc_array_i8 * const restrict retarray, \n+\tgfc_array_r10 * const restrict array, \n+\tconst index_type * const restrict pdim)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n-  GFC_REAL_10 *base;\n-  GFC_INTEGER_8 *dest;\n+  const GFC_REAL_10 * restrict base;\n+  GFC_INTEGER_8 * restrict dest;\n   index_type rank;\n   index_type n;\n   index_type len;\n@@ -122,7 +125,7 @@ minloc1_8_r10 (gfc_array_i8 *retarray, gfc_array_r10 *array, index_type *pdim)\n \n   while (base)\n     {\n-      GFC_REAL_10 *src;\n+      const GFC_REAL_10 * restrict src;\n       GFC_INTEGER_8 result;\n       src = base;\n       {\n@@ -178,22 +181,25 @@ minloc1_8_r10 (gfc_array_i8 *retarray, gfc_array_r10 *array, index_type *pdim)\n }\n \n \n-extern void mminloc1_8_r10 (gfc_array_i8 *, gfc_array_r10 *, index_type *,\n-\t\t\t\t\t       gfc_array_l4 *);\n+extern void mminloc1_8_r10 (gfc_array_i8 * const restrict, \n+\tgfc_array_r10 * const restrict, const index_type * const restrict,\n+\tgfc_array_l4 * const restrict);\n export_proto(mminloc1_8_r10);\n \n void\n-mminloc1_8_r10 (gfc_array_i8 * retarray, gfc_array_r10 * array,\n-\t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n+mminloc1_8_r10 (gfc_array_i8 * const restrict retarray, \n+\tgfc_array_r10 * const restrict array, \n+\tconst index_type * const restrict pdim, \n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n-  GFC_INTEGER_8 *dest;\n-  GFC_REAL_10 *base;\n-  GFC_LOGICAL_4 *mbase;\n+  GFC_INTEGER_8 * restrict dest;\n+  const GFC_REAL_10 * restrict base;\n+  const GFC_LOGICAL_4 * restrict mbase;\n   int rank;\n   int dim;\n   index_type n;\n@@ -284,8 +290,8 @@ mminloc1_8_r10 (gfc_array_i8 * retarray, gfc_array_r10 * array,\n \n   while (base)\n     {\n-      GFC_REAL_10 *src;\n-      GFC_LOGICAL_4 *msrc;\n+      const GFC_REAL_10 * restrict src;\n+      const GFC_LOGICAL_4 * restrict msrc;\n       GFC_INTEGER_8 result;\n       src = base;\n       msrc = mbase;"}, {"sha": "d0a0445d330ee44d24a35636fcb74aa543e670bb", "filename": "libgfortran/generated/minloc1_8_r16.c", "status": "modified", "additions": 20, "deletions": 14, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fminloc1_8_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fminloc1_8_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_8_r16.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -39,18 +39,21 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_REAL_16) && defined (HAVE_GFC_INTEGER_8)\n \n \n-extern void minloc1_8_r16 (gfc_array_i8 *, gfc_array_r16 *, index_type *);\n+extern void minloc1_8_r16 (gfc_array_i8 * const restrict, \n+\tgfc_array_r16 * const restrict, const index_type * const restrict);\n export_proto(minloc1_8_r16);\n \n void\n-minloc1_8_r16 (gfc_array_i8 *retarray, gfc_array_r16 *array, index_type *pdim)\n+minloc1_8_r16 (gfc_array_i8 * const restrict retarray, \n+\tgfc_array_r16 * const restrict array, \n+\tconst index_type * const restrict pdim)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n-  GFC_REAL_16 *base;\n-  GFC_INTEGER_8 *dest;\n+  const GFC_REAL_16 * restrict base;\n+  GFC_INTEGER_8 * restrict dest;\n   index_type rank;\n   index_type n;\n   index_type len;\n@@ -122,7 +125,7 @@ minloc1_8_r16 (gfc_array_i8 *retarray, gfc_array_r16 *array, index_type *pdim)\n \n   while (base)\n     {\n-      GFC_REAL_16 *src;\n+      const GFC_REAL_16 * restrict src;\n       GFC_INTEGER_8 result;\n       src = base;\n       {\n@@ -178,22 +181,25 @@ minloc1_8_r16 (gfc_array_i8 *retarray, gfc_array_r16 *array, index_type *pdim)\n }\n \n \n-extern void mminloc1_8_r16 (gfc_array_i8 *, gfc_array_r16 *, index_type *,\n-\t\t\t\t\t       gfc_array_l4 *);\n+extern void mminloc1_8_r16 (gfc_array_i8 * const restrict, \n+\tgfc_array_r16 * const restrict, const index_type * const restrict,\n+\tgfc_array_l4 * const restrict);\n export_proto(mminloc1_8_r16);\n \n void\n-mminloc1_8_r16 (gfc_array_i8 * retarray, gfc_array_r16 * array,\n-\t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n+mminloc1_8_r16 (gfc_array_i8 * const restrict retarray, \n+\tgfc_array_r16 * const restrict array, \n+\tconst index_type * const restrict pdim, \n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n-  GFC_INTEGER_8 *dest;\n-  GFC_REAL_16 *base;\n-  GFC_LOGICAL_4 *mbase;\n+  GFC_INTEGER_8 * restrict dest;\n+  const GFC_REAL_16 * restrict base;\n+  const GFC_LOGICAL_4 * restrict mbase;\n   int rank;\n   int dim;\n   index_type n;\n@@ -284,8 +290,8 @@ mminloc1_8_r16 (gfc_array_i8 * retarray, gfc_array_r16 * array,\n \n   while (base)\n     {\n-      GFC_REAL_16 *src;\n-      GFC_LOGICAL_4 *msrc;\n+      const GFC_REAL_16 * restrict src;\n+      const GFC_LOGICAL_4 * restrict msrc;\n       GFC_INTEGER_8 result;\n       src = base;\n       msrc = mbase;"}, {"sha": "ec8e6129d760a577c6d7c41a9ad360f35a39d53f", "filename": "libgfortran/generated/minloc1_8_r4.c", "status": "modified", "additions": 20, "deletions": 14, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fminloc1_8_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fminloc1_8_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_8_r4.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -39,18 +39,21 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_REAL_4) && defined (HAVE_GFC_INTEGER_8)\n \n \n-extern void minloc1_8_r4 (gfc_array_i8 *, gfc_array_r4 *, index_type *);\n+extern void minloc1_8_r4 (gfc_array_i8 * const restrict, \n+\tgfc_array_r4 * const restrict, const index_type * const restrict);\n export_proto(minloc1_8_r4);\n \n void\n-minloc1_8_r4 (gfc_array_i8 *retarray, gfc_array_r4 *array, index_type *pdim)\n+minloc1_8_r4 (gfc_array_i8 * const restrict retarray, \n+\tgfc_array_r4 * const restrict array, \n+\tconst index_type * const restrict pdim)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n-  GFC_REAL_4 *base;\n-  GFC_INTEGER_8 *dest;\n+  const GFC_REAL_4 * restrict base;\n+  GFC_INTEGER_8 * restrict dest;\n   index_type rank;\n   index_type n;\n   index_type len;\n@@ -122,7 +125,7 @@ minloc1_8_r4 (gfc_array_i8 *retarray, gfc_array_r4 *array, index_type *pdim)\n \n   while (base)\n     {\n-      GFC_REAL_4 *src;\n+      const GFC_REAL_4 * restrict src;\n       GFC_INTEGER_8 result;\n       src = base;\n       {\n@@ -178,22 +181,25 @@ minloc1_8_r4 (gfc_array_i8 *retarray, gfc_array_r4 *array, index_type *pdim)\n }\n \n \n-extern void mminloc1_8_r4 (gfc_array_i8 *, gfc_array_r4 *, index_type *,\n-\t\t\t\t\t       gfc_array_l4 *);\n+extern void mminloc1_8_r4 (gfc_array_i8 * const restrict, \n+\tgfc_array_r4 * const restrict, const index_type * const restrict,\n+\tgfc_array_l4 * const restrict);\n export_proto(mminloc1_8_r4);\n \n void\n-mminloc1_8_r4 (gfc_array_i8 * retarray, gfc_array_r4 * array,\n-\t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n+mminloc1_8_r4 (gfc_array_i8 * const restrict retarray, \n+\tgfc_array_r4 * const restrict array, \n+\tconst index_type * const restrict pdim, \n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n-  GFC_INTEGER_8 *dest;\n-  GFC_REAL_4 *base;\n-  GFC_LOGICAL_4 *mbase;\n+  GFC_INTEGER_8 * restrict dest;\n+  const GFC_REAL_4 * restrict base;\n+  const GFC_LOGICAL_4 * restrict mbase;\n   int rank;\n   int dim;\n   index_type n;\n@@ -284,8 +290,8 @@ mminloc1_8_r4 (gfc_array_i8 * retarray, gfc_array_r4 * array,\n \n   while (base)\n     {\n-      GFC_REAL_4 *src;\n-      GFC_LOGICAL_4 *msrc;\n+      const GFC_REAL_4 * restrict src;\n+      const GFC_LOGICAL_4 * restrict msrc;\n       GFC_INTEGER_8 result;\n       src = base;\n       msrc = mbase;"}, {"sha": "ef2dd2b4af295a4cb6f215a864aeeddfcb8e69ea", "filename": "libgfortran/generated/minloc1_8_r8.c", "status": "modified", "additions": 20, "deletions": 14, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fminloc1_8_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fminloc1_8_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_8_r8.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -39,18 +39,21 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_REAL_8) && defined (HAVE_GFC_INTEGER_8)\n \n \n-extern void minloc1_8_r8 (gfc_array_i8 *, gfc_array_r8 *, index_type *);\n+extern void minloc1_8_r8 (gfc_array_i8 * const restrict, \n+\tgfc_array_r8 * const restrict, const index_type * const restrict);\n export_proto(minloc1_8_r8);\n \n void\n-minloc1_8_r8 (gfc_array_i8 *retarray, gfc_array_r8 *array, index_type *pdim)\n+minloc1_8_r8 (gfc_array_i8 * const restrict retarray, \n+\tgfc_array_r8 * const restrict array, \n+\tconst index_type * const restrict pdim)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n-  GFC_REAL_8 *base;\n-  GFC_INTEGER_8 *dest;\n+  const GFC_REAL_8 * restrict base;\n+  GFC_INTEGER_8 * restrict dest;\n   index_type rank;\n   index_type n;\n   index_type len;\n@@ -122,7 +125,7 @@ minloc1_8_r8 (gfc_array_i8 *retarray, gfc_array_r8 *array, index_type *pdim)\n \n   while (base)\n     {\n-      GFC_REAL_8 *src;\n+      const GFC_REAL_8 * restrict src;\n       GFC_INTEGER_8 result;\n       src = base;\n       {\n@@ -178,22 +181,25 @@ minloc1_8_r8 (gfc_array_i8 *retarray, gfc_array_r8 *array, index_type *pdim)\n }\n \n \n-extern void mminloc1_8_r8 (gfc_array_i8 *, gfc_array_r8 *, index_type *,\n-\t\t\t\t\t       gfc_array_l4 *);\n+extern void mminloc1_8_r8 (gfc_array_i8 * const restrict, \n+\tgfc_array_r8 * const restrict, const index_type * const restrict,\n+\tgfc_array_l4 * const restrict);\n export_proto(mminloc1_8_r8);\n \n void\n-mminloc1_8_r8 (gfc_array_i8 * retarray, gfc_array_r8 * array,\n-\t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n+mminloc1_8_r8 (gfc_array_i8 * const restrict retarray, \n+\tgfc_array_r8 * const restrict array, \n+\tconst index_type * const restrict pdim, \n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n-  GFC_INTEGER_8 *dest;\n-  GFC_REAL_8 *base;\n-  GFC_LOGICAL_4 *mbase;\n+  GFC_INTEGER_8 * restrict dest;\n+  const GFC_REAL_8 * restrict base;\n+  const GFC_LOGICAL_4 * restrict mbase;\n   int rank;\n   int dim;\n   index_type n;\n@@ -284,8 +290,8 @@ mminloc1_8_r8 (gfc_array_i8 * retarray, gfc_array_r8 * array,\n \n   while (base)\n     {\n-      GFC_REAL_8 *src;\n-      GFC_LOGICAL_4 *msrc;\n+      const GFC_REAL_8 * restrict src;\n+      const GFC_LOGICAL_4 * restrict msrc;\n       GFC_INTEGER_8 result;\n       src = base;\n       msrc = mbase;"}, {"sha": "5b34eafaaf70bc87eac024cb02437c6b1065db59", "filename": "libgfortran/generated/minval_i16.c", "status": "modified", "additions": 20, "deletions": 14, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fminval_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fminval_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminval_i16.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -38,18 +38,21 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_INTEGER_16) && defined (HAVE_GFC_INTEGER_16)\n \n \n-extern void minval_i16 (gfc_array_i16 *, gfc_array_i16 *, index_type *);\n+extern void minval_i16 (gfc_array_i16 * const restrict, \n+\tgfc_array_i16 * const restrict, const index_type * const restrict);\n export_proto(minval_i16);\n \n void\n-minval_i16 (gfc_array_i16 *retarray, gfc_array_i16 *array, index_type *pdim)\n+minval_i16 (gfc_array_i16 * const restrict retarray, \n+\tgfc_array_i16 * const restrict array, \n+\tconst index_type * const restrict pdim)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n-  GFC_INTEGER_16 *base;\n-  GFC_INTEGER_16 *dest;\n+  const GFC_INTEGER_16 * restrict base;\n+  GFC_INTEGER_16 * restrict dest;\n   index_type rank;\n   index_type n;\n   index_type len;\n@@ -121,7 +124,7 @@ minval_i16 (gfc_array_i16 *retarray, gfc_array_i16 *array, index_type *pdim)\n \n   while (base)\n     {\n-      GFC_INTEGER_16 *src;\n+      const GFC_INTEGER_16 * restrict src;\n       GFC_INTEGER_16 result;\n       src = base;\n       {\n@@ -172,22 +175,25 @@ minval_i16 (gfc_array_i16 *retarray, gfc_array_i16 *array, index_type *pdim)\n }\n \n \n-extern void mminval_i16 (gfc_array_i16 *, gfc_array_i16 *, index_type *,\n-\t\t\t\t\t       gfc_array_l4 *);\n+extern void mminval_i16 (gfc_array_i16 * const restrict, \n+\tgfc_array_i16 * const restrict, const index_type * const restrict,\n+\tgfc_array_l4 * const restrict);\n export_proto(mminval_i16);\n \n void\n-mminval_i16 (gfc_array_i16 * retarray, gfc_array_i16 * array,\n-\t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n+mminval_i16 (gfc_array_i16 * const restrict retarray, \n+\tgfc_array_i16 * const restrict array, \n+\tconst index_type * const restrict pdim, \n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n-  GFC_INTEGER_16 *dest;\n-  GFC_INTEGER_16 *base;\n-  GFC_LOGICAL_4 *mbase;\n+  GFC_INTEGER_16 * restrict dest;\n+  const GFC_INTEGER_16 * restrict base;\n+  const GFC_LOGICAL_4 * restrict mbase;\n   int rank;\n   int dim;\n   index_type n;\n@@ -278,8 +284,8 @@ mminval_i16 (gfc_array_i16 * retarray, gfc_array_i16 * array,\n \n   while (base)\n     {\n-      GFC_INTEGER_16 *src;\n-      GFC_LOGICAL_4 *msrc;\n+      const GFC_INTEGER_16 * restrict src;\n+      const GFC_LOGICAL_4 * restrict msrc;\n       GFC_INTEGER_16 result;\n       src = base;\n       msrc = mbase;"}, {"sha": "bcdb55f31206acc8dd06d0e12c0d602881919ec0", "filename": "libgfortran/generated/minval_i4.c", "status": "modified", "additions": 20, "deletions": 14, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fminval_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fminval_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminval_i4.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -38,18 +38,21 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_INTEGER_4) && defined (HAVE_GFC_INTEGER_4)\n \n \n-extern void minval_i4 (gfc_array_i4 *, gfc_array_i4 *, index_type *);\n+extern void minval_i4 (gfc_array_i4 * const restrict, \n+\tgfc_array_i4 * const restrict, const index_type * const restrict);\n export_proto(minval_i4);\n \n void\n-minval_i4 (gfc_array_i4 *retarray, gfc_array_i4 *array, index_type *pdim)\n+minval_i4 (gfc_array_i4 * const restrict retarray, \n+\tgfc_array_i4 * const restrict array, \n+\tconst index_type * const restrict pdim)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n-  GFC_INTEGER_4 *base;\n-  GFC_INTEGER_4 *dest;\n+  const GFC_INTEGER_4 * restrict base;\n+  GFC_INTEGER_4 * restrict dest;\n   index_type rank;\n   index_type n;\n   index_type len;\n@@ -121,7 +124,7 @@ minval_i4 (gfc_array_i4 *retarray, gfc_array_i4 *array, index_type *pdim)\n \n   while (base)\n     {\n-      GFC_INTEGER_4 *src;\n+      const GFC_INTEGER_4 * restrict src;\n       GFC_INTEGER_4 result;\n       src = base;\n       {\n@@ -172,22 +175,25 @@ minval_i4 (gfc_array_i4 *retarray, gfc_array_i4 *array, index_type *pdim)\n }\n \n \n-extern void mminval_i4 (gfc_array_i4 *, gfc_array_i4 *, index_type *,\n-\t\t\t\t\t       gfc_array_l4 *);\n+extern void mminval_i4 (gfc_array_i4 * const restrict, \n+\tgfc_array_i4 * const restrict, const index_type * const restrict,\n+\tgfc_array_l4 * const restrict);\n export_proto(mminval_i4);\n \n void\n-mminval_i4 (gfc_array_i4 * retarray, gfc_array_i4 * array,\n-\t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n+mminval_i4 (gfc_array_i4 * const restrict retarray, \n+\tgfc_array_i4 * const restrict array, \n+\tconst index_type * const restrict pdim, \n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n-  GFC_INTEGER_4 *dest;\n-  GFC_INTEGER_4 *base;\n-  GFC_LOGICAL_4 *mbase;\n+  GFC_INTEGER_4 * restrict dest;\n+  const GFC_INTEGER_4 * restrict base;\n+  const GFC_LOGICAL_4 * restrict mbase;\n   int rank;\n   int dim;\n   index_type n;\n@@ -278,8 +284,8 @@ mminval_i4 (gfc_array_i4 * retarray, gfc_array_i4 * array,\n \n   while (base)\n     {\n-      GFC_INTEGER_4 *src;\n-      GFC_LOGICAL_4 *msrc;\n+      const GFC_INTEGER_4 * restrict src;\n+      const GFC_LOGICAL_4 * restrict msrc;\n       GFC_INTEGER_4 result;\n       src = base;\n       msrc = mbase;"}, {"sha": "eb37d4824b93472e9b2c4f8566c43d6bea181260", "filename": "libgfortran/generated/minval_i8.c", "status": "modified", "additions": 20, "deletions": 14, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fminval_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fminval_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminval_i8.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -38,18 +38,21 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_INTEGER_8) && defined (HAVE_GFC_INTEGER_8)\n \n \n-extern void minval_i8 (gfc_array_i8 *, gfc_array_i8 *, index_type *);\n+extern void minval_i8 (gfc_array_i8 * const restrict, \n+\tgfc_array_i8 * const restrict, const index_type * const restrict);\n export_proto(minval_i8);\n \n void\n-minval_i8 (gfc_array_i8 *retarray, gfc_array_i8 *array, index_type *pdim)\n+minval_i8 (gfc_array_i8 * const restrict retarray, \n+\tgfc_array_i8 * const restrict array, \n+\tconst index_type * const restrict pdim)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n-  GFC_INTEGER_8 *base;\n-  GFC_INTEGER_8 *dest;\n+  const GFC_INTEGER_8 * restrict base;\n+  GFC_INTEGER_8 * restrict dest;\n   index_type rank;\n   index_type n;\n   index_type len;\n@@ -121,7 +124,7 @@ minval_i8 (gfc_array_i8 *retarray, gfc_array_i8 *array, index_type *pdim)\n \n   while (base)\n     {\n-      GFC_INTEGER_8 *src;\n+      const GFC_INTEGER_8 * restrict src;\n       GFC_INTEGER_8 result;\n       src = base;\n       {\n@@ -172,22 +175,25 @@ minval_i8 (gfc_array_i8 *retarray, gfc_array_i8 *array, index_type *pdim)\n }\n \n \n-extern void mminval_i8 (gfc_array_i8 *, gfc_array_i8 *, index_type *,\n-\t\t\t\t\t       gfc_array_l4 *);\n+extern void mminval_i8 (gfc_array_i8 * const restrict, \n+\tgfc_array_i8 * const restrict, const index_type * const restrict,\n+\tgfc_array_l4 * const restrict);\n export_proto(mminval_i8);\n \n void\n-mminval_i8 (gfc_array_i8 * retarray, gfc_array_i8 * array,\n-\t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n+mminval_i8 (gfc_array_i8 * const restrict retarray, \n+\tgfc_array_i8 * const restrict array, \n+\tconst index_type * const restrict pdim, \n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n-  GFC_INTEGER_8 *dest;\n-  GFC_INTEGER_8 *base;\n-  GFC_LOGICAL_4 *mbase;\n+  GFC_INTEGER_8 * restrict dest;\n+  const GFC_INTEGER_8 * restrict base;\n+  const GFC_LOGICAL_4 * restrict mbase;\n   int rank;\n   int dim;\n   index_type n;\n@@ -278,8 +284,8 @@ mminval_i8 (gfc_array_i8 * retarray, gfc_array_i8 * array,\n \n   while (base)\n     {\n-      GFC_INTEGER_8 *src;\n-      GFC_LOGICAL_4 *msrc;\n+      const GFC_INTEGER_8 * restrict src;\n+      const GFC_LOGICAL_4 * restrict msrc;\n       GFC_INTEGER_8 result;\n       src = base;\n       msrc = mbase;"}, {"sha": "a52e5a1b35addd7b84f93b54101ec58229d574a9", "filename": "libgfortran/generated/minval_r10.c", "status": "modified", "additions": 20, "deletions": 14, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fminval_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fminval_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminval_r10.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -38,18 +38,21 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_REAL_10) && defined (HAVE_GFC_REAL_10)\n \n \n-extern void minval_r10 (gfc_array_r10 *, gfc_array_r10 *, index_type *);\n+extern void minval_r10 (gfc_array_r10 * const restrict, \n+\tgfc_array_r10 * const restrict, const index_type * const restrict);\n export_proto(minval_r10);\n \n void\n-minval_r10 (gfc_array_r10 *retarray, gfc_array_r10 *array, index_type *pdim)\n+minval_r10 (gfc_array_r10 * const restrict retarray, \n+\tgfc_array_r10 * const restrict array, \n+\tconst index_type * const restrict pdim)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n-  GFC_REAL_10 *base;\n-  GFC_REAL_10 *dest;\n+  const GFC_REAL_10 * restrict base;\n+  GFC_REAL_10 * restrict dest;\n   index_type rank;\n   index_type n;\n   index_type len;\n@@ -121,7 +124,7 @@ minval_r10 (gfc_array_r10 *retarray, gfc_array_r10 *array, index_type *pdim)\n \n   while (base)\n     {\n-      GFC_REAL_10 *src;\n+      const GFC_REAL_10 * restrict src;\n       GFC_REAL_10 result;\n       src = base;\n       {\n@@ -172,22 +175,25 @@ minval_r10 (gfc_array_r10 *retarray, gfc_array_r10 *array, index_type *pdim)\n }\n \n \n-extern void mminval_r10 (gfc_array_r10 *, gfc_array_r10 *, index_type *,\n-\t\t\t\t\t       gfc_array_l4 *);\n+extern void mminval_r10 (gfc_array_r10 * const restrict, \n+\tgfc_array_r10 * const restrict, const index_type * const restrict,\n+\tgfc_array_l4 * const restrict);\n export_proto(mminval_r10);\n \n void\n-mminval_r10 (gfc_array_r10 * retarray, gfc_array_r10 * array,\n-\t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n+mminval_r10 (gfc_array_r10 * const restrict retarray, \n+\tgfc_array_r10 * const restrict array, \n+\tconst index_type * const restrict pdim, \n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n-  GFC_REAL_10 *dest;\n-  GFC_REAL_10 *base;\n-  GFC_LOGICAL_4 *mbase;\n+  GFC_REAL_10 * restrict dest;\n+  const GFC_REAL_10 * restrict base;\n+  const GFC_LOGICAL_4 * restrict mbase;\n   int rank;\n   int dim;\n   index_type n;\n@@ -278,8 +284,8 @@ mminval_r10 (gfc_array_r10 * retarray, gfc_array_r10 * array,\n \n   while (base)\n     {\n-      GFC_REAL_10 *src;\n-      GFC_LOGICAL_4 *msrc;\n+      const GFC_REAL_10 * restrict src;\n+      const GFC_LOGICAL_4 * restrict msrc;\n       GFC_REAL_10 result;\n       src = base;\n       msrc = mbase;"}, {"sha": "61ecd81746f89bd5920b62e3fccff93f72de031b", "filename": "libgfortran/generated/minval_r16.c", "status": "modified", "additions": 20, "deletions": 14, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fminval_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fminval_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminval_r16.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -38,18 +38,21 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_REAL_16) && defined (HAVE_GFC_REAL_16)\n \n \n-extern void minval_r16 (gfc_array_r16 *, gfc_array_r16 *, index_type *);\n+extern void minval_r16 (gfc_array_r16 * const restrict, \n+\tgfc_array_r16 * const restrict, const index_type * const restrict);\n export_proto(minval_r16);\n \n void\n-minval_r16 (gfc_array_r16 *retarray, gfc_array_r16 *array, index_type *pdim)\n+minval_r16 (gfc_array_r16 * const restrict retarray, \n+\tgfc_array_r16 * const restrict array, \n+\tconst index_type * const restrict pdim)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n-  GFC_REAL_16 *base;\n-  GFC_REAL_16 *dest;\n+  const GFC_REAL_16 * restrict base;\n+  GFC_REAL_16 * restrict dest;\n   index_type rank;\n   index_type n;\n   index_type len;\n@@ -121,7 +124,7 @@ minval_r16 (gfc_array_r16 *retarray, gfc_array_r16 *array, index_type *pdim)\n \n   while (base)\n     {\n-      GFC_REAL_16 *src;\n+      const GFC_REAL_16 * restrict src;\n       GFC_REAL_16 result;\n       src = base;\n       {\n@@ -172,22 +175,25 @@ minval_r16 (gfc_array_r16 *retarray, gfc_array_r16 *array, index_type *pdim)\n }\n \n \n-extern void mminval_r16 (gfc_array_r16 *, gfc_array_r16 *, index_type *,\n-\t\t\t\t\t       gfc_array_l4 *);\n+extern void mminval_r16 (gfc_array_r16 * const restrict, \n+\tgfc_array_r16 * const restrict, const index_type * const restrict,\n+\tgfc_array_l4 * const restrict);\n export_proto(mminval_r16);\n \n void\n-mminval_r16 (gfc_array_r16 * retarray, gfc_array_r16 * array,\n-\t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n+mminval_r16 (gfc_array_r16 * const restrict retarray, \n+\tgfc_array_r16 * const restrict array, \n+\tconst index_type * const restrict pdim, \n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n-  GFC_REAL_16 *dest;\n-  GFC_REAL_16 *base;\n-  GFC_LOGICAL_4 *mbase;\n+  GFC_REAL_16 * restrict dest;\n+  const GFC_REAL_16 * restrict base;\n+  const GFC_LOGICAL_4 * restrict mbase;\n   int rank;\n   int dim;\n   index_type n;\n@@ -278,8 +284,8 @@ mminval_r16 (gfc_array_r16 * retarray, gfc_array_r16 * array,\n \n   while (base)\n     {\n-      GFC_REAL_16 *src;\n-      GFC_LOGICAL_4 *msrc;\n+      const GFC_REAL_16 * restrict src;\n+      const GFC_LOGICAL_4 * restrict msrc;\n       GFC_REAL_16 result;\n       src = base;\n       msrc = mbase;"}, {"sha": "4eafed2eda13f6cace0bb5d44f32449de3f9506e", "filename": "libgfortran/generated/minval_r4.c", "status": "modified", "additions": 20, "deletions": 14, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fminval_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fminval_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminval_r4.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -38,18 +38,21 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_REAL_4) && defined (HAVE_GFC_REAL_4)\n \n \n-extern void minval_r4 (gfc_array_r4 *, gfc_array_r4 *, index_type *);\n+extern void minval_r4 (gfc_array_r4 * const restrict, \n+\tgfc_array_r4 * const restrict, const index_type * const restrict);\n export_proto(minval_r4);\n \n void\n-minval_r4 (gfc_array_r4 *retarray, gfc_array_r4 *array, index_type *pdim)\n+minval_r4 (gfc_array_r4 * const restrict retarray, \n+\tgfc_array_r4 * const restrict array, \n+\tconst index_type * const restrict pdim)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n-  GFC_REAL_4 *base;\n-  GFC_REAL_4 *dest;\n+  const GFC_REAL_4 * restrict base;\n+  GFC_REAL_4 * restrict dest;\n   index_type rank;\n   index_type n;\n   index_type len;\n@@ -121,7 +124,7 @@ minval_r4 (gfc_array_r4 *retarray, gfc_array_r4 *array, index_type *pdim)\n \n   while (base)\n     {\n-      GFC_REAL_4 *src;\n+      const GFC_REAL_4 * restrict src;\n       GFC_REAL_4 result;\n       src = base;\n       {\n@@ -172,22 +175,25 @@ minval_r4 (gfc_array_r4 *retarray, gfc_array_r4 *array, index_type *pdim)\n }\n \n \n-extern void mminval_r4 (gfc_array_r4 *, gfc_array_r4 *, index_type *,\n-\t\t\t\t\t       gfc_array_l4 *);\n+extern void mminval_r4 (gfc_array_r4 * const restrict, \n+\tgfc_array_r4 * const restrict, const index_type * const restrict,\n+\tgfc_array_l4 * const restrict);\n export_proto(mminval_r4);\n \n void\n-mminval_r4 (gfc_array_r4 * retarray, gfc_array_r4 * array,\n-\t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n+mminval_r4 (gfc_array_r4 * const restrict retarray, \n+\tgfc_array_r4 * const restrict array, \n+\tconst index_type * const restrict pdim, \n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n-  GFC_REAL_4 *dest;\n-  GFC_REAL_4 *base;\n-  GFC_LOGICAL_4 *mbase;\n+  GFC_REAL_4 * restrict dest;\n+  const GFC_REAL_4 * restrict base;\n+  const GFC_LOGICAL_4 * restrict mbase;\n   int rank;\n   int dim;\n   index_type n;\n@@ -278,8 +284,8 @@ mminval_r4 (gfc_array_r4 * retarray, gfc_array_r4 * array,\n \n   while (base)\n     {\n-      GFC_REAL_4 *src;\n-      GFC_LOGICAL_4 *msrc;\n+      const GFC_REAL_4 * restrict src;\n+      const GFC_LOGICAL_4 * restrict msrc;\n       GFC_REAL_4 result;\n       src = base;\n       msrc = mbase;"}, {"sha": "6b83f9b05d3f852ad7e29be92b8e979ebdd1c8e3", "filename": "libgfortran/generated/minval_r8.c", "status": "modified", "additions": 20, "deletions": 14, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fminval_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fminval_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminval_r8.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -38,18 +38,21 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_REAL_8) && defined (HAVE_GFC_REAL_8)\n \n \n-extern void minval_r8 (gfc_array_r8 *, gfc_array_r8 *, index_type *);\n+extern void minval_r8 (gfc_array_r8 * const restrict, \n+\tgfc_array_r8 * const restrict, const index_type * const restrict);\n export_proto(minval_r8);\n \n void\n-minval_r8 (gfc_array_r8 *retarray, gfc_array_r8 *array, index_type *pdim)\n+minval_r8 (gfc_array_r8 * const restrict retarray, \n+\tgfc_array_r8 * const restrict array, \n+\tconst index_type * const restrict pdim)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n-  GFC_REAL_8 *base;\n-  GFC_REAL_8 *dest;\n+  const GFC_REAL_8 * restrict base;\n+  GFC_REAL_8 * restrict dest;\n   index_type rank;\n   index_type n;\n   index_type len;\n@@ -121,7 +124,7 @@ minval_r8 (gfc_array_r8 *retarray, gfc_array_r8 *array, index_type *pdim)\n \n   while (base)\n     {\n-      GFC_REAL_8 *src;\n+      const GFC_REAL_8 * restrict src;\n       GFC_REAL_8 result;\n       src = base;\n       {\n@@ -172,22 +175,25 @@ minval_r8 (gfc_array_r8 *retarray, gfc_array_r8 *array, index_type *pdim)\n }\n \n \n-extern void mminval_r8 (gfc_array_r8 *, gfc_array_r8 *, index_type *,\n-\t\t\t\t\t       gfc_array_l4 *);\n+extern void mminval_r8 (gfc_array_r8 * const restrict, \n+\tgfc_array_r8 * const restrict, const index_type * const restrict,\n+\tgfc_array_l4 * const restrict);\n export_proto(mminval_r8);\n \n void\n-mminval_r8 (gfc_array_r8 * retarray, gfc_array_r8 * array,\n-\t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n+mminval_r8 (gfc_array_r8 * const restrict retarray, \n+\tgfc_array_r8 * const restrict array, \n+\tconst index_type * const restrict pdim, \n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n-  GFC_REAL_8 *dest;\n-  GFC_REAL_8 *base;\n-  GFC_LOGICAL_4 *mbase;\n+  GFC_REAL_8 * restrict dest;\n+  const GFC_REAL_8 * restrict base;\n+  const GFC_LOGICAL_4 * restrict mbase;\n   int rank;\n   int dim;\n   index_type n;\n@@ -278,8 +284,8 @@ mminval_r8 (gfc_array_r8 * retarray, gfc_array_r8 * array,\n \n   while (base)\n     {\n-      GFC_REAL_8 *src;\n-      GFC_LOGICAL_4 *msrc;\n+      const GFC_REAL_8 * restrict src;\n+      const GFC_LOGICAL_4 * restrict msrc;\n       GFC_REAL_8 result;\n       src = base;\n       msrc = mbase;"}, {"sha": "bc1e9f0aef266907a0aa49c793032bd08720684a", "filename": "libgfortran/generated/product_c10.c", "status": "modified", "additions": 20, "deletions": 14, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fproduct_c10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fproduct_c10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fproduct_c10.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -37,18 +37,21 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_COMPLEX_10) && defined (HAVE_GFC_COMPLEX_10)\n \n \n-extern void product_c10 (gfc_array_c10 *, gfc_array_c10 *, index_type *);\n+extern void product_c10 (gfc_array_c10 * const restrict, \n+\tgfc_array_c10 * const restrict, const index_type * const restrict);\n export_proto(product_c10);\n \n void\n-product_c10 (gfc_array_c10 *retarray, gfc_array_c10 *array, index_type *pdim)\n+product_c10 (gfc_array_c10 * const restrict retarray, \n+\tgfc_array_c10 * const restrict array, \n+\tconst index_type * const restrict pdim)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n-  GFC_COMPLEX_10 *base;\n-  GFC_COMPLEX_10 *dest;\n+  const GFC_COMPLEX_10 * restrict base;\n+  GFC_COMPLEX_10 * restrict dest;\n   index_type rank;\n   index_type n;\n   index_type len;\n@@ -120,7 +123,7 @@ product_c10 (gfc_array_c10 *retarray, gfc_array_c10 *array, index_type *pdim)\n \n   while (base)\n     {\n-      GFC_COMPLEX_10 *src;\n+      const GFC_COMPLEX_10 * restrict src;\n       GFC_COMPLEX_10 result;\n       src = base;\n       {\n@@ -170,22 +173,25 @@ product_c10 (gfc_array_c10 *retarray, gfc_array_c10 *array, index_type *pdim)\n }\n \n \n-extern void mproduct_c10 (gfc_array_c10 *, gfc_array_c10 *, index_type *,\n-\t\t\t\t\t       gfc_array_l4 *);\n+extern void mproduct_c10 (gfc_array_c10 * const restrict, \n+\tgfc_array_c10 * const restrict, const index_type * const restrict,\n+\tgfc_array_l4 * const restrict);\n export_proto(mproduct_c10);\n \n void\n-mproduct_c10 (gfc_array_c10 * retarray, gfc_array_c10 * array,\n-\t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n+mproduct_c10 (gfc_array_c10 * const restrict retarray, \n+\tgfc_array_c10 * const restrict array, \n+\tconst index_type * const restrict pdim, \n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n-  GFC_COMPLEX_10 *dest;\n-  GFC_COMPLEX_10 *base;\n-  GFC_LOGICAL_4 *mbase;\n+  GFC_COMPLEX_10 * restrict dest;\n+  const GFC_COMPLEX_10 * restrict base;\n+  const GFC_LOGICAL_4 * restrict mbase;\n   int rank;\n   int dim;\n   index_type n;\n@@ -276,8 +282,8 @@ mproduct_c10 (gfc_array_c10 * retarray, gfc_array_c10 * array,\n \n   while (base)\n     {\n-      GFC_COMPLEX_10 *src;\n-      GFC_LOGICAL_4 *msrc;\n+      const GFC_COMPLEX_10 * restrict src;\n+      const GFC_LOGICAL_4 * restrict msrc;\n       GFC_COMPLEX_10 result;\n       src = base;\n       msrc = mbase;"}, {"sha": "c5ac52fb8346698c7ad2769bae6b7804e57991e3", "filename": "libgfortran/generated/product_c16.c", "status": "modified", "additions": 20, "deletions": 14, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fproduct_c16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fproduct_c16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fproduct_c16.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -37,18 +37,21 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_COMPLEX_16) && defined (HAVE_GFC_COMPLEX_16)\n \n \n-extern void product_c16 (gfc_array_c16 *, gfc_array_c16 *, index_type *);\n+extern void product_c16 (gfc_array_c16 * const restrict, \n+\tgfc_array_c16 * const restrict, const index_type * const restrict);\n export_proto(product_c16);\n \n void\n-product_c16 (gfc_array_c16 *retarray, gfc_array_c16 *array, index_type *pdim)\n+product_c16 (gfc_array_c16 * const restrict retarray, \n+\tgfc_array_c16 * const restrict array, \n+\tconst index_type * const restrict pdim)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n-  GFC_COMPLEX_16 *base;\n-  GFC_COMPLEX_16 *dest;\n+  const GFC_COMPLEX_16 * restrict base;\n+  GFC_COMPLEX_16 * restrict dest;\n   index_type rank;\n   index_type n;\n   index_type len;\n@@ -120,7 +123,7 @@ product_c16 (gfc_array_c16 *retarray, gfc_array_c16 *array, index_type *pdim)\n \n   while (base)\n     {\n-      GFC_COMPLEX_16 *src;\n+      const GFC_COMPLEX_16 * restrict src;\n       GFC_COMPLEX_16 result;\n       src = base;\n       {\n@@ -170,22 +173,25 @@ product_c16 (gfc_array_c16 *retarray, gfc_array_c16 *array, index_type *pdim)\n }\n \n \n-extern void mproduct_c16 (gfc_array_c16 *, gfc_array_c16 *, index_type *,\n-\t\t\t\t\t       gfc_array_l4 *);\n+extern void mproduct_c16 (gfc_array_c16 * const restrict, \n+\tgfc_array_c16 * const restrict, const index_type * const restrict,\n+\tgfc_array_l4 * const restrict);\n export_proto(mproduct_c16);\n \n void\n-mproduct_c16 (gfc_array_c16 * retarray, gfc_array_c16 * array,\n-\t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n+mproduct_c16 (gfc_array_c16 * const restrict retarray, \n+\tgfc_array_c16 * const restrict array, \n+\tconst index_type * const restrict pdim, \n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n-  GFC_COMPLEX_16 *dest;\n-  GFC_COMPLEX_16 *base;\n-  GFC_LOGICAL_4 *mbase;\n+  GFC_COMPLEX_16 * restrict dest;\n+  const GFC_COMPLEX_16 * restrict base;\n+  const GFC_LOGICAL_4 * restrict mbase;\n   int rank;\n   int dim;\n   index_type n;\n@@ -276,8 +282,8 @@ mproduct_c16 (gfc_array_c16 * retarray, gfc_array_c16 * array,\n \n   while (base)\n     {\n-      GFC_COMPLEX_16 *src;\n-      GFC_LOGICAL_4 *msrc;\n+      const GFC_COMPLEX_16 * restrict src;\n+      const GFC_LOGICAL_4 * restrict msrc;\n       GFC_COMPLEX_16 result;\n       src = base;\n       msrc = mbase;"}, {"sha": "c8e932bdde235274d9f911ff151d0e1fdd04a88d", "filename": "libgfortran/generated/product_c4.c", "status": "modified", "additions": 20, "deletions": 14, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fproduct_c4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fproduct_c4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fproduct_c4.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -37,18 +37,21 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_COMPLEX_4) && defined (HAVE_GFC_COMPLEX_4)\n \n \n-extern void product_c4 (gfc_array_c4 *, gfc_array_c4 *, index_type *);\n+extern void product_c4 (gfc_array_c4 * const restrict, \n+\tgfc_array_c4 * const restrict, const index_type * const restrict);\n export_proto(product_c4);\n \n void\n-product_c4 (gfc_array_c4 *retarray, gfc_array_c4 *array, index_type *pdim)\n+product_c4 (gfc_array_c4 * const restrict retarray, \n+\tgfc_array_c4 * const restrict array, \n+\tconst index_type * const restrict pdim)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n-  GFC_COMPLEX_4 *base;\n-  GFC_COMPLEX_4 *dest;\n+  const GFC_COMPLEX_4 * restrict base;\n+  GFC_COMPLEX_4 * restrict dest;\n   index_type rank;\n   index_type n;\n   index_type len;\n@@ -120,7 +123,7 @@ product_c4 (gfc_array_c4 *retarray, gfc_array_c4 *array, index_type *pdim)\n \n   while (base)\n     {\n-      GFC_COMPLEX_4 *src;\n+      const GFC_COMPLEX_4 * restrict src;\n       GFC_COMPLEX_4 result;\n       src = base;\n       {\n@@ -170,22 +173,25 @@ product_c4 (gfc_array_c4 *retarray, gfc_array_c4 *array, index_type *pdim)\n }\n \n \n-extern void mproduct_c4 (gfc_array_c4 *, gfc_array_c4 *, index_type *,\n-\t\t\t\t\t       gfc_array_l4 *);\n+extern void mproduct_c4 (gfc_array_c4 * const restrict, \n+\tgfc_array_c4 * const restrict, const index_type * const restrict,\n+\tgfc_array_l4 * const restrict);\n export_proto(mproduct_c4);\n \n void\n-mproduct_c4 (gfc_array_c4 * retarray, gfc_array_c4 * array,\n-\t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n+mproduct_c4 (gfc_array_c4 * const restrict retarray, \n+\tgfc_array_c4 * const restrict array, \n+\tconst index_type * const restrict pdim, \n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n-  GFC_COMPLEX_4 *dest;\n-  GFC_COMPLEX_4 *base;\n-  GFC_LOGICAL_4 *mbase;\n+  GFC_COMPLEX_4 * restrict dest;\n+  const GFC_COMPLEX_4 * restrict base;\n+  const GFC_LOGICAL_4 * restrict mbase;\n   int rank;\n   int dim;\n   index_type n;\n@@ -276,8 +282,8 @@ mproduct_c4 (gfc_array_c4 * retarray, gfc_array_c4 * array,\n \n   while (base)\n     {\n-      GFC_COMPLEX_4 *src;\n-      GFC_LOGICAL_4 *msrc;\n+      const GFC_COMPLEX_4 * restrict src;\n+      const GFC_LOGICAL_4 * restrict msrc;\n       GFC_COMPLEX_4 result;\n       src = base;\n       msrc = mbase;"}, {"sha": "56485797edb7519a645c9fe3f43f91f3b9221448", "filename": "libgfortran/generated/product_c8.c", "status": "modified", "additions": 20, "deletions": 14, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fproduct_c8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fproduct_c8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fproduct_c8.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -37,18 +37,21 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_COMPLEX_8) && defined (HAVE_GFC_COMPLEX_8)\n \n \n-extern void product_c8 (gfc_array_c8 *, gfc_array_c8 *, index_type *);\n+extern void product_c8 (gfc_array_c8 * const restrict, \n+\tgfc_array_c8 * const restrict, const index_type * const restrict);\n export_proto(product_c8);\n \n void\n-product_c8 (gfc_array_c8 *retarray, gfc_array_c8 *array, index_type *pdim)\n+product_c8 (gfc_array_c8 * const restrict retarray, \n+\tgfc_array_c8 * const restrict array, \n+\tconst index_type * const restrict pdim)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n-  GFC_COMPLEX_8 *base;\n-  GFC_COMPLEX_8 *dest;\n+  const GFC_COMPLEX_8 * restrict base;\n+  GFC_COMPLEX_8 * restrict dest;\n   index_type rank;\n   index_type n;\n   index_type len;\n@@ -120,7 +123,7 @@ product_c8 (gfc_array_c8 *retarray, gfc_array_c8 *array, index_type *pdim)\n \n   while (base)\n     {\n-      GFC_COMPLEX_8 *src;\n+      const GFC_COMPLEX_8 * restrict src;\n       GFC_COMPLEX_8 result;\n       src = base;\n       {\n@@ -170,22 +173,25 @@ product_c8 (gfc_array_c8 *retarray, gfc_array_c8 *array, index_type *pdim)\n }\n \n \n-extern void mproduct_c8 (gfc_array_c8 *, gfc_array_c8 *, index_type *,\n-\t\t\t\t\t       gfc_array_l4 *);\n+extern void mproduct_c8 (gfc_array_c8 * const restrict, \n+\tgfc_array_c8 * const restrict, const index_type * const restrict,\n+\tgfc_array_l4 * const restrict);\n export_proto(mproduct_c8);\n \n void\n-mproduct_c8 (gfc_array_c8 * retarray, gfc_array_c8 * array,\n-\t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n+mproduct_c8 (gfc_array_c8 * const restrict retarray, \n+\tgfc_array_c8 * const restrict array, \n+\tconst index_type * const restrict pdim, \n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n-  GFC_COMPLEX_8 *dest;\n-  GFC_COMPLEX_8 *base;\n-  GFC_LOGICAL_4 *mbase;\n+  GFC_COMPLEX_8 * restrict dest;\n+  const GFC_COMPLEX_8 * restrict base;\n+  const GFC_LOGICAL_4 * restrict mbase;\n   int rank;\n   int dim;\n   index_type n;\n@@ -276,8 +282,8 @@ mproduct_c8 (gfc_array_c8 * retarray, gfc_array_c8 * array,\n \n   while (base)\n     {\n-      GFC_COMPLEX_8 *src;\n-      GFC_LOGICAL_4 *msrc;\n+      const GFC_COMPLEX_8 * restrict src;\n+      const GFC_LOGICAL_4 * restrict msrc;\n       GFC_COMPLEX_8 result;\n       src = base;\n       msrc = mbase;"}, {"sha": "2b2f314f5cc749bd80cdf8768d5d2a062fa56118", "filename": "libgfortran/generated/product_i16.c", "status": "modified", "additions": 20, "deletions": 14, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fproduct_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fproduct_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fproduct_i16.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -37,18 +37,21 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_INTEGER_16) && defined (HAVE_GFC_INTEGER_16)\n \n \n-extern void product_i16 (gfc_array_i16 *, gfc_array_i16 *, index_type *);\n+extern void product_i16 (gfc_array_i16 * const restrict, \n+\tgfc_array_i16 * const restrict, const index_type * const restrict);\n export_proto(product_i16);\n \n void\n-product_i16 (gfc_array_i16 *retarray, gfc_array_i16 *array, index_type *pdim)\n+product_i16 (gfc_array_i16 * const restrict retarray, \n+\tgfc_array_i16 * const restrict array, \n+\tconst index_type * const restrict pdim)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n-  GFC_INTEGER_16 *base;\n-  GFC_INTEGER_16 *dest;\n+  const GFC_INTEGER_16 * restrict base;\n+  GFC_INTEGER_16 * restrict dest;\n   index_type rank;\n   index_type n;\n   index_type len;\n@@ -120,7 +123,7 @@ product_i16 (gfc_array_i16 *retarray, gfc_array_i16 *array, index_type *pdim)\n \n   while (base)\n     {\n-      GFC_INTEGER_16 *src;\n+      const GFC_INTEGER_16 * restrict src;\n       GFC_INTEGER_16 result;\n       src = base;\n       {\n@@ -170,22 +173,25 @@ product_i16 (gfc_array_i16 *retarray, gfc_array_i16 *array, index_type *pdim)\n }\n \n \n-extern void mproduct_i16 (gfc_array_i16 *, gfc_array_i16 *, index_type *,\n-\t\t\t\t\t       gfc_array_l4 *);\n+extern void mproduct_i16 (gfc_array_i16 * const restrict, \n+\tgfc_array_i16 * const restrict, const index_type * const restrict,\n+\tgfc_array_l4 * const restrict);\n export_proto(mproduct_i16);\n \n void\n-mproduct_i16 (gfc_array_i16 * retarray, gfc_array_i16 * array,\n-\t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n+mproduct_i16 (gfc_array_i16 * const restrict retarray, \n+\tgfc_array_i16 * const restrict array, \n+\tconst index_type * const restrict pdim, \n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n-  GFC_INTEGER_16 *dest;\n-  GFC_INTEGER_16 *base;\n-  GFC_LOGICAL_4 *mbase;\n+  GFC_INTEGER_16 * restrict dest;\n+  const GFC_INTEGER_16 * restrict base;\n+  const GFC_LOGICAL_4 * restrict mbase;\n   int rank;\n   int dim;\n   index_type n;\n@@ -276,8 +282,8 @@ mproduct_i16 (gfc_array_i16 * retarray, gfc_array_i16 * array,\n \n   while (base)\n     {\n-      GFC_INTEGER_16 *src;\n-      GFC_LOGICAL_4 *msrc;\n+      const GFC_INTEGER_16 * restrict src;\n+      const GFC_LOGICAL_4 * restrict msrc;\n       GFC_INTEGER_16 result;\n       src = base;\n       msrc = mbase;"}, {"sha": "19a7858e4143dcb7cea156ec3ff65bca5d82f7bc", "filename": "libgfortran/generated/product_i4.c", "status": "modified", "additions": 20, "deletions": 14, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fproduct_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fproduct_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fproduct_i4.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -37,18 +37,21 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_INTEGER_4) && defined (HAVE_GFC_INTEGER_4)\n \n \n-extern void product_i4 (gfc_array_i4 *, gfc_array_i4 *, index_type *);\n+extern void product_i4 (gfc_array_i4 * const restrict, \n+\tgfc_array_i4 * const restrict, const index_type * const restrict);\n export_proto(product_i4);\n \n void\n-product_i4 (gfc_array_i4 *retarray, gfc_array_i4 *array, index_type *pdim)\n+product_i4 (gfc_array_i4 * const restrict retarray, \n+\tgfc_array_i4 * const restrict array, \n+\tconst index_type * const restrict pdim)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n-  GFC_INTEGER_4 *base;\n-  GFC_INTEGER_4 *dest;\n+  const GFC_INTEGER_4 * restrict base;\n+  GFC_INTEGER_4 * restrict dest;\n   index_type rank;\n   index_type n;\n   index_type len;\n@@ -120,7 +123,7 @@ product_i4 (gfc_array_i4 *retarray, gfc_array_i4 *array, index_type *pdim)\n \n   while (base)\n     {\n-      GFC_INTEGER_4 *src;\n+      const GFC_INTEGER_4 * restrict src;\n       GFC_INTEGER_4 result;\n       src = base;\n       {\n@@ -170,22 +173,25 @@ product_i4 (gfc_array_i4 *retarray, gfc_array_i4 *array, index_type *pdim)\n }\n \n \n-extern void mproduct_i4 (gfc_array_i4 *, gfc_array_i4 *, index_type *,\n-\t\t\t\t\t       gfc_array_l4 *);\n+extern void mproduct_i4 (gfc_array_i4 * const restrict, \n+\tgfc_array_i4 * const restrict, const index_type * const restrict,\n+\tgfc_array_l4 * const restrict);\n export_proto(mproduct_i4);\n \n void\n-mproduct_i4 (gfc_array_i4 * retarray, gfc_array_i4 * array,\n-\t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n+mproduct_i4 (gfc_array_i4 * const restrict retarray, \n+\tgfc_array_i4 * const restrict array, \n+\tconst index_type * const restrict pdim, \n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n-  GFC_INTEGER_4 *dest;\n-  GFC_INTEGER_4 *base;\n-  GFC_LOGICAL_4 *mbase;\n+  GFC_INTEGER_4 * restrict dest;\n+  const GFC_INTEGER_4 * restrict base;\n+  const GFC_LOGICAL_4 * restrict mbase;\n   int rank;\n   int dim;\n   index_type n;\n@@ -276,8 +282,8 @@ mproduct_i4 (gfc_array_i4 * retarray, gfc_array_i4 * array,\n \n   while (base)\n     {\n-      GFC_INTEGER_4 *src;\n-      GFC_LOGICAL_4 *msrc;\n+      const GFC_INTEGER_4 * restrict src;\n+      const GFC_LOGICAL_4 * restrict msrc;\n       GFC_INTEGER_4 result;\n       src = base;\n       msrc = mbase;"}, {"sha": "22b513530de635edc1f924cf5db99ab3e6044699", "filename": "libgfortran/generated/product_i8.c", "status": "modified", "additions": 20, "deletions": 14, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fproduct_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fproduct_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fproduct_i8.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -37,18 +37,21 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_INTEGER_8) && defined (HAVE_GFC_INTEGER_8)\n \n \n-extern void product_i8 (gfc_array_i8 *, gfc_array_i8 *, index_type *);\n+extern void product_i8 (gfc_array_i8 * const restrict, \n+\tgfc_array_i8 * const restrict, const index_type * const restrict);\n export_proto(product_i8);\n \n void\n-product_i8 (gfc_array_i8 *retarray, gfc_array_i8 *array, index_type *pdim)\n+product_i8 (gfc_array_i8 * const restrict retarray, \n+\tgfc_array_i8 * const restrict array, \n+\tconst index_type * const restrict pdim)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n-  GFC_INTEGER_8 *base;\n-  GFC_INTEGER_8 *dest;\n+  const GFC_INTEGER_8 * restrict base;\n+  GFC_INTEGER_8 * restrict dest;\n   index_type rank;\n   index_type n;\n   index_type len;\n@@ -120,7 +123,7 @@ product_i8 (gfc_array_i8 *retarray, gfc_array_i8 *array, index_type *pdim)\n \n   while (base)\n     {\n-      GFC_INTEGER_8 *src;\n+      const GFC_INTEGER_8 * restrict src;\n       GFC_INTEGER_8 result;\n       src = base;\n       {\n@@ -170,22 +173,25 @@ product_i8 (gfc_array_i8 *retarray, gfc_array_i8 *array, index_type *pdim)\n }\n \n \n-extern void mproduct_i8 (gfc_array_i8 *, gfc_array_i8 *, index_type *,\n-\t\t\t\t\t       gfc_array_l4 *);\n+extern void mproduct_i8 (gfc_array_i8 * const restrict, \n+\tgfc_array_i8 * const restrict, const index_type * const restrict,\n+\tgfc_array_l4 * const restrict);\n export_proto(mproduct_i8);\n \n void\n-mproduct_i8 (gfc_array_i8 * retarray, gfc_array_i8 * array,\n-\t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n+mproduct_i8 (gfc_array_i8 * const restrict retarray, \n+\tgfc_array_i8 * const restrict array, \n+\tconst index_type * const restrict pdim, \n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n-  GFC_INTEGER_8 *dest;\n-  GFC_INTEGER_8 *base;\n-  GFC_LOGICAL_4 *mbase;\n+  GFC_INTEGER_8 * restrict dest;\n+  const GFC_INTEGER_8 * restrict base;\n+  const GFC_LOGICAL_4 * restrict mbase;\n   int rank;\n   int dim;\n   index_type n;\n@@ -276,8 +282,8 @@ mproduct_i8 (gfc_array_i8 * retarray, gfc_array_i8 * array,\n \n   while (base)\n     {\n-      GFC_INTEGER_8 *src;\n-      GFC_LOGICAL_4 *msrc;\n+      const GFC_INTEGER_8 * restrict src;\n+      const GFC_LOGICAL_4 * restrict msrc;\n       GFC_INTEGER_8 result;\n       src = base;\n       msrc = mbase;"}, {"sha": "9777df66a29ca19783129c2a53b03132d8605062", "filename": "libgfortran/generated/product_r10.c", "status": "modified", "additions": 20, "deletions": 14, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fproduct_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fproduct_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fproduct_r10.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -37,18 +37,21 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_REAL_10) && defined (HAVE_GFC_REAL_10)\n \n \n-extern void product_r10 (gfc_array_r10 *, gfc_array_r10 *, index_type *);\n+extern void product_r10 (gfc_array_r10 * const restrict, \n+\tgfc_array_r10 * const restrict, const index_type * const restrict);\n export_proto(product_r10);\n \n void\n-product_r10 (gfc_array_r10 *retarray, gfc_array_r10 *array, index_type *pdim)\n+product_r10 (gfc_array_r10 * const restrict retarray, \n+\tgfc_array_r10 * const restrict array, \n+\tconst index_type * const restrict pdim)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n-  GFC_REAL_10 *base;\n-  GFC_REAL_10 *dest;\n+  const GFC_REAL_10 * restrict base;\n+  GFC_REAL_10 * restrict dest;\n   index_type rank;\n   index_type n;\n   index_type len;\n@@ -120,7 +123,7 @@ product_r10 (gfc_array_r10 *retarray, gfc_array_r10 *array, index_type *pdim)\n \n   while (base)\n     {\n-      GFC_REAL_10 *src;\n+      const GFC_REAL_10 * restrict src;\n       GFC_REAL_10 result;\n       src = base;\n       {\n@@ -170,22 +173,25 @@ product_r10 (gfc_array_r10 *retarray, gfc_array_r10 *array, index_type *pdim)\n }\n \n \n-extern void mproduct_r10 (gfc_array_r10 *, gfc_array_r10 *, index_type *,\n-\t\t\t\t\t       gfc_array_l4 *);\n+extern void mproduct_r10 (gfc_array_r10 * const restrict, \n+\tgfc_array_r10 * const restrict, const index_type * const restrict,\n+\tgfc_array_l4 * const restrict);\n export_proto(mproduct_r10);\n \n void\n-mproduct_r10 (gfc_array_r10 * retarray, gfc_array_r10 * array,\n-\t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n+mproduct_r10 (gfc_array_r10 * const restrict retarray, \n+\tgfc_array_r10 * const restrict array, \n+\tconst index_type * const restrict pdim, \n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n-  GFC_REAL_10 *dest;\n-  GFC_REAL_10 *base;\n-  GFC_LOGICAL_4 *mbase;\n+  GFC_REAL_10 * restrict dest;\n+  const GFC_REAL_10 * restrict base;\n+  const GFC_LOGICAL_4 * restrict mbase;\n   int rank;\n   int dim;\n   index_type n;\n@@ -276,8 +282,8 @@ mproduct_r10 (gfc_array_r10 * retarray, gfc_array_r10 * array,\n \n   while (base)\n     {\n-      GFC_REAL_10 *src;\n-      GFC_LOGICAL_4 *msrc;\n+      const GFC_REAL_10 * restrict src;\n+      const GFC_LOGICAL_4 * restrict msrc;\n       GFC_REAL_10 result;\n       src = base;\n       msrc = mbase;"}, {"sha": "e9d84eab314e61bb5de8914d86063738a191fbe9", "filename": "libgfortran/generated/product_r16.c", "status": "modified", "additions": 20, "deletions": 14, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fproduct_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fproduct_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fproduct_r16.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -37,18 +37,21 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_REAL_16) && defined (HAVE_GFC_REAL_16)\n \n \n-extern void product_r16 (gfc_array_r16 *, gfc_array_r16 *, index_type *);\n+extern void product_r16 (gfc_array_r16 * const restrict, \n+\tgfc_array_r16 * const restrict, const index_type * const restrict);\n export_proto(product_r16);\n \n void\n-product_r16 (gfc_array_r16 *retarray, gfc_array_r16 *array, index_type *pdim)\n+product_r16 (gfc_array_r16 * const restrict retarray, \n+\tgfc_array_r16 * const restrict array, \n+\tconst index_type * const restrict pdim)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n-  GFC_REAL_16 *base;\n-  GFC_REAL_16 *dest;\n+  const GFC_REAL_16 * restrict base;\n+  GFC_REAL_16 * restrict dest;\n   index_type rank;\n   index_type n;\n   index_type len;\n@@ -120,7 +123,7 @@ product_r16 (gfc_array_r16 *retarray, gfc_array_r16 *array, index_type *pdim)\n \n   while (base)\n     {\n-      GFC_REAL_16 *src;\n+      const GFC_REAL_16 * restrict src;\n       GFC_REAL_16 result;\n       src = base;\n       {\n@@ -170,22 +173,25 @@ product_r16 (gfc_array_r16 *retarray, gfc_array_r16 *array, index_type *pdim)\n }\n \n \n-extern void mproduct_r16 (gfc_array_r16 *, gfc_array_r16 *, index_type *,\n-\t\t\t\t\t       gfc_array_l4 *);\n+extern void mproduct_r16 (gfc_array_r16 * const restrict, \n+\tgfc_array_r16 * const restrict, const index_type * const restrict,\n+\tgfc_array_l4 * const restrict);\n export_proto(mproduct_r16);\n \n void\n-mproduct_r16 (gfc_array_r16 * retarray, gfc_array_r16 * array,\n-\t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n+mproduct_r16 (gfc_array_r16 * const restrict retarray, \n+\tgfc_array_r16 * const restrict array, \n+\tconst index_type * const restrict pdim, \n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n-  GFC_REAL_16 *dest;\n-  GFC_REAL_16 *base;\n-  GFC_LOGICAL_4 *mbase;\n+  GFC_REAL_16 * restrict dest;\n+  const GFC_REAL_16 * restrict base;\n+  const GFC_LOGICAL_4 * restrict mbase;\n   int rank;\n   int dim;\n   index_type n;\n@@ -276,8 +282,8 @@ mproduct_r16 (gfc_array_r16 * retarray, gfc_array_r16 * array,\n \n   while (base)\n     {\n-      GFC_REAL_16 *src;\n-      GFC_LOGICAL_4 *msrc;\n+      const GFC_REAL_16 * restrict src;\n+      const GFC_LOGICAL_4 * restrict msrc;\n       GFC_REAL_16 result;\n       src = base;\n       msrc = mbase;"}, {"sha": "8b421d36539b547651cf96124a1754e8e603c8ba", "filename": "libgfortran/generated/product_r4.c", "status": "modified", "additions": 20, "deletions": 14, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fproduct_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fproduct_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fproduct_r4.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -37,18 +37,21 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_REAL_4) && defined (HAVE_GFC_REAL_4)\n \n \n-extern void product_r4 (gfc_array_r4 *, gfc_array_r4 *, index_type *);\n+extern void product_r4 (gfc_array_r4 * const restrict, \n+\tgfc_array_r4 * const restrict, const index_type * const restrict);\n export_proto(product_r4);\n \n void\n-product_r4 (gfc_array_r4 *retarray, gfc_array_r4 *array, index_type *pdim)\n+product_r4 (gfc_array_r4 * const restrict retarray, \n+\tgfc_array_r4 * const restrict array, \n+\tconst index_type * const restrict pdim)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n-  GFC_REAL_4 *base;\n-  GFC_REAL_4 *dest;\n+  const GFC_REAL_4 * restrict base;\n+  GFC_REAL_4 * restrict dest;\n   index_type rank;\n   index_type n;\n   index_type len;\n@@ -120,7 +123,7 @@ product_r4 (gfc_array_r4 *retarray, gfc_array_r4 *array, index_type *pdim)\n \n   while (base)\n     {\n-      GFC_REAL_4 *src;\n+      const GFC_REAL_4 * restrict src;\n       GFC_REAL_4 result;\n       src = base;\n       {\n@@ -170,22 +173,25 @@ product_r4 (gfc_array_r4 *retarray, gfc_array_r4 *array, index_type *pdim)\n }\n \n \n-extern void mproduct_r4 (gfc_array_r4 *, gfc_array_r4 *, index_type *,\n-\t\t\t\t\t       gfc_array_l4 *);\n+extern void mproduct_r4 (gfc_array_r4 * const restrict, \n+\tgfc_array_r4 * const restrict, const index_type * const restrict,\n+\tgfc_array_l4 * const restrict);\n export_proto(mproduct_r4);\n \n void\n-mproduct_r4 (gfc_array_r4 * retarray, gfc_array_r4 * array,\n-\t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n+mproduct_r4 (gfc_array_r4 * const restrict retarray, \n+\tgfc_array_r4 * const restrict array, \n+\tconst index_type * const restrict pdim, \n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n-  GFC_REAL_4 *dest;\n-  GFC_REAL_4 *base;\n-  GFC_LOGICAL_4 *mbase;\n+  GFC_REAL_4 * restrict dest;\n+  const GFC_REAL_4 * restrict base;\n+  const GFC_LOGICAL_4 * restrict mbase;\n   int rank;\n   int dim;\n   index_type n;\n@@ -276,8 +282,8 @@ mproduct_r4 (gfc_array_r4 * retarray, gfc_array_r4 * array,\n \n   while (base)\n     {\n-      GFC_REAL_4 *src;\n-      GFC_LOGICAL_4 *msrc;\n+      const GFC_REAL_4 * restrict src;\n+      const GFC_LOGICAL_4 * restrict msrc;\n       GFC_REAL_4 result;\n       src = base;\n       msrc = mbase;"}, {"sha": "57094cf6f0ac28069b275c4d21decd6852ba8fb4", "filename": "libgfortran/generated/product_r8.c", "status": "modified", "additions": 20, "deletions": 14, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fproduct_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fproduct_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fproduct_r8.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -37,18 +37,21 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_REAL_8) && defined (HAVE_GFC_REAL_8)\n \n \n-extern void product_r8 (gfc_array_r8 *, gfc_array_r8 *, index_type *);\n+extern void product_r8 (gfc_array_r8 * const restrict, \n+\tgfc_array_r8 * const restrict, const index_type * const restrict);\n export_proto(product_r8);\n \n void\n-product_r8 (gfc_array_r8 *retarray, gfc_array_r8 *array, index_type *pdim)\n+product_r8 (gfc_array_r8 * const restrict retarray, \n+\tgfc_array_r8 * const restrict array, \n+\tconst index_type * const restrict pdim)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n-  GFC_REAL_8 *base;\n-  GFC_REAL_8 *dest;\n+  const GFC_REAL_8 * restrict base;\n+  GFC_REAL_8 * restrict dest;\n   index_type rank;\n   index_type n;\n   index_type len;\n@@ -120,7 +123,7 @@ product_r8 (gfc_array_r8 *retarray, gfc_array_r8 *array, index_type *pdim)\n \n   while (base)\n     {\n-      GFC_REAL_8 *src;\n+      const GFC_REAL_8 * restrict src;\n       GFC_REAL_8 result;\n       src = base;\n       {\n@@ -170,22 +173,25 @@ product_r8 (gfc_array_r8 *retarray, gfc_array_r8 *array, index_type *pdim)\n }\n \n \n-extern void mproduct_r8 (gfc_array_r8 *, gfc_array_r8 *, index_type *,\n-\t\t\t\t\t       gfc_array_l4 *);\n+extern void mproduct_r8 (gfc_array_r8 * const restrict, \n+\tgfc_array_r8 * const restrict, const index_type * const restrict,\n+\tgfc_array_l4 * const restrict);\n export_proto(mproduct_r8);\n \n void\n-mproduct_r8 (gfc_array_r8 * retarray, gfc_array_r8 * array,\n-\t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n+mproduct_r8 (gfc_array_r8 * const restrict retarray, \n+\tgfc_array_r8 * const restrict array, \n+\tconst index_type * const restrict pdim, \n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n-  GFC_REAL_8 *dest;\n-  GFC_REAL_8 *base;\n-  GFC_LOGICAL_4 *mbase;\n+  GFC_REAL_8 * restrict dest;\n+  const GFC_REAL_8 * restrict base;\n+  const GFC_LOGICAL_4 * restrict mbase;\n   int rank;\n   int dim;\n   index_type n;\n@@ -276,8 +282,8 @@ mproduct_r8 (gfc_array_r8 * retarray, gfc_array_r8 * array,\n \n   while (base)\n     {\n-      GFC_REAL_8 *src;\n-      GFC_LOGICAL_4 *msrc;\n+      const GFC_REAL_8 * restrict src;\n+      const GFC_LOGICAL_4 * restrict msrc;\n       GFC_REAL_8 result;\n       src = base;\n       msrc = mbase;"}, {"sha": "21789f87fc68d34ebbd57f1279cd5c1533f0f13c", "filename": "libgfortran/generated/reshape_c10.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Freshape_c10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Freshape_c10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Freshape_c10.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -40,13 +40,19 @@ typedef GFC_ARRAY_DESCRIPTOR(1, index_type) shape_type;\n /* The shape parameter is ignored. We can currently deduce the shape from the\n    return array.  */\n \n-extern void reshape_c10 (gfc_array_c10 *, gfc_array_c10 *, shape_type *,\n-\t\t\t\t    gfc_array_c10 *, shape_type *);\n+extern void reshape_c10 (gfc_array_c10 * const restrict, \n+\tgfc_array_c10 * const restrict, \n+\tshape_type * const restrict,\n+\tgfc_array_c10 * const restrict, \n+\tshape_type * const restrict);\n export_proto(reshape_c10);\n \n void\n-reshape_c10 (gfc_array_c10 * ret, gfc_array_c10 * source, shape_type * shape,\n-                      gfc_array_c10 * pad, shape_type * order)\n+reshape_c10 (gfc_array_c10 * const restrict ret, \n+\tgfc_array_c10 * const restrict source, \n+\tshape_type * const restrict shape,\n+\tgfc_array_c10 * const restrict pad, \n+\tshape_type * const restrict order)\n {\n   /* r.* indicates the return array.  */\n   index_type rcount[GFC_MAX_DIMENSIONS];"}, {"sha": "f3c4a901141b3982052eb61bf86a948ea6668771", "filename": "libgfortran/generated/reshape_c16.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Freshape_c16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Freshape_c16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Freshape_c16.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -40,13 +40,19 @@ typedef GFC_ARRAY_DESCRIPTOR(1, index_type) shape_type;\n /* The shape parameter is ignored. We can currently deduce the shape from the\n    return array.  */\n \n-extern void reshape_c16 (gfc_array_c16 *, gfc_array_c16 *, shape_type *,\n-\t\t\t\t    gfc_array_c16 *, shape_type *);\n+extern void reshape_c16 (gfc_array_c16 * const restrict, \n+\tgfc_array_c16 * const restrict, \n+\tshape_type * const restrict,\n+\tgfc_array_c16 * const restrict, \n+\tshape_type * const restrict);\n export_proto(reshape_c16);\n \n void\n-reshape_c16 (gfc_array_c16 * ret, gfc_array_c16 * source, shape_type * shape,\n-                      gfc_array_c16 * pad, shape_type * order)\n+reshape_c16 (gfc_array_c16 * const restrict ret, \n+\tgfc_array_c16 * const restrict source, \n+\tshape_type * const restrict shape,\n+\tgfc_array_c16 * const restrict pad, \n+\tshape_type * const restrict order)\n {\n   /* r.* indicates the return array.  */\n   index_type rcount[GFC_MAX_DIMENSIONS];"}, {"sha": "384f36f2a5d015b91db95be3482340a43edb0581", "filename": "libgfortran/generated/reshape_c4.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Freshape_c4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Freshape_c4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Freshape_c4.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -40,13 +40,19 @@ typedef GFC_ARRAY_DESCRIPTOR(1, index_type) shape_type;\n /* The shape parameter is ignored. We can currently deduce the shape from the\n    return array.  */\n \n-extern void reshape_c4 (gfc_array_c4 *, gfc_array_c4 *, shape_type *,\n-\t\t\t\t    gfc_array_c4 *, shape_type *);\n+extern void reshape_c4 (gfc_array_c4 * const restrict, \n+\tgfc_array_c4 * const restrict, \n+\tshape_type * const restrict,\n+\tgfc_array_c4 * const restrict, \n+\tshape_type * const restrict);\n export_proto(reshape_c4);\n \n void\n-reshape_c4 (gfc_array_c4 * ret, gfc_array_c4 * source, shape_type * shape,\n-                      gfc_array_c4 * pad, shape_type * order)\n+reshape_c4 (gfc_array_c4 * const restrict ret, \n+\tgfc_array_c4 * const restrict source, \n+\tshape_type * const restrict shape,\n+\tgfc_array_c4 * const restrict pad, \n+\tshape_type * const restrict order)\n {\n   /* r.* indicates the return array.  */\n   index_type rcount[GFC_MAX_DIMENSIONS];"}, {"sha": "e2c7c399b431cb1b5e19c8a5b5f5b9b0b809c43e", "filename": "libgfortran/generated/reshape_c8.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Freshape_c8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Freshape_c8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Freshape_c8.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -40,13 +40,19 @@ typedef GFC_ARRAY_DESCRIPTOR(1, index_type) shape_type;\n /* The shape parameter is ignored. We can currently deduce the shape from the\n    return array.  */\n \n-extern void reshape_c8 (gfc_array_c8 *, gfc_array_c8 *, shape_type *,\n-\t\t\t\t    gfc_array_c8 *, shape_type *);\n+extern void reshape_c8 (gfc_array_c8 * const restrict, \n+\tgfc_array_c8 * const restrict, \n+\tshape_type * const restrict,\n+\tgfc_array_c8 * const restrict, \n+\tshape_type * const restrict);\n export_proto(reshape_c8);\n \n void\n-reshape_c8 (gfc_array_c8 * ret, gfc_array_c8 * source, shape_type * shape,\n-                      gfc_array_c8 * pad, shape_type * order)\n+reshape_c8 (gfc_array_c8 * const restrict ret, \n+\tgfc_array_c8 * const restrict source, \n+\tshape_type * const restrict shape,\n+\tgfc_array_c8 * const restrict pad, \n+\tshape_type * const restrict order)\n {\n   /* r.* indicates the return array.  */\n   index_type rcount[GFC_MAX_DIMENSIONS];"}, {"sha": "a8fece516fdcf1bd5ce9db43da7c196b657577f8", "filename": "libgfortran/generated/reshape_i16.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Freshape_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Freshape_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Freshape_i16.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -40,13 +40,19 @@ typedef GFC_ARRAY_DESCRIPTOR(1, index_type) shape_type;\n /* The shape parameter is ignored. We can currently deduce the shape from the\n    return array.  */\n \n-extern void reshape_16 (gfc_array_i16 *, gfc_array_i16 *, shape_type *,\n-\t\t\t\t    gfc_array_i16 *, shape_type *);\n+extern void reshape_16 (gfc_array_i16 * const restrict, \n+\tgfc_array_i16 * const restrict, \n+\tshape_type * const restrict,\n+\tgfc_array_i16 * const restrict, \n+\tshape_type * const restrict);\n export_proto(reshape_16);\n \n void\n-reshape_16 (gfc_array_i16 * ret, gfc_array_i16 * source, shape_type * shape,\n-                      gfc_array_i16 * pad, shape_type * order)\n+reshape_16 (gfc_array_i16 * const restrict ret, \n+\tgfc_array_i16 * const restrict source, \n+\tshape_type * const restrict shape,\n+\tgfc_array_i16 * const restrict pad, \n+\tshape_type * const restrict order)\n {\n   /* r.* indicates the return array.  */\n   index_type rcount[GFC_MAX_DIMENSIONS];"}, {"sha": "2c8ee4b93a8a148d5708491a03e494c3ad7d07e1", "filename": "libgfortran/generated/reshape_i4.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Freshape_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Freshape_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Freshape_i4.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -40,13 +40,19 @@ typedef GFC_ARRAY_DESCRIPTOR(1, index_type) shape_type;\n /* The shape parameter is ignored. We can currently deduce the shape from the\n    return array.  */\n \n-extern void reshape_4 (gfc_array_i4 *, gfc_array_i4 *, shape_type *,\n-\t\t\t\t    gfc_array_i4 *, shape_type *);\n+extern void reshape_4 (gfc_array_i4 * const restrict, \n+\tgfc_array_i4 * const restrict, \n+\tshape_type * const restrict,\n+\tgfc_array_i4 * const restrict, \n+\tshape_type * const restrict);\n export_proto(reshape_4);\n \n void\n-reshape_4 (gfc_array_i4 * ret, gfc_array_i4 * source, shape_type * shape,\n-                      gfc_array_i4 * pad, shape_type * order)\n+reshape_4 (gfc_array_i4 * const restrict ret, \n+\tgfc_array_i4 * const restrict source, \n+\tshape_type * const restrict shape,\n+\tgfc_array_i4 * const restrict pad, \n+\tshape_type * const restrict order)\n {\n   /* r.* indicates the return array.  */\n   index_type rcount[GFC_MAX_DIMENSIONS];"}, {"sha": "6ffb681700bb71136faa8f5adb315388f8c7a0e5", "filename": "libgfortran/generated/reshape_i8.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Freshape_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Freshape_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Freshape_i8.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -40,13 +40,19 @@ typedef GFC_ARRAY_DESCRIPTOR(1, index_type) shape_type;\n /* The shape parameter is ignored. We can currently deduce the shape from the\n    return array.  */\n \n-extern void reshape_8 (gfc_array_i8 *, gfc_array_i8 *, shape_type *,\n-\t\t\t\t    gfc_array_i8 *, shape_type *);\n+extern void reshape_8 (gfc_array_i8 * const restrict, \n+\tgfc_array_i8 * const restrict, \n+\tshape_type * const restrict,\n+\tgfc_array_i8 * const restrict, \n+\tshape_type * const restrict);\n export_proto(reshape_8);\n \n void\n-reshape_8 (gfc_array_i8 * ret, gfc_array_i8 * source, shape_type * shape,\n-                      gfc_array_i8 * pad, shape_type * order)\n+reshape_8 (gfc_array_i8 * const restrict ret, \n+\tgfc_array_i8 * const restrict source, \n+\tshape_type * const restrict shape,\n+\tgfc_array_i8 * const restrict pad, \n+\tshape_type * const restrict order)\n {\n   /* r.* indicates the return array.  */\n   index_type rcount[GFC_MAX_DIMENSIONS];"}, {"sha": "30209d5de9ad68eac7f69a0754cdf764b043167a", "filename": "libgfortran/generated/shape_i16.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fshape_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fshape_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fshape_i16.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -35,11 +35,13 @@ Boston, MA 02110-1301, USA.  */\n \n #if defined (HAVE_GFC_INTEGER_16)\n \n-extern void shape_16 (gfc_array_i16 * ret, const gfc_array_i16 * array);\n+extern void shape_16 (gfc_array_i16 * const restrict ret, \n+\tconst gfc_array_i16 * const restrict array);\n export_proto(shape_16);\n \n void\n-shape_16 (gfc_array_i16 * ret, const gfc_array_i16 * array)\n+shape_16 (gfc_array_i16 * const restrict ret, \n+\tconst gfc_array_i16 * const restrict array)\n {\n   int n;\n   index_type stride;"}, {"sha": "d4b323a3cb6782bb58909ffbc338680fadcaeb81", "filename": "libgfortran/generated/shape_i4.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fshape_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fshape_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fshape_i4.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -35,11 +35,13 @@ Boston, MA 02110-1301, USA.  */\n \n #if defined (HAVE_GFC_INTEGER_4)\n \n-extern void shape_4 (gfc_array_i4 * ret, const gfc_array_i4 * array);\n+extern void shape_4 (gfc_array_i4 * const restrict ret, \n+\tconst gfc_array_i4 * const restrict array);\n export_proto(shape_4);\n \n void\n-shape_4 (gfc_array_i4 * ret, const gfc_array_i4 * array)\n+shape_4 (gfc_array_i4 * const restrict ret, \n+\tconst gfc_array_i4 * const restrict array)\n {\n   int n;\n   index_type stride;"}, {"sha": "acf925fd8b9959bf5f70d9e24746d256e92461a7", "filename": "libgfortran/generated/shape_i8.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fshape_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fshape_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fshape_i8.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -35,11 +35,13 @@ Boston, MA 02110-1301, USA.  */\n \n #if defined (HAVE_GFC_INTEGER_8)\n \n-extern void shape_8 (gfc_array_i8 * ret, const gfc_array_i8 * array);\n+extern void shape_8 (gfc_array_i8 * const restrict ret, \n+\tconst gfc_array_i8 * const restrict array);\n export_proto(shape_8);\n \n void\n-shape_8 (gfc_array_i8 * ret, const gfc_array_i8 * array)\n+shape_8 (gfc_array_i8 * const restrict ret, \n+\tconst gfc_array_i8 * const restrict array)\n {\n   int n;\n   index_type stride;"}, {"sha": "393f04ece4c5e8341679dfcccdb6a5e2cc8e7648", "filename": "libgfortran/generated/sum_c10.c", "status": "modified", "additions": 20, "deletions": 14, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fsum_c10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fsum_c10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fsum_c10.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -37,18 +37,21 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_COMPLEX_10) && defined (HAVE_GFC_COMPLEX_10)\n \n \n-extern void sum_c10 (gfc_array_c10 *, gfc_array_c10 *, index_type *);\n+extern void sum_c10 (gfc_array_c10 * const restrict, \n+\tgfc_array_c10 * const restrict, const index_type * const restrict);\n export_proto(sum_c10);\n \n void\n-sum_c10 (gfc_array_c10 *retarray, gfc_array_c10 *array, index_type *pdim)\n+sum_c10 (gfc_array_c10 * const restrict retarray, \n+\tgfc_array_c10 * const restrict array, \n+\tconst index_type * const restrict pdim)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n-  GFC_COMPLEX_10 *base;\n-  GFC_COMPLEX_10 *dest;\n+  const GFC_COMPLEX_10 * restrict base;\n+  GFC_COMPLEX_10 * restrict dest;\n   index_type rank;\n   index_type n;\n   index_type len;\n@@ -120,7 +123,7 @@ sum_c10 (gfc_array_c10 *retarray, gfc_array_c10 *array, index_type *pdim)\n \n   while (base)\n     {\n-      GFC_COMPLEX_10 *src;\n+      const GFC_COMPLEX_10 * restrict src;\n       GFC_COMPLEX_10 result;\n       src = base;\n       {\n@@ -170,22 +173,25 @@ sum_c10 (gfc_array_c10 *retarray, gfc_array_c10 *array, index_type *pdim)\n }\n \n \n-extern void msum_c10 (gfc_array_c10 *, gfc_array_c10 *, index_type *,\n-\t\t\t\t\t       gfc_array_l4 *);\n+extern void msum_c10 (gfc_array_c10 * const restrict, \n+\tgfc_array_c10 * const restrict, const index_type * const restrict,\n+\tgfc_array_l4 * const restrict);\n export_proto(msum_c10);\n \n void\n-msum_c10 (gfc_array_c10 * retarray, gfc_array_c10 * array,\n-\t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n+msum_c10 (gfc_array_c10 * const restrict retarray, \n+\tgfc_array_c10 * const restrict array, \n+\tconst index_type * const restrict pdim, \n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n-  GFC_COMPLEX_10 *dest;\n-  GFC_COMPLEX_10 *base;\n-  GFC_LOGICAL_4 *mbase;\n+  GFC_COMPLEX_10 * restrict dest;\n+  const GFC_COMPLEX_10 * restrict base;\n+  const GFC_LOGICAL_4 * restrict mbase;\n   int rank;\n   int dim;\n   index_type n;\n@@ -276,8 +282,8 @@ msum_c10 (gfc_array_c10 * retarray, gfc_array_c10 * array,\n \n   while (base)\n     {\n-      GFC_COMPLEX_10 *src;\n-      GFC_LOGICAL_4 *msrc;\n+      const GFC_COMPLEX_10 * restrict src;\n+      const GFC_LOGICAL_4 * restrict msrc;\n       GFC_COMPLEX_10 result;\n       src = base;\n       msrc = mbase;"}, {"sha": "9e5c8edb138b3dad9ac2424f71664f1c7ba539a4", "filename": "libgfortran/generated/sum_c16.c", "status": "modified", "additions": 20, "deletions": 14, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fsum_c16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fsum_c16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fsum_c16.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -37,18 +37,21 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_COMPLEX_16) && defined (HAVE_GFC_COMPLEX_16)\n \n \n-extern void sum_c16 (gfc_array_c16 *, gfc_array_c16 *, index_type *);\n+extern void sum_c16 (gfc_array_c16 * const restrict, \n+\tgfc_array_c16 * const restrict, const index_type * const restrict);\n export_proto(sum_c16);\n \n void\n-sum_c16 (gfc_array_c16 *retarray, gfc_array_c16 *array, index_type *pdim)\n+sum_c16 (gfc_array_c16 * const restrict retarray, \n+\tgfc_array_c16 * const restrict array, \n+\tconst index_type * const restrict pdim)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n-  GFC_COMPLEX_16 *base;\n-  GFC_COMPLEX_16 *dest;\n+  const GFC_COMPLEX_16 * restrict base;\n+  GFC_COMPLEX_16 * restrict dest;\n   index_type rank;\n   index_type n;\n   index_type len;\n@@ -120,7 +123,7 @@ sum_c16 (gfc_array_c16 *retarray, gfc_array_c16 *array, index_type *pdim)\n \n   while (base)\n     {\n-      GFC_COMPLEX_16 *src;\n+      const GFC_COMPLEX_16 * restrict src;\n       GFC_COMPLEX_16 result;\n       src = base;\n       {\n@@ -170,22 +173,25 @@ sum_c16 (gfc_array_c16 *retarray, gfc_array_c16 *array, index_type *pdim)\n }\n \n \n-extern void msum_c16 (gfc_array_c16 *, gfc_array_c16 *, index_type *,\n-\t\t\t\t\t       gfc_array_l4 *);\n+extern void msum_c16 (gfc_array_c16 * const restrict, \n+\tgfc_array_c16 * const restrict, const index_type * const restrict,\n+\tgfc_array_l4 * const restrict);\n export_proto(msum_c16);\n \n void\n-msum_c16 (gfc_array_c16 * retarray, gfc_array_c16 * array,\n-\t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n+msum_c16 (gfc_array_c16 * const restrict retarray, \n+\tgfc_array_c16 * const restrict array, \n+\tconst index_type * const restrict pdim, \n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n-  GFC_COMPLEX_16 *dest;\n-  GFC_COMPLEX_16 *base;\n-  GFC_LOGICAL_4 *mbase;\n+  GFC_COMPLEX_16 * restrict dest;\n+  const GFC_COMPLEX_16 * restrict base;\n+  const GFC_LOGICAL_4 * restrict mbase;\n   int rank;\n   int dim;\n   index_type n;\n@@ -276,8 +282,8 @@ msum_c16 (gfc_array_c16 * retarray, gfc_array_c16 * array,\n \n   while (base)\n     {\n-      GFC_COMPLEX_16 *src;\n-      GFC_LOGICAL_4 *msrc;\n+      const GFC_COMPLEX_16 * restrict src;\n+      const GFC_LOGICAL_4 * restrict msrc;\n       GFC_COMPLEX_16 result;\n       src = base;\n       msrc = mbase;"}, {"sha": "72d28f8afa0bae9ab762d58cd38a22b95dd2555e", "filename": "libgfortran/generated/sum_c4.c", "status": "modified", "additions": 20, "deletions": 14, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fsum_c4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fsum_c4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fsum_c4.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -37,18 +37,21 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_COMPLEX_4) && defined (HAVE_GFC_COMPLEX_4)\n \n \n-extern void sum_c4 (gfc_array_c4 *, gfc_array_c4 *, index_type *);\n+extern void sum_c4 (gfc_array_c4 * const restrict, \n+\tgfc_array_c4 * const restrict, const index_type * const restrict);\n export_proto(sum_c4);\n \n void\n-sum_c4 (gfc_array_c4 *retarray, gfc_array_c4 *array, index_type *pdim)\n+sum_c4 (gfc_array_c4 * const restrict retarray, \n+\tgfc_array_c4 * const restrict array, \n+\tconst index_type * const restrict pdim)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n-  GFC_COMPLEX_4 *base;\n-  GFC_COMPLEX_4 *dest;\n+  const GFC_COMPLEX_4 * restrict base;\n+  GFC_COMPLEX_4 * restrict dest;\n   index_type rank;\n   index_type n;\n   index_type len;\n@@ -120,7 +123,7 @@ sum_c4 (gfc_array_c4 *retarray, gfc_array_c4 *array, index_type *pdim)\n \n   while (base)\n     {\n-      GFC_COMPLEX_4 *src;\n+      const GFC_COMPLEX_4 * restrict src;\n       GFC_COMPLEX_4 result;\n       src = base;\n       {\n@@ -170,22 +173,25 @@ sum_c4 (gfc_array_c4 *retarray, gfc_array_c4 *array, index_type *pdim)\n }\n \n \n-extern void msum_c4 (gfc_array_c4 *, gfc_array_c4 *, index_type *,\n-\t\t\t\t\t       gfc_array_l4 *);\n+extern void msum_c4 (gfc_array_c4 * const restrict, \n+\tgfc_array_c4 * const restrict, const index_type * const restrict,\n+\tgfc_array_l4 * const restrict);\n export_proto(msum_c4);\n \n void\n-msum_c4 (gfc_array_c4 * retarray, gfc_array_c4 * array,\n-\t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n+msum_c4 (gfc_array_c4 * const restrict retarray, \n+\tgfc_array_c4 * const restrict array, \n+\tconst index_type * const restrict pdim, \n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n-  GFC_COMPLEX_4 *dest;\n-  GFC_COMPLEX_4 *base;\n-  GFC_LOGICAL_4 *mbase;\n+  GFC_COMPLEX_4 * restrict dest;\n+  const GFC_COMPLEX_4 * restrict base;\n+  const GFC_LOGICAL_4 * restrict mbase;\n   int rank;\n   int dim;\n   index_type n;\n@@ -276,8 +282,8 @@ msum_c4 (gfc_array_c4 * retarray, gfc_array_c4 * array,\n \n   while (base)\n     {\n-      GFC_COMPLEX_4 *src;\n-      GFC_LOGICAL_4 *msrc;\n+      const GFC_COMPLEX_4 * restrict src;\n+      const GFC_LOGICAL_4 * restrict msrc;\n       GFC_COMPLEX_4 result;\n       src = base;\n       msrc = mbase;"}, {"sha": "485b46d75fb6e2c8a5bd2982c126cbe461e9fbff", "filename": "libgfortran/generated/sum_c8.c", "status": "modified", "additions": 20, "deletions": 14, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fsum_c8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fsum_c8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fsum_c8.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -37,18 +37,21 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_COMPLEX_8) && defined (HAVE_GFC_COMPLEX_8)\n \n \n-extern void sum_c8 (gfc_array_c8 *, gfc_array_c8 *, index_type *);\n+extern void sum_c8 (gfc_array_c8 * const restrict, \n+\tgfc_array_c8 * const restrict, const index_type * const restrict);\n export_proto(sum_c8);\n \n void\n-sum_c8 (gfc_array_c8 *retarray, gfc_array_c8 *array, index_type *pdim)\n+sum_c8 (gfc_array_c8 * const restrict retarray, \n+\tgfc_array_c8 * const restrict array, \n+\tconst index_type * const restrict pdim)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n-  GFC_COMPLEX_8 *base;\n-  GFC_COMPLEX_8 *dest;\n+  const GFC_COMPLEX_8 * restrict base;\n+  GFC_COMPLEX_8 * restrict dest;\n   index_type rank;\n   index_type n;\n   index_type len;\n@@ -120,7 +123,7 @@ sum_c8 (gfc_array_c8 *retarray, gfc_array_c8 *array, index_type *pdim)\n \n   while (base)\n     {\n-      GFC_COMPLEX_8 *src;\n+      const GFC_COMPLEX_8 * restrict src;\n       GFC_COMPLEX_8 result;\n       src = base;\n       {\n@@ -170,22 +173,25 @@ sum_c8 (gfc_array_c8 *retarray, gfc_array_c8 *array, index_type *pdim)\n }\n \n \n-extern void msum_c8 (gfc_array_c8 *, gfc_array_c8 *, index_type *,\n-\t\t\t\t\t       gfc_array_l4 *);\n+extern void msum_c8 (gfc_array_c8 * const restrict, \n+\tgfc_array_c8 * const restrict, const index_type * const restrict,\n+\tgfc_array_l4 * const restrict);\n export_proto(msum_c8);\n \n void\n-msum_c8 (gfc_array_c8 * retarray, gfc_array_c8 * array,\n-\t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n+msum_c8 (gfc_array_c8 * const restrict retarray, \n+\tgfc_array_c8 * const restrict array, \n+\tconst index_type * const restrict pdim, \n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n-  GFC_COMPLEX_8 *dest;\n-  GFC_COMPLEX_8 *base;\n-  GFC_LOGICAL_4 *mbase;\n+  GFC_COMPLEX_8 * restrict dest;\n+  const GFC_COMPLEX_8 * restrict base;\n+  const GFC_LOGICAL_4 * restrict mbase;\n   int rank;\n   int dim;\n   index_type n;\n@@ -276,8 +282,8 @@ msum_c8 (gfc_array_c8 * retarray, gfc_array_c8 * array,\n \n   while (base)\n     {\n-      GFC_COMPLEX_8 *src;\n-      GFC_LOGICAL_4 *msrc;\n+      const GFC_COMPLEX_8 * restrict src;\n+      const GFC_LOGICAL_4 * restrict msrc;\n       GFC_COMPLEX_8 result;\n       src = base;\n       msrc = mbase;"}, {"sha": "00446895d0a91a2276255fbf9a0d3815f0d40ca3", "filename": "libgfortran/generated/sum_i16.c", "status": "modified", "additions": 20, "deletions": 14, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fsum_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fsum_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fsum_i16.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -37,18 +37,21 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_INTEGER_16) && defined (HAVE_GFC_INTEGER_16)\n \n \n-extern void sum_i16 (gfc_array_i16 *, gfc_array_i16 *, index_type *);\n+extern void sum_i16 (gfc_array_i16 * const restrict, \n+\tgfc_array_i16 * const restrict, const index_type * const restrict);\n export_proto(sum_i16);\n \n void\n-sum_i16 (gfc_array_i16 *retarray, gfc_array_i16 *array, index_type *pdim)\n+sum_i16 (gfc_array_i16 * const restrict retarray, \n+\tgfc_array_i16 * const restrict array, \n+\tconst index_type * const restrict pdim)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n-  GFC_INTEGER_16 *base;\n-  GFC_INTEGER_16 *dest;\n+  const GFC_INTEGER_16 * restrict base;\n+  GFC_INTEGER_16 * restrict dest;\n   index_type rank;\n   index_type n;\n   index_type len;\n@@ -120,7 +123,7 @@ sum_i16 (gfc_array_i16 *retarray, gfc_array_i16 *array, index_type *pdim)\n \n   while (base)\n     {\n-      GFC_INTEGER_16 *src;\n+      const GFC_INTEGER_16 * restrict src;\n       GFC_INTEGER_16 result;\n       src = base;\n       {\n@@ -170,22 +173,25 @@ sum_i16 (gfc_array_i16 *retarray, gfc_array_i16 *array, index_type *pdim)\n }\n \n \n-extern void msum_i16 (gfc_array_i16 *, gfc_array_i16 *, index_type *,\n-\t\t\t\t\t       gfc_array_l4 *);\n+extern void msum_i16 (gfc_array_i16 * const restrict, \n+\tgfc_array_i16 * const restrict, const index_type * const restrict,\n+\tgfc_array_l4 * const restrict);\n export_proto(msum_i16);\n \n void\n-msum_i16 (gfc_array_i16 * retarray, gfc_array_i16 * array,\n-\t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n+msum_i16 (gfc_array_i16 * const restrict retarray, \n+\tgfc_array_i16 * const restrict array, \n+\tconst index_type * const restrict pdim, \n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n-  GFC_INTEGER_16 *dest;\n-  GFC_INTEGER_16 *base;\n-  GFC_LOGICAL_4 *mbase;\n+  GFC_INTEGER_16 * restrict dest;\n+  const GFC_INTEGER_16 * restrict base;\n+  const GFC_LOGICAL_4 * restrict mbase;\n   int rank;\n   int dim;\n   index_type n;\n@@ -276,8 +282,8 @@ msum_i16 (gfc_array_i16 * retarray, gfc_array_i16 * array,\n \n   while (base)\n     {\n-      GFC_INTEGER_16 *src;\n-      GFC_LOGICAL_4 *msrc;\n+      const GFC_INTEGER_16 * restrict src;\n+      const GFC_LOGICAL_4 * restrict msrc;\n       GFC_INTEGER_16 result;\n       src = base;\n       msrc = mbase;"}, {"sha": "f00c4ea3f157fbbf5fb613fb42a4132c8669d092", "filename": "libgfortran/generated/sum_i4.c", "status": "modified", "additions": 20, "deletions": 14, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fsum_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fsum_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fsum_i4.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -37,18 +37,21 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_INTEGER_4) && defined (HAVE_GFC_INTEGER_4)\n \n \n-extern void sum_i4 (gfc_array_i4 *, gfc_array_i4 *, index_type *);\n+extern void sum_i4 (gfc_array_i4 * const restrict, \n+\tgfc_array_i4 * const restrict, const index_type * const restrict);\n export_proto(sum_i4);\n \n void\n-sum_i4 (gfc_array_i4 *retarray, gfc_array_i4 *array, index_type *pdim)\n+sum_i4 (gfc_array_i4 * const restrict retarray, \n+\tgfc_array_i4 * const restrict array, \n+\tconst index_type * const restrict pdim)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n-  GFC_INTEGER_4 *base;\n-  GFC_INTEGER_4 *dest;\n+  const GFC_INTEGER_4 * restrict base;\n+  GFC_INTEGER_4 * restrict dest;\n   index_type rank;\n   index_type n;\n   index_type len;\n@@ -120,7 +123,7 @@ sum_i4 (gfc_array_i4 *retarray, gfc_array_i4 *array, index_type *pdim)\n \n   while (base)\n     {\n-      GFC_INTEGER_4 *src;\n+      const GFC_INTEGER_4 * restrict src;\n       GFC_INTEGER_4 result;\n       src = base;\n       {\n@@ -170,22 +173,25 @@ sum_i4 (gfc_array_i4 *retarray, gfc_array_i4 *array, index_type *pdim)\n }\n \n \n-extern void msum_i4 (gfc_array_i4 *, gfc_array_i4 *, index_type *,\n-\t\t\t\t\t       gfc_array_l4 *);\n+extern void msum_i4 (gfc_array_i4 * const restrict, \n+\tgfc_array_i4 * const restrict, const index_type * const restrict,\n+\tgfc_array_l4 * const restrict);\n export_proto(msum_i4);\n \n void\n-msum_i4 (gfc_array_i4 * retarray, gfc_array_i4 * array,\n-\t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n+msum_i4 (gfc_array_i4 * const restrict retarray, \n+\tgfc_array_i4 * const restrict array, \n+\tconst index_type * const restrict pdim, \n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n-  GFC_INTEGER_4 *dest;\n-  GFC_INTEGER_4 *base;\n-  GFC_LOGICAL_4 *mbase;\n+  GFC_INTEGER_4 * restrict dest;\n+  const GFC_INTEGER_4 * restrict base;\n+  const GFC_LOGICAL_4 * restrict mbase;\n   int rank;\n   int dim;\n   index_type n;\n@@ -276,8 +282,8 @@ msum_i4 (gfc_array_i4 * retarray, gfc_array_i4 * array,\n \n   while (base)\n     {\n-      GFC_INTEGER_4 *src;\n-      GFC_LOGICAL_4 *msrc;\n+      const GFC_INTEGER_4 * restrict src;\n+      const GFC_LOGICAL_4 * restrict msrc;\n       GFC_INTEGER_4 result;\n       src = base;\n       msrc = mbase;"}, {"sha": "78505da9865889f5583959a0facc0e10fb0db25f", "filename": "libgfortran/generated/sum_i8.c", "status": "modified", "additions": 20, "deletions": 14, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fsum_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fsum_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fsum_i8.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -37,18 +37,21 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_INTEGER_8) && defined (HAVE_GFC_INTEGER_8)\n \n \n-extern void sum_i8 (gfc_array_i8 *, gfc_array_i8 *, index_type *);\n+extern void sum_i8 (gfc_array_i8 * const restrict, \n+\tgfc_array_i8 * const restrict, const index_type * const restrict);\n export_proto(sum_i8);\n \n void\n-sum_i8 (gfc_array_i8 *retarray, gfc_array_i8 *array, index_type *pdim)\n+sum_i8 (gfc_array_i8 * const restrict retarray, \n+\tgfc_array_i8 * const restrict array, \n+\tconst index_type * const restrict pdim)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n-  GFC_INTEGER_8 *base;\n-  GFC_INTEGER_8 *dest;\n+  const GFC_INTEGER_8 * restrict base;\n+  GFC_INTEGER_8 * restrict dest;\n   index_type rank;\n   index_type n;\n   index_type len;\n@@ -120,7 +123,7 @@ sum_i8 (gfc_array_i8 *retarray, gfc_array_i8 *array, index_type *pdim)\n \n   while (base)\n     {\n-      GFC_INTEGER_8 *src;\n+      const GFC_INTEGER_8 * restrict src;\n       GFC_INTEGER_8 result;\n       src = base;\n       {\n@@ -170,22 +173,25 @@ sum_i8 (gfc_array_i8 *retarray, gfc_array_i8 *array, index_type *pdim)\n }\n \n \n-extern void msum_i8 (gfc_array_i8 *, gfc_array_i8 *, index_type *,\n-\t\t\t\t\t       gfc_array_l4 *);\n+extern void msum_i8 (gfc_array_i8 * const restrict, \n+\tgfc_array_i8 * const restrict, const index_type * const restrict,\n+\tgfc_array_l4 * const restrict);\n export_proto(msum_i8);\n \n void\n-msum_i8 (gfc_array_i8 * retarray, gfc_array_i8 * array,\n-\t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n+msum_i8 (gfc_array_i8 * const restrict retarray, \n+\tgfc_array_i8 * const restrict array, \n+\tconst index_type * const restrict pdim, \n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n-  GFC_INTEGER_8 *dest;\n-  GFC_INTEGER_8 *base;\n-  GFC_LOGICAL_4 *mbase;\n+  GFC_INTEGER_8 * restrict dest;\n+  const GFC_INTEGER_8 * restrict base;\n+  const GFC_LOGICAL_4 * restrict mbase;\n   int rank;\n   int dim;\n   index_type n;\n@@ -276,8 +282,8 @@ msum_i8 (gfc_array_i8 * retarray, gfc_array_i8 * array,\n \n   while (base)\n     {\n-      GFC_INTEGER_8 *src;\n-      GFC_LOGICAL_4 *msrc;\n+      const GFC_INTEGER_8 * restrict src;\n+      const GFC_LOGICAL_4 * restrict msrc;\n       GFC_INTEGER_8 result;\n       src = base;\n       msrc = mbase;"}, {"sha": "49071021f0db4a07aedd89116aad55293adb1414", "filename": "libgfortran/generated/sum_r10.c", "status": "modified", "additions": 20, "deletions": 14, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fsum_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fsum_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fsum_r10.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -37,18 +37,21 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_REAL_10) && defined (HAVE_GFC_REAL_10)\n \n \n-extern void sum_r10 (gfc_array_r10 *, gfc_array_r10 *, index_type *);\n+extern void sum_r10 (gfc_array_r10 * const restrict, \n+\tgfc_array_r10 * const restrict, const index_type * const restrict);\n export_proto(sum_r10);\n \n void\n-sum_r10 (gfc_array_r10 *retarray, gfc_array_r10 *array, index_type *pdim)\n+sum_r10 (gfc_array_r10 * const restrict retarray, \n+\tgfc_array_r10 * const restrict array, \n+\tconst index_type * const restrict pdim)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n-  GFC_REAL_10 *base;\n-  GFC_REAL_10 *dest;\n+  const GFC_REAL_10 * restrict base;\n+  GFC_REAL_10 * restrict dest;\n   index_type rank;\n   index_type n;\n   index_type len;\n@@ -120,7 +123,7 @@ sum_r10 (gfc_array_r10 *retarray, gfc_array_r10 *array, index_type *pdim)\n \n   while (base)\n     {\n-      GFC_REAL_10 *src;\n+      const GFC_REAL_10 * restrict src;\n       GFC_REAL_10 result;\n       src = base;\n       {\n@@ -170,22 +173,25 @@ sum_r10 (gfc_array_r10 *retarray, gfc_array_r10 *array, index_type *pdim)\n }\n \n \n-extern void msum_r10 (gfc_array_r10 *, gfc_array_r10 *, index_type *,\n-\t\t\t\t\t       gfc_array_l4 *);\n+extern void msum_r10 (gfc_array_r10 * const restrict, \n+\tgfc_array_r10 * const restrict, const index_type * const restrict,\n+\tgfc_array_l4 * const restrict);\n export_proto(msum_r10);\n \n void\n-msum_r10 (gfc_array_r10 * retarray, gfc_array_r10 * array,\n-\t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n+msum_r10 (gfc_array_r10 * const restrict retarray, \n+\tgfc_array_r10 * const restrict array, \n+\tconst index_type * const restrict pdim, \n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n-  GFC_REAL_10 *dest;\n-  GFC_REAL_10 *base;\n-  GFC_LOGICAL_4 *mbase;\n+  GFC_REAL_10 * restrict dest;\n+  const GFC_REAL_10 * restrict base;\n+  const GFC_LOGICAL_4 * restrict mbase;\n   int rank;\n   int dim;\n   index_type n;\n@@ -276,8 +282,8 @@ msum_r10 (gfc_array_r10 * retarray, gfc_array_r10 * array,\n \n   while (base)\n     {\n-      GFC_REAL_10 *src;\n-      GFC_LOGICAL_4 *msrc;\n+      const GFC_REAL_10 * restrict src;\n+      const GFC_LOGICAL_4 * restrict msrc;\n       GFC_REAL_10 result;\n       src = base;\n       msrc = mbase;"}, {"sha": "eddd45b864690e6d88e09dfb1c789a176847ed77", "filename": "libgfortran/generated/sum_r16.c", "status": "modified", "additions": 20, "deletions": 14, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fsum_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fsum_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fsum_r16.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -37,18 +37,21 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_REAL_16) && defined (HAVE_GFC_REAL_16)\n \n \n-extern void sum_r16 (gfc_array_r16 *, gfc_array_r16 *, index_type *);\n+extern void sum_r16 (gfc_array_r16 * const restrict, \n+\tgfc_array_r16 * const restrict, const index_type * const restrict);\n export_proto(sum_r16);\n \n void\n-sum_r16 (gfc_array_r16 *retarray, gfc_array_r16 *array, index_type *pdim)\n+sum_r16 (gfc_array_r16 * const restrict retarray, \n+\tgfc_array_r16 * const restrict array, \n+\tconst index_type * const restrict pdim)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n-  GFC_REAL_16 *base;\n-  GFC_REAL_16 *dest;\n+  const GFC_REAL_16 * restrict base;\n+  GFC_REAL_16 * restrict dest;\n   index_type rank;\n   index_type n;\n   index_type len;\n@@ -120,7 +123,7 @@ sum_r16 (gfc_array_r16 *retarray, gfc_array_r16 *array, index_type *pdim)\n \n   while (base)\n     {\n-      GFC_REAL_16 *src;\n+      const GFC_REAL_16 * restrict src;\n       GFC_REAL_16 result;\n       src = base;\n       {\n@@ -170,22 +173,25 @@ sum_r16 (gfc_array_r16 *retarray, gfc_array_r16 *array, index_type *pdim)\n }\n \n \n-extern void msum_r16 (gfc_array_r16 *, gfc_array_r16 *, index_type *,\n-\t\t\t\t\t       gfc_array_l4 *);\n+extern void msum_r16 (gfc_array_r16 * const restrict, \n+\tgfc_array_r16 * const restrict, const index_type * const restrict,\n+\tgfc_array_l4 * const restrict);\n export_proto(msum_r16);\n \n void\n-msum_r16 (gfc_array_r16 * retarray, gfc_array_r16 * array,\n-\t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n+msum_r16 (gfc_array_r16 * const restrict retarray, \n+\tgfc_array_r16 * const restrict array, \n+\tconst index_type * const restrict pdim, \n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n-  GFC_REAL_16 *dest;\n-  GFC_REAL_16 *base;\n-  GFC_LOGICAL_4 *mbase;\n+  GFC_REAL_16 * restrict dest;\n+  const GFC_REAL_16 * restrict base;\n+  const GFC_LOGICAL_4 * restrict mbase;\n   int rank;\n   int dim;\n   index_type n;\n@@ -276,8 +282,8 @@ msum_r16 (gfc_array_r16 * retarray, gfc_array_r16 * array,\n \n   while (base)\n     {\n-      GFC_REAL_16 *src;\n-      GFC_LOGICAL_4 *msrc;\n+      const GFC_REAL_16 * restrict src;\n+      const GFC_LOGICAL_4 * restrict msrc;\n       GFC_REAL_16 result;\n       src = base;\n       msrc = mbase;"}, {"sha": "97bf717ba5abb30b1ff80ef61e88576ad6a9021e", "filename": "libgfortran/generated/sum_r4.c", "status": "modified", "additions": 20, "deletions": 14, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fsum_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fsum_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fsum_r4.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -37,18 +37,21 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_REAL_4) && defined (HAVE_GFC_REAL_4)\n \n \n-extern void sum_r4 (gfc_array_r4 *, gfc_array_r4 *, index_type *);\n+extern void sum_r4 (gfc_array_r4 * const restrict, \n+\tgfc_array_r4 * const restrict, const index_type * const restrict);\n export_proto(sum_r4);\n \n void\n-sum_r4 (gfc_array_r4 *retarray, gfc_array_r4 *array, index_type *pdim)\n+sum_r4 (gfc_array_r4 * const restrict retarray, \n+\tgfc_array_r4 * const restrict array, \n+\tconst index_type * const restrict pdim)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n-  GFC_REAL_4 *base;\n-  GFC_REAL_4 *dest;\n+  const GFC_REAL_4 * restrict base;\n+  GFC_REAL_4 * restrict dest;\n   index_type rank;\n   index_type n;\n   index_type len;\n@@ -120,7 +123,7 @@ sum_r4 (gfc_array_r4 *retarray, gfc_array_r4 *array, index_type *pdim)\n \n   while (base)\n     {\n-      GFC_REAL_4 *src;\n+      const GFC_REAL_4 * restrict src;\n       GFC_REAL_4 result;\n       src = base;\n       {\n@@ -170,22 +173,25 @@ sum_r4 (gfc_array_r4 *retarray, gfc_array_r4 *array, index_type *pdim)\n }\n \n \n-extern void msum_r4 (gfc_array_r4 *, gfc_array_r4 *, index_type *,\n-\t\t\t\t\t       gfc_array_l4 *);\n+extern void msum_r4 (gfc_array_r4 * const restrict, \n+\tgfc_array_r4 * const restrict, const index_type * const restrict,\n+\tgfc_array_l4 * const restrict);\n export_proto(msum_r4);\n \n void\n-msum_r4 (gfc_array_r4 * retarray, gfc_array_r4 * array,\n-\t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n+msum_r4 (gfc_array_r4 * const restrict retarray, \n+\tgfc_array_r4 * const restrict array, \n+\tconst index_type * const restrict pdim, \n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n-  GFC_REAL_4 *dest;\n-  GFC_REAL_4 *base;\n-  GFC_LOGICAL_4 *mbase;\n+  GFC_REAL_4 * restrict dest;\n+  const GFC_REAL_4 * restrict base;\n+  const GFC_LOGICAL_4 * restrict mbase;\n   int rank;\n   int dim;\n   index_type n;\n@@ -276,8 +282,8 @@ msum_r4 (gfc_array_r4 * retarray, gfc_array_r4 * array,\n \n   while (base)\n     {\n-      GFC_REAL_4 *src;\n-      GFC_LOGICAL_4 *msrc;\n+      const GFC_REAL_4 * restrict src;\n+      const GFC_LOGICAL_4 * restrict msrc;\n       GFC_REAL_4 result;\n       src = base;\n       msrc = mbase;"}, {"sha": "0f3b49c278bc7089b117cb66ee5ef14a7c4e1c5a", "filename": "libgfortran/generated/sum_r8.c", "status": "modified", "additions": 20, "deletions": 14, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fsum_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Fsum_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fsum_r8.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -37,18 +37,21 @@ Boston, MA 02110-1301, USA.  */\n #if defined (HAVE_GFC_REAL_8) && defined (HAVE_GFC_REAL_8)\n \n \n-extern void sum_r8 (gfc_array_r8 *, gfc_array_r8 *, index_type *);\n+extern void sum_r8 (gfc_array_r8 * const restrict, \n+\tgfc_array_r8 * const restrict, const index_type * const restrict);\n export_proto(sum_r8);\n \n void\n-sum_r8 (gfc_array_r8 *retarray, gfc_array_r8 *array, index_type *pdim)\n+sum_r8 (gfc_array_r8 * const restrict retarray, \n+\tgfc_array_r8 * const restrict array, \n+\tconst index_type * const restrict pdim)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n-  GFC_REAL_8 *base;\n-  GFC_REAL_8 *dest;\n+  const GFC_REAL_8 * restrict base;\n+  GFC_REAL_8 * restrict dest;\n   index_type rank;\n   index_type n;\n   index_type len;\n@@ -120,7 +123,7 @@ sum_r8 (gfc_array_r8 *retarray, gfc_array_r8 *array, index_type *pdim)\n \n   while (base)\n     {\n-      GFC_REAL_8 *src;\n+      const GFC_REAL_8 * restrict src;\n       GFC_REAL_8 result;\n       src = base;\n       {\n@@ -170,22 +173,25 @@ sum_r8 (gfc_array_r8 *retarray, gfc_array_r8 *array, index_type *pdim)\n }\n \n \n-extern void msum_r8 (gfc_array_r8 *, gfc_array_r8 *, index_type *,\n-\t\t\t\t\t       gfc_array_l4 *);\n+extern void msum_r8 (gfc_array_r8 * const restrict, \n+\tgfc_array_r8 * const restrict, const index_type * const restrict,\n+\tgfc_array_l4 * const restrict);\n export_proto(msum_r8);\n \n void\n-msum_r8 (gfc_array_r8 * retarray, gfc_array_r8 * array,\n-\t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n+msum_r8 (gfc_array_r8 * const restrict retarray, \n+\tgfc_array_r8 * const restrict array, \n+\tconst index_type * const restrict pdim, \n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n-  GFC_REAL_8 *dest;\n-  GFC_REAL_8 *base;\n-  GFC_LOGICAL_4 *mbase;\n+  GFC_REAL_8 * restrict dest;\n+  const GFC_REAL_8 * restrict base;\n+  const GFC_LOGICAL_4 * restrict mbase;\n   int rank;\n   int dim;\n   index_type n;\n@@ -276,8 +282,8 @@ msum_r8 (gfc_array_r8 * retarray, gfc_array_r8 * array,\n \n   while (base)\n     {\n-      GFC_REAL_8 *src;\n-      GFC_LOGICAL_4 *msrc;\n+      const GFC_REAL_8 * restrict src;\n+      const GFC_LOGICAL_4 * restrict msrc;\n       GFC_REAL_8 result;\n       src = base;\n       msrc = mbase;"}, {"sha": "9400c82fc1876baa367a7da4506289d2bc2a3a61", "filename": "libgfortran/generated/transpose_c10.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Ftranspose_c10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Ftranspose_c10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Ftranspose_c10.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -34,11 +34,13 @@ Boston, MA 02110-1301, USA.  */\n \n #if defined (HAVE_GFC_COMPLEX_10)\n \n-extern void transpose_c10 (gfc_array_c10 * ret, gfc_array_c10 * source);\n+extern void transpose_c10 (gfc_array_c10 * const restrict ret, \n+\tgfc_array_c10 * const restrict source);\n export_proto(transpose_c10);\n \n void\n-transpose_c10 (gfc_array_c10 * ret, gfc_array_c10 * source)\n+transpose_c10 (gfc_array_c10 * const restrict ret, \n+\tgfc_array_c10 * const restrict source)\n {\n   /* r.* indicates the return array.  */\n   index_type rxstride, rystride;"}, {"sha": "a572be3859d0a6f9fcdf9086dd217e78420f7747", "filename": "libgfortran/generated/transpose_c16.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Ftranspose_c16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Ftranspose_c16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Ftranspose_c16.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -34,11 +34,13 @@ Boston, MA 02110-1301, USA.  */\n \n #if defined (HAVE_GFC_COMPLEX_16)\n \n-extern void transpose_c16 (gfc_array_c16 * ret, gfc_array_c16 * source);\n+extern void transpose_c16 (gfc_array_c16 * const restrict ret, \n+\tgfc_array_c16 * const restrict source);\n export_proto(transpose_c16);\n \n void\n-transpose_c16 (gfc_array_c16 * ret, gfc_array_c16 * source)\n+transpose_c16 (gfc_array_c16 * const restrict ret, \n+\tgfc_array_c16 * const restrict source)\n {\n   /* r.* indicates the return array.  */\n   index_type rxstride, rystride;"}, {"sha": "3dc14756dbbdb1c4b6f19581666c2a8e839d98c2", "filename": "libgfortran/generated/transpose_c4.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Ftranspose_c4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Ftranspose_c4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Ftranspose_c4.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -34,11 +34,13 @@ Boston, MA 02110-1301, USA.  */\n \n #if defined (HAVE_GFC_COMPLEX_4)\n \n-extern void transpose_c4 (gfc_array_c4 * ret, gfc_array_c4 * source);\n+extern void transpose_c4 (gfc_array_c4 * const restrict ret, \n+\tgfc_array_c4 * const restrict source);\n export_proto(transpose_c4);\n \n void\n-transpose_c4 (gfc_array_c4 * ret, gfc_array_c4 * source)\n+transpose_c4 (gfc_array_c4 * const restrict ret, \n+\tgfc_array_c4 * const restrict source)\n {\n   /* r.* indicates the return array.  */\n   index_type rxstride, rystride;"}, {"sha": "c127d947f56201df97bf3de032b5b21b21eac3b1", "filename": "libgfortran/generated/transpose_c8.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Ftranspose_c8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Ftranspose_c8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Ftranspose_c8.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -34,11 +34,13 @@ Boston, MA 02110-1301, USA.  */\n \n #if defined (HAVE_GFC_COMPLEX_8)\n \n-extern void transpose_c8 (gfc_array_c8 * ret, gfc_array_c8 * source);\n+extern void transpose_c8 (gfc_array_c8 * const restrict ret, \n+\tgfc_array_c8 * const restrict source);\n export_proto(transpose_c8);\n \n void\n-transpose_c8 (gfc_array_c8 * ret, gfc_array_c8 * source)\n+transpose_c8 (gfc_array_c8 * const restrict ret, \n+\tgfc_array_c8 * const restrict source)\n {\n   /* r.* indicates the return array.  */\n   index_type rxstride, rystride;"}, {"sha": "d780fb12c4f23329fef3258535f43c277ff5957a", "filename": "libgfortran/generated/transpose_i16.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Ftranspose_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Ftranspose_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Ftranspose_i16.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -34,11 +34,13 @@ Boston, MA 02110-1301, USA.  */\n \n #if defined (HAVE_GFC_INTEGER_16)\n \n-extern void transpose_i16 (gfc_array_i16 * ret, gfc_array_i16 * source);\n+extern void transpose_i16 (gfc_array_i16 * const restrict ret, \n+\tgfc_array_i16 * const restrict source);\n export_proto(transpose_i16);\n \n void\n-transpose_i16 (gfc_array_i16 * ret, gfc_array_i16 * source)\n+transpose_i16 (gfc_array_i16 * const restrict ret, \n+\tgfc_array_i16 * const restrict source)\n {\n   /* r.* indicates the return array.  */\n   index_type rxstride, rystride;"}, {"sha": "cf2bfc7ee87b7ad07612ea1a2bb3cef2b870c691", "filename": "libgfortran/generated/transpose_i4.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Ftranspose_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Ftranspose_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Ftranspose_i4.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -34,11 +34,13 @@ Boston, MA 02110-1301, USA.  */\n \n #if defined (HAVE_GFC_INTEGER_4)\n \n-extern void transpose_i4 (gfc_array_i4 * ret, gfc_array_i4 * source);\n+extern void transpose_i4 (gfc_array_i4 * const restrict ret, \n+\tgfc_array_i4 * const restrict source);\n export_proto(transpose_i4);\n \n void\n-transpose_i4 (gfc_array_i4 * ret, gfc_array_i4 * source)\n+transpose_i4 (gfc_array_i4 * const restrict ret, \n+\tgfc_array_i4 * const restrict source)\n {\n   /* r.* indicates the return array.  */\n   index_type rxstride, rystride;"}, {"sha": "4fd16648729ab771697e826e705b0a69c00f9694", "filename": "libgfortran/generated/transpose_i8.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Ftranspose_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fgenerated%2Ftranspose_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Ftranspose_i8.c?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -34,11 +34,13 @@ Boston, MA 02110-1301, USA.  */\n \n #if defined (HAVE_GFC_INTEGER_8)\n \n-extern void transpose_i8 (gfc_array_i8 * ret, gfc_array_i8 * source);\n+extern void transpose_i8 (gfc_array_i8 * const restrict ret, \n+\tgfc_array_i8 * const restrict source);\n export_proto(transpose_i8);\n \n void\n-transpose_i8 (gfc_array_i8 * ret, gfc_array_i8 * source)\n+transpose_i8 (gfc_array_i8 * const restrict ret, \n+\tgfc_array_i8 * const restrict source)\n {\n   /* r.* indicates the return array.  */\n   index_type rxstride, rystride;"}, {"sha": "964689fa12d1d4313874353db48653a66b922156", "filename": "libgfortran/m4/cshift1.m4", "status": "modified", "additions": 25, "deletions": 16, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fm4%2Fcshift1.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fm4%2Fcshift1.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Fcshift1.m4?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -38,8 +38,11 @@ include(iparm.m4)dnl\n `#if defined (HAVE_'atype_name`)'\n \n static void\n-cshift1 (gfc_array_char * ret, const gfc_array_char * array,\n-\t const atype * h, const atype_name * pwhich, index_type size)\n+cshift1 (gfc_array_char * const restrict ret, \n+\tconst gfc_array_char * const restrict array,\n+\tconst atype * const restrict h, \n+\tconst atype_name * const restrict pwhich, \n+\tindex_type size)\n {\n   /* r.* indicates the return array.  */\n   index_type rstride[GFC_MAX_DIMENSIONS];\n@@ -195,30 +198,36 @@ cshift1 (gfc_array_char * ret, const gfc_array_char * array,\n     }\n }\n \n-void cshift1_`'atype_kind (gfc_array_char *, const gfc_array_char *,\n-\t\t\t   const atype *, const atype_name *);\n+void cshift1_`'atype_kind (gfc_array_char * const restrict, \n+\tconst gfc_array_char * const restrict,\n+\tconst atype * const restrict, \n+\tconst atype_name * const restrict);\n export_proto(cshift1_`'atype_kind);\n \n void\n-cshift1_`'atype_kind (gfc_array_char * ret,\n-\t\t      const gfc_array_char * array,\n-\t\t      const atype * h, const atype_name * pwhich)\n+cshift1_`'atype_kind (gfc_array_char * const restrict ret,\n+\tconst gfc_array_char * const restrict array,\n+\tconst atype * const restrict h, \n+\tconst atype_name * const restrict pwhich)\n {\n   cshift1 (ret, array, h, pwhich, GFC_DESCRIPTOR_SIZE (array));\n }\n \n-void cshift1_`'atype_kind`'_char (gfc_array_char * ret, GFC_INTEGER_4,\n-\t\t\t\t  const gfc_array_char * array,\n-\t\t\t\t  const atype * h, const atype_name * pwhich,\n-\t\t\t\t  GFC_INTEGER_4);\n+void cshift1_`'atype_kind`'_char (gfc_array_char * const restrict ret, \n+\tGFC_INTEGER_4,\n+\tconst gfc_array_char * const restrict array,\n+\tconst atype * const restrict h, \n+\tconst atype_name * const restrict pwhich,\n+\tGFC_INTEGER_4);\n export_proto(cshift1_`'atype_kind`'_char);\n \n void\n-cshift1_`'atype_kind`'_char (gfc_array_char * ret,\n-\t\t\t     GFC_INTEGER_4 ret_length __attribute__((unused)),\n-\t\t\t     const gfc_array_char * array,\n-\t\t\t     const atype * h, const atype_name * pwhich,\n-\t\t\t     GFC_INTEGER_4 array_length)\n+cshift1_`'atype_kind`'_char (gfc_array_char * const restrict ret,\n+\tGFC_INTEGER_4 ret_length __attribute__((unused)),\n+\tconst gfc_array_char * const restrict array,\n+\tconst atype * const restrict h, \n+\tconst atype_name * const restrict pwhich,\n+\tGFC_INTEGER_4 array_length)\n {\n   cshift1 (ret, array, h, pwhich, array_length);\n }"}, {"sha": "f46796e7e4951686298c8c554ba50e085ba07597", "filename": "libgfortran/m4/dotprod.m4", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fm4%2Fdotprod.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fm4%2Fdotprod.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Fdotprod.m4?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -38,15 +38,16 @@ include(iparm.m4)dnl\n \n typedef GFC_ARRAY_DESCRIPTOR(GFC_MAX_DIMENSIONS, char) char_array;\n \n-extern rtype_name dot_product_`'rtype_code (rtype * a, rtype * b);\n+extern rtype_name dot_product_`'rtype_code (rtype * const restrict a, \n+\trtype * const restrict b);\n export_proto(dot_product_`'rtype_code);\n \n /* Both parameters will already have been converted to the result type.  */\n rtype_name\n-dot_product_`'rtype_code (rtype * a, rtype * b)\n+dot_product_`'rtype_code (rtype * const restrict a, rtype * const restrict b)\n {\n-  rtype_name *pa;\n-  rtype_name *pb;\n+  const rtype_name * restrict pa;\n+  const rtype_name * restrict pb;\n   rtype_name res;\n   index_type count;\n   index_type astride;"}, {"sha": "2b8c45f15c589a790c31920eb58e6d8c5cd7ded3", "filename": "libgfortran/m4/dotprodc.m4", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fm4%2Fdotprodc.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fm4%2Fdotprodc.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Fdotprodc.m4?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -39,15 +39,16 @@ include(iparm.m4)dnl\n \n typedef GFC_ARRAY_DESCRIPTOR(GFC_MAX_DIMENSIONS, char) char_array;\n \n-extern rtype_name dot_product_`'rtype_code (rtype * a, rtype * b);\n+extern rtype_name dot_product_`'rtype_code (rtype * const restrict a, \n+\trtype * const restrict b);\n export_proto(dot_product_`'rtype_code);\n \n /* Both parameters will already have been converted to the result type.  */\n rtype_name\n-dot_product_`'rtype_code (rtype * a, rtype * b)\n+dot_product_`'rtype_code (rtype * const restrict a, rtype * const restrict b)\n {\n-  rtype_name *pa;\n-  rtype_name *pb;\n+  const rtype_name * restrict pa;\n+  const rtype_name * restrict pb;\n   rtype_name res;\n   rtype_name conjga;\n   index_type count;"}, {"sha": "37c34673b0c07b0e8a8c0de8cc62deff6fc7b40a", "filename": "libgfortran/m4/dotprodl.m4", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fm4%2Fdotprodl.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fm4%2Fdotprodl.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Fdotprodl.m4?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -36,14 +36,16 @@ include(iparm.m4)dnl\n \n `#if defined (HAVE_'rtype_name`)'\n \n-extern rtype_name dot_product_`'rtype_code (gfc_array_l4 *, gfc_array_l4 *);\n+extern rtype_name dot_product_`'rtype_code (gfc_array_l4 * const restrict, \n+\tgfc_array_l4 * const restrict);\n export_proto(dot_product_`'rtype_code);\n \n rtype_name\n-dot_product_`'rtype_code (gfc_array_l4 * a, gfc_array_l4 * b)\n+dot_product_`'rtype_code (gfc_array_l4 * const restrict a, \n+\tgfc_array_l4 * const restrict b)\n {\n-  GFC_LOGICAL_4 *pa;\n-  GFC_LOGICAL_4 *pb;\n+  const GFC_LOGICAL_4 * restrict pa;\n+  const GFC_LOGICAL_4 * restrict pb;\n   index_type count;\n   index_type astride;\n   index_type bstride;"}, {"sha": "4d624cb049b49129db79647c7c9ccebba6a26a8d", "filename": "libgfortran/m4/eoshift1.m4", "status": "modified", "additions": 30, "deletions": 19, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fm4%2Feoshift1.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fm4%2Feoshift1.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Feoshift1.m4?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -38,9 +38,12 @@ include(iparm.m4)dnl\n `#if defined (HAVE_'atype_name`)'\n \n static void\n-eoshift1 (gfc_array_char *ret, const gfc_array_char *array, const atype *h,\n-\t  const char *pbound, const atype_name *pwhich, index_type size,\n-\t  char filler)\n+eoshift1 (gfc_array_char * const restrict ret, \n+\tconst gfc_array_char * const restrict array, \n+\tconst atype * const restrict h,\n+\tconst char * const restrict pbound, \n+\tconst atype_name * const restrict pwhich, \n+\tindex_type size, char filler)\n {\n   /* r.* indicates the return array.  */\n   index_type rstride[GFC_MAX_DIMENSIONS];\n@@ -219,32 +222,40 @@ eoshift1 (gfc_array_char *ret, const gfc_array_char *array, const atype *h,\n     }\n }\n \n-void eoshift1_`'atype_kind (gfc_array_char *, const gfc_array_char *,\n-\t\t\t    const atype *, const char *, const atype_name *);\n+void eoshift1_`'atype_kind (gfc_array_char * const restrict, \n+\tconst gfc_array_char * const restrict,\n+\tconst atype * const restrict, const char * const restrict, \n+\tconst atype_name * const restrict);\n export_proto(eoshift1_`'atype_kind);\n \n void\n-eoshift1_`'atype_kind (gfc_array_char *ret, const gfc_array_char *array,\n-\t\t       const atype *h, const char *pbound,\n-\t\t       const atype_name *pwhich)\n+eoshift1_`'atype_kind (gfc_array_char * const restrict ret, \n+\tconst gfc_array_char * const restrict array,\n+\tconst atype * const restrict h, \n+\tconst char * const restrict pbound,\n+\tconst atype_name * const restrict pwhich)\n {\n   eoshift1 (ret, array, h, pbound, pwhich, GFC_DESCRIPTOR_SIZE (array), 0);\n }\n \n-void eoshift1_`'atype_kind`'_char (gfc_array_char *, GFC_INTEGER_4,\n-\t\t\t\t   const gfc_array_char *, const atype *,\n-\t\t\t\t   const char *, const atype_name *,\n-\t\t\t\t   GFC_INTEGER_4, GFC_INTEGER_4);\n+void eoshift1_`'atype_kind`'_char (gfc_array_char * const restrict, \n+\tGFC_INTEGER_4,\n+\tconst gfc_array_char * const restrict, \n+\tconst atype * const restrict,\n+\tconst char * const restrict, \n+\tconst atype_name * const restrict,\n+\tGFC_INTEGER_4, GFC_INTEGER_4);\n export_proto(eoshift1_`'atype_kind`'_char);\n \n void\n-eoshift1_`'atype_kind`'_char (gfc_array_char *ret,\n-\t\t\t      GFC_INTEGER_4 ret_length __attribute__((unused)),\n-\t\t\t      const gfc_array_char *array, const atype *h,\n-\t\t\t      const char *pbound, const atype_name *pwhich,\n-\t\t\t      GFC_INTEGER_4 array_length,\n-\t\t\t      GFC_INTEGER_4 bound_length\n-\t\t\t\t__attribute__((unused)))\n+eoshift1_`'atype_kind`'_char (gfc_array_char * const restrict ret,\n+\tGFC_INTEGER_4 ret_length __attribute__((unused)),\n+\tconst gfc_array_char * const restrict array, \n+\tconst atype * const restrict h,\n+\tconst char *  const restrict pbound, \n+\tconst atype_name * const restrict pwhich,\n+\tGFC_INTEGER_4 array_length,\n+\tGFC_INTEGER_4 bound_length __attribute__((unused)))\n {\n   eoshift1 (ret, array, h, pbound, pwhich, array_length, ' ');\n }"}, {"sha": "269e13118721e9a9cfc42c7346588739d053a80d", "filename": "libgfortran/m4/eoshift3.m4", "status": "modified", "additions": 31, "deletions": 23, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fm4%2Feoshift3.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fm4%2Feoshift3.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Feoshift3.m4?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -38,9 +38,12 @@ include(iparm.m4)dnl\n `#if defined (HAVE_'atype_name`)'\n \n static void\n-eoshift3 (gfc_array_char *ret, const gfc_array_char *array, const atype *h,\n-\t  const gfc_array_char *bound, const atype_name *pwhich,\n-\t  index_type size, char filler)\n+eoshift3 (gfc_array_char * const restrict ret, \n+\tconst gfc_array_char * const restrict array, \n+\tconst atype * const restrict h,\n+\tconst gfc_array_char * const restrict bound, \n+\tconst atype_name * const restrict pwhich,\n+\tindex_type size, char filler)\n {\n   /* r.* indicates the return array.  */\n   index_type rstride[GFC_MAX_DIMENSIONS];\n@@ -237,36 +240,41 @@ eoshift3 (gfc_array_char *ret, const gfc_array_char *array, const atype *h,\n     }\n }\n \n-extern void eoshift3_`'atype_kind (gfc_array_char *, const gfc_array_char *,\n-\t\t\t\t   const atype *, const gfc_array_char *,\n-\t\t\t\t   const atype_name *);\n+extern void eoshift3_`'atype_kind (gfc_array_char * const restrict, \n+\tconst gfc_array_char * const restrict,\n+\tconst atype * const restrict, \n+\tconst gfc_array_char * const restrict,\n+\tconst atype_name *);\n export_proto(eoshift3_`'atype_kind);\n \n void\n-eoshift3_`'atype_kind (gfc_array_char *ret, const gfc_array_char *array,\n-\t\t       const atype *h, const gfc_array_char *bound,\n-\t\t       const atype_name *pwhich)\n+eoshift3_`'atype_kind (gfc_array_char * const restrict ret, \n+\tconst gfc_array_char * const restrict array,\n+\tconst atype * const restrict h, \n+\tconst gfc_array_char * const restrict bound,\n+\tconst atype_name * const restrict pwhich)\n {\n   eoshift3 (ret, array, h, bound, pwhich, GFC_DESCRIPTOR_SIZE (array), 0);\n }\n \n-extern void eoshift3_`'atype_kind`'_char (gfc_array_char *, GFC_INTEGER_4,\n-\t\t\t\t\t  const gfc_array_char *,\n-\t\t\t\t\t  const atype *,\n-\t\t\t\t\t  const gfc_array_char *,\n-\t\t\t\t\t  const atype_name *, GFC_INTEGER_4,\n-\t\t\t\t\t  GFC_INTEGER_4);\n+extern void eoshift3_`'atype_kind`'_char (gfc_array_char * const restrict, \n+\tGFC_INTEGER_4,\n+\tconst gfc_array_char * const restrict,\n+\tconst atype * const restrict,\n+\tconst gfc_array_char * const restrict,\n+\tconst atype_name * const restrict, \n+\tGFC_INTEGER_4, GFC_INTEGER_4);\n export_proto(eoshift3_`'atype_kind`'_char);\n \n void\n-eoshift3_`'atype_kind`'_char (gfc_array_char *ret,\n-\t\t\t      GFC_INTEGER_4 ret_length __attribute__((unused)),\n-\t\t\t      const gfc_array_char *array, const atype *h,\n-\t\t\t      const gfc_array_char *bound,\n-\t\t\t      const atype_name *pwhich,\n-\t\t\t      GFC_INTEGER_4 array_length,\n-\t\t\t      GFC_INTEGER_4 bound_length\n-\t\t\t\t__attribute__((unused)))\n+eoshift3_`'atype_kind`'_char (gfc_array_char * const restrict ret,\n+\tGFC_INTEGER_4 ret_length __attribute__((unused)),\n+\tconst gfc_array_char * const restrict array, \n+\tconst atype *  const restrict h,\n+\tconst gfc_array_char * const restrict bound,\n+\tconst atype_name * const restrict pwhich,\n+\tGFC_INTEGER_4 array_length,\n+\tGFC_INTEGER_4 bound_length __attribute__((unused)))\n {\n   eoshift3 (ret, array, h, bound, pwhich, array_length, ' ');\n }"}, {"sha": "8c5ebc9cdc383913df49986f8ad1ea352a7659d7", "filename": "libgfortran/m4/iforeach.m4", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fm4%2Fiforeach.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fm4%2Fiforeach.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Fiforeach.m4?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -4,17 +4,19 @@ dnl This file is part of the GNU Fortran 95 Runtime Library (libgfortran)\n dnl Distributed under the GNU GPL with exception.  See COPYING for details.\n define(START_FOREACH_FUNCTION,\n `\n-extern void name`'rtype_qual`_'atype_code (rtype * retarray, atype *array);\n+extern void name`'rtype_qual`_'atype_code (rtype * const restrict retarray, \n+\tatype * const restrict array);\n export_proto(name`'rtype_qual`_'atype_code);\n \n void\n-name`'rtype_qual`_'atype_code (rtype * retarray, atype *array)\n+name`'rtype_qual`_'atype_code (rtype * const restrict retarray, \n+\tatype * const restrict array)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride;\n-  atype_name *base;\n+  const atype_name *base;\n   rtype_name *dest;\n   index_type rank;\n   index_type n;\n@@ -111,20 +113,22 @@ define(FINISH_FOREACH_FUNCTION,\n }')dnl\n define(START_MASKED_FOREACH_FUNCTION,\n `\n-extern void `m'name`'rtype_qual`_'atype_code (rtype *, atype *, gfc_array_l4 *);\n+extern void `m'name`'rtype_qual`_'atype_code (rtype * const restrict, \n+\tatype * const restrict, gfc_array_l4 * const restrict);\n export_proto(`m'name`'rtype_qual`_'atype_code);\n \n void\n-`m'name`'rtype_qual`_'atype_code (rtype * retarray, atype *array,\n-\t\t\t\t  gfc_array_l4 * mask)\n+`m'name`'rtype_qual`_'atype_code (rtype * const restrict retarray, \n+\tatype * const restrict array,\n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n   index_type dstride;\n   rtype_name *dest;\n-  atype_name *base;\n+  const atype_name *base;\n   GFC_LOGICAL_4 *mbase;\n   int rank;\n   index_type n;"}, {"sha": "caf9dbaab8d58fa71f92f97fca9f50087e20e2f4", "filename": "libgfortran/m4/ifunction.m4", "status": "modified", "additions": 20, "deletions": 14, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fm4%2Fifunction.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fm4%2Fifunction.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Fifunction.m4?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -19,18 +19,21 @@ dnl You should not return or break from the inner loop of the implementation.\n dnl Care should also be taken to avoid using the names defined in iparm.m4\n define(START_ARRAY_FUNCTION,\n `\n-extern void name`'rtype_qual`_'atype_code (rtype *, atype *, index_type *);\n+extern void name`'rtype_qual`_'atype_code (rtype * const restrict, \n+\tatype * const restrict, const index_type * const restrict);\n export_proto(name`'rtype_qual`_'atype_code);\n \n void\n-name`'rtype_qual`_'atype_code (rtype *retarray, atype *array, index_type *pdim)\n+name`'rtype_qual`_'atype_code (rtype * const restrict retarray, \n+\tatype * const restrict array, \n+\tconst index_type * const restrict pdim)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n-  atype_name *base;\n-  rtype_name *dest;\n+  const atype_name * restrict base;\n+  rtype_name * restrict dest;\n   index_type rank;\n   index_type n;\n   index_type len;\n@@ -102,7 +105,7 @@ name`'rtype_qual`_'atype_code (rtype *retarray, atype *array, index_type *pdim)\n \n   while (base)\n     {\n-      atype_name *src;\n+      const atype_name * restrict src;\n       rtype_name result;\n       src = base;\n       {\n@@ -152,22 +155,25 @@ define(FINISH_ARRAY_FUNCTION,\n }')dnl\n define(START_MASKED_ARRAY_FUNCTION,\n `\n-extern void `m'name`'rtype_qual`_'atype_code (rtype *, atype *, index_type *,\n-\t\t\t\t\t       gfc_array_l4 *);\n+extern void `m'name`'rtype_qual`_'atype_code (rtype * const restrict, \n+\tatype * const restrict, const index_type * const restrict,\n+\tgfc_array_l4 * const restrict);\n export_proto(`m'name`'rtype_qual`_'atype_code);\n \n void\n-`m'name`'rtype_qual`_'atype_code (rtype * retarray, atype * array,\n-\t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n+`m'name`'rtype_qual`_'atype_code (rtype * const restrict retarray, \n+\tatype * const restrict array, \n+\tconst index_type * const restrict pdim, \n+\tgfc_array_l4 * const restrict mask)\n {\n   index_type count[GFC_MAX_DIMENSIONS];\n   index_type extent[GFC_MAX_DIMENSIONS];\n   index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type dstride[GFC_MAX_DIMENSIONS];\n   index_type mstride[GFC_MAX_DIMENSIONS];\n-  rtype_name *dest;\n-  atype_name *base;\n-  GFC_LOGICAL_4 *mbase;\n+  rtype_name * restrict dest;\n+  const atype_name * restrict base;\n+  const GFC_LOGICAL_4 * restrict mbase;\n   int rank;\n   int dim;\n   index_type n;\n@@ -258,8 +264,8 @@ void\n \n   while (base)\n     {\n-      atype_name *src;\n-      GFC_LOGICAL_4 *msrc;\n+      const atype_name * restrict src;\n+      const GFC_LOGICAL_4 * restrict msrc;\n       rtype_name result;\n       src = base;\n       msrc = mbase;"}, {"sha": "5b652b64c589c5228d11467487df2f745f26b705", "filename": "libgfortran/m4/reshape.m4", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fm4%2Freshape.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fm4%2Freshape.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Freshape.m4?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -42,13 +42,19 @@ typedef GFC_ARRAY_DESCRIPTOR(1, index_type) shape_type;\n    return array.  */\n dnl Only the kind (ie size) is used to name the function.\n \n-extern void reshape_`'rtype_ccode (rtype *, rtype *, shape_type *,\n-\t\t\t\t    rtype *, shape_type *);\n+extern void reshape_`'rtype_ccode (rtype * const restrict, \n+\trtype * const restrict, \n+\tshape_type * const restrict,\n+\trtype * const restrict, \n+\tshape_type * const restrict);\n export_proto(reshape_`'rtype_ccode);\n \n void\n-reshape_`'rtype_ccode (rtype * ret, rtype * source, shape_type * shape,\n-                      rtype * pad, shape_type * order)\n+reshape_`'rtype_ccode (rtype * const restrict ret, \n+\trtype * const restrict source, \n+\tshape_type * const restrict shape,\n+\trtype * const restrict pad, \n+\tshape_type * const restrict order)\n {\n   /* r.* indicates the return array.  */\n   index_type rcount[GFC_MAX_DIMENSIONS];"}, {"sha": "e46c3dd7f918fc07ff34f5671679f34edadba9fc", "filename": "libgfortran/m4/shape.m4", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fm4%2Fshape.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fm4%2Fshape.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Fshape.m4?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -36,11 +36,13 @@ include(iparm.m4)dnl\n \n `#if defined (HAVE_'rtype_name`)'\n \n-extern void shape_`'rtype_kind (rtype * ret, const rtype * array);\n+extern void shape_`'rtype_kind (rtype * const restrict ret, \n+\tconst rtype * const restrict array);\n export_proto(shape_`'rtype_kind);\n \n void\n-shape_`'rtype_kind (rtype * ret, const rtype * array)\n+shape_`'rtype_kind (rtype * const restrict ret, \n+\tconst rtype * const restrict array)\n {\n   int n;\n   index_type stride;"}, {"sha": "98926607f9931983b0644e2557f127a4ebdf89a8", "filename": "libgfortran/m4/transpose.m4", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fm4%2Ftranspose.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64acfd9910111c7d754802a3b9c92ee82e441113/libgfortran%2Fm4%2Ftranspose.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Ftranspose.m4?ref=64acfd9910111c7d754802a3b9c92ee82e441113", "patch": "@@ -35,11 +35,13 @@ include(iparm.m4)dnl\n \n `#if defined (HAVE_'rtype_name`)'\n \n-extern void transpose_`'rtype_code (rtype * ret, rtype * source);\n+extern void transpose_`'rtype_code (rtype * const restrict ret, \n+\trtype * const restrict source);\n export_proto(transpose_`'rtype_code);\n \n void\n-transpose_`'rtype_code (rtype * ret, rtype * source)\n+transpose_`'rtype_code (rtype * const restrict ret, \n+\trtype * const restrict source)\n {\n   /* r.* indicates the return array.  */\n   index_type rxstride, rystride;"}]}