{"sha": "93814e2d690f7ccae4d87365b66d05cfa4a11576", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTM4MTRlMmQ2OTBmN2NjYWU0ZDg3MzY1YjY2ZDA1Y2ZhNGExMTU3Ng==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2017-11-10T14:40:17Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2017-11-10T14:40:17Z"}, "message": "GCOV: do not support unexecuted blocks in Ada\n\n2017-11-10  Martin Liska  <mliska@suse.cz>\n\n\t* coverage.c (coverage_init): Stream information about\n\tsupport of has_unexecuted_blocks.\n\t* doc/gcov.texi: Document that.\n\t* gcov-dump.c (dump_gcov_file): Support it in gcov_dump tool.\n\t* gcov.c (read_graph_file): Likewise.\n\t(output_line_beginning): Fix a small issue with\n\tcolor output.\n\nFrom-SVN: r254627", "tree": {"sha": "efaaa92985c6a0c1060cfc6bbc8e9b3292a1ae5a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/efaaa92985c6a0c1060cfc6bbc8e9b3292a1ae5a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/93814e2d690f7ccae4d87365b66d05cfa4a11576", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93814e2d690f7ccae4d87365b66d05cfa4a11576", "html_url": "https://github.com/Rust-GCC/gccrs/commit/93814e2d690f7ccae4d87365b66d05cfa4a11576", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93814e2d690f7ccae4d87365b66d05cfa4a11576/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1ea8c961c82baa476503a04a81c73519971e0380", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ea8c961c82baa476503a04a81c73519971e0380", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ea8c961c82baa476503a04a81c73519971e0380"}], "stats": {"total": 27, "additions": 25, "deletions": 2}, "files": [{"sha": "de86f33961bec514867bf2fa6be7ee03e0f32072", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93814e2d690f7ccae4d87365b66d05cfa4a11576/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93814e2d690f7ccae4d87365b66d05cfa4a11576/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=93814e2d690f7ccae4d87365b66d05cfa4a11576", "patch": "@@ -1,3 +1,13 @@\n+2017-11-10  Martin Liska  <mliska@suse.cz>\n+\n+\t* coverage.c (coverage_init): Stream information about\n+\tsupport of has_unexecuted_blocks.\n+\t* doc/gcov.texi: Document that.\n+\t* gcov-dump.c (dump_gcov_file): Support it in gcov_dump tool.\n+\t* gcov.c (read_graph_file): Likewise.\n+\t(output_line_beginning): Fix a small issue with\n+\tcolor output.\n+\n 2017-11-10  Bin Cheng  <bin.cheng@arm.com>\n \n \t* tree-predcom.c (determine_roots_comp): Avoid memory leak by freeing"}, {"sha": "ea05d94f441f12d1226a5ad997f7af5e1f3b41fc", "filename": "gcc/coverage.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93814e2d690f7ccae4d87365b66d05cfa4a11576/gcc%2Fcoverage.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93814e2d690f7ccae4d87365b66d05cfa4a11576/gcc%2Fcoverage.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcoverage.c?ref=93814e2d690f7ccae4d87365b66d05cfa4a11576", "patch": "@@ -1269,6 +1269,9 @@ coverage_init (const char *filename)\n \t  gcov_write_unsigned (GCOV_NOTE_MAGIC);\n \t  gcov_write_unsigned (GCOV_VERSION);\n \t  gcov_write_unsigned (bbg_file_stamp);\n+\n+\t  /* Do not support has_unexecuted_blocks for Ada.  */\n+\t  gcov_write_unsigned (strcmp (lang_hooks.name, \"GNU Ada\") != 0);\n \t}\n     }\n "}, {"sha": "8bf422e58d8c845b2f4184d066d6ee47aef2ec85", "filename": "gcc/doc/gcov.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93814e2d690f7ccae4d87365b66d05cfa4a11576/gcc%2Fdoc%2Fgcov.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93814e2d690f7ccae4d87365b66d05cfa4a11576/gcc%2Fdoc%2Fgcov.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fgcov.texi?ref=93814e2d690f7ccae4d87365b66d05cfa4a11576", "patch": "@@ -374,7 +374,7 @@ marked @samp{$$$$$} or @samp{%%%%%}, depending on whether a basic block\n is reachable via non-exceptional or exceptional paths.\n Executed basic blocks having a statement with zero @var{execution_count}\n end with @samp{*} character and are colored with magenta color with @option{-k}\n-option.\n+option.  The functionality is not supported in Ada.\n \n Note that GCC can completely remove the bodies of functions that are\n not needed -- for instance if they are inlined everywhere.  Such functions"}, {"sha": "e5e649cb18f1716e0ac027a7b7f98e1cc5de4eb4", "filename": "gcc/gcov-dump.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93814e2d690f7ccae4d87365b66d05cfa4a11576/gcc%2Fgcov-dump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93814e2d690f7ccae4d87365b66d05cfa4a11576/gcc%2Fgcov-dump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcov-dump.c?ref=93814e2d690f7ccae4d87365b66d05cfa4a11576", "patch": "@@ -217,6 +217,11 @@ dump_gcov_file (const char *filename)\n     printf (\"%s:stamp %lu\\n\", filename, (unsigned long)stamp);\n   }\n \n+  /* Support for unexecuted basic blocks.  */\n+  unsigned support_unexecuted_blocks = gcov_read_unsigned ();\n+  if (!support_unexecuted_blocks)\n+    printf (\"%s: has_unexecuted_block is not supported\\n\", filename);\n+\n   while (1)\n     {\n       gcov_position_t base, position = gcov_position ();"}, {"sha": "7152372ef31d745450ea13d32d9f3394775f7354", "filename": "gcc/gcov.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93814e2d690f7ccae4d87365b66d05cfa4a11576/gcc%2Fgcov.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93814e2d690f7ccae4d87365b66d05cfa4a11576/gcc%2Fgcov.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcov.c?ref=93814e2d690f7ccae4d87365b66d05cfa4a11576", "patch": "@@ -424,6 +424,9 @@ static char *bbg_file_name;\n /* Stamp of the bbg file */\n static unsigned bbg_stamp;\n \n+/* Supports has_unexecuted_blocks functionality.  */\n+static unsigned bbg_supports_has_unexecuted_blocks;\n+\n /* Name and file pointer of the input file for the count data (gcda).  */\n \n static char *da_file_name;\n@@ -1492,6 +1495,7 @@ read_graph_file (void)\n \t       bbg_file_name, v, e);\n     }\n   bbg_stamp = gcov_read_unsigned ();\n+  bbg_supports_has_unexecuted_blocks = gcov_read_unsigned ();\n \n   while ((tag = gcov_read_unsigned ()))\n     {\n@@ -2732,7 +2736,8 @@ output_line_beginning (FILE *f, bool exists, bool unexceptional,\n       if (count > 0)\n \t{\n \t  s = format_gcov (count, 0, -1);\n-\t  if (has_unexecuted_block)\n+\t  if (has_unexecuted_block\n+\t      && bbg_supports_has_unexecuted_blocks)\n \t    {\n \t      if (flag_use_colors)\n \t\t{"}]}