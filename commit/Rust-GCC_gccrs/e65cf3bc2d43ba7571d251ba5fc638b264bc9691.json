{"sha": "e65cf3bc2d43ba7571d251ba5fc638b264bc9691", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTY1Y2YzYmMyZDQzYmE3NTcxZDI1MWJhNWZjNjM4YjI2NGJjOTY5MQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2011-11-08T01:39:44Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2011-11-08T01:39:44Z"}, "message": "re PR libstdc++/51018 (Test failures on NetBSD)\n\n2011-11-07  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR libstdc++/51018\n\t* include/profile/impl/profiler_node.h (__stack_hash::\n\toperator()(__stack_t)): Just use std::size_t everywhere.\n\nFrom-SVN: r181147", "tree": {"sha": "cb06825f08e8da013c0df7cadea9b23830ad4168", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cb06825f08e8da013c0df7cadea9b23830ad4168"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e65cf3bc2d43ba7571d251ba5fc638b264bc9691", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e65cf3bc2d43ba7571d251ba5fc638b264bc9691", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e65cf3bc2d43ba7571d251ba5fc638b264bc9691", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e65cf3bc2d43ba7571d251ba5fc638b264bc9691/comments", "author": null, "committer": null, "parents": [{"sha": "c4d9f41936d0060b79c48325f6098cd9ac5ac29d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4d9f41936d0060b79c48325f6098cd9ac5ac29d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4d9f41936d0060b79c48325f6098cd9ac5ac29d"}], "stats": {"total": 16, "additions": 11, "deletions": 5}, "files": [{"sha": "e9f1f1b0fd33bdca46eb3c8fcbc10e0bb7748663", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e65cf3bc2d43ba7571d251ba5fc638b264bc9691/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e65cf3bc2d43ba7571d251ba5fc638b264bc9691/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=e65cf3bc2d43ba7571d251ba5fc638b264bc9691", "patch": "@@ -1,10 +1,16 @@\n-2011-11-08  Jonathan Wakely  <jwakely.gcc@gmail.com>\n+2011-11-07  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR libstdc++/51018\n+\t* include/profile/impl/profiler_node.h (__stack_hash::\n+\toperator()(__stack_t)): Just use std::size_t everywhere.\n+\n+2011-11-07  Jonathan Wakely  <jwakely.gcc@gmail.com>\n \n \t* include/std/future (__future_base::_Ptr): Use alias-declaration.\n \t(__is_same_pkgdtask): Rename to __constrain_pkgdtask and use decay\n \tinstead of remove_reference so that cv-quals are removed.\n \n-2011-11-08  Ed Smith-Rowland  <3dw4rd@verizon.net>\n+2011-11-07  Ed Smith-Rowland  <3dw4rd@verizon.net>\n \n \t* include/precompiled/stdc++.h: Add cstdalign.\n "}, {"sha": "dfaff8c6b6f2c0ad0657b0898bbf88335c648e5b", "filename": "libstdc++-v3/include/profile/impl/profiler_node.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e65cf3bc2d43ba7571d251ba5fc638b264bc9691/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fimpl%2Fprofiler_node.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e65cf3bc2d43ba7571d251ba5fc638b264bc9691/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fimpl%2Fprofiler_node.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fimpl%2Fprofiler_node.h?ref=e65cf3bc2d43ba7571d251ba5fc638b264bc9691", "patch": "@@ -1,6 +1,6 @@\n // -*- C++ -*-\n //\n-// Copyright (C) 2009, 2010 Free Software Foundation, Inc.\n+// Copyright (C) 2009, 2010, 2011 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the terms\n@@ -102,10 +102,10 @@ namespace __gnu_profile\n       if (!__s) \n \treturn 0;\n \n-      __UINTPTR_TYPE__ __index = 0;\n+      std::size_t __index = 0;\n       __stack_npt::const_iterator __it;\n       for (__it = __s->begin(); __it != __s->end(); ++__it)\n-\t__index += reinterpret_cast<__UINTPTR_TYPE__>(*__it);\n+\t__index += reinterpret_cast<std::size_t>(*__it);\n       return __index;\n     }\n "}]}