{"sha": "47aecf47d196c05b7b388e4fefbdce2f075bd4b0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDdhZWNmNDdkMTk2YzA1YjdiMzg4ZTRmZWZiZGNlMmYwNzViZDRiMA==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2005-04-27T21:41:15Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2005-04-27T21:41:15Z"}, "message": "re PR c/21159 (\"no effect\" warning despite cast to void*)\n\n\tPR c/21159\n\t* c-typeck.c (build_compound_expr): Don't warn for left-hand side\n\tbeing a compound expression whose right-hand side is cast to void.\n\ntestsuite:\n\t* gcc.dg/void-cast-1.c: New test.\n\nFrom-SVN: r98886", "tree": {"sha": "ce276778b8df2b8bd816052b690271a7aecc28d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ce276778b8df2b8bd816052b690271a7aecc28d3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/47aecf47d196c05b7b388e4fefbdce2f075bd4b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47aecf47d196c05b7b388e4fefbdce2f075bd4b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47aecf47d196c05b7b388e4fefbdce2f075bd4b0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47aecf47d196c05b7b388e4fefbdce2f075bd4b0/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c7466deed4c713f843bf5256ffddbeca135d1371", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7466deed4c713f843bf5256ffddbeca135d1371", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c7466deed4c713f843bf5256ffddbeca135d1371"}], "stats": {"total": 35, "additions": 32, "deletions": 3}, "files": [{"sha": "b5ba524960ba8f2e66f4314fda861a6adbaa9f4e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47aecf47d196c05b7b388e4fefbdce2f075bd4b0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47aecf47d196c05b7b388e4fefbdce2f075bd4b0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=47aecf47d196c05b7b388e4fefbdce2f075bd4b0", "patch": "@@ -1,3 +1,9 @@\n+2005-04-27  Joseph S. Myers  <joseph@codesourcery.com>\n+\n+\tPR c/21159\n+\t* c-typeck.c (build_compound_expr): Don't warn for left-hand side\n+\tbeing a compound expression whose right-hand side is cast to void.\n+\n 2005-04-27  Caroline Tice  <ctice@apple.com>\n \n         * bb-reorder.c (find_rarely_executed_basic_blocks_and_crossing_edges):"}, {"sha": "281d2b0cf1403ead1f9c6f7a649f9be103330a80", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47aecf47d196c05b7b388e4fefbdce2f075bd4b0/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47aecf47d196c05b7b388e4fefbdce2f075bd4b0/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=47aecf47d196c05b7b388e4fefbdce2f075bd4b0", "patch": "@@ -3109,9 +3109,16 @@ build_compound_expr (tree expr1, tree expr2)\n          statement: with -Wextra or -Wunused, we should warn if it doesn't have\n \t any side-effects, unless it was explicitly cast to (void).  */\n       if (warn_unused_value\n-           && !(TREE_CODE (expr1) == CONVERT_EXPR\n-                && VOID_TYPE_P (TREE_TYPE (expr1))))\n-        warning (0, \"left-hand operand of comma expression has no effect\");\n+\t  && !VOID_TYPE_P (TREE_TYPE (expr1)))\n+\t{\n+\t  if (TREE_CODE (expr1) == CONVERT_EXPR)\n+\t    ; /* (void) a, b */\n+\t  else if (TREE_CODE (expr1) == COMPOUND_EXPR\n+\t\t   && TREE_CODE (TREE_OPERAND (expr1, 1)) == CONVERT_EXPR)\n+\t    ; /* (void) a, (void) b, c */\n+\t  else\n+\t    warning (0, \"left-hand operand of comma expression has no effect\");\n+\t}\n     }\n \n   /* With -Wunused, we should also warn if the left-hand operand does have"}, {"sha": "b16bf69aba515213bd6b6aed04cd516fbe392ccb", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47aecf47d196c05b7b388e4fefbdce2f075bd4b0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47aecf47d196c05b7b388e4fefbdce2f075bd4b0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=47aecf47d196c05b7b388e4fefbdce2f075bd4b0", "patch": "@@ -1,3 +1,8 @@\n+2005-04-27  Joseph S. Myers  <joseph@codesourcery.com>\n+\n+\tPR c/21159\n+\t* gcc.dg/void-cast-1.c: New test.\n+\n 2005-04-27  Paolo Bonzini  <bonzini@gnu.org>\n \n \t* gcc.dg/tree-ssa/gen-vect-25.c: Make more portable."}, {"sha": "bd4e7b3bf7aca0b40c17b86c1996541fcc074378", "filename": "gcc/testsuite/gcc.dg/void-cast-1.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47aecf47d196c05b7b388e4fefbdce2f075bd4b0/gcc%2Ftestsuite%2Fgcc.dg%2Fvoid-cast-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47aecf47d196c05b7b388e4fefbdce2f075bd4b0/gcc%2Ftestsuite%2Fgcc.dg%2Fvoid-cast-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvoid-cast-1.c?ref=47aecf47d196c05b7b388e4fefbdce2f075bd4b0", "patch": "@@ -0,0 +1,11 @@\n+/* Don't warn where the left-hand side of a comma expression is a\n+   comma expression whose right-hand side is cast to void.  Bug\n+   21159.  */\n+/* Origin: Joseph Myers <joseph@codesourcery.com> */\n+/* { dg-do compile } */\n+/* { dg-options \"-Wall\" } */\n+\n+int a, b, c, d;\n+int e(void) { return (void)a, b; }\n+int f(void) { return (void)a, (void)b, c; }\n+int g(void) { return (void)a, (void)b, (void)c, d; }"}]}