{"sha": "867edb0b613898bec9128e1ecb055c3277e34dbc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODY3ZWRiMGI2MTM4OThiZWM5MTI4ZTFlY2IwNTVjMzI3N2UzNGRiYw==", "commit": {"author": {"name": "Hristian Kirtchev", "email": "kirtchev@adacore.com", "date": "2019-07-01T13:34:25Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-07-01T13:34:25Z"}, "message": "[Ada] Crash due to missing freeze nodes in transient scope\n\nThe following patch updates the freezing of expressions to insert the\ngenerated freeze nodes prior to the expression that produced them when\nthe context is a transient scope within a type initialization procedure.\nThis ensures that the nodes are properly interleaved with respect to the\nconstructs that generated them.\n\n2019-07-01  Hristian Kirtchev  <kirtchev@adacore.com>\n\ngcc/ada/\n\n\t* freeze.adb (Freeze_Expression): Remove the horrible useless\n\tname hiding of N. Insert the freeze nodes generated by the\n\texpression prior to the expression when the nearest enclosing\n\tscope is transient.\n\ngcc/testsuite/\n\n\t* gnat.dg/freezing1.adb, gnat.dg/freezing1.ads,\n\tgnat.dg/freezing1_pack.adb, gnat.dg/freezing1_pack.ads: New\n\ttestcase.\n\nFrom-SVN: r272854", "tree": {"sha": "82da28faf0e0f626407d351e1a5922e445560637", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/82da28faf0e0f626407d351e1a5922e445560637"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/867edb0b613898bec9128e1ecb055c3277e34dbc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/867edb0b613898bec9128e1ecb055c3277e34dbc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/867edb0b613898bec9128e1ecb055c3277e34dbc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/867edb0b613898bec9128e1ecb055c3277e34dbc/comments", "author": {"login": "kirtchev-adacore", "id": 60669983, "node_id": "MDQ6VXNlcjYwNjY5OTgz", "avatar_url": "https://avatars.githubusercontent.com/u/60669983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kirtchev-adacore", "html_url": "https://github.com/kirtchev-adacore", "followers_url": "https://api.github.com/users/kirtchev-adacore/followers", "following_url": "https://api.github.com/users/kirtchev-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/kirtchev-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/kirtchev-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kirtchev-adacore/subscriptions", "organizations_url": "https://api.github.com/users/kirtchev-adacore/orgs", "repos_url": "https://api.github.com/users/kirtchev-adacore/repos", "events_url": "https://api.github.com/users/kirtchev-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/kirtchev-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7b3a8d3440a387d326c7b659617fd126ff5371a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b3a8d3440a387d326c7b659617fd126ff5371a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b3a8d3440a387d326c7b659617fd126ff5371a6"}], "stats": {"total": 71, "additions": 67, "deletions": 4}, "files": [{"sha": "5d58a2cfab0b98cf8ea51a7a92ac29ca5462d99b", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/867edb0b613898bec9128e1ecb055c3277e34dbc/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/867edb0b613898bec9128e1ecb055c3277e34dbc/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=867edb0b613898bec9128e1ecb055c3277e34dbc", "patch": "@@ -1,3 +1,10 @@\n+2019-07-01  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* freeze.adb (Freeze_Expression): Remove the horrible useless\n+\tname hiding of N. Insert the freeze nodes generated by the\n+\texpression prior to the expression when the nearest enclosing\n+\tscope is transient.\n+\n 2019-07-01  Pierre-Marie de Rodat  <derodat@adacore.com>\n \n \t* doc/gnat_ugn/building_executable_programs_with_gnat.rst: Fix"}, {"sha": "f7e74afab64d2913dfbb4b403d2d8deadaa1f343", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 15, "deletions": 4, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/867edb0b613898bec9128e1ecb055c3277e34dbc/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/867edb0b613898bec9128e1ecb055c3277e34dbc/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=867edb0b613898bec9128e1ecb055c3277e34dbc", "patch": "@@ -7665,9 +7665,8 @@ package body Freeze is\n         or else Ekind (Current_Scope) = E_Void\n       then\n          declare\n-            N            : constant Node_Id := Current_Scope;\n-            Freeze_Nodes : List_Id          := No_List;\n-            Pos          : Int              := Scope_Stack.Last;\n+            Freeze_Nodes : List_Id := No_List;\n+            Pos          : Int     := Scope_Stack.Last;\n \n          begin\n             if Present (Desig_Typ) then\n@@ -7700,7 +7699,19 @@ package body Freeze is\n             end if;\n \n             if Is_Non_Empty_List (Freeze_Nodes) then\n-               if No (Scope_Stack.Table (Pos).Pending_Freeze_Actions) then\n+\n+               --  When the current scope is transient, insert the freeze nodes\n+               --  prior to the expression that produced them. Transient scopes\n+               --  may create additional declarations when finalizing objects\n+               --  or managing the secondary stack. Inserting the freeze nodes\n+               --  of those constructs prior to the scope would result in a\n+               --  freeze-before-declaration, therefore the freeze node must\n+               --  remain interleaved with their constructs.\n+\n+               if Scope_Is_Transient then\n+                  Insert_Actions (N, Freeze_Nodes);\n+\n+               elsif No (Scope_Stack.Table (Pos).Pending_Freeze_Actions) then\n                   Scope_Stack.Table (Pos).Pending_Freeze_Actions :=\n                     Freeze_Nodes;\n                else"}, {"sha": "a64cb528b277fd425e69c215268ab3c627298bf9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/867edb0b613898bec9128e1ecb055c3277e34dbc/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/867edb0b613898bec9128e1ecb055c3277e34dbc/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=867edb0b613898bec9128e1ecb055c3277e34dbc", "patch": "@@ -1,3 +1,9 @@\n+2019-07-01  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* gnat.dg/freezing1.adb, gnat.dg/freezing1.ads,\n+\tgnat.dg/freezing1_pack.adb, gnat.dg/freezing1_pack.ads: New\n+\ttestcase.\n+\n 2019-07-01  Jan Hubicka  <hubicka@ucw.cz>\n \n \tPR lto/91028"}, {"sha": "87d8246ef84085ea9b25ce870ec573405a953ef8", "filename": "gcc/testsuite/gnat.dg/freezing1.adb", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/867edb0b613898bec9128e1ecb055c3277e34dbc/gcc%2Ftestsuite%2Fgnat.dg%2Ffreezing1.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/867edb0b613898bec9128e1ecb055c3277e34dbc/gcc%2Ftestsuite%2Fgnat.dg%2Ffreezing1.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Ffreezing1.adb?ref=867edb0b613898bec9128e1ecb055c3277e34dbc", "patch": "@@ -0,0 +1,5 @@\n+--  { dg-do compile }\n+\n+package body Freezing1 is\n+   procedure Foo is null;\n+end Freezing1;"}, {"sha": "f81bc7898680fa211f9a638f2c9df7e73e3b8863", "filename": "gcc/testsuite/gnat.dg/freezing1.ads", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/867edb0b613898bec9128e1ecb055c3277e34dbc/gcc%2Ftestsuite%2Fgnat.dg%2Ffreezing1.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/867edb0b613898bec9128e1ecb055c3277e34dbc/gcc%2Ftestsuite%2Fgnat.dg%2Ffreezing1.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Ffreezing1.ads?ref=867edb0b613898bec9128e1ecb055c3277e34dbc", "patch": "@@ -0,0 +1,10 @@\n+with Freezing1_Pack; use Freezing1_Pack;\n+\n+package Freezing1 is\n+   type T is abstract tagged record\n+      Collection : access I_Interface_Collection'Class :=\n+        new I_Interface_Collection'Class'(Factory.Create_Collection);\n+   end record;\n+\n+   procedure Foo;\n+end Freezing1;"}, {"sha": "11172af7fae2d77416bd8bea45a62530b5fd04c4", "filename": "gcc/testsuite/gnat.dg/freezing1_pack.adb", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/867edb0b613898bec9128e1ecb055c3277e34dbc/gcc%2Ftestsuite%2Fgnat.dg%2Ffreezing1_pack.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/867edb0b613898bec9128e1ecb055c3277e34dbc/gcc%2Ftestsuite%2Fgnat.dg%2Ffreezing1_pack.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Ffreezing1_pack.adb?ref=867edb0b613898bec9128e1ecb055c3277e34dbc", "patch": "@@ -0,0 +1,8 @@\n+package body Freezing1_Pack is\n+   function Create_Collection\n+     (Factory : in T_Factory) return I_Interface_Collection'Class\n+   is\n+   begin\n+      return Implem'(null record);\n+   end Create_Collection;\n+end Freezing1_Pack;"}, {"sha": "74d88b8353f3d61d169011fc669e2cfc30c9c5b7", "filename": "gcc/testsuite/gnat.dg/freezing1_pack.ads", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/867edb0b613898bec9128e1ecb055c3277e34dbc/gcc%2Ftestsuite%2Fgnat.dg%2Ffreezing1_pack.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/867edb0b613898bec9128e1ecb055c3277e34dbc/gcc%2Ftestsuite%2Fgnat.dg%2Ffreezing1_pack.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Ffreezing1_pack.ads?ref=867edb0b613898bec9128e1ecb055c3277e34dbc", "patch": "@@ -0,0 +1,16 @@\n+package Freezing1_Pack is\n+   type T_Factory is abstract tagged private;\n+   type I_Interface_Collection is interface;\n+\n+   Factory : constant T_Factory;\n+\n+   function Create_Collection\n+     (Factory : in T_Factory) return I_Interface_Collection'Class;\n+\n+   type Implem is new I_Interface_Collection with null record;\n+\n+private\n+   type T_Factory is tagged null record;\n+\n+   Factory : constant T_Factory := T_Factory'(null record);\n+end Freezing1_Pack;"}]}