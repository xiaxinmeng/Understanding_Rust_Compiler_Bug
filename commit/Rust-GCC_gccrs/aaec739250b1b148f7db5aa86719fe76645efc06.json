{"sha": "aaec739250b1b148f7db5aa86719fe76645efc06", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWFlYzczOTI1MGIxYjE0OGY3ZGI1YWE4NjcxOWZlNzY2NDVlZmMwNg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-01-15T18:26:01Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-01-15T18:27:53Z"}, "message": "testsuite: Add testcase coverage for already fixed [PR96671]\n\nThe fix for this PR didn't come with any test coverage, I've added\ntests that make sure we optimize it no matter what order of the x ^ y ^ z\noperands is used.\n\n2021-01-15  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR tree-optimization/96671\n\t* gcc.dg/tree-ssa/pr96671-1.c: New test.\n\t* gcc.dg/tree-ssa/pr96671-2.c: New test.", "tree": {"sha": "ffe06c5160d1a256dfcd8bb939001dc6c6c2ae0a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ffe06c5160d1a256dfcd8bb939001dc6c6c2ae0a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aaec739250b1b148f7db5aa86719fe76645efc06", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aaec739250b1b148f7db5aa86719fe76645efc06", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aaec739250b1b148f7db5aa86719fe76645efc06", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aaec739250b1b148f7db5aa86719fe76645efc06/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a3128bf01289a243a9e0ebb4e34c23bcb04cb938", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3128bf01289a243a9e0ebb4e34c23bcb04cb938", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a3128bf01289a243a9e0ebb4e34c23bcb04cb938"}], "stats": {"total": 102, "additions": 102, "deletions": 0}, "files": [{"sha": "42c5b27b53fa03835bc86d9f1a27cf445046b5bb", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr96671-1.c", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aaec739250b1b148f7db5aa86719fe76645efc06/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr96671-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aaec739250b1b148f7db5aa86719fe76645efc06/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr96671-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr96671-1.c?ref=aaec739250b1b148f7db5aa86719fe76645efc06", "patch": "@@ -0,0 +1,51 @@\n+/* PR tree-optimization/96671 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-tree-optimized\" } */\n+/* { dg-final { scan-tree-dump-times \" \\\\^ \" 6 \"optimized\" } } */\n+/* { dg-final { scan-tree-dump-times \" ~\" 6 \"optimized\" } } */\n+/* { dg-final { scan-tree-dump-times \" & \" 6 \"optimized\" } } */\n+\n+int\n+foo (int a, int b, int c)\n+{\n+  return (a ^ b) & ((b ^ c) ^ a);\n+}\n+\n+int\n+bar (int a, int b, int c)\n+{\n+  return (a ^ b) & ((b ^ a) ^ c);\n+}\n+\n+int\n+baz (int a, int b, int c)\n+{\n+  return (a ^ b) & ((a ^ c) ^ b);\n+}\n+\n+int\n+qux (int a, int b, int c)\n+{\n+  int d = a ^ b;\n+  int e = b ^ c;\n+  int f = e ^ a;\n+  return d & f;\n+}\n+\n+int\n+corge (int a, int b, int c)\n+{\n+  int d = a ^ b;\n+  int e = b ^ a;\n+  int f = c ^ e;\n+  return d & f;\n+}\n+\n+int\n+garply (int a, int b, int c)\n+{\n+  int d = a ^ b;\n+  int e = a ^ c;\n+  int f = b ^ e;\n+  return d & f;\n+}"}, {"sha": "185fd1149e2f9da555d28b57a836f2012fa1a24b", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr96671-2.c", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aaec739250b1b148f7db5aa86719fe76645efc06/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr96671-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aaec739250b1b148f7db5aa86719fe76645efc06/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr96671-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr96671-2.c?ref=aaec739250b1b148f7db5aa86719fe76645efc06", "patch": "@@ -0,0 +1,51 @@\n+/* PR tree-optimization/96671 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-tree-optimized\" } */\n+/* { dg-final { scan-tree-dump-times \" \\\\^ \" 6 \"optimized\" } } */\n+/* { dg-final { scan-tree-dump-not \" ~\" \"optimized\" } } */\n+/* { dg-final { scan-tree-dump-times \" \\\\| \" 6 \"optimized\" } } */\n+\n+int\n+foo (int a, int b, int c)\n+{\n+  return (a ^ b) | ((b ^ c) ^ a);\n+}\n+\n+int\n+bar (int a, int b, int c)\n+{\n+  return (a ^ b) | ((b ^ a) ^ c);\n+}\n+\n+int\n+baz (int a, int b, int c)\n+{\n+  return (a ^ b) | ((a ^ c) ^ b);\n+}\n+\n+int\n+qux (int a, int b, int c)\n+{\n+  int d = a ^ b;\n+  int e = b ^ c;\n+  int f = e ^ a;\n+  return d | f;\n+}\n+\n+int\n+corge (int a, int b, int c)\n+{\n+  int d = a ^ b;\n+  int e = b ^ a;\n+  int f = c ^ e;\n+  return d | f;\n+}\n+\n+int\n+garply (int a, int b, int c)\n+{\n+  int d = a ^ b;\n+  int e = a ^ c;\n+  int f = b ^ e;\n+  return d | f;\n+}"}]}