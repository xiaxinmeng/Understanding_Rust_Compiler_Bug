{"sha": "f03eebe32515fc0a60deb6e42602300f737a98a8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjAzZWViZTMyNTE1ZmMwYTYwZGViNmU0MjYwMjMwMGY3MzdhOThhOA==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2000-03-15T17:17:45Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2000-03-15T17:17:45Z"}, "message": "tinfo2.cc (__ptr_to_member_data): Rename to ...\n\n\t* tinfo2.cc (__ptr_to_member_data): Rename to ...\n\t(__pointer_to_member_data): ... here. Adjust.\n\t* rtti.c (create_tinfo_types): Adjust.\n\nFrom-SVN: r32562", "tree": {"sha": "0e505fb36bad5336e153551e04f525ee88cf2c5b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0e505fb36bad5336e153551e04f525ee88cf2c5b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f03eebe32515fc0a60deb6e42602300f737a98a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f03eebe32515fc0a60deb6e42602300f737a98a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f03eebe32515fc0a60deb6e42602300f737a98a8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f03eebe32515fc0a60deb6e42602300f737a98a8/comments", "author": null, "committer": null, "parents": [{"sha": "beca355843b8ef99e14361aab391e7796e62f159", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/beca355843b8ef99e14361aab391e7796e62f159", "html_url": "https://github.com/Rust-GCC/gccrs/commit/beca355843b8ef99e14361aab391e7796e62f159"}], "stats": {"total": 30, "additions": 18, "deletions": 12}, "files": [{"sha": "f5b91d0292124980fae7ba4c2ca94bcc5f266fa4", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f03eebe32515fc0a60deb6e42602300f737a98a8/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f03eebe32515fc0a60deb6e42602300f737a98a8/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=f03eebe32515fc0a60deb6e42602300f737a98a8", "patch": "@@ -1,3 +1,9 @@\n+2000-03-15  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* tinfo2.cc (__ptr_to_member_data): Rename to ...\n+\t(__pointer_to_member_data): ... here. Adjust.\n+\t* rtti.c (create_tinfo_types): Adjust.\n+\n 2000-03-15  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* cp-tree.h (CPTI_REF_DESC_TYPE, ref_desc_type_node): Remove."}, {"sha": "e8034c3840ead475290598e58240dba7f466428b", "filename": "gcc/cp/rtti.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f03eebe32515fc0a60deb6e42602300f737a98a8/gcc%2Fcp%2Frtti.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f03eebe32515fc0a60deb6e42602300f737a98a8/gcc%2Fcp%2Frtti.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Frtti.c?ref=f03eebe32515fc0a60deb6e42602300f737a98a8", "patch": "@@ -1752,7 +1752,7 @@ create_tinfo_types ()\n   /* Pointer to member data type_info.  Add pointer to the class, pointer\n      to the member's type info and qualifications flags.  */\n   ptmd_desc_type_node = create_pseudo_type_info\n-       (\"__ptr_to_member_type_info\", 0,\n+       (\"__pointer_to_member_type_info\", 0,\n         build_lang_decl (FIELD_DECL, NULL_TREE, ptr_type_info),\n         build_lang_decl (FIELD_DECL, NULL_TREE, ptr_type_info),\n         build_lang_decl (FIELD_DECL, NULL_TREE, integer_type_node),"}, {"sha": "c66f8a3eeabbc765aa5f28c212ff2babbfde65e6", "filename": "gcc/cp/tinfo2.cc", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f03eebe32515fc0a60deb6e42602300f737a98a8/gcc%2Fcp%2Ftinfo2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f03eebe32515fc0a60deb6e42602300f737a98a8/gcc%2Fcp%2Ftinfo2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftinfo2.cc?ref=f03eebe32515fc0a60deb6e42602300f737a98a8", "patch": "@@ -163,9 +163,9 @@ class __enum_type_info : public type_info {\n };\n \n // type information for a pointer to member variable (not function)\n-class __ptr_to_member_type_info : public type_info {\n+class __pointer_to_member_type_info : public type_info {\n public:\n-  virtual ~__ptr_to_member_type_info ();\n+  virtual ~__pointer_to_member_type_info ();\n // external parts\n   const __class_type_info *klass;   // class of the member\n   const type_info *type;            // type of the member\n@@ -178,10 +178,10 @@ class __ptr_to_member_type_info : public type_info {\n   };\n \n public:\n-  explicit __ptr_to_member_type_info (const char *n,\n-                                      const __class_type_info *klass_,\n-                                      const type_info *type_,\n-                                      int quals_)\n+  explicit __pointer_to_member_type_info (const char *n,\n+                                          const __class_type_info *klass_,\n+                                          const type_info *type_,\n+                                          int quals_)\n     : type_info (n), klass (klass_), type (type_), quals (quals_)\n     { }\n \n@@ -220,8 +220,8 @@ __enum_type_info::\n ~__enum_type_info ()\n {}\n \n-__ptr_to_member_type_info::\n-~__ptr_to_member_type_info ()\n+__pointer_to_member_type_info::\n+~__pointer_to_member_type_info ()\n {}\n \n bool __pointer_type_info::\n@@ -271,7 +271,7 @@ do_catch (const type_info *thr_type,\n   return target->do_catch (thrown_type->target, thr_obj, outer + 2);\n }\n \n-bool __ptr_to_member_type_info::\n+bool __pointer_to_member_type_info::\n do_catch (const type_info *thr_type,\n           void **thr_obj,\n           unsigned outer) const\n@@ -287,8 +287,8 @@ do_catch (const type_info *thr_type,\n     // But for that to be valid, our outer pointers must be const qualified.\n     return false;\n   \n-  const __ptr_to_member_type_info *thrown_type =\n-    static_cast <const __ptr_to_member_type_info *> (thr_type);\n+  const __pointer_to_member_type_info *thrown_type =\n+    static_cast <const __pointer_to_member_type_info *> (thr_type);\n   \n   if (thrown_type->quals & ~quals)\n     // We're less qualified."}]}