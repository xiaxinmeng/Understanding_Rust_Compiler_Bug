{"sha": "f04fd9038ee58325748fea2f085d43eddcdb37ad", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjA0ZmQ5MDM4ZWU1ODMyNTc0OGZlYTJmMDg1ZDQzZWRkY2RiMzdhZA==", "commit": {"author": {"name": "Tom de Vries", "email": "tom@codesourcery.com", "date": "2018-04-09T13:22:00Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2018-04-09T13:22:00Z"}, "message": "[nvptx] Add memory_barrier insn\n\n2018-04-09  Tom de Vries  <tom@codesourcery.com>\n\n\tPR target/84041\n\t* config/nvptx/nvptx.md (define_c_enum \"unspecv\"): Add UNSPECV_MEMBAR.\n\t(define_expand \"*memory_barrier\"): New define_expand.\n\t(define_insn \"memory_barrier\"): New insn.\n\nFrom-SVN: r259233", "tree": {"sha": "6ae3600e367946c582673b0bde38678b21a36855", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6ae3600e367946c582673b0bde38678b21a36855"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f04fd9038ee58325748fea2f085d43eddcdb37ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f04fd9038ee58325748fea2f085d43eddcdb37ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f04fd9038ee58325748fea2f085d43eddcdb37ad", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f04fd9038ee58325748fea2f085d43eddcdb37ad/comments", "author": null, "committer": null, "parents": [{"sha": "6abce7391ae63fd2808aa471aa9dd2679eb00496", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6abce7391ae63fd2808aa471aa9dd2679eb00496", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6abce7391ae63fd2808aa471aa9dd2679eb00496"}], "stats": {"total": 29, "additions": 29, "deletions": 0}, "files": [{"sha": "165b968b0626777fcc08d3bb6328fd0635de8748", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f04fd9038ee58325748fea2f085d43eddcdb37ad/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f04fd9038ee58325748fea2f085d43eddcdb37ad/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f04fd9038ee58325748fea2f085d43eddcdb37ad", "patch": "@@ -1,3 +1,10 @@\n+2018-04-09  Tom de Vries  <tom@codesourcery.com>\n+\n+\tPR target/84041\n+\t* config/nvptx/nvptx.md (define_c_enum \"unspecv\"): Add UNSPECV_MEMBAR.\n+\t(define_expand \"*memory_barrier\"): New define_expand.\n+\t(define_insn \"memory_barrier\"): New insn.\n+\n 2018-04-09  Andrey Belevantsev  <abel@ispras.ru>\n \n \tPR rtl-optimization/80463"}, {"sha": "68bba369a1237f3f65c75d2544e72ecc86065bc4", "filename": "gcc/config/nvptx/nvptx.md", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f04fd9038ee58325748fea2f085d43eddcdb37ad/gcc%2Fconfig%2Fnvptx%2Fnvptx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f04fd9038ee58325748fea2f085d43eddcdb37ad/gcc%2Fconfig%2Fnvptx%2Fnvptx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnvptx%2Fnvptx.md?ref=f04fd9038ee58325748fea2f085d43eddcdb37ad", "patch": "@@ -55,6 +55,7 @@\n    UNSPECV_CAS\n    UNSPECV_XCHG\n    UNSPECV_BARSYNC\n+   UNSPECV_MEMBAR\n    UNSPECV_DIM_POS\n \n    UNSPECV_FORK\n@@ -1459,6 +1460,27 @@\n   \"\\\\tbar.sync\\\\t%0;\"\n   [(set_attr \"predicable\" \"false\")])\n \n+(define_expand \"memory_barrier\"\n+  [(set (match_dup 0)\n+\t(unspec_volatile:BLK [(match_dup 0)] UNSPECV_MEMBAR))]\n+  \"\"\n+{\n+  operands[0] = gen_rtx_MEM (BLKmode, gen_rtx_SCRATCH (Pmode));\n+  MEM_VOLATILE_P (operands[0]) = 1;\n+})\n+\n+;; Ptx defines the memory barriers membar.cta, membar.gl and membar.sys\n+;; (corresponding to cuda functions threadfence_block, threadfence and\n+;; threadfence_system).  For the insn memory_barrier we use membar.sys.  This\n+;; may be overconservative, but before using membar.gl instead we'll need to\n+;; explain in detail why it's safe to use.  For now, use membar.sys.\n+(define_insn \"*memory_barrier\"\n+  [(set (match_operand:BLK 0 \"\" \"\")\n+\t(unspec_volatile:BLK [(match_dup 0)] UNSPECV_MEMBAR))]\n+  \"\"\n+  \"\\\\tmembar.sys;\"\n+  [(set_attr \"predicable\" \"false\")])\n+\n (define_insn \"nvptx_nounroll\"\n   [(unspec_volatile [(const_int 0)] UNSPECV_NOUNROLL)]\n   \"\""}]}