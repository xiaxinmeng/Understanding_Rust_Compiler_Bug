{"sha": "2942db6337e4982a520f596554c9ae409afc69af", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mjk0MmRiNjMzN2U0OTgyYTUyMGY1OTY1NTRjOWFlNDA5YWZjNjlhZg==", "commit": {"author": {"name": "David Adler", "email": "d.adler.s@gmail.com", "date": "2012-08-13T19:56:50Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2012-08-13T19:56:50Z"}, "message": "re PR libstdc++/54185 (condition_variable not properly destructed)\n\n2012-08-13  David Adler  <d.adler.s@gmail.com>\n\n\tPR libstdc++/54185\n\t* src/c++11/condition_variable.cc (condition_variable): Always\n\tdestroy native type in destructor.\n\t* testsuite/30_threads/condition_variable/54185.cc: New.\n\nFrom-SVN: r190356", "tree": {"sha": "3acdeb48ee81a3d57e4d44a6da604f2a8cb4d082", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3acdeb48ee81a3d57e4d44a6da604f2a8cb4d082"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2942db6337e4982a520f596554c9ae409afc69af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2942db6337e4982a520f596554c9ae409afc69af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2942db6337e4982a520f596554c9ae409afc69af", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2942db6337e4982a520f596554c9ae409afc69af/comments", "author": {"login": "adlerd", "id": 2301999, "node_id": "MDQ6VXNlcjIzMDE5OTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2301999?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adlerd", "html_url": "https://github.com/adlerd", "followers_url": "https://api.github.com/users/adlerd/followers", "following_url": "https://api.github.com/users/adlerd/following{/other_user}", "gists_url": "https://api.github.com/users/adlerd/gists{/gist_id}", "starred_url": "https://api.github.com/users/adlerd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adlerd/subscriptions", "organizations_url": "https://api.github.com/users/adlerd/orgs", "repos_url": "https://api.github.com/users/adlerd/repos", "events_url": "https://api.github.com/users/adlerd/events{/privacy}", "received_events_url": "https://api.github.com/users/adlerd/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "181a5a136f5b7e1690e94591d608c851bca19451", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/181a5a136f5b7e1690e94591d608c851bca19451", "html_url": "https://github.com/Rust-GCC/gccrs/commit/181a5a136f5b7e1690e94591d608c851bca19451"}], "stats": {"total": 74, "additions": 71, "deletions": 3}, "files": [{"sha": "9ffd3b367aa79155a816f8b8ca23dd6ca409695d", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2942db6337e4982a520f596554c9ae409afc69af/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2942db6337e4982a520f596554c9ae409afc69af/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=2942db6337e4982a520f596554c9ae409afc69af", "patch": "@@ -1,3 +1,10 @@\n+2012-08-13  David Adler  <d.adler.s@gmail.com>\n+\n+\tPR libstdc++/54185\n+\t* src/c++11/condition_variable.cc (condition_variable): Always\n+\tdestroy native type in destructor.\n+\t* testsuite/30_threads/condition_variable/54185.cc: New.\n+\n 2012-08-13  Fran\u00e7ois Dumont  <fdumont@gcc.gnu.org>\n \t    Ollie Wild  <aaw@google.com>\n "}, {"sha": "001d95c3289c10fd8a61dc67460a20e00fc3406c", "filename": "libstdc++-v3/src/c++11/condition_variable.cc", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2942db6337e4982a520f596554c9ae409afc69af/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fcondition_variable.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2942db6337e4982a520f596554c9ae409afc69af/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fcondition_variable.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fcondition_variable.cc?ref=2942db6337e4982a520f596554c9ae409afc69af", "patch": "@@ -1,6 +1,6 @@\n // condition_variable -*- C++ -*-\n \n-// Copyright (C) 2008, 2009, 2010 Free Software Foundation, Inc.\n+// Copyright (C) 2008-2012 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -32,20 +32,19 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n #ifdef __GTHREAD_COND_INIT\n   condition_variable::condition_variable() noexcept = default;\n-  condition_variable::~condition_variable() noexcept = default;\n #else\n   condition_variable::condition_variable() noexcept\n   {\n     __GTHREAD_COND_INIT_FUNCTION(&_M_cond);\n   }\n+#endif\n \n   condition_variable::~condition_variable() noexcept\n   {\n     // XXX no thread blocked\n     /* int __e = */ __gthread_cond_destroy(&_M_cond);\n     // if __e == EBUSY then blocked\n   }\n-#endif\n \n   void\n   condition_variable::wait(unique_lock<mutex>& __lock)"}, {"sha": "576967087661567fd33a0c0e4f85fb9fff3610e5", "filename": "libstdc++-v3/testsuite/30_threads/condition_variable/54185.cc", "status": "added", "additions": 62, "deletions": 0, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2942db6337e4982a520f596554c9ae409afc69af/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fcondition_variable%2F54185.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2942db6337e4982a520f596554c9ae409afc69af/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fcondition_variable%2F54185.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fcondition_variable%2F54185.cc?ref=2942db6337e4982a520f596554c9ae409afc69af", "patch": "@@ -0,0 +1,62 @@\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n+// { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n+// { dg-require-cstdint \"\" }\n+// { dg-require-gthreads \"\" }\n+\n+// Copyright (C) 2012 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <vector>\n+#include <mutex>\n+#include <condition_variable>\n+#include <thread>\n+\n+// PR libstdc++/54185\n+\n+std::condition_variable* cond = nullptr;\n+std::mutex mx;\n+int started = 0;\n+int constexpr NUM_THREADS = 10;\n+\n+void do_thread_a()\n+{\n+  std::unique_lock<std::mutex> lock(mx);\n+  if(++started >= NUM_THREADS)\n+  {\n+    cond->notify_all();\n+    delete cond;\n+    cond = nullptr;\n+  }\n+  else\n+    cond->wait(lock);\n+}\n+\n+int main(){\n+  std::vector<std::thread> vec;\n+  for(int j = 0; j < 1000; ++j)\n+  {\n+    started = 0;\n+    cond = new std::condition_variable;\n+    for (int i = 0; i < NUM_THREADS; ++i)\n+      vec.emplace_back(&do_thread_a);\n+    for (int i = 0; i < NUM_THREADS; ++i)\n+      vec[i].join();\n+    vec.clear();\n+  }\n+}"}]}