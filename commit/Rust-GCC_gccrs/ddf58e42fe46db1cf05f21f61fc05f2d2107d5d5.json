{"sha": "ddf58e42fe46db1cf05f21f61fc05f2d2107d5d5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGRmNThlNDJmZTQ2ZGIxY2YwNWYyMWY2MWZjMDVmMmQyMTA3ZDVkNQ==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2010-06-18T22:23:40Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2010-06-18T22:23:40Z"}, "message": "re PR fortran/44556 (incorrect error:  Stat-variable at (1) shall not be DEALLOCATEd within the same DEALLOCATE statement)\n\n2010-06-18  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/44556\n        * resolve.c (resolve_allocate_deallocate): Properly check\n        part-refs in stat=/errmsg= for invalid use.\n\n2010-06-18  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/44556\n        * gfortran.dg/allocate_alloc_opt_11.f90: New.\n\nFrom-SVN: r161011", "tree": {"sha": "21ccfc87d5e4e9a78917b144a93462408315e5f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/21ccfc87d5e4e9a78917b144a93462408315e5f8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ddf58e42fe46db1cf05f21f61fc05f2d2107d5d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddf58e42fe46db1cf05f21f61fc05f2d2107d5d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ddf58e42fe46db1cf05f21f61fc05f2d2107d5d5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddf58e42fe46db1cf05f21f61fc05f2d2107d5d5/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ca0cb93e349680470ab76b29525e63f6f8dd3ba5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca0cb93e349680470ab76b29525e63f6f8dd3ba5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca0cb93e349680470ab76b29525e63f6f8dd3ba5"}], "stats": {"total": 87, "additions": 83, "deletions": 4}, "files": [{"sha": "dfaeeec31eab27a2c33270b60ec56f0a9918e9fc", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddf58e42fe46db1cf05f21f61fc05f2d2107d5d5/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddf58e42fe46db1cf05f21f61fc05f2d2107d5d5/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=ddf58e42fe46db1cf05f21f61fc05f2d2107d5d5", "patch": "@@ -1,3 +1,9 @@\n+2010-06-18  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/44556\n+\t* resolve.c (resolve_allocate_deallocate): Properly check\n+\tpart-refs in stat=/errmsg= for invalid use.\n+\n 2010-06-17  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/44558"}, {"sha": "0951498e2db26c3e79cc098a3dd31471edf25ad1", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 46, "deletions": 4, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddf58e42fe46db1cf05f21f61fc05f2d2107d5d5/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddf58e42fe46db1cf05f21f61fc05f2d2107d5d5/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=ddf58e42fe46db1cf05f21f61fc05f2d2107d5d5", "patch": "@@ -6591,8 +6591,29 @@ resolve_allocate_deallocate (gfc_code *code, const char *fcn)\n \n       for (p = code->ext.alloc.list; p; p = p->next)\n \tif (p->expr->symtree->n.sym->name == stat->symtree->n.sym->name)\n-\t  gfc_error (\"Stat-variable at %L shall not be %sd within \"\n-\t\t     \"the same %s statement\", &stat->where, fcn, fcn);\n+\t  {\n+\t    gfc_ref *ref1, *ref2;\n+\t    bool found = true;\n+\n+\t    for (ref1 = p->expr->ref, ref2 = stat->ref; ref1 && ref2;\n+\t\t ref1 = ref1->next, ref2 = ref2->next)\n+\t      {\n+\t\tif (ref1->type != REF_COMPONENT || ref2->type != REF_COMPONENT)\n+\t\t  continue;\n+\t\tif (ref1->u.c.component->name != ref2->u.c.component->name)\n+\t\t  {\n+\t\t    found = false;\n+\t\t    break;\n+\t\t  }\n+\t      }\n+\n+\t    if (found)\n+\t      {\n+\t\tgfc_error (\"Stat-variable at %L shall not be %sd within \"\n+\t\t\t   \"the same %s statement\", &stat->where, fcn, fcn);\n+\t\tbreak;\n+\t      }\n+\t  }\n     }\n \n   /* Check the errmsg variable.  */\n@@ -6620,8 +6641,29 @@ resolve_allocate_deallocate (gfc_code *code, const char *fcn)\n \n       for (p = code->ext.alloc.list; p; p = p->next)\n \tif (p->expr->symtree->n.sym->name == errmsg->symtree->n.sym->name)\n-\t  gfc_error (\"Errmsg-variable at %L shall not be %sd within \"\n-\t\t     \"the same %s statement\", &errmsg->where, fcn, fcn);\n+\t  {\n+\t    gfc_ref *ref1, *ref2;\n+\t    bool found = true;\n+\n+\t    for (ref1 = p->expr->ref, ref2 = errmsg->ref; ref1 && ref2;\n+\t\t ref1 = ref1->next, ref2 = ref2->next)\n+\t      {\n+\t\tif (ref1->type != REF_COMPONENT || ref2->type != REF_COMPONENT)\n+\t\t  continue;\n+\t\tif (ref1->u.c.component->name != ref2->u.c.component->name)\n+\t\t  {\n+\t\t    found = false;\n+\t\t    break;\n+\t\t  }\n+\t      }\n+\n+\t    if (found)\n+\t      {\n+\t\tgfc_error (\"Errmsg-variable at %L shall not be %sd within \"\n+\t\t\t   \"the same %s statement\", &errmsg->where, fcn, fcn);\n+\t\tbreak;\n+\t      }\n+\t  }\n     }\n \n   /* Check that an allocate-object appears only once in the statement.  "}, {"sha": "2ac6bd61548810f65e56ca7c6a9f988aeaf2a34e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddf58e42fe46db1cf05f21f61fc05f2d2107d5d5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddf58e42fe46db1cf05f21f61fc05f2d2107d5d5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ddf58e42fe46db1cf05f21f61fc05f2d2107d5d5", "patch": "@@ -1,3 +1,8 @@\n+2010-06-18  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/44556\n+\t* gfortran.dg/allocate_alloc_opt_11.f90: New.\n+\n 2010-06-18  Bernd Schmidt  <bernds@codesourcery.com>\n \n \t* gcc.target/arm/pr40900.c: New test."}, {"sha": "c8c7ac633cd2ddd2cf944db14fa7b405e0d87725", "filename": "gcc/testsuite/gfortran.dg/allocate_alloc_opt_11.f90", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddf58e42fe46db1cf05f21f61fc05f2d2107d5d5/gcc%2Ftestsuite%2Fgfortran.dg%2Fallocate_alloc_opt_11.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddf58e42fe46db1cf05f21f61fc05f2d2107d5d5/gcc%2Ftestsuite%2Fgfortran.dg%2Fallocate_alloc_opt_11.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fallocate_alloc_opt_11.f90?ref=ddf58e42fe46db1cf05f21f61fc05f2d2107d5d5", "patch": "@@ -0,0 +1,26 @@\n+! { dg-do compile }\n+!\n+! PR fortran/44556\n+!\n+! Contributed by Jonathan Hogg and Steve Kargl.\n+!\n+program oh_my\n+   implicit none\n+   type a\n+      integer, allocatable :: b(:), d(:)\n+      character(len=80) :: err\n+      character(len=80), allocatable :: str(:)\n+      integer :: src\n+   end type a\n+\n+   integer j\n+   type(a) :: c\n+   c%err = 'ok'\n+   allocate(c%d(1)) \n+   allocate(c%b(2), errmsg=c%err, stat=c%d(1)) ! OK\n+   deallocate(c%b, errmsg=c%err, stat=c%d(1))  ! OK\n+   allocate(c%b(2), errmsg=c%err, stat=c%b(1)) ! { dg-error \"the same ALLOCATE statement\" }\n+   deallocate(c%b, errmsg=c%err, stat=c%b(1))  ! { dg-error \"the same DEALLOCATE statement\" }\n+   allocate(c%str(2), errmsg=c%str(1), stat=j) ! { dg-error \"the same ALLOCATE statement\" }\n+   deallocate(c%str, errmsg=c%str(1), stat=j)  ! { dg-error \"the same DEALLOCATE statement\" }\n+end program oh_my"}]}