{"sha": "15d5fe337ee87efb5aaa8b65aeb44cb672d4be5a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTVkNWZlMzM3ZWU4N2VmYjVhYWE4YjY1YWViNDRjYjY3MmQ0YmU1YQ==", "commit": {"author": {"name": "Daniel Berlin", "email": "dberlin@dberlin.org", "date": "2008-10-20T21:23:22Z"}, "committer": {"name": "Daniel Berlin", "email": "dberlin@gcc.gnu.org", "date": "2008-10-20T21:23:22Z"}, "message": "tree-ssa-pre.c (insert_into_preds_of_block): Don't rewrite constant part of expression.\n\n2008-10-20  Daniel Berlin  <dberlin@dberlin.org>\n\n\t* tree-ssa-pre.c (insert_into_preds_of_block): Don't rewrite constant\n\tpart of expression.\n\nFrom-SVN: r141249", "tree": {"sha": "d4a933e72b887f8b892baaa1650460eabbb9c54a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d4a933e72b887f8b892baaa1650460eabbb9c54a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/15d5fe337ee87efb5aaa8b65aeb44cb672d4be5a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15d5fe337ee87efb5aaa8b65aeb44cb672d4be5a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/15d5fe337ee87efb5aaa8b65aeb44cb672d4be5a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15d5fe337ee87efb5aaa8b65aeb44cb672d4be5a/comments", "author": {"login": "dberlin", "id": 324715, "node_id": "MDQ6VXNlcjMyNDcxNQ==", "avatar_url": "https://avatars.githubusercontent.com/u/324715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dberlin", "html_url": "https://github.com/dberlin", "followers_url": "https://api.github.com/users/dberlin/followers", "following_url": "https://api.github.com/users/dberlin/following{/other_user}", "gists_url": "https://api.github.com/users/dberlin/gists{/gist_id}", "starred_url": "https://api.github.com/users/dberlin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dberlin/subscriptions", "organizations_url": "https://api.github.com/users/dberlin/orgs", "repos_url": "https://api.github.com/users/dberlin/repos", "events_url": "https://api.github.com/users/dberlin/events{/privacy}", "received_events_url": "https://api.github.com/users/dberlin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "84541525984aa2183d0149c3e61aa9b7193b1f9c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84541525984aa2183d0149c3e61aa9b7193b1f9c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/84541525984aa2183d0149c3e61aa9b7193b1f9c"}], "stats": {"total": 19, "additions": 8, "deletions": 11}, "files": [{"sha": "ce553c6bf83fa8ced853a2e0a0f2a9ef348556c5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15d5fe337ee87efb5aaa8b65aeb44cb672d4be5a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15d5fe337ee87efb5aaa8b65aeb44cb672d4be5a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=15d5fe337ee87efb5aaa8b65aeb44cb672d4be5a", "patch": "@@ -1,3 +1,8 @@\n+2008-10-20  Daniel Berlin  <dberlin@dberlin.org>\n+\n+\t* tree-ssa-pre.c (insert_into_preds_of_block): Don't rewrite constant\n+\tpart of expression.\n+\n 2008-10-20  Tobias Schl\u00fcter  <tobi@gcc.gnu.org>\n \n \t* doc/install.texi: Fix typos in previous patch."}, {"sha": "dc576c5a3d7d615605b89ef9c37507bc063762a5", "filename": "gcc/tree-ssa-pre.c", "status": "modified", "additions": 3, "deletions": 11, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15d5fe337ee87efb5aaa8b65aeb44cb672d4be5a/gcc%2Ftree-ssa-pre.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15d5fe337ee87efb5aaa8b65aeb44cb672d4be5a/gcc%2Ftree-ssa-pre.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-pre.c?ref=15d5fe337ee87efb5aaa8b65aeb44cb672d4be5a", "patch": "@@ -3019,23 +3019,15 @@ insert_into_preds_of_block (basic_block block, unsigned int exprnum,\n \t     should give us back a constant with the right type.\n \t  */\n \t  tree constant = PRE_EXPR_CONSTANT (eprime);\n-\t  if (TREE_TYPE (constant) != type)\n+\t  if (!useless_type_conversion_p (type, TREE_TYPE (constant)))\n \t    {\n \t      tree builtexpr = fold_convert (type, constant);\n-\t      if (is_gimple_min_invariant (builtexpr))\n-\t\t{\n-\t\t  PRE_EXPR_CONSTANT (eprime) = builtexpr;\n-\t\t}\n-\t      else\n+\t      if (!is_gimple_min_invariant (builtexpr)) \n \t\t{\n \t\t  tree forcedexpr = force_gimple_operand (builtexpr,\n \t\t\t\t\t\t\t  &stmts, true,\n \t\t\t\t\t\t\t  NULL);\n-\t\t  if (is_gimple_min_invariant (forcedexpr))\n-\t\t    {\n-\t\t      PRE_EXPR_CONSTANT (eprime) = forcedexpr;\n-\t\t    }\n-\t\t  else\n+\t\t  if (!is_gimple_min_invariant (forcedexpr))\n \t\t    {\n \t\t      if (forcedexpr != builtexpr)\n \t\t\t{"}]}