{"sha": "979988f32cd329b479079a32a12445f53125108d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTc5OTg4ZjMyY2QzMjliNDc5MDc5YTMyYTEyNDQ1ZjUzMTI1MTA4ZA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2001-03-28T05:04:20Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2001-03-28T05:04:20Z"}, "message": "* parse.y (source_end_java_method): Likewise.\n\nFrom-SVN: r40904", "tree": {"sha": "dfd9ff74b80271cbef0f61b55a99c39fe3afe2e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dfd9ff74b80271cbef0f61b55a99c39fe3afe2e5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/979988f32cd329b479079a32a12445f53125108d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/979988f32cd329b479079a32a12445f53125108d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/979988f32cd329b479079a32a12445f53125108d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/979988f32cd329b479079a32a12445f53125108d/comments", "author": null, "committer": null, "parents": [{"sha": "e64a65418f617483dc4e65ee4ea83162984ba73f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e64a65418f617483dc4e65ee4ea83162984ba73f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e64a65418f617483dc4e65ee4ea83162984ba73f"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "5e9a97d02968adc2c396fa9a593d46587c5771fc", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/979988f32cd329b479079a32a12445f53125108d/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/979988f32cd329b479079a32a12445f53125108d/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=979988f32cd329b479079a32a12445f53125108d", "patch": "@@ -2,6 +2,7 @@\n \n \t* decl.c (end_java_method): Rename asynchronous_exceptions to\n \tflag_non_call_exceptions.\n+\t* parse.y (source_end_java_method): Likewise.\n \n 2001-03-27  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n "}, {"sha": "4e688bba60e9b403189147dd311cb2652c969bc3", "filename": "gcc/java/parse.y", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/979988f32cd329b479079a32a12445f53125108d/gcc%2Fjava%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/979988f32cd329b479079a32a12445f53125108d/gcc%2Fjava%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.y?ref=979988f32cd329b479079a32a12445f53125108d", "patch": "@@ -7117,7 +7117,7 @@ static void\n source_end_java_method ()\n {\n   tree fndecl = current_function_decl;\n-  int flag_asynchronous_exceptions = asynchronous_exceptions;\n+  int flag_flag_non_call_exceptions = flag_non_call_exceptions;\n \n   if (!fndecl)\n     return;\n@@ -7154,19 +7154,19 @@ source_end_java_method ()\n       expand_function_end (input_filename, lineno, 0);\n \n       /* FIXME: If the current method contains any exception handlers,\n-\t force asynchronous_exceptions: this is necessary because signal\n+\t force flag_non_call_exceptions: this is necessary because signal\n \t handlers in libjava may throw exceptions.  This is far from being\n \t a perfect solution, but it's better than doing nothing at all.*/\n       if (catch_clauses)\n-\tasynchronous_exceptions = 1;\n+\tflag_non_call_exceptions = 1;\n \n       /* Run the optimizers and output assembler code for this function. */\n       rest_of_compilation (fndecl);\n     }\n \n   current_function_decl = NULL_TREE;\n   java_parser_context_restore_global ();\n-  asynchronous_exceptions = flag_asynchronous_exceptions;\n+  flag_non_call_exceptions = flag_flag_non_call_exceptions;\n }\n \n /* Record EXPR in the current function block. Complements compound"}]}