{"sha": "aa684c9468bc7dd5533a8421decb29340834bb92", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWE2ODRjOTQ2OGJjN2RkNTUzM2E4NDIxZGVjYjI5MzQwODM0YmI5Mg==", "commit": {"author": {"name": "Steve Chamberlain", "email": "sac@gnu.org", "date": "1993-05-04T15:21:00Z"}, "committer": {"name": "Steve Chamberlain", "email": "sac@gnu.org", "date": "1993-05-04T15:21:00Z"}, "message": "(arith patterns): Rework constraints.\n\nFrom-SVN: r4319", "tree": {"sha": "c0bfbd212dda57800a6f2f99ea3b10e11e670072", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c0bfbd212dda57800a6f2f99ea3b10e11e670072"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aa684c9468bc7dd5533a8421decb29340834bb92", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa684c9468bc7dd5533a8421decb29340834bb92", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa684c9468bc7dd5533a8421decb29340834bb92", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa684c9468bc7dd5533a8421decb29340834bb92/comments", "author": null, "committer": null, "parents": [{"sha": "8c699e9b7451319024676c88546580073e0e692f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c699e9b7451319024676c88546580073e0e692f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c699e9b7451319024676c88546580073e0e692f"}], "stats": {"total": 306, "additions": 154, "deletions": 152}, "files": [{"sha": "e7c52ee1385fb7f75670e21ebffbaa46a01eee80", "filename": "gcc/config/sh/sh.md", "status": "modified", "additions": 154, "deletions": 152, "changes": 306, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa684c9468bc7dd5533a8421decb29340834bb92/gcc%2Fconfig%2Fsh%2Fsh.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa684c9468bc7dd5533a8421decb29340834bb92/gcc%2Fconfig%2Fsh%2Fsh.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.md?ref=aa684c9468bc7dd5533a8421decb29340834bb92", "patch": "@@ -92,52 +92,52 @@\n ;; -------------------------------------------------------------------------\n \n (define_insn \"\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n+  [(set (match_operand:SI 0 \"arith_reg_operand\" \"=r\")\n \t(eq:SI (reg:SI 18)\n \t       (const_int 1)))]\n   \"\"\n   \"movt\t%0 !movt1\")\n   \n (define_insn \"\"\n-  [(set (reg:SI 18) (gt (match_operand:SI 0 \"register_operand\" \"r\")\n+  [(set (reg:SI 18) (gt (match_operand:SI 0 \"arith_reg_operand\" \"r\")\n \t\t  (const_int 0)))]\n   \"\"\n   \"cmp/pl\t%0\")\n \n (define_insn \"\"\n-  [(set (reg:SI 18) (ge (match_operand:SI 0 \"register_operand\" \"r\")\n+  [(set (reg:SI 18) (ge (match_operand:SI 0 \"arith_reg_operand\" \"r\")\n \t\t  (const_int 0)))]\n   \"\"\n   \"cmp/pz\t%0\")\n \n (define_insn \"cmpeqsi_t\"\n-  [(set (reg:SI 18) (eq (match_operand:SI 0 \"register_operand\" \"r,z\")\n+  [(set (reg:SI 18) (eq (match_operand:SI 0 \"arith_reg_operand\" \"r,z\")\n \t\t  (match_operand:SI 1 \"arith_operand\" \"r,I\")))]\n   \"\"\n   \"cmp/eq\t%1,%0\")\n \n \n (define_insn \"cmpgtsi_t\"\n-  [(set (reg:SI 18) (gt (match_operand:SI 0 \"register_operand\" \"r\")\n-\t\t  (match_operand:SI 1 \"register_operand\" \"r\")))]\n+  [(set (reg:SI 18) (gt (match_operand:SI 0 \"arith_reg_operand\" \"r\")\n+\t\t  (match_operand:SI 1 \"arith_reg_operand\" \"r\")))]\n   \"\"\n   \"cmp/gt\t%1,%0\")\n \n (define_insn \"cmpgesi_t\"\n-  [(set (reg:SI 18) (ge (match_operand:SI 0 \"register_operand\" \"r\")\n-\t\t  (match_operand:SI 1 \"register_operand\" \"r\")))]\n+  [(set (reg:SI 18) (ge (match_operand:SI 0 \"arith_reg_operand\" \"r\")\n+\t\t  (match_operand:SI 1 \"arith_reg_operand\" \"r\")))]\n   \"\"\n   \"cmp/ge\t%1,%0\")\n \n (define_insn \"cmpltsi_t\"\n-  [(set (reg:SI 18) (lt (match_operand:SI 0 \"register_operand\" \"r\")\n-\t\t  (match_operand:SI 1 \"register_operand\" \"r\")))]\n+  [(set (reg:SI 18) (lt (match_operand:SI 0 \"arith_reg_operand\" \"r\")\n+\t\t  (match_operand:SI 1 \"arith_reg_operand\" \"r\")))]\n   \"\"\n   \"cmp/gt\t%0,%1\")\n \n (define_insn \"cmplesi_t\"\n-  [(set (reg:SI 18) (le (match_operand:SI 0 \"register_operand\" \"r\")\n-\t\t  (match_operand:SI 1 \"register_operand\" \"r\")))]\n+  [(set (reg:SI 18) (le (match_operand:SI 0 \"arith_reg_operand\" \"r\")\n+\t\t  (match_operand:SI 1 \"arith_reg_operand\" \"r\")))]\n   \"\"\n   \"cmp/ge\t%0,%1\")\n \n@@ -147,35 +147,35 @@\n ;; -------------------------------------------------------------------------\n \n (define_insn \"cmpgeusi_t\"\n-  [(set (reg:SI 18) (geu (match_operand:SI 0 \"register_operand\" \"r\")\n-\t\t   (match_operand:SI 1 \"register_operand\" \"r\")))]\n+  [(set (reg:SI 18) (geu (match_operand:SI 0 \"arith_reg_operand\" \"r\")\n+\t\t   (match_operand:SI 1 \"arith_reg_operand\" \"r\")))]\n   \"\"\n   \"cmp/hs\t%1,%0\")\n \n (define_insn \"cmpgtusi_t\"\n-  [(set (reg:SI 18) (gtu (match_operand:SI 0 \"register_operand\" \"r\")\n-\t\t   (match_operand:SI 1 \"register_operand\" \"r\")))]\n+  [(set (reg:SI 18) (gtu (match_operand:SI 0 \"arith_reg_operand\" \"r\")\n+\t\t   (match_operand:SI 1 \"arith_reg_operand\" \"r\")))]\n   \"\"\n   \"cmp/hi\t%1,%0\")\n \n (define_insn \"cmpleusi_t\"\n-  [(set (reg:SI 18) (leu (match_operand:SI 0 \"register_operand\" \"r\")\n-\t\t   (match_operand:SI 1 \"register_operand\" \"r\")))]\n+  [(set (reg:SI 18) (leu (match_operand:SI 0 \"arith_reg_operand\" \"r\")\n+\t\t   (match_operand:SI 1 \"arith_reg_operand\" \"r\")))]\n   \"\"\n   \"cmp/hs\t%0,%1\")\n \n (define_insn \"cmpltusi_t\"\n-  [(set (reg:SI 18) (ltu (match_operand:SI 0 \"register_operand\" \"r\")\n-\t\t   (match_operand:SI 1 \"register_operand\" \"r\")))]\n+  [(set (reg:SI 18) (ltu (match_operand:SI 0 \"arith_reg_operand\" \"r\")\n+\t\t   (match_operand:SI 1 \"arith_reg_operand\" \"r\")))]\n   \"\"\n   \"cmp/hi\t%0,%1\")\n \n ;; We save the compare operands in the cmpxx patterns and use them when\n ;; we generate the branch.\n \n (define_expand \"cmpsi\"\n-  [(set (reg:SI 18) (compare (match_operand:SI 0 \"register_operand\" \"\")\n-\t\t\t     (match_operand:SI 1 \"register_operand\" \"\")))]\n+  [(set (reg:SI 18) (compare (match_operand:SI 0 \"arith_reg_operand\" \"\")\n+\t\t\t     (match_operand:SI 1 \"arith_reg_operand\" \"\")))]\n   \"\"\n   \"\n { sh_compare_op0 = operands[0];\n@@ -189,9 +189,9 @@\n ;; -------------------------------------------------------------------------\n \n (define_insn \"adddi3\"\n-  [(set (match_operand:DI 0 \"register_operand\" \"=&r\")\n-\t(plus:DI (match_operand:DI 1 \"register_operand\" \"%0\")\n-\t\t (match_operand:DI 2 \"register_operand\" \"r\")))\n+  [(set (match_operand:DI 0 \"arith_reg_operand\" \"=&r\")\n+\t(plus:DI (match_operand:DI 1 \"arith_reg_operand\" \"%0\")\n+\t\t (match_operand:DI 2 \"arith_reg_operand\" \"r\")))\n    (clobber (reg:SI 18))]\n   \"\"\n   \"clrt\\;addc\t%R2,%R0\\;addc\t%2,%0\"\n@@ -201,17 +201,17 @@\n \n \n (define_insn \"addsi3_i\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n-\t(plus:SI (match_operand:SI 1 \"register_operand\" \"%0\")\n+  [(set (match_operand:SI 0 \"arith_reg_operand\" \"=r\")\n+\t(plus:SI (match_operand:SI 1 \"arith_reg_operand\" \"%0\")\n \t\t (match_operand:SI 2 \"arith_operand\" \"rI\")))]\n   \"\"\n   \"add\t%2,%0\"\n   [(set_attr \"length\" \"2\")\n    (set_attr \"type\" \"arith\")])\n \n (define_expand \"addsi3\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n-\t(plus:SI (match_operand:SI 1 \"register_operand\" \"%0\")\n+  [(set (match_operand:SI 0 \"arith_reg_operand\" \"=r\")\n+\t(plus:SI (match_operand:SI 1 \"arith_reg_operand\" \"%0\")\n \t\t (match_operand:SI 2 \"arith_operand\" \"rI\")))]\n   \"\"\n   \"\")\n@@ -222,9 +222,9 @@\n ;; -------------------------------------------------------------------------\n \n (define_insn \"subdi3\"\n-  [(set (match_operand:DI 0 \"register_operand\" \"=&r\")\n-\t(minus:DI (match_operand:DI 1 \"register_operand\" \"0\")\n-\t\t  (match_operand:DI 2 \"register_operand\" \"r\")))\n+  [(set (match_operand:DI 0 \"arith_reg_operand\" \"=&r\")\n+\t(minus:DI (match_operand:DI 1 \"arith_reg_operand\" \"0\")\n+\t\t  (match_operand:DI 2 \"arith_reg_operand\" \"r\")))\n    (clobber (reg:SI 18))]\n   \"\"\n   \"clrt\\;subc\t%R2,%R0\\;subc\t%2,%0\"\n@@ -233,9 +233,9 @@\n    (set_attr \"type\" \"arith\")])\n \n (define_insn \"subsi3\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n-\t(minus:SI (match_operand:SI 1 \"register_operand\" \"0\")\n-\t\t  (match_operand:SI 2 \"register_operand\" \"r\")))]\n+  [(set (match_operand:SI 0 \"arith_reg_operand\" \"=r\")\n+\t(minus:SI (match_operand:SI 1 \"arith_reg_operand\" \"0\")\n+\t\t  (match_operand:SI 2 \"arith_reg_operand\" \"r\")))]\n   \"\"\n   \"sub\t%2,%0\"\n   [(set_attr \"type\" \"arith\")])\n@@ -249,95 +249,95 @@\n (define_insn \"\"\n   [(set (reg:SI 21)\n \t(mult:SI (zero_extend:SI\n-\t\t  (match_operand:HI 1 \"register_operand\" \"r\"))\n+\t\t  (match_operand:HI 1 \"arith_reg_operand\" \"r\"))\n \t\t (zero_extend:SI\n-\t\t  (match_operand:HI 2 \"register_operand\" \"r\"))))]\n+\t\t  (match_operand:HI 2 \"arith_reg_operand\" \"r\"))))]\n   \"\"\n   \"mulu\t%2,%1\")\n \n (define_insn \"\"\n   [(set (reg:SI 21)\n \t(mult:SI (sign_extend:SI\n-\t\t  (match_operand:HI 1 \"register_operand\" \"r\"))\n+\t\t  (match_operand:HI 1 \"arith_reg_operand\" \"r\"))\n \t\t (sign_extend:SI\n-\t\t  (match_operand:HI 2 \"register_operand\" \"r\"))))]\n+\t\t  (match_operand:HI 2 \"arith_reg_operand\" \"r\"))))]\n   \"\"\n   \"muls\t%2,%1\")\n \n (define_expand \"mulhisi3\"\n   [(set (reg:SI 21)\n \t(mult:SI (sign_extend:SI\n-\t\t  (match_operand:HI 1 \"register_operand\" \"r\"))\n+\t\t  (match_operand:HI 1 \"arith_reg_operand\" \"r\"))\n \t\t (sign_extend:SI\n-\t\t  (match_operand:HI 2 \"register_operand\" \"r\"))))\n-   (set (match_operand:SI 0 \"register_operand\" \"=r\")\n+\t\t  (match_operand:HI 2 \"arith_reg_operand\" \"r\"))))\n+   (set (match_operand:SI 0 \"arith_reg_operand\" \"=r\")\n \t(reg:SI 21))]\n   \"\"\n   \"\")\n \n (define_expand \"umulhisi3\"\n   [(set (reg:SI 21)\n \t(mult:SI (zero_extend:SI\n-\t\t  (match_operand:HI 1 \"register_operand\" \"r\"))\n+\t\t  (match_operand:HI 1 \"arith_reg_operand\" \"r\"))\n \t\t (zero_extend:SI\n-\t\t  (match_operand:HI 2 \"register_operand\" \"r\"))))\n-   (set (match_operand:SI 0 \"register_operand\" \"=r\")\n+\t\t  (match_operand:HI 2 \"arith_reg_operand\" \"r\"))))\n+   (set (match_operand:SI 0 \"arith_reg_operand\" \"=r\")\n \t(reg:SI 21))]\n   \"\"\n   \"\")\n \n (define_insn \"\"\n   [(set (reg:SI 21)\n-\t(mult:SI (match_operand:SI 1 \"register_operand\" \"r\")\n-\t\t  (match_operand:SI 2 \"register_operand\" \"r\")))]\n+\t(mult:SI (match_operand:SI 1 \"arith_reg_operand\" \"r\")\n+\t\t  (match_operand:SI 2 \"arith_reg_operand\" \"r\")))]\n   \"TARGET_HAS_MULSI3\"\n   \"muls.l\t%2,%1\")\n \n (define_expand \"mulsi3\"\n   [(set (reg:SI 21)\n-\t(mult:SI  (match_operand:SI 1 \"register_operand\" \"r\")\n-\t\t  (match_operand:SI 2 \"register_operand\" \"r\")))\n-   (set (match_operand:SI 0 \"register_operand\" \"=r\")\n+\t(mult:SI  (match_operand:SI 1 \"arith_reg_operand\" \"r\")\n+\t\t  (match_operand:SI 2 \"arith_reg_operand\" \"r\")))\n+   (set (match_operand:SI 0 \"arith_reg_operand\" \"=r\")\n \t(reg:SI 20))]\n   \"TARGET_HAS_MULSI3\"\n   \"\")\n \n (define_insn \"\"\n   [(set (reg:DI 20)\n \t(mult:DI (sign_extend:DI\n-\t\t  (match_operand:SI 1 \"register_operand\" \"r\"))\n+\t\t  (match_operand:SI 1 \"arith_reg_operand\" \"r\"))\n \t\t (sign_extend:DI\n-\t\t  (match_operand:SI 2 \"register_operand\" \"r\"))))]\n+\t\t  (match_operand:SI 2 \"arith_reg_operand\" \"r\"))))]\n   \"TARGET_HAS_MULSI3\"\n   \"dmuls.l\t%2,%1\")\n \n (define_expand \"mulsidi3\"\n   [(set (reg:DI 20)\n \t(mult:DI (sign_extend:DI\n-\t\t  (match_operand:SI 1 \"register_operand\" \"r\"))\n+\t\t  (match_operand:SI 1 \"arith_reg_operand\" \"r\"))\n \t\t (sign_extend:DI\n-\t\t  (match_operand:SI 2 \"register_operand\" \"r\"))))\n-   (set (match_operand:DI 0 \"register_operand\" \"=r\")\n+\t\t  (match_operand:SI 2 \"arith_reg_operand\" \"r\"))))\n+   (set (match_operand:DI 0 \"arith_reg_operand\" \"=r\")\n \t(reg:DI 20))]\n   \"TARGET_HAS_MULSI3\"\n   \"\")\n \n (define_insn \"\"\n   [(set (reg:DI 20)\n \t(mult:DI (zero_extend:DI\n-\t\t  (match_operand:SI 1 \"register_operand\" \"r\"))\n+\t\t  (match_operand:SI 1 \"arith_reg_operand\" \"r\"))\n \t\t (zero_extend:DI\n-\t\t  (match_operand:SI 2 \"register_operand\" \"r\"))))]\n+\t\t  (match_operand:SI 2 \"arith_reg_operand\" \"r\"))))]\n   \"TARGET_HAS_MULSI3\"\n   \"dmulu.l\t%2,%1\")\n \n (define_expand \"umulsidi3\"\n   [(set (reg:DI 20)\n \t(mult:DI (zero_extend:DI\n-\t\t  (match_operand:SI 1 \"register_operand\" \"r\"))\n+\t\t  (match_operand:SI 1 \"arith_reg_operand\" \"r\"))\n \t\t (zero_extend:DI\n-\t\t  (match_operand:SI 2 \"register_operand\" \"r\"))))\n-   (set (match_operand:DI 0 \"register_operand\" \"=r\")\n+\t\t  (match_operand:SI 2 \"arith_reg_operand\" \"r\"))))\n+   (set (match_operand:DI 0 \"arith_reg_operand\" \"=r\")\n \t(reg:DI 20))]\n   \"TARGET_HAS_MULSI3\"\n   \"\")\n@@ -347,23 +347,23 @@\n ;; -------------------------------------------------------------------------\n \n (define_insn \"andsi3\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=r,z\")\n-\t(and:SI (match_operand:SI 1 \"register_operand\" \"%0,0\")\n+  [(set (match_operand:SI 0 \"arith_reg_operand\" \"=r,z\")\n+\t(and:SI (match_operand:SI 1 \"arith_reg_operand\" \"%0,0\")\n \t\t(match_operand:SI 2 \"logical_operand\" \"r,L\")))]\n   \"\"\n   \"and\t%2,%0\"\n   [(set_attr \"type\" \"arith\")])\n \n (define_insn \"iorsi3\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=r,z\")\n-\t(ior:SI (match_operand:SI 1 \"register_operand\" \"%0,0\")\n+  [(set (match_operand:SI 0 \"arith_reg_operand\" \"=r,z\")\n+\t(ior:SI (match_operand:SI 1 \"arith_reg_operand\" \"%0,0\")\n \t\t(match_operand:SI 2 \"logical_operand\" \"r,L\")))]\n   \"\"\n   \"or\t%2,%0\")\n \n (define_insn \"xorsi3\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=r,z\")\n-\t(xor:SI (match_operand:SI 1 \"register_operand\" \"%0,0\")\n+  [(set (match_operand:SI 0 \"arith_reg_operand\" \"=r,z\")\n+\t(xor:SI (match_operand:SI 1 \"arith_reg_operand\" \"%0,0\")\n \t\t(match_operand:SI 2 \"logical_operand\" \"r,L\")))]\n   \"\"\n   \"xor\t%2,%0\"\n@@ -375,8 +375,8 @@\n ;; -------------------------------------------------------------------------\n \n (define_insn \"ashlsi3_k\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=r,r\")\n-\t(ashift:SI (match_operand:SI 1 \"register_operand\" \"0,0\")\n+  [(set (match_operand:SI 0 \"arith_reg_operand\" \"=r,r\")\n+\t(ashift:SI (match_operand:SI 1 \"arith_reg_operand\" \"0,0\")\n \t\t   (match_operand:SI 2 \"immediate_operand\" \"L,n\")))]\n   \"\"\n   \"*return output_shift(\\\"shll\\\", operands[0], operands[2]);\"\n@@ -385,23 +385,23 @@\n    (set_attr \"type\" \"arith\")])\n \n (define_expand \"ashlsi3\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"\")\n-\t(ashift:SI (match_operand:SI 1 \"register_operand\" \"\")\n+  [(set (match_operand:SI 0 \"arith_reg_operand\" \"\")\n+\t(ashift:SI (match_operand:SI 1 \"arith_reg_operand\" \"\")\n \t\t   (match_operand:SI 2 \"immediate_operand\" \"\")))]\n   \"\"\n   \"if (!ok_shift_value(operands[2])) FAIL;\")\n \n (define_insn \"ashrsi3_k\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n-\t(ashiftrt:SI (match_operand:SI 1 \"register_operand\" \"0\")\n+  [(set (match_operand:SI 0 \"arith_reg_operand\" \"=r\")\n+\t(ashiftrt:SI (match_operand:SI 1 \"arith_reg_operand\" \"0\")\n \t\t     (const_int 1)))]\n   \"\"\n   \"shar\t%0\"\n   [(set_attr \"type\" \"arith\")])\n \n (define_expand \"ashrsi3\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n-\t(ashiftrt:SI (match_operand:SI 1 \"register_operand\" \"r\")\n+  [(set (match_operand:SI 0 \"arith_reg_operand\" \"=r\")\n+\t(ashiftrt:SI (match_operand:SI 1 \"arith_reg_operand\" \"r\")\n \t\t     (match_operand:SI 2 \"nonmemory_operand\" \"M\")))]\n   \"\"\n   \"\n@@ -412,8 +412,8 @@\n \")\n \n (define_insn \"lshrsi3_k\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n-\t(lshiftrt:SI (match_operand:SI 1 \"register_operand\" \"0\")\n+  [(set (match_operand:SI 0 \"arith_reg_operand\" \"=r\")\n+\t(lshiftrt:SI (match_operand:SI 1 \"arith_reg_operand\" \"0\")\n \t\t     (match_operand:SI 2 \"immediate_operand\" \"L\")))]\n   \"\"\n   \"* return output_shift (\\\"shlr\\\", operands[0], operands[2]);\"\n@@ -422,24 +422,24 @@\n    (set_attr \"type\" \"arith\")])\n \n (define_expand \"lshrsi3\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"\")\n-\t(lshiftrt:SI (match_operand:SI 1 \"register_operand\" \"\")\n+  [(set (match_operand:SI 0 \"arith_reg_operand\" \"\")\n+\t(lshiftrt:SI (match_operand:SI 1 \"arith_reg_operand\" \"\")\n \t\t     (match_operand:SI 2 \"nonmemory_operand\" \"\")))]\n   \"\"\n   \"if (!ok_shift_value (operands[2])) FAIL; \")\n \n (define_insn \"ashldi3_k\"\n-  [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n-\t(ashift:DI (match_operand:DI 1 \"register_operand\" \"0\")\n+  [(set (match_operand:DI 0 \"arith_reg_operand\" \"=r\")\n+\t(ashift:DI (match_operand:DI 1 \"arith_reg_operand\" \"0\")\n \t\t   (match_operand:DI 2 \"immediate_operand\" \"I\")))\n    (clobber (reg:SI 18))]\n   \"\"\n   \"shll\t%R0\\;rotcl\t%0\"\n   [(set_attr \"length\" \"4\")])\n \n (define_expand \"ashldi3\"\n-  [(parallel[(set (match_operand:DI 0 \"register_operand\" \"\")\n-\t\t  (ashift:DI (match_operand:DI 1 \"register_operand\" \"\")\n+  [(parallel[(set (match_operand:DI 0 \"arith_reg_operand\" \"\")\n+\t\t  (ashift:DI (match_operand:DI 1 \"arith_reg_operand\" \"\")\n \t\t\t     (match_operand:DI 2 \"immediate_operand\" \"\")))\n \t     (clobber (reg:SI 18))])]\n \t    \n@@ -448,35 +448,35 @@\n \t|| INTVAL (operands[2]) != 1) FAIL;} \")\n \n (define_insn \"lshrdi3_k\"\n-  [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n-\t\t   (lshiftrt:DI (match_operand:DI 1 \"register_operand\" \"0\")\n+  [(set (match_operand:DI 0 \"arith_reg_operand\" \"=r\")\n+\t\t   (lshiftrt:DI (match_operand:DI 1 \"arith_reg_operand\" \"0\")\n \t\t\t      (match_operand:DI 2 \"immediate_operand\" \"I\")))\n       (clobber (reg:SI 18))]\n   \"\"\n   \"shlr\t%0\\;rotcr\t%R0\"\n   [(set_attr \"length\" \"4\")])\n \n (define_expand \"lshrdi3\"\n-  [(parallel[(set (match_operand:DI 0 \"register_operand\" \"\")\n-\t\t  (lshiftrt:DI (match_operand:DI 1 \"register_operand\" \"\")\n+  [(parallel[(set (match_operand:DI 0 \"arith_reg_operand\" \"\")\n+\t\t  (lshiftrt:DI (match_operand:DI 1 \"arith_reg_operand\" \"\")\n \t\t\t       (match_operand:DI 2 \"immediate_operand\" \"\")))\n \t     (clobber (reg:SI 18))])]\n   \"\"\n   \"{ if (GET_CODE (operands[2]) != CONST_INT \n \t|| INTVAL (operands[2]) != 1) FAIL;} \")\n \n (define_insn \"ashrdi3_k\"\n-  [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n-\t(ashiftrt:DI (match_operand:DI 1 \"register_operand\" \"0\")\n+  [(set (match_operand:DI 0 \"arith_reg_operand\" \"=r\")\n+\t(ashiftrt:DI (match_operand:DI 1 \"arith_reg_operand\" \"0\")\n \t\t     (match_operand:DI 2 \"immediate_operand\" \"\")))\n    (clobber (reg:SI 18))]\n   \"\"\n   \"shar\t%0\\;rotcr\t%R0\"\n   [(set_attr \"length\" \"4\")])\n \n (define_expand \"ashrdi3\"\n-  [(parallel[(set (match_operand:DI 0 \"register_operand\" \"\")\n-\t\t  (ashiftrt:DI (match_operand:DI 1 \"register_operand\" \"\")\n+  [(parallel[(set (match_operand:DI 0 \"arith_reg_operand\" \"\")\n+\t\t  (ashiftrt:DI (match_operand:DI 1 \"arith_reg_operand\" \"\")\n \t\t\t       (match_operand:DI 2 \"immediate_operand\" \"\")))\n \t     (clobber (reg:SI 18))])]\n   \"\"\n@@ -490,24 +490,24 @@\n ;; -------------------------------------------------------------------------\n \n (define_insn \"negdi2\"\n-  [(set (match_operand:DI 0 \"register_operand\" \"=&r\")\n-\t(neg:DI (match_operand:DI 1 \"register_operand\" \"0\")))\n+  [(set (match_operand:DI 0 \"arith_reg_operand\" \"=&r\")\n+\t(neg:DI (match_operand:DI 1 \"arith_reg_operand\" \"0\")))\n    (clobber (reg:SI 18))]\n   \"\"\n   \"clrt\\;negc\t%R1,%R0\\;negc\t%1,%0\"\n   [(set_attr \"length\" \"6\")\n    (set_attr \"type\" \"arith\")])\n \n (define_insn \"negsi2\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n-\t(neg:SI (match_operand:SI 1 \"register_operand\" \"r\")))]\n+  [(set (match_operand:SI 0 \"arith_reg_operand\" \"=r\")\n+\t(neg:SI (match_operand:SI 1 \"arith_reg_operand\" \"r\")))]\n   \"\"\n   \"neg\t%1,%0\"\n   [(set_attr \"type\" \"arith\")])\n \n (define_insn \"one_cmplsi2\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n-\t(not:SI (match_operand:SI 1 \"register_operand\" \"r\")))]\n+  [(set (match_operand:SI 0 \"arith_reg_operand\" \"=r\")\n+\t(not:SI (match_operand:SI 1 \"arith_reg_operand\" \"r\")))]\n   \"\"\n   \"not\t%1,%0\"\n [  (set_attr \"type\" \"arith\")])\n@@ -518,22 +518,22 @@\n ;; -------------------------------------------------------------------------\n \n (define_insn \"zero_extendhisi2\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n-\t(zero_extend:SI (match_operand:HI 1 \"register_operand\" \"r\")))]\n+  [(set (match_operand:SI 0 \"arith_reg_operand\" \"=r\")\n+\t(zero_extend:SI (match_operand:HI 1 \"arith_reg_operand\" \"r\")))]\n   \"\"\n   \"extu.w\t%1,%0\"\n   [(set_attr \"type\" \"arith\")])\n \n (define_insn \"zero_extendqisi2\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n-\t(zero_extend:SI (match_operand:QI 1 \"register_operand\" \"r\")))]\n+  [(set (match_operand:SI 0 \"arith_reg_operand\" \"=r\")\n+\t(zero_extend:SI (match_operand:QI 1 \"arith_reg_operand\" \"r\")))]\n   \"\"\n   \"extu.b\t%1,%0\"\n   [(set_attr \"type\" \"arith\")]) \n \n (define_insn \"zero_extendqihi2\"\n-  [(set (match_operand:HI 0 \"register_operand\" \"=r\")\n-\t(zero_extend:HI (match_operand:QI 1 \"register_operand\" \"r\")))]\n+  [(set (match_operand:HI 0 \"arith_reg_operand\" \"=r\")\n+\t(zero_extend:HI (match_operand:QI 1 \"arith_reg_operand\" \"r\")))]\n   \"\"\n   \"extu.b\t%1,%0\"\n   [(set_attr \"type\" \"arith\")]) \n@@ -544,27 +544,27 @@\n ;; -------------------------------------------------------------------------\n \n (define_insn \"extendsidi2\"\n-  [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n-\t(sign_extend:DI (match_operand:SI 1 \"register_operand\" \"0\")))]\n+  [(set (match_operand:DI 0 \"arith_reg_operand\" \"=r\")\n+\t(sign_extend:DI (match_operand:SI 1 \"arith_reg_operand\" \"0\")))]\n   \"\"\n   \"mov\t%1,%0\\;shll\t%0\\;subc\t%0,%0\"\n   [(set_attr \"length\" \"6\")]) \n \n (define_insn \"extendhisi2\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n-\t(sign_extend:SI (match_operand:HI 1 \"register_operand\" \"r\")))]\n+  [(set (match_operand:SI 0 \"arith_reg_operand\" \"=r\")\n+\t(sign_extend:SI (match_operand:HI 1 \"arith_reg_operand\" \"r\")))]\n   \"\"\n   \"exts.w\t%1,%0\")\n \n (define_insn \"extendqisi2\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n-\t(sign_extend:SI (match_operand:QI 1 \"register_operand\" \"r\")))]\n+  [(set (match_operand:SI 0 \"arith_reg_operand\" \"=r\")\n+\t(sign_extend:SI (match_operand:QI 1 \"arith_reg_operand\" \"r\")))]\n   \"\"\n   \"exts.b\t%1,%0\")\n \n (define_insn \"extendqihi2\"\n-  [(set (match_operand:HI 0 \"register_operand\" \"=r\")\n-\t(sign_extend:HI (match_operand:QI 1 \"register_operand\" \"r\")))]\n+  [(set (match_operand:HI 0 \"arith_reg_operand\" \"=r\")\n+\t(sign_extend:HI (match_operand:QI 1 \"arith_reg_operand\" \"r\")))]\n   \"\"\n   \"exts.b\t%1,%0\")\n \n@@ -575,12 +575,12 @@\n \n (define_insn \"\"\n   [(set (match_operand:SI 0 \"push_operand\" \"=<\")\n-\t(match_operand:SI 1 \"register_operand\" \"r\"))]\n+\t(match_operand:SI 1 \"arith_reg_operand\" \"r\"))]\n    \"\"\n    \"mov.l\t%1,%0\")\n \n (define_insn \"movsi_pcrel\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n+  [(set (match_operand:SI 0 \"arith_reg_operand\" \"=r\")\n \t(match_operand:SI 1 \"hard_immediate_operand\" \"i\"))]\n   \"\"\n   \"* return output_movepcrel (insn, operands, SImode);\"\n@@ -633,7 +633,7 @@\n   \"prepare_move_operands(operands, QImode);\")\n   \n (define_insn \"movhi_pcrel\"\n-  [(set (match_operand:HI 0 \"register_operand\" \"=r\")\n+  [(set (match_operand:HI 0 \"arith_reg_operand\" \"=r\")\n \t(match_operand:HI 1 \"hard_immediate_operand\" \"i\"))]\n   \"\"\n   \"* return output_movepcrel (insn, operands, SImode);\"\n@@ -664,13 +664,13 @@\n   \n (define_insn \"\"\n   [(set (match_operand:DI 0 \"push_operand\" \"=<\")\n-\t(match_operand:DI 1 \"register_operand\" \"r\"))]\n+\t(match_operand:DI 1 \"arith_reg_operand\" \"r\"))]\n    \"\"\n    \"mov.l\t%R1,%0\\;mov.l\t%1,%0\"\n    [(set_attr \"length\" \"4\")])\n \n (define_insn \"movdi_pcrel\"\n-  [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n+  [(set (match_operand:DI 0 \"arith_reg_operand\" \"=r\")\n \t(match_operand:DI 1 \"hard_immediate_operand\" \"i\"))]\n   \"\"\n   \"* return output_movepcrel (insn, operands, DImode);\"\n@@ -696,13 +696,13 @@\n \n (define_insn \"\"\n   [(set (match_operand:DF 0 \"push_operand\" \"=<\")\n-\t(match_operand:DF 1 \"register_operand\" \"r\"))]\n+\t(match_operand:DF 1 \"arith_reg_operand\" \"r\"))]\n    \"\"\n    \"mov.l\t%R1,%0\\;mov.l\t%1,%0\"\n    [(set_attr \"length\" \"4\")])\n \n (define_insn \"movdf_pcrel\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=r\")\n+  [(set (match_operand:DF 0 \"arith_reg_operand\" \"=r\")\n \t(match_operand:DF 1 \"hard_immediate_operand\" \"i\"))]\n   \"\"\n   \"* return output_movepcrel  (insn, operands, DFmode);\"\n@@ -728,12 +728,12 @@\n \n (define_insn \"\"\n   [(set (match_operand:SF 0 \"push_operand\" \"=<\")\n-\t(match_operand:SF 1 \"register_operand\" \"r\"))]\n+\t(match_operand:SF 1 \"arith_reg_operand\" \"r\"))]\n    \"\"\n    \"mov.l\t%1,%0\")\n \n (define_insn \"movsf_pcrel\"\n-  [(set (match_operand:SF 0 \"register_operand\" \"=r\")\n+  [(set (match_operand:SF 0 \"arith_reg_operand\" \"=r\")\n \t(match_operand:SF 1 \"hard_immediate_operand\" \"i\"))]\n   \"\"\n   \"* return output_movepcrel (insn, operands, SFmode);\"\n@@ -980,7 +980,7 @@\n \")\n \n (define_insn \"calli\"\n-  [(call (mem:SI (match_operand:SI 0 \"register_operand\" \"r\"))\n+  [(call (mem:SI (match_operand:SI 0 \"arith_reg_operand\" \"r\"))\n \t (match_operand 1 \"\" \"\"))\n    (clobber (reg:SI 17))]\n   \"\"\n@@ -991,7 +991,7 @@\n \n (define_insn \"call_valuei\"\n   [(set (match_operand 0 \"\" \"=rf\")\n-\t(call (mem:SI (match_operand:SI 1 \"register_operand\" \"r\"))\n+\t(call (mem:SI (match_operand:SI 1 \"arith_reg_operand\" \"r\"))\n \t      (match_operand 2 \"\" \"\")))\n    (clobber (reg:SI 17))]\n   \"\"\n@@ -1001,7 +1001,7 @@\n    (set_attr \"length\" \"4\")])\n \n (define_expand \"call\"\n-  [(parallel[(call (match_operand 0 \"register_operand\" \"o\")\n+  [(parallel[(call (match_operand 0 \"arith_reg_operand\" \"o\")\n \t\t   (match_operand 1 \"\" \"\"))\n \t     (clobber (reg:SI 17))])]\n   \"\"\n@@ -1018,7 +1018,7 @@\n \n (define_expand \"call_value\"\n   [(parallel[(set (match_operand 0 \"\" \"=rf\")\n-\t\t  (call (match_operand 1 \"register_operand\" \"o\")\n+\t\t  (call (match_operand 1 \"arith_reg_operand\" \"o\")\n \t\t\t(match_operand 2 \"\" \"\")))\n \t     (clobber (reg:SI 17))])]\n   \"\"\n@@ -1035,7 +1035,7 @@\n \n (define_insn \"indirect_jump\"\n   [(set (pc)\n-\t(match_operand:SI 0 \"register_operand\" \"r\"))]\n+\t(match_operand:SI 0 \"arith_reg_operand\" \"r\"))]\n   \"\"\n   \"jmp\t@%0\"\n   [(set_attr \"needs_delay_slot\" \"yes\")\n@@ -1056,10 +1056,10 @@\n \n (define_insn \"tablejump\"\n   [(set (pc)\n-\t(match_operand:SI 0 \"register_operand\" \"r\"))\n+\t(match_operand:SI 0 \"arith_reg_operand\" \"r\"))\n    (use (label_ref (match_operand 1 \"\" \"\")))]\n   \"\"\n-  \"!table jump\\;jmp\t@%0\\;or\tr0,r0\\;.align\t4\\;%!\"\n+  \"!table jump\\;jmp\t@%0\\;or\tr0,r0\\;%!\"\n   [(set_attr \"needs_delay_slot\" \"no\")\n    (set_attr \"in_delay_slot\" \"no\")\n    (set_attr \"type\" \"jump\")\n@@ -1070,92 +1070,92 @@\n ;; ------------------------------------------------------------------------\n \n (define_insn \"\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n+  [(set (match_operand:SI 0 \"arith_reg_operand\" \"=r\")\n \t(eq (reg:SI 18) (const_int 1)))]\n   \"\"\n   \"movt\t%0 ! \")\n \n (define_expand \"seq\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"\")\n+  [(set (match_operand:SI 0 \"arith_reg_operand\" \"\")\n \t(match_dup 1))]\n   \"\"\n   \"operands[1] = prepare_scc_operands (EQ);\")\n \n (define_expand \"slt\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"\")\n+  [(set (match_operand:SI 0 \"arith_reg_operand\" \"\")\n \t(match_dup 1))]\n   \"\"\n   \"operands[1] = prepare_scc_operands (LT);\")\n \n (define_expand \"sle\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"\")\n+  [(set (match_operand:SI 0 \"arith_reg_operand\" \"\")\n \t(match_dup 1))]\n   \"\"\n   \"operands[1] = prepare_scc_operands (LE);\")\n \n (define_expand \"sgt\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"\")\n+  [(set (match_operand:SI 0 \"arith_reg_operand\" \"\")\n \t(match_dup 1))]\n   \"\"\n   \"operands[1] = prepare_scc_operands (GT);\")\n \n (define_expand \"sge\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"\")\n+  [(set (match_operand:SI 0 \"arith_reg_operand\" \"\")\n \t(match_dup 1))]\n   \"\"\n   \"operands[1] = prepare_scc_operands (GE);\")\n \n (define_expand \"sgtu\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"\")\n+  [(set (match_operand:SI 0 \"arith_reg_operand\" \"\")\n \t(match_dup 1))]\n   \"\"\n   \"operands[1] = prepare_scc_operands (GTU);\")\n \n (define_expand \"sltu\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"\")\n+  [(set (match_operand:SI 0 \"arith_reg_operand\" \"\")\n \t(match_dup 1))]\n   \"\"\n   \"operands[1] = prepare_scc_operands (LTU);\")\n \n (define_expand \"sleu\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"\")\n+  [(set (match_operand:SI 0 \"arith_reg_operand\" \"\")\n \t(match_dup 1))]\n   \"\"\n   \"operands[1] = prepare_scc_operands (LEU);\")\n \n (define_expand \"sgeu\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"\")\n+  [(set (match_operand:SI 0 \"arith_reg_operand\" \"\")\n \t(match_dup 1))]\n   \"\"\n   \"operands[1] = prepare_scc_operands (GEU);\")\n \n (define_expand \"sne\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"\")\n+  [(set (match_operand:SI 0 \"arith_reg_operand\" \"\")\n \t(match_dup 1))\n    (set (match_dup 0) (xor:SI (match_dup 0) (const_int 1)))]\n   \"\"\n   \"operands[1] = prepare_scc_operands (EQ);\")\n \n (define_insn \"anddi3\"\n-  [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n-\t(and:DI (match_operand:DI 1 \"register_operand\" \"%0\")\n-\t\t(match_operand:DI 2 \"register_operand\" \"r\")))]\n+  [(set (match_operand:DI 0 \"arith_reg_operand\" \"=r\")\n+\t(and:DI (match_operand:DI 1 \"arith_reg_operand\" \"%0\")\n+\t\t(match_operand:DI 2 \"arith_reg_operand\" \"r\")))]\n   \"\"\n   \"and\t%2,%0\\;and\t%R2,%R0\"\n   [(set_attr \"length\" \"4\")])\n \n (define_insn \"iordi3\"\n-  [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n-\t(ior:DI (match_operand:DI 1 \"register_operand\" \"%0\")\n-\t\t(match_operand:DI 2 \"register_operand\" \"r\")))]\n+  [(set (match_operand:DI 0 \"arith_reg_operand\" \"=r\")\n+\t(ior:DI (match_operand:DI 1 \"arith_reg_operand\" \"%0\")\n+\t\t(match_operand:DI 2 \"arith_reg_operand\" \"r\")))]\n   \"\"\n   \"or\t%2,%0\\;or\t%R2,%R0\"\n   [(set_attr \"length\" \"4\")])\n \n (define_insn \"xordi3\"\n-  [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n-\t(xor:DI (match_operand:DI 1 \"register_operand\" \"%0\")\n-\t\t(match_operand:DI 2 \"register_operand\" \"r\")))]\n+  [(set (match_operand:DI 0 \"arith_reg_operand\" \"=r\")\n+\t(xor:DI (match_operand:DI 1 \"arith_reg_operand\" \"%0\")\n+\t\t(match_operand:DI 2 \"arith_reg_operand\" \"r\")))]\n   \"\"\n   \"xor\t%2,%0\\;xor\t%R2,%R0\"\n   [(set_attr \"length\" \"4\")])\n@@ -1241,22 +1241,24 @@\n \n \n (define_peephole \n-  [(set (match_operand:QI 0 \"register_operand\" \"\")\n-\t(mem:QI (match_operand:SI 1 \"register_operand\" \"\")))\n+  [(set (match_operand:QI 0 \"arith_reg_operand\" \"\")\n+\t(mem:QI (match_operand:SI 1 \"arith_reg_operand\" \"\")))\n    (set (match_dup 1) (plus:SI (match_dup 1) (const_int 1)))]\n   \"REGNO(operands[1]) != REGNO(operands[0])\"\n   \"mov.b\t@%1+,%0\")\n \n (define_peephole \n-  [(set (match_operand:HI 0 \"register_operand\" \"\")\n-\t(mem:HI (match_operand:SI 1 \"register_operand\" \"\")))\n+  [(set (match_operand:HI 0 \"arith_reg_operand\" \"\")\n+\t(mem:HI (match_operand:SI 1 \"arith_reg_operand\" \"\")))\n    (set (match_dup 1) (plus:SI (match_dup 1) (const_int 2)))]\n   \"REGNO(operands[1]) != REGNO(operands[0])\"\n   \"mov.w\t@%1+,%0\")\n \n (define_peephole \n-  [(set (match_operand:SI 0 \"register_operand\" \"\")\n-\t(mem:SI (match_operand:SI 1 \"register_operand\" \"\")))\n+  [(set (match_operand:SI 0 \"arith_reg_operand\" \"\")\n+\t(mem:SI (match_operand:SI 1 \"arith_reg_operand\" \"\")))\n    (set (match_dup 1) (plus:SI (match_dup 1) (const_int 4)))]\n   \"REGNO(operands[1]) != REGNO(operands[0])\"\n   \"mov.l\t@%1+,%0\")\n+\n+"}]}