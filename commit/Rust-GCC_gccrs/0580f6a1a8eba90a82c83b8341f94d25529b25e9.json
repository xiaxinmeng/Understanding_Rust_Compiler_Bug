{"sha": "0580f6a1a8eba90a82c83b8341f94d25529b25e9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDU4MGY2YTFhOGViYTkwYTgyYzgzYjgzNDFmOTRkMjU1MjliMjVlOQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2015-10-06T12:34:15Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2015-10-06T12:34:15Z"}, "message": "re PR tree-optimization/67859 (ICE on valid code at -O2 and -O3 on x86_64-linux-gnu)\n\n2015-10-06  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/67859\n\t* tree-ssa-pre.c (create_expression_by_pieces): Properly\n\tdiscard not inserted stmts.\n\n\t* gcc.dg/torture/pr67859.c: New testcase.\n\nFrom-SVN: r228519", "tree": {"sha": "48545297a0d21d21dfb61cfc0c4c986165b8f10b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/48545297a0d21d21dfb61cfc0c4c986165b8f10b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0580f6a1a8eba90a82c83b8341f94d25529b25e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0580f6a1a8eba90a82c83b8341f94d25529b25e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0580f6a1a8eba90a82c83b8341f94d25529b25e9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0580f6a1a8eba90a82c83b8341f94d25529b25e9/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "badfb2fbefac5b03bc1731b07900e3e75d5c01f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/badfb2fbefac5b03bc1731b07900e3e75d5c01f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/badfb2fbefac5b03bc1731b07900e3e75d5c01f8"}], "stats": {"total": 39, "additions": 35, "deletions": 4}, "files": [{"sha": "eb02d8b6c1c55b0a8391dbc741c22f7849df9852", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0580f6a1a8eba90a82c83b8341f94d25529b25e9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0580f6a1a8eba90a82c83b8341f94d25529b25e9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0580f6a1a8eba90a82c83b8341f94d25529b25e9", "patch": "@@ -1,3 +1,9 @@\n+2015-10-06  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/67859\n+\t* tree-ssa-pre.c (create_expression_by_pieces): Properly\n+\tdiscard not inserted stmts.\n+\n 2015-10-06  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* doc/extend.texi (Template Instantiation): Reorder options and"}, {"sha": "8b27d2ec97f4ee8b4890663b64193d63337d3726", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0580f6a1a8eba90a82c83b8341f94d25529b25e9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0580f6a1a8eba90a82c83b8341f94d25529b25e9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0580f6a1a8eba90a82c83b8341f94d25529b25e9", "patch": "@@ -1,3 +1,8 @@\n+2015-10-06  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/67859\n+\t* gcc.dg/torture/pr67859.c: New testcase.\n+\n 2015-10-05  Kirill Yukhin  <kirill.yukhin@intel.com>\n \n \t* gcc.target/i386/builtin_target.c: Add check for AES and PCLMUL."}, {"sha": "259b3810f102572aff533981c889042861b0bfcc", "filename": "gcc/testsuite/gcc.dg/torture/pr67859.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0580f6a1a8eba90a82c83b8341f94d25529b25e9/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr67859.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0580f6a1a8eba90a82c83b8341f94d25529b25e9/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr67859.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr67859.c?ref=0580f6a1a8eba90a82c83b8341f94d25529b25e9", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do compile } */\n+\n+int a, b, c;\n+\n+void\n+fn1 ()\n+{\n+  b = c ? 0 : 1 << a;\n+  b |= 0x9D7A5FD9;\n+  for (;;)\n+    {\n+      int d = 1;\n+      b &= (unsigned) d;\n+    }\n+}"}, {"sha": "c5af63d8ca17ca82738ca9c429dbf8dde3071630", "filename": "gcc/tree-ssa-pre.c", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0580f6a1a8eba90a82c83b8341f94d25529b25e9/gcc%2Ftree-ssa-pre.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0580f6a1a8eba90a82c83b8341f94d25529b25e9/gcc%2Ftree-ssa-pre.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-pre.c?ref=0580f6a1a8eba90a82c83b8341f94d25529b25e9", "patch": "@@ -2897,11 +2897,16 @@ create_expression_by_pieces (basic_block block, pre_expr expr,\n \n   folded = gimple_convert (&forced_stmts, exprtype, folded);\n \n-  /* If everything simplified to an exisiting SSA name or constant just\n-     return that.  */\n-  if (gimple_seq_empty_p (forced_stmts)\n-      || is_gimple_min_invariant (folded))\n+  /* If there is nothing to insert, return the simplified result.  */\n+  if (gimple_seq_empty_p (forced_stmts))\n     return folded;\n+  /* If we simplified to a constant return it and discard eventually\n+     built stmts.  */\n+  if (is_gimple_min_invariant (folded))\n+    {\n+      gimple_seq_discard (forced_stmts);\n+      return folded;\n+    }\n \n   gcc_assert (TREE_CODE (folded) == SSA_NAME);\n "}]}