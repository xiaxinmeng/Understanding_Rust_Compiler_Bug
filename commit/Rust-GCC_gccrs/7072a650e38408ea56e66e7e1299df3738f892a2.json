{"sha": "7072a650e38408ea56e66e7e1299df3738f892a2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzA3MmE2NTBlMzg0MDhlYTU2ZTY2ZTdlMTI5OWRmMzczOGY4OTJhMg==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "iant@google.com", "date": "2009-04-17T05:40:46Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2009-04-17T05:40:46Z"}, "message": "df.h: Include \"timevar.h\".\n\n\t* df.h: Include \"timevar.h\".\n\t(struct df_problem): Change tv_id field to timevar_id_t.\n\t* tree-pass.h: Include \"timevar.h\".\n\t(struct opt_pass): Change tv_id field to timevar_id_t.\n\t* timevar.h (timevar_id_t): Define TV_NONE.\n\t* passes.c (execute_one_ipa_transform_pass): Check for tv_id !=\n\tTV_NONE rather than tv_id != 0.\n\t(execute_one_pass): Likewise.\n\t* Makefile.in (DF_H): Add $(TIMEVAR_H).\n\t(TREE_PASS_H): Define.  Change all instances of tree-pass.h in\n\tdependencies to $(TREE_PASS_H).\n\t* bt-load.c (pass_branch_target_load_optimize1): Set tv_id field\n\tto TV_NONE.\n\t(pass_branch_target_load_optimize2): Likewise.\n\t* cfglayout.c (pass_into_cfg_layout_mode): Likewise.\n\t(pass_outof_cfg_layout_mode): Likewise.\n\t* cgraphbuild.c (pass_remove_cgraph_callee_edges): Likewise.\n\t(pass_rebuild_cgraph_edges): Likewise.\n\t(pass_remove_cgraph_callee_edges): Likewise.\n\t* df-core.c (pass_df_initialize_opt): Likewise.\n\t(pass_df_initialize_no_opt): Likewise.\n\t(pass_df_finish): Likewise.\n\t* emit-rtl.c (pass_unshare_all_rtl): Likewise.\n\t* except.c (pass_set_nothrow_function_flags): Likewise.\n\t(pass_convert_to_eh_region_ranges): Likewise.\n\t* final.c (pass_compute_alignments): Likewise.\n\t* function.c (pass_instantiate_virtual_regs): Likewise.\n\t(pass_init_function): Likewise.\n\t(pass_leaf_regs): Likewise.\n\t(pass_match_asm_constraints): Likewise.\n\t* gimple-low.c (pass_lower_cf): Likewise.\n\t(pass_mark_used_blocks): Likewise.\n\t* init-regs.c (pass_initialize_regs): Likewise.\n\t* integrate.c (pass_initial_value_sets): Likewise.\n\t* ira.c (pass_ira): Likewise.\n\t* jump.c (pass_cleanup_barriers): Likewise.\n\t* omp-low.c (pass_expand_omp): Likewise.\n\t(pass_lower_omp): Likewise.\n\t* matrix-reorg.c (pass_ipa_matrix_reorg): Likewise.\n\t* recog.c (pass_split_all_insns): Likewise.\n\t(pass_split_after_reload): Likewise.\n\t(pass_split_before_regstack): Likewise.\n\t(pass_split_before_sched2): Likewise.\n\t(pass_split_for_shorten_branches): Likewise.\n\t* reginfo.c (pass_reginfo_init): Likewise.\n\t(pass_subregs_of_mode_init): Likewise.\n\t(pass_subregs_of_mode_finish): Likewise.\n\t* passes.c (pass_postreload): Likewise.\n\t* stack-ptr-mod.c (pass_stack_ptr_mod): Likewise.\n\t* tree-cfg.c (pass_remove_useless_stmts): Likewise.\n\t(pass_warn_function_return): Likewise.\n\t(pass_warn_function_noreturn): Likewise.\n\t* tree-complex.c (pass_lower_complex): Likewise.\n\t(pass_lower_complex_O0): Likewise.\n\t* tree-if-conv.c (pass_if_conversion): Likewise.\n\t* tree-into-ssa.c (pass_build_ssa): Likewise.\n\t* tree-mudflap.c (pass_mudflap_1): Likewise.\n\t(pass_mudflap_2): Likewise.\n\t* tree-nomudflap.c (pass_mudflap_1): Likewise.\n\t(pass_mudflap_2): Likewise.\n\t* tree-nrv.c (pass_return_slot): Likewise.\n\t* tree-object-size.c (pass_object_sizes): Likewise.\n\t* tree-optimize.c (pass_all_optimizations): Likewise.\n\t(pass_early_local_passes): Likewise.\n\t(pass_all_early_optimizations): Likewise.\n\t(pass_cleanup_cfg): Likewise.\n\t(pass_cleanup_cfg_post_optimizing): Likewise.\n\t(pass_free_datastructures): Likewise.\n\t(pass_free_cfg_annotations): Likewise.\n\t(pass_fixup_cfg): Likewise.\n\t(pass_init_datastructures): Likewise.\n\t* tree-ssa.c (pass_early_warn_uninitialized): Likewise.\n\t(pass_late_warn_uninitialized): Likewise.\n\t(pass_update_address_taken): Likewise.\n\t* tree-ssa-ccp.c (pass_fold_builtins): Likewise.\n\t* tree-ssa-math-opts.c (pass_cse_reciprocals): Likewise.\n\t(pass_cse_sincos): Likewise.\n\t(pass_convert_to_rsqrt): Likewise.\n\t* tree-ssa-structalias.c (pass_build_alias): Likewise.\n\t* tree-stdarg.c (pass_stdarg): Likewise.\n\t* tree-tailcall.c (pass_tail_recursion): Likewise.\n\t(pass_tail_calls): Likewise.\n\t* tree-vect-generic.c (pass_lower_vector): Likewise.\n\t(pass_lower_vector_ssa): Likewise.\n\t* tree-vectorizer.c (pass_ipa_increase_alignment): Likewise.\n\nFrom-SVN: r146222", "tree": {"sha": "b0b02ac7309e2c5176559a4a187428542c87e05a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b0b02ac7309e2c5176559a4a187428542c87e05a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7072a650e38408ea56e66e7e1299df3738f892a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7072a650e38408ea56e66e7e1299df3738f892a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7072a650e38408ea56e66e7e1299df3738f892a2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7072a650e38408ea56e66e7e1299df3738f892a2/comments", "author": null, "committer": null, "parents": [{"sha": "ff9e67171206c05b15f6941ebf9971a006294f69", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff9e67171206c05b15f6941ebf9971a006294f69", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff9e67171206c05b15f6941ebf9971a006294f69"}], "stats": {"total": 679, "additions": 388, "deletions": 291}, "files": [{"sha": "89aa22c094e00fd231e86f0234a70f4e4da9f76b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 88, "deletions": 0, "changes": 88, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7072a650e38408ea56e66e7e1299df3738f892a2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7072a650e38408ea56e66e7e1299df3738f892a2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7072a650e38408ea56e66e7e1299df3738f892a2", "patch": "@@ -1,3 +1,91 @@\n+2009-04-16  Ian Lance Taylor  <iant@google.com>\n+\n+\t* df.h: Include \"timevar.h\".\n+\t(struct df_problem): Change tv_id field to timevar_id_t.\n+\t* tree-pass.h: Include \"timevar.h\".\n+\t(struct opt_pass): Change tv_id field to timevar_id_t.\n+\t* timevar.h (timevar_id_t): Define TV_NONE.\n+\t* passes.c (execute_one_ipa_transform_pass): Check for tv_id !=\n+\tTV_NONE rather than tv_id != 0.\n+\t(execute_one_pass): Likewise.\n+\t* Makefile.in (DF_H): Add $(TIMEVAR_H).\n+\t(TREE_PASS_H): Define.  Change all instances of tree-pass.h in\n+\tdependencies to $(TREE_PASS_H).\n+\t* bt-load.c (pass_branch_target_load_optimize1): Set tv_id field\n+\tto TV_NONE.\n+\t(pass_branch_target_load_optimize2): Likewise.\n+\t* cfglayout.c (pass_into_cfg_layout_mode): Likewise.\n+\t(pass_outof_cfg_layout_mode): Likewise.\n+\t* cgraphbuild.c (pass_remove_cgraph_callee_edges): Likewise.\n+\t(pass_rebuild_cgraph_edges): Likewise.\n+\t(pass_remove_cgraph_callee_edges): Likewise.\n+\t* df-core.c (pass_df_initialize_opt): Likewise.\n+\t(pass_df_initialize_no_opt): Likewise.\n+\t(pass_df_finish): Likewise.\n+\t* emit-rtl.c (pass_unshare_all_rtl): Likewise.\n+\t* except.c (pass_set_nothrow_function_flags): Likewise.\n+\t(pass_convert_to_eh_region_ranges): Likewise.\n+\t* final.c (pass_compute_alignments): Likewise.\n+\t* function.c (pass_instantiate_virtual_regs): Likewise.\n+\t(pass_init_function): Likewise.\n+\t(pass_leaf_regs): Likewise.\n+\t(pass_match_asm_constraints): Likewise.\n+\t* gimple-low.c (pass_lower_cf): Likewise.\n+\t(pass_mark_used_blocks): Likewise.\n+\t* init-regs.c (pass_initialize_regs): Likewise.\n+\t* integrate.c (pass_initial_value_sets): Likewise.\n+\t* ira.c (pass_ira): Likewise.\n+\t* jump.c (pass_cleanup_barriers): Likewise.\n+\t* omp-low.c (pass_expand_omp): Likewise.\n+\t(pass_lower_omp): Likewise.\n+\t* matrix-reorg.c (pass_ipa_matrix_reorg): Likewise.\n+\t* recog.c (pass_split_all_insns): Likewise.\n+\t(pass_split_after_reload): Likewise.\n+\t(pass_split_before_regstack): Likewise.\n+\t(pass_split_before_sched2): Likewise.\n+\t(pass_split_for_shorten_branches): Likewise.\n+\t* reginfo.c (pass_reginfo_init): Likewise.\n+\t(pass_subregs_of_mode_init): Likewise.\n+\t(pass_subregs_of_mode_finish): Likewise.\n+\t* passes.c (pass_postreload): Likewise.\n+\t* stack-ptr-mod.c (pass_stack_ptr_mod): Likewise.\n+\t* tree-cfg.c (pass_remove_useless_stmts): Likewise.\n+\t(pass_warn_function_return): Likewise.\n+\t(pass_warn_function_noreturn): Likewise.\n+\t* tree-complex.c (pass_lower_complex): Likewise.\n+\t(pass_lower_complex_O0): Likewise.\n+\t* tree-if-conv.c (pass_if_conversion): Likewise.\n+\t* tree-into-ssa.c (pass_build_ssa): Likewise.\n+\t* tree-mudflap.c (pass_mudflap_1): Likewise.\n+\t(pass_mudflap_2): Likewise.\n+\t* tree-nomudflap.c (pass_mudflap_1): Likewise.\n+\t(pass_mudflap_2): Likewise.\n+\t* tree-nrv.c (pass_return_slot): Likewise.\n+\t* tree-object-size.c (pass_object_sizes): Likewise.\n+\t* tree-optimize.c (pass_all_optimizations): Likewise.\n+\t(pass_early_local_passes): Likewise.\n+\t(pass_all_early_optimizations): Likewise.\n+\t(pass_cleanup_cfg): Likewise.\n+\t(pass_cleanup_cfg_post_optimizing): Likewise.\n+\t(pass_free_datastructures): Likewise.\n+\t(pass_free_cfg_annotations): Likewise.\n+\t(pass_fixup_cfg): Likewise.\n+\t(pass_init_datastructures): Likewise.\n+\t* tree-ssa.c (pass_early_warn_uninitialized): Likewise.\n+\t(pass_late_warn_uninitialized): Likewise.\n+\t(pass_update_address_taken): Likewise.\n+\t* tree-ssa-ccp.c (pass_fold_builtins): Likewise.\n+\t* tree-ssa-math-opts.c (pass_cse_reciprocals): Likewise.\n+\t(pass_cse_sincos): Likewise.\n+\t(pass_convert_to_rsqrt): Likewise.\n+\t* tree-ssa-structalias.c (pass_build_alias): Likewise.\n+\t* tree-stdarg.c (pass_stdarg): Likewise.\n+\t* tree-tailcall.c (pass_tail_recursion): Likewise.\n+\t(pass_tail_calls): Likewise.\n+\t* tree-vect-generic.c (pass_lower_vector): Likewise.\n+\t(pass_lower_vector_ssa): Likewise.\n+\t* tree-vectorizer.c (pass_ipa_increase_alignment): Likewise.\n+\n 2009-04-16  Joseph Myers  <joseph@codesourcery.com>\n \n \t* config/mips/mips.c (mips_rtx_cost_data): Use SOFT_FP_COSTS in"}, {"sha": "f534684480f6f4f5a9d4aeb96ed24003d50745a3", "filename": "gcc/Makefile.in", "status": "modified", "additions": 184, "deletions": 177, "changes": 361, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7072a650e38408ea56e66e7e1299df3738f892a2/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7072a650e38408ea56e66e7e1299df3738f892a2/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=7072a650e38408ea56e66e7e1299df3738f892a2", "patch": "@@ -830,7 +830,7 @@ IPA_UTILS_H = ipa-utils.h $(TREE_H) $(CGRAPH_H)\n IPA_REFERENCE_H = ipa-reference.h $(BITMAP_H) $(TREE_H)\n IPA_TYPE_ESCAPE_H = ipa-type-escape.h $(TREE_H)\n CGRAPH_H = cgraph.h $(TREE_H) $(BASIC_BLOCK_H)\n-DF_H = df.h $(BITMAP_H) $(BASIC_BLOCK_H) alloc-pool.h\n+DF_H = df.h $(BITMAP_H) $(BASIC_BLOCK_H) alloc-pool.h $(TIMEVAR_H)\n RESOURCE_H = resource.h hard-reg-set.h $(DF_H)\n DDG_H = ddg.h sbitmap.h $(DF_H)\n GCC_H = gcc.h version.h\n@@ -854,7 +854,8 @@ MKDEPS_H = $(srcdir)/../libcpp/include/mkdeps.h\n SYMTAB_H = $(srcdir)/../libcpp/include/symtab.h $(OBSTACK_H)\n CPP_ID_DATA_H = $(CPPLIB_H) $(srcdir)/../libcpp/include/cpp-id-data.h\n CPP_INTERNAL_H = $(srcdir)/../libcpp/internal.h $(CPP_ID_DATA_H)\n-TREE_DUMP_H = tree-dump.h $(SPLAY_TREE_H) tree-pass.h\n+TREE_PASS_H = tree-pass.h $(TIMEVAR_H)\n+TREE_DUMP_H = tree-dump.h $(SPLAY_TREE_H) $(TREE_PASS_H)\n TREE_FLOW_H = tree-flow.h tree-flow-inline.h tree-ssa-operands.h \\\n \t\t$(BITMAP_H) $(BASIC_BLOCK_H) hard-reg-set.h $(GIMPLE_H) \\\n \t\t$(HASHTAB_H) $(CGRAPH_H) $(IPA_REFERENCE_H) \\\n@@ -2059,13 +2060,13 @@ tree.o : tree.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n    $(OBSTACK_H) pointer-set.h fixed-value.h\n tree-dump.o: tree-dump.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(TREE_H) langhooks.h $(TOPLEV_H) $(SPLAY_TREE_H) $(TREE_DUMP_H) \\\n-   tree-iterator.h tree-pass.h $(DIAGNOSTIC_H) $(REAL_H) fixed-value.h\n+   tree-iterator.h $(TREE_PASS_H) $(DIAGNOSTIC_H) $(REAL_H) fixed-value.h\n tree-inline.o : tree-inline.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(TREE_H) $(RTL_H) $(EXPR_H) $(FLAGS_H) $(PARAMS_H) $(INPUT_H) insn-config.h \\\n    $(VARRAY_H) $(HASHTAB_H) $(TOPLEV_H) langhooks.h $(TREE_INLINE_H) $(CGRAPH_H) \\\n    intl.h $(FUNCTION_H) $(GGC_H) $(GIMPLE_H) \\\n    debug.h $(DIAGNOSTIC_H) $(EXCEPT_H) $(TREE_FLOW_H) tree-iterator.h tree-mudflap.h \\\n-   $(IPA_PROP_H) value-prof.h tree-pass.h $(TARGET_H) $(INTEGRATE_H)\n+   $(IPA_PROP_H) value-prof.h $(TREE_PASS_H) $(TARGET_H) $(INTEGRATE_H)\n print-tree.o : print-tree.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n    $(GGC_H) langhooks.h $(REAL_H) tree-iterator.h fixed-value.h \\\n    $(DIAGNOSTIC_H) $(TREE_FLOW_H)\n@@ -2077,19 +2078,19 @@ tree-ssa-structalias.o: tree-ssa-structalias.c \\\n    $(SYSTEM_H) $(CONFIG_H) coretypes.h $(TM_H) $(GGC_H) $(OBSTACK_H) $(BITMAP_H) \\\n    $(FLAGS_H) $(RTL_H) $(TM_P_H) hard-reg-set.h $(BASIC_BLOCK_H) output.h \\\n    $(DIAGNOSTIC_H) $(TREE_H) $(C_COMMON_H) $(TREE_FLOW_H) $(TREE_INLINE_H) varray.h \\\n-   $(C_TREE_H) $(GIMPLE_H) $(HASHTAB_H) $(FUNCTION_H) $(CGRAPH_H) tree-pass.h \\\n-   $(TIMEVAR_H) alloc-pool.h $(SPLAY_TREE_H) $(PARAMS_H) gt-tree-ssa-structalias.h \\\n-   $(CGRAPH_H) $(ALIAS_H) pointer-set.h\n+   $(C_TREE_H) $(GIMPLE_H) $(HASHTAB_H) $(FUNCTION_H) $(CGRAPH_H) \\\n+   $(TREE_PASS_H) $(TIMEVAR_H) alloc-pool.h $(SPLAY_TREE_H) $(PARAMS_H) \\\n+   gt-tree-ssa-structalias.h $(CGRAPH_H) $(ALIAS_H) pointer-set.h\n tree-ssa.o : tree-ssa.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n    $(RTL_H) $(TREE_H) $(TM_P_H) $(EXPR_H) output.h $(DIAGNOSTIC_H) \\\n    $(TOPLEV_H) $(FUNCTION_H) $(TIMEVAR_H) $(TM_H) coretypes.h \\\n-   $(TREE_DUMP_H) langhooks.h tree-pass.h $(BASIC_BLOCK_H) $(BITMAP_H) \\\n+   $(TREE_DUMP_H) langhooks.h $(TREE_PASS_H) $(BASIC_BLOCK_H) $(BITMAP_H) \\\n    $(FLAGS_H) $(GGC_H) hard-reg-set.h $(HASHTAB_H) pointer-set.h \\\n    $(GIMPLE_H) $(TREE_INLINE_H) $(VARRAY_H)\n tree-into-ssa.o : tree-into-ssa.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n    $(RTL_H) $(TREE_H) $(TM_P_H) $(EXPR_H) output.h $(DIAGNOSTIC_H) \\\n    $(FUNCTION_H) $(TIMEVAR_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n-   langhooks.h domwalk.h tree-pass.h $(GGC_H) $(PARAMS_H) $(BASIC_BLOCK_H) \\\n+   langhooks.h domwalk.h $(TREE_PASS_H) $(GGC_H) $(PARAMS_H) $(BASIC_BLOCK_H) \\\n    $(BITMAP_H) $(CFGLOOP_H) $(FLAGS_H) hard-reg-set.h $(HASHTAB_H) \\\n    $(GIMPLE_H) $(TREE_INLINE_H) $(VARRAY_H) vecprim.h\n tree-ssa-ter.o : tree-ssa-ter.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n@@ -2100,60 +2101,62 @@ tree-ssa-coalesce.o : tree-ssa-coalesce.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(TREE_SSA_LIVE_H) $(BITMAP_H) $(FLAGS_H) $(HASHTAB_H) $(TOPLEV_H)\n tree-outof-ssa.o : tree-outof-ssa.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n    $(TREE_H) $(DIAGNOSTIC_H) $(TIMEVAR_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n-   tree-pass.h $(TREE_SSA_LIVE_H) $(BASIC_BLOCK_H) $(BITMAP_H) $(GGC_H) $(TOPLEV_H)\n+   $(TREE_PASS_H) $(TREE_SSA_LIVE_H) $(BASIC_BLOCK_H) $(BITMAP_H) $(GGC_H) \\\n+   $(TOPLEV_H)\n tree-ssa-dse.o : tree-ssa-dse.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TM_H) $(GGC_H) $(TREE_H) $(RTL_H) $(TM_P_H) $(BASIC_BLOCK_H) \\\n-   $(TREE_FLOW_H) tree-pass.h $(TREE_DUMP_H) domwalk.h $(FLAGS_H) \\\n+   $(TREE_FLOW_H) $(TREE_PASS_H) $(TREE_DUMP_H) domwalk.h $(FLAGS_H) \\\n    $(DIAGNOSTIC_H) $(TIMEVAR_H) langhooks.h\n tree-ssa-forwprop.o : tree-ssa-forwprop.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TM_H) $(GGC_H) $(TREE_H) $(RTL_H) $(TM_P_H) $(BASIC_BLOCK_H) \\\n-   $(TREE_FLOW_H) tree-pass.h $(TREE_DUMP_H) $(DIAGNOSTIC_H) $(TIMEVAR_H) \\\n+   $(TREE_FLOW_H) $(TREE_PASS_H) $(TREE_DUMP_H) $(DIAGNOSTIC_H) $(TIMEVAR_H) \\\n    langhooks.h $(FLAGS_H) $(GIMPLE_H)\n tree-ssa-phiprop.o : tree-ssa-phiprop.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TM_H) $(GGC_H) $(TREE_H) $(RTL_H) $(TM_P_H) $(BASIC_BLOCK_H) \\\n-   $(TREE_FLOW_H) tree-pass.h $(TREE_DUMP_H) $(DIAGNOSTIC_H) $(TIMEVAR_H) \\\n+   $(TREE_FLOW_H) $(TREE_PASS_H) $(TREE_DUMP_H) $(DIAGNOSTIC_H) $(TIMEVAR_H) \\\n    langhooks.h $(FLAGS_H)\n tree-ssa-ifcombine.o : tree-ssa-ifcombine.c $(CONFIG_H) $(SYSTEM_H) \\\n    coretypes.h $(TM_H) $(TREE_H) $(BASIC_BLOCK_H) \\\n-   $(TREE_FLOW_H) tree-pass.h $(TREE_DUMP_H) $(DIAGNOSTIC_H) $(TIMEVAR_H)\n+   $(TREE_FLOW_H) $(TREE_PASS_H) $(TREE_DUMP_H) $(DIAGNOSTIC_H) $(TIMEVAR_H)\n tree-ssa-phiopt.o : tree-ssa-phiopt.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TM_H) $(GGC_H) $(TREE_H) $(RTL_H) $(TM_P_H) $(BASIC_BLOCK_H) \\\n-   $(TREE_FLOW_H) tree-pass.h $(TREE_DUMP_H) langhooks.h $(FLAGS_H) \\\n+   $(TREE_FLOW_H) $(TREE_PASS_H) $(TREE_DUMP_H) langhooks.h $(FLAGS_H) \\\n    $(DIAGNOSTIC_H) $(TIMEVAR_H) pointer-set.h domwalk.h\n tree-nrv.o : tree-nrv.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TM_H) $(TREE_H) $(RTL_H) $(FUNCTION_H) $(BASIC_BLOCK_H) $(EXPR_H) \\\n-   $(DIAGNOSTIC_H) $(TREE_FLOW_H) $(TIMEVAR_H) $(TREE_DUMP_H) tree-pass.h \\\n+   $(DIAGNOSTIC_H) $(TREE_FLOW_H) $(TIMEVAR_H) $(TREE_DUMP_H) $(TREE_PASS_H) \\\n    langhooks.h\n tree-ssa-copy.o : tree-ssa-copy.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n    $(RTL_H) $(TREE_H) $(TM_P_H) $(EXPR_H) $(GGC_H) output.h $(DIAGNOSTIC_H) \\\n    $(FUNCTION_H) $(TIMEVAR_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n-   $(BASIC_BLOCK_H) tree-pass.h langhooks.h tree-ssa-propagate.h $(FLAGS_H) \\\n-   $(CFGLOOP_H)\n+   $(BASIC_BLOCK_H) $(TREE_PASS_H) langhooks.h tree-ssa-propagate.h \\\n+   $(FLAGS_H) $(CFGLOOP_H)\n tree-ssa-propagate.o : tree-ssa-propagate.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(SYSTEM_H) $(RTL_H) $(TREE_H) $(TM_P_H) $(EXPR_H) $(GGC_H) output.h \\\n    $(DIAGNOSTIC_H) $(FUNCTION_H) $(TIMEVAR_H) $(TM_H) coretypes.h \\\n-   $(TREE_DUMP_H) $(BASIC_BLOCK_H) tree-pass.h langhooks.h \\\n+   $(TREE_DUMP_H) $(BASIC_BLOCK_H) $(TREE_PASS_H) langhooks.h \\\n    tree-ssa-propagate.h vec.h value-prof.h gt-tree-ssa-propagate.h $(FLAGS_H) \\\n    $(VARRAY_H) $(GIMPLE_H)\n tree-ssa-dom.o : tree-ssa-dom.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n    $(RTL_H) $(TREE_H) $(TM_P_H) $(EXPR_H) $(GGC_H) output.h $(DIAGNOSTIC_H) \\\n    $(FUNCTION_H) $(TIMEVAR_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n-   $(BASIC_BLOCK_H) domwalk.h tree-pass.h $(FLAGS_H) langhooks.h \\\n+   $(BASIC_BLOCK_H) domwalk.h $(TREE_PASS_H) $(FLAGS_H) langhooks.h \\\n    tree-ssa-propagate.h $(CFGLOOP_H) $(PARAMS_H) $(REAL_H)\n tree-ssa-uncprop.o : tree-ssa-uncprop.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(SYSTEM_H) $(RTL_H) $(TREE_H) $(TM_P_H) $(EXPR_H) $(GGC_H) output.h \\\n    $(DIAGNOSTIC_H) $(FUNCTION_H) $(TIMEVAR_H) $(TM_H) coretypes.h \\\n-   $(TREE_DUMP_H) $(BASIC_BLOCK_H) domwalk.h tree-pass.h $(FLAGS_H) \\\n+   $(TREE_DUMP_H) $(BASIC_BLOCK_H) domwalk.h $(TREE_PASS_H) $(FLAGS_H) \\\n    langhooks.h tree-ssa-propagate.h $(REAL_H)\n tree-ssa-threadedge.o : tree-ssa-threadedge.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) $(FLAGS_H) $(RTL_H) $(TM_P_H) $(GGC_H) \\\n    $(BASIC_BLOCK_H) $(CFGLOOP_H) output.h $(EXPR_H) \\\n    $(FUNCTION_H) $(DIAGNOSTIC_H) $(TIMEVAR_H) $(TREE_DUMP_H) $(TREE_FLOW_H) \\\n-   domwalk.h $(REAL_H) tree-pass.h tree-ssa-propagate.h langhooks.h $(PARAMS_H)\n+   domwalk.h $(REAL_H) $(TREE_PASS_H) tree-ssa-propagate.h langhooks.h \\\n+   $(PARAMS_H)\n tree-ssa-threadupdate.o : tree-ssa-threadupdate.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(SYSTEM_H) $(RTL_H) $(TREE_H) $(TM_P_H) $(EXPR_H) $(GGC_H) output.h \\\n    $(DIAGNOSTIC_H) $(FUNCTION_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n-   $(BASIC_BLOCK_H) $(FLAGS_H) tree-pass.h $(CFGLOOP_H)\n+   $(BASIC_BLOCK_H) $(FLAGS_H) $(TREE_PASS_H) $(CFGLOOP_H)\n tree-ssanames.o : tree-ssanames.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TM_H) $(TREE_H) $(VARRAY_H) $(GGC_H) $(TREE_FLOW_H)\n tree-phinodes.o : tree-phinodes.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n@@ -2165,45 +2168,45 @@ tree-ssa-live.o : tree-ssa-live.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n    $(TREE_H) $(DIAGNOSTIC_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n    $(TREE_SSA_LIVE_H) $(BITMAP_H) $(TOPLEV_H) debug.h $(FLAGS_H)\n tree-ssa-copyrename.o : tree-ssa-copyrename.c $(TREE_FLOW_H) $(CONFIG_H) \\\n-   $(SYSTEM_H) $(TREE_H) $(DIAGNOSTIC_H) $(FUNCTION_H) $(TIMEVAR_H) tree-pass.h \\\n-   $(TM_H) coretypes.h $(TREE_DUMP_H) $(TREE_SSA_LIVE_H) $(BASIC_BLOCK_H) \\\n-   $(BITMAP_H) $(FLAGS_H) $(HASHTAB_H) langhooks.h $(GIMPLE_H) \\\n-   $(TREE_INLINE_H) $(GIMPLE_H)\n+   $(SYSTEM_H) $(TREE_H) $(DIAGNOSTIC_H) $(FUNCTION_H) $(TIMEVAR_H) \\\n+   $(TREE_PASS_H) $(TM_H) coretypes.h $(TREE_DUMP_H) $(TREE_SSA_LIVE_H) \\\n+   $(BASIC_BLOCK_H) $(BITMAP_H) $(FLAGS_H) $(HASHTAB_H) langhooks.h \\\n+   $(GIMPLE_H) $(TREE_INLINE_H) $(GIMPLE_H)\n tree-ssa-pre.o : tree-ssa-pre.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(SYSTEM_H) $(TREE_H) $(GGC_H) $(DIAGNOSTIC_H) $(TIMEVAR_H) $(FIBHEAP_H) \\\n-   $(TM_H) coretypes.h $(TREE_DUMP_H) tree-pass.h $(FLAGS_H) langhooks.h $(CFGLOOP_H) \\\n-   alloc-pool.h $(BASIC_BLOCK_H) $(BITMAP_H) $(HASHTAB_H) $(GIMPLE_H) \\\n-   $(TREE_INLINE_H) tree-iterator.h tree-ssa-sccvn.h $(PARAMS_H) \\\n+   $(TM_H) coretypes.h $(TREE_DUMP_H) $(TREE_PASS_H) $(FLAGS_H) langhooks.h \\\n+   $(CFGLOOP_H) alloc-pool.h $(BASIC_BLOCK_H) $(BITMAP_H) $(HASHTAB_H) \\\n+   $(GIMPLE_H) $(TREE_INLINE_H) tree-iterator.h tree-ssa-sccvn.h $(PARAMS_H) \\\n    $(DBGCNT_H)\n tree-ssa-sccvn.o : tree-ssa-sccvn.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(SYSTEM_H) $(TREE_H) $(GGC_H) $(DIAGNOSTIC_H) $(TIMEVAR_H) $(FIBHEAP_H) \\\n-   $(TM_H) coretypes.h $(TREE_DUMP_H) tree-pass.h $(FLAGS_H) $(CFGLOOP_H) \\\n+   $(TM_H) coretypes.h $(TREE_DUMP_H) $(TREE_PASS_H) $(FLAGS_H) $(CFGLOOP_H) \\\n    alloc-pool.h $(BASIC_BLOCK_H) $(BITMAP_H) langhooks.h $(HASHTAB_H) $(GIMPLE_H) \\\n    $(TREE_INLINE_H) tree-iterator.h tree-ssa-propagate.h tree-ssa-sccvn.h \\\n    $(PARAMS_H)\n tree-vrp.o : tree-vrp.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n-   $(TREE_FLOW_H) tree-pass.h $(TREE_DUMP_H) $(DIAGNOSTIC_H) $(GGC_H) \\\n+   $(TREE_FLOW_H) $(TREE_PASS_H) $(TREE_DUMP_H) $(DIAGNOSTIC_H) $(GGC_H) \\\n    $(BASIC_BLOCK_H) tree-ssa-propagate.h $(FLAGS_H) $(TREE_DUMP_H) \\\n    $(CFGLOOP_H) tree-chrec.h $(TIMEVAR_H) $(TOPLEV_H) intl.h\n tree-cfg.o : tree-cfg.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n    $(RTL_H) $(TREE_H) $(TM_P_H) $(EXPR_H) $(GGC_H) $(FLAGS_H) output.h \\\n    $(DIAGNOSTIC_H) $(FUNCTION_H) $(TIMEVAR_H) $(TM_H) coretypes.h \\\n-   $(TREE_DUMP_H) $(EXCEPT_H) langhooks.h $(CFGLOOP_H) tree-pass.h \\\n+   $(TREE_DUMP_H) $(EXCEPT_H) langhooks.h $(CFGLOOP_H) $(TREE_PASS_H) \\\n    $(CFGLAYOUT_H) $(BASIC_BLOCK_H) hard-reg-set.h $(TOPLEV_H) \\\n    value-prof.h tree-ssa-propagate.h $(TREE_INLINE_H)\n tree-cfgcleanup.o : tree-cfgcleanup.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n    $(RTL_H) $(TREE_H) $(TM_P_H) $(EXPR_H) $(GGC_H) $(FLAGS_H) output.h \\\n    $(DIAGNOSTIC_H) $(TOPLEV_H) $(FUNCTION_H) $(TIMEVAR_H) $(TM_H) coretypes.h \\\n-   $(TREE_DUMP_H) $(EXCEPT_H) langhooks.h $(CFGLOOP_H) tree-pass.h \\\n+   $(TREE_DUMP_H) $(EXCEPT_H) langhooks.h $(CFGLOOP_H) $(TREE_PASS_H) \\\n    $(CFGLAYOUT_H) $(BASIC_BLOCK_H) hard-reg-set.h $(HASHTAB_H) $(TOPLEV_H) \\\n    tree-ssa-propagate.h tree-scalar-evolution.h\n tree-tailcall.o : tree-tailcall.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n    $(RTL_H) $(TREE_H) $(TM_P_H) $(FUNCTION_H) $(TM_H) coretypes.h \\\n-   $(TREE_DUMP_H) $(DIAGNOSTIC_H) $(EXCEPT_H) tree-pass.h $(FLAGS_H) langhooks.h \\\n+   $(TREE_DUMP_H) $(DIAGNOSTIC_H) $(EXCEPT_H) $(TREE_PASS_H) $(FLAGS_H) langhooks.h \\\n    $(BASIC_BLOCK_H) hard-reg-set.h $(DBGCNT_H)\n tree-ssa-sink.o : tree-ssa-sink.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(SYSTEM_H) $(TREE_H) $(GGC_H) $(DIAGNOSTIC_H) $(TIMEVAR_H) \\\n-   $(TM_H) coretypes.h $(TREE_DUMP_H) tree-pass.h $(FLAGS_H) alloc-pool.h \\\n+   $(TM_H) coretypes.h $(TREE_DUMP_H) $(TREE_PASS_H) $(FLAGS_H) alloc-pool.h \\\n    $(BASIC_BLOCK_H) $(BITMAP_H) $(CFGLOOP_H) $(FIBHEAP_H) $(HASHTAB_H) \\\n    langhooks.h $(REAL_H) $(GIMPLE_H) $(TREE_INLINE_H) tree-iterator.h\n tree-nested.o: tree-nested.c $(CONFIG_H) $(SYSTEM_H) $(TM_H) $(TREE_H) \\\n@@ -2213,67 +2216,67 @@ tree-nested.o: tree-nested.c $(CONFIG_H) $(SYSTEM_H) $(TM_H) $(TREE_H) \\\n tree-if-conv.o: tree-if-conv.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(TREE_H) $(FLAGS_H) $(TIMEVAR_H) $(BASIC_BLOCK_H) $(TREE_FLOW_H) \\\n    $(CFGLOOP_H) $(RTL_H) $(C_COMMON_H) tree-chrec.h $(TREE_DATA_REF_H) \\\n-   $(SCEV_H) tree-pass.h $(DIAGNOSTIC_H) $(TARGET_H) $(TREE_DUMP_H) \\\n+   $(SCEV_H) $(TREE_PASS_H) $(DIAGNOSTIC_H) $(TARGET_H) $(TREE_DUMP_H) \\\n    $(VARRAY_H)\n tree-iterator.o : tree-iterator.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) \\\n    coretypes.h $(GGC_H) tree-iterator.h $(GIMPLE_H) gt-tree-iterator.h\n tree-dfa.o : tree-dfa.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n    $(RTL_H) $(TREE_H) $(TM_P_H) $(EXPR_H) $(GGC_H) output.h $(DIAGNOSTIC_H) \\\n    $(TREE_INLINE_H) $(HASHTAB_H) pointer-set.h $(FLAGS_H) $(FUNCTION_H) \\\n    $(TIMEVAR_H) convert.h $(TM_H) coretypes.h langhooks.h $(TREE_DUMP_H) \\\n-   tree-pass.h $(PARAMS_H) $(CGRAPH_H) $(BASIC_BLOCK_H) hard-reg-set.h \\\n+   $(TREE_PASS_H) $(PARAMS_H) $(CGRAPH_H) $(BASIC_BLOCK_H) hard-reg-set.h \\\n    $(GIMPLE_H)\n tree-ssa-operands.o : tree-ssa-operands.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(SYSTEM_H) $(TREE_H) $(GGC_H) $(DIAGNOSTIC_H) $(TREE_INLINE_H) \\\n-   $(FLAGS_H) $(FUNCTION_H) $(TM_H) $(TIMEVAR_H) tree-pass.h $(TOPLEV_H) \\\n+   $(FLAGS_H) $(FUNCTION_H) $(TM_H) $(TIMEVAR_H) $(TREE_PASS_H) $(TOPLEV_H) \\\n    coretypes.h langhooks.h $(IPA_REFERENCE_H)\n tree-eh.o : tree-eh.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n    $(RTL_H) $(TREE_H) $(TM_H) $(FLAGS_H) $(FUNCTION_H) $(EXCEPT_H) langhooks.h \\\n-   $(GGC_H) tree-pass.h coretypes.h $(TIMEVAR_H) $(TM_P_H) pointer-set.h \\\n+   $(GGC_H) $(TREE_PASS_H) coretypes.h $(TIMEVAR_H) $(TM_P_H) pointer-set.h \\\n    $(TREE_DUMP_H) $(TREE_INLINE_H) tree-iterator.h $(TOPLEV_H)\n tree-ssa-loop.o : tree-ssa-loop.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(TREE_H) $(RTL_H) $(TM_P_H) hard-reg-set.h $(BASIC_BLOCK_H) output.h \\\n-   $(DIAGNOSTIC_H) $(TREE_FLOW_H) $(TREE_DUMP_H) tree-pass.h $(TIMEVAR_H) \\\n+   $(DIAGNOSTIC_H) $(TREE_FLOW_H) $(TREE_DUMP_H) $(TREE_PASS_H) $(TIMEVAR_H) \\\n    $(CFGLOOP_H) $(FLAGS_H) $(TREE_INLINE_H) tree-scalar-evolution.h\n tree-ssa-loop-unswitch.o : tree-ssa-loop-unswitch.c $(TREE_FLOW_H) \\\n    $(CONFIG_H) $(SYSTEM_H) $(RTL_H) $(TREE_H) $(TM_P_H) $(CFGLOOP_H) \\\n    domwalk.h $(PARAMS_H) output.h $(DIAGNOSTIC_H) $(TIMEVAR_H) $(TM_H) \\\n-   coretypes.h $(TREE_DUMP_H) tree-pass.h $(BASIC_BLOCK_H) hard-reg-set.h \\\n+   coretypes.h $(TREE_DUMP_H) $(TREE_PASS_H) $(BASIC_BLOCK_H) hard-reg-set.h \\\n     $(TREE_INLINE_H)\n tree-ssa-address.o : tree-ssa-address.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(SYSTEM_H) $(RTL_H) $(TREE_H) $(TM_P_H) \\\n    output.h $(DIAGNOSTIC_H) $(TIMEVAR_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n-   tree-pass.h $(FLAGS_H) $(TREE_INLINE_H) $(RECOG_H) insn-config.h $(EXPR_H) \\\n-   gt-tree-ssa-address.h $(GGC_H) tree-affine.h\n+   $(TREE_PASS_H) $(FLAGS_H) $(TREE_INLINE_H) $(RECOG_H) insn-config.h \\\n+   $(EXPR_H) gt-tree-ssa-address.h $(GGC_H) tree-affine.h\n tree-ssa-loop-niter.o : tree-ssa-loop-niter.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(SYSTEM_H) $(RTL_H) $(TREE_H) $(TM_P_H) $(CFGLOOP_H) $(PARAMS_H) \\\n    $(TREE_INLINE_H) output.h $(DIAGNOSTIC_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n-   $(TOPLEV_H) $(FLAGS_H) tree-pass.h $(SCEV_H) $(TREE_DATA_REF_H) $(BASIC_BLOCK_H) \\\n-   $(GGC_H) hard-reg-set.h tree-chrec.h intl.h\n+   $(TOPLEV_H) $(FLAGS_H) $(TREE_PASS_H) $(SCEV_H) $(TREE_DATA_REF_H) \\\n+   $(BASIC_BLOCK_H) $(GGC_H) hard-reg-set.h tree-chrec.h intl.h\n tree-ssa-loop-ivcanon.o : tree-ssa-loop-ivcanon.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(SYSTEM_H) $(RTL_H) $(TREE_H) $(TM_P_H) $(CFGLOOP_H) $(PARAMS_H) \\\n    $(TREE_INLINE_H) output.h $(DIAGNOSTIC_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n-   $(FLAGS_H) tree-pass.h $(SCEV_H) $(BASIC_BLOCK_H) $(GGC_H) hard-reg-set.h \\\n-   tree-chrec.h\n+   $(FLAGS_H) $(TREE_PASS_H) $(SCEV_H) $(BASIC_BLOCK_H) $(GGC_H) \\\n+   hard-reg-set.h tree-chrec.h\n tree-ssa-loop-ch.o : tree-ssa-loop-ch.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(SYSTEM_H) $(RTL_H) $(TREE_H) $(TM_P_H) $(CFGLOOP_H) $(TREE_INLINE_H) \\\n    output.h $(DIAGNOSTIC_H) $(TIMEVAR_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n-   tree-pass.h $(FLAGS_H) $(BASIC_BLOCK_H) hard-reg-set.h\n+   $(TREE_PASS_H) $(FLAGS_H) $(BASIC_BLOCK_H) hard-reg-set.h\n tree-ssa-loop-prefetch.o: tree-ssa-loop-prefetch.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(SYSTEM_H) $(RTL_H) $(TREE_H) $(TM_P_H) $(CFGLOOP_H) $(EXPR_H) \\\n    output.h $(DIAGNOSTIC_H) $(TIMEVAR_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n-   tree-pass.h $(GGC_H) $(RECOG_H) insn-config.h $(HASHTAB_H) $(SCEV_H) \\\n+   $(TREE_PASS_H) $(GGC_H) $(RECOG_H) insn-config.h $(HASHTAB_H) $(SCEV_H) \\\n    $(CFGLOOP_H) $(PARAMS_H) langhooks.h $(BASIC_BLOCK_H) hard-reg-set.h \\\n    tree-chrec.h $(TOPLEV_H) langhooks.h $(TREE_INLINE_H) $(TREE_DATA_REF_H) \\\n    $(OPTABS_H)\n tree-predcom.o: tree-predcom.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(TM_P_H) \\\n    $(CFGLOOP_H) $(TREE_FLOW_H) $(GGC_H) $(TREE_DATA_REF_H) $(SCEV_H) \\\n-   $(PARAMS_H) $(DIAGNOSTIC_H) tree-pass.h $(TM_H) coretypes.h tree-affine.h \\\n-   $(TREE_INLINE_H)\n+   $(PARAMS_H) $(DIAGNOSTIC_H) $(TREE_PASS_H) $(TM_H) coretypes.h \\\n+   tree-affine.h $(TREE_INLINE_H)\n tree-ssa-loop-ivopts.o : tree-ssa-loop-ivopts.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(SYSTEM_H) $(RTL_H) $(TREE_H) $(TM_P_H) $(CFGLOOP_H) $(EXPR_H) \\\n    output.h $(DIAGNOSTIC_H) $(TIMEVAR_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n-   tree-pass.h $(GGC_H) $(RECOG_H) insn-config.h $(HASHTAB_H) $(SCEV_H) \\\n+   $(TREE_PASS_H) $(GGC_H) $(RECOG_H) insn-config.h $(HASHTAB_H) $(SCEV_H) \\\n    $(CFGLOOP_H) $(PARAMS_H) langhooks.h $(BASIC_BLOCK_H) hard-reg-set.h \\\n    tree-chrec.h $(VARRAY_H) tree-affine.h pointer-set.h $(TARGET_H)\n tree-affine.o : tree-affine.c tree-affine.h $(CONFIG_H) pointer-set.h \\\n@@ -2282,33 +2285,33 @@ tree-affine.o : tree-affine.c tree-affine.h $(CONFIG_H) pointer-set.h \\\n tree-ssa-loop-manip.o : tree-ssa-loop-manip.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) $(RTL_H) $(TM_P_H) hard-reg-set.h \\\n    $(BASIC_BLOCK_H) output.h $(DIAGNOSTIC_H) $(TREE_FLOW_H) $(TREE_DUMP_H) \\\n-   $(TIMEVAR_H) $(CFGLOOP_H) tree-pass.h $(CFGLAYOUT_H) tree-scalar-evolution.h \\\n-   $(PARAMS_H) $(TREE_INLINE_H)\n+   $(TIMEVAR_H) $(CFGLOOP_H) $(TREE_PASS_H) $(CFGLAYOUT_H) \\\n+   tree-scalar-evolution.h $(PARAMS_H) $(TREE_INLINE_H)\n tree-ssa-loop-im.o : tree-ssa-loop-im.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(SYSTEM_H) $(RTL_H) $(TREE_H) $(TM_P_H) $(CFGLOOP_H) domwalk.h \\\n    $(PARAMS_H) output.h $(DIAGNOSTIC_H) $(TIMEVAR_H) $(TM_H) coretypes.h \\\n-   $(TREE_DUMP_H) tree-pass.h $(FLAGS_H) $(REAL_H) $(BASIC_BLOCK_H) \\\n+   $(TREE_DUMP_H) $(TREE_PASS_H) $(FLAGS_H) $(REAL_H) $(BASIC_BLOCK_H) \\\n    hard-reg-set.h pointer-set.h tree-affine.h tree-ssa-propagate.h\n tree-ssa-math-opts.o : tree-ssa-math-opts.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-   $(TM_H) $(FLAGS_H) $(TREE_H) $(TREE_FLOW_H) $(REAL_H) $(TIMEVAR_H) tree-pass.h \\\n-   alloc-pool.h $(BASIC_BLOCK_H) $(TARGET_H)\n+   $(TM_H) $(FLAGS_H) $(TREE_H) $(TREE_FLOW_H) $(REAL_H) $(TIMEVAR_H) \\\n+   $(TREE_PASS_H) alloc-pool.h $(BASIC_BLOCK_H) $(TARGET_H)\n tree-ssa-alias.o : tree-ssa-alias.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n    $(RTL_H) $(TREE_H) $(TM_P_H) $(EXPR_H) $(GGC_H) $(TREE_INLINE_H) $(FLAGS_H) \\\n    $(FUNCTION_H) $(TIMEVAR_H) convert.h $(TM_H) coretypes.h langhooks.h \\\n-   $(TREE_DUMP_H) tree-pass.h $(PARAMS_H) $(BASIC_BLOCK_H) $(DIAGNOSTIC_H) \\\n+   $(TREE_DUMP_H) $(TREE_PASS_H) $(PARAMS_H) $(BASIC_BLOCK_H) $(DIAGNOSTIC_H) \\\n    hard-reg-set.h $(GIMPLE_H) vec.h \\\n    $(IPA_TYPE_ESCAPE_H) vecprim.h pointer-set.h alloc-pool.h\n tree-ssa-reassoc.o : tree-ssa-reassoc.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(SYSTEM_H) $(TREE_H) $(GGC_H) $(DIAGNOSTIC_H) $(TIMEVAR_H) \\\n-   $(TM_H) coretypes.h $(TREE_DUMP_H) tree-pass.h $(FLAGS_H) tree-iterator.h\\\n-   $(BASIC_BLOCK_H) $(GIMPLE_H) $(TREE_INLINE_H) vec.h langhooks.h \\\n-   alloc-pool.h pointer-set.h $(CFGLOOP_H)\n+   $(TM_H) coretypes.h $(TREE_DUMP_H) $(TREE_PASS_H) $(FLAGS_H) \\\n+   tree-iterator.h $(BASIC_BLOCK_H) $(GIMPLE_H) $(TREE_INLINE_H) vec.h \\\n+   langhooks.h alloc-pool.h pointer-set.h $(CFGLOOP_H)\n tree-optimize.o : tree-optimize.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n    $(RTL_H) $(TREE_H) $(TM_P_H) hard-reg-set.h $(EXPR_H) $(GGC_H) output.h \\\n    $(DIAGNOSTIC_H) $(BASIC_BLOCK_H) $(FLAGS_H) $(TIMEVAR_H) $(TM_H) coretypes.h \\\n    $(TREE_DUMP_H) $(TOPLEV_H) $(FUNCTION_H) langhooks.h $(FLAGS_H) $(CGRAPH_H) \\\n-   $(TREE_INLINE_H) tree-mudflap.h $(GGC_H) graph.h $(CGRAPH_H) tree-pass.h \\\n-   $(CFGLOOP_H) $(EXCEPT_H)\n+   $(TREE_INLINE_H) tree-mudflap.h $(GGC_H) graph.h $(CGRAPH_H) \\\n+   $(TREE_PASS_H) $(CFGLOOP_H) $(EXCEPT_H)\n \n c-gimplify.o : c-gimplify.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) \\\n    $(C_TREE_H) $(C_COMMON_H) $(DIAGNOSTIC_H) $(GIMPLE_H) $(VARRAY_H) \\\n@@ -2326,35 +2329,36 @@ gimple-iterator.o : gimple-iterator.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n gimple-low.o : gimple-low.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) \\\n    $(DIAGNOSTIC_H) $(GIMPLE_H) $(TREE_INLINE_H) $(VARRAY_H) langhooks.h \\\n    $(LANGHOOKS_DEF_H) $(TREE_FLOW_H) $(TIMEVAR_H) $(TM_H) coretypes.h \\\n-   $(EXCEPT_H) $(FLAGS_H) $(RTL_H) $(FUNCTION_H) $(EXPR_H) tree-pass.h \\\n+   $(EXCEPT_H) $(FLAGS_H) $(RTL_H) $(FUNCTION_H) $(EXPR_H) $(TREE_PASS_H) \\\n    $(HASHTAB_H) $(TOPLEV.H) tree-iterator.h\n omp-low.o : omp-low.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n    $(RTL_H) $(GIMPLE_H) $(TREE_INLINE_H) langhooks.h $(DIAGNOSTIC_H) \\\n-   $(TREE_FLOW_H) $(TIMEVAR_H) $(FLAGS_H) $(EXPR_H) $(TOPLEV_H) tree-pass.h \\\n-   $(GGC_H) $(EXCEPT_H) $(SPLAY_TREE_H) $(OPTABS_H) $(CFGLOOP_H) \\\n-   tree-iterator.h\n+   $(TREE_FLOW_H) $(TIMEVAR_H) $(FLAGS_H) $(EXPR_H) $(TOPLEV_H) \\\n+   $(TREE_PASS_H) $(GGC_H) $(EXCEPT_H) $(SPLAY_TREE_H) $(OPTABS_H) \\\n+   $(CFGLOOP_H) tree-iterator.h\n tree-browser.o : tree-browser.c tree-browser.def $(CONFIG_H) $(SYSTEM_H) \\\n    $(TREE_H) $(TREE_INLINE_H) $(DIAGNOSTIC_H) $(HASHTAB_H) \\\n    $(TM_H) coretypes.h\n omega.o : omega.c omega.h $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-   errors.h $(GGC_H) $(TREE_H) $(DIAGNOSTIC_H) varray.h tree-pass.h  $(PARAMS_H)\n+   errors.h $(GGC_H) $(TREE_H) $(DIAGNOSTIC_H) varray.h $(TREE_PASS_H) \\\n+   $(PARAMS_H)\n tree-chrec.o: tree-chrec.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-   $(GGC_H) $(TREE_H) $(REAL_H) $(SCEV_H) tree-pass.h $(PARAMS_H) \\\n+   $(GGC_H) $(TREE_H) $(REAL_H) $(SCEV_H) $(TREE_PASS_H) $(PARAMS_H) \\\n    $(DIAGNOSTIC_H) $(CFGLOOP_H) $(TREE_FLOW_H)\n tree-scalar-evolution.o: tree-scalar-evolution.c $(CONFIG_H) $(SYSTEM_H) \\\n    coretypes.h $(TM_H) $(GGC_H) $(TREE_H) $(REAL_H) $(RTL_H) \\\n    $(BASIC_BLOCK_H) $(DIAGNOSTIC_H) $(TREE_FLOW_H) $(TREE_DUMP_H) \\\n-   $(TIMEVAR_H) $(CFGLOOP_H) $(SCEV_H) tree-pass.h $(FLAGS_H) tree-chrec.h \\\n+   $(TIMEVAR_H) $(CFGLOOP_H) $(SCEV_H) $(TREE_PASS_H) $(FLAGS_H) tree-chrec.h \\\n    gt-tree-scalar-evolution.h\n tree-data-ref.o: tree-data-ref.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(GGC_H) $(TREE_H) $(RTL_H) $(BASIC_BLOCK_H) $(DIAGNOSTIC_H) \\\n    $(TREE_FLOW_H) $(TREE_DUMP_H) $(TIMEVAR_H) $(CFGLOOP_H) \\\n-   $(TREE_DATA_REF_H) $(SCEV_H) tree-pass.h tree-chrec.h langhooks.h\n+   $(TREE_DATA_REF_H) $(SCEV_H) $(TREE_PASS_H) tree-chrec.h langhooks.h\n graphite.o: graphite.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(GGC_H) $(TREE_H) $(RTL_H) $(BASIC_BLOCK_H) $(DIAGNOSTIC_H) $(TOPLEV_H) \\\n    $(TREE_FLOW_H) $(TREE_DUMP_H) $(TIMEVAR_H) $(CFGLOOP_H) $(GIMPLE_H) domwalk.h \\\n-   $(TREE_DATA_REF_H) $(SCEV_H) tree-pass.h tree-chrec.h graphite.h pointer-set.h \\\n-   value-prof.h\n+   $(TREE_DATA_REF_H) $(SCEV_H) $(TREE_PASS_H) tree-chrec.h graphite.h \\\n+   pointer-set.h value-prof.h\n tree-vect-loop.o: tree-vect-loop.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TM_H) $(GGC_H) $(TREE_H) $(BASIC_BLOCK_H) $(DIAGNOSTIC_H) $(TREE_FLOW_H) \\\n    $(TREE_DUMP_H) $(CFGLOOP_H) $(EXPR_H) $(RECOG_H) $(OPTABS_H) $(TOPLEV_H) \\\n@@ -2381,46 +2385,46 @@ tree-vect-data-refs.o: tree-vect-data-refs.c $(CONFIG_H) $(SYSTEM_H) \\\n    $(EXPR_H) $(OPTABS_H) tree-chrec.h $(SCEV_H) tree-vectorizer.h $(TOPLEV_H)\n tree-vectorizer.o: tree-vectorizer.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TM_H) $(GGC_H) $(TREE_H) $(DIAGNOSTIC_H) $(TREE_FLOW_H) $(TREE_DUMP_H) \\\n-   $(CFGLOOP_H) tree-pass.h tree-vectorizer.h $(TIMEVAR_H)\n+   $(CFGLOOP_H) $(TREE_PASS_H) tree-vectorizer.h $(TIMEVAR_H)\n tree-loop-linear.o: tree-loop-linear.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TM_H) $(GGC_H) $(OPTABS_H) $(TREE_H) $(RTL_H) $(BASIC_BLOCK_H) \\\n    $(DIAGNOSTIC_H) $(TREE_FLOW_H) $(TREE_DUMP_H) $(TIMEVAR_H) $(CFGLOOP_H) \\\n-   tree-pass.h $(TREE_DATA_REF_H) $(SCEV_H) $(EXPR_H) $(LAMBDA_H) \\\n+   $(TREE_PASS_H) $(TREE_DATA_REF_H) $(SCEV_H) $(EXPR_H) $(LAMBDA_H) \\\n    $(TARGET_H) tree-chrec.h $(OBSTACK_H)\n tree-loop-distribution.o: tree-loop-distribution.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TM_H) $(GGC_H) $(OPTABS_H) $(TREE_H) $(RTL_H) $(BASIC_BLOCK_H) \\\n    $(DIAGNOSTIC_H) $(TREE_FLOW_H) $(TREE_DUMP_H) $(TIMEVAR_H) $(CFGLOOP_H) \\\n-   tree-pass.h $(TREE_DATA_REF_H) $(SCEV_H) $(EXPR_H) \\\n+   $(TREE_PASS_H) $(TREE_DATA_REF_H) $(SCEV_H) $(EXPR_H) \\\n    $(TARGET_H) tree-chrec.h langhooks.h tree-vectorizer.h\n tree-parloops.o: tree-parloops.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(TREE_FLOW_H) $(TREE_H) $(RTL_H) $(CFGLOOP_H) $(TREE_DATA_REF_H) $(GGC_H) \\\n-   $(DIAGNOSTIC_H) tree-pass.h $(SCEV_H) langhooks.h gt-tree-parloops.h \\\n+   $(DIAGNOSTIC_H) $(TREE_PASS_H) $(SCEV_H) langhooks.h gt-tree-parloops.h \\\n    tree-vectorizer.h\n tree-stdarg.o: tree-stdarg.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-   $(TREE_H) $(FUNCTION_H) $(DIAGNOSTIC_H) $(TREE_FLOW_H) tree-pass.h \\\n+   $(TREE_H) $(FUNCTION_H) $(DIAGNOSTIC_H) $(TREE_FLOW_H) $(TREE_PASS_H) \\\n    tree-stdarg.h $(TARGET_H) langhooks.h\n tree-object-size.o: tree-object-size.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-   $(TM_H) $(TREE_H) $(TOPLEV_H) $(DIAGNOSTIC_H) $(TREE_FLOW_H) tree-pass.h \\\n-   tree-ssa-propagate.h\n+   $(TM_H) $(TREE_H) $(TOPLEV_H) $(DIAGNOSTIC_H) $(TREE_FLOW_H) \\\n+   $(TREE_PASS_H) tree-ssa-propagate.h\n gimple.o : gimple.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TREE_H) \\\n    $(GGC_H) $(GIMPLE_H) $(GIMPLE_H) $(DIAGNOSTIC_H) gt-gimple.h \\\n    $(TREE_FLOW_H) value-prof.h $(FLAGS_H)\n gimple-pretty-print.o : gimple-pretty-print.c $(CONFIG_H) $(SYSTEM_H) \\\n    $(TREE_H) $(DIAGNOSTIC_H) $(REAL_H) $(HASHTAB_H) $(TREE_FLOW_H) \\\n-   $(TM_H) coretypes.h tree-pass.h $(GIMPLE_H) value-prof.h\n+   $(TM_H) coretypes.h $(TREE_PASS_H) $(GIMPLE_H) value-prof.h\n tree-mudflap.o : $(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(TREE_INLINE_H) \\\n    $(GIMPLE_H) $(DIAGNOSTIC_H) $(HASHTAB_H) langhooks.h tree-mudflap.h \\\n-   $(TM_H) coretypes.h $(TREE_DUMP_H) tree-pass.h $(CGRAPH_H) $(GGC_H) \\\n+   $(TM_H) coretypes.h $(TREE_DUMP_H) $(TREE_PASS_H) $(CGRAPH_H) $(GGC_H) \\\n    gt-tree-mudflap.h $(BASIC_BLOCK_H) $(FLAGS_H) $(FUNCTION_H) hard-reg-set.h \\\n    $(RTL_H) $(TM_P_H) $(TREE_FLOW_H) $(TOPLEV.H) $(GIMPLE_H) tree-iterator.h\n tree-nomudflap.o : $(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(TREE_INLINE_H) \\\n    $(C_TREE_H) $(C_COMMON_H) $(GIMPLE_H) $(DIAGNOSTIC_H) $(HASHTAB_H) \\\n    output.h $(VARRAY_H) langhooks.h tree-mudflap.h $(TM_H) coretypes.h \\\n-   $(GGC_H) gt-tree-mudflap.h tree-pass.h $(TOPLEV_H)\n+   $(GGC_H) gt-tree-mudflap.h $(TREE_PASS_H) $(TOPLEV_H)\n tree-pretty-print.o : tree-pretty-print.c $(CONFIG_H) $(SYSTEM_H) \\\n    $(TREE_H) $(DIAGNOSTIC_H) $(REAL_H) $(HASHTAB_H) $(TREE_FLOW_H) \\\n-   $(TM_H) coretypes.h tree-iterator.h tree-chrec.h langhooks.h tree-pass.h \\\n-   value-prof.h fixed-value.h output.h\n+   $(TM_H) coretypes.h tree-iterator.h tree-chrec.h langhooks.h \\\n+   $(TREE_PASS_H) value-prof.h fixed-value.h output.h\n fold-const.o : fold-const.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(TREE_H) $(FLAGS_H) $(REAL_H) $(TOPLEV_H) $(HASHTAB_H) $(EXPR_H) $(RTL_H) \\\n    $(GGC_H) $(TM_P_H) langhooks.h $(MD5_H) intl.h fixed-value.h $(TARGET_H) \\\n@@ -2432,7 +2436,8 @@ diagnostic.o : diagnostic.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n opts.o : opts.c opts.h options.h $(TOPLEV_H) $(CONFIG_H) $(SYSTEM_H) \\\n    coretypes.h $(TREE_H) $(TM_H) langhooks.h $(GGC_H) $(EXPR_H) $(RTL_H) \\\n    output.h $(DIAGNOSTIC_H) $(TM_P_H) $(INSN_ATTR_H) intl.h $(TARGET_H) \\\n-   $(FLAGS_H) $(PARAMS_H) tree-pass.h $(DBGCNT_H) debug.h varray.h $(PLUGIN_H)\n+   $(FLAGS_H) $(PARAMS_H) $(TREE_PASS_H) $(DBGCNT_H) debug.h varray.h \\\n+   $(PLUGIN_H)\n opts-common.o : opts-common.c opts.h $(CONFIG_H) $(SYSTEM_H) \\\n    coretypes.h intl.h\n targhooks.o : targhooks.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TREE_H) \\\n@@ -2448,7 +2453,7 @@ toplev.o : toplev.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n    value-prof.h $(PARAMS_H) $(TM_P_H) reload.h ira.h dwarf2asm.h $(TARGET_H) \\\n    langhooks.h insn-flags.h $(CFGLAYOUT_H) $(CFGLOOP_H) hosthooks.h \\\n    $(CGRAPH_H) $(COVERAGE_H) alloc-pool.h $(GGC_H) $(INTEGRATE_H) \\\n-   opts.h params.def tree-mudflap.h $(REAL_H) tree-pass.h $(GIMPLE_H) \\\n+   opts.h params.def tree-mudflap.h $(REAL_H) $(TREE_PASS_H) $(GIMPLE_H) \\\n    tree-ssa-alias.h $(PLUGIN_H)\n \t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) \\\n \t  -DTARGET_NAME=\\\"$(target_noncanonical)\\\" \\\n@@ -2461,12 +2466,12 @@ passes.o : passes.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n    graph.h $(EXCEPT_H) $(REGS_H) $(TIMEVAR_H) value-prof.h \\\n    $(PARAMS_H) $(TM_P_H) reload.h dwarf2asm.h $(TARGET_H) \\\n    langhooks.h insn-flags.h $(CFGLAYOUT_H) $(REAL_H) $(CFGLOOP_H) \\\n-   hosthooks.h $(CGRAPH_H) $(COVERAGE_H) tree-pass.h $(TREE_DUMP_H) \\\n+   hosthooks.h $(CGRAPH_H) $(COVERAGE_H) $(TREE_PASS_H) $(TREE_DUMP_H) \\\n    $(GGC_H) $(INTEGRATE_H) $(CPPLIB_H) opts.h $(TREE_FLOW_H) $(TREE_INLINE_H) \\\n    gt-passes.h $(DF_H) $(PREDICT_H)\n \n plugin.o : plugin.c $(PLUGIN_H) $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-   errors.h $(TOPLEV_H) $(TREE_H) tree-pass.h intl.h\n+   errors.h $(TOPLEV_H) $(TREE_H) $(TREE_PASS_H) intl.h\n \n main.o : main.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TOPLEV_H)\n \n@@ -2498,9 +2503,9 @@ function.o : function.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(OPTABS_H) libfuncs.h $(REGS_H) hard-reg-set.h insn-config.h $(RECOG_H) \\\n    output.h $(TOPLEV_H) $(EXCEPT_H) $(HASHTAB_H) $(GGC_H) $(TM_P_H) langhooks.h \\\n    gt-function.h $(TARGET_H) $(BASIC_BLOCK_H) $(INTEGRATE_H) $(PREDICT_H) \\\n-   tree-pass.h $(DF_H) $(TIMEVAR_H) vecprim.h\n+   $(TREE_PASS_H) $(DF_H) $(TIMEVAR_H) vecprim.h\n statistics.o : statistics.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-   tree-pass.h $(TREE_DUMP_H) $(HASHTAB_H) statistics.h $(TM_H) $(FUNCTION_H)\n+   $(TREE_PASS_H) $(TREE_DUMP_H) $(HASHTAB_H) statistics.h $(TM_H) $(FUNCTION_H)\n stmt.o : stmt.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(TREE_H) $(FLAGS_H) $(FUNCTION_H) insn-config.h hard-reg-set.h $(EXPR_H) \\\n    libfuncs.h $(EXCEPT_H) $(RECOG_H) $(TOPLEV_H) output.h $(GGC_H) $(TM_P_H) \\\n@@ -2511,14 +2516,14 @@ except.o : except.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    langhooks.h insn-config.h hard-reg-set.h $(BASIC_BLOCK_H) output.h \\\n    dwarf2asm.h dwarf2out.h $(TOPLEV_H) $(HASHTAB_H) intl.h $(GGC_H) \\\n    gt-$(EXCEPT_H) $(CGRAPH_H) $(INTEGRATE_H) $(DIAGNOSTIC_H) dwarf2.h \\\n-   $(TARGET_H) $(TM_P_H) tree-pass.h $(TIMEVAR_H)\n+   $(TARGET_H) $(TM_P_H) $(TREE_PASS_H) $(TIMEVAR_H)\n expr.o : expr.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(TREE_H) $(FLAGS_H) $(FUNCTION_H) $(REGS_H) $(EXPR_H) $(OPTABS_H) \\\n    libfuncs.h $(INSN_ATTR_H) insn-config.h $(RECOG_H) output.h \\\n    typeclass.h hard-reg-set.h $(TOPLEV_H) hard-reg-set.h $(EXCEPT_H) reload.h \\\n    $(GGC_H) langhooks.h intl.h $(TM_P_H) $(REAL_H) $(TARGET_H) \\\n    tree-iterator.h gt-expr.h $(MACHMODE_H) $(TIMEVAR_H) $(TREE_FLOW_H) \\\n-   tree-pass.h $(DF_H) $(DIAGNOSTIC_H) vecprim.h\n+   $(TREE_PASS_H) $(DF_H) $(DIAGNOSTIC_H) vecprim.h\n dojump.o : dojump.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(TREE_H) \\\n    $(FLAGS_H) $(FUNCTION_H) $(EXPR_H) $(OPTABS_H) $(INSN_ATTR_H) insn-config.h \\\n    langhooks.h $(GGC_H) gt-dojump.h vecprim.h $(BASIC_BLOCK_H)\n@@ -2569,7 +2574,7 @@ xcoffout.o : xcoffout.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n emit-rtl.o : emit-rtl.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(TREE_H) $(FLAGS_H) $(FUNCTION_H) $(REGS_H) insn-config.h $(RECOG_H) \\\n    $(GGC_H) $(EXPR_H) hard-reg-set.h $(BITMAP_H) $(TOPLEV_H) $(BASIC_BLOCK_H) \\\n-   $(HASHTAB_H) $(TM_P_H) debug.h langhooks.h tree-pass.h gt-emit-rtl.h \\\n+   $(HASHTAB_H) $(TM_P_H) debug.h langhooks.h $(TREE_PASS_H) gt-emit-rtl.h \\\n    $(REAL_H) $(DF_H)\n real.o : real.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n    $(TOPLEV_H) $(TM_P_H) $(REAL_H) dfp.h\n@@ -2581,10 +2586,10 @@ integrate.o : integrate.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(RTL_H) $(TREE_H) $(FLAGS_H) debug.h $(INTEGRATE_H) insn-config.h \\\n    $(EXPR_H) $(REAL_H) $(REGS_H) intl.h $(FUNCTION_H) output.h $(RECOG_H) \\\n    $(EXCEPT_H) $(TOPLEV_H) $(PARAMS_H) $(TM_P_H) $(TARGET_H) langhooks.h \\\n-   gt-integrate.h $(GGC_H) tree-pass.h $(DF_H)\n+   gt-integrate.h $(GGC_H) $(TREE_PASS_H) $(DF_H)\n jump.o : jump.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(FLAGS_H) hard-reg-set.h $(REGS_H) insn-config.h $(RECOG_H) $(EXPR_H) \\\n-   $(REAL_H) $(EXCEPT_H) $(FUNCTION_H) tree-pass.h $(DIAGNOSTIC_H) \\\n+   $(REAL_H) $(EXCEPT_H) $(FUNCTION_H) $(TREE_PASS_H) $(DIAGNOSTIC_H) \\\n    $(TOPLEV_H) $(INSN_ATTR_H) $(TM_P_H) reload.h $(PREDICT_H) \\\n    $(TIMEVAR_H) $(TARGET_H)\n simplify-rtx.o : simplify-rtx.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n@@ -2598,100 +2603,101 @@ cgraph.o : cgraph.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n cgraphunit.o : cgraphunit.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(TREE_H) langhooks.h $(TREE_INLINE_H) $(TOPLEV_H) $(FLAGS_H) $(GGC_H) \\\n    $(TARGET_H) $(CGRAPH_H) intl.h pointer-set.h $(FUNCTION_H) $(GIMPLE_H) \\\n-   $(TREE_FLOW_H) tree-pass.h $(C_COMMON_H) debug.h $(DIAGNOSTIC_H) \\\n+   $(TREE_FLOW_H) $(TREE_PASS_H) $(C_COMMON_H) debug.h $(DIAGNOSTIC_H) \\\n    $(FIBHEAP_H) output.h $(PARAMS_H) $(RTL_H) $(TIMEVAR_H) $(IPA_PROP_H) \\\n    gt-cgraphunit.h tree-iterator.h\n cgraphbuild.o : cgraphbuild.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(TREE_H) langhooks.h $(CGRAPH_H) intl.h pointer-set.h $(GIMPLE_H) \\\n-   $(TREE_FLOW_H) tree-pass.h\n+   $(TREE_FLOW_H) $(TREE_PASS_H)\n varpool.o : varpool.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(TREE_H) $(CGRAPH_H) langhooks.h $(DIAGNOSTIC_H) $(HASHTAB_H) \\\n    $(GGC_H) $(TIMEVAR_H) debug.h $(TARGET_H) output.h $(GIMPLE_H) \\\n    $(TREE_FLOW_H) gt-varpool.h\n ipa.o : ipa.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(CGRAPH_H) \\\n-   tree-pass.h $(TIMEVAR_H)\n+   $(TREE_PASS_H) $(TIMEVAR_H)\n ipa-prop.o : ipa-prop.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    langhooks.h $(GGC_H) $(TARGET_H) $(CGRAPH_H) $(IPA_PROP_H) $(DIAGNOSTIC_H) \\\n-   $(TREE_FLOW_H) $(TM_H) tree-pass.h $(FLAGS_H) $(TREE_H) $(TREE_INLINE_H) \\\n-   $(TIMEVAR_H)\n+   $(TREE_FLOW_H) $(TM_H) $(TREE_PASS_H) $(FLAGS_H) $(TREE_H) \\\n+   $(TREE_INLINE_H) $(TIMEVAR_H)\n ipa-cp.o : ipa-cp.c $(CONFIG_H) $(SYSTEM_H) coretypes.h  \\\n-   $(TREE_H) $(TARGET_H) $(CGRAPH_H) $(IPA_PROP_H) $(TREE_FLOW_H) tree-pass.h \\\n-   $(FLAGS_H) $(TIMEVAR_H) $(DIAGNOSTIC_H) $(TREE_DUMP_H) $(TREE_INLINE_H)\n+   $(TREE_H) $(TARGET_H) $(CGRAPH_H) $(IPA_PROP_H) $(TREE_FLOW_H) \\\n+   $(TREE_PASS_H) $(FLAGS_H) $(TIMEVAR_H) $(DIAGNOSTIC_H) $(TREE_DUMP_H) \\\n+   $(TREE_INLINE_H)\n matrix-reorg.o : matrix-reorg.c $(CONFIG_H) $(SYSTEM_H) coretypes.h  \\\n    $(TM_H) $(TREE_H) $(RTL_H) $(C_TREE_H) $(TREE_INLINE_H) $(TREE_FLOW_H) \\\n    tree-flow-inline.h langhooks.h $(HASHTAB_H) $(TOPLEV_H) $(FLAGS_H) $(GGC_H) \\\n    debug.h $(TARGET_H) $(CGRAPH_H) $(DIAGNOSTIC_H) $(TIMEVAR_H) $(PARAMS_H) \\\n    $(FIBHEAP_H) $(C_COMMON_H) intl.h $(FUNCTION_H) $(BASIC_BLOCK_H) $(CFGLOOP_H) \\\n-   tree-iterator.h tree-pass.h opts.h $(TREE_DATA_REF_H) tree-chrec.h \\\n+   tree-iterator.h $(TREE_PASS_H) opts.h $(TREE_DATA_REF_H) tree-chrec.h \\\n    tree-scalar-evolution.h\n ipa-inline.o : ipa-inline.c gt-ipa-inline.h $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(TREE_H) langhooks.h $(TREE_INLINE_H) $(FLAGS_H) $(CGRAPH_H) intl.h \\\n-   $(DIAGNOSTIC_H) $(FIBHEAP_H) $(PARAMS_H) $(TIMEVAR_H) tree-pass.h \\\n+   $(DIAGNOSTIC_H) $(FIBHEAP_H) $(PARAMS_H) $(TIMEVAR_H) $(TREE_PASS_H) \\\n    $(HASHTAB_H) $(COVERAGE_H) $(GGC_H) $(TREE_FLOW_H) $(RTL_H) $(IPA_PROP_H)\n ipa-utils.o : ipa-utils.c $(IPA_UTILS_H) $(CONFIG_H) $(SYSTEM_H) \\\n    coretypes.h $(TM_H) $(TREE_H) $(TREE_FLOW_H) $(TREE_INLINE_H) langhooks.h \\\n    pointer-set.h $(GGC_H) $(C_COMMON_H) $(GIMPLE_H) \\\n-   $(CGRAPH_H) output.h $(FLAGS_H) tree-pass.h $(TIMEVAR_H) $(DIAGNOSTIC_H)\n+   $(CGRAPH_H) output.h $(FLAGS_H) $(TREE_PASS_H) $(TIMEVAR_H) $(DIAGNOSTIC_H)\n ipa-reference.o : ipa-reference.c $(CONFIG_H) $(SYSTEM_H) \\\n    coretypes.h $(TM_H) $(TREE_H) $(TREE_FLOW_H) $(TREE_INLINE_H) langhooks.h \\\n    pointer-set.h $(GGC_H) $(IPA_REFERENCE_H) $(IPA_UTILS_H) $(C_COMMON_H) \\\n-   $(GIMPLE_H) $(CGRAPH_H) output.h $(FLAGS_H) tree-pass.h \\\n+   $(GIMPLE_H) $(CGRAPH_H) output.h $(FLAGS_H) $(TREE_PASS_H) \\\n    $(TIMEVAR_H) $(DIAGNOSTIC_H) $(FUNCTION_H)\n \n ipa-pure-const.o : ipa-pure-const.c $(CONFIG_H) $(SYSTEM_H) \\\n    coretypes.h $(TM_H) $(TREE_H) $(TREE_FLOW_H) $(TREE_INLINE_H) langhooks.h \\\n    pointer-set.h $(GGC_H) $(IPA_UTILS_H) $(C_COMMON_H) $(TARGET_H) \\\n-   $(GIMPLE_H) $(CGRAPH_H) output.h $(FLAGS_H) tree-pass.h $(TIMEVAR_H) \\\n+   $(GIMPLE_H) $(CGRAPH_H) output.h $(FLAGS_H) $(TREE_PASS_H) $(TIMEVAR_H) \\\n    $(DIAGNOSTIC_H)\n ipa-type-escape.o : ipa-type-escape.c $(CONFIG_H) $(SYSTEM_H) \\\n    coretypes.h $(TM_H) $(TREE_H) $(TREE_FLOW_H) $(TREE_INLINE_H) langhooks.h \\\n    pointer-set.h $(GGC_H) $(IPA_TYPE_ESCAPE_H) $(IPA_UTILS_H) $(C_COMMON_H) \\\n-   $(GIMPLE_H) $(CGRAPH_H) output.h $(FLAGS_H) tree-pass.h \\\n+   $(GIMPLE_H) $(CGRAPH_H) output.h $(FLAGS_H) $(TREE_PASS_H) \\\n    $(TIMEVAR_H) $(DIAGNOSTIC_H) $(FUNCTION_H)\n ipa-struct-reorg.o: ipa-struct-reorg.c ipa-struct-reorg.h $(CONFIG_H) $(SYSTEM_H) \\\n    coretypes.h $(TM_H) $(GGC_H) $(TREE_H) $(RTL_H) $(GIMPLE_H) tree-inline.h \\\n    $(TREE_FLOW_H) langhooks.h pointer-set.h $(HASHTAB_H) $(C_TREE_H) $(TOPLEV_H) \\\n    $(FLAGS_H) debug.h $(TARGET_H) $(CGRAPH_H) $(DIAGNOSTIC_H) $(TIMEVAR_H) \\\n    $(PARAMS_H) $(FIBHEAP_H) intl.h $(FUNCTION_H) $(BASIC_BLOCK_H) tree-iterator.h \\\n-   tree-pass.h opts.h $(IPA_TYPE_ESCAPE_H) $(TREE_DUMP_H) $(C_COMMON_H) \\\n+   $(TREE_PASS_H) opts.h $(IPA_TYPE_ESCAPE_H) $(TREE_DUMP_H) $(C_COMMON_H) \\\n    $(GIMPLE_H)\n \n coverage.o : coverage.c $(GCOV_IO_H) $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TM_H) $(RTL_H) $(TREE_H) $(FLAGS_H) output.h $(REGS_H) $(EXPR_H) \\\n    $(FUNCTION_H) $(TOPLEV_H) $(GGC_H) langhooks.h $(COVERAGE_H) gt-coverage.h \\\n-   $(HASHTAB_H) tree-iterator.h $(CGRAPH_H) tree-pass.h gcov-io.c $(TM_P_H)\n+   $(HASHTAB_H) tree-iterator.h $(CGRAPH_H) $(TREE_PASS_H) gcov-io.c $(TM_P_H)\n cselib.o : cselib.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(REGS_H) hard-reg-set.h $(FLAGS_H) $(REAL_H) insn-config.h $(RECOG_H) \\\n    $(EMIT_RTL_H) $(TOPLEV_H) output.h $(FUNCTION_H) cselib.h $(GGC_H) $(TM_P_H) \\\n    gt-cselib.h $(PARAMS_H) alloc-pool.h $(HASHTAB_H) $(TARGET_H)\n cse.o : cse.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(REGS_H) \\\n    hard-reg-set.h $(FLAGS_H) insn-config.h $(RECOG_H) $(EXPR_H) $(TOPLEV_H) \\\n    output.h $(FUNCTION_H) $(BASIC_BLOCK_H) $(GGC_H) $(TM_P_H) $(TIMEVAR_H) \\\n-   $(EXCEPT_H) $(TARGET_H) $(PARAMS_H) rtlhooks-def.h tree-pass.h $(REAL_H) \\\n-   $(DF_H) $(DBGCNT_H)\n+   $(EXCEPT_H) $(TARGET_H) $(PARAMS_H) rtlhooks-def.h $(TREE_PASS_H) \\\n+   $(REAL_H) $(DF_H) $(DBGCNT_H)\n dce.o : dce.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(TREE_H) $(REGS_H) hard-reg-set.h $(FLAGS_H) $(DF_H) cselib.h \\\n-   $(DBGCNT_H) dce.h $(TIMEVAR_H) tree-pass.h $(DBGCNT_H) $(TM_P_H)\n+   $(DBGCNT_H) dce.h $(TIMEVAR_H) $(TREE_PASS_H) $(DBGCNT_H) $(TM_P_H)\n dse.o : dse.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(TREE_H) $(TM_P_H) $(REGS_H) hard-reg-set.h $(FLAGS_H) insn-config.h \\\n-   $(RECOG_H) $(EXPR_H) $(DF_H) cselib.h $(DBGCNT_H) $(TIMEVAR_H) tree-pass.h \\\n-   alloc-pool.h $(ALIAS_H) dse.h $(OPTABS_H) $(TARGET_H)\n+   $(RECOG_H) $(EXPR_H) $(DF_H) cselib.h $(DBGCNT_H) $(TIMEVAR_H) \\\n+   $(TREE_PASS_H) alloc-pool.h $(ALIAS_H) dse.h $(OPTABS_H) $(TARGET_H)\n fwprop.o : fwprop.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(TOPLEV_H) insn-config.h $(RECOG_H) $(FLAGS_H) $(OBSTACK_H) $(BASIC_BLOCK_H) \\\n-   output.h $(DF_H) alloc-pool.h $(TIMEVAR_H) tree-pass.h $(TARGET_H) $(TM_P_H) \\\n-   $(CFGLOOP_H) $(EMIT_RTL_H)\n+   output.h $(DF_H) alloc-pool.h $(TIMEVAR_H) $(TREE_PASS_H) $(TARGET_H) \\\n+   $(TM_P_H) $(CFGLOOP_H) $(EMIT_RTL_H)\n web.o : web.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    hard-reg-set.h $(FLAGS_H) $(BASIC_BLOCK_H) $(FUNCTION_H) output.h $(TOPLEV_H) \\\n-   $(DF_H) $(OBSTACK_H) $(TIMEVAR_H) tree-pass.h\n+   $(DF_H) $(OBSTACK_H) $(TIMEVAR_H) $(TREE_PASS_H)\n see.o : see.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    hard-reg-set.h $(FLAGS_H) $(BASIC_BLOCK_H) $(FUNCTION_H) output.h \\\n-   $(DF_H) $(OBSTACK_H) $(TIMEVAR_H) tree-pass.h $(RECOG_H) $(EXPR_H) $(SPLAY_TREE_H) \\\n-   $(HASHTAB_H) $(REGS_H) dce.h\n+   $(DF_H) $(OBSTACK_H) $(TIMEVAR_H) $(TREE_PASS_H) $(RECOG_H) $(EXPR_H) \\\n+   $(SPLAY_TREE_H) $(HASHTAB_H) $(REGS_H) dce.h\n gcse.o : gcse.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(REGS_H) hard-reg-set.h $(FLAGS_H) $(REAL_H) insn-config.h $(GGC_H) \\\n    $(RECOG_H) $(EXPR_H) $(BASIC_BLOCK_H) $(FUNCTION_H) output.h $(TOPLEV_H) \\\n    $(TM_P_H) $(PARAMS_H) $(EXCEPT_H) gt-gcse.h $(TREE_H) cselib.h $(TIMEVAR_H) \\\n-   intl.h $(OBSTACK_H) tree-pass.h $(DF_H) $(DBGCNT_H)\n+   intl.h $(OBSTACK_H) $(TREE_PASS_H) $(DF_H) $(DBGCNT_H)\n resource.o : resource.c $(CONFIG_H) $(RTL_H) hard-reg-set.h $(SYSTEM_H) \\\n    coretypes.h $(TM_H) $(REGS_H) $(FLAGS_H) output.h $(RESOURCE_H) $(DF_H) \\\n    $(FUNCTION_H) $(TOPLEV_H) $(INSN_ATTR_H) $(EXCEPT_H) $(PARAMS_H) $(TM_P_H)\n@@ -2701,43 +2707,43 @@ lcm.o : lcm.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(REGS_H) \\\n mode-switching.o : mode-switching.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TM_H) $(RTL_H) $(REGS_H) hard-reg-set.h $(FLAGS_H) insn-config.h \\\n    $(INSN_ATTR_H) $(RECOG_H) $(BASIC_BLOCK_H) $(TM_P_H) $(FUNCTION_H) \\\n-   output.h tree-pass.h $(TIMEVAR_H) $(REAL_H) $(DF_H)\n+   output.h $(TREE_PASS_H) $(TIMEVAR_H) $(REAL_H) $(DF_H)\n tree-ssa-dce.o : tree-ssa-dce.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) \\\n     $(RTL_H) $(TM_P_H) $(TREE_FLOW_H) $(DIAGNOSTIC_H) $(TIMEVAR_H) $(TM_H) \\\n-    coretypes.h $(TREE_DUMP_H) tree-pass.h $(FLAGS_H) $(BASIC_BLOCK_H) \\\n+    coretypes.h $(TREE_DUMP_H) $(TREE_PASS_H) $(FLAGS_H) $(BASIC_BLOCK_H) \\\n     $(GGC_H) hard-reg-set.h $(OBSTACK_H) $(GIMPLE_H) $(CFGLOOP_H) \\\n     tree-scalar-evolution.h\n tree-call-cdce.o : tree-call-cdce.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) \\\n     $(RTL_H) $(TM_P_H) $(TREE_FLOW_H) $(DIAGNOSTIC_H) $(TIMEVAR_H) $(TM_H) \\\n-    coretypes.h $(TREE_DUMP_H) tree-pass.h $(FLAGS_H) $(BASIC_BLOCK_H) \\\n+    coretypes.h $(TREE_DUMP_H) $(TREE_PASS_H) $(FLAGS_H) $(BASIC_BLOCK_H) \\\n     $(GGC_H) hard-reg-set.h $(OBSTACK_H) $(GIMPLE_H)\n tree-ssa-ccp.o : tree-ssa-ccp.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(SYSTEM_H) $(RTL_H) $(TREE_H) $(TM_P_H) $(EXPR_H) $(GGC_H) output.h \\\n    $(DIAGNOSTIC_H) $(FUNCTION_H) $(TIMEVAR_H) $(TM_H) coretypes.h \\\n-   $(TREE_DUMP_H) $(BASIC_BLOCK_H) tree-pass.h langhooks.h \\\n+   $(TREE_DUMP_H) $(BASIC_BLOCK_H) $(TREE_PASS_H) langhooks.h \\\n    tree-ssa-propagate.h value-prof.h $(FLAGS_H) $(TARGET_H) $(TOPLEV_H)\n tree-sra.o : tree-sra.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(RTL_H) \\\n     $(TM_P_H) $(TREE_FLOW_H) $(DIAGNOSTIC_H) $(TREE_INLINE_H) \\\n     $(TIMEVAR_H) $(TM_H) coretypes.h $(TREE_DUMP_H) $(GIMPLE_H) \\\n-    langhooks.h tree-pass.h $(FLAGS_H) $(EXPR_H) $(BASIC_BLOCK_H) \\\n+    langhooks.h $(TREE_PASS_H) $(FLAGS_H) $(EXPR_H) $(BASIC_BLOCK_H) \\\n     $(BITMAP_H) $(GGC_H) hard-reg-set.h $(OBSTACK_H) $(PARAMS_H) $(TARGET_H)\n tree-switch-conversion.o : tree-switch-conversion.c $(CONFIG_H) $(SYSTEM_H) \\\n     $(TREE_H) $(TM_P_H) $(TREE_FLOW_H) $(DIAGNOSTIC_H) $(TREE_INLINE_H) \\\n     $(TIMEVAR_H) $(TM_H) coretypes.h $(TREE_DUMP_H) $(GIMPLE_H) \\\n-    tree-pass.h $(FLAGS_H) $(EXPR_H) $(BASIC_BLOCK_H) output.h \\\n+    $(TREE_PASS_H) $(FLAGS_H) $(EXPR_H) $(BASIC_BLOCK_H) output.h \\\n     $(GGC_H) $(OBSTACK_H) $(PARAMS_H) $(CPPLIB_H) $(PARAMS_H)\n tree-complex.o : tree-complex.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TREE_H) \\\n     $(TM_H) $(RTL_H) $(REAL_H) $(FLAGS_H) $(TREE_FLOW_H) $(GIMPLE_H) \\\n-    tree-iterator.h tree-pass.h tree-ssa-propagate.h $(DIAGNOSTIC_H)\n+    tree-iterator.h $(TREE_PASS_H) tree-ssa-propagate.h $(DIAGNOSTIC_H)\n tree-vect-generic.o : tree-vect-generic.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) \\\n-    $(TM_H) $(TREE_FLOW_H) $(GIMPLE_H) tree-iterator.h tree-pass.h \\\n+    $(TM_H) $(TREE_FLOW_H) $(GIMPLE_H) tree-iterator.h $(TREE_PASS_H) \\\n     $(FLAGS_H) $(OPTABS_H) $(RTL_H) $(MACHMODE_H) $(EXPR_H) \\\n     langhooks.h $(FLAGS_H) $(DIAGNOSTIC_H) gt-tree-vect-generic.h $(GGC_H) \\\n     coretypes.h insn-codes.h\n df-core.o : df-core.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    insn-config.h $(RECOG_H) $(FUNCTION_H) $(REGS_H) alloc-pool.h \\\n    hard-reg-set.h $(BASIC_BLOCK_H) $(DF_H) $(BITMAP_H) sbitmap.h $(TIMEVAR_H) \\\n-   $(TM_P_H) $(FLAGS_H) output.h tree-pass.h $(PARAMS_H)\n+   $(TM_P_H) $(FLAGS_H) output.h $(TREE_PASS_H) $(PARAMS_H)\n df-problems.o : df-problems.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(RTL_H) insn-config.h $(RECOG_H) $(FUNCTION_H) $(REGS_H) alloc-pool.h \\\n    hard-reg-set.h $(BASIC_BLOCK_H) $(DF_H) $(BITMAP_H) sbitmap.h $(TIMEVAR_H) \\\n@@ -2746,7 +2752,7 @@ df-scan.o : df-scan.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    insn-config.h $(RECOG_H) $(FUNCTION_H) $(REGS_H) alloc-pool.h \\\n    hard-reg-set.h $(BASIC_BLOCK_H) $(DF_H) $(BITMAP_H) sbitmap.h $(TIMEVAR_H) \\\n    $(TM_P_H) $(FLAGS_H) $(TARGET_H) $(TARGET_DEF_H) $(TREE_H) output.h \\\n-   tree-pass.h\n+   $(TREE_PASS_H)\n df-byte-scan.o : df-byte-scan.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    tm_p.h $(DF_H) output.h $(DBGCNT_H)\n regstat.o : regstat.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n@@ -2755,46 +2761,46 @@ regstat.o : regstat.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n var-tracking.o : var-tracking.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(RTL_H) $(TREE_H) hard-reg-set.h insn-config.h reload.h $(FLAGS_H) \\\n    $(BASIC_BLOCK_H) output.h sbitmap.h alloc-pool.h $(FIBHEAP_H) $(HASHTAB_H) \\\n-   $(REGS_H) $(EXPR_H) $(TIMEVAR_H) tree-pass.h\n+   $(REGS_H) $(EXPR_H) $(TIMEVAR_H) $(TREE_PASS_H)\n profile.o : profile.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(TREE_H) $(FLAGS_H) output.h $(REGS_H) $(EXPR_H) $(FUNCTION_H) \\\n    $(TOPLEV_H) $(COVERAGE_H) $(TREE_FLOW_H) value-prof.h cfghooks.h \\\n-   $(CFGLOOP_H) $(TIMEVAR_H) tree-pass.h profile.h\n+   $(CFGLOOP_H) $(TIMEVAR_H) $(TREE_PASS_H) profile.h\n mcf.o : mcf.c profile.h $(CONFIG_H) $(SYSTEM_H) $(TM_H) coretypes.h \\\n    $(BASIC_BLOCK_H) output.h langhooks.h $(GCOV_IO_H) $(TREE_H) \n tree-profile.o : tree-profile.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TM_H) $(RTL_H) $(TREE_H) $(FLAGS_H) output.h $(REGS_H) $(EXPR_H) \\\n    $(FUNCTION_H) $(TOPLEV_H) $(COVERAGE_H) $(TREE_H) value-prof.h $(TREE_DUMP_H) \\\n-   tree-pass.h $(TREE_FLOW_H) $(TIMEVAR_H) $(GGC_H) gt-tree-profile.h $(CGRAPH_H)\n+   $(TREE_PASS_H) $(TREE_FLOW_H) $(TIMEVAR_H) $(GGC_H) gt-tree-profile.h $(CGRAPH_H)\n value-prof.o : value-prof.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(BASIC_BLOCK_H) hard-reg-set.h value-prof.h $(EXPR_H) output.h $(FLAGS_H) \\\n    $(RECOG_H) insn-config.h $(OPTABS_H) $(REGS_H) $(GGC_H) $(DIAGNOSTIC_H) \\\n    $(TREE_H) $(COVERAGE_H) $(RTL_H) $(GCOV_IO_H) $(TREE_FLOW_H) \\\n-   tree-flow-inline.h $(TIMEVAR_H) tree-pass.h $(TOPLEV_H) pointer-set.h\n+   tree-flow-inline.h $(TIMEVAR_H) $(TREE_PASS_H) $(TOPLEV_H) pointer-set.h\n loop-doloop.o : loop-doloop.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(RTL_H) $(FLAGS_H) $(EXPR_H) hard-reg-set.h $(BASIC_BLOCK_H) $(TM_P_H) \\\n    $(TOPLEV_H) $(CFGLOOP_H) output.h $(PARAMS_H) $(TARGET_H)\n alloc-pool.o : alloc-pool.c $(CONFIG_H) $(SYSTEM_H) alloc-pool.h $(HASHTAB_H)\n auto-inc-dec.o : auto-inc-dec.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(TREE_H) $(RTL_H) $(TM_P_H) hard-reg-set.h $(BASIC_BLOCK_H) insn-config.h \\\n    $(REGS_H) $(FLAGS_H) output.h $(FUNCTION_H) $(EXCEPT_H) $(TOPLEV_H) $(RECOG_H) \\\n-   $(EXPR_H) $(TIMEVAR_H) tree-pass.h $(DF_H) $(DBGCNT_H)\n+   $(EXPR_H) $(TIMEVAR_H) $(TREE_PASS_H) $(DF_H) $(DBGCNT_H)\n cfg.o : cfg.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(FLAGS_H) \\\n    $(REGS_H) hard-reg-set.h output.h $(TOPLEV_H) $(FUNCTION_H) $(EXCEPT_H) $(GGC_H) \\\n    $(TM_P_H) $(TIMEVAR_H) $(OBSTACK_H) $(TREE_H) alloc-pool.h \\\n-   $(HASHTAB_H) $(DF_H) $(CFGLOOP_H) $(TREE_FLOW_H) tree-pass.h\n+   $(HASHTAB_H) $(DF_H) $(CFGLOOP_H) $(TREE_FLOW_H) $(TREE_PASS_H)\n cfghooks.o: cfghooks.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(TREE_H) $(BASIC_BLOCK_H) $(TREE_FLOW_H) $(TIMEVAR_H) $(TOPLEV_H) $(CFGLOOP_H)\n cfgexpand.o : cfgexpand.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n    $(RTL_H) $(TREE_H) $(TM_P_H) $(EXPR_H) $(FUNCTION_H) $(TIMEVAR_H) $(TM_H) \\\n-   coretypes.h $(TREE_DUMP_H) $(EXCEPT_H) langhooks.h tree-pass.h $(RTL_H) \\\n+   coretypes.h $(TREE_DUMP_H) $(EXCEPT_H) langhooks.h $(TREE_PASS_H) $(RTL_H) \\\n    $(DIAGNOSTIC_H) $(TOPLEV_H) $(BASIC_BLOCK_H) $(FLAGS_H) debug.h $(PARAMS_H) \\\n    value-prof.h $(TREE_INLINE_H) $(TARGET_H)\n cfgrtl.o : cfgrtl.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(FLAGS_H) insn-config.h $(BASIC_BLOCK_H) $(REGS_H) hard-reg-set.h \\\n    output.h $(TOPLEV_H) $(FUNCTION_H) $(EXCEPT_H) $(TM_P_H) insn-config.h $(EXPR_H) \\\n    $(CFGLAYOUT_H) $(CFGLOOP_H) $(OBSTACK_H) $(TARGET_H) $(TREE_H) \\\n-   tree-pass.h $(DF_H) $(GGC_H)\n+   $(TREE_PASS_H) $(DF_H) $(GGC_H)\n cfganal.o : cfganal.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(BASIC_BLOCK_H) hard-reg-set.h insn-config.h $(RECOG_H) $(TM_P_H) \\\n    $(TIMEVAR_H) $(OBSTACK_H) $(TOPLEV_H) vecprim.h\n@@ -2804,7 +2810,7 @@ cfgbuild.o : cfgbuild.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n cfgcleanup.o : cfgcleanup.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(RTL_H) $(TIMEVAR_H) hard-reg-set.h output.h $(FLAGS_H) $(RECOG_H) \\\n    $(TOPLEV_H) insn-config.h cselib.h $(TARGET_H) $(TM_P_H) $(PARAMS_H) \\\n-   $(REGS_H) $(EMIT_RTL_H) $(CFGLAYOUT_H) tree-pass.h $(CFGLOOP_H) $(EXPR_H) \\\n+   $(REGS_H) $(EMIT_RTL_H) $(CFGLAYOUT_H) $(TREE_PASS_H) $(CFGLOOP_H) $(EXPR_H) \\\n    $(DF_H) $(DBGCNT_H) dce.h\n cfgloop.o : cfgloop.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) coretypes.h $(TM_H) \\\n    $(BASIC_BLOCK_H) hard-reg-set.h $(CFGLOOP_H) $(FLAGS_H) $(FUNCTION_H) \\\n@@ -2827,7 +2833,8 @@ cfgloopmanip.o : cfgloopmanip.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) \\\n    coretypes.h $(TM_H) cfghooks.h $(OBSTACK_H) $(TREE_FLOW_H)\n loop-init.o : loop-init.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) $(GGC_H) \\\n    $(BASIC_BLOCK_H) hard-reg-set.h $(CFGLOOP_H) $(CFGLAYOUT_H) \\\n-   coretypes.h $(TM_H) $(OBSTACK_H) tree-pass.h $(TIMEVAR_H) $(FLAGS_H) $(DF_H)\n+   coretypes.h $(TM_H) $(OBSTACK_H) $(TREE_PASS_H) $(TIMEVAR_H) $(FLAGS_H) \\\n+   $(DF_H)\n loop-unswitch.o : loop-unswitch.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) $(TM_H) \\\n    $(BASIC_BLOCK_H) hard-reg-set.h $(CFGLOOP_H) $(CFGLAYOUT_H) $(PARAMS_H) \\\n    output.h $(EXPR_H) coretypes.h $(TM_H) $(OBSTACK_H)\n@@ -2844,12 +2851,12 @@ combine.o : combine.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(FLAGS_H) $(FUNCTION_H) insn-config.h $(INSN_ATTR_H) $(REGS_H) $(EXPR_H) \\\n    rtlhooks-def.h $(BASIC_BLOCK_H) $(RECOG_H) $(REAL_H) hard-reg-set.h \\\n    $(TOPLEV_H) $(TM_P_H) $(TREE_H) $(TARGET_H) output.h $(PARAMS_H) $(OPTABS_H) \\\n-   insn-codes.h $(TIMEVAR_H) tree-pass.h $(DF_H) vecprim.h $(CGRAPH_H)\n+   insn-codes.h $(TIMEVAR_H) $(TREE_PASS_H) $(DF_H) vecprim.h $(CGRAPH_H)\n reginfo.o : reginfo.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    hard-reg-set.h $(FLAGS_H) $(BASIC_BLOCK_H) addresses.h $(REGS_H) insn-config.h \\\n    $(RECOG_H) reload.h $(REAL_H) $(TOPLEV_H) $(FUNCTION_H) output.h $(GGC_H) \\\n    $(TM_P_H) $(EXPR_H) $(TIMEVAR_H) gt-reginfo.h $(HASHTAB_H) \\\n-   $(TARGET_H) tree-pass.h $(DF_H) ira.h\n+   $(TARGET_H) $(TREE_PASS_H) $(DF_H) ira.h\n bitmap.o : bitmap.c $(CONFIG_H) $(SYSTEM_H)  coretypes.h $(TM_H) $(RTL_H) \\\n    $(FLAGS_H) $(GGC_H) gt-bitmap.h $(BITMAP_H) $(OBSTACK_H) $(HASHTAB_H)\n varray.o : varray.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(GGC_H) \\\n@@ -2871,35 +2878,35 @@ postreload.o : postreload.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(RTL_H) $(REAL_H) $(FLAGS_H) $(EXPR_H) $(OPTABS_H) reload.h $(REGS_H) \\\n    hard-reg-set.h insn-config.h $(BASIC_BLOCK_H) $(RECOG_H) output.h \\\n    $(FUNCTION_H) $(TOPLEV_H) cselib.h $(TM_P_H) $(EXCEPT_H) $(TREE_H) $(MACHMODE_H) \\\n-   $(OBSTACK_H) $(TIMEVAR_H) tree-pass.h $(DF_H) $(DBGCNT_H)\n+   $(OBSTACK_H) $(TIMEVAR_H) $(TREE_PASS_H) $(DF_H) $(DBGCNT_H)\n postreload-gcse.o : postreload-gcse.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TM_H) $(RTL_H) $(REGS_H) hard-reg-set.h $(FLAGS_H) insn-config.h \\\n    $(RECOG_H) $(EXPR_H) $(BASIC_BLOCK_H) $(FUNCTION_H) output.h $(TOPLEV_H) \\\n    $(TM_P_H) $(EXCEPT_H) $(TREE_H) $(TARGET_H) $(HASHTAB_H) intl.h $(OBSTACK_H) \\\n-   $(PARAMS_H) $(TIMEVAR_H) tree-pass.h $(REAL_H) $(DBGCNT_H)\n+   $(PARAMS_H) $(TIMEVAR_H) $(TREE_PASS_H) $(REAL_H) $(DBGCNT_H)\n caller-save.o : caller-save.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(FLAGS_H) $(REGS_H) hard-reg-set.h insn-config.h $(BASIC_BLOCK_H) $(FUNCTION_H) \\\n    addresses.h $(RECOG_H) reload.h $(EXPR_H) $(TOPLEV_H) $(TM_P_H) $(DF_H) \\\n    output.h ira.h gt-caller-save.h $(GGC_H)\n bt-load.o : bt-load.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(EXCEPT_H) \\\n    $(RTL_H) hard-reg-set.h $(REGS_H) $(TM_P_H) $(FIBHEAP_H) output.h $(EXPR_H) \\\n-   $(TARGET_H) $(FLAGS_H) $(INSN_ATTR_H) $(FUNCTION_H) tree-pass.h $(TOPLEV_H) \\\n-   $(DF_H) vecprim.h $(RECOG_H)\n+   $(TARGET_H) $(FLAGS_H) $(INSN_ATTR_H) $(FUNCTION_H) $(TREE_PASS_H) \\\n+   $(TOPLEV_H) $(DF_H) vecprim.h $(RECOG_H)\n reorg.o : reorg.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    conditions.h hard-reg-set.h $(BASIC_BLOCK_H) $(REGS_H) insn-config.h \\\n    $(INSN_ATTR_H) $(EXCEPT_H) $(RECOG_H) $(FUNCTION_H) $(FLAGS_H) output.h \\\n    $(EXPR_H) $(TOPLEV_H) $(PARAMS_H) $(TM_P_H) $(OBSTACK_H) $(RESOURCE_H) \\\n-   $(TIMEVAR_H) $(TARGET_H) tree-pass.h\n+   $(TIMEVAR_H) $(TARGET_H) $(TREE_PASS_H)\n alias.o : alias.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(FLAGS_H) hard-reg-set.h $(BASIC_BLOCK_H) $(REGS_H) $(TOPLEV_H) output.h \\\n    $(ALIAS_H) $(EMIT_RTL_H) $(GGC_H) $(FUNCTION_H) cselib.h $(TREE_H) $(TM_P_H) \\\n    langhooks.h $(TARGET_H) gt-alias.h $(TIMEVAR_H) $(CGRAPH_H) \\\n-   $(SPLAY_TREE_H) $(VARRAY_H) $(IPA_TYPE_ESCAPE_H) $(DF_H) tree-pass.h\n+   $(SPLAY_TREE_H) $(VARRAY_H) $(IPA_TYPE_ESCAPE_H) $(DF_H) $(TREE_PASS_H)\n stack-ptr-mod.o : stack-ptr-mod.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-   $(TM_H) $(TREE_H) $(RTL_H) $(REGS_H) $(EXPR_H) tree-pass.h \\\n+   $(TM_H) $(TREE_H) $(RTL_H) $(REGS_H) $(EXPR_H) $(TREE_PASS_H) \\\n    $(BASIC_BLOCK_H) $(FLAGS_H) output.h $(DF_H)\n init-regs.o : init-regs.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-   $(TM_H) $(TREE_H) $(RTL_H) $(REGS_H) $(EXPR_H) tree-pass.h \\\n+   $(TM_H) $(TREE_H) $(RTL_H) $(REGS_H) $(EXPR_H) $(TREE_PASS_H) \\\n    $(BASIC_BLOCK_H) $(FLAGS_H) $(DF_H)\n ira-build.o: ira-build.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(TARGET_H) $(RTL_H) $(REGS_H) hard-reg-set.h $(FLAGS_H) \\\n@@ -2931,13 +2938,13 @@ ira.o: ira.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(REGS_H) hard-reg-set.h $(FLAGS_H) $(OBSTACK_H) \\\n    $(EXPR_H) $(BASIC_BLOCK_H) $(TOPLEV_H) $(TM_P_H) \\\n    $(DF_H) $(IRA_INT_H)  $(PARAMS_H) $(TIMEVAR_H) $(INTEGRATE_H) \\\n-   tree-pass.h output.h\n+   $(TREE_PASS_H) output.h\n regmove.o : regmove.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n-   insn-config.h $(TIMEVAR_H) tree-pass.h $(DF_H)\\\n+   insn-config.h $(TIMEVAR_H) $(TREE_PASS_H) $(DF_H)\\\n    $(RECOG_H) output.h $(REGS_H) hard-reg-set.h $(FLAGS_H) $(FUNCTION_H) \\\n    $(EXPR_H) $(BASIC_BLOCK_H) $(TOPLEV_H) $(TM_P_H) $(EXCEPT_H) reload.h\n combine-stack-adj.o : combine-stack-adj.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-   $(TM_H) $(RTL_H) insn-config.h $(TIMEVAR_H) tree-pass.h \\\n+   $(TM_H) $(RTL_H) insn-config.h $(TIMEVAR_H) $(TREE_PASS_H) \\\n    $(RECOG_H) output.h $(REGS_H) hard-reg-set.h $(FLAGS_H) $(FUNCTION_H) \\\n    $(EXPR_H) $(BASIC_BLOCK_H) $(TOPLEV_H) $(TM_P_H) $(DF_H) $(EXCEPT_H) reload.h\n ddg.o : ddg.c $(DDG_H) $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TARGET_H) \\\n@@ -2949,7 +2956,7 @@ modulo-sched.o : modulo-sched.c $(DDG_H) $(CONFIG_H) $(CONFIG_H) $(SYSTEM_H) \\\n    coretypes.h $(TARGET_H) $(TOPLEV_H) $(RTL_H) $(TM_P_H) $(REGS_H) $(FUNCTION_H) \\\n    $(FLAGS_H) insn-config.h $(INSN_ATTR_H) $(EXCEPT_H) $(RECOG_H) \\\n    $(SCHED_INT_H) $(CFGLAYOUT_H) $(CFGLOOP_H) $(EXPR_H) $(PARAMS_H) \\\n-   cfghooks.h $(GCOV_IO_H) hard-reg-set.h $(TM_H) $(TIMEVAR_H) tree-pass.h \\\n+   cfghooks.h $(GCOV_IO_H) hard-reg-set.h $(TM_H) $(TIMEVAR_H) $(TREE_PASS_H) \\\n    $(DF_H) $(DBGCNT_H)\n haifa-sched.o : haifa-sched.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(SCHED_INT_H) $(REGS_H) hard-reg-set.h $(FLAGS_H) insn-config.h $(FUNCTION_H) \\\n@@ -2962,81 +2969,81 @@ sched-deps.o : sched-deps.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n sched-rgn.o : sched-rgn.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(RTL_H) $(SCHED_INT_H) $(REGS_H) hard-reg-set.h $(FLAGS_H) insn-config.h \\\n    $(FUNCTION_H) $(INSN_ATTR_H) $(TOPLEV_H) $(RECOG_H) $(EXCEPT_H) $(PARAMS_H) \\\n-   $(TM_P_H) $(TARGET_H) $(CFGLAYOUT_H) $(TIMEVAR_H) tree-pass.h  \\\n+   $(TM_P_H) $(TARGET_H) $(CFGLAYOUT_H) $(TIMEVAR_H) $(TREE_PASS_H)  \\\n    $(DBGCNT_H)\n sched-ebb.o : sched-ebb.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(RTL_H) $(SCHED_INT_H) $(REGS_H) hard-reg-set.h $(FLAGS_H) insn-config.h \\\n    $(FUNCTION_H) $(INSN_ATTR_H) $(TOPLEV_H) $(RECOG_H) $(EXCEPT_H) $(TM_P_H) \\\n    $(PARAMS_H) $(CFGLAYOUT_H) $(TARGET_H) output.h\n sched-vis.o : sched-vis.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(RTL_H) $(SCHED_INT_H) hard-reg-set.h $(BASIC_BLOCK_H) $(OBSTACK_H) \\\n-   $(REAL_H) tree-pass.h $(INSN_ATTR_H)\n+   $(REAL_H) $(TREE_PASS_H) $(INSN_ATTR_H)\n sel-sched.o : sel-sched.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(RTL_H) $(REGS_H) hard-reg-set.h $(FLAGS_H) insn-config.h \\\n    $(FUNCTION_H) $(INSN_ATTR_H) toplev.h $(RECOG_H) $(EXCEPT_H) $(PARAMS_H) \\\n-   $(TM_P_H) $(TARGET_H) $(CFGLAYOUT_H) $(TIMEVAR_H) tree-pass.h  \\\n+   $(TM_P_H) $(TARGET_H) $(CFGLAYOUT_H) $(TIMEVAR_H) $(TREE_PASS_H)  \\\n    $(SCHED_INT_H) $(GGC_H) $(TREE_H) $(LANGHOOKS_DEF_H) \\\n    $(SEL_SCHED_IR_H) $(SEL_SCHED_DUMP_H) sel-sched.h\n sel-sched-dump.o : sel-sched-dump.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(RTL_H) $(REGS_H) hard-reg-set.h $(FLAGS_H) insn-config.h \\\n    $(FUNCTION_H) $(INSN_ATTR_H) toplev.h $(RECOG_H) $(EXCEPT_H) $(PARAMS_H) \\\n-   $(TM_P_H) $(TARGET_H) $(CFGLAYOUT_H) $(TIMEVAR_H) tree-pass.h \\\n+   $(TM_P_H) $(TARGET_H) $(CFGLAYOUT_H) $(TIMEVAR_H) $(TREE_PASS_H) \\\n    $(SEL_SCHED_DUMP_H) $(GGC_H) $(TREE_H) $(LANGHOOKS_DEF_H) $(SEL_SCHED_IR_H)\n sel-sched-ir.o : sel-sched-ir.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(RTL_H) $(REGS_H) hard-reg-set.h $(FLAGS_H) insn-config.h \\\n    $(FUNCTION_H) $(INSN_ATTR_H) toplev.h $(RECOG_H) $(EXCEPT_H) $(PARAMS_H) \\\n-   $(TM_P_H) $(TARGET_H) $(CFGLAYOUT_H) $(TIMEVAR_H) tree-pass.h \\\n+   $(TM_P_H) $(TARGET_H) $(CFGLAYOUT_H) $(TIMEVAR_H) $(TREE_PASS_H) \\\n    $(SCHED_INT_H) $(GGC_H) $(TREE_H) $(LANGHOOKS_DEF_H) $(SEL_SCHED_IR_H)\n final.o : final.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(TREE_H) $(FLAGS_H) intl.h $(REGS_H) $(RECOG_H) conditions.h \\\n    insn-config.h $(INSN_ATTR_H) $(FUNCTION_H) output.h hard-reg-set.h \\\n-   $(EXCEPT_H) debug.h xcoffout.h $(TOPLEV_H) reload.h dwarf2out.h tree-pass.h \\\n-   $(BASIC_BLOCK_H) $(TM_P_H) $(TARGET_H) $(EXPR_H) $(CFGLAYOUT_H) dbxout.h \\\n-   $(TIMEVAR_H) $(CGRAPH_H) $(COVERAGE_H) $(REAL_H) $(DF_H) vecprim.h $(GGC_H) \\\n-   $(CFGLOOP_H) $(PARAMS_H)\n+   $(EXCEPT_H) debug.h xcoffout.h $(TOPLEV_H) reload.h dwarf2out.h \\\n+   $(TREE_PASS_H) $(BASIC_BLOCK_H) $(TM_P_H) $(TARGET_H) $(EXPR_H) \\\n+   $(CFGLAYOUT_H) dbxout.h $(TIMEVAR_H) $(CGRAPH_H) $(COVERAGE_H) $(REAL_H) \\\n+   $(DF_H) vecprim.h $(GGC_H) $(CFGLOOP_H) $(PARAMS_H)\n recog.o : recog.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(FUNCTION_H) $(BASIC_BLOCK_H) $(REGS_H) $(RECOG_H) $(EXPR_H) \\\n    $(FLAGS_H) insn-config.h $(INSN_ATTR_H) $(TOPLEV_H) output.h reload.h \\\n-   addresses.h $(TM_P_H) $(TIMEVAR_H) tree-pass.h hard-reg-set.h $(REAL_H) \\\n+   addresses.h $(TM_P_H) $(TIMEVAR_H) $(TREE_PASS_H) hard-reg-set.h $(REAL_H) \\\n    $(DF_H) $(DBGCNT_H) $(TARGET_H)\n reg-stack.o : reg-stack.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(RTL_H) $(TREE_H) $(RECOG_H) $(REGS_H) hard-reg-set.h $(FLAGS_H) \\\n    insn-config.h $(TOPLEV_H) reload.h $(FUNCTION_H) $(TM_P_H) $(GGC_H) \\\n    $(BASIC_BLOCK_H) $(CFGLAYOUT_H) output.h $(VARRAY_H) $(TIMEVAR_H) \\\n-   tree-pass.h $(TARGET_H) vecprim.h $(DF_H)\n+   $(TREE_PASS_H) $(TARGET_H) vecprim.h $(DF_H)\n sreal.o: sreal.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) sreal.h\n predict.o: predict.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(TREE_H) $(FLAGS_H) insn-config.h $(BASIC_BLOCK_H) $(REGS_H) \\\n    hard-reg-set.h output.h $(TOPLEV_H) $(RECOG_H) $(FUNCTION_H) $(EXCEPT_H) \\\n    $(TM_P_H) $(PREDICT_H) sreal.h $(PARAMS_H) $(TARGET_H) $(CFGLOOP_H) \\\n    $(COVERAGE_H) $(SCEV_H) $(GGC_H) predict.def $(TIMEVAR_H) $(TREE_DUMP_H) \\\n-   $(TREE_FLOW_H) tree-pass.h $(EXPR_H) pointer-set.h\n+   $(TREE_FLOW_H) $(TREE_PASS_H) $(EXPR_H) pointer-set.h\n lists.o: lists.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TOPLEV_H) \\\n    $(RTL_H) $(GGC_H) gt-lists.h\n bb-reorder.o : bb-reorder.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(RTL_H) $(FLAGS_H) $(TIMEVAR_H) output.h $(CFGLAYOUT_H) $(FIBHEAP_H) \\\n    $(TARGET_H) $(FUNCTION_H) $(TM_P_H) $(OBSTACK_H) $(EXPR_H) $(REGS_H) \\\n-   $(PARAMS_H) $(TOPLEV_H) tree-pass.h $(DF_H)\n+   $(PARAMS_H) $(TOPLEV_H) $(TREE_PASS_H) $(DF_H)\n tracer.o : tracer.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(TREE_H) $(BASIC_BLOCK_H) hard-reg-set.h output.h $(CFGLAYOUT_H) \\\n    $(FLAGS_H) $(TIMEVAR_H) $(PARAMS_H) $(COVERAGE_H) $(FIBHEAP_H) \\\n-   tree-pass.h $(TREE_FLOW_H) $(TREE_INLINE_H)\n+   $(TREE_PASS_H) $(TREE_FLOW_H) $(TREE_INLINE_H)\n cfglayout.o : cfglayout.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(RTL_H) $(TREE_H) insn-config.h $(BASIC_BLOCK_H) hard-reg-set.h output.h \\\n    $(FUNCTION_H) $(CFGLAYOUT_H) $(CFGLOOP_H) $(TARGET_H) gt-cfglayout.h \\\n-   $(GGC_H) alloc-pool.h $(FLAGS_H) $(OBSTACK_H) tree-pass.h vecprim.h \\\n+   $(GGC_H) alloc-pool.h $(FLAGS_H) $(OBSTACK_H) $(TREE_PASS_H) vecprim.h \\\n    $(DF_H)\n timevar.o : timevar.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(TIMEVAR_H) $(FLAGS_H) intl.h $(TOPLEV_H) $(RTL_H) timevar.def\n regrename.o : regrename.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(RTL_H) insn-config.h $(BASIC_BLOCK_H) $(REGS_H) hard-reg-set.h \\\n    output.h $(RECOG_H) $(FUNCTION_H) $(OBSTACK_H) $(FLAGS_H) $(TM_P_H) \\\n-   addresses.h reload.h $(TOPLEV_H) $(TIMEVAR_H) tree-pass.h $(DF_H)\n+   addresses.h reload.h $(TOPLEV_H) $(TIMEVAR_H) $(TREE_PASS_H) $(DF_H)\n ifcvt.o : ifcvt.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(REGS_H) $(TOPLEV_H) $(FLAGS_H) insn-config.h $(FUNCTION_H) $(RECOG_H) \\\n    $(TARGET_H) $(BASIC_BLOCK_H) $(EXPR_H) output.h $(EXCEPT_H) $(TM_P_H) \\\n-   $(REAL_H) $(OPTABS_H) $(CFGLOOP_H) hard-reg-set.h $(TIMEVAR_H) tree-pass.h \\\n-   $(DF_H) $(DBGCNT_H)\n+   $(REAL_H) $(OPTABS_H) $(CFGLOOP_H) hard-reg-set.h $(TIMEVAR_H) \\\n+   $(TREE_PASS_H) $(DF_H) $(DBGCNT_H)\n lambda-mat.o : lambda-mat.c $(LAMBDA_H) $(GGC_H) $(SYSTEM_H) $(CONFIG_H) \\\n    $(TM_H) coretypes.h $(TREE_H) $(TREE_FLOW_H)\n lambda-trans.o: lambda-trans.c $(LAMBDA_H) $(GGC_H) $(SYSTEM_H) $(CONFIG_H) \\\n@@ -3045,7 +3052,7 @@ lambda-code.o: lambda-code.c $(LAMBDA_H) $(GGC_H) $(SYSTEM_H) $(CONFIG_H) \\\n    $(TM_H) $(OPTABS_H) $(TREE_H) $(RTL_H) $(BASIC_BLOCK_H) \\\n    $(DIAGNOSTIC_H) $(TREE_FLOW_H) $(TREE_DUMP_H) $(TIMEVAR_H) $(CFGLOOP_H) \\\n    $(TREE_DATA_REF_H) $(SCEV_H) $(EXPR_H) coretypes.h $(TARGET_H) \\\n-   tree-chrec.h tree-pass.h vec.h vecprim.h $(OBSTACK_H) pointer-set.h\n+   tree-chrec.h $(TREE_PASS_H) vec.h vecprim.h $(OBSTACK_H) pointer-set.h\n params.o : params.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(PARAMS_H) $(TOPLEV_H)\n pointer-set.o: pointer-set.c pointer-set.h $(CONFIG_H) $(SYSTEM_H)\n hooks.o: hooks.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(HOOKS_H)\n@@ -3057,7 +3064,7 @@ dbgcnt.o: dbgcnt.c $(CONFIG_H) $(SYSTEM_H) coretypes.h errors.h $(DBGCNT_H) \\\n lower-subreg.o : lower-subreg.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(MACHMODE_H) $(TM_H) $(RTL_H) $(TM_P_H) $(TIMEVAR_H) $(FLAGS_H) \\\n    insn-config.h $(BASIC_BLOCK_H) $(RECOG_H) $(OBSTACK_H) $(BITMAP_H) \\\n-   $(EXPR_H) $(EXCEPT_H) $(REGS_H) tree-pass.h $(DF_H)\n+   $(EXPR_H) $(EXCEPT_H) $(REGS_H) $(TREE_PASS_H) $(DF_H)\n \n $(out_object_file): $(out_file) $(CONFIG_H) coretypes.h $(TM_H) $(TREE_H) \\\n    $(RTL_H) $(REGS_H) hard-reg-set.h insn-config.h conditions.h \\"}, {"sha": "be36f2c6e4a1c722cc872b055a1d5aad99192e67", "filename": "gcc/bt-load.c", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7072a650e38408ea56e66e7e1299df3738f892a2/gcc%2Fbt-load.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7072a650e38408ea56e66e7e1299df3738f892a2/gcc%2Fbt-load.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbt-load.c?ref=7072a650e38408ea56e66e7e1299df3738f892a2", "patch": "@@ -1,5 +1,5 @@\n /* Perform branch target register load optimizations.\n-   Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008\n+   Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009\n    Free Software Foundation, Inc.\n \n This file is part of GCC.\n@@ -1513,7 +1513,7 @@ struct rtl_opt_pass pass_branch_target_load_optimize1 =\n   NULL,                                 /* sub */\n   NULL,                                 /* next */\n   0,                                    /* static_pass_number */\n-  0,\t\t                        /* tv_id */\n+  TV_NONE,\t                        /* tv_id */\n   0,                                    /* properties_required */\n   0,                                    /* properties_provided */\n   0,                                    /* properties_destroyed */\n@@ -1563,7 +1563,7 @@ struct rtl_opt_pass pass_branch_target_load_optimize2 =\n   NULL,                                 /* sub */\n   NULL,                                 /* next */\n   0,                                    /* static_pass_number */\n-  0,\t\t\t\t\t/* tv_id */\n+  TV_NONE,\t\t\t\t/* tv_id */\n   0,                                    /* properties_required */\n   0,                                    /* properties_provided */\n   0,                                    /* properties_destroyed */\n@@ -1572,4 +1572,3 @@ struct rtl_opt_pass pass_branch_target_load_optimize2 =\n   TODO_ggc_collect,                     /* todo_flags_finish */\n  }\n };\n-"}, {"sha": "ee72030327cbf46d4da10e061d856f4f5154b35f", "filename": "gcc/cfglayout.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7072a650e38408ea56e66e7e1299df3738f892a2/gcc%2Fcfglayout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7072a650e38408ea56e66e7e1299df3738f892a2/gcc%2Fcfglayout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfglayout.c?ref=7072a650e38408ea56e66e7e1299df3738f892a2", "patch": "@@ -1,5 +1,5 @@\n /* Basic block reordering routines for the GNU compiler.\n-   Copyright (C) 2000, 2001, 2003, 2004, 2005, 2006, 2007, 2008\n+   Copyright (C) 2000, 2001, 2003, 2004, 2005, 2006, 2007, 2008, 2009\n    Free Software Foundation, Inc.\n \n This file is part of GCC.\n@@ -363,7 +363,7 @@ struct rtl_opt_pass pass_into_cfg_layout_mode =\n   NULL,                                 /* sub */\n   NULL,                                 /* next */\n   0,                                    /* static_pass_number */\n-  0,                                    /* tv_id */\n+  TV_NONE,                              /* tv_id */\n   0,                                    /* properties_required */\n   PROP_cfglayout,                       /* properties_provided */\n   0,                                    /* properties_destroyed */\n@@ -382,7 +382,7 @@ struct rtl_opt_pass pass_outof_cfg_layout_mode =\n   NULL,                                 /* sub */\n   NULL,                                 /* next */\n   0,                                    /* static_pass_number */\n-  0,                                    /* tv_id */\n+  TV_NONE,                              /* tv_id */\n   0,                                    /* properties_required */\n   0,                                    /* properties_provided */\n   PROP_cfglayout,                       /* properties_destroyed */"}, {"sha": "c6436bf4be742b88779566c8e6093705dc1469ce", "filename": "gcc/cfgrtl.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7072a650e38408ea56e66e7e1299df3738f892a2/gcc%2Fcfgrtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7072a650e38408ea56e66e7e1299df3738f892a2/gcc%2Fcfgrtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgrtl.c?ref=7072a650e38408ea56e66e7e1299df3738f892a2", "patch": "@@ -1,6 +1,6 @@\n /* Control flow graph manipulation code for GNU compiler.\n    Copyright (C) 1987, 1988, 1992, 1993, 1994, 1995, 1996, 1997, 1998,\n-   1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008\n+   1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009\n    Free Software Foundation, Inc.\n \n This file is part of GCC.\n@@ -419,7 +419,7 @@ struct rtl_opt_pass pass_free_cfg =\n   NULL,                                 /* sub */\n   NULL,                                 /* next */\n   0,                                    /* static_pass_number */\n-  0,                                    /* tv_id */\n+  TV_NONE,                              /* tv_id */\n   0,                                    /* properties_required */\n   0,                                    /* properties_provided */\n   PROP_cfg,                             /* properties_destroyed */"}, {"sha": "f244a1e315d055091d3f96c1481f131b97bc1238", "filename": "gcc/cgraphbuild.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7072a650e38408ea56e66e7e1299df3738f892a2/gcc%2Fcgraphbuild.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7072a650e38408ea56e66e7e1299df3738f892a2/gcc%2Fcgraphbuild.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphbuild.c?ref=7072a650e38408ea56e66e7e1299df3738f892a2", "patch": "@@ -1,5 +1,5 @@\n /* Callgraph construction.\n-   Copyright (C) 2003, 2004, 2005, 2006, 2007, 2008\n+   Copyright (C) 2003, 2004, 2005, 2006, 2007, 2008, 2009\n    Free Software Foundation, Inc.\n    Contributed by Jan Hubicka\n \n@@ -182,7 +182,7 @@ struct gimple_opt_pass pass_build_cgraph_edges =\n   NULL,\t\t\t\t\t/* sub */\n   NULL,\t\t\t\t\t/* next */\n   0,\t\t\t\t\t/* static_pass_number */\n-  0,\t\t\t\t\t/* tv_id */\n+  TV_NONE,\t\t\t\t/* tv_id */\n   PROP_cfg,\t\t\t\t/* properties_required */\n   0,\t\t\t\t\t/* properties_provided */\n   0,\t\t\t\t\t/* properties_destroyed */\n@@ -243,7 +243,7 @@ struct gimple_opt_pass pass_rebuild_cgraph_edges =\n   NULL,\t\t\t\t\t/* sub */\n   NULL,\t\t\t\t\t/* next */\n   0,\t\t\t\t\t/* static_pass_number */\n-  0,\t\t\t\t\t/* tv_id */\n+  TV_NONE,\t\t\t\t/* tv_id */\n   PROP_cfg,\t\t\t\t/* properties_required */\n   0,\t\t\t\t\t/* properties_provided */\n   0,\t\t\t\t\t/* properties_destroyed */\n@@ -270,7 +270,7 @@ struct gimple_opt_pass pass_remove_cgraph_callee_edges =\n   NULL,\t\t\t\t\t/* sub */\n   NULL,\t\t\t\t\t/* next */\n   0,\t\t\t\t\t/* static_pass_number */\n-  0,\t\t\t\t\t/* tv_id */\n+  TV_NONE,\t\t\t\t/* tv_id */\n   0,\t\t\t\t\t/* properties_required */\n   0,\t\t\t\t\t/* properties_provided */\n   0,\t\t\t\t\t/* properties_destroyed */"}, {"sha": "3ec197f1beb14cc45cf89ee2253ebd9ed8aa85f0", "filename": "gcc/combine-stack-adj.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7072a650e38408ea56e66e7e1299df3738f892a2/gcc%2Fcombine-stack-adj.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7072a650e38408ea56e66e7e1299df3738f892a2/gcc%2Fcombine-stack-adj.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine-stack-adj.c?ref=7072a650e38408ea56e66e7e1299df3738f892a2", "patch": "@@ -549,7 +549,7 @@ struct rtl_opt_pass pass_stack_adjustments =\n   NULL,                                 /* sub */\n   NULL,                                 /* next */\n   0,                                    /* static_pass_number */\n-  0,                                    /* tv_id */\n+  TV_NONE,                              /* tv_id */\n   0,                                    /* properties_required */\n   0,                                    /* properties_provided */\n   0,                                    /* properties_destroyed */"}, {"sha": "88f761b679ac4fbbd61e316eb7c9bb409e0fb9f6", "filename": "gcc/df-core.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7072a650e38408ea56e66e7e1299df3738f892a2/gcc%2Fdf-core.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7072a650e38408ea56e66e7e1299df3738f892a2/gcc%2Fdf-core.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdf-core.c?ref=7072a650e38408ea56e66e7e1299df3738f892a2", "patch": "@@ -1,6 +1,6 @@\n /* Allocation for dataflow support routines.\n    Copyright (C) 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007,\n-   2008 Free Software Foundation, Inc.\n+   2008, 2009 Free Software Foundation, Inc.\n    Originally contributed by Michael P. Hayes \n              (m.hayes@elec.canterbury.ac.nz, mhayes@redhat.com)\n    Major rewrite contributed by Danny Berlin (dberlin@dberlin.org)\n@@ -766,7 +766,7 @@ struct rtl_opt_pass pass_df_initialize_opt =\n   NULL,                                 /* sub */\n   NULL,                                 /* next */\n   0,                                    /* static_pass_number */\n-  0,                                    /* tv_id */\n+  TV_NONE,                              /* tv_id */\n   0,                                    /* properties_required */\n   0,                                    /* properties_provided */\n   0,                                    /* properties_destroyed */\n@@ -793,7 +793,7 @@ struct rtl_opt_pass pass_df_initialize_no_opt =\n   NULL,                                 /* sub */\n   NULL,                                 /* next */\n   0,                                    /* static_pass_number */\n-  0,                                    /* tv_id */\n+  TV_NONE,                              /* tv_id */\n   0,                                    /* properties_required */\n   0,                                    /* properties_provided */\n   0,                                    /* properties_destroyed */\n@@ -842,7 +842,7 @@ struct rtl_opt_pass pass_df_finish =\n   NULL,                                 /* sub */\n   NULL,                                 /* next */\n   0,                                    /* static_pass_number */\n-  0,                                    /* tv_id */\n+  TV_NONE,                              /* tv_id */\n   0,                                    /* properties_required */\n   0,                                    /* properties_provided */\n   0,                                    /* properties_destroyed */"}, {"sha": "fd4b6089b410e3c0bf19a48f21c1c08d90efc90b", "filename": "gcc/df.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7072a650e38408ea56e66e7e1299df3738f892a2/gcc%2Fdf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7072a650e38408ea56e66e7e1299df3738f892a2/gcc%2Fdf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdf.h?ref=7072a650e38408ea56e66e7e1299df3738f892a2", "patch": "@@ -29,6 +29,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"bitmap.h\"\n #include \"basic-block.h\"\n #include \"alloc-pool.h\"\n+#include \"timevar.h\"\n \n struct dataflow;\n struct df;\n@@ -275,7 +276,7 @@ struct df_problem {\n   struct df_problem *dependent_problem;\n \n   /* The timevar id associated with this pass.  */\n-  unsigned int tv_id;\n+  timevar_id_t tv_id;\n \n   /* True if the df_set_blocks should null out the basic block info if\n      this block drops out of df->blocks_to_analyze.  */"}, {"sha": "ffb658738d1197ed5f54c268aa0ac13498f3c601", "filename": "gcc/emit-rtl.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7072a650e38408ea56e66e7e1299df3738f892a2/gcc%2Femit-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7072a650e38408ea56e66e7e1299df3738f892a2/gcc%2Femit-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.c?ref=7072a650e38408ea56e66e7e1299df3738f892a2", "patch": "@@ -2381,7 +2381,7 @@ struct rtl_opt_pass pass_unshare_all_rtl =\n   NULL,                                 /* sub */\n   NULL,                                 /* next */\n   0,                                    /* static_pass_number */\n-  0,                                    /* tv_id */\n+  TV_NONE,                              /* tv_id */\n   0,                                    /* properties_required */\n   0,                                    /* properties_provided */\n   0,                                    /* properties_destroyed */"}, {"sha": "062d052f5454f85aacece9c1fe9e062bd0fe128d", "filename": "gcc/except.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7072a650e38408ea56e66e7e1299df3738f892a2/gcc%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7072a650e38408ea56e66e7e1299df3738f892a2/gcc%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexcept.c?ref=7072a650e38408ea56e66e7e1299df3738f892a2", "patch": "@@ -2969,7 +2969,7 @@ struct rtl_opt_pass pass_set_nothrow_function_flags =\n   NULL,                                 /* sub */\n   NULL,                                 /* next */\n   0,                                    /* static_pass_number */\n-  0,                                    /* tv_id */\n+  TV_NONE,                              /* tv_id */\n   0,                                    /* properties_required */\n   0,                                    /* properties_provided */\n   0,                                    /* properties_destroyed */\n@@ -3491,7 +3491,7 @@ struct rtl_opt_pass pass_convert_to_eh_region_ranges =\n   NULL,                                 /* sub */\n   NULL,                                 /* next */\n   0,                                    /* static_pass_number */\n-  0,                                    /* tv_id */\n+  TV_NONE,                              /* tv_id */\n   0,                                    /* properties_required */\n   0,                                    /* properties_provided */\n   0,                                    /* properties_destroyed */"}, {"sha": "621bc28bcb1767c65e9b4c1c9612abfd6592972b", "filename": "gcc/final.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7072a650e38408ea56e66e7e1299df3738f892a2/gcc%2Ffinal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7072a650e38408ea56e66e7e1299df3738f892a2/gcc%2Ffinal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffinal.c?ref=7072a650e38408ea56e66e7e1299df3738f892a2", "patch": "@@ -1,6 +1,6 @@\n /* Convert RTL to assembler code and output it, for GNU compiler.\n    Copyright (C) 1987, 1988, 1989, 1992, 1993, 1994, 1995, 1996, 1997,\n-   1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008\n+   1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009\n    Free Software Foundation, Inc.\n \n This file is part of GCC.\n@@ -801,7 +801,7 @@ struct rtl_opt_pass pass_compute_alignments =\n   NULL,                                 /* sub */\n   NULL,                                 /* next */\n   0,                                    /* static_pass_number */\n-  0,                                    /* tv_id */\n+  TV_NONE,                              /* tv_id */\n   0,                                    /* properties_required */\n   0,                                    /* properties_provided */\n   0,                                    /* properties_destroyed */\n@@ -4356,4 +4356,3 @@ struct rtl_opt_pass pass_clean_state =\n   0                                     /* todo_flags_finish */\n  }\n };\n-"}, {"sha": "3809770a0d347d18b1086cefb0fe400be37d8dd8", "filename": "gcc/function.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7072a650e38408ea56e66e7e1299df3738f892a2/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7072a650e38408ea56e66e7e1299df3738f892a2/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=7072a650e38408ea56e66e7e1299df3738f892a2", "patch": "@@ -1813,7 +1813,7 @@ struct rtl_opt_pass pass_instantiate_virtual_regs =\n   NULL,                                 /* sub */\n   NULL,                                 /* next */\n   0,                                    /* static_pass_number */\n-  0,                                    /* tv_id */\n+  TV_NONE,                              /* tv_id */\n   0,                                    /* properties_required */\n   0,                                    /* properties_provided */\n   0,                                    /* properties_destroyed */\n@@ -4223,7 +4223,7 @@ struct rtl_opt_pass pass_init_function =\n   NULL,                                 /* sub */\n   NULL,                                 /* next */\n   0,                                    /* static_pass_number */\n-  0,                                    /* tv_id */\n+  TV_NONE,                              /* tv_id */\n   0,                                    /* properties_required */\n   0,                                    /* properties_provided */\n   0,                                    /* properties_destroyed */\n@@ -5390,7 +5390,7 @@ struct rtl_opt_pass pass_leaf_regs =\n   NULL,                                 /* sub */\n   NULL,                                 /* next */\n   0,                                    /* static_pass_number */\n-  0,                                    /* tv_id */\n+  TV_NONE,                              /* tv_id */\n   0,                                    /* properties_required */\n   0,                                    /* properties_provided */\n   0,                                    /* properties_destroyed */\n@@ -5625,7 +5625,7 @@ struct rtl_opt_pass pass_match_asm_constraints =\n   NULL,                                 /* sub */\n   NULL,                                 /* next */\n   0,                                    /* static_pass_number */\n-  0,\t\t\t\t\t/* tv_id */\n+  TV_NONE,\t\t\t\t/* tv_id */\n   0,                                    /* properties_required */\n   0,                                    /* properties_provided */\n   0,                                    /* properties_destroyed */"}, {"sha": "71ab1b1e44c927b70456a0b7f515efc9118076a3", "filename": "gcc/gimple-low.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7072a650e38408ea56e66e7e1299df3738f892a2/gcc%2Fgimple-low.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7072a650e38408ea56e66e7e1299df3738f892a2/gcc%2Fgimple-low.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-low.c?ref=7072a650e38408ea56e66e7e1299df3738f892a2", "patch": "@@ -1,6 +1,6 @@\n /* GIMPLE lowering pass.  Converts High GIMPLE into Low GIMPLE.\n \n-   Copyright (C) 2003, 2004, 2005, 2006, 2007, 2008\n+   Copyright (C) 2003, 2004, 2005, 2006, 2007, 2008, 2009\n    Free Software Foundation, Inc.\n \n This file is part of GCC.\n@@ -209,7 +209,7 @@ struct gimple_opt_pass pass_lower_cf =\n   NULL,\t\t\t\t\t/* sub */\n   NULL,\t\t\t\t\t/* next */\n   0,\t\t\t\t\t/* static_pass_number */\n-  0,\t\t\t\t\t/* tv_id */\n+  TV_NONE,\t\t\t\t/* tv_id */\n   PROP_gimple_any,\t\t\t/* properties_required */\n   PROP_gimple_lcf,\t\t\t/* properties_provided */\n   0,\t\t\t\t\t/* properties_destroyed */\n@@ -950,7 +950,7 @@ struct gimple_opt_pass pass_mark_used_blocks =\n   NULL,\t\t\t\t\t/* sub */\n   NULL,\t\t\t\t\t/* next */\n   0,\t\t\t\t\t/* static_pass_number */\n-  0,\t\t\t\t\t/* tv_id */\n+  TV_NONE,\t\t\t\t/* tv_id */\n   0,\t\t\t\t\t/* properties_required */\n   0,\t\t\t\t\t/* properties_provided */\n   0,\t\t\t\t\t/* properties_destroyed */"}, {"sha": "273ab97b77fb9f7b4077e6e9db33fee055489d07", "filename": "gcc/init-regs.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7072a650e38408ea56e66e7e1299df3738f892a2/gcc%2Finit-regs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7072a650e38408ea56e66e7e1299df3738f892a2/gcc%2Finit-regs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Finit-regs.c?ref=7072a650e38408ea56e66e7e1299df3738f892a2", "patch": "@@ -1,5 +1,5 @@\n /* Initialization of uninitialized regs. \n-   Copyright (C) 2007, 2008 Free Software Foundation, Inc.\n+   Copyright (C) 2007, 2008, 2009 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -148,7 +148,7 @@ struct rtl_opt_pass pass_initialize_regs =\n   NULL,                                 /* sub */\n   NULL,                                 /* next */\n   0,                                    /* static_pass_number */\n-  0,                                    /* tv_id */\n+  TV_NONE,                              /* tv_id */\n   0,                                    /* properties_required */\n   0,                                    /* properties_provided */\n   0,                                    /* properties_destroyed */"}, {"sha": "2d0b236a0845ed3b710b82af5d9abe69d282a0d9", "filename": "gcc/integrate.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7072a650e38408ea56e66e7e1299df3738f892a2/gcc%2Fintegrate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7072a650e38408ea56e66e7e1299df3738f892a2/gcc%2Fintegrate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fintegrate.c?ref=7072a650e38408ea56e66e7e1299df3738f892a2", "patch": "@@ -1,6 +1,6 @@\n /* Procedure integration for GCC.\n    Copyright (C) 1988, 1991, 1993, 1994, 1995, 1996, 1997, 1998, 1999,\n-   2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008\n+   2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009\n    Free Software Foundation, Inc.\n    Contributed by Michael Tiemann (tiemann@cygnus.com)\n \n@@ -308,7 +308,7 @@ struct rtl_opt_pass pass_initial_value_sets =\n   NULL,                                 /* sub */\n   NULL,                                 /* next */\n   0,                                    /* static_pass_number */\n-  0,                                    /* tv_id */\n+  TV_NONE,                              /* tv_id */\n   0,                                    /* properties_required */\n   0,                                    /* properties_provided */\n   0,                                    /* properties_destroyed */"}, {"sha": "4dee400f3f8d96a36fc41cf6edb356aaeffd6523", "filename": "gcc/ira.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7072a650e38408ea56e66e7e1299df3738f892a2/gcc%2Fira.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7072a650e38408ea56e66e7e1299df3738f892a2/gcc%2Fira.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira.c?ref=7072a650e38408ea56e66e7e1299df3738f892a2", "patch": "@@ -3320,7 +3320,7 @@ struct rtl_opt_pass pass_ira =\n   NULL,                                 /* sub */\n   NULL,                                 /* next */\n   0,                                    /* static_pass_number */\n-  0,\t\t                        /* tv_id */\n+  TV_NONE,\t                        /* tv_id */\n   0,                                    /* properties_required */\n   0,                                    /* properties_provided */\n   0,                                    /* properties_destroyed */"}, {"sha": "90359f8f997c702b217c9ce4f2935f054696490d", "filename": "gcc/jump.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7072a650e38408ea56e66e7e1299df3738f892a2/gcc%2Fjump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7072a650e38408ea56e66e7e1299df3738f892a2/gcc%2Fjump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjump.c?ref=7072a650e38408ea56e66e7e1299df3738f892a2", "patch": "@@ -132,7 +132,7 @@ struct rtl_opt_pass pass_cleanup_barriers =\n   NULL,                                 /* sub */\n   NULL,                                 /* next */\n   0,                                    /* static_pass_number */\n-  0,                                    /* tv_id */\n+  TV_NONE,                              /* tv_id */\n   0,                                    /* properties_required */\n   0,                                    /* properties_provided */\n   0,                                    /* properties_destroyed */"}, {"sha": "704dbe7ef8279fac12d45919e99ad3b2e64fcc9e", "filename": "gcc/matrix-reorg.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7072a650e38408ea56e66e7e1299df3738f892a2/gcc%2Fmatrix-reorg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7072a650e38408ea56e66e7e1299df3738f892a2/gcc%2Fmatrix-reorg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatrix-reorg.c?ref=7072a650e38408ea56e66e7e1299df3738f892a2", "patch": "@@ -2420,12 +2420,11 @@ struct simple_ipa_opt_pass pass_ipa_matrix_reorg =\n   NULL,\t\t\t\t/* sub */\n   NULL,\t\t\t\t/* next */\n   0,\t\t\t\t/* static_pass_number */\n-  0,\t\t\t\t/* tv_id */\n+  TV_NONE,\t\t\t/* tv_id */\n   0,\t\t\t\t/* properties_required */\n   0,\t\t\t\t/* properties_provided */\n   0,\t\t\t\t/* properties_destroyed */\n   0,\t\t\t\t/* todo_flags_start */\n   TODO_dump_cgraph | TODO_dump_func\t/* todo_flags_finish */\n  }\n };\n-"}, {"sha": "3b99f69b62a6c271e51c167e523c1a747adac2cb", "filename": "gcc/omp-low.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7072a650e38408ea56e66e7e1299df3738f892a2/gcc%2Fomp-low.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7072a650e38408ea56e66e7e1299df3738f892a2/gcc%2Fomp-low.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-low.c?ref=7072a650e38408ea56e66e7e1299df3738f892a2", "patch": "@@ -5468,7 +5468,7 @@ struct gimple_opt_pass pass_expand_omp =\n   NULL,\t\t\t\t\t/* sub */\n   NULL,\t\t\t\t\t/* next */\n   0,\t\t\t\t\t/* static_pass_number */\n-  0,\t\t\t\t\t/* tv_id */\n+  TV_NONE,\t\t\t\t/* tv_id */\n   PROP_gimple_any,\t\t\t/* properties_required */\n   0,\t\t\t\t\t/* properties_provided */\n   0,\t\t\t\t\t/* properties_destroyed */\n@@ -6633,7 +6633,7 @@ struct gimple_opt_pass pass_lower_omp =\n   NULL,\t\t\t\t\t/* sub */\n   NULL,\t\t\t\t\t/* next */\n   0,\t\t\t\t\t/* static_pass_number */\n-  0,\t\t\t\t\t/* tv_id */\n+  TV_NONE,\t\t\t\t/* tv_id */\n   PROP_gimple_any,\t\t\t/* properties_required */\n   PROP_gimple_lomp,\t\t\t/* properties_provided */\n   0,\t\t\t\t\t/* properties_destroyed */"}, {"sha": "1e7bab03983222e456598a1fa35937fa788fed14", "filename": "gcc/passes.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7072a650e38408ea56e66e7e1299df3738f892a2/gcc%2Fpasses.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7072a650e38408ea56e66e7e1299df3738f892a2/gcc%2Fpasses.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpasses.c?ref=7072a650e38408ea56e66e7e1299df3738f892a2", "patch": "@@ -319,7 +319,7 @@ struct rtl_opt_pass pass_postreload =\n   NULL,                                 /* sub */\n   NULL,                                 /* next */\n   0,                                    /* static_pass_number */\n-  0,                                    /* tv_id */\n+  TV_NONE,                              /* tv_id */\n   PROP_rtl,                             /* properties_required */\n   0,                                    /* properties_provided */\n   0,                                    /* properties_destroyed */\n@@ -1207,14 +1207,14 @@ execute_one_ipa_transform_pass (struct cgraph_node *node,\n   execute_todo (ipa_pass->function_transform_todo_flags_start);\n \n   /* If a timevar is present, start it.  */\n-  if (pass->tv_id)\n+  if (pass->tv_id != TV_NONE)\n     timevar_push (pass->tv_id);\n \n   /* Do it!  */\n   todo_after = ipa_pass->function_transform (node);\n \n   /* Stop timevar.  */\n-  if (pass->tv_id)\n+  if (pass->tv_id != TV_NONE)\n     timevar_pop (pass->tv_id);\n \n   /* Run post-pass cleanup and verification.  */\n@@ -1281,7 +1281,7 @@ execute_one_pass (struct opt_pass *pass)\n #endif\n \n   /* If a timevar is present, start it.  */\n-  if (pass->tv_id)\n+  if (pass->tv_id != TV_NONE)\n     timevar_push (pass->tv_id);\n \n   /* Do it!  */\n@@ -1292,7 +1292,7 @@ execute_one_pass (struct opt_pass *pass)\n     }\n \n   /* Stop timevar.  */\n-  if (pass->tv_id)\n+  if (pass->tv_id != TV_NONE)\n     timevar_pop (pass->tv_id);\n \n   do_per_function (update_properties_after_pass, pass);"}, {"sha": "baad154c448e2e014910f2614499181c7cfa963c", "filename": "gcc/recog.c", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7072a650e38408ea56e66e7e1299df3738f892a2/gcc%2Frecog.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7072a650e38408ea56e66e7e1299df3738f892a2/gcc%2Frecog.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frecog.c?ref=7072a650e38408ea56e66e7e1299df3738f892a2", "patch": "@@ -3500,7 +3500,7 @@ struct rtl_opt_pass pass_split_all_insns =\n   NULL,                                 /* sub */\n   NULL,                                 /* next */\n   0,                                    /* static_pass_number */\n-  0,                                    /* tv_id */\n+  TV_NONE,                              /* tv_id */\n   0,                                    /* properties_required */\n   0,                                    /* properties_provided */\n   0,                                    /* properties_destroyed */\n@@ -3530,7 +3530,7 @@ struct rtl_opt_pass pass_split_after_reload =\n   NULL,                                 /* sub */\n   NULL,                                 /* next */\n   0,                                    /* static_pass_number */\n-  0,                                    /* tv_id */\n+  TV_NONE,                              /* tv_id */\n   0,                                    /* properties_required */\n   0,                                    /* properties_provided */\n   0,                                    /* properties_destroyed */\n@@ -3574,7 +3574,7 @@ struct rtl_opt_pass pass_split_before_regstack =\n   NULL,                                 /* sub */\n   NULL,                                 /* next */\n   0,                                    /* static_pass_number */\n-  0,                                    /* tv_id */\n+  TV_NONE,                              /* tv_id */\n   0,                                    /* properties_required */\n   0,                                    /* properties_provided */\n   0,                                    /* properties_destroyed */\n@@ -3612,7 +3612,7 @@ struct rtl_opt_pass pass_split_before_sched2 =\n   NULL,                                 /* sub */\n   NULL,                                 /* next */\n   0,                                    /* static_pass_number */\n-  0,                                    /* tv_id */\n+  TV_NONE,                              /* tv_id */\n   0,                                    /* properties_required */\n   0,                                    /* properties_provided */\n   0,                                    /* properties_destroyed */\n@@ -3644,13 +3644,11 @@ struct rtl_opt_pass pass_split_for_shorten_branches =\n   NULL,                                 /* sub */\n   NULL,                                 /* next */\n   0,                                    /* static_pass_number */\n-  0,                                    /* tv_id */\n+  TV_NONE,                              /* tv_id */\n   0,                                    /* properties_required */\n   0,                                    /* properties_provided */\n   0,                                    /* properties_destroyed */\n   0,                                    /* todo_flags_start */\n   TODO_dump_func | TODO_verify_rtl_sharing /* todo_flags_finish */\n  }\n };\n-\n-"}, {"sha": "829ff2a4ffdd6717ac6e94357ad40bbeecdee35c", "filename": "gcc/reginfo.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7072a650e38408ea56e66e7e1299df3738f892a2/gcc%2Freginfo.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7072a650e38408ea56e66e7e1299df3738f892a2/gcc%2Freginfo.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freginfo.c?ref=7072a650e38408ea56e66e7e1299df3738f892a2", "patch": "@@ -948,7 +948,7 @@ struct rtl_opt_pass pass_reginfo_init =\n   NULL,                                 /* sub */\n   NULL,                                 /* next */\n   0,                                    /* static_pass_number */\n-  0,                                    /* tv_id */\n+  TV_NONE,                              /* tv_id */\n   0,                                    /* properties_required */\n   0,                                    /* properties_provided */\n   0,                                    /* properties_destroyed */\n@@ -1407,7 +1407,7 @@ struct rtl_opt_pass pass_subregs_of_mode_init =\n   NULL,                                 /* sub */\n   NULL,                                 /* next */\n   0,                                    /* static_pass_number */\n-  0,                                    /* tv_id */\n+  TV_NONE,                              /* tv_id */\n   0,                                    /* properties_required */\n   0,                                    /* properties_provided */\n   0,                                    /* properties_destroyed */\n@@ -1426,7 +1426,7 @@ struct rtl_opt_pass pass_subregs_of_mode_finish =\n   NULL,                                 /* sub */\n   NULL,                                 /* next */\n   0,                                    /* static_pass_number */\n-  0,                                    /* tv_id */\n+  TV_NONE,                              /* tv_id */\n   0,                                    /* properties_required */\n   0,                                    /* properties_provided */\n   0,                                    /* properties_destroyed */"}, {"sha": "9800d9966ab7d0c0d84b5767d22a3db67689f4d2", "filename": "gcc/stack-ptr-mod.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7072a650e38408ea56e66e7e1299df3738f892a2/gcc%2Fstack-ptr-mod.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7072a650e38408ea56e66e7e1299df3738f892a2/gcc%2Fstack-ptr-mod.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstack-ptr-mod.c?ref=7072a650e38408ea56e66e7e1299df3738f892a2", "patch": "@@ -1,5 +1,5 @@\n /* Discover if the stack pointer is modified in a function. \n-   Copyright (C) 2007, 2008\n+   Copyright (C) 2007, 2008, 2009\n    Free Software Foundation, Inc.\n \n This file is part of GCC.\n@@ -101,7 +101,7 @@ struct rtl_opt_pass pass_stack_ptr_mod =\n   NULL,                                 /* sub */\n   NULL,                                 /* next */\n   0,                                    /* static_pass_number */\n-  0,                                    /* tv_id */\n+  TV_NONE,                              /* tv_id */\n   0,                                    /* properties_required */\n   0,                                    /* properties_provided */\n   0,                                    /* properties_destroyed */"}, {"sha": "8b4caba2e357d3c4a2a9da2238899f2e67c318e8", "filename": "gcc/timevar.h", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7072a650e38408ea56e66e7e1299df3738f892a2/gcc%2Ftimevar.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7072a650e38408ea56e66e7e1299df3738f892a2/gcc%2Ftimevar.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftimevar.h?ref=7072a650e38408ea56e66e7e1299df3738f892a2", "patch": "@@ -1,5 +1,6 @@\n /* Timing variables for measuring compiler performance.\n-   Copyright (C) 2000, 2003, 2004, 2005, 2007 Free Software Foundation, Inc.\n+   Copyright (C) 2000, 2003, 2004, 2005, 2007, 2009\n+   Free Software Foundation, Inc.\n    Contributed by Alex Samuel <samuel@codesourcery.com>\n \n    This file is part of GCC.\n@@ -72,6 +73,7 @@ struct timevar_time_def\n     identifier__,\n typedef enum\n {\n+  TV_NONE,\n #include \"timevar.def\"\n   TIMEVAR_LAST\n }"}, {"sha": "9862af82aaecf225b07557ae3ecf0f68553babd4", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7072a650e38408ea56e66e7e1299df3738f892a2/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7072a650e38408ea56e66e7e1299df3738f892a2/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=7072a650e38408ea56e66e7e1299df3738f892a2", "patch": "@@ -2097,7 +2097,7 @@ struct gimple_opt_pass pass_remove_useless_stmts =\n   NULL,\t\t\t\t\t/* sub */\n   NULL,\t\t\t\t\t/* next */\n   0,\t\t\t\t\t/* static_pass_number */\n-  0,\t\t\t\t\t/* tv_id */\n+  TV_NONE,\t\t\t\t/* tv_id */\n   PROP_gimple_any,\t\t\t/* properties_required */\n   0,\t\t\t\t\t/* properties_provided */\n   0,\t\t\t\t\t/* properties_destroyed */\n@@ -7169,7 +7169,7 @@ struct gimple_opt_pass pass_warn_function_return =\n   NULL,\t\t\t\t\t/* sub */\n   NULL,\t\t\t\t\t/* next */\n   0,\t\t\t\t\t/* static_pass_number */\n-  0,\t\t\t\t\t/* tv_id */\n+  TV_NONE,\t\t\t\t/* tv_id */\n   PROP_cfg,\t\t\t\t/* properties_required */\n   0,\t\t\t\t\t/* properties_provided */\n   0,\t\t\t\t\t/* properties_destroyed */\n@@ -7203,7 +7203,7 @@ struct gimple_opt_pass pass_warn_function_noreturn =\n   NULL,\t\t\t\t\t/* sub */\n   NULL,\t\t\t\t\t/* next */\n   0,\t\t\t\t\t/* static_pass_number */\n-  0,\t\t\t\t\t/* tv_id */\n+  TV_NONE,\t\t\t\t/* tv_id */\n   PROP_cfg,\t\t\t\t/* properties_required */\n   0,\t\t\t\t\t/* properties_provided */\n   0,\t\t\t\t\t/* properties_destroyed */"}, {"sha": "931d030ee32f79f8117956eab12d0f301d877fe5", "filename": "gcc/tree-complex.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7072a650e38408ea56e66e7e1299df3738f892a2/gcc%2Ftree-complex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7072a650e38408ea56e66e7e1299df3738f892a2/gcc%2Ftree-complex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-complex.c?ref=7072a650e38408ea56e66e7e1299df3738f892a2", "patch": "@@ -1,5 +1,6 @@\n /* Lower complex number operations to scalar operations.\n-   Copyright (C) 2004, 2005, 2006, 2007, 2008 Free Software Foundation, Inc.\n+   Copyright (C) 2004, 2005, 2006, 2007, 2008, 2009\n+   Free Software Foundation, Inc.\n \n This file is part of GCC.\n    \n@@ -1605,7 +1606,7 @@ struct gimple_opt_pass pass_lower_complex =\n   NULL,\t\t\t\t\t/* sub */\n   NULL,\t\t\t\t\t/* next */\n   0,\t\t\t\t\t/* static_pass_number */\n-  0,\t\t\t\t\t/* tv_id */\n+  TV_NONE,\t\t\t\t/* tv_id */\n   PROP_ssa,\t\t\t\t/* properties_required */\n   0,\t\t\t\t\t/* properties_provided */\n   0,                       \t\t/* properties_destroyed */\n@@ -1656,7 +1657,7 @@ struct gimple_opt_pass pass_lower_complex_O0 =\n   NULL,\t\t\t\t\t/* sub */\n   NULL,\t\t\t\t\t/* next */\n   0,\t\t\t\t\t/* static_pass_number */\n-  0,\t\t\t\t\t/* tv_id */\n+  TV_NONE,\t\t\t\t/* tv_id */\n   PROP_cfg,\t\t\t\t/* properties_required */\n   0,\t\t\t\t\t/* properties_provided */\n   0,\t\t\t\t\t/* properties_destroyed */"}, {"sha": "f9b942a95201e7b016a999735090b0da52a468e1", "filename": "gcc/tree-if-conv.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7072a650e38408ea56e66e7e1299df3738f892a2/gcc%2Ftree-if-conv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7072a650e38408ea56e66e7e1299df3738f892a2/gcc%2Ftree-if-conv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-if-conv.c?ref=7072a650e38408ea56e66e7e1299df3738f892a2", "patch": "@@ -1,5 +1,6 @@\n /* If-conversion for vectorizer.\n-   Copyright (C) 2004, 2005, 2006, 2007, 2008 Free Software Foundation, Inc.\n+   Copyright (C) 2004, 2005, 2006, 2007, 2008, 2009\n+   Free Software Foundation, Inc.\n    Contributed by Devang Patel <dpatel@apple.com>\n \n This file is part of GCC.\n@@ -1162,7 +1163,7 @@ struct gimple_opt_pass pass_if_conversion =\n   NULL,\t\t\t\t\t/* sub */\n   NULL,\t\t\t\t\t/* next */\n   0,\t\t\t\t\t/* static_pass_number */\n-  0,\t\t\t\t\t/* tv_id */\n+  TV_NONE,\t\t\t\t/* tv_id */\n   PROP_cfg | PROP_ssa | PROP_alias,\t/* properties_required */\n   0,\t\t\t\t\t/* properties_provided */\n   0,\t\t\t\t\t/* properties_destroyed */"}, {"sha": "db1af2bd96b552632cfe1e4dba48e3d2e3b13616", "filename": "gcc/tree-into-ssa.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7072a650e38408ea56e66e7e1299df3738f892a2/gcc%2Ftree-into-ssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7072a650e38408ea56e66e7e1299df3738f892a2/gcc%2Ftree-into-ssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-into-ssa.c?ref=7072a650e38408ea56e66e7e1299df3738f892a2", "patch": "@@ -1,5 +1,5 @@\n /* Rewrite a program in Normal form into SSA.\n-   Copyright (C) 2001, 2002, 2003, 2004, 2005, 2007, 2008\n+   Copyright (C) 2001, 2002, 2003, 2004, 2005, 2007, 2008, 2009\n    Free Software Foundation, Inc.\n    Contributed by Diego Novillo <dnovillo@redhat.com>\n \n@@ -2272,7 +2272,7 @@ struct gimple_opt_pass pass_build_ssa =\n   NULL,\t\t\t\t\t/* sub */\n   NULL,\t\t\t\t\t/* next */\n   0,\t\t\t\t\t/* static_pass_number */\n-  0,\t\t\t\t\t/* tv_id */\n+  TV_NONE,\t\t\t\t/* tv_id */\n   PROP_cfg | PROP_referenced_vars,\t/* properties_required */\n   PROP_ssa,\t\t\t\t/* properties_provided */\n   0,\t\t\t\t\t/* properties_destroyed */"}, {"sha": "23cd169ae0962a57f04aed8f3da5ba697e3bab46", "filename": "gcc/tree-mudflap.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7072a650e38408ea56e66e7e1299df3738f892a2/gcc%2Ftree-mudflap.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7072a650e38408ea56e66e7e1299df3738f892a2/gcc%2Ftree-mudflap.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-mudflap.c?ref=7072a650e38408ea56e66e7e1299df3738f892a2", "patch": "@@ -1,5 +1,5 @@\n /* Mudflap: narrow-pointer bounds-checking by tree rewriting.\n-   Copyright (C) 2002, 2003, 2004, 2005, 2006, 2007, 2008\n+   Copyright (C) 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009\n    Free Software Foundation, Inc.\n    Contributed by Frank Ch. Eigler <fche@redhat.com>\n    and Graydon Hoare <graydon@redhat.com>\n@@ -1346,7 +1346,7 @@ struct gimple_opt_pass pass_mudflap_1 =\n   NULL,                                 /* sub */\n   NULL,                                 /* next */\n   0,                                    /* static_pass_number */\n-  0,                                    /* tv_id */\n+  TV_NONE,                              /* tv_id */\n   PROP_gimple_any,                      /* properties_required */\n   0,                                    /* properties_provided */\n   0,                                    /* properties_destroyed */\n@@ -1365,7 +1365,7 @@ struct gimple_opt_pass pass_mudflap_2 =\n   NULL,                                 /* sub */\n   NULL,                                 /* next */\n   0,                                    /* static_pass_number */\n-  0,                                    /* tv_id */\n+  TV_NONE,                              /* tv_id */\n   PROP_gimple_leh,                      /* properties_required */\n   0,                                    /* properties_provided */\n   0,                                    /* properties_destroyed */"}, {"sha": "5429e289c356131b973a9f06c179baf13585866e", "filename": "gcc/tree-nomudflap.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7072a650e38408ea56e66e7e1299df3738f892a2/gcc%2Ftree-nomudflap.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7072a650e38408ea56e66e7e1299df3738f892a2/gcc%2Ftree-nomudflap.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-nomudflap.c?ref=7072a650e38408ea56e66e7e1299df3738f892a2", "patch": "@@ -100,7 +100,7 @@ struct gimple_opt_pass pass_mudflap_1 =\n   NULL,\t\t\t\t\t/* sub */\n   NULL,\t\t\t\t\t/* next */\n   0,\t\t\t\t\t/* static_pass_number */\n-  0,\t\t\t\t\t/* tv_id */\n+  TV_NONE,\t\t\t\t/* tv_id */\n   0,\t\t\t\t\t/* properties_required */\n   0,\t\t\t\t\t/* properties_provided */\n   0,\t\t\t\t\t/* properties_destroyed */\n@@ -119,7 +119,7 @@ struct gimple_opt_pass pass_mudflap_2 =\n   NULL,\t\t\t\t\t/* sub */\n   NULL,\t\t\t\t\t/* next */\n   0,\t\t\t\t\t/* static_pass_number */\n-  0,\t\t\t\t\t/* tv_id */\n+  TV_NONE,\t\t\t\t/* tv_id */\n   0,\t\t\t\t\t/* properties_required */\n   0,\t\t\t\t\t/* properties_provided */\n   0,\t\t\t\t\t/* properties_destroyed */"}, {"sha": "a82a3b01c68104054eb1b8eb2cb6e479bda56bf2", "filename": "gcc/tree-nrv.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7072a650e38408ea56e66e7e1299df3738f892a2/gcc%2Ftree-nrv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7072a650e38408ea56e66e7e1299df3738f892a2/gcc%2Ftree-nrv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-nrv.c?ref=7072a650e38408ea56e66e7e1299df3738f892a2", "patch": "@@ -1,5 +1,5 @@\n /* Language independent return value optimizations\n-   Copyright (C) 2004, 2005, 2007, 2008 Free Software Foundation, Inc.\n+   Copyright (C) 2004, 2005, 2007, 2008, 2009 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -349,7 +349,7 @@ struct gimple_opt_pass pass_return_slot =\n   NULL,\t\t\t\t\t/* sub */\n   NULL,\t\t\t\t\t/* next */\n   0,\t\t\t\t\t/* static_pass_number */\n-  0,\t\t\t\t\t/* tv_id */\n+  TV_NONE,\t\t\t\t/* tv_id */\n   PROP_ssa | PROP_alias,\t\t/* properties_required */\n   0,\t\t\t\t\t/* properties_provided */\n   0,\t\t\t\t\t/* properties_destroyed */"}, {"sha": "d99bc23857653428844c3e3cb0b42c0968fb435f", "filename": "gcc/tree-object-size.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7072a650e38408ea56e66e7e1299df3738f892a2/gcc%2Ftree-object-size.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7072a650e38408ea56e66e7e1299df3738f892a2/gcc%2Ftree-object-size.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-object-size.c?ref=7072a650e38408ea56e66e7e1299df3738f892a2", "patch": "@@ -1,5 +1,6 @@\n /* __builtin_object_size (ptr, object_size_type) computation\n-   Copyright (C) 2004, 2005, 2006, 2007, 2008 Free Software Foundation, Inc.\n+   Copyright (C) 2004, 2005, 2006, 2007, 2008, 2009\n+   Free Software Foundation, Inc.\n    Contributed by Jakub Jelinek <jakub@redhat.com>\n \n This file is part of GCC.\n@@ -1111,7 +1112,7 @@ struct gimple_opt_pass pass_object_sizes =\n   NULL,\t\t\t\t\t/* sub */\n   NULL,\t\t\t\t\t/* next */\n   0,\t\t\t\t\t/* static_pass_number */\n-  0,\t\t\t\t\t/* tv_id */\n+  TV_NONE,\t\t\t\t/* tv_id */\n   PROP_cfg | PROP_ssa | PROP_alias,\t/* properties_required */\n   0,\t\t\t\t\t/* properties_provided */\n   0,\t\t\t\t\t/* properties_destroyed */"}, {"sha": "666b31bd8444f70080fa178dadbfbab903df4df4", "filename": "gcc/tree-optimize.c", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7072a650e38408ea56e66e7e1299df3738f892a2/gcc%2Ftree-optimize.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7072a650e38408ea56e66e7e1299df3738f892a2/gcc%2Ftree-optimize.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-optimize.c?ref=7072a650e38408ea56e66e7e1299df3738f892a2", "patch": "@@ -1,5 +1,5 @@\n /* Top-level control of tree optimizations.\n-   Copyright 2001, 2002, 2003, 2004, 2005, 2007, 2008\n+   Copyright 2001, 2002, 2003, 2004, 2005, 2007, 2008, 2009\n    Free Software Foundation, Inc.\n    Contributed by Diego Novillo <dnovillo@redhat.com>\n \n@@ -72,7 +72,7 @@ struct gimple_opt_pass pass_all_optimizations =\n   NULL,\t\t\t\t\t/* sub */\n   NULL,\t\t\t\t\t/* next */\n   0,\t\t\t\t\t/* static_pass_number */\n-  0,\t\t\t\t\t/* tv_id */\n+  TV_NONE,\t\t\t\t/* tv_id */\n   0,\t\t\t\t\t/* properties_required */\n   0,\t\t\t\t\t/* properties_provided */\n   0,\t\t\t\t\t/* properties_destroyed */\n@@ -100,7 +100,7 @@ struct simple_ipa_opt_pass pass_early_local_passes =\n   NULL,\t\t\t\t\t/* sub */\n   NULL,\t\t\t\t\t/* next */\n   0,\t\t\t\t\t/* static_pass_number */\n-  0,\t\t\t\t\t/* tv_id */\n+  TV_NONE,\t\t\t\t/* tv_id */\n   0,\t\t\t\t\t/* properties_required */\n   0,\t\t\t\t\t/* properties_provided */\n   0,\t\t\t\t\t/* properties_destroyed */\n@@ -141,7 +141,7 @@ struct gimple_opt_pass pass_all_early_optimizations =\n   NULL,\t\t\t\t\t/* sub */\n   NULL,\t\t\t\t\t/* next */\n   0,\t\t\t\t\t/* static_pass_number */\n-  0,\t\t\t\t\t/* tv_id */\n+  TV_NONE,\t\t\t\t/* tv_id */\n   0,\t\t\t\t\t/* properties_required */\n   0,\t\t\t\t\t/* properties_provided */\n   0,\t\t\t\t\t/* properties_destroyed */\n@@ -172,7 +172,7 @@ struct gimple_opt_pass pass_cleanup_cfg =\n   NULL,\t\t\t\t\t/* sub */\n   NULL,\t\t\t\t\t/* next */\n   0,\t\t\t\t\t/* static_pass_number */\n-  0,\t\t\t\t\t/* tv_id */\n+  TV_NONE,\t\t\t\t/* tv_id */\n   PROP_cfg,\t\t\t\t/* properties_required */\n   0,\t\t\t\t\t/* properties_provided */\n   0,\t\t\t\t\t/* properties_destroyed */\n@@ -207,7 +207,7 @@ struct gimple_opt_pass pass_cleanup_cfg_post_optimizing =\n   NULL,\t\t\t\t\t/* sub */\n   NULL,\t\t\t\t\t/* next */\n   0,\t\t\t\t\t/* static_pass_number */\n-  0,\t\t\t\t\t/* tv_id */\n+  TV_NONE,\t\t\t\t/* tv_id */\n   PROP_cfg,\t\t\t\t/* properties_required */\n   0,\t\t\t\t\t/* properties_provided */\n   0,\t\t\t\t\t/* properties_destroyed */\n@@ -241,7 +241,7 @@ struct gimple_opt_pass pass_free_datastructures =\n   NULL,\t\t\t\t\t/* sub */\n   NULL,\t\t\t\t\t/* next */\n   0,\t\t\t\t\t/* static_pass_number */\n-  0,\t\t\t\t\t/* tv_id */\n+  TV_NONE,\t\t\t\t/* tv_id */\n   PROP_cfg,\t\t\t\t/* properties_required */\n   0,\t\t\t\t\t/* properties_provided */\n   0,\t\t\t\t\t/* properties_destroyed */\n@@ -270,7 +270,7 @@ struct gimple_opt_pass pass_free_cfg_annotations =\n   NULL,\t\t\t\t\t/* sub */\n   NULL,\t\t\t\t\t/* next */\n   0,\t\t\t\t\t/* static_pass_number */\n-  0,\t\t\t\t\t/* tv_id */\n+  TV_NONE,\t\t\t\t/* tv_id */\n   PROP_cfg,\t\t\t\t/* properties_required */\n   0,\t\t\t\t\t/* properties_provided */\n   0,\t\t\t\t\t/* properties_destroyed */\n@@ -341,7 +341,7 @@ struct gimple_opt_pass pass_fixup_cfg =\n   NULL,\t\t\t\t\t/* sub */\n   NULL,\t\t\t\t\t/* next */\n   0,\t\t\t\t\t/* static_pass_number */\n-  0,\t\t\t\t\t/* tv_id */\n+  TV_NONE,\t\t\t\t/* tv_id */\n   PROP_cfg,\t\t\t\t/* properties_required */\n   0,\t\t\t\t\t/* properties_provided */\n   0,\t\t\t\t\t/* properties_destroyed */\n@@ -371,7 +371,7 @@ struct gimple_opt_pass pass_init_datastructures =\n   NULL,\t\t\t\t\t/* sub */\n   NULL,\t\t\t\t\t/* next */\n   0,\t\t\t\t\t/* static_pass_number */\n-  0,\t\t\t\t\t/* tv_id */\n+  TV_NONE,\t\t\t\t/* tv_id */\n   PROP_cfg,\t\t\t\t/* properties_required */\n   0,\t\t\t\t\t/* properties_provided */\n   0,\t\t\t\t\t/* properties_destroyed */"}, {"sha": "f0ae58a04141870e81e83a3934be4c7cb7eddfaa", "filename": "gcc/tree-pass.h", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7072a650e38408ea56e66e7e1299df3738f892a2/gcc%2Ftree-pass.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7072a650e38408ea56e66e7e1299df3738f892a2/gcc%2Ftree-pass.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-pass.h?ref=7072a650e38408ea56e66e7e1299df3738f892a2", "patch": "@@ -23,7 +23,7 @@ along with GCC; see the file COPYING3.  If not see\n #ifndef GCC_TREE_PASS_H\n #define GCC_TREE_PASS_H 1\n \n-/* In tree-dump.c */\n+#include \"timevar.h\"\n \n /* Different tree dump places.  When you add new tree dump places,\n    extend the DUMP_FILES array in tree-dump.c.  */\n@@ -75,6 +75,7 @@ enum tree_dump_index\n \t\t\t\t\t   dumper to print stmts.  */\n #define TDF_RHS_ONLY\t(1 << 17)\t/* a flag to only print the RHS of\n \t\t\t\t\t   a gimple stmt.  */\n+/* In tree-dump.c */\n \n extern char *get_dump_file_name (enum tree_dump_index);\n extern int dump_enabled_p (enum tree_dump_index);\n@@ -128,7 +129,7 @@ struct opt_pass\n \n   /* The timevar id associated with this pass.  */\n   /* ??? Ideally would be dynamically assigned.  */\n-  unsigned int tv_id;\n+  timevar_id_t tv_id;\n \n   /* Sets of properties input and output from this pass.  */\n   unsigned int properties_required;"}, {"sha": "fc0c4ca4daa3b421867083ab6338e3a71d6bf27c", "filename": "gcc/tree-ssa-ccp.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7072a650e38408ea56e66e7e1299df3738f892a2/gcc%2Ftree-ssa-ccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7072a650e38408ea56e66e7e1299df3738f892a2/gcc%2Ftree-ssa-ccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-ccp.c?ref=7072a650e38408ea56e66e7e1299df3738f892a2", "patch": "@@ -3381,7 +3381,7 @@ struct gimple_opt_pass pass_fold_builtins =\n   NULL,\t\t\t\t\t/* sub */\n   NULL,\t\t\t\t\t/* next */\n   0,\t\t\t\t\t/* static_pass_number */\n-  0,\t\t\t\t\t/* tv_id */\n+  TV_NONE,\t\t\t\t/* tv_id */\n   PROP_cfg | PROP_ssa,\t\t\t/* properties_required */\n   0,\t\t\t\t\t/* properties_provided */\n   0,\t\t\t\t\t/* properties_destroyed */"}, {"sha": "8d08aa7709fcd592af6a6da725a9841fc0fb835f", "filename": "gcc/tree-ssa-math-opts.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7072a650e38408ea56e66e7e1299df3738f892a2/gcc%2Ftree-ssa-math-opts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7072a650e38408ea56e66e7e1299df3738f892a2/gcc%2Ftree-ssa-math-opts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-math-opts.c?ref=7072a650e38408ea56e66e7e1299df3738f892a2", "patch": "@@ -1,5 +1,5 @@\n /* Global, SSA-based optimizations using mathematical identities.\n-   Copyright (C) 2005, 2006, 2007, 2008 Free Software Foundation, Inc.\n+   Copyright (C) 2005, 2006, 2007, 2008, 2009 Free Software Foundation, Inc.\n    \n This file is part of GCC.\n    \n@@ -564,7 +564,7 @@ struct gimple_opt_pass pass_cse_reciprocals =\n   NULL,\t\t\t\t\t/* sub */\n   NULL,\t\t\t\t\t/* next */\n   0,\t\t\t\t\t/* static_pass_number */\n-  0,\t\t\t\t\t/* tv_id */\n+  TV_NONE,\t\t\t\t/* tv_id */\n   PROP_ssa,\t\t\t\t/* properties_required */\n   0,\t\t\t\t\t/* properties_provided */\n   0,\t\t\t\t\t/* properties_destroyed */\n@@ -778,7 +778,7 @@ struct gimple_opt_pass pass_cse_sincos =\n   NULL,\t\t\t\t\t/* sub */\n   NULL,\t\t\t\t\t/* next */\n   0,\t\t\t\t\t/* static_pass_number */\n-  0,\t\t\t\t\t/* tv_id */\n+  TV_NONE,\t\t\t\t/* tv_id */\n   PROP_ssa,\t\t\t\t/* properties_required */\n   0,\t\t\t\t\t/* properties_provided */\n   0,\t\t\t\t\t/* properties_destroyed */\n@@ -870,7 +870,7 @@ struct gimple_opt_pass pass_convert_to_rsqrt =\n   NULL,\t\t\t\t\t/* sub */\n   NULL,\t\t\t\t\t/* next */\n   0,\t\t\t\t\t/* static_pass_number */\n-  0,\t\t\t\t\t/* tv_id */\n+  TV_NONE,\t\t\t\t/* tv_id */\n   PROP_ssa,\t\t\t\t/* properties_required */\n   0,\t\t\t\t\t/* properties_provided */\n   0,\t\t\t\t\t/* properties_destroyed */"}, {"sha": "aed4d1a3186505a01f5b9725b8557bf8651515d2", "filename": "gcc/tree-ssa-structalias.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7072a650e38408ea56e66e7e1299df3738f892a2/gcc%2Ftree-ssa-structalias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7072a650e38408ea56e66e7e1299df3738f892a2/gcc%2Ftree-ssa-structalias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-structalias.c?ref=7072a650e38408ea56e66e7e1299df3738f892a2", "patch": "@@ -5745,7 +5745,7 @@ struct gimple_opt_pass pass_build_alias =\n   NULL,                     /* sub */\n   NULL,                     /* next */\n   0,                        /* static_pass_number */\n-  0,                        /* tv_id */\n+  TV_NONE,                  /* tv_id */\n   PROP_cfg | PROP_ssa,      /* properties_required */\n   PROP_alias,               /* properties_provided */\n   0,                        /* properties_destroyed */"}, {"sha": "ca00e04f7849f7c1342ef01934952267026b3014", "filename": "gcc/tree-ssa.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7072a650e38408ea56e66e7e1299df3738f892a2/gcc%2Ftree-ssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7072a650e38408ea56e66e7e1299df3738f892a2/gcc%2Ftree-ssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa.c?ref=7072a650e38408ea56e66e7e1299df3738f892a2", "patch": "@@ -1456,7 +1456,7 @@ struct gimple_opt_pass pass_early_warn_uninitialized =\n   NULL,\t\t\t\t\t/* sub */\n   NULL,\t\t\t\t\t/* next */\n   0,\t\t\t\t\t/* static_pass_number */\n-  0,\t\t\t\t\t/* tv_id */\n+  TV_NONE,\t\t\t\t/* tv_id */\n   PROP_ssa,\t\t\t\t/* properties_required */\n   0,\t\t\t\t\t/* properties_provided */\n   0,\t\t\t\t\t/* properties_destroyed */\n@@ -1475,7 +1475,7 @@ struct gimple_opt_pass pass_late_warn_uninitialized =\n   NULL,\t\t\t\t\t/* sub */\n   NULL,\t\t\t\t\t/* next */\n   0,\t\t\t\t\t/* static_pass_number */\n-  0,\t\t\t\t\t/* tv_id */\n+  TV_NONE,\t\t\t\t/* tv_id */\n   PROP_ssa,\t\t\t\t/* properties_required */\n   0,\t\t\t\t\t/* properties_provided */\n   0,\t\t\t\t\t/* properties_destroyed */\n@@ -1617,7 +1617,7 @@ struct gimple_opt_pass pass_update_address_taken =\n   NULL,\t\t\t\t\t/* sub */\n   NULL,\t\t\t\t\t/* next */\n   0,\t\t\t\t\t/* static_pass_number */\n-  0,\t\t\t\t\t/* tv_id */\n+  TV_NONE,\t\t\t\t/* tv_id */\n   PROP_ssa,\t\t\t\t/* properties_required */\n   0,\t\t\t\t\t/* properties_provided */\n   0,\t\t\t\t\t/* properties_destroyed */"}, {"sha": "c019074cfae455974d106cf331f062235dc2fc97", "filename": "gcc/tree-ssanames.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7072a650e38408ea56e66e7e1299df3738f892a2/gcc%2Ftree-ssanames.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7072a650e38408ea56e66e7e1299df3738f892a2/gcc%2Ftree-ssanames.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssanames.c?ref=7072a650e38408ea56e66e7e1299df3738f892a2", "patch": "@@ -1,6 +1,7 @@\n /* Generic routines for manipulating SSA_NAME expressions\n-   Copyright (C) 2003, 2004, 2005, 2007, 2008 Free Software Foundation, Inc.\n-                                                                               \n+   Copyright (C) 2003, 2004, 2005, 2007, 2008, 2009\n+   Free Software Foundation, Inc.\n+\n This file is part of GCC.\n                                                                                \n GCC is free software; you can redistribute it and/or modify\n@@ -349,7 +350,7 @@ struct gimple_opt_pass pass_release_ssa_names =\n   NULL,\t\t\t\t\t/* sub */\n   NULL,\t\t\t\t\t/* next */\n   0,\t\t\t\t\t/* static_pass_number */\n-  0,\t\t\t\t\t/* tv_id */\n+  TV_NONE,\t\t\t\t/* tv_id */\n   PROP_ssa,\t\t\t\t/* properties_required */\n   0,\t\t\t\t\t/* properties_provided */\n   0,\t\t\t\t\t/* properties_destroyed */"}, {"sha": "f9a2110095c84df80b3ab38340cde8c25171b21d", "filename": "gcc/tree-stdarg.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7072a650e38408ea56e66e7e1299df3738f892a2/gcc%2Ftree-stdarg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7072a650e38408ea56e66e7e1299df3738f892a2/gcc%2Ftree-stdarg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-stdarg.c?ref=7072a650e38408ea56e66e7e1299df3738f892a2", "patch": "@@ -1,5 +1,5 @@\n /* Pass computing data for optimizing stdarg functions.\n-   Copyright (C) 2004, 2005, 2007, 2008 Free Software Foundation, Inc.\n+   Copyright (C) 2004, 2005, 2007, 2008, 2009 Free Software Foundation, Inc.\n    Contributed by Jakub Jelinek <jakub@redhat.com>\n \n This file is part of GCC.\n@@ -905,7 +905,7 @@ struct gimple_opt_pass pass_stdarg =\n   NULL,\t\t\t\t\t/* sub */\n   NULL,\t\t\t\t\t/* next */\n   0,\t\t\t\t\t/* static_pass_number */\n-  0,\t\t\t\t\t/* tv_id */\n+  TV_NONE,\t\t\t\t/* tv_id */\n   PROP_cfg | PROP_ssa | PROP_alias,\t/* properties_required */\n   0,\t\t\t\t\t/* properties_provided */\n   0,\t\t\t\t\t/* properties_destroyed */"}, {"sha": "6b03eaaac89f2ee03496122c8f9f703b31869936", "filename": "gcc/tree-tailcall.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7072a650e38408ea56e66e7e1299df3738f892a2/gcc%2Ftree-tailcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7072a650e38408ea56e66e7e1299df3738f892a2/gcc%2Ftree-tailcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-tailcall.c?ref=7072a650e38408ea56e66e7e1299df3738f892a2", "patch": "@@ -1,5 +1,5 @@\n /* Tail call optimization on trees.\n-   Copyright (C) 2003, 2004, 2005, 2006, 2007, 2008\n+   Copyright (C) 2003, 2004, 2005, 2006, 2007, 2008, 2009\n    Free Software Foundation, Inc.\n \n This file is part of GCC.\n@@ -999,7 +999,7 @@ struct gimple_opt_pass pass_tail_recursion =\n   NULL,\t\t\t\t\t/* sub */\n   NULL,\t\t\t\t\t/* next */\n   0,\t\t\t\t\t/* static_pass_number */\n-  0,\t\t\t\t\t/* tv_id */\n+  TV_NONE,\t\t\t\t/* tv_id */\n   PROP_cfg | PROP_ssa,\t\t\t/* properties_required */\n   0,\t\t\t\t\t/* properties_provided */\n   0,\t\t\t\t\t/* properties_destroyed */\n@@ -1018,7 +1018,7 @@ struct gimple_opt_pass pass_tail_calls =\n   NULL,\t\t\t\t\t/* sub */\n   NULL,\t\t\t\t\t/* next */\n   0,\t\t\t\t\t/* static_pass_number */\n-  0,\t\t\t\t\t/* tv_id */\n+  TV_NONE,\t\t\t\t/* tv_id */\n   PROP_cfg | PROP_ssa | PROP_alias,\t/* properties_required */\n   0,\t\t\t\t\t/* properties_provided */\n   0,\t\t\t\t\t/* properties_destroyed */"}, {"sha": "d99d713fd315d7d345dace738be3c83b90d17bac", "filename": "gcc/tree-vect-generic.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7072a650e38408ea56e66e7e1299df3738f892a2/gcc%2Ftree-vect-generic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7072a650e38408ea56e66e7e1299df3738f892a2/gcc%2Ftree-vect-generic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-generic.c?ref=7072a650e38408ea56e66e7e1299df3738f892a2", "patch": "@@ -1,5 +1,6 @@\n /* Lower vector operations to scalar operations.\n-   Copyright (C) 2004, 2005, 2006, 2007, 2008 Free Software Foundation, Inc.\n+   Copyright (C) 2004, 2005, 2006, 2007, 2008, 2009\n+   Free Software Foundation, Inc.\n \n This file is part of GCC.\n    \n@@ -555,7 +556,7 @@ struct gimple_opt_pass pass_lower_vector =\n   NULL,\t\t\t\t\t/* sub */\n   NULL,\t\t\t\t\t/* next */\n   0,\t\t\t\t\t/* static_pass_number */\n-  0,\t\t\t\t\t/* tv_id */\n+  TV_NONE,\t\t\t\t/* tv_id */\n   PROP_cfg,\t\t\t\t/* properties_required */\n   0,\t\t\t\t\t/* properties_provided */\n   0,\t\t\t\t\t/* properties_destroyed */\n@@ -575,7 +576,7 @@ struct gimple_opt_pass pass_lower_vector_ssa =\n   NULL,\t\t\t\t\t/* sub */\n   NULL,\t\t\t\t\t/* next */\n   0,\t\t\t\t\t/* static_pass_number */\n-  0,\t\t\t\t\t/* tv_id */\n+  TV_NONE,\t\t\t\t/* tv_id */\n   PROP_cfg,\t\t\t\t/* properties_required */\n   0,\t\t\t\t\t/* properties_provided */\n   0,\t\t\t\t\t/* properties_destroyed */"}, {"sha": "2ac6a8b87a6d9d559e7d1dd9fe9a88b2bb2681bf", "filename": "gcc/tree-vectorizer.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7072a650e38408ea56e66e7e1299df3738f892a2/gcc%2Ftree-vectorizer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7072a650e38408ea56e66e7e1299df3738f892a2/gcc%2Ftree-vectorizer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vectorizer.c?ref=7072a650e38408ea56e66e7e1299df3738f892a2", "patch": "@@ -305,13 +305,11 @@ struct simple_ipa_opt_pass pass_ipa_increase_alignment =\n   NULL,                                 /* sub */\n   NULL,                                 /* next */\n   0,                                    /* static_pass_number */\n-  0,                                    /* tv_id */\n+  TV_NONE,                              /* tv_id */\n   0,                                    /* properties_required */\n   0,                                    /* properties_provided */\n   0,                                    /* properties_destroyed */\n   0,                                    /* todo_flags_start */\n   0                                     /* todo_flags_finish */\n  }\n };\n-\n-"}]}