{"sha": "67e4f0782003cb45352e14e1b12e99a7251c7b26", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjdlNGYwNzgyMDAzY2I0NTM1MmUxNGUxYjEyZTk5YTcyNTFjN2IyNg==", "commit": {"author": {"name": "Danny Smith", "email": "dannysmith@users.sourceforge.net", "date": "2003-03-13T22:21:21Z"}, "committer": {"name": "Danny Smith", "email": "dannysmith@gcc.gnu.org", "date": "2003-03-13T22:21:21Z"}, "message": "dll-1.c: Remove thumb target.\n\n\t* gcc.dg/dll-1.c: Remove thumb target. Change exp to _exp.\n\t* gcc.dg/dll-2.c: Enable for cygwin and mingw. Remove\n\tthumb target,\n\t* gcc.dg/dll-3.c: Likewise. Adjust scan-assembler\n\tto accept newer _imp__\tprefix and additional\n\tnewline in .drectve section.\n\t* gcc.dg/dll-4.c: Likewise.\n\t* gcc.dg/dll-5.c: New file to test -mnop-fun-dllimport\n\tswitch.\n\nFrom-SVN: r64337", "tree": {"sha": "ef3afc010c8272275f5c876b0d7e810634032a30", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ef3afc010c8272275f5c876b0d7e810634032a30"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/67e4f0782003cb45352e14e1b12e99a7251c7b26", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67e4f0782003cb45352e14e1b12e99a7251c7b26", "html_url": "https://github.com/Rust-GCC/gccrs/commit/67e4f0782003cb45352e14e1b12e99a7251c7b26", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67e4f0782003cb45352e14e1b12e99a7251c7b26/comments", "author": null, "committer": null, "parents": [{"sha": "0171b21c32016b8397c8cdbc793904b4163e7573", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0171b21c32016b8397c8cdbc793904b4163e7573", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0171b21c32016b8397c8cdbc793904b4163e7573"}], "stats": {"total": 58, "additions": 48, "deletions": 10}, "files": [{"sha": "40e66e03b0082b73988160b9a4d58b8863f51da8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67e4f0782003cb45352e14e1b12e99a7251c7b26/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67e4f0782003cb45352e14e1b12e99a7251c7b26/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=67e4f0782003cb45352e14e1b12e99a7251c7b26", "patch": "@@ -1,3 +1,15 @@\n+2003-03-13  Danny Smith  <dannysmith@users.sourceforge.net>\n+\n+\t* gcc.dg/dll-1.c: Remove thumb target. Change exp to _exp. \n+\t* gcc.dg/dll-2.c: Enable for cygwin and mingw. Remove\n+\tthumb target, \n+\t* gcc.dg/dll-3.c: Likewise. Adjust scan-assembler\n+\tto accept newer _imp__\tprefix and additional\n+\tnewline in .drectve section.\n+\t* gcc.dg/dll-4.c: Likewise.\n+\t* gcc.dg/dll-5.c: New file to test -mnop-fun-dllimport\n+\tswitch.\n+\n 2003-03-13  Mark Mitchell  <mark@codesourcery.com>\n \n \t* g++.dg/parse/namespace9.C: New test."}, {"sha": "f823523b2700f8fc08572c53865de577f9ca0649", "filename": "gcc/testsuite/gcc.dg/dll-1.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67e4f0782003cb45352e14e1b12e99a7251c7b26/gcc%2Ftestsuite%2Fgcc.dg%2Fdll-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67e4f0782003cb45352e14e1b12e99a7251c7b26/gcc%2Ftestsuite%2Fgcc.dg%2Fdll-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdll-1.c?ref=67e4f0782003cb45352e14e1b12e99a7251c7b26", "patch": "@@ -1,10 +1,10 @@\n /* { dg-do compile { target arm*-*-pe* } } */\n-/* { dg-do compile { target thumb*-*-pe* } } */\n /* { dg-options -mno-nop-fun-dllimport } */\n \n __declspec (dllimport) void imp ();\n \n-__declspec (dllexport) void exp () { imp (); }\n+__declspec (dllexport) void _exp () { imp (); }\n+\n+/* { dg-final { scan-assembler \"\\.section\\[ \\t\\]*.drectve\\n\\[^\\n\\]*-export:_exp.*__imp_imp\" } } */\n+/* { dg-final { scan-assembler-not \"__imp__exp\" } } */\n \n-/* { dg-final { scan-assembler \"\\.section\\[ \\t\\]*.drectve\\n\\[^\\n\\]*-export:exp.*__imp_imp\" } } */\n-/* { dg-final { scan-assembler-not \"__imp_exp\" } } */"}, {"sha": "45456ce8330249517791c382a6e6305c5e07a24f", "filename": "gcc/testsuite/gcc.dg/dll-2.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67e4f0782003cb45352e14e1b12e99a7251c7b26/gcc%2Ftestsuite%2Fgcc.dg%2Fdll-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67e4f0782003cb45352e14e1b12e99a7251c7b26/gcc%2Ftestsuite%2Fgcc.dg%2Fdll-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdll-2.c?ref=67e4f0782003cb45352e14e1b12e99a7251c7b26", "patch": "@@ -9,7 +9,8 @@\n    and functions.  In C++, it only works for functions.  */\n \n /* { dg-do compile { target arm*-*-pe* } } */\n-/* { dg-do compile { target thumb*-*-pe* } } */\n+/* { dg-do compile { target i?86-pc-cygwin } } */\n+/* { dg-do compile { target i?86-pc-mingw* } } */\n \n __declspec (dllimport) int foo1 ();\n __declspec (dllexport) int foo1 ();"}, {"sha": "2d5517eace62aa49126b584de6916c0b56a8f6d1", "filename": "gcc/testsuite/gcc.dg/dll-3.c", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67e4f0782003cb45352e14e1b12e99a7251c7b26/gcc%2Ftestsuite%2Fgcc.dg%2Fdll-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67e4f0782003cb45352e14e1b12e99a7251c7b26/gcc%2Ftestsuite%2Fgcc.dg%2Fdll-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdll-3.c?ref=67e4f0782003cb45352e14e1b12e99a7251c7b26", "patch": "@@ -1,7 +1,8 @@\n /* Ensure dllexport overrides dllimport.  */\n \n /* { dg-do compile { target arm*-*-pe* } } */\n-/* { dg-do compile { target thumb*-*-pe* } } */\n+/* { dg-do compile { target i?86-pc-cygwin } } */\n+/* { dg-do compile { target i?86-pc-mingw* } } */\n \n __declspec (dllimport) int foo1 ();\n __declspec (dllexport) int foo1 ();\n@@ -12,5 +13,6 @@ __declspec (dllimport) int foo2 ();\n __declspec (dllexport) int foo1 () { return foo2 (); }\n __declspec (dllexport) int foo2 () { return foo1 (); }\n \n-/* { dg-final { scan-assembler \"\\.section\\[ \\t\\]*\\.drectve\\n\\[^\\n\\]*-export:foo1.*\\.section\\[ \\t\\]*\\.drectve\\n\\[^\\n\\]*-export:foo2\" } } */\n-/* { dg-final { scan-assembler-not \"(__imp_foo1|__imp_foo2)\" } } */\n+/* { dg-final { scan-assembler \"\\.section\\[ \\t\\]*.drectve\\n.*-export:foo2\" } } */\n+/* { dg-final { scan-assembler \"-export:foo1\" } } */\n+/* { dg-final { scan-assembler-not \"(__imp_foo1|_imp__foo1|__imp_foo2|_imp__foo2)\" } } */"}, {"sha": "45ed7a11007016cc3f7bb29c77e405577d77a30c", "filename": "gcc/testsuite/gcc.dg/dll-4.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67e4f0782003cb45352e14e1b12e99a7251c7b26/gcc%2Ftestsuite%2Fgcc.dg%2Fdll-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67e4f0782003cb45352e14e1b12e99a7251c7b26/gcc%2Ftestsuite%2Fgcc.dg%2Fdll-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdll-4.c?ref=67e4f0782003cb45352e14e1b12e99a7251c7b26", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile { target arm*-*-pe* } } */\n-/* { dg-do compile { target thumb*-*-pe* } } */\n+/* { dg-do compile { target i?86-pc-cygwin } } */\n+/* { dg-do compile { target i?86-pc-mingw* } } */\n \n __declspec (dllimport) int foo1;\n int foo1;\n@@ -11,4 +12,4 @@ int f () { return foo1 + foo2; }\n \n /* FIXME: We should scan the output of nm for this case.  */\n /* { dg-final { scan-assembler \"(foo2:.*\\.comm\\[ \\t_\\]*foo1)\" } } */\n-/* { dg-final { scan-assembler-not \"__imp_\" } } */\n+/* { dg-final { scan-assembler-not \"(__imp_|_imp__)\" } } */"}, {"sha": "df7e3e3f274781001c6574a926bd445a2701a7ae", "filename": "gcc/testsuite/gcc.dg/dll-5.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67e4f0782003cb45352e14e1b12e99a7251c7b26/gcc%2Ftestsuite%2Fgcc.dg%2Fdll-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67e4f0782003cb45352e14e1b12e99a7251c7b26/gcc%2Ftestsuite%2Fgcc.dg%2Fdll-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdll-5.c?ref=67e4f0782003cb45352e14e1b12e99a7251c7b26", "patch": "@@ -0,0 +1,22 @@\n+/* { dg-do compile { target i?86-pc-cygwin } } */\n+/* { dg-do compile { target i?86-pc-mingw* } } */\n+/* { dg-do compile { target arm*-*-pe* } } */\n+\n+/* { dg-options -mnop-fun-dllimport } */\n+\n+/* The dllimport attribute should be ignored for functions. */\n+__declspec (dllimport) void dllimpfn ();\n+\n+/* The dllimport attribute should not be ignored for variables. */\n+__declspec (dllimport) int dllimpvar;\n+\n+/* The dllexport attribute should not be ignored. */\n+__declspec (dllexport) void dllexp ()\n+{\n+  dllimpfn ();\n+  dllimpvar = 0;\n+}\n+\n+/* { dg-final { scan-assembler-not \"(__imp_dllimpfn|_imp__dllimpfn)\" } } */\n+/* { dg-final { scan-assembler \"(__imp_dllimpvar|_imp__dllimpvar)\" } } */\n+/* { dg-final { scan-assembler \"\\.section\\[ \\t\\]*.drectve\\n\\.*-export:dllexp\" } } */"}]}