{"sha": "5d8f8b657c1a8a73d4125cc4e68aa7c78e7be67f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWQ4ZjhiNjU3YzFhOGE3M2Q0MTI1Y2M0ZTY4YWE3Yzc4ZTdiZTY3Zg==", "commit": {"author": {"name": "Nick Clifton", "email": "nickc@gcc.gnu.org", "date": "1999-11-08T15:43:31Z"}, "committer": {"name": "Nick Clifton", "email": "nickc@gcc.gnu.org", "date": "1999-11-08T15:43:31Z"}, "message": "Prototypes for functions defined in target C source files.\n\nFrom-SVN: r30452", "tree": {"sha": "1da9c0edfa551eb30fd22841f44e358772ebb84c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1da9c0edfa551eb30fd22841f44e358772ebb84c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5d8f8b657c1a8a73d4125cc4e68aa7c78e7be67f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d8f8b657c1a8a73d4125cc4e68aa7c78e7be67f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d8f8b657c1a8a73d4125cc4e68aa7c78e7be67f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d8f8b657c1a8a73d4125cc4e68aa7c78e7be67f/comments", "author": null, "committer": null, "parents": [{"sha": "82a9bba5f8a8594943474d8a2c66b65385fa2f0b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82a9bba5f8a8594943474d8a2c66b65385fa2f0b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/82a9bba5f8a8594943474d8a2c66b65385fa2f0b"}], "stats": {"total": 131, "additions": 131, "deletions": 0}, "files": [{"sha": "31abafb812829ee46272c05897112302178f4a3f", "filename": "gcc/config/fr30/fr30-protos.h", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d8f8b657c1a8a73d4125cc4e68aa7c78e7be67f/gcc%2Fconfig%2Ffr30%2Ffr30-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d8f8b657c1a8a73d4125cc4e68aa7c78e7be67f/gcc%2Fconfig%2Ffr30%2Ffr30-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffr30%2Ffr30-protos.h?ref=5d8f8b657c1a8a73d4125cc4e68aa7c78e7be67f", "patch": "@@ -0,0 +1,47 @@\n+/* Prototypes for fr30.c functions used in the md file & elsewhere.\n+   Copyright (C) 1999 Free Software Foundation, Inc.\n+\n+This file is part of GNU CC.\n+\n+GNU CC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU CC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU CC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 59 Temple Place - Suite 330,\n+Boston, MA 02111-1307, USA.  */\n+\n+extern void  fr30_expand_prologue PROTO ((void));\n+extern void  fr30_expand_epilogue PROTO ((void));\n+extern unsigned int fr30_compute_frame_size PROTO ((int, int));\n+\n+#ifdef RTX_CODE\n+extern int   fr30_check_multiple_regs   PROTO ((rtx *, int, int));\n+extern void  fr30_print_operand         PROTO ((FILE *, rtx, int));\n+extern void  fr30_print_operand_address PROTO ((FILE *, rtx));\n+#ifdef TREE_CODE\n+extern rtx   fr30_va_arg                PROTO ((tree, tree));\n+#endif /* TREE_CODE */\n+#ifdef HAVE_MACHINE_MODES\n+#define Mmode enum machine_mode\n+extern int   stack_add_operand          PROTO ((rtx, Mmode));\n+extern int   add_immediate_operand      PROTO ((rtx, Mmode));\n+extern int   high_register_operand      PROTO ((rtx, Mmode));\n+extern int   low_register_operand       PROTO ((rtx, Mmode));\n+extern int   call_operand               PROTO ((rtx, Mmode));\n+#undef Mmode\n+#endif /* HAVE_MACHINE_MODES */\n+#endif /* RTX_CODE */\n+\n+#ifdef TREE_CODE\n+extern int   fr30_num_arg_regs               PROTO ((int, tree));\n+extern int   fr30_function_arg_partial_nregs PROTO ((CUMULATIVE_ARGS, int, tree, int));\n+extern void  fr30_setup_incoming_varargs     PROTO ((CUMULATIVE_ARGS, int, tree, int *));\n+#endif /* TREE_CODE */"}, {"sha": "e2fa1d645777390bd24b015db8f42531f8207c42", "filename": "gcc/config/v850/v850-protos.h", "status": "added", "additions": 84, "deletions": 0, "changes": 84, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d8f8b657c1a8a73d4125cc4e68aa7c78e7be67f/gcc%2Fconfig%2Fv850%2Fv850-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d8f8b657c1a8a73d4125cc4e68aa7c78e7be67f/gcc%2Fconfig%2Fv850%2Fv850-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fv850%2Fv850-protos.h?ref=5d8f8b657c1a8a73d4125cc4e68aa7c78e7be67f", "patch": "@@ -0,0 +1,84 @@\n+/* Prototypes for v850.c functions used in the md file & elsewhere.\n+   Copyright (C) 1999 Free Software Foundation, Inc.\n+\n+This file is part of GNU CC.\n+\n+GNU CC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU CC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU CC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 59 Temple Place - Suite 330,\n+Boston, MA 02111-1307, USA.  */\n+\n+/* Function prototypes that cannot exist in v850.h due to dependency\n+   compilcations.  */\n+#define Mmode enum machine_mode\n+\n+extern void   expand_prologue               PROTO ((void));\n+extern void   expand_epilogue               PROTO ((void));\n+extern void   sdata_section                 PROTO ((void));\n+extern void   rosdata_section               PROTO ((void));\n+extern void   sbss_section                  PROTO ((void));\n+extern void   tdata_section                 PROTO ((void));\n+extern void   zdata_section                 PROTO ((void));\n+extern void   rozdata_section               PROTO ((void));\n+extern void   zbss_section                  PROTO ((void));\n+extern int    v850_handle_pragma            PROTO ((int (*)(void), void (*)(int), char *));\n+extern void   asm_file_start                PROTO ((FILE *));\n+extern void   override_options              PROTO ((void));\n+extern int    compute_register_save_size    PROTO ((long *));\n+extern int    compute_frame_size            PROTO ((int, long *));\n+\n+#ifdef RTX_CODE\n+extern void   print_operand                 PROTO ((FILE *, rtx, int ));\n+extern void   print_operand_address         PROTO ((FILE *, rtx));\n+extern int    const_costs                   PROTO ((rtx, enum rtx_code));\n+extern char * output_move_double            PROTO ((rtx *));\n+extern char * output_move_single            PROTO ((rtx *));\n+extern void   v850_reorg                    PROTO ((rtx));\n+extern void   notice_update_cc              PROTO ((rtx, rtx));\n+extern char * construct_save_jarl           PROTO ((rtx));\n+extern char * construct_restore_jr          PROTO ((rtx));\n+#ifdef HAVE_MACHINE_MODES\n+extern int    ep_memory_operand             PROTO ((rtx, Mmode, int));\n+extern int    reg_or_0_operand              PROTO ((rtx, Mmode));\n+extern int    reg_or_int5_operand           PROTO ((rtx, Mmode));\n+extern int    call_address_operand          PROTO ((rtx, Mmode));\n+extern int    movsi_source_operand          PROTO ((rtx, Mmode));\n+extern int    power_of_two_operand          PROTO ((rtx, Mmode));\n+extern int    not_power_of_two_operand      PROTO ((rtx, Mmode));\n+extern int    special_symbolref_operand     PROTO ((rtx, Mmode));\n+extern int    pattern_is_ok_for_prologue    PROTO ((rtx, Mmode));\n+extern int    pattern_is_ok_for_epilogue    PROTO ((rtx, Mmode));\n+extern int    register_is_ok_for_epilogue   PROTO ((rtx, Mmode));\n+#ifdef TREE_CODE\n+extern rtx    function_arg                  PROTO ((CUMULATIVE_ARGS *, Mmode, tree, int));\n+extern rtx    v850_va_arg                   PROTO ((tree, tree));\n+#endif\n+#endif\n+#endif /* TREE_CODE */\n+\n+#ifdef TREE_CODE\n+extern int    v850_valid_machine_decl_attribute  PROTO ((tree, tree, tree));\n+extern void   v850_encode_data_area         PROTO ((tree));\n+extern void   v850_set_default_decl_attr    PROTO ((tree));\n+extern int    v850_interrupt_function_p     PROTO ((tree));\n+extern void   v850_output_aligned_bss       PROTO ((FILE *, tree, char *, int, int));\n+extern void   v850_output_common            PROTO ((FILE *, tree, char *, int, int));\n+extern void   v850_output_local             PROTO ((FILE *, tree, char *, int, int));\n+extern v850_data_area v850_get_data_area    PROTO ((tree));\n+#ifdef HAVE_MACHINE_MODES\n+extern int    function_arg_partial_nregs    PROTO ((CUMULATIVE_ARGS *, Mmode, tree, int));\n+#endif\n+#endif\n+\n+#undef  Mmode\n+"}]}