{"sha": "d0668a73936a55ac7dbb3d62d94a9da6c1cc46cf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDA2NjhhNzM5MzZhNTVhYzdkYmIzZDYyZDk0YTlkYTZjMWNjNDZjZg==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@cygnus.com", "date": "1999-09-02T17:20:19Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "1999-09-02T17:20:19Z"}, "message": "c-parse.in (compstmt_primary_start): New, broken out of first part of compstmt handling in primary.\n\n        * c-parse.in (compstmt_primary_start): New, broken out of first\n        part of compstmt handling in primary.\n        (primary): Use it.  Add an error clause.\n        (compstmt_nostart): Renamed from compstmt; remove all\n        initial invocations of compstmt_start.\n        (compstmt): New.\n\nFrom-SVN: r29059", "tree": {"sha": "332aa137165e706894a9d57a9a0948baf6b87b4c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/332aa137165e706894a9d57a9a0948baf6b87b4c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d0668a73936a55ac7dbb3d62d94a9da6c1cc46cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0668a73936a55ac7dbb3d62d94a9da6c1cc46cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d0668a73936a55ac7dbb3d62d94a9da6c1cc46cf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0668a73936a55ac7dbb3d62d94a9da6c1cc46cf/comments", "author": null, "committer": null, "parents": [{"sha": "a8c61259522b6380059d092abfb7ca9c61fc36bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8c61259522b6380059d092abfb7ca9c61fc36bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a8c61259522b6380059d092abfb7ca9c61fc36bf"}], "stats": {"total": 7369, "additions": 3792, "deletions": 3577}, "files": [{"sha": "6a4fbea092cf19ea2944f58ccac60754b5abaf74", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0668a73936a55ac7dbb3d62d94a9da6c1cc46cf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0668a73936a55ac7dbb3d62d94a9da6c1cc46cf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d0668a73936a55ac7dbb3d62d94a9da6c1cc46cf", "patch": "@@ -1,3 +1,12 @@\n+Thu Sep  2 10:19:20 1999  Richard Henderson  <rth@cygnus.com>\n+\n+\t* c-parse.in (compstmt_primary_start): New, broken out of first\n+\tpart of compstmt handling in primary.\n+\t(primary): Use it.  Add an error clause.\n+\t(compstmt_nostart): Renamed from compstmt; remove all\n+\tinitial invocations of compstmt_start.\n+\t(compstmt): New.\n+\n Thu Sep  2 01:35:50 1999  Marc Espie <espie@cvs.openbsd.org>\n \n \t* protoize.c (gen_aux_info_file):  Let pexecute call choose_temp_base if"}, {"sha": "9f2e7aff2cbd903b1be27af7924ac54a874934f7", "filename": "gcc/c-parse.c", "status": "modified", "additions": 1530, "deletions": 1431, "changes": 2961, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0668a73936a55ac7dbb3d62d94a9da6c1cc46cf/gcc%2Fc-parse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0668a73936a55ac7dbb3d62d94a9da6c1cc46cf/gcc%2Fc-parse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-parse.c?ref=d0668a73936a55ac7dbb3d62d94a9da6c1cc46cf"}, {"sha": "cbffaaac88bf24269ecaad23256559d3eea872f4", "filename": "gcc/c-parse.h", "status": "modified", "additions": 61, "deletions": 61, "changes": 122, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0668a73936a55ac7dbb3d62d94a9da6c1cc46cf/gcc%2Fc-parse.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0668a73936a55ac7dbb3d62d94a9da6c1cc46cf/gcc%2Fc-parse.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-parse.h?ref=d0668a73936a55ac7dbb3d62d94a9da6c1cc46cf", "patch": "@@ -1,66 +1,66 @@\n typedef union {long itype; tree ttype; enum tree_code code;\n \tchar *filename; int lineno; int ends_in_label; } YYSTYPE;\n-#define\tIDENTIFIER\t258\n-#define\tTYPENAME\t259\n-#define\tSCSPEC\t260\n-#define\tTYPESPEC\t261\n-#define\tTYPE_QUAL\t262\n-#define\tCONSTANT\t263\n-#define\tSTRING\t264\n-#define\tELLIPSIS\t265\n-#define\tSIZEOF\t266\n-#define\tENUM\t267\n-#define\tSTRUCT\t268\n-#define\tUNION\t269\n-#define\tIF\t270\n-#define\tELSE\t271\n-#define\tWHILE\t272\n-#define\tDO\t273\n-#define\tFOR\t274\n-#define\tSWITCH\t275\n-#define\tCASE\t276\n-#define\tDEFAULT\t277\n-#define\tBREAK\t278\n-#define\tCONTINUE\t279\n-#define\tRETURN\t280\n-#define\tGOTO\t281\n-#define\tASM_KEYWORD\t282\n-#define\tTYPEOF\t283\n-#define\tALIGNOF\t284\n-#define\tATTRIBUTE\t285\n-#define\tEXTENSION\t286\n-#define\tLABEL\t287\n-#define\tREALPART\t288\n-#define\tIMAGPART\t289\n-#define\tVA_ARG\t290\n-#define\tEND_OF_LINE\t291\n-#define\tASSIGN\t292\n-#define\tOROR\t293\n-#define\tANDAND\t294\n-#define\tEQCOMPARE\t295\n-#define\tARITHCOMPARE\t296\n-#define\tLSHIFT\t297\n-#define\tRSHIFT\t298\n-#define\tUNARY\t299\n-#define\tPLUSPLUS\t300\n-#define\tMINUSMINUS\t301\n-#define\tHYPERUNARY\t302\n-#define\tPOINTSAT\t303\n-#define\tINTERFACE\t304\n-#define\tIMPLEMENTATION\t305\n-#define\tEND\t306\n-#define\tSELECTOR\t307\n-#define\tDEFS\t308\n-#define\tENCODE\t309\n-#define\tCLASSNAME\t310\n-#define\tPUBLIC\t311\n-#define\tPRIVATE\t312\n-#define\tPROTECTED\t313\n-#define\tPROTOCOL\t314\n-#define\tOBJECTNAME\t315\n-#define\tCLASS\t316\n-#define\tALIAS\t317\n-#define\tOBJC_STRING\t318\n+#define\tIDENTIFIER\t257\n+#define\tTYPENAME\t258\n+#define\tSCSPEC\t259\n+#define\tTYPESPEC\t260\n+#define\tTYPE_QUAL\t261\n+#define\tCONSTANT\t262\n+#define\tSTRING\t263\n+#define\tELLIPSIS\t264\n+#define\tSIZEOF\t265\n+#define\tENUM\t266\n+#define\tSTRUCT\t267\n+#define\tUNION\t268\n+#define\tIF\t269\n+#define\tELSE\t270\n+#define\tWHILE\t271\n+#define\tDO\t272\n+#define\tFOR\t273\n+#define\tSWITCH\t274\n+#define\tCASE\t275\n+#define\tDEFAULT\t276\n+#define\tBREAK\t277\n+#define\tCONTINUE\t278\n+#define\tRETURN\t279\n+#define\tGOTO\t280\n+#define\tASM_KEYWORD\t281\n+#define\tTYPEOF\t282\n+#define\tALIGNOF\t283\n+#define\tATTRIBUTE\t284\n+#define\tEXTENSION\t285\n+#define\tLABEL\t286\n+#define\tREALPART\t287\n+#define\tIMAGPART\t288\n+#define\tVA_ARG\t289\n+#define\tEND_OF_LINE\t290\n+#define\tASSIGN\t291\n+#define\tOROR\t292\n+#define\tANDAND\t293\n+#define\tEQCOMPARE\t294\n+#define\tARITHCOMPARE\t295\n+#define\tLSHIFT\t296\n+#define\tRSHIFT\t297\n+#define\tUNARY\t298\n+#define\tPLUSPLUS\t299\n+#define\tMINUSMINUS\t300\n+#define\tHYPERUNARY\t301\n+#define\tPOINTSAT\t302\n+#define\tINTERFACE\t303\n+#define\tIMPLEMENTATION\t304\n+#define\tEND\t305\n+#define\tSELECTOR\t306\n+#define\tDEFS\t307\n+#define\tENCODE\t308\n+#define\tCLASSNAME\t309\n+#define\tPUBLIC\t310\n+#define\tPRIVATE\t311\n+#define\tPROTECTED\t312\n+#define\tPROTOCOL\t313\n+#define\tOBJECTNAME\t314\n+#define\tCLASS\t315\n+#define\tALIAS\t316\n+#define\tOBJC_STRING\t317\n \n \n extern YYSTYPE yylval;"}, {"sha": "a329a1610acf4d6de94e7d2b3776b78d457c0172", "filename": "gcc/c-parse.in", "status": "modified", "additions": 44, "deletions": 50, "changes": 94, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0668a73936a55ac7dbb3d62d94a9da6c1cc46cf/gcc%2Fc-parse.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0668a73936a55ac7dbb3d62d94a9da6c1cc46cf/gcc%2Fc-parse.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-parse.in?ref=d0668a73936a55ac7dbb3d62d94a9da6c1cc46cf", "patch": "@@ -28,33 +28,10 @@ Boston, MA 02111-1307, USA.  */\n    written by AT&T, but I have never seen it.  */\n \n ifobjc\n-%expect 66\n+%expect 73\n end ifobjc\n ifc\n-%expect 51\n-\n-/* These are the 23 conflicts you should get in parse.output;\n-   the state numbers may vary if minor changes in the grammar are made.\n-\n-State 42 contains 1 shift/reduce conflict.  (Two ways to parse ATTRIBUTE.)\n-State 44 contains 1 shift/reduce conflict.  (Two ways to recover from error.)\n-State 103 contains 1 shift/reduce conflict.  (Two ways to recover from error.)\n-State 110 contains 1 shift/reduce conflict.  (Two ways to parse ATTRIBUTE.)\n-State 111 contains 1 shift/reduce conflict.  (Two ways to recover from error.)\n-State 115 contains 1 shift/reduce conflict.  (Two ways to recover from error.)\n-State 132 contains 1 shift/reduce conflict.  (See comment at component_decl.)\n-State 180 contains 1 shift/reduce conflict.  (Two ways to parse ATTRIBUTE.)\n-State 194 contains 2 shift/reduce conflict.  (Four ways to parse this.)\n-State 202 contains 1 shift/reduce conflict.  (Two ways to recover from error.)\n-State 214 contains 1 shift/reduce conflict.  (Two ways to recover from error.)\n-State 220 contains 1 shift/reduce conflict.  (Two ways to recover from error.)\n-State 304 contains 2 shift/reduce conflicts.  (Four ways to parse this.)\n-State 335 contains 2 shift/reduce conflicts.  (Four ways to parse this.)\n-State 347 contains 1 shift/reduce conflict.  (Two ways to parse ATTRIBUTES.)\n-State 352 contains 1 shift/reduce conflict.  (Two ways to parse ATTRIBUTES.)\n-State 383 contains 2 shift/reduce conflicts.  (Four ways to parse this.)\n-State 434 contains 2 shift/reduce conflicts.  (Four ways to parse this.)  */\n-\n+%expect 52\n end ifc\n \n %{\n@@ -191,7 +168,7 @@ end ifc\n %type <ttype> maybe_attribute attributes attribute attribute_list attrib\n %type <ttype> any_word\n \n-%type <ttype> compstmt\n+%type <ttype> compstmt compstmt_nostart compstmt_primary_start\n \n %type <ttype> declarator\n %type <ttype> notype_declarator after_type_declarator\n@@ -806,42 +783,37 @@ end ifobjc\n \t\t  $$ = $2; }\n \t| '(' error ')'\n \t\t{ $$ = error_mark_node; }\n-\t| '('\n-\t\t{ if (current_function_decl == 0)\n-\t\t    {\n-\t\t      error (\"braced-group within expression allowed only inside a function\");\n-\t\t      YYERROR;\n-\t\t    }\n-\t\t  /* We must force a BLOCK for this level\n-\t\t     so that, if it is not expanded later,\n-\t\t     there is a way to turn off the entire subtree of blocks\n-\t\t     that are contained in it.  */\n-\t\t  keep_next_level ();\n-\t\t  push_iterator_stack ();\n-\t\t  push_label_level ();\n-\t\t  $<ttype>$ = expand_start_stmt_expr (); }\n-\t  compstmt ')'\n+\t| compstmt_primary_start compstmt_nostart ')'\n \t\t{ tree rtl_exp;\n \t\t  if (pedantic)\n \t\t    pedwarn (\"ANSI C forbids braced-groups within expressions\");\n \t\t  pop_iterator_stack ();\n \t\t  pop_label_level ();\n-\t\t  rtl_exp = expand_end_stmt_expr ($<ttype>2);\n+\t\t  rtl_exp = expand_end_stmt_expr ($1);\n \t\t  /* The statements have side effects, so the group does.  */\n \t\t  TREE_SIDE_EFFECTS (rtl_exp) = 1;\n \n-\t\t  if (TREE_CODE ($3) == BLOCK)\n+\t\t  if (TREE_CODE ($2) == BLOCK)\n \t\t    {\n \t\t      /* Make a BIND_EXPR for the BLOCK already made.  */\n \t\t      $$ = build (BIND_EXPR, TREE_TYPE (rtl_exp),\n-\t\t\t\t  NULL_TREE, rtl_exp, $3);\n+\t\t\t\t  NULL_TREE, rtl_exp, $2);\n \t\t      /* Remove the block from the tree at this point.\n \t\t\t It gets put back at the proper place\n \t\t\t when the BIND_EXPR is expanded.  */\n-\t\t      delete_block ($3);\n+\t\t      delete_block ($2);\n \t\t    }\n \t\t  else\n-\t\t    $$ = $3;\n+\t\t    $$ = $2;\n+\t\t}\n+\t| compstmt_primary_start error ')'\n+\t\t{\n+\t\t  /* Make sure we call expand_end_stmt_expr.  Otherwise\n+\t\t     we are likely to lose sequences and crash later.  */\n+\t\t  pop_iterator_stack ();\n+\t\t  pop_label_level ();\n+\t\t  expand_end_stmt_expr ($1);\n+\t\t  $$ = error_mark_node;\n \t\t}\n \t| primary '(' exprlist ')'   %prec '.'\n \t\t{ $$ = build_function_call ($1, $3); }\n@@ -1795,25 +1767,25 @@ compstmt_or_error:\n \n compstmt_start: '{' { compstmt_count++; }\n \n-compstmt: compstmt_start '}'\n+compstmt_nostart: '}'\n \t\t{ $$ = convert (void_type_node, integer_zero_node); }\n-\t| compstmt_start pushlevel maybe_label_decls decls xstmts '}'\n+\t| pushlevel maybe_label_decls decls xstmts '}'\n \t\t{ emit_line_note (input_filename, lineno);\n \t\t  expand_end_bindings (getdecls (), 1, 0);\n \t\t  $$ = poplevel (1, 1, 0);\n \t\t  if (yychar == CONSTANT || yychar == STRING)\n \t\t    pop_momentary_nofree ();\n \t\t  else\n \t\t    pop_momentary (); }\n-\t| compstmt_start pushlevel maybe_label_decls error '}'\n+\t| pushlevel maybe_label_decls error '}'\n \t\t{ emit_line_note (input_filename, lineno);\n \t\t  expand_end_bindings (getdecls (), kept_level_p (), 0);\n \t\t  $$ = poplevel (kept_level_p (), 0, 0);\n \t\t  if (yychar == CONSTANT || yychar == STRING)\n \t\t    pop_momentary_nofree ();\n \t\t  else\n \t\t    pop_momentary (); }\n-\t| compstmt_start pushlevel maybe_label_decls stmts '}'\n+\t| pushlevel maybe_label_decls stmts '}'\n \t\t{ emit_line_note (input_filename, lineno);\n \t\t  expand_end_bindings (getdecls (), kept_level_p (), 0);\n \t\t  $$ = poplevel (kept_level_p (), 0, 0);\n@@ -1823,6 +1795,28 @@ compstmt: compstmt_start '}'\n \t\t    pop_momentary (); }\n \t;\n \n+compstmt_primary_start:\n+\t'(' '{'\n+\t\t{ if (current_function_decl == 0)\n+\t\t    {\n+\t\t      error (\"braced-group within expression allowed only inside a function\");\n+\t\t      YYERROR;\n+\t\t    }\n+\t\t  /* We must force a BLOCK for this level\n+\t\t     so that, if it is not expanded later,\n+\t\t     there is a way to turn off the entire subtree of blocks\n+\t\t     that are contained in it.  */\n+\t\t  keep_next_level ();\n+\t\t  push_iterator_stack ();\n+\t\t  push_label_level ();\n+\t\t  $$ = expand_start_stmt_expr ();\n+\t\t  compstmt_count++;\n+\t\t}\n+\n+compstmt: compstmt_start compstmt_nostart\n+\t\t{ $$ = $2; }\n+\t;\n+\n /* Value is number of statements counted as of the closeparen.  */\n simple_if:\n \t  if_prefix lineno_labeled_stmt"}, {"sha": "9833b0fde298b6d92bac27a41f41c0707b9e5061", "filename": "gcc/c-parse.y", "status": "modified", "additions": 43, "deletions": 49, "changes": 92, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0668a73936a55ac7dbb3d62d94a9da6c1cc46cf/gcc%2Fc-parse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0668a73936a55ac7dbb3d62d94a9da6c1cc46cf/gcc%2Fc-parse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-parse.y?ref=d0668a73936a55ac7dbb3d62d94a9da6c1cc46cf", "patch": "@@ -28,30 +28,7 @@ Boston, MA 02111-1307, USA.  */\n /* To whomever it may concern: I have heard that such a thing was once\n    written by AT&T, but I have never seen it.  */\n \n-%expect 51\n-\n-/* These are the 23 conflicts you should get in parse.output;\n-   the state numbers may vary if minor changes in the grammar are made.\n-\n-State 42 contains 1 shift/reduce conflict.  (Two ways to parse ATTRIBUTE.)\n-State 44 contains 1 shift/reduce conflict.  (Two ways to recover from error.)\n-State 103 contains 1 shift/reduce conflict.  (Two ways to recover from error.)\n-State 110 contains 1 shift/reduce conflict.  (Two ways to parse ATTRIBUTE.)\n-State 111 contains 1 shift/reduce conflict.  (Two ways to recover from error.)\n-State 115 contains 1 shift/reduce conflict.  (Two ways to recover from error.)\n-State 132 contains 1 shift/reduce conflict.  (See comment at component_decl.)\n-State 180 contains 1 shift/reduce conflict.  (Two ways to parse ATTRIBUTE.)\n-State 194 contains 2 shift/reduce conflict.  (Four ways to parse this.)\n-State 202 contains 1 shift/reduce conflict.  (Two ways to recover from error.)\n-State 214 contains 1 shift/reduce conflict.  (Two ways to recover from error.)\n-State 220 contains 1 shift/reduce conflict.  (Two ways to recover from error.)\n-State 304 contains 2 shift/reduce conflicts.  (Four ways to parse this.)\n-State 335 contains 2 shift/reduce conflicts.  (Four ways to parse this.)\n-State 347 contains 1 shift/reduce conflict.  (Two ways to parse ATTRIBUTES.)\n-State 352 contains 1 shift/reduce conflict.  (Two ways to parse ATTRIBUTES.)\n-State 383 contains 2 shift/reduce conflicts.  (Four ways to parse this.)\n-State 434 contains 2 shift/reduce conflicts.  (Four ways to parse this.)  */\n-\n+%expect 52\n \n %{\n #include \"config.h\"\n@@ -179,7 +156,7 @@ const char * const language_string = \"GNU C\";\n %type <ttype> maybe_attribute attributes attribute attribute_list attrib\n %type <ttype> any_word\n \n-%type <ttype> compstmt\n+%type <ttype> compstmt compstmt_nostart compstmt_primary_start\n \n %type <ttype> declarator\n %type <ttype> notype_declarator after_type_declarator\n@@ -692,42 +669,37 @@ primary:\n \t\t  $$ = $2; }\n \t| '(' error ')'\n \t\t{ $$ = error_mark_node; }\n-\t| '('\n-\t\t{ if (current_function_decl == 0)\n-\t\t    {\n-\t\t      error (\"braced-group within expression allowed only inside a function\");\n-\t\t      YYERROR;\n-\t\t    }\n-\t\t  /* We must force a BLOCK for this level\n-\t\t     so that, if it is not expanded later,\n-\t\t     there is a way to turn off the entire subtree of blocks\n-\t\t     that are contained in it.  */\n-\t\t  keep_next_level ();\n-\t\t  push_iterator_stack ();\n-\t\t  push_label_level ();\n-\t\t  $<ttype>$ = expand_start_stmt_expr (); }\n-\t  compstmt ')'\n+\t| compstmt_primary_start compstmt_nostart ')'\n \t\t{ tree rtl_exp;\n \t\t  if (pedantic)\n \t\t    pedwarn (\"ANSI C forbids braced-groups within expressions\");\n \t\t  pop_iterator_stack ();\n \t\t  pop_label_level ();\n-\t\t  rtl_exp = expand_end_stmt_expr ($<ttype>2);\n+\t\t  rtl_exp = expand_end_stmt_expr ($1);\n \t\t  /* The statements have side effects, so the group does.  */\n \t\t  TREE_SIDE_EFFECTS (rtl_exp) = 1;\n \n-\t\t  if (TREE_CODE ($3) == BLOCK)\n+\t\t  if (TREE_CODE ($2) == BLOCK)\n \t\t    {\n \t\t      /* Make a BIND_EXPR for the BLOCK already made.  */\n \t\t      $$ = build (BIND_EXPR, TREE_TYPE (rtl_exp),\n-\t\t\t\t  NULL_TREE, rtl_exp, $3);\n+\t\t\t\t  NULL_TREE, rtl_exp, $2);\n \t\t      /* Remove the block from the tree at this point.\n \t\t\t It gets put back at the proper place\n \t\t\t when the BIND_EXPR is expanded.  */\n-\t\t      delete_block ($3);\n+\t\t      delete_block ($2);\n \t\t    }\n \t\t  else\n-\t\t    $$ = $3;\n+\t\t    $$ = $2;\n+\t\t}\n+\t| compstmt_primary_start error ')'\n+\t\t{\n+\t\t  /* Make sure we call expand_end_stmt_expr.  Otherwise\n+\t\t     we are likely to lose sequences and crash later.  */\n+\t\t  pop_iterator_stack ();\n+\t\t  pop_label_level ();\n+\t\t  expand_end_stmt_expr ($1);\n+\t\t  $$ = error_mark_node;\n \t\t}\n \t| primary '(' exprlist ')'   %prec '.'\n \t\t{ $$ = build_function_call ($1, $3); }\n@@ -1600,25 +1572,25 @@ compstmt_or_error:\n \n compstmt_start: '{' { compstmt_count++; }\n \n-compstmt: compstmt_start '}'\n+compstmt_nostart: '}'\n \t\t{ $$ = convert (void_type_node, integer_zero_node); }\n-\t| compstmt_start pushlevel maybe_label_decls decls xstmts '}'\n+\t| pushlevel maybe_label_decls decls xstmts '}'\n \t\t{ emit_line_note (input_filename, lineno);\n \t\t  expand_end_bindings (getdecls (), 1, 0);\n \t\t  $$ = poplevel (1, 1, 0);\n \t\t  if (yychar == CONSTANT || yychar == STRING)\n \t\t    pop_momentary_nofree ();\n \t\t  else\n \t\t    pop_momentary (); }\n-\t| compstmt_start pushlevel maybe_label_decls error '}'\n+\t| pushlevel maybe_label_decls error '}'\n \t\t{ emit_line_note (input_filename, lineno);\n \t\t  expand_end_bindings (getdecls (), kept_level_p (), 0);\n \t\t  $$ = poplevel (kept_level_p (), 0, 0);\n \t\t  if (yychar == CONSTANT || yychar == STRING)\n \t\t    pop_momentary_nofree ();\n \t\t  else\n \t\t    pop_momentary (); }\n-\t| compstmt_start pushlevel maybe_label_decls stmts '}'\n+\t| pushlevel maybe_label_decls stmts '}'\n \t\t{ emit_line_note (input_filename, lineno);\n \t\t  expand_end_bindings (getdecls (), kept_level_p (), 0);\n \t\t  $$ = poplevel (kept_level_p (), 0, 0);\n@@ -1628,6 +1600,28 @@ compstmt: compstmt_start '}'\n \t\t    pop_momentary (); }\n \t;\n \n+compstmt_primary_start:\n+\t'(' '{'\n+\t\t{ if (current_function_decl == 0)\n+\t\t    {\n+\t\t      error (\"braced-group within expression allowed only inside a function\");\n+\t\t      YYERROR;\n+\t\t    }\n+\t\t  /* We must force a BLOCK for this level\n+\t\t     so that, if it is not expanded later,\n+\t\t     there is a way to turn off the entire subtree of blocks\n+\t\t     that are contained in it.  */\n+\t\t  keep_next_level ();\n+\t\t  push_iterator_stack ();\n+\t\t  push_label_level ();\n+\t\t  $$ = expand_start_stmt_expr ();\n+\t\t  compstmt_count++;\n+\t\t}\n+\n+compstmt: compstmt_start compstmt_nostart\n+\t\t{ $$ = $2; }\n+\t;\n+\n /* Value is number of statements counted as of the closeparen.  */\n simple_if:\n \t  if_prefix lineno_labeled_stmt"}, {"sha": "bec8a379c2f895071bc952d9508333ad3981974d", "filename": "gcc/objc/objc-parse.c", "status": "modified", "additions": 2062, "deletions": 1960, "changes": 4022, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0668a73936a55ac7dbb3d62d94a9da6c1cc46cf/gcc%2Fobjc%2Fobjc-parse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0668a73936a55ac7dbb3d62d94a9da6c1cc46cf/gcc%2Fobjc%2Fobjc-parse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-parse.c?ref=d0668a73936a55ac7dbb3d62d94a9da6c1cc46cf"}, {"sha": "e902024cec4ec9b44fd685a096ec5a8e023b7d8c", "filename": "gcc/objc/objc-parse.y", "status": "modified", "additions": 43, "deletions": 26, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0668a73936a55ac7dbb3d62d94a9da6c1cc46cf/gcc%2Fobjc%2Fobjc-parse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0668a73936a55ac7dbb3d62d94a9da6c1cc46cf/gcc%2Fobjc%2Fobjc-parse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-parse.y?ref=d0668a73936a55ac7dbb3d62d94a9da6c1cc46cf", "patch": "@@ -28,7 +28,7 @@ Boston, MA 02111-1307, USA.  */\n /* To whomever it may concern: I have heard that such a thing was once\n    written by AT&T, but I have never seen it.  */\n \n-%expect 66\n+%expect 73\n \n %{\n #include \"config.h\"\n@@ -157,7 +157,7 @@ const char * const language_string = \"GNU Obj-C\";\n %type <ttype> maybe_attribute attributes attribute attribute_list attrib\n %type <ttype> any_word\n \n-%type <ttype> compstmt\n+%type <ttype> compstmt compstmt_nostart compstmt_primary_start\n \n %type <ttype> declarator\n %type <ttype> notype_declarator after_type_declarator\n@@ -756,42 +756,37 @@ primary:\n \t\t  $$ = $2; }\n \t| '(' error ')'\n \t\t{ $$ = error_mark_node; }\n-\t| '('\n-\t\t{ if (current_function_decl == 0)\n-\t\t    {\n-\t\t      error (\"braced-group within expression allowed only inside a function\");\n-\t\t      YYERROR;\n-\t\t    }\n-\t\t  /* We must force a BLOCK for this level\n-\t\t     so that, if it is not expanded later,\n-\t\t     there is a way to turn off the entire subtree of blocks\n-\t\t     that are contained in it.  */\n-\t\t  keep_next_level ();\n-\t\t  push_iterator_stack ();\n-\t\t  push_label_level ();\n-\t\t  $<ttype>$ = expand_start_stmt_expr (); }\n-\t  compstmt ')'\n+\t| compstmt_primary_start compstmt_nostart ')'\n \t\t{ tree rtl_exp;\n \t\t  if (pedantic)\n \t\t    pedwarn (\"ANSI C forbids braced-groups within expressions\");\n \t\t  pop_iterator_stack ();\n \t\t  pop_label_level ();\n-\t\t  rtl_exp = expand_end_stmt_expr ($<ttype>2);\n+\t\t  rtl_exp = expand_end_stmt_expr ($1);\n \t\t  /* The statements have side effects, so the group does.  */\n \t\t  TREE_SIDE_EFFECTS (rtl_exp) = 1;\n \n-\t\t  if (TREE_CODE ($3) == BLOCK)\n+\t\t  if (TREE_CODE ($2) == BLOCK)\n \t\t    {\n \t\t      /* Make a BIND_EXPR for the BLOCK already made.  */\n \t\t      $$ = build (BIND_EXPR, TREE_TYPE (rtl_exp),\n-\t\t\t\t  NULL_TREE, rtl_exp, $3);\n+\t\t\t\t  NULL_TREE, rtl_exp, $2);\n \t\t      /* Remove the block from the tree at this point.\n \t\t\t It gets put back at the proper place\n \t\t\t when the BIND_EXPR is expanded.  */\n-\t\t      delete_block ($3);\n+\t\t      delete_block ($2);\n \t\t    }\n \t\t  else\n-\t\t    $$ = $3;\n+\t\t    $$ = $2;\n+\t\t}\n+\t| compstmt_primary_start error ')'\n+\t\t{\n+\t\t  /* Make sure we call expand_end_stmt_expr.  Otherwise\n+\t\t     we are likely to lose sequences and crash later.  */\n+\t\t  pop_iterator_stack ();\n+\t\t  pop_label_level ();\n+\t\t  expand_end_stmt_expr ($1);\n+\t\t  $$ = error_mark_node;\n \t\t}\n \t| primary '(' exprlist ')'   %prec '.'\n \t\t{ $$ = build_function_call ($1, $3); }\n@@ -1709,25 +1704,25 @@ compstmt_or_error:\n \n compstmt_start: '{' { compstmt_count++; }\n \n-compstmt: compstmt_start '}'\n+compstmt_nostart: '}'\n \t\t{ $$ = convert (void_type_node, integer_zero_node); }\n-\t| compstmt_start pushlevel maybe_label_decls decls xstmts '}'\n+\t| pushlevel maybe_label_decls decls xstmts '}'\n \t\t{ emit_line_note (input_filename, lineno);\n \t\t  expand_end_bindings (getdecls (), 1, 0);\n \t\t  $$ = poplevel (1, 1, 0);\n \t\t  if (yychar == CONSTANT || yychar == STRING)\n \t\t    pop_momentary_nofree ();\n \t\t  else\n \t\t    pop_momentary (); }\n-\t| compstmt_start pushlevel maybe_label_decls error '}'\n+\t| pushlevel maybe_label_decls error '}'\n \t\t{ emit_line_note (input_filename, lineno);\n \t\t  expand_end_bindings (getdecls (), kept_level_p (), 0);\n \t\t  $$ = poplevel (kept_level_p (), 0, 0);\n \t\t  if (yychar == CONSTANT || yychar == STRING)\n \t\t    pop_momentary_nofree ();\n \t\t  else\n \t\t    pop_momentary (); }\n-\t| compstmt_start pushlevel maybe_label_decls stmts '}'\n+\t| pushlevel maybe_label_decls stmts '}'\n \t\t{ emit_line_note (input_filename, lineno);\n \t\t  expand_end_bindings (getdecls (), kept_level_p (), 0);\n \t\t  $$ = poplevel (kept_level_p (), 0, 0);\n@@ -1737,6 +1732,28 @@ compstmt: compstmt_start '}'\n \t\t    pop_momentary (); }\n \t;\n \n+compstmt_primary_start:\n+\t'(' '{'\n+\t\t{ if (current_function_decl == 0)\n+\t\t    {\n+\t\t      error (\"braced-group within expression allowed only inside a function\");\n+\t\t      YYERROR;\n+\t\t    }\n+\t\t  /* We must force a BLOCK for this level\n+\t\t     so that, if it is not expanded later,\n+\t\t     there is a way to turn off the entire subtree of blocks\n+\t\t     that are contained in it.  */\n+\t\t  keep_next_level ();\n+\t\t  push_iterator_stack ();\n+\t\t  push_label_level ();\n+\t\t  $$ = expand_start_stmt_expr ();\n+\t\t  compstmt_count++;\n+\t\t}\n+\n+compstmt: compstmt_start compstmt_nostart\n+\t\t{ $$ = $2; }\n+\t;\n+\n /* Value is number of statements counted as of the closeparen.  */\n simple_if:\n \t  if_prefix lineno_labeled_stmt"}]}