{"sha": "0fb8241d3758aeb61a9fabce99fb888dbbe7afd8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGZiODI0MWQzNzU4YWViNjFhOWZhYmNlOTlmYjg4OGRiYmU3YWZkOA==", "commit": {"author": {"name": "Gunther Nikl", "email": "gni@gecko.de", "date": "2003-08-20T22:10:42Z"}, "committer": {"name": "Bernardo Innocenti", "email": "bernie@gcc.gnu.org", "date": "2003-08-20T22:10:42Z"}, "message": "m68k.c (output_move_const_into_data_reg, [...]): unify MOTOROLA/MIT handling of moveq\n\n\t* config/m68k/m68k.c (output_move_const_into_data_reg,\n\toutput_move_himode): unify MOTOROLA/MIT handling of moveq\n\t* config/m68k/m68k.md (movsi_const0, anonymous define_insn):\n\tLikewise\n\nFrom-SVN: r70621", "tree": {"sha": "1de8c1ae0f7b8e8a2996ca83a1307f2975fc23e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1de8c1ae0f7b8e8a2996ca83a1307f2975fc23e9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0fb8241d3758aeb61a9fabce99fb888dbbe7afd8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0fb8241d3758aeb61a9fabce99fb888dbbe7afd8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0fb8241d3758aeb61a9fabce99fb888dbbe7afd8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0fb8241d3758aeb61a9fabce99fb888dbbe7afd8/comments", "author": null, "committer": null, "parents": [{"sha": "c23b0b90ee16a4f80c69fe4513929c3f84e587c9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c23b0b90ee16a4f80c69fe4513929c3f84e587c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c23b0b90ee16a4f80c69fe4513929c3f84e587c9"}], "stats": {"total": 43, "additions": 7, "deletions": 36}, "files": [{"sha": "0438374b5a3ccfc1cb4ab5349df68d8e596a937d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fb8241d3758aeb61a9fabce99fb888dbbe7afd8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fb8241d3758aeb61a9fabce99fb888dbbe7afd8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0fb8241d3758aeb61a9fabce99fb888dbbe7afd8", "patch": "@@ -1,3 +1,10 @@\n+2003-08-20  Gunther Nikl  <gni@gecko.de>\n+\n+\t* config/m68k/m68k.c (output_move_const_into_data_reg,\n+\toutput_move_himode): unify MOTOROLA/MIT handling of moveq\n+\t* config/m68k/m68k.md (movsi_const0, anonymous define_insn):\n+\tLikewise\n+\n 2003-08-20  Gunther Nikl  <gni@gecko.de>\n \n \t* config/m68k/m68k.c (m68k_output_function_prologue): use %U in"}, {"sha": "79f375274532e165ad7213e7d12cff6491cde7c4", "filename": "gcc/config/m68k/m68k.c", "status": "modified", "additions": 0, "deletions": 28, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fb8241d3758aeb61a9fabce99fb888dbbe7afd8/gcc%2Fconfig%2Fm68k%2Fm68k.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fb8241d3758aeb61a9fabce99fb888dbbe7afd8/gcc%2Fconfig%2Fm68k%2Fm68k.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.c?ref=0fb8241d3758aeb61a9fabce99fb888dbbe7afd8", "patch": "@@ -1604,41 +1604,21 @@ output_move_const_into_data_reg (operands)\n   switch (const_method (operands[1]))\n     {\n     case MOVQ :\n-#if defined (MOTOROLA)\n-      return \"moveq%.l %1,%0\";\n-#else\n       return \"moveq %1,%0\";\n-#endif\n     case NOTB :\n       operands[1] = GEN_INT (i ^ 0xff);\n-#if defined (MOTOROLA)\n-      return \"moveq%.l %1,%0\\n\\tnot%.b %0\";\n-#else\n       return \"moveq %1,%0\\n\\tnot%.b %0\";\n-#endif\t \n     case NOTW :\n       operands[1] = GEN_INT (i ^ 0xffff);\n-#if defined (MOTOROLA)\n-      return \"moveq%.l %1,%0\\n\\tnot%.w %0\";\n-#else\n       return \"moveq %1,%0\\n\\tnot%.w %0\";\n-#endif\t \n     case NEGW :\n-#if defined (MOTOROLA)\n-      return \"moveq%.l %#-128,%0\\n\\tneg%.w %0\";\n-#else\n       return \"moveq %#-128,%0\\n\\tneg%.w %0\";\n-#endif\t \n     case SWAP :\n       {\n \tunsigned u = i;\n \n \toperands[1] = GEN_INT ((u << 16) | (u >> 16));\n-#if defined (MOTOROLA)\n-\treturn \"moveq%.l %1,%0\\n\\tswap %0\";\n-#else\n \treturn \"moveq %1,%0\\n\\tswap %0\";\n-#endif\t \n       }\n     case MOVL :\n \treturn \"move%.l %1,%0\";\n@@ -1717,11 +1697,7 @@ output_move_himode (operands)\n \t       && INTVAL (operands[1]) < 128\n \t       && INTVAL (operands[1]) >= -128)\n \t{\n-#if defined(MOTOROLA)\n-\t  return \"moveq%.l %1,%0\";\n-#else\n \t  return \"moveq %1,%0\";\n-#endif\n \t}\n       else if (INTVAL (operands[1]) < 0x8000\n \t       && INTVAL (operands[1]) >= -0x8000)\n@@ -1821,11 +1797,7 @@ output_move_qimode (operands)\n       && INTVAL (operands[1]) < 128\n       && INTVAL (operands[1]) >= -128)\n     {\n-#if defined(MOTOROLA)\n-      return \"moveq%.l %1,%0\";\n-#else\n       return \"moveq %1,%0\";\n-#endif\n     }\n   if (operands[1] == const0_rtx && ADDRESS_REG_P (operands[0]))\n     return \"sub%.l %0,%0\";"}, {"sha": "bc22ec1d0b0fc8502615e8472b9f33014a6ec0c9", "filename": "gcc/config/m68k/m68k.md", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fb8241d3758aeb61a9fabce99fb888dbbe7afd8/gcc%2Fconfig%2Fm68k%2Fm68k.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fb8241d3758aeb61a9fabce99fb888dbbe7afd8/gcc%2Fconfig%2Fm68k%2Fm68k.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.md?ref=0fb8241d3758aeb61a9fabce99fb888dbbe7afd8", "patch": "@@ -718,11 +718,7 @@\n     }\n   /* moveq is faster on the 68000.  */\n   if (DATA_REG_P (operands[0]) && (!TARGET_68020 && !TARGET_5200))\n-#if defined(MOTOROLA)\n-    return \\\"moveq%.l %#0,%0\\\";\n-#else\n     return \\\"moveq %#0,%0\\\";\n-#endif\n   return \\\"clr%.l %0\\\";\n }\")\n \n@@ -932,11 +928,7 @@\n       /* moveq is faster on the 68000.  */\n       if (DATA_REG_P (operands[0]) && !(TARGET_68020 || TARGET_5200))\n \t{\n-#if defined(MOTOROLA)\n-\t  return \\\"moveq%.l %#0,%0\\\";\n-#else\n \t  return \\\"moveq %#0,%0\\\";\n-#endif\n \t}\n       return \\\"clr%.l %0\\\";\n     }"}]}