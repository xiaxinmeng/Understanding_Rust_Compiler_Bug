{"sha": "96a31ab889aca2a00133a92a5692e748fc7b6f0e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTZhMzFhYjg4OWFjYTJhMDAxMzNhOTJhNTY5MmU3NDhmYzdiNmYwZQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-08-25T15:47:10Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-08-25T15:47:10Z"}, "message": "(print_node): Print more flags for types and decls.\n\nFrom-SVN: r7980", "tree": {"sha": "e3bd77346ec349ccd209db93ec51a0f3b4bebb53", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e3bd77346ec349ccd209db93ec51a0f3b4bebb53"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/96a31ab889aca2a00133a92a5692e748fc7b6f0e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96a31ab889aca2a00133a92a5692e748fc7b6f0e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/96a31ab889aca2a00133a92a5692e748fc7b6f0e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96a31ab889aca2a00133a92a5692e748fc7b6f0e/comments", "author": null, "committer": null, "parents": [{"sha": "ea3373cd2d2da9752daf0679351945a3b49fd6ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea3373cd2d2da9752daf0679351945a3b49fd6ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea3373cd2d2da9752daf0679351945a3b49fd6ee"}], "stats": {"total": 48, "additions": 40, "deletions": 8}, "files": [{"sha": "3eb2d6a3356e6298a802d3b977413d1bae388a09", "filename": "gcc/print-tree.c", "status": "modified", "additions": 40, "deletions": 8, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96a31ab889aca2a00133a92a5692e748fc7b6f0e/gcc%2Fprint-tree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96a31ab889aca2a00133a92a5692e748fc7b6f0e/gcc%2Fprint-tree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprint-tree.c?ref=96a31ab889aca2a00133a92a5692e748fc7b6f0e", "patch": "@@ -352,22 +352,47 @@ print_node (file, prefix, node, indent)\n     case 'd':\n       mode = DECL_MODE (node);\n \n+      if (DECL_IGNORED_P (node))\n+\tfputs (\" ignored\", file);\n+      if (DECL_ABSTRACT (node))\n+\tfputs (\" abstract\", file);\n+      if (DECL_IN_SYSTEM_HEADER (node))\n+\tfputs (\" in_system_header\", file);\n+      if (DECL_COMMON (node))\n+\tfputs (\" common\", file);\n       if (DECL_EXTERNAL (node))\n \tfputs (\" external\", file);\n-      if (DECL_NONLOCAL (node))\n-\tfputs (\" nonlocal\", file);\n       if (DECL_REGISTER (node))\n \tfputs (\" regdecl\", file);\n+      if (DECL_PACKED (node))\n+\tfputs (\" packed\", file);\n+      if (DECL_NONLOCAL (node))\n+\tfputs (\" nonlocal\", file);\n       if (DECL_INLINE (node))\n \tfputs (\" inline\", file);\n-      if (DECL_BIT_FIELD (node))\n+\n+      if (TREE_CODE (node) == TYPE_DECL && TYPE_DECL_SUPPRESS_DEBUG (node))\n+\tfputs (\" supress-debug\", file);\n+\n+      if (TREE_CODE (node) == FUNCTION_DECL && DECL_BUILT_IN (node))\n+\tfputs (\" built-in\", file);\n+      if (TREE_CODE (node) == FUNCTION_DECL && DECL_BUILT_IN_NONANSI (node))\n+\tfputs (\" built-in-nonansi\", file);\n+\n+      if (TREE_CODE (node) == FIELD_DECL && DECL_BIT_FIELD (node))\n \tfputs (\" bit-field\", file);\n+      if (TREE_CODE (node) == LABEL_DECL && DECL_TOO_LATE (node))\n+\tfputs (\" too-late\", file);\n+      if (TREE_CODE (node) == VAR_DECL && DECL_IN_TEXT_SECTION (node))\n+\tfputs (\" in-text-section\", file);\n+\n       if (DECL_VIRTUAL_P (node))\n \tfputs (\" virtual\", file);\n-      if (DECL_IGNORED_P (node))\n-\tfputs (\" ignored\", file);\n-      if (DECL_IN_SYSTEM_HEADER (node))\n-\tfputs (\" in_system_header\", file);\n+      if (DECL_DEFER_OUTPUT (node))\n+\tfputs (\" defer-output\", file);\n+      if (DECL_TRANSPARENT_UNION (node))\n+\tfputs (\" transparent-union\", file);\n+\n       if (DECL_LANG_FLAG_0 (node))\n \tfputs (\" decl_0\", file);\n       if (DECL_LANG_FLAG_1 (node))\n@@ -441,7 +466,14 @@ print_node (file, prefix, node, indent)\n \n     case 't':\n       if (TYPE_NO_FORCE_BLK (node))\n-\tfputs (\" no_force_blk\", file);\n+\tfputs (\" no-force-blk\", file);\n+      if (TYPE_STRING_FLAG (node))\n+\tfputs (\" string-flag\", file);\n+      if (TYPE_NEEDS_CONSTRUCTING (node))\n+\tfputs (\" needs-constructing\", file);\n+      if (TYPE_TRANSPARENT_UNION (node))\n+\tfputs (\" transparent-union\", file);\n+\n       if (TYPE_LANG_FLAG_0 (node))\n \tfputs (\" type_0\", file);\n       if (TYPE_LANG_FLAG_1 (node))"}]}