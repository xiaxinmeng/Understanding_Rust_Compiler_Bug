{"sha": "2595f25cdaf4f16d04a1078a487b2ecc126cae29", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjU5NWYyNWNkYWY0ZjE2ZDA0YTEwNzhhNDg3YjJlY2MxMjZjYWUyOQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-01-30T08:35:03Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-01-30T08:35:03Z"}, "message": "fortran: Fix up ISO_Fortran_binding_15.f90 failures [PR92123]\n\nThis is something that has been discussed already a few months ago, but\nseems to have stalled.  Here is Paul's patch from the PR except for the\nTREE_STATIC hunk which is wrong, and does the most conservative fn spec\ntweak for the problematic two builtins we are aware of (to repeat what is in\nthe PR, both .wR and .ww are wrong for these builtins that transform one\nlayout of an descriptor to another one; while the first pointer is properly\nmarked that we only store to what it points to, from the second pointer\nwe copy and reshuffle the content and store into the first one; if there\nwouldn't be any pointers, \".wr\" would be just fine, but as there is a\npointer and that pointer is copied to the area pointed by first argument,\nthe pointer effectively leaks that way, so we e.g. can't optimize stores\ninto what the data pointer in the descriptor points to).  I haven't\nanalyzed other fn spec attributes in the FE, but think it is better to\nfix at least this one we have analyzed.\n\n2020-01-30  Paul Thomas \u00a0<pault@gcc.gnu.org>\n\t    Jakub Jelinek  <jakub@redhat.com>\n\n\tPR fortran/92123\n\t* trans-decl.c (gfc_get_symbol_decl): Call gfc_defer_symbol_init for\n\tCFI descs.\n\t(gfc_build_builtin_function_decls): Use \".w.\" instead of \".ww\" or \".wR\"\n\tfor gfor_fndecl_{cfi_to_gfc,gfc_to_cfi}.\n\t(convert_CFI_desc): Handle references to CFI descriptors.\n\nCo-authored-by: Paul Thomas <pault@gcc.gnu.org>", "tree": {"sha": "967c27f4422176cac467c5a4e2f6e54888148428", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/967c27f4422176cac467c5a4e2f6e54888148428"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2595f25cdaf4f16d04a1078a487b2ecc126cae29", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2595f25cdaf4f16d04a1078a487b2ecc126cae29", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2595f25cdaf4f16d04a1078a487b2ecc126cae29", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2595f25cdaf4f16d04a1078a487b2ecc126cae29/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e0332517f900c7947f03c15fd27e7f71ace98629", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0332517f900c7947f03c15fd27e7f71ace98629", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e0332517f900c7947f03c15fd27e7f71ace98629"}], "stats": {"total": 24, "additions": 22, "deletions": 2}, "files": [{"sha": "2b66fc7c88543ae1d5d51214bb0d0b94820a91b5", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2595f25cdaf4f16d04a1078a487b2ecc126cae29/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2595f25cdaf4f16d04a1078a487b2ecc126cae29/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=2595f25cdaf4f16d04a1078a487b2ecc126cae29", "patch": "@@ -1,3 +1,13 @@\n+2020-01-30  Paul Thomas \u00a0<pault@gcc.gnu.org>\n+\t    Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR fortran/92123\n+\t* trans-decl.c (gfc_get_symbol_decl): Call gfc_defer_symbol_init for\n+\tCFI descs.\n+\t(gfc_build_builtin_function_decls): Use \".w.\" instead of \".ww\" or \".wR\"\n+\tfor gfor_fndecl_{cfi_to_gfc,gfc_to_cfi}.\n+\t(convert_CFI_desc): Handle references to CFI descriptors.\n+\n 2020-01-29  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR fortran/93463"}, {"sha": "1147c246281b1d1ec5d25c040cba8a83d8236add", "filename": "gcc/fortran/trans-decl.c", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2595f25cdaf4f16d04a1078a487b2ecc126cae29/gcc%2Ffortran%2Ftrans-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2595f25cdaf4f16d04a1078a487b2ecc126cae29/gcc%2Ffortran%2Ftrans-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-decl.c?ref=2595f25cdaf4f16d04a1078a487b2ecc126cae29", "patch": "@@ -1552,6 +1552,9 @@ gfc_get_symbol_decl (gfc_symbol * sym)\n       sym->ts.u.cl->backend_decl = build_fold_indirect_ref (sym->ts.u.cl->backend_decl);\n     }\n \n+  if (is_CFI_desc (sym, NULL))\n+    gfc_defer_symbol_init (sym);\n+\n   fun_or_res = byref && (sym->attr.result\n \t\t\t || (sym->attr.function && sym->ts.deferred));\n   if ((sym->attr.dummy && ! sym->attr.function) || fun_or_res)\n@@ -3763,12 +3766,17 @@ gfc_build_builtin_function_decls (void)\n \tget_identifier (PREFIX(\"internal_unpack\")), \".wR\",\n \tvoid_type_node, 2, pvoid_type_node, pvoid_type_node);\n \n+  /* These two builtins write into what the first argument points to and\n+     read from what the second argument points to, but we can't use R\n+     for that, because the directly pointed structure contains a pointer\n+     which is copied into the descriptor pointed by the first argument,\n+     effectively escaping that way.  See PR92123.  */\n   gfor_fndecl_cfi_to_gfc = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"cfi_desc_to_gfc_desc\")), \".ww\",\n+\tget_identifier (PREFIX(\"cfi_desc_to_gfc_desc\")), \".w.\",\n \tvoid_type_node, 2, pvoid_type_node, ppvoid_type_node);\n \n   gfor_fndecl_gfc_to_cfi = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"gfc_desc_to_cfi_desc\")), \".wR\",\n+\tget_identifier (PREFIX(\"gfc_desc_to_cfi_desc\")), \".w.\",\n \tvoid_type_node, 2, ppvoid_type_node, pvoid_type_node);\n \n   gfor_fndecl_associated = gfc_build_library_function_decl_with_spec (\n@@ -4398,6 +4406,8 @@ convert_CFI_desc (gfc_wrapped_block * block, gfc_symbol *sym)\n      while CFI_desc is the descriptor itself.  */\n   if (DECL_LANG_SPECIFIC (sym->backend_decl))\n     CFI_desc = GFC_DECL_SAVED_DESCRIPTOR (sym->backend_decl);\n+  else if (GFC_DESCRIPTOR_TYPE_P (TREE_TYPE (TREE_TYPE (sym->backend_decl))))\n+    CFI_desc = sym->backend_decl;\n   else\n     CFI_desc = NULL;\n "}]}