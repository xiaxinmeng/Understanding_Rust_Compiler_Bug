{"sha": "9e7628863bc93aee7b54682e80401c2fc66a9b69", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWU3NjI4ODYzYmM5M2FlZTdiNTQ2ODJlODA0MDFjMmZjNjZhOWI2OQ==", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2011-02-05T17:58:48Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2011-02-05T17:58:48Z"}, "message": "re PR libfortran/47567 (Wrong output for small absolute values with F editing)\n\n2011-02-05  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n\n\tPR libgfortran/47567\n\t* io/write_float.def (output_float): Eliminate some redundant code.\n\tAdjust width for case of F0.X for values of zero and all other values.\n\tExpand cases where '*' is set to give cleaner results.\n\nFrom-SVN: r169853", "tree": {"sha": "0839008fa5b6efa422fa3e12b93f45f742706a9c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0839008fa5b6efa422fa3e12b93f45f742706a9c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9e7628863bc93aee7b54682e80401c2fc66a9b69", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e7628863bc93aee7b54682e80401c2fc66a9b69", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e7628863bc93aee7b54682e80401c2fc66a9b69", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e7628863bc93aee7b54682e80401c2fc66a9b69/comments", "author": null, "committer": null, "parents": [{"sha": "02b177518d015afbd117dfdc04b5c7948d8904e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02b177518d015afbd117dfdc04b5c7948d8904e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/02b177518d015afbd117dfdc04b5c7948d8904e3"}], "stats": {"total": 21, "additions": 14, "deletions": 7}, "files": [{"sha": "82f933874d55896b49d5f4476c80a8a33dfddee2", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e7628863bc93aee7b54682e80401c2fc66a9b69/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e7628863bc93aee7b54682e80401c2fc66a9b69/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=9e7628863bc93aee7b54682e80401c2fc66a9b69", "patch": "@@ -1,3 +1,10 @@\n+2011-02-05  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libgfortran/47567\n+\t* io/write_float.def (output_float): Eliminate some redundant code.\n+\tAdjust width for case of F0.X for values of zero and all other values.\n+\tExpand cases where '*' is set to give cleaner results.\n+\n 2011-02-05  Janne Blomqvist  <jb@gcc.gnu.org>\n \n \tPR libfortran/47571"}, {"sha": "21bbfbbf04e3d9fc59bc8b6d4ae34544c0a7be38", "filename": "libgfortran/io/write_float.def", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e7628863bc93aee7b54682e80401c2fc66a9b69/libgfortran%2Fio%2Fwrite_float.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e7628863bc93aee7b54682e80401c2fc66a9b69/libgfortran%2Fio%2Fwrite_float.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Fwrite_float.def?ref=9e7628863bc93aee7b54682e80401c2fc66a9b69", "patch": "@@ -111,14 +111,12 @@ output_float (st_parameter_dt *dtp, const fnode *f, char *buffer, size_t size,\n   if (zero_flag)\n     {\n       e = 0;\n-      if (compile_options.sign_zero == 1)\n-\tsign = calculate_sign (dtp, sign_bit);\n-      else\n+      if (compile_options.sign_zero != 1)\n \tsign = calculate_sign (dtp, 0);\n \n       /* Handle special cases.  */\n       if (w == 0)\n-\tw = d + 2;\n+\tw = d + 1;\n \n       /* For this one we choose to not output a decimal point.\n \t F95 10.5.1.2.1  */\n@@ -138,7 +136,6 @@ output_float (st_parameter_dt *dtp, const fnode *f, char *buffer, size_t size,\n \t  *out = '0';\n \t  return SUCCESS;\n \t}\n-\t      \n     }\n \n   /* Normalize the fractional component.  */\n@@ -417,7 +414,10 @@ output_float (st_parameter_dt *dtp, const fnode *f, char *buffer, size_t size,\n \n   /* Pick a field size if none was specified.  */\n   if (w <= 0)\n-    w = nbefore + nzero + nafter + (sign != S_NONE ? 2 : 1);\n+    {\n+      w = nbefore + nzero + nafter + (sign != S_NONE ? 2 : 1);\n+      w = w == 1 ? 2 : w;\n+    }\n   \n   /* Work out how much padding is needed.  */\n   nblanks = w - (nbefore + nzero + nafter + edigits + 1);\n@@ -436,7 +436,7 @@ output_float (st_parameter_dt *dtp, const fnode *f, char *buffer, size_t size,\n     return FAILURE;\n \n   /* Check the value fits in the specified field width.  */\n-  if (nblanks < 0 || edigits == -1)\n+  if (nblanks < 0 || edigits == -1 || w == 1 || (w == 2 && sign != S_NONE))\n     {\n       if (unlikely (is_char4_unit (dtp)))\n \t{"}]}