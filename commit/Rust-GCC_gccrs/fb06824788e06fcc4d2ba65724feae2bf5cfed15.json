{"sha": "fb06824788e06fcc4d2ba65724feae2bf5cfed15", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmIwNjgyNDc4OGUwNmZjYzRkMmJhNjU3MjRmZWFlMmJmNWNmZWQxNQ==", "commit": {"author": {"name": "Andreas Krebbel", "email": "krebbel1@de.ibm.com", "date": "2008-10-15T15:20:25Z"}, "committer": {"name": "Andreas Krebbel", "email": "krebbel@gcc.gnu.org", "date": "2008-10-15T15:20:25Z"}, "message": "s390.h: (TARGET_DFP): This requires TARGET_HARD_FLOAT.\n\n2008-10-15  Andreas Krebbel  <krebbel1@de.ibm.com>\n\n\t* config/s390/s390.h: (TARGET_DFP): This requires TARGET_HARD_FLOAT.\n\t* config/s390/s390.md: Replace \"TARGET_HARD_FLOAT &&\n\tTARGET_(HARD_)DFP\" with only TARGET_(HARD_)DFP since this\n\talready implies hard float.  Also fix several insn condition\n\twith TARGET_DFP which shall require TARGET_HARD_DFP instead.\n\nFrom-SVN: r141138", "tree": {"sha": "9594461ff87d62f9e4407c903b068e968e95a864", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9594461ff87d62f9e4407c903b068e968e95a864"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fb06824788e06fcc4d2ba65724feae2bf5cfed15", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb06824788e06fcc4d2ba65724feae2bf5cfed15", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb06824788e06fcc4d2ba65724feae2bf5cfed15", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb06824788e06fcc4d2ba65724feae2bf5cfed15/comments", "author": null, "committer": null, "parents": [{"sha": "61b74e12e5c10380d3f0b60f031bd4ea20f40ab9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61b74e12e5c10380d3f0b60f031bd4ea20f40ab9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/61b74e12e5c10380d3f0b60f031bd4ea20f40ab9"}], "stats": {"total": 50, "additions": 29, "deletions": 21}, "files": [{"sha": "96fef8512635160ebb1cb4d91ebf8cfa81fb32fa", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb06824788e06fcc4d2ba65724feae2bf5cfed15/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb06824788e06fcc4d2ba65724feae2bf5cfed15/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fb06824788e06fcc4d2ba65724feae2bf5cfed15", "patch": "@@ -1,3 +1,11 @@\n+2008-10-15  Andreas Krebbel  <krebbel1@de.ibm.com>\n+\n+\t* config/s390/s390.h: (TARGET_DFP): This requires TARGET_HARD_FLOAT.\n+\t* config/s390/s390.md: Replace \"TARGET_HARD_FLOAT &&\n+\tTARGET_(HARD_)DFP\" with only TARGET_(HARD_)DFP since this\n+\talready implies hard float.  Also fix several insn condition\n+\twith TARGET_DFP which shall require TARGET_HARD_DFP instead.\n+\n 2008-10-15  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/36881"}, {"sha": "a58bc3443fa13da292faa53efeb9c605534c4056", "filename": "gcc/config/s390/s390.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb06824788e06fcc4d2ba65724feae2bf5cfed15/gcc%2Fconfig%2Fs390%2Fs390.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb06824788e06fcc4d2ba65724feae2bf5cfed15/gcc%2Fconfig%2Fs390%2Fs390.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.h?ref=fb06824788e06fcc4d2ba65724feae2bf5cfed15", "patch": "@@ -89,7 +89,7 @@ extern enum processor_flags s390_arch_flags;\n #define TARGET_EXTIMM \\\n        (TARGET_ZARCH && TARGET_CPU_EXTIMM)\n #define TARGET_DFP \\\n-       (TARGET_ZARCH && TARGET_CPU_DFP)\n+       (TARGET_ZARCH && TARGET_CPU_DFP && TARGET_HARD_FLOAT)\n #define TARGET_Z10 \\\n        (TARGET_ZARCH && TARGET_CPU_Z10)\n "}, {"sha": "2598039587fdbc669522d3510f6c68ea352568c6", "filename": "gcc/config/s390/s390.md", "status": "modified", "additions": 20, "deletions": 20, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb06824788e06fcc4d2ba65724feae2bf5cfed15/gcc%2Fconfig%2Fs390%2Fs390.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb06824788e06fcc4d2ba65724feae2bf5cfed15/gcc%2Fconfig%2Fs390%2Fs390.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.md?ref=fb06824788e06fcc4d2ba65724feae2bf5cfed15", "patch": "@@ -3818,7 +3818,7 @@\n \t  (unsigned_fix:DI (match_operand:DD 1 \"register_operand\" \"\")))\n      (clobber (match_scratch:TD 2 \"=f\"))])]\n \n-  \"TARGET_HARD_FLOAT && TARGET_HARD_DFP\"\n+  \"TARGET_HARD_DFP\"\n {\n   rtx label1 = gen_label_rtx ();\n   rtx label2 = gen_label_rtx ();\n@@ -3850,7 +3850,7 @@\n (define_expand \"fixuns_trunctddi2\"\n   [(set (match_operand:DI 0 \"register_operand\" \"\")\n         (unsigned_fix:DI (match_operand:TD 1 \"register_operand\" \"\")))]\n-  \"TARGET_HARD_FLOAT && TARGET_HARD_DFP\"\n+  \"TARGET_HARD_DFP\"\n {\n   rtx label1 = gen_label_rtx ();\n   rtx label2 = gen_label_rtx ();\n@@ -3939,7 +3939,7 @@\n (define_expand \"fix_trunc<mode>di2\"\n   [(set (match_operand:DI 0 \"register_operand\" \"\")\n         (fix:DI (match_operand:DFP 1 \"nonimmediate_operand\" \"\")))]\n-  \"TARGET_64BIT && TARGET_HARD_FLOAT && TARGET_HARD_DFP\"\n+  \"TARGET_64BIT && TARGET_HARD_DFP\"\n {\n   operands[1] = force_reg (<MODE>mode, operands[1]);\n   emit_insn (gen_fix_trunc<mode>di2_dfp (operands[0], operands[1],\n@@ -3953,7 +3953,7 @@\n         (fix:DI (match_operand:DFP 1 \"register_operand\" \"f\")))\n    (unspec:DI [(match_operand:DI 2 \"immediate_operand\" \"K\")] UNSPEC_ROUND)\n    (clobber (reg:CC CC_REGNUM))]\n-  \"TARGET_64BIT && TARGET_HARD_FLOAT && TARGET_HARD_DFP\"\n+  \"TARGET_64BIT && TARGET_HARD_DFP\"\n   \"cg<DFP:xde>tr\\t%0,%h2,%1\"\n   [(set_attr \"op_type\" \"RRF\")\n    (set_attr \"type\"    \"ftoidfp\")])\n@@ -4029,15 +4029,15 @@\n   [(set (match_operand:DD 0 \"register_operand\" \"=f\")\n \t(float_truncate:DD (match_operand:TD 1 \"register_operand\" \"f\")))\n    (clobber (match_scratch:TD 2 \"=f\"))]\n-  \"TARGET_HARD_FLOAT && TARGET_HARD_DFP\"\n+  \"TARGET_HARD_DFP\"\n   \"ldxtr\\t%2,0,%1,0\\;ldr\\t%0,%2\"\n   [(set_attr \"length\"  \"6\")\n    (set_attr \"type\"    \"ftruncdd\")])\n \n (define_insn \"truncddsd2\"\n   [(set (match_operand:SD 0 \"register_operand\" \"=f\")\n \t(float_truncate:SD (match_operand:DD 1 \"register_operand\" \"f\")))]\n-  \"TARGET_HARD_FLOAT && TARGET_HARD_DFP\"\n+  \"TARGET_HARD_DFP\"\n   \"ledtr\\t%0,0,%1,0\"\n   [(set_attr \"op_type\" \"RRF\")\n    (set_attr \"type\"    \"ftruncsd\")])\n@@ -4065,15 +4065,15 @@\n (define_insn \"extendddtd2\"\n   [(set (match_operand:TD 0 \"register_operand\" \"=f\")\n \t(float_extend:TD (match_operand:DD 1 \"register_operand\" \"f\")))]\n-  \"TARGET_HARD_FLOAT && TARGET_HARD_DFP\"\n+  \"TARGET_HARD_DFP\"\n   \"lxdtr\\t%0,%1,0\"\n   [(set_attr \"op_type\" \"RRF\")\n    (set_attr \"type\"    \"fsimptf\")])\n \n (define_insn \"extendsddd2\"\n   [(set (match_operand:DD 0 \"register_operand\" \"=f\")\n \t(float_extend:DD (match_operand:SD 1 \"register_operand\" \"f\")))]\n-  \"TARGET_HARD_FLOAT && TARGET_HARD_DFP\"\n+  \"TARGET_HARD_DFP\"\n   \"ldetr\\t%0,%1,0\"\n   [(set_attr \"op_type\" \"RRF\")\n    (set_attr \"type\"    \"fsimptf\")])\n@@ -4086,15 +4086,15 @@\n         (float_truncate:DFP_ALL (reg:BFP FPR2_REGNUM)))\n    (use (reg:SI GPR0_REGNUM))\n    (clobber (reg:CC CC_REGNUM))]\n-  \"TARGET_HARD_FLOAT && TARGET_DFP\"\n+  \"TARGET_HARD_DFP\"\n   \"pfpo\")\n \n (define_insn \"*trunc<DFP_ALL:mode><BFP:mode>2\"\n   [(set (reg:BFP FPR0_REGNUM)\n         (float_truncate:BFP (reg:DFP_ALL FPR2_REGNUM)))\n    (use (reg:SI GPR0_REGNUM))\n    (clobber (reg:CC CC_REGNUM))]\n-  \"TARGET_HARD_FLOAT && TARGET_DFP\"\n+  \"TARGET_HARD_DFP\"\n   \"pfpo\")\n \n (define_expand \"trunc<BFP:mode><DFP_ALL:mode>2\"\n@@ -4107,7 +4107,7 @@\n      (clobber (reg:CC CC_REGNUM))])\n    (set (match_operand:DFP_ALL 0 \"nonimmediate_operand\" \"\")\n         (reg:DFP_ALL FPR0_REGNUM))]\n-  \"TARGET_HARD_FLOAT && TARGET_DFP\n+  \"TARGET_HARD_DFP\n    && GET_MODE_SIZE (<BFP:MODE>mode) > GET_MODE_SIZE (<DFP_ALL:MODE>mode)\"\n {\n   HOST_WIDE_INT flags;\n@@ -4128,7 +4128,7 @@\n      (use (reg:SI GPR0_REGNUM))\n      (clobber (reg:CC CC_REGNUM))])\n    (set (match_operand:BFP 0 \"nonimmediate_operand\" \"\") (reg:BFP FPR0_REGNUM))]\n-  \"TARGET_HARD_FLOAT && TARGET_DFP\n+  \"TARGET_HARD_DFP\n    && GET_MODE_SIZE (<DFP_ALL:MODE>mode) >= GET_MODE_SIZE (<BFP:MODE>mode)\"\n {\n   HOST_WIDE_INT flags;\n@@ -4148,14 +4148,14 @@\n   [(set (reg:DFP_ALL FPR0_REGNUM) (float_extend:DFP_ALL (reg:BFP FPR2_REGNUM)))\n    (use (reg:SI GPR0_REGNUM))\n    (clobber (reg:CC CC_REGNUM))]\n-  \"TARGET_HARD_FLOAT && TARGET_DFP\"\n+  \"TARGET_HARD_DFP\"\n   \"pfpo\")\n \n (define_insn \"*extend<DFP_ALL:mode><BFP:mode>2\"\n   [(set (reg:BFP FPR0_REGNUM) (float_extend:BFP (reg:DFP_ALL FPR2_REGNUM)))\n    (use (reg:SI GPR0_REGNUM))\n    (clobber (reg:CC CC_REGNUM))]\n-  \"TARGET_HARD_FLOAT && TARGET_DFP\"\n+  \"TARGET_HARD_DFP\"\n   \"pfpo\")\n \n (define_expand \"extend<BFP:mode><DFP_ALL:mode>2\"\n@@ -4168,7 +4168,7 @@\n      (clobber (reg:CC CC_REGNUM))])\n    (set (match_operand:DFP_ALL 0 \"nonimmediate_operand\" \"\")\n         (reg:DFP_ALL FPR0_REGNUM))]\n-  \"TARGET_HARD_FLOAT && TARGET_DFP\n+  \"TARGET_HARD_DFP\n    && GET_MODE_SIZE (<BFP:MODE>mode) <= GET_MODE_SIZE (<DFP_ALL:MODE>mode)\"\n {\n   HOST_WIDE_INT flags;\n@@ -4189,7 +4189,7 @@\n      (use (reg:SI GPR0_REGNUM))\n      (clobber (reg:CC CC_REGNUM))])\n    (set (match_operand:BFP 0 \"nonimmediate_operand\" \"\") (reg:BFP FPR0_REGNUM))]\n-  \"TARGET_HARD_FLOAT && TARGET_DFP\n+  \"TARGET_HARD_DFP\n    && GET_MODE_SIZE (<DFP_ALL:MODE>mode) < GET_MODE_SIZE (<BFP:MODE>mode)\"\n {\n   HOST_WIDE_INT flags;\n@@ -6775,7 +6775,7 @@\n (define_insn \"*neg<mode>2_nocc\"\n   [(set (match_operand:FP 0 \"register_operand\"         \"=f\")\n         (neg:FP (match_operand:FP 1 \"register_operand\" \"<fT0>\")))]\n-  \"TARGET_HARD_FLOAT && TARGET_DFP\"\n+  \"TARGET_DFP\"\n   \"lcdfr\\t%0,%1\"\n   [(set_attr \"op_type\"  \"RRE\")\n    (set_attr \"type\"     \"fsimp<mode>\")])\n@@ -6891,7 +6891,7 @@\n (define_insn \"*abs<mode>2_nocc\"\n   [(set (match_operand:FP 0 \"register_operand\"         \"=f\")\n         (abs:FP (match_operand:FP 1 \"register_operand\" \"<fT0>\")))]\n-  \"TARGET_HARD_FLOAT && TARGET_DFP\"\n+  \"TARGET_DFP\"\n   \"lpdfr\\t%0,%1\"\n   [(set_attr \"op_type\"  \"RRE\")\n    (set_attr \"type\"     \"fsimp<mode>\")])\n@@ -7000,7 +7000,7 @@\n (define_insn \"*negabs<mode>2_nocc\"\n   [(set (match_operand:FP 0 \"register_operand\"                  \"=f\")\n         (neg:FP (abs:FP (match_operand:BFP 1 \"register_operand\" \"<fT0>\"))))]\n-  \"TARGET_HARD_FLOAT && TARGET_DFP\"\n+  \"TARGET_DFP\"\n   \"lndfr\\t%0,%1\"\n   [(set_attr \"op_type\"  \"RRE\")\n    (set_attr \"type\"     \"fsimp<mode>\")])\n@@ -7025,7 +7025,7 @@\n \t(unspec:FP [(match_operand:FP 1 \"register_operand\" \"<fT0>\")\n \t\t    (match_operand:FP 2 \"register_operand\" \"f\")]\n \t\t    UNSPEC_COPYSIGN))]\n-  \"TARGET_HARD_FLOAT && TARGET_DFP\"\n+  \"TARGET_DFP\"\n   \"cpsdr\\t%0,%2,%1\"\n   [(set_attr \"op_type\"  \"RRF\")\n    (set_attr \"type\"     \"fsimp<mode>\")])"}]}