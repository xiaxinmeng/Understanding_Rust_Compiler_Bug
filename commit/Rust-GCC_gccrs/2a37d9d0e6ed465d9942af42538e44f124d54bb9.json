{"sha": "2a37d9d0e6ed465d9942af42538e44f124d54bb9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmEzN2Q5ZDBlNmVkNDY1ZDk5NDJhZjQyNTM4ZTQ0ZjEyNGQ1NGJiOQ==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2015-01-16T16:58:58Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2015-01-16T16:58:58Z"}, "message": "[ARM] Move comment about splitting Thumb1 patterns to thumb1.md\n\n\t* config/arm/arm.md: Move comment about splitting Thumb1 patterns to...\n\t* config/arm/thumb1.md: ... Here.\n\nFrom-SVN: r219755", "tree": {"sha": "ac021491c20712e85428615edac449c5f6354d2b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ac021491c20712e85428615edac449c5f6354d2b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2a37d9d0e6ed465d9942af42538e44f124d54bb9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a37d9d0e6ed465d9942af42538e44f124d54bb9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a37d9d0e6ed465d9942af42538e44f124d54bb9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a37d9d0e6ed465d9942af42538e44f124d54bb9/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "325df0eb7fe68e12e809d1ea9e499dfa807d3a77", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/325df0eb7fe68e12e809d1ea9e499dfa807d3a77", "html_url": "https://github.com/Rust-GCC/gccrs/commit/325df0eb7fe68e12e809d1ea9e499dfa807d3a77"}], "stats": {"total": 45, "additions": 26, "deletions": 19}, "files": [{"sha": "717bdbd8d44b413151ad12ed48433aaf9e53777f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a37d9d0e6ed465d9942af42538e44f124d54bb9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a37d9d0e6ed465d9942af42538e44f124d54bb9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2a37d9d0e6ed465d9942af42538e44f124d54bb9", "patch": "@@ -1,3 +1,8 @@\n+2015-01-16  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* config/arm/arm.md: Move comment about splitting Thumb1 patterns to...\n+\t* config/arm/thumb1.md: ... Here.\n+\n 2015-01-16  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \t* config/rs6000/rs6000.c (rs6000_scalar_mode_supported_p): Disallow"}, {"sha": "c88e3f1afd0acc51e6452315f74115bd7a9a7617", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a37d9d0e6ed465d9942af42538e44f124d54bb9/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a37d9d0e6ed465d9942af42538e44f124d54bb9/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=2a37d9d0e6ed465d9942af42538e44f124d54bb9", "patch": "@@ -22,25 +22,6 @@\n \n ;;- See file \"rtl.def\" for documentation on define_insn, match_*, et. al.\n \n-;; Beware of splitting Thumb1 patterns that output multiple\n-;; assembly instructions, in particular instruction such as SBC and\n-;; ADC which consume flags.  For example, in the pattern thumb_subdi3\n-;; below, the output SUB implicitly sets the flags (assembled to SUBS)\n-;; and then the Carry flag is used by SBC to compute the correct\n-;; result.  If we split thumb_subdi3 pattern into two separate RTL\n-;; insns (using define_insn_and_split), the scheduler might place\n-;; other RTL insns between SUB and SBC, possibly modifying the Carry\n-;; flag used by SBC.  This might happen because most Thumb1 patterns\n-;; for flag-setting instructions do not have explicit RTL for setting\n-;; or clobbering the flags.  Instead, they have the attribute \"conds\"\n-;; with value \"set\" or \"clob\".  However, this attribute is not used to\n-;; identify dependencies and therefore the scheduler might reorder\n-;; these instruction.  Currenly, this problem cannot happen because\n-;; there are no separate Thumb1 patterns for individual instruction\n-;; that consume flags (except conditional execution, which is treated\n-;; differently).  In particular there is no Thumb1 armv6-m pattern for\n-;; sbc or adc.\n-\n \f\n ;;---------------------------------------------------------------------------\n ;; Constants"}, {"sha": "b1a589774ea51cc34c8cec25735ac82fae10a641", "filename": "gcc/config/arm/thumb1.md", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a37d9d0e6ed465d9942af42538e44f124d54bb9/gcc%2Fconfig%2Farm%2Fthumb1.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a37d9d0e6ed465d9942af42538e44f124d54bb9/gcc%2Fconfig%2Farm%2Fthumb1.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fthumb1.md?ref=2a37d9d0e6ed465d9942af42538e44f124d54bb9", "patch": "@@ -22,6 +22,27 @@\n ;; Insn patterns\n ;;\n \n+;; Beware of splitting Thumb1 patterns that output multiple\n+;; assembly instructions, in particular instruction such as SBC and\n+;; ADC which consume flags.  For example, in the pattern thumb_subdi3\n+;; below, the output SUB implicitly sets the flags (assembled to SUBS)\n+;; and then the Carry flag is used by SBC to compute the correct\n+;; result.  If we split thumb_subdi3 pattern into two separate RTL\n+;; insns (using define_insn_and_split), the scheduler might place\n+;; other RTL insns between SUB and SBC, possibly modifying the Carry\n+;; flag used by SBC.  This might happen because most Thumb1 patterns\n+;; for flag-setting instructions do not have explicit RTL for setting\n+;; or clobbering the flags.  Instead, they have the attribute \"conds\"\n+;; with value \"set\" or \"clob\".  However, this attribute is not used to\n+;; identify dependencies and therefore the scheduler might reorder\n+;; these instruction.  Currenly, this problem cannot happen because\n+;; there are no separate Thumb1 patterns for individual instruction\n+;; that consume flags (except conditional execution, which is treated\n+;; differently).  In particular there is no Thumb1 armv6-m pattern for\n+;; sbc or adc.\n+\n+\n+\n (define_insn \"*thumb1_adddi3\"\n   [(set (match_operand:DI          0 \"register_operand\" \"=l\")\n \t(plus:DI (match_operand:DI 1 \"register_operand\" \"%0\")"}]}