{"sha": "64be2b26eb94fcb4d4e754aeb06e868535f33169", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjRiZTJiMjZlYjk0ZmNiNGQ0ZTc1NGFlYjA2ZTg2ODUzNWYzMzE2OQ==", "commit": {"author": {"name": "Jozef Lawrynowicz", "email": "jozef.l@mittosystems.com", "date": "2019-09-03T20:57:02Z"}, "committer": {"name": "Jozef Lawrynowicz", "email": "jozefl@gcc.gnu.org", "date": "2019-09-03T20:57:02Z"}, "message": "MSP430: Use default_elf_select_section to determine sections for data\n\n2019-09-03  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n\n\t* config/msp430/msp430.c (msp430_init_sections): Remove handling of the\n\tnoinit section.\n\t(msp430_select_section): Handle decls with the \"noinit\" attribute with\n\tdefault_elf_select_section.\n\tHandle SECCAT_RODATA_MERGE_* section types with\n\tdefault_elf_select_section.\n\tAdd comments about handling of unsupported section types.\n\t(msp430_section_type_flags): Remove handling of the noinit section.\n\nFrom-SVN: r275357", "tree": {"sha": "afc12e45a5c212c9401351dc7ddaa56d05e3b55b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/afc12e45a5c212c9401351dc7ddaa56d05e3b55b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/64be2b26eb94fcb4d4e754aeb06e868535f33169", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64be2b26eb94fcb4d4e754aeb06e868535f33169", "html_url": "https://github.com/Rust-GCC/gccrs/commit/64be2b26eb94fcb4d4e754aeb06e868535f33169", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64be2b26eb94fcb4d4e754aeb06e868535f33169/comments", "author": {"login": "jozefl-mitto", "id": 36524004, "node_id": "MDQ6VXNlcjM2NTI0MDA0", "avatar_url": "https://avatars.githubusercontent.com/u/36524004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jozefl-mitto", "html_url": "https://github.com/jozefl-mitto", "followers_url": "https://api.github.com/users/jozefl-mitto/followers", "following_url": "https://api.github.com/users/jozefl-mitto/following{/other_user}", "gists_url": "https://api.github.com/users/jozefl-mitto/gists{/gist_id}", "starred_url": "https://api.github.com/users/jozefl-mitto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jozefl-mitto/subscriptions", "organizations_url": "https://api.github.com/users/jozefl-mitto/orgs", "repos_url": "https://api.github.com/users/jozefl-mitto/repos", "events_url": "https://api.github.com/users/jozefl-mitto/events{/privacy}", "received_events_url": "https://api.github.com/users/jozefl-mitto/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f1deee9179236ea46965e11923c0f8306b6821ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1deee9179236ea46965e11923c0f8306b6821ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1deee9179236ea46965e11923c0f8306b6821ef"}], "stats": {"total": 92, "additions": 61, "deletions": 31}, "files": [{"sha": "1ed86eb934aaf685edb8b8f1509559ff77beef03", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64be2b26eb94fcb4d4e754aeb06e868535f33169/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64be2b26eb94fcb4d4e754aeb06e868535f33169/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=64be2b26eb94fcb4d4e754aeb06e868535f33169", "patch": "@@ -1,3 +1,14 @@\n+2019-09-03  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n+\n+\t* config/msp430/msp430.c (msp430_init_sections): Remove handling of the\n+\tnoinit section.\n+\t(msp430_select_section): Handle decls with the \"noinit\" attribute with\n+\tdefault_elf_select_section.\n+\tHandle SECCAT_RODATA_MERGE_* section types with\n+\tdefault_elf_select_section.\n+\tAdd comments about handling of unsupported section types.\n+\t(msp430_section_type_flags): Remove handling of the noinit section.\n+\n 2019-09-03  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n \n \t* config/msp430/msp430.c (msp430_attr): Remove warnings about"}, {"sha": "521d9baf7337747cef1a0f1d8daa10add9c37c52", "filename": "gcc/config/msp430/msp430.c", "status": "modified", "additions": 50, "deletions": 31, "changes": 81, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64be2b26eb94fcb4d4e754aeb06e868535f33169/gcc%2Fconfig%2Fmsp430%2Fmsp430.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64be2b26eb94fcb4d4e754aeb06e868535f33169/gcc%2Fconfig%2Fmsp430%2Fmsp430.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmsp430%2Fmsp430.c?ref=64be2b26eb94fcb4d4e754aeb06e868535f33169", "patch": "@@ -1785,7 +1785,6 @@ gen_prefix (tree decl)\n   return NULL;\n }\n \n-static section * noinit_section;\n static section * persist_section;\n \n #undef  TARGET_ASM_INIT_SECTIONS\n@@ -1794,8 +1793,6 @@ static section * persist_section;\n static void\n msp430_init_sections (void)\n {\n-  noinit_section = get_unnamed_section (0, output_section_asm_op,\n-\t\t\t\t\t\".section .noinit,\\\"aw\\\"\");\n   persist_section = get_unnamed_section (0, output_section_asm_op,\n \t\t\t\t\t \".section .persistent,\\\"aw\\\"\");\n }\n@@ -1806,6 +1803,10 @@ msp430_init_sections (void)\n static section *\n msp430_select_section (tree decl, int reloc, unsigned HOST_WIDE_INT align)\n {\n+  const char *prefix;\n+  const char *sec_name;\n+  const char *base_sec_name;\n+\n   gcc_assert (decl != NULL_TREE);\n \n   if (TREE_CODE (decl) == STRING_CST\n@@ -1821,51 +1822,71 @@ msp430_select_section (tree decl, int reloc, unsigned HOST_WIDE_INT align)\n       && is_interrupt_func (decl))\n     return get_section (\".lowtext\", SECTION_CODE | SECTION_WRITE , decl);\n \n-  const char * prefix = gen_prefix (decl);\n-  if (prefix == NULL)\n-    {\n-      if (TREE_CODE (decl) == FUNCTION_DECL)\n-\treturn text_section;\n-      /* FIXME: ATTR_NOINIT is handled generically in\n-\t default_elf_select_section.  */\n-      else if (has_attr (ATTR_NOINIT, decl))\n-\treturn noinit_section;\n-      else if (has_attr (ATTR_PERSIST, decl))\n-\treturn persist_section;\n-      else\n-\treturn default_select_section (decl, reloc, align);\n-    }\n+  if (has_attr (ATTR_PERSIST, decl))\n+    return persist_section;\n+\n+  /* ATTR_NOINIT is handled generically.  */\n+  if (has_attr (ATTR_NOINIT, decl))\n+    return default_elf_select_section (decl, reloc, align);\n+\n+  prefix = gen_prefix (decl);\n \n-  const char * sec;\n   switch (categorize_decl_for_section (decl, reloc))\n     {\n-    case SECCAT_TEXT:   sec = \".text\";   break;\n-    case SECCAT_DATA:   sec = \".data\";   break;\n-    case SECCAT_BSS:    sec = \".bss\";    break;\n-    case SECCAT_RODATA: sec = \".rodata\"; break;\n+    case SECCAT_TEXT:\n+      if (!prefix)\n+\treturn text_section;\n+      base_sec_name = \".text\";\n+      break;\n+    case SECCAT_DATA:\n+      if (!prefix)\n+\treturn data_section;\n+      base_sec_name = \".data\";\n+      break;\n+    case SECCAT_BSS:\n+      if (!prefix)\n+\treturn bss_section;\n+      base_sec_name = \".bss\";\n+      break;\n+    case SECCAT_RODATA:\n+      if (!prefix)\n+\treturn readonly_data_section;\n+      base_sec_name = \".rodata\";\n+      break;\n \n+    /* Enable merging of constant data by the GNU linker using\n+       default_elf_select_section and therefore enabling creation of\n+       sections with the SHF_MERGE flag.  */\n     case SECCAT_RODATA_MERGE_STR:\n     case SECCAT_RODATA_MERGE_STR_INIT:\n     case SECCAT_RODATA_MERGE_CONST:\n+      return default_elf_select_section (decl, reloc, align);\n+\n+    /* The sections listed below are are not supported for MSP430.\n+       They should not be generated, but in case they are, we use\n+       default_select_section so they get placed in sections\n+       the msp430 assembler and linker understand.  */\n+    /* \"small data\" sections are not supported.  */\n     case SECCAT_SRODATA:\n-    case SECCAT_DATA_REL:\n-    case SECCAT_DATA_REL_LOCAL:\n-    case SECCAT_DATA_REL_RO:\n-    case SECCAT_DATA_REL_RO_LOCAL:\n     case SECCAT_SDATA:\n     case SECCAT_SBSS:\n+    /* Thread-local storage (TLS) is not supported.  */\n     case SECCAT_TDATA:\n     case SECCAT_TBSS:\n+    /* Sections used by a dynamic linker are not supported.  */\n+    case SECCAT_DATA_REL:\n+    case SECCAT_DATA_REL_LOCAL:\n+    case SECCAT_DATA_REL_RO:\n+    case SECCAT_DATA_REL_RO_LOCAL:\n       return default_select_section (decl, reloc, align);\n \n     default:\n       gcc_unreachable ();\n     }\n \n-  const char * dec_name = DECL_SECTION_NAME (decl);\n-  char * name = ACONCAT ((prefix, sec, dec_name, NULL));\n+  sec_name = ACONCAT ((prefix, base_sec_name, DECL_SECTION_NAME (decl), NULL));\n \n-  return get_named_section (decl, name, 0);\n+  return get_named_section (decl, sec_name, 0);\n }\n \n #undef  TARGET_ASM_FUNCTION_SECTION\n@@ -1901,8 +1922,6 @@ msp430_section_type_flags (tree decl, const char * name, int reloc)\n     name += strlen (upper_prefix);\n   else if (strncmp (name, either_prefix, strlen (either_prefix)) == 0)\n     name += strlen (either_prefix);\n-  else if (strcmp (name, \".noinit\") == 0)\n-    return SECTION_WRITE | SECTION_BSS | SECTION_NOTYPE;\n   else if (strcmp (name, \".persistent\") == 0)\n     return SECTION_WRITE | SECTION_NOTYPE;\n "}]}