{"sha": "cb1fd5b43f7bd2b21e4418184f4b496a009fbd59", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2IxZmQ1YjQzZjdiZDJiMjFlNDQxODE4NGY0YjQ5NmEwMDlmYmQ1OQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2015-07-09T15:18:44Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2015-07-09T15:18:44Z"}, "message": "re PR target/66814 (ICE: gcc.target/i386/avx512f-klogic-2.c)\n\n\tPR target/66814\n\t* config/i386/predicates.md (nonimmediate_gr_operand): New predicate.\n\t* config/i386/i386.md (not peephole2): Use nonimmediate_gr_operand.\n\t(varous peephole2s): Use {GENERAL,SSE,MMX}_REGNO_P instead of\n\t{GENERAL_SSE_MMX}_REG_P where appropriate.\n\ntestsuite/ChangeLog:\n\n\tPR target/66814\n\t* gcc.target/i386/pr66814.c: New test.\n\nFrom-SVN: r225616", "tree": {"sha": "73878e0f492e76abdc5799c87dc803ba0ac89b0d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/73878e0f492e76abdc5799c87dc803ba0ac89b0d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cb1fd5b43f7bd2b21e4418184f4b496a009fbd59", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb1fd5b43f7bd2b21e4418184f4b496a009fbd59", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb1fd5b43f7bd2b21e4418184f4b496a009fbd59", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb1fd5b43f7bd2b21e4418184f4b496a009fbd59/comments", "author": null, "committer": null, "parents": [{"sha": "09bae928c56997afe3e13e9fee3328afc1c9d9e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09bae928c56997afe3e13e9fee3328afc1c9d9e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/09bae928c56997afe3e13e9fee3328afc1c9d9e8"}], "stats": {"total": 38, "additions": 32, "deletions": 6}, "files": [{"sha": "d5f7a25ba445237b935cc2c543a11e3bcc192b80", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb1fd5b43f7bd2b21e4418184f4b496a009fbd59/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb1fd5b43f7bd2b21e4418184f4b496a009fbd59/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cb1fd5b43f7bd2b21e4418184f4b496a009fbd59", "patch": "@@ -1,3 +1,11 @@\n+2015-07-08  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/66814\n+\t* config/i386/predicates.md (nonimmediate_gr_operand): New predicate.\n+\t* config/i386/i386.md (not peephole2): Use nonimmediate_gr_operand.\n+\t(varous peephole2s): Use {GENERAL,SSE,MMX}_REGNO_P instead of\n+\t{GENERAL_SSE_MMX}_REG_P where appropriate.\n+\n 2015-07-09  Andrew MacLeod  <amacleod@redhat.com>\n \n \t* lto-streamer.h: Don't include target.h and alloc-pool.h.\n@@ -59,7 +67,7 @@\n 2015-07-09  Marek Polacek  <polacek@redhat.com>\n \n \tPR tree-optimization/66718\n-\t* Makefile.in (OBJS): Add gimple-laddress.o. \n+\t* Makefile.in (OBJS): Add gimple-laddress.o.\n \t* passes.def: Schedule pass_laddress.\n \t* timevar.def (DEFTIMEVAR): Add TV_GIMPLE_LADDRESS.\n \t* tree-pass.h (make_pass_laddress): Declare."}, {"sha": "1d43aaffbf4518a64e4898ebb47e1424797479ad", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb1fd5b43f7bd2b21e4418184f4b496a009fbd59/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb1fd5b43f7bd2b21e4418184f4b496a009fbd59/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=cb1fd5b43f7bd2b21e4418184f4b496a009fbd59", "patch": "@@ -17379,8 +17379,8 @@\n ;; lifetime information then.\n \n (define_peephole2\n-  [(set (match_operand:SWI124 0 \"nonimmediate_operand\")\n-\t(not:SWI124 (match_operand:SWI124 1 \"nonimmediate_operand\")))]\n+  [(set (match_operand:SWI124 0 \"nonimmediate_gr_operand\")\n+\t(not:SWI124 (match_operand:SWI124 1 \"nonimmediate_gr_operand\")))]\n   \"optimize_insn_for_speed_p ()\n    && ((TARGET_NOT_UNPAIRABLE\n \t&& (!MEM_P (operands[0])\n@@ -17524,8 +17524,10 @@\n                      [(match_dup 0)\n                       (match_operand 2 \"memory_operand\")]))]\n   \"REGNO (operands[0]) != REGNO (operands[1])\n-   && ((MMX_REG_P (operands[0]) && MMX_REG_P (operands[1])) \n-       || (SSE_REG_P (operands[0]) && SSE_REG_P (operands[1])))\"\n+   && ((MMX_REGNO_P (REGNO (operands[0]))\n+        && MMX_REGNO_P (REGNO (operands[1]))) \n+       || (SSE_REGNO_P (REGNO (operands[0]))\n+           && SSE_REGNO_P (REGNO (operands[1]))))\"\n   [(set (match_dup 0) (match_dup 2))\n    (set (match_dup 0)\n         (match_op_dup 3 [(match_dup 0) (match_dup 1)]))])\n@@ -17673,7 +17675,7 @@\n \t(match_operand 1 \"const0_operand\"))]\n   \"GET_MODE_SIZE (GET_MODE (operands[0])) <= UNITS_PER_WORD\n    && (! TARGET_USE_MOV0 || optimize_insn_for_size_p ())\n-   && GENERAL_REG_P (operands[0])\n+   && GENERAL_REGNO_P (REGNO (operands[0]))\n    && peep2_regno_dead_p (0, FLAGS_REG)\"\n   [(parallel [(set (match_dup 0) (const_int 0))\n \t      (clobber (reg:CC FLAGS_REG))])]\n@@ -17694,6 +17696,7 @@\n   [(set (match_operand:SWI248 0 \"register_operand\")\n \t(const_int -1))]\n   \"(optimize_insn_for_size_p () || TARGET_MOVE_M1_VIA_OR)\n+   && GENERAL_REGNO_P (REGNO (operands[0]))\n    && peep2_regno_dead_p (0, FLAGS_REG)\"\n   [(parallel [(set (match_dup 0) (const_int -1))\n \t      (clobber (reg:CC FLAGS_REG))])]"}, {"sha": "09505fc4f181e6870e4d5fdc02f0248617215c80", "filename": "gcc/config/i386/predicates.md", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb1fd5b43f7bd2b21e4418184f4b496a009fbd59/gcc%2Fconfig%2Fi386%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb1fd5b43f7bd2b21e4418184f4b496a009fbd59/gcc%2Fconfig%2Fi386%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fpredicates.md?ref=cb1fd5b43f7bd2b21e4418184f4b496a009fbd59", "patch": "@@ -37,6 +37,12 @@\n   (and (match_code \"reg\")\n        (match_test \"GENERAL_REGNO_P (REGNO (op))\")))\n \n+;; True if the operand is a nonimmediate operand with GENERAL class register.\n+(define_predicate \"nonimmediate_gr_operand\"\n+  (if_then_else (match_code \"reg\")\n+    (match_test \"GENERAL_REGNO_P (REGNO (op))\")\n+    (match_operand 0 \"nonimmediate_operand\")))\n+\n ;; Return true if OP is a register operand other than an i387 fp register.\n (define_predicate \"register_and_not_fp_reg_operand\"\n   (and (match_code \"reg\")"}, {"sha": "d0c561e231ba35be542b4420a27d01385b24f04c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb1fd5b43f7bd2b21e4418184f4b496a009fbd59/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb1fd5b43f7bd2b21e4418184f4b496a009fbd59/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=cb1fd5b43f7bd2b21e4418184f4b496a009fbd59", "patch": "@@ -1,3 +1,8 @@\n+2015-07-09  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/66814\n+\t* gcc.target/i386/pr66814.c: New test.\n+\n 2015-07-09  Szabolcs Nagy  <szabolcs.nagy@arm.com>\n \n \t* gcc.target/aarch64/fnmul-1.c: Fix whitespace."}, {"sha": "4ac9d234ccbbd29141b888eb70f887299fb3aec3", "filename": "gcc/testsuite/gcc.target/i386/pr66814.c", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb1fd5b43f7bd2b21e4418184f4b496a009fbd59/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr66814.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb1fd5b43f7bd2b21e4418184f4b496a009fbd59/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr66814.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr66814.c?ref=cb1fd5b43f7bd2b21e4418184f4b496a009fbd59", "patch": "@@ -0,0 +1,4 @@\n+/* { dg-do compile { target { ia32 } } } */\n+/* { dg-options \"-march=i586 -mavx512f -O2\" } */\n+\n+#include \"avx512f-klogic-2.c\""}]}