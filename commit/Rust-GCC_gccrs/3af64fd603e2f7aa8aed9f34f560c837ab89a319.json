{"sha": "3af64fd603e2f7aa8aed9f34f560c837ab89a319", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2FmNjRmZDYwM2UyZjdhYThhZWQ5ZjM0ZjU2MGM4MzdhYjg5YTMxOQ==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2001-02-15T18:23:33Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2001-02-15T18:23:33Z"}, "message": "* invoke.texi (--param): Document.\n\nFrom-SVN: r39723", "tree": {"sha": "18481448360a66b17dc7915db3316ec213df7369", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/18481448360a66b17dc7915db3316ec213df7369"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3af64fd603e2f7aa8aed9f34f560c837ab89a319", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3af64fd603e2f7aa8aed9f34f560c837ab89a319", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3af64fd603e2f7aa8aed9f34f560c837ab89a319", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3af64fd603e2f7aa8aed9f34f560c837ab89a319/comments", "author": null, "committer": null, "parents": [{"sha": "ba21a8a84f1fe4b923517ef9c0209576c9b4435e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba21a8a84f1fe4b923517ef9c0209576c9b4435e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba21a8a84f1fe4b923517ef9c0209576c9b4435e"}], "stats": {"total": 23, "additions": 23, "deletions": 0}, "files": [{"sha": "c27b695ab7bdfdccae9e9bf723c4a0547e2c6382", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3af64fd603e2f7aa8aed9f34f560c837ab89a319/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3af64fd603e2f7aa8aed9f34f560c837ab89a319/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3af64fd603e2f7aa8aed9f34f560c837ab89a319", "patch": "@@ -1,3 +1,7 @@\n+2001-02-15  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* invoke.texi (--param): Document.\n+\n Thu Feb 15 15:16:38 2001  Alexandre Oliva  <aoliva@redhat.com>\n \n \t* config/sh/sh.h (BOOL_TYPE_SIZE): Don't define."}, {"sha": "302f97a4a7bfeb250025481c6b1f0c0ad7df0539", "filename": "gcc/invoke.texi", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3af64fd603e2f7aa8aed9f34f560c837ab89a319/gcc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3af64fd603e2f7aa8aed9f34f560c837ab89a319/gcc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Finvoke.texi?ref=3af64fd603e2f7aa8aed9f34f560c837ab89a319", "patch": "@@ -254,6 +254,7 @@ in the following sections.\n -fsingle-precision-constant  -fssa @gol\n -fstrength-reduce  -fstrict-aliasing  -fthread-jumps  -ftrapv @gol\n -funroll-all-loops  -funroll-loops  @gol\n+--param @var{name}=@var{value}\n -O  -O0  -O1  -O2  -O3  -Os}\n \n @item Preprocessor Options\n@@ -3261,6 +3262,24 @@ of registers left over after register allocation.  This optimization\n will most benefit processors with lots of registers.  It can, however,\n make debugging impossible, since variables will no longer stay in\n a ``home register''.\n+\n+@item --param @var{name}=@var{value}\n+In some places, GCC uses various constants to control the amount of\n+optimization that is done.  For example, GCC will not inline functions\n+that contain more that a certain number of instructions.  You can\n+control some of these constants on the command-line using the\n+@samp{--param} option.  \n+\n+In each case, the @var{value} is a integer.  The allowable choices for\n+@var{name} are given in the following table:\n+\n+@table @gcctabopt\n+@item max-inline-insns\n+If an function contains more than this many instructions, it\n+will not be inlined.  This option is precisely equivalent to\n+@samp{-finline-limit}.\n+@end table\n+\n @end table\n \n @node Preprocessor Options"}]}