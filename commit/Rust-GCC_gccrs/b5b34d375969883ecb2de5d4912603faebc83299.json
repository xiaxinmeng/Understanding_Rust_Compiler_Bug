{"sha": "b5b34d375969883ecb2de5d4912603faebc83299", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjViMzRkMzc1OTY5ODgzZWNiMmRlNWQ0OTEyNjAzZmFlYmM4MzI5OQ==", "commit": {"author": {"name": "Alan Lawrence", "email": "alan.lawrence@arm.com", "date": "2014-12-18T15:00:51Z"}, "committer": {"name": "Alan Lawrence", "email": "alalaw01@gcc.gnu.org", "date": "2014-12-18T15:00:51Z"}, "message": "[AArch64] Simplify patterns for sshr_n_[us]64 intrinsic\n\n        * config/aarch64/aarch64.md (enum \"unspec\"): Remove UNSPEC_SSHR64.\n\n        * config/aarch64/aarch64-simd.md (aarch64_ashr_simddi): Change shift\n        amount to 63 if was 64.\n        (aarch64_sshr_simddi): Remove.\n\nFrom-SVN: r218867", "tree": {"sha": "34445fb90808b144f6e80c2b4f3485d6cda25d51", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/34445fb90808b144f6e80c2b4f3485d6cda25d51"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b5b34d375969883ecb2de5d4912603faebc83299", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5b34d375969883ecb2de5d4912603faebc83299", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b5b34d375969883ecb2de5d4912603faebc83299", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5b34d375969883ecb2de5d4912603faebc83299/comments", "author": null, "committer": null, "parents": [{"sha": "26e0ff941167ba78f0052a94b79a0a347753d3e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26e0ff941167ba78f0052a94b79a0a347753d3e6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/26e0ff941167ba78f0052a94b79a0a347753d3e6"}], "stats": {"total": 28, "additions": 13, "deletions": 15}, "files": [{"sha": "3bb1dae5d073686e53b0b60620f98e08cc313d43", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5b34d375969883ecb2de5d4912603faebc83299/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5b34d375969883ecb2de5d4912603faebc83299/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b5b34d375969883ecb2de5d4912603faebc83299", "patch": "@@ -1,3 +1,11 @@\n+2014-12-18  Alan Lawrence  <alan.lawrence@arm.com>\n+\n+\t* config/aarch64/aarch64.md (enum \"unspec\"): Remove UNSPEC_SSHR64.\n+\n+\t* config/aarch64/aarch64-simd.md (aarch64_ashr_simddi): Change shift\n+\tamount to 63 if was 64.\n+\t(aarch64_sshr_simddi): Remove.\n+\n 2014-12-18  Wilco Dijkstra  <wilco.dijkstra@arm.com>\n \n \t* gcc/config/aarch64/aarch64.c (TARGET_MIN_DIVISIONS_FOR_RECIP_MUL):"}, {"sha": "9a48537a33bc097051f9dd7095a816d5221259f0", "filename": "gcc/config/aarch64/aarch64-simd.md", "status": "modified", "additions": 5, "deletions": 14, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5b34d375969883ecb2de5d4912603faebc83299/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5b34d375969883ecb2de5d4912603faebc83299/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md?ref=b5b34d375969883ecb2de5d4912603faebc83299", "patch": "@@ -726,25 +726,16 @@\n    (match_operand:SI 2 \"aarch64_shift_imm64_di\" \"\")]\n   \"TARGET_SIMD\"\n   {\n+    /* An arithmetic shift right by 64 fills the result with copies of the sign\n+       bit, just like asr by 63 - however the standard pattern does not handle\n+       a shift by 64.  */\n     if (INTVAL (operands[2]) == 64)\n-      emit_insn (gen_aarch64_sshr_simddi (operands[0], operands[1]));\n-    else\n-      emit_insn (gen_ashrdi3 (operands[0], operands[1], operands[2]));\n+      operands[2] = GEN_INT (63);\n+    emit_insn (gen_ashrdi3 (operands[0], operands[1], operands[2]));\n     DONE;\n   }\n )\n \n-;; SIMD shift by 64.  This pattern is a special case as standard pattern does\n-;; not handle NEON shifts by 64.\n-(define_insn \"aarch64_sshr_simddi\"\n-  [(set (match_operand:DI 0 \"register_operand\" \"=w\")\n-        (unspec:DI\n-          [(match_operand:DI 1 \"register_operand\" \"w\")] UNSPEC_SSHR64))]\n-  \"TARGET_SIMD\"\n-  \"sshr\\t%d0, %d1, 64\"\n-  [(set_attr \"type\" \"neon_shift_imm\")]\n-)\n-\n (define_expand \"vlshr<mode>3\"\n  [(match_operand:VDQ_BHSI 0 \"register_operand\" \"\")\n   (match_operand:VDQ_BHSI 1 \"register_operand\" \"\")"}, {"sha": "ebde2768d30c80825645b0ab9ce9921e9ca730ab", "filename": "gcc/config/aarch64/aarch64.md", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5b34d375969883ecb2de5d4912603faebc83299/gcc%2Fconfig%2Faarch64%2Faarch64.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5b34d375969883ecb2de5d4912603faebc83299/gcc%2Fconfig%2Faarch64%2Faarch64.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.md?ref=b5b34d375969883ecb2de5d4912603faebc83299", "patch": "@@ -107,7 +107,6 @@\n     UNSPEC_SISD_SSHL\n     UNSPEC_SISD_USHL\n     UNSPEC_SSHL_2S\n-    UNSPEC_SSHR64\n     UNSPEC_ST1\n     UNSPEC_ST2\n     UNSPEC_ST3"}]}