{"sha": "35e2a4b8423dda850cb7898e30fdd75762226c4b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzVlMmE0Yjg0MjNkZGE4NTBjYjc4OThlMzBmZGQ3NTc2MjIyNmM0Yg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2010-05-08T11:31:31Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2010-05-08T11:31:31Z"}, "message": "decl.c (gnat_to_gnu_entity): Create variables for size expressions of variant part of record types declared...\n\n\t* gcc-interface/decl.c (gnat_to_gnu_entity): Create variables for size\n\texpressions of variant part of record types declared at library level.\n\nFrom-SVN: r159182", "tree": {"sha": "e7e98508d94aa9e5f2cf639f84217f7a9f0db54f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e7e98508d94aa9e5f2cf639f84217f7a9f0db54f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/35e2a4b8423dda850cb7898e30fdd75762226c4b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35e2a4b8423dda850cb7898e30fdd75762226c4b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35e2a4b8423dda850cb7898e30fdd75762226c4b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35e2a4b8423dda850cb7898e30fdd75762226c4b/comments", "author": null, "committer": null, "parents": [{"sha": "da01bfee1aafe6c68c2c21d9d6d77a506c7e52c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da01bfee1aafe6c68c2c21d9d6d77a506c7e52c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da01bfee1aafe6c68c2c21d9d6d77a506c7e52c7"}], "stats": {"total": 143, "additions": 143, "deletions": 0}, "files": [{"sha": "2a2805a49f02ee6b8f9f99af1cf72c3900f88b21", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35e2a4b8423dda850cb7898e30fdd75762226c4b/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35e2a4b8423dda850cb7898e30fdd75762226c4b/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=35e2a4b8423dda850cb7898e30fdd75762226c4b", "patch": "@@ -1,3 +1,8 @@\n+2010-05-08  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/decl.c (gnat_to_gnu_entity): Create variables for size\n+\texpressions of variant part of record types declared at library level.\n+\n 2010-05-08  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/gigi.h (create_field_decl): Move PACKED parameter."}, {"sha": "b0334f2c8edac7080ec77d0cd8234ad7c2eeb7e8", "filename": "gcc/ada/gcc-interface/decl.c", "status": "modified", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35e2a4b8423dda850cb7898e30fdd75762226c4b/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35e2a4b8423dda850cb7898e30fdd75762226c4b/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fdecl.c?ref=35e2a4b8423dda850cb7898e30fdd75762226c4b", "patch": "@@ -4516,8 +4516,62 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, int definition)\n \n \t  if (TREE_CODE (gnu_type) == RECORD_TYPE)\n \t    {\n+\t      tree variant_part = get_variant_part (gnu_type);\n \t      tree ada_size = TYPE_ADA_SIZE (gnu_type);\n \n+\t      if (variant_part)\n+\t\t{\n+\t\t  tree union_type = TREE_TYPE (variant_part);\n+\t\t  tree offset = DECL_FIELD_OFFSET (variant_part);\n+\n+\t\t  /* If the position of the variant part is constant, subtract\n+\t\t     it from the size of the type of the parent to get the new\n+\t\t     size.  This manual CSE reduces the data size.  */\n+\t\t  if (TREE_CODE (offset) == INTEGER_CST)\n+\t\t    {\n+\t\t      tree bitpos = DECL_FIELD_BIT_OFFSET (variant_part);\n+\t\t      TYPE_SIZE (union_type)\n+\t\t\t= size_binop (MINUS_EXPR, TYPE_SIZE (gnu_type),\n+\t\t\t\t      bit_from_pos (offset, bitpos));\n+\t\t      TYPE_SIZE_UNIT (union_type)\n+\t\t\t= size_binop (MINUS_EXPR, TYPE_SIZE_UNIT (gnu_type),\n+\t\t\t\t      byte_from_pos (offset, bitpos));\n+\t\t    }\n+\t\t  else\n+\t\t    {\n+\t\t      TYPE_SIZE (union_type)\n+\t\t\t= elaborate_expression_1 (TYPE_SIZE (union_type),\n+\t\t\t\t\t\t  gnat_entity,\n+\t\t\t\t\t\t  get_identifier (\"VSIZE\"),\n+\t\t\t\t\t\t  definition, false);\n+\n+\t\t      /* ??? For now, store the size as a multiple of the\n+\t\t\t alignment in bytes so that we can see the alignment\n+\t\t\t from the tree.  */\n+\t\t      TYPE_SIZE_UNIT (union_type)\n+\t\t\t= elaborate_expression_2 (TYPE_SIZE_UNIT (union_type),\n+\t\t\t\t\t\t  gnat_entity,\n+\t\t\t\t\t\t  get_identifier\n+\t\t\t\t\t\t  (\"VSIZE_A_UNIT\"),\n+\t\t\t\t\t\t  definition, false,\n+\t\t\t\t\t\t  TYPE_ALIGN (union_type));\n+\n+\t\t      /* ??? For now, store the offset as a multiple of the\n+\t\t\t alignment in bytes so that we can see the alignment\n+\t\t\t from the tree.  */\n+\t\t      DECL_FIELD_OFFSET (variant_part)\n+\t\t\t= elaborate_expression_2 (offset,\n+\t\t\t\t\t\t  gnat_entity,\n+\t\t\t\t\t\t  get_identifier (\"VOFFSET\"),\n+\t\t\t\t\t\t  definition, false,\n+\t\t\t\t\t\t  DECL_OFFSET_ALIGN\n+\t\t\t\t\t\t  (variant_part));\n+\t\t    }\n+\n+\t\t  DECL_SIZE (variant_part) = TYPE_SIZE (union_type);\n+\t\t  DECL_SIZE_UNIT (variant_part) = TYPE_SIZE_UNIT (union_type);\n+\t\t}\n+\n \t      if (operand_equal_p (ada_size, size, 0))\n \t\tada_size = TYPE_SIZE (gnu_type);\n \t      else"}, {"sha": "4a18a2b69dac7447bbde5a618aed79853f8ae591", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35e2a4b8423dda850cb7898e30fdd75762226c4b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35e2a4b8423dda850cb7898e30fdd75762226c4b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=35e2a4b8423dda850cb7898e30fdd75762226c4b", "patch": "@@ -1,3 +1,9 @@\n+2010-05-08  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/specs/lto3.ads: New test.\n+\t* gnat.dg/specs/lto3_pkg1.ad[sb]: New helper.\n+\t* gnat.dg/specs/lto3_pkg2.ad[sb]: Likewise.\n+\n 2010-05-08  Quentin Ochem  <ochem@adacore.com>\n \n \t* gnat.dg/sizetype3.ad[sb]: New test."}, {"sha": "815da5ffa39d6a7117e51fcd9d966deb0049d276", "filename": "gcc/testsuite/gnat.dg/specs/lto3.ads", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35e2a4b8423dda850cb7898e30fdd75762226c4b/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Flto3.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35e2a4b8423dda850cb7898e30fdd75762226c4b/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Flto3.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Flto3.ads?ref=35e2a4b8423dda850cb7898e30fdd75762226c4b", "patch": "@@ -0,0 +1,10 @@\n+-- { dg-do compile }\n+-- { dg-options \"-gnatws -flto\" }\n+\n+with Lto3_Pkg1;\n+\n+package Lto3 is\n+\n+  package P is new Lto3_Pkg1 (Id_T => Natural);\n+\n+end Lto3;"}, {"sha": "34caa3c6c2879364aaf9d98a29ed4a38b750978f", "filename": "gcc/testsuite/gnat.dg/specs/lto3_pkg1.adb", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35e2a4b8423dda850cb7898e30fdd75762226c4b/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Flto3_pkg1.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35e2a4b8423dda850cb7898e30fdd75762226c4b/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Flto3_pkg1.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Flto3_pkg1.adb?ref=35e2a4b8423dda850cb7898e30fdd75762226c4b", "patch": "@@ -0,0 +1,24 @@\n+package body Lto3_Pkg1 is\n+\n+  function Is_Fixed return Boolean is\n+  begin\n+    return True;\n+  end Is_Fixed;\n+\n+  function Do_Item (I : Natural) return Variable_Data_Fixed_T is\n+    It : Variable_Data_Fixed_T;\n+  begin\n+    return It;\n+  end Do_Item;\n+\n+  My_Db : Db.T;\n+\n+  procedure Run is\n+    Kitem : Variable_Data_Fixed_T;\n+    I : Natural;\n+  begin\n+    Kitem := Db.Get (My_Db);\n+    Kitem := Do_Item (I);\n+  end Run;\n+\n+end Lto3_Pkg1;"}, {"sha": "5619b60c77396f527c24a46d98c0101c6289bf6b", "filename": "gcc/testsuite/gnat.dg/specs/lto3_pkg1.ads", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35e2a4b8423dda850cb7898e30fdd75762226c4b/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Flto3_pkg1.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35e2a4b8423dda850cb7898e30fdd75762226c4b/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Flto3_pkg1.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Flto3_pkg1.ads?ref=35e2a4b8423dda850cb7898e30fdd75762226c4b", "patch": "@@ -0,0 +1,26 @@\n+-- { dg-excess-errors \"no code generated\" }\n+\n+with Lto3_Pkg2;\n+\n+generic\n+  type Id_T is range <>;\n+package Lto3_Pkg1 is\n+\n+  type Variable_Data_T (Fixed : Boolean := False) is\n+    record\n+      case Fixed is\n+        when True =>\n+          Length : Natural;\n+        when False =>\n+          null;\n+      end case;\n+    end record;\n+\n+  function Is_Fixed return Boolean;\n+\n+  type Variable_Data_Fixed_T is new Variable_Data_T (Is_Fixed);\n+\n+  package Db is new Lto3_Pkg2 (Id_T => Id_T,\n+                               Data_T => Variable_Data_Fixed_T);\n+\n+end Lto3_Pkg1;"}, {"sha": "d95fe60dd4190bdc6ae7abc0f4ed55b1cb56a34f", "filename": "gcc/testsuite/gnat.dg/specs/lto3_pkg2.adb", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35e2a4b8423dda850cb7898e30fdd75762226c4b/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Flto3_pkg2.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35e2a4b8423dda850cb7898e30fdd75762226c4b/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Flto3_pkg2.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Flto3_pkg2.adb?ref=35e2a4b8423dda850cb7898e30fdd75762226c4b", "patch": "@@ -0,0 +1,7 @@\n+package body Lto3_Pkg2 is\n+  function Get (X : T) return Data_T is\n+    Result : Data_T;\n+  begin\n+    return Result;\n+  end;\n+end Lto3_Pkg2;"}, {"sha": "52fdccb90ef10ecfafaea402477cc49dec7ab9d2", "filename": "gcc/testsuite/gnat.dg/specs/lto3_pkg2.ads", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35e2a4b8423dda850cb7898e30fdd75762226c4b/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Flto3_pkg2.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35e2a4b8423dda850cb7898e30fdd75762226c4b/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Flto3_pkg2.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Flto3_pkg2.ads?ref=35e2a4b8423dda850cb7898e30fdd75762226c4b", "patch": "@@ -0,0 +1,11 @@\n+-- { dg-excess-errors \"no code generated\" }\n+\n+generic\n+  type Id_T is private;\n+  type Data_T is private;\n+package Lto3_Pkg2 is\n+  type T is private;\n+  function Get (X : T) return Data_T;\n+private\n+  type T is null record;\n+end Lto3_Pkg2;"}]}