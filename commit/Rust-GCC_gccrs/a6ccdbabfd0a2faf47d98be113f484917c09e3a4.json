{"sha": "a6ccdbabfd0a2faf47d98be113f484917c09e3a4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTZjY2RiYWJmZDBhMmZhZjQ3ZDk4YmUxMTNmNDg0OTE3YzA5ZTNhNA==", "commit": {"author": {"name": "Eric Christopher", "email": "echristo@gcc.gnu.org", "date": "2007-01-07T23:53:21Z"}, "committer": {"name": "Eric Christopher", "email": "echristo@gcc.gnu.org", "date": "2007-01-07T23:53:21Z"}, "message": "configure.ac: Check for __stack_chk_fail for darwin.\n\n2007-01-07  Eric Christopher  <echristo@apple.com>\n\n        * configure.ac: Check for __stack_chk_fail for darwin.\n        * configure: Regenerate.\n\nFrom-SVN: r120559", "tree": {"sha": "32be05b2175477a45eb748ad4f6a776db86c9821", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/32be05b2175477a45eb748ad4f6a776db86c9821"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a6ccdbabfd0a2faf47d98be113f484917c09e3a4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6ccdbabfd0a2faf47d98be113f484917c09e3a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6ccdbabfd0a2faf47d98be113f484917c09e3a4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6ccdbabfd0a2faf47d98be113f484917c09e3a4/comments", "author": null, "committer": null, "parents": [{"sha": "16fd4d2d7102abb179d958d10ba6cf28d8f621a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16fd4d2d7102abb179d958d10ba6cf28d8f621a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16fd4d2d7102abb179d958d10ba6cf28d8f621a6"}], "stats": {"total": 11022, "additions": 5770, "deletions": 5252}, "files": [{"sha": "b297e649a6f62f06dbde32daf199d7fda288469b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6ccdbabfd0a2faf47d98be113f484917c09e3a4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6ccdbabfd0a2faf47d98be113f484917c09e3a4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a6ccdbabfd0a2faf47d98be113f484917c09e3a4", "patch": "@@ -1,3 +1,8 @@\n+2007-01-07  Eric Christopher  <echristo@apple.com>\n+\n+\t* configure.ac: Check for __stack_chk_fail for darwin.\n+\t* configure: Regenerate.\n+\n 2007-01-07  Richard Guenther  <rguenther@suse.de>\n \n \t* tree-vrp.c (extract_range_from_assert): CSE calls to\n@@ -10,7 +15,7 @@\n \t* config/avr/avr.c (call_insn_operand): Delete function.\n \t* config/avr/avr.md (*pushqi, *pushhi, *pushsi, *pushsf): Use REG_SP\n \tinstead of register number. Use predicates.\n-\t* config/avr/predicates.md (const0_operand, reg_or_0_operand, \n+\t* config/avr/predicates.md (const0_operand, reg_or_0_operand,\n \tcall_insn_operand): Add.\n \n 2007-01-06  Jan Hubicka  <jh@suse.cz>"}, {"sha": "7005ee4fdbaedba15f33d212742c7e338517c80b", "filename": "gcc/configure", "status": "modified", "additions": 5753, "deletions": 5246, "changes": 10999, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6ccdbabfd0a2faf47d98be113f484917c09e3a4/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6ccdbabfd0a2faf47d98be113f484917c09e3a4/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=a6ccdbabfd0a2faf47d98be113f484917c09e3a4"}, {"sha": "ddacafb6013718b934aa05a06acbfda040ba5f28", "filename": "gcc/configure.ac", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6ccdbabfd0a2faf47d98be113f484917c09e3a4/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6ccdbabfd0a2faf47d98be113f484917c09e3a4/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=a6ccdbabfd0a2faf47d98be113f484917c09e3a4", "patch": "@@ -3328,11 +3328,11 @@ if test x$with_sysroot = x && test x$host = x$target \\\n fi\n \n # Test for stack protector support in target C library.\n-case \"$target\" in\n-  *-*-linux*)\n-    AC_CACHE_CHECK(__stack_chk_fail in target GNU C library,\n+AC_CACHE_CHECK(__stack_chk_fail in target C library,\n       gcc_cv_libc_provides_ssp,\n       [gcc_cv_libc_provides_ssp=no\n+    case \"$target\" in\n+       *-*-linux*)\n       if test x$host != x$target || test \"x$TARGET_SYSTEM_ROOT\" != x; then\n \tif test \"x$with_sysroot\" = x; then\n \t  glibc_header_dir=\"${exec_prefix}/${target_noncanonical}/sys-include\"\n@@ -3358,9 +3358,15 @@ case \"$target\" in\n \t     $glibc_header_dir/features.h > /dev/null; then\n \t  gcc_cv_libc_provides_ssp=yes\n \tfi\n-      fi]) ;;\n+        fi\n+\t;;\n+       *-*-darwin*)\n+\t AC_CHECK_FUNC(__stack_chk_fail,[gcc_cv_libc_provides_ssp=yes],\n+           [echo \"no __stack_chk_fail on this target\"])\n+        ;;\n   *) gcc_cv_libc_provides_ssp=no ;;\n-esac\n+    esac])\n+\n if test x$gcc_cv_libc_provides_ssp = xyes; then\n   AC_DEFINE(TARGET_LIBC_PROVIDES_SSP, 1,\n \t    [Define if your target C library provides stack protector support])"}]}