{"sha": "6cc61b5a37376a87637c1ada009976ae59e134f9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmNjNjFiNWEzNzM3NmE4NzYzN2MxYWRhMDA5OTc2YWU1OWUxMzRmOQ==", "commit": {"author": {"name": "Robin Dapp", "email": "rdapp@linux.vnet.ibm.com", "date": "2017-03-06T12:43:33Z"}, "committer": {"name": "Andreas Krebbel", "email": "krebbel@gcc.gnu.org", "date": "2017-03-06T12:43:33Z"}, "message": "S/390: Disable vectorization for loops with few iterations\n\nThe following patch defines the PARAM_MIN_VECT_LOOP_BOUND parameter in\nthe s390 backend.  It helps with the vectorization epilogue problem\ndescribed here [1].\nI see an overall performance increase of > 1% in SPECfp2006, yet some\ncases like cactusADM regress.  This seems to be caused by the vectorizer\ncreating an epilogue guard for one more iteration than before, which, in\nturn, causes e.g. predcom to run on the epilogue that it used to ignore\nbefore (\"Loop iterates only 1 time, nothing to do.\").  Subsequent,\nminor, effects cause an eventual slowdown.\n\nUntil the reason for the bad epilogue code is understood, this patch\nmitigates the problem.  When investigating the issue, I stumbled across\nan attempt to vectorize the epilogue itself as well as combine it with\nthe vectorized loop in addition to vector masking [2].  A similar\napproach might also help here.  My original observation of high register\npressure within the epilogue still stands.  In this specific case, it\nwould most likely suffice to save all registers once, run the epilogue\nand restore the registers.  I'm pretty sure this would be faster than\nthe \"spill fest\" that's currently happening.\n\nRegards\n Robin\n\n[1] https://gcc.gnu.org/ml/gcc/2017-01/msg00234.html\n[2] https://gcc.gnu.org/ml/gcc-patches/2016-05/msg01562.html\n\ngcc/ChangeLog:\n\n2017-03-06  Robin Dapp  <rdapp@linux.vnet.ibm.com>\n\n\t* config/s390/s390.c (s390_option_override_internal): Set\n\tPARAM_MIN_VECT_LOOP_BOUND\n\nFrom-SVN: r245918", "tree": {"sha": "819ba4d85717f556f1eb4d1c8a67572113778634", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/819ba4d85717f556f1eb4d1c8a67572113778634"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6cc61b5a37376a87637c1ada009976ae59e134f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6cc61b5a37376a87637c1ada009976ae59e134f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6cc61b5a37376a87637c1ada009976ae59e134f9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6cc61b5a37376a87637c1ada009976ae59e134f9/comments", "author": {"login": "rdapp1", "id": 22046046, "node_id": "MDQ6VXNlcjIyMDQ2MDQ2", "avatar_url": "https://avatars.githubusercontent.com/u/22046046?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rdapp1", "html_url": "https://github.com/rdapp1", "followers_url": "https://api.github.com/users/rdapp1/followers", "following_url": "https://api.github.com/users/rdapp1/following{/other_user}", "gists_url": "https://api.github.com/users/rdapp1/gists{/gist_id}", "starred_url": "https://api.github.com/users/rdapp1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rdapp1/subscriptions", "organizations_url": "https://api.github.com/users/rdapp1/orgs", "repos_url": "https://api.github.com/users/rdapp1/repos", "events_url": "https://api.github.com/users/rdapp1/events{/privacy}", "received_events_url": "https://api.github.com/users/rdapp1/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4bbc8970688295e9883f152ea84fb7d8cbd6e877", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4bbc8970688295e9883f152ea84fb7d8cbd6e877", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4bbc8970688295e9883f152ea84fb7d8cbd6e877"}], "stats": {"total": 9, "additions": 9, "deletions": 0}, "files": [{"sha": "1176ec3e4653e5cc6474b53c1bf73ddad2f17281", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cc61b5a37376a87637c1ada009976ae59e134f9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cc61b5a37376a87637c1ada009976ae59e134f9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6cc61b5a37376a87637c1ada009976ae59e134f9", "patch": "@@ -1,3 +1,8 @@\n+2017-03-06  Robin Dapp  <rdapp@linux.vnet.ibm.com>\n+\n+\t* config/s390/s390.c (s390_option_override_internal): Set\n+\tPARAM_MIN_VECT_LOOP_BOUND\n+\n 2017-03-06  Robin Dapp  <rdapp@linux.vnet.ibm.com>\n \n \t* config/s390/s390.c (s390_asm_output_function_label): Use nopr %r0."}, {"sha": "e7ab128252bb0d9cb2800da02ec464c13023f6a8", "filename": "gcc/config/s390/s390.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cc61b5a37376a87637c1ada009976ae59e134f9/gcc%2Fconfig%2Fs390%2Fs390.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cc61b5a37376a87637c1ada009976ae59e134f9/gcc%2Fconfig%2Fs390%2Fs390.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.c?ref=6cc61b5a37376a87637c1ada009976ae59e134f9", "patch": "@@ -14679,6 +14679,10 @@ s390_option_override_internal (bool main_args_p,\n                          opts->x_param_values,\n                          opts_set->x_param_values);\n \n+  maybe_set_param_value (PARAM_MIN_VECT_LOOP_BOUND, 2,\n+\t\t\t opts->x_param_values,\n+\t\t\t opts_set->x_param_values);\n+\n   /* Call target specific restore function to do post-init work.  At the moment,\n      this just sets opts->x_s390_cost_pointer.  */\n   s390_function_specific_restore (opts, NULL);"}]}