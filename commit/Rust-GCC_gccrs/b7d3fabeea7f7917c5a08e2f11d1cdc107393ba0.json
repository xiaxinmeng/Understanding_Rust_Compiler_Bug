{"sha": "b7d3fabeea7f7917c5a08e2f11d1cdc107393ba0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjdkM2ZhYmVlYTdmNzkxN2M1YTA4ZTJmMTFkMWNkYzEwNzM5M2JhMA==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-04-17T02:59:23Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-04-17T02:59:23Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r755", "tree": {"sha": "3480ba286fea2b79c7a7201ac1feafeca08d8b56", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3480ba286fea2b79c7a7201ac1feafeca08d8b56"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b7d3fabeea7f7917c5a08e2f11d1cdc107393ba0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7d3fabeea7f7917c5a08e2f11d1cdc107393ba0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b7d3fabeea7f7917c5a08e2f11d1cdc107393ba0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7d3fabeea7f7917c5a08e2f11d1cdc107393ba0/comments", "author": null, "committer": null, "parents": [{"sha": "fc3ffe83097fb810cac84d2b2007a25833684d74", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc3ffe83097fb810cac84d2b2007a25833684d74", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc3ffe83097fb810cac84d2b2007a25833684d74"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "98e07b9259097ac7869770e7671377a4c65c7f53", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7d3fabeea7f7917c5a08e2f11d1cdc107393ba0/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7d3fabeea7f7917c5a08e2f11d1cdc107393ba0/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=b7d3fabeea7f7917c5a08e2f11d1cdc107393ba0", "patch": "@@ -63,6 +63,15 @@ enum processor_type {\n   PROCESSOR_R4000\n };\n \n+/* Which type of block move to do (whether or not the last store is\n+   split out so it can fill a branch delay slot).  */\n+\n+enum block_move_type {\n+  BLOCK_MOVE_NORMAL,\t\t\t/* generate complete block move */\n+  BLOCK_MOVE_NOT_LAST,\t\t\t/* generate all but last store */\n+  BLOCK_MOVE_LAST\t\t\t/* generate just the last store */\n+};\n+\n extern char mips_reg_names[][8];\t/* register names (a0 vs. $4). */\n extern char mips_print_operand_punct[];\t/* print_operand punctuation chars */\n extern char *current_function_name;\t/* current function being compiled */\n@@ -638,7 +647,7 @@ do {\t\t\t\t\t\t\t\\\n #define MASK_DEBUG_A\t0x20000000\t/* don't allow <label>($reg) addrs */\n #define MASK_DEBUG_B\t0x10000000\t/* GO_IF_LEGITIMATE_ADDRESS debug */\n #define MASK_DEBUG_C\t0x08000000\t/* suppress normal divmod patterns */\n-#define MASK_DEBUG_D\t0x04000000\t/* make multiply cost 2 */\n+#define MASK_DEBUG_D\t0x04000000\t/* don't do define_split's */\n #define MASK_DEBUG_E\t0x02000000\t/* function_arg debug */\n #define MASK_DEBUG_F\t0x01000000\t/* don't try to suppress load nop's */\n #define MASK_DEBUG_G\t0x00800000\t/* don't support 64 bit arithmetic */\n@@ -2313,7 +2322,7 @@ while (0)\n       if (xmode == DFmode)\t\t\t\t\t\t\\\n \treturn COSTS_N_INSNS (5);\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n-      return COSTS_N_INSNS ((TARGET_DEBUG_D_MODE) ? 2 : 12);\t\t\\\n+      return COSTS_N_INSNS (12);\t\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n   case DIV:\t\t\t\t\t\t\t\t\\"}]}