{"sha": "671b487dc35fcde6a5f611e0714b419953c4c3ed", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjcxYjQ4N2RjMzVmY2RlNmE1ZjYxMWUwNzE0YjQxOTk1M2M0YzNlZA==", "commit": {"author": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2011-12-05T20:11:44Z"}, "committer": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2011-12-05T20:11:44Z"}, "message": "re PR fortran/51338 (seg fault in gfc_dep_compare_expr with -O2)\n\n2011-12-05  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR fortran/51338\n\t* dependency.c (are_identical_variables):  Handle case where\n\tend fields of substring references are NULL.\n\n2011-12-05  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR fortran/51338\n\t* gfortran.dg/assumed_charlen_substring_1.f90:  New test.\n\nFrom-SVN: r182024", "tree": {"sha": "c5b6e6f68359e2c8fa107517990e42bcb8657d51", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c5b6e6f68359e2c8fa107517990e42bcb8657d51"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/671b487dc35fcde6a5f611e0714b419953c4c3ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/671b487dc35fcde6a5f611e0714b419953c4c3ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/671b487dc35fcde6a5f611e0714b419953c4c3ed", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/671b487dc35fcde6a5f611e0714b419953c4c3ed/comments", "author": null, "committer": null, "parents": [{"sha": "dfa51991efb62e04c7b41d9825d0cff12061e2e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dfa51991efb62e04c7b41d9825d0cff12061e2e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dfa51991efb62e04c7b41d9825d0cff12061e2e4"}], "stats": {"total": 37, "additions": 34, "deletions": 3}, "files": [{"sha": "4b23c58e4b57131e3488ac97d64f232a85dc68ab", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/671b487dc35fcde6a5f611e0714b419953c4c3ed/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/671b487dc35fcde6a5f611e0714b419953c4c3ed/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=671b487dc35fcde6a5f611e0714b419953c4c3ed", "patch": "@@ -1,3 +1,9 @@\n+2011-12-05  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/51338\n+\t* dependency.c (are_identical_variables):  Handle case where\n+\tend fields of substring references are NULL.\n+\n 2011-12-04  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/51383\n@@ -12,7 +18,7 @@\n \t* class.c (gfc_build_class_symbol): Handle\n \tattr.select_type_temporary.\n \n-2011-12-03  Tobias Burnus  <burnus@net-b.de>                                                                                                           \n+2011-12-03  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/50684\n \t* check.c (variable_check): Fix intent(in) check."}, {"sha": "96c4e5fd990ca41e71f38a10c17f52a2aa998683", "filename": "gcc/fortran/dependency.c", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/671b487dc35fcde6a5f611e0714b419953c4c3ed/gcc%2Ffortran%2Fdependency.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/671b487dc35fcde6a5f611e0714b419953c4c3ed/gcc%2Ffortran%2Fdependency.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdependency.c?ref=671b487dc35fcde6a5f611e0714b419953c4c3ed", "patch": "@@ -173,9 +173,19 @@ are_identical_variables (gfc_expr *e1, gfc_expr *e2)\n \t  break;\n \n \tcase REF_SUBSTRING:\n-\t  if (gfc_dep_compare_expr (r1->u.ss.start, r2->u.ss.start) != 0\n-\t      || gfc_dep_compare_expr (r1->u.ss.end, r2->u.ss.end) != 0)\n+\t  if (gfc_dep_compare_expr (r1->u.ss.start, r2->u.ss.start) != 0)\n \t    return false;\n+\n+\t  /* If both are NULL, the end length compares equal, because we\n+\t     are looking at the same variable. This can only happen for\n+\t     assumed- or deferred-length character arguments.  */ \n+\n+\t  if (r1->u.ss.end == NULL && r2->u.ss.end == NULL)\n+\t    break;\n+\n+\t  if (gfc_dep_compare_expr (r1->u.ss.end, r2->u.ss.end) != 0)\n+\t    return false;\n+\t  \n \t  break;\n \n \tdefault:"}, {"sha": "bf505cea3f7ba5eec229e3302ada94f658bcb4b1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/671b487dc35fcde6a5f611e0714b419953c4c3ed/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/671b487dc35fcde6a5f611e0714b419953c4c3ed/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=671b487dc35fcde6a5f611e0714b419953c4c3ed", "patch": "@@ -1,3 +1,8 @@\n+2011-12-05  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/51338\n+\t* gfortran.dg/assumed_charlen_substring_1.f90:  New test.\n+\n 2011-12-05  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \t* g++.dg/debug/pr46338.C: Add dg-require-profiling."}, {"sha": "b4697dc7bbfb652c0218f1d1b6d0ec90c4558c05", "filename": "gcc/testsuite/gfortran.dg/assumed_charlen_substring_1.f90", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/671b487dc35fcde6a5f611e0714b419953c4c3ed/gcc%2Ftestsuite%2Fgfortran.dg%2Fassumed_charlen_substring_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/671b487dc35fcde6a5f611e0714b419953c4c3ed/gcc%2Ftestsuite%2Fgfortran.dg%2Fassumed_charlen_substring_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fassumed_charlen_substring_1.f90?ref=671b487dc35fcde6a5f611e0714b419953c4c3ed", "patch": "@@ -0,0 +1,10 @@\n+! { dg-do compile }\n+! { dg-options \"-O -fdump-tree-original\" }\n+! PR 51338 - this used to ICE.\n+! Original test case by Bud Davis.\n+subroutine foo(a,b)\n+  character(len=*) :: a\n+  if (a(1:) /= a(1:)) call do_not_use\n+end subroutine foo\n+! { dg-final { scan-tree-dump-times \"do_not_use\" 0 \"original\" } }\n+! { dg-final { cleanup-tree-dump \"original\" } }"}]}