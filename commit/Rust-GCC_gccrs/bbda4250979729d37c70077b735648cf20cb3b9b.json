{"sha": "bbda4250979729d37c70077b735648cf20cb3b9b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmJkYTQyNTA5Nzk3MjlkMzdjNzAwNzdiNzM1NjQ4Y2YyMGNiM2I5Yg==", "commit": {"author": {"name": "Jason Merrill", "email": "merrill@gnu.org", "date": "1995-05-24T21:46:55Z"}, "committer": {"name": "Jason Merrill", "email": "merrill@gnu.org", "date": "1995-05-24T21:46:55Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r9811", "tree": {"sha": "fc19b7cc8c54a89cfd150ad491ab102fe91cd985", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fc19b7cc8c54a89cfd150ad491ab102fe91cd985"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bbda4250979729d37c70077b735648cf20cb3b9b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bbda4250979729d37c70077b735648cf20cb3b9b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bbda4250979729d37c70077b735648cf20cb3b9b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bbda4250979729d37c70077b735648cf20cb3b9b/comments", "author": null, "committer": null, "parents": [{"sha": "58fe4e59f7f023bc2214d6e82e598f99bbedf90e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58fe4e59f7f023bc2214d6e82e598f99bbedf90e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/58fe4e59f7f023bc2214d6e82e598f99bbedf90e"}], "stats": {"total": 7, "additions": 3, "deletions": 4}, "files": [{"sha": "08b51bacbff3c208d8a0b9d72db8920838b82a72", "filename": "gcc/tree.c", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbda4250979729d37c70077b735648cf20cb3b9b/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbda4250979729d37c70077b735648cf20cb3b9b/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=bbda4250979729d37c70077b735648cf20cb3b9b", "patch": "@@ -3414,10 +3414,9 @@ type_list_equal (l1, l2)\n   for (t1 = l1, t2 = l2; t1 && t2; t1 = TREE_CHAIN (t1), t2 = TREE_CHAIN (t2))\n     if (TREE_VALUE (t1) != TREE_VALUE (t2)\n \t|| (TREE_PURPOSE (t1) != TREE_PURPOSE (t2)\n-\t    && ! ((TREE_TYPE (TREE_PURPOSE (t1))\n-\t\t   == TREE_TYPE (TREE_PURPOSE (t2)))\n-\t\t  && 1 == simple_cst_equal (TREE_PURPOSE (t1),\n-\t\t\t\t\t    TREE_PURPOSE (t2)))))\n+\t    && ! (1 == simple_cst_equal (TREE_PURPOSE (t1), TREE_PURPOSE (t2))\n+\t\t  && (TREE_TYPE (TREE_PURPOSE (t1))\n+\t\t      == TREE_TYPE (TREE_PURPOSE (t2))))))\n       return 0;\n \n   return t1 == t2;"}]}