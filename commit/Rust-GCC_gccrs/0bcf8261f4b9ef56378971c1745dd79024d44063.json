{"sha": "0bcf8261f4b9ef56378971c1745dd79024d44063", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGJjZjgyNjFmNGI5ZWY1NjM3ODk3MWMxNzQ1ZGQ3OTAyNGQ0NDA2Mw==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2004-01-11T15:56:26Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2004-01-11T15:56:26Z"}, "message": "Partial fix for PR opt/10776\n\n\tPartial fix for PR opt/10776\n\t* Makefile.in (reload.o): Include param.h\n\t* params.def (PARAM_MAX_RELOAD_SEARCH_INSNS): New parameter.\n\t* reload.c: Include params.h.\n\t(find_equiv_reg): Work limiting check.\n\t* invoke.texi: Document.\n\nFrom-SVN: r75679", "tree": {"sha": "3185f928992e2f2f2b6335b02ae5207faecec34a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3185f928992e2f2f2b6335b02ae5207faecec34a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0bcf8261f4b9ef56378971c1745dd79024d44063", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0bcf8261f4b9ef56378971c1745dd79024d44063", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0bcf8261f4b9ef56378971c1745dd79024d44063", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0bcf8261f4b9ef56378971c1745dd79024d44063/comments", "author": null, "committer": null, "parents": [{"sha": "09625c1681b30febed411fa7526cf4b620a54ab3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09625c1681b30febed411fa7526cf4b620a54ab3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/09625c1681b30febed411fa7526cf4b620a54ab3"}], "stats": {"total": 31, "additions": 29, "deletions": 2}, "files": [{"sha": "5dee099d179e1b215312b42adfa66ef4b1d4ab31", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0bcf8261f4b9ef56378971c1745dd79024d44063/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0bcf8261f4b9ef56378971c1745dd79024d44063/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0bcf8261f4b9ef56378971c1745dd79024d44063", "patch": "@@ -1,3 +1,12 @@\n+2004-01-11  Jan Hubicka  <jh@suse.cz>\n+\n+\tPartial fix for PR opt/10776\n+\t* Makefile.in (reload.o): Include param.h\n+\t* params.def (PARAM_MAX_RELOAD_SEARCH_INSNS): New parameter.\n+\t* reload.c: Include params.h.\n+\t(find_equiv_reg): Work limiting check.\n+\t* invoke.texi: Document.\n+\n 2004-01-11  Richard Sandiford  <rsandifo@redhat.com>\n \n \t* config/mips/mips.c (mips_symbolic_constant_p): Don't allow"}, {"sha": "fde9b844cbb87e306fafbd32f9388f0d87e55a54", "filename": "gcc/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0bcf8261f4b9ef56378971c1745dd79024d44063/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0bcf8261f4b9ef56378971c1745dd79024d44063/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=0bcf8261f4b9ef56378971c1745dd79024d44063", "patch": "@@ -1755,7 +1755,7 @@ ra-rewrite.o : ra-rewrite.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H)\n    output.h except.h ra.h reload.h insn-config.h\n reload.o : reload.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) flags.h output.h \\\n    $(EXPR_H) $(OPTABS_H) reload.h $(RECOG_H) hard-reg-set.h insn-config.h \\\n-   $(REGS_H) function.h real.h toplev.h $(TM_P_H)\n+   $(REGS_H) function.h real.h toplev.h $(TM_P_H) $(PARAMS_H)\n reload1.o : reload1.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) real.h flags.h \\\n    $(EXPR_H) $(OPTABS_H) reload.h $(REGS_H) hard-reg-set.h insn-config.h \\\n    $(BASIC_BLOCK_H) $(RECOG_H) output.h function.h toplev.h $(TM_P_H) \\"}, {"sha": "2431cc7af312ce7f4672afb77261a3562bd2ffa3", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0bcf8261f4b9ef56378971c1745dd79024d44063/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0bcf8261f4b9ef56378971c1745dd79024d44063/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=0bcf8261f4b9ef56378971c1745dd79024d44063", "patch": "@@ -4853,6 +4853,14 @@ parameter very large effectively disables garbage collection.  Setting\n this parameter and @option{ggc-min-expand} to zero causes a full\n collection to occur at every opportunity.\n \n+@table @gcctabopt\n+@item max-reload-search-insns\n+The maximum number of instruction reload should look backward for equivalent\n+register.  Increasing values mean more aggressive optimization, making the\n+compile time increase with probably slightly better performance.  The default\n+value is 100.\n+\n+\n @item reorder-blocks-duplicate\n @itemx reorder-blocks-duplicate-feedback\n "}, {"sha": "a5b3099ca0e0b148799ce27c70d650fbe62b8b93", "filename": "gcc/params.def", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0bcf8261f4b9ef56378971c1745dd79024d44063/gcc%2Fparams.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0bcf8261f4b9ef56378971c1745dd79024d44063/gcc%2Fparams.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fparams.def?ref=0bcf8261f4b9ef56378971c1745dd79024d44063", "patch": "@@ -260,6 +260,11 @@ DEFPARAM(GGC_MIN_HEAPSIZE,\n #undef GGC_MIN_EXPAND_DEFAULT\n #undef GGC_MIN_HEAPSIZE_DEFAULT\n \n+DEFPARAM(PARAM_MAX_RELOAD_SEARCH_INSNS,\n+\t \"max-reload-search-insns\",\n+\t \"The maximum number of instructions to search backward when looking for equivalent reload\",\n+\t 100)\n+\n /*\n Local variables:\n mode:c"}, {"sha": "361a5029cee484f3ee4fd8921708ae58a0873150", "filename": "gcc/reload.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0bcf8261f4b9ef56378971c1745dd79024d44063/gcc%2Freload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0bcf8261f4b9ef56378971c1745dd79024d44063/gcc%2Freload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload.c?ref=0bcf8261f4b9ef56378971c1745dd79024d44063", "patch": "@@ -104,6 +104,7 @@ a register with any other reload.  */\n #include \"output.h\"\n #include \"function.h\"\n #include \"toplev.h\"\n+#include \"params.h\"\n \n #ifndef REGNO_MODE_OK_FOR_BASE_P\n #define REGNO_MODE_OK_FOR_BASE_P(REGNO, MODE) REGNO_OK_FOR_BASE_P (REGNO)\n@@ -6383,6 +6384,7 @@ find_equiv_reg (rtx goal, rtx insn, enum reg_class class, int other,\n   int need_stable_sp = 0;\n   int nregs;\n   int valuenregs;\n+  int num = 0;\n \n   if (goal == 0)\n     regno = goalreg;\n@@ -6423,14 +6425,17 @@ find_equiv_reg (rtx goal, rtx insn, enum reg_class class, int other,\n   else\n     return 0;\n \n+  num = 0;\n   /* Scan insns back from INSN, looking for one that copies\n      a value into or out of GOAL.\n      Stop and give up if we reach a label.  */\n \n   while (1)\n     {\n       p = PREV_INSN (p);\n-      if (p == 0 || GET_CODE (p) == CODE_LABEL)\n+      num++;\n+      if (p == 0 || GET_CODE (p) == CODE_LABEL\n+\t  || num > PARAM_VALUE (PARAM_MAX_RELOAD_SEARCH_INSNS))\n \treturn 0;\n \n       if (GET_CODE (p) == INSN"}]}