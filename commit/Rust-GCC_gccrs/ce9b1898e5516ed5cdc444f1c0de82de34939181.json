{"sha": "ce9b1898e5516ed5cdc444f1c0de82de34939181", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2U5YjE4OThlNTUxNmVkNWNkYzQ0NGYxYzBkZTgyZGUzNDkzOTE4MQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-05-25T19:51:54Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-05-25T19:51:54Z"}, "message": "re PR c++/46245 ([C++0x] rejects function with late-specified return type as a non-type template parameter)\n\n\tPR c++/46245\n\t* decl.c (grokdeclarator): Complain later for auto parameter.\n\t* pt.c (splice_late_return_type): Handle use in a template\n\ttype-parameter.\n\nFrom-SVN: r174227", "tree": {"sha": "4479a705d9bb9315f2625bd328fe3e0aeca05493", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4479a705d9bb9315f2625bd328fe3e0aeca05493"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ce9b1898e5516ed5cdc444f1c0de82de34939181", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce9b1898e5516ed5cdc444f1c0de82de34939181", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce9b1898e5516ed5cdc444f1c0de82de34939181", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce9b1898e5516ed5cdc444f1c0de82de34939181/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5e24286319abceaee8846843c89c5c6332d25e51", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e24286319abceaee8846843c89c5c6332d25e51", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5e24286319abceaee8846843c89c5c6332d25e51"}], "stats": {"total": 39, "additions": 28, "deletions": 11}, "files": [{"sha": "d78f18324edd025a42ce41feca0c1bb9480b8125", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce9b1898e5516ed5cdc444f1c0de82de34939181/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce9b1898e5516ed5cdc444f1c0de82de34939181/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=ce9b1898e5516ed5cdc444f1c0de82de34939181", "patch": "@@ -1,5 +1,10 @@\n 2011-05-25  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/46245\n+\t* decl.c (grokdeclarator): Complain later for auto parameter.\n+\t* pt.c (splice_late_return_type): Handle use in a template\n+\ttype-parameter.\n+\n \tPR c++/46696\n \t* typeck.c (cp_build_modify_expr): Check DECL_DEFAULTED_FN.\n "}, {"sha": "8000441d06f82c40f64fea9023d6bf4246a92404", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce9b1898e5516ed5cdc444f1c0de82de34939181/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce9b1898e5516ed5cdc444f1c0de82de34939181/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=ce9b1898e5516ed5cdc444f1c0de82de34939181", "patch": "@@ -8741,12 +8741,6 @@ grokdeclarator (const cp_declarator *declarator,\n \t       || thread_p)\n \terror (\"storage class specifiers invalid in parameter declarations\");\n \n-      if (type_uses_auto (type))\n-\t{\n-\t  error (\"parameter declared %<auto%>\");\n-\t  type = error_mark_node;\n-\t}\n-\n       /* Function parameters cannot be constexpr.  If we saw one, moan\n          and pretend it wasn't there.  */\n       if (constexpr_p)\n@@ -9727,6 +9721,12 @@ grokdeclarator (const cp_declarator *declarator,\n       if (ctype || in_namespace)\n \terror (\"cannot use %<::%> in parameter declaration\");\n \n+      if (type_uses_auto (type))\n+\t{\n+\t  error (\"parameter declared %<auto%>\");\n+\t  type = error_mark_node;\n+\t}\n+\n       /* A parameter declared as an array of T is really a pointer to T.\n \t One declared as a function is really a pointer to a function.\n \t One declared as a member is really a pointer to member.  */"}, {"sha": "c3c759e38aa660dbcd2c73fb1ff986c4ef1197c5", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce9b1898e5516ed5cdc444f1c0de82de34939181/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce9b1898e5516ed5cdc444f1c0de82de34939181/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=ce9b1898e5516ed5cdc444f1c0de82de34939181", "patch": "@@ -19315,7 +19315,12 @@ splice_late_return_type (tree type, tree late_return_type)\n     return type;\n   argvec = make_tree_vec (1);\n   TREE_VEC_ELT (argvec, 0) = late_return_type;\n-  if (processing_template_decl)\n+  if (processing_template_parmlist)\n+    /* For a late-specified return type in a template type-parameter, we\n+       need to add a dummy argument level for its parmlist.  */\n+    argvec = add_to_template_args\n+      (make_tree_vec (processing_template_parmlist), argvec);\n+  if (current_template_parms)\n     argvec = add_to_template_args (current_template_args (), argvec);\n   return tsubst (type, argvec, tf_warning_or_error, NULL_TREE);\n }"}, {"sha": "3cc818adc80731406d6872328463ac95dfdebb2d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce9b1898e5516ed5cdc444f1c0de82de34939181/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce9b1898e5516ed5cdc444f1c0de82de34939181/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ce9b1898e5516ed5cdc444f1c0de82de34939181", "patch": "@@ -1,5 +1,8 @@\n 2011-05-25  Jason Merrill  <jason@redhat.com>\n \n+\t* g++.dg/cpp0x/auto23.C: New.\n+\t* g++.dg/cpp0x/auto9.C: Adjust.\n+\n \t* g++.dg/cpp0x/defaulted29.C: New.\n \n \t* g++.dg/cpp0x/initlist51.C: New."}, {"sha": "49b5a0eb9e83bf83691cf5ede8061394f95e47e2", "filename": "gcc/testsuite/g++.dg/cpp0x/auto23.C", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce9b1898e5516ed5cdc444f1c0de82de34939181/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto23.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce9b1898e5516ed5cdc444f1c0de82de34939181/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto23.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto23.C?ref=ce9b1898e5516ed5cdc444f1c0de82de34939181", "patch": "@@ -0,0 +1,4 @@\n+// PR c++/46245\n+// { dg-options -std=c++0x }\n+\n+template<auto f()->int> struct A { };"}, {"sha": "142ef904f2d7d74add48eb0b810e719b2eba2235", "filename": "gcc/testsuite/g++.dg/cpp0x/auto9.C", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce9b1898e5516ed5cdc444f1c0de82de34939181/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce9b1898e5516ed5cdc444f1c0de82de34939181/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto9.C?ref=ce9b1898e5516ed5cdc444f1c0de82de34939181", "patch": "@@ -79,10 +79,10 @@ enum struct D : auto * { FF = 0 };\t\t// { dg-error \"must be an integral type|decl\n void\n bar ()\n {\n-  try { } catch (auto i) { }\t\t\t// { dg-error \"invalid use of\" }\n-  try { } catch (auto) { }\t\t\t// { dg-error \"invalid use of\" }\n-  try { } catch (auto *i) { }\t\t\t// { dg-error \"invalid use of\" }\n-  try { } catch (auto *) { }\t\t\t// { dg-error \"invalid use of\" }\n+  try { } catch (auto i) { }\t\t\t// { dg-error \"parameter declared\" }\n+  try { } catch (auto) { }\t\t\t// { dg-error \"parameter declared\" }\n+  try { } catch (auto *i) { }\t\t\t// { dg-error \"parameter declared\" }\n+  try { } catch (auto *) { }\t\t\t// { dg-error \"parameter declared\" }\n }\n \n void"}]}