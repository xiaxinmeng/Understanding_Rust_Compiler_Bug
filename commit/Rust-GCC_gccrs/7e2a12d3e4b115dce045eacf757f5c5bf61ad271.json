{"sha": "7e2a12d3e4b115dce045eacf757f5c5bf61ad271", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2UyYTEyZDNlNGIxMTVkY2UwNDVlYWNmNzU3ZjVjNWJmNjFhZDI3MQ==", "commit": {"author": {"name": "Josh Conner", "email": "jconner@apple.com", "date": "2005-10-28T17:58:59Z"}, "committer": {"name": "Josh Conner", "email": "jconner@gcc.gnu.org", "date": "2005-10-28T17:58:59Z"}, "message": "re PR c++/22153 (ICE on invalid template specialization)\n\nPR c++/22153\n* cp/parser.c (cp_parser_member_declaration): Detect and handle\na template specialization.\n* testsuite/g++.dg/template/crash38.C: New test.\n* testsuite/g++.dg/parse/explicit1.C: Change expected errors.\n\nFrom-SVN: r105944", "tree": {"sha": "3ef076b94d5b9ef432db0cfe490255efa7f21605", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3ef076b94d5b9ef432db0cfe490255efa7f21605"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7e2a12d3e4b115dce045eacf757f5c5bf61ad271", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e2a12d3e4b115dce045eacf757f5c5bf61ad271", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e2a12d3e4b115dce045eacf757f5c5bf61ad271", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e2a12d3e4b115dce045eacf757f5c5bf61ad271/comments", "author": null, "committer": null, "parents": [{"sha": "fcc855922629461ec529fe857d951adeccf1941d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fcc855922629461ec529fe857d951adeccf1941d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fcc855922629461ec529fe857d951adeccf1941d"}], "stats": {"total": 33, "additions": 30, "deletions": 3}, "files": [{"sha": "fed864d7f08ef2528671a762a255341d28cd0567", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e2a12d3e4b115dce045eacf757f5c5bf61ad271/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e2a12d3e4b115dce045eacf757f5c5bf61ad271/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=7e2a12d3e4b115dce045eacf757f5c5bf61ad271", "patch": "@@ -1,3 +1,9 @@\n+2005-10-28  Josh Conner  <jconner@apple.com>\n+\n+\tPR c++/22153\n+\t* parser.c (cp_parser_member_declaration): Detect and handle\n+\ta template specialization.\n+\n 2005-10-28  Andrew Pinski  <pinskia@physics.uc.edu>\n \n \tPR C++/23426"}, {"sha": "a065c2569acb0eec045a50e6b8bc59455ddad9da", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e2a12d3e4b115dce045eacf757f5c5bf61ad271/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e2a12d3e4b115dce045eacf757f5c5bf61ad271/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=7e2a12d3e4b115dce045eacf757f5c5bf61ad271", "patch": "@@ -13240,8 +13240,13 @@ cp_parser_member_declaration (cp_parser* parser)\n   /* Check for a template-declaration.  */\n   if (cp_lexer_next_token_is_keyword (parser->lexer, RID_TEMPLATE))\n     {\n-      /* Parse the template-declaration.  */\n-      cp_parser_template_declaration (parser, /*member_p=*/true);\n+      /* An explicit specialization here is an error condition, and we\n+\t expect the specialization handler to detect and report this.  */\n+      if (cp_lexer_peek_nth_token (parser->lexer, 2)->type == CPP_LESS\n+\t  && cp_lexer_peek_nth_token (parser->lexer, 3)->type == CPP_GREATER)\n+\tcp_parser_explicit_specialization (parser);\n+      else\n+\tcp_parser_template_declaration (parser, /*member_p=*/true);\n \n       return;\n     }"}, {"sha": "85a10d8381963e19b2def80fb915b4f4e5d22791", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e2a12d3e4b115dce045eacf757f5c5bf61ad271/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e2a12d3e4b115dce045eacf757f5c5bf61ad271/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7e2a12d3e4b115dce045eacf757f5c5bf61ad271", "patch": "@@ -1,3 +1,9 @@\n+2005-10-28  Josh Conner  <jconner@apple.com>\n+\n+\tPR c++/22153\n+\t* g++.dg/template/crash38.C: New test.\n+\t* g++.dg/parse/explicit1.C: Change expected errors.\n+\n 2005-10-28  Andrew Pinski  <pinskia@physics.uc.edu>\n \n \tPR C++/23426"}, {"sha": "d36ced473abff3183c5abe0875bbc44d38442fd3", "filename": "gcc/testsuite/g++.dg/crash38.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e2a12d3e4b115dce045eacf757f5c5bf61ad271/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcrash38.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e2a12d3e4b115dce045eacf757f5c5bf61ad271/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcrash38.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcrash38.C?ref=7e2a12d3e4b115dce045eacf757f5c5bf61ad271", "patch": "@@ -0,0 +1,10 @@\n+// { dg-do compile }\n+\n+// PR c++/22153\n+\n+template<int> void foo();\n+\n+template<int> struct A\n+{\n+    template<> friend void foo<0>(); // { dg-error \"\" }\n+};"}, {"sha": "35358749e1d082e9e85d913627497ecaf9ac20fe", "filename": "gcc/testsuite/g++.dg/parse/explicit1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e2a12d3e4b115dce045eacf757f5c5bf61ad271/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fexplicit1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e2a12d3e4b115dce045eacf757f5c5bf61ad271/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fexplicit1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fexplicit1.C?ref=7e2a12d3e4b115dce045eacf757f5c5bf61ad271", "patch": "@@ -7,5 +7,5 @@\n \n struct foo { \n         template<typename T> void bar (T &t) {}\n-        template<> void bar<double>(double &t) {} // { dg-error \"explicit|non-namespace|member\" }\n+        template<> void bar<double>(double &t) {} // { dg-error \"non-namespace|template|function\" }\n };"}]}