{"sha": "a73073aa6ef0c5f14115ed7227c40ec6f24f18e7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTczMDczYWE2ZWYwYzVmMTQxMTVlZDcyMjdjNDBlYzZmMjRmMThlNw==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@gcc.gnu.org", "date": "2001-12-07T18:52:06Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@gcc.gnu.org", "date": "2001-12-07T18:52:06Z"}, "message": "new\n\nFrom-SVN: r47765", "tree": {"sha": "6f860e18dc5b77a9f4c6b689af8060dc84698962", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6f860e18dc5b77a9f4c6b689af8060dc84698962"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a73073aa6ef0c5f14115ed7227c40ec6f24f18e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a73073aa6ef0c5f14115ed7227c40ec6f24f18e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a73073aa6ef0c5f14115ed7227c40ec6f24f18e7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a73073aa6ef0c5f14115ed7227c40ec6f24f18e7/comments", "author": null, "committer": null, "parents": [{"sha": "1b9191d275f3b600bfb63339cfa291bcceb0edbb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b9191d275f3b600bfb63339cfa291bcceb0edbb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b9191d275f3b600bfb63339cfa291bcceb0edbb"}], "stats": {"total": 38, "additions": 38, "deletions": 0}, "files": [{"sha": "596a41480521ad56e9c66fc35ce53b28d0cd97e4", "filename": "gcc/testsuite/gcc.dg/altivec-2.c", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a73073aa6ef0c5f14115ed7227c40ec6f24f18e7/gcc%2Ftestsuite%2Fgcc.dg%2Faltivec-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a73073aa6ef0c5f14115ed7227c40ec6f24f18e7/gcc%2Ftestsuite%2Fgcc.dg%2Faltivec-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Faltivec-2.c?ref=a73073aa6ef0c5f14115ed7227c40ec6f24f18e7", "patch": "@@ -0,0 +1,38 @@\n+/* { dg-do compile { target powerpc-*-* } } */\n+/* { dg-options \"-maltivec\" } */\n+\n+/* Program to test the vector_size attribute.  This needs to run on a\n+   target that has vectors, so use AltiVec.  */\n+\n+#define vector __attribute__((vector_size(16)))\n+\n+vector int foobar;\n+\n+/* Only floats and integrals allowed.  We don't care if they map to SIs.  */\n+struct X { int frances; };\n+vector struct X hotdog;\t/* { dg-bogus \"invalid vector type\" \"case 1\" } */\n+\n+/* We don't have a V2DF.  */\n+vector double x;\t/* { dg-bogus \"no vector mode\" \"case 2\" } */\n+\n+/* Arrays of vectors.  */\n+vector char b[10], ouch;\n+\n+/* Pointers of vectors.  */\n+vector short *shoe, polish;\n+\n+int xxx[sizeof(foobar) == 16 ? 69 : -1];\n+\n+int nc17[sizeof(shoe) == sizeof (char *) ? 69 : -1];\n+\n+code ()\n+{\n+  *shoe = polish;\n+  b[1] = ouch;\n+}\n+\n+vector short\n+hoop ()\n+{\n+  return polish;\n+}"}]}