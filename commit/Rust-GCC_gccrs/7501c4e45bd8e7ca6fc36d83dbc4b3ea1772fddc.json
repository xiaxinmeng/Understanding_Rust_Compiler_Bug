{"sha": "7501c4e45bd8e7ca6fc36d83dbc4b3ea1772fddc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzUwMWM0ZTQ1YmQ4ZTdjYTZmYzM2ZDgzZGJjNGIzZWExNzcyZmRkYw==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@eyesopen.com", "date": "2004-02-15T14:30:38Z"}, "committer": {"name": "Roger Sayle", "email": "sayle@gcc.gnu.org", "date": "2004-02-15T14:30:38Z"}, "message": "c-common.h (GET_DIRECTIVE_LINE): Remove unused macro.\n\n\n\t* c-common.h (GET_DIRECTIVE_LINE): Remove unused macro.\n\t(get_directive_line): Remove unused function prototype.\n\n\t* f/lex.c (ffelex_get_directive_line): Provide a more descriptive\n\tcomment.  Remove reference to non-existant get_directive_line.\n\nFrom-SVN: r77850", "tree": {"sha": "efe52867ce198bcd7d4dc2ad5dd66b0c94f8a933", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/efe52867ce198bcd7d4dc2ad5dd66b0c94f8a933"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7501c4e45bd8e7ca6fc36d83dbc4b3ea1772fddc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7501c4e45bd8e7ca6fc36d83dbc4b3ea1772fddc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7501c4e45bd8e7ca6fc36d83dbc4b3ea1772fddc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7501c4e45bd8e7ca6fc36d83dbc4b3ea1772fddc/comments", "author": null, "committer": null, "parents": [{"sha": "fb264fec4885521a881dca835f2794636870a10c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb264fec4885521a881dca835f2794636870a10c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb264fec4885521a881dca835f2794636870a10c"}], "stats": {"total": 19, "additions": 15, "deletions": 4}, "files": [{"sha": "3887bbee41350ebeb1142700d329ef5d5f65ccb3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7501c4e45bd8e7ca6fc36d83dbc4b3ea1772fddc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7501c4e45bd8e7ca6fc36d83dbc4b3ea1772fddc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7501c4e45bd8e7ca6fc36d83dbc4b3ea1772fddc", "patch": "@@ -1,3 +1,8 @@\n+2004-02-15  Roger Sayle  <roger@eyesopen.com>\n+\n+\t* c-common.h (GET_DIRECTIVE_LINE): Remove unused macro.\n+\t(get_directive_line): Remove unused function prototype.\n+\n 2004-02-14  Josef Zlomek  <zlomekj@suse.cz>\n \n \t* tree-inline.c (copy_body_r): Do not replace ret_label."}, {"sha": "f409e7a3aa724e2a8ea4c2ff4af46a60133986ce", "filename": "gcc/c-common.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7501c4e45bd8e7ca6fc36d83dbc4b3ea1772fddc/gcc%2Fc-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7501c4e45bd8e7ca6fc36d83dbc4b3ea1772fddc/gcc%2Fc-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.h?ref=7501c4e45bd8e7ca6fc36d83dbc4b3ea1772fddc", "patch": "@@ -931,9 +931,6 @@ extern tree convert_and_check (tree, tree);\n extern void overflow_warning (tree);\n extern void unsigned_conversion_warning (tree, tree);\n \n-/* Read the rest of the current #-directive line.  */\n-extern char *get_directive_line (void);\n-#define GET_DIRECTIVE_LINE() get_directive_line ()\n #define c_sizeof(T)  c_sizeof_or_alignof_type (T, SIZEOF_EXPR, 1)\n #define c_alignof(T) c_sizeof_or_alignof_type (T, ALIGNOF_EXPR, 1)\n "}, {"sha": "e0471707eee4eab21a89e6cd0a97a5ba95989a69", "filename": "gcc/f/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7501c4e45bd8e7ca6fc36d83dbc4b3ea1772fddc/gcc%2Ff%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7501c4e45bd8e7ca6fc36d83dbc4b3ea1772fddc/gcc%2Ff%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FChangeLog?ref=7501c4e45bd8e7ca6fc36d83dbc4b3ea1772fddc", "patch": "@@ -1,3 +1,8 @@\n+2004-02-15  Roger Sayle  <roger@eyesopen.com>\n+\n+\t* lex.c (ffelex_get_directive_line): Provide a more descriptive\n+\tcomment.  Remove reference to non-existant get_directive_line.\n+\n 2004-02-15  Roger Sayle  <roger@eyesopen.com>\n \n \tPR fortran/14129"}, {"sha": "9a38ad5b0bb8deec09ac1ee85041526ba637c790", "filename": "gcc/f/lex.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7501c4e45bd8e7ca6fc36d83dbc4b3ea1772fddc/gcc%2Ff%2Flex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7501c4e45bd8e7ca6fc36d83dbc4b3ea1772fddc/gcc%2Ff%2Flex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Flex.c?ref=7501c4e45bd8e7ca6fc36d83dbc4b3ea1772fddc", "patch": "@@ -920,7 +920,11 @@ ffelex_finish_statement_ (void)\n     }\n }\n \n-/* Copied from gcc/c-common.c get_directive_line.  */\n+/* Read a preprocessor directive line from file FINPUT.  This function\n+   returns either '\\n' or EOF to indicate success or failure respectively.\n+   Upon return, TEXT points to the contents of the line, which is stripped\n+   of initial whitespace.  The buffer pointed to by TEXT should not be\n+   free'd and is overwritten by subsequent calls to this function.  */\n \n static int\n ffelex_get_directive_line_ (char **text, FILE *finput)"}]}