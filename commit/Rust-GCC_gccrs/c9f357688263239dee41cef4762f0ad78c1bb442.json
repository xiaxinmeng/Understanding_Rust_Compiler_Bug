{"sha": "c9f357688263239dee41cef4762f0ad78c1bb442", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzlmMzU3Njg4MjYzMjM5ZGVlNDFjZWY0NzYyZjBhZDc4YzFiYjQ0Mg==", "commit": {"author": {"name": "Olivier Hainque", "email": "hainque@adacore.com", "date": "2018-05-31T10:46:58Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-05-31T10:46:58Z"}, "message": "[Ada] Update comment on __atomic_compare_exchange in s-atomic_primitives\n\nRemove mention of unavailability, long obsolete, and reword suggestion of use\nto indicate that we might want to switch to an internal interface using them.\nThe current wording suggests just that we should bind the current\nSync_Compare_And_Swap Ada subprograms to __atomic_compare builtins instead of\n__sync_compare, which would be highly confusing.\n\n2018-05-31  Olivier Hainque  <hainque@adacore.com>\n\ngcc/ada/\n\n\t* libgnat/s-atopri.ads: Update comment on __atomic_compare_exchange\n\tbuiltins.\n\nFrom-SVN: r261008", "tree": {"sha": "f46cf7026acbf95290b94b8b0054d1954f26f7b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f46cf7026acbf95290b94b8b0054d1954f26f7b7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c9f357688263239dee41cef4762f0ad78c1bb442", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9f357688263239dee41cef4762f0ad78c1bb442", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c9f357688263239dee41cef4762f0ad78c1bb442", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9f357688263239dee41cef4762f0ad78c1bb442/comments", "author": {"login": "hainque", "id": 18735142, "node_id": "MDQ6VXNlcjE4NzM1MTQy", "avatar_url": "https://avatars.githubusercontent.com/u/18735142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hainque", "html_url": "https://github.com/hainque", "followers_url": "https://api.github.com/users/hainque/followers", "following_url": "https://api.github.com/users/hainque/following{/other_user}", "gists_url": "https://api.github.com/users/hainque/gists{/gist_id}", "starred_url": "https://api.github.com/users/hainque/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hainque/subscriptions", "organizations_url": "https://api.github.com/users/hainque/orgs", "repos_url": "https://api.github.com/users/hainque/repos", "events_url": "https://api.github.com/users/hainque/events{/privacy}", "received_events_url": "https://api.github.com/users/hainque/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1b6f8e9778b58e190f40a1137eaba618c529110f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b6f8e9778b58e190f40a1137eaba618c529110f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b6f8e9778b58e190f40a1137eaba618c529110f"}], "stats": {"total": 31, "additions": 19, "deletions": 12}, "files": [{"sha": "6150102dc1a6843264d1fdd2c2259991e4f752b6", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9f357688263239dee41cef4762f0ad78c1bb442/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9f357688263239dee41cef4762f0ad78c1bb442/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=c9f357688263239dee41cef4762f0ad78c1bb442", "patch": "@@ -1,3 +1,8 @@\n+2018-05-31  Olivier Hainque  <hainque@adacore.com>\n+\n+\t* libgnat/s-atopri.ads: Update comment on __atomic_compare_exchange\n+\tbuiltins.\n+\n 2018-05-31  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/trans.c (Call_to_gnu): If this is a function call and"}, {"sha": "5cb15465fc19a827bfd55b2604cd1d104de8c8ab", "filename": "gcc/ada/libgnat/s-atopri.ads", "status": "modified", "additions": 14, "deletions": 12, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9f357688263239dee41cef4762f0ad78c1bb442/gcc%2Fada%2Flibgnat%2Fs-atopri.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9f357688263239dee41cef4762f0ad78c1bb442/gcc%2Fada%2Flibgnat%2Fs-atopri.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-atopri.ads?ref=c9f357688263239dee41cef4762f0ad78c1bb442", "patch": "@@ -92,18 +92,6 @@ package System.Atomic_Primitives is\n                   Sync_Compare_And_Swap_8,\n                   \"__sync_val_compare_and_swap_1\");\n \n-   --  ??? Should use __atomic_compare_exchange_1 (doesn't work yet):\n-   --  function Sync_Compare_And_Swap_8\n-   --    (Ptr           : Address;\n-   --     Expected      : Address;\n-   --     Desired       : uint8;\n-   --     Weak          : Boolean   := False;\n-   --     Success_Model : Mem_Model := Seq_Cst;\n-   --     Failure_Model : Mem_Model := Seq_Cst) return Boolean;\n-   --  pragma Import (Intrinsic,\n-   --                 Sync_Compare_And_Swap_8,\n-   --                 \"__atomic_compare_exchange_1\");\n-\n    function Sync_Compare_And_Swap_16\n      (Ptr      : Address;\n       Expected : uint16;\n@@ -128,6 +116,20 @@ package System.Atomic_Primitives is\n                   Sync_Compare_And_Swap_64,\n                   \"__sync_val_compare_and_swap_8\");\n \n+   --  ??? We might want to switch to the __atomic series of builtins for\n+   --  compare-and-swap operations at some point.\n+\n+   --  function Atomic_Compare_Exchange_8\n+   --    (Ptr           : Address;\n+   --     Expected      : Address;\n+   --     Desired       : uint8;\n+   --     Weak          : Boolean   := False;\n+   --     Success_Model : Mem_Model := Seq_Cst;\n+   --     Failure_Model : Mem_Model := Seq_Cst) return Boolean;\n+   --  pragma Import (Intrinsic,\n+   --                 Atomic_Compare_Exchange_8,\n+   --                 \"__atomic_compare_exchange_1\");\n+\n    --------------------------\n    -- Lock-free operations --\n    --------------------------"}]}