{"sha": "5ec9f8cff333bbe9ef6b3767bfcc334961927a03", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWVjOWY4Y2ZmMzMzYmJlOWVmNmIzNzY3YmZjYzMzNDk2MTkyN2EwMw==", "commit": {"author": {"name": "Bernd Edlinger", "email": "bernd.edlinger@hotmail.de", "date": "2018-09-13T21:43:16Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2018-09-13T21:43:16Z"}, "message": "varasm.c (compare_constant): Compare type size of STRING_CSTs.\n\n\t* varasm.c (compare_constant): Compare type size of STRING_CSTs.\n\t(get_constant_size): Don't make STRING_CSTs larger than they are.\n\t(check_string_literal): New check function for STRING_CSTs.\n\t(output_constant): Use it.\n\nFrom-SVN: r264292", "tree": {"sha": "0bc6a7c631c48975d524bc8e12bae897b2bae1e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0bc6a7c631c48975d524bc8e12bae897b2bae1e9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5ec9f8cff333bbe9ef6b3767bfcc334961927a03", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ec9f8cff333bbe9ef6b3767bfcc334961927a03", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ec9f8cff333bbe9ef6b3767bfcc334961927a03", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ec9f8cff333bbe9ef6b3767bfcc334961927a03/comments", "author": {"login": "bernd-edlinger", "id": 17638929, "node_id": "MDQ6VXNlcjE3NjM4OTI5", "avatar_url": "https://avatars.githubusercontent.com/u/17638929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bernd-edlinger", "html_url": "https://github.com/bernd-edlinger", "followers_url": "https://api.github.com/users/bernd-edlinger/followers", "following_url": "https://api.github.com/users/bernd-edlinger/following{/other_user}", "gists_url": "https://api.github.com/users/bernd-edlinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/bernd-edlinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bernd-edlinger/subscriptions", "organizations_url": "https://api.github.com/users/bernd-edlinger/orgs", "repos_url": "https://api.github.com/users/bernd-edlinger/repos", "events_url": "https://api.github.com/users/bernd-edlinger/events{/privacy}", "received_events_url": "https://api.github.com/users/bernd-edlinger/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4a426e366eccf4a8806175a18be5a13da66e0983", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a426e366eccf4a8806175a18be5a13da66e0983", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a426e366eccf4a8806175a18be5a13da66e0983"}], "stats": {"total": 41, "additions": 38, "deletions": 3}, "files": [{"sha": "7dfcd97f9016c4d299025c8d534eff7fa14e90b8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ec9f8cff333bbe9ef6b3767bfcc334961927a03/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ec9f8cff333bbe9ef6b3767bfcc334961927a03/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5ec9f8cff333bbe9ef6b3767bfcc334961927a03", "patch": "@@ -1,3 +1,10 @@\n+2018-09-13  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n+\n+\t* varasm.c (compare_constant): Compare type size of STRING_CSTs.\n+\t(get_constant_size): Don't make STRING_CSTs larger than they are.\n+\t(check_string_literal): New check function for STRING_CSTs.\n+\t(output_constant): Use it.\n+\n 2018-09-13  Eric Botcazou  <ebotcazou@adacore.com>\n \n \tPR target/86812"}, {"sha": "e46bc5930fc9c112086e3af025535c8d04f8c841", "filename": "gcc/varasm.c", "status": "modified", "additions": 31, "deletions": 3, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ec9f8cff333bbe9ef6b3767bfcc334961927a03/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ec9f8cff333bbe9ef6b3767bfcc334961927a03/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=5ec9f8cff333bbe9ef6b3767bfcc334961927a03", "patch": "@@ -3146,7 +3146,9 @@ compare_constant (const tree t1, const tree t2)\n       return FIXED_VALUES_IDENTICAL (TREE_FIXED_CST (t1), TREE_FIXED_CST (t2));\n \n     case STRING_CST:\n-      if (TYPE_MODE (TREE_TYPE (t1)) != TYPE_MODE (TREE_TYPE (t2)))\n+      if (TYPE_MODE (TREE_TYPE (t1)) != TYPE_MODE (TREE_TYPE (t2))\n+\t  || int_size_in_bytes (TREE_TYPE (t1))\n+\t     != int_size_in_bytes (TREE_TYPE (t2)))\n \treturn 0;\n \n       return (TREE_STRING_LENGTH (t1) == TREE_STRING_LENGTH (t2)\n@@ -3303,8 +3305,9 @@ get_constant_size (tree exp)\n   HOST_WIDE_INT size;\n \n   size = int_size_in_bytes (TREE_TYPE (exp));\n-  if (TREE_CODE (exp) == STRING_CST)\n-    size = MAX (TREE_STRING_LENGTH (exp), size);\n+  gcc_checking_assert (size >= 0);\n+  gcc_checking_assert (TREE_CODE (exp) != STRING_CST\n+\t\t       || size >= TREE_STRING_LENGTH (exp));\n   return size;\n }\n \n@@ -4773,6 +4776,30 @@ initializer_constant_valid_for_bitfield_p (tree value)\n   return false;\n }\n \n+/* Check if a STRING_CST fits into the field.\n+   Tolerate only the case when the NUL termination\n+   does not fit into the field.   */\n+\n+static bool\n+check_string_literal (tree string, unsigned HOST_WIDE_INT size)\n+{\n+  tree type = TREE_TYPE (string);\n+  tree eltype = TREE_TYPE (type);\n+  unsigned HOST_WIDE_INT elts = tree_to_uhwi (TYPE_SIZE_UNIT (eltype));\n+  unsigned HOST_WIDE_INT mem_size = tree_to_uhwi (TYPE_SIZE_UNIT (type));\n+  int len = TREE_STRING_LENGTH (string);\n+\n+  if (elts != 1 && elts != 2 && elts != 4)\n+    return false;\n+  if (len < 0 || len % elts != 0)\n+    return false;\n+  if (size < (unsigned)len)\n+    return false;\n+  if (mem_size != size)\n+    return false;\n+  return true;\n+}\n+\n /* output_constructor outer state of relevance in recursive calls, typically\n    for nested aggregate bitfields.  */\n \n@@ -4941,6 +4968,7 @@ output_constant (tree exp, unsigned HOST_WIDE_INT size, unsigned int align,\n \tcase STRING_CST:\n \t  thissize\n \t    = MIN ((unsigned HOST_WIDE_INT)TREE_STRING_LENGTH (exp), size);\n+\t  gcc_checking_assert (check_string_literal (exp, size));\n \t  assemble_string (TREE_STRING_POINTER (exp), thissize);\n \t  break;\n \tcase VECTOR_CST:"}]}