{"sha": "77237288bdc644eed58d9e8bff1cad8c268a499d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzcyMzcyODhiZGM2NDRlZWQ1OGQ5ZThiZmYxY2FkOGMyNjhhNDk5ZA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-10-26T10:45:50Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-10-26T10:45:50Z"}, "message": "[multiple changes]\n\n2015-10-26  Bob Duff  <duff@adacore.com>\n\n\t* sem_ch13.adb (Check_Iterator_Functions): For a Default_Iterator\n\taspect, make sure an implicitly declared interpretation is\n\toverridden by an explicit one.\n\t* sem_util.ads: Update comment.\n\n2015-10-26  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* sem_ch7.adb, sem_ch6.adb (Analyze_Subprogram_Body_Helper): Only source\n\tbodies should \"freeze\" the contract of the nearest enclosing\n\tpackage body.\n\nFrom-SVN: r229321", "tree": {"sha": "9b223781d423fc671f542b52e473605a09494492", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9b223781d423fc671f542b52e473605a09494492"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/77237288bdc644eed58d9e8bff1cad8c268a499d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77237288bdc644eed58d9e8bff1cad8c268a499d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77237288bdc644eed58d9e8bff1cad8c268a499d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77237288bdc644eed58d9e8bff1cad8c268a499d/comments", "author": null, "committer": null, "parents": [{"sha": "02886c2e8a6056b5e969f57431671d0980596f0b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02886c2e8a6056b5e969f57431671d0980596f0b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/02886c2e8a6056b5e969f57431671d0980596f0b"}], "stats": {"total": 58, "additions": 45, "deletions": 13}, "files": [{"sha": "232b1fc0b1ba96625d5b01de82822475ff43e389", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77237288bdc644eed58d9e8bff1cad8c268a499d/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77237288bdc644eed58d9e8bff1cad8c268a499d/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=77237288bdc644eed58d9e8bff1cad8c268a499d", "patch": "@@ -1,3 +1,16 @@\n+2015-10-26  Bob Duff  <duff@adacore.com>\n+\n+\t* sem_ch13.adb (Check_Iterator_Functions): For a Default_Iterator\n+\taspect, make sure an implicitly declared interpretation is\n+\toverridden by an explicit one.\n+\t* sem_util.ads: Update comment.\n+\n+2015-10-26  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* sem_ch7.adb, sem_ch6.adb (Analyze_Subprogram_Body_Helper): Only source\n+\tbodies should \"freeze\" the contract of the nearest enclosing\n+\tpackage body.\n+\n 2015-10-26  Joel Brobecker  <brobecker@adacore.com brobecker>\n \n \t* adaint.c (__gnat_lwp_self): Replace current implementation re-using"}, {"sha": "9ef6263846f3bec94c2906c1a160791301ce8456", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 16, "deletions": 7, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77237288bdc644eed58d9e8bff1cad8c268a499d/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77237288bdc644eed58d9e8bff1cad8c268a499d/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=77237288bdc644eed58d9e8bff1cad8c268a499d", "patch": "@@ -4277,8 +4277,8 @@ package body Sem_Ch13 is\n          else\n             declare\n                Default : Entity_Id := Empty;\n-               I : Interp_Index;\n-               It : Interp;\n+               I       : Interp_Index;\n+               It      : Interp;\n \n             begin\n                Get_First_Interp (Expr, I, It);\n@@ -4289,12 +4289,21 @@ package body Sem_Ch13 is\n                      Remove_Interp (I);\n \n                   elsif Present (Default) then\n-                     Error_Msg_N (\"default iterator must be unique\", Expr);\n-                     Error_Msg_Sloc := Sloc (Default);\n-                     Error_Msg_N (\"\\\\possible interpretation#\", Expr);\n-                     Error_Msg_Sloc := Sloc (It.Nam);\n-                     Error_Msg_N (\"\\\\possible interpretation#\", Expr);\n \n+                     --  An explicit one should override an implicit one\n+\n+                     if Comes_From_Source (Default) =\n+                          Comes_From_Source (It.Nam)\n+                     then\n+                        Error_Msg_N (\"default iterator must be unique\", Expr);\n+                        Error_Msg_Sloc := Sloc (Default);\n+                        Error_Msg_N (\"\\\\possible interpretation#\", Expr);\n+                        Error_Msg_Sloc := Sloc (It.Nam);\n+                        Error_Msg_N (\"\\\\possible interpretation#\", Expr);\n+\n+                     elsif Comes_From_Source (It.Nam) then\n+                        Default := It.Nam;\n+                     end if;\n                   else\n                      Default := It.Nam;\n                   end if;"}, {"sha": "0f2615861f8f3559577e2686225f274b75d0ac4b", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77237288bdc644eed58d9e8bff1cad8c268a499d/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77237288bdc644eed58d9e8bff1cad8c268a499d/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=77237288bdc644eed58d9e8bff1cad8c268a499d", "patch": "@@ -3011,7 +3011,14 @@ package body Sem_Ch6 is\n       --  decoupled from the usual Freeze_xxx mechanism because it must also\n       --  work in the context of generics where normal freezing is disabled.\n \n-      Analyze_Enclosing_Package_Body_Contract (N);\n+      --  Only bodies coming from source should cause this type of \"freezing\".\n+      --  Expression functions that act as bodies and complete an initial\n+      --  declaration must be included in this category, hence the use of\n+      --  Original_Node.\n+\n+      if Comes_From_Source (Original_Node (N)) then\n+         Analyze_Enclosing_Package_Body_Contract (N);\n+      end if;\n \n       --  Generic subprograms are handled separately. They always have a\n       --  generic specification. Determine whether current scope has a"}, {"sha": "48748440128ac4bccdf96aaca58b2636fcb2a301", "filename": "gcc/ada/sem_ch7.adb", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77237288bdc644eed58d9e8bff1cad8c268a499d/gcc%2Fada%2Fsem_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77237288bdc644eed58d9e8bff1cad8c268a499d/gcc%2Fada%2Fsem_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch7.adb?ref=77237288bdc644eed58d9e8bff1cad8c268a499d", "patch": "@@ -564,7 +564,11 @@ package body Sem_Ch7 is\n       --  Freeze_xxx mechanism because it must also work in the context of\n       --  generics where normal freezing is disabled.\n \n-      Analyze_Enclosing_Package_Body_Contract (N);\n+      --  Only bodies coming from source should cause this type of \"freezing\"\n+\n+      if Comes_From_Source (N) then\n+         Analyze_Enclosing_Package_Body_Contract (N);\n+      end if;\n \n       --  Find corresponding package specification, and establish the current\n       --  scope. The visible defining entity for the package is the defining"}, {"sha": "d7d08e6f59deb4b80422b85b396d85b261ed24be", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77237288bdc644eed58d9e8bff1cad8c268a499d/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77237288bdc644eed58d9e8bff1cad8c268a499d/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=77237288bdc644eed58d9e8bff1cad8c268a499d", "patch": "@@ -538,10 +538,9 @@ package Sem_Util is\n \n    function Enclosing_Lib_Unit_Entity\n      (E : Entity_Id := Current_Scope) return Entity_Id;\n-   --  Returns the entity of enclosing library unit node which is the\n-   --  root of the current scope (which must not be Standard_Standard, and the\n-   --  caller is responsible for ensuring this condition) or other specified\n-   --  entity.\n+   --  Returns the entity of enclosing library unit node which is the root of\n+   --  the current scope (which must not be Standard_Standard, and the caller\n+   --  is responsible for ensuring this condition) or other specified entity.\n \n    function Enclosing_Lib_Unit_Node (N : Node_Id) return Node_Id;\n    --  Returns the N_Compilation_Unit node of the library unit that is directly"}]}