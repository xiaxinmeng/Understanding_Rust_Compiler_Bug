{"sha": "d288c0abe62b0ea097852174651c5b87c2ac7800", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDI4OGMwYWJlNjJiMGVhMDk3ODUyMTc0NjUxYzViODdjMmFjNzgwMA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2015-02-26T21:03:14Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2015-02-26T21:03:14Z"}, "message": "re PR tree-optimization/65216 (wrong code at -O3 on x86_64-linux-gnu)\n\n\tPR tree-optimization/65216\n\t* tree-ssa-reassoc.c (rewrite_expr_tree): Force creation of\n\tnew stmt and new SSA_NAME for lhs whenever the arguments have\n\tchanged and weren't just swapped.  Fix comment typo.\n\n\t* gcc.c-torture/execute/pr65216.c: New test.\n\nFrom-SVN: r221034", "tree": {"sha": "ea8d3e047154e05c0b011c78cf24dced1dc536c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ea8d3e047154e05c0b011c78cf24dced1dc536c4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d288c0abe62b0ea097852174651c5b87c2ac7800", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d288c0abe62b0ea097852174651c5b87c2ac7800", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d288c0abe62b0ea097852174651c5b87c2ac7800", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d288c0abe62b0ea097852174651c5b87c2ac7800/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5c2766c1a7a6ecf866d4aaa72e2e2a497fcc7995", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c2766c1a7a6ecf866d4aaa72e2e2a497fcc7995", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c2766c1a7a6ecf866d4aaa72e2e2a497fcc7995"}], "stats": {"total": 36, "additions": 34, "deletions": 2}, "files": [{"sha": "97434356dacbb327b16a8f153bbfd79c000517a8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d288c0abe62b0ea097852174651c5b87c2ac7800/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d288c0abe62b0ea097852174651c5b87c2ac7800/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d288c0abe62b0ea097852174651c5b87c2ac7800", "patch": "@@ -1,5 +1,10 @@\n 2015-02-26  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR tree-optimization/65216\n+\t* tree-ssa-reassoc.c (rewrite_expr_tree): Force creation of\n+\tnew stmt and new SSA_NAME for lhs whenever the arguments have\n+\tchanged and weren't just swapped.  Fix comment typo.\n+\n \tPR tree-optimization/65215\n \t* tree-ssa-math-opts.c (find_bswap_or_nop_load): Return false\n \tfor PDP endian targets."}, {"sha": "93fc50f2a9137f5a923415efc69c759f0f34d9ce", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d288c0abe62b0ea097852174651c5b87c2ac7800/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d288c0abe62b0ea097852174651c5b87c2ac7800/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d288c0abe62b0ea097852174651c5b87c2ac7800", "patch": "@@ -1,5 +1,8 @@\n 2015-02-26  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR tree-optimization/65216\n+\t* gcc.c-torture/execute/pr65216.c: New test.\n+\n \tPR tree-optimization/65215\n \t* gcc.c-torture/execute/pr65215-1.c: New test.\n \t* gcc.c-torture/execute/pr65215-2.c: New test."}, {"sha": "0714d8ceebb30e457eda517b4064f4306797e50e", "filename": "gcc/testsuite/gcc.c-torture/execute/pr65216.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d288c0abe62b0ea097852174651c5b87c2ac7800/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr65216.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d288c0abe62b0ea097852174651c5b87c2ac7800/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr65216.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr65216.c?ref=d288c0abe62b0ea097852174651c5b87c2ac7800", "patch": "@@ -0,0 +1,20 @@\n+/* PR tree-optimization/65216 */\n+\n+int a, b = 62, e;\n+volatile int c, d;\n+\n+int\n+main ()\n+{\n+  int f = 0;\n+  for (a = 0; a < 2; a++)\n+    {\n+      b &= (8 ^ f) & 1;\n+      for (e = 0; e < 6; e++)\n+\tif (c)\n+\t  f = d;\n+    }\n+  if (b != 0)\n+    __builtin_abort ();\n+  return 0;\n+}"}, {"sha": "2e933e769fc29a98726095e47e327470335f9bb8", "filename": "gcc/tree-ssa-reassoc.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d288c0abe62b0ea097852174651c5b87c2ac7800/gcc%2Ftree-ssa-reassoc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d288c0abe62b0ea097852174651c5b87c2ac7800/gcc%2Ftree-ssa-reassoc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-reassoc.c?ref=d288c0abe62b0ea097852174651c5b87c2ac7800", "patch": "@@ -3532,7 +3532,7 @@ rewrite_expr_tree (gimple stmt, unsigned int opindex,\n \n   /* The final recursion case for this function is that you have\n      exactly two operations left.\n-     If we had one exactly one op in the entire list to start with, we\n+     If we had exactly one op in the entire list to start with, we\n      would have never called this function, and the tail recursion\n      rewrites them one at a time.  */\n   if (opindex + 2 == ops.length ())\n@@ -3553,7 +3553,11 @@ rewrite_expr_tree (gimple stmt, unsigned int opindex,\n \t      print_gimple_stmt (dump_file, stmt, 0, 0);\n \t    }\n \n-\t  if (changed)\n+\t  /* Even when changed is false, reassociation could have e.g. removed\n+\t     some redundant operations, so unless we are just swapping the\n+\t     arguments or unless there is no change at all (then we just\n+\t     return lhs), force creation of a new SSA_NAME.  */\n+\t  if (changed || ((rhs1 != oe2->op || rhs2 != oe1->op) && opindex))\n \t    {\n \t      gimple insert_point = find_insert_point (stmt, oe1->op, oe2->op);\n \t      lhs = make_ssa_name (TREE_TYPE (lhs));"}]}