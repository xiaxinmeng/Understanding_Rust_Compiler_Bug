{"sha": "82c027e160f351c62ef09a5167a3ad6b680e8017", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODJjMDI3ZTE2MGYzNTFjNjJlZjA5YTUxNjdhM2FkNmI2ODBlODAxNw==", "commit": {"author": {"name": "Dominique d'Humieres", "email": "dominiq@lps.ens.fr", "date": "2017-06-04T18:44:45Z"}, "committer": {"name": "Dominique d'Humieres", "email": "dominiq@gcc.gnu.org", "date": "2017-06-04T18:44:45Z"}, "message": "fortran-modules.exp (igrep): New procedure, case insensitive vesrion of the dejagnu grep.\n\n2017-06-04  Dominique d'Humieres  <dominiq@lps.ens.fr>\n\n\t* lib/fortran-modules.exp (igrep): New procedure, case insensitive\n\tvesrion of the dejagnu grep.\n\t(list-module-names): Use it and adjust the regular expressions for\n\tmodules and submodules.\n\t* gfortran.dg/prof/prof.exp: Cleanup modules.\n\t* gfortran.dg/allocate_class_4.f90: Remove cleanup-(sub)?modules\n\tdirectives.\n\t* gfortran.dg/altreturn_8.f90: Likewise.\n\t* gfortran.dg/associate_12.f90: Likewise.\n\t* gfortran.dg/c_f_pointer_shape_test.f90: Likewise.\n\t* gfortran.dg/charlen_15.f90: Likewise.\n\t* gfortran.dg/class_4a.f03: Likewise.\n\t* gfortran.dg/class_54.f90: Likewise.\n\t* gfortran.dg/class_dummy_4.f03: Likewise.\n\t* gfortran.dg/class_dummy_5.f90: Likewise.\n\t* gfortran.dg/constructor_9.f90: Likewise.\n\t* gfortran.dg/dec_structure_15.f90: Likewise.\n\t* gfortran.dg/do_check_8.f90: Likewise.\n\t* gfortran.dg/dtio_26.f03: Likewise.\n\t* gfortran.dg/dynamic_dispatch_12.f90: Likewise.\n\t* gfortran.dg/equiv_9.f90: Likewise.\n\t* gfortran.dg/extends_15.f90: Likewise.\n\t* gfortran.dg/finalize_22.f90: Likewise.\n\t* gfortran.dg/finalize_23.f90: Likewise.\n\t* gfortran.dg/generic_26.f90: Likewise.\n\t* gfortran.dg/generic_27.f90: Likewise.\n\t* gfortran.dg/namelist_76.f90: Likewise.\n\t* gfortran.dg/pointer_init_8.f90: Likewise.\n\t* gfortran.dg/pr61318.f90: Likewise.\n\t* gfortran.dg/pr77260_1.f90: Likewise.\n\t* gfortran.dg/pr77260_2.f90: Likewise.\n\t* gfortran.dg/pr77420_3.f90: Likewise.\n\t* gfortran.dg/proc_ptr_39.f90: Likewise.\n\t* gfortran.dg/proc_ptr_41.f90: Likewise.\n\t* gfortran.dg/proc_ptr_42.f90: Likewise.\n\t* gfortran.dg/proc_ptr_comp_43.f90: Likewise.\n\t* gfortran.dg/submodule_1.f08: Likewise.\n\t* gfortran.dg/submodule_10.f08: Likewise.\n\t* gfortran.dg/submodule_14.f08: Likewise.\n\t* gfortran.dg/submodule_15.f08: Likewise.\n\t* gfortran.dg/submodule_2.f08: Likewise.\n\t* gfortran.dg/submodule_5.f08: Likewise.\n\t* gfortran.dg/submodule_6.f08: Likewise.\n\t* gfortran.dg/submodule_7.f08: Likewise.\n\t* gfortran.dg/submodule_8.f08: Likewise.\n\t* gfortran.dg/submodule_9.f08: Likewise.\n\t* gfortran.dg/transfer_class_2.f90: Likewise.\n\t* gfortran.dg/typebound_assignment_7.f90: Likewise.\n\t* gfortran.dg/typebound_call_24.f03: Likewise.\n\t* gfortran.dg/typebound_call_25.f90: Likewise.\n\t* gfortran.dg/typebound_deferred_1.f90: Likewise.\n\t* gfortran.dg/typebound_generic_12.f03: Likewise.\n\t* gfortran.dg/typebound_generic_13.f03: Likewise.\n\t* gfortran.dg/typebound_generic_14.f03: Likewise.\n\t* gfortran.dg/typebound_generic_15.f90: Likewise.\n\t* gfortran.dg/typebound_operator_16.f03: Likewise.\n\t* gfortran.dg/typebound_operator_18.f90: Likewise.\n\t* gfortran.dg/typebound_operator_20.f90: Likewise.\n\t* gfortran.dg/typebound_override_3.f90: Likewise.\n\t* gfortran.dg/typebound_override_4.f90: Likewise.\n\t* gfortran.dg/typebound_override_5.f90: Likewise.\n\t* gfortran.dg/typebound_override_6.f90: Likewise.\n\t* gfortran.dg/typebound_override_7.f90: Likewise.\n\t* gfortran.dg/typebound_proc_28.f03: Likewise.\n\t* gfortran.dg/typebound_proc_29.f90: Likewise.\n\t* gfortran.dg/typebound_proc_30.f90: Likewise.\n\t* gfortran.dg/typebound_proc_31.f90: Likewise.\n\t* gfortran.dg/typebound_proc_32.f90: Likewise.\n\t* gfortran.dg/typebound_proc_33.f90: Likewise.\n\t* gfortran.dg/unlimited_polymorphic_16.f90: Likewise.\n\t* gfortran.dg/unlimited_polymorphic_19.f90: Likewise.\n\t* gfortran.dg/unlimited_polymorphic_24.f03: Likewise.\n\t* gfortran.dg/use_only_3.f90: Likewise.\n\t* gfortran.dg/use_without_only_1.f90: Likewise.\n\t* gfortran.dg/warn_unused_function.f90: Likewise.\n\t* gfortran.dg/warn_unused_function_2.f90: Likewise.\n\t* gfortran.dg/ieee/ieee_8.f90: Likewise.\n\nFrom-SVN: r248861", "tree": {"sha": "0b437f04c0c262919695836b9d35b681476def71", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0b437f04c0c262919695836b9d35b681476def71"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/82c027e160f351c62ef09a5167a3ad6b680e8017", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82c027e160f351c62ef09a5167a3ad6b680e8017", "html_url": "https://github.com/Rust-GCC/gccrs/commit/82c027e160f351c62ef09a5167a3ad6b680e8017", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82c027e160f351c62ef09a5167a3ad6b680e8017/comments", "author": {"login": "DominiquedHumieres", "id": 18394944, "node_id": "MDQ6VXNlcjE4Mzk0OTQ0", "avatar_url": "https://avatars.githubusercontent.com/u/18394944?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DominiquedHumieres", "html_url": "https://github.com/DominiquedHumieres", "followers_url": "https://api.github.com/users/DominiquedHumieres/followers", "following_url": "https://api.github.com/users/DominiquedHumieres/following{/other_user}", "gists_url": "https://api.github.com/users/DominiquedHumieres/gists{/gist_id}", "starred_url": "https://api.github.com/users/DominiquedHumieres/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DominiquedHumieres/subscriptions", "organizations_url": "https://api.github.com/users/DominiquedHumieres/orgs", "repos_url": "https://api.github.com/users/DominiquedHumieres/repos", "events_url": "https://api.github.com/users/DominiquedHumieres/events{/privacy}", "received_events_url": "https://api.github.com/users/DominiquedHumieres/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3de4ac6d80c8ae24b58586003aded178d7ec8453", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3de4ac6d80c8ae24b58586003aded178d7ec8453", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3de4ac6d80c8ae24b58586003aded178d7ec8453"}], "stats": {"total": 545, "additions": 280, "deletions": 265}, "files": [{"sha": "3c6a47e824ebae05c4af28c7b7bb6b973702822e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 79, "deletions": 0, "changes": 79, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=82c027e160f351c62ef09a5167a3ad6b680e8017", "patch": "@@ -1,3 +1,82 @@\n+2017-06-04  Dominique d'Humieres  <dominiq@lps.ens.fr>\n+\n+\t* lib/fortran-modules.exp (igrep): New procedure, case insensitive\n+\tvesrion of the dejagnu grep.\n+\t(list-module-names): Use it and adjust the regular expressions for\n+\tmodules and submodules.\n+\t* gfortran.dg/prof/prof.exp: Cleanup modules.\n+\t* gfortran.dg/allocate_class_4.f90: Remove cleanup-(sub)?modules\n+\tdirectives.\n+\t* gfortran.dg/altreturn_8.f90: Likewise.\n+\t* gfortran.dg/associate_12.f90: Likewise.\n+\t* gfortran.dg/c_f_pointer_shape_test.f90: Likewise.\n+\t* gfortran.dg/charlen_15.f90: Likewise.\n+\t* gfortran.dg/class_4a.f03: Likewise.\n+\t* gfortran.dg/class_54.f90: Likewise.\n+\t* gfortran.dg/class_dummy_4.f03: Likewise.\n+\t* gfortran.dg/class_dummy_5.f90: Likewise.\n+\t* gfortran.dg/constructor_9.f90: Likewise.\n+\t* gfortran.dg/dec_structure_15.f90: Likewise.\n+\t* gfortran.dg/do_check_8.f90: Likewise.\n+\t* gfortran.dg/dtio_26.f03: Likewise.\n+\t* gfortran.dg/dynamic_dispatch_12.f90: Likewise.\n+\t* gfortran.dg/equiv_9.f90: Likewise.\n+\t* gfortran.dg/extends_15.f90: Likewise.\n+\t* gfortran.dg/finalize_22.f90: Likewise.\n+\t* gfortran.dg/finalize_23.f90: Likewise.\n+\t* gfortran.dg/generic_26.f90: Likewise.\n+\t* gfortran.dg/generic_27.f90: Likewise.\n+\t* gfortran.dg/namelist_76.f90: Likewise.\n+\t* gfortran.dg/pointer_init_8.f90: Likewise.\n+\t* gfortran.dg/pr61318.f90: Likewise.\n+\t* gfortran.dg/pr77260_1.f90: Likewise.\n+\t* gfortran.dg/pr77260_2.f90: Likewise.\n+\t* gfortran.dg/pr77420_3.f90: Likewise.\n+\t* gfortran.dg/proc_ptr_39.f90: Likewise.\n+\t* gfortran.dg/proc_ptr_41.f90: Likewise.\n+\t* gfortran.dg/proc_ptr_42.f90: Likewise.\n+\t* gfortran.dg/proc_ptr_comp_43.f90: Likewise.\n+\t* gfortran.dg/submodule_1.f08: Likewise.\n+\t* gfortran.dg/submodule_10.f08: Likewise.\n+\t* gfortran.dg/submodule_14.f08: Likewise.\n+\t* gfortran.dg/submodule_15.f08: Likewise.\n+\t* gfortran.dg/submodule_2.f08: Likewise.\n+\t* gfortran.dg/submodule_5.f08: Likewise.\n+\t* gfortran.dg/submodule_6.f08: Likewise.\n+\t* gfortran.dg/submodule_7.f08: Likewise.\n+\t* gfortran.dg/submodule_8.f08: Likewise.\n+\t* gfortran.dg/submodule_9.f08: Likewise.\n+\t* gfortran.dg/transfer_class_2.f90: Likewise.\n+\t* gfortran.dg/typebound_assignment_7.f90: Likewise.\n+\t* gfortran.dg/typebound_call_24.f03: Likewise.\n+\t* gfortran.dg/typebound_call_25.f90: Likewise.\n+\t* gfortran.dg/typebound_deferred_1.f90: Likewise.\n+\t* gfortran.dg/typebound_generic_12.f03: Likewise.\n+\t* gfortran.dg/typebound_generic_13.f03: Likewise.\n+\t* gfortran.dg/typebound_generic_14.f03: Likewise.\n+\t* gfortran.dg/typebound_generic_15.f90: Likewise.\n+\t* gfortran.dg/typebound_operator_16.f03: Likewise.\n+\t* gfortran.dg/typebound_operator_18.f90: Likewise.\n+\t* gfortran.dg/typebound_operator_20.f90: Likewise.\n+\t* gfortran.dg/typebound_override_3.f90: Likewise.\n+\t* gfortran.dg/typebound_override_4.f90: Likewise.\n+\t* gfortran.dg/typebound_override_5.f90: Likewise.\n+\t* gfortran.dg/typebound_override_6.f90: Likewise.\n+\t* gfortran.dg/typebound_override_7.f90: Likewise.\n+\t* gfortran.dg/typebound_proc_28.f03: Likewise.\n+\t* gfortran.dg/typebound_proc_29.f90: Likewise.\n+\t* gfortran.dg/typebound_proc_30.f90: Likewise.\n+\t* gfortran.dg/typebound_proc_31.f90: Likewise.\n+\t* gfortran.dg/typebound_proc_32.f90: Likewise.\n+\t* gfortran.dg/typebound_proc_33.f90: Likewise.\n+\t* gfortran.dg/unlimited_polymorphic_16.f90: Likewise.\n+\t* gfortran.dg/unlimited_polymorphic_19.f90: Likewise.\n+\t* gfortran.dg/unlimited_polymorphic_24.f03: Likewise.\n+\t* gfortran.dg/use_only_3.f90: Likewise.\n+\t* gfortran.dg/use_without_only_1.f90: Likewise.\n+\t* gfortran.dg/warn_unused_function.f90: Likewise.\n+\t* gfortran.dg/warn_unused_function_2.f90: Likewise.\n+\t* gfortran.dg/ieee/ieee_8.f90: Likewise.\n 2017-06-04  Marek Polacek  <polacek@redhat.com>\n \n \tPR c/80919"}, {"sha": "125d99f4d865740746c080afc5245d2c2207d5b5", "filename": "gcc/testsuite/gfortran.dg/allocate_class_4.f90", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Fallocate_class_4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Fallocate_class_4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fallocate_class_4.f90?ref=82c027e160f351c62ef09a5167a3ad6b680e8017", "patch": "@@ -31,6 +31,3 @@ subroutine integrate(this)\n       end subroutine\n \n end module integrable_model_module\n-\n-! { dg-final { cleanup-modules \"integrable_model_module\" } }\n- "}, {"sha": "63a6ef724200f2a8ee621aa13ca5791e7036ae23", "filename": "gcc/testsuite/gfortran.dg/altreturn_8.f90", "status": "modified", "additions": 21, "deletions": 23, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Faltreturn_8.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Faltreturn_8.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Faltreturn_8.f90?ref=82c027e160f351c62ef09a5167a3ad6b680e8017", "patch": "@@ -1,23 +1,21 @@\n-! { dg-do compile }\r\n-! { dg-options \"-std=gnu\" }\r\n-!\r\n-! PR 56284: [OOP] ICE with alternate return in type-bound procedure\r\n-!\r\n-! Contributed by Arjen Markus <arjen.markus@deltares.nl>\r\n-\r\n-module try_this\r\n-  implicit none\r\n-\r\n-  type :: table_t\r\n-  contains\r\n-    procedure, nopass :: getRecord\r\n-  end type\r\n-\r\n-contains\r\n-\r\n-  subroutine getRecord ( * )\r\n-  end subroutine\r\n-\r\n-end module\r\n-\r\n-! { dg-final { cleanup-modules \"try_this\" } }\r\n+! { dg-do compile }\n+! { dg-options \"-std=gnu\" }\n+!\n+! PR 56284: [OOP] ICE with alternate return in type-bound procedure\n+!\n+! Contributed by Arjen Markus <arjen.markus@deltares.nl>\n+\n+module try_this\n+  implicit none\n+\n+  type :: table_t\n+  contains\n+    procedure, nopass :: getRecord\n+  end type\n+\n+contains\n+\n+  subroutine getRecord ( * )\n+  end subroutine\n+\n+end module"}, {"sha": "8d2abb8adb1535f73158e6a02451899d348d6f11", "filename": "gcc/testsuite/gfortran.dg/associate_12.f90", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Fassociate_12.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Fassociate_12.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fassociate_12.f90?ref=82c027e160f351c62ef09a5167a3ad6b680e8017", "patch": "@@ -25,5 +25,3 @@ program assoc_err\n     print *, 1. + b\n   end associate\n end program\n-\n-! { dg-final { cleanup-modules \"assoc_err_m\" } }"}, {"sha": "86377123af6b81ee2ccfaf7b7a4f5c54dc04b66b", "filename": "gcc/testsuite/gfortran.dg/c_f_pointer_shape_test.f90", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Fc_f_pointer_shape_test.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Fc_f_pointer_shape_test.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fc_f_pointer_shape_test.f90?ref=82c027e160f351c62ef09a5167a3ad6b680e8017", "patch": "@@ -16,5 +16,3 @@ subroutine test_0(myAssumedArray, cPtr)\n     call c_f_pointer(cPtr, myArrayPtr) ! { dg-error \"Expected SHAPE argument to C_F_POINTER with array FPTR\" }\n   end subroutine test_0\n end module c_f_pointer_shape_test\n-\n-! { dg-final { cleanup-modules \"c_f_pointer_shape_test\" } }"}, {"sha": "ed8ff00bec1c2d3b2ee31da049521f9d39e539e2", "filename": "gcc/testsuite/gfortran.dg/charlen_15.f90", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Fcharlen_15.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Fcharlen_15.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fcharlen_15.f90?ref=82c027e160f351c62ef09a5167a3ad6b680e8017", "patch": "@@ -10,5 +10,3 @@ program foo\n   use m\n   if (trim(x%c(1)) /= 'ab') call abort\n end program foo\n-! { dg-final { cleanup-modules \"m\" } }\n-"}, {"sha": "a6406a898a842d21b3ddd065c5b9a893328f62ea", "filename": "gcc/testsuite/gfortran.dg/class_4a.f03", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Fclass_4a.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Fclass_4a.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fclass_4a.f03?ref=82c027e160f351c62ef09a5167a3ad6b680e8017", "patch": "@@ -13,4 +13,3 @@ module m\n   type t\n   end type t\n end module m\n-! { dg-final { cleanup-modules \"m m2\" } }"}, {"sha": "fdcdebc54c4b797b3ce5b5f9ddcc0fe4b765cec1", "filename": "gcc/testsuite/gfortran.dg/class_54.f90", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Fclass_54.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Fclass_54.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fclass_54.f90?ref=82c027e160f351c62ef09a5167a3ad6b680e8017", "patch": "@@ -18,5 +18,3 @@ subroutine sub2\n   use m\n   class(t), pointer :: a2\n end subroutine\n-\n-! { dg-final { cleanup-modules \"m\" } }"}, {"sha": "6c2abad546a3e5539d81f274e3257eafb2ebb508", "filename": "gcc/testsuite/gfortran.dg/class_dummy_4.f03", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Fclass_dummy_4.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Fclass_dummy_4.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fclass_dummy_4.f03?ref=82c027e160f351c62ef09a5167a3ad6b680e8017", "patch": "@@ -40,5 +40,3 @@ subroutine source(y)\n   type(c_stv), allocatable, intent(out) :: y\n  end subroutine\n end\n-\n-! { dg-final { cleanup-modules \"m1 m2\" } }"}, {"sha": "78fc4f8c622507118963b65929341e2249f226f2", "filename": "gcc/testsuite/gfortran.dg/class_dummy_5.f90", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Fclass_dummy_5.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Fclass_dummy_5.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fclass_dummy_5.f90?ref=82c027e160f351c62ef09a5167a3ad6b680e8017", "patch": "@@ -26,5 +26,3 @@ pure subroutine foo(x)  ! { dg-error \"may not be polymorphic\" }\n     class(t), intent(out) :: x\n   end subroutine\n end\n-\n-! { dg-final { cleanup-modules \"m\" } }"}, {"sha": "a8e882138fd7bed3f345db88e4b04329871291ff", "filename": "gcc/testsuite/gfortran.dg/constructor_9.f90", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Fconstructor_9.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Fconstructor_9.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fconstructor_9.f90?ref=82c027e160f351c62ef09a5167a3ad6b680e8017", "patch": "@@ -18,5 +18,3 @@ subroutine cfi()\n     cfd=cfmde()                  ! { dg-error \"Can't convert\" }\n   end subroutine\n end module\n-\n-! { dg-final { cleanup-modules \"cf\" } }"}, {"sha": "33f51266c0f77b27a955b9755d7e688aa7bca121", "filename": "gcc/testsuite/gfortran.dg/dec_structure_15.f90", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec_structure_15.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec_structure_15.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec_structure_15.f90?ref=82c027e160f351c62ef09a5167a3ad6b680e8017", "patch": "@@ -24,4 +24,3 @@ double precision function a2()\n     a2 = 0.0\n   end function\n end module\n-! { dg-final { cleanup-modules \"dec_structure_15\" } }"}, {"sha": "5b9acc3d68f6806496b04072ac94392df2cfce9d", "filename": "gcc/testsuite/gfortran.dg/do_check_8.f90", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Fdo_check_8.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Fdo_check_8.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdo_check_8.f90?ref=82c027e160f351c62ef09a5167a3ad6b680e8017", "patch": "@@ -56,4 +56,3 @@ program main\n      call sub(undeclared)\n   end do\n end program main\n-! { dg-final { cleanup-modules \"foo\" } }"}, {"sha": "ad05da0523e27677a9e4085cd9e58838da3f5c5a", "filename": "gcc/testsuite/gfortran.dg/dtio_26.f03", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Fdtio_26.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Fdtio_26.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdtio_26.f03?ref=82c027e160f351c62ef09a5167a3ad6b680e8017", "patch": "@@ -65,5 +65,3 @@ program p\n   read( unit=s, fmt=*, iostat=istat, iomsg=imsg) foo\n   if (imsg.ne.\"End of record\") call abort\n end program p\n-\n-! { dg-final { cleanup-modules \"t_m\" } }"}, {"sha": "53cc957c4d27e8c45da43e21cb991166191e9f07", "filename": "gcc/testsuite/gfortran.dg/dynamic_dispatch_12.f90", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Fdynamic_dispatch_12.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Fdynamic_dispatch_12.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdynamic_dispatch_12.f90?ref=82c027e160f351c62ef09a5167a3ad6b680e8017", "patch": "@@ -70,5 +70,3 @@ subroutine runtest (result)\n   end subroutine\n \n end\n-\n-! { dg-final { cleanup-modules \"TestResult_mod BaseTestRunner_mod TestRunner_mod\" } }"}, {"sha": "5a226282161cae2fcc61747a6ea3cdcc33b5ae43", "filename": "gcc/testsuite/gfortran.dg/equiv_9.f90", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Fequiv_9.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Fequiv_9.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fequiv_9.f90?ref=82c027e160f351c62ef09a5167a3ad6b680e8017", "patch": "@@ -19,4 +19,3 @@ subroutine another()\n    implicit none\n    if (x2 /= 2) call abort\n end subroutine\n-! { dg-final { cleanup-modules \"constant\" } }"}, {"sha": "03f1ff15a18bc7fe5960c9cfed65f2cca2d978ed", "filename": "gcc/testsuite/gfortran.dg/extends_15.f90", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Fextends_15.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Fextends_15.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fextends_15.f90?ref=82c027e160f351c62ef09a5167a3ad6b680e8017", "patch": "@@ -12,5 +12,3 @@ module ct\n   type :: t1\n   end type\n end\n-\n-! { dg-final { cleanup-modules \"ct\" } }"}, {"sha": "cad4481579654a4c9e96da06c10eb7a7afe26c96", "filename": "gcc/testsuite/gfortran.dg/finalize_22.f90", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Ffinalize_22.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Ffinalize_22.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ffinalize_22.f90?ref=82c027e160f351c62ef09a5167a3ad6b680e8017", "patch": "@@ -16,5 +16,3 @@ subroutine mld(s)   ! { dg-error \"must be of type\" }\n     class(cfml), intent(inout) :: s\n   end subroutine mld\n end module cf\n-\n-! { dg-final { cleanup-modules \"cf\" } }"}, {"sha": "9dab53e1f1384793c34d6514f5982499f9eaf1eb", "filename": "gcc/testsuite/gfortran.dg/finalize_23.f90", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Ffinalize_23.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Ffinalize_23.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ffinalize_23.f90?ref=82c027e160f351c62ef09a5167a3ad6b680e8017", "patch": "@@ -27,5 +27,3 @@ integer function CompareReal(this)\n   end function\n \n end module\n-\n-! { dg-final { cleanup-modules \"ObjectLists\" } }"}, {"sha": "81a0604fbcc08a728b6b823f28ae3c64311b7361", "filename": "gcc/testsuite/gfortran.dg/generic_26.f90", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Fgeneric_26.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Fgeneric_26.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgeneric_26.f90?ref=82c027e160f351c62ef09a5167a3ad6b680e8017", "patch": "@@ -25,5 +25,3 @@ logical function testPtr(obj)      ! { dg-error \"Ambiguous interfaces\" }\n   end function\n   \n end\n-\n-! { dg-final { cleanup-modules \"a\" } }"}, {"sha": "6f603ae4c9147436d4d177ac2dfc1fe861f6ff5f", "filename": "gcc/testsuite/gfortran.dg/generic_27.f90", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Fgeneric_27.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Fgeneric_27.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgeneric_27.f90?ref=82c027e160f351c62ef09a5167a3ad6b680e8017", "patch": "@@ -30,5 +30,3 @@ program test\n   if (testIF(cos)/=1.0) call abort()\n \n end program\n-\n-! { dg-final { cleanup-modules \"m\" } }"}, {"sha": "a47f9c16b914071854720eec73377f85ffd4195b", "filename": "gcc/testsuite/gfortran.dg/ieee/ieee_8.f90", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Fieee%2Fieee_8.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Fieee%2Fieee_8.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fieee%2Fieee_8.f90?ref=82c027e160f351c62ef09a5167a3ad6b680e8017", "patch": "@@ -111,5 +111,3 @@ subroutine gee(n, rounding, flag)\n   if (len(s8) /= x8) call abort\n \n end subroutine\n-\n-! { dg-final { cleanup-modules \"foo bar\" } }"}, {"sha": "9c233fb5bcbe0c4329354518a62a76fcd96c853a", "filename": "gcc/testsuite/gfortran.dg/namelist_76.f90", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_76.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_76.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_76.f90?ref=82c027e160f351c62ef09a5167a3ad6b680e8017", "patch": "@@ -24,5 +24,3 @@ subroutine write_data()\n   write(10, nml=write_data_list)\n   close(10)\n end subroutine write_data\n-\n-! { dg-final { cleanup-modules \"data\" } }"}, {"sha": "8c6bdb2a6a359d9e8b06acd35d74cdfab1a63f07", "filename": "gcc/testsuite/gfortran.dg/pointer_init_8.f90", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Fpointer_init_8.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Fpointer_init_8.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpointer_init_8.f90?ref=82c027e160f351c62ef09a5167a3ad6b680e8017", "patch": "@@ -22,5 +22,3 @@ end module m\n   if (.not. associated(py, y))   call abort()\n   if (.not. same_type_as(py, y)) call abort()\n end \n-\n-! { dg-final { cleanup-modules \"m\" } }"}, {"sha": "57da52d58905389d455b561f241430c7ae008ea3", "filename": "gcc/testsuite/gfortran.dg/pr61318.f90", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr61318.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr61318.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr61318.f90?ref=82c027e160f351c62ef09a5167a3ad6b680e8017", "patch": "@@ -20,4 +20,3 @@ program test\n   use gbl_interfaces\n   call gagout(seve%e,'Some string') ! { dg-error \"Type mismatch in argument\" }\n end program test\n-! { dg-final { cleanup-modules \"gbl_interfaces gbl_message\" } }"}, {"sha": "76ef3cffced4282e961497f996d25c408d308e4c", "filename": "gcc/testsuite/gfortran.dg/pr77260_1.f90", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr77260_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr77260_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr77260_1.f90?ref=82c027e160f351c62ef09a5167a3ad6b680e8017", "patch": "@@ -22,4 +22,3 @@ program test\n    implicit none\n    print *,f2()\n end program\n-! { dg-final { cleanup-modules \"foo\" } }"}, {"sha": "0c5ebe3a65618c520c5b2aa9d3f3f9eaa9e46af8", "filename": "gcc/testsuite/gfortran.dg/pr77260_2.f90", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr77260_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr77260_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr77260_2.f90?ref=82c027e160f351c62ef09a5167a3ad6b680e8017", "patch": "@@ -23,4 +23,3 @@ program test\n    implicit none\n    print *,f2()\n end program\n-! { dg-final { cleanup-modules \"foo\" } }"}, {"sha": "c53fce7b438b21a248ab54c6f54c06638ed9f009", "filename": "gcc/testsuite/gfortran.dg/pr77420_3.f90", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr77420_3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr77420_3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr77420_3.f90?ref=82c027e160f351c62ef09a5167a3ad6b680e8017", "patch": "@@ -6,4 +6,3 @@ module h5global\n   integer :: h5p_default_f, h5p_flags\n   equivalence(h5p_flags, h5p_default_f)\n end module h5global\n-! { dg-final { cleanup-modules \"h5global\" } }"}, {"sha": "b3e0eb995ba0d03c6f71bcaa42afe8db62f3e18a", "filename": "gcc/testsuite/gfortran.dg/proc_ptr_39.f90", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_ptr_39.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_ptr_39.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_ptr_39.f90?ref=82c027e160f351c62ef09a5167a3ad6b680e8017", "patch": "@@ -17,5 +17,3 @@ program Test\n   use Module1\n   use Module2\n end program\n-\n-! { dg-final { cleanup-modules \"Module1 Module2\" } }"}, {"sha": "534ab0fb5a72b48680a5410a377000b399f63676", "filename": "gcc/testsuite/gfortran.dg/proc_ptr_41.f90", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_ptr_41.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_ptr_41.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_ptr_41.f90?ref=82c027e160f351c62ef09a5167a3ad6b680e8017", "patch": "@@ -33,5 +33,3 @@ program crash_test\n     ptr => generic_name_get_proc_ptr()\n \n end program\n-\n-! { dg-final { cleanup-modules \"test\" } }"}, {"sha": "c92e537acbee3fdd624bfb2986a4f38ed644c6ce", "filename": "gcc/testsuite/gfortran.dg/proc_ptr_42.f90", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_ptr_42.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_ptr_42.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_ptr_42.f90?ref=82c027e160f351c62ef09a5167a3ad6b680e8017", "patch": "@@ -32,5 +32,3 @@ program p\n  use m2\n   call ns_dirdata(f)\n end\n-\n-! { dg-final { cleanup-modules \"m1 m2\" } }"}, {"sha": "dc9a7ba65bf4db24377ac8c8e295bb6c316e235d", "filename": "gcc/testsuite/gfortran.dg/prof/prof.exp", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Fprof%2Fprof.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Fprof%2Fprof.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fprof%2Fprof.exp?ref=82c027e160f351c62ef09a5167a3ad6b680e8017", "patch": "@@ -18,6 +18,7 @@\n # ordering using -fprofile-generate followed by -fprofile-use.\n \n load_lib target-supports.exp\n+load_lib fortran-modules.exp\n \n # Some targets don't support tree profiling.\n if { ![check_profiling_available \"-fprofile-generate\"] } {\n@@ -50,7 +51,9 @@ foreach src [lsort [glob -nocomplain $srcdir/$subdir/*.f*]] {\n     if ![runtest_file_p $runtests $src] then {\n         continue\n     }\n+    list-module-names $src\n     profopt-execute $src\n+    cleanup-modules \"\"\n }\n \n foreach src [lsort [glob -nocomplain $srcdir/$subdir/*.f*]] {"}, {"sha": "2c5d373206ea13437d4005b7bb464fe7fd1906e3", "filename": "gcc/testsuite/gfortran.dg/submodule_1.f08", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Fsubmodule_1.f08", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Fsubmodule_1.f08", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fsubmodule_1.f08?ref=82c027e160f351c62ef09a5167a3ad6b680e8017", "patch": "@@ -170,6 +170,3 @@ subroutine clear_messages\n      message2 = \"\"\n    end subroutine\n  end program\n-! { dg-final { cleanup-submodules \"foo_interface@foo_interface_son\" } }\n-! { dg-final { cleanup-submodules \"foo_interface@foo_interface_grandson\" } }\n-! { dg-final { cleanup-submodules \"foo_interface@foo_interface_daughter\" } }"}, {"sha": "373b11c9f96965adff58bcd34e70749cb7a8ff04", "filename": "gcc/testsuite/gfortran.dg/submodule_10.f08", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Fsubmodule_10.f08", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Fsubmodule_10.f08", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fsubmodule_10.f08?ref=82c027e160f351c62ef09a5167a3ad6b680e8017", "patch": "@@ -167,5 +167,3 @@ program testlk\n \n   stop\n end program testlk\n-! { dg-final { cleanup-submodules \"error_mod@error_impl_mod\" } }\n-"}, {"sha": "bc8fd8042a7626b4df2f28b53019b5cf9305434b", "filename": "gcc/testsuite/gfortran.dg/submodule_14.f08", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Fsubmodule_14.f08", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Fsubmodule_14.f08", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fsubmodule_14.f08?ref=82c027e160f351c62ef09a5167a3ad6b680e8017", "patch": "@@ -46,4 +46,3 @@ recursive module function fcn1 (x) result(res)\n   x = 10\n   if (fcn1 (x) .ne. 0) call abort\n end\n-! { dg-final { cleanup-submodules \"test@testson\" } }"}, {"sha": "499bc66d5ac4cc84e90255cdf7ee1a2a297904c2", "filename": "gcc/testsuite/gfortran.dg/submodule_15.f08", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Fsubmodule_15.f08", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Fsubmodule_15.f08", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fsubmodule_15.f08?ref=82c027e160f351c62ef09a5167a3ad6b680e8017", "patch": "@@ -56,4 +56,3 @@ end module A\n   incr = 1\n   if (a3(i) .ne. 11) call abort\n end\n-! { dg-final { cleanup-submodules \"a@a_son\" } }"}, {"sha": "43456d5fc4c287b90e39b5a3eca542122af625fc", "filename": "gcc/testsuite/gfortran.dg/submodule_2.f08", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Fsubmodule_2.f08", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Fsubmodule_2.f08", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fsubmodule_2.f08?ref=82c027e160f351c62ef09a5167a3ad6b680e8017", "patch": "@@ -98,5 +98,3 @@ program try\n    if (any (arg%greeting .ne. [\"adieu, people!\", \"adieu, people!\"])) call abort\n  contains\n  end program\n-! { dg-final { cleanup-submodules \"foo_interface@foo_interface_son\" } }\n-! { dg-final { cleanup-submodules \"foo_interface@foo_interface_daughter\" } }"}, {"sha": "ed5722ed16741d54e2c04d833071e5544f6b80cc", "filename": "gcc/testsuite/gfortran.dg/submodule_5.f08", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Fsubmodule_5.f08", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Fsubmodule_5.f08", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fsubmodule_5.f08?ref=82c027e160f351c62ef09a5167a3ad6b680e8017", "patch": "@@ -57,4 +57,3 @@ subroutine foobar (arg)\n end SUBMODULE foo_interface_daughter\n \n end\n-! { dg-final { cleanup-submodules \"foo_interface@foo_interface_daughter\" } }"}, {"sha": "ec9dfa9e725a3c70604a23620a7cbe03b3120f1a", "filename": "gcc/testsuite/gfortran.dg/submodule_6.f08", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Fsubmodule_6.f08", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Fsubmodule_6.f08", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fsubmodule_6.f08?ref=82c027e160f351c62ef09a5167a3ad6b680e8017", "patch": "@@ -92,6 +92,3 @@ program p\n   call p_a(a, create_b([3,4,5]))\n   call print(a)\n end program p\n-! { dg-final { cleanup-submodules \"mod_a@imp_p_a\" } }\n-! { dg-final { cleanup-submodules \"mod_b@imp_create\" } }\n-"}, {"sha": "fd1bee6296c229924292749a243be74e97bb6edf", "filename": "gcc/testsuite/gfortran.dg/submodule_7.f08", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Fsubmodule_7.f08", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Fsubmodule_7.f08", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fsubmodule_7.f08?ref=82c027e160f351c62ef09a5167a3ad6b680e8017", "patch": "@@ -145,5 +145,3 @@ program main\n   call verify_cleanup (c_1, c_2)\n !...\n end program main\n-! { dg-final { cleanup-submodules \"color_points@color_points_a\" } }\n-! { dg-final { cleanup-submodules \"color_points@color_points_b\" } }"}, {"sha": "b3c1565bbd8c260294c03644d1808f50a0f90552", "filename": "gcc/testsuite/gfortran.dg/submodule_8.f08", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Fsubmodule_8.f08", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Fsubmodule_8.f08", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fsubmodule_8.f08?ref=82c027e160f351c62ef09a5167a3ad6b680e8017", "patch": "@@ -41,4 +41,3 @@ program a_s\n     call abort\n   end if\n end program\n-! { dg-final { cleanup-submodules \"mod_a@mod_s\" } }"}, {"sha": "4589ebcd6d288deda2e330203493dec311f00e72", "filename": "gcc/testsuite/gfortran.dg/submodule_9.f08", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Fsubmodule_9.f08", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Fsubmodule_9.f08", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fsubmodule_9.f08?ref=82c027e160f351c62ef09a5167a3ad6b680e8017", "patch": "@@ -38,4 +38,3 @@ program a_s\n   implicit none\n   call p()\n end program\n-! { dg-final { cleanup-submodules \"mod_a@b\" } }"}, {"sha": "476eaccc709e59351e70cce2a849f09b6ec09a23", "filename": "gcc/testsuite/gfortran.dg/transfer_class_2.f90", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Ftransfer_class_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Ftransfer_class_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ftransfer_class_2.f90?ref=82c027e160f351c62ef09a5167a3ad6b680e8017", "patch": "@@ -41,5 +41,3 @@ program p\n   if (c%i /= 4) call abort()\n \n end\n-\n-! { dg-final { cleanup-modules \"m\" } }"}, {"sha": "e297d9f8ddfa72a71bf175853b93079f4e73062e", "filename": "gcc/testsuite/gfortran.dg/typebound_assignment_7.f90", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_assignment_7.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_assignment_7.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_assignment_7.f90?ref=82c027e160f351c62ef09a5167a3ad6b680e8017", "patch": "@@ -62,5 +62,3 @@ program test_assign\n   end select\n \n end\n-\n-! { dg-final { cleanup-modules \"mod1 mod2\" } }"}, {"sha": "45990aebe41c336436fe90221d0b87f07074105b", "filename": "gcc/testsuite/gfortran.dg/typebound_call_24.f03", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_call_24.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_call_24.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_call_24.f03?ref=82c027e160f351c62ef09a5167a3ad6b680e8017", "patch": "@@ -20,5 +20,3 @@ program bug2\n   class(aqq_t) :: aqq  ! { dg-error \"must be dummy, allocatable or pointer\" }\n   call aqq%aqq_init\n end program\n-\n-! { dg-final { cleanup-modules \"aqq_m\" } }"}, {"sha": "7f5fb07f9aae570c40166dfd2ad6ab41f7bba162", "filename": "gcc/testsuite/gfortran.dg/typebound_call_25.f90", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_call_25.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_call_25.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_call_25.f90?ref=82c027e160f351c62ef09a5167a3ad6b680e8017", "patch": "@@ -34,5 +34,3 @@ SUBROUTINE test (field1, field2, field3, field4)\n   END SUBROUTINE\n \n END MODULE\n-\n-! { dg-final { cleanup-modules \"my_mod\" } }"}, {"sha": "a08e5343b7de66e2532cc334d31e3138007d30dc", "filename": "gcc/testsuite/gfortran.dg/typebound_deferred_1.f90", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_deferred_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_deferred_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_deferred_1.f90?ref=82c027e160f351c62ef09a5167a3ad6b680e8017", "patch": "@@ -19,5 +19,3 @@ subroutine inter(this)\n   end subroutine inter\n \n end module m \n-\n-! { dg-final { cleanup-modules \"m\" } }"}, {"sha": "c9d0fe0b5de0c29204ec94ba9976226fa98f9092", "filename": "gcc/testsuite/gfortran.dg/typebound_generic_12.f03", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_generic_12.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_generic_12.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_generic_12.f03?ref=82c027e160f351c62ef09a5167a3ad6b680e8017", "patch": "@@ -22,5 +22,3 @@ subroutine sub2 (this, y)\n     class(t) :: this\n   end subroutine sub2\n end module m \n-\n-! { dg-final { cleanup-modules \"m\" } }"}, {"sha": "eff919e9328b5bbeebda02b6c1fa77792de4df07", "filename": "gcc/testsuite/gfortran.dg/typebound_generic_13.f03", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_generic_13.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_generic_13.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_generic_13.f03?ref=82c027e160f351c62ef09a5167a3ad6b680e8017", "patch": "@@ -24,5 +24,3 @@ subroutine baseproc2 (this, that)\n   end subroutine\n \n end module\n-\n-! { dg-final { cleanup-modules \"m\" } }"}, {"sha": "8fd2a59578ea21a1860c37ff6687124ed85cbe06", "filename": "gcc/testsuite/gfortran.dg/typebound_generic_14.f03", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_generic_14.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_generic_14.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_generic_14.f03?ref=82c027e160f351c62ef09a5167a3ad6b680e8017", "patch": "@@ -23,5 +23,3 @@ subroutine a_ass_sv (out)\n   end subroutine\n \n end module\n-\n-! { dg-final { cleanup-modules \"a_mod\" } }"}, {"sha": "2cff16d1995029cf73d9a9d04ca67751bad8d6a4", "filename": "gcc/testsuite/gfortran.dg/typebound_generic_15.f90", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_generic_15.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_generic_15.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_generic_15.f90?ref=82c027e160f351c62ef09a5167a3ad6b680e8017", "patch": "@@ -14,5 +14,3 @@ module Objects\n   end Type\n \n end module\n-\n-! { dg-final { cleanup-modules \"Objects\" } }"}, {"sha": "f56301cfd15ffbb504940182ecd13c7558087299", "filename": "gcc/testsuite/gfortran.dg/typebound_operator_16.f03", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_operator_16.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_operator_16.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_operator_16.f03?ref=82c027e160f351c62ef09a5167a3ad6b680e8017", "patch": "@@ -45,5 +45,3 @@ integer function MyAdd ( A, B )\n     myadd = a%x + b\n   end function MyAdd\n end module\n-\n-! { dg-final { cleanup-modules \"M1 M2\" } }"}, {"sha": "1288ef50d422e4626b6d29d87acda3646ee6d3fb", "filename": "gcc/testsuite/gfortran.dg/typebound_operator_18.f90", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_operator_18.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_operator_18.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_operator_18.f90?ref=82c027e160f351c62ef09a5167a3ad6b680e8017", "patch": "@@ -21,5 +21,3 @@ integer function negative(this)\n     class(athlete) ,intent(in) :: this\n   end function\n end module \n-\n-! { dg-final { cleanup-modules \"athlete_module\" } }"}, {"sha": "81fe7744a853f47870b7911ee0d305b44e2d3725", "filename": "gcc/testsuite/gfortran.dg/typebound_operator_20.f90", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_operator_20.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_operator_20.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_operator_20.f90?ref=82c027e160f351c62ef09a5167a3ad6b680e8017", "patch": "@@ -49,5 +49,3 @@ program drive\n   if (h1%sum(h2) /= 1) call abort()\n \n end\n-\n-! { dg-final { cleanup-modules \"overwrite\" } }"}, {"sha": "c3ca5e355cf970e52cffd056c18ec2c210d32fa1", "filename": "gcc/testsuite/gfortran.dg/typebound_override_3.f90", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_override_3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_override_3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_override_3.f90?ref=82c027e160f351c62ef09a5167a3ad6b680e8017", "patch": "@@ -30,5 +30,3 @@ function name_B() result( name )\n     name = \"name_B\"\n   end function\n end module\n-\n-! { dg-final { cleanup-modules \"dtAs dtBs\" } }"}, {"sha": "634645263526b2348a08949b92c44761a2a62fe0", "filename": "gcc/testsuite/gfortran.dg/typebound_override_4.f90", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_override_4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_override_4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_override_4.f90?ref=82c027e160f351c62ef09a5167a3ad6b680e8017", "patch": "@@ -30,5 +30,3 @@ subroutine  r_clone(map,mapout)\n     class(r_type) :: mapout\n   end subroutine\n end module\n-\n-! { dg-final { cleanup-modules \"base_mod r_mod\" } }"}, {"sha": "fc48fccb648f18e83e7eed5dc00b57d7daae3416", "filename": "gcc/testsuite/gfortran.dg/typebound_override_5.f90", "status": "modified", "additions": 38, "deletions": 40, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_override_5.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_override_5.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_override_5.f90?ref=82c027e160f351c62ef09a5167a3ad6b680e8017", "patch": "@@ -1,40 +1,38 @@\n-! { dg-do compile }\r\n-!\r\n-! PR 54190: TYPE(*)/assumed-rank: Type/rank check too relaxed for dummy procedure\r\n-! PR 57217: [4.7/4.8/4.9 Regression][OOP] Accepts invalid TBP overriding - lacking arguments check\r\n-!\r\n-! Contributed by Tobias Burnus <burnus@gcc.gnu.org>\r\n-\r\n-module base_mod\r\n-  implicit none\r\n-  type base_type\r\n-    integer :: kind\r\n-  contains\r\n-    procedure, pass(map)  :: clone    => base_clone\r\n-  end type\r\n-contains\r\n-  subroutine  base_clone(map,mapout,info)\r\n-    class(base_type), intent(inout) :: map\r\n-    class(base_type), intent(inout) :: mapout\r\n-    integer     :: info\r\n-  end subroutine\r\n-end module\r\n-\r\n-module r_mod\r\n-  use base_mod\r\n-  implicit none\r\n-  type, extends(base_type) :: r_type\r\n-    real  :: dat\r\n-  contains\r\n-    procedure, pass(map)  :: clone    => r_clone   ! { dg-error \"Type mismatch in argument\" }\r\n-  end type\r\n-contains\r\n-  subroutine  r_clone(map,mapout,info)\r\n-    class(r_type), intent(inout) :: map\r\n-!gcc$ attributes no_arg_check :: mapout\r\n-    integer, intent(inout) :: mapout\r\n-    integer     :: info\r\n-  end subroutine\r\n-end module\r\n-\r\n-! { dg-final { cleanup-modules \"base_mod r_mod\" } }\r\n+! { dg-do compile }\n+!\n+! PR 54190: TYPE(*)/assumed-rank: Type/rank check too relaxed for dummy procedure\n+! PR 57217: [4.7/4.8/4.9 Regression][OOP] Accepts invalid TBP overriding - lacking arguments check\n+!\n+! Contributed by Tobias Burnus <burnus@gcc.gnu.org>\n+\n+module base_mod\n+  implicit none\n+  type base_type\n+    integer :: kind\n+  contains\n+    procedure, pass(map)  :: clone    => base_clone\n+  end type\n+contains\n+  subroutine  base_clone(map,mapout,info)\n+    class(base_type), intent(inout) :: map\n+    class(base_type), intent(inout) :: mapout\n+    integer     :: info\n+  end subroutine\n+end module\n+\n+module r_mod\n+  use base_mod\n+  implicit none\n+  type, extends(base_type) :: r_type\n+    real  :: dat\n+  contains\n+    procedure, pass(map)  :: clone    => r_clone   ! { dg-error \"Type mismatch in argument\" }\n+  end type\n+contains\n+  subroutine  r_clone(map,mapout,info)\n+    class(r_type), intent(inout) :: map\n+!gcc$ attributes no_arg_check :: mapout\n+    integer, intent(inout) :: mapout\n+    integer     :: info\n+  end subroutine\n+end module"}, {"sha": "55d4002ce17ede4e57fdafdc521ccb895ad06e10", "filename": "gcc/testsuite/gfortran.dg/typebound_override_6.f90", "status": "modified", "additions": 37, "deletions": 39, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_override_6.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_override_6.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_override_6.f90?ref=82c027e160f351c62ef09a5167a3ad6b680e8017", "patch": "@@ -1,39 +1,37 @@\n-! { dg-do compile }\r\n-!\r\n-! PR 54190: TYPE(*)/assumed-rank: Type/rank check too relaxed for dummy procedure\r\n-! PR 57217: [4.7/4.8/4.9 Regression][OOP] Accepts invalid TBP overriding - lacking arguments check\r\n-!\r\n-! Contributed by Tobias Burnus <burnus@gcc.gnu.org>\r\n-\r\n-module base_mod\r\n-  implicit none\r\n-  type base_type\r\n-    integer :: kind\r\n-  contains\r\n-    procedure, pass(map)  :: clone    => base_clone\r\n-  end type\r\n-contains\r\n-  subroutine  base_clone(map,mapout,info)\r\n-    class(base_type), intent(inout) :: map\r\n-    class(base_type), intent(inout) :: mapout\r\n-    integer     :: info\r\n-  end subroutine\r\n-end module\r\n-\r\n-module r_mod\r\n-  use base_mod\r\n-  implicit none\r\n-  type, extends(base_type) :: r_type\r\n-    real  :: dat\r\n-  contains\r\n-    procedure, pass(map)  :: clone    => r_clone   ! { dg-error \"Rank mismatch in argument\" }\r\n-  end type\r\n-contains\r\n-  subroutine  r_clone(map,mapout,info)\r\n-    class(r_type), intent(inout) :: map\r\n-    class(base_type), intent(inout) :: mapout(..)\r\n-    integer     :: info\r\n-  end subroutine\r\n-end module\r\n-\r\n-! { dg-final { cleanup-modules \"base_mod r_mod\" } }\r\n+! { dg-do compile }\n+!\n+! PR 54190: TYPE(*)/assumed-rank: Type/rank check too relaxed for dummy procedure\n+! PR 57217: [4.7/4.8/4.9 Regression][OOP] Accepts invalid TBP overriding - lacking arguments check\n+!\n+! Contributed by Tobias Burnus <burnus@gcc.gnu.org>\n+\n+module base_mod\n+  implicit none\n+  type base_type\n+    integer :: kind\n+  contains\n+    procedure, pass(map)  :: clone    => base_clone\n+  end type\n+contains\n+  subroutine  base_clone(map,mapout,info)\n+    class(base_type), intent(inout) :: map\n+    class(base_type), intent(inout) :: mapout\n+    integer     :: info\n+  end subroutine\n+end module\n+\n+module r_mod\n+  use base_mod\n+  implicit none\n+  type, extends(base_type) :: r_type\n+    real  :: dat\n+  contains\n+    procedure, pass(map)  :: clone    => r_clone   ! { dg-error \"Rank mismatch in argument\" }\n+  end type\n+contains\n+  subroutine  r_clone(map,mapout,info)\n+    class(r_type), intent(inout) :: map\n+    class(base_type), intent(inout) :: mapout(..)\n+    integer     :: info\n+  end subroutine\n+end module"}, {"sha": "6f75115df5ba9ff827a487f8c86f3ffe8491f96e", "filename": "gcc/testsuite/gfortran.dg/typebound_override_7.f90", "status": "modified", "additions": 37, "deletions": 39, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_override_7.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_override_7.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_override_7.f90?ref=82c027e160f351c62ef09a5167a3ad6b680e8017", "patch": "@@ -1,39 +1,37 @@\n-! { dg-do compile }\r\n-!\r\n-! PR 54190: TYPE(*)/assumed-rank: Type/rank check too relaxed for dummy procedure\r\n-! PR 57217: [4.7/4.8/4.9 Regression][OOP] Accepts invalid TBP overriding - lacking arguments check\r\n-!\r\n-! Contributed by Tobias Burnus <burnus@gcc.gnu.org>\r\n-\r\n-module base_mod\r\n-  implicit none\r\n-  type base_type\r\n-    integer :: kind\r\n-  contains\r\n-    procedure, pass(map)  :: clone    => base_clone\r\n-  end type\r\n-contains\r\n-  subroutine  base_clone(map,mapout,info)\r\n-    class(base_type), intent(inout) :: map\r\n-    class(base_type), intent(inout) :: mapout\r\n-    integer     :: info\r\n-  end subroutine\r\n-end module\r\n-\r\n-module r_mod\r\n-  use base_mod\r\n-  implicit none\r\n-  type, extends(base_type) :: r_type\r\n-    real  :: dat\r\n-  contains\r\n-    procedure, pass(map)  :: clone    => r_clone   ! { dg-error \"Type mismatch in argument\" }\r\n-  end type\r\n-contains\r\n-  subroutine  r_clone(map,mapout,info)\r\n-    class(r_type), intent(inout) :: map\r\n-    type(*), intent(inout) :: mapout\r\n-    integer     :: info\r\n-  end subroutine\r\n-end module\r\n-\r\n-! { dg-final { cleanup-modules \"base_mod r_mod\" } }\r\n+! { dg-do compile }\n+!\n+! PR 54190: TYPE(*)/assumed-rank: Type/rank check too relaxed for dummy procedure\n+! PR 57217: [4.7/4.8/4.9 Regression][OOP] Accepts invalid TBP overriding - lacking arguments check\n+!\n+! Contributed by Tobias Burnus <burnus@gcc.gnu.org>\n+\n+module base_mod\n+  implicit none\n+  type base_type\n+    integer :: kind\n+  contains\n+    procedure, pass(map)  :: clone    => base_clone\n+  end type\n+contains\n+  subroutine  base_clone(map,mapout,info)\n+    class(base_type), intent(inout) :: map\n+    class(base_type), intent(inout) :: mapout\n+    integer     :: info\n+  end subroutine\n+end module\n+\n+module r_mod\n+  use base_mod\n+  implicit none\n+  type, extends(base_type) :: r_type\n+    real  :: dat\n+  contains\n+    procedure, pass(map)  :: clone    => r_clone   ! { dg-error \"Type mismatch in argument\" }\n+  end type\n+contains\n+  subroutine  r_clone(map,mapout,info)\n+    class(r_type), intent(inout) :: map\n+    type(*), intent(inout) :: mapout\n+    integer     :: info\n+  end subroutine\n+end module"}, {"sha": "04d97f80641481966967123fb3044e64b78acab4", "filename": "gcc/testsuite/gfortran.dg/typebound_proc_28.f03", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_proc_28.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_proc_28.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_proc_28.f03?ref=82c027e160f351c62ef09a5167a3ad6b680e8017", "patch": "@@ -26,5 +26,3 @@ double precision function cem(c)\n   end function\n \n end module\n-\n-! { dg-final { cleanup-modules \"t\" } }"}, {"sha": "3e9a9aab634ae4f73b2684b119d1f7c82794a578", "filename": "gcc/testsuite/gfortran.dg/typebound_proc_29.f90", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_proc_29.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_proc_29.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_proc_29.f90?ref=82c027e160f351c62ef09a5167a3ad6b680e8017", "patch": "@@ -22,5 +22,3 @@ program abstract\n   type(pdf) pp\n   print pp%getx()  ! { dg-error \"must be of type default-kind CHARACTER or of INTEGER\" }\n end program\n-\n-! { dg-final { cleanup-modules \"pdfs\" } }"}, {"sha": "5fa5a0fac00bc7f8b1c49fa6c6ba0850e2cb81c9", "filename": "gcc/testsuite/gfortran.dg/typebound_proc_30.f90", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_proc_30.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_proc_30.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_proc_30.f90?ref=82c027e160f351c62ef09a5167a3ad6b680e8017", "patch": "@@ -34,5 +34,3 @@ function d2 (n)\n   end function\n \n end module\n-\n-! { dg-final { cleanup-modules \"phs_single\" } }"}, {"sha": "82a67c08417fd505d165fbc2338c7318aaf1bb5d", "filename": "gcc/testsuite/gfortran.dg/typebound_proc_31.f90", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_proc_31.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_proc_31.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_proc_31.f90?ref=82c027e160f351c62ef09a5167a3ad6b680e8017", "patch": "@@ -24,5 +24,3 @@ function get_array( this ) result(array)\n   end function\n \n end module\n-\n-! { dg-final { cleanup-modules \"classes\" } }"}, {"sha": "035965be426d39039a6f592ffd7da65307b87a53", "filename": "gcc/testsuite/gfortran.dg/typebound_proc_32.f90", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_proc_32.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_proc_32.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_proc_32.f90?ref=82c027e160f351c62ef09a5167a3ad6b680e8017", "patch": "@@ -31,5 +31,3 @@ function get_array2( this ) result(array)\n   end function\n \n end module\n-\n-! { dg-final { cleanup-modules \"classes\" } }"}, {"sha": "41aef56cb03d7c9d07a4f4036eb1aa5be54bd31d", "filename": "gcc/testsuite/gfortran.dg/typebound_proc_33.f90", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_proc_33.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_proc_33.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_proc_33.f90?ref=82c027e160f351c62ef09a5167a3ad6b680e8017", "patch": "@@ -35,5 +35,3 @@ subroutine TSampleList_ConfidVal(L)\n   end subroutine\n \n end\n-\n-! { dg-final { cleanup-modules \"ObjectLists\" } }"}, {"sha": "2be8848c11f7f55e4344a6648510e43cfabf5546", "filename": "gcc/testsuite/gfortran.dg/unlimited_polymorphic_16.f90", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Funlimited_polymorphic_16.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Funlimited_polymorphic_16.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Funlimited_polymorphic_16.f90?ref=82c027e160f351c62ef09a5167a3ad6b680e8017", "patch": "@@ -20,5 +20,3 @@ subroutine IO_OutputMargeStats()\n   end subroutine\n \n end module\n-\n-! { dg-final { cleanup-modules \"IO\" } }"}, {"sha": "a665a3829ffa98fad93fcf57d4c9aa30b91bd8d2", "filename": "gcc/testsuite/gfortran.dg/unlimited_polymorphic_19.f90", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Funlimited_polymorphic_19.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Funlimited_polymorphic_19.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Funlimited_polymorphic_19.f90?ref=82c027e160f351c62ef09a5167a3ad6b680e8017", "patch": "@@ -49,5 +49,3 @@ SUBROUTINE copy_int(a,b)\n     END SELECT; END SELECT\n   END SUBROUTINE copy_int \n END PROGRAM main\n-\n-! { dg-final { cleanup-modules \"m\" } }"}, {"sha": "399372773233a92869a47fd150b603789a4132ab", "filename": "gcc/testsuite/gfortran.dg/unlimited_polymorphic_24.f03", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Funlimited_polymorphic_24.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Funlimited_polymorphic_24.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Funlimited_polymorphic_24.f03?ref=82c027e160f351c62ef09a5167a3ad6b680e8017", "patch": "@@ -214,5 +214,3 @@ program main\n     end select\n   end do\n end program main\n-\n-! { dg-final { cleanup-modules \"list_mod link_mod\" } }"}, {"sha": "b264506d4c38e4e1de69ebdd52b1e4c8bc033a75", "filename": "gcc/testsuite/gfortran.dg/use_only_3.f90", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Fuse_only_3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Fuse_only_3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fuse_only_3.f90?ref=82c027e160f351c62ef09a5167a3ad6b680e8017", "patch": "@@ -32,4 +32,3 @@ subroutine dforceb(c0, i, betae, ipol, bec0, ctabin, gqq, gqqm, qmat, dq2, df)\n        &   dq2,  gmes\n \n  end subroutine dforceb\n-! { dg-final { cleanup-modules \"cell_base constants control_flags cvan electrons_base electrons_nose gvecs gvecw ions_base kinds parameters\" } }"}, {"sha": "06af985393341fbfd8dab4c88c31698b49f42776", "filename": "gcc/testsuite/gfortran.dg/use_without_only_1.f90", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Fuse_without_only_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Fuse_without_only_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fuse_without_only_1.f90?ref=82c027e160f351c62ef09a5167a3ad6b680e8017", "patch": "@@ -19,4 +19,3 @@ SUBROUTINE S3\n      USE ISO_C_BINDING ! { dg-warning \"9:has no ONLY qualifier\" }\n   END SUBROUTINE S3\n END MODULE\n-! { dg-final { cleanup-modules \"foo testmod\" } }"}, {"sha": "209cb7f0026a54d0371fa9bc33a45efc3833de03", "filename": "gcc/testsuite/gfortran.dg/warn_unused_function.f90", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Fwarn_unused_function.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Fwarn_unused_function.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fwarn_unused_function.f90?ref=82c027e160f351c62ef09a5167a3ad6b680e8017", "patch": "@@ -17,5 +17,3 @@ subroutine hello_integer( a )\n         print *, \"Hello \", a, \"!\"\n     end subroutine\n end module\n-\n-! { dg-final { cleanup-modules \"mod_say_hello\" } }"}, {"sha": "43b211e57bfe41c2a24f2c3c39454c992f670f00", "filename": "gcc/testsuite/gfortran.dg/warn_unused_function_2.f90", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Fwarn_unused_function_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Fgfortran.dg%2Fwarn_unused_function_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fwarn_unused_function_2.f90?ref=82c027e160f351c62ef09a5167a3ad6b680e8017", "patch": "@@ -39,5 +39,3 @@ program test\n   subroutine s5            ! { dg-warning \"defined but not used\" }\n   end subroutine\n end\n-\n-! { dg-final { cleanup-modules \"m\" } }"}, {"sha": "a35f7a7abde9438e0bf12f31952ac1c7b35a75b4", "filename": "gcc/testsuite/lib/fortran-modules.exp", "status": "modified", "additions": 65, "deletions": 4, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Flib%2Ffortran-modules.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82c027e160f351c62ef09a5167a3ad6b680e8017/gcc%2Ftestsuite%2Flib%2Ffortran-modules.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ffortran-modules.exp?ref=82c027e160f351c62ef09a5167a3ad6b680e8017", "patch": "@@ -79,10 +79,14 @@ proc list-module-names { files } {\n \n proc list-module-names-1 { file } {\n     set result {}\n-    set tmp [grep $file \"^\\[ \\t\\]*((#)?\\[ \\t\\]*include|\\[mM\\]\\[oO\\]\\[dD\\]\\[uU\\]\\[lL\\]\\[eE\\](?!\\[ \\t\\]+\\[pP\\]\\[rR\\]\\[oO\\]\\[cC\\]\\[eE\\]\\[dD\\]\\[uU\\]\\[rR\\]\\[eE\\]\\[ \\t\\]+))\\[ \\t\\]+.*\" line]\n+    if {[file isdirectory $file]} {return}\n+    # Find lines containing INCLUDE, MODULE, and SUBMODULE, excluding the lines containing\n+    # MODULE [PURE|(IMPURE\\s+)?ELEMENTAL|RECURSIVE] (PROCEDURE|FUNCTION|SUBROUTINE)\n+    set pat {^\\s*((#)?\\s*include|(sub)?module(?!\\s+((pure|(impure\\s+)?elemental|recursive)\\s+)?(procedure|function|subroutine)[:\\s]+))\\s*.*}\n+    set tmp [igrep $file $pat line]\n     if {![string match \"\" $tmp]} {\n \tforeach i $tmp {\n-\t    regexp \"(\\[0-9\\]+)\\[ \\t\\]+(?:(?:#)?\\[ \\t\\]*include\\[ \\t\\]+)\\[\\\"\\](\\[^\\\"\\]*)\\[\\\"\\]\" $i dummy lineno include_file\n+\t    regexp -nocase {(\\d+)\\s+#?\\s*include\\s+[\"']([^\"']*)[\"']} $i dummy lineno include_file\n \t    if {[info exists include_file]} {\n \t\tset dir [file dirname $file]\n \t\tset inc \"$dir/$include_file\"\n@@ -99,10 +103,16 @@ proc list-module-names-1 { file } {\n \t\t}\n \t\tcontinue\n \t    }\n-\t    regexp \"(\\[0-9\\]+)\\[ \\t\\]+(?:(\\[mM\\]\\[oO\\]\\[dD\\]\\[uU\\]\\[lL\\]\\[eE\\]\\[ \\t\\]+(?!\\[pP\\]\\[rR\\]\\[oO\\]\\[cC\\]\\[eE\\]\\[dD\\]\\[uU\\]\\[rR\\]\\[eE\\]\\[ \\t\\]+)))(\\[^ \\t;\\]*)\" $i i lineno keyword mod\n-\t    if {![info exists lineno]} {\n+\t    regexp -nocase {(\\d+)\\s+(module|submodule)\\s*([^;]*)} $i i lineno keyword mod\n+\t    if {![info exists mod]} {\n \t\tcontinue\n \t    }\n+\t    # Generates the file name mod_name@submod_name from\n+\t    # (\\s*mod_name[:submod_name]\\s*)\\s*submod_name\\s*[! comment]\n+\t    regsub {\\s*!.*} $mod \"\" mod\n+\t    regsub {:[^)]*} $mod \"\" mod\n+\t    regsub {\\(\\s*} $mod \"\" mod\n+\t    regsub {\\s*\\)\\s*} $mod \"@\" mod\n \t    verbose \"Line $lineno mentions module `$mod'\" 3\n \t    if {[lsearch $result $mod] < 0} {\n \t\tlappend result $mod\n@@ -111,3 +121,54 @@ proc list-module-names-1 { file } {\n     }\n     return $result\n }\n+\n+# Looks for case insensitive occurrences of a string in a file.\n+#     return:list of lines that matched or NULL if none match.\n+#     args:  first arg is the filename,\n+#            second is the pattern,\n+#            third are any options.\n+#     Options: line  - puts line numbers of match in list\n+#\n+proc igrep { args } {\n+\n+    set file [lindex $args 0]\n+    set pattern [lindex $args 1]\n+\n+    verbose \"Grepping $file for the pattern \\\"$pattern\\\"\" 3\n+\n+    set argc [llength $args]\n+    if { $argc > 2 } {\n+        for { set i 2 } { $i < $argc } { incr i } {\n+            append options [lindex $args $i]\n+            append options \" \"\n+        }\n+    } else {\n+        set options \"\"\n+    }\n+\n+    set i 0\n+    set fd [open $file r]\n+    while { [gets $fd cur_line]>=0 } {\n+        incr i\n+        if {[regexp -nocase -- \"$pattern\" $cur_line match]} {\n+            if {![string match \"\" $options]} {\n+                foreach opt $options {\n+                    switch $opt {\n+                        \"line\" {\n+                            lappend grep_out [concat $i $match]\n+                        }\n+                    }\n+                }\n+            } else {\n+                lappend grep_out $match\n+            }\n+        }\n+    }\n+    close $fd\n+    unset fd\n+    unset i\n+    if {![info exists grep_out]} {\n+        set grep_out \"\"\n+    }\n+    return $grep_out\n+}"}]}