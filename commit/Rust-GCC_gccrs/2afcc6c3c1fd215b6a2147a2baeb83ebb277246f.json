{"sha": "2afcc6c3c1fd215b6a2147a2baeb83ebb277246f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmFmY2M2YzNjMWZkMjE1YjZhMjE0N2EyYmFlYjgzZWJiMjc3MjQ2Zg==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2019-02-06T16:28:31Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2019-02-06T16:28:31Z"}, "message": "README: update text to describe current status\n    \n    Reviewed-on: https://go-review.googlesource.com/c/161338\n\nFrom-SVN: r268584", "tree": {"sha": "da97500f1e3bd90983caf50c1c3c485b8ea2aa2c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/da97500f1e3bd90983caf50c1c3c485b8ea2aa2c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2afcc6c3c1fd215b6a2147a2baeb83ebb277246f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2afcc6c3c1fd215b6a2147a2baeb83ebb277246f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2afcc6c3c1fd215b6a2147a2baeb83ebb277246f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2afcc6c3c1fd215b6a2147a2baeb83ebb277246f/comments", "author": null, "committer": null, "parents": [{"sha": "b49fa5e020a80b2dd610204d0d1de0c56df2c0b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b49fa5e020a80b2dd610204d0d1de0c56df2c0b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b49fa5e020a80b2dd610204d0d1de0c56df2c0b2"}], "stats": {"total": 57, "additions": 30, "deletions": 27}, "files": [{"sha": "100d30e2c738cd678fe01da71ffa3da64f57e29c", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2afcc6c3c1fd215b6a2147a2baeb83ebb277246f/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2afcc6c3c1fd215b6a2147a2baeb83ebb277246f/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=2afcc6c3c1fd215b6a2147a2baeb83ebb277246f", "patch": "@@ -1,4 +1,4 @@\n-347628daf153baf3034b61b2abb4ec39e2ab37c8\n+74ffeddbe6fef446129af65581b3a9094715bc22\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "f6f94561eea3cc11539061ea90dccfdc73f702f4", "filename": "gcc/go/gofrontend/README", "status": "modified", "additions": 29, "deletions": 26, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2afcc6c3c1fd215b6a2147a2baeb83ebb277246f/gcc%2Fgo%2Fgofrontend%2FREADME", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2afcc6c3c1fd215b6a2147a2baeb83ebb277246f/gcc%2Fgo%2Fgofrontend%2FREADME", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FREADME?ref=2afcc6c3c1fd215b6a2147a2baeb83ebb277246f", "patch": "@@ -1,52 +1,55 @@\n See ../README.\n \n-The frontend is written in C++.\n+The frontend is written in C++.  It can only be used in conjunction\n+with a full compiler backend.  Currently the backend interface has\n+been implemented with GCC (known as gccgo) and with LLVM (known as\n+GoLLVM).\n \n The frontend lexes and parses the input into an IR specific to this\n frontend known as gogo.  It then runs a series of passes over the\n code.\n \n-Finally it converts gogo to gcc's GENERIC.  A goal is to move the gcc\n-support code into a gcc-interface subdirectory.  The gcc code will be\n-put under the GPL.  The rest of the frontend will not include any gcc\n-header files.\n+Finally it converts gogo to the backend IR.  This is done via the\n+interface described in backend.h.  The backend must implement that\n+interface.  When used with GCC, the interface is implemented in\n+gcc/go/go-gcc.cc.\n \n-Issues to be faced in this transition:\n+Source locations are represented using the interface described in\n+go-linemap.h.  The backend is expected to provide a header file\n+go-location.h that defines a Location type.\n \n-* Representation of source locations.\n-  + Currently the frontend uses gcc's location_t codes, using the\n-    interface in libcpp/line-map.h.\n+The frontend does not start by itself.  It expects something to call\n+go_create_gogo passing in a Backend and a Linemap, as well as other\n+options.  Then it expects something to call go_parse_input_files\n+passing in the input files.  Finally, a call to go_write_globals will\n+cause all global definitions to be written out via the Backend\n+interface.\n \n-* Handling of error messages.\n-  + Currently the frontend uses gcc's error_at and warning_at\n-    functions.\n-  + Currently the frontend uses gcc's diagnostic formatter, using\n-    features such as %<%> for appropriate quoting.\n-  + Localization may be an issue.\n+The backend is expected to provide the functions defined at the\n+bottom of go-diagnostics.h: go_be_error_at, etc.  These will be used\n+for error messages.\n \n-This compiler works, but the code is a work in progress.  Notably, the\n-support for garbage collection is ineffective and needs a complete\n-rethinking.  The frontend pays little attention to its memory usage\n-and rarely frees any memory.  The code could use a general cleanup\n-which we have not had time to do.\n+This compiler works, but the code is a work in progress.  The frontend\n+pays little attention to its memory usage and rarely frees any memory.\n+The code could use a general cleanup which we have not had time to do.\n \n Contributing\n =============\n \n To contribute patches to the files in this directory, please see\n-http://golang.org/doc/gccgo_contribute.html .\n+https://golang.org/doc/gccgo_contribute.html .\n \n The master copy of these files is hosted at\n-http://code.google.com/p/gofrontend .  Changes to these files require\n+https://go.googlesource.com/gofrontend .  There is a mirror at\n+https://github.com/golang/gofrontend .  Changes to these files require\n signing a Google contributor license agreement.  If you are the\n copyright holder, you will need to agree to the individual contributor\n-license agreement at\n-http://code.google.com/legal/individual-cla-v1.0.html.  This agreement\n-can be completed online.\n+https://cla.developers.google.com/about/google-individual .  This\n+agreement can be completed online.\n \n If your organization is the copyright holder, the organization will\n need to agree to the corporate contributor license agreement at\n-http://code.google.com/legal/corporate-cla-v1.0.html.\n+https://cla.developers.google.com/about/google-corporate .\n \n If the copyright holder for your code has already completed the\n agreement in connection with another Google open source project, it"}]}