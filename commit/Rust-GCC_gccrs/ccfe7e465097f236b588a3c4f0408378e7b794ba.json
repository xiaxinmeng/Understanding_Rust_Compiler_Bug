{"sha": "ccfe7e465097f236b588a3c4f0408378e7b794ba", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2NmZTdlNDY1MDk3ZjIzNmI1ODhhM2M0ZjA0MDgzNzhlN2I3OTRiYQ==", "commit": {"author": {"name": "Alexandre Oliva", "email": "oliva@dcc.unicamp.br", "date": "1999-08-21T14:26:44Z"}, "committer": {"name": "Alexandre Oliva", "email": "oliva@gcc.gnu.org", "date": "1999-08-21T14:26:44Z"}, "message": "configure.in: Check for in_addr_t in netinet/in.h too.\n\n* configure.in: Check for in_addr_t in netinet/in.h too.  Check\nfor ip_mreq too.\n* acconfig.h: Define HAVE_IN_ADDR_T instead of in_addr_t.\n(HAVE_STRUCT_IP_MREQ): Added.\n* configure, include/config.h.in: Rebuilt.\n* java/net/natInetAddress.cc (aton): Typedef in_addr_t to jint\nif needed.\n* java/net/natPlainDatagramSocketImpl.cc (McastReq, mcastGrp):\nDisable if ip_mreq is not available.\n\nFrom-SVN: r28798", "tree": {"sha": "936dcb136f4e1a15f7189da9628cb51caeeaf701", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/936dcb136f4e1a15f7189da9628cb51caeeaf701"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ccfe7e465097f236b588a3c4f0408378e7b794ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ccfe7e465097f236b588a3c4f0408378e7b794ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ccfe7e465097f236b588a3c4f0408378e7b794ba", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ccfe7e465097f236b588a3c4f0408378e7b794ba/comments", "author": null, "committer": null, "parents": [{"sha": "988f5b701459c08b9eb297d03159f1440bd6c673", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/988f5b701459c08b9eb297d03159f1440bd6c673", "html_url": "https://github.com/Rust-GCC/gccrs/commit/988f5b701459c08b9eb297d03159f1440bd6c673"}], "stats": {"total": 165, "additions": 117, "deletions": 48}, "files": [{"sha": "c41ff38fa941c1f5c367855fee20ef16998522dd", "filename": "libjava/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccfe7e465097f236b588a3c4f0408378e7b794ba/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccfe7e465097f236b588a3c4f0408378e7b794ba/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=ccfe7e465097f236b588a3c4f0408378e7b794ba", "patch": "@@ -1,5 +1,15 @@\n 1999-08-21  Alexandre Oliva  <oliva@dcc.unicamp.br>\n \n+\t* configure.in: Check for in_addr_t in netinet/in.h too.  Check\n+\tfor ip_mreq too.\n+\t* acconfig.h: Define HAVE_IN_ADDR_T instead of in_addr_t.\n+\t(HAVE_STRUCT_IP_MREQ): Added.\n+\t* configure, include/config.h.in: Rebuilt.\n+\t* java/net/natInetAddress.cc (aton): Typedef in_addr_t to jint\n+\tif needed.\n+\t* java/net/natPlainDatagramSocketImpl.cc (McastReq, mcastGrp):\n+\tDisable if ip_mreq is not available.\n+\t\n \t* configure.in: Check types ssize_t and in_addr_t.\n \t* acconfig.h: Undefine them.\n \t* configure, include/config.h.in: Rebuilt."}, {"sha": "62ae0135addcb4ff6cb94e88018ce65dfc50164d", "filename": "libjava/acconfig.h", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccfe7e465097f236b588a3c4f0408378e7b794ba/libjava%2Facconfig.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccfe7e465097f236b588a3c4f0408378e7b794ba/libjava%2Facconfig.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Facconfig.h?ref=ccfe7e465097f236b588a3c4f0408378e7b794ba", "patch": "@@ -58,12 +58,16 @@\n /* Define to `int' if `ssize_t' is not defined.  */\n #undef ssize_t\n \n-/* Define to `jint' if `in_addr_t' is not defined.  */\n-#undef in_addr_t\n+/* Define to 1 if `in_addr_t' is defined in sys/types.h or\n+   netinet/in.h.  */\n+#undef HAVE_IN_ADDR_T\n \n /* Define if inet6 structures are defined in netinet/in.h.  */\n #undef HAVE_INET6\n \n+/* Define if struct ip_mreq is defined in netinet/in.h.  */\n+#undef HAVE_STRUCT_IP_MREQ\n+\n /* Define it socklen_t typedef is in sys/socket.h.  */\n #undef HAVE_SOCKLEN_T\n "}, {"sha": "20d08853e6e6ad74b817c945fc484c0a79c5ea70", "filename": "libjava/configure", "status": "modified", "additions": 66, "deletions": 42, "changes": 108, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccfe7e465097f236b588a3c4f0408378e7b794ba/libjava%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccfe7e465097f236b588a3c4f0408378e7b794ba/libjava%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fconfigure?ref=ccfe7e465097f236b588a3c4f0408378e7b794ba", "patch": "@@ -4469,51 +4469,75 @@ EOF\n \n fi\n \n+\n echo $ac_n \"checking for in_addr_t\"\"... $ac_c\" 1>&6\n-echo \"configure:4474: checking for in_addr_t\" >&5\n-if eval \"test \\\"`echo '$''{'ac_cv_type_in_addr_t'+set}'`\\\" = set\"; then\n-  echo $ac_n \"(cached) $ac_c\" 1>&6\n-else\n-  cat > conftest.$ac_ext <<EOF\n-#line 4479 \"configure\"\n+echo \"configure:4475: checking for in_addr_t\" >&5\n+cat > conftest.$ac_ext <<EOF\n+#line 4477 \"configure\"\n #include \"confdefs.h\"\n #include <sys/types.h>\n #if STDC_HEADERS\n #include <stdlib.h>\n #include <stddef.h>\n #endif\n+#if HAVE_NETINET_IN_H\n+#include <netinet/in.h>\n+#endif\n+int main() {\n+in_addr_t foo;\n+; return 0; }\n EOF\n-if (eval \"$ac_cpp conftest.$ac_ext\") 2>&5 |\n-  egrep \"(^|[^a-zA-Z_0-9])in_addr_t[^a-zA-Z_0-9]\" >/dev/null 2>&1; then\n+if { (eval echo configure:4491: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n-  ac_cv_type_in_addr_t=yes\n+  cat >> confdefs.h <<\\EOF\n+#define HAVE_IN_ADDR_T 1\n+EOF\n+\n+   echo \"$ac_t\"\"yes\" 1>&6\n else\n+  echo \"configure: failed program was:\" >&5\n+  cat conftest.$ac_ext >&5\n   rm -rf conftest*\n-  ac_cv_type_in_addr_t=no\n+  echo \"$ac_t\"\"no\" 1>&6\n fi\n rm -f conftest*\n \n-fi\n-echo \"$ac_t\"\"$ac_cv_type_in_addr_t\" 1>&6\n-if test $ac_cv_type_in_addr_t = no; then\n+echo $ac_n \"checking whether struct ip_mreq is in netinet/in.h\"\"... $ac_c\" 1>&6\n+echo \"configure:4507: checking whether struct ip_mreq is in netinet/in.h\" >&5\n+cat > conftest.$ac_ext <<EOF\n+#line 4509 \"configure\"\n+#include \"confdefs.h\"\n+#include <netinet/in.h>\n+int main() {\n+struct ip_mreq mreq;\n+; return 0; }\n+EOF\n+if { (eval echo configure:4516: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+  rm -rf conftest*\n   cat >> confdefs.h <<\\EOF\n-#define in_addr_t jint\n+#define HAVE_STRUCT_IP_MREQ 1\n EOF\n \n+   echo \"$ac_t\"\"yes\" 1>&6\n+else\n+  echo \"configure: failed program was:\" >&5\n+  cat conftest.$ac_ext >&5\n+  rm -rf conftest*\n+  echo \"$ac_t\"\"no\" 1>&6\n fi\n-\n+rm -f conftest*\n \n echo $ac_n \"checking whether struct sockaddr_in6 is in netinet/in.h\"\"... $ac_c\" 1>&6\n-echo \"configure:4508: checking whether struct sockaddr_in6 is in netinet/in.h\" >&5\n+echo \"configure:4532: checking whether struct sockaddr_in6 is in netinet/in.h\" >&5\n cat > conftest.$ac_ext <<EOF\n-#line 4510 \"configure\"\n+#line 4534 \"configure\"\n #include \"confdefs.h\"\n #include <netinet/in.h>\n int main() {\n struct sockaddr_in6 addr6;\n ; return 0; }\n EOF\n-if { (eval echo configure:4517: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:4541: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   cat >> confdefs.h <<\\EOF\n #define HAVE_INET6 1\n@@ -4529,16 +4553,16 @@ fi\n rm -f conftest*\n \n echo $ac_n \"checking for socklen_t in sys/socket.h\"\"... $ac_c\" 1>&6\n-echo \"configure:4533: checking for socklen_t in sys/socket.h\" >&5\n+echo \"configure:4557: checking for socklen_t in sys/socket.h\" >&5\n cat > conftest.$ac_ext <<EOF\n-#line 4535 \"configure\"\n+#line 4559 \"configure\"\n #include \"confdefs.h\"\n #include <sys/socket.h>\n int main() {\n socklen_t x = 5;\n ; return 0; }\n EOF\n-if { (eval echo configure:4542: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:4566: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   cat >> confdefs.h <<\\EOF\n #define HAVE_SOCKLEN_T 1\n@@ -4554,16 +4578,16 @@ fi\n rm -f conftest*\n \n echo $ac_n \"checking for tm_gmtoff in struct tm\"\"... $ac_c\" 1>&6\n-echo \"configure:4558: checking for tm_gmtoff in struct tm\" >&5\n+echo \"configure:4582: checking for tm_gmtoff in struct tm\" >&5\n cat > conftest.$ac_ext <<EOF\n-#line 4560 \"configure\"\n+#line 4584 \"configure\"\n #include \"confdefs.h\"\n #include <time.h>\n int main() {\n struct tm tim; tim.tm_gmtoff = 0;\n ; return 0; }\n EOF\n-if { (eval echo configure:4567: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:4591: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   cat >> confdefs.h <<\\EOF\n #define STRUCT_TM_HAS_GMTOFF 1\n@@ -4576,16 +4600,16 @@ else\n   rm -rf conftest*\n   echo \"$ac_t\"\"no\" 1>&6\n    echo $ac_n \"checking for global timezone variable\"\"... $ac_c\" 1>&6\n-echo \"configure:4580: checking for global timezone variable\" >&5\n+echo \"configure:4604: checking for global timezone variable\" >&5\n             cat > conftest.$ac_ext <<EOF\n-#line 4582 \"configure\"\n+#line 4606 \"configure\"\n #include \"confdefs.h\"\n #include <time.h>\n int main() {\n long z2 = timezone;\n ; return 0; }\n EOF\n-if { (eval echo configure:4589: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:4613: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   cat >> confdefs.h <<\\EOF\n #define HAVE_TIMEZONE 1\n@@ -4605,19 +4629,19 @@ rm -f conftest*\n # The Ultrix 4.2 mips builtin alloca declared by alloca.h only works\n # for constant arguments.  Useless!\n echo $ac_n \"checking for working alloca.h\"\"... $ac_c\" 1>&6\n-echo \"configure:4609: checking for working alloca.h\" >&5\n+echo \"configure:4633: checking for working alloca.h\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_header_alloca_h'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 4614 \"configure\"\n+#line 4638 \"configure\"\n #include \"confdefs.h\"\n #include <alloca.h>\n int main() {\n char *p = alloca(2 * sizeof(int));\n ; return 0; }\n EOF\n-if { (eval echo configure:4621: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:4645: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   ac_cv_header_alloca_h=yes\n else\n@@ -4638,12 +4662,12 @@ EOF\n fi\n \n echo $ac_n \"checking for alloca\"\"... $ac_c\" 1>&6\n-echo \"configure:4642: checking for alloca\" >&5\n+echo \"configure:4666: checking for alloca\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_alloca_works'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 4647 \"configure\"\n+#line 4671 \"configure\"\n #include \"confdefs.h\"\n \n #ifdef __GNUC__\n@@ -4671,7 +4695,7 @@ int main() {\n char *p = (char *) alloca(1);\n ; return 0; }\n EOF\n-if { (eval echo configure:4675: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:4699: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   ac_cv_func_alloca_works=yes\n else\n@@ -4703,12 +4727,12 @@ EOF\n \n \n echo $ac_n \"checking whether alloca needs Cray hooks\"\"... $ac_c\" 1>&6\n-echo \"configure:4707: checking whether alloca needs Cray hooks\" >&5\n+echo \"configure:4731: checking whether alloca needs Cray hooks\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_os_cray'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 4712 \"configure\"\n+#line 4736 \"configure\"\n #include \"confdefs.h\"\n #if defined(CRAY) && ! defined(CRAY2)\n webecray\n@@ -4733,12 +4757,12 @@ echo \"$ac_t\"\"$ac_cv_os_cray\" 1>&6\n if test $ac_cv_os_cray = yes; then\n for ac_func in _getb67 GETB67 getb67; do\n   echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n-echo \"configure:4737: checking for $ac_func\" >&5\n+echo \"configure:4761: checking for $ac_func\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 4742 \"configure\"\n+#line 4766 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char $ac_func(); below.  */\n@@ -4761,7 +4785,7 @@ $ac_func();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:4765: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:4789: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_$ac_func=yes\"\n else\n@@ -4788,15 +4812,15 @@ done\n fi\n \n echo $ac_n \"checking stack direction for C alloca\"\"... $ac_c\" 1>&6\n-echo \"configure:4792: checking stack direction for C alloca\" >&5\n+echo \"configure:4816: checking stack direction for C alloca\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_c_stack_direction'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   if test \"$cross_compiling\" = yes; then\n   ac_cv_c_stack_direction=0\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 4800 \"configure\"\n+#line 4824 \"configure\"\n #include \"confdefs.h\"\n find_stack_direction ()\n {\n@@ -4815,7 +4839,7 @@ main ()\n   exit (find_stack_direction() < 0);\n }\n EOF\n-if { (eval echo configure:4819: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n+if { (eval echo configure:4843: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n then\n   ac_cv_c_stack_direction=1\n else\n@@ -4842,7 +4866,7 @@ do\n # Extract the first word of \"$ac_prog\", so it can be a program name with args.\n set dummy $ac_prog; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:4846: checking for $ac_word\" >&5\n+echo \"configure:4870: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_prog_PERL'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else"}, {"sha": "99c2b9e5c474066e6d0de70348a092ca0e9ee9b1", "filename": "libjava/configure.in", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccfe7e465097f236b588a3c4f0408378e7b794ba/libjava%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccfe7e465097f236b588a3c4f0408378e7b794ba/libjava%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fconfigure.in?ref=ccfe7e465097f236b588a3c4f0408378e7b794ba", "patch": "@@ -547,7 +547,25 @@ dnl for now.  If you change this, you also must update natFile.cc.\n AC_CHECK_HEADERS(dirent.h)\n \n AC_CHECK_TYPE([ssize_t], [int])\n-AC_CHECK_TYPE([in_addr_t], [jint])\n+\n+AC_MSG_CHECKING([for in_addr_t])\n+AC_TRY_COMPILE([#include <sys/types.h>\n+#if STDC_HEADERS\n+#include <stdlib.h>\n+#include <stddef.h>\n+#endif\n+#if HAVE_NETINET_IN_H\n+#include <netinet/in.h>\n+#endif], [in_addr_t foo;],\n+  [AC_DEFINE([HAVE_IN_ADDR_T])\n+   AC_MSG_RESULT(yes)],\n+  [AC_MSG_RESULT(no)])\n+\n+AC_MSG_CHECKING([whether struct ip_mreq is in netinet/in.h])\n+AC_TRY_COMPILE([#include <netinet/in.h>], [struct ip_mreq mreq;],\n+  [AC_DEFINE(HAVE_STRUCT_IP_MREQ)\n+   AC_MSG_RESULT(yes)],\n+  [AC_MSG_RESULT(no)])\n \n AC_MSG_CHECKING([whether struct sockaddr_in6 is in netinet/in.h])\n AC_TRY_COMPILE([#include <netinet/in.h>], [struct sockaddr_in6 addr6;],"}, {"sha": "d131232ebbfa73881c08ce5704806f0faf70197c", "filename": "libjava/include/config.h.in", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccfe7e465097f236b588a3c4f0408378e7b794ba/libjava%2Finclude%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccfe7e465097f236b588a3c4f0408378e7b794ba/libjava%2Finclude%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Finclude%2Fconfig.h.in?ref=ccfe7e465097f236b588a3c4f0408378e7b794ba", "patch": "@@ -73,12 +73,16 @@\n /* Define to `int' if `ssize_t' is not defined.  */\n #undef ssize_t\n \n-/* Define to `jint' if `in_addr_t' is not defined.  */\n-#undef in_addr_t\n+/* Define to 1 if `in_addr_t' is defined in sys/types.h or\n+   netinet/in.h.  */\n+#undef HAVE_IN_ADDR_T\n \n /* Define if inet6 structures are defined in netinet/in.h.  */\n #undef HAVE_INET6\n \n+/* Define if struct ip_mreq is defined in netinet/in.h.  */\n+#undef HAVE_STRUCT_IP_MREQ\n+\n /* Define it socklen_t typedef is in sys/socket.h.  */\n #undef HAVE_SOCKLEN_T\n "}, {"sha": "6e014ab6f862f0f2804c0a34bbaa7de2d8633e03", "filename": "libjava/java/net/natInetAddress.cc", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccfe7e465097f236b588a3c4f0408378e7b794ba/libjava%2Fjava%2Fnet%2FnatInetAddress.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccfe7e465097f236b588a3c4f0408378e7b794ba/libjava%2Fjava%2Fnet%2FnatInetAddress.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FnatInetAddress.cc?ref=ccfe7e465097f236b588a3c4f0408378e7b794ba", "patch": "@@ -71,6 +71,9 @@ java::net::InetAddress::aton (jstring host)\n       blen = 4;\n     }\n #elif defined(HAVE_INET_ADDR)\n+#if ! HAVE_IN_ADDR_T\n+  typedef jint in_addr_t;\n+#endif\n   in_addr_t laddr = inet_addr (hostname);\n   if (laddr != (in_addr_t)(-1))\n     {"}, {"sha": "66e5dc221bf710516c5d4f207516ef66ce812249", "filename": "libjava/java/net/natPlainDatagramSocketImpl.cc", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccfe7e465097f236b588a3c4f0408378e7b794ba/libjava%2Fjava%2Fnet%2FnatPlainDatagramSocketImpl.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccfe7e465097f236b588a3c4f0408378e7b794ba/libjava%2Fjava%2Fnet%2FnatPlainDatagramSocketImpl.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FnatPlainDatagramSocketImpl.cc?ref=ccfe7e465097f236b588a3c4f0408378e7b794ba", "patch": "@@ -61,7 +61,9 @@ union SockAddr\n \n union McastReq\n {\n+#if HAVE_STRUCT_IP_MREQ\n   struct ip_mreq mreq;\n+#endif\n #ifdef HAVE_INET6\n   struct ipv6_mreq mreq6;\n #endif\n@@ -323,7 +325,10 @@ java::net::PlainDatagramSocketImpl::mcastGrp (java::net::InetAddress *inetaddr,\n   int len = haddress->length;\n   int level, opname;\n   const char *ptr;\n-  if (len == 4)\n+  if (0)\n+    ;\n+#if HAVE_STRUCT_IP_MREQ\n+  else if (len == 4)\n     {\n       level = IPPROTO_IP;\n       opname = join ? IP_ADD_MEMBERSHIP : IP_DROP_MEMBERSHIP;\n@@ -334,6 +339,7 @@ java::net::PlainDatagramSocketImpl::mcastGrp (java::net::InetAddress *inetaddr,\n       len = sizeof (struct ip_mreq);\n       ptr = (const char *) &u.mreq;\n     }\n+#endif\n #ifdef HAVE_INET6\n   else if (len == 16)\n     {"}]}