{"sha": "1a880ef2110aaa2c03b6eb88ef792d324b89f566", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWE4ODBlZjIxMTBhYWEyYzAzYjZlYjg4ZWY3OTJkMzI0Yjg5ZjU2Ng==", "commit": {"author": {"name": "Andreas Krebbel", "email": "krebbel@linux.ibm.com", "date": "2019-12-06T19:30:37Z"}, "committer": {"name": "Vladimir Makarov", "email": "vmakarov@gcc.gnu.org", "date": "2019-12-06T19:30:37Z"}, "message": "re PR rtl-optimization/92176 (LRA problem with reloads for subreg operands)\n\n2019-12-06  Andreas Krebbel  <krebbel@linux.ibm.com>\n\t    Vladimir Makarov  <vmakarov@redhat.com>\n\n\tPR rtl-optimization/92176\n\t* lra.c (simplify_subreg_regno): Don't permit unconditional\n\tchanging mode for LRA too.\n\n2019-12-06  Andreas Krebbel  <krebbel@linux.ibm.com>\n\t    Vladimir Makarov  <vmakarov@redhat.com>\n\n\tPR rtl-optimization/92176\n\t* gcc.target/s390/pr92176.c: New test.\n\n\nCo-Authored-By: Vladimir Makarov <vmakarov@redhat.com>\n\nFrom-SVN: r279061", "tree": {"sha": "3176b632a4cf2b3a4e28ab08d8c115f2ab50513b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3176b632a4cf2b3a4e28ab08d8c115f2ab50513b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1a880ef2110aaa2c03b6eb88ef792d324b89f566", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a880ef2110aaa2c03b6eb88ef792d324b89f566", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a880ef2110aaa2c03b6eb88ef792d324b89f566", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a880ef2110aaa2c03b6eb88ef792d324b89f566/comments", "author": {"login": "Andreas-Krebbel", "id": 38103320, "node_id": "MDQ6VXNlcjM4MTAzMzIw", "avatar_url": "https://avatars.githubusercontent.com/u/38103320?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Andreas-Krebbel", "html_url": "https://github.com/Andreas-Krebbel", "followers_url": "https://api.github.com/users/Andreas-Krebbel/followers", "following_url": "https://api.github.com/users/Andreas-Krebbel/following{/other_user}", "gists_url": "https://api.github.com/users/Andreas-Krebbel/gists{/gist_id}", "starred_url": "https://api.github.com/users/Andreas-Krebbel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Andreas-Krebbel/subscriptions", "organizations_url": "https://api.github.com/users/Andreas-Krebbel/orgs", "repos_url": "https://api.github.com/users/Andreas-Krebbel/repos", "events_url": "https://api.github.com/users/Andreas-Krebbel/events{/privacy}", "received_events_url": "https://api.github.com/users/Andreas-Krebbel/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3ad4a03ac6127ac5b7656977d3e41deac0605bf3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ad4a03ac6127ac5b7656977d3e41deac0605bf3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ad4a03ac6127ac5b7656977d3e41deac0605bf3"}], "stats": {"total": 50, "additions": 47, "deletions": 3}, "files": [{"sha": "09cba3d576a4dfd9549315d247261903f1effcec", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a880ef2110aaa2c03b6eb88ef792d324b89f566/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a880ef2110aaa2c03b6eb88ef792d324b89f566/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1a880ef2110aaa2c03b6eb88ef792d324b89f566", "patch": "@@ -1,3 +1,10 @@\n+2019-12-06  Andreas Krebbel  <krebbel@linux.ibm.com>\n+\t    Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\tPR rtl-optimization/92176\n+\t* lra.c (simplify_subreg_regno): Don't permit unconditional\n+\tchanging mode for LRA too.\n+\n 2019-12-06  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* target.h (TCTX_ALLOCATION, TCTX_DEALLOCATION, TCTX_EXCEPTIONS)"}, {"sha": "b0c8cd5595a779c9dcfe8d99fc5aeabcca0ba94a", "filename": "gcc/rtlanal.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a880ef2110aaa2c03b6eb88ef792d324b89f566/gcc%2Frtlanal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a880ef2110aaa2c03b6eb88ef792d324b89f566/gcc%2Frtlanal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtlanal.c?ref=1a880ef2110aaa2c03b6eb88ef792d324b89f566", "patch": "@@ -3951,9 +3951,7 @@ simplify_subreg_regno (unsigned int xregno, machine_mode xmode,\n   /* Give the backend a chance to disallow the mode change.  */\n   if (GET_MODE_CLASS (xmode) != MODE_COMPLEX_INT\n       && GET_MODE_CLASS (xmode) != MODE_COMPLEX_FLOAT\n-      && !REG_CAN_CHANGE_MODE_P (xregno, xmode, ymode)\n-      /* We can use mode change in LRA for some transformations.  */\n-      && ! lra_in_progress)\n+      && !REG_CAN_CHANGE_MODE_P (xregno, xmode, ymode))\n     return -1;\n \n   /* We shouldn't simplify stack-related registers.  */"}, {"sha": "360d1a9823cf698f1ec8ddabcc0cdbb8fff701ea", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a880ef2110aaa2c03b6eb88ef792d324b89f566/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a880ef2110aaa2c03b6eb88ef792d324b89f566/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1a880ef2110aaa2c03b6eb88ef792d324b89f566", "patch": "@@ -1,3 +1,9 @@\n+2019-12-06  Andreas Krebbel  <krebbel@linux.ibm.com>\n+\t    Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\tPR rtl-optimization/92176\n+\t* gcc.target/s390/pr92176.c: New test.\n+\n 2019-12-06  Martin Sebor  <msebor@redhat.com>\n \n \t* gcc.dg/Wstringop-overflow-23.c: Use the correct argument type."}, {"sha": "62c483f1282654a8399fe40ade07101177b6ac0d", "filename": "gcc/testsuite/gcc.target/s390/pr92176.c", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a880ef2110aaa2c03b6eb88ef792d324b89f566/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fpr92176.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a880ef2110aaa2c03b6eb88ef792d324b89f566/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fpr92176.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fpr92176.c?ref=1a880ef2110aaa2c03b6eb88ef792d324b89f566", "patch": "@@ -0,0 +1,33 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -march=z13 -mzarch\" } */\n+\n+int a = 5, b, c, d, g, h, k, l, m, o;\n+static int e[7];\n+int *volatile i = &d;\n+long long j;\n+\n+short p(int f, int dummy) {\n+  k = 0 != (*e = m);\n+  j = 0;\n+  for (; j < 59; j = j + 1)\n+    *i |= b;\n+  g = 1;\n+  for (; g <= 4; g++) {\n+    o = 0;\n+    for (; o <= 4; o++)\n+      i = (int * volatile)(long)l;\n+  }\n+  return 42;\n+}\n+\n+void\n+q() {\n+  char *n = (char*)&b;\n+\n+  (*n = a) == p(e[6], c);\n+  for (; h;)\n+    for (;;)\n+      ;\n+}\n+\n+/* { dg-final { scan-assembler-not {(?n)^\\tvsteb\\t.+,0$} } } */"}]}