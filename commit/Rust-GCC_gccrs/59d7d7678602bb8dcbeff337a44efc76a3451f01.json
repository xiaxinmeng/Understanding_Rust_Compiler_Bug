{"sha": "59d7d7678602bb8dcbeff337a44efc76a3451f01", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTlkN2Q3Njc4NjAyYmI4ZGNiZWZmMzM3YTQ0ZWZjNzZhMzQ1MWYwMQ==", "commit": {"author": {"name": "Geoffrey Keating", "email": "geoffk@apple.com", "date": "2005-01-07T00:19:23Z"}, "committer": {"name": "Geoffrey Keating", "email": "geoffk@gcc.gnu.org", "date": "2005-01-07T00:19:23Z"}, "message": "c-cppbuiltin.c (builtin_define_float_constants): Set __*_EPSILON__ for IBM long double format correctly.\n\n\t* c-cppbuiltin.c (builtin_define_float_constants): Set __*_EPSILON__\n\tfor IBM long double format correctly.\n\nFrom-SVN: r93021", "tree": {"sha": "0320e08704708cbe4172df7b2f48317ed8252f47", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0320e08704708cbe4172df7b2f48317ed8252f47"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/59d7d7678602bb8dcbeff337a44efc76a3451f01", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59d7d7678602bb8dcbeff337a44efc76a3451f01", "html_url": "https://github.com/Rust-GCC/gccrs/commit/59d7d7678602bb8dcbeff337a44efc76a3451f01", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59d7d7678602bb8dcbeff337a44efc76a3451f01/comments", "author": {"login": "geoffk01", "id": 31905243, "node_id": "MDQ6VXNlcjMxOTA1MjQz", "avatar_url": "https://avatars.githubusercontent.com/u/31905243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/geoffk01", "html_url": "https://github.com/geoffk01", "followers_url": "https://api.github.com/users/geoffk01/followers", "following_url": "https://api.github.com/users/geoffk01/following{/other_user}", "gists_url": "https://api.github.com/users/geoffk01/gists{/gist_id}", "starred_url": "https://api.github.com/users/geoffk01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/geoffk01/subscriptions", "organizations_url": "https://api.github.com/users/geoffk01/orgs", "repos_url": "https://api.github.com/users/geoffk01/repos", "events_url": "https://api.github.com/users/geoffk01/events{/privacy}", "received_events_url": "https://api.github.com/users/geoffk01/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "44d0e0415d3bad044a3850f97dac948963505ebe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44d0e0415d3bad044a3850f97dac948963505ebe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/44d0e0415d3bad044a3850f97dac948963505ebe"}], "stats": {"total": 38, "additions": 37, "deletions": 1}, "files": [{"sha": "44ef9c7cb30253b8e8aeb35cb10db97d66092e09", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59d7d7678602bb8dcbeff337a44efc76a3451f01/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59d7d7678602bb8dcbeff337a44efc76a3451f01/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=59d7d7678602bb8dcbeff337a44efc76a3451f01", "patch": "@@ -1,3 +1,8 @@\n+2005-01-06  Geoffrey Keating  <geoffk@apple.com>\n+\n+\t* c-cppbuiltin.c (builtin_define_float_constants): Set __*_EPSILON__\n+\tfor IBM long double format correctly.\n+\n 2005-01-06  Daniel Berlin <dberlin@dberlin.org>\n \t\n \tFix PR tree-optimization/18792"}, {"sha": "2c9039ef45fa697df3d04daf9791a2fec632394a", "filename": "gcc/c-cppbuiltin.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59d7d7678602bb8dcbeff337a44efc76a3451f01/gcc%2Fc-cppbuiltin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59d7d7678602bb8dcbeff337a44efc76a3451f01/gcc%2Fc-cppbuiltin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-cppbuiltin.c?ref=59d7d7678602bb8dcbeff337a44efc76a3451f01", "patch": "@@ -219,7 +219,12 @@ builtin_define_float_constants (const char *name_prefix, const char *fp_suffix,\n   /* The difference between 1 and the least value greater than 1 that is\n      representable in the given floating point type, b**(1-p).  */\n   sprintf (name, \"__%s_EPSILON__\", name_prefix);\n-  sprintf (buf, \"0x1p%d\", (1 - fmt->p) * fmt->log2_b);\n+  if (fmt->pnan < fmt->p)\n+    /* This is an IBM extended double format, so 1.0 + any double is\n+       representable precisely.  */\n+      sprintf (buf, \"0x1p%d\", (fmt->emin - fmt->p) * fmt->log2_b);\n+    else      \n+      sprintf (buf, \"0x1p%d\", (1 - fmt->p) * fmt->log2_b);\n   builtin_define_with_hex_fp_value (name, type, decimal_dig, buf, fp_suffix);\n \n   /* For C++ std::numeric_limits<T>::denorm_min.  The minimum denormalized"}, {"sha": "bb8bf45d9145ca3ed14c7afe2105be6f9cdb554a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59d7d7678602bb8dcbeff337a44efc76a3451f01/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59d7d7678602bb8dcbeff337a44efc76a3451f01/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=59d7d7678602bb8dcbeff337a44efc76a3451f01", "patch": "@@ -1,3 +1,7 @@\n+2005-01-06  Geoffrey Keating  <geoffk@apple.com>\n+\n+\t* gcc.dg/rs6000-ldouble-2.c: New.\n+\n 2005-01-06  Mark Mitchell  <mark@codesourcery.com>\n \n         PR c++/19244"}, {"sha": "3ef5131b966ec3482cb9cad047e29d1bd29317e3", "filename": "gcc/testsuite/gcc.dg/rs6000-ldouble-2.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59d7d7678602bb8dcbeff337a44efc76a3451f01/gcc%2Ftestsuite%2Fgcc.dg%2Frs6000-ldouble-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59d7d7678602bb8dcbeff337a44efc76a3451f01/gcc%2Ftestsuite%2Fgcc.dg%2Frs6000-ldouble-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Frs6000-ldouble-2.c?ref=59d7d7678602bb8dcbeff337a44efc76a3451f01", "patch": "@@ -0,0 +1,22 @@\n+/* { dg-do run { target powerpc*-*-darwin* powerpc*-*-aix* powerpc64-*-linux rs6000-*-* } } */\n+/* { dg-options \"-mlong-double-128\" } */\n+\n+/* Check that LDBL_EPSILON is right for 'long double'.  */\n+\n+#include <float.h>\n+\n+extern void abort (void);\n+\n+int main(void)\n+{\n+  volatile long double ee = 1.0;\n+  long double eps = ee;\n+  while (ee + 1.0 != 1.0)\n+    {\n+      eps = ee;\n+      ee = eps / 2;\n+    }\n+  if (eps != LDBL_EPSILON)\n+    abort ();\n+  return 0;\n+}"}]}