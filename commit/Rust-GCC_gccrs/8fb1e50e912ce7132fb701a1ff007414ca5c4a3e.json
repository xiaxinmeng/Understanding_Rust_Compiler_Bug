{"sha": "8fb1e50e912ce7132fb701a1ff007414ca5c4a3e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGZiMWU1MGU5MTJjZTcxMzJmYjcwMWExZmYwMDc0MTRjYTVjNGEzZQ==", "commit": {"author": {"name": "Graham Stott", "email": "grahams@redhat.com", "date": "2001-11-07T12:57:17Z"}, "committer": {"name": "Graham Stott", "email": "grahams@gcc.gnu.org", "date": "2001-11-07T12:57:17Z"}, "message": "* cse.c (cse_insn): Emit BARRIER after unconditional jump.\n\nFrom-SVN: r46824", "tree": {"sha": "b79621d5753791cf4ad13656630fd5b9cfbd35d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b79621d5753791cf4ad13656630fd5b9cfbd35d4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8fb1e50e912ce7132fb701a1ff007414ca5c4a3e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8fb1e50e912ce7132fb701a1ff007414ca5c4a3e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8fb1e50e912ce7132fb701a1ff007414ca5c4a3e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8fb1e50e912ce7132fb701a1ff007414ca5c4a3e/comments", "author": null, "committer": null, "parents": [{"sha": "b972dd0201d69cfd0a422292706c1d0b8b4f1b2d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b972dd0201d69cfd0a422292706c1d0b8b4f1b2d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b972dd0201d69cfd0a422292706c1d0b8b4f1b2d"}], "stats": {"total": 22, "additions": 17, "deletions": 5}, "files": [{"sha": "ed6baecf279ad926fd6579d2855ac06808c69cd3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fb1e50e912ce7132fb701a1ff007414ca5c4a3e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fb1e50e912ce7132fb701a1ff007414ca5c4a3e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8fb1e50e912ce7132fb701a1ff007414ca5c4a3e", "patch": "@@ -1,3 +1,7 @@\n+2001-11-07  Graham Stott  <grahams@redhat.com>\n+\n+\t* cse.c (cse_insn): Emit BARRIER after unconditional jump.\n+\n Wed Nov  7 13:33:34 CET 2001  Jan Hubicka  <jh@suse.cz>\n \n \t* expmed.c (expand_mult): Force operand to register before computing"}, {"sha": "e0c5fb03d62b3afe816977cab330823a0de630a2", "filename": "gcc/cse.c", "status": "modified", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fb1e50e912ce7132fb701a1ff007414ca5c4a3e/gcc%2Fcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fb1e50e912ce7132fb701a1ff007414ca5c4a3e/gcc%2Fcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.c?ref=8fb1e50e912ce7132fb701a1ff007414ca5c4a3e", "patch": "@@ -5767,6 +5767,11 @@ cse_insn (insn, libcall_insn)\n \t be a conditional or computed branch.  */\n       else if (dest == pc_rtx && GET_CODE (src) == LABEL_REF)\n \t{\n+\t  /* Now emit a BARRIER after the unconditional jump.  */\n+\t  if (NEXT_INSN (insn) == 0\n+\t      || GET_CODE (NEXT_INSN (insn)) != BARRIER)\n+\t    emit_barrier_after (insn);\n+\n \t  /* We reemit the jump in as many cases as possible just in\n \t     case the form of an unconditional jump is significantly\n \t     different than a computed jump or conditional jump.\n@@ -5777,20 +5782,23 @@ cse_insn (insn, libcall_insn)\n \t  if (n_sets == 1)\n \t    {\n \t      rtx new = emit_jump_insn_before (gen_jump (XEXP (src, 0)), insn);\n+\n \t      JUMP_LABEL (new) = XEXP (src, 0);\n \t      LABEL_NUSES (XEXP (src, 0))++;\n \t      insn = new;\n+\n+\t      /* Now emit a BARRIER after the unconditional jump.  */\n+\t      if (NEXT_INSN (insn) == 0\n+\t\t  || GET_CODE (NEXT_INSN (insn)) != BARRIER)\n+\t\temit_barrier_after (insn);\n \t    }\n \t  else\n \t    INSN_CODE (insn) = -1;\n \n \t  never_reached_warning (insn);\n \n-\t  /* Now emit a BARRIER after the unconditional jump.  Do not bother\n-\t     deleting any unreachable code, let jump/flow do that.  */\n-\t  if (NEXT_INSN (insn) != 0\n-\t      && GET_CODE (NEXT_INSN (insn)) != BARRIER)\n-\t    emit_barrier_after (insn);\n+\t  /* Do not bother deleting any unreachable code,\n+\t     let jump/flow do that.  */\n \n \t  cse_jumps_altered = 1;\n \t  sets[i].rtl = 0;"}]}