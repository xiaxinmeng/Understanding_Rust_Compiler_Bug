{"sha": "e139c7f95d955afd3736705796b7d87f44593f87", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTEzOWM3Zjk1ZDk1NWFmZDM3MzY3MDU3OTZiN2Q4N2Y0NDU5M2Y4Nw==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2007-09-24T12:35:14Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2007-09-24T12:35:14Z"}, "message": "* ChangeLog: Fix whitespace.\n\nFrom-SVN: r128712", "tree": {"sha": "e26b6223296a334b5c7c3eeaa2196ebd536612f6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e26b6223296a334b5c7c3eeaa2196ebd536612f6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e139c7f95d955afd3736705796b7d87f44593f87", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e139c7f95d955afd3736705796b7d87f44593f87", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e139c7f95d955afd3736705796b7d87f44593f87", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e139c7f95d955afd3736705796b7d87f44593f87/comments", "author": null, "committer": null, "parents": [{"sha": "714f2304c65dde0653e36cb94c5cefaea2727d55", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/714f2304c65dde0653e36cb94c5cefaea2727d55", "html_url": "https://github.com/Rust-GCC/gccrs/commit/714f2304c65dde0653e36cb94c5cefaea2727d55"}], "stats": {"total": 142, "additions": 73, "deletions": 69}, "files": [{"sha": "15c68ae376cbc06d12afc69d53a22b7bcd9dd2f0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 73, "deletions": 69, "changes": 142, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e139c7f95d955afd3736705796b7d87f44593f87/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e139c7f95d955afd3736705796b7d87f44593f87/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e139c7f95d955afd3736705796b7d87f44593f87", "patch": "@@ -1,6 +1,8 @@\n 2007-09-24  Kai Tietz  <kai.tietz@onevision.com>\n \n-\t* i386.c:  (return_in_memory_ms_64): Handle return types for complex types.\n+\tPR middle-end/33472\n+\t* config/i386/i386.c (return_in_memory_ms_64): Handle return types for\n+\tcomplex types.\n \n 2007-09-23  H.J. Lu  <hongjiu.lu@intel.com>\n \n@@ -9,7 +11,8 @@\n \n 2007-09-23  Ollie Wild  <aaw@google.com>\n \n-\tfold-const.c (fold_binary): Fold BIT_AND_EXPR's with a pointer operand.\n+\t* fold-const.c (fold_binary): Fold BIT_AND_EXPR's with a pointer\n+\toperand.\n \t(get_pointer_modulus_and_residue): New function.\n \n 2007-09-23  Richard Sandiford  <rsandifo@nildram.co.uk>\n@@ -270,8 +273,8 @@\n 2007-09-19  Bernd Schmidt  <bernd.schmidt@analog.com>\n \n \t* doc/tm.texi (IS_ASM_LOGICAL_LINE_SEPARATOR): Document new argument.\n-\t* final.c (IS_ASM_LOGICAL_LINE_SEPARATOR): Provide two-argument default\n-\tdefinition.\n+\t* final.c (IS_ASM_LOGICAL_LINE_SEPARATOR): Provide two-argument\n+\tdefault definition.\n \t(asm_insn_count): Pass template as second argument to it.\n \t* config/avr/avr.h (IS_ASM_LOGICAL_LINE_SEPARATOR): Likewise.\n \t* config/pa/pa.h (IS_ASM_LOGICAL_LINE_SEPARATOR): Likewise.\n@@ -586,7 +589,8 @@\n 2007-09-15  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n \n \tPR target/33062\n-\t* pa.c (function_value): Use GET_MODE_BITSIZE instead of TYPE_PRECISION.\n+\t* pa.c (function_value): Use GET_MODE_BITSIZE instead of\n+\tTYPE_PRECISION.\n \n 2007-09-15  Dorit Nuzman  <dorit@il.ibm.com>\n \n@@ -604,8 +608,8 @@\n 2007-09-14  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/33438\n-\t* config/i386/i386.md (fmodxf3): Copy operands[2] to temporary register\n-\twhen operands[2] equals operands[1].\n+\t* config/i386/i386.md (fmodxf3): Copy operands[2] to temporary\n+\tregister when operands[2] equals operands[1].\n \t(remainderxf3): Ditto.\n \n 2007-09-14  Sandra Loosemore  <sandra@codesourcery.com>\n@@ -1328,8 +1332,8 @@\n 2007-09-12  Jan Hubicka  <jh@suse.cz>\n \n \tPR target/33393\n-\t* i386.md (floatsisf2_mixed_memory, floatsisf2_sse_memory): Disable for\n-\t!SSE_MATH\n+\t* i386.md (floatsisf2_mixed_memory, floatsisf2_sse_memory): Disable\n+\tfor !SSE_MATH\n \n 2007-09-12  Christian Bruel  <christian.bruel@st.com>\n \n@@ -1437,7 +1441,7 @@\n \t* config/m68k/predicates.md (movsi_const0_operand,\n \tnon_symbolic_call_operand): New predicates.\n \n-\t* config/m68k/constraints.md: (Cs, Ci, C0, Cj, CQ, CW, CZ, CS, Ap, Ac):\n+\t* config/m68k/constraints.md (Cs, Ci, C0, Cj, CQ, CW, CZ, CS, Ap, Ac):\n \tNew constraints.\n \t* doc/md.texi (Constraints for Particular Machines: Motorola 680x0):\n \tDocument constraints N, O, P, R, S, T, Q, U, W, Cs, Ci, C0, Cj, CQ,\n@@ -1691,8 +1695,8 @@\n \tDEC_FLOAT_IS_SIGNED: Define for each of 3 operand widths.\n \n 2007-09-10  Harsha Jagasia <harsha.jagasia@amd.com>\n-            Jan Sjodin <jan.sjodin@amd.com>\n-\t\n+\t    Jan Sjodin <jan.sjodin@amd.com>\n+\n \t* tree-vect-analyze.c (vect_analyze_operations): Change\n \tcomparison of loop iterations with threshold to less than\n \tor equal to instead of less than. Reduce\n@@ -1745,7 +1749,7 @@\n \t* config/dfp-bit.c (host_to_ieee32, ieee_to_host_32): Ditto.\n \t(__swap64): Remove.\n \t(host_to_ieee_64, ieee_to_host_64): Don't handle endianness.\n-         (__swap128): Remove\n+\t(__swap128): Remove\n \t(host_to_ieee_128, ieee_to_host_128): Don't handle endianness.\n \t* Makefile.in (DECNUM_H): Add decimal128Local.h.\n \n@@ -1986,8 +1990,8 @@\n \t(struct _loop_vec_info): Define new fields: strided_stores,\n \tslp_instances, and slp_unrolling_factor along macros for their access.\n \t(enum slp_vect_type): New.\n-\t(struct _stmt_vec_info): Define new field, slp_type, and macros for its\n-\taccess.\n+\t(struct _stmt_vec_info): Define new field, slp_type, and macros for\n+\tits access.\n \t(STMT_VINFO_STRIDED_ACCESS): New macro.\n \t(vect_free_slp_tree): Declare.\n \t(vectorizable_load): Add an argument of type slp_tree.\n@@ -2046,8 +2050,8 @@\n \n 2007-09-09  Andrew Haley  <aph@redhat.com>\n \n-        * optabs.c (sign_expand_binop): Set libcall_gen = NULL in the\n-        fake signed optab.\n+\t* optabs.c (sign_expand_binop): Set libcall_gen = NULL in the fake\n+\tsigned optab.\n \n 2007-09-09  Hans-Peter Nilsson  <hp@axis.com>\n \n@@ -2251,8 +2255,8 @@\n \n  \t2007-09-06  Jan Hubicka  <jh@suse.cz>\n  \n-\t* config/i386.c (ix86_expand_lround, ix86_expand_round): Update call of\n-\treal_2expN.\n+\t* config/i386.c (ix86_expand_lround, ix86_expand_round): Update call\n+\tof real_2expN.\n \n \t2007-09-06  Richard Sandiford  <richard@codesourcery.com>\n \n@@ -2592,7 +2596,7 @@\n \t(machopic_legitimize_pic_address): Likewise.\n \n 2007-09-06  Andrew Pinski  <andrew_pinski@playstation.sony.com>\n-            Jan Hubicka  <jh@suse.cz>\n+\t    Jan Hubicka  <jh@suse.cz>\n \n \t* config/spu/spu.md (floatsidf2): Use convert_optab_libfunc\n \tinstead of ufloat_optab->handlers directly.\n@@ -2922,7 +2926,7 @@\n \n 2007-09-05  Sandra Loosemore  <sandra@codesourcery.com>\n \t    David Ung  <davidu@mips.com>\n-            Nigel Stephens <nigel@mips.com>\n+\t    Nigel Stephens <nigel@mips.com>\n \n \tAdd mips16/nomips16 function attributes and -mflip-mips16 option\n \tfor testing mixed-mode compilation.\n@@ -3200,7 +3204,7 @@\n \n 2007-09-04  Andrew Haley  <aph@redhat.com>\n \n-        * config/arm/libgcc-bpabi.ver: Add _Unwind_Backtrace as GCC_4.3.0.\n+\t* config/arm/libgcc-bpabi.ver: Add _Unwind_Backtrace as GCC_4.3.0.\n \n 2007-09-04  Andrew Haley  <aph@redhat.com>\n \n@@ -3448,8 +3452,8 @@\n \tDocumentation.\n \n 2007-09-03  Vladimir Yanovsky  <yanov@il.ibm.com>\n-            Ayal Zaks  <zaks@il.ibm.com>\n-            Revital Eres  <eres@il.ibm.com>\n+\t    Ayal Zaks  <zaks@il.ibm.com>\n+\t    Revital Eres  <eres@il.ibm.com>\n \n \t* modulo-sched.c (ps_insert_empty_row, verify_partial_schedule,\n \tcompute_split_row): New functions.\n@@ -3661,40 +3665,40 @@\n \thelpers.\n \n 2007-08-31  David Edelsohn  <edelsohn@gnu.org>\n-            Revital Eres  <eres@il.ibm.com>\n-\n-        * doc/invoke.texi (-mpaired): Document flag.\n-        * config.gcc: Include paired.h in powerpc extra_headers and\n-        750cl.h in powerpc-*-linux*paired*.\n-        * config/rs6000/rs6000.opt (-mpaired): New flag.\n-        * config/rs6000/rs6000.c (paired_init_builtins,\n-        paired_expand_builtin, paired_expand_lv_builtin,\n-        paired_expand_stv_builtin, paired_expand_predicate_builtin):\n-        New functions to support the paired single builtin functions.\n-        (rs6000_hard_regno_mode_ok): Handle PAIRED_VECTOR_MODE.\n-        (def_builtin, bdesc_3arg, bdesc_2arg, bdesc_1arg): Add paired\n-        single builtins.\n-        (bdesc_paired_preds): New structure for paired predicate\n-        instructions.\n-        (rs6000_expand_builtin): Expand paired single builtins.\n-        (rs6000_init_builtins): Init paired single builtins.\n-        (rs6000_common_init_builtins): Add v2sf_ftype_v2sf_v2sf_v2sf.\n-        Rename v2sf_ftype_v2sf_v2sf to v2sf_ftype_v2sf_v2sf_spe\n-        and v2sf_ftype_v2sf_spe to v2sf_ftype_v2sf.  Add new types\n-        v2sf_ftype_v2sf_v2sf and v2sf_ftype_v2sf.\n-        (rs6000_vector_mode_supported_p): Support paired vector mode.\n-        * config/rs6000/rs6000.h: (UNITS_PER_PAIRED_WORD,\n-        PAIRED_VECTOR_MODE, PAIRED_SIMD_REGNO_P, TARGET_PAIRED_FLOAT):\n-        New.\n-        (LOCAL_ALIGNMENT): Handle PAIRED_VECTOR_MODE.\n-        (DATA_ALIGNMENT): Likewise.\n-        (UNITS_PER_SIMD_WORD): Handle PAIRED_VECTOR_MODE.\n-        (rs6000_builtins): Add PAIRED builtins.\n-        * config/rs6000/rs6000.md: Include paired.md.\n-        * config/rs6000/paired.h: New.\n-        * config/rs6000/paired.md: New.\n-        * config/rs6000/750cl.h: New.\n-        * config/rs6000/spe.md: Recognize movv2sf instruction for 750cl.\n+\t    Revital Eres  <eres@il.ibm.com>\n+\n+\t* doc/invoke.texi (-mpaired): Document flag.\n+\t* config.gcc: Include paired.h in powerpc extra_headers and\n+\t750cl.h in powerpc-*-linux*paired*.\n+\t* config/rs6000/rs6000.opt (-mpaired): New flag.\n+\t* config/rs6000/rs6000.c (paired_init_builtins,\n+\tpaired_expand_builtin, paired_expand_lv_builtin,\n+\tpaired_expand_stv_builtin, paired_expand_predicate_builtin):\n+\tNew functions to support the paired single builtin functions.\n+\t(rs6000_hard_regno_mode_ok): Handle PAIRED_VECTOR_MODE.\n+\t(def_builtin, bdesc_3arg, bdesc_2arg, bdesc_1arg): Add paired\n+\tsingle builtins.\n+\t(bdesc_paired_preds): New structure for paired predicate\n+\tinstructions.\n+\t(rs6000_expand_builtin): Expand paired single builtins.\n+\t(rs6000_init_builtins): Init paired single builtins.\n+\t(rs6000_common_init_builtins): Add v2sf_ftype_v2sf_v2sf_v2sf.\n+\tRename v2sf_ftype_v2sf_v2sf to v2sf_ftype_v2sf_v2sf_spe\n+\tand v2sf_ftype_v2sf_spe to v2sf_ftype_v2sf.  Add new types\n+\tv2sf_ftype_v2sf_v2sf and v2sf_ftype_v2sf.\n+\t(rs6000_vector_mode_supported_p): Support paired vector mode.\n+\t* config/rs6000/rs6000.h: (UNITS_PER_PAIRED_WORD,\n+\tPAIRED_VECTOR_MODE, PAIRED_SIMD_REGNO_P, TARGET_PAIRED_FLOAT):\n+\tNew.\n+\t(LOCAL_ALIGNMENT): Handle PAIRED_VECTOR_MODE.\n+\t(DATA_ALIGNMENT): Likewise.\n+\t(UNITS_PER_SIMD_WORD): Handle PAIRED_VECTOR_MODE.\n+\t(rs6000_builtins): Add PAIRED builtins.\n+\t* config/rs6000/rs6000.md: Include paired.md.\n+\t* config/rs6000/paired.h: New.\n+\t* config/rs6000/paired.md: New.\n+\t* config/rs6000/750cl.h: New.\n+\t* config/rs6000/spe.md: Recognize movv2sf instruction for 750cl.\n \n 2007-08-30  Ollie Wild  <aaw@google.com>\n \n@@ -3971,9 +3975,9 @@\n \tfits in the bitfield.\n \n 2007-08-28  Mircea Namolaru  <namolaru@il.ibm.com>\n-            Vladimir Yanovsky  <yanov@il.ibm.com>\n-            Revital Eres  <eres@il.ibm.com>\n-            Andrey Belevantsev  <abel@ispras.ru>\n+\t    Vladimir Yanovsky  <yanov@il.ibm.com>\n+\t    Revital Eres  <eres@il.ibm.com>\n+\t    Andrey Belevantsev  <abel@ispras.ru>\n \n \t* config/spu/spu.md: Recognize doloop pattern when -fmodulo-sched\n \tis set.\n@@ -4072,7 +4076,7 @@\n \t(init_regs): Update comments.\n \t(fix_register): Update initial_fixed_regs, initial_call_used_regs,\n \tand initial_call_really_used_regs, instead of the non-initial \n-        variables.  This allows us to save the command-line register settings\n+\tvariables.  This allows us to save the command-line register settings\n \tafter target reinitialization.\n \t(init_reg_autoinc): Zero forbidden_inc_dec_classes.\n \t* rtl.h (init_emit_regs): Declare.\n@@ -4272,7 +4276,7 @@\n \t* expr.c (store_expr): Fix order of store_by_pieces arguments.\n \n 2007-08-24  Sandra Loosemore  <sandra@codesourcery.com>\n-            Nigel Stephens <nigel@mips.com>\n+\t    Nigel Stephens <nigel@mips.com>\n \n \tPR target/11787\n \n@@ -4976,7 +4980,7 @@\n \tinsn_has_dfa_reservation_p ().\n \n 2007-08-22  Christian Bruel  <christian.bruel@st.com>\t\n-            Richard Guenther <rguenther@suse.de>\n+\t    Richard Guenther <rguenther@suse.de>\n \t\n \t* fold-const.c (fold_binary): Optimize A-A if -ffinite-math-only.\n \t* simplify_rtx (simplify_binary_operation_1): Likewise.\n@@ -5156,7 +5160,7 @@\n \n 2007-08-20  Pawel Sikora  <pluto@pld-linux.org>\n \n-        * doc/invoke.texi (-Wnon-virtual-dtor): Update documentation.\n+\t* doc/invoke.texi (-Wnon-virtual-dtor): Update documentation.\n \n 2007-08-20  David Edelsohn  <edelsohn@gnu.org>\n \n@@ -5167,8 +5171,8 @@\n \n 2007-08-20  Richard Guenther  <rguenther@suse.de>\n \n-        * c-typeck.c (convert_for_assignment): Use the type of\n-        the member for the initialization.\n+\t* c-typeck.c (convert_for_assignment): Use the type of\n+\tthe member for the initialization.\n \n 2007-08-20  Richard Guenther  <rguenther@suse.de>\n \n@@ -5240,7 +5244,7 @@\n \tand compacting of basic blocks.\n \n 2007-08-19  Andrew Pinski  <andrew_pinski@playstation.sony.com>\n-           Serge Belyshev  <belyshev@depni.sinp.msu.ru>\n+\t   Serge Belyshev  <belyshev@depni.sinp.msu.ru>\n \n \tPR target/32522\n \t* config/alpha/alpha.c (va_list_skip_additions): Check for\n@@ -5543,7 +5547,7 @@\n \t(debug_aff): Likewise.\n \n 2007-08-18  Paul Brook  <paul@codesourcery.com>\n-            Joseph Myers  <joseph@codesourcery.com>\n+\t    Joseph Myers  <joseph@codesourcery.com>\n \n \t* common.opt (-fdebug-prefix-map=): New option.\n \t* opts.c: Include debug.h."}]}