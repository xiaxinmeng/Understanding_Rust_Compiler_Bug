{"sha": "97a7f457da5b21ef6405afb4be94d93773649e89", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTdhN2Y0NTdkYTViMjFlZjY0MDVhZmI0YmU5NGQ5Mzc3MzY0OWU4OQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@cygnus.com", "date": "1998-06-27T23:04:40Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "1998-06-27T23:04:40Z"}, "message": "* objc/archive.c: Remove <string.h> prototypes.\n\nFrom-SVN: r20769", "tree": {"sha": "4eb7f81fe34fa5c8e18ec65b1644e3116cba4fad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4eb7f81fe34fa5c8e18ec65b1644e3116cba4fad"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/97a7f457da5b21ef6405afb4be94d93773649e89", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97a7f457da5b21ef6405afb4be94d93773649e89", "html_url": "https://github.com/Rust-GCC/gccrs/commit/97a7f457da5b21ef6405afb4be94d93773649e89", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97a7f457da5b21ef6405afb4be94d93773649e89/comments", "author": null, "committer": null, "parents": [{"sha": "dfcb37f2a7ac5144dfd1b5d484947d21e047c919", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dfcb37f2a7ac5144dfd1b5d484947d21e047c919", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dfcb37f2a7ac5144dfd1b5d484947d21e047c919"}], "stats": {"total": 40, "additions": 27, "deletions": 13}, "files": [{"sha": "7b99709284731b6fcbbeb6eb5b1f090ca42a07c3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97a7f457da5b21ef6405afb4be94d93773649e89/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97a7f457da5b21ef6405afb4be94d93773649e89/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=97a7f457da5b21ef6405afb4be94d93773649e89", "patch": "@@ -1,3 +1,7 @@\n+Sat Jun 27 23:02:04 1998  Richard Henderson  <rth@cygnus.com>\n+\n+\t* objc/archive.c: Remove <string.h> prototypes.\n+\n Sat Jun 27 22:37:05 1998  Jeffrey A Law  (law@cygnus.com)\n \n \t* tm.texi (NEED_MATH_LIBRARY): Document new target macro."}, {"sha": "c762fe6186e53666f55f2ab1c822824fb3b0e29b", "filename": "gcc/objc/archive.c", "status": "modified", "additions": 23, "deletions": 13, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97a7f457da5b21ef6405afb4be94d93773649e89/gcc%2Fobjc%2Farchive.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97a7f457da5b21ef6405afb4be94d93773649e89/gcc%2Fobjc%2Farchive.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Farchive.c?ref=97a7f457da5b21ef6405afb4be94d93773649e89", "patch": "@@ -24,10 +24,15 @@ Boston, MA 02111-1307, USA.  */\n    however invalidate any other reasons why the executable file might be\n    covered by the GNU General Public License.  */\n \n+#include \"config.h\"\n #include \"runtime.h\"\n #include \"typedstream.h\"\n #include \"encoding.h\"\n \n+#ifdef HAVE_STDLIB_H\n+#include <stdlib.h>\n+#endif\n+\n extern int fflush(FILE*);\n \n #define ROUND(V, A) \\\n@@ -357,8 +362,11 @@ __objc_write_extension (struct objc_typed_stream* stream, unsigned char code)\n       return (*stream->write)(stream->physical, &buf, 1);\n     }\n   else \n-    objc_error(nil, OBJC_ERR_BAD_OPCODE,\n-\t       \"__objc_write_extension: bad opcode %c\\n\", code);\n+    {\n+      objc_error(nil, OBJC_ERR_BAD_OPCODE,\n+\t\t \"__objc_write_extension: bad opcode %c\\n\", code);\n+      return -1;\n+    }\n }\n \n __inline__ int\n@@ -391,7 +399,7 @@ objc_write_object_reference (struct objc_typed_stream* stream, id object)\n int \n objc_write_root_object (struct objc_typed_stream* stream, id object)\n {\n-  int len;\n+  int len = 0;\n   if (stream->writing_root_p)\n     objc_error (nil, OBJC_ERR_RECURSE_ROOT, \n \t\t\"objc_write_root_object called recursively\");\n@@ -426,12 +434,6 @@ objc_write_object (struct objc_typed_stream* stream, id object)\n     }\n }\n \n-#ifdef __alpha__\n-extern int atoi (const char*);\n-extern size_t strlen(const char*);\n-extern size_t strcpy(char*, const char*);\n-#endif\n-\n __inline__ int\n __objc_write_class (struct objc_typed_stream* stream, struct objc_class* class)\n {\n@@ -1065,8 +1067,11 @@ objc_write_type(TypedStream* stream, const char* type, const void* data)\n     }\n \n   default:\n-    objc_error(nil, OBJC_ERR_BAD_TYPE,\n-\t       \"objc_write_type: cannot parse typespec: %s\\n\", type);\n+    {\n+      objc_error(nil, OBJC_ERR_BAD_TYPE,\n+\t\t \"objc_write_type: cannot parse typespec: %s\\n\", type);\n+      return 0;\n+    }\n   }\n }\n \n@@ -1158,8 +1163,11 @@ objc_read_type(TypedStream* stream, const char* type, void* data)\n     }\n \n   default:\n-    objc_error(nil, OBJC_ERR_BAD_TYPE,\n-\t       \"objc_read_type: cannot parse typespec: %s\\n\", type);\n+    {\n+      objc_error(nil, OBJC_ERR_BAD_TYPE,\n+\t\t \"objc_read_type: cannot parse typespec: %s\\n\", type);\n+      return 0;\n+    }\n   }\n }\n \n@@ -1423,12 +1431,14 @@ static int\n __objc_no_write(FILE* file, char* data, int len)\n {\n   objc_error (nil, OBJC_ERR_NO_WRITE, \"TypedStream not open for writing\");\n+  return 0;\n }\n \n static int \n __objc_no_read(FILE* file, char* data, int len)\n {\n   objc_error (nil, OBJC_ERR_NO_READ, \"TypedStream not open for reading\");\n+  return 0;\n }\n \n static int"}]}