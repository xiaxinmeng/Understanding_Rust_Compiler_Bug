{"sha": "18ed6ee4bf95a6d02ff34e0dfa279e8c9a1179a8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MThlZDZlZTRiZjk1YTZkMDJmZjM0ZTBkZmEyNzllOGM5YTExNzlhOA==", "commit": {"author": {"name": "Nathan Froyd", "email": "froydnj@codesourcery.com", "date": "2010-10-23T03:05:47Z"}, "committer": {"name": "Nathan Froyd", "email": "froydnj@gcc.gnu.org", "date": "2010-10-23T03:05:47Z"}, "message": "cppbuiltin.c (define_builtin_macros_for_type_sizes): Define __BYTE_ORDER__...\n\ngcc/\n\t* cppbuiltin.c (define_builtin_macros_for_type_sizes): Define\n\t__BYTE_ORDER__, __ORDER_LITTLE_ENDIAN__, __ORDER_BIG_ENDIAN__, and\n\t__ORDER_PDP_ENDIAN__.\n\t* libgcc2.h (LIBGCC2_WORDS_BIG_ENDIAN): Delete.\n\t(struct DWstruct): Define based on __BYTE_ORDER__.\n\t* config/fixed-bit.h (LIBGCC2_WORDS_BIG_ENDIAN): Delete.\n\t(struct INTstruct): Define based on __BYTE_ORDER__.\n\t* config/dfp-bit.h (LIBGCC2_WORDS_BIG_ENDIAN): Delete.\n\t(LIBGCC2_FLOAT_WORDS_BIG_ENDIAN): Test __BYTE_ORDER__.\n\t* system.h (LIBGCC2_WORDS_BIG_ENDIAN): Poison identifier.\n\t* config/arc/arc.h (LIBGCC2_WORDS_BIG_ENDIAN): Delete.\n\t* config/arm/arm.h (LIBGCC2_WORDS_BIG_ENDIAN): Delete.\n\t* config/ia64/ia64.h (LIBGCC2_WORDS_BIG_ENDIAN): Delete.\n\t* config/iq2000/iq2000.h (LIBGCC2_WORDS_BIG_ENDIAN): Delete.\n\t* config/lm32/lm32.h (LIBGCC2_WORDS_BIG_ENDIAN): Delete.\n\t* config/m32r/m32r.h (LIBGCC2_WORDS_BIG_ENDIAN): Delete.\n\t* config/mcore/mcore.h (LIBGCC2_WORDS_BIG_ENDIAN): Delete.\n\t* config/mep/mep.h (LIBGCC2_WORDS_BIG_ENDIAN): Delete.\n\t* config/mips/mips.h (LIBGCC2_WORDS_BIG_ENDIAN): Delete.\n\t* config/rs6000/sysv4.h (LIBGCC2_WORDS_BIG_ENDIAN): Delete.\n\t* config/rx/rx.h (LIBGCC2_WORDS_BIG_ENDIAN): Delete.\n\t* config/score/score.h (LIBGCC2_WORDS_BIG_ENDIAN): Delete.\n\t* config/sh/sh.h (LIBGCC2_WORDS_BIG_ENDIAN): Delete.\n\t* config/sparc/sparc.h (LIBGCC2_WORDS_BIG_ENDIAN): Delete.\n\t* config/xtensa/xtensa.h (LIBGCC2_WORDS_BIG_ENDIAN): Delete.\n\t* doc/tm.texi.in (LIBGCC2_WORDS_BIG_ENDIAN): Delete.\n\t* doc/tm.texi: Regenerate.\n\t* doc/cpp.texi (__BYTE_ORDER__, __ORDER_LITTLE_ENDIAN__): Document.\n\t(__ORDER_BIG_ENDIAN__, __ORDER_PDP_ENDIAN__): Likewise.\n\nlibdecnumber/\n\t* dconfig.h (LIBGCC2_WORDS_BIG_ENDIAN): Delete.\n\t(LIBGCC2_FLOAT_WORDS_BIG_ENDIAN): Test __BYTE_ORDER__.\n\nlibgcc/\n\t* config/libbid/bid_gcc_intrinsics.h (LIBGCC2_WORDS_BIG_ENDIAN):\n\tDelete.\n\t(LIBGCC2_FLOAT_WORDS_BIG_ENDIAN): Test __BYTE_ORDER__.\n\nFrom-SVN: r165881", "tree": {"sha": "3d3cfc3c02f0c38bb0e407da7fd4e15a6393c11b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3d3cfc3c02f0c38bb0e407da7fd4e15a6393c11b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/18ed6ee4bf95a6d02ff34e0dfa279e8c9a1179a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18ed6ee4bf95a6d02ff34e0dfa279e8c9a1179a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/18ed6ee4bf95a6d02ff34e0dfa279e8c9a1179a8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18ed6ee4bf95a6d02ff34e0dfa279e8c9a1179a8/comments", "author": null, "committer": null, "parents": [{"sha": "646e6f415ca6b02142132ebb82c8b11f08d2464f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/646e6f415ca6b02142132ebb82c8b11f08d2464f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/646e6f415ca6b02142132ebb82c8b11f08d2464f"}], "stats": {"total": 239, "additions": 95, "deletions": 144}, "files": [{"sha": "53b43f020a9caf545fde75554a3e1d121d0e3da4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18ed6ee4bf95a6d02ff34e0dfa279e8c9a1179a8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18ed6ee4bf95a6d02ff34e0dfa279e8c9a1179a8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=18ed6ee4bf95a6d02ff34e0dfa279e8c9a1179a8", "patch": "@@ -1,3 +1,35 @@\n+2010-10-23  Nathan Froyd  <froydnj@codesourcery.com>\n+\n+\t* cppbuiltin.c (define_builtin_macros_for_type_sizes): Define\n+\t__BYTE_ORDER__, __ORDER_LITTLE_ENDIAN__, __ORDER_BIG_ENDIAN__, and\n+\t__ORDER_PDP_ENDIAN__.\n+\t* libgcc2.h (LIBGCC2_WORDS_BIG_ENDIAN): Delete.\n+\t(struct DWstruct): Define based on __BYTE_ORDER__.\n+\t* config/fixed-bit.h (LIBGCC2_WORDS_BIG_ENDIAN): Delete.\n+\t(struct INTstruct): Define based on __BYTE_ORDER__.\n+\t* config/dfp-bit.h (LIBGCC2_WORDS_BIG_ENDIAN): Delete.\n+\t(LIBGCC2_FLOAT_WORDS_BIG_ENDIAN): Test __BYTE_ORDER__.\n+\t* system.h (LIBGCC2_WORDS_BIG_ENDIAN): Poison identifier.\n+\t* config/arc/arc.h (LIBGCC2_WORDS_BIG_ENDIAN): Delete.\n+\t* config/arm/arm.h (LIBGCC2_WORDS_BIG_ENDIAN): Delete.\n+\t* config/ia64/ia64.h (LIBGCC2_WORDS_BIG_ENDIAN): Delete.\n+\t* config/iq2000/iq2000.h (LIBGCC2_WORDS_BIG_ENDIAN): Delete.\n+\t* config/lm32/lm32.h (LIBGCC2_WORDS_BIG_ENDIAN): Delete.\n+\t* config/m32r/m32r.h (LIBGCC2_WORDS_BIG_ENDIAN): Delete.\n+\t* config/mcore/mcore.h (LIBGCC2_WORDS_BIG_ENDIAN): Delete.\n+\t* config/mep/mep.h (LIBGCC2_WORDS_BIG_ENDIAN): Delete.\n+\t* config/mips/mips.h (LIBGCC2_WORDS_BIG_ENDIAN): Delete.\n+\t* config/rs6000/sysv4.h (LIBGCC2_WORDS_BIG_ENDIAN): Delete.\n+\t* config/rx/rx.h (LIBGCC2_WORDS_BIG_ENDIAN): Delete.\n+\t* config/score/score.h (LIBGCC2_WORDS_BIG_ENDIAN): Delete.\n+\t* config/sh/sh.h (LIBGCC2_WORDS_BIG_ENDIAN): Delete.\n+\t* config/sparc/sparc.h (LIBGCC2_WORDS_BIG_ENDIAN): Delete.\n+\t* config/xtensa/xtensa.h (LIBGCC2_WORDS_BIG_ENDIAN): Delete.\n+\t* doc/tm.texi.in (LIBGCC2_WORDS_BIG_ENDIAN): Delete.\n+\t* doc/tm.texi: Regenerate.\n+\t* doc/cpp.texi (__BYTE_ORDER__, __ORDER_LITTLE_ENDIAN__): Document.\n+\t(__ORDER_BIG_ENDIAN__, __ORDER_PDP_ENDIAN__): Likewise.\n+\n 2010-10-23  Jie Zhang  <jie@codesourcery.com>\n \n \tPR rtl-optimization/37360"}, {"sha": "93f5a7feccf8f08601ae878e161d567d3b815c18", "filename": "gcc/config/arc/arc.h", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18ed6ee4bf95a6d02ff34e0dfa279e8c9a1179a8/gcc%2Fconfig%2Farc%2Farc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18ed6ee4bf95a6d02ff34e0dfa279e8c9a1179a8/gcc%2Fconfig%2Farc%2Farc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc.h?ref=18ed6ee4bf95a6d02ff34e0dfa279e8c9a1179a8", "patch": "@@ -99,14 +99,6 @@ extern int arc_cpu_type;\n    numbered.  */\n #define WORDS_BIG_ENDIAN (TARGET_BIG_ENDIAN)\n \n-/* Define this to set the endianness to use in libgcc2.c, which can\n-   not depend on target_flags.  */\n-#ifdef __big_endian__\n-#define LIBGCC2_WORDS_BIG_ENDIAN 1\n-#else\n-#define LIBGCC2_WORDS_BIG_ENDIAN 0\n-#endif\n-\n /* Width of a word, in units (bytes).  */\n #define UNITS_PER_WORD 4\n "}, {"sha": "c3dc3b911215f769d28527f824eeca861462bf0d", "filename": "gcc/config/arm/arm.h", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18ed6ee4bf95a6d02ff34e0dfa279e8c9a1179a8/gcc%2Fconfig%2Farm%2Farm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18ed6ee4bf95a6d02ff34e0dfa279e8c9a1179a8/gcc%2Fconfig%2Farm%2Farm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.h?ref=18ed6ee4bf95a6d02ff34e0dfa279e8c9a1179a8", "patch": "@@ -556,14 +556,6 @@ extern int arm_arch_hwdiv;\n    This is always false, even when in big-endian mode.  */\n #define WORDS_BIG_ENDIAN  (BYTES_BIG_ENDIAN && ! TARGET_LITTLE_WORDS)\n \n-/* LIBGCC2_WORDS_BIG_ENDIAN has to be a constant, so we define this based\n-   on processor pre-defineds when compiling libgcc2.c.  */\n-#if defined(__ARMEB__) && !defined(__ARMWEL__)\n-#define LIBGCC2_WORDS_BIG_ENDIAN 1\n-#else\n-#define LIBGCC2_WORDS_BIG_ENDIAN 0\n-#endif\n-\n /* Define this if most significant word of doubles is the lowest numbered.\n    The rules are different based on whether or not we use FPA-format,\n    VFP-format or some other floating point co-processor's format doubles.  */"}, {"sha": "20688b19a1e0216bf7542159d1dbe2b622bc132a", "filename": "gcc/config/dfp-bit.h", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18ed6ee4bf95a6d02ff34e0dfa279e8c9a1179a8/gcc%2Fconfig%2Fdfp-bit.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18ed6ee4bf95a6d02ff34e0dfa279e8c9a1179a8/gcc%2Fconfig%2Fdfp-bit.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdfp-bit.h?ref=18ed6ee4bf95a6d02ff34e0dfa279e8c9a1179a8", "patch": "@@ -33,12 +33,9 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #include \"coretypes.h\"\n #include \"tm.h\"\n \n-#ifndef LIBGCC2_WORDS_BIG_ENDIAN\n-#define LIBGCC2_WORDS_BIG_ENDIAN WORDS_BIG_ENDIAN\n-#endif\n-\n #ifndef LIBGCC2_FLOAT_WORDS_BIG_ENDIAN\n-#define LIBGCC2_FLOAT_WORDS_BIG_ENDIAN LIBGCC2_WORDS_BIG_ENDIAN\n+#define LIBGCC2_FLOAT_WORDS_BIG_ENDIAN \\\n+  (__BYTE_ORDER__ != __ORDER_LITTLE_ENDIAN__)\n #endif\n \n #ifndef LIBGCC2_LONG_DOUBLE_TYPE_SIZE"}, {"sha": "9d53ce783b2d4d7719abce254b5ffda990e1ade5", "filename": "gcc/config/fixed-bit.h", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18ed6ee4bf95a6d02ff34e0dfa279e8c9a1179a8/gcc%2Fconfig%2Ffixed-bit.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18ed6ee4bf95a6d02ff34e0dfa279e8c9a1179a8/gcc%2Fconfig%2Ffixed-bit.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffixed-bit.h?ref=18ed6ee4bf95a6d02ff34e0dfa279e8c9a1179a8", "patch": "@@ -41,14 +41,6 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n    Ex: If we define FROM_QQ and TO_SI, the conversion from QQ to SI is\n    generated.  */\n \n-/* Permit the tm.h file to select the endianness to use just for this\n-   file.  This is used when the endianness is determined when the\n-   compiler is run.  */\n-\n-#ifndef LIBGCC2_WORDS_BIG_ENDIAN\n-#define LIBGCC2_WORDS_BIG_ENDIAN WORDS_BIG_ENDIAN\n-#endif\n-\n #ifndef LIBGCC2_LONG_DOUBLE_TYPE_SIZE\n #define LIBGCC2_LONG_DOUBLE_TYPE_SIZE LONG_DOUBLE_TYPE_SIZE\n #endif\n@@ -428,7 +420,7 @@ typedef int word_type __attribute__ ((mode (__word__)));\n /* The following defines are based on the previous defines.  */\n \n #if defined (HINT_C_TYPE)\n-#if LIBGCC2_WORDS_BIG_ENDIAN\n+#if __BYTE_ORDER__ != __ORDER_LITTLE_ENDIAN__\n   struct INTstruct {HINT_C_TYPE high, low;};\n #else\n   struct INTstruct {HINT_C_TYPE low, high;};"}, {"sha": "6fdcb97bcd6b375806b8eaf5acab631982e2da47", "filename": "gcc/config/ia64/ia64.h", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18ed6ee4bf95a6d02ff34e0dfa279e8c9a1179a8/gcc%2Fconfig%2Fia64%2Fia64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18ed6ee4bf95a6d02ff34e0dfa279e8c9a1179a8/gcc%2Fconfig%2Fia64%2Fia64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.h?ref=18ed6ee4bf95a6d02ff34e0dfa279e8c9a1179a8", "patch": "@@ -148,12 +148,6 @@ extern enum processor_type ia64_tune;\n \n #define WORDS_BIG_ENDIAN (TARGET_BIG_ENDIAN != 0)\n \n-#if defined(__BIG_ENDIAN__)\n-#define LIBGCC2_WORDS_BIG_ENDIAN 1\n-#else\n-#define LIBGCC2_WORDS_BIG_ENDIAN 0\n-#endif\n-\n #define UNITS_PER_WORD 8\n \n #define POINTER_SIZE (TARGET_ILP32 ? 32 : 64)"}, {"sha": "91c5173416d6839bd35c6ee2efb6eccd4fc59c97", "filename": "gcc/config/iq2000/iq2000.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18ed6ee4bf95a6d02ff34e0dfa279e8c9a1179a8/gcc%2Fconfig%2Fiq2000%2Fiq2000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18ed6ee4bf95a6d02ff34e0dfa279e8c9a1179a8/gcc%2Fconfig%2Fiq2000%2Fiq2000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fiq2000%2Fiq2000.h?ref=18ed6ee4bf95a6d02ff34e0dfa279e8c9a1179a8", "patch": "@@ -74,7 +74,6 @@\n #define BITS_BIG_ENDIAN \t\t0\n #define BYTES_BIG_ENDIAN \t\t1 \n #define WORDS_BIG_ENDIAN \t\t1\n-#define LIBGCC2_WORDS_BIG_ENDIAN\t1\n #define BITS_PER_WORD \t\t\t32\n #define MAX_BITS_PER_WORD \t\t64\n #define UNITS_PER_WORD \t\t\t4"}, {"sha": "cec835106a9fde7ab60525179ff750c0f6233ebf", "filename": "gcc/config/lm32/lm32.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18ed6ee4bf95a6d02ff34e0dfa279e8c9a1179a8/gcc%2Fconfig%2Flm32%2Flm32.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18ed6ee4bf95a6d02ff34e0dfa279e8c9a1179a8/gcc%2Fconfig%2Flm32%2Flm32.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Flm32%2Flm32.h?ref=18ed6ee4bf95a6d02ff34e0dfa279e8c9a1179a8", "patch": "@@ -84,7 +84,6 @@\n #define BITS_BIG_ENDIAN 0\n #define BYTES_BIG_ENDIAN 1\n #define WORDS_BIG_ENDIAN 1\n-#define LIBGCC2_WORDS_BIG_ENDIAN 1\n \n #define BITS_PER_UNIT 8\n #define BITS_PER_WORD 32"}, {"sha": "a645518cbc1a489c2cab5e16ad22e2654fe1363f", "filename": "gcc/config/m32r/m32r.h", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18ed6ee4bf95a6d02ff34e0dfa279e8c9a1179a8/gcc%2Fconfig%2Fm32r%2Fm32r.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18ed6ee4bf95a6d02ff34e0dfa279e8c9a1179a8/gcc%2Fconfig%2Fm32r%2Fm32r.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32r%2Fm32r.h?ref=18ed6ee4bf95a6d02ff34e0dfa279e8c9a1179a8", "patch": "@@ -319,12 +319,6 @@ extern enum m32r_sdata m32r_sdata;\n    numbered.  */\n #define WORDS_BIG_ENDIAN (TARGET_LITTLE_ENDIAN == 0)\n \n-/* Define this macro if WORDS_BIG_ENDIAN is not constant.  This must\n-   be a constant value with the same meaning as WORDS_BIG_ENDIAN,\n-   which will be used only when compiling libgcc2.c.  Typically the\n-   value will be set based on preprocessor defines.  */\n-/*#define LIBGCC2_WORDS_BIG_ENDIAN 1*/\n-\n /* Width of a word, in units (bytes).  */\n #define UNITS_PER_WORD 4\n "}, {"sha": "8efe64f2bf0df8ebd7b9597865f10f44bc2fc85c", "filename": "gcc/config/mcore/mcore.h", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18ed6ee4bf95a6d02ff34e0dfa279e8c9a1179a8/gcc%2Fconfig%2Fmcore%2Fmcore.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18ed6ee4bf95a6d02ff34e0dfa279e8c9a1179a8/gcc%2Fconfig%2Fmcore%2Fmcore.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmcore%2Fmcore.h?ref=18ed6ee4bf95a6d02ff34e0dfa279e8c9a1179a8", "patch": "@@ -106,12 +106,6 @@ extern char * mcore_current_function_name;\n    numbered.  */\n #define WORDS_BIG_ENDIAN (! TARGET_LITTLE_END)\n \n-#define LIBGCC2_WORDS_BIG_ENDIAN 1\n-#ifdef __MCORELE__\n-#undef  LIBGCC2_WORDS_BIG_ENDIAN\n-#define LIBGCC2_WORDS_BIG_ENDIAN 0\n-#endif\n-\n #define MAX_BITS_PER_WORD 32\n \n /* Width of a word, in units (bytes).  */"}, {"sha": "fa00098d7c40aa9f7b6fed8c98ac3fcce87f8541", "filename": "gcc/config/mep/mep.h", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18ed6ee4bf95a6d02ff34e0dfa279e8c9a1179a8/gcc%2Fconfig%2Fmep%2Fmep.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18ed6ee4bf95a6d02ff34e0dfa279e8c9a1179a8/gcc%2Fconfig%2Fmep%2Fmep.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmep%2Fmep.h?ref=18ed6ee4bf95a6d02ff34e0dfa279e8c9a1179a8", "patch": "@@ -165,12 +165,6 @@ crtbegin.o%s\"\n #define BYTES_BIG_ENDIAN (TARGET_LITTLE_ENDIAN ? 0 : 1)\n #define WORDS_BIG_ENDIAN (TARGET_LITTLE_ENDIAN ? 0 : 1)\n \n-#ifdef __LITTLE_ENDIAN__\n-#define LIBGCC2_WORDS_BIG_ENDIAN 0\n-#else\n-#define LIBGCC2_WORDS_BIG_ENDIAN 1\n-#endif\n-\n #define UNITS_PER_WORD 4\n \n #define PROMOTE_MODE(MODE, UNSIGNEDP, TYPE)\t\\"}, {"sha": "d6d909b775619e322ac6b2ac09bd4ac8ebe4a15d", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18ed6ee4bf95a6d02ff34e0dfa279e8c9a1179a8/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18ed6ee4bf95a6d02ff34e0dfa279e8c9a1179a8/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=18ed6ee4bf95a6d02ff34e0dfa279e8c9a1179a8", "patch": "@@ -1287,14 +1287,6 @@ enum mips_code_readable_setting {\n #define BYTES_BIG_ENDIAN (TARGET_BIG_ENDIAN != 0)\n #define WORDS_BIG_ENDIAN (TARGET_BIG_ENDIAN != 0)\n \n-/* Define this to set the endianness to use in libgcc2.c, which can\n-   not depend on target_flags.  */\n-#if !defined(MIPSEL) && !defined(__MIPSEL__)\n-#define LIBGCC2_WORDS_BIG_ENDIAN 1\n-#else\n-#define LIBGCC2_WORDS_BIG_ENDIAN 0\n-#endif\n-\n #define MAX_BITS_PER_WORD 64\n \n /* Width of a word, in units (bytes).  */"}, {"sha": "6d88e324e889bb6847852a8518fdfc37ccd6505b", "filename": "gcc/config/rs6000/sysv4.h", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18ed6ee4bf95a6d02ff34e0dfa279e8c9a1179a8/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18ed6ee4bf95a6d02ff34e0dfa279e8c9a1179a8/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fsysv4.h?ref=18ed6ee4bf95a6d02ff34e0dfa279e8c9a1179a8", "patch": "@@ -258,14 +258,6 @@ do {\t\t\t\t\t\t\t\t\t\\\n #define\tBYTES_BIG_ENDIAN (TARGET_BIG_ENDIAN)\n #define\tWORDS_BIG_ENDIAN (TARGET_BIG_ENDIAN)\n \n-/* Define this to set the endianness to use in libgcc2.c, which can\n-   not depend on target_flags.  */\n-#if !defined(__LITTLE_ENDIAN__) && !defined(__sun__)\n-#define LIBGCC2_WORDS_BIG_ENDIAN 1\n-#else\n-#define LIBGCC2_WORDS_BIG_ENDIAN 0\n-#endif\n-\n /* Define cutoff for using external functions to save floating point.\n    When optimizing for size, use external functions when profitable.  */\n #define FP_SAVE_INLINE(FIRST_REG) (optimize_size\t\t\t\\"}, {"sha": "f320beb260ac87f37c07863d8c086e12ed3d55f6", "filename": "gcc/config/rx/rx.h", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18ed6ee4bf95a6d02ff34e0dfa279e8c9a1179a8/gcc%2Fconfig%2Frx%2Frx.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18ed6ee4bf95a6d02ff34e0dfa279e8c9a1179a8/gcc%2Fconfig%2Frx%2Frx.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frx%2Frx.h?ref=18ed6ee4bf95a6d02ff34e0dfa279e8c9a1179a8", "patch": "@@ -96,12 +96,6 @@ extern enum rx_cpu_types  rx_cpu_type;\n #define BYTES_BIG_ENDIAN \t\tTARGET_BIG_ENDIAN_DATA\n #define WORDS_BIG_ENDIAN \t\tTARGET_BIG_ENDIAN_DATA\n \n-#ifdef __RX_BIG_ENDIAN__\n-#define LIBGCC2_WORDS_BIG_ENDIAN\t1\n-#else\n-#define LIBGCC2_WORDS_BIG_ENDIAN\t0\n-#endif\n-\n #define UNITS_PER_WORD \t\t\t4\n \n #define INT_TYPE_SIZE\t\t\t32"}, {"sha": "98f6d7dbe0336b288b54f585ab92f3371a25b3f3", "filename": "gcc/config/score/score.h", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18ed6ee4bf95a6d02ff34e0dfa279e8c9a1179a8/gcc%2Fconfig%2Fscore%2Fscore.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18ed6ee4bf95a6d02ff34e0dfa279e8c9a1179a8/gcc%2Fconfig%2Fscore%2Fscore.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fscore%2Fscore.h?ref=18ed6ee4bf95a6d02ff34e0dfa279e8c9a1179a8", "patch": "@@ -103,14 +103,6 @@\n #define BYTES_BIG_ENDIAN       (TARGET_LITTLE_ENDIAN == 0)\n #define WORDS_BIG_ENDIAN       (TARGET_LITTLE_ENDIAN == 0)\n \n-/* Define this to set the endianness to use in libgcc2.c, which can\n-   not depend on target_flags.  */\n-#if defined(__scorele__)\n-#define LIBGCC2_WORDS_BIG_ENDIAN       0\n-#else\n-#define LIBGCC2_WORDS_BIG_ENDIAN       1\n-#endif\n-\n /* Width of a word, in units (bytes).  */\n #define UNITS_PER_WORD                 4\n "}, {"sha": "0dfdd3a7b50466aaed4db218f729f406570cb943", "filename": "gcc/config/sh/sh.h", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18ed6ee4bf95a6d02ff34e0dfa279e8c9a1179a8/gcc%2Fconfig%2Fsh%2Fsh.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18ed6ee4bf95a6d02ff34e0dfa279e8c9a1179a8/gcc%2Fconfig%2Fsh%2Fsh.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.h?ref=18ed6ee4bf95a6d02ff34e0dfa279e8c9a1179a8", "patch": "@@ -516,14 +516,6 @@ extern enum sh_divide_strategy_e sh_div_strategy;\n    numbered.  */\n #define WORDS_BIG_ENDIAN (TARGET_LITTLE_ENDIAN == 0)\n \n-/* Define this to set the endianness to use in libgcc2.c, which can\n-   not depend on target_flags.  */\n-#if defined(__LITTLE_ENDIAN__)\n-#define LIBGCC2_WORDS_BIG_ENDIAN 0\n-#else\n-#define LIBGCC2_WORDS_BIG_ENDIAN 1\n-#endif\n-\n #define MAX_BITS_PER_WORD 64\n \n /* Width in bits of an `int'.  We want just 32-bits, even if words are"}, {"sha": "3df147218a15e789c9b6ab2a5ff104f4ca35bc5a", "filename": "gcc/config/sparc/sparc.h", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18ed6ee4bf95a6d02ff34e0dfa279e8c9a1179a8/gcc%2Fconfig%2Fsparc%2Fsparc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18ed6ee4bf95a6d02ff34e0dfa279e8c9a1179a8/gcc%2Fconfig%2Fsparc%2Fsparc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.h?ref=18ed6ee4bf95a6d02ff34e0dfa279e8c9a1179a8", "patch": "@@ -582,14 +582,6 @@ extern struct sparc_cpu_select sparc_select[];\n    numbered.  */\n #define WORDS_BIG_ENDIAN 1\n \n-/* Define this to set the endianness to use in libgcc2.c, which can\n-   not depend on target_flags.  */\n-#if defined (__LITTLE_ENDIAN__) || defined(__LITTLE_ENDIAN_DATA__)\n-#define LIBGCC2_WORDS_BIG_ENDIAN 0\n-#else\n-#define LIBGCC2_WORDS_BIG_ENDIAN 1\n-#endif\n-\n #define MAX_BITS_PER_WORD\t64\n \n /* Width of a word, in units (bytes).  */"}, {"sha": "ee528efbac39a5d7771da79dc3fe04e4b3518b69", "filename": "gcc/config/xtensa/xtensa.h", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18ed6ee4bf95a6d02ff34e0dfa279e8c9a1179a8/gcc%2Fconfig%2Fxtensa%2Fxtensa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18ed6ee4bf95a6d02ff34e0dfa279e8c9a1179a8/gcc%2Fconfig%2Fxtensa%2Fxtensa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Fxtensa.h?ref=18ed6ee4bf95a6d02ff34e0dfa279e8c9a1179a8", "patch": "@@ -94,13 +94,6 @@ extern unsigned xtensa_current_frame_size;\n #define EXTRA_SPECS\t\t\t\t\t\t\t\\\n   { \"subtarget_cpp_spec\", SUBTARGET_CPP_SPEC },\n \n-#ifdef __XTENSA_EB__\n-#define LIBGCC2_WORDS_BIG_ENDIAN 1\n-#else\n-#define LIBGCC2_WORDS_BIG_ENDIAN 0\n-#endif\n-\n-\n /* Target machine storage layout */\n \n /* Define this if most significant bit is lowest numbered"}, {"sha": "7ac4071c322e9d7f9fb7c3527d4233cc624b4ce8", "filename": "gcc/cppbuiltin.c", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18ed6ee4bf95a6d02ff34e0dfa279e8c9a1179a8/gcc%2Fcppbuiltin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18ed6ee4bf95a6d02ff34e0dfa279e8c9a1179a8/gcc%2Fcppbuiltin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcppbuiltin.c?ref=18ed6ee4bf95a6d02ff34e0dfa279e8c9a1179a8", "patch": "@@ -138,6 +138,24 @@ define_builtin_macros_for_type_sizes (cpp_reader *pfile)\n   cpp_define_formatted (pfile, \"__BIGGEST_ALIGNMENT__=%d\",\n \t\t\tBIGGEST_ALIGNMENT / BITS_PER_UNIT);\n \n+  /* Define constants useful for implementing endian.h.  */\n+  cpp_define (pfile, \"__ORDER_LITTLE_ENDIAN__=1234\");\n+  cpp_define (pfile, \"__ORDER_BIG_ENDIAN__=4321\");\n+  cpp_define (pfile, \"__ORDER_PDP_ENDIAN__=3412\");\n+\n+  if (WORDS_BIG_ENDIAN == BYTES_BIG_ENDIAN)\n+    cpp_define_formatted (pfile, \"__BYTE_ORDER__=%s\",\n+\t\t\t  (WORDS_BIG_ENDIAN\n+\t\t\t   ? \"__ORDER_BIG_ENDIAN__\"\n+\t\t\t   : \"__ORDER_LITTLE_ENDIAN__\"));\n+  else\n+    {\n+      /* Assert that we're only dealing with the PDP11 case.  */\n+      gcc_assert (!BYTES_BIG_ENDIAN && WORDS_BIG_ENDIAN);\n+\n+      cpp_define (pfile, \"__BYTE_ORDER__=__ORDER_PDP_ENDIAN__\");\n+    }\n+\n   /* ptr_type_node can't be used here since ptr_mode is only set when\n      toplev calls backend_init which is not done with -E switch.  */\n   cpp_define_formatted (pfile, \"__SIZEOF_POINTER__=%d\","}, {"sha": "ddcf81467f6784a88bd9674fc8c46e883c2bd6cc", "filename": "gcc/doc/cpp.texi", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18ed6ee4bf95a6d02ff34e0dfa279e8c9a1179a8/gcc%2Fdoc%2Fcpp.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18ed6ee4bf95a6d02ff34e0dfa279e8c9a1179a8/gcc%2Fdoc%2Fcpp.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fcpp.texi?ref=18ed6ee4bf95a6d02ff34e0dfa279e8c9a1179a8", "patch": "@@ -2265,6 +2265,30 @@ Defined to the number of bytes of the C standard data types: @code{int},\n @code{double}, @code{long double}, @code{size_t}, @code{wchar_t}, @code{wint_t}\n and @code{ptrdiff_t}.\n \n+@item __BYTE_ORDER__\n+@itemx __ORDER_LITTLE_ENDIAN__\n+@itemx __ORDER_BIG_ENDIAN__\n+@itemx __ORDER_PDP_ENDIAN__\n+@code{__BYTE_ORDER__} is defined to one of the values\n+@code{__ORDER_LITTLE_ENDIAN__}, @code{__ORDER_BIG_ENDIAN__}, or\n+@code{__ORDER_PDP_ENDIAN__} to reflect the layout of multi-byte and\n+multi-word quantities in memory.  If @code{__BYTE_ORDER__} is equal to\n+@code{__ORDER_LITTLE_ENDIAN__} or @code{__ORDER_BIG_ENDIAN__}, then\n+multi-byte and multi-word quantities are laid out identically: the\n+byte (word) at the lowest address is the least significant or most\n+significant byte (word) of the quantity, respectively.  If\n+@code{__BYTE_ORDER__} is equal to @code{__ORDER_PDP_ENDIAN__}, then\n+bytes in 16-bit words are laid out in a little-endian fashion, whereas\n+the 16-bit subwords of a 32-bit quantity are laid out in big-endian\n+fashion.\n+\n+You should use these macros for testing like this:\n+\n+@smallexample\n+/* @r{Test for a little-endian machine} */\n+#if __BYTE_ORDER__ == __ORDER_LITTLE_ENDIAN__\n+@end smallexample\n+\n @item __DEPRECATED\n This macro is defined, with value 1, when compiling a C++ source file\n with warnings about deprecated constructs enabled.  These warnings are"}, {"sha": "66a092fbc1a5f21cb0c6a4b8ffc58df615eeb5a9", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18ed6ee4bf95a6d02ff34e0dfa279e8c9a1179a8/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18ed6ee4bf95a6d02ff34e0dfa279e8c9a1179a8/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=18ed6ee4bf95a6d02ff34e0dfa279e8c9a1179a8", "patch": "@@ -918,13 +918,6 @@ order of words in memory is the same as the order in registers.  This\n macro need not be a constant.\n @end defmac\n \n-@defmac LIBGCC2_WORDS_BIG_ENDIAN\n-Define this macro if @code{WORDS_BIG_ENDIAN} is not constant.  This must be a\n-constant value with the same meaning as @code{WORDS_BIG_ENDIAN}, which will be\n-used only when compiling @file{libgcc2.c}.  Typically the value will be set\n-based on preprocessor defines.\n-@end defmac\n-\n @defmac FLOAT_WORDS_BIG_ENDIAN\n Define this macro to have the value 1 if @code{DFmode}, @code{XFmode} or\n @code{TFmode} floating point numbers are stored in memory with the word"}, {"sha": "a5fb0007920ebee915828d196cc8096719a96a18", "filename": "gcc/doc/tm.texi.in", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18ed6ee4bf95a6d02ff34e0dfa279e8c9a1179a8/gcc%2Fdoc%2Ftm.texi.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18ed6ee4bf95a6d02ff34e0dfa279e8c9a1179a8/gcc%2Fdoc%2Ftm.texi.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi.in?ref=18ed6ee4bf95a6d02ff34e0dfa279e8c9a1179a8", "patch": "@@ -912,13 +912,6 @@ order of words in memory is the same as the order in registers.  This\n macro need not be a constant.\n @end defmac\n \n-@defmac LIBGCC2_WORDS_BIG_ENDIAN\n-Define this macro if @code{WORDS_BIG_ENDIAN} is not constant.  This must be a\n-constant value with the same meaning as @code{WORDS_BIG_ENDIAN}, which will be\n-used only when compiling @file{libgcc2.c}.  Typically the value will be set\n-based on preprocessor defines.\n-@end defmac\n-\n @defmac FLOAT_WORDS_BIG_ENDIAN\n Define this macro to have the value 1 if @code{DFmode}, @code{XFmode} or\n @code{TFmode} floating point numbers are stored in memory with the word"}, {"sha": "8b131a35e547debb22a3c52fe79269ab810e079d", "filename": "gcc/libgcc2.h", "status": "modified", "additions": 2, "deletions": 10, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18ed6ee4bf95a6d02ff34e0dfa279e8c9a1179a8/gcc%2Flibgcc2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18ed6ee4bf95a6d02ff34e0dfa279e8c9a1179a8/gcc%2Flibgcc2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flibgcc2.h?ref=18ed6ee4bf95a6d02ff34e0dfa279e8c9a1179a8", "patch": "@@ -35,14 +35,6 @@ extern void __clear_cache (char *, char *);\n extern void __eprintf (const char *, const char *, unsigned int, const char *)\n   __attribute__ ((__noreturn__));\n \n-/* Permit the tm.h file to select the endianness to use just for this\n-   file.  This is used when the endianness is determined when the\n-   compiler is run.  */\n-\n-#ifndef LIBGCC2_WORDS_BIG_ENDIAN\n-#define LIBGCC2_WORDS_BIG_ENDIAN WORDS_BIG_ENDIAN\n-#endif\n-\n #ifndef LIBGCC2_LONG_DOUBLE_TYPE_SIZE\n #define LIBGCC2_LONG_DOUBLE_TYPE_SIZE LONG_DOUBLE_TYPE_SIZE\n #endif\n@@ -407,9 +399,9 @@ extern TCtype __multc3 (TFtype, TFtype, TFtype, TFtype);\n #define int bogus_type\n \n /* DWstructs are pairs of Wtype values in the order determined by\n-   LIBGCC2_WORDS_BIG_ENDIAN.  */\n+   __BYTE_ORDER__.  */\n \n-#if LIBGCC2_WORDS_BIG_ENDIAN\n+#if __BYTE_ORDER__ != __ORDER_LITTLE_ENDIAN__\n   struct DWstruct {Wtype high, low;};\n #else\n   struct DWstruct {Wtype low, high;};"}, {"sha": "ef0c4628b437d830800ce3906c20d2b6972fd33c", "filename": "gcc/system.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18ed6ee4bf95a6d02ff34e0dfa279e8c9a1179a8/gcc%2Fsystem.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18ed6ee4bf95a6d02ff34e0dfa279e8c9a1179a8/gcc%2Fsystem.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsystem.h?ref=18ed6ee4bf95a6d02ff34e0dfa279e8c9a1179a8", "patch": "@@ -790,7 +790,7 @@ extern void fancy_abort (const char *, int, const char *) ATTRIBUTE_NORETURN;\n \tTARGET_HANDLE_OFAST TARGET_OPTION_OPTIMIZATION\n \n /* Hooks into libgcc2.  */\n- #pragma GCC poison LIBGCC2_DOUBLE_TYPE_SIZE\n+ #pragma GCC poison LIBGCC2_DOUBLE_TYPE_SIZE LIBGCC2_WORDS_BIG_ENDIAN\n \n /* Miscellaneous macros that are no longer used.  */\n  #pragma GCC poison USE_MAPPED_LOCATION"}, {"sha": "d2d6d5947ec881a60263f9042450314828ab70b6", "filename": "libdecnumber/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18ed6ee4bf95a6d02ff34e0dfa279e8c9a1179a8/libdecnumber%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18ed6ee4bf95a6d02ff34e0dfa279e8c9a1179a8/libdecnumber%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libdecnumber%2FChangeLog?ref=18ed6ee4bf95a6d02ff34e0dfa279e8c9a1179a8", "patch": "@@ -1,3 +1,8 @@\n+2010-10-23  Nathan Froyd  <froydnj@codesourcery.com>\n+\n+\t* dconfig.h (LIBGCC2_WORDS_BIG_ENDIAN): Delete.\n+\t(LIBGCC2_FLOAT_WORDS_BIG_ENDIAN): Test __BYTE_ORDER__.\n+\n 2010-09-10  Kai Tietz  <kai.tietz@onevision.com>\n \n        * configure: Regenerated."}, {"sha": "26b963c9480f526d2842806599837bf0d74cf042", "filename": "libdecnumber/dconfig.h", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18ed6ee4bf95a6d02ff34e0dfa279e8c9a1179a8/libdecnumber%2Fdconfig.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18ed6ee4bf95a6d02ff34e0dfa279e8c9a1179a8/libdecnumber%2Fdconfig.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libdecnumber%2Fdconfig.h?ref=18ed6ee4bf95a6d02ff34e0dfa279e8c9a1179a8", "patch": "@@ -28,12 +28,9 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #include \"coretypes.h\"\n #include \"tm.h\"\n \n-#ifndef LIBGCC2_WORDS_BIG_ENDIAN\n-#define LIBGCC2_WORDS_BIG_ENDIAN WORDS_BIG_ENDIAN\n-#endif\n-\n #ifndef LIBGCC2_FLOAT_WORDS_BIG_ENDIAN\n-#define LIBGCC2_FLOAT_WORDS_BIG_ENDIAN LIBGCC2_WORDS_BIG_ENDIAN\n+#define LIBGCC2_FLOAT_WORDS_BIG_ENDIAN \\\n+  (__BYTE_ORDER__ != __ORDER_LITTLE_ENDIAN__)\n #endif\n \n #if LIBGCC2_FLOAT_WORDS_BIG_ENDIAN"}, {"sha": "ea864d33dcb2ac46e7ddd9583099427a160271d7", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18ed6ee4bf95a6d02ff34e0dfa279e8c9a1179a8/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18ed6ee4bf95a6d02ff34e0dfa279e8c9a1179a8/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=18ed6ee4bf95a6d02ff34e0dfa279e8c9a1179a8", "patch": "@@ -1,3 +1,9 @@\n+2010-10-23  Nathan Froyd  <froydnj@codesourcery.com>\n+\n+\t* config/libbid/bid_gcc_intrinsics.h (LIBGCC2_WORDS_BIG_ENDIAN):\n+\tDelete.\n+\t(LIBGCC2_FLOAT_WORDS_BIG_ENDIAN): Test __BYTE_ORDER__.\n+\n 2010-10-14  Nathan Froyd  <froydnj@codesourcery.com>\n \n \t* config/arm/bpabi.h: New file."}, {"sha": "f536e3b1bd4c2556f84a37912ad89d9d885685c1", "filename": "libgcc/config/libbid/bid_gcc_intrinsics.h", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18ed6ee4bf95a6d02ff34e0dfa279e8c9a1179a8/libgcc%2Fconfig%2Flibbid%2Fbid_gcc_intrinsics.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18ed6ee4bf95a6d02ff34e0dfa279e8c9a1179a8/libgcc%2Fconfig%2Flibbid%2Fbid_gcc_intrinsics.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Flibbid%2Fbid_gcc_intrinsics.h?ref=18ed6ee4bf95a6d02ff34e0dfa279e8c9a1179a8", "patch": "@@ -30,12 +30,9 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #include \"coretypes.h\"\n #include \"tm.h\"\n \n-#ifndef LIBGCC2_WORDS_BIG_ENDIAN\n-#define LIBGCC2_WORDS_BIG_ENDIAN WORDS_BIG_ENDIAN\n-#endif\n-\n #ifndef LIBGCC2_FLOAT_WORDS_BIG_ENDIAN\n-#define LIBGCC2_FLOAT_WORDS_BIG_ENDIAN LIBGCC2_WORDS_BIG_ENDIAN\n+#define LIBGCC2_FLOAT_WORDS_BIG_ENDIAN \\\n+  (__BYTE_ORDER__ != __ORDER_LITTLE_ENDIAN__)\n #endif\n \n #ifndef LIBGCC2_LONG_DOUBLE_TYPE_SIZE"}]}