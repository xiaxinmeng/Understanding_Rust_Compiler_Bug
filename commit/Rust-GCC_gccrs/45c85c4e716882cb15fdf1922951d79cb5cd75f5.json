{"sha": "45c85c4e716882cb15fdf1922951d79cb5cd75f5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDVjODVjNGU3MTY4ODJjYjE1ZmRmMTkyMjk1MWQ3OWNiNWNkNzVmNQ==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "1998-12-01T14:36:51Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-12-01T14:36:51Z"}, "message": "reload1.c (reload): Do not set reload_completed or split insns here.\n\n        * reload1.c (reload): Do not set reload_completed or split insns\n        here.  Instead...\n        * toplev.c (rest_of_compilation): Set reload_completed after\n        reload returns.  Split insns after reload_cse has run.\n\nFrom-SVN: r24037", "tree": {"sha": "b6298e3b4294dc7111e2de5f920efe6f9fecf447", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b6298e3b4294dc7111e2de5f920efe6f9fecf447"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/45c85c4e716882cb15fdf1922951d79cb5cd75f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45c85c4e716882cb15fdf1922951d79cb5cd75f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/45c85c4e716882cb15fdf1922951d79cb5cd75f5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45c85c4e716882cb15fdf1922951d79cb5cd75f5/comments", "author": null, "committer": null, "parents": [{"sha": "82371d41c2e0a1e8c68c43748a71bb9deec0ed1a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82371d41c2e0a1e8c68c43748a71bb9deec0ed1a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/82371d41c2e0a1e8c68c43748a71bb9deec0ed1a"}], "stats": {"total": 59, "additions": 37, "deletions": 22}, "files": [{"sha": "37abb2acba94a1a5a8f9651a5db91058efa7efc7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45c85c4e716882cb15fdf1922951d79cb5cd75f5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45c85c4e716882cb15fdf1922951d79cb5cd75f5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=45c85c4e716882cb15fdf1922951d79cb5cd75f5", "patch": "@@ -1,3 +1,10 @@\n+Tue Dec  1 15:20:44 1998  Jeffrey A Law  (law@cygnus.com)\n+\n+\t* reload1.c (reload): Do not set reload_completed or split insns\n+\there.  Instead...\n+\t* toplev.c (rest_of_compilation): Set reload_completed after\n+\treload returns.  Split insns after reload_cse has run.\n+\n Tue Dec  1 11:55:04 1998  Richard Henderson  <rth@cygnus.com>\n \n \t* final.c (final_scan_insn): Abort if block_depth falls below 0."}, {"sha": "1b94254b9a4d84aadfa8142d0d84e8248e9a7b92", "filename": "gcc/reload1.c", "status": "modified", "additions": 0, "deletions": 22, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45c85c4e716882cb15fdf1922951d79cb5cd75f5/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45c85c4e716882cb15fdf1922951d79cb5cd75f5/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=45c85c4e716882cb15fdf1922951d79cb5cd75f5", "patch": "@@ -1100,10 +1100,6 @@ reload (first, global, dumpfile)\n \t}\n     }\n \n-  /* We've finished reloading.  This reload_completed must be set before we\n-     perform instruction splitting below.  */\n-  reload_completed = 1;\n-\n   /* Make a pass over all the insns and delete all USEs which we inserted\n      only to tag a REG_EQUAL note on them.  Remove all REG_DEAD and REG_UNUSED\n      notes.  Delete all CLOBBER insns and simplify (subreg (reg)) operands.  */\n@@ -1135,24 +1131,6 @@ reload (first, global, dumpfile)\n \n \t/* And simplify (subreg (reg)) if it appears as an operand.  */\n \tcleanup_subreg_operands (insn);\n-\n-\t/* If optimizing and we are performing instruction scheduling after\n-\t   reload, then go ahead and split insns now since we are about to\n-\t   recompute flow information anyway.  */\n-\tif (optimize && flag_schedule_insns_after_reload)\n-\t  {\n-\t    rtx last;\n-\n-\t    last = try_split (PATTERN (insn), insn, 1);\n-\n-\t    if (last != insn)\n-\t      {\n-\t\tPUT_CODE (insn, NOTE);\n-\t\tNOTE_SOURCE_FILE (insn) = 0;\n-\t\tNOTE_LINE_NUMBER (insn) = NOTE_INSN_DELETED;\n-\t      }\n-\t  }\n-\t   \n       }\n \n   /* If we are doing stack checking, give a warning if this function's"}, {"sha": "e0fc108f86080b4fdcba0f00ca0903656d4ce217", "filename": "gcc/toplev.c", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45c85c4e716882cb15fdf1922951d79cb5cd75f5/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45c85c4e716882cb15fdf1922951d79cb5cd75f5/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=45c85c4e716882cb15fdf1922951d79cb5cd75f5", "patch": "@@ -3968,10 +3968,40 @@ rest_of_compilation (decl)\n   if (failure)\n     goto exit_rest_of_compilation;\n \n+  reload_completed = 1;\n+\n   /* Do a very simple CSE pass over just the hard registers.  */\n   if (optimize > 0)\n     reload_cse_regs (insns);\n \n+  /* If optimizing and we are performing instruction scheduling after\n+     reload, then go ahead and split insns now since we are about to\n+     recompute flow information anyway.\n+\n+     reload_cse_regs may expose more splitting opportunities, expecially\n+     for double-word operations.  */\n+  if (optimize > 0 && flag_schedule_insns_after_reload)\n+    {\n+      rtx insn;\n+\n+      for (insn = insns; insn; insn = NEXT_INSN (insn))\n+\t{\n+\t  rtx last;\n+\n+\t  if (GET_RTX_CLASS (GET_CODE (insn)) != 'i')\n+\t    continue;\n+\n+\t  last = try_split (PATTERN (insn), insn, 1);\n+\n+\t  if (last != insn)\n+\t    {\n+\t      PUT_CODE (insn, NOTE);\n+\t      NOTE_SOURCE_FILE (insn) = 0;\n+\t      NOTE_LINE_NUMBER (insn) = NOTE_INSN_DELETED;\n+\t    }\n+\t}\n+    }\n+\n   /* Re-create the death notes which were deleted during reload.  */\n   if (optimize)\n     TIMEVAR"}]}