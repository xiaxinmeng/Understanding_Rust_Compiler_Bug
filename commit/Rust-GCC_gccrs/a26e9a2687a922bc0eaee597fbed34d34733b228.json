{"sha": "a26e9a2687a922bc0eaee597fbed34d34733b228", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTI2ZTlhMjY4N2E5MjJiYzBlYWVlNTk3ZmJlZDM0ZDM0NzMzYjIyOA==", "commit": {"author": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2004-11-25T00:40:19Z"}, "committer": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2004-11-25T00:40:19Z"}, "message": "* ChangeLog: Remove duplication.\n\nFrom-SVN: r91265", "tree": {"sha": "8a8081ea3dd902ad258d72864be8267f2e0a57e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8a8081ea3dd902ad258d72864be8267f2e0a57e4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a26e9a2687a922bc0eaee597fbed34d34733b228", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a26e9a2687a922bc0eaee597fbed34d34733b228", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a26e9a2687a922bc0eaee597fbed34d34733b228", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a26e9a2687a922bc0eaee597fbed34d34733b228/comments", "author": null, "committer": null, "parents": [{"sha": "92faa2d1fef152dfca405d3a0268d65298d8c22d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92faa2d1fef152dfca405d3a0268d65298d8c22d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/92faa2d1fef152dfca405d3a0268d65298d8c22d"}], "stats": {"total": 1908, "additions": 0, "deletions": 1908}, "files": [{"sha": "550763066ecef1e010538579fbe7460c7ac5984e", "filename": "libffi/ChangeLog", "status": "modified", "additions": 0, "deletions": 1908, "changes": 1908, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a26e9a2687a922bc0eaee597fbed34d34733b228/libffi%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a26e9a2687a922bc0eaee597fbed34d34733b228/libffi%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2FChangeLog?ref=a26e9a2687a922bc0eaee597fbed34d34733b228", "patch": "@@ -1914,1911 +1914,3 @@ Thu Jul  8 14:28:42 1999  Anthony Green  <green@cygnus.com>\n \t* src/x86/ChangeLog: Removed.\n \n \t* ChangeLog.v1: Created.\n-2004-11-23  Richard Sandiford  <rsandifo@redhat.com>\n-\n-\t* src/mips/o32.S (ffi_call_O32, ffi_closure_O32): Use jalr instead\n-\tof jal.  Use an absolute encoding for the frame information.\n-\n-2004-11-23  Kelley Cook  <kcook@gcc.gnu.org>\n-\n-\t* Makefile.am: Remove no-dependencies.  Add ACLOCAL_AMFLAGS.\n-\t* acinclude.m4: Delete logic for sincludes.\n-\t* aclocal.m4, Makefile.in, configure: Regenerate.\n-\t* include/Makefile: Likewise.\n-\t* testsuite/Makefile: Likewise.\n-\n-2004-11-22  Eric Botcazou  <ebotcazou@libertysurf.fr>\n-\n-\t* src/sparc/ffi.c (ffi_prep_closure): Align doubles and 64-bit integers\n-\ton a 8-byte boundary.\n-\t* src/sparc/v8.S (ffi_closure_v8): Reserve frame space for arguments.\n-\n-2004-10-27  Richard Earnshaw  <rearnsha@arm.com>\n-\n-\t* src/arm/ffi.c (ffi_prep_cif_machdep): Handle functions that return\n-\tlong long values.  Round stack allocation to a multiple of 8 bytes\n-\tfor ATPCS compatibility.\n-\t* src/arm/sysv.S (ffi_call_SYSV): Rework to avoid use of APCS register\n-\tnames.  Handle returning long long types.  Add Thumb and interworking\n-\tsupport.  Improve soft-float code.\n-\n-2004-10-27  Richard Earnshaw  <rearnsha@arm.com>\n-\n-\t* testsuite/lib/libffi-db.exp (load_gcc_lib): New function.\n-\t(libffi_exit): New function.\n-\t(libffi_init): Build the testglue wrapper if needed.\n-\n-2004-10-25  Eric Botcazou  <ebotcazou@libertysurf.fr>\n-\n-\tPR other/18138\n-\t* testsuite/lib/libffi-dg.exp: Accept more than one multilib libgcc.\n-\n-2004-10-25  Kazuhiro Inaoka <inaoka.kazuhiro@renesas.com>\n-\n-\t* src/m32r/libffitarget.h (FFI_CLOSURES): Set to 0.\n-\n-2004-10-20  Kaz Kojima  <kkojima@gcc.gnu.org>\n-\n-\t* src/sh/sysv.S (ffi_call_SYSV): Don't align for double data.\n-\t* testsuite/libffi.call/float3.c: New test case.\n-\n-2004-10-18  Kaz Kojima  <kkojima@gcc.gnu.org>\n-\n-\t* src/sh/ffi.c (ffi_prep_closure): Set T bit in trampoline for\n-\tthe function returning a structure pointed with R2.\n-\t* src/sh/sysv.S (ffi_closure_SYSV): Use R2 as the pointer to\n-\tthe structure return value if T bit set.  Emit position\n-\tindependent code and EH data if PIC.\n-\n-2004-10-13  Kazuhiro Inaoka  <inaoka.kazuhiro@renesas.com>\n-\n-\t* Makefile.am: Add m32r support.\n-\t* configure.ac: Likewise.\n-\t* Makefile.in: Regenerate.\n-\t* confiugre: Regenerate.\n-\t* src/types.c: Add m32r port to FFI_INTERNAL_TYPEDEF\n-\t(uint64, sint64, double, longdouble)\n-\t* src/m32r: New directory.\n-\t* src/m32r/ffi.c: New file.\n-\t* src/m32r/sysv.S: Likewise.\n-\t* src/m32r/ffitarget.h: Likewise.\n-\n-2004-10-02  Kaz Kojima  <kkojima@gcc.gnu.org>\n-\n-\t* testsuite/libffi.call/negint.c: New test case.\n-\n-2004-09-14  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\tPR libgcj/17465\n-\t* testsuite/lib/libffi-dg.exp: Don't use global ld_library_path.\n-\tSet up LD_LIBRARY_PATH, SHLIB_PATH, LD_LIBRARYN32_PATH,\n-\tLD_LIBRARY64_PATH, LD_LIBRARY_PATH_32, LD_LIBRARY_PATH_64 and\n-\tDYLD_LIBRARY_PATH.\n-\n-2004-09-05  Andreas Tobler  <a.tobler@schweiz.ch>\n-\n-\t* testsuite/libffi.call/many_win32.c: Remove whitespaces.\n-\t* testsuite/libffi.call/promotion.c: Likewise.\n-\t* testsuite/libffi.call/return_ll.c: Remove unused var. Cleanup\n-\twhitespaces.\n-\t* testsuite/libffi.call/return_sc.c: Likewise.\n-\t* testsuite/libffi.call/return_uc.c: Likewise.\n-\n-2004-09-05  Andreas Tobler  <a.tobler@schweiz.ch>\n-\n-\t* src/powerpc/darwin.S: Fix comments and identation.\n-\t* src/powerpc/darwin_closure.S: Likewise.\n-\n-2004-09-02  Andreas Tobler  <a.tobler@schweiz.ch>\n-\n-\t* src/powerpc/ffi_darwin.c: Add flag for longdouble return values.\n-\t(ffi_prep_args): Handle longdouble arguments.\n-\t(ffi_prep_cif_machdep): Set flags for longdouble. Calculate space for\n-\tlongdouble.\n-\t(ffi_closure_helper_DARWIN): Add closure handling for longdouble.\n-\t* src/powerpc/darwin.S (_ffi_call_DARWIN): Add handling of longdouble\n-\tvalues.\n-\t* src/powerpc/darwin_closure.S (_ffi_closure_ASM): Likewise.\n-\t* src/types.c: Defined longdouble size and alignment for darwin.\n-\n-2004-09-02  Andreas Tobler  <a.tobler@schweiz.ch>\n-\n-\t* src/powerpc/aix.S: Remove whitespaces.\n-\t* src/powerpc/aix_closure.S: Likewise.\n-\t* src/powerpc/asm.h: Likewise.\n-\t* src/powerpc/ffi.c: Likewise.\n-\t* src/powerpc/ffitarget.h: Likewise.\n-\t* src/powerpc/linux64.S: Likewise.\n-\t* src/powerpc/linux64_closure.S: Likewise.\n-\t* src/powerpc/ppc_closure.S: Likewise.\n-\t* src/powerpc/sysv.S: Likewise.\n-\n-2004-08-30  Anthony Green  <green@redhat.com>\n-\n-\t* Makefile.am: Add frv support.\n-\t* Makefile.in, testsuite/Makefile.in: Rebuilt.\n-\t* configure.ac: Read configure.host.\n-\t* configure.in: Read configure.host.\n-\t* configure.host: New file.  frv-elf needs libgloss.\n-\t* include/ffi.h.in: Force ffi_closure to have a nice big (8)\n-\talignment.  This is needed to frv and shouldn't harm the others.\n-\t* include/ffi_common.h (ALIGN_DOWN): New macro.\n-\t* src/frv/ffi.c, src/frv/ffitarget.h, src/frv/eabi.S: New files.\n-\n-2004-08-24  David Daney  <daney@avtrex.com>\n-\n-\t* testsuite/libffi.call/closure_fn0.c: Xfail mips64* instead of mips*.\n-\t* testsuite/libffi.call/closure_fn1.c: Likewise.\n-\t* testsuite/libffi.call/closure_fn2.c  Likewise.\n-\t* testsuite/libffi.call/closure_fn3.c: Likewise.\n-\t* testsuite/libffi.call/closure_fn4.c: Likewise.\n-\t* testsuite/libffi.call/closure_fn5.c: Likewise.\n-\t* testsuite/libffi.call/cls_18byte.c: Likewise.\n-\t* testsuite/libffi.call/cls_19byte.c: Likewise.\n-\t* testsuite/libffi.call/cls_1_1byte.c: Likewise.\n-\t* testsuite/libffi.call/cls_20byte.c: Likewise.\n-\t* testsuite/libffi.call/cls_20byte1.c: Likewise.\n-\t* testsuite/libffi.call/cls_24byte.c: Likewise.\n-\t* testsuite/libffi.call/cls_2byte.c: Likewise.\n-\t* testsuite/libffi.call/cls_3_1byte.c: Likewise.\n-\t* testsuite/libffi.call/cls_3byte1.c: Likewise.\n-\t* testsuite/libffi.call/cls_3byte2.c: Likewise.\n-\t* testsuite/libffi.call/cls_4_1byte.c: Likewise.\n-\t* testsuite/libffi.call/cls_4byte.c: Likewise.\n-\t* testsuite/libffi.call/cls_64byte.c: Likewise.\n-\t* testsuite/libffi.call/cls_6byte.c: Likewise.\n-\t* testsuite/libffi.call/cls_7byte.c: Likewise.\n-\t* testsuite/libffi.call/cls_8byte.c: Likewise.\n-\t* testsuite/libffi.call/cls_9byte1.c: Likewise.\n-\t* testsuite/libffi.call/cls_9byte2.c: Likewise.\n-\t* testsuite/libffi.call/cls_align_double.c: Likewise.\n-\t* testsuite/libffi.call/cls_align_float.c: Likewise.\n-\t* testsuite/libffi.call/cls_align_longdouble.c: Likewise.\n-\t* testsuite/libffi.call/cls_align_pointer.c: Likewise.\n-\t* testsuite/libffi.call/cls_align_sint16.c: Likewise.\n-\t* testsuite/libffi.call/cls_align_sint32.c: Likewise.\n-\t* testsuite/libffi.call/cls_align_sint64.c: Likewise.\n-\t* testsuite/libffi.call/cls_align_uint16.c: Likewise.\n-\t* testsuite/libffi.call/cls_align_uint32.c: Likewise.\n-\t* testsuite/libffi.call/cls_align_uint64.c: Likewise.\n-\t* testsuite/libffi.call/cls_double.c: Likewise.\n-\t* testsuite/libffi.call/cls_float.c: Likewise.\n-\t* testsuite/libffi.call/cls_multi_schar.c: Likewise.\n-\t* testsuite/libffi.call/cls_multi_sshort.c: Likewise.\n-\t* testsuite/libffi.call/cls_multi_sshortchar.c: Likewise.\n-\t* testsuite/libffi.call/cls_multi_uchar.c: Likewise.\n-\t* testsuite/libffi.call/cls_multi_ushort.c: Likewise.\n-\t* testsuite/libffi.call/cls_multi_ushortchar.c: Likewise.\n-\t* testsuite/libffi.call/cls_schar.c: Likewise.\n-\t* testsuite/libffi.call/cls_sint.c: Likewise.\n-\t* testsuite/libffi.call/cls_sshort.c: Likewise.\n-\t* testsuite/libffi.call/cls_uchar.c: Likewise.\n-\t* testsuite/libffi.call/cls_uint.c: Likewise.\n-\t* testsuite/libffi.call/cls_ulonglong.c: Likewise.\n-\t* testsuite/libffi.call/cls_ushort.c: Likewise.\n-\t* testsuite/libffi.call/nested_struct.c: Likewise.\n-\t* testsuite/libffi.call/nested_struct1.c: Likewise.\n-\t* testsuite/libffi.call/nested_struct2.c: Likewise.\n-\t* testsuite/libffi.call/nested_struct3.c: Likewise.\n-\t* testsuite/libffi.call/problem1.c: Likewise.\n-\t* testsuite/libffi.special/unwindtest.cc: Likewise.\n-\t* testsuite/libffi.call/cls_12byte.c: Likewise and set return value\n-\tto zero.\n-\t* testsuite/libffi.call/cls_16byte.c: Likewise.\n-\t* testsuite/libffi.call/cls_5byte.c: Likewise.\n-\n-2004-08-23  David Daney <daney@avtrex.com>\n-\n-\tPR libgcj/13141\n-\t* src/mips/ffitarget.h (FFI_O32_SOFT_FLOAT): New ABI.\n-\t* src/mips/ffi.c (ffi_prep_args): Fix alignment calculation.\n-\t(ffi_prep_cif_machdep): Handle FFI_O32_SOFT_FLOAT floating point\n-\tparameters and return types.\n-\t(ffi_call): Handle FFI_O32_SOFT_FLOAT ABI.\n-\t(ffi_prep_closure): Ditto.\n-\t(ffi_closure_mips_inner_O32): Handle FFI_O32_SOFT_FLOAT ABI, fix\n-\talignment calculations.\n-\t* src/mips/o32.S (ffi_closure_O32): Don't use floating point\n-\tinstructions if FFI_O32_SOFT_FLOAT, make stack frame ABI compliant.\n-\n-2004-08-14  Casey Marshall <csm@gnu.org>\n-\n-\t* src/mips/ffi.c (ffi_pref_cif_machdep): set `cif->flags' to\n-\tcontain `FFI_TYPE_UINT64' as return type for any 64-bit\n-\tinteger (O32 ABI only).\n-\t(ffi_prep_closure): new function.\n-\t(ffi_closure_mips_inner_O32): new function.\n-\t* src/mips/ffitarget.h: Define `FFI_CLOSURES' and \n-\t`FFI_TRAMPOLINE_SIZE' appropriately if the ABI is o32.\n-\t* src/mips/o32.S (ffi_call_O32): add labels for .eh_frame. Return\n-\t64 bit integers correctly.\n-\t(ffi_closure_O32): new function.\n-\tAdded DWARF-2 unwind info for both functions.\n-\n-2004-08-10  Andrew Haley  <aph@redhat.com>\n-\n-\t* src/x86/ffi64.c (ffi_prep_args ): 8-align all stack arguments.\n-\n-2004-08-01  Robert Millan  <robertmh@gnu.org>\n-\n-\t* configure.ac: Detect knetbsd-gnu and kfreebsd-gnu.\n-\t* configure: Regenerate.\n-\n-2004-07-30  Maciej W. Rozycki  <macro@linux-mips.org>\n-\n-\t* acinclude.m4 (AC_FUNC_MMAP_BLACKLIST): Check for <sys/mman.h>\n-\tand mmap() explicitly instead of relying on preset autoconf cache\n-\tvariables.\n-\t* aclocal.m4: Regenerate.\n-\t* configure: Regenerate.\n-\n-2004-07-11  Ulrich Weigand  <uweigand@de.ibm.com>\n-\n-\t* src/s390/ffi.c (ffi_prep_args): Fix C aliasing violation.\n-\t(ffi_check_float_struct): Remove unused prototype.\n-\n-2004-06-30  Geoffrey Keating  <geoffk@apple.com>\n-\n-\t* src/powerpc/ffi_darwin.c (flush_icache): ';' is a comment\n-\tcharacter on Darwin, use '\\n\\t' instead.\n-\n-2004-06-26  Matthias Klose  <doko@debian.org>\n-\n-\t* libtool-version: Fix typo in revision/age.\n-\n-2004-06-17  Matthias Klose  <doko@debian.org>\n-\n-\t* libtool-version: New.\n-\t* Makefile.am (libffi_la_LDFLAGS): Use -version-info for soname.\n-\t* Makefile.in: Regenerate.\n-\n-2004-06-15  Paolo Bonzini  <bonzini@gnu.org>\n-\n-\t* Makefile.am: Remove useless multilib rules.\n-\t* Makefile.in: Regenerate.\n-\t* aclocal.m4: Regenerate with automake 1.8.5.\n-\t* configure.ac: Remove useless multilib configury.\n-\t* configure: Regenerate.\n-\n-2004-06-15  Paolo Bonzini  <bonzini@gnu.org>\n-\n-\t* .cvsignore: New file.\n-\n-2004-06-10  Jakub Jelinek  <jakub@redhat.com>\n-\n-\t* src/ia64/unix.S (ffi_call_unix): Insert group barrier break\n-\tfp_done.\n-\t(ffi_closure_UNIX): Fix f14/f15 adjustment if FLOAT_SZ is ever\n-\tchanged from 8.\n-\n-2004-06-06  Sean McNeil  <sean@mcneil.com>\n-\n-\t* configure.ac: Add x86_64-*-freebsd* support.\n-\t* configure: Regenerate.\n-\n-2004-04-26  Joe Buck <jbuck@welsh-buck.org>\n-\n-\tBug 15093\n-\t* configure.ac: Test for existence of mmap and sys/mman.h before\n-\tchecking blacklist.  Fix suggested by Jim Wilson.\n-\t* configure: Regenerate.\n-\n-2004-04-26  Matt Austern  <austern@apple.com>\n-\n-\t* src/powerpc/darwin.S: Go through a non-lazy pointer for initial\n-\tFDE location.\n-\t* src/powerpc/darwin_closure.S: Likewise.\n-\t\n-2004-04-24  Andreas Tobler  <a.tobler@schweiz.ch>\n-\n-\t* testsuite/libffi.call/cls_multi_schar.c (main): Fix initialization\n-\terror. Reported by Thomas Heller <theller@python.net>.\n-\t* testsuite/libffi.call/cls_multi_sshort.c (main): Likewise.\n-\t* testsuite/libffi.call/cls_multi_ushort.c (main): Likewise.\n-\n-2004-03-20  Matthias Klose  <doko@debian.org>\n-\n-\t* src/pa/linux.S: Fix typo.\n-\n-2004-03-19  Matthias Klose  <doko@debian.org>\n-\n-\t* Makefile.am: Update.\n-\t* Makefile.in: Regenerate.\n-\t* src/pa/ffi.h.in: Remove.\n-\t* src/pa/ffitarget.h: New file.\n-\n-2004-02-10  Randolph Chung  <tausq@debian.org>\n-\n-\t* Makefile.am: Add PA support.\n-\t* Makefile.in: Regenerate.\n-\t* include/Makefile.in: Regenerate.\n-\t* configure.ac: Add PA target.\n-\t* configure: Regenerate.\n-\t* src/pa/ffi.c: New file.\n-\t* src/pa/ffi.h.in: Add PA support.\n-\t* src/pa/linux.S: New file.\n-\t* prep_cif.c: Add PA support.\n-\n-2004-03-16  Hosaka Yuji  <hos@tamanegi.org>\n-\n-\t* src/types.c: Fix alignment size of X86_WIN32 case int64 and\n-\tdouble.\n-\t* src/x86/ffi.c (ffi_prep_args): Replace ecif->cif->rtype->type\n-\twith ecif->cif->flags.\n-\t(ffi_call, ffi_prep_incoming_args_SYSV): Replace cif->rtype->type\n-\twith cif->flags.\n-\t(ffi_prep_cif_machdep): Add X86_WIN32 struct case.\n-\t(ffi_closure_SYSV): Add 1 or 2-bytes struct case for X86_WIN32.\n-\t* src/x86/win32.S (retstruct1b, retstruct2b, sc_retstruct1b,\n-\tsc_retstruct2b): Add for 1 or 2-bytes struct case.\n-\n-2004-03-15 Kelley Cook <kcook@gcc.gnu.org>\n-\n-\t* configure.in: Rename file to ...\n-\t* configure.ac: ... this.\n-\t* fficonfig.h.in: Regenerate.\n-\t* Makefile.in: Regenerate.\n-\t* include/Makefile.in: Regenerate.\n-\t* testsuite/Makefile.in: Regenerate.\n-\n-2004-03-12  Matt Austern  <austern@apple.com>\n-\n-\t* src/powerpc/darwin.S: Fix EH information so it corresponds to\n-\tchanges in EH format resulting from addition of linkonce support.\n-\t* src/powerpc/darwin_closure.S: Likewise.\n-\n-2004-03-11  Andreas Tobler  <a.tobler@schweiz.ch>\n-\t    Paolo Bonzini  <bonzini@gnu.org>\n-\n-\t* Makefile.am (AUTOMAKE_OPTIONS): Set them.\n-\tRemove VPATH. Remove rules for object files. Remove multilib support.\n-\t(AM_CCASFLAGS): Add.\n-\t* configure.in (AC_CONFIG_HEADERS): Relace AM_CONFIG_HEADER.\n-\t(AC_PREREQ): Bump version to 2.59.\n-\t(AC_INIT): Fill with version info and bug address.\n-\t(ORIGINAL_LD_FOR_MULTILIBS): Remove.\n-\t(AM_ENABLE_MULTILIB): Use this instead of AC_ARG_ENABLE.\n-\tDe-precious CC so that the right flags are passed down to multilibs.\n-\t(AC_MSG_ERROR): Replace obsolete macro AC_ERROR.\n-\t(AC_CONFIG_FILES): Replace obsolete macro AC_LINK_FILES.\n-\t(AC_OUTPUT): Reorganize the output with AC_CONFIG_COMMANDS.\n-\t* configure: Rebuilt.\n-\t* aclocal.m4: Likewise.\n-\t* Makefile.in, include/Makefile.in, testsuite/Makefile.in: Likewise.\n-\t* fficonfig.h.in: Likewise.\n-\n-2004-03-11  Andreas Schwab  <schwab@suse.de>\n-\n-\t* src/ia64/ffi.c (ffi_prep_incoming_args_UNIX): Get floating point\n-\targuments from fp registers only for the first 8 parameter slots.\n-\tDon't convert a float parameter when passed in memory.\n-\n-2004-03-09  Hans-Peter Nilsson  <hp@axis.com>\n-\n-\t* configure: Regenerate for config/accross.m4 correction.\n-\n-2004-02-25  Matt Kraai  <kraai@alumni.cmu.edu>\n-\n-\t* src/powerpc/ffi.c (ffi_prep_args_SYSV): Change\n-\tecif->cif->bytes to bytes.\n-\t(ffi_prep_cif_machdep): Add braces around nested if statement.\n-\n-2004-02-09  Alan Modra  <amodra@bigpond.net.au>\n-\n-\t* src/types.c (pointer): POWERPC64 has 8 byte pointers.\n-\n-\t* src/powerpc/ffi.c (ffi_prep_args64): Correct long double handling.\n-\t(ffi_closure_helper_LINUX64): Fix typo.\n-\t* testsuite/libffi.call/cls_align_longdouble.c: Pass -mlong-double-128\n-\tfor powerpc64-*-*.\n-\t* testsuite/libffi.call/float.c: Likewise.\n-\t* testsuite/libffi.call/float2.c: Likewise.\n-\n-2004-02-08  Alan Modra  <amodra@bigpond.net.au>\n-\n-\t* src/powerpc/ffi.c (ffi_prep_cif_machdep <FFI_LINUX64>): Correct\n-\tlong double function return and long double arg handling.\n-\t(ffi_closure_helper_LINUX64): Formatting.  Delete unused \"ng\" var.\n-\tUse \"end_pfr\" instead of \"nf\".  Correct long double handling.\n-\tLocalise \"temp\".\n-\t* src/powerpc/linux64.S (ffi_call_LINUX64): Save f2 long double\n-\treturn value.\n-\t* src/powerpc/linux64_closure.S (ffi_closure_LINUX64): Allocate\n-\tspace for long double return value.  Adjust stack frame and offsets.\n-\tLoad f2 long double return.\n-\n-2004-02-07  Alan Modra  <amodra@bigpond.net.au>\n-\n-\t* src/types.c: Use 16 byte long double for POWERPC64.\n-\n-2004-01-25  Eric Botcazou  <ebotcazou@libertysurf.fr>\n-\n-\t* src/sparc/ffi.c (ffi_prep_args_v9): Shift the parameter array\n-\twhen the structure return address is passed in %o0.\n-\t(ffi_V9_return_struct): Rename into ffi_v9_layout_struct.\n-\t(ffi_v9_layout_struct): Align the field following a nested structure\n-\ton a word boundary.  Use memmove instead of memcpy.\n-\t(ffi_call): Update call to ffi_V9_return_struct.\n-\t(ffi_prep_closure): Define 'ctx' only for V8.\n-\t(ffi_closure_sparc_inner): Clone into ffi_closure_sparc_inner_v8\n-\tand ffi_closure_sparc_inner_v9.\n-\t(ffi_closure_sparc_inner_v8): Return long doubles by reference.\n-\tAlways skip the structure return address.  For structures and long\n-\tdoubles, copy the argument directly.\n-\t(ffi_closure_sparc_inner_v9): Skip the structure return address only\n-\tif required.  Shift the maximum floating-point slot accordingly.  For\n-\tbig structures, copy the argument directly; otherwise, left-justify the\n-\targument and call ffi_v9_layout_struct to lay out the structure on\n-\tthe stack.\n-\t* src/sparc/v8.S: Undef STACKFRAME before defining it.\n-\t(ffi_closure_v8): Pass the structure return address.  Update call to\n-\tffi_closure_sparc_inner_v8.  Short-circuit FFI_TYPE_INT handling.\n-\tSkip the 'unimp' insn when returning long doubles and structures.\n-\t* src/sparc/v9.S: Undef STACKFRAME before defining it.\n-\t(ffi_closure_v9): Increase the frame size by 2 words.  Short-circuit\n-\tFFI_TYPE_INT handling.  Load structures both in integers and\n-\tfloating-point registers on return.\n-\t* README: Update status of the SPARC port.\n-\n-2004-01-24  Andreas Tobler  <a.tobler@schweiz.ch>\n-\n-\t* testsuite/libffi.call/pyobjc-tc.c (main): Treat result value\n-\tas of type ffi_arg.\n-\t* testsuite/libffi.call/struct3.c (main): Fix CHECK.\n-\n-2004-01-22  Ulrich Weigand  <uweigand@de.ibm.com>\n-\n-\t* testsuite/libffi.call/cls_uint.c (cls_ret_uint_fn): Treat result\n-\tvalue as of type ffi_arg, not unsigned int.\n-\n-2004-01-21  Michael Ritzert  <ritzert@t-online.de>\n-\n-\t* ffi64.c (ffi_prep_args): Cast the RHS of an assignment instead\n-\tof the LHS.\n-\n-2004-01-12  Andreas Tobler  <a.tobler@schweiz.ch>\n-\n-\t* testsuite/lib/libffi-dg.exp: Set LD_LIBRARY_PATH_32 for\n-\tSolaris.\n-\n-2004-01-08  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n-\n-\t* testsuite/libffi.call/ffitest.h (allocate_mmap): Cast MAP_FAILED\n-\tto void *.\n-\n-2003-12-10  Richard Henderson  <rth@redhat.com>\n-\n-\t* testsuite/libffi.call/cls_align_pointer.c: Cast pointers to\n-\tsize_t instead of int.\n-\n-2003-12-04  Hosaka Yuji  <hos@tamanegi.org>\n-\n-\t* testsuite/libffi.call/many_win32.c: Include <float.h>.\n-\t* testsuite/libffi.call/many_win32.c (main): Replace variable\n-\tint i with unsigned long ul.\n-\n-\t* testsuite/libffi.call/cls_align_uint64.c: New test case.\n-\t* testsuite/libffi.call/cls_align_sint64.c: Likewise.\n-\t* testsuite/libffi.call/cls_align_uint32.c: Likewise.\n-\t* testsuite/libffi.call/cls_align_sint32.c: Likewise.\n-\t* testsuite/libffi.call/cls_align_uint16.c: Likewise.\n-\t* testsuite/libffi.call/cls_align_sint16.c: Likewise.\n-\t* testsuite/libffi.call/cls_align_float.c: Likewise.\n-\t* testsuite/libffi.call/cls_align_double.c: Likewise.\n-\t* testsuite/libffi.call/cls_align_longdouble.c: Likewise.\n-\t* testsuite/libffi.call/cls_align_pointer.c: Likewise.\n-\n-2003-12-02  Hosaka Yuji  <hos@tamanegi.org>\n-\n-\tPR other/13221\n-\t* src/x86/ffi.c (ffi_prep_args, ffi_prep_incoming_args_SYSV):\n-\tAlign arguments to 32 bits.\n-\n-2003-12-01  Andreas Tobler  <a.tobler@schweiz.ch>\n-\n-\tPR other/13221\n-\t* testsuite/libffi.call/cls_multi_sshort.c: New test case.\n-\t* testsuite/libffi.call/cls_multi_sshortchar.c: Likewise.\n-\t* testsuite/libffi.call/cls_multi_uchar.c: Likewise.\n-\t* testsuite/libffi.call/cls_multi_schar.c: Likewise.\n-\t* testsuite/libffi.call/cls_multi_ushortchar.c: Likewise.\n-\t* testsuite/libffi.call/cls_multi_ushort.c: Likewise.\n-\n-\t* testsuite/libffi.special/unwindtest.cc: Cosmetics.\n-\n-2003-11-26  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n-\n-\t* testsuite/libffi.call/ffitest.h: Include <fcntl.h>.\n-\t* testsuite/libffi.special/ffitestcxx.h: Likewise.\n-\n-2003-11-22  Andreas Tobler  <a.tobler@schweiz.ch>\n-\n-\t* Makefile.in: Rebuilt.\n-\t* configure: Likewise.\n-\t* testsuite/libffi.special/unwindtest.cc: Convert the mmap to\n-\tthe right type.\n-\n-2003-11-21  Andreas Jaeger  <aj@suse.de>\n-\t    Andreas Tobler  <a.tobler@schweiz.ch>\n-\n-\t* acinclude.m4: Add AC_FUNC_MMAP_BLACKLIST.\n-\t* configure.in: Call AC_FUNC_MMAP_BLACKLIST.\n-\t* Makefile.in: Rebuilt.\n-\t* aclocal.m4: Likewise.\n-\t* configure: Likewise.\n-\t* fficonfig.h.in: Likewise.\n-\t* testsuite/lib/libffi-dg.exp: Add include dir.\n-\t* testsuite/libffi.call/ffitest.h: Add MMAP definitions.\n-\t* testsuite/libffi.special/ffitestcxx.h: Likewise.\n-\t* testsuite/libffi.call/closure_fn0.c: Use MMAP functionality\n-\tfor ffi_closure if available.\n-\t* testsuite/libffi.call/closure_fn1.c: Likewise.\n-\t* testsuite/libffi.call/closure_fn2.c: Likewise.\n-\t* testsuite/libffi.call/closure_fn3.c: Likewise.\n-\t* testsuite/libffi.call/closure_fn4.c: Likewise.\n-\t* testsuite/libffi.call/closure_fn5.c: Likewise.\n-\t* testsuite/libffi.call/cls_12byte.c: Likewise.\n-\t* testsuite/libffi.call/cls_16byte.c: Likewise.\n-\t* testsuite/libffi.call/cls_18byte.c: Likewise.\n-\t* testsuite/libffi.call/cls_19byte.c: Likewise.\n-\t* testsuite/libffi.call/cls_1_1byte.c: Likewise.\n-\t* testsuite/libffi.call/cls_20byte.c: Likewise.\n-\t* testsuite/libffi.call/cls_20byte1.c: Likewise.\n-\t* testsuite/libffi.call/cls_24byte.c: Likewise.\n-\t* testsuite/libffi.call/cls_2byte.c: Likewise.\n-\t* testsuite/libffi.call/cls_3_1byte.c: Likewise.\n-\t* testsuite/libffi.call/cls_3byte1.c: Likewise.\n-\t* testsuite/libffi.call/cls_3byte2.c: Likewise.\n-\t* testsuite/libffi.call/cls_4_1byte.c: Likewise.\n-\t* testsuite/libffi.call/cls_4byte.c: Likewise.\n-\t* testsuite/libffi.call/cls_5byte.c: Likewise.\n-\t* testsuite/libffi.call/cls_64byte.c: Likewise.\n-\t* testsuite/libffi.call/cls_6byte.c: Likewise.\n-\t* testsuite/libffi.call/cls_7byte.c: Likewise.\n-\t* testsuite/libffi.call/cls_8byte.c: Likewise.\n-\t* testsuite/libffi.call/cls_9byte1.c: Likewise.\n-\t* testsuite/libffi.call/cls_9byte2.c: Likewise.\n-\t* testsuite/libffi.call/cls_double.c: Likewise.\n-\t* testsuite/libffi.call/cls_float.c: Likewise.\n-\t* testsuite/libffi.call/cls_schar.c: Likewise.\n-\t* testsuite/libffi.call/cls_sint.c: Likewise.\n-\t* testsuite/libffi.call/cls_sshort.c: Likewise.\n-\t* testsuite/libffi.call/cls_uchar.c: Likewise.\n-\t* testsuite/libffi.call/cls_uint.c: Likewise.\n-\t* testsuite/libffi.call/cls_ulonglong.c: Likewise.\n-\t* testsuite/libffi.call/cls_ushort.c: Likewise.\n-\t* testsuite/libffi.call/nested_struct.c: Likewise.\n-\t* testsuite/libffi.call/nested_struct1.c: Likewise.\n-\t* testsuite/libffi.call/nested_struct2.c: Likewise.\n-\t* testsuite/libffi.call/nested_struct3.c: Likewise.\n-\t* testsuite/libffi.call/problem1.c: Likewise.\n-\t* testsuite/libffi.special/unwindtest.cc: Likewise.\n-\n-2003-11-20  Andreas Tobler  <a.tobler@schweiz.ch>\n-\n-\t* testsuite/lib/libffi-dg.exp: Make the -lgcc_s conditional.\n-\n-2003-11-19  Andreas Tobler  <a.tobler@schweiz.ch>\n-\n-\t* testsuite/lib/libffi-dg.exp: Add DYLD_LIBRARY_PATH for darwin.\n-\tAdd -lgcc_s to additional flags.\n-\n-2003-11-12  Andreas Tobler  <a.tobler@schweiz.ch>\n-\n-\t* configure.in, include/Makefile.am: PR libgcj/11147, install\n-\tthe ffitarget.h header file in a gcc versioned and target\n-\tdependent place.\n-\t* configure: Regenerated.\n-\t* Makefile.in, include/Makefile.in: Likewise.\n-\t* testsuite/Makefile.in: Likewise.\n-\n-2003-11-09  Andreas Tobler  <a.tobler@schweiz.ch>\n-\n-\t* testsuite/libffi.call/closure_fn0.c: Print result and check\n-\twith dg-output to make debugging easier.\n-\t* testsuite/libffi.call/closure_fn1.c: Likewise.\n-\t* testsuite/libffi.call/closure_fn2.c: Likewise.\n-\t* testsuite/libffi.call/closure_fn3.c: Likewise.\n-\t* testsuite/libffi.call/closure_fn4.c: Likewise.\n-\t* testsuite/libffi.call/closure_fn5.c: Likewise.\n-\t* testsuite/libffi.call/cls_12byte.c: Likewise.\n-\t* testsuite/libffi.call/cls_16byte.c: Likewise.\n-\t* testsuite/libffi.call/cls_18byte.c: Likewise.\n-\t* testsuite/libffi.call/cls_19byte.c: Likewise.\n-\t* testsuite/libffi.call/cls_1_1byte.c: Likewise.\n-\t* testsuite/libffi.call/cls_20byte.c: Likewise.\n-\t* testsuite/libffi.call/cls_20byte1.c: Likewise.\n-\t* testsuite/libffi.call/cls_24byte.c: Likewise.\n-\t* testsuite/libffi.call/cls_2byte.c: Likewise.\n-\t* testsuite/libffi.call/cls_3_1byte.c: Likewise.\n-\t* testsuite/libffi.call/cls_3byte1.c: Likewise.\n-\t* testsuite/libffi.call/cls_3byte2.c: Likewise.\n-\t* testsuite/libffi.call/cls_4_1byte.c: Likewise.\n-\t* testsuite/libffi.call/cls_4byte.c: Likewise.\n-\t* testsuite/libffi.call/cls_5byte.c: Likewise.\n-\t* testsuite/libffi.call/cls_64byte.c: Likewise.\n-\t* testsuite/libffi.call/cls_6byte.c: Likewise.\n-\t* testsuite/libffi.call/cls_7byte.c: Likewise.\n-\t* testsuite/libffi.call/cls_8byte.c: Likewise.\n-\t* testsuite/libffi.call/cls_9byte1.c: Likewise.\n-\t* testsuite/libffi.call/cls_9byte2.c: Likewise.\n-\t* testsuite/libffi.call/cls_double.c: Likewise.\n-\t* testsuite/libffi.call/cls_float.c: Likewise.\n-\t* testsuite/libffi.call/cls_schar.c: Likewise.\n-\t* testsuite/libffi.call/cls_sint.c: Likewise.\n-\t* testsuite/libffi.call/cls_sshort.c: Likewise.\n-\t* testsuite/libffi.call/cls_uchar.c: Likewise.\n-\t* testsuite/libffi.call/cls_uint.c: Likewise.\n-\t* testsuite/libffi.call/cls_ulonglong.c: Likewise.\n-\t* testsuite/libffi.call/cls_ushort.c: Likewise.\n-\t* testsuite/libffi.call/problem1.c: Likewise.\n-\n-\t* testsuite/libffi.special/unwindtest.cc: Make ffi_closure\n-\tstatic.\n-\n-2003-11-08  Andreas Tobler  <a.tobler@schweiz.ch>\n-\n-\t* testsuite/libffi.call/cls_9byte2.c: New test case.\n-\t* testsuite/libffi.call/cls_9byte1.c: Likewise.\n-\t* testsuite/libffi.call/cls_64byte.c: Likewise.\n-\t* testsuite/libffi.call/cls_20byte1.c: Likewise.\n-\t* testsuite/libffi.call/cls_19byte.c: Likewise.\n-\t* testsuite/libffi.call/cls_18byte.c: Likewise.\n-\t* testsuite/libffi.call/closure_fn4.c: Likewise.\n-\t* testsuite/libffi.call/closure_fn5.c: Likewise.\n-\t* testsuite/libffi.call/cls_schar.c: Likewise.\n-\t* testsuite/libffi.call/cls_sint.c: Likewise.\n-\t* testsuite/libffi.call/cls_sshort.c: Likewise.\n-\t* testsuite/libffi.call/nested_struct2.c: Likewise.\n-\t* testsuite/libffi.call/nested_struct3.c: Likewise.\n-\n-2003-11-08  Andreas Tobler  <a.tobler@schweiz.ch>\n-\n-\t* testsuite/libffi.call/cls_double.c: Do a check on the result.\n-\t* testsuite/libffi.call/cls_uchar.c: Likewise.\n-\t* testsuite/libffi.call/cls_uint.c: Likewise.\n-\t* testsuite/libffi.call/cls_ulonglong.c: Likewise.\n-\t* testsuite/libffi.call/cls_ushort.c: Likewise.\n-\t* testsuite/libffi.call/return_sc.c: Cleanup whitespaces.\n-\n-2003-11-06  Andreas Tobler  <a.tobler@schweiz.ch>\n-\n-\t* src/prep_cif.c (ffi_prep_cif): Move the validity check after\n-\tthe initialization.\n-\n-2003-10-23  Andreas Tobler  <a.tobler@schweiz.ch>\n-\n-\t* src/java_raw_api.c (ffi_java_ptrarray_to_raw): Replace\n-\tFFI_ASSERT(FALSE) with FFI_ASSERT(0).\n-\n-2003-10-22  David Daney  <ddaney@avtrex.com>\n-\n-\t* src/mips/ffitarget.h: Replace undefined UINT32 and friends with\n-\t__attribute__((__mode__(__SI__))) and friends.\n-\n-2003-10-22  Andreas Schwab  <schwab@suse.de>\n-\n-\t* src/ia64/ffi.c: Replace FALSE/TRUE with false/true.\n-\n-2003-10-21  Andreas Tobler  <a.tobler@schweiz.ch>\n-\n-\t* configure.in: AC_LINK_FILES(ffitarget.h).\n-\t* configure: Regenerate.\n-\t* Makefile.in: Likewise.\n-\t* include/Makefile.in: Likewise.\n-\t* testsuite/Makefile.in: Likewise.\n-\t* fficonfig.h.in: Likewise.\n-\n-2003-10-21  Paolo Bonzini  <bonzini@gnu.org>\n-\t    Richard Henderson  <rth@redhat.com>\n-\n-\tAvoid that ffi.h includes fficonfig.h.\n-\n-\t* Makefile.am (EXTRA_DIST): Include ffitarget.h files\n-\t(TARGET_SRC_MIPS_GCC): Renamed to TARGET_SRC_MIPS_IRIX.\n-\t(TARGET_SRC_MIPS_SGI): Removed.\n-\t(MIPS_GCC): Renamed to TARGET_SRC_MIPS_IRIX.\n-\t(MIPS_SGI): Removed.\n-\t(CLEANFILES): Removed.\n-\t(mostlyclean-am, clean-am, mostlyclean-sub, clean-sub): New\n-\ttargets.\n-\t* acconfig.h: Removed.\n-\t* configure.in: Compute sizeofs only for double and long double.\n-\tUse them to define and subst HAVE_LONG_DOUBLE.  Include comments\n-\tinto AC_DEFINE instead of using acconfig.h.  Create\n-\tinclude/ffitarget.h instead of include/fficonfig.h.  Rename\n-\tMIPS_GCC to MIPS_IRIX, drop MIPS_SGI since we are in gcc's tree.\n-\tAC_DEFINE EH_FRAME_FLAGS.\n-\t* include/Makefile.am (DISTCLEANFILES): New automake macro.\n-\t(hack_DATA): Add ffitarget.h.\n-\t* include/ffi.h.in: Remove all system specific definitions.\n-\tDeclare raw API even if it is not installed, why bother?\n-\tUse limits.h instead of SIZEOF_* to define ffi_type_*.  Do\n-\tnot define EH_FRAME_FLAGS, it is in fficonfig.h now.  Include\n-\tffitarget.h instead of fficonfig.h.  Remove ALIGN macro.\n-\t(UINT_ARG, INT_ARG): Removed, use ffi_arg and ffi_sarg instead.\n-\t* include/ffi_common.h (bool): Do not define.\n-\t(ffi_assert): Accept failed assertion.\n-\t(ffi_type_test): Return void and accept file/line.\n-\t(FFI_ASSERT): Pass stringized failed assertion.\n-\t(FFI_ASSERT_AT): New macro.\n-\t(FFI_ASSERT_VALID_TYPE): New macro.\n-\t(UINT8, SINT8, UINT16, SINT16, UINT32, SINT32,\n-\tUINT64, SINT64): Define here with gcc's __attribute__ macro\n-\tinstead of in ffi.h\n-\t(FLOAT32, ALIGN): Define here instead of in ffi.h\n-\t* include/ffi-mips.h: Removed.  Its content moved to\n-\tsrc/mips/ffitarget.h after separating assembly and C sections.\n-\t* src/alpha/ffi.c, src/alpha/ffi.c, src/java_raw_api.c\n-\tsrc/prep_cif.c, src/raw_api.c, src/ia64/ffi.c,\n-\tsrc/mips/ffi.c, src/mips/n32.S, src/mips/o32.S,\n-\tsrc/mips/ffitarget.h, src/sparc/ffi.c, src/x86/ffi64.c:\n-\tSIZEOF_ARG -> FFI_SIZEOF_ARG.\n-\t* src/ia64/ffi.c: Include stdbool.h (provided by GCC 2.95+).\n-\t* src/debug.c (ffi_assert): Accept stringized failed assertion.\n-\t(ffi_type_test): Rewritten.\n-\t* src/prep-cif.c (initialize_aggregate, ffi_prep_cif): Call\n-\tFFI_ASSERT_VALID_TYPE.\n-\t* src/alpha/ffitarget.h, src/arm/ffitarget.h,\n-\tsrc/ia64/ffitarget.h, src/m68k/ffitarget.h,\n-\tsrc/mips/ffitarget.h, src/powerpc/ffitarget.h,\n-\tsrc/s390/ffitarget.h, src/sh/ffitarget.h,\n-\tsrc/sh64/ffitarget.h, src/sparc/ffitarget.h,\n-\tsrc/x86/ffitarget.h: New files.\n-\t* src/alpha/osf.S, src/arm/sysv.S, src/ia64/unix.S,\n-\tsrc/m68k/sysv.S, src/mips/n32.S, src/mips/o32.S,\n-\tsrc/powerpc/aix.S, src/powerpc/darwin.S,\n-\tsrc/powerpc/ffi_darwin.c, src/powerpc/linux64.S,\n-\tsrc/powerpc/linux64_closure.S, src/powerpc/ppc_closure.S,\n-\tsrc/powerpc/sysv.S, src/s390/sysv.S, src/sh/sysv.S,\n-\tsrc/sh64/sysv.S, src/sparc/v8.S, src/sparc/v9.S,\n-\tsrc/x86/sysv.S, src/x86/unix64.S, src/x86/win32.S:\n-\tinclude fficonfig.h\n-\n-2003-10-20  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n-\n-\t* src/mips/ffi.c: Use _ABIN32, _ABIO32 instead of external\n-\t_MIPS_SIM_NABI32, _MIPS_SIM_ABI32.\n-\n-2003-10-19  Andreas Tobler  <a.tobler@schweiz.ch>\n-\n-\t* src/powerpc/ffi_darwin.c (ffi_prep_args): Declare bytes again.\n-\tUsed when FFI_DEBUG = 1.\n-\n-2003-10-14  Alan Modra  <amodra@bigpond.net.au>\n-\n-\t* src/types.c (double, longdouble): Default POWERPC64 to 8 byte size\n-\tand align.\n-\n-2003-10-06  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n-\n-\t* include/ffi_mips.h: Define FFI_MIPS_N32 for N32/N64 ABIs,\n-\tFFI_MIPS_O32 for O32 ABI.\n-\n-2003-10-01  Andreas Tobler  <a.tobler@schweiz.ch>\n-\n-\t* testsuite/lib/libffi-dg.exp: Set LD_LIBRARY_PATH_64 for\n-\tSPARC64. Cleanup whitespaces.\n-\n-2003-09-19  Andreas Tobler  <a.tobler@schweiz.ch>\n-\n-\t* testsuite/libffi.call/closure_fn0.c: Xfail mips, arm,\n-\tstrongarm, xscale. Cleanup whitespaces.\n-\t* testsuite/libffi.call/closure_fn1.c: Likewise.\n-\t* testsuite/libffi.call/closure_fn2.c: Likewise.\n-\t* testsuite/libffi.call/closure_fn3.c: Likewise.\n-\t* testsuite/libffi.call/cls_12byte.c: Likewise.\n-\t* testsuite/libffi.call/cls_16byte.c: Likewise.\n-\t* testsuite/libffi.call/cls_1_1byte.c: Likewise.\n-\t* testsuite/libffi.call/cls_20byte.c: Likewise.\n-\t* testsuite/libffi.call/cls_24byte.c: Likewise.\n-\t* testsuite/libffi.call/cls_2byte.c: Likewise.\n-\t* testsuite/libffi.call/cls_3_1byte.c: Likewise.\n-\t* testsuite/libffi.call/cls_3byte1.c: Likewise.\n-\t* testsuite/libffi.call/cls_3byte2.c: Likewise.\n-\t* testsuite/libffi.call/cls_4_1byte.c: Likewise.\n-\t* testsuite/libffi.call/cls_4byte.c: Likewise.\n-\t* testsuite/libffi.call/cls_5byte.c: Likewise.\n-\t* testsuite/libffi.call/cls_6byte.c: Likewise.\n-\t* testsuite/libffi.call/cls_7byte.c: Likewise.\n-\t* testsuite/libffi.call/cls_8byte.c: Likewise.\n-\t* testsuite/libffi.call/cls_double.c: Likewise.\n-\t* testsuite/libffi.call/cls_float.c: Likewise.\n-\t* testsuite/libffi.call/cls_uchar.c: Likewise.\n-\t* testsuite/libffi.call/cls_uint.c: Likewise.\n-\t* testsuite/libffi.call/cls_ulonglong.c: Likewise.\n-\t* testsuite/libffi.call/cls_ushort.c: Likewise.\n-\t* testsuite/libffi.call/nested_struct.c: Likewise.\n-\t* testsuite/libffi.call/nested_struct1.c: Likewise.\n-\t* testsuite/libffi.call/problem1.c: Likewise.\n-\t* testsuite/libffi.special/unwindtest.cc: Likewise.\n-\t* testsuite/libffi.call/pyobjc-tc.c: Cleanup whitespaces.\n-\n-2003-09-18  David Edelsohn  <edelsohn@gnu.org>\n-\n-\t* src/powerpc/aix.S: Cleanup whitespaces.\n-\t* src/powerpc/aix_closure.S: Likewise.\n-\n-2003-09-18  Andreas Tobler  <a.tobler@schweiz.ch>\n-\n-\t* src/powerpc/darwin.S: Cleanup whitespaces, comment formatting.\n-\t* src/powerpc/darwin_closure.S: Likewise.\n-\t* src/powerpc/ffi_darwin.c: Likewise.\n-\n-2003-09-18  Andreas Tobler  <a.tobler@schweiz.ch>\n-\t    David Edelsohn  <edelsohn@gnu.org>\n-\n-\t* src/types.c (double): Add AIX and Darwin to the right TYPEDEF.\n-\t* src/powerpc/aix_closure.S: Remove the pointer to the outgoing\n-\tparameter stack.\n-\t* src/powerpc/darwin_closure.S: Likewise.\n-\t* src/powerpc/ffi_darwin.c (ffi_prep_args): Handle structures\n-\taccording to the Darwin/AIX ABI.\n-\t(ffi_prep_cif_machdep): Likewise.\n-\t(ffi_closure_helper_DARWIN): Likewise.\n-\tRemove the outgoing parameter stack logic. Simplify the evaluation\n-\tof the different CASE types.\n-\t(ffi_prep_clousure): Avoid the casts on lvalues. Change the branch\n-\tstatement in the trampoline code.\n-\n-2003-09-18  Kaz Kojima  <kkojima@gcc.gnu.org>\n-\n-\t* src/sh/ffi.c (ffi_prep_args): Take account into the alignement\n-\tfor the register size.\n-\t(ffi_closure_helper_SYSV): Handle the structure return value\n-\taddress correctly.\n-\t(ffi_closure_helper_SYSV): Return the appropriate type when\n-\tthe registers are used for the structure return value.\n-\t* src/sh/sysv.S (ffi_closure_SYSV): Fix the stack layout for\n-\tthe 64-bit return value.  Update copyright years.\n-\n-2003-09-17  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n-\n-\t* testsuite/lib/libffi-dg.exp (libffi_target_compile): Search in\n-\tsrcdir for ffi_mips.h.\n-\n-2003-09-12  Alan Modra  <amodra@bigpond.net.au>\n-\n-\t* src/prep_cif.c (initialize_aggregate): Include tail padding in\n-\tstructure size.\n-\t* src/powerpc/linux64_closure.S (ffi_closure_LINUX64): Correct\n-\tplacement of float result.\n-\t* testsuite/libffi.special/unwindtest.cc (closure_test_fn1): Correct\n-\tcast of \"resp\" for big-endian 64 bit machines.\n-\n-2003-09-11  Alan Modra  <amodra@bigpond.net.au>\n-\n-\t* src/types.c (double, longdouble): Merge identical SH and ARM\n-\ttypedefs, and add POWERPC64.\n-\t* src/powerpc/ffi.c (ffi_prep_args64): Correct next_arg calc for\n-\tstruct split over gpr and rest.\n-\t(ffi_prep_cif_machdep): Correct intarg_count for structures.\n-\t* src/powerpc/linux64.S (ffi_call_LINUX64): Fix gpr offsets.\n-\n-2003-09-09  Andreas Tobler  <a.tobler@schweiz.ch>\n-\n-\t* src/powerpc/ffi.c (ffi_closure_helper_SYSV) Handle struct\n-\tpassing correctly.\n-\n-2003-09-09  Alan Modra  <amodra@bigpond.net.au>\n-\n-\t* configure: Regenerate.\n-\n-2003-09-04  Andreas Tobler  <a.tobler@schweiz.ch>\n-\n-\t* Makefile.am: Remove build rules for ffitest.\n-\t* Makefile.in: Rebuilt.\n-\n-2003-09-04  Andreas Tobler  <a.tobler@schweiz.ch>\n-\n-\t* src/java_raw_api.c: Include <stdlib.h> to fix compiler warning\n-\tabout implicit declaration of abort().\n-\n-2003-09-04  Andreas Tobler  <a.tobler@schweiz.ch>\n-\n-\t* Makefile.am: Add dejagnu test framework. Fixes PR other/11411.\n-\t* Makefile.in: Rebuilt.\n-\t* configure.in: Add dejagnu test framework.\n-\t* configure: Rebuilt.\n-\n-\t* testsuite/Makefile.am: New file.\n-\t* testsuite/Makefile.in: Built\n-\t* testsuite/lib/libffi-dg.exp: New file.\n-\t* testsuite/config/default.exp: Likewise.\n-\t* testsuite/libffi.call/call.exp: Likewise.\n-\t* testsuite/libffi.call/ffitest.h: Likewise.\n-\t* testsuite/libffi.call/closure_fn0.c: Likewise.\n-\t* testsuite/libffi.call/closure_fn1.c: Likewise.\n-\t* testsuite/libffi.call/closure_fn2.c: Likewise.\n-\t* testsuite/libffi.call/closure_fn3.c: Likewise.\n-\t* testsuite/libffi.call/cls_1_1byte.c: Likewise.\n-\t* testsuite/libffi.call/cls_3_1byte.c: Likewise.\n-\t* testsuite/libffi.call/cls_4_1byte.c: Likewise.\n-\t* testsuite/libffi.call/cls_2byte.c: Likewise.\n-\t* testsuite/libffi.call/cls_3byte1.c: Likewise.\n-\t* testsuite/libffi.call/cls_3byte2.c: Likewise.\n-\t* testsuite/libffi.call/cls_4byte.c: Likewise.\n-\t* testsuite/libffi.call/cls_5byte.c: Likewise.\n-\t* testsuite/libffi.call/cls_6byte.c: Likewise.\n-\t* testsuite/libffi.call/cls_7byte.c: Likewise.\n-\t* testsuite/libffi.call/cls_8byte.c: Likewise.\n-\t* testsuite/libffi.call/cls_12byte.c: Likewise.\n-\t* testsuite/libffi.call/cls_16byte.c: Likewise.\n-\t* testsuite/libffi.call/cls_20byte.c: Likewise.\n-\t* testsuite/libffi.call/cls_24byte.c: Likewise.\n-\t* testsuite/libffi.call/cls_double.c: Likewise.\n-\t* testsuite/libffi.call/cls_float.c: Likewise.\n-\t* testsuite/libffi.call/cls_uchar.c: Likewise.\n-\t* testsuite/libffi.call/cls_uint.c: Likewise.\n-\t* testsuite/libffi.call/cls_ulonglong.c: Likewise.\n-\t* testsuite/libffi.call/cls_ushort.c: Likewise.\n-\t* testsuite/libffi.call/float.c: Likewise.\n-\t* testsuite/libffi.call/float1.c: Likewise.\n-\t* testsuite/libffi.call/float2.c: Likewise.\n-\t* testsuite/libffi.call/many.c: Likewise.\n-\t* testsuite/libffi.call/many_win32.c: Likewise.\n-\t* testsuite/libffi.call/nested_struct.c: Likewise.\n-\t* testsuite/libffi.call/nested_struct1.c: Likewise.\n-\t* testsuite/libffi.call/pyobjc-tc.c: Likewise.\n-\t* testsuite/libffi.call/problem1.c: Likewise.\n-\t* testsuite/libffi.call/promotion.c: Likewise.\n-\t* testsuite/libffi.call/return_ll.c: Likewise.\n-\t* testsuite/libffi.call/return_sc.c: Likewise.\n-\t* testsuite/libffi.call/return_uc.c: Likewise.\n-\t* testsuite/libffi.call/strlen.c: Likewise.\n-\t* testsuite/libffi.call/strlen_win32.c: Likewise.\n-\t* testsuite/libffi.call/struct1.c: Likewise.\n-\t* testsuite/libffi.call/struct2.c: Likewise.\n-\t* testsuite/libffi.call/struct3.c: Likewise.\n-\t* testsuite/libffi.call/struct4.c: Likewise.\n-\t* testsuite/libffi.call/struct5.c: Likewise.\n-\t* testsuite/libffi.call/struct6.c: Likewise.\n-\t* testsuite/libffi.call/struct7.c: Likewise.\n-\t* testsuite/libffi.call/struct8.c: Likewise.\n-\t* testsuite/libffi.call/struct9.c: Likewise.\n-\t* testsuite/libffi.special/special.exp: New file.\n-\t* testsuite/libffi.special/ffitestcxx.h: Likewise.\n-\t* testsuite/libffi.special/unwindtest.cc: Likewise.\n-\n-\n-2003-08-13  Kaz Kojima  <kkojima@gcc.gnu.org>\n-\n-\t* src/sh/ffi.c (OFS_INT16): Set 0 for little endian case.  Update\n-\tcopyright years.\n-\n-2003-08-02  Alan Modra  <amodra@bigpond.net.au>\n-\n-\t* src/powerpc/ffi.c (ffi_prep_args64): Modify for changed gcc\n-\tstructure passing.\n-\t(ffi_closure_helper_LINUX64): Likewise.\n-\t* src/powerpc/linux64.S: Remove code writing to parm save area.\n-\t* src/powerpc/linux64_closure.S (ffi_closure_LINUX64): Use return\n-\taddress in lr from ffi_closure_helper_LINUX64 call to calculate\n-\ttable address.  Optimize function tail.\n-\n-2003-07-28  Andreas Tobler  <a.tobler@schweiz.ch>\n-\n-\t* src/sparc/ffi.c: Handle all floating point registers.\n-\t* src/sparc/v9.S: Likewise. Fixes second part of PR target/11410.\n-\n-2003-07-11  Gerald Pfeifer  <pfeifer@dbai.tuwien.ac.at>\n-\n-\t* README: Note that libffi is not part of GCC.  Update the project\n-\tURL and status.\n-\n-2003-06-19  Franz Sirl  <Franz.Sirl-kernel@lauterbach.com>\n-\n-\t* src/powerpc/ppc_closure.S: Include ffi.h.\n-\n-2003-06-13  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n-\n-\t* src/x86/sysv.S: Avoid gas-only .uleb128/.sleb128 directives.\n-\tUse C style comments.\n-\n-2003-06-13  Kaz Kojima  <kkojima@rr.iij4u.or.jp>\n-\n-\t* Makefile.am: Add SHmedia support.  Fix a typo of SH support.\n-\t* Makefile.in: Regenerate.\n-\t* configure.in (sh64-*-linux*, sh5*-*-linux*): Add target.\n-\t* configure: Regenerate.\n-\t* include/ffi.h.in: Add SHmedia support.\n-\t* src/sh64/ffi.c: New file.\n-\t* src/sh64/sysv.S: New file.\n-\n-2003-05-16  Jakub Jelinek  <jakub@redhat.com>\n-\n-\t* configure.in (HAVE_RO_EH_FRAME): Check whether .eh_frame section\n-\tshould be read-only.\n-\t* configure: Rebuilt.\n-\t* fficonfig.h.in: Rebuilt.\n-\t* include/ffi.h.in (EH_FRAME_FLAGS): Define.\n-\t* src/alpha/osf.S: Use EH_FRAME_FLAGS.\n-\t* src/powerpc/linux64.S: Likewise.\n-\t* src/powerpc/linux64_closure.S: Likewise.  Include ffi.h.\n-\t* src/powerpc/sysv.S: Use EH_FRAME_FLAGS.  Use pcrel encoding\n-\tif -fpic/-fPIC/-mrelocatable.\n-\t* src/powerpc/powerpc_closure.S: Likewise.\n-\t* src/sparc/v8.S: If HAVE_RO_EH_FRAME is defined, don't include\n-\t#write in .eh_frame flags.\n-\t* src/sparc/v9.S: Likewise.\n-\t* src/x86/unix64.S: Use EH_FRAME_FLAGS.\n-\t* src/x86/sysv.S: Likewise.  Use pcrel encoding if -fpic/-fPIC.\n-\t* src/s390/sysv.S: Use EH_FRAME_FLAGS.  Include ffi.h.\n-\n-2003-05-07  Jeff Sturm  <jsturm@one-point.com>\n-\n-\tFixes PR bootstrap/10656\n-\t* configure.in (HAVE_AS_REGISTER_PSEUDO_OP): Test assembler\n-\tsupport for .register pseudo-op.\n-\t* src/sparc/v8.S: Use it.\n-\t* fficonfig.h.in: Rebuilt.\n-\t* configure: Rebuilt.\n-\n-2003-04-18  Jakub Jelinek  <jakub@redhat.com>\n-\n-\t* include/ffi.h.in (POWERPC64): Define if 64-bit.\n-\t(enum ffi_abi): Add FFI_LINUX64 on POWERPC.\n-\tMake it the default on POWERPC64.\n-\t(FFI_TRAMPOLINE_SIZE): Define to 24 on POWERPC64.\n-\t* configure.in: Change powerpc-*-linux* into powerpc*-*-linux*.\n-\t* configure: Rebuilt.\n-\t* src/powerpc/ffi.c (hidden): Define.\n-\t(ffi_prep_args_SYSV): Renamed from\n-\tffi_prep_args.  Cast pointers to unsigned long to shut up warnings.\n-\t(NUM_GPR_ARG_REGISTERS64, NUM_FPR_ARG_REGISTERS64,\n-\tASM_NEEDS_REGISTERS64): New.\n-\t(ffi_prep_args64): New function.\n-\t(ffi_prep_cif_machdep): Handle FFI_LINUX64 ABI.\n-\t(ffi_call): Likewise.\n-\t(ffi_prep_closure): Likewise.\n-\t(flush_icache): Surround by #ifndef POWERPC64.\n-\t(ffi_dblfl): New union type.\n-\t(ffi_closure_helper_SYSV): Use it to avoid aliasing problems.\n-\t(ffi_closure_helper_LINUX64): New function.\n-\t* src/powerpc/ppc_closure.S: Surround whole file by #ifndef\n-\t__powerpc64__.\n-\t* src/powerpc/sysv.S: Likewise.\n-\t(ffi_call_SYSV): Rename ffi_prep_args to ffi_prep_args_SYSV.\n-\t* src/powerpc/linux64.S: New file.\n-\t* src/powerpc/linux64_closure.S: New file.\n-\t* Makefile.am (EXTRA_DIST): Add src/powerpc/linux64.S and\n-\tsrc/powerpc/linux64_closure.S.\n-\t(TARGET_SRC_POWERPC): Likewise.\n-\n-\t* src/ffitest.c (closure_test_fn, closure_test_fn1, closure_test_fn2,\n-\tclosure_test_fn3): Fix result printing on big-endian 64-bit\n-\tmachines.\n-\t(main): Print tst2_arg instead of uninitialized tst2_result.\n-\n-\t* src/ffitest.c (main): Hide what closure pointer really points to\n-\tfrom the compiler.\n-\n-2003-04-16  Richard Earnshaw  <rearnsha@arm.com>\n-\n-\t* configure.in (arm-*-netbsdelf*): Add configuration.\n-\t(configure): Regenerated.\n-\n-2003-04-04  Loren J. Rittle  <ljrittle@acm.org>\n-\n-\t* include/Makefile.in: Regenerate.\n-\n-2003-03-21  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>\n-\n-\t* libffi/include/ffi.h.in: Define X86 instead of X86_64 in 32\n-\tbit mode.\n-\t* libffi/src/x86/ffi.c (ffi_closure_SYSV, ffi_closure_raw_SYSV):\n-\tReceive closure pointer through parameter, read args using\n-\t__builtin_dwarf_cfa.\n-\t(FFI_INIT_TRAMPOLINE): Send closure reference through eax.\n-\n-2003-03-12  Andreas Schwab  <schwab@suse.de>\n-\n-\t* configure.in: Avoid trailing /. in toolexeclibdir.\n-\t* configure: Rebuilt.\n-\n-2003-03-03  Andreas Tobler <a.tobler@schweiz.ch>\n-\n-        * src/powerpc/darwin_closure.S: Recode to fit dynamic libraries.\n-\n-2003-02-06  Andreas Tobler <a.tobler@schweiz.ch>\n-\n-\t* libffi/src/powerpc/darwin_closure.S:\n-\tFix alignement bug, allocate 8 bytes for the result.\n-\t* libffi/src/powerpc/aix_closure.S:\n-\tLikewise.\n-\t* libffi/src/powerpc/ffi_darwin.c:\n-\tUpdate stackframe description for aix/darwin_closure.S.\n-\n-2003-02-06  Jakub Jelinek  <jakub@redhat.com>\n-\n-\t* src/s390/ffi.c (ffi_closure_helper_SYSV): Add hidden visibility\n-\tattribute.\n-\n-2003-01-31  Christian Cornelssen  <ccorn@cs.tu-berlin.de>,\n-\t    Andreas Schwab  <schwab@suse.de>\n-\n-        * configure.in: Adjust command to source config-ml.in to account\n-\tfor changes to the libffi_basedir definition.\n-\t(libffi_basedir): Remove ${srcdir} from value and include trailing\n-\tslash if nonempty.\n-\n-        * configure: Regenerate.\n-\n-2003-01-29  Franz Sirl  <Franz.Sirl-kernel@lauterbach.com>\n-\n-\t* src/powerpc/ppc_closure.S: Recode to fit shared libs.\n-\n-2003-01-28  Andrew Haley  <aph@redhat.com>\n-\n-\t* include/ffi.h.in: Enable FFI_CLOSURES for x86_64.\n-\t* src/x86/ffi64.c (ffi_prep_closure): New.\n-\t(ffi_closure_UNIX64_inner): New.\n-\t* src/x86/unix64.S (ffi_closure_UNIX64): New.\n-\n-2003-01-27  Alexandre Oliva  <aoliva@redhat.com>\n-\n-\t* configure.in (toolexecdir, toolexeclibdir): Set and AC_SUBST.\n-\tRemove USE_LIBDIR conditional.\n-\t* Makefile.am (toolexecdir, toolexeclibdir): Don't override.\n-\t* Makefile.in, configure: Rebuilt.\n-\n-2003-01027  David Edelsohn  <edelsohn@gnu.org>\n-\n-\t* Makefile.am (TARGET_SRC_POWERPC_AIX): Fix typo.\n-\t* Makefile.in: Regenerate.\n-\n-2003-01-22  Andrew Haley  <aph@redhat.com>\n-\n-\t* src/powerpc/darwin.S (_ffi_call_AIX): Add Augmentation size to\n-\tunwind info.\n-\n-2003-01-21  Andreas Tobler  <a.tobler@schweiz.ch>\n-\n-\t* src/powerpc/darwin.S: Add unwind info.\n-\t* src/powerpc/darwin_closure.S: Likewise.\n-\n-2003-01-14  Andrew Haley  <aph@redhat.com>\n-\n-\t* src/x86/ffi64.c (ffi_prep_args): Check for void retval.\n-\t(ffi_prep_cif_machdep): Likewise.\n-\t* src/x86/unix64.S: Add unwind info.\n-\n-2003-01-14  Andreas Jaeger  <aj@suse.de>\n-\n-\t* src/ffitest.c (main): Only use ffi_closures if those are\n-\tsupported.\n-\n-2003-01-13 Andreas Tobler <a.tobler@schweiz.ch>\n-\n-\t* libffi/src/ffitest.c\n-         add closure testcases\n-\n-2003-01-13 Kevin B. Hendricks <khendricks@ivey.uwo.ca>\n-\n-\t* libffi/src/powerpc/ffi.c\n-         fix alignment bug for float (4 byte aligned iso 8 byte)\n-\n-2003-01-09  Geoffrey Keating  <geoffk@apple.com>\n-\n-\t* src/powerpc/ffi_darwin.c: Remove RCS version string.\n-\t* src/powerpc/darwin.S: Remove RCS version string.\n-\n-2003-01-03  Jeff Sturm  <jsturm@one-point.com>\n-\n-\t* include/ffi.h.in: Add closure defines for SPARC, SPARC64.\n-\t* src/ffitest.c (main): Use static storage for closure.\n-\t* src/sparc/ffi.c (ffi_prep_closure, ffi_closure_sparc_inner): New.\n-\t* src/sparc/v8.S (ffi_closure_v8): New.\n-\t* src/sparc/v9.S (ffi_closure_v9): New.\n-\n-2002-11-10  Ranjit Mathew <rmathew@hotmail.com>\n-\n-\t* include/ffi.h.in: Added FFI_STDCALL ffi_type\n-\t  enumeration for X86_WIN32.\n-\t* src/x86/win32.S: Added ffi_call_STDCALL function\n-\t  definition.\n-\t* src/x86/ffi.c (ffi_call/ffi_raw_call): Added\n-\t  switch cases for recognising FFI_STDCALL and\n-\t  calling ffi_call_STDCALL if target is X86_WIN32.\n-\t* src/ffitest.c (my_stdcall_strlen/stdcall_many):\n-\t  stdcall versions of the \"my_strlen\" and \"many\"\n-\t  test functions (for X86_WIN32).\n-\t  Added test cases to test stdcall invocation using\n-\t  these functions.\n-\n-2002-12-02  Kaz Kojima  <kkojima@gcc.gnu.org>\n-\n-\t* src/sh/sysv.S: Add DWARF2 unwind info.\n-\n-2002-11-27  Ulrich Weigand  <uweigand@de.ibm.com>\n-\n-\t* src/s390/sysv.S (.eh_frame section): Make section read-only.\n-\n-2002-11-26  Jim Wilson  <wilson@redhat.com>\n-\n-\t* src/types.c (FFI_TYPE_POINTER): Has size 8 on IA64.\n-\n-2002-11-23  H.J. Lu <hjl@gnu.org>\n-\n-\t* acinclude.m4: Add dummy AM_PROG_LIBTOOL.\n-\tInclude ../config/accross.m4.\n-\t* aclocal.m4; Rebuild.\n-\t* configure: Likewise.\n-\n-2002-11-15  Ulrich Weigand  <uweigand@de.ibm.com>\n-\n-\t* src/s390/sysv.S (.eh_frame section): Adapt to pcrel FDE encoding.\n-\n-2002-11-11  DJ Delorie  <dj@redhat.com>\n-\n-\t* configure.in: Look for common files in the right place.\n-\n-2002-10-08  Ulrich Weigand  <uweigand@de.ibm.com>\n-\n-\t* src/java_raw_api.c (ffi_java_raw_to_ptrarray): Interpret\n-\traw data as _Jv_word values, not ffi_raw.\n-\t(ffi_java_ptrarray_to_raw): Likewise.\n-\t(ffi_java_rvalue_to_raw): New function.\n-\t(ffi_java_raw_call): Call it.\n-\t(ffi_java_raw_to_rvalue): New function.\n-\t(ffi_java_translate_args): Call it.\n-\t* src/ffitest.c (closure_test_fn): Interpret return value\n-\tas ffi_arg, not int.\n-\t* src/s390/ffi.c (ffi_prep_cif_machdep): Add missing\n-\tFFI_TYPE_POINTER case.\n-\t(ffi_closure_helper_SYSV): Likewise.  Also, assume return\n-\tvalues extended to word size.\n-\n-2002-10-02  Andreas Jaeger  <aj@suse.de>\n-\n-\t* src/x86/ffi64.c (ffi_prep_cif_machdep): Remove debug output.\n-\n-2002-10-01  Bo Thorsen  <bo@smetana.suse.de>\n-\n-\t* include/ffi.h.in: Fix i386 win32 compilation.\n-\n-2002-09-30  Ulrich Weigand  <uweigand@de.ibm.com>\n-\n-\t* configure.in: Add s390x-*-linux-* target.\n-\t* configure: Regenerate.\n-\t* include/ffi.h.in: Define S390X for s390x targets.\n-\t(FFI_CLOSURES): Define for s390/s390x.\n-\t(FFI_TRAMPOLINE_SIZE): Likewise.\n-\t(FFI_NATIVE_RAW_API): Likewise.\n-\t* src/prep_cif.c (ffi_prep_cif): Do not compute stack space for s390.\n-\t* src/types.c (FFI_TYPE_POINTER): Use 8-byte pointers on s390x.\n-\t* src/s390/ffi.c: Major rework of existing code.  Add support for\n-\ts390x targets.  Add closure support.\n-\t* src/s390/sysv.S: Likewise.\n-\n-2002-09-29  Richard Earnshaw  <rearnsha@arm.com>\n-\n-\t* src/arm/sysv.S: Fix typo.\n-\n-2002-09-28  Richard Earnshaw  <rearnsha@arm.com>\n-\n-\t* src/arm/sysv.S: If we don't have machine/asm.h and the pre-processor\n-\thas defined __USER_LABEL_PREFIX__, then use it in CNAME.\n-\t(ffi_call_SYSV): Handle soft-float.\n-\n-2002-09-27  Bo Thorsen  <bo@suse.de>\n-\n-\t* include/ffi.h.in: Fix multilib x86-64 support.\n-\n-2002-09-22  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n-\n-\t* Makefile.am (all-multi): Fix multilib parallel build.\n-\n-2002-07-19  Kaz Kojima  <kkojima@gcc.gnu.org>\n-\n-\t* configure.in (sh[34]*-*-linux*): Add brackets.\n-\t* configure: Regenerate.\n-\n-2002-07-18  Kaz Kojima  <kkojima@gcc.gnu.org>\n-\n-\t* Makefile.am: Add SH support.\n-\t* Makefile.in: Regenerate.\n-\t* configure.in (sh-*-linux*, sh[34]*-*-linux*): Add target.\n-\t* configure: Regenerate.\n-\t* include/ffi.h.in: Add SH support.\n-\t* src/sh/ffi.c: New file.\n-\t* src/sh/sysv.S: New file.\n-\t* src/types.c: Add SH support.\n-\n-2002-07-16  Bo Thorsen  <bo@suse.de>\n-\n-\t* src/x86/ffi64.c: New file that adds x86-64 support.\n-\t* src/x86/unix64.S: New file that handles argument setup for\n-\tx86-64.\n-\t* src/x86/sysv.S: Don't use this on x86-64.\n-\t* src/x86/ffi.c: Don't use this on x86-64.\n-\tRemove unused vars.\n-\t* src/prep_cif.c (ffi_prep_cif): Don't do stack size calculation\n-\tfor x86-64.\n-\t* src/ffitest.c (struct6): New test that tests a special case in\n-\tthe x86-64 ABI.\n-\t(struct7): Likewise.\n-\t(struct8): Likewise.\n-\t(struct9): Likewise.\n-\t(closure_test_fn): Silence warning about this when it's not used.\n-\t(main): Add the new tests.\n-\t(main): Fix a couple of wrong casts and silence some compiler warnings.\n-\t* include/ffi.h.in: Add x86-64 ABI definition.\n-\t* fficonfig.h.in: Regenerate.\n-\t* Makefile.am: Add x86-64 support.\n-\t* configure.in: Likewise.\n-\t* Makefile.in: Regenerate.\n-\t* configure: Likewise.\n-\n-2002-06-24  Bo Thorsen  <bo@suse.de>\n-\n-\t* src/types.c: Merge settings for similar architectures.\n-\tAdd x86-64 sizes and alignments.\n-\n-2002-06-23  Bo Thorsen  <bo@suse.de>\n-\n-\t* src/arm/ffi.c (ffi_prep_args): Remove unused vars.\n-\t* src/sparc/ffi.c (ffi_prep_args_v8): Likewise.\n-\t* src/mips/ffi.c (ffi_prep_args): Likewise.\n-\t* src/m68k/ffi.c (ffi_prep_args): Likewise.\n-\n-2002-07-18  H.J. Lu  (hjl@gnu.org)\n-\n-\t* Makefile.am (TARGET_SRC_MIPS_LINUX): New.\n-\t(libffi_la_SOURCES): Support MIPS_LINUX.\n-\t(libffi_convenience_la_SOURCES): Likewise.\n-\t* Makefile.in: Regenerated.\n-\n-\t* configure.in (mips64*-*): Skip.\n-\t(mips*-*-linux*): New.\n-\t* configure: Regenerated.\n-\n-\t* src/mips/ffi.c: Include <sgidefs.h>.\n-\n-2002-06-06  Ulrich Weigand  <uweigand@de.ibm.com>\n-\n-\t* src/s390/sysv.S: Save/restore %r6.  Add DWARF-2 unwind info.\n-\n-2002-05-27  Roger Sayle  <roger@eyesopen.com>\n-\n-\t* src/x86/ffi.c (ffi_prep_args): Remove reference to avn.\n-\n-2002-05-27  Bo Thorsen  <bo@suse.de>\n-\n-\t* src/x86/ffi.c (ffi_prep_args): Remove unused variable and\n-\tfix formatting.\n-\n-2002-05-13  Andreas Tobler  <a.tobler@schweiz.ch>\n-\n-\t* src/powerpc/ffi_darwin.c (ffi_prep_closure): Declare fd at\n-\tbeginning of function (for older apple cc).\n-\n-2002-05-08  Alexandre Oliva  <aoliva@redhat.com>\n-\n-\t* configure.in (ORIGINAL_LD_FOR_MULTILIBS): Preserve LD at\n-\tscript entry, and set LD to it when configuring multilibs.\n-\t* configure: Rebuilt.\n-\n-2002-05-05  Jason Thorpe  <thorpej@wasabisystems.com>\n-\n-\t* configure.in (sparc64-*-netbsd*): Add target.\n-\t(sparc-*-netbsdelf*): Likewise.\n-\t* configure: Regenerate.\n-\n-2002-04-28  David S. Miller  <davem@redhat.com>\n-\n-\t* configure.in, configure: Fix SPARC test in previous change.\n-\n-2002-04-29  Gerhard Tonn  <GerhardTonn@swol.de>\n-\n-\t* Makefile.am: Add Linux for S/390 support.\n-\t* Makefile.in: Regenerate.\n-\t* configure.in: Add Linux for S/390 support.\n-\t* configure: Regenerate.\n-\t* include/ffi.h.in: Add Linux for S/390 support.\n-\t* src/s390/ffi.c: New file from libffi CVS tree.\n-\t* src/s390/sysv.S: New file from libffi CVS tree.\n-\n-2002-04-28  Jakub Jelinek  <jakub@redhat.com>\n-\n-\t* configure.in (HAVE_AS_SPARC_UA_PCREL): Check for working\n-\t%r_disp32().\n-\t* src/sparc/v8.S: Use it.\n-\t* src/sparc/v9.S: Likewise.\n-\t* fficonfig.h.in: Rebuilt.\n-\t* configure: Rebuilt.\n-\n-2002-04-08  Hans Boehm  <Hans_Boehm@hp.com>\n-\n-\t* src/java_raw_api.c (ffi_java_raw_size): Handle FFI_TYPE_DOUBLE\n-\tcorrectly.\n-\t* src/ia64/unix.S: Add unwind information. Fix comments.\n-\tSave sp in a way that's compatible with unwind info.\n-\t(ffi_call_unix): Correctly restore sp in all cases.\n-\t* src/ia64/ffi.c: Add, fix comments.\n-\n-2002-04-08  Jakub Jelinek  <jakub@redhat.com>\n-\n-\t* src/sparc/v8.S: Make .eh_frame dependent on target word size.\n-\n-2002-04-06  Jason Thorpe  <thorpej@wasabisystems.com>\n-\n-\t* configure.in (alpha*-*-netbsd*): Add target.\n-\t* configure: Regenerate.\n-\n-2002-04-04  Jeff Sturm  <jsturm@one-point.com>\n-\n-\t* src/sparc/v8.S: Add unwind info.\n-\t* src/sparc/v9.S: Likewise.\n-\n-2002-03-30  Krister Walfridsson  <cato@df.lth.se>\n-\n-\t* configure.in: Enable i*86-*-netbsdelf*.\n-\t* configure: Rebuilt.\n-\n-2002-03-29  David Billinghurst <David.Billinghurst@riotinto.com>\n-\n-\tPR other/2620\n-\t* src/mips/n32.s: Delete\n-\t* src/mips/o32.s: Delete\n-\n-2002-03-21  Loren J. Rittle  <ljrittle@acm.org>\n-\n-\t* configure.in: Enable alpha*-*-freebsd*.\n-\t* configure: Rebuilt.\n-\n-2002-03-17  Bryce McKinlay  <bryce@waitaki.otago.ac.nz>\n-\n-\t* Makefile.am: libfficonvenience -> libffi_convenience.\n-\t* Makefile.in: Rebuilt.\n-\n-\t* Makefile.am: Define ffitest_OBJECTS.\n-\t* Makefile.in: Rebuilt.\n-\n-2002-03-07  Andreas Tobler  <toa@pop.agri.ch>\n-\t    David Edelsohn  <edelsohn@gnu.org>\n-\n-\t* Makefile.am (EXTRA_DIST): Add Darwin and AIX closure files.\n-\t(TARGET_SRC_POWERPC_AIX): Add aix_closure.S.\n-\t(TARGET_SRC_POWERPC_DARWIN): Add darwin_closure.S.\n-\t* Makefile.in: Regenerate.\n-\t* include/ffi.h.in: Add AIX and Darwin closure definitions.\n-\t* src/powerpc/ffi_darwin.c (ffi_prep_closure): New function.\n-\t(flush_icache, flush_range): New functions.\n-\t(ffi_closure_helper_DARWIN): New function.\n-\t* src/powerpc/aix_closure.S: New file.\n-\t* src/powerpc/darwin_closure.S: New file.\n-\n-2002-02-24  Jeff Sturm  <jsturm@one-point.com>\n-\n-\t* include/ffi.h.in: Add typedef for ffi_arg.\n-\t* src/ffitest.c (main): Declare rint with ffi_arg.\n-\n-2002-02-21  Andreas Tobler  <toa@pop.agri.ch>\n-\n-\t* src/powerpc/ffi_darwin.c (ffi_prep_args): Skip appropriate\n-\tnumber of GPRs for floating-point arguments.\n-\n-2002-01-31  Anthony Green  <green@redhat.com>\n-\n-\t* configure: Rebuilt.\n-\t* configure.in: Replace CHECK_SIZEOF and endian tests with\n-\tcross-compiler friendly macros.\n-\t* aclocal.m4 (AC_COMPILE_CHECK_SIZEOF, AC_C_BIGENDIAN_CROSS): New\n-\tmacros.\n-\n-2002-01-18  David Edelsohn  <edelsohn@gnu.org>\n-\n-\t* src/powerpc/darwin.S (_ffi_call_AIX): New.\n-\t* src/powerpc/aix.S (ffi_call_DARWIN): New.\n-\n-2002-01-17  David Edelsohn  <edelsohn@gnu.org>\n-\n-\t* Makefile.am (EXTRA_DIST): Add Darwin and AIX files.\n-\t(TARGET_SRC_POWERPC_AIX): New.\n-\t(POWERPC_AIX): New stanza.\n-\t* Makefile.in: Regenerate.\n-\t* configure.in: Add AIX case.\n-\t* configure: Regenerate.\n-\t* include/ffi.h.in (ffi_abi): Add FFI_AIX.\n-\t* src/powerpc/ffi_darwin.c (ffi_status): Use \"long\" to scale frame\n-\tsize.  Fix \"long double\" support.\n-\t(ffi_call): Add FFI_AIX case.\n-\t* src/powerpc/aix.S: New.\n-\n-2001-10-09  John Hornkvist  <john@toastedmarshmallow.com>\n-\n-\tImplement Darwin PowerPC ABI.\n-\t* configure.in: Handle powerpc-*-darwin*.\n-\t* Makefile.am: Set source files for POWERPC_DARWIN.\n-\t* configure: Rebuilt.\n-\t* Makefile.in: Rebuilt.\n-\t* include/ffi.h.in: Define FFI_DARWIN and FFI_DEFAULT_ABI for\n-\tPOWERPC_DARWIN.\n-\t* src/powerpc/darwin.S: New file.\n-\t* src/powerpc/ffi_darwin.c: New file.\n-\n-2001-10-07  Joseph S. Myers  <jsm28@cam.ac.uk>\n-\n-\t* src/x86/ffi.c: Fix spelling error of \"separate\" as \"seperate\".\n-\n-2001-07-16  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n-\n-\t* src/x86/sysv.S: Avoid gas-only .balign directive.\n-\tUse C style comments.\n-\n-2001-07-16  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n-\n-\t* src/alpha/ffi.c (ffi_prep_closure): Avoid gas-only mnemonic.\n-\tFixes PR bootstrap/3563.\n-\n-2001-06-26  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n-\n-\t* src/alpha/osf.S (ffi_closure_osf): Use .rdata for ECOFF.\n-\n-2001-06-25  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n-\n-\t* configure.in: Recognize sparc*-sun-* host.\n-\t* configure: Regenerate.\n-\n-2001-06-06  Andrew Haley  <aph@redhat.com>\n-\n-\t* src/alpha/osf.S (__FRAME_BEGIN__): Conditionalize for ELF.\n-\n-2001-06-03  Andrew Haley  <aph@redhat.com>\n-\n-\t* src/alpha/osf.S: Add unwind info.\n-\t* src/powerpc/sysv.S: Add unwind info.\n-\t* src/powerpc/ppc_closure.S: Likewise.\n-\n-2000-05-31  Jeff Sturm  <jsturm@one-point.com>\n-\n-\t* configure.in: Fix AC_ARG_ENABLE usage.\n-\t* configure: Rebuilt.\n-\n-2001-05-06  Bryce McKinlay  <bryce@waitaki.otago.ac.nz>\n-\n-\t* configure.in: Remove warning about beta code.\n-\t* configure: Rebuilt.\n-\n-2001-04-25  Hans Boehm <Hans_Boehm@hp.com>\n-\n-\t* src/ia64/unix.S: Restore stack pointer when returning from\n-\tffi_closure_UNIX.\n-\t* src/ia64/ffi.c: Fix typo in comment.\n-\n-2001-04-18  Jim Wilson  <wilson@redhat.com>\n-\n-\t* src/ia64/unix.S: Delete unnecessary increment and decrement of loc2\n-\tto eliminate RAW DV.\n-\n-2001-04-12  Bryce McKinlay  <bryce@albatross.co.nz>\n-\n-\t* Makefile.am: Make a libtool convenience library.\n-\t* Makefile.in: Rebuilt.\n-\n-2001-03-29  Bryce McKinlay  <bryce@albatross.co.nz>\n-\n-\t* configure.in: Use different syntax for subdirectory creation.\n-\t* configure: Rebuilt.\n-\n-2001-03-27  Jon Beniston  <jon@beniston.com>\n-\n-\t* configure.in: Added X86_WIN32 target (Win32, CygWin, MingW).\n-\t* configure: Rebuilt.\n-\t* Makefile.am: Added X86_WIN32 target support.\n-\t* Makefile.in: Rebuilt.\n-\n-\t* include/ffi.h.in: Added X86_WIN32 target support.\n-\n-\t* src/ffitest.c: Doesn't run structure tests for X86_WIN32 targets.\n-\t* src/types.c: Added X86_WIN32 target support.\n-\n-\t* src/x86/win32.S: New file. Based on sysv.S, but with EH\n-\tstuff removed and made to work with CygWin's gas.\n-\n-2001-03-26  Bryce McKinlay  <bryce@albatross.co.nz>\n-\n-\t* configure.in: Make target subdirectory in build dir.\n-\t* Makefile.am: Override suffix based rules to specify correct output\n-\tsubdirectory.\n-\t* Makefile.in: Rebuilt.\n-\t* configure: Rebuilt.\n-\n-2001-03-23  Kevin B Hendricks  <khendricks@ivey.uwo.ca>\n-\n-\t* src/powerpc/ppc_closure.S: New file.\n-\t* src/powerpc/ffi.c (ffi_prep_args): Fixed ABI compatibility bug\n-\tinvolving long long and register pairs.\n-\t(ffi_prep_closure): New function.\n-\t(flush_icache): Likewise.\n-\t(ffi_closure_helper_SYSV): Likewise.\n-\t* include/ffi.h.in (FFI_CLOSURES): Define on PPC.\n-\t(FFI_TRAMPOLINE_SIZE): Likewise.\n-\t(FFI_NATIVE_RAW_API): Likewise.\n-\t* Makefile.in: Rebuilt.\n-\t* Makefile.am (EXTRA_DIST): Added src/powerpc/ppc_closure.S.\n-\t(TARGET_SRC_POWERPC): Likewise.\n-\n-2001-03-19  Tom Tromey  <tromey@redhat.com>\n-\n-\t* Makefile.in: Rebuilt.\n-\t* Makefile.am (ffitest_LDFLAGS): New macro.\n-\n-2001-03-02  Nick Clifton  <nickc@redhat.com>\n-\n-\t* include/ffi.h.in: Remove RCS ident string.\n-\t* include/ffi_mips.h: Remove RCS ident string.\n-\t* src/debug.c: Remove RCS ident string.\n-\t* src/ffitest.c: Remove RCS ident string.\n-\t* src/prep_cif.c: Remove RCS ident string.\n-\t* src/types.c: Remove RCS ident string.\n-\t* src/alpha/ffi.c: Remove RCS ident string.\n-\t* src/alpha/osf.S: Remove RCS ident string.\n-\t* src/arm/ffi.c: Remove RCS ident string.\n-\t* src/arm/sysv.S: Remove RCS ident string.\n-\t* src/mips/ffi.c: Remove RCS ident string.\n-\t* src/mips/n32.S: Remove RCS ident string.\n-\t* src/mips/o32.S: Remove RCS ident string.\n-\t* src/sparc/ffi.c: Remove RCS ident string.\n-\t* src/sparc/v8.S: Remove RCS ident string.\n-\t* src/sparc/v9.S: Remove RCS ident string.\n-\t* src/x86/ffi.c: Remove RCS ident string.\n-\t* src/x86/sysv.S: Remove RCS ident string.\n-\n-2001-02-08  Joseph S. Myers  <jsm28@cam.ac.uk>\n-\n-\t* include/ffi.h.in: Change sourceware.cygnus.com references to\n-\tgcc.gnu.org.\n-\n-2000-12-09  Richard Henderson  <rth@redhat.com>\n-\n-\t* src/alpha/ffi.c (ffi_call): Simplify struct return test.\n-\t(ffi_closure_osf_inner): Index rather than increment avalue\n-\tand arg_types.  Give ffi_closure_osf the raw return value type.\n-\t* src/alpha/osf.S (ffi_closure_osf): Handle return value type\n-\tpromotion.\n-\n-2000-12-07  Richard Henderson  <rth@redhat.com>\n-\n-\t* src/raw_api.c (ffi_translate_args): Fix typo.\n-\t(ffi_prep_closure): Likewise.\n-\n-\t* include/ffi.h.in [ALPHA]: Define FFI_CLOSURES and\n-\tFFI_TRAMPOLINE_SIZE.\n-\t* src/alpha/ffi.c (ffi_prep_cif_machdep): Adjust minimal\n-\tcif->bytes for new ffi_call_osf implementation.\n-\t(ffi_prep_args): Absorb into ...\n-\t(ffi_call): ... here.  Do all stack allocation here and\n-\tavoid a callback function.\n-\t(ffi_prep_closure, ffi_closure_osf_inner): New.\n-\t* src/alpha/osf.S (ffi_call_osf): Reimplement with no callback.\n-\t(ffi_closure_osf): New.\n-\n-2000-09-10  Alexandre Oliva  <aoliva@redhat.com>\n-\n-\t* config.guess, config.sub, install-sh: Removed.\n-\t* ltconfig, ltmain.sh, missing, mkinstalldirs: Likewise.\n-\t* Makefile.in: Rebuilt.\n-\n-\t* acinclude.m4: Include libtool macros from the top level.\n-\t* aclocal.m4, configure: Rebuilt.\n-\n-2000-08-22  Alexandre Oliva  <aoliva@redhat.com>\n-\n-\t* configure.in [i*86-*-freebsd*] (TARGET, TARGETDIR): Set.\n-\t* configure: Rebuilt.\n-\n-2000-05-11  Scott Bambrough  <scottb@netwinder.org>\n-\n-\t* libffi/src/arm/sysv.S (ffi_call_SYSV): Doubles are not saved to\n-\tmemory correctly.  Use conditional instructions, not branches where\n-\tpossible.\n-\n-2000-05-04  Tom Tromey  <tromey@cygnus.com>\n-\n-\t* configure: Rebuilt.\n-\t* configure.in: Match `arm*-*-linux-*'.\n-\tFrom Chris Dornan <cdornan@arm.com>.\n-\n-2000-04-28  Jakub Jelinek  <jakub@redhat.com>\n-\n-\t* Makefile.am (SUBDIRS): Define.\n-\t(AM_MAKEFLAGS): Likewise.\n-\t(Multilib support.): Add section.\n-\t* Makefile.in: Rebuilt.\n-\t* ltconfig (extra_compiler_flags, extra_compiler_flags_value):\n-\tNew variables. Set for gcc using -print-multi-lib. Export them\n-\tto libtool.\n-\t(sparc64-*-linux-gnu*): Use libsuff 64 for search paths.\n-\t* ltmain.sh (B|b|V): Don't throw away gcc's -B, -b and -V options\n-\tfor -shared links.\n-\t(extra_compiler_flags_value, extra_compiler_flags): Check these\n-\tfor extra compiler options which need to be passed down in\n-\tcompiler_flags.\n-\n-2000-04-16  Anthony Green  <green@redhat.com>\n-\n-\t* configure: Rebuilt.\n-\t* configure.in: Change i*86-pc-linux* to i*86-*-linux*.\n-\n-2000-04-14  Jakub Jelinek  <jakub@redhat.com>\n-\n-\t* include/ffi.h.in (SPARC64): Define for 64bit SPARC builds.\n-\tSet SPARC FFI_DEFAULT_ABI based on SPARC64 define.\n-\t* src/sparc/ffi.c (ffi_prep_args_v8): Renamed from ffi_prep_args.\n-\tReplace all void * sizeofs with sizeof(int).\n-\tOnly compare type with FFI_TYPE_LONGDOUBLE if LONGDOUBLE is\n-\tdifferent than DOUBLE.\n-\tRemove FFI_TYPE_SINT32 and FFI_TYPE_UINT32 cases (handled elsewhere).\n-\t(ffi_prep_args_v9): New function.\n-\t(ffi_prep_cif_machdep): Handle V9 ABI and long long on V8.\n-\t(ffi_V9_return_struct): New function.\n-\t(ffi_call): Handle FFI_V9 ABI from 64bit code and FFI_V8 ABI from\n-\t32bit code (not yet cross-arch calls).\n-\t* src/sparc/v8.S: Add struct return delay nop.\n-\tHandle long long.\n-\t* src/sparc/v9.S: New file.\n-\t* src/prep_cif.c (ffi_prep_cif): Return structure pointer\n-\tis used on sparc64 only for structures larger than 32 bytes.\n-\tPass by reference for structures is done for structure arguments\n-\tlarger than 16 bytes.\n-\t* src/ffitest.c (main): Use 64bit rint on sparc64.\n-\tRun long long tests on sparc.\n-\t* src/types.c (FFI_TYPE_POINTER): Pointer is 64bit on alpha and\n-\tsparc64.\n-\t(FFI_TYPE_LONGDOUBLE): long double is 128 bit aligned to 128 bits\n-\ton sparc64.\n-\t* configure.in (sparc-*-linux*): New supported target.\n-\t(sparc64-*-linux*): Likewise.\n-\t* configure: Rebuilt.\n-\t* Makefile.am: Add v9.S to SPARC files.\n-\t* Makefile.in: Likewise.\n-\t(LINK): Surround $(CCLD) into double quotes, so that multilib\n-\tcompiles work correctly.\n-\n-2000-04-04  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n-\n-\t* configure: Rebuilt.\n-\t* configure.in: (i*86-*-solaris*): New libffi target. Patch\n-\tproposed by Bryce McKinlay.\n-\n-2000-03-20  Tom Tromey  <tromey@cygnus.com>\n-\n-\t* Makefile.in: Hand edit for java_raw_api.lo.\n-\n-2000-03-08  Bryce McKinlay  <bryce@albatross.co.nz>\n-\n-\t* config.guess, config.sub: Update from the gcc tree.\n-\tFix for PR libgcj/168.\n-\n-2000-03-03  Tom Tromey  <tromey@cygnus.com>\n-\n-\t* Makefile.in: Fixed ia64 by hand.\n-\n-\t* configure: Rebuilt.\n-\t* configure.in (--enable-multilib): New option.\n-\t(libffi_basedir): New subst.\n-\t(AC_OUTPUT): Added multilib code.\n-\n-2000-03-02  Tom Tromey  <tromey@cygnus.com>\n-\n-\t* Makefile.in: Rebuilt.\n-\t* Makefile.am (TARGET_SRC_IA64): Use `ia64', not `alpha', as\n-\tdirectory name.\n-\n-2000-02-25  Hans Boehm <boehm@acm.org>\n-\n-\t* src/ia64/ffi.c, src/ia64/ia64_flags.h, src/ia64/unix.S: New\n-\tfiles.\n-\t* src/raw_api.c (ffi_translate_args): Fixed typo in argument\n-\tlist.\n-\t(ffi_prep_raw_closure): Use ffi_translate_args, not\n-\tffi_closure_translate.\n-\t* src/java_raw_api.c: New file.\n-\t* src/ffitest.c (closure_test_fn): New function.\n-\t(main): Define `rint' as long long on IA64.  Added new test when\n-\tFFI_CLOSURES is defined.\n-\t* include/ffi.h.in (ALIGN): Use size_t, not unsigned.\n-\t(ffi_abi): Recognize IA64.\n-\t(ffi_raw): Added `flt' field.\n-\tAdded \"Java raw API\" code.\n-\t* configure.in: Recognize ia64.\n-\t* Makefile.am (TARGET_SRC_IA64): New macro.\n-\t(libffi_la_common_SOURCES): Added java_raw_api.c.\n-\t(libffi_la_SOURCES): Define in IA64 case.\n-\n-2000-01-04  Tom Tromey  <tromey@cygnus.com>\n-\n-\t* Makefile.in: Rebuilt with newer automake.\n-\n-1999-12-31  Tom Tromey  <tromey@cygnus.com>\n-\n-\t* Makefile.am (INCLUDES): Added -I$(top_srcdir)/src.\n-\n-1999-09-01  Tom Tromey  <tromey@cygnus.com>\n-\n-\t* include/ffi.h.in: Removed PACKAGE and VERSION defines and\n-\tundefs.\n-\t* fficonfig.h.in: Rebuilt.\n-\t* configure: Rebuilt.\n-\t* configure.in: Pass 3rd argument to AM_INIT_AUTOMAKE.\n-\tUse AM_PROG_LIBTOOL (automake 1.4 compatibility).\n-\t* acconfig.h: Don't #undef PACKAGE or VERSION.\n-\n-1999-08-09  Anthony Green  <green@cygnus.com>\n-\n-\t* include/ffi.h.in: Try to work around messy header problem\n-\twith PACKAGE and VERSION.\n-\n-\t* configure: Rebuilt.\n-\t* configure.in: Change version to 2.00-beta.\n-\n-\t* fficonfig.h.in: Rebuilt.\n-\t* acconfig.h (FFI_NO_STRUCTS, FFI_NO_RAW_API): Define.\n-\n-\t* src/x86/ffi.c (ffi_raw_call): Rename.\n-\n-1999-08-02  Kresten Krab Thorup  <krab@dominiq.is.s.u-tokyo.ac.jp>\n-\n-\t* src/x86/ffi.c (ffi_closure_SYSV): New function.\n-\t(ffi_prep_incoming_args_SYSV): Ditto.\n-\t(ffi_prep_closure): Ditto.\n-\t(ffi_closure_raw_SYSV): Ditto.\n-\t(ffi_prep_raw_closure): More ditto.\n-\t(ffi_call_raw): Final ditto.\n-\n-\t* include/ffi.h.in: Add definitions for closure and raw API.\n-\n-\t* src/x86/ffi.c (ffi_prep_cif_machdep): Added case for\n-\tFFI_TYPE_UINT64.\n-\n-\t* Makefile.am (libffi_la_common_SOURCES): Added raw_api.c\n-\n-\t* src/raw_api.c: New file.\n-\n-\t* include/ffi.h.in (ffi_raw): New type.\n-\t(UINT_ARG, SINT_ARG): New defines.\n-\t(ffi_closure, ffi_raw_closure): New types.\n-\t(ffi_prep_closure, ffi_prep_raw_closure): New declarations.\n-\n-\t* configure.in: Add check for endianness and sizeof void*.\n-\n-\t* src/x86/sysv.S (ffi_call_SYSV): Call fixup routine via argument,\n-\tinstead of directly.\n-\n-\t* configure: Rebuilt.\n-\n-Thu Jul  8 14:28:42 1999  Anthony Green  <green@cygnus.com>\n-\n-\t* configure.in: Add x86 and powerpc BeOS configurations.\n-\tFrom Makoto Kato <m_kato@ga2.so-net.ne.jp>.\n-\n-1999-05-09  Anthony Green  <green@cygnus.com>\n-\n-\t* configure.in: Add warning about this being beta code.\n-\tRemove src/Makefile.am from the picture.\n-\t* configure: Rebuilt.\n-\n-\t* Makefile.am: Move logic from src/Makefile.am.  Add changes\n-\tto support libffi as a target library.\n-\t* Makefile.in: Rebuilt.\n-\n-\t* aclocal.m4, config.guess, config.sub, ltconfig, ltmain.sh:\n-\tUpgraded to new autoconf, automake, libtool.\n-\n-\t* README: Tweaks.\n-\n-\t* LICENSE: Update copyright date.\n-\n-\t* src/Makefile.am, src/Makefile.in: Removed.\n-\n-1998-11-29  Anthony Green  <green@cygnus.com>\n-\n-\t* include/ChangeLog: Removed.\n-\t* src/ChangeLog: Removed.\n-\t* src/mips/ChangeLog: Removed.\n-\t* src/sparc/ChangeLog: Remboved.\n-\t* src/x86/ChangeLog: Removed.\n-\n-\t* ChangeLog.v1: Created."}]}