{"sha": "f5896af2a6c84e23a0f159ee350ed8d4287bf3ca", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjU4OTZhZjJhNmM4NGUyM2EwZjE1OWVlMzUwZWQ4ZDQyODdiZjNjYQ==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@wolery.cumb.org", "date": "2000-07-12T20:01:02Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2000-07-12T20:01:02Z"}, "message": "gcc.c (C specs [!USE_CPPLIB]): Invoke tradcpp if any of -traditional, -ftraditional, or -traditional-cpp was given.\n\n\t* gcc.c (C specs [!USE_CPPLIB]): Invoke tradcpp if any of\n\t-traditional, -ftraditional, or -traditional-cpp was given.\n\tDo not pass -traditional to the preprocessor.\n\t(.S spec): Likewise.  Don't bother defining __ASSEMBLER__, the\n\tpreprocessor does it automatically.\n\t* objc/lang-specs.h: Likewise.  Don't bother defining __OBJC__.\n\n\t* ch/lang-specs.h: Always use tradcpp.  Do not pass\n\t-traditional, -trigraphs, or -pedantic to the preprocessor.\n\t* f/lang-specs.h (.F spec): Likewise.  Don't bother defining\n\t_LANGUAGE_FORTRAN.\n\nFrom-SVN: r34995", "tree": {"sha": "6034339347b83a8d61201f5f508c0321a020461c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6034339347b83a8d61201f5f508c0321a020461c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f5896af2a6c84e23a0f159ee350ed8d4287bf3ca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5896af2a6c84e23a0f159ee350ed8d4287bf3ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f5896af2a6c84e23a0f159ee350ed8d4287bf3ca", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5896af2a6c84e23a0f159ee350ed8d4287bf3ca/comments", "author": null, "committer": null, "parents": [{"sha": "0080e8929257ca9c0cceeb61e4d30c425b5c9c4b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0080e8929257ca9c0cceeb61e4d30c425b5c9c4b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0080e8929257ca9c0cceeb61e4d30c425b5c9c4b"}], "stats": {"total": 63, "additions": 35, "deletions": 28}, "files": [{"sha": "3d8a17efba3c61805a75b3e1518e3ae64b822214", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5896af2a6c84e23a0f159ee350ed8d4287bf3ca/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5896af2a6c84e23a0f159ee350ed8d4287bf3ca/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f5896af2a6c84e23a0f159ee350ed8d4287bf3ca", "patch": "@@ -1,3 +1,17 @@\n+2000-07-12  Zack Weinberg  <zack@wolery.cumb.org>\n+\n+\t* gcc.c (C specs [!USE_CPPLIB]): Invoke tradcpp if any of\n+\t-traditional, -ftraditional, or -traditional-cpp was given.\n+\tDo not pass -traditional to the preprocessor.              \n+\t(.S spec): Likewise.  Don't bother defining __ASSEMBLER__, the\n+\tpreprocessor does it automatically.\n+\t* objc/lang-specs.h: Likewise.  Don't bother defining __OBJC__.\n+\n+\t* ch/lang-specs.h: Always use tradcpp.  Do not pass\n+\t-traditional, -trigraphs, or -pedantic to the preprocessor.  \n+\t* f/lang-specs.h (.F spec): Likewise.  Don't bother defining\n+\t_LANGUAGE_FORTRAN.\n+\n 2000-07-12  Zack Weinberg  <zack@wolery.cumb.org>\n \n \t* cppexp.c (LOGICAL): Delete macro."}, {"sha": "9d286a04df05b7131233249556f6d3b25bcc8c9e", "filename": "gcc/ch/lang-specs.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5896af2a6c84e23a0f159ee350ed8d4287bf3ca/gcc%2Fch%2Flang-specs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5896af2a6c84e23a0f159ee350ed8d4287bf3ca/gcc%2Fch%2Flang-specs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fch%2Flang-specs.h?ref=f5896af2a6c84e23a0f159ee350ed8d4287bf3ca", "patch": "@@ -24,13 +24,13 @@ Boston, MA 02111-1307, USA.  */\n   {\".ch\",  {\"@chill\"}},\n   {\".chi\", {\"@chill\"}},\n   {\"@chill\",\n-     {\"cpp -lang-chill %{nostdinc*} %{C} %{v} %{A*} %{I*} %{P} %{$} %I\\\n+     {\"tradcpp -lang-chill %{nostdinc*} %{C} %{v} %{A*} %{I*} %{P} %{$} %I\\\n \t%{C:%{!E:%eGNU CHILL does not support -C without using -E}}\\\n         %{!no-gcc:-D__GNUCHILL__=%v1 -D__GNUC_MINOR__=%v2 -D__GNUC_PATCHLEVEL__=%v3}\\\n-        %c %{Os:-D__OPTIMIZE_SIZE__} %{O*:-D__OPTIMIZE__} %{traditional} %{ftraditional:-traditional}\\\n-        %{traditional-cpp:-traditional} %{!undef:%{!ansi:%p} %P} %{trigraphs}\\\n+        %c %{Os:-D__OPTIMIZE_SIZE__} %{O*:-D__OPTIMIZE__} \\\n+\t%{!undef:%{!ansi:%p} %P} \\\n \t%{fshow-column} %{fno-show-column}\\\n-\t%{g*} %{W*} %{w} %{pedantic*} %{H} %{d*} %C %{D*} %{U*} %{i*} %Z\\\n+\t%{g*} %{W*} %{w} %{H} %{d*} %C %{D*} %{U*} %{i*} %Z\\\n         %i %{!E:%g.i}%{E:%W{o*}} \\n\",\n    \"%{!E:cc1chill %g.i %1 \\\n \t\t   %{!Q:-quiet} -dumpbase %b.ch %{d*} %{m*} %{a}\\"}, {"sha": "bca41d3370c8d303a5d3fa017c0cc68821a8b288", "filename": "gcc/f/lang-specs.h", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5896af2a6c84e23a0f159ee350ed8d4287bf3ca/gcc%2Ff%2Flang-specs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5896af2a6c84e23a0f159ee350ed8d4287bf3ca/gcc%2Ff%2Flang-specs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Flang-specs.h?ref=f5896af2a6c84e23a0f159ee350ed8d4287bf3ca", "patch": "@@ -35,15 +35,13 @@ the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n \tSun f77, at least) so you test `__unix' rather than `unix'.\n \t-D_LANGUAGE_FORTRAN is used by some compilers like SGI and\n \tmight as well be in there. */\n-   {\"cpp -lang-fortran %{nostdinc*} %{C} %{v} %{A*} %{I*} %{P} %{$} %I\\\n+   {\"tradcpp -lang-fortran %{nostdinc*} %{C} %{v} %{A*} %{I*} %{P} %{$} %I\\\n \t%{C:%{!E:%eGNU C does not support -C without using -E}}\\\n \t%{M} %{MM} %{MD:-MD %b.d} %{MMD:-MMD %b.d} %{MG}\\\n \t%{!no-gcc:-D__GNUC__=%v1 -D__GNUC_MINOR__=%v2 -D__GNUC_PATCHLEVEL__=%v3}\\\n-\t%{ansi:-trigraphs -$ -D__STRICT_ANSI__}\\\n-\t%{!undef:%P} -D_LANGUAGE_FORTRAN %{trigraphs} \\\n-\t%c %{Os:-D__OPTIMIZE_SIZE__} %{O*:%{!O0:-D__OPTIMIZE__}} -traditional\\\n+\t%{!undef:%P} \\\n+\t%c %{Os:-D__OPTIMIZE_SIZE__} %{O*:%{!O0:-D__OPTIMIZE__}} \\\n \t%{ffast-math:-D__FAST_MATH__}\\\n-\t%{fshow-column} %{fno-show-column}\\\n \t%{g*} %{W*} %{w} %{pedantic*} %{H} %{d*} %C %{D*} %{U*} %{i*} %Z\\\n \t%i %{!M:%{!MM:%{!E:%{!pipe:%g.i}}}}%{E:%W{o*}}%{M:%W{o*}}%{MM:%W{o*}} |\\n\",\n     \"%{!M:%{!MM:%{!E:f771 %{!pipe:%g.i} %1 %(f771) \\\n@@ -86,7 +84,7 @@ the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n \t\t      %{c:%W{o*}%{!o*:-o %w%b%O}}%{!c:-o %d%w%u%O}\\\n \t\t      %{!pipe:%g.s} %A\\n }}}}\"}},\n   {\"@f77-version\",\n-   {\"cpp -lang-fortran %{nostdinc*} %{C} %{v} %{A*} %{I*} %{P} %{$} %I \\\n+   {\"tradcpp -lang-fortran %{nostdinc*} %{C} %{v} %{A*} %{I*} %{P} %{$} %I \\\n       %{C:%{!E:%eGNU C does not support -C without using -E}} \\\n       %{M} %{MM} %{MD:-MD %b.d} %{MMD:-MMD %b.d} %{MG} \\\n       %{!no-gcc:-D__GNUC__=%v1 -D__GNUC_MINOR__=%v2 -D__GNUC_PATCHLEVEL__=%v3} \\"}, {"sha": "a917e5d9759e9e695395df5a6082554783ae97bf", "filename": "gcc/gcc.c", "status": "modified", "additions": 9, "deletions": 13, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5896af2a6c84e23a0f159ee350ed8d4287bf3ca/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5896af2a6c84e23a0f159ee350ed8d4287bf3ca/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=f5896af2a6c84e23a0f159ee350ed8d4287bf3ca", "patch": "@@ -660,7 +660,8 @@ static struct compiler default_compilers[] =\n \t\t     %{c:%W{o*}%{!o*:-o %w%b%O}}%{!c:-o %d%w%u%O}\\\n                      %{!pipe:%g.s} %A\\n }}}}\"\n #else /* ! USE_CPPLIB */\n-    \"cpp -lang-c %{ansi:-std=c89} %{std*} %{nostdinc*}\\\n+    \"%{traditional|ftraditional|traditional-cpp:trad}cpp -lang-c \\\n+\t%{ansi:-std=c89} %{std*} %{nostdinc*}\\\n \t%{C} %{v} %{A*} %{I*} %{P} %{$} %I\\\n \t%{C:%{!E:%eGNU C does not support -C without using -E}}\\\n \t%{M} %{MM} %{MD:-MD %b.d} %{MMD:-MMD %b.d} %{MG}\\\n@@ -669,8 +670,6 @@ static struct compiler default_compilers[] =\n         %c %{Os:-D__OPTIMIZE_SIZE__} %{O*:%{!O0:-D__OPTIMIZE__}}\\\n \t%{ffast-math:-D__FAST_MATH__}\\\n \t%{fshort-wchar:-D__WCHAR_TYPE__=short\\\\ unsigned\\\\ int}\\\n-        %{traditional} %{ftraditional:-traditional}\\\n-        %{traditional-cpp:-traditional}\\\n \t%{fshow-column} %{fno-show-column}\\\n \t%{fleading-underscore} %{fno-leading-underscore}\\\n \t%{g*} %{W*} %{w} %{pedantic*} %{H} %{d*} %C %{D*} %{U*} %{i*} %Z\\\n@@ -689,7 +688,8 @@ static struct compiler default_compilers[] =\n #endif /* ! USE_CPPLIB */\n   }},\n   {\"-\",\n-   {\"%{E:cpp -lang-c %{ansi:-std=c89} %{std*} %{nostdinc*}\\\n+   {\"%{E:%{traditional|ftraditional|traditional-cpp:trad}cpp \\\n+        -lang-c %{ansi:-std=c89} %{std*} %{nostdinc*}\\\n \t%{C} %{v} %{A*} %{I*} %{P} %{$} %I\\\n \t%{C:%{!E:%eGNU C does not support -C without using -E}}\\\n \t%{M} %{MM} %{MD:-MD %b.d} %{MMD:-MMD %b.d} %{MG}\\\n@@ -698,8 +698,6 @@ static struct compiler default_compilers[] =\n         %c %{Os:-D__OPTIMIZE_SIZE__} %{O*:%{!O0:-D__OPTIMIZE__}}\\\n \t%{ffast-math:-D__FAST_MATH__}\\\n \t%{fshort-wchar:-D__WCHAR_TYPE__=short\\\\ unsigned\\\\ int}\\\n-        %{traditional} %{ftraditional:-traditional}\\\n-        %{traditional-cpp:-traditional}\\\n \t%{fshow-column} %{fno-show-column}\\\n \t%{fleading-underscore} %{fno-leading-underscore}\\\n \t%{g*} %{W*} %{w} %{pedantic*} %{H} %{d*} %C %{D*} %{U*} %{i*} %Z\\\n@@ -708,7 +706,8 @@ static struct compiler default_compilers[] =\n   {\".h\", {\"@c-header\"}},\n   {\"@c-header\",\n    {\"%{!E:%eCompilation of header file requested} \\\n-    cpp %{nostdinc*} %{C} %{v} %{A*} %{I*} %{P} %{$} %I\\\n+     %{traditional|ftraditional|traditional-cpp:trad}cpp \\\n+\t%{nostdinc*} %{C} %{v} %{A*} %{I*} %{P} %{$} %I\\\n \t%{C:%{!E:%eGNU C does not support -C without using -E}}\\\n \t%{M} %{MM} %{MD:-MD %b.d} %{MMD:-MMD %b.d} %{MG}\\\n         %{!no-gcc:-D__GNUC__=%v1 -D__GNUC_MINOR__=%v2 -D__GNUC_PATCHLEVEL__=%v3}\\\n@@ -717,8 +716,6 @@ static struct compiler default_compilers[] =\n \t%{ffast-math:-D__FAST_MATH__}\\\n \t%{fshort-wchar:-D__WCHAR_TYPE__=short\\\\ unsigned\\\\ int}\\\n \t%{fshort-wchar:-D__WCHAR_TYPE__=short\\\\ unsigned\\\\ int}\\\n-        %{traditional} %{ftraditional:-traditional}\\\n-        %{traditional-cpp:-traditional}\\\n \t%{fshow-column} %{fno-show-column}\\\n \t%{fleading-underscore} %{fno-leading-underscore}\\\n \t%{g*} %{W*} %{w} %{pedantic*} %{H} %{d*} %C %{D*} %{U*} %{i*} %Z\\\n@@ -741,15 +738,14 @@ static struct compiler default_compilers[] =\n \t\t\t    %i %A\\n }}}}\"}},\n   {\".S\", {\"@assembler-with-cpp\"}},\n   {\"@assembler-with-cpp\",\n-   {\"cpp -lang-asm %{nostdinc*} %{C} %{v} %{A*} %{I*} %{P} %{$} %I\\\n+   {\"%{traditional|ftraditional|traditional-cpp:trad}cpp -lang-asm \\\n+\t%{nostdinc*} %{C} %{v} %{A*} %{I*} %{P} %{$} %I\\\n \t%{C:%{!E:%eGNU C does not support -C without using -E}}\\\n \t%{M} %{MM} %{MD:-MD %b.d} %{MMD:-MMD %b.d} %{MG} %{trigraphs}\\\n-        -$ %{!undef:%p %P} -D__ASSEMBLER__ \\\n+        -$ %{!undef:%p %P} \\\n         %c %{Os:-D__OPTIMIZE_SIZE__} %{O*:%{!O0:-D__OPTIMIZE__}}\\\n \t%{ffast-math:-D__FAST_MATH__}\\\n \t%{fshort-wchar:-D__WCHAR_TYPE__=short\\\\ unsigned\\\\ int}\\\n-        %{traditional} %{ftraditional:-traditional}\\\n-        %{traditional-cpp:-traditional}\\\n \t%{fshow-column} %{fno-show-column}\\\n \t%{fleading-underscore} %{fno-leading-underscore}\\\n \t%{g*} %{W*} %{w} %{pedantic*} %{H} %{d*} %C %{D*} %{U*} %{i*} %Z\\"}, {"sha": "992e973953a09b6c0cc79e2c06f2b38a64ff3f03", "filename": "gcc/objc/lang-specs.h", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5896af2a6c84e23a0f159ee350ed8d4287bf3ca/gcc%2Fobjc%2Flang-specs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5896af2a6c84e23a0f159ee350ed8d4287bf3ca/gcc%2Fobjc%2Flang-specs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Flang-specs.h?ref=f5896af2a6c84e23a0f159ee350ed8d4287bf3ca", "patch": "@@ -57,17 +57,16 @@ Boston, MA 02111-1307, USA.  */\n \t%{c:%W{o*}%{!o*:-o %w%b%O}}%{!c:-o %d%w%u%O}\\\n         %{!pipe:%g.s} %A\\n }}}}\"}\n #else /* ! USE_CPPLIB */\n-   {\"cpp -lang-objc %{nostdinc*} %{C} %{v} %{A*} %{I*} %{P} %{$} %I\\\n+   {\"%{traditional|ftraditional|traditional-cpp:trad}cpp -lang-objc \\\n+\t%{nostdinc*} %{C} %{v} %{A*} %{I*} %{P} %{$} %I\\\n \t%{C:%{!E:%eGNU C does not support -C without using -E}}\\\n \t%{M} %{MM} %{MD:-MD %b.d} %{MMD:-MMD %b.d} %{MG}\\\n-        -D__OBJC__ %{!no-gcc:-D__GNUC__=%v1 -D__GNUC_MINOR__=%v2\\\n+        %{!no-gcc:-D__GNUC__=%v1 -D__GNUC_MINOR__=%v2 \\\n         -D__GNUC_PATCHLEVEL__=%v3}\\\n-\t %{ansi:-trigraphs -D__STRICT_ANSI__}\\\n+\t%{ansi:-trigraphs -D__STRICT_ANSI__}\\\n \t%{!undef:%{!ansi:%p} %P} %{trigraphs}\\\n         %c %{Os:-D__OPTIMIZE_SIZE__} %{O*:%{!O0:-D__OPTIMIZE__}}\\\n \t%{ffast-math:-D__FAST_MATH__}\\\n-        %{traditional} %{ftraditional:-traditional}\\\n-        %{traditional-cpp:-traditional}\\\n \t%{fleading-underscore} %{fno-leading-underscore}\\\n \t%{fshow-column} %{fno-show-column}\\\n \t%{g*} %{W*} %{w} %{pedantic*} %{H} %{d*} %C %{D*} %{U*} %{i*} %Z\\"}]}