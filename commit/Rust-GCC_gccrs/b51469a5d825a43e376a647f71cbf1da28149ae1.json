{"sha": "b51469a5d825a43e376a647f71cbf1da28149ae1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjUxNDY5YTVkODI1YTQzZTM3NmE2NDdmNzFjYmYxZGEyODE0OWFlMQ==", "commit": {"author": {"name": "Maxim Kuvyrkov", "email": "maxim@codesourcery.com", "date": "2008-06-18T07:39:45Z"}, "committer": {"name": "Maxim Kuvyrkov", "email": "mkuvyrkov@gcc.gnu.org", "date": "2008-06-18T07:39:45Z"}, "message": "mips.h (ISA_HAS_CONDMOVE): Slice ISA_HAS_FP_CONDMOVE from it.\n\n\t* config/mips/mips.h (ISA_HAS_CONDMOVE): Slice ISA_HAS_FP_CONDMOVE\n\tfrom it.\n\t(ISA_HAS_FP_CONDMOVE): New macro.\n\t(ISA_HAS_FP_MADD4_MSUB4, ISA_HAS_FP_MADD3_MSUB3): New macros.\n\t(ISA_HAS_NMADD_NMSUB): Rename to ISA_HAS_NMADD4_NMSUB4.\n\t(ISA_HAS_NMADD3_NMSUB3): New macro.\n\t* config/mips/mips.c (mips_rtx_costs): Update.\n\t* config/mips/mips.md (MOVECC): Don't use FP conditional moves when\n\tcompiling for ST Loongson 2E/2F.\n\t(madd<mode>): Rename to madd4<mode>.  Update.\n\t(madd3<mode>): New pattern.\n\t(msub<mode>): Rename to msub4<mode>.  Update.\n\t(msub3<mode>): New pattern.\n\t(nmadd<mode>): Rename to nmadd4<mode>.  Update.\n\t(nmadd3<mode>): New pattern.\n\t(nmadd<mode>_fastmath): Rename to nmadd4<mode>_fastmath.  Update.\n\t(nmadd3<mode>_fastmath): New pattern.\n\t(nmsub<mode>): Rename to nmsub4<mode>.  Update.\n\t(nmsub3<mode>): New pattern.\n\t(nmsub<mode>_fastmath): Rename to nmsub4<mode>_fastmath.  Update.\n\t(nmsub3<mode>_fastmath): New pattern.\n\t(mov<SCALARF:mode>_on_<MOVECC:mode>, mov<mode>cc): Update.\n\nFrom-SVN: r136887", "tree": {"sha": "6b4bdefb436d7e580a0b7958ddea7756eda18028", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6b4bdefb436d7e580a0b7958ddea7756eda18028"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b51469a5d825a43e376a647f71cbf1da28149ae1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b51469a5d825a43e376a647f71cbf1da28149ae1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b51469a5d825a43e376a647f71cbf1da28149ae1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b51469a5d825a43e376a647f71cbf1da28149ae1/comments", "author": null, "committer": null, "parents": [{"sha": "50e94c7e583d2be25b1f940923fa01203aac65c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50e94c7e583d2be25b1f940923fa01203aac65c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/50e94c7e583d2be25b1f940923fa01203aac65c3"}], "stats": {"total": 163, "additions": 141, "deletions": 22}, "files": [{"sha": "059fa77f0586ec625ea8c942fb3cf3c4ad5a20db", "filename": "gcc/ChangeLog", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b51469a5d825a43e376a647f71cbf1da28149ae1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b51469a5d825a43e376a647f71cbf1da28149ae1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b51469a5d825a43e376a647f71cbf1da28149ae1", "patch": "@@ -1,3 +1,28 @@\n+2008-06-18  Maxim Kuvyrkov  <maxim@codesourcery.com>\n+\n+\t* config/mips/mips.h (ISA_HAS_CONDMOVE): Slice ISA_HAS_FP_CONDMOVE\n+\tfrom it.\n+\t(ISA_HAS_FP_CONDMOVE): New macro.\n+\t(ISA_HAS_FP_MADD4_MSUB4, ISA_HAS_FP_MADD3_MSUB3): New macros.\n+\t(ISA_HAS_NMADD_NMSUB): Rename to ISA_HAS_NMADD4_NMSUB4.\n+\t(ISA_HAS_NMADD3_NMSUB3): New macro.\n+\t* config/mips/mips.c (mips_rtx_costs): Update.\n+\t* config/mips/mips.md (MOVECC): Don't use FP conditional moves when\n+\tcompiling for ST Loongson 2E/2F.\n+\t(madd<mode>): Rename to madd4<mode>.  Update.\n+\t(madd3<mode>): New pattern.\n+\t(msub<mode>): Rename to msub4<mode>.  Update.\n+\t(msub3<mode>): New pattern.\n+\t(nmadd<mode>): Rename to nmadd4<mode>.  Update.\n+\t(nmadd3<mode>): New pattern.\n+\t(nmadd<mode>_fastmath): Rename to nmadd4<mode>_fastmath.  Update.\n+\t(nmadd3<mode>_fastmath): New pattern.\n+\t(nmsub<mode>): Rename to nmsub4<mode>.  Update.\n+\t(nmsub3<mode>): New pattern.\n+\t(nmsub<mode>_fastmath): Rename to nmsub4<mode>_fastmath.  Update.\n+\t(nmsub3<mode>_fastmath): New pattern.\n+\t(mov<SCALARF:mode>_on_<MOVECC:mode>, mov<mode>cc): Update.\n+\n 2008-06-18  Steven Bosscher  <steven@gcc.gnu.org>\n \n \t* df.h (struct df_ref): Replace 'insn' field with 'insn_info' field."}, {"sha": "56180054d74968b96035ce831fde58632436e65b", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b51469a5d825a43e376a647f71cbf1da28149ae1/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b51469a5d825a43e376a647f71cbf1da28149ae1/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=b51469a5d825a43e376a647f71cbf1da28149ae1", "patch": "@@ -3286,7 +3286,7 @@ mips_rtx_costs (rtx x, int code, int outer_code, int *total)\n \n     case MINUS:\n       if (float_mode_p\n-\t  && ISA_HAS_NMADD_NMSUB (mode)\n+\t  && (ISA_HAS_NMADD4_NMSUB4 (mode) || ISA_HAS_NMADD3_NMSUB3 (mode))\n \t  && TARGET_FUSED_MADD\n \t  && !HONOR_NANS (mode)\n \t  && !HONOR_SIGNED_ZEROS (mode))\n@@ -3337,7 +3337,7 @@ mips_rtx_costs (rtx x, int code, int outer_code, int *total)\n \n     case NEG:\n       if (float_mode_p\n-\t  && ISA_HAS_NMADD_NMSUB (mode)\n+\t  && (ISA_HAS_NMADD4_NMSUB4 (mode) || ISA_HAS_NMADD3_NMSUB3 (mode))\n \t  && TARGET_FUSED_MADD\n \t  && !HONOR_NANS (mode)\n \t  && HONOR_SIGNED_ZEROS (mode))"}, {"sha": "781528d01ba844019756cb30e6a46dc94d4f67cb", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 21, "deletions": 4, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b51469a5d825a43e376a647f71cbf1da28149ae1/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b51469a5d825a43e376a647f71cbf1da28149ae1/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=b51469a5d825a43e376a647f71cbf1da28149ae1", "patch": "@@ -745,14 +745,19 @@ enum mips_code_readable_setting {\n \t\t\t\t  || ISA_MIPS64)\t\t\t\\\n \t\t\t\t && !TARGET_MIPS16)\n \n-/* ISA has the conditional move instructions introduced in mips4.  */\n-#define ISA_HAS_CONDMOVE\t((ISA_MIPS4\t\t\t\t\\\n+/* ISA has the floating-point conditional move instructions introduced\n+   in mips4.  */\n+#define ISA_HAS_FP_CONDMOVE\t((ISA_MIPS4\t\t\t\t\\\n \t\t\t\t  || ISA_MIPS32\t\t\t\t\\\n \t\t\t\t  || ISA_MIPS32R2\t\t\t\\\n \t\t\t\t  || ISA_MIPS64)\t\t\t\\\n \t\t\t\t && !TARGET_MIPS5500\t\t\t\\\n \t\t\t\t && !TARGET_MIPS16)\n \n+/* ISA has the integer conditional move instructions introduced in mips4 and\n+   ST Loongson 2E/2F.  */\n+#define ISA_HAS_CONDMOVE        (ISA_HAS_FP_CONDMOVE || TARGET_LOONGSON_2EF)\n+\n /* ISA has LDC1 and SDC1.  */\n #define ISA_HAS_LDC1_SDC1\t(!ISA_MIPS1 && !TARGET_MIPS16)\n \n@@ -787,14 +792,26 @@ enum mips_code_readable_setting {\n /* Integer multiply-accumulate instructions should be generated.  */\n #define GENERATE_MADD_MSUB      (ISA_HAS_MADD_MSUB && !TUNE_74K)\n \n-/* ISA has floating-point nmadd and nmsub instructions for mode MODE.  */\n-#define ISA_HAS_NMADD_NMSUB(MODE) \\\n+/* ISA has floating-point madd and msub instructions 'd = a * b [+-] c'.  */\n+#define ISA_HAS_FP_MADD4_MSUB4  ISA_HAS_FP4\n+\n+/* ISA has floating-point madd and msub instructions 'c = a * b [+-] c'.  */\n+#define ISA_HAS_FP_MADD3_MSUB3  TARGET_LOONGSON_2EF\n+\n+/* ISA has floating-point nmadd and nmsub instructions\n+   'd = -((a * b) [+-] c)'.  */\n+#define ISA_HAS_NMADD4_NMSUB4(MODE)\t\t\t\t\t\\\n \t\t\t\t((ISA_MIPS4\t\t\t\t\\\n \t\t\t\t  || (ISA_MIPS32R2 && (MODE) == V2SFmode) \\\n \t\t\t\t  || ISA_MIPS64)\t\t\t\\\n \t\t\t\t && (!TARGET_MIPS5400 || TARGET_MAD)\t\\\n \t\t\t\t && !TARGET_MIPS16)\n \n+/* ISA has floating-point nmadd and nmsub instructions\n+   'c = -((a * b) [+-] c)'.  */\n+#define ISA_HAS_NMADD3_NMSUB3(MODE)\t\t\t\t\t\\\n+                                TARGET_LOONGSON_2EF\n+\n /* ISA has count leading zeroes/ones instruction (not implemented).  */\n #define ISA_HAS_CLZ_CLO\t\t((ISA_MIPS32\t\t\t\t\\\n \t\t\t\t  || ISA_MIPS32R2\t\t\t\\"}, {"sha": "842e582b7f4a76d57463ccab3bc9a25f0961cefe", "filename": "gcc/config/mips/mips.md", "status": "modified", "additions": 93, "deletions": 16, "changes": 109, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b51469a5d825a43e376a647f71cbf1da28149ae1/gcc%2Fconfig%2Fmips%2Fmips.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b51469a5d825a43e376a647f71cbf1da28149ae1/gcc%2Fconfig%2Fmips%2Fmips.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.md?ref=b51469a5d825a43e376a647f71cbf1da28149ae1", "patch": "@@ -526,7 +526,8 @@\n \n ;; This mode iterator allows :MOVECC to be used anywhere that a\n ;; conditional-move-type condition is needed.\n-(define_mode_iterator MOVECC [SI (DI \"TARGET_64BIT\") (CC \"TARGET_HARD_FLOAT\")])\n+(define_mode_iterator MOVECC [SI (DI \"TARGET_64BIT\")\n+                              (CC \"TARGET_HARD_FLOAT && !TARGET_LOONGSON_2EF\")])\n \n ;; 64-bit modes for which we provide move patterns.\n (define_mode_iterator MOVE64\n@@ -1904,82 +1905,158 @@\n \n ;; Floating point multiply accumulate instructions.\n \n-(define_insn \"*madd<mode>\"\n+(define_insn \"*madd4<mode>\"\n   [(set (match_operand:ANYF 0 \"register_operand\" \"=f\")\n \t(plus:ANYF (mult:ANYF (match_operand:ANYF 1 \"register_operand\" \"f\")\n \t\t\t      (match_operand:ANYF 2 \"register_operand\" \"f\"))\n \t\t   (match_operand:ANYF 3 \"register_operand\" \"f\")))]\n-  \"ISA_HAS_FP4 && TARGET_FUSED_MADD\"\n+  \"ISA_HAS_FP_MADD4_MSUB4 && TARGET_FUSED_MADD\"\n   \"madd.<fmt>\\t%0,%3,%1,%2\"\n   [(set_attr \"type\" \"fmadd\")\n    (set_attr \"mode\" \"<UNITMODE>\")])\n \n-(define_insn \"*msub<mode>\"\n+(define_insn \"*madd3<mode>\"\n+  [(set (match_operand:ANYF 0 \"register_operand\" \"=f\")\n+\t(plus:ANYF (mult:ANYF (match_operand:ANYF 1 \"register_operand\" \"f\")\n+\t\t\t      (match_operand:ANYF 2 \"register_operand\" \"f\"))\n+\t\t   (match_operand:ANYF 3 \"register_operand\" \"0\")))]\n+  \"ISA_HAS_FP_MADD3_MSUB3 && TARGET_FUSED_MADD\"\n+  \"madd.<fmt>\\t%0,%1,%2\"\n+  [(set_attr \"type\" \"fmadd\")\n+   (set_attr \"mode\" \"<UNITMODE>\")])\n+\n+(define_insn \"*msub4<mode>\"\n   [(set (match_operand:ANYF 0 \"register_operand\" \"=f\")\n \t(minus:ANYF (mult:ANYF (match_operand:ANYF 1 \"register_operand\" \"f\")\n \t\t\t       (match_operand:ANYF 2 \"register_operand\" \"f\"))\n \t\t    (match_operand:ANYF 3 \"register_operand\" \"f\")))]\n-  \"ISA_HAS_FP4 && TARGET_FUSED_MADD\"\n+  \"ISA_HAS_FP_MADD4_MSUB4 && TARGET_FUSED_MADD\"\n   \"msub.<fmt>\\t%0,%3,%1,%2\"\n   [(set_attr \"type\" \"fmadd\")\n    (set_attr \"mode\" \"<UNITMODE>\")])\n \n-(define_insn \"*nmadd<mode>\"\n+(define_insn \"*msub3<mode>\"\n+  [(set (match_operand:ANYF 0 \"register_operand\" \"=f\")\n+\t(minus:ANYF (mult:ANYF (match_operand:ANYF 1 \"register_operand\" \"f\")\n+\t\t\t       (match_operand:ANYF 2 \"register_operand\" \"f\"))\n+\t\t    (match_operand:ANYF 3 \"register_operand\" \"0\")))]\n+  \"ISA_HAS_FP_MADD3_MSUB3 && TARGET_FUSED_MADD\"\n+  \"msub.<fmt>\\t%0,%1,%2\"\n+  [(set_attr \"type\" \"fmadd\")\n+   (set_attr \"mode\" \"<UNITMODE>\")])\n+\n+(define_insn \"*nmadd4<mode>\"\n   [(set (match_operand:ANYF 0 \"register_operand\" \"=f\")\n \t(neg:ANYF (plus:ANYF\n \t\t   (mult:ANYF (match_operand:ANYF 1 \"register_operand\" \"f\")\n \t\t\t      (match_operand:ANYF 2 \"register_operand\" \"f\"))\n \t\t   (match_operand:ANYF 3 \"register_operand\" \"f\"))))]\n-  \"ISA_HAS_NMADD_NMSUB (<MODE>mode)\n+  \"ISA_HAS_NMADD4_NMSUB4 (<MODE>mode)\n    && TARGET_FUSED_MADD\n    && HONOR_SIGNED_ZEROS (<MODE>mode)\n    && !HONOR_NANS (<MODE>mode)\"\n   \"nmadd.<fmt>\\t%0,%3,%1,%2\"\n   [(set_attr \"type\" \"fmadd\")\n    (set_attr \"mode\" \"<UNITMODE>\")])\n \n-(define_insn \"*nmadd<mode>_fastmath\"\n+(define_insn \"*nmadd3<mode>\"\n+  [(set (match_operand:ANYF 0 \"register_operand\" \"=f\")\n+\t(neg:ANYF (plus:ANYF\n+\t\t   (mult:ANYF (match_operand:ANYF 1 \"register_operand\" \"f\")\n+\t\t\t      (match_operand:ANYF 2 \"register_operand\" \"f\"))\n+\t\t   (match_operand:ANYF 3 \"register_operand\" \"0\"))))]\n+  \"ISA_HAS_NMADD3_NMSUB3 (<MODE>mode)\n+   && TARGET_FUSED_MADD\n+   && HONOR_SIGNED_ZEROS (<MODE>mode)\n+   && !HONOR_NANS (<MODE>mode)\"\n+  \"nmadd.<fmt>\\t%0,%1,%2\"\n+  [(set_attr \"type\" \"fmadd\")\n+   (set_attr \"mode\" \"<UNITMODE>\")])\n+\n+(define_insn \"*nmadd4<mode>_fastmath\"\n   [(set (match_operand:ANYF 0 \"register_operand\" \"=f\")\n \t(minus:ANYF\n \t (mult:ANYF (neg:ANYF (match_operand:ANYF 1 \"register_operand\" \"f\"))\n \t\t    (match_operand:ANYF 2 \"register_operand\" \"f\"))\n \t (match_operand:ANYF 3 \"register_operand\" \"f\")))]\n-  \"ISA_HAS_NMADD_NMSUB (<MODE>mode)\n+  \"ISA_HAS_NMADD4_NMSUB4 (<MODE>mode)\n    && TARGET_FUSED_MADD\n    && !HONOR_SIGNED_ZEROS (<MODE>mode)\n    && !HONOR_NANS (<MODE>mode)\"\n   \"nmadd.<fmt>\\t%0,%3,%1,%2\"\n   [(set_attr \"type\" \"fmadd\")\n    (set_attr \"mode\" \"<UNITMODE>\")])\n \n-(define_insn \"*nmsub<mode>\"\n+(define_insn \"*nmadd3<mode>_fastmath\"\n+  [(set (match_operand:ANYF 0 \"register_operand\" \"=f\")\n+\t(minus:ANYF\n+\t (mult:ANYF (neg:ANYF (match_operand:ANYF 1 \"register_operand\" \"f\"))\n+\t\t    (match_operand:ANYF 2 \"register_operand\" \"f\"))\n+\t (match_operand:ANYF 3 \"register_operand\" \"0\")))]\n+  \"ISA_HAS_NMADD3_NMSUB3 (<MODE>mode)\n+   && TARGET_FUSED_MADD\n+   && !HONOR_SIGNED_ZEROS (<MODE>mode)\n+   && !HONOR_NANS (<MODE>mode)\"\n+  \"nmadd.<fmt>\\t%0,%1,%2\"\n+  [(set_attr \"type\" \"fmadd\")\n+   (set_attr \"mode\" \"<UNITMODE>\")])\n+\n+(define_insn \"*nmsub4<mode>\"\n   [(set (match_operand:ANYF 0 \"register_operand\" \"=f\")\n \t(neg:ANYF (minus:ANYF\n \t\t   (mult:ANYF (match_operand:ANYF 2 \"register_operand\" \"f\")\n \t\t\t      (match_operand:ANYF 3 \"register_operand\" \"f\"))\n \t\t   (match_operand:ANYF 1 \"register_operand\" \"f\"))))]\n-  \"ISA_HAS_NMADD_NMSUB (<MODE>mode)\n+  \"ISA_HAS_NMADD4_NMSUB4 (<MODE>mode)\n    && TARGET_FUSED_MADD\n    && HONOR_SIGNED_ZEROS (<MODE>mode)\n    && !HONOR_NANS (<MODE>mode)\"\n   \"nmsub.<fmt>\\t%0,%1,%2,%3\"\n   [(set_attr \"type\" \"fmadd\")\n    (set_attr \"mode\" \"<UNITMODE>\")])\n \n-(define_insn \"*nmsub<mode>_fastmath\"\n+(define_insn \"*nmsub3<mode>\"\n+  [(set (match_operand:ANYF 0 \"register_operand\" \"=f\")\n+\t(neg:ANYF (minus:ANYF\n+\t\t   (mult:ANYF (match_operand:ANYF 2 \"register_operand\" \"f\")\n+\t\t\t      (match_operand:ANYF 3 \"register_operand\" \"f\"))\n+\t\t   (match_operand:ANYF 1 \"register_operand\" \"0\"))))]\n+  \"ISA_HAS_NMADD3_NMSUB3 (<MODE>mode)\n+   && TARGET_FUSED_MADD\n+   && HONOR_SIGNED_ZEROS (<MODE>mode)\n+   && !HONOR_NANS (<MODE>mode)\"\n+  \"nmsub.<fmt>\\t%0,%1,%2\"\n+  [(set_attr \"type\" \"fmadd\")\n+   (set_attr \"mode\" \"<UNITMODE>\")])\n+\n+(define_insn \"*nmsub4<mode>_fastmath\"\n   [(set (match_operand:ANYF 0 \"register_operand\" \"=f\")\n \t(minus:ANYF\n \t (match_operand:ANYF 1 \"register_operand\" \"f\")\n \t (mult:ANYF (match_operand:ANYF 2 \"register_operand\" \"f\")\n \t\t    (match_operand:ANYF 3 \"register_operand\" \"f\"))))]\n-  \"ISA_HAS_NMADD_NMSUB (<MODE>mode)\n+  \"ISA_HAS_NMADD4_NMSUB4 (<MODE>mode)\n    && TARGET_FUSED_MADD\n    && !HONOR_SIGNED_ZEROS (<MODE>mode)\n    && !HONOR_NANS (<MODE>mode)\"\n   \"nmsub.<fmt>\\t%0,%1,%2,%3\"\n   [(set_attr \"type\" \"fmadd\")\n    (set_attr \"mode\" \"<UNITMODE>\")])\n-\f\n+\n+(define_insn \"*nmsub3<mode>_fastmath\"\n+  [(set (match_operand:ANYF 0 \"register_operand\" \"=f\")\n+\t(minus:ANYF\n+\t (match_operand:ANYF 1 \"register_operand\" \"f\")\n+\t (mult:ANYF (match_operand:ANYF 2 \"register_operand\" \"f\")\n+\t\t    (match_operand:ANYF 3 \"register_operand\" \"0\"))))]\n+  \"ISA_HAS_NMADD3_NMSUB3 (<MODE>mode)\n+   && TARGET_FUSED_MADD\n+   && !HONOR_SIGNED_ZEROS (<MODE>mode)\n+   && !HONOR_NANS (<MODE>mode)\"\n+  \"nmsub.<fmt>\\t%0,%1,%2\"\n+  [(set_attr \"type\" \"fmadd\")\n+   (set_attr \"mode\" \"<UNITMODE>\")])\n+\n ;;\n ;;  ....................\n ;;\n@@ -6339,7 +6416,7 @@\n \t\t (const_int 0)])\n \t (match_operand:SCALARF 2 \"register_operand\" \"f,0\")\n \t (match_operand:SCALARF 3 \"register_operand\" \"0,f\")))]\n-  \"ISA_HAS_CONDMOVE\"\n+  \"ISA_HAS_FP_CONDMOVE\"\n   \"@\n     mov%T4.<fmt>\\t%0,%2,%1\n     mov%t4.<fmt>\\t%0,%3,%1\"\n@@ -6366,7 +6443,7 @@\n \t(if_then_else:SCALARF (match_dup 5)\n \t\t\t      (match_operand:SCALARF 2 \"register_operand\")\n \t\t\t      (match_operand:SCALARF 3 \"register_operand\")))]\n-  \"ISA_HAS_CONDMOVE\"\n+  \"ISA_HAS_FP_CONDMOVE\"\n {\n   mips_expand_conditional_move (operands);\n   DONE;"}]}