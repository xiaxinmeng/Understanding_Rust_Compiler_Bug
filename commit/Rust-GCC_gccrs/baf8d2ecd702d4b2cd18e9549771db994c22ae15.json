{"sha": "baf8d2ecd702d4b2cd18e9549771db994c22ae15", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmFmOGQyZWNkNzAyZDRiMmNkMThlOTU0OTc3MWRiOTk0YzIyYWUxNQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2019-06-26T11:16:56Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2019-06-26T11:16:56Z"}, "message": "re PR middle-end/90982 (ICE in make_decl_rtl, at varasm.c:1344)\n\n2019-06-26  Richard Biener  <rguenther@suse.de>\n\n\tPR ipa/90982\n\t* tree-inline.c (remap_ssa_name): Copy SSA range info.\n\n\t* g++.dg/torture/pr90982.C: New testcase.\n\nFrom-SVN: r272688", "tree": {"sha": "da34906307ed2aa7c59dc8a0fc1d0c951b396699", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/da34906307ed2aa7c59dc8a0fc1d0c951b396699"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/baf8d2ecd702d4b2cd18e9549771db994c22ae15", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/baf8d2ecd702d4b2cd18e9549771db994c22ae15", "html_url": "https://github.com/Rust-GCC/gccrs/commit/baf8d2ecd702d4b2cd18e9549771db994c22ae15", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/baf8d2ecd702d4b2cd18e9549771db994c22ae15/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6ab601efaa82b47e0ea1d3c4b14e052b07c79280", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ab601efaa82b47e0ea1d3c4b14e052b07c79280", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ab601efaa82b47e0ea1d3c4b14e052b07c79280"}], "stats": {"total": 43, "additions": 43, "deletions": 0}, "files": [{"sha": "432020fb99a50c5fdc98e815ab808bae7400e6ff", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/baf8d2ecd702d4b2cd18e9549771db994c22ae15/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/baf8d2ecd702d4b2cd18e9549771db994c22ae15/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=baf8d2ecd702d4b2cd18e9549771db994c22ae15", "patch": "@@ -1,3 +1,8 @@\n+2019-06-26  Richard Biener  <rguenther@suse.de>\n+\n+\tPR ipa/90982\n+\t* tree-inline.c (remap_ssa_name): Copy SSA range info.\n+\n 2019-06-26  Richard Biener  <rguenther@suse.de>\n \n \t* lto-streamer.h (lto_bitmap_alloc): Remove."}, {"sha": "b16e23a73736cbc1acd03d6aa2cbcbcf4c69a7c1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/baf8d2ecd702d4b2cd18e9549771db994c22ae15/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/baf8d2ecd702d4b2cd18e9549771db994c22ae15/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=baf8d2ecd702d4b2cd18e9549771db994c22ae15", "patch": "@@ -1,3 +1,8 @@\n+2019-06-26  Richard Biener  <rguenther@suse.de>\n+\n+\tPR ipa/90982\n+\t* g++.dg/torture/pr90982.C: New testcase.\n+\n 2019-06-26  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/67184"}, {"sha": "8edbb7ca6c0693bf2ca3fdf4a1d3ed1d6546bd64", "filename": "gcc/testsuite/g++.dg/torture/pr90982.C", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/baf8d2ecd702d4b2cd18e9549771db994c22ae15/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr90982.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/baf8d2ecd702d4b2cd18e9549771db994c22ae15/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr90982.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr90982.C?ref=baf8d2ecd702d4b2cd18e9549771db994c22ae15", "patch": "@@ -0,0 +1,23 @@\n+// { dg-do compile }\n+\n+template <int n> struct S\n+{\n+  long c[n];\n+  void f (S d)\n+    {\n+      for (int i = 2;; i++)\n+\tc[i] &= d.c[i];\n+    }\n+};\n+\n+template <int m> struct T:S<m/64>\n+{\n+  void operator &= (T d)\n+    { this -> f (d); }\n+};\n+\n+void g (T<192> &d)\n+{\n+  T<192> v;\n+  d &= v;\n+}"}, {"sha": "48619fbc821f12199aaf4468472c93d8485c85f5", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/baf8d2ecd702d4b2cd18e9549771db994c22ae15/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/baf8d2ecd702d4b2cd18e9549771db994c22ae15/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=baf8d2ecd702d4b2cd18e9549771db994c22ae15", "patch": "@@ -259,6 +259,11 @@ remap_ssa_name (tree name, copy_body_data *id)\n \t  struct ptr_info_def *new_pi = get_ptr_info (new_tree);\n \t  new_pi->pt = pi->pt;\n \t}\n+      /* So can range-info.  */\n+      if (!POINTER_TYPE_P (TREE_TYPE (name))\n+\t  && SSA_NAME_RANGE_INFO (name))\n+\tduplicate_ssa_name_range_info (new_tree, SSA_NAME_RANGE_TYPE (name),\n+\t\t\t\t       SSA_NAME_RANGE_INFO (name));\n       return new_tree;\n     }\n \n@@ -292,6 +297,11 @@ remap_ssa_name (tree name, copy_body_data *id)\n \t  struct ptr_info_def *new_pi = get_ptr_info (new_tree);\n \t  new_pi->pt = pi->pt;\n \t}\n+      /* So can range-info.  */\n+      if (!POINTER_TYPE_P (TREE_TYPE (name))\n+\t  && SSA_NAME_RANGE_INFO (name))\n+\tduplicate_ssa_name_range_info (new_tree, SSA_NAME_RANGE_TYPE (name),\n+\t\t\t\t       SSA_NAME_RANGE_INFO (name));\n       if (SSA_NAME_IS_DEFAULT_DEF (name))\n \t{\n \t  /* By inlining function having uninitialized variable, we might"}]}