{"sha": "39cef9146f774f9bfe133a5fea9a585ac061be16", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzljZWY5MTQ2Zjc3NGY5YmZlMTMzYTVmZWE5YTU4NWFjMDYxYmUxNg==", "commit": {"author": {"name": "Nathanael Nerode", "email": "neroden@gcc.gnu.org", "date": "2002-07-17T00:09:11Z"}, "committer": {"name": "Nathanael Nerode", "email": "neroden@gcc.gnu.org", "date": "2002-07-17T00:09:11Z"}, "message": "Makefile.in: Delete references to enquire.\n\n(gcc)\n\t* Makefile.in: Delete references to enquire.\n\t* enquire.c: Move to contrib.\n\n(contrib)\n\t* enquire.c: Move from gcc.\n\nFrom-SVN: r55502", "tree": {"sha": "3994aabc2ce1eb05bdaecc11694387468db5d8a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3994aabc2ce1eb05bdaecc11694387468db5d8a1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/39cef9146f774f9bfe133a5fea9a585ac061be16", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39cef9146f774f9bfe133a5fea9a585ac061be16", "html_url": "https://github.com/Rust-GCC/gccrs/commit/39cef9146f774f9bfe133a5fea9a585ac061be16", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39cef9146f774f9bfe133a5fea9a585ac061be16/comments", "author": null, "committer": null, "parents": [{"sha": "92c1a778dfe590e3fef30f94611c0766a12e711a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92c1a778dfe590e3fef30f94611c0766a12e711a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/92c1a778dfe590e3fef30f94611c0766a12e711a"}], "stats": {"total": 73, "additions": 13, "deletions": 60}, "files": [{"sha": "1fb336341e58e0df31364c39fb4adfab2d07e1a3", "filename": "contrib/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39cef9146f774f9bfe133a5fea9a585ac061be16/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39cef9146f774f9bfe133a5fea9a585ac061be16/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=39cef9146f774f9bfe133a5fea9a585ac061be16", "patch": "@@ -1,3 +1,7 @@\n+2002-07-16  Nathanael Nerode  <neroden@gcc.gnu.org>\n+\n+\t* enquire.c: Move from gcc.\n+\n 2002-07-16  H.J. Lu <hjl@gnu.org>\n \n \t* gcc_update (touch_files): Pass -s to ${MAKE}."}, {"sha": "8b4bdda3d52e8f51c69e6f2fd9cdcedf1e582d7d", "filename": "contrib/enquire.c", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39cef9146f774f9bfe133a5fea9a585ac061be16/contrib%2Fenquire.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39cef9146f774f9bfe133a5fea9a585ac061be16/contrib%2Fenquire.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fenquire.c?ref=39cef9146f774f9bfe133a5fea9a585ac061be16", "previous_filename": "gcc/enquire.c"}, {"sha": "1a40901c15b72afdae4c1ff085b8d33fa18ea16b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39cef9146f774f9bfe133a5fea9a585ac061be16/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39cef9146f774f9bfe133a5fea9a585ac061be16/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=39cef9146f774f9bfe133a5fea9a585ac061be16", "patch": "@@ -1,3 +1,8 @@\n+2002-07-16  Nathanael Nerode  <neroden@gcc.gnu.org>\n+\n+\t* Makefile.in: Delete references to enquire.\n+\t* enquire.c: Move to contrib.\n+\n 2002-07-16  Stan Shebs  <shebs@apple.com>\n \n \t* darwin.c (func_name_maybe_scoped): Remove unused decl."}, {"sha": "d5ab8754c4adb2199e31b8cf0b0ff6699ab6f1c8", "filename": "gcc/Makefile.in", "status": "modified", "additions": 4, "deletions": 60, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39cef9146f774f9bfe133a5fea9a585ac061be16/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39cef9146f774f9bfe133a5fea9a585ac061be16/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=39cef9146f774f9bfe133a5fea9a585ac061be16", "patch": "@@ -165,7 +165,7 @@ USER_H = $(srcdir)/ginclude/stdarg.h $(srcdir)/ginclude/stddef.h \\\n     $(srcdir)/ginclude/stdbool.h $(srcdir)/ginclude/iso646.h \\\n     $(EXTRA_HEADERS)\n \n-# The GCC to use for compiling libgcc.a, enquire, and crt*.o.\n+# The GCC to use for compiling libgcc.a and crt*.o.\n # Usually the one we just built.\n # Don't use this as a dependency--use $(GCC_PASSES) or $(GCC_PARTS).\n GCC_FOR_TARGET = ./xgcc -B./ -B$(build_tooldir)/bin/ -isystem $(build_tooldir)/include -isystem $(build_tooldir)/sys-include\n@@ -768,7 +768,7 @@ STAGESTUFF = *$(objext) insn-flags.h insn-config.h insn-codes.h \\\n  genrtl.c genrtl.h gt-*.h gtype-*.h gtype-desc.c \\\n  xgcc$(exeext) cpp$(exeext) cc1$(exeext) $(EXTRA_PASSES) \\\n  $(EXTRA_PARTS) $(EXTRA_PROGRAMS) gcc-cross$(exeext) cc1obj$(exeext) \\\n- enquire$(exeext) protoize$(exeext) unprotoize$(exeext) \\\n+ protoize$(exeext) unprotoize$(exeext) \\\n  specs collect2$(exeext) $(USE_COLLECT2) underscore.c \\\n  gcov$(exeext) *.[0-9][0-9].* *.[si] libcpp.a libbackend.a libgcc.mk \\\n  $(LANG_STAGESTUFF)\n@@ -921,8 +921,6 @@ config.status: $(srcdir)/configure $(srcdir)/config.gcc version.c\n \n all.internal: start.encap rest.encap doc\n # This is what to compile if making a cross-compiler.\n-# Note that we can compile enquire using the cross-compiler just built,\n-# although we can't run it on this machine.\n all.cross: native gcc-cross cpp$(exeext) specs \\\n \t$(LIBGCC) $(EXTRA_PARTS) lang.all.cross doc\n # This is what must be made before installing GCC and converting libraries.\n@@ -2238,8 +2236,7 @@ gcov$(exeext): $(GCOV_OBJS) $(LIBDEPS)\n # s-* so that mostlyclean does not force the include directory to\n # be rebuilt.\n \n-# Build the include directory including float.h (which no longer depends upon\n-# enquire).\n+# Build the include directory including float.h\n stmp-int-hdrs: $(STMP_FIXINC) $(USER_H) xlimits.h\n # Copy in the headers provided with gcc.\n # The sed command gets just the last file name component;\n@@ -2564,7 +2561,7 @@ mostlyclean: $(INTL_MOSTLYCLEAN) lang.mostlyclean\n # Delete debugging dump files.\n \t-rm -f *.[0-9][0-9].* */*.[0-9][0-9].*\n # Delete some files made during installation.\n-\t-rm -f specs float.h-* enquire SYSCALLS.c.X SYSCALLS.c\n+\t-rm -f specs float.h-* SYSCALLS.c.X SYSCALLS.c\n \t-rm -f collect collect2 mips-tfile mips-tdump\n # Delete files generated for fixproto\n \t-rm -rf fix-header$(build_exeext) xsys-protos.h deduced.h tmp-deduced.h \\\n@@ -3595,59 +3592,6 @@ risky-stage4: stage4\n \n force:\n \n-# ---\n-# The enquire rules are still useful for building new float-anything.h.\n-# Special flags for compiling enquire.\n-# We disable optimization to make floating point more reliable.\n-ENQUIRE_CFLAGS = -DNO_MEM -DNO_LONG_DOUBLE_IO -O0\n-ENQUIRE_LDFLAGS = $(LDFLAGS)\n-\n-# Enquire target (This is a variable so that a target can choose not to\n-# build it.)\n-ENQUIRE = enquire\n-\n-# Test to see whether <float.h> exists in the system header files,\n-# and is not derived from GCC.\n-FLOAT_H_TEST = \\\n-  [ -f $(SYSTEM_HEADER_DIR)/float.h ] && \\\n-  if grep 'ifndef _FLOAT_H___' $(SYSTEM_HEADER_DIR)/float.h >/dev/null; \\\n-  then false; \\\n-  else :; fi\n-# We pretend to not having a usable <float.h>, hence disable the FLOAT_H_TEST\n-# to ensure, we're emitting a full blown <float.h> ourselves.\n-FLOAT_H_TEST = false\n-\n-# Used to compile enquire with standard cc, but have forgotten why.\n-# Let's try with GCC.\n-enquire: enquire.o $(GCC_PARTS)\n-\t$(GCC_FOR_TARGET) $(GCC_CFLAGS) $(ENQUIRE_LDFLAGS) enquire.o -o $@\n-enquire.o: $(srcdir)/enquire.c $(GCC_PASSES) stmp-int-hdrs\n-\tif $(FLOAT_H_TEST); then \\\n-\t  rm -f include/float.h; \\\n-\t  SYS_FLOAT_H_WRAP=1; \\\n-\telse :; \\\n-\t  SYS_FLOAT_H_WRAP=0; \\\n-\tfi; \\\n-\t$(GCC_FOR_TARGET) $(GCC_CFLAGS) $(ALL_CPPFLAGS) $(ENQUIRE_CFLAGS) \\\n-\t  -DSYS_FLOAT_H_WRAP=$$SYS_FLOAT_H_WRAP \\\n-\t  -I. -c $(srcdir)/enquire.c $(OUTPUT_OPTION)\n-\n-# Create float.h source for the native machine.\n-# Make it empty if we can use the system float.h without changes.\n-float.h-nat: enquire\n-\t-./enquire -f > tmp-float.h\n-\tgrep '#define [^_]' tmp-float.h >/dev/null || true > tmp-float.h\n-\tmv tmp-float.h float.h-nat\n-\n-# Create a dummy float.h source for a cross-compiler.\n-# ??? This isn't used anymore.  Should we create config/float-unkn.h\n-# and make that the default float_format in configure?\n-float.h-cross:\n-\techo \"#ifndef\t__GCC_FLOAT_NOT_NEEDED\" > t-float.h-cross\n-\techo \"#error float.h values not known for cross-compiler\" >> t-float.h-cross\n-\techo \"#endif\" >> t-float.h-cross\n-\tmv t-float.h-cross float.h-cross\n-\n # Rules for generating translated message descriptions.\n # Disabled by autoconf if the tools are not available.\n "}]}