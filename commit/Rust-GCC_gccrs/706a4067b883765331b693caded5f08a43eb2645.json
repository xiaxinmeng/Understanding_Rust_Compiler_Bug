{"sha": "706a4067b883765331b693caded5f08a43eb2645", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzA2YTQwNjdiODgzNzY1MzMxYjY5M2NhZGVkNWYwOGE0M2ViMjY0NQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-09-27T09:58:53Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-09-27T09:58:53Z"}, "message": "[multiple changes]\n\n2011-09-27  Robert Dewar  <dewar@adacore.com>\n\n\t* exp_ch9.adb: Minor comment fixes.\n\n2011-09-27  Ed Schonberg  <schonberg@adacore.com>\n\n\t* a-comutr.adb, a-comutr.ads: Add children iterators on multiway\n\ttrees.\n\nFrom-SVN: r179257", "tree": {"sha": "edb9b39b6c8e1f86a407fffec5385b70e1182935", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/edb9b39b6c8e1f86a407fffec5385b70e1182935"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/706a4067b883765331b693caded5f08a43eb2645", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/706a4067b883765331b693caded5f08a43eb2645", "html_url": "https://github.com/Rust-GCC/gccrs/commit/706a4067b883765331b693caded5f08a43eb2645", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/706a4067b883765331b693caded5f08a43eb2645/comments", "author": null, "committer": null, "parents": [{"sha": "05c1e7d2ef07639da130ff1aa8e723f2a35d4801", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05c1e7d2ef07639da130ff1aa8e723f2a35d4801", "html_url": "https://github.com/Rust-GCC/gccrs/commit/05c1e7d2ef07639da130ff1aa8e723f2a35d4801"}], "stats": {"total": 94, "additions": 90, "deletions": 4}, "files": [{"sha": "e44f19a9aac9fe9d55110a9370fea52a3f784bc0", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/706a4067b883765331b693caded5f08a43eb2645/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/706a4067b883765331b693caded5f08a43eb2645/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=706a4067b883765331b693caded5f08a43eb2645", "patch": "@@ -1,3 +1,12 @@\n+2011-09-27  Robert Dewar  <dewar@adacore.com>\n+\n+\t* exp_ch9.adb: Minor comment fixes.\n+\n+2011-09-27  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* a-comutr.adb, a-comutr.ads: Add children iterators on multiway\n+\ttrees.\n+\n 2011-09-27  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* checks.adb (Apply_Scalar_Range_Check): Use Designated_Type"}, {"sha": "0fcb3d6d51c0bc753b75cbab432e98800e01b3be", "filename": "gcc/ada/a-comutr.adb", "status": "modified", "additions": 75, "deletions": 2, "changes": 77, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/706a4067b883765331b693caded5f08a43eb2645/gcc%2Fada%2Fa-comutr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/706a4067b883765331b693caded5f08a43eb2645/gcc%2Fada%2Fa-comutr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-comutr.adb?ref=706a4067b883765331b693caded5f08a43eb2645", "patch": "@@ -40,11 +40,28 @@ package body Ada.Containers.Multiway_Trees is\n       From_Root : Boolean;\n    end record;\n \n+   type Child_Iterator is new Tree_Iterator_Interfaces.Reversible_Iterator with\n+   record\n+      Container : Tree_Access;\n+      Position  : Cursor;\n+   end record;\n+\n    overriding function First (Object : Iterator) return Cursor;\n    overriding function Next\n      (Object : Iterator;\n       Position : Cursor) return Cursor;\n \n+   overriding function First (Object : Child_Iterator) return Cursor;\n+   overriding function Next\n+     (Object : Child_Iterator;\n+      Position : Cursor) return Cursor;\n+\n+   overriding function Previous\n+     (Object : Child_Iterator;\n+      Position : Cursor) return Cursor;\n+\n+   overriding function Last (Object : Child_Iterator) return Cursor;\n+\n    -----------------------\n    -- Local Subprograms --\n    -----------------------\n@@ -912,6 +929,11 @@ package body Ada.Containers.Multiway_Trees is\n       return Object.Position;\n    end First;\n \n+   function First (Object : Child_Iterator) return Cursor is\n+   begin\n+      return (Object.Container, Object.Position.Node.Children.First);\n+   end First;\n+\n    -----------------\n    -- First_Child --\n    -----------------\n@@ -1412,6 +1434,16 @@ package body Ada.Containers.Multiway_Trees is\n       end loop;\n    end Iterate_Children;\n \n+   function Iterate_Children\n+     (Container : Tree;\n+      Parent    : Cursor)\n+     return Tree_Iterator_Interfaces.Reversible_Iterator'Class\n+   is\n+      pragma Unreferenced (Container);\n+   begin\n+      return Child_Iterator'(Parent.Container, Parent);\n+   end Iterate_Children;\n+\n    ---------------------\n    -- Iterate_Subtree --\n    ---------------------\n@@ -1468,13 +1500,21 @@ package body Ada.Containers.Multiway_Trees is\n       Iterate_Children (Container, Subtree, Process);\n    end Iterate_Subtree;\n \n+   ----------\n+   -- Last --\n+   ----------\n+\n+   overriding function Last (Object : Child_Iterator) return Cursor is\n+   begin\n+      return (Object.Container, Object.Position.Node.Children.Last);\n+   end Last;\n+\n    ----------------\n    -- Last_Child --\n    ----------------\n \n    function Last_Child (Parent : Cursor) return Cursor is\n       Node : Tree_Node_Access;\n-\n    begin\n       if Parent = No_Element then\n          raise Constraint_Error with \"Parent cursor has no element\";\n@@ -1588,13 +1628,27 @@ package body Ada.Containers.Multiway_Trees is\n          end if;\n \n       else\n-\n          --  If an internal node, return its first child.\n \n          return (Object.Container, N.Children.First);\n       end if;\n    end Next;\n \n+   function Next\n+     (Object : Child_Iterator;\n+      Position : Cursor) return Cursor\n+   is\n+      C : constant Tree_Node_Access := Position.Node.Next;\n+\n+   begin\n+      if C = null then\n+         return No_Element;\n+\n+      else\n+         return (Object.Container, C);\n+      end if;\n+   end Next;\n+\n    ------------------\n    -- Next_Sibling --\n    ------------------\n@@ -1714,6 +1768,25 @@ package body Ada.Containers.Multiway_Trees is\n       Container.Count := Container.Count + Count;\n    end Prepend_Child;\n \n+   --------------\n+   -- Previous --\n+   --------------\n+\n+   overriding function Previous\n+     (Object : Child_Iterator;\n+      Position : Cursor) return Cursor\n+   is\n+      C : constant Tree_Node_Access := Position.Node.Prev;\n+\n+   begin\n+      if C = null then\n+         return No_Element;\n+\n+      else\n+         return (Object.Container, C);\n+      end if;\n+   end Previous;\n+\n    ----------------------\n    -- Previous_Sibling --\n    ----------------------"}, {"sha": "94cacfc9f1bed9ea8d4879fcf37cca13b4b8a012", "filename": "gcc/ada/a-comutr.ads", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/706a4067b883765331b693caded5f08a43eb2645/gcc%2Fada%2Fa-comutr.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/706a4067b883765331b693caded5f08a43eb2645/gcc%2Fada%2Fa-comutr.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-comutr.ads?ref=706a4067b883765331b693caded5f08a43eb2645", "patch": "@@ -180,6 +180,11 @@ package Ada.Containers.Multiway_Trees is\n    function Iterate_Subtree (Position : Cursor)\n      return Tree_Iterator_Interfaces.Forward_Iterator'Class;\n \n+   function Iterate_Children\n+     (Container : Tree;\n+      Parent    : Cursor)\n+     return Tree_Iterator_Interfaces.Reversible_Iterator'Class;\n+\n    function Child_Count (Parent : Cursor) return Count_Type;\n \n    function Child_Depth (Parent, Child : Cursor) return Count_Type;"}, {"sha": "fc70238aedb4bffb6c82ea0ef179535491f07a7b", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/706a4067b883765331b693caded5f08a43eb2645/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/706a4067b883765331b693caded5f08a43eb2645/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=706a4067b883765331b693caded5f08a43eb2645", "patch": "@@ -71,8 +71,7 @@ package body Exp_Ch9 is\n    --  types with defaulted discriminant of an integer type, when the bound\n    --  of some entry family depends on a discriminant. The limitation to\n    --  entry families of 128K should be reasonable in all cases, and is a\n-   --  documented implementation restriction. It will be lifted when protected\n-   --  entry families are re-implemented as a single ordered queue.\n+   --  documented implementation restriction.\n \n    Entry_Family_Bound : constant Int := 2**16;\n "}]}