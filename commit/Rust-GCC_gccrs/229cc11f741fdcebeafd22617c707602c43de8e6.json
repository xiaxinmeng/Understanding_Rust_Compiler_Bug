{"sha": "229cc11f741fdcebeafd22617c707602c43de8e6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjI5Y2MxMWY3NDFmZGNlYmVhZmQyMjYxN2M3MDc2MDJjNDNkZThlNg==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2005-03-03T14:29:00Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2005-03-03T14:29:00Z"}, "message": "tree-cfg.c (stmt_starts_bb_p): Clean up by replacing code with LABEL_EXPR.\n\n\t* tree-cfg.c (stmt_starts_bb_p): Clean up by replacing code\n\twith LABEL_EXPR.\n\nFrom-SVN: r95831", "tree": {"sha": "e474ed72dd03fd1e6c585dfe77da2b3afc603293", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e474ed72dd03fd1e6c585dfe77da2b3afc603293"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/229cc11f741fdcebeafd22617c707602c43de8e6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/229cc11f741fdcebeafd22617c707602c43de8e6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/229cc11f741fdcebeafd22617c707602c43de8e6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/229cc11f741fdcebeafd22617c707602c43de8e6/comments", "author": null, "committer": null, "parents": [{"sha": "9550206bcb7d4cced1ddc0db154fffbfdad4ed40", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9550206bcb7d4cced1ddc0db154fffbfdad4ed40", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9550206bcb7d4cced1ddc0db154fffbfdad4ed40"}], "stats": {"total": 17, "additions": 9, "deletions": 8}, "files": [{"sha": "d19e3b3d454c17ae7cfd484249f75aa3df5b5434", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/229cc11f741fdcebeafd22617c707602c43de8e6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/229cc11f741fdcebeafd22617c707602c43de8e6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=229cc11f741fdcebeafd22617c707602c43de8e6", "patch": "@@ -1,3 +1,8 @@\n+2005-03-03  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* tree-cfg.c (stmt_starts_bb_p): Clean up by replacing code\n+\twith LABEL_EXPR.\n+\n 2005-03-03  Roger Sayle  <roger@eyesopen.com>\n \t    Andrew Pinski  <pinskia@physics.uc.edu>\n "}, {"sha": "6ba0a02b8d011536c501d533eb495e1ccd1ad690", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/229cc11f741fdcebeafd22617c707602c43de8e6/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/229cc11f741fdcebeafd22617c707602c43de8e6/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=229cc11f741fdcebeafd22617c707602c43de8e6", "patch": "@@ -2650,25 +2650,21 @@ simple_goto_p (tree expr)\n static inline bool\n stmt_starts_bb_p (tree t, tree prev_t)\n {\n-  enum tree_code code;\n-\n   if (t == NULL_TREE)\n     return false;\n \n   /* LABEL_EXPRs start a new basic block only if the preceding\n      statement wasn't a label of the same type.  This prevents the\n      creation of consecutive blocks that have nothing but a single\n      label.  */\n-  code = TREE_CODE (t);\n-  if (code == LABEL_EXPR)\n+  if (TREE_CODE (t) == LABEL_EXPR)\n     {\n       /* Nonlocal and computed GOTO targets always start a new block.  */\n-      if (code == LABEL_EXPR\n-\t  && (DECL_NONLOCAL (LABEL_EXPR_LABEL (t))\n-\t      || FORCED_LABEL (LABEL_EXPR_LABEL (t))))\n+      if (DECL_NONLOCAL (LABEL_EXPR_LABEL (t))\n+\t  || FORCED_LABEL (LABEL_EXPR_LABEL (t)))\n \treturn true;\n \n-      if (prev_t && TREE_CODE (prev_t) == code)\n+      if (prev_t && TREE_CODE (prev_t) == LABEL_EXPR)\n \t{\n \t  if (DECL_NONLOCAL (LABEL_EXPR_LABEL (prev_t)))\n \t    return true;"}]}