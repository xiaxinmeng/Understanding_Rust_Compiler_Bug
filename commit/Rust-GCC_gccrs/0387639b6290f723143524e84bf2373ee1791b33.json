{"sha": "0387639b6290f723143524e84bf2373ee1791b33", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDM4NzYzOWI2MjkwZjcyMzE0MzUyNGU4NGJmMjM3M2VlMTc5MWIzMw==", "commit": {"author": {"name": "David Edelsohn", "email": "edelsohn@gnu.org", "date": "2002-05-04T14:32:31Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2002-05-04T14:32:31Z"}, "message": "rs6000.md (sCC pattern and splitter): Remove clobber and use result as temporary value.\n\n        * config/rs6000/rs6000.md (sCC pattern and splitter): Remove\n        clobber and use result as temporary value.\n\nFrom-SVN: r53159", "tree": {"sha": "7794ee63c5ac57571a5d080a9f3b35d634f13a8f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7794ee63c5ac57571a5d080a9f3b35d634f13a8f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0387639b6290f723143524e84bf2373ee1791b33", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0387639b6290f723143524e84bf2373ee1791b33", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0387639b6290f723143524e84bf2373ee1791b33", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0387639b6290f723143524e84bf2373ee1791b33/comments", "author": null, "committer": null, "parents": [{"sha": "30b50f906e0b45b53cb9d4b4e996bfc245f908c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30b50f906e0b45b53cb9d4b4e996bfc245f908c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/30b50f906e0b45b53cb9d4b4e996bfc245f908c5"}], "stats": {"total": 33, "additions": 18, "deletions": 15}, "files": [{"sha": "ff8d6f7d79c3e6f52936159666079cc02c166969", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0387639b6290f723143524e84bf2373ee1791b33/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0387639b6290f723143524e84bf2373ee1791b33/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0387639b6290f723143524e84bf2373ee1791b33", "patch": "@@ -1,3 +1,9 @@\n+2002-05-04  David Edelsohn  <edelsohn@gnu.org>\n+\n+\tPR c/6543\n+\t* config/rs6000/rs6000.md (sCC pattern and splitter): Remove\n+\tclobber and use result as temporary value.\n+\n Sat May  4 13:20:54 CEST 2002  Jan Hubicka  <jh@suse.cz>\n \n \t* expr.c (force_operand): Use expand_simple_* to handle more"}, {"sha": "071af2014fc6aa6691771723c8334a00282e13ac", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 12, "deletions": 15, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0387639b6290f723143524e84bf2373ee1791b33/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0387639b6290f723143524e84bf2373ee1791b33/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=0387639b6290f723143524e84bf2373ee1791b33", "patch": "@@ -10899,23 +10899,22 @@\n   \"\")\n \n (define_insn \"\"\n-  [(set (match_operand:CC 5 \"cc_reg_operand\" \"=x,x,x,x,x,?y,?y,?y,?y,?y\")\n+  [(set (match_operand:CC 4 \"cc_reg_operand\" \"=x,x,x,x,x,?y,?y,?y,?y,?y\")\n \t(compare:CC\n \t (plus:SI\n \t  (eq:SI (match_operand:SI 1 \"gpc_reg_operand\" \"%r,r,r,r,r,r,r,r,r,r\")\n \t\t (match_operand:SI 2 \"reg_or_cint_operand\" \"r,O,K,L,I,r,O,K,L,I\"))\n \t  (match_operand:SI 3 \"gpc_reg_operand\" \"r,r,r,r,r,r,r,r,r,r\"))\n \t (const_int 0)))\n-   (set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r,r,r,r,r,r,r,r,r\")\n-\t(plus:SI (eq:SI (match_dup 1) (match_dup 2)) (match_dup 3)))\n-   (clobber (match_scratch:SI 4 \"=&r,&r,&r,&r,&r,&r,&r,&r,&r,&r\"))]\n+   (set (match_operand:SI 0 \"gpc_reg_operand\" \"=&r,&r,&r,&r,&r,&r,&r,&r,&r,&r\")\n+\t(plus:SI (eq:SI (match_dup 1) (match_dup 2)) (match_dup 3)))]\n   \"! TARGET_POWERPC64\"\n   \"@\n-   xor %4,%1,%2\\;{sfi|subfic} %4,%4,0\\;{aze.|addze.} %0,%3\n-   {sfi|subfic} %4,%1,0\\;{aze.|addze.} %0,%3\n-   {xoril|xori} %4,%1,%b2\\;{sfi|subfic} %4,%4,0\\;{aze.|addze.} %0,%3\n-   {xoriu|xoris} %4,%1,%u2\\;{sfi|subfic} %4,%4,0\\;{aze.|addze.} %0,%3\n-   {sfi|subfic} %4,%1,%2\\;{sfi|subfic} %4,%4,0\\;{aze.|addze.} %0,%3\n+   xor %0,%1,%2\\;{sfi|subfic} %0,%0,0\\;{aze.|addze.} %0,%3\n+   {sfi|subfic} %0,%1,0\\;{aze.|addze.} %0,%3\n+   {xoril|xori} %0,%1,%b2\\;{sfi|subfic} %0,%0,0\\;{aze.|addze.} %0,%3\n+   {xoriu|xoris} %0,%1,%u2\\;{sfi|subfic} %0,%0,0\\;{aze.|addze.} %0,%3\n+   {sfi|subfic} %0,%1,%2\\;{sfi|subfic} %0,%0,0\\;{aze.|addze.} %0,%3\n    #\n    #\n    #\n@@ -10925,21 +10924,19 @@\n    (set_attr \"length\" \"12,8,12,12,12,16,12,16,16,16\")])\n \n (define_split\n-  [(set (match_operand:CC 5 \"cc_reg_not_cr0_operand\" \"\")\n+  [(set (match_operand:CC 4 \"cc_reg_not_cr0_operand\" \"\")\n \t(compare:CC\n \t (plus:SI\n \t  (eq:SI (match_operand:SI 1 \"gpc_reg_operand\" \"\")\n \t\t (match_operand:SI 2 \"reg_or_cint_operand\" \"\"))\n \t  (match_operand:SI 3 \"gpc_reg_operand\" \"\"))\n \t (const_int 0)))\n    (set (match_operand:SI 0 \"gpc_reg_operand\" \"\")\n-\t(plus:SI (eq:SI (match_dup 1) (match_dup 2)) (match_dup 3)))\n-   (clobber (match_scratch:SI 4 \"\"))]\n+\t(plus:SI (eq:SI (match_dup 1) (match_dup 2)) (match_dup 3)))]\n   \"! TARGET_POWERPC64 && reload_completed\"\n-  [(parallel [(set (match_dup 0)\n+  [(set (match_dup 0)\n \t(plus:SI (eq:SI (match_dup 1) (match_dup 2)) (match_dup 3)))\n-   (clobber (match_dup 4))])\n-   (set (match_dup 5)\n+   (set (match_dup 4)\n \t(compare:CC (match_dup 0)\n \t\t    (const_int 0)))]\n   \"\")"}]}