{"sha": "4e2e315f25e0e3e5735d317b3159027ad3277d6d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGUyZTMxNWYyNWUwZTNlNTczNWQzMTdiMzE1OTAyN2FkMzI3N2Q2ZA==", "commit": {"author": {"name": "Neil Booth", "email": "neil@daikokuya.co.uk", "date": "2003-05-18T09:46:23Z"}, "committer": {"name": "Neil Booth", "email": "neil@gcc.gnu.org", "date": "2003-05-18T09:46:23Z"}, "message": "c-cppbuiltin.c (TARGET_OS_CPP_BUILTINS, [...]): Default here.\n\n\t* c-cppbuiltin.c (TARGET_OS_CPP_BUILTINS, TARGET_OBJFMT_CPP_BUILTINS):\n\tDefault here.\n\t(c_cpp_builtins): Invoke TARGET_OBJFMT_CPP_BUILTINS().\n\t* defaults.h: Don't default TARGET_OS_CPP_BUILTINS here.\n\t* config/elfos.h (TARGET_OBJFMT_CPP_BUILTINS): Define __ELF__.\n\t* config/freebsd-spec.h, config/netbsd-elf.h, config/alpha/gnu.h,\n\tconfig/arm/linux-elf.h, config/arm/rtems-elf.h,\n\tconfig/arm/unknown-elf.h, config/cris/cris.h, config/cris/linux.h,\n\tconfig/h8300/elf.h, config/i370/linux.h, config/i386/beos-elf.h,\n\tconfig/i386/gnu.h, config/i386/linux.h, config/i386/linux64.h,\n\tconfig/i386/moss.h, config/i386/rtemself.h, config/ia64/ia64.h,\n\tconfig/m68k/rtemself.h, config/mcore/mcore-elf.h, config/mips/linux.h,\n\tconfig/pa/pa-linux.h, config/rs6000/linux.h, config/rs6000/linux64.h,\n\tconfig/rs6000/sysv4.h, config/rs6000/vxworks.h, config/s390/linux.h,\n\tconfig/sh/coff.h, config/sh/elf.h, config/sh/rtemself.h,\n\tconfig/sh/sh.h, config/sparc/linux.h, config/sparc/linux64.h,\n\tconfig/sparc/openbsd64.h, config/sparc/sp64-elf.h,\n\tconfig/sparc/sp86x-elf.h, config/xtensa/elf.h, config/xtensa/linux.h:\n\tDon't define __ELF__.\n\t* config/alpha.h, config/m68k/linux.h (TARGET_OBJFMT_CPP_BUILTINS):\n\tDefine __ELF__.\n\t* doc/cpp.texi: Document __ELF__.\n\t* doc/tm.texi: Document TARGET_OBJFMT_CPP_BUILTINS.\n\nFrom-SVN: r66926", "tree": {"sha": "934055010292a1ef9f72c81a8ea96eb52f524b30", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/934055010292a1ef9f72c81a8ea96eb52f524b30"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4e2e315f25e0e3e5735d317b3159027ad3277d6d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e2e315f25e0e3e5735d317b3159027ad3277d6d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e2e315f25e0e3e5735d317b3159027ad3277d6d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e2e315f25e0e3e5735d317b3159027ad3277d6d/comments", "author": {"login": "neilb-xx", "id": 160762, "node_id": "MDQ6VXNlcjE2MDc2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/160762?v=4", "gravatar_id": "", "url": "https://api.github.com/users/neilb-xx", "html_url": "https://github.com/neilb-xx", "followers_url": "https://api.github.com/users/neilb-xx/followers", "following_url": "https://api.github.com/users/neilb-xx/following{/other_user}", "gists_url": "https://api.github.com/users/neilb-xx/gists{/gist_id}", "starred_url": "https://api.github.com/users/neilb-xx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/neilb-xx/subscriptions", "organizations_url": "https://api.github.com/users/neilb-xx/orgs", "repos_url": "https://api.github.com/users/neilb-xx/repos", "events_url": "https://api.github.com/users/neilb-xx/events{/privacy}", "received_events_url": "https://api.github.com/users/neilb-xx/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "25903d03442b16235d3198031754e321e0c787c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25903d03442b16235d3198031754e321e0c787c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/25903d03442b16235d3198031754e321e0c787c8"}], "stats": {"total": 143, "additions": 69, "deletions": 74}, "files": [{"sha": "72a621c12bbba08294c9c9c080336031f6b7722e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e2e315f25e0e3e5735d317b3159027ad3277d6d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e2e315f25e0e3e5735d317b3159027ad3277d6d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4e2e315f25e0e3e5735d317b3159027ad3277d6d", "patch": "@@ -1,3 +1,29 @@\n+2003-05-18  Neil Booth  <neil@daikokuya.co.uk>\n+\n+\t* c-cppbuiltin.c (TARGET_OS_CPP_BUILTINS, TARGET_OBJFMT_CPP_BUILTINS):\n+\tDefault here.\n+\t(c_cpp_builtins): Invoke TARGET_OBJFMT_CPP_BUILTINS().\n+\t* defaults.h: Don't default TARGET_OS_CPP_BUILTINS here.\n+\t* config/elfos.h (TARGET_OBJFMT_CPP_BUILTINS): Define __ELF__.\n+\t* config/freebsd-spec.h, config/netbsd-elf.h, config/alpha/gnu.h,\n+\tconfig/arm/linux-elf.h, config/arm/rtems-elf.h,\n+\tconfig/arm/unknown-elf.h, config/cris/cris.h, config/cris/linux.h,\n+\tconfig/h8300/elf.h, config/i370/linux.h, config/i386/beos-elf.h,\n+\tconfig/i386/gnu.h, config/i386/linux.h, config/i386/linux64.h,\n+\tconfig/i386/moss.h, config/i386/rtemself.h, config/ia64/ia64.h,\n+\tconfig/m68k/rtemself.h, config/mcore/mcore-elf.h, config/mips/linux.h,\n+\tconfig/pa/pa-linux.h, config/rs6000/linux.h, config/rs6000/linux64.h,\n+\tconfig/rs6000/sysv4.h, config/rs6000/vxworks.h, config/s390/linux.h,\n+\tconfig/sh/coff.h, config/sh/elf.h, config/sh/rtemself.h,\n+\tconfig/sh/sh.h, config/sparc/linux.h, config/sparc/linux64.h,\n+\tconfig/sparc/openbsd64.h, config/sparc/sp64-elf.h,\n+\tconfig/sparc/sp86x-elf.h, config/xtensa/elf.h, config/xtensa/linux.h:\n+\tDon't define __ELF__.\n+\t* config/alpha.h, config/m68k/linux.h (TARGET_OBJFMT_CPP_BUILTINS):\n+\tDefine __ELF__.\n+\t* doc/cpp.texi: Document __ELF__.\n+\t* doc/tm.texi: Document TARGET_OBJFMT_CPP_BUILTINS.\t* \n+\n 2003-05-17  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* builtins.c (validate_arglist): Eliminate libiberty VA_ macros,"}, {"sha": "c97ced3caef06e39758fa1f85f3f57eae7fe0c76", "filename": "gcc/c-cppbuiltin.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e2e315f25e0e3e5735d317b3159027ad3277d6d/gcc%2Fc-cppbuiltin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e2e315f25e0e3e5735d317b3159027ad3277d6d/gcc%2Fc-cppbuiltin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-cppbuiltin.c?ref=4e2e315f25e0e3e5735d317b3159027ad3277d6d", "patch": "@@ -32,6 +32,14 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #include \"toplev.h\"\n #include \"tm_p.h\"\t\t/* Target prototypes.  */\n \n+#ifndef TARGET_OS_CPP_BUILTINS\n+# define TARGET_OS_CPP_BUILTINS()\n+#endif\n+\n+#ifndef TARGET_OBJFMT_CPP_BUILTINS\n+# define TARGET_OBJFMT_CPP_BUILTINS()\n+#endif\n+\n #ifndef REGISTER_PREFIX\n #define REGISTER_PREFIX \"\"\n #endif\n@@ -387,6 +395,7 @@ c_cpp_builtins (pfile)\n # define builtin_assert(TXT) cpp_assert (pfile, TXT)\n   TARGET_CPU_CPP_BUILTINS ();\n   TARGET_OS_CPP_BUILTINS ();\n+  TARGET_OBJFMT_CPP_BUILTINS ();\n }\n \n /* Pass an object-like macro.  If it doesn't lie in the user's"}, {"sha": "3ca8d6c7478d7a9cfb36b0784bc53d1e7863785b", "filename": "gcc/config/alpha/elf.h", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e2e315f25e0e3e5735d317b3159027ad3277d6d/gcc%2Fconfig%2Falpha%2Felf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e2e315f25e0e3e5735d317b3159027ad3277d6d/gcc%2Fconfig%2Falpha%2Felf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Felf.h?ref=4e2e315f25e0e3e5735d317b3159027ad3277d6d", "patch": "@@ -35,8 +35,13 @@ Boston, MA 02111-1307, USA.    */\n \n #undef ASM_FINAL_SPEC\n \n-#undef  CPP_SUBTARGET_SPEC\n-#define CPP_SUBTARGET_SPEC \"-D__ELF__\"\n+/* alpha/ doesn't use elfos.h for some reason.  */\n+#define TARGET_OBJFMT_CPP_BUILTINS()\t\t\\\n+  do\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\\\n+\tbuiltin_define (\"__ELF__\");\t\t\\\n+    }\t\t\t\t\t\t\\\n+  while (0)\n \n #undef  CC1_SPEC\n #define CC1_SPEC  \"%{G*}\""}, {"sha": "db2a278db4a5f08c98a97d37a1094fc9daf71ecd", "filename": "gcc/config/alpha/gnu.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e2e315f25e0e3e5735d317b3159027ad3277d6d/gcc%2Fconfig%2Falpha%2Fgnu.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e2e315f25e0e3e5735d317b3159027ad3277d6d/gcc%2Fconfig%2Falpha%2Fgnu.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Fgnu.h?ref=4e2e315f25e0e3e5735d317b3159027ad3277d6d", "patch": "@@ -7,7 +7,6 @@\n #define TARGET_OS_CPP_BUILTINS()\t\t\\\n     do {\t\t\t\t\t\\\n \tbuiltin_define (\"__GNU__\");\t\t\\\n-\tbuiltin_define (\"__ELF__\");\t\t\\\n \tbuiltin_define (\"__gnu_hurd__\");\t\\\n \tbuiltin_define (\"_LONGLONG\");\t\t\\\n \tbuiltin_define_std (\"unix\");\t\t\\"}, {"sha": "5da2b242070702bb457b2d97c5ab7678ca1dfb6e", "filename": "gcc/config/arm/linux-elf.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e2e315f25e0e3e5735d317b3159027ad3277d6d/gcc%2Fconfig%2Farm%2Flinux-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e2e315f25e0e3e5735d317b3159027ad3277d6d/gcc%2Fconfig%2Farm%2Flinux-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Flinux-elf.h?ref=4e2e315f25e0e3e5735d317b3159027ad3277d6d", "patch": "@@ -94,7 +94,6 @@\n \tbuiltin_define_std (\"unix\");\t\t\\\n \tbuiltin_define_std (\"linux\");\t\t\\\n \tbuiltin_define (\"__gnu_linux__\");\t\\\n-\tbuiltin_define (\"__ELF__\");\t\t\\\n \tbuiltin_assert (\"system=unix\");\t\t\\\n \tbuiltin_assert (\"system=posix\");\t\\\n     } while (0)"}, {"sha": "a736ee1ea10c7718d379c280c08d0ea47594e343", "filename": "gcc/config/arm/rtems-elf.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e2e315f25e0e3e5735d317b3159027ad3277d6d/gcc%2Fconfig%2Farm%2Frtems-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e2e315f25e0e3e5735d317b3159027ad3277d6d/gcc%2Fconfig%2Farm%2Frtems-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Frtems-elf.h?ref=4e2e315f25e0e3e5735d317b3159027ad3277d6d", "patch": "@@ -27,6 +27,5 @@\n #define TARGET_OS_CPP_BUILTINS()\t\t\\\n     do {\t\t\t\t\t\\\n \tbuiltin_define (\"__rtems__\");\t\t\\\n-\tbuiltin_define (\"__ELF__\");\t\t\\\n \tbuiltin_assert (\"system=rtems\");\t\\\n     } while (0)"}, {"sha": "573803fce2dc3314bf1a0b5d5989c5520ce58fb4", "filename": "gcc/config/arm/unknown-elf.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e2e315f25e0e3e5735d317b3159027ad3277d6d/gcc%2Fconfig%2Farm%2Funknown-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e2e315f25e0e3e5735d317b3159027ad3277d6d/gcc%2Fconfig%2Farm%2Funknown-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Funknown-elf.h?ref=4e2e315f25e0e3e5735d317b3159027ad3277d6d", "patch": "@@ -43,7 +43,7 @@\n /* The __USES_INITFINI__ define is tested in newlib/libc/sys/arm/crt0.S\n    to see if it needs to invoked _init() and _fini().  */\n #undef  SUBTARGET_CPP_SPEC\n-#define SUBTARGET_CPP_SPEC  \"-D__ELF__ -D__USES_INITFINI__\"\n+#define SUBTARGET_CPP_SPEC  \"-D__USES_INITFINI__\"\n \n #undef  PREFERRED_DEBUGGING_TYPE\n #define PREFERRED_DEBUGGING_TYPE DWARF2_DEBUG"}, {"sha": "f741663b53df8e966748423ea6e6c2477d35993e", "filename": "gcc/config/cris/cris.h", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e2e315f25e0e3e5735d317b3159027ad3277d6d/gcc%2Fconfig%2Fcris%2Fcris.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e2e315f25e0e3e5735d317b3159027ad3277d6d/gcc%2Fconfig%2Fcris%2Fcris.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fcris%2Fcris.h?ref=4e2e315f25e0e3e5735d317b3159027ad3277d6d", "patch": "@@ -254,14 +254,6 @@ extern const char *cris_elinux_stacksize_str;\n     }\t\t\t\t\t\t\\\n   while (0)\n \n-#define TARGET_OS_CPP_BUILTINS()\t\t\\\n-  do\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\\\n-      builtin_define (\"__ELF__\");\t\t\\\n-    }\t\t\t\t\t\t\\\n-  while (0)\n-\n-\n /* This needs to be at least 32 bits.  */\n extern int target_flags;\n "}, {"sha": "6893d7f39b16e0bbc16aace11da83e5b2b72341d", "filename": "gcc/config/cris/linux.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e2e315f25e0e3e5735d317b3159027ad3277d6d/gcc%2Fconfig%2Fcris%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e2e315f25e0e3e5735d317b3159027ad3277d6d/gcc%2Fconfig%2Fcris%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fcris%2Flinux.h?ref=4e2e315f25e0e3e5735d317b3159027ad3277d6d", "patch": "@@ -106,7 +106,6 @@ Boston, MA 02111-1307, USA.  */\n       builtin_define (\"__gnu_linux__\");\t\t\\\n       builtin_define (\"__linux__\");\t\t\\\n       builtin_define (\"__unix__\");\t\t\\\n-      builtin_define (\"__ELF__\");\t\t\\\n       if (flag_pic)\t\t\t\t\\\n \t{\t\t\t\t\t\\\n \t  builtin_define (\"__PIC__\");\t\t\\"}, {"sha": "3a04661ea33ba7f28d45144bbf744209337035dd", "filename": "gcc/config/elfos.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e2e315f25e0e3e5735d317b3159027ad3277d6d/gcc%2Fconfig%2Felfos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e2e315f25e0e3e5735d317b3159027ad3277d6d/gcc%2Fconfig%2Felfos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Felfos.h?ref=4e2e315f25e0e3e5735d317b3159027ad3277d6d", "patch": "@@ -21,6 +21,12 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n+#define TARGET_OBJFMT_CPP_BUILTINS()\t\t\\\n+  do\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\\\n+\tbuiltin_define (\"__ELF__\");\t\t\\\n+    }\t\t\t\t\t\t\\\n+  while (0)\n \n /* Define a symbol indicating that we are using elfos.h.\n    Some CPU specific configuration files use this.  */"}, {"sha": "b71a2024d3380f39651386d30dd42a7e89fbcc56", "filename": "gcc/config/freebsd-spec.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e2e315f25e0e3e5735d317b3159027ad3277d6d/gcc%2Fconfig%2Ffreebsd-spec.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e2e315f25e0e3e5735d317b3159027ad3277d6d/gcc%2Fconfig%2Ffreebsd-spec.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffreebsd-spec.h?ref=4e2e315f25e0e3e5735d317b3159027ad3277d6d", "patch": "@@ -62,7 +62,6 @@ Boston, MA 02111-1307, USA.  */\n \telse\t\t\t\t\t\t\t\t\\\n \t  builtin_define (\"__FreeBSD__\");\t\t\t       \t\\\n \tbuiltin_define_std (\"unix\");\t\t\t\t\t\\\n-\tbuiltin_define (\"__ELF__\");\t\t\t\t\t\\\n \tbuiltin_define (\"__KPRINTF_ATTRIBUTE__\");\t\t       \t\\\n \tbuiltin_assert (\"system=unix\");\t\t\t\t\t\\\n \tbuiltin_assert (\"system=bsd\");\t\t\t\t\t\\"}, {"sha": "bfa4e8143943666432b52ae67c5e289ea375a71b", "filename": "gcc/config/h8300/elf.h", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e2e315f25e0e3e5735d317b3159027ad3277d6d/gcc%2Fconfig%2Fh8300%2Felf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e2e315f25e0e3e5735d317b3159027ad3277d6d/gcc%2Fconfig%2Fh8300%2Felf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Felf.h?ref=4e2e315f25e0e3e5735d317b3159027ad3277d6d", "patch": "@@ -1,11 +1,3 @@\n-/* Target OS preprocessor built-ins.  */\n-#define TARGET_OS_CPP_BUILTINS()\t\t\\\n-  do\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\\\n-      builtin_define (\"__ELF__\");\t\t\\\n-    }\t\t\t\t\t\t\\\n-  while (0)\n-\n /* Undefine some macros defined in h8300 that conflict with elfos.h .  */\n #undef SDB_DEBUGGING_INFO\n #undef DBX_DEBUGGING_INFO"}, {"sha": "730d6b0e996b3787c8b62ec7e685fe06f6a43dc8", "filename": "gcc/config/i370/linux.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e2e315f25e0e3e5735d317b3159027ad3277d6d/gcc%2Fconfig%2Fi370%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e2e315f25e0e3e5735d317b3159027ad3277d6d/gcc%2Fconfig%2Fi370%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi370%2Flinux.h?ref=4e2e315f25e0e3e5735d317b3159027ad3277d6d", "patch": "@@ -38,7 +38,6 @@ Boston, MA 02111-1307, USA.  */\n \tbuiltin_define_std (\"unix\");\t\t\\\n \tbuiltin_define_std (\"linux\");\t\t\\\n \tbuiltin_define (\"__gnu_linux__\");\t\\\n-\tbuiltin_define (\"__ELF__\");\t\t\\\n \tbuiltin_assert (\"system=posix\");\t\\\n     } while (0)\n "}, {"sha": "d36975606c672972ee9951e3d2f75c4e3d2b235f", "filename": "gcc/config/i386/beos-elf.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e2e315f25e0e3e5735d317b3159027ad3277d6d/gcc%2Fconfig%2Fi386%2Fbeos-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e2e315f25e0e3e5735d317b3159027ad3277d6d/gcc%2Fconfig%2Fi386%2Fbeos-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fbeos-elf.h?ref=4e2e315f25e0e3e5735d317b3159027ad3277d6d", "patch": "@@ -58,7 +58,6 @@ Boston, MA 02111-1307, USA.  */\n #define TARGET_OS_CPP_BUILTINS()\t\t\t\t\t\\\n   do\t\t\t\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\t\t\t\\\n-\tbuiltin_define (\"__ELF__\");\t\t\t\t\t\\\n \tbuiltin_define (\"__BEOS__\");\t\t\t\t\t\\\n \tbuiltin_define (\"__INTEL__\");\t\t\t\t\t\\\n \tbuiltin_define (\"_X86_\");\t\t\t\t\t\\"}, {"sha": "ff0ff254bac10f5f65185cfb169d09362d8fbc22", "filename": "gcc/config/i386/gnu.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e2e315f25e0e3e5735d317b3159027ad3277d6d/gcc%2Fconfig%2Fi386%2Fgnu.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e2e315f25e0e3e5735d317b3159027ad3277d6d/gcc%2Fconfig%2Fi386%2Fgnu.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fgnu.h?ref=4e2e315f25e0e3e5735d317b3159027ad3277d6d", "patch": "@@ -9,7 +9,6 @@\n     {\t\t\t\t\t\t\\\n \tbuiltin_define_std (\"MACH\");\t\t\\\n \tbuiltin_define_std (\"unix\");\t\t\\\n-\tbuiltin_define (\"__ELF__\");\t\t\\\n \tbuiltin_define (\"__GNU__\");\t\t\\\n \tbuiltin_define (\"__gnu_hurd__\");\t\\\n \tbuiltin_assert (\"system=gnu\");\t\t\\"}, {"sha": "15733930408d7c2a781f0e625675596815fef7b0", "filename": "gcc/config/i386/linux.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e2e315f25e0e3e5735d317b3159027ad3277d6d/gcc%2Fconfig%2Fi386%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e2e315f25e0e3e5735d317b3159027ad3277d6d/gcc%2Fconfig%2Fi386%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Flinux.h?ref=4e2e315f25e0e3e5735d317b3159027ad3277d6d", "patch": "@@ -79,7 +79,6 @@ Boston, MA 02111-1307, USA.  */\n     {\t\t\t\t\t\t\\\n \tbuiltin_define_std (\"linux\");\t\t\\\n \tbuiltin_define_std (\"unix\");\t\t\\\n-\tbuiltin_define (\"__ELF__\");\t\t\\\n \tbuiltin_define (\"__gnu_linux__\");\t\\\n \tbuiltin_assert (\"system=posix\");\t\\\n \tif (flag_pic)\t\t\t\t\\"}, {"sha": "591e10df34b4ec455826d22db8e468014ab475b1", "filename": "gcc/config/i386/linux64.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e2e315f25e0e3e5735d317b3159027ad3277d6d/gcc%2Fconfig%2Fi386%2Flinux64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e2e315f25e0e3e5735d317b3159027ad3277d6d/gcc%2Fconfig%2Fi386%2Flinux64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Flinux64.h?ref=4e2e315f25e0e3e5735d317b3159027ad3277d6d", "patch": "@@ -29,7 +29,6 @@ Boston, MA 02111-1307, USA.  */\n \tbuiltin_define_std (\"linux\");\t\t\t\t\\\n \tbuiltin_define_std (\"unix\");\t\t\t\t\\\n \tbuiltin_define (\"__gnu_linux__\");\t\t\t\\\n-\tbuiltin_define (\"__ELF__\");\t\t\t\t\\\n \tbuiltin_assert (\"system=posix\");\t\t\t\\\n \tif (flag_pic)\t\t\t\t\t\t\\\n \t  {\t\t\t\t\t\t\t\\"}, {"sha": "fc0e60c1b04db6386abb6fca56eaa093a9d4b061", "filename": "gcc/config/i386/moss.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e2e315f25e0e3e5735d317b3159027ad3277d6d/gcc%2Fconfig%2Fi386%2Fmoss.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e2e315f25e0e3e5735d317b3159027ad3277d6d/gcc%2Fconfig%2Fi386%2Fmoss.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fmoss.h?ref=4e2e315f25e0e3e5735d317b3159027ad3277d6d", "patch": "@@ -24,7 +24,6 @@ Boston, MA 02111-1307, USA.  */\n   do\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\\\n \tbuiltin_define_std (\"moss\");\t\t\\\n-\tbuiltin_define (\"__ELF__\");\t\t\\\n \tbuiltin_assert (\"system=posix\");\t\\\n \tif (flag_pic)\t\t\t\t\\\n \t  {\t\t\t\t\t\\"}, {"sha": "59c40d6917e56fbc697a2c4cc0e99656dd3866cc", "filename": "gcc/config/i386/rtemself.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e2e315f25e0e3e5735d317b3159027ad3277d6d/gcc%2Fconfig%2Fi386%2Frtemself.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e2e315f25e0e3e5735d317b3159027ad3277d6d/gcc%2Fconfig%2Fi386%2Frtemself.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Frtemself.h?ref=4e2e315f25e0e3e5735d317b3159027ad3277d6d", "patch": "@@ -25,7 +25,6 @@ Boston, MA 02111-1307, USA.  */\n   do\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\\\n \tbuiltin_define (\"__rtems__\");\t\t\\\n-\tbuiltin_define (\"__ELF__\");\t\t\\\n \tbuiltin_define (\"__USE_INIT_FINI__\");\t\\\n \tbuiltin_assert (\"system=rtems\");\t\\\n \tif (!TARGET_80387)\t\t\t\\"}, {"sha": "41a687b70a263274cf2dc910c6089e467bcb9754", "filename": "gcc/config/ia64/ia64.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e2e315f25e0e3e5735d317b3159027ad3277d6d/gcc%2Fconfig%2Fia64%2Fia64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e2e315f25e0e3e5735d317b3159027ad3277d6d/gcc%2Fconfig%2Fia64%2Fia64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.h?ref=4e2e315f25e0e3e5735d317b3159027ad3277d6d", "patch": "@@ -39,7 +39,6 @@ do {\t\t\t\t\t\t\\\n \tbuiltin_define(\"__ia64\");\t\t\\\n \tbuiltin_define(\"__ia64__\");\t\t\\\n \tbuiltin_define(\"__itanium__\");\t\t\\\n-\tbuiltin_define(\"__ELF__\");\t\t\\\n \tif (TARGET_BIG_ENDIAN)\t\t\t\\\n \t  builtin_define(\"__BIG_ENDIAN__\");\t\\\n } while (0)"}, {"sha": "b9b90826467fd13f52de5895fb1ab9639945adab", "filename": "gcc/config/m68k/linux.h", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e2e315f25e0e3e5735d317b3159027ad3277d6d/gcc%2Fconfig%2Fm68k%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e2e315f25e0e3e5735d317b3159027ad3277d6d/gcc%2Fconfig%2Fm68k%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Flinux.h?ref=4e2e315f25e0e3e5735d317b3159027ad3277d6d", "patch": "@@ -106,12 +106,18 @@ Boston, MA 02111-1307, USA.  */\n \tbuiltin_define_std (\"linux\");\t\t\\\n \tbuiltin_define_std (\"unix\");\t\t\\\n \tbuiltin_define (\"__gnu_linux__\");\t\\\n-\tbuiltin_define (\"__ELF__\");\t\t\\\n \tbuiltin_assert (\"system=unix\");\t\t\\\n \tbuiltin_assert (\"system=posix\");\t\\\n    }\t\t\t\t\t\t\\\n   while (0)\n \n+#define TARGET_OBJFMT_CPP_BUILTINS()\t\t\\\n+  do\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\\\n+\tbuiltin_define (\"__ELF__\");\t\t\\\n+    }\t\t\t\t\t\t\\\n+  while (0)\n+\n #undef CPP_SPEC\n #ifdef USE_GNULIBC_1\n #if TARGET_DEFAULT & MASK_68881"}, {"sha": "ab051fe4bc8281c118a0b2360f883500974ed7b7", "filename": "gcc/config/m68k/rtemself.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e2e315f25e0e3e5735d317b3159027ad3277d6d/gcc%2Fconfig%2Fm68k%2Frtemself.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e2e315f25e0e3e5735d317b3159027ad3277d6d/gcc%2Fconfig%2Fm68k%2Frtemself.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Frtemself.h?ref=4e2e315f25e0e3e5735d317b3159027ad3277d6d", "patch": "@@ -30,7 +30,6 @@ Boston, MA 02111-1307, USA.  */\n \tbuiltin_define_std (\"mc68000\");\t\t\\\n \tbuiltin_define (\"__USE_INIT_FINI__\");\t\\\n \tbuiltin_define (\"__rtems__\");\t\t\\\n-\tbuiltin_define (\"__ELF__\");\t\t\\\n \tbuiltin_assert (\"system=rtems\");\t\\\n     }\t\t\t\t\t\t\\\n   while (0)"}, {"sha": "cc8986a6ac63e72fe1a857fbd8e3e120dc7aef11", "filename": "gcc/config/mcore/mcore-elf.h", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e2e315f25e0e3e5735d317b3159027ad3277d6d/gcc%2Fconfig%2Fmcore%2Fmcore-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e2e315f25e0e3e5735d317b3159027ad3277d6d/gcc%2Fconfig%2Fmcore%2Fmcore-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmcore%2Fmcore-elf.h?ref=4e2e315f25e0e3e5735d317b3159027ad3277d6d", "patch": "@@ -25,13 +25,6 @@ Boston, MA 02111-1307, USA.  */\n /* Run-time Target Specification.  */\n #define TARGET_VERSION fputs (\" (Motorola MCORE/elf)\", stderr)\n \n-#define TARGET_OS_CPP_BUILTINS()\t\t\t\t\\\n-  do\t\t\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\\\n-      builtin_define (\"__ELF__\");\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\\\n-  while (0)\n-\n /* Use DWARF2 debugging info.  */\n #define DWARF2_DEBUGGING_INFO 1\n "}, {"sha": "2461ac34292abd08d65ef27c4b798cd8e716d204", "filename": "gcc/config/mips/linux.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e2e315f25e0e3e5735d317b3159027ad3277d6d/gcc%2Fconfig%2Fmips%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e2e315f25e0e3e5735d317b3159027ad3277d6d/gcc%2Fconfig%2Fmips%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Flinux.h?ref=4e2e315f25e0e3e5735d317b3159027ad3277d6d", "patch": "@@ -120,7 +120,6 @@ void FN ()\t\t\t\t\t\t\t\\\n #define TARGET_OS_CPP_BUILTINS()\t\t\t\t\\\n     do {\t\t\t\t\t\t\t\\\n \tbuiltin_define (\"__gnu_linux__\");\t\t\t\\\n-\tbuiltin_define (\"__ELF__\");\t\t\t\t\\\n \tbuiltin_define (\"__PIC__\");\t\t\t\t\\\n \tbuiltin_define (\"__pic__\");\t\t\t\t\\\n \tbuiltin_define_std (\"unix\");\t\t\t\t\\"}, {"sha": "55ea23a73840b1a7fc8f987856b24d3e795ad39b", "filename": "gcc/config/netbsd-elf.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e2e315f25e0e3e5735d317b3159027ad3277d6d/gcc%2Fconfig%2Fnetbsd-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e2e315f25e0e3e5735d317b3159027ad3277d6d/gcc%2Fconfig%2Fnetbsd-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnetbsd-elf.h?ref=4e2e315f25e0e3e5735d317b3159027ad3277d6d", "patch": "@@ -24,7 +24,6 @@ Boston, MA 02111-1307, USA.  */\n   do\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\\\n       NETBSD_OS_CPP_BUILTINS_COMMON();\t\t\\\n-      builtin_define (\"__ELF__\");\t\t\\\n     }\t\t\t\t\t\t\\\n   while (0)\n "}, {"sha": "1c8266af57aec7f9a383c7efd497a5b0e3ea6c53", "filename": "gcc/config/pa/pa-linux.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e2e315f25e0e3e5735d317b3159027ad3277d6d/gcc%2Fconfig%2Fpa%2Fpa-linux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e2e315f25e0e3e5735d317b3159027ad3277d6d/gcc%2Fconfig%2Fpa%2Fpa-linux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa-linux.h?ref=4e2e315f25e0e3e5735d317b3159027ad3277d6d", "patch": "@@ -56,7 +56,6 @@ Boston, MA 02111-1307, USA.  */\n #define TARGET_OS_CPP_BUILTINS()\t\t\\\n   do\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\\\n-\tbuiltin_define (\"__ELF__\");\t\t\\\n \tbuiltin_define (\"__gnu_linux__\");\t\\\n \tbuiltin_define_std (\"linux\");\t\t\\\n \tbuiltin_define_std (\"unix\");\t\t\\"}, {"sha": "98e85e48363d9d0e1b9f16c59287125f9f47b1b2", "filename": "gcc/config/rs6000/linux.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e2e315f25e0e3e5735d317b3159027ad3277d6d/gcc%2Fconfig%2Frs6000%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e2e315f25e0e3e5735d317b3159027ad3277d6d/gcc%2Fconfig%2Frs6000%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Flinux.h?ref=4e2e315f25e0e3e5735d317b3159027ad3277d6d", "patch": "@@ -29,7 +29,6 @@\n   do                                      \\\n     {                                     \\\n       builtin_define_std (\"PPC\");         \\\n-      builtin_define (\"__ELF__\");         \\\n       builtin_define_std (\"powerpc\");     \\\n       builtin_assert (\"cpu=powerpc\");     \\\n       builtin_assert (\"machine=powerpc\"); \\"}, {"sha": "128e3b755360476f14e9e6b4b986c72d92fc6030", "filename": "gcc/config/rs6000/linux64.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e2e315f25e0e3e5735d317b3159027ad3277d6d/gcc%2Fconfig%2Frs6000%2Flinux64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e2e315f25e0e3e5735d317b3159027ad3277d6d/gcc%2Fconfig%2Frs6000%2Flinux64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Flinux64.h?ref=4e2e315f25e0e3e5735d317b3159027ad3277d6d", "patch": "@@ -170,7 +170,6 @@\n       builtin_define (\"__powerpc__\");       \\\n       builtin_define (\"__powerpc64__\");     \\\n       builtin_define (\"__PIC__\");           \\\n-      builtin_define (\"__ELF__\");           \\\n       builtin_assert (\"cpu=powerpc64\");     \\\n       builtin_assert (\"machine=powerpc64\"); \\\n     }                                       \\"}, {"sha": "4ccc71da6b5383c34503303b5de4f00edcc60ad8", "filename": "gcc/config/rs6000/sysv4.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e2e315f25e0e3e5735d317b3159027ad3277d6d/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e2e315f25e0e3e5735d317b3159027ad3277d6d/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fsysv4.h?ref=4e2e315f25e0e3e5735d317b3159027ad3277d6d", "patch": "@@ -1071,7 +1071,7 @@ extern int fixuplabelno;\n /* FreeBSD support.  */\n \n #define CPP_OS_FREEBSD_SPEC\t\"\\\n-  -D__ELF__ -D__PPC__ -D__ppc__ -D__PowerPC__ -D__powerpc__ \\\n+  -D__PPC__ -D__ppc__ -D__PowerPC__ -D__powerpc__ \\\n   -Acpu=powerpc -Amachine=powerpc\"\n \n #define\tSTARTFILE_FREEBSD_SPEC\tFBSD_STARTFILE_SPEC\n@@ -1190,7 +1190,7 @@ ncrtn.o%s\"\n   %{!dynamic-linker:-dynamic-linker /usr/libexec/ld.elf_so}}}\"\n \n #define CPP_OS_NETBSD_SPEC \"\\\n--D__powerpc__ -D__NetBSD__ -D__ELF__ -D__KPRINTF_ATTRIBUTE__\"\n+-D__powerpc__ -D__NetBSD__ -D__KPRINTF_ATTRIBUTE__\"\n \n /* WindISS support.  */\n "}, {"sha": "6a5c7e98e985853cbd2feb44e162cee2844919ab", "filename": "gcc/config/rs6000/vxworks.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e2e315f25e0e3e5735d317b3159027ad3277d6d/gcc%2Fconfig%2Frs6000%2Fvxworks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e2e315f25e0e3e5735d317b3159027ad3277d6d/gcc%2Fconfig%2Frs6000%2Fvxworks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fvxworks.h?ref=4e2e315f25e0e3e5735d317b3159027ad3277d6d", "patch": "@@ -39,7 +39,7 @@\n #define SUBTARGET_EXTRA_SPECS /* none needed */\n \n #define CPP_SPEC \\\n-\"-DCPU_FAMILY=PPC -D__ppc -D__EABI__ -D__ELF__ \\\n+\"-DCPU_FAMILY=PPC -D__ppc -D__EABI__  \\\n  %{t403: -DCPU=PPC403 -D_SOFT_FLOAT ; \\\n    t405: -DCPU=PPC405 -D_SOFT_FLOAT ; \\\n    t440: -DCPU=PPC440 -D_SOFT_FLOAT ; \\"}, {"sha": "cc496bdb63b0c714c7e47de4906422e0da39f10c", "filename": "gcc/config/s390/linux.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e2e315f25e0e3e5735d317b3159027ad3277d6d/gcc%2Fconfig%2Fs390%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e2e315f25e0e3e5735d317b3159027ad3277d6d/gcc%2Fconfig%2Fs390%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Flinux.h?ref=4e2e315f25e0e3e5735d317b3159027ad3277d6d", "patch": "@@ -57,7 +57,6 @@ Boston, MA 02111-1307, USA.  */\n       builtin_define_std (\"unix\");\t\t\\\n       builtin_assert (\"system=linux\");\t\t\\\n       builtin_assert (\"system=unix\");\t\t\\\n-      builtin_define (\"__ELF__\");\t\t\\\n       builtin_define (\"__gnu_linux__\");\t\t\\\n       if (flag_pic)\t\t\t\t\\\n         {\t\t\t\t\t\\"}, {"sha": "4d9aeb3d78d6138f7557386eb36e06d17f769af0", "filename": "gcc/config/sh/coff.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e2e315f25e0e3e5735d317b3159027ad3277d6d/gcc%2Fconfig%2Fsh%2Fcoff.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e2e315f25e0e3e5735d317b3159027ad3277d6d/gcc%2Fconfig%2Fsh%2Fcoff.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fcoff.h?ref=4e2e315f25e0e3e5735d317b3159027ad3277d6d", "patch": "@@ -72,6 +72,4 @@ Boston, MA 02111-1307, USA.  */\n   assemble_name ((FILE), (NAME)),\t\t\t\\\n   fprintf ((FILE), \",%d\\n\", (int)(SIZE)))\n \n-#define TARGET_OBJFMT_CPP_BUILTINS()\n-\n #define DWARF2_UNWIND_INFO 0"}, {"sha": "0dc2468a8603f14350d5e7707ac2efcafc4d3dc4", "filename": "gcc/config/sh/elf.h", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e2e315f25e0e3e5735d317b3159027ad3277d6d/gcc%2Fconfig%2Fsh%2Felf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e2e315f25e0e3e5735d317b3159027ad3277d6d/gcc%2Fconfig%2Fsh%2Felf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Felf.h?ref=4e2e315f25e0e3e5735d317b3159027ad3277d6d", "patch": "@@ -58,11 +58,6 @@ Boston, MA 02111-1307, USA.  */\n     fprintf ((FILE), \"\\t.little\\n\");\t\t\t\t\\\n } while (0)\n \n-\n-\n-/* Let code know that this is ELF.  */\n-#define TARGET_OBJFMT_CPP_BUILTINS() builtin_define (\"__ELF__\")\n-\n #undef SIZE_TYPE\n #define SIZE_TYPE (TARGET_SH5 ? \"long unsigned int\" : \"unsigned int\")\n "}, {"sha": "b386774c5f29359f353621f0196138750ad5c2a7", "filename": "gcc/config/sh/rtemself.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e2e315f25e0e3e5735d317b3159027ad3277d6d/gcc%2Fconfig%2Fsh%2Frtemself.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e2e315f25e0e3e5735d317b3159027ad3277d6d/gcc%2Fconfig%2Fsh%2Frtemself.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Frtemself.h?ref=4e2e315f25e0e3e5735d317b3159027ad3277d6d", "patch": "@@ -23,6 +23,5 @@ Boston, MA 02111-1307, USA.  */\n \n #define TARGET_OS_CPP_BUILTINS() do {\t\t\\\n   builtin_define( \"__rtems__\" );\t\t\\\n-  builtin_define( \"__ELF__\" );\t\t\t\\\n   builtin_assert( \"system=rtems\" );\t\t\\\n } while (0)"}, {"sha": "c75103395344702cc34578031fdedf8e92da9586", "filename": "gcc/config/sh/sh.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e2e315f25e0e3e5735d317b3159027ad3277d6d/gcc%2Fconfig%2Fsh%2Fsh.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e2e315f25e0e3e5735d317b3159027ad3277d6d/gcc%2Fconfig%2Fsh%2Fsh.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.h?ref=4e2e315f25e0e3e5735d317b3159027ad3277d6d", "patch": "@@ -79,7 +79,6 @@ do { \\\n       builtin_define (\"__pic__\"); \\\n       builtin_define (\"__PIC__\"); \\\n     } \\\n-  TARGET_OBJFMT_CPP_BUILTINS (); \\\n } while (0)\n \n /* We can not debug without a frame pointer.  */"}, {"sha": "23f5892dd19e1b41064a6bed8ca488e3777f1e36", "filename": "gcc/config/sparc/linux.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e2e315f25e0e3e5735d317b3159027ad3277d6d/gcc%2Fconfig%2Fsparc%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e2e315f25e0e3e5735d317b3159027ad3277d6d/gcc%2Fconfig%2Fsparc%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Flinux.h?ref=4e2e315f25e0e3e5735d317b3159027ad3277d6d", "patch": "@@ -25,7 +25,6 @@ Boston, MA 02111-1307, USA.  */\n \tbuiltin_define_std (\"unix\");\t\t\\\n \tbuiltin_define_std (\"linux\");\t\t\\\n \tbuiltin_define (\"__gnu_linux__\");\t\\\n-\tbuiltin_define (\"__ELF__\");\t\t\\\n \tbuiltin_assert (\"system=unix\");\t\t\\\n \tbuiltin_assert (\"system=posix\");\t\\\n     }\t\t\t\t\t\t\\"}, {"sha": "aed067d9eacdef2d36a8482cf17b39be003ba5be", "filename": "gcc/config/sparc/linux64.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e2e315f25e0e3e5735d317b3159027ad3277d6d/gcc%2Fconfig%2Fsparc%2Flinux64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e2e315f25e0e3e5735d317b3159027ad3277d6d/gcc%2Fconfig%2Fsparc%2Flinux64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Flinux64.h?ref=4e2e315f25e0e3e5735d317b3159027ad3277d6d", "patch": "@@ -26,7 +26,6 @@ Boston, MA 02111-1307, USA.  */\n \tbuiltin_define_std (\"linux\");\t\t\\\n \tbuiltin_define (\"_LONGLONG\");\t\t\\\n \tbuiltin_define (\"__gnu_linux__\");\t\\\n-\tbuiltin_define (\"__ELF__\");\t\t\\\n \tbuiltin_assert (\"system=unix\");\t\t\\\n \tbuiltin_assert (\"system=posix\");\t\\\n     }\t\t\t\t\t\t\\"}, {"sha": "96ddf7949af3cbf56a741cbe985d9ff1ec4d7209", "filename": "gcc/config/sparc/openbsd64.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e2e315f25e0e3e5735d317b3159027ad3277d6d/gcc%2Fconfig%2Fsparc%2Fopenbsd64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e2e315f25e0e3e5735d317b3159027ad3277d6d/gcc%2Fconfig%2Fsparc%2Fopenbsd64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fopenbsd64.h?ref=4e2e315f25e0e3e5735d317b3159027ad3277d6d", "patch": "@@ -42,7 +42,6 @@ Boston, MA 02111-1307, USA.  */\n \tbuiltin_define (\"__sparcv9__\");\t\t\\\n \tbuiltin_define (\"__sparc_v9__\");\t\\\n \tbuiltin_define (\"__arch64__\");\t\t\\\n-\tbuiltin_define (\"__ELF__\");\t\t\\\n     }\t\t\t\t\t\t\\\n   while (0)\n "}, {"sha": "f442fd86fc665e6dd9985c64ca95081e7621d1a1", "filename": "gcc/config/sparc/sp64-elf.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e2e315f25e0e3e5735d317b3159027ad3277d6d/gcc%2Fconfig%2Fsparc%2Fsp64-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e2e315f25e0e3e5735d317b3159027ad3277d6d/gcc%2Fconfig%2Fsparc%2Fsp64-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsp64-elf.h?ref=4e2e315f25e0e3e5735d317b3159027ad3277d6d", "patch": "@@ -44,7 +44,6 @@ Boston, MA 02111-1307, USA.  */\n   do\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\\\n \tbuiltin_define_std (\"sparc\");\t\t\\\n-\tbuiltin_define (\"__ELF__\");\t\t\\\n     }\t\t\t\t\t\t\\\n   while (0)\n "}, {"sha": "a3107b50a5745632f621eb1e14122ff81122bfa1", "filename": "gcc/config/sparc/sp86x-elf.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e2e315f25e0e3e5735d317b3159027ad3277d6d/gcc%2Fconfig%2Fsparc%2Fsp86x-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e2e315f25e0e3e5735d317b3159027ad3277d6d/gcc%2Fconfig%2Fsparc%2Fsp86x-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsp86x-elf.h?ref=4e2e315f25e0e3e5735d317b3159027ad3277d6d", "patch": "@@ -24,7 +24,6 @@ Boston, MA 02111-1307, USA.  */\n   do\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\\\n \tbuiltin_define (\"__sparclite86x__\");\t\\\n-\tbuiltin_define (\"__ELF__\");\t\t\\\n     }\t\t\t\t\t\t\\\n   while (0)\n "}, {"sha": "6c8ebcdc211b576d77bdeb2e948112bba6ea1d24", "filename": "gcc/config/xtensa/elf.h", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e2e315f25e0e3e5735d317b3159027ad3277d6d/gcc%2Fconfig%2Fxtensa%2Felf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e2e315f25e0e3e5735d317b3159027ad3277d6d/gcc%2Fconfig%2Fxtensa%2Felf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Felf.h?ref=4e2e315f25e0e3e5735d317b3159027ad3277d6d", "patch": "@@ -19,11 +19,6 @@ along with GCC; see the file COPYING.  If not, write to the Free\n Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n 02111-1307, USA.  */\n \n-#define TARGET_OS_CPP_BUILTINS()\t\t\t\t\\\n-  do {\t\t\t\t\t\t\t\t\\\n-    builtin_define (\"__ELF__\");\t\t\t\t\t\\\n-  } while (0)\n-\n #define TARGET_SECTION_TYPE_FLAGS xtensa_multibss_section_type_flags\n \n /* Don't assume anything about the header files. */"}, {"sha": "b3281a21d5227afd05723b7193a9435c2b9129d2", "filename": "gcc/config/xtensa/linux.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e2e315f25e0e3e5735d317b3159027ad3277d6d/gcc%2Fconfig%2Fxtensa%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e2e315f25e0e3e5735d317b3159027ad3277d6d/gcc%2Fconfig%2Fxtensa%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Flinux.h?ref=4e2e315f25e0e3e5735d317b3159027ad3277d6d", "patch": "@@ -23,7 +23,6 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n   do {\t\t\t\t\t\t\t\t\\\n     builtin_define_std (\"linux\");\t\t\t\t\\\n     builtin_define_std (\"unix\");\t\t\t\t\\\n-    builtin_define (\"__ELF__\");\t\t\t\t\t\\\n     builtin_define (\"__gnu_linux__\");\t\t\t\t\\\n     builtin_assert (\"system=posix\");\t\t\t\t\\\n   } while (0)"}, {"sha": "12b2527ef062aa268d639b2c4382c6399c2dcf93", "filename": "gcc/defaults.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e2e315f25e0e3e5735d317b3159027ad3277d6d/gcc%2Fdefaults.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e2e315f25e0e3e5735d317b3159027ad3277d6d/gcc%2Fdefaults.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdefaults.h?ref=4e2e315f25e0e3e5735d317b3159027ad3277d6d", "patch": "@@ -47,10 +47,6 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #  define TARGET_ESC 033\n #endif\n \n-#ifndef TARGET_OS_CPP_BUILTINS\n-# define TARGET_OS_CPP_BUILTINS()\n-#endif\n-\n /* Store in OUTPUT a string (made with alloca) containing an\n    assembler-name for a local static variable or function named NAME.\n    LABELNO is an integer which is different for each call.  */"}, {"sha": "63ac814c0f5123e958029cb91fb2d7a7f45a160f", "filename": "gcc/doc/cpp.texi", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e2e315f25e0e3e5735d317b3159027ad3277d6d/gcc%2Fdoc%2Fcpp.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e2e315f25e0e3e5735d317b3159027ad3277d6d/gcc%2Fdoc%2Fcpp.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fcpp.texi?ref=4e2e315f25e0e3e5735d317b3159027ad3277d6d", "patch": "@@ -1945,6 +1945,9 @@ incremented on every @samp{#include} directive and decremented at the\n end of every included file.  It starts out at 0, it's value within the\n base file specified on the command line.\n \n+@item __ELF__\n+This macro is defined if the target uses the ELF object format.\n+\n @item __VERSION__\n This macro expands to a string constant which describes the version of\n the compiler in use.  You should not rely on its contents having any"}, {"sha": "73b2f273ee8c9f0d69c47e06cb9472fb5850175c", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e2e315f25e0e3e5735d317b3159027ad3277d6d/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e2e315f25e0e3e5735d317b3159027ad3277d6d/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=4e2e315f25e0e3e5735d317b3159027ad3277d6d", "patch": "@@ -655,6 +655,13 @@ preprocessing.\n Similarly to @code{TARGET_CPU_CPP_BUILTINS} but this macro is optional\n and is used for the target operating system instead.\n \n+@findex TARGET_OBJFMT_CPP_BUILTINS\n+@item TARGET_OBJFMT_CPP_BUILTINS()\n+Similarly to @code{TARGET_CPU_CPP_BUILTINS} but this macro is optional\n+and is used for the target object format.  @file{elfos.h} uses this\n+macro to define @code{__ELF__}, so you probably do not need to define\n+it yourself.\n+\n @findex extern int target_flags\n @item extern int target_flags;\n This declaration should be present."}]}