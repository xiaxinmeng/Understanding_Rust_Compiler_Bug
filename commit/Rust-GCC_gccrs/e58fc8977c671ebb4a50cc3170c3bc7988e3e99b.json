{"sha": "e58fc8977c671ebb4a50cc3170c3bc7988e3e99b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTU4ZmM4OTc3YzY3MWViYjRhNTBjYzMxNzBjM2JjNzk4OGUzZTk5Yg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2019-09-18T08:31:46Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-09-18T08:31:46Z"}, "message": "[Ada] Remove remaining references to VMS support\n\n2019-09-18  Arnaud Charlet  <charlet@adacore.com>\n\ngcc/ada/\n\n\t* doc/gnat_rm/implementation_defined_characteristics.rst,\n\tdoc/gnat_rm/implementation_defined_pragmas.rst,\n\tdoc/gnat_rm/implementation_of_specific_ada_features.rst: Remove\n\tremaining references to VMS support\n\t* gnat_rm.texi: Regenerate.\n\nFrom-SVN: r275841", "tree": {"sha": "be161bfe98c593ef4e89407d70f8d11922fd7f98", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/be161bfe98c593ef4e89407d70f8d11922fd7f98"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e58fc8977c671ebb4a50cc3170c3bc7988e3e99b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e58fc8977c671ebb4a50cc3170c3bc7988e3e99b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e58fc8977c671ebb4a50cc3170c3bc7988e3e99b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e58fc8977c671ebb4a50cc3170c3bc7988e3e99b/comments", "author": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "aeb68a2b4729e5b918b996c0ab11d34466164cfb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aeb68a2b4729e5b918b996c0ab11d34466164cfb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aeb68a2b4729e5b918b996c0ab11d34466164cfb"}], "stats": {"total": 34, "additions": 17, "deletions": 17}, "files": [{"sha": "07221d3cb0d442aaa5257d0040f9079bb9d2e27a", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e58fc8977c671ebb4a50cc3170c3bc7988e3e99b/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e58fc8977c671ebb4a50cc3170c3bc7988e3e99b/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=e58fc8977c671ebb4a50cc3170c3bc7988e3e99b", "patch": "@@ -1,3 +1,11 @@\n+2019-09-18  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* doc/gnat_rm/implementation_defined_characteristics.rst,\n+\tdoc/gnat_rm/implementation_defined_pragmas.rst,\n+\tdoc/gnat_rm/implementation_of_specific_ada_features.rst: Remove\n+\tremaining references to VMS support\n+\t* gnat_rm.texi: Regenerate.\n+\n 2019-09-18  Arnaud Charlet  <charlet@adacore.com>\n \n \t* libgnat/s-stausa.adb: Fix a typo"}, {"sha": "a5425daee1c00fc7b96de099fcb1d573df047880", "filename": "gcc/ada/doc/gnat_rm/implementation_defined_characteristics.rst", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e58fc8977c671ebb4a50cc3170c3bc7988e3e99b/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fimplementation_defined_characteristics.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e58fc8977c671ebb4a50cc3170c3bc7988e3e99b/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fimplementation_defined_characteristics.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fimplementation_defined_characteristics.rst?ref=e58fc8977c671ebb4a50cc3170c3bc7988e3e99b", "patch": "@@ -772,9 +772,8 @@ Convention Name         Interpretation\n                         be present at all.  This convention is useful during development for the\n                         inclusion of subprograms whose body has not yet been written.\n                         In addition, all otherwise unrecognized convention names are also\n-                        treated as being synonymous with convention C.  In all implementations\n-                        except for VMS, use of such other names results in a warning.  In VMS\n-                        implementations, these names are accepted silently.\n+                        treated as being synonymous with convention C.  In all implementations,\n+                        use of such other names results in a warning.\n ======================= ==============================================================================\n \n *"}, {"sha": "551401f7094706541a2cf7bb783bd761367f8094", "filename": "gcc/ada/doc/gnat_rm/implementation_defined_pragmas.rst", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e58fc8977c671ebb4a50cc3170c3bc7988e3e99b/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fimplementation_defined_pragmas.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e58fc8977c671ebb4a50cc3170c3bc7988e3e99b/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fimplementation_defined_pragmas.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fimplementation_defined_pragmas.rst?ref=e58fc8977c671ebb4a50cc3170c3bc7988e3e99b", "patch": "@@ -3254,7 +3254,7 @@ Ada exceptions, or used to implement run-time functions such as the\n Pragma ``Interrupt_State`` provides a general mechanism for overriding\n such uses of interrupts.  It subsumes the functionality of pragma\n ``Unreserve_All_Interrupts``.  Pragma ``Interrupt_State`` is not\n-available on Windows or VMS.  On all other platforms than VxWorks,\n+available on Windows.  On all other platforms than VxWorks,\n it applies to signals; on VxWorks, it applies to vectored hardware interrupts\n and may be used to mark interrupts required by the board support package\n as reserved.\n@@ -7689,7 +7689,7 @@ asterisks is similar in effect to specifying ``pragma Warnings (Off)`` except (i\n ``pragma Warnings (On, \"***\")`` will be required. This can be\n helpful in avoiding forgetting to turn warnings back on.\n \n-Note: the debug flag :switch:`-gnatd.i` (``/NOWARNINGS_PRAGMAS`` in VMS) can be\n+Note: the debug flag :switch:`-gnatd.i` can be\n used to cause the compiler to entirely ignore all WARNINGS pragmas. This can\n be useful in checking whether obsolete pragmas in existing programs are hiding\n real problems."}, {"sha": "e818ab5d50ab3b7a9ba523d130b5d0a41358b422", "filename": "gcc/ada/doc/gnat_rm/implementation_of_specific_ada_features.rst", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e58fc8977c671ebb4a50cc3170c3bc7988e3e99b/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fimplementation_of_specific_ada_features.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e58fc8977c671ebb4a50cc3170c3bc7988e3e99b/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fimplementation_of_specific_ada_features.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fimplementation_of_specific_ada_features.rst?ref=e58fc8977c671ebb4a50cc3170c3bc7988e3e99b", "patch": "@@ -410,9 +410,6 @@ is created in the shared memory directory.\n This is used to provide the required locking\n semantics for proper protected object synchronization.\n \n-GNAT supports shared passive packages on all platforms\n-except for OpenVMS.\n-\n .. _Code_Generation_for_Array_Aggregates:\n \n Code Generation for Array Aggregates"}, {"sha": "921dd1664f2c139d583975fcaa487b7dc117b942", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 5, "deletions": 9, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e58fc8977c671ebb4a50cc3170c3bc7988e3e99b/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e58fc8977c671ebb4a50cc3170c3bc7988e3e99b/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=e58fc8977c671ebb4a50cc3170c3bc7988e3e99b", "patch": "@@ -21,7 +21,7 @@\n \n @copying\n @quotation\n-GNAT Reference Manual , Sep 13, 2019\n+GNAT Reference Manual , Sep 14, 2019\n \n AdaCore\n \n@@ -4714,7 +4714,7 @@ Ada exceptions, or used to implement run-time functions such as the\n Pragma @code{Interrupt_State} provides a general mechanism for overriding\n such uses of interrupts.  It subsumes the functionality of pragma\n @code{Unreserve_All_Interrupts}.  Pragma @code{Interrupt_State} is not\n-available on Windows or VMS.  On all other platforms than VxWorks,\n+available on Windows.  On all other platforms than VxWorks,\n it applies to signals; on VxWorks, it applies to vectored hardware interrupts\n and may be used to mark interrupts required by the board support package\n as reserved.\n@@ -9187,7 +9187,7 @@ asterisks is similar in effect to specifying @code{pragma Warnings (Off)} except\n @code{pragma Warnings (On, \"***\")} will be required. This can be\n helpful in avoiding forgetting to turn warnings back on.\n \n-Note: the debug flag @code{-gnatd.i} (@code{/NOWARNINGS_PRAGMAS} in VMS) can be\n+Note: the debug flag @code{-gnatd.i} can be\n used to cause the compiler to entirely ignore all WARNINGS pragmas. This can\n be useful in checking whether obsolete pragmas in existing programs are hiding\n real problems.\n@@ -17249,9 +17249,8 @@ pragma @code{Import} specifies convention @code{stubbed} then no body need\n be present at all.  This convention is useful during development for the\n inclusion of subprograms whose body has not yet been written.\n In addition, all otherwise unrecognized convention names are also\n-treated as being synonymous with convention C.  In all implementations\n-except for VMS, use of such other names results in a warning.  In VMS\n-implementations, these names are accepted silently.\n+treated as being synonymous with convention C.  In all implementations,\n+use of such other names results in a warning.\n \n @end multitable\n \n@@ -26293,9 +26292,6 @@ is created in the shared memory directory.\n This is used to provide the required locking\n semantics for proper protected object synchronization.\n \n-GNAT supports shared passive packages on all platforms\n-except for OpenVMS.\n-\n @node Code Generation for Array Aggregates,The Size of Discriminated Records with Default Discriminants,GNAT Implementation of Shared Passive Packages,Implementation of Specific Ada Features\n @anchor{gnat_rm/implementation_of_specific_ada_features code-generation-for-array-aggregates}@anchor{422}@anchor{gnat_rm/implementation_of_specific_ada_features id7}@anchor{423}\n @section Code Generation for Array Aggregates"}]}