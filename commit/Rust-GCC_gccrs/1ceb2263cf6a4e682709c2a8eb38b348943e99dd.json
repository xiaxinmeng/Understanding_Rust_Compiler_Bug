{"sha": "1ceb2263cf6a4e682709c2a8eb38b348943e99dd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWNlYjIyNjNjZjZhNGU2ODI3MDljMmE4ZWIzOGIzNDg5NDNlOTlkZA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2009-01-16T18:35:28Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2009-01-16T18:35:28Z"}, "message": "re PR c++/38579 (Template: Wrong inherited copy-ctor visibility)\n\n        PR c++/38579\n        * search.c (protected_accessible_p): N doesn't vary.\n\nFrom-SVN: r143439", "tree": {"sha": "d4f7041a5bb0761159f40d5daad1c4d65dd1a875", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d4f7041a5bb0761159f40d5daad1c4d65dd1a875"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1ceb2263cf6a4e682709c2a8eb38b348943e99dd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ceb2263cf6a4e682709c2a8eb38b348943e99dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ceb2263cf6a4e682709c2a8eb38b348943e99dd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ceb2263cf6a4e682709c2a8eb38b348943e99dd/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bcab4e19dad2f3961908459964df00c086a19c13", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bcab4e19dad2f3961908459964df00c086a19c13", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bcab4e19dad2f3961908459964df00c086a19c13"}], "stats": {"total": 52, "additions": 40, "deletions": 12}, "files": [{"sha": "395873ced6b96929fcafc0fe62665435b9d1f23c", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ceb2263cf6a4e682709c2a8eb38b348943e99dd/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ceb2263cf6a4e682709c2a8eb38b348943e99dd/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=1ceb2263cf6a4e682709c2a8eb38b348943e99dd", "patch": "@@ -1,3 +1,8 @@\n+2009-01-16  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/38579\n+\t* search.c (protected_accessible_p): N doesn't vary.\n+\n 2009-01-15  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/38850"}, {"sha": "ecc79264e114e177cdf5935de4fcb2ab0ebeb765", "filename": "gcc/cp/search.c", "status": "modified", "additions": 5, "deletions": 12, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ceb2263cf6a4e682709c2a8eb38b348943e99dd/gcc%2Fcp%2Fsearch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ceb2263cf6a4e682709c2a8eb38b348943e99dd/gcc%2Fcp%2Fsearch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsearch.c?ref=1ceb2263cf6a4e682709c2a8eb38b348943e99dd", "patch": "@@ -721,20 +721,13 @@ protected_accessible_p (tree decl, tree derived, tree binfo)\n \n        m as a member of N is protected, and the reference occurs in a\n        member or friend of class N, or in a member or friend of a\n-       class P derived from N, where m as a member of P is private or\n-       protected.\n-\n-    Here DERIVED is a possible P and DECL is m.  accessible_p will\n-    iterate over various values of N, but the access to m in DERIVED\n-    does not change.\n+       class P derived from N, where m as a member of P is public, private\n+       or protected.\n \n-    Note that I believe that the passage above is wrong, and should read\n-    \"...is private or protected or public\"; otherwise you get bizarre results\n-    whereby a public using-decl can prevent you from accessing a protected\n-    member of a base.  (jason 2000/02/28)  */\n+    Here DERIVED is a possible P, DECL is m and BINFO_TYPE (binfo) is N.  */\n \n-  /* If DERIVED isn't derived from m's class, then it can't be a P.  */\n-  if (!DERIVED_FROM_P (context_for_name_lookup (decl), derived))\n+  /* If DERIVED isn't derived from N, then it can't be a P.  */\n+  if (!DERIVED_FROM_P (BINFO_TYPE (binfo), derived))\n     return 0;\n \n   access = access_in_type (derived, decl);"}, {"sha": "96b4ce583d73425d9c498bb7e475a474e44f0523", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ceb2263cf6a4e682709c2a8eb38b348943e99dd/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ceb2263cf6a4e682709c2a8eb38b348943e99dd/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1ceb2263cf6a4e682709c2a8eb38b348943e99dd", "patch": "@@ -1,3 +1,8 @@\n+2009-01-16  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/38579\n+\t* g++.dg/conversion/access1.C: New test.\n+\n 2009-01-16  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/38789"}, {"sha": "f187e63a9d3d9aecd3480b463f6142499c8698d2", "filename": "gcc/testsuite/g++.dg/conversion/access1.C", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ceb2263cf6a4e682709c2a8eb38b348943e99dd/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Faccess1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ceb2263cf6a4e682709c2a8eb38b348943e99dd/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Faccess1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Faccess1.C?ref=1ceb2263cf6a4e682709c2a8eb38b348943e99dd", "patch": "@@ -0,0 +1,25 @@\n+// PR c++/38579\n+\n+struct P \n+{\n+protected:\n+  P() {}\n+  P(const P&) {}\n+};\n+\n+struct B : protected P\n+{\n+  B() {}\n+};\n+\n+struct C : public P\n+{\n+  // C can access P's copy ctor, but can't convert b to const P&.\n+  C(const B& b) : P(b) {}\t// { dg-error \"inaccessible base\" }\n+};\n+\n+void foo()\n+{\n+  B b;\n+  C c(b);\n+}"}]}