{"sha": "8e92560a9c9c57dfed3283c48ef5e46a7e0204b1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGU5MjU2MGE5YzljNTdkZmVkMzI4M2M0OGVmNWU0NmE3ZTAyMDRiMQ==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2015-11-20T15:19:09Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2015-11-20T15:19:09Z"}, "message": "[ARM] Do not expand movmisalign pattern if not in 32-bit mode\n\n\t* config/arm/arm.c (arm_option_override): Require TARGET_32BIT\n\tfor unaligned_access.\n\t* config/arm/arm.md (unaligned_loadsi): Remove redundant TARGET_32BIT\n\tfrom matching condition.\n\t(unaligned_loadhis): Likewise.\n\t(unaligned_loadhiu): Likewise.\n\t(unaligned_storesi): Likewise.\n\t(unaligned_storehi): Likewise.\n\n\t* gcc.target/arm/armv6-unaligned-load-ice.c: New test.\n\nFrom-SVN: r230664", "tree": {"sha": "7537684c2270e6e521ed169b8b6a13da9a61f96a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7537684c2270e6e521ed169b8b6a13da9a61f96a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8e92560a9c9c57dfed3283c48ef5e46a7e0204b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e92560a9c9c57dfed3283c48ef5e46a7e0204b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e92560a9c9c57dfed3283c48ef5e46a7e0204b1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e92560a9c9c57dfed3283c48ef5e46a7e0204b1/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "88fdc9a66e4b14aef5aa4b873223e4d081a8824c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88fdc9a66e4b14aef5aa4b873223e4d081a8824c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88fdc9a66e4b14aef5aa4b873223e4d081a8824c"}], "stats": {"total": 48, "additions": 41, "deletions": 7}, "files": [{"sha": "a16d09c0a4e2381def08aaad035550ae3022e1a2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e92560a9c9c57dfed3283c48ef5e46a7e0204b1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e92560a9c9c57dfed3283c48ef5e46a7e0204b1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8e92560a9c9c57dfed3283c48ef5e46a7e0204b1", "patch": "@@ -1,3 +1,14 @@\n+2015-11-20  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* config/arm/arm.c (arm_option_override): Require TARGET_32BIT\n+\tfor unaligned_access.\n+\t* config/arm/arm.md (unaligned_loadsi): Remove redundant TARGET_32BIT\n+\tfrom matching condition.\n+\t(unaligned_loadhis): Likewise.\n+\t(unaligned_loadhiu): Likewise.\n+\t(unaligned_storesi): Likewise.\n+\t(unaligned_storehi): Likewise.\n+\n 2015-11-20  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \tPR target/68149"}, {"sha": "290b537ae166b5d48fdf28e461c9dafb8be3ef9d", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e92560a9c9c57dfed3283c48ef5e46a7e0204b1/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e92560a9c9c57dfed3283c48ef5e46a7e0204b1/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=8e92560a9c9c57dfed3283c48ef5e46a7e0204b1", "patch": "@@ -3282,7 +3282,8 @@ arm_option_override (void)\n     }\n \n   /* Enable -munaligned-access by default for\n-     - all ARMv6 architecture-based processors\n+     - all ARMv6 architecture-based processors when compiling for a 32-bit ISA\n+     i.e. Thumb2 and ARM state only.\n      - ARMv7-A, ARMv7-R, and ARMv7-M architecture-based processors.\n      - ARMv8 architecture-base processors.\n \n@@ -3292,7 +3293,7 @@ arm_option_override (void)\n \n   if (unaligned_access == 2)\n     {\n-      if (arm_arch6 && (arm_arch_notm || arm_arch7))\n+      if (TARGET_32BIT && arm_arch6 && (arm_arch_notm || arm_arch7))\n \tunaligned_access = 1;\n       else\n \tunaligned_access = 0;"}, {"sha": "effe7eb799d6e5e6da950be03043d8d397d52db2", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e92560a9c9c57dfed3283c48ef5e46a7e0204b1/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e92560a9c9c57dfed3283c48ef5e46a7e0204b1/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=8e92560a9c9c57dfed3283c48ef5e46a7e0204b1", "patch": "@@ -4219,7 +4219,7 @@\n   [(set (match_operand:SI 0 \"s_register_operand\" \"=l,r\")\n \t(unspec:SI [(match_operand:SI 1 \"memory_operand\" \"Uw,m\")]\n \t\t   UNSPEC_UNALIGNED_LOAD))]\n-  \"unaligned_access && TARGET_32BIT\"\n+  \"unaligned_access\"\n   \"ldr%?\\t%0, %1\\t@ unaligned\"\n   [(set_attr \"arch\" \"t2,any\")\n    (set_attr \"length\" \"2,4\")\n@@ -4232,7 +4232,7 @@\n \t(sign_extend:SI\n \t  (unspec:HI [(match_operand:HI 1 \"memory_operand\" \"Uw,Uh\")]\n \t\t     UNSPEC_UNALIGNED_LOAD)))]\n-  \"unaligned_access && TARGET_32BIT\"\n+  \"unaligned_access\"\n   \"ldrsh%?\\t%0, %1\\t@ unaligned\"\n   [(set_attr \"arch\" \"t2,any\")\n    (set_attr \"length\" \"2,4\")\n@@ -4245,7 +4245,7 @@\n \t(zero_extend:SI\n \t  (unspec:HI [(match_operand:HI 1 \"memory_operand\" \"Uw,m\")]\n \t\t     UNSPEC_UNALIGNED_LOAD)))]\n-  \"unaligned_access && TARGET_32BIT\"\n+  \"unaligned_access\"\n   \"ldrh%?\\t%0, %1\\t@ unaligned\"\n   [(set_attr \"arch\" \"t2,any\")\n    (set_attr \"length\" \"2,4\")\n@@ -4257,7 +4257,7 @@\n   [(set (match_operand:SI 0 \"memory_operand\" \"=Uw,m\")\n \t(unspec:SI [(match_operand:SI 1 \"s_register_operand\" \"l,r\")]\n \t\t   UNSPEC_UNALIGNED_STORE))]\n-  \"unaligned_access && TARGET_32BIT\"\n+  \"unaligned_access\"\n   \"str%?\\t%1, %0\\t@ unaligned\"\n   [(set_attr \"arch\" \"t2,any\")\n    (set_attr \"length\" \"2,4\")\n@@ -4269,7 +4269,7 @@\n   [(set (match_operand:HI 0 \"memory_operand\" \"=Uw,m\")\n \t(unspec:HI [(match_operand:HI 1 \"s_register_operand\" \"l,r\")]\n \t\t   UNSPEC_UNALIGNED_STORE))]\n-  \"unaligned_access && TARGET_32BIT\"\n+  \"unaligned_access\"\n   \"strh%?\\t%1, %0\\t@ unaligned\"\n   [(set_attr \"arch\" \"t2,any\")\n    (set_attr \"length\" \"2,4\")"}, {"sha": "d55f6dd231b87dc7502c1375be89d86dc5277ec5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e92560a9c9c57dfed3283c48ef5e46a7e0204b1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e92560a9c9c57dfed3283c48ef5e46a7e0204b1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8e92560a9c9c57dfed3283c48ef5e46a7e0204b1", "patch": "@@ -1,3 +1,7 @@\n+2015-11-20  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* gcc.target/arm/armv6-unaligned-load-ice.c: New test.\n+\n 2015-11-20  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/68237"}, {"sha": "88528f11e121d7aa16607e4e4024ce01124e0fd4", "filename": "gcc/testsuite/gcc.target/arm/armv6-unaligned-load-ice.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e92560a9c9c57dfed3283c48ef5e46a7e0204b1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Farmv6-unaligned-load-ice.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e92560a9c9c57dfed3283c48ef5e46a7e0204b1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Farmv6-unaligned-load-ice.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Farmv6-unaligned-load-ice.c?ref=8e92560a9c9c57dfed3283c48ef5e46a7e0204b1", "patch": "@@ -0,0 +1,18 @@\n+/* { dg-do compile } */\n+/* { dg-skip-if \"avoid conflicting multilib options\" { *-*-* } { \"-march=*\" } { \"-march=armv6k\" } } */\n+/* { dg-skip-if \"avoid conflicting multilib options\" { *-*-* } { \"-marm\" } { \"\" } } */\n+/* { dg-options \"-mthumb -Os -mfloat-abi=softfp\" } */\n+/* { dg-add-options arm_arch_v6k } */\n+\n+long\n+get_number (char *s, long size, int unsigned_p)\n+{\n+  long x;\n+  unsigned char *p = (unsigned char *) s;\n+  switch (size)\n+    {\n+    case 4:\n+      x = ((long) p[3] << 24) | ((long) p[2] << 16) | (p[1] << 8) | p[0];\n+      return x;\n+    }\n+}"}]}