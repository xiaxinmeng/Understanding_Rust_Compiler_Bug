{"sha": "ff24afc8d09134862051b36afe786fd4818a9da4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmYyNGFmYzhkMDkxMzQ4NjIwNTFiMzZhZmU3ODZmZDQ4MThhOWRhNA==", "commit": {"author": {"name": "Georg-Johann Lay", "email": "avr@gjlay.de", "date": "2013-02-28T09:16:08Z"}, "committer": {"name": "Georg-Johann Lay", "email": "gjl@gcc.gnu.org", "date": "2013-02-28T09:16:08Z"}, "message": "re PR target/56445 (avr.c:11551:16: error: invoking macro FX_FTYPE_FX ar gument 1: empty macro arguments are undefined)\n\n\tPR target/56445\n\t* config/avr/avr.c (avr_init_builtins): Use 'n' instead of empty\n\tmacro parameters with: FX_FTYPE_FX, FX_FTYPE_FX_INT, INT_FTYPE_FX,\n\tINTX_FTYPE_FX, FX_FTYPE_INTX.\n\t* config/avr/builtins.def: Adjust respective DEF_BUILTIN.\n\nFrom-SVN: r196332", "tree": {"sha": "68636945717ef5b69a2c0f4c11f424a83ebbd2f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/68636945717ef5b69a2c0f4c11f424a83ebbd2f4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ff24afc8d09134862051b36afe786fd4818a9da4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff24afc8d09134862051b36afe786fd4818a9da4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff24afc8d09134862051b36afe786fd4818a9da4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff24afc8d09134862051b36afe786fd4818a9da4/comments", "author": null, "committer": {"login": "sprintersb", "id": 8905355, "node_id": "MDQ6VXNlcjg5MDUzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/8905355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sprintersb", "html_url": "https://github.com/sprintersb", "followers_url": "https://api.github.com/users/sprintersb/followers", "following_url": "https://api.github.com/users/sprintersb/following{/other_user}", "gists_url": "https://api.github.com/users/sprintersb/gists{/gist_id}", "starred_url": "https://api.github.com/users/sprintersb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sprintersb/subscriptions", "organizations_url": "https://api.github.com/users/sprintersb/orgs", "repos_url": "https://api.github.com/users/sprintersb/repos", "events_url": "https://api.github.com/users/sprintersb/events{/privacy}", "received_events_url": "https://api.github.com/users/sprintersb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c7b1fc1b9c6d747f29728d8640cb525bd4df057c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7b1fc1b9c6d747f29728d8640cb525bd4df057c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c7b1fc1b9c6d747f29728d8640cb525bd4df057c"}], "stats": {"total": 70, "additions": 39, "deletions": 31}, "files": [{"sha": "407fd674bfcbdd7060165189ac050d6252c29ee9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff24afc8d09134862051b36afe786fd4818a9da4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff24afc8d09134862051b36afe786fd4818a9da4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ff24afc8d09134862051b36afe786fd4818a9da4", "patch": "@@ -1,3 +1,11 @@\n+2013-02-28  Georg-Johann Lay  <avr@gjlay.de>\n+\n+\tPR target/56445\n+\t* config/avr/avr.c (avr_init_builtins): Use 'n' instead of empty\n+\tmacro parameters with: FX_FTYPE_FX, FX_FTYPE_FX_INT, INT_FTYPE_FX,\n+\tINTX_FTYPE_FX, FX_FTYPE_INTX.\n+\t* config/avr/builtins.def: Adjust respective DEF_BUILTIN.\n+\n 2013-02-28  Georg-Johann Lay  <avr@gjlay.de>\n \n \t* avr/avr-mcus.def (ata5272, ata5505, attiny1634, ata6285)"}, {"sha": "f98299043875286e49c2b3d215a9d61ec5ab8e63", "filename": "gcc/config/avr/avr.c", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff24afc8d09134862051b36afe786fd4818a9da4/gcc%2Fconfig%2Favr%2Favr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff24afc8d09134862051b36afe786fd4818a9da4/gcc%2Fconfig%2Favr%2Favr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.c?ref=ff24afc8d09134862051b36afe786fd4818a9da4", "patch": "@@ -11525,78 +11525,78 @@ avr_init_builtins (void)\n     = build_function_type_list (node_##fx##k, ITYP (node_##fx##k), NULL)\n \n   tree node_hr = short_fract_type_node;\n-  tree node_r = fract_type_node;\n+  tree node_nr = fract_type_node;\n   tree node_lr = long_fract_type_node;\n   tree node_llr = long_long_fract_type_node;\n \n   tree node_uhr = unsigned_short_fract_type_node;\n-  tree node_ur = unsigned_fract_type_node;\n+  tree node_unr = unsigned_fract_type_node;\n   tree node_ulr = unsigned_long_fract_type_node;\n   tree node_ullr = unsigned_long_long_fract_type_node;\n \n   tree node_hk = short_accum_type_node;\n-  tree node_k = accum_type_node;\n+  tree node_nk = accum_type_node;\n   tree node_lk = long_accum_type_node;\n   tree node_llk = long_long_accum_type_node;\n \n   tree node_uhk = unsigned_short_accum_type_node;\n-  tree node_uk = unsigned_accum_type_node;\n+  tree node_unk = unsigned_accum_type_node;\n   tree node_ulk = unsigned_long_accum_type_node;\n   tree node_ullk = unsigned_long_long_accum_type_node;\n \n \n   /* For absfx builtins.  */\n \n   FX_FTYPE_FX (h);\n-  FX_FTYPE_FX ();\n+  FX_FTYPE_FX (n);\n   FX_FTYPE_FX (l);\n   FX_FTYPE_FX (ll);\n \n   /* For roundfx builtins.  */\n \n   FX_FTYPE_FX_INT (h);\n-  FX_FTYPE_FX_INT ();\n+  FX_FTYPE_FX_INT (n);\n   FX_FTYPE_FX_INT (l);\n   FX_FTYPE_FX_INT (ll);\n \n   FX_FTYPE_FX_INT (uh);\n-  FX_FTYPE_FX_INT (u);\n+  FX_FTYPE_FX_INT (un);\n   FX_FTYPE_FX_INT (ul);\n   FX_FTYPE_FX_INT (ull);\n \n   /* For countlsfx builtins.  */\n \n   INT_FTYPE_FX (h);\n-  INT_FTYPE_FX ();\n+  INT_FTYPE_FX (n);\n   INT_FTYPE_FX (l);\n   INT_FTYPE_FX (ll);\n \n   INT_FTYPE_FX (uh);\n-  INT_FTYPE_FX (u);\n+  INT_FTYPE_FX (un);\n   INT_FTYPE_FX (ul);\n   INT_FTYPE_FX (ull);\n \n   /* For bitsfx builtins.  */\n \n   INTX_FTYPE_FX (h);\n-  INTX_FTYPE_FX ();\n+  INTX_FTYPE_FX (n);\n   INTX_FTYPE_FX (l);\n   INTX_FTYPE_FX (ll);\n \n   INTX_FTYPE_FX (uh);\n-  INTX_FTYPE_FX (u);\n+  INTX_FTYPE_FX (un);\n   INTX_FTYPE_FX (ul);\n   INTX_FTYPE_FX (ull);\n \n   /* For fxbits builtins.  */\n \n   FX_FTYPE_INTX (h);\n-  FX_FTYPE_INTX ();\n+  FX_FTYPE_INTX (n);\n   FX_FTYPE_INTX (l);\n   FX_FTYPE_INTX (ll);\n \n   FX_FTYPE_INTX (uh);\n-  FX_FTYPE_INTX (u);\n+  FX_FTYPE_INTX (un);\n   FX_FTYPE_INTX (ul);\n   FX_FTYPE_INTX (ull);\n "}, {"sha": "3562c6932a6e34d70e83ee068113d01a6dae9a87", "filename": "gcc/config/avr/builtins.def", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff24afc8d09134862051b36afe786fd4818a9da4/gcc%2Fconfig%2Favr%2Fbuiltins.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff24afc8d09134862051b36afe786fd4818a9da4/gcc%2Fconfig%2Favr%2Fbuiltins.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Fbuiltins.def?ref=ff24afc8d09134862051b36afe786fd4818a9da4", "patch": "@@ -62,101 +62,101 @@ DEF_BUILTIN (FLASH_SEGMENT, 1, char_ftype_const_memx_ptr, flash_segment, NULL)\n /* 7.18a.6.2 The fixed-point absolute value functions. */\n \n DEF_BUILTIN (ABSHR,   1, hr_ftype_hr,   ssabsqq2, \"__ssabs_1\")\n-DEF_BUILTIN (ABSR,    1, r_ftype_r,     ssabshq2, \"__ssabs_2\")\n+DEF_BUILTIN (ABSR,    1, nr_ftype_nr,   ssabshq2, \"__ssabs_2\")\n DEF_BUILTIN (ABSLR,   1, lr_ftype_lr,   ssabssq2, \"__ssabs_4\")\n DEF_BUILTIN (ABSLLR, -1, llr_ftype_llr, nothing,  \"__ssabsdq2\") // GCC extension\n \n DEF_BUILTIN (ABSHK,   1, hk_ftype_hk,   ssabsha2, \"__ssabs_2\")\n-DEF_BUILTIN (ABSK,    1, k_ftype_k,     ssabssa2, \"__ssabs_4\")\n+DEF_BUILTIN (ABSK,    1, nk_ftype_nk,   ssabssa2, \"__ssabs_4\")\n DEF_BUILTIN (ABSLK,  -1, lk_ftype_lk,   nothing,  \"__ssabsda2\")\n DEF_BUILTIN (ABSLLK, -1, llk_ftype_llk, nothing,  \"__ssabsta2\") // GCC extension\n \n /* 7.18a.6.3 The fixed-point round functions. */\n \n DEF_BUILTIN (ROUNDHR,    2, hr_ftype_hr_int,     roundqq3,  \"__roundhr\")\n-DEF_BUILTIN (ROUNDR,     2, r_ftype_r_int,       roundhq3,  \"__roundr\")\n+DEF_BUILTIN (ROUNDR,     2, nr_ftype_nr_int,     roundhq3,  \"__roundr\")\n DEF_BUILTIN (ROUNDLR,    2, lr_ftype_lr_int,     roundsq3,  \"__roundlr\")\n DEF_BUILTIN (ROUNDLLR,  -1, llr_ftype_llr_int,   nothing,   \"__rounddq3\") // GCC extension\n \n DEF_BUILTIN (ROUNDUHR,   2, uhr_ftype_uhr_int,   rounduqq3, \"__rounduhr\")\n-DEF_BUILTIN (ROUNDUR,    2, ur_ftype_ur_int,     rounduhq3, \"__roundur\")\n+DEF_BUILTIN (ROUNDUR,    2, unr_ftype_unr_int,   rounduhq3, \"__roundur\")\n DEF_BUILTIN (ROUNDULR,   2, ulr_ftype_ulr_int,   roundusq3, \"__roundulr\")\n DEF_BUILTIN (ROUNDULLR, -1, ullr_ftype_ullr_int, nothing,   \"__roundudq3\") // GCC extension\n \n DEF_BUILTIN (ROUNDHK,    2, hk_ftype_hk_int,     roundha3,  \"__roundhk\")\n-DEF_BUILTIN (ROUNDK,     2, k_ftype_k_int,       roundsa3,  \"__roundk\")\n+DEF_BUILTIN (ROUNDK,     2, nk_ftype_nk_int,     roundsa3,  \"__roundk\")\n DEF_BUILTIN (ROUNDLK,   -1, lk_ftype_lk_int,     nothing,   \"__roundda3\")\n DEF_BUILTIN (ROUNDLLK,  -1, llk_ftype_llk_int,   nothing,   \"__roundta3\") // GCC extension\n \n DEF_BUILTIN (ROUNDUHK,   2, uhk_ftype_uhk_int,   rounduha3, \"__rounduhk\")\n-DEF_BUILTIN (ROUNDUK,    2, uk_ftype_uk_int,     roundusa3, \"__rounduk\")\n+DEF_BUILTIN (ROUNDUK,    2, unk_ftype_unk_int,   roundusa3, \"__rounduk\")\n DEF_BUILTIN (ROUNDULK,  -1, ulk_ftype_ulk_int,   nothing,   \"__rounduda3\")\n DEF_BUILTIN (ROUNDULLK, -1, ullk_ftype_ullk_int, nothing,   \"__rounduta3\") // GCC extension\n \n /* 7.18a.6.4 The fixed-point bit countls functions. */\n \n DEF_BUILTIN (COUNTLSHR,   -1, int_ftype_hr,   nothing, \"__countlsqi2\")\n-DEF_BUILTIN (COUNTLSR,    -1, int_ftype_r,    nothing, \"__countlshi2\")\n+DEF_BUILTIN (COUNTLSR,    -1, int_ftype_nr,   nothing, \"__countlshi2\")\n DEF_BUILTIN (COUNTLSLR,   -1, int_ftype_lr,   nothing, \"__countlssi2\")\n DEF_BUILTIN (COUNTLSLLR,  -1, int_ftype_llr,  nothing, \"__countlsdi2\") // GCC extension\n \n DEF_BUILTIN (COUNTLSUHR,  -1, int_ftype_uhr,  nothing, \"__countlsuqi2\")\n-DEF_BUILTIN (COUNTLSUR,   -1, int_ftype_ur,   nothing, \"__countlsuhi2\")\n+DEF_BUILTIN (COUNTLSUR,   -1, int_ftype_unr,  nothing, \"__countlsuhi2\")\n DEF_BUILTIN (COUNTLSULR,  -1, int_ftype_ulr,  nothing, \"__countlsusi2\")\n DEF_BUILTIN (COUNTLSULLR, -1, int_ftype_ullr, nothing, \"__countlsudi2\") // GCC extension\n \n DEF_BUILTIN (COUNTLSHK,   -1, int_ftype_hk,   nothing, \"__countlshi2\")\n-DEF_BUILTIN (COUNTLSK,    -1, int_ftype_k,    nothing, \"__countlssi2\")\n+DEF_BUILTIN (COUNTLSK,    -1, int_ftype_nk,   nothing, \"__countlssi2\")\n DEF_BUILTIN (COUNTLSLK,   -1, int_ftype_lk,   nothing, \"__countlsdi2\")\n DEF_BUILTIN (COUNTLSLLK,  -1, int_ftype_llk,  nothing, \"__countlsdi2\") // GCC extension\n \n DEF_BUILTIN (COUNTLSUHK,  -1, int_ftype_uhk,  nothing, \"__countlsuhi2\")\n-DEF_BUILTIN (COUNTLSUK,   -1, int_ftype_uk,   nothing, \"__countlsusi2\")\n+DEF_BUILTIN (COUNTLSUK,   -1, int_ftype_unk,  nothing, \"__countlsusi2\")\n DEF_BUILTIN (COUNTLSULK,  -1, int_ftype_ulk,  nothing, \"__countlsudi2\")\n DEF_BUILTIN (COUNTLSULLK, -1, int_ftype_ullk, nothing, \"__countlsudi2\") // GCC extension\n \n /* 7.18a.6.5 The bitwise fixed-point to integer conversion functions. */\n \n DEF_BUILTIN (BITSHR,   -1,   inthr_ftype_hr,   nothing, \"__ret\")\n-DEF_BUILTIN (BITSR,    -1,    intr_ftype_r,    nothing, \"__ret\")\n+DEF_BUILTIN (BITSR,    -1,   intnr_ftype_nr,   nothing, \"__ret\")\n DEF_BUILTIN (BITSLR,   -1,   intlr_ftype_lr,   nothing, \"__ret\")\n DEF_BUILTIN (BITSLLR,  -1,  intllr_ftype_llr,  nothing, \"__ret\") // GCC extension\n \n DEF_BUILTIN (BITSUHR,  -1,  intuhr_ftype_uhr,  nothing, \"__ret\")\n-DEF_BUILTIN (BITSUR,   -1,   intur_ftype_ur,   nothing, \"__ret\")\n+DEF_BUILTIN (BITSUR,   -1,  intunr_ftype_unr,  nothing, \"__ret\")\n DEF_BUILTIN (BITSULR,  -1,  intulr_ftype_ulr,  nothing, \"__ret\")\n DEF_BUILTIN (BITSULLR, -1, intullr_ftype_ullr, nothing, \"__ret\") // GCC extension\n \n DEF_BUILTIN (BITSHK,   -1,   inthk_ftype_hk,   nothing, \"__ret\")\n-DEF_BUILTIN (BITSK,    -1,    intk_ftype_k,    nothing, \"__ret\")\n+DEF_BUILTIN (BITSK,    -1,   intnk_ftype_nk,   nothing, \"__ret\")\n DEF_BUILTIN (BITSLK,   -1,   intlk_ftype_lk,   nothing, \"__ret\")\n DEF_BUILTIN (BITSLLK,  -1,  intllk_ftype_llk,  nothing, \"__ret\") // GCC extension\n \n DEF_BUILTIN (BITSUHK,  -1,  intuhk_ftype_uhk,  nothing, \"__ret\")\n-DEF_BUILTIN (BITSUK,   -1,   intuk_ftype_uk,   nothing, \"__ret\")\n+DEF_BUILTIN (BITSUK,   -1,  intunk_ftype_unk,  nothing, \"__ret\")\n DEF_BUILTIN (BITSULK,  -1,  intulk_ftype_ulk,  nothing, \"__ret\")\n DEF_BUILTIN (BITSULLK, -1, intullk_ftype_ullk, nothing, \"__ret\") // GCC extension\n \n \n /* 7.18a.6.6 The bitwise integer to fixed-point conversion functions. */\n \n DEF_BUILTIN (  HRBITS, -1,   hr_ftype_inthr,   nothing, \"__ret\")\n-DEF_BUILTIN (   RBITS, -1,    r_ftype_intr,    nothing, \"__ret\")\n+DEF_BUILTIN (   RBITS, -1,   nr_ftype_intnr,   nothing, \"__ret\")\n DEF_BUILTIN (  LRBITS, -1,   lr_ftype_intlr,   nothing, \"__ret\")\n DEF_BUILTIN ( LLRBITS, -1,  llr_ftype_intllr,  nothing, \"__ret\") // GCC extension\n \n DEF_BUILTIN ( UHRBITS, -1,  uhr_ftype_intuhr,  nothing, \"__ret\")\n-DEF_BUILTIN (  URBITS, -1,   ur_ftype_intur,   nothing, \"__ret\")\n+DEF_BUILTIN (  URBITS, -1,  unr_ftype_intunr,  nothing, \"__ret\")\n DEF_BUILTIN ( ULRBITS, -1,  ulr_ftype_intulr,  nothing, \"__ret\")\n DEF_BUILTIN (ULLRBITS, -1, ullr_ftype_intullr, nothing, \"__ret\") // GCC extension\n \n DEF_BUILTIN (  HKBITS, -1,   hk_ftype_inthk,   nothing, \"__ret\")\n-DEF_BUILTIN (   KBITS, -1,    k_ftype_intk,    nothing, \"__ret\")\n+DEF_BUILTIN (   KBITS, -1,   nk_ftype_intnk,   nothing, \"__ret\")\n DEF_BUILTIN (  LKBITS, -1,   lk_ftype_intlk,   nothing, \"__ret\")\n DEF_BUILTIN ( LLKBITS, -1,  llk_ftype_intllk,  nothing, \"__ret\") // GCC extension\n \n DEF_BUILTIN ( UHKBITS, -1,  uhk_ftype_intuhk,  nothing, \"__ret\")\n-DEF_BUILTIN (  UKBITS, -1,   uk_ftype_intuk,   nothing, \"__ret\")\n+DEF_BUILTIN (  UKBITS, -1,  unk_ftype_intunk,  nothing, \"__ret\")\n DEF_BUILTIN ( ULKBITS, -1,  ulk_ftype_intulk,  nothing, \"__ret\")\n DEF_BUILTIN (ULLKBITS, -1, ullk_ftype_intullk, nothing, \"__ret\") // GCC extension\n "}]}