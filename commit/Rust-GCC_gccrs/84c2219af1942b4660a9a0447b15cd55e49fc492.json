{"sha": "84c2219af1942b4660a9a0447b15cd55e49fc492", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODRjMjIxOWFmMTk0MmI0NjYwYTlhMDQ0N2IxNWNkNTVlNDlmYzQ5Mg==", "commit": {"author": {"name": "Iain Sandoe", "email": "iains@gcc.gnu.org", "date": "2010-07-02T09:49:53Z"}, "committer": {"name": "Iain Sandoe", "email": "iains@gcc.gnu.org", "date": "2010-07-02T09:49:53Z"}, "message": "restore cxx-ivar-3 test functionality\n\n\t* obj-c++.dg/cxx-ivars-3.mm: Make the test require OSX <= 10.4.\n\tUse the ABI-0 accessors and fail it for m64.\n\nFrom-SVN: r161692", "tree": {"sha": "9763ea05a4e8db1d56a14103b625ce0320a0cf98", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9763ea05a4e8db1d56a14103b625ce0320a0cf98"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/84c2219af1942b4660a9a0447b15cd55e49fc492", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84c2219af1942b4660a9a0447b15cd55e49fc492", "html_url": "https://github.com/Rust-GCC/gccrs/commit/84c2219af1942b4660a9a0447b15cd55e49fc492", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84c2219af1942b4660a9a0447b15cd55e49fc492/comments", "author": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "450997efe0aa70d03d9ef757af4bccf62c4dd321", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/450997efe0aa70d03d9ef757af4bccf62c4dd321", "html_url": "https://github.com/Rust-GCC/gccrs/commit/450997efe0aa70d03d9ef757af4bccf62c4dd321"}], "stats": {"total": 29, "additions": 16, "deletions": 13}, "files": [{"sha": "b4dc10bc2ce7cffc1c25a401123593b730912eb9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84c2219af1942b4660a9a0447b15cd55e49fc492/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84c2219af1942b4660a9a0447b15cd55e49fc492/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=84c2219af1942b4660a9a0447b15cd55e49fc492", "patch": "@@ -1,3 +1,8 @@\n+2010-07-02  Iain Sandoe  <iains@gcc.gnu.org>\n+\n+\t* obj-c++.dg/cxx-ivars-3.mm: Make the test require OSX <= 10.4.\n+\tUse the ABI-0 accessors and fail it for m64.\n+\n 2010-07-02  Jan Hubicka  <jh@suse.cz>\n \n \t* g++.dg/tree-ssa/pr44706.C: New testcase."}, {"sha": "e94e6ec57a224d1b33c45c1599afdc8a9734fe47", "filename": "gcc/testsuite/obj-c++.dg/cxx-ivars-3.mm", "status": "modified", "additions": 11, "deletions": 13, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84c2219af1942b4660a9a0447b15cd55e49fc492/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fcxx-ivars-3.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84c2219af1942b4660a9a0447b15cd55e49fc492/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fcxx-ivars-3.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fcxx-ivars-3.mm?ref=84c2219af1942b4660a9a0447b15cd55e49fc492", "patch": "@@ -1,13 +1,12 @@\n // Check if ObjC classes with non-POD C++ ivars are specially marked in the metadata.\n \n // { dg-do run { target *-*-darwin* } }\n-// { dg-skip-if \"\" { *-*-* } { \"-fgnu-runtime\" } { \"\" } } \n-// { dg-options \"-fobjc-call-cxx-cdtors\" }\n-// { dg-xfail-run-if \"Needs OBJC2 ABI\" { *-*-darwin* && { lp64 && { ! objc2 } } } { \"-fnext-runtime\" } { \"\" } }\n-\n-#include \"../objc-obj-c++-shared/Object1.h\"\n-#include \"../objc-obj-c++-shared/next-mapping.h\"\n+// { dg-skip-if \"\" { *-*-* } { \"-fgnu-runtime\" } { \"\" } }\n+// { dg-options \"-fobjc-call-cxx-cdtors -mmacosx-version-min=10.4\" }\n+// This test has no equivalent or meaning for m64/ABI V2\n+// { dg-xfail-run-if \"No Test Avail\" { *-*-darwin* && lp64 } { \"-fnext-runtime\" } { \"\" } }\n \n+#include <objc/objc-runtime.h>\n #include <stdlib.h>\n #define CHECK_IF(expr) if(!(expr)) abort()\n \n@@ -39,18 +38,17 @@ @implementation Bar\n \n int main (void)\n {\n+#ifndef __LP64__\n   Class cls;\n \n-  cls = objc_get_class(\"Foo\");\n-#if NEXT_OBJC_USE_NEW_INTERFACE\n-  CHECK_IF(class_isMetaClass(cls) & CLS_HAS_CXX_STRUCTORS);\n-  cls = objc_getClass(\"Bar\");\n-  CHECK_IF(!(class_isMetaClass(cls) & CLS_HAS_CXX_STRUCTORS));\n-#else\n+  cls = objc_getClass(\"Foo\");\n   CHECK_IF(cls->info & CLS_HAS_CXX_STRUCTORS);\n   cls = objc_getClass(\"Bar\");\n   CHECK_IF(!(cls->info & CLS_HAS_CXX_STRUCTORS));\n+\n+#else\n+  /* No test needed or available.  */\n+  abort ();\n #endif\n   return 0;\n }\n-#include \"../objc-obj-c++-shared/Object1-implementation.h\""}]}