{"sha": "3809f6458948459a466a559da99de6593bea1e83", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzgwOWY2NDU4OTQ4NDU5YTQ2NmE1NTlkYTk5ZGU2NTkzYmVhMWU4Mw==", "commit": {"author": {"name": "Tom de Vries", "email": "tom@codesourcery.com", "date": "2015-02-26T18:24:56Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2015-02-26T18:24:56Z"}, "message": "Add profopt-target-cleanup\n\n2015-02-26  Tom de Vries  <tom@codesourcery.com>\n\n\t* lib/profopt.exp (profopt-target-cleanup): New proc.\n\t(profopt-execute): Use profopt-target-cleanup to handle cleanup of\n\tfiles from sources from dg-additional-sources.\n\nFrom-SVN: r221024", "tree": {"sha": "0de4acbf99e711f883a1b0c1f83cf222922a76a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0de4acbf99e711f883a1b0c1f83cf222922a76a2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3809f6458948459a466a559da99de6593bea1e83", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3809f6458948459a466a559da99de6593bea1e83", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3809f6458948459a466a559da99de6593bea1e83", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3809f6458948459a466a559da99de6593bea1e83/comments", "author": null, "committer": null, "parents": [{"sha": "70f6380da66bb6f0fa1372267dc83e8a119026ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70f6380da66bb6f0fa1372267dc83e8a119026ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70f6380da66bb6f0fa1372267dc83e8a119026ee"}], "stats": {"total": 43, "additions": 38, "deletions": 5}, "files": [{"sha": "c9789d99b4fbb8fcae4a088bbd77ef408ec1d0ad", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3809f6458948459a466a559da99de6593bea1e83/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3809f6458948459a466a559da99de6593bea1e83/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3809f6458948459a466a559da99de6593bea1e83", "patch": "@@ -1,3 +1,9 @@\n+2015-02-26  Tom de Vries  <tom@codesourcery.com>\n+\n+\t* lib/profopt.exp (profopt-target-cleanup): New proc.\n+\t(profopt-execute): Use profopt-target-cleanup to handle cleanup of\n+\tfiles from sources from dg-additional-sources.\n+\n 2015-02-26  Tom de Vries  <tom@codesourcery.com>\n \n \t* lib/gcov.exp: Cleanup in case of xfail."}, {"sha": "027ae9d987b1e8c239dd3adc865708b3295a458c", "filename": "gcc/testsuite/lib/profopt.exp", "status": "modified", "additions": 32, "deletions": 5, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3809f6458948459a466a559da99de6593bea1e83/gcc%2Ftestsuite%2Flib%2Fprofopt.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3809f6458948459a466a559da99de6593bea1e83/gcc%2Ftestsuite%2Flib%2Fprofopt.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fprofopt.exp?ref=3809f6458948459a466a559da99de6593bea1e83", "patch": "@@ -80,6 +80,30 @@ proc profopt-cleanup { testcase extlist } {\n     }\n }\n \n+#\n+# profopt-target-cleanup -- remove profiling result files.\n+#\n+# DIR is the name of the directory\n+# TESTCASE is the name of the test\n+# EXT is the extensions of files to remove\n+#\n+proc profopt-target-cleanup { dir testcase ext } {\n+    global additional_sources_used\n+    set basename [file tail $testcase]\n+    set base [file rootname $basename]\n+    set file \"$dir/$base.$ext\"\n+    eval \"remote_file target delete $file\"\n+\n+    if [info exists additional_sources_used] {\n+\tforeach srcfile $additional_sources_used {\n+\t    set basename [file tail $srcfile]\n+\t    set base [file rootname $basename]\n+\t    set file \"$dir/$base.$ext\"\n+\t    eval \"remote_file target delete $file\"\n+\t}\n+    }\n+}\n+\n #\n # profopt-perf-value -- get performance value for a test\n #\n@@ -262,10 +286,7 @@ proc profopt-execute { src } {\n \tremote_file build delete $execname3\n \tverbose \"Testing $testcase, $option\" 1\n \n-\t# Remove old profiling and performance data files.\n-\tforeach ext $prof_ext {\n-\t    remote_file target delete $tmpdir/$base.$ext\n-\t}\n+\t# Remove old performance data files.\n \tif [info exists perf_ext] {\n \t    profopt-cleanup $testcase $perf_ext\n \t}\n@@ -285,6 +306,12 @@ proc profopt-execute { src } {\n \n         set extra_options [dg-additional-files-options \"\" \"$src\"]\n \n+\t# Remove old profiling data files.  Make sure additional_sources_used is\n+\t# valid, by running it after dg-additional-files-options.\n+\tforeach ext $prof_ext {\n+\t    profopt-target-cleanup $tmpdir $base $ext\n+\t}\n+\n \t# Tree profiling requires TLS runtime support, which may need\n \t# additional flags.\n \tif { [string first \"-fprofile-generate\" $profile_option] >= 0 } {\n@@ -368,7 +395,7 @@ proc profopt-execute { src } {\n \n \t# Remove the profiling data files.\n \tforeach ext $prof_ext {\n-\t    remote_file target delete $tmpdir/$base.$ext\n+\t    profopt-target-cleanup $tmpdir $base $ext\n \t}\n \n \tif { $status != \"pass\" } {"}]}