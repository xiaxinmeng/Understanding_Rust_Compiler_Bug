{"sha": "c3c54e0f074083d3bdfe97153a704f5584ec3fa4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzNjNTRlMGYwNzQwODNkM2JkZmU5NzE1M2E3MDRmNTU4NGVjM2ZhNA==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2016-12-13T18:03:45Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2016-12-13T18:03:45Z"}, "message": "libgo: fixes for Solaris build\n    \n    Don't put m[0-4] in runtime.inc.\n    \n    Pass -mclear-hwcap to the linker if supported.\n    \n    From Rainer Orth.\n    \n    Reviewed-on: https://go-review.googlesource.com/34331\n\nFrom-SVN: r243619", "tree": {"sha": "7574d1f6318fb78fa1491d15ed1717cb2436ef22", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7574d1f6318fb78fa1491d15ed1717cb2436ef22"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c3c54e0f074083d3bdfe97153a704f5584ec3fa4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3c54e0f074083d3bdfe97153a704f5584ec3fa4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c3c54e0f074083d3bdfe97153a704f5584ec3fa4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3c54e0f074083d3bdfe97153a704f5584ec3fa4/comments", "author": null, "committer": null, "parents": [{"sha": "80e66af3c885e9b0137a8de22578ceca58c1453e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80e66af3c885e9b0137a8de22578ceca58c1453e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/80e66af3c885e9b0137a8de22578ceca58c1453e"}], "stats": {"total": 85, "additions": 75, "deletions": 10}, "files": [{"sha": "7f2ed5d6a3f444f02ddf8453b13c1a6949c38e7f", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3c54e0f074083d3bdfe97153a704f5584ec3fa4/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3c54e0f074083d3bdfe97153a704f5584ec3fa4/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=c3c54e0f074083d3bdfe97153a704f5584ec3fa4", "patch": "@@ -1,4 +1,4 @@\n-ac59bb383e1b446c68465af793722dd0e84abefb\n+556a546ba3c7bb14bd1b9b8469ee3b7a914909f6\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "1f5a0212a828dd96c0c1e93e03711d0552718dd6", "filename": "libgo/Makefile.am", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3c54e0f074083d3bdfe97153a704f5584ec3fa4/libgo%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3c54e0f074083d3bdfe97153a704f5584ec3fa4/libgo%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2FMakefile.am?ref=c3c54e0f074083d3bdfe97153a704f5584ec3fa4", "patch": "@@ -46,8 +46,10 @@ AM_CFLAGS = -fexceptions -fnon-call-exceptions -fplan9-extensions \\\n \t-I $(srcdir)/../libgcc -I $(srcdir)/../libbacktrace \\\n \t-I $(MULTIBUILDTOP)../../gcc/include\n \n+AM_LDFLAGS = $(HWCAP_LDFLAGS)\n+\n if USING_SPLIT_STACK\n-AM_LDFLAGS = -XCClinker $(SPLIT_STACK)\n+AM_LDFLAGS += -XCClinker $(SPLIT_STACK)\n endif\n \n # Multilib support.\n@@ -561,7 +563,7 @@ s-sigtab: $(srcdir)/mksigtab.sh gen-sysinfo.go\n runtime.inc: s-runtime-inc; @true\n s-runtime-inc: runtime.lo Makefile\n \trm -f runtime.inc.tmp2\n-\tgrep -v \"#define _\" runtime.inc.tmp | grep -v \"#define c[01] \" > runtime.inc.tmp2\n+\tgrep -v \"#define _\" runtime.inc.tmp | grep -v \"#define [cm][01234] \" > runtime.inc.tmp2\n \tfor pattern in '_[GP][a-z]' _Max _Lock _Sig _Trace _MHeap _Num; do \\\n \t  grep \"#define $$pattern\" runtime.inc.tmp >> runtime.inc.tmp2; \\\n \tdone"}, {"sha": "a161fd7f2fa5c28261abc94cbd03dc4adf6caddf", "filename": "libgo/Makefile.in", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3c54e0f074083d3bdfe97153a704f5584ec3fa4/libgo%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3c54e0f074083d3bdfe97153a704f5584ec3fa4/libgo%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2FMakefile.in?ref=c3c54e0f074083d3bdfe97153a704f5584ec3fa4", "patch": "@@ -62,15 +62,17 @@ POST_UNINSTALL = :\n build_triplet = @build@\n host_triplet = @host@\n target_triplet = @target@\n-@GOC_IS_LLGO_TRUE@am__append_1 = libgo-llgo.la libgobegin-llgo.a\n-@GOC_IS_LLGO_FALSE@am__append_2 = libgo.la libgobegin.a\n+@USING_SPLIT_STACK_TRUE@am__append_1 = -XCClinker $(SPLIT_STACK)\n+@GOC_IS_LLGO_TRUE@am__append_2 = libgo-llgo.la libgobegin-llgo.a\n+@GOC_IS_LLGO_FALSE@am__append_3 = libgo.la libgobegin.a\n subdir = .\n DIST_COMMON = README $(srcdir)/Makefile.in $(srcdir)/Makefile.am \\\n \t$(top_srcdir)/configure $(am__configure_deps) \\\n \t$(srcdir)/config.h.in $(srcdir)/../mkinstalldirs \\\n \t$(srcdir)/../depcomp\n ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n am__aclocal_m4_deps = $(top_srcdir)/../config/depstand.m4 \\\n+\t$(top_srcdir)/../config/hwcaps.m4 \\\n \t$(top_srcdir)/../config/lead-dot.m4 \\\n \t$(top_srcdir)/../config/multi.m4 \\\n \t$(top_srcdir)/../config/override.m4 \\\n@@ -319,6 +321,7 @@ GO_SPLIT_STACK = @GO_SPLIT_STACK@\n GO_SYSCALL_OS_ARCH_FILE = @GO_SYSCALL_OS_ARCH_FILE@\n GO_SYSCALL_OS_FILE = @GO_SYSCALL_OS_FILE@\n GREP = @GREP@\n+HWCAP_LDFLAGS = @HWCAP_LDFLAGS@\n INSTALL = @INSTALL@\n INSTALL_DATA = @INSTALL_DATA@\n INSTALL_PROGRAM = @INSTALL_PROGRAM@\n@@ -460,7 +463,7 @@ AM_CFLAGS = -fexceptions -fnon-call-exceptions -fplan9-extensions \\\n \t-I $(srcdir)/../libgcc -I $(srcdir)/../libbacktrace \\\n \t-I $(MULTIBUILDTOP)../../gcc/include\n \n-@USING_SPLIT_STACK_TRUE@AM_LDFLAGS = -XCClinker $(SPLIT_STACK)\n+AM_LDFLAGS = $(HWCAP_LDFLAGS) $(am__append_1)\n \n # Multilib support.\n MAKEOVERRIDES = \n@@ -1117,7 +1120,7 @@ CHECK_DEPS = $(toolexeclibgo_DATA) $(toolexeclibgoarchive_DATA) \\\n \t$(toolexeclibgorpc_DATA) $(toolexeclibgoruntime_DATA) \\\n \t$(toolexeclibgosync_DATA) $(toolexeclibgotesting_DATA) \\\n \t$(toolexeclibgotext_DATA) $(toolexeclibgotexttemplate_DATA) \\\n-\t$(toolexeclibgounicode_DATA) $(am__append_1) $(am__append_2)\n+\t$(toolexeclibgounicode_DATA) $(am__append_2) $(am__append_3)\n \n # Pass -ffp-contract=off, or 386-specific options, when building the\n # math package.  MATH_FLAG is defined in configure.ac.\n@@ -3173,7 +3176,7 @@ s-sigtab: $(srcdir)/mksigtab.sh gen-sysinfo.go\n runtime.inc: s-runtime-inc; @true\n s-runtime-inc: runtime.lo Makefile\n \trm -f runtime.inc.tmp2\n-\tgrep -v \"#define _\" runtime.inc.tmp | grep -v \"#define c[01] \" > runtime.inc.tmp2\n+\tgrep -v \"#define _\" runtime.inc.tmp | grep -v \"#define [cm][01234] \" > runtime.inc.tmp2\n \tfor pattern in '_[GP][a-z]' _Max _Lock _Sig _Trace _MHeap _Num; do \\\n \t  grep \"#define $$pattern\" runtime.inc.tmp >> runtime.inc.tmp2; \\\n \tdone"}, {"sha": "07305fd701ece00b9580879922d705ba58a5d813", "filename": "libgo/aclocal.m4", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3c54e0f074083d3bdfe97153a704f5584ec3fa4/libgo%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3c54e0f074083d3bdfe97153a704f5584ec3fa4/libgo%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Faclocal.m4?ref=c3c54e0f074083d3bdfe97153a704f5584ec3fa4", "patch": "@@ -989,6 +989,7 @@ AC_SUBST([am__untar])\n ]) # _AM_PROG_TAR\n \n m4_include([../config/depstand.m4])\n+m4_include([../config/hwcaps.m4])\n m4_include([../config/lead-dot.m4])\n m4_include([../config/multi.m4])\n m4_include([../config/override.m4])"}, {"sha": "4129ebed0ff8324e53243677362d0f685dcb398f", "filename": "libgo/configure", "status": "modified", "additions": 56, "deletions": 2, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3c54e0f074083d3bdfe97153a704f5584ec3fa4/libgo%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3c54e0f074083d3bdfe97153a704f5584ec3fa4/libgo%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fconfigure?ref=c3c54e0f074083d3bdfe97153a704f5584ec3fa4", "patch": "@@ -624,6 +624,9 @@ GO_SPLIT_STACK\n USING_SPLIT_STACK_FALSE\n USING_SPLIT_STACK_TRUE\n SPLIT_STACK\n+HAVE_HWCAP_FALSE\n+HAVE_HWCAP_TRUE\n+HWCAP_LDFLAGS\n OSCFLAGS\n GO_SYSCALL_OS_ARCH_FILE\n GO_SYSCALL_OS_FILE\n@@ -11103,7 +11106,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11106 \"configure\"\n+#line 11109 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11209,7 +11212,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11212 \"configure\"\n+#line 11215 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -13908,6 +13911,53 @@ case \"$target\" in\n esac\n \n \n+\n+  test -z \"$HWCAP_LDFLAGS\" && HWCAP_LDFLAGS=''\n+\n+\n+  ac_save_LDFLAGS=\"$LDFLAGS\"\n+  LDFLAGS=\"$LFLAGS -mclear-hwcap\"\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for -mclear-hwcap\" >&5\n+$as_echo_n \"checking for -mclear-hwcap... \" >&6; }\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+int\n+main ()\n+{\n+return 0;\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_link \"$LINENO\"; then :\n+  ac_hwcap_ldflags=yes\n+else\n+  ac_hwcap_ldflags=no\n+fi\n+rm -f core conftest.err conftest.$ac_objext \\\n+    conftest$ac_exeext conftest.$ac_ext\n+  if test \"$ac_hwcap_ldflags\" = \"yes\"; then\n+    HWCAP_LDFLAGS=\"-mclear-hwcap $HWCAP_LDFLAGS\"\n+  fi\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_hwcap_ldflags\" >&5\n+$as_echo \"$ac_hwcap_ldflags\" >&6; }\n+\n+  LDFLAGS=\"$ac_save_LDFLAGS\"\n+\n+\n+\n+   if test $ac_hwcap_ldflags != no; then\n+  HAVE_HWCAP_TRUE=\n+  HAVE_HWCAP_FALSE='#'\n+else\n+  HAVE_HWCAP_TRUE='#'\n+  HAVE_HWCAP_FALSE=\n+fi\n+\n+\n+\n { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether -fsplit-stack is supported\" >&5\n $as_echo_n \"checking whether -fsplit-stack is supported... \" >&6; }\n if test \"${libgo_cv_c_split_stack_supported+set}\" = set; then :\n@@ -15688,6 +15738,10 @@ if test -z \"${LIBGO_IS_BSD_TRUE}\" && test -z \"${LIBGO_IS_BSD_FALSE}\"; then\n   as_fn_error \"conditional \\\"LIBGO_IS_BSD\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\n fi\n+if test -z \"${HAVE_HWCAP_TRUE}\" && test -z \"${HAVE_HWCAP_FALSE}\"; then\n+  as_fn_error \"conditional \\\"HAVE_HWCAP\\\" was never defined.\n+Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\n+fi\n if test -z \"${USING_SPLIT_STACK_TRUE}\" && test -z \"${USING_SPLIT_STACK_FALSE}\"; then\n   as_fn_error \"conditional \\\"USING_SPLIT_STACK\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5"}, {"sha": "b7710cad03880f89b1b4dc9aedd3c2430a0b7a07", "filename": "libgo/configure.ac", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3c54e0f074083d3bdfe97153a704f5584ec3fa4/libgo%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3c54e0f074083d3bdfe97153a704f5584ec3fa4/libgo%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fconfigure.ac?ref=c3c54e0f074083d3bdfe97153a704f5584ec3fa4", "patch": "@@ -421,6 +421,9 @@ case \"$target\" in\n esac\n AC_SUBST(OSCFLAGS)\n \n+dnl Check linker hardware capability support.\n+GCC_CHECK_LINKER_HWCAP\n+\n dnl Use -fsplit-stack when compiling C code if available.\n AC_CACHE_CHECK([whether -fsplit-stack is supported],\n [libgo_cv_c_split_stack_supported],"}, {"sha": "f059021ee48c91b943a777141c9f4439e103e17e", "filename": "libgo/testsuite/Makefile.in", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3c54e0f074083d3bdfe97153a704f5584ec3fa4/libgo%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3c54e0f074083d3bdfe97153a704f5584ec3fa4/libgo%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Ftestsuite%2FMakefile.in?ref=c3c54e0f074083d3bdfe97153a704f5584ec3fa4", "patch": "@@ -55,6 +55,7 @@ subdir = testsuite\n DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/Makefile.am\n ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n am__aclocal_m4_deps = $(top_srcdir)/../config/depstand.m4 \\\n+\t$(top_srcdir)/../config/hwcaps.m4 \\\n \t$(top_srcdir)/../config/lead-dot.m4 \\\n \t$(top_srcdir)/../config/multi.m4 \\\n \t$(top_srcdir)/../config/override.m4 \\\n@@ -123,6 +124,7 @@ GO_SPLIT_STACK = @GO_SPLIT_STACK@\n GO_SYSCALL_OS_ARCH_FILE = @GO_SYSCALL_OS_ARCH_FILE@\n GO_SYSCALL_OS_FILE = @GO_SYSCALL_OS_FILE@\n GREP = @GREP@\n+HWCAP_LDFLAGS = @HWCAP_LDFLAGS@\n INSTALL = @INSTALL@\n INSTALL_DATA = @INSTALL_DATA@\n INSTALL_PROGRAM = @INSTALL_PROGRAM@"}]}