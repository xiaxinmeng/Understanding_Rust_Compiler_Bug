{"sha": "ef67af22cb43478cf1ee1693f79d9262c933a13e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWY2N2FmMjJjYjQzNDc4Y2YxZWUxNjkzZjc5ZDkyNjJjOTMzYTEzZQ==", "commit": {"author": {"name": "Adam Nemet", "email": "anemet@caviumnetworks.com", "date": "2009-05-17T07:31:25Z"}, "committer": {"name": "Adam Nemet", "email": "nemet@gcc.gnu.org", "date": "2009-05-17T07:31:25Z"}, "message": "* config/mips/mips.md (*zero_extend<mode>_trunchi,\n\n\t*zero_extend<mode>_truncqi): Merge these into ...\n\t(*zero_extend<GPR:mode>_trunc<SHORT:mode>): ... this new pattern.\n\tName the pattern following this as *zero_extendhi_truncqi.\n\nFrom-SVN: r147630", "tree": {"sha": "a347e5a4ccc0c89b83f082342fa90d9c48aa3f43", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a347e5a4ccc0c89b83f082342fa90d9c48aa3f43"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ef67af22cb43478cf1ee1693f79d9262c933a13e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef67af22cb43478cf1ee1693f79d9262c933a13e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef67af22cb43478cf1ee1693f79d9262c933a13e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef67af22cb43478cf1ee1693f79d9262c933a13e/comments", "author": null, "committer": null, "parents": [{"sha": "51fe63ef9a849e72301090aa7ff854232049c50f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51fe63ef9a849e72301090aa7ff854232049c50f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/51fe63ef9a849e72301090aa7ff854232049c50f"}], "stats": {"total": 29, "additions": 15, "deletions": 14}, "files": [{"sha": "844bddf63626576abc8948fee1b8d89f0cfc092c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef67af22cb43478cf1ee1693f79d9262c933a13e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef67af22cb43478cf1ee1693f79d9262c933a13e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ef67af22cb43478cf1ee1693f79d9262c933a13e", "patch": "@@ -1,3 +1,10 @@\n+2009-05-17  Adam Nemet  <anemet@caviumnetworks.com>\n+\n+\t* config/mips/mips.md (*zero_extend<mode>_trunchi,\n+\t*zero_extend<mode>_truncqi): Merge these into ...\n+\t(*zero_extend<GPR:mode>_trunc<SHORT:mode>): ... this new pattern.\n+\tName the pattern following this as *zero_extendhi_truncqi.\n+\n 2009-05-16  Brad Lucier  <lucier@math.purdue.edu>\n \n \tPR middle-end/39301"}, {"sha": "4ae724a339993adcb5420b490f428435a0746f44", "filename": "gcc/config/mips/mips.md", "status": "modified", "additions": 8, "deletions": 14, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef67af22cb43478cf1ee1693f79d9262c933a13e/gcc%2Fconfig%2Fmips%2Fmips.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef67af22cb43478cf1ee1693f79d9262c933a13e/gcc%2Fconfig%2Fmips%2Fmips.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.md?ref=ef67af22cb43478cf1ee1693f79d9262c933a13e", "patch": "@@ -2778,25 +2778,19 @@\n \n ;; Combiner patterns to optimize truncate/zero_extend combinations.\n \n-(define_insn \"*zero_extend<mode>_trunchi\"\n+(define_insn \"*zero_extend<GPR:mode>_trunc<SHORT:mode>\"\n   [(set (match_operand:GPR 0 \"register_operand\" \"=d\")\n         (zero_extend:GPR\n-\t    (truncate:HI (match_operand:DI 1 \"register_operand\" \"d\"))))]\n-  \"TARGET_64BIT && !TARGET_MIPS16\"\n-  \"andi\\t%0,%1,0xffff\"\n-  [(set_attr \"type\" \"logical\")\n-   (set_attr \"mode\" \"<MODE>\")])\n-\n-(define_insn \"*zero_extend<mode>_truncqi\"\n-  [(set (match_operand:GPR 0 \"register_operand\" \"=d\")\n-        (zero_extend:GPR\n-\t    (truncate:QI (match_operand:DI 1 \"register_operand\" \"d\"))))]\n+\t    (truncate:SHORT (match_operand:DI 1 \"register_operand\" \"d\"))))]\n   \"TARGET_64BIT && !TARGET_MIPS16\"\n-  \"andi\\t%0,%1,0xff\"\n+{\n+  operands[2] = GEN_INT (GET_MODE_MASK (<SHORT:MODE>mode));\n+  return \"andi\\t%0,%1,%x2\";\n+}\n   [(set_attr \"type\" \"logical\")\n-   (set_attr \"mode\" \"<MODE>\")])\n+   (set_attr \"mode\" \"<GPR:MODE>\")])\n \n-(define_insn \"\"\n+(define_insn \"*zero_extendhi_truncqi\"\n   [(set (match_operand:HI 0 \"register_operand\" \"=d\")\n         (zero_extend:HI\n \t    (truncate:QI (match_operand:DI 1 \"register_operand\" \"d\"))))]"}]}