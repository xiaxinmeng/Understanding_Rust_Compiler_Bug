{"sha": "fa607ddad04aa72a7b811d366680783237b8cafe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmE2MDdkZGFkMDRhYTcyYTdiODExZDM2NjY4MDc4MzIzN2I4Y2FmZQ==", "commit": {"author": {"name": "Andrew Pinski", "email": "apinski@cavium.com", "date": "2012-10-02T21:03:37Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2012-10-02T21:03:37Z"}, "message": "simplify-rtx.c (simplify_unary_operation_1 <case TRUNCATE>): Don't optimize a truncate of a mem if it is a vector mode.\n\n2012-10-02  Andrew Pinski  <apinski@cavium.com>\n\n\t* simplify-rtx.c (simplify_unary_operation_1 <case TRUNCATE>):\n\tDon't optimize a truncate of a mem if it is a vector mode.\n\nFrom-SVN: r192006", "tree": {"sha": "b9f0d6e93903ee4d20168c9841c8cb91e8491689", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b9f0d6e93903ee4d20168c9841c8cb91e8491689"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fa607ddad04aa72a7b811d366680783237b8cafe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa607ddad04aa72a7b811d366680783237b8cafe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa607ddad04aa72a7b811d366680783237b8cafe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa607ddad04aa72a7b811d366680783237b8cafe/comments", "author": {"login": "apinski-cavium", "id": 6335315, "node_id": "MDQ6VXNlcjYzMzUzMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/6335315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apinski-cavium", "html_url": "https://github.com/apinski-cavium", "followers_url": "https://api.github.com/users/apinski-cavium/followers", "following_url": "https://api.github.com/users/apinski-cavium/following{/other_user}", "gists_url": "https://api.github.com/users/apinski-cavium/gists{/gist_id}", "starred_url": "https://api.github.com/users/apinski-cavium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apinski-cavium/subscriptions", "organizations_url": "https://api.github.com/users/apinski-cavium/orgs", "repos_url": "https://api.github.com/users/apinski-cavium/repos", "events_url": "https://api.github.com/users/apinski-cavium/events{/privacy}", "received_events_url": "https://api.github.com/users/apinski-cavium/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0a59e5832e6febfd497966c0b0edfe948f34ff7a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a59e5832e6febfd497966c0b0edfe948f34ff7a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a59e5832e6febfd497966c0b0edfe948f34ff7a"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "932f57391466fdf1d5cc1b3c742fccfbd5fa57ce", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa607ddad04aa72a7b811d366680783237b8cafe/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa607ddad04aa72a7b811d366680783237b8cafe/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fa607ddad04aa72a7b811d366680783237b8cafe", "patch": "@@ -1,3 +1,8 @@\n+2012-10-02  Andrew Pinski  <apinski@cavium.com>\n+\n+\t* simplify-rtx.c (simplify_unary_operation_1 <case TRUNCATE>):\n+\tDon't optimize a truncate of a mem if it is a vector mode.\n+\n 2012-10-02  Alexandre Oliva <aoliva@redhat.com>\n \n \tPR debug/54551"}, {"sha": "acd479876039825086ae1a18b4858c20aae04b0e", "filename": "gcc/simplify-rtx.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa607ddad04aa72a7b811d366680783237b8cafe/gcc%2Fsimplify-rtx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa607ddad04aa72a7b811d366680783237b8cafe/gcc%2Fsimplify-rtx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsimplify-rtx.c?ref=fa607ddad04aa72a7b811d366680783237b8cafe", "patch": "@@ -873,6 +873,7 @@ simplify_unary_operation_1 (enum rtx_code code, enum machine_mode mode, rtx op)\n       /* A truncate of a memory is just loading the low part of the memory\n \t if we are not changing the meaning of the address. */\n       if (GET_CODE (op) == MEM\n+\t  && !VECTOR_MODE_P (mode)\n \t  && !MEM_VOLATILE_P (op)\n \t  && !mode_dependent_address_p (XEXP (op, 0), MEM_ADDR_SPACE (op)))\n \treturn rtl_hooks.gen_lowpart_no_emit (mode, op);"}]}