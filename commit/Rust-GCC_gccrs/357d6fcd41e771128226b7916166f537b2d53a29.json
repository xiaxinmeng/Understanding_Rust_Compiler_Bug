{"sha": "357d6fcd41e771128226b7916166f537b2d53a29", "node_id": "C_kwDOANBUbNoAKDM1N2Q2ZmNkNDFlNzcxMTI4MjI2Yjc5MTYxNjZmNTM3YjJkNTNhMjk", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-05-16T15:54:52Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-05-17T10:42:34Z"}, "message": "libstdc++: Stop defining C++0x compat symbols for versioned namespace\n\nThe src/c++11/compatibility*-c++0x.cc files define symbols that need to\nbe exported for ancient versions of libstdc++.so.6 due to changes\nbetween C++0x and the final C++11 standard. Those symbols are not needed\nin the libstdc++.so.8 library, and we can skip building them entirely.\n\nThis also fixes the build failure I introduced last week when making the\nversioned namespace config not use the _V2 namespace for compat symbols.\n\nlibstdc++-v3/ChangeLog:\n\n\t* src/Makefile.am [ENABLE_SYMVERS_GNU_NAMESPACE] (cxx11_sources):\n\tDo not build the compatibility*-c++0x.cc objects.\n\t* src/Makefile.in: Regenerate.\n\t* src/c++11/compatibility-c++0x.cc [_GLIBCXX_INLINE_VERSION]:\n\tRefuse to build for the versioned namespace.\n\t* src/c++11/compatibility-chrono.cc: Likewise.\n\t* src/c++11/compatibility-condvar.cc: Likewise.\n\t* src/c++11/compatibility-thread-c++0x.cc: Likewise.\n\t* src/c++11/chrono.cc (system_clock, steady_clock):\n\tUse macros to define in inline namespace _V2, matching the\n\tdeclarations in <system_error>.\n\t* src/c++11/system_error.cc (system_category, generic_category):\n\tLikewise.", "tree": {"sha": "86d02d00110bd2a7554feae11a8d50801a96ed56", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/86d02d00110bd2a7554feae11a8d50801a96ed56"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/357d6fcd41e771128226b7916166f537b2d53a29", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/357d6fcd41e771128226b7916166f537b2d53a29", "html_url": "https://github.com/Rust-GCC/gccrs/commit/357d6fcd41e771128226b7916166f537b2d53a29", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/357d6fcd41e771128226b7916166f537b2d53a29/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "472aecb78908d47491d3e6c0beb4eb44f7109751", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/472aecb78908d47491d3e6c0beb4eb44f7109751", "html_url": "https://github.com/Rust-GCC/gccrs/commit/472aecb78908d47491d3e6c0beb4eb44f7109751"}], "stats": {"total": 76, "additions": 54, "deletions": 22}, "files": [{"sha": "b83c222d51d13cd409d24ace8e60666de9ac69d1", "filename": "libstdc++-v3/src/Makefile.am", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/357d6fcd41e771128226b7916166f537b2d53a29/libstdc%2B%2B-v3%2Fsrc%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/357d6fcd41e771128226b7916166f537b2d53a29/libstdc%2B%2B-v3%2Fsrc%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2FMakefile.am?ref=357d6fcd41e771128226b7916166f537b2d53a29", "patch": "@@ -96,6 +96,16 @@ else\n ldbl_alt128_compat_sources =\n endif\n \n+if ENABLE_SYMVERS_GNU_NAMESPACE\n+cxx0x_compat_sources =\n+else\n+cxx0x_compat_sources = \\\n+\tcompatibility-atomic-c++0x.cc \\\n+\tcompatibility-c++0x.cc \\\n+\tcompatibility-chrono.cc \\\n+\tcompatibility-condvar.cc \\\n+\tcompatibility-thread-c++0x.cc\n+endif\n \n parallel_compat_sources = \\\n \tcompatibility-parallel_list.cc  compatibility-parallel_list-2.cc\n@@ -108,11 +118,7 @@ cxx98_sources = \\\n \t${ldbl_compat_sources}\n \n cxx11_sources = \\\n-\tcompatibility-c++0x.cc \\\n-\tcompatibility-atomic-c++0x.cc \\\n-\tcompatibility-thread-c++0x.cc \\\n-\tcompatibility-chrono.cc \\\n-\tcompatibility-condvar.cc \\\n+\t${cxx0x_compat_sources} \\\n \t${ldbl_alt128_compat_sources}\n \n libstdc___la_SOURCES = $(cxx98_sources) $(cxx11_sources)"}, {"sha": "cef290c5d111bf5fa4f73b2b30f4f57cae86786b", "filename": "libstdc++-v3/src/Makefile.in", "status": "modified", "additions": 19, "deletions": 12, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/357d6fcd41e771128226b7916166f537b2d53a29/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/357d6fcd41e771128226b7916166f537b2d53a29/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in?ref=357d6fcd41e771128226b7916166f537b2d53a29", "patch": "@@ -153,14 +153,17 @@ am__DEPENDENCIES_1 =\n @GLIBCXX_LDBL_COMPAT_TRUE@am__objects_1 = compatibility-ldbl.lo\n am__objects_2 = compatibility.lo compatibility-debug_list.lo \\\n \tcompatibility-debug_list-2.lo $(am__objects_1)\n-@ENABLE_DUAL_ABI_TRUE@@GLIBCXX_LDBL_ALT128_COMPAT_TRUE@am__objects_3 = compatibility-ldbl-alt128-cxx11.lo\n-@GLIBCXX_LDBL_ALT128_COMPAT_TRUE@am__objects_4 =  \\\n+@ENABLE_SYMVERS_GNU_NAMESPACE_FALSE@am__objects_3 = compatibility-atomic-c++0x.lo \\\n+@ENABLE_SYMVERS_GNU_NAMESPACE_FALSE@\tcompatibility-c++0x.lo \\\n+@ENABLE_SYMVERS_GNU_NAMESPACE_FALSE@\tcompatibility-chrono.lo \\\n+@ENABLE_SYMVERS_GNU_NAMESPACE_FALSE@\tcompatibility-condvar.lo \\\n+@ENABLE_SYMVERS_GNU_NAMESPACE_FALSE@\tcompatibility-thread-c++0x.lo\n+@ENABLE_DUAL_ABI_TRUE@@GLIBCXX_LDBL_ALT128_COMPAT_TRUE@am__objects_4 = compatibility-ldbl-alt128-cxx11.lo\n+@GLIBCXX_LDBL_ALT128_COMPAT_TRUE@am__objects_5 =  \\\n @GLIBCXX_LDBL_ALT128_COMPAT_TRUE@\tcompatibility-ldbl-alt128.lo \\\n-@GLIBCXX_LDBL_ALT128_COMPAT_TRUE@\t$(am__objects_3)\n-am__objects_5 = compatibility-c++0x.lo compatibility-atomic-c++0x.lo \\\n-\tcompatibility-thread-c++0x.lo compatibility-chrono.lo \\\n-\tcompatibility-condvar.lo $(am__objects_4)\n-am_libstdc___la_OBJECTS = $(am__objects_2) $(am__objects_5)\n+@GLIBCXX_LDBL_ALT128_COMPAT_TRUE@\t$(am__objects_4)\n+am__objects_6 = $(am__objects_3) $(am__objects_5)\n+am_libstdc___la_OBJECTS = $(am__objects_2) $(am__objects_6)\n libstdc___la_OBJECTS = $(am_libstdc___la_OBJECTS)\n @VTV_CYGMIN_FALSE@am_libstdc___la_rpath = -rpath $(toolexeclibdir)\n @VTV_CYGMIN_TRUE@am_libstdc___la_rpath = -rpath $(toolexeclibdir)\n@@ -512,6 +515,14 @@ SUBDIRS = c++98 c++11 c++17 c++20 $(filesystem_dir) $(backtrace_dir)\n @GLIBCXX_LDBL_ALT128_COMPAT_TRUE@\tcompatibility-ldbl-alt128.cc \\\n @GLIBCXX_LDBL_ALT128_COMPAT_TRUE@\t${ldbl_alt128_compat_cxx11_sources}\n \n+@ENABLE_SYMVERS_GNU_NAMESPACE_FALSE@cxx0x_compat_sources = \\\n+@ENABLE_SYMVERS_GNU_NAMESPACE_FALSE@\tcompatibility-atomic-c++0x.cc \\\n+@ENABLE_SYMVERS_GNU_NAMESPACE_FALSE@\tcompatibility-c++0x.cc \\\n+@ENABLE_SYMVERS_GNU_NAMESPACE_FALSE@\tcompatibility-chrono.cc \\\n+@ENABLE_SYMVERS_GNU_NAMESPACE_FALSE@\tcompatibility-condvar.cc \\\n+@ENABLE_SYMVERS_GNU_NAMESPACE_FALSE@\tcompatibility-thread-c++0x.cc\n+\n+@ENABLE_SYMVERS_GNU_NAMESPACE_TRUE@cxx0x_compat_sources = \n parallel_compat_sources = \\\n \tcompatibility-parallel_list.cc  compatibility-parallel_list-2.cc\n \n@@ -522,11 +533,7 @@ cxx98_sources = \\\n \t${ldbl_compat_sources}\n \n cxx11_sources = \\\n-\tcompatibility-c++0x.cc \\\n-\tcompatibility-atomic-c++0x.cc \\\n-\tcompatibility-thread-c++0x.cc \\\n-\tcompatibility-chrono.cc \\\n-\tcompatibility-condvar.cc \\\n+\t${cxx0x_compat_sources} \\\n \t${ldbl_alt128_compat_sources}\n \n libstdc___la_SOURCES = $(cxx98_sources) $(cxx11_sources)"}, {"sha": "5539d8cbedd110cd053950e86a1a4c18d4bfcf9f", "filename": "libstdc++-v3/src/c++11/chrono.cc", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/357d6fcd41e771128226b7916166f537b2d53a29/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fchrono.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/357d6fcd41e771128226b7916166f537b2d53a29/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fchrono.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fchrono.cc?ref=357d6fcd41e771128226b7916166f537b2d53a29", "patch": "@@ -43,8 +43,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   namespace chrono\n   {\n-    // XXX GLIBCXX_ABI Deprecated\n-    inline namespace _V2 {\n+_GLIBCXX_BEGIN_INLINE_ABI_NAMESPACE(_V2)\n \n     constexpr bool system_clock::is_steady;\n \n@@ -94,7 +93,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n #endif\n     }\n \n-  } // end inline namespace _V2\n+_GLIBCXX_END_INLINE_ABI_NAMESPACE(_V2)\n   } // namespace chrono\n \n _GLIBCXX_END_NAMESPACE_VERSION"}, {"sha": "768dd666d00b272fd968a5e391a5fde33a0bbb2a", "filename": "libstdc++-v3/src/c++11/compatibility-c++0x.cc", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/357d6fcd41e771128226b7916166f537b2d53a29/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fcompatibility-c%2B%2B0x.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/357d6fcd41e771128226b7916166f537b2d53a29/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fcompatibility-c%2B%2B0x.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fcompatibility-c%2B%2B0x.cc?ref=357d6fcd41e771128226b7916166f537b2d53a29", "patch": "@@ -40,6 +40,10 @@\n # error \"compatibility-c++0x.cc must be compiled with -std=gnu++0x\"\n #endif\n \n+#if _GLIBCXX_INLINE_VERSION\n+# error \"compatibility-thread-c++0x.cc is not needed for gnu-versioned-namespace\"\n+#endif\n+\n #ifdef _GLIBCXX_SHARED\n \n namespace std _GLIBCXX_VISIBILITY(default)"}, {"sha": "6beb8b39a2502e3043ee59164ab16f80ba1d1f50", "filename": "libstdc++-v3/src/c++11/compatibility-chrono.cc", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/357d6fcd41e771128226b7916166f537b2d53a29/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fcompatibility-chrono.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/357d6fcd41e771128226b7916166f537b2d53a29/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fcompatibility-chrono.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fcompatibility-chrono.cc?ref=357d6fcd41e771128226b7916166f537b2d53a29", "patch": "@@ -24,6 +24,10 @@\n \n #include <bits/c++config.h>\n \n+#if _GLIBCXX_INLINE_VERSION\n+# error \"compatibility-thread-c++0x.cc is not needed for gnu-versioned-namespace\"\n+#endif\n+\n #ifdef _GLIBCXX_USE_C99_STDINT_TR1\n \n #ifdef _GLIBCXX_USE_GETTIMEOFDAY"}, {"sha": "e3a8b8403ca48f702984089e70b1999513fa6c9b", "filename": "libstdc++-v3/src/c++11/compatibility-condvar.cc", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/357d6fcd41e771128226b7916166f537b2d53a29/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fcompatibility-condvar.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/357d6fcd41e771128226b7916166f537b2d53a29/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fcompatibility-condvar.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fcompatibility-condvar.cc?ref=357d6fcd41e771128226b7916166f537b2d53a29", "patch": "@@ -28,6 +28,10 @@\n # error \"compatibility-condvar-c++0x.cc must be compiled with -std=gnu++11\"\n #endif\n \n+#if _GLIBCXX_INLINE_VERSION\n+# error \"compatibility-thread-c++0x.cc is not needed for gnu-versioned-namespace\"\n+#endif\n+\n #if defined(_GLIBCXX_HAS_GTHREADS) && defined(_GLIBCXX_USE_C99_STDINT_TR1)\n \n #define condition_variable_any condition_variable_anyXX"}, {"sha": "d920f9f034552103ab594307737534a5d2e9ed2f", "filename": "libstdc++-v3/src/c++11/compatibility-thread-c++0x.cc", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/357d6fcd41e771128226b7916166f537b2d53a29/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fcompatibility-thread-c%2B%2B0x.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/357d6fcd41e771128226b7916166f537b2d53a29/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fcompatibility-thread-c%2B%2B0x.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fcompatibility-thread-c%2B%2B0x.cc?ref=357d6fcd41e771128226b7916166f537b2d53a29", "patch": "@@ -35,6 +35,10 @@\n # error \"compatibility-thread-c++0x.cc must be compiled with -std=gnu++0x\"\n #endif\n \n+#if _GLIBCXX_INLINE_VERSION\n+# error \"compatibility-thread-c++0x.cc is not needed for gnu-versioned-namespace\"\n+#endif\n+\n #define _GLIBCXX_ASM_SYMVER(cur, old, version) \\\n    asm (\".symver \" #cur \",\" #old \"@@@\" #version);\n "}, {"sha": "8c13642408de05638830608f99854bdf3bdfe146", "filename": "libstdc++-v3/src/c++11/system_error.cc", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/357d6fcd41e771128226b7916166f537b2d53a29/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fsystem_error.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/357d6fcd41e771128226b7916166f537b2d53a29/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fsystem_error.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fsystem_error.cc?ref=357d6fcd41e771128226b7916166f537b2d53a29", "patch": "@@ -526,11 +526,15 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   error_category::~error_category() = default;\n \n+_GLIBCXX_BEGIN_INLINE_ABI_NAMESPACE(_V2)\n+\n   const error_category&\n-  _V2::system_category() noexcept { return system_category_instance.obj; }\n+  system_category() noexcept { return system_category_instance.obj; }\n \n   const error_category&\n-  _V2::generic_category() noexcept { return generic_category_instance.obj; }\n+  generic_category() noexcept { return generic_category_instance.obj; }\n+\n+_GLIBCXX_END_INLINE_ABI_NAMESPACE(_V2)\n \n   system_error::~system_error() = default;\n "}]}