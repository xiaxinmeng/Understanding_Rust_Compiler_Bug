{"sha": "395df65e21e27cce615fb89747c553d4814c6b07", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mzk1ZGY2NWUyMWUyN2NjZTYxNWZiODk3NDdjNTUzZDQ4MTRjNmIwNw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2015-02-27T15:01:57Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@gcc.gnu.org", "date": "2015-02-27T15:01:57Z"}, "message": "re PR rtl-optimization/65220 (integer division in stack alignment for VLA allocation)\n\n\tPR rtl-optimization/65220\n\t* config/i386/i386.md (*udivmod<mode>4_pow2): New.\n\nCo-Authored-By: Aldy Hernandez <aldyh@redhat.com>\n\nFrom-SVN: r221064", "tree": {"sha": "b5917f8580c655b57a482ab30c88fa6f01700a97", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b5917f8580c655b57a482ab30c88fa6f01700a97"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/395df65e21e27cce615fb89747c553d4814c6b07", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/395df65e21e27cce615fb89747c553d4814c6b07", "html_url": "https://github.com/Rust-GCC/gccrs/commit/395df65e21e27cce615fb89747c553d4814c6b07", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/395df65e21e27cce615fb89747c553d4814c6b07/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4fcfb584fe61bc537e45ea4bfffe738aa19f193b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4fcfb584fe61bc537e45ea4bfffe738aa19f193b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4fcfb584fe61bc537e45ea4bfffe738aa19f193b"}], "stats": {"total": 52, "additions": 52, "deletions": 0}, "files": [{"sha": "bae6265d6da343b87d2bd2b997ababc35844c447", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/395df65e21e27cce615fb89747c553d4814c6b07/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/395df65e21e27cce615fb89747c553d4814c6b07/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=395df65e21e27cce615fb89747c553d4814c6b07", "patch": "@@ -1,3 +1,9 @@\n+2015-02-26  Jakub Jelinek  <jakub@redhat.com>\n+\t    Aldy Hernandez  <aldyh@redhat.com>\n+\n+\tPR rtl-optimization/65220\n+\t* config/i386/i386.md (*udivmod<mode>4_pow2): New.\n+\n 2015-02-27  Vladimir Makarov  <vmakarov@redhat.com>\n \n \tPR target/65032"}, {"sha": "84952842b23a3751c1c9dc29d2b345b75366532f", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/395df65e21e27cce615fb89747c553d4814c6b07/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/395df65e21e27cce615fb89747c553d4814c6b07/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=395df65e21e27cce615fb89747c553d4814c6b07", "patch": "@@ -7331,6 +7331,32 @@\n   [(set_attr \"type\" \"multi\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n+;; Optimize division or modulo by constant power of 2, if the constant\n+;; materializes only after expansion.\n+(define_insn_and_split \"*udivmod<mode>4_pow2\"\n+  [(set (match_operand:SWI48 0 \"register_operand\" \"=r\")\n+\t(udiv:SWI48 (match_operand:SWI48 2 \"register_operand\" \"0\")\n+\t\t    (match_operand:SWI48 3 \"const_int_operand\" \"n\")))\n+   (set (match_operand:SWI48 1 \"register_operand\" \"=r\")\n+\t(umod:SWI48 (match_dup 2) (match_dup 3)))\n+   (clobber (reg:CC FLAGS_REG))]\n+  \"UINTVAL (operands[3]) - 2 < <MODE_SIZE> * BITS_PER_UNIT\n+   && (UINTVAL (operands[3]) & (UINTVAL (operands[3]) - 1)) == 0\"\n+  \"#\"\n+  \"&& reload_completed\"\n+  [(set (match_dup 1) (match_dup 2))\n+   (parallel [(set (match_dup 0) (lshiftrt:<MODE> (match_dup 2) (match_dup 4)))\n+\t      (clobber (reg:CC FLAGS_REG))])\n+   (parallel [(set (match_dup 1) (and:<MODE> (match_dup 1) (match_dup 5)))\n+\t      (clobber (reg:CC FLAGS_REG))])]\n+{\n+  int v = exact_log2 (UINTVAL (operands[3]));\n+  operands[4] = GEN_INT (v);\n+  operands[5] = GEN_INT ((HOST_WIDE_INT_1U << v) - 1);\n+}\n+  [(set_attr \"type\" \"multi\")\n+   (set_attr \"mode\" \"<MODE>\")])\n+\n (define_insn \"*udivmod<mode>4_noext\"\n   [(set (match_operand:SWIM248 0 \"register_operand\" \"=a\")\n \t(udiv:SWIM248 (match_operand:SWIM248 2 \"register_operand\" \"0\")"}, {"sha": "8a62c39091440c61a45adfdae3396fc8a8d9cb80", "filename": "gcc/testsuite/gcc.target/i386/pr65520.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/395df65e21e27cce615fb89747c553d4814c6b07/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr65520.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/395df65e21e27cce615fb89747c553d4814c6b07/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr65520.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr65520.c?ref=395df65e21e27cce615fb89747c553d4814c6b07", "patch": "@@ -0,0 +1,20 @@\n+/* PR target/65520 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+int foo (void *);\n+\n+void\n+bar (void)\n+{\n+  unsigned s = 128;\n+  while (1)\n+    {\n+      unsigned b[s];\n+      if (foo (b))\n+\tbreak;\n+      s *= 2;\n+    }\n+}\n+\n+/* { dg-final { scan-assembler-not \"div\\[^\\n\\r]*%\" } } */"}]}