{"sha": "4c95db67505f94a1c8f0554a4a3d00318e214b62", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGM5NWRiNjc1MDVmOTRhMWM4ZjA1NTRhNGEzZDAwMzE4ZTIxNGI2Mg==", "commit": {"author": {"name": "Ken Raeburn", "email": "raeburn@cygnus.com", "date": "1998-07-01T20:16:54Z"}, "committer": {"name": "Ken Raeburn", "email": "raeburn@gcc.gnu.org", "date": "1998-07-01T20:16:54Z"}, "message": "h8300.c (print_operand): Delete %L support.\n\n* h8300.c (print_operand): Delete %L support.\n* h8300.md (branch_true, branch_false): Use %= with a prefix instead of %L for\nlocal branch labels.\nPrevents emitting of \"tl###\" labels that are not assembler-temporary and thus\nconfuse gdb.\n\nFrom-SVN: r20881", "tree": {"sha": "7bf5fdaaf95aa5cb1f2bf7b96ecff0a1548953b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7bf5fdaaf95aa5cb1f2bf7b96ecff0a1548953b6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4c95db67505f94a1c8f0554a4a3d00318e214b62", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c95db67505f94a1c8f0554a4a3d00318e214b62", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c95db67505f94a1c8f0554a4a3d00318e214b62", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c95db67505f94a1c8f0554a4a3d00318e214b62/comments", "author": null, "committer": null, "parents": [{"sha": "370b1b83f166a1ff42b85926d098e4e6f85ce09c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/370b1b83f166a1ff42b85926d098e4e6f85ce09c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/370b1b83f166a1ff42b85926d098e4e6f85ce09c"}], "stats": {"total": 30, "additions": 13, "deletions": 17}, "files": [{"sha": "3724b4886707e8880e9cbf1f289ba1f844173076", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c95db67505f94a1c8f0554a4a3d00318e214b62/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c95db67505f94a1c8f0554a4a3d00318e214b62/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4c95db67505f94a1c8f0554a4a3d00318e214b62", "patch": "@@ -1,3 +1,9 @@\n+Wed Jul  1 23:12:58 1998  Ken Raeburn  <raeburn@cygnus.com>\n+\n+\t* h8300.c (print_operand): Delete %L support.\n+\t* h8300.md (branch_true, branch_false): Use %= with a prefix\n+\tinstead of %L for local branch labels.\n+\n Wed Jul  1 21:27:13 1998  J\"orn Rennecke <amylaar@cygnus.co.uk>\n \n \t* reload1.c (emit_reload_insns): Use proper register classes for"}, {"sha": "e0dff83c9d3626880aa47b379cfd08012961d51d", "filename": "gcc/config/h8300/h8300.c", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c95db67505f94a1c8f0554a4a3d00318e214b62/gcc%2Fconfig%2Fh8300%2Fh8300.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c95db67505f94a1c8f0554a4a3d00318e214b62/gcc%2Fconfig%2Fh8300%2Fh8300.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.c?ref=4c95db67505f94a1c8f0554a4a3d00318e214b62", "patch": "@@ -1024,7 +1024,6 @@ const_costs (r, c)\n    'E' like s but negative.\n    'F' like t but negative.\n    'G' constant just the negative\n-   'L' fake label, changed after used twice.\n    'M' turn a 'M' constant into its negative mod 2.\n    'P' if operand is incing/decing sp, print .w, otherwise .b.\n    'R' print operand as a byte:8 address if appropriate, else fall back to\n@@ -1098,9 +1097,6 @@ print_operand (file, x, code)\n      rtx x;\n      int code;\n {\n-  /* This is used to general unique labels for the 'L' code.  */\n-  static int lab = 1000;\n-\n   /* This is used for communication between the 'P' and 'U' codes.  */\n   static char *last_p;\n \n@@ -1149,12 +1145,6 @@ print_operand (file, x, code)\n \tabort ();\n       fprintf (file, \"#%d\", 0xff & (-INTVAL (x)));\n       break;\n-    case 'L':\n-      /* 'L' must always be used twice in a single pattern.  It generates\n-\t the same label twice, and then will generate a unique label the\n-\t next time it is used.  */\n-      asm_fprintf (file, \"tl%d\", (lab++) / 2);\n-      break;\n     case 'M':\n       /* For 3/-3 and 4/-4, the other 2 is handled separately.  */\n       switch (INTVAL (x))"}, {"sha": "4da7c9ea96f2802794edc6890437b3a1eef1de3c", "filename": "gcc/config/h8300/h8300.h", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c95db67505f94a1c8f0554a4a3d00318e214b62/gcc%2Fconfig%2Fh8300%2Fh8300.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c95db67505f94a1c8f0554a4a3d00318e214b62/gcc%2Fconfig%2Fh8300%2Fh8300.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.h?ref=4c95db67505f94a1c8f0554a4a3d00318e214b62", "patch": "@@ -1202,7 +1202,10 @@ readonly_data() \t\t\t\t\t\t\\\n #define USER_LABEL_PREFIX \"_\"\n \n /* This is how to output an internal numbered label where\n-   PREFIX is the class of label and NUM is the number within the class.  */\n+   PREFIX is the class of label and NUM is the number within the class.\n+\n+   N.B.: The h8300.md branch_true and branch_false patterns also know\n+   how to generate internal labels.  */\n \n #define ASM_OUTPUT_INTERNAL_LABEL(FILE, PREFIX, NUM)\t\\\n   fprintf (FILE, \".%s%d:\\n\", PREFIX, NUM)"}, {"sha": "a94a5ad55b296df6ee8f22dd9bc1bd09b7ab0b43", "filename": "gcc/config/h8300/h8300.md", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c95db67505f94a1c8f0554a4a3d00318e214b62/gcc%2Fconfig%2Fh8300%2Fh8300.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c95db67505f94a1c8f0554a4a3d00318e214b62/gcc%2Fconfig%2Fh8300%2Fh8300.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.md?ref=4c95db67505f94a1c8f0554a4a3d00318e214b62", "patch": "@@ -1,5 +1,5 @@\n ;; GCC machine description for Hitachi H8/300\n-;; Copyright (C) 1992, 1993, 1994, 1995, 1996 Free Software Foundation, Inc.\n+;; Copyright (C) 1992, 93, 94, 95, 96, 1997 Free Software Foundation, Inc.\n \n ;;   Contributed by Steve Chamberlain (sac@cygnus.com),\n ;;   Jim Wilson (wilson@cygnus.com), and Doug Evans (dje@cygnus.com).\n@@ -1487,7 +1487,7 @@\n   else if (get_attr_length (insn) == 4) \n     return \\\"b%j1\t%l0:16\\\";\n   else\n-    return \\\"b%k1\t%L0\\;jmp\t@%l0\\;%L0:\\\";\n+    return \\\"b%k1\t.Lh8BR%=\\;jmp\t@%l0\\\\n.Lh8BR%=:\\\";\n }\" \n  [(set_attr \"type\" \"branch\")\n    (set_attr \"cc\" \"none\")])\n@@ -1516,7 +1516,7 @@\n   else if (get_attr_length (insn) == 4) \n     return \\\"b%k1\t%l0:16\\\";\n   else\n-    return \\\"b%j1\t%L0\\;jmp\t@%l0\\;%L0:\\\";\n+    return \\\"b%j1\t.Lh8BR%=\\;jmp\t@%l0\\\\n.Lh8BR%=:\\\";\n }\"\n   [(set_attr \"type\" \"branch\")\n    (set_attr \"cc\" \"none\")])\n@@ -1669,8 +1669,6 @@\n   \"\"\n   \"\n {\n-  extern int optimize;\n-\n   if (TARGET_H8300\n       && GET_CODE (operands[1]) != CONST_INT\n       && !optimize)\n@@ -1753,7 +1751,6 @@\n   \"\"\n   \"\n {\n-  extern int optimize;\n   if (TARGET_H8300\n       && GET_CODE (operands[1]) != CONST_INT\n       && !optimize)"}]}