{"sha": "7cdca3ec8a5ae98b5a92dcb3cb2d6d28f8f68266", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2NkY2EzZWM4YTVhZTk4YjVhOTJkY2IzY2IyZDZkMjhmOGY2ODI2Ng==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2017-01-13T18:32:44Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2017-01-13T18:32:44Z"}, "message": "i386.opt (msgx): Use ix86_isa_flags2 variable.\n\n\t* config/i386/i386.opt (msgx): Use ix86_isa_flags2 variable.\n\t* config/i386/i386.c (ix86_target_string): Add missing options\n\tto isa_opts and reorder options by implied ISAs.  Rename isa_opts2 to\n\tisa2_opts, ix86_flag_opts to flag2_opts, ix86_target_other to\n\tflags_other and ix86_target_other to flags2_other.  Display unknown\n\tisa2 options.\n\t(ix86_valid_target_attribute_inner_p): Add missing options and\n\treorder options by implied ISAs, as in ix86_target_string.\n\ntestsuite/ChangeLog:\n\n\t* gcc.target/i386/funcspec-56.inc: Add missing options and\n\treorder options by implied ISAs, as in ix86_target_string.\n\nFrom-SVN: r244452", "tree": {"sha": "dfcc637e94b39b9b2a57a507421be6691e342725", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dfcc637e94b39b9b2a57a507421be6691e342725"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7cdca3ec8a5ae98b5a92dcb3cb2d6d28f8f68266", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7cdca3ec8a5ae98b5a92dcb3cb2d6d28f8f68266", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7cdca3ec8a5ae98b5a92dcb3cb2d6d28f8f68266", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7cdca3ec8a5ae98b5a92dcb3cb2d6d28f8f68266/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0fdba3a81ca688d6b0072dc97fc2499ea6f89974", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0fdba3a81ca688d6b0072dc97fc2499ea6f89974", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0fdba3a81ca688d6b0072dc97fc2499ea6f89974"}], "stats": {"total": 438, "additions": 269, "deletions": 169}, "files": [{"sha": "b303681d2f23317ecb24b74eb77712468fe3edc8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7cdca3ec8a5ae98b5a92dcb3cb2d6d28f8f68266/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7cdca3ec8a5ae98b5a92dcb3cb2d6d28f8f68266/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7cdca3ec8a5ae98b5a92dcb3cb2d6d28f8f68266", "patch": "@@ -1,3 +1,14 @@\n+2017-01-13  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.opt (msgx): Use ix86_isa_flags2 variable.\n+\t* config/i386/i386.c (ix86_target_string): Add missing options\n+\tto isa_opts and reorder options by implied ISAs.  Rename isa_opts2 to\n+\tisa2_opts, ix86_flag_opts to flag2_opts, ix86_target_other to\n+\tflags_other and ix86_target_other to flags2_other.  Display unknown\n+\tisa2 options.\n+\t(ix86_valid_target_attribute_inner_p): Add missing options and\n+\treorder options by implied ISAs, as in ix86_target_string.\n+\n 2017-01-13  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* hash-table.h (hash_table::too_empty_p): New function."}, {"sha": "fc934d2485fb35fb288af89b9e370e8e257b7d7a", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 130, "deletions": 114, "changes": 244, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7cdca3ec8a5ae98b5a92dcb3cb2d6d28f8f68266/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7cdca3ec8a5ae98b5a92dcb3cb2d6d28f8f68266/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=7cdca3ec8a5ae98b5a92dcb3cb2d6d28f8f68266", "patch": "@@ -4246,8 +4246,9 @@ ix86_using_red_zone (void)\n    responsible for freeing the string.  */\n \n static char *\n-ix86_target_string (HOST_WIDE_INT isa, HOST_WIDE_INT isa2, int flags,\n-\t\t    int ix86_flags, const char *arch, const char *tune,\n+ix86_target_string (HOST_WIDE_INT isa, HOST_WIDE_INT isa2,\n+\t\t    int flags, int flags2,\n+\t\t    const char *arch, const char *tune,\n \t\t    enum fpmath_unit fpmath, bool add_nl_p)\n {\n   struct ix86_target_opts\n@@ -4256,72 +4257,76 @@ ix86_target_string (HOST_WIDE_INT isa, HOST_WIDE_INT isa2, int flags,\n     HOST_WIDE_INT mask;\t\t/* isa mask options */\n   };\n \n-  /* This table is ordered so that options like -msse4.2 that imply\n-     preceding options while match those first.  */\n+  /* This table is ordered so that options like -msse4.2 that imply other\n+     ISAs come first.  Target string will be displayed in the same order.  */\n+  static struct ix86_target_opts isa2_opts[] =\n+  {\n+    { \"-msgx\",\t\tOPTION_MASK_ISA_SGX },\n+    { \"-mavx5124vnniw\", OPTION_MASK_ISA_AVX5124VNNIW },\n+    { \"-mavx5124fmaps\", OPTION_MASK_ISA_AVX5124FMAPS },\n+    { \"-mavx512vpopcntdq\", OPTION_MASK_ISA_AVX512VPOPCNTDQ }\n+  };\n   static struct ix86_target_opts isa_opts[] =\n   {\n-    { \"-mfma4\",\t\tOPTION_MASK_ISA_FMA4 },\n-    { \"-mfma\",\t\tOPTION_MASK_ISA_FMA },\n-    { \"-mxop\",\t\tOPTION_MASK_ISA_XOP },\n-    { \"-mlwp\",\t\tOPTION_MASK_ISA_LWP },\n-    { \"-mavx512f\",\tOPTION_MASK_ISA_AVX512F },\n+    { \"-mavx512vbmi\",\tOPTION_MASK_ISA_AVX512VBMI },\n+    { \"-mavx512ifma\",\tOPTION_MASK_ISA_AVX512IFMA },\n+    { \"-mavx512vl\",\tOPTION_MASK_ISA_AVX512VL },\n+    { \"-mavx512bw\",\tOPTION_MASK_ISA_AVX512BW },\n+    { \"-mavx512dq\",\tOPTION_MASK_ISA_AVX512DQ },\n     { \"-mavx512er\",\tOPTION_MASK_ISA_AVX512ER },\n-    { \"-mavx512cd\",\tOPTION_MASK_ISA_AVX512CD },\n     { \"-mavx512pf\",\tOPTION_MASK_ISA_AVX512PF },\n-    { \"-mavx512dq\",\tOPTION_MASK_ISA_AVX512DQ },\n-    { \"-mavx512bw\",\tOPTION_MASK_ISA_AVX512BW },\n-    { \"-mavx512vl\",\tOPTION_MASK_ISA_AVX512VL },\n-    { \"-mavx512ifma\",\tOPTION_MASK_ISA_AVX512IFMA },\n-    { \"-mavx512vbmi\",\tOPTION_MASK_ISA_AVX512VBMI },\n-    { \"-msse4a\",\tOPTION_MASK_ISA_SSE4A },\n+    { \"-mavx512cd\",\tOPTION_MASK_ISA_AVX512CD },\n+    { \"-mavx512f\",\tOPTION_MASK_ISA_AVX512F },\n+    { \"-mavx2\",\t\tOPTION_MASK_ISA_AVX2 },\n+    { \"-mfma\",\t\tOPTION_MASK_ISA_FMA },\n+    { \"-mxop\",\t\tOPTION_MASK_ISA_XOP },\n+    { \"-mfma4\",\t\tOPTION_MASK_ISA_FMA4 },\n+    { \"-mf16c\",\t\tOPTION_MASK_ISA_F16C },\n+    { \"-mavx\",\t\tOPTION_MASK_ISA_AVX },\n+/*  { \"-msse4\"\t\tOPTION_MASK_ISA_SSE4 }, */\n     { \"-msse4.2\",\tOPTION_MASK_ISA_SSE4_2 },\n     { \"-msse4.1\",\tOPTION_MASK_ISA_SSE4_1 },\n+    { \"-msse4a\",\tOPTION_MASK_ISA_SSE4A },\n     { \"-mssse3\",\tOPTION_MASK_ISA_SSSE3 },\n     { \"-msse3\",\t\tOPTION_MASK_ISA_SSE3 },\n+    { \"-maes\",\t\tOPTION_MASK_ISA_AES },\n+    { \"-msha\",\t\tOPTION_MASK_ISA_SHA },\n+    { \"-mpclmul\",\tOPTION_MASK_ISA_PCLMUL },\n     { \"-msse2\",\t\tOPTION_MASK_ISA_SSE2 },\n     { \"-msse\",\t\tOPTION_MASK_ISA_SSE },\n-    { \"-m3dnow\",\tOPTION_MASK_ISA_3DNOW },\n     { \"-m3dnowa\",\tOPTION_MASK_ISA_3DNOW_A },\n+    { \"-m3dnow\",\tOPTION_MASK_ISA_3DNOW },\n     { \"-mmmx\",\t\tOPTION_MASK_ISA_MMX },\n+    { \"-mrtm\",\t\tOPTION_MASK_ISA_RTM },\n+    { \"-mprfchw\",\tOPTION_MASK_ISA_PRFCHW },\n+    { \"-mrdseed\",\tOPTION_MASK_ISA_RDSEED },\n+    { \"-madx\",\t\tOPTION_MASK_ISA_ADX },\n+    { \"-mprefetchwt1\",\tOPTION_MASK_ISA_PREFETCHWT1 },\n+    { \"-mclflushopt\",\tOPTION_MASK_ISA_CLFLUSHOPT },\n+    { \"-mxsaves\",\tOPTION_MASK_ISA_XSAVES },\n+    { \"-mxsavec\",\tOPTION_MASK_ISA_XSAVEC },\n+    { \"-mxsaveopt\",\tOPTION_MASK_ISA_XSAVEOPT },\n+    { \"-mxsave\",\tOPTION_MASK_ISA_XSAVE },\n     { \"-mabm\",\t\tOPTION_MASK_ISA_ABM },\n     { \"-mbmi\",\t\tOPTION_MASK_ISA_BMI },\n     { \"-mbmi2\",\t\tOPTION_MASK_ISA_BMI2 },\n     { \"-mlzcnt\",\tOPTION_MASK_ISA_LZCNT },\n-    { \"-mhle\",\t\tOPTION_MASK_ISA_HLE },\n-    { \"-mfxsr\",\t\tOPTION_MASK_ISA_FXSR },\n-    { \"-mrdseed\",\tOPTION_MASK_ISA_RDSEED },\n-    { \"-mprfchw\",\tOPTION_MASK_ISA_PRFCHW },\n-    { \"-madx\",\t\tOPTION_MASK_ISA_ADX },\n     { \"-mtbm\",\t\tOPTION_MASK_ISA_TBM },\n     { \"-mpopcnt\",\tOPTION_MASK_ISA_POPCNT },\n+    { \"-mcx16\",\t\tOPTION_MASK_ISA_CX16 },\n+    { \"-msahf\",\t\tOPTION_MASK_ISA_SAHF },\n     { \"-mmovbe\",\tOPTION_MASK_ISA_MOVBE },\n     { \"-mcrc32\",\tOPTION_MASK_ISA_CRC32 },\n-    { \"-maes\",\t\tOPTION_MASK_ISA_AES },\n-    { \"-msha\",\t\tOPTION_MASK_ISA_SHA },\n-    { \"-mpclmul\",\tOPTION_MASK_ISA_PCLMUL },\n     { \"-mfsgsbase\",\tOPTION_MASK_ISA_FSGSBASE },\n     { \"-mrdrnd\",\tOPTION_MASK_ISA_RDRND },\n-    { \"-mf16c\",\t\tOPTION_MASK_ISA_F16C },\n-    { \"-mrtm\",\t\tOPTION_MASK_ISA_RTM },\n-    { \"-mxsave\",\tOPTION_MASK_ISA_XSAVE },\n-    { \"-mxsaveopt\",\tOPTION_MASK_ISA_XSAVEOPT },\n-    { \"-mprefetchwt1\",\tOPTION_MASK_ISA_PREFETCHWT1 },\n-    { \"-mclflushopt\",\tOPTION_MASK_ISA_CLFLUSHOPT },\n-    { \"-mxsavec\",\tOPTION_MASK_ISA_XSAVEC },\n-    { \"-mxsaves\",\tOPTION_MASK_ISA_XSAVES },\n-    { \"-mmpx\",\t\tOPTION_MASK_ISA_MPX },\n-    { \"-mclwb\",\t\tOPTION_MASK_ISA_CLWB },\n     { \"-mmwaitx\",\tOPTION_MASK_ISA_MWAITX },\n     { \"-mclzero\",\tOPTION_MASK_ISA_CLZERO },\n-    { \"-mpku\",\t\tOPTION_MASK_ISA_PKU }\n-  };\n-  /* Additional structure for isa flags.  */\n-  static struct ix86_target_opts isa_opts2[] =\n-  {\n-    { \"-mavx5124vnniw\", OPTION_MASK_ISA_AVX5124VNNIW },\n-    { \"-mavx5124fmaps\", OPTION_MASK_ISA_AVX5124FMAPS },\n-    { \"-mavx512vpopcntdq\", OPTION_MASK_ISA_AVX512VPOPCNTDQ },\n-    { \"-msgx\",\t\tOPTION_MASK_ISA_SGX }\n+    { \"-mpku\",\t\tOPTION_MASK_ISA_PKU },\n+    { \"-mlwp\",\t\tOPTION_MASK_ISA_LWP },\n+    { \"-mhle\",\t\tOPTION_MASK_ISA_HLE },\n+    { \"-mfxsr\",\t\tOPTION_MASK_ISA_FXSR },\n+    { \"-mmpx\",\t\tOPTION_MASK_ISA_MPX },\n+    { \"-mclwb\",\t\tOPTION_MASK_ISA_CLWB }\n   };\n   /* Flag options.  */\n   static struct ix86_target_opts flag_opts[] =\n@@ -4358,17 +4363,18 @@ ix86_target_string (HOST_WIDE_INT isa, HOST_WIDE_INT isa2, int flags,\n   };\n \n   /* Additional flag options.  */\n-  static struct ix86_target_opts ix86_flag_opts[] =\n+  static struct ix86_target_opts flag2_opts[] =\n   {\n     { \"-mgeneral-regs-only\",\t\tOPTION_MASK_GENERAL_REGS_ONLY },\n   };\n \n-  const char *opts[ARRAY_SIZE (isa_opts) + ARRAY_SIZE (isa_opts2)\n-\t\t   + ARRAY_SIZE (flag_opts) + ARRAY_SIZE (ix86_flag_opts) + 6][2];\n+  const char *opts[ARRAY_SIZE (isa_opts) + ARRAY_SIZE (isa2_opts)\n+\t\t   + ARRAY_SIZE (flag_opts) + ARRAY_SIZE (flag2_opts) + 6][2];\n \n   char isa_other[40];\n-  char target_other[40];\n-  char ix86_target_other[40];\n+  char isa2_other[40];\n+  char flags_other[40];\n+  char flags2_other[40];\n   unsigned num = 0;\n   unsigned i, j;\n   char *ret;\n@@ -4409,6 +4415,22 @@ ix86_target_string (HOST_WIDE_INT isa, HOST_WIDE_INT isa2, int flags,\n     abi = \"-m32\";\n   opts[num++][0] = abi;\n \n+  /* Pick out the options in isa2 options.  */\n+  for (i = 0; i < ARRAY_SIZE (isa2_opts); i++)\n+    {\n+      if ((isa2 & isa2_opts[i].mask) != 0)\n+\t{\n+\t  opts[num++][0] = isa2_opts[i].option;\n+\t  isa2 &= ~ isa2_opts[i].mask;\n+\t}\n+    }\n+\n+  if (isa2 && add_nl_p)\n+    {\n+      opts[num++][0] = isa2_other;\n+      sprintf (isa2_other, \"(other isa2: %#\" HOST_WIDE_INT_PRINT \"x)\", isa2);\n+    }\n+\n   /* Pick out the options in isa options.  */\n   for (i = 0; i < ARRAY_SIZE (isa_opts); i++)\n     {\n@@ -4422,18 +4444,7 @@ ix86_target_string (HOST_WIDE_INT isa, HOST_WIDE_INT isa2, int flags,\n   if (isa && add_nl_p)\n     {\n       opts[num++][0] = isa_other;\n-      sprintf (isa_other, \"(other isa: %#\" HOST_WIDE_INT_PRINT \"x)\",\n-\t       isa);\n-    }\n-\n-  /* Pick out the options in isa2 options.  */\n-  for (i = 0; i < ARRAY_SIZE (isa_opts2); i++)\n-    {\n-      if ((isa2 & isa_opts2[i].mask) != 0)\n-\t{\n-\t  opts[num++][0] = isa_opts2[i].option;\n-\t  isa &= ~ isa_opts2[i].mask;\n-\t}\n+      sprintf (isa_other, \"(other isa: %#\" HOST_WIDE_INT_PRINT \"x)\", isa);\n     }\n \n   /* Add flag options.  */\n@@ -4448,24 +4459,24 @@ ix86_target_string (HOST_WIDE_INT isa, HOST_WIDE_INT isa2, int flags,\n \n   if (flags && add_nl_p)\n     {\n-      opts[num++][0] = target_other;\n-      sprintf (target_other, \"(other flags: %#x)\", flags);\n+      opts[num++][0] = flags_other;\n+      sprintf (flags_other, \"(other flags: %#x)\", flags);\n     }\n \n     /* Add additional flag options.  */\n-  for (i = 0; i < ARRAY_SIZE (ix86_flag_opts); i++)\n+  for (i = 0; i < ARRAY_SIZE (flag2_opts); i++)\n     {\n-      if ((ix86_flags & ix86_flag_opts[i].mask) != 0)\n+      if ((flags2 & flag2_opts[i].mask) != 0)\n \t{\n-\t  opts[num++][0] = ix86_flag_opts[i].option;\n-\t  ix86_flags &= ~ ix86_flag_opts[i].mask;\n+\t  opts[num++][0] = flag2_opts[i].option;\n+\t  flags2 &= ~ flag2_opts[i].mask;\n \t}\n     }\n \n-  if (ix86_flags && add_nl_p)\n+  if (flags2 && add_nl_p)\n     {\n-      opts[num++][0] = ix86_target_other;\n-      sprintf (ix86_target_other, \"(other flags: %#x)\", ix86_flags);\n+      opts[num++][0] = flags2_other;\n+      sprintf (flags2_other, \"(other flags2: %#x)\", flags2);\n     }\n \n   /* Add -fpmath= option.  */\n@@ -6616,65 +6627,70 @@ ix86_valid_target_attribute_inner_p (tree args, char *p_strings[],\n     int mask;\n   } attrs[] = {\n     /* isa options */\n-    IX86_ATTR_ISA (\"3dnow\",\tOPT_m3dnow),\n-    IX86_ATTR_ISA (\"abm\",\tOPT_mabm),\n     IX86_ATTR_ISA (\"sgx\",\tOPT_msgx),\n-    IX86_ATTR_ISA (\"bmi\",\tOPT_mbmi),\n-    IX86_ATTR_ISA (\"bmi2\",\tOPT_mbmi2),\n-    IX86_ATTR_ISA (\"lzcnt\",\tOPT_mlzcnt),\n-    IX86_ATTR_ISA (\"tbm\",\tOPT_mtbm),\n-    IX86_ATTR_ISA (\"aes\",\tOPT_maes),\n-    IX86_ATTR_ISA (\"sha\",\tOPT_msha),\n-    IX86_ATTR_ISA (\"avx\",\tOPT_mavx),\n-    IX86_ATTR_ISA (\"avx2\",\tOPT_mavx2),\n-    IX86_ATTR_ISA (\"avx512f\",\tOPT_mavx512f),\n-    IX86_ATTR_ISA (\"avx512pf\",\tOPT_mavx512pf),\n+    IX86_ATTR_ISA (\"avx5124fmaps\", OPT_mavx5124fmaps),\n+    IX86_ATTR_ISA (\"avx5124vnniw\", OPT_mavx5124vnniw),\n+    IX86_ATTR_ISA (\"avx512vpopcntdq\", OPT_mavx512vpopcntdq),\n+\n+    IX86_ATTR_ISA (\"avx512vbmi\", OPT_mavx512vbmi),\n+    IX86_ATTR_ISA (\"avx512ifma\", OPT_mavx512ifma),\n+    IX86_ATTR_ISA (\"avx512vl\",\tOPT_mavx512vl),\n+    IX86_ATTR_ISA (\"avx512bw\",\tOPT_mavx512bw),\n+    IX86_ATTR_ISA (\"avx512dq\",\tOPT_mavx512dq),\n     IX86_ATTR_ISA (\"avx512er\",\tOPT_mavx512er),\n+    IX86_ATTR_ISA (\"avx512pf\",\tOPT_mavx512pf),\n     IX86_ATTR_ISA (\"avx512cd\",\tOPT_mavx512cd),\n-    IX86_ATTR_ISA (\"avx512dq\",\tOPT_mavx512dq),\n-    IX86_ATTR_ISA (\"avx512bw\",\tOPT_mavx512bw),\n-    IX86_ATTR_ISA (\"avx512vl\",\tOPT_mavx512vl),\n-    IX86_ATTR_ISA (\"avx5124fmaps\",\tOPT_mavx5124fmaps),\n-    IX86_ATTR_ISA (\"avx5124vnniw\",\tOPT_mavx5124vnniw),\n-    IX86_ATTR_ISA (\"avx512vpopcntdq\",\tOPT_mavx512vpopcntdq),\n-    IX86_ATTR_ISA (\"mmx\",\tOPT_mmmx),\n-    IX86_ATTR_ISA (\"pclmul\",\tOPT_mpclmul),\n-    IX86_ATTR_ISA (\"popcnt\",\tOPT_mpopcnt),\n-    IX86_ATTR_ISA (\"movbe\",\tOPT_mmovbe),\n-    IX86_ATTR_ISA (\"crc32\",\tOPT_mcrc32),\n-    IX86_ATTR_ISA (\"sse\",\tOPT_msse),\n-    IX86_ATTR_ISA (\"sse2\",\tOPT_msse2),\n-    IX86_ATTR_ISA (\"sse3\",\tOPT_msse3),\n+    IX86_ATTR_ISA (\"avx512f\",\tOPT_mavx512f),\n+    IX86_ATTR_ISA (\"avx2\",\tOPT_mavx2),\n+    IX86_ATTR_ISA (\"fma\",\tOPT_mfma),\n+    IX86_ATTR_ISA (\"xop\",\tOPT_mxop),\n+    IX86_ATTR_ISA (\"fma4\",\tOPT_mfma4),\n+    IX86_ATTR_ISA (\"f16c\",\tOPT_mf16c),\n+    IX86_ATTR_ISA (\"avx\",\tOPT_mavx),\n     IX86_ATTR_ISA (\"sse4\",\tOPT_msse4),\n-    IX86_ATTR_ISA (\"sse4.1\",\tOPT_msse4_1),\n     IX86_ATTR_ISA (\"sse4.2\",\tOPT_msse4_2),\n+    IX86_ATTR_ISA (\"sse4.1\",\tOPT_msse4_1),\n     IX86_ATTR_ISA (\"sse4a\",\tOPT_msse4a),\n     IX86_ATTR_ISA (\"ssse3\",\tOPT_mssse3),\n-    IX86_ATTR_ISA (\"fma4\",\tOPT_mfma4),\n-    IX86_ATTR_ISA (\"fma\",\tOPT_mfma),\n-    IX86_ATTR_ISA (\"xop\",\tOPT_mxop),\n-    IX86_ATTR_ISA (\"lwp\",\tOPT_mlwp),\n-    IX86_ATTR_ISA (\"fsgsbase\",\tOPT_mfsgsbase),\n-    IX86_ATTR_ISA (\"rdrnd\",\tOPT_mrdrnd),\n-    IX86_ATTR_ISA (\"f16c\",\tOPT_mf16c),\n+    IX86_ATTR_ISA (\"sse3\",\tOPT_msse3),\n+    IX86_ATTR_ISA (\"aes\",\tOPT_maes),\n+    IX86_ATTR_ISA (\"sha\",\tOPT_msha),\n+    IX86_ATTR_ISA (\"pclmul\",\tOPT_mpclmul),\n+    IX86_ATTR_ISA (\"sse2\",\tOPT_msse2),\n+    IX86_ATTR_ISA (\"sse\",\tOPT_msse),\n+    IX86_ATTR_ISA (\"3dnowa\",\tOPT_m3dnowa),\n+    IX86_ATTR_ISA (\"3dnow\",\tOPT_m3dnow),\n+    IX86_ATTR_ISA (\"mmx\",\tOPT_mmmx),\n     IX86_ATTR_ISA (\"rtm\",\tOPT_mrtm),\n-    IX86_ATTR_ISA (\"hle\",\tOPT_mhle),\n     IX86_ATTR_ISA (\"prfchw\",\tOPT_mprfchw),\n     IX86_ATTR_ISA (\"rdseed\",\tOPT_mrdseed),\n     IX86_ATTR_ISA (\"adx\",\tOPT_madx),\n-    IX86_ATTR_ISA (\"fxsr\",\tOPT_mfxsr),\n-    IX86_ATTR_ISA (\"xsave\",\tOPT_mxsave),\n-    IX86_ATTR_ISA (\"xsaveopt\",\tOPT_mxsaveopt),\n     IX86_ATTR_ISA (\"prefetchwt1\", OPT_mprefetchwt1),\n-    IX86_ATTR_ISA (\"clflushopt\",\tOPT_mclflushopt),\n-    IX86_ATTR_ISA (\"xsavec\",\tOPT_mxsavec),\n+    IX86_ATTR_ISA (\"clflushopt\", OPT_mclflushopt),\n     IX86_ATTR_ISA (\"xsaves\",\tOPT_mxsaves),\n-    IX86_ATTR_ISA (\"avx512vbmi\",\tOPT_mavx512vbmi),\n-    IX86_ATTR_ISA (\"avx512ifma\",\tOPT_mavx512ifma),\n-    IX86_ATTR_ISA (\"clwb\",\tOPT_mclwb),\n+    IX86_ATTR_ISA (\"xsavec\",\tOPT_mxsavec),\n+    IX86_ATTR_ISA (\"xsaveopt\",\tOPT_mxsaveopt),\n+    IX86_ATTR_ISA (\"xsave\",\tOPT_mxsave),\n+    IX86_ATTR_ISA (\"abm\",\tOPT_mabm),\n+    IX86_ATTR_ISA (\"bmi\",\tOPT_mbmi),\n+    IX86_ATTR_ISA (\"bmi2\",\tOPT_mbmi2),\n+    IX86_ATTR_ISA (\"lzcnt\",\tOPT_mlzcnt),\n+    IX86_ATTR_ISA (\"tbm\",\tOPT_mtbm),\n+    IX86_ATTR_ISA (\"popcnt\",\tOPT_mpopcnt),\n+    IX86_ATTR_ISA (\"cx16\",\tOPT_mcx16),\n+    IX86_ATTR_ISA (\"sahf\",\tOPT_msahf),\n+    IX86_ATTR_ISA (\"movbe\",\tOPT_mmovbe),\n+    IX86_ATTR_ISA (\"crc32\",\tOPT_mcrc32),\n+    IX86_ATTR_ISA (\"fsgsbase\",\tOPT_mfsgsbase),\n+    IX86_ATTR_ISA (\"rdrnd\",\tOPT_mrdrnd),\n     IX86_ATTR_ISA (\"mwaitx\",\tOPT_mmwaitx),\n-    IX86_ATTR_ISA (\"clzero\",    OPT_mclzero),\n+    IX86_ATTR_ISA (\"clzero\",\tOPT_mclzero),\n     IX86_ATTR_ISA (\"pku\",\tOPT_mpku),\n+    IX86_ATTR_ISA (\"lwp\",\tOPT_mlwp),\n+    IX86_ATTR_ISA (\"hle\",\tOPT_mhle),\n+    IX86_ATTR_ISA (\"fxsr\",\tOPT_mfxsr),\n+    IX86_ATTR_ISA (\"mpx\",\tOPT_mmpx),\n+    IX86_ATTR_ISA (\"clwb\",\tOPT_mclwb),\n \n     /* enum options */\n     IX86_ATTR_ENUM (\"fpmath=\",\tOPT_mfpmath_),"}, {"sha": "0ee31845ebaa17a7d5cc95597ac49d73708b3a0c", "filename": "gcc/config/i386/i386.opt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7cdca3ec8a5ae98b5a92dcb3cb2d6d28f8f68266/gcc%2Fconfig%2Fi386%2Fi386.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7cdca3ec8a5ae98b5a92dcb3cb2d6d28f8f68266/gcc%2Fconfig%2Fi386%2Fi386.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.opt?ref=7cdca3ec8a5ae98b5a92dcb3cb2d6d28f8f68266", "patch": "@@ -738,7 +738,7 @@ Target Report Mask(ISA_POPCNT) Var(ix86_isa_flags) Save\n Support code generation of popcnt instruction.\n \n msgx\n-Target Report Mask(ISA_SGX) Var(ix86_isa_flags) Save\n+Target Report Mask(ISA_SGX) Var(ix86_isa_flags2) Save\n Support SGX built-in functions and code generation.\n \n mbmi"}, {"sha": "f9b61882e58f8e1cc80e43dc73728d025589728d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7cdca3ec8a5ae98b5a92dcb3cb2d6d28f8f68266/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7cdca3ec8a5ae98b5a92dcb3cb2d6d28f8f68266/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7cdca3ec8a5ae98b5a92dcb3cb2d6d28f8f68266", "patch": "@@ -1,3 +1,8 @@\n+2017-01-13  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* gcc.target/i386/funcspec-56.inc: Add missing options and\n+\treorder options by implied ISAs, as in ix86_target_string.\n+\n 2017-01-13  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/71166"}, {"sha": "14abf42b88757ed84bb53fd568b72a2e8544fd07", "filename": "gcc/testsuite/gcc.target/i386/funcspec-56.inc", "status": "modified", "additions": 122, "deletions": 54, "changes": 176, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7cdca3ec8a5ae98b5a92dcb3cb2d6d28f8f68266/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffuncspec-56.inc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7cdca3ec8a5ae98b5a92dcb3cb2d6d28f8f68266/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffuncspec-56.inc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffuncspec-56.inc?ref=7cdca3ec8a5ae98b5a92dcb3cb2d6d28f8f68266", "patch": "@@ -1,72 +1,140 @@\n /* Common 32-bit and 64-bit function specific options.  */\n \n-extern void test_abm (void)\t\t\t__attribute__((__target__(\"abm\")));\n-extern void test_aes (void)\t\t\t__attribute__((__target__(\"aes\")));\n-extern void test_bmi (void)\t\t\t__attribute__((__target__(\"bmi\")));\n-extern void test_mmx (void)\t\t\t__attribute__((__target__(\"mmx\")));\n-extern void test_pclmul (void)\t\t\t__attribute__((__target__(\"pclmul\")));\n-extern void test_popcnt (void)\t\t\t__attribute__((__target__(\"popcnt\")));\n-extern void test_recip (void)\t\t\t__attribute__((__target__(\"recip\")));\n-extern void test_sse (void)\t\t\t__attribute__((__target__(\"sse\")));\n-extern void test_sse2 (void)\t\t\t__attribute__((__target__(\"sse2\")));\n-extern void test_sse3 (void)\t\t\t__attribute__((__target__(\"sse3\")));\n+extern void test_sgx (void)\t\t\t__attribute__((__target__(\"sgx\")));\n+extern void test_avx5124fmaps(void)\t\t__attribute__((__target__(\"avx5124fmaps\")));\n+extern void test_avx5124vnniw(void)\t\t__attribute__((__target__(\"avx5124vnniw\")));\n+extern void test_avx512vpopcntdq(void)\t\t__attribute__((__target__(\"avx512vpopcntdq\")));\n+\n+extern void test_avx512vbmi (void)\t\t__attribute__((__target__(\"avx512vbmi\")));\n+extern void test_avx512ifma (void)\t\t__attribute__((__target__(\"avx512ifma\")));\n+extern void test_avx512vl (void)\t\t__attribute__((__target__(\"avx512vl\")));\n+extern void test_avx512bw (void)\t\t__attribute__((__target__(\"avx512bw\")));\n+extern void test_avx512dq (void)\t\t__attribute__((__target__(\"avx512dq\")));\n+extern void test_avx512er (void)\t\t__attribute__((__target__(\"avx512er\")));\n+extern void test_avx512pf (void)\t\t__attribute__((__target__(\"avx512pf\")));\n+extern void test_avx512cd (void)\t\t__attribute__((__target__(\"avx512cd\")));\n+extern void test_avx512f  (void)\t\t__attribute__((__target__(\"avx512f\")));\n+extern void test_avx2 (void)\t\t\t__attribute__((__target__(\"avx2\")));\n+extern void test_fma (void)\t\t\t__attribute__((__target__(\"fma\")));\n+extern void test_xop (void)\t\t\t__attribute__((__target__(\"xop\")));\n+extern void test_fma4 (void)\t\t\t__attribute__((__target__(\"fma4\")));\n+extern void test_f16c (void)\t\t\t__attribute__((__target__(\"f16c\")));\n+extern void test_avx (void)\t\t\t__attribute__((__target__(\"avx\")));\n extern void test_sse4 (void)\t\t\t__attribute__((__target__(\"sse4\")));\n-extern void test_sse4_1 (void)\t\t\t__attribute__((__target__(\"sse4.1\")));\n extern void test_sse4_2 (void)\t\t\t__attribute__((__target__(\"sse4.2\")));\n+extern void test_sse4_1 (void)\t\t\t__attribute__((__target__(\"sse4.1\")));\n extern void test_sse4a (void)\t\t\t__attribute__((__target__(\"sse4a\")));\n-extern void test_fma (void)\t\t\t__attribute__((__target__(\"fma\")));\n-extern void test_fma4 (void)\t\t\t__attribute__((__target__(\"fma4\")));\n-extern void test_xop (void)\t\t\t__attribute__((__target__(\"xop\")));\n extern void test_ssse3 (void)\t\t\t__attribute__((__target__(\"ssse3\")));\n-extern void test_tbm (void)\t\t\t__attribute__((__target__(\"tbm\")));\n-extern void test_avx (void)\t\t\t__attribute__((__target__(\"avx\")));\n-extern void test_avx2 (void)\t\t\t__attribute__((__target__(\"avx2\")));\n-extern void test_avx512f (void)\t\t\t__attribute__((__target__(\"avx512f\")));\n-extern void test_avx512vl(void)\t\t\t__attribute__((__target__(\"avx512vl\")));\n-extern void test_avx512bw(void)\t\t\t__attribute__((__target__(\"avx512bw\")));\n-extern void test_avx512dq(void)\t\t\t__attribute__((__target__(\"avx512dq\")));\n-extern void test_avx512er(void)\t\t\t__attribute__((__target__(\"avx512er\")));\n-extern void test_avx512pf(void)\t\t\t__attribute__((__target__(\"avx512pf\")));\n-extern void test_avx512cd(void)\t\t\t__attribute__((__target__(\"avx512cd\")));\n-extern void test_avx5124fmaps(void)             __attribute__((__target__(\"avx5124fmaps\")));\n-extern void test_avx5124vnniw(void)             __attribute__((__target__(\"avx5124vnniw\")));\n-extern void test_avx512vpopcntdq(void)\t\t__attribute__((__target__(\"avx512vpopcntdq\")));\n+extern void test_sse3 (void)\t\t\t__attribute__((__target__(\"sse3\")));\n+extern void test_aes (void)\t\t\t__attribute__((__target__(\"aes\")));\n+extern void test_sha (void)\t\t\t__attribute__((__target__(\"sha\")));\n+extern void test_pclmul (void)\t\t\t__attribute__((__target__(\"pclmul\")));\n+extern void test_sse2 (void)\t\t\t__attribute__((__target__(\"sse2\")));\n+extern void test_sse (void)\t\t\t__attribute__((__target__(\"sse\")));\n+extern void test_3dnowa (void)\t\t\t__attribute__((__target__(\"3dnowa\")));\n+extern void test_3dnow (void)\t\t\t__attribute__((__target__(\"3dnow\")));\n+extern void test_mmx (void)\t\t\t__attribute__((__target__(\"mmx\")));\n+extern void test_rtm (void)\t\t\t__attribute__((__target__(\"rtm\")));\n+extern void test_prfchw (void)\t\t\t__attribute__((__target__(\"prfchw\")));\n+extern void test_rdseed (void)\t\t\t__attribute__((__target__(\"rdseed\")));\n+extern void test_adx (void)\t\t\t__attribute__((__target__(\"adx\")));\n+extern void test_prefetchwt1 (void)\t\t__attribute__((__target__(\"prefetchwt1\")));\n+extern void test_clflushopt (void)\t\t__attribute__((__target__(\"clflushopt\")));\n+extern void test_xsaves (void)\t\t\t__attribute__((__target__(\"xsaves\")));\n+extern void test_xsavec (void)\t\t\t__attribute__((__target__(\"xsavec\")));\n+extern void test_xsaveopt (void)\t\t__attribute__((__target__(\"xsaveopt\")));\n+extern void test_xsave (void)\t\t\t__attribute__((__target__(\"xsave\")));\n+extern void test_abm (void)\t\t\t__attribute__((__target__(\"abm\")));\n extern void test_bmi (void)\t\t\t__attribute__((__target__(\"bmi\")));\n extern void test_bmi2 (void)\t\t\t__attribute__((__target__(\"bmi2\")));\n+extern void test_lzcnt (void)\t\t\t__attribute__((__target__(\"lzcnt\")));\n+extern void test_tbm (void)\t\t\t__attribute__((__target__(\"tbm\")));\n+extern void test_popcnt (void)\t\t\t__attribute__((__target__(\"popcnt\")));\n+extern void test_cx16 (void)\t\t\t__attribute__((__target__(\"cx16\")));\n+extern void test_sahf (void)\t\t\t__attribute__((__target__(\"sahf\")));\n+extern void test_movbe (void)\t\t\t__attribute__((__target__(\"movbe\")));\n+extern void test_crc32 (void)\t\t\t__attribute__((__target__(\"crc32\")));\n+extern void test_fsgsbase (void)\t\t__attribute__((__target__(\"fsgsbase\")));\n+extern void test_rdrnd (void)\t\t\t__attribute__((__target__(\"rdrnd\")));\n+extern void test_mwaitx (void)\t\t\t__attribute__((__target__(\"mwaitx\")));\n+extern void test_clzero (void)\t\t\t__attribute__((__target__(\"clzero\")));\n+extern void test_pku (void)\t\t\t__attribute__((__target__(\"pku\")));\n+extern void test_lwp (void)\t\t\t__attribute__((__target__(\"lwp\")));\n+extern void test_hle (void)\t\t\t__attribute__((__target__(\"hle\")));\n+extern void test_fxsr (void)\t\t\t__attribute__((__target__(\"fxsr\")));\n+extern void test_mpx (void)\t\t\t__attribute__((__target__(\"mpx\")));\n+extern void test_clwb (void)\t\t\t__attribute__((__target__(\"clwb\")));\n \n-extern void test_no_abm (void)\t\t\t__attribute__((__target__(\"no-abm\")));\n-extern void test_no_aes (void)\t\t\t__attribute__((__target__(\"no-aes\")));\n-extern void test_no_bmi (void)\t\t\t__attribute__((__target__(\"no-bmi\")));\n-extern void test_no_mmx (void)\t\t\t__attribute__((__target__(\"no-mmx\")));\n-extern void test_no_pclmul (void)\t\t__attribute__((__target__(\"no-pclmul\")));\n-extern void test_no_popcnt (void)\t\t__attribute__((__target__(\"no-popcnt\")));\n-extern void test_no_recip (void)\t\t__attribute__((__target__(\"no-recip\")));\n-extern void test_no_sse (void)\t\t\t__attribute__((__target__(\"no-sse\")));\n-extern void test_no_sse2 (void)\t\t\t__attribute__((__target__(\"no-sse2\")));\n-extern void test_no_sse3 (void)\t\t\t__attribute__((__target__(\"no-sse3\")));\n+extern void test_cld (void)\t\t\t__attribute__((__target__(\"cld\")));\n+extern void test_recip (void)\t\t\t__attribute__((__target__(\"recip\")));\n+\n+extern void test_no_sgx (void)\t\t\t__attribute__((__target__(\"no-sgx\")));\n+extern void test_no_avx5124fmaps(void)\t\t__attribute__((__target__(\"no-avx5124fmaps\")));\n+extern void test_no_avx5124vnniw(void)\t\t__attribute__((__target__(\"no-avx5124vnniw\")));\n+extern void test_no_avx512vpopcntdq(void)\t__attribute__((__target__(\"no-avx512vpopcntdq\")));\n+\n+extern void test_no_avx512vbmi (void)\t\t__attribute__((__target__(\"no-avx512vbmi\")));\n+extern void test_no_avx512ifma (void)\t\t__attribute__((__target__(\"no-avx512ifma\")));\n+extern void test_no_avx512vl (void)\t\t__attribute__((__target__(\"no-avx512vl\")));\n+extern void test_no_avx512bw (void)\t\t__attribute__((__target__(\"no-avx512bw\")));\n+extern void test_no_avx512dq (void)\t\t__attribute__((__target__(\"no-avx512dq\")));\n+extern void test_no_avx512er (void)\t\t__attribute__((__target__(\"no-avx512er\")));\n+extern void test_no_avx512pf (void)\t\t__attribute__((__target__(\"no-avx512pf\")));\n+extern void test_no_avx512cd (void)\t\t__attribute__((__target__(\"no-avx512cd\")));\n+extern void test_no_avx512f  (void)\t\t__attribute__((__target__(\"no-avx512f\")));\n+extern void test_no_avx2 (void)\t\t\t__attribute__((__target__(\"no-avx2\")));\n+extern void test_no_fma (void)\t\t\t__attribute__((__target__(\"no-fma\")));\n+extern void test_no_xop (void)\t\t\t__attribute__((__target__(\"no-xop\")));\n+extern void test_no_fma4 (void)\t\t\t__attribute__((__target__(\"no-fma4\")));\n+extern void test_no_f16c (void)\t\t\t__attribute__((__target__(\"no-f16c\")));\n+extern void test_no_avx (void)\t\t\t__attribute__((__target__(\"no-avx\")));\n extern void test_no_sse4 (void)\t\t\t__attribute__((__target__(\"no-sse4\")));\n-extern void test_no_sse4_1 (void)\t\t__attribute__((__target__(\"no-sse4.1\")));\n extern void test_no_sse4_2 (void)\t\t__attribute__((__target__(\"no-sse4.2\")));\n+extern void test_no_sse4_1 (void)\t\t__attribute__((__target__(\"no-sse4.1\")));\n extern void test_no_sse4a (void)\t\t__attribute__((__target__(\"no-sse4a\")));\n-extern void test_no_fma (void)\t\t\t__attribute__((__target__(\"no-fma\")));\n-extern void test_no_fma4 (void)\t\t\t__attribute__((__target__(\"no-fma4\")));\n-extern void test_no_xop (void)\t\t\t__attribute__((__target__(\"no-xop\")));\n extern void test_no_ssse3 (void)\t\t__attribute__((__target__(\"no-ssse3\")));\n-extern void test_no_tbm (void)\t\t\t__attribute__((__target__(\"no-tbm\")));\n-extern void test_no_avx (void)\t\t\t__attribute__((__target__(\"no-avx\")));\n-extern void test_no_avx2 (void)   \t\t__attribute__((__target__(\"no-avx2\")));\n-extern void test_no_avx512f (void)   \t\t__attribute__((__target__(\"no-avx512f\")));\n-extern void test_no_avx512vl(void)\t\t__attribute__((__target__(\"no-avx512vl\")));\n-extern void test_no_avx512bw(void)\t\t__attribute__((__target__(\"no-avx512bw\")));\n-extern void test_no_avx512dq(void)\t\t__attribute__((__target__(\"no-avx512dq\")));\n-extern void test_no_avx512er(void)\t\t__attribute__((__target__(\"no-avx512er\")));\n-extern void test_bo_avx512pf(void)\t\t__attribute__((__target__(\"no-avx512pf\")));\n-extern void test_no_avx512cd(void)\t\t__attribute__((__target__(\"no-avx512cd\")));\n-extern void test_no_avx5124fmaps(void)          __attribute__((__target__(\"no-avx5124fmaps\")));\n-extern void test_no_avx5124vnniw(void)          __attribute__((__target__(\"no-avx5124vnniw\")));\n-extern void test_no_avx512vpopcntdq(void)\t__attribute__((__target__(\"no-avx512vpopcntdq\")));\n+extern void test_no_sse3 (void)\t\t\t__attribute__((__target__(\"no-sse3\")));\n+extern void test_no_aes (void)\t\t\t__attribute__((__target__(\"no-aes\")));\n+extern void test_no_sha (void)\t\t\t__attribute__((__target__(\"no-sha\")));\n+extern void test_no_pclmul (void)\t\t__attribute__((__target__(\"no-pclmul\")));\n+extern void test_no_sse2 (void)\t\t\t__attribute__((__target__(\"no-sse2\")));\n+extern void test_no_sse (void)\t\t\t__attribute__((__target__(\"no-sse\")));\n+extern void test_no_3dnowa (void)\t\t__attribute__((__target__(\"3dnowa\")));\n+extern void test_no_3dnow (void)\t\t__attribute__((__target__(\"no-3dnow\")));\n+extern void test_no_mmx (void)\t\t\t__attribute__((__target__(\"no-mmx\")));\n+extern void test_no_rtm (void)\t\t\t__attribute__((__target__(\"no-rtm\")));\n+extern void test_no_prfchw (void)\t\t__attribute__((__target__(\"no-prfchw\")));\n+extern void test_no_rdseed (void)\t\t__attribute__((__target__(\"no-rdseed\")));\n+extern void test_no_adx (void)\t\t\t__attribute__((__target__(\"no-adx\")));\n+extern void test_no_prefetchwt1 (void)\t\t__attribute__((__target__(\"no-prefetchwt1\")));\n+extern void test_no_clflushopt (void)\t\t__attribute__((__target__(\"no-clflushopt\")));\n+extern void test_no_xsaves (void)\t\t__attribute__((__target__(\"no-xsaves\")));\n+extern void test_no_xsavec (void)\t\t__attribute__((__target__(\"no-xsavec\")));\n+extern void test_no_xsaveopt (void)\t\t__attribute__((__target__(\"no-xsaveopt\")));\n+extern void test_no_xsave (void)\t\t__attribute__((__target__(\"no-xsave\")));\n+extern void test_no_abm (void)\t\t\t__attribute__((__target__(\"no-abm\")));\n extern void test_no_bmi (void)\t\t\t__attribute__((__target__(\"no-bmi\")));\n extern void test_no_bmi2 (void)\t\t\t__attribute__((__target__(\"no-bmi2\")));\n+extern void test_no_lzcnt (void)\t\t__attribute__((__target__(\"no-lzcnt\")));\n+extern void test_no_tbm (void)\t\t\t__attribute__((__target__(\"no-tbm\")));\n+extern void test_no_popcnt (void)\t\t__attribute__((__target__(\"no-popcnt\")));\n+extern void test_no_cx16 (void)\t\t\t__attribute__((__target__(\"no-cx16\")));\n+extern void test_no_sahf (void)\t\t\t__attribute__((__target__(\"no-sahf\")));\n+extern void test_no_movbe (void)\t\t__attribute__((__target__(\"no-movbe\")));\n+extern void test_no_crc32 (void)\t\t__attribute__((__target__(\"no-crc32\")));\n+extern void test_no_fsgsbase (void)\t\t__attribute__((__target__(\"no-fsgsbase\")));\n+extern void test_no_rdrnd (void)\t\t__attribute__((__target__(\"no-rdrnd\")));\n+extern void test_no_mwaitx (void)\t\t__attribute__((__target__(\"no-mwaitx\")));\n+extern void test_no_clzero (void)\t\t__attribute__((__target__(\"no-clzero\")));\n+extern void test_no_pku (void)\t\t\t__attribute__((__target__(\"no-pku\")));\n+extern void test_no_lwp (void)\t\t\t__attribute__((__target__(\"no-lwp\")));\n+extern void test_no_hle (void)\t\t\t__attribute__((__target__(\"no-hle\")));\n+extern void test_no_fxsr (void)\t\t\t__attribute__((__target__(\"no-fxsr\")));\n+extern void test_no_mpx (void)\t\t\t__attribute__((__target__(\"no-mpx\")));\n+extern void test_no_clwb (void)\t\t\t__attribute__((__target__(\"no-clwb\")));\n+\n+extern void test_no_cld (void)\t\t\t__attribute__((__target__(\"no-cld\")));\n+extern void test_no_recip (void)\t\t__attribute__((__target__(\"no-recip\")));\n \n extern void test_arch_nocona (void)\t\t__attribute__((__target__(\"arch=nocona\")));\n extern void test_arch_core2 (void)\t\t__attribute__((__target__(\"arch=core2\")));"}]}