{"sha": "5a307ee54bca63865b6e5e8ad690720adf0b9d78", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWEzMDdlZTU0YmNhNjM4NjViNmU1ZThhZDY5MDcyMGFkZjBiOWQ3OA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2019-09-11T11:20:35Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2019-09-11T11:20:35Z"}, "message": "lto-opts.c (lto_write_options): Stream -g when debug is enabled.\n\n2019-09-11  Richard Biener  <rguenther@suse.de>\n\n\t* lto-opts.c (lto_write_options): Stream -g when debug is enabled.\n\t* lto-wrapper.c (merge_and_complain): Pick up -g.\n\t(append_compiler_options): Likewise.\n\t(run_gcc): Re-instantiate handling -g0 at link-time.\n\t* doc/invoke.texi (flto): Document debug info generation.\n\nFrom-SVN: r275640", "tree": {"sha": "94e483c2a7f7db580d29f337e1cd73169eb6a10e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/94e483c2a7f7db580d29f337e1cd73169eb6a10e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5a307ee54bca63865b6e5e8ad690720adf0b9d78", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a307ee54bca63865b6e5e8ad690720adf0b9d78", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a307ee54bca63865b6e5e8ad690720adf0b9d78", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a307ee54bca63865b6e5e8ad690720adf0b9d78/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "46dfa8ad6c18feb45d35734eae38798edb7c38cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46dfa8ad6c18feb45d35734eae38798edb7c38cd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/46dfa8ad6c18feb45d35734eae38798edb7c38cd"}], "stats": {"total": 26, "additions": 26, "deletions": 0}, "files": [{"sha": "85bb9ba23fa2ef187d016f4ad8b69c750c64788b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a307ee54bca63865b6e5e8ad690720adf0b9d78/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a307ee54bca63865b6e5e8ad690720adf0b9d78/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5a307ee54bca63865b6e5e8ad690720adf0b9d78", "patch": "@@ -1,3 +1,11 @@\n+2019-09-11  Richard Biener  <rguenther@suse.de>\n+\n+\t* lto-opts.c (lto_write_options): Stream -g when debug is enabled.\n+\t* lto-wrapper.c (merge_and_complain): Pick up -g.\n+\t(append_compiler_options): Likewise.\n+\t(run_gcc): Re-instantiate handling -g0 at link-time.\n+\t* doc/invoke.texi (flto): Document debug info generation.\n+\n 2019-09-11  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/90387"}, {"sha": "6e91a66c9479b2acc5feaa5897d31079c165b85c", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a307ee54bca63865b6e5e8ad690720adf0b9d78/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a307ee54bca63865b6e5e8ad690720adf0b9d78/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=5a307ee54bca63865b6e5e8ad690720adf0b9d78", "patch": "@@ -10339,6 +10339,14 @@ conflicting translation units.  Specifically\n precedence; and for example @option{-ffp-contract=off} takes precedence\n over @option{-ffp-contract=fast}.  You can override them at link time.\n \n+To enable debug info generation you need to supply @option{-g} at\n+compile-time.  If any of the input files at link time were built\n+with debug info generation enabled the link will enable debug info\n+generation as well.  Any elaborate debug info settings\n+like the dwarf level @option{-gdwarf-5} need to be explicitely repeated\n+at the linker command line and mixing different settings in different\n+translation units is discouraged.\n+\n If LTO encounters objects with C linkage declared with incompatible\n types in separate translation units to be linked together (undefined\n behavior according to ISO C99 6.2.7), a non-fatal diagnostic may be"}, {"sha": "0e9f24e118990e0b6092f6f7ac336e3f3fbb60e0", "filename": "gcc/lto-opts.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a307ee54bca63865b6e5e8ad690720adf0b9d78/gcc%2Flto-opts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a307ee54bca63865b6e5e8ad690720adf0b9d78/gcc%2Flto-opts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-opts.c?ref=5a307ee54bca63865b6e5e8ad690720adf0b9d78", "patch": "@@ -94,6 +94,10 @@ lto_write_options (void)\n \t\t\t\t      : \"-fno-pie\");\n     }\n \n+  /* If debug info is enabled append -g.  */\n+  if (debug_info_level > DINFO_LEVEL_NONE)\n+    append_to_collect_gcc_options (&temporary_obstack, &first_p, \"-g\");\n+\n   /* Append options from target hook and store them to offload_lto section.  */\n   if (lto_stream_offload_p)\n     {"}, {"sha": "9a7bbd0c02226eba74275d048ac84a921bf12c5b", "filename": "gcc/lto-wrapper.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a307ee54bca63865b6e5e8ad690720adf0b9d78/gcc%2Flto-wrapper.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a307ee54bca63865b6e5e8ad690720adf0b9d78/gcc%2Flto-wrapper.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-wrapper.c?ref=5a307ee54bca63865b6e5e8ad690720adf0b9d78", "patch": "@@ -265,6 +265,7 @@ merge_and_complain (struct cl_decoded_option **decoded_options,\n \tcase OPT_fshow_column:\n \tcase OPT_fcommon:\n \tcase OPT_fgnu_tm:\n+\tcase OPT_g:\n \t  /* Do what the old LTO code did - collect exactly one option\n \t     setting per OPT code, we pick the first we encounter.\n \t     ???  This doesn't make too much sense, but when it doesn't\n@@ -617,6 +618,7 @@ append_compiler_options (obstack *argv_obstack, struct cl_decoded_option *opts,\n \tcase OPT_fopenacc:\n \tcase OPT_fopenacc_dim_:\n \tcase OPT_foffload_abi_:\n+\tcase OPT_g:\n \tcase OPT_O:\n \tcase OPT_Ofast:\n \tcase OPT_Og:\n@@ -1399,6 +1401,10 @@ run_gcc (unsigned argc, char *argv[])\n \t  linker_output_rel = !strcmp (option->arg, \"rel\");\n \t  break;\n \n+\tcase OPT_g:\n+\t  /* Recognize -g0.  */\n+\t  skip_debug = option->arg && !strcmp (option->arg, \"0\");\n+\t  break;\n \n \tdefault:\n \t  break;"}]}