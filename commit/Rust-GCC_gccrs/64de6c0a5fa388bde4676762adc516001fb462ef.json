{"sha": "64de6c0a5fa388bde4676762adc516001fb462ef", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjRkZTZjMGE1ZmEzODhiZGU0Njc2NzYyYWRjNTE2MDAxZmI0NjJlZg==", "commit": {"author": {"name": "David Edelsohn", "email": "edelsohn@gnu.org", "date": "2002-05-28T23:03:21Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2002-05-28T23:03:21Z"}, "message": "optabs.c (expand_binop): Fix nwords sign warnings.\n\n        * optabs.c (expand_binop): Fix nwords sign warnings.\n        generate pseudo for add_optab.\n\nCo-Authored-By: Jeff Law <law@redhat.com>\n\nFrom-SVN: r53976", "tree": {"sha": "fdb2b4fa29bdbc13bfbcd3f47782465e54466b28", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fdb2b4fa29bdbc13bfbcd3f47782465e54466b28"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/64de6c0a5fa388bde4676762adc516001fb462ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64de6c0a5fa388bde4676762adc516001fb462ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/64de6c0a5fa388bde4676762adc516001fb462ef", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64de6c0a5fa388bde4676762adc516001fb462ef/comments", "author": null, "committer": null, "parents": [{"sha": "62526ec32fe9a6bfa311af82e4a97d08fdb6f2d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62526ec32fe9a6bfa311af82e4a97d08fdb6f2d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62526ec32fe9a6bfa311af82e4a97d08fdb6f2d8"}], "stats": {"total": 20, "additions": 12, "deletions": 8}, "files": [{"sha": "d124a7debb62f8c9a4fdccd487cdf095d012eabe", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64de6c0a5fa388bde4676762adc516001fb462ef/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64de6c0a5fa388bde4676762adc516001fb462ef/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=64de6c0a5fa388bde4676762adc516001fb462ef", "patch": "@@ -78,6 +78,9 @@ Tue May 28 21:16:18 2002  J\"orn Rennecke <joern.rennecke@superh.com>\n 2002-05-22  David Edelsohn  <edelsohn@gnu.org>\n \t    Jeff Law <law@redhat.com>\n \n+\t* optabs.c (expand_binop): Fix nwords sign warnings.\n+\tgenerate pseudo for add_optab.\n+\n \t* sched-deps.c (sched_analyze): Do not clear SCHED_GROUP_P.\n \t* haifa-sched.c (move_insn): Clear SCHED_GROUP_P after it is used.\n "}, {"sha": "da72ffddac9750eb382eca634c47803506c689ef", "filename": "gcc/optabs.c", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64de6c0a5fa388bde4676762adc516001fb462ef/gcc%2Foptabs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64de6c0a5fa388bde4676762adc516001fb462ef/gcc%2Foptabs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptabs.c?ref=64de6c0a5fa388bde4676762adc516001fb462ef", "patch": "@@ -1210,9 +1210,9 @@ expand_binop (mode, binoptab, op0, op1, target, unsignedp, methods)\n     {\n       int i;\n       optab otheroptab = binoptab == add_optab ? sub_optab : add_optab;\n-      unsigned int nwords = GET_MODE_BITSIZE (mode) / BITS_PER_WORD;\n+      int nwords = GET_MODE_BITSIZE (mode) / BITS_PER_WORD;\n       rtx carry_in = NULL_RTX, carry_out = NULL_RTX;\n-      rtx xop0, xop1;\n+      rtx xop0, xop1, xtarget;\n \n       /* We can handle either a 1 or -1 value for the carry.  If STORE_FLAG\n \t value is one of those, use it.  Otherwise, use 1 since it is the\n@@ -1227,19 +1227,20 @@ expand_binop (mode, binoptab, op0, op1, target, unsignedp, methods)\n       xop0 = force_reg (mode, op0);\n       xop1 = force_reg (mode, op1);\n \n-      if (target == 0 || GET_CODE (target) != REG\n-\t  || target == xop0 || target == xop1)\n-\ttarget = gen_reg_rtx (mode);\n+      xtarget = gen_reg_rtx (mode);\n+\n+      if (target == 0 || GET_CODE (target) != REG)\n+\ttarget = xtarget;\n \n       /* Indicate for flow that the entire target reg is being set.  */\n       if (GET_CODE (target) == REG)\n-\temit_insn (gen_rtx_CLOBBER (VOIDmode, target));\n+\temit_insn (gen_rtx_CLOBBER (VOIDmode, xtarget));\n \n       /* Do the actual arithmetic.  */\n       for (i = 0; i < nwords; i++)\n \t{\n \t  int index = (WORDS_BIG_ENDIAN ? nwords - i - 1 : i);\n-\t  rtx target_piece = operand_subword (target, index, 1, mode);\n+\t  rtx target_piece = operand_subword (xtarget, index, 1, mode);\n \t  rtx op0_piece = operand_subword_force (xop0, index, mode);\n \t  rtx op1_piece = operand_subword_force (xop1, index, mode);\n \t  rtx x;\n@@ -1299,7 +1300,7 @@ expand_binop (mode, binoptab, op0, op1, target, unsignedp, methods)\n \t{\n \t  if (mov_optab->handlers[(int) mode].insn_code != CODE_FOR_nothing)\n \t    {\n-\t      rtx temp = emit_move_insn (target, target);\n+\t      rtx temp = emit_move_insn (target, xtarget);\n \n \t      set_unique_reg_note (temp,\n \t      \t\t\t   REG_EQUAL,"}]}