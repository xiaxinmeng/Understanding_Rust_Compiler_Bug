{"sha": "6510f4c98e33e0aac8d5ccb40c680b077ce7aa1b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjUxMGY0Yzk4ZTMzZTBhYWM4ZDVjY2I0MGM2ODBiMDc3Y2U3YWExYg==", "commit": {"author": {"name": "Geert Bosch", "email": "bosch@gcc.gnu.org", "date": "2001-12-19T00:31:42Z"}, "committer": {"name": "Geert Bosch", "email": "bosch@gcc.gnu.org", "date": "2001-12-19T00:31:42Z"}, "message": "sem_res.adb (Resolve_Selected_Component): do not generate a discriminant check if the selected component is a component...\n\n\t* sem_res.adb (Resolve_Selected_Component): do not generate a\n\tdiscriminant check if the selected component is a component of\n\tthe argument of an initialization procedure.\n\n\t* trans.c (tree_transform, case of arithmetic operators): If result\n\ttype is private, the gnu_type is the base type of the full view,\n\tgiven that the full view itself may be a subtype.\n\n\t* sem_res.adb: Minor reformatting\n\n\t* trans.c (tree_transform, case N_Real_Literal): Add missing third\n\tparameter in call to Machine (unknown horrible effects from this\n\tomission).\n\n\t* urealp.h: Add definition of Round_Even for call to Machine\n\tAdd third parameter for Machine\n\n\t* sem_warn.adb (Check_One_Unit): Suppress warnings completely on\n\tpredefined units in No_Run_Time mode.\n\n\t* misc.c (insn-codes.h): Now include.\n\n\t* a-except.adb: Preparation work for future integration of the GCC 3\n\texception handling mechanism\n\t(Notify_Handled_Exception, Notify_Unhandled_Exception): New routines\n\tto factorize previous code sequences and make them externally callable,\n\te.g. for the Ada personality routine when the GCC 3 mechanism is used.\n\t(Propagate_Exception, Raise_Current_Excep, Raise_From_Signal_Handler):\n\tUse the new notification routines.\n\n\t* prj-tree.ads (First_Choice_Of): Document the when others case\n\n\t* bindgen.adb (Gen_Ada_Init_*): Set priority of environment task in\n\tHI-E mode, in order to support Ravenscar profile properly.\n\n\t* cstand.adb (Create_Standard): Duration is a 32 bit type in HI-E\n\tmode on 32 bits targets.\n\n\t* fmap.adb: Initial version.\n\n\t* fmap.ads: Initial version.\n\n\t* fname-uf.adb (Get_File_Name): Use mapping if unit name mapped.\n\tIf search is successfully done, add to mapping.\n\n\t* frontend.adb: Initialize the mapping if a -gnatem switch was used.\n\n\t* make.adb:\n\t(Gnatmake): Add new local variable Mapping_File_Name.\n\t Create mapping file when using project file(s).\n\t Delete mapping file before exiting.\n\n\t* opt.ads (Mapping_File_Name): New variable\n\n\t* osint.adb (Find_File): Use path name found in mapping, if any.\n\n\t* prj-env.adb (Create_Mapping_File): New procedure\n\n\t* prj-env.ads (Create_Mapping_File): New procedure.\n\n\t* switch.adb (Scan_Front_End_Switches): Add processing for -gnatem\n\t(Mapping_File)\n\n\t* usage.adb: Add entry for new switch -gnatem.\n\n\t* Makefile.in: Add dependencies for fmap.o.\n\n\t* sem_ch10.adb (Analyze_With_Clause): Retrieve proper entity when unit\n\tis a package instantiation rewritten as a package body.\n\t(Install_Withed_Unit): Undo previous change, now redundant.\n\n\t* layout.adb:\n\t(Compute_Length): Move conversion to Unsigned to callers.\n\t(Get_Max_Size): Convert Len expression to Unsigned after calls to\n\tCompute_Length and Determine_Range.\n\t(Layout_Array_Type): Convert Len expression to Unsigned after calls to\n\tCompute_Length and Determine_Range.\n\tAbove changes fix problem with length computation for supernull arrays\n\twhere Max (Len, 0) wasn't getting applied due to the Unsigned\n\tconversion used by Compute_Length.\n\n\t* rtsfind.ads:\n\t(OK_To_Use_In_No_Run_Time_Mode): Allow Ada.Exceptions and\n\t System.Secondary_Stack.\n\t(OK_To_Use_In_Ravenscar_Mode): New table needed to implement Ravenscar\n\t in HI-E mode.\n\tRemove unused entity RE_Exception_Data.\n\n\t* rtsfind.adb (RTE): Allow Ravenscar Profile in HI mode.\n\n\t* rident.ads (No_Secondary_Stack): New restriction.\n\nFrom-SVN: r48168", "tree": {"sha": "d40702acfcb4ff5d5279688dcc3cee29d5dd3741", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d40702acfcb4ff5d5279688dcc3cee29d5dd3741"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6510f4c98e33e0aac8d5ccb40c680b077ce7aa1b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6510f4c98e33e0aac8d5ccb40c680b077ce7aa1b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6510f4c98e33e0aac8d5ccb40c680b077ce7aa1b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6510f4c98e33e0aac8d5ccb40c680b077ce7aa1b/comments", "author": null, "committer": null, "parents": [{"sha": "c6d96f20fdf9caad7e3fe1939b78295241df0036", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6d96f20fdf9caad7e3fe1939b78295241df0036", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c6d96f20fdf9caad7e3fe1939b78295241df0036"}], "stats": {"total": 1153, "additions": 992, "deletions": 161}, "files": [{"sha": "abffb95904c3d7963ccc6f1a4e40218c58ca19d2", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 114, "deletions": 0, "changes": 114, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6510f4c98e33e0aac8d5ccb40c680b077ce7aa1b/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6510f4c98e33e0aac8d5ccb40c680b077ce7aa1b/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=6510f4c98e33e0aac8d5ccb40c680b077ce7aa1b", "patch": "@@ -1,3 +1,117 @@\n+2001-12-17  Ed Schonberg <schonber@gnat.com>\n+\n+\t* sem_res.adb (Resolve_Selected_Component): do not generate a \n+\tdiscriminant check if the selected component is a component of \n+\tthe argument of an initialization procedure.\n+\n+\t* trans.c (tree_transform, case of arithmetic operators): If result \n+\ttype is private, the gnu_type is the base type of the full view, \n+\tgiven that the full view itself may be a subtype.\n+\t\n+2001-12-17  Robert Dewar <dewar@gnat.com>\n+\n+\t* sem_res.adb: Minor reformatting\n+\t\n+\t* trans.c (tree_transform, case N_Real_Literal): Add missing third \n+\tparameter in call to Machine (unknown horrible effects from this \n+\tomission).\n+\t\n+\t* urealp.h: Add definition of Round_Even for call to Machine\n+\tAdd third parameter for Machine\n+\t\n+2001-12-17  Ed Schonberg <schonber@gnat.com>\n+\n+\t* sem_warn.adb (Check_One_Unit): Suppress warnings completely on \n+\tpredefined units in No_Run_Time mode.\n+\t\n+2001-12-17  Richard Kenner <kenner@gnat.com>\n+\n+\t* misc.c (insn-codes.h): Now include.\n+\t\n+2001-12-17  Olivier Hainque <hainque@gnat.com>\n+\n+\t* a-except.adb: Preparation work for future integration of the GCC 3 \n+\texception handling mechanism\n+\t(Notify_Handled_Exception, Notify_Unhandled_Exception): New routines\n+\tto factorize previous code sequences and make them externally callable,\n+\te.g. for the Ada personality routine when the GCC 3 mechanism is used.\n+\t(Propagate_Exception, Raise_Current_Excep, Raise_From_Signal_Handler):\n+\tUse the new notification routines.\n+\t\n+2001-12-17  Emmanuel Briot <briot@gnat.com>\n+\n+\t* prj-tree.ads (First_Choice_Of): Document the when others case\n+\t\n+2001-12-17  Arnaud Charlet <charlet@gnat.com>\n+\n+\t* bindgen.adb (Gen_Ada_Init_*): Set priority of environment task in \n+\tHI-E mode, in order to support Ravenscar profile properly.\n+\t\n+\t* cstand.adb (Create_Standard): Duration is a 32 bit type in HI-E \n+\tmode on 32 bits targets.\n+\t\n+2001-12-17  Vincent Celier <celier@gnat.com>\n+\n+\t* fmap.adb: Initial version.\n+\t\n+\t* fmap.ads: Initial version.\n+\t\n+\t* fname-uf.adb (Get_File_Name): Use mapping if unit name mapped.\n+\tIf search is successfully done, add to mapping.\n+\t\n+\t* frontend.adb: Initialize the mapping if a -gnatem switch was used.\n+\t\n+\t* make.adb:\n+\t(Gnatmake): Add new local variable Mapping_File_Name.\n+\t Create mapping file when using project file(s).\n+\t Delete mapping file before exiting.\n+\t\n+\t* opt.ads (Mapping_File_Name): New variable\n+\t\n+\t* osint.adb (Find_File): Use path name found in mapping, if any.\n+\t\n+\t* prj-env.adb (Create_Mapping_File): New procedure\n+\t\n+\t* prj-env.ads (Create_Mapping_File): New procedure.\n+\t\n+\t* switch.adb (Scan_Front_End_Switches): Add processing for -gnatem \n+\t(Mapping_File)\n+\t\n+\t* usage.adb: Add entry for new switch -gnatem.\n+\t\n+\t* Makefile.in: Add dependencies for fmap.o.\n+\t\n+2001-12-17  Ed Schonberg <schonber@gnat.com>\n+\n+\t* sem_ch10.adb (Analyze_With_Clause): Retrieve proper entity when unit \n+\tis a package instantiation rewritten as a package body.\n+\t(Install_Withed_Unit): Undo previous change, now redundant.\n+\t\n+2001-12-17  Gary Dismukes <dismukes@gnat.com>\n+\n+\t* layout.adb:\n+\t(Compute_Length): Move conversion to Unsigned to callers.\n+\t(Get_Max_Size): Convert Len expression to Unsigned after calls to\n+\tCompute_Length and Determine_Range.\n+\t(Layout_Array_Type): Convert Len expression to Unsigned after calls to\n+\tCompute_Length and Determine_Range.\n+\tAbove changes fix problem with length computation for supernull arrays\n+\twhere Max (Len, 0) wasn't getting applied due to the Unsigned \n+\tconversion used by Compute_Length.\n+\t\n+2001-12-17  Arnaud Charlet <charlet@gnat.com>\n+\n+\t* rtsfind.ads:\n+\t(OK_To_Use_In_No_Run_Time_Mode): Allow Ada.Exceptions and\n+\t System.Secondary_Stack.\n+\t(OK_To_Use_In_Ravenscar_Mode): New table needed to implement Ravenscar\n+\t in HI-E mode.\n+\tRemove unused entity RE_Exception_Data.\n+\t\n+\t* rtsfind.adb (RTE): Allow Ravenscar Profile in HI mode.\n+\t\n+\t* rident.ads (No_Secondary_Stack): New restriction.\n+\n 2001-12-17  Joel Brobecker <brobecke@gnat.com>\n \n \t* gnat_rm.texi: Fix minor typos. Found while reading the section "}, {"sha": "0bd940bc09888554bfde2e71730adff163a148fb", "filename": "gcc/ada/Makefile.in", "status": "modified", "additions": 17, "deletions": 13, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6510f4c98e33e0aac8d5ccb40c680b077ce7aa1b/gcc%2Fada%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6510f4c98e33e0aac8d5ccb40c680b077ce7aa1b/gcc%2Fada%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMakefile.in?ref=6510f4c98e33e0aac8d5ccb40c680b077ce7aa1b", "patch": "@@ -296,7 +296,7 @@ GNAT_ADA_OBJS = \\\n  exp_code.o exp_dbug.o exp_disp.o exp_dist.o exp_fixd.o exp_aggr.o exp_imgv.o \\\n  exp_intr.o exp_pakd.o exp_prag.o exp_smem.o \\\n  exp_strm.o exp_tss.o exp_util.o exp_vfpt.o expander.o fname.o fname-uf.o \\\n- freeze.o frontend.o gnat.o g-hesora.o g-htable.o g-os_lib.o \\\n+ fmap.o freeze.o frontend.o gnat.o g-hesora.o g-htable.o g-os_lib.o \\\n  g-speche.o s-crc32.o get_targ.o gnatvsn.o \\\n  hlo.o hostparm.o impunit.o \\\n  interfac.o itypes.o inline.o krunch.o lib.o \\\n@@ -326,7 +326,7 @@ GNATBIND_OBJS = \\\n  alloc.o bcheck.o binde.o \\\n  binderr.o bindgen.o bindusg.o \\\n  butil.o casing.o csets.o \\\n- debug.o fname.o gnat.o g-hesora.o g-htable.o \\\n+ debug.o fmap.o fname.o gnat.o g-hesora.o g-htable.o \\\n  g-os_lib.o gnatbind.o gnatvsn.o hostparm.o \\\n  krunch.o namet.o opt.o osint.o output.o rident.o s-crc32.o s-assert.o \\\n  s-parame.o s-sopco3.o s-sopco4.o s-sopco5.o s-stache.o s-stalib.o \\\n@@ -364,7 +364,7 @@ GNATCMD_RTL_OBJS = adaint.o argv.o raise.o exit.o final.o init.o \\\n    s-stache.o s-sopco3.o s-sopco4.o s-sopco5.o \\\n    s-strops.o s-soflin.o s-wchcon.o s-wchcnv.o s-wchjis.o s-unstyp.o \n \n-GNATCMD_OBJS = alloc.o debug.o fname.o gnatcmd.o gnatvsn.o hostparm.o \\\n+GNATCMD_OBJS = alloc.o debug.o fmap.o fname.o gnatcmd.o gnatvsn.o hostparm.o \\\n    krunch.o namet.o opt.o osint.o casing.o csets.o widechar.o \\\n    output.o sdefault.o switch.o stylesw.o validsw.o table.o tree_io.o types.o \\\n    $(GNATCMD_RTL_OBJS) $(EXTRA_GNATTOOLS_OBJS)\n@@ -394,7 +394,7 @@ GNATLINK_RTL_OBJS = \\\n    s-memory.o s-traceb.o s-wchcnv.o s-wchcon.o s-wchjis.o\n \n GNATLINK_OBJS = gnatlink.o link.o \\\n-   alloc.o debug.o gnatvsn.o hostparm.o namet.o \\\n+   alloc.o debug.o fmap.o gnatvsn.o hostparm.o namet.o \\\n    opt.o osint.o output.o sdefault.o stylesw.o validsw.o \\\n    switch.o table.o tree_io.o types.o widechar.o \\\n    $(GNATLINK_RTL_OBJS) $(EXTRA_GNATTOOLS_OBJS)\n@@ -483,6 +483,7 @@ GNATLS_OBJS = \\\n  einfo.o    \\\n  elists.o   \\\n  errout.o   \\\n+ fmap.o     \\\n  fname.o    \\\n  gnatls.o   \\\n  gnatvsn.o  \\\n@@ -553,7 +554,7 @@ GNATMAKE_RTL_OBJS = adaint.o argv.o raise.o exit.o a-comlin.o \\\n \n GNATMAKE_OBJS = ali.o ali-util.o \\\n  alloc.o atree.o binderr.o butil.o casing.o csets.o debug.o einfo.o elists.o \\\n- errout.o fname.o fname-uf.o fname-sf.o \\\n+ errout.o fmap.o fname.o fname-uf.o fname-sf.o \\\n  gnatmake.o gnatvsn.o hostparm.o krunch.o lib.o make.o makeusg.o \\\n  mlib.o mlib-fil.o mlib-prj.o mlib-tgt.o mlib-utl.o \\\n  namet.o nlists.o opt.o osint.o output.o \\\n@@ -706,7 +707,7 @@ GNATXREF_RTL_OBJS =  \\\n    s-valuti.o s-valuns.o s-valint.o s-wchcon.o s-wchjis.o s-wchcnv.o\n \n GNATXREF_OBJS = gnatxref.o xr_tabls.o xref_lib.o \\\n-   alloc.o debug.o gnatvsn.o hostparm.o types.o output.o \\\n+   alloc.o debug.o fmap.o gnatvsn.o hostparm.o types.o output.o \\\n    sdefault.o stylesw.o validsw.o tree_io.o opt.o table.o osint.o \\\n    switch.o widechar.o namet.o \\\n    $(GNATXREF_RTL_OBJS) $(EXTRA_GNATTOOLS_OBJS)\n@@ -729,7 +730,7 @@ GNATFIND_RTL_OBJS = \\\n    s-valuns.o s-valuti.o s-wchcnv.o s-wchcon.o s-wchjis.o\n \n GNATFIND_OBJS = gnatfind.o xr_tabls.o xref_lib.o \\\n-   alloc.o debug.o gnatvsn.o hostparm.o namet.o opt.o \\\n+   alloc.o debug.o fmap.o gnatvsn.o hostparm.o namet.o opt.o \\\n    osint.o output.o sdefault.o stylesw.o validsw.o switch.o table.o \\\n    tree_io.o types.o widechar.o \\\n    $(GNATFIND_RTL_OBJS) $(EXTRA_GNATTOOLS_OBJS)\n@@ -3129,6 +3130,9 @@ fname.o : ada.ads a-except.ads alloc.ads debug.ads fname.ads fname.adb \\\n    system.ads s-assert.ads s-exctab.ads s-stalib.ads s-wchcon.ads \\\n    table.ads table.adb tree_io.ads types.ads unchconv.ads unchdeal.ads \n \n+fmap.o : alloc.ads debug.ads fmap.ads fmap.adb hostparm.ads namet.ads opt.ads \\\n+   osint.ads output.ads table.ads table.adb tree_io.ads types.ads\n+\n fname-sf.o : alloc.ads casing.ads fname.ads fname-sf.ads fname-sf.adb \\\n    fname-uf.ads gnat.ads g-os_lib.ads namet.ads osint.ads sfn_scan.ads \\\n    system.ads s-exctab.ads s-stalib.ads s-stoele.ads table.ads types.ads \\\n@@ -3522,12 +3526,12 @@ opt.o : ada.ads a-except.ads gnat.ads g-os_lib.ads gnatvsn.ads \\\n    hostparm.ads opt.ads opt.adb system.ads s-exctab.ads s-stalib.ads \\\n    s-wchcon.ads tree_io.ads types.ads unchconv.ads unchdeal.ads \n \n-osint.o : ada.ads a-except.ads a-uncdea.ads alloc.ads debug.ads gnat.ads \\\n-   g-htable.ads g-htable.adb g-os_lib.ads hostparm.ads namet.ads opt.ads \\\n-   osint.ads osint.adb output.ads sdefault.ads system.ads s-assert.ads \\\n-   s-exctab.ads s-secsta.ads s-soflin.ads s-stache.ads s-stalib.ads \\\n-   s-stoele.ads s-wchcon.ads table.ads table.adb tree_io.ads types.ads \\\n-   unchconv.ads unchdeal.ads \n+osint.o : ada.ads a-except.ads a-uncdea.ads alloc.ads debug.ads fmap.ads \\\n+   gnat.ads g-htable.ads g-htable.adb g-os_lib.ads hostparm.ads namet.ads \\\n+   opt.ads osint.ads osint.adb output.ads sdefault.ads system.ads \\\n+   s-assert.ads s-exctab.ads s-secsta.ads s-soflin.ads s-stache.ads \\\n+   s-stalib.ads s-stoele.ads s-wchcon.ads table.ads table.adb tree_io.ads \\\n+   types.ads  unchconv.ads unchdeal.ads\n \n output.o : gnat.ads g-os_lib.ads output.ads output.adb system.ads \\\n    s-exctab.ads s-stalib.ads types.ads unchconv.ads unchdeal.ads "}, {"sha": "cc21e035e04c1313b60706635be23434fa756f08", "filename": "gcc/ada/a-except.adb", "status": "modified", "additions": 100, "deletions": 60, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6510f4c98e33e0aac8d5ccb40c680b077ce7aa1b/gcc%2Fada%2Fa-except.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6510f4c98e33e0aac8d5ccb40c680b077ce7aa1b/gcc%2Fada%2Fa-except.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-except.adb?ref=6510f4c98e33e0aac8d5ccb40c680b077ce7aa1b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                            $Revision: 1.1 $\n+--                            $Revision$\n --                                                                          --\n --          Copyright (C) 1992-2001 Free Software Foundation, Inc.          --\n --                                                                          --\n@@ -365,6 +365,34 @@ package body Ada.Exceptions is\n    --            Basic_Exc_Tback    Or    Tback_Decorator\n    --          if no decorator set           otherwise\n \n+   ----------------------------------------------\n+   -- Run-Time Exception Notification Routines --\n+   ----------------------------------------------\n+\n+   --  The notification routines described above are low level \"handles\" for\n+   --  the debugger but what needs to be done at the notification points\n+   --  always involves more than just calling one of these routines. The\n+   --  routines below provide a common run-time interface for this purpose,\n+   --  with variations depending on the handled/not handled status of the\n+   --  occurrence. They are exported to be usable by the Ada exception\n+   --  handling personality routine when the GCC 3 mechanism is used.\n+\n+   procedure Notify_Handled_Exception\n+     (Handler    : Code_Loc;\n+      Is_Others  : Boolean;\n+      Low_Notify : Boolean);\n+   pragma Export (C, Notify_Handled_Exception,\n+      \"__gnat_notify_handled_exception\");\n+   --  Routine to call when a handled occurrence is about to be propagated.\n+   --  Low_Notify might be set to false to skip the low level debugger\n+   --  notification, which is useful when the information it requires is\n+   --  not available, like in the SJLJ case.\n+\n+   procedure Notify_Unhandled_Exception (Id : Exception_Id);\n+   pragma Export (C, Notify_Unhandled_Exception,\n+     \"__gnat_notify_unhandled_exception\");\n+   --  Routine to call when an unhandled occurrence is about to be propagated.\n+\n    --------------------------------\n    -- Import Run-Time C Routines --\n    --------------------------------\n@@ -953,29 +981,10 @@ package body Ada.Exceptions is\n                  or else (Hrec.Id = Others_Id\n                             and not Excep.Id.Not_Handled_By_Others)\n                then\n-                  --  Notify the debugger that we have found a handler\n-                  --  and are about to propagate an exception.\n-\n-                  Notify_Exception\n-                    (Excep.Id, Hrec.Handler, Hrec.Id = Others_Id);\n-\n-                  --  Output some exception information if necessary, as\n-                  --  specified by GNAT.Exception_Traces. Take care not to\n-                  --  output information about internal exceptions.\n-                  --\n-                  --  ??? The traceback entries we have at this point only\n-                  --  consist in the ones we stored while walking up the\n-                  --  stack *up to the handler*. All the frames above the\n-                  --  subprogram in which the handler is found are missing.\n-\n-                  if Exception_Trace = Every_Raise\n-                    and then not Excep.Id.Not_Handled_By_Others\n-                  then\n-                     To_Stderr (Nline);\n-                     To_Stderr (\"Exception raised\");\n-                     To_Stderr (Nline);\n-                     To_Stderr (Tailored_Exception_Information (Excep.all));\n-                  end if;\n+                  --  Perform the necessary notification tasks.\n+\n+                  Notify_Handled_Exception\n+                    (Hrec.Handler, Hrec.Id = Others_Id, True);\n \n                   --  If we already encountered a finalization handler, then\n                   --  reset the context to that handler, and enter it.\n@@ -1002,15 +1011,10 @@ package body Ada.Exceptions is\n          Pop_Frame (Mstate, Info);\n       end loop Main_Loop;\n \n-      --  Fall through if no \"real\" exception handler found. First thing\n-      --  is to call the dummy Unhandled_Exception routine with the stack\n-      --  intact, so that the debugger can get control.\n-\n-      Unhandled_Exception;\n-\n-      --  Also make the appropriate Notify_Exception call for the debugger.\n+      --  Fall through if no \"real\" exception handler found. First thing is to\n+      --  perform the necessary notification tasks with the stack intact.\n \n-      Notify_Exception (Excep.Id, Null_Loc, False);\n+      Notify_Unhandled_Exception (Excep.Id);\n \n       --  If there were finalization handlers, then enter the top one.\n       --  Just because there is no handler does not mean we don't have\n@@ -1066,30 +1070,14 @@ package body Ada.Exceptions is\n             Call_Chain (Excep);\n          end if;\n \n-         if not Excep.Exception_Raised then\n-            --  This is not a reraise.\n+         --  Perform the necessary notification tasks if this is not a\n+         --  reraise. Actually ask to skip the low level debugger notification\n+         --  call since we do not have the necessary information to \"feed\"\n+         --  it properly.\n \n+         if not Excep.Exception_Raised then\n             Excep.Exception_Raised := True;\n-\n-            --  Output some exception information if necessary, as specified\n-            --  by GNAT.Exception_Traces. Take care not to output information\n-            --  about internal exceptions.\n-\n-            if Exception_Trace = Every_Raise\n-              and then not Excep.Id.Not_Handled_By_Others\n-            then\n-               begin\n-                  --  This is in a block because of the call to\n-                  --  Tailored_Exception_Information which might\n-                  --  require an exception handler for secondary\n-                  --  stack cleanup.\n-\n-                  To_Stderr (Nline);\n-                  To_Stderr (\"Exception raised\");\n-                  To_Stderr (Nline);\n-                  To_Stderr (Tailored_Exception_Information (Excep.all));\n-               end;\n-            end if;\n+            Notify_Handled_Exception (Null_Loc, False, False);\n          end if;\n \n          builtin_longjmp (Jumpbuf_Ptr, 1);\n@@ -1112,8 +1100,7 @@ package body Ada.Exceptions is\n             Call_Chain (Get_Current_Excep.all);\n          end if;\n \n-         Unhandled_Exception;\n-         Notify_Exception (E, Null_Loc, False);\n+         Notify_Unhandled_Exception (E);\n          Unhandled_Exception_Terminate;\n       end if;\n    end Raise_Current_Excep;\n@@ -1179,9 +1166,10 @@ package body Ada.Exceptions is\n       --  the signal handler that passed control here has already set the\n       --  machine state directly.\n       --\n-      --  ??? Updates related to the implementation of automatic backtraces\n-      --  have not been done here. Some action will be required when dealing\n-      --  the remaining problems in ZCX mode (incomplete backtraces so far).\n+      --  We also do not compute the backtrace for the occurrence since going\n+      --  through the signal handler is far from trivial and it is not a\n+      --  problem to fail providing a backtrace in the \"raised from signal\n+      --  handler\" case.\n \n       --  If the jump buffer pointer is non-null, it means that a jump\n       --  buffer was allocated (obviously that happens only in the case\n@@ -1204,7 +1192,7 @@ package body Ada.Exceptions is\n       --  have no finalizations to do other than at the outer level.\n \n       else\n-         Unhandled_Exception;\n+         Notify_Unhandled_Exception (E);\n          Unhandled_Exception_Terminate;\n       end if;\n    end Raise_From_Signal_Handler;\n@@ -1833,6 +1821,58 @@ package body Ada.Exceptions is\n       null;\n    end Notify_Exception;\n \n+   ------------------------------\n+   -- Notify_Handled_Exception --\n+   ------------------------------\n+\n+   procedure Notify_Handled_Exception\n+     (Handler    : Code_Loc;\n+      Is_Others  : Boolean;\n+      Low_Notify : Boolean)\n+   is\n+      Excep  : constant EOA := Get_Current_Excep.all;\n+\n+   begin\n+      --  Notify the debugger that we have found a handler and are about to\n+      --  propagate an exception, but only if specifically told to do so.\n+\n+      if Low_Notify then\n+         Notify_Exception (Excep.Id, Handler, Is_Others);\n+      end if;\n+\n+      --  Output some exception information if necessary, as specified by\n+      --  GNAT.Exception_Traces. Take care not to output information about\n+      --  internal exceptions.\n+      --\n+      --  ??? In the ZCX case, the traceback entries we have at this point\n+      --  only include the ones we stored while walking up the stack *up to\n+      --  the handler*. All the frames above the subprogram in which the\n+      --  handler is found are missing.\n+\n+      if Exception_Trace = Every_Raise\n+        and then not Excep.Id.Not_Handled_By_Others\n+      then\n+         To_Stderr (Nline);\n+         To_Stderr (\"Exception raised\");\n+         To_Stderr (Nline);\n+         To_Stderr (Tailored_Exception_Information (Excep.all));\n+      end if;\n+\n+   end Notify_Handled_Exception;\n+\n+   ------------------------------\n+   -- Notify_Handled_Exception --\n+   ------------------------------\n+\n+   procedure Notify_Unhandled_Exception (Id : Exception_Id) is\n+   begin\n+      --  Simply perform the two necessary low level notification calls.\n+\n+      Unhandled_Exception;\n+      Notify_Exception (Id, Null_Loc, False);\n+\n+   end Notify_Unhandled_Exception;\n+\n    -----------------------------------\n    -- Unhandled_Exception_Terminate --\n    -----------------------------------"}, {"sha": "b1f19af6e13ef3440ffc7901deda7cc9fdf2ff2a", "filename": "gcc/ada/bindgen.adb", "status": "modified", "additions": 42, "deletions": 19, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6510f4c98e33e0aac8d5ccb40c680b077ce7aa1b/gcc%2Fada%2Fbindgen.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6510f4c98e33e0aac8d5ccb40c680b077ce7aa1b/gcc%2Fada%2Fbindgen.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindgen.adb?ref=6510f4c98e33e0aac8d5ccb40c680b077ce7aa1b", "patch": "@@ -286,6 +286,7 @@ package body Bindgen is\n    ---------------------\n \n    procedure Gen_Adainit_Ada is\n+      Main_Priority : Int renames ALIs.Table (ALIs.First).Main_Priority;\n    begin\n       WBI (\"   procedure \" & Ada_Init_Name.all & \" is\");\n \n@@ -347,7 +348,32 @@ package body Bindgen is\n       --  the routine call, rather than define the globals in the binder\n       --  file to deal with cross-library calls in some systems.\n \n-      if not No_Run_Time_Specified then\n+      if No_Run_Time_Specified then\n+         --  Case of pragma No_Run_Time present. The only global variable\n+         --  that might be needed (by the Ravenscar profile) is\n+         --  the environment task's priority. Also no exception tables are\n+         --  needed.\n+\n+         if Main_Priority /= No_Main_Priority then\n+            WBI (\"      Main_Priority : Integer;\");\n+            WBI (\"      pragma Import (C, Main_Priority,\" &\n+                 \" \"\"__gl_main_priority\"\");\");\n+            WBI (\"\");\n+         end if;\n+\n+         WBI (\"   begin\");\n+\n+         if Main_Priority /= No_Main_Priority then\n+            Set_String (\"      Main_Priority := \");\n+            Set_Int    (Main_Priority);\n+            Set_Char   (';');\n+            Write_Statement_Buffer;\n+\n+         else\n+            WBI (\"      null;\");\n+         end if;\n+\n+      else\n          WBI (\"\");\n          WBI (\"      procedure Set_Globals\");\n          WBI (\"        (Main_Priority            : Integer;\");\n@@ -383,7 +409,7 @@ package body Bindgen is\n          WBI (\"      Set_Globals\");\n \n          Set_String (\"        (Main_Priority            => \");\n-         Set_Int    (ALIs.Table (ALIs.First).Main_Priority);\n+         Set_Int    (Main_Priority);\n          Set_Char   (',');\n          Write_Statement_Buffer;\n \n@@ -449,14 +475,6 @@ package body Bindgen is\n          WBI (\"      if Handler_Installed = 0 then\");\n          WBI (\"        Install_Handler;\");\n          WBI (\"      end if;\");\n-\n-      --  Case of pragma No_Run_Time present. Globals are not needed since\n-      --  there are no runtime routines to make use of them, and no routine\n-      --  to store them in any case! Also no exception tables are needed.\n-\n-      else\n-         WBI (\"   begin\");\n-         WBI (\"      null;\");\n       end if;\n \n       Gen_Elab_Calls_Ada;\n@@ -469,6 +487,7 @@ package body Bindgen is\n    --------------------\n \n    procedure Gen_Adainit_C is\n+      Main_Priority : Int renames ALIs.Table (ALIs.First).Main_Priority;\n    begin\n       WBI (\"void \" & Ada_Init_Name.all & \" ()\");\n       WBI (\"{\");\n@@ -493,9 +512,19 @@ package body Bindgen is\n \n       Write_Statement_Buffer;\n \n-      --  Code for normal case (no pragma No_Run_Time in use)\n+      if No_Run_Time_Specified then\n+         --  Case where No_Run_Time pragma is present.\n+         --  Set __gl_main_priority if needed for the Ravenscar profile.\n \n-      if not No_Run_Time_Specified then\n+         if Main_Priority /= No_Main_Priority then\n+            Set_String (\"   extern int __gl_main_priority = \");\n+            Set_Int    (Main_Priority);\n+            Set_Char   (';');\n+            Write_Statement_Buffer;\n+         end if;\n+\n+      else\n+         --  Code for normal case (no pragma No_Run_Time in use)\n \n          Gen_Exception_Table_C;\n \n@@ -510,7 +539,7 @@ package body Bindgen is\n          WBI (\"   __gnat_set_globals (\");\n \n          Set_String (\"      \");\n-         Set_Int (ALIs.Table (ALIs.First).Main_Priority);\n+         Set_Int (Main_Priority);\n          Set_Char (',');\n          Tab_To (15);\n          Set_String (\"/* Main_Priority              */\");\n@@ -584,12 +613,6 @@ package body Bindgen is\n          WBI (\"     {\");\n          WBI (\"        __gnat_install_handler ();\");\n          WBI (\"     }\");\n-\n-      --  Case where No_Run_Time pragma is present (no globals required)\n-      --  Nothing more needs to be done in this case.\n-\n-      else\n-         null;\n       end if;\n \n       WBI (\"\");"}, {"sha": "1527ce10cf82be3241282857bf2d2267cd01b9fe", "filename": "gcc/ada/cstand.adb", "status": "modified", "additions": 27, "deletions": 8, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6510f4c98e33e0aac8d5ccb40c680b077ce7aa1b/gcc%2Fada%2Fcstand.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6510f4c98e33e0aac8d5ccb40c680b077ce7aa1b/gcc%2Fada%2Fcstand.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcstand.adb?ref=6510f4c98e33e0aac8d5ccb40c680b077ce7aa1b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                            $Revision: 1.2 $\n+--                            $Revision$\n --                                                                          --\n --          Copyright (C) 1992-2001 Free Software Foundation, Inc.          --\n --                                                                          --\n@@ -1003,14 +1003,27 @@ package body CStand is\n \n       --  Create type declaration for Duration, using a 64-bit size.\n       --  Delta is 1 nanosecond.\n+      --  Except on 32 bits machine in No_Run_Time mode, in which case Duration\n+      --  is a 32 bits value whose delta is 10E-4 seconds.\n \n       Build_Duration : declare\n-         Dlo : constant Uint := Intval (Type_Low_Bound (Standard_Integer_64));\n-         Dhi : constant Uint := Intval (Type_High_Bound (Standard_Integer_64));\n-\n-         Delta_Val : constant Ureal := UR_From_Components (Uint_1, Uint_9, 10);\n+         Dlo         : Uint;\n+         Dhi         : Uint;\n+         Delta_Val   : Ureal;\n+         Use_32_Bits : constant Boolean :=\n+           No_Run_Time and then System_Word_Size = 32;\n \n       begin\n+         if Use_32_Bits then\n+            Dlo := Intval (Type_Low_Bound (Standard_Integer_32));\n+            Dhi := Intval (Type_High_Bound (Standard_Integer_32));\n+            Delta_Val := UR_From_Components (Uint_1, Uint_4, 10);\n+         else\n+            Dlo := Intval (Type_Low_Bound (Standard_Integer_64));\n+            Dhi := Intval (Type_High_Bound (Standard_Integer_64));\n+            Delta_Val := UR_From_Components (Uint_1, Uint_9, 10);\n+         end if;\n+\n          Decl :=\n            Make_Full_Type_Declaration (Stloc,\n              Defining_Identifier => Standard_Duration,\n@@ -1024,9 +1037,15 @@ package body CStand is\n                      High_Bound => Make_Real_Literal (Stloc,\n                        Realval => Dhi * Delta_Val))));\n \n-         Set_Ekind          (Standard_Duration, E_Ordinary_Fixed_Point_Type);\n-         Set_Etype          (Standard_Duration, Standard_Duration);\n-         Init_Size          (Standard_Duration, 64);\n+         Set_Ekind (Standard_Duration, E_Ordinary_Fixed_Point_Type);\n+         Set_Etype (Standard_Duration, Standard_Duration);\n+\n+         if Use_32_Bits then\n+            Init_Size (Standard_Duration, 32);\n+         else\n+            Init_Size (Standard_Duration, 64);\n+         end if;\n+\n          Set_Prim_Alignment (Standard_Duration);\n          Set_Delta_Value    (Standard_Duration, Delta_Val);\n          Set_Small_Value    (Standard_Duration, Delta_Val);"}, {"sha": "89b3fd810f7acbb4df5ead2bb336c8acbc25d964", "filename": "gcc/ada/fmap.adb", "status": "added", "additions": 332, "deletions": 0, "changes": 332, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6510f4c98e33e0aac8d5ccb40c680b077ce7aa1b/gcc%2Fada%2Ffmap.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6510f4c98e33e0aac8d5ccb40c680b077ce7aa1b/gcc%2Fada%2Ffmap.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffmap.adb?ref=6510f4c98e33e0aac8d5ccb40c680b077ce7aa1b", "patch": "@@ -0,0 +1,332 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                         GNAT COMPILER COMPONENTS                         --\n+--                                                                          --\n+--                                 F M A P                                  --\n+--                                                                          --\n+--                                 B o d y                                  --\n+--                                                                          --\n+--                            $Revision$\n+--                                                                          --\n+--          Copyright (C) 1992-2001, Free Software Foundation, Inc.         --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n+-- for  more details.  You should have  received  a copy of the GNU General --\n+-- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n+-- to  the Free Software Foundation,  59 Temple Place - Suite 330,  Boston, --\n+-- MA 02111-1307, USA.                                                      --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- It is now maintained by Ada Core Technologies Inc (http://www.gnat.com). --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+with GNAT.HTable;\n+with Namet;          use Namet;\n+with Osint;          use Osint;\n+with Output;         use Output;\n+with Table;\n+\n+with Unchecked_Conversion;\n+\n+package body Fmap is\n+\n+   subtype Big_String is String (Positive);\n+   type Big_String_Ptr is access all Big_String;\n+\n+   function To_Big_String_Ptr is new Unchecked_Conversion\n+     (Source_Buffer_Ptr, Big_String_Ptr);\n+\n+   package File_Mapping is new Table.Table (\n+     Table_Component_Type => File_Name_Type,\n+     Table_Index_Type     => Int,\n+     Table_Low_Bound      => 0,\n+     Table_Initial        => 1_000,\n+     Table_Increment      => 1_000,\n+     Table_Name           => \"Fmap.File_Mapping\");\n+   --  Mapping table to map unit names to file names.\n+\n+   package Path_Mapping is new Table.Table (\n+     Table_Component_Type => File_Name_Type,\n+     Table_Index_Type     => Int,\n+     Table_Low_Bound      => 0,\n+     Table_Initial        => 1_000,\n+     Table_Increment      => 1_000,\n+     Table_Name           => \"Fmap.Path_Mapping\");\n+   --  Mapping table to map file names to path names\n+\n+   type Header_Num is range 0 .. 1_000;\n+\n+   function Hash (F : Unit_Name_Type) return Header_Num;\n+\n+   No_Entry : constant Int := -1;\n+   --  Signals no entry in following table\n+\n+   package Unit_Hash_Table is new GNAT.HTable.Simple_HTable (\n+     Header_Num => Header_Num,\n+     Element    => Int,\n+     No_Element => No_Entry,\n+     Key        => Unit_Name_Type,\n+     Hash       => Hash,\n+     Equal      => \"=\");\n+   --  Hash table to map unit names to file names. Used in conjunction with\n+   --  table File_Mapping above.\n+\n+   package File_Hash_Table is new GNAT.HTable.Simple_HTable (\n+     Header_Num => Header_Num,\n+     Element    => Int,\n+     No_Element => No_Entry,\n+     Key        => File_Name_Type,\n+     Hash       => Hash,\n+     Equal      => \"=\");\n+   --  Hash table to map file names to path names. Used in conjunction with\n+   --  table Path_Mapping above.\n+\n+   ---------\n+   -- Add --\n+   ---------\n+\n+   procedure Add\n+     (Unit_Name : Unit_Name_Type;\n+      File_Name : File_Name_Type;\n+      Path_Name : File_Name_Type) is\n+   begin\n+      File_Mapping.Increment_Last;\n+      Unit_Hash_Table.Set (Unit_Name, File_Mapping.Last);\n+      File_Mapping.Table (File_Mapping.Last) := File_Name;\n+      Path_Mapping.Increment_Last;\n+      File_Hash_Table.Set (File_Name, Path_Mapping.Last);\n+      Path_Mapping.Table (Path_Mapping.Last) := Path_Name;\n+   end Add;\n+\n+   ------------------\n+   -- File_Name_Of --\n+   ------------------\n+\n+   function File_Name_Of (Unit : Unit_Name_Type) return File_Name_Type is\n+      The_Index : constant Int := Unit_Hash_Table.Get (Unit);\n+   begin\n+      if The_Index = No_Entry then\n+         return No_File;\n+\n+      else\n+         return File_Mapping.Table (The_Index);\n+      end if;\n+\n+   end File_Name_Of;\n+\n+   ----------\n+   -- Hash --\n+   ----------\n+\n+   function Hash (F : Unit_Name_Type) return Header_Num is\n+   begin\n+      return Header_Num (Int (F) rem Header_Num'Range_Length);\n+   end Hash;\n+\n+   ----------------\n+   -- Initialize --\n+   ----------------\n+\n+   procedure Initialize (File_Name : String) is\n+      Src : Source_Buffer_Ptr;\n+      Hi  : Source_Ptr;\n+      BS  : Big_String_Ptr;\n+      SP  : String_Ptr;\n+\n+      Deb : Positive := 1;\n+      Fin : Natural  := 0;\n+\n+      Uname : Unit_Name_Type;\n+      Fname : Name_Id;\n+      Pname : Name_Id;\n+\n+      procedure Empty_Tables;\n+      --  Remove all entries in case of incorrect mapping file\n+\n+      procedure Get_Line;\n+      --  Get a line from the mapping file\n+\n+      procedure Report_Truncated;\n+      --  Report a warning when the mapping file is truncated\n+      --  (number of lines is not a multiple of 3).\n+\n+      ------------------\n+      -- Empty_Tables --\n+      ------------------\n+\n+      procedure Empty_Tables is\n+      begin\n+         Unit_Hash_Table.Reset;\n+         File_Hash_Table.Reset;\n+         Path_Mapping.Set_Last (0);\n+         File_Mapping.Set_Last (0);\n+      end Empty_Tables;\n+\n+      --------------\n+      -- Get_Line --\n+      --------------\n+\n+      procedure Get_Line is\n+         use ASCII;\n+      begin\n+         Deb := Fin + 1;\n+\n+         --  If not at the end of file, skip the end of line\n+         while Deb < SP'Last\n+           and then (SP (Deb) = CR\n+                     or else SP (Deb) = LF\n+                     or else SP (Deb) = EOF)\n+         loop\n+            Deb := Deb + 1;\n+         end loop;\n+\n+         --  If not at the end of line, find the end of this new line\n+\n+         if Deb < SP'Last and then SP (Deb) /= EOF then\n+            Fin := Deb;\n+\n+            while Fin < SP'Last\n+              and then SP (Fin + 1) /= CR\n+              and then SP (Fin + 1) /= LF\n+              and then SP (Fin + 1) /= EOF\n+            loop\n+               Fin := Fin + 1;\n+            end loop;\n+\n+         end if;\n+      end Get_Line;\n+\n+      ----------------------\n+      -- Report_Truncated --\n+      ----------------------\n+\n+      procedure Report_Truncated is\n+      begin\n+         Write_Str (\"warning: mapping file \"\"\");\n+         Write_Str (File_Name);\n+         Write_Line (\"\"\" is truncated\");\n+      end Report_Truncated;\n+\n+   --  start of procedure Initialize\n+\n+   begin\n+      Name_Len := File_Name'Length;\n+      Name_Buffer (1 .. Name_Len) := File_Name;\n+      Read_Source_File (Name_Enter, 0, Hi, Src, Config);\n+\n+      if Src = null then\n+         Write_Str (\"warning: could not read mapping file \"\"\");\n+         Write_Str (File_Name);\n+         Write_Line (\"\"\"\");\n+\n+      else\n+         BS := To_Big_String_Ptr (Src);\n+         SP := BS (1 .. Natural (Hi))'Unrestricted_Access;\n+\n+         loop\n+\n+            --  Get the unit name\n+\n+            Get_Line;\n+\n+            --  Exit if end of file has been reached\n+\n+            exit when Deb > Fin;\n+\n+            pragma Assert (Fin >= Deb + 2);\n+            pragma Assert (SP (Fin - 1) = '%');\n+            pragma Assert (SP (Fin) = 's' or else SP (Fin) = 'b');\n+\n+            Name_Len := Fin - Deb + 1;\n+            Name_Buffer (1 .. Name_Len) := SP (Deb .. Fin);\n+            Uname := Name_Find;\n+\n+            --  Get the file name\n+\n+            Get_Line;\n+\n+            --  If end of line has been reached, file is truncated\n+\n+            if Deb > Fin then\n+               Report_Truncated;\n+               Empty_Tables;\n+               return;\n+            end if;\n+\n+            Name_Len := Fin - Deb + 1;\n+            Name_Buffer (1 .. Name_Len) := SP (Deb .. Fin);\n+            Fname := Name_Find;\n+\n+            --  Get the path name\n+\n+            Get_Line;\n+\n+            --  If end of line has been reached, file is truncated\n+\n+            if Deb > Fin then\n+               Report_Truncated;\n+               Empty_Tables;\n+               return;\n+            end if;\n+\n+            Name_Len := Fin - Deb + 1;\n+            Name_Buffer (1 .. Name_Len) := SP (Deb .. Fin);\n+            Pname := Name_Find;\n+\n+            --  Check for duplicate entries\n+\n+            if Unit_Hash_Table.Get (Uname) /= No_Entry then\n+               Write_Str (\"warning: duplicate entry \"\"\");\n+               Write_Str (Get_Name_String (Uname));\n+               Write_Str (\"\"\" in mapping file \"\"\");\n+               Write_Str (File_Name);\n+               Write_Line (\"\"\"\");\n+               Empty_Tables;\n+               return;\n+            end if;\n+\n+            if File_Hash_Table.Get (Fname) /= No_Entry then\n+               Write_Str (\"warning: duplicate entry \"\"\");\n+               Write_Str (Get_Name_String (Fname));\n+               Write_Str (\"\"\" in mapping file \"\"\");\n+               Write_Str (File_Name);\n+               Write_Line (\"\"\"\");\n+               Empty_Tables;\n+               return;\n+            end if;\n+\n+            --  Add the mappings for this unit name\n+\n+            Add (Uname, Fname, Pname);\n+\n+         end loop;\n+\n+      end if;\n+\n+   end Initialize;\n+\n+   ------------------\n+   -- Path_Name_Of --\n+   ------------------\n+\n+   function Path_Name_Of (File : File_Name_Type) return File_Name_Type is\n+      Index : Int := No_Entry;\n+   begin\n+      Index := File_Hash_Table.Get (File);\n+\n+      if Index = No_Entry then\n+         return No_File;\n+\n+      else\n+         return Path_Mapping.Table (Index);\n+      end if;\n+\n+   end Path_Name_Of;\n+\n+end Fmap;"}, {"sha": "ac9c0e5103bdb4beedefb481c09cf2e25c2726ef", "filename": "gcc/ada/fmap.ads", "status": "added", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6510f4c98e33e0aac8d5ccb40c680b077ce7aa1b/gcc%2Fada%2Ffmap.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6510f4c98e33e0aac8d5ccb40c680b077ce7aa1b/gcc%2Fada%2Ffmap.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffmap.ads?ref=6510f4c98e33e0aac8d5ccb40c680b077ce7aa1b", "patch": "@@ -0,0 +1,55 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                         GNAT COMPILER COMPONENTS                         --\n+--                                                                          --\n+--                                 F M A P                                  --\n+--                                                                          --\n+--                                 S p e c                                  --\n+--                                                                          --\n+--                            $Revision$\n+--                                                                          --\n+--          Copyright (C) 1992-2001, Free Software Foundation, Inc.         --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n+-- for  more details.  You should have  received  a copy of the GNU General --\n+-- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n+-- to  the Free Software Foundation,  59 Temple Place - Suite 330,  Boston, --\n+-- MA 02111-1307, USA.                                                      --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- It is now maintained by Ada Core Technologies Inc (http://www.gnat.com). --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+--  This package keeps two mappings: from unit names to file names,\n+--  and from file names to path names.\n+\n+with Types; use Types;\n+\n+package Fmap is\n+\n+   procedure Initialize (File_Name : String);\n+   --  Initialize the mappings from the mapping file File_Name.\n+   --  If the mapping file is incorrect (non existent file, truncated file,\n+   --  duplicate entries), output a warning and do not initialize the mappings.\n+\n+   function Path_Name_Of (File : File_Name_Type) return File_Name_Type;\n+   --  Return the path name mapped to the file name File.\n+   --  Return No_File if File is not mapped.\n+\n+   function File_Name_Of (Unit : Unit_Name_Type) return File_Name_Type;\n+   --  Return the file name mapped to the unit name Unit.\n+   --  Return No_File if Unit is not mapped.\n+\n+   procedure Add\n+     (Unit_Name : Unit_Name_Type;\n+      File_Name : File_Name_Type;\n+      Path_Name : File_Name_Type);\n+   --  Add mapping of Unit_Name to File_Name and of File_Name to Path_Name\n+\n+end Fmap;"}, {"sha": "3572d1a6f7a13df2cccdc6db37fa9fdcebe5cded", "filename": "gcc/ada/fname-uf.adb", "status": "modified", "additions": 35, "deletions": 7, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6510f4c98e33e0aac8d5ccb40c680b077ce7aa1b/gcc%2Fada%2Ffname-uf.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6510f4c98e33e0aac8d5ccb40c680b077ce7aa1b/gcc%2Fada%2Ffname-uf.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffname-uf.adb?ref=6510f4c98e33e0aac8d5ccb40c680b077ce7aa1b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                            $Revision: 1.1 $\n+--                            $Revision$\n --                                                                          --\n --          Copyright (C) 1992-2001, Free Software Foundation, Inc.         --\n --                                                                          --\n@@ -28,6 +28,7 @@\n \n with Alloc;\n with Debug;    use Debug;\n+with Fmap;\n with Krunch;\n with Namet;    use Namet;\n with Opt;      use Opt;\n@@ -137,6 +138,9 @@ package body Fname.UF is\n \n       N : Int;\n \n+      Pname : File_Name_Type := No_File;\n+      Fname : File_Name_Type := No_File;\n+\n    begin\n       --  Null or error name means that some previous error occurred\n       --  This is an unrecoverable error, so signal it.\n@@ -145,6 +149,19 @@ package body Fname.UF is\n          raise Unrecoverable_Error;\n       end if;\n \n+      --  Look into the mapping from unit names to file names\n+\n+      Fname := Fmap.File_Name_Of (Uname);\n+\n+      --  If the unit name is already mapped, return the corresponding\n+      --  file name.\n+\n+      if Fname /= No_File then\n+         return Fname;\n+      end if;\n+\n+      --  If there is a specific SFN pragma, return the corresponding file name\n+\n       N := SFN_HTable.Get (Uname);\n \n       if N /= No_Entry then\n@@ -367,14 +384,25 @@ package body Fname.UF is\n \n                   --  Check if file exists and if so, return the entry\n \n-                  elsif Find_File (Fnam, Source) /= No_File then\n-                     return Fnam;\n+                  else\n+                     Pname := Find_File (Fnam, Source);\n+\n+                  --  Check if file exists and if so, return the entry\n \n-                  --  This entry does not match after all, because this is\n-                  --  the first search loop, and the file does not exist.\n+                     if Pname /= No_File then\n \n-                  else\n-                     Fnam := No_File;\n+                        --  Add to mapping, so that we don't do another\n+                        --  path search in Find_File for this file name\n+\n+                        Fmap.Add (Get_File_Name.Uname, Fnam, Pname);\n+                        return Fnam;\n+\n+                     --  This entry does not match after all, because this is\n+                     --  the first search loop, and the file does not exist.\n+\n+                     else\n+                        Fnam := No_File;\n+                     end if;\n                   end if;\n                end if;\n "}, {"sha": "a42626a07ab4eb78e9a2ce35158cdb998ba0bc06", "filename": "gcc/ada/frontend.adb", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6510f4c98e33e0aac8d5ccb40c680b077ce7aa1b/gcc%2Fada%2Ffrontend.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6510f4c98e33e0aac8d5ccb40c680b077ce7aa1b/gcc%2Fada%2Ffrontend.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffrontend.adb?ref=6510f4c98e33e0aac8d5ccb40c680b077ce7aa1b", "patch": "@@ -33,6 +33,7 @@ with Debug;    use Debug;\n with Elists;\n with Exp_Ch11;\n with Exp_Dbug;\n+with Fmap;\n with Fname.UF;\n with Hostparm; use Hostparm;\n with Inline;   use Inline;\n@@ -184,6 +185,13 @@ begin\n \n    end if;\n \n+   --  If there was a -gnatem switch, initialize the mappings of unit names to\n+   --  file names and of file names to path names from the mapping file.\n+\n+   if Mapping_File_Name /= null then\n+      Fmap.Initialize (Mapping_File_Name.all);\n+   end if;\n+\n    --  We have now processed the command line switches, and the gnat.adc\n    --  file, so this is the point at which we want to capture the values\n    --  of the configuration switches (see Opt for further details)."}, {"sha": "2cf97cb2fb8de82c13bb167b2deec578449456d2", "filename": "gcc/ada/layout.adb", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6510f4c98e33e0aac8d5ccb40c680b077ce7aa1b/gcc%2Fada%2Flayout.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6510f4c98e33e0aac8d5ccb40c680b077ce7aa1b/gcc%2Fada%2Flayout.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flayout.adb?ref=6510f4c98e33e0aac8d5ccb40c680b077ce7aa1b", "patch": "@@ -524,13 +524,12 @@ package body Layout is\n       end if;\n \n       return\n-        Convert_To (Standard_Unsigned,\n-          Assoc_Add (Loc,\n-            Left_Opnd =>\n-              Assoc_Subtract (Loc,\n-                Left_Opnd  => Hi_Op,\n-                Right_Opnd => Lo_Op),\n-            Right_Opnd => Make_Integer_Literal (Loc, 1)));\n+        Assoc_Add (Loc,\n+          Left_Opnd =>\n+            Assoc_Subtract (Loc,\n+              Left_Opnd  => Hi_Op,\n+              Right_Opnd => Lo_Op),\n+          Right_Opnd => Make_Integer_Literal (Loc, 1));\n    end Compute_Length;\n \n    ----------------------\n@@ -749,6 +748,8 @@ package body Layout is\n                Set_Parent (Len, E);\n                Determine_Range (Len, OK, LLo, LHi);\n \n+               Len := Convert_To (Standard_Unsigned, Len);\n+\n                --  If we cannot verify that range cannot be super-flat,\n                --  we need a max with zero, since length must be non-neg.\n \n@@ -1059,6 +1060,8 @@ package body Layout is\n                Set_Parent (Len, E);\n                Determine_Range (Len, OK, LLo, LHi);\n \n+               Len := Convert_To (Standard_Unsigned, Len);\n+\n                --  If range definitely flat or superflat, result size is zero\n \n                if OK and then LHi <= 0 then"}, {"sha": "7e0fd58cfb5058d55ba4d4b1e30e440cf63a74d0", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 31, "deletions": 4, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6510f4c98e33e0aac8d5ccb40c680b077ce7aa1b/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6510f4c98e33e0aac8d5ccb40c680b077ce7aa1b/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=6510f4c98e33e0aac8d5ccb40c680b077ce7aa1b", "patch": "@@ -2508,6 +2508,10 @@ package body Make is\n       --  be rebuild (if we rebuild mains), even in the case when it is not\n       --  really necessary, because it is too hard to decide.\n \n+      Mapping_File_Name : Temp_File_Name;\n+      --  The name of the temporary mapping file that is copmmunicated\n+      --  to the compiler through a -gnatem switch, when using project files.\n+\n    begin\n       Do_Compile_Step := True;\n       Do_Bind_Step    := True;\n@@ -2854,7 +2858,7 @@ package body Make is\n          --  in procedure Compile_Sources.\n \n          The_Saved_Gcc_Switches :=\n-           new Argument_List (1 .. Saved_Gcc_Switches.Last + 1);\n+           new Argument_List (1 .. Saved_Gcc_Switches.Last + 2);\n \n          for J in 1 .. Saved_Gcc_Switches.Last loop\n             The_Saved_Gcc_Switches (J) := Saved_Gcc_Switches.Table (J);\n@@ -2863,9 +2867,19 @@ package body Make is\n \n          --  We never use gnat.adc when a project file is used\n \n-         The_Saved_Gcc_Switches (The_Saved_Gcc_Switches'Last) :=\n+         The_Saved_Gcc_Switches (The_Saved_Gcc_Switches'Last - 1) :=\n            No_gnat_adc;\n \n+         --  Create a temporary mapping file and add the switch -gnatem\n+         --  with its name to the compiler.\n+\n+         Prj.Env.Create_Mapping_File (Name => Mapping_File_Name);\n+         The_Saved_Gcc_Switches (The_Saved_Gcc_Switches'Last) :=\n+           new String'(\"-gnatem\" & Mapping_File_Name);\n+\n+         --  Check if there are any relative search paths in the switches.\n+         --  Fail if there is one.\n+\n          for J in 1 .. Gcc_Switches.Last loop\n             Test_If_Relative_Path (Gcc_Switches.Table (J));\n          end loop;\n@@ -3184,7 +3198,7 @@ package body Make is\n                  and then not No_Main_Subprogram\n                then\n                   if Osint.Number_Of_Files = 1 then\n-                     return;\n+                     exit Multiple_Main_Loop;\n \n                   else\n                      goto Next_Main;\n@@ -3231,7 +3245,7 @@ package body Make is\n                      end if;\n \n                      if Osint.Number_Of_Files = 1 then\n-                        return;\n+                        exit Multiple_Main_Loop;\n \n                      else\n                         goto Next_Main;\n@@ -3477,6 +3491,19 @@ package body Make is\n          end if;\n       end loop Multiple_Main_Loop;\n \n+      --  Delete the temporary mapping file that was created if we are\n+      --  using project files.\n+\n+      if Main_Project /= No_Project then\n+         declare\n+            Success : Boolean;\n+\n+         begin\n+            Delete_File (Name => Mapping_File_Name, Success => Success);\n+         end;\n+\n+      end if;\n+\n       Exit_Program (E_Success);\n \n    exception"}, {"sha": "d422f60f9b265282bade4046b232742a007b7d6d", "filename": "gcc/ada/misc.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6510f4c98e33e0aac8d5ccb40c680b077ce7aa1b/gcc%2Fada%2Fmisc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6510f4c98e33e0aac8d5ccb40c680b077ce7aa1b/gcc%2Fada%2Fmisc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmisc.c?ref=6510f4c98e33e0aac8d5ccb40c680b077ce7aa1b", "patch": "@@ -45,6 +45,7 @@\n #include \"expr.h\"\n #include \"ggc.h\"\n #include \"flags.h\"\n+#include \"insn-codes.h\"\n #include \"insn-flags.h\"\n #include \"insn-config.h\"\n #include \"optabs.h\""}, {"sha": "5dcc8c7de4850a55f1ae91a67d68eb9b587c5c6a", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6510f4c98e33e0aac8d5ccb40c680b077ce7aa1b/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6510f4c98e33e0aac8d5ccb40c680b077ce7aa1b/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=6510f4c98e33e0aac8d5ccb40c680b077ce7aa1b", "patch": "@@ -470,6 +470,11 @@ package Opt is\n    --  When True we are allowed to look in the primary directory to locate\n    --  other source or library files.\n \n+   Mapping_File_Name : String_Ptr := null;\n+   --  GNAT\n+   --  File name of mapping between unit names, file names and path names.\n+   --  (given by switch -gnatem)\n+\n    Maximum_Errors : Int := 9999;\n    --  GNAT, GNATBIND\n    --  Maximum number of errors before compilation is terminated"}, {"sha": "1856f16d6c9d1385d3932ea58cd81fb1a266379e", "filename": "gcc/ada/osint.adb", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6510f4c98e33e0aac8d5ccb40c680b077ce7aa1b/gcc%2Fada%2Fosint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6510f4c98e33e0aac8d5ccb40c680b077ce7aa1b/gcc%2Fada%2Fosint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fosint.adb?ref=6510f4c98e33e0aac8d5ccb40c680b077ce7aa1b", "patch": "@@ -26,6 +26,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n+with Fmap;\n with Hostparm;\n with Namet;    use Namet;\n with Opt;      use Opt;\n@@ -1001,6 +1002,18 @@ package body Osint is\n          --  Otherwise do standard search for source file\n \n          else\n+\n+            --  Check the mapping of this file name\n+\n+            File := Fmap.Path_Name_Of (N);\n+\n+            --  If the file name is mapped to a path name, return the\n+            --  corresponding path name\n+\n+            if File /= No_File then\n+               return File;\n+            end if;\n+\n             --  First place to look is in the primary directory (i.e. the same\n             --  directory as the source) unless this has been disabled with -I-\n "}, {"sha": "e52165d167a09980a468c0ba71739767bbbc0a9b", "filename": "gcc/ada/prj-env.adb", "status": "modified", "additions": 89, "deletions": 0, "changes": 89, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6510f4c98e33e0aac8d5ccb40c680b077ce7aa1b/gcc%2Fada%2Fprj-env.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6510f4c98e33e0aac8d5ccb40c680b077ce7aa1b/gcc%2Fada%2Fprj-env.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-env.adb?ref=6510f4c98e33e0aac8d5ccb40c680b077ce7aa1b", "patch": "@@ -788,6 +788,95 @@ package body Prj.Env is\n \n    end Create_Config_Pragmas_File;\n \n+   -------------------------\n+   -- Create_Mapping_File --\n+   -------------------------\n+\n+   procedure Create_Mapping_File (Name : in out Temp_File_Name) is\n+      File          : File_Descriptor := Invalid_FD;\n+      The_Unit_Data : Unit_Data;\n+      Data          : File_Name_Data;\n+\n+      procedure Put (S : String);\n+      --  Put a line in the mapping file\n+\n+      procedure Put_Data (Spec : Boolean);\n+      --  Put the mapping of the spec or body contained in Data in the file\n+      --  (3 lines).\n+\n+      procedure Put (S : String) is\n+         Last : Natural;\n+\n+      begin\n+         Last := Write (File, S'Address, S'Length);\n+\n+         if Last /= S'Length then\n+            Osint.Fail (\"Disk full\");\n+         end if;\n+\n+      end Put;\n+\n+      procedure Put_Data (Spec : Boolean) is\n+      begin\n+         Put (Get_Name_String (The_Unit_Data.Name));\n+\n+         if Spec then\n+            Put (\"%s\");\n+         else\n+            Put (\"%b\");\n+         end if;\n+\n+         Put (S => (1 => ASCII.LF));\n+         Put (Get_Name_String (Data.Name));\n+         Put (S => (1 => ASCII.LF));\n+         Put (Get_Name_String (Data.Path));\n+         Put (S => (1 => ASCII.LF));\n+      end Put_Data;\n+\n+   begin\n+      GNAT.OS_Lib.Create_Temp_File (File, Name => Name);\n+\n+      if File = Invalid_FD then\n+         Osint.Fail\n+           (\"unable to create temporary mapping file\");\n+\n+      elsif Opt.Verbose_Mode then\n+         Write_Str (\"Creating temp mapping file \"\"\");\n+         Write_Str (Name);\n+         Write_Line (\"\"\"\");\n+      end if;\n+\n+      --  For all units in table Units\n+\n+      for Unit in 1 .. Units.Last loop\n+         The_Unit_Data := Units.Table (Unit);\n+\n+         --  If the unit has a valid name\n+\n+         if The_Unit_Data.Name /= No_Name then\n+            Data := The_Unit_Data.File_Names (Specification);\n+\n+            --  If there is a spec, put it mapping in the file\n+\n+            if Data.Name /= No_Name then\n+               Put_Data (Spec => True);\n+            end if;\n+\n+            Data := The_Unit_Data.File_Names (Body_Part);\n+\n+            --  If there is a body (or subunit) put its mapping in the file\n+\n+            if Data.Name /= No_Name then\n+               Put_Data (Spec => False);\n+            end if;\n+\n+         end if;\n+      end loop;\n+\n+      GNAT.OS_Lib.Close (File);\n+\n+   end Create_Mapping_File;\n+\n    ------------------------------------\n    -- File_Name_Of_Library_Unit_Body --\n    ------------------------------------"}, {"sha": "f418dc34cec3a846c1873c23611bc180701add5b", "filename": "gcc/ada/prj-env.ads", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6510f4c98e33e0aac8d5ccb40c680b077ce7aa1b/gcc%2Fada%2Fprj-env.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6510f4c98e33e0aac8d5ccb40c680b077ce7aa1b/gcc%2Fada%2Fprj-env.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-env.ads?ref=6510f4c98e33e0aac8d5ccb40c680b077ce7aa1b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                            $Revision: 1.10 $\n+--                            $Revision$\n --                                                                          --\n --             Copyright (C) 2001 Free Software Foundation, Inc.            --\n --                                                                          --\n@@ -39,6 +39,11 @@ package Prj.Env is\n    procedure Print_Sources;\n    --  Output the list of sources, after Project files have been scanned\n \n+   procedure Create_Mapping_File (Name : in out Temp_File_Name);\n+   --  Create a temporary mapping file.\n+   --  For each unit, put the mapping of its spec and or body to its\n+   --  file name and path name in this file.\n+\n    procedure Create_Config_Pragmas_File\n      (For_Project  : Project_Id;\n       Main_Project : Project_Id);"}, {"sha": "c5526b8527e05177aff04b11d8e6733c4d1587b2", "filename": "gcc/ada/prj-tree.ads", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6510f4c98e33e0aac8d5ccb40c680b077ce7aa1b/gcc%2Fada%2Fprj-tree.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6510f4c98e33e0aac8d5ccb40c680b077ce7aa1b/gcc%2Fada%2Fprj-tree.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-tree.ads?ref=6510f4c98e33e0aac8d5ccb40c680b077ce7aa1b", "patch": "@@ -299,7 +299,8 @@ package Prj.Tree is\n    function First_Choice_Of\n      (Node  : Project_Node_Id)\n       return  Project_Node_Id;\n-   --  Only valid for N_Case_Item nodes\n+   --  Return the first choice in a N_Case_Item, or Empty_Node if\n+   --  this is when others.\n \n    function Next_Case_Item\n      (Node  : Project_Node_Id)\n@@ -708,7 +709,8 @@ package Prj.Tree is\n       --    --  Name:      not used\n       --    --  Path_Name: not used\n       --    --  Expr_Kind: not used\n-      --    --  Field1:    first choice (literal string)\n+      --    --  Field1:    first choice (literal string), or Empty_Node\n+      --    --             for when others\n       --    --  Field2:    first declarative item\n       --    --  Field3:    next case item\n       --    --  Value:     not used"}, {"sha": "2a9f875a59eb0009519dae0b58720291744143e6", "filename": "gcc/ada/rident.ads", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6510f4c98e33e0aac8d5ccb40c680b077ce7aa1b/gcc%2Fada%2Frident.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6510f4c98e33e0aac8d5ccb40c680b077ce7aa1b/gcc%2Fada%2Frident.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frident.ads?ref=6510f4c98e33e0aac8d5ccb40c680b077ce7aa1b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                            $Revision: 1.12 $\n+--                            $Revision$\n --                                                                          --\n --          Copyright (C) 1992-2001 Free Software Foundation, Inc.          --\n --                                                                          --\n@@ -73,6 +73,7 @@ package Rident is\n       No_Reentrancy,                           -- (RM H.4(23))\n       No_Relative_Delay,                       -- GNAT\n       No_Requeue,                              -- GNAT\n+      No_Secondary_Stack,                      -- GNAT\n       No_Select_Statements,                    -- GNAT (Ravenscar)\n       No_Standard_Storage_Pools,               -- GNAT\n       No_Streams,                              -- GNAT"}, {"sha": "2723e4f79c6da9ee5a25d3cc92290db6d82c0a3a", "filename": "gcc/ada/rtsfind.adb", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6510f4c98e33e0aac8d5ccb40c680b077ce7aa1b/gcc%2Fada%2Frtsfind.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6510f4c98e33e0aac8d5ccb40c680b077ce7aa1b/gcc%2Fada%2Frtsfind.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frtsfind.adb?ref=6510f4c98e33e0aac8d5ccb40c680b077ce7aa1b", "patch": "@@ -582,6 +582,8 @@ package body Rtsfind is\n       Pkg_Ent  : Entity_Id;\n       Ename    : Name_Id;\n \n+      Ravenscar : constant Boolean := Restricted_Profile;\n+\n       procedure Check_RPC;\n       --  Reject programs that make use of distribution features not supported\n       --  on the current target. On such targets (VMS, Vxworks, others?) we\n@@ -712,13 +714,17 @@ package body Rtsfind is\n    --  Start of processing for RTE\n \n    begin\n-      --  Check violation of no run time mode\n+      --  Check violation of no run time and ravenscar mode\n \n       if No_Run_Time\n         and then not OK_To_Use_In_No_Run_Time_Mode (U_Id)\n       then\n-         Disallow_In_No_Run_Time_Mode (Current_Error_Node);\n-         return Empty;\n+         if not Ravenscar\n+           or else not OK_To_Use_In_Ravenscar_Mode (U_Id)\n+         then\n+            Disallow_In_No_Run_Time_Mode (Current_Error_Node);\n+            return Empty;\n+         end if;\n       end if;\n \n       --  Doing a rtsfind in system.ads is special, as we cannot do this\n@@ -843,6 +849,7 @@ package body Rtsfind is\n         and then not\n           Is_Predefined_File_Name\n             (Unit_File_Name (Get_Source_Unit (Current_Error_Node)))\n+        and then not Ravenscar\n       then\n          Disallow_In_No_Run_Time_Mode (Current_Error_Node);\n       end if;"}, {"sha": "fe6c31b0dc2261ebc0824d1f39569fb320a29559", "filename": "gcc/ada/rtsfind.ads", "status": "modified", "additions": 17, "deletions": 2, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6510f4c98e33e0aac8d5ccb40c680b077ce7aa1b/gcc%2Fada%2Frtsfind.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6510f4c98e33e0aac8d5ccb40c680b077ce7aa1b/gcc%2Fada%2Frtsfind.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frtsfind.ads?ref=6510f4c98e33e0aac8d5ccb40c680b077ce7aa1b", "patch": "@@ -378,6 +378,7 @@ package Rtsfind is\n \n    OK_To_Use_In_No_Run_Time_Mode : array (RTU_Id) of Boolean :=\n      (Ada_Tags                => True,\n+      Ada_Exceptions          => True,\n       Interfaces              => True,\n       System                  => True,\n       System_Fat_Flt          => True,\n@@ -387,12 +388,28 @@ package Rtsfind is\n       System_Machine_Code     => True,\n       System_Storage_Elements => True,\n       System_Unsigned_Types   => True,\n+      System_Secondary_Stack  => True,\n       others                  => False);\n    --  This array defines the set of packages that can legitimately be\n    --  accessed by Rtsfind in No_Run_Time mode. Any attempt to load\n    --  any other package in this mode will result in a message noting\n    --  use of a feature not supported in high integrity mode.\n \n+   OK_To_Use_In_Ravenscar_Mode : array (RTU_Id) of Boolean :=\n+     (System_Interrupts                             => True,\n+      System_Tasking                                => True,\n+      System_Tasking_Protected_Objects              => True,\n+      System_Tasking_Restricted_Stages              => True,\n+      System_Tasking_Protected_Objects_Single_Entry => True,\n+      System_Task_Info                              => True,\n+      System_Parameters                             => True,\n+      Ada_Real_Time                                 => True,\n+      Ada_Real_Time_Delays                          => True,\n+      others                                        => False);\n+   --  This array defines the set of packages that can legitimately be\n+   --  accessed by Rtsfind in Ravenscar mode, in addition to the\n+   --  No_Run_Time units which are also allowed.\n+\n    --------------------------\n    -- Runtime Entity Table --\n    --------------------------\n@@ -1032,7 +1049,6 @@ package Rtsfind is\n      RE_Shared_Var_WOpen,                -- System.Shared_Storage\n \n      RE_Abort_Undefer_Direct,            -- System.Standard_Library\n-     RE_Exception_Data,                  -- System.Standard_Library\n      RE_Exception_Data_Ptr,              -- System.Standard_Library\n \n      RE_Integer_Address,                 -- System.Storage_Elements\n@@ -1953,7 +1969,6 @@ package Rtsfind is\n      RE_Shared_Var_WOpen                 => System_Shared_Storage,\n \n      RE_Abort_Undefer_Direct             => System_Standard_Library,\n-     RE_Exception_Data                   => System_Standard_Library,\n      RE_Exception_Data_Ptr               => System_Standard_Library,\n \n      RE_Integer_Address                  => System_Storage_Elements,"}, {"sha": "a85d8a1a364abf55bd5bbf414e527e8b9b093cc9", "filename": "gcc/ada/sem_ch10.adb", "status": "modified", "additions": 9, "deletions": 19, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6510f4c98e33e0aac8d5ccb40c680b077ce7aa1b/gcc%2Fada%2Fsem_ch10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6510f4c98e33e0aac8d5ccb40c680b077ce7aa1b/gcc%2Fada%2Fsem_ch10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch10.adb?ref=6510f4c98e33e0aac8d5ccb40c680b077ce7aa1b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                            $Revision: 1.2 $\n+--                            $Revision$\n --                                                                          --\n --          Copyright (C) 1992-2001 Free Software Foundation, Inc.          --\n --                                                                          --\n@@ -1486,15 +1486,16 @@ package body Sem_Ch10 is\n          E_Name := Defining_Entity (U);\n \n       --  Note: in the following test, Unit_Kind is the original Nkind, but\n-      --  in the case of an instantiation, the call to Semantics above will\n-      --  have replaced the unit by its instantiated version.\n-\n-      elsif Unit_Kind = N_Package_Instantiation\n+      --  in the case of an instantiation, semantic analysis above will\n+      --  have replaced the unit by its instantiated version. If the instance\n+      --  body has been generated, the instance now denotes the body entity.\n+      --  For visibility purposes we need the entity of its spec.\n+\n+      elsif (Unit_Kind = N_Package_Instantiation\n+              or else Nkind (Original_Node (Unit (Library_Unit (N)))) =\n+                N_Package_Instantiation)\n         and then Nkind (U) = N_Package_Body\n       then\n-         --  Instantiation node is replaced with body of instance.\n-         --  Unit name is defining unit name in corresponding spec.\n-\n          E_Name := Corresponding_Spec (U);\n \n       elsif Unit_Kind = N_Package_Instantiation\n@@ -2712,17 +2713,6 @@ package body Sem_Ch10 is\n       P     : constant Entity_Id := Scope (Uname);\n \n    begin\n-      --  If the unit is a package instantiation, its body may have been\n-      --  generated for an inner instance, and the instance now denotes the\n-      --  body entity. For visibility purposes we need the instance in the\n-      --  specification.\n-\n-      if Ekind (Uname) = E_Package_Body\n-        and then Is_Generic_Instance (Uname)\n-      then\n-         Uname := Spec_Entity (Uname);\n-      end if;\n-\n       --  We do not apply the restrictions to an internal unit unless\n       --  we are compiling the internal unit as a main unit. This check\n       --  is also skipped for dummy units (for missing packages)."}, {"sha": "09b55850ac7aada5d5084fefd4dc0f343b7c8b52", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 21, "deletions": 1, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6510f4c98e33e0aac8d5ccb40c680b077ce7aa1b/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6510f4c98e33e0aac8d5ccb40c680b077ce7aa1b/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=6510f4c98e33e0aac8d5ccb40c680b077ce7aa1b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                            $Revision: 1.4 $\n+--                            $Revision$\n --                                                                          --\n --          Copyright (C) 1992-2001, Free Software Foundation, Inc.         --\n --                                                                          --\n@@ -5033,6 +5033,25 @@ package body Sem_Res is\n       It1   : Interp;\n       Found : Boolean;\n \n+      function Init_Component return Boolean;\n+      --  Check whether this is the initialization of a component within an\n+      --  init_proc (by assignment or call to another init_proc). If true,\n+      --  there is no need for a discriminant check.\n+\n+      --------------------\n+      -- Init_Component --\n+      --------------------\n+\n+      function Init_Component return Boolean is\n+      begin\n+         return Inside_Init_Proc\n+           and then Nkind (Prefix (N)) = N_Identifier\n+           and then Chars (Prefix (N)) = Name_uInit\n+           and then Nkind (Parent (Parent (N))) = N_Case_Statement_Alternative;\n+      end Init_Component;\n+\n+   --  Start of processing for Resolve_Selected_Component\n+\n    begin\n       if Is_Overloaded (P) then\n \n@@ -5128,6 +5147,7 @@ package body Sem_Res is\n         and then Present (Discriminant_Checking_Func\n                            (Original_Record_Component (Entity (S))))\n         and then not Discriminant_Checks_Suppressed (T)\n+        and then not Init_Component\n       then\n          Set_Do_Discriminant_Check (N);\n       end if;"}, {"sha": "c6107e49e9bf81a420186f3ea9fcefcad7a56314", "filename": "gcc/ada/sem_warn.adb", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6510f4c98e33e0aac8d5ccb40c680b077ce7aa1b/gcc%2Fada%2Fsem_warn.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6510f4c98e33e0aac8d5ccb40c680b077ce7aa1b/gcc%2Fada%2Fsem_warn.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_warn.adb?ref=6510f4c98e33e0aac8d5ccb40c680b077ce7aa1b", "patch": "@@ -643,6 +643,15 @@ package body Sem_Warn is\n \n          if not In_Extended_Main_Source_Unit (Cnode) then\n             return;\n+\n+         --  In No_Run_Time_Mode, we remove the bodies of non-\n+         --  inlined subprograms, which may lead to spurious\n+         --  warnings, clearly undesirable.\n+\n+         elsif No_Run_Time\n+           and then Is_Predefined_File_Name (Unit_File_Name (Unit))\n+         then\n+            return;\n          end if;\n \n          --  Loop through context items in this unit\n@@ -674,15 +683,6 @@ package body Sem_Warn is\n                      if Unit = Spec_Unit then\n                         Set_Unreferenced_In_Spec (Item);\n \n-                     --  In No_Run_Time_Mode, we remove the bodies of non-\n-                     --  inlined subprograms, which may lead to spurious\n-                     --  warnings, clearly undesirable.\n-\n-                     elsif No_Run_Time\n-                       and then Is_Predefined_File_Name (Unit_File_Name (Unit))\n-                     then\n-                        null;\n-\n                      --  Otherwise simple unreferenced message\n \n                      else"}, {"sha": "36ada8c4c6fb7ecae589794a16d6a7bacc9fe2ae", "filename": "gcc/ada/switch.adb", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6510f4c98e33e0aac8d5ccb40c680b077ce7aa1b/gcc%2Fada%2Fswitch.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6510f4c98e33e0aac8d5ccb40c680b077ce7aa1b/gcc%2Fada%2Fswitch.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fswitch.adb?ref=6510f4c98e33e0aac8d5ccb40c680b077ce7aa1b", "patch": "@@ -606,6 +606,8 @@ package body Switch is\n \n                case Switch_Chars (Ptr) is\n \n+                  --  Configuration pragmas\n+\n                   when 'c' =>\n                      Ptr := Ptr + 1;\n                      if Ptr > Max then\n@@ -617,6 +619,19 @@ package body Switch is\n \n                      return;\n \n+                  --  Mapping file\n+\n+                  when 'm' =>\n+                     Ptr := Ptr + 1;\n+                     if Ptr > Max then\n+                        Osint.Fail (\"Invalid switch: \", \"em\");\n+                     end if;\n+\n+                     Mapping_File_Name :=\n+                       new String'(Switch_Chars (Ptr .. Max));\n+\n+                     return;\n+\n                   when others =>\n                      Osint.Fail (\"Invalid switch: \",\n                                    (1 => 'e', 2 => Switch_Chars (Ptr)));"}, {"sha": "9864efa750b2f6b2ca94068310a8bbda1819d841", "filename": "gcc/ada/trans.c", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6510f4c98e33e0aac8d5ccb40c680b077ce7aa1b/gcc%2Fada%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6510f4c98e33e0aac8d5ccb40c680b077ce7aa1b/gcc%2Fada%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftrans.c?ref=6510f4c98e33e0aac8d5ccb40c680b077ce7aa1b", "patch": "@@ -585,9 +585,9 @@ tree_transform (gnat_node)\n \t  else\n \t    {\n \t      if (! Is_Machine_Number (gnat_node))\n-\t\tur_realval =\n-                   Machine (Base_Type (Underlying_Type (Etype (gnat_node))),\n-\t\t\t\t      ur_realval);\n+\t\tur_realval\n+\t\t  = Machine (Base_Type (Underlying_Type (Etype (gnat_node))),\n+\t\t\t     ur_realval, Round_Even);\n \n \t      gnu_result\n \t\t= UI_To_gnu (Numerator (ur_realval), gnu_result_type);\n@@ -1858,6 +1858,13 @@ tree_transform (gnat_node)\n \t    gnu_rhs = maybe_unconstrained_array (gnu_rhs);\n \t  }\n \n+\t/* If the result type is a private type, its full view may be a\n+\t   numeric subtype. The representation we need is that of its base\n+\t   type, given that it is the result of an arithmetic operation.  */\n+        else if (Is_Private_Type (Etype (gnat_node))) \n+\t  gnu_type = gnu_result_type\n+\t    = get_unpadded_type (Base_Type (Full_View (Etype (gnat_node))));\n+\n \t/* If this is a shift whose count is not guaranteed to be correct,\n \t   we need to adjust the shift count.  */\n \tif (IN (Nkind (gnat_node), N_Op_Shift)"}, {"sha": "3d0efadf593acaf5939e26eda47b367cf72da717", "filename": "gcc/ada/urealp.h", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6510f4c98e33e0aac8d5ccb40c680b077ce7aa1b/gcc%2Fada%2Furealp.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6510f4c98e33e0aac8d5ccb40c680b077ce7aa1b/gcc%2Fada%2Furealp.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Furealp.h?ref=6510f4c98e33e0aac8d5ccb40c680b077ce7aa1b", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                              C Header File                               *\n  *                                                                          *\n- *                            $Revision: 1.1 $\n+ *                            $Revision$\n  *                                                                          *\n  *          Copyright (C) 1992-2001 Free Software Foundation, Inc.          *\n  *                                                                          *\n@@ -46,5 +46,8 @@ extern Boolean UR_Is_Negative\tPARAMS ((Ureal));\n #define UR_Is_Zero urealp__ur_is_zero\n extern Boolean UR_Is_Zero\tPARAMS ((Ureal));\n \n+enum Rounding_Mode {Floor = 0, Ceiling = 1, Round = 2, Round_Even = 3};\n+\n #define Machine eval_fat__machine\n-extern Ureal Machine\t\tPARAMS ((Entity_Id, Ureal));\n+extern Ureal Machine\t\tPARAMS ((Entity_Id, Ureal,\n+\t\t\t\t\t enum Rounding_Mode));"}, {"sha": "4393df19e85a567ba7ad938d1b9a30c94ef629fd", "filename": "gcc/ada/usage.adb", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6510f4c98e33e0aac8d5ccb40c680b077ce7aa1b/gcc%2Fada%2Fusage.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6510f4c98e33e0aac8d5ccb40c680b077ce7aa1b/gcc%2Fada%2Fusage.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fusage.adb?ref=6510f4c98e33e0aac8d5ccb40c680b077ce7aa1b", "patch": "@@ -155,6 +155,11 @@ begin\n    Write_Switch_Char (\"ec?\");\n    Write_Line (\"Specify configuration pragmas file, e.g. -gnatec/x/f.adc\");\n \n+   --  Line for -gnatem switch\n+\n+   Write_Switch_Char (\"em?\");\n+   Write_Line (\"Specify mapping file, e.g. -gnatemmapping\");\n+\n    --  Line for -gnatE switch\n \n    Write_Switch_Char (\"E\");"}]}