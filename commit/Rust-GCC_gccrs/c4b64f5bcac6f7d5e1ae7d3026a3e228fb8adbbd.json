{"sha": "c4b64f5bcac6f7d5e1ae7d3026a3e228fb8adbbd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzRiNjRmNWJjYWM2ZjdkNWUxYWU3ZDMwMjZhM2UyMjhmYjhhZGJiZA==", "commit": {"author": {"name": "R\u00fcdiger Sonderfeld", "email": "ruediger@c-plusplus.de", "date": "2014-10-06T15:55:53Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2014-10-06T15:55:53Z"}, "message": "re PR libstdc++/59987 ([C++11]: Missing ios_base::hexfloat format specifier)\n\n2014-10-06  R\u00fcdiger Sonderfeld  <ruediger@c-plusplus.de>\n\t    Jonathan Wakely  <jwakely@redhat.com>\n\n\tPR libstdc++/59987\n\t* doc/xml/manual/status_cxx2011.xml: Remove hexfloat from notes.\n\t* doc/html/manual/status.html: Regenerate.\n\t* include/bits/ios_base.h (hexfloat): New function.\n\t(defaultfloat): New function.\n\t* src/c++98/locale_facets.cc (__num_base::_S_format_float): Support\n\thexadecimal floating point format.\n\t* testsuite/27_io/basic_ostream/inserters_arithmetic/char/hexfloat.cc:\n\tNew file.\n\nCo-Authored-By: Jonathan Wakely <jwakely@redhat.com>\n\nFrom-SVN: r215952", "tree": {"sha": "a073e4aa7ba9c60171d422fb14bfd20fb5535571", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a073e4aa7ba9c60171d422fb14bfd20fb5535571"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c4b64f5bcac6f7d5e1ae7d3026a3e228fb8adbbd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4b64f5bcac6f7d5e1ae7d3026a3e228fb8adbbd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4b64f5bcac6f7d5e1ae7d3026a3e228fb8adbbd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4b64f5bcac6f7d5e1ae7d3026a3e228fb8adbbd/comments", "author": {"login": "ruediger", "id": 1803, "node_id": "MDQ6VXNlcjE4MDM=", "avatar_url": "https://avatars.githubusercontent.com/u/1803?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ruediger", "html_url": "https://github.com/ruediger", "followers_url": "https://api.github.com/users/ruediger/followers", "following_url": "https://api.github.com/users/ruediger/following{/other_user}", "gists_url": "https://api.github.com/users/ruediger/gists{/gist_id}", "starred_url": "https://api.github.com/users/ruediger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ruediger/subscriptions", "organizations_url": "https://api.github.com/users/ruediger/orgs", "repos_url": "https://api.github.com/users/ruediger/repos", "events_url": "https://api.github.com/users/ruediger/events{/privacy}", "received_events_url": "https://api.github.com/users/ruediger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cec5d8be5591842084cf656b2ef900ff85089aae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cec5d8be5591842084cf656b2ef900ff85089aae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cec5d8be5591842084cf656b2ef900ff85089aae"}], "stats": {"total": 205, "additions": 198, "deletions": 7}, "files": [{"sha": "6120d26ac6bec8646e15de2adb5214fc2a49a504", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4b64f5bcac6f7d5e1ae7d3026a3e228fb8adbbd/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4b64f5bcac6f7d5e1ae7d3026a3e228fb8adbbd/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=c4b64f5bcac6f7d5e1ae7d3026a3e228fb8adbbd", "patch": "@@ -1,3 +1,16 @@\n+2014-10-06  R\u00fcdiger Sonderfeld  <ruediger@c-plusplus.de>\n+\t    Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/59987\n+\t* doc/xml/manual/status_cxx2011.xml: Remove hexfloat from notes.\n+\t* doc/html/manual/status.html: Regenerate.\n+\t* include/bits/ios_base.h (hexfloat): New function.\n+\t(defaultfloat): New function.\n+\t* src/c++98/locale_facets.cc (__num_base::_S_format_float): Support\n+\thexadecimal floating point format.\n+\t* testsuite/27_io/basic_ostream/inserters_arithmetic/char/hexfloat.cc:\n+\tNew file.\n+\n 2014-10-06  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* include/Makefile.am: Add new header."}, {"sha": "232bdef81858e3f5f69b385449629624658ba07e", "filename": "libstdc++-v3/doc/html/manual/status.html", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4b64f5bcac6f7d5e1ae7d3026a3e228fb8adbbd/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fstatus.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4b64f5bcac6f7d5e1ae7d3026a3e228fb8adbbd/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fstatus.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fstatus.html?ref=c4b64f5bcac6f7d5e1ae7d3026a3e228fb8adbbd", "patch": "@@ -215,7 +215,6 @@\n       </td></tr><tr><td align=\"left\">27.1</td><td align=\"left\">General</td><td align=\"left\">Y</td><td align=\"left\">\u00a0</td></tr><tr><td align=\"left\">27.2</td><td align=\"left\">Iostreams requirements</td><td align=\"left\">Y</td><td align=\"left\">\u00a0</td></tr><tr><td align=\"left\">27.2.1</td><td align=\"left\">Imbue Limitations</td><td align=\"left\">Y</td><td align=\"left\">\u00a0</td></tr><tr><td align=\"left\">27.2.2</td><td align=\"left\">Positioning Type Limitations</td><td align=\"left\">Y</td><td align=\"left\">\u00a0</td></tr><tr bgcolor=\"#B0B0B0\"><td align=\"left\">27.2.3</td><td align=\"left\">Thread safety</td><td align=\"left\">Partial</td><td align=\"left\">\u00a0</td></tr><tr><td align=\"left\">27.3</td><td align=\"left\">Forward declarations</td><td align=\"left\">Y</td><td align=\"left\">\u00a0</td></tr><tr><td align=\"left\">27.4</td><td align=\"left\">Standard iostream objects</td><td align=\"left\">Y</td><td align=\"left\">\u00a0</td></tr><tr><td align=\"left\">27.4.1</td><td align=\"left\">Overview</td><td align=\"left\">Y</td><td align=\"left\">\u00a0</td></tr><tr><td align=\"left\">27.4.2</td><td align=\"left\">Narrow stream objects</td><td align=\"left\">Y</td><td align=\"left\">\u00a0</td></tr><tr><td align=\"left\">27.4.3</td><td align=\"left\">Wide stream objects</td><td align=\"left\">Y</td><td align=\"left\">\u00a0</td></tr><tr bgcolor=\"#B0B0B0\"><td align=\"left\">27.5</td><td align=\"left\">Iostreams base classes</td><td align=\"left\">Partial</td><td align=\"left\">\n         Missing <code class=\"code\">io_errc</code> and <code class=\"code\">iostream_category</code>.\n         <code class=\"code\">ios_base::failure</code> is not derived from <code class=\"code\">system_error</code>.\n-\tMissing <code class=\"code\">ios_base::hexfloat</code>.\n       </td></tr><tr><td align=\"left\">27.6</td><td align=\"left\">Stream buffers</td><td align=\"left\">Y</td><td align=\"left\">\u00a0</td></tr><tr bgcolor=\"#B0B0B0\"><td align=\"left\">27.7</td><td align=\"left\">Formatting and manipulators</td><td align=\"left\">Partial</td><td align=\"left\">\n         Missing <code class=\"code\">get_time</code> and <code class=\"code\">put_time</code> manipulators.\n       </td></tr><tr><td align=\"left\">27.8</td><td align=\"left\">String-based streams</td><td align=\"left\">Y</td><td align=\"left\">\u00a0</td></tr><tr><td align=\"left\">27.9</td><td align=\"left\">File-based streams</td><td align=\"left\">Y</td><td align=\"left\">\u00a0</td></tr><tr><td align=\"left\">"}, {"sha": "108de3690879135efe9e25635c44a8ad4cdc8097", "filename": "libstdc++-v3/doc/xml/manual/status_cxx2011.xml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4b64f5bcac6f7d5e1ae7d3026a3e228fb8adbbd/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fstatus_cxx2011.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4b64f5bcac6f7d5e1ae7d3026a3e228fb8adbbd/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fstatus_cxx2011.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fstatus_cxx2011.xml?ref=c4b64f5bcac6f7d5e1ae7d3026a3e228fb8adbbd", "patch": "@@ -2131,7 +2131,6 @@ particular release.\n       <entry>\n         Missing <code>io_errc</code> and <code>iostream_category</code>.\n         <code>ios_base::failure</code> is not derived from <code>system_error</code>.\n-\tMissing <code>ios_base::hexfloat</code>.\n       </entry>\n     </row>\n     <row>"}, {"sha": "5e33b812fe3b7595b8632fac11bed43837fc9e12", "filename": "libstdc++-v3/include/bits/ios_base.h", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4b64f5bcac6f7d5e1ae7d3026a3e228fb8adbbd/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fios_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4b64f5bcac6f7d5e1ae7d3026a3e228fb8adbbd/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fios_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fios_base.h?ref=c4b64f5bcac6f7d5e1ae7d3026a3e228fb8adbbd", "patch": "@@ -984,6 +984,27 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     return __base;\n   }\n \n+#if __cplusplus >= 201103L\n+  // New C++11 floatfield manipulators\n+\n+  /// Calls\n+  /// base.setf(ios_base::fixed|ios_base::scientific, ios_base::floatfield)\n+  inline ios_base&\n+  hexfloat(ios_base& __base)\n+  {\n+    __base.setf(ios_base::fixed | ios_base::scientific, ios_base::floatfield);\n+    return __base;\n+  }\n+\n+  /// Calls @c base.unsetf(ios_base::floatfield)\n+  inline ios_base&\n+  defaultfloat(ios_base& __base)\n+  {\n+    __base.unsetf(ios_base::floatfield);\n+    return __base;\n+  }\n+#endif\n+\n _GLIBCXX_END_NAMESPACE_VERSION\n } // namespace\n "}, {"sha": "7ed04e613e2eb23f669fc7d992ab76fe78235499", "filename": "libstdc++-v3/src/c++98/locale_facets.cc", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4b64f5bcac6f7d5e1ae7d3026a3e228fb8adbbd/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Flocale_facets.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4b64f5bcac6f7d5e1ae7d3026a3e228fb8adbbd/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Flocale_facets.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Flocale_facets.cc?ref=c4b64f5bcac6f7d5e1ae7d3026a3e228fb8adbbd", "patch": "@@ -69,19 +69,26 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     if (__flags & ios_base::showpoint)\n       *__fptr++ = '#';\n \n-    // As per DR 231: _always_, not only when \n-    // __flags & ios_base::fixed || __prec > 0\n-    *__fptr++ = '.';\n-    *__fptr++ = '*';\n+    ios_base::fmtflags __fltfield = __flags & ios_base::floatfield;\n+\n+    if (__fltfield != (ios_base::fixed | ios_base::scientific))\n+      {\n+        // As per DR 231: not only when __flags & ios_base::fixed || __prec > 0\n+        *__fptr++ = '.';\n+        *__fptr++ = '*';\n+      }\n \n     if (__mod)\n       *__fptr++ = __mod;\n-    ios_base::fmtflags __fltfield = __flags & ios_base::floatfield;\n     // [22.2.2.2.2] Table 58\n     if (__fltfield == ios_base::fixed)\n       *__fptr++ = 'f';\n     else if (__fltfield == ios_base::scientific)\n       *__fptr++ = (__flags & ios_base::uppercase) ? 'E' : 'e';\n+#ifdef _GLIBCXX_USE_C99\n+    else if (__fltfield == (ios_base::fixed | ios_base::scientific))\n+      *__fptr++ = (__flags & ios_base::uppercase) ? 'A' : 'a';\n+#endif\n     else\n       *__fptr++ = (__flags & ios_base::uppercase) ? 'G' : 'g';\n     *__fptr = '\\0';"}, {"sha": "485a485f100dce63524d96d354ff085d5566a721", "filename": "libstdc++-v3/testsuite/27_io/basic_ostream/inserters_arithmetic/char/hexfloat.cc", "status": "added", "additions": 152, "deletions": 0, "changes": 152, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4b64f5bcac6f7d5e1ae7d3026a3e228fb8adbbd/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ostream%2Finserters_arithmetic%2Fchar%2Fhexfloat.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4b64f5bcac6f7d5e1ae7d3026a3e228fb8adbbd/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ostream%2Finserters_arithmetic%2Fchar%2Fhexfloat.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ostream%2Finserters_arithmetic%2Fchar%2Fhexfloat.cc?ref=c4b64f5bcac6f7d5e1ae7d3026a3e228fb8adbbd", "patch": "@@ -0,0 +1,152 @@\n+// { dg-options \"-std=gnu++11\" }\n+\n+// 2014-03-27 R\u00fcdiger Sonderfeld\n+// test the hexadecimal floating point inserters (facet num_put)\n+\n+// Copyright (C) 2014 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <iomanip>\n+#include <sstream>\n+#include <string>\n+#include <testsuite_hooks.h>\n+\n+#ifndef _GLIBCXX_ASSERT\n+#  define TEST_NUMPUT_VERBOSE 1\n+#endif\n+\n+#ifdef TEST_NUMPUT_VERBOSE\n+#  include <iostream>\n+#endif\n+\n+using namespace std;\n+\n+void\n+test01()\n+{\n+  ostringstream os;\n+  double d = 272.; // 0x1.1p+8;\n+#ifdef TEST_NUMPUT_VERBOSE\n+  cout << os.precision() << endl;\n+#endif\n+  os << hexfloat << setprecision(1);\n+  os << d;\n+#ifdef TEST_NUMPUT_VERBOSE\n+  cout << \"got: \" << os.str() << endl;\n+#endif\n+  VERIFY( os && std::stod(os.str()) == d );\n+  VERIFY( os.str().substr(0, 2) == \"0x\" );\n+  VERIFY( os.str().find('p') != std::string::npos );\n+\n+  os.str(\"\");\n+  os << uppercase << d;\n+#ifdef TEST_NUMPUT_VERBOSE\n+  cout << \"got: \" << os.str() << endl;\n+#endif\n+  VERIFY( os && std::stod(os.str()) == d );\n+  VERIFY( os.str().substr(0, 2) == \"0X\" );\n+  VERIFY( os.str().find('P') != std::string::npos );\n+\n+  os << nouppercase;\n+  os.str(\"\");\n+  os << defaultfloat << setprecision(6);\n+  os << d;\n+#ifdef TEST_NUMPUT_VERBOSE\n+  cout << \"got: \" << os.str() << endl;\n+#endif\n+  VERIFY( os && os.str() == \"272\" );\n+\n+  os.str(\"\");\n+  d = 15.; //0x1.ep+3;\n+  os << hexfloat << setprecision(1);\n+  os << d;\n+#ifdef TEST_NUMPUT_VERBOSE\n+  cout << \"got: \" << os.str() << endl;\n+#endif\n+  VERIFY( os && std::stod(os.str()) == d );\n+  os.str(\"\");\n+  os << uppercase << d;\n+#ifdef TEST_NUMPUT_VERBOSE\n+  cout << \"got: \" << os.str() << endl;\n+#endif\n+  VERIFY( os && std::stod(os.str()) == d );\n+  os << nouppercase;\n+  os.str(\"\");\n+  os << defaultfloat << setprecision(6);\n+  os << d;\n+#ifdef TEST_NUMPUT_VERBOSE\n+  cout << \"got: \" << os.str() << endl;\n+#endif\n+  VERIFY( os && os.str() == \"15\" );\n+}\n+\n+void\n+test02()\n+{\n+  ostringstream os;\n+  long double d = 272.L; // 0x1.1p+8L;\n+  os << hexfloat << setprecision(1);\n+  os << d;\n+#ifdef TEST_NUMPUT_VERBOSE\n+  cout << \"got: \" << os.str() << endl;\n+#endif\n+  VERIFY( os && std::stold(os.str()) == d );\n+  os.str(\"\");\n+  os << uppercase << d;\n+#ifdef TEST_NUMPUT_VERBOSE\n+  cout << \"got: \" << os.str() << endl;\n+#endif\n+  VERIFY( os && std::stold(os.str()) == d );\n+  os << nouppercase;\n+  os.str(\"\");\n+  os << defaultfloat << setprecision(6);\n+  os << d;\n+#ifdef TEST_NUMPUT_VERBOSE\n+  cout << \"got: \" << os.str() << endl;\n+#endif\n+  VERIFY( os && os.str() == \"272\" );\n+\n+  os.str(\"\");\n+  os << hexfloat << setprecision(1);\n+  d = 15.; //0x1.ep+3;\n+  os << d;\n+#ifdef TEST_NUMPUT_VERBOSE\n+  cout << \"got: \" << os.str() << endl;\n+#endif\n+  VERIFY( os && std::stold(os.str()) == d );\n+  os.str(\"\");\n+  os << uppercase << d;\n+#ifdef TEST_NUMPUT_VERBOSE\n+  cout << \"got: \" << os.str() << endl;\n+#endif\n+  VERIFY( os && std::stold(os.str()) == d );\n+  os << nouppercase;\n+  os.str(\"\");\n+  os << defaultfloat << setprecision(6);\n+  os << d;\n+#ifdef TEST_NUMPUT_VERBOSE\n+  cout << \"got: \" << os.str() << endl;\n+#endif\n+  VERIFY( os && os.str() == \"15\" );\n+}\n+\n+int\n+main()\n+{\n+  test01();\n+  test02();\n+}"}]}