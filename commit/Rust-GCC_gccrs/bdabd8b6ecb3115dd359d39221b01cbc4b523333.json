{"sha": "bdabd8b6ecb3115dd359d39221b01cbc4b523333", "node_id": "C_kwDOANBUbNoAKGJkYWJkOGI2ZWNiMzExNWRkMzU5ZDM5MjIxYjAxY2JjNGI1MjMzMzM", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2021-09-10T20:29:27Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-10-05T08:20:02Z"}, "message": "[Ada] Rewrite operator entity in derived class-wide expressions\n\ngcc/ada/\n\n\t* exp_util.adb (Build_Class_Wide_Expression): Replace entities\n\tof both identifiers and operator symbols.", "tree": {"sha": "8ef5cb7778d9483ebced7859ec0280f7b3ea3f4b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8ef5cb7778d9483ebced7859ec0280f7b3ea3f4b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bdabd8b6ecb3115dd359d39221b01cbc4b523333", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bdabd8b6ecb3115dd359d39221b01cbc4b523333", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bdabd8b6ecb3115dd359d39221b01cbc4b523333", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bdabd8b6ecb3115dd359d39221b01cbc4b523333/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cc1fcd387984da9cde6d7314345d366789929d57", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc1fcd387984da9cde6d7314345d366789929d57", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc1fcd387984da9cde6d7314345d366789929d57"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "eef278fb39118ca8b6bd70d5b46364ffc9599682", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bdabd8b6ecb3115dd359d39221b01cbc4b523333/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bdabd8b6ecb3115dd359d39221b01cbc4b523333/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=bdabd8b6ecb3115dd359d39221b01cbc4b523333", "patch": "@@ -1293,7 +1293,7 @@ package body Exp_Util is\n             Adjust_Inherited_Pragma_Sloc (N);\n          end if;\n \n-         if Nkind (N) = N_Identifier\n+         if Nkind (N) in N_Identifier | N_Operator_Symbol\n            and then Present (Entity (N))\n            and then\n              (Is_Formal (Entity (N)) or else Is_Subprogram (Entity (N)))"}]}