{"sha": "7b25e6631d06cd75c0db8f59e1e863eda4d0c66e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2IyNWU2NjMxZDA2Y2Q3NWMwZGI4ZjU5ZTFlODYzZWRhNGQwYzY2ZQ==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2005-03-14T02:55:03Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2005-03-14T02:55:03Z"}, "message": "function.c (get_func_frame_size): Make it static.\n\n\t* function.c (get_func_frame_size): Make it static.\n\t* function.h: Remove the corresponding type.\n\nFrom-SVN: r96409", "tree": {"sha": "fb478b4e05efedfce3170741880e5b9f93d651e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fb478b4e05efedfce3170741880e5b9f93d651e2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7b25e6631d06cd75c0db8f59e1e863eda4d0c66e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b25e6631d06cd75c0db8f59e1e863eda4d0c66e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b25e6631d06cd75c0db8f59e1e863eda4d0c66e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b25e6631d06cd75c0db8f59e1e863eda4d0c66e/comments", "author": null, "committer": null, "parents": [{"sha": "c148389e285d2de5ca880f6677efd8a4e7a109bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c148389e285d2de5ca880f6677efd8a4e7a109bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c148389e285d2de5ca880f6677efd8a4e7a109bc"}], "stats": {"total": 7, "additions": 4, "deletions": 3}, "files": [{"sha": "d8fcc52924289ec3166df84a31753001fcb43061", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b25e6631d06cd75c0db8f59e1e863eda4d0c66e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b25e6631d06cd75c0db8f59e1e863eda4d0c66e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7b25e6631d06cd75c0db8f59e1e863eda4d0c66e", "patch": "@@ -3,6 +3,9 @@\n \t* except.c (check_handled): Make it static.\n \t* except.h: Remove the corresponding prototype.\n \n+\t* function.c (get_func_frame_size): Make it static.\n+\t* function.h: Remove the corresponding type.\n+\n 2005-03-14  Alan Modra  <amodra@bigpond.net.au>\n \n \t* config.gcc: Remove excess indentation."}, {"sha": "9db8ae0895226c4965f2a5e07cfec6ccc6f66227", "filename": "gcc/function.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b25e6631d06cd75c0db8f59e1e863eda4d0c66e/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b25e6631d06cd75c0db8f59e1e863eda4d0c66e/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=7b25e6631d06cd75c0db8f59e1e863eda4d0c66e", "patch": "@@ -353,7 +353,7 @@ free_after_compilation (struct function *f)\n    This size counts from zero.  It is not rounded to PREFERRED_STACK_BOUNDARY;\n    the caller may have to do that.  */\n \n-HOST_WIDE_INT\n+static HOST_WIDE_INT\n get_func_frame_size (struct function *f)\n {\n #ifdef FRAME_GROWS_DOWNWARD"}, {"sha": "6444554189ff4dadb79e133939b33f244d68181c", "filename": "gcc/function.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b25e6631d06cd75c0db8f59e1e863eda4d0c66e/gcc%2Ffunction.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b25e6631d06cd75c0db8f59e1e863eda4d0c66e/gcc%2Ffunction.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.h?ref=7b25e6631d06cd75c0db8f59e1e863eda4d0c66e", "patch": "@@ -508,8 +508,6 @@ extern void free_block_changes (void);\n    This size counts from zero.  It is not rounded to STACK_BOUNDARY;\n    the caller may have to do that.  */\n extern HOST_WIDE_INT get_frame_size (void);\n-/* Likewise, but for a different than the current function.  */\n-extern HOST_WIDE_INT get_func_frame_size (struct function *);\n \n /* A pointer to a function to create target specific, per-function\n    data structures.  */"}]}