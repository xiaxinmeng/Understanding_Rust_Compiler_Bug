{"sha": "331e50151c7fbc9931899d0c10fa5fed7be4f8be", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzMxZTUwMTUxYzdmYmM5OTMxODk5ZDBjMTBmYTVmZWQ3YmU0ZjhiZQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2016-05-02T10:14:23Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2016-05-02T10:14:23Z"}, "message": "[multiple changes]\n\n2016-05-02  Jerome Lambourg  <lambourg@adacore.com>\n\n\t* s-unstyp.ads: Code cleanups.\n\n2016-05-02  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* sem_ch13.adb (Size_Too_Small_Error): Fix the error message format.\n\n2016-05-02  Ed Schonberg  <schonberg@adacore.com>\n\n\t* exp_prag.adb (Expand_attributes_In_Consequence,\n\tExpand_Attributes): If the prefix of'Old is an unconstrained type,\n\tfor example an unconstrained formal of the enclosing subprogram,\n\tcreate an object declaration with an expression to obtain the\n\tactual subtype of the temporary.\n\n2016-05-02  Arnaud Charlet  <charlet@adacore.com>\n\n\t* comperr.adb (Delete_SCIL_Files): Add missing handling of\n\tN_Subprogram_Declaration.\n\nFrom-SVN: r235738", "tree": {"sha": "38cd4b76c35c881b1a78a6347deba42d26f0bd0c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/38cd4b76c35c881b1a78a6347deba42d26f0bd0c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/331e50151c7fbc9931899d0c10fa5fed7be4f8be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/331e50151c7fbc9931899d0c10fa5fed7be4f8be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/331e50151c7fbc9931899d0c10fa5fed7be4f8be", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/331e50151c7fbc9931899d0c10fa5fed7be4f8be/comments", "author": null, "committer": null, "parents": [{"sha": "2c94bbe3c25520fa979adb7eb61b32aba6f5a1c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c94bbe3c25520fa979adb7eb61b32aba6f5a1c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c94bbe3c25520fa979adb7eb61b32aba6f5a1c4"}], "stats": {"total": 66, "additions": 52, "deletions": 14}, "files": [{"sha": "4997791b118df118c5e5fff7cbc0b462c17fbd58", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/331e50151c7fbc9931899d0c10fa5fed7be4f8be/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/331e50151c7fbc9931899d0c10fa5fed7be4f8be/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=331e50151c7fbc9931899d0c10fa5fed7be4f8be", "patch": "@@ -1,3 +1,24 @@\n+2016-05-02  Jerome Lambourg  <lambourg@adacore.com>\n+\n+\t* s-unstyp.ads: Code cleanups.\n+\n+2016-05-02  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* sem_ch13.adb (Size_Too_Small_Error): Fix the error message format.\n+\n+2016-05-02  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_prag.adb (Expand_attributes_In_Consequence,\n+\tExpand_Attributes): If the prefix of'Old is an unconstrained type,\n+\tfor example an unconstrained formal of the enclosing subprogram,\n+\tcreate an object declaration with an expression to obtain the\n+\tactual subtype of the temporary.\n+\n+2016-05-02  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* comperr.adb (Delete_SCIL_Files): Add missing handling of\n+\tN_Subprogram_Declaration.\n+\n 2016-05-02  Gary Dismukes  <dismukes@adacore.com>\n \n \t* exp_ch5.adb, exp_ch7.adb, exp_ch7.ads, checks.adb, sem_attr.adb,"}, {"sha": "7838cc49948d86cde378a5f6edb2a6e37f4ee77c", "filename": "gcc/ada/comperr.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/331e50151c7fbc9931899d0c10fa5fed7be4f8be/gcc%2Fada%2Fcomperr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/331e50151c7fbc9931899d0c10fa5fed7be4f8be/gcc%2Fada%2Fcomperr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcomperr.adb?ref=331e50151c7fbc9931899d0c10fa5fed7be4f8be", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -467,7 +467,8 @@ package body Comperr is\n       Main := Unit (Cunit (Main_Unit));\n \n       case Nkind (Main) is\n-         when N_Subprogram_Body | N_Package_Declaration =>\n+         when N_Subprogram_Declaration | N_Subprogram_Body |\n+              N_Package_Declaration =>\n             Unit_Name := Defining_Unit_Name (Specification (Main));\n \n          when N_Package_Body =>"}, {"sha": "ac1aa8c24f06bcffac6bdc5fbaf22a1cdbfbfc62", "filename": "gcc/ada/exp_prag.adb", "status": "modified", "additions": 24, "deletions": 11, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/331e50151c7fbc9931899d0c10fa5fed7be4f8be/gcc%2Fada%2Fexp_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/331e50151c7fbc9931899d0c10fa5fed7be4f8be/gcc%2Fada%2Fexp_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_prag.adb?ref=331e50151c7fbc9931899d0c10fa5fed7be4f8be", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -874,19 +874,32 @@ package body Exp_Prag is\n                --  the precondition procedure that follows.\n \n                Prepend_To (Decls, Decl);\n-               Analyze (Decl);\n \n-               --  Evaluate the prefix, generate:\n-               --    Temp := <Pref>;\n+               --  If the type is unconstrained, the prefix provides its\n+               --  value and constraint, so add it to declaration.\n \n-               if No (Eval_Stmts) then\n-                  Eval_Stmts := New_List;\n-               end if;\n+               if not Is_Constrained (Etype (Pref))\n+                 and then Is_Entity_Name (Pref)\n+               then\n+                  Set_Expression (Decl, Pref);\n+                  Analyze (Decl);\n+\n+                  --  Otherwise add an assignment  statement to temporary\n+                  --  using prefix as RHS.\n+\n+               else\n+                  Analyze (Decl);\n+\n+                  if No (Eval_Stmts) then\n+                     Eval_Stmts := New_List;\n+                  end if;\n \n-               Append_To (Eval_Stmts,\n-                 Make_Assignment_Statement (Loc,\n-                   Name       => New_Occurrence_Of (Temp, Loc),\n-                   Expression => Pref));\n+                  Append_To (Eval_Stmts,\n+                    Make_Assignment_Statement (Loc,\n+                      Name       => New_Occurrence_Of (Temp, Loc),\n+                      Expression => Pref));\n+\n+               end if;\n \n                --  Ensure that the prefix is valid\n "}, {"sha": "f9ad3853a0aea08a303aced76e5eeea7baff2841", "filename": "gcc/ada/s-unstyp.ads", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/331e50151c7fbc9931899d0c10fa5fed7be4f8be/gcc%2Fada%2Fs-unstyp.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/331e50151c7fbc9931899d0c10fa5fed7be4f8be/gcc%2Fada%2Fs-unstyp.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-unstyp.ads?ref=331e50151c7fbc9931899d0c10fa5fed7be4f8be", "patch": "@@ -60,6 +60,7 @@ package System.Unsigned_Types is\n    type Packed_Bytes1 is array (Natural range <>) of aliased Packed_Byte;\n    for Packed_Bytes1'Alignment use 1;\n    for Packed_Bytes1'Component_Size use Packed_Byte'Size;\n+   pragma Suppress_Initialization (Packed_Bytes1);\n    --  This is the type used to implement packed arrays where no alignment\n    --  is required. This includes the cases of 1,2,4 (where we use direct\n    --  masking operations), and all odd component sizes (where the clusters\n@@ -68,6 +69,7 @@ package System.Unsigned_Types is\n \n    type Packed_Bytes2 is new Packed_Bytes1;\n    for Packed_Bytes2'Alignment use Integer'Min (2, Standard'Maximum_Alignment);\n+   pragma Suppress_Initialization (Packed_Bytes2);\n    --  This is the type used to implement packed arrays where an alignment\n    --  of 2 (is possible) is helpful for maximum efficiency of the get and\n    --  set routines in the corresponding library unit. This is true of all\n@@ -78,6 +80,7 @@ package System.Unsigned_Types is\n \n    type Packed_Bytes4 is new Packed_Bytes1;\n    for Packed_Bytes4'Alignment use Integer'Min (4, Standard'Maximum_Alignment);\n+   pragma Suppress_Initialization (Packed_Bytes4);\n    --  This is the type used to implement packed arrays where an alignment\n    --  of 4 (if possible) is helpful for maximum efficiency of the get and\n    --  set routines in the corresponding library unit. This is true of all"}, {"sha": "589c0a1a2f6bb2268c39c7ba43f950baa91e77ce", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/331e50151c7fbc9931899d0c10fa5fed7be4f8be/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/331e50151c7fbc9931899d0c10fa5fed7be4f8be/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=331e50151c7fbc9931899d0c10fa5fed7be4f8be", "patch": "@@ -10906,7 +10906,7 @@ package body Sem_Ch13 is\n \n          if not ASIS_Mode then\n             Error_Msg_Uint_1 := Min_Siz;\n-            Error_Msg_NE (\"size for & too small, minimum allowed is ^\", N, T);\n+            Error_Msg_NE (\"size for& too small, minimum allowed is ^\", N, T);\n          end if;\n       end Size_Too_Small_Error;\n "}]}