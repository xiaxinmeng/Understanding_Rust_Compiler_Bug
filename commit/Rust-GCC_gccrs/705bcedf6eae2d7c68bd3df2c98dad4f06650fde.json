{"sha": "705bcedf6eae2d7c68bd3df2c98dad4f06650fde", "node_id": "C_kwDOANBUbNoAKDcwNWJjZWRmNmVhZTJkN2M2OGJkM2RmMmM5OGRhZDRmMDY2NTBmZGU", "commit": {"author": {"name": "Sandra Loosemore", "email": "sandra@codesourcery.com", "date": "2022-05-05T18:37:16Z"}, "committer": {"name": "Sandra Loosemore", "email": "sandra@codesourcery.com", "date": "2022-05-05T18:49:49Z"}, "message": "Fortran: Add support for OMP non-rectangular loops.\n\nThis patch adds support for OMP 5.1 \"canonical loop nest form\" to the\nFortran front end, marks non-rectangular loops for processing\nby the middle end, and implements missing checks in the gimplifier\nfor additional prohibitions on non-rectangular loops.\n\nNote that the OMP spec also prohibits non-rectangular loops with the TILE\nconstruct; that construct hasn't been implemented yet, so that error will\nneed to be filled in later.\n\n\tgcc/fortran/\n\t* gfortran.h (struct gfc_omp_clauses): Add non_rectangular bit.\n\t* openmp.cc (is_outer_iteration_variable): New function.\n\t(expr_is_invariant): New function.\n\t(bound_expr_is_canonical): New function.\n\t(resolve_omp_do): Replace existing non-rectangularity error with\n\tcheck for canonical form and setting non_rectangular bit.\n\t* trans-openmp.cc (gfc_trans_omp_do): Transfer non_rectangular\n\tflag to generated tree structure.\n\n\tgcc/\n\t* gimplify.cc (gimplify_omp_for): Update messages for SCHEDULED\n\tand ORDERED clause conflict errors.  Add check for GRAINSIZE and\n\tNUM_TASKS on TASKLOOP.\n\n\tgcc/testsuite/\n\t* c-c++-common/gomp/loop-6.c (f3): New function to test TASKLOOP\n\tdiagnostics.\n\t* gfortran.dg/gomp/collapse1.f90: Update expected messages.\n\t* gfortran.dg/gomp/pr85313.f90: Remove dg-error on non-rectangular\n\tloops that are now accepted.\n\t* gfortran.dg/gomp/non-rectangular-loop.f90: New file.\n\t* gfortran.dg/gomp/canonical-loop-1.f90: New file.\n\t* gfortran.dg/gomp/canonical-loop-2.f90: New file.", "tree": {"sha": "d3aa0681b4c9f2bf39db4ea1c4788e946022c210", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d3aa0681b4c9f2bf39db4ea1c4788e946022c210"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/705bcedf6eae2d7c68bd3df2c98dad4f06650fde", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/705bcedf6eae2d7c68bd3df2c98dad4f06650fde", "html_url": "https://github.com/Rust-GCC/gccrs/commit/705bcedf6eae2d7c68bd3df2c98dad4f06650fde", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/705bcedf6eae2d7c68bd3df2c98dad4f06650fde/comments", "author": {"login": "SandraLoosemore", "id": 104087111, "node_id": "U_kgDOBjQ-Rw", "avatar_url": "https://avatars.githubusercontent.com/u/104087111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SandraLoosemore", "html_url": "https://github.com/SandraLoosemore", "followers_url": "https://api.github.com/users/SandraLoosemore/followers", "following_url": "https://api.github.com/users/SandraLoosemore/following{/other_user}", "gists_url": "https://api.github.com/users/SandraLoosemore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SandraLoosemore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SandraLoosemore/subscriptions", "organizations_url": "https://api.github.com/users/SandraLoosemore/orgs", "repos_url": "https://api.github.com/users/SandraLoosemore/repos", "events_url": "https://api.github.com/users/SandraLoosemore/events{/privacy}", "received_events_url": "https://api.github.com/users/SandraLoosemore/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SandraLoosemore", "id": 104087111, "node_id": "U_kgDOBjQ-Rw", "avatar_url": "https://avatars.githubusercontent.com/u/104087111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SandraLoosemore", "html_url": "https://github.com/SandraLoosemore", "followers_url": "https://api.github.com/users/SandraLoosemore/followers", "following_url": "https://api.github.com/users/SandraLoosemore/following{/other_user}", "gists_url": "https://api.github.com/users/SandraLoosemore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SandraLoosemore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SandraLoosemore/subscriptions", "organizations_url": "https://api.github.com/users/SandraLoosemore/orgs", "repos_url": "https://api.github.com/users/SandraLoosemore/repos", "events_url": "https://api.github.com/users/SandraLoosemore/events{/privacy}", "received_events_url": "https://api.github.com/users/SandraLoosemore/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "982fd4cd765664d737eb4346a2d2400b6a74c4ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/982fd4cd765664d737eb4346a2d2400b6a74c4ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/982fd4cd765664d737eb4346a2d2400b6a74c4ec"}], "stats": {"total": 697, "additions": 672, "deletions": 25}, "files": [{"sha": "1bce2833139793aa8b6e2c7d49f34b1d1cda894f", "filename": "gcc/fortran/gfortran.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/705bcedf6eae2d7c68bd3df2c98dad4f06650fde/gcc%2Ffortran%2Fgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/705bcedf6eae2d7c68bd3df2c98dad4f06650fde/gcc%2Ffortran%2Fgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.h?ref=705bcedf6eae2d7c68bd3df2c98dad4f06650fde", "patch": "@@ -1533,6 +1533,7 @@ typedef struct gfc_omp_clauses\n   unsigned simd:1, threads:1, depend_source:1, destroy:1, order_concurrent:1;\n   unsigned order_unconstrained:1, order_reproducible:1, capture:1;\n   unsigned grainsize_strict:1, num_tasks_strict:1, compare:1, weak:1;\n+  unsigned non_rectangular:1;\n   ENUM_BITFIELD (gfc_omp_sched_kind) sched_kind:3;\n   ENUM_BITFIELD (gfc_omp_device_type) device_type:2;\n   ENUM_BITFIELD (gfc_omp_memorder) memorder:3;"}, {"sha": "4d3fcc8bb78523712e9cd07ede087ed7c93775ce", "filename": "gcc/fortran/openmp.cc", "status": "modified", "additions": 141, "deletions": 18, "changes": 159, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/705bcedf6eae2d7c68bd3df2c98dad4f06650fde/gcc%2Ffortran%2Fopenmp.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/705bcedf6eae2d7c68bd3df2c98dad4f06650fde/gcc%2Ffortran%2Fopenmp.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fopenmp.cc?ref=705bcedf6eae2d7c68bd3df2c98dad4f06650fde", "patch": "@@ -8446,6 +8446,105 @@ gfc_resolve_omp_local_vars (gfc_namespace *ns)\n     gfc_traverse_ns (ns, handle_local_var);\n }\n \n+/* CODE is an OMP loop construct.  Return true if VAR matches an iteration\n+   variable outer to level DEPTH.  */\n+static bool\n+is_outer_iteration_variable (gfc_code *code, int depth, gfc_symbol *var)\n+{\n+  int i;\n+  gfc_code *do_code = code->block->next;\n+\n+  for (i = 1; i < depth; i++)\n+    {\n+      gfc_symbol *ivar = do_code->ext.iterator->var->symtree->n.sym;\n+      if (var == ivar)\n+\treturn true;\n+      do_code = do_code->block->next;\n+    }\n+  return false;\n+}\n+\n+/* CODE is an OMP loop construct.  Return true if EXPR does not reference\n+   any iteration variables outer to level DEPTH.  */\n+static bool\n+expr_is_invariant (gfc_code *code, int depth, gfc_expr *expr)\n+{\n+  int i;\n+  gfc_code *do_code = code->block->next;\n+\n+  for (i = 1; i < depth; i++)\n+    {\n+      gfc_symbol *ivar = do_code->ext.iterator->var->symtree->n.sym;\n+      if (gfc_find_sym_in_expr (ivar, expr))\n+\treturn false;\n+      do_code = do_code->block->next;\n+    }\n+  return true;\n+}\n+\n+/* CODE is an OMP loop construct.  Return true if EXPR matches one of the\n+   canonical forms for a bound expression.  It may include references to\n+   an iteration variable outer to level DEPTH; set OUTER_VARP if so.  */\n+static bool\n+bound_expr_is_canonical (gfc_code *code, int depth, gfc_expr *expr,\n+\t\t\t gfc_symbol **outer_varp)\n+{\n+  gfc_expr *expr2 = NULL;\n+\n+  /* Rectangular case.  */\n+  if (depth == 0 || expr_is_invariant (code, depth, expr))\n+    return true;\n+\n+  /* Any simple variable that didn't pass expr_is_invariant must be\n+     an outer_var.  */\n+  if (expr->expr_type == EXPR_VARIABLE && expr->rank == 0)\n+    {\n+      *outer_varp = expr->symtree->n.sym;\n+      return true;\n+    }\n+\n+  /* All other permitted forms are binary operators.  */\n+  if (expr->expr_type != EXPR_OP)\n+    return false;\n+\n+  /* Check for plus/minus a loop invariant expr.  */\n+  if (expr->value.op.op == INTRINSIC_PLUS\n+      || expr->value.op.op == INTRINSIC_MINUS)\n+    {\n+      if (expr_is_invariant (code, depth, expr->value.op.op1))\n+\texpr2 = expr->value.op.op2;\n+      else if (expr_is_invariant (code, depth, expr->value.op.op2))\n+\texpr2 = expr->value.op.op1;\n+      else\n+\treturn false;\n+    }\n+  else\n+    expr2 = expr;\n+\n+  /* Check for a product with a loop-invariant expr.  */\n+  if (expr2->expr_type == EXPR_OP\n+      && expr2->value.op.op == INTRINSIC_TIMES)\n+    {\n+      if (expr_is_invariant (code, depth, expr2->value.op.op1))\n+\texpr2 = expr2->value.op.op2;\n+      else if (expr_is_invariant (code, depth, expr2->value.op.op2))\n+\texpr2 = expr2->value.op.op1;\n+      else\n+\treturn false;\n+    }\n+\n+  /* What's left must be a reference to an outer loop variable.  */\n+  if (expr2->expr_type == EXPR_VARIABLE\n+      && expr2->rank == 0\n+      && is_outer_iteration_variable (code, depth, expr2->symtree->n.sym))\n+    {\n+      *outer_varp = expr2->symtree->n.sym;\n+      return true;\n+    }\n+\n+  return false;\n+}\n+\n static void\n resolve_omp_do (gfc_code *code)\n {\n@@ -8564,8 +8663,15 @@ resolve_omp_do (gfc_code *code)\n       if (collapse <= 0)\n \tcollapse = 1;\n     }\n+\n+  /* While the spec defines the loop nest depth independently of the COLLAPSE\n+     clause, in practice the middle end only pays attention to the COLLAPSE\n+     depth and treats any further inner loops as the final-loop-body.  So\n+     here we also check canonical loop nest form only for the number of\n+     outer loops specified by the COLLAPSE clause too.  */\n   for (i = 1; i <= collapse; i++)\n     {\n+      gfc_symbol *start_var = NULL, *end_var = NULL;\n       if (do_code->op == EXEC_DO_WHILE)\n \t{\n \t  gfc_error (\"%s cannot be a DO WHILE or DO without loop control \"\n@@ -8606,26 +8712,43 @@ resolve_omp_do (gfc_code *code)\n \t\t\t       \"LINEAR at %L\", name, &do_code->loc);\n \t\t  break;\n \t\t}\n-      if (i > 1)\n+      if (is_outer_iteration_variable (code, i, dovar))\n \t{\n-\t  gfc_code *do_code2 = code->block->next;\n-\t  int j;\n-\n-\t  for (j = 1; j < i; j++)\n-\t    {\n-\t      gfc_symbol *ivar = do_code2->ext.iterator->var->symtree->n.sym;\n-\t      if (dovar == ivar\n-\t\t  || gfc_find_sym_in_expr (ivar, do_code->ext.iterator->start)\n-\t\t  || gfc_find_sym_in_expr (ivar, do_code->ext.iterator->end)\n-\t\t  || gfc_find_sym_in_expr (ivar, do_code->ext.iterator->step))\n-\t\t{\n-\t\t  gfc_error (\"%s collapsed loops don't form rectangular \"\n-\t\t\t     \"iteration space at %L\", name, &do_code->loc);\n-\t\t  break;\n-\t\t}\n-\t      do_code2 = do_code2->block->next;\n-\t    }\n+\t  gfc_error (\"%s iteration variable used in more than one loop at %L\",\n+\t\t     name, &do_code->loc);\n+\t  break;\n \t}\n+      else if (!bound_expr_is_canonical (code, i,\n+\t\t\t\t\t do_code->ext.iterator->start,\n+\t\t\t\t\t &start_var))\n+\t{\n+\t  gfc_error (\"%s loop start expression not in canonical form at %L\",\n+\t\t     name, &do_code->loc);\n+\t  break;\n+\t}\n+      else if (!bound_expr_is_canonical (code, i,\n+\t\t\t\t\t do_code->ext.iterator->end,\n+\t\t\t\t\t &end_var))\n+\t{\n+\t  gfc_error (\"%s loop end expression not in canonical form at %L\",\n+\t\t     name, &do_code->loc);\n+\t  break;\n+\t}\n+      else if (start_var && end_var && start_var != end_var)\n+\t{\n+\t  gfc_error (\"%s loop bounds reference different \"\n+\t\t     \"iteration variables at %L\", name, &do_code->loc);\n+\t  break;\n+\t}\n+      else if (!expr_is_invariant (code, i, do_code->ext.iterator->step))\n+\t{\n+\t  gfc_error (\"%s loop increment not in canonical form at %L\",\n+\t\t     name, &do_code->loc);\n+\t  break;\n+\t}\n+      if (start_var || end_var)\n+\tcode->ext.omp_clauses->non_rectangular = 1;\n+\n       for (c = do_code->next; c; c = c->next)\n \tif (c->op != EXEC_NOP && c->op != EXEC_CONTINUE)\n \t  {"}, {"sha": "baa45f78a0e6a042eb7a227e5a5882875f521625", "filename": "gcc/fortran/trans-openmp.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/705bcedf6eae2d7c68bd3df2c98dad4f06650fde/gcc%2Ffortran%2Ftrans-openmp.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/705bcedf6eae2d7c68bd3df2c98dad4f06650fde/gcc%2Ffortran%2Ftrans-openmp.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-openmp.cc?ref=705bcedf6eae2d7c68bd3df2c98dad4f06650fde", "patch": "@@ -5411,6 +5411,7 @@ gfc_trans_omp_do (gfc_code *code, gfc_exec_op op, stmtblock_t *pblock,\n   OMP_FOR_INCR (stmt) = incr;\n   if (orig_decls)\n     OMP_FOR_ORIG_DECLS (stmt) = orig_decls;\n+  OMP_FOR_NON_RECTANGULAR (stmt) = clauses->non_rectangular;\n   gfc_add_expr_to_block (&block, stmt);\n \n   vec_free (doacross_steps);"}, {"sha": "822e0cfbf220d0914be2c94773e81474f8949f7e", "filename": "gcc/gimplify.cc", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/705bcedf6eae2d7c68bd3df2c98dad4f06650fde/gcc%2Fgimplify.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/705bcedf6eae2d7c68bd3df2c98dad4f06650fde/gcc%2Fgimplify.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.cc?ref=705bcedf6eae2d7c68bd3df2c98dad4f06650fde", "patch": "@@ -12509,11 +12509,11 @@ gimplify_omp_for (tree *expr_p, gimple_seq *pre_p)\n \t\t\t       OMP_CLAUSE_SCHEDULE))\n \t    error_at (EXPR_LOCATION (for_stmt),\n \t\t      \"%qs clause may not appear on non-rectangular %qs\",\n-\t\t      \"schedule\", \"for\");\n+\t\t      \"schedule\", lang_GNU_Fortran () ? \"do\" : \"for\");\n \t  if (omp_find_clause (OMP_FOR_CLAUSES (for_stmt), OMP_CLAUSE_ORDERED))\n \t    error_at (EXPR_LOCATION (for_stmt),\n \t\t      \"%qs clause may not appear on non-rectangular %qs\",\n-\t\t      \"ordered\", \"for\");\n+\t\t      \"ordered\", lang_GNU_Fortran () ? \"do\" : \"for\");\n \t}\n       break;\n     case OMP_DISTRIBUTE:\n@@ -12528,6 +12528,19 @@ gimplify_omp_for (tree *expr_p, gimple_seq *pre_p)\n       ort = ORT_ACC;\n       break;\n     case OMP_TASKLOOP:\n+      if (OMP_FOR_NON_RECTANGULAR (inner_for_stmt ? inner_for_stmt : for_stmt))\n+\t{\n+\t  if (omp_find_clause (OMP_FOR_CLAUSES (for_stmt),\n+\t\t\t       OMP_CLAUSE_GRAINSIZE))\n+\t    error_at (EXPR_LOCATION (for_stmt),\n+\t\t      \"%qs clause may not appear on non-rectangular %qs\",\n+\t\t      \"grainsize\", \"taskloop\");\n+\t  if (omp_find_clause (OMP_FOR_CLAUSES (for_stmt),\n+\t\t\t       OMP_CLAUSE_NUM_TASKS))\n+\t    error_at (EXPR_LOCATION (for_stmt),\n+\t\t      \"%qs clause may not appear on non-rectangular %qs\",\n+\t\t      \"num_tasks\", \"taskloop\");\n+\t}\n       if (omp_find_clause (OMP_FOR_CLAUSES (for_stmt), OMP_CLAUSE_UNTIED))\n \tort = ORT_UNTIED_TASKLOOP;\n       else"}, {"sha": "24383ff04eaa51189e6227b2cd9de1252a4889ee", "filename": "gcc/testsuite/c-c++-common/gomp/loop-6.c", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/705bcedf6eae2d7c68bd3df2c98dad4f06650fde/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Floop-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/705bcedf6eae2d7c68bd3df2c98dad4f06650fde/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Floop-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Floop-6.c?ref=705bcedf6eae2d7c68bd3df2c98dad4f06650fde", "patch": "@@ -111,3 +111,17 @@ f2 (void)\n     for (j = i; j < 64; j++)\n       ;\n }\n+\n+void\n+f3 (void)\n+{\n+  int i = 0, j = 0;\n+  #pragma omp taskloop collapse(2) grainsize(4)\t/* { dg-error \"'grainsize' clause may not appear on non-rectangular 'taskloop'\" } */\n+  for (i = 0; i < 64; i++)\n+    for (j = i; j < 64; j++)\n+      ;\n+  #pragma omp taskloop collapse(2) num_tasks(4)\t/* { dg-error \"'num_tasks' clause may not appear on non-rectangular 'taskloop'\" } */\n+  for (i = 0; i < 64; i++)\n+    for (j = i; j < 64; j++)\n+      ;\n+}"}, {"sha": "c3de8c9644cfb80f6419dcd462ab63983bba7c5e", "filename": "gcc/testsuite/gfortran.dg/gomp/canonical-loop-1.f90", "status": "added", "additions": 224, "deletions": 0, "changes": 224, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/705bcedf6eae2d7c68bd3df2c98dad4f06650fde/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fcanonical-loop-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/705bcedf6eae2d7c68bd3df2c98dad4f06650fde/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fcanonical-loop-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fcanonical-loop-1.f90?ref=705bcedf6eae2d7c68bd3df2c98dad4f06650fde", "patch": "@@ -0,0 +1,224 @@\n+! { dg-do compile }\n+! { dg-options \"-fopenmp\" }\n+\n+! Test that all specified forms of canonical loop bounds are accepted,\n+! including non-rectangular loops.\n+\n+subroutine s1 (a1, a2)\n+  integer :: a1, a2\n+  integer :: i, j\n+\n+  !$omp do collapse(2)\n+  do i = 1, 16\n+    do j = a2, 16\n+    end do\n+  end do\n+\n+  !$omp do collapse(2)\n+  do i = 1, 16\n+    do j = i, 16\n+    end do\n+  end do\n+\n+  !$omp do collapse(2)\n+  do i = 1, 16\n+    do j = i + a2, 16\n+    end do\n+  end do\n+\n+  !$omp do collapse(2)\n+  do i = 1, 16\n+    do j = a2 + i, 16\n+    end do\n+  end do\n+\n+  !$omp do collapse(2)\n+  do i = 1, 16\n+    do j = i - a2, 16\n+    end do\n+  end do\n+\n+  !$omp do collapse(2)\n+  do i = 1, 16\n+    do j = a2 - i, 16\n+    end do\n+  end do\n+\n+  !$omp do collapse(2)\n+  do i = 1, 16\n+    do j = a1 * i, 16\n+    end do\n+  end do\n+\n+  !$omp do collapse(2)\n+  do i = 1, 16\n+    do j = a1 * i + a2, 16\n+    end do\n+  end do\n+\n+  !$omp do collapse(2)\n+  do i = 1, 16\n+    do j = a2 + a1 * i , 16\n+    end do\n+  end do\n+\n+  !$omp do collapse(2)\n+  do i = 1, 16\n+    do j = a1 * i - a2, 16\n+    end do\n+  end do\n+\n+  !$omp do collapse(2)\n+  do i = 1, 16\n+    do j = a2 - a1 * i, 16\n+    end do\n+  end do\n+\n+  !$omp do collapse(2)\n+  do i = 1, 16\n+    do j = i * a1, 16\n+    end do\n+  end do\n+\n+  !$omp do collapse(2)\n+  do i = 1, 16\n+    do j = i * a1 + a2, 16\n+    end do\n+  end do\n+\n+  !$omp do collapse(2)\n+  do i = 1, 16\n+    do j = a2 + i * a1, 16\n+    end do\n+  end do\n+\n+  !$omp do collapse(2)\n+  do i = 1, 16\n+    do j = i * a1 - a2, 16\n+    end do\n+  end do\n+\n+  !$omp do collapse(2)\n+  do i = 1, 16\n+    do j = a2 - i * a1, 16\n+    end do\n+  end do\n+\n+end subroutine\n+\n+\n+subroutine s2 (a1, a2)\n+  integer :: a1, a2\n+  integer :: i, j\n+\n+  !$omp do collapse(2)\n+  do i = 1, 16\n+    do j = 1, a2\n+    end do\n+  end do\n+\n+  !$omp do collapse(2)\n+  do i = 1, 16\n+    do j = 1, i\n+    end do\n+  end do\n+\n+  !$omp do collapse(2)\n+  do i = 1, 16\n+    do j = 1, i + a2\n+    end do\n+  end do\n+\n+  !$omp do collapse(2)\n+  do i = 1, 16\n+    do j = 1, a2 + i\n+    end do\n+  end do\n+\n+  !$omp do collapse(2)\n+  do i = 1, 16\n+    do j = 1, i - a2\n+    end do\n+  end do\n+\n+  !$omp do collapse(2)\n+  do i = 1, 16\n+    do j = 1, a2 - i\n+    end do\n+  end do\n+\n+  !$omp do collapse(2)\n+  do i = 1, 16\n+    do j = 1, a1 * i\n+    end do\n+  end do\n+\n+  !$omp do collapse(2)\n+  do i = 1, 16\n+    do j = 1, a1 * i + a2\n+    end do\n+  end do\n+\n+  !$omp do collapse(2)\n+  do i = 1, 16\n+    do j = 1, a2 + a1 * i \n+    end do\n+  end do\n+\n+  !$omp do collapse(2)\n+  do i = 1, 16\n+    do j = 1, a1 * i - a2\n+    end do\n+  end do\n+\n+  !$omp do collapse(2)\n+  do i = 1, 16\n+    do j = 1, a2 - a1 * i\n+    end do\n+  end do\n+\n+  !$omp do collapse(2)\n+  do i = 1, 16\n+    do j = 1, i * a1\n+    end do\n+  end do\n+\n+  !$omp do collapse(2)\n+  do i = 1, 16\n+    do j = 1, i * a1 + a2\n+    end do\n+  end do\n+\n+  !$omp do collapse(2)\n+  do i = 1, 16\n+    do j = 1, a2 + i * a1\n+    end do\n+  end do\n+\n+  !$omp do collapse(2)\n+  do i = 1, 16\n+    do j = 1, i * a1 - a2\n+    end do\n+  end do\n+\n+  !$omp do collapse(2)\n+  do i = 1, 16\n+    do j = 1, a2 - i * a1\n+    end do\n+  end do\n+\n+end subroutine\n+\n+subroutine s3 (a1, a2)\n+  integer :: a1, a2\n+  integer :: i, j, k\n+\n+  !$omp do collapse(3)\n+  do i = 1, 16\n+    do j = 1, i\n+      do k = j, 16\n+      end do\n+    end do\n+  end do\n+\n+end subroutine"}, {"sha": "7df006abd2799720a6f9564406487304c5b61677", "filename": "gcc/testsuite/gfortran.dg/gomp/canonical-loop-2.f90", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/705bcedf6eae2d7c68bd3df2c98dad4f06650fde/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fcanonical-loop-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/705bcedf6eae2d7c68bd3df2c98dad4f06650fde/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fcanonical-loop-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fcanonical-loop-2.f90?ref=705bcedf6eae2d7c68bd3df2c98dad4f06650fde", "patch": "@@ -0,0 +1,44 @@\n+! { dg-do compile }\n+! { dg-options \"-fopenmp\" }\n+\n+! Test that various non-canonical loops are rejected with a diagnostic.\n+\n+subroutine s1 (a1, a2)\n+  integer :: a1, a2\n+  integer :: i, j\n+\n+  !$omp do collapse(2)\n+  do i = 1, 16\n+    do j = i * i, 16    ! { dg-error \"not in canonical form\" }\n+    end do\n+  end do\n+\n+  !$omp do collapse(2)\n+  do i = 1, 16\n+    do j = MAX (i, 8), 16    ! { dg-error \"not in canonical form\" }\n+    end do\n+  end do\n+\n+  !$omp do collapse(2)\n+  do i = 1, 16\n+    do j = 1, 16, i    ! { dg-error \"not in canonical form\" }\n+    end do\n+  end do\n+\n+  !$omp do collapse(3)\n+  do i = 1, 16\n+    do j = 1, 16\n+      do k = i, j    ! { dg-error \"reference different iteration variables\" }\n+      end do\n+    end do\n+  end do\n+\n+  !$omp do collapse(3)\n+  do i = 1, 16\n+    do j = 1, 16\n+      do k = 1, i + j    !  { dg-error \"not in canonical form\" }\n+      end do\n+    end do\n+  end do\n+\n+end subroutine"}, {"sha": "77b2bdd7fcbb26abeeb0a670db24493db249f977", "filename": "gcc/testsuite/gfortran.dg/gomp/collapse1.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/705bcedf6eae2d7c68bd3df2c98dad4f06650fde/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fcollapse1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/705bcedf6eae2d7c68bd3df2c98dad4f06650fde/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fcollapse1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fcollapse1.f90?ref=705bcedf6eae2d7c68bd3df2c98dad4f06650fde", "patch": "@@ -19,7 +19,7 @@ subroutine collapse1\n     end do\n   !$omp parallel do collapse(2)\n     do i = 1, 5, 2\n-      do j = i + 1, 7, i\t! { dg-error \"collapsed loops don.t form rectangular iteration space\" }\n+      do j = i + 1, 7, i\t! { dg-error \"loop increment not in canonical form\" }\n       end do\n     end do\n   !$omp parallel do collapse(2) shared(j)\n@@ -49,7 +49,7 @@ subroutine collapse1_2\n   integer :: i\n   !$omp parallel do collapse(2)\n     do i = -6, 6\t\t! { dg-error \"cannot be redefined inside loop beginning\" }\n-      do i = 4, 6\t\t! { dg-error \"collapsed loops don.t form rectangular iteration space|cannot be redefined\" }\n+      do i = 4, 6\t\t! { dg-error \"iteration variable used in more than one loop|cannot be redefined\" }\n       end do\n     end do\n end subroutine collapse1_2"}, {"sha": "a7f41cb69cab1cae06a4c7f00ebfcf97413a5fc4", "filename": "gcc/testsuite/gfortran.dg/gomp/non-rectangular-loop.f90", "status": "added", "additions": 227, "deletions": 0, "changes": 227, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/705bcedf6eae2d7c68bd3df2c98dad4f06650fde/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fnon-rectangular-loop.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/705bcedf6eae2d7c68bd3df2c98dad4f06650fde/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fnon-rectangular-loop.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fnon-rectangular-loop.f90?ref=705bcedf6eae2d7c68bd3df2c98dad4f06650fde", "patch": "@@ -0,0 +1,227 @@\n+! { dg-do compile }\n+! { dg-options \"-fopenmp\" }\n+\n+! Test that errors are given for cases where there are constraints\n+! disallowing nonrectangular loops.\n+\n+! Work-sharing loop disallows \"schedule\" and \"ordered\" clauses.\n+\n+subroutine s1 (a1, a2)\n+  integer :: a1, a2\n+  integer :: i, j\n+\n+  !$omp do collapse(2) schedule(static)  ! { dg-error \"'schedule' clause may not appear on non-rectangular 'do'\" }\n+  do i = 1, 16\n+    do j = 1, i\n+    end do\n+  end do\n+\n+  !$omp do collapse(2) schedule(static)  ! { dg-error \"'schedule' clause may not appear on non-rectangular 'do'\" }\n+  do i = 1, 16\n+    do j = i, 16\n+    end do\n+  end do\n+\n+  !$omp do collapse(2) ordered  ! { dg-error \"'ordered' clause may not appear on non-rectangular 'do'\" }\n+  do i = 1, 16\n+    do j = 1, i\n+    end do\n+  end do\n+\n+  !$omp do collapse(2) ordered  ! { dg-error \"'ordered' clause may not appear on non-rectangular 'do'\" }\n+  do i = 1, 16\n+    do j = i, 16\n+    end do\n+  end do\n+\n+  ! Derived constructs\n+\n+  !$omp do simd collapse(2) schedule(static)  ! { dg-error \"'schedule' clause may not appear on non-rectangular 'do'\" }\n+  do i = 1, 16\n+    do j = 1, i\n+    end do\n+  end do\n+\n+  !$omp parallel do collapse(2) schedule(static)  ! { dg-error \"'schedule' clause may not appear on non-rectangular 'do'\" }\n+  do i = 1, 16\n+    do j = 1, i\n+    end do\n+  end do\n+\n+  !$omp parallel do simd collapse(2) schedule(static)  ! { dg-error \"'schedule' clause may not appear on non-rectangular 'do'\" }\n+  do i = 1, 16\n+    do j = 1, i\n+    end do\n+  end do\n+\n+  !$omp target parallel do collapse(2) schedule(static)  ! { dg-error \"'schedule' clause may not appear on non-rectangular 'do'\" }\n+  do i = 1, 16\n+    do j = 1, i\n+    end do\n+  end do\n+\n+  !$omp target parallel do collapse(2) schedule(static)  ! { dg-error \"'schedule' clause may not appear on non-rectangular 'do'\" }\n+  do i = 1, 16\n+    do j = 1, i\n+    end do\n+  end do\n+\n+end subroutine\n+\n+\n+! Distribute construct disallows \"dist_schedule\" clause.\n+\n+subroutine s2 (a1, a2)\n+  integer :: a1, a2\n+  integer :: i, j\n+\n+  !$omp distribute collapse(2) dist_schedule(static)  ! { dg-error \"'dist_schedule' clause may not appear on non-rectangular 'distribute'\" }\n+  do i = 1, 16\n+    do j = 1, i\n+    end do\n+  end do\n+\n+  !$omp distribute collapse(2) dist_schedule(static)  ! { dg-error \"'dist_schedule' clause may not appear on non-rectangular 'distribute'\" }\n+  do i = 1, 16\n+    do j = i, 16\n+    end do\n+  end do\n+\n+  ! Derived constructs\n+\n+  !$omp distribute simd collapse(2) dist_schedule(static)  ! { dg-error \"'dist_schedule' clause may not appear on non-rectangular 'distribute'\" }\n+  do i = 1, 16\n+    do j = i, 16\n+    end do\n+  end do\n+\n+  !$omp distribute parallel do collapse(2) dist_schedule(static)  ! { dg-error \"'dist_schedule' clause may not appear on non-rectangular 'distribute'\" }\n+  do i = 1, 16\n+    do j = i, 16\n+    end do\n+  end do\n+\n+  !$omp distribute parallel do simd collapse(2) dist_schedule(static)  ! { dg-error \"'dist_schedule' clause may not appear on non-rectangular 'distribute'\" }\n+  do i = 1, 16\n+    do j = i, 16\n+    end do\n+  end do\n+\n+  !$omp teams distribute collapse(2) dist_schedule(static)  ! { dg-error \"'dist_schedule' clause may not appear on non-rectangular 'distribute'\" }\n+  do i = 1, 16\n+    do j = i, 16\n+    end do\n+  end do\n+\n+  !$omp teams distribute simd collapse(2) dist_schedule(static)  ! { dg-error \"'dist_schedule' clause may not appear on non-rectangular 'distribute'\" }\n+  do i = 1, 16\n+    do j = i, 16\n+    end do\n+  end do\n+\n+  !$omp teams distribute parallel do collapse(2) dist_schedule(static)  ! { dg-error \"'dist_schedule' clause may not appear on non-rectangular 'distribute'\" }\n+  do i = 1, 16\n+    do j = i, 16\n+    end do\n+  end do\n+\n+  !$omp teams distribute parallel do simd collapse(2) dist_schedule(static)  ! { dg-error \"'dist_schedule' clause may not appear on non-rectangular 'distribute'\" }\n+  do i = 1, 16\n+    do j = i, 16\n+    end do\n+  end do\n+\n+  !$omp target teams distribute collapse(2) dist_schedule(static)  ! { dg-error \"'dist_schedule' clause may not appear on non-rectangular 'distribute'\" }\n+  do i = 1, 16\n+    do j = i, 16\n+    end do\n+  end do\n+\n+  !$omp target teams distribute simd collapse(2) dist_schedule(static)  ! { dg-error \"'dist_schedule' clause may not appear on non-rectangular 'distribute'\" }\n+  do i = 1, 16\n+    do j = i, 16\n+    end do\n+  end do\n+\n+  !$omp target teams distribute parallel do collapse(2) dist_schedule(static)  ! { dg-error \"'dist_schedule' clause may not appear on non-rectangular 'distribute'\" }\n+  do i = 1, 16\n+    do j = i, 16\n+    end do\n+  end do\n+\n+  !$omp target teams distribute parallel do simd collapse(2) dist_schedule(static)  ! { dg-error \"'dist_schedule' clause may not appear on non-rectangular 'distribute'\" }\n+  do i = 1, 16\n+    do j = i, 16\n+    end do\n+  end do\n+\n+end subroutine\n+\n+! Taskloop construct disallows \"grainsize\" and \"num_tasks\" clauses.\n+\n+subroutine s3 (a1, a2)\n+  integer :: a1, a2\n+  integer :: i, j\n+\n+  !$omp taskloop collapse(2) grainsize(4)  ! { dg-error \"'grainsize' clause may not appear on non-rectangular 'taskloop'\" }\n+  do i = 1, 16\n+    do j = 1, i\n+    end do\n+  end do\n+\n+  !$omp taskloop collapse(2) grainsize(4)  ! { dg-error \"'grainsize' clause may not appear on non-rectangular 'taskloop'\" }\n+  do i = 1, 16\n+    do j = i, 16\n+    end do\n+  end do\n+\n+  !$omp taskloop collapse(2) num_tasks(4)  ! { dg-error \"'num_tasks' clause may not appear on non-rectangular 'taskloop'\" }\n+  do i = 1, 16\n+    do j = 1, i\n+    end do\n+  end do\n+\n+  !$omp taskloop collapse(2) num_tasks(4)  ! { dg-error \"'num_tasks' clause may not appear on non-rectangular 'taskloop'\" }\n+  do i = 1, 16\n+    do j = i, 16\n+    end do\n+  end do\n+\n+  ! Derived constructs\n+\n+  !$omp taskloop simd collapse(2) grainsize(4)  ! { dg-error \"'grainsize' clause may not appear on non-rectangular 'taskloop'\" }\n+  do i = 1, 16\n+    do j = 1, i\n+    end do\n+  end do\n+\n+  !$omp masked taskloop collapse(2) grainsize(4)  ! { dg-error \"'grainsize' clause may not appear on non-rectangular 'taskloop'\" }\n+  do i = 1, 16\n+    do j = 1, i\n+    end do\n+  end do\n+\n+  !$omp masked taskloop simd collapse(2) grainsize(4)  ! { dg-error \"'grainsize' clause may not appear on non-rectangular 'taskloop'\" }\n+  do i = 1, 16\n+    do j = 1, i\n+    end do\n+  end do\n+\n+  !$omp parallel masked taskloop collapse(2) grainsize(4)  ! { dg-error \"'grainsize' clause may not appear on non-rectangular 'taskloop'\" }\n+  do i = 1, 16\n+    do j = 1, i\n+    end do\n+  end do\n+\n+  !$omp parallel masked taskloop simd collapse(2) grainsize(4)  ! { dg-error \"'grainsize' clause may not appear on non-rectangular 'taskloop'\" }\n+  do i = 1, 16\n+    do j = 1, i\n+    end do\n+  end do\n+\n+end subroutine\n+\n+! TODO: not yet implemented\n+! The tile construct disallows all non-rectangular loops.\n+\n+"}, {"sha": "e0401a5fdec4a979106e7e5dc2884641ef19deec", "filename": "gcc/testsuite/gfortran.dg/gomp/pr85313.f90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/705bcedf6eae2d7c68bd3df2c98dad4f06650fde/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fpr85313.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/705bcedf6eae2d7c68bd3df2c98dad4f06650fde/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fpr85313.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fpr85313.f90?ref=705bcedf6eae2d7c68bd3df2c98dad4f06650fde", "patch": "@@ -3,22 +3,22 @@\n \n !$omp do collapse(3)\n   do i = 1, 10\n-    do j = i, 20\t! { dg-error \"form rectangular iteration space\" }\n+    do j = i, 20\n       do k = 1, 2\n       end do\n     end do\n   end do\n !$omp do collapse(3)\n   do i = 1, 10\n     do j = 1, 5\n-      do k = i, 20\t! { dg-error \"form rectangular iteration space\" }\n+      do k = i, 20\n       end do\n     end do\n   end do\n !$omp do collapse(3)\n   do i = 1, 10\n     do j = 1, 5\n-      do k = j, 20\t! { dg-error \"form rectangular iteration space\" }\n+      do k = j, 20\n       end do\n     end do\n   end do"}]}