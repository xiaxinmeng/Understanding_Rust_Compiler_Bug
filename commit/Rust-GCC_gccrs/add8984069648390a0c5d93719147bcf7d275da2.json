{"sha": "add8984069648390a0c5d93719147bcf7d275da2", "node_id": "C_kwDOANBUbNoAKGFkZDg5ODQwNjk2NDgzOTBhMGM1ZDkzNzE5MTQ3YmNmN2QyNzVkYTI", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-11-18T18:09:19Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-11-18T18:09:19Z"}, "message": "Daily bump.", "tree": {"sha": "09a2e7f32cc043f330ea67f0b2d5a10977e7ed20", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/09a2e7f32cc043f330ea67f0b2d5a10977e7ed20"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/add8984069648390a0c5d93719147bcf7d275da2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/add8984069648390a0c5d93719147bcf7d275da2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/add8984069648390a0c5d93719147bcf7d275da2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/add8984069648390a0c5d93719147bcf7d275da2/comments", "author": null, "committer": null, "parents": [{"sha": "f003fdff961bed54d67ff07bf55855bb1c4d76bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f003fdff961bed54d67ff07bf55855bb1c4d76bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f003fdff961bed54d67ff07bf55855bb1c4d76bb"}], "stats": {"total": 269, "additions": 268, "deletions": 1}, "files": [{"sha": "1a1c5cfb1fbf02238e6cbb26bd23d354ce1ea34c", "filename": "contrib/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/add8984069648390a0c5d93719147bcf7d275da2/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/add8984069648390a0c5d93719147bcf7d275da2/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=add8984069648390a0c5d93719147bcf7d275da2", "patch": "@@ -1,3 +1,8 @@\n+2022-11-18  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* gcc-changelog/git_update_version.py: Add\n+\t1957bedf29a1b2cc231972aba680fe80199d5498 to ignored commits.\n+\n 2022-11-15  Martin Liska  <mliska@suse.cz>\n \n \t* gcc-changelog/git_commit.py: Revert temporary rule"}, {"sha": "6cb657803d4407bcf27a4ad504aa9a6342a91765", "filename": "gcc/ChangeLog", "status": "modified", "additions": 132, "deletions": 0, "changes": 132, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/add8984069648390a0c5d93719147bcf7d275da2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/add8984069648390a0c5d93719147bcf7d275da2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=add8984069648390a0c5d93719147bcf7d275da2", "patch": "@@ -1,3 +1,135 @@\n+2022-11-18  Andrew Pinski  <apinski@marvell.com>\n+\n+\tPR middle-end/107705\n+\t* function.cc (aggregate_value_p): Return 0 if\n+\tthe function type was an error operand.\n+\n+2022-11-18  Andrew Pinski  <apinski@marvell.com>\n+\n+\tPR c/106764\n+\tPR c/106765\n+\tPR c/107307\n+\t* gimplify.cc (gimplify_compound_lval): Return GS_ERROR\n+\tif gimplify_expr had return GS_ERROR.\n+\t(gimplify_call_expr): Likewise.\n+\n+2022-11-18  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* config/aarch64/atomics.md (*aarch64_atomic_load<ALLX:mode>_rcpc_sext):\n+\tUse <GPI:w>  for destination format.\n+\t* config/aarch64/iterators.md (w_sz): Delete.\n+\n+2022-11-18  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* config/aarch64/aarch64.h (TARGET_RCPC2): Define.\n+\t* config/aarch64/atomics.md (*aarch64_atomic_load<ALLX:mode>_rcpc_zext):\n+\tAdjust output template.\n+\t(*aarch64_atomic_load<ALLX:mode>_rcpc_sex): Guard on TARGET_RCPC2.\n+\tAdjust output template.\n+\t* config/aarch64/iterators.md (w_sz): New mode attr.\n+\n+2022-11-18  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/107647\n+\t* tree-vect-slp-patterns.cc (addsub_pattern::recognize): Only\n+\tallow FMA generation with -ffp-contract=fast for FP types.\n+\t(complex_mul_pattern::matches): Likewise.\n+\n+2022-11-18  Jinyang He  <hejinyang@loongson.cn>\n+\n+\tPR target/107713\n+\t* config/loongarch/sync.md\n+\t(atomic_cas_value_exchange_7_<mode>): New define_insn.\n+\t(atomic_exchange): Use atomic_cas_value_exchange_7_si instead of\n+\tatomic_cas_value_cmp_and_7_si.\n+\n+2022-11-17  Andrew Pinski  <apinski@marvell.com>\n+\n+\tPR middle-end/107734\n+\t* match.pd (perm + vector op pattern): Clear the sbitmap before\n+\tuse.\n+\n+2022-11-17  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\tPR tree-optimization/107732\n+\t* range-op-float.cc (foperator_abs::op1_range): Early exit when\n+\tresult is undefined.\n+\n+2022-11-17  Philipp Tomsich  <philipp.tomsich@vrull.eu>\n+\n+\t* config/riscv/bitmanip.md (*bclri<mode>_nottwobits): New pattern.\n+\t(*bclridisi_nottwobits): New pattern, handling the sign-bit.\n+\t* config/riscv/predicates.md (const_nottwobits_operand):\n+\tNew predicate.\n+\n+2022-11-17  mtsamis  <manolis.tsamis@vrull.eu>\n+\n+\t* config/riscv/riscv.cc (struct machine_function): Add array to store\n+\tregister wrapping information.\n+\t(riscv_for_each_saved_reg): Skip registers that are wrapped separetely.\n+\t(riscv_get_separate_components): New function.\n+\t(riscv_components_for_bb): Likewise.\n+\t(riscv_disqualify_components): Likewise.\n+\t(riscv_process_components): Likewise.\n+\t(riscv_emit_prologue_components): Likewise.\n+\t(riscv_emit_epilogue_components): Likewise.\n+\t(riscv_set_handled_components): Likewise.\n+\t(TARGET_SHRINK_WRAP_GET_SEPARATE_COMPONENTS): Define.\n+\t(TARGET_SHRINK_WRAP_COMPONENTS_FOR_BB): Likewise.\n+\t(TARGET_SHRINK_WRAP_DISQUALIFY_COMPONENTS): Likewise.\n+\t(TARGET_SHRINK_WRAP_EMIT_PROLOGUE_COMPONENTS): Likewise.\n+\t(TARGET_SHRINK_WRAP_EMIT_EPILOGUE_COMPONENTS): Likewise.\n+\t(TARGET_SHRINK_WRAP_SET_HANDLED_COMPONENTS): Likewise.\n+\n+2022-11-17  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* config/aarch64/atomics.md (*aarch64_atomic_load<ALLX:mode>_rcpc_zext):\n+\tAdd mode size check to condition.\n+\t(*aarch64_atomic_load<ALLX:mode>_rcpc_sext): Likewise.\n+\n+2022-11-17  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\tPR tree-optimization/68097\n+\t* gimple-fold.cc (gimple_stmt_nonnegative_warnv_p): Call\n+\trange_of_stmt for floats.\n+\n+2022-11-17  Lili Cui  <lili.cui@intel.com>\n+\n+\t* config/i386/x86-tune.def\n+\t(X86_TUNE_AVX256_MOVE_BY_PIECES): Add alderlake.\n+\t(X86_TUNE_AVX256_STORE_BY_PIECES): Ditto.\n+\n+2022-11-17  Tamar Christina  <tamar.christina@arm.com>\n+\n+\tPR tree-optimization/107717\n+\t* match.pd: Ensure same SSA_NAME.\n+\n+2022-11-17  Tamar Christina  <tamar.christina@arm.com>\n+\n+\t* match.pd: Replace GET_MODE_WIDER_MODE with\n+\tcustom code.\n+\n+2022-11-17  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* range-op-float.cc (range_operator_float::fold_range): Make check\n+\tfor maybe_isnan more readable.\n+\n+2022-11-17  Kewen Lin  <linkw@linux.ibm.com>\n+\n+\t* gimple-fold.cc (gimple_fold_partial_load_store_mem_ref): Use\n+\ttree_fits_shwi_p rather than tree_fits_uhwi_p as bias is signed.\n+\n+2022-11-17  Jia-Wei Chen  <jiawei@iscas.ac.cn>\n+\n+\t* config/riscv/riscv.cc (riscv_expand_epilogue):\n+\tDo not emit useless add sp, sp, 0 instrutions.\n+\n+2022-11-17  Jeff Law  <jlaw@ventanamicro.com>\n+\n+\t* config/sh/sh_treg_combine.cc: Include tm-preds.h.\n+\t(t_reg_operand): Remove bogus prototype.\n+\t(negt_reg_operand): Likewise.\n+\n 2022-11-16  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/106649"}, {"sha": "578404781e679f8fca251f6b9bc179f9fde01ffe", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/add8984069648390a0c5d93719147bcf7d275da2/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/add8984069648390a0c5d93719147bcf7d275da2/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=add8984069648390a0c5d93719147bcf7d275da2", "patch": "@@ -1 +1 @@\n-20221117\n+20221118"}, {"sha": "2ef65a89f82a29b39e05035fe6de0d0de13b2f53", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/add8984069648390a0c5d93719147bcf7d275da2/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/add8984069648390a0c5d93719147bcf7d275da2/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=add8984069648390a0c5d93719147bcf7d275da2", "patch": "@@ -1,3 +1,15 @@\n+2022-11-17  Bernhard Reutner-Fischer  <aldot@gcc.gnu.org>\n+\n+\t* c-decl.cc (start_function): Set the result decl source\n+\tlocation to the location of the typespec.\n+\n+2022-11-17  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/107711\n+\t* c-parser.cc (ana::c_translation_unit::consider_macro): Pass NULL\n+\tto cpp_create_reader, rather than ident_hash, so that the new\n+\treader gets its own hash table.\n+\n 2022-11-15  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR analyzer/106302"}, {"sha": "acf78b6c0d57ec737109893f27ba04d12f43cb0d", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/add8984069648390a0c5d93719147bcf7d275da2/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/add8984069648390a0c5d93719147bcf7d275da2/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=add8984069648390a0c5d93719147bcf7d275da2", "patch": "@@ -1,3 +1,16 @@\n+2022-11-18  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* decl.cc (grokdeclarator): Implement\n+\tCWG2635 - Constrained structured bindings.  Emit a pedwarn on\n+\tconstrained auto type.  Add auto_diagnostic_group for error_at\n+\tand inform for non-auto type on structured bindings declaration.\n+\n+2022-11-18  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/104066\n+\t* decl.cc (grokdeclarator): Check funcdecl_p before complaining\n+\tabout constinit.\n+\n 2022-11-16  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/106649"}, {"sha": "08ed6caefa238d6c766455b8ae3dd695c6f40717", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/add8984069648390a0c5d93719147bcf7d275da2/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/add8984069648390a0c5d93719147bcf7d275da2/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=add8984069648390a0c5d93719147bcf7d275da2", "patch": "@@ -1,3 +1,8 @@\n+2022-11-17  Bernhard Reutner-Fischer  <aldot@gcc.gnu.org>\n+\n+\tPR fortran/99884\n+\t* io.cc (check_open_constraints): Remove double spaces.\n+\n 2022-11-16  Steve Kargl  <kargl@gcc.gnu.org>\n \n \tPR fortran/107707"}, {"sha": "cf3b7fc312e9187f4a777d381f68aa8f4641c2d9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 93, "deletions": 0, "changes": 93, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/add8984069648390a0c5d93719147bcf7d275da2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/add8984069648390a0c5d93719147bcf7d275da2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=add8984069648390a0c5d93719147bcf7d275da2", "patch": "@@ -1,3 +1,96 @@\n+2022-11-18  Andrew Pinski  <apinski@marvell.com>\n+\n+\t* gcc.dg/redecl-22.c: New test.\n+\n+2022-11-18  Andrew Pinski  <apinski@marvell.com>\n+\n+\tPR c/106764\n+\tPR c/106765\n+\tPR c/107307\n+\t* gcc.dg/redecl-19.c: New test.\n+\t* gcc.dg/redecl-20.c: New test.\n+\t* gcc.dg/redecl-21.c: New test.\n+\n+2022-11-18  Yixuan Chen  <chenyixuan@iscas.ac.cn>\n+\n+\t* gcc.dg/pr25521.c: Fix testcase for architectures that use .srodata.\n+\n+2022-11-18  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* gcc.target/aarch64/ldapr-sext.c: Adjust expected output.\n+\n+2022-11-18  Torbj\u00f6rn SVENSSON  <torbjorn.svensson@foss.st.com>\n+\n+\t* lib/target-supports.exp (check_is_prog_name_available):\n+\tNew.\n+\t* lib/target-supports-dg.exp\n+\t(dg-require-prog-name-available): New.\n+\t* g++.dg/modules/modules.exp: Verify avilability of module\n+\tmapper.\n+\n+2022-11-18  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* gcc.target/aarch64/ldapr-ext.c: Rename to...\n+\t* gcc.target/aarch64/ldapr-zext.c: ... This.  Fix expected assembly.\n+\t* gcc.target/aarch64/ldapr-sext.c: New test.\n+\n+2022-11-18  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* g++.dg/cpp2a/decomp5.C: New test.\n+\t* g++.dg/cpp2a/decomp6.C: New test.\n+\t* g++.dg/cpp2a/decomp7.C: New test.\n+\t* g++.dg/cpp2a/concepts-placeholder7.C: Adjust expected diagnostics.\n+\t* g++.dg/cpp2a/concepts-placeholder8.C: Likewise.\n+\t* g++.dg/cpp2a/concepts-placeholder9.C: New test.\n+\t* g++.dg/cpp2a/concepts-placeholder10.C: New test.\n+\n+2022-11-18  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/107647\n+\t* gcc.target/i386/pr107647.c: New testcase.\n+\n+2022-11-18  Jinyang He  <hejinyang@loongson.cn>\n+\n+\tPR target/107713\n+\t* gcc.target/loongarch/pr107713-1.c: New test.\n+\t* gcc.target/loongarch/pr107713-2.c: New test.\n+\n+2022-11-18  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/104066\n+\t* g++.dg/cpp2a/constinit18.C: New test.\n+\n+2022-11-17  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\tPR tree-optimization/107732\n+\t* gcc.dg/tree-ssa/pr107732.c: New test.\n+\n+2022-11-17  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/107711\n+\t* gcc.dg/analyzer/named-constants-Wunused-macros.c: New test.\n+\n+2022-11-17  Philipp Tomsich  <philipp.tomsich@vrull.eu>\n+\n+\t* gcc.target/riscv/zbs-bclri.c: New test.\n+\n+2022-11-17  mtsamis  <manolis.tsamis@vrull.eu>\n+\n+\t* gcc.target/riscv/shrink-wrap-1.c: New test.\n+\n+2022-11-17  Lili Cui  <lili.cui@intel.com>\n+\n+\t* gcc.target/i386/pieces-memset-50.c: New test.\n+\n+2022-11-17  Tamar Christina  <tamar.christina@arm.com>\n+\n+\tPR tree-optimization/107717\n+\t* gcc.target/aarch64/sve2/pr107717.c: New test.\n+\n+2022-11-17  Jia-Wei Chen  <jiawei@iscas.ac.cn>\n+\n+\t* gcc.target/riscv/rvv/base/spill-sp-adjust.c: New test.\n+\n 2022-11-16  David Malcolm  <dmalcolm@redhat.com>\n \n \t* gcc.dg/analyzer/named-constants-via-command-line.c: New test."}, {"sha": "b9fc8fd9f426790d40043e35dfde1e8164ff26ac", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/add8984069648390a0c5d93719147bcf7d275da2/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/add8984069648390a0c5d93719147bcf7d275da2/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=add8984069648390a0c5d93719147bcf7d275da2", "patch": "@@ -1,3 +1,10 @@\n+2022-11-17  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/107720\n+\t* include/std/format [_GLIBCXX_LONG_DOUBLE_ALT128_COMPAT]:\n+\tDeclare overloads of std::to_chars for the alternative long\n+\tdouble type.\n+\n 2022-11-16  Jonathan Wakely  <jwakely@redhat.com>\n \n \tPR libstdc++/107720"}]}