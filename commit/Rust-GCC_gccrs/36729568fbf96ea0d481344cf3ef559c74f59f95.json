{"sha": "36729568fbf96ea0d481344cf3ef559c74f59f95", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzY3Mjk1NjhmYmY5NmVhMGQ0ODEzNDRjZjNlZjU1OWM3NGY1OWY5NQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2019-07-18T16:51:00Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2019-07-18T16:51:00Z"}, "message": "compiler: fix bug in importing blocks from inline functions\n    \n    This patch fixes a buglet in the function body importer. Add hooks for\n    keeping a stack of blocks corresponding to the block nesting in the\n    imported function. This ensures that local variables and temps wind up\n    correctly scoped and don't introduce collisions.\n    \n    New test case for this problem in CL 186717.\n    \n    Fixes golang/go#33158.\n    \n    Reviewed-on: https://go-review.googlesource.com/c/gofrontend/+/186757\n\nFrom-SVN: r273577", "tree": {"sha": "f69963b61a1183cdb2ba1bcaf21e751295ab420f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f69963b61a1183cdb2ba1bcaf21e751295ab420f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/36729568fbf96ea0d481344cf3ef559c74f59f95", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36729568fbf96ea0d481344cf3ef559c74f59f95", "html_url": "https://github.com/Rust-GCC/gccrs/commit/36729568fbf96ea0d481344cf3ef559c74f59f95", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36729568fbf96ea0d481344cf3ef559c74f59f95/comments", "author": null, "committer": null, "parents": [{"sha": "a6fc663e311b2b862373e4a4f3ee7d6836acb1a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6fc663e311b2b862373e4a4f3ee7d6836acb1a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6fc663e311b2b862373e4a4f3ee7d6836acb1a2"}], "stats": {"total": 47, "additions": 38, "deletions": 9}, "files": [{"sha": "ccc1a24be26bce25d991a31a762502b53d84d362", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36729568fbf96ea0d481344cf3ef559c74f59f95/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36729568fbf96ea0d481344cf3ef559c74f59f95/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=36729568fbf96ea0d481344cf3ef559c74f59f95", "patch": "@@ -1,4 +1,4 @@\n-19ed722fb3ae5e618c746da20efb79fc837337cd\n+4df7c8d7af894ee93f50c3a50debdcf4e369a2c6\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "be71f041050a7206d19145825213505f874da0d3", "filename": "gcc/go/gofrontend/import.cc", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36729568fbf96ea0d481344cf3ef559c74f59f95/gcc%2Fgo%2Fgofrontend%2Fimport.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36729568fbf96ea0d481344cf3ef559c74f59f95/gcc%2Fgo%2Fgofrontend%2Fimport.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fimport.cc?ref=36729568fbf96ea0d481344cf3ef559c74f59f95", "patch": "@@ -1535,6 +1535,26 @@ Stream_from_file::do_advance(size_t skip)\n \n // Class Import_function_body.\n \n+Import_function_body::Import_function_body(Gogo* gogo,\n+                                           Import* imp,\n+                                           Named_object* named_object,\n+                                           const std::string& body,\n+                                           size_t off,\n+                                           Block* block,\n+                                           int indent)\n+    : gogo_(gogo), imp_(imp), named_object_(named_object), body_(body),\n+      off_(off), indent_(indent), temporaries_(), labels_(),\n+      saw_error_(false)\n+{\n+  this->blocks_.push_back(block);\n+}\n+\n+Import_function_body::~Import_function_body()\n+{\n+  // At this point we should be left with the original outer block only.\n+  go_assert(saw_errors() || this->blocks_.size() == 1);\n+}\n+\n // The name of the function we are parsing.\n \n const std::string&"}, {"sha": "a78e48b7ca0d49e1d93e190206dd3d41eb6e3b33", "filename": "gcc/go/gofrontend/import.h", "status": "modified", "additions": 15, "deletions": 8, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36729568fbf96ea0d481344cf3ef559c74f59f95/gcc%2Fgo%2Fgofrontend%2Fimport.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36729568fbf96ea0d481344cf3ef559c74f59f95/gcc%2Fgo%2Fgofrontend%2Fimport.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fimport.h?ref=36729568fbf96ea0d481344cf3ef559c74f59f95", "patch": "@@ -593,11 +593,8 @@ class Import_function_body : public Import_expression\n  public:\n   Import_function_body(Gogo* gogo, Import* imp, Named_object* named_object,\n \t\t       const std::string& body, size_t off, Block* block,\n-\t\t       int indent)\n-    : gogo_(gogo), imp_(imp), named_object_(named_object), body_(body),\n-      off_(off), block_(block), indent_(indent), temporaries_(), labels_(),\n-      saw_error_(false)\n-  { }\n+\t\t       int indent);\n+  ~Import_function_body();\n \n   // The IR.\n   Gogo*\n@@ -637,7 +634,17 @@ class Import_function_body : public Import_expression\n   // The current block.\n   Block*\n   block()\n-  { return this->block_; }\n+  { return this->blocks_.back(); }\n+\n+  // Begin importing a new block BLOCK nested within the current block.\n+  void\n+  begin_block(Block *block)\n+  { this->blocks_.push_back(block); }\n+\n+  // Record the fact that we're done importing the current block.\n+  void\n+  finish_block()\n+  { this->blocks_.pop_back(); }\n \n   // The current indentation.\n   int\n@@ -757,8 +764,8 @@ class Import_function_body : public Import_expression\n   const std::string& body_;\n   // The current offset into body_.\n   size_t off_;\n-  // Current block.\n-  Block* block_;\n+  // Stack to record nesting of blocks being imported.\n+  std::vector<Block *> blocks_;\n   // Current expected indentation level.\n   int indent_;\n   // Temporary statements by index."}, {"sha": "27c4b95781d7aa532c86a2cb63179255ab2ff514", "filename": "gcc/go/gofrontend/statements.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36729568fbf96ea0d481344cf3ef559c74f59f95/gcc%2Fgo%2Fgofrontend%2Fstatements.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36729568fbf96ea0d481344cf3ef559c74f59f95/gcc%2Fgo%2Fgofrontend%2Fstatements.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fstatements.cc?ref=36729568fbf96ea0d481344cf3ef559c74f59f95", "patch": "@@ -2176,7 +2176,9 @@ Block_statement::do_import(Import_function_body* ifb, Location loc,\n   ifb->set_off(nl + 1);\n   ifb->increment_indent();\n   Block* block = new Block(ifb->block(), loc);\n+  ifb->begin_block(block);\n   bool ok = Block::import_block(block, ifb, loc);\n+  ifb->finish_block();\n   ifb->decrement_indent();\n   if (!ok)\n     return NULL;"}]}