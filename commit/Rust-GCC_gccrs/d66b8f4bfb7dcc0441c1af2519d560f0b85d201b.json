{"sha": "d66b8f4bfb7dcc0441c1af2519d560f0b85d201b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDY2YjhmNGJmYjdkY2MwNDQxYzFhZjI1MTlkNTYwZjBiODVkMjAxYg==", "commit": {"author": {"name": "Andrey Belevantsev", "email": "abel@ispras.ru", "date": "2012-04-13T09:36:42Z"}, "committer": {"name": "Andrey Belevantsev", "email": "abel@gcc.gnu.org", "date": "2012-04-13T09:36:42Z"}, "message": "re PR rtl-optimization/52203 (ICE: in reset_sched_cycles_in_current_ebb, at sel-sched.c:7136 with -fsel-sched-pipelining -fselective-scheduling2 and other custom flags)\n\n        PR rtl-optimization/52203\n        PR rtl-optimization/52715\n\n        Revert the 2012-03-07 fix for PR 52203.\n        * sel-sched.c (reset_sched_cycles_in_current_ebb): Check that\n        the insn does not modify DFA right before issuing, adjust\n        issue_rate accordingly.\n\nFrom-SVN: r186410", "tree": {"sha": "b3ac87c736a413b3a27159041e762bb457b93798", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b3ac87c736a413b3a27159041e762bb457b93798"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d66b8f4bfb7dcc0441c1af2519d560f0b85d201b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d66b8f4bfb7dcc0441c1af2519d560f0b85d201b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d66b8f4bfb7dcc0441c1af2519d560f0b85d201b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d66b8f4bfb7dcc0441c1af2519d560f0b85d201b/comments", "author": {"login": "abonzo", "id": 20396542, "node_id": "MDQ6VXNlcjIwMzk2NTQy", "avatar_url": "https://avatars.githubusercontent.com/u/20396542?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abonzo", "html_url": "https://github.com/abonzo", "followers_url": "https://api.github.com/users/abonzo/followers", "following_url": "https://api.github.com/users/abonzo/following{/other_user}", "gists_url": "https://api.github.com/users/abonzo/gists{/gist_id}", "starred_url": "https://api.github.com/users/abonzo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abonzo/subscriptions", "organizations_url": "https://api.github.com/users/abonzo/orgs", "repos_url": "https://api.github.com/users/abonzo/repos", "events_url": "https://api.github.com/users/abonzo/events{/privacy}", "received_events_url": "https://api.github.com/users/abonzo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1e867b228fc67a773e682bfd75ebd6ea3ce0a95e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e867b228fc67a773e682bfd75ebd6ea3ce0a95e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e867b228fc67a773e682bfd75ebd6ea3ce0a95e"}], "stats": {"total": 35, "additions": 24, "deletions": 11}, "files": [{"sha": "9d1e58fb27ba30ab1bb70887760eb3fda1f83f98", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d66b8f4bfb7dcc0441c1af2519d560f0b85d201b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d66b8f4bfb7dcc0441c1af2519d560f0b85d201b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d66b8f4bfb7dcc0441c1af2519d560f0b85d201b", "patch": "@@ -1,3 +1,13 @@\n+2012-04-13  Andrey Belevantsev  <abel@ispras.ru>\n+\n+\tPR rtl-optimization/52203\n+\tPR rtl-optimization/52715\n+\n+\tRevert the 2012-03-07 fix for PR 52203.\n+\t* sel-sched.c (reset_sched_cycles_in_current_ebb): Check that\n+\tthe insn does not modify DFA right before issuing, adjust\n+\tissue_rate accordingly.\n+\n 2012-04-13  Richard Guenther  <rguenther@suse.de>\n \n \tPR c/52549"}, {"sha": "ce38fa0e59fbd07ae3bce698e08b80279c934f8c", "filename": "gcc/sel-sched.c", "status": "modified", "additions": 14, "deletions": 11, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d66b8f4bfb7dcc0441c1af2519d560f0b85d201b/gcc%2Fsel-sched.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d66b8f4bfb7dcc0441c1af2519d560f0b85d201b/gcc%2Fsel-sched.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsel-sched.c?ref=d66b8f4bfb7dcc0441c1af2519d560f0b85d201b", "patch": "@@ -4265,10 +4265,9 @@ invoke_aftermath_hooks (fence_t fence, rtx best_insn, int issue_more)\n   return issue_more;\n }\n \n-/* Estimate the cost of issuing INSN on DFA state STATE.  Write to PEMPTY\n-   true when INSN does not change the processor state.  */\n+/* Estimate the cost of issuing INSN on DFA state STATE.  */\n static int\n-estimate_insn_cost (rtx insn, state_t state, bool *pempty)\n+estimate_insn_cost (rtx insn, state_t state)\n {\n   static state_t temp = NULL;\n   int cost;\n@@ -4278,8 +4277,6 @@ estimate_insn_cost (rtx insn, state_t state, bool *pempty)\n \n   memcpy (temp, state, dfa_state_size);\n   cost = state_transition (temp, insn);\n-  if (pempty)\n-    *pempty = (memcmp (temp, state, dfa_state_size) == 0);\n \n   if (cost < 0)\n     return 0;\n@@ -4310,7 +4307,7 @@ get_expr_cost (expr_t expr, fence_t fence)\n \treturn 0;\n     }\n   else\n-    return estimate_insn_cost (insn, FENCE_STATE (fence), NULL);\n+    return estimate_insn_cost (insn, FENCE_STATE (fence));\n }\n \n /* Find the best insn for scheduling, either via max_issue or just take\n@@ -7023,7 +7020,7 @@ reset_sched_cycles_in_current_ebb (void)\n     {\n       int cost, haifa_cost;\n       int sort_p;\n-      bool asm_p, real_insn, after_stall, all_issued, empty;\n+      bool asm_p, real_insn, after_stall, all_issued;\n       int clock;\n \n       if (!INSN_P (insn))\n@@ -7050,7 +7047,7 @@ reset_sched_cycles_in_current_ebb (void)\n \t    haifa_cost = 0;\n \t}\n       else\n-        haifa_cost = estimate_insn_cost (insn, curr_state, &empty);\n+        haifa_cost = estimate_insn_cost (insn, curr_state);\n \n       /* Stall for whatever cycles we've stalled before.  */\n       after_stall = 0;\n@@ -7084,7 +7081,7 @@ reset_sched_cycles_in_current_ebb (void)\n               if (!after_stall\n                   && real_insn\n                   && haifa_cost > 0\n-                  && estimate_insn_cost (insn, curr_state, NULL) == 0)\n+                  && estimate_insn_cost (insn, curr_state) == 0)\n                 break;\n \n               /* When the data dependency stall is longer than the DFA stall,\n@@ -7096,7 +7093,7 @@ reset_sched_cycles_in_current_ebb (void)\n               if ((after_stall || all_issued)\n                   && real_insn\n                   && haifa_cost == 0)\n-                haifa_cost = estimate_insn_cost (insn, curr_state, NULL);\n+                haifa_cost = estimate_insn_cost (insn, curr_state);\n             }\n \n \t  haifa_clock += i;\n@@ -7127,8 +7124,14 @@ reset_sched_cycles_in_current_ebb (void)\n \n       if (real_insn)\n \t{\n+\t  static state_t temp = NULL;\n+\n+\t  if (!temp)\n+\t    temp = xmalloc (dfa_state_size);\n+\t  memcpy (temp, curr_state, dfa_state_size);\n+\n \t  cost = state_transition (curr_state, insn);\n-\t  if (!empty)\n+\t  if (memcmp (temp, curr_state, dfa_state_size))\n \t    issued_insns++;\n \n           if (sched_verbose >= 2)"}]}