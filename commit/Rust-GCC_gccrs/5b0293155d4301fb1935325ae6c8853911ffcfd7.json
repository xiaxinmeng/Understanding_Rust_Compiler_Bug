{"sha": "5b0293155d4301fb1935325ae6c8853911ffcfd7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWIwMjkzMTU1ZDQzMDFmYjE5MzUzMjVhZTZjODg1MzkxMWZmY2ZkNw==", "commit": {"author": {"name": "Tom Rix", "email": "trix@redhat.com", "date": "2002-01-19T15:40:35Z"}, "committer": {"name": "Tom Rix", "email": "trix@gcc.gnu.org", "date": "2002-01-19T15:40:35Z"}, "message": "Fix for DF split\n\nFrom-SVN: r49011", "tree": {"sha": "5680f3aff1928754b61bdb794398f14e74b1ab6a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5680f3aff1928754b61bdb794398f14e74b1ab6a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5b0293155d4301fb1935325ae6c8853911ffcfd7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b0293155d4301fb1935325ae6c8853911ffcfd7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b0293155d4301fb1935325ae6c8853911ffcfd7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b0293155d4301fb1935325ae6c8853911ffcfd7/comments", "author": {"login": "trixirt", "id": 7824193, "node_id": "MDQ6VXNlcjc4MjQxOTM=", "avatar_url": "https://avatars.githubusercontent.com/u/7824193?v=4", "gravatar_id": "", "url": "https://api.github.com/users/trixirt", "html_url": "https://github.com/trixirt", "followers_url": "https://api.github.com/users/trixirt/followers", "following_url": "https://api.github.com/users/trixirt/following{/other_user}", "gists_url": "https://api.github.com/users/trixirt/gists{/gist_id}", "starred_url": "https://api.github.com/users/trixirt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/trixirt/subscriptions", "organizations_url": "https://api.github.com/users/trixirt/orgs", "repos_url": "https://api.github.com/users/trixirt/repos", "events_url": "https://api.github.com/users/trixirt/events{/privacy}", "received_events_url": "https://api.github.com/users/trixirt/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "89769d19cce2c7f63dcea9b4220e9e3ff27468c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89769d19cce2c7f63dcea9b4220e9e3ff27468c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/89769d19cce2c7f63dcea9b4220e9e3ff27468c6"}], "stats": {"total": 12, "additions": 12, "deletions": 0}, "files": [{"sha": "d9008b6e8b72fe6c8709abd7d841c1d97a4a6aa3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b0293155d4301fb1935325ae6c8853911ffcfd7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b0293155d4301fb1935325ae6c8853911ffcfd7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5b0293155d4301fb1935325ae6c8853911ffcfd7", "patch": "@@ -1,3 +1,7 @@\n+2002-01-19  Tom Rix  <trix@redhat.com>\n+\n+\t* config/rs6000/rs6000.md: Fix DF split for 64 bit hosts.\n+\n 2002-01-18  Aldy Hernandez  <aldyh@redhat.com>\n \n         * doc/tm.texi (STARTING_FRAME_PHASE): Document."}, {"sha": "3a762931316199860380b1de507e1dda50e74af6", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b0293155d4301fb1935325ae6c8853911ffcfd7/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b0293155d4301fb1935325ae6c8853911ffcfd7/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=5b0293155d4301fb1935325ae6c8853911ffcfd7", "patch": "@@ -7927,13 +7927,21 @@\n   int endian = (WORDS_BIG_ENDIAN == 0);\n   long l[2];\n   REAL_VALUE_TYPE rv;\n+  HOST_WIDE_INT val;\n \n   REAL_VALUE_FROM_CONST_DOUBLE (rv, operands[1]);\n   REAL_VALUE_TO_TARGET_DOUBLE (rv, l);\n \n   operands[2] = gen_lowpart (DImode, operands[0]);\n   /* HIGHPART is lower memory address when WORDS_BIG_ENDIAN.  */\n+#if HOST_BITS_PER_WIDE_INT >= 64\n+  val = ((HOST_WIDE_INT)(unsigned long)l[endian] << 32 |\n+        ((HOST_WIDE_INT)(unsigned long)l[1 - endian]));\n+\n+  operands[3] = immed_double_const (val, -(val < 0), DImode);\n+#else\n   operands[3] = immed_double_const (l[1 - endian], l[endian], DImode);\n+#endif\n }\")\n \n ;; Don't have reload use general registers to load a constant.  First,"}]}