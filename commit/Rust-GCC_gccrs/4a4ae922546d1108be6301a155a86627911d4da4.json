{"sha": "4a4ae922546d1108be6301a155a86627911d4da4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGE0YWU5MjI1NDZkMTEwOGJlNjMwMWExNTVhODY2Mjc5MTFkNGRhNA==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@hxi.com", "date": "2001-11-13T21:00:28Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2001-11-13T21:00:28Z"}, "message": "h8300.c (shift_alg_si): Use special code for 25-bit shifts on H8/S.\n\n\t* config/h8300/h8300.c (shift_alg_si): Use special code for\n\t25-bit shifts on H8/S.\n\t(get_shift_alg): Generate special code for 25-bit shifts on\n\tH8/S.\n\nFrom-SVN: r46991", "tree": {"sha": "bc2ccc5aea48db839b3e508eb855f59eecb2bfb4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bc2ccc5aea48db839b3e508eb855f59eecb2bfb4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4a4ae922546d1108be6301a155a86627911d4da4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a4ae922546d1108be6301a155a86627911d4da4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a4ae922546d1108be6301a155a86627911d4da4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a4ae922546d1108be6301a155a86627911d4da4/comments", "author": null, "committer": null, "parents": [{"sha": "819138ac7b6e38becc5e133524c78aa46b1d5b92", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/819138ac7b6e38becc5e133524c78aa46b1d5b92", "html_url": "https://github.com/Rust-GCC/gccrs/commit/819138ac7b6e38becc5e133524c78aa46b1d5b92"}], "stats": {"total": 24, "additions": 20, "deletions": 4}, "files": [{"sha": "b7acb2facff0d3cf7c2484ffcd235e1d5dd39faa", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a4ae922546d1108be6301a155a86627911d4da4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a4ae922546d1108be6301a155a86627911d4da4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4a4ae922546d1108be6301a155a86627911d4da4", "patch": "@@ -1,3 +1,10 @@\n+2001-11-13  Kazu Hirata  <kazu@hxi.com>\n+\n+\t* config/h8300/h8300.c (shift_alg_si): Use special code for\n+\t25-bit shifts on H8/S.\n+\t(get_shift_alg): Generate special code for 25-bit shifts on\n+\tH8/S.\n+\n 2001-11-13  Jakub Jelinek  <jakub@redhat.com>\n \n \t* emit-rtl.c (adjust_address_1): Add ADJUST argument."}, {"sha": "f9783927ab063e7502aebbca643b07d32d057156", "filename": "gcc/config/h8300/h8300.c", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a4ae922546d1108be6301a155a86627911d4da4/gcc%2Fconfig%2Fh8300%2Fh8300.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a4ae922546d1108be6301a155a86627911d4da4/gcc%2Fconfig%2Fh8300%2Fh8300.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.c?ref=4a4ae922546d1108be6301a155a86627911d4da4", "patch": "@@ -2273,15 +2273,15 @@ static const enum shift_alg shift_alg_si[3][3][32] = {\n     { INL, INL, INL, INL, INL, INL, INL, INL,\n       INL, INL, INL, LOP, LOP, LOP, LOP, SPC,\n       SPC, SPC, SPC, SPC, SPC, SPC, LOP, LOP,\n-      SPC, LOP, LOP, LOP, ROT, ROT, ROT, SPC }, /* SHIFT_ASHIFT   */\n+      SPC, SPC, LOP, LOP, ROT, ROT, ROT, SPC }, /* SHIFT_ASHIFT   */\n     { INL, INL, INL, INL, INL, INL, INL, INL,\n       INL, INL, INL, LOP, LOP, LOP, LOP, SPC,\n       SPC, SPC, SPC, SPC, SPC, SPC, LOP, LOP,\n-      SPC, LOP, LOP, LOP, ROT, ROT, ROT, SPC }, /* SHIFT_LSHIFTRT */\n+      SPC, SPC, LOP, LOP, ROT, ROT, ROT, SPC }, /* SHIFT_LSHIFTRT */\n     { INL, INL, INL, INL, INL, INL, INL, INL,\n       INL, INL, INL, LOP, LOP, LOP, LOP, LOP,\n       SPC, SPC, SPC, SPC, SPC, SPC, LOP, LOP,\n-      SPC, LOP, LOP, LOP, LOP, LOP, LOP, SPC }, /* SHIFT_ASHIFTRT */\n+      SPC, SPC, LOP, LOP, LOP, LOP, LOP, SPC }, /* SHIFT_ASHIFTRT */\n   }\n };\n \n@@ -2554,18 +2554,27 @@ get_shift_alg (shift_type, shift_mode, count, info)\n \t      goto end;\n \t    }\n \t}\n-      else if (count == 24 && !TARGET_H8300)\n+      else if ((TARGET_H8300H && count == 24)\n+\t       || (TARGET_H8300S && 24 <= count && count <= 25))\n \t{\n+\t  info->remainder = count - 24;\n+\n \t  switch (shift_type)\n \t    {\n \t    case SHIFT_ASHIFT:\n \t      info->special = \"mov.b\\t%s0,%t0\\n\\tsub.b\\t%s0,%s0\\n\\tmov.w\\t%f0,%e0\\n\\tsub.w\\t%f0,%f0\";\n+\t      info->shift1  = \"shll.l\\t%S0\";\n+\t      info->shift2  = \"shll.l\\t#2,%S0\";\n \t      goto end;\n \t    case SHIFT_LSHIFTRT:\n \t      info->special = \"mov.w\\t%e0,%f0\\n\\tmov.b\\t%t0,%s0\\n\\textu.w\\t%f0\\n\\textu.l\\t%S0\";\n+\t      info->shift1  = \"shlr.l\\t%S0\";\n+\t      info->shift2  = \"shlr.l\\t#2,%S0\";\n \t      goto end;\n \t    case SHIFT_ASHIFTRT:\n \t      info->special = \"mov.w\\t%e0,%f0\\n\\tmov.b\\t%t0,%s0\\n\\texts.w\\t%f0\\n\\texts.l\\t%S0\";\n+\t      info->shift1  = \"shar.l\\t%S0\";\n+\t      info->shift2  = \"shar.l\\t#2,%S0\";\n \t      goto end;\n \t    }\n \t}"}]}