{"sha": "73c4dcc675bd806e87acce255f3678d007193d84", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzNjNGRjYzY3NWJkODA2ZTg3YWNjZTI1NWYzNjc4ZDAwNzE5M2Q4NA==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2003-04-28T03:41:49Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2003-04-28T03:41:49Z"}, "message": "locale_classes.h (locale::_Impl): Change _M_names from fixed size array.\n\n\n2003-04-27  Benjamin Kosnik  <bkoz@redhat.com>\n\n\t* include/bits/locale_classes.h (locale::_Impl): Change _M_names\n\tfrom fixed size array.\n\t(locale): Change _S_categories as well.\n\tFormatting tweaks.\n\t* include/bits/locale_facets.tcc: Tweak.\n\t* config/locale/gnu/c_locale.cc: Assign _S_categories.\n\t* config/locale/generic/c_locale.cc: Same.\n\t* src/locale.cc: Tweak.\n\t* src/globals.cc: Change facet_name to name_vec, add names_c.\n\t* src/localename.cc: Use them.\n\t(locale::_Impl::~_Impl): Destroy _M_names.\n\t(locale::_Impl::_Impl): Create _M_names.\n\nFrom-SVN: r66147", "tree": {"sha": "7fb90a46b4a2491dea2a700d679a378e8b023a07", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7fb90a46b4a2491dea2a700d679a378e8b023a07"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/73c4dcc675bd806e87acce255f3678d007193d84", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73c4dcc675bd806e87acce255f3678d007193d84", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73c4dcc675bd806e87acce255f3678d007193d84", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73c4dcc675bd806e87acce255f3678d007193d84/comments", "author": null, "committer": null, "parents": [{"sha": "0c227849f60c93a264783aa00dc6ebd967cef7af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c227849f60c93a264783aa00dc6ebd967cef7af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c227849f60c93a264783aa00dc6ebd967cef7af"}], "stats": {"total": 101, "additions": 79, "deletions": 22}, "files": [{"sha": "c2a3af5cf05e271652445b56050eb2e655ec003a", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73c4dcc675bd806e87acce255f3678d007193d84/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73c4dcc675bd806e87acce255f3678d007193d84/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=73c4dcc675bd806e87acce255f3678d007193d84", "patch": "@@ -1,3 +1,18 @@\n+2003-04-27  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\t* include/bits/locale_classes.h (locale::_Impl): Change _M_names\n+\tfrom fixed size array.\n+\t(locale): Change _S_categories as well.\n+\tFormatting tweaks.\n+\t* include/bits/locale_facets.tcc: Tweak.\n+\t* config/locale/gnu/c_locale.cc: Assign _S_categories.\n+\t* config/locale/generic/c_locale.cc: Same.\n+\t* src/locale.cc: Tweak.\n+\t* src/globals.cc: Change facet_name to name_vec, add names_c.\n+\t* src/localename.cc: Use them.\n+\t(locale::_Impl::~_Impl): Destroy _M_names.\n+\t(locale::_Impl::_Impl): Create _M_names.\n+\t\n 2003-04-27  Andreas Schwab  <schwab@suse.de>\n \n \t* config/locale/ieee_1003.1-2001/codecvt_specializations.h"}, {"sha": "8a46ab8f4da0edddf0f12761f2ff3719a0cfdc4d", "filename": "libstdc++-v3/config/locale/generic/c_locale.cc", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73c4dcc675bd806e87acce255f3678d007193d84/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgeneric%2Fc_locale.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73c4dcc675bd806e87acce255f3678d007193d84/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgeneric%2Fc_locale.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgeneric%2Fc_locale.cc?ref=73c4dcc675bd806e87acce255f3678d007193d84", "patch": "@@ -227,8 +227,11 @@ namespace std\n   __c_locale\n   locale::facet::_S_clone_c_locale(__c_locale&)\n   { return __c_locale(); }\n+} // namespace std\n \n-  const char* locale::_S_categories[_S_categories_size] = \n+namespace __gnu_cxx\n+{\n+  const char* category_names[6 + _GLIBCPP_NUM_CATEGORIES] =\n     {\n       \"LC_CTYPE\", \n       \"LC_NUMERIC\",\n@@ -237,4 +240,9 @@ namespace std\n       \"LC_MONETARY\",\n       \"LC_MESSAGES\"\n     };\n+}  \n+\n+namespace std\n+{\n+  const char** locale::_S_categories = __gnu_cxx::category_names;\n }  // namespace std"}, {"sha": "7dbf81102b47819429815071422e9633780c988a", "filename": "libstdc++-v3/config/locale/gnu/c_locale.cc", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73c4dcc675bd806e87acce255f3678d007193d84/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgnu%2Fc_locale.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73c4dcc675bd806e87acce255f3678d007193d84/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgnu%2Fc_locale.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgnu%2Fc_locale.cc?ref=73c4dcc675bd806e87acce255f3678d007193d84", "patch": "@@ -186,8 +186,11 @@ namespace std\n   __c_locale\n   locale::facet::_S_clone_c_locale(__c_locale& __cloc)\n   { return __duplocale(__cloc); }\n+} // namespace std\n \n-  const char* locale::_S_categories[_S_categories_size] =\n+namespace __gnu_cxx\n+{\n+  const char* category_names[6 + _GLIBCPP_NUM_CATEGORIES] =\n     {\n       \"LC_CTYPE\", \n       \"LC_NUMERIC\",\n@@ -202,4 +205,9 @@ namespace std\n       \"LC_MEASUREMENT\", \n       \"LC_IDENTIFICATION\" \n     };\n+}\n+\n+namespace std\n+{\n+  const char** locale::_S_categories = __gnu_cxx::category_names;\n }  // namespace std"}, {"sha": "7c447e878f67676cf0405badff765bb5bc6bb277", "filename": "libstdc++-v3/include/bits/locale_classes.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73c4dcc675bd806e87acce255f3678d007193d84/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_classes.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73c4dcc675bd806e87acce255f3678d007193d84/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_classes.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_classes.h?ref=73c4dcc675bd806e87acce255f3678d007193d84", "patch": "@@ -157,7 +157,7 @@ namespace std\n     // NB: locale::global() has to know how to modify all the\n     // underlying categories, not just the ones required by the C++\n     // standard.\n-    static const char* \t_S_categories[_S_categories_size]; \n+    static const char** _S_categories;\n \n     explicit \n     locale(_Impl*) throw();\n@@ -198,7 +198,7 @@ namespace std\n     _Atomic_word\t\t\t_M_references;\n     const facet**\t\t\t_M_facets;\n     size_t \t\t\t\t_M_facets_size;\n-    char* \t\t\t\t_M_names[_S_categories_size];\n+    char** \t\t\t\t_M_names;\n     static const locale::id* const \t_S_id_ctype[];\n     static const locale::id* const \t_S_id_numeric[];\n     static const locale::id* const \t_S_id_collate[];\n@@ -266,7 +266,7 @@ namespace std\n     {\n       _M_impl = new _Impl(*__other._M_impl, 1);\n       _M_impl->_M_install_facet(&_Facet::id, __f);\n-      for (size_t __i = 0; __i < _S_categories_size ; ++__i)\n+      for (size_t __i = 0; __i < _S_categories_size; ++__i)\n \t{\n \t  delete [] _M_impl->_M_names[__i];\n \t  char* __new = new char[2];"}, {"sha": "1fe9b1111145452bdf02b39513dac646a12f9430", "filename": "libstdc++-v3/include/bits/locale_facets.tcc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73c4dcc675bd806e87acce255f3678d007193d84/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73c4dcc675bd806e87acce255f3678d007193d84/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc?ref=73c4dcc675bd806e87acce255f3678d007193d84", "patch": "@@ -2279,7 +2279,7 @@ namespace std\n \t}\n       if (__builtin_expect(has_facet<ctype<_CharT> >(__loc), true))\n \t{\n-\t  const ctype<_CharT>& __ct = use_facet< ctype<_CharT> >(__loc);\n+\t  const ctype<_CharT>& __ct = use_facet<ctype<_CharT> >(__loc);\n \t  __ct.widen(__num_base::_S_atoms_out,\n \t\t     __num_base::_S_atoms_out + __num_base::_S_end, \n \t\t     _M_literals);"}, {"sha": "7ce86f52ebac19356e40f20dc76faff272178696", "filename": "libstdc++-v3/src/globals.cc", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73c4dcc675bd806e87acce255f3678d007193d84/libstdc%2B%2B-v3%2Fsrc%2Fglobals.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73c4dcc675bd806e87acce255f3678d007193d84/libstdc%2B%2B-v3%2Fsrc%2Fglobals.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fglobals.cc?ref=73c4dcc675bd806e87acce255f3678d007193d84", "patch": "@@ -95,10 +95,6 @@ namespace __gnu_cxx\n   fake_wfilebuf buf_wcerr;\n #endif\n \n-  typedef char fake_facet_name[sizeof(char*)]\n-  __attribute__ ((aligned(__alignof__(char*))));\n-  fake_facet_name facet_name[6 + _GLIBCPP_NUM_CATEGORIES];\n-\n   typedef char fake_locale_Impl[sizeof(locale::_Impl)]\n   __attribute__ ((aligned(__alignof__(locale::_Impl))));\n   fake_locale_Impl c_locale_impl;\n@@ -107,6 +103,14 @@ namespace __gnu_cxx\n   __attribute__ ((aligned(__alignof__(locale))));\n   fake_locale c_locale;\n \n+  typedef char fake_name_vec[sizeof(char*)]\n+  __attribute__ ((aligned(__alignof__(char*))));\n+  fake_name_vec name_vec[6 + _GLIBCPP_NUM_CATEGORIES];\n+\n+  typedef char fake_names[sizeof(char[2])]\n+  __attribute__ ((aligned(__alignof__(char[2]))));\n+  fake_names name_c[6 + _GLIBCPP_NUM_CATEGORIES];\n+\n   typedef char fake_facet_vec[sizeof(locale::facet*)]\n   __attribute__ ((aligned(__alignof__(locale::facet*))));\n   fake_facet_vec facet_vec[_GLIBCPP_NUM_FACETS];"}, {"sha": "604bd86915d081398de72078c2feacb875934cc0", "filename": "libstdc++-v3/src/locale.cc", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73c4dcc675bd806e87acce255f3678d007193d84/libstdc%2B%2B-v3%2Fsrc%2Flocale.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73c4dcc675bd806e87acce255f3678d007193d84/libstdc%2B%2B-v3%2Fsrc%2Flocale.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Flocale.cc?ref=73c4dcc675bd806e87acce255f3678d007193d84", "patch": "@@ -207,7 +207,7 @@ namespace std\n \t\t// different from LANG.\n \t\tsize_t __i = 0;\n \t\tif (strcmp(__res, \"C\") == 0)\n-\t\t  for (; __i < _S_categories_size ; ++__i)\n+\t\t  for (; __i < _S_categories_size; ++__i)\n \t\t    {\n \t\t      __env = getenv(_S_categories[__i]);\n \t\t      if (__env && strcmp(__env, \"\") != 0 \n@@ -216,7 +216,7 @@ namespace std\n \t\t\tbreak;\n \t\t    }\n \t\telse\n-\t\t  for (; __i < _S_categories_size ; ++__i)\n+\t\t  for (; __i < _S_categories_size; ++__i)\n \t\t    {\n \t\t      __env = getenv(_S_categories[__i]);\n \t\t      if (__env && strcmp(__env, \"\") != 0 \n@@ -241,7 +241,7 @@ namespace std\n \t\t    __str += __env;\n \t\t    __str += ';';\n \t\t    __i++;\n-\t\t    for (; __i < _S_categories_size ; ++__i)\n+\t\t    for (; __i < _S_categories_size; ++__i)\n \t\t      {\n \t\t\t__env = getenv(_S_categories[__i]);\n \t\t\tif (!__env || strcmp(__env, \"\") == 0)\n@@ -345,7 +345,7 @@ namespace std\n \t__ret += _S_categories[0];\n \t__ret += '=';\n \t__ret += _M_impl->_M_names[0]; \n-\tfor (size_t __i = 1; __i < _S_categories_size ; ++__i)\n+\tfor (size_t __i = 1; __i < _S_categories_size; ++__i)\n \t  {\n \t    __ret += ';';\n \t    __ret += _S_categories[__i];"}, {"sha": "e8c7c5faf764fe2d193ff76621aa4e18e48417a3", "filename": "libstdc++-v3/src/localename.cc", "status": "modified", "additions": 30, "deletions": 8, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73c4dcc675bd806e87acce255f3678d007193d84/libstdc%2B%2B-v3%2Fsrc%2Flocalename.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73c4dcc675bd806e87acce255f3678d007193d84/libstdc%2B%2B-v3%2Fsrc%2Flocalename.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Flocalename.cc?ref=73c4dcc675bd806e87acce255f3678d007193d84", "patch": "@@ -36,7 +36,8 @@ namespace __gnu_cxx\n \n   // Defined in globals.cc.\n   extern locale::facet* facet_vec[_GLIBCPP_NUM_FACETS];\n-  extern char* facet_name[6 + _GLIBCPP_NUM_CATEGORIES];\n+  extern char* name_vec[6 + _GLIBCPP_NUM_CATEGORIES];\n+  extern char name_c[6 + _GLIBCPP_NUM_CATEGORIES][2];\n \n   extern std::ctype<char>\t\t\tctype_c;\n   extern std::collate<char> \t\t\tcollate_c;\n@@ -82,8 +83,9 @@ namespace std\n \t_M_facets[__i]->_M_remove_reference();\n     delete [] _M_facets;\n \n-    for (size_t __i = 0; __i < _S_categories_size ; ++__i)\n+    for (size_t __i = 0; __i < _S_categories_size; ++__i)\n       delete [] _M_names[__i];  \n+    delete [] _M_names;\n   }\n \n   // Clone existing _Impl object.\n@@ -108,7 +110,17 @@ namespace std\n \tif (_M_facets[__i])\n \t  _M_facets[__i]->_M_add_reference();\n       }\n-    for (size_t __i = 0; __i < _S_categories_size ; ++__i)\n+\n+    try \n+      {\n+      \t_M_names = new char*[_S_categories_size];\n+      }\n+    catch(...)\n+      {\n+\tdelete [] _M_names;\n+\t__throw_exception_again;\n+      }\n+    for (size_t __i = 0; __i < _S_categories_size; ++__i)\n       {\n \tchar* __new = new char[strlen(__imp._M_names[__i]) + 1];\n \tstrcpy(__new, __imp._M_names[__i]);\n@@ -139,10 +151,19 @@ namespace std\n       }\n \n     // Name all the categories.\n+    try \n+      {\n+      \t_M_names = new char*[_S_categories_size];\n+      }\n+    catch(...)\n+      {\n+\tdelete [] _M_names;\n+\t__throw_exception_again;\n+      }\n     size_t __len = strlen(__s);\n     if (!strchr(__s, ';'))\n       {\n-\tfor (size_t __i = 0; __i < _S_categories_size ; ++__i)\n+\tfor (size_t __i = 0; __i < _S_categories_size; ++__i)\n \t  {\n \t    _M_names[__i] = new char[__len + 1];\n \t    strcpy(_M_names[__i], __s);\n@@ -151,7 +172,7 @@ namespace std\n     else\n       {\n \tconst char* __beg = __s;\n-\tfor (size_t __i = 0; __i < _S_categories_size ; ++__i)\n+\tfor (size_t __i = 0; __i < _S_categories_size; ++__i)\n \t  {\n \t    __beg = strchr(__beg, '=') + 1;\n \t    const char* __end = strchr(__beg, ';');\n@@ -210,14 +231,15 @@ namespace std\n     locale::facet::_S_create_c_locale(locale::facet::_S_c_locale, \n \t\t\t\t      locale::facet::_S_c_name);\n \n-    _M_facets = new(&facet_vec) const facet*[_M_facets_size];\n+    _M_facets = new (&facet_vec) const facet*[_M_facets_size];\n     for (size_t __i = 0; __i < _M_facets_size; ++__i)\n       _M_facets[__i] = 0;\n \n     // Name all the categories.\n-    for (size_t __i = 0; __i < _S_categories_size ; ++__i)\n+    _M_names = new (&name_vec) char*[_S_categories_size];\n+    for (size_t __i = 0; __i < _S_categories_size; ++__i)\n       {\n-\t_M_names[__i] = new (&facet_name[__i]) char[2];\n+\t_M_names[__i] = new (&name_c[__i]) char[2];\n \tstrcpy(_M_names[__i], locale::facet::_S_c_name);\n       }\n "}]}