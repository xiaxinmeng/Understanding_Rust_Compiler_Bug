{"sha": "5444da31b46211e3e7262d29538cae5898ae2e78", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTQ0NGRhMzFiNDYyMTFlM2U3MjYyZDI5NTM4Y2FlNTg5OGFlMmU3OA==", "commit": {"author": {"name": "Bernd Schmidt", "email": "bernds@codesourcery.com", "date": "2010-08-05T22:58:35Z"}, "committer": {"name": "Bernd Schmidt", "email": "bernds@gcc.gnu.org", "date": "2010-08-05T22:58:35Z"}, "message": "From Martin Thuresson  <martint@google.com>\n\t* postreload.c (reload_cse_simplify_operands): Use\n\tSET_REGNO_RAW instead of SET_REGNO.\n\t* caller-save.c (reg_save_code): Use SET_REGNO_RAW instead of\n\tSET_REGNO.\n\t* ira.c (setup_prohibited_mode_move_regs): Use SET_REGNO_RAW\n\tinstead of SET_REGNO.\n\t* rtl.h (SET_REGNO_RAW): New macro.\n\nFrom-SVN: r162924", "tree": {"sha": "ec890e8075c56874b454d45e8fd32db8c9987a3f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ec890e8075c56874b454d45e8fd32db8c9987a3f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5444da31b46211e3e7262d29538cae5898ae2e78", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5444da31b46211e3e7262d29538cae5898ae2e78", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5444da31b46211e3e7262d29538cae5898ae2e78", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5444da31b46211e3e7262d29538cae5898ae2e78/comments", "author": null, "committer": null, "parents": [{"sha": "c04fc4f0c72ff62199e80a00754c787459a090d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c04fc4f0c72ff62199e80a00754c787459a090d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c04fc4f0c72ff62199e80a00754c787459a090d5"}], "stats": {"total": 20, "additions": 16, "deletions": 4}, "files": [{"sha": "f6b5099cbe48e902f1a2a03ef18b43b592aa0aca", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5444da31b46211e3e7262d29538cae5898ae2e78/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5444da31b46211e3e7262d29538cae5898ae2e78/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5444da31b46211e3e7262d29538cae5898ae2e78", "patch": "@@ -1,3 +1,14 @@\n+2010-08-05  Bernd Schmidt  <bernds@codesourcery.com>\n+\n+\tFrom Martin Thuresson  <martint@google.com>\n+\t* postreload.c (reload_cse_simplify_operands): Use\n+\tSET_REGNO_RAW instead of SET_REGNO.\n+\t* caller-save.c (reg_save_code): Use SET_REGNO_RAW instead of\n+\tSET_REGNO.\n+\t* ira.c (setup_prohibited_mode_move_regs): Use SET_REGNO_RAW\n+\tinstead of SET_REGNO.\n+\t* rtl.h (SET_REGNO_RAW): New macro.\n+\n 2010-08-05  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* rtlanal.c (nonzero_bits1): Use unsigned HOST_WIDE_INT in all mask"}, {"sha": "446da51acdf4dc86affa771074f28201c15dfbc4", "filename": "gcc/caller-save.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5444da31b46211e3e7262d29538cae5898ae2e78/gcc%2Fcaller-save.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5444da31b46211e3e7262d29538cae5898ae2e78/gcc%2Fcaller-save.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcaller-save.c?ref=5444da31b46211e3e7262d29538cae5898ae2e78", "patch": "@@ -124,7 +124,7 @@ reg_save_code (int reg, enum machine_mode mode)\n \n   /* Update the register number and modes of the register\n      and memory operand.  */\n-  SET_REGNO (test_reg, reg);\n+  SET_REGNO_RAW (test_reg, reg);\n   PUT_MODE (test_reg, mode);\n   PUT_MODE (test_mem, mode);\n "}, {"sha": "98a34c1579a68409a098e5004ea550ad37943814", "filename": "gcc/ira.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5444da31b46211e3e7262d29538cae5898ae2e78/gcc%2Fira.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5444da31b46211e3e7262d29538cae5898ae2e78/gcc%2Fira.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira.c?ref=5444da31b46211e3e7262d29538cae5898ae2e78", "patch": "@@ -1219,9 +1219,9 @@ setup_prohibited_mode_move_regs (void)\n \t{\n \t  if (! HARD_REGNO_MODE_OK (j, (enum machine_mode) i))\n \t    continue;\n-\t  SET_REGNO (test_reg1, j);\n+\t  SET_REGNO_RAW (test_reg1, j);\n \t  PUT_MODE (test_reg1, (enum machine_mode) i);\n-\t  SET_REGNO (test_reg2, j);\n+\t  SET_REGNO_RAW (test_reg2, j);\n \t  PUT_MODE (test_reg2, (enum machine_mode) i);\n \t  INSN_CODE (move_insn) = -1;\n \t  recog_memoized (move_insn);"}, {"sha": "dbc11bb18746e99980b18d0a465a77741985037a", "filename": "gcc/postreload.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5444da31b46211e3e7262d29538cae5898ae2e78/gcc%2Fpostreload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5444da31b46211e3e7262d29538cae5898ae2e78/gcc%2Fpostreload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpostreload.c?ref=5444da31b46211e3e7262d29538cae5898ae2e78", "patch": "@@ -528,7 +528,7 @@ reload_cse_simplify_operands (rtx insn, rtx testreg)\n \t  if (! TEST_HARD_REG_BIT (equiv_regs[i], regno))\n \t    continue;\n \n-\t  SET_REGNO (testreg, regno);\n+\t  SET_REGNO_RAW (testreg, regno);\n \t  PUT_MODE (testreg, mode);\n \n \t  /* We found a register equal to this operand.  Now look for all"}, {"sha": "710e3caa1444d01dbe826b8053a0535ea85e7f0d", "filename": "gcc/rtl.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5444da31b46211e3e7262d29538cae5898ae2e78/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5444da31b46211e3e7262d29538cae5898ae2e78/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=5444da31b46211e3e7262d29538cae5898ae2e78", "patch": "@@ -1039,6 +1039,7 @@ enum label_kind\n    be used on RHS.  Use SET_REGNO to change the value.  */\n #define REGNO(RTX) (rhs_regno(RTX))\n #define SET_REGNO(RTX,N) (df_ref_change_reg_with_loc (REGNO(RTX), N, RTX), XCUINT (RTX, 0, REG) = N)\n+#define SET_REGNO_RAW(RTX,N) (XCUINT (RTX, 0, REG) = N)\n \n /* ORIGINAL_REGNO holds the number the register originally had; for a\n    pseudo register turned into a hard reg this will hold the old pseudo"}]}