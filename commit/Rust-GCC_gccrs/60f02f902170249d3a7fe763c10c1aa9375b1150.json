{"sha": "60f02f902170249d3a7fe763c10c1aa9375b1150", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjBmMDJmOTAyMTcwMjQ5ZDNhN2ZlNzYzYzEwYzFhYTkzNzViMTE1MA==", "commit": {"author": {"name": "Tom de Vries", "email": "tdevries@suse.de", "date": "2018-06-20T14:44:45Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2018-06-20T14:44:45Z"}, "message": "Generate correctly typed compare in canonicalize_loop_ivs\n\n2018-06-20  Tom de Vries  <tdevries@suse.de>\n\n\tPR tree-optimization/86097\n\t* tree-ssa-loop-manip.c (canonicalize_loop_ivs): Also convert *nit to\n\tiv type if signedness of iv type is not the same as that of *nit.\n\n\t* gcc.dg/autopar/pr86097.c: New test.\n\nFrom-SVN: r261804", "tree": {"sha": "971fa6dd2d0a467da27355696207dbf891ae4fa3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/971fa6dd2d0a467da27355696207dbf891ae4fa3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/60f02f902170249d3a7fe763c10c1aa9375b1150", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60f02f902170249d3a7fe763c10c1aa9375b1150", "html_url": "https://github.com/Rust-GCC/gccrs/commit/60f02f902170249d3a7fe763c10c1aa9375b1150", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60f02f902170249d3a7fe763c10c1aa9375b1150/comments", "author": {"login": "vries", "id": 4057235, "node_id": "MDQ6VXNlcjQwNTcyMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vries", "html_url": "https://github.com/vries", "followers_url": "https://api.github.com/users/vries/followers", "following_url": "https://api.github.com/users/vries/following{/other_user}", "gists_url": "https://api.github.com/users/vries/gists{/gist_id}", "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vries/subscriptions", "organizations_url": "https://api.github.com/users/vries/orgs", "repos_url": "https://api.github.com/users/vries/repos", "events_url": "https://api.github.com/users/vries/events{/privacy}", "received_events_url": "https://api.github.com/users/vries/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d53e8ef490e59839909b536b1cf1d8aaaecfe43f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d53e8ef490e59839909b536b1cf1d8aaaecfe43f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d53e8ef490e59839909b536b1cf1d8aaaecfe43f"}], "stats": {"total": 45, "additions": 44, "deletions": 1}, "files": [{"sha": "d43118c22a3965e50d6a4e69870118d9c07788a6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60f02f902170249d3a7fe763c10c1aa9375b1150/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60f02f902170249d3a7fe763c10c1aa9375b1150/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=60f02f902170249d3a7fe763c10c1aa9375b1150", "patch": "@@ -1,3 +1,9 @@\n+2018-06-20  Tom de Vries  <tdevries@suse.de>\n+\n+\tPR tree-optimization/86097\n+\t* tree-ssa-loop-manip.c (canonicalize_loop_ivs): Also convert *nit to\n+\tiv type if signedness of iv type is not the same as that of *nit.\n+\n 2018-06-20  Jakub Jelinek  <jakub@redhat.com>\n \n \t* cfgrtl.c (rtl_verify_edges): Formatting fix.  If bb->preds has any"}, {"sha": "ad3b600603f57fb9600e26a0f9b1b8e8e26d4c82", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60f02f902170249d3a7fe763c10c1aa9375b1150/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60f02f902170249d3a7fe763c10c1aa9375b1150/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=60f02f902170249d3a7fe763c10c1aa9375b1150", "patch": "@@ -1,3 +1,8 @@\n+2018-06-20  Tom de Vries  <tdevries@suse.de>\n+\n+\tPR tree-optimization/86097\n+\t* gcc.dg/autopar/pr86097.c: New test.\n+\n 2018-06-20  Nathan Sidwell  <nathan@acm.org>\n \n \tPR c++/85634"}, {"sha": "b48e87b8bf9695db7fcf828b459356b40768be71", "filename": "gcc/testsuite/gcc.dg/autopar/pr86097.c", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60f02f902170249d3a7fe763c10c1aa9375b1150/gcc%2Ftestsuite%2Fgcc.dg%2Fautopar%2Fpr86097.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60f02f902170249d3a7fe763c10c1aa9375b1150/gcc%2Ftestsuite%2Fgcc.dg%2Fautopar%2Fpr86097.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fautopar%2Fpr86097.c?ref=60f02f902170249d3a7fe763c10c1aa9375b1150", "patch": "@@ -0,0 +1,31 @@\n+/* { dg-options \"-O2 -ftree-parallelize-loops=2 -fno-tree-dce -Wno-aggressive-loop-optimizations\" } */\n+int rp, vd;\n+\n+void\n+p5 (int cd)\n+{\n+  while (cd != 0)\n+    {\n+      for (rp = 0; rp < 4; ++rp)\n+        for (vd = 0; vd < 1; ++vd)\n+          {\n+ g0:\n+            ;\n+          }\n+\n+      ++rp;\n+    }\n+\n+  while (rp < 2)\n+    {\n+      for (cd = 0; cd < 1; ++cd)\n+        for (rp = 1; rp != 0; ++rp)\n+          {\n+          }\n+\n+      ++rp;\n+    }\n+\n+  if (cd != 0)\n+    goto g0;\n+}"}, {"sha": "5acee6c98f32bcf1b46d115f2a6030cbf84b25a1", "filename": "gcc/tree-ssa-loop-manip.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60f02f902170249d3a7fe763c10c1aa9375b1150/gcc%2Ftree-ssa-loop-manip.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60f02f902170249d3a7fe763c10c1aa9375b1150/gcc%2Ftree-ssa-loop-manip.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-manip.c?ref=60f02f902170249d3a7fe763c10c1aa9375b1150", "patch": "@@ -1542,7 +1542,8 @@ canonicalize_loop_ivs (struct loop *loop, tree *nit, bool bump_in_latch)\n   precision = GET_MODE_PRECISION (mode);\n   type = build_nonstandard_integer_type (precision, unsigned_p);\n \n-  if (original_precision != precision)\n+  if (original_precision != precision\n+      || TYPE_UNSIGNED (TREE_TYPE (*nit)) != unsigned_p)\n     {\n       *nit = fold_convert (type, *nit);\n       *nit = force_gimple_operand (*nit, &stmts, true, NULL_TREE);"}]}