{"sha": "58d38fd2d686869ed3be3956614ed0c0cb20982d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NThkMzhmZDJkNjg2ODY5ZWQzYmUzOTU2NjE0ZWQwYzBjYjIwOTgyZA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2012-02-10T15:31:18Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2012-02-10T15:31:18Z"}, "message": "re PR middle-end/52177 (ICE: verify_gimple failed: non-trivial conversion at assignment with __atomic_is_lock_free())\n\n\tPR middle-end/52177\n\t* builtins.c (fold_builtin_atomic_always_lock_free,\n\texpand_builtin_atomic_always_lock_free,\n\tfold_builtin_atomic_is_lock_free,\n\texpand_builtin_atomic_is_lock_free): Return and/or test\n\tboolean_true_node/boolean_false_node instead of\n\tinteger_one_node/integer_zero_node.\n\n\t* c-c++-common/pr52177.c: New test.\n\nFrom-SVN: r184096", "tree": {"sha": "ff011893005758a4dd76471a465ba744ffbcc5d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ff011893005758a4dd76471a465ba744ffbcc5d7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/58d38fd2d686869ed3be3956614ed0c0cb20982d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58d38fd2d686869ed3be3956614ed0c0cb20982d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/58d38fd2d686869ed3be3956614ed0c0cb20982d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58d38fd2d686869ed3be3956614ed0c0cb20982d/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e6c5817dca87ebafda02ea2cb7abaf7e00db74a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6c5817dca87ebafda02ea2cb7abaf7e00db74a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e6c5817dca87ebafda02ea2cb7abaf7e00db74a5"}], "stats": {"total": 52, "additions": 45, "deletions": 7}, "files": [{"sha": "cd51a9fbcccc99a65d82787db00fef662fb82114", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58d38fd2d686869ed3be3956614ed0c0cb20982d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58d38fd2d686869ed3be3956614ed0c0cb20982d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=58d38fd2d686869ed3be3956614ed0c0cb20982d", "patch": "@@ -1,3 +1,13 @@\n+2012-02-10  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/52177\n+\t* builtins.c (fold_builtin_atomic_always_lock_free,\n+\texpand_builtin_atomic_always_lock_free,\n+\tfold_builtin_atomic_is_lock_free,\n+\texpand_builtin_atomic_is_lock_free): Return and/or test\n+\tboolean_true_node/boolean_false_node instead of\n+\tinteger_one_node/integer_zero_node.\n+\n 2012-02-10  Jan Hubicka  <jh@suse.cz>\n \n \tPR middle-end/48600"}, {"sha": "b937d3d0938fdf9bc6817b7e83db1ec377a1e217", "filename": "gcc/builtins.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58d38fd2d686869ed3be3956614ed0c0cb20982d/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58d38fd2d686869ed3be3956614ed0c0cb20982d/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=58d38fd2d686869ed3be3956614ed0c0cb20982d", "patch": "@@ -5639,15 +5639,15 @@ fold_builtin_atomic_always_lock_free (tree arg0, tree arg1)\n   /* If the object has smaller alignment, the the lock free routines cannot\n      be used.  */\n   if (type_align < mode_align)\n-    return integer_zero_node;\n+    return boolean_false_node;\n \n   /* Check if a compare_and_swap pattern exists for the mode which represents\n      the required size.  The pattern is not allowed to fail, so the existence\n      of the pattern indicates support is present.  */\n   if (can_compare_and_swap_p (mode, true))\n-    return integer_one_node;\n+    return boolean_true_node;\n   else\n-    return integer_zero_node;\n+    return boolean_false_node;\n }\n \n /* Return true if the parameters to call EXP represent an object which will\n@@ -5671,7 +5671,7 @@ expand_builtin_atomic_always_lock_free (tree exp)\n     }\n \n   size = fold_builtin_atomic_always_lock_free (arg0, arg1);\n-  if (size == integer_one_node)\n+  if (size == boolean_true_node)\n     return const1_rtx;\n   return const0_rtx;\n }\n@@ -5686,8 +5686,8 @@ fold_builtin_atomic_is_lock_free (tree arg0, tree arg1)\n     return NULL_TREE;\n   \n   /* If it isn't always lock free, don't generate a result.  */\n-  if (fold_builtin_atomic_always_lock_free (arg0, arg1) == integer_one_node)\n-    return integer_one_node;\n+  if (fold_builtin_atomic_always_lock_free (arg0, arg1) == boolean_true_node)\n+    return boolean_true_node;\n \n   return NULL_TREE;\n }\n@@ -5717,7 +5717,7 @@ expand_builtin_atomic_is_lock_free (tree exp)\n \n   /* If the value is known at compile time, return the RTX for it.  */\n   size = fold_builtin_atomic_is_lock_free (arg0, arg1);\n-  if (size == integer_one_node)\n+  if (size == boolean_true_node)\n     return const1_rtx;\n \n   return NULL_RTX;"}, {"sha": "86ea212cfae4482f8c15d8ca8bbcf902e9abddb8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58d38fd2d686869ed3be3956614ed0c0cb20982d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58d38fd2d686869ed3be3956614ed0c0cb20982d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=58d38fd2d686869ed3be3956614ed0c0cb20982d", "patch": "@@ -1,3 +1,8 @@\n+2012-02-10  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/52177\n+\t* c-c++-common/pr52177.c: New test.\n+\n 2012-02-10  Jan Hubicka  <jh@suse.cz>\n \n \tPR middle-end/48600"}, {"sha": "165acdef29cb9b0bbbf8aa37538eb0fb97a8be39", "filename": "gcc/testsuite/c-c++-common/pr52177.c", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58d38fd2d686869ed3be3956614ed0c0cb20982d/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr52177.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58d38fd2d686869ed3be3956614ed0c0cb20982d/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr52177.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr52177.c?ref=58d38fd2d686869ed3be3956614ed0c0cb20982d", "patch": "@@ -0,0 +1,23 @@\n+/* PR middle-end/52177 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O -fno-tree-ccp\" } */\n+\n+int *s;\n+\n+static inline int\n+foo ()\n+{\n+  return sizeof (int);\n+}\n+\n+int\n+bar ()\n+{\n+  return __atomic_always_lock_free (foo (), s);\n+}\n+\n+int\n+baz ()\n+{\n+  return __atomic_is_lock_free (foo (), s);\n+}"}]}