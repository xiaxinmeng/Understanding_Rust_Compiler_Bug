{"sha": "69d6fddcbb9daba68087eb38bffa9953e01b4888", "node_id": "C_kwDOANBUbNoAKDY5ZDZmZGRjYmI5ZGFiYTY4MDg3ZWIzOGJmZmE5OTUzZTAxYjQ4ODg", "commit": {"author": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2022-04-08T14:17:27Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2022-04-11T10:44:59Z"}, "message": "Allow substitutions to be handled on primitive types without causing unreachable", "tree": {"sha": "68a63c3700a71294758f21d8129ce6e37c7465b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/68a63c3700a71294758f21d8129ce6e37c7465b2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/69d6fddcbb9daba68087eb38bffa9953e01b4888", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69d6fddcbb9daba68087eb38bffa9953e01b4888", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69d6fddcbb9daba68087eb38bffa9953e01b4888", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69d6fddcbb9daba68087eb38bffa9953e01b4888/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0e7eef6556703cd53b336d0b5280c3696586d431", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e7eef6556703cd53b336d0b5280c3696586d431", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e7eef6556703cd53b336d0b5280c3696586d431"}], "stats": {"total": 29, "additions": 16, "deletions": 13}, "files": [{"sha": "e12432e59ee2cd11a3d8a503f2d92c56b7d3aad6", "filename": "gcc/rust/typecheck/rust-substitution-mapper.h", "status": "modified", "additions": 16, "deletions": 13, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69d6fddcbb9daba68087eb38bffa9953e01b4888/gcc%2Frust%2Ftypecheck%2Frust-substitution-mapper.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69d6fddcbb9daba68087eb38bffa9953e01b4888/gcc%2Frust%2Ftypecheck%2Frust-substitution-mapper.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-substitution-mapper.h?ref=69d6fddcbb9daba68087eb38bffa9953e01b4888", "patch": "@@ -232,19 +232,22 @@ class SubstMapperInternal : public TyTy::TyVisitor\n   }\n \n   // nothing to do for these\n-  void visit (TyTy::InferType &) override { gcc_unreachable (); }\n-  void visit (TyTy::FnPtr &) override { gcc_unreachable (); }\n-  void visit (TyTy::BoolType &) override { gcc_unreachable (); }\n-  void visit (TyTy::IntType &) override { gcc_unreachable (); }\n-  void visit (TyTy::UintType &) override { gcc_unreachable (); }\n-  void visit (TyTy::FloatType &) override { gcc_unreachable (); }\n-  void visit (TyTy::USizeType &) override { gcc_unreachable (); }\n-  void visit (TyTy::ISizeType &) override { gcc_unreachable (); }\n-  void visit (TyTy::ErrorType &) override { gcc_unreachable (); }\n-  void visit (TyTy::CharType &) override { gcc_unreachable (); }\n-  void visit (TyTy::StrType &) override { gcc_unreachable (); }\n-  void visit (TyTy::NeverType &) override { gcc_unreachable (); }\n-  void visit (TyTy::DynamicObjectType &) override { gcc_unreachable (); }\n+  void visit (TyTy::InferType &type) override { resolved = type.clone (); }\n+  void visit (TyTy::FnPtr &type) override { resolved = type.clone (); }\n+  void visit (TyTy::BoolType &type) override { resolved = type.clone (); }\n+  void visit (TyTy::IntType &type) override { resolved = type.clone (); }\n+  void visit (TyTy::UintType &type) override { resolved = type.clone (); }\n+  void visit (TyTy::FloatType &type) override { resolved = type.clone (); }\n+  void visit (TyTy::USizeType &type) override { resolved = type.clone (); }\n+  void visit (TyTy::ISizeType &type) override { resolved = type.clone (); }\n+  void visit (TyTy::ErrorType &type) override { resolved = type.clone (); }\n+  void visit (TyTy::CharType &type) override { resolved = type.clone (); }\n+  void visit (TyTy::StrType &type) override { resolved = type.clone (); }\n+  void visit (TyTy::NeverType &type) override { resolved = type.clone (); }\n+  void visit (TyTy::DynamicObjectType &type) override\n+  {\n+    resolved = type.clone ();\n+  }\n \n private:\n   SubstMapperInternal (HirId ref, TyTy::SubstitutionArgumentMappings &mappings)"}]}