{"sha": "7c8347536fcd9cf01264aba9a3827915f26de05d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2M4MzQ3NTM2ZmNkOWNmMDEyNjRhYmE5YTM4Mjc5MTVmMjZkZTA1ZA==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2004-11-17T05:39:02Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2004-11-17T05:39:02Z"}, "message": "mkmap-flat.awk, [...]: If the last version assigned to a symbol was '%exclude', do not emit it anywhere.\n\n\t* mkmap-flat.awk, mkmap-symver.awk: If the last version\n\tassigned to a symbol was '%exclude', do not emit it anywhere.\n\tIf leading_underscore is true, prefix all symbols from the\n\tversion scripts with a leading underscore before comparing\n\tthem with nm output or emitting them.  Remove support for dot\n\tsymbols.\n\t* config/t-slibgcc-darwin (SHLIB_LINK): Use mkmap-flat.awk.\n\t(SHLIB_MAPFILES): Use libgcc-std.ver.\n\t(SHLIB_MKMAP_OPTS): Enable leading-underscore mode.\n\t(SHLIB_LINK): Add -Wl,-exported_symbols_list,$(SHLIB_MAP).\n\t* config/sh/t-linux: Use the normal libgcc-std.ver, plus\n\tlibgcc-excl.ver and libgcc-glibc.ver.\n\n\t* config/sh/libgcc-excl.ver: New file.\n\t* config/sh/libgcc-std.ver, libgcc-darwin.ver: Delete.\n\nFrom-SVN: r90792", "tree": {"sha": "f47c4639b62229f963495d861463f9b3de09e56a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f47c4639b62229f963495d861463f9b3de09e56a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7c8347536fcd9cf01264aba9a3827915f26de05d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c8347536fcd9cf01264aba9a3827915f26de05d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c8347536fcd9cf01264aba9a3827915f26de05d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c8347536fcd9cf01264aba9a3827915f26de05d/comments", "author": null, "committer": null, "parents": [{"sha": "ace6d09bfa82365b936696aee87ddf48a079eda2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ace6d09bfa82365b936696aee87ddf48a079eda2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ace6d09bfa82365b936696aee87ddf48a079eda2"}], "stats": {"total": 532, "additions": 74, "deletions": 458}, "files": [{"sha": "19ebe9f98763d3cb32d2605f8977633c08263332", "filename": "gcc/ChangeLog", "status": "modified", "additions": 29, "deletions": 11, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c8347536fcd9cf01264aba9a3827915f26de05d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c8347536fcd9cf01264aba9a3827915f26de05d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7c8347536fcd9cf01264aba9a3827915f26de05d", "patch": "@@ -1,3 +1,21 @@\n+2004-11-16  Zack Weinberg  <zack@codesourcery.com>\n+\n+\t* mkmap-flat.awk, mkmap-symver.awk: If the last version\n+\tassigned to a symbol was '%exclude', do not emit it anywhere.\n+\tIf leading_underscore is true, prefix all symbols from the\n+\tversion scripts with a leading underscore before comparing\n+\tthem with nm output or emitting them.  Remove support for dot\n+\tsymbols.\n+\t* config/t-slibgcc-darwin (SHLIB_LINK): Use mkmap-flat.awk.\n+\t(SHLIB_MAPFILES): Use libgcc-std.ver.\n+\t(SHLIB_MKMAP_OPTS): Enable leading-underscore mode.\n+\t(SHLIB_LINK): Add -Wl,-exported_symbols_list,$(SHLIB_MAP).\n+\t* config/sh/t-linux: Use the normal libgcc-std.ver, plus\n+\tlibgcc-excl.ver and libgcc-glibc.ver.\n+\n+\t* config/sh/libgcc-excl.ver: New file.\n+\t* config/sh/libgcc-std.ver, libgcc-darwin.ver: Delete.\n+\n 2004-11-16  Daniel Berlin  <dberlin@dberlin.org>\n \n \t* lambda-code.c (lambda_loopnest_to_gcc_loopnest): Swap\n@@ -6,21 +24,21 @@\n \n 2004-11-16  Aldy Hernandez  <aldyh@redhat.com>\n \n-        * config/rs6000/rs6000.c (rs6000_override_options): Split e500v2\n-        doubles.\n-        (rs6000_complex_function_value): Handle e500 v2 variant.\n+\t* config/rs6000/rs6000.c (rs6000_override_options): Split e500v2\n+\tdoubles.\n+\t(rs6000_complex_function_value): Handle e500 v2 variant.\n \n 2004-11-16  Daniel Berlin  <dberlin@dberlin.org>\n \n \tFix PR tree-optimization/18519\n-\t\n+\n \t* tree-optimize (execute_todo): Add case for TODO_cleanup_cfg.\n \t* tree-pass.h: Add TODO_cleanup_cfg.\n \t* tree-ssa-ccp.c (pass_ccp): Use TODO_cleanup_cfg.\n \t(ccp_finalize): Remove call to cleanup_cfg.\n \t* tree-ssa-dce.c (pass_dce): Use TODO_cleanup_cfg and TODO_dump_func.\n \t(pass_cd_dce): Ditto.\n-\t(perform_tree_ssa_dce): Remove call to cleanup_cfg, \n+\t(perform_tree_ssa_dce): Remove call to cleanup_cfg,\n \tdump_function_to_file.\n \t* tree-ssa-loop-ch.c (copy_loop_headers): Remove call\n \tto cleanup_cfg.\n@@ -29,20 +47,20 @@\n \tcleanup_cfg.\n \t(pass_loop_done): Add TODO_cleanup_cfg.\n \t* tree-ssa-phiopt.c (pass_phiopt): Ditto.\n-\t(tree_ssa_phiopt): Remove call to cleanup_cfg.\t\n-\t\n+\t(tree_ssa_phiopt): Remove call to cleanup_cfg.\n+\n 2004-11-16  Devang Patel  <dpatel@apple.com>\n \n \t* optabs.c (vector_compare_rtx): Fix COMPARISON_CLASS_P use.\n-\t\n+\n 2004-11-16  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* expmed.c, ra-colorize.c: Fix comment typos.\n \n \t* doc/tm.texi: Fix typos.\n \n 2004-11-16  Daniel Jacobowitz  <dan@codesourcery.com>\n-            Mark Mitchell  <mark@codesourcery.com>\n+\t    Mark Mitchell  <mark@codesourcery.com>\n \n \tPR target/6123\n \t* config/sol2.h (TARGET_OS_CPP_BUILTINS): Define __PIC__ and\n@@ -56,7 +74,7 @@\n 2004-11-16  Devang Patel  <dpatel@apple.com>\n \n \t* tree-if-conv.c (clean_predicate_lists): Update gcc_assert check.\n-\t\n+\n 2004-11-16  Eric Christopher  <echristo@redhat.com>\n \n \t* config/mips/mips.c: Use rtl _P predicates.\n@@ -261,7 +279,7 @@\n \t(vect_transform_loop_bound): Set loop->nb_iterations.\n \n 2004-11-14  Dorit Naishlos  <dorit@il.ibm.com>\n-            Andrew Pinski  <pinskia@physics.uc.edu>\n+\t    Andrew Pinski  <pinskia@physics.uc.edu>\n \n \tPR tree-opt/18425\n \t* tree-vectorize.c (vect_build_loop_niters): Do not insert"}, {"sha": "1083ba2c20a22cc62bd2346e88a8d95a15a4d28b", "filename": "gcc/config/sh/libgcc-excl.ver", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c8347536fcd9cf01264aba9a3827915f26de05d/gcc%2Fconfig%2Fsh%2Flibgcc-excl.ver", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c8347536fcd9cf01264aba9a3827915f26de05d/gcc%2Fconfig%2Fsh%2Flibgcc-excl.ver", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Flibgcc-excl.ver?ref=7c8347536fcd9cf01264aba9a3827915f26de05d", "patch": "@@ -0,0 +1,7 @@\n+# Exclude various symbols which should not be visible in libgcc.so for SH.\n+%exclude {\n+  __ashlsi3\n+  __ashrsi3\n+  __lshrsi3\n+  __udivsi3\n+}"}, {"sha": "bd4cfbf3d344016c314278f7903c27f28ceadcbe", "filename": "gcc/config/sh/libgcc-std.ver", "status": "removed", "additions": 0, "deletions": 218, "changes": 218, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ace6d09bfa82365b936696aee87ddf48a079eda2/gcc%2Fconfig%2Fsh%2Flibgcc-std.ver", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ace6d09bfa82365b936696aee87ddf48a079eda2/gcc%2Fconfig%2Fsh%2Flibgcc-std.ver", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Flibgcc-std.ver?ref=ace6d09bfa82365b936696aee87ddf48a079eda2", "patch": "@@ -1,218 +0,0 @@\n-GCC_3.0 {\n-  # libgcc1 integer symbols\n-  __absvsi2\n-  __addvsi3\n-  # __ashlsi3\n-  # __ashrsi3\n-  __divsi3\n-  # __lshrsi3\n-  __modsi3\n-  __mulsi3\n-  __mulvsi3\n-  __negvsi2\n-  __subvsi3\n-  # __udivsi3\n-  __umodsi3\n-\n-  # libgcc1 floating point symbols\n-  __addsf3\n-  __adddf3\n-  __addxf3\n-  __addtf3\n-  __divsf3\n-  __divdf3\n-  __divxf3\n-  __divtf3\n-  __eqsf2\n-  __eqdf2\n-  __eqxf2\n-  __eqtf2\n-  __extenddfxf2\n-  __extenddftf2\n-  __extendsfdf2\n-  __extendsfxf2\n-  __extendsftf2\n-  __fixsfsi\n-  __fixdfsi\n-  __fixxfsi\n-  __fixtfsi\n-  __floatsisf\n-  __floatsidf\n-  __floatsixf\n-  __floatsitf\n-  __gesf2\n-  __gedf2\n-  __gexf2\n-  __getf2\n-  __gtsf2\n-  __gtdf2\n-  __gtxf2\n-  __gttf2\n-  __lesf2\n-  __ledf2\n-  __lexf2\n-  __letf2\n-  __ltsf2\n-  __ltdf2\n-  __ltxf2\n-  __lttf2\n-  __mulsf3\n-  __muldf3\n-  __mulxf3\n-  __multf3\n-  __negsf2\n-  __negdf2\n-  __negxf2\n-  __negtf2\n-  __nesf2\n-  __nedf2\n-  __nexf2\n-  __netf2\n-  __subsf3\n-  __subdf3\n-  __subxf3\n-  __subtf3\n-  __truncdfsf2\n-  __truncxfsf2\n-  __trunctfsf2\n-  __truncxfdf2\n-  __trunctfdf2\n-\n-  # libgcc2 DImode arithmetic (for 32-bit targets).\n-  __absvdi2\n-  __addvdi3\n-  __ashldi3\n-  __ashrdi3\n-  __cmpdi2\n-  __divdi3\n-  __ffsdi2\n-  __fixdfdi\n-  __fixsfdi\n-  __fixtfdi\n-  __fixxfdi\n-  __fixunsdfdi\n-  __fixunsdfsi\n-  __fixunssfsi\n-  __fixunssfdi\n-  __fixunstfdi\n-  __fixunstfsi\n-  __fixunsxfdi\n-  __fixunsxfsi\n-  __floatdidf\n-  __floatdisf\n-  __floatdixf\n-  __floatditf\n-  __lshrdi3\n-  __moddi3\n-  __muldi3\n-  __mulvdi3\n-  __negdi2\n-  __negvdi2\n-  __subvdi3\n-  __ucmpdi2\n-  __udivdi3\n-  __udivmoddi4\n-  __umoddi3\n-\n-  # libgcc2 TImode arithmetic (for 64-bit targets).\n-  __ashlti3\n-  __ashrti3\n-  __cmpti2\n-  __divti3\n-  __ffsti2\n-  __fixdfti\n-  __fixsfti\n-  __fixtfti\n-  __fixxfti\n-  __lshrti3\n-  __modti3\n-  __multi3\n-  __negti2\n-  __ucmpti2\n-  __udivmodti4\n-  __udivti3\n-  __umodti3\n-  __fixunsdfti\n-  __fixunssfti\n-  __fixunstfti\n-  __fixunsxfti\n-  __floattidf\n-  __floattisf\n-  __floattixf\n-  __floattitf\n-\n-  # Used to deal with trampoline initialization on some platforms\n-  __clear_cache\n-\n-  # EH symbols\n-  _Unwind_DeleteException\n-  _Unwind_Find_FDE\n-  _Unwind_ForcedUnwind\n-  _Unwind_GetGR\n-  _Unwind_GetIP\n-  _Unwind_GetLanguageSpecificData\n-  _Unwind_GetRegionStart\n-  _Unwind_GetTextRelBase\n-  _Unwind_GetDataRelBase\n-  _Unwind_RaiseException\n-  _Unwind_Resume\n-  _Unwind_SetGR\n-  _Unwind_SetIP\n-  __deregister_frame\n-  __deregister_frame_info\n-  __deregister_frame_info_bases\n-  __register_frame\n-  __register_frame_info\n-  __register_frame_info_bases\n-  __register_frame_info_table\n-  __register_frame_info_table_bases\n-  __register_frame_table\n-\n-  # SjLj EH symbols\n-  _Unwind_SjLj_Register\n-  _Unwind_SjLj_Unregister\n-  _Unwind_SjLj_RaiseException\n-  _Unwind_SjLj_ForcedUnwind\n-  _Unwind_SjLj_Resume\n-}\n-\n-%inherit GCC_3.3 GCC_3.0\n-GCC_3.3 {\n-  _Unwind_FindEnclosingFunction\n-  _Unwind_GetCFA\n-  _Unwind_Backtrace\n-  _Unwind_Resume_or_Rethrow\n-  _Unwind_SjLj_Resume_or_Rethrow\n-}\n-\n-%inherit GCC_3.3.1 GCC_3.3\n-GCC_3.3.1 {\n-  __gcc_personality_sj0\n-  __gcc_personality_v0\n-}\n-\n-%inherit GCC_3.3.2 GCC_3.3.1\n-GCC_3.3.2 {\n-}\n-%inherit GCC_3.3.4 GCC_3.3.2\n-GCC_3.3.4 {\n-  __unorddf2\n-  __unordsf2\n-}\n-\n-%inherit GCC_3.4 GCC_3.3.4\n-GCC_3.4 {\n-  # bit scanning and counting built-ins\n-  __clzsi2\n-  __clzdi2\n-  __clzti2\n-  __ctzsi2\n-  __ctzdi2\n-  __ctzti2\n-  __popcountsi2\n-  __popcountdi2\n-  __popcountti2\n-  __paritysi2\n-  __paritydi2\n-  __parityti2\n-}"}, {"sha": "d716c1be080e65cea49bc581b1b065fe2094a108", "filename": "gcc/config/sh/t-linux", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c8347536fcd9cf01264aba9a3827915f26de05d/gcc%2Fconfig%2Fsh%2Ft-linux", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c8347536fcd9cf01264aba9a3827915f26de05d/gcc%2Fconfig%2Fsh%2Ft-linux", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Ft-linux?ref=7c8347536fcd9cf01264aba9a3827915f26de05d", "patch": "@@ -10,10 +10,12 @@ MULTILIB_EXCEPTIONS=\n EXTRA_MULTILIB_PARTS= crtbegin.o crtend.o crtbeginS.o crtendS.o crtbeginT.o\n \n # Override t-slibgcc-elf-ver to export some libgcc symbols with\n-# the symbol versions that glibc used.  Also use an sh specific\n-# libgcc-std.ver to avoid to export some lib1func routines which\n-# should not be called via PLT.\n-SHLIB_MAPFILES =  $(srcdir)/config/sh/libgcc-std.ver \\\n+# the symbol versions that glibc used, and hide some lib1func\n+# routines which should not be called via PLT.  We have to create\n+# the list from scratch.\n+SHLIB_MAPFILES = \\\n+\t$(srcdir)/libgcc-std.ver \\\n+\t$(srcdir)/config/sh/libgcc-excl.ver \\\n \t$(srcdir)/config/sh/libgcc-glibc.ver\n \n # Override SHLIB_LINK and SHLIB_INSTALL to use linker script"}, {"sha": "11d652dae74a5fca171b2dde6b8278f2692b5c3a", "filename": "gcc/config/t-slibgcc-darwin", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c8347536fcd9cf01264aba9a3827915f26de05d/gcc%2Fconfig%2Ft-slibgcc-darwin", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c8347536fcd9cf01264aba9a3827915f26de05d/gcc%2Fconfig%2Ft-slibgcc-darwin", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ft-slibgcc-darwin?ref=7c8347536fcd9cf01264aba9a3827915f26de05d", "patch": "@@ -13,6 +13,7 @@ SHLIB_SLIBDIR_QUAL = @shlib_slibdir_qual@\n SHLIB_LINK = $(GCC_FOR_TARGET) $(LIBGCC2_CFLAGS) -dynamiclib -nodefaultlibs \\\n \t-Wl,-install_name,$(slibdir)$(SHLIB_SLIBDIR_QUAL)/$(SHLIB_SONAME) \\\n \t-Wl,-flat_namespace -o $(SHLIB_NAME).tmp \\\n+\t-Wl,-exported_symbols_list,$(SHLIB_MAP) \\\n \t$(SHLIB_VERSTRING) \\\n \t@multilib_flags@ $(SHLIB_OBJS) -lc && \\\n \trm -f $(SHLIB_SOLINK) && \\\n@@ -30,5 +31,6 @@ SHLIB_INSTALL = \\\n \trm -f $$(DESTDIR)$$(slibdir)$(SHLIB_SLIBDIR_QUAL)/$(SHLIB_SOLINK); \\\n \t$(LN_S) $(SHLIB_SONAME) \\\n \t  $$(DESTDIR)$$(slibdir)$(SHLIB_SLIBDIR_QUAL)/$(SHLIB_SOLINK)\n-SHLIB_MKMAP = $(srcdir)/mkmap-symver.awk\n-SHLIB_MAPFILES = $(srcdir)/libgcc-darwin.ver\n+SHLIB_MKMAP = $(srcdir)/mkmap-flat.awk\n+SHLIB_MKMAP_OPTS = -v leading_underscore=1\n+SHLIB_MAPFILES = $(srcdir)/libgcc-std.ver"}, {"sha": "0e9f95db73405662bd2f1fe6b9ffbdcbc272ca01", "filename": "gcc/libgcc-darwin.ver", "status": "removed", "additions": 0, "deletions": 218, "changes": 218, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ace6d09bfa82365b936696aee87ddf48a079eda2/gcc%2Flibgcc-darwin.ver", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ace6d09bfa82365b936696aee87ddf48a079eda2/gcc%2Flibgcc-darwin.ver", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flibgcc-darwin.ver?ref=ace6d09bfa82365b936696aee87ddf48a079eda2", "patch": "@@ -1,218 +0,0 @@\n-GCC_3.0 {\n-  # libgcc1 integer symbols\n-  ___absvsi2\n-  ___addvsi3\n-  ___ashlsi3\n-  ___ashrsi3\n-  ___divsi3\n-  ___lshrsi3\n-  ___modsi3\n-  ___mulsi3\n-  ___mulvsi3\n-  ___negvsi2\n-  ___subvsi3\n-  ___udivsi3\n-  ___umodsi3\n-\n-  # libgcc1 floating point symbols\n-  ___addsf3\n-  ___adddf3\n-  ___addxf3\n-  ___addtf3\n-  ___divsf3\n-  ___divdf3\n-  ___divxf3\n-  ___divtf3\n-  ___eqsf2\n-  ___eqdf2\n-  ___eqxf2\n-  ___eqtf2\n-  ___extenddfxf2\n-  ___extenddftf2\n-  ___extendsfdf2\n-  ___extendsfxf2\n-  ___extendsftf2\n-  ___fixsfsi\n-  ___fixdfsi\n-  ___fixxfsi\n-  ___fixtfsi\n-  ___floatsisf\n-  ___floatsidf\n-  ___floatsixf\n-  ___floatsitf\n-  ___gesf2\n-  ___gedf2\n-  ___gexf2\n-  ___getf2\n-  ___gtsf2\n-  ___gtdf2\n-  ___gtxf2\n-  ___gttf2\n-  ___lesf2\n-  ___ledf2\n-  ___lexf2\n-  ___letf2\n-  ___ltsf2\n-  ___ltdf2\n-  ___ltxf2\n-  ___lttf2\n-  ___mulsf3\n-  ___muldf3\n-  ___mulxf3\n-  ___multf3\n-  ___negsf2\n-  ___negdf2\n-  ___negxf2\n-  ___negtf2\n-  ___nesf2\n-  ___nedf2\n-  ___nexf2\n-  ___netf2\n-  ___subsf3\n-  ___subdf3\n-  ___subxf3\n-  ___subtf3\n-  ___truncdfsf2\n-  ___truncxfsf2\n-  ___trunctfsf2\n-  ___truncxfdf2\n-  ___trunctfdf2\n-\n-  # libgcc2 DImode arithmetic (for 32-bit targets).\n-  ___absvdi2\n-  ___addvdi3\n-  ___ashldi3\n-  ___ashrdi3\n-  ___cmpdi2\n-  ___divdi3\n-  ___ffsdi2\n-  ___fixdfdi\n-  ___fixsfdi\n-  ___fixtfdi\n-  ___fixxfdi\n-  ___fixunsdfdi\n-  ___fixunsdfsi\n-  ___fixunssfsi\n-  ___fixunssfdi\n-  ___fixunstfdi\n-  ___fixunstfsi\n-  ___fixunsxfdi\n-  ___fixunsxfsi\n-  ___floatdidf\n-  ___floatdisf\n-  ___floatdixf\n-  ___floatditf\n-  ___lshrdi3\n-  ___moddi3\n-  ___muldi3\n-  ___mulvdi3\n-  ___negdi2\n-  ___negvdi2\n-  ___subvdi3\n-  ___ucmpdi2\n-  ___udivdi3\n-  ___udivmoddi4\n-  ___umoddi3\n-\n-  # libgcc2 TImode arithmetic (for 64-bit targets).\n-  ___ashlti3\n-  ___ashrti3\n-  ___cmpti2\n-  ___divti3\n-  ___ffsti2\n-  ___fixdfti\n-  ___fixsfti\n-  ___fixtfti\n-  ___fixxfti\n-  ___lshrti3\n-  ___modti3\n-  ___multi3\n-  ___negti2\n-  ___ucmpti2\n-  ___udivmodti4\n-  ___udivti3\n-  ___umodti3\n-  ___fixunsdfti\n-  ___fixunssfti\n-  ___fixunstfti\n-  ___fixunsxfti\n-  ___floattidf\n-  ___floattisf\n-  ___floattixf\n-  ___floattitf\n-\n-  # Used to deal with trampoline initialization on some platforms\n-  ___clear_cache\n-\n-  # EH symbols\n-  __Unwind_DeleteException\n-  __Unwind_Find_FDE\n-  __Unwind_ForcedUnwind\n-  __Unwind_GetGR\n-  __Unwind_GetIP\n-  __Unwind_GetLanguageSpecificData\n-  __Unwind_GetRegionStart\n-  __Unwind_GetTextRelBase\n-  __Unwind_GetDataRelBase\n-  __Unwind_RaiseException\n-  __Unwind_Resume\n-  __Unwind_SetGR\n-  __Unwind_SetIP\n-  ___deregister_frame\n-  ___deregister_frame_info\n-  ___deregister_frame_info_bases\n-  ___register_frame\n-  ___register_frame_info\n-  ___register_frame_info_bases\n-  ___register_frame_info_table\n-  ___register_frame_info_table_bases\n-  ___register_frame_table\n-\n-  # SjLj EH symbols\n-  __Unwind_SjLj_Register\n-  __Unwind_SjLj_Unregister\n-  __Unwind_SjLj_RaiseException\n-  __Unwind_SjLj_ForcedUnwind\n-  __Unwind_SjLj_Resume\n-}\n-\n-%inherit GCC_3.3 GCC_3.0\n-GCC_3.3 {\n-  __Unwind_FindEnclosingFunction\n-  __Unwind_GetCFA\n-  __Unwind_Backtrace\n-  __Unwind_Resume_or_Rethrow\n-  __Unwind_SjLj_Resume_or_Rethrow\n-}\n-\n-%inherit GCC_3.3.1 GCC_3.3\n-GCC_3.3.1 {\n-  __gcc_personality_sj0\n-  __gcc_personality_v0\n-}\n-\n-%inherit GCC_3.3.2 GCC_3.3.1\n-GCC_3.3.2 {\n-}\n-%inherit GCC_3.3.4 GCC_3.3.2\n-GCC_3.3.4 {\n-  __unorddf2\n-  __unordsf2\n-}\n-\n-%inherit GCC_3.4 GCC_3.3.4\n-GCC_3.4 {\n-  # bit scanning and counting built-ins\n-  ___clzsi2\n-  ___clzdi2\n-  ___clzti2\n-  ___ctzsi2\n-  ___ctzdi2\n-  ___ctzti2\n-  ___popcountsi2\n-  ___popcountdi2\n-  ___popcountti2\n-  ___paritysi2\n-  ___paritydi2\n-  ___parityti2\n-}"}, {"sha": "dacd7ca6d36b6e150e9a110ed4fe4124bad36808", "filename": "gcc/mkmap-flat.awk", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c8347536fcd9cf01264aba9a3827915f26de05d/gcc%2Fmkmap-flat.awk", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c8347536fcd9cf01264aba9a3827915f26de05d/gcc%2Fmkmap-flat.awk", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmkmap-flat.awk?ref=7c8347536fcd9cf01264aba9a3827915f26de05d", "patch": "@@ -20,6 +20,11 @@\n \n BEGIN {\n   state = \"nm\";\n+  excluding = 0;\n+  if (leading_underscore)\n+    prefix = \"_\";\n+  else\n+    prefix = \"\";\n }\n \n # Remove comment and blank lines.\n@@ -53,21 +58,30 @@ state == \"nm\" {\n # for beginning and ending each section, and %inherit markers for\n # describing version inheritence.  A symbol may appear in more than\n # one symbol version, and the last seen takes effect.\n+# The magic version name '%exclude' causes all the symbols given that\n+# version to be dropped from the output (unless a later version overrides).\n \n NF == 3 && $1 == \"%inherit\" {\n   next;\n }\n \n NF == 2 && $2 == \"{\" {\n+  if ($1 == \"%exclude\")\n+    excluding = 1;\n   next;\n }\n \n $1 == \"}\" {\n+  excluding = 0;\n   next;\n }\n \n {\n-  export[$1] = 1;\n+  sym = prefix $1;\n+  if (excluding)\n+    delete export[sym];\n+  else\n+    export[sym] = 1;\n   next;\n }\n "}, {"sha": "7514b954ec75b9a36b4001782b1f5f4424b51a78", "filename": "gcc/mkmap-symver.awk", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c8347536fcd9cf01264aba9a3827915f26de05d/gcc%2Fmkmap-symver.awk", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c8347536fcd9cf01264aba9a3827915f26de05d/gcc%2Fmkmap-symver.awk", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmkmap-symver.awk?ref=7c8347536fcd9cf01264aba9a3827915f26de05d", "patch": "@@ -21,6 +21,10 @@\n BEGIN {\n   state = \"nm\";\n   sawsymbol = 0;\n+  if (leading_underscore)\n+    prefix = \"_\";\n+  else\n+    prefix = \"\";\n }\n \n # Remove comment and blank lines.\n@@ -56,14 +60,17 @@ state == \"nm\" {\n # for beginning and ending each section, and %inherit markers for\n # describing version inheritence.  A symbol may appear in more than\n # one symbol version, and the last seen takes effect.\n+# The magic version name '%exclude' causes all the symbols given that\n+# version to be dropped from the output (unless a later version overrides).\n \n NF == 3 && $1 == \"%inherit\" {\n   inherit[$2] = $3;\n   next;\n }\n \n NF == 2 && $2 == \"{\" {\n-  libs[$1] = 1;\n+  if ($1 != \"%exclude\")\n+    libs[$1] = 1;\n   thislib = $1;\n   next;\n }\n@@ -74,7 +81,11 @@ $1 == \"}\" {\n }\n \n {\n-  ver[$1] = thislib;\n+  sym = prefix $1;\n+  if (thislib != \"%exclude\")\n+    ver[sym] = thislib;\n+  else\n+    delete ver[sym];\n   next;\n }\n \n@@ -106,8 +117,6 @@ function output(lib) {\n \t    empty = 0;\n \t  }\n \tprintf(\"\\t%s;\\n\", sym);\n-\tif (dotsyms)\n-\t  printf(\"\\t.%s;\\n\", sym);\n       }\n \n   if (empty)"}]}