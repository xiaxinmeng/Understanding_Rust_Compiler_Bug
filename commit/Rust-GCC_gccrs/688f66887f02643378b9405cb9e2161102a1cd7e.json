{"sha": "688f66887f02643378b9405cb9e2161102a1cd7e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Njg4ZjY2ODg3ZjAyNjQzMzc4Yjk0MDVjYjllMjE2MTEwMmExY2Q3ZQ==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2002-11-26T17:40:56Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2002-11-26T17:40:56Z"}, "message": "cp-tree.h (DECL_LANG_FLAG_4): Document more uses.\n\n\t* cp-tree.h (DECL_LANG_FLAG_4): Document more uses.\n\t(template_parms_equal): Remove prototype.\n\t* typeck.c (buuld_indirect_ref): Reformat.\n\nFrom-SVN: r59528", "tree": {"sha": "50eff245598f3a4855aacb5ebee852fccc4b7b5d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/50eff245598f3a4855aacb5ebee852fccc4b7b5d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/688f66887f02643378b9405cb9e2161102a1cd7e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/688f66887f02643378b9405cb9e2161102a1cd7e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/688f66887f02643378b9405cb9e2161102a1cd7e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/688f66887f02643378b9405cb9e2161102a1cd7e/comments", "author": null, "committer": null, "parents": [{"sha": "5326cd3d2294654972d8c53dd9f4806b5afb72da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5326cd3d2294654972d8c53dd9f4806b5afb72da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5326cd3d2294654972d8c53dd9f4806b5afb72da"}], "stats": {"total": 14, "additions": 10, "deletions": 4}, "files": [{"sha": "bd596d5dfc69f2f57ad65b49db7242be886dbb9d", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/688f66887f02643378b9405cb9e2161102a1cd7e/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/688f66887f02643378b9405cb9e2161102a1cd7e/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=688f66887f02643378b9405cb9e2161102a1cd7e", "patch": "@@ -1,3 +1,9 @@\n+2002-11-26  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* cp-tree.h (DECL_LANG_FLAG_4): Document more uses.\n+\t(template_parms_equal): Remove prototype.\n+\t* typeck.c (buuld_indirect_ref): Reformat.\n+\n 2002-11-25  Mark Mitchell  <mark@codesourcery.com>\n \n \t* tree.c (cp_build_qualified_type_real): Correct handling of\n@@ -7611,7 +7617,7 @@ Sun Feb  4 15:52:44 2001  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \t(cp_make_fname_decl): Use size_int, not build_int_2.\n \t(push_inline_template_parms_recursive): Likewise.\n \t(end_template_parm_list): Likewise.\n-\t(for_each_tempalte_parm): Do not use walk_tree_without_duplicates.\n+\t(for_each_template_parm): Do not use walk_tree_without_duplicates.\n \t(tsubst_template_parms): Use size_int, not build_int_2.\n \t(tsubst): Likewise.\n \t* rtti.c (get_vmi_pseudo_type_info): Likewise."}, {"sha": "db2f082a3f38a3ee06a3c1fab1e4a674e7309e9e", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/688f66887f02643378b9405cb9e2161102a1cd7e/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/688f66887f02643378b9405cb9e2161102a1cd7e/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=688f66887f02643378b9405cb9e2161102a1cd7e", "patch": "@@ -101,6 +101,7 @@ struct diagnostic_context;\n       DECL_IMPLICIT_TYPEDEF_P (in a TYPE_DECL)\n    3: DECL_IN_AGGR_P.\n    4: DECL_C_BIT_FIELD (in a FIELD_DECL)\n+      DECL_MAYBE_TEMPLATE (in a FUNCTION_DECL)\n    5: DECL_INTERFACE_KNOWN.\n    6: DECL_THIS_STATIC (in VAR_DECL or FUNCTION_DECL).\n    7: DECL_DEAD_FOR_LOCAL (in VAR_DECL).\n@@ -4001,7 +4002,6 @@ extern int push_tinst_level\t\t\tPARAMS ((tree));\n extern void pop_tinst_level\t\t\tPARAMS ((void));\n extern int more_specialized_class\t\tPARAMS ((tree, tree));\n extern int is_member_template                   PARAMS ((tree));\n-extern int template_parms_equal                 PARAMS ((tree, tree));\n extern int comp_template_parms                  PARAMS ((tree, tree));\n extern int template_class_depth                 PARAMS ((tree));\n extern int is_specialization_of                 PARAMS ((tree, tree));"}, {"sha": "1366ea0b8c65d85f8692b7777da60a9a3791b345", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/688f66887f02643378b9405cb9e2161102a1cd7e/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/688f66887f02643378b9405cb9e2161102a1cd7e/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=688f66887f02643378b9405cb9e2161102a1cd7e", "patch": "@@ -2327,8 +2327,8 @@ build_indirect_ref (ptr, errorstring)\n           return error_mark_node;\n         }\n       else if (TREE_CODE (pointer) == ADDR_EXPR\n-\t  && !flag_volatile\n-\t  && same_type_p (t, TREE_TYPE (TREE_OPERAND (pointer, 0))))\n+\t       && !flag_volatile\n+\t       && same_type_p (t, TREE_TYPE (TREE_OPERAND (pointer, 0))))\n \t/* The POINTER was something like `&x'.  We simplify `*&x' to\n \t   `x'.  */\n \treturn TREE_OPERAND (pointer, 0);"}]}