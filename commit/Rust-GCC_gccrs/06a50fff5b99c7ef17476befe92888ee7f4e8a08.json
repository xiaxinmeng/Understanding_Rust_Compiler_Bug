{"sha": "06a50fff5b99c7ef17476befe92888ee7f4e8a08", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDZhNTBmZmY1Yjk5YzdlZjE3NDc2YmVmZTkyODg4ZWU3ZjRlOGEwOA==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@wolery.cumb.org", "date": "2000-04-20T16:09:27Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2000-04-20T16:09:27Z"}, "message": "c-common.c (decl_attributes): Set TREE_USED on the object pointed to.\n\n\t* c-common.c (decl_attributes) [A_ALIAS]: Set TREE_USED on the\n\tobject pointed to.\n\nFrom-SVN: r33284", "tree": {"sha": "36bd10e47a2198434af77623ce8e77ff074823a0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/36bd10e47a2198434af77623ce8e77ff074823a0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/06a50fff5b99c7ef17476befe92888ee7f4e8a08", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06a50fff5b99c7ef17476befe92888ee7f4e8a08", "html_url": "https://github.com/Rust-GCC/gccrs/commit/06a50fff5b99c7ef17476befe92888ee7f4e8a08", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06a50fff5b99c7ef17476befe92888ee7f4e8a08/comments", "author": null, "committer": null, "parents": [{"sha": "ba2b25ecaca7b61c71bf5abc3eac2a7e85a6a1f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba2b25ecaca7b61c71bf5abc3eac2a7e85a6a1f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba2b25ecaca7b61c71bf5abc3eac2a7e85a6a1f5"}], "stats": {"total": 24, "additions": 24, "deletions": 0}, "files": [{"sha": "970c789d308a553a6562f9730972cbaae2714d3b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a50fff5b99c7ef17476befe92888ee7f4e8a08/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a50fff5b99c7ef17476befe92888ee7f4e8a08/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=06a50fff5b99c7ef17476befe92888ee7f4e8a08", "patch": "@@ -1,3 +1,8 @@\n+2000-04-20  Zack Weinberg  <zack@wolery.cumb.org>\n+\n+\t* c-common.c (decl_attributes) [A_ALIAS]: Set TREE_USED on the\n+\tobject pointed to.\n+\n Thu Apr 20 14:19:18 MET DST 2000  Jan Hubicka  <jh@suse.cz>\n \n \t* loop.c (emit_iv_add_mult):  Simplify it's input and emit"}, {"sha": "32b2ede864b5e1a3831a59d204f7785b04e43067", "filename": "gcc/c-common.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a50fff5b99c7ef17476befe92888ee7f4e8a08/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a50fff5b99c7ef17476befe92888ee7f4e8a08/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=06a50fff5b99c7ef17476befe92888ee7f4e8a08", "patch": "@@ -981,6 +981,8 @@ decl_attributes (node, attributes, prefix_attributes)\n \t\t  break;\n \t\t}\n \t      id = get_identifier (TREE_STRING_POINTER (id));\n+\t      /* This counts as a use of the object pointed to.  */\n+\t      TREE_USED (id) = 1;\n \n \t      if (TREE_CODE (decl) == FUNCTION_DECL)\n \t\tDECL_INITIAL (decl) = error_mark_node;"}, {"sha": "05e4729572cfeb9dd6ceb35ae5293588cd21e15a", "filename": "gcc/testsuite/gcc.dg/20000419-2.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a50fff5b99c7ef17476befe92888ee7f4e8a08/gcc%2Ftestsuite%2Fgcc.dg%2F20000419-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a50fff5b99c7ef17476befe92888ee7f4e8a08/gcc%2Ftestsuite%2Fgcc.dg%2F20000419-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20000419-2.c?ref=06a50fff5b99c7ef17476befe92888ee7f4e8a08", "patch": "@@ -0,0 +1,17 @@\n+/* A static function with a global alias should not get 'defined but\n+   not used' warnings.  Exposed by Linux kernel.  */\n+/* { dg-do compile } */\n+/* { dg-options \"-Wall\" } */\n+\n+extern void do_something (void);\n+extern void do_something_else (void);\n+\n+static int\n+init_foobar(void)  /* { dg-bogus \"defined but not used\" \"not used warning\" } */\n+{\n+  do_something();\n+  do_something_else();\n+  return 0;\n+}\n+\n+int init_module(void) __attribute__((alias(\"init_foobar\")));"}]}