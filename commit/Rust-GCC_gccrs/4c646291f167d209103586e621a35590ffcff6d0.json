{"sha": "4c646291f167d209103586e621a35590ffcff6d0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGM2NDYyOTFmMTY3ZDIwOTEwMzU4NmU2MjFhMzU1OTBmZmNmZjZkMA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2000-10-17T21:45:23Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2000-10-17T21:45:23Z"}, "message": "alpha.h (ASM_OUTPUT_MI_THUNK): Reload gp if needed.\n\n\t* config/alpha/alpha.h (ASM_OUTPUT_MI_THUNK): Reload gp if needed.\n\t* config/sparc/sparc.h (ASM_OUTPUT_MI_THUNK): Always use call, make\n\tsure linker can relax even the delay slot mov %g1,%o7, fix output\n\tformating.\n\nFrom-SVN: r36912", "tree": {"sha": "045ad0da6c2e13cd7a4e9e374bcfe2927c41b5cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/045ad0da6c2e13cd7a4e9e374bcfe2927c41b5cc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4c646291f167d209103586e621a35590ffcff6d0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c646291f167d209103586e621a35590ffcff6d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c646291f167d209103586e621a35590ffcff6d0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c646291f167d209103586e621a35590ffcff6d0/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "07e0fe3dae72cd27b073ea0fe857826b5e14475b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07e0fe3dae72cd27b073ea0fe857826b5e14475b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/07e0fe3dae72cd27b073ea0fe857826b5e14475b"}], "stats": {"total": 54, "additions": 19, "deletions": 35}, "files": [{"sha": "ed52370eb7a74e08a82793cd2aa3710deed20207", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c646291f167d209103586e621a35590ffcff6d0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c646291f167d209103586e621a35590ffcff6d0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4c646291f167d209103586e621a35590ffcff6d0", "patch": "@@ -1,3 +1,11 @@\n+2000-10-17  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* config/alpha/alpha.h (ASM_OUTPUT_MI_THUNK): Reload gp if needed.\n+\n+\t* config/sparc/sparc.h (ASM_OUTPUT_MI_THUNK): Always use call, make\n+\tsure linker can relax even the delay slot mov %g1,%o7, fix output\n+\tformating.\n+\n 2000-10-17  Kazu Hirata  <kazu@hxi.com>\n \n \t* config/h8300/h8300.md: Remove an unnecessary zero_extend"}, {"sha": "4d5729e51f2492017234486adfbe4f3911dc751d", "filename": "gcc/config/alpha/alpha.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c646291f167d209103586e621a35590ffcff6d0/gcc%2Fconfig%2Falpha%2Falpha.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c646291f167d209103586e621a35590ffcff6d0/gcc%2Fconfig%2Falpha%2Falpha.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.h?ref=4c646291f167d209103586e621a35590ffcff6d0", "patch": "@@ -2240,6 +2240,9 @@ do {\t\t\t\t\t\t\t\t\t\\\n   const char *fn_name = XSTR (XEXP (DECL_RTL (FUNCTION), 0), 0);\t\\\n   int reg;\t\t\t\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n+  if (! TARGET_OPEN_VMS && ! TARGET_WINDOWS_NT)\t\t\t\t\\\n+    fprintf (FILE, \"\\tldgp $29,0($27)\\n\");\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n   /* Mark end of prologue.  */\t\t\t\t\t\t\\\n   output_end_prologue (FILE);\t\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\"}, {"sha": "89adebfdd6a8fdcdc4a047e9f6f4125297cb3ca1", "filename": "gcc/config/sparc/sparc.h", "status": "modified", "additions": 8, "deletions": 35, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c646291f167d209103586e621a35590ffcff6d0/gcc%2Fconfig%2Fsparc%2Fsparc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c646291f167d209103586e621a35590ffcff6d0/gcc%2Fconfig%2Fsparc%2Fsparc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.h?ref=4c646291f167d209103586e621a35590ffcff6d0", "patch": "@@ -3231,42 +3231,15 @@ do {\t\t\t\t\t\t\t\t\t\\\n    Used for C++ multiple inheritance.  */\n #define ASM_OUTPUT_MI_THUNK(FILE, THUNK_FNDECL, DELTA, FUNCTION)\t\\\n do {\t\t\t\t\t\t\t\t\t\\\n-  int big_delta = (DELTA) >= 4096 || (DELTA) < -4096;\t\t\t\\\n-  if (big_delta)\t\t\t\t\t\t\t\\\n-    fprintf (FILE, \"\\tset %d,%%g1\\n\\tadd %%o0,%%g1,%%o0\\n\", (DELTA));\t\\\n-  /* Don't use the jmp solution unless we know the target is local to\t\\\n-     the application or shared object.  \t\t\t\t\\\n-     XXX: Wimp out and don't actually check anything except if this is\t\\\n-     an embedded target where we assume there are no shared libs.  */\t\\\n-  if (!TARGET_CM_EMBMEDANY || flag_pic)\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\t\\\n-      if (! big_delta)\t\t\t\t\t\t\t\\\n-\tfprintf (FILE, \"\\tadd %%o0,%d,%%o0\\n\", DELTA);\t\t\t\\\n-      fprintf (FILE, \"\\tmov %%o7,%%g1\\n\");\t\t\t\t\\\n-      fprintf (FILE, \"\\tcall \");\t\t\t\t\t\\\n-      assemble_name (FILE, XSTR (XEXP (DECL_RTL (FUNCTION), 0), 0));\t\\\n-      fprintf (FILE, \",0\\n\");\t\t\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\t\\\n-  else if (TARGET_CM_EMBMEDANY)\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\t\\\n-      fprintf (FILE, \"\\tsetx \");\t\t\t\t\t\\\n-      assemble_name (FILE, XSTR (XEXP (DECL_RTL (FUNCTION), 0), 0));\t\\\n-      fprintf (FILE, \",%%g5,%%g1\\n\\tjmp %%g1\\n\");\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\t\\\n-  else\t\t\t\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\t\\\n-      fprintf (FILE, \"\\tsethi %%hi(\");\t\t\t\t\t\\\n-      assemble_name (FILE, XSTR (XEXP (DECL_RTL (FUNCTION), 0), 0));\t\\\n-      fprintf (FILE, \"),%%g1\\n\\tjmp %%g1+%%lo(\");\t\t\t\\\n-      assemble_name (FILE, XSTR (XEXP (DECL_RTL (FUNCTION), 0), 0));\t\\\n-      fprintf (FILE, \")\\n\");\t\t\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\t\\\n-  if (!TARGET_CM_EMBMEDANY || flag_pic)\t\t\t\t\t\\\n-    fprintf (FILE, \"\\tmov %%g1,%%o7\\n\");\t\t\t\t\\\n-  else if (big_delta)\t\t\t\t\t\t\t\\\n-    fprintf (FILE, \"\\tnop\\n\");\t\t\t\t\t\t\\\n+  if ((DELTA) >= 4096 || (DELTA) < -4096)\t\t\t\t\\\n+    fprintf (FILE, \"\\tset\\t%d, %%g1\\n\\tadd\\t%%o0, %%g1, %%o0\\n\", (DELTA));\\\n   else\t\t\t\t\t\t\t\t\t\\\n-    fprintf (FILE, \"\\tadd %%o0,%d,%%o0\\n\", DELTA);\t\t\t\\\n+    fprintf (FILE, \"\\tadd\\t%%o0, %d, %%o0\\n\", DELTA);\t\t\t\\\n+  fprintf (FILE, \"\\tor\\t%%o7, %%g0, %%g1\\n\");\t\t\t\t\\\n+  fprintf (FILE, \"\\tcall\\t\");\t\t\t\t\t\t\\\n+  assemble_name (FILE, XSTR (XEXP (DECL_RTL (FUNCTION), 0), 0));\t\\\n+  fprintf (FILE, \", 0\\n\");\t\t\t\t\t\t\\\n+  fprintf (FILE, \"\\t or\\t%%g1, %%g0, %%o7\\n\");\t\t\t\t\\\n } while (0)\n \n /* Define the parentheses used to group arithmetic operations"}]}