{"sha": "33fd7785cf867493ccf2339c4196fdb5c04c15c5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzNmZDc3ODVjZjg2NzQ5M2NjZjIzMzljNDE5NmZkYjVjMDRjMTVjNQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-05-04T17:02:57Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-05-04T17:02:57Z"}, "message": "sse.md (sse2_movq128): Use v constraint instead of x.\n\n\t* config/i386/sse.md (sse2_movq128): Use v constraint instead of x.\n\n\t* gcc.target/i386/avx512vl-vmovq-1.c: New test.\n\nFrom-SVN: r235893", "tree": {"sha": "63772190c076e8f824ab6d7dfd3d1e489d5b5bad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/63772190c076e8f824ab6d7dfd3d1e489d5b5bad"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/33fd7785cf867493ccf2339c4196fdb5c04c15c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33fd7785cf867493ccf2339c4196fdb5c04c15c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/33fd7785cf867493ccf2339c4196fdb5c04c15c5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33fd7785cf867493ccf2339c4196fdb5c04c15c5/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "693a9117d0f26a4a7ee07783ac3971641429b03b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/693a9117d0f26a4a7ee07783ac3971641429b03b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/693a9117d0f26a4a7ee07783ac3971641429b03b"}], "stats": {"total": 28, "additions": 26, "deletions": 2}, "files": [{"sha": "c5d7251d620292a67ee6e4c40556f1216ee057c2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33fd7785cf867493ccf2339c4196fdb5c04c15c5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33fd7785cf867493ccf2339c4196fdb5c04c15c5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=33fd7785cf867493ccf2339c4196fdb5c04c15c5", "patch": "@@ -1,3 +1,7 @@\n+2016-05-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* config/i386/sse.md (sse2_movq128): Use v constraint instead of x.\n+\n 2016-05-04  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* tree-inline.c (expand_call_inline): Fix path dealing with"}, {"sha": "45d819e3cc9114989f1582e723d131ad0c5bb26e", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33fd7785cf867493ccf2339c4196fdb5c04c15c5/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33fd7785cf867493ccf2339c4196fdb5c04c15c5/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=33fd7785cf867493ccf2339c4196fdb5c04c15c5", "patch": "@@ -1076,10 +1076,10 @@\n    (set_attr \"mode\" \"<sseinsnmode>\")])\n \n (define_insn \"sse2_movq128\"\n-  [(set (match_operand:V2DI 0 \"register_operand\" \"=x\")\n+  [(set (match_operand:V2DI 0 \"register_operand\" \"=v\")\n \t(vec_concat:V2DI\n \t  (vec_select:DI\n-\t    (match_operand:V2DI 1 \"nonimmediate_operand\" \"xm\")\n+\t    (match_operand:V2DI 1 \"nonimmediate_operand\" \"vm\")\n \t    (parallel [(const_int 0)]))\n \t  (const_int 0)))]\n   \"TARGET_SSE2\""}, {"sha": "ee63d45bd9ceda2346a1ab2ed8cddd4af8b017aa", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33fd7785cf867493ccf2339c4196fdb5c04c15c5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33fd7785cf867493ccf2339c4196fdb5c04c15c5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=33fd7785cf867493ccf2339c4196fdb5c04c15c5", "patch": "@@ -1,3 +1,7 @@\n+2016-05-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* gcc.target/i386/avx512vl-vmovq-1.c: New test.\n+\n 2016-05-04  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* gcc.dg/ipa/pure-const-3.c: New testcase."}, {"sha": "8f3d3460a6c952f495b73dfb25d1003608923060", "filename": "gcc/testsuite/gcc.target/i386/avx512vl-vmovq-1.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33fd7785cf867493ccf2339c4196fdb5c04c15c5/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-vmovq-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33fd7785cf867493ccf2339c4196fdb5c04c15c5/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-vmovq-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-vmovq-1.c?ref=33fd7785cf867493ccf2339c4196fdb5c04c15c5", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do assemble { target { avx512vl && { ! ia32 } } } } */\n+/* { dg-options \"-O2 -mavx512vl\" } */\n+\n+#include <x86intrin.h>\n+\n+void\n+foo (__m128i x, __m128i *y)\n+{\n+  register __m128i a __asm (\"xmm16\");\n+  a = x;\n+  asm volatile (\"\" : \"+v\" (a));\n+  a = _mm_move_epi64 (a);\n+  asm volatile (\"\" : \"+v\" (a));\n+  a = _mm_move_epi64 (*y);\n+  asm volatile (\"\" : \"+v\" (a));\n+}"}]}