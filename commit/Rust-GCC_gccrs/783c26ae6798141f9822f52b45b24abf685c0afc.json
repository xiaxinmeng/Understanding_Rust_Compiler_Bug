{"sha": "783c26ae6798141f9822f52b45b24abf685c0afc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzgzYzI2YWU2Nzk4MTQxZjk4MjJmNTJiNDViMjRhYmY2ODVjMGFmYw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-06-07T21:53:53Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-06-07T21:53:53Z"}, "message": "pt.c (deduction_tsubst_fntype): Use push_deduction_access_scope.\n\n\t* pt.c (deduction_tsubst_fntype): Use push_deduction_access_scope.\n\t(fn_type_unification): Don't call push_deduction_access_scope here.\n\nFrom-SVN: r174771", "tree": {"sha": "e26b3f929c80222a1a34fa5c3b8f3cfe3873a9da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e26b3f929c80222a1a34fa5c3b8f3cfe3873a9da"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/783c26ae6798141f9822f52b45b24abf685c0afc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/783c26ae6798141f9822f52b45b24abf685c0afc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/783c26ae6798141f9822f52b45b24abf685c0afc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/783c26ae6798141f9822f52b45b24abf685c0afc/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6976ae513f494a12d8dbc4c80d2b0dcd85a5c7c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6976ae513f494a12d8dbc4c80d2b0dcd85a5c7c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6976ae513f494a12d8dbc4c80d2b0dcd85a5c7c0"}], "stats": {"total": 23, "additions": 16, "deletions": 7}, "files": [{"sha": "641bf73bd05eccab91b509344e530fcc05de7401", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/783c26ae6798141f9822f52b45b24abf685c0afc/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/783c26ae6798141f9822f52b45b24abf685c0afc/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=783c26ae6798141f9822f52b45b24abf685c0afc", "patch": "@@ -1,3 +1,8 @@\n+2011-06-07  Jason Merrill  <jason@redhat.com>\n+\n+\t* pt.c (deduction_tsubst_fntype): Use push_deduction_access_scope.\n+\t(fn_type_unification): Don't call push_deduction_access_scope here.\n+\n 2011-06-06  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/48780"}, {"sha": "ce43d8a669ed812a6aed97185658b70138a07a22", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/783c26ae6798141f9822f52b45b24abf685c0afc/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/783c26ae6798141f9822f52b45b24abf685c0afc/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=783c26ae6798141f9822f52b45b24abf685c0afc", "patch": "@@ -111,6 +111,8 @@ static GTY(()) VEC(tree,gc) *canonical_template_parms;\n \n static void push_access_scope (tree);\n static void pop_access_scope (tree);\n+static void push_deduction_access_scope (tree);\n+static void pop_deduction_access_scope (tree);\n static bool resolve_overloaded_unification (tree, tree, tree, tree,\n \t\t\t\t\t    unification_kind_t, int);\n static int try_one_overload (tree, tree, tree, tree, tree,\n@@ -13633,7 +13635,12 @@ deduction_tsubst_fntype (tree fn, tree targs)\n \n   /* We don't need to worry about this in C++98.  */\n   if (cxx_dialect < cxx0x)\n-    return tsubst (fntype, targs, tf_none, NULL_TREE);\n+    {\n+      push_deduction_access_scope (fn);\n+      r = tsubst (fntype, targs, tf_none, NULL_TREE);\n+      pop_deduction_access_scope (fn);\n+      return r;\n+    }\n \n   /* If we're seeing a lot of recursion, switch over to a hash table.  The\n      constant 40 is fairly arbitrary.  */\n@@ -13698,7 +13705,9 @@ deduction_tsubst_fntype (tree fn, tree targs)\n       VEC_safe_push (spec_entry, gc, current_deduction_vec, &elt);\n     }\n \n+  push_deduction_access_scope (fn);\n   r = tsubst (fntype, targs, tf_none, NULL_TREE);\n+  pop_deduction_access_scope (fn);\n \n   /* After doing the substitution, make sure we didn't hit it again.  Note\n      that we might have switched to a hash table during tsubst.  */\n@@ -14017,9 +14026,7 @@ fn_type_unification (tree fn,\n         incomplete = NUM_TMPL_ARGS (explicit_targs) != NUM_TMPL_ARGS (targs);\n \n       processing_template_decl += incomplete;\n-      push_deduction_access_scope (fn);\n       fntype = deduction_tsubst_fntype (fn, converted_args);\n-      pop_deduction_access_scope (fn);\n       processing_template_decl -= incomplete;\n \n       if (fntype == error_mark_node)\n@@ -14090,10 +14097,7 @@ fn_type_unification (tree fn,\n        substitution results in an invalid type, as described above,\n        type deduction fails.  */\n     {\n-      tree substed;\n-      push_deduction_access_scope (fn);\n-      substed = deduction_tsubst_fntype (fn, targs);\n-      pop_deduction_access_scope (fn);\n+      tree substed = deduction_tsubst_fntype (fn, targs);\n       if (substed == error_mark_node)\n \treturn 1;\n "}]}