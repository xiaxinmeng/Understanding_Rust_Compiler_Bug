{"sha": "a270181e4059512728c286f6aff14219354cf0cf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTI3MDE4MWU0MDU5NTEyNzI4YzI4NmY2YWZmMTQyMTkzNTRjZjBjZg==", "commit": {"author": {"name": "Razya Ladelsky", "email": "razya@gcc.gnu.org", "date": "2007-10-29T11:57:39Z"}, "committer": {"name": "Razya Ladelsky", "email": "razya@gcc.gnu.org", "date": "2007-10-29T11:57:39Z"}, "message": "2007-10-29  Razya Ladelsky\n\n        Automatic parallelization reduction tests.\n\n        * testsuite/gcc.dg/tree-ssa/reduc-1.c: New test.\n        * testsuite/gcc.dg/tree-ssa/reduc-1char.c: New test.\n        * testsuite/gcc.dg/tree-ssa/reduc-1short.c: New test.\n        * testsuite/gcc.dg/tree-ssa/reduc-2.c: New test.\n        * testsuite/gcc.dg/tree-ssa/reduc-2char.c: New test.\n        * testsuite/gcc.dg/tree-ssa/reduc-2short.c: New test.\n        * testsuite/gcc.dg/tree-ssa/reduc-3.c: New test.\n        * testsuite/gcc.dg/tree-ssa/reduc-6.c: New test.\n        * testsuite/gcc.dg/tree-ssa/reduc-7.c: New test.\n        * testsuite/gcc.dg/tree-ssa/reduc-8.c: New test.\n        * testsuite/gcc.dg/tree-ssa/reduc-9.c: New test.\n\nFrom-SVN: r129718", "tree": {"sha": "d862b88a7bb1f9ed7f4af62b718f15d090c8b912", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d862b88a7bb1f9ed7f4af62b718f15d090c8b912"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a270181e4059512728c286f6aff14219354cf0cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a270181e4059512728c286f6aff14219354cf0cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a270181e4059512728c286f6aff14219354cf0cf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a270181e4059512728c286f6aff14219354cf0cf/comments", "author": null, "committer": null, "parents": [{"sha": "e19149bfb02aac1e0e1936563bdfd0e6017651a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e19149bfb02aac1e0e1936563bdfd0e6017651a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e19149bfb02aac1e0e1936563bdfd0e6017651a1"}], "stats": {"total": 678, "additions": 676, "deletions": 2}, "files": [{"sha": "1de91aa54ae560dee29d3243fd8d4ec73974c7dc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 18, "deletions": 2, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a270181e4059512728c286f6aff14219354cf0cf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a270181e4059512728c286f6aff14219354cf0cf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a270181e4059512728c286f6aff14219354cf0cf", "patch": "@@ -1,4 +1,20 @@\n-2007-09-23  Razya Ladelsky\n+2007-10-29  Razya Ladelsky\n+\n+        Automatic parallelization reduction tests.\n+\n+\t* testsuite/gcc.dg/tree-ssa/reduc-1.c: New test.\n+\t* testsuite/gcc.dg/tree-ssa/reduc-1char.c: New test.\n+\t* testsuite/gcc.dg/tree-ssa/reduc-1short.c: New test.\n+\t* testsuite/gcc.dg/tree-ssa/reduc-2.c: New test.\n+\t* testsuite/gcc.dg/tree-ssa/reduc-2char.c: New test.\n+\t* testsuite/gcc.dg/tree-ssa/reduc-2short.c: New test.\n+\t* testsuite/gcc.dg/tree-ssa/reduc-3.c: New test.\n+\t* testsuite/gcc.dg/tree-ssa/reduc-6.c: New test.\n+\t* testsuite/gcc.dg/tree-ssa/reduc-7.c: New test.\n+\t* testsuite/gcc.dg/tree-ssa/reduc-8.c: New test.\n+\t* testsuite/gcc.dg/tree-ssa/reduc-9.c: New test.\n+\n+2007-10-29  Razya Ladelsky\n             Zdenek Dvorak\n \n         OMP_ATOMIC Changes, testsuite changes.\n@@ -11,7 +27,7 @@\n \t* testsuite/g++.dg/gomp/atomic-9.C: Same.\n \t* testsuite/g++.dg/gomp/atomic-10.C: Same.\n \n-2007-09-23  Razya Ladelsky\n+2007-10-29  Razya Ladelsky\n             Zdenek Dvorak\n \n         OMP_ATOMIC Changes,"}, {"sha": "c7f53e1e50d3b09a3a15de78c353830b89e1bec1", "filename": "gcc/testsuite/gcc.dg/tree-ssa/reduc-1.c", "status": "added", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a270181e4059512728c286f6aff14219354cf0cf/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Freduc-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a270181e4059512728c286f6aff14219354cf0cf/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Freduc-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Freduc-1.c?ref=a270181e4059512728c286f6aff14219354cf0cf", "patch": "@@ -0,0 +1,57 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -ftree-parallelize-loops=4 -fdump-tree-parloops-details -fdump-tree-final_cleanup\" } */\n+\n+#include <stdarg.h>\n+#include <stdlib.h>\n+\n+#define N 16\n+#define DIFF 242\n+\n+/* Reduction of unsigned-int.  */\n+\n+void main1 (unsigned int x, unsigned int max_result, unsigned int min_result)\n+{\n+  int i;\n+  unsigned int ub[N] = {1,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n+  unsigned int uc[N] = {1,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15};\n+  unsigned int udiff = 2;\n+  unsigned int umax = x;\n+  unsigned int umin = x;\n+\n+  /* Summation.  */\n+  for (i = 0; i < N; i++) {\n+    udiff += (ub[i] - uc[i]);\n+  }\n+\n+  /* Maximum.  */\n+  for (i = 0; i < N; i++) {\n+    umax = umax < uc[i] ? uc[i] : umax;\n+  }\n+\n+  /* Minimum.  */\n+  for (i = 0; i < N; i++) {\n+    umin = umin > uc[i] ? uc[i] : umin;\n+  }\n+\n+  /* check results:  */\n+  if (udiff != DIFF)\n+    abort ();\n+  if (umax != max_result)\n+    abort ();\n+  if (umin != min_result)\n+    abort ();\n+}\n+\n+int main (void)\n+{ \n+  \n+  main1 (100, 100, 1);\n+  main1 (0, 15, 0);\n+  return 0;\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"Detected reduction\" 3 \"parloops\" } } */\n+/* { dg-final { scan-tree-dump-times \"SUCCESS: may be parallelized\" 3 \"parloops\" } } */\n+/* { dg-final { cleanup-tree-dump \"parloops\" } } */\n+/* { dg-final { cleanup-tree-dump \"final_cleanup\" } } */\n+"}, {"sha": "87f758a4e462370acd759bf0b6007e39e4776767", "filename": "gcc/testsuite/gcc.dg/tree-ssa/reduc-1char.c", "status": "added", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a270181e4059512728c286f6aff14219354cf0cf/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Freduc-1char.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a270181e4059512728c286f6aff14219354cf0cf/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Freduc-1char.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Freduc-1char.c?ref=a270181e4059512728c286f6aff14219354cf0cf", "patch": "@@ -0,0 +1,52 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -ftree-parallelize-loops=4 -fdump-tree-parloops-details -fdump-tree-final_cleanup\" } */\n+\n+#include <stdarg.h>\n+#include <stdlib.h>\n+\n+#define N 16\n+#define DIFF 242\n+\n+__attribute__ ((noinline)) void\n+main1 (unsigned char x, unsigned char max_result, unsigned char min_result)\n+{\n+  int i;\n+  unsigned char ub[N] = {1,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n+  unsigned char uc[N] = {1,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15};\n+  unsigned char udiff = 2;\n+  unsigned char umax = x;\n+  unsigned char umin = x;\n+\n+  for (i = 0; i < N; i++) {\n+    udiff += (unsigned char)(ub[i] - uc[i]);\n+  }\n+\n+  for (i = 0; i < N; i++) {\n+    umax = umax < uc[i] ? uc[i] : umax;\n+  }\n+\n+  for (i = 0; i < N; i++) {\n+    umin = umin > uc[i] ? uc[i] : umin;\n+  }\n+\n+  /* check results:  */\n+  if (udiff != DIFF)\n+    abort ();\n+  if (umax != max_result)\n+    abort ();\n+  if (umin != min_result)\n+    abort ();\n+}\n+\n+int main (void)\n+{ \n+  main1 (100, 100, 1);\n+  main1 (0, 15, 0);\n+  return 0;\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"Detected reduction\" 3 \"parloops\" } } */\n+/* { dg-final { scan-tree-dump-times \"SUCCESS: may be parallelized\" 3 \"parloops\" } } */\n+/* { dg-final { cleanup-tree-dump \"parloops\" } } */\n+/* { dg-final { cleanup-tree-dump \"final_cleanup\" } } */\n+"}, {"sha": "75d09544f8c5696ee2aaf4666a3ebd3a6be5ff6a", "filename": "gcc/testsuite/gcc.dg/tree-ssa/reduc-1short.c", "status": "added", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a270181e4059512728c286f6aff14219354cf0cf/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Freduc-1short.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a270181e4059512728c286f6aff14219354cf0cf/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Freduc-1short.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Freduc-1short.c?ref=a270181e4059512728c286f6aff14219354cf0cf", "patch": "@@ -0,0 +1,52 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -ftree-parallelize-loops=4 -fdump-tree-parloops-details -fdump-tree-final_cleanup\" } */\n+\n+#include <stdarg.h>\n+#include <stdlib.h>\n+\n+#define N 16\n+#define DIFF 242\n+\n+__attribute__ ((noinline)) void\n+main1 (unsigned short x, unsigned short max_result, unsigned short min_result)\n+{\n+  int i;\n+  unsigned short ub[N] = {1,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n+  unsigned short uc[N] = {1,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15};\n+  unsigned short  udiff = 2;\n+  unsigned short umax = x;\n+  unsigned short umin = x;\n+\n+  for (i = 0; i < N; i++) {\n+    udiff += (unsigned short)(ub[i] - uc[i]);\n+  }\n+\n+  for (i = 0; i < N; i++) {\n+    umax = umax < uc[i] ? uc[i] : umax;\n+  }\n+\n+  for (i = 0; i < N; i++) {\n+    umin = umin > uc[i] ? uc[i] : umin;\n+  }\n+\n+  /* check results:  */\n+  if (udiff != DIFF)\n+    abort ();\n+  if (umax != max_result)\n+    abort ();\n+  if (umin != min_result)\n+    abort ();\n+}\n+\n+int main (void)\n+{ \n+  main1 (100, 100, 1);\n+  main1 (0, 15, 0);\n+  return 0;\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"Detected reduction\" 3 \"parloops\" } } */\n+/* { dg-final { scan-tree-dump-times \"SUCCESS: may be parallelized\" 3 \"parloops\" } } */\n+/* { dg-final { cleanup-tree-dump \"parloops\" } } */\n+/* { dg-final { cleanup-tree-dump \"final_cleanup\" } } */\n+"}, {"sha": "d462f894f2eac2ca46a5ccd1bd7a8f002ba7ea23", "filename": "gcc/testsuite/gcc.dg/tree-ssa/reduc-2.c", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a270181e4059512728c286f6aff14219354cf0cf/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Freduc-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a270181e4059512728c286f6aff14219354cf0cf/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Freduc-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Freduc-2.c?ref=a270181e4059512728c286f6aff14219354cf0cf", "patch": "@@ -0,0 +1,54 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -ftree-parallelize-loops=4 -fdump-tree-parloops-details -fdump-tree-final_cleanup\" } */\n+\n+#include <stdarg.h>\n+#include <stdlib.h>\n+\n+#define N 16\n+#define DIFF 240\n+\n+/* Reduction of signed-int.  */\n+\n+__attribute__ ((noinline))\n+void main1 (int x, int max_result, int min_result)\n+{\n+  int i;\n+  int b[N] = {1,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n+  int c[N] = {1,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15};\n+  int diff = 0;\n+  int max = x;\n+  int min = x;\n+\n+  for (i = 0; i < N; i++) {\n+    diff += (b[i] - c[i]);\n+  }\n+\n+  for (i = 0; i < N; i++) {\n+    max = max < c[i] ? c[i] : max;\n+  }\n+\n+  for (i = 0; i < N; i++) {\n+    min = min > c[i] ? c[i] : min;\n+  }\n+\n+  /* check results:  */\n+  if (diff != DIFF)\n+    abort ();\n+  if (max != max_result)\n+    abort ();\n+  if (min != min_result)\n+    abort ();\n+}\n+\n+int main (void)\n+{ \n+  main1 (100, 100, 1);\n+  main1 (0, 15, 0);\n+  return 0;\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"Detected reduction\" 3 \"parloops\" } } */\n+/* { dg-final { scan-tree-dump-times \"SUCCESS: may be parallelized\" 3 \"parloops\" } } */\n+/* { dg-final { cleanup-tree-dump \"parloops\" } } */\n+/* { dg-final { cleanup-tree-dump \"final_cleanup\" } } */\n+"}, {"sha": "15acb3bcc9a52fe8e7b76c8088a5ff3be4131247", "filename": "gcc/testsuite/gcc.dg/tree-ssa/reduc-2char.c", "status": "added", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a270181e4059512728c286f6aff14219354cf0cf/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Freduc-2char.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a270181e4059512728c286f6aff14219354cf0cf/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Freduc-2char.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Freduc-2char.c?ref=a270181e4059512728c286f6aff14219354cf0cf", "patch": "@@ -0,0 +1,53 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -ftree-parallelize-loops=4 -fdump-tree-parloops-details -fdump-tree-final_cleanup\" } */\n+\n+#include <stdarg.h>\n+#include <stdlib.h>\n+\n+#define N 16\n+#define DIFF 121\n+\n+__attribute__ ((noinline))\n+void main1 (signed char x, signed char max_result, signed char min_result)\n+{\n+  int i;\n+  signed char b[N] = {1,2,3,6,8,10,12,14,16,18,20,22,24,26,28,30};\n+  signed char c[N] = {1,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15};\n+  signed char diff = 2;\n+  signed char max = x;\n+  signed char min = x;\n+\n+  for (i = 0; i < N; i++) {\n+    diff += (signed char)(b[i] - c[i]);\n+  }\n+\n+  for (i = 0; i < N; i++) {\n+    max = max < c[i] ? c[i] : max;\n+  }\n+\n+  for (i = 0; i < N; i++) {\n+    min = min > c[i] ? c[i] : min;\n+  }\n+\n+  /* check results:  */\n+  if (diff != DIFF)\n+    abort ();\n+  if (max != max_result)\n+    abort ();\n+  if (min != min_result)\n+    abort ();\n+}\n+\n+int main (void)\n+{ \n+  main1 (100, 100, 1);\n+  main1 (0, 15, 0);\n+  return 0;\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"Detected reduction\" 2 \"parloops\" } } */\n+/* { dg-final { scan-tree-dump-times \"SUCCESS: may be parallelized\" 2 \"parloops\" } } */\n+/* { dg-final { cleanup-tree-dump \"parloops\" } } */\n+/* { dg-final { cleanup-tree-dump \"final_cleanup\" } } */\n+\n+"}, {"sha": "f98402ee251e5e36dfe0884a023f1ddad0a62b4d", "filename": "gcc/testsuite/gcc.dg/tree-ssa/reduc-2short.c", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a270181e4059512728c286f6aff14219354cf0cf/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Freduc-2short.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a270181e4059512728c286f6aff14219354cf0cf/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Freduc-2short.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Freduc-2short.c?ref=a270181e4059512728c286f6aff14219354cf0cf", "patch": "@@ -0,0 +1,51 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -ftree-parallelize-loops=4 -fdump-tree-parloops-details -fdump-tree-final_cleanup\" } */\n+\n+#include <stdarg.h>\n+#include <stdlib.h>\n+\n+#define N 16\n+#define DIFF 242\n+\n+__attribute__ ((noinline))\n+void main1 (short x, short max_result, short min_result)\n+{\n+  int i;\n+  short b[N] = {1,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n+  short c[N] = {1,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15};\n+  short diff = 2;\n+  short max = x;\n+  short min = x;\n+\n+  for (i = 0; i < N; i++) {\n+    diff += (short)(b[i] - c[i]);\n+  }\n+  for (i = 0; i < N; i++) {\n+    max = max < c[i] ? c[i] : max;\n+  }\n+\n+  for (i = 0; i < N; i++) {\n+    min = min > c[i] ? c[i] : min;\n+  }\n+\n+  /* check results:  */\n+  if (diff != DIFF)\n+    abort ();\n+  if (max != max_result)\n+    abort ();\n+  if (min != min_result)\n+    abort ();\n+}\n+\n+int main (void)\n+{ \n+  main1 (100, 100, 1);\n+  main1 (0, 15, 0);\n+  return 0;\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"Detected reduction\" 2 \"parloops\" } } */\n+/* { dg-final { scan-tree-dump-times \"SUCCESS: may be parallelized\" 2 \"parloops\" } } */\n+/* { dg-final { cleanup-tree-dump \"parloops\" } } */\n+/* { dg-final { cleanup-tree-dump \"final_cleanup\" } } */\n+"}, {"sha": "31ed2bc11c254e79cb4496fb36baf9efc27f3014", "filename": "gcc/testsuite/gcc.dg/tree-ssa/reduc-3.c", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a270181e4059512728c286f6aff14219354cf0cf/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Freduc-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a270181e4059512728c286f6aff14219354cf0cf/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Freduc-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Freduc-3.c?ref=a270181e4059512728c286f6aff14219354cf0cf", "patch": "@@ -0,0 +1,42 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -ftree-parallelize-loops=4 -fdump-tree-parloops-details -fdump-tree-final_cleanup\" } */\n+\n+#include <stdarg.h>\n+#include <stdlib.h>\n+\n+#define N 16\n+\n+/* Reduction of unsigned-int.  */\n+\n+__attribute__ ((noinline))\n+int main1 (int n, int res)\n+{\n+  int i;\n+  unsigned int ub[N] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n+  unsigned int uc[N] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15};\n+  unsigned int udiff;\n+\n+  udiff = 0;\n+  for (i = 0; i < n; i++) {\n+    udiff += (ub[i] - uc[i]);\n+  }\n+\n+  /* check results:  */\n+  if (udiff != res)\n+    abort ();\n+\n+  return 0;\n+}\n+\n+int main (void)\n+{ \n+  main1 (N, 240);\n+  main1 (N-1, 210);\n+  return 0;\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"Detected reduction\" 1 \"parloops\" } } */\n+/* { dg-final { scan-tree-dump-times \"SUCCESS: may be parallelized\" 1 \"parloops\" } } */\n+/* { dg-final { cleanup-tree-dump \"parloops\" } } */\n+/* { dg-final { cleanup-tree-dump \"final_cleanup\" } } */\n+"}, {"sha": "b3a28a965b5ef3e6344bf267b27a59b01a02f95c", "filename": "gcc/testsuite/gcc.dg/tree-ssa/reduc-6.c", "status": "added", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a270181e4059512728c286f6aff14219354cf0cf/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Freduc-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a270181e4059512728c286f6aff14219354cf0cf/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Freduc-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Freduc-6.c?ref=a270181e4059512728c286f6aff14219354cf0cf", "patch": "@@ -0,0 +1,55 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -ftree-parallelize-loops=4 -fdump-tree-parloops-details -fdump-tree-final_cleanup\" } */\n+\n+#include <stdarg.h>\n+#include <stdlib.h>\n+\n+#define N 16\n+#define DIFF 242\n+\n+__attribute__ ((noinline))\n+int main1 (float x, float max_result)\n+{\n+  int i;\n+  float b[N] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n+  float c[N] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15};\n+  float diff = 2;\n+  float max = x;\n+  float min = 10;\n+\n+  for (i = 0; i < N; i++) {\n+    diff += (b[i] - c[i]);\n+  }\n+\n+  for (i = 0; i < N; i++) {\n+    max = max < c[i] ? c[i] : max;\n+  }\n+\n+  for (i = 0; i < N; i++) {\n+    min = min > c[i] ? c[i] : min;\n+  }\n+\n+  /* check results:  */\n+  if (diff != DIFF)\n+    abort ();\n+  if (max != max_result)\n+    abort ();\n+  if (min != 0)\n+    abort ();\n+\n+  return 0;\n+}\n+\n+int main (void)\n+{ \n+  main1 (100 ,100);\n+  main1 (0, 15);\n+  return 0;\n+}\n+\n+/* need -ffast-math to  parallelize these loops.  */\n+/* { dg-final { scan-tree-dump-times \"Detected reduction\" 0 \"parloops\" } } */\n+/* { dg-final { scan-tree-dump-times \"SUCCESS: may be parallelized\" 0 \"parloops\" } } */\n+/* { dg-final { scan-tree-dump-times \"FAILED: it is not a part of reduction\" 3 \"parloops\" } } */\n+/* { dg-final { cleanup-tree-dump \"parloops\" } } */\n+/* { dg-final { cleanup-tree-dump \"final_cleanup\" } } */"}, {"sha": "90bbc9806c7bd65a47a07a78cbe7e605367c2adf", "filename": "gcc/testsuite/gcc.dg/tree-ssa/reduc-7.c", "status": "added", "additions": 82, "deletions": 0, "changes": 82, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a270181e4059512728c286f6aff14219354cf0cf/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Freduc-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a270181e4059512728c286f6aff14219354cf0cf/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Freduc-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Freduc-7.c?ref=a270181e4059512728c286f6aff14219354cf0cf", "patch": "@@ -0,0 +1,82 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -ftree-parallelize-loops=4 -fdump-tree-parloops-details -fdump-tree-final_cleanup\" } */\n+\n+#include <stdlib.h>\n+\n+#define N 32\n+\n+extern void abort (void);\n+typedef unsigned char T;\n+\n+__attribute__ ((noinline)) void\n+testmax (const T *c, T init, T result)\n+{\n+  T lc[N], accum = init;\n+  int i;\n+\n+  __builtin_memcpy (lc, c, sizeof(lc));\n+\n+  for (i = 0; i < N; i++) {\n+    accum = accum < lc[i] ? lc[i] : accum;\n+  }\n+\n+  if (accum != result)\n+    abort ();\n+}\n+\n+__attribute__ ((noinline)) void\n+testmin (const T *c, T init, T result)\n+{\n+  T lc[N], accum = init;\n+  int i;\n+\n+  __builtin_memcpy (lc, c, sizeof(lc));\n+\n+  for (i = 0; i < N; i++) {\n+    accum = accum > lc[i] ? lc[i] : accum;\n+  }\n+\n+  if (accum != result)\n+    abort ();\n+}\n+\n+int main (void)\n+{ \n+  static unsigned char const A[N] = {\n+    0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08,\n+    0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0x10,\n+    0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77,\n+    0x78, 0x79, 0x7a, 0x7b, 0x7c, 0x7d, 0x7e, 0x7f\n+  };\n+\n+  static unsigned char const B[N] = {\n+    0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77,\n+    0x78, 0x79, 0x7a, 0x7b, 0x7c, 0x7d, 0x7e, 0x7f,\n+    0x80, 0x81, 0x82, 0x83, 0x84, 0x85, 0x86, 0x87,\n+    0x88, 0x89, 0x8a, 0x8b, 0x8c, 0x8d, 0x8e, 0x8f\n+  };\n+\n+  static unsigned char const C[N] = {\n+    0xff, 0xfe, 0xfd, 0xfc, 0xfb, 0xfa, 0xf9, 0xf8,\n+    0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0x10,\n+    0x80, 0x81, 0x82, 0x83, 0x84, 0x85, 0x86, 0x87,\n+    0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77,\n+  };\n+\n+  \n+  testmin (A, 10, 1);\n+  testmin (B, 0x7f, 0x70);\n+  testmin (C, 0x7f, 0x09);\n+\n+  testmax (A, 0, 0x7f);\n+  testmax (B, 0, 0x8f);\n+  testmax (C, 0, 0xff);\n+\n+  return 0;\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"Detected reduction\" 2 \"parloops\" } } */\n+/* { dg-final { scan-tree-dump-times \"SUCCESS: may be parallelized\" 2 \"parloops\" } } */\n+/* { dg-final { cleanup-tree-dump \"parloops\" } } */\n+/* { dg-final { cleanup-tree-dump \"final_cleanup\" } } */\n+"}, {"sha": "4801dc782ccb30b4f5c0b895ffae2c3c860b86f9", "filename": "gcc/testsuite/gcc.dg/tree-ssa/reduc-8.c", "status": "added", "additions": 80, "deletions": 0, "changes": 80, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a270181e4059512728c286f6aff14219354cf0cf/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Freduc-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a270181e4059512728c286f6aff14219354cf0cf/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Freduc-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Freduc-8.c?ref=a270181e4059512728c286f6aff14219354cf0cf", "patch": "@@ -0,0 +1,80 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -ftree-parallelize-loops=4 -fdump-tree-parloops-details -fdump-tree-final_cleanup\" } */\n+\n+#include <stdlib.h>\n+\n+#define N 32\n+\n+extern void abort (void);\n+typedef signed char T;\n+\n+__attribute__ ((noinline)) void\n+testmax (const T *c, T init, T result)\n+{\n+  T lc[N], accum = init;\n+  int i;\n+\n+  __builtin_memcpy (lc, c, sizeof(lc));\n+\n+  for (i = 0; i < N; i++) {\n+    accum = accum < lc[i] ? lc[i] : accum;\n+  }\n+\n+  if (accum != result)\n+    abort ();\n+}\n+\n+__attribute__ ((noinline)) void\n+testmin (const T *c, T init, T result)\n+{\n+  T lc[N], accum = init;\n+  int i;\n+\n+  __builtin_memcpy (lc, c, sizeof(lc));\n+\n+  for (i = 0; i < N; i++) {\n+    accum = accum > lc[i] ? lc[i] : accum;\n+  }\n+\n+  if (accum != result)\n+    abort ();\n+}\n+\n+int main (void)\n+{ \n+  static signed char const A[N] = {\n+    0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08,\n+    0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0x10,\n+    0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77,\n+    0x78, 0x79, 0x7a, 0x7b, 0x7c, 0x7d, 0x7e, 0x7f\n+  };\n+\n+  static signed char const B[N] = {\n+    0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77,\n+    0x78, 0x79, 0x7a, 0x7b, 0x7c, 0x7d, 0x7e, 0x7f,\n+    0x80, 0x81, 0x82, 0x83, 0x84, 0x85, 0x86, 0x87,\n+    0x88, 0x89, 0x8a, 0x8b, 0x8c, 0x8d, 0x8e, 0x8f\n+  };\n+\n+  static signed char const C[N] = {\n+    0xff, 0xfe, 0xfd, 0xfc, 0xfb, 0xfa, 0xf9, 0xf8,\n+    0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0x10,\n+    0x80, 0x81, 0x82, 0x83, 0x84, 0x85, 0x86, 0x87,\n+    0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77,\n+  };\n+\n+  testmin (A, 0, 0);\n+  testmin (B, 0, 0x80);\n+  testmin (C, 0, 0x80);\n+\n+  testmax (A, 0, 0x7f);\n+  testmax (B, 0, 0x7f);\n+  testmax (C, 0, 0x77);\n+\n+  return 0;\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"Detected reduction\" 2 \"parloops\" } } */\n+/* { dg-final { scan-tree-dump-times \"SUCCESS: may be parallelized\" 2 \"parloops\" } } */\n+/* { dg-final { cleanup-tree-dump \"parloops\" } } */\n+/* { dg-final { cleanup-tree-dump \"final_cleanup\" } } */"}, {"sha": "68ed1de6175d6d4099db19a6062d1328494dd0cb", "filename": "gcc/testsuite/gcc.dg/tree-ssa/reduc-9.c", "status": "added", "additions": 80, "deletions": 0, "changes": 80, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a270181e4059512728c286f6aff14219354cf0cf/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Freduc-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a270181e4059512728c286f6aff14219354cf0cf/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Freduc-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Freduc-9.c?ref=a270181e4059512728c286f6aff14219354cf0cf", "patch": "@@ -0,0 +1,80 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -ftree-parallelize-loops=4 -fdump-tree-parloops-details -fdump-tree-final_cleanup\" } */\n+\n+#include <stdlib.h>\n+\n+#define N 32\n+\n+extern void abort (void);\n+typedef unsigned short T;\n+\n+__attribute__ ((noinline)) void\n+testmax (const T *c, T init, T result)\n+{\n+  T lc[N], accum = init;\n+  int i;\n+\n+  __builtin_memcpy (lc, c, sizeof(lc));\n+\n+  for (i = 0; i < N; i++) {\n+    accum = accum < lc[i] ? lc[i] : accum;\n+  }\n+\n+  if (accum != result)\n+    abort ();\n+}\n+\n+__attribute__ ((noinline)) void\n+testmin (const T *c, T init, T result)\n+{\n+  T lc[N], accum = init;\n+  int i;\n+\n+  __builtin_memcpy (lc, c, sizeof(lc));\n+\n+  for (i = 0; i < N; i++) {\n+    accum = accum > lc[i] ? lc[i] : accum;\n+  }\n+\n+  if (accum != result)\n+    abort ();\n+}\n+\n+int main (void)\n+{ \n+  static unsigned short const A[N] = {\n+    0x0001, 0x0002, 0x0003, 0x0004, 0x0005, 0x0006, 0x0007, 0x0008,\n+    0x0009, 0x000a, 0x000b, 0x000c, 0x000d, 0x000e, 0x000f, 0x0010,\n+    0x7000, 0x7100, 0x7200, 0x7300, 0x7400, 0x7500, 0x7600, 0x7700,\n+    0x7ff8, 0x7ff9, 0x7ffa, 0x7ffb, 0x7ffc, 0x7ffd, 0x7ffe, 0x7fff\n+  };\n+\n+  static unsigned short const B[N] = {\n+    0x7000, 0x7100, 0x7200, 0x7300, 0x7400, 0x7500, 0x7600, 0x7700,\n+    0x7ff8, 0x7ff9, 0x7ffa, 0x7ffb, 0x7ffc, 0x7ffd, 0x7ffe, 0x7fff,\n+    0x8000, 0x8001, 0x8002, 0x8003, 0x8004, 0x8005, 0x8006, 0x8007,\n+    0x8008, 0x8009, 0x800a, 0x800b, 0x800c, 0x800d, 0x800e, 0x800f\n+  };\n+\n+  static unsigned short const C[N] = {\n+    0xffff, 0xfffe, 0xfffd, 0xfffc, 0xfffb, 0xfffa, 0xfff9, 0xfff8,\n+    0x0009, 0x000a, 0x000b, 0x000c, 0x000d, 0x000e, 0x000f, 0x0010,\n+    0x8000, 0x8001, 0x8002, 0x8003, 0x8004, 0x8005, 0x8006, 0x8007,\n+    0x7000, 0x7100, 0x7200, 0x7300, 0x7400, 0x7500, 0x7600, 0x7700,\n+  };\n+\n+  testmin (A, 10, 1);\n+  testmin (B, 0x7fff, 0x7000);\n+  testmin (C, 0x7fff, 0x0009);\n+\n+  testmax (A, 0, 0x7fff);\n+  testmax (B, 0, 0x800f);\n+  testmax (C, 0, 0xffff);\n+\n+  return 0;\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"Detected reduction\" 2 \"parloops\" } } */\n+/* { dg-final { scan-tree-dump-times \"SUCCESS: may be parallelized\" 2 \"parloops\" } } */\n+/* { dg-final { cleanup-tree-dump \"parloops\" } } */\n+/* { dg-final { cleanup-tree-dump \"final_cleanup\" } } */"}]}