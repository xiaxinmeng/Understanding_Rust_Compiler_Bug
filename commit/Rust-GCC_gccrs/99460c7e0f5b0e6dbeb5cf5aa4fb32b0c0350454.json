{"sha": "99460c7e0f5b0e6dbeb5cf5aa4fb32b0c0350454", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTk0NjBjN2UwZjViMGU2ZGJlYjVjZjVhYTRmYjMyYjBjMDM1MDQ1NA==", "commit": {"author": {"name": "Gary Benson", "email": "gbenson@redhat.com", "date": "2006-07-28T10:47:54Z"}, "committer": {"name": "Gary Benson", "email": "gary@gcc.gnu.org", "date": "2006-07-28T10:47:54Z"}, "message": "SecurityManager.java (currentClassLoader, [...]): Remerged javadoc.\n\n2006-07-28  Gary Benson  <gbenson@redhat.com>\n\n\t* java/lang/SecurityManager.java (currentClassLoader,\n\tcurrentLoadedClass, classLoaderDepth, checkAccess, checkRead,\n\tcheckWrite, checkTopLevelWindow, checkPrintJobAccess,\n\tcheckSystemClipboardAccess, checkAwtEventQueueAccess,\n\tcheckPackageList): Remerged javadoc.\n\nFrom-SVN: r115792", "tree": {"sha": "eb1754a6d51861e3b4d0d34dbf87350af8c8891b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eb1754a6d51861e3b4d0d34dbf87350af8c8891b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/99460c7e0f5b0e6dbeb5cf5aa4fb32b0c0350454", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99460c7e0f5b0e6dbeb5cf5aa4fb32b0c0350454", "html_url": "https://github.com/Rust-GCC/gccrs/commit/99460c7e0f5b0e6dbeb5cf5aa4fb32b0c0350454", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99460c7e0f5b0e6dbeb5cf5aa4fb32b0c0350454/comments", "author": null, "committer": null, "parents": [{"sha": "8d0941a9c861360297da7045a7667194c5378daa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d0941a9c861360297da7045a7667194c5378daa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d0941a9c861360297da7045a7667194c5378daa"}], "stats": {"total": 32, "additions": 20, "deletions": 12}, "files": [{"sha": "3e4e0f5e23f3ce4327de98c7e129b878562c756d", "filename": "libjava/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99460c7e0f5b0e6dbeb5cf5aa4fb32b0c0350454/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99460c7e0f5b0e6dbeb5cf5aa4fb32b0c0350454/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=99460c7e0f5b0e6dbeb5cf5aa4fb32b0c0350454", "patch": "@@ -1,3 +1,11 @@\n+2006-07-28  Gary Benson  <gbenson@redhat.com>\n+\n+\t* java/lang/SecurityManager.java (currentClassLoader,\n+\tcurrentLoadedClass, classLoaderDepth, checkAccess, checkRead,\n+\tcheckWrite, checkTopLevelWindow, checkPrintJobAccess,\n+\tcheckSystemClipboardAccess, checkAwtEventQueueAccess,\n+\tcheckPackageList): Remerged javadoc.\n+\n 2006-07-28  Gary Benson  <gbenson@redhat.com>\n \n \t* prims.cc (_Jv_CreateJavaVM): Move setting runtimeInitialized"}, {"sha": "4f9a39a1c9dc464a71239f765d58dd46da1ad195", "filename": "libjava/java/lang/SecurityManager.java", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99460c7e0f5b0e6dbeb5cf5aa4fb32b0c0350454/libjava%2Fjava%2Flang%2FSecurityManager.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99460c7e0f5b0e6dbeb5cf5aa4fb32b0c0350454/libjava%2Fjava%2Flang%2FSecurityManager.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FSecurityManager.java?ref=99460c7e0f5b0e6dbeb5cf5aa4fb32b0c0350454", "patch": "@@ -187,7 +187,7 @@ protected Class[] getClassContext()\n    * <ul>\n    * <li>All methods on the stack are from system classes</li>\n    * <li>All methods on the stack up to the first \"privileged\" caller, as\n-   *  created by {@link AccessController.doPrivileged(PrivilegedAction)},\n+   *  created by {@link AccessController#doPrivileged(PrivilegedAction)},\n    *  are from system classes</li>\n    * <li>A check of <code>java.security.AllPermission</code> succeeds.</li>\n    * </ul>\n@@ -209,7 +209,7 @@ protected ClassLoader currentClassLoader()\n    * <ul>\n    * <li>All methods on the stack are from system classes</li>\n    * <li>All methods on the stack up to the first \"privileged\" caller, as\n-   *  created by {@link AccessController.doPrivileged(PrivilegedAction)},\n+   *  created by {@link AccessController#doPrivileged(PrivilegedAction)},\n    *  are from system classes</li>\n    * <li>A check of <code>java.security.AllPermission</code> succeeds.</li>\n    * </ul>\n@@ -248,7 +248,7 @@ protected int classDepth(String className)\n    * <ul>\n    * <li>All methods on the stack are from system classes</li>\n    * <li>All methods on the stack up to the first \"privileged\" caller, as\n-   *  created by {@link AccessController.doPrivileged(PrivilegedAction)},\n+   *  created by {@link AccessController#doPrivileged(PrivilegedAction)},\n    *  are from system classes</li>\n    * <li>A check of <code>java.security.AllPermission</code> succeeds.</li>\n    * </ul>\n@@ -425,7 +425,7 @@ public void checkAccess(Thread thread)\n    * @throws SecurityException if permission is denied\n    * @throws NullPointerException if g is null\n    * @see Thread#Thread()\n-   * @see ThreadGroup#ThreadGroup()\n+   * @see ThreadGroup#ThreadGroup(String)\n    * @see ThreadGroup#stop()\n    * @see ThreadGroup#suspend()\n    * @see ThreadGroup#resume()\n@@ -531,7 +531,7 @@ public void checkRead(FileDescriptor desc)\n    * @throws NullPointerException if filename is null\n    * @see File\n    * @see FileInputStream#FileInputStream(String)\n-   * @see RandomAccessFile#RandomAccessFile(String)\n+   * @see RandomAccessFile#RandomAccessFile(String, String)\n    */\n   public void checkRead(String filename)\n   {\n@@ -598,9 +598,9 @@ public void checkWrite(FileDescriptor desc)\n    * @see File\n    * @see File#canWrite()\n    * @see File#mkdir()\n-   * @see File#renameTo()\n+   * @see File#renameTo(File)\n    * @see FileOutputStream#FileOutputStream(String)\n-   * @see RandomAccessFile#RandomAccessFile(String)\n+   * @see RandomAccessFile#RandomAccessFile(String, String)\n    */\n   public void checkWrite(String filename)\n   {\n@@ -819,7 +819,7 @@ public void checkPropertyAccess(String key)\n    * @param window the window to create\n    * @return true if there is permission to show the window without warning\n    * @throws NullPointerException if window is null\n-   * @see Window#Window(Frame)\n+   * @see java.awt.Window#Window(java.awt.Frame)\n    */\n   public boolean checkTopLevelWindow(Object window)\n   {\n@@ -844,7 +844,7 @@ public boolean checkTopLevelWindow(Object window)\n    * an exception.\n    *\n    * @throws SecurityException if permission is denied\n-   * @see Toolkit#getPrintJob(Frame, String, Properties)\n+   * @see java.awt.Toolkit#getPrintJob(java.awt.Frame, String, Properties)\n    * @since 1.1\n    */\n   public void checkPrintJobAccess()\n@@ -860,7 +860,7 @@ public void checkPrintJobAccess()\n    * rather than throwing an exception.\n    *\n    * @throws SecurityException if permission is denied\n-   * @see Toolkit#getSystemClipboard()\n+   * @see java.awt.Toolkit#getSystemClipboard()\n    * @since 1.1\n    */\n   public void checkSystemClipboardAccess()\n@@ -876,7 +876,7 @@ public void checkSystemClipboardAccess()\n    * rather than throwing an exception.\n    *\n    * @throws SecurityException if permission is denied\n-   * @see Toolkit#getSystemEventQueue()\n+   * @see java.awt.Toolkit#getSystemEventQueue()\n    * @since 1.1\n    */\n   public void checkAwtEventQueueAccess()\n@@ -1020,7 +1020,7 @@ public ThreadGroup getThreadGroup()\n    * <code>RuntimePermission(permission + packageName)</code>.\n    *\n    * @param packageName the package name to check access to\n-   * @param restriction the list of restrictions, after \"package.\"\n+   * @param restriction \"package.access\" or \"package.definition\"\n    * @param permission the base permission, including the '.'\n    * @throws SecurityException if permission is denied\n    * @throws NullPointerException if packageName is null"}]}