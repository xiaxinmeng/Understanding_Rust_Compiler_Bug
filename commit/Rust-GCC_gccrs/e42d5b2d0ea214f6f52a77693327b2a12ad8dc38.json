{"sha": "e42d5b2d0ea214f6f52a77693327b2a12ad8dc38", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTQyZDViMmQwZWEyMTRmNmY1MmE3NzY5MzMyN2IyYTEyYWQ4ZGMzOA==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2012-06-19T18:24:26Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2012-06-19T18:24:26Z"}, "message": "i386.md (FIST_ROUNDING): New int iterator.\n\n\t* config/i386/i386.md (FIST_ROUNDING): New int iterator.\n\t(rounding): Handle UNSPEC_FIST_{FLOOR,CEIL}.\n\t(ROUNDING): Ditto.\n\t(*fist<mode>2_<rounding>_1): Macroize insn from\n\t*fist<mode>2_{floor,ceil}_1 using FIST_ROUNDING int iterator.\n\t(fistdi2_<rounding>): Macroize insn from\n\tfistdi2_{floor,ceil} using FIST_ROUNDING int iterator.\n\t(fistdi2_<rounding>_with_temp and splitters): Macroize insn and\n\tcorresponding splitters from fistdi2_{floor,ceil} and corresponding\n\tsplitters using FIST_ROUNDING int iterator.\n\t(fist<mode>2_<rounding>): Macroize insn from\n\tfist<mode>2_{floor,ceil} using FIST_ROUNDING int iterator.\n\t(fist<mode>2_<rounding>_with_temp and splitters): Macroize insn and\n\tcorresponding splitters from fist<mode>2_{floor,ceil} and corresponding\n\tsplitters using FIST_ROUNDING int iterator.\n\t(l<rounding>xf<mode>2): Macroize expander from l{floor,ceil}xf<mode>2\n\tusing FIST_ROUNDING int iterator.\n\nFrom-SVN: r188789", "tree": {"sha": "3e6c0dffa9eb2b8d609afc7269e4a4b2c2062ff9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3e6c0dffa9eb2b8d609afc7269e4a4b2c2062ff9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e42d5b2d0ea214f6f52a77693327b2a12ad8dc38", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e42d5b2d0ea214f6f52a77693327b2a12ad8dc38", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e42d5b2d0ea214f6f52a77693327b2a12ad8dc38", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e42d5b2d0ea214f6f52a77693327b2a12ad8dc38/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3a6a2759a618bad2c11d85b709724786f3991e80", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a6a2759a618bad2c11d85b709724786f3991e80", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a6a2759a618bad2c11d85b709724786f3991e80"}], "stats": {"total": 500, "additions": 187, "deletions": 313}, "files": [{"sha": "3e1d8bbd4a316e1bf8d5cf86fb50e37ae5b42568", "filename": "gcc/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e42d5b2d0ea214f6f52a77693327b2a12ad8dc38/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e42d5b2d0ea214f6f52a77693327b2a12ad8dc38/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e42d5b2d0ea214f6f52a77693327b2a12ad8dc38", "patch": "@@ -1,3 +1,23 @@\n+2012-06-19  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.md (FIST_ROUNDING): New int iterator.\n+\t(rounding): Handle UNSPEC_FIST_{FLOOR,CEIL}.\n+\t(ROUNDING): Ditto.\n+\t(*fist<mode>2_<rounding>_1): Macroize insn from\n+\t*fist<mode>2_{floor,ceil}_1 using FIST_ROUNDING int iterator.\n+\t(fistdi2_<rounding>): Macroize insn from\n+\tfistdi2_{floor,ceil} using FIST_ROUNDING int iterator.\n+\t(fistdi2_<rounding>_with_temp and splitters): Macroize insn and\n+\tcorresponding splitters from fistdi2_{floor,ceil} and corresponding\n+\tsplitters using FIST_ROUNDING int iterator.\n+\t(fist<mode>2_<rounding>): Macroize insn from\n+\tfist<mode>2_{floor,ceil} using FIST_ROUNDING int iterator.\n+\t(fist<mode>2_<rounding>_with_temp and splitters): Macroize insn and\n+\tcorresponding splitters from fist<mode>2_{floor,ceil} and corresponding\n+\tsplitters using FIST_ROUNDING int iterator.\n+\t(l<rounding>xf<mode>2): Macroize expander from l{floor,ceil}xf<mode>2\n+\tusing FIST_ROUNDING int iterator.\n+\n 2012-06-19  Richard Henderson  <rth@redhat.com>\n \n \t* config/i386/i386-protos.h (ix86_expand_sse2_mulv4si3): Declare."}, {"sha": "1dce8805c3390b6d2d3a4c769df04553c021a8a6", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 167, "deletions": 313, "changes": 480, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e42d5b2d0ea214f6f52a77693327b2a12ad8dc38/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e42d5b2d0ea214f6f52a77693327b2a12ad8dc38/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=e42d5b2d0ea214f6f52a77693327b2a12ad8dc38", "patch": "@@ -15104,15 +15104,23 @@\n \t UNSPEC_FRNDINT_CEIL\n \t UNSPEC_FRNDINT_TRUNC])\n \n+(define_int_iterator FIST_ROUNDING\n+\t[UNSPEC_FIST_FLOOR\n+\t UNSPEC_FIST_CEIL])\n+\n (define_int_attr rounding\n \t[(UNSPEC_FRNDINT_FLOOR \"floor\")\n \t (UNSPEC_FRNDINT_CEIL \"ceil\")\n-\t (UNSPEC_FRNDINT_TRUNC \"trunc\")])\n+\t (UNSPEC_FRNDINT_TRUNC \"trunc\")\n+\t (UNSPEC_FIST_FLOOR \"floor\")\n+\t (UNSPEC_FIST_CEIL \"ceil\")])\n \n (define_int_attr ROUNDING\n \t[(UNSPEC_FRNDINT_FLOOR \"FLOOR\")\n \t (UNSPEC_FRNDINT_CEIL \"CEIL\")\n-\t (UNSPEC_FRNDINT_TRUNC \"TRUNC\")])\n+\t (UNSPEC_FRNDINT_TRUNC \"TRUNC\")\n+\t (UNSPEC_FIST_FLOOR \"FLOOR\")\n+\t (UNSPEC_FIST_CEIL \"CEIL\")])\n \n ;; Rounding mode control word calculation could clobber FLAGS_REG.\n (define_insn_and_split \"frndintxf2_<rounding>\"\n@@ -15205,186 +15213,71 @@\n   DONE;\n })\n \n-(define_insn_and_split \"*fist<mode>2_floor_1\"\n-  [(set (match_operand:SWI248x 0 \"nonimmediate_operand\")\n-\t(unspec:SWI248x [(match_operand:XF 1 \"register_operand\")]\n-\t\t\tUNSPEC_FIST_FLOOR))\n-   (clobber (reg:CC FLAGS_REG))]\n+(define_expand \"ceilxf2\"\n+  [(use (match_operand:XF 0 \"register_operand\"))\n+   (use (match_operand:XF 1 \"register_operand\"))]\n   \"TARGET_USE_FANCY_MATH_387\n-   && flag_unsafe_math_optimizations\n-   && can_create_pseudo_p ()\"\n-  \"#\"\n-  \"&& 1\"\n-  [(const_int 0)]\n+   && flag_unsafe_math_optimizations\"\n {\n-  ix86_optimize_mode_switching[I387_FLOOR] = 1;\n+  if (optimize_insn_for_size_p ())\n+    FAIL;\n+  emit_insn (gen_frndintxf2_ceil (operands[0], operands[1]));\n+  DONE;\n+})\n \n-  operands[2] = assign_386_stack_local (HImode, SLOT_CW_STORED);\n-  operands[3] = assign_386_stack_local (HImode, SLOT_CW_FLOOR);\n-  if (memory_operand (operands[0], VOIDmode))\n-    emit_insn (gen_fist<mode>2_floor (operands[0], operands[1],\n-\t\t\t\t      operands[2], operands[3]));\n-  else\n+(define_expand \"ceil<mode>2\"\n+  [(use (match_operand:MODEF 0 \"register_operand\"))\n+   (use (match_operand:MODEF 1 \"register_operand\"))]\n+  \"(TARGET_USE_FANCY_MATH_387\n+    && (!(SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH)\n+\t|| TARGET_MIX_SSE_I387)\n+    && flag_unsafe_math_optimizations)\n+   || (SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH\n+       && !flag_trapping_math)\"\n+{\n+  if (SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH\n+      && !flag_trapping_math)\n     {\n-      operands[4] = assign_386_stack_local (<MODE>mode, SLOT_TEMP);\n-      emit_insn (gen_fist<mode>2_floor_with_temp (operands[0], operands[1],\n-\t\t\t\t\t\t  operands[2], operands[3],\n-\t\t\t\t\t\t  operands[4]));\n+      if (TARGET_ROUND)\n+\temit_insn (gen_sse4_1_round<mode>2\n+\t\t   (operands[0], operands[1], GEN_INT (ROUND_CEIL)));\n+      else if (optimize_insn_for_size_p ())\n+\tFAIL;\n+      else if (TARGET_64BIT || (<MODE>mode != DFmode))\n+\tix86_expand_floorceil (operands[0], operands[1], false);\n+      else\n+\tix86_expand_floorceildf_32 (operands[0], operands[1], false);\n     }\n-  DONE;\n-}\n-  [(set_attr \"type\" \"fistp\")\n-   (set_attr \"i387_cw\" \"floor\")\n-   (set_attr \"mode\" \"<MODE>\")])\n-\n-(define_insn \"fistdi2_floor\"\n-  [(set (match_operand:DI 0 \"memory_operand\" \"=m\")\n-\t(unspec:DI [(match_operand:XF 1 \"register_operand\" \"f\")]\n-\t\t   UNSPEC_FIST_FLOOR))\n-   (use (match_operand:HI 2 \"memory_operand\" \"m\"))\n-   (use (match_operand:HI 3 \"memory_operand\" \"m\"))\n-   (clobber (match_scratch:XF 4 \"=&1f\"))]\n-  \"TARGET_USE_FANCY_MATH_387\n-   && flag_unsafe_math_optimizations\"\n-  \"* return output_fix_trunc (insn, operands, false);\"\n-  [(set_attr \"type\" \"fistp\")\n-   (set_attr \"i387_cw\" \"floor\")\n-   (set_attr \"mode\" \"DI\")])\n-\n-(define_insn \"fistdi2_floor_with_temp\"\n-  [(set (match_operand:DI 0 \"nonimmediate_operand\" \"=m,?r\")\n-\t(unspec:DI [(match_operand:XF 1 \"register_operand\" \"f,f\")]\n-\t\t   UNSPEC_FIST_FLOOR))\n-   (use (match_operand:HI 2 \"memory_operand\" \"m,m\"))\n-   (use (match_operand:HI 3 \"memory_operand\" \"m,m\"))\n-   (clobber (match_operand:DI 4 \"memory_operand\" \"=X,m\"))\n-   (clobber (match_scratch:XF 5 \"=&1f,&1f\"))]\n-  \"TARGET_USE_FANCY_MATH_387\n-   && flag_unsafe_math_optimizations\"\n-  \"#\"\n-  [(set_attr \"type\" \"fistp\")\n-   (set_attr \"i387_cw\" \"floor\")\n-   (set_attr \"mode\" \"DI\")])\n-\n-(define_split\n-  [(set (match_operand:DI 0 \"register_operand\")\n-\t(unspec:DI [(match_operand:XF 1 \"register_operand\")]\n-\t\t   UNSPEC_FIST_FLOOR))\n-   (use (match_operand:HI 2 \"memory_operand\"))\n-   (use (match_operand:HI 3 \"memory_operand\"))\n-   (clobber (match_operand:DI 4 \"memory_operand\"))\n-   (clobber (match_scratch 5))]\n-  \"reload_completed\"\n-  [(parallel [(set (match_dup 4)\n-\t\t   (unspec:DI [(match_dup 1)] UNSPEC_FIST_FLOOR))\n-\t      (use (match_dup 2))\n-\t      (use (match_dup 3))\n-\t      (clobber (match_dup 5))])\n-   (set (match_dup 0) (match_dup 4))])\n-\n-(define_split\n-  [(set (match_operand:DI 0 \"memory_operand\")\n-\t(unspec:DI [(match_operand:XF 1 \"register_operand\")]\n-\t\t   UNSPEC_FIST_FLOOR))\n-   (use (match_operand:HI 2 \"memory_operand\"))\n-   (use (match_operand:HI 3 \"memory_operand\"))\n-   (clobber (match_operand:DI 4 \"memory_operand\"))\n-   (clobber (match_scratch 5))]\n-  \"reload_completed\"\n-  [(parallel [(set (match_dup 0)\n-\t\t   (unspec:DI [(match_dup 1)] UNSPEC_FIST_FLOOR))\n-\t      (use (match_dup 2))\n-\t      (use (match_dup 3))\n-\t      (clobber (match_dup 5))])])\n-\n-(define_insn \"fist<mode>2_floor\"\n-  [(set (match_operand:SWI24 0 \"memory_operand\" \"=m\")\n-\t(unspec:SWI24 [(match_operand:XF 1 \"register_operand\" \"f\")]\n-\t\t      UNSPEC_FIST_FLOOR))\n-   (use (match_operand:HI 2 \"memory_operand\" \"m\"))\n-   (use (match_operand:HI 3 \"memory_operand\" \"m\"))]\n-  \"TARGET_USE_FANCY_MATH_387\n-   && flag_unsafe_math_optimizations\"\n-  \"* return output_fix_trunc (insn, operands, false);\"\n-  [(set_attr \"type\" \"fistp\")\n-   (set_attr \"i387_cw\" \"floor\")\n-   (set_attr \"mode\" \"<MODE>\")])\n-\n-(define_insn \"fist<mode>2_floor_with_temp\"\n-  [(set (match_operand:SWI24 0 \"nonimmediate_operand\" \"=m,?r\")\n-\t(unspec:SWI24 [(match_operand:XF 1 \"register_operand\" \"f,f\")]\n-\t\t      UNSPEC_FIST_FLOOR))\n-   (use (match_operand:HI 2 \"memory_operand\" \"m,m\"))\n-   (use (match_operand:HI 3 \"memory_operand\" \"m,m\"))\n-   (clobber (match_operand:SWI24 4 \"memory_operand\" \"=X,m\"))]\n-  \"TARGET_USE_FANCY_MATH_387\n-   && flag_unsafe_math_optimizations\"\n-  \"#\"\n-  [(set_attr \"type\" \"fistp\")\n-   (set_attr \"i387_cw\" \"floor\")\n-   (set_attr \"mode\" \"<MODE>\")])\n-\n-(define_split\n-  [(set (match_operand:SWI24 0 \"register_operand\")\n-\t(unspec:SWI24 [(match_operand:XF 1 \"register_operand\")]\n-\t\t      UNSPEC_FIST_FLOOR))\n-   (use (match_operand:HI 2 \"memory_operand\"))\n-   (use (match_operand:HI 3 \"memory_operand\"))\n-   (clobber (match_operand:SWI24 4 \"memory_operand\"))]\n-  \"reload_completed\"\n-  [(parallel [(set (match_dup 4)\n-\t\t   (unspec:SWI24 [(match_dup 1)] UNSPEC_FIST_FLOOR))\n-\t      (use (match_dup 2))\n-\t      (use (match_dup 3))])\n-   (set (match_dup 0) (match_dup 4))])\n+  else\n+    {\n+      rtx op0, op1;\n \n-(define_split\n-  [(set (match_operand:SWI24 0 \"memory_operand\")\n-\t(unspec:SWI24 [(match_operand:XF 1 \"register_operand\")]\n-\t\t      UNSPEC_FIST_FLOOR))\n-   (use (match_operand:HI 2 \"memory_operand\"))\n-   (use (match_operand:HI 3 \"memory_operand\"))\n-   (clobber (match_operand:SWI24 4 \"memory_operand\"))]\n-  \"reload_completed\"\n-  [(parallel [(set (match_dup 0)\n-\t\t   (unspec:SWI24 [(match_dup 1)] UNSPEC_FIST_FLOOR))\n-\t      (use (match_dup 2))\n-\t      (use (match_dup 3))])])\n+      if (optimize_insn_for_size_p ())\n+\tFAIL;\n \n-(define_expand \"lfloorxf<mode>2\"\n-  [(parallel [(set (match_operand:SWI248x 0 \"nonimmediate_operand\")\n-\t\t   (unspec:SWI248x [(match_operand:XF 1 \"register_operand\")]\n-\t\t\t\t   UNSPEC_FIST_FLOOR))\n-\t      (clobber (reg:CC FLAGS_REG))])]\n-  \"TARGET_USE_FANCY_MATH_387\n-   && (!TARGET_SSE_MATH || TARGET_MIX_SSE_I387)\n-   && flag_unsafe_math_optimizations\")\n+      op0 = gen_reg_rtx (XFmode);\n+      op1 = gen_reg_rtx (XFmode);\n+      emit_insn (gen_extend<mode>xf2 (op1, operands[1]));\n+      emit_insn (gen_frndintxf2_ceil (op0, op1));\n \n-(define_expand \"lfloor<MODEF:mode><SWI48:mode>2\"\n-  [(match_operand:SWI48 0 \"nonimmediate_operand\")\n-   (match_operand:MODEF 1 \"register_operand\")]\n-  \"SSE_FLOAT_MODE_P (<MODEF:MODE>mode) && TARGET_SSE_MATH\n-   && !flag_trapping_math\"\n-{\n-  if (TARGET_64BIT && optimize_insn_for_size_p ())\n-    FAIL;\n-  ix86_expand_lfloorceil (operands[0], operands[1], true);\n+      emit_insn (gen_truncxf<mode>2_i387_noop (operands[0], op0));\n+    }\n   DONE;\n })\n \n-(define_expand \"ceilxf2\"\n+(define_expand \"btruncxf2\"\n   [(use (match_operand:XF 0 \"register_operand\"))\n    (use (match_operand:XF 1 \"register_operand\"))]\n   \"TARGET_USE_FANCY_MATH_387\n    && flag_unsafe_math_optimizations\"\n {\n   if (optimize_insn_for_size_p ())\n     FAIL;\n-  emit_insn (gen_frndintxf2_ceil (operands[0], operands[1]));\n+  emit_insn (gen_frndintxf2_trunc (operands[0], operands[1]));\n   DONE;\n })\n \n-(define_expand \"ceil<mode>2\"\n+(define_expand \"btrunc<mode>2\"\n   [(use (match_operand:MODEF 0 \"register_operand\"))\n    (use (match_operand:MODEF 1 \"register_operand\"))]\n   \"(TARGET_USE_FANCY_MATH_387\n@@ -15399,13 +15292,13 @@\n     {\n       if (TARGET_ROUND)\n \temit_insn (gen_sse4_1_round<mode>2\n-\t\t   (operands[0], operands[1], GEN_INT (ROUND_CEIL)));\n+\t\t   (operands[0], operands[1], GEN_INT (ROUND_TRUNC)));\n       else if (optimize_insn_for_size_p ())\n \tFAIL;\n       else if (TARGET_64BIT || (<MODE>mode != DFmode))\n-\tix86_expand_floorceil (operands[0], operands[1], false);\n+\tix86_expand_trunc (operands[0], operands[1]);\n       else\n-\tix86_expand_floorceildf_32 (operands[0], operands[1], false);\n+\tix86_expand_truncdf_32 (operands[0], operands[1]);\n     }\n   else\n     {\n@@ -15417,17 +15310,85 @@\n       op0 = gen_reg_rtx (XFmode);\n       op1 = gen_reg_rtx (XFmode);\n       emit_insn (gen_extend<mode>xf2 (op1, operands[1]));\n-      emit_insn (gen_frndintxf2_ceil (op0, op1));\n+      emit_insn (gen_frndintxf2_trunc (op0, op1));\n \n       emit_insn (gen_truncxf<mode>2_i387_noop (operands[0], op0));\n     }\n   DONE;\n })\n \n-(define_insn_and_split \"*fist<mode>2_ceil_1\"\n+;; Rounding mode control word calculation could clobber FLAGS_REG.\n+(define_insn_and_split \"frndintxf2_mask_pm\"\n+  [(set (match_operand:XF 0 \"register_operand\")\n+\t(unspec:XF [(match_operand:XF 1 \"register_operand\")]\n+\t\t   UNSPEC_FRNDINT_MASK_PM))\n+   (clobber (reg:CC FLAGS_REG))]\n+  \"TARGET_USE_FANCY_MATH_387\n+   && flag_unsafe_math_optimizations\n+   && can_create_pseudo_p ()\"\n+  \"#\"\n+  \"&& 1\"\n+  [(const_int 0)]\n+{\n+  ix86_optimize_mode_switching[I387_MASK_PM] = 1;\n+\n+  operands[2] = assign_386_stack_local (HImode, SLOT_CW_STORED);\n+  operands[3] = assign_386_stack_local (HImode, SLOT_CW_MASK_PM);\n+\n+  emit_insn (gen_frndintxf2_mask_pm_i387 (operands[0], operands[1],\n+\t\t\t\t\t  operands[2], operands[3]));\n+  DONE;\n+}\n+  [(set_attr \"type\" \"frndint\")\n+   (set_attr \"i387_cw\" \"mask_pm\")\n+   (set_attr \"mode\" \"XF\")])\n+\n+(define_insn \"frndintxf2_mask_pm_i387\"\n+  [(set (match_operand:XF 0 \"register_operand\" \"=f\")\n+\t(unspec:XF [(match_operand:XF 1 \"register_operand\" \"0\")]\n+\t\t   UNSPEC_FRNDINT_MASK_PM))\n+   (use (match_operand:HI 2 \"memory_operand\" \"m\"))\n+   (use (match_operand:HI 3 \"memory_operand\" \"m\"))]\n+  \"TARGET_USE_FANCY_MATH_387\n+   && flag_unsafe_math_optimizations\"\n+  \"fldcw\\t%3\\n\\tfrndint\\n\\tfclex\\n\\tfldcw\\t%2\"\n+  [(set_attr \"type\" \"frndint\")\n+   (set_attr \"i387_cw\" \"mask_pm\")\n+   (set_attr \"mode\" \"XF\")])\n+\n+(define_expand \"nearbyintxf2\"\n+  [(use (match_operand:XF 0 \"register_operand\"))\n+   (use (match_operand:XF 1 \"register_operand\"))]\n+  \"TARGET_USE_FANCY_MATH_387\n+   && flag_unsafe_math_optimizations\"\n+{\n+  emit_insn (gen_frndintxf2_mask_pm (operands[0], operands[1]));\n+  DONE;\n+})\n+\n+(define_expand \"nearbyint<mode>2\"\n+  [(use (match_operand:MODEF 0 \"register_operand\"))\n+   (use (match_operand:MODEF 1 \"register_operand\"))]\n+  \"TARGET_USE_FANCY_MATH_387\n+   && (!(SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH)\n+       || TARGET_MIX_SSE_I387)\n+   && flag_unsafe_math_optimizations\"\n+{\n+  rtx op0 = gen_reg_rtx (XFmode);\n+  rtx op1 = gen_reg_rtx (XFmode);\n+\n+  emit_insn (gen_extend<mode>xf2 (op1, operands[1]));\n+  emit_insn (gen_frndintxf2_mask_pm (op0, op1));\n+\n+  emit_insn (gen_truncxf<mode>2_i387_noop (operands[0], op0));\n+  DONE;\n+})\n+\n+;; Rounding mode control word calculation could clobber FLAGS_REG.\n+(define_insn_and_split \"*fist<mode>2_<rounding>_1\"\n   [(set (match_operand:SWI248x 0 \"nonimmediate_operand\")\n \t(unspec:SWI248x [(match_operand:XF 1 \"register_operand\")]\n-\t\t\tUNSPEC_FIST_CEIL))\n+\t\t\tFIST_ROUNDING))\n    (clobber (reg:CC FLAGS_REG))]\n   \"TARGET_USE_FANCY_MATH_387\n    && flag_unsafe_math_optimizations\n@@ -15436,44 +15397,44 @@\n   \"&& 1\"\n   [(const_int 0)]\n {\n-  ix86_optimize_mode_switching[I387_CEIL] = 1;\n+  ix86_optimize_mode_switching[I387_<ROUNDING>] = 1;\n \n   operands[2] = assign_386_stack_local (HImode, SLOT_CW_STORED);\n-  operands[3] = assign_386_stack_local (HImode, SLOT_CW_CEIL);\n+  operands[3] = assign_386_stack_local (HImode, SLOT_CW_<ROUNDING>);\n   if (memory_operand (operands[0], VOIDmode))\n-    emit_insn (gen_fist<mode>2_ceil (operands[0], operands[1],\n-\t\t\t\t     operands[2], operands[3]));\n+    emit_insn (gen_fist<mode>2_<rounding> (operands[0], operands[1],\n+\t\t\t\t\t   operands[2], operands[3]));\n   else\n     {\n       operands[4] = assign_386_stack_local (<MODE>mode, SLOT_TEMP);\n-      emit_insn (gen_fist<mode>2_ceil_with_temp (operands[0], operands[1],\n-\t\t\t\t\t\t operands[2], operands[3],\n-\t\t\t\t\t\t operands[4]));\n+      emit_insn (gen_fist<mode>2_<rounding>_with_temp\n+\t\t  (operands[0], operands[1], operands[2],\n+\t\t   operands[3], operands[4]));\n     }\n   DONE;\n }\n   [(set_attr \"type\" \"fistp\")\n-   (set_attr \"i387_cw\" \"ceil\")\n+   (set_attr \"i387_cw\" \"<rounding>\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n-(define_insn \"fistdi2_ceil\"\n+(define_insn \"fistdi2_<rounding>\"\n   [(set (match_operand:DI 0 \"memory_operand\" \"=m\")\n \t(unspec:DI [(match_operand:XF 1 \"register_operand\" \"f\")]\n-\t\t   UNSPEC_FIST_CEIL))\n+\t\t   FIST_ROUNDING))\n    (use (match_operand:HI 2 \"memory_operand\" \"m\"))\n    (use (match_operand:HI 3 \"memory_operand\" \"m\"))\n    (clobber (match_scratch:XF 4 \"=&1f\"))]\n   \"TARGET_USE_FANCY_MATH_387\n    && flag_unsafe_math_optimizations\"\n   \"* return output_fix_trunc (insn, operands, false);\"\n   [(set_attr \"type\" \"fistp\")\n-   (set_attr \"i387_cw\" \"ceil\")\n+   (set_attr \"i387_cw\" \"<rounding>\")\n    (set_attr \"mode\" \"DI\")])\n \n-(define_insn \"fistdi2_ceil_with_temp\"\n+(define_insn \"fistdi2_<rounding>_with_temp\"\n   [(set (match_operand:DI 0 \"nonimmediate_operand\" \"=m,?r\")\n \t(unspec:DI [(match_operand:XF 1 \"register_operand\" \"f,f\")]\n-\t\t   UNSPEC_FIST_CEIL))\n+\t\t   FIST_ROUNDING))\n    (use (match_operand:HI 2 \"memory_operand\" \"m,m\"))\n    (use (match_operand:HI 3 \"memory_operand\" \"m,m\"))\n    (clobber (match_operand:DI 4 \"memory_operand\" \"=X,m\"))\n@@ -15482,20 +15443,20 @@\n    && flag_unsafe_math_optimizations\"\n   \"#\"\n   [(set_attr \"type\" \"fistp\")\n-   (set_attr \"i387_cw\" \"ceil\")\n+   (set_attr \"i387_cw\" \"<rounding>\")\n    (set_attr \"mode\" \"DI\")])\n \n (define_split\n   [(set (match_operand:DI 0 \"register_operand\")\n \t(unspec:DI [(match_operand:XF 1 \"register_operand\")]\n-\t\t   UNSPEC_FIST_CEIL))\n+\t\t   FIST_ROUNDING))\n    (use (match_operand:HI 2 \"memory_operand\"))\n    (use (match_operand:HI 3 \"memory_operand\"))\n    (clobber (match_operand:DI 4 \"memory_operand\"))\n    (clobber (match_scratch 5))]\n   \"reload_completed\"\n   [(parallel [(set (match_dup 4)\n-\t\t   (unspec:DI [(match_dup 1)] UNSPEC_FIST_CEIL))\n+\t\t   (unspec:DI [(match_dup 1)] FIST_ROUNDING))\n \t      (use (match_dup 2))\n \t      (use (match_dup 3))\n \t      (clobber (match_dup 5))])\n@@ -15504,207 +15465,100 @@\n (define_split\n   [(set (match_operand:DI 0 \"memory_operand\")\n \t(unspec:DI [(match_operand:XF 1 \"register_operand\")]\n-\t\t   UNSPEC_FIST_CEIL))\n+\t\t   FIST_ROUNDING))\n    (use (match_operand:HI 2 \"memory_operand\"))\n    (use (match_operand:HI 3 \"memory_operand\"))\n    (clobber (match_operand:DI 4 \"memory_operand\"))\n    (clobber (match_scratch 5))]\n   \"reload_completed\"\n   [(parallel [(set (match_dup 0)\n-\t\t   (unspec:DI [(match_dup 1)] UNSPEC_FIST_CEIL))\n+\t\t   (unspec:DI [(match_dup 1)] FIST_ROUNDING))\n \t      (use (match_dup 2))\n \t      (use (match_dup 3))\n \t      (clobber (match_dup 5))])])\n \n-(define_insn \"fist<mode>2_ceil\"\n+(define_insn \"fist<mode>2_<rounding>\"\n   [(set (match_operand:SWI24 0 \"memory_operand\" \"=m\")\n \t(unspec:SWI24 [(match_operand:XF 1 \"register_operand\" \"f\")]\n-\t\t      UNSPEC_FIST_CEIL))\n+\t\t      FIST_ROUNDING))\n    (use (match_operand:HI 2 \"memory_operand\" \"m\"))\n    (use (match_operand:HI 3 \"memory_operand\" \"m\"))]\n   \"TARGET_USE_FANCY_MATH_387\n    && flag_unsafe_math_optimizations\"\n   \"* return output_fix_trunc (insn, operands, false);\"\n   [(set_attr \"type\" \"fistp\")\n-   (set_attr \"i387_cw\" \"ceil\")\n+   (set_attr \"i387_cw\" \"<rounding>\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n-(define_insn \"fist<mode>2_ceil_with_temp\"\n+(define_insn \"fist<mode>2_<rounding>_with_temp\"\n   [(set (match_operand:SWI24 0 \"nonimmediate_operand\" \"=m,?r\")\n \t(unspec:SWI24 [(match_operand:XF 1 \"register_operand\" \"f,f\")]\n-\t\t      UNSPEC_FIST_CEIL))\n+\t\t      FIST_ROUNDING))\n    (use (match_operand:HI 2 \"memory_operand\" \"m,m\"))\n    (use (match_operand:HI 3 \"memory_operand\" \"m,m\"))\n    (clobber (match_operand:SWI24 4 \"memory_operand\" \"=X,m\"))]\n   \"TARGET_USE_FANCY_MATH_387\n    && flag_unsafe_math_optimizations\"\n   \"#\"\n   [(set_attr \"type\" \"fistp\")\n-   (set_attr \"i387_cw\" \"ceil\")\n+   (set_attr \"i387_cw\" \"<rounding>\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n (define_split\n   [(set (match_operand:SWI24 0 \"register_operand\")\n \t(unspec:SWI24 [(match_operand:XF 1 \"register_operand\")]\n-\t\t      UNSPEC_FIST_CEIL))\n+\t\t      FIST_ROUNDING))\n    (use (match_operand:HI 2 \"memory_operand\"))\n    (use (match_operand:HI 3 \"memory_operand\"))\n    (clobber (match_operand:SWI24 4 \"memory_operand\"))]\n   \"reload_completed\"\n   [(parallel [(set (match_dup 4)\n-\t\t   (unspec:SWI24 [(match_dup 1)] UNSPEC_FIST_CEIL))\n+\t\t   (unspec:SWI24 [(match_dup 1)] FIST_ROUNDING))\n \t      (use (match_dup 2))\n \t      (use (match_dup 3))])\n    (set (match_dup 0) (match_dup 4))])\n \n (define_split\n   [(set (match_operand:SWI24 0 \"memory_operand\")\n \t(unspec:SWI24 [(match_operand:XF 1 \"register_operand\")]\n-\t\t      UNSPEC_FIST_CEIL))\n+\t\t      FIST_ROUNDING))\n    (use (match_operand:HI 2 \"memory_operand\"))\n    (use (match_operand:HI 3 \"memory_operand\"))\n    (clobber (match_operand:SWI24 4 \"memory_operand\"))]\n   \"reload_completed\"\n   [(parallel [(set (match_dup 0)\n-\t\t   (unspec:SWI24 [(match_dup 1)] UNSPEC_FIST_CEIL))\n+\t\t   (unspec:SWI24 [(match_dup 1)] FIST_ROUNDING))\n \t      (use (match_dup 2))\n \t      (use (match_dup 3))])])\n \n-(define_expand \"lceilxf<mode>2\"\n+(define_expand \"l<rounding>xf<mode>2\"\n   [(parallel [(set (match_operand:SWI248x 0 \"nonimmediate_operand\")\n \t\t   (unspec:SWI248x [(match_operand:XF 1 \"register_operand\")]\n-\t\t\t\t   UNSPEC_FIST_CEIL))\n+\t\t\t\t   FIST_ROUNDING))\n \t      (clobber (reg:CC FLAGS_REG))])]\n   \"TARGET_USE_FANCY_MATH_387\n    && (!TARGET_SSE_MATH || TARGET_MIX_SSE_I387)\n    && flag_unsafe_math_optimizations\")\n \n-(define_expand \"lceil<MODEF:mode><SWI48:mode>2\"\n+(define_expand \"lfloor<MODEF:mode><SWI48:mode>2\"\n   [(match_operand:SWI48 0 \"nonimmediate_operand\")\n    (match_operand:MODEF 1 \"register_operand\")]\n   \"SSE_FLOAT_MODE_P (<MODEF:MODE>mode) && TARGET_SSE_MATH\n    && !flag_trapping_math\"\n {\n-  ix86_expand_lfloorceil (operands[0], operands[1], false);\n-  DONE;\n-})\n-\n-(define_expand \"btruncxf2\"\n-  [(use (match_operand:XF 0 \"register_operand\"))\n-   (use (match_operand:XF 1 \"register_operand\"))]\n-  \"TARGET_USE_FANCY_MATH_387\n-   && flag_unsafe_math_optimizations\"\n-{\n-  if (optimize_insn_for_size_p ())\n+  if (TARGET_64BIT && optimize_insn_for_size_p ())\n     FAIL;\n-  emit_insn (gen_frndintxf2_trunc (operands[0], operands[1]));\n-  DONE;\n-})\n-\n-(define_expand \"btrunc<mode>2\"\n-  [(use (match_operand:MODEF 0 \"register_operand\"))\n-   (use (match_operand:MODEF 1 \"register_operand\"))]\n-  \"(TARGET_USE_FANCY_MATH_387\n-    && (!(SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH)\n-\t|| TARGET_MIX_SSE_I387)\n-    && flag_unsafe_math_optimizations)\n-   || (SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH\n-       && !flag_trapping_math)\"\n-{\n-  if (SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH\n-      && !flag_trapping_math)\n-    {\n-      if (TARGET_ROUND)\n-\temit_insn (gen_sse4_1_round<mode>2\n-\t\t   (operands[0], operands[1], GEN_INT (ROUND_TRUNC)));\n-      else if (optimize_insn_for_size_p ())\n-\tFAIL;\n-      else if (TARGET_64BIT || (<MODE>mode != DFmode))\n-\tix86_expand_trunc (operands[0], operands[1]);\n-      else\n-\tix86_expand_truncdf_32 (operands[0], operands[1]);\n-    }\n-  else\n-    {\n-      rtx op0, op1;\n-\n-      if (optimize_insn_for_size_p ())\n-\tFAIL;\n-\n-      op0 = gen_reg_rtx (XFmode);\n-      op1 = gen_reg_rtx (XFmode);\n-      emit_insn (gen_extend<mode>xf2 (op1, operands[1]));\n-      emit_insn (gen_frndintxf2_trunc (op0, op1));\n-\n-      emit_insn (gen_truncxf<mode>2_i387_noop (operands[0], op0));\n-    }\n-  DONE;\n-})\n-\n-;; Rounding mode control word calculation could clobber FLAGS_REG.\n-(define_insn_and_split \"frndintxf2_mask_pm\"\n-  [(set (match_operand:XF 0 \"register_operand\")\n-\t(unspec:XF [(match_operand:XF 1 \"register_operand\")]\n-\t\t   UNSPEC_FRNDINT_MASK_PM))\n-   (clobber (reg:CC FLAGS_REG))]\n-  \"TARGET_USE_FANCY_MATH_387\n-   && flag_unsafe_math_optimizations\n-   && can_create_pseudo_p ()\"\n-  \"#\"\n-  \"&& 1\"\n-  [(const_int 0)]\n-{\n-  ix86_optimize_mode_switching[I387_MASK_PM] = 1;\n-\n-  operands[2] = assign_386_stack_local (HImode, SLOT_CW_STORED);\n-  operands[3] = assign_386_stack_local (HImode, SLOT_CW_MASK_PM);\n-\n-  emit_insn (gen_frndintxf2_mask_pm_i387 (operands[0], operands[1],\n-\t\t\t\t\t  operands[2], operands[3]));\n-  DONE;\n-}\n-  [(set_attr \"type\" \"frndint\")\n-   (set_attr \"i387_cw\" \"mask_pm\")\n-   (set_attr \"mode\" \"XF\")])\n-\n-(define_insn \"frndintxf2_mask_pm_i387\"\n-  [(set (match_operand:XF 0 \"register_operand\" \"=f\")\n-\t(unspec:XF [(match_operand:XF 1 \"register_operand\" \"0\")]\n-\t\t   UNSPEC_FRNDINT_MASK_PM))\n-   (use (match_operand:HI 2 \"memory_operand\" \"m\"))\n-   (use (match_operand:HI 3 \"memory_operand\" \"m\"))]\n-  \"TARGET_USE_FANCY_MATH_387\n-   && flag_unsafe_math_optimizations\"\n-  \"fldcw\\t%3\\n\\tfrndint\\n\\tfclex\\n\\tfldcw\\t%2\"\n-  [(set_attr \"type\" \"frndint\")\n-   (set_attr \"i387_cw\" \"mask_pm\")\n-   (set_attr \"mode\" \"XF\")])\n-\n-(define_expand \"nearbyintxf2\"\n-  [(use (match_operand:XF 0 \"register_operand\"))\n-   (use (match_operand:XF 1 \"register_operand\"))]\n-  \"TARGET_USE_FANCY_MATH_387\n-   && flag_unsafe_math_optimizations\"\n-{\n-  emit_insn (gen_frndintxf2_mask_pm (operands[0], operands[1]));\n+  ix86_expand_lfloorceil (operands[0], operands[1], true);\n   DONE;\n })\n \n-(define_expand \"nearbyint<mode>2\"\n-  [(use (match_operand:MODEF 0 \"register_operand\"))\n-   (use (match_operand:MODEF 1 \"register_operand\"))]\n-  \"TARGET_USE_FANCY_MATH_387\n-   && (!(SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH)\n-       || TARGET_MIX_SSE_I387)\n-   && flag_unsafe_math_optimizations\"\n+(define_expand \"lceil<MODEF:mode><SWI48:mode>2\"\n+  [(match_operand:SWI48 0 \"nonimmediate_operand\")\n+   (match_operand:MODEF 1 \"register_operand\")]\n+  \"SSE_FLOAT_MODE_P (<MODEF:MODE>mode) && TARGET_SSE_MATH\n+   && !flag_trapping_math\"\n {\n-  rtx op0 = gen_reg_rtx (XFmode);\n-  rtx op1 = gen_reg_rtx (XFmode);\n-\n-  emit_insn (gen_extend<mode>xf2 (op1, operands[1]));\n-  emit_insn (gen_frndintxf2_mask_pm (op0, op1));\n-\n-  emit_insn (gen_truncxf<mode>2_i387_noop (operands[0], op0));\n+  ix86_expand_lfloorceil (operands[0], operands[1], false);\n   DONE;\n })\n "}]}