{"sha": "ee7d912e9bee15749519edd9775a4eff14dc6f25", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWU3ZDkxMmU5YmVlMTU3NDk1MTllZGQ5Nzc1YTRlZmYxNGRjNmYyNQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-03-10T02:33:33Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-03-10T02:33:33Z"}, "message": "(fndef, nested_function): Pass prefix_attributes to start_function.\n\n(setspecs): Save prefix_attributes in declspec_stack.\n(decl rules): Restore prefix_attributes along with current_declspecs.\n(setattrs): Concatenate prefix_attributes to previous value.\n\nFrom-SVN: r9151", "tree": {"sha": "351036e27cceae857c45fc6d731f096a8c728666", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/351036e27cceae857c45fc6d731f096a8c728666"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ee7d912e9bee15749519edd9775a4eff14dc6f25", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee7d912e9bee15749519edd9775a4eff14dc6f25", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee7d912e9bee15749519edd9775a4eff14dc6f25", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee7d912e9bee15749519edd9775a4eff14dc6f25/comments", "author": null, "committer": null, "parents": [{"sha": "d8d27748c58c74cd3405bc9da5e12ec89f53722f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8d27748c58c74cd3405bc9da5e12ec89f53722f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8d27748c58c74cd3405bc9da5e12ec89f53722f"}], "stats": {"total": 29, "additions": 20, "deletions": 9}, "files": [{"sha": "f97751668fc28b69512c7f78c0e991cce07d0ee1", "filename": "gcc/c-parse.in", "status": "modified", "additions": 20, "deletions": 9, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee7d912e9bee15749519edd9775a4eff14dc6f25/gcc%2Fc-parse.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee7d912e9bee15749519edd9775a4eff14dc6f25/gcc%2Fc-parse.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-parse.in?ref=ee7d912e9bee15749519edd9775a4eff14dc6f25", "patch": "@@ -238,7 +238,7 @@ static int if_stmt_line;\n static tree current_declspecs;\n static tree prefix_attributes = NULL_TREE;\n \n-/* Stack of saved values of current_declspecs.  */\n+/* Stack of saved values of current_declspecs and prefix_attributes.  */\n static tree declspec_stack;\n \n /* 1 if we explained undeclared var errors.  */\n@@ -328,7 +328,7 @@ datadef:\n \f\n fndef:\n \t  typed_declspecs setspecs declarator\n-\t\t{ if (! start_function ($1, $3, 0))\n+\t\t{ if (! start_function ($1, $3, prefix_attributes, 0))\n \t\t    YYERROR1;\n \t\t  reinit_parse_for_function (); }\n \t  xdecls\n@@ -338,7 +338,7 @@ fndef:\n \t| typed_declspecs setspecs declarator error\n \t\t{ }\n \t| declmods setspecs notype_declarator\n-\t\t{ if (! start_function ($1, $3, 0))\n+\t\t{ if (! start_function ($1, $3, prefix_attributes, 0))\n \t\t    YYERROR1;\n \t\t  reinit_parse_for_function (); }\n \t  xdecls\n@@ -348,7 +348,7 @@ fndef:\n \t| declmods setspecs notype_declarator error\n \t\t{ }\n \t| setspecs notype_declarator\n-\t\t{ if (! start_function (NULL_TREE, $2, 0))\n+\t\t{ if (! start_function (NULL_TREE, $2, prefix_attributes, 0))\n \t\t    YYERROR1;\n \t\t  reinit_parse_for_function (); }\n \t  xdecls\n@@ -851,10 +851,12 @@ datadecls:\n datadecl:\n \ttyped_declspecs setspecs initdecls ';'\n \t\t{ current_declspecs = TREE_VALUE (declspec_stack);\n+\t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n \t\t  resume_momentary ($2); }\n \t| declmods setspecs notype_initdecls ';'\n-\t\t{ current_declspecs = TREE_VALUE (declspec_stack);\n+\t\t{ current_declspecs = TREE_VALUE (declspec_stack);\t\n+\t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n \t\t  resume_momentary ($2); }\n \t| typed_declspecs ';'\n@@ -887,31 +889,36 @@ decls:\n setspecs: /* empty */\n \t\t{ $$ = suspend_momentary ();\n \t\t  pending_xref_error ();\n-\t\t  declspec_stack = tree_cons (NULL_TREE, current_declspecs,\n+\t\t  declspec_stack = tree_cons (prefix_attributes,\n+\t\t\t\t\t      current_declspecs,\n \t\t\t\t\t      declspec_stack);\n \t\t  current_declspecs = $<ttype>0; \n \t\t  prefix_attributes = NULL_TREE; }\n \t;\n \n setattrs: /* empty */\n-\t\t{ prefix_attributes = $<ttype>0; }\n+\t\t{ prefix_attributes = chainon (prefix_attributes, $<ttype>0); }\n \t;\n \n decl:\n \ttyped_declspecs setspecs initdecls ';'\n \t\t{ current_declspecs = TREE_VALUE (declspec_stack);\n+\t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n \t\t  resume_momentary ($2); }\n \t| declmods setspecs notype_initdecls ';'\n \t\t{ current_declspecs = TREE_VALUE (declspec_stack);\n+\t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n \t\t  resume_momentary ($2); }\n \t| typed_declspecs setspecs nested_function\n \t\t{ current_declspecs = TREE_VALUE (declspec_stack);\n+\t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n \t\t  resume_momentary ($2); }\n \t| declmods setspecs notype_nested_function\n \t\t{ current_declspecs = TREE_VALUE (declspec_stack);\n+\t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n \t\t  resume_momentary ($2); }\n \t| typed_declspecs ';'\n@@ -1183,7 +1190,8 @@ end ifc\n nested_function:\n \t  declarator\n \t\t{ push_c_function_context ();\n-\t\t  if (! start_function (current_declspecs, $1, 1))\n+\t\t  if (! start_function (current_declspecs, $1,\n+\t\t\t\t\tprefix_attributes, 1))\n \t\t    {\n \t\t      pop_c_function_context ();\n \t\t      YYERROR1;\n@@ -1204,7 +1212,8 @@ nested_function:\n notype_nested_function:\n \t  notype_declarator\n \t\t{ push_c_function_context ();\n-\t\t  if (! start_function (current_declspecs, $1, 1))\n+\t\t  if (! start_function (current_declspecs, $1,\n+\t\t\t\t\tprefix_attributes, 1))\n \t\t    {\n \t\t      pop_c_function_context ();\n \t\t      YYERROR1;\n@@ -1394,6 +1403,7 @@ component_decl:\n \t  typed_typespecs setspecs components\n \t\t{ $$ = $3;\n \t\t  current_declspecs = TREE_VALUE (declspec_stack);\n+\t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n \t\t  resume_momentary ($2); }\n \t| typed_typespecs\n@@ -1404,6 +1414,7 @@ component_decl:\n \t| nonempty_type_quals setspecs components\n \t\t{ $$ = $3;\n \t\t  current_declspecs = TREE_VALUE (declspec_stack);\n+\t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n \t\t  resume_momentary ($2); }\n \t| nonempty_type_quals"}]}