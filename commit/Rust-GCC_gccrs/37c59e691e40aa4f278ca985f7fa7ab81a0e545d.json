{"sha": "37c59e691e40aa4f278ca985f7fa7ab81a0e545d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzdjNTllNjkxZTQwYWE0ZjI3OGNhOTg1ZjdmYTdhYjgxYTBlNTQ1ZA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2012-05-25T20:26:11Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2012-05-25T20:26:11Z"}, "message": "re PR lto/52178 (Ada bootstrap failure in LTO mode)\n\n\tPR lto/52178\n\t* tree-inline.c (remap_gimple_op_r): Fix handling of FIELD_DECL.\n\t* tree.c (RETURN_TRUE_IF_VAR): Do not return true for PLACEHOLDER_EXPR.\n\nFrom-SVN: r187892", "tree": {"sha": "4b88d16d1ec638d995e6e57ed4c9c3b58437eff7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4b88d16d1ec638d995e6e57ed4c9c3b58437eff7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/37c59e691e40aa4f278ca985f7fa7ab81a0e545d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37c59e691e40aa4f278ca985f7fa7ab81a0e545d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/37c59e691e40aa4f278ca985f7fa7ab81a0e545d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37c59e691e40aa4f278ca985f7fa7ab81a0e545d/comments", "author": null, "committer": null, "parents": [{"sha": "13af22d7a0dfc4db342ba39035784ba60e327790", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13af22d7a0dfc4db342ba39035784ba60e327790", "html_url": "https://github.com/Rust-GCC/gccrs/commit/13af22d7a0dfc4db342ba39035784ba60e327790"}], "stats": {"total": 22, "additions": 20, "deletions": 2}, "files": [{"sha": "136855a9959ebf04e592723487dc81ebc53955a7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37c59e691e40aa4f278ca985f7fa7ab81a0e545d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37c59e691e40aa4f278ca985f7fa7ab81a0e545d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=37c59e691e40aa4f278ca985f7fa7ab81a0e545d", "patch": "@@ -1,3 +1,9 @@\n+2012-05-25  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\tPR lto/52178\n+\t* tree-inline.c (remap_gimple_op_r): Fix handling of FIELD_DECL.\n+\t* tree.c (RETURN_TRUE_IF_VAR): Do not return true for PLACEHOLDER_EXPR.\n+\n 2012-05-25  Michael Meissner  <meissner@linux.vnet.ibm.com>\n \n \t* config/rs6000/t-linux64: Delete the 32-bit multilib that uses"}, {"sha": "0190aa953f51aaaa63466c17b871cdde45482bc0", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37c59e691e40aa4f278ca985f7fa7ab81a0e545d/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37c59e691e40aa4f278ca985f7fa7ab81a0e545d/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=37c59e691e40aa4f278ca985f7fa7ab81a0e545d", "patch": "@@ -818,6 +818,15 @@ remap_gimple_op_r (tree *tp, int *walk_subtrees, void *data)\n \t       || decl_function_context (*tp) == id->src_fn))\n     /* These may need to be remapped for EH handling.  */\n     *tp = remap_decl (*tp, id);\n+  else if (TREE_CODE (*tp) == FIELD_DECL)\n+    {\n+      /* If the enclosing record type is variably_modified_type_p, the field\n+\t has already been remapped.  Otherwise, it need not be.  */\n+      tree *n = (tree *) pointer_map_contains (id->decl_map, *tp);\n+      if (n)\n+\t*tp = *n;\n+      *walk_subtrees = 0;\n+    }\n   else if (TYPE_P (*tp))\n     /* Types may need remapping as well.  */\n     *tp = remap_type (*tp, id);"}, {"sha": "de4a1c042022a2b4d5ba666defe52c1cdade9604", "filename": "gcc/tree.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37c59e691e40aa4f278ca985f7fa7ab81a0e545d/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37c59e691e40aa4f278ca985f7fa7ab81a0e545d/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=37c59e691e40aa4f278ca985f7fa7ab81a0e545d", "patch": "@@ -8477,8 +8477,11 @@ variably_modified_type_p (tree type, tree fn)\n    a variable in FN.  */\n #define RETURN_TRUE_IF_VAR(T)\t\t\t\t\t\t\\\n   do { tree _t = (T);\t\t\t\t\t\t\t\\\n-    if (_t && _t != error_mark_node && TREE_CODE (_t) != INTEGER_CST\t\\\n-        && (!fn || walk_tree (&_t, find_var_from_fn, fn, NULL)))\t\\\n+    if (_t != NULL_TREE\t\t\t\t\t\t\t\\\n+\t&& _t != error_mark_node\t\t\t\t\t\\\n+\t&& TREE_CODE (_t) != INTEGER_CST\t\t\t\t\\\n+\t&& TREE_CODE (_t) != PLACEHOLDER_EXPR\t\t\t\t\\\n+\t&& (!fn || walk_tree (&_t, find_var_from_fn, fn, NULL)))\t\\\n       return true;  } while (0)\n \n   if (type == error_mark_node)"}]}