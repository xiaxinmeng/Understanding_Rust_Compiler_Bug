{"sha": "cfa7434c4b09e439ae8b904ad116adf6d3033f8c", "node_id": "C_kwDOANBUbNoAKGNmYTc0MzRjNGIwOWU0MzlhZThiOTA0YWQxMTZhZGY2ZDMwMzNmOGM", "commit": {"author": {"name": "Andrew MacLeod", "email": "amacleod@redhat.com", "date": "2022-09-22T21:27:36Z"}, "committer": {"name": "Andrew MacLeod", "email": "amacleod@redhat.com", "date": "2022-09-29T22:34:18Z"}, "message": "Move class value_relation the header file.\n\n\t* value-relation.cc (class value_relation): Move to .h file.\n\t(value_relation::set_relation): Ditto.\n\t(value_relation::value_relation): ditto.\n\t* value-relation.h (class value_relation): Move from .cc file.\n\t(value_relation::set_relation): Ditto\n\t(value_relation::value_relation): Ditto.", "tree": {"sha": "6d93466c3ab0f8c76400d59a1b42371873b891fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6d93466c3ab0f8c76400d59a1b42371873b891fb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cfa7434c4b09e439ae8b904ad116adf6d3033f8c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfa7434c4b09e439ae8b904ad116adf6d3033f8c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cfa7434c4b09e439ae8b904ad116adf6d3033f8c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfa7434c4b09e439ae8b904ad116adf6d3033f8c/comments", "author": null, "committer": null, "parents": [{"sha": "ef9bc3626ceacf9a81c1e6178a5b0eb83ca2e559", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef9bc3626ceacf9a81c1e6178a5b0eb83ca2e559", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef9bc3626ceacf9a81c1e6178a5b0eb83ca2e559"}], "stats": {"total": 112, "additions": 57, "deletions": 55}, "files": [{"sha": "e6f5ef4d5e1fea0baf18bbb691d2e360f94ca545", "filename": "gcc/value-relation.cc", "status": "modified", "additions": 0, "deletions": 55, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfa7434c4b09e439ae8b904ad116adf6d3033f8c/gcc%2Fvalue-relation.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfa7434c4b09e439ae8b904ad116adf6d3033f8c/gcc%2Fvalue-relation.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvalue-relation.cc?ref=cfa7434c4b09e439ae8b904ad116adf6d3033f8c", "patch": "@@ -635,61 +635,6 @@ equiv_oracle::dump (FILE *f) const\n \n \n // --------------------------------------------------------------------------\n-\n-// The value-relation class is used to encapsulate the represention of an\n-// individual relation between 2 ssa-names, and to facilitate operating on\n-// the relation.\n-\n-class value_relation\n-{\n-public:\n-  value_relation ();\n-  value_relation (relation_kind kind, tree n1, tree n2);\n-  void set_relation (relation_kind kind, tree n1, tree n2);\n-\n-  inline relation_kind kind () const { return related; }\n-  inline tree op1 () const { return name1; }\n-  inline tree op2 () const { return name2; }\n-\n-  bool union_ (value_relation &p);\n-  bool intersect (value_relation &p);\n-  void negate ();\n-  bool apply_transitive (const value_relation &rel);\n-\n-  void dump (FILE *f) const;\n-private:\n-  relation_kind related;\n-  tree name1, name2;\n-};\n-\n-// Set relation R between ssa_name N1 and N2.\n-\n-inline void\n-value_relation::set_relation (relation_kind r, tree n1, tree n2)\n-{\n-  related = r;\n-  name1 = n1;\n-  name2 = n2;\n-}\n-\n-// Default constructor.\n-\n-inline\n-value_relation::value_relation ()\n-{\n-  related = VREL_VARYING;\n-  name1 = NULL_TREE;\n-  name2 = NULL_TREE;\n-}\n-\n-// Constructor for relation R between SSA version N1 nd N2.\n-\n-inline\n-value_relation::value_relation (relation_kind kind, tree n1, tree n2)\n-{\n-  set_relation (kind, n1, n2);\n-}\n-\n // Negate the current relation.\n \n void"}, {"sha": "f3b18ac62efc57acdd15417a1b5b4aa67f14802b", "filename": "gcc/value-relation.h", "status": "modified", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfa7434c4b09e439ae8b904ad116adf6d3033f8c/gcc%2Fvalue-relation.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfa7434c4b09e439ae8b904ad116adf6d3033f8c/gcc%2Fvalue-relation.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvalue-relation.h?ref=cfa7434c4b09e439ae8b904ad116adf6d3033f8c", "patch": "@@ -256,4 +256,61 @@ class path_oracle : public relation_oracle\n   bitmap_obstack m_bitmaps;\n   struct obstack m_chain_obstack;\n };\n+\n+// The value-relation class is used to encapsulate the represention of an\n+// individual relation between 2 ssa-names, and to facilitate operating on\n+// the relation.\n+\n+class value_relation\n+{\n+public:\n+  value_relation ();\n+  value_relation (relation_kind kind, tree n1, tree n2);\n+  void set_relation (relation_kind kind, tree n1, tree n2);\n+\n+  inline relation_kind kind () const { return related; }\n+  inline tree op1 () const { return name1; }\n+  inline tree op2 () const { return name2; }\n+\n+  bool union_ (value_relation &p);\n+  bool intersect (value_relation &p);\n+  void negate ();\n+  bool apply_transitive (const value_relation &rel);\n+\n+  void dump (FILE *f) const;\n+private:\n+  relation_kind related;\n+  tree name1, name2;\n+};\n+\n+// Set relation R between ssa_name N1 and N2.\n+\n+inline void\n+value_relation::set_relation (relation_kind r, tree n1, tree n2)\n+{\n+  gcc_checking_assert (TREE_CODE (n1) == SSA_NAME\n+\t\t       && TREE_CODE (n2) == SSA_NAME);\n+  related = r;\n+  name1 = n1;\n+  name2 = n2;\n+}\n+\n+// Default constructor.\n+\n+inline\n+value_relation::value_relation ()\n+{\n+  related = VREL_VARYING;\n+  name1 = NULL_TREE;\n+  name2 = NULL_TREE;\n+}\n+\n+// Constructor for relation R between SSA version N1 nd N2.\n+\n+inline\n+value_relation::value_relation (relation_kind kind, tree n1, tree n2)\n+{\n+  set_relation (kind, n1, n2);\n+}\n+\n #endif  /* GCC_VALUE_RELATION_H */"}]}