{"sha": "bf2f234e754b1a820d8b33b8910d157d3c7e0edd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmYyZjIzNGU3NTRiMWE4MjBkOGIzM2I4OTEwZDE1N2QzYzdlMGVkZA==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2005-12-29T16:38:26Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2005-12-29T16:38:26Z"}, "message": "varasm.c (get_section): Use gcc_assert.\n\n\t* varasm.c (get_section): Use gcc_assert.\ncp:\n\t* method.c (make_thunk): Don't set comdat_linkage here.\n\t(use_thunk): Make thunk one only here, if thunk target is\n\tDECL_ONE_ONLY.\ntestsuite:\n\t* g++.dg/abi/thunk3.C: New.\n\t* g++.dg/abi/thunk4.C: New.\n\nFrom-SVN: r109149", "tree": {"sha": "26302b5481e79e9084d851184342c5d76e636dc7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/26302b5481e79e9084d851184342c5d76e636dc7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bf2f234e754b1a820d8b33b8910d157d3c7e0edd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf2f234e754b1a820d8b33b8910d157d3c7e0edd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf2f234e754b1a820d8b33b8910d157d3c7e0edd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf2f234e754b1a820d8b33b8910d157d3c7e0edd/comments", "author": null, "committer": null, "parents": [{"sha": "42b67c06ed335cf1c6f0cf9a3751ea35099393f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42b67c06ed335cf1c6f0cf9a3751ea35099393f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/42b67c06ed335cf1c6f0cf9a3751ea35099393f4"}], "stats": {"total": 71, "additions": 62, "deletions": 9}, "files": [{"sha": "f9b9002b8727448d1bc2d2100e2c87bea4784d98", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf2f234e754b1a820d8b33b8910d157d3c7e0edd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf2f234e754b1a820d8b33b8910d157d3c7e0edd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bf2f234e754b1a820d8b33b8910d157d3c7e0edd", "patch": "@@ -1,3 +1,7 @@\n+2005-12-29  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* varasm.c (get_section): Use gcc_assert.\n+\n 2005-12-29  Paul Brook  <paul@codesourcery.com>\n \n \t* config/m68k/m68k.h (RETURN_ADDR_RTX): Define."}, {"sha": "7391d15018fdffaf887976028ac1739e708543ae", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf2f234e754b1a820d8b33b8910d157d3c7e0edd/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf2f234e754b1a820d8b33b8910d157d3c7e0edd/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=bf2f234e754b1a820d8b33b8910d157d3c7e0edd", "patch": "@@ -1,3 +1,9 @@\n+2005-12-29  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* method.c (make_thunk): Don't set comdat_linkage here.\n+\t(use_thunk): Make thunk one only here, if thunk target is\n+\tDECL_ONE_ONLY.\n+\n 2005-12-26  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/25439"}, {"sha": "250c66d08b35a49a47c393beb4b09fe54d6017b2", "filename": "gcc/cp/method.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf2f234e754b1a820d8b33b8910d157d3c7e0edd/gcc%2Fcp%2Fmethod.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf2f234e754b1a820d8b33b8910d157d3c7e0edd/gcc%2Fcp%2Fmethod.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmethod.c?ref=bf2f234e754b1a820d8b33b8910d157d3c7e0edd", "patch": "@@ -137,8 +137,6 @@ make_thunk (tree function, bool this_adjusting,\n   TREE_READONLY (thunk) = TREE_READONLY (function);\n   TREE_THIS_VOLATILE (thunk) = TREE_THIS_VOLATILE (function);\n   TREE_PUBLIC (thunk) = TREE_PUBLIC (function);\n-  if (flag_weak)\n-    comdat_linkage (thunk);\n   SET_DECL_THUNK_P (thunk, this_adjusting);\n   THUNK_TARGET (thunk) = function;\n   THUNK_FIXED_OFFSET (thunk) = d;\n@@ -381,8 +379,8 @@ use_thunk (tree thunk_fndecl, bool emit_p)\n   DECL_VISIBILITY (thunk_fndecl) = DECL_VISIBILITY (function);\n   DECL_VISIBILITY_SPECIFIED (thunk_fndecl)\n     = DECL_VISIBILITY_SPECIFIED (function);\n-  if (flag_weak && TREE_PUBLIC (thunk_fndecl))\n-    comdat_linkage (thunk_fndecl);\n+  if (DECL_ONE_ONLY (function))\n+    make_decl_one_only (thunk_fndecl);\n \n   if (flag_syntax_only)\n     {"}, {"sha": "4dbfe9beb624b778a5da4f3ba42fccc57969814b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf2f234e754b1a820d8b33b8910d157d3c7e0edd/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf2f234e754b1a820d8b33b8910d157d3c7e0edd/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bf2f234e754b1a820d8b33b8910d157d3c7e0edd", "patch": "@@ -1,7 +1,12 @@\n+2005-12-29  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* g++.dg/abi/thunk3.C: New.\n+\t* g++.dg/abi/thunk4.C: New.\n+\n 2005-12-29  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/25532\n-\t*gfortran.dg/host_used_types_1.f90: New test. Check that host\n+\t* gfortran.dg/host_used_types_1.f90: New test. Check that host\n \tassociated derived type components of derived types are\n \tproperly declared in contained procedures.\n "}, {"sha": "8b5f3ce59d926dad961cd142d369d77a3b0c9551", "filename": "gcc/testsuite/g++.dg/abi/thunk3.C", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf2f234e754b1a820d8b33b8910d157d3c7e0edd/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fthunk3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf2f234e754b1a820d8b33b8910d157d3c7e0edd/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fthunk3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fthunk3.C?ref=bf2f234e754b1a820d8b33b8910d157d3c7e0edd", "patch": "@@ -0,0 +1,20 @@\n+// { dg-final { scan-assembler-not \".weak\\t_ZThn4_N7Derived3FooEv\" } }\n+\n+struct Base \n+{\n+  virtual void Foo ();\n+};\n+\n+struct Filler \n+{\n+  virtual void Baz ();\n+};\n+\n+struct Derived : Filler, Base \n+{\n+  virtual void Foo ();\n+};\n+\n+void Derived::Foo ()\n+{\n+}"}, {"sha": "1c47740eed6821e31b0d091f7ffc84b74bc9ca9c", "filename": "gcc/testsuite/g++.dg/abi/thunk4.C", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf2f234e754b1a820d8b33b8910d157d3c7e0edd/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fthunk4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf2f234e754b1a820d8b33b8910d157d3c7e0edd/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fthunk4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fthunk4.C?ref=bf2f234e754b1a820d8b33b8910d157d3c7e0edd", "patch": "@@ -0,0 +1,22 @@\n+// { dg-final { scan-assembler \".weak\\t_ZThn4_N7Derived3FooEv\" } }\n+\n+struct Base \n+{\n+  virtual void Foo ();\n+};\n+\n+struct Filler \n+{\n+  virtual void Baz ();\n+};\n+\n+struct Derived : Filler, Base \n+{\n+  virtual void Foo ();\n+};\n+\n+inline void Derived::Foo ()\n+{\n+}\n+\n+Derived f;"}, {"sha": "eafba6b0bc8bc24bc663acf457a908bf0950003f", "filename": "gcc/varasm.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf2f234e754b1a820d8b33b8910d157d3c7e0edd/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf2f234e754b1a820d8b33b8910d157d3c7e0edd/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=bf2f234e754b1a820d8b33b8910d157d3c7e0edd", "patch": "@@ -249,10 +249,8 @@ get_section (const char *name, unsigned int flags, tree decl)\n \t  /* Sanity check user variables for flag changes.  */\n \t  if (decl == 0)\n \t    decl = sect->named.decl;\n-\t  if (decl)\n-\t    error (\"%+D causes a section type conflict\", decl);\n-\t  else\n-\t    gcc_unreachable ();\n+\t  gcc_assert (decl);\n+\t  error (\"%+D causes a section type conflict\", decl);\n \t}\n     }\n   return sect;"}]}