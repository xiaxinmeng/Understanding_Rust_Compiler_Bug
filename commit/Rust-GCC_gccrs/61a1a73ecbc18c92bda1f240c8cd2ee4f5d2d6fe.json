{"sha": "61a1a73ecbc18c92bda1f240c8cd2ee4f5d2d6fe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjFhMWE3M2VjYmMxOGM5MmJkYTFmMjQwYzhjZDJlZTRmNWQyZDZmZQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2014-12-03T18:41:42Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2014-12-03T18:41:42Z"}, "message": "re PR c++/63558 (cannot silence \"jump to case label\" with fpermissive)\n\n/cp\n2014-12-03  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/63558\n\t* decl.c (identify_goto): Return a bool if diagnostic is emitted.\n\t(check_previous_goto_1): Consistently emit permerror + inform.\n\t(check_goto): Likewise.\n\n/testsuite\n2014-12-03  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/63558\n\t* g++.dg/init/goto3.C: New.\n\t* g++.dg/eh/goto2.C: Adjust.\n\t* g++.dg/ext/vla14.C: Likewise.\n\t* g++.dg/gomp/block-1.C: Likewise.\n\t* g++.dg/gomp/block-2.C: Likewise.\n\t* g++.dg/gomp/block-3.C: Likewise.\n\t* g++.dg/gomp/block-5.C: Likewise.\n\t* g++.dg/gomp/target-1.C: Likewise.\n\t* g++.dg/gomp/target-2.C: Likewise.\n\t* g++.dg/gomp/taskgroup-1.C: Likewise.\n\t* g++.dg/gomp/teams-1.C: Likewise.\n\t* g++.dg/init/goto2.C: Likewise.\n\t* g++.dg/warn/pedantic1.C: Likewise.\n\t* g++.old-deja/g++.jason/jump.C: Likewise.\n\t* g++.old-deja/g++.law/arm6.C: Likewise.\n\t* g++.old-deja/g++.other/goto1.C: Likewise.\n\t* g++.old-deja/g++.other/goto3.C: Likewise.\n\t* g++.old-deja/g++.other/init9.C: Likewise.\n\nFrom-SVN: r218328", "tree": {"sha": "0f43abdd4a85efb73ee8518ab988c4215371e910", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0f43abdd4a85efb73ee8518ab988c4215371e910"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/61a1a73ecbc18c92bda1f240c8cd2ee4f5d2d6fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61a1a73ecbc18c92bda1f240c8cd2ee4f5d2d6fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/61a1a73ecbc18c92bda1f240c8cd2ee4f5d2d6fe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61a1a73ecbc18c92bda1f240c8cd2ee4f5d2d6fe/comments", "author": null, "committer": null, "parents": [{"sha": "c430f419e9d81e74193d92e26d7d4806dd74eaf6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c430f419e9d81e74193d92e26d7d4806dd74eaf6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c430f419e9d81e74193d92e26d7d4806dd74eaf6"}], "stats": {"total": 298, "additions": 196, "deletions": 102}, "files": [{"sha": "0e2548fbdb8822d4b1b9077d975289337b763b69", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61a1a73ecbc18c92bda1f240c8cd2ee4f5d2d6fe/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61a1a73ecbc18c92bda1f240c8cd2ee4f5d2d6fe/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=61a1a73ecbc18c92bda1f240c8cd2ee4f5d2d6fe", "patch": "@@ -1,3 +1,10 @@\n+2014-12-03  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/63558\n+\t* decl.c (identify_goto): Return a bool if diagnostic is emitted.\n+\t(check_previous_goto_1): Consistently emit permerror + inform.\n+\t(check_goto): Likewise.\n+\n 2014-12-03  Richard Biener  <rguenther@suse.de>\n \n \t* constexpr.c (cxx_eval_builtin_function_call): Use"}, {"sha": "2996ee68757c1ff4f95ea42bee1dd559e5d3f985", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 64, "deletions": 40, "changes": 104, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61a1a73ecbc18c92bda1f240c8cd2ee4f5d2d6fe/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61a1a73ecbc18c92bda1f240c8cd2ee4f5d2d6fe/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=61a1a73ecbc18c92bda1f240c8cd2ee4f5d2d6fe", "patch": "@@ -2874,15 +2874,15 @@ decl_jump_unsafe (tree decl)\n \n /* A subroutine of check_previous_goto_1 to identify a branch to the user.  */\n \n-static void\n+static bool\n identify_goto (tree decl, const location_t *locus)\n {\n-  if (decl)\n-    permerror (input_location, \"jump to label %qD\", decl);\n-  else\n-    permerror (input_location, \"jump to case label\");\n-  if (locus)\n-    permerror (*locus, \"  from here\");\n+  bool complained = (decl\n+\t\t     ? permerror (input_location, \"jump to label %qD\", decl)\n+\t\t     : permerror (input_location, \"jump to case label\"));\n+  if (complained && locus)\n+    inform (*locus, \"  from here\");\n+  return complained;\n }\n \n /* Check that a single previously seen jump to a newly defined label\n@@ -2896,12 +2896,14 @@ check_previous_goto_1 (tree decl, cp_binding_level* level, tree names,\n \t\t       bool exited_omp, const location_t *locus)\n {\n   cp_binding_level *b;\n-  bool identified = false, saw_eh = false, saw_omp = false;\n+  bool identified = false, complained = false;\n+  bool saw_eh = false, saw_omp = false;\n \n   if (exited_omp)\n     {\n-      identify_goto (decl, locus);\n-      error (\"  exits OpenMP structured block\");\n+      complained = identify_goto (decl, locus);\n+      if (complained)\n+\tinform (input_location, \"  exits OpenMP structured block\");\n       identified = saw_omp = true;\n     }\n \n@@ -2919,14 +2921,18 @@ check_previous_goto_1 (tree decl, cp_binding_level* level, tree names,\n \n \t  if (!identified)\n \t    {\n-\t      identify_goto (decl, locus);\n+\t      complained = identify_goto (decl, locus);\n \t      identified = true;\n \t    }\n-\t  if (problem > 1)\n-\t    error (\"  crosses initialization of %q+#D\", new_decls);\n-\t  else\n-\t    permerror (input_location, \"  enters scope of %q+#D which has \"\n-\t\t       \"non-trivial destructor\", new_decls);\n+\t  if (complained)\n+\t    {\n+\t      if (problem > 1)\n+\t\tinform (input_location,\n+\t\t\t\"  crosses initialization of %q+#D\", new_decls);\n+\t      else\n+\t\tinform (input_location, \"  enters scope of %q+#D which has \"\n+\t\t\t\"non-trivial destructor\", new_decls);\n+\t    }\n \t}\n \n       if (b == level)\n@@ -2935,23 +2941,27 @@ check_previous_goto_1 (tree decl, cp_binding_level* level, tree names,\n \t{\n \t  if (!identified)\n \t    {\n-\t      identify_goto (decl, locus);\n+\t      complained = identify_goto (decl, locus);\n \t      identified = true;\n \t    }\n-\t  if (b->kind == sk_try)\n-\t    error (\"  enters try block\");\n-\t  else\n-\t    error (\"  enters catch block\");\n+\t  if (complained)\n+\t    {\n+\t      if (b->kind == sk_try)\n+\t\tinform (input_location, \"  enters try block\");\n+\t      else\n+\t\tinform (input_location, \"  enters catch block\");\n+\t    }\n \t  saw_eh = true;\n \t}\n       if (b->kind == sk_omp && !saw_omp)\n \t{\n \t  if (!identified)\n \t    {\n-\t      identify_goto (decl, locus);\n+\t      complained = identify_goto (decl, locus);\n \t      identified = true;\n \t    }\n-\t  error (\"  enters OpenMP structured block\");\n+\t  if (complained)\n+\t    inform (input_location, \"  enters OpenMP structured block\");\n \t  saw_omp = true;\n \t}\n     }\n@@ -2980,7 +2990,7 @@ void\n check_goto (tree decl)\n {\n   struct named_label_entry *ent, dummy;\n-  bool saw_catch = false, identified = false;\n+  bool saw_catch = false, identified = false, complained = false;\n   tree bad;\n   unsigned ix;\n \n@@ -3023,8 +3033,9 @@ check_goto (tree decl)\n   if (ent->in_try_scope || ent->in_catch_scope\n       || ent->in_omp_scope || !vec_safe_is_empty (ent->bad_decls))\n     {\n-      permerror (input_location, \"jump to label %q+D\", decl);\n-      permerror (input_location, \"  from here\");\n+      complained = permerror (input_location, \"jump to label %q+D\", decl);\n+      if (complained)\n+\tinform (input_location, \"  from here\");\n       identified = true;\n     }\n \n@@ -3035,23 +3046,33 @@ check_goto (tree decl)\n       if (u > 1 && DECL_ARTIFICIAL (bad))\n \t{\n \t  /* Can't skip init of __exception_info.  */\n-\t  error_at (DECL_SOURCE_LOCATION (bad), \"  enters catch block\");\n+\t  if (complained)\n+\t    inform (DECL_SOURCE_LOCATION (bad), \"  enters catch block\");\n \t  saw_catch = true;\n \t}\n-      else if (u > 1)\n-\terror (\"  skips initialization of %q+#D\", bad);\n-      else\n-\tpermerror (input_location, \"  enters scope of %q+#D which has \"\n-\t\t   \"non-trivial destructor\", bad);\n+      else if (complained)\n+\t{\n+\t  if (u > 1)\n+\t    inform (input_location, \"  skips initialization of %q+#D\", bad);\n+\t  else\n+\t    inform (input_location, \"  enters scope of %q+#D which has \"\n+\t\t    \"non-trivial destructor\", bad);\n+\t}\n     }\n \n-  if (ent->in_try_scope)\n-    error (\"  enters try block\");\n-  else if (ent->in_catch_scope && !saw_catch)\n-    error (\"  enters catch block\");\n+  if (complained)\n+    {\n+      if (ent->in_try_scope)\n+\tinform (input_location, \"  enters try block\");\n+      else if (ent->in_catch_scope && !saw_catch)\n+\tinform (input_location, \"  enters catch block\");\n+    }\n \n   if (ent->in_omp_scope)\n-    error (\"  enters OpenMP structured block\");\n+    {\n+      if (complained)\n+\tinform (input_location, \"  enters OpenMP structured block\");\n+    }\n   else if (flag_openmp)\n     {\n       cp_binding_level *b;\n@@ -3063,11 +3084,14 @@ check_goto (tree decl)\n \t    {\n \t      if (!identified)\n \t\t{\n-\t\t  permerror (input_location, \"jump to label %q+D\", decl);\n-\t\t  permerror (input_location, \"  from here\");\n+\t\t  complained = permerror (input_location,\n+\t\t\t\t\t  \"jump to label %q+D\", decl);\n+\t\t  if (complained)\n+\t\t    inform (input_location, \"  from here\");\n \t\t  identified = true;\n \t\t}\n-\t      error (\"  exits OpenMP structured block\");\n+\t      if (complained)\n+\t\tinform (input_location, \"  exits OpenMP structured block\");\n \t      break;\n \t    }\n \t}"}, {"sha": "0b4d31f0234d0b1dcb244aedacaef30efa244da6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61a1a73ecbc18c92bda1f240c8cd2ee4f5d2d6fe/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61a1a73ecbc18c92bda1f240c8cd2ee4f5d2d6fe/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=61a1a73ecbc18c92bda1f240c8cd2ee4f5d2d6fe", "patch": "@@ -1,3 +1,25 @@\n+2014-12-03  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/63558\n+\t* g++.dg/init/goto3.C: New.\n+\t* g++.dg/eh/goto2.C: Adjust.\n+\t* g++.dg/ext/vla14.C: Likewise.\n+\t* g++.dg/gomp/block-1.C: Likewise.\n+\t* g++.dg/gomp/block-2.C: Likewise.\n+\t* g++.dg/gomp/block-3.C: Likewise.\n+\t* g++.dg/gomp/block-5.C: Likewise.\n+\t* g++.dg/gomp/target-1.C: Likewise.\n+\t* g++.dg/gomp/target-2.C: Likewise.\n+\t* g++.dg/gomp/taskgroup-1.C: Likewise.\n+\t* g++.dg/gomp/teams-1.C: Likewise.\n+\t* g++.dg/init/goto2.C: Likewise.\n+\t* g++.dg/warn/pedantic1.C: Likewise.\n+\t* g++.old-deja/g++.jason/jump.C: Likewise.\n+\t* g++.old-deja/g++.law/arm6.C: Likewise.\n+\t* g++.old-deja/g++.other/goto1.C: Likewise.\n+\t* g++.old-deja/g++.other/goto3.C: Likewise.\n+\t* g++.old-deja/g++.other/init9.C: Likewise.\n+\n 2014-12-03  Michael Meissner  <meissner@linux.vnet.ibm.com>\n \n \tPR target/64019"}, {"sha": "e9f1ca515a21feb942143e166f9e018024695718", "filename": "gcc/testsuite/g++.dg/eh/goto2.C", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61a1a73ecbc18c92bda1f240c8cd2ee4f5d2d6fe/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fgoto2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61a1a73ecbc18c92bda1f240c8cd2ee4f5d2d6fe/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fgoto2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fgoto2.C?ref=61a1a73ecbc18c92bda1f240c8cd2ee4f5d2d6fe", "patch": "@@ -3,10 +3,11 @@\n void f()\n try\n   {\n-    goto l2;       // { dg-error \"from here\" }\n+    goto l2;       // { dg-message \"from here\" }\n   l1: ;            // { dg-error \"jump to label 'l1'\" }\n   } catch (...)\n   {\n-  l2: ;            // { dg-error \"jump to label 'l2'|enters catch block\" }\n-    goto l1;       // { dg-error \"from here|enters try block\" }\n+  l2: ;            // { dg-error \"jump to label 'l2'\" }\n+                   // { dg-message \"enters catch block\" \"\" { target *-*-*} 10 }\n+    goto l1;       // { dg-message \"from here|enters try block\" }\n   }"}, {"sha": "5824ab37d84d0557f2fa0e11f7347223d2d30c1e", "filename": "gcc/testsuite/g++.dg/ext/vla14.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61a1a73ecbc18c92bda1f240c8cd2ee4f5d2d6fe/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvla14.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61a1a73ecbc18c92bda1f240c8cd2ee4f5d2d6fe/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvla14.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvla14.C?ref=61a1a73ecbc18c92bda1f240c8cd2ee4f5d2d6fe", "patch": "@@ -4,8 +4,8 @@\n void\n f (int n)\n {\n-  goto label; // { dg-error \"from here\" }\n-  int a[n]; // { dg-error \"crosses initialization\" }\n+  goto label; // { dg-message \"from here\" }\n+  int a[n]; // { dg-message \"crosses initialization\" }\n label: // { dg-error \"jump to label\" }\n   ;\n }\n@@ -16,7 +16,7 @@ g (int n)\n   switch (1)\n   {\n   case 1:\n-    int (*a)[n]; // { dg-error \"crosses initialization\" }\n+    int (*a)[n]; // { dg-message \"crosses initialization\" }\n   default: // { dg-error \"jump to case label\" }\n     ;\n   }"}, {"sha": "3ec6ac8e45868b886818d7f5196658048e1e1fdb", "filename": "gcc/testsuite/g++.dg/gomp/block-1.C", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61a1a73ecbc18c92bda1f240c8cd2ee4f5d2d6fe/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fblock-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61a1a73ecbc18c92bda1f240c8cd2ee4f5d2d6fe/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fblock-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fblock-1.C?ref=61a1a73ecbc18c92bda1f240c8cd2ee4f5d2d6fe", "patch": "@@ -4,12 +4,13 @@ void foo()\n {\n   bad1:\t\t\t\t// { dg-error \"jump to label\" }\n   #pragma omp parallel\n-    goto bad1;\t\t\t// { dg-error \"from here|exits OpenMP\" }\n+    goto bad1;\t\t\t// { dg-message \"from here|exits OpenMP\" }\n \n-  goto bad2;\t\t\t// { dg-error \"from here\" }\n+  goto bad2;\t\t\t// { dg-message \"from here\" }\n   #pragma omp parallel\n     {\n-      bad2: ;\t\t\t// { dg-error \"jump to label|enters OpenMP\" }\n+      bad2: ;\t\t\t// { dg-error \"jump to label\" }\n+                                // { dg-message \"enters OpenMP\" \"\" { target *-*-* } 12 }\n     }\n \n   #pragma omp parallel"}, {"sha": "7d572c1704943a27fc3ac28011dbd1d4ac919ced", "filename": "gcc/testsuite/g++.dg/gomp/block-2.C", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61a1a73ecbc18c92bda1f240c8cd2ee4f5d2d6fe/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fblock-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61a1a73ecbc18c92bda1f240c8cd2ee4f5d2d6fe/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fblock-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fblock-2.C?ref=61a1a73ecbc18c92bda1f240c8cd2ee4f5d2d6fe", "patch": "@@ -11,13 +11,14 @@ void foo()\n   bad1:\t\t\t\t// { dg-error \"jump to label\" }\n   #pragma omp for\n   for (i = 0; i < 10; ++i)\n-    goto bad1;\t\t\t// { dg-error \"from here|exits OpenMP\" }\n+    goto bad1;\t\t\t// { dg-message \"from here|exits OpenMP\" }\n \n-  goto bad2;\t\t\t// { dg-error \"from here\" }\n+  goto bad2;\t\t\t// { dg-message \"from here\" }\n   #pragma omp for\n   for (i = 0; i < 10; ++i)\n     {\n-      bad2: ;\t\t\t// { dg-error \"jump|enters OpenMP\" }\n+      bad2: ;\t\t\t// { dg-error \"jump\" }\n+                                // { dg-message \"enters OpenMP\" \"\" { target *-*-* } 20 }\n     }\n \n   #pragma omp for"}, {"sha": "4b98d1cdffcc7e9addf71736b65e8179c26765b8", "filename": "gcc/testsuite/g++.dg/gomp/block-3.C", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61a1a73ecbc18c92bda1f240c8cd2ee4f5d2d6fe/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fblock-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61a1a73ecbc18c92bda1f240c8cd2ee4f5d2d6fe/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fblock-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fblock-3.C?ref=61a1a73ecbc18c92bda1f240c8cd2ee4f5d2d6fe", "patch": "@@ -18,19 +18,21 @@ void foo()\n     #pragma omp section\n       { bad1: ; }\t\t// { dg-error \"jump to label\" }\n     #pragma omp section\n-      goto bad1;\t\t// { dg-error \"from here|enters OpenMP\" }\n+      goto bad1;\t\t// { dg-message \"from here|enters OpenMP\" }\n     }\n \n   #pragma omp sections\n     {\n-      goto bad2;\t\t// { dg-error \"from here\" }\n+      goto bad2;\t\t// { dg-message \"from here\" }\n     }\n-  bad2:;\t\t\t// { dg-error \"jump|exits OpenMP\" }\n+  bad2:;\t\t\t// { dg-error \"jump\" }\n+                                // { dg-message \"exits OpenMP\" \"\" { target *-*-* } 28 }\n \n-  goto bad3;\t\t\t// { dg-error \"from here\" }\n+  goto bad3;\t\t\t// { dg-message \"from here\" }\n   #pragma omp sections\n     {\n-      bad3: ;\t\t\t// { dg-error \"jump|enters OpenMP\" }\n+      bad3: ;\t\t\t// { dg-error \"jump\" }\n+                                // { dg-message \"enters OpenMP\" \"\" { target *-*-* } 34 }\n     }\n \n   #pragma omp sections\n@@ -60,4 +62,4 @@ void foo()\n \n // { dg-message \"error: invalid branch to/from an OpenMP structured block\" \"\" { target *-*-* } 21 }\n // { dg-message \"error: invalid branch to/from an OpenMP structured block\" \"\" { target *-*-* } 26 }\n-// { dg-message \"error: invalid entry to OpenMP structured block\" \"\" { target *-*-* } 30 }\n+// { dg-message \"error: invalid entry to OpenMP structured block\" \"\" { target *-*-* } 31 }"}, {"sha": "5023e3792ee9ff6c664a4d88e2fec821f620fdd6", "filename": "gcc/testsuite/g++.dg/gomp/block-5.C", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61a1a73ecbc18c92bda1f240c8cd2ee4f5d2d6fe/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fblock-5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61a1a73ecbc18c92bda1f240c8cd2ee4f5d2d6fe/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fblock-5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fblock-5.C?ref=61a1a73ecbc18c92bda1f240c8cd2ee4f5d2d6fe", "patch": "@@ -4,12 +4,13 @@ void foo()\n {\n   #pragma omp master\n     {\n-      goto bad1;\t// { dg-error \"from here\" }\n+      goto bad1;\t// { dg-message \"from here\" }\n     }\n \n   #pragma omp master\n     {\n-    bad1:\t\t// { dg-error \"jump|exits OpenMP\" }\n+    bad1:\t\t// { dg-error \"jump\" }\n+                        // { dg-message \"exits OpenMP\" \"\" { target *-*-* } 12 }\n       return;\t\t// { dg-error \"invalid exit\" }\n     }\n }"}, {"sha": "ae2398804c7b8f828cd278fa8d99ea9a63231ace", "filename": "gcc/testsuite/g++.dg/gomp/target-1.C", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61a1a73ecbc18c92bda1f240c8cd2ee4f5d2d6fe/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Ftarget-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61a1a73ecbc18c92bda1f240c8cd2ee4f5d2d6fe/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Ftarget-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Ftarget-1.C?ref=61a1a73ecbc18c92bda1f240c8cd2ee4f5d2d6fe", "patch": "@@ -5,12 +5,13 @@ foo (int x)\n {\n   bad1:\t\t\t\t// { dg-error \"jump to label\" }\n   #pragma omp target\n-    goto bad1;\t\t\t// { dg-error \"from here|exits OpenMP\" }\n+    goto bad1;\t\t\t// { dg-message \"from here|exits OpenMP\" }\n \n-  goto bad2;\t\t\t// { dg-error \"from here\" }\n+  goto bad2;\t\t\t// { dg-message \"from here\" }\n   #pragma omp target\n     {\n-      bad2: ;\t\t\t// { dg-error \"jump to label|enters OpenMP\" }\n+      bad2: ;\t\t\t// { dg-error \"jump to label\" }\n+                                // { dg-message \"enters OpenMP\" \"\" { target *-*-* } 13 }\n     }\n \n   #pragma omp target\n@@ -24,7 +25,8 @@ foo (int x)\n   switch (x)\n   {\n   #pragma omp target\n-    { case 0:; }\t\t// { dg-error \"jump|enters\" }\n+    { case 0:; }\t\t// { dg-error \"jump\" }\n+                                // { dg-message \"enters\" \"\" { target *-*-* } 28 }\n   }\n }\n "}, {"sha": "6bf8b1893362a2e3641aa7542eb7dc909502f5d8", "filename": "gcc/testsuite/g++.dg/gomp/target-2.C", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61a1a73ecbc18c92bda1f240c8cd2ee4f5d2d6fe/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Ftarget-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61a1a73ecbc18c92bda1f240c8cd2ee4f5d2d6fe/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Ftarget-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Ftarget-2.C?ref=61a1a73ecbc18c92bda1f240c8cd2ee4f5d2d6fe", "patch": "@@ -5,12 +5,13 @@ foo (int x, int y)\n {\n   bad1:\t\t\t\t// { dg-error \"jump to label\" }\n   #pragma omp target data map(tofrom: y)\n-    goto bad1;\t\t\t// { dg-error \"from here|exits OpenMP\" }\n+    goto bad1;\t\t\t// { dg-message \"from here|exits OpenMP\" }\n \n-  goto bad2;\t\t\t// { dg-error \"from here\" }\n+  goto bad2;\t\t\t// { dg-message \"from here\" }\n   #pragma omp target data map(tofrom: y)\n     {\n-      bad2: ;\t\t\t// { dg-error \"jump to label|enters OpenMP\" }\n+      bad2: ;\t\t\t// { dg-error \"jump to label\" }\n+                                // { dg-message \"enters OpenMP\" \"\" { target *-*-* } 13 }\n     }\n \n   #pragma omp target data map(tofrom: y)\n@@ -24,7 +25,8 @@ foo (int x, int y)\n   switch (x)\n   {\n   #pragma omp target data map(tofrom: y)\n-    { case 0:; }\t\t// { dg-error \"jump|enters\" }\n+    { case 0:; }\t\t// { dg-error \"jump\" }\n+                                // { dg-message \"enters\" \"\" { target *-*-* } 28 }\n   }\n }\n "}, {"sha": "c31aa61583ff2ff36b78d2189cb0af9e2b0a9657", "filename": "gcc/testsuite/g++.dg/gomp/taskgroup-1.C", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61a1a73ecbc18c92bda1f240c8cd2ee4f5d2d6fe/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Ftaskgroup-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61a1a73ecbc18c92bda1f240c8cd2ee4f5d2d6fe/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Ftaskgroup-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Ftaskgroup-1.C?ref=61a1a73ecbc18c92bda1f240c8cd2ee4f5d2d6fe", "patch": "@@ -5,12 +5,13 @@ foo (int x)\n {\n   bad1:\t\t\t\t// { dg-error \"jump to label\" }\n   #pragma omp taskgroup\n-    goto bad1;\t\t\t// { dg-error \"from here|exits OpenMP\" }\n+    goto bad1;\t\t\t// { dg-message \"from here|exits OpenMP\" }\n \n-  goto bad2;\t\t\t// { dg-error \"from here\" }\n+  goto bad2;\t\t\t// { dg-message \"from here\" }\n   #pragma omp taskgroup\n     {\n-      bad2: ;\t\t\t// { dg-error \"jump to label|enters OpenMP\" }\n+      bad2: ;\t\t\t// { dg-error \"jump to label\" }\n+                                // { dg-message \"enters OpenMP\" \"\" { target *-*-* } 13 }\n     }\n \n   #pragma omp taskgroup\n@@ -24,7 +25,8 @@ foo (int x)\n   switch (x)\n   {\n   #pragma omp taskgroup\n-    { case 0:; }\t\t// { dg-error \"jump|enters\" }\n+    { case 0:; }\t\t// { dg-error \"jump\" }\n+                                // { dg-message \"enters\" \"\" { target *-*-* } 28 }\n   }\n }\n "}, {"sha": "86abe12b658dc2b7c3ac1118e3ebf4fb4684cc40", "filename": "gcc/testsuite/g++.dg/gomp/teams-1.C", "status": "modified", "additions": 14, "deletions": 10, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61a1a73ecbc18c92bda1f240c8cd2ee4f5d2d6fe/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fteams-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61a1a73ecbc18c92bda1f240c8cd2ee4f5d2d6fe/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fteams-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fteams-1.C?ref=61a1a73ecbc18c92bda1f240c8cd2ee4f5d2d6fe", "patch": "@@ -5,12 +5,13 @@ foo (int x)\n {\n   bad1:\t\t\t\t// { dg-error \"jump to label\" }\n   #pragma omp target teams\n-    goto bad1;\t\t\t// { dg-error \"from here|exits OpenMP\" }\n+    goto bad1;\t\t\t// { dg-message \"from here|exits OpenMP\" }\n \n-  goto bad2;\t\t\t// { dg-error \"from here\" }\n+  goto bad2;\t\t\t// { dg-message \"from here\" }\n   #pragma omp target teams\n     {\n-      bad2: ;\t\t\t// { dg-error \"jump to label|enters OpenMP\" }\n+      bad2: ;\t\t\t// { dg-error \"jump to label\" }\n+                                // { dg-message \"enters OpenMP\" \"\" { target *-*-* } 13 }\n     }\n \n   #pragma omp target teams\n@@ -24,7 +25,8 @@ foo (int x)\n   switch (x)\n   {\n   #pragma omp target teams\n-    { case 0:; }\t\t// { dg-error \"jump|enters\" }\n+    { case 0:; }\t\t// { dg-error \"jump\" }\n+                                // { dg-message \"enters\" \"\" { target *-*-* } 28 }\n   }\n }\n \n@@ -34,13 +36,14 @@ bar (int x)\n   bad1:\t\t\t\t// { dg-error \"jump to label\" }\n   #pragma omp target\n   #pragma omp teams\n-    goto bad1;\t\t\t// { dg-error \"from here|exits OpenMP\" }\n+    goto bad1;\t\t\t// { dg-message \"from here|exits OpenMP\" }\n \n-  goto bad2;\t\t\t// { dg-error \"from here\" }\n+  goto bad2;\t\t\t// { dg-message \"from here\" }\n   #pragma omp target\n   #pragma omp teams\n     {\n-      bad2: ;\t\t\t// { dg-error \"jump to label|enters OpenMP\" }\n+      bad2: ;\t\t\t// { dg-error \"jump to label\" }\n+                                // { dg-message \"enters OpenMP\" \"\" { target *-*-* } 45 }\n     }\n \n   #pragma omp target\n@@ -56,11 +59,12 @@ bar (int x)\n   {\n   #pragma omp target\n   #pragma omp teams\n-    { case 0:; }\t\t// { dg-error \"jump|enters\" }\n+    { case 0:; }\t\t// { dg-error \"jump\" }\n+                                // { dg-message \"enters\" \"\" { target *-*-* } 62 }\n   }\n }\n \n // { dg-error \"invalid branch to/from an OpenMP structured block\" \"\" { target *-*-* } 8 }\n // { dg-error \"invalid entry to OpenMP structured block\" \"\" { target *-*-* } 10 }\n-// { dg-error \"invalid branch to/from an OpenMP structured block\" \"\" { target *-*-* } 37 }\n-// { dg-error \"invalid entry to OpenMP structured block\" \"\" { target *-*-* } 39 }\n+// { dg-error \"invalid branch to/from an OpenMP structured block\" \"\" { target *-*-* } 39 }\n+// { dg-error \"invalid entry to OpenMP structured block\" \"\" { target *-*-* } 41 }"}, {"sha": "f95214f387847d36102cbe1750e8f7884d0c40dc", "filename": "gcc/testsuite/g++.dg/init/goto2.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61a1a73ecbc18c92bda1f240c8cd2ee4f5d2d6fe/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fgoto2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61a1a73ecbc18c92bda1f240c8cd2ee4f5d2d6fe/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fgoto2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fgoto2.C?ref=61a1a73ecbc18c92bda1f240c8cd2ee4f5d2d6fe", "patch": "@@ -3,8 +3,8 @@\n bool f();\n void g(int i)\n {\n-  if (i) goto bad; // { dg-error \"from\" }\n-  bool a = f(); // { dg-error \"initialization\" }\n+  if (i) goto bad; // { dg-message \"from\" }\n+  bool a = f(); // { dg-message \"initialization\" }\n  bad: // { dg-error \"jump\" }\n   ;\n }"}, {"sha": "4c5ceaba3e1fdb7b430be7b639cd554da474b39a", "filename": "gcc/testsuite/g++.dg/init/goto3.C", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61a1a73ecbc18c92bda1f240c8cd2ee4f5d2d6fe/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fgoto3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61a1a73ecbc18c92bda1f240c8cd2ee4f5d2d6fe/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fgoto3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fgoto3.C?ref=61a1a73ecbc18c92bda1f240c8cd2ee4f5d2d6fe", "patch": "@@ -0,0 +1,25 @@\n+// PR c++/63558\n+// { dg-options \"-fpermissive -w\" }\n+\n+extern int abs(int);\n+static long int n_ants;\n+enum enum_var_types\n+ { VAR_NONE, VAR_DELTA, VAR_SWITCH };\n+\n+static enum enum_var_types option_var_n_ants;\n+void\n+adapt_parameters_next_iteration(void)\n+{\n+    switch(option_var_n_ants) {\n+\n+    case VAR_NONE: break;\n+\n+    case VAR_DELTA:\n+        int trunc_n_ants = 0;\n+        n_ants += trunc_n_ants;\n+        break;\n+    case VAR_SWITCH:\n+        break;\n+      default: break;\n+    }\n+}"}, {"sha": "08de9ba26f4792b3be406fe44083cb9877a83bd4", "filename": "gcc/testsuite/g++.dg/warn/pedantic1.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61a1a73ecbc18c92bda1f240c8cd2ee4f5d2d6fe/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fpedantic1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61a1a73ecbc18c92bda1f240c8cd2ee4f5d2d6fe/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fpedantic1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fpedantic1.C?ref=61a1a73ecbc18c92bda1f240c8cd2ee4f5d2d6fe", "patch": "@@ -2,9 +2,9 @@\n // { dg-options \"-pedantic\" }\n \n int main() {\n-  goto label;   // { dg-error \"\" }\n+  goto label;   // { dg-message \"\" }\n   \n-  int temp = 1; // { dg-error \"\" } \n+  int temp = 1; // { dg-message \"\" } \n   \n   label:        // { dg-error \"\" } \n     return 1;"}, {"sha": "31edfa6254daf66ca0660820795e6aaa13c4924c", "filename": "gcc/testsuite/g++.old-deja/g++.jason/jump.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61a1a73ecbc18c92bda1f240c8cd2ee4f5d2d6fe/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fjump.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61a1a73ecbc18c92bda1f240c8cd2ee4f5d2d6fe/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fjump.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fjump.C?ref=61a1a73ecbc18c92bda1f240c8cd2ee4f5d2d6fe", "patch": "@@ -6,7 +6,7 @@ extern int a;\n int main() {\n   switch (a) {\n   case 1:\n-    int v2 = 3;\t\t\t// { dg-error \"\" } referenced below\n+    int v2 = 3;\t\t\t// { dg-message \"\" } referenced below\n   case 2:\t\t\t// { dg-error \"\" } jumping past initializer\n     if (v2 == 7)\n       ;"}, {"sha": "382941bca518df94f80639cb98ef769a36b98845", "filename": "gcc/testsuite/g++.old-deja/g++.law/arm6.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61a1a73ecbc18c92bda1f240c8cd2ee4f5d2d6fe/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Farm6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61a1a73ecbc18c92bda1f240c8cd2ee4f5d2d6fe/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Farm6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Farm6.C?ref=61a1a73ecbc18c92bda1f240c8cd2ee4f5d2d6fe", "patch": "@@ -12,7 +12,7 @@ int main() {\n \n         switch (a) {\n         case 1:\n-                int v2 = 3;// { dg-error \"\" }    crosses.*\n+                int v2 = 3;// { dg-message \"\" }    crosses.*\n         case 2:// { dg-error \"\" }  jump.*\n                 if (v2 == 7)    // error not flagged by 2.3.1\n                         ;"}, {"sha": "9a9ba8be7d234275e977f04871b4e6a8725fadba", "filename": "gcc/testsuite/g++.old-deja/g++.other/goto1.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61a1a73ecbc18c92bda1f240c8cd2ee4f5d2d6fe/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fgoto1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61a1a73ecbc18c92bda1f240c8cd2ee4f5d2d6fe/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fgoto1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fgoto1.C?ref=61a1a73ecbc18c92bda1f240c8cd2ee4f5d2d6fe", "patch": "@@ -10,12 +10,12 @@ struct S\n void f ()\n {\n   {\n-    S s1; // { dg-error \"\" } skips initialization\n+    S s1; // { dg-message \"\" } skips initialization\n   \n   t:\t  // { dg-error \"\" } jump to label\n     S s2;\n     ;\n   }\n \n-  goto t; // { dg-error \"\" } from here\n+  goto t; // { dg-message \"\" } from here\n }"}, {"sha": "779ada72ec7e00bb4a405c0a2cb57655afd6fb64", "filename": "gcc/testsuite/g++.old-deja/g++.other/goto3.C", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61a1a73ecbc18c92bda1f240c8cd2ee4f5d2d6fe/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fgoto3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61a1a73ecbc18c92bda1f240c8cd2ee4f5d2d6fe/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fgoto3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fgoto3.C?ref=61a1a73ecbc18c92bda1f240c8cd2ee4f5d2d6fe", "patch": "@@ -4,17 +4,17 @@\n \n void f ()\n {\n-  goto foo1;\t\t\t // { dg-error \"\" } jumps\n+  goto foo1;\t\t\t // { dg-message \"\" } jumps\n   try { foo1:; } catch (...) { } // { dg-error \"\" } into try\n-  goto foo2;\t\t\t // { dg-error \"\" } jumps\n+  goto foo2;\t\t\t // { dg-message \"\" } jumps\n   try { } catch (...) { foo2:; } // { dg-error \"\" } into catch\n-  goto foo3;\t\t\t // { dg-error \"\" } jumps\n+  goto foo3;\t\t\t // { dg-message \"\" } jumps\n   { int i=2; foo3:; }\t\t // { dg-error \"\" } past init\n \n   try { foo4:; } catch (...) { } // { dg-error \"\" } \n-  goto foo4;\t\t\t // { dg-error \"\" } \n+  goto foo4;\t\t\t // { dg-message \"\" } \n   try { } catch (...) { foo5:; } // { dg-error \"\" } \n-  goto foo5;\t\t\t // { dg-error \"\" } \n+  goto foo5;\t\t\t // { dg-message \"\" } \n   { int i=2; foo6:; }\t\t // { dg-error \"\" } \n-  goto foo6;\t\t\t // { dg-error \"\" } \n+  goto foo6;\t\t\t // { dg-message \"\" } \n }"}, {"sha": "46d99028bdd61e2edcef0a82e79e8255fc33241e", "filename": "gcc/testsuite/g++.old-deja/g++.other/init9.C", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61a1a73ecbc18c92bda1f240c8cd2ee4f5d2d6fe/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Finit9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61a1a73ecbc18c92bda1f240c8cd2ee4f5d2d6fe/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Finit9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Finit9.C?ref=61a1a73ecbc18c92bda1f240c8cd2ee4f5d2d6fe", "patch": "@@ -13,8 +13,8 @@ struct A {\n };\n \n void a() {\n-  goto bar; // { dg-error \"\" } jump from here\n-  A x; // { dg-error \"\" } jump crosses initialization\n+  goto bar; // { dg-message \"\" } jump from here\n+  A x; // { dg-message \"\" } jump crosses initialization\n  bar: // { dg-error \"\" } jump to here\n   ;\n }\n@@ -24,17 +24,17 @@ struct X {\n };\n \n void b() {\n-  goto bar; // { dg-error \"\" } jump from here\n-  X x; // { dg-error \"\" } jump crosses initialization\n+  goto bar; // { dg-message \"\" } jump from here\n+  X x; // { dg-message \"\" } jump crosses initialization\n  bar: // { dg-error \"\" } jump to here\n   ;\n }\n \n #include <vector>\n \n void c() {\n-  goto bar; // { dg-error \"\" } jump from here\n-  std::vector<int> x; // { dg-error \"\" } jump crosses initialization\n+  goto bar; // { dg-message \"\" } jump from here\n+  std::vector<int> x; // { dg-message \"\" } jump crosses initialization\n  bar: // { dg-error \"\" } jump to here\n   ;\n }"}]}