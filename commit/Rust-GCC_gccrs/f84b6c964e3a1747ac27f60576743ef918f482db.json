{"sha": "f84b6c964e3a1747ac27f60576743ef918f482db", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Zjg0YjZjOTY0ZTNhMTc0N2FjMjdmNjA1NzY3NDNlZjkxOGY0ODJkYg==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2004-06-27T18:56:46Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2004-06-27T18:56:46Z"}, "message": "re PR c++/16193 (Bootstrap failure in libstdc++-v3)\n\n\tPR c++/16193\n\t* parser.c (cp_parser_set_decl_spec_type): Refine test for\n\tredefinition of built-in types.\n\n\tPR c++/16193\n\t* g++.dg/parse/redef1.C: New test.\n\nFrom-SVN: r83740", "tree": {"sha": "9bb5c17a3897b4c2a28fc95995bf00b76e67a7ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9bb5c17a3897b4c2a28fc95995bf00b76e67a7ab"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f84b6c964e3a1747ac27f60576743ef918f482db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f84b6c964e3a1747ac27f60576743ef918f482db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f84b6c964e3a1747ac27f60576743ef918f482db", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f84b6c964e3a1747ac27f60576743ef918f482db/comments", "author": null, "committer": null, "parents": [{"sha": "b6ded5bdea275e95743d0b2baab42a393800c8db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6ded5bdea275e95743d0b2baab42a393800c8db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b6ded5bdea275e95743d0b2baab42a393800c8db"}], "stats": {"total": 43, "additions": 36, "deletions": 7}, "files": [{"sha": "9dabcca1ee7df621e9b156bb4987d5836a3ec59e", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f84b6c964e3a1747ac27f60576743ef918f482db/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f84b6c964e3a1747ac27f60576743ef918f482db/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=f84b6c964e3a1747ac27f60576743ef918f482db", "patch": "@@ -1,3 +1,9 @@\n+2004-06-27  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/16193\n+\t* parser.c (cp_parser_set_decl_spec_type): Refine test for\n+\tredefinition of built-in types.\n+\n 2004-06-27  Gabriel Dos Reis  <gdr@integrable-solutions.net>\n \n \t* error.c (pp_template_argument_list_start): Remove."}, {"sha": "174c56a5e1d44effdb04511f6ece47158e4d831d", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 15, "deletions": 7, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f84b6c964e3a1747ac27f60576743ef918f482db/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f84b6c964e3a1747ac27f60576743ef918f482db/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=f84b6c964e3a1747ac27f60576743ef918f482db", "patch": "@@ -15427,13 +15427,21 @@ cp_parser_set_decl_spec_type (cp_decl_specifier_seq *decl_specs,\n \t\t\t      bool user_defined_p)\n {\n   decl_specs->any_specifiers_p = true;\n-  if (decl_specs->type)\n-    {\n-      if (decl_specs->specs[(int)ds_typedef] && !user_defined_p)\n-\tdecl_specs->redefined_builtin_type = type_spec;\n-      else\n-\tdecl_specs->multiple_types_p = true;\n-    }\n+ \n+  /* If the user tries to redeclare a built-in type (with, for example,\n+     in \"typedef int wchar_t;\") we remember that this is what\n+     happened.  In system headers, we ignore these declarations so\n+     that G++ can work with system headers that are not C++-safe.  */\n+  if (decl_specs->specs[(int) ds_typedef] \n+      && !user_defined_p\n+      && (decl_specs->type\n+\t  || decl_specs->specs[(int) ds_long]\n+\t  || decl_specs->specs[(int) ds_short]\n+\t  || decl_specs->specs[(int) ds_unsigned]\n+\t  || decl_specs->specs[(int) ds_signed]))\n+    decl_specs->redefined_builtin_type = type_spec;\n+  else if (decl_specs->type)\n+    decl_specs->multiple_types_p = true;\n   else\n     {\n       decl_specs->type = type_spec;"}, {"sha": "619bfa388127216853cebdedf58be8fa755d9aa5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f84b6c964e3a1747ac27f60576743ef918f482db/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f84b6c964e3a1747ac27f60576743ef918f482db/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f84b6c964e3a1747ac27f60576743ef918f482db", "patch": "@@ -1,3 +1,8 @@\n+2004-06-27  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/16193\n+\t* g++.dg/parse/redef1.C: New test.\n+\n 2004-06-27  Joseph S. Myers  <jsm@polyomino.org.uk>\n \n \t* gcc.c-torture/compile/20021123-1.c: Remove duplicate of"}, {"sha": "0235ffb72e9c90e1377b81cb56303d4dbd632fae", "filename": "gcc/testsuite/g++.dg/parse/redef1.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f84b6c964e3a1747ac27f60576743ef918f482db/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fredef1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f84b6c964e3a1747ac27f60576743ef918f482db/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fredef1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fredef1.C?ref=f84b6c964e3a1747ac27f60576743ef918f482db", "patch": "@@ -0,0 +1,10 @@\n+// { dg-options \"\" }\n+// PR c++/16193\n+\n+# 1 \"syshdr1.C\"\n+# 1 \"syshdr1.h\" 1 3\n+// Redefinitions of built-in types are allowed in system headers so\n+// that G++ will work with system headers that are not fully\n+// C++-aware.\n+typedef long wchar_t;\n+# 2 \"syshdr1.C\" 2"}]}