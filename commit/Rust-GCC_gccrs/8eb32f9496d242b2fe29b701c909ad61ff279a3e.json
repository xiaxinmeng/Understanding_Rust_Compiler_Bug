{"sha": "8eb32f9496d242b2fe29b701c909ad61ff279a3e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGViMzJmOTQ5NmQyNDJiMmZlMjliNzAxYzkwOWFkNjFmZjI3OWEzZQ==", "commit": {"author": {"name": "Janis Johnson", "email": "janis187@us.ibm.com", "date": "2002-10-11T23:58:31Z"}, "committer": {"name": "Janis Johnson", "email": "janis@gcc.gnu.org", "date": "2002-10-11T23:58:31Z"}, "message": "compat.texi: Add info about C++ libraries.\n\n2002-10-11  Janis Johnson  <janis187@us.ibm.com>\n\n\t* doc/compat.texi: Add info about C++ libraries.\n\nFrom-SVN: r58074", "tree": {"sha": "86529320e88aab9a8c8053753e14df7a1e80029c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/86529320e88aab9a8c8053753e14df7a1e80029c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8eb32f9496d242b2fe29b701c909ad61ff279a3e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8eb32f9496d242b2fe29b701c909ad61ff279a3e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8eb32f9496d242b2fe29b701c909ad61ff279a3e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8eb32f9496d242b2fe29b701c909ad61ff279a3e/comments", "author": null, "committer": null, "parents": [{"sha": "e197b6fcab6f51f94a1a235c0107dea0cd59eca0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e197b6fcab6f51f94a1a235c0107dea0cd59eca0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e197b6fcab6f51f94a1a235c0107dea0cd59eca0"}], "stats": {"total": 45, "additions": 45, "deletions": 0}, "files": [{"sha": "af5e345a29b1e863356152054d7d81a2d315aef0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8eb32f9496d242b2fe29b701c909ad61ff279a3e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8eb32f9496d242b2fe29b701c909ad61ff279a3e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8eb32f9496d242b2fe29b701c909ad61ff279a3e", "patch": "@@ -1,3 +1,7 @@\n+2002-10-11  Janis Johnson  <janis187@us.ibm.com>\n+\n+\t* doc/compat.texi: Add info about C++ libraries.\n+\n 2002-10-11  Richard Henderson  <rth@redhat.com>\n \n \tPR opt/8165"}, {"sha": "274368a20e39e056e982394f1247ab0773d4f008", "filename": "gcc/doc/compat.texi", "status": "modified", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8eb32f9496d242b2fe29b701c909ad61ff279a3e/gcc%2Fdoc%2Fcompat.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8eb32f9496d242b2fe29b701c909ad61ff279a3e/gcc%2Fdoc%2Fcompat.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fcompat.texi?ref=8eb32f9496d242b2fe29b701c909ad61ff279a3e", "patch": "@@ -113,3 +113,44 @@ interpretations of the C++ ABI by different vendors, bugs in the ABI, or\n bugs in the implementation of the ABI in different compilers.\n GCC's @code{-Wabi} switch warns when G++ generates code that is\n probably not compatible with the C++ ABI@.\n+\n+The C++ library used with a C++ compiler includes the Standard C++\n+Library, with functionality defined in the C++ Standard, plus language\n+runtime support.  The runtime support is included in a C++ ABI, but there\n+is no formal ABI for the Standard C++ Library.  Two implementations\n+of that library are interoperable if one follows the de-facto ABI of the\n+other and if they are both built with the same compiler, or with compilers\n+that conform to the same ABI for C++ compiler and runtime support.\n+\n+When G++ and another C++ compiler conform to the same C++ ABI, but the\n+implementations of the Standard C++ Library that they normally use do not\n+follow the same ABI for the Standard C++ Library, object files built with\n+those compilers can be used in the same program only if they use the same\n+C++ library.  This requires specifying the location of the C++ library\n+header files when invoking the compiler whose usual library is not being\n+used.  The location of GCC's C++ header files depends on how the GCC\n+build was configured, but can be seen by using the G++ @option{-v} option.\n+With default configuration options for G++ 3.3 the compile line for a\n+different C++ compiler needs to include\n+\n+@example\n+    -I@var{gcc_install_directory}/include/c++/3.3\n+@end example\n+\n+Similarly, compiling code with G++ that must use a C++ library other\n+than the GNU C++ library requires specifying the location of the header\n+files for that other library.\n+\n+The most straightforward way to link a program to use a particular\n+C++ library is to use a C++ driver that specifies that C++ library by\n+default.  The @command{g++} driver, for example, tells the linker where\n+to find GCC's C++ library (@file{libstdc++}) plus the other libraries\n+and startup files it needs, in the proper order.\n+\n+If a program must use a different C++ library and it's not possible\n+to do the final link using a C++ driver that uses that library by default,\n+it is necessary to tell @command{g++} the location and name of that\n+library.  It might also be necessary to specify different startup files\n+and other runtime support libraries, and to suppress the use of GCC's\n+support libraries with one or more of the options @option{-nostdlib},\n+@option{-nostartfiles}, and @option{-nodefaultlibs}."}]}