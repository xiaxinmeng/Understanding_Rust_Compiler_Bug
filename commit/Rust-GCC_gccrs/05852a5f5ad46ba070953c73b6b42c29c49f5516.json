{"sha": "05852a5f5ad46ba070953c73b6b42c29c49f5516", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDU4NTJhNWY1YWQ0NmJhMDcwOTUzYzczYjZiNDJjMjljNDlmNTUxNg==", "commit": {"author": {"name": "Oleg Endo", "email": "olegendo@gcc.gnu.org", "date": "2012-08-12T13:23:20Z"}, "committer": {"name": "Oleg Endo", "email": "olegendo@gcc.gnu.org", "date": "2012-08-12T13:23:20Z"}, "message": "re PR target/39423 ([SH]  performance regression: lost mov @(disp,Rn))\n\n\tPR target/39423\n\t* config/sh/predicates.md (mem_index_disp_operand): Check for\n\tarith_reg_operand instead of REG_P.\n\n\tPR target/39423\n\t* gcc.c-torture/compile/pr39423-1.c: New.\n\t* gcc.c-torture/compile/pr39423-2.c: New.\n\nFrom-SVN: r190326", "tree": {"sha": "464f47b1cbd1d97b2f363e834136c1092fdafe7b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/464f47b1cbd1d97b2f363e834136c1092fdafe7b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/05852a5f5ad46ba070953c73b6b42c29c49f5516", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05852a5f5ad46ba070953c73b6b42c29c49f5516", "html_url": "https://github.com/Rust-GCC/gccrs/commit/05852a5f5ad46ba070953c73b6b42c29c49f5516", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05852a5f5ad46ba070953c73b6b42c29c49f5516/comments", "author": null, "committer": null, "parents": [{"sha": "58341a42945fd052a5d27ef932a41038f11e3398", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58341a42945fd052a5d27ef932a41038f11e3398", "html_url": "https://github.com/Rust-GCC/gccrs/commit/58341a42945fd052a5d27ef932a41038f11e3398"}], "stats": {"total": 102, "additions": 98, "deletions": 4}, "files": [{"sha": "0fd7f72ae6d39195c6a48a7c9b1a7190071aa1e2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05852a5f5ad46ba070953c73b6b42c29c49f5516/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05852a5f5ad46ba070953c73b6b42c29c49f5516/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=05852a5f5ad46ba070953c73b6b42c29c49f5516", "patch": "@@ -1,3 +1,9 @@\n+2012-08-12  Oleg Endo  <olegendo@gcc.gnu.org>\n+\n+\tPR target/39423\n+\t* config/sh/predicates.md (mem_index_disp_operand): Check for\n+\tarith_reg_operand instead of REG_P.\n+\n 2012-08-11  Bernd Schmidt  <bernds@codesourcery.com>\n \n \t* reload1.c (replaced_subreg, gen_reload): Add"}, {"sha": "7defa77998442df88dc82fac3f4952507d7c6f94", "filename": "gcc/config/sh/predicates.md", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05852a5f5ad46ba070953c73b6b42c29c49f5516/gcc%2Fconfig%2Fsh%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05852a5f5ad46ba070953c73b6b42c29c49f5516/gcc%2Fconfig%2Fsh%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fpredicates.md?ref=05852a5f5ad46ba070953c73b6b42c29c49f5516", "patch": "@@ -521,14 +521,17 @@\n   plus1_rtx = XEXP (plus0_rtx, 0);\n   if (GET_CODE (plus1_rtx) != PLUS)\n     return 0;\n+  if (! arith_reg_operand (XEXP (plus1_rtx, 1), GET_MODE (XEXP (plus1_rtx, 1))))\n+    return 0;\n \n   mult_rtx = XEXP (plus1_rtx, 0);\n   if (GET_CODE (mult_rtx) != MULT)\n     return 0;\n- \n-  return REG_P (XEXP (mult_rtx, 0)) && CONST_INT_P (XEXP (mult_rtx, 1))\n-\t && exact_log2 (INTVAL (XEXP (mult_rtx, 1))) > 0\n-\t && REG_P (XEXP (plus1_rtx, 1))\n+  if (! arith_reg_operand (XEXP (mult_rtx, 0), GET_MODE (XEXP (mult_rtx, 0)))\n+      || ! CONST_INT_P (XEXP (mult_rtx, 1)))\n+    return 0;\n+\n+  return exact_log2 (INTVAL (XEXP (mult_rtx, 1))) > 0\n \t && sh_legitimate_index_p (mode, XEXP (plus0_rtx, 1), TARGET_SH2A, true);\n })\n "}, {"sha": "f9c8ff4b0ffb91655dc277c123824868cc25160a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05852a5f5ad46ba070953c73b6b42c29c49f5516/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05852a5f5ad46ba070953c73b6b42c29c49f5516/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=05852a5f5ad46ba070953c73b6b42c29c49f5516", "patch": "@@ -1,3 +1,9 @@\n+2012-08-12  Oleg Endo  <olegendo@gcc.gnu.org>\n+\n+\tPR target/39423\n+\t* gcc.c-torture/compile/pr39423-1.c: New.\n+\t* gcc.c-torture/compile/pr39423-2.c: New.\n+\n 2012-08-12  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/54221"}, {"sha": "34ebb66381a158e6b754ae4da4efa932fb853831", "filename": "gcc/testsuite/gcc.c-torture/compile/pr39423-1.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05852a5f5ad46ba070953c73b6b42c29c49f5516/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr39423-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05852a5f5ad46ba070953c73b6b42c29c49f5516/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr39423-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr39423-1.c?ref=05852a5f5ad46ba070953c73b6b42c29c49f5516", "patch": "@@ -0,0 +1,22 @@\n+/* PR target/39423 */\n+\n+int\n+foo (const char *name, int nmlen, char *flags)\n+{\n+  const char *nonspc;\n+  int len, n, lfn;\n+  int needlfn[2], dotspc[2];\n+  unsigned char locale[2];\n+  for (nonspc = &name[nmlen - 1]; nonspc >= name && *nonspc == ' '; ++n)\n+    {\n+      if (!nmlen)\n+\t{\n+\t  needlfn[name >= nonspc] = !0, dotspc[n != 0] =\n+\t    locale[0], --n, name += len, nmlen -= len;\n+\t}\n+    }\n+  if (!lfn && ((dotspc[0] == ' ' && !(len & 0x0010)) || dotspc[0] == '.'))\n+    return 22;\n+  if (!(needlfn[0] || needlfn[1]))\n+    *flags |= 0x02;\n+}"}, {"sha": "5307846d7e0ffe7b75189102abef763d70b57e39", "filename": "gcc/testsuite/gcc.c-torture/compile/pr39423-2.c", "status": "added", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05852a5f5ad46ba070953c73b6b42c29c49f5516/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr39423-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05852a5f5ad46ba070953c73b6b42c29c49f5516/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr39423-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr39423-2.c?ref=05852a5f5ad46ba070953c73b6b42c29c49f5516", "patch": "@@ -0,0 +1,57 @@\n+/* PR target/39423 */\n+\n+typedef unsigned short uint16_t;\n+\n+typedef struct\n+{\n+  short x, y;\n+} P;\n+\n+typedef struct\n+{\n+  uint16_t w, h;\n+} D;\n+\n+typedef struct\n+{\n+  P p;\n+  D s;\n+} A;\n+\n+typedef struct\n+{\n+  uint16_t f;\n+} W;\n+\n+typedef struct\n+{\n+  void* w;\n+  D s;\n+} T;\n+\n+extern void* foo00 (void*, void*);\n+\n+void foo01 (W* w)\n+{\n+  void* it;\n+  uint16_t c, i;\n+  T* cl;\n+  T* rs;\n+  T* t;\n+  uint16_t rh = 0;\n+  uint16_t v = !(w->f & 0x8000);\n+  A a = { };\n+\n+  for (c = 0, it = foo00 (w, 0); it; it = foo00 (w, it), c++);\n+\n+  for (it = foo00 (w, 0), i = 0; i <= c; it = foo00 (w, it), i++, cl++)\n+    {\n+      if (i)\n+ \tfor (t = rs; t < cl; t++)\n+\t  *((uint16_t*)&t->s + ((!v) ? 1 : 0)) = rh;\n+\n+      rh = (rh > ((*((uint16_t*)&a.s + ((!v) ? 1 : 0)))))\n+\t   ? rh\n+\t   : ((*((uint16_t*)&a.s + ((!v) ? 1 : 0)))); \n+    }\n+}"}]}