{"sha": "d664559da21b92af3169f1c11e17f63bd030d168", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDY2NDU1OWRhMjFiOTJhZjMxNjlmMWMxMWUxN2Y2M2JkMDMwZDE2OA==", "commit": {"author": {"name": "Robert Lipe", "email": "robertl@gcc.gnu.org", "date": "1999-05-28T13:26:49Z"}, "committer": {"name": "Robert Lipe", "email": "robertl@gcc.gnu.org", "date": "1999-05-28T13:26:49Z"}, "message": "\"New\" testsuite entries approved by Jeff on 5/23.\n\nFrom-SVN: r27222", "tree": {"sha": "603544b497bfba9a7419dd77cd347886b108c3f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/603544b497bfba9a7419dd77cd347886b108c3f7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d664559da21b92af3169f1c11e17f63bd030d168", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d664559da21b92af3169f1c11e17f63bd030d168", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d664559da21b92af3169f1c11e17f63bd030d168", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d664559da21b92af3169f1c11e17f63bd030d168/comments", "author": null, "committer": null, "parents": [{"sha": "fee9125c1006868fd3f4598dc70156e09b9a8a18", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fee9125c1006868fd3f4598dc70156e09b9a8a18", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fee9125c1006868fd3f4598dc70156e09b9a8a18"}], "stats": {"total": 496, "additions": 496, "deletions": 0}, "files": [{"sha": "9bf8a098c0fbb29bc78c92bc3ee12defcbcc8554", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/eh990323-1.C", "status": "added", "additions": 74, "deletions": 0, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d664559da21b92af3169f1c11e17f63bd030d168/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feh990323-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d664559da21b92af3169f1c11e17f63bd030d168/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feh990323-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feh990323-1.C?ref=d664559da21b92af3169f1c11e17f63bd030d168", "patch": "@@ -0,0 +1,74 @@\n+// check cleanup of template temporaries\n+\n+int ctor = 0;\n+int dtor = 0;\n+\n+template <class T> struct A {\n+\tA() {ctor++;}\n+\tA(int) {ctor++;}\n+\tA(const A&) {ctor++;}\n+\t~A() {dtor++;}\n+\toperator int() {return 0;}\n+};\n+\n+template <class T> void ff(T);\n+\n+template <class T> void ff(T)\n+{\n+}\n+\n+void g(void)\n+{\n+}\n+\n+void f()\n+{\n+\tint x;\n+\n+\tA<int> a1;\n+\tA<double> a2(37);\n+\tA<long> a3 = A<long>(47);\n+\tA<short> a4 = 97;\n+\n+\tg(A<char*>());\n+\n+\tA<char**>();\n+\n+\tx ? A<char*>() : A<char*>();\n+\n+\tx = 47, A<double*>(), A<int>(39), A<void>(23), -17;\n+\n+\twhile (A<short>())\n+\t\t;\n+\tfor (;A<unsigned>(3);)\n+\t\t;\n+\tif (A<A<double> >())\n+\t\t;\n+\n+\tff(A<double>());\n+\n+\tthrow 59;\n+}\n+\n+int \n+main()\n+{\n+\tint flag = 0;\n+\n+\ttry {\n+\t\tA<unsigned long>();\n+\t\tf();\n+\t}\n+\tcatch (int) {\n+\t\tA<float>(34);\n+\t\tflag = 1;\n+\t}\n+\n+\tif (!flag)\n+\t\tabort();\n+\n+\tif (!ctor || ctor != dtor)\n+\t\tabort();\n+\n+\texit(0);\n+}"}, {"sha": "90d93ad92118fdff76f798ec14ffce212fb2f91e", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/eh990323-2.C", "status": "added", "additions": 100, "deletions": 0, "changes": 100, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d664559da21b92af3169f1c11e17f63bd030d168/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feh990323-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d664559da21b92af3169f1c11e17f63bd030d168/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feh990323-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feh990323-2.C?ref=d664559da21b92af3169f1c11e17f63bd030d168", "patch": "@@ -0,0 +1,100 @@\n+// check MI and VBC offsets on throw\n+\n+struct A {\n+\tint x[23];\n+};\n+\n+struct B : virtual public A {\n+\tint y[33];\n+};\n+\n+struct C : virtual public A, public B {\n+\tint z[43];\n+};\n+\n+struct D {\n+\tint xx[53];\n+};\n+\n+struct E : public D, public A {\n+\tint yy[63];\n+};\n+\n+C c;\n+\n+E e;\n+\n+void f1()\n+{\n+\tthrow (C*)0;\n+}\n+\n+void f2()\n+{\n+\tthrow &c;\n+}\n+\n+void f3()\n+{\n+\tthrow (E*)0;\n+}\n+\n+void f4()\n+{\n+\tthrow &e;\n+}\n+\n+int main()\n+{\n+\tint flag;\n+\n+\tflag = 0;\n+\ttry {\n+\t\tf1();\n+\t}\n+\tcatch (A* p) {\n+\t\tif (p)\n+\t\t\tabort();\n+\t\tflag = 1;\n+\t}\n+\tif (!flag)\n+\t\tabort();\n+\n+\tflag = 0;\n+\ttry {\n+\t\tf2();\n+\t}\n+\tcatch (A* p) {\n+\t\tif (!p || (void*)p == (void*)&c)\n+\t\t\tabort();\n+\t\tflag = 1;\n+\t}\n+\tif (!flag)\n+\t\tabort();\n+\n+\tflag = 0;\n+\ttry {\n+\t\tf3();\n+\t}\n+\tcatch (A* p) {\n+\t\tif (p)\n+\t\t\tabort();\n+\t\tflag = 1;\n+\t}\n+\tif (!flag)\n+\t\tabort();\n+\n+\tflag = 0;\n+\ttry {\n+\t\tf4();\n+\t}\n+\tcatch (A* p) {\n+\t\tif (!p || (void*)p == (void*)&e)\n+\t\t\tabort();\n+\t\tflag = 1;\n+\t}\n+\tif (!flag)\n+\t\tabort();\n+\n+\texit(0);\n+}"}, {"sha": "5d945154aafa213b7a0a80a311acaac01e44acef", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/eh990323-3.C", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d664559da21b92af3169f1c11e17f63bd030d168/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feh990323-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d664559da21b92af3169f1c11e17f63bd030d168/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feh990323-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feh990323-3.C?ref=d664559da21b92af3169f1c11e17f63bd030d168", "patch": "@@ -0,0 +1,27 @@\n+// try throwing 0 cast to a class object\n+\n+struct A {};\n+\n+void f()\n+{\n+\tthrow (A*)0;\n+}\n+\n+int\n+main()\n+{\n+\tint flag;\n+\n+\tflag = 0;\n+\ttry {\n+\t\tf();\n+\t}\n+\tcatch (A*) {\n+\t\tflag = 1;\n+\t}\n+\n+\tif (!flag)\n+\t\tabort();\n+\n+\texit (0);\n+}"}, {"sha": "315a78b4bb15c09c078547149c5e423e8ddcd6e4", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/eh990323-4.C", "status": "added", "additions": 101, "deletions": 0, "changes": 101, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d664559da21b92af3169f1c11e17f63bd030d168/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feh990323-4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d664559da21b92af3169f1c11e17f63bd030d168/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feh990323-4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feh990323-4.C?ref=d664559da21b92af3169f1c11e17f63bd030d168", "patch": "@@ -0,0 +1,101 @@\n+// check MI and VBC offsets on throw\n+\n+struct A {\n+\tint x[23];\n+};\n+\n+struct B : virtual public A {\n+\tint y[33];\n+};\n+\n+struct C : virtual public A, public B {\n+\tint z[43];\n+};\n+\n+struct D {\n+\tint xx[53];\n+};\n+\n+struct E : public D, public A {\n+\tint yy[63];\n+};\n+\n+C c;\n+\n+E e;\n+\n+void f1()\n+{\n+\tthrow (C*)0;\n+}\n+\n+void f2()\n+{\n+\tthrow &c;\n+}\n+\n+void f3()\n+{\n+\tthrow (E*)0;\n+}\n+\n+void f4()\n+{\n+\tthrow &e;\n+}\n+\n+int\n+main()\n+{\n+\tint flag;\n+\n+\tflag = 0;\n+\ttry {\n+\t\tf1();\n+\t}\n+\tcatch (void* p) {\n+\t\tif (p)\n+\t\t\tabort();\n+\t\tflag = 1;\n+\t}\n+\tif (!flag)\n+\t\tabort();\n+\n+\tflag = 0;\n+\ttry {\n+\t\tf2();\n+\t}\n+\tcatch (void* p) {\n+\t\tif (!p || (void*)p != (void*)&c)\n+\t\t\tabort();\n+\t\tflag = 1;\n+\t}\n+\tif (!flag)\n+\t\tabort();\n+\n+\tflag = 0;\n+\ttry {\n+\t\tf3();\n+\t}\n+\tcatch (void* p) {\n+\t\tif (p)\n+\t\t\tabort();\n+\t\tflag = 1;\n+\t}\n+\tif (!flag)\n+\t\tabort();\n+\n+\tflag = 0;\n+\ttry {\n+\t\tf4();\n+\t}\n+\tcatch (void* p) {\n+\t\tif (!p || (void*)p != (void*)&e)\n+\t\t\tabort();\n+\t\tflag = 1;\n+\t}\n+\tif (!flag)\n+\t\tabort();\n+\n+\texit(0);\n+}"}, {"sha": "7f52a9b8d86e233a34b2342ac1349c485a309006", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/eh990323-5.C", "status": "added", "additions": 65, "deletions": 0, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d664559da21b92af3169f1c11e17f63bd030d168/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feh990323-5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d664559da21b92af3169f1c11e17f63bd030d168/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feh990323-5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feh990323-5.C?ref=d664559da21b92af3169f1c11e17f63bd030d168", "patch": "@@ -0,0 +1,65 @@\n+// check cleanup of partial array objects\n+\n+int ctor = 0;\n+int dtor = 0;\n+\n+int cnt = 1;\n+\n+struct A {\n+\tint x;\n+\tA();\n+\tA(const A&);\n+\t~A();\n+};\n+\n+A::A()\n+{\n+\tif (cnt == 10)\n+\t\tthrow 57;\n+\tx = cnt++;\n+\tctor++;\n+}\n+\n+A::A(const A&)\n+{\n+\tif (cnt == 10)\n+\t\tthrow 57;\n+\tx = cnt++;\n+\tctor++;\n+}\n+\n+A::~A()\n+{\n+\tif (x + 1 != cnt--)\n+\t\tabort();\n+\tdtor++;\n+}\n+\n+void f()\n+{\n+\tA a[] = {A(), A(), A(), A(), A(), A(), A(), A(), A(), A(), A(), A()};\n+\n+\tthrow -1066;\n+}\n+\n+int\n+main()\n+{\n+\tint flag;\n+\n+\tflag = 0;\n+\ttry {\n+\t\tf();\n+\t}\n+\tcatch (int) {\n+\t\tflag = 1;\n+\t}\n+\tif (!flag)\n+\t\tabort();\n+\tif (ctor != 9)\n+\t\tabort();\n+\tif (dtor != 9)\n+\t\tabort();\n+\n+\texit(0);\n+}"}, {"sha": "c03154bdf8a8e6662cf7705567fda9c273def698", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/ice990323-1.C", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d664559da21b92af3169f1c11e17f63bd030d168/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Fice990323-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d664559da21b92af3169f1c11e17f63bd030d168/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Fice990323-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Fice990323-1.C?ref=d664559da21b92af3169f1c11e17f63bd030d168", "patch": "@@ -0,0 +1,7 @@\n+//test 2\n+struct A {};\n+void f()\n+{\n+        struct A;\n+        throw *(new A);\n+}"}, {"sha": "3fa5bd566d16efa6c7a76fc3a9afacd30746b41d", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/ice990323-2.C", "status": "added", "additions": 85, "deletions": 0, "changes": 85, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d664559da21b92af3169f1c11e17f63bd030d168/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Fice990323-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d664559da21b92af3169f1c11e17f63bd030d168/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Fice990323-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Fice990323-2.C?ref=d664559da21b92af3169f1c11e17f63bd030d168", "patch": "@@ -0,0 +1,85 @@\n+// check EH with templates\n+\n+template <class T, int n, class U> struct A {\n+\tA() {}\n+\tA(char*) {}\n+};\n+\n+void f1()\n+{\n+\tthrow *(new A<double, 47, A<int, 37, short> >);\n+}\n+\n+void f2()\n+{\n+\tthrow *(new A<double, 47, A<int, 36, short> >);\n+}\n+\n+void f3()\n+{\n+\tthrow A<double, 47, A<int, 37, short> > (\"howdy\");\n+}\n+\n+void f4()\n+{\n+\tthrow A<double, 47, A<int, 36, short> > (\"hi michey\");\n+}\n+\n+main()\n+{\n+\tint flag;\n+\n+\tflag = 0;\n+\ttry {\n+\t\tf1();\n+\t}\n+\tcatch (A<double, 47, A<int, 36, short> >) {\n+\t\tabort();\n+\t}\n+\tcatch (A<double, 47, A<int, 37, short> >) {\n+\t\tflag = 1;\n+\t}\n+\tif (!flag)\n+\t\tabort();\n+\n+\tflag = 0;\n+\ttry {\n+\t\tf2();\n+\t}\n+\tcatch (A<double, 47, A<int, 36, short&> >) {\n+\t\tabort();\n+\t}\n+\tcatch (A<double, 47, A<int, 36, short> >) {\n+\t\tflag = 1;\n+\t}\n+\tif (!flag)\n+\t\tabort();\n+\n+\tflag = 0;\n+\ttry {\n+\t\tf3();\n+\t}\n+\tcatch (A<double, 47, A<int, 36, short> >) {\n+\t\tabort();\n+\t}\n+\tcatch (A<double, 47, A<int, 37, short> >) {\n+\t\tflag = 1;\n+\t}\n+\tif (!flag)\n+\t\tabort();\n+\n+\tflag = 0;\n+\ttry {\n+\t\tf4();\n+\t}\n+\tcatch (A<double, 47, A<int, 36, short&> >) {\n+\t\tabort();\n+\t}\n+\tcatch (A<double, 47, A<int, 36, short> >) {\n+\t\tflag = 1;\n+\t}\n+\tif (!flag)\n+\t\tabort();\n+\n+\texit(0);\n+}"}, {"sha": "55cb16c705eddcf8452540214c2e142a15d184ee", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/ice990323-3.C", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d664559da21b92af3169f1c11e17f63bd030d168/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Fice990323-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d664559da21b92af3169f1c11e17f63bd030d168/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Fice990323-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Fice990323-3.C?ref=d664559da21b92af3169f1c11e17f63bd030d168", "patch": "@@ -0,0 +1,14 @@\n+// try throwing overloaded function\n+\n+void f(int)\n+{\n+}\n+\n+void f(long)\n+{\n+}\n+\n+void g()\n+{\n+\tthrow &f;\n+}"}, {"sha": "85bbb457d34d9d64ce5c0e882dc1d400fbc87761", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/ice990323-4.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d664559da21b92af3169f1c11e17f63bd030d168/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Fice990323-4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d664559da21b92af3169f1c11e17f63bd030d168/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Fice990323-4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Fice990323-4.C?ref=d664559da21b92af3169f1c11e17f63bd030d168", "patch": "@@ -0,0 +1,12 @@\n+// try throwing template function name\n+\n+template <class T> void f(T);\n+\n+template <class T> void f(T)\n+{\n+}\n+\n+void g()\n+{\n+\tthrow &f;\n+}"}, {"sha": "c49b66e9fa58bb50d95cc18e34e76859daaf2cea", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/ice990323-5.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d664559da21b92af3169f1c11e17f63bd030d168/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Fice990323-5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d664559da21b92af3169f1c11e17f63bd030d168/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Fice990323-5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Fice990323-5.C?ref=d664559da21b92af3169f1c11e17f63bd030d168", "patch": "@@ -0,0 +1,11 @@\n+// check attempting to throw an overloaded function\n+\n+struct A {\n+\tvoid f(int);\n+\tvoid f(long);\n+};\n+\n+void g()\n+{\n+\tthrow &A::f;\n+}"}]}