{"sha": "61d5c158833392a84403997867962ca7368392ee", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjFkNWMxNTg4MzMzOTJhODQ0MDM5OTc4Njc5NjJjYTczNjgzOTJlZQ==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@cygnus.com", "date": "2000-06-29T17:03:49Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2000-06-29T17:03:49Z"}, "message": "lex.c (java_lineterminator): Don't recognize \\r after \\n.\n\n\t* lex.c (java_lineterminator): Don't recognize \\r after \\n.  If \\r\n\tfollows \\r, then unget it at a lower level.\n\nFrom-SVN: r34782", "tree": {"sha": "a5d813f0a2b5a9f34a9c63ae7df162dfa36725b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a5d813f0a2b5a9f34a9c63ae7df162dfa36725b8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/61d5c158833392a84403997867962ca7368392ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61d5c158833392a84403997867962ca7368392ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/61d5c158833392a84403997867962ca7368392ee", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61d5c158833392a84403997867962ca7368392ee/comments", "author": null, "committer": null, "parents": [{"sha": "3097c22b202d860d624a6ada70866096d1b2aa5a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3097c22b202d860d624a6ada70866096d1b2aa5a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3097c22b202d860d624a6ada70866096d1b2aa5a"}], "stats": {"total": 29, "additions": 19, "deletions": 10}, "files": [{"sha": "dba6dc4123a0fbc6e98101f4dfe33c28593c7b2d", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61d5c158833392a84403997867962ca7368392ee/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61d5c158833392a84403997867962ca7368392ee/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=61d5c158833392a84403997867962ca7368392ee", "patch": "@@ -1,3 +1,8 @@\n+2000-06-27  Tom Tromey  <tromey@cygnus.com>\n+\n+\t* lex.c (java_lineterminator): Don't recognize \\r after \\n.  If \\r\n+\tfollows \\r, then unget it at a lower level.\n+\n 2000-06-26  Tom Tromey  <tromey@cygnus.com>\n \n \t* parse.y (resolve_field_access): Pass decl, not DECL_INITIAL, to"}, {"sha": "6efb907178014c5279add119ae7f3abb802a1e4b", "filename": "gcc/java/lex.c", "status": "modified", "additions": 14, "deletions": 10, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61d5c158833392a84403997867962ca7368392ee/gcc%2Fjava%2Flex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61d5c158833392a84403997867962ca7368392ee/gcc%2Fjava%2Flex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Flex.c?ref=61d5c158833392a84403997867962ca7368392ee", "patch": "@@ -347,19 +347,23 @@ static int\n java_lineterminator (c)\n      unicode_t c;\n {\n-  int unicode_escape_p;\n-  if (c == '\\n')\t\t/* CR */\n+  if (c == '\\n')\t\t/* LF */\n+    return 1;\n+  else if (c == '\\r')\t\t/* CR */\n     {\n-      if ((c = java_read_unicode (1, &unicode_escape_p)) != '\\r')\n+      int unicode_escape_p;\n+      c = java_read_unicode (1, &unicode_escape_p);\n+      if (c == '\\r')\n \t{\n-\t  ctxp->c_line->ahead [0] = c;\n-\t  ctxp->c_line->unicode_escape_ahead_p = unicode_escape_p;\n+\t  /* In this case we will have another terminator.  For some\n+\t     reason the lexer has several different unget methods.  We\n+\t     can't use the `ahead' method because then the \\r will end\n+\t     up in the actual text of the line, causing an error.  So\n+\t     instead we choose a very low-level method.  FIXME: this\n+\t     is incredibly ugly.  */\n+\t  UNGETC (c);\n \t}\n-      return 1;\n-    }\n-  else if (c == '\\r')\t\t/* LF */\n-    {\n-      if ((c = java_read_unicode (1, &unicode_escape_p)) != '\\n')\n+      else if (c != '\\n')\n \t{\n \t  ctxp->c_line->ahead [0] = c;\n \t  ctxp->c_line->unicode_escape_ahead_p = unicode_escape_p;"}]}