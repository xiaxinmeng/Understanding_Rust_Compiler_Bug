{"sha": "54f471f02471d0e135ad1d9683b89afe92ff3a15", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTRmNDcxZjAyNDcxZDBlMTM1YWQxZDk2ODNiODlhZmU5MmZmM2ExNQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-10-29T11:00:17Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-10-29T11:00:17Z"}, "message": "[multiple changes]\n\n2012-10-29  Tristan Gingold  <gingold@adacore.com>\n\n\t* exp_ch9.adb, s-tarest.ads, exp_ch3.adb: Update comments.\n\n2012-10-29  Yannick Moy  <moy@adacore.com>\n\n\t* gnat_rm.texi: Minor documentation addition.\n\n2012-10-29  Emmanuel Briot  <briot@adacore.com>\n\n\t* xr_tabls.adb, xr_tabls.ads (Add_Declaration, Add_Reference): No\n\tlonger assume that a parameter declaration is seen after the subprogram\n\tthat uses it.\n\n2012-10-29  Tristan Gingold  <gingold@adacore.com>\n\n\t* lib-writ.adb (Write_ALI): Emit partition elaboration policy\n\tin P line.\n\t* lib-writ.ads: Document partition elaboration policy indication.\n\t* sem_prag.adb (Check_Arg_Is_Partition_Elaboration_Policy): New\n\tprocedure.\n\t(Analyze_Pragma): Handle Partition_Elaboration_Policy.\n\t(Sig_Flags): Add flag for Pragma_Partition_Elaboration_Policy\n\t* ali.adb (Initialize_ALI): Init Partition_Elaboration_Policy_Specified.\n\t(Scan_ALI): Read Ex indications.\n\t* ali.ads: ALIs_Record: Add Partition_Elaboration_Policy.\n\t* par-prag.adb (Prag): Add Partition_Elaboration_Policy.\n\t* snames.adb-tmpl (Is_Partition_Elaboration_Policy_Name): New function.\n\t* opt.ads (Partition_Elaboration_Policy): Declare.\n\t(Partition_Elaboration_Policy_Sloc): Declare.\n\t* bcheck.adb (Check_Consistent_Partition_Elaboration_Policy):\n\tNew procedure.\t(Check_Configuration_Consistency): Check partition\n\telaboration policy consistency.\n\t* snames.ads-tmpl (Name_Partition_Elaboration_Policy): New name.\n\t(First_Partition_Elaboration_Policy_Name, Name_Concurrent,\n\tName_Sequential, Last_Partition_Elaboration_Policy_Name): Likewise.\n\t(Pragma_Partition_Elaboration_Policy): New literal.\n\t(Is_Partition_Elaboration_Policy_Name): New function.\n\n2012-10-29  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch6.adb (Is_Public_Subprogram_For): Handle properly\n\texpression functions, which are rewritten as subprogram\n\tdeclarations, when generating invariants for its return value\n\tand in-out parameters.\n\nFrom-SVN: r192928", "tree": {"sha": "711fe1a3a695d1f207635390f96d916108d930f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/711fe1a3a695d1f207635390f96d916108d930f1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/54f471f02471d0e135ad1d9683b89afe92ff3a15", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54f471f02471d0e135ad1d9683b89afe92ff3a15", "html_url": "https://github.com/Rust-GCC/gccrs/commit/54f471f02471d0e135ad1d9683b89afe92ff3a15", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54f471f02471d0e135ad1d9683b89afe92ff3a15/comments", "author": null, "committer": null, "parents": [{"sha": "0cc71b488a98162b4344c6809f26157cf6e346c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0cc71b488a98162b4344c6809f26157cf6e346c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0cc71b488a98162b4344c6809f26157cf6e346c0"}], "stats": {"total": 442, "additions": 357, "deletions": 85}, "files": [{"sha": "f6550b68018fbadf6c4100f34469059f2ae2c366", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54f471f02471d0e135ad1d9683b89afe92ff3a15/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54f471f02471d0e135ad1d9683b89afe92ff3a15/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=54f471f02471d0e135ad1d9683b89afe92ff3a15", "patch": "@@ -1,3 +1,49 @@\n+2012-10-29  Tristan Gingold  <gingold@adacore.com>\n+\n+\t* exp_ch9.adb, s-tarest.ads, exp_ch3.adb: Update comments.\n+\n+2012-10-29  Yannick Moy  <moy@adacore.com>\n+\n+\t* gnat_rm.texi: Minor documentation addition.\n+\n+2012-10-29  Emmanuel Briot  <briot@adacore.com>\n+\n+\t* xr_tabls.adb, xr_tabls.ads (Add_Declaration, Add_Reference): No\n+\tlonger assume that a parameter declaration is seen after the subprogram\n+\tthat uses it.\n+\n+2012-10-29  Tristan Gingold  <gingold@adacore.com>\n+\n+\t* lib-writ.adb (Write_ALI): Emit partition elaboration policy\n+\tin P line.\n+\t* lib-writ.ads: Document partition elaboration policy indication.\n+\t* sem_prag.adb (Check_Arg_Is_Partition_Elaboration_Policy): New\n+\tprocedure.\n+\t(Analyze_Pragma): Handle Partition_Elaboration_Policy.\n+\t(Sig_Flags): Add flag for Pragma_Partition_Elaboration_Policy\n+\t* ali.adb (Initialize_ALI): Init Partition_Elaboration_Policy_Specified.\n+\t(Scan_ALI): Read Ex indications.\n+\t* ali.ads: ALIs_Record: Add Partition_Elaboration_Policy.\n+\t* par-prag.adb (Prag): Add Partition_Elaboration_Policy.\n+\t* snames.adb-tmpl (Is_Partition_Elaboration_Policy_Name): New function.\n+\t* opt.ads (Partition_Elaboration_Policy): Declare.\n+\t(Partition_Elaboration_Policy_Sloc): Declare.\n+\t* bcheck.adb (Check_Consistent_Partition_Elaboration_Policy):\n+\tNew procedure.\t(Check_Configuration_Consistency): Check partition\n+\telaboration policy consistency.\n+\t* snames.ads-tmpl (Name_Partition_Elaboration_Policy): New name.\n+\t(First_Partition_Elaboration_Policy_Name, Name_Concurrent,\n+\tName_Sequential, Last_Partition_Elaboration_Policy_Name): Likewise.\n+\t(Pragma_Partition_Elaboration_Policy): New literal.\n+\t(Is_Partition_Elaboration_Policy_Name): New function.\n+\n+2012-10-29  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch6.adb (Is_Public_Subprogram_For): Handle properly\n+\texpression functions, which are rewritten as subprogram\n+\tdeclarations, when generating invariants for its return value\n+\tand in-out parameters.\n+\n 2012-10-29  Arnaud Charlet  <charlet@adacore.com>\n \n \t* warnsw.adb (Set_GNAT_Mode_Warnings): Unset"}, {"sha": "a85fa4bec2fa322919602691900965108d1456a0", "filename": "gcc/ada/ali.adb", "status": "modified", "additions": 50, "deletions": 41, "changes": 91, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54f471f02471d0e135ad1d9683b89afe92ff3a15/gcc%2Fada%2Fali.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54f471f02471d0e135ad1d9683b89afe92ff3a15/gcc%2Fada%2Fali.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fali.adb?ref=54f471f02471d0e135ad1d9683b89afe92ff3a15", "patch": "@@ -107,17 +107,18 @@ package body ALI is\n       --  Initialize global variables recording cumulative options in all\n       --  ALI files that are read for a given processing run in gnatbind.\n \n-      Dynamic_Elaboration_Checks_Specified := False;\n-      Float_Format_Specified               := ' ';\n-      Locking_Policy_Specified             := ' ';\n-      No_Normalize_Scalars_Specified       := False;\n-      No_Object_Specified                  := False;\n-      Normalize_Scalars_Specified          := False;\n-      Queuing_Policy_Specified             := ' ';\n-      Static_Elaboration_Model_Used        := False;\n-      Task_Dispatching_Policy_Specified    := ' ';\n-      Unreserve_All_Interrupts_Specified   := False;\n-      Zero_Cost_Exceptions_Specified       := False;\n+      Dynamic_Elaboration_Checks_Specified   := False;\n+      Float_Format_Specified                 := ' ';\n+      Locking_Policy_Specified               := ' ';\n+      No_Normalize_Scalars_Specified         := False;\n+      No_Object_Specified                    := False;\n+      Normalize_Scalars_Specified            := False;\n+      Partition_Elaboration_Policy_Specified := ' ';\n+      Queuing_Policy_Specified               := ' ';\n+      Static_Elaboration_Model_Used          := False;\n+      Task_Dispatching_Policy_Specified      := ' ';\n+      Unreserve_All_Interrupts_Specified     := False;\n+      Zero_Cost_Exceptions_Specified         := False;\n    end Initialize_ALI;\n \n    --------------\n@@ -813,36 +814,37 @@ package body ALI is\n       Set_Name_Table_Info (F, Int (Id));\n \n       ALIs.Table (Id) := (\n-        Afile                      => F,\n-        Compile_Errors             => False,\n-        First_Interrupt_State      => Interrupt_States.Last + 1,\n-        First_Sdep                 => No_Sdep_Id,\n-        First_Specific_Dispatching => Specific_Dispatching.Last + 1,\n-        First_Unit                 => No_Unit_Id,\n-        Float_Format               => 'I',\n-        Last_Interrupt_State       => Interrupt_States.Last,\n-        Last_Sdep                  => No_Sdep_Id,\n-        Last_Specific_Dispatching  => Specific_Dispatching.Last,\n-        Last_Unit                  => No_Unit_Id,\n-        Locking_Policy             => ' ',\n-        Main_Priority              => -1,\n-        Main_CPU                   => -1,\n-        Main_Program               => None,\n-        No_Object                  => False,\n-        Normalize_Scalars          => False,\n-        Ofile_Full_Name            => Full_Object_File_Name,\n-        Queuing_Policy             => ' ',\n-        Restrictions               => No_Restrictions,\n-        SAL_Interface              => False,\n-        Sfile                      => No_File,\n-        Task_Dispatching_Policy    => ' ',\n-        Time_Slice_Value           => -1,\n-        Allocator_In_Body          => False,\n-        WC_Encoding                => 'b',\n-        Unit_Exception_Table       => False,\n-        Ver                        => (others => ' '),\n-        Ver_Len                    => 0,\n-        Zero_Cost_Exceptions       => False);\n+        Afile                        => F,\n+        Compile_Errors               => False,\n+        First_Interrupt_State        => Interrupt_States.Last + 1,\n+        First_Sdep                   => No_Sdep_Id,\n+        First_Specific_Dispatching   => Specific_Dispatching.Last + 1,\n+        First_Unit                   => No_Unit_Id,\n+        Float_Format                 => 'I',\n+        Last_Interrupt_State         => Interrupt_States.Last,\n+        Last_Sdep                    => No_Sdep_Id,\n+        Last_Specific_Dispatching    => Specific_Dispatching.Last,\n+        Last_Unit                    => No_Unit_Id,\n+        Locking_Policy               => ' ',\n+        Main_Priority                => -1,\n+        Main_CPU                     => -1,\n+        Main_Program                 => None,\n+        No_Object                    => False,\n+        Normalize_Scalars            => False,\n+        Ofile_Full_Name              => Full_Object_File_Name,\n+        Partition_Elaboration_Policy => ' ',\n+        Queuing_Policy               => ' ',\n+        Restrictions                 => No_Restrictions,\n+        SAL_Interface                => False,\n+        Sfile                        => No_File,\n+        Task_Dispatching_Policy      => ' ',\n+        Time_Slice_Value             => -1,\n+        Allocator_In_Body            => False,\n+        WC_Encoding                  => 'b',\n+        Unit_Exception_Table         => False,\n+        Ver                          => (others => ' '),\n+        Ver_Len                      => 0,\n+        Zero_Cost_Exceptions         => False);\n \n       --  Now we acquire the input lines from the ALI file. Note that the\n       --  convention in the following code is that as we enter each section,\n@@ -1027,6 +1029,13 @@ package body ALI is\n                Checkc ('B');\n                Detect_Blocking := True;\n \n+            --  Processing for Ex\n+\n+            elsif C = 'E' then\n+               Partition_Elaboration_Policy_Specified := Getc;\n+               ALIs.Table (Id).Partition_Elaboration_Policy :=\n+                 Partition_Elaboration_Policy_Specified;\n+\n             --  Processing for FD/FG/FI\n \n             elsif C = 'F' then"}, {"sha": "2c800e732830f69ac4a6287fd7a296e12162e5c6", "filename": "gcc/ada/ali.ads", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54f471f02471d0e135ad1d9683b89afe92ff3a15/gcc%2Fada%2Fali.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54f471f02471d0e135ad1d9683b89afe92ff3a15/gcc%2Fada%2Fali.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fali.ads?ref=54f471f02471d0e135ad1d9683b89afe92ff3a15", "patch": "@@ -156,6 +156,12 @@ package ALI is\n       --  this is a language defined unit. Otherwise set to first character\n       --  (upper case) of policy name. Not set if 'P' appears in Ignore_Lines.\n \n+      Partition_Elaboration_Policy : Character;\n+      --  Indicates partition elaboration policy for units in this file. Space\n+      --  means that no Partition_Elaboration_Policy pragma was present or that\n+      --  this is a language defined unit. Otherwise set to first character\n+      --  (upper case) of policy name. Not set if 'P' appears in Ignore_Lines.\n+\n       Queuing_Policy : Character;\n       --  Indicates queuing policy for units in this file. Space means tasking\n       --  was not used, or that no Queuing_Policy pragma was present or that\n@@ -485,6 +491,11 @@ package ALI is\n    --  Set to False by Initialize_ALI. Set to True if an ali file indicates\n    --  that the file was compiled in Normalize_Scalars mode.\n \n+   Partition_Elaboration_Policy_Specified : Character := ' ';\n+   --  Set to blank by Initialize_ALI. Set to the appropriate partition\n+   --  elaboration policy character if an ali file contains a P line setting\n+   --  the policy.\n+\n    Queuing_Policy_Specified : Character := ' ';\n    --  Set to blank by Initialize_ALI. Set to the appropriate queuing policy\n    --  character if an ali file contains a P line setting the queuing policy."}, {"sha": "09354ecbcbbcfb9df1d97fd701c316cbdaf9b628", "filename": "gcc/ada/bcheck.adb", "status": "modified", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54f471f02471d0e135ad1d9683b89afe92ff3a15/gcc%2Fada%2Fbcheck.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54f471f02471d0e135ad1d9683b89afe92ff3a15/gcc%2Fada%2Fbcheck.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbcheck.adb?ref=54f471f02471d0e135ad1d9683b89afe92ff3a15", "patch": "@@ -52,6 +52,7 @@ package body Bcheck is\n    procedure Check_Consistent_Locking_Policy;\n    procedure Check_Consistent_Normalize_Scalars;\n    procedure Check_Consistent_Optimize_Alignment;\n+   procedure Check_Consistent_Partition_Elaboration_Policy;\n    procedure Check_Consistent_Queuing_Policy;\n    procedure Check_Consistent_Restrictions;\n    procedure Check_Consistent_Restriction_No_Default_Initialization;\n@@ -83,6 +84,10 @@ package body Bcheck is\n          Check_Consistent_Locking_Policy;\n       end if;\n \n+      if Partition_Elaboration_Policy_Specified /= ' ' then\n+         Check_Consistent_Partition_Elaboration_Policy;\n+      end if;\n+\n       if Zero_Cost_Exceptions_Specified then\n          Check_Consistent_Zero_Cost_Exception_Handling;\n       end if;\n@@ -744,6 +749,59 @@ package body Bcheck is\n       end loop;\n    end Check_Consistent_Optimize_Alignment;\n \n+   ---------------------------------------------------\n+   -- Check_Consistent_Partition_Elaboration_Policy --\n+   ---------------------------------------------------\n+\n+   --  The rule is that all files for which the partition elaboration policy is\n+   --  significant must be compiled with the same setting.\n+\n+   procedure Check_Consistent_Partition_Elaboration_Policy is\n+   begin\n+      --  First search for a unit specifying a policy and then\n+      --  check all remaining units against it.\n+\n+      Find_Policy : for A1 in ALIs.First .. ALIs.Last loop\n+         if ALIs.Table (A1).Partition_Elaboration_Policy /= ' ' then\n+            Check_Policy : declare\n+               Policy : constant Character :=\n+                  ALIs.Table (A1).Partition_Elaboration_Policy;\n+\n+            begin\n+               for A2 in A1 + 1 .. ALIs.Last loop\n+                  if ALIs.Table (A2).Partition_Elaboration_Policy /= ' '\n+                       and then\n+                     ALIs.Table (A2).Partition_Elaboration_Policy /= Policy\n+                  then\n+                     Error_Msg_File_1 := ALIs.Table (A1).Sfile;\n+                     Error_Msg_File_2 := ALIs.Table (A2).Sfile;\n+\n+                     Consistency_Error_Msg\n+                       (\"{ and { compiled with different partition \"\n+                          & \"elaboration policies\");\n+                     exit Find_Policy;\n+                  end if;\n+               end loop;\n+            end Check_Policy;\n+\n+            --  A No_Task_Hierarchy restriction must be specified for the\n+            --  Sequential policy (RM H.6(6/2)).\n+\n+            if Partition_Elaboration_Policy_Specified = 'S'\n+              and then not Cumulative_Restrictions.Set (No_Task_Hierarchy)\n+            then\n+               Error_Msg_File_1 := ALIs.Table (A1).Sfile;\n+               Error_Msg\n+                 (\"{ has sequential partition elaboration policy, but no\");\n+               Error_Msg\n+                 (\"pragma Restrictions (No_Task_Hierarchy) was specified\");\n+            end if;\n+\n+            exit Find_Policy;\n+         end if;\n+      end loop Find_Policy;\n+   end Check_Consistent_Partition_Elaboration_Policy;\n+\n    -------------------------------------\n    -- Check_Consistent_Queuing_Policy --\n    -------------------------------------"}, {"sha": "83ae4e4c711a69a377fd8b87bc9fb345c88fe6dd", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54f471f02471d0e135ad1d9683b89afe92ff3a15/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54f471f02471d0e135ad1d9683b89afe92ff3a15/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=54f471f02471d0e135ad1d9683b89afe92ff3a15", "patch": "@@ -1537,7 +1537,8 @@ package body Exp_Ch3 is\n             Append_To (Args, Make_Identifier (Loc, Name_uMaster));\n          end if;\n \n-         --  Add _Chain (not done in the restricted profile because ???)\n+         --  Add _Chain (not done in the restricted profile because not used,\n+         --  see comment of Create_Restricted_Task in s-tarest.ads).\n \n          if not Restricted_Profile then\n             Append_To (Args, Make_Identifier (Loc, Name_uChain));\n@@ -1993,7 +1994,8 @@ package body Exp_Ch3 is\n \n             if not Restricted_Profile then\n \n-               --  No _Chain for restricted profile\n+               --  No _Chain for the restricted profile because not used,\n+               --  see comment of Create_Restricted_Task in s-tarest.ads.\n \n                Append_To (Args, Make_Identifier (Loc, Name_uChain));\n             end if;\n@@ -7806,7 +7808,8 @@ package body Exp_Ch3 is\n \n          if not Restricted_Profile then\n \n-            --  No _Chain for restricted profile\n+            --  No _Chain for the restricted profile because not used, see\n+            --  comment of Create_Restricted_Task in s-tarest.ads.\n \n             Append_To (Formals,\n               Make_Parameter_Specification (Loc,"}, {"sha": "f103e924593f8b8ae05dfcae12ec52eb792b0fcd", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54f471f02471d0e135ad1d9683b89afe92ff3a15/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54f471f02471d0e135ad1d9683b89afe92ff3a15/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=54f471f02471d0e135ad1d9683b89afe92ff3a15", "patch": "@@ -911,7 +911,8 @@ package body Exp_Ch9 is\n    --  Start of processing for Build_Activation_Chain_Entity\n \n    begin\n-      --  Activation chain is never used in restricted profile (why not???)\n+      --  Activation chain is never used in restricted profile, see comment\n+      --  of Create_Restricted_Task in s-tarest.ads.\n \n       if Restricted_Profile then\n          return;"}, {"sha": "3561cedfb9036bfd00f1ce5894b6ff343a2179af", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54f471f02471d0e135ad1d9683b89afe92ff3a15/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54f471f02471d0e135ad1d9683b89afe92ff3a15/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=54f471f02471d0e135ad1d9683b89afe92ff3a15", "patch": "@@ -1212,7 +1212,24 @@ pragma Assert_And_Cut (\n The effect of this pragma for compilation is exactly the same as the one\n of pragma @code{Assert}. This pragma is used to help formal verification\n tools by marking program points where the tool can simplify precise\n-knowledge about execution based on the assertion given.\n+knowledge about execution based on the assertion given. For example, in\n+the procedure below, all that is needed to prove that the code using X\n+is free from run-time errors is that X is positive. Without the pragma,\n+GNATprove considers all execution paths through P, which may be\n+many. With the pragma, GNATprove only needs to consider the paths from\n+the start of the procedure to the pragma, and the paths from the pragma\n+to the end of the procedure, hence many fewer paths. For more details,\n+see the GNATprove User's Guide.\n+\n+@smallexample @c ada\n+procedure P is\n+   X : Integer;\n+begin\n+   --  complex computation that sets X\n+   pragma Assert_And_Cut (X > 0);\n+   --  complex computation that uses X\n+end P;\n+@end smallexample\n \n @node Pragma Assertion_Policy\n @unnumberedsec Pragma Assertion_Policy"}, {"sha": "e84023c1f19f2f6834c80439c356c45ee49b6aec", "filename": "gcc/ada/lib-writ.adb", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54f471f02471d0e135ad1d9683b89afe92ff3a15/gcc%2Fada%2Flib-writ.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54f471f02471d0e135ad1d9683b89afe92ff3a15/gcc%2Fada%2Flib-writ.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-writ.adb?ref=54f471f02471d0e135ad1d9683b89afe92ff3a15", "patch": "@@ -1099,6 +1099,11 @@ package body Lib.Writ is\n          end if;\n       end if;\n \n+      if Partition_Elaboration_Policy /= ' ' then\n+         Write_Info_Str  (\" E\");\n+         Write_Info_Char (Partition_Elaboration_Policy);\n+      end if;\n+\n       if not Object then\n          Write_Info_Str (\" NO\");\n       end if;"}, {"sha": "72f10d9c11ae87233062fe1cd9f93ef51a64346c", "filename": "gcc/ada/lib-writ.ads", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54f471f02471d0e135ad1d9683b89afe92ff3a15/gcc%2Fada%2Flib-writ.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54f471f02471d0e135ad1d9683b89afe92ff3a15/gcc%2Fada%2Flib-writ.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-writ.ads?ref=54f471f02471d0e135ad1d9683b89afe92ff3a15", "patch": "@@ -196,6 +196,10 @@ package Lib.Writ is\n    --         DB   Detect_Blocking pragma is in effect for all units in this\n    --              file.\n    --\n+   --         Ex   A valid Partition_Elaboration_Policy pragma applies to all\n+   --              the units in this file, where x is the first character\n+   --              (upper case) of the policy name (e.g. 'C' for Concurrent).\n+   --\n    --         FD   Configuration pragmas apply to all the units in this file\n    --              specifying a possibly non-standard floating point format\n    --              (VAX float with Long_Float using D_Float)."}, {"sha": "17c93177704efb8f6f0ed97159bc4b1e8f0f4d76", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54f471f02471d0e135ad1d9683b89afe92ff3a15/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54f471f02471d0e135ad1d9683b89afe92ff3a15/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=54f471f02471d0e135ad1d9683b89afe92ff3a15", "patch": "@@ -1085,6 +1085,18 @@ package Opt is\n    --  True if output of list of objects is requested (-O switch set). List is\n    --  output under the given filename, or standard output if not specified.\n \n+   Partition_Elaboration_Policy : Character := ' ';\n+   --  GNAT, GNATBIND\n+   --  Set to ' ' for the default case (no elaboration policy specified). Reset\n+   --  to first character (uppercase) of locking policy name if a valid pragma\n+   --  Partition_Elaboration_Policy is encountered.\n+\n+   Partition_Elaboration_Policy_Sloc : Source_Ptr := No_Location;\n+   --  GNAT, GNATBIND\n+   --  Remember location of previous Partition_Elaboration_Policy pragma. This\n+   --  is used for inconsistency error messages. A value of System_Location is\n+   --  used if the policy is set in package System.\n+\n    Persistent_BSS_Mode : Boolean := False;\n    --  GNAT\n    --  True if a Persistent_BSS configuration pragma is in effect, causing"}, {"sha": "5bbf914d84549690c060cee60e6b64fe5641d290", "filename": "gcc/ada/par-prag.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54f471f02471d0e135ad1d9683b89afe92ff3a15/gcc%2Fada%2Fpar-prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54f471f02471d0e135ad1d9683b89afe92ff3a15/gcc%2Fada%2Fpar-prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-prag.adb?ref=54f471f02471d0e135ad1d9683b89afe92ff3a15", "patch": "@@ -1202,6 +1202,7 @@ begin\n            Pragma_Optimize_Alignment             |\n            Pragma_Overflow_Checks                |\n            Pragma_Pack                           |\n+           Pragma_Partition_Elaboration_Policy   |\n            Pragma_Passive                        |\n            Pragma_Preelaborable_Initialization   |\n            Pragma_Polling                        |"}, {"sha": "b6639b1f07f3a96db6713c06139c1e2a86272ed6", "filename": "gcc/ada/s-tarest.ads", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54f471f02471d0e135ad1d9683b89afe92ff3a15/gcc%2Fada%2Fs-tarest.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54f471f02471d0e135ad1d9683b89afe92ff3a15/gcc%2Fada%2Fs-tarest.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tarest.ads?ref=54f471f02471d0e135ad1d9683b89afe92ff3a15", "patch": "@@ -167,6 +167,10 @@ package System.Tasking.Restricted.Stages is\n    --  Created_Task is the resulting task.\n    --\n    --  This procedure can raise Storage_Error if the task creation fails\n+   --\n+   --  Contrary to Create_Task, there is no Chain parameter (for the activation\n+   --  chain), as there is only one global activation chain, which is declared\n+   --  in the body of this package.\n \n    procedure Activate_Tasks;\n    pragma Export (C, Activate_Tasks, \"__gnat_activate_tasks\");"}, {"sha": "ffebc9b7fd603f9f66b18927d8280313caa10182", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54f471f02471d0e135ad1d9683b89afe92ff3a15/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54f471f02471d0e135ad1d9683b89afe92ff3a15/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=54f471f02471d0e135ad1d9683b89afe92ff3a15", "patch": "@@ -11468,10 +11468,19 @@ package body Sem_Ch6 is\n          --  public subprogram, since we do get initializations to deal with.\n          --  Other internally generated subprograms are not public.\n \n-         if not Is_List_Member (DD) and then Is_Init_Proc (DD) then\n+         if not Is_List_Member (DD)\n+           and then Is_Init_Proc (Defining_Entity (DD))\n+         then\n             return True;\n \n-         elsif not Comes_From_Source (DD) then\n+         --  The declaration may have been generated for an expression function\n+         --  so check whether that function comes from source.\n+\n+         elsif not Comes_From_Source (DD)\n+           and then\n+             (Nkind (Original_Node (DD)) /= N_Expression_Function\n+               or else not Comes_From_Source (Defining_Entity (DD)))\n+         then\n             return False;\n \n          --  Otherwise we test whether the subprogram is declared in the\n@@ -11797,7 +11806,7 @@ package body Sem_Ch6 is\n       end if;\n \n       --  If we had any postconditions and expansion is enabled, or if the\n-      --  procedure has invariants, then build the _Postconditions procedure.\n+      --  subprogram has invariants, then build the _Postconditions procedure.\n \n       if (Present (Plist) or else Invariants_Or_Predicates_Present)\n         and then Expander_Active\n@@ -11806,7 +11815,7 @@ package body Sem_Ch6 is\n             Plist := Empty_List;\n          end if;\n \n-         --  Special processing for function case\n+         --  Special processing for function return\n \n          if Ekind (Designator) /= E_Procedure then\n             declare"}, {"sha": "e5dfde99a73b6c372e5b4cb9649d2697def600cb", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 68, "deletions": 0, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54f471f02471d0e135ad1d9683b89afe92ff3a15/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54f471f02471d0e135ad1d9683b89afe92ff3a15/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=54f471f02471d0e135ad1d9683b89afe92ff3a15", "patch": "@@ -505,6 +505,10 @@ package body Sem_Prag is\n       --  Check the specified argument Arg to make sure that it is a valid\n       --  locking policy name. If not give error and raise Pragma_Exit.\n \n+      procedure Check_Arg_Is_Partition_Elaboration_Policy (Arg : Node_Id);\n+      --  Check the specified argument Arg to make sure that it is a valid\n+      --  elaboration policy name. If not give error and raise Pragma_Exit.\n+\n       procedure Check_Arg_Is_One_Of\n         (Arg                : Node_Id;\n          N1, N2             : Name_Id);\n@@ -1190,6 +1194,22 @@ package body Sem_Prag is\n          end if;\n       end Check_Arg_Is_Locking_Policy;\n \n+      -----------------------------------------------\n+      -- Check_Arg_Is_Partition_Elaboration_Policy --\n+      -----------------------------------------------\n+\n+      procedure Check_Arg_Is_Partition_Elaboration_Policy (Arg : Node_Id) is\n+         Argx : constant Node_Id := Get_Pragma_Arg (Arg);\n+\n+      begin\n+         Check_Arg_Is_Identifier (Argx);\n+\n+         if not Is_Partition_Elaboration_Policy_Name (Chars (Argx)) then\n+            Error_Pragma_Arg\n+              (\"& is not a valid partition elaboration policy name\", Argx);\n+         end if;\n+      end Check_Arg_Is_Partition_Elaboration_Policy;\n+\n       -------------------------\n       -- Check_Arg_Is_One_Of --\n       -------------------------\n@@ -12039,6 +12059,53 @@ package body Sem_Prag is\n          when Pragma_Page =>\n             null;\n \n+         ----------------------------------\n+         -- Partition_Elaboration_Policy --\n+         ----------------------------------\n+\n+         --  pragma Partition_Elaboration_Policy (policy_IDENTIFIER);\n+\n+         when Pragma_Partition_Elaboration_Policy => declare\n+            subtype PEP_Range is Name_Id\n+              range First_Partition_Elaboration_Policy_Name\n+                 .. Last_Partition_Elaboration_Policy_Name;\n+            PEP_Val : PEP_Range;\n+            PEP     : Character;\n+\n+         begin\n+            Ada_2005_Pragma;\n+            Check_Arg_Count (1);\n+            Check_No_Identifiers;\n+            Check_Arg_Is_Partition_Elaboration_Policy (Arg1);\n+            Check_Valid_Configuration_Pragma;\n+            PEP_Val := Chars (Get_Pragma_Arg (Arg1));\n+\n+            case PEP_Val is\n+               when Name_Concurrent =>\n+                  PEP := 'C';\n+               when Name_Sequential =>\n+                  PEP := 'S';\n+            end case;\n+\n+            if Partition_Elaboration_Policy /= ' '\n+              and then Partition_Elaboration_Policy /= PEP\n+            then\n+               Error_Msg_Sloc := Partition_Elaboration_Policy_Sloc;\n+               Error_Pragma\n+                 (\"partition elaboration policy incompatible with policy#\");\n+\n+            --  Set new policy, but always preserve System_Location since we\n+            --  like the error message with the run time name.\n+\n+            else\n+               Partition_Elaboration_Policy := PEP;\n+\n+               if Partition_Elaboration_Policy_Sloc /= System_Location then\n+                  Partition_Elaboration_Policy_Sloc := Loc;\n+               end if;\n+            end if;\n+         end;\n+\n          -------------\n          -- Passive --\n          -------------\n@@ -15312,6 +15379,7 @@ package body Sem_Prag is\n       Pragma_Ordered                        =>  0,\n       Pragma_Pack                           =>  0,\n       Pragma_Page                           => -1,\n+      Pragma_Partition_Elaboration_Policy   => -1,\n       Pragma_Passive                        => -1,\n       Pragma_Preelaborable_Initialization   => -1,\n       Pragma_Polling                        => -1,"}, {"sha": "e314d99aa891739be64e492f55751b7ff3d7ac01", "filename": "gcc/ada/snames.adb-tmpl", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54f471f02471d0e135ad1d9683b89afe92ff3a15/gcc%2Fada%2Fsnames.adb-tmpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54f471f02471d0e135ad1d9683b89afe92ff3a15/gcc%2Fada%2Fsnames.adb-tmpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.adb-tmpl?ref=54f471f02471d0e135ad1d9683b89afe92ff3a15", "patch": "@@ -419,6 +419,17 @@ package body Snames is\n       return N in First_Locking_Policy_Name .. Last_Locking_Policy_Name;\n    end Is_Locking_Policy_Name;\n \n+   -------------------------------------\n+   -- Is_Partition_Elaboration_Policy --\n+   -------------------------------------\n+\n+   function Is_Partition_Elaboration_Policy_Name (N : Name_Id)\n+      return Boolean is\n+   begin\n+      return N in First_Partition_Elaboration_Policy_Name\n+           ..  Last_Partition_Elaboration_Policy_Name;\n+   end Is_Partition_Elaboration_Policy_Name;\n+\n    -----------------------------\n    -- Is_Operator_Symbol_Name --\n    -----------------------------"}, {"sha": "c187600694caf8ce296c6759b51c759bcfc9d92c", "filename": "gcc/ada/snames.ads-tmpl", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54f471f02471d0e135ad1d9683b89afe92ff3a15/gcc%2Fada%2Fsnames.ads-tmpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54f471f02471d0e135ad1d9683b89afe92ff3a15/gcc%2Fada%2Fsnames.ads-tmpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.ads-tmpl?ref=54f471f02471d0e135ad1d9683b89afe92ff3a15", "patch": "@@ -409,6 +409,7 @@ package Snames is\n    Name_Normalize_Scalars              : constant Name_Id := N + $;\n    Name_Optimize_Alignment             : constant Name_Id := N + $; -- GNAT\n    Name_Overflow_Checks                : constant Name_Id := N + $; -- GNAT\n+   Name_Partition_Elaboration_Policy   : constant Name_Id := N + $; -- Ada 05\n    Name_Persistent_BSS                 : constant Name_Id := N + $; -- GNAT\n    Name_Polling                        : constant Name_Id := N + $; -- GNAT\n    Name_Priority_Specific_Dispatching  : constant Name_Id := N + $; -- Ada 05\n@@ -1015,6 +1016,17 @@ package Snames is\n    Name_Round_Robin_Within_Priorities    : constant Name_Id := N + $;\n    Last_Task_Dispatching_Policy_Name     : constant Name_Id := N + $;\n \n+   --  Names of recognized partition elaboration policy identifiers\n+\n+   --  Note: policies are identified by the first character of the name (e.g. S\n+   --  for Sequential). If new policy names are added, the first character must\n+   --  be distinct.\n+\n+   First_Partition_Elaboration_Policy_Name : constant Name_Id := N + $;\n+   Name_Concurrent                         : constant Name_Id := N + $;\n+   Name_Sequential                         : constant Name_Id := N + $;\n+   Last_Partition_Elaboration_Policy_Name  : constant Name_Id := N + $;\n+\n    --  Names of recognized checks for pragma Suppress\n \n    --  Note: the name Atomic_Synchronization can only be specified internally\n@@ -1666,6 +1678,7 @@ package Snames is\n       Pragma_Normalize_Scalars,\n       Pragma_Optimize_Alignment,\n       Pragma_Overflow_Checks,\n+      Pragma_Partition_Elaboration_Policy,\n       Pragma_Persistent_BSS,\n       Pragma_Polling,\n       Pragma_Priority_Specific_Dispatching,\n@@ -1902,6 +1915,10 @@ package Snames is\n    function Is_Locking_Policy_Name (N : Name_Id) return Boolean;\n    --  Test to see if the name N is the name of a recognized locking policy\n \n+   function Is_Partition_Elaboration_Policy_Name (N : Name_Id) return Boolean;\n+   --  Test to see if the name N is the name of a recognized partition\n+   --  elaboration policy.\n+\n    function Is_Operator_Symbol_Name (N : Name_Id) return Boolean;\n    --  Test to see if the name N is the name of an operator symbol\n \n@@ -1978,6 +1995,7 @@ private\n    pragma Inline (Is_Entity_Attribute_Name);\n    pragma Inline (Is_Type_Attribute_Name);\n    pragma Inline (Is_Locking_Policy_Name);\n+   pragma Inline (Is_Partition_Elaboration_Policy_Name);\n    pragma Inline (Is_Operator_Symbol_Name);\n    pragma Inline (Is_Queuing_Policy_Name);\n    pragma Inline (Is_Pragma_Name);"}, {"sha": "2bc2932590342458174cc22d6f8ee1f551748251", "filename": "gcc/ada/xr_tabls.adb", "status": "modified", "additions": 26, "deletions": 34, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54f471f02471d0e135ad1d9683b89afe92ff3a15/gcc%2Fada%2Fxr_tabls.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54f471f02471d0e135ad1d9683b89afe92ff3a15/gcc%2Fada%2Fxr_tabls.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fxr_tabls.adb?ref=54f471f02471d0e135ad1d9683b89afe92ff3a15", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1998-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1998-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -223,6 +223,7 @@ package body Xr_Tabls is\n       Line         : Natural;\n       Column       : Natural;\n       Decl_Type    : Character;\n+      Is_Parameter : Boolean := False;\n       Remove_Only  : Boolean := False;\n       Symbol_Match : Boolean := True)\n       return         Declaration_Reference\n@@ -235,15 +236,15 @@ package body Xr_Tabls is\n       New_Decl : Declaration_Reference :=\n                    Entities_HTable.Get (Key'Unchecked_Access);\n \n-      Is_Parameter : Boolean := False;\n+      Is_Param : Boolean := Is_Parameter;\n \n    begin\n       --  Insert the Declaration in the table. There might already be a\n       --  declaration in the table if the entity is a parameter, so we\n       --  need to check that first.\n \n       if New_Decl /= null and then New_Decl.Symbol_Length = 0 then\n-         Is_Parameter := New_Decl.Is_Parameter;\n+         Is_Param := Is_Parameter or else New_Decl.Is_Parameter;\n          Entities_HTable.Remove (Key'Unrestricted_Access);\n          Entities_Count := Entities_Count - 1;\n          Free (New_Decl.Key);\n@@ -269,7 +270,7 @@ package body Xr_Tabls is\n                                       Column        => Column,\n                                       Source_Line   => null,\n                                       Next          => null),\n-              Is_Parameter  => Is_Parameter,\n+              Is_Parameter  => Is_Param,\n               Decl_Type     => Decl_Type,\n               Body_Ref      => null,\n               Ref_Ref       => null,\n@@ -294,6 +295,10 @@ package body Xr_Tabls is\n       then\n          New_Decl.Match := Default_Match\n            or else Match (File_Ref, Line, Column);\n+         New_Decl.Is_Parameter := New_Decl.Is_Parameter or else Is_Param;\n+\n+      elsif New_Decl /= null then\n+         New_Decl.Is_Parameter := New_Decl.Is_Parameter or else Is_Param;\n       end if;\n \n       return New_Decl;\n@@ -392,6 +397,8 @@ package body Xr_Tabls is\n       Labels_As_Ref : Boolean)\n    is\n       New_Ref : Reference;\n+      New_Decl : Declaration_Reference;\n+      pragma Unreferenced (New_Decl);\n \n    begin\n       case Ref_Type is\n@@ -407,36 +414,21 @@ package body Xr_Tabls is\n          when '=' | '<' | '>' | '^' =>\n \n             --  Create a dummy declaration in the table to report it as a\n-            --  parameter. Note that the current declaration for the subprogram\n-            --  comes before the declaration of the parameter.\n-\n-            declare\n-               Key      : constant String :=\n-                            Key_From_Ref (File_Ref, Line, Column);\n-               New_Decl : Declaration_Reference;\n-\n-            begin\n-               New_Decl := new Declaration_Record'\n-                 (Symbol_Length => 0,\n-                  Symbol        => \"\",\n-                  Key           => new String'(Key),\n-                  Decl          => new Reference_Record'\n-                                     (File          => File_Ref,\n-                                      Line          => Line,\n-                                      Column        => Column,\n-                                      Source_Line   => null,\n-                                      Next          => null),\n-                  Is_Parameter  => True,\n-                  Decl_Type     => ' ',\n-                  Body_Ref      => null,\n-                  Ref_Ref       => null,\n-                  Modif_Ref     => null,\n-                  Match         => False,\n-                  Par_Symbol    => null,\n-                  Next          => null);\n-               Entities_HTable.Set (New_Decl);\n-               Entities_Count := Entities_Count + 1;\n-            end;\n+            --  parameter.\n+            --  In a given ALI file, the declaration of the subprogram comes\n+            --  before the declaration of the parameter. However, it is\n+            --  possible that another ALI file has been parsed that also\n+            --  references the parameter (for instance a named parameter in a\n+            --  call), so we need to check whether there already exists a\n+            --  declaration for the parameter.\n+\n+            New_Decl := Add_Declaration\n+              (File_Ref  => File_Ref,\n+               Symbol    => \"\",\n+               Line      => Line,\n+               Column    => Column,\n+               Decl_Type => ' ',\n+               Is_Parameter => True);\n \n          when 'e' | 'z' | 't' | 'p' | 'P' | 'k' | 'd' =>\n             return;"}, {"sha": "9aa47bc954584c22d84f25805ed2b50866c59be0", "filename": "gcc/ada/xr_tabls.ads", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54f471f02471d0e135ad1d9683b89afe92ff3a15/gcc%2Fada%2Fxr_tabls.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54f471f02471d0e135ad1d9683b89afe92ff3a15/gcc%2Fada%2Fxr_tabls.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fxr_tabls.ads?ref=54f471f02471d0e135ad1d9683b89afe92ff3a15", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1998-2008, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1998-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -78,6 +78,7 @@ package Xr_Tabls is\n       Line         : Natural;\n       Column       : Natural;\n       Decl_Type    : Character;\n+      Is_Parameter : Boolean := False;\n       Remove_Only  : Boolean := False;\n       Symbol_Match : Boolean := True)\n       return         Declaration_Reference;\n@@ -89,6 +90,8 @@ package Xr_Tabls is\n    --  the command line. In that case, the entity will not be output by\n    --  gnatfind. If Symbol_Match is True, the entity will only be output if the\n    --  file name itself matches.\n+   --  Is_Parameter should be set to True if the entity is known to be a\n+   --  subprogram parameter.\n \n    procedure Add_Parent\n      (Declaration : in out Declaration_Reference;"}]}