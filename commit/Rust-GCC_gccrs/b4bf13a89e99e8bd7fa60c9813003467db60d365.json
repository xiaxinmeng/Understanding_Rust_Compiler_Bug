{"sha": "b4bf13a89e99e8bd7fa60c9813003467db60d365", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjRiZjEzYTg5ZTk5ZThiZDdmYTYwYzk4MTMwMDM0NjdkYjYwZDM2NQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-05-14T19:00:45Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-05-14T19:00:45Z"}, "message": "(expand_decl): Don't set RTX_UNCHANGING_P.\n\nFrom-SVN: r4457", "tree": {"sha": "35a54228606508c2fe9e96d235985d6ca86b2f02", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/35a54228606508c2fe9e96d235985d6ca86b2f02"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b4bf13a89e99e8bd7fa60c9813003467db60d365", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4bf13a89e99e8bd7fa60c9813003467db60d365", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b4bf13a89e99e8bd7fa60c9813003467db60d365", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4bf13a89e99e8bd7fa60c9813003467db60d365/comments", "author": null, "committer": null, "parents": [{"sha": "517f954609e08162835cdf711745c23c8fae67f6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/517f954609e08162835cdf711745c23c8fae67f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/517f954609e08162835cdf711745c23c8fae67f6"}], "stats": {"total": 7, "additions": 7, "deletions": 0}, "files": [{"sha": "05b0738f551b38e5896ce7adc60a53f0bfdfc05e", "filename": "gcc/stmt.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4bf13a89e99e8bd7fa60c9813003467db60d365/gcc%2Fstmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4bf13a89e99e8bd7fa60c9813003467db60d365/gcc%2Fstmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstmt.c?ref=b4bf13a89e99e8bd7fa60c9813003467db60d365", "patch": "@@ -2995,8 +2995,15 @@ expand_decl (decl)\n \n   if (TREE_THIS_VOLATILE (decl))\n     MEM_VOLATILE_P (DECL_RTL (decl)) = 1;\n+#if 0 /* A variable is not necessarily unchanging\n+\t just because it is const.  RTX_UNCHANGING_P\n+\t means no change in the function,\n+\t not merely no change in the variable's scope.\n+\t It is correct to set RTX_UNCHANGING_P if the variable's scope\n+\t is the whole function.  There's no convenient way to test that.  */\n   if (TREE_READONLY (decl))\n     RTX_UNCHANGING_P (DECL_RTL (decl)) = 1;\n+#endif\n \n   /* If doing stupid register allocation, make sure life of any\n      register variable starts here, at the start of its scope.  */"}]}