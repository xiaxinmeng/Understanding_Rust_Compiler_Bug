{"sha": "f234d26028c5a031dd4cd5f33133de7b8ae5293c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjIzNGQyNjAyOGM1YTAzMWRkNGNkNWYzMzEzM2RlN2I4YWU1MjkzYw==", "commit": {"author": {"name": "Bingfeng Mei", "email": "bmei@broadcom.com", "date": "2013-12-23T15:07:58Z"}, "committer": {"name": "Bingfeng Mei", "email": "meibf@gcc.gnu.org", "date": "2013-12-23T15:07:58Z"}, "message": "re PR middle-end/59569 (r206148 causes internal compiler error: in vect_create_destination_var, at tree-vect-data-refs.c:4294)\n\n2013-12-23  Bingfeng Mei  <bmei@broadcom.com>\n\n\tPR middle-end/59569\n\t* tree-vect-stmts.c (vectorizable_store): Skip permutation for\n\tconsant operand, and add a few missing \\n.\n\n\t* gcc.c-torture/compile/pr59569-1.c: New test.\n\t* gcc.c-torture/compile/pr59569-2.c: Ditto.\n\nFrom-SVN: r206179", "tree": {"sha": "36cccd534ebae278208e56df23bfa8a0ca4d769b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/36cccd534ebae278208e56df23bfa8a0ca4d769b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f234d26028c5a031dd4cd5f33133de7b8ae5293c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f234d26028c5a031dd4cd5f33133de7b8ae5293c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f234d26028c5a031dd4cd5f33133de7b8ae5293c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f234d26028c5a031dd4cd5f33133de7b8ae5293c/comments", "author": null, "committer": null, "parents": [{"sha": "d3c11974032e21121a051d423a1d71097edf752f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3c11974032e21121a051d423a1d71097edf752f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d3c11974032e21121a051d423a1d71097edf752f"}], "stats": {"total": 41, "additions": 36, "deletions": 5}, "files": [{"sha": "b9fe7632681f022e7f86d6c0a8e7121ed5b210f5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f234d26028c5a031dd4cd5f33133de7b8ae5293c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f234d26028c5a031dd4cd5f33133de7b8ae5293c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f234d26028c5a031dd4cd5f33133de7b8ae5293c", "patch": "@@ -1,3 +1,9 @@\n+2013-12-23  Bingfeng Mei  <bmei@broadcom.com>\n+\n+\tPR middle-end/59569\n+\t* tree-vect-stmts.c (vectorizable_store): Skip permutation for\n+\tconsant/external operand, and add a few missing \\n.\n+\n 2013-12-23   H.J. Lu  <hongjiu.lu@intel.com>\n \t     Tocar Ilya  <ilya.tocar@intel.com> \n "}, {"sha": "c4fad36aa9eba1f15d241523a72895853dbd3eef", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f234d26028c5a031dd4cd5f33133de7b8ae5293c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f234d26028c5a031dd4cd5f33133de7b8ae5293c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f234d26028c5a031dd4cd5f33133de7b8ae5293c", "patch": "@@ -1,3 +1,9 @@\n+2013-12-23  Bingfeng Mei  <bmei@broadcom.com>\n+\n+\tPR middle-end/59569\n+\t* gcc.c-torture/compile/pr59569-1.c: New test.\n+\t* gcc.c-torture/compile/pr59569-2.c: Ditto.\n+\n 2013-12-23  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/59111"}, {"sha": "116c72474cc58e2ba6a52ad424b360682909cf6a", "filename": "gcc/testsuite/gcc.c-torture/compile/pr59569-1.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f234d26028c5a031dd4cd5f33133de7b8ae5293c/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr59569-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f234d26028c5a031dd4cd5f33133de7b8ae5293c/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr59569-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr59569-1.c?ref=f234d26028c5a031dd4cd5f33133de7b8ae5293c", "patch": "@@ -0,0 +1,9 @@\n+/* PR middle-end/59569 */\n+extern char c;\n+\n+void\n+foo (int i, char **j)\n+{\n+  while (i)\n+    j[--i] = &c;\n+}"}, {"sha": "e813b88d857a1102638d44af4e98ce1b5c5d3c80", "filename": "gcc/testsuite/gcc.c-torture/compile/pr59569-2.c", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f234d26028c5a031dd4cd5f33133de7b8ae5293c/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr59569-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f234d26028c5a031dd4cd5f33133de7b8ae5293c/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr59569-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr59569-2.c?ref=f234d26028c5a031dd4cd5f33133de7b8ae5293c", "patch": "@@ -0,0 +1,6 @@\n+/* PR middle-end/59569 */\n+void foo (int *a, int b)\n+{\n+  for (; b; b--)\n+    a[b] = 1;\n+}"}, {"sha": "e3009d9a474cf67b443d15cb47311367a04aada6", "filename": "gcc/tree-vect-stmts.c", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f234d26028c5a031dd4cd5f33133de7b8ae5293c/gcc%2Ftree-vect-stmts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f234d26028c5a031dd4cd5f33133de7b8ae5293c/gcc%2Ftree-vect-stmts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-stmts.c?ref=f234d26028c5a031dd4cd5f33133de7b8ae5293c", "patch": "@@ -5005,7 +5005,7 @@ vectorizable_store (gimple stmt, gimple_stmt_iterator *gsi, gimple *vec_stmt,\n     {\n       if (dump_enabled_p ())\n         dump_printf_loc (MSG_MISSED_OPTIMIZATION, vect_location,\n-\t\t\t \"multiple types with negative step.\");\n+\t\t\t \"multiple types with negative step.\\n\");\n       return false;\n     }\n \n@@ -5018,14 +5018,16 @@ vectorizable_store (gimple stmt, gimple_stmt_iterator *gsi, gimple *vec_stmt,\n \t{\n \t  if (dump_enabled_p ())\n \t    dump_printf_loc (MSG_MISSED_OPTIMIZATION, vect_location,\n-\t\t\t     \"negative step but alignment required.\");\n+\t\t\t     \"negative step but alignment required.\\n\");\n \t  return false;\n \t}\n-      if (!perm_mask_for_reverse (vectype))\n+      if (dt != vect_constant_def \n+\t  && dt != vect_external_def\n+\t  && !perm_mask_for_reverse (vectype))\n \t{\n \t  if (dump_enabled_p ())\n \t    dump_printf_loc (MSG_MISSED_OPTIMIZATION, vect_location,\n-\t\t\t     \"negative step and reversing not supported.\");\n+\t\t\t     \"negative step and reversing not supported.\\n\");\n \t  return false;\n \t}\n     }\n@@ -5353,7 +5355,9 @@ vectorizable_store (gimple stmt, gimple_stmt_iterator *gsi, gimple *vec_stmt,\n \t\tset_ptr_info_alignment (get_ptr_info (dataref_ptr), align,\n \t\t\t\t\tmisalign);\n \n-\t      if (negative)\n+\t      if (negative\n+\t\t  && dt != vect_constant_def \n+\t\t  && dt != vect_external_def)\n \t\t{\n \t\t  tree perm_mask = perm_mask_for_reverse (vectype);\n \t\t  tree perm_dest "}]}