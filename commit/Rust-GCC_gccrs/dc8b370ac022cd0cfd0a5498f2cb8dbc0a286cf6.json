{"sha": "dc8b370ac022cd0cfd0a5498f2cb8dbc0a286cf6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGM4YjM3MGFjMDIyY2QwY2ZkMGE1NDk4ZjJjYjhkYmMwYTI4NmNmNg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-01-04T09:24:06Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-01-04T09:24:06Z"}, "message": "[multiple changes]\n\n2013-01-04  Pascal Obry  <obry@adacore.com>\n\n\t* prj-nmsc.adb: Minor reformatting.\n\n2013-01-04  Vincent Celier  <celier@adacore.com>\n\n\t* makeutl.ads (Root_Environment): New variable, moved rom\n\tgprbuild (Load_Standard_Base): New Boolean variable, moved\n\tfrom gprbuild.\n\t* prj-conf.adb (Check_Builder_Switches): New procedure to check\n\tfor switch --RTS in package Builder. If a runtime specified\n\tby --RTS is a relative path name, but not a base name, then\n\tfind the path on the Project Search Path.\n\t(Do_Autoconf): Call Check_Builder_Switches.\n\t(Locate_Runtime): New procedure, moved from gprbuild, to get the\n\tabsolute paths of runtimes when they are not specified as a base name.\n\t* prj-conf.ads (Locate_Runtime): New procedure, moved from gprbuild.\n\nFrom-SVN: r194893", "tree": {"sha": "7b01870ca42247e84f967c8350dc07e04f494cfd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7b01870ca42247e84f967c8350dc07e04f494cfd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dc8b370ac022cd0cfd0a5498f2cb8dbc0a286cf6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc8b370ac022cd0cfd0a5498f2cb8dbc0a286cf6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc8b370ac022cd0cfd0a5498f2cb8dbc0a286cf6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc8b370ac022cd0cfd0a5498f2cb8dbc0a286cf6/comments", "author": null, "committer": null, "parents": [{"sha": "33bd17e742dc4956590a6ff8d2676f1c8eaf305f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33bd17e742dc4956590a6ff8d2676f1c8eaf305f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/33bd17e742dc4956590a6ff8d2676f1c8eaf305f"}], "stats": {"total": 368, "additions": 231, "deletions": 137}, "files": [{"sha": "85ee0f75d2a660dfeb83919a1224b6f1a64742a8", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc8b370ac022cd0cfd0a5498f2cb8dbc0a286cf6/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc8b370ac022cd0cfd0a5498f2cb8dbc0a286cf6/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=dc8b370ac022cd0cfd0a5498f2cb8dbc0a286cf6", "patch": "@@ -1,3 +1,21 @@\n+2013-01-04  Pascal Obry  <obry@adacore.com>\n+\n+\t* prj-nmsc.adb: Minor reformatting.\n+\n+2013-01-04  Vincent Celier  <celier@adacore.com>\n+\n+\t* makeutl.ads (Root_Environment): New variable, moved rom\n+\tgprbuild (Load_Standard_Base): New Boolean variable, moved\n+\tfrom gprbuild.\n+\t* prj-conf.adb (Check_Builder_Switches): New procedure to check\n+\tfor switch --RTS in package Builder. If a runtime specified\n+\tby --RTS is a relative path name, but not a base name, then\n+\tfind the path on the Project Search Path.\n+\t(Do_Autoconf): Call Check_Builder_Switches.\n+\t(Locate_Runtime): New procedure, moved from gprbuild, to get the\n+\tabsolute paths of runtimes when they are not specified as a base name.\n+\t* prj-conf.ads (Locate_Runtime): New procedure, moved from gprbuild.\n+\n 2013-01-04  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_ch3.adb (Build_Private_Derived_Type): Set"}, {"sha": "9570fef6628be52720e43349cf96722ef39c3099", "filename": "gcc/ada/makeutl.ads", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc8b370ac022cd0cfd0a5498f2cb8dbc0a286cf6/gcc%2Fada%2Fmakeutl.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc8b370ac022cd0cfd0a5498f2cb8dbc0a286cf6/gcc%2Fada%2Fmakeutl.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakeutl.ads?ref=dc8b370ac022cd0cfd0a5498f2cb8dbc0a286cf6", "patch": "@@ -44,6 +44,14 @@ package Makeutl is\n    type Fail_Proc is access procedure (S : String);\n    --  Pointer to procedure which outputs a failure message\n \n+   Root_Environment : Prj.Tree.Environment;\n+   --  The environment coming from environment variables and command line\n+   --  switches. When we do not have an aggregate project, this is used for\n+   --  parsing the project tree. When we have an aggregate project, this is\n+   --  used to parse the aggregate project; the latter then generates another\n+   --  environment (with additional external values and project path) to parse\n+   --  the aggregated projects.\n+\n    Default_Config_Name : constant String := \"default.cgpr\";\n    --  Name of the configuration file used by gprbuild and generated by\n    --  gprconfig by default.\n@@ -71,6 +79,9 @@ package Makeutl is\n    Create_Map_File_Switch : constant String := \"--create-map-file\";\n    --  Switch to create a map file when an executable is linked\n \n+   Load_Standard_Base : Boolean := True;\n+   --  False when gprbuild is called with --db-\n+\n    package Directories is new Table.Table\n      (Table_Component_Type => Path_Name_Type,\n       Table_Index_Type     => Integer,"}, {"sha": "4e799b6ab091d1f3c92df8db60bbff83e3e2a921", "filename": "gcc/ada/prj-conf.adb", "status": "modified", "additions": 178, "deletions": 119, "changes": 297, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc8b370ac022cd0cfd0a5498f2cb8dbc0a286cf6/gcc%2Fada%2Fprj-conf.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc8b370ac022cd0cfd0a5498f2cb8dbc0a286cf6/gcc%2Fada%2Fprj-conf.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-conf.adb?ref=dc8b370ac022cd0cfd0a5498f2cb8dbc0a286cf6", "patch": "@@ -628,6 +628,9 @@ package body Prj.Conf is\n       --  Generate a new config file through gprconfig. In case of error, this\n       --  raises the Invalid_Config exception with an appropriate message\n \n+      procedure Check_Builder_Switches;\n+      --  Check for switch --RTS in package Builder\n+\n       function Get_Config_Switches return Argument_List_Access;\n       --  Return the --config switches to use for gprconfig\n \n@@ -636,6 +639,119 @@ package body Prj.Conf is\n       --  explicitly specified it. We haven't checked the file system, nor do\n       --  we need to at this stage.\n \n+      ----------------------------\n+      -- Check_Builder_Switches --\n+      ----------------------------\n+\n+      procedure Check_Builder_Switches is\n+         Get_RTS_Switches : constant Boolean :=\n+                              RTS_Languages.Get_First = No_Name;\n+         --  If no switch --RTS have been specified on the command line, look\n+         --  for --RTS switches in the Builder switches.\n+\n+         Builder : constant Package_Id :=\n+                     Value_Of (Name_Builder, Project.Decl.Packages, Shared);\n+\n+         Switch_Array_Id : Array_Element_Id;\n+         --  The Switches to be checked\n+\n+         procedure Check_Switches;\n+         --  Check the switches in Switch_Array_Id\n+\n+         --------------------\n+         -- Check_Switches --\n+         --------------------\n+\n+         procedure Check_Switches is\n+            Switch_Array    : Array_Element;\n+            Switch_List     : String_List_Id := Nil_String;\n+            Switch          : String_Element;\n+            Lang            : Name_Id;\n+            Lang_Last       : Positive;\n+\n+         begin\n+            while Switch_Array_Id /= No_Array_Element loop\n+               Switch_Array :=\n+                 Shared.Array_Elements.Table (Switch_Array_Id);\n+\n+               Switch_List := Switch_Array.Value.Values;\n+               List_Loop : while Switch_List /= Nil_String loop\n+                  Switch := Shared.String_Elements.Table (Switch_List);\n+\n+                  if Switch.Value /= No_Name then\n+                     Get_Name_String (Switch.Value);\n+\n+                     if Get_RTS_Switches\n+                       and then Name_Len >= 7\n+                       and then Name_Buffer (1 .. 5) = \"--RTS\"\n+                     then\n+                        if Name_Buffer (6) = '=' then\n+                           if not Runtime_Name_Set_For (Name_Ada) then\n+                              Set_Runtime_For\n+                                (Name_Ada,\n+                                 Name_Buffer (7 .. Name_Len));\n+                              Locate_Runtime (Name_Ada, Project_Tree);\n+                           end if;\n+\n+                        elsif Name_Len > 7\n+                          and then Name_Buffer (6) = ':'\n+                          and then Name_Buffer (7) /= '='\n+                        then\n+                           Lang_Last := 7;\n+                           while Lang_Last < Name_Len\n+                             and then Name_Buffer (Lang_Last + 1) /= '='\n+                           loop\n+                              Lang_Last := Lang_Last + 1;\n+                           end loop;\n+\n+                           if Name_Buffer (Lang_Last + 1) = '=' then\n+                              declare\n+                                 RTS : constant String :=\n+                                   Name_Buffer (Lang_Last + 2 .. Name_Len);\n+                              begin\n+                                 Name_Buffer (1 .. Lang_Last - 6) :=\n+                                   Name_Buffer (7 .. Lang_Last);\n+                                 Name_Len := Lang_Last - 6;\n+                                 To_Lower (Name_Buffer (1 .. Name_Len));\n+                                 Lang := Name_Find;\n+\n+                                 if not Runtime_Name_Set_For (Lang) then\n+                                    Set_Runtime_For (Lang, RTS);\n+                                    Locate_Runtime (Lang, Project_Tree);\n+                                 end if;\n+                              end;\n+                           end if;\n+                        end if;\n+                     end if;\n+                  end if;\n+\n+                  Switch_List := Switch.Next;\n+               end loop List_Loop;\n+\n+               Switch_Array_Id := Switch_Array.Next;\n+            end loop;\n+         end Check_Switches;\n+\n+      --  Start of processing for Check_Builder_Switches\n+\n+      begin\n+         if Builder /= No_Package then\n+            Switch_Array_Id :=\n+              Value_Of\n+                (Name      => Name_Switches,\n+                 In_Arrays => Shared.Packages.Table (Builder).Decl.Arrays,\n+                 Shared    => Shared);\n+            Check_Switches;\n+\n+            Switch_Array_Id :=\n+              Value_Of\n+                (Name      => Name_Default_Switches,\n+                 In_Arrays => Shared.Packages.Table (Builder).Decl.Arrays,\n+                 Shared    => Shared);\n+            Check_Switches;\n+         end if;\n+      end Check_Builder_Switches;\n+\n       -----------------------\n       -- Default_File_Name --\n       -----------------------\n@@ -647,10 +763,11 @@ package body Prj.Conf is\n       begin\n          if Target_Name /= \"\" then\n             if Ada_RTS /= \"\" then\n-               return Target_Name & '-' & Ada_RTS\n-                 & Config_Project_File_Extension;\n+               return\n+                 Target_Name & '-' & Ada_RTS & Config_Project_File_Extension;\n             else\n-               return Target_Name & Config_Project_File_Extension;\n+               return\n+                 Target_Name & Config_Project_File_Extension;\n             end if;\n \n          elsif Ada_RTS /= \"\" then\n@@ -1012,117 +1129,6 @@ package body Prj.Conf is\n                end case;\n             end if;\n \n-            --  If no switch --RTS have been specified on the command line,\n-            --  look for --RTS switches in the Builder switches.\n-\n-            if RTS_Languages.Get_First = No_Name then\n-               declare\n-                  Builder : constant Package_Id :=\n-                              Value_Of\n-                                (Name_Builder, Project.Decl.Packages, Shared);\n-                  Switch_Array_Id : Array_Element_Id;\n-\n-                  procedure Check_RTS_Switches;\n-                  --  Take into account eventual switches --RTS in\n-                  --  Switch_Array_Id.\n-\n-                  ------------------------\n-                  -- Check_RTS_SWitches --\n-                  ------------------------\n-\n-                  procedure Check_RTS_Switches is\n-                     Switch_Array : Array_Element;\n-                     Switch_List  : String_List_Id := Nil_String;\n-                     Switch       : String_Element;\n-                     Lang         : Name_Id;\n-                     Lang_Last    : Positive;\n-\n-                  begin\n-                     while Switch_Array_Id /= No_Array_Element loop\n-                        Switch_Array :=\n-                          Shared.Array_Elements.Table (Switch_Array_Id);\n-\n-                        Switch_List := Switch_Array.Value.Values;\n-                        while Switch_List /= Nil_String loop\n-                           Switch :=\n-                             Shared.String_Elements.Table (Switch_List);\n-\n-                           if Switch.Value /= No_Name then\n-                              Get_Name_String (Switch.Value);\n-\n-                              if Name_Len >= 7 and then\n-                                Name_Buffer (1 .. 5) = \"--RTS\"\n-                              then\n-                                 if Name_Buffer (6) = '=' then\n-                                    if not Runtime_Name_Set_For (Name_Ada) then\n-                                       Set_Runtime_For\n-                                         (Name_Ada,\n-                                          Name_Buffer (7 .. Name_Len));\n-                                    end if;\n-\n-                                 elsif Name_Len > 7 and then\n-                                   Name_Buffer (6) = ':' and then\n-                                   Name_Buffer (7) /= '='\n-                                 then\n-                                    Lang_Last := 7;\n-                                    while Lang_Last < Name_Len and then\n-                                      Name_Buffer (Lang_Last + 1) /= '='\n-                                    loop\n-                                       Lang_Last := Lang_Last + 1;\n-                                    end loop;\n-\n-                                    if Name_Buffer (Lang_Last + 1) = '=' then\n-                                       declare\n-                                          RTS : constant String :=\n-                                                  Name_Buffer (Lang_Last + 2 ..\n-                                                               Name_Len);\n-                                       begin\n-                                          Name_Buffer (1 .. Lang_Last - 6) :=\n-                                            Name_Buffer (7 .. Lang_Last);\n-                                          Name_Len := Lang_Last - 6;\n-                                          To_Lower\n-                                            (Name_Buffer (1 .. Name_Len));\n-                                          Lang := Name_Find;\n-\n-                                          if not\n-                                            Runtime_Name_Set_For (Lang)\n-                                          then\n-                                             Set_Runtime_For (Lang, RTS);\n-                                          end if;\n-                                       end;\n-                                    end if;\n-                                 end if;\n-                              end if;\n-                           end if;\n-\n-                           Switch_List := Switch.Next;\n-                        end loop;\n-\n-                        Switch_Array_Id := Switch_Array.Next;\n-                     end loop;\n-                  end Check_RTS_Switches;\n-\n-               begin\n-                  if Builder /= No_Package then\n-                     Switch_Array_Id :=\n-                       Value_Of\n-                         (Name      => Name_Switches,\n-                          In_Arrays =>\n-                            Shared.Packages.Table (Builder).Decl.Arrays,\n-                          Shared    => Shared);\n-                     Check_RTS_Switches;\n-\n-                     Switch_Array_Id :=\n-                       Value_Of\n-                         (Name      => Name_Default_Switches,\n-                          In_Arrays =>\n-                            Shared.Packages.Table (Builder).Decl.Arrays,\n-                          Shared    => Shared);\n-                     Check_RTS_Switches;\n-                  end if;\n-               end;\n-            end if;\n-\n             --  Get the config switches. This should be done only now, as some\n             --  runtimes may have been found if the Builder switches.\n \n@@ -1135,7 +1141,7 @@ package body Prj.Conf is\n \n             --  If no config file was specified, set the auto.cgpr one\n \n-            if Config_File_Name = \"\" then\n+            if Config_File_Name'Length = 0 then\n                if Obj_Dir_Exists then\n                   Args (3) := new String'(Obj_Dir & Auto_Cgpr);\n \n@@ -1253,7 +1259,7 @@ package body Prj.Conf is\n                --  Display no message if we are creating auto.cgpr, unless in\n                --  verbose mode\n \n-               if Config_File_Name /= \"\"\n+               if Config_File_Name'Length > 0\n                  or else Verbose_Mode\n                then\n                   Write_Str (\"creating \");\n@@ -1290,15 +1296,17 @@ package body Prj.Conf is\n       Free (Config_File_Path);\n       Config := No_Project;\n \n-      if Config_File_Name /= \"\" then\n+      Check_Builder_Switches;\n+\n+      if Config_File_Name'Length > 0 then\n          Config_File_Path := Locate_Config_File (Config_File_Name);\n       else\n          Config_File_Path := Locate_Config_File (Default_File_Name);\n       end if;\n \n       if Config_File_Path = null then\n          if (not Allow_Automatic_Generation)\n-           and then Config_File_Name /= \"\"\n+           and then Config_File_Name'Length > 0\n          then\n             Raise_Invalid_Config\n               (\"could not locate main configuration project \"\n@@ -1326,10 +1334,11 @@ package body Prj.Conf is\n          end if;\n \n       --  If the config file is not auto-generated, warn if there is any --RTS\n-      --  switch on the command line.\n+      --  switch, but not when the config file is generated in memory.\n \n       elsif RTS_Languages.Get_First /= No_Name\n         and then Opt.Warning_Mode /= Opt.Suppress\n+        and then On_Load_Config = null\n       then\n          Write_Line\n            (\"warning: --RTS is taken into account only in auto-configuration\");\n@@ -1411,6 +1420,56 @@ package body Prj.Conf is\n       end if;\n    end Locate_Config_File;\n \n+   --------------------\n+   -- Locate_Runtime --\n+   --------------------\n+\n+   procedure Locate_Runtime\n+     (Language     : Name_Id;\n+      Project_Tree : Prj.Project_Tree_Ref)\n+   is\n+      function Is_Base_Name (Path : String) return Boolean;\n+      --  Returns True if Path has no directory separator\n+\n+      ------------------\n+      -- Is_Base_Name --\n+      ------------------\n+\n+      function Is_Base_Name (Path : String) return Boolean is\n+      begin\n+         for I in Path'Range loop\n+            if Path (I) = Directory_Separator or else Path (I) = '/' then\n+               return False;\n+            end if;\n+         end loop;\n+         return True;\n+      end Is_Base_Name;\n+\n+      --  Local declarations\n+\n+      function Find_Rts_In_Path is new Prj.Env.Find_Name_In_Path\n+        (Check_Filename => Is_Directory);\n+\n+      RTS_Name : constant String := Runtime_Name_For (Language);\n+\n+      Full_Path : String_Access;\n+\n+   --  Start of processing for Locate_Runtime\n+\n+   begin\n+      if not Is_Base_Name (RTS_Name) then\n+         Full_Path :=\n+           Find_Rts_In_Path (Root_Environment.Project_Path, RTS_Name);\n+\n+         if Full_Path = null then\n+            Fail_Program (Project_Tree, \"cannot find RTS \" & RTS_Name);\n+         end if;\n+\n+         Set_Runtime_For (Language, Normalize_Pathname (Full_Path.all));\n+         Free (Full_Path);\n+      end if;\n+   end Locate_Runtime;\n+\n    ------------------------------------\n    -- Parse_Project_And_Apply_Config --\n    ------------------------------------"}, {"sha": "f283c6ed2b3f4ec18b7a575be607147a6d8f7da6", "filename": "gcc/ada/prj-conf.ads", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc8b370ac022cd0cfd0a5498f2cb8dbc0a286cf6/gcc%2Fada%2Fprj-conf.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc8b370ac022cd0cfd0a5498f2cb8dbc0a286cf6/gcc%2Fada%2Fprj-conf.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-conf.ads?ref=dc8b370ac022cd0cfd0a5498f2cb8dbc0a286cf6", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---            Copyright (C) 2006-2011, Free Software Foundation, Inc.       --\n+--            Copyright (C) 2006-2012, Free Software Foundation, Inc.       --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -189,4 +189,12 @@ package Prj.Conf is\n    function Runtime_Name_Set_For (Language : Name_Id) return Boolean;\n    --  Returns True only if Set_Runtime_For has been called for the Language\n \n+   procedure Locate_Runtime\n+     (Language     : Name_Id;\n+      Project_Tree : Prj.Project_Tree_Ref);\n+   --  If RTS_Name is a base name (a name without path separator), then\n+   --  do nothing. Otherwise, convert it to an absolute path (possibly by\n+   --  searching it in the project path) and call Set_Runtime_For with the\n+   --  absolute path. Fail the program if the path does not exist.\n+\n end Prj.Conf;"}, {"sha": "b956292a6e6c39849f6f54c23d1a73ef7ce7b6fd", "filename": "gcc/ada/prj-nmsc.adb", "status": "modified", "additions": 15, "deletions": 17, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc8b370ac022cd0cfd0a5498f2cb8dbc0a286cf6/gcc%2Fada%2Fprj-nmsc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc8b370ac022cd0cfd0a5498f2cb8dbc0a286cf6/gcc%2Fada%2Fprj-nmsc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.adb?ref=dc8b370ac022cd0cfd0a5498f2cb8dbc0a286cf6", "patch": "@@ -6727,9 +6727,9 @@ package body Prj.Nmsc is\n \n    procedure Free (Data : in out Project_Processing_Data) is\n    begin\n-      Source_Names_Htable.Reset      (Data.Source_Names);\n-      Unit_Exceptions_Htable.Reset   (Data.Unit_Exceptions);\n-      Excluded_Sources_Htable.Reset  (Data.Excluded);\n+      Source_Names_Htable.Reset     (Data.Source_Names);\n+      Unit_Exceptions_Htable.Reset  (Data.Unit_Exceptions);\n+      Excluded_Sources_Htable.Reset (Data.Excluded);\n    end Free;\n \n    -------------------------------\n@@ -6996,9 +6996,9 @@ package body Prj.Nmsc is\n \n                if Name_Loc.Source.Naming_Exception = Inherited then\n                   declare\n-                     Proj  : Project_Id := Name_Loc.Source.Project.Extends;\n-                     Iter  : Source_Iterator;\n-                     Src   : Source_Id;\n+                     Proj : Project_Id := Name_Loc.Source.Project.Extends;\n+                     Iter : Source_Iterator;\n+                     Src  : Source_Id;\n                   begin\n                      while Proj /= No_Project loop\n                         Iter := For_Each_Source (Data.Tree, Proj);\n@@ -7149,10 +7149,10 @@ package body Prj.Nmsc is\n         (Path : Path_Information;\n          Rank : Natural) return Boolean\n       is\n-         Dir   : Dir_Type;\n-         Name  : String (1 .. 250);\n-         Last  : Natural;\n-         Found : Path_Information;\n+         Dir     : Dir_Type;\n+         Name    : String (1 .. 250);\n+         Last    : Natural;\n+         Found   : Path_Information;\n          Success : Boolean := False;\n \n       begin\n@@ -7198,10 +7198,10 @@ package body Prj.Nmsc is\n          Rank : Natural) return Boolean\n       is\n          Path_Str : constant String := Get_Name_String (Path.Display_Name);\n-         Dir   : Dir_Type;\n-         Name  : String (1 .. 250);\n-         Last  : Natural;\n-         Success : Boolean := False;\n+         Dir      : Dir_Type;\n+         Name     : String (1 .. 250);\n+         Last     : Natural;\n+         Success  : Boolean := False;\n \n       begin\n          Debug_Output (\"looking for subdirs of \", Name_Id (Path.Display_Name));\n@@ -8321,9 +8321,7 @@ package body Prj.Nmsc is\n             procedure Check_Not_Defined (Name : Name_Id) is\n                Var : constant Prj.Variable_Value :=\n                        Prj.Util.Value_Of\n-                         (Name,\n-                          Project.Decl.Attributes,\n-                          Data.Tree.Shared);\n+                         (Name, Project.Decl.Attributes, Data.Tree.Shared);\n             begin\n                if not Var.Default then\n                   Error_Msg_Name_1 := Name;"}]}