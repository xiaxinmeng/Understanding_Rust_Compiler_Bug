{"sha": "32ba7860ccaddd5219e6dae94a3d0653e124c9dd", "node_id": "C_kwDOANBUbNoAKDMyYmE3ODYwY2NhZGRkNTIxOWU2ZGFlOTRhM2QwNjUzZTEyNGM5ZGQ", "commit": {"author": {"name": "Przemyslaw Wirkus", "email": "przemyslaw.wirkus@arm.com", "date": "2021-11-09T09:40:05Z"}, "committer": {"name": "Przemyslaw Wirkus", "email": "przemyslaw.wirkus@arm.com", "date": "2021-11-09T11:34:57Z"}, "message": "arm: add armv9-a architecture to -march\n\nIn this patch:\n\t+ Add `armv9-a` to -march.\n\t+ Update multilib with armv9-a and armv9-a+simd.\n\ngcc/ChangeLog:\n\n\t* config/arm/arm-cpus.in (armv9): New define.\n\t(ARMv9a): New group.\n\t(armv9-a): New arch definition.\n\t* config/arm/arm-tables.opt: Regenerate.\n\t* config/arm/arm.h (BASE_ARCH_9A): New arch enum value.\n\t* config/arm/t-aprofile: Added armv9-a and armv9+simd.\n\t* config/arm/t-arm-elf: Added arm9-a, v9_fps and all_v9_archs\n\tto MULTILIB_MATCHES.\n\t* config/arm/t-multilib: Added v9_a_nosimd_variants and\n\tv9_a_simd_variants to MULTILIB_MATCHES.\n\t* doc/invoke.texi: Update docs.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/arm/multilib.exp: Update test with armv9-a entries.\n\t* lib/target-supports.exp (v9a): Add new armflag.\n\t(__ARM_ARCH_9A__): Add new armdef.", "tree": {"sha": "c07d88ed0f788f88393d972f138ce93297aa23e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c07d88ed0f788f88393d972f138ce93297aa23e6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/32ba7860ccaddd5219e6dae94a3d0653e124c9dd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32ba7860ccaddd5219e6dae94a3d0653e124c9dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/32ba7860ccaddd5219e6dae94a3d0653e124c9dd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32ba7860ccaddd5219e6dae94a3d0653e124c9dd/comments", "author": {"login": "PrzemekWirkus", "id": 6360720, "node_id": "MDQ6VXNlcjYzNjA3MjA=", "avatar_url": "https://avatars.githubusercontent.com/u/6360720?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PrzemekWirkus", "html_url": "https://github.com/PrzemekWirkus", "followers_url": "https://api.github.com/users/PrzemekWirkus/followers", "following_url": "https://api.github.com/users/PrzemekWirkus/following{/other_user}", "gists_url": "https://api.github.com/users/PrzemekWirkus/gists{/gist_id}", "starred_url": "https://api.github.com/users/PrzemekWirkus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PrzemekWirkus/subscriptions", "organizations_url": "https://api.github.com/users/PrzemekWirkus/orgs", "repos_url": "https://api.github.com/users/PrzemekWirkus/repos", "events_url": "https://api.github.com/users/PrzemekWirkus/events{/privacy}", "received_events_url": "https://api.github.com/users/PrzemekWirkus/received_events", "type": "User", "site_admin": false}, "committer": {"login": "PrzemekWirkus", "id": 6360720, "node_id": "MDQ6VXNlcjYzNjA3MjA=", "avatar_url": "https://avatars.githubusercontent.com/u/6360720?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PrzemekWirkus", "html_url": "https://github.com/PrzemekWirkus", "followers_url": "https://api.github.com/users/PrzemekWirkus/followers", "following_url": "https://api.github.com/users/PrzemekWirkus/following{/other_user}", "gists_url": "https://api.github.com/users/PrzemekWirkus/gists{/gist_id}", "starred_url": "https://api.github.com/users/PrzemekWirkus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PrzemekWirkus/subscriptions", "organizations_url": "https://api.github.com/users/PrzemekWirkus/orgs", "repos_url": "https://api.github.com/users/PrzemekWirkus/repos", "events_url": "https://api.github.com/users/PrzemekWirkus/events{/privacy}", "received_events_url": "https://api.github.com/users/PrzemekWirkus/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "df8690f28379795a44aa4b6c737df08828168b6a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df8690f28379795a44aa4b6c737df08828168b6a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/df8690f28379795a44aa4b6c737df08828168b6a"}], "stats": {"total": 87, "additions": 79, "deletions": 8}, "files": [{"sha": "3756ba56c6ea36fa9d017347bd73b27ab7752325", "filename": "gcc/config/arm/arm-cpus.in", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32ba7860ccaddd5219e6dae94a3d0653e124c9dd/gcc%2Fconfig%2Farm%2Farm-cpus.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32ba7860ccaddd5219e6dae94a3d0653e124c9dd/gcc%2Fconfig%2Farm%2Farm-cpus.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-cpus.in?ref=32ba7860ccaddd5219e6dae94a3d0653e124c9dd", "patch": "@@ -132,6 +132,9 @@ define feature cmse\n # Architecture rel 8.1-M.\n define feature armv8_1m_main\n \n+# Architecture rel 9.0.\n+define feature armv9\n+\n # Floating point and Neon extensions.\n # VFPv1 is not supported in GCC.\n \n@@ -293,6 +296,7 @@ define fgroup ARMv8m_base ARMv6m armv8 cmse tdiv\n define fgroup ARMv8m_main ARMv7m armv8 cmse\n define fgroup ARMv8r      ARMv8a\n define fgroup ARMv8_1m_main ARMv8m_main armv8_1m_main\n+define fgroup ARMv9a      ARMv8_5a armv9\n \n # Useful combinations.\n define fgroup VFPv2\tvfpv2\n@@ -751,6 +755,21 @@ begin arch armv8.1-m.main\n  option cdecp7 add cdecp7\n end arch armv8.1-m.main\n \n+begin arch armv9-a\n+ tune for cortex-a53\n+ tune flags CO_PROC\n+ base 9A\n+ profile A\n+ isa ARMv9a\n+ option simd add FP_ARMv8 DOTPROD\n+ option fp16 add fp16 fp16fml FP_ARMv8 DOTPROD\n+ option crypto add FP_ARMv8 CRYPTO DOTPROD\n+ option nocrypto remove ALL_CRYPTO\n+ option nofp remove ALL_FP\n+ option i8mm add i8mm FP_ARMv8 DOTPROD\n+ option bf16 add bf16 FP_ARMv8 DOTPROD\n+end arch armv9-a\n+\n begin arch iwmmxt\n  tune for iwmmxt\n  tune flags LDSCHED STRONG XSCALE"}, {"sha": "c00e252ec5aa0f1a9004718dbea3cf969a4e5be6", "filename": "gcc/config/arm/arm-tables.opt", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32ba7860ccaddd5219e6dae94a3d0653e124c9dd/gcc%2Fconfig%2Farm%2Farm-tables.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32ba7860ccaddd5219e6dae94a3d0653e124c9dd/gcc%2Fconfig%2Farm%2Farm-tables.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-tables.opt?ref=32ba7860ccaddd5219e6dae94a3d0653e124c9dd", "patch": "@@ -383,10 +383,13 @@ EnumValue\n Enum(arm_arch) String(armv8.1-m.main) Value(30)\n \n EnumValue\n-Enum(arm_arch) String(iwmmxt) Value(31)\n+Enum(arm_arch) String(armv9-a) Value(31)\n \n EnumValue\n-Enum(arm_arch) String(iwmmxt2) Value(32)\n+Enum(arm_arch) String(iwmmxt) Value(32)\n+\n+EnumValue\n+Enum(arm_arch) String(iwmmxt2) Value(33)\n \n Enum\n Name(arm_fpu) Type(enum fpu_type)"}, {"sha": "3a8d223ee622ffe5b25e14ed07bfaa07835dc683", "filename": "gcc/config/arm/arm.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32ba7860ccaddd5219e6dae94a3d0653e124c9dd/gcc%2Fconfig%2Farm%2Farm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32ba7860ccaddd5219e6dae94a3d0653e124c9dd/gcc%2Fconfig%2Farm%2Farm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.h?ref=32ba7860ccaddd5219e6dae94a3d0653e124c9dd", "patch": "@@ -452,7 +452,8 @@ enum base_architecture\n   BASE_ARCH_8A = 8,\n   BASE_ARCH_8M_BASE = 8,\n   BASE_ARCH_8M_MAIN = 8,\n-  BASE_ARCH_8R = 8\n+  BASE_ARCH_8R = 8,\n+  BASE_ARCH_9A = 9\n };\n \n /* The major revision number of the ARM Architecture implemented by the target.  */"}, {"sha": "68e2251c7266712177723a7d634016f4fddaacac", "filename": "gcc/config/arm/t-aprofile", "status": "modified", "additions": 21, "deletions": 4, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32ba7860ccaddd5219e6dae94a3d0653e124c9dd/gcc%2Fconfig%2Farm%2Ft-aprofile", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32ba7860ccaddd5219e6dae94a3d0653e124c9dd/gcc%2Fconfig%2Farm%2Ft-aprofile", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ft-aprofile?ref=32ba7860ccaddd5219e6dae94a3d0653e124c9dd", "patch": "@@ -26,8 +26,8 @@\n \n # Arch and FPU variants to build libraries with\n \n-MULTI_ARCH_OPTS_A       = march=armv7-a/march=armv7-a+fp/march=armv7-a+simd/march=armv7ve+simd/march=armv8-a/march=armv8-a+simd\n-MULTI_ARCH_DIRS_A       = v7-a v7-a+fp v7-a+simd v7ve+simd v8-a v8-a+simd\n+MULTI_ARCH_OPTS_A       = march=armv7-a/march=armv7-a+fp/march=armv7-a+simd/march=armv7ve+simd/march=armv8-a/march=armv8-a+simd/march=armv9-a/march=armv9-a+simd\n+MULTI_ARCH_DIRS_A       = v7-a v7-a+fp v7-a+simd v7ve+simd v8-a v8-a+simd v9-a v9-a+simd\n \n # ARMv7-A - build nofp, fp-d16 and SIMD variants\n \n@@ -46,6 +46,11 @@ MULTILIB_REQUIRED\t+= mthumb/march=armv8-a/mfloat-abi=soft\n MULTILIB_REQUIRED\t+= mthumb/march=armv8-a+simd/mfloat-abi=hard\n MULTILIB_REQUIRED\t+= mthumb/march=armv8-a+simd/mfloat-abi=softfp\n \n+# Armv9-A - build nofp and SIMD variants.\n+MULTILIB_REQUIRED\t+= mthumb/march=armv9-a/mfloat-abi=soft\n+MULTILIB_REQUIRED\t+= mthumb/march=armv9-a+simd/mfloat-abi=hard\n+MULTILIB_REQUIRED\t+= mthumb/march=armv9-a+simd/mfloat-abi=softfp\n+\n # Matches\n \n # Arch Matches\n@@ -129,17 +134,29 @@ MULTILIB_MATCHES\t+= march?armv8-a=march?armv8.6-a\n MULTILIB_MATCHES\t+= $(foreach ARCH, $(v8_6_a_simd_variants), \\\n \t\t\t     march?armv8-a+simd=march?armv8.6-a$(ARCH))\n \n+# Armv9 without SIMD: map down to base architecture\n+MULTILIB_MATCHES\t+= $(foreach ARCH, $(v9_a_nosimd_variants), \\\n+\t\t\t     march?armv9-a=march?armv9-a$(ARCH))\n+\n+# Armv9 with SIMD: map down to base arch + simd\n+MULTILIB_MATCHES\t+= march?armv9-a+simd=march?armv9-a+crc+simd \\\n+\t\t\t   $(foreach ARCH, $(filter-out +simd, $(v9_a_simd_variants)), \\\n+\t\t\t     march?armv9-a+simd=march?armv9-a$(ARCH) \\\n+\t\t\t     march?armv9-a+simd=march?armv9-a+crc$(ARCH))\n+\n # Use Thumb libraries for everything.\n \n MULTILIB_REUSE\t\t+= mthumb/march.armv7-a/mfloat-abi.soft=marm/march.armv7-a/mfloat-abi.soft\n \n MULTILIB_REUSE\t\t+= mthumb/march.armv8-a/mfloat-abi.soft=marm/march.armv8-a/mfloat-abi.soft\n \n+MULTILIB_REUSE\t\t+= mthumb/march.armv9-a/mfloat-abi.soft=marm/march.armv9-a/mfloat-abi.soft\n+\n MULTILIB_REUSE\t\t+= $(foreach ABI, hard softfp, \\\n-\t\t\t     $(foreach ARCH, armv7-a+fp armv7-a+simd armv7ve+simd armv8-a+simd, \\\n+\t\t\t     $(foreach ARCH, armv7-a+fp armv7-a+simd armv7ve+simd armv8-a+simd armv9-a+simd, \\\n \t\t\t       mthumb/march.$(ARCH)/mfloat-abi.$(ABI)=marm/march.$(ARCH)/mfloat-abi.$(ABI)))\n \n # Softfp but no FP, use the soft-float libraries.\n MULTILIB_REUSE\t\t+= $(foreach MODE, arm thumb, \\\n-\t\t\t     $(foreach ARCH, armv7-a armv8-a, \\\n+\t\t\t     $(foreach ARCH, armv7-a armv8-a armv9-a, \\\n \t\t\t       mthumb/march.$(ARCH)/mfloat-abi.soft=m$(MODE)/march.$(ARCH)/mfloat-abi.softfp))"}, {"sha": "b3a900e8cb308f5ddb49af5a944ae894543a9382", "filename": "gcc/config/arm/t-arm-elf", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32ba7860ccaddd5219e6dae94a3d0653e124c9dd/gcc%2Fconfig%2Farm%2Ft-arm-elf", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32ba7860ccaddd5219e6dae94a3d0653e124c9dd/gcc%2Fconfig%2Farm%2Ft-arm-elf", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ft-arm-elf?ref=32ba7860ccaddd5219e6dae94a3d0653e124c9dd", "patch": "@@ -38,6 +38,8 @@ v7ve_fps\t:= vfpv3-d16 vfpv3 vfpv3-d16-fp16 vfpv3-fp16 vfpv4 neon \\\n # it seems to work ok.\n v8_fps\t\t:= simd fp16 crypto fp16+crypto dotprod fp16fml\n \n+v9_fps\t\t:= simd fp16 crypto fp16+crypto dotprod fp16fml\n+\n # We don't do anything special with these.  Pre-v4t probably doesn't work.\n all_early_nofp\t:= armv4 armv4t armv5t\n \n@@ -49,6 +51,8 @@ all_v7_a_r\t:= armv7-a armv7ve armv7-r\n all_v8_archs\t:= armv8-a armv8-a+crc armv8.1-a armv8.2-a armv8.3-a armv8.4-a \\\n \t\t   armv8.5-a armv8.6-a\n \n+all_v9_archs\t:= armv9-a\n+\n # No floating point variants, require thumb1 softfp\n all_nofp_t\t:= armv6-m armv6s-m armv8-m.base\n \n@@ -110,6 +114,11 @@ MULTILIB_MATCHES     += $(foreach ARCH, $(all_v8_archs), \\\n \t\t\t  $(foreach FPARCH, $(v8_fps), \\\n \t\t\t    march?armv7+fp=march?$(ARCH)+$(FPARCH)))\n \n+MULTILIB_MATCHES     += $(foreach ARCH, $(all_v9_archs), \\\n+\t\t\t  march?armv7+fp=march?$(ARCH) \\\n+\t\t\t  $(foreach FPARCH, $(v9_fps), \\\n+\t\t\t    march?armv7+fp=march?$(ARCH)+$(FPARCH)))\n+\n MULTILIB_MATCHES     += $(foreach ARCH, armv7e-m armv8-m.mainline, \\\n \t\t\t  march?armv7+fp=march?$(ARCH)+fp.dp)\n "}, {"sha": "d789b86ee22460ae8b3d05ef50be8b56563c104e", "filename": "gcc/config/arm/t-multilib", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32ba7860ccaddd5219e6dae94a3d0653e124c9dd/gcc%2Fconfig%2Farm%2Ft-multilib", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32ba7860ccaddd5219e6dae94a3d0653e124c9dd/gcc%2Fconfig%2Farm%2Ft-multilib", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ft-multilib?ref=32ba7860ccaddd5219e6dae94a3d0653e124c9dd", "patch": "@@ -78,6 +78,8 @@ v8_4_a_simd_variants\t:= $(call all_feat_combs, simd fp16 crypto i8mm bf16)\n v8_5_a_simd_variants\t:= $(call all_feat_combs, simd fp16 crypto i8mm bf16)\n v8_6_a_simd_variants\t:= $(call all_feat_combs, simd fp16 crypto i8mm bf16)\n v8_r_nosimd_variants\t:= +crc\n+v9_a_nosimd_variants\t:= +crc\n+v9_a_simd_variants\t:= $(call all_feat_combs, simd fp16 crypto i8mm bf16)\n \n ifneq (,$(HAS_APROFILE))\n include $(srcdir)/config/arm/t-aprofile\n@@ -202,6 +204,16 @@ MULTILIB_MATCHES\t+= march?armv7=march?armv8.6-a\n MULTILIB_MATCHES\t+= $(foreach ARCH, $(v8_6_a_simd_variants), \\\n \t\t\t     march?armv7+fp=march?armv8.6-a$(ARCH))\n \n+# Armv9\n+MULTILIB_MATCHES\t+= march?armv7=march?armv9-a\n+MULTILIB_MATCHES\t+= $(foreach ARCH, $(v9_a_nosimd_variants), \\\n+\t\t\t     march?armv7=march?armv9-a$(ARCH))\n+\n+# Armv9 with SIMD\n+MULTILIB_MATCHES\t+= march?armv7+fp=march?armv9-a+crc+simd \\\n+\t\t\t   $(foreach ARCH, $(v9_a_simd_variants), \\\n+\t\t\t     march?armv7+fp=march?armv9-a$(ARCH) \\\n+\t\t\t     march?armv7+fp=march?armv9-a+crc$(ARCH))\n endif\t\t# Not APROFILE.\n \n # Use Thumb libraries for everything."}, {"sha": "95732c3fb25e8625f734ab91ce75bde8f6a348d8", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32ba7860ccaddd5219e6dae94a3d0653e124c9dd/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32ba7860ccaddd5219e6dae94a3d0653e124c9dd/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=32ba7860ccaddd5219e6dae94a3d0653e124c9dd", "patch": "@@ -20119,6 +20119,7 @@ Permissible names are:\n @samp{armv7-m}, @samp{armv7e-m},\n @samp{armv8-m.base}, @samp{armv8-m.main},\n @samp{armv8.1-m.main},\n+@samp{armv9-a},\n @samp{iwmmxt} and @samp{iwmmxt2}.\n \n Additionally, the following architectures, which lack support for the"}, {"sha": "e3f06c31690d1a027e19ef7a789f6c29ee781f3d", "filename": "gcc/testsuite/gcc.target/arm/multilib.exp", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32ba7860ccaddd5219e6dae94a3d0653e124c9dd/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmultilib.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32ba7860ccaddd5219e6dae94a3d0653e124c9dd/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmultilib.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmultilib.exp?ref=32ba7860ccaddd5219e6dae94a3d0653e124c9dd", "patch": "@@ -135,6 +135,14 @@ if {[multilib_config \"aprofile\"] } {\n \t{-march=armv8.6-a+simd+fp16 -mfloat-abi=softfp} \"thumb/v8-a+simd/softfp\"\n \t{-march=armv8.6-a+simd+fp16+nofp -mfloat-abi=softfp} \"thumb/v8-a/nofp\"\n \t{-march=armv8.6-a+simd+nofp+fp16 -mfloat-abi=softfp} \"thumb/v8-a+simd/softfp\"\n+\t{-march=armv9-a+crypto -mfloat-abi=soft} \"thumb/v9-a/nofp\"\n+\t{-march=armv9-a+simd+crypto -mfloat-abi=softfp} \"thumb/v9-a+simd/softfp\"\n+\t{-march=armv9-a+simd+crypto+nofp -mfloat-abi=softfp} \"thumb/v9-a/nofp\"\n+\t{-march=armv9-a+simd+nofp+crypto -mfloat-abi=softfp} \"thumb/v9-a+simd/softfp\"\n+\t{-march=armv9-a+fp16 -mfloat-abi=soft} \"thumb/v9-a/nofp\"\n+\t{-march=armv9-a+simd+fp16 -mfloat-abi=softfp} \"thumb/v9-a+simd/softfp\"\n+\t{-march=armv9-a+simd+fp16+nofp -mfloat-abi=softfp} \"thumb/v9-a/nofp\"\n+\t{-march=armv9-a+simd+nofp+fp16 -mfloat-abi=softfp} \"thumb/v9-a+simd/softfp\"\n \t{-mcpu=cortex-a53+crypto -mfloat-abi=hard} \"thumb/v8-a+simd/hard\"\n \t{-mcpu=cortex-a53+nofp -mfloat-abi=softfp} \"thumb/v8-a/nofp\"\n \t{-march=armv8-a+crc -mfloat-abi=hard -mfpu=vfp} \"thumb/v8-a+simd/hard\""}, {"sha": "8cbda192fe0fae59ea208ee43696b4d22c43e61e", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32ba7860ccaddd5219e6dae94a3d0653e124c9dd/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32ba7860ccaddd5219e6dae94a3d0653e124c9dd/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=32ba7860ccaddd5219e6dae94a3d0653e124c9dd", "patch": "@@ -4848,7 +4848,8 @@ foreach { armfunc armflag armdefs } {\n \tv8m_base \"-march=armv8-m.base -mthumb -mfloat-abi=soft\"\n \t\t__ARM_ARCH_8M_BASE__\n \tv8m_main \"-march=armv8-m.main -mthumb\" __ARM_ARCH_8M_MAIN__\n-\tv8_1m_main \"-march=armv8.1-m.main -mthumb\" __ARM_ARCH_8M_MAIN__ } {\n+\tv8_1m_main \"-march=armv8.1-m.main -mthumb\" __ARM_ARCH_8M_MAIN__\n+\tv9a \"-march=armv9-a\" __ARM_ARCH_9A__ } {\n     eval [string map [list FUNC $armfunc FLAG $armflag DEFS $armdefs ] {\n \tproc check_effective_target_arm_arch_FUNC_ok { } {\n \t    return [check_no_compiler_messages arm_arch_FUNC_ok assembly {"}]}