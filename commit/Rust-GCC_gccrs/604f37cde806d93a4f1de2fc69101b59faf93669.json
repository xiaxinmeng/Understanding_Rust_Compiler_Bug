{"sha": "604f37cde806d93a4f1de2fc69101b59faf93669", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjA0ZjM3Y2RlODA2ZDkzYTRmMWRlMmZjNjkxMDFiNTlmYWY5MzY2OQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2017-04-15T20:07:47Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2017-04-15T20:07:47Z"}, "message": "pr54669.c: Fix dg-do directive.\n\n\t* gcc.dg/pr54669.c: Fix dg-do directive.\n\t* gcc.dg/pr78582.c: Ditto.\n\t* gcc.dg/pr80020.c: Ditto.\n\t* gcc.dg/torture/pr57993-2.cpp: Ditto.\n\t* gcc.dg/tree-ssa/builtin-sprintf-3.c: Ditto.\n\t* gcc.dg/tree-ssa/builtin-sprintf-4.c: Ditto.\n\t* gcc.dg/tree-ssa/builtin-sprintf-5.c: Ditto.\n\t* gcc.dg/tree-ssa/builtin-sprintf-6.c: Ditto.\n\t* gcc.dg/tree-ssa/builtin-sprintf-warn-5.c: Ditto.\n\t* gcc.dg/tree-ssa/pr79327-2.c: Ditto.\n\t* gcc.dg/tree-ssa/pr79352.c: Ditto.\n\t* gcc.dg/tree-ssa/pr79376.c: Ditto.\n\t* gcc.dg/tree-ssa/pr79691.c: Ditto.\n\nFrom-SVN: r246941", "tree": {"sha": "a52b3ee0085b3de76c3ef254a6b20f87de1003cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a52b3ee0085b3de76c3ef254a6b20f87de1003cf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/604f37cde806d93a4f1de2fc69101b59faf93669", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/604f37cde806d93a4f1de2fc69101b59faf93669", "html_url": "https://github.com/Rust-GCC/gccrs/commit/604f37cde806d93a4f1de2fc69101b59faf93669", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/604f37cde806d93a4f1de2fc69101b59faf93669/comments", "author": null, "committer": null, "parents": [{"sha": "35cfdb17fa9921dfadc60ff8a87ce9f76b9611ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35cfdb17fa9921dfadc60ff8a87ce9f76b9611ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35cfdb17fa9921dfadc60ff8a87ce9f76b9611ed"}], "stats": {"total": 45, "additions": 30, "deletions": 15}, "files": [{"sha": "619e17e75e68edfd3937a85317f49783591f063d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/604f37cde806d93a4f1de2fc69101b59faf93669/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/604f37cde806d93a4f1de2fc69101b59faf93669/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=604f37cde806d93a4f1de2fc69101b59faf93669", "patch": "@@ -1,6 +1,22 @@\n+2017-04-15  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* gcc.dg/pr54669.c: Fix dg-do directive.\n+\t* gcc.dg/pr78582.c: Ditto.\n+\t* gcc.dg/pr80020.c: Ditto.\n+\t* gcc.dg/torture/pr57993-2.cpp: Ditto.\n+\t* gcc.dg/tree-ssa/builtin-sprintf-3.c: Ditto.\n+\t* gcc.dg/tree-ssa/builtin-sprintf-4.c: Ditto.\n+\t* gcc.dg/tree-ssa/builtin-sprintf-5.c: Ditto.\n+\t* gcc.dg/tree-ssa/builtin-sprintf-6.c: Ditto.\n+\t* gcc.dg/tree-ssa/builtin-sprintf-warn-5.c: Ditto.\n+\t* gcc.dg/tree-ssa/pr79327-2.c: Ditto.\n+\t* gcc.dg/tree-ssa/pr79352.c: Ditto.\n+\t* gcc.dg/tree-ssa/pr79376.c: Ditto.\n+\t* gcc.dg/tree-ssa/pr79691.c: Ditto.\n+\n 2017-04-15  Dominique d'Humieres  <dominiq@lps.ens.fr>\n \n-\t* gfortran.dg/deferred_character_3.f90: Fix dg directive.\n+\t* gfortran.dg/deferred_character_3.f90: Fix dg-do directive.\n \t* gfortran.dg/generic_29.f90: Likewise.\n \t* gfortran.dg/goacc/multi-clause.f90: Likewise.\n \t* gfortran.dg/pr41922.f90: Likewise."}, {"sha": "b68c0476a4953d20b07b5d8f21eda6aaee2269dd", "filename": "gcc/testsuite/gcc.dg/pr54669.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/604f37cde806d93a4f1de2fc69101b59faf93669/gcc%2Ftestsuite%2Fgcc.dg%2Fpr54669.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/604f37cde806d93a4f1de2fc69101b59faf93669/gcc%2Ftestsuite%2Fgcc.dg%2Fpr54669.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr54669.c?ref=604f37cde806d93a4f1de2fc69101b59faf93669", "patch": "@@ -1,7 +1,7 @@\n /* PR tree-optimization/54669 */\n /* Testcase by Zdenek Sojka <zsojka@seznam.cz> */\n \n-/* { dg-compile } */\n+/* { dg-do compile } */\n /* { dg-options \"-O2 -fexceptions -fnon-call-exceptions\" } */\n \n int a[10];"}, {"sha": "51e3a1f09ed4007b748f3a48e2e6b7389bc641a1", "filename": "gcc/testsuite/gcc.dg/pr78582.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/604f37cde806d93a4f1de2fc69101b59faf93669/gcc%2Ftestsuite%2Fgcc.dg%2Fpr78582.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/604f37cde806d93a4f1de2fc69101b59faf93669/gcc%2Ftestsuite%2Fgcc.dg%2Fpr78582.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr78582.c?ref=604f37cde806d93a4f1de2fc69101b59faf93669", "patch": "@@ -1,6 +1,6 @@\n /* PR target/78582. */\n /* { dg-options \"-fprofile-generate\" } */\n-/* { dg-compile } */\n+/* { dg-do compile } */\n \n #include <setjmp.h>\n "}, {"sha": "4ab1aa8df2f5a8bebf6ac964d4bbdea53de6da94", "filename": "gcc/testsuite/gcc.dg/pr80020.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/604f37cde806d93a4f1de2fc69101b59faf93669/gcc%2Ftestsuite%2Fgcc.dg%2Fpr80020.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/604f37cde806d93a4f1de2fc69101b59faf93669/gcc%2Ftestsuite%2Fgcc.dg%2Fpr80020.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr80020.c?ref=604f37cde806d93a4f1de2fc69101b59faf93669", "patch": "@@ -1,5 +1,5 @@\n /* PR middle-end/80020 - gcc confused about aligned_alloc argument order\n-   { dg-compile }\n+   { dg-do compile }\n    { dg-options \"-O2 -Wall -fdump-tree-optimized\" } */\n \n void sink (void*);"}, {"sha": "b7bffa89e413195c4ecba83dbc921ffb8fc0d9f2", "filename": "gcc/testsuite/gcc.dg/torture/pr57993-2.cpp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/604f37cde806d93a4f1de2fc69101b59faf93669/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr57993-2.cpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/604f37cde806d93a4f1de2fc69101b59faf93669/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr57993-2.cpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr57993-2.cpp?ref=604f37cde806d93a4f1de2fc69101b59faf93669", "patch": "@@ -1,5 +1,5 @@\n /* This ICEd due to an incomplete fix for PR57993.  */\n-/* { dg-compile } */\n+/* { dg-do compile } */\n \n extern \"C\"\n {"}, {"sha": "fae2a1b73ead288cc2dcb1eb759cfcfa13f0d35b", "filename": "gcc/testsuite/gcc.dg/tree-ssa/builtin-sprintf-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/604f37cde806d93a4f1de2fc69101b59faf93669/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbuiltin-sprintf-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/604f37cde806d93a4f1de2fc69101b59faf93669/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbuiltin-sprintf-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbuiltin-sprintf-3.c?ref=604f37cde806d93a4f1de2fc69101b59faf93669", "patch": "@@ -2,7 +2,7 @@\n    Test case derived from the one submitted in the bug.  It verifies\n    that the sprintf return value (or value range) optimization is not\n    performed for an unknown string.  */\n-/* { dg-compile } */\n+/* { dg-do compile } */\n /* { dg-options \"-O2 -Wall -Werror -fdump-tree-optimized -fprintf-return-value\" } */\n \n #define INT_MAX   __INT_MAX__"}, {"sha": "a741550b44fdec154ba1c24ce10eba711edd9257", "filename": "gcc/testsuite/gcc.dg/tree-ssa/builtin-sprintf-4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/604f37cde806d93a4f1de2fc69101b59faf93669/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbuiltin-sprintf-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/604f37cde806d93a4f1de2fc69101b59faf93669/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbuiltin-sprintf-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbuiltin-sprintf-4.c?ref=604f37cde806d93a4f1de2fc69101b59faf93669", "patch": "@@ -2,7 +2,7 @@\n    gimple-ssa-sprintf.c:214\n    Disable warnings to exercise code paths through the pass that may\n    not be exercised when the -Wformat-overflow option is in effect.  */\n-/* { dg-compile }\n+/* { dg-do compile }\n    { dg-options \"-O2 -fdump-tree-optimized -w\" } */\n \n "}, {"sha": "7870f555080a2b03c7b3ea35a0cd4a990e94db86", "filename": "gcc/testsuite/gcc.dg/tree-ssa/builtin-sprintf-5.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/604f37cde806d93a4f1de2fc69101b59faf93669/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbuiltin-sprintf-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/604f37cde806d93a4f1de2fc69101b59faf93669/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbuiltin-sprintf-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbuiltin-sprintf-5.c?ref=604f37cde806d93a4f1de2fc69101b59faf93669", "patch": "@@ -1,6 +1,6 @@\n /* PR middle-end/78476 - snprintf(0, 0, ...) with known arguments not\n    optimized away\n-   { dg-compile }\n+   { dg-do compile }\n    { dg-options \"-O2 -fdump-tree-optimized\" }\n    { dg-require-effective-target int32plus } */\n "}, {"sha": "f9c8687efa2a51b0d82765f5706334e14c59977c", "filename": "gcc/testsuite/gcc.dg/tree-ssa/builtin-sprintf-6.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/604f37cde806d93a4f1de2fc69101b59faf93669/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbuiltin-sprintf-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/604f37cde806d93a4f1de2fc69101b59faf93669/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbuiltin-sprintf-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbuiltin-sprintf-6.c?ref=604f37cde806d93a4f1de2fc69101b59faf93669", "patch": "@@ -4,7 +4,7 @@\n    A negative test complementing builtin-sprintf-5.c to verify that calls\n    to the function that do not return a constant are not optimized away.\n    Test also verifies that unknown directives prevent the optimization.\n-   { dg-compile }\n+   { dg-do compile }\n    { dg-options \"-O2 -Wformat -fdump-tree-optimized\" }\n    { dg-require-effective-target int32plus } */\n "}, {"sha": "2a6739ec2f330dbc8f6075145cec43310f04e01d", "filename": "gcc/testsuite/gcc.dg/tree-ssa/builtin-sprintf-warn-5.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/604f37cde806d93a4f1de2fc69101b59faf93669/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbuiltin-sprintf-warn-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/604f37cde806d93a4f1de2fc69101b59faf93669/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbuiltin-sprintf-warn-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fbuiltin-sprintf-warn-5.c?ref=604f37cde806d93a4f1de2fc69101b59faf93669", "patch": "@@ -1,8 +1,7 @@\n /* PR bootstrap/77676 - powerpc64 and powerpc64le stage2 bootstrap fail\n    Test case from comment 6 on the bug.  */\n-/* { dg-compile } */\n+/* { dg-do compile } */\n /* { dg-options \"-Wall -Werror\" } */\n-/* { dg-additional-options \"-m32\" { target { i?86-*-* x86_64-*-* } } } */\n \n struct A\n {"}, {"sha": "4c9d60625c02cb50e2937415e36dc4df16021bff", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr79327-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/604f37cde806d93a4f1de2fc69101b59faf93669/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr79327-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/604f37cde806d93a4f1de2fc69101b59faf93669/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr79327-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr79327-2.c?ref=604f37cde806d93a4f1de2fc69101b59faf93669", "patch": "@@ -1,5 +1,5 @@\n /* PR tree-optimization/79327 - wrong code at -O2 and -fprintf-return-value\n-   { dg-compile }\n+   { dg-do compile }\n    { dg-options \"-O2 -fdump-tree-optimized\" } */\n \n #define CAT(s, n)   s ## n"}, {"sha": "485e2d64cb3e9299da6a9c1b21166376af65d4e5", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr79352.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/604f37cde806d93a4f1de2fc69101b59faf93669/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr79352.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/604f37cde806d93a4f1de2fc69101b59faf93669/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr79352.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr79352.c?ref=604f37cde806d93a4f1de2fc69101b59faf93669", "patch": "@@ -1,6 +1,6 @@\n /* PR tree-optimization/79352 - -fprintf-return-value doesn't handle\n    flexible-like array members properly\n-   { dg-compile }\n+   { dg-do compile }\n    { dg-options \"-O2 -fdump-tree-optimized\" } */\n \n struct A { int i; char a1[1]; };"}, {"sha": "01ecd1782119b6214e79dcf3380639888eb60c93", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr79376.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/604f37cde806d93a4f1de2fc69101b59faf93669/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr79376.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/604f37cde806d93a4f1de2fc69101b59faf93669/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr79376.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr79376.c?ref=604f37cde806d93a4f1de2fc69101b59faf93669", "patch": "@@ -1,6 +1,6 @@\n /* PR tree-optimization/79376 - wrong lower bound with %s and non-constant\n    strings in -Wformat-overflow\n-   { dg-compile }\n+   { dg-do compile }\n    { dg-options \"-O2 -fdump-tree-optimized\" } */\n \n #define CAT(s, n)   s ## n"}, {"sha": "bf889318c063da46347e9c72e197d7f9caa1a849", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr79691.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/604f37cde806d93a4f1de2fc69101b59faf93669/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr79691.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/604f37cde806d93a4f1de2fc69101b59faf93669/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr79691.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr79691.c?ref=604f37cde806d93a4f1de2fc69101b59faf93669", "patch": "@@ -1,7 +1,7 @@\n /* PR tree-optimization/79691 - -Wformat-truncation suppressed by\n    (and only by) -Og\n \n-   { dg-compile }\n+   { dg-do compile }\n    { dg-options \"-Og -Wall -fdump-tree-optimized\" } */\n \n char d[2];"}]}