{"sha": "4d1065ed1b3ec80edaa39bcb1b302b7cc0d1f2cb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGQxMDY1ZWQxYjNlYzgwZWRhYTM5YmNiMWIzMDJiN2NjMGQxZjJjYg==", "commit": {"author": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1995-02-13T22:08:43Z"}, "committer": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1995-02-13T22:08:43Z"}, "message": "varasm.c (function_section): New function.\n\n\t* varasm.c (function_section): New function.\n\t(assemble_start_function): Call it.\n\t* output.h (function_section): Declare it.\n\t* final.c (final_scan_insn): Call function_section instead of\n\ttext_section.\n\t* dwarfout.c (dwarfout_begin_block): Likewise.\n\t(dwarfout_end_block): Likewise.\n\t(dwarfout_label): Likewise.\n\t(dwarfout_begin_function): Likewise.\n\t(dwarfout_end_function): Likewise.\n\t(dwarfout_line): Likewise.\n\nFrom-SVN: r8942", "tree": {"sha": "7bd2f95374619b6a13422a2c5117a19e9e8daf02", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7bd2f95374619b6a13422a2c5117a19e9e8daf02"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4d1065ed1b3ec80edaa39bcb1b302b7cc0d1f2cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d1065ed1b3ec80edaa39bcb1b302b7cc0d1f2cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d1065ed1b3ec80edaa39bcb1b302b7cc0d1f2cb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d1065ed1b3ec80edaa39bcb1b302b7cc0d1f2cb/comments", "author": null, "committer": null, "parents": [{"sha": "2c62c124a78fee391c2742578af8faf233ecbb4f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c62c124a78fee391c2742578af8faf233ecbb4f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c62c124a78fee391c2742578af8faf233ecbb4f"}], "stats": {"total": 41, "additions": 29, "deletions": 12}, "files": [{"sha": "3ebff0108f197b5c8f7fce430811225b2f64def7", "filename": "gcc/dwarfout.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d1065ed1b3ec80edaa39bcb1b302b7cc0d1f2cb/gcc%2Fdwarfout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d1065ed1b3ec80edaa39bcb1b302b7cc0d1f2cb/gcc%2Fdwarfout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarfout.c?ref=4d1065ed1b3ec80edaa39bcb1b302b7cc0d1f2cb", "patch": "@@ -4923,7 +4923,7 @@ dwarfout_begin_block (blocknum)\n {\n   char label[MAX_ARTIFICIAL_LABEL_BYTES];\n \n-  text_section ();\n+  function_section (current_function_decl);\n   sprintf (label, BLOCK_BEGIN_LABEL_FMT, blocknum);\n   ASM_OUTPUT_LABEL (asm_out_file, label);\n }\n@@ -4937,7 +4937,7 @@ dwarfout_end_block (blocknum)\n {\n   char label[MAX_ARTIFICIAL_LABEL_BYTES];\n \n-  text_section ();\n+  function_section (current_function_decl);\n   sprintf (label, BLOCK_END_LABEL_FMT, blocknum);\n   ASM_OUTPUT_LABEL (asm_out_file, label);\n }\n@@ -4953,7 +4953,7 @@ dwarfout_label (insn)\n     {\n       char label[MAX_ARTIFICIAL_LABEL_BYTES];\n \n-      text_section ();\n+      function_section (current_function_decl);\n       sprintf (label, INSN_LABEL_FMT, current_funcdef_number,\n \t\t\t\t      (unsigned) INSN_UID (insn));\n       ASM_OUTPUT_LABEL (asm_out_file, label);\n@@ -4969,7 +4969,7 @@ dwarfout_begin_function ()\n {\n   char label[MAX_ARTIFICIAL_LABEL_BYTES];\n \n-  text_section ();\n+  function_section (current_function_decl);\n   sprintf (label, BODY_BEGIN_LABEL_FMT, current_funcdef_number);\n   ASM_OUTPUT_LABEL (asm_out_file, label);\n }\n@@ -4982,7 +4982,7 @@ dwarfout_end_function ()\n {\n   char label[MAX_ARTIFICIAL_LABEL_BYTES];\n \n-  text_section ();\n+  function_section (current_function_decl);\n   sprintf (label, BODY_END_LABEL_FMT, current_funcdef_number);\n   ASM_OUTPUT_LABEL (asm_out_file, label);\n }\n@@ -5156,7 +5156,7 @@ dwarfout_line (filename, line)\n       static unsigned prev_file_entry_num = (unsigned) -1;\n       register unsigned this_file_entry_num = lookup_filename (filename);\n \n-      text_section ();\n+      function_section (current_function_decl);\n       sprintf (label, LINE_CODE_LABEL_FMT, ++last_line_entry_num);\n       ASM_OUTPUT_LABEL (asm_out_file, label);\n "}, {"sha": "c086dd09bbaf1f88d55ed3e24a0d937b56ddc3eb", "filename": "gcc/final.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d1065ed1b3ec80edaa39bcb1b302b7cc0d1f2cb/gcc%2Ffinal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d1065ed1b3ec80edaa39bcb1b302b7cc0d1f2cb/gcc%2Ffinal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffinal.c?ref=4d1065ed1b3ec80edaa39bcb1b302b7cc0d1f2cb", "patch": "@@ -1511,7 +1511,7 @@ final_scan_insn (insn, file, optimize, prescan, nopeepholes)\n \t\t\t\t\t    / BITS_PER_UNIT));\n #endif /* READONLY_DATA_SECTION */\n #else /* JUMP_TABLES_IN_TEXT_SECTION */\n-\t      text_section ();\n+\t      function_section (current_function_decl);\n #endif /* JUMP_TABLES_IN_TEXT_SECTION */\n #ifdef ASM_OUTPUT_CASE_LABEL\n \t      ASM_OUTPUT_CASE_LABEL (file, \"L\", CODE_LABEL_NUMBER (insn),\n@@ -1600,7 +1600,7 @@ final_scan_insn (insn, file, optimize, prescan, nopeepholes)\n \t\t\t\t insn);\n #endif\n \n-\t    text_section ();\n+\t    function_section (current_function_decl);\n \n \t    break;\n \t  }"}, {"sha": "c1a8ae67e0d7396e4512c05bb4d57c4bf720fd67", "filename": "gcc/output.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d1065ed1b3ec80edaa39bcb1b302b7cc0d1f2cb/gcc%2Foutput.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d1065ed1b3ec80edaa39bcb1b302b7cc0d1f2cb/gcc%2Foutput.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foutput.h?ref=4d1065ed1b3ec80edaa39bcb1b302b7cc0d1f2cb", "patch": "@@ -136,6 +136,9 @@ extern int in_text_section\t\tPROTO((void));\n    If NAME is NULL, get the name from DECL.  */\n extern void named_section\t\tPROTO((tree, char *));\n \n+/* Tell assembler to switch to the section for function DECL.  */\n+extern void function_section\t\tPROTO((tree));\n+\n /* Create the rtl to represent a function, for a function definition.\n    DECL is a FUNCTION_DECL node which describes which function.\n    The rtl is stored into DECL.  */"}, {"sha": "9091023ff4cd16389c067b7373dbd29a3814f29c", "filename": "gcc/varasm.c", "status": "modified", "additions": 18, "deletions": 4, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d1065ed1b3ec80edaa39bcb1b302b7cc0d1f2cb/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d1065ed1b3ec80edaa39bcb1b302b7cc0d1f2cb/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=4d1065ed1b3ec80edaa39bcb1b302b7cc0d1f2cb", "patch": "@@ -244,6 +244,23 @@ named_section (decl, name)\n #endif\n     }\n }\n+\n+/* Switch to the section for function DECL.\n+\n+   If DECL is NULL_TREE, switch to the text section.\n+   ??? It's not clear that we will ever be passed NULL_TREE, but it's\n+   safer to handle it.  */\n+\n+void\n+function_section (decl)\n+     tree decl;\n+{\n+  if (decl != NULL_TREE\n+      && DECL_SECTION_NAME (decl) != NULL_TREE)\n+    named_section (decl, (char *) 0);\n+ else\n+   text_section ();\n+}\n \f\n /* Create the rtl to represent a function, for a function definition.\n    DECL is a FUNCTION_DECL node which describes which function.\n@@ -733,10 +750,7 @@ assemble_start_function (decl, fnname)\n \n   output_constant_pool (fnname, decl);\n \n-  if (IN_NAMED_SECTION (decl))\n-    named_section (decl, NULL);\n-  else\n-    text_section ();\n+  function_section (decl);\n \n   /* Tell assembler to move to target machine's alignment for functions.  */\n   align = floor_log2 (FUNCTION_BOUNDARY / BITS_PER_UNIT);"}]}