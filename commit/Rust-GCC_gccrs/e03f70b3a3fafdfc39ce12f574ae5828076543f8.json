{"sha": "e03f70b3a3fafdfc39ce12f574ae5828076543f8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTAzZjcwYjNhM2ZhZmRmYzM5Y2UxMmY1NzRhZTU4MjgwNzY1NDNmOA==", "commit": {"author": {"name": "Phil Edwards", "email": "pme@gcc.gnu.org", "date": "2001-03-25T02:28:07Z"}, "committer": {"name": "Phil Edwards", "email": "pme@gcc.gnu.org", "date": "2001-03-25T02:28:07Z"}, "message": "Makefile.am: New targets, doxygen and doxygen-maint.\n\n2001-03-24  Phil Edwards  <pme@sources.redhat.com>\n\n\t* Makefile.am:  New targets, doxygen and doxygen-maint.\n\t* Makefile.in:  Regenerated.\n\t* docs/doxygen/run_doxygen:  Finally implemented.\n\t* docs/doxygen/maint.cfg.in:  New file.\n\t* docs/doxygen/user.cfg.in:  New file.\n\nFrom-SVN: r40823", "tree": {"sha": "79784fe3a42e546d027a0afe7c876394d8e3910b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/79784fe3a42e546d027a0afe7c876394d8e3910b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e03f70b3a3fafdfc39ce12f574ae5828076543f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e03f70b3a3fafdfc39ce12f574ae5828076543f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e03f70b3a3fafdfc39ce12f574ae5828076543f8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e03f70b3a3fafdfc39ce12f574ae5828076543f8/comments", "author": null, "committer": null, "parents": [{"sha": "c21b6f8706e9a158e235514557dc2282e8965b37", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c21b6f8706e9a158e235514557dc2282e8965b37", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c21b6f8706e9a158e235514557dc2282e8965b37"}], "stats": {"total": 1623, "additions": 1621, "deletions": 2}, "files": [{"sha": "9152873b721e9142ca70f72b48253e13bd45a779", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e03f70b3a3fafdfc39ce12f574ae5828076543f8/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e03f70b3a3fafdfc39ce12f574ae5828076543f8/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=e03f70b3a3fafdfc39ce12f574ae5828076543f8", "patch": "@@ -1,3 +1,11 @@\n+2001-03-24  Phil Edwards  <pme@sources.redhat.com>\n+\n+\t* Makefile.am:  New targets, doxygen and doxygen-maint.\n+\t* Makefile.in:  Regenerated.\n+\t* docs/doxygen/run_doxygen:  Finally implemented.\n+\t* docs/doxygen/maint.cfg.in:  New file.\n+\t* docs/doxygen/user.cfg.in:  New file.\n+\n 2001-03-24  Phil Edwards  <pme@sources.redhat.com>\n \n \t* acinclude.m4 (GLIBCPP_CHECK_COMPILER_FEATURES):  Update comment."}, {"sha": "9681725d8cb0d4ca312ed33d07ac335e34eeaf63", "filename": "libstdc++-v3/Makefile.am", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e03f70b3a3fafdfc39ce12f574ae5828076543f8/libstdc%2B%2B-v3%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e03f70b3a3fafdfc39ce12f574ae5828076543f8/libstdc%2B%2B-v3%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FMakefile.am?ref=e03f70b3a3fafdfc39ce12f574ae5828076543f8", "patch": "@@ -44,6 +44,20 @@ check-install: $(top_builddir)/mkcheck\n \t  cd testsuite; \\\n \t  $${builddir}/mkcheck 1 $${builddir} $${srcdir} $(prefix))\n \n+# These two rules seem messy.\n+doxygen:\n+\t-(srcdir=`cd ${top_srcdir}; pwd`; \\\n+\t  outdir=`pwd`; \\\n+\t  ${srcdir}/docs/doxygen/run_doxygen --mode=user $${srcdir} $${outdir})\n+\n+doxygen-maint:\n+\t-(srcdir=`cd ${top_srcdir}; pwd`; \\\n+\t  outdir=`pwd`; \\\n+\t  ${srcdir}/docs/doxygen/run_doxygen --mode=maint $${srcdir} $${outdir})\n+\n+.PHONY: doxygen doxygen-maint\n+\n+\n # Multilib support.\n MAKEOVERRIDES=\n "}, {"sha": "ecaede4d8f11295a8ec2589cbf3ae7b4167d8175", "filename": "libstdc++-v3/Makefile.in", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e03f70b3a3fafdfc39ce12f574ae5828076543f8/libstdc%2B%2B-v3%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e03f70b3a3fafdfc39ce12f574ae5828076543f8/libstdc%2B%2B-v3%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FMakefile.in?ref=e03f70b3a3fafdfc39ce12f574ae5828076543f8", "patch": "@@ -464,6 +464,19 @@ check-install: $(top_builddir)/mkcheck\n \t  cd testsuite; \\\n \t  $${builddir}/mkcheck 1 $${builddir} $${srcdir} $(prefix))\n \n+# These two rules seem messy.\n+doxygen:\n+\t-(srcdir=`cd ${top_srcdir}; pwd`; \\\n+\t  outdir=`pwd`; \\\n+\t  ${srcdir}/docs/doxygen/run_doxygen --mode=user $${srcdir} $${outdir})\n+\n+doxygen-maint:\n+\t-(srcdir=`cd ${top_srcdir}; pwd`; \\\n+\t  outdir=`pwd`; \\\n+\t  ${srcdir}/docs/doxygen/run_doxygen --mode=maint $${srcdir} $${outdir})\n+\n+.PHONY: doxygen doxygen-maint\n+\n # Multilib Makefile bits.\n .PHONY: all-multi mostlyclean-multi clean-multi distclean-multi \\\n \tmaintainer-clean-multi"}, {"sha": "10c43d4132059ee6969a19c3ac8019329273caa9", "filename": "libstdc++-v3/docs/doxygen/maint.cfg.in", "status": "added", "additions": 740, "deletions": 0, "changes": 740, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e03f70b3a3fafdfc39ce12f574ae5828076543f8/libstdc%2B%2B-v3%2Fdocs%2Fdoxygen%2Fmaint.cfg.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e03f70b3a3fafdfc39ce12f574ae5828076543f8/libstdc%2B%2B-v3%2Fdocs%2Fdoxygen%2Fmaint.cfg.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fdoxygen%2Fmaint.cfg.in?ref=e03f70b3a3fafdfc39ce12f574ae5828076543f8", "patch": "@@ -0,0 +1,740 @@\n+# Doxyfile 1.2.4\n+\n+# This file describes the settings to be used by doxygen for a project\n+#\n+# All text after a hash (#) is considered a comment and will be ignored\n+# The format is:\n+#       TAG = value [value, ...]\n+# For lists items can also be appended using:\n+#       TAG += value [value, ...]\n+# Values that contain spaces should be placed between quotes (\" \")\n+\n+#---------------------------------------------------------------------------\n+# General configuration options\n+#---------------------------------------------------------------------------\n+\n+# The PROJECT_NAME tag is a single word (or a sequence of words surrounded \n+# by quotes) that should identify the project. \n+\n+PROJECT_NAME           = \"libstdc++\"\n+\n+# The PROJECT_NUMBER tag can be used to enter a project or revision number. \n+# This could be handy for archiving the generated documentation or \n+# if some version control system is used.\n+\n+PROJECT_NUMBER         = 3\n+\n+# The OUTPUT_DIRECTORY tag is used to specify the (relative or absolute) \n+# base path where the generated documentation will be put. \n+# If a relative path is entered, it will be relative to the location \n+# where doxygen was started. If left blank the current directory will be used.\n+### Currently this is not really run through autoconf; it just looks that way.\n+OUTPUT_DIRECTORY       = @outdir@\n+\n+# The OUTPUT_LANGUAGE tag is used to specify the language in which all \n+# documentation generated by doxygen is written. Doxygen will use this \n+# information to generate all constant output in the proper language. \n+# The default language is English, other supported languages are: \n+# Dutch, French, Italian, Czech, Swedish, German, Finnish, Japanese, \n+# Korean, Hungarian, Norwegian, Spanish, Romanian, Russian, Croatian, \n+# Polish, Portuguese and Slovene.\n+\n+OUTPUT_LANGUAGE        = English\n+\n+# If the EXTRACT_ALL tag is set to YES doxygen will assume all entities in \n+# documentation are documented, even if no documentation was available. \n+# Private class members and static file members will be hidden unless \n+# the EXTRACT_PRIVATE and EXTRACT_STATIC tags are set to YES \n+\n+#EXTRACT_ALL            = NO\n+EXTRACT_ALL            = YES\n+\n+# If the EXTRACT_PRIVATE tag is set to YES all private members of a class \n+# will be included in the documentation. \n+\n+EXTRACT_PRIVATE        = YES\n+\n+# If the EXTRACT_STATIC tag is set to YES all static members of a file \n+# will be included in the documentation. \n+\n+EXTRACT_STATIC         = YES\n+\n+# If the HIDE_UNDOC_MEMBERS tag is set to YES, Doxygen will hide all \n+# undocumented members of documented classes, files or namespaces. \n+# If set to NO (the default) these members will be included in the \n+# various overviews, but no documentation section is generated. \n+# This option has no effect if EXTRACT_ALL is enabled. \n+\n+HIDE_UNDOC_MEMBERS     = NO\n+\n+# If the HIDE_UNDOC_CLASSES tag is set to YES, Doxygen will hide all \n+# undocumented classes that are normally visible in the class hierarchy. \n+# If set to NO (the default) these class will be included in the various \n+# overviews. This option has no effect if EXTRACT_ALL is enabled. \n+\n+HIDE_UNDOC_CLASSES     = NO\n+\n+# If the BRIEF_MEMBER_DESC tag is set to YES (the default) Doxygen will \n+# include brief member descriptions after the members that are listed in \n+# the file and class documentation (similar to JavaDoc). \n+# Set to NO to disable this. \n+\n+BRIEF_MEMBER_DESC      = NO\n+\n+# If the REPEAT_BRIEF tag is set to YES (the default) Doxygen will prepend \n+# the brief description of a member or function before the detailed description. \n+# Note: if both HIDE_UNDOC_MEMBERS and BRIEF_MEMBER_DESC are set to NO, the \n+# brief descriptions will be completely suppressed. \n+\n+REPEAT_BRIEF           = YES\n+\n+# If the ALWAYS_DETAILED_SEC and REPEAT_BRIEF tags are both set to YES then \n+# Doxygen will generate a detailed section even if there is only a brief \n+# description. \n+\n+ALWAYS_DETAILED_SEC    = NO\n+\n+# If the FULL_PATH_NAMES tag is set to YES then Doxygen will prepend the full \n+# path before files name in the file list and in the header files. If set \n+# to NO the shortest path that makes the file name unique will be used. \n+\n+FULL_PATH_NAMES        = NO\n+\n+# If the FULL_PATH_NAMES tag is set to YES then the STRIP_FROM_PATH tag \n+# can be used to strip a user defined part of the path. Stripping is \n+# only done if one of the specified strings matches the left-hand part of \n+# the path. It is allowed to use relative paths in the argument list.\n+\n+STRIP_FROM_PATH        = \n+\n+# The INTERNAL_DOCS tag determines if documentation \n+# that is typed after a \\internal command is included. If the tag is set \n+# to NO (the default) then the documentation will be excluded. \n+# Set it to YES to include the internal documentation. \n+\n+INTERNAL_DOCS          = NO\n+\n+# If the CLASS_DIAGRAMS tag is set to YES (the default) Doxygen will \n+# generate a class diagram (in Html and LaTeX) for classes with base or \n+# super classes. Setting the tag to NO turns the diagrams off. \n+\n+CLASS_DIAGRAMS         = NO\n+\n+# If the SOURCE_BROWSER tag is set to YES then a list of source files will \n+# be generated. Documented entities will be cross-referenced with these sources. \n+\n+SOURCE_BROWSER         = NO\n+\n+# Setting the INLINE_SOURCES tag to YES will include the body \n+# of functions and classes directly in the documentation. \n+\n+INLINE_SOURCES         = NO\n+\n+# Setting the STRIP_CODE_COMMENTS tag to YES (the default) will instruct \n+# doxygen to hide any special comment blocks from generated source code \n+# fragments. Normal C and C++ comments will always remain visible. \n+\n+STRIP_CODE_COMMENTS    = YES\n+\n+# If the CASE_SENSE_NAMES tag is set to NO then Doxygen will only generate \n+# file names in lower case letters. If set to YES upper case letters are also \n+# allowed. This is useful if you have classes or files whose names only differ \n+# in case and if your file system supports case sensitive file names. Windows \n+# users are adviced to set this option to NO.\n+\n+CASE_SENSE_NAMES       = YES\n+\n+# If the HIDE_SCOPE_NAMES tag is set to NO (the default) then Doxygen \n+# will show members with their full class and namespace scopes in the \n+# documentation. If set to YES the scope will be hidden. \n+\n+HIDE_SCOPE_NAMES       = NO\n+\n+# If the VERBATIM_HEADERS tag is set to YES (the default) then Doxygen \n+# will generate a verbatim copy of the header file for each class for \n+# which an include is specified. Set to NO to disable this. \n+\n+VERBATIM_HEADERS       = NO\n+\n+# If the SHOW_INCLUDE_FILES tag is set to YES (the default) then Doxygen \n+# will put list of the files that are included by a file in the documentation \n+# of that file. \n+\n+SHOW_INCLUDE_FILES     = YES\n+\n+# If the JAVADOC_AUTOBRIEF tag is set to YES then Doxygen \n+# will interpret the first line (until the first dot) of a JavaDoc-style \n+# comment as the brief description. If set to NO, the JavaDoc \n+# comments  will behave just like the Qt-style comments (thus requiring an \n+# explict @brief command for a brief description. \n+\n+JAVADOC_AUTOBRIEF      = NO\n+\n+# If the INHERIT_DOCS tag is set to YES (the default) then an undocumented \n+# member inherits the documentation from any documented member that it \n+# reimplements. \n+\n+INHERIT_DOCS           = YES\n+\n+# If the INLINE_INFO tag is set to YES (the default) then a tag [inline] \n+# is inserted in the documentation for inline members. \n+\n+INLINE_INFO            = YES\n+\n+# If the SORT_MEMBER_DOCS tag is set to YES (the default) then doxygen \n+# will sort the (detailed) documentation of file and class members \n+# alphabetically by member name. If set to NO the members will appear in \n+# declaration order. \n+\n+SORT_MEMBER_DOCS       = NO\n+\n+# If member grouping is used in the documentation and the DISTRIBUTE_GROUP_DOC \n+# tag is set to YES, then doxygen will reuse the documentation of the first \n+# member in the group (if any) for the other members of the group. By default \n+# all members of a group must be documented explicitly.\n+\n+#DISTRIBUTE_GROUP_DOC   = NO\n+\n+# The TAB_SIZE tag can be used to set the number of spaces in a tab. \n+# Doxygen uses this value to replace tabs by spaces in code fragments. \n+\n+TAB_SIZE               = 4\n+\n+# The ENABLE_SECTIONS tag can be used to enable conditional \n+# documentation sections, marked by \\if sectionname ... \\endif. \n+\n+ENABLED_SECTIONS       = \n+\n+# The GENERATE_TODOLIST tag can be used to enable (YES) or \n+# disable (NO) the todo list. This list is created by putting \\todo \n+# commands in the documentation.\n+\n+GENERATE_TODOLIST      = YES\n+\n+# The GENERATE_TESTLIST tag can be used to enable (YES) or \n+# disable (NO) the test list. This list is created by putting \\test \n+# commands in the documentation.\n+\n+GENERATE_TESTLIST      = YES\n+\n+# This tag can be used to specify a number of aliases that acts \n+# as commands in the documentation. An alias has the form \"name=value\". \n+# For example adding \"sideeffect=\\par Side Effects:\\n\" will allow you to \n+# put the command \\sideeffect (or @sideeffect) in the documentation, which \n+# will result in a user defined paragraph with heading \"Side Effects:\". \n+# You can put \\n's in the value part of an alias to insert newlines. \n+\n+#ALIASES                = \n+\n+#---------------------------------------------------------------------------\n+# configuration options related to warning and progress messages\n+#---------------------------------------------------------------------------\n+\n+# The QUIET tag can be used to turn on/off the messages that are generated \n+# by doxygen. Possible values are YES and NO. If left blank NO is used. \n+\n+QUIET                  = YES\n+\n+# The WARNINGS tag can be used to turn on/off the warning messages that are \n+# generated by doxygen. Possible values are YES and NO. If left blank \n+# NO is used. \n+\n+### pme  Turned off; apparently doxygen can't grok templates\n+WARNINGS               = NO\n+\n+# If WARN_IF_UNDOCUMENTED is set to YES, then doxygen will generate warnings \n+# for undocumented members. If EXTRACT_ALL is set to YES then this flag will \n+# automatically be disabled. \n+\n+WARN_IF_UNDOCUMENTED   = YES\n+\n+# The WARN_FORMAT tag determines the format of the warning messages that \n+# doxygen can produce. The string should contain the $file, $line, and $text \n+# tags, which will be replaced by the file and line number from which the \n+# warning originated and the warning text. \n+\n+WARN_FORMAT            = \"$file:$line: $text\"\n+\n+# The WARN_LOGFILE tag can be used to specify a file to which warning \n+# and error messages should be written. If left blank the output is written \n+# to stderr. \n+\n+#WARN_LOGFILE           = \n+\n+#---------------------------------------------------------------------------\n+# configuration options related to the input files\n+#---------------------------------------------------------------------------\n+\n+# The INPUT tag can be used to specify the files and/or directories that contain \n+# documented source files. You may enter file names like \"myfile.cpp\" or \n+# directories like \"/usr/src/myproject\". Separate the files or directories \n+# with spaces. \n+\n+INPUT                  = include src libmath libsupc++ libio config\n+\n+# If the value of the INPUT tag contains directories, you can use the \n+# FILE_PATTERNS tag to specify one or more wildcard pattern (like *.cpp \n+# and *.h) to filter out the source-files in the directories. If left \n+# blank all files are included. \n+\n+FILE_PATTERNS          = *.cc *.h c++config\n+\n+# The RECURSIVE tag can be used to turn specify whether or not subdirectories \n+# should be searched for input files as well. Possible values are YES and NO. \n+# If left blank NO is used. \n+\n+RECURSIVE              = YES\n+\n+# The EXCLUDE tag can be used to specify files and/or directories that should \n+# excluded from the INPUT source files. This way you can easily exclude a \n+# subdirectory from a directory tree whose root is specified with the INPUT tag. \n+EXCLUDE                = \n+\n+# If the value of the INPUT tag contains directories, you can use the \n+# EXCLUDE_PATTERNS tag to specify one or more wildcard patterns to exclude \n+# certain files from those directories. \n+\n+EXCLUDE_PATTERNS       = \n+\n+# The EXAMPLE_PATH tag can be used to specify one or more files or \n+# directories that contain example code fragments that are included (see \n+# the \\include command). \n+\n+EXAMPLE_PATH           = \n+\n+# If the value of the EXAMPLE_PATH tag contains directories, you can use the \n+# EXAMPLE_PATTERNS tag to specify one or more wildcard pattern (like *.cpp \n+# and *.h) to filter out the source-files in the directories. If left \n+# blank all files are included. \n+\n+EXAMPLE_PATTERNS       = \n+\n+# The IMAGE_PATH tag can be used to specify one or more files or \n+# directories that contain image that are included in the documentation (see \n+# the \\image command). \n+\n+IMAGE_PATH             = \n+\n+# The INPUT_FILTER tag can be used to specify a program that doxygen should \n+# invoke to filter for each input file. Doxygen will invoke the filter program \n+# by executing (via popen()) the command <filter> <input-file>, where <filter> \n+# is the value of the INPUT_FILTER tag, and <input-file> is the name of an \n+# input file. Doxygen will then use the output that the filter program writes \n+# to standard output. \n+\n+INPUT_FILTER           = \n+\n+# If the FILTER_SOURCE_FILES tag is set to YES, the input filter (if set using \n+# INPUT_FILTER) will be used to filter the input files when producing source \n+# files to browse. \n+\n+#FILTER_SOURCE_FILES    = NO\n+\n+#---------------------------------------------------------------------------\n+# configuration options related to the alphabetical class index\n+#---------------------------------------------------------------------------\n+\n+# If the ALPHABETICAL_INDEX tag is set to YES, an alphabetical index \n+# of all compounds will be generated. Enable this if the project \n+# contains a lot of classes, structs, unions or interfaces. \n+\n+ALPHABETICAL_INDEX     = YES\n+\n+# If the alphabetical index is enabled (see ALPHABETICAL_INDEX) then \n+# the COLS_IN_ALPHA_INDEX tag can be used to specify the number of columns \n+# in which this list will be split (can be a number in the range [1..20]) \n+\n+COLS_IN_ALPHA_INDEX    = 5\n+\n+# In case all classes in a project start with a common prefix, all \n+# classes will be put under the same header in the alphabetical index. \n+# The IGNORE_PREFIX tag can be used to specify one or more prefixes that \n+# should be ignored while generating the index headers. \n+\n+IGNORE_PREFIX          = \n+\n+#---------------------------------------------------------------------------\n+# configuration options related to the HTML output\n+#---------------------------------------------------------------------------\n+\n+# If the GENERATE_HTML tag is set to YES (the default) Doxygen will \n+# generate HTML output. \n+\n+GENERATE_HTML          = YES\n+\n+# The HTML_OUTPUT tag is used to specify where the HTML docs will be put. \n+# If a relative path is entered the value of OUTPUT_DIRECTORY will be \n+# put in front of it. If left blank `html' will be used as the default path. \n+\n+HTML_OUTPUT            = html_maint\n+\n+# The HTML_HEADER tag can be used to specify a personal HTML header for \n+# each generated HTML page. If it is left blank doxygen will generate a \n+# standard header.\n+\n+HTML_HEADER            = \n+\n+# The HTML_FOOTER tag can be used to specify a personal HTML footer for \n+# each generated HTML page. If it is left blank doxygen will generate a \n+# standard footer.\n+\n+HTML_FOOTER            = \n+\n+# The HTML_STYLESHEET tag can be used to specify a user defined cascading \n+# style sheet that is used by each HTML page. It can be used to \n+# fine-tune the look of the HTML output. If the tag is left blank doxygen \n+# will generate a default style sheet \n+\n+HTML_STYLESHEET        = \n+\n+# If the HTML_ALIGN_MEMBERS tag is set to YES, the members of classes, \n+# files or namespaces will be aligned in HTML using tables. If set to \n+# NO a bullet list will be used. \n+\n+HTML_ALIGN_MEMBERS     = YES\n+\n+# If the GENERATE_HTMLHELP tag is set to YES, additional index files \n+# will be generated that can be used as input for tools like the \n+# Microsoft HTML help workshop to generate a compressed HTML help file (.chm) \n+# of the generated HTML documentation. \n+\n+GENERATE_HTMLHELP      = NO\n+\n+# The DISABLE_INDEX tag can be used to turn on/off the condensed index at \n+# top of each HTML page. The value NO (the default) enables the index and \n+# the value YES disables it. \n+\n+DISABLE_INDEX          = NO\n+\n+# This tag can be used to set the number of enum values (range [1..20]) \n+# that doxygen will group on one line in the generated HTML documentation. \n+\n+#ENUM_VALUES_PER_LINE   = 4\n+\n+# If the GENERATE_TREEVIEW tag is set to YES, a side pannel will be\n+# generated containing a tree-like index structure (just like the one that \n+# is generated for HTML Help). For this to work a browser that supports \n+# JavaScript and frames is required (for instance Netscape 4.0+ \n+# or Internet explorer 4.0+). \n+\n+GENERATE_TREEVIEW      = YES\n+\n+# If the treeview is enabled (see GENERATE_TREEVIEW) then this tag can be \n+# used to set the initial width (in pixels) of the frame in which the tree \n+# is shown. \n+\n+#TREEVIEW_WIDTH         = 250\n+\n+#---------------------------------------------------------------------------\n+# configuration options related to the LaTeX output\n+#---------------------------------------------------------------------------\n+\n+# If the GENERATE_LATEX tag is set to YES (the default) Doxygen will \n+# generate Latex output. \n+\n+GENERATE_LATEX         = NO\n+\n+# The LATEX_OUTPUT tag is used to specify where the LaTeX docs will be put. \n+# If a relative path is entered the value of OUTPUT_DIRECTORY will be \n+# put in front of it. If left blank `latex' will be used as the default path. \n+\n+LATEX_OUTPUT           = latex\n+\n+# If the COMPACT_LATEX tag is set to YES Doxygen generates more compact \n+# LaTeX documents. This may be useful for small projects and may help to \n+# save some trees in general. \n+\n+COMPACT_LATEX          = NO\n+\n+# The PAPER_TYPE tag can be used to set the paper type that is used \n+# by the printer. Possible values are: a4, a4wide, letter, legal and \n+# executive. If left blank a4wide will be used. \n+\n+PAPER_TYPE             = letter\n+\n+# The EXTRA_PACKAGES tag can be to specify one or more names of LaTeX \n+# packages that should be included in the LaTeX output. \n+\n+EXTRA_PACKAGES         = \n+\n+# The LATEX_HEADER tag can be used to specify a personal LaTeX header for \n+# the generated latex document. The header should contain everything until \n+# the first chapter. If it is left blank doxygen will generate a \n+# standard header. Notice: only use this tag if you know what you are doing! \n+\n+LATEX_HEADER           = \n+\n+# If the PDF_HYPERLINKS tag is set to YES, the LaTeX that is generated \n+# is prepared for conversion to pdf (using ps2pdf). The pdf file will \n+# contain links (just like the HTML output) instead of page references \n+# This makes the output suitable for online browsing using a pdf viewer. \n+\n+PDF_HYPERLINKS         = NO\n+\n+# If the USE_PDFLATEX tag is set to YES, pdflatex will be used instead of \n+# plain latex in the generated Makefile. Set this option to YES to get a \n+# higher quality PDF documentation. \n+\n+USE_PDFLATEX           = NO\n+\n+# If the LATEX_BATCHMODE tag is set to YES, doxygen will add the \\\\batchmode. \n+# command to the generated LaTeX files. This will instruct LaTeX to keep \n+# running if errors occur, instead of asking the user for help. \n+# This option is also used when generating formulas in HTML. \n+\n+LATEX_BATCHMODE        = NO\n+\n+#---------------------------------------------------------------------------\n+# configuration options related to the RTF output\n+#---------------------------------------------------------------------------\n+\n+# If the GENERATE_RTF tag is set to YES Doxygen will generate RTF output \n+# The RTF output is optimised for Word 97 and may not look very pretty with \n+# other RTF readers or editors.\n+\n+GENERATE_RTF           = NO\n+\n+# The RTF_OUTPUT tag is used to specify where the RTF docs will be put. \n+# If a relative path is entered the value of OUTPUT_DIRECTORY will be \n+# put in front of it. If left blank `rtf' will be used as the default path. \n+\n+RTF_OUTPUT             = rtf\n+\n+# If the COMPACT_RTF tag is set to YES Doxygen generates more compact \n+# RTF documents. This may be useful for small projects and may help to \n+# save some trees in general. \n+\n+COMPACT_RTF            = NO\n+\n+# If the RTF_HYPERLINKS tag is set to YES, the RTF that is generated \n+# will contain hyperlink fields. The RTF file will \n+# contain links (just like the HTML output) instead of page references. \n+# This makes the output suitable for online browsing using a WORD or other. \n+# programs which support those fields. \n+# Note: wordpad (write) and others do not support links. \n+\n+RTF_HYPERLINKS         = NO\n+\n+# Load stylesheet definitions from file. Syntax is similar to doxygen's \n+# config file, i.e. a series of assigments. You only have to provide \n+# replacements, missing definitions are set to their default value. \n+\n+RTF_STYLESHEET_FILE    = \n+\n+#---------------------------------------------------------------------------\n+# configuration options related to the man page output\n+#---------------------------------------------------------------------------\n+\n+# If the GENERATE_MAN tag is set to YES (the default) Doxygen will \n+# generate man pages \n+\n+GENERATE_MAN           = NO\n+\n+# The MAN_OUTPUT tag is used to specify where the man pages will be put. \n+# If a relative path is entered the value of OUTPUT_DIRECTORY will be \n+# put in front of it. If left blank `man' will be used as the default path. \n+\n+MAN_OUTPUT             = man\n+\n+# The MAN_EXTENSION tag determines the extension that is added to \n+# the generated man pages (default is the subroutine's section .3) \n+\n+MAN_EXTENSION          = .3\n+\n+#---------------------------------------------------------------------------\n+# Configuration options related to the preprocessor   \n+#---------------------------------------------------------------------------\n+\n+# If the ENABLE_PREPROCESSING tag is set to YES (the default) Doxygen will \n+# evaluate all C-preprocessor directives found in the sources and include \n+# files. \n+\n+ENABLE_PREPROCESSING   = YES\n+\n+# If the MACRO_EXPANSION tag is set to YES Doxygen will expand all macro \n+# names in the source code. If set to NO (the default) only conditional \n+# compilation will be performed. Macro expansion can be done in a controlled \n+# way by setting EXPAND_ONLY_PREDEF to YES. \n+\n+MACRO_EXPANSION        = NO\n+\n+# If the EXPAND_ONLY_PREDEF and MACRO_EXPANSION tags are both set to YES \n+# then the macro expansion is limited to the macros specified with the \n+# PREDEFINED and EXPAND_AS_PREDEFINED tags. \n+\n+EXPAND_ONLY_PREDEF     = NO\n+\n+# If the SEARCH_INCLUDES tag is set to YES (the default) the includes files \n+# in the INCLUDE_PATH (see below) will be search if a #include is found. \n+\n+SEARCH_INCLUDES        = YES\n+\n+# The INCLUDE_PATH tag can be used to specify one or more directories that \n+# contain include files that are not input files but should be processed by \n+# the preprocessor. \n+\n+INCLUDE_PATH           = \n+\n+# You can use the INCLUDE_FILE_PATTERNS tag to specify one or more wildcard \n+# patterns (like *.h and *.hpp) to filter out the header-files in the \n+# directories. If left blank, the patterns specified with FILE_PATTERNS will \n+# be used. \n+\n+INCLUDE_FILE_PATTERNS  = \n+\n+# The PREDEFINED tag can be used to specify one or more macro names that \n+# are defined before the preprocessor is started (similar to the -D option of \n+# gcc). The argument of the tag is a list of macros of the form: name \n+# or name=definition (no spaces). If the definition and the = are \n+# omitted =1 is assumed. \n+\n+PREDEFINED             = \n+\n+# If the MACRO_EXPANSION and EXPAND_PREDEF_ONLY tags are set to YES then \n+# this tag can be used to specify a list of macro names that should be expanded. \n+# The macro definition that is found in the sources will be used. \n+# Use the PREDEFINED tag if you want to use a different macro definition. \n+\n+EXPAND_AS_DEFINED      = \n+\n+#---------------------------------------------------------------------------\n+# Configuration::addtions related to external references   \n+#---------------------------------------------------------------------------\n+\n+# The TAGFILES tag can be used to specify one or more tagfiles. \n+\n+TAGFILES               =\n+\n+# When a file name is specified after GENERATE_TAGFILE, doxygen will create \n+# a tag file that is based on the input files it reads. \n+\n+GENERATE_TAGFILE       = \n+\n+# If the ALLEXTERNALS tag is set to YES all external classes will be listed \n+# in the class index. If set to NO only the inherited external classes \n+# will be listed. \n+\n+ALLEXTERNALS           = YES\n+\n+# The PERL_PATH should be the absolute path and name of the perl script \n+# interpreter (i.e. the result of `which perl'). \n+\n+PERL_PATH              = /usr/bin/perl\n+\n+#---------------------------------------------------------------------------\n+# Configuration options related to the dot tool   \n+#---------------------------------------------------------------------------\n+\n+# If you set the HAVE_DOT tag to YES then doxygen will assume the dot tool is \n+# available from the path. This tool is part of Graphviz, a graph visualization \n+# toolkit from AT&T and Lucent Bell Labs. The other options in this section \n+# have no effect if this option is set to NO (the default) \n+\n+HAVE_DOT               = NO\n+\n+# If the CLASS_GRAPH and HAVE_DOT tags are set to YES then doxygen \n+# will generate a graph for each documented class showing the direct and \n+# indirect inheritance relations. Setting this tag to YES will force the \n+# the CLASS_DIAGRAMS tag to NO.\n+\n+CLASS_GRAPH            = YES\n+\n+# If the COLLABORATION_GRAPH and HAVE_DOT tags are set to YES then doxygen \n+# will generate a graph for each documented class showing the direct and \n+# indirect implementation dependencies (inheritance, containment, and \n+# class references variables) of the class with other documented classes. \n+\n+COLLABORATION_GRAPH    = YES\n+\n+# If the ENABLE_PREPROCESSING, INCLUDE_GRAPH, and HAVE_DOT tags are set to \n+# YES then doxygen will generate a graph for each documented file showing \n+# the direct and indirect include dependencies of the file with other \n+# documented files. \n+\n+INCLUDE_GRAPH          = YES\n+\n+# If the ENABLE_PREPROCESSING, INCLUDED_BY_GRAPH, and HAVE_DOT tags are set to \n+# YES then doxygen will generate a graph for each documented header file showing \n+# the documented files that directly or indirectly include this file \n+\n+INCLUDED_BY_GRAPH      = YES\n+\n+# If the GRAPHICAL_HIERARCHY and HAVE_DOT tags are set to YES then doxygen \n+# will graphical hierarchy of all classes instead of a textual one. \n+\n+GRAPHICAL_HIERARCHY    = YES\n+\n+# The tag DOT_PATH can be used to specify the path where the dot tool can be \n+# found. If left blank, it is assumed the dot tool can be found on the path. \n+\n+DOT_PATH               = \n+\n+# The MAX_DOT_GRAPH_WIDTH tag can be used to set the maximum allowed width \n+# (in pixels) of the graphs generated by dot. If a graph becomes larger than \n+# this value, doxygen will try to truncate the graph, so that it fits within \n+# the specified constraint. Beware that most browsers cannot cope with very \n+# large images. \n+\n+MAX_DOT_GRAPH_WIDTH    = 1024\n+\n+# The MAX_DOT_GRAPH_HEIGHT tag can be used to set the maximum allows height \n+# (in pixels) of the graphs generated by dot. If a graph becomes larger than \n+# this value, doxygen will try to truncate the graph, so that it fits within \n+# the specified constraint. Beware that most browsers cannot cope with very \n+# large images. \n+\n+MAX_DOT_GRAPH_HEIGHT   = 1024\n+\n+# If the GENERATE_LEGEND tag is set to YES (the default) Doxygen will \n+# generate a legend page explaining the meaning of the various boxes and \n+# arrows in the dot generated graphs. \n+\n+#GENERATE_LEGEND        = YES\n+\n+#---------------------------------------------------------------------------\n+# Configuration::addtions related to the search engine   \n+#---------------------------------------------------------------------------\n+\n+# The SEARCHENGINE tag specifies whether or not a search engine should be \n+# used. If set to NO the values of all tags below this one will be ignored. \n+\n+SEARCHENGINE           = NO\n+\n+# The CGI_NAME tag should be the name of the CGI script that \n+# starts the search engine (doxysearch) with the correct parameters. \n+# A script with this name will be generated by doxygen. \n+\n+CGI_NAME               = search.cgi\n+\n+# The CGI_URL tag should be the absolute URL to the directory where the \n+# cgi binaries are located. See the documentation of your http daemon for \n+# details. \n+\n+CGI_URL                = \n+\n+# The DOC_URL tag should be the absolute URL to the directory where the \n+# documentation is located. If left blank the absolute path to the \n+# documentation, with file:// prepended to it, will be used. \n+\n+DOC_URL                = \n+\n+# The DOC_ABSPATH tag should be the absolute path to the directory where the \n+# documentation is located. If left blank the directory on the local machine \n+# will be used. \n+\n+DOC_ABSPATH            = \n+\n+# The BIN_ABSPATH tag must point to the directory where the doxysearch binary \n+# is installed. \n+\n+BIN_ABSPATH            = /usr/local/bin/\n+\n+# The EXT_DOC_PATHS tag can be used to specify one or more paths to \n+# documentation generated for other projects. This allows doxysearch to search \n+# the documentation for these projects as well. \n+\n+EXT_DOC_PATHS          = \n+\n+\n+# End of file\n+"}, {"sha": "361949e77efcc0a4e55593267ab5e0e90e1b65aa", "filename": "libstdc++-v3/docs/doxygen/run_doxygen", "status": "modified", "additions": 106, "deletions": 2, "changes": 108, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e03f70b3a3fafdfc39ce12f574ae5828076543f8/libstdc%2B%2B-v3%2Fdocs%2Fdoxygen%2Frun_doxygen", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e03f70b3a3fafdfc39ce12f574ae5828076543f8/libstdc%2B%2B-v3%2Fdocs%2Fdoxygen%2Frun_doxygen", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fdoxygen%2Frun_doxygen?ref=e03f70b3a3fafdfc39ce12f574ae5828076543f8", "patch": "@@ -1,6 +1,110 @@\n #!/bin/sh\n \n+# Runs doxygen.  Possibly will massage the output files.\n+#\n+# Synopsis:  run_doxygen --mode=[user|maint]  v3srcdir  v3builddir\n+#\n+# Originally hacked together by Phil Edwards <pme@sources.redhat.com>\n+# $Id$\n \n-# This file is a placeholder to keep the doxygen subdir in place.  It\n-# will be used to test for the presence of doxygen(1) and run it.\n+\n+# We could check that the version of doxygen is >= this variable, but that's\n+# just a pain.  Punt for now and rely on the maintainer to read this.  :-)\n+DOXYVER=1.2.6\n+\n+print_usage() {\n+    cat 1>&2 <<EOF\n+Usage:  run_doxygen --mode=MODE [<options>] <src-dir> <output-dir>\n+      MODE is one of:\n+          maint          Generate maintainers' documentation (lots more;\n+                             exposes non-public members, etc).\n+          user           Generate user-level library documentation.\n+\n+      more options when i think of them\n+\n+Note:  Requires Doxygen ${DOXYVER} or later; get it at\n+       ftp://ftp.stack.nl/pub/users/dimitri/doxygen-${DOXYVER}.src.tar.gz\n+\n+EOF\n+    exit 1\n+}\n+\n+parse_options() {\n+  for o\n+  do\n+    # Blatantly ripped from autoconf, er, I mean, \"gratefully standing\n+    # on the shoulders of those giants who have gone before us.\"\n+    case \"$o\" in\n+      -*=*) arg=`echo \"$o\" | sed 's/[-_a-zA-Z0-9]*=//'` ;;\n+      *) arg= ;;\n+    esac\n+\n+    case \"$o\" in\n+      --mode=*)\n+        mode=$arg ;;\n+      --mode | --help | -h)\n+        print_usage ;;\n+      --version | -v)\n+        # Aw, that's so cuuuute... don't ask, I needed it.\n+        blank=\n+        Id=is\n+        echo You expect this dinky script to track a version?  Okay, here\n+        echo it $Id$blank\n+        exit 0\n+        ;;\n+      *)\n+        # this turned out to be a mess, maybe change to --srcdir=, etc\n+        if test $srcdir = unset; then\n+          srcdir=$o\n+        elif test $outdir = unset; then\n+          outdir=${o}/docs/doxygen\n+        else\n+          echo run_doxygen error:  Too many arguments 1>&2\n+          exit 1\n+        fi\n+        ;;\n+      esac\n+  done\n+}\n+\n+\n+# script begins here\n+mode=unset\n+srcdir=unset\n+outdir=unset\n+\n+parse_options $*\n+\n+if test $srcdir = unset || test $outdir = unset || test $mode = unset; then\n+    # this could be better\n+    echo run_doxygen error:  You have not given enough information...! 1>&2\n+    print_usage\n+fi\n+\n+case x\"$mode\" in\n+    xuser | xmaint)  ;;  # ochen khorosho\n+    *)\n+      echo run_doxygen error:  $mode is an invalid mode 1>&2\n+      exit 1 ;;\n+esac\n+\n+# test for doxygen version here?\n+\n+test -d $outdir || (mkdir -p $outdir ; chmod u+w $outdir)\n+(\n+  set -e\n+  cd $srcdir\n+  sed -e \"s=@outdir@=${outdir}=\" docs/doxygen/${mode}.cfg.in \\\n+      > ${outdir}/${mode}.cfg\n+  doxygen ${outdir}/${mode}.cfg\n+)\n+\n+# mess with output files here?\n+\n+echo ::\n+echo :: Doxygen output begins with\n+echo :: ${outdir}/html_${mode}/index.html\n+echo ::\n+\n+exit 0\n "}, {"sha": "58f2c7b49a53e3bef4c86df1f2099187c32883e9", "filename": "libstdc++-v3/docs/doxygen/user.cfg.in", "status": "added", "additions": 740, "deletions": 0, "changes": 740, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e03f70b3a3fafdfc39ce12f574ae5828076543f8/libstdc%2B%2B-v3%2Fdocs%2Fdoxygen%2Fuser.cfg.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e03f70b3a3fafdfc39ce12f574ae5828076543f8/libstdc%2B%2B-v3%2Fdocs%2Fdoxygen%2Fuser.cfg.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fdoxygen%2Fuser.cfg.in?ref=e03f70b3a3fafdfc39ce12f574ae5828076543f8", "patch": "@@ -0,0 +1,740 @@\n+# Doxyfile 1.2.4\n+\n+# This file describes the settings to be used by doxygen for a project\n+#\n+# All text after a hash (#) is considered a comment and will be ignored\n+# The format is:\n+#       TAG = value [value, ...]\n+# For lists items can also be appended using:\n+#       TAG += value [value, ...]\n+# Values that contain spaces should be placed between quotes (\" \")\n+\n+#---------------------------------------------------------------------------\n+# General configuration options\n+#---------------------------------------------------------------------------\n+\n+# The PROJECT_NAME tag is a single word (or a sequence of words surrounded \n+# by quotes) that should identify the project. \n+\n+PROJECT_NAME           = \"libstdc++\"\n+\n+# The PROJECT_NUMBER tag can be used to enter a project or revision number. \n+# This could be handy for archiving the generated documentation or \n+# if some version control system is used.\n+\n+PROJECT_NUMBER         = 3\n+\n+# The OUTPUT_DIRECTORY tag is used to specify the (relative or absolute) \n+# base path where the generated documentation will be put. \n+# If a relative path is entered, it will be relative to the location \n+# where doxygen was started. If left blank the current directory will be used.\n+### Currently this is not really run through autoconf; it just looks that way.\n+OUTPUT_DIRECTORY       = @outdir@\n+\n+# The OUTPUT_LANGUAGE tag is used to specify the language in which all \n+# documentation generated by doxygen is written. Doxygen will use this \n+# information to generate all constant output in the proper language. \n+# The default language is English, other supported languages are: \n+# Dutch, French, Italian, Czech, Swedish, German, Finnish, Japanese, \n+# Korean, Hungarian, Norwegian, Spanish, Romanian, Russian, Croatian, \n+# Polish, Portuguese and Slovene.\n+\n+OUTPUT_LANGUAGE        = English\n+\n+# If the EXTRACT_ALL tag is set to YES doxygen will assume all entities in \n+# documentation are documented, even if no documentation was available. \n+# Private class members and static file members will be hidden unless \n+# the EXTRACT_PRIVATE and EXTRACT_STATIC tags are set to YES \n+\n+EXTRACT_ALL            = NO\n+#EXTRACT_ALL            = YES\n+\n+# If the EXTRACT_PRIVATE tag is set to YES all private members of a class \n+# will be included in the documentation. \n+\n+EXTRACT_PRIVATE        = NO\n+\n+# If the EXTRACT_STATIC tag is set to YES all static members of a file \n+# will be included in the documentation. \n+\n+EXTRACT_STATIC         = YES\n+\n+# If the HIDE_UNDOC_MEMBERS tag is set to YES, Doxygen will hide all \n+# undocumented members of documented classes, files or namespaces. \n+# If set to NO (the default) these members will be included in the \n+# various overviews, but no documentation section is generated. \n+# This option has no effect if EXTRACT_ALL is enabled. \n+\n+HIDE_UNDOC_MEMBERS     = YES\n+\n+# If the HIDE_UNDOC_CLASSES tag is set to YES, Doxygen will hide all \n+# undocumented classes that are normally visible in the class hierarchy. \n+# If set to NO (the default) these class will be included in the various \n+# overviews. This option has no effect if EXTRACT_ALL is enabled. \n+\n+HIDE_UNDOC_CLASSES     = YES\n+\n+# If the BRIEF_MEMBER_DESC tag is set to YES (the default) Doxygen will \n+# include brief member descriptions after the members that are listed in \n+# the file and class documentation (similar to JavaDoc). \n+# Set to NO to disable this. \n+\n+BRIEF_MEMBER_DESC      = NO\n+\n+# If the REPEAT_BRIEF tag is set to YES (the default) Doxygen will prepend \n+# the brief description of a member or function before the detailed description. \n+# Note: if both HIDE_UNDOC_MEMBERS and BRIEF_MEMBER_DESC are set to NO, the \n+# brief descriptions will be completely suppressed. \n+\n+REPEAT_BRIEF           = YES\n+\n+# If the ALWAYS_DETAILED_SEC and REPEAT_BRIEF tags are both set to YES then \n+# Doxygen will generate a detailed section even if there is only a brief \n+# description. \n+\n+ALWAYS_DETAILED_SEC    = NO\n+\n+# If the FULL_PATH_NAMES tag is set to YES then Doxygen will prepend the full \n+# path before files name in the file list and in the header files. If set \n+# to NO the shortest path that makes the file name unique will be used. \n+\n+FULL_PATH_NAMES        = NO\n+\n+# If the FULL_PATH_NAMES tag is set to YES then the STRIP_FROM_PATH tag \n+# can be used to strip a user defined part of the path. Stripping is \n+# only done if one of the specified strings matches the left-hand part of \n+# the path. It is allowed to use relative paths in the argument list.\n+\n+STRIP_FROM_PATH        = \n+\n+# The INTERNAL_DOCS tag determines if documentation \n+# that is typed after a \\internal command is included. If the tag is set \n+# to NO (the default) then the documentation will be excluded. \n+# Set it to YES to include the internal documentation. \n+\n+INTERNAL_DOCS          = NO\n+\n+# If the CLASS_DIAGRAMS tag is set to YES (the default) Doxygen will \n+# generate a class diagram (in Html and LaTeX) for classes with base or \n+# super classes. Setting the tag to NO turns the diagrams off. \n+\n+CLASS_DIAGRAMS         = NO\n+\n+# If the SOURCE_BROWSER tag is set to YES then a list of source files will \n+# be generated. Documented entities will be cross-referenced with these sources. \n+\n+SOURCE_BROWSER         = NO\n+\n+# Setting the INLINE_SOURCES tag to YES will include the body \n+# of functions and classes directly in the documentation. \n+\n+INLINE_SOURCES         = NO\n+\n+# Setting the STRIP_CODE_COMMENTS tag to YES (the default) will instruct \n+# doxygen to hide any special comment blocks from generated source code \n+# fragments. Normal C and C++ comments will always remain visible. \n+\n+STRIP_CODE_COMMENTS    = YES\n+\n+# If the CASE_SENSE_NAMES tag is set to NO then Doxygen will only generate \n+# file names in lower case letters. If set to YES upper case letters are also \n+# allowed. This is useful if you have classes or files whose names only differ \n+# in case and if your file system supports case sensitive file names. Windows \n+# users are adviced to set this option to NO.\n+\n+CASE_SENSE_NAMES       = YES\n+\n+# If the HIDE_SCOPE_NAMES tag is set to NO (the default) then Doxygen \n+# will show members with their full class and namespace scopes in the \n+# documentation. If set to YES the scope will be hidden. \n+\n+HIDE_SCOPE_NAMES       = NO\n+\n+# If the VERBATIM_HEADERS tag is set to YES (the default) then Doxygen \n+# will generate a verbatim copy of the header file for each class for \n+# which an include is specified. Set to NO to disable this. \n+\n+VERBATIM_HEADERS       = NO\n+\n+# If the SHOW_INCLUDE_FILES tag is set to YES (the default) then Doxygen \n+# will put list of the files that are included by a file in the documentation \n+# of that file. \n+\n+SHOW_INCLUDE_FILES     = YES\n+\n+# If the JAVADOC_AUTOBRIEF tag is set to YES then Doxygen \n+# will interpret the first line (until the first dot) of a JavaDoc-style \n+# comment as the brief description. If set to NO, the JavaDoc \n+# comments  will behave just like the Qt-style comments (thus requiring an \n+# explict @brief command for a brief description. \n+\n+JAVADOC_AUTOBRIEF      = NO\n+\n+# If the INHERIT_DOCS tag is set to YES (the default) then an undocumented \n+# member inherits the documentation from any documented member that it \n+# reimplements. \n+\n+INHERIT_DOCS           = YES\n+\n+# If the INLINE_INFO tag is set to YES (the default) then a tag [inline] \n+# is inserted in the documentation for inline members. \n+\n+INLINE_INFO            = YES\n+\n+# If the SORT_MEMBER_DOCS tag is set to YES (the default) then doxygen \n+# will sort the (detailed) documentation of file and class members \n+# alphabetically by member name. If set to NO the members will appear in \n+# declaration order. \n+\n+SORT_MEMBER_DOCS       = NO\n+\n+# If member grouping is used in the documentation and the DISTRIBUTE_GROUP_DOC \n+# tag is set to YES, then doxygen will reuse the documentation of the first \n+# member in the group (if any) for the other members of the group. By default \n+# all members of a group must be documented explicitly.\n+\n+#DISTRIBUTE_GROUP_DOC   = NO\n+\n+# The TAB_SIZE tag can be used to set the number of spaces in a tab. \n+# Doxygen uses this value to replace tabs by spaces in code fragments. \n+\n+TAB_SIZE               = 4\n+\n+# The ENABLE_SECTIONS tag can be used to enable conditional \n+# documentation sections, marked by \\if sectionname ... \\endif. \n+\n+ENABLED_SECTIONS       = \n+\n+# The GENERATE_TODOLIST tag can be used to enable (YES) or \n+# disable (NO) the todo list. This list is created by putting \\todo \n+# commands in the documentation.\n+\n+GENERATE_TODOLIST      = NO\n+\n+# The GENERATE_TESTLIST tag can be used to enable (YES) or \n+# disable (NO) the test list. This list is created by putting \\test \n+# commands in the documentation.\n+\n+GENERATE_TESTLIST      = NO\n+\n+# This tag can be used to specify a number of aliases that acts \n+# as commands in the documentation. An alias has the form \"name=value\". \n+# For example adding \"sideeffect=\\par Side Effects:\\n\" will allow you to \n+# put the command \\sideeffect (or @sideeffect) in the documentation, which \n+# will result in a user defined paragraph with heading \"Side Effects:\". \n+# You can put \\n's in the value part of an alias to insert newlines. \n+\n+#ALIASES                = \n+\n+#---------------------------------------------------------------------------\n+# configuration options related to warning and progress messages\n+#---------------------------------------------------------------------------\n+\n+# The QUIET tag can be used to turn on/off the messages that are generated \n+# by doxygen. Possible values are YES and NO. If left blank NO is used. \n+\n+QUIET                  = YES\n+\n+# The WARNINGS tag can be used to turn on/off the warning messages that are \n+# generated by doxygen. Possible values are YES and NO. If left blank \n+# NO is used. \n+\n+### pme  Turned off; apparently doxygen can't grok templates\n+WARNINGS               = NO\n+\n+# If WARN_IF_UNDOCUMENTED is set to YES, then doxygen will generate warnings \n+# for undocumented members. If EXTRACT_ALL is set to YES then this flag will \n+# automatically be disabled. \n+\n+WARN_IF_UNDOCUMENTED   = YES\n+\n+# The WARN_FORMAT tag determines the format of the warning messages that \n+# doxygen can produce. The string should contain the $file, $line, and $text \n+# tags, which will be replaced by the file and line number from which the \n+# warning originated and the warning text. \n+\n+WARN_FORMAT            = \"$file:$line: $text\"\n+\n+# The WARN_LOGFILE tag can be used to specify a file to which warning \n+# and error messages should be written. If left blank the output is written \n+# to stderr. \n+\n+#WARN_LOGFILE           = \n+\n+#---------------------------------------------------------------------------\n+# configuration options related to the input files\n+#---------------------------------------------------------------------------\n+\n+# The INPUT tag can be used to specify the files and/or directories that contain \n+# documented source files. You may enter file names like \"myfile.cpp\" or \n+# directories like \"/usr/src/myproject\". Separate the files or directories \n+# with spaces. \n+\n+INPUT                  = include src\n+\n+# If the value of the INPUT tag contains directories, you can use the \n+# FILE_PATTERNS tag to specify one or more wildcard pattern (like *.cpp \n+# and *.h) to filter out the source-files in the directories. If left \n+# blank all files are included. \n+\n+FILE_PATTERNS          = *.cc *.h c++config\n+\n+# The RECURSIVE tag can be used to turn specify whether or not subdirectories \n+# should be searched for input files as well. Possible values are YES and NO. \n+# If left blank NO is used. \n+\n+RECURSIVE              = YES\n+\n+# The EXCLUDE tag can be used to specify files and/or directories that should \n+# excluded from the INPUT source files. This way you can easily exclude a \n+# subdirectory from a directory tree whose root is specified with the INPUT tag. \n+EXCLUDE                = \n+\n+# If the value of the INPUT tag contains directories, you can use the \n+# EXCLUDE_PATTERNS tag to specify one or more wildcard patterns to exclude \n+# certain files from those directories. \n+\n+EXCLUDE_PATTERNS       = \n+\n+# The EXAMPLE_PATH tag can be used to specify one or more files or \n+# directories that contain example code fragments that are included (see \n+# the \\include command). \n+\n+EXAMPLE_PATH           = \n+\n+# If the value of the EXAMPLE_PATH tag contains directories, you can use the \n+# EXAMPLE_PATTERNS tag to specify one or more wildcard pattern (like *.cpp \n+# and *.h) to filter out the source-files in the directories. If left \n+# blank all files are included. \n+\n+EXAMPLE_PATTERNS       = \n+\n+# The IMAGE_PATH tag can be used to specify one or more files or \n+# directories that contain image that are included in the documentation (see \n+# the \\image command). \n+\n+IMAGE_PATH             = \n+\n+# The INPUT_FILTER tag can be used to specify a program that doxygen should \n+# invoke to filter for each input file. Doxygen will invoke the filter program \n+# by executing (via popen()) the command <filter> <input-file>, where <filter> \n+# is the value of the INPUT_FILTER tag, and <input-file> is the name of an \n+# input file. Doxygen will then use the output that the filter program writes \n+# to standard output. \n+\n+INPUT_FILTER           = \n+\n+# If the FILTER_SOURCE_FILES tag is set to YES, the input filter (if set using \n+# INPUT_FILTER) will be used to filter the input files when producing source \n+# files to browse. \n+\n+#FILTER_SOURCE_FILES    = NO\n+\n+#---------------------------------------------------------------------------\n+# configuration options related to the alphabetical class index\n+#---------------------------------------------------------------------------\n+\n+# If the ALPHABETICAL_INDEX tag is set to YES, an alphabetical index \n+# of all compounds will be generated. Enable this if the project \n+# contains a lot of classes, structs, unions or interfaces. \n+\n+ALPHABETICAL_INDEX     = YES\n+\n+# If the alphabetical index is enabled (see ALPHABETICAL_INDEX) then \n+# the COLS_IN_ALPHA_INDEX tag can be used to specify the number of columns \n+# in which this list will be split (can be a number in the range [1..20]) \n+\n+COLS_IN_ALPHA_INDEX    = 5\n+\n+# In case all classes in a project start with a common prefix, all \n+# classes will be put under the same header in the alphabetical index. \n+# The IGNORE_PREFIX tag can be used to specify one or more prefixes that \n+# should be ignored while generating the index headers. \n+\n+IGNORE_PREFIX          = \n+\n+#---------------------------------------------------------------------------\n+# configuration options related to the HTML output\n+#---------------------------------------------------------------------------\n+\n+# If the GENERATE_HTML tag is set to YES (the default) Doxygen will \n+# generate HTML output. \n+\n+GENERATE_HTML          = YES\n+\n+# The HTML_OUTPUT tag is used to specify where the HTML docs will be put. \n+# If a relative path is entered the value of OUTPUT_DIRECTORY will be \n+# put in front of it. If left blank `html' will be used as the default path. \n+\n+HTML_OUTPUT            = html_user\n+\n+# The HTML_HEADER tag can be used to specify a personal HTML header for \n+# each generated HTML page. If it is left blank doxygen will generate a \n+# standard header.\n+\n+HTML_HEADER            = \n+\n+# The HTML_FOOTER tag can be used to specify a personal HTML footer for \n+# each generated HTML page. If it is left blank doxygen will generate a \n+# standard footer.\n+\n+HTML_FOOTER            = \n+\n+# The HTML_STYLESHEET tag can be used to specify a user defined cascading \n+# style sheet that is used by each HTML page. It can be used to \n+# fine-tune the look of the HTML output. If the tag is left blank doxygen \n+# will generate a default style sheet \n+\n+HTML_STYLESHEET        = \n+\n+# If the HTML_ALIGN_MEMBERS tag is set to YES, the members of classes, \n+# files or namespaces will be aligned in HTML using tables. If set to \n+# NO a bullet list will be used. \n+\n+HTML_ALIGN_MEMBERS     = YES\n+\n+# If the GENERATE_HTMLHELP tag is set to YES, additional index files \n+# will be generated that can be used as input for tools like the \n+# Microsoft HTML help workshop to generate a compressed HTML help file (.chm) \n+# of the generated HTML documentation. \n+\n+GENERATE_HTMLHELP      = NO\n+\n+# The DISABLE_INDEX tag can be used to turn on/off the condensed index at \n+# top of each HTML page. The value NO (the default) enables the index and \n+# the value YES disables it. \n+\n+DISABLE_INDEX          = NO\n+\n+# This tag can be used to set the number of enum values (range [1..20]) \n+# that doxygen will group on one line in the generated HTML documentation. \n+\n+#ENUM_VALUES_PER_LINE   = 4\n+\n+# If the GENERATE_TREEVIEW tag is set to YES, a side pannel will be\n+# generated containing a tree-like index structure (just like the one that \n+# is generated for HTML Help). For this to work a browser that supports \n+# JavaScript and frames is required (for instance Netscape 4.0+ \n+# or Internet explorer 4.0+). \n+\n+GENERATE_TREEVIEW      = YES\n+\n+# If the treeview is enabled (see GENERATE_TREEVIEW) then this tag can be \n+# used to set the initial width (in pixels) of the frame in which the tree \n+# is shown. \n+\n+#TREEVIEW_WIDTH         = 250\n+\n+#---------------------------------------------------------------------------\n+# configuration options related to the LaTeX output\n+#---------------------------------------------------------------------------\n+\n+# If the GENERATE_LATEX tag is set to YES (the default) Doxygen will \n+# generate Latex output. \n+\n+GENERATE_LATEX         = NO\n+\n+# The LATEX_OUTPUT tag is used to specify where the LaTeX docs will be put. \n+# If a relative path is entered the value of OUTPUT_DIRECTORY will be \n+# put in front of it. If left blank `latex' will be used as the default path. \n+\n+LATEX_OUTPUT           = latex\n+\n+# If the COMPACT_LATEX tag is set to YES Doxygen generates more compact \n+# LaTeX documents. This may be useful for small projects and may help to \n+# save some trees in general. \n+\n+COMPACT_LATEX          = NO\n+\n+# The PAPER_TYPE tag can be used to set the paper type that is used \n+# by the printer. Possible values are: a4, a4wide, letter, legal and \n+# executive. If left blank a4wide will be used. \n+\n+PAPER_TYPE             = letter\n+\n+# The EXTRA_PACKAGES tag can be to specify one or more names of LaTeX \n+# packages that should be included in the LaTeX output. \n+\n+EXTRA_PACKAGES         = \n+\n+# The LATEX_HEADER tag can be used to specify a personal LaTeX header for \n+# the generated latex document. The header should contain everything until \n+# the first chapter. If it is left blank doxygen will generate a \n+# standard header. Notice: only use this tag if you know what you are doing! \n+\n+LATEX_HEADER           = \n+\n+# If the PDF_HYPERLINKS tag is set to YES, the LaTeX that is generated \n+# is prepared for conversion to pdf (using ps2pdf). The pdf file will \n+# contain links (just like the HTML output) instead of page references \n+# This makes the output suitable for online browsing using a pdf viewer. \n+\n+PDF_HYPERLINKS         = NO\n+\n+# If the USE_PDFLATEX tag is set to YES, pdflatex will be used instead of \n+# plain latex in the generated Makefile. Set this option to YES to get a \n+# higher quality PDF documentation. \n+\n+USE_PDFLATEX           = NO\n+\n+# If the LATEX_BATCHMODE tag is set to YES, doxygen will add the \\\\batchmode. \n+# command to the generated LaTeX files. This will instruct LaTeX to keep \n+# running if errors occur, instead of asking the user for help. \n+# This option is also used when generating formulas in HTML. \n+\n+LATEX_BATCHMODE        = NO\n+\n+#---------------------------------------------------------------------------\n+# configuration options related to the RTF output\n+#---------------------------------------------------------------------------\n+\n+# If the GENERATE_RTF tag is set to YES Doxygen will generate RTF output \n+# The RTF output is optimised for Word 97 and may not look very pretty with \n+# other RTF readers or editors.\n+\n+GENERATE_RTF           = NO\n+\n+# The RTF_OUTPUT tag is used to specify where the RTF docs will be put. \n+# If a relative path is entered the value of OUTPUT_DIRECTORY will be \n+# put in front of it. If left blank `rtf' will be used as the default path. \n+\n+RTF_OUTPUT             = rtf\n+\n+# If the COMPACT_RTF tag is set to YES Doxygen generates more compact \n+# RTF documents. This may be useful for small projects and may help to \n+# save some trees in general. \n+\n+COMPACT_RTF            = NO\n+\n+# If the RTF_HYPERLINKS tag is set to YES, the RTF that is generated \n+# will contain hyperlink fields. The RTF file will \n+# contain links (just like the HTML output) instead of page references. \n+# This makes the output suitable for online browsing using a WORD or other. \n+# programs which support those fields. \n+# Note: wordpad (write) and others do not support links. \n+\n+RTF_HYPERLINKS         = NO\n+\n+# Load stylesheet definitions from file. Syntax is similar to doxygen's \n+# config file, i.e. a series of assigments. You only have to provide \n+# replacements, missing definitions are set to their default value. \n+\n+RTF_STYLESHEET_FILE    = \n+\n+#---------------------------------------------------------------------------\n+# configuration options related to the man page output\n+#---------------------------------------------------------------------------\n+\n+# If the GENERATE_MAN tag is set to YES (the default) Doxygen will \n+# generate man pages \n+\n+GENERATE_MAN           = NO\n+\n+# The MAN_OUTPUT tag is used to specify where the man pages will be put. \n+# If a relative path is entered the value of OUTPUT_DIRECTORY will be \n+# put in front of it. If left blank `man' will be used as the default path. \n+\n+MAN_OUTPUT             = man\n+\n+# The MAN_EXTENSION tag determines the extension that is added to \n+# the generated man pages (default is the subroutine's section .3) \n+\n+MAN_EXTENSION          = .3\n+\n+#---------------------------------------------------------------------------\n+# Configuration options related to the preprocessor   \n+#---------------------------------------------------------------------------\n+\n+# If the ENABLE_PREPROCESSING tag is set to YES (the default) Doxygen will \n+# evaluate all C-preprocessor directives found in the sources and include \n+# files. \n+\n+ENABLE_PREPROCESSING   = YES\n+\n+# If the MACRO_EXPANSION tag is set to YES Doxygen will expand all macro \n+# names in the source code. If set to NO (the default) only conditional \n+# compilation will be performed. Macro expansion can be done in a controlled \n+# way by setting EXPAND_ONLY_PREDEF to YES. \n+\n+MACRO_EXPANSION        = NO\n+\n+# If the EXPAND_ONLY_PREDEF and MACRO_EXPANSION tags are both set to YES \n+# then the macro expansion is limited to the macros specified with the \n+# PREDEFINED and EXPAND_AS_PREDEFINED tags. \n+\n+EXPAND_ONLY_PREDEF     = NO\n+\n+# If the SEARCH_INCLUDES tag is set to YES (the default) the includes files \n+# in the INCLUDE_PATH (see below) will be search if a #include is found. \n+\n+SEARCH_INCLUDES        = YES\n+\n+# The INCLUDE_PATH tag can be used to specify one or more directories that \n+# contain include files that are not input files but should be processed by \n+# the preprocessor. \n+\n+INCLUDE_PATH           = \n+\n+# You can use the INCLUDE_FILE_PATTERNS tag to specify one or more wildcard \n+# patterns (like *.h and *.hpp) to filter out the header-files in the \n+# directories. If left blank, the patterns specified with FILE_PATTERNS will \n+# be used. \n+\n+INCLUDE_FILE_PATTERNS  = \n+\n+# The PREDEFINED tag can be used to specify one or more macro names that \n+# are defined before the preprocessor is started (similar to the -D option of \n+# gcc). The argument of the tag is a list of macros of the form: name \n+# or name=definition (no spaces). If the definition and the = are \n+# omitted =1 is assumed. \n+\n+PREDEFINED             = \n+\n+# If the MACRO_EXPANSION and EXPAND_PREDEF_ONLY tags are set to YES then \n+# this tag can be used to specify a list of macro names that should be expanded. \n+# The macro definition that is found in the sources will be used. \n+# Use the PREDEFINED tag if you want to use a different macro definition. \n+\n+EXPAND_AS_DEFINED      = \n+\n+#---------------------------------------------------------------------------\n+# Configuration::addtions related to external references   \n+#---------------------------------------------------------------------------\n+\n+# The TAGFILES tag can be used to specify one or more tagfiles. \n+\n+TAGFILES               =\n+\n+# When a file name is specified after GENERATE_TAGFILE, doxygen will create \n+# a tag file that is based on the input files it reads. \n+\n+GENERATE_TAGFILE       = \n+\n+# If the ALLEXTERNALS tag is set to YES all external classes will be listed \n+# in the class index. If set to NO only the inherited external classes \n+# will be listed. \n+\n+ALLEXTERNALS           = YES\n+\n+# The PERL_PATH should be the absolute path and name of the perl script \n+# interpreter (i.e. the result of `which perl'). \n+\n+PERL_PATH              = /usr/bin/perl\n+\n+#---------------------------------------------------------------------------\n+# Configuration options related to the dot tool   \n+#---------------------------------------------------------------------------\n+\n+# If you set the HAVE_DOT tag to YES then doxygen will assume the dot tool is \n+# available from the path. This tool is part of Graphviz, a graph visualization \n+# toolkit from AT&T and Lucent Bell Labs. The other options in this section \n+# have no effect if this option is set to NO (the default) \n+\n+HAVE_DOT               = NO\n+\n+# If the CLASS_GRAPH and HAVE_DOT tags are set to YES then doxygen \n+# will generate a graph for each documented class showing the direct and \n+# indirect inheritance relations. Setting this tag to YES will force the \n+# the CLASS_DIAGRAMS tag to NO.\n+\n+CLASS_GRAPH            = YES\n+\n+# If the COLLABORATION_GRAPH and HAVE_DOT tags are set to YES then doxygen \n+# will generate a graph for each documented class showing the direct and \n+# indirect implementation dependencies (inheritance, containment, and \n+# class references variables) of the class with other documented classes. \n+\n+COLLABORATION_GRAPH    = YES\n+\n+# If the ENABLE_PREPROCESSING, INCLUDE_GRAPH, and HAVE_DOT tags are set to \n+# YES then doxygen will generate a graph for each documented file showing \n+# the direct and indirect include dependencies of the file with other \n+# documented files. \n+\n+INCLUDE_GRAPH          = YES\n+\n+# If the ENABLE_PREPROCESSING, INCLUDED_BY_GRAPH, and HAVE_DOT tags are set to \n+# YES then doxygen will generate a graph for each documented header file showing \n+# the documented files that directly or indirectly include this file \n+\n+INCLUDED_BY_GRAPH      = YES\n+\n+# If the GRAPHICAL_HIERARCHY and HAVE_DOT tags are set to YES then doxygen \n+# will graphical hierarchy of all classes instead of a textual one. \n+\n+GRAPHICAL_HIERARCHY    = YES\n+\n+# The tag DOT_PATH can be used to specify the path where the dot tool can be \n+# found. If left blank, it is assumed the dot tool can be found on the path. \n+\n+DOT_PATH               = \n+\n+# The MAX_DOT_GRAPH_WIDTH tag can be used to set the maximum allowed width \n+# (in pixels) of the graphs generated by dot. If a graph becomes larger than \n+# this value, doxygen will try to truncate the graph, so that it fits within \n+# the specified constraint. Beware that most browsers cannot cope with very \n+# large images. \n+\n+MAX_DOT_GRAPH_WIDTH    = 1024\n+\n+# The MAX_DOT_GRAPH_HEIGHT tag can be used to set the maximum allows height \n+# (in pixels) of the graphs generated by dot. If a graph becomes larger than \n+# this value, doxygen will try to truncate the graph, so that it fits within \n+# the specified constraint. Beware that most browsers cannot cope with very \n+# large images. \n+\n+MAX_DOT_GRAPH_HEIGHT   = 1024\n+\n+# If the GENERATE_LEGEND tag is set to YES (the default) Doxygen will \n+# generate a legend page explaining the meaning of the various boxes and \n+# arrows in the dot generated graphs. \n+\n+#GENERATE_LEGEND        = YES\n+\n+#---------------------------------------------------------------------------\n+# Configuration::addtions related to the search engine   \n+#---------------------------------------------------------------------------\n+\n+# The SEARCHENGINE tag specifies whether or not a search engine should be \n+# used. If set to NO the values of all tags below this one will be ignored. \n+\n+SEARCHENGINE           = NO\n+\n+# The CGI_NAME tag should be the name of the CGI script that \n+# starts the search engine (doxysearch) with the correct parameters. \n+# A script with this name will be generated by doxygen. \n+\n+CGI_NAME               = search.cgi\n+\n+# The CGI_URL tag should be the absolute URL to the directory where the \n+# cgi binaries are located. See the documentation of your http daemon for \n+# details. \n+\n+CGI_URL                = \n+\n+# The DOC_URL tag should be the absolute URL to the directory where the \n+# documentation is located. If left blank the absolute path to the \n+# documentation, with file:// prepended to it, will be used. \n+\n+DOC_URL                = \n+\n+# The DOC_ABSPATH tag should be the absolute path to the directory where the \n+# documentation is located. If left blank the directory on the local machine \n+# will be used. \n+\n+DOC_ABSPATH            = \n+\n+# The BIN_ABSPATH tag must point to the directory where the doxysearch binary \n+# is installed. \n+\n+BIN_ABSPATH            = /usr/local/bin/\n+\n+# The EXT_DOC_PATHS tag can be used to specify one or more paths to \n+# documentation generated for other projects. This allows doxysearch to search \n+# the documentation for these projects as well. \n+\n+EXT_DOC_PATHS          = \n+\n+\n+# End of file\n+"}]}