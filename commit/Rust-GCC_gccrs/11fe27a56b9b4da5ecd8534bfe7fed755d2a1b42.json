{"sha": "11fe27a56b9b4da5ecd8534bfe7fed755d2a1b42", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTFmZTI3YTU2YjliNGRhNWVjZDg1MzRiZmU3ZmVkNzU1ZDJhMWI0Mg==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2003-04-11T18:36:25Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2003-04-11T18:36:25Z"}, "message": "c-tree.texi (Functions): Remove DECL_REAL_CONTEXT documentation; add DECL_FRIEND_CONTEXT.\n\n\t* doc/c-tree.texi (Functions): Remove DECL_REAL_CONTEXT\n\tdocumentation; add DECL_FRIEND_CONTEXT.\n\nFrom-SVN: r65472", "tree": {"sha": "c3c8e792cd4444b837f00acf7560fca7a6017a38", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c3c8e792cd4444b837f00acf7560fca7a6017a38"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/11fe27a56b9b4da5ecd8534bfe7fed755d2a1b42", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11fe27a56b9b4da5ecd8534bfe7fed755d2a1b42", "html_url": "https://github.com/Rust-GCC/gccrs/commit/11fe27a56b9b4da5ecd8534bfe7fed755d2a1b42", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11fe27a56b9b4da5ecd8534bfe7fed755d2a1b42/comments", "author": null, "committer": null, "parents": [{"sha": "f401d0f52653fd3112d8b6a12dc4d474a0f9faaa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f401d0f52653fd3112d8b6a12dc4d474a0f9faaa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f401d0f52653fd3112d8b6a12dc4d474a0f9faaa"}], "stats": {"total": 34, "additions": 20, "deletions": 14}, "files": [{"sha": "9a558be16954364ce18b5c4826630e32049bbbaf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11fe27a56b9b4da5ecd8534bfe7fed755d2a1b42/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11fe27a56b9b4da5ecd8534bfe7fed755d2a1b42/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=11fe27a56b9b4da5ecd8534bfe7fed755d2a1b42", "patch": "@@ -1,3 +1,8 @@\n+2003-04-11  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* doc/c-tree.texi (Functions): Remove DECL_REAL_CONTEXT\n+\tdocumentation; add DECL_FRIEND_CONTEXT.\n+\n 2003-04-11  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n \n \t* doc/install.texi (hppa): Update links for HP-UX patches.  Revise"}, {"sha": "ff5a5fa54b6c39de258557aa49e2146fe157660c", "filename": "gcc/doc/c-tree.texi", "status": "modified", "additions": 15, "deletions": 14, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11fe27a56b9b4da5ecd8534bfe7fed755d2a1b42/gcc%2Fdoc%2Fc-tree.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11fe27a56b9b4da5ecd8534bfe7fed755d2a1b42/gcc%2Fdoc%2Fc-tree.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fc-tree.texi?ref=11fe27a56b9b4da5ecd8534bfe7fed755d2a1b42", "patch": "@@ -1021,34 +1021,35 @@ will always return the function itself, and @code{OVL_NEXT} will always\n be @code{NULL_TREE}.\n \n To determine the scope of a function, you can use the\n-@code{DECL_REAL_CONTEXT} macro.  This macro will return the class\n+@code{DECL_CONTEXT} macro.  This macro will return the class\n (either a @code{RECORD_TYPE} or a @code{UNION_TYPE}) or namespace (a\n @code{NAMESPACE_DECL}) of which the function is a member.  For a virtual\n function, this macro returns the class in which the function was\n actually defined, not the base class in which the virtual declaration\n-occurred.  If a friend function is defined in a class scope, the\n-@code{DECL_CLASS_CONTEXT} macro can be used to determine the class in\n+occurred.  \n+\n+If a friend function is defined in a class scope, the\n+@code{DECL_FRIEND_CONTEXT} macro can be used to determine the class in\n which it was defined.  For example, in\n @example\n class C @{ friend void f() @{@} @};\n @end example\n-the @code{DECL_REAL_CONTEXT} for @code{f} will be the\n-@code{global_namespace}, but the @code{DECL_CLASS_CONTEXT} will be the\n+@noindent\n+the @code{DECL_CONTEXT} for @code{f} will be the\n+@code{global_namespace}, but the @code{DECL_FRIEND_CONTEXT} will be the\n @code{RECORD_TYPE} for @code{C}.\n \n-The @code{DECL_REAL_CONTEXT} and @code{DECL_CLASS_CONTEXT} are not\n-available in C; instead you should simply use @code{DECL_CONTEXT}.  In C,\n-the @code{DECL_CONTEXT} for a function maybe another function.  This\n-representation indicates that the GNU nested function extension is in\n-use.  For details on the semantics of nested functions, see the GCC\n-Manual.  The nested function can refer to local variables in its\n+In C, the @code{DECL_CONTEXT} for a function maybe another function.\n+This representation indicates that the GNU nested function extension\n+is in use.  For details on the semantics of nested functions, see the\n+GCC Manual.  The nested function can refer to local variables in its\n containing function.  Such references are not explicitly marked in the\n tree structure; back ends must look at the @code{DECL_CONTEXT} for the\n referenced @code{VAR_DECL}.  If the @code{DECL_CONTEXT} for the\n referenced @code{VAR_DECL} is not the same as the function currently\n-being processed, and neither @code{DECL_EXTERNAL} nor @code{DECL_STATIC}\n-hold, then the reference is to a local variable in a containing\n-function, and the back end must take appropriate action.\n+being processed, and neither @code{DECL_EXTERNAL} nor\n+@code{DECL_STATIC} hold, then the reference is to a local variable in\n+a containing function, and the back end must take appropriate action.\n \n @menu\n * Function Basics::     Function names, linkage, and so forth."}]}