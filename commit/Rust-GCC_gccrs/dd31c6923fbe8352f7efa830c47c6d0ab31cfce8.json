{"sha": "dd31c6923fbe8352f7efa830c47c6d0ab31cfce8", "node_id": "C_kwDOANBUbNoAKGRkMzFjNjkyM2ZiZTgzNTJmN2VmYTgzMGM0N2M2ZDBhYjMxY2ZjZTg", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-11-09T20:16:49Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-11-10T05:32:38Z"}, "message": "doc: Modernize baseconf.py.\n\nChangeLog:\n\n\t* doc/baseconf.py: Modernize by using pathlib.", "tree": {"sha": "e43d3d6a774bdf29e5a05aea2eeb455fff75dfbb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e43d3d6a774bdf29e5a05aea2eeb455fff75dfbb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dd31c6923fbe8352f7efa830c47c6d0ab31cfce8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd31c6923fbe8352f7efa830c47c6d0ab31cfce8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd31c6923fbe8352f7efa830c47c6d0ab31cfce8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd31c6923fbe8352f7efa830c47c6d0ab31cfce8/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "70f1c41061b2b55ed4cdc2e83c7cf326c7ebe7a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70f1c41061b2b55ed4cdc2e83c7cf326c7ebe7a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70f1c41061b2b55ed4cdc2e83c7cf326c7ebe7a4"}], "stats": {"total": 34, "additions": 18, "deletions": 16}, "files": [{"sha": "8021a101e77144693c94af8a0a8df1c874d759c2", "filename": "doc/baseconf.py", "status": "modified", "additions": 18, "deletions": 16, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd31c6923fbe8352f7efa830c47c6d0ab31cfce8/doc%2Fbaseconf.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd31c6923fbe8352f7efa830c47c6d0ab31cfce8/doc%2Fbaseconf.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/doc%2Fbaseconf.py?ref=dd31c6923fbe8352f7efa830c47c6d0ab31cfce8", "patch": "@@ -11,29 +11,31 @@\n # documentation root, use os.path.abspath to make it absolute, like shown here.\n #\n import os\n-import time\n import sys\n+import time\n+from pathlib import Path\n \n-# gccint needs a deeper stack limit\n-sys.setrecursionlimit(2000)\n+# Build paths and add path to gcc_sphinx.py extension.\n+folder = Path(__file__).resolve().parent\n+doc_modules = folder / 'modules'\n+gcc_srcdir = folder / '..' / 'gcc'\n \n-# -- Project information -----------------------------------------------------\n+sys.path.insert(0, str(doc_modules))\n \n-# The full version, including alpha/beta/rc tags\n+# gccint needs a deeper stack limit.\n+sys.setrecursionlimit(2000)\n \n-folder = os.path.dirname(os.path.realpath(__file__))\n-doc_modules = os.path.join(folder, 'modules')\n-gcc_srcdir = os.path.join(folder, '..', 'gcc')\n+# -- Project information -----------------------------------------------------\n \n-sys.path.insert(0, doc_modules)\n \n def read_file(name):\n-    path = os.path.join(gcc_srcdir, name)\n-    if os.path.exists(path):\n+    path = gcc_srcdir / name\n+    if path.exists():\n         return open(path).read().strip()\n     else:\n         return ''\n \n+\n def __get_builder_name():\n     if '-b' in sys.argv:\n         return sys.argv[sys.argv.index('-b') + 1]\n@@ -124,14 +126,14 @@ def __get_builder_name():\n     'navigation_with_keys': True,\n }\n \n-html_logo = os.path.join(folder, 'logo.svg')\n+html_logo = str(folder / 'logo.svg')\n \n-html_favicon = os.path.join(folder, 'favicon.ico')\n+html_favicon = str(folder / 'favicon.ico')\n \n html_last_updated_fmt = ''\n \n html_static_path = [\n-    os.path.join(folder, '_static')\n+    str(folder / '_static')\n ]\n \n html_css_files = [\n@@ -149,7 +151,7 @@ def __get_builder_name():\n # Use xelatex by default\n latex_engine = 'xelatex'\n \n-latex_logo = os.path.join(folder, 'logo.pdf')\n+latex_logo = str(folder / 'logo.pdf')\n \n latex_elements = {\n     'pointsize': '11pt',\n@@ -215,4 +217,4 @@ def set_common(name, module):\n         module['tags'].add('development')\n \n     html_theme_options['source_edit_link'] = f'https://gcc.gnu.org/onlinedocs/{name}' \\\n-                                               '/_sources/{filename}.txt'\n+                                             '/_sources/{filename}.txt'"}]}