{"sha": "2f11881446ab72f0e85eedb8391ae47cd89d3244", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmYxMTg4MTQ0NmFiNzJmMGU4NWVlZGI4MzkxYWU0N2NkODlkMzI0NA==", "commit": {"author": {"name": "Tobias Schl\u00fcter", "email": "tobi@gcc.gnu.org", "date": "2007-04-12T16:53:26Z"}, "committer": {"name": "Tobias Schl\u00fcter", "email": "tobi@gcc.gnu.org", "date": "2007-04-12T16:53:26Z"}, "message": "arith.c (gfc_arith_uplus): Rename to ...\n\n* arith.c (gfc_arith_uplus): Rename to ...\n(gfc_arith_identity): ... this.\n(gfc_parentheses): New function.\n(gfc_uplus): Adapt to renamed function.\n* arith.h (gfc_parentheses): Add prototype.\n* expr.c (gfc_copy_expr): Deal with INTRINSIC_PARENTHESES.\n(simplifiy_intrinsic_op): Treat INTRINSIC_UPLUS separately from\nINTRINSIC_PARENTHESES.\n\nFrom-SVN: r123750", "tree": {"sha": "1be65cae232e27fb532bca1c95d395b50376e17f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1be65cae232e27fb532bca1c95d395b50376e17f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2f11881446ab72f0e85eedb8391ae47cd89d3244", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f11881446ab72f0e85eedb8391ae47cd89d3244", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f11881446ab72f0e85eedb8391ae47cd89d3244", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f11881446ab72f0e85eedb8391ae47cd89d3244/comments", "author": {"login": "TobiSchluter", "id": 11887541, "node_id": "MDQ6VXNlcjExODg3NTQx", "avatar_url": "https://avatars.githubusercontent.com/u/11887541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TobiSchluter", "html_url": "https://github.com/TobiSchluter", "followers_url": "https://api.github.com/users/TobiSchluter/followers", "following_url": "https://api.github.com/users/TobiSchluter/following{/other_user}", "gists_url": "https://api.github.com/users/TobiSchluter/gists{/gist_id}", "starred_url": "https://api.github.com/users/TobiSchluter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TobiSchluter/subscriptions", "organizations_url": "https://api.github.com/users/TobiSchluter/orgs", "repos_url": "https://api.github.com/users/TobiSchluter/repos", "events_url": "https://api.github.com/users/TobiSchluter/events{/privacy}", "received_events_url": "https://api.github.com/users/TobiSchluter/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TobiSchluter", "id": 11887541, "node_id": "MDQ6VXNlcjExODg3NTQx", "avatar_url": "https://avatars.githubusercontent.com/u/11887541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TobiSchluter", "html_url": "https://github.com/TobiSchluter", "followers_url": "https://api.github.com/users/TobiSchluter/followers", "following_url": "https://api.github.com/users/TobiSchluter/following{/other_user}", "gists_url": "https://api.github.com/users/TobiSchluter/gists{/gist_id}", "starred_url": "https://api.github.com/users/TobiSchluter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TobiSchluter/subscriptions", "organizations_url": "https://api.github.com/users/TobiSchluter/orgs", "repos_url": "https://api.github.com/users/TobiSchluter/repos", "events_url": "https://api.github.com/users/TobiSchluter/events{/privacy}", "received_events_url": "https://api.github.com/users/TobiSchluter/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2d3649b23f90ddd51b968a00c8e8ab6ccf5bd93c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d3649b23f90ddd51b968a00c8e8ab6ccf5bd93c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d3649b23f90ddd51b968a00c8e8ab6ccf5bd93c"}], "stats": {"total": 32, "additions": 28, "deletions": 4}, "files": [{"sha": "1ea91781a74ddc146fb55deba184f79e9d8dc9d4", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f11881446ab72f0e85eedb8391ae47cd89d3244/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f11881446ab72f0e85eedb8391ae47cd89d3244/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=2f11881446ab72f0e85eedb8391ae47cd89d3244", "patch": "@@ -1,3 +1,14 @@\n+2007-04-12  Tobias Schl\ufffdter  <tobi@gcc.gnu.org>\n+\n+\t* arith.c (gfc_arith_uplus): Rename to ...\n+\t(gfc_arith_identity): ... this.\n+\t(gfc_parentheses): New function.\n+\t(gfc_uplus): Adapt to renamed function.\n+\t* arith.h (gfc_parentheses): Add prototype.\n+\t* expr.c (gfc_copy_expr): Deal with INTRINSIC_PARENTHESES.\n+\t(simplifiy_intrinsic_op): Treat INTRINSIC_UPLUS separately from\n+\tINTRINSIC_PARENTHESES.\n+\n 2007-04-12  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/31472"}, {"sha": "8c995ea3b2d9c56a696855be25453777c6548d04", "filename": "gcc/fortran/arith.c", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f11881446ab72f0e85eedb8391ae47cd89d3244/gcc%2Ffortran%2Farith.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f11881446ab72f0e85eedb8391ae47cd89d3244/gcc%2Ffortran%2Farith.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Farith.c?ref=2f11881446ab72f0e85eedb8391ae47cd89d3244", "patch": "@@ -595,10 +595,11 @@ check_result (arith rc, gfc_expr *x, gfc_expr *r, gfc_expr **rp)\n \n /* It may seem silly to have a subroutine that actually computes the\n    unary plus of a constant, but it prevents us from making exceptions\n-   in the code elsewhere.  */\n+   in the code elsewhere.  Used for unary plus and parenthesized\n+   expressions.  */\n \n static arith\n-gfc_arith_uplus (gfc_expr *op1, gfc_expr **resultp)\n+gfc_arith_identity (gfc_expr *op1, gfc_expr **resultp)\n {\n   *resultp = gfc_copy_expr (op1);\n   return ARITH_OK;\n@@ -1762,10 +1763,17 @@ eval_intrinsic_f3 (gfc_intrinsic_op operator,\n }\n \n \n+gfc_expr *\n+gfc_parentheses (gfc_expr *op)\n+{\n+  return eval_intrinsic_f2 (INTRINSIC_PARENTHESES, gfc_arith_identity,\n+\t\t\t    op, NULL);\n+}\n+\n gfc_expr *\n gfc_uplus (gfc_expr *op)\n {\n-  return eval_intrinsic_f2 (INTRINSIC_UPLUS, gfc_arith_uplus, op, NULL);\n+  return eval_intrinsic_f2 (INTRINSIC_UPLUS, gfc_arith_identity, op, NULL);\n }\n \n "}, {"sha": "6a45108bbade4cdc2bdeafa2a883a86469c0dcac", "filename": "gcc/fortran/arith.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f11881446ab72f0e85eedb8391ae47cd89d3244/gcc%2Ffortran%2Farith.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f11881446ab72f0e85eedb8391ae47cd89d3244/gcc%2Ffortran%2Farith.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Farith.h?ref=2f11881446ab72f0e85eedb8391ae47cd89d3244", "patch": "@@ -43,6 +43,7 @@ int gfc_compare_expr (gfc_expr *, gfc_expr *);\n int gfc_compare_string (gfc_expr *, gfc_expr *);\n \n /* Constant folding for gfc_expr trees.  */\n+gfc_expr *gfc_parentheses (gfc_expr * op);\n gfc_expr *gfc_uplus (gfc_expr * op);\n gfc_expr *gfc_uminus (gfc_expr * op);\n gfc_expr *gfc_add (gfc_expr *, gfc_expr *);"}, {"sha": "f2064fb42fa15bcd6b12f213adc31c7989a0fc95", "filename": "gcc/fortran/expr.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f11881446ab72f0e85eedb8391ae47cd89d3244/gcc%2Ffortran%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f11881446ab72f0e85eedb8391ae47cd89d3244/gcc%2Ffortran%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fexpr.c?ref=2f11881446ab72f0e85eedb8391ae47cd89d3244", "patch": "@@ -465,6 +465,7 @@ gfc_copy_expr (gfc_expr *p)\n       switch (q->value.op.operator)\n \t{\n \tcase INTRINSIC_NOT:\n+\tcase INTRINSIC_PARENTHESES:\n \tcase INTRINSIC_UPLUS:\n \tcase INTRINSIC_UMINUS:\n \t  q->value.op.op1 = gfc_copy_expr (p->value.op.op1);\n@@ -771,8 +772,11 @@ simplify_intrinsic_op (gfc_expr *p, int type)\n \n   switch (p->value.op.operator)\n     {\n-    case INTRINSIC_UPLUS:\n     case INTRINSIC_PARENTHESES:\n+      result = gfc_parentheses (op1);\n+      break;\n+\n+    case INTRINSIC_UPLUS:\n       result = gfc_uplus (op1);\n       break;\n "}]}