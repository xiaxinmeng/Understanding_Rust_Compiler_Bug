{"sha": "3e41d13b038153f299e0778130d676f6315be58b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2U0MWQxM2IwMzgxNTNmMjk5ZTA3NzgxMzBkNjc2ZjYzMTViZTU4Yg==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "1999-05-30T14:41:33Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "1999-05-30T14:41:33Z"}, "message": "decl.c (start_decl): Move checks on initialization to ...\n\n\t* decl.c (start_decl): Move checks on initialization to ...\n\t(cp_finish_decl): Here.  Tidy formatting slightly.\n\nFrom-SVN: r27252", "tree": {"sha": "bfef7dea0addeb5d679ef6c72937f2e0ec8aaeaa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bfef7dea0addeb5d679ef6c72937f2e0ec8aaeaa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3e41d13b038153f299e0778130d676f6315be58b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e41d13b038153f299e0778130d676f6315be58b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e41d13b038153f299e0778130d676f6315be58b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e41d13b038153f299e0778130d676f6315be58b/comments", "author": null, "committer": null, "parents": [{"sha": "79f565f6bd80427f87c6d605497c5ca5d9bb2123", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79f565f6bd80427f87c6d605497c5ca5d9bb2123", "html_url": "https://github.com/Rust-GCC/gccrs/commit/79f565f6bd80427f87c6d605497c5ca5d9bb2123"}], "stats": {"total": 78, "additions": 52, "deletions": 26}, "files": [{"sha": "99f26355ffa969826e9647a462d33974b174cae6", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e41d13b038153f299e0778130d676f6315be58b/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e41d13b038153f299e0778130d676f6315be58b/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=3e41d13b038153f299e0778130d676f6315be58b", "patch": "@@ -1,3 +1,8 @@\n+1999-05-30  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* decl.c (start_decl): Move checks on initialization to ...\n+\t(cp_finish_decl): Here.  Tidy formatting slightly.\n+\n 1999-05-28  Mark Mitchell  <mark@codesourcery.com>\n \n \t* decl.c (add_binding): Don't complain about a redeclaration of a"}, {"sha": "c30fa7caf59bceb8a179ce7ab8fe097179e3b7cf", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 20, "deletions": 26, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e41d13b038153f299e0778130d676f6315be58b/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e41d13b038153f299e0778130d676f6315be58b/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=3e41d13b038153f299e0778130d676f6315be58b", "patch": "@@ -7305,28 +7305,7 @@ start_decl (declarator, declspecs, initialized, attributes, prefix_attributes)\n \tbreak;\n \n       default:\n-\tif (! processing_template_decl)\n-\t  {\n-\t    if (type != error_mark_node)\n-\t      {\n-\t\tif (TYPE_SIZE (type) != NULL_TREE\n-\t\t    && ! TREE_CONSTANT (TYPE_SIZE (type)))\n-\t\t  {\n-\t\t    cp_error\n-\t\t      (\"variable-sized object `%D' may not be initialized\",\n-\t\t       decl);\n-\t\t    initialized = 0;\n-\t\t  }\n-\n-\t\tif (TREE_CODE (type) == ARRAY_TYPE\n-\t\t    && TYPE_SIZE (complete_type (TREE_TYPE (type))) == NULL_TREE)\n-\t\t  {\n-\t\t    cp_error\n-\t\t      (\"elements of array `%#D' have incomplete type\", decl);\n-\t\t    initialized = 0;\n-\t\t  }\n-\t      }\n-\t  }\n+\tbreak;\n       }\n \n   if (initialized)\n@@ -7820,6 +7799,7 @@ cp_finish_decl (decl, init, asmspec_tree, need_pop, flags)\n \n       goto finish_end0;\n     }\n+\n   /* Take care of TYPE_DECLs up front.  */\n   if (TREE_CODE (decl) == TYPE_DECL)\n     {\n@@ -7850,15 +7830,13 @@ cp_finish_decl (decl, init, asmspec_tree, need_pop, flags)\n \t\t\t\tDECL_CONTEXT (decl) == NULL_TREE, at_eof);\n       goto finish_end;\n     }\n+\n   if (TREE_CODE (decl) != FUNCTION_DECL)\n-    {\n-      ttype = target_type (type);\n-    }\n+    ttype = target_type (type);\n \n   if (! DECL_EXTERNAL (decl) && TREE_READONLY (decl)\n       && TYPE_NEEDS_CONSTRUCTING (type))\n     {\n-\n       /* Currently, GNU C++ puts constants in text space, making them\n \t impossible to initialize.  In the future, one would hope for\n \t an operating system which understood the difference between\n@@ -7897,6 +7875,22 @@ cp_finish_decl (decl, init, asmspec_tree, need_pop, flags)\n       init = NULL_TREE;\n     }\n \n+  /* Check for certain invalid initializations.  */\n+  if (init)\n+    {\n+      if (TYPE_SIZE (type) && !TREE_CONSTANT (TYPE_SIZE (type)))\n+\t{\n+\t  cp_error (\"variable-sized object `%D' may not be initialized\", decl);\n+\t  init = NULL_TREE;\n+\t}\n+      if (TREE_CODE (type) == ARRAY_TYPE\n+\t  && !TYPE_SIZE (complete_type (TREE_TYPE (type))))\n+\t{\n+\t  cp_error (\"elements of array `%#D' have incomplete type\", decl);\n+\t  init = NULL_TREE;\n+\t}\n+    }\n+\n   GNU_xref_decl (current_function_decl, decl);\n \n   core_type = type;"}, {"sha": "35484a3c22a31f43c73da43ea095333344a92196", "filename": "gcc/testsuite/g++.old-deja/g++.pt/static9.C", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e41d13b038153f299e0778130d676f6315be58b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fstatic9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e41d13b038153f299e0778130d676f6315be58b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fstatic9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fstatic9.C?ref=3e41d13b038153f299e0778130d676f6315be58b", "patch": "@@ -0,0 +1,27 @@\n+// Build don't link:\n+// Origin: Mark Mitchell <mark@codesourcery.com>\n+\n+template <class T>\n+struct S {\n+  int i;\n+};\n+\n+template <class T>\n+struct X {\n+  static S<T> s[];\n+};\n+\n+template <class T>\n+S<T> X<T>::s[] = {\n+  { 3 } \n+};\n+\n+struct Z {};\n+\n+void f(S<Z>* s);\n+\n+void g()\n+{\n+  f (X<Z>::s);\n+}\n+"}]}