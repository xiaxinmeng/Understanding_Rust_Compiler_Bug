{"sha": "7567d496ec32e1e233aed895e938e7930dea65b2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzU2N2Q0OTZlYzMyZTFlMjMzYWVkODk1ZTkzOGU3OTMwZGVhNjViMg==", "commit": {"author": {"name": "Manfred Hollstein", "email": "manfred@s-direktnet.de", "date": "1997-12-12T06:53:30Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1997-12-12T06:53:30Z"}, "message": "fixincludes (str{len,spn,cspn} return value): Handle different layout on sysV88.\n\n        * fixincludes (str{len,spn,cspn} return value): Handle different\n        layout on sysV88.\n        (hypot): Provide a fake for hypot which is broken on\n        m88k-motorola-sysv3.\n\nFrom-SVN: r17062", "tree": {"sha": "78afe9a65c7b4ceca4360d1c736af21e267a398d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/78afe9a65c7b4ceca4360d1c736af21e267a398d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7567d496ec32e1e233aed895e938e7930dea65b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7567d496ec32e1e233aed895e938e7930dea65b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7567d496ec32e1e233aed895e938e7930dea65b2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7567d496ec32e1e233aed895e938e7930dea65b2/comments", "author": null, "committer": null, "parents": [{"sha": "0a6969ad7cfe5a44854a2e19a8c38505862c2528", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a6969ad7cfe5a44854a2e19a8c38505862c2528", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a6969ad7cfe5a44854a2e19a8c38505862c2528"}], "stats": {"total": 53, "additions": 53, "deletions": 0}, "files": [{"sha": "e88615fe11de1db95f6794bd2263c55534654ae1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7567d496ec32e1e233aed895e938e7930dea65b2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7567d496ec32e1e233aed895e938e7930dea65b2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7567d496ec32e1e233aed895e938e7930dea65b2", "patch": "@@ -1,3 +1,10 @@\n+Thu Dec 11 23:55:17 1997  Manfred Hollstein  <manfred@s-direktnet.de>\n+\n+\t* fixincludes (str{len,spn,cspn} return value): Handle different\n+\tlayout on sysV88.\n+\t(hypot): Provide a fake for hypot which is broken on \n+\tm88k-motorola-sysv3.\n+\n Thu Dec 11 23:50:17 1997  John F. Carr  <jfc@mit.edu>\n \n \t* tree.c, tree.h: Change tree_code_type, tree_code_length, and"}, {"sha": "80032e624d6eddce14d70fca80c43481ee392d13", "filename": "gcc/fixincludes", "status": "modified", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7567d496ec32e1e233aed895e938e7930dea65b2/gcc%2Ffixincludes", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7567d496ec32e1e233aed895e938e7930dea65b2/gcc%2Ffixincludes", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixincludes?ref=7567d496ec32e1e233aed895e938e7930dea65b2", "patch": "@@ -12,6 +12,14 @@ INPUT=${2-${INPUT-/usr/include}}\n # Directory in which to store the results.\n LIB=${1?\"fixincludes: output directory not specified\"}\n \n+# Define what target system we're fixing.\n+if test -r ./Makefile; then\n+\ttarget_canonical=\"`sed -n -e 's,^target[ \t]*=[ \t]*\\(.*\\)$,\\1,p' < Makefile`\"\n+\ttest -z \"${target_canonical}\" && target_canonical=unknown\n+else\n+\ttarget_canonical=unknown\n+fi\n+\n # Define PWDCMD as a command to use to get the working dir\n # in the form that we want.\n PWDCMD=pwd\n@@ -1983,6 +1991,7 @@ fi\n # Correct the return type for strlen in string.h on Lynx.\n # Correct the argument type for ffs in string.h on Alpha OSF/1 V2.0.\n # Add missing const for strdup on OSF/1 V3.0.\n+# On sysV88 layout is slightly different.\n file=string.h\n if [ -r $file ] && [ ! -r ${LIB}/$file ]; then\n   cp $file ${LIB}/$file >/dev/null 2>&1 || echo \"Can't copy $file\"\n@@ -2001,6 +2010,8 @@ if [ -r ${LIB}/$file ]; then\n       -e 's/^\\(\tstrncmp()\\),\\n\\(\tstrlen(),\\)$/\\1;\\\n extern unsigned int\\\n \\2/'\\\n+      -e '/^extern int$/N'\\\n+      -e 's/^extern int\\(\\n\tstrlen(),\\)/extern size_t\\1/' \\\n     ${LIB}/$file > ${LIB}/${file}.sed\n   rm -f ${LIB}/$file; mv ${LIB}/${file}.sed ${LIB}/$file\n   if cmp $file ${LIB}/$file >/dev/null 2>&1; then\n@@ -2286,6 +2297,41 @@ do\n   fi\n done\n \n+# libm.a on m88k-motorola-sysv3 contains a stupid optimization for function\n+# hypot(), which returns the second argument without even looking at its value\n+# if the other is 0.0\n+file=math.h\n+if [ $target_canonical = m88k-motorola-sysv3 ]; then\n+  if [ -r $file ] && [ ! -r ${LIB}/$file ]; then\n+    cp $file ${LIB}/$file >/dev/null 2>&1 || echo \"Can't copy $file\"\n+    chmod +w ${LIB}/$file 2>/dev/null\n+    chmod a+r ${LIB}/$file 2>/dev/null\n+  fi\n+\n+  if [ -r ${LIB}/$file ]; then\n+    echo Fixing $file, hypot definition\n+    sed -e '/^extern double hypot();$/a\\\n+\\/* Workaround a stupid Motorola optimization if one\\\n+   of x or y is 0.0 and the other is negative!  *\\/\\\n+#ifdef __STDC__\\\n+static __inline__ double fake_hypot (double x, double y)\\\n+#else\\\n+static __inline__ double fake_hypot (x, y)\\\n+\tdouble x, y;\\\n+#endif\\\n+{\\\n+\treturn fabs (hypot (x, y));\\\n+}\\\n+#define hypot\tfake_hypot\n+' \\\n+      ${LIB}/$file > ${LIB}/${file}.sed\n+    rm -f ${LIB}/$file; mv ${LIB}/${file}.sed ${LIB}/$file\n+    if cmp $file ${LIB}/$file >/dev/null 2>&1; then\n+      rm -f ${LIB}/$file\n+    fi\n+  fi\n+fi\n+\n # math.h on SunOS 4 puts the declaration of matherr before the definition\n # of struct exception, so the prototype (added by fixproto) causes havoc.\n file=math.h"}]}