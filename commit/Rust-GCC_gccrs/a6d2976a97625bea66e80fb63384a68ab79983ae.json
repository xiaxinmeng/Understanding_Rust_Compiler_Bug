{"sha": "a6d2976a97625bea66e80fb63384a68ab79983ae", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTZkMjk3NmE5NzYyNWJlYTY2ZTgwZmI2MzM4NGE2OGFiNzk5ODNhZQ==", "commit": {"author": {"name": "John David Anglin", "email": "dave.anglin@nrc-cnrc.gc.ca", "date": "2005-01-25T02:05:39Z"}, "committer": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2005-01-25T02:05:39Z"}, "message": "re PR middle-end/19330 (FAIL: gcc.c-torture/execute/20010605-2.c execution,  -O1)\n\n\tPR middle-end/19330\n\t* expmed.c (extract_bit_field): Use adjust_address instead of\n\tgen_lowpart when op0 is a MEM.\n\nFrom-SVN: r94198", "tree": {"sha": "b576041624d3bad6fd68a1738327a69f924f2bd7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b576041624d3bad6fd68a1738327a69f924f2bd7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a6d2976a97625bea66e80fb63384a68ab79983ae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6d2976a97625bea66e80fb63384a68ab79983ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6d2976a97625bea66e80fb63384a68ab79983ae", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6d2976a97625bea66e80fb63384a68ab79983ae/comments", "author": null, "committer": null, "parents": [{"sha": "83c8f106f9ad3852cdfbc5bdf92e5e8086d2ff9f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83c8f106f9ad3852cdfbc5bdf92e5e8086d2ff9f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/83c8f106f9ad3852cdfbc5bdf92e5e8086d2ff9f"}], "stats": {"total": 22, "additions": 17, "deletions": 5}, "files": [{"sha": "702f8ccb17f3782ad94fd135e331e90a7ee94f40", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6d2976a97625bea66e80fb63384a68ab79983ae/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6d2976a97625bea66e80fb63384a68ab79983ae/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a6d2976a97625bea66e80fb63384a68ab79983ae", "patch": "@@ -1,3 +1,9 @@\n+2005-01-24  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n+\n+\tPR middle-end/19330\n+\t* expmed.c (extract_bit_field): Use adjust_address instead of\n+\tgen_lowpart when op0 is a MEM.\n+\n 2005-01-24  Steven Bosscher  <stevenb@suse.de>\n \n \t* cfgexpand.c (expand_gimple_tailcall): Fix typo."}, {"sha": "47b3d0db311e88d8883d9646e030663209a12eec", "filename": "gcc/expmed.c", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6d2976a97625bea66e80fb63384a68ab79983ae/gcc%2Fexpmed.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6d2976a97625bea66e80fb63384a68ab79983ae/gcc%2Fexpmed.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpmed.c?ref=a6d2976a97625bea66e80fb63384a68ab79983ae", "patch": "@@ -1158,12 +1158,18 @@ extract_bit_field (rtx str_rtx, unsigned HOST_WIDE_INT bitsize,\n     enum machine_mode imode = int_mode_for_mode (GET_MODE (op0));\n     if (imode != GET_MODE (op0))\n       {\n-\top0 = gen_lowpart (imode, op0);\n+\tif (MEM_P (op0))\n+\t  op0 = adjust_address (op0, imode, 0);\n+\telse\n+\t  {\n+\t    gcc_assert (imode != BLKmode);\n+\t    op0 = gen_lowpart (imode, op0);\n \n-\t/* If we got a SUBREG, force it into a register since we aren't going\n-\t   to be able to do another SUBREG on it.  */\n-\tif (GET_CODE (op0) == SUBREG)\n-\t  op0 = force_reg (imode, op0);\n+\t    /* If we got a SUBREG, force it into a register since we\n+\t       aren't going to be able to do another SUBREG on it.  */\n+\t    if (GET_CODE (op0) == SUBREG)\n+\t      op0 = force_reg (imode, op0);\n+\t  }\n       }\n   }\n "}]}