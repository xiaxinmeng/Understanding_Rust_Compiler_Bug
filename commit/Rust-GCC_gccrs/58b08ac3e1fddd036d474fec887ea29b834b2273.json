{"sha": "58b08ac3e1fddd036d474fec887ea29b834b2273", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NThiMDhhYzNlMWZkZGQwMzZkNDc0ZmVjODg3ZWEyOWI4MzRiMjI3Mw==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2001-08-10T06:50:34Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2001-08-10T06:50:34Z"}, "message": "acconfig.h (_GLIBCPP_MEM_LIMITS): Define.\n\n\n2001-08-09  Benjamin Kosnik  <bkoz@redhat.com>\n\n\t* acconfig.h (_GLIBCPP_MEM_LIMITS): Define.\n\t* config.h.in: Regenerate.\n\t* acinclude.m4 (GLIBCPP_CHECK_SETRLIMIT): Check for setrlimit\n\tfunction.\n\t* aclocal.m4: Regenerate.\n\t* configure.in: Remove duplicate AM_CONFIG_HEADER.\n\t(AM_CONFIG_HEADER): Remove testsuite/testsuite_hooks.h.\n\tOnly call GLIBCPP_CHECK_SETRLIMIT for native compiles.\n\t* configure: Regenerate.\n\t* testsuite_hooks.h.in: Move to...\n\t* testsuite_hooks.h: Here, include c++config.h. Use it.\n\n\t* Makefile.am (SUBDIRS): Move testsuite to last directory.\n\t* Makefile.in: Regenerate.\n\t* po/Makefile.am (stamp-po): Add.\n\nFrom-SVN: r44752", "tree": {"sha": "04b8551ca00883edbe9b5d35597357f71f960e3d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/04b8551ca00883edbe9b5d35597357f71f960e3d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/58b08ac3e1fddd036d474fec887ea29b834b2273", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58b08ac3e1fddd036d474fec887ea29b834b2273", "html_url": "https://github.com/Rust-GCC/gccrs/commit/58b08ac3e1fddd036d474fec887ea29b834b2273", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58b08ac3e1fddd036d474fec887ea29b834b2273/comments", "author": null, "committer": null, "parents": [{"sha": "396ad5177cd6efc2dd508bd44beb0197254ee029", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/396ad5177cd6efc2dd508bd44beb0197254ee029", "html_url": "https://github.com/Rust-GCC/gccrs/commit/396ad5177cd6efc2dd508bd44beb0197254ee029"}], "stats": {"total": 2425, "additions": 1221, "deletions": 1204}, "files": [{"sha": "e5f50f4f7d1dbbe2e3bec2456ecf5e556915da5e", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58b08ac3e1fddd036d474fec887ea29b834b2273/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58b08ac3e1fddd036d474fec887ea29b834b2273/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=58b08ac3e1fddd036d474fec887ea29b834b2273", "patch": "@@ -1,3 +1,21 @@\n+2001-08-09  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\t* acconfig.h (_GLIBCPP_MEM_LIMITS): Define.\n+\t* config.h.in: Regenerate.\n+\t* acinclude.m4 (GLIBCPP_CHECK_SETRLIMIT): Check for setrlimit\n+\tfunction.\n+\t* aclocal.m4: Regenerate.\n+\t* configure.in: Remove duplicate AM_CONFIG_HEADER.\n+\t(AM_CONFIG_HEADER): Remove testsuite/testsuite_hooks.h.\n+\tOnly call GLIBCPP_CHECK_SETRLIMIT for native compiles.\n+\t* configure: Regenerate.\n+\t* testsuite_hooks.h.in: Move to...\n+\t* testsuite_hooks.h: Here, include c++config.h. Use it.\n+\t\n+\t* Makefile.am (SUBDIRS): Move testsuite to last directory.\n+\t* Makefile.in: Regenerate.\n+\t* po/Makefile.am (stamp-po): Add.\n+\n 2001-08-09  David Edelsohn  <edelsohn@gnu.org>\n \n \t* config/os/aix/bits/os_defines.h: Define std_limits.h macros."}, {"sha": "f5850520f3bdc5d41ee5755f5f984ee316a6872b", "filename": "libstdc++-v3/Makefile.am", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58b08ac3e1fddd036d474fec887ea29b834b2273/libstdc%2B%2B-v3%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58b08ac3e1fddd036d474fec887ea29b834b2273/libstdc%2B%2B-v3%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FMakefile.am?ref=58b08ac3e1fddd036d474fec887ea29b834b2273", "patch": "@@ -1,6 +1,6 @@\n ## Makefile for the toplevel directory of the GNU C++ Standard library.\n ##\n-## Copyright (C) 1997,1998, 1999, 2000, 2001 Free Software Foundation, Inc.\n+## Copyright (C) 1997, 1998, 1999, 2000, 2001 Free Software Foundation, Inc.\n ##\n ## This file is part of the libstdc++ version 3 distribution.\n ## Process this file with automake to produce Makefile.in.\n@@ -24,7 +24,7 @@\n AUTOMAKE_OPTIONS = 1.3 cygnus\n MAINT_CHARSET = latin1\n \n-SUBDIRS = include libio libmath libsupc++ src testsuite po intl\n+SUBDIRS = include libio libmath libsupc++ src po intl testsuite \n \n mkinstalldirs = $(SHELL) $(toplevel_srcdir)/mkinstalldirs\n "}, {"sha": "152173de00f6bc36742974cb349820bb21f71a15", "filename": "libstdc++-v3/Makefile.in", "status": "modified", "additions": 18, "deletions": 37, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58b08ac3e1fddd036d474fec887ea29b834b2273/libstdc%2B%2B-v3%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58b08ac3e1fddd036d474fec887ea29b834b2273/libstdc%2B%2B-v3%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FMakefile.in?ref=58b08ac3e1fddd036d474fec887ea29b834b2273", "patch": "@@ -150,7 +150,7 @@ toplevel_srcdir = @toplevel_srcdir@\n AUTOMAKE_OPTIONS = 1.3 cygnus\n MAINT_CHARSET = latin1\n \n-SUBDIRS = include libio libmath libsupc++ src testsuite po intl\n+SUBDIRS = include libio libmath libsupc++ src po intl testsuite \n \n mkinstalldirs = $(SHELL) $(toplevel_srcdir)/mkinstalldirs\n \n@@ -171,11 +171,11 @@ MULTICLEAN = true\n AM_MAKEFLAGS =  \t\"AR_FLAGS=$(AR_FLAGS)\" \t\"CC_FOR_BUILD=$(CC_FOR_BUILD)\" \t\"CC_FOR_TARGET=$(CC_FOR_TARGET)\" \t\"CFLAGS=$(CFLAGS)\" \t\"CXXFLAGS=$(CXXFLAGS)\" \t\"CFLAGS_FOR_BUILD=$(CFLAGS_FOR_BUILD)\" \t\"CFLAGS_FOR_TARGET=$(CFLAGS_FOR_TARGET)\" \t\"INSTALL=$(INSTALL)\" \t\"INSTALL_DATA=$(INSTALL_DATA)\" \t\"INSTALL_PROGRAM=$(INSTALL_PROGRAM)\" \t\"INSTALL_SCRIPT=$(INSTALL_SCRIPT)\" \t\"LDFLAGS=$(LDFLAGS)\" \t\"LIBCFLAGS=$(LIBCFLAGS)\" \t\"LIBCFLAGS_FOR_TARGET=$(LIBCFLAGS_FOR_TARGET)\" \t\"MAKE=$(MAKE)\" \t\"MAKEINFO=$(MAKEINFO) $(MAKEINFOFLAGS)\" \t\"PICFLAG=$(PICFLAG)\" \t\"PICFLAG_FOR_TARGET=$(PICFLAG_FOR_TARGET)\" \t\"SHELL=$(SHELL)\" \t\"RUNTESTFLAGS=$(RUNTESTFLAGS)\" \t\"exec_prefix=$(exec_prefix)\" \t\"infodir=$(infodir)\" \t\"libdir=$(libdir)\" \t\"includedir=$(includedir)\" \t\"prefix=$(prefix)\" \t\"tooldir=$(tooldir)\" \t\"AR=$(AR)\" \t\"AS=$(AS)\" \t\"LD=$(LD)\" \t\"LIBCFLAGS=$(LIBCFLAGS)\" \t\"PICFLAG=$(PICFLAG)\" \t\"RANLIB=$(RANLIB)\" \t\"NM=$(NM)\" \t\"NM_FOR_BUILD=$(NM_FOR_BUILD)\" \t\"NM_FOR_TARGET=$(NM_FOR_TARGET)\" \t\"DESTDIR=$(DESTDIR)\" \t\"WERROR=$(WERROR)\" \n \n ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n-CONFIG_HEADER = config.h config.h ./testsuite/testsuite_hooks.h\n+CONFIG_HEADER = config.h\n CONFIG_CLEAN_FILES =  mkcheck testsuite_flags\n-DIST_COMMON =  README ./stamp-h1.in ./stamp-h2.in ChangeLog Makefile.am \\\n-Makefile.in acconfig.h acinclude.m4 aclocal.m4 config.h.in configure \\\n-configure.in mkcheck.in testsuite_flags.in\n+DIST_COMMON =  README ./stamp-h.in ChangeLog Makefile.am Makefile.in \\\n+acconfig.h acinclude.m4 aclocal.m4 config.h.in configure configure.in \\\n+mkcheck.in testsuite_flags.in\n \n \n DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)\n@@ -199,50 +199,31 @@ config.status: $(srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)\n $(srcdir)/configure: @MAINTAINER_MODE_TRUE@$(srcdir)/configure.in $(ACLOCAL_M4) $(CONFIGURE_DEPENDENCIES)\n \tcd $(srcdir) && $(AUTOCONF)\n \n-config.h: stamp-h1\n+config.h: stamp-h\n \t@if test ! -f $@; then \\\n-\t\trm -f stamp-h1; \\\n-\t\t$(MAKE) stamp-h1; \\\n+\t\trm -f stamp-h; \\\n+\t\t$(MAKE) stamp-h; \\\n \telse :; fi\n-stamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.status\n+stamp-h: $(srcdir)/config.h.in $(top_builddir)/config.status\n \tcd $(top_builddir) \\\n \t  && CONFIG_FILES= CONFIG_HEADERS=config.h \\\n \t     $(SHELL) ./config.status\n-\t@echo timestamp > stamp-h1 2> /dev/null\n-$(srcdir)/config.h.in: @MAINTAINER_MODE_TRUE@$(srcdir)/stamp-h1.in\n+\t@echo timestamp > stamp-h 2> /dev/null\n+$(srcdir)/config.h.in: @MAINTAINER_MODE_TRUE@$(srcdir)/stamp-h.in\n \t@if test ! -f $@; then \\\n-\t\trm -f $(srcdir)/stamp-h1.in; \\\n-\t\t$(MAKE) $(srcdir)/stamp-h1.in; \\\n+\t\trm -f $(srcdir)/stamp-h.in; \\\n+\t\t$(MAKE) $(srcdir)/stamp-h.in; \\\n \telse :; fi\n-$(srcdir)/stamp-h1.in: $(top_srcdir)/configure.in $(ACLOCAL_M4) acconfig.h\n+$(srcdir)/stamp-h.in: $(top_srcdir)/configure.in $(ACLOCAL_M4) acconfig.h\n \tcd $(top_srcdir) && $(AUTOHEADER)\n-\t@echo timestamp > $(srcdir)/stamp-h1.in 2> /dev/null\n-\n-config.h: stamp-h2\n-\t@if test ! -f $@; then \\\n-\t\trm -f stamp-h2; \\\n-\t\t$(MAKE) stamp-h2; \\\n-\telse :; fi\n-stamp-h2: $(srcdir)/config.h.in $(top_builddir)/config.status\n-\tcd $(top_builddir) \\\n-\t  && CONFIG_FILES= CONFIG_HEADERS=config.h \\\n-\t     $(SHELL) ./config.status\n-\t@echo timestamp > stamp-h2 2> /dev/null\n-$(srcdir)/config.h.in: @MAINTAINER_MODE_TRUE@$(srcdir)/stamp-h2.in\n-\t@if test ! -f $@; then \\\n-\t\trm -f $(srcdir)/stamp-h2.in; \\\n-\t\t$(MAKE) $(srcdir)/stamp-h2.in; \\\n-\telse :; fi\n-$(srcdir)/stamp-h2.in: $(top_srcdir)/configure.in $(ACLOCAL_M4) acconfig.h\n-\tcd $(top_srcdir) && $(AUTOHEADER)\n-\t@echo timestamp > $(srcdir)/stamp-h2.in 2> /dev/null\n+\t@echo timestamp > $(srcdir)/stamp-h.in 2> /dev/null\n \n mostlyclean-hdr:\n \n clean-hdr:\n \n distclean-hdr:\n-\t-rm -f config.h config.h\n+\t-rm -f config.h\n \n maintainer-clean-hdr:\n mkcheck: $(top_builddir)/config.status mkcheck.in\n@@ -392,7 +373,7 @@ installcheck-am:\n installcheck: installcheck-recursive\n install-info-am: \n install-info: install-info-recursive\n-all-recursive-am: config.h config.h\n+all-recursive-am: config.h\n \t$(MAKE) $(AM_MAKEFLAGS) all-recursive\n \n install-exec-am:\n@@ -406,7 +387,7 @@ install-am: all-am\n install: install-recursive\n uninstall-am:\n uninstall: uninstall-recursive\n-all-am: Makefile config.h config.h\n+all-am: Makefile config.h\n all-redirect: all-recursive-am\n install-strip:\n \t$(MAKE) $(AM_MAKEFLAGS) AM_INSTALL_PROGRAM_FLAGS=-s install"}, {"sha": "caf9340cb78eeace9dacdfbd56e052bf2160d9f7", "filename": "libstdc++-v3/acconfig.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58b08ac3e1fddd036d474fec887ea29b834b2273/libstdc%2B%2B-v3%2Facconfig.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58b08ac3e1fddd036d474fec887ea29b834b2273/libstdc%2B%2B-v3%2Facconfig.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facconfig.h?ref=58b08ac3e1fddd036d474fec887ea29b834b2273", "patch": "@@ -31,6 +31,9 @@\n // Define if code specialized for wchar_t should be used.\n #undef _GLIBCPP_USE_WCHAR_T\n \n+// Define if using setrlimit to limit memory usage during 'make check'.\n+#undef _GLIBCPP_MEM_LIMITS\n+\n // Define if you have the atan2f function.\n #undef _GLIBCPP_HAVE_ATAN2F \n "}, {"sha": "5d2651e32661af313c2b76e58d18a3f50edcab6a", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 21, "deletions": 3, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58b08ac3e1fddd036d474fec887ea29b834b2273/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58b08ac3e1fddd036d474fec887ea29b834b2273/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=58b08ac3e1fddd036d474fec887ea29b834b2273", "patch": "@@ -1819,19 +1819,37 @@ AC_DEFUN(GLIBCPP_CHECK_SETRLIMIT_ancilliary, [\n                      [Only used in build directory testsuite_hooks.h.])\n ])\n AC_DEFUN(GLIBCPP_CHECK_SETRLIMIT, [\n-  setrlimit_have_needed_headers=yes\n+  setrlimit_have_headers=yes\n   AC_CHECK_HEADERS(sys/resource.h unistd.h,\n                    [],\n-                   setrlimit_have_needed_headers=no)\n+                   setrlimit_have_headers=no)\n   # If don't have the headers, then we can't run the tests now, and we\n   # won't be seeing any of these during testsuite compilation.\n-  if test $setrlimit_have_needed_headers = yes; then\n+  if test $setrlimit_have_headers = yes; then\n     # Can't do these in a loop, else the resulting syntax is wrong.\n     GLIBCPP_CHECK_SETRLIMIT_ancilliary(DATA)\n     GLIBCPP_CHECK_SETRLIMIT_ancilliary(RSS)\n     GLIBCPP_CHECK_SETRLIMIT_ancilliary(VMEM)\n     GLIBCPP_CHECK_SETRLIMIT_ancilliary(AS)\n+\n+    # Check for rlimit, setrlimit.\n+    AC_CACHE_VAL(ac_setrlimit, [\n+      AC_TRY_COMPILE([#include <sys/resource.h>\n+\t\t      #include <unistd.h>\n+\t\t     ], \n+                     [ struct rlimit r; setrlimit(0, &r);], \n+                     [ac_setrlimit=yes], [ac_setrlimit=no])\n+    ])\n+  fi\n+\n+  AC_MSG_CHECKING([for testsuite memory limit support])\n+  if test $setrlimit_have_headers = yes && test $ac_setrlimit = yes; then\n+    ac_mem_limits=yes\n+    AC_DEFINE(_GLIBCPP_MEM_LIMITS)\n+  else\n+    ac_mem_limits=no\n   fi\n+  AC_MSG_RESULT($ac_mem_limits)\n ])\n \n "}, {"sha": "d4968fa56d8c817f2b9b5239e25a507733802a8b", "filename": "libstdc++-v3/aclocal.m4", "status": "modified", "additions": 21, "deletions": 3, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58b08ac3e1fddd036d474fec887ea29b834b2273/libstdc%2B%2B-v3%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58b08ac3e1fddd036d474fec887ea29b834b2273/libstdc%2B%2B-v3%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Faclocal.m4?ref=58b08ac3e1fddd036d474fec887ea29b834b2273", "patch": "@@ -1831,19 +1831,37 @@ AC_DEFUN(GLIBCPP_CHECK_SETRLIMIT_ancilliary, [\n                      [Only used in build directory testsuite_hooks.h.])\n ])\n AC_DEFUN(GLIBCPP_CHECK_SETRLIMIT, [\n-  setrlimit_have_needed_headers=yes\n+  setrlimit_have_headers=yes\n   AC_CHECK_HEADERS(sys/resource.h unistd.h,\n                    [],\n-                   setrlimit_have_needed_headers=no)\n+                   setrlimit_have_headers=no)\n   # If don't have the headers, then we can't run the tests now, and we\n   # won't be seeing any of these during testsuite compilation.\n-  if test $setrlimit_have_needed_headers = yes; then\n+  if test $setrlimit_have_headers = yes; then\n     # Can't do these in a loop, else the resulting syntax is wrong.\n     GLIBCPP_CHECK_SETRLIMIT_ancilliary(DATA)\n     GLIBCPP_CHECK_SETRLIMIT_ancilliary(RSS)\n     GLIBCPP_CHECK_SETRLIMIT_ancilliary(VMEM)\n     GLIBCPP_CHECK_SETRLIMIT_ancilliary(AS)\n+\n+    # Check for rlimit, setrlimit.\n+    AC_CACHE_VAL(ac_setrlimit, [\n+      AC_TRY_COMPILE([#include <sys/resource.h>\n+\t\t      #include <unistd.h>\n+\t\t     ], \n+                     [ struct rlimit r; setrlimit(0, &r);], \n+                     [ac_setrlimit=yes], [ac_setrlimit=no])\n+    ])\n+  fi\n+\n+  AC_MSG_CHECKING([for testsuite memory limit support])\n+  if test $setrlimit_have_headers = yes && test $ac_setrlimit = yes; then\n+    ac_mem_limits=yes\n+    AC_DEFINE(_GLIBCPP_MEM_LIMITS)\n+  else\n+    ac_mem_limits=no\n   fi\n+  AC_MSG_RESULT($ac_mem_limits)\n ])\n \n "}, {"sha": "cb81bc525cb6157ad95887377eec647817aa8f2e", "filename": "libstdc++-v3/config.h.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58b08ac3e1fddd036d474fec887ea29b834b2273/libstdc%2B%2B-v3%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58b08ac3e1fddd036d474fec887ea29b834b2273/libstdc%2B%2B-v3%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig.h.in?ref=58b08ac3e1fddd036d474fec887ea29b834b2273", "patch": "@@ -67,6 +67,9 @@\n // Define if code specialized for wchar_t should be used.\n #undef _GLIBCPP_USE_WCHAR_T\n \n+// Define if using setrlimit to limit memory usage during 'make check'.\n+#undef _GLIBCPP_MEM_LIMITS\n+\n // Define if mbstate_t exists in wchar.h.\n #undef HAVE_MBSTATE_T\n "}, {"sha": "0d5aa0632675ada3a9ab08f6729c22451b1a1d06", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 1052, "deletions": 1025, "changes": 2077, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58b08ac3e1fddd036d474fec887ea29b834b2273/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58b08ac3e1fddd036d474fec887ea29b834b2273/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=58b08ac3e1fddd036d474fec887ea29b834b2273"}, {"sha": "8a2b5364d1fd4cbe59742cc0e577a0ad3d915f1e", "filename": "libstdc++-v3/configure.in", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58b08ac3e1fddd036d474fec887ea29b834b2273/libstdc%2B%2B-v3%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58b08ac3e1fddd036d474fec887ea29b834b2273/libstdc%2B%2B-v3%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure.in?ref=58b08ac3e1fddd036d474fec887ea29b834b2273", "patch": "@@ -12,7 +12,7 @@ VERSION=$MAJOR_VERSION.$MINOR_VERSION.$MICRO_VERSION\n AC_SUBST(PACKAGE)\n AC_SUBST(VERSION)\n \n-# Gets and sets build, host, target, *_vendor, *_cpu, *_os, etc.\n+# Gets build, host, target, *_vendor, *_cpu, *_os, etc.\n # AC 2.50 sets target_alias iff the user specified --target, but we use it\n # everywhere, so we set it here just to be sure.\n AC_CANONICAL_SYSTEM\n@@ -32,8 +32,6 @@ AM_PROG_LIBTOOL\n AC_SUBST(enable_shared)\n AC_SUBST(enable_static)\n \n-AM_CONFIG_HEADER(config.h testsuite/testsuite_hooks.h)\n-\n # Check for c++ or library specific bits that don't require linking.\n #GLIBCPP_CHECK_COMPILER_VERSION\n GLIBCPP_CHECK_GNU_MAKE\n@@ -189,6 +187,7 @@ else\n   GLIBCPP_CHECK_COMPLEX_MATH_SUPPORT\n   GLIBCPP_CHECK_WCHAR_T_SUPPORT\n   GLIBCPP_CHECK_STDLIB_SUPPORT\n+  AC_LC_MESSAGES\n \n   AC_TRY_COMPILE([\n #include <setjmp.h>\n@@ -197,11 +196,10 @@ else\n \n   AC_FUNC_MMAP\n \n+  # Establish limits on memory usage during 'make check'\n+  GLIBCPP_CONFIGURE_TESTSUITE\n fi\n \n-# Enable/configure some pieces which may require knowledge about the\n-# compiler situation (native/cross), which we just finished discovering.\n-GLIBCPP_CONFIGURE_TESTSUITE\n \n # Propagate the target-specific source directories through the build chain.\n OS_INC_SRCDIR=$os_include_dir/bits\n@@ -214,7 +212,6 @@ AC_SUBST(GLIBCPP_IS_CROSS_COMPILING)\n AM_CONDITIONAL(CANADIAN, test \"$CANADIAN\" = yes)\n  \n AC_CACHE_SAVE\n-AC_LC_MESSAGES\n \n if test \"${multilib}\" = \"yes\"; then\n   multilib_arg=\"--enable-multilib\""}, {"sha": "0c3900761d5baab66b401e642d4ae08fb2c6af0b", "filename": "libstdc++-v3/include/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58b08ac3e1fddd036d474fec887ea29b834b2273/libstdc%2B%2B-v3%2Finclude%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58b08ac3e1fddd036d474fec887ea29b834b2273/libstdc%2B%2B-v3%2Finclude%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2FMakefile.in?ref=58b08ac3e1fddd036d474fec887ea29b834b2273", "patch": "@@ -202,7 +202,7 @@ uppercase = [ABCDEFGHIJKLMNOPQRSTUVWXYZ_]\n # One big happy istallation:  just copy everything from the build to the\n # install tree (except for the build stamps).\n gxx_include_dir = @gxx_include_dir@\n-CONFIG_HEADER = ../config.h ../config.h ../testsuite/testsuite_hooks.h\n+CONFIG_HEADER = ../config.h\n CONFIG_CLEAN_FILES = \n DIST_COMMON =  Makefile.am Makefile.in\n "}, {"sha": "fcdf38b72bfb6a6e70be98a293c945d8dc0599c2", "filename": "libstdc++-v3/intl/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58b08ac3e1fddd036d474fec887ea29b834b2273/libstdc%2B%2B-v3%2Fintl%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58b08ac3e1fddd036d474fec887ea29b834b2273/libstdc%2B%2B-v3%2Fintl%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fintl%2FMakefile.in?ref=58b08ac3e1fddd036d474fec887ea29b834b2273", "patch": "@@ -151,7 +151,7 @@ PACKAGE = @PACKAGE@\n DISTFILES =  \tstring_literals.cc\n \n mkinstalldirs = $(SHELL) $(top_srcdir)/../mkinstalldirs\n-CONFIG_HEADER = ../config.h ../config.h ../testsuite/testsuite_hooks.h\n+CONFIG_HEADER = ../config.h\n CONFIG_CLEAN_FILES = \n DIST_COMMON =  Makefile.am Makefile.in\n "}, {"sha": "2f1f6ac68a0c5fcabafeb64c7fb121cf208b011d", "filename": "libstdc++-v3/libio/Makefile.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58b08ac3e1fddd036d474fec887ea29b834b2273/libstdc%2B%2B-v3%2Flibio%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58b08ac3e1fddd036d474fec887ea29b834b2273/libstdc%2B%2B-v3%2Flibio%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibio%2FMakefile.in?ref=58b08ac3e1fddd036d474fec887ea29b834b2273", "patch": "@@ -170,12 +170,12 @@ EXTRA_DIST = iostreamP.h\n libio_la_SOURCES = $(LIBIO_SRCS) $(LIBIO_WSRCS)\n \n AM_CFLAGS = -D_GNU_SOURCE @DEBUG_FLAGS@ \n-CONFIG_HEADER = ../config.h ../config.h ../testsuite/testsuite_hooks.h\n+CONFIG_HEADER = ../config.h\n CONFIG_CLEAN_FILES = \n LTLIBRARIES =  $(noinst_LTLIBRARIES)\n \n \n-DEFS = @DEFS@ -I. -I$(srcdir) -I.. -I.. -I../testsuite\n+DEFS = @DEFS@ -I. -I$(srcdir) -I..\n CPPFLAGS = @CPPFLAGS@\n LDFLAGS = @LDFLAGS@\n LIBS = @LIBS@"}, {"sha": "e360eb8b3b67c6f3d388a5ac220642f0792bcf60", "filename": "libstdc++-v3/libmath/Makefile.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58b08ac3e1fddd036d474fec887ea29b834b2273/libstdc%2B%2B-v3%2Flibmath%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58b08ac3e1fddd036d474fec887ea29b834b2273/libstdc%2B%2B-v3%2Flibmath%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibmath%2FMakefile.in?ref=58b08ac3e1fddd036d474fec887ea29b834b2273", "patch": "@@ -170,12 +170,12 @@ TOPLEVEL_INCLUDES = @TOPLEVEL_INCLUDES@\n \n INCLUDES =  \t$(TOPLEVEL_INCLUDES) \n \n-CONFIG_HEADER = ../config.h ../config.h ../testsuite/testsuite_hooks.h\n+CONFIG_HEADER = ../config.h\n CONFIG_CLEAN_FILES = \n LTLIBRARIES =  $(noinst_LTLIBRARIES)\n \n \n-DEFS = @DEFS@ -I. -I$(srcdir) -I.. -I.. -I../testsuite\n+DEFS = @DEFS@ -I. -I$(srcdir) -I..\n CPPFLAGS = @CPPFLAGS@\n LDFLAGS = @LDFLAGS@\n LIBS = @LIBS@"}, {"sha": "313f179c67f7b2e8cbabc68e2c97ba477c2b6b4f", "filename": "libstdc++-v3/libsupc++/Makefile.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58b08ac3e1fddd036d474fec887ea29b834b2273/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58b08ac3e1fddd036d474fec887ea29b834b2273/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in?ref=58b08ac3e1fddd036d474fec887ea29b834b2273", "patch": "@@ -235,12 +235,12 @@ LTCXXCOMPILE = $(LIBTOOL) --tag CXX --tag disable-shared                --mode=c\n # compilation driver.\n CXXLINK = $(LIBTOOL) --tag CXX --tag disable-shared           --mode=link $(CXX)           @OPT_LDFLAGS@ @SECTION_LDFLAGS@ $(AM_CXXFLAGS) $(LDFLAGS) -o $@\n \n-CONFIG_HEADER = ../config.h ../config.h ../testsuite/testsuite_hooks.h\n+CONFIG_HEADER = ../config.h\n CONFIG_CLEAN_FILES = \n LTLIBRARIES =  $(noinst_LTLIBRARIES) $(toolexeclib_LTLIBRARIES)\n \n \n-DEFS = @DEFS@ -I. -I$(srcdir) -I.. -I.. -I../testsuite\n+DEFS = @DEFS@ -I. -I$(srcdir) -I..\n CPPFLAGS = @CPPFLAGS@\n LDFLAGS = @LDFLAGS@\n LIBS = @LIBS@"}, {"sha": "6243df9aaacaeeb1ef3eac02e39e3cb5b52b9687", "filename": "libstdc++-v3/po/Makefile.am", "status": "modified", "additions": 15, "deletions": 7, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58b08ac3e1fddd036d474fec887ea29b834b2273/libstdc%2B%2B-v3%2Fpo%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58b08ac3e1fddd036d474fec887ea29b834b2273/libstdc%2B%2B-v3%2Fpo%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fpo%2FMakefile.am?ref=58b08ac3e1fddd036d474fec887ea29b834b2273", "patch": "@@ -39,15 +39,23 @@ LOCALE_IN = @POFILES@\n LOCALE_OUT = @glibcpp_MOFILES@\n \n .po.mo:\n-\tcat=`basename $<`; \\\n-\tlang=`echo $$cat | sed 's/\\.po$$//'`; \\\n-\tdir=$(locale_builddir)/$$lang/LC_MESSAGES; \\\n-\t$(mkinstalldirs) $$dir; \\\n-\t$(MSGFMT) $< -o $$dir/$(PACKAGE).mo \n+\t$(MSGFMT) $< -o $@\n \n all-local: all-local-@USE_NLS@\n all-local-no: \n-all-local-yes: $(LOCALE_OUT)\n+all-local-yes: $(LOCALE_OUT) \n+\n+# 'make check' needs the catalogs constructed in build directory.\n+check:\n+\t$(mkinstalldirs) $(locale_builddir) \n+\t@catalogs='$(LOCALE_OUT)'; \\\n+\tfor cat in $$catalogs; do \\\n+\t  cat=`basename $$cat`; \\\n+\t  lang=`echo $$cat | sed 's/\\.mo$$//'`; \\\n+\t  install_dir=$(locale_builddir)/$$lang/LC_MESSAGES; \\\n+\t  $(mkinstalldirs) $$install_dir; \\\n+\t  $(INSTALL_DATA) $$cat $$install_dir/$(PACKAGE).mo; \\\n+\tdone \n \n # Install rules here. \n # Wish install could just `cp -R ./share $(locale_installdir)` ...\n@@ -66,4 +74,4 @@ install-data-local-yes: all-local-yes\n \tdone\n \n # Specify what gets cleaned up on a 'make clean'\n-CLEANFILES = $(LOCALE_OUT)\n+CLEANFILES = $(LOCALE_OUT) "}, {"sha": "f3c1c648f134eb07162774fa6f88b09bfc78c876", "filename": "libstdc++-v3/po/Makefile.in", "status": "modified", "additions": 16, "deletions": 8, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58b08ac3e1fddd036d474fec887ea29b834b2273/libstdc%2B%2B-v3%2Fpo%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58b08ac3e1fddd036d474fec887ea29b834b2273/libstdc%2B%2B-v3%2Fpo%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fpo%2FMakefile.in?ref=58b08ac3e1fddd036d474fec887ea29b834b2273", "patch": "@@ -163,9 +163,9 @@ LOCALE_IN = @POFILES@\n LOCALE_OUT = @glibcpp_MOFILES@\n \n # Specify what gets cleaned up on a 'make clean'\n-CLEANFILES = $(LOCALE_OUT)\n+CLEANFILES = $(LOCALE_OUT) \n mkinstalldirs = $(SHELL) $(top_srcdir)/../mkinstalldirs\n-CONFIG_HEADER = ../config.h ../config.h ../testsuite/testsuite_hooks.h\n+CONFIG_HEADER = ../config.h\n CONFIG_CLEAN_FILES = \n CFLAGS = @CFLAGS@\n COMPILE = $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)\n@@ -273,15 +273,23 @@ mostlyclean distclean maintainer-clean\n \n \n .po.mo:\n-\tcat=`basename $<`; \\\n-\tlang=`echo $$cat | sed 's/\\.po$$//'`; \\\n-\tdir=$(locale_builddir)/$$lang/LC_MESSAGES; \\\n-\t$(mkinstalldirs) $$dir; \\\n-\t$(MSGFMT) $< -o $$dir/$(PACKAGE).mo \n+\t$(MSGFMT) $< -o $@\n \n all-local: all-local-@USE_NLS@\n all-local-no: \n-all-local-yes: $(LOCALE_OUT)\n+all-local-yes: $(LOCALE_OUT) \n+\n+# 'make check' needs the catalogs constructed in build directory.\n+check:\n+\t$(mkinstalldirs) $(locale_builddir) \n+\t@catalogs='$(LOCALE_OUT)'; \\\n+\tfor cat in $$catalogs; do \\\n+\t  cat=`basename $$cat`; \\\n+\t  lang=`echo $$cat | sed 's/\\.mo$$//'`; \\\n+\t  install_dir=$(locale_builddir)/$$lang/LC_MESSAGES; \\\n+\t  $(mkinstalldirs) $$install_dir; \\\n+\t  $(INSTALL_DATA) $$cat $$install_dir/$(PACKAGE).mo; \\\n+\tdone \n \n # Install rules here. \n # Wish install could just `cp -R ./share $(locale_installdir)` ..."}, {"sha": "a4c266f67d5e64ba57d50c303bc666e2a01a4b77", "filename": "libstdc++-v3/src/Makefile.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58b08ac3e1fddd036d474fec887ea29b834b2273/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58b08ac3e1fddd036d474fec887ea29b834b2273/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in?ref=58b08ac3e1fddd036d474fec887ea29b834b2273", "patch": "@@ -233,12 +233,12 @@ LTCXXCOMPILE = $(LIBTOOL) --tag CXX --mode=compile $(CXX) $(INCLUDES) \t       $(\n # compilation driver.\n CXXLINK = $(LIBTOOL) --tag CXX --mode=link $(CXX) \t  @OPT_LDFLAGS@ @SECTION_LDFLAGS@ $(AM_CXXFLAGS) $(LDFLAGS) -o $@\n \n-CONFIG_HEADER = ../config.h ../config.h ../testsuite/testsuite_hooks.h\n+CONFIG_HEADER = ../config.h\n CONFIG_CLEAN_FILES = \n LTLIBRARIES =  $(toolexeclib_LTLIBRARIES)\n \n \n-DEFS = @DEFS@ -I. -I$(srcdir) -I.. -I.. -I../testsuite\n+DEFS = @DEFS@ -I. -I$(srcdir) -I..\n CPPFLAGS = @CPPFLAGS@\n LDFLAGS = @LDFLAGS@\n LIBS = @LIBS@"}, {"sha": "3bf801b4c74e64d89004cf2eb42a1915c74e8364", "filename": "libstdc++-v3/testsuite/Makefile.in", "status": "modified", "additions": 13, "deletions": 48, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58b08ac3e1fddd036d474fec887ea29b834b2273/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58b08ac3e1fddd036d474fec887ea29b834b2273/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in?ref=58b08ac3e1fddd036d474fec887ea29b834b2273", "patch": "@@ -159,10 +159,9 @@ RUNTEST = `if [ -f @glibcpp_srcdir@/../dejagnu/runtest ] ; then \t       echo @gl\n \n RUNTESTFLAGS = \n mkinstalldirs = $(SHELL) $(top_srcdir)/../mkinstalldirs\n-CONFIG_HEADER = ../config.h ../config.h testsuite_hooks.h\n+CONFIG_HEADER = ../config.h\n CONFIG_CLEAN_FILES = \n-DIST_COMMON =  README ./stamp-h3.in Makefile.am Makefile.in \\\n-testsuite_hooks.h.in\n+DIST_COMMON =  README Makefile.am Makefile.in\n \n \n DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)\n@@ -178,34 +177,6 @@ Makefile: $(srcdir)/Makefile.in  $(top_builddir)/config.status\n \tcd $(top_builddir) \\\n \t  && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status\n \n-\n-testsuite_hooks.h: stamp-h3\n-\t@if test ! -f $@; then \\\n-\t\trm -f stamp-h3; \\\n-\t\t$(MAKE) stamp-h3; \\\n-\telse :; fi\n-stamp-h3: $(srcdir)/testsuite_hooks.h.in $(top_builddir)/config.status\n-\tcd $(top_builddir) \\\n-\t  && CONFIG_FILES= CONFIG_HEADERS=testsuite/testsuite_hooks.h \\\n-\t     $(SHELL) ./config.status\n-\t@echo timestamp > stamp-h3 2> /dev/null\n-$(srcdir)/testsuite_hooks.h.in: @MAINTAINER_MODE_TRUE@$(srcdir)/stamp-h3.in\n-\t@if test ! -f $@; then \\\n-\t\trm -f $(srcdir)/stamp-h3.in; \\\n-\t\t$(MAKE) $(srcdir)/stamp-h3.in; \\\n-\telse :; fi\n-$(srcdir)/stamp-h3.in: $(top_srcdir)/configure.in $(ACLOCAL_M4) \n-\tcd $(top_srcdir) && $(AUTOHEADER)\n-\t@echo timestamp > $(srcdir)/stamp-h3.in 2> /dev/null\n-\n-mostlyclean-hdr:\n-\n-clean-hdr:\n-\n-distclean-hdr:\n-\t-rm -f testsuite_hooks.h\n-\n-maintainer-clean-hdr:\n tags: TAGS\n TAGS:\n \n@@ -270,9 +241,6 @@ installcheck-am:\n installcheck: installcheck-am\n install-info-am: \n install-info: install-info-am\n-all-recursive-am: testsuite_hooks.h\n-\t$(MAKE) $(AM_MAKEFLAGS) all-recursive\n-\n install-exec-am:\n install-exec: install-exec-am\n \n@@ -284,7 +252,7 @@ install-am: all-am\n install: install-am\n uninstall-am:\n uninstall: uninstall-am\n-all-am: Makefile testsuite_hooks.h\n+all-am: Makefile\n all-redirect: all-am\n install-strip:\n \t$(MAKE) $(AM_MAKEFLAGS) AM_INSTALL_PROGRAM_FLAGS=-s install\n@@ -300,34 +268,31 @@ distclean-generic:\n \t-rm -f config.cache config.log stamp-h stamp-h[0-9]*\n \n maintainer-clean-generic:\n-mostlyclean-am:  mostlyclean-hdr mostlyclean-generic\n+mostlyclean-am:  mostlyclean-generic\n \n mostlyclean: mostlyclean-am\n \n-clean-am:  clean-hdr clean-generic mostlyclean-am\n+clean-am:  clean-generic mostlyclean-am\n \n clean: clean-am\n \n-distclean-am:  distclean-hdr distclean-generic clean-am\n+distclean-am:  distclean-generic clean-am\n \t-rm -f libtool\n \n distclean: distclean-am\n \n-maintainer-clean-am:  maintainer-clean-hdr maintainer-clean-generic \\\n-\t\tdistclean-am\n+maintainer-clean-am:  maintainer-clean-generic distclean-am\n \t@echo \"This command is intended for maintainers to use;\"\n \t@echo \"it deletes files that may require special tools to rebuild.\"\n \n maintainer-clean: maintainer-clean-am\n \n-.PHONY: mostlyclean-hdr distclean-hdr clean-hdr maintainer-clean-hdr \\\n-tags distdir check-DEJAGNU info-am info dvi-am dvi check check-am \\\n-installcheck-am installcheck install-info-am install-info \\\n-all-recursive-am install-exec-am install-exec install-data-am \\\n-install-data install-am install uninstall-am uninstall all-redirect \\\n-all-am all installdirs mostlyclean-generic distclean-generic \\\n-clean-generic maintainer-clean-generic clean mostlyclean distclean \\\n-maintainer-clean\n+.PHONY: tags distdir check-DEJAGNU info-am info dvi-am dvi check \\\n+check-am installcheck-am installcheck install-info-am install-info \\\n+install-exec-am install-exec install-data-am install-data install-am \\\n+install uninstall-am uninstall all-redirect all-am all installdirs \\\n+mostlyclean-generic distclean-generic clean-generic \\\n+maintainer-clean-generic clean mostlyclean distclean maintainer-clean\n \n \n # Tell versions [3.59,3.63) of GNU make to not export all variables."}, {"sha": "9e0097b47d3421c49b7c36a1493dcc5a71a65cd5", "filename": "libstdc++-v3/testsuite/testsuite_hooks.h", "status": "renamed", "additions": 25, "deletions": 54, "changes": 79, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58b08ac3e1fddd036d474fec887ea29b834b2273/libstdc%2B%2B-v3%2Ftestsuite%2Ftestsuite_hooks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58b08ac3e1fddd036d474fec887ea29b834b2273/libstdc%2B%2B-v3%2Ftestsuite%2Ftestsuite_hooks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftestsuite_hooks.h?ref=58b08ac3e1fddd036d474fec887ea29b834b2273", "patch": "@@ -38,54 +38,33 @@\n //   __set_testsuite_memlimit() uses setrlimit() to restrict dynamic memory\n //   allocation.  We provide a default memory limit if none is passed by the\n //   calling application.  The argument to __set_testsuite_memlimit() is the\n-//   limit in megabytes (a floating-point number).  If NO_MEM_LIMITS is\n+//   limit in megabytes (a floating-point number).  If _GLIBCPP_MEM_LIMITS is\n //   #defined before including this header, then no limiting is attempted.\n \n #ifndef _GLIBCPP_TESTSUITE_HOOKS_H\n #define _GLIBCPP_TESTSUITE_HOOKS_H\n \n-\n-/*******\n- * VERIFY(), via DEBUG_ASSERT, from Brent Verner <brent@rcfile.org>.\n-*/\n #ifdef DEBUG_ASSERT\n # include <cassert>\n # define VERIFY(fn) assert(fn)\n-\n #else\n-\n # define VERIFY(fn) test &= (fn)\n-// should we define this here to make sure no 'unexpected' failures\n-// happen, or do we require that it be defined in any scope where\n-// the VERIFY macro is used???\n-//\n-// static bool test = true;\n+# define VERIFY(fn) fn\n #endif\n \n+#include <bits/c++config.h>\n \n-/*******\n- * __set_testsuite_memlimit()\n-*/\n-// The RLIMIT_* macros used will be as many of the following as we can find,\n-// and they will be used in this order, for whatever difference it makes:\n-//   RLIMIT_DATA\n-//   RLIMIT_RSS\n-//   RLIMIT_VMEM\n-//   RLIMIT_AS\n-\n-#define NO_MEM_LIMITS\n+// Defined in GLIBCPP_CONFIGURE_TESTSUITE.\n+#ifndef _GLIBCPP_MEM_LIMITS\n \n-// The following lines will be changed by configure...\n-#undef HAVE_SYS_RESOURCE_H\n-#undef HAVE_UNISTD_H\n-#undef HAVE_MEMLIMIT_DATA\n-#undef HAVE_MEMLIMIT_RSS\n-#undef HAVE_MEMLIMIT_VMEM\n-#undef HAVE_MEMLIMIT_AS\n+// Don't do memory limits.\n+void\n+__set_testsuite_memlimit(float)\n+{ }\n \n-// ...and the results used here.\n-#if defined(HAVE_SYS_RESOURCE_H) && defined(HAVE_UNISTD_H) && !defined(NO_MEM_LIMITS)\n+#else\n \n+// Do memory limits.\n #include <sys/resource.h>\n #include <unistd.h>\n \n@@ -94,40 +73,32 @@\n #endif\n \n void\n-__set_testsuite_memlimit(float megs = MEMLIMIT_MB)\n+__set_testsuite_memlimit(float __size = MEMLIMIT_MB)\n {\n     struct rlimit r;\n-    r.rlim_cur = (rlim_t)(megs * 1048576);\n+    r.rlim_cur = (rlim_t)(__size * 1048576);\n \n-    // heap size, seems to be common\n-#if HAVE_MEMLIMIT_DATA\n-    setrlimit (RLIMIT_DATA, &r);\n+    // Heap size, seems to be common.\n+#if _GLIBCPP_HAVE_MEMLIMIT_DATA\n+    setrlimit(RLIMIT_DATA, &r);\n #endif\n \n-    // resident set size -- Linux?\n-#if HAVE_MEMLIMIT_RSS\n-    setrlimit (RLIMIT_RSS, &r);\n+    // Resident set size.\n+#if _GLIBCPP_HAVE_MEMLIMIT_RSS\n+    setrlimit(RLIMIT_RSS, &r);\n #endif\n \n-    // mapped memory (brk+mmap) -- Solaris?\n-#if HAVE_MEMLIMIT_VMEM\n-    setrlimit (RLIMIT_VMEM, &r);\n+    // Mapped memory (brk + mmap).\n+#if _GLIBCPP_HAVE_MEMLIMIT_VMEM\n+    setrlimit(RLIMIT_VMEM, &r);\n #endif\n \n-    // virtual memory, seems to be common\n-#if HAVE_MEMLIMIT_AS\n-    setrlimit (RLIMIT_AS, &r);\n+    // Virtual memory.\n+#if _GLIBCPP_HAVE_MEMLIMIT_AS\n+    setrlimit(RLIMIT_AS, &r);\n #endif\n }\n-\n-#else\n-// The headers needed for resource limiting are not available.  This is\n-// safe, but means that no memory limits will be applied... ouch.\n-#define __set_testsuite_memlimit(__junk)\n #endif\n \n-\n-\n-\n #endif // _GLIBCPP_TESTSUITE_HOOKS_H\n ", "previous_filename": "libstdc++-v3/testsuite/testsuite_hooks.h.in"}]}