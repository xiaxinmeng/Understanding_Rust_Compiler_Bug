{"sha": "47752af2e8442f1141f1025e58f9dcb76cdd7422", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDc3NTJhZjJlODQ0MmYxMTQxZjEwMjVlNThmOWRjYjc2Y2RkNzQyMg==", "commit": {"author": {"name": "Thomas Quinot", "email": "quinot@adacore.com", "date": "2014-02-24T16:59:24Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-02-24T16:59:24Z"}, "message": "g-stheme.adb, [...] (Host_Error_Message): Return a string...\n\n2014-02-24  Thomas Quinot  <quinot@adacore.com>\n\n\t* g-stheme.adb, g-socthi-vms.adb, g-socthi-vms.ads,\n\tg-socthi-vxworks.adb, g-socthi-vxworks.ads, g-stseme.adb,\n\tg-socthi-mingw.adb, g-socthi-mingw.ads, g-socthi.adb,\n\tg-socthi.ads, g-socket.adb (Host_Error_Message): Return a string, not\n\ta chars_ptr, because on Windows this is a renaming of\n\tSocket_Error_Message.\n\nFrom-SVN: r208082", "tree": {"sha": "2f2116a515aa85c2d441a1bd3a95f391271295e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2f2116a515aa85c2d441a1bd3a95f391271295e9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/47752af2e8442f1141f1025e58f9dcb76cdd7422", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47752af2e8442f1141f1025e58f9dcb76cdd7422", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47752af2e8442f1141f1025e58f9dcb76cdd7422", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47752af2e8442f1141f1025e58f9dcb76cdd7422/comments", "author": null, "committer": null, "parents": [{"sha": "1b31321b1834aac1bd455e5a457145827dee562f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b31321b1834aac1bd455e5a457145827dee562f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b31321b1834aac1bd455e5a457145827dee562f"}], "stats": {"total": 170, "additions": 74, "deletions": 96}, "files": [{"sha": "c07dcd8782eafd7d62795f5c98b6e90d5b7f51b6", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47752af2e8442f1141f1025e58f9dcb76cdd7422/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47752af2e8442f1141f1025e58f9dcb76cdd7422/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=47752af2e8442f1141f1025e58f9dcb76cdd7422", "patch": "@@ -1,3 +1,12 @@\n+2014-02-24  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* g-stheme.adb, g-socthi-vms.adb, g-socthi-vms.ads,\n+\tg-socthi-vxworks.adb, g-socthi-vxworks.ads, g-stseme.adb,\n+\tg-socthi-mingw.adb, g-socthi-mingw.ads, g-socthi.adb,\n+\tg-socthi.ads, g-socket.adb (Host_Error_Message): Return a string, not\n+\ta chars_ptr, because on Windows this is a renaming of\n+\tSocket_Error_Message.\n+\n 2014-02-24  Robert Dewar  <dewar@adacore.com>\n \n \t* a-direct.adb, sem_ch5.adb, a-cfdlli.adb, a-cfhase.adb, a-tags.adb,"}, {"sha": "d5b74c6d0491a5961df68c753e6067ab0bdd82ad", "filename": "gcc/ada/g-socket.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47752af2e8442f1141f1025e58f9dcb76cdd7422/gcc%2Fada%2Fg-socket.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47752af2e8442f1141f1025e58f9dcb76cdd7422/gcc%2Fada%2Fg-socket.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socket.adb?ref=47752af2e8442f1141f1025e58f9dcb76cdd7422", "patch": "@@ -1709,7 +1709,7 @@ package body GNAT.Sockets is\n    begin\n       raise Host_Error with\n         Err_Code_Image (H_Error)\n-        & C.Strings.Value (Host_Error_Messages.Host_Error_Message (H_Error));\n+          & Host_Error_Messages.Host_Error_Message (H_Error);\n    end Raise_Host_Error;\n \n    ------------------------"}, {"sha": "719ab5477551c6c91fdec1ba726f660f095e7a88", "filename": "gcc/ada/g-socthi-mingw.adb", "status": "modified", "additions": 48, "deletions": 48, "changes": 96, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47752af2e8442f1141f1025e58f9dcb76cdd7422/gcc%2Fada%2Fg-socthi-mingw.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47752af2e8442f1141f1025e58f9dcb76cdd7422/gcc%2Fada%2Fg-socthi-mingw.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socthi-mingw.adb?ref=47752af2e8442f1141f1025e58f9dcb76cdd7422", "patch": "@@ -535,8 +535,7 @@ package body GNAT.Sockets.Thin is\n       --  error messages are provided by Socket_Error_Message, so the default\n       --  separate body for Host_Error_Messages is not used in this case.\n \n-      function Host_Error_Message\n-        (H_Errno : Integer) return C.Strings.chars_ptr\n+      function Host_Error_Message (H_Errno : Integer) return String\n          renames Socket_Error_Message;\n \n    end Host_Error_Messages;\n@@ -572,61 +571,62 @@ package body GNAT.Sockets.Thin is\n \n    begin\n       case Errno is\n-         when EINTR =>           Errm := N_EINTR;\n-         when EBADF =>           Errm := N_EBADF;\n-         when EACCES =>          Errm := N_EACCES;\n-         when EFAULT =>          Errm := N_EFAULT;\n-         when EINVAL =>          Errm := N_EINVAL;\n-         when EMFILE =>          Errm := N_EMFILE;\n-         when EWOULDBLOCK =>     Errm := N_EWOULDBLOCK;\n-         when EINPROGRESS =>     Errm := N_EINPROGRESS;\n-         when EALREADY =>        Errm := N_EALREADY;\n-         when ENOTSOCK =>        Errm := N_ENOTSOCK;\n-         when EDESTADDRREQ =>    Errm := N_EDESTADDRREQ;\n-         when EMSGSIZE =>        Errm := N_EMSGSIZE;\n-         when EPROTOTYPE =>      Errm := N_EPROTOTYPE;\n-         when ENOPROTOOPT =>     Errm := N_ENOPROTOOPT;\n-         when EPROTONOSUPPORT => Errm := N_EPROTONOSUPPORT;\n-         when ESOCKTNOSUPPORT => Errm := N_ESOCKTNOSUPPORT;\n-         when EOPNOTSUPP =>      Errm := N_EOPNOTSUPP;\n-         when EPFNOSUPPORT =>    Errm := N_EPFNOSUPPORT;\n-         when EAFNOSUPPORT =>    Errm := N_EAFNOSUPPORT;\n-         when EADDRINUSE =>      Errm := N_EADDRINUSE;\n-         when EADDRNOTAVAIL =>   Errm := N_EADDRNOTAVAIL;\n-         when ENETDOWN =>        Errm := N_ENETDOWN;\n-         when ENETUNREACH =>     Errm := N_ENETUNREACH;\n-         when ENETRESET =>       Errm := N_ENETRESET;\n-         when ECONNABORTED =>    Errm := N_ECONNABORTED;\n-         when ECONNRESET =>      Errm := N_ECONNRESET;\n-         when ENOBUFS =>         Errm := N_ENOBUFS;\n-         when EISCONN =>         Errm := N_EISCONN;\n-         when ENOTCONN =>        Errm := N_ENOTCONN;\n-         when ESHUTDOWN =>       Errm := N_ESHUTDOWN;\n-         when ETOOMANYREFS =>    Errm := N_ETOOMANYREFS;\n-         when ETIMEDOUT =>       Errm := N_ETIMEDOUT;\n-         when ECONNREFUSED =>    Errm := N_ECONNREFUSED;\n-         when ELOOP =>           Errm := N_ELOOP;\n-         when ENAMETOOLONG =>    Errm := N_ENAMETOOLONG;\n-         when EHOSTDOWN =>       Errm := N_EHOSTDOWN;\n-         when EHOSTUNREACH =>    Errm := N_EHOSTUNREACH;\n+         when EINTR =>           Errm := Error_Messages (N_EINTR);\n+         when EBADF =>           Errm := Error_Messages (N_EBADF);\n+         when EACCES =>          Errm := Error_Messages (N_EACCES);\n+         when EFAULT =>          Errm := Error_Messages (N_EFAULT);\n+         when EINVAL =>          Errm := Error_Messages (N_EINVAL);\n+         when EMFILE =>          Errm := Error_Messages (N_EMFILE);\n+         when EWOULDBLOCK =>     Errm := Error_Messages (N_EWOULDBLOCK);\n+         when EINPROGRESS =>     Errm := Error_Messages (N_EINPROGRESS);\n+         when EALREADY =>        Errm := Error_Messages (N_EALREADY);\n+         when ENOTSOCK =>        Errm := Error_Messages (N_ENOTSOCK);\n+         when EDESTADDRREQ =>    Errm := Error_Messages (N_EDESTADDRREQ);\n+         when EMSGSIZE =>        Errm := Error_Messages (N_EMSGSIZE);\n+         when EPROTOTYPE =>      Errm := Error_Messages (N_EPROTOTYPE);\n+         when ENOPROTOOPT =>     Errm := Error_Messages (N_ENOPROTOOPT);\n+         when EPROTONOSUPPORT => Errm := Error_Messages (N_EPROTONOSUPPORT);\n+         when ESOCKTNOSUPPORT => Errm := Error_Messages (N_ESOCKTNOSUPPORT);\n+         when EOPNOTSUPP =>      Errm := Error_Messages (N_EOPNOTSUPP);\n+         when EPFNOSUPPORT =>    Errm := Error_Messages (N_EPFNOSUPPORT);\n+         when EAFNOSUPPORT =>    Errm := Error_Messages (N_EAFNOSUPPORT);\n+         when EADDRINUSE =>      Errm := Error_Messages (N_EADDRINUSE);\n+         when EADDRNOTAVAIL =>   Errm := Error_Messages (N_EADDRNOTAVAIL);\n+         when ENETDOWN =>        Errm := Error_Messages (N_ENETDOWN);\n+         when ENETUNREACH =>     Errm := Error_Messages (N_ENETUNREACH);\n+         when ENETRESET =>       Errm := Error_Messages (N_ENETRESET);\n+         when ECONNABORTED =>    Errm := Error_Messages (N_ECONNABORTED);\n+         when ECONNRESET =>      Errm := Error_Messages (N_ECONNRESET);\n+         when ENOBUFS =>         Errm := Error_Messages (N_ENOBUFS);\n+         when EISCONN =>         Errm := Error_Messages (N_EISCONN);\n+         when ENOTCONN =>        Errm := Error_Messages (N_ENOTCONN);\n+         when ESHUTDOWN =>       Errm := Error_Messages (N_ESHUTDOWN);\n+         when ETOOMANYREFS =>    Errm := Error_Messages (N_ETOOMANYREFS);\n+         when ETIMEDOUT =>       Errm := Error_Messages (N_ETIMEDOUT);\n+         when ECONNREFUSED =>    Errm := Error_Messages (N_ECONNREFUSED);\n+         when ELOOP =>           Errm := Error_Messages (N_ELOOP);\n+         when ENAMETOOLONG =>    Errm := Error_Messages (N_ENAMETOOLONG);\n+         when EHOSTDOWN =>       Errm := Error_Messages (N_EHOSTDOWN);\n+         when EHOSTUNREACH =>    Errm := Error_Messages (N_EHOSTUNREACH);\n \n          --  Windows-specific error codes\n \n-         when WSASYSNOTREADY =>  Errm := N_WSASYSNOTREADY;\n+         when WSASYSNOTREADY =>  Errm := Error_Messages (N_WSASYSNOTREADY);\n          when WSAVERNOTSUPPORTED =>\n-                                 Errm := N_WSAVERNOTSUPPORTED;\n+            Errm := Error_Messages (N_WSAVERNOTSUPPORTED);\n          when WSANOTINITIALISED =>\n-                                 Errm := N_WSANOTINITIALISED;\n-         when WSAEDISCON =>      Errm := N_WSAEDISCON;\n+            Errm := Error_Messages (N_WSANOTINITIALISED);\n+         when WSAEDISCON =>\n+            Errm := Error_Messages (N_WSAEDISCON);\n \n          --  h_errno values\n \n-         when HOST_NOT_FOUND =>  Errm := N_HOST_NOT_FOUND;\n-         when TRY_AGAIN =>       Errm := N_TRY_AGAIN;\n-         when NO_RECOVERY =>     Errm := N_NO_RECOVERY;\n-         when NO_DATA =>         Errm := N_NO_DATA;\n+         when HOST_NOT_FOUND =>  Errm := Error_Messages (N_HOST_NOT_FOUND);\n+         when TRY_AGAIN =>       Errm := Error_Messages (N_TRY_AGAIN);\n+         when NO_RECOVERY =>     Errm := Error_Messages (N_NO_RECOVERY);\n+         when NO_DATA =>         Errm := Error_Messages (N_NO_DATA);\n \n-         when others =>          Errm := N_OTHERS;\n+         when others =>          Errm := Error_Messages (N_OTHERS);\n       end case;\n \n       return Value (Errm);"}, {"sha": "202297d5732fd08e7ea448bf84887d51697ef997", "filename": "gcc/ada/g-socthi-mingw.ads", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47752af2e8442f1141f1025e58f9dcb76cdd7422/gcc%2Fada%2Fg-socthi-mingw.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47752af2e8442f1141f1025e58f9dcb76cdd7422/gcc%2Fada%2Fg-socthi-mingw.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socthi-mingw.ads?ref=47752af2e8442f1141f1025e58f9dcb76cdd7422", "patch": "@@ -35,7 +35,7 @@\n \n --  This version is for NT\n \n-with Interfaces.C.Strings;\n+with Interfaces.C;\n \n with GNAT.Sockets.Thin_Common;\n \n@@ -66,8 +66,7 @@ package GNAT.Sockets.Thin is\n \n    package Host_Error_Messages is\n \n-      function Host_Error_Message\n-        (H_Errno : Integer) return C.Strings.chars_ptr;\n+      function Host_Error_Message (H_Errno : Integer) return String;\n       --  Returns the error message string for the host error number H_Errno.\n       --  If H_Errno is not known, returns \"Unknown system error\".\n "}, {"sha": "4005cd30787f1e6f27f35c60ecee9ba01426cb37", "filename": "gcc/ada/g-socthi-vms.adb", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47752af2e8442f1141f1025e58f9dcb76cdd7422/gcc%2Fada%2Fg-socthi-vms.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47752af2e8442f1141f1025e58f9dcb76cdd7422/gcc%2Fada%2Fg-socthi-vms.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socthi-vms.adb?ref=47752af2e8442f1141f1025e58f9dcb76cdd7422", "patch": "@@ -66,9 +66,6 @@ package body GNAT.Sockets.Thin is\n    --  mode and we spend a period of time Quantum between two attempts on a\n    --  blocking operation.\n \n-   Unknown_System_Error : constant C.Strings.chars_ptr :=\n-                            C.Strings.New_String (\"Unknown system error\");\n-\n    function Syscall_Accept\n      (S       : C.int;\n       Addr    : System.Address;"}, {"sha": "25c587057036f32304cb8d42b3d0f49445879dfd", "filename": "gcc/ada/g-socthi-vms.ads", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47752af2e8442f1141f1025e58f9dcb76cdd7422/gcc%2Fada%2Fg-socthi-vms.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47752af2e8442f1141f1025e58f9dcb76cdd7422/gcc%2Fada%2Fg-socthi-vms.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socthi-vms.ads?ref=47752af2e8442f1141f1025e58f9dcb76cdd7422", "patch": "@@ -35,7 +35,7 @@\n \n --  This is the Alpha/VMS version\n \n-with Interfaces.C.Strings;\n+with Interfaces.C;\n \n with GNAT.OS_Lib;\n with GNAT.Sockets.Thin_Common;\n@@ -69,8 +69,7 @@ package GNAT.Sockets.Thin is\n \n    package Host_Error_Messages is\n \n-      function Host_Error_Message\n-        (H_Errno : Integer) return C.Strings.chars_ptr;\n+      function Host_Error_Message (H_Errno : Integer) return String;\n       --  Returns the error message string for the host error number H_Errno.\n       --  If H_Errno is not known, returns \"Unknown system error\".\n "}, {"sha": "0e3f7d7dab78515185b68ebe212f13becc0ebf14", "filename": "gcc/ada/g-socthi-vxworks.adb", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47752af2e8442f1141f1025e58f9dcb76cdd7422/gcc%2Fada%2Fg-socthi-vxworks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47752af2e8442f1141f1025e58f9dcb76cdd7422/gcc%2Fada%2Fg-socthi-vxworks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socthi-vxworks.adb?ref=47752af2e8442f1141f1025e58f9dcb76cdd7422", "patch": "@@ -57,9 +57,6 @@ package body GNAT.Sockets.Thin is\n    --  non-blocking mode and we spend a period of time Quantum between\n    --  two attempts on a blocking operation.\n \n-   Unknown_System_Error : constant C.Strings.chars_ptr :=\n-                            C.Strings.New_String (\"Unknown system error\");\n-\n    -----------------------\n    -- Local Subprograms --\n    -----------------------"}, {"sha": "8fe96ce7a3625dcdc020ee227846d4f8fe26869d", "filename": "gcc/ada/g-socthi-vxworks.ads", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47752af2e8442f1141f1025e58f9dcb76cdd7422/gcc%2Fada%2Fg-socthi-vxworks.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47752af2e8442f1141f1025e58f9dcb76cdd7422/gcc%2Fada%2Fg-socthi-vxworks.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socthi-vxworks.ads?ref=47752af2e8442f1141f1025e58f9dcb76cdd7422", "patch": "@@ -35,7 +35,7 @@\n \n --  This is the version for VxWorks\n \n-with Interfaces.C.Strings;\n+with Interfaces.C;\n \n with GNAT.OS_Lib;\n with GNAT.Sockets.Thin_Common;\n@@ -67,8 +67,7 @@ package GNAT.Sockets.Thin is\n \n    package Host_Error_Messages is\n \n-      function Host_Error_Message\n-        (H_Errno : Integer) return C.Strings.chars_ptr;\n+      function Host_Error_Message (H_Errno : Integer) return String;\n       --  Returns the error message string for the host error number H_Errno.\n       --  If H_Errno is not known, returns \"Unknown system error\".\n "}, {"sha": "76d82a8a413b21f0c7c64940aa7ec1c9ccc79c63", "filename": "gcc/ada/g-socthi.adb", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47752af2e8442f1141f1025e58f9dcb76cdd7422/gcc%2Fada%2Fg-socthi.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47752af2e8442f1141f1025e58f9dcb76cdd7422/gcc%2Fada%2Fg-socthi.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socthi.adb?ref=47752af2e8442f1141f1025e58f9dcb76cdd7422", "patch": "@@ -57,8 +57,6 @@ package body GNAT.Sockets.Thin is\n    --  non-blocking mode and we spend a period of time Quantum between\n    --  two attempts on a blocking operation.\n \n-   Unknown_System_Error : constant String := \"Unknown system error\";\n-\n    --  Comments required for following functions ???\n \n    function Syscall_Accept"}, {"sha": "062ad186fec86af900a7e1d235ed2a3c3e782779", "filename": "gcc/ada/g-socthi.ads", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47752af2e8442f1141f1025e58f9dcb76cdd7422/gcc%2Fada%2Fg-socthi.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47752af2e8442f1141f1025e58f9dcb76cdd7422/gcc%2Fada%2Fg-socthi.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socthi.ads?ref=47752af2e8442f1141f1025e58f9dcb76cdd7422", "patch": "@@ -35,7 +35,7 @@\n \n --  This is the default version\n \n-with Interfaces.C.Strings;\n+with Interfaces.C;\n \n with GNAT.OS_Lib;\n with GNAT.Sockets.Thin_Common;\n@@ -68,8 +68,7 @@ package GNAT.Sockets.Thin is\n \n    package Host_Error_Messages is\n \n-      function Host_Error_Message\n-        (H_Errno : Integer) return C.Strings.chars_ptr;\n+      function Host_Error_Message (H_Errno : Integer) return String;\n       --  Returns the error message string for the host error number H_Errno.\n       --  If H_Errno is not known, returns \"Unknown system error\".\n "}, {"sha": "ceccba0ba01c86a47f8a9c62441a9db4513a1436", "filename": "gcc/ada/g-stheme.adb", "status": "modified", "additions": 7, "deletions": 26, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47752af2e8442f1141f1025e58f9dcb76cdd7422/gcc%2Fada%2Fg-stheme.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47752af2e8442f1141f1025e58f9dcb76cdd7422/gcc%2Fada%2Fg-stheme.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-stheme.adb?ref=47752af2e8442f1141f1025e58f9dcb76cdd7422", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 2007-2010, AdaCore                     --\n+--                     Copyright (C) 2007-2013, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -36,38 +36,19 @@\n separate (GNAT.Sockets.Thin)\n package body Host_Error_Messages is\n \n-   package Messages is\n-      HOST_NOT_FOUND : aliased char_array := \"Host not found\" & nul;\n-      TRY_AGAIN      : aliased char_array := \"Try again\"      & nul;\n-      NO_RECOVERY    : aliased char_array := \"No recovery\"    & nul;\n-      NO_DATA        : aliased char_array := \"No address\"     & nul;\n-      Unknown_Error  : aliased char_array := \"Unknown error\"  & nul;\n-   end Messages;\n-\n-   function Host_Error_Message (H_Errno : Integer) return C.Strings.chars_ptr\n-   is\n-      use Interfaces.C.Strings;\n-      function TCP\n-        (P : char_array_access; Nul_Check : Boolean := False) return chars_ptr\n-         renames To_Chars_Ptr;\n-\n+   function Host_Error_Message (H_Errno : Integer) return String is\n    begin\n       case H_Errno is\n          when SOSC.HOST_NOT_FOUND =>\n-            return TCP (Messages.HOST_NOT_FOUND'Access);\n-\n+            return \"Host not found\";\n          when SOSC.TRY_AGAIN      =>\n-            return TCP (Messages.TRY_AGAIN'Access);\n-\n+            return \"Try again\";\n          when SOSC.NO_RECOVERY    =>\n-            return TCP (Messages.NO_RECOVERY'Access);\n-\n+            return \"No recovery\";\n          when SOSC.NO_DATA        =>\n-            return TCP (Messages.NO_DATA'Access);\n-\n+            return \"No address\";\n          when others              =>\n-            return TCP (Messages.Unknown_Error'Access);\n-\n+            return \"Unknown error\";\n       end case;\n    end Host_Error_Message;\n "}, {"sha": "2b6aeeb485685e1c3382d61ebf771cf2f5c67cf4", "filename": "gcc/ada/g-stseme.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47752af2e8442f1141f1025e58f9dcb76cdd7422/gcc%2Fada%2Fg-stseme.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47752af2e8442f1141f1025e58f9dcb76cdd7422/gcc%2Fada%2Fg-stseme.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-stseme.adb?ref=47752af2e8442f1141f1025e58f9dcb76cdd7422", "patch": "@@ -44,5 +44,5 @@ function Socket_Error_Message\n   (Errno : Integer) return String\n is\n begin\n-   return Errno_Message (Errno, Default => Unknown_System_Error);\n+   return Errno_Message (Errno, Default => \"Unknown system error\");\n end Socket_Error_Message;"}]}