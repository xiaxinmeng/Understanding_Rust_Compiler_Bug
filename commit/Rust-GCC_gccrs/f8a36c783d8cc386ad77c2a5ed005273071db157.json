{"sha": "f8a36c783d8cc386ad77c2a5ed005273071db157", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjhhMzZjNzgzZDhjYzM4NmFkNzdjMmE1ZWQwMDUyNzMwNzFkYjE1Nw==", "commit": {"author": {"name": "Teresa Johnson", "email": "tejohnson@google.com", "date": "2014-06-26T17:54:19Z"}, "committer": {"name": "Teresa Johnson", "email": "tejohnson@gcc.gnu.org", "date": "2014-06-26T17:54:19Z"}, "message": "c-common.h (get_dump_info): Declare.\n\n2014-06-26  Teresa Johnson  <tejohnson@google.com>\n\n\t* c-family/c-common.h (get_dump_info): Declare.\n\t* c-family/c-gimplify.c (c_genericize): Use saved dump files.\n\t* c-family/c-opts.c (c_common_parse_file): Begin and end dumps\n\tonce around parsing invocation.\n\t(get_dump_info): New function.\n\t* cp/class.c (dump_class_hierarchy): Use saved dump files.\n\t(dump_vtable): Ditto.\n\t(dump_vtt): Ditto.\n\nFrom-SVN: r212041", "tree": {"sha": "f6fc6abbeb062d0ab81546f34bca1699b5d94d05", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f6fc6abbeb062d0ab81546f34bca1699b5d94d05"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f8a36c783d8cc386ad77c2a5ed005273071db157", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8a36c783d8cc386ad77c2a5ed005273071db157", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f8a36c783d8cc386ad77c2a5ed005273071db157", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8a36c783d8cc386ad77c2a5ed005273071db157/comments", "author": {"login": "teresajohnson", "id": 20446403, "node_id": "MDQ6VXNlcjIwNDQ2NDAz", "avatar_url": "https://avatars.githubusercontent.com/u/20446403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/teresajohnson", "html_url": "https://github.com/teresajohnson", "followers_url": "https://api.github.com/users/teresajohnson/followers", "following_url": "https://api.github.com/users/teresajohnson/following{/other_user}", "gists_url": "https://api.github.com/users/teresajohnson/gists{/gist_id}", "starred_url": "https://api.github.com/users/teresajohnson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/teresajohnson/subscriptions", "organizations_url": "https://api.github.com/users/teresajohnson/orgs", "repos_url": "https://api.github.com/users/teresajohnson/repos", "events_url": "https://api.github.com/users/teresajohnson/events{/privacy}", "received_events_url": "https://api.github.com/users/teresajohnson/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f14726bd4b39a60b132f728fa9d2b8102cccf475", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f14726bd4b39a60b132f728fa9d2b8102cccf475", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f14726bd4b39a60b132f728fa9d2b8102cccf475"}], "stats": {"total": 65, "additions": 54, "deletions": 11}, "files": [{"sha": "b8446a6c7498d9c29cc579eb0c27efe1d949a601", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8a36c783d8cc386ad77c2a5ed005273071db157/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8a36c783d8cc386ad77c2a5ed005273071db157/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f8a36c783d8cc386ad77c2a5ed005273071db157", "patch": "@@ -1,3 +1,14 @@\n+2014-06-26  Teresa Johnson  <tejohnson@google.com>\n+\n+\t* c-family/c-common.h (get_dump_info): Declare.\n+\t* c-family/c-gimplify.c (c_genericize): Use saved dump files.\n+\t* c-family/c-opts.c (c_common_parse_file): Begin and end dumps\n+\tonce around parsing invocation.\n+\t(get_dump_info): New function.\n+\t* cp/class.c (dump_class_hierarchy): Use saved dump files.\n+\t(dump_vtable): Ditto.\n+\t(dump_vtt): Ditto.\n+\n 2014-06-26  Teresa Johnson  <tejohnson@google.com>\n \n \t* doc/invoke.texi: Fix typo."}, {"sha": "8e06487d117a6b84a70d0eda1ed9c76dbdec3974", "filename": "gcc/c-family/c-common.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8a36c783d8cc386ad77c2a5ed005273071db157/gcc%2Fc-family%2Fc-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8a36c783d8cc386ad77c2a5ed005273071db157/gcc%2Fc-family%2Fc-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.h?ref=f8a36c783d8cc386ad77c2a5ed005273071db157", "patch": "@@ -835,6 +835,7 @@ extern bool c_common_post_options (const char **);\n extern bool c_common_init (void);\n extern void c_common_finish (void);\n extern void c_common_parse_file (void);\n+extern FILE *get_dump_info (int, int *);\n extern alias_set_type c_common_get_alias_set (tree);\n extern void c_register_builtin_type (tree, const char*);\n extern bool c_promoting_integer_type_p (const_tree);"}, {"sha": "16bffd297bd65c896832a032eb81eef04bd33bf4", "filename": "gcc/c-family/c-gimplify.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8a36c783d8cc386ad77c2a5ed005273071db157/gcc%2Fc-family%2Fc-gimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8a36c783d8cc386ad77c2a5ed005273071db157/gcc%2Fc-family%2Fc-gimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-gimplify.c?ref=f8a36c783d8cc386ad77c2a5ed005273071db157", "patch": "@@ -123,7 +123,7 @@ c_genericize (tree fndecl)\n     }\n \n   /* Dump the C-specific tree IR.  */\n-  dump_orig = dump_begin (TDI_original, &local_dump_flags);\n+  dump_orig = get_dump_info (TDI_original, &local_dump_flags);\n   if (dump_orig)\n     {\n       fprintf (dump_orig, \"\\n;; Function %s\",\n@@ -140,8 +140,6 @@ c_genericize (tree fndecl)\n       else\n \tprint_c_tree (dump_orig, DECL_SAVED_TREE (fndecl));\n       fprintf (dump_orig, \"\\n\");\n-\n-      dump_end (TDI_original, dump_orig);\n     }\n \n   /* Dump all nested functions now.  */"}, {"sha": "97215fc7e8588390830e6487a46e14bda39579fa", "filename": "gcc/c-family/c-opts.c", "status": "modified", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8a36c783d8cc386ad77c2a5ed005273071db157/gcc%2Fc-family%2Fc-opts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8a36c783d8cc386ad77c2a5ed005273071db157/gcc%2Fc-family%2Fc-opts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-opts.c?ref=f8a36c783d8cc386ad77c2a5ed005273071db157", "patch": "@@ -43,6 +43,7 @@ along with GCC; see the file COPYING3.  If not see\n \t\t\t\t   TARGET_FLT_EVAL_METHOD_NON_DEFAULT and\n \t\t\t\t   TARGET_OPTF.  */\n #include \"tm_p.h\"\t\t/* For C_COMMON_OVERRIDE_OPTIONS.  */\n+#include \"dumpfile.h\"\n \n #ifndef DOLLARS_IN_IDENTIFIERS\n # define DOLLARS_IN_IDENTIFIERS true\n@@ -102,6 +103,12 @@ static size_t deferred_count;\n /* Number of deferred options scanned for -include.  */\n static size_t include_cursor;\n \n+/* Dump files/flags to use during parsing.  */\n+static FILE *original_dump_file = NULL;\n+static int original_dump_flags;\n+static FILE *class_dump_file = NULL;\n+static int class_dump_flags;\n+\n /* Whether any standard preincluded header has been preincluded.  */\n static bool done_preinclude;\n \n@@ -1088,6 +1095,10 @@ c_common_parse_file (void)\n   for (;;)\n     {\n       c_finish_options ();\n+      /* Open the dump files to use for the original and class dump output\n+         here, to be used during parsing for the current file.  */\n+      original_dump_file = dump_begin (TDI_original, &original_dump_flags);\n+      class_dump_file = dump_begin (TDI_class, &class_dump_flags);\n       pch_init ();\n       push_file_scope ();\n       c_parse_file ();\n@@ -1101,13 +1112,40 @@ c_common_parse_file (void)\n       cpp_clear_file_cache (parse_in);\n       this_input_filename\n \t= cpp_read_main_file (parse_in, in_fnames[i]);\n+      if (original_dump_file)\n+        {\n+          dump_end (TDI_original, original_dump_file);\n+          original_dump_file = NULL;\n+        }\n+      if (class_dump_file)\n+        {\n+          dump_end (TDI_class, class_dump_file);\n+          class_dump_file = NULL;\n+        }\n       /* If an input file is missing, abandon further compilation.\n \t cpplib has issued a diagnostic.  */\n       if (!this_input_filename)\n \tbreak;\n     }\n }\n \n+/* Returns the appropriate dump file for PHASE to dump with FLAGS.  */\n+FILE *\n+get_dump_info (int phase, int *flags)\n+{\n+  gcc_assert (phase == TDI_original || phase == TDI_class);\n+  if (phase == TDI_original)\n+    {\n+      *flags = original_dump_flags;\n+      return original_dump_file;\n+    }\n+  else\n+    {\n+      *flags = class_dump_flags;\n+      return class_dump_file;\n+    }\n+}\n+\n /* Common finish hook for the C, ObjC and C++ front ends.  */\n void\n c_common_finish (void)"}, {"sha": "d3bc71e01ce5a2aa7c800e68064e8cc8afdb5206", "filename": "gcc/cp/class.c", "status": "modified", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8a36c783d8cc386ad77c2a5ed005273071db157/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8a36c783d8cc386ad77c2a5ed005273071db157/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=f8a36c783d8cc386ad77c2a5ed005273071db157", "patch": "@@ -8077,12 +8077,11 @@ static void\n dump_class_hierarchy (tree t)\n {\n   int flags;\n-  FILE *stream = dump_begin (TDI_class, &flags);\n+  FILE *stream = get_dump_info (TDI_class, &flags);\n \n   if (stream)\n     {\n       dump_class_hierarchy_1 (stream, flags, t);\n-      dump_end (TDI_class, stream);\n     }\n }\n \n@@ -8112,7 +8111,7 @@ static void\n dump_vtable (tree t, tree binfo, tree vtable)\n {\n   int flags;\n-  FILE *stream = dump_begin (TDI_class, &flags);\n+  FILE *stream = get_dump_info (TDI_class, &flags);\n \n   if (!stream)\n     return;\n@@ -8135,15 +8134,13 @@ dump_vtable (tree t, tree binfo, tree vtable)\n       dump_array (stream, vtable);\n       fprintf (stream, \"\\n\");\n     }\n-\n-  dump_end (TDI_class, stream);\n }\n \n static void\n dump_vtt (tree t, tree vtt)\n {\n   int flags;\n-  FILE *stream = dump_begin (TDI_class, &flags);\n+  FILE *stream = get_dump_info (TDI_class, &flags);\n \n   if (!stream)\n     return;\n@@ -8155,8 +8152,6 @@ dump_vtt (tree t, tree vtt)\n       dump_array (stream, vtt);\n       fprintf (stream, \"\\n\");\n     }\n-\n-  dump_end (TDI_class, stream);\n }\n \n /* Dump a function or thunk and its thunkees.  */"}]}