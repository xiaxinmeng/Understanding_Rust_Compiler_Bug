{"sha": "f9105bfacd6119d197885897857f82e7a7cfdde1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjkxMDViZmFjZDYxMTlkMTk3ODg1ODk3ODU3ZjgyZTdhN2NmZGRlMQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-10-16T12:47:43Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-10-16T12:47:43Z"}, "message": "[multiple changes]\n\n2015-10-16  Bob Duff  <duff@adacore.com>\n\n        * a-tags.adb, s-trasym.adb, s-trasym.ads: Make sure we don't get                elaboration circularities when polling is turned on.\n\n2015-10-16  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch3.adb (Replace_Anonymous_Access_To_Protected_Subprogram):\n\tWhen creating a full declaration for a formal parameter, the\n\tentity is labelled as an Itype, so set Associated_Node_For_Itype\n\taccordingly.\n\t* einfo.ads: Clarify use of Associated_Node_For_Itype.\n\n2015-10-16  Bob Duff  <duff@adacore.com>\n\n\t* bindgen: Move pragmas Warnings earlier, otherwise\n\twe can get warnings on with_clauses.\n\nFrom-SVN: r228885", "tree": {"sha": "1cf22996f19eafe7d153ef92c9019351176ef4cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1cf22996f19eafe7d153ef92c9019351176ef4cb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f9105bfacd6119d197885897857f82e7a7cfdde1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9105bfacd6119d197885897857f82e7a7cfdde1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f9105bfacd6119d197885897857f82e7a7cfdde1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9105bfacd6119d197885897857f82e7a7cfdde1/comments", "author": null, "committer": null, "parents": [{"sha": "69d8d8b48db46c328cd16f3f2605677f35fe1362", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69d8d8b48db46c328cd16f3f2605677f35fe1362", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69d8d8b48db46c328cd16f3f2605677f35fe1362"}], "stats": {"total": 57, "additions": 47, "deletions": 10}, "files": [{"sha": "c48e1f65cda5d76907901a144dbfa12ac4202afc", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9105bfacd6119d197885897857f82e7a7cfdde1/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9105bfacd6119d197885897857f82e7a7cfdde1/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=f9105bfacd6119d197885897857f82e7a7cfdde1", "patch": "@@ -1,3 +1,21 @@\n+2015-10-16  Bob Duff  <duff@adacore.com>\n+\n+\t* a-tags.adb, s-trasym.adb, s-trasym.ads: Make sure we don't get\n+\telaboration circularities when polling is turned on.\n+\n+2015-10-16  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch3.adb (Replace_Anonymous_Access_To_Protected_Subprogram):\n+\tWhen creating a full declaration for a formal parameter, the\n+\tentity is labelled as an Itype, so set Associated_Node_For_Itype\n+\taccordingly.\n+\t* einfo.ads: Clarify use of Associated_Node_For_Itype.\n+\n+2015-10-16  Bob Duff  <duff@adacore.com>\n+\n+\t* bindgen: Move pragmas Warnings earlier, otherwise\n+\twe can get warnings on with_clauses.\n+\n 2015-10-16  Arnaud Charlet  <charlet@adacore.com>\n \n \t* s-osprim-mingw.adb, s-osprim-x32.adb, s-taprop-mingw.adb,"}, {"sha": "203d19ed6764eeccbddc9584119e9952e2180336", "filename": "gcc/ada/a-tags.adb", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9105bfacd6119d197885897857f82e7a7cfdde1/gcc%2Fada%2Fa-tags.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9105bfacd6119d197885897857f82e7a7cfdde1/gcc%2Fada%2Fa-tags.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-tags.adb?ref=f9105bfacd6119d197885897857f82e7a7cfdde1", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -37,7 +37,11 @@ with System.Storage_Elements; use System.Storage_Elements;\n with System.WCh_Con;          use System.WCh_Con;\n with System.WCh_StW;          use System.WCh_StW;\n \n-pragma Elaborate_All (System.HTable);\n+pragma Elaborate (System.HTable);\n+--  Elaborate needed instead of Elaborate_All to avoid elaboration cycles\n+--  when polling is turned on. This is safe because HTable doesn't do anything\n+--  at elaboration time; it just contains a generic package we want to\n+--  instantiate.\n \n package body Ada.Tags is\n "}, {"sha": "7c8aff2d12042a1b0d515255eb77a3d714c0b5f5", "filename": "gcc/ada/bindgen.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9105bfacd6119d197885897857f82e7a7cfdde1/gcc%2Fada%2Fbindgen.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9105bfacd6119d197885897857f82e7a7cfdde1/gcc%2Fada%2Fbindgen.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindgen.adb?ref=f9105bfacd6119d197885897857f82e7a7cfdde1", "patch": "@@ -1983,6 +1983,7 @@ package body Bindgen is\n       --  of the Ada 2005 or Ada 2012 constructs are needed by the binder file.\n \n       WBI (\"pragma Ada_95;\");\n+      WBI (\"pragma Warnings (Off);\");\n \n       --  If we are operating in Restrictions (No_Exception_Handlers) mode,\n       --  then we need to make sure that the binder program is compiled with\n@@ -2031,7 +2032,6 @@ package body Bindgen is\n       end if;\n \n       WBI (\"package \" & Ada_Main & \" is\");\n-      WBI (\"   pragma Warnings (Off);\");\n \n       --  Main program case\n \n@@ -2182,6 +2182,7 @@ package body Bindgen is\n       --  of the Ada 2005/2012 constructs are needed by the binder file.\n \n       WBI (\"pragma Ada_95;\");\n+      WBI (\"pragma Warnings (Off);\");\n \n       --  Output Source_File_Name pragmas which look like\n \n@@ -2243,7 +2244,6 @@ package body Bindgen is\n \n       WBI (\"\");\n       WBI (\"package body \" & Ada_Main & \" is\");\n-      WBI (\"   pragma Warnings (Off);\");\n       WBI (\"\");\n \n       --  Generate externals for elaboration entities"}, {"sha": "8949ea2bc83ced9d3016548b08fef1642139e9ac", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9105bfacd6119d197885897857f82e7a7cfdde1/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9105bfacd6119d197885897857f82e7a7cfdde1/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=f9105bfacd6119d197885897857f82e7a7cfdde1", "patch": "@@ -462,10 +462,15 @@ package Einfo is\n --       copying trees, to determine whether or not to copy an Itype, and\n --       also for accessibility checks on anonymous access types. This\n --       node is typically an object declaration, component declaration,\n---       type or subtype declaration. For an access discriminant in a type\n---       declaration, the associated_node_for_itype is the discriminant\n---       specification. For an access parameter it is the enclosing subprogram\n---       declaration.\n+--       type or subtype declaration.\n+\n+--       For an access discriminant in a type declaration, the associated_\n+--       node_for_itype is the corresponding discriminant specification.\n+\n+--       For an access parameter it is the enclosing subprogram declaration.\n+\n+--       For an access_to_protected_subprogram parameter it is the declaration\n+--       of the corresponding formal parameter.\n --\n --       Itypes have no explicit declaration, and therefore are not attached to\n --       the tree: their Parent field is always empty. The Associated_Node_For_"}, {"sha": "740bef9eeeade71d63d5fd3a0da9bf6aa8b8ab2e", "filename": "gcc/ada/s-trasym.adb", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9105bfacd6119d197885897857f82e7a7cfdde1/gcc%2Fada%2Fs-trasym.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9105bfacd6119d197885897857f82e7a7cfdde1/gcc%2Fada%2Fs-trasym.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-trasym.adb?ref=f9105bfacd6119d197885897857f82e7a7cfdde1", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 1999-2014, AdaCore                     --\n+--                     Copyright (C) 1999-2015, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -33,6 +33,10 @@\n --  is not supported. It returns tracebacks as lists of LF separated strings of\n --  the form \"0x...\" corresponding to the addresses.\n \n+pragma Polling (Off);\n+--  We must turn polling off for this unit, because otherwise we can get\n+--  elaboration circularities when polling is turned on\n+\n with Ada.Exceptions.Traceback; use Ada.Exceptions.Traceback;\n with System.Address_Image;\n "}, {"sha": "5c2812b13082f1f66513bd3d0fd8db5c478a9ceb", "filename": "gcc/ada/s-trasym.ads", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9105bfacd6119d197885897857f82e7a7cfdde1/gcc%2Fada%2Fs-trasym.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9105bfacd6119d197885897857f82e7a7cfdde1/gcc%2Fada%2Fs-trasym.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-trasym.ads?ref=f9105bfacd6119d197885897857f82e7a7cfdde1", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                     Copyright (C) 1999-2014, AdaCore                     --\n+--                     Copyright (C) 1999-2015, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -62,6 +62,10 @@\n --  Symbolic_Traceback return a list of addresses expressed as \"0x...\"\n --  separated by line feed.\n \n+pragma Polling (Off);\n+--  We must turn polling off for this unit, because otherwise we can get\n+--  elaboration circularities when polling is turned on\n+\n with Ada.Exceptions;\n \n package System.Traceback.Symbolic is"}, {"sha": "f21edeb057e1ad96a26cc769045e5aaa25f67c94", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9105bfacd6119d197885897857f82e7a7cfdde1/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9105bfacd6119d197885897857f82e7a7cfdde1/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=f9105bfacd6119d197885897857f82e7a7cfdde1", "patch": "@@ -5919,10 +5919,12 @@ package body Sem_Ch3 is\n       else\n          --  Temporarily remove the current scope (record or subprogram) from\n          --  the stack to add the new declarations to the enclosing scope.\n+         --  The anonymous entity is an Itype with the proper attributes.\n \n          Scope_Stack.Decrement_Last;\n          Analyze (Decl);\n          Set_Is_Itype (Anon);\n+         Set_Associated_Node_For_Itype (Anon, N);\n          Scope_Stack.Append (Curr_Scope);\n       end if;\n "}]}