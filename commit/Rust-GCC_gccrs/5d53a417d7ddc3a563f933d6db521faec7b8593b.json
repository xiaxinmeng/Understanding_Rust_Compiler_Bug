{"sha": "5d53a417d7ddc3a563f933d6db521faec7b8593b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWQ1M2E0MTdkN2RkYzNhNTYzZjkzM2Q2ZGI1MjFmYWVjN2I4NTkzYg==", "commit": {"author": {"name": "John Hassey", "email": "hassey@gnu.org", "date": "1993-08-04T01:47:35Z"}, "committer": {"name": "John Hassey", "email": "hassey@gnu.org", "date": "1993-08-04T01:47:35Z"}, "message": "Initial revision\n\nFrom-SVN: r5064", "tree": {"sha": "3f876049e3dd7ef99b0a217b73dd8924d45a74ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3f876049e3dd7ef99b0a217b73dd8924d45a74ee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5d53a417d7ddc3a563f933d6db521faec7b8593b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d53a417d7ddc3a563f933d6db521faec7b8593b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d53a417d7ddc3a563f933d6db521faec7b8593b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d53a417d7ddc3a563f933d6db521faec7b8593b/comments", "author": null, "committer": null, "parents": [{"sha": "3a08477ac574d22ace439cb7e6b93184d8f13b7c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a08477ac574d22ace439cb7e6b93184d8f13b7c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a08477ac574d22ace439cb7e6b93184d8f13b7c"}], "stats": {"total": 179, "additions": 179, "deletions": 0}, "files": [{"sha": "89133b98a2d8deb579d8cac1b4839850b0404dc5", "filename": "gcc/fixinc.dgux", "status": "added", "additions": 179, "deletions": 0, "changes": 179, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d53a417d7ddc3a563f933d6db521faec7b8593b/gcc%2Ffixinc.dgux", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d53a417d7ddc3a563f933d6db521faec7b8593b/gcc%2Ffixinc.dgux", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc.dgux?ref=5d53a417d7ddc3a563f933d6db521faec7b8593b", "patch": "@@ -0,0 +1,179 @@\n+#!/bin/sh\n+#\n+# modified for dgux by hassey@dg-rtp.dg.com based on\n+#\n+#   fixinc.svr4  written by Ron Guilmette (rfg@ncd.com).\n+#\n+# This file is part of GNU CC.\n+# \n+# GNU CC is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 2, or (at your option)\n+# any later version.\n+# \n+# GNU CC is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+# \n+# You should have received a copy of the GNU General Public License\n+# along with GNU CC; see the file COPYING.  If not, write to\n+# the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.\n+#\n+#\n+#\tSee README-fixinc for more information.\n+\n+# Directory where gcc sources (and sometimes special include files) live.\n+SRCDIR=${3-${SRCDIR-.}}\n+\n+# Directory containing the original header files.\n+INPUT=${2-${INPUT-/usr/include}}\n+\n+# Fail if no arg to specify a directory for the output.\n+if [ x$1 = x ]\n+then echo fixincludes: no output directory specified\n+exit 1\n+fi\n+\n+# Directory in which to store the results.\n+LIB=${1?\"fixincludes: output directory not specified\"}\n+\n+# Make sure it exists.\n+if [ ! -d $LIB ]; then\n+  mkdir $LIB || exit 1\n+fi\n+\n+ORIG_DIR=`pwd`\n+\n+# Make LIB absolute if it is relative.\n+# Don't do this if not necessary, since may screw up automounters.\n+case $LIB in\n+/*)\n+\t;;\n+*)\n+\tcd $LIB; LIB=`${PWDCMD-pwd}`\n+\t;;\n+esac\n+\n+echo 'Building fixincludes in ' ${LIB}\n+\n+# Determine whether this filesystem has symbolic links.\n+if ln -s X $LIB/ShouldNotExist 2>/dev/null; then\n+  rm -f $LIB/ShouldNotExist\n+  LINKS=true\n+else\n+  LINKS=false\n+fi\n+\n+echo 'Making directories:'\n+cd ${INPUT}\n+if $LINKS; then\n+  files=`ls -LR | sed -n s/:$//p`\n+else\n+  files=`find . -type d -print | sed '/^.$/d'`\n+fi\n+for file in $files; do\n+  rm -rf $LIB/$file\n+  if [ ! -d $LIB/$file ]\n+  then mkdir $LIB/$file\n+  fi\n+done\n+\n+# treetops gets an alternating list\n+# of old directories to copy\n+# and the new directories to copy to.\n+treetops=\"${INPUT} ${LIB}\"\n+\n+if $LINKS; then\n+  echo 'Making internal symbolic directory links'\n+  for file in $files; do\n+    dest=`ls -ld $file | sed -n 's/.*-> //p'`\n+    if [ \"$dest\" ]; then    \n+      cwd=`pwd`\n+      # In case $dest is relative, get to $file's dir first.\n+      cd ${INPUT}\n+      cd `echo ./$file | sed -n 's&[^/]*$&&p'`\n+      # Check that the target directory exists.\n+      # Redirections changed to avoid bug in sh on Ultrix.\n+      (cd $dest) > /dev/null 2>&1\n+      if [ $? = 0 ]; then\n+\tcd $dest\n+\t# X gets the dir that the link actually leads to.\n+\tx=`pwd`\n+\t# If link leads back into ${INPUT},\n+\t# make a similar link here.\n+\tif expr $x : \"${INPUT}/.*\" > /dev/null; then\n+\t  # Y gets the actual target dir name, relative to ${INPUT}.\n+\t  y=`echo $x | sed -n \"s&${INPUT}/&&p\"`\n+\t  # DOTS is the relative path from ${LIB}/$file's dir back to ${LIB}.\n+\t  dots=`echo \"$file\" |\n+\t\tsed -e 's@^./@@' -e 's@[^/][^/]*@..@g' -e 's@..$@@'`\n+\t  echo $file '->' $dots$y ': Making link'\n+\t  rm -fr ${LIB}/$file > /dev/null 2>&1\n+\t  ln -s $dots$y ${LIB}/$file > /dev/null 2>&1\n+\telse\n+\t  # If the link is to outside ${INPUT},\n+\t  # treat this directory as if it actually contained the files.\n+# This line used to have $dest instead of $x.\n+# $dest seemed to be wrong for links found in subdirectories\n+# of ${INPUT}.  Does this change break anything?\n+\t  treetops=\"$treetops $x ${LIB}/$file\"\n+\tfi\n+      fi\n+      cd $cwd\n+    fi\n+  done\n+fi\n+\n+# Completely replace <_int_varargs.h> with a file that defines\n+# va_list and gnuc_va_list\n+\n+file=_int_varargs.h\n+if [ -r ${INPUT}/$file ]; then\n+  echo Replacing $file\n+  cat > ${LIB}/$file << EOF\n+/* This file was generated by fixinc.dgux.  */\n+\n+/* Define __gnuc_va_list, just as in gstdarg.h.  */\n+\n+#ifndef __GNUC_VA_LIST\n+#define __GNUC_VA_LIST\n+#if defined(__svr4__) || defined(_AIX) || defined(_M_UNIX)\n+typedef char *__gnuc_va_list;\n+#else\n+typedef void *__gnuc_va_list;\n+#endif\n+#endif\n+\n+typedef __gnuc_va_list va_list;\n+\n+EOF\n+  chmod a+r ${LIB}/$file\n+fi\n+\n+echo 'Removing unneeded directories:'\n+cd $LIB\n+files=`find . -type d -print | sort -r`\n+for file in $files; do\n+  rmdir $LIB/$file > /dev/null 2>&1\n+done\n+\n+if $LINKS; then\n+  echo 'Making internal symbolic non-directory links'\n+  cd ${INPUT}\n+  files=`find . -type l -print`\n+  for file in $files; do\n+    dest=`ls -ld $file | sed -n 's/.*-> //p'`\n+    if expr \"$dest\" : '[^/].*' > /dev/null; then    \n+      target=${LIB}/`echo file | sed \"s|[^/]*\\$|$dest|\"`\n+      if [ -f $target ]; then\n+        ln -s $dest ${LIB}/$file >/dev/null 2>&1\n+      fi\n+    fi\n+  done\n+fi\n+\n+cd ${ORIG_DIR}\n+\n+exit 0\n+"}]}