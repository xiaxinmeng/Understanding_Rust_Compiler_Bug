{"sha": "36e9b73ea9637ec0fbb6ac533a6fa2b00d43a0ae", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzZlOWI3M2VhOTYzN2VjMGZiYjZhYzUzM2E2ZmEyYjAwZDQzYTBhZQ==", "commit": {"author": {"name": "Ilya Tocar", "email": "ilya.tocar@intel.com", "date": "2014-11-21T16:04:20Z"}, "committer": {"name": "Ilya Tocar", "email": "tocarip@gcc.gnu.org", "date": "2014-11-21T16:04:20Z"}, "message": "Add x86 pcommit instruction.\n\ngcc/\n\n\t* common/config/i386/i386-common.c (OPTION_MASK_ISA_PCOMMIT_UNSET,\n\tOPTION_MASK_ISA_PCOMMIT_SET): New.\n\t(ix86_handle_option): Handle OPT_mpcommit.\n\t* config.gcc: Add pcommitintrin.h\n\t* config/i386/pcommitintrin.h: New file.\n\t* config/i386/cpuid.h (bit_PCOMMIT): Define.\n\t* config/i386/driver-i386.c (host_detect_local_cpu): Detect pcommit.\n\t* config/i386/i386-c.c (ix86_target_macros_internal): Define\n\t__PCOMMIT__.\n\t* config/i386/i386.c (ix86_target_string): Add -mpcommit.\n\t(PTA_PCOMMIT): Define.\n\t(ix86_option_override_internal): Handle new option.\n\t(ix86_valid_target_attribute_inner_p): Add pcommit.\n\t(ix86_builtins): Add IX86_BUILTIN_PCOMMIT.\n\t(bdesc_special_args): Add __builtin_ia32_pcommit.\n\t* config/i386/i386.h (TARGET_PCOMMIT, TARGET_PCOMMIT_P): Define.\n\t* config/i386/i386.md (unspecv): Add UNSPECV_PCOMMIT.\n\t(pcommit): New instruction.\n\t* config/i386/i386.opt: Add mpcommit.\n\t* config/i386/x86intrin.h: Include pcommitintrin.h.\n\ngcc/testsuite/\n\n\t* g++.dg/other/i386-2.C: Add -mpcommit.\n\t* g++.dg/other/i386-3.C: Ditto.\n\t* gcc.target/i386/pcommit-1.c: New test.\n\t* gcc.target/i386/sse-12.c: Add new options.\n\t* gcc.target/i386/sse-13.c: Ditto.\n\t* gcc.target/i386/sse-14.c: Ditto.\n\t* gcc.target/i386/sse-22.c: Ditto.\n\t* gcc.target/i386/sse-23.c: Ditto.\n\nFrom-SVN: r217935", "tree": {"sha": "7ad8f4255de572112727df10b44ab413ff468127", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7ad8f4255de572112727df10b44ab413ff468127"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/36e9b73ea9637ec0fbb6ac533a6fa2b00d43a0ae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36e9b73ea9637ec0fbb6ac533a6fa2b00d43a0ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/36e9b73ea9637ec0fbb6ac533a6fa2b00d43a0ae", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36e9b73ea9637ec0fbb6ac533a6fa2b00d43a0ae/comments", "author": {"login": "TocarIP", "id": 16836375, "node_id": "MDQ6VXNlcjE2ODM2Mzc1", "avatar_url": "https://avatars.githubusercontent.com/u/16836375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TocarIP", "html_url": "https://github.com/TocarIP", "followers_url": "https://api.github.com/users/TocarIP/followers", "following_url": "https://api.github.com/users/TocarIP/following{/other_user}", "gists_url": "https://api.github.com/users/TocarIP/gists{/gist_id}", "starred_url": "https://api.github.com/users/TocarIP/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TocarIP/subscriptions", "organizations_url": "https://api.github.com/users/TocarIP/orgs", "repos_url": "https://api.github.com/users/TocarIP/repos", "events_url": "https://api.github.com/users/TocarIP/events{/privacy}", "received_events_url": "https://api.github.com/users/TocarIP/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "dcc9706615ef48df3c0bfa8a44b29bba52563f3e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dcc9706615ef48df3c0bfa8a44b29bba52563f3e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dcc9706615ef48df3c0bfa8a44b29bba52563f3e"}], "stats": {"total": 167, "additions": 156, "deletions": 11}, "files": [{"sha": "97510ec465fbb005b42609a96537b91cc93955be", "filename": "gcc/ChangeLog", "status": "modified", "additions": 24, "deletions": 1, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36e9b73ea9637ec0fbb6ac533a6fa2b00d43a0ae/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36e9b73ea9637ec0fbb6ac533a6fa2b00d43a0ae/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=36e9b73ea9637ec0fbb6ac533a6fa2b00d43a0ae", "patch": "@@ -1,3 +1,26 @@\n+2014-11-21  Ilya Tocar  <ilya.tocar@intel.com>\n+\n+\t* common/config/i386/i386-common.c (OPTION_MASK_ISA_PCOMMIT_UNSET,\n+\tOPTION_MASK_ISA_PCOMMIT_SET): New.\n+\t(ix86_handle_option): Handle OPT_mpcommit.\n+\t* config.gcc: Add pcommitintrin.h\n+\t* config/i386/pcommitintrin.h: New file.\n+\t* config/i386/cpuid.h (bit_PCOMMIT): Define.\n+\t* config/i386/driver-i386.c (host_detect_local_cpu): Detect pcommit.\n+\t* config/i386/i386-c.c (ix86_target_macros_internal): Define\n+\t__PCOMMIT__.\n+\t* config/i386/i386.c (ix86_target_string): Add -mpcommit.\n+\t(PTA_PCOMMIT): Define.\n+\t(ix86_option_override_internal): Handle new option.\n+\t(ix86_valid_target_attribute_inner_p): Add pcommit.\n+\t(ix86_builtins): Add IX86_BUILTIN_PCOMMIT.\n+\t(bdesc_special_args): Add __builtin_ia32_pcommit.\n+\t* config/i386/i386.h (TARGET_PCOMMIT, TARGET_PCOMMIT_P): Define.\n+\t* config/i386/i386.md (unspecv): Add UNSPECV_PCOMMIT.\n+\t(pcommit): New instruction.\n+\t* config/i386/i386.opt: Add mpcommit.\n+\t* config/i386/x86intrin.h: Include pcommitintrin.h.\n+\n 2014-11-20  Mark Wielaard  <mjw@redhat.com>\n \n \tPR debug/38757\n@@ -33,7 +56,7 @@\n \t* config.gcc: Add clwbintrin.h.\n \t* config/i386/clwbintrin.h: New file.\n \t* config/i386/cpuid.h (bit_CLWB): Define.\n-\t* config/i386/driver-i386.c (host_detect_local_cpu): Detect clwb. \n+\t* config/i386/driver-i386.c (host_detect_local_cpu): Detect clwb.\n \t* config/i386/i386-c.c (ix86_target_macros_internal): Define\n \t__CLWB__.\n \t* config/i386/i386.c (ix86_target_string): Add -mclwb."}, {"sha": "2e09d775d920f8635c42e8539971c7517740d7dd", "filename": "gcc/common/config/i386/i386-common.c", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36e9b73ea9637ec0fbb6ac533a6fa2b00d43a0ae/gcc%2Fcommon%2Fconfig%2Fi386%2Fi386-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36e9b73ea9637ec0fbb6ac533a6fa2b00d43a0ae/gcc%2Fcommon%2Fconfig%2Fi386%2Fi386-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon%2Fconfig%2Fi386%2Fi386-common.c?ref=36e9b73ea9637ec0fbb6ac533a6fa2b00d43a0ae", "patch": "@@ -86,6 +86,7 @@ along with GCC; see the file COPYING3.  If not see\n #define OPTION_MASK_ISA_XSAVEC_SET \\\n   (OPTION_MASK_ISA_XSAVEC | OPTION_MASK_ISA_XSAVE)\n #define OPTION_MASK_ISA_CLWB_SET OPTION_MASK_ISA_CLWB\n+#define OPTION_MASK_ISA_PCOMMIT_SET OPTION_MASK_ISA_PCOMMIT\n \n /* SSE4 includes both SSE4.1 and SSE4.2. -msse4 should be the same\n    as -msse4.2.  */\n@@ -182,6 +183,7 @@ along with GCC; see the file COPYING3.  If not see\n #define OPTION_MASK_ISA_CLFLUSHOPT_UNSET OPTION_MASK_ISA_CLFLUSHOPT\n #define OPTION_MASK_ISA_XSAVEC_UNSET OPTION_MASK_ISA_XSAVEC\n #define OPTION_MASK_ISA_XSAVES_UNSET OPTION_MASK_ISA_XSAVES\n+#define OPTION_MASK_ISA_PCOMMIT_UNSET OPTION_MASK_ISA_PCOMMIT\n #define OPTION_MASK_ISA_CLWB_UNSET OPTION_MASK_ISA_CLWB\n \n /* SSE4 includes both SSE4.1 and SSE4.2.  -mno-sse4 should the same\n@@ -903,6 +905,19 @@ ix86_handle_option (struct gcc_options *opts,\n \t}\n       return true;\n \n+    case OPT_mpcommit:\n+      if (value)\n+\t{\n+\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_PCOMMIT_SET;\n+\t  opts->x_ix86_isa_flags_explicit |= OPTION_MASK_ISA_PCOMMIT_SET;\n+\t}\n+      else\n+\t{\n+\t  opts->x_ix86_isa_flags &= ~OPTION_MASK_ISA_PCOMMIT_UNSET;\n+\t  opts->x_ix86_isa_flags_explicit |= OPTION_MASK_ISA_PCOMMIT_UNSET;\n+\t}\n+      return true;\n+\n     case OPT_mclwb:\n       if (value)\n \t{"}, {"sha": "fa3e1fceef64368ec73807d9bca9968f4c07fd43", "filename": "gcc/config.gcc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36e9b73ea9637ec0fbb6ac533a6fa2b00d43a0ae/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36e9b73ea9637ec0fbb6ac533a6fa2b00d43a0ae/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=36e9b73ea9637ec0fbb6ac533a6fa2b00d43a0ae", "patch": "@@ -369,7 +369,7 @@ i[34567]86-*-*)\n \t\t       xsavesintrin.h avx512dqintrin.h avx512bwintrin.h\n \t\t       avx512vlintrin.h avx512vlbwintrin.h avx512vldqintrin.h\n \t\t       avx512ifmaintrin.h avx512ifmavlintrin.h avx512vbmiintrin.h\n-\t\t       avx512vbmivlintrin.h clwbintrin.h\"\n+\t\t       avx512vbmivlintrin.h clwbintrin.h pcommitintrin.h\"\n \t;;\n x86_64-*-*)\n \tcpu_type=i386\n@@ -390,7 +390,7 @@ x86_64-*-*)\n \t\t       xsavesintrin.h avx512dqintrin.h avx512bwintrin.h\n \t\t       avx512vlintrin.h avx512vlbwintrin.h avx512vldqintrin.h\n \t\t       avx512ifmaintrin.h avx512ifmavlintrin.h avx512vbmiintrin.h\n-\t\t       avx512vbmivlintrin.h clwbintrin.h\"\n+\t\t       avx512vbmivlintrin.h clwbintrin.h pcommitintrin.h\"\n \t;;\n ia64-*-*)\n \textra_headers=ia64intrin.h"}, {"sha": "6c6e7f34acf1687f02fff568f7f2c392916de28d", "filename": "gcc/config/i386/cpuid.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36e9b73ea9637ec0fbb6ac533a6fa2b00d43a0ae/gcc%2Fconfig%2Fi386%2Fcpuid.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36e9b73ea9637ec0fbb6ac533a6fa2b00d43a0ae/gcc%2Fconfig%2Fi386%2Fcpuid.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fcpuid.h?ref=36e9b73ea9637ec0fbb6ac533a6fa2b00d43a0ae", "patch": "@@ -77,6 +77,7 @@\n #define bit_RDSEED\t(1 << 18)\n #define bit_ADX\t(1 << 19)\n #define bit_AVX512IFMA\t(1 << 21)\n+#define bit_PCOMMIT\t(1 << 22)\n #define bit_CLFLUSHOPT\t(1 << 23)\n #define bit_CLWB\t(1 << 24)\n #define bit_AVX512PF\t(1 << 26)"}, {"sha": "a2248ce78b408cb4cea9068da8caf88f9a2991df", "filename": "gcc/config/i386/driver-i386.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36e9b73ea9637ec0fbb6ac533a6fa2b00d43a0ae/gcc%2Fconfig%2Fi386%2Fdriver-i386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36e9b73ea9637ec0fbb6ac533a6fa2b00d43a0ae/gcc%2Fconfig%2Fi386%2Fdriver-i386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fdriver-i386.c?ref=36e9b73ea9637ec0fbb6ac533a6fa2b00d43a0ae", "patch": "@@ -413,6 +413,7 @@ const char *host_detect_local_cpu (int argc, const char **argv)\n   unsigned int has_clflushopt = 0, has_xsavec = 0, has_xsaves = 0;\n   unsigned int has_avx512dq = 0, has_avx512bw = 0, has_avx512vl = 0;\n   unsigned int has_avx512vbmi = 0, has_avx512ifma = 0, has_clwb = 0;\n+  unsigned int has_pcommit = 0;\n \n   bool arch;\n \n@@ -490,6 +491,7 @@ const char *host_detect_local_cpu (int argc, const char **argv)\n       has_avx512pf = ebx & bit_AVX512PF;\n       has_avx512cd = ebx & bit_AVX512CD;\n       has_sha = ebx & bit_SHA;\n+      has_pcommit = ebx & bit_PCOMMIT;\n       has_clflushopt = ebx & bit_CLFLUSHOPT;\n       has_clwb = ebx & bit_CLWB;\n       has_avx512dq = ebx & bit_AVX512DQ;\n@@ -932,6 +934,7 @@ const char *host_detect_local_cpu (int argc, const char **argv)\n       const char *avx512ifma = has_avx512ifma ? \" -mavx512ifma\" : \" -mno-avx512ifma\";\n       const char *avx512vbmi = has_avx512vbmi ? \" -mavx512vbmi\" : \" -mno-avx512vbmi\";\n       const char *clwb = has_clwb ? \" -mclwb\" : \" -mno-clwb\";\n+      const char *pcommit = has_pcommit ? \" -mpcommit\" : \" -mno-pcommit\";\n \n       options = concat (options, mmx, mmx3dnow, sse, sse2, sse3, ssse3,\n \t\t\tsse4a, cx16, sahf, movbe, aes, sha, pclmul,\n@@ -941,7 +944,7 @@ const char *host_detect_local_cpu (int argc, const char **argv)\n \t\t\tfxsr, xsave, xsaveopt, avx512f, avx512er,\n \t\t\tavx512cd, avx512pf, prefetchwt1, clflushopt,\n \t\t\txsavec, xsaves, avx512dq, avx512bw, avx512vl,\n-\t\t\tavx512ifma, avx512vbmi, clwb, NULL);\n+\t\t\tavx512ifma, avx512vbmi, clwb, pcommit, NULL);\n     }\n \n done:"}, {"sha": "3ad7d499fb3c05a675373f4a4aa295b31b6f79a7", "filename": "gcc/config/i386/i386-c.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36e9b73ea9637ec0fbb6ac533a6fa2b00d43a0ae/gcc%2Fconfig%2Fi386%2Fi386-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36e9b73ea9637ec0fbb6ac533a6fa2b00d43a0ae/gcc%2Fconfig%2Fi386%2Fi386-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-c.c?ref=36e9b73ea9637ec0fbb6ac533a6fa2b00d43a0ae", "patch": "@@ -411,6 +411,8 @@ ix86_target_macros_internal (HOST_WIDE_INT isa_flag,\n     def_or_undef (parse_in, \"__XSAVES__\");\n   if (isa_flag & OPTION_MASK_ISA_MPX)\n     def_or_undef (parse_in, \"__MPX__\");\n+  if (isa_flag & OPTION_MASK_ISA_PCOMMIT)\n+    def_or_undef (parse_in, \"__PCOMMIT__\");\n   if (isa_flag & OPTION_MASK_ISA_CLWB)\n     def_or_undef (parse_in, \"__CLWB__\");\n }"}, {"sha": "e634af212de7164ab1f2f93b940ed98d4ca93d1e", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36e9b73ea9637ec0fbb6ac533a6fa2b00d43a0ae/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36e9b73ea9637ec0fbb6ac533a6fa2b00d43a0ae/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=36e9b73ea9637ec0fbb6ac533a6fa2b00d43a0ae", "patch": "@@ -2658,6 +2658,7 @@ ix86_target_string (HOST_WIDE_INT isa, int flags, const char *arch,\n     { \"-mxsaves\",\tOPTION_MASK_ISA_XSAVES },\n     { \"-mmpx\",          OPTION_MASK_ISA_MPX },\n     { \"-mclwb\",\t\tOPTION_MASK_ISA_CLWB },\n+    { \"-mpcommit\",\tOPTION_MASK_ISA_PCOMMIT },\n   };\n \n   /* Flag options.  */\n@@ -3159,6 +3160,7 @@ ix86_option_override_internal (bool main_args_p,\n #define PTA_AVX512IFMA\t\t(HOST_WIDE_INT_1 << 53)\n #define PTA_AVX512VBMI\t\t(HOST_WIDE_INT_1 << 54)\n #define PTA_CLWB\t\t(HOST_WIDE_INT_1 << 55)\n+#define PTA_PCOMMIT\t\t(HOST_WIDE_INT_1 << 56)\n \n #define PTA_CORE2 \\\n   (PTA_64BIT | PTA_MMX | PTA_SSE | PTA_SSE2 | PTA_SSE3 | PTA_SSSE3 \\\n@@ -3718,6 +3720,9 @@ ix86_option_override_internal (bool main_args_p,\n \tif (processor_alias_table[i].flags & PTA_PREFETCHWT1\n \t    && !(opts->x_ix86_isa_flags_explicit & OPTION_MASK_ISA_PREFETCHWT1))\n \t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_PREFETCHWT1;\n+\tif (processor_alias_table[i].flags & PTA_PCOMMIT\n+\t    && !(opts->x_ix86_isa_flags_explicit & OPTION_MASK_ISA_PCOMMIT))\n+\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_PCOMMIT;\n \tif (processor_alias_table[i].flags & PTA_CLWB\n \t    && !(opts->x_ix86_isa_flags_explicit & OPTION_MASK_ISA_CLWB))\n \t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_CLWB;\n@@ -4673,6 +4678,7 @@ ix86_valid_target_attribute_inner_p (tree args, char *p_strings[],\n     IX86_ATTR_ISA (\"avx512vbmi\",\tOPT_mavx512vbmi),\n     IX86_ATTR_ISA (\"avx512ifma\",\tOPT_mavx512ifma),\n     IX86_ATTR_ISA (\"clwb\",\tOPT_mclwb),\n+    IX86_ATTR_ISA (\"pcommit\",\tOPT_mpcommit),\n \n     /* enum options */\n     IX86_ATTR_ENUM (\"fpmath=\",\tOPT_mfpmath_),\n@@ -30137,6 +30143,9 @@ enum ix86_builtins\n   /* CLWB instructions.  */\n   IX86_BUILTIN_CLWB,\n \n+  /* PCOMMIT instructions.  */\n+  IX86_BUILTIN_PCOMMIT,\n+\n   /* CLFLUSHOPT instructions.  */\n   IX86_BUILTIN_CLFLUSHOPT,\n \n@@ -30897,6 +30906,9 @@ static const struct builtin_description bdesc_special_args[] =\n   { OPTION_MASK_ISA_AVX512VL, CODE_FOR_avx512vl_ss_truncatev4siv4hi2_mask_store, \"__builtin_ia32_pmovsdw128mem_mask\", IX86_BUILTIN_PMOVSDW128_MEM, UNKNOWN, (int) VOID_FTYPE_PV8HI_V4SI_QI },\n   { OPTION_MASK_ISA_AVX512VL, CODE_FOR_avx512vl_us_truncatev8siv8hi2_mask_store, \"__builtin_ia32_pmovusdw256mem_mask\", IX86_BUILTIN_PMOVUSDW256_MEM, UNKNOWN, (int) VOID_FTYPE_PV8HI_V8SI_QI },\n   { OPTION_MASK_ISA_AVX512VL, CODE_FOR_avx512vl_us_truncatev4siv4hi2_mask_store, \"__builtin_ia32_pmovusdw128mem_mask\", IX86_BUILTIN_PMOVUSDW128_MEM, UNKNOWN, (int) VOID_FTYPE_PV8HI_V4SI_QI },\n+\n+  /* PCOMMIT.  */\n+  { OPTION_MASK_ISA_PCOMMIT, CODE_FOR_pcommit, \"__builtin_ia32_pcommit\", IX86_BUILTIN_PCOMMIT, UNKNOWN, (int) VOID_FTYPE_VOID },\n };\n \n /* Builtins with variable number of arguments.  */"}, {"sha": "3f5f9794eb2c6fd184012de85cc3f2818f8c2ca0", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36e9b73ea9637ec0fbb6ac533a6fa2b00d43a0ae/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36e9b73ea9637ec0fbb6ac533a6fa2b00d43a0ae/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=36e9b73ea9637ec0fbb6ac533a6fa2b00d43a0ae", "patch": "@@ -150,6 +150,8 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #define TARGET_PREFETCHWT1_P(x)\tTARGET_ISA_PREFETCHWT1_P(x)\n #define TARGET_MPX\tTARGET_ISA_MPX\n #define TARGET_MPX_P(x)\tTARGET_ISA_MPX_P(x)\n+#define TARGET_PCOMMIT\tTARGET_ISA_PCOMMIT\n+#define TARGET_PCOMMIT_P(x)\tTARGET_ISA_PCOMMIT_P(x)\n #define TARGET_CLWB\tTARGET_ISA_CLWB\n #define TARGET_CLWB_P(x)\tTARGET_ISA_CLWB_P(x)\n "}, {"sha": "b3b8af686a62c1a161bb692631e2da453216db63", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36e9b73ea9637ec0fbb6ac533a6fa2b00d43a0ae/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36e9b73ea9637ec0fbb6ac533a6fa2b00d43a0ae/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=36e9b73ea9637ec0fbb6ac533a6fa2b00d43a0ae", "patch": "@@ -256,6 +256,9 @@\n   ;; For CLWB support\n   UNSPECV_CLWB\n \n+  ;; For PCOMMIT support\n+  UNSPECV_PCOMMIT\n+\n   ;; For CLFLUSHOPT support\n   UNSPECV_CLFLUSHOPT\n ])\n@@ -18671,6 +18674,13 @@\n   [(set_attr \"type\" \"other\")\n    (set_attr \"length\" \"3\")])\n \n+(define_insn \"pcommit\"\n+  [(unspec_volatile [(const_int 0)] UNSPECV_PCOMMIT)]\n+  \"TARGET_PCOMMIT\"\n+  \"pcommit\"\n+  [(set_attr \"type\" \"other\")\n+   (set_attr \"length\" \"4\")])\n+\n (define_insn \"clwb\"\n   [(unspec_volatile [(match_operand 0 \"address_operand\" \"p\")]\n                    UNSPECV_CLWB)]"}, {"sha": "b1c63198973daf740b2ee390e7b9632d48160587", "filename": "gcc/config/i386/i386.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36e9b73ea9637ec0fbb6ac533a6fa2b00d43a0ae/gcc%2Fconfig%2Fi386%2Fi386.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36e9b73ea9637ec0fbb6ac533a6fa2b00d43a0ae/gcc%2Fconfig%2Fi386%2Fi386.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.opt?ref=36e9b73ea9637ec0fbb6ac533a6fa2b00d43a0ae", "patch": "@@ -725,6 +725,10 @@ mclwb\n Target Report Mask(ISA_CLWB) Var(ix86_isa_flags) Save\n Support CLWB instruction\n \n+mpcommit\n+Target Report Mask(ISA_PCOMMIT) Var(ix86_isa_flags) Save\n+Support PCOMMIT instruction\n+\n mfxsr\n Target Report Mask(ISA_FXSR) Var(ix86_isa_flags) Save\n Support FXSAVE and FXRSTOR instructions"}, {"sha": "b3a802e98a6a6a6404448aafaf4e76cee8f1c808", "filename": "gcc/config/i386/pcommitintrin.h", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36e9b73ea9637ec0fbb6ac533a6fa2b00d43a0ae/gcc%2Fconfig%2Fi386%2Fpcommitintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36e9b73ea9637ec0fbb6ac533a6fa2b00d43a0ae/gcc%2Fconfig%2Fi386%2Fpcommitintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fpcommitintrin.h?ref=36e9b73ea9637ec0fbb6ac533a6fa2b00d43a0ae", "patch": "@@ -0,0 +1,49 @@\n+/* Copyright (C) 2013 Free Software Foundation, Inc.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3, or (at your option)\n+   any later version.\n+\n+   GCC is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+#if !defined _X86INTRIN_H_INCLUDED\n+# error \"Never use <pcommitintrin.h> directly; include <x86intrin.h> instead.\"\n+#endif\n+\n+#ifndef _PCOMMITINTRIN_H_INCLUDED\n+#define _PCOMMITINTRIN_H_INCLUDED\n+\n+#ifndef __PCOMMIT__\n+#pragma GCC push_options\n+#pragma GCC target(\"pcommit\")\n+#define __DISABLE_PCOMMIT__\n+#endif /* __PCOMMIT__ */\n+\n+extern __inline void\n+__attribute__((__gnu_inline__, __always_inline__, __artificial__))\n+_mm_pcommit (void)\n+{\n+  __builtin_ia32_pcommit ();\n+}\n+\n+#ifdef __DISABLE_PCOMMIT__\n+#undef __DISABLE_PCOMMIT__\n+#pragma GCC pop_options\n+#endif /* __DISABLE_PCOMMIT__ */\n+\n+#endif /* _PCOMMITINTRIN_H_INCLUDED */"}, {"sha": "fdb613f6e0dcdb917bf7dbf1d2741dbbef5ee765", "filename": "gcc/config/i386/x86intrin.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36e9b73ea9637ec0fbb6ac533a6fa2b00d43a0ae/gcc%2Fconfig%2Fi386%2Fx86intrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36e9b73ea9637ec0fbb6ac533a6fa2b00d43a0ae/gcc%2Fconfig%2Fi386%2Fx86intrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fx86intrin.h?ref=36e9b73ea9637ec0fbb6ac533a6fa2b00d43a0ae", "patch": "@@ -77,6 +77,8 @@\n \n #include <clwbintrin.h>\n \n+#include <pcommitintrin.h>\n+\n #include <clflushoptintrin.h>\n \n #include <xsavesintrin.h>"}, {"sha": "0ab7fa03c32917796043976ea94d3a00faab1b65", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36e9b73ea9637ec0fbb6ac533a6fa2b00d43a0ae/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36e9b73ea9637ec0fbb6ac533a6fa2b00d43a0ae/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=36e9b73ea9637ec0fbb6ac533a6fa2b00d43a0ae", "patch": "@@ -1,3 +1,14 @@\n+2014-11-21  Ilya Tocar  <ilya.tocar@intel.com>\n+\n+\t* g++.dg/other/i386-2.C: Add -mpcommit.\n+\t* g++.dg/other/i386-3.C: Ditto.\n+\t* gcc.target/i386/pcommit-1.c: New test.\n+\t* gcc.target/i386/sse-12.c: Add new options.\n+\t* gcc.target/i386/sse-13.c: Ditto.\n+\t* gcc.target/i386/sse-14.c: Ditto.\n+\t* gcc.target/i386/sse-22.c: Ditto.\n+\t* gcc.target/i386/sse-23.c: Ditto.\n+\n 2014-11-20  Mark Wielaard  <mjw@redhat.com>\n \n \tPR debug/38757"}, {"sha": "4f77dd7277d6fe61cba265d7a0b9536df7e98b2c", "filename": "gcc/testsuite/g++.dg/other/i386-2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36e9b73ea9637ec0fbb6ac533a6fa2b00d43a0ae/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fi386-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36e9b73ea9637ec0fbb6ac533a6fa2b00d43a0ae/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fi386-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fi386-2.C?ref=36e9b73ea9637ec0fbb6ac533a6fa2b00d43a0ae", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O -pedantic-errors -march=k8 -msse4a -m3dnow -mavx -mavx2 -mfma4 -mxop -maes -mpclmul -mpopcnt -mabm -mlzcnt -mbmi -mbmi2 -mtbm -mlwp -mfsgsbase -mrdrnd -mf16c -mfma -mrtm -mrdseed -mprfchw -madx -mfxsr -mxsaveopt -mavx512f -mavx512er -mavx512cd -mavx512pf -msha -mprefetchwt1 -mxsavec -mxsaves -mclflushopt  -mavx512dq -mavx512bw -mavx512vl -mavx512ifma -mavx512vbmi -mclwb\" } */\n+/* { dg-options \"-O -pedantic-errors -march=k8 -msse4a -m3dnow -mavx -mavx2 -mfma4 -mxop -maes -mpclmul -mpopcnt -mabm -mlzcnt -mbmi -mbmi2 -mtbm -mlwp -mfsgsbase -mrdrnd -mf16c -mfma -mrtm -mrdseed -mprfchw -madx -mfxsr -mxsaveopt -mavx512f -mavx512er -mavx512cd -mavx512pf -msha -mprefetchwt1 -mxsavec -mxsaves -mclflushopt  -mavx512dq -mavx512bw -mavx512vl -mavx512ifma -mavx512vbmi -mclwb -mpcommit\" } */\n \n /* Test that {,x,e,p,t,s,w,a,b,i}mmintrin.h, mm3dnow.h, fma4intrin.h,\n    xopintrin.h, abmintrin.h, bmiintrin.h, tbmintrin.h, lwpintrin.h,"}, {"sha": "53b90b8e13324e56bba3360010948e337583ed12", "filename": "gcc/testsuite/g++.dg/other/i386-3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36e9b73ea9637ec0fbb6ac533a6fa2b00d43a0ae/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fi386-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36e9b73ea9637ec0fbb6ac533a6fa2b00d43a0ae/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fi386-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fi386-3.C?ref=36e9b73ea9637ec0fbb6ac533a6fa2b00d43a0ae", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O -fkeep-inline-functions -march=k8 -msse4a -m3dnow -mavx -mavx2 -mfma4 -mxop -maes -mpclmul -mpopcnt -mabm -mlzcnt -mbmi -mbmi2 -mtbm -mlwp -mfsgsbase -mrdrnd -mf16c -mfma -mrtm -mrdseed -mprfchw -madx -mfxsr -mxsaveopt -mavx512f -mavx512er -mavx512cd -mavx512pf -msha -mprefetchwt1 -mxsavec -mxsaves -mclflushopt -mavx512dq -mavx512bw -mavx512vl -mavx512ifma -mavx512vbmi -mclwb\" } */\n+/* { dg-options \"-O -fkeep-inline-functions -march=k8 -msse4a -m3dnow -mavx -mavx2 -mfma4 -mxop -maes -mpclmul -mpopcnt -mabm -mlzcnt -mbmi -mbmi2 -mtbm -mlwp -mfsgsbase -mrdrnd -mf16c -mfma -mrtm -mrdseed -mprfchw -madx -mfxsr -mxsaveopt -mavx512f -mavx512er -mavx512cd -mavx512pf -msha -mprefetchwt1 -mxsavec -mxsaves -mclflushopt -mavx512dq -mavx512bw -mavx512vl -mavx512ifma -mavx512vbmi -mclwb -mpcommit\" } */\n \n /* Test that {,x,e,p,t,s,w,a,b,i}mmintrin.h, mm3dnow.h, fma4intrin.h,\n    xopintrin.h, abmintrin.h, bmiintrin.h, tbmintrin.h, lwpintrin.h,"}, {"sha": "dc4bc9dbd601233070a92fabeea287bec20ccab0", "filename": "gcc/testsuite/gcc.target/i386/pcommit-1.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36e9b73ea9637ec0fbb6ac533a6fa2b00d43a0ae/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpcommit-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36e9b73ea9637ec0fbb6ac533a6fa2b00d43a0ae/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpcommit-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpcommit-1.c?ref=36e9b73ea9637ec0fbb6ac533a6fa2b00d43a0ae", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mpcommit\" } */\n+/* { dg-final { scan-assembler \"pcommit\" } } */\n+\n+#include \"x86intrin.h\"\n+\n+void\n+test_pcommit ()\n+{\n+  _mm_pcommit ();\n+}"}, {"sha": "bdb0e105f12907d51a214bc7ea106525e5dc623e", "filename": "gcc/testsuite/gcc.target/i386/sse-12.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36e9b73ea9637ec0fbb6ac533a6fa2b00d43a0ae/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-12.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36e9b73ea9637ec0fbb6ac533a6fa2b00d43a0ae/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-12.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-12.c?ref=36e9b73ea9637ec0fbb6ac533a6fa2b00d43a0ae", "patch": "@@ -3,7 +3,7 @@\n    popcntintrin.h and mm_malloc.h are usable\n    with -O -std=c89 -pedantic-errors.  */\n /* { dg-do compile } */\n-/* { dg-options \"-O -std=c89 -pedantic-errors -march=k8 -msse4a -m3dnow -mavx -mavx2 -mfma4 -mxop -maes -mpclmul -mpopcnt -mabm -mlzcnt -mbmi -mbmi2 -mtbm -mlwp -mfsgsbase -mrdrnd -mf16c -mfma -mrtm -mrdseed -mprfchw -madx -mfxsr -mxsaveopt -mavx512f -mavx512er -mavx512cd -mavx512pf -msha -mprefetchwt1 -mxsavec -mxsaves -mclflushopt -mavx512bw -mavx512dq -mavx512vl -mavx512vbmi -mavx512ifma -mclwb\" } */\n+/* { dg-options \"-O -std=c89 -pedantic-errors -march=k8 -msse4a -m3dnow -mavx -mavx2 -mfma4 -mxop -maes -mpclmul -mpopcnt -mabm -mlzcnt -mbmi -mbmi2 -mtbm -mlwp -mfsgsbase -mrdrnd -mf16c -mfma -mrtm -mrdseed -mprfchw -madx -mfxsr -mxsaveopt -mavx512f -mavx512er -mavx512cd -mavx512pf -msha -mprefetchwt1 -mxsavec -mxsaves -mclflushopt -mavx512bw -mavx512dq -mavx512vl -mavx512vbmi -mavx512ifma -mclwb -mpcommit\" } */\n \n #include <x86intrin.h>\n "}, {"sha": "104c63ec7fc8ceaeea05e0c5c2d5508e4c5f8759", "filename": "gcc/testsuite/gcc.target/i386/sse-13.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36e9b73ea9637ec0fbb6ac533a6fa2b00d43a0ae/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-13.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36e9b73ea9637ec0fbb6ac533a6fa2b00d43a0ae/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-13.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-13.c?ref=36e9b73ea9637ec0fbb6ac533a6fa2b00d43a0ae", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -Werror-implicit-function-declaration -march=k8 -msse4a -m3dnow -mavx -mavx2 -mfma4 -mxop -maes -mpclmul -mpopcnt -mabm -mlzcnt -mbmi -mbmi2 -mtbm -mlwp -mfsgsbase -mrdrnd -mf16c -mfma -mrtm -mrdseed -mprfchw -madx -mfxsr -mxsaveopt -mavx512f -mavx512er -mavx512cd -mavx512pf -msha -mprefetchwt1 -mxsavec -mxsaves -mclflushopt -mavx512vl -mavx512dq -mavx512bw -mavx512vbmi -mavx512ifma -mclwb\" } */\n+/* { dg-options \"-O2 -Werror-implicit-function-declaration -march=k8 -msse4a -m3dnow -mavx -mavx2 -mfma4 -mxop -maes -mpclmul -mpopcnt -mabm -mlzcnt -mbmi -mbmi2 -mtbm -mlwp -mfsgsbase -mrdrnd -mf16c -mfma -mrtm -mrdseed -mprfchw -madx -mfxsr -mxsaveopt -mavx512f -mavx512er -mavx512cd -mavx512pf -msha -mprefetchwt1 -mxsavec -mxsaves -mclflushopt -mavx512vl -mavx512dq -mavx512bw -mavx512vbmi -mavx512ifma -mclwb -mpcommit\" } */\n \n #include <mm_malloc.h>\n "}, {"sha": "f3f6c5ce0517c0c1d512688aa1fba415752a5f56", "filename": "gcc/testsuite/gcc.target/i386/sse-14.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36e9b73ea9637ec0fbb6ac533a6fa2b00d43a0ae/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-14.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36e9b73ea9637ec0fbb6ac533a6fa2b00d43a0ae/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-14.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-14.c?ref=36e9b73ea9637ec0fbb6ac533a6fa2b00d43a0ae", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O0 -Werror-implicit-function-declaration -march=k8 -msse4a -m3dnow -mavx -mavx2 -mfma4 -mxop -maes -mpclmul -mpopcnt -mabm -mlzcnt -mbmi -mbmi2 -mtbm -mlwp -mfsgsbase -mrdrnd -mf16c -mfma -mrtm -mrdseed -mprfchw -madx -mfxsr -mxsaveopt -mavx512f -mavx512er -mavx512cd -mavx512pf -msha -mprefetchwt1 -mxsavec -mxsaves -mclflushopt -mavx512dq -mavx512bw -mavx512vl -mavx512ifma -mavx512vbmi -mclwb\" } */\n+/* { dg-options \"-O0 -Werror-implicit-function-declaration -march=k8 -msse4a -m3dnow -mavx -mavx2 -mfma4 -mxop -maes -mpclmul -mpopcnt -mabm -mlzcnt -mbmi -mbmi2 -mtbm -mlwp -mfsgsbase -mrdrnd -mf16c -mfma -mrtm -mrdseed -mprfchw -madx -mfxsr -mxsaveopt -mavx512f -mavx512er -mavx512cd -mavx512pf -msha -mprefetchwt1 -mxsavec -mxsaves -mclflushopt -mavx512dq -mavx512bw -mavx512vl -mavx512ifma -mavx512vbmi -mclwb -mpcommit\" } */\n /* { dg-add-options bind_pic_locally } */\n \n #include <mm_malloc.h>"}, {"sha": "0d7bd1673c9ad96cfdbf2f9a2ffbb998107aff98", "filename": "gcc/testsuite/gcc.target/i386/sse-22.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36e9b73ea9637ec0fbb6ac533a6fa2b00d43a0ae/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-22.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36e9b73ea9637ec0fbb6ac533a6fa2b00d43a0ae/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-22.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-22.c?ref=36e9b73ea9637ec0fbb6ac533a6fa2b00d43a0ae", "patch": "@@ -695,7 +695,7 @@ test_2 (_mm_clmulepi64_si128, __m128i, __m128i, __m128i, 1)\n \n /* x86intrin.h (FMA4/XOP/LWP/BMI/BMI2/TBM/LZCNT/FMA). */\n #ifdef DIFFERENT_PRAGMAS\n-#pragma GCC target (\"fma4,xop,lwp,bmi,bmi2,tbm,lzcnt,fma,rdseed,prfchw,adx,fxsr,xsaveopt,xsavec,xsaves,clflushopt,clwb\")\n+#pragma GCC target (\"fma4,xop,lwp,bmi,bmi2,tbm,lzcnt,fma,rdseed,prfchw,adx,fxsr,xsaveopt,xsavec,xsaves,clflushopt,clwb,pcommit\")\n #endif\n #include <x86intrin.h>\n /* xopintrin.h */"}, {"sha": "9f81a8ac55803570078f07f182b9a00b936cbe09", "filename": "gcc/testsuite/gcc.target/i386/sse-23.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36e9b73ea9637ec0fbb6ac533a6fa2b00d43a0ae/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-23.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36e9b73ea9637ec0fbb6ac533a6fa2b00d43a0ae/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-23.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-23.c?ref=36e9b73ea9637ec0fbb6ac533a6fa2b00d43a0ae", "patch": "@@ -594,7 +594,7 @@\n #define __builtin_ia32_extracti64x2_256_mask(A, E, C, D) __builtin_ia32_extracti64x2_256_mask(A, 1, C, D)\n #define __builtin_ia32_extractf64x2_256_mask(A, E, C, D) __builtin_ia32_extractf64x2_256_mask(A, 1, C, D)\n \n-#pragma GCC target (\"sse4a,3dnow,avx,avx2,fma4,xop,aes,pclmul,popcnt,abm,lzcnt,bmi,bmi2,tbm,lwp,fsgsbase,rdrnd,f16c,fma,rtm,rdseed,prfchw,adx,fxsr,xsaveopt,avx512f,avx512er,avx512cd,avx512pf,sha,prefetchwt1,xsavec,xsaves,clflushopt,avx512bw,avx512dq,avx512vl,avx512vbmi,avx512ifma,clwb\")\n+#pragma GCC target (\"sse4a,3dnow,avx,avx2,fma4,xop,aes,pclmul,popcnt,abm,lzcnt,bmi,bmi2,tbm,lwp,fsgsbase,rdrnd,f16c,fma,rtm,rdseed,prfchw,adx,fxsr,xsaveopt,avx512f,avx512er,avx512cd,avx512pf,sha,prefetchwt1,xsavec,xsaves,clflushopt,avx512bw,avx512dq,avx512vl,avx512vbmi,avx512ifma,clwb,pcommit\")\n #include <wmmintrin.h>\n #include <smmintrin.h>\n #include <mm3dnow.h>"}]}