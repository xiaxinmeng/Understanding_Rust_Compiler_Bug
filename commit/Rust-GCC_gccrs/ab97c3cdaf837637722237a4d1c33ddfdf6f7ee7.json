{"sha": "ab97c3cdaf837637722237a4d1c33ddfdf6f7ee7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWI5N2MzY2RhZjgzNzYzNzcyMjIzN2E0ZDFjMzNkZGZkZjZmN2VlNw==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2019-02-11T20:03:43Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2019-02-11T20:03:43Z"}, "message": "PR c++/89212 - ICE converting nullptr to pointer-to-member-function.\n\n\t* pt.c (tsubst_copy_and_build) <case CONSTRUCTOR>: Return early for\n\tnull member pointer value.\n\n\t* g++.dg/cpp0x/nullptr40.C: New test.\n\t* g++.dg/cpp0x/nullptr41.C: New test.\n\nFrom-SVN: r268781", "tree": {"sha": "e4dc6f525b2c00aacd8bb33d3a9506367f841b92", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e4dc6f525b2c00aacd8bb33d3a9506367f841b92"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ab97c3cdaf837637722237a4d1c33ddfdf6f7ee7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab97c3cdaf837637722237a4d1c33ddfdf6f7ee7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab97c3cdaf837637722237a4d1c33ddfdf6f7ee7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab97c3cdaf837637722237a4d1c33ddfdf6f7ee7/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "75c5639de1dba21290c3a88c440963c3c14fa827", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75c5639de1dba21290c3a88c440963c3c14fa827", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75c5639de1dba21290c3a88c440963c3c14fa827"}], "stats": {"total": 56, "additions": 56, "deletions": 0}, "files": [{"sha": "3d3bb2ace9abeca691243a1d102bfdf2ddd9707a", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab97c3cdaf837637722237a4d1c33ddfdf6f7ee7/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab97c3cdaf837637722237a4d1c33ddfdf6f7ee7/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=ab97c3cdaf837637722237a4d1c33ddfdf6f7ee7", "patch": "@@ -1,3 +1,9 @@\n+2019-02-11  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/89212 - ICE converting nullptr to pointer-to-member-function.\n+\t* pt.c (tsubst_copy_and_build) <case CONSTRUCTOR>: Return early for\n+\tnull member pointer value.\n+\n 2019-02-11  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/88977"}, {"sha": "184cb851145ae759467284d1c2ebde55d7fa92ac", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab97c3cdaf837637722237a4d1c33ddfdf6f7ee7/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab97c3cdaf837637722237a4d1c33ddfdf6f7ee7/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=ab97c3cdaf837637722237a4d1c33ddfdf6f7ee7", "patch": "@@ -19253,6 +19253,12 @@ tsubst_copy_and_build (tree t,\n \t   looked up by digest_init.  */\n \tprocess_index_p = !(type && MAYBE_CLASS_TYPE_P (type));\n \n+\tif (null_member_pointer_value_p (t))\n+\t  {\n+\t    gcc_assert (same_type_p (type, TREE_TYPE (t)));\n+\t    RETURN (t);\n+\t  }\n+\n \tn = vec_safe_copy (CONSTRUCTOR_ELTS (t));\n         newlen = vec_safe_length (n);\n \tFOR_EACH_VEC_SAFE_ELT (n, idx, ce)"}, {"sha": "ae04c4bb692086030a2ecdb86413e43c9ca54aac", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab97c3cdaf837637722237a4d1c33ddfdf6f7ee7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab97c3cdaf837637722237a4d1c33ddfdf6f7ee7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ab97c3cdaf837637722237a4d1c33ddfdf6f7ee7", "patch": "@@ -1,3 +1,9 @@\n+2019-02-11  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/89212 - ICE converting nullptr to pointer-to-member-function.\n+\t* g++.dg/cpp0x/nullptr40.C: New test.\n+\t* g++.dg/cpp0x/nullptr41.C: New test.\n+\n 2019-02-11  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/88977"}, {"sha": "21c188bdb5e761d5a22d3271b7d8df9fc16d1eac", "filename": "gcc/testsuite/g++.dg/cpp0x/nullptr40.C", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab97c3cdaf837637722237a4d1c33ddfdf6f7ee7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnullptr40.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab97c3cdaf837637722237a4d1c33ddfdf6f7ee7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnullptr40.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnullptr40.C?ref=ab97c3cdaf837637722237a4d1c33ddfdf6f7ee7", "patch": "@@ -0,0 +1,19 @@\n+// PR c++/89212\n+// { dg-do compile { target c++11 } }\n+\n+template <int, typename T> using enable_if_t = int;\n+\n+template<class X, void(X::*foo)() = nullptr>\n+struct p\n+{\n+    template<void(X::*fun)() = foo, typename T = enable_if_t<nullptr == fun, int>>\n+    p(T) { }\n+    p() = default;\n+};\n+\n+struct A\n+{\n+    p<A> i = 1;\n+    void bar();\n+    p<A, &A::bar> j;\n+};"}, {"sha": "54e66af20957fad23ca05cb7471f66f3e5a74af7", "filename": "gcc/testsuite/g++.dg/cpp0x/nullptr41.C", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab97c3cdaf837637722237a4d1c33ddfdf6f7ee7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnullptr41.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab97c3cdaf837637722237a4d1c33ddfdf6f7ee7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnullptr41.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnullptr41.C?ref=ab97c3cdaf837637722237a4d1c33ddfdf6f7ee7", "patch": "@@ -0,0 +1,19 @@\n+// PR c++/89212\n+// { dg-do compile { target c++11 } }\n+\n+template <int, typename T> using enable_if_t = int;\n+\n+template<typename U, typename W, typename Y, class X, W(X::*foo)() = nullptr>\n+struct p\n+{\n+    template<U(Y::*fun)() = foo, typename T = enable_if_t<nullptr == fun, int>>\n+    p(T) { }\n+    p() = default;\n+};\n+\n+struct A\n+{\n+    p<void, void, A, A> i = 1;\n+    void bar();\n+    p<void, void, A, A, &A::bar> j;\n+};"}]}