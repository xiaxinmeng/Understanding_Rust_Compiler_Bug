{"sha": "bc4a88097bd3bbbc5ef2cf6df4347c12e54f3de1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmM0YTg4MDk3YmQzYmJiYzVlZjJjZjZkZjQzNDdjMTJlNTRmM2RlMQ==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1999-06-06T23:30:31Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1999-06-06T23:30:31Z"}, "message": "Update LCM stuff.\n\nFrom-SVN: r27386", "tree": {"sha": "7abda5b3f104673811b8e999f763c4a5c537a896", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7abda5b3f104673811b8e999f763c4a5c537a896"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bc4a88097bd3bbbc5ef2cf6df4347c12e54f3de1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc4a88097bd3bbbc5ef2cf6df4347c12e54f3de1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc4a88097bd3bbbc5ef2cf6df4347c12e54f3de1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc4a88097bd3bbbc5ef2cf6df4347c12e54f3de1/comments", "author": null, "committer": null, "parents": [{"sha": "6570c0bd04ff0b9c4c64263db5b6ee6ae13e8006", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6570c0bd04ff0b9c4c64263db5b6ee6ae13e8006", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6570c0bd04ff0b9c4c64263db5b6ee6ae13e8006"}], "stats": {"total": 16, "additions": 6, "deletions": 10}, "files": [{"sha": "80f7967522d45011e3dfae9d72d667644178dedb", "filename": "gcc/PROJECTS", "status": "modified", "additions": 6, "deletions": 10, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc4a88097bd3bbbc5ef2cf6df4347c12e54f3de1/gcc%2FPROJECTS", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc4a88097bd3bbbc5ef2cf6df4347c12e54f3de1/gcc%2FPROJECTS", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FPROJECTS?ref=bc4a88097bd3bbbc5ef2cf6df4347c12e54f3de1", "patch": "@@ -33,16 +33,12 @@ Haifa scheduler (haifa-sched.c, loop.[ch], unroll.[ch], genattrtab.c):\n \n Improvements to global cse and partial redundancy elimination:\n \n-The current implementation of global cse uses partial redundancy elimination\n-as described in Chow's thesis.\n-\n-Long term we want to use lazy code motion as the basis for partial redundancy\n-elimination.  lcm will find as many (or more) redunancies *and* it will\n-place the remaining computations at computationally optimal placement points\n-within the function.  This reduces the number of redundant operations performed\n-as well as reducing register lifetimes.  My experiments have shown that the\n-cases were the current PRE code hurts performance are greatly helped by using\n-lazy code motion.\n+The current implementation of global cse uses a lazy code motion algorithm\n+from Muchnick's \"Advanced Compiler Design and Implementation\".\n+\n+Longer term we want to convert to an edge based LCM algorithm using the\n+new structures defined by flow.c.  This allows for better expression\n+placement and provides edge splitting \"for free\". \n \n lcm also provides the underlying framework for several additional optimizations\n such as shrink wrapping, spill code motion, dead store elimination, and generic"}]}