{"sha": "98e9678463509813df378103858be0d3f6b126d7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OThlOTY3ODQ2MzUwOTgxM2RmMzc4MTAzODU4YmUwZDNmNmIxMjZkNw==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2004-02-12T00:05:35Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2004-02-12T00:05:35Z"}, "message": "PR libstdc++/13731 (first part: write)\n\n2004-02-11  Paolo Carlini  <pcarlini@suse.de>\n\n\tPR libstdc++/13731 (first part: write)\n\t* config/io/basic_file_stdio.h (__basic_file<char>::xwrite):\n\tNew, declare.\n\t* config/io/basic_file_stdio.cc (__basic_file<char>::xwrite):\n\tDefine it: a wrapper around write() handling partial write.\n\t(__basic_file<char>::xsputn): Use it.\n\t(__basic_file<char>::xsputn_2): Likewise.\n\nFrom-SVN: r77680", "tree": {"sha": "ae25e5d86ff8f84df1b0806c734abe00d461a9ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ae25e5d86ff8f84df1b0806c734abe00d461a9ef"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/98e9678463509813df378103858be0d3f6b126d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98e9678463509813df378103858be0d3f6b126d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98e9678463509813df378103858be0d3f6b126d7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98e9678463509813df378103858be0d3f6b126d7/comments", "author": null, "committer": null, "parents": [{"sha": "888ff7a12521748dbdfc5e550b3a4e0a0a311857", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/888ff7a12521748dbdfc5e550b3a4e0a0a311857", "html_url": "https://github.com/Rust-GCC/gccrs/commit/888ff7a12521748dbdfc5e550b3a4e0a0a311857"}], "stats": {"total": 54, "additions": 35, "deletions": 19}, "files": [{"sha": "5926b918e7c19b136196af8654320a73f0f97068", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98e9678463509813df378103858be0d3f6b126d7/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98e9678463509813df378103858be0d3f6b126d7/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=98e9678463509813df378103858be0d3f6b126d7", "patch": "@@ -1,3 +1,13 @@\n+2004-02-11  Paolo Carlini  <pcarlini@suse.de>\n+\n+\tPR libstdc++/13731 (first part: write)\n+\t* config/io/basic_file_stdio.h (__basic_file<char>::xwrite):\n+\tNew, declare.\n+\t* config/io/basic_file_stdio.cc (__basic_file<char>::xwrite):\n+\tDefine it: a wrapper around write() handling partial write.\n+\t(__basic_file<char>::xsputn): Use it.\n+\t(__basic_file<char>::xsputn_2): Likewise.\n+\n 2004-02-11  Paolo Carlini  <pcarlini@suse.de>\n \t    Petur Runolfsson  <peturr02@ru.is>\n "}, {"sha": "1419fdedf4bf5e5e4da6d27bc0ee46331605895b", "filename": "libstdc++-v3/config/io/basic_file_stdio.cc", "status": "modified", "additions": 22, "deletions": 19, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98e9678463509813df378103858be0d3f6b126d7/libstdc%2B%2B-v3%2Fconfig%2Fio%2Fbasic_file_stdio.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98e9678463509813df378103858be0d3f6b126d7/libstdc%2B%2B-v3%2Fconfig%2Fio%2Fbasic_file_stdio.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fio%2Fbasic_file_stdio.cc?ref=98e9678463509813df378103858be0d3f6b126d7", "patch": "@@ -200,16 +200,28 @@ namespace std\n     while (__ret == -1L && errno == EINTR);\n     return __ret;\n   }\n-    \n-  streamsize \n-  __basic_file<char>::xsputn(const char* __s, streamsize __n)\n+\n+  // Wrapper handling partial write.\n+  streamsize\n+  __basic_file<char>::xwrite(const char* __s, streamsize __n)\n   {\n-    streamsize __ret;\n-    do\n-      __ret = write(this->fd(), __s, __n);\n-    while (__ret == -1L && errno == EINTR);\n-    return __ret;\n+    streamsize __nleft = __n;\n+    while (__nleft > 0)\n+      {\n+\tconst streamsize __ret = write(this->fd(), __s, __nleft);\n+\tif (__ret == -1L && errno == EINTR)\n+\t  continue;\n+\telse if (__ret == -1L)\n+\t  break;\n+\t__nleft -= __ret;\n+\t__s += __ret;\n+      }\n+    return __n - __nleft;\n   }\n+ \n+  streamsize \n+  __basic_file<char>::xsputn(const char* __s, streamsize __n)\n+  { return __basic_file<char>::xwrite(__s, __n); }\n \n   streamsize \n   __basic_file<char>::xsputn_2(const char* __s1, streamsize __n1,\n@@ -228,19 +240,10 @@ namespace std\n     while (__ret == -1L && errno == EINTR);\n #else\n     if (__n1)\n-      do\n-\t__ret = write(this->fd(), __s1, __n1);\n-      while (__ret == -1L && errno == EINTR);\n+      __ret = __basic_file<char>::xwrite(__s1, __n1);\n \n     if (__ret == __n1)\n-      {\n-\tdo\n-\t  __ret = write(this->fd(), __s2, __n2);\n-\twhile (__ret == -1L && errno == EINTR);\n-\t\n-\tif (__ret != -1L)\n-\t  __ret += __n1;\n-      }\n+      __ret += __basic_file<char>::xwrite(__s2, __n2);\n #endif\n     return __ret;\n   }"}, {"sha": "9c0ccfd1bad82023a55ff0ad970d13f5ccad0f68", "filename": "libstdc++-v3/config/io/basic_file_stdio.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98e9678463509813df378103858be0d3f6b126d7/libstdc%2B%2B-v3%2Fconfig%2Fio%2Fbasic_file_stdio.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98e9678463509813df378103858be0d3f6b126d7/libstdc%2B%2B-v3%2Fconfig%2Fio%2Fbasic_file_stdio.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fio%2Fbasic_file_stdio.h?ref=98e9678463509813df378103858be0d3f6b126d7", "patch": "@@ -83,6 +83,9 @@ namespace std\n \n       ~__basic_file();\n \n+      streamsize \n+      xwrite(const char* __s, streamsize __n);\n+\n       streamsize \n       xsputn(const char* __s, streamsize __n);\n "}]}