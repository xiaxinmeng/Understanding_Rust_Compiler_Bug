{"sha": "b9250b3cb91b667cd67943e0fac94bf39ac089a8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjkyNTBiM2NiOTFiNjY3Y2Q2Nzk0M2UwZmFjOTRiZjM5YWMwODlhOA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-05-07T12:06:02Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-05-07T17:42:22Z"}, "message": "ipa/94947 - avoid using externally_visible_p ()\n\nexternally_visible_p wasn't the correct predicate to use (even if it\nworked), instead we should use DECL_EXTERNAL || TREE_PUBLIC.\n\n2020-05-07  Richard Biener  <rguenther@suse.de>\n\n\tPR ipa/94947\n\t* tree-ssa-structalias.c (refered_from_nonlocal_fn): Use\n\tDECL_EXTERNAL || TREE_PUBLIC instead of externally_visible.\n\t(refered_from_nonlocal_var): Likewise.\n\t(ipa_pta_execute): Likewise.", "tree": {"sha": "9c448d66b0577eab987e489d692992112385dd57", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9c448d66b0577eab987e489d692992112385dd57"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b9250b3cb91b667cd67943e0fac94bf39ac089a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9250b3cb91b667cd67943e0fac94bf39ac089a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b9250b3cb91b667cd67943e0fac94bf39ac089a8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9250b3cb91b667cd67943e0fac94bf39ac089a8/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f8a4141bae53f9125d374e5873dcda3f75392f1f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8a4141bae53f9125d374e5873dcda3f75392f1f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f8a4141bae53f9125d374e5873dcda3f75392f1f"}], "stats": {"total": 20, "additions": 16, "deletions": 4}, "files": [{"sha": "938fa61590542175fc145855fee051aee2ce2fb3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9250b3cb91b667cd67943e0fac94bf39ac089a8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9250b3cb91b667cd67943e0fac94bf39ac089a8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b9250b3cb91b667cd67943e0fac94bf39ac089a8", "patch": "@@ -1,3 +1,11 @@\n+2020-05-07  Richard Biener  <rguenther@suse.de>\n+\n+\tPR ipa/94947\n+\t* tree-ssa-structalias.c (refered_from_nonlocal_fn): Use\n+\tDECL_EXTERNAL || TREE_PUBLIC instead of externally_visible.\n+\t(refered_from_nonlocal_var): Likewise.\n+\t(ipa_pta_execute): Likewise.\n+\n 2020-05-07  Erick Ochoa <erick.ochoa@theobroma-systems.com>\n \n \t* gcc/tree-ssa-struct-alias.c: Fix comments"}, {"sha": "44fe52e0f6579e26b207e361a15eb7cc99692946", "filename": "gcc/tree-ssa-structalias.c", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9250b3cb91b667cd67943e0fac94bf39ac089a8/gcc%2Ftree-ssa-structalias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9250b3cb91b667cd67943e0fac94bf39ac089a8/gcc%2Ftree-ssa-structalias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-structalias.c?ref=b9250b3cb91b667cd67943e0fac94bf39ac089a8", "patch": "@@ -8085,7 +8085,8 @@ refered_from_nonlocal_fn (struct cgraph_node *node, void *data)\n {\n   bool *nonlocal_p = (bool *)data;\n   *nonlocal_p |= (node->used_from_other_partition\n-\t\t  || node->externally_visible\n+\t\t  || DECL_EXTERNAL (node->decl)\n+\t\t  || TREE_PUBLIC (node->decl)\n \t\t  || node->force_output\n \t\t  || lookup_attribute (\"noipa\", DECL_ATTRIBUTES (node->decl)));\n   return false;\n@@ -8097,7 +8098,8 @@ refered_from_nonlocal_var (struct varpool_node *node, void *data)\n {\n   bool *nonlocal_p = (bool *)data;\n   *nonlocal_p |= (node->used_from_other_partition\n-\t\t  || node->externally_visible_p ()\n+\t\t  || DECL_EXTERNAL (node->decl)\n+\t\t  || TREE_PUBLIC (node->decl)\n \t\t  || node->force_output);\n   return false;\n }\n@@ -8146,7 +8148,8 @@ ipa_pta_execute (void)\n \t For local functions we see all callers and thus do not need initial\n \t constraints for parameters.  */\n       bool nonlocal_p = (node->used_from_other_partition\n-\t\t\t || node->externally_visible\n+\t\t\t || DECL_EXTERNAL (node->decl)\n+\t\t\t || TREE_PUBLIC (node->decl)\n \t\t\t || node->force_output\n \t\t\t || lookup_attribute (\"noipa\",\n \t\t\t\t\t      DECL_ATTRIBUTES (node->decl)));\n@@ -8187,7 +8190,8 @@ ipa_pta_execute (void)\n \n       /* For the purpose of IPA PTA unit-local globals are not\n          escape points.  */\n-      bool nonlocal_p = (var->externally_visible_p ()\n+      bool nonlocal_p = (DECL_EXTERNAL (var->decl)\n+\t\t\t || TREE_PUBLIC (var->decl)\n \t\t\t || var->used_from_other_partition\n \t\t\t || var->force_output);\n       var->call_for_symbol_and_aliases (refered_from_nonlocal_var,"}]}