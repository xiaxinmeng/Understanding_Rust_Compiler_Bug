{"sha": "3f38e7380efdad4245097477e4ff0ace1fa79deb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2YzOGU3MzgwZWZkYWQ0MjQ1MDk3NDc3ZTRmZjBhY2UxZmE3OWRlYg==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2005-01-20T18:27:10Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2005-01-20T18:27:10Z"}, "message": "Makefile.in (alpha-linux, [...]): Use a-intnam-linux.ads and system-linux-alpha.ads.\n\n        * Makefile.in (alpha-linux, LIBGNAT_TARGET_PAIRS): Use\n        a-intnam-linux.ads and system-linux-alpha.ads.\n        * a-intnam-linux-alpha.ads: Remove file.\n        * s-osinte-linux-alpha.ads (SIGUNUSED, SIGSTKFLT, SIGLOST): New.\n        * system-linux-alpha.ads: New file.\n\nFrom-SVN: r93971", "tree": {"sha": "54b26a4d1e56a6b6a523eb2d13f11ffd8534a767", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/54b26a4d1e56a6b6a523eb2d13f11ffd8534a767"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3f38e7380efdad4245097477e4ff0ace1fa79deb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f38e7380efdad4245097477e4ff0ace1fa79deb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f38e7380efdad4245097477e4ff0ace1fa79deb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f38e7380efdad4245097477e4ff0ace1fa79deb/comments", "author": null, "committer": null, "parents": [{"sha": "6b79c03c558a3f8b7862b1433e6481fb5f91c877", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b79c03c558a3f8b7862b1433e6481fb5f91c877", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b79c03c558a3f8b7862b1433e6481fb5f91c877"}], "stats": {"total": 314, "additions": 167, "deletions": 147}, "files": [{"sha": "815c8b229b3701f3260a45ab54b37b756fc7cfe0", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f38e7380efdad4245097477e4ff0ace1fa79deb/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f38e7380efdad4245097477e4ff0ace1fa79deb/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=3f38e7380efdad4245097477e4ff0ace1fa79deb", "patch": "@@ -1,3 +1,11 @@\n+2005-01-20  Richard Henderson  <rth@redhat.com>\n+\n+\t* Makefile.in (alpha-linux, LIBGNAT_TARGET_PAIRS): Use\n+\ta-intnam-linux.ads and system-linux-alpha.ads.\n+\t* a-intnam-linux-alpha.ads: Remove file.\n+\t* s-osinte-linux-alpha.ads (SIGUNUSED, SIGSTKFLT, SIGLOST): New.\n+\t* system-linux-alpha.ads: New file.\n+\n 2005-01-18  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR ada/13470"}, {"sha": "610c9ac23cbc61066dbf878bfdfac3cda0759ceb", "filename": "gcc/ada/Makefile.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f38e7380efdad4245097477e4ff0ace1fa79deb/gcc%2Fada%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f38e7380efdad4245097477e4ff0ace1fa79deb/gcc%2Fada%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMakefile.in?ref=3f38e7380efdad4245097477e4ff0ace1fa79deb", "patch": "@@ -1364,7 +1364,7 @@ endif\n \n ifeq ($(strip $(filter-out alpha% linux%,$(arch) $(osys))),)\n   LIBGNAT_TARGET_PAIRS = \\\n-  a-intnam.ads<a-intnam-linux-alpha.ads \\\n+  a-intnam.ads<a-intnam-linux.ads \\\n   s-inmaop.adb<s-inmaop-posix.adb \\\n   s-intman.adb<s-intman-posix.adb \\\n   s-osinte.ads<s-osinte-linux-alpha.ads \\\n@@ -1373,7 +1373,7 @@ ifeq ($(strip $(filter-out alpha% linux%,$(arch) $(osys))),)\n   s-taprop.adb<s-taprop-linux.adb \\\n   s-tpopsp.adb<s-tpopsp-posix-foreign.adb \\\n   s-taspri.ads<s-taspri-linux.ads \\\n-  system.ads<system-linux-ia64.ads\n+  system.ads<system-linux-alpha.ads\n \n   TOOLS_TARGET_PAIRS =  \\\n     mlib-tgt.adb<mlib-tgt-linux.adb \\"}, {"sha": "c05efbfeaa124f3463e9cd9e792751c3dbb6a6fe", "filename": "gcc/ada/a-intnam-linux-alpha.ads", "status": "removed", "additions": 0, "deletions": 145, "changes": 145, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b79c03c558a3f8b7862b1433e6481fb5f91c877/gcc%2Fada%2Fa-intnam-linux-alpha.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b79c03c558a3f8b7862b1433e6481fb5f91c877/gcc%2Fada%2Fa-intnam-linux-alpha.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-intnam-linux-alpha.ads?ref=6b79c03c558a3f8b7862b1433e6481fb5f91c877", "patch": "@@ -1,145 +0,0 @@\n-------------------------------------------------------------------------------\n---                                                                          --\n---                GNU ADA RUN-TIME LIBRARY (GNARL) COMPONENTS               --\n---                                                                          --\n---                   A D A . I N T E R R U P T S . N A M E S                --\n---                                                                          --\n---                                  S p e c                                 --\n---                                                                          --\n---           Copyright (C) 1991-2005 Free Software Foundation, Inc.         --\n---                                                                          --\n--- GNARL is free software; you can  redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n--- sion. GNARL is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n--- for  more details.  You should have  received  a copy of the GNU General --\n--- Public License  distributed with GNARL; see file COPYING.  If not, write --\n--- to  the Free Software Foundation,  59 Temple Place - Suite 330,  Boston, --\n--- MA 02111-1307, USA.                                                      --\n---                                                                          --\n--- As a special exception,  if other files  instantiate  generics from this --\n--- unit, or you link  this unit with other files  to produce an executable, --\n--- this  unit  does not  by itself cause  the resulting  executable  to  be --\n--- covered  by the  GNU  General  Public  License.  This exception does not --\n--- however invalidate  any other reasons why  the executable file  might be --\n--- covered by the  GNU Public License.                                      --\n---                                                                          --\n--- GNARL was developed by the GNARL team at Florida State University.       --\n--- Extensive contributions were provided by Ada Core Technologies, Inc.     --\n---                                                                          --\n-------------------------------------------------------------------------------\n-\n---  This is the Alpha GNU/Linux version of this package.\n---\n---  This target-dependent package spec contains names of interrupts\n---  supported by the local system.\n-\n-with System.OS_Interface;\n---  used for names of interrupts\n-\n-package Ada.Interrupts.Names is\n-\n-   --  Beware that the mapping of names to signals may be\n-   --  many-to-one.  There may be aliases.  Also, for all\n-   --  signal names that are not supported on the current system\n-   --  the value of the corresponding constant will be zero.\n-\n-   SIGHUP : constant Interrupt_ID :=\n-     System.OS_Interface.SIGHUP;      --  hangup\n-\n-   SIGINT : constant Interrupt_ID :=\n-     System.OS_Interface.SIGINT;      --  interrupt (rubout)\n-\n-   SIGQUIT : constant Interrupt_ID :=\n-     System.OS_Interface.SIGQUIT;     --  quit (ASCD FS)\n-\n-   SIGILL : constant Interrupt_ID :=\n-     System.OS_Interface.SIGILL;      --  illegal instruction (not reset)\n-\n-   SIGTRAP : constant Interrupt_ID :=\n-     System.OS_Interface.SIGTRAP;     --  trace trap (not reset)\n-\n-   SIGIOT : constant Interrupt_ID :=\n-     System.OS_Interface.SIGIOT;      --  IOT instruction\n-\n-   SIGABRT : constant Interrupt_ID := --  used by abort,\n-     System.OS_Interface.SIGABRT;     --  replace SIGIOT in the  future\n-\n-   SIGFPE : constant Interrupt_ID :=\n-     System.OS_Interface.SIGFPE;      --  floating point exception\n-\n-   SIGKILL : constant Interrupt_ID :=\n-     System.OS_Interface.SIGKILL;     --  kill (cannot be caught or ignored)\n-\n-   SIGBUS : constant Interrupt_ID :=\n-     System.OS_Interface.SIGBUS;      --  bus error\n-\n-   SIGSEGV : constant Interrupt_ID :=\n-     System.OS_Interface.SIGSEGV;     --  segmentation violation\n-\n-   SIGPIPE : constant Interrupt_ID := --  write on a pipe with\n-     System.OS_Interface.SIGPIPE;     --  no one to read it\n-\n-   SIGALRM : constant Interrupt_ID :=\n-     System.OS_Interface.SIGALRM;     --  alarm clock\n-\n-   SIGTERM : constant Interrupt_ID :=\n-     System.OS_Interface.SIGTERM;     --  software termination signal from kill\n-\n-   SIGURG : constant Interrupt_ID :=\n-     System.OS_Interface.SIGURG;      --  urgent condition on IO channel\n-\n-   SIGSTOP : constant Interrupt_ID :=\n-     System.OS_Interface.SIGSTOP;     --  stop (cannot be caught or ignored)\n-\n-   SIGTSTP : constant Interrupt_ID :=\n-     System.OS_Interface.SIGTSTP;     --  user stop requested from tty\n-\n-   SIGCONT : constant Interrupt_ID :=\n-     System.OS_Interface.SIGCONT;     --  stopped process has been continued\n-\n-   SIGCLD : constant Interrupt_ID :=\n-     System.OS_Interface.SIGCLD;      --  child status change\n-\n-   SIGCHLD : constant Interrupt_ID :=\n-     System.OS_Interface.SIGCHLD;     --  4.3BSD's/POSIX name for SIGCLD\n-\n-   SIGTTIN : constant Interrupt_ID :=\n-     System.OS_Interface.SIGTTIN;     --  background tty read attempted\n-\n-   SIGTTOU : constant Interrupt_ID :=\n-     System.OS_Interface.SIGTTOU;     --  background tty write attempted\n-\n-   SIGIO : constant Interrupt_ID :=   --  input/output possible,\n-     System.OS_Interface.SIGIO;       --  SIGPOLL alias (Solaris)\n-\n-   SIGPOLL : constant Interrupt_ID :=\n-     System.OS_Interface.SIGPOLL;     --  pollable event occurred\n-\n-   SIGXCPU : constant Interrupt_ID :=\n-     System.OS_Interface.SIGXCPU;     --  CPU time limit exceeded\n-\n-   SIGXFSZ : constant Interrupt_ID :=\n-     System.OS_Interface.SIGXFSZ;     --  filesize limit exceeded\n-\n-   SIGVTALRM : constant Interrupt_ID :=\n-     System.OS_Interface.SIGVTALRM;   --  virtual timer expired\n-\n-   SIGPROF : constant Interrupt_ID :=\n-     System.OS_Interface.SIGPROF;     --  profiling timer expired\n-\n-   SIGWINCH : constant Interrupt_ID :=\n-     System.OS_Interface.SIGWINCH;    --  window size change\n-\n-   SIGPWR : constant Interrupt_ID :=\n-     System.OS_Interface.SIGPWR;        --  Power failure\n-\n-   SIGUSR1 : constant Interrupt_ID :=\n-     System.OS_Interface.SIGUSR1;     --  user defined signal 1\n-\n-   SIGUSR2 : constant Interrupt_ID :=\n-     System.OS_Interface.SIGUSR2;     --  user defined signal 2\n-\n-end Ada.Interrupts.Names;"}, {"sha": "60f0172a8a6ac5706a7898459019a4bac1d2e087", "filename": "gcc/ada/s-osinte-linux-alpha.ads", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f38e7380efdad4245097477e4ff0ace1fa79deb/gcc%2Fada%2Fs-osinte-linux-alpha.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f38e7380efdad4245097477e4ff0ace1fa79deb/gcc%2Fada%2Fs-osinte-linux-alpha.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-linux-alpha.ads?ref=3f38e7380efdad4245097477e4ff0ace1fa79deb", "patch": "@@ -122,6 +122,12 @@ package System.OS_Interface is\n    --  Change this if you want to use another signal for task abort.\n    --  SIGTERM might be a good one.\n \n+   SIGUNUSED  : constant := 0;\n+   SIGSTKFLT  : constant := 0;\n+   SIGLOST    : constant := 0;\n+   --  These don't exist for Linux/Alpha.  The constants are present\n+   --  so that we can continue to use a-intnam-linux.ads.\n+\n    type Signal_Set is array (Natural range <>) of Signal;\n \n    Unmasked    : constant Signal_Set := ("}, {"sha": "83c486ee45b829f25e6e378acb0eca5325ac3135", "filename": "gcc/ada/system-linux-alpha.ads", "status": "added", "additions": 151, "deletions": 0, "changes": 151, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f38e7380efdad4245097477e4ff0ace1fa79deb/gcc%2Fada%2Fsystem-linux-alpha.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f38e7380efdad4245097477e4ff0ace1fa79deb/gcc%2Fada%2Fsystem-linux-alpha.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-linux-alpha.ads?ref=3f38e7380efdad4245097477e4ff0ace1fa79deb", "patch": "@@ -0,0 +1,151 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                        GNAT RUN-TIME COMPONENTS                          --\n+--                                                                          --\n+--                               S Y S T E M                                --\n+--                                                                          --\n+--                                 S p e c                                  --\n+--                         (GNU-Linux/ia64 Version)                         --\n+--                                                                          --\n+--          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n+--                                                                          --\n+-- This specification is derived from the Ada Reference Manual for use with --\n+-- GNAT. The copyright notice above, and the license provisions that follow --\n+-- apply solely to the  contents of the part following the private keyword. --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n+-- for  more details.  You should have  received  a copy of the GNU General --\n+-- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n+-- to  the Free Software Foundation,  59 Temple Place - Suite 330,  Boston, --\n+-- MA 02111-1307, USA.                                                      --\n+--                                                                          --\n+-- As a special exception,  if other files  instantiate  generics from this --\n+-- unit, or you link  this unit with other files  to produce an executable, --\n+-- this  unit  does not  by itself cause  the resulting  executable  to  be --\n+-- covered  by the  GNU  General  Public  License.  This exception does not --\n+-- however invalidate  any other reasons why  the executable file  might be --\n+-- covered by the  GNU Public License.                                      --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+package System is\n+pragma Pure (System);\n+--  Note that we take advantage of the implementation permission to\n+--  make this unit Pure instead of Preelaborable, see RM 13.7(36)\n+\n+   type Name is (SYSTEM_NAME_GNAT);\n+   System_Name : constant Name := SYSTEM_NAME_GNAT;\n+\n+   --  System-Dependent Named Numbers\n+\n+   Min_Int               : constant := Long_Long_Integer'First;\n+   Max_Int               : constant := Long_Long_Integer'Last;\n+\n+   Max_Binary_Modulus    : constant := 2 ** Long_Long_Integer'Size;\n+   Max_Nonbinary_Modulus : constant := Integer'Last;\n+\n+   Max_Base_Digits       : constant := Long_Long_Float'Digits;\n+   Max_Digits            : constant := Long_Long_Float'Digits;\n+\n+   Max_Mantissa          : constant := 63;\n+   Fine_Delta            : constant := 2.0 ** (-Max_Mantissa);\n+\n+   Tick                  : constant := 1.0 / 1024.0;\n+\n+   --  Storage-related Declarations\n+\n+   type Address is private;\n+   Null_Address : constant Address;\n+\n+   Storage_Unit : constant := 8;\n+   Word_Size    : constant := 64;\n+   Memory_Size  : constant := 2 ** 64;\n+\n+   --  Address comparison\n+\n+   function \"<\"  (Left, Right : Address) return Boolean;\n+   function \"<=\" (Left, Right : Address) return Boolean;\n+   function \">\"  (Left, Right : Address) return Boolean;\n+   function \">=\" (Left, Right : Address) return Boolean;\n+   function \"=\"  (Left, Right : Address) return Boolean;\n+\n+   pragma Import (Intrinsic, \"<\");\n+   pragma Import (Intrinsic, \"<=\");\n+   pragma Import (Intrinsic, \">\");\n+   pragma Import (Intrinsic, \">=\");\n+   pragma Import (Intrinsic, \"=\");\n+\n+   --  Other System-Dependent Declarations\n+\n+   type Bit_Order is (High_Order_First, Low_Order_First);\n+   Default_Bit_Order : constant Bit_Order := Low_Order_First;\n+\n+   --  Priority-related Declarations (RM D.1)\n+\n+   Max_Priority           : constant Positive := 30;\n+   Max_Interrupt_Priority : constant Positive := 31;\n+\n+   subtype Any_Priority       is Integer      range  0 .. 31;\n+   subtype Priority           is Any_Priority range  0 .. 30;\n+   subtype Interrupt_Priority is Any_Priority range 31 .. 31;\n+\n+   Default_Priority : constant Priority := 15;\n+\n+private\n+\n+   type Address is mod Memory_Size;\n+   Null_Address : constant Address := 0;\n+\n+   --------------------------------------\n+   -- System Implementation Parameters --\n+   --------------------------------------\n+\n+   --  These parameters provide information about the target that is used\n+   --  by the compiler. They are in the private part of System, where they\n+   --  can be accessed using the special circuitry in the Targparm unit\n+   --  whose source should be consulted for more detailed descriptions\n+   --  of the individual switch values.\n+\n+   AAMP                      : constant Boolean := False;\n+   Backend_Divide_Checks     : constant Boolean := False;\n+   Backend_Overflow_Checks   : constant Boolean := False;\n+   Command_Line_Args         : constant Boolean := True;\n+   Configurable_Run_Time     : constant Boolean := False;\n+   Denorm                    : constant Boolean := True;\n+   Duration_32_Bits          : constant Boolean := False;\n+   Exit_Status_Supported     : constant Boolean := True;\n+   Fractional_Fixed_Ops      : constant Boolean := False;\n+   Frontend_Layout           : constant Boolean := False;\n+   Functions_Return_By_DSP   : constant Boolean := False;\n+   Machine_Overflows         : constant Boolean := False;\n+   Machine_Rounds            : constant Boolean := True;\n+   OpenVMS                   : constant Boolean := False;\n+   Preallocated_Stacks       : constant Boolean := False;\n+   Signed_Zeros              : constant Boolean := True;\n+   Stack_Check_Default       : constant Boolean := False;\n+   Stack_Check_Probes        : constant Boolean := False;\n+   Support_64_Bit_Divides    : constant Boolean := True;\n+   Support_Aggregates        : constant Boolean := True;\n+   Support_Composite_Assign  : constant Boolean := True;\n+   Support_Composite_Compare : constant Boolean := True;\n+   Support_Long_Shifts       : constant Boolean := True;\n+   Suppress_Standard_Library : constant Boolean := False;\n+   Use_Ada_Main_Program_Name : constant Boolean := False;\n+   ZCX_By_Default            : constant Boolean := True;\n+   GCC_ZCX_Support           : constant Boolean := True;\n+   Front_End_ZCX_Support     : constant Boolean := False;\n+\n+   --  Obsolete entries, to be removed eventually (bootstrap issues!)\n+\n+   High_Integrity_Mode       : constant Boolean := False;\n+   Long_Shifts_Inlined       : constant Boolean := True;\n+\n+end System;"}]}