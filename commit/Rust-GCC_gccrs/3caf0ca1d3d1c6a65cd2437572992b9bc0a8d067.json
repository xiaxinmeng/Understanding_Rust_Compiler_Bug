{"sha": "3caf0ca1d3d1c6a65cd2437572992b9bc0a8d067", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2NhZjBjYTFkM2QxYzZhNjVjZDI0Mzc1NzI5OTJiOWJjMGE4ZDA2Nw==", "commit": {"author": {"name": "Bernd Schmidt", "email": "bernds@redhat.com", "date": "2016-03-25T16:15:39Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2016-03-25T16:15:39Z"}, "message": "re PR preprocessor/69650 (ICE in linemap_line_start, at libcpp/line-map.c:803)\n\n\tPR lto/69650\n\t* directives.c (do_linemarker): Test for file left but not entered\n\there.\n\t* line-map.c (linemap_add): Not here.\n\n\tPR lto/69650\n\t* gcc.dg/pr69650.c: New test.\n\nFrom-SVN: r234481", "tree": {"sha": "9471bd17deccc2f59b0dbe6408240bdddda296b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9471bd17deccc2f59b0dbe6408240bdddda296b2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3caf0ca1d3d1c6a65cd2437572992b9bc0a8d067", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3caf0ca1d3d1c6a65cd2437572992b9bc0a8d067", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3caf0ca1d3d1c6a65cd2437572992b9bc0a8d067", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3caf0ca1d3d1c6a65cd2437572992b9bc0a8d067/comments", "author": null, "committer": null, "parents": [{"sha": "634035b610977ac310cce45fe3b771ac2a3730d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/634035b610977ac310cce45fe3b771ac2a3730d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/634035b610977ac310cce45fe3b771ac2a3730d7"}], "stats": {"total": 68, "additions": 39, "deletions": 29}, "files": [{"sha": "396341b9df4af18b959b5da6e0aaf9946e5303dc", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3caf0ca1d3d1c6a65cd2437572992b9bc0a8d067/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3caf0ca1d3d1c6a65cd2437572992b9bc0a8d067/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3caf0ca1d3d1c6a65cd2437572992b9bc0a8d067", "patch": "@@ -1,3 +1,8 @@\n+2016-03-25  Bernd Schmidt  <bschmidt@redhat.com>\n+\n+\tPR lto/69650\n+\t* gcc.dg/pr69650.c: New test.\n+\n 2016-03-25  David Edelsohn  <dje.gcc@gmail.com>\n \n \t* g++.dg/ext/pr70290.C: Prune non-standard ABI."}, {"sha": "decdb89a0beea763f3a3a7facbfc02598aee9cd0", "filename": "gcc/testsuite/gcc.dg/pr69650.c", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3caf0ca1d3d1c6a65cd2437572992b9bc0a8d067/gcc%2Ftestsuite%2Fgcc.dg%2Fpr69650.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3caf0ca1d3d1c6a65cd2437572992b9bc0a8d067/gcc%2Ftestsuite%2Fgcc.dg%2Fpr69650.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr69650.c?ref=3caf0ca1d3d1c6a65cd2437572992b9bc0a8d067", "patch": "@@ -0,0 +1,5 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-std=gnu99\" } */\n+\n+# 9 \"somefile\" 2 /* { dg-warning \"linemarker ignored due to incorrect nesting\" } */\n+not_a_type a; /* { dg-error \"unknown type\" } */"}, {"sha": "49b6e71abbb74e051dd5630c6b20037dca346e22", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3caf0ca1d3d1c6a65cd2437572992b9bc0a8d067/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3caf0ca1d3d1c6a65cd2437572992b9bc0a8d067/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=3caf0ca1d3d1c6a65cd2437572992b9bc0a8d067", "patch": "@@ -1,3 +1,10 @@\n+2016-03-25  Bernd Schmidt  <bschmidt@redhat.com>\n+\n+\tPR lto/69650\n+\t* directives.c (do_linemarker): Test for file left but not entered\n+\there.\n+\t* line-map.c (linemap_add): Not here.\n+\n 2016-03-21  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/70296"}, {"sha": "6aa6bd1f86acd17682cf581a431431cc7cc030ba", "filename": "libcpp/directives.c", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3caf0ca1d3d1c6a65cd2437572992b9bc0a8d067/libcpp%2Fdirectives.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3caf0ca1d3d1c6a65cd2437572992b9bc0a8d067/libcpp%2Fdirectives.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fdirectives.c?ref=3caf0ca1d3d1c6a65cd2437572992b9bc0a8d067", "patch": "@@ -1046,6 +1046,19 @@ do_linemarker (cpp_reader *pfile)\n \n   skip_rest_of_line (pfile);\n \n+  if (reason == LC_LEAVE)\n+    {\n+      const line_map_ordinary *from;      \n+      if (MAIN_FILE_P (map)\n+\t  || (new_file\n+\t      && (from = INCLUDED_FROM (pfile->line_table, map)) != NULL\n+\t      && filename_cmp (ORDINARY_MAP_FILE_NAME (from), new_file) != 0))\n+\t{\n+\t  cpp_warning (pfile, CPP_W_NONE,\n+\t\t     \"file \\\"%s\\\" linemarker ignored due to incorrect nesting\", new_file);\n+\t  return;\n+\t}\n+    }\n   /* Compensate for the increment in linemap_add that occurs in\n      _cpp_do_file_change.  We're currently at the start of the line\n      *following* the #line directive.  A separate source_location for this"}, {"sha": "2e61895bb35bf6814b8040fdb0859772e28adf19", "filename": "libcpp/line-map.c", "status": "modified", "additions": 9, "deletions": 29, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3caf0ca1d3d1c6a65cd2437572992b9bc0a8d067/libcpp%2Fline-map.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3caf0ca1d3d1c6a65cd2437572992b9bc0a8d067/libcpp%2Fline-map.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fline-map.c?ref=3caf0ca1d3d1c6a65cd2437572992b9bc0a8d067", "patch": "@@ -512,43 +512,23 @@ linemap_add (struct line_maps *set, enum lc_reason reason,\n \t \"included\", this variable points the map in use right before the\n \t #include \"included\", inside the same \"includer\" file.  */\n       line_map_ordinary *from;\n-      bool error;\n \n-      if (MAIN_FILE_P (map - 1))\n-\t{\n-\t  /* So this _should_ mean we are leaving the main file --\n-\t     effectively ending the compilation unit. But to_file not\n-\t     being NULL means the caller thinks we are leaving to\n-\t     another file. This is an erroneous behaviour but we'll\n-\t     try to recover from it. Let's pretend we are not leaving\n-\t     the main file.  */\n-\t  error = true;\n-          reason = LC_RENAME;\n-          from = map - 1;\n-\t}\n-      else\n-\t{\n-\t  /* (MAP - 1) points to the map we are leaving. The\n-\t     map from which (MAP - 1) got included should be the map\n-\t     that comes right before MAP in the same file.  */\n-\t  from = INCLUDED_FROM (set, map - 1);\n-\t  error = to_file && filename_cmp (ORDINARY_MAP_FILE_NAME (from),\n-\t\t\t\t\t   to_file);\n-\t}\n-\n-      /* Depending upon whether we are handling preprocessed input or\n-\t not, this can be a user error or an ICE.  */\n-      if (error)\n-\tfprintf (stderr, \"line-map.c: file \\\"%s\\\" left but not entered\\n\",\n-\t\t to_file);\n+      linemap_assert (!MAIN_FILE_P (map - 1));\n+      /* (MAP - 1) points to the map we are leaving. The\n+\t map from which (MAP - 1) got included should be the map\n+\t that comes right before MAP in the same file.  */\n+      from = INCLUDED_FROM (set, map - 1);\n \n       /* A TO_FILE of NULL is special - we use the natural values.  */\n-      if (error || to_file == NULL)\n+      if (to_file == NULL)\n \t{\n \t  to_file = ORDINARY_MAP_FILE_NAME (from);\n \t  to_line = SOURCE_LINE (from, from[1].start_location);\n \t  sysp = ORDINARY_MAP_IN_SYSTEM_HEADER_P (from);\n \t}\n+      else\n+\tlinemap_assert (filename_cmp (ORDINARY_MAP_FILE_NAME (from),\n+\t\t\t\t      to_file) == 0);\n     }\n \n   map->sysp = sysp;"}]}