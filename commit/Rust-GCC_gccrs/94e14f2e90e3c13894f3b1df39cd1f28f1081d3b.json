{"sha": "94e14f2e90e3c13894f3b1df39cd1f28f1081d3b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTRlMTRmMmU5MGUzYzEzODk0ZjNiMWRmMzljZDFmMjhmMTA4MWQzYg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2019-07-06T21:56:46Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2019-07-06T21:56:46Z"}, "message": "omp-low.c (struct omp_context): Rename combined_into_simd_safelen0 member to combined_into_simd_safelen1.\n\n\t* omp-low.c (struct omp_context): Rename combined_into_simd_safelen0\n\tmember to combined_into_simd_safelen1.\n\t(lower_rec_input_clauses, lower_omp_1): Adjust uses.\n\t(lower_lastprivate_clauses): Likewise.  For conditional lastprivate\n\tclauses if ctx->combined_into_simd_safelen1 put statements after the\n\tpredicate conditionalized block rather than into it.\n\nFrom-SVN: r273168", "tree": {"sha": "f02a2b76e65f271b7cb2dc3198609560f5db04e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f02a2b76e65f271b7cb2dc3198609560f5db04e9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/94e14f2e90e3c13894f3b1df39cd1f28f1081d3b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94e14f2e90e3c13894f3b1df39cd1f28f1081d3b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/94e14f2e90e3c13894f3b1df39cd1f28f1081d3b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94e14f2e90e3c13894f3b1df39cd1f28f1081d3b/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a10b664eb7a5b8de4e84c6a87e5e462da8c69133", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a10b664eb7a5b8de4e84c6a87e5e462da8c69133", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a10b664eb7a5b8de4e84c6a87e5e462da8c69133"}], "stats": {"total": 25, "additions": 21, "deletions": 4}, "files": [{"sha": "ae3fbe40e7b215d27e8fcfb1b90e16c9a0a7e4d3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94e14f2e90e3c13894f3b1df39cd1f28f1081d3b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94e14f2e90e3c13894f3b1df39cd1f28f1081d3b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=94e14f2e90e3c13894f3b1df39cd1f28f1081d3b", "patch": "@@ -1,3 +1,12 @@\n+2019-07-06  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* omp-low.c (struct omp_context): Rename combined_into_simd_safelen0\n+\tmember to combined_into_simd_safelen1.\n+\t(lower_rec_input_clauses, lower_omp_1): Adjust uses.\n+\t(lower_lastprivate_clauses): Likewise.  For conditional lastprivate\n+\tclauses if ctx->combined_into_simd_safelen1 put statements after the\n+\tpredicate conditionalized block rather than into it.\n+\n 2019-07-06  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* config/s390/s390.md (*negabs<FP:mode>2_nocc): Use FP for"}, {"sha": "b687fe1125b3d888dbcc2f94a5b4f0cad235563d", "filename": "gcc/omp-low.c", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94e14f2e90e3c13894f3b1df39cd1f28f1081d3b/gcc%2Fomp-low.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94e14f2e90e3c13894f3b1df39cd1f28f1081d3b/gcc%2Fomp-low.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-low.c?ref=94e14f2e90e3c13894f3b1df39cd1f28f1081d3b", "patch": "@@ -140,7 +140,7 @@ struct omp_context\n \n   /* True if lower_omp_1 should look up lastprivate conditional in parent\n      context.  */\n-  bool combined_into_simd_safelen0;\n+  bool combined_into_simd_safelen1;\n \n   /* True if there is nested scan context with inclusive clause.  */\n   bool scan_inclusive;\n@@ -5703,7 +5703,7 @@ lower_rec_input_clauses (tree clauses, gimple_seq *ilist, gimple_seq *dlist,\n \t  if (gimple_omp_for_combined_into_p (ctx->stmt))\n \t    {\n \t      /* Signal to lower_omp_1 that it should use parent context.  */\n-\t      ctx->combined_into_simd_safelen0 = true;\n+\t      ctx->combined_into_simd_safelen1 = true;\n \t      for (c = clauses; c ; c = OMP_CLAUSE_CHAIN (c))\n \t\tif (OMP_CLAUSE_CODE (c) == OMP_CLAUSE_LASTPRIVATE\n \t\t    && OMP_CLAUSE_LASTPRIVATE_CONDITIONAL (c))\n@@ -6018,6 +6018,7 @@ lower_lastprivate_clauses (tree clauses, tree predicate, gimple_seq *body_p,\n   bool par_clauses = false;\n   tree simduid = NULL, lastlane = NULL, simtcond = NULL, simtlast = NULL;\n   unsigned HOST_WIDE_INT conditional_off = 0;\n+  gimple_seq post_stmt_list = NULL;\n \n   /* Early exit if there are no lastprivate or linear clauses.  */\n   for (; clauses ; clauses = OMP_CLAUSE_CHAIN (clauses))\n@@ -6107,7 +6108,7 @@ lower_lastprivate_clauses (tree clauses, tree predicate, gimple_seq *body_p,\n       if (OMP_CLAUSE_CODE (c) == OMP_CLAUSE_LASTPRIVATE\n \t  && OMP_CLAUSE_LASTPRIVATE_CONDITIONAL (c)\n \t  && ctx->lastprivate_conditional_map\n-\t  && !ctx->combined_into_simd_safelen0)\n+\t  && !ctx->combined_into_simd_safelen1)\n \t{\n \t  gcc_assert (body_p);\n \t  if (simduid)\n@@ -6144,6 +6145,12 @@ lower_lastprivate_clauses (tree clauses, tree predicate, gimple_seq *body_p,\n \t  gimple_seq_add_stmt (this_stmt_list, gimple_build_label (lab1));\n \t  gimplify_assign (mem2, v, this_stmt_list);\n \t}\n+      else if (predicate\n+\t       && ctx->combined_into_simd_safelen1\n+\t       && OMP_CLAUSE_CODE (c) == OMP_CLAUSE_LASTPRIVATE\n+\t       && OMP_CLAUSE_LASTPRIVATE_CONDITIONAL (c)\n+\t       && ctx->lastprivate_conditional_map)\n+\tthis_stmt_list = &post_stmt_list;\n \n       if (OMP_CLAUSE_CODE (c) == OMP_CLAUSE_LASTPRIVATE\n \t  || (OMP_CLAUSE_CODE (c) == OMP_CLAUSE_LINEAR\n@@ -6274,6 +6281,7 @@ lower_lastprivate_clauses (tree clauses, tree predicate, gimple_seq *body_p,\n \n   if (label)\n     gimple_seq_add_stmt (stmt_list, gimple_build_label (label));\n+  gimple_seq_add_seq (stmt_list, post_stmt_list);\n }\n \n /* Lower the OpenACC reductions of CLAUSES for compute axis LEVEL\n@@ -12412,7 +12420,7 @@ lower_omp_1 (gimple_stmt_iterator *gsi_p, omp_context *ctx)\n \t    if (tree *v = up->lastprivate_conditional_map->get (lhs))\n \t      {\n \t\ttree clauses;\n-\t\tif (up->combined_into_simd_safelen0)\n+\t\tif (up->combined_into_simd_safelen1)\n \t\t  up = up->outer;\n \t\tif (gimple_code (up->stmt) == GIMPLE_OMP_FOR)\n \t\t  clauses = gimple_omp_for_clauses (up->stmt);"}]}