{"sha": "8249770055caeb6c1a061b03f58fb6f38f06cb0c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODI0OTc3MDA1NWNhZWI2YzFhMDYxYjAzZjU4ZmI2ZjM4ZjA2Y2IwYw==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2009-09-22T19:24:56Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2009-09-22T19:24:56Z"}, "message": "system.h (TRAMPOLINE_TEMPLATE, [...]): Poison.\n\n        * system.h (TRAMPOLINE_TEMPLATE, INITIALIZE_TRAMPOLINE): Poison.\n        (TRAMPOLINE_ADJUST_ADDRESS): Poison.\n        * target-def.h (TARGET_ASM_TRAMPOLINE_TEMPLATE): Don't conditionalize\n        on TRAMPOLINE_TEMPLATE.\n        (TARGET_TRAMPOLINE_ADJUST_ADDRESS): Don't conditionalize on\n        TRAMPOLINE_ADJUST_ADDRESS.\n        * targhooks.c (default_asm_trampoline_template): Remove.\n        (default_trampoline_adjust_address): Remove.\n        (default_trampoline_init): Don't handle INITIALIZE_TRAMPOLINE.\n        * targhooks.h: Update decls.\n\nFrom-SVN: r152042", "tree": {"sha": "6dcffaba157cc245876037f70fb2adc8cfebae7c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6dcffaba157cc245876037f70fb2adc8cfebae7c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8249770055caeb6c1a061b03f58fb6f38f06cb0c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8249770055caeb6c1a061b03f58fb6f38f06cb0c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8249770055caeb6c1a061b03f58fb6f38f06cb0c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8249770055caeb6c1a061b03f58fb6f38f06cb0c/comments", "author": null, "committer": null, "parents": [{"sha": "6a92b6c7aae7311777f8faafbc52a71104a78a68", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a92b6c7aae7311777f8faafbc52a71104a78a68", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a92b6c7aae7311777f8faafbc52a71104a78a68"}], "stats": {"total": 61, "additions": 17, "deletions": 44}, "files": [{"sha": "0c3a0b651448cdb25fd28c79693bed7fdff801b5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8249770055caeb6c1a061b03f58fb6f38f06cb0c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8249770055caeb6c1a061b03f58fb6f38f06cb0c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8249770055caeb6c1a061b03f58fb6f38f06cb0c", "patch": "@@ -1,3 +1,16 @@\n+2009-09-22  Richard Henderson  <rth@redhat.com>\n+\n+\t* system.h (TRAMPOLINE_TEMPLATE, INITIALIZE_TRAMPOLINE): Poison.\n+\t(TRAMPOLINE_ADJUST_ADDRESS): Poison.\n+\t* target-def.h (TARGET_ASM_TRAMPOLINE_TEMPLATE): Don't conditionalize\n+\ton TRAMPOLINE_TEMPLATE.\n+\t(TARGET_TRAMPOLINE_ADJUST_ADDRESS): Don't conditionalize on\n+\tTRAMPOLINE_ADJUST_ADDRESS.\n+\t* targhooks.c (default_asm_trampoline_template): Remove.\n+\t(default_trampoline_adjust_address): Remove.\n+\t(default_trampoline_init): Don't handle INITIALIZE_TRAMPOLINE.\n+\t* targhooks.h: Update decls.\n+\n 2009-09-22  Dave Korn  <dave.korn.cygwin@gmail.com>\n \n \t* config/i386/cygming.h (TARGET_USE_JCR_SECTION): Enable."}, {"sha": "37fbdc1c3b9f014a4c26b5709b921941123dd264", "filename": "gcc/system.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8249770055caeb6c1a061b03f58fb6f38f06cb0c/gcc%2Fsystem.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8249770055caeb6c1a061b03f58fb6f38f06cb0c/gcc%2Fsystem.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsystem.h?ref=8249770055caeb6c1a061b03f58fb6f38f06cb0c", "patch": "@@ -707,7 +707,8 @@ extern void fancy_abort (const char *, int, const char *) ATTRIBUTE_NORETURN;\n         VECTOR_MODE_SUPPORTED_P TARGET_SUPPORTS_HIDDEN \t\t\t\\\n \tFUNCTION_ARG_PARTIAL_NREGS ASM_OUTPUT_DWARF_DTPREL\t\t\\\n \tALLOCATE_INITIAL_VALUE LEGITIMIZE_ADDRESS FRAME_POINTER_REQUIRED \\\n-\tCAN_ELIMINATE\n+\tCAN_ELIMINATE TRAMPOLINE_TEMPLATE INITIALIZE_TRAMPOLINE\t\t\\\n+\tTRAMPOLINE_ADJUST_ADDRESS\n \n /* Other obsolete target macros, or macros that used to be in target\n    headers and were not used, and may be obsolete or may never have"}, {"sha": "45b7ab7430eaf8c64c91bbc0b8474bd95e57dada", "filename": "gcc/target-def.h", "status": "modified", "additions": 2, "deletions": 11, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8249770055caeb6c1a061b03f58fb6f38f06cb0c/gcc%2Ftarget-def.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8249770055caeb6c1a061b03f58fb6f38f06cb0c/gcc%2Ftarget-def.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarget-def.h?ref=8249770055caeb6c1a061b03f58fb6f38f06cb0c", "patch": "@@ -247,11 +247,7 @@\n #define TARGET_ASM_RECORD_GCC_SWITCHES_SECTION \".GCC.command.line\"\n #endif\n \n-#ifdef TRAMPOLINE_TEMPLATE\n-# define TARGET_ASM_TRAMPOLINE_TEMPLATE default_asm_trampoline_template\n-#else\n-# define TARGET_ASM_TRAMPOLINE_TEMPLATE NULL\n-#endif\n+#define TARGET_ASM_TRAMPOLINE_TEMPLATE NULL\n \n #define TARGET_ASM_ALIGNED_INT_OP\t\t\t\t\\\n \t\t       {TARGET_ASM_ALIGNED_HI_OP,\t\t\\\n@@ -616,12 +612,7 @@\n #define TARGET_ALLOCATE_STACK_SLOTS_FOR_ARGS hook_bool_void_true\n #define TARGET_STATIC_CHAIN default_static_chain\n #define TARGET_TRAMPOLINE_INIT default_trampoline_init\n-\n-#ifdef TRAMPOLINE_ADJUST_ADDRESS\n-# define TARGET_TRAMPOLINE_ADJUST_ADDRESS default_trampoline_adjust_address\n-#else\n-# define TARGET_TRAMPOLINE_ADJUST_ADDRESS NULL\n-#endif\n+#define TARGET_TRAMPOLINE_ADJUST_ADDRESS NULL\n \n #define TARGET_CALLS {\t\t\t\t\t\t\\\n    TARGET_PROMOTE_FUNCTION_MODE,\t\t\t\t\\"}, {"sha": "16f481ec7d8b7535fea648f4214f9db70f594a58", "filename": "gcc/targhooks.c", "status": "modified", "additions": 0, "deletions": 30, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8249770055caeb6c1a061b03f58fb6f38f06cb0c/gcc%2Ftarghooks.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8249770055caeb6c1a061b03f58fb6f38f06cb0c/gcc%2Ftarghooks.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarghooks.c?ref=8249770055caeb6c1a061b03f58fb6f38f06cb0c", "patch": "@@ -654,41 +654,11 @@ default_static_chain (const_tree fndecl, bool incoming_p)\n   gcc_unreachable ();\n }\n \n-#ifdef TRAMPOLINE_TEMPLATE\n-void\n-default_asm_trampoline_template (FILE *f)\n-{\n-  TRAMPOLINE_TEMPLATE (f);\n-}\n-#endif\n-\n void\n default_trampoline_init (rtx ARG_UNUSED (m_tramp), tree ARG_UNUSED (t_func),\n \t\t\t rtx ARG_UNUSED (r_chain))\n {\n-#ifdef INITIALIZE_TRAMPOLINE\n-  rtx r_tramp, r_func;\n-\n-  if (targetm.asm_out.trampoline_template)\n-    emit_block_move (m_tramp, assemble_trampoline_template (),\n-\t\t     GEN_INT (TRAMPOLINE_SIZE), BLOCK_OP_NORMAL);\n-\n-  r_func = XEXP (DECL_RTL (t_func), 0);\n-  r_tramp = XEXP (m_tramp, 0);\n-\n-  INITIALIZE_TRAMPOLINE (r_tramp, r_func, r_chain);\n-#else\n   sorry (\"nested function trampolines not supported on this target\");\n-#endif\n-}\n-\n-rtx\n-default_trampoline_adjust_address (rtx addr)\n-{\n-#ifdef TRAMPOLINE_ADJUST_ADDRESS\n-  TRAMPOLINE_ADJUST_ADDRESS (addr);\n-#endif\n-  return addr;\n }\n \n enum reg_class"}, {"sha": "490d4ceeb91fd4097c41b5aacef422cecf326056", "filename": "gcc/targhooks.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8249770055caeb6c1a061b03f58fb6f38f06cb0c/gcc%2Ftarghooks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8249770055caeb6c1a061b03f58fb6f38f06cb0c/gcc%2Ftarghooks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarghooks.h?ref=8249770055caeb6c1a061b03f58fb6f38f06cb0c", "patch": "@@ -101,9 +101,7 @@ extern rtx default_function_value (const_tree, const_tree, bool);\n extern rtx default_libcall_value (enum machine_mode, rtx);\n extern rtx default_internal_arg_pointer (void);\n extern rtx default_static_chain (const_tree, bool);\n-extern void default_asm_trampoline_template (FILE *);\n extern void default_trampoline_init (rtx, tree, rtx);\n-extern rtx default_trampoline_adjust_address (rtx);\n extern enum reg_class default_branch_target_register_class (void);\n #ifdef IRA_COVER_CLASSES\n extern const enum reg_class *default_ira_cover_classes (void);"}]}