{"sha": "5c4cdc9fdf288148cc63bd30e37c49a5b147b6a0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWM0Y2RjOWZkZjI4ODE0OGNjNjNiZDMwZTM3YzQ5YTViMTQ3YjZhMA==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1996-06-06T23:13:24Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1996-06-06T23:13:24Z"}, "message": "(assign_parms): Handle PARALLEL parameter in ENTRY_PARM.\n\nFrom-SVN: r12191", "tree": {"sha": "c22d262c57fc1917a45a0536b80b4058208d2555", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c22d262c57fc1917a45a0536b80b4058208d2555"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5c4cdc9fdf288148cc63bd30e37c49a5b147b6a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c4cdc9fdf288148cc63bd30e37c49a5b147b6a0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c4cdc9fdf288148cc63bd30e37c49a5b147b6a0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c4cdc9fdf288148cc63bd30e37c49a5b147b6a0/comments", "author": null, "committer": null, "parents": [{"sha": "ae73d3bec564a5bcc12c558bd61fa8c3fa85c47c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae73d3bec564a5bcc12c558bd61fa8c3fa85c47c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae73d3bec564a5bcc12c558bd61fa8c3fa85c47c"}], "stats": {"total": 36, "additions": 26, "deletions": 10}, "files": [{"sha": "e4d73d0b1bb2dea6d224d01159f373591623d04f", "filename": "gcc/function.c", "status": "modified", "additions": 26, "deletions": 10, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c4cdc9fdf288148cc63bd30e37c49a5b147b6a0/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c4cdc9fdf288148cc63bd30e37c49a5b147b6a0/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=5c4cdc9fdf288148cc63bd30e37c49a5b147b6a0", "patch": "@@ -3495,9 +3495,17 @@ assign_parms (fndecl, second_time)\n \t\t   * (PARM_BOUNDARY / BITS_PER_UNIT));\n \n \t      if (! second_time)\n-\t\tmove_block_from_reg (REGNO (entry_parm),\n-\t\t\t\t     validize_mem (stack_parm), nregs,\n-\t\t\t\t     int_size_in_bytes (TREE_TYPE (parm)));\n+\t\t{\n+\t\t  /* Handle calls that pass values in multiple non-contiguous\n+\t\t     locations.  The Irix 6 ABI has examples of this.  */\n+\t\t  if (GET_CODE (entry_parm) == PARALLEL)\n+\t\t    emit_group_store (validize_mem (stack_parm),\n+\t\t\t\t\t entry_parm);\n+\t\t  else\n+\t\t    move_block_from_reg (REGNO (entry_parm),\n+\t\t\t\t\t validize_mem (stack_parm), nregs,\n+\t\t\t\t\t int_size_in_bytes (TREE_TYPE (parm)));\n+\t\t}\n \t      entry_parm = stack_parm;\n \t    }\n \t}\n@@ -3621,10 +3629,13 @@ assign_parms (fndecl, second_time)\n \n \t Set DECL_RTL to that place.  */\n \n-      if (nominal_mode == BLKmode)\n+      if (nominal_mode == BLKmode || GET_CODE (entry_parm) == PARALLEL)\n \t{\n-\t  /* If a BLKmode arrives in registers, copy it to a stack slot.  */\n-\t  if (GET_CODE (entry_parm) == REG)\n+\t  /* If a BLKmode arrives in registers, copy it to a stack slot.\n+\t     Handle calls that pass values in multiple non-contiguous\n+\t     locations.  The Irix 6 ABI has examples of this.  */\n+\t  if (GET_CODE (entry_parm) == REG\n+\t      || GET_CODE (entry_parm) == PARALLEL)\n \t    {\n \t      int size_stored\n \t\t= CEIL_ROUND (int_size_in_bytes (TREE_TYPE (parm)),\n@@ -3655,10 +3666,15 @@ assign_parms (fndecl, second_time)\n \t      if (TREE_READONLY (parm))\n \t\tRTX_UNCHANGING_P (stack_parm) = 1;\n \n-\t      move_block_from_reg (REGNO (entry_parm),\n-\t\t\t\t   validize_mem (stack_parm),\n-\t\t\t\t   size_stored / UNITS_PER_WORD,\n-\t\t\t\t   int_size_in_bytes (TREE_TYPE (parm)));\n+\t      /* Handle calls that pass values in multiple non-contiguous\n+\t\t locations.  The Irix 6 ABI has examples of this.  */\n+\t      if (GET_CODE (entry_parm) == PARALLEL)\n+\t\temit_group_store (validize_mem (stack_parm), entry_parm);\n+\t      else\n+\t\tmove_block_from_reg (REGNO (entry_parm),\n+\t\t\t\t     validize_mem (stack_parm),\n+\t\t\t\t     size_stored / UNITS_PER_WORD,\n+\t\t\t\t     int_size_in_bytes (TREE_TYPE (parm)));\n \t    }\n \t  DECL_RTL (parm) = stack_parm;\n \t}"}]}