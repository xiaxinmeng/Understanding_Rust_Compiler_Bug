{"sha": "61fdc9d7460cf58d002cb91b5a3141dea69d9f48", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjFmZGM5ZDc0NjBjZjU4ZDAwMmNiOTFiNWEzMTQxZGVhNjlkOWY0OA==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2007-09-05T19:10:48Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2007-09-05T19:10:48Z"}, "message": "re PR c++/30302 (ICE with invalid member in anonymous struct)\n\n/cp\n2007-09-03  Paolo Carlini  <pcarlini@suse.de>\n\n\tPR c++/30302\n\t* semantics.c (finish_id_expression): Check that path != NULL_TREE\n\tbefore using TYPE_BINFO on it.\n\t* class.c (finish_struct_anon): Deal correctly with anonymous\n\tstructs (vs unions, as GNU extension) in error messages.\n\n/testsuite\n2007-09-03  Paolo Carlini  <pcarlini@suse.de>\n\n\tPR c++/30302\n\t* g++.dg/ext/anon-struct5.C: New.\n\nFrom-SVN: r128145", "tree": {"sha": "a35f69825bbd15b17669ab413bf46bfb7fecb456", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a35f69825bbd15b17669ab413bf46bfb7fecb456"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/61fdc9d7460cf58d002cb91b5a3141dea69d9f48", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61fdc9d7460cf58d002cb91b5a3141dea69d9f48", "html_url": "https://github.com/Rust-GCC/gccrs/commit/61fdc9d7460cf58d002cb91b5a3141dea69d9f48", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61fdc9d7460cf58d002cb91b5a3141dea69d9f48/comments", "author": null, "committer": null, "parents": [{"sha": "13678df87b8f2c1e23fb02b5f8e5fbbc9ce32260", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13678df87b8f2c1e23fb02b5f8e5fbbc9ce32260", "html_url": "https://github.com/Rust-GCC/gccrs/commit/13678df87b8f2c1e23fb02b5f8e5fbbc9ce32260"}], "stats": {"total": 51, "additions": 46, "deletions": 5}, "files": [{"sha": "f98079256d9b7238a17ce0c31652fd42788e37c5", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61fdc9d7460cf58d002cb91b5a3141dea69d9f48/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61fdc9d7460cf58d002cb91b5a3141dea69d9f48/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=61fdc9d7460cf58d002cb91b5a3141dea69d9f48", "patch": "@@ -1,3 +1,11 @@\n+2007-09-05  Paolo Carlini  <pcarlini@suse.de>\n+\n+\tPR c++/30302\n+\t* semantics.c (finish_id_expression): Use context_for_name_lookup\n+\tinsted of DECL_CONTEXT,\tto see through anonymous structs and unions.\n+\t* class.c (finish_struct_anon): Deal correctly with anonymous\n+\tstructs (vs unions, as GNU extension) in error messages.\n+\n 2007-09-05  Jan Hubicka  <jh@suse.cz>\n \n \t* cp/sematics.c (expand_body): Remove unnecesary import_export_decl"}, {"sha": "9e0502fd1fb27b4e2d4a5ce63d87d2fcae337da0", "filename": "gcc/cp/class.c", "status": "modified", "additions": 19, "deletions": 4, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61fdc9d7460cf58d002cb91b5a3141dea69d9f48/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61fdc9d7460cf58d002cb91b5a3141dea69d9f48/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=61fdc9d7460cf58d002cb91b5a3141dea69d9f48", "patch": "@@ -2458,6 +2458,7 @@ finish_struct_anon (tree t)\n       if (DECL_NAME (field) == NULL_TREE\n \t  && ANON_AGGR_TYPE_P (TREE_TYPE (field)))\n \t{\n+\t  bool is_union = TREE_CODE (TREE_TYPE (field)) == UNION_TYPE;\n \t  tree elt = TYPE_FIELDS (TREE_TYPE (field));\n \t  for (; elt; elt = TREE_CHAIN (elt))\n \t    {\n@@ -2475,15 +2476,29 @@ finish_struct_anon (tree t)\n \n \t      if (TREE_CODE (elt) != FIELD_DECL)\n \t\t{\n-\t\t  pedwarn (\"%q+#D invalid; an anonymous union can \"\n-\t\t\t   \"only have non-static data members\", elt);\n+\t\t  if (is_union)\n+\t\t    pedwarn (\"%q+#D invalid; an anonymous union can \"\n+\t\t\t     \"only have non-static data members\", elt);\n+\t\t  else\n+\t\t    pedwarn (\"%q+#D invalid; an anonymous struct can \"\n+\t\t\t     \"only have non-static data members\", elt);\n \t\t  continue;\n \t\t}\n \n \t      if (TREE_PRIVATE (elt))\n-\t\tpedwarn (\"private member %q+#D in anonymous union\", elt);\n+\t\t{\n+\t\t  if (is_union)\n+\t\t    pedwarn (\"private member %q+#D in anonymous union\", elt);\n+\t\t  else\n+\t\t    pedwarn (\"private member %q+#D in anonymous struct\", elt);\n+\t\t}\n \t      else if (TREE_PROTECTED (elt))\n-\t\tpedwarn (\"protected member %q+#D in anonymous union\", elt);\n+\t\t{\n+\t\t  if (is_union)\n+\t\t    pedwarn (\"protected member %q+#D in anonymous union\", elt);\n+\t\t  else\n+\t\t    pedwarn (\"protected member %q+#D in anonymous struct\", elt);\n+\t\t}\n \n \t      TREE_PRIVATE (elt) = TREE_PRIVATE (field);\n \t      TREE_PROTECTED (elt) = TREE_PROTECTED (field);"}, {"sha": "46789f73565880dd12c5c74a3001eb29d86d4c01", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61fdc9d7460cf58d002cb91b5a3141dea69d9f48/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61fdc9d7460cf58d002cb91b5a3141dea69d9f48/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=61fdc9d7460cf58d002cb91b5a3141dea69d9f48", "patch": "@@ -2928,7 +2928,7 @@ finish_id_expression (tree id_expression,\n \t{\n \t  if (DECL_P (decl) && DECL_NONLOCAL (decl)\n \t      && DECL_CLASS_SCOPE_P (decl)\n-\t      && DECL_CONTEXT (decl) != current_class_type)\n+\t      && context_for_name_lookup (decl) != current_class_type)\n \t    {\n \t      tree path;\n "}, {"sha": "242a36365f45d517e755d9609270c7598f12ee04", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61fdc9d7460cf58d002cb91b5a3141dea69d9f48/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61fdc9d7460cf58d002cb91b5a3141dea69d9f48/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=61fdc9d7460cf58d002cb91b5a3141dea69d9f48", "patch": "@@ -1,3 +1,8 @@\n+2007-09-05  Paolo Carlini  <pcarlini@suse.de>\n+\n+\tPR c++/30302\n+\t* g++.dg/ext/anon-struct5.C: New.\n+\n 2007-09-05  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* gcc.dg/i386-cpuid.h: Remove."}, {"sha": "8b697ccbca7964903f2bff3fb3dead5ca1820077", "filename": "gcc/testsuite/g++.dg/ext/anon-struct5.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61fdc9d7460cf58d002cb91b5a3141dea69d9f48/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fanon-struct5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61fdc9d7460cf58d002cb91b5a3141dea69d9f48/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fanon-struct5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fanon-struct5.C?ref=61fdc9d7460cf58d002cb91b5a3141dea69d9f48", "patch": "@@ -0,0 +1,13 @@\n+// PR c++/30302\n+\n+struct A\n+{\n+  struct { static int i; }; // { dg-error \"prohibits anonymous structs|an anonymous struct\" }\n+  void foo() { i; }\n+};\n+\n+struct B\n+{\n+  union { static int i; }; // { dg-error \"an anonymous union|member of a union\" }\n+  void foo() { i; }\n+};"}]}