{"sha": "08d7ff78b3dc364d12c448521a25bc55f93e8684", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDhkN2ZmNzhiM2RjMzY0ZDEyYzQ0ODUyMWEyNWJjNTVmOTNlODY4NA==", "commit": {"author": {"name": "Georg-Johann Lay", "email": "avr@gjlay.de", "date": "2019-12-05T09:47:35Z"}, "committer": {"name": "Georg-Johann Lay", "email": "gjl@gcc.gnu.org", "date": "2019-12-05T09:47:35Z"}, "message": "re PR target/92055 ([avr] Support 64-bit double)\n\n\tPR target/92055\n\t* config/avr/t-avrlibc (MULTISUBDIR): Search for double, not double64.\n\nFrom-SVN: r278992", "tree": {"sha": "5bf260d3f1bc350595d3b5f349bb2c60e47b1544", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5bf260d3f1bc350595d3b5f349bb2c60e47b1544"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/08d7ff78b3dc364d12c448521a25bc55f93e8684", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08d7ff78b3dc364d12c448521a25bc55f93e8684", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08d7ff78b3dc364d12c448521a25bc55f93e8684", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08d7ff78b3dc364d12c448521a25bc55f93e8684/comments", "author": null, "committer": {"login": "sprintersb", "id": 8905355, "node_id": "MDQ6VXNlcjg5MDUzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/8905355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sprintersb", "html_url": "https://github.com/sprintersb", "followers_url": "https://api.github.com/users/sprintersb/followers", "following_url": "https://api.github.com/users/sprintersb/following{/other_user}", "gists_url": "https://api.github.com/users/sprintersb/gists{/gist_id}", "starred_url": "https://api.github.com/users/sprintersb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sprintersb/subscriptions", "organizations_url": "https://api.github.com/users/sprintersb/orgs", "repos_url": "https://api.github.com/users/sprintersb/repos", "events_url": "https://api.github.com/users/sprintersb/events{/privacy}", "received_events_url": "https://api.github.com/users/sprintersb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a3408fa3fbf20455eb3b17b5c78397f9d66065c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3408fa3fbf20455eb3b17b5c78397f9d66065c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a3408fa3fbf20455eb3b17b5c78397f9d66065c7"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "78aefe8b437475417c96bd1f91d7565f12cb87f6", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08d7ff78b3dc364d12c448521a25bc55f93e8684/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08d7ff78b3dc364d12c448521a25bc55f93e8684/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=08d7ff78b3dc364d12c448521a25bc55f93e8684", "patch": "@@ -1,3 +1,8 @@\n+2019-12-05  Georg-Johann Lay  <avr@gjlay.de>\n+\n+\tPR target/92055\n+\t* config/avr/t-avrlibc (MULTISUBDIR): Search for double, not double64.\n+\n 2019-11-18  Szabolcs Nagy  <szabolcs.nagy@arm.com>\n \n \tPR libgcc/91737"}, {"sha": "34eca4f64eeaad6550e0d531dad963b9b844402e", "filename": "libgcc/config/avr/t-avrlibc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08d7ff78b3dc364d12c448521a25bc55f93e8684/libgcc%2Fconfig%2Favr%2Ft-avrlibc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08d7ff78b3dc364d12c448521a25bc55f93e8684/libgcc%2Fconfig%2Favr%2Ft-avrlibc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Favr%2Ft-avrlibc?ref=08d7ff78b3dc364d12c448521a25bc55f93e8684", "patch": "@@ -71,9 +71,9 @@ ifneq (,$(findstring avr,$(MULTISUBDIR)))\n # In default dir, copying won'twork because the default multilib is\n # built after all the others.\n \n-ifneq (,$(findstring double64,$(MULTISUBDIR)))\n+ifneq (,$(findstring double,$(MULTISUBDIR)))\n \n-# We are in double64/libgcc or long-double64/libgcc:\n+# We are in double{32|64}/libgcc or long-double{32|64}/libgcc:\n # Just copy from the [long ]double=float multilib; we would remove any DFmode\n # bits from this multilib variant, anyway, because the current assumption\n # is that avr-libc hosts *all* the IEEE-double stuff."}]}