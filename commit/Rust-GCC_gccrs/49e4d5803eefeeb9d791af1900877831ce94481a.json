{"sha": "49e4d5803eefeeb9d791af1900877831ce94481a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDllNGQ1ODAzZWVmZWViOWQ3OTFhZjE5MDA4Nzc4MzFjZTk0NDgxYQ==", "commit": {"author": {"name": "Tobias Schl\u00fcter", "email": "tobias.schlueter@physik.uni-muenchen.de", "date": "2004-12-11T11:06:31Z"}, "committer": {"name": "Tobias Schl\u00fcter", "email": "tobi@gcc.gnu.org", "date": "2004-12-11T11:06:31Z"}, "message": "re PR fortran/17175 (set_exponent breaks with integer*8 exponent)\n\nfortran/\nPR fortran/17175\n* iresolve.c (gfc_resolve_scale): Convert 'I' argument if not of\nsame kind as C's 'int'.\n(gfc_resolve_set_eponent): Convert 'I' argument if not of kind 4.\n\ntestsuite/\nPR fortran/17175\n* gfortran.dg/scale_1.f90: New test.\n\nFrom-SVN: r92029", "tree": {"sha": "06e507cae1c1f5c6549e5c76d66fd6602bf4dc1e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/06e507cae1c1f5c6549e5c76d66fd6602bf4dc1e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/49e4d5803eefeeb9d791af1900877831ce94481a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49e4d5803eefeeb9d791af1900877831ce94481a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/49e4d5803eefeeb9d791af1900877831ce94481a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49e4d5803eefeeb9d791af1900877831ce94481a/comments", "author": {"login": "TobiSchluter", "id": 11887541, "node_id": "MDQ6VXNlcjExODg3NTQx", "avatar_url": "https://avatars.githubusercontent.com/u/11887541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TobiSchluter", "html_url": "https://github.com/TobiSchluter", "followers_url": "https://api.github.com/users/TobiSchluter/followers", "following_url": "https://api.github.com/users/TobiSchluter/following{/other_user}", "gists_url": "https://api.github.com/users/TobiSchluter/gists{/gist_id}", "starred_url": "https://api.github.com/users/TobiSchluter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TobiSchluter/subscriptions", "organizations_url": "https://api.github.com/users/TobiSchluter/orgs", "repos_url": "https://api.github.com/users/TobiSchluter/repos", "events_url": "https://api.github.com/users/TobiSchluter/events{/privacy}", "received_events_url": "https://api.github.com/users/TobiSchluter/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TobiSchluter", "id": 11887541, "node_id": "MDQ6VXNlcjExODg3NTQx", "avatar_url": "https://avatars.githubusercontent.com/u/11887541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TobiSchluter", "html_url": "https://github.com/TobiSchluter", "followers_url": "https://api.github.com/users/TobiSchluter/followers", "following_url": "https://api.github.com/users/TobiSchluter/following{/other_user}", "gists_url": "https://api.github.com/users/TobiSchluter/gists{/gist_id}", "starred_url": "https://api.github.com/users/TobiSchluter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TobiSchluter/subscriptions", "organizations_url": "https://api.github.com/users/TobiSchluter/orgs", "repos_url": "https://api.github.com/users/TobiSchluter/repos", "events_url": "https://api.github.com/users/TobiSchluter/events{/privacy}", "received_events_url": "https://api.github.com/users/TobiSchluter/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b990f4bcb845926f6723af08e660170906b443f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b990f4bcb845926f6723af08e660170906b443f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b990f4bcb845926f6723af08e660170906b443f3"}], "stats": {"total": 83, "additions": 77, "deletions": 6}, "files": [{"sha": "8fbd01a0859b6bea8a88ec1960daae0e42de8a38", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49e4d5803eefeeb9d791af1900877831ce94481a/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49e4d5803eefeeb9d791af1900877831ce94481a/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=49e4d5803eefeeb9d791af1900877831ce94481a", "patch": "@@ -1,3 +1,10 @@\n+2004-12-10  Tobias Schlueter  <tobias.schlueter@physik.uni-muenchen.de>\n+\n+\tPR fortran/17175\n+\t* iresolve.c (gfc_resolve_scale): Convert 'I' argument if not of\n+\tsame kind as C's 'int'.\n+\t(gfc_resolve_set_eponent): Convert 'I' argument if not of kind 4.\n+\n 2004-12-08  Richard Henderson  <rth@redhat.com>\n \n \t* intrinsic.c (gfc_convert_type_warn): Propagate the input shape"}, {"sha": "7a4602872f1b8df408127e8def3e465b3720b558", "filename": "gcc/fortran/iresolve.c", "status": "modified", "additions": 30, "deletions": 6, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49e4d5803eefeeb9d791af1900877831ce94481a/gcc%2Ffortran%2Firesolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49e4d5803eefeeb9d791af1900877831ce94481a/gcc%2Ffortran%2Firesolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Firesolve.c?ref=49e4d5803eefeeb9d791af1900877831ce94481a", "patch": "@@ -1196,13 +1196,24 @@ gfc_resolve_rrspacing (gfc_expr * f, gfc_expr * x)\n \n \n void\n-gfc_resolve_scale (gfc_expr * f, gfc_expr * x,\n-\t\t   gfc_expr * y ATTRIBUTE_UNUSED)\n+gfc_resolve_scale (gfc_expr * f, gfc_expr * x, gfc_expr * i)\n {\n \n   f->ts = x->ts;\n-  f->value.function.name = gfc_get_string (\"__scale_%d_%d\", x->ts.kind,\n-\t\t\t\t\t   x->ts.kind);\n+\n+  /* The implementation calls scalbn which takes an int as the\n+     second argument.  */\n+  if (i->ts.kind != gfc_c_int_kind)\n+    {\n+      gfc_typespec ts;\n+\n+      ts.type = BT_INTEGER;\n+      ts.kind = gfc_default_integer_kind;\n+\n+      gfc_convert_type_warn (i, &ts, 2, 0);\n+    }\n+\n+  f->value.function.name = gfc_get_string (\"__scale_%d\", x->ts.kind);\n }\n \n \n@@ -1223,8 +1234,21 @@ gfc_resolve_set_exponent (gfc_expr * f, gfc_expr * x, gfc_expr * i)\n {\n \n   f->ts = x->ts;\n-  f->value.function.name =\n-    gfc_get_string (\"__set_exponent_%d_%d\", x->ts.kind, i->ts.kind);\n+\n+  /* The library implementation uses GFC_INTEGER_4 unconditionally,\n+     convert type so we don't have to implment all possible\n+     permutations.  */\n+  if (i->ts.kind != 4)\n+    {\n+      gfc_typespec ts;\n+\n+      ts.type = BT_INTEGER;\n+      ts.kind = gfc_default_integer_kind;\n+\n+      gfc_convert_type_warn (i, &ts, 2, 0);\n+    }\n+\n+  f->value.function.name = gfc_get_string (\"__set_exponent_%d\", x->ts.kind);\n }\n \n "}, {"sha": "5fb65ed0111ac88e266d7279cc9f0dea6ef1334a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49e4d5803eefeeb9d791af1900877831ce94481a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49e4d5803eefeeb9d791af1900877831ce94481a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=49e4d5803eefeeb9d791af1900877831ce94481a", "patch": "@@ -1,3 +1,8 @@\n+2004-12-11  Tobias Schlueter  <tobias.schlueter@physik.uni-muenchen.de>\n+\n+\tPR fortran/17175\n+\t* gfortran.dg/scale_1.f90: New test.\n+\n 2004-12-10  Andrew Pinski  <pinskia@physics.uc.edu>\n \n \tPR middle-end/18903"}, {"sha": "498c858e9ceee1a7645369fdcc1f66dbcf363bc9", "filename": "gcc/testsuite/gfortran.dg/scale_1.f90", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49e4d5803eefeeb9d791af1900877831ce94481a/gcc%2Ftestsuite%2Fgfortran.dg%2Fscale_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49e4d5803eefeeb9d791af1900877831ce94481a/gcc%2Ftestsuite%2Fgfortran.dg%2Fscale_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fscale_1.f90?ref=49e4d5803eefeeb9d791af1900877831ce94481a", "patch": "@@ -0,0 +1,35 @@\n+! { dg-do run }\n+! inspired by PR17175\n+REAL X\n+DOUBLE PRECISION Y\n+\n+INTEGER, PARAMETER :: DP = KIND(Y)\n+\n+INTEGER*1 I1\n+INTEGER*2 I2\n+INTEGER*4 I4\n+INTEGER*8 I8\n+\n+X = 1.\n+Y = 1._DP\n+\n+I1 = 10\n+I2 = -10\n+I4 = 20\n+I8 = -20\n+\n+X = SCALE (X, I1)\n+X = SCALE (X, I2)\n+IF (X.NE.1.) CALL ABORT()\n+X = SCALE (X, I4)\n+X = SCALE (X, I8)\n+IF (X.NE.1.) CALL ABORT()\n+\n+Y = SCALE (Y, I1)\n+Y = SCALE (Y, I2)\n+IF (Y.NE.1._DP) CALL ABORT()\n+Y = SCALE (Y, I4)\n+Y = SCALE (Y, I8)\n+IF (Y.NE.1._DP) CALL ABORT()\n+\n+END"}]}