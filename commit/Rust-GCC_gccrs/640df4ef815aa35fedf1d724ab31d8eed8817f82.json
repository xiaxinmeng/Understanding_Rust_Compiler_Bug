{"sha": "640df4ef815aa35fedf1d724ab31d8eed8817f82", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjQwZGY0ZWY4MTVhYTM1ZmVkZjFkNzI0YWIzMWQ4ZWVkODgxN2Y4Mg==", "commit": {"author": {"name": "Jonathan Wright", "email": "jonathan.wright@arm.com", "date": "2021-08-18T08:10:22Z"}, "committer": {"name": "Jonathan Wright", "email": "jonathan.wright@arm.com", "date": "2021-08-18T15:07:38Z"}, "message": "aarch64: Fix float <-> int errors in vld4[q]_lane intrinsics\n\nA previous commit \"aarch64: Remove macros for vld4[q]_lane Neon\nintrinsics\" introduced some float <-> int type conversion errors.\nThis patch fixes those errors.\n\ngcc/ChangeLog:\n\n2021-08-18  Jonathan Wright  <jonathan.wright@arm.com>\n\n\t* config/aarch64/arm_neon.h (vld3_lane_f64): Use float RTL\n\tpattern and type cast.\n\t(vld4_lane_f32): Use float RTL pattern.\n\t(vld4q_lane_f64): Use float type cast.", "tree": {"sha": "3ff06eb61eab0911628fb5d70e66b5288fe492c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3ff06eb61eab0911628fb5d70e66b5288fe492c2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/640df4ef815aa35fedf1d724ab31d8eed8817f82", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/640df4ef815aa35fedf1d724ab31d8eed8817f82", "html_url": "https://github.com/Rust-GCC/gccrs/commit/640df4ef815aa35fedf1d724ab31d8eed8817f82", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/640df4ef815aa35fedf1d724ab31d8eed8817f82/comments", "author": {"login": "jwright-arm", "id": 31624044, "node_id": "MDQ6VXNlcjMxNjI0MDQ0", "avatar_url": "https://avatars.githubusercontent.com/u/31624044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwright-arm", "html_url": "https://github.com/jwright-arm", "followers_url": "https://api.github.com/users/jwright-arm/followers", "following_url": "https://api.github.com/users/jwright-arm/following{/other_user}", "gists_url": "https://api.github.com/users/jwright-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwright-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwright-arm/subscriptions", "organizations_url": "https://api.github.com/users/jwright-arm/orgs", "repos_url": "https://api.github.com/users/jwright-arm/repos", "events_url": "https://api.github.com/users/jwright-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/jwright-arm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwright-arm", "id": 31624044, "node_id": "MDQ6VXNlcjMxNjI0MDQ0", "avatar_url": "https://avatars.githubusercontent.com/u/31624044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwright-arm", "html_url": "https://github.com/jwright-arm", "followers_url": "https://api.github.com/users/jwright-arm/followers", "following_url": "https://api.github.com/users/jwright-arm/following{/other_user}", "gists_url": "https://api.github.com/users/jwright-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwright-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwright-arm/subscriptions", "organizations_url": "https://api.github.com/users/jwright-arm/orgs", "repos_url": "https://api.github.com/users/jwright-arm/repos", "events_url": "https://api.github.com/users/jwright-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/jwright-arm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4fb471afc4f13ead1978fcdb008b92192412e9ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4fb471afc4f13ead1978fcdb008b92192412e9ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4fb471afc4f13ead1978fcdb008b92192412e9ba"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "635a223b59eb0f64304351939d444411b697af81", "filename": "gcc/config/aarch64/arm_neon.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/640df4ef815aa35fedf1d724ab31d8eed8817f82/gcc%2Fconfig%2Faarch64%2Farm_neon.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/640df4ef815aa35fedf1d724ab31d8eed8817f82/gcc%2Fconfig%2Faarch64%2Farm_neon.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Farm_neon.h?ref=640df4ef815aa35fedf1d724ab31d8eed8817f82", "patch": "@@ -20546,8 +20546,8 @@ vld3_lane_f64 (const float64_t * __ptr, float64x1x3_t __b, const int __c)\n   __o = __builtin_aarch64_set_qregciv2df (__o, (float64x2_t) __temp.val[0], 0);\n   __o = __builtin_aarch64_set_qregciv2df (__o, (float64x2_t) __temp.val[1], 1);\n   __o = __builtin_aarch64_set_qregciv2df (__o, (float64x2_t) __temp.val[2], 2);\n-  __o =\t__builtin_aarch64_ld3_lanedi (\n-\t  (__builtin_aarch64_simd_di *) __ptr, __o, __c);\n+  __o =\t__builtin_aarch64_ld3_lanedf (\n+\t  (__builtin_aarch64_simd_df *) __ptr, __o, __c);\n   __b.val[0] = (float64x1_t) __builtin_aarch64_get_dregcidi (__o, 0);\n   __b.val[1] = (float64x1_t) __builtin_aarch64_get_dregcidi (__o, 1);\n   __b.val[2] = (float64x1_t) __builtin_aarch64_get_dregcidi (__o, 2);\n@@ -21077,7 +21077,7 @@ vld4_lane_f32 (const float32_t * __ptr, float32x2x4_t __b, const int __c)\n   __o = __builtin_aarch64_set_qregxiv4sf (__o, (float32x4_t) __temp.val[1], 1);\n   __o = __builtin_aarch64_set_qregxiv4sf (__o, (float32x4_t) __temp.val[2], 2);\n   __o = __builtin_aarch64_set_qregxiv4sf (__o, (float32x4_t) __temp.val[3], 3);\n-  __o =\t__builtin_aarch64_ld4_lanev2si (\n+  __o =\t__builtin_aarch64_ld4_lanev2sf (\n \t  (__builtin_aarch64_simd_sf *) __ptr, __o, __c);\n   __b.val[0] = (float32x2_t) __builtin_aarch64_get_dregxidi (__o, 0);\n   __b.val[1] = (float32x2_t) __builtin_aarch64_get_dregxidi (__o, 1);\n@@ -21381,7 +21381,7 @@ vld4q_lane_f64 (const float64_t * __ptr, float64x2x4_t __b, const int __c)\n   __o = __builtin_aarch64_set_qregxiv4si (__o, (int32x4_t) __b.val[2], 2);\n   __o = __builtin_aarch64_set_qregxiv4si (__o, (int32x4_t) __b.val[3], 3);\n   __o = __builtin_aarch64_ld4_lanev2df (\n-\t(__builtin_aarch64_simd_di *) __ptr, __o, __c);\n+\t(__builtin_aarch64_simd_df *) __ptr, __o, __c);\n   ret.val[0] = (float64x2_t) __builtin_aarch64_get_qregxiv4si (__o, 0);\n   ret.val[1] = (float64x2_t) __builtin_aarch64_get_qregxiv4si (__o, 1);\n   ret.val[2] = (float64x2_t) __builtin_aarch64_get_qregxiv4si (__o, 2);"}]}