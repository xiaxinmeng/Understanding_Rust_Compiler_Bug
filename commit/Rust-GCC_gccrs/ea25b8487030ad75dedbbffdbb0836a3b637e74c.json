{"sha": "ea25b8487030ad75dedbbffdbb0836a3b637e74c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWEyNWI4NDg3MDMwYWQ3NWRlZGJiZmZkYmIwODM2YTNiNjM3ZTc0Yw==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2019-05-15T15:23:11Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2019-05-15T15:23:11Z"}, "message": "i386: Emulate MMX ssse3_ph<plusminus_mnemonic>dv2si3 with SSE\n\nEmulate MMX ssse3_ph<plusminus_mnemonic>dv2si3 with SSE by moving bits\n64:95 to bits 32:63 in SSE register.  Only SSE register source operand\nis allowed.\n\n\tPR target/89021\n\t* config/i386/sse.md (ssse3_ph<plusminus_mnemonic>dv2si3):\n\tChanged to define_insn_and_split to support SSE emulation.\n\nFrom-SVN: r271242", "tree": {"sha": "1a88a668e8c0e8e40c14a6f04d9ab80bf8203313", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1a88a668e8c0e8e40c14a6f04d9ab80bf8203313"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ea25b8487030ad75dedbbffdbb0836a3b637e74c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea25b8487030ad75dedbbffdbb0836a3b637e74c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea25b8487030ad75dedbbffdbb0836a3b637e74c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea25b8487030ad75dedbbffdbb0836a3b637e74c/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2da47f31e33b13e528006be0ae2287e7f470962f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2da47f31e33b13e528006be0ae2287e7f470962f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2da47f31e33b13e528006be0ae2287e7f470962f"}], "stats": {"total": 40, "additions": 32, "deletions": 8}, "files": [{"sha": "80b83ccf35671305fccc9675af7ccafb44782c46", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea25b8487030ad75dedbbffdbb0836a3b637e74c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea25b8487030ad75dedbbffdbb0836a3b637e74c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ea25b8487030ad75dedbbffdbb0836a3b637e74c", "patch": "@@ -1,3 +1,9 @@\n+2019-05-15  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/89021\n+\t* config/i386/sse.md (ssse3_ph<plusminus_mnemonic>dv2si3):\n+\tChanged to define_insn_and_split to support SSE emulation.\n+\n 2019-05-15  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR target/89021"}, {"sha": "0a0b8a4f028c87b5c82f621716365edc10a67063", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 26, "deletions": 8, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea25b8487030ad75dedbbffdbb0836a3b637e74c/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea25b8487030ad75dedbbffdbb0836a3b637e74c/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=ea25b8487030ad75dedbbffdbb0836a3b637e74c", "patch": "@@ -15814,26 +15814,44 @@\n    (set_attr \"prefix\" \"orig,vex\")\n    (set_attr \"mode\" \"TI\")])\n \n-(define_insn \"ssse3_ph<plusminus_mnemonic>dv2si3\"\n-  [(set (match_operand:V2SI 0 \"register_operand\" \"=y\")\n+(define_insn_and_split \"ssse3_ph<plusminus_mnemonic>dv2si3\"\n+  [(set (match_operand:V2SI 0 \"register_operand\" \"=y,x,Yv\")\n \t(vec_concat:V2SI\n \t  (plusminus:SI\n \t    (vec_select:SI\n-\t      (match_operand:V2SI 1 \"register_operand\" \"0\")\n+\t      (match_operand:V2SI 1 \"register_operand\" \"0,0,Yv\")\n \t      (parallel [(const_int 0)]))\n \t    (vec_select:SI (match_dup 1) (parallel [(const_int 1)])))\n \t  (plusminus:SI\n \t    (vec_select:SI\n-\t      (match_operand:V2SI 2 \"nonimmediate_operand\" \"ym\")\n+\t      (match_operand:V2SI 2 \"register_mmxmem_operand\" \"ym,x,Yv\")\n \t      (parallel [(const_int 0)]))\n \t    (vec_select:SI (match_dup 2) (parallel [(const_int 1)])))))]\n-  \"TARGET_SSSE3\"\n-  \"ph<plusminus_mnemonic>d\\t{%2, %0|%0, %2}\"\n-  [(set_attr \"type\" \"sseiadd\")\n+  \"(TARGET_MMX || TARGET_MMX_WITH_SSE) && TARGET_SSSE3\"\n+  \"@\n+   ph<plusminus_mnemonic>d\\t{%2, %0|%0, %2}\n+   #\n+   #\"\n+  \"TARGET_MMX_WITH_SSE && reload_completed\"\n+  [(const_int 0)]\n+{\n+  /* Generate SSE version of the operation.  */\n+  rtx op0 = lowpart_subreg (V4SImode, operands[0],\n+\t\t\t    GET_MODE (operands[0]));\n+  rtx op1 = lowpart_subreg (V4SImode, operands[1],\n+\t\t\t    GET_MODE (operands[1]));\n+  rtx op2 = lowpart_subreg (V4SImode, operands[2],\n+\t\t\t    GET_MODE (operands[2]));\n+  emit_insn (gen_ssse3_ph<plusminus_mnemonic>dv4si3 (op0, op1, op2));\n+  ix86_move_vector_high_sse_to_mmx (op0);\n+  DONE;\n+}\n+  [(set_attr \"mmx_isa\" \"native,x64_noavx,x64_avx\")\n+   (set_attr \"type\" \"sseiadd\")\n    (set_attr \"atom_unit\" \"complex\")\n    (set_attr \"prefix_extra\" \"1\")\n    (set (attr \"prefix_rex\") (symbol_ref \"x86_extended_reg_mentioned_p (insn)\"))\n-   (set_attr \"mode\" \"DI\")])\n+   (set_attr \"mode\" \"DI,TI,TI\")])\n \n (define_insn \"avx2_pmaddubsw256\"\n   [(set (match_operand:V16HI 0 \"register_operand\" \"=x,v\")"}]}