{"sha": "a01be1aeb2df00d1af7dfca6f3355db1a12a25c8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTAxYmUxYWViMmRmMDBkMWFmN2RmY2E2ZjMzNTVkYjFhMTJhMjVjOA==", "commit": {"author": {"name": "Ian Bolton", "email": "ian.bolton@arm.com", "date": "2014-04-22T09:59:50Z"}, "committer": {"name": "Ian Bolton", "email": "ibolton@gcc.gnu.org", "date": "2014-04-22T09:59:50Z"}, "message": "Optimise NotDI AND/OR ZeroExtendSI for ARMv7A\n\n[gcc]\n\t* config/arm/arm.md (*anddi_notdi_zesidi): New pattern.\n\t* config/arm/thumb2.md (*iordi_notdi_zesidi): New pattern.\n\n[gcc/testsuite]\n\t* gcc.target/arm/anddi_notdi-1.c: New test.\n\t* gcc.target/arm/iordi_notdi-1.c: New test case.\n\nFrom-SVN: r209614", "tree": {"sha": "21bdb517627beddeb475418cdbbe7f824b7b35cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/21bdb517627beddeb475418cdbbe7f824b7b35cd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a01be1aeb2df00d1af7dfca6f3355db1a12a25c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a01be1aeb2df00d1af7dfca6f3355db1a12a25c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a01be1aeb2df00d1af7dfca6f3355db1a12a25c8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a01be1aeb2df00d1af7dfca6f3355db1a12a25c8/comments", "author": null, "committer": null, "parents": [{"sha": "80d3417b69d86224e46c15a3ee0692de0bc2195f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80d3417b69d86224e46c15a3ee0692de0bc2195f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/80d3417b69d86224e46c15a3ee0692de0bc2195f"}], "stats": {"total": 146, "additions": 139, "deletions": 7}, "files": [{"sha": "e640faf2210526761b6f7680cccef32415c63fd1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a01be1aeb2df00d1af7dfca6f3355db1a12a25c8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a01be1aeb2df00d1af7dfca6f3355db1a12a25c8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a01be1aeb2df00d1af7dfca6f3355db1a12a25c8", "patch": "@@ -1,3 +1,8 @@\n+2014-04-22  Ian Bolton  <ian.bolton@arm.com>\n+\n+\t* config/arm/arm.md (*anddi_notdi_zesidi): New pattern.\n+\t* config/arm/thumb2.md (*iordi_notdi_zesidi): New pattern.\n+\n 2014-04-22  Ian Bolton  <ian.bolton@arm.com>\n \n \t* config/arm/thumb2.md (*iordi_notdi_di): New pattern."}, {"sha": "9aa0d352bbdafc887116fe978558bc69cee450c2", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a01be1aeb2df00d1af7dfca6f3355db1a12a25c8/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a01be1aeb2df00d1af7dfca6f3355db1a12a25c8/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=a01be1aeb2df00d1af7dfca6f3355db1a12a25c8", "patch": "@@ -2863,6 +2863,28 @@\n    (set_attr \"type\" \"multiple\")]\n )\n \n+(define_insn_and_split \"*anddi_notdi_zesidi\"\n+  [(set (match_operand:DI 0 \"s_register_operand\" \"=r\")\n+        (and:DI (not:DI (match_operand:DI 2 \"s_register_operand\" \"r\"))\n+                (zero_extend:DI\n+                 (match_operand:SI 1 \"s_register_operand\" \"r\"))))]\n+  \"TARGET_32BIT\"\n+  \"#\"\n+  \"TARGET_32BIT && reload_completed\"\n+  [(set (match_dup 0) (and:SI (not:SI (match_dup 2)) (match_dup 1)))\n+   (set (match_dup 3) (const_int 0))]\n+  \"\n+  {\n+    operands[3] = gen_highpart (SImode, operands[0]);\n+    operands[0] = gen_lowpart (SImode, operands[0]);\n+    operands[2] = gen_lowpart (SImode, operands[2]);\n+  }\"\n+  [(set_attr \"length\" \"8\")\n+   (set_attr \"predicable\" \"yes\")\n+   (set_attr \"predicable_short_it\" \"no\")\n+   (set_attr \"type\" \"multiple\")]\n+)\n+\n (define_insn_and_split \"*anddi_notsesidi_di\"\n   [(set (match_operand:DI 0 \"s_register_operand\" \"=&r,&r\")\n \t(and:DI (not:DI (sign_extend:DI"}, {"sha": "10bc8b1c53024b5dacf1fef3731be96ec0804a65", "filename": "gcc/config/arm/thumb2.md", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a01be1aeb2df00d1af7dfca6f3355db1a12a25c8/gcc%2Fconfig%2Farm%2Fthumb2.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a01be1aeb2df00d1af7dfca6f3355db1a12a25c8/gcc%2Fconfig%2Farm%2Fthumb2.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fthumb2.md?ref=a01be1aeb2df00d1af7dfca6f3355db1a12a25c8", "patch": "@@ -1418,6 +1418,30 @@\n    (set_attr \"type\" \"multiple\")]\n )\n \n+(define_insn_and_split \"*iordi_notdi_zesidi\"\n+  [(set (match_operand:DI 0 \"s_register_operand\" \"=&r,&r\")\n+\t(ior:DI (not:DI (match_operand:DI 2 \"s_register_operand\" \"0,?r\"))\n+\t\t(zero_extend:DI\n+\t\t (match_operand:SI 1 \"s_register_operand\" \"r,r\"))))]\n+  \"TARGET_THUMB2\"\n+  \"#\"\n+  \"TARGET_THUMB2 && reload_completed\"\n+  [(set (match_dup 0) (ior:SI (not:SI (match_dup 2)) (match_dup 1)))\n+   (set (match_dup 3) (not:SI (match_dup 4)))]\n+  \"\n+  {\n+    operands[3] = gen_highpart (SImode, operands[0]);\n+    operands[0] = gen_lowpart (SImode, operands[0]);\n+    operands[1] = gen_lowpart (SImode, operands[1]);\n+    operands[4] = gen_highpart (SImode, operands[2]);\n+    operands[2] = gen_lowpart (SImode, operands[2]);\n+  }\"\n+  [(set_attr \"length\" \"8\")\n+   (set_attr \"predicable\" \"yes\")\n+   (set_attr \"predicable_short_it\" \"no\")\n+   (set_attr \"type\" \"multiple\")]\n+)\n+\n (define_insn_and_split \"*iordi_notsesidi_di\"\n   [(set (match_operand:DI 0 \"s_register_operand\" \"=&r,&r\")\n \t(ior:DI (not:DI (sign_extend:DI"}, {"sha": "20978b1d8f3d0183ab3145f519d0241e37d0c63a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a01be1aeb2df00d1af7dfca6f3355db1a12a25c8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a01be1aeb2df00d1af7dfca6f3355db1a12a25c8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a01be1aeb2df00d1af7dfca6f3355db1a12a25c8", "patch": "@@ -1,3 +1,8 @@\n+2014-04-22  Ian Bolton  <ian.bolton@arm.com>\n+\n+\t* gcc.target/arm/anddi_notdi-1.c: New test.\n+\t* gcc.target/arm/iordi_notdi-1.c: New test case.\n+\n 2014-04-22  Ian Bolton  <ian.bolton@arm.com>\n \n \t* gcc.target/arm/iordi_notdi-1.c: New test."}, {"sha": "cfb33fcdc6fc38a48ca1ea9dca19bede70e8cdab", "filename": "gcc/testsuite/gcc.target/arm/anddi_notdi-1.c", "status": "added", "additions": 65, "deletions": 0, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a01be1aeb2df00d1af7dfca6f3355db1a12a25c8/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fanddi_notdi-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a01be1aeb2df00d1af7dfca6f3355db1a12a25c8/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fanddi_notdi-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fanddi_notdi-1.c?ref=a01be1aeb2df00d1af7dfca6f3355db1a12a25c8", "patch": "@@ -0,0 +1,65 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O2 -fno-inline --save-temps\" } */\n+\n+extern void abort (void);\n+\n+typedef long long s64int;\n+typedef int s32int;\n+typedef unsigned long long u64int;\n+typedef unsigned int u32int;\n+\n+s64int\n+anddi_di_notdi (s64int a, s64int b)\n+{\n+  return (a & ~b);\n+}\n+\n+s64int\n+anddi_di_notzesidi (s64int a, u32int b)\n+{\n+  return (a & ~(u64int) b);\n+}\n+\n+s64int\n+anddi_notdi_zesidi (s64int a, u32int b)\n+{\n+  return (~a & (u64int) b);\n+}\n+\n+s64int\n+anddi_di_notsesidi (s64int a, s32int b)\n+{\n+  return (a & ~(s64int) b);\n+}\n+\n+int main ()\n+{\n+  s64int a64 = 0xdeadbeef0000ffffll;\n+  s64int b64 = 0x000000005f470112ll;\n+  s64int c64 = 0xdeadbeef300f0000ll;\n+\n+  u32int c32 = 0x01124f4f;\n+  s32int d32 = 0xabbaface;\n+\n+  s64int z = anddi_di_notdi (c64, b64);\n+  if (z != 0xdeadbeef20080000ll)\n+    abort ();\n+\n+  z = anddi_di_notzesidi (a64, c32);\n+  if (z != 0xdeadbeef0000b0b0ll)\n+    abort ();\n+\n+  z = anddi_notdi_zesidi (c64, c32);\n+  if (z != 0x0000000001104f4fll)\n+    abort ();\n+\n+  z = anddi_di_notsesidi (a64, d32);\n+  if (z != 0x0000000000000531ll)\n+    abort ();\n+\n+  return 0;\n+}\n+\n+/* { dg-final { scan-assembler-times \"bic\\t\" 6 } } */\n+\n+/* { dg-final { cleanup-saved-temps } } */"}, {"sha": "249f0806ab25b552e2dbf3cd338a7d96799827ea", "filename": "gcc/testsuite/gcc.target/arm/iordi_notdi-1.c", "status": "modified", "additions": 18, "deletions": 7, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a01be1aeb2df00d1af7dfca6f3355db1a12a25c8/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fiordi_notdi-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a01be1aeb2df00d1af7dfca6f3355db1a12a25c8/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fiordi_notdi-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fiordi_notdi-1.c?ref=a01be1aeb2df00d1af7dfca6f3355db1a12a25c8", "patch": "@@ -9,19 +9,25 @@ typedef unsigned long long u64int;\n typedef unsigned int u32int;\n \n s64int\n-iordi_notdi (s64int a, s64int b)\n+iordi_di_notdi (s64int a, s64int b)\n {\n   return (a | ~b);\n }\n \n s64int\n-iordi_notzesidi (s64int a, u32int b)\n+iordi_di_notzesidi (s64int a, u32int b)\n {\n   return (a | ~(u64int) b);\n }\n \n s64int\n-iordi_notsesidi (s64int a, s32int b)\n+iordi_notdi_zesidi (s64int a, u32int b)\n+{\n+  return (~a | (u64int) b);\n+}\n+\n+s64int\n+iordi_di_notsesidi (s64int a, s32int b)\n {\n   return (a | ~(s64int) b);\n }\n@@ -30,25 +36,30 @@ int main ()\n {\n   s64int a64 = 0xdeadbeef00000000ll;\n   s64int b64 = 0x000000004f4f0112ll;\n+  s64int c64 = 0xdeadbeef000f0000ll;\n \n   u32int c32 = 0x01124f4f;\n   s32int d32 = 0xabbaface;\n \n-  s64int z = iordi_notdi (a64, b64);\n+  s64int z = iordi_di_notdi (a64, b64);\n   if (z != 0xffffffffb0b0feedll)\n     abort ();\n \n-  z = iordi_notzesidi (a64, c32);\n+  z = iordi_di_notzesidi (a64, c32);\n   if (z != 0xfffffffffeedb0b0ll)\n     abort ();\n \n-  z = iordi_notsesidi (a64, d32);\n+  z = iordi_notdi_zesidi (c64, c32);\n+  if (z != 0x21524110fff2ffffll)\n+    abort ();\n+\n+  z = iordi_di_notsesidi (a64, d32);\n   if (z != 0xdeadbeef54450531ll)\n     abort ();\n \n   return 0;\n }\n \n-/* { dg-final { scan-assembler-times \"orn\\t\" 5 { target arm_thumb2 } } } */\n+/* { dg-final { scan-assembler-times \"orn\\t\" 6 { target arm_thumb2 } } } */\n \n /* { dg-final { cleanup-saved-temps } } */"}]}