{"sha": "5d99894e654b30324d5ab24069159ff9bc853c6a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWQ5OTg5NGU2NTRiMzAzMjRkNWFiMjQwNjkxNTlmZjliYzg1M2M2YQ==", "commit": {"author": {"name": "Andrew Pinski", "email": "apinski@cavium.com", "date": "2012-11-28T22:11:29Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2012-11-28T22:11:29Z"}, "message": "re PR other/54279 (first stage build with g++ fails with \".\" as the first component of $PATH)\n\n2012-11-28  Andrew Pinski  <apinski@cavium.com>\n\n        PR bootstrap/54279\n        * configure.ac (CXX_FOR_TARGET): Change over to use xg++.\n        * configure: Regenerate.\n        * Makefile.tpl (POSTSTAGE1_CXX_EXPORT): Change over to use xg++.\n        * Makefile.in: Regenerate.\n\n2012-11-28  Andrew Pinski  <apinski@cavium.com>\n\n        PR bootstrap/54279\n        * Makefile.in (${QMTEST_DIR}/context): Use xg++ instead of g++.\n\n2012-11-28  Andrew Pinski  <apinski@cavium.com>\n\n        PR bootstrap/54279\n        * Make-lang.in (g++$(exeext)): Rename to\n        (xg++$(exeext)): This.\n        (g++-cross$(exeext)): Use xg++$(exeext) instead of g++$(exeext).\n        (c++.start.encap): Likewise.\n        (c++.install-common): Likewise.\n\n2012-11-28  Andrew Pinski  <apinski@cavium.com>\n\n        PR bootstrap/54279\n        * lib/g++.exp (g++_init): Search for xg++ instead of g++ in the build\n        directories.\n        * lib/obj-c++.exp (obj-c++_init): Likewise.\n\n2012-11-28  Andrew Pinski  <apinski@cavium.com>\n\n        PR bootstrap/54279\n        * scripts/testsuite_flags.in (--build-cxx): Use xg++ instead of g++.\n        * testsuite/lib/libstdc++.exp (libstdc++_init): Likewise.\n\nFrom-SVN: r193910", "tree": {"sha": "b32cda18663a391f599731c3c470dccee3621a93", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b32cda18663a391f599731c3c470dccee3621a93"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5d99894e654b30324d5ab24069159ff9bc853c6a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d99894e654b30324d5ab24069159ff9bc853c6a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d99894e654b30324d5ab24069159ff9bc853c6a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d99894e654b30324d5ab24069159ff9bc853c6a/comments", "author": {"login": "apinski-cavium", "id": 6335315, "node_id": "MDQ6VXNlcjYzMzUzMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/6335315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apinski-cavium", "html_url": "https://github.com/apinski-cavium", "followers_url": "https://api.github.com/users/apinski-cavium/followers", "following_url": "https://api.github.com/users/apinski-cavium/following{/other_user}", "gists_url": "https://api.github.com/users/apinski-cavium/gists{/gist_id}", "starred_url": "https://api.github.com/users/apinski-cavium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apinski-cavium/subscriptions", "organizations_url": "https://api.github.com/users/apinski-cavium/orgs", "repos_url": "https://api.github.com/users/apinski-cavium/repos", "events_url": "https://api.github.com/users/apinski-cavium/events{/privacy}", "received_events_url": "https://api.github.com/users/apinski-cavium/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "373b9e782b20f12f8d62a258b68e25f9e249124a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/373b9e782b20f12f8d62a258b68e25f9e249124a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/373b9e782b20f12f8d62a258b68e25f9e249124a"}], "stats": {"total": 63, "additions": 49, "deletions": 14}, "files": [{"sha": "aba7edfc3018ffd466f48d51138b68c1e52bdf89", "filename": "ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d99894e654b30324d5ab24069159ff9bc853c6a/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d99894e654b30324d5ab24069159ff9bc853c6a/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=5d99894e654b30324d5ab24069159ff9bc853c6a", "patch": "@@ -1,3 +1,11 @@\n+2012-11-28  Andrew Pinski  <apinski@cavium.com>\n+\n+\tPR bootstrap/54279\n+\t* configure.ac (CXX_FOR_TARGET): Change over to use xg++.\n+\t* configure: Regenerate.\n+\t* Makefile.tpl (POSTSTAGE1_CXX_EXPORT): Change over to use xg++.\n+\t* Makefile.in: Regenerate.\n+\n 2012-11-27  Siddhesh Poyarekar  <siddhesh@redhat.com>\n \n \t* configure.ac: Disable libsanitizer if we're not building C++."}, {"sha": "48202537f074c16aa5e5b52106ec76f1e04d71fb", "filename": "Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d99894e654b30324d5ab24069159ff9bc853c6a/Makefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d99894e654b30324d5ab24069159ff9bc853c6a/Makefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.in?ref=5d99894e654b30324d5ab24069159ff9bc853c6a", "patch": "@@ -235,7 +235,7 @@ POSTSTAGE1_CXX_EXPORT = \\\n @if target-libstdc++-v3-bootstrap\n # Override the above if we're bootstrapping C++.\n POSTSTAGE1_CXX_EXPORT = \\\n-\tCXX=\"$(STAGE_CC_WRAPPER) $$r/$(HOST_SUBDIR)/prev-gcc/g++$(exeext) \\\n+\tCXX=\"$(STAGE_CC_WRAPPER) $$r/$(HOST_SUBDIR)/prev-gcc/xg++$(exeext) \\\n \t  -B$$r/$(HOST_SUBDIR)/prev-gcc/ -B$(build_tooldir)/bin/ -nostdinc++ \\\n \t  -B$$r/prev-$(TARGET_SUBDIR)/libstdc++-v3/src/.libs \\\n \t  -B$$r/prev-$(TARGET_SUBDIR)/libstdc++-v3/libsupc++/.libs \\"}, {"sha": "5cdc119d9b1e3b62e264058ffa94c44eba2a6571", "filename": "Makefile.tpl", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d99894e654b30324d5ab24069159ff9bc853c6a/Makefile.tpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d99894e654b30324d5ab24069159ff9bc853c6a/Makefile.tpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.tpl?ref=5d99894e654b30324d5ab24069159ff9bc853c6a", "patch": "@@ -238,7 +238,7 @@ POSTSTAGE1_CXX_EXPORT = \\\n @if target-libstdc++-v3-bootstrap\n # Override the above if we're bootstrapping C++.\n POSTSTAGE1_CXX_EXPORT = \\\n-\tCXX=\"$(STAGE_CC_WRAPPER) $$r/$(HOST_SUBDIR)/prev-gcc/g++$(exeext) \\\n+\tCXX=\"$(STAGE_CC_WRAPPER) $$r/$(HOST_SUBDIR)/prev-gcc/xg++$(exeext) \\\n \t  -B$$r/$(HOST_SUBDIR)/prev-gcc/ -B$(build_tooldir)/bin/ -nostdinc++ \\\n \t  -B$$r/prev-$(TARGET_SUBDIR)/libstdc++-v3/src/.libs \\\n \t  -B$$r/prev-$(TARGET_SUBDIR)/libstdc++-v3/libsupc++/.libs \\"}, {"sha": "b58860ff3b29f82ecc5ddd64d4aa9ae97c573bf9", "filename": "configure", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d99894e654b30324d5ab24069159ff9bc853c6a/configure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d99894e654b30324d5ab24069159ff9bc853c6a/configure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure?ref=5d99894e654b30324d5ab24069159ff9bc853c6a", "patch": "@@ -13628,7 +13628,7 @@ else\n   esac\n   if test $ok = yes; then\n     # An in-tree tool is available and we can use it\n-    CXX_FOR_TARGET='$$r/$(HOST_SUBDIR)/gcc/g++ -B$$r/$(HOST_SUBDIR)/gcc/ -nostdinc++ `if test -f $$r/$(TARGET_SUBDIR)/libstdc++-v3/scripts/testsuite_flags; then $(SHELL) $$r/$(TARGET_SUBDIR)/libstdc++-v3/scripts/testsuite_flags --build-includes; else echo -funconfigured-libstdc++-v3 ; fi` -L$$r/$(TARGET_SUBDIR)/libstdc++-v3/src -L$$r/$(TARGET_SUBDIR)/libstdc++-v3/src/.libs'\n+    CXX_FOR_TARGET='$$r/$(HOST_SUBDIR)/gcc/xg++ -B$$r/$(HOST_SUBDIR)/gcc/ -nostdinc++ `if test -f $$r/$(TARGET_SUBDIR)/libstdc++-v3/scripts/testsuite_flags; then $(SHELL) $$r/$(TARGET_SUBDIR)/libstdc++-v3/scripts/testsuite_flags --build-includes; else echo -funconfigured-libstdc++-v3 ; fi` -L$$r/$(TARGET_SUBDIR)/libstdc++-v3/src -L$$r/$(TARGET_SUBDIR)/libstdc++-v3/src/.libs'\n     { $as_echo \"$as_me:${as_lineno-$LINENO}: result: just compiled\" >&5\n $as_echo \"just compiled\" >&6; }\n   elif expr \"x$CXX_FOR_TARGET\" : \"x/\" > /dev/null; then"}, {"sha": "49f4f5dae887282819a7c7f6711095f029d36852", "filename": "configure.ac", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d99894e654b30324d5ab24069159ff9bc853c6a/configure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d99894e654b30324d5ab24069159ff9bc853c6a/configure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure.ac?ref=5d99894e654b30324d5ab24069159ff9bc853c6a", "patch": "@@ -3129,7 +3129,7 @@ GCC_TARGET_TOOL(as, AS_FOR_TARGET, AS, [gas/as-new])\n GCC_TARGET_TOOL(cc, CC_FOR_TARGET, CC, [gcc/xgcc -B$$r/$(HOST_SUBDIR)/gcc/])\n dnl see comments for CXX_FOR_TARGET_FLAG_TO_PASS\n GCC_TARGET_TOOL(c++, CXX_FOR_TARGET, CXX,\n-\t\t[gcc/g++ -B$$r/$(HOST_SUBDIR)/gcc/ -nostdinc++ `if test -f $$r/$(TARGET_SUBDIR)/libstdc++-v3/scripts/testsuite_flags; then $(SHELL) $$r/$(TARGET_SUBDIR)/libstdc++-v3/scripts/testsuite_flags --build-includes; else echo -funconfigured-libstdc++-v3 ; fi` -L$$r/$(TARGET_SUBDIR)/libstdc++-v3/src -L$$r/$(TARGET_SUBDIR)/libstdc++-v3/src/.libs],\n+\t\t[gcc/xg++ -B$$r/$(HOST_SUBDIR)/gcc/ -nostdinc++ `if test -f $$r/$(TARGET_SUBDIR)/libstdc++-v3/scripts/testsuite_flags; then $(SHELL) $$r/$(TARGET_SUBDIR)/libstdc++-v3/scripts/testsuite_flags --build-includes; else echo -funconfigured-libstdc++-v3 ; fi` -L$$r/$(TARGET_SUBDIR)/libstdc++-v3/src -L$$r/$(TARGET_SUBDIR)/libstdc++-v3/src/.libs],\n \t\tc++)\n GCC_TARGET_TOOL(c++ for libstdc++, RAW_CXX_FOR_TARGET, CXX,\n \t\t[gcc/xgcc -shared-libgcc -B$$r/$(HOST_SUBDIR)/gcc -nostdinc++ -L$$r/$(TARGET_SUBDIR)/libstdc++-v3/src -L$$r/$(TARGET_SUBDIR)/libstdc++-v3/src/.libs],"}, {"sha": "210844d42bf97e1580c879b7d819315086818c70", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d99894e654b30324d5ab24069159ff9bc853c6a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d99894e654b30324d5ab24069159ff9bc853c6a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5d99894e654b30324d5ab24069159ff9bc853c6a", "patch": "@@ -1,3 +1,8 @@\n+2012-11-28  Andrew Pinski  <apinski@cavium.com>\n+\n+\tPR bootstrap/54279\n+\t* Makefile.in (${QMTEST_DIR}/context): Use xg++ instead of g++.\n+\n 2012-11-28  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \tPR rtl-optimization/55052"}, {"sha": "c7b86482383f878b52ebd45eae420898d864c441", "filename": "gcc/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d99894e654b30324d5ab24069159ff9bc853c6a/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d99894e654b30324d5ab24069159ff9bc853c6a/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=5d99894e654b30324d5ab24069159ff9bc853c6a", "patch": "@@ -5184,7 +5184,7 @@ ${QMTEST_DIR}/context: stamp-qmtest\n \techo \"CompilerTable.c_path=${objdir}/xgcc\" >> $@\n \techo \"CompilerTable.c_options=-B${objdir}/\" >> $@\n \techo \"CompilerTable.cplusplus_kind=GCC\" >> $@\n-\techo \"CompilerTable.cplusplus_path=${objdir}/g++\" >> $@\n+\techo \"CompilerTable.cplusplus_path=${objdir}/xg++\" >> $@\n \techo \"CompilerTable.cplusplus_options=-B${objdir}/\" >> $@\n \techo \"DejaGNUTest.target=${target_noncanonical}\" >> $@\n "}, {"sha": "8c30eaae87e06ccd10a93f973befcb80300e7e8e", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d99894e654b30324d5ab24069159ff9bc853c6a/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d99894e654b30324d5ab24069159ff9bc853c6a/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=5d99894e654b30324d5ab24069159ff9bc853c6a", "patch": "@@ -1,3 +1,12 @@\n+2012-11-28  Andrew Pinski  <apinski@cavium.com>\n+\n+\tPR bootstrap/54279\n+\t* Make-lang.in (g++$(exeext)): Rename to\n+\t(xg++$(exeext)): This.\n+\t(g++-cross$(exeext)): Use xg++$(exeext) instead of g++$(exeext).\n+\t(c++.start.encap): Likewise.\n+\t(c++.install-common): Likewise.\n+\n 2012-11-24  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/55446"}, {"sha": "13abaf9ab33c4438c00a9eb721bff4ae935ee535", "filename": "gcc/cp/Make-lang.in", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d99894e654b30324d5ab24069159ff9bc853c6a/gcc%2Fcp%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d99894e654b30324d5ab24069159ff9bc853c6a/gcc%2Fcp%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FMake-lang.in?ref=5d99894e654b30324d5ab24069159ff9bc853c6a", "patch": "@@ -61,15 +61,15 @@ g++spec.o: $(srcdir)/cp/g++spec.c $(SYSTEM_H) coretypes.h $(TM_H) $(GCC_H) \\\n \n # Create the compiler driver for g++.\n GXX_OBJS = $(GCC_OBJS) g++spec.o\n-g++$(exeext): $(GXX_OBJS) $(EXTRA_GCC_OBJS) libcommon-target.a $(LIBDEPS)\n+xg++$(exeext): $(GXX_OBJS) $(EXTRA_GCC_OBJS) libcommon-target.a $(LIBDEPS)\n \t+$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ \\\n \t  $(GXX_OBJS) $(EXTRA_GCC_OBJS) libcommon-target.a \\\n \t  $(EXTRA_GCC_LIBS) $(LIBS)\n \n # Create a version of the g++ driver which calls the cross-compiler.\n-g++-cross$(exeext): g++$(exeext)\n+g++-cross$(exeext): xg++$(exeext)\n \t-rm -f g++-cross$(exeext)\n-\tcp g++$(exeext) g++-cross$(exeext)\n+\tcp xg++$(exeext) g++-cross$(exeext)\n \n # The compiler itself.\n # Shared with C front end:\n@@ -124,7 +124,7 @@ endif\n # Build hooks:\n \n c++.all.cross: g++-cross$(exeext)\n-c++.start.encap: g++$(exeext)\n+c++.start.encap: xg++$(exeext)\n c++.rest.encap:\n c++.info:\n c++.install-info:\n@@ -172,7 +172,7 @@ check_g++_parallelize = old-deja.exp dg.exp dg-torture.exp\n # and also as either g++ (if native) or $(tooldir)/bin/g++.\n c++.install-common: installdirs\n \t-rm -f $(DESTDIR)$(bindir)/$(GXX_INSTALL_NAME)$(exeext)\n-\t-$(INSTALL_PROGRAM) g++$(exeext) $(DESTDIR)$(bindir)/$(GXX_INSTALL_NAME)$(exeext)\n+\t-$(INSTALL_PROGRAM) xg++$(exeext) $(DESTDIR)$(bindir)/$(GXX_INSTALL_NAME)$(exeext)\n \t-chmod a+x $(DESTDIR)$(bindir)/$(GXX_INSTALL_NAME)$(exeext)\n \t-rm -f $(DESTDIR)$(bindir)/$(CXX_INSTALL_NAME)$(exeext)\n \t-( cd $(DESTDIR)$(bindir) && \\"}, {"sha": "309d54cdf87e69665a34ce4689329596af8049e0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d99894e654b30324d5ab24069159ff9bc853c6a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d99894e654b30324d5ab24069159ff9bc853c6a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5d99894e654b30324d5ab24069159ff9bc853c6a", "patch": "@@ -1,3 +1,10 @@\n+2012-11-28  Andrew Pinski  <apinski@cavium.com>\n+\n+\tPR bootstrap/54279\n+\t* lib/g++.exp (g++_init): Search for xg++ instead of g++ in the build\n+\tdirectories.\n+\t* lib/obj-c++.exp (obj-c++_init): Likewise.\n+\n 2012-11-28  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/52161"}, {"sha": "7fd36dabe75ac276177801d08e552a92bf09c981", "filename": "gcc/testsuite/lib/g++.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d99894e654b30324d5ab24069159ff9bc853c6a/gcc%2Ftestsuite%2Flib%2Fg%2B%2B.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d99894e654b30324d5ab24069159ff9bc853c6a/gcc%2Ftestsuite%2Flib%2Fg%2B%2B.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fg%2B%2B.exp?ref=5d99894e654b30324d5ab24069159ff9bc853c6a", "patch": "@@ -210,7 +210,7 @@ proc g++_init { args } {\n \t    if { [is_remote host] || ! [info exists TESTING_IN_BUILD_TREE] } {\n \t\tset GXX_UNDER_TEST [transform c++]\n \t    } else {\n-\t\tset GXX_UNDER_TEST [findfile $base_dir/../../g++ \"$base_dir/../../g++ -B$base_dir/../../\" [findfile $base_dir/g++ \"$base_dir/g++ -B$base_dir/\" [transform c++]]]\n+\t\tset GXX_UNDER_TEST [findfile $base_dir/../../xg++ \"$base_dir/../../xg++ -B$base_dir/../../\" [findfile $base_dir/xg++ \"$base_dir/xg++ -B$base_dir/\" [transform c++]]]\n \t    }\n \t}\n     }"}, {"sha": "773b7c9e8125e333b95fac2a58dbeb9c33c22184", "filename": "gcc/testsuite/lib/obj-c++.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d99894e654b30324d5ab24069159ff9bc853c6a/gcc%2Ftestsuite%2Flib%2Fobj-c%2B%2B.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d99894e654b30324d5ab24069159ff9bc853c6a/gcc%2Ftestsuite%2Flib%2Fobj-c%2B%2B.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fobj-c%2B%2B.exp?ref=5d99894e654b30324d5ab24069159ff9bc853c6a", "patch": "@@ -221,7 +221,7 @@ proc obj-c++_init { args } {\n \t    if { [is_remote host] || ! [info exists TESTING_IN_BUILD_TREE] } {\n \t\tset OBJCXX_UNDER_TEST [transform c++]\n \t    } else {\n-\t\tset OBJCXX_UNDER_TEST [findfile $base_dir/../../g++ \"$base_dir/../../g++ -B$base_dir/../../\" [findfile $base_dir/g++ \"$base_dir/g++ -B$base_dir/\" [transform c++]]]\n+\t\tset OBJCXX_UNDER_TEST [findfile $base_dir/../../xg++ \"$base_dir/../../xg++ -B$base_dir/../../\" [findfile $base_dir/xg++ \"$base_dir/xg++ -B$base_dir/\" [transform c++]]]\n \t    }\n \t}\n     }"}, {"sha": "b5d9fbd9d9c2b1ab8586123a8b68def70a51ee8f", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d99894e654b30324d5ab24069159ff9bc853c6a/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d99894e654b30324d5ab24069159ff9bc853c6a/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=5d99894e654b30324d5ab24069159ff9bc853c6a", "patch": "@@ -1,3 +1,9 @@\n+2012-11-28  Andrew Pinski  <apinski@cavium.com>\n+\n+\tPR bootstrap/54279\n+\t* scripts/testsuite_flags.in (--build-cxx): Use xg++ instead of g++.\n+\t* testsuite/lib/libstdc++.exp (libstdc++_init): Likewise.\n+\n 2012-11-28  Jonathan Wakely  <jwakely.gcc@gmail.com>\n \n \t* include/std/functional (_Mem_fn): Constrain function call operators"}, {"sha": "d7710ca70ec389df3ff4ef683217c3180f84c37a", "filename": "libstdc++-v3/scripts/testsuite_flags.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d99894e654b30324d5ab24069159ff9bc853c6a/libstdc%2B%2B-v3%2Fscripts%2Ftestsuite_flags.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d99894e654b30324d5ab24069159ff9bc853c6a/libstdc%2B%2B-v3%2Fscripts%2Ftestsuite_flags.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fscripts%2Ftestsuite_flags.in?ref=5d99894e654b30324d5ab24069159ff9bc853c6a", "patch": "@@ -45,7 +45,7 @@ case ${query} in\n       ;;\n     --build-cxx)\n       CXX_build=\"@CXX@\"\n-      CXX=`echo \"$CXX_build\" | sed 's,gcc/xgcc ,gcc/g++ ,'`\n+      CXX=`echo \"$CXX_build\" | sed 's,gcc/xgcc ,gcc/xg++ ,'`\n       echo ${CXX}\n       ;;\n     --build-cc)"}, {"sha": "b3be88fc5e32986a01378d9f28a31ca486688f37", "filename": "libstdc++-v3/testsuite/lib/libstdc++.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d99894e654b30324d5ab24069159ff9bc853c6a/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Flibstdc%2B%2B.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d99894e654b30324d5ab24069159ff9bc853c6a/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Flibstdc%2B%2B.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Flibstdc%2B%2B.exp?ref=5d99894e654b30324d5ab24069159ff9bc853c6a", "patch": "@@ -181,7 +181,7 @@ proc libstdc++_init { testfile } {\n \n     # Compute what needs to be added to the existing LD_LIBRARY_PATH.\n     if {$gccdir != \"\"} {\n-\tset compiler ${gccdir}/g++\n+\tset compiler ${gccdir}/xg++\n \tset ld_library_path ${ld_library_path_tmp}\n \tappend ld_library_path \":${blddir}/src/.libs\"\n "}]}