{"sha": "1ea9fe562c2e9c3a7772304e588aba86d8e58152", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWVhOWZlNTYyYzJlOWMzYTc3NzIzMDRlNTg4YWJhODZkOGU1ODE1Mg==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2009-05-21T16:53:48Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2009-05-21T16:53:48Z"}, "message": "neon.md (*mul<mode>3add<mode>_neon): New pattern.\n\n\t* config/arm/neon.md (*mul<mode>3add<mode>_neon): New pattern.\n\t(*mul<mode>3neg<mode>add<mode>_neon): Likewise.\n\n\t* gcc.dg/target/arm/neon-vmla-1.c: New.\n\t* gcc.dg/target/arm/neon-vmls-1.c: Likewise.\n\nFrom-SVN: r147771", "tree": {"sha": "dad4b6960f3868757726d7534ae09ec956edb48f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dad4b6960f3868757726d7534ae09ec956edb48f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1ea9fe562c2e9c3a7772304e588aba86d8e58152", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ea9fe562c2e9c3a7772304e588aba86d8e58152", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ea9fe562c2e9c3a7772304e588aba86d8e58152", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ea9fe562c2e9c3a7772304e588aba86d8e58152/comments", "author": null, "committer": null, "parents": [{"sha": "449223affaee69a3d70b9c578c727bbb08acba99", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/449223affaee69a3d70b9c578c727bbb08acba99", "html_url": "https://github.com/Rust-GCC/gccrs/commit/449223affaee69a3d70b9c578c727bbb08acba99"}], "stats": {"total": 74, "additions": 74, "deletions": 0}, "files": [{"sha": "8b7c623fce8d1071142e3359ce878078fc42a865", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea9fe562c2e9c3a7772304e588aba86d8e58152/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea9fe562c2e9c3a7772304e588aba86d8e58152/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1ea9fe562c2e9c3a7772304e588aba86d8e58152", "patch": "@@ -1,3 +1,8 @@\n+2009-05-21  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* config/arm/neon.md (*mul<mode>3add<mode>_neon): New pattern.\n+\t(*mul<mode>3neg<mode>add<mode>_neon): Likewise.\n+\n 2009-05-21  Shujing Zhao  <pearly.zhao@oracle.com>\n \n \t* config/i386/i386.c: Use REG_P, MEM_P, CONST_INT_P, LABEL_P and"}, {"sha": "ebd2a45156f04a7955d63fde6b05d72b4452302d", "filename": "gcc/config/arm/neon.md", "status": "modified", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea9fe562c2e9c3a7772304e588aba86d8e58152/gcc%2Fconfig%2Farm%2Fneon.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea9fe562c2e9c3a7772304e588aba86d8e58152/gcc%2Fconfig%2Farm%2Fneon.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fneon.md?ref=1ea9fe562c2e9c3a7772304e588aba86d8e58152", "patch": "@@ -862,6 +862,50 @@\n                                     (const_string \"neon_mul_qqq_8_16_32_ddd_32\")))))]\n )\n \n+(define_insn \"*mul<mode>3add<mode>_neon\"\n+  [(set (match_operand:VDQ 0 \"s_register_operand\" \"=w\")\n+        (plus:VDQ (mult:VDQ (match_operand:VDQ 2 \"s_register_operand\" \"w\")\n+                            (match_operand:VDQ 3 \"s_register_operand\" \"w\"))\n+\t\t  (match_operand:VDQ 1 \"s_register_operand\" \"0\")))]\n+  \"TARGET_NEON\"\n+  \"vmla.<V_if_elem>\\t%<V_reg>0, %<V_reg>2, %<V_reg>3\"\n+  [(set (attr \"neon_type\")\n+      (if_then_else (ne (symbol_ref \"<Is_float_mode>\") (const_int 0))\n+                    (if_then_else (ne (symbol_ref \"<Is_d_reg>\") (const_int 0))\n+                                  (const_string \"neon_fp_vmla_ddd\")\n+                                  (const_string \"neon_fp_vmla_qqq\"))\n+                    (if_then_else (ne (symbol_ref \"<Is_d_reg>\") (const_int 0))\n+                                  (if_then_else\n+                                    (ne (symbol_ref \"<Scalar_mul_8_16>\") (const_int 0))\n+                                    (const_string \"neon_mla_ddd_8_16_qdd_16_8_long_32_16_long\")\n+                                    (const_string \"neon_mla_ddd_32_qqd_16_ddd_32_scalar_qdd_64_32_long_scalar_qdd_64_32_long\"))\n+                                  (if_then_else (ne (symbol_ref \"<Scalar_mul_8_16>\") (const_int 0))\n+                                    (const_string \"neon_mla_qqq_8_16\")\n+                                    (const_string \"neon_mla_qqq_32_qqd_32_scalar\")))))]\n+)\n+\n+(define_insn \"*mul<mode>3neg<mode>add<mode>_neon\"\n+  [(set (match_operand:VDQ 0 \"s_register_operand\" \"=w\")\n+        (minus:VDQ (match_operand:VDQ 1 \"s_register_operand\" \"0\")\n+                   (mult:VDQ (match_operand:VDQ 2 \"s_register_operand\" \"w\")\n+                             (match_operand:VDQ 3 \"s_register_operand\" \"w\"))))]\n+  \"TARGET_NEON\"\n+  \"vmls.<V_if_elem>\\t%<V_reg>0, %<V_reg>2, %<V_reg>3\"\n+  [(set (attr \"neon_type\")\n+      (if_then_else (ne (symbol_ref \"<Is_float_mode>\") (const_int 0))\n+                    (if_then_else (ne (symbol_ref \"<Is_d_reg>\") (const_int 0))\n+                                  (const_string \"neon_fp_vmla_ddd\")\n+                                  (const_string \"neon_fp_vmla_qqq\"))\n+                    (if_then_else (ne (symbol_ref \"<Is_d_reg>\") (const_int 0))\n+                                  (if_then_else\n+                                    (ne (symbol_ref \"<Scalar_mul_8_16>\") (const_int 0))\n+                                    (const_string \"neon_mla_ddd_8_16_qdd_16_8_long_32_16_long\")\n+                                    (const_string \"neon_mla_ddd_32_qqd_16_ddd_32_scalar_qdd_64_32_long_scalar_qdd_64_32_long\"))\n+                                  (if_then_else (ne (symbol_ref \"<Scalar_mul_8_16>\") (const_int 0))\n+                                    (const_string \"neon_mla_qqq_8_16\")\n+                                    (const_string \"neon_mla_qqq_32_qqd_32_scalar\")))))]\n+)\n+\n (define_insn \"ior<mode>3\"\n   [(set (match_operand:VDQ 0 \"s_register_operand\" \"=w,w\")\n \t(ior:VDQ (match_operand:VDQ 1 \"s_register_operand\" \"w,0\")"}, {"sha": "e1db42b1614220a302e82a5ed40d06798bfd4c53", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea9fe562c2e9c3a7772304e588aba86d8e58152/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea9fe562c2e9c3a7772304e588aba86d8e58152/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1ea9fe562c2e9c3a7772304e588aba86d8e58152", "patch": "@@ -1,3 +1,8 @@\n+2009-05-21  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* gcc.dg/target/arm/neon-vmla-1.c: New.\n+\t* gcc.dg/target/arm/neon-vmls-1.c: Likewise.\n+\n 2009-05-20  Adam Nemet  <anemet@caviumnetworks.com>\n \n \t* gcc.target/mips/octeon-exts-6.c: New test."}, {"sha": "3592ab979ac5e864532de650e4b199aa0974a06e", "filename": "gcc/testsuite/gcc.target/arm/neon-vmla-1.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea9fe562c2e9c3a7772304e588aba86d8e58152/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fneon-vmla-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea9fe562c2e9c3a7772304e588aba86d8e58152/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fneon-vmla-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fneon-vmla-1.c?ref=1ea9fe562c2e9c3a7772304e588aba86d8e58152", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-require-effective-target arm_neon_hw } */\n+/* { dg-options \"-O2 -mfpu=neon -mfloat-abi=softfp -ftree-vectorize\" } */\n+/* { dg-final { scan-assembler \"vmla\\\\.f32\" } } */\n+\n+/* Verify that VMLA is used.  */\n+void f1(int n, float a, float x[], float y[]) {\n+  int i;\n+  for (i = 0; i < n; ++i)\n+    y[i] = a * x[i] + y[i];\n+}"}, {"sha": "1b3fcbbbbc96baf1293fee2d3bfae2d6a3280782", "filename": "gcc/testsuite/gcc.target/arm/neon-vmls-1.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea9fe562c2e9c3a7772304e588aba86d8e58152/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fneon-vmls-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea9fe562c2e9c3a7772304e588aba86d8e58152/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fneon-vmls-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fneon-vmls-1.c?ref=1ea9fe562c2e9c3a7772304e588aba86d8e58152", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-require-effective-target arm_neon_hw } */\n+/* { dg-options \"-O2 -mfpu=neon -mfloat-abi=softfp -ftree-vectorize\" } */\n+/* { dg-final { scan-assembler \"vmls\\\\.f32\" } } */\n+\n+/* Verify that VMLS is used.  */\n+void f1(int n, float a, float x[], float y[]) {\n+  int i;\n+  for (i = 0; i < n; ++i)\n+    y[i] = y[i] - a * x[i];\n+}"}]}