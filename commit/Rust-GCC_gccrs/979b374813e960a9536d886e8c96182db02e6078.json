{"sha": "979b374813e960a9536d886e8c96182db02e6078", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTc5YjM3NDgxM2U5NjBhOTUzNmQ4ODZlOGM5NjE4MmRiMDJlNjA3OA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-09-20T23:02:37Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-09-20T23:02:37Z"}, "message": "(HOST_WIDE_INT, HOST_BITS_PER_WIDE_INT): New macros.\n\n(expression_value): Now HOST_WIDE_INT.\n(parse_c_expression): Now returns HOST_WIDE_INT.\n\nFrom-SVN: r8106", "tree": {"sha": "9546382455c4943f4fd16d860e6fc6fc763e9dbe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9546382455c4943f4fd16d860e6fc6fc763e9dbe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/979b374813e960a9536d886e8c96182db02e6078", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/979b374813e960a9536d886e8c96182db02e6078", "html_url": "https://github.com/Rust-GCC/gccrs/commit/979b374813e960a9536d886e8c96182db02e6078", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/979b374813e960a9536d886e8c96182db02e6078/comments", "author": null, "committer": null, "parents": [{"sha": "16b02ae0924b6a63ddd7b08bdbbaf1402fb37303", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16b02ae0924b6a63ddd7b08bdbbaf1402fb37303", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16b02ae0924b6a63ddd7b08bdbbaf1402fb37303"}], "stats": {"total": 22, "additions": 18, "deletions": 4}, "files": [{"sha": "d64d01336d9437c4df2558a537536c55ca1da3d8", "filename": "gcc/cexp.y", "status": "modified", "additions": 18, "deletions": 4, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/979b374813e960a9536d886e8c96182db02e6078/gcc%2Fcexp.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/979b374813e960a9536d886e8c96182db02e6078/gcc%2Fcexp.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcexp.y?ref=979b374813e960a9536d886e8c96182db02e6078", "patch": "@@ -1,5 +1,5 @@\n /* Parse C expressions for CCCP.\n-   Copyright (C) 1987, 1992 Free Software Foundation.\n+   Copyright (C) 1987, 1992, 1994 Free Software Foundation.\n \n This program is free software; you can redistribute it and/or modify it\n under the terms of the GNU General Public License as published by the\n@@ -59,13 +59,27 @@ struct arglist {\n #endif\n #endif\n \n+/* Find the largest host integer type and set its size and type.  */\n+\n+#ifndef HOST_BITS_PER_WIDE_INT\n+\n+#if HOST_BITS_PER_LONG > HOST_BITS_PER_INT\n+#define HOST_BITS_PER_WIDE_INT HOST_BITS_PER_LONG\n+#define HOST_WIDE_INT long\n+#else\n+#define HOST_BITS_PER_WIDE_INT HOST_BITS_PER_INT\n+#define HOST_WIDE_INT int\n+#endif\n+\n+#endif\n+\n #ifndef NULL_PTR\n #define NULL_PTR ((GENERIC_PTR)0)\n #endif\n \n int yylex ();\n void yyerror ();\n-int expression_value;\n+HOST_WIDE_INT expression_value;\n \n static jmp_buf parse_return_error;\n \n@@ -905,7 +919,7 @@ right_shift (a, b)\n /* We do not support C comments.  They should be removed before\n    this function is called.  */\n \n-int\n+HOST_WIDE_INT\n parse_c_expression (string)\n      char *string;\n {\n@@ -954,7 +968,7 @@ main ()\n     if (buf[n] == EOF)\n       break;\n     buf[n] = '\\0';\n-    printf (\"parser returned %d\\n\", parse_c_expression (buf));\n+    printf (\"parser returned %ld\\n\", parse_c_expression (buf));\n   }\n \n   return 0;"}]}