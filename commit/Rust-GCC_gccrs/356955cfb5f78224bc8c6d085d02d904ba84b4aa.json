{"sha": "356955cfb5f78224bc8c6d085d02d904ba84b4aa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzU2OTU1Y2ZiNWY3ODIyNGJjOGM2ZDA4NWQwMmQ5MDRiYTg0YjRhYQ==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "1999-10-13T08:49:54Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "1999-10-13T08:49:54Z"}, "message": "cp-tree.h (build_x_va_arg): Prototype new function.\n\n\t* cp-tree.h (build_x_va_arg): Prototype new function.\n\t* call.c (build_x_va_arg): Define it.\n\t* parse.y (unary_expr): Call build_x_va_arg.\n\n\t* cp-tree.h (convert_type_from_ellipsis): Prototype new function.\n\t* call.c (convert_type_from_ellipsis): Define it.\n\t* decl.c (init_decl_processing): Set lang_type_promotes_to.\n\n\t* tree.c (lvalue_p_1): Accept VA_ARG_EXPR with aggregates.\n\nFrom-SVN: r29942", "tree": {"sha": "0e448901aa69335285ee8574f6046b97ac436ba0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0e448901aa69335285ee8574f6046b97ac436ba0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/356955cfb5f78224bc8c6d085d02d904ba84b4aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/356955cfb5f78224bc8c6d085d02d904ba84b4aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/356955cfb5f78224bc8c6d085d02d904ba84b4aa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/356955cfb5f78224bc8c6d085d02d904ba84b4aa/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a5037588b493c6a1ca654f3acf8a5280cb614bfc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5037588b493c6a1ca654f3acf8a5280cb614bfc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5037588b493c6a1ca654f3acf8a5280cb614bfc"}], "stats": {"total": 60, "additions": 59, "deletions": 1}, "files": [{"sha": "9bb81d02fb77960b026cfdf481adc144c1264c7b", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/356955cfb5f78224bc8c6d085d02d904ba84b4aa/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/356955cfb5f78224bc8c6d085d02d904ba84b4aa/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=356955cfb5f78224bc8c6d085d02d904ba84b4aa", "patch": "@@ -1,3 +1,15 @@\n+1999-10-13  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* cp-tree.h (build_x_va_arg): Prototype new function.\n+\t* call.c (build_x_va_arg): Define it.\n+\t* parse.y (unary_expr): Call build_x_va_arg.\n+\t\n+\t* cp-tree.h (convert_type_from_ellipsis): Prototype new function.\n+\t* call.c (convert_type_from_ellipsis): Define it.\n+\t* decl.c (init_decl_processing): Set lang_type_promotes_to.\n+\n+\t* tree.c (lvalue_p_1): Accept VA_ARG_EXPR with aggregates.\n+\n 1999-10-11  Jason Merrill  <jason@yorick.cygnus.com>\n \n \t* class.c (fixed_type_or_null): Always set *nonnull."}, {"sha": "dd4e44246f86d4c611808025007f7c542b739ae6", "filename": "gcc/cp/call.c", "status": "modified", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/356955cfb5f78224bc8c6d085d02d904ba84b4aa/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/356955cfb5f78224bc8c6d085d02d904ba84b4aa/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=356955cfb5f78224bc8c6d085d02d904ba84b4aa", "patch": "@@ -3813,6 +3813,48 @@ convert_arg_to_ellipsis (arg)\n   return arg;\n }\n \n+/* va_arg (EXPR, TYPE) is a builtin. Make sure it is not abused.  */\n+\n+tree\n+build_x_va_arg (expr, type)\n+     tree expr;\n+     tree type;\n+{\n+  type = complete_type_or_else (type, NULL_TREE);\n+\n+  if (expr == error_mark_node || !type)\n+    return error_mark_node;\n+  \n+  if (! pod_type_p (type))\n+    {\n+      /* Undefined behaviour [expr.call] 5.2.2/7.  */\n+      cp_warning (\"cannot receive objects of non-POD type `%#T' through `...'\",\n+\t\t  type);\n+    }\n+  \n+  return build_va_arg (expr, type);\n+}\n+\n+/* TYPE has been given to va_arg. Apply the default conversions which would\n+   have happened when passed via ellipsis. Return the promoted type, or\n+   NULL_TREE, if there is no change.  */\n+\n+tree\n+convert_type_from_ellipsis (type)\n+     tree type;\n+{\n+  tree promote;\n+  \n+  if (TREE_CODE (type) == ARRAY_TYPE)\n+    promote = build_pointer_type (TREE_TYPE (type));\n+  else if (TREE_CODE (type) == FUNCTION_TYPE)\n+    promote = build_pointer_type (type);\n+  else\n+    promote = type_promotes_to (type);\n+  \n+  return same_type_p (type, promote) ? NULL_TREE : promote;\n+}\n+\n /* ARG is a default argument expression being passed to a parameter of\n    the indicated TYPE, which is a parameter to FN.  Do any required\n    conversions.  Return the converted value.  */"}, {"sha": "3246e5af8752ddf4e86ff52e025d6d2873a317ba", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/356955cfb5f78224bc8c6d085d02d904ba84b4aa/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/356955cfb5f78224bc8c6d085d02d904ba84b4aa/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=356955cfb5f78224bc8c6d085d02d904ba84b4aa", "patch": "@@ -3270,6 +3270,8 @@ extern int can_convert_arg\t\t\tPROTO((tree, tree, tree));\n extern int enforce_access                       PROTO((tree, tree));\n extern tree convert_default_arg                 PROTO((tree, tree, tree));\n extern tree convert_arg_to_ellipsis             PROTO((tree));\n+extern tree build_x_va_arg                      PROTO((tree, tree));\n+extern tree convert_type_from_ellipsis          PROTO((tree));\n extern int is_properly_derived_from             PROTO((tree, tree));\n extern tree initialize_reference                PROTO((tree, tree));\n extern tree strip_top_quals                     PROTO((tree));"}, {"sha": "60dac525eb526111bd107c9a9045d3f7bb5ffa0a", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/356955cfb5f78224bc8c6d085d02d904ba84b4aa/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/356955cfb5f78224bc8c6d085d02d904ba84b4aa/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=356955cfb5f78224bc8c6d085d02d904ba84b4aa", "patch": "@@ -6221,6 +6221,7 @@ init_decl_processing ()\n     = build_pointer_type (build_qualified_type (void_type_node,\n \t\t\t\t\t\tTYPE_QUAL_CONST));\n   c_common_nodes_and_builtins (1, flag_no_builtin, flag_no_nonansi_builtin);\n+  lang_type_promotes_to = convert_type_from_ellipsis;\n \n   void_ftype_ptr\n     = build_exception_variant (void_ftype_ptr, empty_except_spec);"}, {"sha": "335c022627a14d6bd16aaed51868d131e6a8ba11", "filename": "gcc/cp/parse.y", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/356955cfb5f78224bc8c6d085d02d904ba84b4aa/gcc%2Fcp%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/356955cfb5f78224bc8c6d085d02d904ba84b4aa/gcc%2Fcp%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparse.y?ref=356955cfb5f78224bc8c6d085d02d904ba84b4aa", "patch": "@@ -1173,7 +1173,7 @@ unary_expr:\n \t| IMAGPART cast_expr %prec UNARY\n \t\t{ $$ = build_x_unary_op (IMAGPART_EXPR, $2); }\n \t| VA_ARG '(' expr_no_commas ',' type_id ')'\n-\t\t{ $$ = build_va_arg ($3, groktypename ($5.t));\n+\t\t{ $$ = build_x_va_arg ($3, groktypename ($5.t));\n \t\t  check_for_new_type (\"__builtin_va_arg\", $5); }\n \t;\n "}, {"sha": "0b5f84365d5a5fa61d626e8818c804a53e5f31bb", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/356955cfb5f78224bc8c6d085d02d904ba84b4aa/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/356955cfb5f78224bc8c6d085d02d904ba84b4aa/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=356955cfb5f78224bc8c6d085d02d904ba84b4aa", "patch": "@@ -145,6 +145,7 @@ lvalue_p_1 (ref, treat_class_rvalues_as_lvalues)\n       return treat_class_rvalues_as_lvalues ? clk_class : clk_none;\n \n     case CALL_EXPR:\n+    case VA_ARG_EXPR:\n       return ((treat_class_rvalues_as_lvalues\n \t       && IS_AGGR_TYPE (TREE_TYPE (ref)))\n \t      ? clk_class : clk_none);"}]}