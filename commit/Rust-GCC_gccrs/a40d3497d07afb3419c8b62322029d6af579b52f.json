{"sha": "a40d3497d07afb3419c8b62322029d6af579b52f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTQwZDM0OTdkMDdhZmIzNDE5YzhiNjIzMjIwMjlkNmFmNTc5YjUyZg==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2006-01-11T19:44:57Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2006-01-11T19:44:57Z"}, "message": "re PR tree-optimization/25734 (ice for legal kernel code with -Os)\n\n2006-01-11  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/25734\n\t* tree-ssa-forwprop.c (forward_propagate_addr_expr_1): Do not\n\tstop propagation after successful propagation to the LHS.\n\n\t* gcc.dg/tree-ssa/pr25734.c: New testcase.\n\nFrom-SVN: r109598", "tree": {"sha": "a9fcef8a8a45e353d52dccac8670eeec074c2021", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a9fcef8a8a45e353d52dccac8670eeec074c2021"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a40d3497d07afb3419c8b62322029d6af579b52f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a40d3497d07afb3419c8b62322029d6af579b52f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a40d3497d07afb3419c8b62322029d6af579b52f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a40d3497d07afb3419c8b62322029d6af579b52f/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "68f9b84438d3ad84f1baf6413723a205e6a49b07", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68f9b84438d3ad84f1baf6413723a205e6a49b07", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68f9b84438d3ad84f1baf6413723a205e6a49b07"}], "stats": {"total": 48, "additions": 46, "deletions": 2}, "files": [{"sha": "3e700b7c9c2ae2b0695fa7924d1509dcbce47197", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a40d3497d07afb3419c8b62322029d6af579b52f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a40d3497d07afb3419c8b62322029d6af579b52f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a40d3497d07afb3419c8b62322029d6af579b52f", "patch": "@@ -1,3 +1,9 @@\n+2006-01-11  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/25734\n+\t* tree-ssa-forwprop.c (forward_propagate_addr_expr_1): Do not\n+\tstop propagation after successful propagation to the LHS.\n+\n 2006-01-11  Kazu Hirata  <kazu@codesourcery.com>\n \n \t* basic-block.h (control_flow_graph): Change the type of"}, {"sha": "1160053dd77b734b3d2bd82e6f8f67ae08ff13e4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a40d3497d07afb3419c8b62322029d6af579b52f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a40d3497d07afb3419c8b62322029d6af579b52f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a40d3497d07afb3419c8b62322029d6af579b52f", "patch": "@@ -1,3 +1,8 @@\n+2006-01-11  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/25734\n+\t* gcc.dg/tree-ssa/pr25734.c: New testcase.\n+\n 2006-01-10  Bernhard Fischer  <rep.nop@aon.at>\n \n \tPR fortran/25486"}, {"sha": "a71c7f01a664ce0b1508b6cc199fbf9e3924b9a4", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr25734.c", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a40d3497d07afb3419c8b62322029d6af579b52f/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr25734.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a40d3497d07afb3419c8b62322029d6af579b52f/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr25734.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr25734.c?ref=a40d3497d07afb3419c8b62322029d6af579b52f", "patch": "@@ -0,0 +1,34 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-Os\" } */\n+\n+struct list_head {\n+ struct list_head *next;\n+};\n+static inline __attribute__((always_inline)) void list_del_init(struct\n+list_head *entry)\n+{\n+ __list_del(entry->next);\n+ (entry)->next = (entry);\n+};\n+struct dentry {\n+ void *d_fsdata;\n+};\n+struct sysfs_dirent {\n+ struct list_head s_sibling;\n+ struct list_head s_children;\n+};\n+const char *sysfs_get_name(struct sysfs_dirent *);\n+void sysfs_hash_and_remove(struct dentry * dir, const char * name)\n+{\n+ struct sysfs_dirent * sd;\n+ struct sysfs_dirent * parent_sd = dir->d_fsdata;\n+ for (sd = (struct sysfs_dirent *)((&parent_sd->s_children)->next);\n+     &sd->s_sibling != (&parent_sd->s_children);\n+     sd  = (struct sysfs_dirent *)sd->s_sibling.next) {\n+  if (!__builtin_strcmp(sysfs_get_name(sd), name))\n+  {\n+   list_del_init(&sd->s_sibling);\n+   break;\n+  }\n+ }\n+}"}, {"sha": "892edde7a363153260135c2ee8ffed8e64cd4801", "filename": "gcc/tree-ssa-forwprop.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a40d3497d07afb3419c8b62322029d6af579b52f/gcc%2Ftree-ssa-forwprop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a40d3497d07afb3419c8b62322029d6af579b52f/gcc%2Ftree-ssa-forwprop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-forwprop.c?ref=a40d3497d07afb3419c8b62322029d6af579b52f", "patch": "@@ -686,7 +686,6 @@ forward_propagate_addr_expr_1 (tree stmt, tree use_stmt)\n       TREE_OPERAND (lhs, 0) = unshare_expr (TREE_OPERAND (stmt, 1));\n       fold_stmt_inplace (use_stmt);\n       tidy_after_forward_propagate_addr (use_stmt);\n-      return true;\n     }\n \n   /* Trivial case.  The use statement could be a trivial copy.  We\n@@ -696,7 +695,7 @@ forward_propagate_addr_expr_1 (tree stmt, tree use_stmt)\n      we can catch some cascading effects, ie the single use is\n      in a copy, and the copy is used later by a single INDIRECT_REF\n      for example.  */\n-  if (TREE_CODE (lhs) == SSA_NAME && TREE_OPERAND (use_stmt, 1) == name)\n+  else if (TREE_CODE (lhs) == SSA_NAME && TREE_OPERAND (use_stmt, 1) == name)\n     {\n       TREE_OPERAND (use_stmt, 1) = unshare_expr (TREE_OPERAND (stmt, 1));\n       tidy_after_forward_propagate_addr (use_stmt);"}]}