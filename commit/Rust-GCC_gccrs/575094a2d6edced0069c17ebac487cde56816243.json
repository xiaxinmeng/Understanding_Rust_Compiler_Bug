{"sha": "575094a2d6edced0069c17ebac487cde56816243", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTc1MDk0YTJkNmVkY2VkMDA2OWMxN2ViYWM0ODdjZGU1NjgxNjI0Mw==", "commit": {"author": {"name": "Craig Burley", "email": "burley@gnu.org", "date": "1998-02-22T19:21:21Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-02-22T19:21:21Z"}, "message": "Support FORMAT(I<1+2>) (constant variable-FORMAT expressions):\n\n        Support FORMAT(I<1+2>) (constant variable-FORMAT\n        expressions):\n        * bad.def (FFEBAD_FORMAT_VARIABLE): New diagnostic.\n        * std.c (ffestd_R1001rtexpr_): New function.\n        (ffestd_R1001dump_, ffestd_R1001dump_1005_1_,\n        ffestd_R1001dump_1005_2_, ffestd_R1001dump_1005_3_,\n        ffestd_R1001dump_1005_4_, ffestd_R1001dump_1005_5_,\n        ffestd_R1001dump_1010_2_, ffestd_R1001dump_1010_3_,\n        ffestd_R1001dump_1010_4_, ffestd_R1001dump_1010_5_):\n        Use new function instead of ffestd_R1001error_.\n        * stb.c (ffestb_R10014_, ffestb_R10016_, ffestb_R10018_,\n        ffestb_R100110_): Restructure `for' loop for style.\nChange from Craig.\n\nFrom-SVN: r18181", "tree": {"sha": "c778d9b1a3db168ed484a0311e6a7f6559d85627", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c778d9b1a3db168ed484a0311e6a7f6559d85627"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/575094a2d6edced0069c17ebac487cde56816243", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/575094a2d6edced0069c17ebac487cde56816243", "html_url": "https://github.com/Rust-GCC/gccrs/commit/575094a2d6edced0069c17ebac487cde56816243", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/575094a2d6edced0069c17ebac487cde56816243/comments", "author": null, "committer": null, "parents": [{"sha": "45c4886986d791d11441c09245810caa7cae70cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45c4886986d791d11441c09245810caa7cae70cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/45c4886986d791d11441c09245810caa7cae70cb"}], "stats": {"total": 113, "additions": 89, "deletions": 24}, "files": [{"sha": "0d7dadaf8fa5129c0be295d25dab4e48afacb089", "filename": "gcc/f/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/575094a2d6edced0069c17ebac487cde56816243/gcc%2Ff%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/575094a2d6edced0069c17ebac487cde56816243/gcc%2Ff%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FChangeLog?ref=575094a2d6edced0069c17ebac487cde56816243", "patch": "@@ -1,3 +1,19 @@\n+Sun Jan 11 02:14:47 1998  Craig Burley  <burley@gnu.org>\n+\n+\tSupport FORMAT(I<1+2>) (constant variable-FORMAT\n+\texpressions):\n+\t* bad.def (FFEBAD_FORMAT_VARIABLE): New diagnostic.\n+\t* std.c (ffestd_R1001rtexpr_): New function.\n+\t(ffestd_R1001dump_, ffestd_R1001dump_1005_1_,\n+\tffestd_R1001dump_1005_2_, ffestd_R1001dump_1005_3_,\n+\tffestd_R1001dump_1005_4_, ffestd_R1001dump_1005_5_,\n+\tffestd_R1001dump_1010_2_, ffestd_R1001dump_1010_3_,\n+\tffestd_R1001dump_1010_4_, ffestd_R1001dump_1010_5_):\n+\tUse new function instead of ffestd_R1001error_.\n+\n+\t* stb.c (ffestb_R10014_, ffestb_R10016_, ffestb_R10018_,\n+\tffestb_R100110_): Restructure `for' loop for style.\n+\n Fri Oct 10 13:00:48 1997  Craig Burley  <burley@gnu.ai.mit.edu>\n \n \t* ste.c (ffeste_begin_iterdo_): Fix loop setup so iteration"}, {"sha": "9a3cf5a323d3296f9cbb53612b2de5522664947d", "filename": "gcc/f/bad.def", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/575094a2d6edced0069c17ebac487cde56816243/gcc%2Ff%2Fbad.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/575094a2d6edced0069c17ebac487cde56816243/gcc%2Ff%2Fbad.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fbad.def?ref=575094a2d6edced0069c17ebac487cde56816243", "patch": "@@ -549,6 +549,8 @@ FFEBAD_MSGS1 (FFEBAD_ARRAY_AS_SFARG, FATAL,\n \"Array supplied at %1 for dummy argument `%A' in statement function reference at %0\")\n FFEBAD_MSGS1 (FFEBAD_FORMAT_UNSUPPORTED, FATAL,\n \"Unsupported FORMAT specifier at %0\")\n+FFEBAD_MSGS1 (FFEBAD_FORMAT_VARIABLE, FATAL,\n+\"Variable-expression FORMAT specifier at %0 -- unsupported\")\n FFEBAD_MSGS2 (FFEBAD_OPEN_UNSUPPORTED, WARN,\n \"Unsupported OPEN control item at %0 -- ACTION=, ASSOCIATEVARIABLE=, BLOCKSIZE=, BUFFERCOUNT=, CARRIAGECONTROL=, DEFAULTFILE=, DELIM=, DISPOSE=, EXTENDSIZE=, INITIALSIZE=, KEY=, MAXREC=, NOSPANBLOCKS, ORGANIZATION=, PAD=, POSITION=, READONLY=, RECORDTYPE=, SHARED=, and USEROPEN= are not supported\",\n \"Unsupported OPEN control item at %0\")"}, {"sha": "90ae83d56379e19aa8a54ad28ed4fc99f3e1eff0", "filename": "gcc/f/stb.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/575094a2d6edced0069c17ebac487cde56816243/gcc%2Ff%2Fstb.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/575094a2d6edced0069c17ebac487cde56816243/gcc%2Ff%2Fstb.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fstb.c?ref=575094a2d6edced0069c17ebac487cde56816243", "patch": "@@ -9214,14 +9214,14 @@ ffestb_R10014_ (ffelexToken t)\n \t}\n       if (ffestb_local_.format.sign)\n \t{\n-\t  for (i = 0; i < ffelex_token_length (t); ++i)\n+\t  for (i = ffelex_token_length (t) + 1; i > 0; --i)\n \t    ffestb_local_.format.pre.u.signed_val *= 10;\n \t  ffestb_local_.format.pre.u.signed_val += strtoul (ffelex_token_text (t),\n \t\t\t\t\t\t\t    NULL, 10);\n \t}\n       else\n \t{\n-\t  for (i = 0; i < ffelex_token_length (t); ++i)\n+\t  for (i = ffelex_token_length (t) + 1; i > 0; --i)\n \t    ffestb_local_.format.pre.u.unsigned_val *= 10;\n \t  ffestb_local_.format.pre.u.unsigned_val += strtoul (ffelex_token_text (t),\n \t\t\t\t\t\t\t      NULL, 10);\n@@ -10105,7 +10105,7 @@ ffestb_R10016_ (ffelexToken t)\n \t  ffebad_finish ();\n \t  return (ffelexHandler) ffestb_R10016_;\n \t}\n-      for (i = 0; i < ffelex_token_length (t); ++i)\n+      for (i = ffelex_token_length (t) + 1; i > 0; --i)\n \tffestb_local_.format.post.u.unsigned_val *= 10;\n       ffestb_local_.format.post.u.unsigned_val += strtoul (ffelex_token_text (t),\n \t\t\t\t\t\t\t   NULL, 10);\n@@ -10205,7 +10205,7 @@ ffestb_R10018_ (ffelexToken t)\n \t  ffebad_finish ();\n \t  return (ffelexHandler) ffestb_R10018_;\n \t}\n-      for (i = 0; i < ffelex_token_length (t); ++i)\n+      for (i = ffelex_token_length (t) + 1; i > 0; --i)\n \tffestb_local_.format.dot.u.unsigned_val *= 10;\n       ffestb_local_.format.dot.u.unsigned_val += strtoul (ffelex_token_text (t),\n \t\t\t\t\t\t\t  NULL, 10);\n@@ -10332,7 +10332,7 @@ ffestb_R100110_ (ffelexToken t)\n \t  ffebad_finish ();\n \t  return (ffelexHandler) ffestb_R100110_;\n \t}\n-      for (i = 0; i < ffelex_token_length (t); ++i)\n+      for (i = ffelex_token_length (t) + 1; i > 0; --i)\n \tffestb_local_.format.exp.u.unsigned_val *= 10;\n       ffestb_local_.format.exp.u.unsigned_val += strtoul (ffelex_token_text (t),\n \t\t\t\t\t\t\t  NULL, 10);"}, {"sha": "78538d1597821020edc409762d5d83bc09ed1711", "filename": "gcc/f/std.c", "status": "modified", "additions": 66, "deletions": 19, "changes": 85, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/575094a2d6edced0069c17ebac487cde56816243/gcc%2Ff%2Fstd.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/575094a2d6edced0069c17ebac487cde56816243/gcc%2Ff%2Fstd.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fstd.c?ref=575094a2d6edced0069c17ebac487cde56816243", "patch": "@@ -546,6 +546,7 @@ static void ffestd_R1001dump_1010_4_ (ffests s, ffesttFormatList f,\n static void ffestd_R1001dump_1010_5_ (ffests s, ffesttFormatList f,\n \t\t\t\t      char *string);\n static void ffestd_R1001error_ (ffesttFormatList f);\n+static void ffestd_R1001rtexpr_ (ffests s, ffesttFormatList f, ffebld expr);\n \n /* Internal macros. */\n \n@@ -4360,7 +4361,7 @@ ffestd_R1001dump_ (ffests s, ffesttFormatList list)\n \t  if (next->u.R1003D.R1004.present)\n \t    {\n \t      if (next->u.R1003D.R1004.rtexpr)\n-\t\tffestd_R1001error_ (next);\n+\t\tffestd_R1001rtexpr_ (s, next, next->u.R1003D.R1004.u.expr);\n \t      else\n \t\tffests_printf_1U (s, \"%lu\",\n \t\t\t\t  next->u.R1003D.R1004.u.unsigned_val);\n@@ -4393,7 +4394,7 @@ ffestd_R1001dump_1005_1_ (ffests s, ffesttFormatList f, char *string)\n   if (f->u.R1005.R1004.present)\n     {\n       if (f->u.R1005.R1004.rtexpr)\n-\tffestd_R1001error_ (f);\n+\tffestd_R1001rtexpr_ (s, f, f->u.R1005.R1004.u.expr);\n       else\n \tffests_printf_1U (s, \"%lu\", f->u.R1005.R1004.u.unsigned_val);\n     }\n@@ -4403,7 +4404,7 @@ ffestd_R1001dump_1005_1_ (ffests s, ffesttFormatList f, char *string)\n   if (f->u.R1005.R1006.present)\n     {\n       if (f->u.R1005.R1006.rtexpr)\n-\tffestd_R1001error_ (f);\n+\tffestd_R1001rtexpr_ (s, f, f->u.R1005.R1006.u.expr);\n       else\n \tffests_printf_1U (s, \"%lu\", f->u.R1005.R1006.u.unsigned_val);\n     }\n@@ -4426,15 +4427,15 @@ ffestd_R1001dump_1005_2_ (ffests s, ffesttFormatList f, char *string)\n   if (f->u.R1005.R1004.present)\n     {\n       if (f->u.R1005.R1004.rtexpr)\n-\tffestd_R1001error_ (f);\n+\tffestd_R1001rtexpr_ (s, f, f->u.R1005.R1004.u.expr);\n       else\n \tffests_printf_1U (s, \"%lu\", f->u.R1005.R1004.u.unsigned_val);\n     }\n \n   ffests_puts (s, string);\n \n   if (f->u.R1005.R1006.rtexpr)\n-    ffestd_R1001error_ (f);\n+    ffestd_R1001rtexpr_ (s, f, f->u.R1005.R1006.u.expr);\n   else\n     ffests_printf_1U (s, \"%lu\", f->u.R1005.R1006.u.unsigned_val);\n }\n@@ -4455,23 +4456,23 @@ ffestd_R1001dump_1005_3_ (ffests s, ffesttFormatList f, char *string)\n   if (f->u.R1005.R1004.present)\n     {\n       if (f->u.R1005.R1004.rtexpr)\n-\tffestd_R1001error_ (f);\n+\tffestd_R1001rtexpr_ (s, f, f->u.R1005.R1004.u.expr);\n       else\n \tffests_printf_1U (s, \"%lu\", f->u.R1005.R1004.u.unsigned_val);\n     }\n \n   ffests_puts (s, string);\n \n   if (f->u.R1005.R1006.rtexpr)\n-    ffestd_R1001error_ (f);\n+    ffestd_R1001rtexpr_ (s, f, f->u.R1005.R1006.u.expr);\n   else\n     ffests_printf_1U (s, \"%lu\", f->u.R1005.R1006.u.unsigned_val);\n \n   if (f->u.R1005.R1007_or_R1008.present)\n     {\n       ffests_putc (s, '.');\n       if (f->u.R1005.R1007_or_R1008.rtexpr)\n-\tffestd_R1001error_ (f);\n+\tffestd_R1001rtexpr_ (s, f, f->u.R1005.R1007_or_R1008.u.expr);\n       else\n \tffests_printf_1U (s, \"%lu\",\n \t\t\t  f->u.R1005.R1007_or_R1008.u.unsigned_val);\n@@ -4495,21 +4496,21 @@ ffestd_R1001dump_1005_4_ (ffests s, ffesttFormatList f, char *string)\n   if (f->u.R1005.R1004.present)\n     {\n       if (f->u.R1005.R1004.rtexpr)\n-\tffestd_R1001error_ (f);\n+\tffestd_R1001rtexpr_ (s, f, f->u.R1005.R1004.u.expr);\n       else\n \tffests_printf_1U (s, \"%lu\", f->u.R1005.R1004.u.unsigned_val);\n     }\n \n   ffests_puts (s, string);\n \n   if (f->u.R1005.R1006.rtexpr)\n-    ffestd_R1001error_ (f);\n+    ffestd_R1001rtexpr_ (s, f, f->u.R1005.R1006.u.expr);\n   else\n     ffests_printf_1U (s, \"%lu\", f->u.R1005.R1006.u.unsigned_val);\n \n   ffests_putc (s, '.');\n   if (f->u.R1005.R1007_or_R1008.rtexpr)\n-    ffestd_R1001error_ (f);\n+    ffestd_R1001rtexpr_ (s, f, f->u.R1005.R1007_or_R1008.u.expr);\n   else\n     ffests_printf_1U (s, \"%lu\", f->u.R1005.R1007_or_R1008.u.unsigned_val);\n }\n@@ -4530,29 +4531,29 @@ ffestd_R1001dump_1005_5_ (ffests s, ffesttFormatList f, char *string)\n   if (f->u.R1005.R1004.present)\n     {\n       if (f->u.R1005.R1004.rtexpr)\n-\tffestd_R1001error_ (f);\n+\tffestd_R1001rtexpr_ (s, f, f->u.R1005.R1004.u.expr);\n       else\n \tffests_printf_1U (s, \"%lu\", f->u.R1005.R1004.u.unsigned_val);\n     }\n \n   ffests_puts (s, string);\n \n   if (f->u.R1005.R1006.rtexpr)\n-    ffestd_R1001error_ (f);\n+    ffestd_R1001rtexpr_ (s, f, f->u.R1005.R1006.u.expr);\n   else\n     ffests_printf_1U (s, \"%lu\", f->u.R1005.R1006.u.unsigned_val);\n \n   ffests_putc (s, '.');\n   if (f->u.R1005.R1007_or_R1008.rtexpr)\n-    ffestd_R1001error_ (f);\n+    ffestd_R1001rtexpr_ (s, f, f->u.R1005.R1007_or_R1008.u.expr);\n   else\n     ffests_printf_1U (s, \"%lu\", f->u.R1005.R1007_or_R1008.u.unsigned_val);\n \n   if (f->u.R1005.R1009.present)\n     {\n       ffests_putc (s, 'E');\n       if (f->u.R1005.R1009.rtexpr)\n-\tffestd_R1001error_ (f);\n+\tffestd_R1001rtexpr_ (s, f, f->u.R1005.R1009.u.expr);\n       else\n \tffests_printf_1U (s, \"%lu\", f->u.R1005.R1009.u.unsigned_val);\n     }\n@@ -4586,7 +4587,7 @@ ffestd_R1001dump_1010_2_ (ffests s, ffesttFormatList f, char *string)\n   if (f->u.R1010.val.present)\n     {\n       if (f->u.R1010.val.rtexpr)\n-\tffestd_R1001error_ (f);\n+\tffestd_R1001rtexpr_ (s, f, f->u.R1010.val.u.expr);\n       else\n \tffests_printf_1U (s, \"%lu\", f->u.R1010.val.u.unsigned_val);\n     }\n@@ -4607,7 +4608,7 @@ ffestd_R1001dump_1010_3_ (ffests s, ffesttFormatList f, char *string)\n   assert (f->u.R1010.val.present);\n \n   if (f->u.R1010.val.rtexpr)\n-    ffestd_R1001error_ (f);\n+    ffestd_R1001rtexpr_ (s, f, f->u.R1010.val.u.expr);\n   else\n     ffests_printf_1U (s, \"%lu\", f->u.R1010.val.u.unsigned_val);\n \n@@ -4627,7 +4628,7 @@ ffestd_R1001dump_1010_4_ (ffests s, ffesttFormatList f, char *string)\n   assert (f->u.R1010.val.present);\n \n   if (f->u.R1010.val.rtexpr)\n-    ffestd_R1001error_ (f);\n+    ffestd_R1001rtexpr_ (s, f, f->u.R1010.val.u.expr);\n   else\n     ffests_printf_1D (s, \"%ld\", f->u.R1010.val.u.signed_val);\n \n@@ -4649,7 +4650,7 @@ ffestd_R1001dump_1010_5_ (ffests s, ffesttFormatList f, char *string)\n   ffests_puts (s, string);\n \n   if (f->u.R1010.val.rtexpr)\n-    ffestd_R1001error_ (f);\n+    ffestd_R1001rtexpr_ (s, f, f->u.R1010.val.u.expr);\n   else\n     ffests_printf_1U (s, \"%lu\", f->u.R1010.val.u.unsigned_val);\n }\n@@ -4669,6 +4670,52 @@ ffestd_R1001error_ (ffesttFormatList f)\n   ffebad_finish ();\n }\n \n+static void\n+ffestd_R1001rtexpr_ (ffests s, ffesttFormatList f, ffebld expr)\n+{\n+  if ((expr == NULL)\n+      || (ffebld_op (expr) != FFEBLD_opCONTER)\n+      || (ffeinfo_basictype (ffebld_info (expr)) != FFEINFO_basictypeINTEGER)\n+      || (ffeinfo_kindtype (ffebld_info (expr)) == FFEINFO_kindtypeINTEGER4))\n+    {\n+      ffebad_start (FFEBAD_FORMAT_VARIABLE);\n+      ffebad_here (0, ffelex_token_where_line (f->t), ffelex_token_where_column (f->t));\n+      ffebad_finish ();\n+    }\n+  else\n+    {\n+      int val;\n+\n+      switch (ffeinfo_kindtype (ffebld_info (expr)))\n+\t{\n+#if FFETARGET_okINTEGER1\n+\tcase FFEINFO_kindtypeINTEGER1:\n+\t  val = ffebld_constant_integer1 (ffebld_conter (expr));\n+\t  break;\n+#endif\n+\n+#if FFETARGET_okINTEGER2\n+\tcase FFEINFO_kindtypeINTEGER2:\n+\t  val = ffebld_constant_integer2 (ffebld_conter (expr));\n+\t  break;\n+#endif\n+\n+#if FFETARGET_okINTEGER3\n+\tcase FFEINFO_kindtypeINTEGER3:\n+\t  val = ffebld_constant_integer3 (ffebld_conter (expr));\n+\t  break;\n+#endif\n+\n+\tdefault:\n+\t  assert (\"bad INTEGER constant kind type\" == NULL);\n+\t  /* Fall through. */\n+\tcase FFEINFO_kindtypeANY:\n+\t  return;\n+\t}\n+      ffests_printf_1D (s, \"%ld\", val);\n+    }\n+}\n+\n /* ffestd_R1102 -- PROGRAM statement\n \n    ffestd_R1102(name_token);"}]}