{"sha": "42056eaced812253def2d3be64b755a998c8f830", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDIwNTZlYWNlZDgxMjI1M2RlZjJkM2JlNjRiNzU1YTk5OGM4ZjgzMA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2014-04-24T21:20:28Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2014-04-24T21:20:28Z"}, "message": "c-parser.c (c_parser_omp_atomic): Allow seq_cst before atomic-clause...\n\ngcc/c/\n\t* c-parser.c (c_parser_omp_atomic): Allow seq_cst before\n\tatomic-clause, allow comma in between atomic-clause and\n\tseq_cst.\ngcc/cp/\n\t* parser.c (cp_parser_omp_atomic): Allow seq_cst before\n\tatomic-clause, allow comma in between atomic-clause and\n\tseq_cst.\ngcc/testsuite/\n\t* c-c++-common/gomp/atomic-16.c: Remove all dg-error directives.\n\tReplace load with read and store with write.\nlibgomp/\n\t* testsuite/libgomp.c++/atomic-14.C: Allow seq_cst and\n\tatomic type clauses in any order and optional comma in between.\n\t* testsuite/libgomp.c++/atomic-15.C: Likewise.\n\t* testsuite/libgomp.c/atomic-17.c: Likewise.\n\nFrom-SVN: r209762", "tree": {"sha": "eca87031145bd4f31013353e8d6e18d6304def16", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eca87031145bd4f31013353e8d6e18d6304def16"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/42056eaced812253def2d3be64b755a998c8f830", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42056eaced812253def2d3be64b755a998c8f830", "html_url": "https://github.com/Rust-GCC/gccrs/commit/42056eaced812253def2d3be64b755a998c8f830", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42056eaced812253def2d3be64b755a998c8f830/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f7468577f88cbfe33e0a5e9a2104a32f7e45c44f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7468577f88cbfe33e0a5e9a2104a32f7e45c44f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f7468577f88cbfe33e0a5e9a2104a32f7e45c44f"}], "stats": {"total": 204, "additions": 133, "deletions": 71}, "files": [{"sha": "3ee2594afd6980cb9fcb960d1e97ce583f45b0bc", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42056eaced812253def2d3be64b755a998c8f830/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42056eaced812253def2d3be64b755a998c8f830/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=42056eaced812253def2d3be64b755a998c8f830", "patch": "@@ -1,3 +1,9 @@\n+2014-04-24  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* c-parser.c (c_parser_omp_atomic): Allow seq_cst before\n+\tatomic-clause, allow comma in between atomic-clause and\n+\tseq_cst.\n+\n 2014-04-22  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c/59073"}, {"sha": "6eb235c5c431f1755016ac82879d6a263f17d5d4", "filename": "gcc/c/c-parser.c", "status": "modified", "additions": 25, "deletions": 5, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42056eaced812253def2d3be64b755a998c8f830/gcc%2Fc%2Fc-parser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42056eaced812253def2d3be64b755a998c8f830/gcc%2Fc%2Fc-parser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-parser.c?ref=42056eaced812253def2d3be64b755a998c8f830", "patch": "@@ -11195,6 +11195,18 @@ c_parser_omp_atomic (location_t loc, c_parser *parser)\n   bool swapped = false;\n   bool seq_cst = false;\n \n+  if (c_parser_next_token_is (parser, CPP_NAME))\n+    {\n+      const char *p = IDENTIFIER_POINTER (c_parser_peek_token (parser)->value);\n+      if (!strcmp (p, \"seq_cst\"))\n+\t{\n+\t  seq_cst = true;\n+\t  c_parser_consume_token (parser);\n+\t  if (c_parser_next_token_is (parser, CPP_COMMA)\n+\t      && c_parser_peek_2nd_token (parser)->type == CPP_NAME)\n+\t    c_parser_consume_token (parser);\n+\t}\n+    }\n   if (c_parser_next_token_is (parser, CPP_NAME))\n     {\n       const char *p = IDENTIFIER_POINTER (c_parser_peek_token (parser)->value);\n@@ -11212,13 +11224,21 @@ c_parser_omp_atomic (location_t loc, c_parser *parser)\n       if (p)\n \tc_parser_consume_token (parser);\n     }\n-  if (c_parser_next_token_is (parser, CPP_NAME))\n+  if (!seq_cst)\n     {\n-      const char *p = IDENTIFIER_POINTER (c_parser_peek_token (parser)->value);\n-      if (!strcmp (p, \"seq_cst\"))\n+      if (c_parser_next_token_is (parser, CPP_COMMA)\n+\t  && c_parser_peek_2nd_token (parser)->type == CPP_NAME)\n+\tc_parser_consume_token (parser);\n+\n+      if (c_parser_next_token_is (parser, CPP_NAME))\n \t{\n-\t  seq_cst = true;\n-\t  c_parser_consume_token (parser);\n+\t  const char *p\n+\t    = IDENTIFIER_POINTER (c_parser_peek_token (parser)->value);\n+\t  if (!strcmp (p, \"seq_cst\"))\n+\t    {\n+\t      seq_cst = true;\n+\t      c_parser_consume_token (parser);\n+\t    }\n \t}\n     }\n   c_parser_skip_to_pragma_eol (parser);"}, {"sha": "584046150bcfe352821cd549fe6e830e9e7cfa75", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42056eaced812253def2d3be64b755a998c8f830/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42056eaced812253def2d3be64b755a998c8f830/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=42056eaced812253def2d3be64b755a998c8f830", "patch": "@@ -1,3 +1,9 @@\n+2014-04-24  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* parser.c (cp_parser_omp_atomic): Allow seq_cst before\n+\tatomic-clause, allow comma in between atomic-clause and\n+\tseq_cst.\n+\n 2014-04-24  Marc Glisse  <marc.glisse@inria.fr>\n \n \tPR libstdc++/43622"}, {"sha": "c1d94ae92b52b1e10222b935533ae8c3ded49dca", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 27, "deletions": 7, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42056eaced812253def2d3be64b755a998c8f830/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42056eaced812253def2d3be64b755a998c8f830/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=42056eaced812253def2d3be64b755a998c8f830", "patch": "@@ -28529,6 +28529,20 @@ cp_parser_omp_atomic (cp_parser *parser, cp_token *pragma_tok)\n   bool structured_block = false;\n   bool seq_cst = false;\n \n+  if (cp_lexer_next_token_is (parser->lexer, CPP_NAME))\n+    {\n+      tree id = cp_lexer_peek_token (parser->lexer)->u.value;\n+      const char *p = IDENTIFIER_POINTER (id);\n+\n+      if (!strcmp (p, \"seq_cst\"))\n+\t{\n+\t  seq_cst = true;\n+\t  cp_lexer_consume_token (parser->lexer);\n+\t  if (cp_lexer_next_token_is (parser->lexer, CPP_COMMA)\n+\t      && cp_lexer_peek_nth_token (parser->lexer, 2)->type == CPP_NAME)\n+\t    cp_lexer_consume_token (parser->lexer);\n+\t}\n+    }\n   if (cp_lexer_next_token_is (parser->lexer, CPP_NAME))\n     {\n       tree id = cp_lexer_peek_token (parser->lexer)->u.value;\n@@ -28547,16 +28561,22 @@ cp_parser_omp_atomic (cp_parser *parser, cp_token *pragma_tok)\n       if (p)\n \tcp_lexer_consume_token (parser->lexer);\n     }\n-\n-  if (cp_lexer_next_token_is (parser->lexer, CPP_NAME))\n+  if (!seq_cst)\n     {\n-      tree id = cp_lexer_peek_token (parser->lexer)->u.value;\n-      const char *p = IDENTIFIER_POINTER (id);\n+      if (cp_lexer_next_token_is (parser->lexer, CPP_COMMA)\n+\t  && cp_lexer_peek_nth_token (parser->lexer, 2)->type == CPP_NAME)\n+\tcp_lexer_consume_token (parser->lexer);\n \n-      if (!strcmp (p, \"seq_cst\"))\n+      if (cp_lexer_next_token_is (parser->lexer, CPP_NAME))\n \t{\n-\t  seq_cst = true;\n-\t  cp_lexer_consume_token (parser->lexer);\n+\t  tree id = cp_lexer_peek_token (parser->lexer)->u.value;\n+\t  const char *p = IDENTIFIER_POINTER (id);\n+\n+\t  if (!strcmp (p, \"seq_cst\"))\n+\t    {\n+\t      seq_cst = true;\n+\t      cp_lexer_consume_token (parser->lexer);\n+\t    }\n \t}\n     }\n   cp_parser_require_pragma_eol (parser, pragma_tok);"}, {"sha": "5813e5e66e0de70ab222382b73b3b960277900be", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42056eaced812253def2d3be64b755a998c8f830/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42056eaced812253def2d3be64b755a998c8f830/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=42056eaced812253def2d3be64b755a998c8f830", "patch": "@@ -1,3 +1,8 @@\n+2014-04-24  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* c-c++-common/gomp/atomic-16.c: Remove all dg-error directives.\n+\tReplace load with read and store with write.\n+\n 2014-04-24  Jeff Law  <law@redhat.com>\n \n \tPR target/60822"}, {"sha": "9332396eaa5d5d56e3df080fe7c866158359d8e4", "filename": "gcc/testsuite/c-c++-common/gomp/atomic-16.c", "status": "modified", "additions": 20, "deletions": 20, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42056eaced812253def2d3be64b755a998c8f830/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fatomic-16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42056eaced812253def2d3be64b755a998c8f830/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fatomic-16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fatomic-16.c?ref=42056eaced812253def2d3be64b755a998c8f830", "patch": "@@ -7,28 +7,28 @@ void\n foo ()\n {\n   int v;\n-  #pragma omp atomic seq_cst load\t/* { dg-error \"expected end of line\" } */\n-  v = x;\t\t\t  \t/* { dg-error \"invalid form\" } */\n-  #pragma omp atomic seq_cst, load\t/* { dg-error \"expected end of line\" } */\n-  v = x;\t\t\t  \t/* { dg-error \"invalid form\" } */\n-  #pragma omp atomic seq_cst store\t/* { dg-error \"expected end of line\" } */\n-  x = v;\t\t\t  \t/* { dg-error \"invalid form\" } */\n-  #pragma omp atomic seq_cst ,store\t/* { dg-error \"expected end of line\" } */\n-  x = v;\t\t\t  \t/* { dg-error \"invalid form\" } */\n-  #pragma omp atomic seq_cst update\t/* { dg-error \"expected end of line\" } */\n+  #pragma omp atomic seq_cst read\n+  v = x;\n+  #pragma omp atomic seq_cst, read\n+  v = x;\n+  #pragma omp atomic seq_cst write\n+  x = v;\n+  #pragma omp atomic seq_cst ,write\n+  x = v;\n+  #pragma omp atomic seq_cst update\n   x += v;\n-  #pragma omp atomic seq_cst , update\t/* { dg-error \"expected end of line\" } */\n+  #pragma omp atomic seq_cst , update\n   x += v;\n-  #pragma omp atomic seq_cst capture\t/* { dg-error \"expected end of line\" } */\n-  v = x += 2;\t\t\t  \t/* { dg-error \"invalid form\" } */\n-  #pragma omp atomic seq_cst, capture\t/* { dg-error \"expected end of line\" } */\n-  v = x += 2;\t\t\t  \t/* { dg-error \"invalid form\" } */\n-  #pragma omp atomic load , seq_cst\t/* { dg-error \"expected end of line\" } */\n-  v = x;\t\t\t  \t/* { dg-error \"invalid form\" } */\n-  #pragma omp atomic store ,seq_cst\t/* { dg-error \"expected end of line\" } */\n-  x = v;\t\t\t  \t/* { dg-error \"invalid form\" } */\n-  #pragma omp atomic update, seq_cst\t/* { dg-error \"expected end of line\" } */\n+  #pragma omp atomic seq_cst capture\n+  v = x += 2;\n+  #pragma omp atomic seq_cst, capture\n+  v = x += 2;\n+  #pragma omp atomic read , seq_cst\n+  v = x;\n+  #pragma omp atomic write ,seq_cst\n+  x = v;\n+  #pragma omp atomic update, seq_cst\n   x += v;\n-  #pragma omp atomic capture, seq_cst\t/* { dg-error \"expected end of line\" } */\n+  #pragma omp atomic capture, seq_cst\n   v = x += 2;\n }"}, {"sha": "0b26b9fdb4a64921752077d4e75865c6f3f6b173", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42056eaced812253def2d3be64b755a998c8f830/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42056eaced812253def2d3be64b755a998c8f830/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=42056eaced812253def2d3be64b755a998c8f830", "patch": "@@ -1,5 +1,10 @@\n 2014-04-24  Jakub Jelinek  <jakub@redhat.com>\n \n+\t* testsuite/libgomp.c++/atomic-14.C: Allow seq_cst and\n+\tatomic type clauses in any order and optional comma in between.\n+\t* testsuite/libgomp.c++/atomic-15.C: Likewise.\n+\t* testsuite/libgomp.c/atomic-17.c: Likewise.\n+\n \t* testsuite/libgomp.c/simd-7.c: New test.\n \t* testsuite/libgomp.c/simd-8.c: New test.\n \t* testsuite/libgomp.c/simd-9.c: New test."}, {"sha": "dccea3acd803a4d7a60e955b6f36d27f3a3b161a", "filename": "libgomp/testsuite/libgomp.c++/atomic-14.C", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42056eaced812253def2d3be64b755a998c8f830/libgomp%2Ftestsuite%2Flibgomp.c%2B%2B%2Fatomic-14.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42056eaced812253def2d3be64b755a998c8f830/libgomp%2Ftestsuite%2Flibgomp.c%2B%2B%2Fatomic-14.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.c%2B%2B%2Fatomic-14.C?ref=42056eaced812253def2d3be64b755a998c8f830", "patch": "@@ -13,77 +13,77 @@ main ()\n     v = x;\n   if (v != 3)\n     abort ();\n-  #pragma omp atomic update seq_cst\n+  #pragma omp atomic seq_cst update\n     x = 3 * 2 * 1 + x;\n-  #pragma omp atomic read seq_cst\n+  #pragma omp atomic read, seq_cst\n     v = x;\n   if (v != 9)\n     abort ();\n-  #pragma omp atomic capture seq_cst\n+  #pragma omp atomic seq_cst, capture\n     v = x = x | 16;\n   if (v != 25)\n     abort ();\n   #pragma omp atomic capture seq_cst\n     v = x = x + 14 * 2 / 4;\n   if (v != 32)\n     abort ();\n-  #pragma omp atomic capture seq_cst\n+  #pragma omp atomic seq_cst capture\n     v = x = 5 | x;\n   if (v != 37)\n     abort ();\n-  #pragma omp atomic capture seq_cst\n+  #pragma omp atomic capture, seq_cst\n     v = x = 40 + 12 - 2 - 7 - x;\n   if (v != 6)\n     abort ();\n-  #pragma omp atomic read seq_cst\n+  #pragma omp atomic seq_cst read\n     v = x;\n   if (v != 6)\n     abort ();\n   #pragma omp atomic capture seq_cst\n     { v = x; x = 3 + x; }\n   if (v != 6)\n     abort ();\n-  #pragma omp atomic capture seq_cst\n+  #pragma omp atomic seq_cst capture\n     { v = x; x = -1 * -1 * -1 * -1 - x; }\n   if (v != 9)\n     abort ();\n   #pragma omp atomic read seq_cst\n     v = x;\n   if (v != -8)\n     abort ();\n-  #pragma omp atomic capture seq_cst\n+  #pragma omp atomic capture, seq_cst\n     { x = 2 * 2 - x; v = x; }\n   if (v != 12)\n     abort ();\n-  #pragma omp atomic capture seq_cst\n+  #pragma omp atomic seq_cst capture\n     { x = 7 & x; v = x; }\n   if (v != 4)\n     abort ();\n   #pragma omp atomic capture seq_cst\n     { v = x; x = 6; }\n   if (v != 4)\n     abort ();\n-  #pragma omp atomic read seq_cst\n+  #pragma omp atomic read, seq_cst\n     v = x;\n   if (v != 6)\n     abort ();\n   #pragma omp atomic capture seq_cst\n     { v = x; x = 7 * 8 + 23; }\n   if (v != 6)\n     abort ();\n-  #pragma omp atomic read seq_cst\n+  #pragma omp atomic seq_cst, read\n     v = x;\n   if (v != 79)\n     abort ();\n-  #pragma omp atomic capture seq_cst\n+  #pragma omp atomic capture , seq_cst\n     { v = x; x = 23 + 6 * 4; }\n   if (v != 79)\n     abort ();\n   #pragma omp atomic read seq_cst\n     v = x;\n   if (v != 47)\n     abort ();\n-  #pragma omp atomic capture seq_cst\n+  #pragma omp atomic seq_cst capture\n     { v = x; x = l ? 17 : 12; }\n   if (v != 47)\n     abort ();"}, {"sha": "9abefb646889755605345fe8ded4a3581338d2a9", "filename": "libgomp/testsuite/libgomp.c++/atomic-15.C", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42056eaced812253def2d3be64b755a998c8f830/libgomp%2Ftestsuite%2Flibgomp.c%2B%2B%2Fatomic-15.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42056eaced812253def2d3be64b755a998c8f830/libgomp%2Ftestsuite%2Flibgomp.c%2B%2B%2Fatomic-15.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.c%2B%2B%2Fatomic-15.C?ref=42056eaced812253def2d3be64b755a998c8f830", "patch": "@@ -14,77 +14,77 @@ foo ()\n     v = x;\n   if (v != 3)\n     abort ();\n-  #pragma omp atomic update seq_cst\n+  #pragma omp atomic seq_cst update\n     x = 3 * 2 * 1 + x;\n-  #pragma omp atomic read seq_cst\n+  #pragma omp atomic read, seq_cst\n     v = x;\n   if (v != 9)\n     abort ();\n-  #pragma omp atomic capture seq_cst\n+  #pragma omp atomic seq_cst, capture\n     v = x = x | 16;\n   if (v != 25)\n     abort ();\n   #pragma omp atomic capture seq_cst\n     v = x = x + 14 * 2 / 4;\n   if (v != 32)\n     abort ();\n-  #pragma omp atomic capture seq_cst\n+  #pragma omp atomic seq_cst capture\n     v = x = 5 | x;\n   if (v != 37)\n     abort ();\n-  #pragma omp atomic capture seq_cst\n+  #pragma omp atomic capture, seq_cst\n     v = x = 40 + 12 - 2 - 7 - x;\n   if (v != 6)\n     abort ();\n-  #pragma omp atomic read seq_cst\n+  #pragma omp atomic seq_cst read\n     v = x;\n   if (v != 6)\n     abort ();\n   #pragma omp atomic capture seq_cst\n     { v = x; x = 3 + x; }\n   if (v != 6)\n     abort ();\n-  #pragma omp atomic capture seq_cst\n+  #pragma omp atomic seq_cst capture\n     { v = x; x = -1 * -1 * -1 * -1 - x; }\n   if (v != 9)\n     abort ();\n   #pragma omp atomic read seq_cst\n     v = x;\n   if (v != -8)\n     abort ();\n-  #pragma omp atomic capture seq_cst\n+  #pragma omp atomic capture, seq_cst\n     { x = 2 * 2 - x; v = x; }\n   if (v != 12)\n     abort ();\n-  #pragma omp atomic capture seq_cst\n+  #pragma omp atomic seq_cst capture\n     { x = 7 & x; v = x; }\n   if (v != 4)\n     abort ();\n   #pragma omp atomic capture seq_cst\n     { v = x; x = 6; }\n   if (v != 4)\n     abort ();\n-  #pragma omp atomic read seq_cst\n+  #pragma omp atomic read, seq_cst\n     v = x;\n   if (v != 6)\n     abort ();\n   #pragma omp atomic capture seq_cst\n     { v = x; x = 7 * 8 + 23; }\n   if (v != 6)\n     abort ();\n-  #pragma omp atomic read seq_cst\n+  #pragma omp atomic seq_cst, read\n     v = x;\n   if (v != 79)\n     abort ();\n-  #pragma omp atomic capture seq_cst\n+  #pragma omp atomic capture , seq_cst\n     { v = x; x = 23 + 6 * 4; }\n   if (v != 79)\n     abort ();\n   #pragma omp atomic read seq_cst\n     v = x;\n   if (v != 47)\n     abort ();\n-  #pragma omp atomic capture seq_cst\n+  #pragma omp atomic seq_cst capture\n     { v = x; x = l ? 17 : 12; }\n   if (v != 47)\n     abort ();"}, {"sha": "147ab26a95302f6e0e12052cf9d17a687f8182ac", "filename": "libgomp/testsuite/libgomp.c/atomic-17.c", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42056eaced812253def2d3be64b755a998c8f830/libgomp%2Ftestsuite%2Flibgomp.c%2Fatomic-17.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42056eaced812253def2d3be64b755a998c8f830/libgomp%2Ftestsuite%2Flibgomp.c%2Fatomic-17.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.c%2Fatomic-17.c?ref=42056eaced812253def2d3be64b755a998c8f830", "patch": "@@ -13,77 +13,77 @@ main ()\n     v = x;\n   if (v != 3)\n     abort ();\n-  #pragma omp atomic update seq_cst\n+  #pragma omp atomic seq_cst update\n     x = 3 * 2 * 1 + x;\n-  #pragma omp atomic read seq_cst\n+  #pragma omp atomic read, seq_cst\n     v = x;\n   if (v != 9)\n     abort ();\n-  #pragma omp atomic capture seq_cst\n+  #pragma omp atomic seq_cst, capture\n     v = x = x | 16;\n   if (v != 25)\n     abort ();\n   #pragma omp atomic capture seq_cst\n     v = x = x + 14 * 2 / 4;\n   if (v != 32)\n     abort ();\n-  #pragma omp atomic capture seq_cst\n+  #pragma omp atomic seq_cst capture\n     v = x = 5 | x;\n   if (v != 37)\n     abort ();\n-  #pragma omp atomic capture seq_cst\n+  #pragma omp atomic capture, seq_cst\n     v = x = 40 + 12 - 2 - 7 - x;\n   if (v != 6)\n     abort ();\n-  #pragma omp atomic read seq_cst\n+  #pragma omp atomic seq_cst read\n     v = x;\n   if (v != 6)\n     abort ();\n   #pragma omp atomic capture seq_cst\n     { v = x; x = 3 + x; }\n   if (v != 6)\n     abort ();\n-  #pragma omp atomic capture seq_cst\n+  #pragma omp atomic seq_cst capture\n     { v = x; x = -1 * -1 * -1 * -1 - x; }\n   if (v != 9)\n     abort ();\n   #pragma omp atomic read seq_cst\n     v = x;\n   if (v != -8)\n     abort ();\n-  #pragma omp atomic capture seq_cst\n+  #pragma omp atomic capture, seq_cst\n     { x = 2 * 2 - x; v = x; }\n   if (v != 12)\n     abort ();\n-  #pragma omp atomic capture seq_cst\n+  #pragma omp atomic seq_cst capture\n     { x = 7 & x; v = x; }\n   if (v != 4)\n     abort ();\n   #pragma omp atomic capture seq_cst\n     { v = x; x = 6; }\n   if (v != 4)\n     abort ();\n-  #pragma omp atomic read seq_cst\n+  #pragma omp atomic read, seq_cst\n     v = x;\n   if (v != 6)\n     abort ();\n   #pragma omp atomic capture seq_cst\n     { v = x; x = 7 * 8 + 23; }\n   if (v != 6)\n     abort ();\n-  #pragma omp atomic read seq_cst\n+  #pragma omp atomic seq_cst, read\n     v = x;\n   if (v != 79)\n     abort ();\n-  #pragma omp atomic capture seq_cst\n+  #pragma omp atomic capture , seq_cst\n     { v = x; x = 23 + 6 * 4; }\n   if (v != 79)\n     abort ();\n   #pragma omp atomic read seq_cst\n     v = x;\n   if (v != 47)\n     abort ();\n-  #pragma omp atomic capture seq_cst\n+  #pragma omp atomic seq_cst capture\n     { v = x; x = l ? 17 : 12; }\n   if (v != 47)\n     abort ();"}]}