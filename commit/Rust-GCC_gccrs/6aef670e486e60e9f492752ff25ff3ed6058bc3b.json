{"sha": "6aef670e486e60e9f492752ff25ff3ed6058bc3b", "node_id": "C_kwDOANBUbNoAKDZhZWY2NzBlNDg2ZTYwZTlmNDkyNzUyZmYyNWZmM2VkNjA1OGJjM2I", "commit": {"author": {"name": "Roger Sayle", "email": "roger@nextmovesoftware.com", "date": "2022-03-16T09:27:33Z"}, "committer": {"name": "Roger Sayle", "email": "roger@nextmovesoftware.com", "date": "2022-03-16T09:27:33Z"}, "message": "Performance/size improvement to single_use when matching GIMPLE.\n\nThis patch improves the implementation of single_use as used in code\ngenerated from match.pd for patterns using :s.  The current implementation\ncontains the logic \"has_zero_uses (t) || has_single_use (t)\" which\nperforms a loop over the uses to first check if there are zero non-debug\nuses [which is rare], then another loop over these uses to check if there\nis exactly one non-debug use.  This can be better implemented using a\nsingle loop.\n\nThis function is currently inlined over 800 times in gimple-match.cc,\nwhose .o on x86_64-pc-linux-gnu is now up to 30 Mbytes, so speeding up\nand shrinking this function should help offset the growth in match.pd\nfor GCC 12.\n\nI've also done an analysis of the stage3 sizes of gimple-match.o on\nx86_64-pc-linux-gnu, which I believe is dominated by debug information,\nthe .o file is 30MB in stage3, but only 4.8M in stage2.  Before my\nproposed patch gimple-match.o is 31385160 bytes.  The patch as proposed\nyesterday (using a single loop in single_use) reduces that to 31105040\nbytes, saving 280120 bytes.  The suggestion to remove the \"inline\"\nkeyword saves only 56 more bytes, but annotating ATTRIBUTE_PURE on a\nfunction prototype was curiously effective, saving 1888 bytes.\n\nbefore:   31385160\nafter:    31105040\tsaved 280120\n-inline:  31104984\tsaved 56\n+pure:    31103096\tsaved 1888\n\n2022-03-16  Roger Sayle  <roger@nextmovesoftware.com>\n\t    Richard Biener  <rguenther@suse.de>\n\ngcc/ChangeLog\n\t* gimple-match-head.cc (single_use): Implement inline using a\n\tsingle loop.", "tree": {"sha": "3eff665511e2a06947e16d04fb451ffed84fad8c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3eff665511e2a06947e16d04fb451ffed84fad8c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6aef670e486e60e9f492752ff25ff3ed6058bc3b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6aef670e486e60e9f492752ff25ff3ed6058bc3b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6aef670e486e60e9f492752ff25ff3ed6058bc3b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6aef670e486e60e9f492752ff25ff3ed6058bc3b/comments", "author": {"login": "rogersayle", "id": 13512313, "node_id": "MDQ6VXNlcjEzNTEyMzEz", "avatar_url": "https://avatars.githubusercontent.com/u/13512313?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rogersayle", "html_url": "https://github.com/rogersayle", "followers_url": "https://api.github.com/users/rogersayle/followers", "following_url": "https://api.github.com/users/rogersayle/following{/other_user}", "gists_url": "https://api.github.com/users/rogersayle/gists{/gist_id}", "starred_url": "https://api.github.com/users/rogersayle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rogersayle/subscriptions", "organizations_url": "https://api.github.com/users/rogersayle/orgs", "repos_url": "https://api.github.com/users/rogersayle/repos", "events_url": "https://api.github.com/users/rogersayle/events{/privacy}", "received_events_url": "https://api.github.com/users/rogersayle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rogersayle", "id": 13512313, "node_id": "MDQ6VXNlcjEzNTEyMzEz", "avatar_url": "https://avatars.githubusercontent.com/u/13512313?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rogersayle", "html_url": "https://github.com/rogersayle", "followers_url": "https://api.github.com/users/rogersayle/followers", "following_url": "https://api.github.com/users/rogersayle/following{/other_user}", "gists_url": "https://api.github.com/users/rogersayle/gists{/gist_id}", "starred_url": "https://api.github.com/users/rogersayle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rogersayle/subscriptions", "organizations_url": "https://api.github.com/users/rogersayle/orgs", "repos_url": "https://api.github.com/users/rogersayle/repos", "events_url": "https://api.github.com/users/rogersayle/events{/privacy}", "received_events_url": "https://api.github.com/users/rogersayle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7690bee9f36ee02b7ad0b8a7e7a3e08357890dc0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7690bee9f36ee02b7ad0b8a7e7a3e08357890dc0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7690bee9f36ee02b7ad0b8a7e7a3e08357890dc0"}], "stats": {"total": 24, "additions": 21, "deletions": 3}, "files": [{"sha": "1c74d38088fc549b0f4a39d4c7e046bf06f5256a", "filename": "gcc/gimple-match-head.cc", "status": "modified", "additions": 21, "deletions": 3, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aef670e486e60e9f492752ff25ff3ed6058bc3b/gcc%2Fgimple-match-head.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aef670e486e60e9f492752ff25ff3ed6058bc3b/gcc%2Fgimple-match-head.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-match-head.cc?ref=6aef670e486e60e9f492752ff25ff3ed6058bc3b", "patch": "@@ -1160,10 +1160,28 @@ types_match (tree t1, tree t2)\n    non-SSA_NAME (ie constants) and zero uses to cope with uses\n    that aren't linked up yet.  */\n \n-static inline bool\n-single_use (tree t)\n+static bool\n+single_use (const_tree) ATTRIBUTE_PURE;\n+\n+static bool\n+single_use (const_tree t)\n {\n-  return TREE_CODE (t) != SSA_NAME || has_zero_uses (t) || has_single_use (t);\n+  if (TREE_CODE (t) != SSA_NAME)\n+    return true;\n+\n+  /* Inline return has_zero_uses (t) || has_single_use (t);  */\n+  const ssa_use_operand_t *const head = &(SSA_NAME_IMM_USE_NODE (t));\n+  const ssa_use_operand_t *ptr;\n+  bool single = false;\n+\n+  for (ptr = head->next; ptr != head; ptr = ptr->next)\n+    if (USE_STMT(ptr) && !is_gimple_debug (USE_STMT (ptr)))\n+      {\n+        if (single)\n+          return false;\n+\tsingle = true;\n+      }\n+  return true;\n }\n \n /* Return true if math operations should be canonicalized,"}]}