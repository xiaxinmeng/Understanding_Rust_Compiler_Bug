{"sha": "9beb7d208292359f61d839fefa95153590df4200", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWJlYjdkMjA4MjkyMzU5ZjYxZDgzOWZlZmE5NTE1MzU5MGRmNDIwMA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2002-09-04T23:03:31Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2002-09-04T23:03:31Z"}, "message": "cse.c (cse_insn): Avoid subreg games if the equivalence is already in the proper mode.\n\n        * cse.c (cse_insn): Avoid subreg games if the equivalence\n        is already in the proper mode.\n\nFrom-SVN: r56819", "tree": {"sha": "1fe61930dee048810002f4d43ff864b113cc9cf3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1fe61930dee048810002f4d43ff864b113cc9cf3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9beb7d208292359f61d839fefa95153590df4200", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9beb7d208292359f61d839fefa95153590df4200", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9beb7d208292359f61d839fefa95153590df4200", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9beb7d208292359f61d839fefa95153590df4200/comments", "author": null, "committer": null, "parents": [{"sha": "a038cc83d66e70c608995e066de22ced97b8ad38", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a038cc83d66e70c608995e066de22ced97b8ad38", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a038cc83d66e70c608995e066de22ced97b8ad38"}], "stats": {"total": 30, "additions": 22, "deletions": 8}, "files": [{"sha": "d2d03983631ee971e10e1c44deb5ed44c276f628", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9beb7d208292359f61d839fefa95153590df4200/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9beb7d208292359f61d839fefa95153590df4200/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9beb7d208292359f61d839fefa95153590df4200", "patch": "@@ -1,3 +1,8 @@\n+2002-09-04  Richard Henderson  <rth@redhat.com>\n+\n+\t* cse.c (cse_insn): Avoid subreg games if the equivalence\n+\tis already in the proper mode.\n+\n 2002-09-04  Eric Botcazou  <ebotcazou@multimania.com>\n \n \tPR c/7102"}, {"sha": "7f0365aa1736712f61aaf7a6de181d84d133e7f0", "filename": "gcc/cse.c", "status": "modified", "additions": 17, "deletions": 8, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9beb7d208292359f61d839fefa95153590df4200/gcc%2Fcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9beb7d208292359f61d839fefa95153590df4200/gcc%2Fcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.c?ref=9beb7d208292359f61d839fefa95153590df4200", "patch": "@@ -6203,14 +6203,23 @@ cse_insn (insn, libcall_insn)\n \t\t    && ! exp_equiv_p (elt->exp, elt->exp, 1, 0))\n \t\t  continue;\n \n-\t\t/* Calculate big endian correction for the SUBREG_BYTE\n-\t\t   (or equivalent).  We have already checked that M1\n-\t\t   ( GET_MODE (dest) ) is not narrower than M2 (new_mode).  */\n-\t\tif (BYTES_BIG_ENDIAN)\n-\t\t  byte = (GET_MODE_SIZE (GET_MODE (dest))\n-\t\t\t  - GET_MODE_SIZE (new_mode));\n-\t\tnew_src = simplify_gen_subreg (new_mode, elt->exp,\n-\t\t\t\t\t       GET_MODE (dest), byte);\n+\t\t/* We may have already been playing subreg games.  If the\n+\t\t   mode is already correct for the destination, use it.  */\n+\t\tif (GET_MODE (elt->exp) == new_mode)\n+\t\t  new_src = elt->exp;\n+\t\telse\n+\t\t  {\n+\t\t    /* Calculate big endian correction for the SUBREG_BYTE.\n+\t\t       We have already checked that M1 (GET_MODE (dest))\n+\t\t       is not narrower than M2 (new_mode).  */\n+\t\t    if (BYTES_BIG_ENDIAN)\n+\t\t      byte = (GET_MODE_SIZE (GET_MODE (dest))\n+\t\t\t      - GET_MODE_SIZE (new_mode));\n+\n+\t\t    new_src = simplify_gen_subreg (new_mode, elt->exp,\n+\t\t\t\t\t           GET_MODE (dest), byte);\n+\t\t  }\n+\n \t\t/* The call to simplify_gen_subreg fails if the value\n \t\t   is VOIDmode, yet we can't do any simplification, e.g.\n \t\t   for EXPR_LISTs denoting function call results."}]}