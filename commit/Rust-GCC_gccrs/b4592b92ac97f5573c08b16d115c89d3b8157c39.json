{"sha": "b4592b92ac97f5573c08b16d115c89d3b8157c39", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjQ1OTJiOTJhYzk3ZjU1NzNjMDhiMTZkMTE1Yzg5ZDNiODE1N2MzOQ==", "commit": {"author": {"name": "Dodji Seketeli", "email": "dodji@redhat.com", "date": "2011-06-07T11:12:50Z"}, "committer": {"name": "Dodji Seketeli", "email": "dodji@gcc.gnu.org", "date": "2011-06-07T11:12:50Z"}, "message": "re PR debug/49130 (discrepancies between DW_AT_name and demangler)\n\nFix PR debug/49130\n\ngcc/c-family/\n\n\t* c-pretty-print.c (pp_c_integer_constant): Consider the canonical\n\ttype when using pointer comparison to compare types.\n\ngcc/testsuite/\n\n\t* g++.dg/debug/dwarf2/integer-typedef.C: New test.\n\nFrom-SVN: r174742", "tree": {"sha": "fea88d620a009b1f7a315b8bb2324aecb169c193", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fea88d620a009b1f7a315b8bb2324aecb169c193"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b4592b92ac97f5573c08b16d115c89d3b8157c39", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4592b92ac97f5573c08b16d115c89d3b8157c39", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b4592b92ac97f5573c08b16d115c89d3b8157c39", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4592b92ac97f5573c08b16d115c89d3b8157c39/comments", "author": null, "committer": null, "parents": [{"sha": "f373314fb8acc3d6dab8670008dc9338171f8ab4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f373314fb8acc3d6dab8670008dc9338171f8ab4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f373314fb8acc3d6dab8670008dc9338171f8ab4"}], "stats": {"total": 48, "additions": 46, "deletions": 2}, "files": [{"sha": "f0592f5390bcef89d88dc4538de56d43dd719d4e", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4592b92ac97f5573c08b16d115c89d3b8157c39/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4592b92ac97f5573c08b16d115c89d3b8157c39/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=b4592b92ac97f5573c08b16d115c89d3b8157c39", "patch": "@@ -1,3 +1,9 @@\n+2011-06-07  Dodji Seketeli  <dodji@redhat.com>\n+\n+\tPR debug/49130\n+\t* c-pretty-print.c (pp_c_integer_constant): Consider the canonical\n+    \ttype when using pointer comparison to compare types.\n+\n 2011-06-02  Jonathan Wakely  <jwakely.gcc@gmail.com>\n \n \t* c.opt: Add -Wdelete-non-virtual-dtor."}, {"sha": "1be3dd4749448c031aec8c463088050526798ddd", "filename": "gcc/c-family/c-pretty-print.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4592b92ac97f5573c08b16d115c89d3b8157c39/gcc%2Fc-family%2Fc-pretty-print.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4592b92ac97f5573c08b16d115c89d3b8157c39/gcc%2Fc-family%2Fc-pretty-print.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-pretty-print.c?ref=b4592b92ac97f5573c08b16d115c89d3b8157c39", "patch": "@@ -1,5 +1,5 @@\n /* Subroutines common to both C and C++ pretty-printers.\n-   Copyright (C) 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010\n+   Copyright (C) 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011\n    Free Software Foundation, Inc.\n    Contributed by Gabriel Dos Reis <gdr@integrable-solutions.net>\n \n@@ -901,7 +901,12 @@ pp_c_string_literal (c_pretty_printer *pp, tree s)\n static void\n pp_c_integer_constant (c_pretty_printer *pp, tree i)\n {\n-  tree type = TREE_TYPE (i);\n+  /* We are going to compare the type of I to other types using\n+     pointer comparison so we need to use its canonical type.  */\n+  tree type =\n+    TYPE_CANONICAL (TREE_TYPE (i))\n+    ? TYPE_CANONICAL (TREE_TYPE (i))\n+    : TREE_TYPE (i);\n \n   if (TREE_INT_CST_HIGH (i) == 0)\n     pp_wide_integer (pp, TREE_INT_CST_LOW (i));"}, {"sha": "179569065eb73f304bb79aac698233273c063eea", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4592b92ac97f5573c08b16d115c89d3b8157c39/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4592b92ac97f5573c08b16d115c89d3b8157c39/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b4592b92ac97f5573c08b16d115c89d3b8157c39", "patch": "@@ -1,3 +1,8 @@\n+2011-06-07  Dodji Seketeli  <dodji@redhat.com>\n+\n+\tPR debug/49130\n+\t* g++.dg/debug/dwarf2/integer-typedef.C: New test.\n+\n 2011-06-07  Andrew Stubbs  <ams@codesourcery.com>\n \n \t* gcc.target/arm/smlatb-1.c: New file."}, {"sha": "42b3c997f38bd77a60f0bdaf0120fe4c95bbe41f", "filename": "gcc/testsuite/g++.dg/debug/dwarf2/integer-typedef.C", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4592b92ac97f5573c08b16d115c89d3b8157c39/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Finteger-typedef.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4592b92ac97f5573c08b16d115c89d3b8157c39/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Finteger-typedef.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Finteger-typedef.C?ref=b4592b92ac97f5573c08b16d115c89d3b8157c39", "patch": "@@ -0,0 +1,28 @@\n+// Origin: PR debug/49130\n+// { dg-options \"-g -dA\" }\n+\n+typedef long unsigned int size_t;\n+static const size_t foo = 2048;\n+\n+template<size_t size>\n+struct S\n+{\n+  void f(size_t);\n+};\n+\n+template<size_t size>\n+inline void\n+S<size>::f(size_t)\n+{\n+  size_t i = size;\n+}\n+\n+int\n+main()\n+{\n+  S<foo> s1;\n+  s1.f(10);\n+}\n+\n+// { dg-final {scan-assembler-times \"\\[^\\n\\r\\]*DW_AT_name: \\\"S<2048ul>\\\"\" 1 } }\n+// { dg-final {scan-assembler-times \"\\[^\\n\\r\\]*DW_AT_MIPS_linkage_name: \\\"_ZN1SILm2048EE1fEm\\\"\" 1 } }"}]}