{"sha": "dfd9f74cff3bf7b579b99e55995b41549c74a50f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGZkOWY3NGNmZjNiZjdiNTc5Yjk5ZTU1OTk1YjQxNTQ5Yzc0YTUwZg==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2005-02-21T14:33:36Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2005-02-21T14:33:36Z"}, "message": "tree-outof-ssa.c (SSANORM_REMOVE_ALL_PHIS): Remove.\n\n\t* tree-outof-ssa.c (SSANORM_REMOVE_ALL_PHIS): Remove.\n\t(SSANORM_COALESCE_PARTITIONS, SSANORM_USE_COALESCE_LIST):\n\tAdjust their definitions.\n\t(remove_ssa_form): Don't check for SSANORM_REMOVE_ALL_PHIS.\n\t(rewrite_out_of_ssa): Don't use SSANORM_REMOVE_ALL_PHIS.\n\nFrom-SVN: r95330", "tree": {"sha": "e0b7e686123f58a35e5362c9109bcd6e2c089c52", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e0b7e686123f58a35e5362c9109bcd6e2c089c52"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dfd9f74cff3bf7b579b99e55995b41549c74a50f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dfd9f74cff3bf7b579b99e55995b41549c74a50f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dfd9f74cff3bf7b579b99e55995b41549c74a50f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dfd9f74cff3bf7b579b99e55995b41549c74a50f/comments", "author": null, "committer": null, "parents": [{"sha": "da7fdff6e1c40d02996d462bd978774366a860b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da7fdff6e1c40d02996d462bd978774366a860b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da7fdff6e1c40d02996d462bd978774366a860b8"}], "stats": {"total": 19, "additions": 12, "deletions": 7}, "files": [{"sha": "eb1fc7297d5677a08749ba06d088dd6b50ce792d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dfd9f74cff3bf7b579b99e55995b41549c74a50f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dfd9f74cff3bf7b579b99e55995b41549c74a50f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dfd9f74cff3bf7b579b99e55995b41549c74a50f", "patch": "@@ -1,3 +1,11 @@\n+2005-02-21  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* tree-outof-ssa.c (SSANORM_REMOVE_ALL_PHIS): Remove.\n+\t(SSANORM_COALESCE_PARTITIONS, SSANORM_USE_COALESCE_LIST):\n+\tAdjust their definitions.\n+\t(remove_ssa_form): Don't check for SSANORM_REMOVE_ALL_PHIS.\n+\t(rewrite_out_of_ssa): Don't use SSANORM_REMOVE_ALL_PHIS.\n+\n 2005-02-21  Ulrich Weigand  <uweigand@de.ibm.com>\n \n \t* dbxout.c (dbxout_function_end): Emit Lscope label always."}, {"sha": "e79b97d02db3438ac7827841291560a89f6941ec", "filename": "gcc/tree-outof-ssa.c", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dfd9f74cff3bf7b579b99e55995b41549c74a50f/gcc%2Ftree-outof-ssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dfd9f74cff3bf7b579b99e55995b41549c74a50f/gcc%2Ftree-outof-ssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-outof-ssa.c?ref=dfd9f74cff3bf7b579b99e55995b41549c74a50f", "patch": "@@ -51,9 +51,8 @@ Boston, MA 02111-1307, USA.  */\n \n #define SSANORM_PERFORM_TER\t\t0x1\n #define SSANORM_COMBINE_TEMPS\t\t0x2\n-#define SSANORM_REMOVE_ALL_PHIS\t\t0x4\n-#define SSANORM_COALESCE_PARTITIONS\t0x8\n-#define SSANORM_USE_COALESCE_LIST\t0x10\n+#define SSANORM_COALESCE_PARTITIONS\t0x4\n+#define SSANORM_USE_COALESCE_LIST\t0x8\n \n /* Used to hold all the components required to do SSA PHI elimination.\n    The node and pred/succ list is a simple linear list of nodes and\n@@ -2382,9 +2381,7 @@ remove_ssa_form (FILE *dump, var_map map, int flags)\n       for (phi = phi_nodes (bb); phi; phi = next)\n \t{\n \t  next = PHI_CHAIN (phi);\n-\t  if ((flags & SSANORM_REMOVE_ALL_PHIS) \n-\t      || var_to_partition (map, PHI_RESULT (phi)) != NO_PARTITION)\n-\t    remove_phi_node (phi, NULL_TREE, bb);\n+\t  remove_phi_node (phi, NULL_TREE, bb);\n \t}\n     }\n \n@@ -2492,7 +2489,7 @@ rewrite_out_of_ssa (void)\n {\n   var_map map;\n   int var_flags = 0;\n-  int ssa_flags = (SSANORM_REMOVE_ALL_PHIS | SSANORM_USE_COALESCE_LIST);\n+  int ssa_flags = SSANORM_USE_COALESCE_LIST;\n \n   /* If elimination of a PHI requires inserting a copy on a backedge,\n      then we will have to split the backedge which has numerous"}]}