{"sha": "567d5f3d62fba2a23a9e975f7e7c7b61bb67cf24", "node_id": "C_kwDOANBUbNoAKDU2N2Q1ZjNkNjJmYmEyYTIzYTllOTc1ZjdlN2M3YjYxYmI2N2NmMjQ", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-11-27T12:00:55Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-11-27T12:00:55Z"}, "message": "bswap: Fix UB in find_bswap_or_nop_finalize [PR103435]\n\nOn gcc.c-torture/execute/pr103376.c in the following code we trigger UB\nin the compiler.  n->range is 8 because it is 64-bit load and rsize is 0\nbecause it is a bswap sequence with load and known to be 0:\n  /* Find real size of result (highest non-zero byte).  */\n  if (n->base_addr)\n    for (tmpn = n->n, rsize = 0; tmpn; tmpn >>= BITS_PER_MARKER, rsize++);\n  else\n    rsize = n->range;\nThe shifts then shift uint64_t by 64 bits.  For this case mask is 0\nand we want both *cmpxchg and *cmpnop as 0, the operation can be done as\nboth nop and bswap and callers will prefer nop.\n\n2021-11-27  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR tree-optimization/103435\n\t* gimple-ssa-store-merging.c (find_bswap_or_nop_finalize): Avoid UB if\n\tn->range - rsize == 8, just clear both *cmpnop and *cmpxchg in that\n\tcase.", "tree": {"sha": "6b02eb90bb598a6a26524e4c7f0872d41125730b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6b02eb90bb598a6a26524e4c7f0872d41125730b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/567d5f3d62fba2a23a9e975f7e7c7b61bb67cf24", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/567d5f3d62fba2a23a9e975f7e7c7b61bb67cf24", "html_url": "https://github.com/Rust-GCC/gccrs/commit/567d5f3d62fba2a23a9e975f7e7c7b61bb67cf24", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/567d5f3d62fba2a23a9e975f7e7c7b61bb67cf24/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d9c8a0238fc8f76e03c4dd0380eacc6cacec55c9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9c8a0238fc8f76e03c4dd0380eacc6cacec55c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d9c8a0238fc8f76e03c4dd0380eacc6cacec55c9"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "a00370e2a374f845801a76ae4a6ba3099154b4ed", "filename": "gcc/gimple-ssa-store-merging.c", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567d5f3d62fba2a23a9e975f7e7c7b61bb67cf24/gcc%2Fgimple-ssa-store-merging.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567d5f3d62fba2a23a9e975f7e7c7b61bb67cf24/gcc%2Fgimple-ssa-store-merging.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-ssa-store-merging.c?ref=567d5f3d62fba2a23a9e975f7e7c7b61bb67cf24", "patch": "@@ -871,12 +871,18 @@ find_bswap_or_nop_finalize (struct symbolic_number *n, uint64_t *cmpxchg,\n \t{\n \t  mask = ((uint64_t) 1 << (rsize * BITS_PER_MARKER)) - 1;\n \t  *cmpxchg &= mask;\n-\t  *cmpnop >>= (n->range - rsize) * BITS_PER_MARKER;\n+\t  if (n->range - rsize == sizeof (int64_t))\n+\t    *cmpnop = 0;\n+\t  else\n+\t    *cmpnop >>= (n->range - rsize) * BITS_PER_MARKER;\n \t}\n       else\n \t{\n \t  mask = ((uint64_t) 1 << (rsize * BITS_PER_MARKER)) - 1;\n-\t  *cmpxchg >>= (n->range - rsize) * BITS_PER_MARKER;\n+\t  if (n->range - rsize == sizeof (int64_t))\n+\t    *cmpxchg = 0;\n+\t  else\n+\t    *cmpxchg >>= (n->range - rsize) * BITS_PER_MARKER;\n \t  *cmpnop &= mask;\n \t}\n       n->range = rsize;"}]}