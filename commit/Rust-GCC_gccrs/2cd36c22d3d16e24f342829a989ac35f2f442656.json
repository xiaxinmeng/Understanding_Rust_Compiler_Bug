{"sha": "2cd36c22d3d16e24f342829a989ac35f2f442656", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmNkMzZjMjJkM2QxNmUyNGYzNDI4MjlhOTg5YWMzNWYyZjQ0MjY1Ng==", "commit": {"author": {"name": "Adam Nemet", "email": "anemet@caviumnetworks.com", "date": "2009-01-23T06:29:54Z"}, "committer": {"name": "Adam Nemet", "email": "nemet@gcc.gnu.org", "date": "2009-01-23T06:29:54Z"}, "message": "c-decl.c (finish_struct): Move code to set DECL_PACKED after DECL_BIT_FIELD is alreay known.\n\n\t* c-decl.c (finish_struct): Move code to set DECL_PACKED after\n\tDECL_BIT_FIELD is alreay known.  Also inherit packed for bitfields\n\tregardless of their type.\n\t* c-common.c (handle_packed_attribute): Don't ignore packed on\n\tbitfields.\n\t* c.opt (Wpacked-bitfield-compat): New warning option.\n\t* stor-layout.c (place_field): Warn if offset of a field changed.\n\t* doc/extend.texi (packed): Mention the ABI change.\n\t* doc/invoke.texi (-Wpacked-bitfield-compat): Document.\n\t(Warning Options): Add it to the list.\n\ncp/\n\t* class.c (check_field_decls): Also inherit packed for bitfields\n\tregardless of their type.\n\ntestsuite/\n\t* gcc.dg/bitfld-15.c, gcc.dg/bitfld-16.c,\n\tgcc.dg/bitfld-17.c,gcc.dg/bitfld-18.c: New tests.\n\t* g++.dg/ext/bitfield2.C, g++.dg/ext/bitfield3.C,\n\tg++.dg/ext/bitfield4.C, g++.dg/ext/bitfield5.C: New tests.\n\nFrom-SVN: r143584", "tree": {"sha": "f2ccff5eab03e65287a19a85ac3f6e9c2d8e320d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f2ccff5eab03e65287a19a85ac3f6e9c2d8e320d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2cd36c22d3d16e24f342829a989ac35f2f442656", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2cd36c22d3d16e24f342829a989ac35f2f442656", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2cd36c22d3d16e24f342829a989ac35f2f442656", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2cd36c22d3d16e24f342829a989ac35f2f442656/comments", "author": null, "committer": null, "parents": [{"sha": "5cf9cc965f9307beeed14acf4814677041e5bad7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5cf9cc965f9307beeed14acf4814677041e5bad7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5cf9cc965f9307beeed14acf4814677041e5bad7"}], "stats": {"total": 183, "additions": 174, "deletions": 9}, "files": [{"sha": "2cfe41ae88e132d53021dbcc77003b0afe14927a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2cd36c22d3d16e24f342829a989ac35f2f442656/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2cd36c22d3d16e24f342829a989ac35f2f442656/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2cd36c22d3d16e24f342829a989ac35f2f442656", "patch": "@@ -1,3 +1,16 @@\n+2009-01-22  Adam Nemet  <anemet@caviumnetworks.com>\n+\n+\t* c-decl.c (finish_struct): Move code to set DECL_PACKED after\n+\tDECL_BIT_FIELD is alreay known.  Also inherit packed for bitfields\n+\tregardless of their type.\n+\t* c-common.c (handle_packed_attribute): Don't ignore packed on\n+\tbitfields.\n+\t* c.opt (Wpacked-bitfield-compat): New warning option.\n+\t* stor-layout.c (place_field): Warn if offset of a field changed.\n+\t* doc/extend.texi (packed): Mention the ABI change.\n+\t* doc/invoke.texi (-Wpacked-bitfield-compat): Document.\n+\t(Warning Options): Add it to the list.\n+\n 2009-01-22  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* c-opts.c (c_common_post_options): Fix a typo in comments."}, {"sha": "81992d4672fbc80a2a3ca3bffa32029caee51466", "filename": "gcc/c-common.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2cd36c22d3d16e24f342829a989ac35f2f442656/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2cd36c22d3d16e24f342829a989ac35f2f442656/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=2cd36c22d3d16e24f342829a989ac35f2f442656", "patch": "@@ -5113,7 +5113,9 @@ handle_packed_attribute (tree *node, tree name, tree ARG_UNUSED (args),\n     }\n   else if (TREE_CODE (*node) == FIELD_DECL)\n     {\n-      if (TYPE_ALIGN (TREE_TYPE (*node)) <= BITS_PER_UNIT)\n+      if (TYPE_ALIGN (TREE_TYPE (*node)) <= BITS_PER_UNIT\n+\t  /* Still pack bitfields.  */\n+\t  && ! DECL_INITIAL (*node))\n \twarning (OPT_Wattributes,\n \t\t \"%qE attribute ignored for field of type %qT\",\n \t\t name, TREE_TYPE (*node));"}, {"sha": "6ebee1a337b4082b1a0e654fee0cf6491fb7673c", "filename": "gcc/c-decl.c", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2cd36c22d3d16e24f342829a989ac35f2f442656/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2cd36c22d3d16e24f342829a989ac35f2f442656/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=2cd36c22d3d16e24f342829a989ac35f2f442656", "patch": "@@ -5564,9 +5564,6 @@ finish_struct (tree t, tree fieldlist, tree attributes)\n \n       DECL_CONTEXT (x) = t;\n \n-      if (TYPE_PACKED (t) && TYPE_ALIGN (TREE_TYPE (x)) > BITS_PER_UNIT)\n-\tDECL_PACKED (x) = 1;\n-\n       /* If any field is const, the structure type is pseudo-const.  */\n       if (TREE_READONLY (x))\n \tC_TYPE_FIELDS_READONLY (t) = 1;\n@@ -5598,6 +5595,11 @@ finish_struct (tree t, tree fieldlist, tree attributes)\n \t  SET_DECL_C_BIT_FIELD (x);\n \t}\n \n+      if (TYPE_PACKED (t)\n+\t  && (DECL_BIT_FIELD (x)\n+\t      || TYPE_ALIGN (TREE_TYPE (x)) > BITS_PER_UNIT))\n+\tDECL_PACKED (x) = 1;\n+\n       /* Detect flexible array member in an invalid context.  */\n       if (TREE_CODE (TREE_TYPE (x)) == ARRAY_TYPE\n \t  && TYPE_SIZE (TREE_TYPE (x)) == NULL_TREE"}, {"sha": "75b7042dfb189a8765e42e0233599a74c8ed279a", "filename": "gcc/c.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2cd36c22d3d16e24f342829a989ac35f2f442656/gcc%2Fc.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2cd36c22d3d16e24f342829a989ac35f2f442656/gcc%2Fc.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc.opt?ref=2cd36c22d3d16e24f342829a989ac35f2f442656", "patch": "@@ -364,6 +364,10 @@ Woverride-init\n C ObjC Var(warn_override_init) Init(-1) Warning\n Warn about overriding initializers without side effects\n \n+Wpacked-bitfield-compat\n+C ObjC C++ ObjC++ Var(warn_packed_bitfield_compat) Init(1) Warning\n+Warn about packed bit-fields whose offset changed in GCC 4.4\n+\n Wparentheses\n C ObjC C++ ObjC++ Var(warn_parentheses) Warning\n Warn about possibly missing parentheses"}, {"sha": "876cb7fa6d7326a0b9351bc830332dbcbf55084c", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2cd36c22d3d16e24f342829a989ac35f2f442656/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2cd36c22d3d16e24f342829a989ac35f2f442656/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=2cd36c22d3d16e24f342829a989ac35f2f442656", "patch": "@@ -1,3 +1,8 @@\n+2009-01-22  Adam Nemet  <anemet@caviumnetworks.com>\n+\n+\t* class.c (check_field_decls): Also inherit packed for bitfields\n+\tregardless of their type.\n+\n 2009-01-22  Dodji Seketeli  <dodji@redhat.com>\n \n \tPR c++/38930"}, {"sha": "f56edc392a15c9dc0783aff7a07e60901e340793", "filename": "gcc/cp/class.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2cd36c22d3d16e24f342829a989ac35f2f442656/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2cd36c22d3d16e24f342829a989ac35f2f442656/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=2cd36c22d3d16e24f342829a989ac35f2f442656", "patch": "@@ -2974,7 +2974,8 @@ check_field_decls (tree t, tree *access_decls,\n \t\t x);\n \t      cant_pack = 1;\n \t    }\n-\t  else if (TYPE_ALIGN (TREE_TYPE (x)) > BITS_PER_UNIT)\n+\t  else if (DECL_C_BIT_FIELD (x)\n+\t\t   || TYPE_ALIGN (TREE_TYPE (x)) > BITS_PER_UNIT)\n \t    DECL_PACKED (x) = 1;\n \t}\n "}, {"sha": "79a8c2e96a01dfec2f23201a0d46f4872d9f1888", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2cd36c22d3d16e24f342829a989ac35f2f442656/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2cd36c22d3d16e24f342829a989ac35f2f442656/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=2cd36c22d3d16e24f342829a989ac35f2f442656", "patch": "@@ -3824,6 +3824,12 @@ struct foo\n @};\n @end smallexample\n \n+@emph{Note:} The 4.1, 4.2 and 4.3 series of GCC ignore the\n+@code{packed} attribute on bit-fields of type @code{char}.  This has\n+been fixed in GCC 4.4 but the change can lead to differences in the\n+structure layout.  See the documention of\n+@option{-Wpacked-bitfield-compat} for more information.\n+\n @item section (\"@var{section-name}\")\n @cindex @code{section} variable attribute\n Normally, the compiler places the objects it generates in sections like"}, {"sha": "247782a5769d4a20e9a0409bbfa13a1c07bae5d2", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 22, "deletions": 1, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2cd36c22d3d16e24f342829a989ac35f2f442656/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2cd36c22d3d16e24f342829a989ac35f2f442656/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=2cd36c22d3d16e24f342829a989ac35f2f442656", "patch": "@@ -249,7 +249,7 @@ Objective-C and Objective-C++ Dialects}.\n -Wmissing-format-attribute  -Wmissing-include-dirs @gol\n -Wmissing-noreturn  -Wno-mudflap @gol\n -Wno-multichar  -Wnonnull  -Wno-overflow @gol\n--Woverlength-strings  -Wpacked  -Wpadded @gol\n+-Woverlength-strings  -Wpacked  -Wpacked-bitfield-compat  -Wpadded @gol\n -Wparentheses  -Wpedantic-ms-format -Wno-pedantic-ms-format @gol\n -Wpointer-arith  -Wno-pointer-to-int-cast @gol\n -Wredundant-decls @gol\n@@ -3974,6 +3974,27 @@ struct bar @{\n @end group\n @end smallexample\n \n+@item -Wpacked-bitfield-compat\n+@opindex Wpacked-bitfield-compat\n+@opindex Wno-packed-bitfield-compat\n+The 4.1, 4.2 and 4.3 series of GCC ignore the @code{packed} attribute\n+on bit-fields of type @code{char}.  This has been fixed in GCC 4.4 but\n+the change can lead to differences in the structure layout.  GCC\n+informs you when the offset of such a field has changed in GCC 4.4.\n+For example there is no longer a 4-bit padding between field @code{a}\n+and @code{b} in this structure:\n+\n+@smallexample\n+struct foo\n+@{\n+  char a:4;\n+  char b:8;\n+@} __attribute__ ((packed));\n+@end smallexample\n+\n+This warning is enabled by default.  Use\n+@option{-Wno-packed-bitfield-compat} to disable this warning.\n+\n @item -Wpadded\n @opindex Wpadded\n @opindex Wno-padded"}, {"sha": "bf896dbed372e9911d774f46ece79979134031aa", "filename": "gcc/stor-layout.c", "status": "modified", "additions": 17, "deletions": 3, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2cd36c22d3d16e24f342829a989ac35f2f442656/gcc%2Fstor-layout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2cd36c22d3d16e24f342829a989ac35f2f442656/gcc%2Fstor-layout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstor-layout.c?ref=2cd36c22d3d16e24f342829a989ac35f2f442656", "patch": "@@ -937,7 +937,9 @@ place_field (record_layout_info rli, tree field)\n       && TREE_CODE (field) == FIELD_DECL\n       && type != error_mark_node\n       && DECL_BIT_FIELD (field)\n-      && ! DECL_PACKED (field)\n+      && (! DECL_PACKED (field)\n+\t  /* Enter for these packed fields only to issue a warning.  */\n+\t  || TYPE_ALIGN (type) <= BITS_PER_UNIT)\n       && maximum_field_alignment == 0\n       && ! integer_zerop (DECL_SIZE (field))\n       && host_integerp (DECL_SIZE (field), 1)\n@@ -958,9 +960,21 @@ place_field (record_layout_info rli, tree field)\n       /* A bit field may not span more units of alignment of its type\n \t than its type itself.  Advance to next boundary if necessary.  */\n       if (excess_unit_span (offset, bit_offset, field_size, type_align, type))\n-\trli->bitpos = round_up (rli->bitpos, type_align);\n+\t{\n+\t  if (DECL_PACKED (field))\n+\t    {\n+\t      if (warn_packed_bitfield_compat)\n+\t\tinform\n+\t\t  (input_location,\n+\t\t   \"Offset of packed bit-field %qD has changed in GCC 4.4\",\n+\t\t   field);\n+\t    }\n+\t  else\n+\t    rli->bitpos = round_up (rli->bitpos, type_align);\n+\t}\n \n-      TYPE_USER_ALIGN (rli->t) |= TYPE_USER_ALIGN (type);\n+      if (! DECL_PACKED (field))\n+\tTYPE_USER_ALIGN (rli->t) |= TYPE_USER_ALIGN (type);\n     }\n #endif\n "}, {"sha": "bbf10c47f98c0d6ca9fa80a4a000066b655a6914", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2cd36c22d3d16e24f342829a989ac35f2f442656/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2cd36c22d3d16e24f342829a989ac35f2f442656/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2cd36c22d3d16e24f342829a989ac35f2f442656", "patch": "@@ -1,3 +1,10 @@\n+2009-01-22  Adam Nemet  <anemet@caviumnetworks.com>\n+\n+\t* gcc.dg/bitfld-15.c, gcc.dg/bitfld-16.c,\n+\tgcc.dg/bitfld-17.c,gcc.dg/bitfld-18.c: New tests.\n+\t* g++.dg/ext/bitfield2.C, g++.dg/ext/bitfield3.C,\n+\tg++.dg/ext/bitfield4.C, g++.dg/ext/bitfield5.C: New tests.\n+\n 2009-01-22  Steve Ellcey  <sje@cup.hp.com>\n \n \t* gcc.dg/pr35729.c: Make test x86 specific."}, {"sha": "2b827a344b0601e78837d80851c87b125fe9f79e", "filename": "gcc/testsuite/g++.dg/ext/bitfield2.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2cd36c22d3d16e24f342829a989ac35f2f442656/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fbitfield2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2cd36c22d3d16e24f342829a989ac35f2f442656/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fbitfield2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fbitfield2.C?ref=2cd36c22d3d16e24f342829a989ac35f2f442656", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* Remove pedantic.  Allow the GCC extension to use char for bitfields.  */\n+/* { dg-options \"\" } */\n+\n+struct t\n+{\t\t\t\t/* { dg-message \"note: Offset of packed bit-field 't::b' has changed in GCC 4.4\" \"\" } */\n+  char a:4;\n+  char b:8;\n+  char c:4;\n+} __attribute__ ((packed));\n+\n+int assrt[sizeof (struct t) == 2 ? 1 : -1];"}, {"sha": "3b30cc9b0021eebee2fff56204ebcf22b7fc9d36", "filename": "gcc/testsuite/g++.dg/ext/bitfield3.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2cd36c22d3d16e24f342829a989ac35f2f442656/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fbitfield3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2cd36c22d3d16e24f342829a989ac35f2f442656/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fbitfield3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fbitfield3.C?ref=2cd36c22d3d16e24f342829a989ac35f2f442656", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-Wno-packed-bitfield-compat\" } */\n+\n+struct t\n+{\n+  char a:4;\n+  char b:8;\n+  char c:4;\n+} __attribute__ ((packed));\n+\n+int assrt[sizeof (struct t) == 2 ? 1 : -1];"}, {"sha": "f5fbd82b073d331f1a8d48a06b47e7825f6b6e00", "filename": "gcc/testsuite/g++.dg/ext/bitfield4.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2cd36c22d3d16e24f342829a989ac35f2f442656/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fbitfield4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2cd36c22d3d16e24f342829a989ac35f2f442656/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fbitfield4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fbitfield4.C?ref=2cd36c22d3d16e24f342829a989ac35f2f442656", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do compile } */\n+/* { dg-options \"\" } */\n+\n+struct t\n+{\t\t\t\t/* { dg-message \"note: Offset of packed bit-field 't::b' has changed in GCC 4.4\" \"\" } */\n+  char a:4;\n+  char b:8 __attribute__ ((packed));\n+  char c:4;\n+};\n+\n+int assrt[sizeof (struct t) == 2 ? 1 : -1];"}, {"sha": "2cd8e7daa940ebc723acdea4b0facbd88c670aad", "filename": "gcc/testsuite/g++.dg/ext/bitfield5.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2cd36c22d3d16e24f342829a989ac35f2f442656/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fbitfield5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2cd36c22d3d16e24f342829a989ac35f2f442656/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fbitfield5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fbitfield5.C?ref=2cd36c22d3d16e24f342829a989ac35f2f442656", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-Wno-packed-bitfield-compat\" } */\n+\n+struct t\n+{\n+  char a:4;\n+  char b:8 __attribute__ ((packed));\n+  char c:4;\n+};\n+\n+int assrt[sizeof (struct t) == 2 ? 1 : -1];"}, {"sha": "bceeeadf63774de6e202b419342407e5657f5de4", "filename": "gcc/testsuite/gcc.dg/bitfld-15.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2cd36c22d3d16e24f342829a989ac35f2f442656/gcc%2Ftestsuite%2Fgcc.dg%2Fbitfld-15.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2cd36c22d3d16e24f342829a989ac35f2f442656/gcc%2Ftestsuite%2Fgcc.dg%2Fbitfld-15.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fbitfld-15.c?ref=2cd36c22d3d16e24f342829a989ac35f2f442656", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* Remove pedantic.  Allow the GCC extension to use char for bitfields.  */\n+/* { dg-options \"\" } */\n+\n+struct t\n+{\n+  char a:4;\n+  char b:8;\n+  char c:4;\n+} __attribute__ ((packed));\t/* { dg-message \"note: Offset of packed bit-field 'b' has changed in GCC 4.4\" \"\" } */\n+\n+int assrt[sizeof (struct t) == 2 ? 1 : -1];"}, {"sha": "3b30cc9b0021eebee2fff56204ebcf22b7fc9d36", "filename": "gcc/testsuite/gcc.dg/bitfld-16.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2cd36c22d3d16e24f342829a989ac35f2f442656/gcc%2Ftestsuite%2Fgcc.dg%2Fbitfld-16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2cd36c22d3d16e24f342829a989ac35f2f442656/gcc%2Ftestsuite%2Fgcc.dg%2Fbitfld-16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fbitfld-16.c?ref=2cd36c22d3d16e24f342829a989ac35f2f442656", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-Wno-packed-bitfield-compat\" } */\n+\n+struct t\n+{\n+  char a:4;\n+  char b:8;\n+  char c:4;\n+} __attribute__ ((packed));\n+\n+int assrt[sizeof (struct t) == 2 ? 1 : -1];"}, {"sha": "88ec199fa44d1ed6b77f336446847cfe90b0383b", "filename": "gcc/testsuite/gcc.dg/bitfld-17.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2cd36c22d3d16e24f342829a989ac35f2f442656/gcc%2Ftestsuite%2Fgcc.dg%2Fbitfld-17.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2cd36c22d3d16e24f342829a989ac35f2f442656/gcc%2Ftestsuite%2Fgcc.dg%2Fbitfld-17.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fbitfld-17.c?ref=2cd36c22d3d16e24f342829a989ac35f2f442656", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do compile } */\n+/* { dg-options \"\" } */\n+\n+struct t\n+{\n+  char a:4;\n+  char b:8 __attribute__ ((packed));\n+  char c:4;\n+};\t\t\t\t/* { dg-message \"note: Offset of packed bit-field 'b' has changed in GCC 4.4\" \"\" } */\n+\n+int assrt[sizeof (struct t) == 2 ? 1 : -1];"}, {"sha": "2cd8e7daa940ebc723acdea4b0facbd88c670aad", "filename": "gcc/testsuite/gcc.dg/bitfld-18.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2cd36c22d3d16e24f342829a989ac35f2f442656/gcc%2Ftestsuite%2Fgcc.dg%2Fbitfld-18.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2cd36c22d3d16e24f342829a989ac35f2f442656/gcc%2Ftestsuite%2Fgcc.dg%2Fbitfld-18.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fbitfld-18.c?ref=2cd36c22d3d16e24f342829a989ac35f2f442656", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-Wno-packed-bitfield-compat\" } */\n+\n+struct t\n+{\n+  char a:4;\n+  char b:8 __attribute__ ((packed));\n+  char c:4;\n+};\n+\n+int assrt[sizeof (struct t) == 2 ? 1 : -1];"}]}