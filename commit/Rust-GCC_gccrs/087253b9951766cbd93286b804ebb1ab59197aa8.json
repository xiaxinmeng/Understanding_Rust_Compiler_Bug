{"sha": "087253b9951766cbd93286b804ebb1ab59197aa8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDg3MjUzYjk5NTE3NjZjYmQ5MzI4NmI4MDRlYmIxYWI1OTE5N2FhOA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2021-06-08T21:48:49Z"}, "committer": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2021-06-09T00:42:31Z"}, "message": "c++: remove redundant warning [PR100879]\n\nBefore my r277864, build_new_op promoted enums to int before passing them on\nto cp_build_binary_op; after that commit, it doesn't, so\nwarn_for_sign_compare sees the enum operands and gives a redundant warning.\nThis warning dates back to 1995, and seems to have been dead code for a long\ntime--likely since build_new_op was added in 1997--so let's just remove it.\n\n\tPR c++/100879\n\ngcc/c-family/ChangeLog:\n\n\t* c-warn.c (warn_for_sign_compare): Remove C++ enum mismatch\n\twarning.\n\ngcc/testsuite/ChangeLog:\n\n\t* g++.dg/diagnostic/enum3.C: New test.", "tree": {"sha": "f1c8f164f84197ece3884a4932f65821d6da55fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f1c8f164f84197ece3884a4932f65821d6da55fb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/087253b9951766cbd93286b804ebb1ab59197aa8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/087253b9951766cbd93286b804ebb1ab59197aa8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/087253b9951766cbd93286b804ebb1ab59197aa8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/087253b9951766cbd93286b804ebb1ab59197aa8/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c60387214593445d1514bf7852f27f4523458cda", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c60387214593445d1514bf7852f27f4523458cda", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c60387214593445d1514bf7852f27f4523458cda"}], "stats": {"total": 21, "additions": 9, "deletions": 12}, "files": [{"sha": "cd3c99ef4df21fb8d62e7d1f41d675c9a10dcfe4", "filename": "gcc/c-family/c-warn.c", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/087253b9951766cbd93286b804ebb1ab59197aa8/gcc%2Fc-family%2Fc-warn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/087253b9951766cbd93286b804ebb1ab59197aa8/gcc%2Fc-family%2Fc-warn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-warn.c?ref=087253b9951766cbd93286b804ebb1ab59197aa8", "patch": "@@ -2240,18 +2240,6 @@ warn_for_sign_compare (location_t location,\n   int op1_signed = !TYPE_UNSIGNED (TREE_TYPE (orig_op1));\n   int unsignedp0, unsignedp1;\n \n-  /* In C++, check for comparison of different enum types.  */\n-  if (c_dialect_cxx()\n-      && TREE_CODE (TREE_TYPE (orig_op0)) == ENUMERAL_TYPE\n-      && TREE_CODE (TREE_TYPE (orig_op1)) == ENUMERAL_TYPE\n-      && TYPE_MAIN_VARIANT (TREE_TYPE (orig_op0))\n-\t != TYPE_MAIN_VARIANT (TREE_TYPE (orig_op1)))\n-    {\n-      warning_at (location,\n-\t\t  OPT_Wsign_compare, \"comparison between types %qT and %qT\",\n-\t\t  TREE_TYPE (orig_op0), TREE_TYPE (orig_op1));\n-    }\n-\n   /* Do not warn if the comparison is being done in a signed type,\n      since the signed type will only be chosen if it can represent\n      all the values of the unsigned type.  */"}, {"sha": "d51aa8a0f70e3b83d0a11c8618b8bae06c347f87", "filename": "gcc/testsuite/g++.dg/diagnostic/enum3.C", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/087253b9951766cbd93286b804ebb1ab59197aa8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdiagnostic%2Fenum3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/087253b9951766cbd93286b804ebb1ab59197aa8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdiagnostic%2Fenum3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdiagnostic%2Fenum3.C?ref=087253b9951766cbd93286b804ebb1ab59197aa8", "patch": "@@ -0,0 +1,9 @@\n+// PR c++/100879\n+// { dg-additional-options -Werror=sign-compare }\n+\n+enum e1 { e1val };\n+enum e2 { e3val };\n+\n+int main( int, char * [] ) {\n+   if ( e1val == e3val ) return 1; // { dg-warning -Wenum-compare }\n+}"}]}