{"sha": "96a995c4af75dfe581c51fec25b42b5a96be1bb3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTZhOTk1YzRhZjc1ZGZlNTgxYzUxZmVjMjViNDJiNWE5NmJlMWJiMw==", "commit": {"author": {"name": "Daniel Jacobowitz", "email": "dan@codesourcery.com", "date": "2009-01-14T17:58:13Z"}, "committer": {"name": "Nathan Froyd", "email": "froydnj@gcc.gnu.org", "date": "2009-01-14T17:58:13Z"}, "message": "target-supports.exp (check_effective_target_powerpc_spe_nocache): New function.\n\n\t* lib/target-supports.exp (check_effective_target_powerpc_spe_nocache):\n\tNew function.\n\t* gcc.target/powerpc/20030218-1.c: Skip if not powerpc_spe_nocache\n\tand use consistent CFLAGS.\n\t* gcc.target/powerpc/20030505.c: Likewise.\n\t* gcc.target/powerpc/20081204-1.c: Likewise.\n\t* gcc.target/powerpc/ppc-spe.c: Likewise.\n\t* gcc.target/powerpc/spe1.c: Likewise.\n\t* g++.dg/ext/spe1.C: Likewise.\n\t* g++.dg/other/opaque-1.C: Likewise.\n\t* g++.dg/other/opaque-2.C: Likewise.\n\t* g++.dg/other/opaque-3.C: Likewise.\n\nCo-Authored-By: Joseph Myers <joseph@codesourcery.com>\nCo-Authored-By: Nathan Froyd <froydnj@codesourcery.com>\n\nFrom-SVN: r143379", "tree": {"sha": "f0efd425f26c895427b9b691fd59c828aa927805", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f0efd425f26c895427b9b691fd59c828aa927805"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/96a995c4af75dfe581c51fec25b42b5a96be1bb3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96a995c4af75dfe581c51fec25b42b5a96be1bb3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/96a995c4af75dfe581c51fec25b42b5a96be1bb3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96a995c4af75dfe581c51fec25b42b5a96be1bb3/comments", "author": null, "committer": null, "parents": [{"sha": "4e2199ab6834ed326b7a479e5381baed0255c72b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e2199ab6834ed326b7a479e5381baed0255c72b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e2199ab6834ed326b7a479e5381baed0255c72b"}], "stats": {"total": 71, "additions": 58, "deletions": 13}, "files": [{"sha": "30441e674d024a479adbe346494cacdd5f8f44e5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96a995c4af75dfe581c51fec25b42b5a96be1bb3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96a995c4af75dfe581c51fec25b42b5a96be1bb3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=96a995c4af75dfe581c51fec25b42b5a96be1bb3", "patch": "@@ -1,3 +1,20 @@\n+2009-01-14  Daniel Jacobowitz  <dan@codesourcery.com>\n+\t    Nathan Froyd  <froydnj@codesourcery.com>\n+\t    Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* lib/target-supports.exp (check_effective_target_powerpc_spe_nocache):\n+\tNew function.\n+\t* gcc.target/powerpc/20030218-1.c: Skip if not powerpc_spe_nocache\n+\tand use consistent CFLAGS.\n+\t* gcc.target/powerpc/20030505.c: Likewise.\n+\t* gcc.target/powerpc/20081204-1.c: Likewise.\n+\t* gcc.target/powerpc/ppc-spe.c: Likewise.\n+\t* gcc.target/powerpc/spe1.c: Likewise.\n+\t* g++.dg/ext/spe1.C: Likewise.\n+\t* g++.dg/other/opaque-1.C: Likewise.\n+\t* g++.dg/other/opaque-2.C: Likewise.\n+\t* g++.dg/other/opaque-3.C: Likewise.\n+\n 2009-01-14  Mark Mitchell  <mark@codesourcery.com>\n \n \t* gcc.dg/vect/vect-105.c: Prevent compiler from hoisting abort"}, {"sha": "8b1e630ecc03734cf0fc27f2de71db04bd25d5c2", "filename": "gcc/testsuite/g++.dg/ext/spe1.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96a995c4af75dfe581c51fec25b42b5a96be1bb3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fspe1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96a995c4af75dfe581c51fec25b42b5a96be1bb3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fspe1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fspe1.C?ref=96a995c4af75dfe581c51fec25b42b5a96be1bb3", "patch": "@@ -1,5 +1,6 @@\n-/* { dg-do compile { target powerpc-*-eabi* } } */\n+/* { dg-do compile } */\n /* { dg-options \"-mcpu=8540 -mspe -mabi=spe -mfloat-gprs=single -O0\" } */\n+/* { dg-skip-if \"not an SPE target\" { ! powerpc_spe_nocache } { \"*\" } { \"\" } } */\n \n typedef int v2si __attribute__ ((vector_size (8)));\n "}, {"sha": "5cdaeafe31aa8203108a24c93881b472e4f48900", "filename": "gcc/testsuite/g++.dg/other/opaque-1.C", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96a995c4af75dfe581c51fec25b42b5a96be1bb3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fopaque-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96a995c4af75dfe581c51fec25b42b5a96be1bb3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fopaque-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fopaque-1.C?ref=96a995c4af75dfe581c51fec25b42b5a96be1bb3", "patch": "@@ -1,4 +1,6 @@\n-/* { dg-do run { target { powerpc*-*-* && powerpc_spe } } } */\n+/* { dg-do run } */\n+/* { dg-options \"-mcpu=8540 -mspe -mabi=spe -mfloat-gprs=single\" } */\n+/* { dg-skip-if \"not an SPE target\" { ! powerpc_spe_nocache } { \"*\" } { \"\" } } */\n \n #define __vector __attribute__((vector_size(8)))\n typedef float __vector __ev64_fs__;"}, {"sha": "3bb4af2c7786acfed33607aeea2425bec88a09f9", "filename": "gcc/testsuite/g++.dg/other/opaque-2.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96a995c4af75dfe581c51fec25b42b5a96be1bb3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fopaque-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96a995c4af75dfe581c51fec25b42b5a96be1bb3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fopaque-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fopaque-2.C?ref=96a995c4af75dfe581c51fec25b42b5a96be1bb3", "patch": "@@ -1,5 +1,6 @@\n-/* { dg-do compile { target powerpc-*-eabi* powerpc*-*-linux*spe* } } */\n+/* { dg-do compile } */\n /* { dg-options \"-mcpu=8540 -mspe -mabi=spe -mfloat-gprs=single\" } */\n+/* { dg-skip-if \"not an SPE target\" { ! powerpc_spe_nocache } { \"*\" } { \"\" } } */\n \n #define __vector __attribute__((vector_size(8)))\n typedef float __vector __ev64_fs__;"}, {"sha": "5ece652c0cd1cb54c6e92006249d316f2568f26f", "filename": "gcc/testsuite/g++.dg/other/opaque-3.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96a995c4af75dfe581c51fec25b42b5a96be1bb3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fopaque-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96a995c4af75dfe581c51fec25b42b5a96be1bb3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fopaque-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fopaque-3.C?ref=96a995c4af75dfe581c51fec25b42b5a96be1bb3", "patch": "@@ -1,5 +1,6 @@\n-/* { dg-do compile { target powerpc-*-eabi* powerpc*-*-linux*spe* } } */\n+/* { dg-do compile } */\n /* { dg-options \"-mcpu=8540 -mspe -mabi=spe -mfloat-gprs=single\" } */\n+/* { dg-skip-if \"not an SPE target\" { ! powerpc_spe_nocache } { \"*\" } { \"\" } } */\n \n __ev64_opaque__ o;\n #define v __attribute__((vector_size(8)))"}, {"sha": "2a1c4e6d253b1c5f2f2f7f2e192ea9c7b2ac98dc", "filename": "gcc/testsuite/gcc.target/powerpc/20030218-1.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96a995c4af75dfe581c51fec25b42b5a96be1bb3/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2F20030218-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96a995c4af75dfe581c51fec25b42b5a96be1bb3/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2F20030218-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2F20030218-1.c?ref=96a995c4af75dfe581c51fec25b42b5a96be1bb3", "patch": "@@ -1,5 +1,6 @@\n-/* { dg-do compile { target powerpc-*-eabi* } } */\n-/* { dg-options \"-mspe=yes -mfloat-gprs=single\" } */\n+/* { dg-do compile } */\n+/* { dg-options \"-mcpu=8540 -mspe -mabi=spe -mfloat-gprs=single\" } */\n+/* { dg-skip-if \"not an SPE target\" { ! powerpc_spe_nocache } { \"*\" } { \"\" } } */\n \n /* Test vectors that can interconvert without a cast.  */\n \n@@ -19,7 +20,7 @@ main (void)\n \n   /* Just because this is a V2SI, it doesn't make it an opaque.  */\n   vint = vshort; /* { dg-message \"note: use -flax-vector-conversions to permit conversions between vectors with differing element types or numbers of subparts\" } */\n-  /* { dg-error \"incompatible types when assigning\" \"\" { target *-*-* } 21 } */\n+  /* { dg-error \"incompatible types when assigning\" \"\" { target *-*-* } 22 } */\n \n   return 0;\n }"}, {"sha": "2bef590bf7b599caf927dafdccf6a722293a46c4", "filename": "gcc/testsuite/gcc.target/powerpc/20030505.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96a995c4af75dfe581c51fec25b42b5a96be1bb3/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2F20030505.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96a995c4af75dfe581c51fec25b42b5a96be1bb3/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2F20030505.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2F20030505.c?ref=96a995c4af75dfe581c51fec25b42b5a96be1bb3", "patch": "@@ -1,5 +1,6 @@\n-/* { dg-do compile { target powerpc-*-eabi* } } */\n+/* { dg-do compile } */\n /* { dg-options \"-W -mcpu=8540 -mspe -mabi=spe -mfloat-gprs=single\" } */\n+/* { dg-skip-if \"not an SPE target\" { ! powerpc_spe_nocache } { \"*\" } { \"\" } } */\n \n #define __vector __attribute__((vector_size(8)))\n "}, {"sha": "8a973d0ec52e8bdde38ed63de5219bc32599a793", "filename": "gcc/testsuite/gcc.target/powerpc/20081204-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96a995c4af75dfe581c51fec25b42b5a96be1bb3/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2F20081204-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96a995c4af75dfe581c51fec25b42b5a96be1bb3/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2F20081204-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2F20081204-1.c?ref=96a995c4af75dfe581c51fec25b42b5a96be1bb3", "patch": "@@ -2,6 +2,8 @@\n    TARGET_HARD_FLOAT && !TARGET_FPRS.  */\n /* { dg-do compile } */\n /* { dg-options \"-mcpu=750 -mfloat-gprs=single\" } */\n+/* { dg-skip-if \"not an SPE target\" { ! powerpc_spe_nocache } { \"*\" } { \"\" } } */\n+\n static int comp(const void *a,const void *b){\n   return (*(float *)a<*(float *)b)-(*(float *)a>*(float *)b);\n }"}, {"sha": "b56439433407c10a86b6f1d473603fa0de67694c", "filename": "gcc/testsuite/gcc.target/powerpc/ppc-spe.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96a995c4af75dfe581c51fec25b42b5a96be1bb3/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fppc-spe.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96a995c4af75dfe581c51fec25b42b5a96be1bb3/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fppc-spe.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fppc-spe.c?ref=96a995c4af75dfe581c51fec25b42b5a96be1bb3", "patch": "@@ -1,5 +1,6 @@\n-/* { dg-do compile { target powerpc-*-eabi* } } */\n+/* { dg-do compile } */\n /* { dg-options \"-mcpu=8540 -mspe -mabi=spe -mfloat-gprs=single -O0\" } */\n+/* { dg-skip-if \"not an SPE target\" { ! powerpc_spe_nocache } { \"*\" } { \"\" } } */\n \n /* (Test with -O0 so we don't optimize any of them away).  */\n "}, {"sha": "09f8134829c87ceff6312eb21e1ab20af60fe81a", "filename": "gcc/testsuite/gcc.target/powerpc/spe-vector-memcpy.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96a995c4af75dfe581c51fec25b42b5a96be1bb3/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fspe-vector-memcpy.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96a995c4af75dfe581c51fec25b42b5a96be1bb3/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fspe-vector-memcpy.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fspe-vector-memcpy.c?ref=96a995c4af75dfe581c51fec25b42b5a96be1bb3", "patch": "@@ -1,6 +1,6 @@\n-/* { dg-do compile { target powerpc*-*-* } } */\n-/* { dg-require-effective-target powerpc_spe } */\n-/* { dg-options \"-O -mspe=yes\" } */\n+/* { dg-do compile } */\n+/* { dg-options \"-O -mcpu=8540 -mspe -mabi=spe -mfloat-gprs=single\" } */\n+/* { dg-skip-if \"not an SPE target\" { ! powerpc_spe_nocache } { \"*\" } { \"\" } } */\n /* { dg-final { scan-assembler \"evstdd\" } } */\n \n void foo(void)"}, {"sha": "ddbb5a6e1c95e012a508c96e99b09f7aa030dac7", "filename": "gcc/testsuite/gcc.target/powerpc/spe1.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96a995c4af75dfe581c51fec25b42b5a96be1bb3/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fspe1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96a995c4af75dfe581c51fec25b42b5a96be1bb3/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fspe1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fspe1.c?ref=96a995c4af75dfe581c51fec25b42b5a96be1bb3", "patch": "@@ -1,5 +1,6 @@\n-/* { dg-do compile { target powerpc-*-eabi* } } */\n+/* { dg-do compile } */\n /* { dg-options \"-mcpu=8540 -mspe -mabi=spe -mfloat-gprs=single -O0\" } */\n+/* { dg-skip-if \"not an SPE target\" { ! powerpc_spe_nocache } { \"*\" } { \"\" } } */\n \n /* (Test with -O0 so we don't optimize any of them away).  */\n "}, {"sha": "aaefa60cbcb37151fcd29954e520238024f7df2b", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96a995c4af75dfe581c51fec25b42b5a96be1bb3/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96a995c4af75dfe581c51fec25b42b5a96be1bb3/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=96a995c4af75dfe581c51fec25b42b5a96be1bb3", "patch": "@@ -1535,6 +1535,23 @@ proc check_effective_target_powerpc_spu { } {\n     }\n }\n \n+# Return 1 if this is a PowerPC SPE target.  The check includes options\n+# specified by dg-options for this test, so don't cache the result.\n+\n+proc check_effective_target_powerpc_spe_nocache { } {\n+    if { [istarget powerpc*-*-*] } {\n+\treturn [check_no_compiler_messages_nocache powerpc_spe object {\n+\t    #ifndef __SPE__\n+\t    #error not SPE\n+\t    #else\n+\t    int dummy;\n+\t    #endif\n+\t} [current_compiler_flags]]\n+    } else {\n+\treturn 0\n+    }\n+}\n+\n # Return 1 if this is a PowerPC target with SPE enabled.\n \n proc check_effective_target_powerpc_spe { } {"}]}