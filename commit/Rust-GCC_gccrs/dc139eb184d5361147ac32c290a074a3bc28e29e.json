{"sha": "dc139eb184d5361147ac32c290a074a3bc28e29e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGMxMzllYjE4NGQ1MzYxMTQ3YWMzMmMyOTBhMDc0YTNiYzI4ZTI5ZQ==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2019-08-16T15:53:29Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@gcc.gnu.org", "date": "2019-08-16T15:53:29Z"}, "message": "tree.def (TYPE_SIZE): Clarify.\n\n\ngcc/ChangeLog:\n\n\t* tree.def (TYPE_SIZE): Clarify.\n\t* tree.h (TYPE_SIZE, TYPE_SIZE_UNIT, DECL_SIZE): Add comments.\n\nFrom-SVN: r274575", "tree": {"sha": "79e7570b244604134636a96de3c8d260e0e63538", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/79e7570b244604134636a96de3c8d260e0e63538"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dc139eb184d5361147ac32c290a074a3bc28e29e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc139eb184d5361147ac32c290a074a3bc28e29e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc139eb184d5361147ac32c290a074a3bc28e29e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc139eb184d5361147ac32c290a074a3bc28e29e/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "edf2da1e8d16981beaa16a53b81a0f40f6fcb4a0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/edf2da1e8d16981beaa16a53b81a0f40f6fcb4a0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/edf2da1e8d16981beaa16a53b81a0f40f6fcb4a0"}], "stats": {"total": 15, "additions": 13, "deletions": 2}, "files": [{"sha": "b5badf3ff1e5952c4446f5377f38104a0dcdc609", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc139eb184d5361147ac32c290a074a3bc28e29e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc139eb184d5361147ac32c290a074a3bc28e29e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dc139eb184d5361147ac32c290a074a3bc28e29e", "patch": "@@ -1,3 +1,8 @@\n+2019-08-16  Martin Sebor  <msebor@redhat.com>\n+\n+\t* tree.def (TYPE_SIZE): Clarify.\n+\t* tree.h (TYPE_SIZE, TYPE_SIZE_UNIT, DECL_SIZE): Add comments.\n+\n 2019-08-16  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n \n \tPR tree-optimization/91109"}, {"sha": "bfb486df332846e1cce9e18ef54317301a947931", "filename": "gcc/tree.def", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc139eb184d5361147ac32c290a074a3bc28e29e/gcc%2Ftree.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc139eb184d5361147ac32c290a074a3bc28e29e/gcc%2Ftree.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.def?ref=dc139eb184d5361147ac32c290a074a3bc28e29e", "patch": "@@ -77,7 +77,10 @@ DEFTREECODE (BLOCK, \"block\", tcc_exceptional, 0)\n /* Each data type is represented by a tree node whose code is one of\n    the following:  */\n /* Each node that represents a data type has a component TYPE_SIZE\n-   containing a tree that is an expression for the size in bits.\n+   that evaluates either to a tree that is a (potentially non-constant)\n+   expression representing the type size in bits, or to a null pointer\n+   when the size of the type is unknown (for example, for incomplete\n+   types such as arrays of unspecified bound).\n    The TYPE_MODE contains the machine mode for values of this type.\n    The TYPE_POINTER_TO field contains a type for a pointer to this type,\n      or zero if no such has been created yet."}, {"sha": "37f6d57c03481d4e2ad8fe4c3f8b6fa4322f206a", "filename": "gcc/tree.h", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc139eb184d5361147ac32c290a074a3bc28e29e/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc139eb184d5361147ac32c290a074a3bc28e29e/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=dc139eb184d5361147ac32c290a074a3bc28e29e", "patch": "@@ -1952,7 +1952,10 @@ class auto_suppress_location_wrappers\n    so they must be checked as well.  */\n \n #define TYPE_UID(NODE) (TYPE_CHECK (NODE)->type_common.uid)\n+/* Type size in bits as a tree expression.  Need not be constant\n+   and may be null.  */\n #define TYPE_SIZE(NODE) (TYPE_CHECK (NODE)->type_common.size)\n+/* Likewise, type size in bytes.  */\n #define TYPE_SIZE_UNIT(NODE) (TYPE_CHECK (NODE)->type_common.size_unit)\n #define TYPE_POINTER_TO(NODE) (TYPE_CHECK (NODE)->type_common.pointer_to)\n #define TYPE_REFERENCE_TO(NODE) (TYPE_CHECK (NODE)->type_common.reference_to)\n@@ -2480,7 +2483,7 @@ extern machine_mode vector_type_mode (const_tree);\n #define DECL_INITIAL(NODE) (DECL_COMMON_CHECK (NODE)->decl_common.initial)\n \n /* Holds the size of the datum, in bits, as a tree expression.\n-   Need not be constant.  */\n+   Need not be constant and may be null.  */\n #define DECL_SIZE(NODE) (DECL_COMMON_CHECK (NODE)->decl_common.size)\n /* Likewise for the size in bytes.  */\n #define DECL_SIZE_UNIT(NODE) (DECL_COMMON_CHECK (NODE)->decl_common.size_unit)"}]}