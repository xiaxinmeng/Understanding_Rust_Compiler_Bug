{"sha": "a59b9af355d69db7fa656c7a3bb6dd8e0d29f98b", "node_id": "C_kwDOANBUbNoAKGE1OWI5YWYzNTVkNjlkYjdmYTY1NmM3YTNiYjZkZDhlMGQyOWY5OGI", "commit": {"author": {"name": "Andrea Corallo", "email": "andrea.corallo@arm.com", "date": "2022-11-16T13:44:57Z"}, "committer": {"name": "Andrea Corallo", "email": "andrea.corallo@arm.com", "date": "2022-11-28T09:09:22Z"}, "message": "arm: improve tests and fix vrmlaldavhaq*\n\ngcc/ChangeLog:\n\n\t* config/arm/mve.md (mve_vrmlaldavhq_<supf>v4si,\n\tmve_vrmlaldavhaq_<supf>v4si): Fix spacing vs tabs.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/arm/mve/intrinsics/vrmlaldavhaq_p_s32.c: Improve test.\n\t* gcc.target/arm/mve/intrinsics/vrmlaldavhaq_p_u32.c: Likewise.", "tree": {"sha": "78f9fefc99ac5e8c45d0bda10e0fb52b3f25dbe3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/78f9fefc99ac5e8c45d0bda10e0fb52b3f25dbe3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a59b9af355d69db7fa656c7a3bb6dd8e0d29f98b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a59b9af355d69db7fa656c7a3bb6dd8e0d29f98b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a59b9af355d69db7fa656c7a3bb6dd8e0d29f98b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a59b9af355d69db7fa656c7a3bb6dd8e0d29f98b/comments", "author": {"login": "AndreaCorallo", "id": 6765576, "node_id": "MDQ6VXNlcjY3NjU1NzY=", "avatar_url": "https://avatars.githubusercontent.com/u/6765576?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndreaCorallo", "html_url": "https://github.com/AndreaCorallo", "followers_url": "https://api.github.com/users/AndreaCorallo/followers", "following_url": "https://api.github.com/users/AndreaCorallo/following{/other_user}", "gists_url": "https://api.github.com/users/AndreaCorallo/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndreaCorallo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndreaCorallo/subscriptions", "organizations_url": "https://api.github.com/users/AndreaCorallo/orgs", "repos_url": "https://api.github.com/users/AndreaCorallo/repos", "events_url": "https://api.github.com/users/AndreaCorallo/events{/privacy}", "received_events_url": "https://api.github.com/users/AndreaCorallo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "AndreaCorallo", "id": 6765576, "node_id": "MDQ6VXNlcjY3NjU1NzY=", "avatar_url": "https://avatars.githubusercontent.com/u/6765576?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndreaCorallo", "html_url": "https://github.com/AndreaCorallo", "followers_url": "https://api.github.com/users/AndreaCorallo/followers", "following_url": "https://api.github.com/users/AndreaCorallo/following{/other_user}", "gists_url": "https://api.github.com/users/AndreaCorallo/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndreaCorallo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndreaCorallo/subscriptions", "organizations_url": "https://api.github.com/users/AndreaCorallo/orgs", "repos_url": "https://api.github.com/users/AndreaCorallo/repos", "events_url": "https://api.github.com/users/AndreaCorallo/events{/privacy}", "received_events_url": "https://api.github.com/users/AndreaCorallo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "329ccff3be53bfad4bb6aace2c77382099271a4a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/329ccff3be53bfad4bb6aace2c77382099271a4a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/329ccff3be53bfad4bb6aace2c77382099271a4a"}], "stats": {"total": 68, "additions": 62, "deletions": 6}, "files": [{"sha": "b5e6da4b1335818a3e8815de59850e845a2d0400", "filename": "gcc/config/arm/mve.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a59b9af355d69db7fa656c7a3bb6dd8e0d29f98b/gcc%2Fconfig%2Farm%2Fmve.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a59b9af355d69db7fa656c7a3bb6dd8e0d29f98b/gcc%2Fconfig%2Farm%2Fmve.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fmve.md?ref=a59b9af355d69db7fa656c7a3bb6dd8e0d29f98b", "patch": "@@ -2543,7 +2543,7 @@\n \t VRMLALDAVHQ))\n   ]\n   \"TARGET_HAVE_MVE\"\n-  \"vrmlaldavh.<supf>32 %Q0, %R0, %q1, %q2\"\n+  \"vrmlaldavh.<supf>32\\t%Q0, %R0, %q1, %q2\"\n   [(set_attr \"type\" \"mve_move\")\n ])\n \n@@ -2649,7 +2649,7 @@\n \t VRMLALDAVHAQ))\n   ]\n   \"TARGET_HAVE_MVE\"\n-  \"vrmlaldavha.<supf>32 %Q0, %R0, %q2, %q3\"\n+  \"vrmlaldavha.<supf>32\\t%Q0, %R0, %q2, %q3\"\n   [(set_attr \"type\" \"mve_move\")\n ])\n "}, {"sha": "dec4a969dfeed1a69e1294dd128f40a6a02a190a", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vrmlaldavhaq_p_s32.c", "status": "modified", "additions": 22, "deletions": 2, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a59b9af355d69db7fa656c7a3bb6dd8e0d29f98b/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvrmlaldavhaq_p_s32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a59b9af355d69db7fa656c7a3bb6dd8e0d29f98b/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvrmlaldavhaq_p_s32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvrmlaldavhaq_p_s32.c?ref=a59b9af355d69db7fa656c7a3bb6dd8e0d29f98b", "patch": "@@ -1,21 +1,41 @@\n /* { dg-require-effective-target arm_v8_1m_mve_ok } */\n /* { dg-add-options arm_v8_1m_mve } */\n /* { dg-additional-options \"-O2\" } */\n+/* { dg-final { check-function-bodies \"**\" \"\" } } */\n \n #include \"arm_mve.h\"\n \n+/*\n+**foo:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvrmlaldavhat.s32\t(?:ip|fp|r[0-9]+), (?:ip|fp|r[0-9]+), q[0-9]+, q[0-9]+(?:\t@.*|)\n+**\t...\n+*/\n int64_t\n foo (int64_t a, int32x4_t b, int32x4_t c, mve_pred16_t p)\n {\n   return vrmlaldavhaq_p_s32 (a, b, c, p);\n }\n \n-/* { dg-final { scan-assembler \"vrmlaldavhat.s32\"  }  } */\n \n+/*\n+**foo1:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvrmlaldavhat.s32\t(?:ip|fp|r[0-9]+), (?:ip|fp|r[0-9]+), q[0-9]+, q[0-9]+(?:\t@.*|)\n+**\t...\n+*/\n int64_t\n foo1 (int64_t a, int32x4_t b, int32x4_t c, mve_pred16_t p)\n {\n   return vrmlaldavhaq_p (a, b, c, p);\n }\n \n-/* { dg-final { scan-assembler \"vrmlaldavhat.s32\"  }  } */\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "f3c8bfd121cee5f25d193697f131cd29489fe60e", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vrmlaldavhaq_p_u32.c", "status": "modified", "additions": 38, "deletions": 2, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a59b9af355d69db7fa656c7a3bb6dd8e0d29f98b/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvrmlaldavhaq_p_u32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a59b9af355d69db7fa656c7a3bb6dd8e0d29f98b/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvrmlaldavhaq_p_u32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvrmlaldavhaq_p_u32.c?ref=a59b9af355d69db7fa656c7a3bb6dd8e0d29f98b", "patch": "@@ -1,21 +1,57 @@\n /* { dg-require-effective-target arm_v8_1m_mve_ok } */\n /* { dg-add-options arm_v8_1m_mve } */\n /* { dg-additional-options \"-O2\" } */\n+/* { dg-final { check-function-bodies \"**\" \"\" } } */\n \n #include \"arm_mve.h\"\n \n+/*\n+**foo:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvrmlaldavhat.u32\t(?:ip|fp|r[0-9]+), (?:ip|fp|r[0-9]+), q[0-9]+, q[0-9]+(?:\t@.*|)\n+**\t...\n+*/\n uint64_t\n foo (uint64_t a, uint32x4_t b, uint32x4_t c, mve_pred16_t p)\n {\n   return vrmlaldavhaq_p_u32 (a, b, c, p);\n }\n \n-/* { dg-final { scan-assembler \"vrmlaldavhat.u32\"  }  } */\n \n+/*\n+**foo1:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvrmlaldavhat.u32\t(?:ip|fp|r[0-9]+), (?:ip|fp|r[0-9]+), q[0-9]+, q[0-9]+(?:\t@.*|)\n+**\t...\n+*/\n uint64_t\n foo1 (uint64_t a, uint32x4_t b, uint32x4_t c, mve_pred16_t p)\n {\n   return vrmlaldavhaq_p (a, b, c, p);\n }\n \n-/* { dg-final { scan-assembler \"vrmlaldavhat.u32\"  }  } */\n+/*\n+**foo2:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvrmlaldavhat.u32\t(?:ip|fp|r[0-9]+), (?:ip|fp|r[0-9]+), q[0-9]+, q[0-9]+(?:\t@.*|)\n+**\t...\n+*/\n+uint64_t\n+foo2 (uint32x4_t b, uint32x4_t c, mve_pred16_t p)\n+{\n+  return vrmlaldavhaq_p (1, b, c, p);\n+}\n+\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}]}