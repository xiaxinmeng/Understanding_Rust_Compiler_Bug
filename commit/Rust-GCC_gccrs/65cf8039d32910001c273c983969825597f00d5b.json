{"sha": "65cf8039d32910001c273c983969825597f00d5b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjVjZjgwMzlkMzI5MTAwMDFjMjczYzk4Mzk2OTgyNTU5N2YwMGQ1Yg==", "commit": {"author": {"name": "Bill Schmidt", "email": "wschmidt@linux.vnet.ibm.com", "date": "2014-09-09T16:53:07Z"}, "committer": {"name": "William Schmidt", "email": "wschmidt@gcc.gnu.org", "date": "2014-09-09T16:53:07Z"}, "message": "rs6000.c (rtx_is_swappable_p): Add UNSPEC_VSX_CVDPSPN as an unswappable operand...\n\n[gcc]\n\n2014-09-09  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n\n\t* config/rs6000/rs6000.c (rtx_is_swappable_p): Add\n\tUNSPEC_VSX_CVDPSPN as an unswappable operand, and add commentary\n\ton how to make it legal in future.\n\n[gcc/testsuite]\n\n2014-09-09  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n\n\t* gcc.target/powerpc/swaps-p8-15.c: Remove scan-assembler-not for\n\txxpermdi and add commentary about adding it back later; remove\n\tunused typedef.\n\nFrom-SVN: r215088", "tree": {"sha": "3873519b76ba2ef7abf0fa9fe985713de31a460b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3873519b76ba2ef7abf0fa9fe985713de31a460b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/65cf8039d32910001c273c983969825597f00d5b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65cf8039d32910001c273c983969825597f00d5b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/65cf8039d32910001c273c983969825597f00d5b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65cf8039d32910001c273c983969825597f00d5b/comments", "author": {"login": "wschmidt-ibm", "id": 5520937, "node_id": "MDQ6VXNlcjU1MjA5Mzc=", "avatar_url": "https://avatars.githubusercontent.com/u/5520937?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wschmidt-ibm", "html_url": "https://github.com/wschmidt-ibm", "followers_url": "https://api.github.com/users/wschmidt-ibm/followers", "following_url": "https://api.github.com/users/wschmidt-ibm/following{/other_user}", "gists_url": "https://api.github.com/users/wschmidt-ibm/gists{/gist_id}", "starred_url": "https://api.github.com/users/wschmidt-ibm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wschmidt-ibm/subscriptions", "organizations_url": "https://api.github.com/users/wschmidt-ibm/orgs", "repos_url": "https://api.github.com/users/wschmidt-ibm/repos", "events_url": "https://api.github.com/users/wschmidt-ibm/events{/privacy}", "received_events_url": "https://api.github.com/users/wschmidt-ibm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "647d790d2f08bf28e5972644efd563057ff7634d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/647d790d2f08bf28e5972644efd563057ff7634d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/647d790d2f08bf28e5972644efd563057ff7634d"}], "stats": {"total": 30, "additions": 25, "deletions": 5}, "files": [{"sha": "aa75e0500f80b7e0fd564724457142cf1fa9b271", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65cf8039d32910001c273c983969825597f00d5b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65cf8039d32910001c273c983969825597f00d5b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=65cf8039d32910001c273c983969825597f00d5b", "patch": "@@ -1,3 +1,9 @@\n+2014-09-09  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n+\n+\t* config/rs6000/rs6000.c (rtx_is_swappable_p): Add\n+\tUNSPEC_VSX_CVDPSPN as an unswappable operand, and add commentary\n+\ton how to make it legal in future.\n+\n 2014-09-09  David Malcolm  <dmalcolm@redhat.com>\n \n \t* caller-save.c (rtx saveinsn): Strengthen this variable from rtx"}, {"sha": "dcd8c7255b8cec9494de92aee1372b96e8c59584", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65cf8039d32910001c273c983969825597f00d5b/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65cf8039d32910001c273c983969825597f00d5b/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=65cf8039d32910001c273c983969825597f00d5b", "patch": "@@ -33761,8 +33761,6 @@ rtx_is_swappable_p (rtx op, unsigned int *special)\n \t  case UNSPEC_VSUMSWS:\n \t  case UNSPEC_VSUMSWS_DIRECT:\n \t  case UNSPEC_VSX_CONCAT:\n-\t  case UNSPEC_VSX_CVSPDP:\n-\t  case UNSPEC_VSX_CVSPDPN:\n \t  case UNSPEC_VSX_SET:\n \t  case UNSPEC_VSX_SLDWI:\n \t  case UNSPEC_VUNPACK_HI_SIGN:\n@@ -33775,6 +33773,15 @@ rtx_is_swappable_p (rtx op, unsigned int *special)\n \t  case UNSPEC_VUPKLPX:\n \t  case UNSPEC_VUPKLS_V4SF:\n \t  case UNSPEC_VUPKLU_V4SF:\n+\t  /* The following could be handled as an idiom with XXSPLTW.\n+\t     These place a scalar in BE element zero, but the XXSPLTW\n+\t     will currently expect it in BE element 2 in a swapped\n+\t     region.  When one of these feeds an XXSPLTW with no other\n+\t     defs/uses either way, we can avoid the lane change for\n+\t     XXSPLTW and things will be correct.  TBD.  */\n+\t  case UNSPEC_VSX_CVDPSPN:\n+\t  case UNSPEC_VSX_CVSPDP:\n+\t  case UNSPEC_VSX_CVSPDPN:\n \t    return 0;\n \t  case UNSPEC_VSPLT_DIRECT:\n \t    *special = SH_SPLAT;"}, {"sha": "448a7ef2281cf6747b239a333a762939770cebae", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65cf8039d32910001c273c983969825597f00d5b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65cf8039d32910001c273c983969825597f00d5b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=65cf8039d32910001c273c983969825597f00d5b", "patch": "@@ -1,3 +1,9 @@\n+2014-09-09  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n+\n+\t* gcc.target/powerpc/swaps-p8-15.c: Remove scan-assembler-not for\n+\txxpermdi and add commentary about adding it back later; remove\n+\tunused typedef.\n+\n 2014-09-09  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* gcc.target/arm/vect-lceilf_1.c: Make input and output arrays global"}, {"sha": "e7191b35069ce2bf87dc33e0e14b4feb4758318e", "filename": "gcc/testsuite/gcc.target/powerpc/swaps-p8-15.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65cf8039d32910001c273c983969825597f00d5b/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fswaps-p8-15.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65cf8039d32910001c273c983969825597f00d5b/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fswaps-p8-15.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fswaps-p8-15.c?ref=65cf8039d32910001c273c983969825597f00d5b", "patch": "@@ -3,13 +3,14 @@\n /* { dg-final { scan-assembler \"lxvd2x\" } } */\n /* { dg-final { scan-assembler \"stxvd2x\" } } */\n /* { dg-final { scan-assembler \"xxspltw\" } } */\n-/* { dg-final { scan-assembler-not \"xxpermdi\" } } */\n \n+/* Currently the analyze_swaps phase cannot optimize this loop because\n+   of the presence of an UNSPEC_VSX_CVDPSPN.  At such time as this is \n+   handled, we need to add a 'scan-assembler-not \"xxpermdi\"' directive to\n+   this test.  */\n #include <altivec.h>\n void abort();\n \n-typedef struct xx {vector double l; vector double h;} xx;\n-\n #define N 4096\n #define M 10000000\n vector float ca[N][4] = {0};"}]}