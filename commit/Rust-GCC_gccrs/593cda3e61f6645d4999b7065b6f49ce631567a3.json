{"sha": "593cda3e61f6645d4999b7065b6f49ce631567a3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTkzY2RhM2U2MWY2NjQ1ZDQ5OTliNzA2NWI2ZjQ5Y2U2MzE1NjdhMw==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2019-05-17T14:13:40Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2019-05-17T14:13:40Z"}, "message": "Fix uses of non-reserved names for template parameters\n\n\t* include/bits/random.h (seed_seq::param): Fix non-reserved name.\n\t* include/experimental/type_traits (is_detected_exact)\n\t(is_detected_exact_v): Likewise.\n\t* include/pstl/execution_defs.h (is_execution_policy)\n\t(is_execution_policy_v, __enable_if_execution_policy): Likewise.\n\t* include/pstl/execution_impl.h (__policy_traits): Likewise.\n\t* testsuite/17_intro/names.cc: Check for more non-reserved names.\n\t* testsuite/experimental/names.cc: New test.\n\nFrom-SVN: r271324", "tree": {"sha": "70dbe1c10c15c9413ff7a916151c7066c2db1e90", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/70dbe1c10c15c9413ff7a916151c7066c2db1e90"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/593cda3e61f6645d4999b7065b6f49ce631567a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/593cda3e61f6645d4999b7065b6f49ce631567a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/593cda3e61f6645d4999b7065b6f49ce631567a3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/593cda3e61f6645d4999b7065b6f49ce631567a3/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e625ccc21a91f3d6976dece2ae736ab4cbe36763", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e625ccc21a91f3d6976dece2ae736ab4cbe36763", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e625ccc21a91f3d6976dece2ae736ab4cbe36763"}], "stats": {"total": 172, "additions": 158, "deletions": 14}, "files": [{"sha": "397b8edd32782b86c4ef598fd9d4977704725e64", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/593cda3e61f6645d4999b7065b6f49ce631567a3/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/593cda3e61f6645d4999b7065b6f49ce631567a3/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=593cda3e61f6645d4999b7065b6f49ce631567a3", "patch": "@@ -1,5 +1,14 @@\n 2019-05-17  Jonathan Wakely  <jwakely@redhat.com>\n \n+\t* include/bits/random.h (seed_seq::param): Fix non-reserved name.\n+\t* include/experimental/type_traits (is_detected_exact)\n+\t(is_detected_exact_v): Likewise.\n+\t* include/pstl/execution_defs.h (is_execution_policy)\n+\t(is_execution_policy_v, __enable_if_execution_policy): Likewise.\n+\t* include/pstl/execution_impl.h (__policy_traits): Likewise.\n+\t* testsuite/17_intro/names.cc: Check for more non-reserved names.\n+\t* testsuite/experimental/names.cc: New test.\n+\n \tPR libstdc++/85965\n \t* include/bits/hashtable.h (_Hashtable::~_Hashtable()): Remove static\n \tassertions from the destructor."}, {"sha": "2b1df4cb59ea3f215efc417d5de8cbfb805346a7", "filename": "libstdc++-v3/include/bits/random.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/593cda3e61f6645d4999b7065b6f49ce631567a3/libstdc%2B%2B-v3%2Finclude%2Fbits%2Frandom.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/593cda3e61f6645d4999b7065b6f49ce631567a3/libstdc%2B%2B-v3%2Finclude%2Fbits%2Frandom.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Frandom.h?ref=593cda3e61f6645d4999b7065b6f49ce631567a3", "patch": "@@ -6080,9 +6080,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     size_t size() const noexcept\n     { return _M_v.size(); }\n \n-    template<typename OutputIterator>\n+    template<typename _OutputIterator>\n       void\n-      param(OutputIterator __dest) const\n+      param(_OutputIterator __dest) const\n       { std::copy(_M_v.begin(), _M_v.end(), __dest); }\n \n     // no copy functions"}, {"sha": "2403bd242233a8402083ba93f76f5daabf77787e", "filename": "libstdc++-v3/include/experimental/type_traits", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/593cda3e61f6645d4999b7065b6f49ce631567a3/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Ftype_traits", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/593cda3e61f6645d4999b7065b6f49ce631567a3/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Ftype_traits", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Ftype_traits?ref=593cda3e61f6645d4999b7065b6f49ce631567a3", "patch": "@@ -252,12 +252,12 @@ template<typename _Default, template<typename...> class _Op, typename... _Args>\n template<typename _Default, template<typename...> class _Op, typename... _Args>\n   using detected_or_t = typename detected_or<_Default, _Op, _Args...>::type;\n \n-template<typename Expected, template<typename...> class _Op, typename... _Args>\n-  using is_detected_exact = is_same<Expected, detected_t<_Op, _Args...>>;\n+template<typename _Expected, template<typename...> class _Op, typename... _Args>\n+  using is_detected_exact = is_same<_Expected, detected_t<_Op, _Args...>>;\n \n-template<typename Expected, template<typename...> class _Op, typename... _Args>\n+template<typename _Expected, template<typename...> class _Op, typename... _Args>\n   constexpr bool is_detected_exact_v\n-    = is_detected_exact<Expected, _Op, _Args...>::value;\n+    = is_detected_exact<_Expected, _Op, _Args...>::value;\n \n template<typename _To, template<typename...> class _Op, typename... _Args>\n   using is_detected_convertible"}, {"sha": "1a551c7871c203d4a849a4d2c14e7754b4b7b6fe", "filename": "libstdc++-v3/include/pstl/execution_defs.h", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/593cda3e61f6645d4999b7065b6f49ce631567a3/libstdc%2B%2B-v3%2Finclude%2Fpstl%2Fexecution_defs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/593cda3e61f6645d4999b7065b6f49ce631567a3/libstdc%2B%2B-v3%2Finclude%2Fpstl%2Fexecution_defs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fpstl%2Fexecution_defs.h?ref=593cda3e61f6645d4999b7065b6f49ce631567a3", "patch": "@@ -117,7 +117,7 @@ constexpr parallel_unsequenced_policy par_unseq{};\n constexpr unsequenced_policy unseq{};\n \n // 2.3, Execution policy type trait\n-template <class T>\n+template <class _Tp>\n struct is_execution_policy : std::false_type\n {\n };\n@@ -142,19 +142,19 @@ struct is_execution_policy<__pstl::execution::unsequenced_policy> : std::true_ty\n };\n \n #if __PSTL_CPP14_VARIABLE_TEMPLATES_PRESENT\n-template <class T>\n-constexpr bool is_execution_policy_v = __pstl::execution::is_execution_policy<T>::value;\n+template <class _Tp>\n+constexpr bool is_execution_policy_v = __pstl::execution::is_execution_policy<_Tp>::value;\n #endif\n \n } // namespace v1\n } // namespace execution\n \n namespace __internal\n {\n-template <class ExecPolicy, class T>\n+template <class _ExecPolicy, class _Tp>\n using __enable_if_execution_policy =\n-    typename std::enable_if<__pstl::execution::is_execution_policy<typename std::decay<ExecPolicy>::type>::value,\n-                            T>::type;\n+    typename std::enable_if<__pstl::execution::is_execution_policy<typename std::decay<_ExecPolicy>::type>::value,\n+                            _Tp>::type;\n } // namespace __internal\n \n } // namespace __pstl"}, {"sha": "cbebbbd4239e7f7e49011fda1bf31cb43b69e1f0", "filename": "libstdc++-v3/include/pstl/execution_impl.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/593cda3e61f6645d4999b7065b6f49ce631567a3/libstdc%2B%2B-v3%2Finclude%2Fpstl%2Fexecution_impl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/593cda3e61f6645d4999b7065b6f49ce631567a3/libstdc%2B%2B-v3%2Finclude%2Fpstl%2Fexecution_impl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fpstl%2Fexecution_impl.h?ref=593cda3e61f6645d4999b7065b6f49ce631567a3", "patch": "@@ -66,7 +66,7 @@ struct __is_random_access_iterator<_IteratorType>\n };\n \n /* policy */\n-template <typename Policy>\n+template <typename _Policy>\n struct __policy_traits\n {\n };"}, {"sha": "20123a41287823177f0143a7c474e928096633c8", "filename": "libstdc++-v3/testsuite/17_intro/names.cc", "status": "modified", "additions": 72, "deletions": 1, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/593cda3e61f6645d4999b7065b6f49ce631567a3/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fnames.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/593cda3e61f6645d4999b7065b6f49ce631567a3/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fnames.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fnames.cc?ref=593cda3e61f6645d4999b7065b6f49ce631567a3", "patch": "@@ -19,7 +19,6 @@\n \n // Define macros for some common variables names that we must not use for\n // naming variables, parameters etc. in the library.\n-#define tmp (\n #define A (\n #define B (\n #define C (\n@@ -99,6 +98,78 @@\n #define y (\n #define z (\n \n+#define tmp (\n+\n+#if __cplusplus < 201703L\n+// <charconv> defines to_chars_result::ptr and to_chars_result::ec\n+#define ec (\n+#define ptr (\n+#endif\n+\n+// Common template parameter names\n+#define OutputIterator\t\tOutputIterator is not a reserved name\n+#define InputIterator\t\tInputIterator is not a reserved name\n+#define ForwardIterator\t\tForwardIterator is not a reserved name\n+#define BidirectionalIterator\tBidirectionalIterator is not a reserved name\n+#define RandomAccessIterator\tRandomAccessIterator is not a reserved name\n+#define RandomAccessOutputIterator\tRandomAccessOutputIterator is not a reserved name\n+#define RAIter\t\t\tRAIter is not a reserved name\n+#define FwdIter\t\t\tFwdIter is not a reserved name\n+#define OutIter\t\t\tOutIter is not a reserved name\n+#define InIter\t\t\tInIter is not a reserved name\n+\n+#define Alloc\t\t\tAlloc is not a reserved name\n+#define BinaryFunction1\t\tBinaryFunction1 is not a reserved name\n+#define BinaryFunction2\t\tBinaryFunction2 is not a reserved name\n+#define Char\t\t\tChar is not a reserved name\n+#define CharT\t\t\tCharT is not a reserved name\n+#define Cmp\t\t\tCmp is not a reserved name\n+#define Compare\t\t\tCompare is not a reserved name\n+#define Const_Iterator\t\tConst_Iterator is not a reserved name\n+#define Const_Key_Reference\tConst_Key_Reference is not a reserved name\n+#define Const_Node_Iter\t\tConst_Node_Iter is not a reserved name\n+#define Const_Pointer\t\tConst_Pointer is not a reserved name\n+#define Const_Reference\t\tConst_Reference is not a reserved name\n+#define Data\t\t\tData is not a reserved name\n+#define DiffType\t\tDiffType is not a reserved name\n+#define Eq\t\t\tEq is not a reserved name\n+#define ExecPolicy\t\tExecPolicy is not a reserved name\n+#define Expected\t\tExpected is not a reserved name\n+#define External_Load_Access\tExternal_Load_Access is not a reserved name\n+#define External_Size_Access\tExternal_Size_Access is not a reserved name\n+#define Fn\t\t\tFn is not a reserved name\n+#define Function\t\tFunction is not a reserved name\n+#define Functor\t\t\tFunctor is not a reserved name\n+#define Hash\t\t\tHash is not a reserved name\n+#define H1\t\t\tH1 is not a reserved name\n+#define H2\t\t\tH2 is not a reserved name\n+#define Head\t\t\tHead is not a reserved name\n+#define It\t\t\tIt is not a reserved name\n+#define Iter\t\t\tIter is not a reserved name\n+#define Iterator\t\tIterator is not a reserved name\n+#define Key\t\t\tKey is not a reserved name\n+#define Mapped\t\t\tMapped is not a reserved name\n+#define Node\t\t\tNode is not a reserved name\n+#define Node_iter\t\tNode_iter is not a reserved name\n+#define Node_ptr\t\tNode_ptr is not a reserved name\n+#define Overflow\t\tOverflow is not a reserved name\n+#define Pointer\t\t\tPointer is not a reserved name\n+#define Policy\t\t\tPolicy is not a reserved name\n+#define Pred\t\t\tPred is not a reserved name\n+#define Ptr\t\t\tPtr is not a reserved name\n+#define Reference\t\tReference is not a reserved name\n+#define Seq\t\t\tSeq is not a reserved name\n+#define Seq_RAIter\t\tSeq_RAIter is not a reserved name\n+#define Series\t\t\tSeries is not a reserved name\n+#define Set\t\t\tSet is not a reserved name\n+#define String\t\t\tString is not a reserved name\n+#define Tp\t\t\tTp is not a reserved name\n+#define Traits\t\t\tTraits is not a reserved name\n+#define Type\t\t\tType is not a reserved name\n+#define Value\t\t\tValue is not a reserved name\n+#define ValueT\t\t\tValueT is not a reserved name\n+#define ValueType\t\tValueType is not a reserved name\n+\n #ifdef _AIX\n // See https://gcc.gnu.org/ml/libstdc++/2017-03/msg00015.html\n #undef f"}, {"sha": "e97baf3d5bd7b40ef38aaaf828e8f17c4b72dba5", "filename": "libstdc++-v3/testsuite/experimental/names.cc", "status": "added", "additions": 64, "deletions": 0, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/593cda3e61f6645d4999b7065b6f49ce631567a3/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fnames.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/593cda3e61f6645d4999b7065b6f49ce631567a3/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fnames.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fnames.cc?ref=593cda3e61f6645d4999b7065b6f49ce631567a3", "patch": "@@ -0,0 +1,64 @@\n+// Copyright (C) 2017-2019 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-do compile }\n+\n+// Define macros for some common variables names that we must not use for\n+// naming variables, parameters etc. in the library.\n+\n+#include \"../17_intro/names.cc\"\n+// Filesystem\n+#include <experimental/filesystem>\n+// Library Fundamentals\n+#include <experimental/algorithm>\n+#include <experimental/any>\n+#include <experimental/array>\n+#include <experimental/chrono>\n+#include <experimental/deque>\n+#include <experimental/forward_list>\n+#include <experimental/functional>\n+#include <experimental/iterator>\n+#include <experimental/list>\n+#include <experimental/map>\n+#include <experimental/memory>\n+#include <experimental/memory_resource>\n+#include <experimental/numeric>\n+#include <experimental/optional>\n+#include <experimental/propagate_const>\n+#include <experimental/random>\n+#include <experimental/ratio>\n+#include <experimental/regex>\n+#include <experimental/set>\n+#include <experimental/source_location>\n+#include <experimental/string>\n+#include <experimental/string_view>\n+#include <experimental/system_error>\n+#include <experimental/tuple>\n+#include <experimental/type_traits>\n+#include <experimental/unordered_map>\n+#include <experimental/unordered_set>\n+#include <experimental/utility>\n+#include <experimental/vector>\n+// Networking\n+#include <experimental/buffer>\n+#include <experimental/internet>\n+#include <experimental/io_context>\n+#include <experimental/net>\n+#include <experimental/netfwd>\n+#include <experimental/socket>\n+#include <experimental/timer>\n+#include <experimental/executor>"}]}