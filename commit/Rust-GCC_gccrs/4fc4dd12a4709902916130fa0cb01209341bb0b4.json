{"sha": "4fc4dd12a4709902916130fa0cb01209341bb0b4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGZjNGRkMTJhNDcwOTkwMjkxNjEzMGZhMGNiMDEyMDkzNDFiYjBiNA==", "commit": {"author": {"name": "Daniel Jacobowitz", "email": "drow@false.org", "date": "2004-05-25T19:37:26Z"}, "committer": {"name": "Daniel Jacobowitz", "email": "drow@gcc.gnu.org", "date": "2004-05-25T19:37:26Z"}, "message": "* Makefile.tpl (BUILD_EXPORTS, HOST_EXPORTS, GCC_HOST_EXPORTS)\n\t(STAGE_HOST_EXPORTS, BASE_TARGET_EXPORTS, RAW_CXX_TARGET_EXPORTS)\n\t(NORMAL_TARGET_EXPORTS): New macros.  Use them in all the recursive\n\ttargets.\n\t* Makefile.in: Regenerate.\n\nFrom-SVN: r82257", "tree": {"sha": "b3b99f1d668ee7d2e12ee0f4304888cfb7f7d65d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b3b99f1d668ee7d2e12ee0f4304888cfb7f7d65d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4fc4dd12a4709902916130fa0cb01209341bb0b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4fc4dd12a4709902916130fa0cb01209341bb0b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4fc4dd12a4709902916130fa0cb01209341bb0b4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4fc4dd12a4709902916130fa0cb01209341bb0b4/comments", "author": null, "committer": null, "parents": [{"sha": "54b2f3104e7200589cf117686fb10ab5bb33f14e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54b2f3104e7200589cf117686fb10ab5bb33f14e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/54b2f3104e7200589cf117686fb10ab5bb33f14e"}], "stats": {"total": 2911, "additions": 1344, "deletions": 1567}, "files": [{"sha": "56e03845fc9572606df2ca1050e00c6593d3154e", "filename": "ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4fc4dd12a4709902916130fa0cb01209341bb0b4/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4fc4dd12a4709902916130fa0cb01209341bb0b4/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=4fc4dd12a4709902916130fa0cb01209341bb0b4", "patch": "@@ -1,3 +1,11 @@\n+2004-05-25  Daniel Jacobowitz  <drow@false.org>\n+\n+\t* Makefile.tpl (BUILD_EXPORTS, HOST_EXPORTS, GCC_HOST_EXPORTS)\n+\t(STAGE_HOST_EXPORTS, BASE_TARGET_EXPORTS, RAW_CXX_TARGET_EXPORTS)\n+\t(NORMAL_TARGET_EXPORTS): New macros.  Use them in all the recursive\n+\ttargets.\n+\t* Makefile.in: Regenerate.\n+\n 2005-05-24  Paolo Bonzini <bonzini@gnu.org>\n \n \t* configure.in: Test the ability to symlink directories."}, {"sha": "b7b0831ae344c00f26de178573ed47d5249e7196", "filename": "Makefile.in", "status": "modified", "additions": 1197, "deletions": 1468, "changes": 2665, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4fc4dd12a4709902916130fa0cb01209341bb0b4/Makefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4fc4dd12a4709902916130fa0cb01209341bb0b4/Makefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.in?ref=4fc4dd12a4709902916130fa0cb01209341bb0b4"}, {"sha": "784665dfa693169899999aae76cd287b0e1759a8", "filename": "Makefile.tpl", "status": "modified", "additions": 139, "deletions": 99, "changes": 238, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4fc4dd12a4709902916130fa0cb01209341bb0b4/Makefile.tpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4fc4dd12a4709902916130fa0cb01209341bb0b4/Makefile.tpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.tpl?ref=4fc4dd12a4709902916130fa0cb01209341bb0b4", "patch": "@@ -6,7 +6,7 @@ in\n #\n # Makefile for directory with subdirs to build.\n #   Copyright (C) 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998,\n-#   1999, 2000, 2001, 2002, 2003 Free Software Foundation\n+#   1999, 2000, 2001, 2002, 2003, 2004 Free Software Foundation\n #\n # This file is free software; you can redistribute it and/or modify\n # it under the terms of the GNU General Public License as published by\n@@ -111,12 +111,66 @@ BUILD_SUBDIR = @build_subdir@\n # This is set by the configure script to the arguments to use when configuring\n # directories built for the build system.\n BUILD_CONFIGARGS = @build_configargs@\n+# This is the list of variables to export in the environment when\n+# configuring subdirectories for the build system.  It must also be\n+# exported whenever recursing into a build directory in case that\n+# directory's Makefile re-runs configure.\n+BUILD_EXPORTS = \\\n+\tAR=\"$(AR_FOR_BUILD)\"; export AR; \\\n+\tAS=\"$(AS_FOR_BUILD)\"; export AS; \\\n+\tCC=\"$(CC_FOR_BUILD)\"; export CC; \\\n+\tCFLAGS=\"$(CFLAGS_FOR_BUILD)\"; export CFLAGS; \\\n+\tCONFIG_SHELL=\"$(SHELL)\"; export CONFIG_SHELL; \\\n+\tCXX=\"$(CXX_FOR_BUILD)\"; export CXX; \\\n+\tCXXFLAGS=\"$(CXXFLAGS_FOR_BUILD)\"; export CXXFLAGS; \\\n+\tGCJ=\"$(GCJ_FOR_BUILD)\"; export GCJ; \\\n+\tGFORTRAN=\"$(GFORTRAN_FOR_BUILD)\"; export GFORTRAN; \\\n+\tDLLTOOL=\"$(DLLTOOL_FOR_BUILD)\"; export DLLTOOL; \\\n+\tLD=\"$(LD_FOR_BUILD)\"; export LD; \\\n+\tLDFLAGS=\"$(LDFLAGS_FOR_BUILD)\"; export LDFLAGS; \\\n+\tNM=\"$(NM_FOR_BUILD)\"; export NM; \\\n+\tRANLIB=\"$(RANLIB_FOR_BUILD)\"; export RANLIB; \\\n+\tWINDRES=\"$(WINDRES_FOR_BUILD)\"; export WINDRES;\n \n # This is the list of directories to built for the host system.\n SUBDIRS = @configdirs@\n # This is set by the configure script to the arguments to use when configuring\n # directories built for the host system.\n HOST_CONFIGARGS = @host_configargs@\n+# This is the list of variables to export in the environment when\n+# configuring subdirectories for the host system.  It must also be\n+# exported whenever recursing into a host directory in case that\n+# directory's Makefile re-runs configure.\n+HOST_EXPORTS = \\\n+\tCC=\"$(CC)\"; export CC; \\\n+\tCFLAGS=\"$(CFLAGS)\"; export CFLAGS; \\\n+\tCONFIG_SHELL=\"$(SHELL)\"; export CONFIG_SHELL; \\\n+\tCXX=\"$(CXX)\"; export CXX; \\\n+\tCXXFLAGS=\"$(CXXFLAGS)\"; export CXXFLAGS; \\\n+\tAR=\"$(AR)\"; export AR; \\\n+\tAS=\"$(AS)\"; export AS; \\\n+\tCC_FOR_BUILD=\"$(CC_FOR_BUILD)\"; export CC_FOR_BUILD; \\\n+\tDLLTOOL=\"$(DLLTOOL)\"; export DLLTOOL; \\\n+\tLD=\"$(LD)\"; export LD; \\\n+\tLDFLAGS=\"$(LDFLAGS)\"; export LDFLAGS; \\\n+\tNM=\"$(NM)\"; export NM; \\\n+\tRANLIB=\"$(RANLIB)\"; export RANLIB; \\\n+\tWINDRES=\"$(WINDRES)\"; export WINDRES; \\\n+\tOBJCOPY=\"$(OBJCOPY)\"; export OBJCOPY; \\\n+\tOBJDUMP=\"$(OBJDUMP)\"; export OBJDUMP;\n+\n+# Similar, for the gcc directory.\n+GCC_HOST_EXPORTS = \\\n+\t$(HOST_EXPORTS) \\\n+\tTOPLEVEL_CONFIGURE_ARGUMENTS=\"$(TOPLEVEL_CONFIGURE_ARGUMENTS)\"; export TOPLEVEL_CONFIGURE_ARGUMENTS; \\\n+\tGMPLIBS=\"$(HOST_GMPLIBS)\"; export GMPLIBS; \\\n+\tGMPINC=\"$(HOST_GMPINC)\"; export GMPINC;\n+\n+# Similar, for later GCC stages.\n+STAGE_HOST_EXPORTS = \\\n+\t$(GCC_HOST_EXPORTS) \\\n+\tCC=\"$(STAGE_CC_WRAPPER) $$r/prev-gcc/xgcc$(exeext) -B$$r/prev-gcc/ -B$(build_tooldir)/bin/\"; export CC; \\\n+\tCC_FOR_BUILD=\"$(STAGE_CC_WRAPPER) $$r/prev-gcc/xgcc$(exeext) -B$$r/prev-gcc/ -B$(build_tooldir)/bin/\"; export CC_FOR_BUILD;\n \n # This is set by the configure script to the list of directories which\n # should be built using the target tools.\n@@ -126,6 +180,35 @@ TARGET_SUBDIR = @target_subdir@\n # This is set by the configure script to the arguments to use when configuring\n # directories built for the target.\n TARGET_CONFIGARGS = @target_configargs@\n+# This is the list of variables to export in the environment when\n+# configuring subdirectories for the host system.  It must also be\n+# exported whenever recursing into a host directory in case that\n+# directory's Makefile re-runs configure.\n+BASE_TARGET_EXPORTS = \\\n+\tAR=\"$(AR_FOR_TARGET)\"; export AR; \\\n+\tAS=\"$(AS_FOR_TARGET)\"; export AS; \\\n+\tCC=\"$(CC_FOR_TARGET)\"; export CC; \\\n+\tCFLAGS=\"$(CFLAGS_FOR_TARGET)\"; export CFLAGS; \\\n+\tCONFIG_SHELL=\"$(SHELL)\"; export CONFIG_SHELL; \\\n+\tCPPFLAGS=\"$(CFLAGS_FOR_TARGET)\"; export CPPFLAGS; \\\n+\tCXXFLAGS=\"$(CXXFLAGS_FOR_TARGET)\"; export CXXFLAGS; \\\n+\tGCJ=\"$(GCJ_FOR_TARGET)\"; export GCJ; \\\n+\tGFORTRAN=\"$(GFORTRAN_FOR_TARGET)\"; export GFORTRAN; \\\n+\tDLLTOOL=\"$(DLLTOOL_FOR_TARGET)\"; export DLLTOOL; \\\n+\tLD=\"$(LD_FOR_TARGET)\"; export LD; \\\n+\tLDFLAGS=\"$(LDFLAGS_FOR_TARGET)\"; export LDFLAGS; \\\n+\tNM=\"$(NM_FOR_TARGET)\"; export NM; \\\n+\tRANLIB=\"$(RANLIB_FOR_TARGET)\"; export RANLIB; \\\n+\tWINDRES=\"$(WINDRES_FOR_TARGET)\"; export WINDRES;\n+\n+RAW_CXX_TARGET_EXPORTS = \\\n+\t$(BASE_TARGET_EXPORTS) \\\n+\tCXX_FOR_TARGET=\"$(RAW_CXX_FOR_TARGET)\"; export CXX_FOR_TARGET; \\\n+\tCXX=\"$(RAW_CXX_FOR_TARGET)\"; export CXX;\n+\n+NORMAL_TARGET_EXPORTS = \\\n+\t$(BASE_TARGET_EXPORTS) \\\n+\tCXX=\"$(CXX_FOR_TARGET)\"; export CXX;\n \n # Where to find GMP\n HOST_GMPLIBS = @gmplibs@\n@@ -649,6 +732,7 @@ install.all: install-no-fixedincludes\n \t@if [ -f ./gcc/Makefile ] ; then \\\n \t\tr=`${PWD_COMMAND}` ; export r ; \\\n \t\t$(SET_LIB_PATH) \\\n+\t\t$(GCC_HOST_EXPORTS) \\\n \t\t(cd ./gcc && \\\n \t\t$(MAKE) $(FLAGS_TO_PASS) install-headers) ; \\\n \telse \\\n@@ -704,21 +788,7 @@ configure-build-[+module+]:\n \t$(SHELL) $(srcdir)/mkinstalldirs $(BUILD_SUBDIR)/[+module+] ; \\\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n-\tAR=\"$(AR_FOR_BUILD)\"; export AR; \\\n-\tAS=\"$(AS_FOR_BUILD)\"; export AS; \\\n-\tCC=\"$(CC_FOR_BUILD)\"; export CC; \\\n-\tCFLAGS=\"$(CFLAGS_FOR_BUILD)\"; export CFLAGS; \\\n-\tCONFIG_SHELL=\"$(SHELL)\"; export CONFIG_SHELL; \\\n-\tCXX=\"$(CXX_FOR_BUILD)\"; export CXX; \\\n-\tCXXFLAGS=\"$(CXXFLAGS_FOR_BUILD)\"; export CXXFLAGS; \\\n-\tGCJ=\"$(GCJ_FOR_BUILD)\"; export GCJ; \\\n-\tGFORTRAN=\"$(GFORTRAN_FOR_BUILD)\"; export GFORTRAN; \\\n-\tDLLTOOL=\"$(DLLTOOL_FOR_BUILD)\"; export DLLTOOL; \\\n-\tLD=\"$(LD_FOR_BUILD)\"; export LD; \\\n-\tLDFLAGS=\"$(LDFLAGS_FOR_BUILD)\"; export LDFLAGS; \\\n-\tNM=\"$(NM_FOR_BUILD)\"; export NM; \\\n-\tRANLIB=\"$(RANLIB_FOR_BUILD)\"; export RANLIB; \\\n-\tWINDRES=\"$(WINDRES_FOR_BUILD)\"; export WINDRES; \\\n+\t$(BUILD_EXPORTS) \\\n \techo Configuring in $(BUILD_SUBDIR)/[+module+]; \\\n \tcd \"$(BUILD_SUBDIR)/[+module+]\" || exit 1; \\\n \tcase $(srcdir) in \\\n@@ -768,6 +838,7 @@ maybe-all-build-[+module+]: all-build-[+module+]\n all-build-[+module+]: configure-build-[+module+]\n \t@r=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(BUILD_EXPORTS) \\\n \t(cd $(BUILD_SUBDIR)/[+module+] && $(MAKE) all)\n @endif build-[+module+]\n [+ ENDFOR build_modules +]\n@@ -785,22 +856,7 @@ configure-[+module+]:\n \t[ -d [+module+] ] || mkdir [+module+]; \\\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n-\tCC=\"$(CC)\"; export CC; \\\n-\tCFLAGS=\"$(CFLAGS)\"; export CFLAGS; \\\n-\tCONFIG_SHELL=\"$(SHELL)\"; export CONFIG_SHELL; \\\n-\tCXX=\"$(CXX)\"; export CXX; \\\n-\tCXXFLAGS=\"$(CXXFLAGS)\"; export CXXFLAGS; \\\n-\tAR=\"$(AR)\"; export AR; \\\n-\tAS=\"$(AS)\"; export AS; \\\n-\tCC_FOR_BUILD=\"$(CC_FOR_BUILD)\"; export CC_FOR_BUILD; \\\n-\tDLLTOOL=\"$(DLLTOOL)\"; export DLLTOOL; \\\n-\tLD=\"$(LD)\"; export LD; \\\n-\tLDFLAGS=\"$(LDFLAGS)\"; export LDFLAGS; \\\n-\tNM=\"$(NM)\"; export NM; \\\n-\tRANLIB=\"$(RANLIB)\"; export RANLIB; \\\n-\tWINDRES=\"$(WINDRES)\"; export WINDRES; \\\n-\tOBJCOPY=\"$(OBJCOPY)\"; export OBJCOPY; \\\n-\tOBJDUMP=\"$(OBJDUMP)\"; export OBJDUMP; \\\n+\t$(HOST_EXPORTS) \\\n \techo Configuring in [+module+]; \\\n \tcd [+module+] || exit 1; \\\n \tcase $(srcdir) in \\\n@@ -827,6 +883,7 @@ all-[+module+]: configure-[+module+]\n \t@r=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(SET_LIB_PATH) \\\n+\t$(HOST_EXPORTS) \\\n \t(cd [+module+] && $(MAKE) $(FLAGS_TO_PASS)[+ \n \t  IF with_x \n \t    +] $(X11_FLAGS_TO_PASS)[+ \n@@ -846,6 +903,7 @@ check-[+module+]:\n \t  r=`${PWD_COMMAND}`; export r; \\\n \t  s=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t  $(SET_LIB_PATH) \\\n+\t  $(HOST_EXPORTS) \\\n \t  (cd [+module+] && $(MAKE) $(FLAGS_TO_PASS)[+ \n \t    IF with_x \n \t      +] $(X11_FLAGS_TO_PASS)[+ \n@@ -856,6 +914,7 @@ check-[+module+]:\n \t@r=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(SET_LIB_PATH) \\\n+\t$(HOST_EXPORTS) \\\n \t(cd [+module+] && $(MAKE) $(FLAGS_TO_PASS)[+ \n \t  IF with_x \n \t    +] $(X11_FLAGS_TO_PASS)[+ \n@@ -874,6 +933,7 @@ install-[+module+]: installdirs\n \t@r=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(SET_LIB_PATH) \\\n+\t$(HOST_EXPORTS) \\\n \t(cd [+module+] && $(MAKE) $(FLAGS_TO_PASS)[+ \n \t  IF with_x \n \t    +] $(X11_FLAGS_TO_PASS)[+ \n@@ -899,6 +959,7 @@ maybe-[+make_target+]-[+module+]: [+make_target+]-[+module+]\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(SET_LIB_PATH) \\\n+\t$(HOST_EXPORTS) \\\n \tfor flag in $(EXTRA_HOST_FLAGS); do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n@@ -935,28 +996,12 @@ configure-target-[+module+]: $(TARGET_SUBDIR)/[+module+]/multilib.out\n \t$(SHELL) $(srcdir)/mkinstalldirs $(TARGET_SUBDIR)/[+module+] ; \\\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n-\t$(SET_LIB_PATH) \\\n-\tAR=\"$(AR_FOR_TARGET)\"; export AR; \\\n-\tAS=\"$(AS_FOR_TARGET)\"; export AS; \\\n-\tCC=\"$(CC_FOR_TARGET)\"; export CC; \\\n-\tCFLAGS=\"$(CFLAGS_FOR_TARGET)\"; export CFLAGS; \\\n-\tCONFIG_SHELL=\"$(SHELL)\"; export CONFIG_SHELL; \\\n-\tCPPFLAGS=\"$(CFLAGS_FOR_TARGET)\"; export CPPFLAGS; \\[+ \n+\t$(SET_LIB_PATH) \\[+\n IF raw_cxx +]\n-\tCXX_FOR_TARGET=\"$(RAW_CXX_FOR_TARGET)\"; export CXX_FOR_TARGET; \\\n-\tCXX=\"$(RAW_CXX_FOR_TARGET)\"; export CXX; \\[+ \n+\t$(RAW_CXX_TARGET_EXPORTS) \\[+\n ELSE normal_cxx +]\n-\tCXX=\"$(CXX_FOR_TARGET)\"; export CXX; \\[+ \n+\t$(NORMAL_TARGET_EXPORTS) \\[+\n ENDIF raw_cxx +]\n-\tCXXFLAGS=\"$(CXXFLAGS_FOR_TARGET)\"; export CXXFLAGS; \\\n-\tGCJ=\"$(GCJ_FOR_TARGET)\"; export GCJ; \\\n-\tGFORTRAN=\"$(GFORTRAN_FOR_TARGET)\"; export GFORTRAN; \\\n-\tDLLTOOL=\"$(DLLTOOL_FOR_TARGET)\"; export DLLTOOL; \\\n-\tLD=\"$(LD_FOR_TARGET)\"; export LD; \\\n-\tLDFLAGS=\"$(LDFLAGS_FOR_TARGET)\"; export LDFLAGS; \\\n-\tNM=\"$(NM_FOR_TARGET)\"; export NM; \\\n-\tRANLIB=\"$(RANLIB_FOR_TARGET)\"; export RANLIB; \\\n-\tWINDRES=\"$(WINDRES_FOR_TARGET)\"; export WINDRES; \\\n \techo Configuring in $(TARGET_SUBDIR)/[+module+]; \\\n \tcd \"$(TARGET_SUBDIR)/[+module+]\" || exit 1; \\\n \tcase $(srcdir) in \\\n@@ -1006,7 +1051,12 @@ maybe-all-target-[+module+]: all-target-[+module+]\n all-target-[+module+]: configure-target-[+module+]\n \t@r=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n-\t$(SET_LIB_PATH) \\\n+\t$(SET_LIB_PATH) \\[+\n+IF raw_cxx +]\n+\t$(RAW_CXX_TARGET_EXPORTS) \\[+\n+ELSE normal_cxx +]\n+\t$(NORMAL_TARGET_EXPORTS) \\[+\n+ENDIF raw_cxx +]\n \t(cd $(TARGET_SUBDIR)/[+module+] && \\\n \t  $(MAKE) $(TARGET_FLAGS_TO_PASS) [+\n \t    IF raw_cxx \n@@ -1026,7 +1076,12 @@ check-target-[+module+]:\n check-target-[+module+]:\n \t@r=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n-\t$(SET_LIB_PATH) \\\n+\t$(SET_LIB_PATH) \\[+\n+IF raw_cxx +]\n+\t$(RAW_CXX_TARGET_EXPORTS) \\[+\n+ELSE normal_cxx +]\n+\t$(NORMAL_TARGET_EXPORTS) \\[+\n+ENDIF raw_cxx +]\n \t(cd $(TARGET_SUBDIR)/[+module+] && \\\n \t  $(MAKE) $(TARGET_FLAGS_TO_PASS) [+\n \t    IF raw_cxx \n@@ -1047,7 +1102,12 @@ install-target-[+module+]:\n install-target-[+module+]: installdirs\n \t@r=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n-\t$(SET_LIB_PATH) \\\n+\t$(SET_LIB_PATH) \\[+\n+IF raw_cxx +]\n+\t$(RAW_CXX_TARGET_EXPORTS) \\[+\n+ELSE normal_cxx +]\n+\t$(NORMAL_TARGET_EXPORTS) \\[+\n+ENDIF raw_cxx +]\n \t(cd $(TARGET_SUBDIR)/[+module+] && \\\n \t  $(MAKE) $(TARGET_FLAGS_TO_PASS) install)\n [+ ENDIF no_install +]\n@@ -1070,7 +1130,12 @@ maybe-[+make_target+]-target-[+module+]: [+make_target+]-target-[+module+]\n \t@[ -f $(TARGET_SUBDIR)/[+module+]/Makefile ] || exit 0 ; \\\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n-\t$(SET_LIB_PATH) \\\n+\t$(SET_LIB_PATH) \\[+\n+IF raw_cxx +]\n+\t$(RAW_CXX_TARGET_EXPORTS) \\[+\n+ELSE normal_cxx +]\n+\t$(NORMAL_TARGET_EXPORTS) \\[+\n+ENDIF raw_cxx +]\n \techo \"Doing [+make_target+] in $(TARGET_SUBDIR)/[+module+]\" ; \\\n \tfor flag in $(EXTRA_TARGET_FLAGS); do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n@@ -1111,25 +1176,7 @@ configure-gcc:\n \t[ -d gcc ] || mkdir gcc; \\\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n-\tCC=\"$(CC)\"; export CC; \\\n-\tCFLAGS=\"$(CFLAGS)\"; export CFLAGS; \\\n-\tCONFIG_SHELL=\"$(SHELL)\"; export CONFIG_SHELL; \\\n-\tCXX=\"$(CXX)\"; export CXX; \\\n-\tCXXFLAGS=\"$(CXXFLAGS)\"; export CXXFLAGS; \\\n-\tTOPLEVEL_CONFIGURE_ARGUMENTS=\"$(TOPLEVEL_CONFIGURE_ARGUMENTS)\"; export TOPLEVEL_CONFIGURE_ARGUMENTS; \\\n-\tAR=\"$(AR)\"; export AR; \\\n-\tAS=\"$(AS)\"; export AS; \\\n-\tCC_FOR_BUILD=\"$(CC_FOR_BUILD)\"; export CC_FOR_BUILD; \\\n-\tDLLTOOL=\"$(DLLTOOL)\"; export DLLTOOL; \\\n-\tLD=\"$(LD)\"; export LD; \\\n-\tLDFLAGS=\"$(LDFLAGS)\"; export LDFLAGS; \\\n-\tNM=\"$(NM)\"; export NM; \\\n-\tRANLIB=\"$(RANLIB)\"; export RANLIB; \\\n-\tWINDRES=\"$(WINDRES)\"; export WINDRES; \\\n-\tOBJCOPY=\"$(OBJCOPY)\"; export OBJCOPY; \\\n-\tOBJDUMP=\"$(OBJDUMP)\"; export OBJDUMP; \\\n-\tGMPLIBS=\"$(HOST_GMPLIBS)\"; export GMPLIBS; \\\n-\tGMPINC=\"$(HOST_GMPINC)\"; export GMPINC; \\\n+\t$(GCC_HOST_EXPORTS) \\\n \techo Configuring in gcc; \\\n \tcd gcc || exit 1; \\\n \tcase $(srcdir) in \\\n@@ -1158,6 +1205,7 @@ maybe-all-gcc: all-gcc\n all-gcc: configure-gcc\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(GCC_HOST_EXPORTS) \\\n \tif [ -f stage_last ] ; then \\\n \t  true ; \\\n \telif [ -f gcc/stage_last ] ; then \\\n@@ -1185,6 +1233,7 @@ $(GCC_STRAP_TARGETS): all-bootstrap configure-gcc\n \t@r=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(SET_LIB_PATH) \\\n+\t$(GCC_HOST_EXPORTS) \\\n \techo \"Bootstrapping the compiler\"; \\\n \tcd gcc && $(MAKE) $(GCC_FLAGS_TO_PASS) $@\n \t@r=`${PWD_COMMAND}`; export r; \\\n@@ -1204,6 +1253,7 @@ $(GCC_STRAP_TARGETS): all-bootstrap configure-gcc\n \t    compare=compare ;; \\\n \tesac; \\\n \t$(SET_LIB_PATH) \\\n+\t$(GCC_HOST_EXPORTS) \\\n \techo \"$$msg\"; \\\n \tcd gcc && $(MAKE) $(GCC_FLAGS_TO_PASS) $$compare\n \t@r=`${PWD_COMMAND}`; export r; \\\n@@ -1216,6 +1266,7 @@ profiledbootstrap: all-bootstrap configure-gcc\n \t@r=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(SET_LIB_PATH) \\\n+\t$(GCC_HOST_EXPORTS) \\\n \techo \"Bootstrapping the compiler\"; \\\n \tcd gcc && $(MAKE) $(GCC_FLAGS_TO_PASS) stageprofile_build\n \t@r=`${PWD_COMMAND}`; export r; \\\n@@ -1226,6 +1277,7 @@ profiledbootstrap: all-bootstrap configure-gcc\n \t@r=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(SET_LIB_PATH) \\\n+\t$(GCC_HOST_EXPORTS) \\\n \techo \"Building feedback based compiler\"; \\\n \tcd gcc && $(MAKE) $(GCC_FLAGS_TO_PASS) stagefeedback_build\n \n@@ -1234,6 +1286,7 @@ cross: all-texinfo all-bison all-byacc all-binutils all-gas all-ld\n \t@r=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(SET_LIB_PATH) \\\n+\t$(GCC_HOST_EXPORTS) \\\n \techo \"Building the C and C++ compiler\"; \\\n \tcd gcc && $(MAKE) $(GCC_FLAGS_TO_PASS) LANGUAGES=\"c c++\"\n \t@r=`${PWD_COMMAND}`; export r; \\\n@@ -1252,6 +1305,7 @@ check-gcc:\n \t  r=`${PWD_COMMAND}`; export r; \\\n \t  s=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t  $(SET_LIB_PATH) \\\n+\t  $(GCC_HOST_EXPORTS) \\\n \t  (cd gcc && $(MAKE) $(GCC_FLAGS_TO_PASS) check); \\\n \telse \\\n \t  true; \\\n@@ -1263,6 +1317,7 @@ check-gcc-c++:\n \t  r=`${PWD_COMMAND}`; export r; \\\n \t  s=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t  $(SET_LIB_PATH) \\\n+\t  $(GCC_HOST_EXPORTS) \\\n \t  (cd gcc && $(MAKE) $(GCC_FLAGS_TO_PASS) check-c++); \\\n \telse \\\n \t  true; \\\n@@ -1281,6 +1336,7 @@ install-gcc:\n \t  r=`${PWD_COMMAND}`; export r; \\\n \t  s=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t  $(SET_LIB_PATH) \\\n+\t  $(GCC_HOST_EXPORTS) \\\n \t  (cd gcc && $(MAKE) $(GCC_FLAGS_TO_PASS) install); \\\n \telse \\\n \t  true; \\\n@@ -1302,6 +1358,7 @@ gcc-no-fixedincludes:\n \t  r=`${PWD_COMMAND}`; export r; \\\n \t  s=`cd $(srcdir); ${PWD_COMMAND}` ; export s; \\\n \t  $(SET_LIB_PATH) \\\n+\t  $(GCC_HOST_EXPORTS) \\\n \t  (cd ./gcc && \\\n \t   $(MAKE) $(GCC_FLAGS_TO_PASS) install); \\\n \t  rm -rf gcc/include; \\\n@@ -1325,6 +1382,7 @@ maybe-[+make_target+]-gcc: [+make_target+]-gcc\n \tfor flag in $(EXTRA_GCC_FLAGS); do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n+\t$(GCC_HOST_EXPORTS) \\\n \techo \"Doing [+make_target+] in gcc\" ; \\\n \t(cd gcc && \\\n \t  $(MAKE) $(BASE_FLAGS_TO_PASS) \"AR=$${AR}\" \"AS=$${AS}\" \\\n@@ -1441,28 +1499,9 @@ configure-stage[+id+]-gcc: [+ IF prev +] all-stage[+prev+]-gcc [+\n \t  true ; \\\n \tfi ; \\\n \tr=`${PWD_COMMAND}`; export r; \\\n-\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n-\tCONFIG_SHELL=\"$(SHELL)\"; export CONFIG_SHELL; \\\n-\tTOPLEVEL_CONFIGURE_ARGUMENTS=\"$(TOPLEVEL_CONFIGURE_ARGUMENTS)\"; export TOPLEVEL_CONFIGURE_ARGUMENTS; \\\n-\tCFLAGS=\"$(CFLAGS)\"; export CFLAGS; \\\n-\tCXX=\"$(CXX)\"; export CXX; \\\n-\tCXXFLAGS=\"$(CXXFLAGS)\"; export CXXFLAGS; \\\n-\tAR=\"$(AR)\"; export AR; \\\n-\tAS=\"$(AS)\"; export AS; \\\n-\tDLLTOOL=\"$(DLLTOOL)\"; export DLLTOOL; \\\n-\tLD=\"$(LD)\"; export LD; \\\n-\tLDFLAGS=\"$(LDFLAGS)\"; export LDFLAGS; \\\n-\tNM=\"$(NM)\"; export NM; \\\n-\tRANLIB=\"$(RANLIB)\"; export RANLIB; \\\n-\tWINDRES=\"$(WINDRES)\"; export WINDRES; \\\n-\tOBJCOPY=\"$(OBJCOPY)\"; export OBJCOPY; \\\n-\tOBJDUMP=\"$(OBJDUMP)\"; export OBJDUMP; \\\n-\tGMPLIBS=\"$(HOST_GMPLIBS)\"; export GMPLIBS; \\\n-\tGMPINC=\"$(HOST_GMPINC)\"; export GMPINC [+ IF prev +] ; \\\n-\tCC=\"$(STAGE_CC_WRAPPER) $$r/prev-gcc/xgcc$(exeext) -B$$r/prev-gcc/ -B$(build_tooldir)/bin/\"; export CC; \\\n-\tCC_FOR_BUILD=\"$(STAGE_CC_WRAPPER) $$r/prev-gcc/xgcc$(exeext) -B$$r/prev-gcc/ -B$(build_tooldir)/bin/\"; export CC_FOR_BUILD [+ ELSE +] ; \\\n-\tCC=\"$(CC)\"; export CC; \\\n-\tCC_FOR_BUILD=\"$(CC_FOR_BUILD)\"; export CC_FOR_BUILD [+ ENDIF prev +] ; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; [+ IF prev +] \\\n+\t$(STAGE_HOST_EXPORTS) [+ ELSE prev +] \\\n+\t$(GCC_HOST_EXPORTS) [+ ENDIF prev +] \\\n \techo Configuring stage [+id+] in gcc ; \\\n \tcd gcc || exit 1; \\\n \tcase $(srcdir) in \\\n@@ -1484,11 +1523,12 @@ configure-stage[+id+]-gcc: [+ IF prev +] all-stage[+prev+]-gcc [+\n all-stage[+id+]-gcc: configure-stage[+id+]-gcc\n \t$(MAKE) new-stage[+id+]-start\n \t@r=`${PWD_COMMAND}`; export r; \\\n-\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; [+ IF prev +] \\\n+\t$(STAGE_HOST_EXPORTS) [+ ELSE prev +] \\\n+\t$(GCC_HOST_EXPORTS) [+ ENDIF prev +] \\\n \tcd gcc && \\\n \t$(MAKE) $(GCC_FLAGS_TO_PASS) [+ IF prev +] \\\n-\t\tCC=\"$(STAGE_CC_WRAPPER) $$r/prev-gcc/xgcc$(exeext) -B$$r/prev-gcc/ -B$(build_tooldir)/bin/\" \\\n-\t\tCC_FOR_BUILD=\"$(STAGE_CC_WRAPPER) $$r/prev-gcc/xgcc$(exeext) -B$$r/prev-gcc/ -B$(build_tooldir)/bin/\" \\\n+\t\tCC=\"$${CC}\" CC_FOR_BUILD=\"${CC_FOR_BUILD}\" \\\n \t\tSTAGE_PREFIX=$$r/stage[+prev+]-gcc/ [+ ENDIF prev +] \\\n \t\t[+extra_make_flags+] && $(STAMP) ../all-stage[+id+]-gcc\n "}]}