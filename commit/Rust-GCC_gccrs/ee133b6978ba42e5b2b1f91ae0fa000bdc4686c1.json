{"sha": "ee133b6978ba42e5b2b1f91ae0fa000bdc4686c1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWUxMzNiNjk3OGJhNDJlNWIyYjFmOTFhZTBmYTAwMGJkYzQ2ODZjMQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard@codesourcery.com", "date": "2005-06-14T14:37:49Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2005-06-14T14:37:49Z"}, "message": "opt-functions.awk (global_state_p, [...]): New.\n\n\t* opt-functions.awk (global_state_p, needs_state_p, static_var): New.\n\t(var_ref): Take the option's flags as a second parameter.  Check\n\tstatic_var.\n\t* optc-gen.awk: Declare local state variables.  Pass flags to var_ref.\n\nFrom-SVN: r100937", "tree": {"sha": "7e6e307d1535c560e0c4c03640939d48c37b0da8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7e6e307d1535c560e0c4c03640939d48c37b0da8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ee133b6978ba42e5b2b1f91ae0fa000bdc4686c1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee133b6978ba42e5b2b1f91ae0fa000bdc4686c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee133b6978ba42e5b2b1f91ae0fa000bdc4686c1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee133b6978ba42e5b2b1f91ae0fa000bdc4686c1/comments", "author": null, "committer": null, "parents": [{"sha": "efe4c4e7d2e0e003177382034a65384a8ad1ce42", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/efe4c4e7d2e0e003177382034a65384a8ad1ce42", "html_url": "https://github.com/Rust-GCC/gccrs/commit/efe4c4e7d2e0e003177382034a65384a8ad1ce42"}], "stats": {"total": 52, "additions": 47, "deletions": 5}, "files": [{"sha": "0de09727b8ceb822e66a2a1ca5db7584c5e4117a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee133b6978ba42e5b2b1f91ae0fa000bdc4686c1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee133b6978ba42e5b2b1f91ae0fa000bdc4686c1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ee133b6978ba42e5b2b1f91ae0fa000bdc4686c1", "patch": "@@ -1,3 +1,10 @@\n+2005-06-14  Richard Sandiford  <richard@codesourcery.com>\n+\n+\t* opt-functions.awk (global_state_p, needs_state_p, static_var): New.\n+\t(var_ref): Take the option's flags as a second parameter.  Check\n+\tstatic_var.\n+\t* optc-gen.awk: Declare local state variables.  Pass flags to var_ref.\n+\n 2005-06-14  Eric Botcazou  <ebotcazou@libertysurf.fr>\n \n \tPR target/20301"}, {"sha": "b5124969ceca5b4282109a67b5de31194814e0de", "filename": "gcc/opt-functions.awk", "status": "modified", "additions": 30, "deletions": 4, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee133b6978ba42e5b2b1f91ae0fa000bdc4686c1/gcc%2Fopt-functions.awk", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee133b6978ba42e5b2b1f91ae0fa000bdc4686c1/gcc%2Fopt-functions.awk", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopt-functions.awk?ref=ee133b6978ba42e5b2b1f91ae0fa000bdc4686c1", "patch": "@@ -89,6 +89,32 @@ function var_name(flags)\n \treturn nth_arg(0, opt_args(\"Var\", flags))\n }\n \n+# Return true if the option described by FLAGS has a globally-visible state.\n+function global_state_p(flags)\n+{\n+\treturn (var_name(flags) != \"\" \\\n+\t\t|| opt_args(\"Mask\", flags) != \"\" \\\n+\t\t|| opt_args(\"InverseMask\", flags) != \"\")\n+}\n+\n+# Return true if the option described by FLAGS must have some state\n+# associated with it.\n+function needs_state_p(flags)\n+{\n+\treturn flag_set_p(\"Target\", flags)\n+}\n+\n+# If FLAGS describes an option that needs a static state variable,\n+# return the name of that variable, otherwise return \"\".  NAME is\n+# the name of the option.\n+function static_var(name, flags)\n+{\n+\tif (global_state_p(flags) || !needs_state_p(flags))\n+\t\treturn \"\"\n+\tgsub (\"[^A-Za-z0-9]\", \"_\", name)\n+\treturn \"VAR_\" name\n+}\n+\n # Return the type of variable that should be associated with the given flags.\n function var_type(flags)\n {\n@@ -128,11 +154,11 @@ function var_set(flags)\n \treturn \"CLVC_BOOLEAN, 0\"\n }\n \n-# Given that an option has flags FLAGS, return an initializer for the\n-# \"flag_var\" field of its cl_options[] entry.\n-function var_ref(flags)\n+# Given that an option called NAME has flags FLAGS, return an initializer\n+# for the \"flag_var\" field of its cl_options[] entry.\n+function var_ref(name, flags)\n {\n-\tname = var_name(flags)\n+\tname = var_name(flags) static_var(name, flags)\n \tif (name != \"\")\n \t\treturn \"&\" name\n \tif (opt_args(\"Mask\", flags) != \"\")"}, {"sha": "85876e0f14829fe182fd66dce28fa5af3736f0f5", "filename": "gcc/optc-gen.awk", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee133b6978ba42e5b2b1f91ae0fa000bdc4686c1/gcc%2Foptc-gen.awk", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee133b6978ba42e5b2b1f91ae0fa000bdc4686c1/gcc%2Foptc-gen.awk", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptc-gen.awk?ref=ee133b6978ba42e5b2b1f91ae0fa000bdc4686c1", "patch": "@@ -85,6 +85,14 @@ for (i = 0; i < n_opts; i++) {\n \tvar_seen[name] = 1;\n }\n \n+print \"\"\n+print \"/* Local state variables.  */\"\n+for (i = 0; i < n_opts; i++) {\n+\tname = static_var(opts[i], flags[i]);\n+\tif (name != \"\")\n+\t\tprint \"static \" var_type(flags[i]) name \";\"\n+}\n+print \"\"\n \n print \"const char * const lang_names[] =\\n{\"\n for (i = 0; i < n_langs; i++) {\n@@ -152,7 +160,8 @@ for (i = 0; i < n_opts; i++) {\n \t\t       condition, cl_flags, cl_flags)\n \telse\n \t\tprintf(\"    %s,\\n\", cl_flags)\n-\tprintf(\"    %s, %s }%s\\n\", var_ref(flags[i]), var_set(flags[i]), comma)\n+\tprintf(\"    %s, %s }%s\\n\", var_ref(opts[i], flags[i]),\n+\t       var_set(flags[i]), comma)\n }\n \n print \"};\""}]}