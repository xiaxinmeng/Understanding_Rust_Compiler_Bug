{"sha": "baed70ac77dc04e7c419675660e75884836a96dc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmFlZDcwYWM3N2RjMDRlN2M0MTk2NzU2NjBlNzU4ODQ4MzZhOTZkYw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-07-05T09:04:59Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-07-05T09:04:59Z"}, "message": "[multiple changes]\n\n2013-07-05  Robert Dewar  <dewar@adacore.com>\n\n\t* a-cfhase.adb, sem_prag.adb, a-cfhama.adb: Minor reformatting.\n\n2013-07-05  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch12.adb (Copy_Generic_Node): Check that name in function\n\tcall is a valid entity name before preserving entity in generic\n\tcopy.\n\n2013-07-05  Thomas Quinot  <quinot@adacore.com>\n\n\t* par-ch5.adb: Minor reformatting.\n\n2013-07-05  Thomas Quinot  <quinot@adacore.com>\n\n\t* sinfo.ads: Minor clarification to documentation for\n\tN_Implicit_Label_Declaration.\n\n2013-07-05  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* a-except-2005.adb, a-except.adb: Add constant Rmsg_17. Correct the\n\tvalues of all remaining constants.\n\t(Rcheck_35): New routine along with pragmas Export and No_Return.\n\t(Rcheck_PE_Aliased_Parameters): New routine along with pragmas\n\tExport and No_Return.\n\t(Rcheck_PE_All_Guards_Closed,\n\tRcheck_PE_Bad_Predicated_Generic_Type,\n\tRcheck_PE_Current_Task_In_Entry_Body,\n\tRcheck_PE_Duplicated_Entry_Address, Rcheck_PE_Explicit_Raise,\n\tRcheck_PE_Implicit_Return, Rcheck_PE_Misaligned_Address_Value,\n\tRcheck_PE_Missing_Return, Rcheck_PE_Overlaid_Controlled_Object,\n\tRcheck_PE_Potentially_Blocking_Operation\n\tRcheck_PE_Stubbed_Subprogram_Called,\n\tRcheck_PE_Unchecked_Union_Restriction,\n\tRcheck_PE_Non_Transportable_Actual, Rcheck_SE_Empty_Storage_Pool,\n\tRcheck_SE_Explicit_Raise, Rcheck_SE_Infinite_Recursion,\n\tRcheck_SE_Object_Too_Large, Rcheck_PE_Finalize_Raised_Exception):\n\tUpdate the use of Rmsg_XX.\n\t(Rcheck_17, Rcheck_18, Rcheck_19,\n\tRcheck_20, Rcheck_21, Rcheck_22, Rcheck_23, Rcheck_24, Rcheck_25,\n\tRcheck_26, Rcheck_27, Rcheck_28, Rcheck_29, Rcheck_30, Rcheck_31,\n\tRcheck_32, Rcheck_33, Rcheck_34, Rcheck_35): Update corresponding\n\trenamed subprograms.\n\t* checks.adb: Add with and use clause for Stringt.\n\t(Apply_Parameter_Aliasing_Checks): Make constant Loc visible in\n\tall subprograms of Apply_Parameter_Aliasing_Checks. Remove local\n\tvariable Cond. Initialize Check at the start of the routine. Use\n\troutine Overlap_Check to construct a simple or a detailed run-time\n\tcheck. Update the creation of the simple check.\n\t(Overlap_Check): New routine.\n\t* exp_ch11.adb (Get_RT_Exception_Name): Add a value for\n\tPE_Aliased_Parameters.\n\t* types.ads: Add new enumeration literal\n\tPE_Aliased_Parameters. Update the corresponding integer values\n\tof all RT_Exception_Code literals.\n\t* types.h: Add new constant PE_Aliased_Parameters. Correct the\n\tvalues of all remaining constants.\n\n2013-07-05  Yannick Moy  <moy@adacore.com>\n\n\t* gnat_rm.texi: Minor renaming of SPARK into SPARK 2005 in\n\tdocumentation.\n\nFrom-SVN: r200690", "tree": {"sha": "580711a0bf38fe3bf659150ccf1d17609a6fc509", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/580711a0bf38fe3bf659150ccf1d17609a6fc509"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/baed70ac77dc04e7c419675660e75884836a96dc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/baed70ac77dc04e7c419675660e75884836a96dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/baed70ac77dc04e7c419675660e75884836a96dc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/baed70ac77dc04e7c419675660e75884836a96dc/comments", "author": null, "committer": null, "parents": [{"sha": "45c9ce986815135f925dbc0199d3932e860d4a02", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45c9ce986815135f925dbc0199d3932e860d4a02", "html_url": "https://github.com/Rust-GCC/gccrs/commit/45c9ce986815135f925dbc0199d3932e860d4a02"}], "stats": {"total": 537, "additions": 357, "deletions": 180}, "files": [{"sha": "7bf4666f39fed72007136e93a95bf194c1e7814c", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 64, "deletions": 0, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/baed70ac77dc04e7c419675660e75884836a96dc/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/baed70ac77dc04e7c419675660e75884836a96dc/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=baed70ac77dc04e7c419675660e75884836a96dc", "patch": "@@ -1,3 +1,67 @@\n+2013-07-05  Robert Dewar  <dewar@adacore.com>\n+\n+\t* a-cfhase.adb, sem_prag.adb, a-cfhama.adb: Minor reformatting.\n+\n+2013-07-05  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch12.adb (Copy_Generic_Node): Check that name in function\n+\tcall is a valid entity name before preserving entity in generic\n+\tcopy.\n+\n+2013-07-05  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* par-ch5.adb: Minor reformatting.\n+\n+2013-07-05  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* sinfo.ads: Minor clarification to documentation for\n+\tN_Implicit_Label_Declaration.\n+\n+2013-07-05  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* a-except-2005.adb, a-except.adb: Add constant Rmsg_17. Correct the\n+\tvalues of all remaining constants.\n+\t(Rcheck_35): New routine along with pragmas Export and No_Return.\n+\t(Rcheck_PE_Aliased_Parameters): New routine along with pragmas\n+\tExport and No_Return.\n+\t(Rcheck_PE_All_Guards_Closed,\n+\tRcheck_PE_Bad_Predicated_Generic_Type,\n+\tRcheck_PE_Current_Task_In_Entry_Body,\n+\tRcheck_PE_Duplicated_Entry_Address, Rcheck_PE_Explicit_Raise,\n+\tRcheck_PE_Implicit_Return, Rcheck_PE_Misaligned_Address_Value,\n+\tRcheck_PE_Missing_Return, Rcheck_PE_Overlaid_Controlled_Object,\n+\tRcheck_PE_Potentially_Blocking_Operation\n+\tRcheck_PE_Stubbed_Subprogram_Called,\n+\tRcheck_PE_Unchecked_Union_Restriction,\n+\tRcheck_PE_Non_Transportable_Actual, Rcheck_SE_Empty_Storage_Pool,\n+\tRcheck_SE_Explicit_Raise, Rcheck_SE_Infinite_Recursion,\n+\tRcheck_SE_Object_Too_Large, Rcheck_PE_Finalize_Raised_Exception):\n+\tUpdate the use of Rmsg_XX.\n+\t(Rcheck_17, Rcheck_18, Rcheck_19,\n+\tRcheck_20, Rcheck_21, Rcheck_22, Rcheck_23, Rcheck_24, Rcheck_25,\n+\tRcheck_26, Rcheck_27, Rcheck_28, Rcheck_29, Rcheck_30, Rcheck_31,\n+\tRcheck_32, Rcheck_33, Rcheck_34, Rcheck_35): Update corresponding\n+\trenamed subprograms.\n+\t* checks.adb: Add with and use clause for Stringt.\n+\t(Apply_Parameter_Aliasing_Checks): Make constant Loc visible in\n+\tall subprograms of Apply_Parameter_Aliasing_Checks. Remove local\n+\tvariable Cond. Initialize Check at the start of the routine. Use\n+\troutine Overlap_Check to construct a simple or a detailed run-time\n+\tcheck. Update the creation of the simple check.\n+\t(Overlap_Check): New routine.\n+\t* exp_ch11.adb (Get_RT_Exception_Name): Add a value for\n+\tPE_Aliased_Parameters.\n+\t* types.ads: Add new enumeration literal\n+\tPE_Aliased_Parameters. Update the corresponding integer values\n+\tof all RT_Exception_Code literals.\n+\t* types.h: Add new constant PE_Aliased_Parameters. Correct the\n+\tvalues of all remaining constants.\n+\n+2013-07-05  Yannick Moy  <moy@adacore.com>\n+\n+\t* gnat_rm.texi: Minor renaming of SPARK into SPARK 2005 in\n+\tdocumentation.\n+\n 2013-07-05  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_prag.adb (Analyze_PPC_In_Decl_Part): For a class-wide"}, {"sha": "3ab4af23e786972198e28aaef37781b3cd5cce82", "filename": "gcc/ada/a-cfhama.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/baed70ac77dc04e7c419675660e75884836a96dc/gcc%2Fada%2Fa-cfhama.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/baed70ac77dc04e7c419675660e75884836a96dc/gcc%2Fada%2Fa-cfhama.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cfhama.adb?ref=baed70ac77dc04e7c419675660e75884836a96dc", "patch": "@@ -488,7 +488,6 @@ package body Ada.Containers.Formal_Hashed_Maps is\n       Insert (Container, Key, New_Item, Position, Inserted);\n \n       if not Inserted then\n-\n          declare\n             N : Node_Type renames Container.Nodes (Position.Node);\n          begin"}, {"sha": "451ec32a8861d88aa265b2f0ab126acdc7ae749d", "filename": "gcc/ada/a-cfhase.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/baed70ac77dc04e7c419675660e75884836a96dc/gcc%2Fada%2Fa-cfhase.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/baed70ac77dc04e7c419675660e75884836a96dc/gcc%2Fada%2Fa-cfhase.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cfhase.adb?ref=baed70ac77dc04e7c419675660e75884836a96dc", "patch": "@@ -687,7 +687,6 @@ package body Ada.Containers.Formal_Hashed_Sets is\n       Insert (Container, New_Item, Position, Inserted);\n \n       if not Inserted then\n-\n          Container.Nodes (Position.Node).Element := New_Item;\n       end if;\n    end Include;"}, {"sha": "3453eae90ab7fe5bf05cc00e929910d762271565", "filename": "gcc/ada/a-except-2005.adb", "status": "modified", "additions": 50, "deletions": 37, "changes": 87, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/baed70ac77dc04e7c419675660e75884836a96dc/gcc%2Fada%2Fa-except-2005.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/baed70ac77dc04e7c419675660e75884836a96dc/gcc%2Fada%2Fa-except-2005.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-except-2005.adb?ref=baed70ac77dc04e7c419675660e75884836a96dc", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -447,6 +447,8 @@ package body Ada.Exceptions is\n      (File : System.Address; Line : Integer);\n    procedure Rcheck_PE_Address_Of_Intrinsic\n      (File : System.Address; Line : Integer);\n+   procedure Rcheck_PE_Aliased_Parameters\n+     (File : System.Address; Line : Integer);\n    procedure Rcheck_PE_All_Guards_Closed\n      (File : System.Address; Line : Integer);\n    procedure Rcheck_PE_Bad_Predicated_Generic_Type\n@@ -532,6 +534,8 @@ package body Ada.Exceptions is\n                   \"__gnat_rcheck_PE_Accessibility_Check\");\n    pragma Export (C, Rcheck_PE_Address_Of_Intrinsic,\n                   \"__gnat_rcheck_PE_Address_Of_Intrinsic\");\n+   pragma Export (C, Rcheck_PE_Aliased_Parameters,\n+                  \"__gnat_rcheck_PE_Aliased_Parameters\");\n    pragma Export (C, Rcheck_PE_All_Guards_Closed,\n                   \"__gnat_rcheck_PE_All_Guards_Closed\");\n    pragma Export (C, Rcheck_PE_Bad_Predicated_Generic_Type,\n@@ -599,6 +603,7 @@ package body Ada.Exceptions is\n    pragma No_Return (Rcheck_PE_Access_Before_Elaboration);\n    pragma No_Return (Rcheck_PE_Accessibility_Check);\n    pragma No_Return (Rcheck_PE_Address_Of_Intrinsic);\n+   pragma No_Return (Rcheck_PE_Aliased_Parameters);\n    pragma No_Return (Rcheck_PE_All_Guards_Closed);\n    pragma No_Return (Rcheck_PE_Bad_Predicated_Generic_Type);\n    pragma No_Return (Rcheck_PE_Current_Task_In_Entry_Body);\n@@ -650,27 +655,28 @@ package body Ada.Exceptions is\n    Rmsg_15 : constant String := \"accessibility check failed\"       & NUL;\n    Rmsg_16 : constant String := \"attempt to take address of\"       &\n                                 \" intrinsic subprogram\"            & NUL;\n-   Rmsg_17 : constant String := \"all guards closed\"                & NUL;\n-   Rmsg_18 : constant String := \"improper use of generic subtype\"  &\n+   Rmsg_17 : constant String := \"aliased parameters\"               & NUL;\n+   Rmsg_18 : constant String := \"all guards closed\"                & NUL;\n+   Rmsg_19 : constant String := \"improper use of generic subtype\"  &\n                                 \" with predicate\"                  & NUL;\n-   Rmsg_19 : constant String := \"Current_Task referenced in entry\" &\n+   Rmsg_20 : constant String := \"Current_Task referenced in entry\" &\n                                 \" body\"                            & NUL;\n-   Rmsg_20 : constant String := \"duplicated entry address\"         & NUL;\n-   Rmsg_21 : constant String := \"explicit raise\"                   & NUL;\n-   Rmsg_22 : constant String := \"finalize/adjust raised exception\" & NUL;\n-   Rmsg_23 : constant String := \"implicit return with No_Return\"   & NUL;\n-   Rmsg_24 : constant String := \"misaligned address value\"         & NUL;\n-   Rmsg_25 : constant String := \"missing return\"                   & NUL;\n-   Rmsg_26 : constant String := \"overlaid controlled object\"       & NUL;\n-   Rmsg_27 : constant String := \"potentially blocking operation\"   & NUL;\n-   Rmsg_28 : constant String := \"stubbed subprogram called\"        & NUL;\n-   Rmsg_29 : constant String := \"unchecked union restriction\"      & NUL;\n-   Rmsg_30 : constant String := \"actual/returned class-wide\"       &\n+   Rmsg_21 : constant String := \"duplicated entry address\"         & NUL;\n+   Rmsg_22 : constant String := \"explicit raise\"                   & NUL;\n+   Rmsg_23 : constant String := \"finalize/adjust raised exception\" & NUL;\n+   Rmsg_24 : constant String := \"implicit return with No_Return\"   & NUL;\n+   Rmsg_25 : constant String := \"misaligned address value\"         & NUL;\n+   Rmsg_26 : constant String := \"missing return\"                   & NUL;\n+   Rmsg_27 : constant String := \"overlaid controlled object\"       & NUL;\n+   Rmsg_28 : constant String := \"potentially blocking operation\"   & NUL;\n+   Rmsg_29 : constant String := \"stubbed subprogram called\"        & NUL;\n+   Rmsg_30 : constant String := \"unchecked union restriction\"      & NUL;\n+   Rmsg_31 : constant String := \"actual/returned class-wide\"       &\n                                 \" value not transportable\"         & NUL;\n-   Rmsg_31 : constant String := \"empty storage pool\"               & NUL;\n-   Rmsg_32 : constant String := \"explicit raise\"                   & NUL;\n-   Rmsg_33 : constant String := \"infinite recursion\"               & NUL;\n-   Rmsg_34 : constant String := \"object too large\"                 & NUL;\n+   Rmsg_32 : constant String := \"empty storage pool\"               & NUL;\n+   Rmsg_33 : constant String := \"explicit raise\"                   & NUL;\n+   Rmsg_34 : constant String := \"infinite recursion\"               & NUL;\n+   Rmsg_35 : constant String := \"object too large\"                 & NUL;\n \n    -----------------------\n    -- Polling Interface --\n@@ -1316,123 +1322,130 @@ package body Ada.Exceptions is\n       Raise_Program_Error_Msg (File, Line, Rmsg_16'Address);\n    end Rcheck_PE_Address_Of_Intrinsic;\n \n-   procedure Rcheck_PE_All_Guards_Closed\n+   procedure Rcheck_PE_Aliased_Parameters\n      (File : System.Address; Line : Integer)\n    is\n    begin\n       Raise_Program_Error_Msg (File, Line, Rmsg_17'Address);\n+   end Rcheck_PE_Aliased_Parameters;\n+\n+   procedure Rcheck_PE_All_Guards_Closed\n+     (File : System.Address; Line : Integer)\n+   is\n+   begin\n+      Raise_Program_Error_Msg (File, Line, Rmsg_18'Address);\n    end Rcheck_PE_All_Guards_Closed;\n \n    procedure Rcheck_PE_Bad_Predicated_Generic_Type\n      (File : System.Address; Line : Integer)\n    is\n    begin\n-      Raise_Program_Error_Msg (File, Line, Rmsg_18'Address);\n+      Raise_Program_Error_Msg (File, Line, Rmsg_19'Address);\n    end Rcheck_PE_Bad_Predicated_Generic_Type;\n \n    procedure Rcheck_PE_Current_Task_In_Entry_Body\n      (File : System.Address; Line : Integer)\n    is\n    begin\n-      Raise_Program_Error_Msg (File, Line, Rmsg_19'Address);\n+      Raise_Program_Error_Msg (File, Line, Rmsg_20'Address);\n    end Rcheck_PE_Current_Task_In_Entry_Body;\n \n    procedure Rcheck_PE_Duplicated_Entry_Address\n      (File : System.Address; Line : Integer)\n    is\n    begin\n-      Raise_Program_Error_Msg (File, Line, Rmsg_20'Address);\n+      Raise_Program_Error_Msg (File, Line, Rmsg_21'Address);\n    end Rcheck_PE_Duplicated_Entry_Address;\n \n    procedure Rcheck_PE_Explicit_Raise\n      (File : System.Address; Line : Integer)\n    is\n    begin\n-      Raise_Program_Error_Msg (File, Line, Rmsg_21'Address);\n+      Raise_Program_Error_Msg (File, Line, Rmsg_22'Address);\n    end Rcheck_PE_Explicit_Raise;\n \n    procedure Rcheck_PE_Implicit_Return\n      (File : System.Address; Line : Integer)\n    is\n    begin\n-      Raise_Program_Error_Msg (File, Line, Rmsg_23'Address);\n+      Raise_Program_Error_Msg (File, Line, Rmsg_24'Address);\n    end Rcheck_PE_Implicit_Return;\n \n    procedure Rcheck_PE_Misaligned_Address_Value\n      (File : System.Address; Line : Integer)\n    is\n    begin\n-      Raise_Program_Error_Msg (File, Line, Rmsg_24'Address);\n+      Raise_Program_Error_Msg (File, Line, Rmsg_25'Address);\n    end Rcheck_PE_Misaligned_Address_Value;\n \n    procedure Rcheck_PE_Missing_Return\n      (File : System.Address; Line : Integer)\n    is\n    begin\n-      Raise_Program_Error_Msg (File, Line, Rmsg_25'Address);\n+      Raise_Program_Error_Msg (File, Line, Rmsg_26'Address);\n    end Rcheck_PE_Missing_Return;\n \n    procedure Rcheck_PE_Overlaid_Controlled_Object\n      (File : System.Address; Line : Integer)\n    is\n    begin\n-      Raise_Program_Error_Msg (File, Line, Rmsg_26'Address);\n+      Raise_Program_Error_Msg (File, Line, Rmsg_27'Address);\n    end Rcheck_PE_Overlaid_Controlled_Object;\n \n    procedure Rcheck_PE_Potentially_Blocking_Operation\n      (File : System.Address; Line : Integer)\n    is\n    begin\n-      Raise_Program_Error_Msg (File, Line, Rmsg_27'Address);\n+      Raise_Program_Error_Msg (File, Line, Rmsg_28'Address);\n    end Rcheck_PE_Potentially_Blocking_Operation;\n \n    procedure Rcheck_PE_Stubbed_Subprogram_Called\n      (File : System.Address; Line : Integer)\n    is\n    begin\n-      Raise_Program_Error_Msg (File, Line, Rmsg_28'Address);\n+      Raise_Program_Error_Msg (File, Line, Rmsg_29'Address);\n    end Rcheck_PE_Stubbed_Subprogram_Called;\n \n    procedure Rcheck_PE_Unchecked_Union_Restriction\n      (File : System.Address; Line : Integer)\n    is\n    begin\n-      Raise_Program_Error_Msg (File, Line, Rmsg_29'Address);\n+      Raise_Program_Error_Msg (File, Line, Rmsg_30'Address);\n    end Rcheck_PE_Unchecked_Union_Restriction;\n \n    procedure Rcheck_PE_Non_Transportable_Actual\n      (File : System.Address; Line : Integer)\n    is\n    begin\n-      Raise_Program_Error_Msg (File, Line, Rmsg_30'Address);\n+      Raise_Program_Error_Msg (File, Line, Rmsg_31'Address);\n    end Rcheck_PE_Non_Transportable_Actual;\n \n    procedure Rcheck_SE_Empty_Storage_Pool\n      (File : System.Address; Line : Integer)\n    is\n    begin\n-      Raise_Storage_Error_Msg (File, Line, Rmsg_31'Address);\n+      Raise_Storage_Error_Msg (File, Line, Rmsg_32'Address);\n    end Rcheck_SE_Empty_Storage_Pool;\n \n    procedure Rcheck_SE_Explicit_Raise\n      (File : System.Address; Line : Integer)\n    is\n    begin\n-      Raise_Storage_Error_Msg (File, Line, Rmsg_32'Address);\n+      Raise_Storage_Error_Msg (File, Line, Rmsg_33'Address);\n    end Rcheck_SE_Explicit_Raise;\n \n    procedure Rcheck_SE_Infinite_Recursion\n      (File : System.Address; Line : Integer)\n    is\n    begin\n-      Raise_Storage_Error_Msg (File, Line, Rmsg_33'Address);\n+      Raise_Storage_Error_Msg (File, Line, Rmsg_34'Address);\n    end Rcheck_SE_Infinite_Recursion;\n \n    procedure Rcheck_SE_Object_Too_Large\n      (File : System.Address; Line : Integer)\n    is\n    begin\n-      Raise_Storage_Error_Msg (File, Line, Rmsg_34'Address);\n+      Raise_Storage_Error_Msg (File, Line, Rmsg_35'Address);\n    end Rcheck_SE_Object_Too_Large;\n \n    procedure Rcheck_CE_Access_Check_Ext\n@@ -1488,7 +1501,7 @@ package body Ada.Exceptions is\n       --  This is consistent with Raise_From_Controlled_Operation\n \n       Exception_Data.Set_Exception_C_Msg\n-        (X, Program_Error_Def'Access, File, Line, 0, Rmsg_22'Address);\n+        (X, Program_Error_Def'Access, File, Line, 0, Rmsg_23'Address);\n       Complete_And_Propagate_Occurrence (X);\n    end Rcheck_PE_Finalize_Raised_Exception;\n "}, {"sha": "65687d72266d21034440e9295165e1efd0438388", "filename": "gcc/ada/a-except.adb", "status": "modified", "additions": 72, "deletions": 54, "changes": 126, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/baed70ac77dc04e7c419675660e75884836a96dc/gcc%2Fada%2Fa-except.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/baed70ac77dc04e7c419675660e75884836a96dc/gcc%2Fada%2Fa-except.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-except.adb?ref=baed70ac77dc04e7c419675660e75884836a96dc", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -394,6 +394,8 @@ package body Ada.Exceptions is\n      (File : System.Address; Line : Integer);\n    procedure Rcheck_PE_Address_Of_Intrinsic\n      (File : System.Address; Line : Integer);\n+   procedure Rcheck_PE_Aliased_Parameters\n+     (File : System.Address; Line : Integer);\n    procedure Rcheck_PE_All_Guards_Closed\n      (File : System.Address; Line : Integer);\n    procedure Rcheck_PE_Bad_Predicated_Generic_Type\n@@ -470,6 +472,8 @@ package body Ada.Exceptions is\n                   \"__gnat_rcheck_PE_Accessibility_Check\");\n    pragma Export (C, Rcheck_PE_Address_Of_Intrinsic,\n                   \"__gnat_rcheck_PE_Address_Of_Intrinsic\");\n+   pragma Export (C, Rcheck_PE_Aliased_Parameters,\n+                  \"__gnat_rcheck_PE_Aliased_Parameters\");\n    pragma Export (C, Rcheck_PE_All_Guards_Closed,\n                   \"__gnat_rcheck_PE_All_Guards_Closed\");\n    pragma Export (C, Rcheck_PE_Bad_Predicated_Generic_Type,\n@@ -528,6 +532,7 @@ package body Ada.Exceptions is\n    pragma No_Return (Rcheck_PE_Access_Before_Elaboration);\n    pragma No_Return (Rcheck_PE_Accessibility_Check);\n    pragma No_Return (Rcheck_PE_Address_Of_Intrinsic);\n+   pragma No_Return (Rcheck_PE_Aliased_Parameters);\n    pragma No_Return (Rcheck_PE_All_Guards_Closed);\n    pragma No_Return (Rcheck_PE_Bad_Predicated_Generic_Type);\n    pragma No_Return (Rcheck_PE_Current_Task_In_Entry_Body);\n@@ -583,6 +588,7 @@ package body Ada.Exceptions is\n    procedure Rcheck_32 (File : System.Address; Line : Integer);\n    procedure Rcheck_33 (File : System.Address; Line : Integer);\n    procedure Rcheck_34 (File : System.Address; Line : Integer);\n+   procedure Rcheck_35 (File : System.Address; Line : Integer);\n \n    procedure Rcheck_22 (File : System.Address; Line : Integer);\n \n@@ -621,6 +627,7 @@ package body Ada.Exceptions is\n    pragma Export (C, Rcheck_32, \"__gnat_rcheck_32\");\n    pragma Export (C, Rcheck_33, \"__gnat_rcheck_33\");\n    pragma Export (C, Rcheck_34, \"__gnat_rcheck_34\");\n+   pragma Export (C, Rcheck_35, \"__gnat_rcheck_35\");\n \n    --  None of these procedures ever returns (they raise an exception!). By\n    --  using pragma No_Return, we ensure that any junk code after the call,\n@@ -660,6 +667,7 @@ package body Ada.Exceptions is\n    pragma No_Return (Rcheck_32);\n    pragma No_Return (Rcheck_33);\n    pragma No_Return (Rcheck_34);\n+   pragma No_Return (Rcheck_35);\n \n    ---------------------------------------------\n    -- Reason Strings for Run-Time Check Calls --\n@@ -688,27 +696,28 @@ package body Ada.Exceptions is\n    Rmsg_15 : constant String := \"accessibility check failed\"       & NUL;\n    Rmsg_16 : constant String := \"attempt to take address of\"       &\n                                 \" intrinsic subprogram\"            & NUL;\n-   Rmsg_17 : constant String := \"all guards closed\"                & NUL;\n-   Rmsg_18 : constant String := \"improper use of generic subtype\"  &\n+   Rmsg_17 : constant String := \"aliased parameters\"               & NUL;\n+   Rmsg_18 : constant String := \"all guards closed\"                & NUL;\n+   Rmsg_19 : constant String := \"improper use of generic subtype\"  &\n                                 \" with predicate\"                  & NUL;\n-   Rmsg_19 : constant String := \"Current_Task referenced in entry\" &\n+   Rmsg_20 : constant String := \"Current_Task referenced in entry\" &\n                                 \" body\"                            & NUL;\n-   Rmsg_20 : constant String := \"duplicated entry address\"         & NUL;\n-   Rmsg_21 : constant String := \"explicit raise\"                   & NUL;\n-   Rmsg_22 : constant String := \"finalize/adjust raised exception\" & NUL;\n-   Rmsg_23 : constant String := \"implicit return with No_Return\"   & NUL;\n-   Rmsg_24 : constant String := \"misaligned address value\"         & NUL;\n-   Rmsg_25 : constant String := \"missing return\"                   & NUL;\n-   Rmsg_26 : constant String := \"overlaid controlled object\"       & NUL;\n-   Rmsg_27 : constant String := \"potentially blocking operation\"   & NUL;\n-   Rmsg_28 : constant String := \"stubbed subprogram called\"        & NUL;\n-   Rmsg_29 : constant String := \"unchecked union restriction\"      & NUL;\n-   Rmsg_30 : constant String := \"actual/returned class-wide\"       &\n+   Rmsg_21 : constant String := \"duplicated entry address\"         & NUL;\n+   Rmsg_22 : constant String := \"explicit raise\"                   & NUL;\n+   Rmsg_23 : constant String := \"finalize/adjust raised exception\" & NUL;\n+   Rmsg_24 : constant String := \"implicit return with No_Return\"   & NUL;\n+   Rmsg_25 : constant String := \"misaligned address value\"         & NUL;\n+   Rmsg_26 : constant String := \"missing return\"                   & NUL;\n+   Rmsg_27 : constant String := \"overlaid controlled object\"       & NUL;\n+   Rmsg_28 : constant String := \"potentially blocking operation\"   & NUL;\n+   Rmsg_29 : constant String := \"stubbed subprogram called\"        & NUL;\n+   Rmsg_30 : constant String := \"unchecked union restriction\"      & NUL;\n+   Rmsg_31 : constant String := \"actual/returned class-wide\"       &\n                                 \" value not transportable\"         & NUL;\n-   Rmsg_31 : constant String := \"empty storage pool\"               & NUL;\n-   Rmsg_32 : constant String := \"explicit raise\"                   & NUL;\n-   Rmsg_33 : constant String := \"infinite recursion\"               & NUL;\n-   Rmsg_34 : constant String := \"object too large\"                 & NUL;\n+   Rmsg_32 : constant String := \"empty storage pool\"               & NUL;\n+   Rmsg_33 : constant String := \"explicit raise\"                   & NUL;\n+   Rmsg_34 : constant String := \"infinite recursion\"               & NUL;\n+   Rmsg_35 : constant String := \"object too large\"                 & NUL;\n \n    -----------------------\n    -- Polling Interface --\n@@ -1285,123 +1294,130 @@ package body Ada.Exceptions is\n       Raise_Program_Error_Msg (File, Line, Rmsg_16'Address);\n    end Rcheck_PE_Address_Of_Intrinsic;\n \n-   procedure Rcheck_PE_All_Guards_Closed\n+   procedure Rcheck_PE_Aliased_Parameters\n      (File : System.Address; Line : Integer)\n    is\n    begin\n       Raise_Program_Error_Msg (File, Line, Rmsg_17'Address);\n+   end Rcheck_PE_Aliased_Parameters;\n+\n+   procedure Rcheck_PE_All_Guards_Closed\n+     (File : System.Address; Line : Integer)\n+   is\n+   begin\n+      Raise_Program_Error_Msg (File, Line, Rmsg_18'Address);\n    end Rcheck_PE_All_Guards_Closed;\n \n    procedure Rcheck_PE_Bad_Predicated_Generic_Type\n      (File : System.Address; Line : Integer)\n    is\n    begin\n-      Raise_Program_Error_Msg (File, Line, Rmsg_18'Address);\n+      Raise_Program_Error_Msg (File, Line, Rmsg_19'Address);\n    end Rcheck_PE_Bad_Predicated_Generic_Type;\n \n    procedure Rcheck_PE_Current_Task_In_Entry_Body\n      (File : System.Address; Line : Integer)\n    is\n    begin\n-      Raise_Program_Error_Msg (File, Line, Rmsg_19'Address);\n+      Raise_Program_Error_Msg (File, Line, Rmsg_20'Address);\n    end Rcheck_PE_Current_Task_In_Entry_Body;\n \n    procedure Rcheck_PE_Duplicated_Entry_Address\n      (File : System.Address; Line : Integer)\n    is\n    begin\n-      Raise_Program_Error_Msg (File, Line, Rmsg_20'Address);\n+      Raise_Program_Error_Msg (File, Line, Rmsg_21'Address);\n    end Rcheck_PE_Duplicated_Entry_Address;\n \n    procedure Rcheck_PE_Explicit_Raise\n      (File : System.Address; Line : Integer)\n    is\n    begin\n-      Raise_Program_Error_Msg (File, Line, Rmsg_21'Address);\n+      Raise_Program_Error_Msg (File, Line, Rmsg_22'Address);\n    end Rcheck_PE_Explicit_Raise;\n \n    procedure Rcheck_PE_Implicit_Return\n      (File : System.Address; Line : Integer)\n    is\n    begin\n-      Raise_Program_Error_Msg (File, Line, Rmsg_23'Address);\n+      Raise_Program_Error_Msg (File, Line, Rmsg_24'Address);\n    end Rcheck_PE_Implicit_Return;\n \n    procedure Rcheck_PE_Misaligned_Address_Value\n      (File : System.Address; Line : Integer)\n    is\n    begin\n-      Raise_Program_Error_Msg (File, Line, Rmsg_24'Address);\n+      Raise_Program_Error_Msg (File, Line, Rmsg_25'Address);\n    end Rcheck_PE_Misaligned_Address_Value;\n \n    procedure Rcheck_PE_Missing_Return\n      (File : System.Address; Line : Integer)\n    is\n    begin\n-      Raise_Program_Error_Msg (File, Line, Rmsg_25'Address);\n+      Raise_Program_Error_Msg (File, Line, Rmsg_26'Address);\n    end Rcheck_PE_Missing_Return;\n \n    procedure Rcheck_PE_Overlaid_Controlled_Object\n      (File : System.Address; Line : Integer)\n    is\n    begin\n-      Raise_Program_Error_Msg (File, Line, Rmsg_26'Address);\n+      Raise_Program_Error_Msg (File, Line, Rmsg_27'Address);\n    end Rcheck_PE_Overlaid_Controlled_Object;\n \n    procedure Rcheck_PE_Potentially_Blocking_Operation\n      (File : System.Address; Line : Integer)\n    is\n    begin\n-      Raise_Program_Error_Msg (File, Line, Rmsg_27'Address);\n+      Raise_Program_Error_Msg (File, Line, Rmsg_28'Address);\n    end Rcheck_PE_Potentially_Blocking_Operation;\n \n    procedure Rcheck_PE_Stubbed_Subprogram_Called\n      (File : System.Address; Line : Integer)\n    is\n    begin\n-      Raise_Program_Error_Msg (File, Line, Rmsg_28'Address);\n+      Raise_Program_Error_Msg (File, Line, Rmsg_29'Address);\n    end Rcheck_PE_Stubbed_Subprogram_Called;\n \n    procedure Rcheck_PE_Unchecked_Union_Restriction\n      (File : System.Address; Line : Integer)\n    is\n    begin\n-      Raise_Program_Error_Msg (File, Line, Rmsg_29'Address);\n+      Raise_Program_Error_Msg (File, Line, Rmsg_30'Address);\n    end Rcheck_PE_Unchecked_Union_Restriction;\n \n    procedure Rcheck_PE_Non_Transportable_Actual\n      (File : System.Address; Line : Integer)\n    is\n    begin\n-      Raise_Program_Error_Msg (File, Line, Rmsg_30'Address);\n+      Raise_Program_Error_Msg (File, Line, Rmsg_31'Address);\n    end Rcheck_PE_Non_Transportable_Actual;\n \n    procedure Rcheck_SE_Empty_Storage_Pool\n      (File : System.Address; Line : Integer)\n    is\n    begin\n-      Raise_Storage_Error_Msg (File, Line, Rmsg_31'Address);\n+      Raise_Storage_Error_Msg (File, Line, Rmsg_32'Address);\n    end Rcheck_SE_Empty_Storage_Pool;\n \n    procedure Rcheck_SE_Explicit_Raise\n      (File : System.Address; Line : Integer)\n    is\n    begin\n-      Raise_Storage_Error_Msg (File, Line, Rmsg_32'Address);\n+      Raise_Storage_Error_Msg (File, Line, Rmsg_33'Address);\n    end Rcheck_SE_Explicit_Raise;\n \n    procedure Rcheck_SE_Infinite_Recursion\n      (File : System.Address; Line : Integer)\n    is\n    begin\n-      Raise_Storage_Error_Msg (File, Line, Rmsg_33'Address);\n+      Raise_Storage_Error_Msg (File, Line, Rmsg_34'Address);\n    end Rcheck_SE_Infinite_Recursion;\n \n    procedure Rcheck_SE_Object_Too_Large\n      (File : System.Address; Line : Integer)\n    is\n    begin\n-      Raise_Storage_Error_Msg (File, Line, Rmsg_34'Address);\n+      Raise_Storage_Error_Msg (File, Line, Rmsg_35'Address);\n    end Rcheck_SE_Object_Too_Large;\n \n    procedure Rcheck_PE_Finalize_Raised_Exception\n@@ -1417,7 +1433,7 @@ package body Ada.Exceptions is\n       --  This is consistent with Raise_From_Controlled_Operation\n \n       Exception_Data.Set_Exception_C_Msg (Excep, E, File, Line, 0,\n-                                          Rmsg_22'Address);\n+                                          Rmsg_23'Address);\n       Raise_Current_Excep (E);\n    end Rcheck_PE_Finalize_Raised_Exception;\n \n@@ -1456,41 +1472,43 @@ package body Ada.Exceptions is\n    procedure Rcheck_16 (File : System.Address; Line : Integer)\n      renames Rcheck_PE_Address_Of_Intrinsic;\n    procedure Rcheck_17 (File : System.Address; Line : Integer)\n-     renames Rcheck_PE_All_Guards_Closed;\n+     renames Rcheck_PE_Aliased_Parameters;\n    procedure Rcheck_18 (File : System.Address; Line : Integer)\n-     renames Rcheck_PE_Bad_Predicated_Generic_Type;\n+     renames Rcheck_PE_All_Guards_Closed;\n    procedure Rcheck_19 (File : System.Address; Line : Integer)\n-     renames Rcheck_PE_Current_Task_In_Entry_Body;\n+     renames Rcheck_PE_Bad_Predicated_Generic_Type;\n    procedure Rcheck_20 (File : System.Address; Line : Integer)\n-     renames Rcheck_PE_Duplicated_Entry_Address;\n+     renames Rcheck_PE_Current_Task_In_Entry_Body;\n    procedure Rcheck_21 (File : System.Address; Line : Integer)\n+     renames Rcheck_PE_Duplicated_Entry_Address;\n+   procedure Rcheck_22 (File : System.Address; Line : Integer)\n      renames Rcheck_PE_Explicit_Raise;\n-   procedure Rcheck_23 (File : System.Address; Line : Integer)\n-     renames Rcheck_PE_Implicit_Return;\n    procedure Rcheck_24 (File : System.Address; Line : Integer)\n-     renames Rcheck_PE_Misaligned_Address_Value;\n+     renames Rcheck_PE_Implicit_Return;\n    procedure Rcheck_25 (File : System.Address; Line : Integer)\n-     renames Rcheck_PE_Missing_Return;\n+     renames Rcheck_PE_Misaligned_Address_Value;\n    procedure Rcheck_26 (File : System.Address; Line : Integer)\n-     renames Rcheck_PE_Overlaid_Controlled_Object;\n+     renames Rcheck_PE_Missing_Return;\n    procedure Rcheck_27 (File : System.Address; Line : Integer)\n-     renames Rcheck_PE_Potentially_Blocking_Operation;\n+     renames Rcheck_PE_Overlaid_Controlled_Object;\n    procedure Rcheck_28 (File : System.Address; Line : Integer)\n-     renames Rcheck_PE_Stubbed_Subprogram_Called;\n+     renames Rcheck_PE_Potentially_Blocking_Operation;\n    procedure Rcheck_29 (File : System.Address; Line : Integer)\n-     renames Rcheck_PE_Unchecked_Union_Restriction;\n+     renames Rcheck_PE_Stubbed_Subprogram_Called;\n    procedure Rcheck_30 (File : System.Address; Line : Integer)\n-     renames Rcheck_PE_Non_Transportable_Actual;\n+     renames Rcheck_PE_Unchecked_Union_Restriction;\n    procedure Rcheck_31 (File : System.Address; Line : Integer)\n-     renames Rcheck_SE_Empty_Storage_Pool;\n+     renames Rcheck_PE_Non_Transportable_Actual;\n    procedure Rcheck_32 (File : System.Address; Line : Integer)\n-     renames Rcheck_SE_Explicit_Raise;\n+     renames Rcheck_SE_Empty_Storage_Pool;\n    procedure Rcheck_33 (File : System.Address; Line : Integer)\n-     renames Rcheck_SE_Infinite_Recursion;\n+     renames Rcheck_SE_Explicit_Raise;\n    procedure Rcheck_34 (File : System.Address; Line : Integer)\n+     renames Rcheck_SE_Infinite_Recursion;\n+   procedure Rcheck_35 (File : System.Address; Line : Integer)\n      renames Rcheck_SE_Object_Too_Large;\n \n-   procedure Rcheck_22 (File : System.Address; Line : Integer)\n+   procedure Rcheck_23 (File : System.Address; Line : Integer)\n      renames Rcheck_PE_Finalize_Raised_Exception;\n \n    -------------"}, {"sha": "29a185931671ef78f8ce491937a085beb0aaba2c", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 99, "deletions": 26, "changes": 125, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/baed70ac77dc04e7c419675660e75884836a96dc/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/baed70ac77dc04e7c419675660e75884836a96dc/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=baed70ac77dc04e7c419675660e75884836a96dc", "patch": "@@ -58,6 +58,7 @@ with Sinput;   use Sinput;\n with Snames;   use Snames;\n with Sprint;   use Sprint;\n with Stand;    use Stand;\n+with Stringt;  use Stringt;\n with Targparm; use Targparm;\n with Tbuild;   use Tbuild;\n with Ttypes;   use Ttypes;\n@@ -2093,6 +2094,8 @@ package body Checks is\n      (Call : Node_Id;\n       Subp : Entity_Id)\n    is\n+      Loc : constant Source_Ptr := Sloc (Call);\n+\n       function May_Cause_Aliasing\n         (Formal_1 : Entity_Id;\n          Formal_2 : Entity_Id) return Boolean;\n@@ -2105,6 +2108,20 @@ package body Checks is\n       --  it does not share the address of the actual. This routine attempts\n       --  to retrieve the original actual.\n \n+      procedure Overlap_Check\n+        (Actual_1 : Node_Id;\n+         Actual_2 : Node_Id;\n+         Formal_1 : Entity_Id;\n+         Formal_2 : Entity_Id;\n+         Check    : in out Node_Id);\n+      --  Create a check to determine whether Actual_1 overlaps with Actual_2.\n+      --  If detailed exception messages are enabled, the check is augmented to\n+      --  provide information about the names of the corresponding formals. See\n+      --  the body for details. Actual_1 and Actual_2 denote the two actuals to\n+      --  be tested. Formal_1 and Formal_2 denote the corresponding formals.\n+      --  Check contains all and-ed simple tests generated so far or remains\n+      --  unchanged in the case of detailed exception messaged.\n+\n       ------------------------\n       -- May_Cause_Aliasing --\n       ------------------------\n@@ -2161,20 +2178,89 @@ package body Checks is\n          return N;\n       end Original_Actual;\n \n+      -------------------\n+      -- Overlap_Check --\n+      -------------------\n+\n+      procedure Overlap_Check\n+        (Actual_1 : Node_Id;\n+         Actual_2 : Node_Id;\n+         Formal_1 : Entity_Id;\n+         Formal_2 : Entity_Id;\n+         Check    : in out Node_Id)\n+      is\n+         Cond : Node_Id;\n+\n+      begin\n+         --  Generate:\n+         --    Actual_1'Overlaps_Storage (Actual_2)\n+\n+         Cond :=\n+           Make_Attribute_Reference (Loc,\n+             Prefix         => New_Copy_Tree (Original_Actual (Actual_1)),\n+             Attribute_Name => Name_Overlaps_Storage,\n+             Expressions    =>\n+               New_List (New_Copy_Tree (Original_Actual (Actual_2))));\n+\n+         --  Generate the following check when detailed exception messages are\n+         --  enabled:\n+\n+         --    if Actual_1'Overlaps_Storage (Actual_2) then\n+         --       raise Program_Error with <detailed message>;\n+         --    end if;\n+\n+         if Exception_Extra_Info then\n+            Start_String;\n+\n+            --  Do not generate location information for internal calls\n+\n+            if Comes_From_Source (Call) then\n+               Store_String_Chars (Build_Location_String (Loc));\n+               Store_String_Char (' ');\n+            end if;\n+\n+            Store_String_Chars (\"aliased parameters, actuals for \"\"\");\n+            Store_String_Chars (Get_Name_String (Chars (Formal_1)));\n+            Store_String_Chars (\"\"\" and \"\"\");\n+            Store_String_Chars (Get_Name_String (Chars (Formal_2)));\n+            Store_String_Chars (\"\"\" overlap\");\n+\n+            Insert_Action (Call,\n+              Make_If_Statement (Loc,\n+                Condition       => Cond,\n+                Then_Statements => New_List (\n+                  Make_Raise_Statement (Loc,\n+                    Name       =>\n+                      New_Reference_To (Standard_Program_Error, Loc),\n+                    Expression => Make_String_Literal (Loc, End_String)))));\n+\n+         --  Create a sequence of overlapping checks by and-ing them all\n+         --  together.\n+\n+         else\n+            if No (Check) then\n+               Check := Cond;\n+            else\n+               Check :=\n+                 Make_And_Then (Loc,\n+                   Left_Opnd  => Check,\n+                   Right_Opnd => Cond);\n+            end if;\n+         end if;\n+      end Overlap_Check;\n+\n       --  Local variables\n \n-      Loc      : constant Source_Ptr := Sloc (Call);\n       Actual_1 : Node_Id;\n       Actual_2 : Node_Id;\n       Check    : Node_Id;\n-      Cond     : Node_Id;\n       Formal_1 : Entity_Id;\n       Formal_2 : Entity_Id;\n \n    --  Start of processing for Apply_Parameter_Aliasing_Checks\n \n    begin\n-      Cond := Empty;\n+      Check := Empty;\n \n       Actual_1 := First_Actual (Call);\n       Formal_1 := First_Formal (Subp);\n@@ -2200,25 +2286,12 @@ package body Checks is\n                    Is_Elementary_Type (Etype (Original_Actual (Actual_2)))\n                  and then May_Cause_Aliasing (Formal_1, Formal_2)\n                then\n-                  --  Generate:\n-                  --    Actual_1'Overlaps_Storage (Actual_2)\n-\n-                  Check :=\n-                    Make_Attribute_Reference (Loc,\n-                      Prefix         =>\n-                        New_Copy_Tree (Original_Actual (Actual_1)),\n-                      Attribute_Name => Name_Overlaps_Storage,\n-                      Expressions    =>\n-                        New_List (New_Copy_Tree (Original_Actual (Actual_2))));\n-\n-                  if No (Cond) then\n-                     Cond := Check;\n-                  else\n-                     Cond :=\n-                       Make_And_Then (Loc,\n-                         Left_Opnd  => Cond,\n-                         Right_Opnd => Check);\n-                  end if;\n+                  Overlap_Check\n+                    (Actual_1 => Actual_1,\n+                     Actual_2 => Actual_2,\n+                     Formal_1 => Formal_1,\n+                     Formal_2 => Formal_2,\n+                     Check    => Check);\n                end if;\n \n                Next_Actual (Actual_2);\n@@ -2230,13 +2303,13 @@ package body Checks is\n          Next_Formal (Formal_1);\n       end loop;\n \n-      --  Place the check right before the call\n+      --  Place a simple check right before the call\n \n-      if Present (Cond) then\n+      if Present (Check) and then not Exception_Extra_Info then\n          Insert_Action (Call,\n            Make_Raise_Program_Error (Loc,\n-             Condition => Cond,\n-             Reason    => PE_Explicit_Raise));\n+             Condition => Check,\n+             Reason    => PE_Aliased_Parameters));\n       end if;\n    end Apply_Parameter_Aliasing_Checks;\n "}, {"sha": "90ca6dae79b266ed98e858a63e9190063b05c938", "filename": "gcc/ada/exp_ch11.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/baed70ac77dc04e7c419675660e75884836a96dc/gcc%2Fada%2Fexp_ch11.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/baed70ac77dc04e7c419675660e75884836a96dc/gcc%2Fada%2Fexp_ch11.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch11.adb?ref=baed70ac77dc04e7c419675660e75884836a96dc", "patch": "@@ -2132,6 +2132,8 @@ package body Exp_Ch11 is\n             Add_Str_To_Name_Buffer (\"PE_Accessibility_Check\");\n          when PE_Address_Of_Intrinsic =>\n             Add_Str_To_Name_Buffer (\"PE_Address_Of_Intrinsic\");\n+         when PE_Aliased_Parameters =>\n+            Add_Str_To_Name_Buffer (\"PE_Aliased_Parameters\");\n          when PE_All_Guards_Closed =>\n             Add_Str_To_Name_Buffer (\"PE_All_Guards_Closed\");\n          when PE_Bad_Predicated_Generic_Type =>"}, {"sha": "c70f6186e2e6f0247a9a8d084eb910a3783e95d0", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 14, "deletions": 13, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/baed70ac77dc04e7c419675660e75884836a96dc/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/baed70ac77dc04e7c419675660e75884836a96dc/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=baed70ac77dc04e7c419675660e75884836a96dc", "patch": "@@ -9185,11 +9185,8 @@ type @code{Character}).\n @unnumberedsubsec SPARK\n @findex SPARK\n [GNAT] This restriction checks at compile time that some constructs\n-forbidden in SPARK are not present. The SPARK version used as a\n-reference is the same as the Ada mode for the unit, so a unit compiled\n-in Ada 95 mode with SPARK restrictions will be checked for constructs\n-forbidden in SPARK 95.  Error messages related to SPARK restriction have\n-the form:\n+forbidden in SPARK 2005 are not present. Error messages related to\n+SPARK restriction have the form:\n \n @smallexample\n violation of restriction \"SPARK\" at <file>\n@@ -9198,18 +9195,22 @@ violation of restriction \"SPARK\" at <file>\n \n This is not a replacement for the semantic checks performed by the\n SPARK Examiner tool, as the compiler only deals currently with code,\n-not at all with SPARK annotations and does not guarantee catching all\n-cases of constructs forbidden by SPARK.\n+not at all with SPARK 2005 annotations and does not guarantee catching all\n+cases of constructs forbidden by SPARK 2005.\n \n-Thus it may well be the case that code which\n-passes the compiler in SPARK mode is rejected by the SPARK Examiner,\n-e.g. due to the different visibility rules of the Examiner based on\n-SPARK @code{inherit} annotations.\n+Thus it may well be the case that code which passes the compiler with\n+the SPARK restriction is rejected by the SPARK Examiner, e.g. due to\n+the different visibility rules of the Examiner based on SPARK 2005\n+@code{inherit} annotations.\n \n-This restriction can be useful in providing an initial filter for\n-code developed using SPARK, or in examining legacy code to see how far\n+This restriction can be useful in providing an initial filter for code\n+developed using SPARK 2005, or in examining legacy code to see how far\n it is from meeting SPARK restrictions.\n \n+Note that if a unit is compiled in Ada 95 mode with SPARK restriction,\n+violations will be reported for constructs forbidden in SPARK 95,\n+instead of SPARK 2005.\n+\n @c ------------------------\n @node Implementation Advice\n @chapter Implementation Advice"}, {"sha": "ac56284d6aa17b02f87e68289fb82e05750d6a28", "filename": "gcc/ada/par-ch5.adb", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/baed70ac77dc04e7c419675660e75884836a96dc/gcc%2Fada%2Fpar-ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/baed70ac77dc04e7c419675660e75884836a96dc/gcc%2Fada%2Fpar-ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch5.adb?ref=baed70ac77dc04e7c419675660e75884836a96dc", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -595,8 +595,7 @@ package body Ch5 is\n                      --  For statement (labeled loop statement with FOR)\n \n                      elsif Token = Tok_For then\n-                        Append_To (Statement_List,\n-                          P_For_Statement (Id_Node));\n+                        Append_To (Statement_List, P_For_Statement (Id_Node));\n \n                      --  Improper statement follows label. If we have an\n                      --  expression token, then assume the colon was part"}, {"sha": "5713dd4dbd1a7e1fc03abc975242f9e1e26ca918", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/baed70ac77dc04e7c419675660e75884836a96dc/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/baed70ac77dc04e7c419675660e75884836a96dc/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=baed70ac77dc04e7c419675660e75884836a96dc", "patch": "@@ -6577,7 +6577,13 @@ package body Sem_Ch12 is\n                      Set_Entity (New_N, Entity (Assoc));\n                      Check_Private_View (N);\n \n-                  elsif Nkind (Assoc) = N_Function_Call then\n+                  --  The name in the call may be a selected component if the\n+                  --  call has not been analyzed yet, as may be the case for\n+                  --  pre/post conditions in a generic unit.\n+\n+                  elsif Nkind (Assoc) = N_Function_Call\n+                    and then Is_Entity_Name (Name (Assoc))\n+                  then\n                      Set_Entity (New_N, Entity (Name (Assoc)));\n \n                   elsif Nkind_In (Assoc, N_Defining_Identifier,"}, {"sha": "6a545b4180bd32053446040f46948da9bec3e780", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/baed70ac77dc04e7c419675660e75884836a96dc/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/baed70ac77dc04e7c419675660e75884836a96dc/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=baed70ac77dc04e7c419675660e75884836a96dc", "patch": "@@ -1751,7 +1751,7 @@ package body Sem_Prag is\n             --  defined for a primitive subprogram of a type descended from T.\n             --  Note that this replacement is not done for selector names in\n             --  parameter associations. These carry an entity for reference\n-            --  purposes, but they semantically they are just identifiers.\n+            --  purposes, but semantically they are just identifiers.\n \n             -------------\n             -- Get_ACW --\n@@ -1795,7 +1795,7 @@ package body Sem_Prag is\n                  and then Nkind (Parent (N)) /= N_Type_Conversion\n                  and then\n                    (Nkind (Parent (N)) /= N_Parameter_Association\n-                      or else N /= Selector_Name (Parent (N)))\n+                     or else N /= Selector_Name (Parent (N)))\n                then\n                   if Etype (Entity (N)) = T then\n                      Typ := Class_Wide_Type (T);"}, {"sha": "2879579685343111915bc8a97887e7eaefcd296f", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/baed70ac77dc04e7c419675660e75884836a96dc/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/baed70ac77dc04e7c419675660e75884836a96dc/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=baed70ac77dc04e7c419675660e75884836a96dc", "patch": "@@ -7225,7 +7225,8 @@ package Sinfo is\n       --  Sprint syntax: labelname : label;\n \n       --  N_Implicit_Label_Declaration\n-      --  Sloc points to the << of the label\n+      --  Sloc points to the << token for a statement identifier, or to the\n+      --    LOOP, DECLARE, or BEGIN token for a loop or block identifier\n       --  Defining_Identifier (Node1)\n       --  Label_Construct (Node2-Sem)\n "}, {"sha": "ec723ddd11fdee5d98ef5fce3076620a5d6e52e8", "filename": "gcc/ada/types.ads", "status": "modified", "additions": 20, "deletions": 19, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/baed70ac77dc04e7c419675660e75884836a96dc/gcc%2Fada%2Ftypes.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/baed70ac77dc04e7c419675660e75884836a96dc/gcc%2Fada%2Ftypes.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftypes.ads?ref=baed70ac77dc04e7c419675660e75884836a96dc", "patch": "@@ -843,25 +843,26 @@ package Types is\n       PE_Access_Before_Elaboration,      -- 14\n       PE_Accessibility_Check_Failed,     -- 15\n       PE_Address_Of_Intrinsic,           -- 16\n-      PE_All_Guards_Closed,              -- 17\n-      PE_Bad_Predicated_Generic_Type,    -- 18\n-      PE_Current_Task_In_Entry_Body,     -- 19\n-      PE_Duplicated_Entry_Address,       -- 20\n-      PE_Explicit_Raise,                 -- 21\n-      PE_Finalize_Raised_Exception,      -- 22\n-      PE_Implicit_Return,                -- 23\n-      PE_Misaligned_Address_Value,       -- 24\n-      PE_Missing_Return,                 -- 25\n-      PE_Overlaid_Controlled_Object,     -- 26\n-      PE_Potentially_Blocking_Operation, -- 27\n-      PE_Stubbed_Subprogram_Called,      -- 28\n-      PE_Unchecked_Union_Restriction,    -- 29\n-      PE_Non_Transportable_Actual,       -- 30\n-\n-      SE_Empty_Storage_Pool,             -- 31\n-      SE_Explicit_Raise,                 -- 32\n-      SE_Infinite_Recursion,             -- 33\n-      SE_Object_Too_Large);              -- 34\n+      PE_Aliased_Parameters,             -- 17\n+      PE_All_Guards_Closed,              -- 18\n+      PE_Bad_Predicated_Generic_Type,    -- 19\n+      PE_Current_Task_In_Entry_Body,     -- 20\n+      PE_Duplicated_Entry_Address,       -- 21\n+      PE_Explicit_Raise,                 -- 22\n+      PE_Finalize_Raised_Exception,      -- 23\n+      PE_Implicit_Return,                -- 24\n+      PE_Misaligned_Address_Value,       -- 25\n+      PE_Missing_Return,                 -- 26\n+      PE_Overlaid_Controlled_Object,     -- 27\n+      PE_Potentially_Blocking_Operation, -- 28\n+      PE_Stubbed_Subprogram_Called,      -- 29\n+      PE_Unchecked_Union_Restriction,    -- 30\n+      PE_Non_Transportable_Actual,       -- 31\n+\n+      SE_Empty_Storage_Pool,             -- 32\n+      SE_Explicit_Raise,                 -- 33\n+      SE_Infinite_Recursion,             -- 34\n+      SE_Object_Too_Large);              -- 35\n \n    subtype RT_CE_Exceptions is RT_Exception_Code range\n      CE_Access_Check_Failed .."}, {"sha": "7d1e69624c5e04bca5b9fc6f18244dbe4adbc876", "filename": "gcc/ada/types.h", "status": "modified", "additions": 23, "deletions": 22, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/baed70ac77dc04e7c419675660e75884836a96dc/gcc%2Fada%2Ftypes.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/baed70ac77dc04e7c419675660e75884836a96dc/gcc%2Fada%2Ftypes.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftypes.h?ref=baed70ac77dc04e7c419675660e75884836a96dc", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                              C Header File                               *\n  *                                                                          *\n- *          Copyright (C) 1992-2012, Free Software Foundation, Inc.         *\n+ *          Copyright (C) 1992-2013, Free Software Foundation, Inc.         *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n@@ -363,24 +363,25 @@ typedef Int Mechanism_Type;\n #define PE_Access_Before_Elaboration       14\n #define PE_Accessibility_Check_Failed      15\n #define PE_Address_Of_Intrinsic            16\n-#define PE_All_Guards_Closed               17\n-#define PE_Bad_Attribute_For_Predicate     18\n-#define PE_Current_Task_In_Entry_Body      19\n-#define PE_Duplicated_Entry_Address        20\n-#define PE_Explicit_Raise                  21\n-#define PE_Finalize_Raised_Exception       22\n-#define PE_Implicit_Return                 23\n-#define PE_Misaligned_Address_Value        24\n-#define PE_Missing_Return                  25\n-#define PE_Overlaid_Controlled_Object      26\n-#define PE_Potentially_Blocking_Operation  27\n-#define PE_Stubbed_Subprogram_Called       28\n-#define PE_Unchecked_Union_Restriction     29\n-#define PE_Non_Transportable_Actual        30\n-\n-#define SE_Empty_Storage_Pool              31\n-#define SE_Explicit_Raise                  32\n-#define SE_Infinite_Recursion              33\n-#define SE_Object_Too_Large                34\n-\n-#define LAST_REASON_CODE                   34\n+#define PE_Aliased_Parameters              17\n+#define PE_All_Guards_Closed               18\n+#define PE_Bad_Attribute_For_Predicate     19\n+#define PE_Current_Task_In_Entry_Body      20\n+#define PE_Duplicated_Entry_Address        21\n+#define PE_Explicit_Raise                  22\n+#define PE_Finalize_Raised_Exception       23\n+#define PE_Implicit_Return                 24\n+#define PE_Misaligned_Address_Value        25\n+#define PE_Missing_Return                  26\n+#define PE_Overlaid_Controlled_Object      27\n+#define PE_Potentially_Blocking_Operation  28\n+#define PE_Stubbed_Subprogram_Called       29\n+#define PE_Unchecked_Union_Restriction     30\n+#define PE_Non_Transportable_Actual        31\n+\n+#define SE_Empty_Storage_Pool              32\n+#define SE_Explicit_Raise                  33\n+#define SE_Infinite_Recursion              34\n+#define SE_Object_Too_Large                35\n+\n+#define LAST_REASON_CODE                   35"}]}