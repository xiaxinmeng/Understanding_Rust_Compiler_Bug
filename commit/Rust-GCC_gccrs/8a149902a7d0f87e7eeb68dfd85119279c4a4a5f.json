{"sha": "8a149902a7d0f87e7eeb68dfd85119279c4a4a5f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGExNDk5MDJhN2QwZjg3ZTdlZWI2OGRmZDg1MTE5Mjc5YzRhNGE1Zg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-10-18T12:38:54Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-10-18T12:38:54Z"}, "message": "(non_hard_reg_operand): New function.\n\nFrom-SVN: r8300", "tree": {"sha": "53256d4b71a841a585470f63726589693a6114cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/53256d4b71a841a585470f63726589693a6114cb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8a149902a7d0f87e7eeb68dfd85119279c4a4a5f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a149902a7d0f87e7eeb68dfd85119279c4a4a5f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a149902a7d0f87e7eeb68dfd85119279c4a4a5f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a149902a7d0f87e7eeb68dfd85119279c4a4a5f/comments", "author": null, "committer": null, "parents": [{"sha": "fadb3bc9b5589d66c605731e22c5db4ed893a26e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fadb3bc9b5589d66c605731e22c5db4ed893a26e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fadb3bc9b5589d66c605731e22c5db4ed893a26e"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "168cf0cd690cb63566e7ca033d6d6671fd93c1ea", "filename": "gcc/config/pa/pa.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a149902a7d0f87e7eeb68dfd85119279c4a4a5f/gcc%2Fconfig%2Fpa%2Fpa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a149902a7d0f87e7eeb68dfd85119279c4a4a5f/gcc%2Fconfig%2Fpa%2Fpa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.c?ref=8a149902a7d0f87e7eeb68dfd85119279c4a4a5f", "patch": "@@ -3987,6 +3987,16 @@ shadd_operand (op, mode)\n   return (GET_CODE (op) == CONST_INT && shadd_constant_p (INTVAL (op)));\n }\n \n+/* Return 1 if this operand is anything other than a hard register.  */\n+\n+int\n+non_hard_reg_operand (op, mode)\n+     rtx op;\n+     enum machine_mode mode;\n+{\n+  return ! (GET_CODE (op) == REG && REGNO (op) < FIRST_PSEUDO_REGISTER);\n+}\n+\n /* Return 1 if INSN branches forward.  Should be using insn_addresses\n    to avoid walking through all the insns... */\n int"}]}