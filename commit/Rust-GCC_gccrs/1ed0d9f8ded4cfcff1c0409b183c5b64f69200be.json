{"sha": "1ed0d9f8ded4cfcff1c0409b183c5b64f69200be", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWVkMGQ5ZjhkZWQ0Y2ZjZmYxYzA0MDliMTgzYzViNjRmNjkyMDBiZQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2019-09-25T03:27:26Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2019-09-25T03:27:26Z"}, "message": "Fix location of dependent member CALL_EXPR.\n\nThe break here was skipping over the code that sets EXPR_LOCATION on the\ncall expressions, for no good reason.\n\n\t* parser.c (cp_parser_postfix_expression): Do set location of\n\tdependent member call.\n\nFrom-SVN: r276112", "tree": {"sha": "9f494615c8781d86a08879a86565c5968dcf07a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9f494615c8781d86a08879a86565c5968dcf07a2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1ed0d9f8ded4cfcff1c0409b183c5b64f69200be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ed0d9f8ded4cfcff1c0409b183c5b64f69200be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ed0d9f8ded4cfcff1c0409b183c5b64f69200be", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ed0d9f8ded4cfcff1c0409b183c5b64f69200be/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a20673a560fa520d7ac8da146dcb4b64c574a011", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a20673a560fa520d7ac8da146dcb4b64c574a011", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a20673a560fa520d7ac8da146dcb4b64c574a011"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "e5edd806947c613ae931930f58284a913a44ff74", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ed0d9f8ded4cfcff1c0409b183c5b64f69200be/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ed0d9f8ded4cfcff1c0409b183c5b64f69200be/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=1ed0d9f8ded4cfcff1c0409b183c5b64f69200be", "patch": "@@ -1,3 +1,8 @@\n+2019-09-24  Jason Merrill  <jason@redhat.com>\n+\n+\t* parser.c (cp_parser_postfix_expression): Do set location of\n+\tdependent member call.\n+\n 2019-09-24  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/91868 - improve -Wshadow location."}, {"sha": "44082f7a05fb45eb9c72e6022eeaa4d7b1015bd6", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ed0d9f8ded4cfcff1c0409b183c5b64f69200be/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ed0d9f8ded4cfcff1c0409b183c5b64f69200be/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=1ed0d9f8ded4cfcff1c0409b183c5b64f69200be", "patch": "@@ -7375,11 +7375,8 @@ cp_parser_postfix_expression (cp_parser *parser, bool address_p, bool cast_p,\n \t\t    maybe_generic_this_capture (instance, fn);\n \t\t    postfix_expression\n \t\t      = build_min_nt_call_vec (postfix_expression, args);\n-\t\t    release_tree_vector (args);\n-\t\t    break;\n \t\t  }\n-\n-\t\tif (BASELINK_P (fn))\n+\t\telse if (BASELINK_P (fn))\n \t\t  {\n \t\t  postfix_expression\n \t\t    = (build_new_method_call"}]}