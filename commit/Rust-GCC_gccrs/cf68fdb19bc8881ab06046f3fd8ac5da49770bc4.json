{"sha": "cf68fdb19bc8881ab06046f3fd8ac5da49770bc4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2Y2OGZkYjE5YmM4ODgxYWIwNjA0NmYzZmQ4YWM1ZGE0OTc3MGJjNA==", "commit": {"author": {"name": "Andrew Haley", "email": "aph@redhat.com", "date": "2003-07-30T14:50:02Z"}, "committer": {"name": "Andrew Haley", "email": "aph@gcc.gnu.org", "date": "2003-07-30T14:50:02Z"}, "message": "i386-signal.h (RESTORE): New.\n\n2003-07-08  Andrew Haley  <aph@redhat.com>\n\n        * include/i386-signal.h (RESTORE): New.\n        (INIT_SEGV): Set restorer.\n        (INIT_FPE): Likewise.\n\nFrom-SVN: r69957", "tree": {"sha": "9928a38a8f4b929addd89297adffc713f7faffce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9928a38a8f4b929addd89297adffc713f7faffce"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cf68fdb19bc8881ab06046f3fd8ac5da49770bc4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf68fdb19bc8881ab06046f3fd8ac5da49770bc4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf68fdb19bc8881ab06046f3fd8ac5da49770bc4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf68fdb19bc8881ab06046f3fd8ac5da49770bc4/comments", "author": {"login": "theRealAph", "id": 254637, "node_id": "MDQ6VXNlcjI1NDYzNw==", "avatar_url": "https://avatars.githubusercontent.com/u/254637?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theRealAph", "html_url": "https://github.com/theRealAph", "followers_url": "https://api.github.com/users/theRealAph/followers", "following_url": "https://api.github.com/users/theRealAph/following{/other_user}", "gists_url": "https://api.github.com/users/theRealAph/gists{/gist_id}", "starred_url": "https://api.github.com/users/theRealAph/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theRealAph/subscriptions", "organizations_url": "https://api.github.com/users/theRealAph/orgs", "repos_url": "https://api.github.com/users/theRealAph/repos", "events_url": "https://api.github.com/users/theRealAph/events{/privacy}", "received_events_url": "https://api.github.com/users/theRealAph/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "48b3222dccc9ae95c9c7ae4ceae9b72e664e39a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48b3222dccc9ae95c9c7ae4ceae9b72e664e39a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/48b3222dccc9ae95c9c7ae4ceae9b72e664e39a9"}], "stats": {"total": 49, "additions": 35, "deletions": 14}, "files": [{"sha": "97ebc3797f0e571cebc963ce22365ca4232b0618", "filename": "libjava/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf68fdb19bc8881ab06046f3fd8ac5da49770bc4/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf68fdb19bc8881ab06046f3fd8ac5da49770bc4/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=cf68fdb19bc8881ab06046f3fd8ac5da49770bc4", "patch": "@@ -1,3 +1,9 @@\n+2003-07-08  Andrew Haley  <aph@redhat.com>\n+\n+        * include/i386-signal.h (RESTORE): New.\n+        (INIT_SEGV): Set restorer.\n+        (INIT_FPE): Likewise.\n+\n 2003-07-29  Thomas Fitzsimmons  <fitzsim@redhat.com>\n \n \t* gnu/java/awt/peer/gtk/GtkButtonPeer.java: Call getName rather"}, {"sha": "280b72e55860733aa9972acb458ea73f685bc331", "filename": "libjava/include/i386-signal.h", "status": "modified", "additions": 29, "deletions": 14, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf68fdb19bc8881ab06046f3fd8ac5da49770bc4/libjava%2Finclude%2Fi386-signal.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf68fdb19bc8881ab06046f3fd8ac5da49770bc4/libjava%2Finclude%2Fi386-signal.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Finclude%2Fi386-signal.h?ref=cf68fdb19bc8881ab06046f3fd8ac5da49770bc4", "patch": "@@ -108,26 +108,44 @@ struct old_i386_kernel_sigaction {\n \tvoid (*sa_restorer) (void);\n };\n \n+#define RESTORE(name, syscall) RESTORE2 (name, syscall)\n+# define RESTORE2(name, syscall) \\\n+asm\t\t\t\t\t\t\\\n+  (\t\t\t\t\t\t\\\n+   \".text\\n\"\t\t\t\t\t\\\n+   \".byte 0  # Yes, this really is necessary\\n\" \\\n+   \"\t.align 8\\n\"\t\t\t\t\\\n+   \"__\" #name \":\\n\"\t\t\t\t\\\n+   \"\tpopl %eax\\n\"\t\t\t\t\\\n+   \"\tmovl $\" #syscall \", %eax\\n\"\t\t\\\n+   \"\tint  $0x80\"\t\t\t\t\\\n+   );\n+\n+RESTORE (restore, __NR_sigreturn)\n+static void restore (void) asm (\"__restore\");\n+\n #define INIT_SEGV\t\t\t\t\t\\\n do\t\t\t\t\t\t\t\\\n   {\t\t\t\t\t\t\t\\\n     struct old_i386_kernel_sigaction kact;\t\t\\\n     kact.k_sa_handler = catch_segv;\t\t\t\\\n     kact.k_sa_mask = 0;\t\t\t\t\t\\\n-    kact.k_sa_flags = 0;\t\t\t\t\\\n+    kact.k_sa_flags = 0x4000000;\t\t\t\\\n+    kact.sa_restorer = restore;\t\t\t\t\\\n     syscall (SYS_sigaction, SIGSEGV, &kact, NULL);\t\\\n   }\t\t\t\t\t\t\t\\\n while (0)  \n \n-#define INIT_FPE\t\t\t\t\t\t\\\n-do\t\t\t\t\t\t\t\t\\\n-  {\t\t\t\t\t\t\t\t\\\n-    struct old_i386_kernel_sigaction kact;\t\t\t\\\n-    kact.k_sa_handler = catch_fpe;\t\t\t\t\\\n-    kact.k_sa_mask = 0;\t\t\t\t\t\t\\\n-    kact.k_sa_flags = 0;\t\t\t\t\t\\\n-    syscall (SYS_sigaction, SIGFPE, &kact, NULL);\t\t\\\n-  }\t\t\t\t\t\t\t\t\\\n+#define INIT_FPE\t\t\t\t\t\\\n+do\t\t\t\t\t\t\t\\\n+  {\t\t\t\t\t\t\t\\\n+    struct old_i386_kernel_sigaction kact;\t\t\\\n+    kact.k_sa_handler = catch_fpe;\t\t\t\\\n+    kact.k_sa_mask = 0;\t\t\t\t\t\\\n+    kact.k_sa_flags = 0x4000000;\t\t\t\\\n+    kact.sa_restorer = restore;\t\t\t\t\\\n+    syscall (SYS_sigaction, SIGFPE, &kact, NULL);\t\\\n+  }\t\t\t\t\t\t\t\\\n while (0)  \n \n /* You might wonder why we use syscall(SYS_sigaction) in INIT_FPE\n@@ -144,10 +162,7 @@ while (0)\n \n  * Also, there is at the present time no unwind info in the\n  * linuxthreads library's signal handlers and so we can't unwind\n- * through them anyway.  \n-\n- * Finally, the code that glibc uses to return from a signal handler\n- * is subject to change.  */\n+ * through them anyway.  */\n \n #endif /* JAVA_SIGNAL_H */\n   "}]}