{"sha": "54ca6ffa139060575be8487db82d2cb551638eb5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTRjYTZmZmExMzkwNjA1NzViZTg0ODdkYjgyZDJjYjU1MTYzOGViNQ==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "1999-02-06T09:41:08Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1999-02-06T09:41:08Z"}, "message": "reload1.c (reload_combine_note_store): Be more careful with STRICT_LOW_PART, ZERO_EXTRACT and SIGN_EXTRACT.\n\n        * reload1.c (reload_combine_note_store): Be more careful with\n        STRICT_LOW_PART, ZERO_EXTRACT and SIGN_EXTRACT.\n        (move2add_note_store): Likewise.\n\nFrom-SVN: r25055", "tree": {"sha": "d249beba76b9a8b8cfd5d3f7caa6cb2e6fc8d9d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d249beba76b9a8b8cfd5d3f7caa6cb2e6fc8d9d1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/54ca6ffa139060575be8487db82d2cb551638eb5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54ca6ffa139060575be8487db82d2cb551638eb5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/54ca6ffa139060575be8487db82d2cb551638eb5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54ca6ffa139060575be8487db82d2cb551638eb5/comments", "author": null, "committer": null, "parents": [{"sha": "bdc1937ed9b8094c8fcb835b594d67812883003f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bdc1937ed9b8094c8fcb835b594d67812883003f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bdc1937ed9b8094c8fcb835b594d67812883003f"}], "stats": {"total": 27, "additions": 25, "deletions": 2}, "files": [{"sha": "a2439de867ff2e48f4dfa330869748af0828ada3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54ca6ffa139060575be8487db82d2cb551638eb5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54ca6ffa139060575be8487db82d2cb551638eb5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=54ca6ffa139060575be8487db82d2cb551638eb5", "patch": "@@ -1,3 +1,9 @@\n+Sat Feb  6 10:31:35 1999  Jeffrey A Law  (law@cygnus.com)\n+\n+\t* reload1.c (reload_combine_note_store): Be more careful with\n+\tSTRICT_LOW_PART, ZERO_EXTRACT and SIGN_EXTRACT.\n+\t(move2add_note_store): Likewise.\n+\n Sat Feb  6 10:18:01 1999  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* cppfiles.c (read_and_prescan): Cast the result of `xrealloc' to"}, {"sha": "f2cb20deeaf919490caee85addc8150b63475d27", "filename": "gcc/reload1.c", "status": "modified", "additions": 19, "deletions": 2, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54ca6ffa139060575be8487db82d2cb551638eb5/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54ca6ffa139060575be8487db82d2cb551638eb5/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=54ca6ffa139060575be8487db82d2cb551638eb5", "patch": "@@ -9732,9 +9732,15 @@ reload_combine_note_store (dst, set)\n   if (GET_CODE (dst) != REG)\n     return;\n   regno += REGNO (dst);\n+\n   /* note_stores might have stripped a STRICT_LOW_PART, so we have to be\n-     careful with registers / register parts that are not full words.  */\n-  if (size < (unsigned) UNITS_PER_WORD)\n+     careful with registers / register parts that are not full words. \n+\n+     Similarly for ZERO_EXTRACT and SIGN_EXTRACT.  */\n+  if (GET_CODE (set) != SET\n+      || GET_CODE (SET_DEST (set)) == ZERO_EXTRACT\n+      || GET_CODE (SET_DEST (set)) == SIGN_EXTRACT\n+      || GET_CODE (SET_DEST (set)) == STRICT_LOW_PART)\n     {\n       reg_state[regno].use_index = -1;\n       reg_state[regno].store_ruid = reload_combine_ruid;\n@@ -10056,6 +10062,17 @@ move2add_note_store (dst, set)\n     {\n       rtx src = SET_SRC (set);\n \n+      /* Indicate that this register has been recently written to,\n+\t but the exact contents are not available.  */\n+      if (GET_CODE (SET_DEST (set)) == ZERO_EXTRACT\n+\t  || GET_CODE (SET_DEST (set)) == SIGN_EXTRACT\n+\t  || GET_CODE (SET_DEST (set)) == STRICT_LOW_PART)\n+\t{\n+\t  reg_set_luid[regno] = move2add_luid;\n+\t  reg_offset[regno] = dst;\n+\t  return;\n+\t}\n+\n       reg_mode[regno] = mode;\n       switch (GET_CODE (src))\n \t{"}]}