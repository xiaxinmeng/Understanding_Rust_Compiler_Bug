{"sha": "e8c4584bd79f5b0f07d91b5f144a7b8d9721cb5e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZThjNDU4NGJkNzlmNWIwZjA3ZDkxYjVmMTQ0YTdiOGQ5NzIxY2I1ZQ==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2008-08-08T12:59:38Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-08-08T12:59:38Z"}, "message": "s-strxdr.adb: Minor reformatting\n\n2008-08-08  Robert Dewar  <dewar@adacore.com>\n\n\t* s-strxdr.adb: Minor reformatting\n\nFrom-SVN: r138878", "tree": {"sha": "767c16ac38b7f910bf923b39f8efa91c3851318f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/767c16ac38b7f910bf923b39f8efa91c3851318f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e8c4584bd79f5b0f07d91b5f144a7b8d9721cb5e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8c4584bd79f5b0f07d91b5f144a7b8d9721cb5e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e8c4584bd79f5b0f07d91b5f144a7b8d9721cb5e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8c4584bd79f5b0f07d91b5f144a7b8d9721cb5e/comments", "author": null, "committer": null, "parents": [{"sha": "62b7afe926099bac064a39a88bb3685ce50c2965", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62b7afe926099bac064a39a88bb3685ce50c2965", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62b7afe926099bac064a39a88bb3685ce50c2965"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "c123feac1f4310ff69e24365f3c8788ede75573c", "filename": "gcc/ada/s-strxdr.adb", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8c4584bd79f5b0f07d91b5f144a7b8d9721cb5e/gcc%2Fada%2Fs-strxdr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8c4584bd79f5b0f07d91b5f144a7b8d9721cb5e/gcc%2Fada%2Fs-strxdr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-strxdr.adb?ref=e8c4584bd79f5b0f07d91b5f144a7b8d9721cb5e", "patch": "@@ -47,11 +47,11 @@ package body System.Stream_Attributes is\n    use UST;\n \n    Data_Error : exception renames Ada.IO_Exceptions.End_Error;\n-   --  Exception raised if insufficient data read (End_Error is\n-   --  mandated by AI95-00132).\n+   --  Exception raised if insufficient data read (End_Error is mandated by\n+   --  AI95-00132).\n \n    SU : constant := System.Storage_Unit;\n-   --  XXXXX pragma Assert (SU = 8);\n+   --  The code in this body assumes that SU = 8\n \n    BB : constant := 2 ** SU;           --  Byte base\n    BL : constant := 2 ** SU - 1;       --  Byte last\n@@ -127,7 +127,7 @@ package body System.Stream_Attributes is\n    --  in the range [-2147483648,2147483647]. The integer is represented\n    --  in two's complement notation. The most and least significant bytes\n    --  are 0 and 3, respectively. Integers are declared as follows:\n-   --\n+\n    --        (MSB)                   (LSB)\n    --      +-------+-------+-------+-------+\n    --      |byte 0 |byte 1 |byte 2 |byte 3 |\n@@ -175,7 +175,7 @@ package body System.Stream_Attributes is\n    --  integer in the range [0,4294967295]. It is represented by an unsigned\n    --  binary number whose most and least significant bytes are 0 and 3,\n    --  respectively. An unsigned integer is declared as follows:\n-   --\n+\n    --        (MSB)                   (LSB)\n    --      +-------+-------+-------+-------+\n    --      |byte 0 |byte 1 |byte 2 |byte 3 |\n@@ -222,10 +222,10 @@ package body System.Stream_Attributes is\n    --  or 4 bytes). The encoding used is the IEEE standard for normalized\n    --  single-precision floating-point numbers.\n \n-   --  The standard defines the encoding for the double-precision\n-   --  floating-point data type \"double\" (64 bits or 8 bytes). The\n-   --  encoding used is the IEEE standard for normalized double-precision\n-   --  floating-point numbers.\n+   --  The standard defines the encoding used for the double-precision\n+   --  floating-point data type \"double\" (64 bits or 8 bytes). The encoding\n+   --  used is the IEEE standard for normalized double-precision floating-point\n+   --  numbers.\n \n    SF_L  : constant := 4;   --  Single precision\n    F_L   : constant := 4;   --  Single precision"}]}