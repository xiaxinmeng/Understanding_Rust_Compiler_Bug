{"sha": "cc3dc6ea434405ef9b47b855f38194bf41686b71", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2MzZGM2ZWE0MzQ0MDVlZjliNDdiODU1ZjM4MTk0YmY0MTY4NmI3MQ==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "1999-09-13T13:41:30Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "1999-09-13T13:41:30Z"}, "message": "typeck.c (expr_sizeof): Don't decay arrays and functions.\n\n\t* typeck.c (expr_sizeof): Don't decay arrays and functions.\n\tRemove misleading comment.\n\t(build_compound_expr): Don't decay arrays.\n\nFrom-SVN: r29378", "tree": {"sha": "617d9e07d3c528b57e9b5e82d148bccca4ec6fc8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/617d9e07d3c528b57e9b5e82d148bccca4ec6fc8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cc3dc6ea434405ef9b47b855f38194bf41686b71", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc3dc6ea434405ef9b47b855f38194bf41686b71", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc3dc6ea434405ef9b47b855f38194bf41686b71", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc3dc6ea434405ef9b47b855f38194bf41686b71/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a992ebf6ce2d21e142a79729fe4db3fa13f89d52", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a992ebf6ce2d21e142a79729fe4db3fa13f89d52", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a992ebf6ce2d21e142a79729fe4db3fa13f89d52"}], "stats": {"total": 28, "additions": 9, "deletions": 19}, "files": [{"sha": "3b4e638df625e1ba4c12485e395711bf7e2b1d1a", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc3dc6ea434405ef9b47b855f38194bf41686b71/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc3dc6ea434405ef9b47b855f38194bf41686b71/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=cc3dc6ea434405ef9b47b855f38194bf41686b71", "patch": "@@ -1,3 +1,9 @@\n+1999-09-13  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* typeck.c (expr_sizeof): Don't decay arrays and functions.\n+\tRemove misleading comment.\n+\t(build_compound_expr): Don't decay arrays.\n+\n 1999-09-13  Jason Merrill  <jason@yorick.cygnus.com>\n \n \t* call.c (build_conditional_expr): Always use a TARGET_EXPR for"}, {"sha": "13d1f356654ef774ac5da1300150d0c73149c75d", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 3, "deletions": 19, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc3dc6ea434405ef9b47b855f38194bf41686b71/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc3dc6ea434405ef9b47b855f38194bf41686b71/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=cc3dc6ea434405ef9b47b855f38194bf41686b71", "patch": "@@ -1600,15 +1600,7 @@ expr_sizeof (e)\n   if (TREE_CODE (e) == COMPONENT_REF\n       && DECL_C_BIT_FIELD (TREE_OPERAND (e, 1)))\n     error (\"sizeof applied to a bit-field\");\n-  /* ANSI says arrays and functions are converted inside comma.\n-     But we can't really convert them in build_compound_expr\n-     because that would break commas in lvalues.\n-     So do the conversion here if operand was a comma.  */\n-  if (TREE_CODE (e) == COMPOUND_EXPR\n-      && (TREE_CODE (TREE_TYPE (e)) == ARRAY_TYPE\n-\t  || TREE_CODE (TREE_TYPE (e)) == FUNCTION_TYPE))\n-    e = default_conversion (e);\n-  else if (is_overloaded_fn (e))\n+  if (is_overloaded_fn (e))\n     {\n       pedwarn (\"ANSI C++ forbids taking the sizeof a function type\");\n       return size_int (1);\n@@ -1618,10 +1610,6 @@ expr_sizeof (e)\n       incomplete_type_error (e, TREE_TYPE (e));\n       return size_int (1);\n     }\n-  /* It's illegal to say `sizeof (X::i)' for `i' a non-static data\n-     member unless you're in a non-static member of X.  But, we used\n-     to support this usage, so we still permit it unless we're being\n-     pedantic.  */\n   else if (TREE_CODE (e) == OFFSET_REF)\n     e = resolve_offset_ref (e);\n \n@@ -5106,12 +5094,8 @@ build_compound_expr (list)\n       if (TREE_CODE (list) == NOP_EXPR\n \t  && TREE_TYPE (list) == TREE_TYPE (TREE_OPERAND (list, 0)))\n \tlist = TREE_OPERAND (list, 0);\n-\n-      /* Convert arrays to pointers.  */\n-      if (TREE_CODE (TREE_TYPE (TREE_VALUE (list))) == ARRAY_TYPE)\n-\treturn default_conversion (TREE_VALUE (list));\n-      else\n-\treturn TREE_VALUE (list);\n+\t\n+      return TREE_VALUE (list);\n     }\n \n   first = TREE_VALUE (list);"}]}