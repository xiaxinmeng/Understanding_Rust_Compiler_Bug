{"sha": "21117a1708776b7a9544408d9e744703d4f7efbf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjExMTdhMTcwODc3NmI3YTk1NDQ0MDhkOWU3NDQ3MDNkNGY3ZWZiZg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2002-02-13T21:49:32Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2002-02-13T21:49:32Z"}, "message": "re PR c/5681 (gcc 3.0.3 produces wrong assembler code)\n\n\tPR c/5681:\n\t* expr.c (safe_from_p): Pass VOIDmode to true_dependence instead of\n\tGET_MODE (x).\n\n\t* gcc.c-torture/execute/20020213-1.c: New test.\n\nFrom-SVN: r49746", "tree": {"sha": "cada0d42f2026624bec10c3f530c67f6c43ed81b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cada0d42f2026624bec10c3f530c67f6c43ed81b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/21117a1708776b7a9544408d9e744703d4f7efbf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21117a1708776b7a9544408d9e744703d4f7efbf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/21117a1708776b7a9544408d9e744703d4f7efbf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21117a1708776b7a9544408d9e744703d4f7efbf/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ec65b2e3daacfb67c039ca955e62450015f8eea1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec65b2e3daacfb67c039ca955e62450015f8eea1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec65b2e3daacfb67c039ca955e62450015f8eea1"}], "stats": {"total": 44, "additions": 43, "deletions": 1}, "files": [{"sha": "dba5334323976855af01fad8ee6fad384468a02a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21117a1708776b7a9544408d9e744703d4f7efbf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21117a1708776b7a9544408d9e744703d4f7efbf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=21117a1708776b7a9544408d9e744703d4f7efbf", "patch": "@@ -1,3 +1,9 @@\n+2002-02-13  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c/5681:\n+\t* expr.c (safe_from_p): Pass VOIDmode to true_dependence instead of\n+\tGET_MODE (x).\n+\n 2002-02-13  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR optimization/5547:"}, {"sha": "fe874ce648eb91447e5f4f549a143a97ab60f32c", "filename": "gcc/expr.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21117a1708776b7a9544408d9e744703d4f7efbf/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21117a1708776b7a9544408d9e744703d4f7efbf/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=21117a1708776b7a9544408d9e744703d4f7efbf", "patch": "@@ -5728,7 +5728,7 @@ safe_from_p (x, exp, top_p)\n \t are memory and they conflict.  */\n       return ! (rtx_equal_p (x, exp_rtl)\n \t\t|| (GET_CODE (x) == MEM && GET_CODE (exp_rtl) == MEM\n-\t\t    && true_dependence (exp_rtl, GET_MODE (x), x,\n+\t\t    && true_dependence (exp_rtl, VOIDmode, x,\n \t\t\t\t\trtx_addr_varies_p)));\n     }\n "}, {"sha": "0ae7fc4e3baa423f5b0506c23794e9c015613a69", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21117a1708776b7a9544408d9e744703d4f7efbf/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21117a1708776b7a9544408d9e744703d4f7efbf/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=21117a1708776b7a9544408d9e744703d4f7efbf", "patch": "@@ -2,6 +2,8 @@\n \n \t* g++.dg/other/debug3.C: New test.\n \n+\t* gcc.c-torture/execute/20020213-1.c: New test.\n+\n 2002-02-13  Richard Smith <richard@ex-parrot.com>\n \n \t* g++.old-deja/g++.other/thunk1.C: New test."}, {"sha": "f9fefee26f76fd03477e79124799917bbbcb3886", "filename": "gcc/testsuite/gcc.c-torture/execute/20020213-1.c", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21117a1708776b7a9544408d9e744703d4f7efbf/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20020213-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21117a1708776b7a9544408d9e744703d4f7efbf/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20020213-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20020213-1.c?ref=21117a1708776b7a9544408d9e744703d4f7efbf", "patch": "@@ -0,0 +1,34 @@\n+/* PR c/5681\n+   This testcase failed on IA-32 at -O0, because safe_from_p\n+   incorrectly assumed it is safe to first write into a.a2 b-1\n+   and then read the original value from it.  */\n+\n+int bar (float);\n+\n+struct A {\n+  float a1;\n+  int a2;\n+} a;\n+\n+int b;\n+\n+void foo (void)\n+{\n+  a.a2 = bar (a.a1);\n+  a.a2 = a.a2 < b - 1 ? a.a2 : b - 1;\n+  if (a.a2 >= b - 1)\n+    abort ();\n+}\n+\n+int bar (float x)\n+{\n+  return 2241;\n+}\n+\n+int main()\n+{\n+  a.a1 = 1.0f;\n+  b = 3384;\n+  foo ();\n+  return 0;\n+}"}]}