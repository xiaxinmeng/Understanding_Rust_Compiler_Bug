{"sha": "04637536a6b69c6bf7e22e2ccd5ff3bfc4892394", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDQ2Mzc1MzZhNmI2OWM2YmY3ZTIyZTJjY2Q1ZmYzYmZjNDg5MjM5NA==", "commit": {"author": {"name": "Jozef Lawrynowicz", "email": "jozef.l@mittosystems.com", "date": "2020-04-10T16:31:33Z"}, "committer": {"name": "Jozef Lawrynowicz", "email": "jozef.l@mittosystems.com", "date": "2020-04-13T09:50:40Z"}, "message": "MSP430: Dont add offsets to addresses when emitting asm for post_inc\n\nSome insns, which operate on SImode operands, output assembler template\nthat comprise of multiple instructions using HImode operands. To access\nthe high word of an SImode operand, an operand selector '%H' is used to\noffset the operand value by a constant amount.\n\nWhen one of these HImode operands is a memory reference to a post_inc,\nthe address does not need to be offset, since the preceding instruction\nhas already offset the address to the correct value.\n\nThis fixes an ICE in change_address_1, at emit-rtl.c:2318 for\ngcc.c-torture/execute/pr20527-1.c in the \"-mlarge -O2 -flto\n-fuse-linker-plugin -fno-fat-lto-objects\" configuration.\n\nThis test generated the following insn, and the attempt to output the\nhigh part of the post_inc address caused the ICE.\n(set (reg:SI 6 R6)\n     (minus:SI (reg:SI 6 R6)\n               (mem:SI (post_inc:PSI (reg:PSI 10 R10)) {subsi3}\n\ngcc/ChangeLog:\n\n2020-04-13  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n\n\t* config/msp430/msp430.c (msp430_print_operand): Don't add offsets to\n\tmemory references in %B, %C and %D operand selectors when the inner\n\toperand is a post increment address.", "tree": {"sha": "7cccde9fc3452b99865598bc070c163b366bd717", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7cccde9fc3452b99865598bc070c163b366bd717"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/04637536a6b69c6bf7e22e2ccd5ff3bfc4892394", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04637536a6b69c6bf7e22e2ccd5ff3bfc4892394", "html_url": "https://github.com/Rust-GCC/gccrs/commit/04637536a6b69c6bf7e22e2ccd5ff3bfc4892394", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04637536a6b69c6bf7e22e2ccd5ff3bfc4892394/comments", "author": {"login": "jozefl-mitto", "id": 36524004, "node_id": "MDQ6VXNlcjM2NTI0MDA0", "avatar_url": "https://avatars.githubusercontent.com/u/36524004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jozefl-mitto", "html_url": "https://github.com/jozefl-mitto", "followers_url": "https://api.github.com/users/jozefl-mitto/followers", "following_url": "https://api.github.com/users/jozefl-mitto/following{/other_user}", "gists_url": "https://api.github.com/users/jozefl-mitto/gists{/gist_id}", "starred_url": "https://api.github.com/users/jozefl-mitto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jozefl-mitto/subscriptions", "organizations_url": "https://api.github.com/users/jozefl-mitto/orgs", "repos_url": "https://api.github.com/users/jozefl-mitto/repos", "events_url": "https://api.github.com/users/jozefl-mitto/events{/privacy}", "received_events_url": "https://api.github.com/users/jozefl-mitto/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jozefl-mitto", "id": 36524004, "node_id": "MDQ6VXNlcjM2NTI0MDA0", "avatar_url": "https://avatars.githubusercontent.com/u/36524004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jozefl-mitto", "html_url": "https://github.com/jozefl-mitto", "followers_url": "https://api.github.com/users/jozefl-mitto/followers", "following_url": "https://api.github.com/users/jozefl-mitto/following{/other_user}", "gists_url": "https://api.github.com/users/jozefl-mitto/gists{/gist_id}", "starred_url": "https://api.github.com/users/jozefl-mitto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jozefl-mitto/subscriptions", "organizations_url": "https://api.github.com/users/jozefl-mitto/orgs", "repos_url": "https://api.github.com/users/jozefl-mitto/repos", "events_url": "https://api.github.com/users/jozefl-mitto/events{/privacy}", "received_events_url": "https://api.github.com/users/jozefl-mitto/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "14f27ee6c97c585018882ac8f1f5f2d64618ba66", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14f27ee6c97c585018882ac8f1f5f2d64618ba66", "html_url": "https://github.com/Rust-GCC/gccrs/commit/14f27ee6c97c585018882ac8f1f5f2d64618ba66"}], "stats": {"total": 16, "additions": 13, "deletions": 3}, "files": [{"sha": "8bfc2127989bd01447523c6004b8b8ce193bd86e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04637536a6b69c6bf7e22e2ccd5ff3bfc4892394/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04637536a6b69c6bf7e22e2ccd5ff3bfc4892394/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=04637536a6b69c6bf7e22e2ccd5ff3bfc4892394", "patch": "@@ -1,3 +1,9 @@\n+2020-04-13  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n+\n+\t* config/msp430/msp430.c (msp430_print_operand): Don't add offsets to\n+\tmemory references in %B, %C and %D operand selectors when the inner\n+\toperand is a post increment address.\n+\n 2020-04-13  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n \n \t* config/msp430/msp430.c (msp430_print_operand): Offset a %C memory"}, {"sha": "e77ca101599d9ed704575dcdb90eefa8b808b5c2", "filename": "gcc/config/msp430/msp430.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04637536a6b69c6bf7e22e2ccd5ff3bfc4892394/gcc%2Fconfig%2Fmsp430%2Fmsp430.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04637536a6b69c6bf7e22e2ccd5ff3bfc4892394/gcc%2Fconfig%2Fmsp430%2Fmsp430.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmsp430%2Fmsp430.c?ref=04637536a6b69c6bf7e22e2ccd5ff3bfc4892394", "patch": "@@ -3474,7 +3474,9 @@ msp430_print_operand (FILE * file, rtx op, int letter)\n       switch (GET_CODE (op))\n \t{\n \tcase MEM:\n-\t  op = adjust_address (op, Pmode, 2);\n+\t  /* We don't need to adjust the address for post_inc.  */\n+\t  op = adjust_address (op, Pmode,\n+\t\t\t       (GET_CODE (XEXP (op, 0)) == POST_INC) ? 0 : 2);\n \t  break;\n \tcase REG:\n \t  op = gen_rtx_REG (Pmode, REGNO (op) + 1);\n@@ -3492,7 +3494,8 @@ msp430_print_operand (FILE * file, rtx op, int letter)\n       switch (GET_CODE (op))\n \t{\n \tcase MEM:\n-\t  op = adjust_address (op, Pmode, 4);\n+\t  op = adjust_address (op, Pmode,\n+\t\t\t       (GET_CODE (XEXP (op, 0)) == POST_INC) ? 0 : 4);\n \t  break;\n \tcase REG:\n \t  op = gen_rtx_REG (Pmode, REGNO (op) + 2);\n@@ -3510,7 +3513,8 @@ msp430_print_operand (FILE * file, rtx op, int letter)\n       switch (GET_CODE (op))\n \t{\n \tcase MEM:\n-\t  op = adjust_address (op, Pmode, 6);\n+\t  op = adjust_address (op, Pmode,\n+\t\t\t       (GET_CODE (XEXP (op, 0)) == POST_INC) ? 0 : 6);\n \t  break;\n \tcase REG:\n \t  op = gen_rtx_REG (Pmode, REGNO (op) + 3);"}]}