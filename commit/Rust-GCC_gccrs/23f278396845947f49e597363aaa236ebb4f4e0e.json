{"sha": "23f278396845947f49e597363aaa236ebb4f4e0e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjNmMjc4Mzk2ODQ1OTQ3ZjQ5ZTU5NzM2M2FhYTIzNmViYjRmNGUwZQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2016-02-18T08:43:58Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2016-02-18T08:43:58Z"}, "message": "re PR middle-end/69854 (ICE: tree check: expected class 'constant', have 'binary' (plus_expr) in generic_simplify_65, at generic-match.c:3110)\n\n2016-02-18  Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/69854\n\t* match.pd: Don't use fold_binary or fold_unary for folding\n\tconstants.\n\n\t* gcc.dg/torture/pr69854.c: New testcase.\n\nFrom-SVN: r233516", "tree": {"sha": "9c824672154edd8b17d6a93909e4680f28c04978", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9c824672154edd8b17d6a93909e4680f28c04978"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/23f278396845947f49e597363aaa236ebb4f4e0e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23f278396845947f49e597363aaa236ebb4f4e0e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/23f278396845947f49e597363aaa236ebb4f4e0e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23f278396845947f49e597363aaa236ebb4f4e0e/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "43414a5dd3a9b9b02bc675e1c33140021c3848aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43414a5dd3a9b9b02bc675e1c33140021c3848aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43414a5dd3a9b9b02bc675e1c33140021c3848aa"}], "stats": {"total": 29, "additions": 24, "deletions": 5}, "files": [{"sha": "f2ce850cb95a66b1e963cf46d4565e6a74238394", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23f278396845947f49e597363aaa236ebb4f4e0e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23f278396845947f49e597363aaa236ebb4f4e0e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=23f278396845947f49e597363aaa236ebb4f4e0e", "patch": "@@ -1,3 +1,9 @@\n+2016-02-18  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/69854\n+\t* match.pd: Don't use fold_binary or fold_unary for folding\n+\tconstants.\n+\n 2016-02-17  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/69850"}, {"sha": "590378250c3281fb4dc29b9af83c5f02fc55a0c3", "filename": "gcc/match.pd", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23f278396845947f49e597363aaa236ebb4f4e0e/gcc%2Fmatch.pd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23f278396845947f49e597363aaa236ebb4f4e0e/gcc%2Fmatch.pd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatch.pd?ref=23f278396845947f49e597363aaa236ebb4f4e0e", "patch": "@@ -1063,7 +1063,7 @@ DEFINE_INT_AND_FLOAT_ROUND_FN (RINT)\n      /* If the constant operation overflows we cannot do the transform\n \tas we would introduce undefined overflow, for example\n \twith (a - 1) + INT_MIN.  */\n-     (with { tree cst = fold_binary (outer_op == inner_op\n+     (with { tree cst = const_binop (outer_op == inner_op\n \t\t\t\t     ? PLUS_EXPR : MINUS_EXPR, type, @1, @2); }\n       (if (cst && !TREE_OVERFLOW (cst))\n        (inner_op @0 { cst; } ))))))\n@@ -1072,7 +1072,7 @@ DEFINE_INT_AND_FLOAT_ROUND_FN (RINT)\n   (for outer_op (plus minus)\n    (simplify\n     (outer_op (minus CONSTANT_CLASS_P@1 @0) CONSTANT_CLASS_P@2)\n-    (with { tree cst = fold_binary (outer_op, type, @1, @2); }\n+    (with { tree cst = const_binop (outer_op, type, @1, @2); }\n      (if (cst && !TREE_OVERFLOW (cst))\n       (minus { cst; } @0)))))\n \n@@ -1270,7 +1270,7 @@ DEFINE_INT_AND_FLOAT_ROUND_FN (RINT)\n    RROTATE_EXPR by a new constant.  */\n (simplify\n  (lrotate @0 INTEGER_CST@1)\n- (rrotate @0 { fold_binary (MINUS_EXPR, TREE_TYPE (@1),\n+ (rrotate @0 { const_binop (MINUS_EXPR, TREE_TYPE (@1),\n \t\t\t    build_int_cst (TREE_TYPE (@1),\n \t\t\t\t\t   element_precision (type)), @1); }))\n \n@@ -1596,7 +1596,7 @@ DEFINE_INT_AND_FLOAT_ROUND_FN (RINT)\n (simplify\n  (plus @0 REAL_CST@1)\n  (if (REAL_VALUE_NEGATIVE (TREE_REAL_CST (@1)))\n-  (with { tree tem = fold_unary (NEGATE_EXPR, type, @1); }\n+  (with { tree tem = const_unop (NEGATE_EXPR, type, @1); }\n    (if (!TREE_OVERFLOW (tem) || !flag_trapping_math)\n     (minus @0 { tem; })))))\n \n@@ -2149,7 +2149,7 @@ DEFINE_INT_AND_FLOAT_ROUND_FN (RINT)\n   (if (FLOAT_TYPE_P (TREE_TYPE (@0))\n        || (ANY_INTEGRAL_TYPE_P (TREE_TYPE (@0))\n \t   && TYPE_OVERFLOW_UNDEFINED (TREE_TYPE (@0))))\n-   (with { tree tem = fold_unary (NEGATE_EXPR, TREE_TYPE (@0), @1); }\n+   (with { tree tem = const_unop (NEGATE_EXPR, TREE_TYPE (@0), @1); }\n     (if (tem && !TREE_OVERFLOW (tem))\n      (scmp @0 { tem; }))))))\n "}, {"sha": "74a99e623a78337ae41536022e630a31447f2bae", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23f278396845947f49e597363aaa236ebb4f4e0e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23f278396845947f49e597363aaa236ebb4f4e0e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=23f278396845947f49e597363aaa236ebb4f4e0e", "patch": "@@ -1,3 +1,8 @@\n+2016-02-18  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/69854\n+\t* gcc.dg/torture/pr69854.c: New testcase.\n+\n 2016-02-17  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/69850"}, {"sha": "56558471bdd93637ec1f646dc36113703ff5f174", "filename": "gcc/testsuite/gcc.dg/torture/pr69854.c", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23f278396845947f49e597363aaa236ebb4f4e0e/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr69854.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23f278396845947f49e597363aaa236ebb4f4e0e/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr69854.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr69854.c?ref=23f278396845947f49e597363aaa236ebb4f4e0e", "patch": "@@ -0,0 +1,8 @@\n+/* { dg-do compile } */\n+/* { dg-additional-options \"-frounding-math -ffast-math\" } */\n+\n+double fn1()\n+{\n+  double w, s = fn1() - 6.12323399573676603587e17;\n+  return 1.57079632679489655800e00 - (s + w);\n+}"}]}