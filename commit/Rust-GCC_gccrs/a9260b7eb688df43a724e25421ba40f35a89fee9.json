{"sha": "a9260b7eb688df43a724e25421ba40f35a89fee9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTkyNjBiN2ViNjg4ZGY0M2E3MjRlMjU0MjFiYTQwZjM1YTg5ZmVlOQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2016-10-17T13:32:32Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2016-10-17T13:32:32Z"}, "message": "57619.C: Rename to 57619.cc.\n\n2016-10-17  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* testsuite/unordered_map/insert/57619.C: Rename to 57619.cc.\n\t* testsuite/23_containers/unordered_multimap/insert/57619.C: Likewise.\n\n2016-10-17  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* testsuite/array/capacity/empty.cc: Remove 'test' variables.\n\t* testsuite/array/capacity/max_size.cc: Likewise.\n\t* testsuite/array/capacity/size.cc: Likewise.\n\t* testsuite/array/comparison_operators/equal.cc: Likewise.\n\t* testsuite/array/comparison_operators/greater.cc: Likewise.\n\t* testsuite/array/comparison_operators/greater_or_equal.cc: Likewise.\n\t* testsuite/array/comparison_operators/less.cc: Likewise.\n\t* testsuite/array/comparison_operators/less_or_equal.cc: Likewise.\n\t* testsuite/array/comparison_operators/not_equal.cc: Likewise.\n\t* testsuite/array/element_access/54388.cc: Likewise.\n\t* testsuite/array/element_access/at_out_of_range.cc: Likewise.\n\t* testsuite/array/element_access/back.cc: Likewise.\n\t* testsuite/array/element_access/data.cc: Likewise.\n\t* testsuite/array/element_access/front.cc: Likewise.\n\t* testsuite/array/iterators/end_is_one_past.cc: Likewise.\n\t* testsuite/array/requirements/contiguous.cc: Likewise.\n\t* testsuite/array/requirements/fill.cc: Likewise.\n\t* testsuite/array/requirements/member_swap.cc: Likewise.\n\t* testsuite/array/requirements/zero_sized_arrays.cc: Likewise.\n\t* testsuite/array/specialized_algorithms/swap.cc: Likewise.\n\t* testsuite/array/tuple_interface/tuple_element.cc: Likewise.\n\t* testsuite/array/tuple_interface/tuple_element_cpp14.cc: Likewise.\n\t* testsuite/array/tuple_interface/tuple_size.cc: Likewise.\n\t* testsuite/bitset/all/1.cc: Likewise.\n\t* testsuite/bitset/cons/1.cc: Likewise.\n\t* testsuite/bitset/cons/16020.cc: Likewise.\n\t* testsuite/bitset/cons/2.cc: Likewise.\n\t* testsuite/bitset/cons/3.cc: Likewise.\n\t* testsuite/bitset/cons/50268.cc: Likewise.\n\t* testsuite/bitset/cons/6282.cc: Likewise.\n\t* testsuite/bitset/cons/dr1325-2.cc: Likewise.\n\t* testsuite/bitset/cons/dr396.cc: Likewise.\n\t* testsuite/bitset/ext/15361.cc: Likewise.\n\t* testsuite/bitset/input/1.cc: Likewise.\n\t* testsuite/bitset/operations/1.cc: Likewise.\n\t* testsuite/bitset/operations/13838.cc: Likewise.\n\t* testsuite/bitset/operations/2.cc: Likewise.\n\t* testsuite/bitset/test/1.cc: Likewise.\n\t* testsuite/bitset/to_string/1.cc: Likewise.\n\t* testsuite/bitset/to_string/dr396.cc: Likewise.\n\t* testsuite/bitset/to_ullong/1.cc: Likewise.\n\t* testsuite/bitset/to_ulong/1.cc: Likewise.\n\t* testsuite/deque/allocator/copy.cc: Likewise.\n\t* testsuite/deque/allocator/copy_assign.cc: Likewise.\n\t* testsuite/deque/allocator/ext_ptr.cc: Likewise.\n\t* testsuite/deque/allocator/minimal.cc: Likewise.\n\t* testsuite/deque/allocator/move.cc: Likewise.\n\t* testsuite/deque/allocator/move_assign.cc: Likewise.\n\t* testsuite/deque/allocator/swap.cc: Likewise.\n\t* testsuite/deque/capacity/29134-2.cc: Likewise.\n\t* testsuite/deque/capacity/29134.cc: Likewise.\n\t* testsuite/deque/capacity/moveable.cc: Likewise.\n\t* testsuite/deque/capacity/resize_size.cc: Likewise.\n\t* testsuite/deque/capacity/shrink_to_fit.cc: Likewise.\n\t* testsuite/deque/cons/1.cc: Likewise.\n\t* testsuite/deque/cons/2.cc: Likewise.\n\t* testsuite/deque/cons/assign/1.cc: Likewise.\n\t* testsuite/deque/cons/cons_size.cc: Likewise.\n\t* testsuite/deque/cons/moveable.cc: Likewise.\n\t* testsuite/deque/modifiers/erase/1.cc: Likewise.\n\t* testsuite/deque/modifiers/erase/2.cc: Likewise.\n\t* testsuite/deque/modifiers/erase/3.cc: Likewise.\n\t* testsuite/deque/modifiers/erase/moveable.cc: Likewise.\n\t* testsuite/deque/modifiers/moveable.cc: Likewise.\n\t* testsuite/deque/modifiers/push_back/49836.cc: Likewise.\n\t* testsuite/deque/modifiers/push_front/49836.cc: Likewise.\n\t* testsuite/deque/modifiers/swap/1.cc: Likewise.\n\t* testsuite/deque/modifiers/swap/2.cc: Likewise.\n\t* testsuite/deque/modifiers/swap/3.cc: Likewise.\n\t* testsuite/deque/operators/1.cc: Likewise.\n\t* testsuite/deque/operators/2.cc: Likewise.\n\t* testsuite/forward_list/allocator/copy.cc: Likewise.\n\t* testsuite/forward_list/allocator/copy_assign.cc: Likewise.\n\t* testsuite/forward_list/allocator/ext_ptr.cc: Likewise.\n\t* testsuite/forward_list/allocator/minimal.cc: Likewise.\n\t* testsuite/forward_list/allocator/move.cc: Likewise.\n\t* testsuite/forward_list/allocator/move_assign.cc: Likewise.\n\t* testsuite/forward_list/allocator/swap.cc: Likewise.\n\t* testsuite/forward_list/capacity/1.cc: Likewise.\n\t* testsuite/forward_list/capacity/resize_size.cc: Likewise.\n\t* testsuite/forward_list/comparable.cc: Likewise.\n\t* testsuite/forward_list/cons/1.cc: Likewise.\n\t* testsuite/forward_list/cons/2.cc: Likewise.\n\t* testsuite/forward_list/cons/3.cc: Likewise.\n\t* testsuite/forward_list/cons/4.cc: Likewise.\n\t* testsuite/forward_list/cons/5.cc: Likewise.\n\t* testsuite/forward_list/cons/6.cc: Likewise.\n\t* testsuite/forward_list/cons/7.cc: Likewise.\n\t* testsuite/forward_list/cons/8.cc: Likewise.\n\t* testsuite/forward_list/cons/9.cc: Likewise.\n\t* testsuite/forward_list/cons/cons_size.cc: Likewise.\n\t* testsuite/forward_list/cons/moveable.cc: Likewise.\n\t* testsuite/forward_list/debug/clear.cc: Likewise.\n\t* testsuite/forward_list/debug/construct4_neg.cc: Likewise.\n\t* testsuite/forward_list/debug/erase_after1_neg.cc: Likewise.\n\t* testsuite/forward_list/debug/move_assign_neg.cc: Likewise.\n\t* testsuite/forward_list/debug/move_constructor.cc: Likewise.\n\t* testsuite/forward_list/debug/move_neg.cc: Likewise.\n\t* testsuite/forward_list/debug/splice_after.cc: Likewise.\n\t* testsuite/forward_list/debug/swap.cc: Likewise.\n\t* testsuite/forward_list/modifiers/1.cc: Likewise.\n\t* testsuite/forward_list/modifiers/2.cc: Likewise.\n\t* testsuite/forward_list/modifiers/3.cc: Likewise.\n\t* testsuite/forward_list/modifiers/4.cc: Likewise.\n\t* testsuite/forward_list/modifiers/5.cc: Likewise.\n\t* testsuite/forward_list/modifiers/6.cc: Likewise.\n\t* testsuite/forward_list/operations/1.cc: Likewise.\n\t* testsuite/forward_list/operations/2.cc: Likewise.\n\t* testsuite/forward_list/operations/3.cc: Likewise.\n\t* testsuite/forward_list/operations/4.cc: Likewise.\n\t* testsuite/forward_list/operations/5.cc: Likewise.\n\t* testsuite/forward_list/operations/6.cc: Likewise.\n\t* testsuite/forward_list/operations/7.cc: Likewise.\n\t* testsuite/forward_list/operations/remove_freed.cc: Likewise.\n\t* testsuite/list/61347.cc: Likewise.\n\t* testsuite/list/allocator/copy.cc: Likewise.\n\t* testsuite/list/allocator/copy_assign.cc: Likewise.\n\t* testsuite/list/allocator/minimal.cc: Likewise.\n\t* testsuite/list/allocator/move.cc: Likewise.\n\t* testsuite/list/allocator/move_assign.cc: Likewise.\n\t* testsuite/list/allocator/swap.cc: Likewise.\n\t* testsuite/list/capacity/1.h: Likewise.\n\t* testsuite/list/capacity/29134.cc: Likewise.\n\t* testsuite/list/capacity/resize_size.cc: Likewise.\n\t* testsuite/list/cons/1.h: Likewise.\n\t* testsuite/list/cons/2.h: Likewise.\n\t* testsuite/list/cons/3.h: Likewise.\n\t* testsuite/list/cons/4.h: Likewise.\n\t* testsuite/list/cons/5.h: Likewise.\n\t* testsuite/list/cons/6.h: Likewise.\n\t* testsuite/list/cons/7.h: Likewise.\n\t* testsuite/list/cons/8.h: Likewise.\n\t* testsuite/list/cons/9.h: Likewise.\n\t* testsuite/list/cons/cons_size.cc: Likewise.\n\t* testsuite/list/cons/moveable.h: Likewise.\n\t* testsuite/list/debug/invalidation/1.cc: Likewise.\n\t* testsuite/list/debug/invalidation/2.cc: Likewise.\n\t* testsuite/list/debug/invalidation/3.cc: Likewise.\n\t* testsuite/list/debug/invalidation/4.cc: Likewise.\n\t* testsuite/list/modifiers/1.h: Likewise.\n\t* testsuite/list/modifiers/2.h: Likewise.\n\t* testsuite/list/modifiers/3.h: Likewise.\n\t* testsuite/list/modifiers/insert/25288.h: Likewise.\n\t* testsuite/list/modifiers/swap/1.h: Likewise.\n\t* testsuite/list/modifiers/swap/2.h: Likewise.\n\t* testsuite/list/modifiers/swap/3.h: Likewise.\n\t* testsuite/list/operations/1.h: Likewise.\n\t* testsuite/list/operations/2.h: Likewise.\n\t* testsuite/list/operations/3.h: Likewise.\n\t* testsuite/list/operations/4.h: Likewise.\n\t* testsuite/list/operations/42352.cc: Likewise.\n\t* testsuite/map/allocator/copy.cc: Likewise.\n\t* testsuite/map/allocator/copy_assign.cc: Likewise.\n\t* testsuite/map/allocator/init-list.cc: Likewise.\n\t* testsuite/map/allocator/minimal.cc: Likewise.\n\t* testsuite/map/allocator/move.cc: Likewise.\n\t* testsuite/map/allocator/move_assign.cc: Likewise.\n\t* testsuite/map/allocator/swap.cc: Likewise.\n\t* testsuite/map/capacity/29134.cc: Likewise.\n\t* testsuite/map/cons/moveable.cc: Likewise.\n\t* testsuite/map/debug/construct5_neg.cc: Likewise.\n\t* testsuite/map/debug/move_assign_neg.cc: Likewise.\n\t* testsuite/map/debug/move_neg.cc: Likewise.\n\t* testsuite/map/element_access/1.cc: Likewise.\n\t* testsuite/map/element_access/2.cc: Likewise.\n\t* testsuite/map/element_access/39901.cc: Likewise.\n\t* testsuite/map/init-list.cc: Likewise.\n\t* testsuite/map/modifiers/dr130.cc: Likewise.\n\t* testsuite/map/modifiers/emplace/1.cc: Likewise.\n\t* testsuite/map/modifiers/extract.cc: Likewise.\n\t* testsuite/map/modifiers/insert/1.cc: Likewise.\n\t* testsuite/map/modifiers/insert/16813.cc: Likewise.\n\t* testsuite/map/modifiers/insert/2.cc: Likewise.\n\t* testsuite/map/modifiers/insert/3.cc: Likewise.\n\t* testsuite/map/modifiers/insert/4.cc: Likewise.\n\t* testsuite/map/modifiers/insert/5.cc: Likewise.\n\t* testsuite/map/modifiers/insert_or_assign/1.cc: Likewise.\n\t* testsuite/map/modifiers/merge.cc: Likewise.\n\t* testsuite/map/modifiers/swap/1.cc: Likewise.\n\t* testsuite/map/modifiers/swap/2.cc: Likewise.\n\t* testsuite/map/modifiers/swap/3.cc: Likewise.\n\t* testsuite/map/modifiers/try_emplace/1.cc: Likewise.\n\t* testsuite/map/operations/1.cc: Likewise.\n\t* testsuite/map/operations/count.cc: Likewise.\n\t* testsuite/map/operators/1_neg.cc: Likewise.\n\t* testsuite/map/operators/2.cc: Likewise.\n\t* testsuite/multimap/allocator/copy.cc: Likewise.\n\t* testsuite/multimap/allocator/copy_assign.cc: Likewise.\n\t* testsuite/multimap/allocator/init-list.cc: Likewise.\n\t* testsuite/multimap/allocator/minimal.cc: Likewise.\n\t* testsuite/multimap/allocator/move.cc: Likewise.\n\t* testsuite/multimap/allocator/move_assign.cc: Likewise.\n\t* testsuite/multimap/allocator/swap.cc: Likewise.\n\t* testsuite/multimap/capacity/29134.cc: Likewise.\n\t* testsuite/multimap/cons/moveable.cc: Likewise.\n\t* testsuite/multimap/debug/construct5_neg.cc: Likewise.\n\t* testsuite/multimap/debug/move_assign_neg.cc: Likewise.\n\t* testsuite/multimap/debug/move_neg.cc: Likewise.\n\t* testsuite/multimap/init-list.cc: Likewise.\n\t* testsuite/multimap/modifiers/dr130.cc: Likewise.\n\t* testsuite/multimap/modifiers/emplace/1.cc: Likewise.\n\t* testsuite/multimap/modifiers/extract.cc: Likewise.\n\t* testsuite/multimap/modifiers/insert/1.cc: Likewise.\n\t* testsuite/multimap/modifiers/insert/2.cc: Likewise.\n\t* testsuite/multimap/modifiers/insert/22102.cc: Likewise.\n\t* testsuite/multimap/modifiers/insert/3.cc: Likewise.\n\t* testsuite/multimap/modifiers/insert/4.cc: Likewise.\n\t* testsuite/multimap/modifiers/merge.cc: Likewise.\n\t* testsuite/multimap/modifiers/swap/1.cc: Likewise.\n\t* testsuite/multimap/modifiers/swap/2.cc: Likewise.\n\t* testsuite/multimap/modifiers/swap/3.cc: Likewise.\n\t* testsuite/multimap/operations/1.cc: Likewise.\n\t* testsuite/multimap/operations/count.cc: Likewise.\n\t* testsuite/multiset/allocator/copy.cc: Likewise.\n\t* testsuite/multiset/allocator/copy_assign.cc: Likewise.\n\t* testsuite/multiset/allocator/init-list.cc: Likewise.\n\t* testsuite/multiset/allocator/minimal.cc: Likewise.\n\t* testsuite/multiset/allocator/move.cc: Likewise.\n\t* testsuite/multiset/allocator/move_assign.cc: Likewise.\n\t* testsuite/multiset/allocator/swap.cc: Likewise.\n\t* testsuite/multiset/capacity/29134.cc: Likewise.\n\t* testsuite/multiset/cons/moveable.cc: Likewise.\n\t* testsuite/multiset/debug/construct5_neg.cc: Likewise.\n\t* testsuite/multiset/debug/invalidation/2.cc: Likewise.\n\t* testsuite/multiset/debug/move_assign_neg.cc: Likewise.\n\t* testsuite/multiset/debug/move_neg.cc: Likewise.\n\t* testsuite/multiset/init-list.cc: Likewise.\n\t* testsuite/multiset/modifiers/dr130.cc: Likewise.\n\t* testsuite/multiset/modifiers/emplace/1.cc: Likewise.\n\t* testsuite/multiset/modifiers/extract.cc: Likewise.\n\t* testsuite/multiset/modifiers/insert/1.cc: Likewise.\n\t* testsuite/multiset/modifiers/insert/2.cc: Likewise.\n\t* testsuite/multiset/modifiers/insert/22102.cc: Likewise.\n\t* testsuite/multiset/modifiers/insert/3.cc: Likewise.\n\t* testsuite/multiset/modifiers/insert/4.cc: Likewise.\n\t* testsuite/multiset/modifiers/merge.cc: Likewise.\n\t* testsuite/multiset/modifiers/swap/1.cc: Likewise.\n\t* testsuite/multiset/modifiers/swap/2.cc: Likewise.\n\t* testsuite/multiset/modifiers/swap/3.cc: Likewise.\n\t* testsuite/multiset/operations/1.cc: Likewise.\n\t* testsuite/multiset/operations/count.cc: Likewise.\n\t* testsuite/priority_queue/moveable.cc: Likewise.\n\t* testsuite/queue/moveable.cc: Likewise.\n\t* testsuite/set/allocator/copy.cc: Likewise.\n\t* testsuite/set/allocator/copy_assign.cc: Likewise.\n\t* testsuite/set/allocator/init-list.cc: Likewise.\n\t* testsuite/set/allocator/minimal.cc: Likewise.\n\t* testsuite/set/allocator/move.cc: Likewise.\n\t* testsuite/set/allocator/move_assign.cc: Likewise.\n\t* testsuite/set/allocator/swap.cc: Likewise.\n\t* testsuite/set/capacity/29134.cc: Likewise.\n\t* testsuite/set/cons/moveable.cc: Likewise.\n\t* testsuite/set/debug/construct5_neg.cc: Likewise.\n\t* testsuite/set/debug/invalidation/2.cc: Likewise.\n\t* testsuite/set/debug/move_assign_neg.cc: Likewise.\n\t* testsuite/set/debug/move_neg.cc: Likewise.\n\t* testsuite/set/init-list.cc: Likewise.\n\t* testsuite/set/modifiers/17948.cc: Likewise.\n\t* testsuite/set/modifiers/dr130.cc: Likewise.\n\t* testsuite/set/modifiers/emplace/1.cc: Likewise.\n\t* testsuite/set/modifiers/extract.cc: Likewise.\n\t* testsuite/set/modifiers/insert/1.cc: Likewise.\n\t* testsuite/set/modifiers/insert/2.cc: Likewise.\n\t* testsuite/set/modifiers/insert/3.cc: Likewise.\n\t* testsuite/set/modifiers/merge.cc: Likewise.\n\t* testsuite/set/modifiers/swap/1.cc: Likewise.\n\t* testsuite/set/modifiers/swap/2.cc: Likewise.\n\t* testsuite/set/modifiers/swap/3.cc: Likewise.\n\t* testsuite/set/operations/1.cc: Likewise.\n\t* testsuite/set/operations/count.cc: Likewise.\n\t* testsuite/set/operators/1_neg.cc: Likewise.\n\t* testsuite/unordered_map/allocator/copy.cc: Likewise.\n\t* testsuite/unordered_map/allocator/copy_assign.cc: Likewise.\n\t* testsuite/unordered_map/allocator/minimal.cc: Likewise.\n\t* testsuite/unordered_map/allocator/move.cc: Likewise.\n\t* testsuite/unordered_map/allocator/move_assign.cc: Likewise.\n\t* testsuite/unordered_map/allocator/swap.cc: Likewise.\n\t* testsuite/unordered_map/cons/moveable.cc: Likewise.\n\t* testsuite/unordered_map/debug/construct5_neg.cc: Likewise.\n\t* testsuite/unordered_map/debug/move_assign_neg.cc: Likewise.\n\t* testsuite/unordered_map/debug/move_neg.cc: Likewise.\n\t* testsuite/unordered_map/dr761.cc: Likewise.\n\t* testsuite/unordered_map/erase/1.cc: Likewise.\n\t* testsuite/unordered_map/erase/24061-map.cc: Likewise.\n\t* testsuite/unordered_map/erase/54276.cc: Likewise.\n\t* testsuite/unordered_map/hash_policy/dr1189.cc: Likewise.\n\t* testsuite/unordered_map/init-list.cc: Likewise.\n\t* testsuite/unordered_map/insert/24061-map.cc: Likewise.\n\t* testsuite/unordered_map/insert/57619.C: Likewise.\n\t* testsuite/unordered_map/insert/array_syntax.cc: Likewise.\n\t* testsuite/unordered_map/insert/array_syntax_move.cc: Likewise.\n\t* testsuite/unordered_map/insert/map_range.cc: Likewise.\n\t* testsuite/unordered_map/insert/map_single.cc: Likewise.\n\t* testsuite/unordered_map/insert/map_single_move-1.cc: Likewise.\n\t* testsuite/unordered_map/insert/map_single_move-2.cc: Likewise.\n\t* testsuite/unordered_map/modifiers/61667.cc: Likewise.\n\t* testsuite/unordered_map/modifiers/emplace.cc: Likewise.\n\t* testsuite/unordered_map/modifiers/extract.cc: Likewise.\n\t* testsuite/unordered_map/modifiers/insert_or_assign.cc: Likewise.\n\t* testsuite/unordered_map/modifiers/merge.cc: Likewise.\n\t* testsuite/unordered_map/modifiers/reserve.cc: Likewise.\n\t* testsuite/unordered_map/modifiers/try_emplace.cc: Likewise.\n\t* testsuite/unordered_map/operations/count.cc: Likewise.\n\t* testsuite/unordered_map/operators/1.cc: Likewise.\n\t* testsuite/unordered_map/operators/2.cc: Likewise.\n\t* testsuite/unordered_multimap/allocator/copy.cc: Likewise.\n\t* testsuite/unordered_multimap/allocator/copy_assign.cc: Likewise.\n\t* testsuite/unordered_multimap/allocator/minimal.cc: Likewise.\n\t* testsuite/unordered_multimap/allocator/move.cc: Likewise.\n\t* testsuite/unordered_multimap/allocator/move_assign.cc: Likewise.\n\t* testsuite/unordered_multimap/allocator/swap.cc: Likewise.\n\t* testsuite/unordered_multimap/cons/moveable.cc: Likewise.\n\t* testsuite/unordered_multimap/debug/construct5_neg.cc: Likewise.\n\t* testsuite/unordered_multimap/debug/move_assign_neg.cc: Likewise.\n\t* testsuite/unordered_multimap/debug/move_neg.cc: Likewise.\n\t* testsuite/unordered_multimap/erase/1.cc: Likewise.\n\t* testsuite/unordered_multimap/erase/2.cc: Likewise.\n\t* testsuite/unordered_multimap/erase/24061-multimap.cc: Likewise.\n\t* testsuite/unordered_multimap/erase/51845-multimap.cc: Likewise.\n\t* testsuite/unordered_multimap/erase/54276.cc: Likewise.\n\t* testsuite/unordered_multimap/hash_policy/dr1189.cc: Likewise.\n\t* testsuite/unordered_multimap/init-list.cc: Likewise.\n\t* testsuite/unordered_multimap/insert/24061-multimap.cc: Likewise.\n\t* testsuite/unordered_multimap/insert/51866.cc: Likewise.\n\t* testsuite/unordered_multimap/insert/52476.cc: Likewise.\n\t* testsuite/unordered_multimap/insert/53115.cc: Likewise.\n\t* testsuite/unordered_multimap/insert/57619.C: Likewise.\n\t* testsuite/unordered_multimap/insert/hint.cc: Likewise.\n\t* testsuite/unordered_multimap/insert/multimap_range.cc: Likewise.\n\t* testsuite/unordered_multimap/insert/multimap_single.cc: Likewise.\n\t* testsuite/unordered_multimap/insert/multimap_single_move-1.cc:\n\tLikewise.\n\t* testsuite/unordered_multimap/insert/multimap_single_move-2.cc:\n\tLikewise.\n\t* testsuite/unordered_multimap/modifiers/emplace.cc: Likewise.\n\t* testsuite/unordered_multimap/modifiers/extract.cc: Likewise.\n\t* testsuite/unordered_multimap/modifiers/merge.cc: Likewise.\n\t* testsuite/unordered_multimap/modifiers/reserve.cc: Likewise.\n\t* testsuite/unordered_multimap/operations/count.cc: Likewise.\n\t* testsuite/unordered_multimap/operators/1.cc: Likewise.\n\t* testsuite/unordered_multimap/operators/2.cc: Likewise.\n\t* testsuite/unordered_multiset/allocator/copy.cc: Likewise.\n\t* testsuite/unordered_multiset/allocator/copy_assign.cc: Likewise.\n\t* testsuite/unordered_multiset/allocator/minimal.cc: Likewise.\n\t* testsuite/unordered_multiset/allocator/move.cc: Likewise.\n\t* testsuite/unordered_multiset/allocator/move_assign.cc: Likewise.\n\t* testsuite/unordered_multiset/allocator/swap.cc: Likewise.\n\t* testsuite/unordered_multiset/cons/copy.cc: Likewise.\n\t* testsuite/unordered_multiset/cons/moveable.cc: Likewise.\n\t* testsuite/unordered_multiset/debug/construct5_neg.cc: Likewise.\n\t* testsuite/unordered_multiset/debug/move_assign_neg.cc: Likewise.\n\t* testsuite/unordered_multiset/debug/move_neg.cc: Likewise.\n\t* testsuite/unordered_multiset/erase/1.cc: Likewise.\n\t* testsuite/unordered_multiset/erase/2.cc: Likewise.\n\t* testsuite/unordered_multiset/erase/24061-multiset.cc: Likewise.\n\t* testsuite/unordered_multiset/hash_policy/dr1189.cc: Likewise.\n\t* testsuite/unordered_multiset/init-list.cc: Likewise.\n\t* testsuite/unordered_multiset/insert/24061-multiset.cc: Likewise.\n\t* testsuite/unordered_multiset/insert/51866.cc: Likewise.\n\t* testsuite/unordered_multiset/insert/52476.cc: Likewise.\n\t* testsuite/unordered_multiset/insert/53115.cc: Likewise.\n\t* testsuite/unordered_multiset/insert/hash_policy.cc: Likewise.\n\t* testsuite/unordered_multiset/insert/multiset_range.cc: Likewise.\n\t* testsuite/unordered_multiset/insert/multiset_single.cc: Likewise.\n\t* testsuite/unordered_multiset/insert/multiset_single_move.cc: Likewise.\n\t* testsuite/unordered_multiset/modifiers/emplace.cc: Likewise.\n\t* testsuite/unordered_multiset/modifiers/extract.cc: Likewise.\n\t* testsuite/unordered_multiset/modifiers/merge.cc: Likewise.\n\t* testsuite/unordered_multiset/modifiers/reserve.cc: Likewise.\n\t* testsuite/unordered_multiset/operations/count.cc: Likewise.\n\t* testsuite/unordered_multiset/operators/1.cc: Likewise.\n\t* testsuite/unordered_set/allocator/copy.cc: Likewise.\n\t* testsuite/unordered_set/allocator/copy_assign.cc: Likewise.\n\t* testsuite/unordered_set/allocator/ext_ptr.cc: Likewise.\n\t* testsuite/unordered_set/allocator/minimal.cc: Likewise.\n\t* testsuite/unordered_set/allocator/move.cc: Likewise.\n\t* testsuite/unordered_set/allocator/move_assign.cc: Likewise.\n\t* testsuite/unordered_set/allocator/swap.cc: Likewise.\n\t* testsuite/unordered_set/buckets/swap.cc: Likewise.\n\t* testsuite/unordered_set/cons/moveable.cc: Likewise.\n\t* testsuite/unordered_set/debug/construct5_neg.cc: Likewise.\n\t* testsuite/unordered_set/debug/debug_functions.cc: Likewise.\n\t* testsuite/unordered_set/debug/move_assign_neg.cc: Likewise.\n\t* testsuite/unordered_set/debug/move_neg.cc: Likewise.\n\t* testsuite/unordered_set/erase/1.cc: Likewise.\n\t* testsuite/unordered_set/erase/24061-set.cc: Likewise.\n\t* testsuite/unordered_set/hash_policy/26132.cc: Likewise.\n\t* testsuite/unordered_set/hash_policy/71181.cc: Likewise.\n\t* testsuite/unordered_set/hash_policy/dr1189.cc: Likewise.\n\t* testsuite/unordered_set/hash_policy/load_factor.cc: Likewise.\n\t* testsuite/unordered_set/hash_policy/power2_rehash.cc: Likewise.\n\t* testsuite/unordered_set/hash_policy/prime_rehash.cc: Likewise.\n\t* testsuite/unordered_set/hash_policy/rehash.cc: Likewise.\n\t* testsuite/unordered_set/init-list.cc: Likewise.\n\t* testsuite/unordered_set/insert/24061-set.cc: Likewise.\n\t* testsuite/unordered_set/insert/hash_policy.cc: Likewise.\n\t* testsuite/unordered_set/insert/move_range.cc: Likewise.\n\t* testsuite/unordered_set/insert/set_range.cc: Likewise.\n\t* testsuite/unordered_set/insert/set_single.cc: Likewise.\n\t* testsuite/unordered_set/insert/set_single_move.cc: Likewise.\n\t* testsuite/unordered_set/max_load_factor/robustness.cc: Likewise.\n\t* testsuite/unordered_set/modifiers/emplace.cc: Likewise.\n\t* testsuite/unordered_set/modifiers/extract.cc: Likewise.\n\t* testsuite/unordered_set/modifiers/merge.cc: Likewise.\n\t* testsuite/unordered_set/modifiers/reserve.cc: Likewise.\n\t* testsuite/unordered_set/modifiers/swap.cc: Likewise.\n\t* testsuite/unordered_set/operations/count.cc: Likewise.\n\t* testsuite/unordered_set/operators/1.cc: Likewise.\n\t* testsuite/vector/allocator/copy.cc: Likewise.\n\t* testsuite/vector/allocator/copy_assign.cc: Likewise.\n\t* testsuite/vector/allocator/ext_ptr.cc: Likewise.\n\t* testsuite/vector/allocator/minimal.cc: Likewise.\n\t* testsuite/vector/allocator/move.cc: Likewise.\n\t* testsuite/vector/allocator/move_assign.cc: Likewise.\n\t* testsuite/vector/allocator/swap.cc: Likewise.\n\t* testsuite/vector/bool/6886.cc: Likewise.\n\t* testsuite/vector/bool/72847.cc: Likewise.\n\t* testsuite/vector/bool/allocator/copy.cc: Likewise.\n\t* testsuite/vector/bool/allocator/copy_assign.cc: Likewise.\n\t* testsuite/vector/bool/allocator/ext_ptr.cc: Likewise.\n\t* testsuite/vector/bool/allocator/move.cc: Likewise.\n\t* testsuite/vector/bool/allocator/move_assign.cc: Likewise.\n\t* testsuite/vector/bool/allocator/swap.cc: Likewise.\n\t* testsuite/vector/bool/capacity/1.cc: Likewise.\n\t* testsuite/vector/bool/capacity/29134.cc: Likewise.\n\t* testsuite/vector/bool/capacity/shrink_to_fit.cc: Likewise.\n\t* testsuite/vector/bool/cons/1.cc: Likewise.\n\t* testsuite/vector/bool/cons/2.cc: Likewise.\n\t* testsuite/vector/bool/modifiers/erase/1.cc: Likewise.\n\t* testsuite/vector/bool/modifiers/insert/1.cc: Likewise.\n\t* testsuite/vector/bool/modifiers/insert/31370.cc: Likewise.\n\t* testsuite/vector/bool/modifiers/swap/1.cc: Likewise.\n\t* testsuite/vector/bool/modifiers/swap/2.cc: Likewise.\n\t* testsuite/vector/bool/swap.cc: Likewise.\n\t* testsuite/vector/capacity/1.cc: Likewise.\n\t* testsuite/vector/capacity/2.cc: Likewise.\n\t* testsuite/vector/capacity/29134-2.cc: Likewise.\n\t* testsuite/vector/capacity/29134.cc: Likewise.\n\t* testsuite/vector/capacity/44190.cc: Likewise.\n\t* testsuite/vector/capacity/8230.cc: Likewise.\n\t* testsuite/vector/capacity/reserve/moveable.cc: Likewise.\n\t* testsuite/vector/capacity/reserve/moveable2.cc: Likewise.\n\t* testsuite/vector/capacity/resize/1.cc: Likewise.\n\t* testsuite/vector/capacity/resize/moveable.cc: Likewise.\n\t* testsuite/vector/capacity/resize/moveable2.cc: Likewise.\n\t* testsuite/vector/capacity/resize/resize_size.cc: Likewise.\n\t* testsuite/vector/capacity/shrink_to_fit.cc: Likewise.\n\t* testsuite/vector/capacity/shrink_to_fit2.cc: Likewise.\n\t* testsuite/vector/cons/3.cc: Likewise.\n\t* testsuite/vector/cons/4.cc: Likewise.\n\t* testsuite/vector/cons/cons_size.cc: Likewise.\n\t* testsuite/vector/cons/moveable.cc: Likewise.\n\t* testsuite/vector/data_access/1.cc: Likewise.\n\t* testsuite/vector/debug/debug_functions.cc: Likewise.\n\t* testsuite/vector/debug/move_assign_neg.cc: Likewise.\n\t* testsuite/vector/debug/move_neg.cc: Likewise.\n\t* testsuite/vector/debug/multithreaded_swap.cc: Likewise.\n\t* testsuite/vector/element_access/1.cc: Likewise.\n\t* testsuite/vector/ext_pointer/citerators.cc: Likewise.\n\t* testsuite/vector/ext_pointer/data_access.cc: Likewise.\n\t* testsuite/vector/ext_pointer/modifiers/element.cc: Likewise.\n\t* testsuite/vector/ext_pointer/modifiers/erase.cc: Likewise.\n\t* testsuite/vector/ext_pointer/modifiers/insert.cc: Likewise.\n\t* testsuite/vector/ext_pointer/resize.cc: Likewise.\n\t* testsuite/vector/modifiers/1.cc: Likewise.\n\t* testsuite/vector/modifiers/2.cc: Likewise.\n\t* testsuite/vector/modifiers/emplace/self_emplace.cc: Likewise.\n\t* testsuite/vector/modifiers/erase/1.cc: Likewise.\n\t* testsuite/vector/modifiers/erase/moveable.cc: Likewise.\n\t* testsuite/vector/modifiers/insert/1.cc: Likewise.\n\t* testsuite/vector/modifiers/insert/self_insert.cc: Likewise.\n\t* testsuite/vector/modifiers/moveable.cc: Likewise.\n\t* testsuite/vector/modifiers/moveable2.cc: Likewise.\n\t* testsuite/vector/modifiers/push_back/49836.cc: Likewise.\n\t* testsuite/vector/modifiers/swap/1.cc: Likewise.\n\t* testsuite/vector/modifiers/swap/2.cc: Likewise.\n\t* testsuite/vector/modifiers/swap/3.cc: Likewise.\n\t* testsuite/vector/zero_sized_allocations.cc: Likewise.\n\nFrom-SVN: r241241", "tree": {"sha": "43f4774b3c7d92ff2079eb227c6691677fac1441", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/43f4774b3c7d92ff2079eb227c6691677fac1441"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a9260b7eb688df43a724e25421ba40f35a89fee9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9260b7eb688df43a724e25421ba40f35a89fee9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a9260b7eb688df43a724e25421ba40f35a89fee9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9260b7eb688df43a724e25421ba40f35a89fee9/comments", "author": null, "committer": null, "parents": [{"sha": "b12b1915d8daa6fd271a15791f19b5724428d38f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b12b1915d8daa6fd271a15791f19b5724428d38f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b12b1915d8daa6fd271a15791f19b5724428d38f"}], "stats": {"total": 1576, "additions": 524, "deletions": 1052}, "files": [{"sha": "98872fd6b4c4419fd3202b7b5f8dd07946a5bc31", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 486, "deletions": 0, "changes": 486, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -1,3 +1,489 @@\n+2016-10-17  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* testsuite/unordered_map/insert/57619.C: Rename to 57619.cc.\n+\t* testsuite/23_containers/unordered_multimap/insert/57619.C: Likewise.\n+\n+2016-10-17  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* testsuite/array/capacity/empty.cc: Remove 'test' variables.\n+\t* testsuite/array/capacity/max_size.cc: Likewise.\n+\t* testsuite/array/capacity/size.cc: Likewise.\n+\t* testsuite/array/comparison_operators/equal.cc: Likewise.\n+\t* testsuite/array/comparison_operators/greater.cc: Likewise.\n+\t* testsuite/array/comparison_operators/greater_or_equal.cc: Likewise.\n+\t* testsuite/array/comparison_operators/less.cc: Likewise.\n+\t* testsuite/array/comparison_operators/less_or_equal.cc: Likewise.\n+\t* testsuite/array/comparison_operators/not_equal.cc: Likewise.\n+\t* testsuite/array/element_access/54388.cc: Likewise.\n+\t* testsuite/array/element_access/at_out_of_range.cc: Likewise.\n+\t* testsuite/array/element_access/back.cc: Likewise.\n+\t* testsuite/array/element_access/data.cc: Likewise.\n+\t* testsuite/array/element_access/front.cc: Likewise.\n+\t* testsuite/array/iterators/end_is_one_past.cc: Likewise.\n+\t* testsuite/array/requirements/contiguous.cc: Likewise.\n+\t* testsuite/array/requirements/fill.cc: Likewise.\n+\t* testsuite/array/requirements/member_swap.cc: Likewise.\n+\t* testsuite/array/requirements/zero_sized_arrays.cc: Likewise.\n+\t* testsuite/array/specialized_algorithms/swap.cc: Likewise.\n+\t* testsuite/array/tuple_interface/tuple_element.cc: Likewise.\n+\t* testsuite/array/tuple_interface/tuple_element_cpp14.cc: Likewise.\n+\t* testsuite/array/tuple_interface/tuple_size.cc: Likewise.\n+\t* testsuite/bitset/all/1.cc: Likewise.\n+\t* testsuite/bitset/cons/1.cc: Likewise.\n+\t* testsuite/bitset/cons/16020.cc: Likewise.\n+\t* testsuite/bitset/cons/2.cc: Likewise.\n+\t* testsuite/bitset/cons/3.cc: Likewise.\n+\t* testsuite/bitset/cons/50268.cc: Likewise.\n+\t* testsuite/bitset/cons/6282.cc: Likewise.\n+\t* testsuite/bitset/cons/dr1325-2.cc: Likewise.\n+\t* testsuite/bitset/cons/dr396.cc: Likewise.\n+\t* testsuite/bitset/ext/15361.cc: Likewise.\n+\t* testsuite/bitset/input/1.cc: Likewise.\n+\t* testsuite/bitset/operations/1.cc: Likewise.\n+\t* testsuite/bitset/operations/13838.cc: Likewise.\n+\t* testsuite/bitset/operations/2.cc: Likewise.\n+\t* testsuite/bitset/test/1.cc: Likewise.\n+\t* testsuite/bitset/to_string/1.cc: Likewise.\n+\t* testsuite/bitset/to_string/dr396.cc: Likewise.\n+\t* testsuite/bitset/to_ullong/1.cc: Likewise.\n+\t* testsuite/bitset/to_ulong/1.cc: Likewise.\n+\t* testsuite/deque/allocator/copy.cc: Likewise.\n+\t* testsuite/deque/allocator/copy_assign.cc: Likewise.\n+\t* testsuite/deque/allocator/ext_ptr.cc: Likewise.\n+\t* testsuite/deque/allocator/minimal.cc: Likewise.\n+\t* testsuite/deque/allocator/move.cc: Likewise.\n+\t* testsuite/deque/allocator/move_assign.cc: Likewise.\n+\t* testsuite/deque/allocator/swap.cc: Likewise.\n+\t* testsuite/deque/capacity/29134-2.cc: Likewise.\n+\t* testsuite/deque/capacity/29134.cc: Likewise.\n+\t* testsuite/deque/capacity/moveable.cc: Likewise.\n+\t* testsuite/deque/capacity/resize_size.cc: Likewise.\n+\t* testsuite/deque/capacity/shrink_to_fit.cc: Likewise.\n+\t* testsuite/deque/cons/1.cc: Likewise.\n+\t* testsuite/deque/cons/2.cc: Likewise.\n+\t* testsuite/deque/cons/assign/1.cc: Likewise.\n+\t* testsuite/deque/cons/cons_size.cc: Likewise.\n+\t* testsuite/deque/cons/moveable.cc: Likewise.\n+\t* testsuite/deque/modifiers/erase/1.cc: Likewise.\n+\t* testsuite/deque/modifiers/erase/2.cc: Likewise.\n+\t* testsuite/deque/modifiers/erase/3.cc: Likewise.\n+\t* testsuite/deque/modifiers/erase/moveable.cc: Likewise.\n+\t* testsuite/deque/modifiers/moveable.cc: Likewise.\n+\t* testsuite/deque/modifiers/push_back/49836.cc: Likewise.\n+\t* testsuite/deque/modifiers/push_front/49836.cc: Likewise.\n+\t* testsuite/deque/modifiers/swap/1.cc: Likewise.\n+\t* testsuite/deque/modifiers/swap/2.cc: Likewise.\n+\t* testsuite/deque/modifiers/swap/3.cc: Likewise.\n+\t* testsuite/deque/operators/1.cc: Likewise.\n+\t* testsuite/deque/operators/2.cc: Likewise.\n+\t* testsuite/forward_list/allocator/copy.cc: Likewise.\n+\t* testsuite/forward_list/allocator/copy_assign.cc: Likewise.\n+\t* testsuite/forward_list/allocator/ext_ptr.cc: Likewise.\n+\t* testsuite/forward_list/allocator/minimal.cc: Likewise.\n+\t* testsuite/forward_list/allocator/move.cc: Likewise.\n+\t* testsuite/forward_list/allocator/move_assign.cc: Likewise.\n+\t* testsuite/forward_list/allocator/swap.cc: Likewise.\n+\t* testsuite/forward_list/capacity/1.cc: Likewise.\n+\t* testsuite/forward_list/capacity/resize_size.cc: Likewise.\n+\t* testsuite/forward_list/comparable.cc: Likewise.\n+\t* testsuite/forward_list/cons/1.cc: Likewise.\n+\t* testsuite/forward_list/cons/2.cc: Likewise.\n+\t* testsuite/forward_list/cons/3.cc: Likewise.\n+\t* testsuite/forward_list/cons/4.cc: Likewise.\n+\t* testsuite/forward_list/cons/5.cc: Likewise.\n+\t* testsuite/forward_list/cons/6.cc: Likewise.\n+\t* testsuite/forward_list/cons/7.cc: Likewise.\n+\t* testsuite/forward_list/cons/8.cc: Likewise.\n+\t* testsuite/forward_list/cons/9.cc: Likewise.\n+\t* testsuite/forward_list/cons/cons_size.cc: Likewise.\n+\t* testsuite/forward_list/cons/moveable.cc: Likewise.\n+\t* testsuite/forward_list/debug/clear.cc: Likewise.\n+\t* testsuite/forward_list/debug/construct4_neg.cc: Likewise.\n+\t* testsuite/forward_list/debug/erase_after1_neg.cc: Likewise.\n+\t* testsuite/forward_list/debug/move_assign_neg.cc: Likewise.\n+\t* testsuite/forward_list/debug/move_constructor.cc: Likewise.\n+\t* testsuite/forward_list/debug/move_neg.cc: Likewise.\n+\t* testsuite/forward_list/debug/splice_after.cc: Likewise.\n+\t* testsuite/forward_list/debug/swap.cc: Likewise.\n+\t* testsuite/forward_list/modifiers/1.cc: Likewise.\n+\t* testsuite/forward_list/modifiers/2.cc: Likewise.\n+\t* testsuite/forward_list/modifiers/3.cc: Likewise.\n+\t* testsuite/forward_list/modifiers/4.cc: Likewise.\n+\t* testsuite/forward_list/modifiers/5.cc: Likewise.\n+\t* testsuite/forward_list/modifiers/6.cc: Likewise.\n+\t* testsuite/forward_list/operations/1.cc: Likewise.\n+\t* testsuite/forward_list/operations/2.cc: Likewise.\n+\t* testsuite/forward_list/operations/3.cc: Likewise.\n+\t* testsuite/forward_list/operations/4.cc: Likewise.\n+\t* testsuite/forward_list/operations/5.cc: Likewise.\n+\t* testsuite/forward_list/operations/6.cc: Likewise.\n+\t* testsuite/forward_list/operations/7.cc: Likewise.\n+\t* testsuite/forward_list/operations/remove_freed.cc: Likewise.\n+\t* testsuite/list/61347.cc: Likewise.\n+\t* testsuite/list/allocator/copy.cc: Likewise.\n+\t* testsuite/list/allocator/copy_assign.cc: Likewise.\n+\t* testsuite/list/allocator/minimal.cc: Likewise.\n+\t* testsuite/list/allocator/move.cc: Likewise.\n+\t* testsuite/list/allocator/move_assign.cc: Likewise.\n+\t* testsuite/list/allocator/swap.cc: Likewise.\n+\t* testsuite/list/capacity/1.h: Likewise.\n+\t* testsuite/list/capacity/29134.cc: Likewise.\n+\t* testsuite/list/capacity/resize_size.cc: Likewise.\n+\t* testsuite/list/cons/1.h: Likewise.\n+\t* testsuite/list/cons/2.h: Likewise.\n+\t* testsuite/list/cons/3.h: Likewise.\n+\t* testsuite/list/cons/4.h: Likewise.\n+\t* testsuite/list/cons/5.h: Likewise.\n+\t* testsuite/list/cons/6.h: Likewise.\n+\t* testsuite/list/cons/7.h: Likewise.\n+\t* testsuite/list/cons/8.h: Likewise.\n+\t* testsuite/list/cons/9.h: Likewise.\n+\t* testsuite/list/cons/cons_size.cc: Likewise.\n+\t* testsuite/list/cons/moveable.h: Likewise.\n+\t* testsuite/list/debug/invalidation/1.cc: Likewise.\n+\t* testsuite/list/debug/invalidation/2.cc: Likewise.\n+\t* testsuite/list/debug/invalidation/3.cc: Likewise.\n+\t* testsuite/list/debug/invalidation/4.cc: Likewise.\n+\t* testsuite/list/modifiers/1.h: Likewise.\n+\t* testsuite/list/modifiers/2.h: Likewise.\n+\t* testsuite/list/modifiers/3.h: Likewise.\n+\t* testsuite/list/modifiers/insert/25288.h: Likewise.\n+\t* testsuite/list/modifiers/swap/1.h: Likewise.\n+\t* testsuite/list/modifiers/swap/2.h: Likewise.\n+\t* testsuite/list/modifiers/swap/3.h: Likewise.\n+\t* testsuite/list/operations/1.h: Likewise.\n+\t* testsuite/list/operations/2.h: Likewise.\n+\t* testsuite/list/operations/3.h: Likewise.\n+\t* testsuite/list/operations/4.h: Likewise.\n+\t* testsuite/list/operations/42352.cc: Likewise.\n+\t* testsuite/map/allocator/copy.cc: Likewise.\n+\t* testsuite/map/allocator/copy_assign.cc: Likewise.\n+\t* testsuite/map/allocator/init-list.cc: Likewise.\n+\t* testsuite/map/allocator/minimal.cc: Likewise.\n+\t* testsuite/map/allocator/move.cc: Likewise.\n+\t* testsuite/map/allocator/move_assign.cc: Likewise.\n+\t* testsuite/map/allocator/swap.cc: Likewise.\n+\t* testsuite/map/capacity/29134.cc: Likewise.\n+\t* testsuite/map/cons/moveable.cc: Likewise.\n+\t* testsuite/map/debug/construct5_neg.cc: Likewise.\n+\t* testsuite/map/debug/move_assign_neg.cc: Likewise.\n+\t* testsuite/map/debug/move_neg.cc: Likewise.\n+\t* testsuite/map/element_access/1.cc: Likewise.\n+\t* testsuite/map/element_access/2.cc: Likewise.\n+\t* testsuite/map/element_access/39901.cc: Likewise.\n+\t* testsuite/map/init-list.cc: Likewise.\n+\t* testsuite/map/modifiers/dr130.cc: Likewise.\n+\t* testsuite/map/modifiers/emplace/1.cc: Likewise.\n+\t* testsuite/map/modifiers/extract.cc: Likewise.\n+\t* testsuite/map/modifiers/insert/1.cc: Likewise.\n+\t* testsuite/map/modifiers/insert/16813.cc: Likewise.\n+\t* testsuite/map/modifiers/insert/2.cc: Likewise.\n+\t* testsuite/map/modifiers/insert/3.cc: Likewise.\n+\t* testsuite/map/modifiers/insert/4.cc: Likewise.\n+\t* testsuite/map/modifiers/insert/5.cc: Likewise.\n+\t* testsuite/map/modifiers/insert_or_assign/1.cc: Likewise.\n+\t* testsuite/map/modifiers/merge.cc: Likewise.\n+\t* testsuite/map/modifiers/swap/1.cc: Likewise.\n+\t* testsuite/map/modifiers/swap/2.cc: Likewise.\n+\t* testsuite/map/modifiers/swap/3.cc: Likewise.\n+\t* testsuite/map/modifiers/try_emplace/1.cc: Likewise.\n+\t* testsuite/map/operations/1.cc: Likewise.\n+\t* testsuite/map/operations/count.cc: Likewise.\n+\t* testsuite/map/operators/1_neg.cc: Likewise.\n+\t* testsuite/map/operators/2.cc: Likewise.\n+\t* testsuite/multimap/allocator/copy.cc: Likewise.\n+\t* testsuite/multimap/allocator/copy_assign.cc: Likewise.\n+\t* testsuite/multimap/allocator/init-list.cc: Likewise.\n+\t* testsuite/multimap/allocator/minimal.cc: Likewise.\n+\t* testsuite/multimap/allocator/move.cc: Likewise.\n+\t* testsuite/multimap/allocator/move_assign.cc: Likewise.\n+\t* testsuite/multimap/allocator/swap.cc: Likewise.\n+\t* testsuite/multimap/capacity/29134.cc: Likewise.\n+\t* testsuite/multimap/cons/moveable.cc: Likewise.\n+\t* testsuite/multimap/debug/construct5_neg.cc: Likewise.\n+\t* testsuite/multimap/debug/move_assign_neg.cc: Likewise.\n+\t* testsuite/multimap/debug/move_neg.cc: Likewise.\n+\t* testsuite/multimap/init-list.cc: Likewise.\n+\t* testsuite/multimap/modifiers/dr130.cc: Likewise.\n+\t* testsuite/multimap/modifiers/emplace/1.cc: Likewise.\n+\t* testsuite/multimap/modifiers/extract.cc: Likewise.\n+\t* testsuite/multimap/modifiers/insert/1.cc: Likewise.\n+\t* testsuite/multimap/modifiers/insert/2.cc: Likewise.\n+\t* testsuite/multimap/modifiers/insert/22102.cc: Likewise.\n+\t* testsuite/multimap/modifiers/insert/3.cc: Likewise.\n+\t* testsuite/multimap/modifiers/insert/4.cc: Likewise.\n+\t* testsuite/multimap/modifiers/merge.cc: Likewise.\n+\t* testsuite/multimap/modifiers/swap/1.cc: Likewise.\n+\t* testsuite/multimap/modifiers/swap/2.cc: Likewise.\n+\t* testsuite/multimap/modifiers/swap/3.cc: Likewise.\n+\t* testsuite/multimap/operations/1.cc: Likewise.\n+\t* testsuite/multimap/operations/count.cc: Likewise.\n+\t* testsuite/multiset/allocator/copy.cc: Likewise.\n+\t* testsuite/multiset/allocator/copy_assign.cc: Likewise.\n+\t* testsuite/multiset/allocator/init-list.cc: Likewise.\n+\t* testsuite/multiset/allocator/minimal.cc: Likewise.\n+\t* testsuite/multiset/allocator/move.cc: Likewise.\n+\t* testsuite/multiset/allocator/move_assign.cc: Likewise.\n+\t* testsuite/multiset/allocator/swap.cc: Likewise.\n+\t* testsuite/multiset/capacity/29134.cc: Likewise.\n+\t* testsuite/multiset/cons/moveable.cc: Likewise.\n+\t* testsuite/multiset/debug/construct5_neg.cc: Likewise.\n+\t* testsuite/multiset/debug/invalidation/2.cc: Likewise.\n+\t* testsuite/multiset/debug/move_assign_neg.cc: Likewise.\n+\t* testsuite/multiset/debug/move_neg.cc: Likewise.\n+\t* testsuite/multiset/init-list.cc: Likewise.\n+\t* testsuite/multiset/modifiers/dr130.cc: Likewise.\n+\t* testsuite/multiset/modifiers/emplace/1.cc: Likewise.\n+\t* testsuite/multiset/modifiers/extract.cc: Likewise.\n+\t* testsuite/multiset/modifiers/insert/1.cc: Likewise.\n+\t* testsuite/multiset/modifiers/insert/2.cc: Likewise.\n+\t* testsuite/multiset/modifiers/insert/22102.cc: Likewise.\n+\t* testsuite/multiset/modifiers/insert/3.cc: Likewise.\n+\t* testsuite/multiset/modifiers/insert/4.cc: Likewise.\n+\t* testsuite/multiset/modifiers/merge.cc: Likewise.\n+\t* testsuite/multiset/modifiers/swap/1.cc: Likewise.\n+\t* testsuite/multiset/modifiers/swap/2.cc: Likewise.\n+\t* testsuite/multiset/modifiers/swap/3.cc: Likewise.\n+\t* testsuite/multiset/operations/1.cc: Likewise.\n+\t* testsuite/multiset/operations/count.cc: Likewise.\n+\t* testsuite/priority_queue/moveable.cc: Likewise.\n+\t* testsuite/queue/moveable.cc: Likewise.\n+\t* testsuite/set/allocator/copy.cc: Likewise.\n+\t* testsuite/set/allocator/copy_assign.cc: Likewise.\n+\t* testsuite/set/allocator/init-list.cc: Likewise.\n+\t* testsuite/set/allocator/minimal.cc: Likewise.\n+\t* testsuite/set/allocator/move.cc: Likewise.\n+\t* testsuite/set/allocator/move_assign.cc: Likewise.\n+\t* testsuite/set/allocator/swap.cc: Likewise.\n+\t* testsuite/set/capacity/29134.cc: Likewise.\n+\t* testsuite/set/cons/moveable.cc: Likewise.\n+\t* testsuite/set/debug/construct5_neg.cc: Likewise.\n+\t* testsuite/set/debug/invalidation/2.cc: Likewise.\n+\t* testsuite/set/debug/move_assign_neg.cc: Likewise.\n+\t* testsuite/set/debug/move_neg.cc: Likewise.\n+\t* testsuite/set/init-list.cc: Likewise.\n+\t* testsuite/set/modifiers/17948.cc: Likewise.\n+\t* testsuite/set/modifiers/dr130.cc: Likewise.\n+\t* testsuite/set/modifiers/emplace/1.cc: Likewise.\n+\t* testsuite/set/modifiers/extract.cc: Likewise.\n+\t* testsuite/set/modifiers/insert/1.cc: Likewise.\n+\t* testsuite/set/modifiers/insert/2.cc: Likewise.\n+\t* testsuite/set/modifiers/insert/3.cc: Likewise.\n+\t* testsuite/set/modifiers/merge.cc: Likewise.\n+\t* testsuite/set/modifiers/swap/1.cc: Likewise.\n+\t* testsuite/set/modifiers/swap/2.cc: Likewise.\n+\t* testsuite/set/modifiers/swap/3.cc: Likewise.\n+\t* testsuite/set/operations/1.cc: Likewise.\n+\t* testsuite/set/operations/count.cc: Likewise.\n+\t* testsuite/set/operators/1_neg.cc: Likewise.\n+\t* testsuite/unordered_map/allocator/copy.cc: Likewise.\n+\t* testsuite/unordered_map/allocator/copy_assign.cc: Likewise.\n+\t* testsuite/unordered_map/allocator/minimal.cc: Likewise.\n+\t* testsuite/unordered_map/allocator/move.cc: Likewise.\n+\t* testsuite/unordered_map/allocator/move_assign.cc: Likewise.\n+\t* testsuite/unordered_map/allocator/swap.cc: Likewise.\n+\t* testsuite/unordered_map/cons/moveable.cc: Likewise.\n+\t* testsuite/unordered_map/debug/construct5_neg.cc: Likewise.\n+\t* testsuite/unordered_map/debug/move_assign_neg.cc: Likewise.\n+\t* testsuite/unordered_map/debug/move_neg.cc: Likewise.\n+\t* testsuite/unordered_map/dr761.cc: Likewise.\n+\t* testsuite/unordered_map/erase/1.cc: Likewise.\n+\t* testsuite/unordered_map/erase/24061-map.cc: Likewise.\n+\t* testsuite/unordered_map/erase/54276.cc: Likewise.\n+\t* testsuite/unordered_map/hash_policy/dr1189.cc: Likewise.\n+\t* testsuite/unordered_map/init-list.cc: Likewise.\n+\t* testsuite/unordered_map/insert/24061-map.cc: Likewise.\n+\t* testsuite/unordered_map/insert/57619.C: Likewise.\n+\t* testsuite/unordered_map/insert/array_syntax.cc: Likewise.\n+\t* testsuite/unordered_map/insert/array_syntax_move.cc: Likewise.\n+\t* testsuite/unordered_map/insert/map_range.cc: Likewise.\n+\t* testsuite/unordered_map/insert/map_single.cc: Likewise.\n+\t* testsuite/unordered_map/insert/map_single_move-1.cc: Likewise.\n+\t* testsuite/unordered_map/insert/map_single_move-2.cc: Likewise.\n+\t* testsuite/unordered_map/modifiers/61667.cc: Likewise.\n+\t* testsuite/unordered_map/modifiers/emplace.cc: Likewise.\n+\t* testsuite/unordered_map/modifiers/extract.cc: Likewise.\n+\t* testsuite/unordered_map/modifiers/insert_or_assign.cc: Likewise.\n+\t* testsuite/unordered_map/modifiers/merge.cc: Likewise.\n+\t* testsuite/unordered_map/modifiers/reserve.cc: Likewise.\n+\t* testsuite/unordered_map/modifiers/try_emplace.cc: Likewise.\n+\t* testsuite/unordered_map/operations/count.cc: Likewise.\n+\t* testsuite/unordered_map/operators/1.cc: Likewise.\n+\t* testsuite/unordered_map/operators/2.cc: Likewise.\n+\t* testsuite/unordered_multimap/allocator/copy.cc: Likewise.\n+\t* testsuite/unordered_multimap/allocator/copy_assign.cc: Likewise.\n+\t* testsuite/unordered_multimap/allocator/minimal.cc: Likewise.\n+\t* testsuite/unordered_multimap/allocator/move.cc: Likewise.\n+\t* testsuite/unordered_multimap/allocator/move_assign.cc: Likewise.\n+\t* testsuite/unordered_multimap/allocator/swap.cc: Likewise.\n+\t* testsuite/unordered_multimap/cons/moveable.cc: Likewise.\n+\t* testsuite/unordered_multimap/debug/construct5_neg.cc: Likewise.\n+\t* testsuite/unordered_multimap/debug/move_assign_neg.cc: Likewise.\n+\t* testsuite/unordered_multimap/debug/move_neg.cc: Likewise.\n+\t* testsuite/unordered_multimap/erase/1.cc: Likewise.\n+\t* testsuite/unordered_multimap/erase/2.cc: Likewise.\n+\t* testsuite/unordered_multimap/erase/24061-multimap.cc: Likewise.\n+\t* testsuite/unordered_multimap/erase/51845-multimap.cc: Likewise.\n+\t* testsuite/unordered_multimap/erase/54276.cc: Likewise.\n+\t* testsuite/unordered_multimap/hash_policy/dr1189.cc: Likewise.\n+\t* testsuite/unordered_multimap/init-list.cc: Likewise.\n+\t* testsuite/unordered_multimap/insert/24061-multimap.cc: Likewise.\n+\t* testsuite/unordered_multimap/insert/51866.cc: Likewise.\n+\t* testsuite/unordered_multimap/insert/52476.cc: Likewise.\n+\t* testsuite/unordered_multimap/insert/53115.cc: Likewise.\n+\t* testsuite/unordered_multimap/insert/57619.C: Likewise.\n+\t* testsuite/unordered_multimap/insert/hint.cc: Likewise.\n+\t* testsuite/unordered_multimap/insert/multimap_range.cc: Likewise.\n+\t* testsuite/unordered_multimap/insert/multimap_single.cc: Likewise.\n+\t* testsuite/unordered_multimap/insert/multimap_single_move-1.cc:\n+\tLikewise.\n+\t* testsuite/unordered_multimap/insert/multimap_single_move-2.cc:\n+\tLikewise.\n+\t* testsuite/unordered_multimap/modifiers/emplace.cc: Likewise.\n+\t* testsuite/unordered_multimap/modifiers/extract.cc: Likewise.\n+\t* testsuite/unordered_multimap/modifiers/merge.cc: Likewise.\n+\t* testsuite/unordered_multimap/modifiers/reserve.cc: Likewise.\n+\t* testsuite/unordered_multimap/operations/count.cc: Likewise.\n+\t* testsuite/unordered_multimap/operators/1.cc: Likewise.\n+\t* testsuite/unordered_multimap/operators/2.cc: Likewise.\n+\t* testsuite/unordered_multiset/allocator/copy.cc: Likewise.\n+\t* testsuite/unordered_multiset/allocator/copy_assign.cc: Likewise.\n+\t* testsuite/unordered_multiset/allocator/minimal.cc: Likewise.\n+\t* testsuite/unordered_multiset/allocator/move.cc: Likewise.\n+\t* testsuite/unordered_multiset/allocator/move_assign.cc: Likewise.\n+\t* testsuite/unordered_multiset/allocator/swap.cc: Likewise.\n+\t* testsuite/unordered_multiset/cons/copy.cc: Likewise.\n+\t* testsuite/unordered_multiset/cons/moveable.cc: Likewise.\n+\t* testsuite/unordered_multiset/debug/construct5_neg.cc: Likewise.\n+\t* testsuite/unordered_multiset/debug/move_assign_neg.cc: Likewise.\n+\t* testsuite/unordered_multiset/debug/move_neg.cc: Likewise.\n+\t* testsuite/unordered_multiset/erase/1.cc: Likewise.\n+\t* testsuite/unordered_multiset/erase/2.cc: Likewise.\n+\t* testsuite/unordered_multiset/erase/24061-multiset.cc: Likewise.\n+\t* testsuite/unordered_multiset/hash_policy/dr1189.cc: Likewise.\n+\t* testsuite/unordered_multiset/init-list.cc: Likewise.\n+\t* testsuite/unordered_multiset/insert/24061-multiset.cc: Likewise.\n+\t* testsuite/unordered_multiset/insert/51866.cc: Likewise.\n+\t* testsuite/unordered_multiset/insert/52476.cc: Likewise.\n+\t* testsuite/unordered_multiset/insert/53115.cc: Likewise.\n+\t* testsuite/unordered_multiset/insert/hash_policy.cc: Likewise.\n+\t* testsuite/unordered_multiset/insert/multiset_range.cc: Likewise.\n+\t* testsuite/unordered_multiset/insert/multiset_single.cc: Likewise.\n+\t* testsuite/unordered_multiset/insert/multiset_single_move.cc: Likewise.\n+\t* testsuite/unordered_multiset/modifiers/emplace.cc: Likewise.\n+\t* testsuite/unordered_multiset/modifiers/extract.cc: Likewise.\n+\t* testsuite/unordered_multiset/modifiers/merge.cc: Likewise.\n+\t* testsuite/unordered_multiset/modifiers/reserve.cc: Likewise.\n+\t* testsuite/unordered_multiset/operations/count.cc: Likewise.\n+\t* testsuite/unordered_multiset/operators/1.cc: Likewise.\n+\t* testsuite/unordered_set/allocator/copy.cc: Likewise.\n+\t* testsuite/unordered_set/allocator/copy_assign.cc: Likewise.\n+\t* testsuite/unordered_set/allocator/ext_ptr.cc: Likewise.\n+\t* testsuite/unordered_set/allocator/minimal.cc: Likewise.\n+\t* testsuite/unordered_set/allocator/move.cc: Likewise.\n+\t* testsuite/unordered_set/allocator/move_assign.cc: Likewise.\n+\t* testsuite/unordered_set/allocator/swap.cc: Likewise.\n+\t* testsuite/unordered_set/buckets/swap.cc: Likewise.\n+\t* testsuite/unordered_set/cons/moveable.cc: Likewise.\n+\t* testsuite/unordered_set/debug/construct5_neg.cc: Likewise.\n+\t* testsuite/unordered_set/debug/debug_functions.cc: Likewise.\n+\t* testsuite/unordered_set/debug/move_assign_neg.cc: Likewise.\n+\t* testsuite/unordered_set/debug/move_neg.cc: Likewise.\n+\t* testsuite/unordered_set/erase/1.cc: Likewise.\n+\t* testsuite/unordered_set/erase/24061-set.cc: Likewise.\n+\t* testsuite/unordered_set/hash_policy/26132.cc: Likewise.\n+\t* testsuite/unordered_set/hash_policy/71181.cc: Likewise.\n+\t* testsuite/unordered_set/hash_policy/dr1189.cc: Likewise.\n+\t* testsuite/unordered_set/hash_policy/load_factor.cc: Likewise.\n+\t* testsuite/unordered_set/hash_policy/power2_rehash.cc: Likewise.\n+\t* testsuite/unordered_set/hash_policy/prime_rehash.cc: Likewise.\n+\t* testsuite/unordered_set/hash_policy/rehash.cc: Likewise.\n+\t* testsuite/unordered_set/init-list.cc: Likewise.\n+\t* testsuite/unordered_set/insert/24061-set.cc: Likewise.\n+\t* testsuite/unordered_set/insert/hash_policy.cc: Likewise.\n+\t* testsuite/unordered_set/insert/move_range.cc: Likewise.\n+\t* testsuite/unordered_set/insert/set_range.cc: Likewise.\n+\t* testsuite/unordered_set/insert/set_single.cc: Likewise.\n+\t* testsuite/unordered_set/insert/set_single_move.cc: Likewise.\n+\t* testsuite/unordered_set/max_load_factor/robustness.cc: Likewise.\n+\t* testsuite/unordered_set/modifiers/emplace.cc: Likewise.\n+\t* testsuite/unordered_set/modifiers/extract.cc: Likewise.\n+\t* testsuite/unordered_set/modifiers/merge.cc: Likewise.\n+\t* testsuite/unordered_set/modifiers/reserve.cc: Likewise.\n+\t* testsuite/unordered_set/modifiers/swap.cc: Likewise.\n+\t* testsuite/unordered_set/operations/count.cc: Likewise.\n+\t* testsuite/unordered_set/operators/1.cc: Likewise.\n+\t* testsuite/vector/allocator/copy.cc: Likewise.\n+\t* testsuite/vector/allocator/copy_assign.cc: Likewise.\n+\t* testsuite/vector/allocator/ext_ptr.cc: Likewise.\n+\t* testsuite/vector/allocator/minimal.cc: Likewise.\n+\t* testsuite/vector/allocator/move.cc: Likewise.\n+\t* testsuite/vector/allocator/move_assign.cc: Likewise.\n+\t* testsuite/vector/allocator/swap.cc: Likewise.\n+\t* testsuite/vector/bool/6886.cc: Likewise.\n+\t* testsuite/vector/bool/72847.cc: Likewise.\n+\t* testsuite/vector/bool/allocator/copy.cc: Likewise.\n+\t* testsuite/vector/bool/allocator/copy_assign.cc: Likewise.\n+\t* testsuite/vector/bool/allocator/ext_ptr.cc: Likewise.\n+\t* testsuite/vector/bool/allocator/move.cc: Likewise.\n+\t* testsuite/vector/bool/allocator/move_assign.cc: Likewise.\n+\t* testsuite/vector/bool/allocator/swap.cc: Likewise.\n+\t* testsuite/vector/bool/capacity/1.cc: Likewise.\n+\t* testsuite/vector/bool/capacity/29134.cc: Likewise.\n+\t* testsuite/vector/bool/capacity/shrink_to_fit.cc: Likewise.\n+\t* testsuite/vector/bool/cons/1.cc: Likewise.\n+\t* testsuite/vector/bool/cons/2.cc: Likewise.\n+\t* testsuite/vector/bool/modifiers/erase/1.cc: Likewise.\n+\t* testsuite/vector/bool/modifiers/insert/1.cc: Likewise.\n+\t* testsuite/vector/bool/modifiers/insert/31370.cc: Likewise.\n+\t* testsuite/vector/bool/modifiers/swap/1.cc: Likewise.\n+\t* testsuite/vector/bool/modifiers/swap/2.cc: Likewise.\n+\t* testsuite/vector/bool/swap.cc: Likewise.\n+\t* testsuite/vector/capacity/1.cc: Likewise.\n+\t* testsuite/vector/capacity/2.cc: Likewise.\n+\t* testsuite/vector/capacity/29134-2.cc: Likewise.\n+\t* testsuite/vector/capacity/29134.cc: Likewise.\n+\t* testsuite/vector/capacity/44190.cc: Likewise.\n+\t* testsuite/vector/capacity/8230.cc: Likewise.\n+\t* testsuite/vector/capacity/reserve/moveable.cc: Likewise.\n+\t* testsuite/vector/capacity/reserve/moveable2.cc: Likewise.\n+\t* testsuite/vector/capacity/resize/1.cc: Likewise.\n+\t* testsuite/vector/capacity/resize/moveable.cc: Likewise.\n+\t* testsuite/vector/capacity/resize/moveable2.cc: Likewise.\n+\t* testsuite/vector/capacity/resize/resize_size.cc: Likewise.\n+\t* testsuite/vector/capacity/shrink_to_fit.cc: Likewise.\n+\t* testsuite/vector/capacity/shrink_to_fit2.cc: Likewise.\n+\t* testsuite/vector/cons/3.cc: Likewise.\n+\t* testsuite/vector/cons/4.cc: Likewise.\n+\t* testsuite/vector/cons/cons_size.cc: Likewise.\n+\t* testsuite/vector/cons/moveable.cc: Likewise.\n+\t* testsuite/vector/data_access/1.cc: Likewise.\n+\t* testsuite/vector/debug/debug_functions.cc: Likewise.\n+\t* testsuite/vector/debug/move_assign_neg.cc: Likewise.\n+\t* testsuite/vector/debug/move_neg.cc: Likewise.\n+\t* testsuite/vector/debug/multithreaded_swap.cc: Likewise.\n+\t* testsuite/vector/element_access/1.cc: Likewise.\n+\t* testsuite/vector/ext_pointer/citerators.cc: Likewise.\n+\t* testsuite/vector/ext_pointer/data_access.cc: Likewise.\n+\t* testsuite/vector/ext_pointer/modifiers/element.cc: Likewise.\n+\t* testsuite/vector/ext_pointer/modifiers/erase.cc: Likewise.\n+\t* testsuite/vector/ext_pointer/modifiers/insert.cc: Likewise.\n+\t* testsuite/vector/ext_pointer/resize.cc: Likewise.\n+\t* testsuite/vector/modifiers/1.cc: Likewise.\n+\t* testsuite/vector/modifiers/2.cc: Likewise.\n+\t* testsuite/vector/modifiers/emplace/self_emplace.cc: Likewise.\n+\t* testsuite/vector/modifiers/erase/1.cc: Likewise.\n+\t* testsuite/vector/modifiers/erase/moveable.cc: Likewise.\n+\t* testsuite/vector/modifiers/insert/1.cc: Likewise.\n+\t* testsuite/vector/modifiers/insert/self_insert.cc: Likewise.\n+\t* testsuite/vector/modifiers/moveable.cc: Likewise.\n+\t* testsuite/vector/modifiers/moveable2.cc: Likewise.\n+\t* testsuite/vector/modifiers/push_back/49836.cc: Likewise.\n+\t* testsuite/vector/modifiers/swap/1.cc: Likewise.\n+\t* testsuite/vector/modifiers/swap/2.cc: Likewise.\n+\t* testsuite/vector/modifiers/swap/3.cc: Likewise.\n+\t* testsuite/vector/zero_sized_allocations.cc: Likewise.\n+\n 2016-10-17  Jonathan Wakely  <jwakely@redhat.com>\n \n \tPR libstdc++/77998"}, {"sha": "5e2238f2d704c3319dcbaeb3a82c9b1323a801ff", "filename": "libstdc++-v3/testsuite/23_containers/array/capacity/empty.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Fcapacity%2Fempty.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Fcapacity%2Fempty.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Fcapacity%2Fempty.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -24,8 +24,6 @@ void\n test01() \n {\n   {\n-    bool test __attribute__((unused)) = true;\n-\n     const size_t len = 5;\n     typedef std::array<int, len> array_type;\n     array_type a = { { 0, 1, 2, 3, 4 } };\n@@ -34,8 +32,6 @@ test01()\n   }\n \n   {\n-    bool test __attribute__((unused)) = true;\n-\n     const size_t len = 0;\n     typedef std::array<int, len> array_type;\n     array_type a;"}, {"sha": "76f4fb99e3b35045e9445de735b6aa6662b8872f", "filename": "libstdc++-v3/testsuite/23_containers/array/capacity/max_size.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Fcapacity%2Fmax_size.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Fcapacity%2Fmax_size.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Fcapacity%2Fmax_size.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -24,8 +24,6 @@ void\n test01() \n {\n   {\n-    bool test __attribute__((unused)) = true;\n-\n     const size_t len = 5;\n     typedef std::array<int, len> array_type;\n     array_type a = { { 0, 1, 2, 3, 4 } };\n@@ -34,8 +32,6 @@ test01()\n   }\n \n   {\n-    bool test __attribute__((unused)) = true;\n-\n     const size_t len = 0;\n     typedef std::array<int, len> array_type;\n     array_type a;"}, {"sha": "c53e1207ee8e26c4493d0fc68b8f52bbf4d42d43", "filename": "libstdc++-v3/testsuite/23_containers/array/capacity/size.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Fcapacity%2Fsize.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Fcapacity%2Fsize.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Fcapacity%2Fsize.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -24,8 +24,6 @@ void\n test01() \n {\n   {\n-    bool test __attribute__((unused)) = true;\n-\n     const size_t len = 5;\n     typedef std::array<int, len> array_type;\n     array_type a = { { 0, 1, 2, 3, 4 } };\n@@ -34,8 +32,6 @@ test01()\n   }\n \n   {\n-    bool test __attribute__((unused)) = true;\n-\n     const size_t len = 0;\n     typedef std::array<int, len> array_type;\n     array_type a;"}, {"sha": "2337410fe052ed1270be6c0d21d70338d55c850c", "filename": "libstdc++-v3/testsuite/23_containers/array/comparison_operators/equal.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Fcomparison_operators%2Fequal.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Fcomparison_operators%2Fequal.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Fcomparison_operators%2Fequal.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -25,7 +25,6 @@ test01()\n { \n   const size_t len = 5;\n   typedef std::array<int, len> array_type;\n-  bool test __attribute__((unused)) = true;\n   array_type a = { { 0, 1, 2, 3, 4 } };\n   array_type b = { { 0, 1, 2, 3, 4 } };\n   array_type c = { { 0, 1, 2, 3 } };"}, {"sha": "aec584273f472f19c1e52d505f8ba0e64aa59dbc", "filename": "libstdc++-v3/testsuite/23_containers/array/comparison_operators/greater.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Fcomparison_operators%2Fgreater.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Fcomparison_operators%2Fgreater.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Fcomparison_operators%2Fgreater.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -25,7 +25,6 @@ test01()\n { \n   const size_t len = 5;\n   typedef std::array<int, len> array_type;\n-  bool test __attribute__((unused)) = true;\n   array_type a = { { 0, 1, 2, 3, 4 } };\n   array_type b = { { 0, 1, 2, 3, 4 } };\n   array_type c = { { 0, 1, 2, 3, 7 } };"}, {"sha": "d76fab6288a6e3099291e794eba1c4ac8ce7ad0f", "filename": "libstdc++-v3/testsuite/23_containers/array/comparison_operators/greater_or_equal.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Fcomparison_operators%2Fgreater_or_equal.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Fcomparison_operators%2Fgreater_or_equal.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Fcomparison_operators%2Fgreater_or_equal.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -25,7 +25,6 @@ test01()\n { \n   const size_t len = 5;\n   typedef std::array<int, len> array_type;\n-  bool test __attribute__((unused)) = true;\n   array_type a = { { 0, 1, 2, 3, 4 } };\n   array_type b = { { 0, 1, 2, 3, 4 } };\n   array_type c = { { 0, 1, 2, 3, 7 } };"}, {"sha": "06b973bfaf3bdc4a41ecc6a519f30caed1e6c166", "filename": "libstdc++-v3/testsuite/23_containers/array/comparison_operators/less.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Fcomparison_operators%2Fless.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Fcomparison_operators%2Fless.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Fcomparison_operators%2Fless.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -25,7 +25,6 @@ test01()\n { \n   const size_t len = 5;\n   typedef std::array<int, len> array_type;\n-  bool test __attribute__((unused)) = true;\n   array_type a = { { 0, 1, 2, 3, 4 } };\n   array_type b = { { 0, 1, 2, 3, 4 } };\n   array_type c = { { 0, 1, 2, 3, 7 } };"}, {"sha": "7285358f0f48a12e79940d8346c0adb6d2417815", "filename": "libstdc++-v3/testsuite/23_containers/array/comparison_operators/less_or_equal.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Fcomparison_operators%2Fless_or_equal.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Fcomparison_operators%2Fless_or_equal.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Fcomparison_operators%2Fless_or_equal.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -25,7 +25,6 @@ test01()\n { \n   const size_t len = 5;\n   typedef std::array<int, len> array_type;\n-  bool test __attribute__((unused)) = true;\n   array_type a = { { 0, 1, 2, 3, 4 } };\n   array_type b = { { 0, 1, 2, 3, 4 } };\n   array_type c = { { 0, 1, 2, 3, 7 } };"}, {"sha": "b186acc371aa9c1debd4b5870e3c7b27f243162d", "filename": "libstdc++-v3/testsuite/23_containers/array/comparison_operators/not_equal.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Fcomparison_operators%2Fnot_equal.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Fcomparison_operators%2Fnot_equal.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Fcomparison_operators%2Fnot_equal.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -25,7 +25,6 @@ test01()\n { \n   const size_t len = 5;\n   typedef std::array<int, len> array_type;\n-  bool test __attribute__((unused)) = true;\n   array_type a = { { 0, 1, 2, 3, 4 } };\n   array_type b = { { 0, 1, 2, 3, 4 } };\n   array_type c = { { 0, 1, 2, 3 } };"}, {"sha": "77c46fedb0e87df6cb5e9ca04cac807651c7f507", "filename": "libstdc++-v3/testsuite/23_containers/array/element_access/54388.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Felement_access%2F54388.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Felement_access%2F54388.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Felement_access%2F54388.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -29,8 +29,6 @@ struct A\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   const std::array<A, 1> a;\n   const A& aa = a.at(0);\n   VERIFY(aa.valid);"}, {"sha": "c2dac6fe28fa8ffecfb7234a00ada9422e24f067", "filename": "libstdc++-v3/testsuite/23_containers/array/element_access/at_out_of_range.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Felement_access%2Fat_out_of_range.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Felement_access%2Fat_out_of_range.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Felement_access%2Fat_out_of_range.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -24,8 +24,6 @@\n void\n test01() \n {\n-  bool test __attribute__((unused)) = true;\n-\n   const size_t len = 5;\n   typedef std::array<int, len> array_type;\n   array_type a = { { 0, 1, 2, 3, 4 } };"}, {"sha": "d82fd8eb8e33ed122989349542a66090fa51f8c3", "filename": "libstdc++-v3/testsuite/23_containers/array/element_access/back.cc", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Felement_access%2Fback.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Felement_access%2Fback.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Felement_access%2Fback.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -22,9 +22,7 @@\n \n void\n test01() \n-{ \n-  bool test __attribute__((unused)) = true;\n-\n+{\n   const size_t len = 5;\n   typedef std::array<int, len> array_type;\n "}, {"sha": "59ec682d5a4f54f64cdf499039c0a5ee5faa9656", "filename": "libstdc++-v3/testsuite/23_containers/array/element_access/data.cc", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Felement_access%2Fdata.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Felement_access%2Fdata.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Felement_access%2Fdata.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -22,9 +22,7 @@\n \n void\n test01() \n-{ \n-  bool test __attribute__((unused)) = true;\n-\n+{\n   const size_t len = 5;\n   typedef std::array<int, len> array_type;\n "}, {"sha": "d00d01699672a71f72d8df6911775de3c2eeddaa", "filename": "libstdc++-v3/testsuite/23_containers/array/element_access/front.cc", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Felement_access%2Ffront.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Felement_access%2Ffront.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Felement_access%2Ffront.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -22,9 +22,7 @@\n \n void\n test01() \n-{ \n-  bool test __attribute__((unused)) = true;\n-\n+{\n   const size_t len = 5;\n   typedef std::array<int, len> array_type;\n "}, {"sha": "d3eb094fadcf87f76693a616b0192740a59c2b05", "filename": "libstdc++-v3/testsuite/23_containers/array/iterators/end_is_one_past.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Fiterators%2Fend_is_one_past.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Fiterators%2Fend_is_one_past.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Fiterators%2Fend_is_one_past.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -23,8 +23,6 @@\n void\n test01() \n {\n-  bool test __attribute__((unused)) = true;\n-\n   const size_t len = 5;\n   typedef std::array<int, len> array_type;\n   array_type a = { { 0, 1, 2, 3, 4 } };"}, {"sha": "55e875372b1070eb38899900ec4659ed63afd1d5", "filename": "libstdc++-v3/testsuite/23_containers/array/requirements/contiguous.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Frequirements%2Fcontiguous.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Frequirements%2Fcontiguous.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Frequirements%2Fcontiguous.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -23,8 +23,6 @@\n void\n test01() \n {\n-  bool test __attribute__((unused)) = true;\n-\n   const size_t len = 5;\n   typedef std::array<int, len> array_type;\n   array_type a = { { 0, 1, 2, 3, 4 } };"}, {"sha": "ca0c1c784f7f1b30b424694a167fc8d4ccb7cc39", "filename": "libstdc++-v3/testsuite/23_containers/array/requirements/fill.cc", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Frequirements%2Ffill.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Frequirements%2Ffill.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Frequirements%2Ffill.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -24,9 +24,7 @@\n \n // DR 776. Undescribed assign function of std::array.\n void test01()\n-{ \n-  bool test __attribute__((unused)) = true;\n-\n+{\n   const size_t len = 3;\n   typedef std::array<int, len> array_type;\n "}, {"sha": "fd269807e6548ca555d0ed5baf39f21bf9a297a5", "filename": "libstdc++-v3/testsuite/23_containers/array/requirements/member_swap.cc", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Frequirements%2Fmember_swap.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Frequirements%2Fmember_swap.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Frequirements%2Fmember_swap.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -22,9 +22,7 @@\n \n void\n test01() \n-{ \n-  bool test __attribute__((unused)) = true;\n-\n+{\n   const size_t len = 5;\n   typedef std::array<int, len> array_type;\n "}, {"sha": "5cf3ac43ecacbfafb0777a4363e9c1764fa6f7eb", "filename": "libstdc++-v3/testsuite/23_containers/array/requirements/zero_sized_arrays.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Frequirements%2Fzero_sized_arrays.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Frequirements%2Fzero_sized_arrays.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Frequirements%2Fzero_sized_arrays.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -23,8 +23,6 @@\n void\n test01() \n {\n-  bool test __attribute__((unused)) = true;\n-\n   const size_t len = 0;\n   typedef std::array<int, len> array_type;\n "}, {"sha": "cc17239fc7f757a84b101a94f5c5a53a443f694e", "filename": "libstdc++-v3/testsuite/23_containers/array/specialized_algorithms/swap.cc", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Fspecialized_algorithms%2Fswap.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Fspecialized_algorithms%2Fswap.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Fspecialized_algorithms%2Fswap.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -22,9 +22,7 @@\n \n void\n test01() \n-{ \n-  bool test __attribute__((unused)) = true;\n-\n+{\n   const size_t len = 5;\n   typedef std::array<int, len> array_type;\n "}, {"sha": "0bc339119d583c8e90f0ca420f9b3a50bb304d07", "filename": "libstdc++-v3/testsuite/23_containers/array/tuple_interface/tuple_element.cc", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Ftuple_interface%2Ftuple_element.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Ftuple_interface%2Ftuple_element.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Ftuple_interface%2Ftuple_element.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -23,8 +23,7 @@\n \n void\n test01() \n-{ \n-  bool test __attribute__((unused)) = true;\n+{\n   using std::array;\n   using std::tuple_element;\n   // This relies on the fact that <utility> includes <type_traits>:"}, {"sha": "861c41085c5d39580d8899893790bc3869dda66c", "filename": "libstdc++-v3/testsuite/23_containers/array/tuple_interface/tuple_element_cpp14.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Ftuple_interface%2Ftuple_element_cpp14.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Ftuple_interface%2Ftuple_element_cpp14.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Ftuple_interface%2Ftuple_element_cpp14.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -24,7 +24,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n   using namespace std;\n \n   const size_t len = 3;"}, {"sha": "f79febce09d05b19d1a1a297aff92179d16de030", "filename": "libstdc++-v3/testsuite/23_containers/array/tuple_interface/tuple_size.cc", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Ftuple_interface%2Ftuple_size.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Ftuple_interface%2Ftuple_size.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Ftuple_interface%2Ftuple_size.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -23,8 +23,7 @@\n \n void\n test01() \n-{ \n-  bool test __attribute__((unused)) = true;\n+{\n   using std::array;\n   using std::tuple_size;\n   // This relies on the fact that <utility> includes <type_traits>:"}, {"sha": "b987320207092cab3b139f3bbf54aab708f63975", "filename": "libstdc++-v3/testsuite/23_containers/bitset/all/1.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset%2Fall%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset%2Fall%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset%2Fall%2F1.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -25,8 +25,6 @@\n // DR 693. std::bitset::all() missing.\n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::bitset<0> z1;\n   VERIFY( z1.all() );\n   z1.set();"}, {"sha": "2217152994d19bb39ba2386aacc3c8a425a08062", "filename": "libstdc++-v3/testsuite/23_containers/bitset/cons/1.cc", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset%2Fcons%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset%2Fcons%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset%2Fcons%2F1.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -25,10 +25,8 @@\n #include <stdexcept>\n #include <testsuite_hooks.h>\n \n-bool test01(void)\n+void test01(void)\n {\n-  bool test __attribute__((unused)) = true;\n-\n   // bitset()\n   const size_t n1 = 5;\n   std::bitset<n1> bit01;\n@@ -73,7 +71,6 @@ bool test01(void)\n   catch(...) {\n     VERIFY( false );\n   }\n-  return test;\n }\n \n int main()"}, {"sha": "470c139ded81e47d6628073fc983187ffe2df090", "filename": "libstdc++-v3/testsuite/23_containers/bitset/cons/16020.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset%2Fcons%2F16020.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset%2Fcons%2F16020.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset%2Fcons%2F16020.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -22,7 +22,6 @@\n void test01()\n {\n   using __gnu_debug::bitset;\n-  bool test __attribute__((unused)) = true;\n \n   bitset<5> b(7);\n   bitset<5> c;"}, {"sha": "5985053044d2546dd8203813c84ee166b9f969eb", "filename": "libstdc++-v3/testsuite/23_containers/bitset/cons/2.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset%2Fcons%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset%2Fcons%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset%2Fcons%2F2.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -29,8 +29,6 @@ struct X\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   X x;\n   std::string s(x);\n   std::bitset<32> b1(static_cast<const char*>(x));"}, {"sha": "c60763eac813586b15b046546f30632ba9d84167", "filename": "libstdc++-v3/testsuite/23_containers/bitset/cons/3.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset%2Fcons%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset%2Fcons%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset%2Fcons%2F3.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -24,8 +24,6 @@\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   const unsigned long long num0 = 0ULL;\n   std::bitset<0> bs0(num0);\n   VERIFY( bs0.to_ullong() == num0 );"}, {"sha": "ee9118da112506c207cb77f81e764be504612470", "filename": "libstdc++-v3/testsuite/23_containers/bitset/cons/50268.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset%2Fcons%2F50268.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset%2Fcons%2F50268.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset%2Fcons%2F50268.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -23,8 +23,6 @@\n // libstdc++/50268\n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::bitset<1> b1(3ULL);\n   VERIFY( b1.count() == 1ULL );\n "}, {"sha": "15cdd8483eff7392d30bc1a958bf64a789145f5a", "filename": "libstdc++-v3/testsuite/23_containers/bitset/cons/6282.cc", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset%2Fcons%2F6282.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset%2Fcons%2F6282.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset%2Fcons%2F6282.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -26,10 +26,9 @@\n \n // boundary condition:  a zero-sized set\n // libstdc++/6282\n-bool test02(void)\n+void test02(void)\n {\n   using std::char_traits;  using std::allocator;\n-  bool test __attribute__((unused)) = true;\n \n   std::bitset<0>  z1;\n   VERIFY( z1.any() == false );\n@@ -53,7 +52,6 @@ bool test02(void)\n \n   VERIFY( z1.to_ulong() == 0 );\n   VERIFY( (z1.to_string<char,char_traits<char>,allocator<char> >().empty() ));\n-  return test;\n }\n \n int main()"}, {"sha": "3b80d212377b632df9b20a010b48c3e3e0500cd9", "filename": "libstdc++-v3/testsuite/23_containers/bitset/cons/dr1325-2.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset%2Fcons%2Fdr1325-2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset%2Fcons%2Fdr1325-2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset%2Fcons%2Fdr1325-2.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -38,7 +38,6 @@ template<std::size_t Nb, typename CharT>\n // DR 1325.\n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   using namespace std;\n \n   const char s1[4] = { '0', '1', '0', '1' };"}, {"sha": "7d4403951bbc450681df28717f7dab33552183e5", "filename": "libstdc++-v3/testsuite/23_containers/bitset/cons/dr396.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset%2Fcons%2Fdr396.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset%2Fcons%2Fdr396.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset%2Fcons%2Fdr396.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -23,8 +23,6 @@\n // DR 396. what are characters zero and one.\n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::bitset<4> z1(std::string(\"bbab\"), 0, std::string::npos, 'a', 'b');\n   VERIFY( z1.to_string('a', 'b') == \"bbab\" );\n "}, {"sha": "700e339390ad7267759cf93281e28b4dcde930dd", "filename": "libstdc++-v3/testsuite/23_containers/bitset/ext/15361.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset%2Fext%2F15361.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset%2Fext%2F15361.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset%2Fext%2F15361.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -22,7 +22,6 @@\n void test01()\n {\n   using namespace std;\n-  bool test __attribute__((unused)) = true;\n \n   bitset<256> b;\n   b.set(225);"}, {"sha": "28d1a27145383bb8fc1bc4e87ff959b8c0bed48d", "filename": "libstdc++-v3/testsuite/23_containers/bitset/input/1.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset%2Finput%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset%2Finput%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset%2Finput%2F1.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -26,7 +26,6 @@\n void test01()\n {\n   using namespace std;\n-  bool test __attribute__((unused)) = true;\n \n   bitset<5>      b5;\n   bitset<0>      b0;"}, {"sha": "160ce167571494d1f4bc9eedebd9d20265253111", "filename": "libstdc++-v3/testsuite/23_containers/bitset/operations/1.cc", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset%2Foperations%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset%2Foperations%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset%2Foperations%2F1.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -56,8 +56,9 @@ shift_arrays(size_t shift_step, size_t size) {\n \n template <size_t size>\n   bool\n-  do_test() {\n-    bool test __attribute__((unused)) = true;\n+  do_test()\n+  {\n+    bool test = true;\n \n     std::bitset<size> shifted;\n     std::bitset<size> correct;\n@@ -86,18 +87,15 @@ template <size_t size>\n     return test;\n   }\n \n-bool\n+void\n test01() {\n-  bool test __attribute__((unused)) = true;\n-\n   VERIFY( do_test<32>() );\n   VERIFY( do_test<48>() );\n   VERIFY( do_test<64>() );\n \n   VERIFY( do_test<511>() );\n   VERIFY( do_test<513>() );\n   VERIFY( do_test<997>() );\n-  return test;\n }\n \n int"}, {"sha": "b87297cb4b05f265ec5cce22438e91027466cc0c", "filename": "libstdc++-v3/testsuite/23_containers/bitset/operations/13838.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset%2Foperations%2F13838.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset%2Foperations%2F13838.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset%2Foperations%2F13838.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -22,7 +22,6 @@\n void test01()\n {\n   using __gnu_debug::bitset;\n-  bool test __attribute__((unused)) = true;\n \n   bitset<4>  b0, b1;\n   b0.set(1);"}, {"sha": "19978fd9073826376398eb9656f737703712becf", "filename": "libstdc++-v3/testsuite/23_containers/bitset/operations/2.cc", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset%2Foperations%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset%2Foperations%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset%2Foperations%2F2.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -22,15 +22,12 @@\n #include <bitset>\n #include <testsuite_hooks.h>\n \n-bool\n+void\n test02()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::bitset<66>  b;\n   b <<= 400;\n   VERIFY( b.count() == 0 );\n-  return test;\n }\n \n int"}, {"sha": "0637f39ac42c188b01a0d4119d1e3b9f802afea9", "filename": "libstdc++-v3/testsuite/23_containers/bitset/test/1.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset%2Ftest%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset%2Ftest%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset%2Ftest%2F1.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -27,7 +27,6 @@\n void \n test01(void)\n {\n-  bool test __attribute__((unused)) = true;\n   const size_t n1 = 5;\n \n   // the other 22 member functions should be in here too...\n@@ -42,7 +41,6 @@ test01(void)\n   catch(...) {\n     VERIFY( false );\n   }\n-  VERIFY( test );\n }\n \n int main()"}, {"sha": "f2bdbe6511750c097b62c1b64adda174652edafa", "filename": "libstdc++-v3/testsuite/23_containers/bitset/to_string/1.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset%2Fto_string%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset%2Fto_string%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset%2Fto_string%2F1.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -25,7 +25,6 @@\n void test01()\n {\n   using namespace std;\n-  bool test __attribute__((unused)) = true;\n \n   bitset<5> b5;\n   string s0 = b5.to_string<char, char_traits<char>, allocator<char> >();"}, {"sha": "fed5564d91262c06ff11a6ec3c1415e82badcd60", "filename": "libstdc++-v3/testsuite/23_containers/bitset/to_string/dr396.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset%2Fto_string%2Fdr396.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset%2Fto_string%2Fdr396.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset%2Fto_string%2Fdr396.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -26,7 +26,6 @@\n void test01()\n {\n   using namespace std;\n-  bool test __attribute__((unused)) = true;\n \n   bitset<5> b5;\n   string s0 = b5.to_string<char, char_traits<char>, allocator<char> >('a', 'b');"}, {"sha": "51b22cf24f831cbb1c449ff296bca74528c847a9", "filename": "libstdc++-v3/testsuite/23_containers/bitset/to_ullong/1.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset%2Fto_ullong%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset%2Fto_ullong%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset%2Fto_ullong%2F1.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -24,8 +24,6 @@\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::bitset<0> bs0;\n   VERIFY( bs0.to_ullong() == 0 );\n "}, {"sha": "7f81299e259acf14edb580cdf29ad07dff410fd1", "filename": "libstdc++-v3/testsuite/23_containers/bitset/to_ulong/1.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset%2Fto_ulong%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset%2Fto_ulong%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset%2Fto_ulong%2F1.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -26,7 +26,6 @@\n \n void test03()\n {\n-  bool test __attribute__((unused)) = true;\n   std::bitset<5>      b;\n   std::stringstream   ss(\"101\");\n   ss.exceptions(std::ios_base::eofbit);"}, {"sha": "69a1edac6111b6cf125e32d99b161e8dd976ce70", "filename": "libstdc++-v3/testsuite/23_containers/deque/allocator/copy.cc", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fallocator%2Fcopy.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fallocator%2Fcopy.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fallocator%2Fcopy.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -27,7 +27,6 @@ using __gnu_test::propagating_allocator;\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef propagating_allocator<T, false> alloc_type;\n   typedef std::deque<T, alloc_type> test_type;\n   test_type v1(1, alloc_type(1));\n@@ -38,7 +37,6 @@ void test01()\n \n void test02()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef propagating_allocator<T, true> alloc_type;\n   typedef std::deque<T, alloc_type> test_type;\n   test_type v1(1, alloc_type(1));\n@@ -49,7 +47,6 @@ void test02()\n \n void test03()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef propagating_allocator<T, true> alloc_type;\n   typedef std::deque<T, alloc_type> test_type;\n   test_type v1(1, alloc_type(1));"}, {"sha": "09387b19e6754f34176895a6e9daf53bb3c21216", "filename": "libstdc++-v3/testsuite/23_containers/deque/allocator/copy_assign.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fallocator%2Fcopy_assign.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fallocator%2Fcopy_assign.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fallocator%2Fcopy_assign.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -27,7 +27,6 @@ using __gnu_test::propagating_allocator;\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef propagating_allocator<T, false> alloc_type;\n   typedef std::deque<T, alloc_type> test_type;\n   test_type v1(1, alloc_type(1));\n@@ -39,7 +38,6 @@ void test01()\n \n void test02()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef propagating_allocator<T, true> alloc_type;\n   typedef std::deque<T, alloc_type> test_type;\n   test_type v1(1, alloc_type(1));"}, {"sha": "e1d13fa239d96d2dc86d3d0e09fe4373167d8142", "filename": "libstdc++-v3/testsuite/23_containers/deque/allocator/ext_ptr.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fallocator%2Fext_ptr.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fallocator%2Fext_ptr.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fallocator%2Fext_ptr.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -30,7 +30,6 @@ template class std::deque<T, CustomPointerAlloc<T>>;\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef CustomPointerAlloc<T> alloc_type;\n   typedef std::deque<T, alloc_type> test_type;\n   test_type v(1);"}, {"sha": "9f0ccf4c577a8a8864562d9a4c541aa11c057417", "filename": "libstdc++-v3/testsuite/23_containers/deque/allocator/minimal.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fallocator%2Fminimal.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fallocator%2Fminimal.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fallocator%2Fminimal.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -30,7 +30,6 @@ template class std::deque<T, SimpleAllocator<T>>;\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef SimpleAllocator<T> alloc_type;\n   typedef std::allocator_traits<alloc_type> traits_type;\n   typedef std::deque<T, alloc_type> test_type;"}, {"sha": "d525d68f36723b2112f392ac015eaf888e3a4ad8", "filename": "libstdc++-v3/testsuite/23_containers/deque/allocator/move.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fallocator%2Fmove.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fallocator%2Fmove.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fallocator%2Fmove.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -27,7 +27,6 @@ using __gnu_test::uneq_allocator;\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef uneq_allocator<T> alloc_type;\n   typedef std::deque<T, alloc_type> test_type;\n   test_type v1(1, alloc_type(1));\n@@ -45,7 +44,6 @@ void test01()\n \n void test02()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef uneq_allocator<T> alloc_type;\n   typedef std::deque<T, alloc_type> test_type;\n   test_type v1(1, alloc_type(1));"}, {"sha": "e667b0df69d692af668751cb35e7949f3aad2ef0", "filename": "libstdc++-v3/testsuite/23_containers/deque/allocator/move_assign.cc", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fallocator%2Fmove_assign.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fallocator%2Fmove_assign.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fallocator%2Fmove_assign.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -27,7 +27,6 @@ using __gnu_test::propagating_allocator;\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef propagating_allocator<T, false> alloc_type;\n   typedef std::deque<T, alloc_type> test_type;\n   test_type v1(1, alloc_type(1));\n@@ -39,7 +38,6 @@ void test01()\n \n void test02()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef propagating_allocator<T, true> alloc_type;\n   typedef std::deque<T, alloc_type> test_type;\n   test_type v1(1, alloc_type(1));\n@@ -53,7 +51,6 @@ void test02()\n \n void test03()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef propagating_allocator<T, false> alloc_type;\n   typedef std::deque<T, alloc_type> test_type;\n   test_type v1(1, alloc_type(1));"}, {"sha": "2f0a1a0df4dcfdd46892c7bf0f018d0ba9bf58c4", "filename": "libstdc++-v3/testsuite/23_containers/deque/allocator/swap.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fallocator%2Fswap.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fallocator%2Fswap.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fallocator%2Fswap.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -45,7 +45,6 @@ operator!=(const propagating_allocator<T, false>&,\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef propagating_allocator<T, false> alloc_type;\n   typedef std::deque<T, alloc_type> test_type;\n   test_type v1(1, alloc_type(1));\n@@ -59,7 +58,6 @@ void test01()\n \n void test02()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef propagating_allocator<T, true> alloc_type;\n   typedef std::deque<T, alloc_type> test_type;\n   test_type v1(1, alloc_type(1));"}, {"sha": "c59895707f9aad15114c86e7c3942eeab5e1558c", "filename": "libstdc++-v3/testsuite/23_containers/deque/capacity/29134-2.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fcapacity%2F29134-2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fcapacity%2F29134-2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fcapacity%2F29134-2.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -24,7 +24,6 @@\n // libstdc++/29134\n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   using namespace std;\n \n   deque<int> d;"}, {"sha": "1e7a1c896f85af1e81aeb3cf1753d0872dbb9db6", "filename": "libstdc++-v3/testsuite/23_containers/deque/capacity/29134.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fcapacity%2F29134.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fcapacity%2F29134.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fcapacity%2F29134.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -23,8 +23,6 @@\n // libstdc++/29134\n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::deque<int> d;\n \n   VERIFY( d.max_size() == d.get_allocator().max_size() );"}, {"sha": "320fa4fe9b93a1987c237e19c17e0cdb9d2c0a87", "filename": "libstdc++-v3/testsuite/23_containers/deque/capacity/moveable.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fcapacity%2Fmoveable.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fcapacity%2Fmoveable.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fcapacity%2Fmoveable.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -26,8 +26,6 @@ using namespace __gnu_test;\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::deque<copycounter> a;\n   copycounter::copycount = 0;\n   a.resize(10);"}, {"sha": "d1273da3a9df4aa080cca43cc25f14e06dc04ae9", "filename": "libstdc++-v3/testsuite/23_containers/deque/capacity/resize_size.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fcapacity%2Fresize_size.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fcapacity%2Fresize_size.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fcapacity%2Fresize_size.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -25,8 +25,6 @@\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::deque<__gnu_test::NonCopyConstructible> d;\n   VERIFY( std::distance(d.begin(), d.end()) == 0 );\n "}, {"sha": "0f0703e4f2dc31de8e5d2081c0a97ed321ebe05f", "filename": "libstdc++-v3/testsuite/23_containers/deque/capacity/shrink_to_fit.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fcapacity%2Fshrink_to_fit.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fcapacity%2Fshrink_to_fit.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fcapacity%2Fshrink_to_fit.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -25,8 +25,6 @@\n // libstdc++/42573\n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::vector<int> d(100);\n   d.push_back(1);\n   d.push_back(1);"}, {"sha": "73110ed7363f51c323755e7890736ce567f1b9fe", "filename": "libstdc++-v3/testsuite/23_containers/deque/cons/1.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fcons%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fcons%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fcons%2F1.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -27,8 +27,6 @@\n \n typedef std::deque<__gnu_test::object_counter>   gdeque;\n \n-bool test __attribute__((unused)) = true;\n-\n // see http://gcc.gnu.org/ml/libstdc++/2001-11/msg00139.html\n void\n test01()"}, {"sha": "5eacacec00232b0da405627ca13ba491660e3318", "filename": "libstdc++-v3/testsuite/23_containers/deque/cons/2.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fcons%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fcons%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fcons%2F2.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -35,8 +35,6 @@ using __gnu_test::destructor;\n \n typedef std::deque<object_counter>   gdeque;\n \n-bool test __attribute__((unused)) = true;\n-\n // 23.2.1     required types\n //\n // A missing required type will cause a compile failure."}, {"sha": "215af713b6fb1c02a2d583828f03e14b88b2c92d", "filename": "libstdc++-v3/testsuite/23_containers/deque/cons/assign/1.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fcons%2Fassign%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fcons%2Fassign%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fcons%2Fassign%2F1.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -25,7 +25,6 @@\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   using namespace std;\n \n   int data3[1000];"}, {"sha": "680c076d66340fdc347d4663ad1113232fbe90c7", "filename": "libstdc++-v3/testsuite/23_containers/deque/cons/cons_size.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fcons%2Fcons_size.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fcons%2Fcons_size.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fcons%2Fcons_size.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -25,8 +25,6 @@\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::deque<__gnu_test::NonCopyConstructible> d(1000);\n   VERIFY( std::distance(d.begin(), d.end()) == 1000 );\n   for(auto it = d.begin(); it != d.end(); ++it)"}, {"sha": "551a3d9f35e604853798e0190dd8b418f7f203f8", "filename": "libstdc++-v3/testsuite/23_containers/deque/cons/moveable.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fcons%2Fmoveable.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fcons%2Fmoveable.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fcons%2Fmoveable.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -28,8 +28,6 @@\n \n int main()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::deque<int> a,b;\n   a.push_back(1);\n   b = std::move(a);"}, {"sha": "20a64f092bc969757f7bf1f65aa18ff1c64c4441", "filename": "libstdc++-v3/testsuite/23_containers/deque/modifiers/erase/1.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fmodifiers%2Ferase%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fmodifiers%2Ferase%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fmodifiers%2Ferase%2F1.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -38,8 +38,6 @@ const unsigned N5 = sizeof(A5) / sizeof(int);\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   typedef std::deque<int>                deque_type;\n   typedef deque_type::iterator        iterator_type;\n \n@@ -78,8 +76,6 @@ test01()\n void\n test02()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   typedef std::deque<std::deque<int> >   deque_type;\n   typedef deque_type::iterator        iterator_type;\n "}, {"sha": "a2e4dbfa0d418c9e549af8e7163a0725fbae472a", "filename": "libstdc++-v3/testsuite/23_containers/deque/modifiers/erase/2.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fmodifiers%2Ferase%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fmodifiers%2Ferase%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fmodifiers%2Ferase%2F2.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -58,8 +58,6 @@ template<typename T>\n   void\n   test01()\n   {\n-    bool test __attribute__((unused)) = true;\n-    \n     typedef std::deque<T>                         deque_type;\n     typedef typename deque_type::iterator      iterator_type;\n "}, {"sha": "07aaee732d71d6b3e604a13c6e39815c66d329be", "filename": "libstdc++-v3/testsuite/23_containers/deque/modifiers/erase/3.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fmodifiers%2Ferase%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fmodifiers%2Ferase%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fmodifiers%2Ferase%2F3.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -22,7 +22,6 @@\n \n void erase(size_t num_elm, size_t elm_strt, size_t elm_end)\n {\n-  bool test __attribute__((unused)) = true;\n   using __gnu_test::copy_tracker;\n   using __gnu_test::assignment_operator;\n "}, {"sha": "695b4e30a5d8b737c6d2b66872f19db9ae6630c8", "filename": "libstdc++-v3/testsuite/23_containers/deque/modifiers/erase/moveable.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fmodifiers%2Ferase%2Fmoveable.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fmodifiers%2Ferase%2Fmoveable.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fmodifiers%2Ferase%2Fmoveable.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -27,7 +27,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n   using namespace __gnu_test;\n \n   std::deque<copycounter> a(40);"}, {"sha": "dd706aa0bbcc716a3e7de78b9afeab022b75268f", "filename": "libstdc++-v3/testsuite/23_containers/deque/modifiers/moveable.cc", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fmodifiers%2Fmoveable.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fmodifiers%2Fmoveable.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fmodifiers%2Fmoveable.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -28,8 +28,6 @@ using namespace __gnu_test;\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::deque<copycounter> a;\n   copycounter c(1);\n   copycounter::copycount = 0;\n@@ -42,8 +40,6 @@ test01()\n void\n test02()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::deque<copycounter> a;\n   copycounter c(1);\n   copycounter::copycount = 0;\n@@ -56,8 +52,6 @@ test02()\n void\n test03()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::deque<copycounter> a(1000);\n   copycounter c(1);\n   copycounter::copycount = 0;\n@@ -73,8 +67,6 @@ test03()\n void\n test04()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   copycounter c(1);\n   std::deque<copycounter> a(10, c);\n   copycounter::copycount = 0;\n@@ -100,8 +92,6 @@ test04()\n void\n test05()\n {\n-  bool test __attribute__((unused)) = true;\n-  \n   copycounter c(1);\n   std::deque<copycounter> a(10, c);\n   copycounter::copycount = 0;"}, {"sha": "74bbdbf96b1994780533ab97c7266d9a59b5ad00", "filename": "libstdc++-v3/testsuite/23_containers/deque/modifiers/push_back/49836.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fmodifiers%2Fpush_back%2F49836.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fmodifiers%2Fpush_back%2F49836.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fmodifiers%2Fpush_back%2F49836.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -24,7 +24,6 @@\n // libstdc++/49836\n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   using __gnu_test::CopyConsOnlyType;\n   using __gnu_test::MoveConsOnlyType;\n "}, {"sha": "8139ce47b5e979be6f3344eb4d5dbc766e05eb5e", "filename": "libstdc++-v3/testsuite/23_containers/deque/modifiers/push_front/49836.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fmodifiers%2Fpush_front%2F49836.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fmodifiers%2Fpush_front%2F49836.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fmodifiers%2Fpush_front%2F49836.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -24,7 +24,6 @@\n // libstdc++/49836\n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   using __gnu_test::CopyConsOnlyType;\n   using __gnu_test::MoveConsOnlyType;\n "}, {"sha": "a873914b5bf61eb0db59490193ab980733eaa2ef", "filename": "libstdc++-v3/testsuite/23_containers/deque/modifiers/swap/1.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fmodifiers%2Fswap%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fmodifiers%2Fswap%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fmodifiers%2Fswap%2F1.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -33,7 +33,6 @@ namespace std\n // Should use deque specialization for swap.\n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   std::deque<T> A;\n   std::deque<T> B;\n   swap_calls = 0;\n@@ -44,7 +43,6 @@ void test01()\n // Should use deque specialization for swap.\n void test02()\n {\n-  bool test __attribute__((unused)) = true;\n   using namespace std;\n   deque<T> A;\n   deque<T> B;"}, {"sha": "f7c2a9e6798b2e3e3f843fe3f970aecd1c7baad9", "filename": "libstdc++-v3/testsuite/23_containers/deque/modifiers/swap/2.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fmodifiers%2Fswap%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fmodifiers%2Fswap%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fmodifiers%2Fswap%2F2.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -27,7 +27,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n   using namespace std;\n \n   typedef __gnu_test::uneq_allocator<char> my_alloc;"}, {"sha": "e07fc4c2f2e54c92265fd6ba298fa45bf0152311", "filename": "libstdc++-v3/testsuite/23_containers/deque/modifiers/swap/3.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fmodifiers%2Fswap%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fmodifiers%2Fswap%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fmodifiers%2Fswap%2F3.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -27,7 +27,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n   using namespace std;\n \n   typedef __gnu_test::uneq_allocator<char> my_alloc;"}, {"sha": "b55325207e0360e860bba78cf49be4f6e775cd58", "filename": "libstdc++-v3/testsuite/23_containers/deque/operators/1.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Foperators%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Foperators%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Foperators%2F1.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -25,8 +25,6 @@\n // libstdc++/6503\n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::deque<int> d(2);       \n   typedef std::deque<int>::iterator iter;         \n   typedef std::deque<int>::const_iterator constiter;"}, {"sha": "45653a6280258916974bc02cb14de90ea9d32c57", "filename": "libstdc++-v3/testsuite/23_containers/deque/operators/2.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Foperators%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Foperators%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Foperators%2F2.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -25,8 +25,6 @@\n // libstdc++/7186\n void test02()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::deque<int> d(2);       \n   typedef std::deque<int>::iterator iter;         \n   typedef std::deque<int>::const_iterator constiter;"}, {"sha": "83e8abe1689182d55003ada8fa00101d1972bb06", "filename": "libstdc++-v3/testsuite/23_containers/forward_list/allocator/copy.cc", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fallocator%2Fcopy.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fallocator%2Fcopy.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fallocator%2Fcopy.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -27,7 +27,6 @@ using __gnu_test::propagating_allocator;\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef propagating_allocator<T, false> alloc_type;\n   typedef std::forward_list<T, alloc_type> test_type;\n   test_type v1(alloc_type(1));\n@@ -39,7 +38,6 @@ void test01()\n \n void test02()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef propagating_allocator<T, true> alloc_type;\n   typedef std::forward_list<T, alloc_type> test_type;\n   test_type v1(alloc_type(1));\n@@ -51,7 +49,6 @@ void test02()\n \n void test03()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef propagating_allocator<T, true> alloc_type;\n   typedef std::forward_list<T, alloc_type> test_type;\n   test_type v1(alloc_type(1));"}, {"sha": "30250f9d215798107fa3f07ca1784a0af93d151d", "filename": "libstdc++-v3/testsuite/23_containers/forward_list/allocator/copy_assign.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fallocator%2Fcopy_assign.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fallocator%2Fcopy_assign.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fallocator%2Fcopy_assign.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -27,7 +27,6 @@ using __gnu_test::propagating_allocator;\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef propagating_allocator<T, false> alloc_type;\n   typedef std::forward_list<T, alloc_type> test_type;\n   test_type v1(alloc_type(1));\n@@ -41,7 +40,6 @@ void test01()\n \n void test02()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef propagating_allocator<T, true> alloc_type;\n   typedef std::forward_list<T, alloc_type> test_type;\n   test_type v1(alloc_type(1));"}, {"sha": "ddda769b92cd1ac2d8a361520a901f8f45397d29", "filename": "libstdc++-v3/testsuite/23_containers/forward_list/allocator/ext_ptr.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fallocator%2Fext_ptr.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fallocator%2Fext_ptr.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fallocator%2Fext_ptr.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -32,7 +32,6 @@ template class std::forward_list<T, CustomPointerAlloc<T>>;\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef CustomPointerAlloc<T> alloc_type;\n   typedef std::forward_list<T, alloc_type> test_type;\n   test_type v;"}, {"sha": "e280fe875f7db7a7a884dace5054c94dd401676e", "filename": "libstdc++-v3/testsuite/23_containers/forward_list/allocator/minimal.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fallocator%2Fminimal.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fallocator%2Fminimal.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fallocator%2Fminimal.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -32,7 +32,6 @@ template class std::forward_list<T, SimpleAllocator<T>>;\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef SimpleAllocator<T> alloc_type;\n   typedef std::allocator_traits<alloc_type> traits_type;\n   typedef std::forward_list<T, alloc_type> test_type;"}, {"sha": "39ec8ae23fdbdb4b896ab89269fb937be39665b8", "filename": "libstdc++-v3/testsuite/23_containers/forward_list/allocator/move.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fallocator%2Fmove.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fallocator%2Fmove.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fallocator%2Fmove.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -27,7 +27,6 @@ using __gnu_test::uneq_allocator;\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef uneq_allocator<T> alloc_type;\n   typedef std::forward_list<T, alloc_type> test_type;\n   test_type v1(alloc_type(1));\n@@ -41,7 +40,6 @@ void test01()\n \n void test02()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef uneq_allocator<T> alloc_type;\n   typedef std::forward_list<T, alloc_type> test_type;\n   test_type v1(alloc_type(1));"}, {"sha": "098c7023b4ee138fa2a048cb180be1040950b990", "filename": "libstdc++-v3/testsuite/23_containers/forward_list/allocator/move_assign.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fallocator%2Fmove_assign.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fallocator%2Fmove_assign.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fallocator%2Fmove_assign.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -27,7 +27,6 @@ using __gnu_test::propagating_allocator;\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef propagating_allocator<T, false> alloc_type;\n   typedef std::forward_list<T, alloc_type> test_type;\n   test_type v1(alloc_type(1));\n@@ -41,7 +40,6 @@ void test01()\n \n void test02()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef propagating_allocator<T, true> alloc_type;\n   typedef std::forward_list<T, alloc_type> test_type;\n   test_type v1(alloc_type(1));"}, {"sha": "499433e51b9eeddeab3640360cfa3dd0df54299f", "filename": "libstdc++-v3/testsuite/23_containers/forward_list/allocator/swap.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fallocator%2Fswap.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fallocator%2Fswap.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fallocator%2Fswap.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -44,7 +44,6 @@ operator!=(const propagating_allocator<T, false>&,\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef propagating_allocator<T, false> alloc_type;\n   typedef std::forward_list<T, alloc_type> test_type;\n   test_type v1(alloc_type(1));\n@@ -60,7 +59,6 @@ void test01()\n \n void test02()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef propagating_allocator<T, true> alloc_type;\n   typedef std::forward_list<T, alloc_type> test_type;\n   test_type v1(alloc_type(1));"}, {"sha": "f5edcdc3747bf683195041821d06b7f09f5ab7fb", "filename": "libstdc++-v3/testsuite/23_containers/forward_list/capacity/1.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fcapacity%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fcapacity%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fcapacity%2F1.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -25,8 +25,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::forward_list<double> fld;\n   VERIFY(fld.empty() == true);\n "}, {"sha": "6e3d9bc03bf136fb945d7c7f76b3a2c71f82ea1d", "filename": "libstdc++-v3/testsuite/23_containers/forward_list/capacity/resize_size.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fcapacity%2Fresize_size.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fcapacity%2Fresize_size.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fcapacity%2Fresize_size.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -25,8 +25,6 @@\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::forward_list<__gnu_test::NonCopyConstructible> fl;\n   VERIFY( std::distance(fl.begin(), fl.end()) == 0 );\n "}, {"sha": "1c4b3bc1ac09ec236324be5aabc26dcf82455774", "filename": "libstdc++-v3/testsuite/23_containers/forward_list/comparable.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fcomparable.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fcomparable.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fcomparable.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -25,8 +25,6 @@\n #include <forward_list>\n #include <testsuite_hooks.h>\n \n-bool test __attribute__((unused)) = true;\n-\n int main()\n {\n   std::forward_list<double> a = {0.0, 1.0, 2.0, 3.0, 4.0};"}, {"sha": "415e3f80bc76d1c3f95d8faf3b271c569428c588", "filename": "libstdc++-v3/testsuite/23_containers/forward_list/cons/1.cc", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fcons%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fcons%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fcons%2F1.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -20,9 +20,6 @@\n // 23.2.3.n forward_list xxx [lib.forward_list.xxx]\n \n #include <forward_list>\n-#include <testsuite_hooks.h>\n-\n-bool test __attribute__((unused)) = true;\n \n // This test verifies the following:\n //   Default construction"}, {"sha": "657bdfb4497a6fa5accd2dabeb9a3d45ce38a3d7", "filename": "libstdc++-v3/testsuite/23_containers/forward_list/cons/2.cc", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fcons%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fcons%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fcons%2F2.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -20,9 +20,6 @@\n // 23.2.3.n forward_list xxx [lib.forward_list.xxx]\n \n #include <forward_list>\n-#include <testsuite_hooks.h>\n-\n-bool test __attribute__((unused)) = true;\n \n // This test verifies the following:\n //   Construction from iterator range"}, {"sha": "a9df8b85c0616386d080d3ec2e17b29156d3879c", "filename": "libstdc++-v3/testsuite/23_containers/forward_list/cons/3.cc", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fcons%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fcons%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fcons%2F3.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -20,9 +20,6 @@\n // 23.2.3.n forward_list xxx [lib.forward_list.xxx]\n \n #include <forward_list>\n-#include <testsuite_hooks.h>\n-\n-bool test __attribute__((unused)) = true;\n \n // This test verifies the following:\n //   Move construction with allocator"}, {"sha": "25287fe2fcb1ff70bbff6eaded3ac2f443ce95b4", "filename": "libstdc++-v3/testsuite/23_containers/forward_list/cons/4.cc", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fcons%2F4.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fcons%2F4.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fcons%2F4.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -20,9 +20,6 @@\n // 23.2.3.n forward_list xxx [lib.forward_list.xxx]\n \n #include <forward_list>\n-#include <testsuite_hooks.h>\n-\n-bool test __attribute__((unused)) = true;\n \n // This test verifies the following:\n //   Construction from given number of default item"}, {"sha": "8f2f1a9805161892694c7d2361027decdfad6dcf", "filename": "libstdc++-v3/testsuite/23_containers/forward_list/cons/5.cc", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fcons%2F5.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fcons%2F5.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fcons%2F5.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -20,9 +20,6 @@\n // 23.2.3.n forward_list xxx [lib.forward_list.xxx]\n \n #include <forward_list>\n-#include <testsuite_hooks.h>\n-\n-bool test __attribute__((unused)) = true;\n \n // This test verifies the following:\n //   Construction from given number of given item"}, {"sha": "73562997f08a8474b32aab1257a881483f7008ad", "filename": "libstdc++-v3/testsuite/23_containers/forward_list/cons/6.cc", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fcons%2F6.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fcons%2F6.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fcons%2F6.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -20,9 +20,6 @@\n // 23.2.3.n forward_list xxx [lib.forward_list.xxx]\n \n #include <forward_list>\n-#include <testsuite_hooks.h>\n-\n-bool test __attribute__((unused)) = true;\n \n // This test verifies the following:\n //   Construction from iterator range"}, {"sha": "ba891e6e6e2aafa8c5631ad9f54f30dbb5df3d22", "filename": "libstdc++-v3/testsuite/23_containers/forward_list/cons/7.cc", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fcons%2F7.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fcons%2F7.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fcons%2F7.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -20,9 +20,6 @@\n // 23.2.3.n forward_list xxx [lib.forward_list.xxx]\n \n #include <forward_list>\n-#include <testsuite_hooks.h>\n-\n-bool test __attribute__((unused)) = true;\n \n // This test verifies the following:\n //   Copy construction"}, {"sha": "aa1049d4b771b0177aa051f1dbb3fb515f9e2e50", "filename": "libstdc++-v3/testsuite/23_containers/forward_list/cons/8.cc", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fcons%2F8.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fcons%2F8.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fcons%2F8.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -20,9 +20,6 @@\n // 23.2.3.n forward_list xxx [lib.forward_list.xxx]\n \n #include <forward_list>\n-#include <testsuite_hooks.h>\n-\n-bool test __attribute__((unused)) = true;\n \n // This test verifies the following:\n //   Move construction"}, {"sha": "e76c8e29ca00832c290174dfa804dde4517050ad", "filename": "libstdc++-v3/testsuite/23_containers/forward_list/cons/9.cc", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fcons%2F9.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fcons%2F9.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fcons%2F9.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -20,9 +20,6 @@\n // 23.2.3.n forward_list xxx [lib.forward_list.xxx]\n \n #include <forward_list>\n-#include <testsuite_hooks.h>\n-\n-bool test __attribute__((unused)) = true;\n \n // This test verifies the following.\n //   Construction from initializer list"}, {"sha": "b20aced65cc7e36fcfd3a651779d74767197d0a0", "filename": "libstdc++-v3/testsuite/23_containers/forward_list/cons/cons_size.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fcons%2Fcons_size.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fcons%2Fcons_size.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fcons%2Fcons_size.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -25,8 +25,6 @@\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::forward_list<__gnu_test::NonCopyConstructible> fl(1000);\n   VERIFY( std::distance(fl.begin(), fl.end()) == 1000 );\n   for(auto it = fl.begin(); it != fl.end(); ++it)"}, {"sha": "e28e84929e63aee6d849c55e371e10c2b9fb0429", "filename": "libstdc++-v3/testsuite/23_containers/forward_list/cons/moveable.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fcons%2Fmoveable.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fcons%2Fmoveable.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fcons%2Fmoveable.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -26,8 +26,6 @@\n #include <utility>\n #include <testsuite_hooks.h>\n \n-bool test __attribute__((unused)) = true;\n-\n int main()\n {\n   std::forward_list<int> a, b;"}, {"sha": "fde79205b32c5479106a799dc176a86de8a85758", "filename": "libstdc++-v3/testsuite/23_containers/forward_list/debug/clear.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fdebug%2Fclear.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fdebug%2Fclear.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fdebug%2Fclear.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -24,7 +24,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n   std::forward_list<int> fl{1, 2, 3};\n \n   auto before = fl.before_begin();"}, {"sha": "9f7098eae01e277dfc488044f0b9114fff0d3eb6", "filename": "libstdc++-v3/testsuite/23_containers/forward_list/debug/construct4_neg.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fdebug%2Fconstruct4_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fdebug%2Fconstruct4_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fdebug%2Fconstruct4_neg.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -23,8 +23,6 @@\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   typedef __gnu_test::uneq_allocator<int> alloc_type;\n   typedef __gnu_debug::forward_list<int, alloc_type> test_type;\n   test_type v1(alloc_type(1));"}, {"sha": "51a52ca992bba6961c4538ecb483c5aec7b923a8", "filename": "libstdc++-v3/testsuite/23_containers/forward_list/debug/erase_after1_neg.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fdebug%2Ferase_after1_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fdebug%2Ferase_after1_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fdebug%2Ferase_after1_neg.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -24,8 +24,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::forward_list<int> fl1{1, 2, 3};\n \n   auto it = fl1.begin();"}, {"sha": "09b52df6dcc05a6f02d57df745535efcaa3b7c58", "filename": "libstdc++-v3/testsuite/23_containers/forward_list/debug/move_assign_neg.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fdebug%2Fmove_assign_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fdebug%2Fmove_assign_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fdebug%2Fmove_assign_neg.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -22,8 +22,6 @@\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   typedef __gnu_test::propagating_allocator<int, false> alloc_type;\n   typedef __gnu_debug::forward_list<int, alloc_type> test_type;\n "}, {"sha": "b36c7527f983d554b02863fac055dbf43dec9287", "filename": "libstdc++-v3/testsuite/23_containers/forward_list/debug/move_constructor.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fdebug%2Fmove_constructor.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fdebug%2Fmove_constructor.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fdebug%2Fmove_constructor.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -24,7 +24,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n   std::forward_list<int> fl1{1, 3, 5};\n \n   auto flit = fl1.before_begin();"}, {"sha": "1795a52cfb7b753db9212249b1ffea361dd4f3e5", "filename": "libstdc++-v3/testsuite/23_containers/forward_list/debug/move_neg.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fdebug%2Fmove_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fdebug%2Fmove_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fdebug%2Fmove_neg.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -26,8 +26,6 @@ using __gnu_test::uneq_allocator;\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   typedef uneq_allocator<int> alloc_type;\n   typedef __gnu_debug::forward_list<int, alloc_type> test_type;\n "}, {"sha": "20430a9319cd295d5db44bf9931480f271b80aa9", "filename": "libstdc++-v3/testsuite/23_containers/forward_list/debug/splice_after.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fdebug%2Fsplice_after.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fdebug%2Fsplice_after.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fdebug%2Fsplice_after.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -24,7 +24,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n   std::forward_list<int> fl1{1, 2, 3};\n   std::forward_list<int> fl2{4, 5, 6};\n "}, {"sha": "91698a6c2ebf37beb8277bbff292db77bb544794", "filename": "libstdc++-v3/testsuite/23_containers/forward_list/debug/swap.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fdebug%2Fswap.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fdebug%2Fswap.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fdebug%2Fswap.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -26,7 +26,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n   std::forward_list<int> fl1{1, 3, 5};\n   std::forward_list<int> fl2{2, 4, 6};\n "}, {"sha": "c0a6c4c9f30ec68af8eda318af2a59c29c65ca6c", "filename": "libstdc++-v3/testsuite/23_containers/forward_list/modifiers/1.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fmodifiers%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fmodifiers%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fmodifiers%2F1.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -24,8 +24,6 @@\n \n #include <array>\n \n-bool test __attribute__((unused)) = true;\n-\n class PathPoint\n {\n public:"}, {"sha": "a729b8d8ecbd4975d1fb6ab2e2085de947f50a83", "filename": "libstdc++-v3/testsuite/23_containers/forward_list/modifiers/2.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fmodifiers%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fmodifiers%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fmodifiers%2F2.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -24,8 +24,6 @@\n \n #include <string>\n \n-bool test __attribute__((unused)) = true;\n-\n // This test verifies the following:\n //   insert_after single item\n //   before_begin iterator"}, {"sha": "1998c54a4a49827e86570a0b7d6ebc05f0971034", "filename": "libstdc++-v3/testsuite/23_containers/forward_list/modifiers/3.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fmodifiers%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fmodifiers%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fmodifiers%2F3.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -29,8 +29,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::forward_list<int> fl({0, 1, 2, 3, 4, 5, 6, 7, 8, 9});\n \n   std::forward_list<int>::const_iterator pos = fl.cbegin();\n@@ -52,8 +50,6 @@ test01()\n void\n test02()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::forward_list<int> fl({0, 1, 2, 3, 4, 5, 6, 7, 8, 9});\n \n   std::forward_list<int>::const_iterator pos = fl.cbegin();"}, {"sha": "0459173894ece12832fc80498b2a9a22e5e09efb", "filename": "libstdc++-v3/testsuite/23_containers/forward_list/modifiers/4.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fmodifiers%2F4.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fmodifiers%2F4.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fmodifiers%2F4.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -22,8 +22,6 @@\n #include <forward_list>\n #include <testsuite_hooks.h>\n \n-bool test __attribute__((unused)) = true;\n-\n // This test verifies the following:\n //   swap\n void"}, {"sha": "015583bbe6c72a4c0cd72bc0db6e23f8623feaae", "filename": "libstdc++-v3/testsuite/23_containers/forward_list/modifiers/5.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fmodifiers%2F5.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fmodifiers%2F5.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fmodifiers%2F5.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -22,8 +22,6 @@\n #include <forward_list>\n #include <testsuite_hooks.h>\n \n-bool test __attribute__((unused)) = true;\n-\n // This test verifies the following:\n //   clear\n void"}, {"sha": "5628522a9c0fd1ef4f5517295a7c259f778357c2", "filename": "libstdc++-v3/testsuite/23_containers/forward_list/modifiers/6.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fmodifiers%2F6.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fmodifiers%2F6.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fmodifiers%2F6.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -23,8 +23,6 @@\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::forward_list<int> fl1(1, 5), fl2(1, 4), fl3(1, 3),\n                          fl4(1, 2), fl5(1, 1), fl6(1, 0);\n "}, {"sha": "6e08f87bb3f9c0f39a92fb8c2efd929a07eac55b", "filename": "libstdc++-v3/testsuite/23_containers/forward_list/operations/1.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Foperations%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Foperations%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Foperations%2F1.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -22,8 +22,6 @@\n #include <forward_list>\n #include <testsuite_hooks.h>\n \n-bool test __attribute__((unused)) = true;\n-\n // This test verifies the following:\n //   \n void"}, {"sha": "6d4459c690d833d8b4741684f9c5779a4753039b", "filename": "libstdc++-v3/testsuite/23_containers/forward_list/operations/2.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Foperations%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Foperations%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Foperations%2F2.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -22,8 +22,6 @@\n #include <forward_list>\n #include <testsuite_hooks.h>\n \n-bool test __attribute__((unused)) = true;\n-\n // This test verifies the following:\n //   remove\n void"}, {"sha": "f5d62aa514bfda00b46176968006eb230c3c9696", "filename": "libstdc++-v3/testsuite/23_containers/forward_list/operations/3.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Foperations%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Foperations%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Foperations%2F3.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -24,8 +24,6 @@\n \n #include <algorithm>\n \n-bool test __attribute__((unused)) = true;\n-\n // This test verifies the following:\n //   remove_if\n void"}, {"sha": "19a04419b96ddd7099586907bee42c34ea7a8552", "filename": "libstdc++-v3/testsuite/23_containers/forward_list/operations/4.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Foperations%2F4.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Foperations%2F4.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Foperations%2F4.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -22,8 +22,6 @@\n #include <forward_list>\n #include <testsuite_hooks.h>\n \n-bool test __attribute__((unused)) = true;\n-\n // This test verifies the following:\n //   unique\n void"}, {"sha": "1e456d43d995a2d8f63fd5af2ae95e2995fe1cdd", "filename": "libstdc++-v3/testsuite/23_containers/forward_list/operations/5.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Foperations%2F5.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Foperations%2F5.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Foperations%2F5.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -22,8 +22,6 @@\n #include <forward_list>\n #include <testsuite_hooks.h>\n \n-bool test __attribute__((unused)) = true;\n-\n // This test verifies the following:\n //   \n void"}, {"sha": "0f75ba2377d4fa68cd8398c2effec035c361a4d6", "filename": "libstdc++-v3/testsuite/23_containers/forward_list/operations/6.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Foperations%2F6.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Foperations%2F6.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Foperations%2F6.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -22,8 +22,6 @@\n #include <forward_list>\n #include <testsuite_hooks.h>\n \n-bool test __attribute__((unused)) = true;\n-\n //  Comparison functor.\n template<typename Num>\n   class Comp"}, {"sha": "07b73825a42de183e6836b5956c7341c0caad18c", "filename": "libstdc++-v3/testsuite/23_containers/forward_list/operations/7.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Foperations%2F7.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Foperations%2F7.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Foperations%2F7.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -24,8 +24,6 @@\n \n #include <algorithm>\n \n-bool test __attribute__((unused)) = true;\n-\n // This test verifies the following:\n //   \n void"}, {"sha": "1fa70b5469311e77de44b42354ac28e9b94974f2", "filename": "libstdc++-v3/testsuite/23_containers/forward_list/operations/remove_freed.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Foperations%2Fremove_freed.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Foperations%2Fremove_freed.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Foperations%2Fremove_freed.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -27,8 +27,6 @@\n // Used to cause many Valgrind errors: LWG 526-type situation.\n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::forward_list<int> fl1;\n   \n   fl1.push_front(1);"}, {"sha": "8551ef5256ca418b908be001576e238ccf600801", "filename": "libstdc++-v3/testsuite/23_containers/list/61347.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2F61347.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2F61347.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2F61347.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -41,8 +41,6 @@ void testc(const std::list<short>& l)\n \n int main()\n {\n-  bool test __attribute__((unused)) = true;\n-\n #if _GLIBCXX_USE_DUAL_ABI\n   std::list<short> l;\n   testm(l);"}, {"sha": "1e29786554051440c7e2f5b62e10b01ad6862e29", "filename": "libstdc++-v3/testsuite/23_containers/list/allocator/copy.cc", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fallocator%2Fcopy.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fallocator%2Fcopy.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fallocator%2Fcopy.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -27,7 +27,6 @@ using __gnu_test::propagating_allocator;\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef propagating_allocator<T, false> alloc_type;\n   typedef std::list<T, alloc_type> test_type;\n   test_type v1(alloc_type(1));\n@@ -39,7 +38,6 @@ void test01()\n \n void test02()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef propagating_allocator<T, true> alloc_type;\n   typedef std::list<T, alloc_type> test_type;\n   test_type v1(alloc_type(1));\n@@ -51,7 +49,6 @@ void test02()\n \n void test03()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef propagating_allocator<T, true> alloc_type;\n   typedef std::list<T, alloc_type> test_type;\n   test_type v1(alloc_type(1));"}, {"sha": "3b4fb8f4374414d5e45841f31ab1b93073ed4c80", "filename": "libstdc++-v3/testsuite/23_containers/list/allocator/copy_assign.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fallocator%2Fcopy_assign.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fallocator%2Fcopy_assign.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fallocator%2Fcopy_assign.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -27,7 +27,6 @@ using __gnu_test::propagating_allocator;\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef propagating_allocator<T, false> alloc_type;\n   typedef std::list<T, alloc_type> test_type;\n   test_type v1(alloc_type(1));\n@@ -41,7 +40,6 @@ void test01()\n \n void test02()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef propagating_allocator<T, true> alloc_type;\n   typedef std::list<T, alloc_type> test_type;\n   test_type v1(alloc_type(1));"}, {"sha": "79fc01b986b81f550b1e35c8e187a1d3e02cf2f7", "filename": "libstdc++-v3/testsuite/23_containers/list/allocator/minimal.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fallocator%2Fminimal.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fallocator%2Fminimal.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fallocator%2Fminimal.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -32,7 +32,6 @@ template class std::list<T, SimpleAllocator<T>>;\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef SimpleAllocator<T> alloc_type;\n   typedef std::allocator_traits<alloc_type> traits_type;\n   typedef std::list<T, alloc_type> test_type;"}, {"sha": "98c988f3015769e84506564abb324937d3fa7474", "filename": "libstdc++-v3/testsuite/23_containers/list/allocator/move.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fallocator%2Fmove.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fallocator%2Fmove.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fallocator%2Fmove.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -27,7 +27,6 @@ using __gnu_test::uneq_allocator;\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef uneq_allocator<T> alloc_type;\n   typedef std::list<T, alloc_type> test_type;\n   test_type v1(alloc_type(1));\n@@ -41,7 +40,6 @@ void test01()\n \n void test02()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef uneq_allocator<T> alloc_type;\n   typedef std::list<T, alloc_type> test_type;\n   test_type v1(alloc_type(1));"}, {"sha": "5cf0deb445ae1716c82f8a0c9be0c8bb0732a2bc", "filename": "libstdc++-v3/testsuite/23_containers/list/allocator/move_assign.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fallocator%2Fmove_assign.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fallocator%2Fmove_assign.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fallocator%2Fmove_assign.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -27,7 +27,6 @@ using __gnu_test::propagating_allocator;\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef propagating_allocator<T, false> alloc_type;\n   typedef std::list<T, alloc_type> test_type;\n   test_type v1(alloc_type(1));\n@@ -41,7 +40,6 @@ void test01()\n \n void test02()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef propagating_allocator<T, true> alloc_type;\n   typedef std::list<T, alloc_type> test_type;\n   test_type v1(alloc_type(1));"}, {"sha": "718731f9359c915bb6fe30e7bccf24dfe8b2a0b0", "filename": "libstdc++-v3/testsuite/23_containers/list/allocator/swap.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fallocator%2Fswap.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fallocator%2Fswap.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fallocator%2Fswap.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -44,7 +44,6 @@ operator!=(const propagating_allocator<T, false>&,\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef propagating_allocator<T, false> alloc_type;\n   typedef std::list<T, alloc_type> test_type;\n   test_type v1(alloc_type(1));\n@@ -60,7 +59,6 @@ void test01()\n \n void test02()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef propagating_allocator<T, true> alloc_type;\n   typedef std::list<T, alloc_type> test_type;\n   test_type v1(alloc_type(1));"}, {"sha": "9d5756324e24874faa432a98456ed3b082f06aa7", "filename": "libstdc++-v3/testsuite/23_containers/list/capacity/1.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcapacity%2F1.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcapacity%2F1.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcapacity%2F1.h?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -33,7 +33,6 @@ template<typename _Tp>\n void\n capacity01()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef _Tp list_type;\n   typedef typename list_type::iterator iterator_type;\n "}, {"sha": "8abbeb492358f92cf7c40cd4303cd8ce7081b7eb", "filename": "libstdc++-v3/testsuite/23_containers/list/capacity/29134.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcapacity%2F29134.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcapacity%2F29134.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcapacity%2F29134.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -23,8 +23,6 @@\n // libstdc++/29134\n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   typedef std::list<int> list_type;\n   list_type l;\n "}, {"sha": "063668675e4a19946443297543d679addfdab635", "filename": "libstdc++-v3/testsuite/23_containers/list/capacity/resize_size.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcapacity%2Fresize_size.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcapacity%2Fresize_size.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcapacity%2Fresize_size.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -25,8 +25,6 @@\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::list<__gnu_test::NonCopyConstructible> l;\n   VERIFY( std::distance(l.begin(), l.end()) == 0 );\n "}, {"sha": "95b86309cdb0b1df5fac2fd88366eb8a8d33b11c", "filename": "libstdc++-v3/testsuite/23_containers/list/cons/1.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcons%2F1.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcons%2F1.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcons%2F1.h?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -40,7 +40,6 @@ template<typename _Tp>\n void\n cons01()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef _Tp list_type;\n \n   list_type list0101;"}, {"sha": "091385bc0d80564e6b3bbfd13a91f8ff397714ab", "filename": "libstdc++-v3/testsuite/23_containers/list/cons/2.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcons%2F2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcons%2F2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcons%2F2.h?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -38,7 +38,6 @@ template<typename _Tp>\n void\n cons021()\n {\n-  bool test __attribute__((unused)) = true;\n   const std::size_t LIST_SIZE = 5;\n   const int INIT_VALUE = 7;\n   std::size_t count;"}, {"sha": "40457dd42866a2e08ee55d6d0c12cdaa17d6bdc6", "filename": "libstdc++-v3/testsuite/23_containers/list/cons/3.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcons%2F3.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcons%2F3.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcons%2F3.h?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -32,7 +32,6 @@ template<typename _Tp>\n void\n cons03()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef _Tp list_type;\n   typedef typename list_type::iterator iterator;\n "}, {"sha": "db1cac5efebdc5c96724963e320d54a509cd2054", "filename": "libstdc++-v3/testsuite/23_containers/list/cons/4.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcons%2F4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcons%2F4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcons%2F4.h?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -32,7 +32,6 @@ template<typename _Tp>\n void\n cons04()\n {\n-  bool test __attribute__((unused)) = true;\n   const int A[] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17};\n   const std::size_t N = sizeof(A) / sizeof(int);\n   std::size_t count;"}, {"sha": "a88baa528e06bd37a999aecf5f65e9abfdce9138", "filename": "libstdc++-v3/testsuite/23_containers/list/cons/5.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcons%2F5.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcons%2F5.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcons%2F5.h?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -31,7 +31,6 @@ template<typename _Tp>\n void\n cons05()\n {\n-  bool test __attribute__((unused)) = true;\n   const int A[] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17};\n   const std::size_t N = sizeof(A) / sizeof(int);\n   int count;"}, {"sha": "fef2deadfcb918805c4eb7e1d4bd7e6dc6a3d381", "filename": "libstdc++-v3/testsuite/23_containers/list/cons/6.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcons%2F6.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcons%2F6.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcons%2F6.h?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -31,7 +31,6 @@ template<typename _Tp>\n void\n cons06()\n {\n-  bool test __attribute__((unused)) = true;\n   const int A[] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17};\n   const int B[] = {101, 102, 103, 104, 105};\n   const std::size_t N = sizeof(A) / sizeof(int);"}, {"sha": "b51345312b136cbaeef6d32b82c34be22e12f843", "filename": "libstdc++-v3/testsuite/23_containers/list/cons/7.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcons%2F7.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcons%2F7.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcons%2F7.h?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -31,7 +31,6 @@ template<typename _Tp>\n void\n cons07()\n {\n-  bool test __attribute__((unused)) = true;\n   const std::size_t BIG_LIST_SIZE = 11;\n   const int BIG_INIT_VALUE = 7;\n   const std::size_t SMALL_LIST_SIZE = 5;"}, {"sha": "aefd0f617101d1260a1528d3594e64e3a0ff12bb", "filename": "libstdc++-v3/testsuite/23_containers/list/cons/8.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcons%2F8.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcons%2F8.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcons%2F8.h?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -34,7 +34,6 @@ cons08()\n {\n   typedef _Tp list_type;\n   typedef typename list_type::iterator iterator;\n-  bool test __attribute__((unused)) = true;\n   const std::size_t LIST_SIZE = 5;\n   const int INIT_VALUE = 7;\n   std::size_t count = 0;"}, {"sha": "a707e75f941fabe43b259dcd60ca6ee70b3f6e1b", "filename": "libstdc++-v3/testsuite/23_containers/list/cons/9.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcons%2F9.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcons%2F9.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcons%2F9.h?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -32,7 +32,6 @@ template<typename _Tp>\n void\n cons09()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef _Tp list_type;\n   typedef typename list_type::iterator iterator;\n "}, {"sha": "32eff630c519865c04bf079403238c9bd170acd8", "filename": "libstdc++-v3/testsuite/23_containers/list/cons/cons_size.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcons%2Fcons_size.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcons%2Fcons_size.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcons%2Fcons_size.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -25,8 +25,6 @@\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::list<__gnu_test::NonCopyConstructible> l(1000);\n   VERIFY( std::distance(l.begin(), l.end()) == 1000 );\n   for(auto it = l.begin(); it != l.end(); ++it)"}, {"sha": "19448e976d66d32817b6fbd5bf1b5958d9e3c6de", "filename": "libstdc++-v3/testsuite/23_containers/list/cons/moveable.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcons%2Fmoveable.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcons%2Fmoveable.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcons%2Fmoveable.h?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -26,8 +26,6 @@ template<typename _Tp>\n   void\n   test_moveable()\n   {\n-    bool test __attribute__((unused)) = true;\n-\n     typedef _Tp list_type;\n     \n     list_type a,b;"}, {"sha": "932b1a36f43d72da4782075121a76df5ecbbb884", "filename": "libstdc++-v3/testsuite/23_containers/list/debug/invalidation/1.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fdebug%2Finvalidation%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fdebug%2Finvalidation%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fdebug%2Finvalidation%2F1.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -26,8 +26,6 @@ void test01()\n {\n   using std::advance;\n \n-  bool test __attribute__((unused)) = true;\n-\n   typedef __gnu_debug::list<int> list_type;\n   list_type v1;\n   list_type v2;"}, {"sha": "92dd30a1d852d7ece76753c9ec030b3709d9c829", "filename": "libstdc++-v3/testsuite/23_containers/list/debug/invalidation/2.cc", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fdebug%2Finvalidation%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fdebug%2Finvalidation%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fdebug%2Finvalidation%2F2.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -25,9 +25,7 @@\n void test02()\n {\n   using std::advance;\n-  \n-  bool test __attribute__((unused)) = true;\n- \n+\n   typedef __gnu_debug::list<int> list_type;\n \n   list_type v(10, 17);"}, {"sha": "161e6e23831eb0e8483a74d8ac992cfd075dd888", "filename": "libstdc++-v3/testsuite/23_containers/list/debug/invalidation/3.cc", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fdebug%2Finvalidation%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fdebug%2Finvalidation%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fdebug%2Finvalidation%2F3.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -25,8 +25,7 @@\n void test03()\n {\n   using std::advance;\n-  \n-  bool test __attribute__((unused)) = true;\n+\n   typedef __gnu_debug::list<int> list_type;\n \n   list_type v(20, 42);"}, {"sha": "b86221dcfd645bde346e6ad32b3e9af4dbbf2cb8", "filename": "libstdc++-v3/testsuite/23_containers/list/debug/invalidation/4.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fdebug%2Finvalidation%2F4.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fdebug%2Finvalidation%2F4.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fdebug%2Finvalidation%2F4.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -25,8 +25,6 @@\n void test04()\n {\n   using std::advance;\n-  \n-  bool test __attribute__((unused)) = true;\n \n   typedef __gnu_debug::list<int>  list_type;\n "}, {"sha": "4f0b73a23af23959dacf1fd2dbce42a356812bf0", "filename": "libstdc++-v3/testsuite/23_containers/list/modifiers/1.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fmodifiers%2F1.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fmodifiers%2F1.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fmodifiers%2F1.h?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -26,7 +26,6 @@ template<typename _Tp>\n void\n modifiers1()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef _Tp list_type;\n   typedef typename list_type::iterator iterator;\n   typedef typename list_type::value_type value_type;"}, {"sha": "85e9b524aab17ad955dc7b5dfe525b658e0a3d54", "filename": "libstdc++-v3/testsuite/23_containers/list/modifiers/2.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fmodifiers%2F2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fmodifiers%2F2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fmodifiers%2F2.h?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -24,7 +24,6 @@ template<typename _Tp>\n void\n modifiers2()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef _Tp list_type;\n   typedef typename list_type::value_type value_type;\n   typedef typename list_type::iterator iterator;"}, {"sha": "a1d62a6dcd32a436e42c90c71aa970c41101f608", "filename": "libstdc++-v3/testsuite/23_containers/list/modifiers/3.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fmodifiers%2F3.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fmodifiers%2F3.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fmodifiers%2F3.h?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -44,7 +44,6 @@ template<typename _Tp>\n void\n modifiers3()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef _Tp list_type;\n   typedef typename list_type::iterator iterator;\n   typedef typename list_type::value_type value_type;"}, {"sha": "809cd86aaf41966b069ae4f2ccfb66281d8445cd", "filename": "libstdc++-v3/testsuite/23_containers/list/modifiers/insert/25288.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fmodifiers%2Finsert%2F25288.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fmodifiers%2Finsert%2F25288.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fmodifiers%2Finsert%2F25288.h?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -24,8 +24,6 @@\n template<typename _Tp>\n void insert1()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   typedef _Tp list_type;\n   typedef typename _Tp::value_type value_type;\n   typedef typename _Tp::allocator_type allocator_type;"}, {"sha": "1a85c1c18b74b73b5c6332e45afb94533f0f439b", "filename": "libstdc++-v3/testsuite/23_containers/list/modifiers/swap/1.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fmodifiers%2Fswap%2F1.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fmodifiers%2Fswap%2F1.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fmodifiers%2Fswap%2F1.h?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -27,7 +27,6 @@ template<typename _Tp>\n void \n swap11()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef _Tp list_type;\n \n   list_type A;\n@@ -43,7 +42,6 @@ void\n swap12()\n {\n   using namespace std;\n-  bool test __attribute__((unused)) = true;\n   typedef _Tp list_type;\n \n   list_type A;"}, {"sha": "5845271ab1f6451850ad9ad142c91e748214700b", "filename": "libstdc++-v3/testsuite/23_containers/list/modifiers/swap/2.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fmodifiers%2Fswap%2F2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fmodifiers%2Fswap%2F2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fmodifiers%2Fswap%2F2.h?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -27,7 +27,6 @@ template<typename _Tp>\n void\n swap2()\n {\n-  bool test __attribute__((unused)) = true;\n   using namespace std;\n \n   typedef _Tp list_type;"}, {"sha": "a7841f9dba4a9a53d6f9c4e9e6097d32dd8c5c13", "filename": "libstdc++-v3/testsuite/23_containers/list/modifiers/swap/3.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fmodifiers%2Fswap%2F3.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fmodifiers%2Fswap%2F3.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fmodifiers%2Fswap%2F3.h?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -27,7 +27,6 @@ template<typename _Tp>\n void\n swap3()\n {\n-  bool test __attribute__((unused)) = true;\n   using namespace std;\n \n   typedef _Tp list_type;"}, {"sha": "d9d557abfe1acd341a1676f2152b058d852596fd", "filename": "libstdc++-v3/testsuite/23_containers/list/operations/1.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Foperations%2F1.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Foperations%2F1.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Foperations%2F1.h?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -24,7 +24,6 @@ template<typename _Tp>\n void\n operations01()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef _Tp list_type;\n   typedef typename list_type::iterator iterator;\n "}, {"sha": "9d4dd6a91d86d8cab79902681bef19dcaa2f4e35", "filename": "libstdc++-v3/testsuite/23_containers/list/operations/2.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Foperations%2F2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Foperations%2F2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Foperations%2F2.h?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -24,7 +24,6 @@ template<typename _Tp>\n void\n operations02()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef _Tp list_type;\n   typedef typename list_type::iterator iterator;\n "}, {"sha": "4bcced53f801d6ce589c1e0c4e6ee1ae5a771ff8", "filename": "libstdc++-v3/testsuite/23_containers/list/operations/3.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Foperations%2F3.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Foperations%2F3.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Foperations%2F3.h?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -24,7 +24,6 @@ template<typename _Tp>\n void\n operations03()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef _Tp list_type;\n   typedef typename list_type::iterator iterator;\n "}, {"sha": "208c8e2f1eac88858f9f0ca5fc3f67489ada6e4f", "filename": "libstdc++-v3/testsuite/23_containers/list/operations/4.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Foperations%2F4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Foperations%2F4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Foperations%2F4.h?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -49,7 +49,6 @@ template<typename _Tp>\n void\n operations04()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef _Tp list_type;\n \n   const int A[] = {1, 2, 3, 4, 5, 6};"}, {"sha": "9d7acd4e0aadd0578421390082d9108e888d516d", "filename": "libstdc++-v3/testsuite/23_containers/list/operations/42352.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Foperations%2F42352.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Foperations%2F42352.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Foperations%2F42352.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -23,8 +23,6 @@\n // PR libstdc++/42352\n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::list<int> l{3, 2, 4, 1, 5, 9, 0, 8, 6, 7};\n \n   l.sort();\n@@ -38,8 +36,6 @@ void test01()\n \n void test02()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::list<int> l{3, 2, 4, 1, 5, 9, 0, 8, 6, 7};\n \n   struct compare"}, {"sha": "ad174cbd5ece393dd3ac190d7f17b284708b0271", "filename": "libstdc++-v3/testsuite/23_containers/map/allocator/copy.cc", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fallocator%2Fcopy.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fallocator%2Fcopy.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fallocator%2Fcopy.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -33,7 +33,6 @@ using __gnu_test::propagating_allocator;\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef propagating_allocator<std::pair<const T, U>, false> alloc_type;\n   typedef std::map<T, U, Cmp, alloc_type> test_type;\n   test_type v1(alloc_type(1));\n@@ -45,7 +44,6 @@ void test01()\n \n void test02()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef propagating_allocator<std::pair<const T, U>, true> alloc_type;\n   typedef std::map<T, U, Cmp, alloc_type> test_type;\n   test_type v1(alloc_type(1));\n@@ -57,7 +55,6 @@ void test02()\n \n void test03()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef propagating_allocator<std::pair<const T, U>, true> alloc_type;\n   typedef std::map<T, U, Cmp, alloc_type> test_type;\n   test_type v1(alloc_type(1));"}, {"sha": "46fc93d848682b9a2541fa78a12ca0daba1b8382", "filename": "libstdc++-v3/testsuite/23_containers/map/allocator/copy_assign.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fallocator%2Fcopy_assign.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fallocator%2Fcopy_assign.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fallocator%2Fcopy_assign.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -33,7 +33,6 @@ using __gnu_test::propagating_allocator;\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef propagating_allocator<std::pair<const T, U>, false> alloc_type;\n   typedef std::map<T, U, Cmp, alloc_type> test_type;\n   test_type v1(alloc_type(1));\n@@ -47,7 +46,6 @@ void test01()\n \n void test02()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef propagating_allocator<std::pair<const T, U>, true> alloc_type;\n   typedef std::map<T, U, Cmp, alloc_type> test_type;\n   test_type v1(alloc_type(1));\n@@ -61,8 +59,6 @@ void test02()\n \n void test03()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   using namespace __gnu_test;\n \n   typedef tracker_allocator<std::pair<const int, int>> alloc_type;"}, {"sha": "22a0b19034b10a43d0c85cab41942a7f9303321e", "filename": "libstdc++-v3/testsuite/23_containers/map/allocator/init-list.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fallocator%2Finit-list.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fallocator%2Finit-list.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fallocator%2Finit-list.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -24,8 +24,6 @@\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   using namespace __gnu_test;\n \n   typedef tracker_allocator<std::pair<const int, int>> alloc_type;"}, {"sha": "fb866588440bf7714f96098350ff088f9c44f764", "filename": "libstdc++-v3/testsuite/23_containers/map/allocator/minimal.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fallocator%2Fminimal.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fallocator%2Fminimal.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fallocator%2Fminimal.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -36,7 +36,6 @@ template class std::map<T, U, Cmp, SimpleAllocator<std::pair<const T, U>>>;\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef SimpleAllocator<std::pair<const T, U>> alloc_type;\n   typedef std::allocator_traits<alloc_type> traits_type;\n   typedef std::map<T, U, Cmp, alloc_type> test_type;"}, {"sha": "296d7d4969bd1753124a79d3ed54aa99776fd75f", "filename": "libstdc++-v3/testsuite/23_containers/map/allocator/move.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fallocator%2Fmove.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fallocator%2Fmove.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fallocator%2Fmove.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -33,7 +33,6 @@ using __gnu_test::uneq_allocator;\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef uneq_allocator<std::pair<const T, U>> alloc_type;\n   typedef std::map<T, U, Cmp, alloc_type> test_type;\n   test_type v1(alloc_type(1));\n@@ -49,7 +48,6 @@ void test01()\n \n void test02()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef uneq_allocator<std::pair<const T, U>> alloc_type;\n   typedef std::map<T, U, Cmp, alloc_type> test_type;\n   test_type v1(alloc_type(1));"}, {"sha": "da7bfda41ca34e85d084d01dc37257b4d110d6d5", "filename": "libstdc++-v3/testsuite/23_containers/map/allocator/move_assign.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fallocator%2Fmove_assign.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fallocator%2Fmove_assign.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fallocator%2Fmove_assign.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -33,7 +33,6 @@ using __gnu_test::propagating_allocator;\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef propagating_allocator<std::pair<const T, U>, false> alloc_type;\n   typedef std::map<T, U, Cmp, alloc_type> test_type;\n   test_type v1(alloc_type(1));\n@@ -49,7 +48,6 @@ void test01()\n \n void test02()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef propagating_allocator<std::pair<const T, U>, true> alloc_type;\n   typedef std::map<T, U, Cmp, alloc_type> test_type;\n   test_type v1(alloc_type(1));\n@@ -67,8 +65,6 @@ void test02()\n \n void test03()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   using namespace __gnu_test;\n \n   typedef propagating_allocator<std::pair<const int, int>, false,"}, {"sha": "ce136b8e9728bb1f92a28b5e33d125c65307b34a", "filename": "libstdc++-v3/testsuite/23_containers/map/allocator/swap.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fallocator%2Fswap.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fallocator%2Fswap.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fallocator%2Fswap.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -50,7 +50,6 @@ operator!=(const propagating_allocator<std::pair<const T, U>, false>&,\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef propagating_allocator<std::pair<const T, U>, false> alloc_type;\n   typedef std::map<T, U, Cmp, alloc_type> test_type;\n   test_type v1(alloc_type(1));\n@@ -66,7 +65,6 @@ void test01()\n \n void test02()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef propagating_allocator<std::pair<const T, U>, true> alloc_type;\n   typedef std::map<T, U, Cmp, alloc_type> test_type;\n   test_type v1(alloc_type(1));"}, {"sha": "0d7a82be91b2f9794e2c5605b159f171f570fa2f", "filename": "libstdc++-v3/testsuite/23_containers/map/capacity/29134.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fcapacity%2F29134.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fcapacity%2F29134.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fcapacity%2F29134.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -23,8 +23,6 @@\n // libstdc++/29134\n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::map<int, int> m;\n \n   VERIFY( (m.max_size() == std::allocator<std::_Rb_tree_node<"}, {"sha": "7918fedcb0ccbc56d94e297ddb86320928815e28", "filename": "libstdc++-v3/testsuite/23_containers/map/cons/moveable.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fcons%2Fmoveable.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fcons%2Fmoveable.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fcons%2Fmoveable.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -28,8 +28,6 @@\n \n int main()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::map<int, int> a,b;\n   a[2]=0;\n   b[1]=0;"}, {"sha": "9be8c0281f27ddabe714944d7283054ab09975da", "filename": "libstdc++-v3/testsuite/23_containers/map/debug/construct5_neg.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fdebug%2Fconstruct5_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fdebug%2Fconstruct5_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fdebug%2Fconstruct5_neg.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -23,8 +23,6 @@\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   typedef __gnu_test::uneq_allocator<std::pair<const int, int> > alloc_type;\n   typedef __gnu_debug::map<int, int, std::less<int>, alloc_type> test_type;\n "}, {"sha": "bb79b477a73367fec6bec3d9ef7d47f8c8dec38e", "filename": "libstdc++-v3/testsuite/23_containers/map/debug/move_assign_neg.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fdebug%2Fmove_assign_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fdebug%2Fmove_assign_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fdebug%2Fmove_assign_neg.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -22,8 +22,6 @@\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   typedef __gnu_test::propagating_allocator<std::pair<const int, int>,\n \t\t\t\t\t    false> alloc_type;\n   typedef __gnu_debug::map<int, int, std::less<int>, alloc_type> test_type;"}, {"sha": "f909af5f3e702f72cf3a71f526ed338c9685d429", "filename": "libstdc++-v3/testsuite/23_containers/map/debug/move_neg.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fdebug%2Fmove_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fdebug%2Fmove_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fdebug%2Fmove_neg.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -26,8 +26,6 @@ using __gnu_test::uneq_allocator;\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   typedef uneq_allocator<std::pair<const int, int> > alloc_type;\n   typedef __gnu_debug::map<int, int, std::less<int>, alloc_type> test_type;\n "}, {"sha": "6a1ec5017876fe2e2ed3d08ba3fbaa5fc9748ae4", "filename": "libstdc++-v3/testsuite/23_containers/map/element_access/1.cc", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Felement_access%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Felement_access%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Felement_access%2F1.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -23,8 +23,7 @@\n \n // libstdc++/23578\n void test01() \n-{ \n-  bool test __attribute__((unused)) = true;\n+{\n   typedef std::map<int, double> map_type;\n \n   {"}, {"sha": "5762cfe75f21d12f1474dcdb46a2402d119e007a", "filename": "libstdc++-v3/testsuite/23_containers/map/element_access/2.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Felement_access%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Felement_access%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Felement_access%2F2.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -26,7 +26,6 @@\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   using __gnu_test::rvalstruct;\n \n   typedef std::map<rvalstruct, rvalstruct> Map;"}, {"sha": "b2a944fc9fc627897bdaa28b95d91da6c68a342d", "filename": "libstdc++-v3/testsuite/23_containers/map/element_access/39901.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Felement_access%2F39901.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Felement_access%2F39901.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Felement_access%2F39901.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -23,8 +23,6 @@\n // c++/39901\n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::map<std::pair<int, int>, int> the_map;\n \n   the_map[{0, 1}] = 5;"}, {"sha": "2cc93f3deb85a88dfaccb051a75d31cb9575c80b", "filename": "libstdc++-v3/testsuite/23_containers/map/init-list.cc", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Finit-list.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Finit-list.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Finit-list.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -23,10 +23,8 @@\n \n using namespace std;\n \n-int test01()\n+void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   map<int,double> m({ { 1, 1.0 }, { 2, 2.0 }, { 42, 237.0 } });\n   VERIFY(m.size() == 3);\n   VERIFY(m[1] == 1.0);\n@@ -44,7 +42,6 @@ int test01()\n   VERIFY(m[6] == 66.0);\n   VERIFY(m[7] == 77.0);\n   VERIFY(m[8] == 88.0);\n-  return test;\n }\n \n int main()"}, {"sha": "f48bf89151c2e4c4fb17ba47d80cfe37dcaf7490", "filename": "libstdc++-v3/testsuite/23_containers/map/modifiers/dr130.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fmodifiers%2Fdr130.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fmodifiers%2Fdr130.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fmodifiers%2Fdr130.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -25,7 +25,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n   using namespace std;\n \n   map<int, int> m0;\n@@ -48,7 +47,6 @@ test01()\n void\n test02()\n {\n-  bool test __attribute__((unused)) = true;\n   using namespace std;\n \n   map<int, int> m0;"}, {"sha": "760090e369fed41290ebb05417b89ef91f4e0618", "filename": "libstdc++-v3/testsuite/23_containers/map/modifiers/emplace/1.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fmodifiers%2Femplace%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fmodifiers%2Femplace%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fmodifiers%2Femplace%2F1.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -37,8 +37,6 @@ class PathPoint\n   std::vector<double> coords;\n };\n \n-bool test __attribute__((unused)) = true;\n-\n void test01()\n {\n   typedef std::map<char, std::vector<double>> Map;"}, {"sha": "7622e482c601d4a09b46bfa3f582bdc557c46f00", "filename": "libstdc++-v3/testsuite/23_containers/map/modifiers/extract.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fmodifiers%2Fextract.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fmodifiers%2Fextract.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fmodifiers%2Fextract.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -26,8 +26,6 @@ using test_type = std::map<int, int>;\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   test_type c{ {1, 10}, {2, 20}, {3, 30} };\n   test_type::node_type node;\n   test_type::insert_return_type ins;\n@@ -101,8 +99,6 @@ test01()\n void\n test02()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   test_type c{ {1, 10}, {2, 20}, {3, 30} };\n   test_type::node_type node;\n   test_type::insert_return_type ins;"}, {"sha": "2bc1b47ec4fa3cc2f04ab4539ad8ccfd532d2014", "filename": "libstdc++-v3/testsuite/23_containers/map/modifiers/insert/1.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fmodifiers%2Finsert%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fmodifiers%2Finsert%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fmodifiers%2Finsert%2F1.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -28,7 +28,6 @@\n // http://gcc.gnu.org/ml/gcc-patches/2001-08/msg01375.html\n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef std::map<int, int>   Map;\n   Map             M;\n   Map::iterator   hint;"}, {"sha": "77f59dd60d4b953df9bd4da63da605985246171c", "filename": "libstdc++-v3/testsuite/23_containers/map/modifiers/insert/16813.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fmodifiers%2Finsert%2F16813.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fmodifiers%2Finsert%2F16813.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fmodifiers%2Finsert%2F16813.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -22,7 +22,6 @@\n void test01()\n {\n   using __gnu_debug::map;\n-  bool test __attribute__((unused)) = true;\n \n   map<int, float> m1, m2;\n "}, {"sha": "807e3f9c0ad1c0b71af77959f0877b339d8b1918", "filename": "libstdc++-v3/testsuite/23_containers/map/modifiers/insert/2.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fmodifiers%2Finsert%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fmodifiers%2Finsert%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fmodifiers%2Finsert%2F2.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -26,7 +26,6 @@\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   using __gnu_test::rvalstruct;\n \n   typedef std::map<int, rvalstruct> Map;\n@@ -46,7 +45,6 @@ void test01()\n \n void test02()\n {\n-  bool test __attribute__((unused)) = true;\n   using __gnu_test::rvalstruct;\n \n   typedef std::map<int, rvalstruct> Map;"}, {"sha": "b2735884c510ce7ad85d96fa2a733378a7f93937", "filename": "libstdc++-v3/testsuite/23_containers/map/modifiers/insert/3.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fmodifiers%2Finsert%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fmodifiers%2Finsert%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fmodifiers%2Finsert%2F3.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -26,7 +26,6 @@\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   using __gnu_test::rvalstruct;\n \n   typedef std::map<rvalstruct, rvalstruct> Map;\n@@ -47,7 +46,6 @@ void test01()\n \n void test02()\n {\n-  bool test __attribute__((unused)) = true;\n   using __gnu_test::rvalstruct;\n \n   typedef std::map<rvalstruct, rvalstruct> Map;"}, {"sha": "33a114410bf76ee2abb56ec65092f6637b42c008", "filename": "libstdc++-v3/testsuite/23_containers/map/modifiers/insert/4.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fmodifiers%2Finsert%2F4.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fmodifiers%2Finsert%2F4.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fmodifiers%2Finsert%2F4.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -26,7 +26,6 @@\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   using __gnu_test::rvalstruct;\n \n   typedef std::map<int, rvalstruct> Map;\n@@ -45,7 +44,6 @@ void test01()\n \n void test02()\n {\n-  bool test __attribute__((unused)) = true;\n   using __gnu_test::rvalstruct;\n \n   typedef std::map<int, rvalstruct> Map;"}, {"sha": "1c1d3ec9ed5acc88d4a03ec4e70aead62388f6fc", "filename": "libstdc++-v3/testsuite/23_containers/map/modifiers/insert/5.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fmodifiers%2Finsert%2F5.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fmodifiers%2Finsert%2F5.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fmodifiers%2Finsert%2F5.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -26,7 +26,6 @@\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   using __gnu_test::rvalstruct;\n \n   typedef std::map<rvalstruct, rvalstruct> Map;\n@@ -46,7 +45,6 @@ void test01()\n \n void test02()\n {\n-  bool test __attribute__((unused)) = true;\n   using __gnu_test::rvalstruct;\n \n   typedef std::map<rvalstruct, rvalstruct> Map;"}, {"sha": "bcce8ea8475e8e473bb79c2593b3a13334fe5a38", "filename": "libstdc++-v3/testsuite/23_containers/map/modifiers/insert_or_assign/1.cc", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fmodifiers%2Finsert_or_assign%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fmodifiers%2Finsert_or_assign%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fmodifiers%2Finsert_or_assign%2F1.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -21,9 +21,6 @@\n #include <map>\n #include <testsuite_hooks.h>\n \n-\n-bool test __attribute__((unused)) = true;\n-\n struct Val\n {\n   bool moved_from_ctor = false;"}, {"sha": "cc8da8fc5c76eacd49083b0cd3abcc7230e66c80", "filename": "libstdc++-v3/testsuite/23_containers/map/modifiers/merge.cc", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fmodifiers%2Fmerge.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fmodifiers%2Fmerge.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fmodifiers%2Fmerge.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -26,8 +26,6 @@ using test_type = std::map<int, int>;\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   const test_type c0{ {1, 10}, {2, 20}, {3, 30} };\n   test_type c1 = c0, c2 = c0;\n \n@@ -48,8 +46,6 @@ test01()\n void\n test02()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   const test_type c0{ {1, 10}, {2, 20}, {3, 30} };\n   test_type c1 = c0;\n   std::map<int, int, std::less<>> c2( c0.begin(), c0.end() );\n@@ -71,8 +67,6 @@ test02()\n void\n test03()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   const test_type c0{ {1, 10}, {2, 20}, {3, 30} };\n   test_type c1 = c0;\n   std::map<int, int, std::greater<>> c2( c0.begin(), c0.end() );\n@@ -98,8 +92,6 @@ test03()\n void\n test04()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   const test_type c0{ {1, 10}, {2, 20}, {3, 30} };\n   test_type c1 = c0;\n   std::multimap<int, int, std::greater<>> c2( c0.begin(), c0.end() );"}, {"sha": "52c49224c6d8ea9bfb6ea01acbfc763c3430ec1d", "filename": "libstdc++-v3/testsuite/23_containers/map/modifiers/swap/1.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fmodifiers%2Fswap%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fmodifiers%2Fswap%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fmodifiers%2Fswap%2F1.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -36,7 +36,6 @@ namespace std\n // Should use map specialization for swap.\n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   std::map<T, int> A;\n   std::map<T, int> B;\n   swap_calls = 0;\n@@ -47,7 +46,6 @@ void test01()\n // Should use map specialization for swap.\n void test02()\n {\n-  bool test __attribute__((unused)) = true;\n   using namespace std;\n   map<T, int> A;\n   map<T, int> B;"}, {"sha": "51b46b53f62ab1461ae7ec2396c5725373a7e280", "filename": "libstdc++-v3/testsuite/23_containers/map/modifiers/swap/2.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fmodifiers%2Fswap%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fmodifiers%2Fswap%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fmodifiers%2Fswap%2F2.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -27,7 +27,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n   using namespace std;\n \n   typedef pair<const char, int> my_pair;"}, {"sha": "c3616df61a2392e13f557c95324c863fb5281a4d", "filename": "libstdc++-v3/testsuite/23_containers/map/modifiers/swap/3.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fmodifiers%2Fswap%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fmodifiers%2Fswap%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fmodifiers%2Fswap%2F3.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -27,7 +27,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n   using namespace std;\n \n   typedef pair<const char, int> my_pair;"}, {"sha": "9ea877055c17b719c38b789168eec9fd2df98f6a", "filename": "libstdc++-v3/testsuite/23_containers/map/modifiers/try_emplace/1.cc", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fmodifiers%2Ftry_emplace%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fmodifiers%2Ftry_emplace%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fmodifiers%2Ftry_emplace%2F1.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -21,9 +21,6 @@\n #include <map>\n #include <testsuite_hooks.h>\n \n-\n-bool test __attribute__((unused)) = true;\n-\n struct Val\n {\n   bool moved_from_ctor = false;"}, {"sha": "e172fc7ce9f5144034a3e5c4e5e2041236142b0a", "filename": "libstdc++-v3/testsuite/23_containers/map/operations/1.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Foperations%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Foperations%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Foperations%2F1.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -24,7 +24,6 @@\n // A few tests for equal_range, in the occasion of libstdc++/29385.\n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   using namespace std;\n \n   map<int, int> m0;"}, {"sha": "ef226b6cc37178037132def0564e47a3e723829f", "filename": "libstdc++-v3/testsuite/23_containers/map/operations/count.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Foperations%2Fcount.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Foperations%2Fcount.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Foperations%2Fcount.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -23,7 +23,6 @@\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   using namespace std;\n \n   typedef map<int, int>::value_type value_type;"}, {"sha": "d524f641092ff75d41946b7ef568ab1799224c5d", "filename": "libstdc++-v3/testsuite/23_containers/map/operators/1_neg.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Foperators%2F1_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Foperators%2F1_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Foperators%2F1_neg.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -26,7 +26,6 @@\n // libstdc++/86: map & set iterator comparisons are not type-safe\n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   std::map<unsigned int, int> mapByIndex;\n   std::map<std::string, unsigned> mapByName;\n   "}, {"sha": "fdc5bad2aa0455457bf1dee641ebad6bdb363cfb", "filename": "libstdc++-v3/testsuite/23_containers/map/operators/2.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Foperators%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Foperators%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Foperators%2F2.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -49,8 +49,6 @@ struct DefaultConstructibleType\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   using __gnu_test::rvalstruct;\n   using __gnu_test::counter_type;\n "}, {"sha": "4b30945e9d928500fedd1c5bae2fc3fa6bf36433", "filename": "libstdc++-v3/testsuite/23_containers/multimap/allocator/copy.cc", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fallocator%2Fcopy.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fallocator%2Fcopy.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fallocator%2Fcopy.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -33,7 +33,6 @@ using __gnu_test::propagating_allocator;\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef propagating_allocator<std::pair<const T, U>, false> alloc_type;\n   typedef std::multimap<T, U, Cmp, alloc_type> test_type;\n   test_type v1(alloc_type(1));\n@@ -45,7 +44,6 @@ void test01()\n \n void test02()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef propagating_allocator<std::pair<const T, U>, true> alloc_type;\n   typedef std::multimap<T, U, Cmp, alloc_type> test_type;\n   test_type v1(alloc_type(1));\n@@ -57,7 +55,6 @@ void test02()\n \n void test03()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef propagating_allocator<std::pair<const T, U>, true> alloc_type;\n   typedef std::multimap<T, U, Cmp, alloc_type> test_type;\n   test_type v1(alloc_type(1));"}, {"sha": "6028c04ee7ffc9b346797e1390f85c0b82ea8ba5", "filename": "libstdc++-v3/testsuite/23_containers/multimap/allocator/copy_assign.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fallocator%2Fcopy_assign.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fallocator%2Fcopy_assign.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fallocator%2Fcopy_assign.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -33,7 +33,6 @@ using __gnu_test::propagating_allocator;\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef propagating_allocator<std::pair<const T, U>, false> alloc_type;\n   typedef std::multimap<T, U, Cmp, alloc_type> test_type;\n   test_type v1(alloc_type(1));\n@@ -47,7 +46,6 @@ void test01()\n \n void test02()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef propagating_allocator<std::pair<const T, U>, true> alloc_type;\n   typedef std::multimap<T, U, Cmp, alloc_type> test_type;\n   test_type v1(alloc_type(1));\n@@ -61,8 +59,6 @@ void test02()\n \n void test03()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   using namespace __gnu_test;\n \n   typedef tracker_allocator<std::pair<const int, int>> alloc_type;"}, {"sha": "b9116b0d16abd711f2d9fa207c5ee108debb0942", "filename": "libstdc++-v3/testsuite/23_containers/multimap/allocator/init-list.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fallocator%2Finit-list.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fallocator%2Finit-list.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fallocator%2Finit-list.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -24,8 +24,6 @@\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   using namespace __gnu_test;\n \n   typedef tracker_allocator<std::pair<const int, int>> alloc_type;"}, {"sha": "7da6ac8cefde3b190d6c9a7d55e46686a0da67e3", "filename": "libstdc++-v3/testsuite/23_containers/multimap/allocator/minimal.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fallocator%2Fminimal.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fallocator%2Fminimal.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fallocator%2Fminimal.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -36,7 +36,6 @@ template class std::multimap<T, U, Cmp, SimpleAllocator<std::pair<const T, U>>>;\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef SimpleAllocator<std::pair<const T, U>> alloc_type;\n   typedef std::allocator_traits<alloc_type> traits_type;\n   typedef std::multimap<T, U, Cmp, alloc_type> test_type;"}, {"sha": "4f311ea2977af29cdae8e93747d58703a2578b8b", "filename": "libstdc++-v3/testsuite/23_containers/multimap/allocator/move.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fallocator%2Fmove.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fallocator%2Fmove.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fallocator%2Fmove.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -33,7 +33,6 @@ using __gnu_test::uneq_allocator;\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef uneq_allocator<std::pair<const T, U>> alloc_type;\n   typedef std::multimap<T, U, Cmp, alloc_type> test_type;\n   test_type v1(alloc_type(1));\n@@ -49,7 +48,6 @@ void test01()\n \n void test02()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef uneq_allocator<std::pair<const T, U>> alloc_type;\n   typedef std::multimap<T, U, Cmp, alloc_type> test_type;\n   test_type v1(alloc_type(1));"}, {"sha": "e1e051d85912ce3ba0484dc104393beb9b5a3385", "filename": "libstdc++-v3/testsuite/23_containers/multimap/allocator/move_assign.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fallocator%2Fmove_assign.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fallocator%2Fmove_assign.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fallocator%2Fmove_assign.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -33,7 +33,6 @@ using __gnu_test::propagating_allocator;\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef propagating_allocator<std::pair<const T, U>, false> alloc_type;\n   typedef std::multimap<T, U, Cmp, alloc_type> test_type;\n   test_type v1(alloc_type(1));\n@@ -47,7 +46,6 @@ void test01()\n \n void test02()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef propagating_allocator<std::pair<const T, U>, true> alloc_type;\n   typedef std::multimap<T, U, Cmp, alloc_type> test_type;\n   test_type v1(alloc_type(1));\n@@ -63,8 +61,6 @@ void test02()\n \n void test03()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   using namespace __gnu_test;\n \n   typedef propagating_allocator<std::pair<const int, int>, false,"}, {"sha": "4f786bd6828fbeb6b7bc42bcdaba96ccb73bd321", "filename": "libstdc++-v3/testsuite/23_containers/multimap/allocator/swap.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fallocator%2Fswap.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fallocator%2Fswap.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fallocator%2Fswap.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -50,7 +50,6 @@ operator!=(const propagating_allocator<std::pair<const T, U>, false>&,\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef propagating_allocator<std::pair<const T, U>, false> alloc_type;\n   typedef std::multimap<T, U, Cmp, alloc_type> test_type;\n   test_type v1(alloc_type(1));\n@@ -66,7 +65,6 @@ void test01()\n \n void test02()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef propagating_allocator<std::pair<const T, U>, true> alloc_type;\n   typedef std::multimap<T, U, Cmp, alloc_type> test_type;\n   test_type v1(alloc_type(1));"}, {"sha": "6e9953b10a0fa06ba43db64f2458e45a306b3d32", "filename": "libstdc++-v3/testsuite/23_containers/multimap/capacity/29134.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fcapacity%2F29134.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fcapacity%2F29134.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fcapacity%2F29134.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -23,8 +23,6 @@\n // libstdc++/29134\n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::multimap<int, int> mm;\n \n   VERIFY( (mm.max_size() == std::allocator<std::_Rb_tree_node<"}, {"sha": "411faa8905ae4f8c81ae26a4e083a6163f376ad8", "filename": "libstdc++-v3/testsuite/23_containers/multimap/cons/moveable.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fcons%2Fmoveable.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fcons%2Fmoveable.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fcons%2Fmoveable.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -28,8 +28,6 @@\n \n int main()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::multimap<int, int> a,b;\n   a.insert(std::make_pair(2,0));\n   b.insert(std::make_pair(1,0));"}, {"sha": "5a3212411d6bb67da48696a62515deeb4a772e8b", "filename": "libstdc++-v3/testsuite/23_containers/multimap/debug/construct5_neg.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fdebug%2Fconstruct5_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fdebug%2Fconstruct5_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fdebug%2Fconstruct5_neg.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -23,8 +23,6 @@\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   typedef __gnu_test::uneq_allocator<std::pair<const int, int> > alloc_type;\n   typedef __gnu_debug::multimap<int, int, std::less<int>, alloc_type> test_type;\n "}, {"sha": "ec117c5d68f57c08188acece56723c7abf38b088", "filename": "libstdc++-v3/testsuite/23_containers/multimap/debug/move_assign_neg.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fdebug%2Fmove_assign_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fdebug%2Fmove_assign_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fdebug%2Fmove_assign_neg.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -22,8 +22,6 @@\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   typedef __gnu_test::propagating_allocator<std::pair<const int, int>,\n \t\t\t\t\t    false> alloc_type;\n   typedef __gnu_debug::multimap<int, int, std::less<int>, alloc_type> test_type;"}, {"sha": "d376b214939e1b691fbcdbfdb23fb5e529a06551", "filename": "libstdc++-v3/testsuite/23_containers/multimap/debug/move_neg.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fdebug%2Fmove_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fdebug%2Fmove_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fdebug%2Fmove_neg.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -26,8 +26,6 @@ using __gnu_test::uneq_allocator;\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   typedef uneq_allocator<std::pair<const int, int> > alloc_type;\n   typedef __gnu_debug::multimap<int, int, std::less<int>, alloc_type> test_type;\n "}, {"sha": "c2ce1c307acacaeb85b191f812021c96b4eb1140", "filename": "libstdc++-v3/testsuite/23_containers/multimap/init-list.cc", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Finit-list.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Finit-list.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Finit-list.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -23,10 +23,8 @@\n \n using namespace std;\n \n-int test01()\n+void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   typedef multimap<int,double> Container;\n   typedef Container::iterator iterator;\n   typedef pair<iterator,iterator> itpair;\n@@ -52,8 +50,6 @@ int test01()\n   VERIFY(m.count(5) == 2);\n   VERIFY(m.count(42) == 1);\n   VERIFY(m.count(7) == 2);\n-\n-  return test;\n }\n \n int main()"}, {"sha": "f015227bf675662dc4ed81bdfe85b2983bd8c0de", "filename": "libstdc++-v3/testsuite/23_containers/multimap/modifiers/dr130.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fmodifiers%2Fdr130.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fmodifiers%2Fdr130.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fmodifiers%2Fdr130.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -31,7 +31,6 @@ using namespace std;\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n   using namespace std;\n \n   multimap<int, int> mm0;\n@@ -58,7 +57,6 @@ test01()\n void\n test02()\n {\n-  bool test __attribute__((unused)) = true;\n   using namespace std;\n \n   multimap<int, int> mm0;"}, {"sha": "5378bb69f27949e70138ccf5e834424fbe3b7e20", "filename": "libstdc++-v3/testsuite/23_containers/multimap/modifiers/emplace/1.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fmodifiers%2Femplace%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fmodifiers%2Femplace%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fmodifiers%2Femplace%2F1.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -36,8 +36,6 @@ class PathPoint\n   std::vector<double> coords;\n };\n \n-bool test __attribute__((unused)) = true;\n-\n void test01()\n {\n   typedef std::multimap<char, std::vector<double>> MMap;"}, {"sha": "ec11aee493d4231995f9f189ad9ce5cb0da5240e", "filename": "libstdc++-v3/testsuite/23_containers/multimap/modifiers/extract.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fmodifiers%2Fextract.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fmodifiers%2Fextract.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fmodifiers%2Fextract.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -26,8 +26,6 @@ using test_type = std::multimap<int, int>;\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   test_type c{ {1, 10}, { 1, 11 }, {2, 20}, { 2, 21}, {3, 30}, { 3, 31 } };\n   test_type::node_type node;\n   test_type::iterator pos;\n@@ -97,8 +95,6 @@ test01()\n void\n test02()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   test_type c{ {1, 10}, { 1, 11 }, {2, 20}, { 2, 21}, {3, 30}, { 3, 31 } };\n   test_type::node_type node;\n   test_type::iterator pos;"}, {"sha": "7d605e28735ba2030e1fef454a221e89f1a8fc75", "filename": "libstdc++-v3/testsuite/23_containers/multimap/modifiers/insert/1.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fmodifiers%2Finsert%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fmodifiers%2Finsert%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fmodifiers%2Finsert%2F1.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -26,7 +26,6 @@\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   using __gnu_test::rvalstruct;\n \n   typedef std::multimap<int, rvalstruct> Map;\n@@ -45,7 +44,6 @@ void test01()\n \n void test02()\n {\n-  bool test __attribute__((unused)) = true;\n   using __gnu_test::rvalstruct;\n \n   typedef std::multimap<int, rvalstruct> Map;"}, {"sha": "ed88fef35d8e104ac987d08637bb10bf987c1dcf", "filename": "libstdc++-v3/testsuite/23_containers/multimap/modifiers/insert/2.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fmodifiers%2Finsert%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fmodifiers%2Finsert%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fmodifiers%2Finsert%2F2.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -26,7 +26,6 @@\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   using __gnu_test::rvalstruct;\n \n   typedef std::multimap<rvalstruct, rvalstruct> Map;\n@@ -45,7 +44,6 @@ void test01()\n \n void test02()\n {\n-  bool test __attribute__((unused)) = true;\n   using __gnu_test::rvalstruct;\n \n   typedef std::multimap<rvalstruct, rvalstruct> Map;"}, {"sha": "6e2168578269321a25202574ad24c64633a2614c", "filename": "libstdc++-v3/testsuite/23_containers/multimap/modifiers/insert/22102.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fmodifiers%2Finsert%2F22102.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fmodifiers%2Finsert%2F22102.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fmodifiers%2Finsert%2F22102.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -25,7 +25,6 @@\n // libstdc++/22102\n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef std::multimap<int, int>   Mmap;\n   typedef Mmap::value_type          value_type;\n   typedef Mmap::iterator            iterator;"}, {"sha": "f18575e644d8189ebd8d8c5e6bd989c3dbd33d8d", "filename": "libstdc++-v3/testsuite/23_containers/multimap/modifiers/insert/3.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fmodifiers%2Finsert%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fmodifiers%2Finsert%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fmodifiers%2Finsert%2F3.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -26,7 +26,6 @@\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   using __gnu_test::rvalstruct;\n \n   typedef std::multimap<int, rvalstruct> Map;\n@@ -45,7 +44,6 @@ void test01()\n \n void test02()\n {\n-  bool test __attribute__((unused)) = true;\n   using __gnu_test::rvalstruct;\n \n   typedef std::multimap<int, rvalstruct> Map;"}, {"sha": "470e9d2a1d003af0bab5023e8e9d29edc65a65da", "filename": "libstdc++-v3/testsuite/23_containers/multimap/modifiers/insert/4.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fmodifiers%2Finsert%2F4.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fmodifiers%2Finsert%2F4.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fmodifiers%2Finsert%2F4.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -26,7 +26,6 @@\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   using __gnu_test::rvalstruct;\n \n   typedef std::multimap<rvalstruct, rvalstruct> Map;\n@@ -46,7 +45,6 @@ void test01()\n \n void test02()\n {\n-  bool test __attribute__((unused)) = true;\n   using __gnu_test::rvalstruct;\n \n   typedef std::multimap<rvalstruct, rvalstruct> Map;"}, {"sha": "2cc8b2a5610f59af83b4d7e7e4d412be0530b125", "filename": "libstdc++-v3/testsuite/23_containers/multimap/modifiers/merge.cc", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fmodifiers%2Fmerge.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fmodifiers%2Fmerge.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fmodifiers%2Fmerge.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -26,8 +26,6 @@ using test_type = std::multimap<int, int>;\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   const test_type c0{ {1, 10}, {1, 11}, {2, 20}, {2, 21}, {3, 30}, {3, 31} };\n   test_type c1 = c0, c2 = c0;\n \n@@ -46,8 +44,6 @@ test01()\n void\n test02()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   const test_type c0{ {1, 10}, {1, 11}, {2, 20}, {2, 21}, {3, 30}, {3, 31} };\n   test_type c1 = c0;\n   std::multimap<int, int, std::less<>> c2( c0.begin(), c0.end() );\n@@ -68,8 +64,6 @@ test02()\n void\n test03()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   const test_type c0{ {1, 10}, {1, 11}, {2, 20}, {2, 21}, {3, 30}, {3, 31} };\n   test_type c1 = c0;\n   std::multimap<int, int, std::greater<>> c2( c0.begin(), c0.end() );\n@@ -90,8 +84,6 @@ test03()\n void\n test04()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   const test_type c0{ {1, 10}, {1, 11}, {2, 20}, {2, 21}, {3, 30}, {3, 31} };\n   test_type c1 = c0;\n   std::map<int, int, std::greater<>> c2( c0.begin(), c0.end() );"}, {"sha": "b664e1e8e9d47376715582adbf2bc7c91b2c3a94", "filename": "libstdc++-v3/testsuite/23_containers/multimap/modifiers/swap/1.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fmodifiers%2Fswap%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fmodifiers%2Fswap%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fmodifiers%2Fswap%2F1.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -36,7 +36,6 @@ namespace std\n // Should use multimap specialization for swap.\n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   std::multimap<T, int> A;\n   std::multimap<T, int> B;\n   swap_calls = 0;\n@@ -47,7 +46,6 @@ void test01()\n // Should use multimap specialization for swap.\n void test02()\n {\n-  bool test __attribute__((unused)) = true;\n   using namespace std;\n   multimap<T, int> A;\n   multimap<T, int> B;"}, {"sha": "6d96f5e7a8eefbb85c9feb5fc53c22bad81920d9", "filename": "libstdc++-v3/testsuite/23_containers/multimap/modifiers/swap/2.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fmodifiers%2Fswap%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fmodifiers%2Fswap%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fmodifiers%2Fswap%2F2.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -27,7 +27,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n   using namespace std;\n \n   typedef pair<const char, int> my_pair;"}, {"sha": "eafc5c8e1f9bf80336564caeb3225bfb0f9728dc", "filename": "libstdc++-v3/testsuite/23_containers/multimap/modifiers/swap/3.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fmodifiers%2Fswap%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fmodifiers%2Fswap%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fmodifiers%2Fswap%2F3.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -27,7 +27,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n   using namespace std;\n \n   typedef pair<const char, int> my_pair;"}, {"sha": "51a5ae8e1239b41edfb8bcda36ecdaab7e547346", "filename": "libstdc++-v3/testsuite/23_containers/multimap/operations/1.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Foperations%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Foperations%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Foperations%2F1.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -24,7 +24,6 @@\n // A few tests for equal_range, in the occasion of libstdc++/29385.\n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   using namespace std;\n \n   multimap<int, int> mm0;"}, {"sha": "d5ee57d18b5fa91eb0a5fc761816efb796eeb86a", "filename": "libstdc++-v3/testsuite/23_containers/multimap/operations/count.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Foperations%2Fcount.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Foperations%2Fcount.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Foperations%2Fcount.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -23,7 +23,6 @@\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   using namespace std;\n \n   typedef multimap<int, int>::value_type value_type;"}, {"sha": "32cece0ebaca9869e1b91fba4682b61f06a6a154", "filename": "libstdc++-v3/testsuite/23_containers/multiset/allocator/copy.cc", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fallocator%2Fcopy.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fallocator%2Fcopy.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fallocator%2Fcopy.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -31,7 +31,6 @@ using __gnu_test::propagating_allocator;\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef propagating_allocator<T, false> alloc_type;\n   typedef std::multiset<T, Cmp, alloc_type> test_type;\n   test_type v1(alloc_type(1));\n@@ -43,7 +42,6 @@ void test01()\n \n void test02()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef propagating_allocator<T, true> alloc_type;\n   typedef std::multiset<T, Cmp, alloc_type> test_type;\n   test_type v1(alloc_type(1));\n@@ -55,7 +53,6 @@ void test02()\n \n void test03()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef propagating_allocator<T, true> alloc_type;\n   typedef std::multiset<T, Cmp, alloc_type> test_type;\n   test_type v1(alloc_type(1));"}, {"sha": "3e63a0dbee5dc48c201619262cb41b7d9d99c8aa", "filename": "libstdc++-v3/testsuite/23_containers/multiset/allocator/copy_assign.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fallocator%2Fcopy_assign.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fallocator%2Fcopy_assign.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fallocator%2Fcopy_assign.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -31,7 +31,6 @@ using __gnu_test::propagating_allocator;\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef propagating_allocator<T, false> alloc_type;\n   typedef std::multiset<T, Cmp, alloc_type> test_type;\n   test_type v1(alloc_type(1));\n@@ -45,7 +44,6 @@ void test01()\n \n void test02()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef propagating_allocator<T, true> alloc_type;\n   typedef std::multiset<T, Cmp, alloc_type> test_type;\n   test_type v1(alloc_type(1));\n@@ -59,8 +57,6 @@ void test02()\n \n void test03()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   using namespace __gnu_test;\n \n   typedef tracker_allocator<int> alloc_type;"}, {"sha": "0e7c5647c0ecea176c885eebf4061569c198bdf8", "filename": "libstdc++-v3/testsuite/23_containers/multiset/allocator/init-list.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fallocator%2Finit-list.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fallocator%2Finit-list.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fallocator%2Finit-list.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -24,8 +24,6 @@\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   using namespace __gnu_test;\n \n   typedef tracker_allocator<int> alloc_type;"}, {"sha": "7f25f5fcbce6fe85df47b32577439cdfb2ad8fd7", "filename": "libstdc++-v3/testsuite/23_containers/multiset/allocator/minimal.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fallocator%2Fminimal.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fallocator%2Fminimal.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fallocator%2Fminimal.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -34,7 +34,6 @@ template class std::multiset<T, Cmp, SimpleAllocator<T>>;\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef SimpleAllocator<T> alloc_type;\n   typedef std::allocator_traits<alloc_type> traits_type;\n   typedef std::multiset<T, Cmp, alloc_type> test_type;"}, {"sha": "37b922b8b73f21e5b44d8b402a38cf9345199fcb", "filename": "libstdc++-v3/testsuite/23_containers/multiset/allocator/move.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fallocator%2Fmove.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fallocator%2Fmove.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fallocator%2Fmove.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -31,7 +31,6 @@ using __gnu_test::uneq_allocator;\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef uneq_allocator<T> alloc_type;\n   typedef std::multiset<T, Cmp, alloc_type> test_type;\n   test_type v1(alloc_type(1));\n@@ -47,7 +46,6 @@ void test01()\n \n void test02()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef uneq_allocator<T> alloc_type;\n   typedef std::multiset<T, Cmp, alloc_type> test_type;\n   test_type v1(alloc_type(1));"}, {"sha": "be68af0344ab60f7ccabd8a4cb2fa1ffcc24422b", "filename": "libstdc++-v3/testsuite/23_containers/multiset/allocator/move_assign.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fallocator%2Fmove_assign.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fallocator%2Fmove_assign.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fallocator%2Fmove_assign.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -31,7 +31,6 @@ using __gnu_test::propagating_allocator;\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef propagating_allocator<T, false> alloc_type;\n   typedef std::multiset<T, Cmp, alloc_type> test_type;\n   test_type v1(alloc_type(1));\n@@ -45,7 +44,6 @@ void test01()\n \n void test02()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef propagating_allocator<T, true> alloc_type;\n   typedef std::multiset<T, Cmp, alloc_type> test_type;\n   test_type v1(alloc_type(1));\n@@ -61,8 +59,6 @@ void test02()\n \n void test03()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   using namespace __gnu_test;\n \n   typedef propagating_allocator<int, false, tracker_allocator<int>> alloc_type;"}, {"sha": "3172a0c3a5de9bb0c9fd2cda0d5a276738cdf553", "filename": "libstdc++-v3/testsuite/23_containers/multiset/allocator/swap.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fallocator%2Fswap.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fallocator%2Fswap.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fallocator%2Fswap.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -48,7 +48,6 @@ operator!=(const propagating_allocator<T, false>&,\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef propagating_allocator<T, false> alloc_type;\n   typedef std::multiset<T, Cmp, alloc_type> test_type;\n   test_type v1(alloc_type(1));\n@@ -64,7 +63,6 @@ void test01()\n \n void test02()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef propagating_allocator<T, true> alloc_type;\n   typedef std::multiset<T, Cmp, alloc_type> test_type;\n   test_type v1(alloc_type(1));"}, {"sha": "2a8ab0b9602fa629b9f07436035bf17146fc0be3", "filename": "libstdc++-v3/testsuite/23_containers/multiset/capacity/29134.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fcapacity%2F29134.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fcapacity%2F29134.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fcapacity%2F29134.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -23,8 +23,6 @@\n // libstdc++/29134\n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::multiset<int> ms;\n \n   VERIFY( ms.max_size()"}, {"sha": "848c0e44a6f0fd236251cfc0ae43e5dba4de36a8", "filename": "libstdc++-v3/testsuite/23_containers/multiset/cons/moveable.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fcons%2Fmoveable.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fcons%2Fmoveable.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fcons%2Fmoveable.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -28,8 +28,6 @@\n \n int main()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::multiset<int> a,b;\n   a.insert(2);\n   b.insert(1);"}, {"sha": "3adbb703b1cf0e26ff39ac3f81abc7fee85f9e8f", "filename": "libstdc++-v3/testsuite/23_containers/multiset/debug/construct5_neg.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fdebug%2Fconstruct5_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fdebug%2Fconstruct5_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fdebug%2Fconstruct5_neg.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -23,8 +23,6 @@\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   typedef __gnu_test::uneq_allocator<int> alloc_type;\n   typedef __gnu_debug::multiset<int, std::less<int>, alloc_type> test_type;\n "}, {"sha": "6f9c18570d23bbb76f7710e583ce9d7138d227b6", "filename": "libstdc++-v3/testsuite/23_containers/multiset/debug/invalidation/2.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fdebug%2Finvalidation%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fdebug%2Finvalidation%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fdebug%2Finvalidation%2F2.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -27,7 +27,6 @@ using std::advance;\n // Erase\n void test02()\n {\n-  bool test __attribute__((unused)) = true;\n   multiset<int> v;\n   for (int i = 0; i < 20; ++i)\n     v.insert(i);"}, {"sha": "5e7d3574d39a45ec52b609cdc9500499899d7b2f", "filename": "libstdc++-v3/testsuite/23_containers/multiset/debug/move_assign_neg.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fdebug%2Fmove_assign_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fdebug%2Fmove_assign_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fdebug%2Fmove_assign_neg.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -22,8 +22,6 @@\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   typedef __gnu_test::propagating_allocator<int, false> alloc_type;\n   typedef __gnu_debug::multiset<int, std::less<int>, alloc_type> test_type;\n "}, {"sha": "19d646c3ec8bc520ce301133c830c2c060867665", "filename": "libstdc++-v3/testsuite/23_containers/multiset/debug/move_neg.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fdebug%2Fmove_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fdebug%2Fmove_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fdebug%2Fmove_neg.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -26,8 +26,6 @@ using __gnu_test::uneq_allocator;\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   typedef uneq_allocator<int> alloc_type;\n   typedef __gnu_debug::multiset<int, std::less<int>, alloc_type> test_type;\n "}, {"sha": "2f7d08be12f0f89bb29e950b68ebc94e6e8dc857", "filename": "libstdc++-v3/testsuite/23_containers/multiset/init-list.cc", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Finit-list.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Finit-list.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Finit-list.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -23,10 +23,8 @@\n \n using namespace std;\n \n-int test01()\n+void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   multiset<int> m({ 1, 5, 5, 37 });\n   VERIFY(m.size() == 4);\n   VERIFY(m.count(1) == 1);\n@@ -48,8 +46,6 @@ int test01()\n   VERIFY(m.count(102) == 1);\n   VERIFY(m.count(42) == 2);\n   VERIFY(m.count(1) == 0);\n-\n-  return test;\n }\n \n int main()"}, {"sha": "d7dbdfa2def20a153380177f32935c425394de45", "filename": "libstdc++-v3/testsuite/23_containers/multiset/modifiers/dr130.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fmodifiers%2Fdr130.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fmodifiers%2Fdr130.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fmodifiers%2Fdr130.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -31,7 +31,6 @@ using namespace std;\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n   using namespace std;\n \n   multiset<int> ms0;\n@@ -57,7 +56,6 @@ test01()\n void\n test02()\n {\n-  bool test __attribute__((unused)) = true;\n   using namespace std;\n \n   multiset<int> ms0;"}, {"sha": "7a84bf904448733f9d036648e1261f0633920fea", "filename": "libstdc++-v3/testsuite/23_containers/multiset/modifiers/emplace/1.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fmodifiers%2Femplace%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fmodifiers%2Femplace%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fmodifiers%2Femplace%2F1.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -41,8 +41,6 @@ struct PathPointLess\n   { return __lhs.getType() < __rhs.getType(); }\n };\n \n-bool test __attribute__((unused)) = true;\n-\n void test01()\n {\n   typedef std::multiset<PathPoint, PathPointLess> Mset;"}, {"sha": "5f15feb02bc0f5229d5f8e6473cb52b5a4772b87", "filename": "libstdc++-v3/testsuite/23_containers/multiset/modifiers/extract.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fmodifiers%2Fextract.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fmodifiers%2Fextract.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fmodifiers%2Fextract.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -26,8 +26,6 @@ using test_type = std::multiset<int>;\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   test_type c{ 1, 1, 2, 2, 3, 3 };\n   test_type::node_type node;\n   test_type::iterator pos;\n@@ -87,8 +85,6 @@ test01()\n void\n test02()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   test_type c{ 1, 1, 2, 2, 3, 3 };\n   test_type::node_type node;\n   test_type::iterator pos;"}, {"sha": "d2992f328820a36a9ccb007721d3b14141f07b6d", "filename": "libstdc++-v3/testsuite/23_containers/multiset/modifiers/insert/1.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fmodifiers%2Finsert%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fmodifiers%2Finsert%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fmodifiers%2Finsert%2F1.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -38,7 +38,6 @@ operator<(std::pair<int, int> const& lhs, std::pair<int, int> const& rhs)\n \n int main () \n {\n-  bool test __attribute__((unused)) = true;\n   typedef std::multiset<std::pair<int, int> >::iterator iterator;\n   std::pair<int, int> p(69, 0);\n   std::multiset<std::pair<int, int> > s;"}, {"sha": "531eb0724b60d5c90e2ddab23208f063708fc708", "filename": "libstdc++-v3/testsuite/23_containers/multiset/modifiers/insert/2.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fmodifiers%2Finsert%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fmodifiers%2Finsert%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fmodifiers%2Finsert%2F2.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -25,7 +25,6 @@\n // and libstdc++/19433.\n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   using namespace std;\n \n   multiset<int> ms0, ms1;"}, {"sha": "c96ae9f15c0de8ca841572f8abbcf1bc6a70226e", "filename": "libstdc++-v3/testsuite/23_containers/multiset/modifiers/insert/22102.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fmodifiers%2Finsert%2F22102.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fmodifiers%2Finsert%2F22102.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fmodifiers%2Finsert%2F22102.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -25,7 +25,6 @@\n // libstdc++/22102\n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef std::multiset<int>        Mset;\n   typedef Mset::value_type          value_type;\n   typedef Mset::iterator            iterator;"}, {"sha": "0aca187535411f1e13e0678150350564280bfeaf", "filename": "libstdc++-v3/testsuite/23_containers/multiset/modifiers/insert/3.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fmodifiers%2Finsert%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fmodifiers%2Finsert%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fmodifiers%2Finsert%2F3.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -26,7 +26,6 @@\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   using __gnu_test::rvalstruct;\n \n   typedef std::multiset<rvalstruct> Set;\n@@ -42,7 +41,6 @@ void test01()\n \n void test02()\n {\n-  bool test __attribute__((unused)) = true;\n   using __gnu_test::rvalstruct;\n \n   typedef std::multiset<rvalstruct> Set;"}, {"sha": "0c3ad78101241f3fb2c38d11d92b950bab68d895", "filename": "libstdc++-v3/testsuite/23_containers/multiset/modifiers/insert/4.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fmodifiers%2Finsert%2F4.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fmodifiers%2Finsert%2F4.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fmodifiers%2Finsert%2F4.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -26,7 +26,6 @@\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   using __gnu_test::rvalstruct;\n \n   typedef std::multiset<rvalstruct> Set;\n@@ -42,7 +41,6 @@ void test01()\n \n void test02()\n {\n-  bool test __attribute__((unused)) = true;\n   using __gnu_test::rvalstruct;\n \n   typedef std::multiset<rvalstruct> Set;"}, {"sha": "f4a1f44f430d41fb404db1caf163eb50929ad050", "filename": "libstdc++-v3/testsuite/23_containers/multiset/modifiers/merge.cc", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fmodifiers%2Fmerge.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fmodifiers%2Fmerge.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fmodifiers%2Fmerge.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -26,8 +26,6 @@ using test_type = std::multiset<int>;\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   test_type c0{ 1, 1, 2, 2, 3, 3 };\n   test_type c1 = c0, c2 = c0;\n \n@@ -46,8 +44,6 @@ test01()\n void\n test02()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   test_type c0{ 1, 1, 2, 2, 3, 3 };\n   test_type c1 = c0;\n   std::multiset<int, std::less<>> c2( c0.begin(), c0.end() );\n@@ -88,8 +84,6 @@ test03()\n void\n test04()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   const test_type c0{ 1, 1, 2, 2, 3, 3 };\n   test_type c1 = c0;\n   std::set<int, std::greater<>> c2( c0.begin(), c0.end() );"}, {"sha": "b8c8feeb0f6ba12c2ee42f13bf3d6fec9e5e765e", "filename": "libstdc++-v3/testsuite/23_containers/multiset/modifiers/swap/1.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fmodifiers%2Fswap%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fmodifiers%2Fswap%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fmodifiers%2Fswap%2F1.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -36,7 +36,6 @@ namespace std\n // Should use multiset specialization for swap.\n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   std::multiset<T> A;\n   std::multiset<T> B;\n   swap_calls = 0;\n@@ -47,7 +46,6 @@ void test01()\n // Should use multiset specialization for swap.\n void test02()\n {\n-  bool test __attribute__((unused)) = true;\n   using namespace std;\n   multiset<T> A;\n   multiset<T> B;"}, {"sha": "52b29a2ccf06c36968e5eed66d126d397996df0f", "filename": "libstdc++-v3/testsuite/23_containers/multiset/modifiers/swap/2.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fmodifiers%2Fswap%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fmodifiers%2Fswap%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fmodifiers%2Fswap%2F2.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -27,7 +27,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n   using namespace std;\n \n   typedef __gnu_test::uneq_allocator<char> my_alloc;"}, {"sha": "f81cfb4e9403e3c46ede25db6376ad55bd414e0c", "filename": "libstdc++-v3/testsuite/23_containers/multiset/modifiers/swap/3.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fmodifiers%2Fswap%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fmodifiers%2Fswap%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fmodifiers%2Fswap%2F3.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -27,7 +27,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n   using namespace std;\n \n   typedef __gnu_test::uneq_allocator<char> my_alloc;"}, {"sha": "646ea0a61755b6bdcdb27641a35bb453b1b1322b", "filename": "libstdc++-v3/testsuite/23_containers/multiset/operations/1.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Foperations%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Foperations%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Foperations%2F1.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -24,7 +24,6 @@\n // A few tests for equal_range, in the occasion of libstdc++/29385.\n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   using namespace std;\n \n   multiset<int> ms0;"}, {"sha": "869ccb7147c8fbce26e9fe3a01b5cbad798f1011", "filename": "libstdc++-v3/testsuite/23_containers/multiset/operations/count.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Foperations%2Fcount.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Foperations%2Fcount.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Foperations%2Fcount.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -23,7 +23,6 @@\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   using namespace std;\n \n   multiset<int> ms0;"}, {"sha": "1912d2af40e8b9deedc6b0a2950cdd4f59956459", "filename": "libstdc++-v3/testsuite/23_containers/priority_queue/moveable.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fpriority_queue%2Fmoveable.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fpriority_queue%2Fmoveable.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fpriority_queue%2Fmoveable.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -28,8 +28,6 @@\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::priority_queue<int> a,b;\n   a.push(1);\n   b = std::move(a);"}, {"sha": "929b88134f5e6685809eba0a1cbec148ab4872e0", "filename": "libstdc++-v3/testsuite/23_containers/queue/moveable.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fqueue%2Fmoveable.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fqueue%2Fmoveable.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fqueue%2Fmoveable.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -28,8 +28,6 @@\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::queue<int> a,b;\n   a.push(1);\n   b = std::move(a);"}, {"sha": "b3db5c21b46f40a83d2d21c872b9d7c66f71257e", "filename": "libstdc++-v3/testsuite/23_containers/set/allocator/copy.cc", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fallocator%2Fcopy.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fallocator%2Fcopy.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fallocator%2Fcopy.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -31,7 +31,6 @@ using __gnu_test::propagating_allocator;\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef propagating_allocator<T, false> alloc_type;\n   typedef std::set<T, Cmp, alloc_type> test_type;\n   test_type v1(alloc_type(1));\n@@ -43,7 +42,6 @@ void test01()\n \n void test02()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef propagating_allocator<T, true> alloc_type;\n   typedef std::set<T, Cmp, alloc_type> test_type;\n   test_type v1(alloc_type(1));\n@@ -55,7 +53,6 @@ void test02()\n \n void test03()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef propagating_allocator<T, true> alloc_type;\n   typedef std::set<T, Cmp, alloc_type> test_type;\n   test_type v1(alloc_type(1));"}, {"sha": "d522bf4a2684502c5d97282186c4b1225afff5d2", "filename": "libstdc++-v3/testsuite/23_containers/set/allocator/copy_assign.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fallocator%2Fcopy_assign.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fallocator%2Fcopy_assign.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fallocator%2Fcopy_assign.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -31,7 +31,6 @@ using __gnu_test::propagating_allocator;\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef propagating_allocator<T, false> alloc_type;\n   typedef std::set<T, Cmp, alloc_type> test_type;\n   test_type v1(alloc_type(1));\n@@ -45,7 +44,6 @@ void test01()\n \n void test02()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef propagating_allocator<T, true> alloc_type;\n   typedef std::set<T, Cmp, alloc_type> test_type;\n   test_type v1(alloc_type(1));\n@@ -59,8 +57,6 @@ void test02()\n \n void test03()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   using namespace __gnu_test;\n \n   typedef tracker_allocator<int> alloc_type;"}, {"sha": "d5e093b521bc80b132b3c0edcd2c0c56ca7e610a", "filename": "libstdc++-v3/testsuite/23_containers/set/allocator/init-list.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fallocator%2Finit-list.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fallocator%2Finit-list.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fallocator%2Finit-list.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -24,8 +24,6 @@\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   using namespace __gnu_test;\n \n   typedef tracker_allocator<int> alloc_type;"}, {"sha": "f28cf4e93e1d21967ead3e6fb206a4e0c4fc1a65", "filename": "libstdc++-v3/testsuite/23_containers/set/allocator/minimal.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fallocator%2Fminimal.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fallocator%2Fminimal.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fallocator%2Fminimal.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -34,7 +34,6 @@ template class std::set<T, Cmp, SimpleAllocator<T>>;\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef SimpleAllocator<T> alloc_type;\n   typedef std::allocator_traits<alloc_type> traits_type;\n   typedef std::set<T, Cmp, alloc_type> test_type;"}, {"sha": "2545e55ff9bf20d695843fd3d053841f2d39a129", "filename": "libstdc++-v3/testsuite/23_containers/set/allocator/move.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fallocator%2Fmove.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fallocator%2Fmove.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fallocator%2Fmove.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -33,7 +33,6 @@ using __gnu_test::uneq_allocator;\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef uneq_allocator<T> alloc_type;\n   typedef std::set<T, Cmp, alloc_type> test_type;\n   test_type v1(alloc_type(1));\n@@ -49,7 +48,6 @@ void test01()\n \n void test02()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef uneq_allocator<T> alloc_type;\n   typedef std::set<T, Cmp, alloc_type> test_type;\n   test_type v1(alloc_type(1));"}, {"sha": "60c0835b026d80e3c7e666fd57e0b8039772a790", "filename": "libstdc++-v3/testsuite/23_containers/set/allocator/move_assign.cc", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fallocator%2Fmove_assign.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fallocator%2Fmove_assign.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fallocator%2Fmove_assign.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -33,7 +33,6 @@ using __gnu_test::propagating_allocator;\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef propagating_allocator<T, false> alloc_type;\n   typedef std::set<T, Cmp, alloc_type> test_type;\n   test_type v1(alloc_type(1));\n@@ -47,7 +46,6 @@ void test01()\n \n void test02()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef propagating_allocator<T, true> alloc_type;\n   typedef std::set<T, Cmp, alloc_type> test_type;\n   test_type v1(alloc_type(1));\n@@ -63,8 +61,6 @@ void test02()\n \n void test03()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   using namespace __gnu_test;\n \n   typedef propagating_allocator<int, false, tracker_allocator<int>> alloc_type;\n@@ -93,8 +89,6 @@ void test03()\n \n void test04()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   using namespace __gnu_test;\n \n   typedef tracker_allocator<int> alloc_type;"}, {"sha": "e9fc18f964a322a19707dc874a680468ba1fc56e", "filename": "libstdc++-v3/testsuite/23_containers/set/allocator/swap.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fallocator%2Fswap.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fallocator%2Fswap.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fallocator%2Fswap.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -48,7 +48,6 @@ operator!=(const propagating_allocator<T, false>&,\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef propagating_allocator<T, false> alloc_type;\n   typedef std::set<T, Cmp, alloc_type> test_type;\n   test_type v1(alloc_type(1));\n@@ -64,7 +63,6 @@ void test01()\n \n void test02()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef propagating_allocator<T, true> alloc_type;\n   typedef std::set<T, Cmp, alloc_type> test_type;\n   test_type v1(alloc_type(1));"}, {"sha": "0c5c5ae114d8ded3e304ddd8308f5077e9827823", "filename": "libstdc++-v3/testsuite/23_containers/set/capacity/29134.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fcapacity%2F29134.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fcapacity%2F29134.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fcapacity%2F29134.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -23,8 +23,6 @@\n // libstdc++/29134\n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::set<int> s;\n \n   VERIFY( s.max_size() =="}, {"sha": "29cf909bd45a8e23f0a27e20ac554ddf84bb45c5", "filename": "libstdc++-v3/testsuite/23_containers/set/cons/moveable.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fcons%2Fmoveable.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fcons%2Fmoveable.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fcons%2Fmoveable.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -28,8 +28,6 @@\n \n int main()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::set<int> a,b;\n   a.insert(2);\n   b.insert(1);"}, {"sha": "095219e912a3cf5e59fe350bafd3c29d2e7d6ba0", "filename": "libstdc++-v3/testsuite/23_containers/set/debug/construct5_neg.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fdebug%2Fconstruct5_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fdebug%2Fconstruct5_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fdebug%2Fconstruct5_neg.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -23,8 +23,6 @@\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   typedef __gnu_test::uneq_allocator<int> alloc_type;\n   typedef __gnu_debug::set<int, std::less<int>, alloc_type> test_type;\n "}, {"sha": "2787bdf3bc729a1d22553b7c9f6c8a83150fa79b", "filename": "libstdc++-v3/testsuite/23_containers/set/debug/invalidation/2.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fdebug%2Finvalidation%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fdebug%2Finvalidation%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fdebug%2Finvalidation%2F2.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -27,8 +27,6 @@ using std::advance;\n // Erase\n void test02()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   set<int> v;\n   for (int i = 0; i < 20; ++i)\n     v.insert(i);"}, {"sha": "1bf9768d2c2aa6f88018bbaff1c20468a10c4f1f", "filename": "libstdc++-v3/testsuite/23_containers/set/debug/move_assign_neg.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fdebug%2Fmove_assign_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fdebug%2Fmove_assign_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fdebug%2Fmove_assign_neg.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -22,8 +22,6 @@\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   typedef __gnu_test::propagating_allocator<int, false> alloc_type;\n   typedef __gnu_debug::set<int, std::less<int>, alloc_type> test_type;\n "}, {"sha": "3388c178cc930896a2a5661a698509935419dda3", "filename": "libstdc++-v3/testsuite/23_containers/set/debug/move_neg.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fdebug%2Fmove_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fdebug%2Fmove_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fdebug%2Fmove_neg.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -26,8 +26,6 @@ using __gnu_test::uneq_allocator;\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   typedef uneq_allocator<int> alloc_type;\n   typedef __gnu_debug::set<int, std::less<int>, alloc_type> test_type;\n "}, {"sha": "f2f1cade5bdb349410b047ade49486105c7abfdc", "filename": "libstdc++-v3/testsuite/23_containers/set/init-list.cc", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Finit-list.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Finit-list.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Finit-list.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -23,10 +23,8 @@\n \n using namespace std;\n \n-int test01()\n+void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   set<int> m({ 1, 5, 37 });\n   VERIFY(m.size() == 3);\n   VERIFY(m.count(1) == 1);\n@@ -48,8 +46,6 @@ int test01()\n   VERIFY(m.count(102) == 1);\n   VERIFY(m.count(42) == 1);\n   VERIFY(m.count(1) == 0);\n-\n-  return test;\n }\n \n int main()"}, {"sha": "e5ab1309f7db20560d37f3788f026462e24caed3", "filename": "libstdc++-v3/testsuite/23_containers/set/modifiers/17948.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fmodifiers%2F17948.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fmodifiers%2F17948.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fmodifiers%2F17948.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -21,7 +21,6 @@\n // libstdc++/17948\n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   using namespace std;\n \n   typedef set<int>::size_type size_type;"}, {"sha": "438dddd526ef317100b7993e3a84d6b787fc0a08", "filename": "libstdc++-v3/testsuite/23_containers/set/modifiers/dr130.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fmodifiers%2Fdr130.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fmodifiers%2Fdr130.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fmodifiers%2Fdr130.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -25,7 +25,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n   using namespace std;\n \n   set<int> s0;\n@@ -47,7 +46,6 @@ test01()\n void\n test02()\n {\n-  bool test __attribute__((unused)) = true;\n   using namespace std;\n \n   set<int> s0;"}, {"sha": "739e1c22e51c7d7b6742d524577092d1282276a0", "filename": "libstdc++-v3/testsuite/23_containers/set/modifiers/emplace/1.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fmodifiers%2Femplace%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fmodifiers%2Femplace%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fmodifiers%2Femplace%2F1.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -41,8 +41,6 @@ struct PathPointLess\n   { return __lhs.getType() < __rhs.getType(); }\n };\n \n-bool test __attribute__((unused)) = true;\n-\n void test01()\n {\n   typedef std::set<PathPoint, PathPointLess> Set;"}, {"sha": "d70ad27ce31dfb8d046f0d0846148ba19ef6dffb", "filename": "libstdc++-v3/testsuite/23_containers/set/modifiers/extract.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fmodifiers%2Fextract.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fmodifiers%2Fextract.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fmodifiers%2Fextract.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -26,8 +26,6 @@ using test_type = std::set<int>;\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   test_type c{ 1, 2, 3 };\n   test_type::node_type node;\n   test_type::insert_return_type ins;\n@@ -94,8 +92,6 @@ test01()\n void\n test02()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   test_type c{ 1, 2, 3 };\n   test_type::node_type node;\n   test_type::insert_return_type ins;"}, {"sha": "28141053c2147c0b2d3bdfb48ab75e2b82ab2bfd", "filename": "libstdc++-v3/testsuite/23_containers/set/modifiers/insert/1.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fmodifiers%2Finsert%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fmodifiers%2Finsert%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fmodifiers%2Finsert%2F1.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -25,7 +25,6 @@\n // and libstdc++/19433.\n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   using namespace std;\n \n   set<int> s0, s1;"}, {"sha": "001ce7be4bb361f2a79d386ffa60a29f320774d7", "filename": "libstdc++-v3/testsuite/23_containers/set/modifiers/insert/2.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fmodifiers%2Finsert%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fmodifiers%2Finsert%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fmodifiers%2Finsert%2F2.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -26,7 +26,6 @@\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   using __gnu_test::rvalstruct;\n \n   typedef std::set<rvalstruct> Set;\n@@ -43,7 +42,6 @@ void test01()\n \n void test02()\n {\n-  bool test __attribute__((unused)) = true;\n   using __gnu_test::rvalstruct;\n \n   typedef std::set<rvalstruct> Set;"}, {"sha": "bcb0113bb90413a95e383b92caeeb884529a907d", "filename": "libstdc++-v3/testsuite/23_containers/set/modifiers/insert/3.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fmodifiers%2Finsert%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fmodifiers%2Finsert%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fmodifiers%2Finsert%2F3.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -26,7 +26,6 @@\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   using __gnu_test::rvalstruct;\n \n   typedef std::set<rvalstruct> Set;\n@@ -42,7 +41,6 @@ void test01()\n \n void test02()\n {\n-  bool test __attribute__((unused)) = true;\n   using __gnu_test::rvalstruct;\n \n   typedef std::set<rvalstruct> Set;"}, {"sha": "85c1186e87d68a9d811ff8de33f777622b075521", "filename": "libstdc++-v3/testsuite/23_containers/set/modifiers/merge.cc", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fmodifiers%2Fmerge.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fmodifiers%2Fmerge.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fmodifiers%2Fmerge.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -26,8 +26,6 @@ using test_type = std::set<int>;\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   const test_type c0{ 1, 2, 3 };\n   test_type c1 = c0, c2 = c0;\n   c1.merge(c2);\n@@ -47,8 +45,6 @@ test01()\n void\n test02()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   const test_type c0{ 1, 2, 3 };\n   test_type c1 = c0;\n   std::set<int, std::less<>> c2( c0.begin(), c0.end() );\n@@ -69,8 +65,6 @@ test02()\n void\n test03()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   const test_type c0{ 1, 2, 3 };\n   test_type c1 = c0;\n   std::set<int, std::greater<>> c2( c0.begin(), c0.end() );\n@@ -95,8 +89,6 @@ test03()\n void\n test04()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   const test_type c0{ 1, 2, 3 };\n   test_type c1 = c0;\n   std::multiset<int, std::greater<>> c2( c0.begin(), c0.end() );"}, {"sha": "4f14e3e4e5fcc1e1924a498522c520ea1e0fab85", "filename": "libstdc++-v3/testsuite/23_containers/set/modifiers/swap/1.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fmodifiers%2Fswap%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fmodifiers%2Fswap%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fmodifiers%2Fswap%2F1.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -36,7 +36,6 @@ namespace std\n // Should use set specialization for swap.\n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   std::set<T> A;\n   std::set<T> B;\n   swap_calls = 0;\n@@ -47,7 +46,6 @@ void test01()\n // Should use set specialization for swap.\n void test02()\n {\n-  bool test __attribute__((unused)) = true;\n   using namespace std;\n   set<T> A;\n   set<T> B;"}, {"sha": "3958378993989f9cfeaeac1ddf764c03b1cf924a", "filename": "libstdc++-v3/testsuite/23_containers/set/modifiers/swap/2.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fmodifiers%2Fswap%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fmodifiers%2Fswap%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fmodifiers%2Fswap%2F2.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -27,7 +27,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n   using namespace std;\n \n   typedef __gnu_test::uneq_allocator<char> my_alloc;"}, {"sha": "5dfa2b675a29e3e08454beec024d6c3fe9c7ce5b", "filename": "libstdc++-v3/testsuite/23_containers/set/modifiers/swap/3.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fmodifiers%2Fswap%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fmodifiers%2Fswap%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fmodifiers%2Fswap%2F3.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -27,7 +27,6 @@\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n   using namespace std;\n \n   typedef __gnu_test::uneq_allocator<char> my_alloc;"}, {"sha": "ad393f2fee5dfad876e85e76e83385828efcddb9", "filename": "libstdc++-v3/testsuite/23_containers/set/operations/1.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Foperations%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Foperations%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Foperations%2F1.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -24,7 +24,6 @@\n // A few tests for equal_range, in the occasion of libstdc++/29385.\n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   using namespace std;\n \n   set<int> s0;"}, {"sha": "5ff15ab3fe94214b08067a110296f080f41bbf1c", "filename": "libstdc++-v3/testsuite/23_containers/set/operations/count.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Foperations%2Fcount.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Foperations%2Fcount.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Foperations%2Fcount.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -23,7 +23,6 @@\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   using namespace std;\n \n   set<int> s0;"}, {"sha": "9d9c80803432167e48ebcb8e6ff32f17fdbe5652", "filename": "libstdc++-v3/testsuite/23_containers/set/operators/1_neg.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Foperators%2F1_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Foperators%2F1_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Foperators%2F1_neg.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -26,8 +26,6 @@\n // libstdc++/86: map & set iterator comparisons are not type-safe\n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::set<unsigned int> setByIndex;\n   std::set<std::string> setByName;\n   "}, {"sha": "cdad2760b8e7f06757fb5963a5ecdd0b09b002ee", "filename": "libstdc++-v3/testsuite/23_containers/unordered_map/allocator/copy.cc", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fallocator%2Fcopy.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fallocator%2Fcopy.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fallocator%2Fcopy.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -39,7 +39,6 @@ using __gnu_test::propagating_allocator;\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef propagating_allocator<T, false> alloc_type;\n   typedef std::unordered_map<T, T, hash, equal_to, alloc_type> test_type;\n   test_type v1(alloc_type(1));\n@@ -52,7 +51,6 @@ void test01()\n \n void test02()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef propagating_allocator<T, true> alloc_type;\n   typedef std::unordered_map<T, T, hash, equal_to, alloc_type> test_type;\n   test_type v1(alloc_type(1));\n@@ -65,7 +63,6 @@ void test02()\n \n void test03()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef propagating_allocator<T, true> alloc_type;\n   typedef std::unordered_map<T, T, hash, equal_to, alloc_type> test_type;\n   test_type v1(alloc_type(1));"}, {"sha": "434c09719d2925a49720d6db9384146dde5c1550", "filename": "libstdc++-v3/testsuite/23_containers/unordered_map/allocator/copy_assign.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fallocator%2Fcopy_assign.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fallocator%2Fcopy_assign.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fallocator%2Fcopy_assign.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -39,7 +39,6 @@ using __gnu_test::propagating_allocator;\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef propagating_allocator<T, false> alloc_type;\n   typedef std::unordered_map<T, T, hash, equal_to, alloc_type> test_type;\n   test_type v1(alloc_type(1));\n@@ -55,7 +54,6 @@ void test01()\n \n void test02()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef propagating_allocator<T, true> alloc_type;\n   typedef std::unordered_map<T, T, hash, equal_to, alloc_type> test_type;\n   test_type v1(alloc_type(1));"}, {"sha": "1efc6ebee8779de157a69965c2b75b39de89e292", "filename": "libstdc++-v3/testsuite/23_containers/unordered_map/allocator/minimal.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fallocator%2Fminimal.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fallocator%2Fminimal.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fallocator%2Fminimal.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -46,7 +46,6 @@ template class std::unordered_map<T, T, hash, equal_to, SimpleAllocator<T>>;\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef SimpleAllocator<T> alloc_type;\n   typedef std::allocator_traits<alloc_type> traits_type;\n   typedef std::unordered_map<T, T, hash, equal_to, alloc_type> test_type;"}, {"sha": "ca8fee13bd91f33451ee9bf74301455cf7bd67a6", "filename": "libstdc++-v3/testsuite/23_containers/unordered_map/allocator/move.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fallocator%2Fmove.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fallocator%2Fmove.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fallocator%2Fmove.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -39,7 +39,6 @@ using __gnu_test::uneq_allocator;\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef uneq_allocator<T> alloc_type;\n   typedef std::unordered_map<T, T, hash, equal_to, alloc_type> test_type;\n   test_type v1(alloc_type(1));\n@@ -54,7 +53,6 @@ void test01()\n \n void test02()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef uneq_allocator<T> alloc_type;\n   typedef std::unordered_map<T, T, hash, equal_to, alloc_type> test_type;\n   test_type v1(alloc_type(1));"}, {"sha": "a399dd1a616cad5686bc4c6c0496c3276ed22c0c", "filename": "libstdc++-v3/testsuite/23_containers/unordered_map/allocator/move_assign.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fallocator%2Fmove_assign.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fallocator%2Fmove_assign.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fallocator%2Fmove_assign.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -27,7 +27,6 @@ using __gnu_test::counter_type;\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef propagating_allocator<counter_type, false> alloc_type;\n   typedef __gnu_test::counter_type_hasher hash;\n   typedef std::unordered_map<counter_type, counter_type, hash,\n@@ -55,7 +54,6 @@ void test01()\n \n void test02()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef propagating_allocator<counter_type, true> alloc_type;\n   typedef __gnu_test::counter_type_hasher hash;\n   typedef std::unordered_map<counter_type, counter_type, hash,"}, {"sha": "cfbe09ce5d404ef34e61de0da65cc40a5475d573", "filename": "libstdc++-v3/testsuite/23_containers/unordered_map/allocator/swap.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fallocator%2Fswap.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fallocator%2Fswap.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fallocator%2Fswap.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -56,7 +56,6 @@ operator!=(const propagating_allocator<std::pair<const T, T>, false>&,\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef propagating_allocator<std::pair<const T, T>, false> alloc_type;\n   typedef std::unordered_map<T, T, hash, equal_to, alloc_type> test_type;\n   test_type v1(alloc_type(1));\n@@ -74,7 +73,6 @@ void test01()\n \n void test02()\n {\n-  bool test __attribute__((unused)) = true;\n   typedef propagating_allocator<std::pair<const T, T>, true> alloc_type;\n   typedef std::unordered_map<T, T, hash, equal_to, alloc_type> test_type;\n   test_type v1(alloc_type(1));"}, {"sha": "d42f1c02f0e7742415942ba8cc50a633b880c789", "filename": "libstdc++-v3/testsuite/23_containers/unordered_map/cons/moveable.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fcons%2Fmoveable.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fcons%2Fmoveable.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fcons%2Fmoveable.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -28,8 +28,6 @@\n \n int main()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   std::unordered_map<int, int> a,b;\n   a[2]=0;\n   b[1]=0;"}, {"sha": "eae800c98dadbfe26e495eeca6c12c5f820653b9", "filename": "libstdc++-v3/testsuite/23_containers/unordered_map/debug/construct5_neg.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fdebug%2Fconstruct5_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fdebug%2Fconstruct5_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fdebug%2Fconstruct5_neg.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -23,8 +23,6 @@\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   typedef __gnu_test::uneq_allocator<std::pair<const int, int>> alloc_type;\n   typedef __gnu_debug::unordered_map<int, int, std::hash<int>,\n \t\t\t\t     std::equal_to<int>,"}, {"sha": "321777b19c86a0666351063d7601ef08a5c9520f", "filename": "libstdc++-v3/testsuite/23_containers/unordered_map/debug/move_assign_neg.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fdebug%2Fmove_assign_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fdebug%2Fmove_assign_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fdebug%2Fmove_assign_neg.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -22,8 +22,6 @@\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   typedef __gnu_test::propagating_allocator<std::pair<const int, int>,\n \t\t\t\t\t    false> alloc_type;\n   typedef __gnu_debug::unordered_map<int, int,"}, {"sha": "0cca6ea6e3322753df909ee04c7e661e2382005b", "filename": "libstdc++-v3/testsuite/23_containers/unordered_map/debug/move_neg.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fdebug%2Fmove_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fdebug%2Fmove_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fdebug%2Fmove_neg.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -26,8 +26,6 @@ using __gnu_test::uneq_allocator;\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   typedef uneq_allocator<std::pair<const int, int> > alloc_type;\n   typedef __gnu_debug::unordered_map<\n     int, int, std::hash<int>, std::equal_to<int>, alloc_type> test_type;"}, {"sha": "9307e28728baeb077dacd4a1cdc749334e44f5ba", "filename": "libstdc++-v3/testsuite/23_containers/unordered_map/dr761.cc", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fdr761.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fdr761.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fdr761.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -24,8 +24,7 @@\n \n // DR 761. unordered_map needs an at() member function.\n void test01() \n-{ \n-  bool test __attribute__((unused)) = true;\n+{\n   typedef std::unordered_map<int, double> map_type;\n \n   {"}, {"sha": "84e12f0b1a69617fd5292bf1fbb463a566e3b0c9", "filename": "libstdc++-v3/testsuite/23_containers/unordered_map/erase/1.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Ferase%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Ferase%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Ferase%2F1.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -37,8 +37,6 @@ namespace\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-  \n   typedef std::unordered_map<std::string, int> Map;\n   typedef Map::iterator       iterator;\n   typedef Map::const_iterator const_iterator;"}, {"sha": "fab22acf3f73aa7898f7e0509004cc51bf90ae90", "filename": "libstdc++-v3/testsuite/23_containers/unordered_map/erase/24061-map.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Ferase%2F24061-map.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Ferase%2F24061-map.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Ferase%2F24061-map.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -26,8 +26,6 @@\n // libstdc++/24061\n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-  \n   typedef std::unordered_map<std::string, int> Map;\n   typedef Map::iterator       iterator;\n   typedef Map::const_iterator const_iterator;"}, {"sha": "f665fdd207f6d8e20941f2ad6785d05976df10fc", "filename": "libstdc++-v3/testsuite/23_containers/unordered_map/erase/54276.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Ferase%2F54276.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Ferase%2F54276.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Ferase%2F54276.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -22,8 +22,6 @@\n #include <unordered_map>\n #include <testsuite_hooks.h>\n \n-bool test __attribute__((unused)) = true;\n-\n struct A\n {\n   int x;"}, {"sha": "344112abee30d13dad690cddc3ff23a0dd1e64f4", "filename": "libstdc++-v3/testsuite/23_containers/unordered_map/hash_policy/dr1189.cc", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fhash_policy%2Fdr1189.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fhash_policy%2Fdr1189.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fhash_policy%2Fdr1189.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -24,9 +24,7 @@\n // DR 1189. Awkward interface for changing the number of buckets\n // in an unordered associative container\n void test01() \n-{ \n-  bool test __attribute__((unused)) = true;\n-  \n+{\n   std::unordered_map<int, double> m1;\n   m1.reserve(10);\n   VERIFY( m1.bucket_count() >= 10 );"}, {"sha": "04342a982cbe9c6e22361a977ee40d32ff139073", "filename": "libstdc++-v3/testsuite/23_containers/unordered_map/init-list.cc", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Finit-list.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Finit-list.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Finit-list.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -23,10 +23,8 @@\n \n using namespace std;\n \n-int test01()\n+void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   unordered_map<int,double> m({ { 1, 1.0 }, { 2, 2.0 }, { 42, 237.0 } });\n   VERIFY(m.size() == 3);\n   VERIFY(m[1] == 1.0);\n@@ -44,7 +42,6 @@ int test01()\n   VERIFY(m[6] == 66.0);\n   VERIFY(m[7] == 77.0);\n   VERIFY(m[8] == 88.0);\n-  return test;\n }\n \n int main()"}, {"sha": "1e0495203e71c3d1b9e2ef16650a3ebd48089322", "filename": "libstdc++-v3/testsuite/23_containers/unordered_map/insert/24061-map.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Finsert%2F24061-map.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Finsert%2F24061-map.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Finsert%2F24061-map.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -26,8 +26,6 @@\n // libstdc++/24061\n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-  \n   typedef std::unordered_map<std::string, int> Map;\n   typedef Map::iterator       iterator;\n   typedef Map::const_iterator const_iterator;"}, {"sha": "921b8f4c30c8a3d3fbe7fe6499e437ad36ab587c", "filename": "libstdc++-v3/testsuite/23_containers/unordered_map/insert/57619.cc", "status": "renamed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Finsert%2F57619.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Finsert%2F57619.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Finsert%2F57619.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -23,8 +23,6 @@\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   {\n     std::unordered_map<std::string, std::string> mymap;\n     std::pair<std::string, std::string> mypair{std::string(\"key\"),", "previous_filename": "libstdc++-v3/testsuite/23_containers/unordered_map/insert/57619.C"}, {"sha": "86cdee5e7e1760125b1cce6521f1a1ba1e1edee1", "filename": "libstdc++-v3/testsuite/23_containers/unordered_map/insert/array_syntax.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Finsert%2Farray_syntax.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Finsert%2Farray_syntax.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Finsert%2Farray_syntax.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -26,8 +26,6 @@\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   typedef std::unordered_map<std::string, int> Map;\n \n   Map m;"}, {"sha": "f7b1c45aead4a2190dd9b6decc12890a4fbf1c28", "filename": "libstdc++-v3/testsuite/23_containers/unordered_map/insert/array_syntax_move.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Finsert%2Farray_syntax_move.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Finsert%2Farray_syntax_move.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Finsert%2Farray_syntax_move.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -28,7 +28,6 @@\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   using __gnu_test::rvalstruct;\n \n   typedef std::unordered_map<rvalstruct, rvalstruct> Map;"}, {"sha": "a89400ffe3d241d58674678655487e40da2c38ea", "filename": "libstdc++-v3/testsuite/23_containers/unordered_map/insert/map_range.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Finsert%2Fmap_range.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Finsert%2Fmap_range.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Finsert%2Fmap_range.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -27,8 +27,6 @@\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   typedef std::unordered_map<std::string, int> Map;\n   typedef std::pair<const std::string, int> Pair;\n \n@@ -57,8 +55,6 @@ void test01()\n \n void test02()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   typedef std::unordered_map<std::string, int> Map;\n   typedef std::pair<const std::string, int> Pair;\n "}, {"sha": "eee277cb4eec4647b5e161c0cdd75dae32087b0a", "filename": "libstdc++-v3/testsuite/23_containers/unordered_map/insert/map_single.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Finsert%2Fmap_single.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Finsert%2Fmap_single.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Finsert%2Fmap_single.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -26,8 +26,6 @@\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   typedef std::unordered_map<std::string, int> Map;\n   typedef std::pair<const std::string, int> Pair;\n \n@@ -45,8 +43,6 @@ void test01()\n \n void test02()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   typedef std::unordered_map<std::string, int> Map;\n   typedef std::pair<const std::string, int> Pair;\n "}, {"sha": "809f7bf24d3e853d3ffa89f91f854c969e685cfd", "filename": "libstdc++-v3/testsuite/23_containers/unordered_map/insert/map_single_move-1.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Finsert%2Fmap_single_move-1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Finsert%2Fmap_single_move-1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Finsert%2Fmap_single_move-1.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -28,7 +28,6 @@\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   using __gnu_test::rvalstruct;\n \n   typedef std::unordered_map<int, rvalstruct> Map;\n@@ -48,7 +47,6 @@ void test01()\n \n void test02()\n {\n-  bool test __attribute__((unused)) = true;\n   using __gnu_test::rvalstruct;\n \n   typedef std::unordered_map<int, rvalstruct> Map;"}, {"sha": "952a7f2a13944ec9d83b1540e4376ce37a014532", "filename": "libstdc++-v3/testsuite/23_containers/unordered_map/insert/map_single_move-2.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Finsert%2Fmap_single_move-2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Finsert%2Fmap_single_move-2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Finsert%2Fmap_single_move-2.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -28,7 +28,6 @@\n \n void test01()\n {\n-  bool test __attribute__((unused)) = true;\n   using __gnu_test::rvalstruct;\n \n   typedef std::unordered_map<rvalstruct, rvalstruct> Map;\n@@ -49,7 +48,6 @@ void test01()\n \n void test02()\n {\n-  bool test __attribute__((unused)) = true;\n   using __gnu_test::rvalstruct;\n \n   typedef std::unordered_map<rvalstruct, rvalstruct> Map;"}, {"sha": "bf2e733ff8d24fd0d3a10feb4c4656f029f68c99", "filename": "libstdc++-v3/testsuite/23_containers/unordered_map/modifiers/61667.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fmodifiers%2F61667.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fmodifiers%2F61667.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fmodifiers%2F61667.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -20,8 +20,6 @@\n #include <unordered_map>\n #include <testsuite_hooks.h>\n \n-bool test __attribute__((unused)) = true;\n-\n void test01()\n {\n   std::unordered_map<int, int> um(20);"}, {"sha": "0027171d990ecdc9aec367eac2ce028c33e643a1", "filename": "libstdc++-v3/testsuite/23_containers/unordered_map/modifiers/emplace.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fmodifiers%2Femplace.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fmodifiers%2Femplace.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fmodifiers%2Femplace.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -39,8 +39,6 @@ class PathPoint\n   std::vector<double> coords;\n };\n \n-bool test __attribute__((unused)) = true;\n-\n void test01()\n {\n   typedef std::unordered_map<char, std::vector<double>> Map;"}, {"sha": "24609aef56fa09c2e8c465962b0ce7595b2d7d1c", "filename": "libstdc++-v3/testsuite/23_containers/unordered_map/modifiers/extract.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fmodifiers%2Fextract.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fmodifiers%2Fextract.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fmodifiers%2Fextract.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -25,8 +25,6 @@ using test_type = std::unordered_map<int, int>;\n void\n test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   test_type c{ {1, 10}, {2, 20}, {3, 30} };\n   test_type::node_type node;\n   test_type::insert_return_type ins;\n@@ -100,8 +98,6 @@ test01()\n void\n test02()\n {\n-  bool test __attribute__((unused)) = true;\n-\n   test_type c{ {1, 10}, {2, 20}, {3, 30} };\n   test_type::node_type node;\n   test_type::insert_return_type ins;"}, {"sha": "4a64398f78c19d6846e72f65266259ccc8af768b", "filename": "libstdc++-v3/testsuite/23_containers/unordered_map/modifiers/insert_or_assign.cc", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fmodifiers%2Finsert_or_assign.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9260b7eb688df43a724e25421ba40f35a89fee9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fmodifiers%2Finsert_or_assign.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fmodifiers%2Finsert_or_assign.cc?ref=a9260b7eb688df43a724e25421ba40f35a89fee9", "patch": "@@ -21,9 +21,6 @@\n #include <unordered_map>\n #include <testsuite_hooks.h>\n \n-\n-bool test __attribute__((unused)) = true;\n-\n struct Val\n {\n   bool moved_from_ctor = false;"}]}