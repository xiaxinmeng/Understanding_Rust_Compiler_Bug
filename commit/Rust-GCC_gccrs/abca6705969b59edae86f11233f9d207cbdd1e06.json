{"sha": "abca6705969b59edae86f11233f9d207cbdd1e06", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWJjYTY3MDU5NjliNTllZGFlODZmMTEyMzNmOWQyMDdjYmRkMWUwNg==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "iant@golang.org", "date": "2020-12-31T19:23:30Z"}, "committer": {"name": "Ian Lance Taylor", "email": "iant@golang.org", "date": "2021-01-01T23:10:06Z"}, "message": "internal/cpu, golang.org/x/sys/cpu: support other GOARCH values\n\nAdd support (mostly dummy support) for GOARCH values supported by\ngofrontend but not gc.  Fix PPC handling.\n\nFixes https://gcc.gnu.org/PR98493\n\nReviewed-on: https://go-review.googlesource.com/c/gofrontend/+/280932", "tree": {"sha": "29e98635d93a1d559f1c07cc7a0d025c3520a56b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/29e98635d93a1d559f1c07cc7a0d025c3520a56b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/abca6705969b59edae86f11233f9d207cbdd1e06", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/abca6705969b59edae86f11233f9d207cbdd1e06", "html_url": "https://github.com/Rust-GCC/gccrs/commit/abca6705969b59edae86f11233f9d207cbdd1e06", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/abca6705969b59edae86f11233f9d207cbdd1e06/comments", "author": {"login": "ianlancetaylor", "id": 3194333, "node_id": "MDQ6VXNlcjMxOTQzMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/3194333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ianlancetaylor", "html_url": "https://github.com/ianlancetaylor", "followers_url": "https://api.github.com/users/ianlancetaylor/followers", "following_url": "https://api.github.com/users/ianlancetaylor/following{/other_user}", "gists_url": "https://api.github.com/users/ianlancetaylor/gists{/gist_id}", "starred_url": "https://api.github.com/users/ianlancetaylor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ianlancetaylor/subscriptions", "organizations_url": "https://api.github.com/users/ianlancetaylor/orgs", "repos_url": "https://api.github.com/users/ianlancetaylor/repos", "events_url": "https://api.github.com/users/ianlancetaylor/events{/privacy}", "received_events_url": "https://api.github.com/users/ianlancetaylor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ianlancetaylor", "id": 3194333, "node_id": "MDQ6VXNlcjMxOTQzMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/3194333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ianlancetaylor", "html_url": "https://github.com/ianlancetaylor", "followers_url": "https://api.github.com/users/ianlancetaylor/followers", "following_url": "https://api.github.com/users/ianlancetaylor/following{/other_user}", "gists_url": "https://api.github.com/users/ianlancetaylor/gists{/gist_id}", "starred_url": "https://api.github.com/users/ianlancetaylor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ianlancetaylor/subscriptions", "organizations_url": "https://api.github.com/users/ianlancetaylor/orgs", "repos_url": "https://api.github.com/users/ianlancetaylor/repos", "events_url": "https://api.github.com/users/ianlancetaylor/events{/privacy}", "received_events_url": "https://api.github.com/users/ianlancetaylor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d816b0c144d15e6570eb5b124b9f3ccbe3d40082", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d816b0c144d15e6570eb5b124b9f3ccbe3d40082", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d816b0c144d15e6570eb5b124b9f3ccbe3d40082"}], "stats": {"total": 127, "additions": 78, "deletions": 49}, "files": [{"sha": "6039cbc15f577ffe66fc4ab92974dea62d49ad0b", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/abca6705969b59edae86f11233f9d207cbdd1e06/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/abca6705969b59edae86f11233f9d207cbdd1e06/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=abca6705969b59edae86f11233f9d207cbdd1e06", "patch": "@@ -1,4 +1,4 @@\n-47bdc8bb36f16f9d1dec72df5dd6b45d7b0b0725\n+6857530fb1662c05a3ce754df2bd9fa5acd3a35b\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "d8bb8119f3f95028d7fcff8f8590a55e56aea7b1", "filename": "libgo/go/golang.org/x/sys/cpu/cpu_other.go", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/abca6705969b59edae86f11233f9d207cbdd1e06/libgo%2Fgo%2Fgolang.org%2Fx%2Fsys%2Fcpu%2Fcpu_other.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/abca6705969b59edae86f11233f9d207cbdd1e06/libgo%2Fgo%2Fgolang.org%2Fx%2Fsys%2Fcpu%2Fcpu_other.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fgolang.org%2Fx%2Fsys%2Fcpu%2Fcpu_other.go?ref=abca6705969b59edae86f11233f9d207cbdd1e06", "patch": "@@ -0,0 +1,23 @@\n+// Copyright 2020 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+// +build !386\n+// +build !amd64\n+// +build !amd64p32\n+// +build !arm\n+// +build !arm64\n+// +build !mips\n+// +build !mipsle\n+// +build !mips64\n+// +build !mips64le\n+// +build !ppc64\n+// +build !ppc64le\n+// +build !riscv\n+// +build !riscv64\n+// +build !s390x\n+// +build !wasm\n+\n+package cpu\n+\n+func initOptions() {}"}, {"sha": "aef0a82a8ef3e408c584d5a2227e0cb499f121a5", "filename": "libgo/go/golang.org/x/sys/cpu/cpu_other_arch.go", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/abca6705969b59edae86f11233f9d207cbdd1e06/libgo%2Fgo%2Fgolang.org%2Fx%2Fsys%2Fcpu%2Fcpu_other_arch.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/abca6705969b59edae86f11233f9d207cbdd1e06/libgo%2Fgo%2Fgolang.org%2Fx%2Fsys%2Fcpu%2Fcpu_other_arch.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fgolang.org%2Fx%2Fsys%2Fcpu%2Fcpu_other_arch.go?ref=abca6705969b59edae86f11233f9d207cbdd1e06", "patch": "@@ -0,0 +1,20 @@\n+// Copyright 2020 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+// +build !aix\n+// +build !linux\n+// +build !zos\n+\n+// +build !386\n+// +build !amd64\n+// +build !amd64p32\n+// +build !arm\n+// +build !arm64\n+// +build !mips64\n+// +build !mips64le\n+// +build !wasm\n+\n+package cpu\n+\n+func archInit() {}"}, {"sha": "e229457fa3825adaaede18458b3e1e20acd0304e", "filename": "libgo/go/golang.org/x/sys/cpu/cpu_riscv.go", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/abca6705969b59edae86f11233f9d207cbdd1e06/libgo%2Fgo%2Fgolang.org%2Fx%2Fsys%2Fcpu%2Fcpu_riscv.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/abca6705969b59edae86f11233f9d207cbdd1e06/libgo%2Fgo%2Fgolang.org%2Fx%2Fsys%2Fcpu%2Fcpu_riscv.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fgolang.org%2Fx%2Fsys%2Fcpu%2Fcpu_riscv.go?ref=abca6705969b59edae86f11233f9d207cbdd1e06", "patch": "@@ -5,3 +5,5 @@\n // +build riscv\n \n package cpu\n+\n+func initOptions() {}"}, {"sha": "a6cff4f096ec0a3c1d0613cba75c119256c09d5a", "filename": "libgo/go/internal/cpu/cpu_amd64p32.go", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/abca6705969b59edae86f11233f9d207cbdd1e06/libgo%2Fgo%2Finternal%2Fcpu%2Fcpu_amd64p32.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/abca6705969b59edae86f11233f9d207cbdd1e06/libgo%2Fgo%2Finternal%2Fcpu%2Fcpu_amd64p32.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Finternal%2Fcpu%2Fcpu_amd64p32.go?ref=abca6705969b59edae86f11233f9d207cbdd1e06", "patch": "@@ -0,0 +1,7 @@\n+// Copyright 2020 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+package cpu\n+\n+const GOARCH = \"amd64p32\""}, {"sha": "d0f1f2e215042d4b1b63b29ebec39971b8878de8", "filename": "libgo/go/internal/cpu/cpu_other.go", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/abca6705969b59edae86f11233f9d207cbdd1e06/libgo%2Fgo%2Finternal%2Fcpu%2Fcpu_other.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/abca6705969b59edae86f11233f9d207cbdd1e06/libgo%2Fgo%2Finternal%2Fcpu%2Fcpu_other.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Finternal%2Fcpu%2Fcpu_other.go?ref=abca6705969b59edae86f11233f9d207cbdd1e06", "patch": "@@ -0,0 +1,21 @@\n+// Copyright 2020 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+// +build !386\n+// +build !amd64\n+// +build !amd64p32\n+// +build !arm\n+// +build !arm64\n+// +build !mips64\n+// +build !mips64le\n+// +build !ppc\n+// +build !ppc64\n+// +build !ppc64le\n+// +build !riscv64\n+// +build !s390x\n+\n+package cpu\n+\n+func doinit() {\n+}"}, {"sha": "a932684baf20c0bac3b6d55730260826f1ee9857", "filename": "libgo/go/internal/cpu/cpu_ppc64x_aix.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/abca6705969b59edae86f11233f9d207cbdd1e06/libgo%2Fgo%2Finternal%2Fcpu%2Fcpu_ppc64x_aix.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/abca6705969b59edae86f11233f9d207cbdd1e06/libgo%2Fgo%2Finternal%2Fcpu%2Fcpu_ppc64x_aix.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Finternal%2Fcpu%2Fcpu_ppc64x_aix.go?ref=abca6705969b59edae86f11233f9d207cbdd1e06", "patch": "@@ -2,7 +2,7 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// +build ppc64 ppc64le\n+// +build ppc ppc64 ppc64le\n \n package cpu\n "}, {"sha": "068a799781ab6638c0e528d011665b415d1c270b", "filename": "libgo/go/internal/cpu/cpu_ppc64x_linux.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/abca6705969b59edae86f11233f9d207cbdd1e06/libgo%2Fgo%2Finternal%2Fcpu%2Fcpu_ppc64x_linux.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/abca6705969b59edae86f11233f9d207cbdd1e06/libgo%2Fgo%2Finternal%2Fcpu%2Fcpu_ppc64x_linux.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Finternal%2Fcpu%2Fcpu_ppc64x_linux.go?ref=abca6705969b59edae86f11233f9d207cbdd1e06", "patch": "@@ -2,7 +2,7 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// +build ppc64 ppc64le\n+// +build ppc ppc64 ppc64le\n \n package cpu\n "}, {"sha": "56ff87524eea50b087e0207acab9d7082ba645ff", "filename": "libgo/go/internal/cpu/cpu_ppcx.go", "status": "removed", "additions": 0, "deletions": 44, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d816b0c144d15e6570eb5b124b9f3ccbe3d40082/libgo%2Fgo%2Finternal%2Fcpu%2Fcpu_ppcx.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d816b0c144d15e6570eb5b124b9f3ccbe3d40082/libgo%2Fgo%2Finternal%2Fcpu%2Fcpu_ppcx.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Finternal%2Fcpu%2Fcpu_ppcx.go?ref=d816b0c144d15e6570eb5b124b9f3ccbe3d40082", "patch": "@@ -1,44 +0,0 @@\n-// Copyright 2017 The Go Authors. All rights reserved.\n-// Use of this source code is governed by a BSD-style\n-// license that can be found in the LICENSE file.\n-\n-// +build ppc ppc64 ppc64le\n-\n-package cpu\n-\n-// ppc64x doesn't have a 'cpuid' equivalent, so we rely on HWCAP/HWCAP2.\n-// These are initialized by archauxv and should not be changed after they are\n-// initialized.\n-// On aix/ppc64, these values are initialized early in the runtime in runtime/os_aix.go.\n-var HWCap uint\n-var HWCap2 uint\n-\n-// HWCAP/HWCAP2 bits. These are exposed by the kernel.\n-const (\n-\t// ISA Level\n-\tPPC_FEATURE2_ARCH_2_07 = 0x80000000\n-\tPPC_FEATURE2_ARCH_3_00 = 0x00800000\n-\n-\t// CPU features\n-\tPPC_FEATURE2_DARN = 0x00200000\n-\tPPC_FEATURE2_SCV  = 0x00100000\n-)\n-\n-func doinit() {\n-\toptions = []option{\n-\t\t{Name: \"darn\", Feature: &PPC64.HasDARN},\n-\t\t{Name: \"scv\", Feature: &PPC64.HasSCV},\n-\t\t{Name: \"power9\", Feature: &PPC64.IsPOWER9},\n-\t\t{Name: \"power8\", Feature: &PPC64.IsPOWER8},\n-\t}\n-\n-\t// HWCAP2 feature bits\n-\tPPC64.IsPOWER8 = isSet(HWCap2, PPC_FEATURE2_ARCH_2_07)\n-\tPPC64.IsPOWER9 = isSet(HWCap2, PPC_FEATURE2_ARCH_3_00)\n-\tPPC64.HasDARN = isSet(HWCap2, PPC_FEATURE2_DARN)\n-\tPPC64.HasSCV = isSet(HWCap2, PPC_FEATURE2_SCV)\n-}\n-\n-func isSet(hwc uint, value uint) bool {\n-\treturn hwc&value != 0\n-}"}, {"sha": "9aa5c3acd42b4c5b94fa7f0537a418df0db9e056", "filename": "libgo/go/internal/cpu/cpu_x86.go", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/abca6705969b59edae86f11233f9d207cbdd1e06/libgo%2Fgo%2Finternal%2Fcpu%2Fcpu_x86.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/abca6705969b59edae86f11233f9d207cbdd1e06/libgo%2Fgo%2Finternal%2Fcpu%2Fcpu_x86.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Finternal%2Fcpu%2Fcpu_x86.go?ref=abca6705969b59edae86f11233f9d207cbdd1e06", "patch": "@@ -2,7 +2,7 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// +build 386 amd64\n+// +build 386 amd64 amd64p32\n \n package cpu\n \n@@ -56,7 +56,7 @@ func doinit() {\n \t\t{Name: \"ssse3\", Feature: &X86.HasSSSE3},\n \n \t\t// These capabilities should always be enabled on amd64:\n-\t\t{Name: \"sse2\", Feature: &X86.HasSSE2, Required: GOARCH == \"amd64\"},\n+\t\t{Name: \"sse2\", Feature: &X86.HasSSE2, Required: GOARCH == \"amd64\" || GOARCH == \"amd64p32\"},\n \t}\n \n \tmaxID, _, _, _ := cpuid(0, 0)"}]}