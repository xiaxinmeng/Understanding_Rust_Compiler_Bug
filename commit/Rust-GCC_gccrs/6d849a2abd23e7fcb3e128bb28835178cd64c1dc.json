{"sha": "6d849a2abd23e7fcb3e128bb28835178cd64c1dc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmQ4NDlhMmFiZDIzZTdmY2IzZTEyOGJiMjg4MzUxNzhjZDY0YzFkYw==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "1997-10-26T17:38:13Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1997-10-26T17:38:13Z"}, "message": "alias.c (find_base_value): Handle PRE_INC, PRE_DEC, POST_INC, and POS_DEC.\n\n        * alias.c (find_base_value): Handle PRE_INC, PRE_DEC, POST_INC,\n        and POS_DEC.\n        (find_base_term): Likewise.\n\n        * alias.c (true_dependence): Fix typo.\n\nFrom-SVN: r16182", "tree": {"sha": "b0a9353b5d4b6bd9dfa4bab7a31b42ab7d18dae7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b0a9353b5d4b6bd9dfa4bab7a31b42ab7d18dae7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6d849a2abd23e7fcb3e128bb28835178cd64c1dc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d849a2abd23e7fcb3e128bb28835178cd64c1dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d849a2abd23e7fcb3e128bb28835178cd64c1dc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d849a2abd23e7fcb3e128bb28835178cd64c1dc/comments", "author": null, "committer": null, "parents": [{"sha": "91585c63e4f946b21ec89f51bb8ec555444ddd1f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91585c63e4f946b21ec89f51bb8ec555444ddd1f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/91585c63e4f946b21ec89f51bb8ec555444ddd1f"}], "stats": {"total": 22, "additions": 21, "deletions": 1}, "files": [{"sha": "c27ecb19101fe88f420196ca19ef634b98f2314d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d849a2abd23e7fcb3e128bb28835178cd64c1dc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d849a2abd23e7fcb3e128bb28835178cd64c1dc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6d849a2abd23e7fcb3e128bb28835178cd64c1dc", "patch": "@@ -5,6 +5,12 @@ Sun Oct 26 10:06:11 1997  Toon Moene  <toon@moene.indiv.nluug.nl>\n \n Sun Oct 26 09:21:40 1997  Jeffrey A Law  (law@cygnus.com)\n \n+\t* alias.c (find_base_value): Handle PRE_INC, PRE_DEC, POST_INC,\n+\tand POS_DEC.\n+\t(find_base_term): Likewise.\n+\n+\t* alias.c (true_dependence): Fix typo.\n+\n \t* toplev.c (flag_rerun_loop_opt): New variable.\n \t(f_options): Handle -frerun-loop-opt.\n \t(rest_of_compilation): If -frerun-loop-opt, then run the loop"}, {"sha": "ea62cd56fe2f32e3a3cbfad488bb285b6320dec5", "filename": "gcc/alias.c", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d849a2abd23e7fcb3e128bb28835178cd64c1dc/gcc%2Falias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d849a2abd23e7fcb3e128bb28835178cd64c1dc/gcc%2Falias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Falias.c?ref=6d849a2abd23e7fcb3e128bb28835178cd64c1dc", "patch": "@@ -93,6 +93,13 @@ find_base_value (src)\n     case LABEL_REF:\n       return src;\n \n+    case PRE_INC:\n+    case PRE_DEC:\n+    case POST_INC:\n+    case POST_DEC:\n+      src = XEXP (src, 0);\n+      /* fall through */\n+\n     case REG:\n       /* At the start of a function argument registers have known base\n \t values which may be lost later.  Returning an ADDRESS\n@@ -463,6 +470,12 @@ find_base_term (x)\n     case HIGH:\n       return find_base_term (XEXP (x, 0));\n \n+    case PRE_INC:\n+    case PRE_DEC:\n+    case POST_INC:\n+    case POST_DEC:\n+      return find_base_term (XEXP (x, 0));\n+\n     case CONST:\n       x = XEXP (x, 0);\n       if (GET_CODE (x) != PLUS && GET_CODE (x) != MINUS)\n@@ -824,7 +837,8 @@ true_dependence (mem, mem_mode, x, varies)\n   if (mem_mode == VOIDmode)\n     mem_mode = GET_MODE (mem);\n \n-  if (! memrefs_conflict_p (mem_mode, mem_addr, SIZE_FOR_MODE (x), x_addr, 0))\n+  if (! memrefs_conflict_p (SIZE_FOR_MODE (mem_mode), mem_addr,\n+\t\t\t    SIZE_FOR_MODE (x), x_addr, 0))\n     return 0;\n \n   /* If both references are struct references, or both are not, nothing"}]}