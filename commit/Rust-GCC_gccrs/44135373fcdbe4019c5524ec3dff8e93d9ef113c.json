{"sha": "44135373fcdbe4019c5524ec3dff8e93d9ef113c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDQxMzUzNzNmY2RiZTQwMTljNTUyNGVjM2RmZjhlOTNkOWVmMTEzYw==", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2020-09-22T00:16:31Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2020-09-22T00:16:31Z"}, "message": "Daily bump.", "tree": {"sha": "ca72a962e3097e304a14b9ab2a3544e0be84faf8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ca72a962e3097e304a14b9ab2a3544e0be84faf8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/44135373fcdbe4019c5524ec3dff8e93d9ef113c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44135373fcdbe4019c5524ec3dff8e93d9ef113c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/44135373fcdbe4019c5524ec3dff8e93d9ef113c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44135373fcdbe4019c5524ec3dff8e93d9ef113c/comments", "author": null, "committer": null, "parents": [{"sha": "27edc6c3e296a3eea15be291b1f605a647e94107", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27edc6c3e296a3eea15be291b1f605a647e94107", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27edc6c3e296a3eea15be291b1f605a647e94107"}], "stats": {"total": 254, "additions": 253, "deletions": 1}, "files": [{"sha": "113fdc5d541f65d2f4511c6db17fa4b16a6793bb", "filename": "contrib/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44135373fcdbe4019c5524ec3dff8e93d9ef113c/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44135373fcdbe4019c5524ec3dff8e93d9ef113c/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=44135373fcdbe4019c5524ec3dff8e93d9ef113c", "patch": "@@ -1,3 +1,8 @@\n+2020-09-21  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* mklog.py: Parse first 10 lines for PR/DR number\n+\tnot only the first line.\n+\n 2020-09-17  Dimitrij Mojoski  <dmjpp@hotmail.com>\n \n \t* clang-format: Autodetect C++ standard in use rather than"}, {"sha": "c2f47525555040abb342053ba616be25529ba39c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 73, "deletions": 0, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44135373fcdbe4019c5524ec3dff8e93d9ef113c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44135373fcdbe4019c5524ec3dff8e93d9ef113c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=44135373fcdbe4019c5524ec3dff8e93d9ef113c", "patch": "@@ -1,3 +1,76 @@\n+2020-09-21  Marek Polacek  <polacek@redhat.com>\n+\n+\t* doc/invoke.texi: Document -Wctad-maybe-unsupported.\n+\n+2020-09-21  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/97139\n+\t* tree-vect-slp.c (vect_bb_slp_mark_live_stmts): Only mark the\n+\tpattern root, track visited vectorized stmts.\n+\n+2020-09-21  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* configure.ac: Use mallinfo mallinfo2 as first operand of\n+\tgcc_AC_CHECK_DECLS rather than [mallinfo, mallinfo2].\n+\t* configure: Regenerated.\n+\t* config.in: Regenerated.\n+\n+2020-09-21  Andrea Corallo  <andrea.corallo@arm.com>\n+\n+\t* config/aarch64/aarch64-builtins.c\n+\t(aarch64_general_expand_builtin): Use expand machinery not to\n+\talter the value of an rtx returned by force_reg.\n+\n+2020-09-21  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/97135\n+\t* tree-ssa-loop-im.c (sm_seq_push_down): Do not ignore\n+\tself-dependences.\n+\n+2020-09-21  Martin Liska  <mliska@suse.cz>\n+\n+\tPR tree-optimization/96915\n+\t* tree-switch-conversion.c (switch_conversion::expand): Accept\n+\talso integer constants.\n+\n+2020-09-21  Martin Liska  <mliska@suse.cz>\n+\n+\t* print-tree.c (print_node): Remove extra space.\n+\n+2020-09-21  Andrea Corallo  <andrea.corallo@arm.com>\n+\n+\tPR target/96968\n+\t* config/aarch64/aarch64-builtins.c\n+\t(aarch64_expand_fpsr_fpcr_setter): Fix comment nit.\n+\t(aarch64_expand_fpsr_fpcr_getter): New function, expand these\n+\tgetters using expand_insn machinery.\n+\t(aarch64_general_expand_builtin): Make use of.\n+\n+2020-09-21  Martin Liska  <mliska@suse.cz>\n+\n+\t* ggc-common.c (ggc_rlimit_bound): Use ONE_? macro.\n+\t(ggc_min_expand_heuristic): Likewise.\n+\t(ggc_min_heapsize_heuristic): Likewise.\n+\t* ggc-page.c (ggc_collect): Likewise.\n+\t* system.h (ONE_G): Likewise.\n+\n+2020-09-21  Martin Liska  <mliska@suse.cz>\n+\n+\t* ggc-common.c (ggc_prune_overhead_list): Use SIZE_AMOUNT.\n+\t* ggc-page.c (release_pages): Likewise.\n+\t(ggc_collect): Likewise.\n+\t(ggc_trim): Likewise.\n+\t(ggc_grow): Likewise.\n+\t* timevar.c (timer::print): Likewise.\n+\n+2020-09-21  Martin Liska  <mliska@suse.cz>\n+\n+\t* config.in: Regenerate.\n+\t* configure: Likewise.\n+\t* configure.ac: Detect for mallinfo2.\n+\t* ggc-common.c (defined): Use it.\n+\t* system.h: Handle also HAVE_MALLINFO2.\n+\n 2020-09-20  John David Anglin  < danglin@gcc.gnu.org>\n \n \t* config/pa/pa-hpux11.h (LINK_GCC_C_SEQUENCE_SPEC): Delete."}, {"sha": "ca3ee10cb82a5ec8b5ba09dbe51563d7fe18de09", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44135373fcdbe4019c5524ec3dff8e93d9ef113c/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44135373fcdbe4019c5524ec3dff8e93d9ef113c/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=44135373fcdbe4019c5524ec3dff8e93d9ef113c", "patch": "@@ -1 +1 @@\n-20200921\n+20200922"}, {"sha": "8241610121fc99373dbb0f9362b36cb523cbf4d1", "filename": "gcc/analyzer/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44135373fcdbe4019c5524ec3dff8e93d9ef113c/gcc%2Fanalyzer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44135373fcdbe4019c5524ec3dff8e93d9ef113c/gcc%2Fanalyzer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2FChangeLog?ref=44135373fcdbe4019c5524ec3dff8e93d9ef113c", "patch": "@@ -1,3 +1,19 @@\n+2020-09-21  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/97130\n+\t* region-model-impl-calls.cc (call_details::get_arg_type): New.\n+\t* region-model.cc (region_model::on_call_pre): Check that the\n+\tinitial arg is a pointer before calling impl_call_memset and\n+\timpl_call_strlen.\n+\t* region-model.h (call_details::get_arg_type): New decl.\n+\n+2020-09-21  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/93355\n+\t* sm-malloc.cc (malloc_state_machine::get_default_state): Look at\n+\tthe base region when considering pointers.  Treat pointers to\n+\tdecls as being non-heap.\n+\n 2020-09-18  David Malcolm  <dmalcolm@redhat.com>\n \n \t* checker-path.cc (warning_event::get_desc): Handle global state"}, {"sha": "69523ff8850a50348532db4a31961f57d4824683", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44135373fcdbe4019c5524ec3dff8e93d9ef113c/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44135373fcdbe4019c5524ec3dff8e93d9ef113c/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=44135373fcdbe4019c5524ec3dff8e93d9ef113c", "patch": "@@ -1,3 +1,7 @@\n+2020-09-21  Marek Polacek  <polacek@redhat.com>\n+\n+\t* c.opt (Wctad-maybe-unsupported): New option.\n+\n 2020-09-19  Martin Sebor  <msebor@redhat.com>\n \n \tPR c/50584"}, {"sha": "df4b24d2b2e5b684fd3df9917c85bdb647daf170", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44135373fcdbe4019c5524ec3dff8e93d9ef113c/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44135373fcdbe4019c5524ec3dff8e93d9ef113c/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=44135373fcdbe4019c5524ec3dff8e93d9ef113c", "patch": "@@ -1,3 +1,28 @@\n+2020-09-21  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/90583\n+\tDR 1722\n+\t* lambda.c (maybe_add_lambda_conv_op): Mark the conversion function\n+\tas noexcept.\n+\n+2020-09-21  Marek Polacek  <polacek@redhat.com>\n+\n+\t* pt.c (deduction_guides_for): Add a bool parameter.  Set it.\n+\t(do_class_deduction): Warn when CTAD succeeds but the type doesn't\n+\thave any explicit deduction guides.\n+\n+2020-09-21  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* decl.c (xref_tag_1): Use IDENTIFIER_LAMBDA_P to detect lambdas.\n+\t* lambda.c (begin_lambda_type): Use ts_current to push the tag.\n+\t* name-lookup.h (enum tag_scope): Drop ts_lambda.\n+\n+2020-09-21  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/97099\n+\t* decl.c (redeclaration_error_message): Detect a redeclaration of\n+\tdeduction guides.\n+\n 2020-09-19  Sandra Loosemore  <sandra@codesourcery.com>\n \n \t* cp-gimplify.c (enum bc_t, bc_label): Move to c-family."}, {"sha": "e8261289d5339e09569a36a5e848912ebb27285e", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44135373fcdbe4019c5524ec3dff8e93d9ef113c/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44135373fcdbe4019c5524ec3dff8e93d9ef113c/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=44135373fcdbe4019c5524ec3dff8e93d9ef113c", "patch": "@@ -1,3 +1,19 @@\n+2020-09-21  Harald Anlauf  <anlauf@gmx.de>\n+\t    Paul Thomas   <pault@gcc.gnu.org>\n+\n+\t* iresolve.c (gfc_resolve_mvbits): Remove unneeded conversion of\n+\tFROMPOS, LEN and TOPOS arguments to fit a C int.\n+\t* trans-intrinsic.c (gfc_conv_intrinsic_mvbits): Add inline\n+\texpansion of MVBITS intrinsic elemental subroutine and add code\n+\tfor runtime argument checking.\n+\t(gfc_conv_intrinsic_subroutine): Recognise MVBITS intrinsic, but\n+\tdefer handling to gfc_trans_call.\n+\t* trans-stmt.c (replace_ss):\n+\t(gfc_trans_call): Adjust to handle inline expansion, scalarization\n+\tof intrinsic subroutine MVBITS in gfc_conv_intrinsic_mvbits.\n+\t* trans.h (gfc_conv_intrinsic_mvbits): Add prototype for\n+\tgfc_conv_intrinsic_mvbits.\n+\n 2020-09-19  Sandra Loosemore  <sandra@codesourcery.com>\n \n \t* interface.c (gfc_compare_actual_formal): Add assertion after"}, {"sha": "a9a9fc13558f0aee98f8c84e44cd32550932cbb1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 73, "deletions": 0, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44135373fcdbe4019c5524ec3dff8e93d9ef113c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44135373fcdbe4019c5524ec3dff8e93d9ef113c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=44135373fcdbe4019c5524ec3dff8e93d9ef113c", "patch": "@@ -1,3 +1,76 @@\n+2020-09-21  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/97130\n+\t* gcc.dg/analyzer/pr97130.c: New test.\n+\n+2020-09-21  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/90583\n+\tDR 1722\n+\t* g++.dg/cpp0x/lambda/lambda-conv14.C: New test.\n+\n+2020-09-21  Marek Polacek  <polacek@redhat.com>\n+\n+\t* g++.dg/warn/Wctad-maybe-unsupported.C: New test.\n+\t* g++.dg/warn/Wctad-maybe-unsupported2.C: New test.\n+\t* g++.dg/warn/Wctad-maybe-unsupported3.C: New test.\n+\t* g++.dg/warn/Wctad-maybe-unsupported.h: New file.\n+\n+2020-09-21  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR c/50584\n+\t* gcc.dg/ipa/ipa-sra-1.c: Use a plain pointer for argv instead of array.\n+\t* gcc.dg/ipa/ipa-sra-12.c: Same.\n+\t* gcc.dg/ipa/ipa-sra-13.c: Same.\n+\t* gcc.dg/ipa/ipa-sra-14.c: Same.\n+\t* gcc.dg/ipa/ipa-sra-15.c: Same.\n+\n+2020-09-21  Harald Anlauf  <anlauf@gmx.de>\n+\t    Paul Thomas   <pault@gcc.gnu.org>\n+\n+\t* gfortran.dg/check_bits_2.f90: New test.\n+\n+2020-09-21  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\t* gcc.dg/ipa/symver1.c: Skip for Darwin.\n+\n+2020-09-21  Christophe Lyon  <christophe.lyon@linaro.org>\n+\n+\t* gcc.target/arm/csinc-1.c: Use dg-add-options\n+\tarm_arch_v8_1m_main.\n+\t* gcc.target/arm/csinv-1.c: Likewise.\n+\t* gcc.target/arm/csneg.c: Likewise.\n+\n+2020-09-21  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/97139\n+\t* gcc.dg/vect/pr97139.c: New testcase.\n+\n+2020-09-21  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/97099\n+\t* g++.dg/cpp1z/class-deduction74.C: New test.\n+\n+2020-09-21  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/97135\n+\t* gcc.dg/torture/pr97135.c: New testcase.\n+\n+2020-09-21  Martin Liska  <mliska@suse.cz>\n+\n+\tPR tree-optimization/96915\n+\t* gcc.target/aarch64/sve/pr96915.c: New test.\n+\n+2020-09-21  Andrea Corallo  <andrea.corallo@arm.com>\n+\n+\tPR target/96968\n+\t* gcc.target/aarch64/pr96968.c: New test.\n+\n+2020-09-21  Martin Liska  <mliska@suse.cz>\n+\n+\t* g++.dg/ext/timevar1.C: Prune more possible number values.\n+\t* g++.dg/ext/timevar2.C: Likewise.\n+\n 2020-09-20  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/90199"}, {"sha": "0c8094b5549ec830f15859c1474f562b78292c22", "filename": "libsanitizer/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44135373fcdbe4019c5524ec3dff8e93d9ef113c/libsanitizer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44135373fcdbe4019c5524ec3dff8e93d9ef113c/libsanitizer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2FChangeLog?ref=44135373fcdbe4019c5524ec3dff8e93d9ef113c", "patch": "@@ -1,3 +1,10 @@\n+2020-09-21  Ian Lance Taylor  <iant@golang.org>\n+\n+\t* libbacktrace/backtrace-rename.h (backtrace_uncompress_lzma):\n+\tDefine.\n+\t(backtrace_syminfo_to_full_callback): Define.\n+\t(backtrace_syminfo_to_full_error_callback): Define.\n+\n 2020-07-16  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* sanitizer_common/sanitizer_linux.cpp: Cherry-pick llvm-project"}, {"sha": "71fd7068b4f2b1e405a611e24ff8379a81631986", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44135373fcdbe4019c5524ec3dff8e93d9ef113c/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44135373fcdbe4019c5524ec3dff8e93d9ef113c/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=44135373fcdbe4019c5524ec3dff8e93d9ef113c", "patch": "@@ -1,3 +1,36 @@\n+2020-09-21  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/bits/c++config (__replacement_assert): Add noreturn\n+\tattribute.\n+\t(__glibcxx_assert_impl): Use __builtin_expect to hint that the\n+\tassertion is expected to pass.\n+\n+2020-09-21  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/std/ranges (drop_view::begin()): Adjust constraints\n+\tto match the correct condition for O(1) ranges::next (LWG 3482).\n+\t* testsuite/std/ranges/adaptors/drop.cc: Check that iterator is\n+\tcached for non-sized_range.\n+\n+2020-09-21  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/std/ranges (transform_view, elements_view): Relax\n+\tconstraints on operator- for iterators, as per LWG 3483.\n+\t* testsuite/std/ranges/adaptors/elements.cc: Check that we\n+\tcan take the difference of two iterators from a non-random\n+\taccess range.\n+\t* testsuite/std/ranges/adaptors/transform.cc: Likewise.\n+\n+2020-09-21  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/97132\n+\t* include/bits/align.h (align) [!_GLIBCXX_USE_C99_STDINT_TR1]:\n+\tRemove unused code.\n+\t(assume_aligned): Do not use __builtin_assume_aligned during\n+\tconstant evaluation.\n+\t* testsuite/20_util/assume_aligned/1.cc: Improve test.\n+\t* testsuite/20_util/assume_aligned/97132.cc: New test.\n+\n 2020-09-20  Jonathan Wakely  <jwakely@redhat.com>\n \n \tPR libstdc++/97101"}]}