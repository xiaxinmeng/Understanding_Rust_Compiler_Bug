{"sha": "3fd7fe218b325a5b3d1bd38b12ab0e6d00e1e7dc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2ZkN2ZlMjE4YjMyNWE1YjNkMWJkMzhiMTJhYjBlNmQwMGUxZTdkYw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2017-06-12T10:42:57Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2017-06-12T10:42:57Z"}, "message": "re PR tree-optimization/81053 (ICE on valid code at -O3 on x86_64-linux-gnu: in as_a, at is-a.h:192)\n\n2017-06-12  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/81053\n\t* tree-vect-loop.c (vect_is_simple_reduction): Handle PHI\n\twith backedge value not defined in loop.  Simplify def stmt\n\tcompute.\n\n\t* gcc.dg/torture/pr81053.c: New testcase.\n\nFrom-SVN: r249113", "tree": {"sha": "dd801f7d36dfdf64fc314abdee2c3f88c6a3b5fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dd801f7d36dfdf64fc314abdee2c3f88c6a3b5fb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3fd7fe218b325a5b3d1bd38b12ab0e6d00e1e7dc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3fd7fe218b325a5b3d1bd38b12ab0e6d00e1e7dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3fd7fe218b325a5b3d1bd38b12ab0e6d00e1e7dc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3fd7fe218b325a5b3d1bd38b12ab0e6d00e1e7dc/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d1609a232616d0a85f2f7bd9ebf4dae4b11fd481", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1609a232616d0a85f2f7bd9ebf4dae4b11fd481", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d1609a232616d0a85f2f7bd9ebf4dae4b11fd481"}], "stats": {"total": 88, "additions": 52, "deletions": 36}, "files": [{"sha": "9a95c6ce5cb1423245411687388b45f5c8229afb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fd7fe218b325a5b3d1bd38b12ab0e6d00e1e7dc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fd7fe218b325a5b3d1bd38b12ab0e6d00e1e7dc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3fd7fe218b325a5b3d1bd38b12ab0e6d00e1e7dc", "patch": "@@ -1,3 +1,10 @@\n+2017-06-12  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/81053\n+\t* tree-vect-loop.c (vect_is_simple_reduction): Handle PHI\n+\twith backedge value not defined in loop.  Simplify def stmt\n+\tcompute.\n+\n 2017-06-11  Tom de Vries  <tom@codesourcery.com>\n \n \tPR target/79939"}, {"sha": "71be107cae21d3efe9a6c4661d97ddbc46538253", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fd7fe218b325a5b3d1bd38b12ab0e6d00e1e7dc/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fd7fe218b325a5b3d1bd38b12ab0e6d00e1e7dc/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3fd7fe218b325a5b3d1bd38b12ab0e6d00e1e7dc", "patch": "@@ -1,3 +1,8 @@\n+2017-06-12  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/81053\n+\t* gcc.dg/torture/pr81053.c: New testcase.\n+\n 2017-06-10  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \tPR fortran/80988"}, {"sha": "98ab95dadeb90ac784d7bc41209b0c75d83e524d", "filename": "gcc/testsuite/gcc.dg/torture/pr81053.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fd7fe218b325a5b3d1bd38b12ab0e6d00e1e7dc/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr81053.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fd7fe218b325a5b3d1bd38b12ab0e6d00e1e7dc/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr81053.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr81053.c?ref=3fd7fe218b325a5b3d1bd38b12ab0e6d00e1e7dc", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+\n+int a, b[2], c, d;\n+\n+void fn1 ()\n+{ \n+  for (; d < 2; d++)\n+    { \n+      b[d] = a;\n+      a = c;\n+    }\n+}"}, {"sha": "cf9cd3b5073643fa9b403e8efd7ee31d01b60a5a", "filename": "gcc/tree-vect-loop.c", "status": "modified", "additions": 28, "deletions": 36, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fd7fe218b325a5b3d1bd38b12ab0e6d00e1e7dc/gcc%2Ftree-vect-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fd7fe218b325a5b3d1bd38b12ab0e6d00e1e7dc/gcc%2Ftree-vect-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop.c?ref=3fd7fe218b325a5b3d1bd38b12ab0e6d00e1e7dc", "patch": "@@ -2790,15 +2790,17 @@ vect_is_simple_reduction (loop_vec_info loop_info, gimple *phi,\n     }\n \n   def_stmt = SSA_NAME_DEF_STMT (loop_arg);\n-  if (gimple_nop_p (def_stmt))\n+  if (is_gimple_assign (def_stmt))\n     {\n-      if (dump_enabled_p ())\n-\tdump_printf_loc (MSG_MISSED_OPTIMIZATION, vect_location,\n-\t\t\t \"reduction: no def_stmt\\n\");\n-      return NULL;\n+      name = gimple_assign_lhs (def_stmt);\n+      phi_def = false;\n     }\n-\n-  if (!is_gimple_assign (def_stmt) && gimple_code (def_stmt) != GIMPLE_PHI)\n+  else if (gimple_code (def_stmt) == GIMPLE_PHI)\n+    {\n+      name = PHI_RESULT (def_stmt);\n+      phi_def = true;\n+    }\n+  else\n     {\n       if (dump_enabled_p ())\n \t{\n@@ -2809,37 +2811,27 @@ vect_is_simple_reduction (loop_vec_info loop_info, gimple *phi,\n       return NULL;\n     }\n \n-  if (is_gimple_assign (def_stmt))\n-    {\n-      name = gimple_assign_lhs (def_stmt);\n-      phi_def = false;\n-    }\n-  else\n-    {\n-      name = PHI_RESULT (def_stmt);\n-      phi_def = true;\n-    }\n-\n   nloop_uses = 0;\n   auto_vec<gphi *, 3> lcphis;\n-  FOR_EACH_IMM_USE_FAST (use_p, imm_iter, name)\n-    {\n-      gimple *use_stmt = USE_STMT (use_p);\n-      if (is_gimple_debug (use_stmt))\n-\tcontinue;\n-      if (flow_bb_inside_loop_p (loop, gimple_bb (use_stmt)))\n-\tnloop_uses++;\n-      else\n-\t/* We can have more than one loop-closed PHI.  */\n-\tlcphis.safe_push (as_a <gphi *> (use_stmt));\n-      if (nloop_uses > 1)\n-\t{\n-\t  if (dump_enabled_p ())\n-\t    dump_printf_loc (MSG_MISSED_OPTIMIZATION, vect_location,\n-\t\t\t     \"reduction used in loop.\\n\");\n-\t  return NULL;\n-\t}\n-    }\n+  if (flow_bb_inside_loop_p (loop, gimple_bb (def_stmt)))\n+    FOR_EACH_IMM_USE_FAST (use_p, imm_iter, name)\n+      {\n+\tgimple *use_stmt = USE_STMT (use_p);\n+\tif (is_gimple_debug (use_stmt))\n+\t  continue;\n+\tif (flow_bb_inside_loop_p (loop, gimple_bb (use_stmt)))\n+\t  nloop_uses++;\n+\telse\n+\t  /* We can have more than one loop-closed PHI.  */\n+\t  lcphis.safe_push (as_a <gphi *> (use_stmt));\n+\tif (nloop_uses > 1)\n+\t  {\n+\t    if (dump_enabled_p ())\n+\t      dump_printf_loc (MSG_MISSED_OPTIMIZATION, vect_location,\n+\t\t\t       \"reduction used in loop.\\n\");\n+\t    return NULL;\n+\t  }\n+      }\n \n   /* If DEF_STMT is a phi node itself, we expect it to have a single argument\n      defined in the inner loop.  */"}]}