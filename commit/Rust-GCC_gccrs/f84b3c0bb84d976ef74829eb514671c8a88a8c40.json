{"sha": "f84b3c0bb84d976ef74829eb514671c8a88a8c40", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Zjg0YjNjMGJiODRkOTc2ZWY3NDgyOWViNTE0NjcxYzhhODhhOGM0MA==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2018-03-27T16:52:10Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2018-03-27T16:52:10Z"}, "message": "[AArch64] XFAIL gcc.target/aarch64/store_v2vec_lanes.c for ILP32\n\nThe test in question fails for ilp32. The initial analysis I did in the PR for it\nis that for ILP32 we generate somewhat different address forms that we'd need to adjust aarch64_classify_address to catch.\nGiven the optimisation this test checks for was added for GCC 8 it is not a regression, and improving the codegen on ILP32\nwould be an enhancement rather than a fix. So Richi has asked for it to be marked as XFAIL on ILP32, which is what this\npatch does.\nChecked that the test still passes on LP64 and appears as XFAIL on -mabi=ilp32.\n\n\tPR target/83009\n\t* gcc.target/aarch64/store_v2vec_lanes.c: XFAIL for ilp32.\n\nFrom-SVN: r258894", "tree": {"sha": "230059f436e65ec78f303190341f349df648be6e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/230059f436e65ec78f303190341f349df648be6e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f84b3c0bb84d976ef74829eb514671c8a88a8c40", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f84b3c0bb84d976ef74829eb514671c8a88a8c40", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f84b3c0bb84d976ef74829eb514671c8a88a8c40", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f84b3c0bb84d976ef74829eb514671c8a88a8c40/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "974e8240c083ce4942a7310da42e2d9260af125c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/974e8240c083ce4942a7310da42e2d9260af125c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/974e8240c083ce4942a7310da42e2d9260af125c"}], "stats": {"total": 11, "additions": 8, "deletions": 3}, "files": [{"sha": "269df7ab60d1c6234132951872cb23f1e2ef5a86", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f84b3c0bb84d976ef74829eb514671c8a88a8c40/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f84b3c0bb84d976ef74829eb514671c8a88a8c40/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f84b3c0bb84d976ef74829eb514671c8a88a8c40", "patch": "@@ -1,3 +1,8 @@\n+2018-03-27  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\tPR target/83009\n+\t* gcc.target/aarch64/store_v2vec_lanes.c: XFAIL for ilp32.\n+\n 2018-03-27  Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>\n \n \tPR target/81863"}, {"sha": "990aea32de6f8239effa95a081950684c6e11386", "filename": "gcc/testsuite/gcc.target/aarch64/store_v2vec_lanes.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f84b3c0bb84d976ef74829eb514671c8a88a8c40/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fstore_v2vec_lanes.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f84b3c0bb84d976ef74829eb514671c8a88a8c40/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fstore_v2vec_lanes.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fstore_v2vec_lanes.c?ref=f84b3c0bb84d976ef74829eb514671c8a88a8c40", "patch": "@@ -26,6 +26,6 @@ construct_lane_2 (long long *y, v2di *z)\n    values from consecutive memory into a 2-element vector by using\n    a Q-reg LDR.  */\n \n-/* { dg-final { scan-assembler-times \"stp\\td\\[0-9\\]+, d\\[0-9\\]+\" 1 } } */\n-/* { dg-final { scan-assembler-times \"stp\\tx\\[0-9\\]+, x\\[0-9\\]+\" 1 } } */\n-/* { dg-final { scan-assembler-not \"ins\\t\" } } */\n+/* { dg-final { scan-assembler-times \"stp\\td\\[0-9\\]+, d\\[0-9\\]+\" 1 { xfail ilp32 } } } */\n+/* { dg-final { scan-assembler-times \"stp\\tx\\[0-9\\]+, x\\[0-9\\]+\" 1 { xfail ilp32 } } } */\n+/* { dg-final { scan-assembler-not \"ins\\t\" { xfail ilp32 } } } */"}]}