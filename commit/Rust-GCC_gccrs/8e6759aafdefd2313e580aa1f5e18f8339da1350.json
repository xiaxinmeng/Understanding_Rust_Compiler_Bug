{"sha": "8e6759aafdefd2313e580aa1f5e18f8339da1350", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGU2NzU5YWFmZGVmZDIzMTNlNTgwYWExZjVlMThmODMzOWRhMTM1MA==", "commit": {"author": {"name": "Erik Schnetter", "email": "schnetter@gmail.com", "date": "2019-04-18T06:53:21Z"}, "committer": {"name": "Iain Sandoe", "email": "iains@gcc.gnu.org", "date": "2019-04-18T06:53:21Z"}, "message": "re PR bootstrap/89864 (gcc fails to build/bootstrap with XCode 10.2)\n\nfix PR89864\n\n      2019-04-18  Erik Schnetter  <schnetter@gmail.com>\n\t  Jakub Jelinek  <jakub@redhat.com>\n\t  Iain Sandoe  <iain@sandoe.co.uk>\n\n\tPR bootstrap/89864\n\t* inclhack.def (darwin_ucred__Atomic): New, work around _Atomic keyword\n\tuse in headers included by C++.\n\t* fixincl.x: Regenerated.\n\n\nCo-Authored-By: Iain Sandoe <iain@sandoe.co.uk>\nCo-Authored-By: Jakub Jelinek <jakub@redhat.com>\n\nFrom-SVN: r270435", "tree": {"sha": "2fe2734c6c922af16a7a69ab02366ae070a71256", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2fe2734c6c922af16a7a69ab02366ae070a71256"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8e6759aafdefd2313e580aa1f5e18f8339da1350", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e6759aafdefd2313e580aa1f5e18f8339da1350", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e6759aafdefd2313e580aa1f5e18f8339da1350", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e6759aafdefd2313e580aa1f5e18f8339da1350/comments", "author": {"login": "eschnett", "id": 213514, "node_id": "MDQ6VXNlcjIxMzUxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/213514?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eschnett", "html_url": "https://github.com/eschnett", "followers_url": "https://api.github.com/users/eschnett/followers", "following_url": "https://api.github.com/users/eschnett/following{/other_user}", "gists_url": "https://api.github.com/users/eschnett/gists{/gist_id}", "starred_url": "https://api.github.com/users/eschnett/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eschnett/subscriptions", "organizations_url": "https://api.github.com/users/eschnett/orgs", "repos_url": "https://api.github.com/users/eschnett/repos", "events_url": "https://api.github.com/users/eschnett/events{/privacy}", "received_events_url": "https://api.github.com/users/eschnett/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5c727cf6259e7f71185fb647b52cbe3907cc4774", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c727cf6259e7f71185fb647b52cbe3907cc4774", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c727cf6259e7f71185fb647b52cbe3907cc4774"}], "stats": {"total": 86, "additions": 81, "deletions": 5}, "files": [{"sha": "ad37281c3fb9b718e76e4ff180e69f727dd0666c", "filename": "fixincludes/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e6759aafdefd2313e580aa1f5e18f8339da1350/fixincludes%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e6759aafdefd2313e580aa1f5e18f8339da1350/fixincludes%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2FChangeLog?ref=8e6759aafdefd2313e580aa1f5e18f8339da1350", "patch": "@@ -1,3 +1,12 @@\n+2019-04-18  Erik Schnetter  <schnetter@gmail.com>\n+\t  Jakub Jelinek  <jakub@redhat.com>\n+\t  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\tPR bootstrap/89864\n+\t* inclhack.def (darwin_ucred__Atomic): New, work around _Atomic keyword\n+\tuse in headers included by C++.\n+\t* fixincl.x: Regenerated.\n+\n 2018-10-31  Joseph Myers  <joseph@codesourcery.com>\n \n \tPR bootstrap/82856"}, {"sha": "e150d70fa37ddeca83d6d6a7bd11d55d226d85e7", "filename": "fixincludes/fixincl.x", "status": "modified", "additions": 53, "deletions": 5, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e6759aafdefd2313e580aa1f5e18f8339da1350/fixincludes%2Ffixincl.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e6759aafdefd2313e580aa1f5e18f8339da1350/fixincludes%2Ffixincl.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ffixincl.x?ref=8e6759aafdefd2313e580aa1f5e18f8339da1350", "patch": "@@ -2,11 +2,11 @@\n  *\n  * DO NOT EDIT THIS FILE   (fixincl.x)\n  *\n- * It has been AutoGen-ed  October 16, 2018 at 11:38:39 AM by AutoGen 5.18.7\n+ * It has been AutoGen-ed  April 16, 2019 at 09:32:25 AM by AutoGen 5.17.4\n  * From the definitions    inclhack.def\n  * and the template file   fixincl\n  */\n-/* DO NOT SVN-MERGE THIS FILE, EITHER Tue Oct 16 11:38:39 CEST 2018\n+/* DO NOT SVN-MERGE THIS FILE, EITHER Tue Apr 16 09:32:25 IST 2019\n  *\n  * You must regenerate it.  Use the ./genfixes script.\n  *\n@@ -15,7 +15,7 @@\n  * certain ANSI-incompatible system header files which are fixed to work\n  * correctly with ANSI C and placed in a directory that GNU C will search.\n  *\n- * This file contains 251 fixup descriptions.\n+ * This file contains 252 fixup descriptions.\n  *\n  * See README for more information.\n  *\n@@ -3272,6 +3272,48 @@ static const char* apzDarwin_Stdint_7Patch[] = {\n #endif\",\n     (char*)NULL };\n \n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Darwin_Ucred__Atomic fix\n+ */\n+tSCC zDarwin_Ucred__AtomicName[] =\n+     \"darwin_ucred__Atomic\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zDarwin_Ucred__AtomicList[] =\n+  \"sys/ucred.h\\0\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+tSCC* apzDarwin_Ucred__AtomicMachs[] = {\n+        \"*-*-darwin*\",\n+        (const char*)NULL };\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zDarwin_Ucred__AtomicSelect0[] =\n+       \"_Atomic\";\n+\n+#define    DARWIN_UCRED__ATOMIC_TEST_CT  1\n+static tTestDesc aDarwin_Ucred__AtomicTests[] = {\n+  { TT_EGREP,    zDarwin_Ucred__AtomicSelect0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Darwin_Ucred__Atomic\n+ */\n+static const char* apzDarwin_Ucred__AtomicPatch[] = {\n+    \"wrap\",\n+    \"#if (__STDC_VERSION__ < 201112L) || defined(__cplusplus)\\n\\\n+# define _Atomic volatile\\n\\\n+#endif\\n\",\n+    \"#if (__STDC_VERSION__ < 201112L) || defined(__cplusplus)\\n\\\n+# undef _Atomic\\n\\\n+#endif\\n\",\n+    (char*)NULL };\n+\n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n  *  Description of Dec_Intern_Asm fix\n@@ -10188,9 +10230,9 @@ static const char* apzX11_SprintfPatch[] = {\n  *\n  *  List of all fixes\n  */\n-#define REGEX_COUNT          289\n+#define REGEX_COUNT          290\n #define MACH_LIST_SIZE_LIMIT 187\n-#define FIX_COUNT            251\n+#define FIX_COUNT            252\n \n /*\n  *  Enumerate the fixes\n@@ -10273,6 +10315,7 @@ typedef enum {\n     DARWIN_STDINT_5_FIXIDX,\n     DARWIN_STDINT_6_FIXIDX,\n     DARWIN_STDINT_7_FIXIDX,\n+    DARWIN_UCRED__ATOMIC_FIXIDX,\n     DEC_INTERN_ASM_FIXIDX,\n     DJGPP_WCHAR_H_FIXIDX,\n     ECD_CURSOR_FIXIDX,\n@@ -10835,6 +10878,11 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n      DARWIN_STDINT_7_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aDarwin_Stdint_7Tests,   apzDarwin_Stdint_7Patch, 0 },\n \n+  {  zDarwin_Ucred__AtomicName,    zDarwin_Ucred__AtomicList,\n+     apzDarwin_Ucred__AtomicMachs,\n+     DARWIN_UCRED__ATOMIC_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     aDarwin_Ucred__AtomicTests,   apzDarwin_Ucred__AtomicPatch, 0 },\n+\n   {  zDec_Intern_AsmName,    zDec_Intern_AsmList,\n      apzDec_Intern_AsmMachs,\n      DEC_INTERN_ASM_TEST_CT, FD_MACH_ONLY,"}, {"sha": "d8ce89ac8c4475fdfc2bfd855e182d3cbabe51a1", "filename": "fixincludes/inclhack.def", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e6759aafdefd2313e580aa1f5e18f8339da1350/fixincludes%2Finclhack.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e6759aafdefd2313e580aa1f5e18f8339da1350/fixincludes%2Finclhack.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Finclhack.def?ref=8e6759aafdefd2313e580aa1f5e18f8339da1350", "patch": "@@ -1622,6 +1622,25 @@ fix = {\n \t\t\"#define UINTMAX_C(v) (v ## ULL)\";\n };\n \n+/*  The SDK included with XCode 10.2 has the file <sys/ucred.h> that uses the\n+    C11 _Atomic keyword (exposing it to C++ code).  The work-around here follows\n+    the header in declaring the entity volatile when _Atomic is not available.\n+*/\n+fix = {\n+    hackname  = darwin_ucred__Atomic;\n+    mach      = \"*-*-darwin*\";\n+    files     = sys/ucred.h;\n+    select    = \"_Atomic\";\n+    c_fix     = wrap;\n+    c_fix_arg = \"#if (__STDC_VERSION__ < 201112L) || defined(__cplusplus)\\n\"\n+\t\t\"# define _Atomic volatile\\n\"\n+\t\t\"#endif\\n\";\n+    c_fix_arg = \"#if (__STDC_VERSION__ < 201112L) || defined(__cplusplus)\\n\"\n+\t\t\"# undef _Atomic\\n\"\n+\t\t\"#endif\\n\";\n+    test_text = \"_Atomic\";\n+};\n+\n /*\n  *  Fix <c_asm.h> on Digital UNIX V4.0:\n  *  It contains a prototype for a DEC C internal asm() function,"}]}