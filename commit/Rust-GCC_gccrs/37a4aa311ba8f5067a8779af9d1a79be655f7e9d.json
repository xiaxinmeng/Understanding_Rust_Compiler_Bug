{"sha": "37a4aa311ba8f5067a8779af9d1a79be655f7e9d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzdhNGFhMzExYmE4ZjUwNjdhODc3OWFmOWQxYTc5YmU2NTVmN2U5ZA==", "commit": {"author": {"name": "Geoffrey Keating", "email": "geoffk@redhat.com", "date": "2002-06-09T23:20:08Z"}, "committer": {"name": "Geoffrey Keating", "email": "geoffk@gcc.gnu.org", "date": "2002-06-09T23:20:08Z"}, "message": "Makefile.in (install-driver): Install driver as $(target_alias)-gcc-$(version).\n\n\t* Makefile.in (install-driver): Install driver as\n\t$(target_alias)-gcc-$(version).\n\t* gcc.c (spec_version): Make const.\n\t(process_command): Handle -V and -b by using exec.\n\t* doc/invoke.texi (Target Options): Restore -V option,\n\tupdate docs for -b option.\n\nFrom-SVN: r54417", "tree": {"sha": "b1a2d0bf385df39a55ce042fa604a07b3ca74836", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b1a2d0bf385df39a55ce042fa604a07b3ca74836"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/37a4aa311ba8f5067a8779af9d1a79be655f7e9d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37a4aa311ba8f5067a8779af9d1a79be655f7e9d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/37a4aa311ba8f5067a8779af9d1a79be655f7e9d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37a4aa311ba8f5067a8779af9d1a79be655f7e9d/comments", "author": null, "committer": null, "parents": [{"sha": "39d31de834968b084bb2965fd594eafed4afd440", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39d31de834968b084bb2965fd594eafed4afd440", "html_url": "https://github.com/Rust-GCC/gccrs/commit/39d31de834968b084bb2965fd594eafed4afd440"}], "stats": {"total": 154, "additions": 88, "deletions": 66}, "files": [{"sha": "a6299b3025c33bb7c6ac157d515bcd9f071c0be9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37a4aa311ba8f5067a8779af9d1a79be655f7e9d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37a4aa311ba8f5067a8779af9d1a79be655f7e9d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=37a4aa311ba8f5067a8779af9d1a79be655f7e9d", "patch": "@@ -1,3 +1,12 @@\n+2002-06-09  Geoffrey Keating  <geoffk@redhat.com>\n+\n+\t* Makefile.in (install-driver): Install driver as\n+\t$(target_alias)-gcc-$(version).\n+\t* gcc.c (spec_version): Make const.\n+\t(process_command): Handle -V and -b by using exec.\n+\t* doc/invoke.texi (Target Options): Restore -V option,\n+\tupdate docs for -b option.\n+\n 2002-06-10  Tim Josling  <tej@melbpc.org.au>\n  \n          First steps to making treelang documentation compliant, based on"}, {"sha": "5da663789cc56b03ce84ac5a81e99ea9be63f6db", "filename": "gcc/Makefile.in", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37a4aa311ba8f5067a8779af9d1a79be655f7e9d/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37a4aa311ba8f5067a8779af9d1a79be655f7e9d/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=37a4aa311ba8f5067a8779af9d1a79be655f7e9d", "patch": "@@ -2732,22 +2732,25 @@ install-common: native $(EXTRA_PARTS) lang.install-common\n \tfi\n \t$(INSTALL_SCRIPT) gccbug $(bindir)/$(GCCBUG_INSTALL_NAME)\n \n-# Install the driver program as $(target_alias)-gcc\n+# Install the driver program as $(target_alias)-gcc, \n+# $(target-alias)-gcc-$(version)\n # and also as either gcc (if native) or $(gcc_tooldir)/bin/gcc.\n install-driver: installdirs xgcc$(exeext)\n \t-if [ -f gcc-cross$(exeext) ] ; then \\\n \t  rm -f $(bindir)/$(GCC_CROSS_NAME)$(exeext); \\\n \t  $(INSTALL_PROGRAM) gcc-cross$(exeext) $(bindir)/$(GCC_CROSS_NAME)$(exeext); \\\n+\t  $(LN) $(bindir)/$(GCC_CROSS_NAME)$(exeext) $(bindir)/$(target_alias)-gcc-$(version) ; \\\n \t  if [ -d $(gcc_tooldir)/bin/. ] ; then \\\n \t    rm -f $(gcc_tooldir)/bin/gcc$(exeext); \\\n \t    $(INSTALL_PROGRAM) gcc-cross$(exeext) $(gcc_tooldir)/bin/gcc$(exeext); \\\n \t  else true; fi; \\\n \telse \\\n \t  rm -f $(bindir)/$(GCC_INSTALL_NAME)$(exeext); \\\n \t  $(INSTALL_PROGRAM) xgcc$(exeext) $(bindir)/$(GCC_INSTALL_NAME)$(exeext); \\\n-\t  rm -f $(bindir)/$(target_alias)-gcc-1$(exeext); \\\n-\t  $(LN) $(bindir)/$(GCC_INSTALL_NAME)$(exeext) $(bindir)/$(target_alias)-gcc-1$(exeext); \\\n-\t  mv $(bindir)/$(target_alias)-gcc-1$(exeext) $(bindir)/$(GCC_TARGET_INSTALL_NAME)$(exeext); \\\n+\t  $(LN) $(bindir)/$(GCC_INSTALL_NAME)$(exeext) $(bindir)/$(target_alias)-gcc-$(version) ; \\\n+\t  rm -f $(bindir)/$(target_alias)-gcc-tmp$(exeext); \\\n+\t  $(LN) $(bindir)/$(GCC_INSTALL_NAME)$(exeext) $(bindir)/$(target_alias)-gcc-tmp$(exeext); \\\n+\t  mv $(bindir)/$(target_alias)-gcc-tmp$(exeext) $(bindir)/$(GCC_TARGET_INSTALL_NAME)$(exeext); \\\n \tfi\n \n # Install the info files."}, {"sha": "8549bfb5c6b019182facbeabe1e9bc458d622bee", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 14, "deletions": 50, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37a4aa311ba8f5067a8779af9d1a79be655f7e9d/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37a4aa311ba8f5067a8779af9d1a79be655f7e9d/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=37a4aa311ba8f5067a8779af9d1a79be655f7e9d", "patch": "@@ -323,7 +323,7 @@ in the following sections.\n @c I wrote this xref this way to avoid overfull hbox. -- rms\n @xref{Target Options}.\n @gccoptlist{\n--b @var{machine}}\n+-V @var{version} -b @var{machine}}\n \n @item Machine Dependent Options\n @xref{Submodel Options,,Hardware Models and Configurations}.\n@@ -4812,69 +4812,33 @@ proper position among the other output files.\n @cindex compiler version, specifying\n @cindex target machine, specifying\n \n-By default, GCC compiles code for the same type of machine that you\n-are using.  However, it can also be installed as a cross-compiler, to\n-compile for some other type of machine.  In fact, several different\n-configurations of GCC, for different target machines, can be\n-installed side by side.  Then you specify which one to use with the\n-@option{-b} option.\n-\n-In addition, older and newer versions of GCC can be installed side\n-by side.  One of them (probably the newest) will be the default, but\n-you may sometimes wish to use another.\n+The usual way to run GCC is to run the executable called @file{gcc}, or\n+@file{<machine>-gcc} when cross-compiling, or\n+@file{<machine>-gcc-<version>} to run a version other than the one that\n+was installed last.  Sometimes this is inconvenient, so GCC provides\n+options that will switch to another cross-compiler or version.\n \n @table @gcctabopt\n @item -b @var{machine}\n @opindex b\n The argument @var{machine} specifies the target machine for compilation.\n-This is useful when you have installed GCC as a cross-compiler.\n \n The value to use for @var{machine} is the same as was specified as the\n machine type when configuring GCC as a cross-compiler.  For\n example, if a cross-compiler was configured with @samp{configure\n i386v}, meaning to compile for an 80386 running System V, then you\n would specify @option{-b i386v} to run that cross compiler.\n \n-When you do not specify @option{-b}, it normally means to compile for\n-the same type of machine that you are using.\n+@item -V @var{version}\n+@opindex V\n+The argument @var{version} specifies which version of GCC to run.\n+This is useful when multiple versions are installed.  For example,\n+@var{version} might be @samp{2.0}, meaning to run GCC version 2.0.\n @end table\n \n-The @option{-b} option actually works by controlling part of\n-the file name used for the executable files and libraries used for\n-compilation.  A given version of GCC, for a given target machine, is\n-normally kept in the directory @file{/usr/local/lib/gcc-lib/@var{machine}/@var{version}}.\n-\n-Thus, sites can customize the effect of @option{-b} either by\n-changing the names of these directories or adding alternate names (or\n-symbolic links).  If in directory @file{/usr/local/lib/gcc-lib/} the\n-file @file{80386} is a link to the file @file{i386v}, then @option{-b\n-80386} becomes an alias for @option{-b i386v}.\n-\n-In one respect, @option{-b} does not completely change\n-to a different compiler: the top-level driver program @command{gcc}\n-that you originally invoked continues to run and invoke the other\n-executables (preprocessor, compiler per se, assembler and linker)\n-that do the real work.  However, since no real work is done in the\n-driver program, it usually does not matter that the driver program\n-in use is not the one for the specified target.\n-\n-The only way that the driver program depends on the target machine is\n-in the parsing and handling of special machine-specific options.\n-However, this is controlled by a file which is found, along with the\n-other executables, in the directory for the specified version and\n-target machine.  As a result, a single installed driver program adapts\n-to any specified target machine, and sufficiently similar compiler\n-versions.\n-\n-The driver program executable does control one significant thing,\n-however: the default version and target machine.  Therefore, you can\n-install different instances of the driver program, compiled for\n-different targets or versions, under different names.\n-\n-For example, if the driver for version 2.0 is installed as @command{ogcc}\n-and that for version 2.1 is installed as @command{gcc}, then the command\n-@command{gcc} will use version 2.1 by default, while @command{ogcc} will use\n-2.0 by default.\n+The @option{-V} and @option{-b} options work by running the\n+@file{<machine>-gcc-<version>} executable, so there's no real reason to\n+use them if you can just run that directly.\n \n @node Submodel Options\n @section Hardware Models and Configurations"}, {"sha": "cac96eb051b86033dd83052b6cd99606b95f12f7", "filename": "gcc/gcc.c", "status": "modified", "additions": 58, "deletions": 12, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37a4aa311ba8f5067a8779af9d1a79be655f7e9d/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37a4aa311ba8f5067a8779af9d1a79be655f7e9d/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=37a4aa311ba8f5067a8779af9d1a79be655f7e9d", "patch": "@@ -213,7 +213,7 @@ static const char *compiler_version;\n \n /* The target version specified with -V */\n \n-static const char *spec_version = DEFAULT_TARGET_VERSION;\n+static const char *const spec_version = DEFAULT_TARGET_VERSION;\n \n /* The target machine specified with -b.  */\n \n@@ -3185,6 +3185,60 @@ process_command (argc, argv)\n \t}\n     }\n \n+  /* If there is a -V or -b option (or both), process it now, before\n+     trying to interpret the rest of the command line.  */\n+  if (argc > 1 && argv[1][0] == '-'\n+      && (argv[1][1] == 'V' || argv[1][1] == 'b'))\n+    {\n+      const char *new_version = DEFAULT_TARGET_VERSION;\n+      const char *new_machine = DEFAULT_TARGET_MACHINE;\n+      const char *const *new_argv = argv;\n+      char *new_argv0;\n+      int baselen;\n+      \n+      while (argc > 1 && new_argv[1][0] == '-'\n+\t     && (new_argv[1][1] == 'V' || new_argv[1][1] == 'b'))\n+\t{\n+\t  char opt = new_argv[1][1];\n+\t  const char *arg;\n+\t  if (new_argv[1][2] != '\\0')\n+\t    {\n+\t      arg = new_argv[1] + 2;\n+\t      argc -= 1;\n+\t      new_argv += 1;\n+\t    }\n+\t  else if (argc > 2)\n+\t    {\n+\t      arg = new_argv[2];\n+\t      argc -= 2;\n+\t      new_argv += 2;\n+\t    }\n+\t  else\n+\t    fatal (\"`-%c' option must have argument\", opt);\n+\t  if (opt == 'V')\n+\t    new_version = arg;\n+\t  else\n+\t    new_machine = arg;\n+\t}\n+\n+      for (baselen = strlen (argv[0]); baselen > 0; baselen--)\n+\tif (IS_DIR_SEPARATOR (argv[0][baselen-1]))\n+\t  break;\n+      new_argv0 = xmemdup (argv[0], baselen, \n+\t\t\t   baselen + concat_length (new_version, new_machine,\n+\t\t\t\t\t\t    \"-gcc-\", NULL) + 1);\n+      strcpy (new_argv0 + baselen, new_machine);\n+      strcat (new_argv0, \"-gcc-\");\n+      strcat (new_argv0, new_version);\n+\n+      new_argv = xmemdup (new_argv, (argc+1) * sizeof (new_argv0[0]),\n+\t\t\t   (argc+1) * sizeof (new_argv0[0]));\n+      new_argv[0] = new_argv0;\n+\n+      execvp (new_argv0, new_argv);\n+      fatal (\"couldn't run `%s': %s\", new_argv0, xstrerror(errno));\n+    }\n+\n   /* Set up the default search paths.  If there is no GCC_EXEC_PREFIX,\n      see if we can create it from the pathname specified in argv[0].  */\n \n@@ -3332,7 +3386,6 @@ process_command (argc, argv)\n \n   /* Scan argv twice.  Here, the first time, just count how many switches\n      there will be in their vector, and how many input files in theirs.\n-     Also parse any switches that determine the configuration name, such as -b.\n      Here we also parse the switches that cc itself uses (e.g. -v).  */\n \n   for (i = 1; i < argc; i++)\n@@ -3531,15 +3584,8 @@ warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\\n\\n\"\n \t  switch (c)\n \t    {\n \t    case 'b':\n-\t      n_switches++;\n-\t      if (p[1] == 0 && i + 1 == argc)\n-\t\tfatal (\"argument to `-b' is missing\");\n-\t      if (p[1] == 0)\n-\t\tspec_machine = argv[++i];\n-\t      else\n-\t\tspec_machine = p + 1;\n-\n-\t      warn_std_ptr = &warn_std;\n+\t    case 'V':\n+\t      fatal (\"`-%c' must come at the start of the command line\", c);\n \t      break;\n \n \t    case 'B':\n@@ -3972,7 +4018,7 @@ warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\\n\\n\"\n \t  else\n \t    {\n \t      char ch = switches[n_switches].part1[0];\n-\t      if (ch == 'b' || ch == 'B')\n+\t      if (ch == 'B')\n \t\tswitches[n_switches].validated = 1;\n \t    }\n \t  n_switches++;"}]}