{"sha": "8dcaff2850b7081696175bf6ae6b5f7021cbea3c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGRjYWZmMjg1MGI3MDgxNjk2MTc1YmY2YWU2YjVmNzAyMWNiZWEzYw==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@unitus.it", "date": "2003-10-02T20:37:06Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2003-10-02T20:37:06Z"}, "message": "re PR libstdc++/12232 (Incorrect handling of openmode argument in filebuf::seekoff and seekpos)\n\n2003-10-02  Paolo Carlini  <pcarlini@unitus.it>\n\n\tPR libstdc++/12232\n\t* include/bits/fstream.tcc (seekoff): Ignore the openmode\n\targument; simplify.\n\t* config/io/basic_file_stdio.h (__basic_file<char>::seekoff,\n\tseekpos): Remove the openmode argument.\n\t* config/io/basic_file_stdio.cc (__basic_file<char>::seekoff,\n\tseekpos): Remove redundant placeholder for the openmode argument.\n\t* testsuite/27_io/basic_filebuf/seekoff/char/12232.cc: New.\n\t* testsuite/27_io/basic_filebuf/seekoff/char/3-in.cc: Tweak.\n\t* testsuite/27_io/basic_filebuf/seekoff/char/3-out.cc: Likewise.\n\t* testsuite/27_io/basic_filebuf/seekpos/char/3-in.cc: Likewise.\n\t* testsuite/27_io/basic_filebuf/seekpos/char/3-out.cc: Likewise.\n\nFrom-SVN: r72048", "tree": {"sha": "4d184b4b415b37498837bdba6a3fc0f2e46b5118", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4d184b4b415b37498837bdba6a3fc0f2e46b5118"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8dcaff2850b7081696175bf6ae6b5f7021cbea3c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8dcaff2850b7081696175bf6ae6b5f7021cbea3c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8dcaff2850b7081696175bf6ae6b5f7021cbea3c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8dcaff2850b7081696175bf6ae6b5f7021cbea3c/comments", "author": null, "committer": null, "parents": [{"sha": "d1aa4795838afb7c3cf72ae3b028a1b46beffada", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1aa4795838afb7c3cf72ae3b028a1b46beffada", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d1aa4795838afb7c3cf72ae3b028a1b46beffada"}], "stats": {"total": 151, "additions": 115, "deletions": 36}, "files": [{"sha": "2cc15acf19a91abc1de2b7f8d5793d0b1d5f338a", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8dcaff2850b7081696175bf6ae6b5f7021cbea3c/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8dcaff2850b7081696175bf6ae6b5f7021cbea3c/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=8dcaff2850b7081696175bf6ae6b5f7021cbea3c", "patch": "@@ -1,3 +1,18 @@\n+2003-10-02  Paolo Carlini  <pcarlini@unitus.it>\n+\n+\tPR libstdc++/12232\n+\t* include/bits/fstream.tcc (seekoff): Ignore the openmode\n+\targument; simplify.\n+\t* config/io/basic_file_stdio.h (__basic_file<char>::seekoff,\n+\tseekpos): Remove the openmode argument.\n+\t* config/io/basic_file_stdio.cc (__basic_file<char>::seekoff,\n+\tseekpos): Remove redundant placeholder for the openmode argument.\n+\t* testsuite/27_io/basic_filebuf/seekoff/char/12232.cc: New.\n+\t* testsuite/27_io/basic_filebuf/seekoff/char/3-in.cc: Tweak.\n+\t* testsuite/27_io/basic_filebuf/seekoff/char/3-out.cc: Likewise.\n+\t* testsuite/27_io/basic_filebuf/seekpos/char/3-in.cc: Likewise.\n+\t* testsuite/27_io/basic_filebuf/seekpos/char/3-out.cc: Likewise.\n+\n 2003-10-02  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* src/locale.cc (locale::_S_initialize): Use __gthread_active_p."}, {"sha": "b3223f50ca76b1e977ff15ce734f84acc4976839", "filename": "libstdc++-v3/config/io/basic_file_stdio.cc", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8dcaff2850b7081696175bf6ae6b5f7021cbea3c/libstdc%2B%2B-v3%2Fconfig%2Fio%2Fbasic_file_stdio.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8dcaff2850b7081696175bf6ae6b5f7021cbea3c/libstdc%2B%2B-v3%2Fconfig%2Fio%2Fbasic_file_stdio.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fio%2Fbasic_file_stdio.cc?ref=8dcaff2850b7081696175bf6ae6b5f7021cbea3c", "patch": "@@ -261,12 +261,11 @@ namespace std\n   }\n \n   streampos\n-  __basic_file<char>::seekoff(streamoff __off, ios_base::seekdir __way, \n-\t\t\t      ios_base::openmode /*__mode*/)\n+  __basic_file<char>::seekoff(streamoff __off, ios_base::seekdir __way)\n   { return lseek(this->fd(), __off, __way); }\n \n   streampos\n-  __basic_file<char>::seekpos(streampos __pos, ios_base::openmode /*__mode*/)\n+  __basic_file<char>::seekpos(streampos __pos)\n   { return lseek(this->fd(), __pos, ios_base::beg); }\n \n   int "}, {"sha": "2ff2ba464fcc17a02b034b26025dc3a014009df0", "filename": "libstdc++-v3/config/io/basic_file_stdio.h", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8dcaff2850b7081696175bf6ae6b5f7021cbea3c/libstdc%2B%2B-v3%2Fconfig%2Fio%2Fbasic_file_stdio.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8dcaff2850b7081696175bf6ae6b5f7021cbea3c/libstdc%2B%2B-v3%2Fconfig%2Fio%2Fbasic_file_stdio.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fio%2Fbasic_file_stdio.h?ref=8dcaff2850b7081696175bf6ae6b5f7021cbea3c", "patch": "@@ -98,12 +98,10 @@ namespace std\n       xsgetn(char* __s, streamsize __n);\n \n       streampos\n-      seekoff(streamoff __off, ios_base::seekdir __way, \n-\t      ios_base::openmode __mode = ios_base::in | ios_base::out);\n+      seekoff(streamoff __off, ios_base::seekdir __way);\n \n       streampos\n-      seekpos(streampos __pos, \n-\t      ios_base::openmode __mode = ios_base::in | ios_base::out);\n+      seekpos(streampos __pos);\n \n       int \n       sync();"}, {"sha": "4a7ad850f38a44fa6060a376abb4b78996c04c03", "filename": "libstdc++-v3/include/bits/fstream.tcc", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8dcaff2850b7081696175bf6ae6b5f7021cbea3c/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffstream.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8dcaff2850b7081696175bf6ae6b5f7021cbea3c/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffstream.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffstream.tcc?ref=8dcaff2850b7081696175bf6ae6b5f7021cbea3c", "patch": "@@ -572,23 +572,26 @@ namespace std\n       return this; \n     }\n   \n+\n+  // _GLIBCXX_RESOLVE_LIB_DEFECTS\n+  // According to 27.8.1.4 p11 - 13 (for seekoff) and the resolution of\n+  // DR 171 (for seekpos), both functions should ignore the last argument\n+  // (of type openmode).\n   template<typename _CharT, typename _Traits>\n     typename basic_filebuf<_CharT, _Traits>::pos_type\n     basic_filebuf<_CharT, _Traits>::\n-    seekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode)\n+    seekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode)\n     {\n       pos_type __ret =  pos_type(off_type(-1)); \n-      const bool __testin = (ios_base::in & this->_M_mode & __mode) != 0;\n-      const bool __testout = (ios_base::out & this->_M_mode & __mode) != 0;\n-      \n+\n       int __width = 0;\n       if (_M_codecvt)\n \t__width = _M_codecvt->encoding();\n       if (__width < 0)\n \t__width = 0;\n \n       const bool __testfail = __off != 0 && __width <= 0;      \n-      if (this->is_open() && !__testfail && (__testin || __testout)) \n+      if (this->is_open() && !__testfail) \n \t{\n \t  // Ditch any pback buffers to avoid confusion.\n \t  _M_destroy_pback();\n@@ -618,7 +621,7 @@ namespace std\n \t    }\n \t  \n \t  // Returns pos_type(off_type(-1)) in case of failure.\n-\t  __ret = _M_file.seekoff(__computed_off, __way, __mode);\n+\t  __ret = _M_file.seekoff(__computed_off, __way);\n \t  \n \t  _M_reading = false;\n \t  _M_writing = false;"}, {"sha": "430183162fc534649382bcebc5fc1efb5fa77f5a", "filename": "libstdc++-v3/testsuite/27_io/basic_filebuf/seekoff/char/12232.cc", "status": "added", "additions": 72, "deletions": 0, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8dcaff2850b7081696175bf6ae6b5f7021cbea3c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fseekoff%2Fchar%2F12232.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8dcaff2850b7081696175bf6ae6b5f7021cbea3c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fseekoff%2Fchar%2F12232.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fseekoff%2Fchar%2F12232.cc?ref=8dcaff2850b7081696175bf6ae6b5f7021cbea3c", "patch": "@@ -0,0 +1,72 @@\n+// Copyright (C) 2003 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 27.8.1.4 Overridden virtual functions\n+\n+#include <fstream>\n+#include <testsuite_hooks.h>\n+\n+const char name[] = \"tmp_12232\";\n+\n+// libstdc++/12232\n+void test01()\n+{\n+  using namespace std;\n+  bool test __attribute__((unused)) = true;\n+\n+  filebuf fbout;\n+  fbout.open(name, ios_base::out);\n+  fbout.sputn(\"abc\", 3);\n+  \n+  streampos p1 = fbout.pubseekoff(0, ios_base::cur, ios_base::in);\n+  VERIFY( p1 != streampos(-1) );\n+  fbout.sputn(\"de\", 2);\n+  \n+  streampos p2 = fbout.pubseekpos(p1, ios_base::openmode());\n+  VERIFY( p2 != streampos(-1) );\n+  fbout.sputn(\"34\", 2);\n+  \n+  streampos p3 = fbout.pubseekoff(0, ios_base::beg, ios_base::ate);\n+  VERIFY( p3 != streampos(-1) );\n+  fbout.sputn(\"012\", 3);\n+  \n+  fbout.close();\n+  \n+  filebuf fbin;\n+  fbin.open(name, ios_base::in);\n+  \n+  streampos p4 = fbin.pubseekoff(0, ios_base::beg, ios_base::ate);\n+  VERIFY( p4 != streampos(-1) );\n+  VERIFY( fbin.sgetc() == '0' );\n+  \n+  streampos p5 = fbin.pubseekoff(-1, ios_base::end, ios_base::out);\n+  VERIFY( p5 != streampos(-1) );\n+  VERIFY( fbin.sbumpc() == '4' );\n+  \n+  streampos p6 = fbin.pubseekpos(p4, ios_base::binary);\n+  VERIFY( p6 != streampos(-1) );\n+  VERIFY( fbin.sbumpc() == '0' );\n+  \n+  fbin.close();\n+}\n+\n+int main()\n+{\n+  void test01();\n+  return 0;\n+}"}, {"sha": "3d28f6f5dae892e73202f714cf1c9639249ac8cd", "filename": "libstdc++-v3/testsuite/27_io/basic_filebuf/seekoff/char/3-in.cc", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8dcaff2850b7081696175bf6ae6b5f7021cbea3c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fseekoff%2Fchar%2F3-in.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8dcaff2850b7081696175bf6ae6b5f7021cbea3c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fseekoff%2Fchar%2F3-in.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fseekoff%2Fchar%2F3-in.cc?ref=8dcaff2850b7081696175bf6ae6b5f7021cbea3c", "patch": "@@ -34,15 +34,13 @@ void test02(std::filebuf& in, bool pass)\n \n   // seekoff\n   p = in.pubseekoff(0, ios_base::beg, ios_base::in);\n-  if (pass)\n-    VERIFY( p != bad );\n+  VERIFY( pass == (p != bad) );\n \n-  p = in.pubseekoff(0, ios_base::beg, ios_base::out); \n-  VERIFY( p == bad );\n+  p = in.pubseekoff(0, ios_base::beg, ios_base::out);\n+  VERIFY( pass == (p != bad) );  // See libstdc++/12232\n \n   p = in.pubseekoff(0, ios_base::beg); \n-  if (pass)\n-    VERIFY( p != bad );\n+  VERIFY( pass == (p != bad) );\n }\n \n const char name_01[] = \"filebuf_virtuals-1.tst\"; // file with data in it"}, {"sha": "fda7be2f45c2c5d431e2c862c5a24266c7e07201", "filename": "libstdc++-v3/testsuite/27_io/basic_filebuf/seekoff/char/3-out.cc", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8dcaff2850b7081696175bf6ae6b5f7021cbea3c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fseekoff%2Fchar%2F3-out.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8dcaff2850b7081696175bf6ae6b5f7021cbea3c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fseekoff%2Fchar%2F3-out.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fseekoff%2Fchar%2F3-out.cc?ref=8dcaff2850b7081696175bf6ae6b5f7021cbea3c", "patch": "@@ -34,15 +34,13 @@ void test02(std::filebuf& in, bool pass)\n \n   // seekoff\n   p = in.pubseekoff(0, ios_base::beg, ios_base::in);\n-  VERIFY( p == bad );\n+  VERIFY( pass == (p != bad) );  // See libstdc++/12232\n \n   p = in.pubseekoff(0, ios_base::beg, ios_base::out); \n-  if (pass)\n-    VERIFY( p != bad );\n+  VERIFY( pass == (p != bad) );\n \n   p = in.pubseekoff(0, ios_base::beg); \n-  if (pass)\n-    VERIFY( p != bad );\n+  VERIFY( pass == (p != bad) );\n }\n \n const char name_01[] = \"filebuf_virtuals-1.tst\"; // file with data in it"}, {"sha": "e18030a5ace022dd740cdce4c38b4609f262b1a0", "filename": "libstdc++-v3/testsuite/27_io/basic_filebuf/seekpos/char/3-in.cc", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8dcaff2850b7081696175bf6ae6b5f7021cbea3c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fseekpos%2Fchar%2F3-in.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8dcaff2850b7081696175bf6ae6b5f7021cbea3c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fseekpos%2Fchar%2F3-in.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fseekpos%2Fchar%2F3-in.cc?ref=8dcaff2850b7081696175bf6ae6b5f7021cbea3c", "patch": "@@ -34,15 +34,13 @@ void test02(std::filebuf& in, bool pass)\n \n   // seekpos\n   p = in.pubseekpos(0, ios_base::in);\n-  if (pass)\n-    VERIFY( p != bad );\n+  VERIFY( pass == (p != bad) );\n \n-  p = in.pubseekpos(0, ios_base::out); \n-  VERIFY( p == bad );\n+  p = in.pubseekpos(0, ios_base::out);\n+  VERIFY( pass == (p != bad) );  // See libstdc++/12232\n \n   p = in.pubseekpos(0); \n-  if (pass)\n-    VERIFY( p != bad );\n+  VERIFY( pass == (p != bad) );\n }\n \n const char name_01[] = \"filebuf_virtuals-1.tst\"; // file with data in it"}, {"sha": "ecd8433f3fba05687247814452874905d9b8d2cb", "filename": "libstdc++-v3/testsuite/27_io/basic_filebuf/seekpos/char/3-out.cc", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8dcaff2850b7081696175bf6ae6b5f7021cbea3c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fseekpos%2Fchar%2F3-out.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8dcaff2850b7081696175bf6ae6b5f7021cbea3c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fseekpos%2Fchar%2F3-out.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fseekpos%2Fchar%2F3-out.cc?ref=8dcaff2850b7081696175bf6ae6b5f7021cbea3c", "patch": "@@ -34,15 +34,13 @@ void test02(std::filebuf& in, bool pass)\n \n   // seekpos\n   p = in.pubseekpos(0, ios_base::in);\n-  VERIFY( p == bad );\n+  VERIFY( pass == (p != bad) );  // See libstdc++/12232\n \n   p = in.pubseekpos(0, ios_base::out); \n-  if (pass)\n-    VERIFY( p != bad );\n+  VERIFY( pass == (p != bad) );\n \n-  p = in.pubseekpos(0); \n-  if (pass)\n-    VERIFY( p != bad );\n+  p = in.pubseekpos(0);\n+  VERIFY( pass == (p != bad) );\n }\n \n const char name_01[] = \"filebuf_virtuals-1.tst\"; // file with data in it"}]}