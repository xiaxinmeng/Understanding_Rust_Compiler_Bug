{"sha": "d814595c2c47096eb70ff15fffadc5218806aaec", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDgxNDU5NWMyYzQ3MDk2ZWI3MGZmMTVmZmZhZGM1MjE4ODA2YWFlYw==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2006-05-01T15:00:04Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2006-05-01T15:00:04Z"}, "message": "acinclude.m4 (GLIBCXX_ENABLE_WCHAR_T): Always check the presence of wctype.h, for use in GLIBCXX_ENABLE_C99.\n\n2006-05-01  Paolo Carlini  <pcarlini@suse.de>\n\n\t* acinclude.m4 (GLIBCXX_ENABLE_WCHAR_T): Always check the\n\tpresence of wctype.h, for use in GLIBCXX_ENABLE_C99.\n\t* configure: Regenerate.\n\nFrom-SVN: r113413", "tree": {"sha": "c5bf5bec5eeb377e6e81ed1146d9d932ba469fe1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c5bf5bec5eeb377e6e81ed1146d9d932ba469fe1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d814595c2c47096eb70ff15fffadc5218806aaec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d814595c2c47096eb70ff15fffadc5218806aaec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d814595c2c47096eb70ff15fffadc5218806aaec", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d814595c2c47096eb70ff15fffadc5218806aaec/comments", "author": null, "committer": null, "parents": [{"sha": "444e96af874a765fa5801baf2207c77202047862", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/444e96af874a765fa5801baf2207c77202047862", "html_url": "https://github.com/Rust-GCC/gccrs/commit/444e96af874a765fa5801baf2207c77202047862"}], "stats": {"total": 46, "additions": 29, "deletions": 17}, "files": [{"sha": "2c03608cc6474c01377f1a9d1c626ee989c3a75c", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d814595c2c47096eb70ff15fffadc5218806aaec/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d814595c2c47096eb70ff15fffadc5218806aaec/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=d814595c2c47096eb70ff15fffadc5218806aaec", "patch": "@@ -1,3 +1,9 @@\n+2006-05-01  Paolo Carlini  <pcarlini@suse.de>\n+\n+\t* acinclude.m4 (GLIBCXX_ENABLE_WCHAR_T): Always check the\n+\tpresence of wctype.h, for use in GLIBCXX_ENABLE_C99.\n+\t* configure: Regenerate.\n+\n 2006-04-29  Paolo Carlini  <pcarlini@suse.de>\n \n \t* include/bits/locale_facets.tcc (num_get<>::_M_extract_float):"}, {"sha": "fcbc9677344b1b3d5861bb2acd34dff406fc3139", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d814595c2c47096eb70ff15fffadc5218806aaec/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d814595c2c47096eb70ff15fffadc5218806aaec/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=d814595c2c47096eb70ff15fffadc5218806aaec", "patch": "@@ -1789,12 +1789,15 @@ AC_DEFUN([GLIBCXX_ENABLE_WCHAR_T], [\n     AC_DEFINE(HAVE_MBSTATE_T,1,[Define if mbstate_t exists in wchar.h.])\n   fi\n \n+  # Test it always, for use in GLIBCXX_ENABLE_C99, together with\n+  # ac_has_wchar_h.\n+  AC_CHECK_HEADERS(wctype.h, ac_has_wctype_h=yes, ac_has_wctype_h=no)\n+  \n   if test x\"$enable_wchar_t\" = x\"yes\"; then\n \n     AC_LANG_SAVE\n     AC_LANG_CPLUSPLUS\n     \n-    AC_CHECK_HEADERS(wctype.h, ac_has_wctype_h=yes, ac_has_wctype_h=no)\n     if test x\"$ac_has_wchar_h\" = xyes &&\n        test x\"$ac_has_wctype_h\" = xyes; then\n       AC_TRY_COMPILE([#include <wchar.h>"}, {"sha": "72dceb4089147ab70ced54926efa545f5ad6b97b", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 19, "deletions": 16, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d814595c2c47096eb70ff15fffadc5218806aaec/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d814595c2c47096eb70ff15fffadc5218806aaec/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=d814595c2c47096eb70ff15fffadc5218806aaec", "patch": "@@ -6471,7 +6471,6 @@ echo \"${ECHO_T}$enable_long_long\" >&6\n \n \n \n-\n    # Check whether --enable-wchar_t or --disable-wchar_t was given.\n if test \"${enable_wchar_t+set}\" = set; then\n   enableval=\"$enable_wchar_t\"\n@@ -6698,17 +6697,8 @@ _ACEOF\n \n   fi\n \n-  if test x\"$enable_wchar_t\" = x\"yes\"; then\n-\n-\n-\n-    ac_ext=cc\n-ac_cpp='$CXXCPP $CPPFLAGS'\n-ac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n-ac_link='$CXX -o conftest$ac_exeext $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n-ac_compiler_gnu=$ac_cv_cxx_compiler_gnu\n-\n-\n+  # Test it always, for use in GLIBCXX_ENABLE_C99, together with\n+  # ac_has_wchar_h.\n \n for ac_header in wctype.h\n do\n@@ -6743,7 +6733,7 @@ if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n   cat conftest.err >&5\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n   (exit $ac_status); } &&\n-\t { ac_try='test -z \"$ac_cxx_werror_flag\"\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\n \t\t\t || test ! -s conftest.err'\n   { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n   (eval $ac_try) 2>&5\n@@ -6787,8 +6777,8 @@ if { (eval echo \"$as_me:$LINENO: \\\"$ac_cpp conftest.$ac_ext\\\"\") >&5\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n   (exit $ac_status); } >/dev/null; then\n   if test -s conftest.err; then\n-    ac_cpp_err=$ac_cxx_preproc_warn_flag\n-    ac_cpp_err=$ac_cpp_err$ac_cxx_werror_flag\n+    ac_cpp_err=$ac_c_preproc_warn_flag\n+    ac_cpp_err=$ac_cpp_err$ac_c_werror_flag\n   else\n     ac_cpp_err=\n   fi\n@@ -6808,7 +6798,7 @@ echo \"$as_me:$LINENO: result: $ac_header_preproc\" >&5\n echo \"${ECHO_T}$ac_header_preproc\" >&6\n \n # So?  What about this header?\n-case $ac_header_compiler:$ac_header_preproc:$ac_cxx_preproc_warn_flag in\n+case $ac_header_compiler:$ac_header_preproc:$ac_c_preproc_warn_flag in\n   yes:no: )\n     { echo \"$as_me:$LINENO: WARNING: $ac_header: accepted by the compiler, rejected by the preprocessor!\" >&5\n echo \"$as_me: WARNING: $ac_header: accepted by the compiler, rejected by the preprocessor!\" >&2;}\n@@ -6861,6 +6851,18 @@ fi\n \n done\n \n+\n+  if test x\"$enable_wchar_t\" = x\"yes\"; then\n+\n+\n+\n+    ac_ext=cc\n+ac_cpp='$CXXCPP $CPPFLAGS'\n+ac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n+ac_link='$CXX -o conftest$ac_exeext $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n+ac_compiler_gnu=$ac_cv_cxx_compiler_gnu\n+\n+\n     if test x\"$ac_has_wchar_h\" = xyes &&\n        test x\"$ac_has_wctype_h\" = xyes; then\n       cat >conftest.$ac_ext <<_ACEOF\n@@ -6995,6 +6997,7 @@ echo $ECHO_N \"checking for enabled wchar_t specializations... $ECHO_C\" >&6\n echo \"${ECHO_T}$enable_wchar_t\" >&6\n \n \n+\n    # Check whether --enable-c99 or --disable-c99 was given.\n if test \"${enable_c99+set}\" = set; then\n   enableval=\"$enable_c99\""}]}