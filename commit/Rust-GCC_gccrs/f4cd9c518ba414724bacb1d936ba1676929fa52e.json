{"sha": "f4cd9c518ba414724bacb1d936ba1676929fa52e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjRjZDljNTE4YmE0MTQ3MjRiYWNiMWQ5MzZiYTE2NzY5MjlmYTUyZQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2014-05-20T19:20:59Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2014-05-20T19:20:59Z"}, "message": "re PR c++/58753 (Brace-initializing a vector with a direct-initialization NSDMI doesn't work in a template)\n\n/cp\n2014-05-20  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/58753\n\tPR c++/58930\n\tPR c++/58704\n\t* typeck2.c (digest_nsdmi_init): New.\n\t* parser.c (cp_parser_late_parse_one_default_arg): Use it.\n\t* init.c (get_nsdmi): Likewise.\n\t* cp-tree.h (digest_nsdmi_init): Declare.\n\n/testsuite\n2014-05-20  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/58753\n\tPR c++/58930\n\tPR c++/58704\n\t* g++.dg/cpp0x/nsdmi-template11.C: New.\n\t* g++.dg/cpp0x/nsdmi-template12.C: Likewise.\n\t* g++.dg/cpp0x/nsdmi-template13.C: Likewise.\n\nFrom-SVN: r210653", "tree": {"sha": "9702b7ba73d702d1ff68c785ac39e59b62e2c747", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9702b7ba73d702d1ff68c785ac39e59b62e2c747"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f4cd9c518ba414724bacb1d936ba1676929fa52e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4cd9c518ba414724bacb1d936ba1676929fa52e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4cd9c518ba414724bacb1d936ba1676929fa52e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4cd9c518ba414724bacb1d936ba1676929fa52e/comments", "author": null, "committer": null, "parents": [{"sha": "f98732327cfaa9a50d292553f36417b46dc835b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f98732327cfaa9a50d292553f36417b46dc835b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f98732327cfaa9a50d292553f36417b46dc835b8"}], "stats": {"total": 105, "additions": 90, "deletions": 15}, "files": [{"sha": "fb0d335c9251d0417859e5e528db2d99f58220ce", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4cd9c518ba414724bacb1d936ba1676929fa52e/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4cd9c518ba414724bacb1d936ba1676929fa52e/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=f4cd9c518ba414724bacb1d936ba1676929fa52e", "patch": "@@ -1,3 +1,13 @@\n+2014-05-20  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/58753\n+\tPR c++/58930\n+\tPR c++/58704\n+\t* typeck2.c (digest_nsdmi_init): New.\n+\t* parser.c (cp_parser_late_parse_one_default_arg): Use it.\n+\t* init.c (get_nsdmi): Likewise.\n+\t* cp-tree.h (digest_nsdmi_init): Declare.\n+\n 2014-05-20  Jason Merrill  <jason@redhat.com>\n \n \t* typeck.c (get_member_function_from_ptrfunc): Don't try to look"}, {"sha": "7d29c2c78ba77ff56afa09266e0f195b24984e51", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4cd9c518ba414724bacb1d936ba1676929fa52e/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4cd9c518ba414724bacb1d936ba1676929fa52e/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=f4cd9c518ba414724bacb1d936ba1676929fa52e", "patch": "@@ -6172,6 +6172,7 @@ extern tree store_init_value\t\t\t(tree, tree, vec<tree, va_gc>**, int);\n extern void check_narrowing\t\t\t(tree, tree);\n extern tree digest_init\t\t\t\t(tree, tree, tsubst_flags_t);\n extern tree digest_init_flags\t\t\t(tree, tree, int);\n+extern tree digest_nsdmi_init\t\t        (tree, tree);\n extern tree build_scoped_ref\t\t\t(tree, tree, tree *);\n extern tree build_x_arrow\t\t\t(location_t, tree,\n \t\t\t\t\t\t tsubst_flags_t);"}, {"sha": "42b25db9916c3b20c05c1e742e3f99bc6b9c3347", "filename": "gcc/cp/init.c", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4cd9c518ba414724bacb1d936ba1676929fa52e/gcc%2Fcp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4cd9c518ba414724bacb1d936ba1676929fa52e/gcc%2Fcp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.c?ref=f4cd9c518ba414724bacb1d936ba1676929fa52e", "patch": "@@ -534,12 +534,16 @@ get_nsdmi (tree member, bool in_ctor)\n   if (!in_ctor)\n     inject_this_parameter (DECL_CONTEXT (member), TYPE_UNQUALIFIED);\n   if (DECL_LANG_SPECIFIC (member) && DECL_TEMPLATE_INFO (member))\n-    /* Do deferred instantiation of the NSDMI.  */\n-    init = (tsubst_copy_and_build\n-\t    (DECL_INITIAL (DECL_TI_TEMPLATE (member)),\n-\t     DECL_TI_ARGS (member),\n-\t     tf_warning_or_error, member, /*function_p=*/false,\n-\t     /*integral_constant_expression_p=*/false));\n+    {\n+      /* Do deferred instantiation of the NSDMI.  */\n+      init = (tsubst_copy_and_build\n+\t      (DECL_INITIAL (DECL_TI_TEMPLATE (member)),\n+\t       DECL_TI_ARGS (member),\n+\t       tf_warning_or_error, member, /*function_p=*/false,\n+\t       /*integral_constant_expression_p=*/false));\n+\n+      init = digest_nsdmi_init (member, init);\n+    }\n   else\n     {\n       init = DECL_INITIAL (member);"}, {"sha": "d6bb51815c968428af5a39c88038f50770993558", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4cd9c518ba414724bacb1d936ba1676929fa52e/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4cd9c518ba414724bacb1d936ba1676929fa52e/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=f4cd9c518ba414724bacb1d936ba1676929fa52e", "patch": "@@ -23681,15 +23681,7 @@ cp_parser_late_parse_one_default_arg (cp_parser *parser, tree decl,\n \tparsed_arg = check_default_argument (parmtype, parsed_arg,\n \t\t\t\t\t     tf_warning_or_error);\n       else\n-\t{\n-\t  int flags = LOOKUP_IMPLICIT;\n-\t  if (DIRECT_LIST_INIT_P (parsed_arg))\n-\t    flags = LOOKUP_NORMAL;\n-\t  parsed_arg = digest_init_flags (TREE_TYPE (decl), parsed_arg, flags);\n-\t  if (TREE_CODE (parsed_arg) == TARGET_EXPR)\n-\t    /* This represents the whole initialization.  */\n-\t    TARGET_EXPR_DIRECT_INIT_P (parsed_arg) = true;\n-\t}\n+\tparsed_arg = digest_nsdmi_init (decl, parsed_arg);\n     }\n \n   /* If the token stream has not been completely used up, then"}, {"sha": "d50d93eb2eab8c265fa63e3853ae89559e812319", "filename": "gcc/cp/typeck2.c", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4cd9c518ba414724bacb1d936ba1676929fa52e/gcc%2Fcp%2Ftypeck2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4cd9c518ba414724bacb1d936ba1676929fa52e/gcc%2Fcp%2Ftypeck2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck2.c?ref=f4cd9c518ba414724bacb1d936ba1676929fa52e", "patch": "@@ -1114,6 +1114,22 @@ digest_init_flags (tree type, tree init, int flags)\n {\n   return digest_init_r (type, init, false, flags, tf_warning_or_error);\n }\n+\n+/* Process the initializer INIT for an NSDMI DECL (a FIELD_DECL).  */\n+tree\n+digest_nsdmi_init (tree decl, tree init)\n+{\n+  gcc_assert (TREE_CODE (decl) == FIELD_DECL);\n+\n+  int flags = LOOKUP_IMPLICIT;\n+  if (DIRECT_LIST_INIT_P (init))\n+    flags = LOOKUP_NORMAL;\n+  init = digest_init_flags (TREE_TYPE (decl), init, flags);\n+  if (TREE_CODE (init) == TARGET_EXPR)\n+    /* This represents the whole initialization.  */\n+    TARGET_EXPR_DIRECT_INIT_P (init) = true;\n+  return init;\n+}\n \f\n /* Set of flags used within process_init_constructor to describe the\n    initializers.  */"}, {"sha": "121cc1968e4a0b6a3a186910e5bf92a5b36abdb8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4cd9c518ba414724bacb1d936ba1676929fa52e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4cd9c518ba414724bacb1d936ba1676929fa52e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f4cd9c518ba414724bacb1d936ba1676929fa52e", "patch": "@@ -1,3 +1,12 @@\n+2014-05-20  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/58753\n+\tPR c++/58930\n+\tPR c++/58704\n+\t* g++.dg/cpp0x/nsdmi-template11.C: New.\n+\t* g++.dg/cpp0x/nsdmi-template12.C: Likewise.\n+\t* g++.dg/cpp0x/nsdmi-template13.C: Likewise.\n+\n 2014-05-20  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gnat.dg/opt35.adb: New test."}, {"sha": "60e53c4190a0969f2cce47e79163046e2256c010", "filename": "gcc/testsuite/g++.dg/cpp0x/nsdmi-template11.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4cd9c518ba414724bacb1d936ba1676929fa52e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnsdmi-template11.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4cd9c518ba414724bacb1d936ba1676929fa52e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnsdmi-template11.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnsdmi-template11.C?ref=f4cd9c518ba414724bacb1d936ba1676929fa52e", "patch": "@@ -0,0 +1,15 @@\n+// PR c++/58930\n+// { dg-do compile { target c++11 } }\n+\n+struct SampleModule\n+{\n+  explicit SampleModule (int);\n+};\n+\n+template < typename >\n+struct BaseHandler\n+{\n+  SampleModule module_ { 0 };\n+};\n+\n+BaseHandler<int> a;"}, {"sha": "5b87f429e8a830c6bf30ead500ecebb4fff6c0b6", "filename": "gcc/testsuite/g++.dg/cpp0x/nsdmi-template12.C", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4cd9c518ba414724bacb1d936ba1676929fa52e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnsdmi-template12.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4cd9c518ba414724bacb1d936ba1676929fa52e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnsdmi-template12.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnsdmi-template12.C?ref=f4cd9c518ba414724bacb1d936ba1676929fa52e", "patch": "@@ -0,0 +1,17 @@\n+// PR c++/58753\n+// { dg-do compile { target c++11 } }\n+\n+#include <initializer_list>\n+\n+template <class T>\n+struct X {X(std::initializer_list<int>) {}};\n+\n+template <class zomg> \n+class T {\n+  X<T> x{1}; \n+}; \n+\n+int main()\n+{\n+  T<int> t;\n+}"}, {"sha": "65ccd0aaa7f7384bbeea23a7b859235e2cd0bb63", "filename": "gcc/testsuite/g++.dg/cpp0x/nsdmi-template13.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4cd9c518ba414724bacb1d936ba1676929fa52e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnsdmi-template13.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4cd9c518ba414724bacb1d936ba1676929fa52e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnsdmi-template13.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnsdmi-template13.C?ref=f4cd9c518ba414724bacb1d936ba1676929fa52e", "patch": "@@ -0,0 +1,11 @@\n+// PR c++/58704\n+// { dg-do compile { target c++11 } }\n+\n+struct A {};\n+\n+template<typename> struct B\n+{\n+  A a[1] = { };\n+};\n+\n+B<int> b;"}]}