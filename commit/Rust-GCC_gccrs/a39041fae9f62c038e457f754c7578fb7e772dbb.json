{"sha": "a39041fae9f62c038e457f754c7578fb7e772dbb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTM5MDQxZmFlOWY2MmMwMzhlNDU3Zjc1NGM3NTc4ZmI3ZTc3MmRiYg==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2005-11-03T19:45:10Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2005-11-03T19:45:10Z"}, "message": "re PR c++/21627 (invalid inline warning with ctor and dtor)\n\n\tPR c++/21627\n\t* pt.c (register_specialization): Update inline flags on clones.y\n\tPR c++/21627\n\t* g++.dg/warn/inline2.C: New test.\n\nFrom-SVN: r106442", "tree": {"sha": "dea56d9d67c7b62563b127fbb29c1025411a7d4c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dea56d9d67c7b62563b127fbb29c1025411a7d4c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a39041fae9f62c038e457f754c7578fb7e772dbb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a39041fae9f62c038e457f754c7578fb7e772dbb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a39041fae9f62c038e457f754c7578fb7e772dbb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a39041fae9f62c038e457f754c7578fb7e772dbb/comments", "author": null, "committer": null, "parents": [{"sha": "98d59fe652402d1b42d3da0f39ab897d13d7a042", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98d59fe652402d1b42d3da0f39ab897d13d7a042", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98d59fe652402d1b42d3da0f39ab897d13d7a042"}], "stats": {"total": 48, "additions": 48, "deletions": 0}, "files": [{"sha": "625413b364f7cbba317346ff70503c06e0543f33", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a39041fae9f62c038e457f754c7578fb7e772dbb/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a39041fae9f62c038e457f754c7578fb7e772dbb/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=a39041fae9f62c038e457f754c7578fb7e772dbb", "patch": "@@ -1,3 +1,8 @@\n+2005-11-03  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/21627\n+\t* pt.c (register_specialization): Update inline flags on clones.y\n+\n 2005-11-03  Andrew Pinski  <pinskia@physics.uc.edu>\n \n \tPR c++/24582"}, {"sha": "1efd808ff4e1577e39c05cc59411d3d7cf6351b0", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a39041fae9f62c038e457f754c7578fb7e772dbb/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a39041fae9f62c038e457f754c7578fb7e772dbb/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=a39041fae9f62c038e457f754c7578fb7e772dbb", "patch": "@@ -1179,6 +1179,7 @@ register_specialization (tree spec, tree tmpl, tree args, bool is_friend)\n \t    }\n \t  else\n \t    {\n+\t      tree clone;\n \t      /* This situation should occur only if the first\n \t\t specialization is an implicit instantiation, the\n \t\t second is an explicit specialization, and the\n@@ -1204,6 +1205,23 @@ register_specialization (tree spec, tree tmpl, tree args, bool is_friend)\n \t\t there were no definition, and vice versa.  */\n \t      DECL_INITIAL (fn) = NULL_TREE;\n \t      duplicate_decls (spec, fn, is_friend);\n+\t      /* The call to duplicate_decls will have applied\n+\t\t [temp.expl.spec]: \n+\n+  \t           An explicit specialization of a function template\n+\t\t   is inline only if it is explicitly declared to be,\n+\t\t   and independently of whether its function tempalte\n+\t\t   is.\n+\n+\t\tto the primary function; now copy the inline bits to\n+\t\tthe various clones.  */   \n+\t      FOR_EACH_CLONE (clone, fn)\n+\t\t{\n+\t\t  DECL_DECLARED_INLINE_P (clone)\n+\t\t    = DECL_DECLARED_INLINE_P (fn);\n+\t\t  DECL_INLINE (clone)\n+\t\t    = DECL_INLINE (fn);\n+\t\t}\n \t      check_specialization_namespace (fn);\n \n \t      return fn;"}, {"sha": "cec54ef070ee6f804aa7adc1b5ba9b1af46932ab", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a39041fae9f62c038e457f754c7578fb7e772dbb/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a39041fae9f62c038e457f754c7578fb7e772dbb/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a39041fae9f62c038e457f754c7578fb7e772dbb", "patch": "@@ -1,3 +1,8 @@\n+2005-11-03  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/21627\n+\t* g++.dg/warn/inline2.C: New test.\n+\n 2005-11-03  Andrew Pinski  <pinskia@physics.uc.edu>\n \n \tPR middle-end/23155 "}, {"sha": "0f5f78af11c8bc9e8b5557c73e493819e2d79ada", "filename": "gcc/testsuite/g++.dg/warn/inline2.C", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a39041fae9f62c038e457f754c7578fb7e772dbb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Finline2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a39041fae9f62c038e457f754c7578fb7e772dbb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Finline2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Finline2.C?ref=a39041fae9f62c038e457f754c7578fb7e772dbb", "patch": "@@ -0,0 +1,20 @@\n+// PR c++/21627\n+\n+template<typename T>\n+struct TPL \n+{\n+  TPL (){}\n+  ~TPL (){}\n+  void method () {}\n+};\n+\n+template <> TPL<int>::TPL ();\n+template <> TPL<int>::~TPL ();\n+template <> void TPL<int>::method ();\n+\n+void Foo ()\n+{\n+  TPL<int> i;\n+  i.method ();\n+}\n+"}]}