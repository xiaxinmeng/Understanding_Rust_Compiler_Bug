{"sha": "de5b5228631d14e272ec8bf93827dea3da16a33d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGU1YjUyMjg2MzFkMTRlMjcyZWM4YmY5MzgyN2RlYTNkYTE2YTMzZA==", "commit": {"author": {"name": "Alexander Monakov", "email": "amonakov@ispras.ru", "date": "2018-08-27T14:08:50Z"}, "committer": {"name": "Alexander Monakov", "email": "amonakov@gcc.gnu.org", "date": "2018-08-27T14:08:50Z"}, "message": "match.pd: add single-use check for (x & y) ^ y -> ~x & y (PR 85758)\n\n\tPR tree-optimization/85758\n\t* match.pd ((X & Y) ^ Y): Add :s qualifier to inner expression.\n\nFrom-SVN: r263887", "tree": {"sha": "58d0821bd3945ea94fdd02018160bb52023e6dfe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/58d0821bd3945ea94fdd02018160bb52023e6dfe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/de5b5228631d14e272ec8bf93827dea3da16a33d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de5b5228631d14e272ec8bf93827dea3da16a33d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de5b5228631d14e272ec8bf93827dea3da16a33d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de5b5228631d14e272ec8bf93827dea3da16a33d/comments", "author": {"login": "amonakov", "id": 1997391, "node_id": "MDQ6VXNlcjE5OTczOTE=", "avatar_url": "https://avatars.githubusercontent.com/u/1997391?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amonakov", "html_url": "https://github.com/amonakov", "followers_url": "https://api.github.com/users/amonakov/followers", "following_url": "https://api.github.com/users/amonakov/following{/other_user}", "gists_url": "https://api.github.com/users/amonakov/gists{/gist_id}", "starred_url": "https://api.github.com/users/amonakov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amonakov/subscriptions", "organizations_url": "https://api.github.com/users/amonakov/orgs", "repos_url": "https://api.github.com/users/amonakov/repos", "events_url": "https://api.github.com/users/amonakov/events{/privacy}", "received_events_url": "https://api.github.com/users/amonakov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "92a285c1a7bad310d7223a7aa5d70e6a5fc3e644", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92a285c1a7bad310d7223a7aa5d70e6a5fc3e644", "html_url": "https://github.com/Rust-GCC/gccrs/commit/92a285c1a7bad310d7223a7aa5d70e6a5fc3e644"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "123d76c86804ddb6219da123071845243bef9393", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de5b5228631d14e272ec8bf93827dea3da16a33d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de5b5228631d14e272ec8bf93827dea3da16a33d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=de5b5228631d14e272ec8bf93827dea3da16a33d", "patch": "@@ -1,3 +1,8 @@\n+2018-08-27  Alexander Monakov  <amonakov@ispras.ru>\n+\n+\tPR tree-optimization/85758\n+\t* match.pd ((X & Y) ^ Y): Add :s qualifier to inner expression.\n+\n 2018-08-27  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR 87091"}, {"sha": "d43e52d05cddbe0644de27f848487d56b9ab07cc", "filename": "gcc/match.pd", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de5b5228631d14e272ec8bf93827dea3da16a33d/gcc%2Fmatch.pd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de5b5228631d14e272ec8bf93827dea3da16a33d/gcc%2Fmatch.pd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatch.pd?ref=de5b5228631d14e272ec8bf93827dea3da16a33d", "patch": "@@ -1027,7 +1027,7 @@ DEFINE_INT_AND_FLOAT_ROUND_FN (RINT)\n (for opo (bit_and bit_xor)\n      opi (bit_xor bit_and)\n  (simplify\n-  (opo:c (opi:c @0 @1) @1) \n+  (opo:c (opi:cs @0 @1) @1)\n   (bit_and (bit_not @0) @1)))\n \n /* Given a bit-wise operation CODE applied to ARG0 and ARG1, see if both"}]}