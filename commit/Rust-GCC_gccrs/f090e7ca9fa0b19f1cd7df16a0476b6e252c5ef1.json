{"sha": "f090e7ca9fa0b19f1cd7df16a0476b6e252c5ef1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjA5MGU3Y2E5ZmEwYjE5ZjFjZDdkZjE2YTA0NzZiNmUyNTJjNWVmMQ==", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-07-10T20:39:35Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-07-10T20:39:35Z"}, "message": "Merge #558\n\n558: Call MarkLive inside ScanDeadcode, then the pass entrance will be single in session::parse_file r=philberty a=thomasyonug\n\nCall MarkLive inside ScanDeadcode, then the pass entrance will be single in session::parse_file\n\nCo-authored-by: Thomas Young <wenzhang5800@gmail.com>", "tree": {"sha": "b93cd60759e608f8314a481a86adf442809f9706", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b93cd60759e608f8314a481a86adf442809f9706"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f090e7ca9fa0b19f1cd7df16a0476b6e252c5ef1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJg6gWHCRBK7hj4Ov3rIwAAYVYIAHdjGoh8coK8ZgjREPPaDKzz\nweGPZnYw5JGbdgfix4D5Y9CfAvxaektR9EYKXw5ExvOoHB76/MxzvYqJvz/ePVYF\n5yHAuef4AYuWHQpOr+wnQZNgWRiFu/UYx2R2d4z+WfNdTNYEvw58IqF2eKm/YKGS\nGt9URsVJqei3vtfLXIXeMqMajb5PMVy4k3giT2cyY3xHKAwpfEOamiZRyiEMF2bf\nqVsBsZT3JX4borqAYDUCXDBlM5NchWeol2ODDMOZt6vOFTDeP2u+KFrcG2rGl9ya\nIG6xSP2tKb6sj8rArxZoPuQ94TraKQ8EgR5PXnGJrznb73j1b1D71o3uCDz6+8c=\n=rTjy\n-----END PGP SIGNATURE-----\n", "payload": "tree b93cd60759e608f8314a481a86adf442809f9706\nparent 9a58a5c256b866e6f66eb3cfb3a9a199dad3e42d\nparent 458690323312f06c6e56f102edc6479fc7dcc9c0\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1625949575 +0000\ncommitter GitHub <noreply@github.com> 1625949575 +0000\n\nMerge #558\n\n558: Call MarkLive inside ScanDeadcode, then the pass entrance will be single in session::parse_file r=philberty a=thomasyonug\n\nCall MarkLive inside ScanDeadcode, then the pass entrance will be single in session::parse_file\n\nCo-authored-by: Thomas Young <wenzhang5800@gmail.com>\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f090e7ca9fa0b19f1cd7df16a0476b6e252c5ef1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f090e7ca9fa0b19f1cd7df16a0476b6e252c5ef1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f090e7ca9fa0b19f1cd7df16a0476b6e252c5ef1/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9a58a5c256b866e6f66eb3cfb3a9a199dad3e42d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a58a5c256b866e6f66eb3cfb3a9a199dad3e42d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a58a5c256b866e6f66eb3cfb3a9a199dad3e42d"}, {"sha": "458690323312f06c6e56f102edc6479fc7dcc9c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/458690323312f06c6e56f102edc6479fc7dcc9c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/458690323312f06c6e56f102edc6479fc7dcc9c0"}], "stats": {"total": 14, "additions": 4, "deletions": 10}, "files": [{"sha": "1128818aa80e1dc44be367fd6622724534ab53a8", "filename": "gcc/rust/lint/rust-lint-scan-deadcode.h", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f090e7ca9fa0b19f1cd7df16a0476b6e252c5ef1/gcc%2Frust%2Flint%2Frust-lint-scan-deadcode.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f090e7ca9fa0b19f1cd7df16a0476b6e252c5ef1/gcc%2Frust%2Flint%2Frust-lint-scan-deadcode.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Flint%2Frust-lint-scan-deadcode.h?ref=f090e7ca9fa0b19f1cd7df16a0476b6e252c5ef1", "patch": "@@ -22,7 +22,7 @@\n #include <set>\n #include \"rust-hir-full-decls.h\"\n #include \"rust-hir-map.h\"\n-#include \"rust-lint-marklive-base.h\"\n+#include \"rust-lint-marklive.h\"\n #include \"rust-name-resolver.h\"\n #include \"rust-diagnostics.h\"\n \n@@ -34,8 +34,9 @@ class ScanDeadcode : public MarkLiveBase\n   using Rust::Analysis::MarkLiveBase::visit;\n \n public:\n-  static void Scan (HIR::Crate &crate, std::set<HirId> live_symbols)\n+  static void Scan (HIR::Crate &crate)\n   {\n+    std::set<HirId> live_symbols = Analysis::MarkLive::Analysis (crate);\n     ScanDeadcode sdc (live_symbols);\n     for (auto it = crate.items.begin (); it != crate.items.end (); it++)\n       {"}, {"sha": "504f3086e4f00ca2f7d4b99f6de21e51bf696fb3", "filename": "gcc/rust/rust-session-manager.cc", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f090e7ca9fa0b19f1cd7df16a0476b6e252c5ef1/gcc%2Frust%2Frust-session-manager.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f090e7ca9fa0b19f1cd7df16a0476b6e252c5ef1/gcc%2Frust%2Frust-session-manager.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Frust-session-manager.cc?ref=f090e7ca9fa0b19f1cd7df16a0476b6e252c5ef1", "patch": "@@ -49,7 +49,6 @@\n #include \"rust-ast-resolve.h\"\n #include \"rust-ast-lower.h\"\n #include \"rust-hir-type-check.h\"\n-#include \"rust-lint-marklive.h\"\n #include \"rust-lint-scan-deadcode.h\"\n #include \"rust-tycheck-dump.h\"\n #include \"rust-ast-resolve-unused.h\"\n@@ -572,17 +571,11 @@ Session::parse_file (const char *filename)\n       dump_type_resolution (hir);\n     }\n \n-  if (saw_errors ())\n-    return;\n-\n-  // liveness analysis\n-  std::set<HirId> live_symbols = Analysis::MarkLive::Analysis (hir);\n-\n   if (saw_errors ())\n     return;\n \n   // scan dead code\n-  Analysis::ScanDeadcode::Scan (hir, live_symbols);\n+  Analysis::ScanDeadcode::Scan (hir);\n \n   if (saw_errors ())\n     return;"}]}