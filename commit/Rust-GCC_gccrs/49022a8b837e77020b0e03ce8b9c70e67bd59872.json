{"sha": "49022a8b837e77020b0e03ce8b9c70e67bd59872", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDkwMjJhOGI4MzdlNzcwMjBiMGUwM2NlOGI5YzcwZTY3YmQ1OTg3Mg==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2018-10-05T10:52:33Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2018-10-05T10:52:33Z"}, "message": "rs6000: Various fixes for the new fpscr builtins (PR87509)\n\nWith these fixes all testcases test clean for me, both on\npowerpc64-linux {-m32,-m64} and on powerpc64le-linux, with all\nrelevant -mcpu= settings.\n\n\n\tPR target/87509\n\t* config/rs6000/rs6000-builtin.def (RS6000_BUILTIN_SET_FPSCR_DRN): Use\n\tRS6000_BTM_DFP.\n\t* config/rs6000/rs6000.md (rs6000_set_fpscr_rn): Require the operand\n\tto be DImode.  When using mffscrn, force the operand to a register.\n\ngcc/testsuite/\n\tPR target/87509\n\t* gcc.target/powerpc/test_fpscr_drn_builtin.c: Use hard_dfp instead\n\tof dfp_hw.  Don't include <altivec.h>.\n\t* gcc.target/powerpc/test_fpscr_drn_builtin_error.c: Ditto.  Require\n\tlp64.\n\t* gcc.target/powerpc/test_fpscr_rn_builtin.c: Don't include <altivec.h>.\n\t* gcc.target/powerpc/test_fpscr_rn_builtin_error.c: Ditto.\n\t* gcc.target/powerpc/test_mffsl.c: Ditto.\n\nFrom-SVN: r264863", "tree": {"sha": "15fd212e7641714976b9b20a7af8bd75e1cce615", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/15fd212e7641714976b9b20a7af8bd75e1cce615"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/49022a8b837e77020b0e03ce8b9c70e67bd59872", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49022a8b837e77020b0e03ce8b9c70e67bd59872", "html_url": "https://github.com/Rust-GCC/gccrs/commit/49022a8b837e77020b0e03ce8b9c70e67bd59872", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49022a8b837e77020b0e03ce8b9c70e67bd59872/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3665f77c7f63737252fea0e153a6426aa1241a7a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3665f77c7f63737252fea0e153a6426aa1241a7a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3665f77c7f63737252fea0e153a6426aa1241a7a"}], "stats": {"total": 44, "additions": 26, "deletions": 18}, "files": [{"sha": "e5575fe99855156a68e963a96911c1ab80a6cd69", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49022a8b837e77020b0e03ce8b9c70e67bd59872/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49022a8b837e77020b0e03ce8b9c70e67bd59872/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=49022a8b837e77020b0e03ce8b9c70e67bd59872", "patch": "@@ -1,3 +1,11 @@\n+2018-10-05  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\tPR target/87509\n+\t* config/rs6000/rs6000-builtin.def (RS6000_BUILTIN_SET_FPSCR_DRN): Use\n+\tRS6000_BTM_DFP.\n+\t* config/rs6000/rs6000.md (rs6000_set_fpscr_rn): Require the operand\n+\tto be DImode.  When using mffscrn, force the operand to a register.\n+\n 2018-10-04  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/i386.md (*fop_<X87MODEF:mode>_2_i387): Macroize insn"}, {"sha": "ec0528a7ac308154ab1e1bfe7780de704aeeaa5e", "filename": "gcc/config/rs6000/rs6000-builtin.def", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49022a8b837e77020b0e03ce8b9c70e67bd59872/gcc%2Fconfig%2Frs6000%2Frs6000-builtin.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49022a8b837e77020b0e03ce8b9c70e67bd59872/gcc%2Fconfig%2Frs6000%2Frs6000-builtin.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-builtin.def?ref=49022a8b837e77020b0e03ce8b9c70e67bd59872", "patch": "@@ -2510,7 +2510,7 @@ RS6000_BUILTIN_X (RS6000_BUILTIN_SET_FPSCR_RN, \"__builtin_set_fpscr_rn\",\n \t\t  CODE_FOR_rs6000_set_fpscr_rn)\n \n RS6000_BUILTIN_X (RS6000_BUILTIN_SET_FPSCR_DRN, \"__builtin_set_fpscr_drn\",\n-\t\t  RS6000_BTM_ALWAYS,\n+\t\t  RS6000_BTM_DFP,\n \t\t  RS6000_BTC_MISC | RS6000_BTM_64BIT | RS6000_BTC_UNARY\n \t\t  | RS6000_BTC_VOID,\n \t\t  CODE_FOR_rs6000_set_fpscr_drn)"}, {"sha": "5db3e57f347ce100f1bf7d5d44e3eb99058487a7", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49022a8b837e77020b0e03ce8b9c70e67bd59872/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49022a8b837e77020b0e03ce8b9c70e67bd59872/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=49022a8b837e77020b0e03ce8b9c70e67bd59872", "patch": "@@ -5848,7 +5848,7 @@\n   [(set_attr \"type\" \"fp\")])\n \n (define_expand \"rs6000_set_fpscr_rn\"\n- [(match_operand 0 \"reg_or_cint_operand\")]\n+ [(match_operand:DI 0 \"reg_or_cint_operand\")]\n   \"TARGET_HARD_FLOAT\"\n {\n   rtx tmp_df = gen_reg_rtx (DFmode);\n@@ -5857,9 +5857,8 @@\n      new rounding mode bits from operands[0][62:63] into FPSCR[62:63].  */\n   if (TARGET_P9_MISC)\n     {\n-      rtx src_df = gen_reg_rtx (DImode);\n-\n-      src_df = simplify_gen_subreg (DFmode, operands[0], DImode, 0);\n+      rtx src_df = force_reg (DImode, operands[0]);\n+      src_df = simplify_gen_subreg (DFmode, src_df, DImode, 0);\n       emit_insn (gen_rs6000_mffscrn (tmp_df, src_df));\n       DONE;\n     }"}, {"sha": "d621194739f2df81a2c07be184c9fac62796562e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49022a8b837e77020b0e03ce8b9c70e67bd59872/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49022a8b837e77020b0e03ce8b9c70e67bd59872/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=49022a8b837e77020b0e03ce8b9c70e67bd59872", "patch": "@@ -1,3 +1,14 @@\n+2018-10-05  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\tPR target/87509\n+\t* gcc.target/powerpc/test_fpscr_drn_builtin.c: Use hard_dfp instead\n+\tof dfp_hw.  Don't include <altivec.h>.\n+\t* gcc.target/powerpc/test_fpscr_drn_builtin_error.c: Ditto.  Require\n+\tlp64.\n+\t* gcc.target/powerpc/test_fpscr_rn_builtin.c: Don't include <altivec.h>.\n+\t* gcc.target/powerpc/test_fpscr_rn_builtin_error.c: Ditto.\n+\t* gcc.target/powerpc/test_mffsl.c: Ditto.\n+\n 2018-10-04  Vinay Kumar  <vinay.kumar@blackfigtech.com>\n \n \t* c-c++-common/Wprio-ctor-dtor.c: New test."}, {"sha": "00b11f867bac09911bbaa88b52dc1ae062261d4c", "filename": "gcc/testsuite/gcc.target/powerpc/test_fpscr_drn_builtin.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49022a8b837e77020b0e03ce8b9c70e67bd59872/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ftest_fpscr_drn_builtin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49022a8b837e77020b0e03ce8b9c70e67bd59872/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ftest_fpscr_drn_builtin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ftest_fpscr_drn_builtin.c?ref=49022a8b837e77020b0e03ce8b9c70e67bd59872", "patch": "@@ -1,9 +1,7 @@\n /* { dg-do run { target { powerpc*-*-* &&  lp64 } } } */\n-/* { dg-require-effective-target dfp_hw } */\n+/* { dg-require-effective-target hard_dfp } */\n /* { dg-options \"-O2 -std=c99\" } */\n \n-#include <altivec.h>\n-\n #ifdef DEBUG\n #include <stdio.h>\n #endif"}, {"sha": "028ab0b6d6670cba9d7f60fffca6555c7ea0f2bf", "filename": "gcc/testsuite/gcc.target/powerpc/test_fpscr_drn_builtin_error.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49022a8b837e77020b0e03ce8b9c70e67bd59872/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ftest_fpscr_drn_builtin_error.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49022a8b837e77020b0e03ce8b9c70e67bd59872/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ftest_fpscr_drn_builtin_error.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ftest_fpscr_drn_builtin_error.c?ref=49022a8b837e77020b0e03ce8b9c70e67bd59872", "patch": "@@ -1,9 +1,7 @@\n-/* { dg-do compile { target powerpc*-*-* } } */\n-/* { dg-require-effective-target dfp_hw } */\n+/* { dg-do compile { target { powerpc*-*-* && lp64 } } } */\n+/* { dg-require-effective-target hard_dfp } */\n /* { dg-options \"-O2 -std=c99\" } */\n \n-#include <altivec.h>\n-\n int main ()\n {\n "}, {"sha": "0d0d3f0f96b04bc98bc23378a1448c9c42e5809a", "filename": "gcc/testsuite/gcc.target/powerpc/test_fpscr_rn_builtin.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49022a8b837e77020b0e03ce8b9c70e67bd59872/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ftest_fpscr_rn_builtin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49022a8b837e77020b0e03ce8b9c70e67bd59872/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ftest_fpscr_rn_builtin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ftest_fpscr_rn_builtin.c?ref=49022a8b837e77020b0e03ce8b9c70e67bd59872", "patch": "@@ -1,8 +1,6 @@\n /* { dg-do run { target { powerpc*-*-* } } } */\n /* { dg-options \"-O2 -std=c99\" } */\n \n-#include <altivec.h>\n-\n #ifdef DEBUG\n #include <stdio.h>\n #endif"}, {"sha": "aea65091b0c4639171485d7322c282a1d7db6270", "filename": "gcc/testsuite/gcc.target/powerpc/test_fpscr_rn_builtin_error.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49022a8b837e77020b0e03ce8b9c70e67bd59872/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ftest_fpscr_rn_builtin_error.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49022a8b837e77020b0e03ce8b9c70e67bd59872/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ftest_fpscr_rn_builtin_error.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ftest_fpscr_rn_builtin_error.c?ref=49022a8b837e77020b0e03ce8b9c70e67bd59872", "patch": "@@ -1,8 +1,6 @@\n /* { dg-do compile { target powerpc*-*-* } } */\n /* { dg-options \"-O2 -std=c99\" } */\n \n-#include <altivec.h>\n-\n int main ()\n {\n "}, {"sha": "93a8ec245160ad645f196d6f7a5141b335efe1cd", "filename": "gcc/testsuite/gcc.target/powerpc/test_mffsl.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49022a8b837e77020b0e03ce8b9c70e67bd59872/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ftest_mffsl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49022a8b837e77020b0e03ce8b9c70e67bd59872/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ftest_mffsl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ftest_mffsl.c?ref=49022a8b837e77020b0e03ce8b9c70e67bd59872", "patch": "@@ -1,8 +1,6 @@\n /* { dg-do run { target { powerpc*-*-* } } } */\n /* { dg-options \"-O2 -std=c99\" } */\n \n-#include <altivec.h>\n-\n #ifdef DEBUG\n #include <stdio.h>\n #endif"}]}