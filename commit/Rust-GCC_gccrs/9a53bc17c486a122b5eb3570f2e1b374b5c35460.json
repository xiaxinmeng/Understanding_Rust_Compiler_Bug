{"sha": "9a53bc17c486a122b5eb3570f2e1b374b5c35460", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWE1M2JjMTdjNDg2YTEyMmI1ZWIzNTcwZjJlMWIzNzRiNWMzNTQ2MA==", "commit": {"author": {"name": "Paolo Bonzini", "email": "bonzini@gnu.org", "date": "2009-04-07T12:30:59Z"}, "committer": {"name": "Paolo Bonzini", "email": "bonzini@gcc.gnu.org", "date": "2009-04-07T12:30:59Z"}, "message": "expr.c (convert_move): Use emit_store_flag instead of \"emulating\" it.\n\n2009-04-07  Paolo Bonzini  <bonzini@gnu.org>\n\n        * expr.c (convert_move): Use emit_store_flag instead of\n        \"emulating\" it.\n\nFrom-SVN: r145666", "tree": {"sha": "3f4ae47d601564892feee69ecd2e7fa2feac9aca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3f4ae47d601564892feee69ecd2e7fa2feac9aca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9a53bc17c486a122b5eb3570f2e1b374b5c35460", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a53bc17c486a122b5eb3570f2e1b374b5c35460", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a53bc17c486a122b5eb3570f2e1b374b5c35460", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a53bc17c486a122b5eb3570f2e1b374b5c35460/comments", "author": {"login": "bonzini", "id": 42082, "node_id": "MDQ6VXNlcjQyMDgy", "avatar_url": "https://avatars.githubusercontent.com/u/42082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bonzini", "html_url": "https://github.com/bonzini", "followers_url": "https://api.github.com/users/bonzini/followers", "following_url": "https://api.github.com/users/bonzini/following{/other_user}", "gists_url": "https://api.github.com/users/bonzini/gists{/gist_id}", "starred_url": "https://api.github.com/users/bonzini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bonzini/subscriptions", "organizations_url": "https://api.github.com/users/bonzini/orgs", "repos_url": "https://api.github.com/users/bonzini/repos", "events_url": "https://api.github.com/users/bonzini/events{/privacy}", "received_events_url": "https://api.github.com/users/bonzini/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "67b8f1c1494dd7e1832030e4f6b1cb8c9ca0427d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67b8f1c1494dd7e1832030e4f6b1cb8c9ca0427d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/67b8f1c1494dd7e1832030e4f6b1cb8c9ca0427d"}], "stats": {"total": 29, "additions": 8, "deletions": 21}, "files": [{"sha": "8c946ebe3071a00904750199bc3881dcce8afb06", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a53bc17c486a122b5eb3570f2e1b374b5c35460/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a53bc17c486a122b5eb3570f2e1b374b5c35460/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9a53bc17c486a122b5eb3570f2e1b374b5c35460", "patch": "@@ -1,3 +1,8 @@\n+2009-04-07  Paolo Bonzini  <bonzini@gnu.org>\n+\n+        * expr.c (convert_move): Use emit_store_flag instead of\n+        \"emulating\" it.\n+\n 2009-04-07  Paolo Bonzini  <bonzini@gnu.org>\n \n         * config/i386/i386.c (ix86_compare_emitted): Remove."}, {"sha": "f25ec7b4b18647c765267fb75821b0130a333c1f", "filename": "gcc/expr.c", "status": "modified", "additions": 3, "deletions": 21, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a53bc17c486a122b5eb3570f2e1b374b5c35460/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a53bc17c486a122b5eb3570f2e1b374b5c35460/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=9a53bc17c486a122b5eb3570f2e1b374b5c35460", "patch": "@@ -588,27 +588,9 @@ convert_move (rtx to, rtx from, int unsignedp)\n       if (unsignedp)\n \tfill_value = const0_rtx;\n       else\n-\t{\n-#ifdef HAVE_slt\n-\t  if (HAVE_slt\n-\t      && insn_data[(int) CODE_FOR_slt].operand[0].mode == word_mode\n-\t      && STORE_FLAG_VALUE == -1)\n-\t    {\n-\t      emit_cmp_insn (lowfrom, const0_rtx, NE, NULL_RTX,\n-\t\t\t     lowpart_mode, 0);\n-\t      fill_value = gen_reg_rtx (word_mode);\n-\t      emit_insn (gen_slt (fill_value));\n-\t    }\n-\t  else\n-#endif\n-\t    {\n-\t      fill_value\n-\t\t= expand_shift (RSHIFT_EXPR, lowpart_mode, lowfrom,\n-\t\t\t\tsize_int (GET_MODE_BITSIZE (lowpart_mode) - 1),\n-\t\t\t\tNULL_RTX, 0);\n-\t      fill_value = convert_to_mode (word_mode, fill_value, 1);\n-\t    }\n-\t}\n+\tfill_value = emit_store_flag (gen_reg_rtx (word_mode),\n+\t\t\t\t      LT, lowfrom, const0_rtx,\n+\t\t\t\t      VOIDmode, 0, -1);\n \n       /* Fill the remaining words.  */\n       for (i = GET_MODE_SIZE (lowpart_mode) / UNITS_PER_WORD; i < nwords; i++)"}]}