{"sha": "4061c1a39342c6dc6ff372a9e05d206acad4fac5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDA2MWMxYTM5MzQyYzZkYzZmZjM3MmE5ZTA1ZDIwNmFjYWQ0ZmFjNQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2002-03-13T07:41:45Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2002-03-13T07:41:45Z"}, "message": "loop.c (basic_induction_var): Don't call convert_modes if mode classes are different.\n\n\t* loop.c (basic_induction_var): Don't call convert_modes if mode\n\tclasses are different.\n\n\t* gcc.c-torture/compile/20020309-2.c: New test.\n\nFrom-SVN: r50721", "tree": {"sha": "d1257f9eca533414f42e43fe6d3e0fc749d0f580", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d1257f9eca533414f42e43fe6d3e0fc749d0f580"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4061c1a39342c6dc6ff372a9e05d206acad4fac5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4061c1a39342c6dc6ff372a9e05d206acad4fac5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4061c1a39342c6dc6ff372a9e05d206acad4fac5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4061c1a39342c6dc6ff372a9e05d206acad4fac5/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9f53e9654b86fd142c8c3e66ce843ddb9b1de0b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f53e9654b86fd142c8c3e66ce843ddb9b1de0b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f53e9654b86fd142c8c3e66ce843ddb9b1de0b3"}], "stats": {"total": 32, "additions": 29, "deletions": 3}, "files": [{"sha": "5bd8a31badfd5be3a0c7ecde658d235389794b4f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4061c1a39342c6dc6ff372a9e05d206acad4fac5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4061c1a39342c6dc6ff372a9e05d206acad4fac5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4061c1a39342c6dc6ff372a9e05d206acad4fac5", "patch": "@@ -1,3 +1,8 @@\n+2002-03-13  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* loop.c (basic_induction_var): Don't call convert_modes if mode\n+\tclasses are different.\n+\n 2002-03-12  Richard Henderson  <rth@redhat.com>\n \n \tPR optimization/5901"}, {"sha": "6617608cfd3078a4a0b173f5c0a81e938e307a41", "filename": "gcc/loop.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4061c1a39342c6dc6ff372a9e05d206acad4fac5/gcc%2Floop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4061c1a39342c6dc6ff372a9e05d206acad4fac5/gcc%2Floop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop.c?ref=4061c1a39342c6dc6ff372a9e05d206acad4fac5", "patch": "@@ -6214,10 +6214,11 @@ basic_induction_var (loop, x, mode, dest_reg, p, inc_val, mult_val, location)\n     case CONST:\n       /* convert_modes aborts if we try to convert to or from CCmode, so just\n          exclude that case.  It is very unlikely that a condition code value\n-\t would be a useful iterator anyways.  */\n+\t would be a useful iterator anyways.  convert_modes aborts if we try to\n+\t convert a float mode to non-float or vice versa too.  */\n       if (loop->level == 1\n-\t  && GET_MODE_CLASS (mode) != MODE_CC\n-\t  && GET_MODE_CLASS (GET_MODE (dest_reg)) != MODE_CC)\n+\t  && GET_MODE_CLASS (mode) == GET_MODE_CLASS (GET_MODE (dest_reg))\n+\t  && GET_MODE_CLASS (mode) != MODE_CC)\n \t{\n \t  /* Possible bug here?  Perhaps we don't know the mode of X.  */\n \t  *inc_val = convert_modes (GET_MODE (dest_reg), mode, x, 0);"}, {"sha": "9d5522026415d798c2a203081b2446f6322c688e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4061c1a39342c6dc6ff372a9e05d206acad4fac5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4061c1a39342c6dc6ff372a9e05d206acad4fac5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4061c1a39342c6dc6ff372a9e05d206acad4fac5", "patch": "@@ -1,3 +1,7 @@\n+2002-03-13  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* gcc.c-torture/compile/20020309-2.c: New test.\n+\n 2002-03-12  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* g++.dg/other/access1.C: New test."}, {"sha": "77699e43d3d64eb39f5ab1d122b71aeeef6e0dbc", "filename": "gcc/testsuite/gcc.c-torture/compile/20020309-2.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4061c1a39342c6dc6ff372a9e05d206acad4fac5/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20020309-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4061c1a39342c6dc6ff372a9e05d206acad4fac5/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20020309-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20020309-2.c?ref=4061c1a39342c6dc6ff372a9e05d206acad4fac5", "patch": "@@ -0,0 +1,16 @@\n+/* This testcase ICEd on IA-32 at -O2, because loop was calling convert_modes\n+   between a MODE_FLOAT and MODE_INT class modes.  */\n+\n+typedef union\n+{\n+  double d;\n+  long long ll;\n+} A;\n+\n+void\n+foo (A x, A **y, A z)\n+{\n+  for (; *y; y++)\n+    if (x.ll == 262 && (*y)->d == z.d)\n+      break;\n+}"}]}