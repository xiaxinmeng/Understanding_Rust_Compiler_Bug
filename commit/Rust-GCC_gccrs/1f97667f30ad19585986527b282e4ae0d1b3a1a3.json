{"sha": "1f97667f30ad19585986527b282e4ae0d1b3a1a3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWY5NzY2N2YzMGFkMTk1ODU5ODY1MjdiMjgyZTRhZTBkMWIzYTFhMw==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2005-07-11T09:35:16Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2005-07-11T09:35:16Z"}, "message": "i386.opt: New target option -msseregparm.\n\n2005-07-11  Richard Guenther  <rguenther@suse.de>\n\n\t* config/i386/i386.opt: New target option -msseregparm.\n\t* config/i386/i386.c (override_options): Error out for\n\t-msseregparm but no SSE support.\n\t(ix86_function_sseregparm): Check for global sseregparm.\n\t* doc/invoke.texi: Document -msseregparm.\n\nFrom-SVN: r101871", "tree": {"sha": "b06db0f8c7a561943bf6b26a8da3e03236e15025", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b06db0f8c7a561943bf6b26a8da3e03236e15025"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1f97667f30ad19585986527b282e4ae0d1b3a1a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f97667f30ad19585986527b282e4ae0d1b3a1a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f97667f30ad19585986527b282e4ae0d1b3a1a3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f97667f30ad19585986527b282e4ae0d1b3a1a3/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4dda0c663b09f9f80065635fd804d27f67a1114d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4dda0c663b09f9f80065635fd804d27f67a1114d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4dda0c663b09f9f80065635fd804d27f67a1114d"}], "stats": {"total": 37, "additions": 33, "deletions": 4}, "files": [{"sha": "61781246684b170a382b33932269108da34a8439", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f97667f30ad19585986527b282e4ae0d1b3a1a3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f97667f30ad19585986527b282e4ae0d1b3a1a3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1f97667f30ad19585986527b282e4ae0d1b3a1a3", "patch": "@@ -1,3 +1,11 @@\n+2005-07-11  Richard Guenther  <rguenther@suse.de>\n+\n+\t* config/i386/i386.opt: New target option -msseregparm.\n+\t* config/i386/i386.c (override_options): Error out for\n+\t-msseregparm but no SSE support.\n+\t(ix86_function_sseregparm): Check for global sseregparm.\n+\t* doc/invoke.texi: Document -msseregparm.\n+\n 2005-07-11  Kazuhiro Inaoka <inaoka.kazuhiro@renesas.com>\n \n \t* config.gcc (m32r-*-linux*): Use the default extra_parts."}, {"sha": "da2b8e61acca04c30f4ed3982ccaea88e7b28ee4", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f97667f30ad19585986527b282e4ae0d1b3a1a3/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f97667f30ad19585986527b282e4ae0d1b3a1a3/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=1f97667f30ad19585986527b282e4ae0d1b3a1a3", "patch": "@@ -1573,6 +1573,11 @@ override_options (void)\n         target_flags |= MASK_NO_RED_ZONE;\n     }\n \n+  /* Accept -msseregparm only if at least SSE support is enabled.  */\n+  if (TARGET_SSEREGPARM\n+      && ! TARGET_SSE)\n+    error (\"-msseregparm used without SSE enabled\");\n+\n   ix86_fpmath = TARGET_FPMATH_DEFAULT;\n \n   if (ix86_fpmath_string != 0)\n@@ -1947,8 +1952,9 @@ ix86_function_sseregparm (tree type, tree decl)\n {\n   /* Use SSE registers to pass SFmode and DFmode arguments if requested\n      by the sseregparm attribute.  */\n-  if (type\n-      && lookup_attribute (\"sseregparm\", TYPE_ATTRIBUTES (type)))\n+  if (TARGET_SSEREGPARM\n+      || (type\n+\t  && lookup_attribute (\"sseregparm\", TYPE_ATTRIBUTES (type))))\n     {\n       if (!TARGET_SSE)\n \t{"}, {"sha": "effd1e16aa0094cfbffc8b7e7f300612cd82bc48", "filename": "gcc/config/i386/i386.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f97667f30ad19585986527b282e4ae0d1b3a1a3/gcc%2Fconfig%2Fi386%2Fi386.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f97667f30ad19585986527b282e4ae0d1b3a1a3/gcc%2Fconfig%2Fi386%2Fi386.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.opt?ref=1f97667f30ad19585986527b282e4ae0d1b3a1a3", "patch": "@@ -193,6 +193,10 @@ msse3\n Target Report Mask(SSE3)\n Support MMX, SSE, SSE2 and SSE3 built-in functions and code generation\n \n+msseregparm\n+Target RejectNegative Mask(SSEREGPARM)\n+Use SSE register passing conventions for SF and DF mode\n+\n msvr3-shlib\n Target Report Mask(SVR3_SHLIB)\n Uninitialized locals in .bss"}, {"sha": "fb9c64d84d00c95ff1ea87d8e5e13c7798242da3", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f97667f30ad19585986527b282e4ae0d1b3a1a3/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f97667f30ad19585986527b282e4ae0d1b3a1a3/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=1f97667f30ad19585986527b282e4ae0d1b3a1a3", "patch": "@@ -514,8 +514,8 @@ Objective-C and Objective-C++ Dialects}.\n -mmmx  -msse  -msse2 -msse3 -m3dnow @gol\n -mthreads  -mno-align-stringops  -minline-all-stringops @gol\n -mpush-args  -maccumulate-outgoing-args  -m128bit-long-double @gol\n--m96bit-long-double  -mregparm=@var{num}  -momit-leaf-frame-pointer @gol\n--mno-red-zone -mno-tls-direct-seg-refs @gol\n+-m96bit-long-double  -mregparm=@var{num}  -msseregparm @gol\n+-momit-leaf-frame-pointer  -mno-red-zone -mno-tls-direct-seg-refs @gol\n -mcmodel=@var{code-model} @gol\n -m32  -m64}\n \n@@ -9030,6 +9030,17 @@ function by using the function attribute @samp{regparm}.\n value, including any libraries.  This includes the system libraries and\n startup modules.\n \n+@item -msseregparm\n+@opindex msseregparm\n+Use SSE register passing conventions for float and double arguments\n+and return values.  You can control this behavior for a specific\n+function by using the function attribute @samp{sseregparm}.\n+@xref{Function Attributes}.\n+\n+@strong{Warning:} if you use this switch then you must build all\n+modules with the same value, including any libraries.  This includes\n+the system libraries and startup modules.\n+\n @item -mpreferred-stack-boundary=@var{num}\n @opindex mpreferred-stack-boundary\n Attempt to keep the stack boundary aligned to a 2 raised to @var{num}"}]}