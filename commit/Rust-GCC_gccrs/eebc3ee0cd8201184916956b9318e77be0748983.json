{"sha": "eebc3ee0cd8201184916956b9318e77be0748983", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWViYzNlZTBjZDgyMDExODQ5MTY5NTZiOTMxOGU3N2JlMDc0ODk4Mw==", "commit": {"author": {"name": "Steven G. Kargl", "email": "kargls@comcast.net", "date": "2005-02-20T21:59:12Z"}, "committer": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2005-02-20T21:59:12Z"}, "message": "* symbol.c: Typos in comments.\n\nFrom-SVN: r95311", "tree": {"sha": "bf2671b4ca649e0688d8c01cdb0a1c0827c35aab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bf2671b4ca649e0688d8c01cdb0a1c0827c35aab"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eebc3ee0cd8201184916956b9318e77be0748983", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eebc3ee0cd8201184916956b9318e77be0748983", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eebc3ee0cd8201184916956b9318e77be0748983", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eebc3ee0cd8201184916956b9318e77be0748983/comments", "author": null, "committer": null, "parents": [{"sha": "7d651220a36ec97dfbff7e6bd23fe6147956f078", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d651220a36ec97dfbff7e6bd23fe6147956f078", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d651220a36ec97dfbff7e6bd23fe6147956f078"}], "stats": {"total": 23, "additions": 13, "deletions": 10}, "files": [{"sha": "b54821488e96e14412fe6fab1432c33f6c37b6be", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eebc3ee0cd8201184916956b9318e77be0748983/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eebc3ee0cd8201184916956b9318e77be0748983/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=eebc3ee0cd8201184916956b9318e77be0748983", "patch": "@@ -1,3 +1,7 @@\n+2005-02-20  Steven G. Kargl  <kargls@comcast.net>\n+\n+\t* symbol.c: Typos in comments.\n+\n 2005-02-20  Steven G. Kargl  <kargls@comcast.net>\n \n \t* expr.c (gfc_type_convert_binary): Typo in comment."}, {"sha": "702a38761cce1a4342d2a3c93c887b201abb1295", "filename": "gcc/fortran/symbol.c", "status": "modified", "additions": 9, "deletions": 10, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eebc3ee0cd8201184916956b9318e77be0748983/gcc%2Ffortran%2Fsymbol.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eebc3ee0cd8201184916956b9318e77be0748983/gcc%2Ffortran%2Fsymbol.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fsymbol.c?ref=eebc3ee0cd8201184916956b9318e77be0748983", "patch": "@@ -179,8 +179,7 @@ gfc_merge_new_implicit (gfc_typespec * ts)\n }\n \n \n-/* Given a symbol, return a pointer to the typespec for it's default\n-   type.  */\n+/* Given a symbol, return a pointer to the typespec for its default type.  */\n \n gfc_typespec *\n gfc_get_default_type (gfc_symbol * sym, gfc_namespace * ns)\n@@ -483,9 +482,9 @@ check_used (symbol_attribute * attr, const char * name, locus * where)\n \n \n /* Used to prevent changing the attributes of a symbol after it has been\n-   used.  This check is only done from dummy variable as only these can be\n+   used.  This check is only done for dummy variables as only these can be\n    used in specification expressions.  Applying this to all symbols causes\n-   error when we reach the body of a contained function.  */\n+   an error when we reach the body of a contained function.  */\n \n static int\n check_done (symbol_attribute * attr, locus * where)\n@@ -684,7 +683,7 @@ gfc_add_dummy (symbol_attribute * attr, const char *name, locus * where)\n   if (check_used (attr, name, where))\n     return FAILURE;\n \n-  /* Duplicate dummy arguments are allow due to ENTRY statements.  */\n+  /* Duplicate dummy arguments are allowed due to ENTRY statements.  */\n   attr->dummy = 1;\n   return check_conflict (attr, name, where);\n }\n@@ -836,7 +835,7 @@ gfc_add_generic (symbol_attribute * attr, const char *name, locus * where)\n }\n \n \n-/* Flavors are special because some flavors are not what fortran\n+/* Flavors are special because some flavors are not what Fortran\n    considers attributes and can be reaffirmed multiple times.  */\n \n try\n@@ -1102,7 +1101,7 @@ gfc_copy_attr (symbol_attribute * dest, symbol_attribute * src, locus * where)\n     goto fail;\n \n   /* The subroutines that set these bits also cause flavors to be set,\n-     and that has already happened in the original, so don't let to\n+     and that has already happened in the original, so don't let it\n      happen again.  */\n   if (src->external)\n     dest->external = 1;\n@@ -1147,7 +1146,7 @@ gfc_add_component (gfc_symbol * sym, const char *name, gfc_component ** componen\n       tail = p;\n     }\n \n-  /* Allocate new component */\n+  /* Allocate a new component.  */\n   p = gfc_get_component ();\n \n   if (tail == NULL)\n@@ -1194,7 +1193,7 @@ switch_types (gfc_symtree * st, gfc_symbol * from, gfc_symbol * to)\n    have to have a derived type in a parent unit.  We find the node in\n    the other namespace and point the symtree node in this namespace to\n    that node.  Further reference to this name point to the correct\n-   node.  If we can't find the node in a parent namespace, then have\n+   node.  If we can't find the node in a parent namespace, then we have\n    an error.\n \n    This subroutine takes a pointer to a symbol node and returns a\n@@ -1521,7 +1520,7 @@ gfc_reference_st_label (gfc_st_label * lp, gfc_sl_type type)\n    the internal subprograms must be read before we can start\n    generating code for the host.\n \n-   Given the tricky nature of the fortran grammar, we must be able to\n+   Given the tricky nature of the Fortran grammar, we must be able to\n    undo changes made to a symbol table if the current interpretation\n    of a statement is found to be incorrect.  Whenever a symbol is\n    looked up, we make a copy of it and link to it.  All of these"}]}