{"sha": "4c36c7c8d31e92d780f925b3bb62eec7db052442", "node_id": "C_kwDOANBUbNoAKDRjMzZjN2M4ZDMxZTkyZDc4MGY5MjViM2JiNjJlZWM3ZGIwNTI0NDI", "commit": {"author": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2022-01-30T23:57:46Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2022-01-31T00:14:31Z"}, "message": "Fixup logic in canonical-path for impl-blocks\n\nImpl blocks canonical prefix when the size is one will only contain the\nrespective crate name but impl blocks canonical path will be of the Self\ntype which has its own respective crate and path so this will become the\ncanonical path of this. If the segment size greater than one this means it\nis likely inside a mod block or other item so this means we should just\nappend as usual.", "tree": {"sha": "5fda817832faec93924e017371321bb110ffdb48", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5fda817832faec93924e017371321bb110ffdb48"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4c36c7c8d31e92d780f925b3bb62eec7db052442", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c36c7c8d31e92d780f925b3bb62eec7db052442", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c36c7c8d31e92d780f925b3bb62eec7db052442", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c36c7c8d31e92d780f925b3bb62eec7db052442/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "631f7ae7b9dbb55ed3adce942952f93b48983a53", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/631f7ae7b9dbb55ed3adce942952f93b48983a53", "html_url": "https://github.com/Rust-GCC/gccrs/commit/631f7ae7b9dbb55ed3adce942952f93b48983a53"}], "stats": {"total": 21, "additions": 11, "deletions": 10}, "files": [{"sha": "234d865b6d4222baa255dcc091f0a4660c2f71d2", "filename": "gcc/rust/resolve/rust-ast-resolve-item.h", "status": "modified", "additions": 11, "deletions": 10, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c36c7c8d31e92d780f925b3bb62eec7db052442/gcc%2Frust%2Fresolve%2Frust-ast-resolve-item.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c36c7c8d31e92d780f925b3bb62eec7db052442/gcc%2Frust%2Fresolve%2Frust-ast-resolve-item.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fresolve%2Frust-ast-resolve-item.h?ref=4c36c7c8d31e92d780f925b3bb62eec7db052442", "patch": "@@ -579,17 +579,17 @@ class ResolveItem : public ResolverBase\n \n     // see https://godbolt.org/z/a3vMbsT6W\n     CanonicalPath cpath = CanonicalPath::create_empty ();\n-    if (canonical_prefix.size () > 1)\n+    if (canonical_prefix.size () <= 1)\n+      {\n+\tcpath = self_cpath;\n+      }\n+    else\n       {\n \tstd::string seg_buf = \"<impl \" + self_cpath.get () + \">\";\n \tCanonicalPath seg\n \t  = CanonicalPath::new_seg (impl_block.get_node_id (), seg_buf);\n \tcpath = canonical_prefix.append (seg);\n       }\n-    else\n-      {\n-\tcpath = canonical_prefix.append (self_cpath);\n-      }\n     // done setup paths\n \n     auto Self\n@@ -757,7 +757,11 @@ class ResolveItem : public ResolverBase\n \t\t\t\t      canonical_trait_type,\n \t\t\t\t      canonical_impl_type);\n     CanonicalPath cpath = CanonicalPath::create_empty ();\n-    if (canonical_prefix.size () > 1)\n+    if (canonical_prefix.size () <= 1)\n+      {\n+\tcpath = canonical_projection;\n+      }\n+    else\n       {\n \tstd::string projection_str = canonical_projection.get ();\n \tstd::string seg_buf\n@@ -767,10 +771,7 @@ class ResolveItem : public ResolverBase\n \t  = CanonicalPath::new_seg (impl_block.get_node_id (), seg_buf);\n \tcpath = canonical_prefix.append (seg);\n       }\n-    else\n-      {\n-\tcpath = canonical_prefix.append (canonical_projection);\n-      }\n+\n     // DONE setup canonical-path\n \n     auto Self"}]}