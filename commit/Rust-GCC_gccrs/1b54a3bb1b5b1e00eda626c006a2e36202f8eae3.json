{"sha": "1b54a3bb1b5b1e00eda626c006a2e36202f8eae3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWI1NGEzYmIxYjViMWUwMGVkYTYyNmMwMDZhMmUzNjIwMmY4ZWFlMw==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely.gcc@gmail.com", "date": "2007-10-01T20:39:08Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2007-10-01T20:39:08Z"}, "message": "test.html, [...]: Update docs to refer to Subversion not CVS.\n\n\t* docs/html/test.html, docs/html/ext/mt_allocator.html,\n\tdocs/html/ext/tr1.html, docs/html/17_intro/contribute.html,\n\tdocs/html/documentation.html, docs/html/20_util/allocator.html:\n\tUpdate docs to refer to Subversion not CVS. Fix markup.\n\nFrom-SVN: r128914", "tree": {"sha": "11a0a9f5135d01a085a8b5ebe1e459709411deaf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/11a0a9f5135d01a085a8b5ebe1e459709411deaf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1b54a3bb1b5b1e00eda626c006a2e36202f8eae3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b54a3bb1b5b1e00eda626c006a2e36202f8eae3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b54a3bb1b5b1e00eda626c006a2e36202f8eae3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b54a3bb1b5b1e00eda626c006a2e36202f8eae3/comments", "author": null, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9a2875939a850fb4415199ea68902e3dc2403b45", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a2875939a850fb4415199ea68902e3dc2403b45", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a2875939a850fb4415199ea68902e3dc2403b45"}], "stats": {"total": 82, "additions": 47, "deletions": 35}, "files": [{"sha": "ad2b02cecf9b18c22bd802122d8139fa75810be6", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b54a3bb1b5b1e00eda626c006a2e36202f8eae3/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b54a3bb1b5b1e00eda626c006a2e36202f8eae3/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=1b54a3bb1b5b1e00eda626c006a2e36202f8eae3", "patch": "@@ -1,3 +1,10 @@\n+2007-09-29  Jonathan Wakely  <jwakely.gcc@gmail.com>\n+\n+\t* docs/html/test.html, docs/html/ext/mt_allocator.html,\n+\tdocs/html/ext/tr1.html, docs/html/17_intro/contribute.html,\n+\tdocs/html/documentation.html, docs/html/20_util/allocator.html:\n+\tUpdate docs to refer to Subversion not CVS. Fix markup.\n+\n 2007-09-29  Jonathan Wakely  <jwakely.gcc@gmail.com>\n \n \t* docs/html/Makefile: Follow up to libstdc++/14991, remove target."}, {"sha": "00c749a449078830a8086f0fe5357e05f92f51e2", "filename": "libstdc++-v3/docs/html/17_intro/contribute.html", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b54a3bb1b5b1e00eda626c006a2e36202f8eae3/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Fcontribute.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b54a3bb1b5b1e00eda626c006a2e36202f8eae3/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Fcontribute.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Fcontribute.html?ref=1b54a3bb1b5b1e00eda626c006a2e36202f8eae3", "patch": "@@ -17,7 +17,7 @@\n <h2>How to contribute</h2>\n <p> The Standard C++ Library v3, follows an open development\n model. Active contributors are assigned maintainer-ship\n-responsibility, and given write access to the CVS repository. First\n+responsibility, and given write access to the SVN repository. First\n time contributors should follow this procedure:\n </p>\n \n@@ -81,14 +81,15 @@ <h4>TWO : copyright assignment</h4>\n \n <p>\n For more information about getting a copyright assignment, please see \n-<a href=http://www.gnu.org/prep/maintain_4.html#SEC4=> Legal Issues</a>\n+<a href=\"http://www.gnu.org/prep/maintain/html_node/Legal-Matters.html\">Legal\n+Matters</a>.\n </p>\n \n <p>\n Please contact <a href=\"mailto:bkoz+assign@redhat.com\">Benjamin\n Kosnik</a> if you are confused about the assignment or have general\n licensing questions. When requesting an assignment form from <a\n-HREF=\"mailto:assign@gnu.org\">assign@gnu.org</a>, please cc\n+href=\"mailto:assign@gnu.org\">assign@gnu.org</a>, please cc\n the above libstdc++ maintainer so that progress can be monitored.\n </p>\n \n@@ -116,10 +117,12 @@ <h4>THREE : submitting patches</h4>\n  <li> A testsuite submission or sample program that will easily and\n  simply show the existing error or test new functionality.  </li>\n \n- <li> The patch itself. If you are accessing the CVS repository at\n- Cygnus, use \"cvs update; cvs diff -c3p NEW\"; else, use \"diff -c3p OLD\n- NEW\" ... If your version of diff does not support these options, then\n- get the latest version of GNU diff. </li>\n+ <li> The patch itself. If you are accessing the SVN repository\n+ use \"svn update; svn diff NEW\"; else, use \"diff -cp OLD NEW\"\n+ ... If your version of diff does not support these options, then\n+ get the latest version of GNU diff. The <a\n+ href=\"http://gcc.gnu.org/wiki/SvnTricks\">SVN Tricks</a> wiki page\n+ has information on customising the output of <code>svn diff</code>.</li>\n \n  <li> When you have all these pieces, bundle them up in a mail message\n and send it to libstdc++@gcc.gnu.org. All patches and related"}, {"sha": "f222e2dca5c519dc7faecf6961a586e0a8d7389c", "filename": "libstdc++-v3/docs/html/20_util/allocator.html", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b54a3bb1b5b1e00eda626c006a2e36202f8eae3/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F20_util%2Fallocator.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b54a3bb1b5b1e00eda626c006a2e36202f8eae3/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F20_util%2Fallocator.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F20_util%2Fallocator.html?ref=1b54a3bb1b5b1e00eda626c006a2e36202f8eae3", "patch": "@@ -179,27 +179,27 @@ <h5 class=\"left\">\n      <li>Insertion. Over multiple iterations, various STL container\n      objects have elements inserted to some maximum amount. A variety\n      of allocators are tested.  \n-     Test source <a\n-     href=\"http://gcc.gnu.org/cgi-bin/cvsweb.cgi/gcc/libstdc%2b%2b-v3/testsuite/performance/20_util/allocator/insert.cc?only_with_tag=MAIN\">here.</a>\n+     Test source for <a\n+     href=\"http://gcc.gnu.org/viewcvs/trunk/libstdc%2B%2B-v3/testsuite/performance/23_containers/insert/sequence.cc?view=markup\">sequence</a>\n+     and <a\n+     href=\"http://gcc.gnu.org/viewcvs/trunk/libstdc%2B%2B-v3/testsuite/performance/23_containers/insert/associative.cc?view=markup\">associative</a>\n+     containers.\n      </li>\n \n-     <li>Insertion, clear, and re-insertion in a multi-threaded\n-     environment.  Over multiple iterations, several threads are\n-     started that insert elements into a STL container, then assign a\n-     null instance of the same type to clear memory, and then\n-     re-insert the same number of elements. Several STL containers and\n-     multiple allocators are tested. This test shows the ability of\n-     the allocator to reclaim memory on a pre-thread basis, as well as\n-     measuring thread contention for memory resources. \n+     <li>Insertion and erasure in a multi-threaded environment.\n+     This test shows the ability of the allocator to reclaim memory\n+     on a pre-thread basis, as well as measuring thread contention\n+     for memory resources. \n      Test source \n-    <a href=\"http://gcc.gnu.org/cgi-bin/cvsweb.cgi/gcc/libstdc%2b%2b-v3/testsuite/performance/20_util/allocator/insert_insert.cc\"> \n-    here.</a>\n+    <a href=\"http://gcc.gnu.org/viewcvs/trunk/libstdc%2B%2B-v3/testsuite/performance/23_containers/insert_erase/associative.cc?view=markup\">here</a>.\n      </li>\n \n      <li>A threaded producer/consumer model.\n-     Test source \n-    <a href=\"http://gcc.gnu.org/cgi-bin/cvsweb.cgi/gcc/libstdc%2b%2b-v3/testsuite/performance/20_util/allocator/producer_consumer.cc\"> \n-    here.</a>\n+     Test source for\n+     <a href=\"http://gcc.gnu.org/viewcvs/trunk/libstdc%2B%2B-v3/testsuite/performance/23_containers/producer_consumer/sequence.cc?view=markup\">sequence</a>\n+     and \n+     <a href=\"http://gcc.gnu.org/viewcvs/trunk/libstdc%2B%2B-v3/testsuite/performance/23_containers/producer_consumer/associative.cc?view=markup\">associative</a>\n+     containers.\n      </li>\n    </ul>\n \n@@ -490,7 +490,7 @@ <h3 class=\"left\">\n    </p>\n \n    <p>\n-   Berger, Emery with Ben Zorn & Kathryn McKinley, OOPSLA 2002\n+   Berger, Emery with Ben Zorn &amp; Kathryn McKinley, OOPSLA 2002\n    <a href=\"http://www.cs.umass.edu/~emery/pubs/berger-oopsla2002.pdf\">Reconsidering Custom Memory Allocation</a>\n    </p>\n "}, {"sha": "dbeeae0cca4c9ed833eff2eb2c1dceb49058cb67", "filename": "libstdc++-v3/docs/html/documentation.html", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b54a3bb1b5b1e00eda626c006a2e36202f8eae3/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fdocumentation.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b54a3bb1b5b1e00eda626c006a2e36202f8eae3/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fdocumentation.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fdocumentation.html?ref=1b54a3bb1b5b1e00eda626c006a2e36202f8eae3", "patch": "@@ -244,7 +244,7 @@ <h2><a name=\"3\">Chapter-Specific Documentation</a></h2>\n <h2><a name=\"5\">Contributor-Specific Information</a></h2>\n <ul>\n    <li><a href=\"17_intro/contribute.html\">Contributor checklist</a></li>\n-   <li><a href=\"http://gcc.gnu.org/cvswrite.html\">Getting CVS write access\n+   <li><a href=\"http://gcc.gnu.org/svnwrite.html\">Getting SVN write access\n        (look for &quot;Write after approval&quot;)</a></li>\n    <li><a href=\"17_intro/BADNAMES\">BADNAMES</a>\n        - names to avoid because of potential collisions</li>"}, {"sha": "b938451333d2bea7c71c2e5bf9d6d52a306a8bee", "filename": "libstdc++-v3/docs/html/ext/mt_allocator.html", "status": "modified", "additions": 11, "deletions": 9, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b54a3bb1b5b1e00eda626c006a2e36202f8eae3/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fext%2Fmt_allocator.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b54a3bb1b5b1e00eda626c006a2e36202f8eae3/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fext%2Fmt_allocator.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fext%2Fmt_allocator.html?ref=1b54a3bb1b5b1e00eda626c006a2e36202f8eae3", "patch": "@@ -51,7 +51,7 @@ <h3 class=\"left\">\n </p>\n \n <p>\n-The aim of this document is to describe - from a application point of\n+The aim of this document is to describe - from an application point of\n view - the \"inner workings\" of the allocator.\n </p>\n \n@@ -67,11 +67,12 @@ <h3 class=\"left\">\n </p>\n \n <p>The datum describing pools characteristics is \n- <pre>\n-   template&lt;bool _Thread&gt;\n-     class __pool\n- </pre>\n-This class is parametrized on thread support, and is explicitly\n+</p>\n+<pre>\n+  template&lt;bool _Thread&gt;\n+    class __pool\n+</pre>\n+<p> This class is parametrized on thread support, and is explicitly\n specialized for both multiple threads (with <code>bool==true</code>)\n and single threads (via <code>bool==false</code>.) It is possible to\n use a custom pool datum instead of the default class that is provided.\n@@ -102,11 +103,12 @@ <h3 class=\"left\">\n </p>\n \n <p> Putting this all together, the actual allocator class is\n+</p>\n <pre>\n   template&lt;typename _Tp, typename _Poolp = __default_policy&gt;\n     class __mt_alloc : public __mt_alloc_base&lt;_Tp&gt;,  _Poolp\n </pre>\n-This class has the interface required for standard library allocator\n+<p> This class has the interface required for standard library allocator\n classes, namely member functions <code>allocate</code> and\n <code>deallocate</code>, plus others.\n </p>\n@@ -116,7 +118,7 @@ <h3 class=\"left\">\n </h3>\n \n <p>Certain allocation parameters can be modified, or tuned. There\n-exists a nested <pre>struct __pool_base::_Tune</pre> that contains all\n+exists a nested <code>struct __pool_base::_Tune</code> that contains all\n these parameters, which include settings for\n </p>\n    <ul>\n@@ -301,7 +303,7 @@ <h3 class=\"left\">\n as part of a container's constructor. However, this assumption is\n implementation-specific, and subject to change. For an example of a\n pool that frees memory, see the following\n-    <a href=\"http://gcc.gnu.org/cgi-bin/cvsweb.cgi/gcc/libstdc%2b%2b-v3/testsuite/ext/mt_allocator/deallocate_local-6.cc\"> \n+    <a href=\"http://gcc.gnu.org/viewcvs/trunk/libstdc%2B%2B-v3/testsuite/ext/mt_allocator/deallocate_local-6.cc?view=markup\">\n     example.</a>\n </p>\n "}, {"sha": "6b92802bb2430f9dd43f64f2a6a4ea0eb341b6ea", "filename": "libstdc++-v3/docs/html/ext/tr1.html", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b54a3bb1b5b1e00eda626c006a2e36202f8eae3/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fext%2Ftr1.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b54a3bb1b5b1e00eda626c006a2e36202f8eae3/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fext%2Ftr1.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fext%2Ftr1.html?ref=1b54a3bb1b5b1e00eda626c006a2e36202f8eae3", "patch": "@@ -36,7 +36,7 @@ <h1 align=\"center\">\n </p>\n \n <p>\n-This page describes the TR1 support in mainline GCC CVS, not in any particular\n+This page describes the TR1 support in mainline GCC SVN, not in any particular\n release.\n </p>\n "}, {"sha": "6a31c72339c23118b3a684ffe4cc2b9a08550feb", "filename": "libstdc++-v3/docs/html/test.html", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b54a3bb1b5b1e00eda626c006a2e36202f8eae3/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Ftest.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b54a3bb1b5b1e00eda626c006a2e36202f8eae3/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Ftest.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Ftest.html?ref=1b54a3bb1b5b1e00eda626c006a2e36202f8eae3", "patch": "@@ -319,7 +319,7 @@ <h2><a name=\"new\">How to write a new test case</a></h2>\n    <p>\n     All files are copyright the FSF, and GPL'd: this is very\n     important.  The first copyright year should correspond to the date\n-    the file was checked in to CVS.\n+    the file was checked in to SVN.\n    </p>\n \n    <p>"}]}