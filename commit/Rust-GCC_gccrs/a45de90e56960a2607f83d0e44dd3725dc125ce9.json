{"sha": "a45de90e56960a2607f83d0e44dd3725dc125ce9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTQ1ZGU5MGU1Njk2MGEyNjA3ZjgzZDBlNDRkZDM3MjVkYzEyNWNlOQ==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2019-09-04T08:08:06Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2019-09-04T08:08:06Z"}, "message": "mklog: parse PR references from new test files\n\n2019-09-04  Martin Liska  <mliska@suse.cz>\n\n\t* mklog: Parse PR references from newly added\n\ttest files.\n\nFrom-SVN: r275368", "tree": {"sha": "7500c1ce81edeff4b1e78a9c18f04c5d537d9abe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7500c1ce81edeff4b1e78a9c18f04c5d537d9abe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a45de90e56960a2607f83d0e44dd3725dc125ce9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a45de90e56960a2607f83d0e44dd3725dc125ce9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a45de90e56960a2607f83d0e44dd3725dc125ce9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a45de90e56960a2607f83d0e44dd3725dc125ce9/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e94e92dcda29872523cc74a03ee64cfb3dbea21b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e94e92dcda29872523cc74a03ee64cfb3dbea21b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e94e92dcda29872523cc74a03ee64cfb3dbea21b"}], "stats": {"total": 27, "additions": 25, "deletions": 2}, "files": [{"sha": "5e4ec60ae3a446b1f5220e1db6528e4cce6f7e41", "filename": "contrib/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a45de90e56960a2607f83d0e44dd3725dc125ce9/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a45de90e56960a2607f83d0e44dd3725dc125ce9/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=a45de90e56960a2607f83d0e44dd3725dc125ce9", "patch": "@@ -1,3 +1,8 @@\n+2019-09-04  Martin Liska  <mliska@suse.cz>\n+\n+\t* mklog: Parse PR references from newly added\n+\ttest files.\n+\n 2019-09-04  Martin Liska  <mliska@suse.cz>\n \n \t* mklog: Use argparse instead of getopt."}, {"sha": "852420023570a6517a3e4ada40d9386826838f87", "filename": "contrib/mklog", "status": "modified", "additions": 20, "deletions": 2, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a45de90e56960a2607f83d0e44dd3725dc125ce9/contrib%2Fmklog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a45de90e56960a2607f83d0e44dd3725dc125ce9/contrib%2Fmklog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fmklog?ref=a45de90e56960a2607f83d0e44dd3725dc125ce9", "patch": "@@ -40,6 +40,8 @@ from subprocess import Popen, PIPE\n \n me = os.path.basename(sys.argv[0])\n \n+pr_regex = re.compile('\\+(\\/(\\/|\\*)|[Cc*!])\\s+(PR [a-z+-]+\\/[0-9]+)')\n+\n def error(msg):\n   sys.stderr.write(\"%s: error: %s\\n\" % (me, msg))\n   sys.exit(1)\n@@ -299,7 +301,7 @@ def parse_patch(contents):\n         if l != r:\n           break\n         comps.append(l)\n-    \n+\n       if not comps:\n         error(\"failed to extract common name for %s and %s\" % (left, right))\n \n@@ -338,6 +340,14 @@ def parse_patch(contents):\n \n   return diffs\n \n+\n+def get_pr_from_testcase(line):\n+    r = pr_regex.search(line)\n+    if r != None:\n+        return r.group(3)\n+    else:\n+        return None\n+\n def main():\n   name, email = read_user_info()\n \n@@ -372,6 +382,7 @@ otherwise writes to stdout.'\n   # Generate template ChangeLog.\n \n   logs = {}\n+  prs = []\n   for d in diffs:\n     log_name = d.clname\n \n@@ -387,6 +398,9 @@ otherwise writes to stdout.'\n       if hunk0.is_file_addition():\n         if re.search(r'testsuite.*(?<!\\.exp)$', d.filename):\n           change_msg = ': New test.\\n'\n+          pr = get_pr_from_testcase(hunk0.lines[0])\n+          if pr and pr not in prs:\n+              prs.append(pr)\n         else:\n           change_msg = \": New file.\\n\"\n       elif hunk0.is_file_removal():\n@@ -426,13 +440,17 @@ otherwise writes to stdout.'\n \n   # Print log\n   date = time.strftime('%Y-%m-%d')\n+  bugmsg = ''\n+  if len(prs):\n+    bugmsg = '\\n'.join(['\\t' + pr for pr in prs]) + '\\n'\n+\n   for log_name, msg in sorted(logs.items()):\n     out.write(\"\"\"\\\n %s:\n \n %s  %s  <%s>\n \n-%s\\n\"\"\" % (log_name, date, name, email, msg))\n+%s%s\\n\"\"\" % (log_name, date, name, email, bugmsg, msg))\n \n   if args.inline:\n     # Append patch body"}]}