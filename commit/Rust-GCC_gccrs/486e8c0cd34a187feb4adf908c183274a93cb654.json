{"sha": "486e8c0cd34a187feb4adf908c183274a93cb654", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDg2ZThjMGNkMzRhMTg3ZmViNGFkZjkwOGMxODMyNzRhOTNjYjY1NA==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2002-05-07T03:32:01Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2002-05-07T03:32:01Z"}, "message": "re PR java/5941 (incorrect \"Unreachable statement\" error)\n\n\tFix for PR java/5941:\n\t* parse.y (finish_for_loop): Set SUPPRESS_UNREACHABLE_ERROR for\n\tloop update expression.\n\t(java_complete_lhs): Use SUPPRESS_UNREACHABLE_ERROR.\n\t* java-tree.h (SUPPRESS_UNREACHABLE_ERROR): New macro.\n\nFrom-SVN: r53247", "tree": {"sha": "7159ea0ab41b06803b073585f69939e4604b03d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7159ea0ab41b06803b073585f69939e4604b03d4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/486e8c0cd34a187feb4adf908c183274a93cb654", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/486e8c0cd34a187feb4adf908c183274a93cb654", "html_url": "https://github.com/Rust-GCC/gccrs/commit/486e8c0cd34a187feb4adf908c183274a93cb654", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/486e8c0cd34a187feb4adf908c183274a93cb654/comments", "author": null, "committer": null, "parents": [{"sha": "61e0b50fd7a184cc5f611a0bbaceabc44fa6eb0f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61e0b50fd7a184cc5f611a0bbaceabc44fa6eb0f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/61e0b50fd7a184cc5f611a0bbaceabc44fa6eb0f"}], "stats": {"total": 44, "additions": 42, "deletions": 2}, "files": [{"sha": "6f74998ea562cd94c5881c5e0c0fc6f8debbd930", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/486e8c0cd34a187feb4adf908c183274a93cb654/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/486e8c0cd34a187feb4adf908c183274a93cb654/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=486e8c0cd34a187feb4adf908c183274a93cb654", "patch": "@@ -1,3 +1,11 @@\n+2002-05-06  Tom Tromey  <tromey@redhat.com>\n+\n+\tFix for PR java/5941:\n+\t* parse.y (finish_for_loop): Set SUPPRESS_UNREACHABLE_ERROR for\n+\tloop update expression.\n+\t(java_complete_lhs): Use SUPPRESS_UNREACHABLE_ERROR.\n+\t* java-tree.h (SUPPRESS_UNREACHABLE_ERROR): New macro.\n+\n 2002-05-04  Mark Wielaard  <mark@klomp.org>\n \n \tFor PR java/6519:"}, {"sha": "e0dbe48830c234412c9302c7cc55bad222c96aa8", "filename": "gcc/java/java-tree.h", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/486e8c0cd34a187feb4adf908c183274a93cb654/gcc%2Fjava%2Fjava-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/486e8c0cd34a187feb4adf908c183274a93cb654/gcc%2Fjava%2Fjava-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjava-tree.h?ref=486e8c0cd34a187feb4adf908c183274a93cb654", "patch": "@@ -43,6 +43,7 @@ struct JCF;\n    0: IS_A_SINGLE_IMPORT_CLASSFILE_NAME_P (in IDENTIFIER_NODE)\n       RESOLVE_EXPRESSION_NAME_P (in EXPR_WITH_FILE_LOCATION)\n       FOR_LOOP_P (in LOOP_EXPR)\n+      SUPPRESS_UNREACHABLE_ERROR (for other _EXPR nodes)\n       ANONYMOUS_CLASS_P (in RECORD_TYPE)\n       ARG_FINAL_P (in TREE_LIST)\n    1: CLASS_HAS_SUPER_FLAG (in TREE_VEC).\n@@ -1503,6 +1504,12 @@ extern tree *type_map;\n    declared with the final modifier */\n #define ARG_FINAL_P(NODE) TREE_LANG_FLAG_0 (NODE)\n \n+/* True if NODE (some kind of EXPR, but not a WFL) should not give an\n+   error if it is found to be unreachable.  This can only be applied\n+   to those EXPRs which can be used as the update expression of a\n+   `for' loop.  In particular it can't be set on a LOOP_EXPR.  */\n+#define SUPPRESS_UNREACHABLE_ERROR(NODE) TREE_LANG_FLAG_0 (NODE)\n+\n /* True if EXPR (a WFL in that case) resolves into a package name */\n #define RESOLVE_PACKAGE_NAME_P(WFL) TREE_LANG_FLAG_3 (WFL)\n "}, {"sha": "526850dffc49dfbaa7d881e7d1d6190041e60b1e", "filename": "gcc/java/parse.y", "status": "modified", "additions": 27, "deletions": 2, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/486e8c0cd34a187feb4adf908c183274a93cb654/gcc%2Fjava%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/486e8c0cd34a187feb4adf908c183274a93cb654/gcc%2Fjava%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.y?ref=486e8c0cd34a187feb4adf908c183274a93cb654", "patch": "@@ -11842,7 +11842,17 @@ java_complete_lhs (node)\n \t      if (TREE_CODE (nn) != EXIT_EXPR)\n \t\t{\n \t\t  SET_WFL_OPERATOR (wfl_operator, node, wfl_op2);\n-\t\t  parse_error_context (wfl_operator, \"Unreachable statement\");\n+\t\t  if (SUPPRESS_UNREACHABLE_ERROR (nn))\n+\t\t    {\n+\t\t      /* Perhaps this warning should have an\n+\t\t\t associated flag.  The code being compiled is\n+\t\t\t pedantically correct, but useless.  */\n+\t\t      parse_warning_context (wfl_operator,\n+\t\t\t\t\t     \"Unreachable statement\");\n+\t\t    }\n+\t\t  else\n+\t\t    parse_error_context (wfl_operator,\n+\t\t\t\t\t \"Unreachable statement\");\n \t\t}\n \t    }\n \t  TREE_OPERAND (node, 1) = java_complete_tree (TREE_OPERAND (node, 1));\n@@ -14981,7 +14991,22 @@ finish_for_loop (location, condition, update, body)\n   /* Put the condition and the loop body in place */\n   tree loop = finish_loop_body (location, condition, body, 0);\n   /* LOOP is the current loop which has been now popped of the loop\n-     stack. Install the update block */\n+     stack.  Mark the update block as reachable and install it.  We do\n+     this because the (current interpretation of the) JLS requires\n+     that the update expression be considered reachable even if the\n+     for loop's body doesn't complete normally.  */\n+  if (update != NULL_TREE && update != empty_stmt_node)\n+    {\n+      tree up2 = update;\n+      if (TREE_CODE (up2) == EXPR_WITH_FILE_LOCATION)\n+\tup2 = EXPR_WFL_NODE (up2);\n+      /* Try to detect constraint violations.  These would be\n+\t programming errors somewhere.  */\n+      if (! IS_EXPR_CODE_CLASS (TREE_CODE_CLASS (TREE_CODE (up2)))\n+\t  | TREE_CODE (up2) == LOOP_EXPR)\n+\tabort ();\n+      SUPPRESS_UNREACHABLE_ERROR (up2) = 1;\n+    }\n   LOOP_EXPR_BODY_UPDATE_BLOCK (LOOP_EXPR_BODY (loop)) = update;\n   return loop;\n }"}]}