{"sha": "aaa050aa4a13eb045ae5db57d8a50a5b4121c29e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWFhMDUwYWE0YTEzZWIwNDVhZTVkYjU3ZDhhNTBhNWI0MTIxYzI5ZQ==", "commit": {"author": {"name": "David S. Miller", "email": "davem@davemloft.net", "date": "2012-11-07T08:42:09Z"}, "committer": {"name": "David S. Miller", "email": "davem@gcc.gnu.org", "date": "2012-11-07T08:42:09Z"}, "message": "Revert sparc \"U\" constraint removal.\n\n\tPR bootstrap/55211\n\tRevert:\n    \t* config/sparc/constraints.md (\"U\"): Delete.\n    \t* config/sparc/sparc.md: Use 'r' constraint instead of 'U'.\n    \t* config/sparc/sync.md: Likewise.\n\tAnd revert parts of:\n\t* doc/md.texi: Sync sparc constraint documentation with reality.\n\nFrom-SVN: r193283", "tree": {"sha": "65a9d61bd04f3a4a556b5898fadfa79341f0b5d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/65a9d61bd04f3a4a556b5898fadfa79341f0b5d4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aaa050aa4a13eb045ae5db57d8a50a5b4121c29e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aaa050aa4a13eb045ae5db57d8a50a5b4121c29e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aaa050aa4a13eb045ae5db57d8a50a5b4121c29e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aaa050aa4a13eb045ae5db57d8a50a5b4121c29e/comments", "author": {"login": "davem330", "id": 1053866, "node_id": "MDQ6VXNlcjEwNTM4NjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1053866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davem330", "html_url": "https://github.com/davem330", "followers_url": "https://api.github.com/users/davem330/followers", "following_url": "https://api.github.com/users/davem330/following{/other_user}", "gists_url": "https://api.github.com/users/davem330/gists{/gist_id}", "starred_url": "https://api.github.com/users/davem330/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davem330/subscriptions", "organizations_url": "https://api.github.com/users/davem330/orgs", "repos_url": "https://api.github.com/users/davem330/repos", "events_url": "https://api.github.com/users/davem330/events{/privacy}", "received_events_url": "https://api.github.com/users/davem330/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9ac37178e3e934cad54be545e6a55fa067d80270", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ac37178e3e934cad54be545e6a55fa067d80270", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ac37178e3e934cad54be545e6a55fa067d80270"}], "stats": {"total": 44, "additions": 33, "deletions": 11}, "files": [{"sha": "dc62c595db246050911ef693ae702bfd06014979", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aaa050aa4a13eb045ae5db57d8a50a5b4121c29e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aaa050aa4a13eb045ae5db57d8a50a5b4121c29e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=aaa050aa4a13eb045ae5db57d8a50a5b4121c29e", "patch": "@@ -1,3 +1,13 @@\n+2012-11-07  David S. Miller  <davem@davemloft.net>\n+\n+\tPR bootstrap/55211\n+\tRevert:\n+    \t* config/sparc/constraints.md (\"U\"): Delete.\n+    \t* config/sparc/sparc.md: Use 'r' constraint instead of 'U'.\n+    \t* config/sparc/sync.md: Likewise.\n+\tAnd revert parts of:\n+\t* doc/md.texi: Sync sparc constraint documentation with reality.\n+\n 2012-11-07  Jakub Jelinek  <jakub@redhat.com>\n \n \t* config/i386/i386.c (ix86_avx_u128_mode_after): Don't"}, {"sha": "2f8c6adbbcb8f658ca143e5c3255d85426c37cf8", "filename": "gcc/config/sparc/constraints.md", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aaa050aa4a13eb045ae5db57d8a50a5b4121c29e/gcc%2Fconfig%2Fsparc%2Fconstraints.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aaa050aa4a13eb045ae5db57d8a50a5b4121c29e/gcc%2Fconfig%2Fsparc%2Fconstraints.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fconstraints.md?ref=aaa050aa4a13eb045ae5db57d8a50a5b4121c29e", "patch": "@@ -18,7 +18,7 @@\n ;; <http://www.gnu.org/licenses/>.\n \n ;;; Unused letters:\n-;;;    AB                  U\n+;;;    AB\n ;;;    a        jkl    q  tuv xyz\n \n \n@@ -130,6 +130,15 @@\n       (match_code \"mem\")\n       (match_test \"memory_ok_for_ldd (op)\")))\n \n+;; Not needed in 64-bit mode\n+(define_constraint \"U\"\n+ \"Pseudo-register or hard even-numbered integer register\"\n+ (and (match_test \"TARGET_ARCH32\")\n+      (match_code \"reg\")\n+      (ior (match_test \"REGNO (op) < FIRST_PSEUDO_REGISTER\")\n+\t   (not (match_test \"reload_in_progress && reg_renumber [REGNO (op)] < 0\")))\n+      (match_test \"register_ok_for_ldd (op)\")))\n+\n ;; Equivalent to 'T' but available in 64-bit mode\n (define_memory_constraint \"W\"\n  \"Memory reference for 'e' constraint floating-point register\""}, {"sha": "f604f46610eda96e82331e03fc2d31772dc3fe25", "filename": "gcc/config/sparc/sparc.md", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aaa050aa4a13eb045ae5db57d8a50a5b4121c29e/gcc%2Fconfig%2Fsparc%2Fsparc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aaa050aa4a13eb045ae5db57d8a50a5b4121c29e/gcc%2Fconfig%2Fsparc%2Fsparc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.md?ref=aaa050aa4a13eb045ae5db57d8a50a5b4121c29e", "patch": "@@ -1595,9 +1595,9 @@\n \n (define_insn \"*movdi_insn_sp32\"\n   [(set (match_operand:DI 0 \"nonimmediate_operand\"\n-\t\t\t\t\t\"=T,o,T,r,o,r,r,r,?T,?*f,?*f,?o,?*e,?*e,  r,?*f,?*e,?W,b,b\")\n+\t\t\t\t\t\"=T,o,T,U,o,r,r,r,?T,?*f,?*f,?o,?*e,?*e,  r,?*f,?*e,?W,b,b\")\n         (match_operand:DI 1 \"input_operand\"\n-\t\t\t\t\t\" J,J,r,T,r,o,i,r,*f,  T,  o,*f, *e, *e,?*f,  r,  W,*e,J,P\"))]\n+\t\t\t\t\t\" J,J,U,T,r,o,i,r,*f,  T,  o,*f, *e, *e,?*f,  r,  W,*e,J,P\"))]\n   \"! TARGET_ARCH64\n    && (register_operand (operands[0], DImode)\n        || register_or_zero_operand (operands[1], DImode))\"\n@@ -2302,8 +2302,8 @@\n })\n \n (define_insn \"*movdf_insn_sp32\"\n-  [(set (match_operand:DF 0 \"nonimmediate_operand\" \"=b,b,e,e,*r, f,  e,T,W,r,T,  f,  *r,  o,o\")\n-\t(match_operand:DF 1 \"input_operand\"         \"G,C,e,e, f,*r,W#F,G,e,T,r,o#F,*roF,*rG,f\"))]\n+  [(set (match_operand:DF 0 \"nonimmediate_operand\" \"=b,b,e,e,*r, f,  e,T,W,U,T,  f,  *r,  o,o\")\n+\t(match_operand:DF 1 \"input_operand\"         \"G,C,e,e, f,*r,W#F,G,e,T,U,o#F,*roF,*rG,f\"))]\n   \"! TARGET_ARCH64\n    && (register_operand (operands[0], DFmode)\n        || register_or_zero_or_all_ones_operand (operands[1], DFmode))\"\n@@ -2541,8 +2541,8 @@\n })\n \n (define_insn \"*movtf_insn_sp32\"\n-  [(set (match_operand:TF 0 \"nonimmediate_operand\" \"=b, e,o, o,r,  r\")\n-\t(match_operand:TF 1 \"input_operand\"        \" G,oe,e,rG,o,roG\"))]\n+  [(set (match_operand:TF 0 \"nonimmediate_operand\" \"=b, e,o,  o,U,  r\")\n+\t(match_operand:TF 1 \"input_operand\"        \" G,oe,e,rGU,o,roG\"))]\n   \"! TARGET_ARCH64\n    && (register_operand (operands[0], TFmode)\n        || register_or_zero_operand (operands[1], TFmode))\"\n@@ -7911,8 +7911,8 @@\n    (set_attr \"cpu_feature\" \"vis,vis,vis,*,*,*,*,*,vis3,vis3,*\")])\n \n (define_insn \"*mov<VM64:mode>_insn_sp32\"\n-  [(set (match_operand:VM64 0 \"nonimmediate_operand\" \"=e,e,e,*r, f,e,m,m,r,T, o,*r\")\n-\t(match_operand:VM64 1 \"input_operand\"         \"Y,C,e, f,*r,m,e,Y,T,r,*r,*r\"))]\n+  [(set (match_operand:VM64 0 \"nonimmediate_operand\" \"=e,e,e,*r, f,e,m,m,U,T, o,*r\")\n+\t(match_operand:VM64 1 \"input_operand\"         \"Y,C,e, f,*r,m,e,Y,T,U,*r,*r\"))]\n   \"TARGET_VIS\n    && ! TARGET_ARCH64\n    && (register_operand (operands[0], <VM64:MODE>mode)"}, {"sha": "d11f663649003e6dcd34abb3bb3c517d741d8662", "filename": "gcc/config/sparc/sync.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aaa050aa4a13eb045ae5db57d8a50a5b4121c29e/gcc%2Fconfig%2Fsparc%2Fsync.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aaa050aa4a13eb045ae5db57d8a50a5b4121c29e/gcc%2Fconfig%2Fsparc%2Fsync.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsync.md?ref=aaa050aa4a13eb045ae5db57d8a50a5b4121c29e", "patch": "@@ -115,7 +115,7 @@\n })\n \n (define_insn \"atomic_loaddi_1\"\n-  [(set (match_operand:DI 0 \"register_operand\" \"=r,?*f\")\n+  [(set (match_operand:DI 0 \"register_operand\" \"=U,?*f\")\n \t(unspec:DI [(match_operand:DI 1 \"memory_operand\" \"m,m\")]\n \t\t   UNSPEC_ATOMIC))]\n   \"!TARGET_ARCH64\"\n@@ -144,7 +144,7 @@\n (define_insn \"atomic_storedi_1\"\n   [(set (match_operand:DI 0 \"memory_operand\" \"=m,m,m\")\n \t(unspec:DI\n-\t  [(match_operand:DI 1 \"register_or_v9_zero_operand\" \"J,r,?*f\")]\n+\t  [(match_operand:DI 1 \"register_or_v9_zero_operand\" \"J,U,?*f\")]\n \t  UNSPEC_ATOMIC))]\n   \"!TARGET_ARCH64\"\n   \"@"}, {"sha": "68b530dd33ba07cbe8f494113f5e679e98493f82", "filename": "gcc/doc/md.texi", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aaa050aa4a13eb045ae5db57d8a50a5b4121c29e/gcc%2Fdoc%2Fmd.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aaa050aa4a13eb045ae5db57d8a50a5b4121c29e/gcc%2Fdoc%2Fmd.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fmd.texi?ref=aaa050aa4a13eb045ae5db57d8a50a5b4121c29e", "patch": "@@ -3278,6 +3278,9 @@ instruction sequence\n @item T\n Memory address aligned to an 8-byte boundary\n \n+@item U\n+Even register\n+\n @item W\n Memory address for @samp{e} constraint registers\n "}]}