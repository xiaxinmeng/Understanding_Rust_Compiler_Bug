{"sha": "e73cf9a208d8ef5482f3f3ca7bc78bd38d633595", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTczY2Y5YTIwOGQ4ZWY1NDgyZjNmM2NhN2JjNzhiZDM4ZDYzMzU5NQ==", "commit": {"author": {"name": "Thomas Preud'homme", "email": "thomas.preudhomme@arm.com", "date": "2016-09-26T17:20:39Z"}, "committer": {"name": "Thomas Preud'homme", "email": "thopre01@gcc.gnu.org", "date": "2016-09-26T17:20:39Z"}, "message": "tree.h (memmodel_from_int, [...]): Move to ...\n\n2016-09-26  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n\n    gcc/\n    * tree.h (memmodel_from_int, memmodel_base, is_mm_relaxed,\n    is_mm_consume, is_mm_acquire, is_mm_release, is_mm_acq_rel,\n    is_mm_seq_cst, is_mm_sync): Move to ...\n    * memmodel.h: This.  New file.\n    * builtins.c: Include memmodel.h.\n    * optabs.c: Likewise.\n    * tsan.c: Likewise.\n    * config/aarch64/aarch64.c: Likewise.\n    * config/alpha/alpha.c: Likewise.\n    * config/arm/arm.c: Likewise.\n    * config/i386/i386.c: Likewise.\n    * config/ia64/ia64.c: Likewise.\n    * config/mips/mips.c: Likewise.\n    * config/rs6000/rs6000.c: Likewise.\n    * config/sparc/sparc.c: Likewise.\n    * genconditions.c: Include memmodel.h in generated file.\n    * genemit.c: Likewise.\n    * genoutput.c: Likewise.\n    * genpeep.c: Likewise.\n    * genpreds.c: Likewise.\n    * genrecog.c: Likewise.\n\n    gcc/c-family/\n    * c-common.c: Include memmodel.h.\n\nFrom-SVN: r240504", "tree": {"sha": "2cc75ac7cc2f3f7e00bcda2ebf61b8484b518328", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2cc75ac7cc2f3f7e00bcda2ebf61b8484b518328"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e73cf9a208d8ef5482f3f3ca7bc78bd38d633595", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e73cf9a208d8ef5482f3f3ca7bc78bd38d633595", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e73cf9a208d8ef5482f3f3ca7bc78bd38d633595", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e73cf9a208d8ef5482f3f3ca7bc78bd38d633595/comments", "author": {"login": "RoboTux", "id": 272327, "node_id": "MDQ6VXNlcjI3MjMyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/272327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RoboTux", "html_url": "https://github.com/RoboTux", "followers_url": "https://api.github.com/users/RoboTux/followers", "following_url": "https://api.github.com/users/RoboTux/following{/other_user}", "gists_url": "https://api.github.com/users/RoboTux/gists{/gist_id}", "starred_url": "https://api.github.com/users/RoboTux/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RoboTux/subscriptions", "organizations_url": "https://api.github.com/users/RoboTux/orgs", "repos_url": "https://api.github.com/users/RoboTux/repos", "events_url": "https://api.github.com/users/RoboTux/events{/privacy}", "received_events_url": "https://api.github.com/users/RoboTux/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "991075a49668f776b727b3b358557a02a896afa2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/991075a49668f776b727b3b358557a02a896afa2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/991075a49668f776b727b3b358557a02a896afa2"}], "stats": {"total": 195, "additions": 132, "deletions": 63}, "files": [{"sha": "a1c1620833eb4e12c1e0c1d585758b248089a09b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e73cf9a208d8ef5482f3f3ca7bc78bd38d633595/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e73cf9a208d8ef5482f3f3ca7bc78bd38d633595/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e73cf9a208d8ef5482f3f3ca7bc78bd38d633595", "patch": "@@ -1,3 +1,27 @@\n+2016-09-26  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n+\n+\t* tree.h (memmodel_from_int, memmodel_base, is_mm_relaxed,\n+\tis_mm_consume, is_mm_acquire, is_mm_release, is_mm_acq_rel,\n+\tis_mm_seq_cst, is_mm_sync): Move to ...\n+\t* memmodel.h: This.  New file.\n+\t* builtins.c: Include memmodel.h.\n+\t* optabs.c: Likewise.\n+\t* tsan.c: Likewise.\n+\t* config/aarch64/aarch64.c: Likewise.\n+\t* config/alpha/alpha.c: Likewise.\n+\t* config/arm/arm.c: Likewise.\n+\t* config/i386/i386.c: Likewise.\n+\t* config/ia64/ia64.c: Likewise.\n+\t* config/mips/mips.c: Likewise.\n+\t* config/rs6000/rs6000.c: Likewise.\n+\t* config/sparc/sparc.c: Likewise.\n+\t* genconditions.c: Include memmodel.h in generated file.\n+\t* genemit.c: Likewise.\n+\t* genoutput.c: Likewise.\n+\t* genpeep.c: Likewise.\n+\t* genpreds.c: Likewise.\n+\t* genrecog.c: Likewise.\n+\n 2016-09-26  David Malcolm  <dmalcolm@redhat.com>\n \n \t* read-rtl.c (read_rtx_code): Rename local \"i\" to \"idx\", and use"}, {"sha": "04dcf95acd21bf092c730d5fdd08b58c497c1ab5", "filename": "gcc/builtins.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e73cf9a208d8ef5482f3f3ca7bc78bd38d633595/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e73cf9a208d8ef5482f3f3ca7bc78bd38d633595/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=e73cf9a208d8ef5482f3f3ca7bc78bd38d633595", "patch": "@@ -28,6 +28,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"target.h\"\n #include \"rtl.h\"\n #include \"tree.h\"\n+#include \"memmodel.h\"\n #include \"gimple.h\"\n #include \"predict.h\"\n #include \"tm_p.h\""}, {"sha": "e0b1333819eafc93f82123aaa049700ea3c1dd10", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e73cf9a208d8ef5482f3f3ca7bc78bd38d633595/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e73cf9a208d8ef5482f3f3ca7bc78bd38d633595/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=e73cf9a208d8ef5482f3f3ca7bc78bd38d633595", "patch": "@@ -1,3 +1,7 @@\n+2016-09-26  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n+\n+\t* c-common.c: Include memmodel.h.\n+\n 2016-09-26  Marek Polacek  <polacek@redhat.com>\n \n \t* c-lex.c (c_common_has_attribute): Handle attribute fallthrough."}, {"sha": "2652259a312d76394192575379d00f6d93313404", "filename": "gcc/c-family/c-common.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e73cf9a208d8ef5482f3f3ca7bc78bd38d633595/gcc%2Fc-family%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e73cf9a208d8ef5482f3f3ca7bc78bd38d633595/gcc%2Fc-family%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.c?ref=e73cf9a208d8ef5482f3f3ca7bc78bd38d633595", "patch": "@@ -25,6 +25,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"target.h\"\n #include \"function.h\"\n #include \"tree.h\"\n+#include \"memmodel.h\"\n #include \"c-common.h\"\n #include \"gimple-expr.h\"\n #include \"tm_p.h\""}, {"sha": "c65b826b0cc74f690d0c70d8f2df8ab2e7de1d01", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e73cf9a208d8ef5482f3f3ca7bc78bd38d633595/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e73cf9a208d8ef5482f3f3ca7bc78bd38d633595/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=e73cf9a208d8ef5482f3f3ca7bc78bd38d633595", "patch": "@@ -26,6 +26,7 @@\n #include \"target.h\"\n #include \"rtl.h\"\n #include \"tree.h\"\n+#include \"memmodel.h\"\n #include \"gimple.h\"\n #include \"cfghooks.h\"\n #include \"cfgloop.h\""}, {"sha": "d646879e7e8a48d56a0380b241c464e349db4621", "filename": "gcc/config/alpha/alpha.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e73cf9a208d8ef5482f3f3ca7bc78bd38d633595/gcc%2Fconfig%2Falpha%2Falpha.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e73cf9a208d8ef5482f3f3ca7bc78bd38d633595/gcc%2Fconfig%2Falpha%2Falpha.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.c?ref=e73cf9a208d8ef5482f3f3ca7bc78bd38d633595", "patch": "@@ -26,6 +26,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"target.h\"\n #include \"rtl.h\"\n #include \"tree.h\"\n+#include \"memmodel.h\"\n #include \"gimple.h\"\n #include \"df.h\"\n #include \"tm_p.h\""}, {"sha": "feb54cbc64a594e3cbb681c49955df6e521ee4eb", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e73cf9a208d8ef5482f3f3ca7bc78bd38d633595/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e73cf9a208d8ef5482f3f3ca7bc78bd38d633595/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=e73cf9a208d8ef5482f3f3ca7bc78bd38d633595", "patch": "@@ -27,6 +27,7 @@\n #include \"target.h\"\n #include \"rtl.h\"\n #include \"tree.h\"\n+#include \"memmodel.h\"\n #include \"cfghooks.h\"\n #include \"df.h\"\n #include \"tm_p.h\""}, {"sha": "01e2ad8e1b255baa6d65ff7e7b13ccb129e59b3b", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e73cf9a208d8ef5482f3f3ca7bc78bd38d633595/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e73cf9a208d8ef5482f3f3ca7bc78bd38d633595/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=e73cf9a208d8ef5482f3f3ca7bc78bd38d633595", "patch": "@@ -23,6 +23,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"backend.h\"\n #include \"rtl.h\"\n #include \"tree.h\"\n+#include \"memmodel.h\"\n #include \"gimple.h\"\n #include \"cfghooks.h\"\n #include \"cfgloop.h\""}, {"sha": "573872eb85fd3e71190161b81fd87b304abd0c4b", "filename": "gcc/config/ia64/ia64.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e73cf9a208d8ef5482f3f3ca7bc78bd38d633595/gcc%2Fconfig%2Fia64%2Fia64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e73cf9a208d8ef5482f3f3ca7bc78bd38d633595/gcc%2Fconfig%2Fia64%2Fia64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.c?ref=e73cf9a208d8ef5482f3f3ca7bc78bd38d633595", "patch": "@@ -26,6 +26,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"target.h\"\n #include \"rtl.h\"\n #include \"tree.h\"\n+#include \"memmodel.h\"\n #include \"cfghooks.h\"\n #include \"df.h\"\n #include \"tm_p.h\""}, {"sha": "3586a1001e7a920571b1be6d41f9a8e1345f33cc", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e73cf9a208d8ef5482f3f3ca7bc78bd38d633595/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e73cf9a208d8ef5482f3f3ca7bc78bd38d633595/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=e73cf9a208d8ef5482f3f3ca7bc78bd38d633595", "patch": "@@ -28,6 +28,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"target.h\"\n #include \"rtl.h\"\n #include \"tree.h\"\n+#include \"memmodel.h\"\n #include \"gimple.h\"\n #include \"cfghooks.h\"\n #include \"df.h\""}, {"sha": "6897b5c260d1280c5acc2ba0b16cb772470bafd2", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e73cf9a208d8ef5482f3f3ca7bc78bd38d633595/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e73cf9a208d8ef5482f3f3ca7bc78bd38d633595/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=e73cf9a208d8ef5482f3f3ca7bc78bd38d633595", "patch": "@@ -24,6 +24,7 @@\n #include \"backend.h\"\n #include \"rtl.h\"\n #include \"tree.h\"\n+#include \"memmodel.h\"\n #include \"gimple.h\"\n #include \"cfghooks.h\"\n #include \"cfgloop.h\""}, {"sha": "5936f96bd80eb16c671c8172b1869ef24bba77ad", "filename": "gcc/config/sparc/sparc.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e73cf9a208d8ef5482f3f3ca7bc78bd38d633595/gcc%2Fconfig%2Fsparc%2Fsparc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e73cf9a208d8ef5482f3f3ca7bc78bd38d633595/gcc%2Fconfig%2Fsparc%2Fsparc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.c?ref=e73cf9a208d8ef5482f3f3ca7bc78bd38d633595", "patch": "@@ -27,6 +27,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"target.h\"\n #include \"rtl.h\"\n #include \"tree.h\"\n+#include \"memmodel.h\"\n #include \"gimple.h\"\n #include \"df.h\"\n #include \"tm_p.h\""}, {"sha": "d8b0ebba56b8db4bea9e0edced03293152e51d02", "filename": "gcc/genconditions.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e73cf9a208d8ef5482f3f3ca7bc78bd38d633595/gcc%2Fgenconditions.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e73cf9a208d8ef5482f3f3ca7bc78bd38d633595/gcc%2Fgenconditions.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenconditions.c?ref=e73cf9a208d8ef5482f3f3ca7bc78bd38d633595", "patch": "@@ -94,6 +94,7 @@ write_header (void)\n #include \\\"resource.h\\\"\\n\\\n #include \\\"diagnostic-core.h\\\"\\n\\\n #include \\\"reload.h\\\"\\n\\\n+#include \\\"memmodel.h\\\"\\n\\\n #include \\\"tm-constrs.h\\\"\\n\");\n \n   if (saw_eh_return)"}, {"sha": "d5e07a97a6d50f7b744e9d67ad49e72046e9df03", "filename": "gcc/genemit.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e73cf9a208d8ef5482f3f3ca7bc78bd38d633595/gcc%2Fgenemit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e73cf9a208d8ef5482f3f3ca7bc78bd38d633595/gcc%2Fgenemit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenemit.c?ref=e73cf9a208d8ef5482f3f3ca7bc78bd38d633595", "patch": "@@ -792,6 +792,7 @@ from the machine description file `md'.  */\\n\\n\");\n   printf (\"#include \\\"reload.h\\\"\\n\");\n   printf (\"#include \\\"diagnostic-core.h\\\"\\n\");\n   printf (\"#include \\\"regs.h\\\"\\n\");\n+  printf (\"#include \\\"memmodel.h\\\"\\n\");\n   printf (\"#include \\\"tm-constrs.h\\\"\\n\");\n   printf (\"#include \\\"ggc.h\\\"\\n\");\n   printf (\"#include \\\"dumpfile.h\\\"\\n\");"}, {"sha": "59092580e49e27cc679e444606a892f08ab8c4bd", "filename": "gcc/genoutput.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e73cf9a208d8ef5482f3f3ca7bc78bd38d633595/gcc%2Fgenoutput.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e73cf9a208d8ef5482f3f3ca7bc78bd38d633595/gcc%2Fgenoutput.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenoutput.c?ref=e73cf9a208d8ef5482f3f3ca7bc78bd38d633595", "patch": "@@ -231,6 +231,7 @@ output_prologue (void)\n   printf (\"#include \\\"diagnostic-core.h\\\"\\n\");\n   printf (\"#include \\\"output.h\\\"\\n\");\n   printf (\"#include \\\"target.h\\\"\\n\");\n+  printf (\"#include \\\"memmodel.h\\\"\\n\");\n   printf (\"#include \\\"tm-constrs.h\\\"\\n\");\n }\n "}, {"sha": "e1997e03e476de910c57f7854b7b62edd5360b8f", "filename": "gcc/genpeep.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e73cf9a208d8ef5482f3f3ca7bc78bd38d633595/gcc%2Fgenpeep.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e73cf9a208d8ef5482f3f3ca7bc78bd38d633595/gcc%2Fgenpeep.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenpeep.c?ref=e73cf9a208d8ef5482f3f3ca7bc78bd38d633595", "patch": "@@ -373,6 +373,7 @@ from the machine description file `md'.  */\\n\\n\");\n   printf (\"#include \\\"except.h\\\"\\n\");\n   printf (\"#include \\\"diagnostic-core.h\\\"\\n\");\n   printf (\"#include \\\"flags.h\\\"\\n\");\n+  printf (\"#include \\\"memmodel.h\\\"\\n\");\n   printf (\"#include \\\"tm-constrs.h\\\"\\n\\n\");\n \n   printf (\"extern rtx peep_operand[];\\n\\n\");"}, {"sha": "6db1b7b0301633b0354b49570d985fb02e4ede10", "filename": "gcc/genpreds.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e73cf9a208d8ef5482f3f3ca7bc78bd38d633595/gcc%2Fgenpreds.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e73cf9a208d8ef5482f3f3ca7bc78bd38d633595/gcc%2Fgenpreds.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenpreds.c?ref=e73cf9a208d8ef5482f3f3ca7bc78bd38d633595", "patch": "@@ -1580,6 +1580,7 @@ write_insn_preds_c (void)\n #include \\\"reload.h\\\"\\n\\\n #include \\\"regs.h\\\"\\n\\\n #include \\\"emit-rtl.h\\\"\\n\\\n+#include \\\"memmodel.h\\\"\\n\\\n #include \\\"tm-constrs.h\\\"\\n\");\n \n   FOR_ALL_PREDICATES (p)"}, {"sha": "778610744923bb1cd3e9ecfb5c93faa1c142063a", "filename": "gcc/genrecog.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e73cf9a208d8ef5482f3f3ca7bc78bd38d633595/gcc%2Fgenrecog.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e73cf9a208d8ef5482f3f3ca7bc78bd38d633595/gcc%2Fgenrecog.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenrecog.c?ref=e73cf9a208d8ef5482f3f3ca7bc78bd38d633595", "patch": "@@ -4192,6 +4192,7 @@ write_header (void)\n #include \\\"diagnostic-core.h\\\"\\n\\\n #include \\\"reload.h\\\"\\n\\\n #include \\\"regs.h\\\"\\n\\\n+#include \\\"memmodel.h\\\"\\n\\\n #include \\\"tm-constrs.h\\\"\\n\\\n \\n\");\n "}, {"sha": "d53eb7bc9d9966c2b1510e584f0fd50b13cde572", "filename": "gcc/memmodel.h", "status": "added", "additions": 86, "deletions": 0, "changes": 86, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e73cf9a208d8ef5482f3f3ca7bc78bd38d633595/gcc%2Fmemmodel.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e73cf9a208d8ef5482f3f3ca7bc78bd38d633595/gcc%2Fmemmodel.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmemmodel.h?ref=e73cf9a208d8ef5482f3f3ca7bc78bd38d633595", "patch": "@@ -0,0 +1,86 @@\n+/* Prototypes of memory model helper functions.\n+   Copyright (C) 2015-2016 Free Software Foundation, Inc.\n+\n+This file is part of GCC.\n+\n+GCC is free software; you can redistribute it and/or modify it under\n+the terms of the GNU General Public License as published by the Free\n+Software Foundation; either version 3, or (at your option) any later\n+version.\n+\n+GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+#ifndef GCC_MEMMODEL_H\n+#define GCC_MEMMODEL_H\n+\n+/* Return the memory model from a host integer.  */\n+static inline enum memmodel\n+memmodel_from_int (unsigned HOST_WIDE_INT val)\n+{\n+  return (enum memmodel) (val & MEMMODEL_MASK);\n+}\n+\n+/* Return the base memory model from a host integer.  */\n+static inline enum memmodel\n+memmodel_base (unsigned HOST_WIDE_INT val)\n+{\n+  return (enum memmodel) (val & MEMMODEL_BASE_MASK);\n+}\n+\n+/* Return TRUE if the memory model is RELAXED.  */\n+static inline bool\n+is_mm_relaxed (enum memmodel model)\n+{\n+  return (model & MEMMODEL_BASE_MASK) == MEMMODEL_RELAXED;\n+}\n+\n+/* Return TRUE if the memory model is CONSUME.  */\n+static inline bool\n+is_mm_consume (enum memmodel model)\n+{\n+  return (model & MEMMODEL_BASE_MASK) == MEMMODEL_CONSUME;\n+}\n+\n+/* Return TRUE if the memory model is ACQUIRE.  */\n+static inline bool\n+is_mm_acquire (enum memmodel model)\n+{\n+  return (model & MEMMODEL_BASE_MASK) == MEMMODEL_ACQUIRE;\n+}\n+\n+/* Return TRUE if the memory model is RELEASE.  */\n+static inline bool\n+is_mm_release (enum memmodel model)\n+{\n+  return (model & MEMMODEL_BASE_MASK) == MEMMODEL_RELEASE;\n+}\n+\n+/* Return TRUE if the memory model is ACQ_REL.  */\n+static inline bool\n+is_mm_acq_rel (enum memmodel model)\n+{\n+  return (model & MEMMODEL_BASE_MASK) == MEMMODEL_ACQ_REL;\n+}\n+\n+/* Return TRUE if the memory model is SEQ_CST.  */\n+static inline bool\n+is_mm_seq_cst (enum memmodel model)\n+{\n+  return (model & MEMMODEL_BASE_MASK) == MEMMODEL_SEQ_CST;\n+}\n+\n+/* Return TRUE if the memory model is a SYNC variant.  */\n+static inline bool\n+is_mm_sync (enum memmodel model)\n+{\n+  return (model & MEMMODEL_SYNC);\n+}\n+\n+#endif  /* GCC_MEMMODEL_H  */"}, {"sha": "c5e9b4f8e135add93b34f13e6f5b2b020682173e", "filename": "gcc/optabs.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e73cf9a208d8ef5482f3f3ca7bc78bd38d633595/gcc%2Foptabs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e73cf9a208d8ef5482f3f3ca7bc78bd38d633595/gcc%2Foptabs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptabs.c?ref=e73cf9a208d8ef5482f3f3ca7bc78bd38d633595", "patch": "@@ -25,6 +25,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"target.h\"\n #include \"rtl.h\"\n #include \"tree.h\"\n+#include \"memmodel.h\"\n #include \"predict.h\"\n #include \"tm_p.h\"\n #include \"expmed.h\""}, {"sha": "563e6d9e2879974ca0ee64a23d5cb6dd80fc7569", "filename": "gcc/tree.h", "status": "modified", "additions": 0, "deletions": 63, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e73cf9a208d8ef5482f3f3ca7bc78bd38d633595/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e73cf9a208d8ef5482f3f3ca7bc78bd38d633595/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=e73cf9a208d8ef5482f3f3ca7bc78bd38d633595", "patch": "@@ -4675,69 +4675,6 @@ extern void warn_deprecated_use (tree, tree);\n extern void cache_integer_cst (tree);\n extern const char *combined_fn_name (combined_fn);\n \n-/* Return the memory model from a host integer.  */\n-static inline enum memmodel\n-memmodel_from_int (unsigned HOST_WIDE_INT val)\n-{\n-  return (enum memmodel) (val & MEMMODEL_MASK);\n-}\n-\n-/* Return the base memory model from a host integer.  */\n-static inline enum memmodel\n-memmodel_base (unsigned HOST_WIDE_INT val)\n-{\n-  return (enum memmodel) (val & MEMMODEL_BASE_MASK);\n-}\n-\n-/* Return TRUE if the memory model is RELAXED.  */\n-static inline bool\n-is_mm_relaxed (enum memmodel model)\n-{\n-  return (model & MEMMODEL_BASE_MASK) == MEMMODEL_RELAXED;\n-}\n-\n-/* Return TRUE if the memory model is CONSUME.  */\n-static inline bool\n-is_mm_consume (enum memmodel model)\n-{\n-  return (model & MEMMODEL_BASE_MASK) == MEMMODEL_CONSUME;\n-}\n-\n-/* Return TRUE if the memory model is ACQUIRE.  */\n-static inline bool\n-is_mm_acquire (enum memmodel model)\n-{\n-  return (model & MEMMODEL_BASE_MASK) == MEMMODEL_ACQUIRE;\n-}\n-\n-/* Return TRUE if the memory model is RELEASE.  */\n-static inline bool\n-is_mm_release (enum memmodel model)\n-{\n-  return (model & MEMMODEL_BASE_MASK) == MEMMODEL_RELEASE;\n-}\n-\n-/* Return TRUE if the memory model is ACQ_REL.  */\n-static inline bool\n-is_mm_acq_rel (enum memmodel model)\n-{\n-  return (model & MEMMODEL_BASE_MASK) == MEMMODEL_ACQ_REL;\n-}\n-\n-/* Return TRUE if the memory model is SEQ_CST.  */\n-static inline bool\n-is_mm_seq_cst (enum memmodel model)\n-{\n-  return (model & MEMMODEL_BASE_MASK) == MEMMODEL_SEQ_CST;\n-}\n-\n-/* Return TRUE if the memory model is a SYNC variant.  */\n-static inline bool\n-is_mm_sync (enum memmodel model)\n-{\n-  return (model & MEMMODEL_SYNC);\n-}\n-\n /* Compare and hash for any structure which begins with a canonical\n    pointer.  Assumes all pointers are interchangeable, which is sort\n    of already assumed by gcc elsewhere IIRC.  */"}, {"sha": "cc1947496657f1f9b046eed3e1224688737e6228", "filename": "gcc/tsan.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e73cf9a208d8ef5482f3f3ca7bc78bd38d633595/gcc%2Ftsan.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e73cf9a208d8ef5482f3f3ca7bc78bd38d633595/gcc%2Ftsan.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftsan.c?ref=e73cf9a208d8ef5482f3f3ca7bc78bd38d633595", "patch": "@@ -25,6 +25,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"backend.h\"\n #include \"rtl.h\"\n #include \"tree.h\"\n+#include \"memmodel.h\"\n #include \"gimple.h\"\n #include \"tree-pass.h\"\n #include \"ssa.h\""}]}