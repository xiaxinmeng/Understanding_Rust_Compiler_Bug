{"sha": "5b238a4591932c5e5a28fa8f9b3a413a3ce641a6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWIyMzhhNDU5MTkzMmM1ZTVhMjhmYThmOWIzYTQxM2EzY2U2NDFhNg==", "commit": {"author": {"name": "Dimitar Dimitrov", "email": "dimitar@dinux.eu", "date": "2018-12-11T15:50:51Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2018-12-11T15:50:51Z"}, "message": "cfgexpand.c (asm_clobber_reg_is_valid): Also produce error when stack pointer is clobbered.\n\ngcc/\n2018-12-11  Dimitar Dimitrov  <dimitar@dinux.eu>\n\n\t* cfgexpand.c (asm_clobber_reg_is_valid): Also produce\n\terror when stack pointer is clobbered.\n\t(expand_asm_stmt): Refactor clobber check in separate function.\n\ngcc/testsuite/\n2018-12-11  Dimitar Dimitrov  <dimitar@dinux.eu>\n\n\t* gcc.target/i386/pr52813.c: New test.\n\nFrom-SVN: r267025", "tree": {"sha": "7942157d661299dbb5b1d291fdd2283ad78ec3a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7942157d661299dbb5b1d291fdd2283ad78ec3a4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5b238a4591932c5e5a28fa8f9b3a413a3ce641a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b238a4591932c5e5a28fa8f9b3a413a3ce641a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b238a4591932c5e5a28fa8f9b3a413a3ce641a6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b238a4591932c5e5a28fa8f9b3a413a3ce641a6/comments", "author": null, "committer": null, "parents": [{"sha": "f9d4d3cf937b5a94d461a51799018dfb33262650", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9d4d3cf937b5a94d461a51799018dfb33262650", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f9d4d3cf937b5a94d461a51799018dfb33262650"}], "stats": {"total": 61, "additions": 53, "deletions": 8}, "files": [{"sha": "cc126c7e3ee83d50874e755563e1baf81bce9fbb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b238a4591932c5e5a28fa8f9b3a413a3ce641a6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b238a4591932c5e5a28fa8f9b3a413a3ce641a6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5b238a4591932c5e5a28fa8f9b3a413a3ce641a6", "patch": "@@ -1,3 +1,9 @@\n+2018-12-11  Dimitar Dimitrov  <dimitar@dinux.eu>\n+\n+\t* cfgexpand.c (asm_clobber_reg_is_valid): Also produce\n+\terror when stack pointer is clobbered.\n+\t(expand_asm_stmt): Refactor clobber check in separate function.\n+\n 2018-12-11  Eric Botcazou  <botcazou@adacore.com>\n \n \t* config/rs6000/vxworks.h (RS6000_STARTING_FRAME_OFFSET): Define,"}, {"sha": "0d04bbcafcee8f60050d8ec47009c5355785341c", "filename": "gcc/cfgexpand.c", "status": "modified", "additions": 34, "deletions": 8, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b238a4591932c5e5a28fa8f9b3a413a3ce641a6/gcc%2Fcfgexpand.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b238a4591932c5e5a28fa8f9b3a413a3ce641a6/gcc%2Fcfgexpand.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgexpand.c?ref=5b238a4591932c5e5a28fa8f9b3a413a3ce641a6", "patch": "@@ -2850,6 +2850,38 @@ tree_conflicts_with_clobbers_p (tree t, HARD_REG_SET *clobbered_regs)\n   return false;\n }\n \n+/* Check that the given REGNO spanning NREGS is a valid\n+   asm clobber operand.  Some HW registers cannot be\n+   saved/restored, hence they should not be clobbered by\n+   asm statements.  */\n+static bool\n+asm_clobber_reg_is_valid (int regno, int nregs, const char *regname)\n+{\n+  bool is_valid = true;\n+  HARD_REG_SET regset;\n+\n+  CLEAR_HARD_REG_SET (regset);\n+\n+  add_range_to_hard_reg_set (&regset, regno, nregs);\n+\n+  /* Clobbering the PIC register is an error.  */\n+  if (PIC_OFFSET_TABLE_REGNUM != INVALID_REGNUM\n+      && overlaps_hard_reg_set_p (regset, Pmode, PIC_OFFSET_TABLE_REGNUM))\n+    {\n+      /* ??? Diagnose during gimplification?  */\n+      error (\"PIC register clobbered by %qs in %<asm%>\", regname);\n+      is_valid = false;\n+    }\n+  /* Clobbering the STACK POINTER register is an error.  */\n+  if (overlaps_hard_reg_set_p (regset, Pmode, STACK_POINTER_REGNUM))\n+    {\n+      error (\"Stack Pointer register clobbered by %qs in %<asm%>\", regname);\n+      is_valid = false;\n+    }\n+\n+  return is_valid;\n+}\n+\n /* Generate RTL for an asm statement with arguments.\n    STRING is the instruction template.\n    OUTPUTS is a list of output arguments (lvalues); INPUTS a list of inputs.\n@@ -2982,14 +3014,8 @@ expand_asm_stmt (gasm *stmt)\n \t  else\n \t    for (int reg = j; reg < j + nregs; reg++)\n \t      {\n-\t\t/* Clobbering the PIC register is an error.  */\n-\t\tif (reg == (int) PIC_OFFSET_TABLE_REGNUM)\n-\t\t  {\n-\t\t    /* ??? Diagnose during gimplification?  */\n-\t\t    error (\"PIC register clobbered by %qs in %<asm%>\",\n-\t\t\t   regname);\n-\t\t    return;\n-\t\t  }\n+\t\tif (!asm_clobber_reg_is_valid (reg, nregs, regname))\n+\t\t  return;\n \n \t        SET_HARD_REG_BIT (clobbered_regs, reg);\n \t        rtx x = gen_rtx_REG (reg_raw_mode[reg], reg);"}, {"sha": "3c15bf7c152185cedc2707a0625f5c7633dc8c7d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b238a4591932c5e5a28fa8f9b3a413a3ce641a6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b238a4591932c5e5a28fa8f9b3a413a3ce641a6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5b238a4591932c5e5a28fa8f9b3a413a3ce641a6", "patch": "@@ -1,3 +1,7 @@\n+2018-12-11  Dimitar Dimitrov  <dimitar@dinux.eu>\n+\n+\t* gcc.target/i386/pr52813.c: New test.\n+\n 2018-12-11  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/88425"}, {"sha": "154ebbfc4233dbcfb7987877a1e400e4b1c555f6", "filename": "gcc/testsuite/gcc.target/i386/pr52813.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b238a4591932c5e5a28fa8f9b3a413a3ce641a6/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr52813.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b238a4591932c5e5a28fa8f9b3a413a3ce641a6/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr52813.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr52813.c?ref=5b238a4591932c5e5a28fa8f9b3a413a3ce641a6", "patch": "@@ -0,0 +1,9 @@\n+/* Ensure that stack pointer cannot be an asm clobber.  */\n+/* { dg-do compile { target { ! ia32 } } } */\n+/* { dg-options \"-O2\" } */\n+\n+void\n+test1 (void)\n+{\n+  asm volatile (\"\" : : : \"%esp\"); /* { dg-error \"Stack Pointer register clobbered\" } */\n+}"}]}