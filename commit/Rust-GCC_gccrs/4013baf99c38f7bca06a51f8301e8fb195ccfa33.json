{"sha": "4013baf99c38f7bca06a51f8301e8fb195ccfa33", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDAxM2JhZjk5YzM4ZjdiY2EwNmE1MWY4MzAxZThmYjE5NWNjZmEzMw==", "commit": {"author": {"name": "Jim Wilson", "email": "jimw@sifive.com", "date": "2020-06-02T18:19:39Z"}, "committer": {"name": "Jim Wilson", "email": "jimw@sifive.com", "date": "2020-06-02T18:44:44Z"}, "message": "RISC-V: Make __divdi3 handle div by zero same as hardware.\n\nThe ISA manual specifies that divide by zero always returns -1 as the result.\nWe were failing to do that when the dividend was negative.\n\nOriginal patch from Virginie Moser.\n\n\tlibgcc/\n\t* config/riscv/div.S (__divdi3): For negative arguments, change bgez\n\tto bgtz.", "tree": {"sha": "eb2611cf552e6acf4c9eaeb55b33f1ec3d9d46c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eb2611cf552e6acf4c9eaeb55b33f1ec3d9d46c2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4013baf99c38f7bca06a51f8301e8fb195ccfa33", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4013baf99c38f7bca06a51f8301e8fb195ccfa33", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4013baf99c38f7bca06a51f8301e8fb195ccfa33", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4013baf99c38f7bca06a51f8301e8fb195ccfa33/comments", "author": null, "committer": null, "parents": [{"sha": "578c013aa697cb81a46e9b335ce61c82c009c77f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/578c013aa697cb81a46e9b335ce61c82c009c77f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/578c013aa697cb81a46e9b335ce61c82c009c77f"}], "stats": {"total": 8, "additions": 5, "deletions": 3}, "files": [{"sha": "17234324c1e41c6c38980e8676058bbba45ae5b2", "filename": "libgcc/config/riscv/div.S", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4013baf99c38f7bca06a51f8301e8fb195ccfa33/libgcc%2Fconfig%2Friscv%2Fdiv.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4013baf99c38f7bca06a51f8301e8fb195ccfa33/libgcc%2Fconfig%2Friscv%2Fdiv.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Friscv%2Fdiv.S?ref=4013baf99c38f7bca06a51f8301e8fb195ccfa33", "patch": "@@ -107,10 +107,12 @@ FUNC_END (__umoddi3)\n   /* Handle negative arguments to __divdi3.  */\n .L10:\n   neg   a0, a0\n-  bgez  a1, .L12      /* Compute __udivdi3(-a0, a1), then negate the result.  */\n+  /* Zero is handled as a negative so that the result will not be inverted.  */\n+  bgtz  a1, .L12     /* Compute __udivdi3(-a0, a1), then negate the result.  */\n+\n   neg   a1, a1\n-  j     __udivdi3     /* Compute __udivdi3(-a0, -a1).  */\n-.L11:                 /* Compute __udivdi3(a0, -a1), then negate the result.  */\n+  j     __udivdi3    /* Compute __udivdi3(-a0, -a1).  */\n+.L11:                /* Compute __udivdi3(a0, -a1), then negate the result.  */\n   neg   a1, a1\n .L12:\n   move  t0, ra"}]}