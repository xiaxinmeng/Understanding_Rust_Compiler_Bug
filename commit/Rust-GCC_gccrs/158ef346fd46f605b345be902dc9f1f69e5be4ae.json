{"sha": "158ef346fd46f605b345be902dc9f1f69e5be4ae", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTU4ZWYzNDZmZDQ2ZjYwNWIzNDViZTkwMmRjOWYxZjY5ZTViZTRhZQ==", "commit": {"author": {"name": "Charles Baylis", "email": "charles.baylis@linaro.org", "date": "2014-06-18T15:43:35Z"}, "committer": {"name": "Charles Baylis", "email": "cbaylis@gcc.gnu.org", "date": "2014-06-18T15:43:35Z"}, "message": "bpabi.S (__aeabi_ldivmod, [...]): Use .cfi_* directives for DWARF annotations.\n\n2014-06-18  Charles Baylis  <charles.baylis@linaro.org>\n\n\t* config/arm/bpabi.S (__aeabi_ldivmod, __aeabi_uldivmod,\n\tpush_for_divide, pop_for_divide): Use .cfi_* directives for DWARF\n\tannotations. Fix DWARF information.\n\nFrom-SVN: r211795", "tree": {"sha": "5e3544b06eb5a731a2cba076460f91c584acee8c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5e3544b06eb5a731a2cba076460f91c584acee8c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/158ef346fd46f605b345be902dc9f1f69e5be4ae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/158ef346fd46f605b345be902dc9f1f69e5be4ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/158ef346fd46f605b345be902dc9f1f69e5be4ae", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/158ef346fd46f605b345be902dc9f1f69e5be4ae/comments", "author": null, "committer": null, "parents": [{"sha": "1338118928aa7368a01be65e40a95e7c4ba270d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1338118928aa7368a01be65e40a95e7c4ba270d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1338118928aa7368a01be65e40a95e7c4ba270d0"}], "stats": {"total": 27, "additions": 22, "deletions": 5}, "files": [{"sha": "054ba984cbb71a1bea8044590dcfeb9aed32da61", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/158ef346fd46f605b345be902dc9f1f69e5be4ae/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/158ef346fd46f605b345be902dc9f1f69e5be4ae/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=158ef346fd46f605b345be902dc9f1f69e5be4ae", "patch": "@@ -1,3 +1,9 @@\n+2014-06-18  Charles Baylis  <charles.baylis@linaro.org>\n+\n+\t* config/arm/bpabi.S (__aeabi_ldivmod, __aeabi_uldivmod,\n+\tpush_for_divide, pop_for_divide): Use .cfi_* directives for DWARF\n+\tannotations. Fix DWARF information.\n+\n 2014-06-18  Charles Baylis  <charles.baylis@linaro.org>\n \n \t* config/arm/bpabi.S (__aeabi_ldivmod): Perform division using"}, {"sha": "959ecb157be4a01f5ef6b6da28d10bb87796c841", "filename": "libgcc/config/arm/bpabi.S", "status": "modified", "additions": 16, "deletions": 5, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/158ef346fd46f605b345be902dc9f1f69e5be4ae/libgcc%2Fconfig%2Farm%2Fbpabi.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/158ef346fd46f605b345be902dc9f1f69e5be4ae/libgcc%2Fconfig%2Farm%2Fbpabi.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Farm%2Fbpabi.S?ref=158ef346fd46f605b345be902dc9f1f69e5be4ae", "patch": "@@ -22,6 +22,8 @@\n    see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n    <http://www.gnu.org/licenses/>.  */\n \n+\t.cfi_sections .debug_frame\n+\n #ifdef __ARM_EABI__\n /* Some attributes that are common to all routines in this file.  */\n \t/* Tag_ABI_align_needed: This code does not require 8-byte\n@@ -145,7 +147,8 @@ ARM_FUNC_START aeabi_ulcmp\n \tsub\tsp, sp, #8\n \tdo_push\t{sp, lr}\n #endif\n-98:\tcfi_push\t98b - \\fname, 0xe, -0xc, 0x10\n+\t.cfi_adjust_cfa_offset 16\n+\t.cfi_offset 14, -12\n .endm\n \n /* restore stack */\n@@ -158,6 +161,8 @@ ARM_FUNC_START aeabi_ulcmp\n \tadd\tsp, sp, #8\n \tdo_pop\t{r2, r3}\n #endif\n+\t.cfi_restore 14\n+\t.cfi_adjust_cfa_offset 0\n .endm\n \n #ifdef L_aeabi_ldivmod\n@@ -171,7 +176,7 @@ ARM_FUNC_START aeabi_ulcmp\n \tr2:r3\tremainder\n  */\n ARM_FUNC_START aeabi_ldivmod\n-\tcfi_start\t__aeabi_ldivmod, LSYM(Lend_aeabi_ldivmod)\n+\t.cfi_startproc\n \ttest_div_by_zero\tsigned\n \n \tpush_for_divide\t__aeabi_ldivmod\n@@ -181,16 +186,19 @@ ARM_FUNC_START aeabi_ldivmod\n \tblt\t2f\n \t/* arguments in (r0:r1), (r2:r3) and *sp */\n \tbl\tSYM(__udivmoddi4) __PLT__\n+\t.cfi_remember_state\n \tpop_for_divide\n \tRET\n \n 1: /* xxh:xxl is negative */\n+\t.cfi_restore_state\n \tnegs\txxl, xxl\n \tsbc\txxh, xxh, xxh, lsl #1\t/* Thumb-2 has no RSC, so use X - 2X */\n \tcmp\tyyh, #0\n \tblt\t3f\n \t/* arguments in (r0:r1), (r2:r3) and *sp */\n \tbl\tSYM(__udivmoddi4) __PLT__\n+\t.cfi_remember_state\n \tpop_for_divide\n \tnegs\txxl, xxl\n \tsbc\txxh, xxh, xxh, lsl #1\t/* Thumb-2 has no RSC, so use X - 2X */\n@@ -199,16 +207,19 @@ ARM_FUNC_START aeabi_ldivmod\n \tRET\n \n 2: /* only yyh:yyl is negative */\n+\t.cfi_restore_state\n \tnegs\tyyl, yyl\n \tsbc\tyyh, yyh, yyh, lsl #1\t/* Thumb-2 has no RSC, so use X - 2X */\n \t/* arguments in (r0:r1), (r2:r3) and *sp */\n \tbl\tSYM(__udivmoddi4) __PLT__\n+\t.cfi_remember_state\n \tpop_for_divide\n \tnegs\txxl, xxl\n \tsbc\txxh, xxh, xxh, lsl #1\t/* Thumb-2 has no RSC, so use X - 2X */\n \tRET\n \n 3: /* both xxh:xxl and yyh:yyl are negative */\n+\t.cfi_restore_state\n \tnegs\tyyl, yyl\n \tsbc\tyyh, yyh, yyh, lsl #1\t/* Thumb-2 has no RSC, so use X - 2X */\n \t/* arguments in (r0:r1), (r2:r3) and *sp */\n@@ -218,7 +229,7 @@ ARM_FUNC_START aeabi_ldivmod\n \tsbc\tyyh, yyh, yyh, lsl #1\t/* Thumb-2 has no RSC, so use X - 2X */\n \tRET\n \n-\tcfi_end\tLSYM(Lend_aeabi_ldivmod)\n+\t.cfi_endproc\n \t\n #endif /* L_aeabi_ldivmod */\n \n@@ -233,15 +244,15 @@ ARM_FUNC_START aeabi_ldivmod\n \tr2:r3\tremainder\n  */\n ARM_FUNC_START aeabi_uldivmod\n-\tcfi_start\t__aeabi_uldivmod, LSYM(Lend_aeabi_uldivmod)\n+\t.cfi_startproc\n \ttest_div_by_zero\tunsigned\n \n \tpush_for_divide\t__aeabi_uldivmod\n \t/* arguments in (r0:r1), (r2:r3) and *sp */\n \tbl\tSYM(__udivmoddi4) __PLT__\n \tpop_for_divide\n \tRET\n-\tcfi_end\tLSYM(Lend_aeabi_uldivmod)\n+\t.cfi_endproc\n \n #endif /* L_aeabi_divmod */\n \t"}]}