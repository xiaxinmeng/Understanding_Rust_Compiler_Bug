{"sha": "bedc2d2c79b5be2a8b29cfe229ee1ea09d96562a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmVkYzJkMmM3OWI1YmUyYThiMjljZmUyMjllZTFlYTA5ZDk2NTYyYQ==", "commit": {"author": {"name": "Andre Vieira", "email": "andre.simoesdiasvieira@arm.com", "date": "2018-07-19T14:03:21Z"}, "committer": {"name": "Andre Vieira", "email": "avieira@gcc.gnu.org", "date": "2018-07-19T14:03:21Z"}, "message": "[AArch64][PATCH 2/2] PR target/83009: Relax strict address checking for store\npair lanes\n\ngcc/ChangeLog\n2018-07-19  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n\n\tPR target/83009\n\t* config/aarch64/predicates.md (aarch64_mem_pair_lanes_operand): Make\n\taddress check not strict.\n\ngcc/testsuite/ChangeLog\n2018-07-19  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n\n\tPR target/83009\n\t* gcc/target/aarch64/store_v2vec_lanes.c: Add extra tests.\n\nFrom-SVN: r262881", "tree": {"sha": "192195bc1df15fc738d3dda2563ab364dd79bfb6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/192195bc1df15fc738d3dda2563ab364dd79bfb6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bedc2d2c79b5be2a8b29cfe229ee1ea09d96562a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bedc2d2c79b5be2a8b29cfe229ee1ea09d96562a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bedc2d2c79b5be2a8b29cfe229ee1ea09d96562a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bedc2d2c79b5be2a8b29cfe229ee1ea09d96562a/comments", "author": {"login": "avieira-arm", "id": 68072104, "node_id": "MDQ6VXNlcjY4MDcyMTA0", "avatar_url": "https://avatars.githubusercontent.com/u/68072104?v=4", "gravatar_id": "", "url": "https://api.github.com/users/avieira-arm", "html_url": "https://github.com/avieira-arm", "followers_url": "https://api.github.com/users/avieira-arm/followers", "following_url": "https://api.github.com/users/avieira-arm/following{/other_user}", "gists_url": "https://api.github.com/users/avieira-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/avieira-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/avieira-arm/subscriptions", "organizations_url": "https://api.github.com/users/avieira-arm/orgs", "repos_url": "https://api.github.com/users/avieira-arm/repos", "events_url": "https://api.github.com/users/avieira-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/avieira-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a25831acf41c58705f250b529684a5c2deaa63d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a25831acf41c58705f250b529684a5c2deaa63d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a25831acf41c58705f250b529684a5c2deaa63d6"}], "stats": {"total": 41, "additions": 37, "deletions": 4}, "files": [{"sha": "2f8d59cf6df81e7eb558f4274c3b0eac5430917d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bedc2d2c79b5be2a8b29cfe229ee1ea09d96562a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bedc2d2c79b5be2a8b29cfe229ee1ea09d96562a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bedc2d2c79b5be2a8b29cfe229ee1ea09d96562a", "patch": "@@ -1,3 +1,9 @@\n+2018-07-19  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n+\n+\tPR target/83009\n+\t* config/aarch64/predicates.md (aarch64_mem_pair_lanes_operand): Make\n+\taddress check not strict.\n+\n 2018-07-19  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n \n \t* config/aarch64/aarch64-simd.md (aarch64_simd_mov<VQ:mode>): Replace"}, {"sha": "d8f377b9603e76a29dd92f95e9905121eaf7b800", "filename": "gcc/config/aarch64/predicates.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bedc2d2c79b5be2a8b29cfe229ee1ea09d96562a/gcc%2Fconfig%2Faarch64%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bedc2d2c79b5be2a8b29cfe229ee1ea09d96562a/gcc%2Fconfig%2Faarch64%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Fpredicates.md?ref=bedc2d2c79b5be2a8b29cfe229ee1ea09d96562a", "patch": "@@ -227,7 +227,7 @@\n (define_predicate \"aarch64_mem_pair_lanes_operand\"\n   (and (match_code \"mem\")\n        (match_test \"aarch64_legitimate_address_p (GET_MODE (op), XEXP (op, 0),\n-\t\t\t\t\t\t  true,\n+\t\t\t\t\t\t  false,\n \t\t\t\t\t\t  ADDR_QUERY_LDP_STP_N)\")))\n \n (define_predicate \"aarch64_prefetch_operand\""}, {"sha": "50a8cdf79723e1f1f47eaf7e402abcb3aafde333", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bedc2d2c79b5be2a8b29cfe229ee1ea09d96562a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bedc2d2c79b5be2a8b29cfe229ee1ea09d96562a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bedc2d2c79b5be2a8b29cfe229ee1ea09d96562a", "patch": "@@ -1,3 +1,8 @@\n+2018-07-19  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n+\n+\tPR target/83009\n+\t* gcc/target/aarch64/store_v2vec_lanes.c: Add extra tests.\n+\n 2018-07-19  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR target/86560"}, {"sha": "3296d04da14149d26d19da785663b87bd5ad8994", "filename": "gcc/testsuite/gcc.target/aarch64/store_v2vec_lanes.c", "status": "modified", "additions": 25, "deletions": 3, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bedc2d2c79b5be2a8b29cfe229ee1ea09d96562a/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fstore_v2vec_lanes.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bedc2d2c79b5be2a8b29cfe229ee1ea09d96562a/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fstore_v2vec_lanes.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fstore_v2vec_lanes.c?ref=bedc2d2c79b5be2a8b29cfe229ee1ea09d96562a", "patch": "@@ -22,10 +22,32 @@ construct_lane_2 (long long *y, v2di *z)\n   z[2] = x;\n }\n \n+void\n+construct_lane_3 (double **py, v2df **pz)\n+{\n+  double *y = *py;\n+  v2df *z = *pz;\n+  double y0 = y[0] + 1;\n+  double y1 = y[1] + 2;\n+  v2df x = {y0, y1};\n+  z[2] = x;\n+}\n+\n+void\n+construct_lane_4 (long long **py, v2di **pz)\n+{\n+  long long *y = *py;\n+  v2di *z = *pz;\n+  long long y0 = y[0] + 1;\n+  long long y1 = y[1] + 2;\n+  v2di x = {y0, y1};\n+  z[2] = x;\n+}\n+\n /* We can use the load_pair_lanes<mode> pattern to vec_concat two DI/DF\n    values from consecutive memory into a 2-element vector by using\n    a Q-reg LDR.  */\n \n-/* { dg-final { scan-assembler-times \"stp\\td\\[0-9\\]+, d\\[0-9\\]+\" 1 { xfail ilp32 } } } */\n-/* { dg-final { scan-assembler-times \"stp\\tx\\[0-9\\]+, x\\[0-9\\]+\" 1 { xfail ilp32 } } } */\n-/* { dg-final { scan-assembler-not \"ins\\t\" { xfail ilp32 } } } */\n+/* { dg-final { scan-assembler-times \"stp\\td\\[0-9\\]+, d\\[0-9\\]+\" 2 } } */\n+/* { dg-final { scan-assembler-times \"stp\\tx\\[0-9\\]+, x\\[0-9\\]+\" 2 } } */\n+/* { dg-final { scan-assembler-not \"ins\\t\" } } */"}]}