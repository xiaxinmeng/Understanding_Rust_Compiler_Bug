{"sha": "f9555f402caf35c8b1065daaebc361b753f025a2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Zjk1NTVmNDAyY2FmMzVjOGIxMDY1ZGFhZWJjMzYxYjc1M2YwMjVhMg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2008-07-31T08:02:49Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2008-07-31T08:02:49Z"}, "message": "re PR c/36970 (GCC should display a warning when trying to free a static array)\n\n\tPR c/36970\n\t* builtins.c (maybe_emit_free_warning): New function.\n\t(expand_builtin): Process BUILT_IN_FREE even at -O0.  Call\n\tmaybe_emit_free_warning for BUILT_IN_FREE.\n\n\t* gcc.dg/free-1.c: New test.\n\t* gcc.dg/free-2.c: New test.\n\nFrom-SVN: r138362", "tree": {"sha": "f01ea79c042dfd15dfdd549c69c554a94dd8b22a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f01ea79c042dfd15dfdd549c69c554a94dd8b22a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f9555f402caf35c8b1065daaebc361b753f025a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9555f402caf35c8b1065daaebc361b753f025a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f9555f402caf35c8b1065daaebc361b753f025a2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9555f402caf35c8b1065daaebc361b753f025a2/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1e1d38871b1b64c4480e08179ebce9efc2161a01", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e1d38871b1b64c4480e08179ebce9efc2161a01", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e1d38871b1b64c4480e08179ebce9efc2161a01"}], "stats": {"total": 90, "additions": 89, "deletions": 1}, "files": [{"sha": "7da323b6caedfa26ca963e8daf7b92bd211f7571", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9555f402caf35c8b1065daaebc361b753f025a2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9555f402caf35c8b1065daaebc361b753f025a2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f9555f402caf35c8b1065daaebc361b753f025a2", "patch": "@@ -1,5 +1,10 @@\n 2008-07-31  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR c/36970\n+\t* builtins.c (maybe_emit_free_warning): New function.\n+\t(expand_builtin): Process BUILT_IN_FREE even at -O0.  Call\n+\tmaybe_emit_free_warning for BUILT_IN_FREE.\n+\n \tPR debug/36278\n \t* dwarf2out.c (get_context_die): New function.\n \t(force_decl_die, force_type_die): Use it."}, {"sha": "2dffd53e604b18f00645ca7e20dad95eae5dde8b", "filename": "gcc/builtins.c", "status": "modified", "additions": 28, "deletions": 1, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9555f402caf35c8b1065daaebc361b753f025a2/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9555f402caf35c8b1065daaebc361b753f025a2/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=f9555f402caf35c8b1065daaebc361b753f025a2", "patch": "@@ -207,6 +207,7 @@ static rtx expand_builtin_memory_chk (tree, rtx, enum machine_mode,\n \t\t\t\t      enum built_in_function);\n static void maybe_emit_chk_warning (tree, enum built_in_function);\n static void maybe_emit_sprintf_chk_warning (tree, enum built_in_function);\n+static void maybe_emit_free_warning (tree);\n static tree fold_builtin_object_size (tree, tree);\n static tree fold_builtin_strcat_chk (tree, tree, tree, tree);\n static tree fold_builtin_strncat_chk (tree, tree, tree, tree, tree);\n@@ -6130,7 +6131,8 @@ expand_builtin (tree exp, rtx target, rtx subtarget, enum machine_mode mode,\n   if (!optimize\n       && !called_as_built_in (fndecl)\n       && DECL_ASSEMBLER_NAME_SET_P (fndecl)\n-      && fcode != BUILT_IN_ALLOCA)\n+      && fcode != BUILT_IN_ALLOCA\n+      && fcode != BUILT_IN_FREE)\n     return expand_call (exp, target, ignore);\n \n   /* The built-in function expanders test for target == const0_rtx\n@@ -7007,6 +7009,10 @@ expand_builtin (tree exp, rtx target, rtx subtarget, enum machine_mode mode,\n       maybe_emit_sprintf_chk_warning (exp, fcode);\n       break;\n \n+    case BUILT_IN_FREE:\n+      maybe_emit_free_warning (exp);\n+      break;\n+\n     default:\t/* just do library call, if unknown builtin */\n       break;\n     }\n@@ -11981,6 +11987,27 @@ maybe_emit_sprintf_chk_warning (tree exp, enum built_in_function fcode)\n     }\n }\n \n+/* Emit warning if a free is called with address of a variable.  */\n+\n+static void\n+maybe_emit_free_warning (tree exp)\n+{\n+  tree arg = CALL_EXPR_ARG (exp, 0);\n+\n+  STRIP_NOPS (arg);\n+  if (TREE_CODE (arg) != ADDR_EXPR)\n+    return;\n+\n+  arg = get_base_address (TREE_OPERAND (arg, 0));\n+  if (arg == NULL || INDIRECT_REF_P (arg))\n+    return;\n+\n+  if (SSA_VAR_P (arg))\n+    warning (0, \"%Kattempt to free a non-heap object %qD\", exp, arg);\n+  else\n+    warning (0, \"%Kattempt to free a non-heap object\", exp);\n+}\n+\n /* Fold a call to __builtin_object_size with arguments PTR and OST,\n    if possible.  */\n "}, {"sha": "c4257ea1566f12f5f40c1a070d47a7f13a8aea66", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9555f402caf35c8b1065daaebc361b753f025a2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9555f402caf35c8b1065daaebc361b753f025a2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f9555f402caf35c8b1065daaebc361b753f025a2", "patch": "@@ -1,5 +1,9 @@\n 2008-07-31  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR c/36970\n+\t* gcc.dg/free-1.c: New test.\n+\t* gcc.dg/free-2.c: New test.\n+\n \tPR debug/36278\n \t* g++.dg/debug/namespace2.C: New test.\n "}, {"sha": "5496c84fdb82e38cfc3bee12d9fcdcc6e428bec3", "filename": "gcc/testsuite/gcc.dg/free-1.c", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9555f402caf35c8b1065daaebc361b753f025a2/gcc%2Ftestsuite%2Fgcc.dg%2Ffree-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9555f402caf35c8b1065daaebc361b753f025a2/gcc%2Ftestsuite%2Fgcc.dg%2Ffree-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ffree-1.c?ref=f9555f402caf35c8b1065daaebc361b753f025a2", "patch": "@@ -0,0 +1,26 @@\n+/* PR c/36970 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+extern void free (void *);\n+\n+char *p, buf3[10], d;\n+struct S { char a; int b; } *r;\n+\n+void foo (void)\n+{\n+  char buf[10], buf2[10], c;\n+  static char buf4[10], e;\n+  char *q = buf;\n+  free (p);\n+  free (q);\t      /* { dg-warning \"attempt to free a non-heap object\" } */\n+  free (buf2);\t      /* { dg-warning \"attempt to free a non-heap object\" } */\n+  free (&c);\t      /* { dg-warning \"attempt to free a non-heap object\" } */\n+  free (buf3);\t      /* { dg-warning \"attempt to free a non-heap object\" } */\n+  free (&d);\t      /* { dg-warning \"attempt to free a non-heap object\" } */\n+  free (buf4);\t      /* { dg-warning \"attempt to free a non-heap object\" } */\n+  free (&e);\t      /* { dg-warning \"attempt to free a non-heap object\" } */\n+  free (&r->a);\n+  free (\"abcd\");      /* { dg-warning \"attempt to free a non-heap object\" } */\n+  free (L\"abcd\");     /* { dg-warning \"attempt to free a non-heap object\" } */\n+}"}, {"sha": "eb94651311bceb1375c3bd9814c38deebbc61965", "filename": "gcc/testsuite/gcc.dg/free-2.c", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9555f402caf35c8b1065daaebc361b753f025a2/gcc%2Ftestsuite%2Fgcc.dg%2Ffree-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9555f402caf35c8b1065daaebc361b753f025a2/gcc%2Ftestsuite%2Fgcc.dg%2Ffree-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ffree-2.c?ref=f9555f402caf35c8b1065daaebc361b753f025a2", "patch": "@@ -0,0 +1,26 @@\n+/* PR c/36970 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O0\" } */\n+\n+extern void free (void *);\n+\n+char *p, buf3[10], d;\n+struct S { char a; int b; } *r;\n+\n+void foo (void)\n+{\n+  char buf[10], buf2[10], c;\n+  static char buf4[10], e;\n+  char *q = buf;\n+  free (p);\n+  free (q);\t      /* At -O0 no warning is reported here.  */\n+  free (buf2);\t      /* { dg-warning \"attempt to free a non-heap object\" } */\n+  free (&c);\t      /* { dg-warning \"attempt to free a non-heap object\" } */\n+  free (buf3);\t      /* { dg-warning \"attempt to free a non-heap object\" } */\n+  free (&d);\t      /* { dg-warning \"attempt to free a non-heap object\" } */\n+  free (buf4);\t      /* { dg-warning \"attempt to free a non-heap object\" } */\n+  free (&e);\t      /* { dg-warning \"attempt to free a non-heap object\" } */\n+  free (&r->a);\n+  free (\"abcd\");      /* { dg-warning \"attempt to free a non-heap object\" } */\n+  free (L\"abcd\");     /* { dg-warning \"attempt to free a non-heap object\" } */\n+}"}]}