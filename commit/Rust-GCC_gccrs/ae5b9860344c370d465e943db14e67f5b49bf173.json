{"sha": "ae5b9860344c370d465e943db14e67f5b49bf173", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWU1Yjk4NjAzNDRjMzcwZDQ2NWU5NDNkYjE0ZTY3ZjViNDliZjE3Mw==", "commit": {"author": {"name": "Sebastian Pop", "email": "sebastian.pop@amd.com", "date": "2009-07-31T02:35:02Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2009-07-31T02:35:02Z"}, "message": "Remove unused function and field in data_reference.\n\n2009-07-30  Sebastian Pop  <sebastian.pop@amd.com>\n\n\t* tree-data-ref.c (stmt_simple_memref_p: Removed.\n\t* tree-data-ref.h (scop_p): Removed.\n\t(struct data_reference): Remove field scop.\n\t(DR_SCOP): Removed.\n\t(stmt_simple_memref_p): Removed.\n\nFrom-SVN: r150295", "tree": {"sha": "d0992b56502b7b00d5cc28803461c0c8ce8f98ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d0992b56502b7b00d5cc28803461c0c8ce8f98ba"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ae5b9860344c370d465e943db14e67f5b49bf173", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae5b9860344c370d465e943db14e67f5b49bf173", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae5b9860344c370d465e943db14e67f5b49bf173", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae5b9860344c370d465e943db14e67f5b49bf173/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "da24f9d99abb4e75e0b5bd20c670e262ac540683", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da24f9d99abb4e75e0b5bd20c670e262ac540683", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da24f9d99abb4e75e0b5bd20c670e262ac540683"}], "stats": {"total": 31, "additions": 8, "deletions": 23}, "files": [{"sha": "b361ec11196ce199eee3dc5f7e49b634ad8f0c6f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae5b9860344c370d465e943db14e67f5b49bf173/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae5b9860344c370d465e943db14e67f5b49bf173/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ae5b9860344c370d465e943db14e67f5b49bf173", "patch": "@@ -1,3 +1,11 @@\n+2009-07-30  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\t* tree-data-ref.c (stmt_simple_memref_p: Removed.\n+\t* tree-data-ref.h (scop_p): Removed.\n+\t(struct data_reference): Remove field scop.\n+\t(DR_SCOP): Removed.\n+\t(stmt_simple_memref_p): Removed.\n+\n 2009-07-30  Sebastian Pop  <sebastian.pop@amd.com>\n \n \t* cfgloop.h (create_empty_loop_on_edge): Pass an extra argument."}, {"sha": "9e811daec43ccc45b483668b3c76b1f0ce30b811", "filename": "gcc/tree-data-ref.c", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae5b9860344c370d465e943db14e67f5b49bf173/gcc%2Ftree-data-ref.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae5b9860344c370d465e943db14e67f5b49bf173/gcc%2Ftree-data-ref.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-data-ref.c?ref=ae5b9860344c370d465e943db14e67f5b49bf173", "patch": "@@ -3334,22 +3334,6 @@ access_functions_are_affine_or_constant_p (const struct data_reference *a,\n   return true;\n }\n \n-/* Return true if we can create an affine data-ref for OP in STMT.  */\n-\n-bool\n-stmt_simple_memref_p (struct loop *loop, gimple stmt, tree op)\n-{\n-  data_reference_p dr;\n-  bool res = true;\n-\n-  dr = create_data_ref (loop, op, stmt, true);\n-  if (!access_functions_are_affine_or_constant_p (dr, loop))\n-    res = false;\n-\n-  free_data_ref (dr);\n-  return res;\n-}\n-\n /* Initializes an equation for an OMEGA problem using the information\n    contained in the ACCESS_FUN.  Returns true when the operation\n    succeeded."}, {"sha": "eea73dd3900dcb75f9a61886e7be48773cd66ebd", "filename": "gcc/tree-data-ref.h", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae5b9860344c370d465e943db14e67f5b49bf173/gcc%2Ftree-data-ref.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae5b9860344c370d465e943db14e67f5b49bf173/gcc%2Ftree-data-ref.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-data-ref.h?ref=ae5b9860344c370d465e943db14e67f5b49bf173", "patch": "@@ -96,8 +96,6 @@ struct dr_alias\n   bitmap vops;\n };\n \n-typedef struct scop *scop_p;\n-\n /* Each vector of the access matrix represents a linear access\n    function for a subscript.  First elements correspond to the\n    leftmost indices, ie. for a[i][j] the first vector corresponds to\n@@ -184,14 +182,10 @@ struct data_reference\n   /* Alias information for the data reference.  */\n   struct dr_alias alias;\n \n-  /* The SCoP in which the data reference was analyzed.  */\n-  scop_p scop;\n-\n   /* Matrix representation for the data access functions.  */\n   struct access_matrix *access_matrix;\n };\n \n-#define DR_SCOP(DR)                (DR)->scop\n #define DR_STMT(DR)                (DR)->stmt\n #define DR_REF(DR)                 (DR)->ref\n #define DR_BASE_OBJECT(DR)         (DR)->indices.base_object\n@@ -418,7 +412,6 @@ extern void compute_all_dependences (VEC (data_reference_p, heap) *,\n extern void create_rdg_vertices (struct graph *, VEC (gimple, heap) *);\n extern bool dr_may_alias_p (const struct data_reference *,\n \t\t\t    const struct data_reference *);\n-extern bool stmt_simple_memref_p (struct loop *, gimple, tree);\n \n /* Return true when the DDR contains two data references that have the\n    same access functions.  */"}]}