{"sha": "a199da782fc165fd45f42a15cc9020994efd455d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTE5OWRhNzgyZmMxNjVmZDQ1ZjQyYTE1Y2M5MDIwOTk0ZWZkNDU1ZA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-01-27T13:21:52Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-01-27T13:45:52Z"}, "message": "libstdc++: Optimize std::string_view::find [PR 66414]\n\nThis reuses the code from std::string::find, which was improved by\nr244225, but string_view was not changed to match.\n\nlibstdc++-v3/ChangeLog:\n\n\tPR libstdc++/66414\n\t* include/bits/string_view.tcc\n\t(basic_string_view::find(const CharT*, size_type, size_type)):\n\tOptimize.", "tree": {"sha": "da53032078216ce8fad7bfa72213bc8fd4ee7e30", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/da53032078216ce8fad7bfa72213bc8fd4ee7e30"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a199da782fc165fd45f42a15cc9020994efd455d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a199da782fc165fd45f42a15cc9020994efd455d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a199da782fc165fd45f42a15cc9020994efd455d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a199da782fc165fd45f42a15cc9020994efd455d/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9d66505a5df3c96441dc4f19efd6e1158c5a4640", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d66505a5df3c96441dc4f19efd6e1158c5a4640", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9d66505a5df3c96441dc4f19efd6e1158c5a4640"}], "stats": {"total": 26, "additions": 19, "deletions": 7}, "files": [{"sha": "efb0edee26aaccfd8a723e654270d58cbaee8445", "filename": "libstdc++-v3/include/bits/string_view.tcc", "status": "modified", "additions": 19, "deletions": 7, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a199da782fc165fd45f42a15cc9020994efd455d/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstring_view.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a199da782fc165fd45f42a15cc9020994efd455d/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstring_view.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstring_view.tcc?ref=a199da782fc165fd45f42a15cc9020994efd455d", "patch": "@@ -50,15 +50,27 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       __glibcxx_requires_string_len(__str, __n);\n \n       if (__n == 0)\n-\treturn __pos <= this->_M_len ? __pos : npos;\n+\treturn __pos <= _M_len ? __pos : npos;\n+      if (__pos >= _M_len)\n+\treturn npos;\n \n-      if (__n <= this->_M_len)\n+      const _CharT __elem0 = __str[0];\n+      const _CharT* __first = _M_str + __pos;\n+      const _CharT* const __last = _M_str + _M_len;\n+      size_type __len = _M_len - __pos;\n+\n+      while (__len >= __n)\n \t{\n-\t  for (; __pos <= this->_M_len - __n; ++__pos)\n-\t    if (traits_type::eq(this->_M_str[__pos], __str[0])\n-\t\t&& traits_type::compare(this->_M_str + __pos + 1,\n-\t\t\t\t\t__str + 1, __n - 1) == 0)\n-\t      return __pos;\n+\t  // Find the first occurrence of __elem0:\n+\t  __first = traits_type::find(__first, __len - __n + 1, __elem0);\n+\t  if (!__first)\n+\t    return npos;\n+\t  // Compare the full strings from the first occurrence of __elem0.\n+\t  // We already know that __first[0] == __s[0] but compare them again\n+\t  // anyway because __s is probably aligned, which helps memcmp.\n+\t  if (traits_type::compare(__first, __str, __n) == 0)\n+\t    return __first - _M_str;\n+\t  __len = __last - ++__first;\n \t}\n       return npos;\n     }"}]}