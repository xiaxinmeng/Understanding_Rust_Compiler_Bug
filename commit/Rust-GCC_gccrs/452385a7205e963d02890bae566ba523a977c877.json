{"sha": "452385a7205e963d02890bae566ba523a977c877", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDUyMzg1YTcyMDVlOTYzZDAyODkwYmFlNTY2YmE1MjNhOTc3Yzg3Nw==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2016-11-29T05:44:32Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2016-11-29T05:44:32Z"}, "message": "combine: Tweak change_zero_ext\n\nchange_zero_ext handles (zero_extend:M1 (subreg:M2 (reg:M1) ...))\nalready; this patch extends it to also deal with any\n(zero_extend:M1 (subreg:M2 (reg:M3) ...)) where the subreg is not\nparadoxical.\n\n\n\t* combine.c (change_zero_ext): Also handle extends from a subreg\n\tto a mode bigger than that of the operand of the subreg.\n\nFrom-SVN: r242950", "tree": {"sha": "7b3a30880172d82e63478ec3f74e42ce6e209167", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7b3a30880172d82e63478ec3f74e42ce6e209167"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/452385a7205e963d02890bae566ba523a977c877", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/452385a7205e963d02890bae566ba523a977c877", "html_url": "https://github.com/Rust-GCC/gccrs/commit/452385a7205e963d02890bae566ba523a977c877", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/452385a7205e963d02890bae566ba523a977c877/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "dfed7971fb42cbd5196ee92e27e8292f46fa72e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dfed7971fb42cbd5196ee92e27e8292f46fa72e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dfed7971fb42cbd5196ee92e27e8292f46fa72e9"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "5ef1fcc04241a14f584f8b19dd6acd2070217917", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/452385a7205e963d02890bae566ba523a977c877/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/452385a7205e963d02890bae566ba523a977c877/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=452385a7205e963d02890bae566ba523a977c877", "patch": "@@ -1,3 +1,8 @@\n+2016-11-29  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* combine.c (change_zero_ext): Also handle extends from a subreg\n+\tto a mode bigger than that of the operand of the subreg.\n+\n 2016-11-29  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \tPR target/77687"}, {"sha": "22fb7a976538f8415b0faebc744387616da5850a", "filename": "gcc/combine.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/452385a7205e963d02890bae566ba523a977c877/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/452385a7205e963d02890bae566ba523a977c877/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=452385a7205e963d02890bae566ba523a977c877", "patch": "@@ -11251,11 +11251,13 @@ change_zero_ext (rtx pat)\n       else if (GET_CODE (x) == ZERO_EXTEND\n \t       && SCALAR_INT_MODE_P (mode)\n \t       && GET_CODE (XEXP (x, 0)) == SUBREG\n-\t       && GET_MODE (SUBREG_REG (XEXP (x, 0))) == mode\n+\t       && !paradoxical_subreg_p (XEXP (x, 0))\n \t       && subreg_lowpart_p (XEXP (x, 0)))\n \t{\n \t  size = GET_MODE_PRECISION (GET_MODE (XEXP (x, 0)));\n \t  x = SUBREG_REG (XEXP (x, 0));\n+\t  if (GET_MODE (x) != mode)\n+\t    x = gen_lowpart_SUBREG (mode, x);\n \t}\n       else if (GET_CODE (x) == ZERO_EXTEND\n \t       && SCALAR_INT_MODE_P (mode)"}]}