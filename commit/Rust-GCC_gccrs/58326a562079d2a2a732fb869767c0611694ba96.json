{"sha": "58326a562079d2a2a732fb869767c0611694ba96", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTgzMjZhNTYyMDc5ZDJhMmE3MzJmYjg2OTc2N2MwNjExNjk0YmE5Ng==", "commit": {"author": {"name": "Dodji Seketeli", "email": "dodji@redhat.com", "date": "2009-12-23T00:31:33Z"}, "committer": {"name": "Dodji Seketeli", "email": "dodji@gcc.gnu.org", "date": "2009-12-23T00:31:33Z"}, "message": "re PR c++/42260 (ICE looking up template conversion operator)\n\nFix PR c++/42260\n\ngcc/cp/ChangeLog:\n\tPR c++/42260\n\t* cp-tree.h (lookup_conversions): Add new bool parameter to\n\tdeclaration.\n\t* search.c (lookup_conversion): Use new bool parameter in\n\tdefinition.\n\t* call.c (add_builtin_candidates): Don't lookup template conversion\n\t(convert_class_to_reference, build_user_type_conversion_1,\n\t build_op_call): Adjust.\n\t* cvt.c (build_expr_type_conversion): Likewise\n\ngcc/testsuite/ChangeLog:\n\tPR c++/42260\n\t* conversion/cast2.C: New test.\n\nFrom-SVN: r155415", "tree": {"sha": "bf27e39059a5d3b482c3c5aaacaccd3688912360", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bf27e39059a5d3b482c3c5aaacaccd3688912360"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/58326a562079d2a2a732fb869767c0611694ba96", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58326a562079d2a2a732fb869767c0611694ba96", "html_url": "https://github.com/Rust-GCC/gccrs/commit/58326a562079d2a2a732fb869767c0611694ba96", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58326a562079d2a2a732fb869767c0611694ba96/comments", "author": null, "committer": null, "parents": [{"sha": "79e2daa9a1608d88555a246d588960b68a55cb88", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79e2daa9a1608d88555a246d588960b68a55cb88", "html_url": "https://github.com/Rust-GCC/gccrs/commit/79e2daa9a1608d88555a246d588960b68a55cb88"}], "stats": {"total": 54, "additions": 46, "deletions": 8}, "files": [{"sha": "ecd0c7a88e020c9801ed72608ce487556425041a", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58326a562079d2a2a732fb869767c0611694ba96/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58326a562079d2a2a732fb869767c0611694ba96/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=58326a562079d2a2a732fb869767c0611694ba96", "patch": "@@ -1,3 +1,15 @@\n+2009-12-23  Dodji Seketeli  <dodji@redhat.com>\n+\n+\tPR c++/42260\n+\t* cp-tree.h (lookup_conversions): Add new bool parameter to\n+\tdeclaration.\n+\t* search.c (lookup_conversion): Use new bool parameter in\n+\tdefinition.\n+\t* call.c (add_builtin_candidates): Don't lookup template conversion\n+\t(convert_class_to_reference, build_user_type_conversion_1,\n+\t build_op_call): Adjust.\n+\t* cvt.c (build_expr_type_conversion): Likewise\n+\n 2009-12-22  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/42466"}, {"sha": "3fcbccf68a3cdf5fee6830bdd921f7f8886fdd13", "filename": "gcc/cp/call.c", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58326a562079d2a2a732fb869767c0611694ba96/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58326a562079d2a2a732fb869767c0611694ba96/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=58326a562079d2a2a732fb869767c0611694ba96", "patch": "@@ -1009,7 +1009,7 @@ convert_class_to_reference (tree reference_type, tree s, tree expr, int flags)\n   struct z_candidate *cand;\n   bool any_viable_p;\n \n-  conversions = lookup_conversions (s);\n+  conversions = lookup_conversions (s, /*lookup_template_convs_p=*/true);\n   if (!conversions)\n     return NULL;\n \n@@ -2362,7 +2362,8 @@ add_builtin_candidates (struct z_candidate **candidates, enum tree_code code,\n \t  if (i == 0 && code == MODIFY_EXPR && code2 == NOP_EXPR)\n \t    return;\n \n-\t  convs = lookup_conversions (argtypes[i]);\n+\t  convs = lookup_conversions (argtypes[i],\n+\t\t\t\t      /*lookup_template_convs_p=*/false);\n \n \t  if (code == COND_EXPR)\n \t    {\n@@ -2851,7 +2852,8 @@ build_user_type_conversion_1 (tree totype, tree expr, int flags)\n \t     reference to it)...  */\n \t}\n       else\n-\tconv_fns = lookup_conversions (fromtype);\n+\tconv_fns = lookup_conversions (fromtype,\n+\t\t\t\t       /*lookup_template_convs_p=*/true);\n     }\n \n   candidates = 0;\n@@ -3399,7 +3401,7 @@ build_op_call (tree obj, VEC(tree,gc) **args, tsubst_flags_t complain)\n   if (LAMBDA_TYPE_P (type))\n     convs = NULL_TREE;\n   else\n-    convs = lookup_conversions (type);\n+    convs = lookup_conversions (type, /*lookup_template_convs_p=*/true);\n \n   for (; convs; convs = TREE_CHAIN (convs))\n     {"}, {"sha": "531ede1c29234d353114a2e02f843b01ab6c8ffd", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58326a562079d2a2a732fb869767c0611694ba96/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58326a562079d2a2a732fb869767c0611694ba96/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=58326a562079d2a2a732fb869767c0611694ba96", "patch": "@@ -4989,7 +4989,7 @@ extern int at_function_scope_p\t\t\t(void);\n extern bool at_class_scope_p\t\t\t(void);\n extern bool at_namespace_scope_p\t\t(void);\n extern tree context_for_name_lookup\t\t(tree);\n-extern tree lookup_conversions\t\t\t(tree);\n+extern tree lookup_conversions\t\t\t(tree, bool);\n extern tree binfo_from_vbase\t\t\t(tree);\n extern tree binfo_for_vbase\t\t\t(tree, tree);\n extern tree look_for_overrides_here\t\t(tree, tree);"}, {"sha": "b4cc2b3ed8ceb1bde1f6ca7747a1a0211b2db90d", "filename": "gcc/cp/cvt.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58326a562079d2a2a732fb869767c0611694ba96/gcc%2Fcp%2Fcvt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58326a562079d2a2a732fb869767c0611694ba96/gcc%2Fcp%2Fcvt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcvt.c?ref=58326a562079d2a2a732fb869767c0611694ba96", "patch": "@@ -1196,7 +1196,9 @@ build_expr_type_conversion (int desires, tree expr, bool complain)\n   if (!TYPE_HAS_CONVERSION (basetype))\n     return NULL_TREE;\n \n-  for (conv = lookup_conversions (basetype); conv; conv = TREE_CHAIN (conv))\n+  for (conv = lookup_conversions (basetype, /*lookup_template_convs_p=*/true);\n+       conv;\n+       conv = TREE_CHAIN (conv))\n     {\n       int win = 0;\n       tree candidate;"}, {"sha": "c07a5e66d8ebdeb2092483a941d90a38886f1ec4", "filename": "gcc/cp/search.c", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58326a562079d2a2a732fb869767c0611694ba96/gcc%2Fcp%2Fsearch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58326a562079d2a2a732fb869767c0611694ba96/gcc%2Fcp%2Fsearch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsearch.c?ref=58326a562079d2a2a732fb869767c0611694ba96", "patch": "@@ -2419,10 +2419,13 @@ lookup_conversions_r (tree binfo,\n    functions in this node were selected.  This function is effectively\n    performing a set of member lookups as lookup_fnfield does, but\n    using the type being converted to as the unique key, rather than the\n-   field name.  */\n+   field name.\n+   If LOOKUP_TEMPLATE_CONVS_P is TRUE, the returned TREE_LIST contains\n+   the non-hidden user-defined template conversion functions too.  */\n \n tree\n-lookup_conversions (tree type)\n+lookup_conversions (tree type,\n+\t\t    bool lookup_template_convs_p)\n {\n   tree convs, tpl_convs;\n   tree list = NULL_TREE;\n@@ -2449,6 +2452,9 @@ lookup_conversions (tree type)\n \t}\n     }\n \n+  if (lookup_template_convs_p == false)\n+    tpl_convs = NULL_TREE;\n+\n   for (; tpl_convs; tpl_convs = TREE_CHAIN (tpl_convs))\n     {\n       tree probe, next;"}, {"sha": "674028737b2be78c0371d6ff145c0e7c6d36d012", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58326a562079d2a2a732fb869767c0611694ba96/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58326a562079d2a2a732fb869767c0611694ba96/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=58326a562079d2a2a732fb869767c0611694ba96", "patch": "@@ -1,3 +1,8 @@\n+2009-12-23  Dodji Seketeli  <dodji@redhat.com>\n+\n+\tPR c++/42260\n+\t* conversion/cast2.C: New test.\n+\n 2009-12-22  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/42466"}, {"sha": "3868d748c0eae624100208387b5a7c9bb282c626", "filename": "gcc/testsuite/g++.dg/conversion/cast2.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58326a562079d2a2a732fb869767c0611694ba96/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fcast2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58326a562079d2a2a732fb869767c0611694ba96/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fcast2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fcast2.C?ref=58326a562079d2a2a732fb869767c0611694ba96", "patch": "@@ -0,0 +1,11 @@\n+// Contributed by Dodji Seketeli <dodji@redhat.com>\n+// Origin: PR c++/42260\n+// { dg-do compile }\n+\n+struct A\n+{\n+      template<typename T> operator T*();\n+};\n+\n+int i = *A();// { dg-error \"no match\" }\n+"}]}