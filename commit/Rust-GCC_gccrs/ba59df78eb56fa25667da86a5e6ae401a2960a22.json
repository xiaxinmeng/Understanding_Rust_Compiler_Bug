{"sha": "ba59df78eb56fa25667da86a5e6ae401a2960a22", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmE1OWRmNzhlYjU2ZmEyNTY2N2RhODZhNWU2YWU0MDFhMjk2MGEyMg==", "commit": {"author": {"name": "Kriang Lerdsuwanakij", "email": "lerdsuwa@users.sourceforge.net", "date": "2002-07-17T13:56:46Z"}, "committer": {"name": "Kriang Lerdsuwanakij", "email": "lerdsuwa@gcc.gnu.org", "date": "2002-07-17T13:56:46Z"}, "message": "PR c++/4802, c++/5387\n\n\tPR c++/4802, c++/5387\n\t* decl.c (make_typename_type): Use enforce_access.\n\n\t* g++.dg/template/access2.C: New test.\n\t* g++.dg/template/access3.C: New test.\n\nFrom-SVN: r55517", "tree": {"sha": "079b81168d676a251b18616322bbb387b3e67174", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/079b81168d676a251b18616322bbb387b3e67174"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ba59df78eb56fa25667da86a5e6ae401a2960a22", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba59df78eb56fa25667da86a5e6ae401a2960a22", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba59df78eb56fa25667da86a5e6ae401a2960a22", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba59df78eb56fa25667da86a5e6ae401a2960a22/comments", "author": null, "committer": null, "parents": [{"sha": "58f05188d76af5ea12862da949f0310eb6463576", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58f05188d76af5ea12862da949f0310eb6463576", "html_url": "https://github.com/Rust-GCC/gccrs/commit/58f05188d76af5ea12862da949f0310eb6463576"}], "stats": {"total": 53, "additions": 53, "deletions": 0}, "files": [{"sha": "bfa365bcba041c5255f8a2162c34966374292cf4", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba59df78eb56fa25667da86a5e6ae401a2960a22/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba59df78eb56fa25667da86a5e6ae401a2960a22/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=ba59df78eb56fa25667da86a5e6ae401a2960a22", "patch": "@@ -1,3 +1,8 @@\n+2002-07-17  Kriang Lerdsuwanakij  <lerdsuwa@users.sourceforge.net>\n+\n+\tPR c++/4802, c++/5387\n+\t* decl.c (make_typename_type): Use enforce_access.\n+\n 2002-07-17  Scott Snyder <snyder@fnal.gov>\n \n \tPR c++/7320"}, {"sha": "c6d77d3321d24af83a4f405be1e8b9b39c6d6eb8", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba59df78eb56fa25667da86a5e6ae401a2960a22/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba59df78eb56fa25667da86a5e6ae401a2960a22/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=ba59df78eb56fa25667da86a5e6ae401a2960a22", "patch": "@@ -5652,6 +5652,9 @@ make_typename_type (context, name, complain)\n \t      return error_mark_node;\n \t    }\n \n+\t  if (!enforce_access (context, tmpl))\n+\t    return error_mark_node;\n+\n \t  return lookup_template_class (tmpl,\n \t\t\t\t\tTREE_OPERAND (fullname, 1),\n \t\t\t\t\tNULL_TREE, context,\n@@ -5672,6 +5675,9 @@ make_typename_type (context, name, complain)\n \t  t = lookup_field (context, name, 0, 1);\n \t  if (t)\n \t    {\n+\t      if (!enforce_access (context, t))\n+\t\treturn error_mark_node;\n+\n \t      if (DECL_ARTIFICIAL (t) || !(complain & tf_keep_type_decl))\n \t\tt = TREE_TYPE (t);\n \t      if (IMPLICIT_TYPENAME_P (t))"}, {"sha": "a08eab9691dfb790e6fbc4aefd11e7f5bb1fa51b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba59df78eb56fa25667da86a5e6ae401a2960a22/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba59df78eb56fa25667da86a5e6ae401a2960a22/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ba59df78eb56fa25667da86a5e6ae401a2960a22", "patch": "@@ -1,3 +1,8 @@\n+2002-07-17  Kriang Lerdsuwanakij  <lerdsuwa@users.sourceforge.net>\n+\n+\t* g++.dg/template/access2.C: New test.\n+\t* g++.dg/template/access3.C: New test.\n+\n 2002-07-15  Zack Weinberg  <zack@codesourcery.com>\n \n \t* c-torture/execute/991216-3.c, c-torture/execute/strct-varg-1.c,"}, {"sha": "9da8ecf58bf7895f6a660deb6d947ed893a3a901", "filename": "gcc/testsuite/g++.dg/template/access2.C", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba59df78eb56fa25667da86a5e6ae401a2960a22/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Faccess2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba59df78eb56fa25667da86a5e6ae401a2960a22/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Faccess2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Faccess2.C?ref=ba59df78eb56fa25667da86a5e6ae401a2960a22", "patch": "@@ -0,0 +1,20 @@\n+// { dg-do compile }\n+\n+// PR c++/5387\n+// Enforcing access of typename type.\n+\n+template <class T> struct A {\n+  typename T::X x;\t\t\t// { dg-error \"this context\" }\n+  int f() { return T::i; }\t\t// { dg-error \"this context\" }\n+};\n+\n+class B {\n+  typedef int X;\t\t\t// { dg-error \"private\" }\n+  static int i;\t\t\t\t// { dg-error \"private\" }\n+};\n+\n+int main()\n+{\n+  A<B> ab;\t\t\t\t// { dg-error \"instantiated\" }\n+  ab.f();\t\t\t\t// { dg-error \"instantiated\" }\n+}"}, {"sha": "1674f5f57abb0e2ac19af22bb59b85316c653174", "filename": "gcc/testsuite/g++.dg/template/access3.C", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba59df78eb56fa25667da86a5e6ae401a2960a22/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Faccess3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba59df78eb56fa25667da86a5e6ae401a2960a22/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Faccess3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Faccess3.C?ref=ba59df78eb56fa25667da86a5e6ae401a2960a22", "patch": "@@ -0,0 +1,17 @@\n+// { dg-do compile }\n+\n+// PR c++/5387\n+// Enforcing access of typename type.\n+\n+template <class T> struct A {\n+  typename T::X<int> x;\t\t\t// { dg-error \"this context\" }\n+};\n+\n+class B {\n+  template <class T> class X {};\t// { dg-error \"private\" }\n+};\n+\n+int main()\n+{\n+  A<B> ab;\t\t\t\t// { dg-error \"instantiated\" }\n+}"}]}