{"sha": "1788bf118c1c97a2e3cb8c0526ffe617859eb7d4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTc4OGJmMTE4YzFjOTdhMmUzY2I4YzA1MjZmZmU2MTc4NTllYjdkNA==", "commit": {"author": {"name": "Yannick Moy", "email": "moy@adacore.com", "date": "2019-08-13T08:07:24Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-08-13T08:07:24Z"}, "message": "[Ada] Avoid crash in GNATprove due to inlining inside type\n\nThe special inlining for GNATprove should not inline calls inside record\ntypes, used for the constraints of components.\n\nThere is no impact on compilation.\n\n2019-08-13  Yannick Moy  <moy@adacore.com>\n\ngcc/ada/\n\n\t* sem_res.adb (Resolve_Call): Do not inline calls inside record\n\ttypes.\n\nFrom-SVN: r274344", "tree": {"sha": "13d25fa03f84232da9405e112199ac46ec4c6912", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/13d25fa03f84232da9405e112199ac46ec4c6912"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1788bf118c1c97a2e3cb8c0526ffe617859eb7d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1788bf118c1c97a2e3cb8c0526ffe617859eb7d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1788bf118c1c97a2e3cb8c0526ffe617859eb7d4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1788bf118c1c97a2e3cb8c0526ffe617859eb7d4/comments", "author": {"login": "yannickmoy", "id": 859440, "node_id": "MDQ6VXNlcjg1OTQ0MA==", "avatar_url": "https://avatars.githubusercontent.com/u/859440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yannickmoy", "html_url": "https://github.com/yannickmoy", "followers_url": "https://api.github.com/users/yannickmoy/followers", "following_url": "https://api.github.com/users/yannickmoy/following{/other_user}", "gists_url": "https://api.github.com/users/yannickmoy/gists{/gist_id}", "starred_url": "https://api.github.com/users/yannickmoy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yannickmoy/subscriptions", "organizations_url": "https://api.github.com/users/yannickmoy/orgs", "repos_url": "https://api.github.com/users/yannickmoy/repos", "events_url": "https://api.github.com/users/yannickmoy/events{/privacy}", "received_events_url": "https://api.github.com/users/yannickmoy/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "258325dddf752c578f1da15f63577090b1db2de5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/258325dddf752c578f1da15f63577090b1db2de5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/258325dddf752c578f1da15f63577090b1db2de5"}], "stats": {"total": 14, "additions": 14, "deletions": 0}, "files": [{"sha": "55044f6e200f49b4ab2dd2b0b81b2c0222ad0dff", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1788bf118c1c97a2e3cb8c0526ffe617859eb7d4/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1788bf118c1c97a2e3cb8c0526ffe617859eb7d4/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=1788bf118c1c97a2e3cb8c0526ffe617859eb7d4", "patch": "@@ -1,3 +1,8 @@\n+2019-08-13  Yannick Moy  <moy@adacore.com>\n+\n+\t* sem_res.adb (Resolve_Call): Do not inline calls inside record\n+\ttypes.\n+\n 2019-08-13  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* sem_ch4.adb (Analyze_One_Call): Remove bypass for type"}, {"sha": "7a9c85c2154f2674c4caa9c3dd4d3f121c570803", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1788bf118c1c97a2e3cb8c0526ffe617859eb7d4/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1788bf118c1c97a2e3cb8c0526ffe617859eb7d4/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=1788bf118c1c97a2e3cb8c0526ffe617859eb7d4", "patch": "@@ -7062,6 +7062,15 @@ package body Sem_Res is\n                      end if;\n                   end if;\n \n+               --  Cannot inline a call inside the definition of a record type,\n+               --  typically inside the constraints of the type. Calls in\n+               --  default expressions are also not inlined, but this is\n+               --  filtered out above when testing In_Default_Expr.\n+\n+               elsif Is_Record_Type (Current_Scope) then\n+                  Cannot_Inline\n+                    (\"cannot inline & (inside record type)?\", N, Nam_UA);\n+\n                --  With the one-pass inlining technique, a call cannot be\n                --  inlined if the corresponding body has not been seen yet.\n "}]}