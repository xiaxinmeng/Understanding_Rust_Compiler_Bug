{"sha": "496651db26666e15ffa3af1a7b86732a83645ee8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDk2NjUxZGIyNjY2NmUxNWZmYTNhZjFhN2I4NjczMmE4MzY0NWVlOA==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@cygnus.com", "date": "1997-10-07T16:07:46Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1997-10-07T16:07:46Z"}, "message": "Declare get_file_function_name\n\nFrom-SVN: r15855", "tree": {"sha": "e30c19c44f062c07301eba9ac9c698c1be9f4c0c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e30c19c44f062c07301eba9ac9c698c1be9f4c0c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/496651db26666e15ffa3af1a7b86732a83645ee8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/496651db26666e15ffa3af1a7b86732a83645ee8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/496651db26666e15ffa3af1a7b86732a83645ee8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/496651db26666e15ffa3af1a7b86732a83645ee8/comments", "author": null, "committer": null, "parents": [{"sha": "e63474569230bd0f552f3399e6b4640c7f49c57d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e63474569230bd0f552f3399e6b4640c7f49c57d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e63474569230bd0f552f3399e6b4640c7f49c57d"}], "stats": {"total": 64, "additions": 14, "deletions": 50}, "files": [{"sha": "71784365f52050f86bf615eb9e5b7e2431b862ae", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/496651db26666e15ffa3af1a7b86732a83645ee8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/496651db26666e15ffa3af1a7b86732a83645ee8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=496651db26666e15ffa3af1a7b86732a83645ee8", "patch": "@@ -1,3 +1,12 @@\n+Tue Oct  7 11:41:21 1997  Michael Meissner  <meissner@cygnus.com>\n+\n+\t* tree.h (get_file_function_name): Add declaration.\n+\t* dwarf2out.c (output_call_frame_info): No need to cast\n+\tget_file_function_name call anymore.\n+\t* profile.c (toplevel): Remove get_file_function_name\n+\tdeclaration.\n+\t* c-lang.c (finish_file): Ditto.\n+\n Tue Oct  7 10:01:45 1997  Chip Salzenberg <chip@rio.atlantic.net>\n \n \t* Makefile.in (program_transform_name): Let autoconf substitute"}, {"sha": "e79e188e88d0f4786268b22ef9208c6ea34abcf6", "filename": "gcc/c-lang.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/496651db26666e15ffa3af1a7b86732a83645ee8/gcc%2Fc-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/496651db26666e15ffa3af1a7b86732a83645ee8/gcc%2Fc-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-lang.c?ref=496651db26666e15ffa3af1a7b86732a83645ee8", "patch": "@@ -137,7 +137,6 @@ void\n finish_file ()\n {\n   extern tree static_ctors, static_dtors;\n-  extern tree get_file_function_name ();\n   extern tree build_function_call                 PROTO((tree, tree));\n   tree void_list_node = build_tree_list (NULL_TREE, void_type_node);\n #ifndef ASM_OUTPUT_CONSTRUCTOR"}, {"sha": "7667a53a3a5e39641743fc7e6fdc60931090def9", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/496651db26666e15ffa3af1a7b86732a83645ee8/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/496651db26666e15ffa3af1a7b86732a83645ee8/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=496651db26666e15ffa3af1a7b86732a83645ee8", "patch": "@@ -1498,7 +1498,7 @@ output_call_frame_info (for_eh)\n #ifdef EH_FRAME_SECTION\n       EH_FRAME_SECTION ();\n #else\n-      tree label = (tree) get_file_function_name ('F');\n+      tree label = get_file_function_name ('F');\n \n       data_section ();\n       ASM_GLOBALIZE_LABEL (asm_out_file, IDENTIFIER_POINTER (label));"}, {"sha": "13786cfa312e113a62c1d42ae59ffd114c42d841", "filename": "gcc/profile.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/496651db26666e15ffa3af1a7b86732a83645ee8/gcc%2Fprofile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/496651db26666e15ffa3af1a7b86732a83645ee8/gcc%2Fprofile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprofile.c?ref=496651db26666e15ffa3af1a7b86732a83645ee8", "patch": "@@ -1,5 +1,5 @@\n /* Calculate branch probabilities, and basic block execution counts. \n-   Copyright (C) 1990, 1991, 1992, 1993, 1994, 1996, 1997 Free Software Foundation, Inc.\n+   Copyright (C) 1990, 91, 92, 93, 94, 96, 1997 Free Software Foundation, Inc.\n    Contributed by James E. Wilson, UC Berkeley/Cygnus Support;\n    based on some ideas from Dain Samples of UC Berkeley.\n    Further mangling by Bob Manson, Cygnus Support.\n@@ -53,7 +53,6 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n \n extern char * xmalloc ();\n extern void free ();\n-extern tree get_file_function_name ();\n \n /* One of these is dynamically created whenever we identify an arc in the\n    function.  */"}, {"sha": "afa61656338032bd1826e899b0760d5a8c8821d9", "filename": "gcc/tree.h", "status": "modified", "additions": 3, "deletions": 46, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/496651db26666e15ffa3af1a7b86732a83645ee8/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/496651db26666e15ffa3af1a7b86732a83645ee8/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=496651db26666e15ffa3af1a7b86732a83645ee8", "patch": "@@ -1837,49 +1837,6 @@ extern void end_temporary_allocation PROTO((void));\n /* Pop the obstack selection stack.  */\n extern void pop_obstacks PROTO((void));\n \n-\f\n-/* Interface of the DWARF2 unwind info support.  */\n-\n-/* Decide whether we want to emit frame unwind information for the current\n-   translation unit.  */\n-\n-extern int dwarf2out_do_frame\t\tPROTO((void));\n-\n-/* Generate a new label for the CFI info to refer to.  */\n-\n-extern char *dwarf2out_cfi_label\tPROTO((void));\n-\n-/* Entry point to update the canonical frame address (CFA).  */\n-\n-extern void dwarf2out_def_cfa\t\tPROTO((char *, unsigned, long));\n-\n-/* Add the CFI for saving a register window.  */\n-\n-extern void dwarf2out_window_save\tPROTO((char *));\n-\n-/* Add a CFI to update the running total of the size of arguments pushed\n-   onto the stack.  */\n-\n-extern void dwarf2out_args_size\t\tPROTO((char *, long));\n-\n-/* Entry point for saving a register to the stack.  */\n-\n-extern void dwarf2out_reg_save\t\tPROTO((char *, unsigned, long));\n-\n-/* Entry point for saving the return address in the stack.  */\n-\n-extern void dwarf2out_return_save\tPROTO((char *, long));\n-\n-/* Entry point for saving the return address in a register.  */\n-\n-extern void dwarf2out_return_reg\tPROTO((char *, unsigned));\n-\n-/* Output a marker (i.e. a label) for the beginning of a function, before\n-   the prologue.  */\n-\n-extern void dwarf2out_begin_prologue\tPROTO((void));\n-\n-/* Output a marker (i.e. a label) for the absolute end of the generated\n-   code for a function definition.  */\n-\n-extern void dwarf2out_end_epilogue\tPROTO((void));\n+/* If KIND=='I', return a suitable global initializer (constructor) name.\n+   If KIND=='D', return a suitable global clean-up (destructor) name.  */\n+extern tree get_file_function_name PROTO((int));"}]}