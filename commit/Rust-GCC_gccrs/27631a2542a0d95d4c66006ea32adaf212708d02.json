{"sha": "27631a2542a0d95d4c66006ea32adaf212708d02", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mjc2MzFhMjU0MmEwZDk1ZDRjNjYwMDZlYTMyYWRhZjIxMjcwOGQwMg==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2016-08-03T15:18:30Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2016-08-03T15:18:30Z"}, "message": "Remove deprecated has_trivial_xxx traits\n\n\t* include/std/type_traits (has_trivial_default_constructor): Remove.\n\t(has_trivial_copy_constructor, has_trivial_copy_assign): Likewise.\n\t* testsuite/20_util/has_trivial_copy_assign/requirements/\n\texplicit_instantiation.cc: Remove test.\n\t* testsuite/20_util/declval/requirements/1_neg.cc: Adjust dg-error\n\tline number.\n\t* testsuite/20_util/has_trivial_copy_assign/requirements/typedefs.cc:\n\tLikewise.\n\t* testsuite/20_util/has_trivial_copy_assign/value.cc: Likewise.\n\t* testsuite/20_util/has_trivial_copy_constructor/requirements/\n\texplicit_instantiation.cc: Likewise.\n\t* testsuite/20_util/has_trivial_copy_constructor/requirements/\n\ttypedefs.cc: Likewise.\n\t* testsuite/20_util/has_trivial_copy_constructor/value.cc: Likewise.\n\t* testsuite/20_util/has_trivial_default_constructor/requirements/\n\texplicit_instantiation.cc: Likewise.\n\t* testsuite/20_util/has_trivial_default_constructor/requirements/\n\ttypedefs.cc: Likewise.\n\t* testsuite/20_util/has_trivial_default_constructor/value.cc:\n\tLikewise.\n\t* testsuite/20_util/headers/type_traits/types_std_c++0x_neg.cc:\n\tCheck has_trivial_default_constructor, has_trivial_copy_constructor,\n\tand has_trivial_copy_assign are not defined.\n\t* testsuite/20_util/pair/requirements/dr801.cc: Remove commented out\n\ttests.\n\t* testsuite/20_util/tuple/requirements/dr801.cc: Likewise.\n\t* testsuite/20_util/make_signed/requirements/typedefs_neg.cc: Adjust\n\tdg-error line number.\n\t* testsuite/20_util/make_unsigned/requirements/typedefs_neg.cc:\n\tLikewise.\n\nFrom-SVN: r239079", "tree": {"sha": "db5278083dd06b732ed7d000817d96c2fe289bb7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/db5278083dd06b732ed7d000817d96c2fe289bb7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/27631a2542a0d95d4c66006ea32adaf212708d02", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27631a2542a0d95d4c66006ea32adaf212708d02", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27631a2542a0d95d4c66006ea32adaf212708d02", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27631a2542a0d95d4c66006ea32adaf212708d02/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c98583e997e74487876c1a4aafb3d12602e330ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c98583e997e74487876c1a4aafb3d12602e330ff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c98583e997e74487876c1a4aafb3d12602e330ff"}], "stats": {"total": 449, "additions": 40, "deletions": 409}, "files": [{"sha": "c6b5ec3d3d1e43df795b5a3a589c3b4f788465da", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27631a2542a0d95d4c66006ea32adaf212708d02/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27631a2542a0d95d4c66006ea32adaf212708d02/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=27631a2542a0d95d4c66006ea32adaf212708d02", "patch": "@@ -1,3 +1,36 @@\n+2016-08-03  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/std/type_traits (has_trivial_default_constructor): Remove.\n+\t(has_trivial_copy_constructor, has_trivial_copy_assign): Likewise.\n+\t* testsuite/20_util/has_trivial_copy_assign/requirements/\n+\texplicit_instantiation.cc: Remove test.\n+\t* testsuite/20_util/declval/requirements/1_neg.cc: Adjust dg-error\n+\tline number.\n+\t* testsuite/20_util/has_trivial_copy_assign/requirements/typedefs.cc:\n+\tLikewise.\n+\t* testsuite/20_util/has_trivial_copy_assign/value.cc: Likewise.\n+\t* testsuite/20_util/has_trivial_copy_constructor/requirements/\n+\texplicit_instantiation.cc: Likewise.\n+\t* testsuite/20_util/has_trivial_copy_constructor/requirements/\n+\ttypedefs.cc: Likewise.\n+\t* testsuite/20_util/has_trivial_copy_constructor/value.cc: Likewise.\n+\t* testsuite/20_util/has_trivial_default_constructor/requirements/\n+\texplicit_instantiation.cc: Likewise.\n+\t* testsuite/20_util/has_trivial_default_constructor/requirements/\n+\ttypedefs.cc: Likewise.\n+\t* testsuite/20_util/has_trivial_default_constructor/value.cc:\n+\tLikewise.\n+\t* testsuite/20_util/headers/type_traits/types_std_c++0x_neg.cc:\n+\tCheck has_trivial_default_constructor, has_trivial_copy_constructor,\n+\tand has_trivial_copy_assign are not defined.\n+\t* testsuite/20_util/pair/requirements/dr801.cc: Remove commented out\n+\ttests.\n+\t* testsuite/20_util/tuple/requirements/dr801.cc: Likewise.\n+\t* testsuite/20_util/make_signed/requirements/typedefs_neg.cc: Adjust\n+\tdg-error line number.\n+\t* testsuite/20_util/make_unsigned/requirements/typedefs_neg.cc:\n+\tLikewise.\n+\n 2016-08-02  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* testsuite/21_strings/basic_string/allocator/wchar_t/copy.cc:"}, {"sha": "dd9f57ed2e6154f933e80f55039aad789154bc24", "filename": "libstdc++-v3/include/std/type_traits", "status": "modified", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27631a2542a0d95d4c66006ea32adaf212708d02/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftype_traits", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27631a2542a0d95d4c66006ea32adaf212708d02/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftype_traits", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftype_traits?ref=27631a2542a0d95d4c66006ea32adaf212708d02", "patch": "@@ -1447,23 +1447,6 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t\t\t      __has_trivial_destructor(_Tp)>>\n     { };\n \n-  /// has_trivial_default_constructor (temporary legacy)\n-  template<typename _Tp>\n-    struct has_trivial_default_constructor\n-    : public integral_constant<bool, __has_trivial_constructor(_Tp)>\n-    { } _GLIBCXX_DEPRECATED;\n-\n-  /// has_trivial_copy_constructor (temporary legacy)\n-  template<typename _Tp>\n-    struct has_trivial_copy_constructor\n-    : public integral_constant<bool, __has_trivial_copy(_Tp)>\n-    { } _GLIBCXX_DEPRECATED;\n-\n-  /// has_trivial_copy_assign (temporary legacy)\n-  template<typename _Tp>\n-    struct has_trivial_copy_assign\n-    : public integral_constant<bool, __has_trivial_assign(_Tp)>\n-    { } _GLIBCXX_DEPRECATED;\n \n   /// has_virtual_destructor\n   template<typename _Tp>"}, {"sha": "1c05f61b064aa2b719f015152ab9c39ca8ca6ffd", "filename": "libstdc++-v3/testsuite/20_util/declval/requirements/1_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27631a2542a0d95d4c66006ea32adaf212708d02/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fdeclval%2Frequirements%2F1_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27631a2542a0d95d4c66006ea32adaf212708d02/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fdeclval%2Frequirements%2F1_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fdeclval%2Frequirements%2F1_neg.cc?ref=27631a2542a0d95d4c66006ea32adaf212708d02", "patch": "@@ -19,7 +19,7 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-// { dg-error \"static assertion failed\" \"\" { target *-*-* } 2272 }\n+// { dg-error \"static assertion failed\" \"\" { target *-*-* } 2255 }\n \n #include <utility>\n "}, {"sha": "6393089c3aadea256df5f4a25f224e6938e9f351", "filename": "libstdc++-v3/testsuite/20_util/has_trivial_copy_assign/requirements/explicit_instantiation.cc", "status": "removed", "additions": 0, "deletions": 30, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c98583e997e74487876c1a4aafb3d12602e330ff/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fhas_trivial_copy_assign%2Frequirements%2Fexplicit_instantiation.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c98583e997e74487876c1a4aafb3d12602e330ff/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fhas_trivial_copy_assign%2Frequirements%2Fexplicit_instantiation.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fhas_trivial_copy_assign%2Frequirements%2Fexplicit_instantiation.cc?ref=c98583e997e74487876c1a4aafb3d12602e330ff", "patch": "@@ -1,30 +0,0 @@\n-// { dg-options \"-std=gnu++11 -Wno-deprecated\" }\n-// { dg-do compile }\n-// 2010-06-08  Paolo Carlini  <paolo.carlini@oracle.com>\n-\n-// Copyright (C) 2010-2016 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 3, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING3.  If not see\n-// <http://www.gnu.org/licenses/>.\n-\n-// NB: This file is for testing type_traits with NO OTHER INCLUDES.\n-\n-#include <type_traits>\n-\n-namespace std\n-{\n-  typedef short test_type;\n-  template struct has_trivial_copy_assign<test_type>;\n-}"}, {"sha": "61e54c12bb6b819e5a8d6c5aef137e8c94e8b8d5", "filename": "libstdc++-v3/testsuite/20_util/has_trivial_copy_assign/requirements/typedefs.cc", "status": "removed", "additions": 0, "deletions": 36, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c98583e997e74487876c1a4aafb3d12602e330ff/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fhas_trivial_copy_assign%2Frequirements%2Ftypedefs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c98583e997e74487876c1a4aafb3d12602e330ff/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fhas_trivial_copy_assign%2Frequirements%2Ftypedefs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fhas_trivial_copy_assign%2Frequirements%2Ftypedefs.cc?ref=c98583e997e74487876c1a4aafb3d12602e330ff", "patch": "@@ -1,36 +0,0 @@\n-// { dg-options \"-std=gnu++11 -Wno-deprecated\" }\n-// 2010-06-08  Paolo Carlini  <paolo.carlini@oracle.com>\n-//\n-// Copyright (C) 2010-2016 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 3, or (at your option)\n-// any later version.\n-//\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-//\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING3.  If not see\n-// <http://www.gnu.org/licenses/>.\n-\n-// \n-// NB: This file is for testing type_traits with NO OTHER INCLUDES.\n-\n-#include <type_traits>\n-\n-// { dg-do compile }\n-\n-void test01()\n-{\n-  // Check for required typedefs\n-  typedef std::has_trivial_copy_assign<int>   test_type;\n-  typedef test_type::value_type               value_type;\n-  typedef test_type::type                     type;\n-  typedef test_type::type::value_type         type_value_type;\n-  typedef test_type::type::type               type_type;\n-}"}, {"sha": "73a22584acbf4600dfca24930e420fd59427833e", "filename": "libstdc++-v3/testsuite/20_util/has_trivial_copy_assign/value.cc", "status": "removed", "additions": 0, "deletions": 54, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c98583e997e74487876c1a4aafb3d12602e330ff/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fhas_trivial_copy_assign%2Fvalue.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c98583e997e74487876c1a4aafb3d12602e330ff/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fhas_trivial_copy_assign%2Fvalue.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fhas_trivial_copy_assign%2Fvalue.cc?ref=c98583e997e74487876c1a4aafb3d12602e330ff", "patch": "@@ -1,54 +0,0 @@\n-// { dg-options \"-std=gnu++11 -Wno-deprecated\" }\n-// { dg-do compile }\n-\n-// 2010-06-08  Paolo Carlini  <paolo.carlini@oracle.com>\n-//\n-// Copyright (C) 2010-2016 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 3, or (at your option)\n-// any later version.\n-//\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-//\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING3.  If not see\n-// <http://www.gnu.org/licenses/>.\n-\n-#include <type_traits>\n-#include <testsuite_tr1.h>\n-\n-void test01()\n-{\n-  using std::has_trivial_copy_assign;\n-  using namespace __gnu_test;\n-\n-  static_assert(test_property<has_trivial_copy_assign, int>(true), \"\");\n-  static_assert(test_property<has_trivial_copy_assign, float>(true), \"\");\n-  static_assert(test_property<has_trivial_copy_assign, EnumType>(true), \"\");\n-  static_assert(test_property<has_trivial_copy_assign, int*>(true), \"\");\n-  static_assert(test_property<has_trivial_copy_assign, int(*)(int)>(true), \"\");\n-  static_assert(test_property<has_trivial_copy_assign,\n-\t\tint (ClassType::*)>(true), \"\");\n-  static_assert(test_property<has_trivial_copy_assign,\n-\t\tint (ClassType::*) (int)>(true), \"\");\n-  static_assert(test_property<has_trivial_copy_assign, int[2]>(true), \"\");\n-  static_assert(test_property<has_trivial_copy_assign, float[][3]>(true), \"\");\n-  static_assert(test_property<has_trivial_copy_assign,\n-\t\tEnumType[2][3][4]>(true), \"\");\n-  static_assert(test_property<has_trivial_copy_assign, int*[3]>(true), \"\");\n-  static_assert(test_property<has_trivial_copy_assign,\n-\t\tint(*[][2])(int)>(true), \"\");\n-  static_assert(test_property<has_trivial_copy_assign,\n-\t\tint (ClassType::*[2][3])>(true), \"\");\n-  static_assert(test_property<has_trivial_copy_assign,\n-\t\tint (ClassType::*[][2][3]) (int)>(true), \"\");\n-\n-  // Negative tests.\n-  static_assert(test_property<has_trivial_copy_assign, void>(false), \"\");\n-}"}, {"sha": "0a5654c9bf461c395e016213f9623bade3feee4e", "filename": "libstdc++-v3/testsuite/20_util/has_trivial_copy_constructor/requirements/explicit_instantiation.cc", "status": "removed", "additions": 0, "deletions": 31, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c98583e997e74487876c1a4aafb3d12602e330ff/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fhas_trivial_copy_constructor%2Frequirements%2Fexplicit_instantiation.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c98583e997e74487876c1a4aafb3d12602e330ff/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fhas_trivial_copy_constructor%2Frequirements%2Fexplicit_instantiation.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fhas_trivial_copy_constructor%2Frequirements%2Fexplicit_instantiation.cc?ref=c98583e997e74487876c1a4aafb3d12602e330ff", "patch": "@@ -1,31 +0,0 @@\n-// { dg-options \"-std=gnu++11 -Wno-deprecated\" }\n-// { dg-do compile }\n-// 2007-04-30 Benjamin Kosnik <bkoz@redhat.com>\n-\n-// Copyright (C) 2007-2016 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 3, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING3.  If not see\n-// <http://www.gnu.org/licenses/>.\n-\n-\n-// NB: This file is for testing type_traits with NO OTHER INCLUDES.\n-\n-#include <type_traits>\n-\n-namespace std\n-{\n-  typedef short test_type;\n-  template struct has_trivial_copy_constructor<test_type>;\n-}"}, {"sha": "1d055061522345c98b51d575473f4f2b3da81eca", "filename": "libstdc++-v3/testsuite/20_util/has_trivial_copy_constructor/requirements/typedefs.cc", "status": "removed", "additions": 0, "deletions": 36, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c98583e997e74487876c1a4aafb3d12602e330ff/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fhas_trivial_copy_constructor%2Frequirements%2Ftypedefs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c98583e997e74487876c1a4aafb3d12602e330ff/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fhas_trivial_copy_constructor%2Frequirements%2Ftypedefs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fhas_trivial_copy_constructor%2Frequirements%2Ftypedefs.cc?ref=c98583e997e74487876c1a4aafb3d12602e330ff", "patch": "@@ -1,36 +0,0 @@\n-// { dg-options \"-std=gnu++11 -Wno-deprecated\" }\n-// 2004-12-30  Paolo Carlini  <pcarlini@suse.de>\n-//\n-// Copyright (C) 2004-2016 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 3, or (at your option)\n-// any later version.\n-//\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-//\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING3.  If not see\n-// <http://www.gnu.org/licenses/>.\n-\n-// \n-// NB: This file is for testing type_traits with NO OTHER INCLUDES.\n-\n-#include <type_traits>\n-\n-// { dg-do compile }\n-\n-void test01()\n-{\n-  // Check for required typedefs\n-  typedef std::has_trivial_copy_constructor<int>     test_type;\n-  typedef test_type::value_type               value_type;\n-  typedef test_type::type                     type;\n-  typedef test_type::type::value_type         type_value_type;\n-  typedef test_type::type::type               type_type;\n-}"}, {"sha": "5f7456e0b5a8d797fceb6facd9a9d392e14c102f", "filename": "libstdc++-v3/testsuite/20_util/has_trivial_copy_constructor/value.cc", "status": "removed", "additions": 0, "deletions": 60, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c98583e997e74487876c1a4aafb3d12602e330ff/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fhas_trivial_copy_constructor%2Fvalue.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c98583e997e74487876c1a4aafb3d12602e330ff/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fhas_trivial_copy_constructor%2Fvalue.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fhas_trivial_copy_constructor%2Fvalue.cc?ref=c98583e997e74487876c1a4aafb3d12602e330ff", "patch": "@@ -1,60 +0,0 @@\n-// { dg-options \"-std=gnu++11 -Wno-deprecated\" }\n-// { dg-do compile }\n-\n-// 2004-12-30  Paolo Carlini  <pcarlini@suse.de>\n-//\n-// Copyright (C) 2004-2016 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 3, or (at your option)\n-// any later version.\n-//\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-//\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING3.  If not see\n-// <http://www.gnu.org/licenses/>.\n-\n-// 4.5.3 Type properties\n-\n-#include <type_traits>\n-#include <testsuite_tr1.h>\n-\n-void test01()\n-{\n-  using std::has_trivial_copy_constructor;\n-  using namespace __gnu_test;\n-\n-  // Positive tests.\n-  static_assert(test_category<has_trivial_copy_constructor, int>(true), \"\");\n-  static_assert(test_category<has_trivial_copy_constructor, float>(true), \"\");\n-  static_assert(test_category<has_trivial_copy_constructor,\n-\t\tEnumType>(true), \"\");\n-  static_assert(test_category<has_trivial_copy_constructor, int*>(true), \"\");\n-  static_assert(test_category<has_trivial_copy_constructor,\n-\t\tint(*)(int)>(true), \"\");\n-  static_assert(test_category<has_trivial_copy_constructor,\n-\t\tint (ClassType::*)>(true), \"\");\n-  static_assert(test_category<has_trivial_copy_constructor,\n-\t\tint (ClassType::*) (int)>(true), \"\");\n-  static_assert(test_category<has_trivial_copy_constructor, int[2]>(true), \"\");\n-  static_assert(test_category<has_trivial_copy_constructor,\n-\t\tfloat[][3]>(true), \"\");\n-  static_assert(test_category<has_trivial_copy_constructor,\n-\t\tEnumType[2][3][4]>(true), \"\");\n-  static_assert(test_category<has_trivial_copy_constructor, int*[3]>(true), \"\");\n-  static_assert(test_category<has_trivial_copy_constructor,\n-\t\tint(*[][2])(int)>(true), \"\");\n-  static_assert(test_category<has_trivial_copy_constructor,\n-\t\tint (ClassType::*[2][3])>(true), \"\");\n-  static_assert(test_category<has_trivial_copy_constructor,\n-\t\tint (ClassType::*[][2][3]) (int)>(true), \"\");\n-\n-  // Negative tests.  \n-  static_assert(test_category<has_trivial_copy_constructor, void>(false), \"\");  \n-}"}, {"sha": "cd6321362589705470fa70763a97f362b00e2625", "filename": "libstdc++-v3/testsuite/20_util/has_trivial_default_constructor/requirements/explicit_instantiation.cc", "status": "removed", "additions": 0, "deletions": 31, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c98583e997e74487876c1a4aafb3d12602e330ff/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fhas_trivial_default_constructor%2Frequirements%2Fexplicit_instantiation.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c98583e997e74487876c1a4aafb3d12602e330ff/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fhas_trivial_default_constructor%2Frequirements%2Fexplicit_instantiation.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fhas_trivial_default_constructor%2Frequirements%2Fexplicit_instantiation.cc?ref=c98583e997e74487876c1a4aafb3d12602e330ff", "patch": "@@ -1,31 +0,0 @@\n-// { dg-options \"-std=gnu++11 -Wno-deprecated\" }\n-// { dg-do compile }\n-// 2007-04-30 Benjamin Kosnik <bkoz@redhat.com>\n-\n-// Copyright (C) 2007-2016 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 3, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING3.  If not see\n-// <http://www.gnu.org/licenses/>.\n-\n-\n-// NB: This file is for testing type_traits with NO OTHER INCLUDES.\n-\n-#include <type_traits>\n-\n-namespace std\n-{\n-  typedef short test_type;\n-  template struct has_trivial_default_constructor<test_type>;\n-}"}, {"sha": "80f0b6cfb5770c1600cfd311ba1154e6b0d88209", "filename": "libstdc++-v3/testsuite/20_util/has_trivial_default_constructor/requirements/typedefs.cc", "status": "removed", "additions": 0, "deletions": 36, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c98583e997e74487876c1a4aafb3d12602e330ff/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fhas_trivial_default_constructor%2Frequirements%2Ftypedefs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c98583e997e74487876c1a4aafb3d12602e330ff/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fhas_trivial_default_constructor%2Frequirements%2Ftypedefs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fhas_trivial_default_constructor%2Frequirements%2Ftypedefs.cc?ref=c98583e997e74487876c1a4aafb3d12602e330ff", "patch": "@@ -1,36 +0,0 @@\n-// { dg-options \"-std=gnu++11 -Wno-deprecated\" }\n-// 2004-12-26  Paolo Carlini  <pcarlini@suse.de>\n-//\n-// Copyright (C) 2004-2016 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 3, or (at your option)\n-// any later version.\n-//\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-//\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING3.  If not see\n-// <http://www.gnu.org/licenses/>.\n-\n-// \n-// NB: This file is for testing type_traits with NO OTHER INCLUDES.\n-\n-#include <type_traits>\n-\n-// { dg-do compile }\n-\n-void test01()\n-{\n-  // Check for required typedefs\n-  typedef std::has_trivial_default_constructor<int>    test_type;\n-  typedef test_type::value_type               value_type;\n-  typedef test_type::type                     type;\n-  typedef test_type::type::value_type         type_value_type;\n-  typedef test_type::type::type               type_type;\n-}"}, {"sha": "dae437b363999c2e1d25b0a9988080bfe5d068a8", "filename": "libstdc++-v3/testsuite/20_util/has_trivial_default_constructor/value.cc", "status": "removed", "additions": 0, "deletions": 66, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c98583e997e74487876c1a4aafb3d12602e330ff/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fhas_trivial_default_constructor%2Fvalue.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c98583e997e74487876c1a4aafb3d12602e330ff/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fhas_trivial_default_constructor%2Fvalue.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fhas_trivial_default_constructor%2Fvalue.cc?ref=c98583e997e74487876c1a4aafb3d12602e330ff", "patch": "@@ -1,66 +0,0 @@\n-// { dg-options \"-std=gnu++11 -Wno-deprecated\" }\n-// { dg-do compile }\n-\n-// 2004-12-26  Paolo Carlini  <pcarlini@suse.de>\n-//\n-// Copyright (C) 2004-2016 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 3, or (at your option)\n-// any later version.\n-//\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-//\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING3.  If not see\n-// <http://www.gnu.org/licenses/>.\n-\n-// 4.5.3 Type properties\n-\n-#include <type_traits>\n-#include <testsuite_tr1.h>\n-\n-void test01()\n-{\n-  using std::has_trivial_default_constructor;\n-  using namespace __gnu_test;\n-\n-  // Positive tests.\n-  static_assert(test_category<has_trivial_default_constructor, int>(true), \"\");\n-  static_assert(test_category<has_trivial_default_constructor,\n-\t\tfloat>(true), \"\");\n-  static_assert(test_category<has_trivial_default_constructor,\n-\t\tEnumType>(true), \"\");\n-  static_assert(test_category<has_trivial_default_constructor, int*>(true), \"\");\n-  static_assert(test_category<has_trivial_default_constructor,\n-\t\tint(*)(int)>(true), \"\");\n-  static_assert(test_category<has_trivial_default_constructor,\n-\t\tint (ClassType::*)>(true), \"\");\n-  static_assert(test_category<has_trivial_default_constructor,\n-\t\tint (ClassType::*) (int)>(true), \"\");\n-  static_assert(test_category<has_trivial_default_constructor,\n-\t\tint[2]>(true), \"\");\n-  static_assert(test_category<has_trivial_default_constructor,\n-\t\tfloat[][3]>(true), \"\");\n-  static_assert(test_category<has_trivial_default_constructor,\n-\t\tEnumType[2][3][4]>(true), \"\");\n-  static_assert(test_category<has_trivial_default_constructor,\n-\t\tint*[3]>(true), \"\");\n-  static_assert(test_category<has_trivial_default_constructor,\n-\t\tint(*[][2])(int)>(true), \"\");\n-  static_assert(test_category<has_trivial_default_constructor,\n-\t\tint (ClassType::*[2][3])>(true), \"\");\n-  static_assert(test_category<has_trivial_default_constructor,\n-\t\tint (ClassType::*[][2][3]) (int)>(true), \"\");\n-  static_assert(test_category<has_trivial_default_constructor,\n-\t\tClassType>(true), \"\");\n-\n-  // Negative tests.\n-  static_assert(test_category<has_trivial_default_constructor,\n-\t\tvoid>(false), \"\");  \n-}"}, {"sha": "1c65a4b4aa18c4472d8327dd78a312911fbc3b72", "filename": "libstdc++-v3/testsuite/20_util/headers/type_traits/types_std_c++0x_neg.cc", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27631a2542a0d95d4c66006ea32adaf212708d02/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fheaders%2Ftype_traits%2Ftypes_std_c%2B%2B0x_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27631a2542a0d95d4c66006ea32adaf212708d02/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fheaders%2Ftype_traits%2Ftypes_std_c%2B%2B0x_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fheaders%2Ftype_traits%2Ftypes_std_c%2B%2B0x_neg.cc?ref=27631a2542a0d95d4c66006ea32adaf212708d02", "patch": "@@ -24,7 +24,10 @@ namespace gnu\n {\n   // C++11 changes from TR1.\n   using std::has_trivial_constructor; // { dg-error \"has not been declared\" }\n+  using std::has_trivial_default_constructor; // { dg-error \"has not been declared\" }\n   using std::has_nothrow_constructor; // { dg-error \"has not been declared\" }\n   using std::has_trivial_copy;\t      // { dg-error \"has not been declared\" }\n+  using std::has_trivial_copy_constructor; // { dg-error \"has not been declared\" }\n+  using std::has_trivial_copy_assign; // { dg-error \"has not been declared\" }\n   using std::has_nothrow_copy;\t      // { dg-error \"has not been declared\" }\n }"}, {"sha": "69e21b640351677ad279d507efa977b64cf22305", "filename": "libstdc++-v3/testsuite/20_util/make_signed/requirements/typedefs_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27631a2542a0d95d4c66006ea32adaf212708d02/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmake_signed%2Frequirements%2Ftypedefs_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27631a2542a0d95d4c66006ea32adaf212708d02/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmake_signed%2Frequirements%2Ftypedefs_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmake_signed%2Frequirements%2Ftypedefs_neg.cc?ref=27631a2542a0d95d4c66006ea32adaf212708d02", "patch": "@@ -48,4 +48,4 @@ void test01()\n // { dg-error \"required from here\" \"\" { target *-*-* } 40 }\n // { dg-error \"required from here\" \"\" { target *-*-* } 42 }\n \n-// { dg-error \"invalid use of incomplete type\" \"\" { target *-*-* } 1937 }\n+// { dg-error \"invalid use of incomplete type\" \"\" { target *-*-* } 1920 }"}, {"sha": "5240c3e93eb341ef79cec6f8e6cff4d0b2fbac53", "filename": "libstdc++-v3/testsuite/20_util/make_unsigned/requirements/typedefs_neg.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27631a2542a0d95d4c66006ea32adaf212708d02/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmake_unsigned%2Frequirements%2Ftypedefs_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27631a2542a0d95d4c66006ea32adaf212708d02/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmake_unsigned%2Frequirements%2Ftypedefs_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmake_unsigned%2Frequirements%2Ftypedefs_neg.cc?ref=27631a2542a0d95d4c66006ea32adaf212708d02", "patch": "@@ -48,5 +48,5 @@ void test01()\n // { dg-error \"required from here\" \"\" { target *-*-* } 40 }\n // { dg-error \"required from here\" \"\" { target *-*-* } 42 }\n \n-// { dg-error \"invalid use of incomplete type\" \"\" { target *-*-* } 1833 }\n-// { dg-error \"declaration of\" \"\" { target *-*-* } 1790 }\n+// { dg-error \"invalid use of incomplete type\" \"\" { target *-*-* } 1816 }\n+// { dg-error \"declaration of\" \"\" { target *-*-* } 1773 }"}, {"sha": "e7e140d436b3112f7e945e6f61bcb986884311fc", "filename": "libstdc++-v3/testsuite/20_util/pair/requirements/dr801.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27631a2542a0d95d4c66006ea32adaf212708d02/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fpair%2Frequirements%2Fdr801.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27631a2542a0d95d4c66006ea32adaf212708d02/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fpair%2Frequirements%2Fdr801.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fpair%2Frequirements%2Fdr801.cc?ref=27631a2542a0d95d4c66006ea32adaf212708d02", "patch": "@@ -36,10 +36,6 @@ void test_trivial()\n \n   // Negative\n   /*\n-  static_assert(std::has_trivial_default_constructor<pair_type>::value,\n-\t\t\"! triv default\");\n-  static_assert(std::has_trivial_copy_assign<pair_type>::value,\n-\t\t\"! triv assign\");\n   static_assert(std::is_trivial<pair_type>::value, \"! triv\");\n   static_assert(std::is_pod<pair_type>::value, \"! pod\");\n   */"}, {"sha": "124bf754fec7cc37fe5fd3be5855f31a1bf4732b", "filename": "libstdc++-v3/testsuite/20_util/tuple/requirements/dr801.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27631a2542a0d95d4c66006ea32adaf212708d02/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Frequirements%2Fdr801.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27631a2542a0d95d4c66006ea32adaf212708d02/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Frequirements%2Fdr801.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Frequirements%2Fdr801.cc?ref=27631a2542a0d95d4c66006ea32adaf212708d02", "patch": "@@ -36,10 +36,6 @@ void test_trivial()\n \n   // Negative\n   /*\n-  static_assert(std::has_trivial_default_constructor<tuple_type>::value,\n-\t\t\"! triv default\");\n-  static_assert(std::has_trivial_copy_assign<tuple_type>::value,\n-\t\t\"! triv assign\");\n   static_assert(std::is_trivial<tuple_type>::value, \"! triv\");\n   static_assert(std::is_pod<tuple_type>::value, \"! pod\");\n   */"}]}