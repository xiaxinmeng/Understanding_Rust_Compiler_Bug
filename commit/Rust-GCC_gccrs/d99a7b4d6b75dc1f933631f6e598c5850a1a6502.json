{"sha": "d99a7b4d6b75dc1f933631f6e598c5850a1a6502", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDk5YTdiNGQ2Yjc1ZGMxZjkzMzYzMWY2ZTU5OGM1ODUwYTFhNjUwMg==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2015-06-12T00:01:50Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@gcc.gnu.org", "date": "2015-06-12T00:01:50Z"}, "message": "re PR sanitizer/65479 (sanitizer stack trace missing frames past #0 on powerpc64)\n\n2015-06-11  Martin Sebor  <msebor@redhat.com>\n\n\tPR sanitizer/65479\n\t* dwarf.c (struct line): Add new field idx.\n\t(line_compare): Use it.\n\t(add_line): Set it.\n\t(read_line_info): Reset it.\n\nFrom-SVN: r224402", "tree": {"sha": "8234309683396aed832fe1af93e6800de74b44b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8234309683396aed832fe1af93e6800de74b44b7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d99a7b4d6b75dc1f933631f6e598c5850a1a6502", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d99a7b4d6b75dc1f933631f6e598c5850a1a6502", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d99a7b4d6b75dc1f933631f6e598c5850a1a6502", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d99a7b4d6b75dc1f933631f6e598c5850a1a6502/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "39e150e85f8059df69b1cc4fff2567d682b6da9f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39e150e85f8059df69b1cc4fff2567d682b6da9f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/39e150e85f8059df69b1cc4fff2567d682b6da9f"}], "stats": {"total": 25, "additions": 20, "deletions": 5}, "files": [{"sha": "d043761bbe7732c4adf303e29190f174bbb159ed", "filename": "libbacktrace/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d99a7b4d6b75dc1f933631f6e598c5850a1a6502/libbacktrace%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d99a7b4d6b75dc1f933631f6e598c5850a1a6502/libbacktrace%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2FChangeLog?ref=d99a7b4d6b75dc1f933631f6e598c5850a1a6502", "patch": "@@ -1,3 +1,11 @@\n+2015-06-11  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR sanitizer/65479\n+\t* dwarf.c (struct line): Add new field idx.\n+\t(line_compare): Use it.\n+\t(add_line): Set it.\n+\t(read_line_info): Reset it.\n+\n 2015-05-29  Tristan Gingold  <gingold@adacore.com>\n \n \t* pecoff.c: New file."}, {"sha": "e32c46885735d6baed838e791a03fba649efb6eb", "filename": "libbacktrace/dwarf.c", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d99a7b4d6b75dc1f933631f6e598c5850a1a6502/libbacktrace%2Fdwarf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d99a7b4d6b75dc1f933631f6e598c5850a1a6502/libbacktrace%2Fdwarf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2Fdwarf.c?ref=d99a7b4d6b75dc1f933631f6e598c5850a1a6502", "patch": "@@ -211,6 +211,10 @@ struct line\n   const char *filename;\n   /* Line number.  */\n   int lineno;\n+  /* Index of the object in the original array read from the DWARF\n+     section, before it has been sorted.  The index makes it possible\n+     to use Quicksort and maintain stability.  */\n+  int idx;\n };\n \n /* A growable vector of line number information.  This is used while\n@@ -940,9 +944,10 @@ unit_addrs_search (const void *vkey, const void *ventry)\n     return 0;\n }\n \n-/* Sort the line vector by PC.  We want a stable sort here.  We know\n-   that the pointers are into the same array, so it is safe to compare\n-   them directly.  */\n+/* Sort the line vector by PC.  We want a stable sort here to maintain\n+   the order of lines for the same PC values.  Since the sequence is\n+   being sorted in place, their addresses cannot be relied on to\n+   maintain stability.  That is the purpose of the index member.  */\n \n static int\n line_compare (const void *v1, const void *v2)\n@@ -954,9 +959,9 @@ line_compare (const void *v1, const void *v2)\n     return -1;\n   else if (ln1->pc > ln2->pc)\n     return 1;\n-  else if (ln1 < ln2)\n+  else if (ln1->idx < ln2->idx)\n     return -1;\n-  else if (ln1 > ln2)\n+  else if (ln1->idx > ln2->idx)\n     return 1;\n   else\n     return 0;\n@@ -1551,6 +1556,7 @@ add_line (struct backtrace_state *state, struct dwarf_data *ddata,\n \n   ln->filename = filename;\n   ln->lineno = lineno;\n+  ln->idx = vec->count;\n \n   ++vec->count;\n \n@@ -2011,6 +2017,7 @@ read_line_info (struct backtrace_state *state, struct dwarf_data *ddata,\n   ln->pc = (uintptr_t) -1;\n   ln->filename = NULL;\n   ln->lineno = 0;\n+  ln->idx = 0;\n \n   if (!backtrace_vector_release (state, &vec.vec, error_callback, data))\n     goto fail;"}]}