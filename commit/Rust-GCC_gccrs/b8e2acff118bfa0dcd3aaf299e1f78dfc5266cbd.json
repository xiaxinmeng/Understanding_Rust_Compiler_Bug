{"sha": "b8e2acff118bfa0dcd3aaf299e1f78dfc5266cbd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjhlMmFjZmYxMThiZmEwZGNkM2FhZjI5OWUxZjc4ZGZjNTI2NmNiZA==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2019-06-07T05:33:11Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2019-06-07T05:33:11Z"}, "message": "Add warn_unused_result for malloc-like functions (PR tree-optimization/78902).\n\n2019-06-07  Martin Liska  <mliska@suse.cz>\n\n\tPR tree-optimization/78902\n\t* builtin-attrs.def (ATTR_WARN_UNUSED_RESULT): New.\n\t(ATTR_MALLOC_NOTHROW_LEAF_LIST): Remove.\n\t(ATTR_WARN_UNUSED_RESULT_NOTHROW_LEAF_LIST): New.\n\t(ATTR_MALLOC_WARN_UNUSED_RESULT_NOTHROW_LEAF_LIST): New.\n\t(ATTR_ALLOC_SIZE_2_NOTHROW_LIST): Remove.\n\t(ATTR_MALLOC_SIZE_1_NOTHROW_LEAF_LIST): Remove.\n\t(ATTR_MALLOC_WARN_UNUSED_RESULT_NOTHROW_LIST): New.\n\t(ATTR_ALLOC_WARN_UNUSED_RESULT_SIZE_2_NOTHROW_LIST): New.\n\t(ATTR_MALLOC_WARN_UNUSED_RESULT_SIZE_1_NOTHROW_LEAF_LIST): New.\n\t(ATTR_ALLOCA_SIZE_1_NOTHROW_LEAF_LIST): Remove.\n\t(ATTR_ALLOCA_WARN_UNUSED_RESULT_SIZE_1_NOTHROW_LEAF_LIST): New.\n\t(ATTR_MALLOC_SIZE_1_2_NOTHROW_LEAF_LIST):  Remove.\n\t(ATTR_MALLOC_WARN_UNUSED_RESULT_SIZE_1_2_NOTHROW_LEAF_LIST):\n\tNew.\n\t(ATTR_ALLOC_SIZE_2_NOTHROW_LEAF_LIST): Remove.\n\t(ATTR_ALLOC_WARN_UNUSED_RESULT_SIZE_2_NOTHROW_LEAF_LIST): New.\n\t(ATTR_MALLOC_NOTHROW_NONNULL): Remove.\n\t(ATTR_WARN_UNUSED_RESULT_NOTHROW_NONNULL): New.\n\t(ATTR_MALLOC_WARN_UNUSED_RESULT_NOTHROW_NONNULL): New.\n\t(ATTR_MALLOC_NOTHROW_NONNULL_LEAF): Remove.\n\t(ATTR_WARN_UNUSED_RESULT_NOTHROW_NONNULL_LEAF): New.\n\t(ATTR_MALLOC_WARN_UNUSED_RESULT_NOTHROW_NONNULL_LEAF): New.\n\t* builtins.def (BUILT_IN_ALIGNED_ALLOC): Change to use\n\twarn_unused_result attribute.\n\t(BUILT_IN_STRDUP): Likewise.\n\t(BUILT_IN_STRNDUP): Likewise.\n\t(BUILT_IN_ALLOCA): Likewise.\n\t(BUILT_IN_CALLOC): Likewise.\n\t(BUILT_IN_MALLOC): Likewise.\n\t(BUILT_IN_REALLOC): Likewise.\n2019-06-07  Martin Liska  <mliska@suse.cz>\n\n\tPR tree-optimization/78902\n\t* c-c++-common/asan/alloca_loop_unpoisoning.c: Use result\n\tof __builtin_alloca.\n\t* c-c++-common/asan/pr88619.c: Likewise.\n\t* g++.dg/overload/using2.C: Likewise for malloc.\n\t* gcc.dg/attr-alloc_size-5.c: Add new dg-warning.\n\t* gcc.dg/nonnull-3.c: Use result of __builtin_strdup.\n\t* gcc.dg/pr43643.c: Likewise.\n\t* gcc.dg/pr59717.c: Likewise for calloc.\n\t* gcc.dg/torture/pr71816.c: Likewise.\n\t* gcc.dg/tree-ssa/pr78886.c: Likewise.\n\t* gcc.dg/tree-ssa/pr79697.c: Likewise.\n\t* gcc.dg/pr78902.c: New test.\n\nFrom-SVN: r272028", "tree": {"sha": "e290bc247d689b3309c4c50784ecfd7132849bfa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e290bc247d689b3309c4c50784ecfd7132849bfa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b8e2acff118bfa0dcd3aaf299e1f78dfc5266cbd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8e2acff118bfa0dcd3aaf299e1f78dfc5266cbd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8e2acff118bfa0dcd3aaf299e1f78dfc5266cbd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8e2acff118bfa0dcd3aaf299e1f78dfc5266cbd/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c437d2d437be4be232e44b58e2e0c8d7ab40e175", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c437d2d437be4be232e44b58e2e0c8d7ab40e175", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c437d2d437be4be232e44b58e2e0c8d7ab40e175"}], "stats": {"total": 151, "additions": 112, "deletions": 39}, "files": [{"sha": "7a21c939ac57d529170e3d278ecacd2ce9a5aad3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8e2acff118bfa0dcd3aaf299e1f78dfc5266cbd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8e2acff118bfa0dcd3aaf299e1f78dfc5266cbd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b8e2acff118bfa0dcd3aaf299e1f78dfc5266cbd", "patch": "@@ -1,3 +1,37 @@\n+2019-06-07  Martin Liska  <mliska@suse.cz>\n+\n+\tPR tree-optimization/78902\n+\t* builtin-attrs.def (ATTR_WARN_UNUSED_RESULT): New.\n+\t(ATTR_MALLOC_NOTHROW_LEAF_LIST): Remove.\n+\t(ATTR_WARN_UNUSED_RESULT_NOTHROW_LEAF_LIST): New.\n+\t(ATTR_MALLOC_WARN_UNUSED_RESULT_NOTHROW_LEAF_LIST): New.\n+\t(ATTR_ALLOC_SIZE_2_NOTHROW_LIST): Remove.\n+\t(ATTR_MALLOC_SIZE_1_NOTHROW_LEAF_LIST): Remove.\n+\t(ATTR_MALLOC_WARN_UNUSED_RESULT_NOTHROW_LIST): New.\n+\t(ATTR_ALLOC_WARN_UNUSED_RESULT_SIZE_2_NOTHROW_LIST): New.\n+\t(ATTR_MALLOC_WARN_UNUSED_RESULT_SIZE_1_NOTHROW_LEAF_LIST): New.\n+\t(ATTR_ALLOCA_SIZE_1_NOTHROW_LEAF_LIST): Remove.\n+\t(ATTR_ALLOCA_WARN_UNUSED_RESULT_SIZE_1_NOTHROW_LEAF_LIST): New.\n+\t(ATTR_MALLOC_SIZE_1_2_NOTHROW_LEAF_LIST):  Remove.\n+\t(ATTR_MALLOC_WARN_UNUSED_RESULT_SIZE_1_2_NOTHROW_LEAF_LIST):\n+\tNew.\n+\t(ATTR_ALLOC_SIZE_2_NOTHROW_LEAF_LIST): Remove.\n+\t(ATTR_ALLOC_WARN_UNUSED_RESULT_SIZE_2_NOTHROW_LEAF_LIST): New.\n+\t(ATTR_MALLOC_NOTHROW_NONNULL): Remove.\n+\t(ATTR_WARN_UNUSED_RESULT_NOTHROW_NONNULL): New.\n+\t(ATTR_MALLOC_WARN_UNUSED_RESULT_NOTHROW_NONNULL): New.\n+\t(ATTR_MALLOC_NOTHROW_NONNULL_LEAF): Remove.\n+\t(ATTR_WARN_UNUSED_RESULT_NOTHROW_NONNULL_LEAF): New.\n+\t(ATTR_MALLOC_WARN_UNUSED_RESULT_NOTHROW_NONNULL_LEAF): New.\n+\t* builtins.def (BUILT_IN_ALIGNED_ALLOC): Change to use\n+\twarn_unused_result attribute.\n+\t(BUILT_IN_STRDUP): Likewise.\n+\t(BUILT_IN_STRNDUP): Likewise.\n+\t(BUILT_IN_ALLOCA): Likewise.\n+\t(BUILT_IN_CALLOC): Likewise.\n+\t(BUILT_IN_MALLOC): Likewise.\n+\t(BUILT_IN_REALLOC): Likewise.\n+\n 2019-06-06  Jim Wilson  <jimw@sifive.com>\n \n \tPR target/89955"}, {"sha": "39d1395f42abeca05b43ce2e079968227375913a", "filename": "gcc/builtin-attrs.def", "status": "modified", "additions": 23, "deletions": 14, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8e2acff118bfa0dcd3aaf299e1f78dfc5266cbd/gcc%2Fbuiltin-attrs.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8e2acff118bfa0dcd3aaf299e1f78dfc5266cbd/gcc%2Fbuiltin-attrs.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltin-attrs.def?ref=b8e2acff118bfa0dcd3aaf299e1f78dfc5266cbd", "patch": "@@ -118,6 +118,7 @@ DEF_ATTR_IDENT (ATTR_TM_REGPARM, \"*tm regparm\")\n DEF_ATTR_IDENT (ATTR_TM_TMPURE, \"transaction_pure\")\n DEF_ATTR_IDENT (ATTR_RETURNS_TWICE, \"returns_twice\")\n DEF_ATTR_IDENT (ATTR_RETURNS_NONNULL, \"returns_nonnull\")\n+DEF_ATTR_IDENT (ATTR_WARN_UNUSED_RESULT, \"warn_unused_result\")\n \n DEF_ATTR_TREE_LIST (ATTR_NOVOPS_LIST, ATTR_NOVOPS, ATTR_NULL, ATTR_NULL)\n \n@@ -157,8 +158,10 @@ DEF_ATTR_TREE_LIST (ATTR_CONST_NORETURN_NOTHROW_LEAF_COLD_LIST, ATTR_COLD,\\\n \t\t\tATTR_NULL, ATTR_CONST_NORETURN_NOTHROW_LEAF_LIST)\n DEF_ATTR_TREE_LIST (ATTR_MALLOC_NOTHROW_LIST, ATTR_MALLOC,\t\\\n \t\t\tATTR_NULL, ATTR_NOTHROW_LIST)\n-DEF_ATTR_TREE_LIST (ATTR_MALLOC_NOTHROW_LEAF_LIST, ATTR_MALLOC,\t\\\n+DEF_ATTR_TREE_LIST (ATTR_WARN_UNUSED_RESULT_NOTHROW_LEAF_LIST, ATTR_WARN_UNUSED_RESULT,\t\\\n \t\t\tATTR_NULL, ATTR_NOTHROW_LEAF_LIST)\n+DEF_ATTR_TREE_LIST (ATTR_MALLOC_WARN_UNUSED_RESULT_NOTHROW_LEAF_LIST, ATTR_MALLOC,\t\\\n+\t\t\tATTR_NULL, ATTR_WARN_UNUSED_RESULT_NOTHROW_LEAF_LIST)\n DEF_ATTR_TREE_LIST (ATTR_SENTINEL_NOTHROW_LIST, ATTR_SENTINEL,\t\\\n \t\t\tATTR_NULL, ATTR_NOTHROW_LIST)\n DEF_ATTR_TREE_LIST (ATTR_SENTINEL_NOTHROW_LEAF_LIST, ATTR_SENTINEL,\t\\\n@@ -170,24 +173,26 @@ DEF_ATTR_TREE_LIST (ATTR_COLD_CONST_NORETURN_NOTHROW_LEAF_LIST, ATTR_CONST,\\\n    with _SIZE_1, or second argument with _SIZE_2, specifies the size\n    of the allocated object.  */\n DEF_ATTR_TREE_LIST (ATTR_MALLOC_SIZE_1_NOTHROW_LIST, ATTR_ALLOC_SIZE,\t\\\n-\t\t\tATTR_LIST_1, ATTR_MALLOC_NOTHROW_LIST)\n-DEF_ATTR_TREE_LIST (ATTR_ALLOC_SIZE_2_NOTHROW_LIST, ATTR_ALLOC_SIZE,\t\\\n-\t\t\tATTR_LIST_2, ATTR_MALLOC_NOTHROW_LIST)\n-DEF_ATTR_TREE_LIST (ATTR_MALLOC_SIZE_1_NOTHROW_LEAF_LIST, ATTR_ALLOC_SIZE, \\\n-\t\t        ATTR_LIST_1, ATTR_MALLOC_NOTHROW_LEAF_LIST)\n+\t\t    ATTR_LIST_1, ATTR_MALLOC_NOTHROW_LIST)\n+DEF_ATTR_TREE_LIST (ATTR_MALLOC_WARN_UNUSED_RESULT_NOTHROW_LIST, ATTR_WARN_UNUSED_RESULT,\t\\\n+\t\t    ATTR_NULL, ATTR_MALLOC_NOTHROW_LIST)\n+DEF_ATTR_TREE_LIST (ATTR_ALLOC_WARN_UNUSED_RESULT_SIZE_2_NOTHROW_LIST, ATTR_ALLOC_SIZE,\t\\\n+\t\t    ATTR_LIST_2, ATTR_MALLOC_WARN_UNUSED_RESULT_NOTHROW_LIST)\n+DEF_ATTR_TREE_LIST (ATTR_MALLOC_WARN_UNUSED_RESULT_SIZE_1_NOTHROW_LEAF_LIST, ATTR_ALLOC_SIZE, \\\n+\t\t    ATTR_LIST_1, ATTR_MALLOC_WARN_UNUSED_RESULT_NOTHROW_LEAF_LIST)\n /* Alloca is just like malloc except that it never returns null.  */\n-DEF_ATTR_TREE_LIST (ATTR_ALLOCA_SIZE_1_NOTHROW_LEAF_LIST, ATTR_RETURNS_NONNULL,\n-\t\t    ATTR_NULL, ATTR_MALLOC_SIZE_1_NOTHROW_LEAF_LIST)\n+DEF_ATTR_TREE_LIST (ATTR_ALLOCA_WARN_UNUSED_RESULT_SIZE_1_NOTHROW_LEAF_LIST, ATTR_RETURNS_NONNULL,\n+\t\t    ATTR_NULL, ATTR_MALLOC_WARN_UNUSED_RESULT_SIZE_1_NOTHROW_LEAF_LIST)\n \n /* Allocation functions like calloc the product of whose first two arguments\n    specifies the size of the allocated object.  */\n-DEF_ATTR_TREE_LIST (ATTR_MALLOC_SIZE_1_2_NOTHROW_LEAF_LIST, ATTR_ALLOC_SIZE, \\\n-\t\t        ATTR_LIST_1_2, ATTR_MALLOC_NOTHROW_LEAF_LIST)\n+DEF_ATTR_TREE_LIST (ATTR_MALLOC_WARN_UNUSED_RESULT_SIZE_1_2_NOTHROW_LEAF_LIST, ATTR_ALLOC_SIZE, \\\n+\t\t    ATTR_LIST_1_2, ATTR_MALLOC_WARN_UNUSED_RESULT_NOTHROW_LEAF_LIST)\n \n /* Allocation functions like realloc whose second argument specifies\n    the size of the allocated object.  */\n-DEF_ATTR_TREE_LIST (ATTR_ALLOC_SIZE_2_NOTHROW_LEAF_LIST, ATTR_ALLOC_SIZE, \\\n-\t\t        ATTR_LIST_2, ATTR_NOTHROW_LEAF_LIST)\n+DEF_ATTR_TREE_LIST (ATTR_ALLOC_WARN_UNUSED_RESULT_SIZE_2_NOTHROW_LEAF_LIST, ATTR_ALLOC_SIZE, \\\n+\t\t    ATTR_LIST_2, ATTR_WARN_UNUSED_RESULT_NOTHROW_LEAF_LIST)\n \n /* Functions whose pointer parameter(s) are all nonnull.  */\n DEF_ATTR_TREE_LIST (ATTR_NONNULL_LIST, ATTR_NONNULL, ATTR_NULL, ATTR_NULL)\n@@ -290,11 +295,15 @@ DEF_ATTR_TREE_LIST (ATTR_PURE_NOTHROW_NONNULL, ATTR_PURE, ATTR_NULL, \\\n DEF_ATTR_TREE_LIST (ATTR_PURE_NOTHROW_NONNULL_LEAF, ATTR_PURE, ATTR_NULL, \\\n \t\t\tATTR_NOTHROW_NONNULL_LEAF)\n /* Nothrow malloc functions whose pointer parameter(s) are all nonnull.  */\n-DEF_ATTR_TREE_LIST (ATTR_MALLOC_NOTHROW_NONNULL, ATTR_MALLOC, ATTR_NULL, \\\n+DEF_ATTR_TREE_LIST (ATTR_WARN_UNUSED_RESULT_NOTHROW_NONNULL, ATTR_WARN_UNUSED_RESULT, ATTR_NULL, \\\n \t\t\tATTR_NOTHROW_NONNULL)\n+DEF_ATTR_TREE_LIST (ATTR_MALLOC_WARN_UNUSED_RESULT_NOTHROW_NONNULL, ATTR_MALLOC, ATTR_NULL, \\\n+\t\t\tATTR_WARN_UNUSED_RESULT_NOTHROW_NONNULL)\n /* Nothrow malloc leaf functions whose pointer parameter(s) are all nonnull.  */\n-DEF_ATTR_TREE_LIST (ATTR_MALLOC_NOTHROW_NONNULL_LEAF, ATTR_MALLOC, ATTR_NULL, \\\n+DEF_ATTR_TREE_LIST (ATTR_WARN_UNUSED_RESULT_NOTHROW_NONNULL_LEAF, ATTR_WARN_UNUSED_RESULT, ATTR_NULL, \\\n \t\t\tATTR_NOTHROW_NONNULL_LEAF)\n+DEF_ATTR_TREE_LIST (ATTR_MALLOC_WARN_UNUSED_RESULT_NOTHROW_NONNULL_LEAF, ATTR_MALLOC, ATTR_NULL, \\\n+\t\t\tATTR_WARN_UNUSED_RESULT_NOTHROW_NONNULL_LEAF)\n \n /* Construct a tree for the format attribute (and implicitly nonnull).  */\n #define DEF_FORMAT_ATTRIBUTE(TYPE, FA, VALUES)\t\t\t\t \\"}, {"sha": "6d41bdb4f44e874d2a9af8934e474388296b63c5", "filename": "gcc/builtins.def", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8e2acff118bfa0dcd3aaf299e1f78dfc5266cbd/gcc%2Fbuiltins.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8e2acff118bfa0dcd3aaf299e1f78dfc5266cbd/gcc%2Fbuiltins.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.def?ref=b8e2acff118bfa0dcd3aaf299e1f78dfc5266cbd", "patch": "@@ -288,7 +288,7 @@ DEF_C99_BUILTIN        (BUILT_IN_ACOSH, \"acosh\", BT_FN_DOUBLE_DOUBLE, ATTR_MATHF\n DEF_C99_BUILTIN        (BUILT_IN_ACOSHF, \"acoshf\", BT_FN_FLOAT_FLOAT, ATTR_MATHFN_FPROUNDING_ERRNO)\n DEF_C99_BUILTIN        (BUILT_IN_ACOSHL, \"acoshl\", BT_FN_LONGDOUBLE_LONGDOUBLE, ATTR_MATHFN_FPROUNDING_ERRNO)\n DEF_C99_C90RES_BUILTIN (BUILT_IN_ACOSL, \"acosl\", BT_FN_LONGDOUBLE_LONGDOUBLE, ATTR_MATHFN_FPROUNDING_ERRNO)\n-DEF_C11_BUILTIN        (BUILT_IN_ALIGNED_ALLOC, \"aligned_alloc\", BT_FN_PTR_SIZE_SIZE, ATTR_ALLOC_SIZE_2_NOTHROW_LIST)\n+DEF_C11_BUILTIN        (BUILT_IN_ALIGNED_ALLOC, \"aligned_alloc\", BT_FN_PTR_SIZE_SIZE, ATTR_ALLOC_WARN_UNUSED_RESULT_SIZE_2_NOTHROW_LIST)\n DEF_LIB_BUILTIN        (BUILT_IN_ASIN, \"asin\", BT_FN_DOUBLE_DOUBLE, ATTR_MATHFN_FPROUNDING_ERRNO)\n DEF_C99_C90RES_BUILTIN (BUILT_IN_ASINF, \"asinf\", BT_FN_FLOAT_FLOAT, ATTR_MATHFN_FPROUNDING_ERRNO)\n DEF_C99_BUILTIN        (BUILT_IN_ASINH, \"asinh\", BT_FN_DOUBLE_DOUBLE, ATTR_MATHFN_FPROUNDING)\n@@ -702,8 +702,8 @@ DEF_LIB_BUILTIN        (BUILT_IN_STRCHR, \"strchr\", BT_FN_STRING_CONST_STRING_INT\n DEF_LIB_BUILTIN        (BUILT_IN_STRCMP, \"strcmp\", BT_FN_INT_CONST_STRING_CONST_STRING, ATTR_PURE_NOTHROW_NONNULL_LEAF)\n DEF_LIB_BUILTIN        (BUILT_IN_STRCPY, \"strcpy\", BT_FN_STRING_STRING_CONST_STRING, ATTR_RET1_NOTHROW_NONNULL_LEAF)\n DEF_LIB_BUILTIN        (BUILT_IN_STRCSPN, \"strcspn\", BT_FN_SIZE_CONST_STRING_CONST_STRING, ATTR_PURE_NOTHROW_NONNULL_LEAF)\n-DEF_EXT_LIB_BUILTIN    (BUILT_IN_STRDUP, \"strdup\", BT_FN_STRING_CONST_STRING, ATTR_MALLOC_NOTHROW_NONNULL_LEAF)\n-DEF_EXT_LIB_BUILTIN    (BUILT_IN_STRNDUP, \"strndup\", BT_FN_STRING_CONST_STRING_SIZE, ATTR_MALLOC_NOTHROW_NONNULL_LEAF)\n+DEF_EXT_LIB_BUILTIN    (BUILT_IN_STRDUP, \"strdup\", BT_FN_STRING_CONST_STRING, ATTR_MALLOC_WARN_UNUSED_RESULT_NOTHROW_NONNULL_LEAF)\n+DEF_EXT_LIB_BUILTIN    (BUILT_IN_STRNDUP, \"strndup\", BT_FN_STRING_CONST_STRING_SIZE, ATTR_MALLOC_WARN_UNUSED_RESULT_NOTHROW_NONNULL_LEAF)\n DEF_LIB_BUILTIN        (BUILT_IN_STRLEN, \"strlen\", BT_FN_SIZE_CONST_STRING, ATTR_PURE_NOTHROW_NONNULL_LEAF)\n DEF_EXT_LIB_BUILTIN    (BUILT_IN_STRNCASECMP, \"strncasecmp\", BT_FN_INT_CONST_STRING_CONST_STRING_SIZE, ATTR_PURE_NOTHROW_NONNULL_LEAF)\n DEF_LIB_BUILTIN        (BUILT_IN_STRNCAT, \"strncat\", BT_FN_STRING_STRING_CONST_STRING_SIZE, ATTR_RET1_NOTHROW_NONNULL_LEAF)\n@@ -811,15 +811,15 @@ DEF_GCC_BUILTIN        (BUILT_IN_UMULLL_OVERFLOW, \"umulll_overflow\", BT_FN_BOOL_\n DEF_LIB_BUILTIN        (BUILT_IN_ABORT, \"abort\", BT_FN_VOID, ATTR_TMPURE_NORETURN_NOTHROW_LEAF_COLD_LIST)\n DEF_LIB_BUILTIN        (BUILT_IN_ABS, \"abs\", BT_FN_INT_INT, ATTR_CONST_NOTHROW_LEAF_LIST)\n DEF_GCC_BUILTIN        (BUILT_IN_AGGREGATE_INCOMING_ADDRESS, \"aggregate_incoming_address\", BT_FN_PTR_VAR, ATTR_LEAF_LIST)\n-DEF_EXT_LIB_BUILTIN    (BUILT_IN_ALLOCA, \"alloca\", BT_FN_PTR_SIZE, ATTR_ALLOCA_SIZE_1_NOTHROW_LEAF_LIST)\n+DEF_EXT_LIB_BUILTIN    (BUILT_IN_ALLOCA, \"alloca\", BT_FN_PTR_SIZE, ATTR_ALLOCA_WARN_UNUSED_RESULT_SIZE_1_NOTHROW_LEAF_LIST)\n DEF_GCC_BUILTIN        (BUILT_IN_APPLY, \"apply\", BT_FN_PTR_PTR_FN_VOID_VAR_PTR_SIZE, ATTR_NULL)\n DEF_GCC_BUILTIN        (BUILT_IN_APPLY_ARGS, \"apply_args\", BT_FN_PTR_VAR, ATTR_LEAF_LIST)\n DEF_GCC_BUILTIN        (BUILT_IN_BSWAP16, \"bswap16\", BT_FN_UINT16_UINT16, ATTR_CONST_NOTHROW_LEAF_LIST)\n DEF_GCC_BUILTIN        (BUILT_IN_BSWAP32, \"bswap32\", BT_FN_UINT32_UINT32, ATTR_CONST_NOTHROW_LEAF_LIST)\n DEF_GCC_BUILTIN        (BUILT_IN_BSWAP64, \"bswap64\", BT_FN_UINT64_UINT64, ATTR_CONST_NOTHROW_LEAF_LIST)\n DEF_EXT_LIB_BUILTIN    (BUILT_IN_CLEAR_CACHE, \"__clear_cache\", BT_FN_VOID_PTR_PTR, ATTR_NOTHROW_LEAF_LIST)\n /* [trans-mem]: Adjust BUILT_IN_TM_CALLOC if BUILT_IN_CALLOC is changed.  */\n-DEF_LIB_BUILTIN        (BUILT_IN_CALLOC, \"calloc\", BT_FN_PTR_SIZE_SIZE, ATTR_MALLOC_SIZE_1_2_NOTHROW_LEAF_LIST)\n+DEF_LIB_BUILTIN        (BUILT_IN_CALLOC, \"calloc\", BT_FN_PTR_SIZE_SIZE, ATTR_MALLOC_WARN_UNUSED_RESULT_SIZE_1_2_NOTHROW_LEAF_LIST)\n DEF_GCC_BUILTIN        (BUILT_IN_CLASSIFY_TYPE, \"classify_type\", BT_FN_INT_VAR, ATTR_LEAF_LIST)\n DEF_GCC_BUILTIN        (BUILT_IN_CLZ, \"clz\", BT_FN_INT_UINT, ATTR_CONST_NOTHROW_LEAF_LIST)\n DEF_GCC_BUILTIN        (BUILT_IN_CLZIMAX, \"clzimax\", BT_FN_INT_UINTMAX, ATTR_CONST_NOTHROW_LEAF_LIST)\n@@ -896,7 +896,7 @@ DEF_LIB_BUILTIN        (BUILT_IN_LABS, \"labs\", BT_FN_LONG_LONG, ATTR_CONST_NOTHR\n DEF_C99_BUILTIN        (BUILT_IN_LLABS, \"llabs\", BT_FN_LONGLONG_LONGLONG, ATTR_CONST_NOTHROW_LEAF_LIST)\n DEF_GCC_BUILTIN        (BUILT_IN_LONGJMP, \"longjmp\", BT_FN_VOID_PTR_INT, ATTR_NORETURN_NOTHROW_LIST)\n /* [trans-mem]: Adjust BUILT_IN_TM_MALLOC if BUILT_IN_MALLOC is changed.  */\n-DEF_LIB_BUILTIN        (BUILT_IN_MALLOC, \"malloc\", BT_FN_PTR_SIZE, ATTR_MALLOC_SIZE_1_NOTHROW_LEAF_LIST)\n+DEF_LIB_BUILTIN        (BUILT_IN_MALLOC, \"malloc\", BT_FN_PTR_SIZE, ATTR_MALLOC_WARN_UNUSED_RESULT_SIZE_1_NOTHROW_LEAF_LIST)\n DEF_GCC_BUILTIN        (BUILT_IN_NEXT_ARG, \"next_arg\", BT_FN_PTR_VAR, ATTR_LEAF_LIST)\n DEF_GCC_BUILTIN        (BUILT_IN_PARITY, \"parity\", BT_FN_INT_UINT, ATTR_CONST_NOTHROW_LEAF_LIST)\n DEF_GCC_BUILTIN        (BUILT_IN_PARITYIMAX, \"parityimax\", BT_FN_INT_UINTMAX, ATTR_CONST_NOTHROW_LEAF_LIST)\n@@ -908,7 +908,7 @@ DEF_GCC_BUILTIN        (BUILT_IN_POPCOUNTL, \"popcountl\", BT_FN_INT_ULONG, ATTR_C\n DEF_GCC_BUILTIN        (BUILT_IN_POPCOUNTLL, \"popcountll\", BT_FN_INT_ULONGLONG, ATTR_CONST_NOTHROW_LEAF_LIST)\n DEF_EXT_LIB_BUILTIN    (BUILT_IN_POSIX_MEMALIGN, \"posix_memalign\", BT_FN_INT_PTRPTR_SIZE_SIZE, ATTR_NOTHROW_NONNULL_LEAF)\n DEF_GCC_BUILTIN        (BUILT_IN_PREFETCH, \"prefetch\", BT_FN_VOID_CONST_PTR_VAR, ATTR_NOVOPS_LEAF_LIST)\n-DEF_LIB_BUILTIN        (BUILT_IN_REALLOC, \"realloc\", BT_FN_PTR_PTR_SIZE, ATTR_ALLOC_SIZE_2_NOTHROW_LEAF_LIST)\n+DEF_LIB_BUILTIN        (BUILT_IN_REALLOC, \"realloc\", BT_FN_PTR_PTR_SIZE, ATTR_ALLOC_WARN_UNUSED_RESULT_SIZE_2_NOTHROW_LEAF_LIST)\n DEF_GCC_BUILTIN        (BUILT_IN_RETURN, \"return\", BT_FN_VOID_PTR, ATTR_NORETURN_NOTHROW_LEAF_LIST)\n DEF_GCC_BUILTIN        (BUILT_IN_RETURN_ADDRESS, \"return_address\", BT_FN_PTR_UINT, ATTR_LEAF_LIST)\n DEF_GCC_BUILTIN        (BUILT_IN_SAVEREGS, \"saveregs\", BT_FN_PTR_VAR, ATTR_NULL)"}, {"sha": "d5f5cd469f0c1e76e14b79eee122a9ce0a6473f4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8e2acff118bfa0dcd3aaf299e1f78dfc5266cbd/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8e2acff118bfa0dcd3aaf299e1f78dfc5266cbd/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b8e2acff118bfa0dcd3aaf299e1f78dfc5266cbd", "patch": "@@ -1,3 +1,19 @@\n+2019-06-07  Martin Liska  <mliska@suse.cz>\n+\n+\tPR tree-optimization/78902\n+\t* c-c++-common/asan/alloca_loop_unpoisoning.c: Use result\n+\tof __builtin_alloca.\n+\t* c-c++-common/asan/pr88619.c: Likewise.\n+\t* g++.dg/overload/using2.C: Likewise for malloc.\n+\t* gcc.dg/attr-alloc_size-5.c: Add new dg-warning.\n+\t* gcc.dg/nonnull-3.c: Use result of __builtin_strdup.\n+\t* gcc.dg/pr43643.c: Likewise.\n+\t* gcc.dg/pr59717.c: Likewise for calloc.\n+\t* gcc.dg/torture/pr71816.c: Likewise.\n+\t* gcc.dg/tree-ssa/pr78886.c: Likewise.\n+\t* gcc.dg/tree-ssa/pr79697.c: Likewise.\n+\t* gcc.dg/pr78902.c: New test.\n+\n 2019-06-06  Iain Sandoe  <iain@sandoe.co.uk>\n \n \t* g++.dg/cpp0x/alignas4.C: Amend test to check for zerofill syntax"}, {"sha": "3050d3ba94b1f640a7cf592671231ab9ce2e796a", "filename": "gcc/testsuite/c-c++-common/asan/alloca_loop_unpoisoning.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8e2acff118bfa0dcd3aaf299e1f78dfc5266cbd/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Falloca_loop_unpoisoning.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8e2acff118bfa0dcd3aaf299e1f78dfc5266cbd/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Falloca_loop_unpoisoning.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Falloca_loop_unpoisoning.c?ref=b8e2acff118bfa0dcd3aaf299e1f78dfc5266cbd", "patch": "@@ -17,7 +17,7 @@ __attribute__((noinline)) void foo(int len) {\n   top = &x;\n   volatile char array[len];\n   assert(!((uintptr_t) array & 31L));\n-  __builtin_alloca(len);\n+  void *p = __builtin_alloca(len);\n   for (int i = 0; i < thirty_two; ++i) {\n     char array[i];\n     bot = array;"}, {"sha": "fd3fbf1a73a68f1e88c64065eee8f5f0b7d4f965", "filename": "gcc/testsuite/c-c++-common/asan/pr88619.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8e2acff118bfa0dcd3aaf299e1f78dfc5266cbd/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fpr88619.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8e2acff118bfa0dcd3aaf299e1f78dfc5266cbd/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fpr88619.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fpr88619.c?ref=b8e2acff118bfa0dcd3aaf299e1f78dfc5266cbd", "patch": "@@ -10,5 +10,5 @@ main ()\n   A b;\n   int *p = &b;\n   *(p - 1) = 123;\n-  __builtin_alloca (b);\n+  void *p2 = __builtin_alloca (b);\n }"}, {"sha": "edfd1a10ac46a09c767eae4e7ca206aa9c0ec3a0", "filename": "gcc/testsuite/g++.dg/overload/using2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8e2acff118bfa0dcd3aaf299e1f78dfc5266cbd/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Fusing2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8e2acff118bfa0dcd3aaf299e1f78dfc5266cbd/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Fusing2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Fusing2.C?ref=b8e2acff118bfa0dcd3aaf299e1f78dfc5266cbd", "patch": "@@ -69,7 +69,7 @@ using std::C3; using other::C3;\n   long C3 (long) throw ();\n \n int main () {\n-  malloc (0);\n+  void *p = malloc (0);\n   exit (0);\n \n   _exit (0); // { dg-error \"ambiguous\" }"}, {"sha": "7aa7cbf0c72fcec49e80ef3109c5456ffeeff8e6", "filename": "gcc/testsuite/gcc.dg/attr-alloc_size-5.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8e2acff118bfa0dcd3aaf299e1f78dfc5266cbd/gcc%2Ftestsuite%2Fgcc.dg%2Fattr-alloc_size-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8e2acff118bfa0dcd3aaf299e1f78dfc5266cbd/gcc%2Ftestsuite%2Fgcc.dg%2Fattr-alloc_size-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fattr-alloc_size-5.c?ref=b8e2acff118bfa0dcd3aaf299e1f78dfc5266cbd", "patch": "@@ -230,5 +230,5 @@ test_alloca (size_t n)\n {\n   extern void* alloca (size_t);\n \n-  alloca (0);\n+  alloca (0); /* { dg-warning \"ignoring return value of '.*' declared with attribute 'warn_unused_result'\" } */\n }"}, {"sha": "6f7bc4f429517ede15ffb304e1bee626c3172cab", "filename": "gcc/testsuite/gcc.dg/nonnull-3.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8e2acff118bfa0dcd3aaf299e1f78dfc5266cbd/gcc%2Ftestsuite%2Fgcc.dg%2Fnonnull-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8e2acff118bfa0dcd3aaf299e1f78dfc5266cbd/gcc%2Ftestsuite%2Fgcc.dg%2Fnonnull-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fnonnull-3.c?ref=b8e2acff118bfa0dcd3aaf299e1f78dfc5266cbd", "patch": "@@ -56,8 +56,8 @@ foo (void *p, char *s)\n   __builtin_strspn (s, NULL);  /* { dg-warning \"null\" \"null pointer check\" } */\n   __builtin_strchr (NULL, 16);  /* { dg-warning \"null\" \"null pointer check\" } */\n   __builtin_strrchr (NULL, 16);  /* { dg-warning \"null\" \"null pointer check\" } */\n-  __builtin_strdup (NULL);  /* { dg-warning \"null\" \"null pointer check\" } */\n-  __builtin_strndup (NULL, 16);  /* { dg-warning \"null\" \"null pointer check\" } */\n+  void *p1 = __builtin_strdup (NULL);  /* { dg-warning \"null\" \"null pointer check\" } */\n+  void *p2 = __builtin_strndup (NULL, 16);  /* { dg-warning \"null\" \"null pointer check\" } */\n \n   __builtin_nan (NULL);  /* { dg-warning \"null\" \"null pointer check\" } */\n   __builtin_nanf (NULL);  /* { dg-warning \"null\" \"null pointer check\" } */"}, {"sha": "43896abd85af2442a1ad6d00bb28dcdbc037839e", "filename": "gcc/testsuite/gcc.dg/pr43643.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8e2acff118bfa0dcd3aaf299e1f78dfc5266cbd/gcc%2Ftestsuite%2Fgcc.dg%2Fpr43643.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8e2acff118bfa0dcd3aaf299e1f78dfc5266cbd/gcc%2Ftestsuite%2Fgcc.dg%2Fpr43643.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr43643.c?ref=b8e2acff118bfa0dcd3aaf299e1f78dfc5266cbd", "patch": "@@ -10,9 +10,9 @@ extern char *strdup (const char *);\n void\n func(char *a, char *b, char *c)\n {\n-  strdup(a);\n-  strdup(b);\n-  strdup(c);\n+  void *p = strdup(a);\n+  p = strdup(b);\n+  p = strdup(c);\n }\n \n int"}, {"sha": "64e4f32197f054e40302be4280c984ba482bd045", "filename": "gcc/testsuite/gcc.dg/pr59717.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8e2acff118bfa0dcd3aaf299e1f78dfc5266cbd/gcc%2Ftestsuite%2Fgcc.dg%2Fpr59717.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8e2acff118bfa0dcd3aaf299e1f78dfc5266cbd/gcc%2Ftestsuite%2Fgcc.dg%2Fpr59717.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr59717.c?ref=b8e2acff118bfa0dcd3aaf299e1f78dfc5266cbd", "patch": "@@ -242,7 +242,7 @@ stdlib (void *p, void *q, __SIZE_TYPE__ sz)\n {\n   abort (); /* { dg-warning \"incompatible implicit\" } */\n   /* { dg-message \"include ..stdlib.h..\" \"\" { target *-*-* } .-1 } */\n-  calloc (sz, 1); /* { dg-warning \"incompatible implicit\" } */\n+  void *p1 = calloc (sz, 1); /* { dg-warning \"incompatible implicit\" } */\n   /* { dg-message \"include ..stdlib.h..\" \"\" { target *-*-* } .-1 } */\n   exit (1); /* { dg-warning \"incompatible implicit\" } */\n   /* { dg-message \"include ..stdlib.h..\" \"\" { target *-*-* } .-1 } */\n@@ -252,11 +252,11 @@ stdlib (void *p, void *q, __SIZE_TYPE__ sz)\n   /* { dg-message \"include ..stdlib.h..\" \"\" { target *-*-* } .-1 } */\n   llabs (1LL); /* { dg-warning \"incompatible implicit\" } */\n   /* { dg-message \"include ..stdlib.h..\" \"\" { target *-*-* } .-1 } */\n-  malloc (sz); /* { dg-warning \"incompatible implicit\" } */\n+  void *p2 = malloc (sz); /* { dg-warning \"incompatible implicit\" } */\n   /* { dg-message \"include ..stdlib.h..\" \"\" { target *-*-* } .-1 } */\n-  realloc (p, sz); /* { dg-warning \"incompatible implicit\" } */\n+  void *p3 = realloc (p, sz); /* { dg-warning \"incompatible implicit\" } */\n   /* { dg-message \"include ..stdlib.h..\" \"\" { target *-*-* } .-1 } */\n-  aligned_alloc (sz, sz); /* { dg-warning \"incompatible implicit\" } */\n+  void *p4 = aligned_alloc (sz, sz); /* { dg-warning \"incompatible implicit\" } */\n   /* { dg-message \"include ..stdlib.h..\" \"\" { target *-*-* } .-1 } */\n }\n "}, {"sha": "49efc970475de2ea456370c0735b8de8948315ba", "filename": "gcc/testsuite/gcc.dg/pr78902.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8e2acff118bfa0dcd3aaf299e1f78dfc5266cbd/gcc%2Ftestsuite%2Fgcc.dg%2Fpr78902.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8e2acff118bfa0dcd3aaf299e1f78dfc5266cbd/gcc%2Ftestsuite%2Fgcc.dg%2Fpr78902.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr78902.c?ref=b8e2acff118bfa0dcd3aaf299e1f78dfc5266cbd", "patch": "@@ -0,0 +1,14 @@\n+/* { dg-do compile } */\n+\n+void *ptr;\n+\n+void foo(void)\n+{\n+ __builtin_malloc (1); /* { dg-warning \"ignoring return value of '__builtin_malloc' declared with attribute 'warn_unused_result'\" } */\n+ __builtin_calloc (10, 20); /* { dg-warning \"ignoring return value of '__builtin_calloc' declared with attribute 'warn_unused_result'\" } */\n+ __builtin_alloca (10); /* { dg-warning \"ignoring return value of '__builtin_alloca' declared with attribute 'warn_unused_result'\" } */\n+ __builtin_realloc (ptr, 100); /* { dg-warning \"ignoring return value of '__builtin_realloc' declared with attribute 'warn_unused_result'\" } */\n+ __builtin_aligned_alloc (10, 16); /* { dg-warning \"ignoring return value of '__builtin_aligned_alloc' declared with attribute 'warn_unused_result'\" } */\n+ __builtin_strdup (\"pes\"); /* { dg-warning \"ignoring return value of '__builtin_strdup' declared with attribute 'warn_unused_result'\" } */\n+ __builtin_strndup (\"pes\", 10); /* { dg-warning \"ignoring return value of '__builtin_strndup' declared with attribute 'warn_unused_result'\" } */\n+}"}, {"sha": "be37ad921bddcacceddff700859258d8195d3f85", "filename": "gcc/testsuite/gcc.dg/torture/pr71816.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8e2acff118bfa0dcd3aaf299e1f78dfc5266cbd/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr71816.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8e2acff118bfa0dcd3aaf299e1f78dfc5266cbd/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr71816.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr71816.c?ref=b8e2acff118bfa0dcd3aaf299e1f78dfc5266cbd", "patch": "@@ -11,7 +11,7 @@ void *realloc();\n int ext2fs_resize_mem(void *p1) {\n     int size = 0;\n     memcpy(&ext2fs_resize_mem_p, p1, sizeof(ext2fs_resize_mem_p));\n-    realloc(&ext2fs_resize_mem_p, size);\n+    void *p = realloc(&ext2fs_resize_mem_p, size);\n     return 0;\n }\n struct ext2_icount_el *insert_icount_el() {"}, {"sha": "7f62891b77bde749944a5ccf3e8c47d9ff76a597", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr78886.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8e2acff118bfa0dcd3aaf299e1f78dfc5266cbd/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr78886.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8e2acff118bfa0dcd3aaf299e1f78dfc5266cbd/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr78886.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr78886.c?ref=b8e2acff118bfa0dcd3aaf299e1f78dfc5266cbd", "patch": "@@ -7,6 +7,6 @@ void *malloc(size_t x);\n void foo(void)\n {\n  volatile int i;\n- malloc(1);\n+ void *p = malloc(1);\n  i;\n }"}, {"sha": "e62efd5de617cc91ac0032945085aa27caa4c53b", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr79697.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8e2acff118bfa0dcd3aaf299e1f78dfc5266cbd/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr79697.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8e2acff118bfa0dcd3aaf299e1f78dfc5266cbd/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr79697.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr79697.c?ref=b8e2acff118bfa0dcd3aaf299e1f78dfc5266cbd", "patch": "@@ -3,17 +3,17 @@\n \n void f(void)\n {\n-  __builtin_strdup (\"abc\");\n+  __builtin_strdup (\"abc\"); /* { dg-warning \"ignoring return value of '__builtin_strdup' declared with attribute 'warn_unused_result'\" } */\n }\n \n void g(void)\n {\n-  __builtin_strndup (\"abc\", 3);\n+  __builtin_strndup (\"abc\", 3); /* { dg-warning \"ignoring return value of '__builtin_strndup' declared with attribute 'warn_unused_result'\" } */\n }\n \n void h(void)\n {\n-  __builtin_realloc (0, 10);\n+  __builtin_realloc (0, 10); /* { dg-warning \"ignoring return value of '__builtin_realloc' declared with attribute 'warn_unused_result'\" } */\n }\n \n /* { dg-final { scan-tree-dump \"Deleting : __builtin_strdup\" \"cddce1\" } } */"}]}