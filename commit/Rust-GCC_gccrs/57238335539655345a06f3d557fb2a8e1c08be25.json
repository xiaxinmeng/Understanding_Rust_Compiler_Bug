{"sha": "57238335539655345a06f3d557fb2a8e1c08be25", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTcyMzgzMzU1Mzk2NTUzNDVhMDZmM2Q1NTdmYjJhOGUxYzA4YmUyNQ==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2008-04-08T06:56:09Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-04-08T06:56:09Z"}, "message": "styleg.adb (Check_Comment): Allow special char after -- in non-end-of-line case\n\n2008-04-08  Robert Dewar  <dewar@adacore.com>\n\n\t* styleg.adb (Check_Comment): Allow special char after -- in\n\tnon-end-of-line case\n\nFrom-SVN: r134054", "tree": {"sha": "eccb53983376099310c00bec5346d7dcd824b9ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eccb53983376099310c00bec5346d7dcd824b9ed"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/57238335539655345a06f3d557fb2a8e1c08be25", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57238335539655345a06f3d557fb2a8e1c08be25", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57238335539655345a06f3d557fb2a8e1c08be25", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57238335539655345a06f3d557fb2a8e1c08be25/comments", "author": null, "committer": null, "parents": [{"sha": "54e1f2f0dfb42e39fbaea22f8ba41559f760357f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54e1f2f0dfb42e39fbaea22f8ba41559f760357f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/54e1f2f0dfb42e39fbaea22f8ba41559f760357f"}], "stats": {"total": 44, "additions": 28, "deletions": 16}, "files": [{"sha": "faa516cdfe1da453e07795f485e22bef59051a8a", "filename": "gcc/ada/styleg.adb", "status": "modified", "additions": 28, "deletions": 16, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57238335539655345a06f3d557fb2a8e1c08be25/gcc%2Fada%2Fstyleg.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57238335539655345a06f3d557fb2a8e1c08be25/gcc%2Fada%2Fstyleg.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fstyleg.adb?ref=57238335539655345a06f3d557fb2a8e1c08be25", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -238,7 +238,8 @@ package body Styleg is\n \n    --    1. Any comment that is not at the start of a line, i.e. where the\n    --       initial minuses are not the first non-blank characters on the\n-   --       line must have at least one blank after the second minus.\n+   --       line must have at least one blank after the second minus or a\n+   --       special character as defined in rule 5.\n \n    --    2. A row of all minuses of any length is permitted (see procedure\n    --       box above in the source of this routine).\n@@ -274,6 +275,9 @@ package body Styleg is\n       --  Returns True if the last two characters on the line are -- which\n       --  characterizes a box comment (as for example follows this spec).\n \n+      function Is_Special_Character (C : Character) return Boolean;\n+      --  Determines if C is a special character (see rule 5 above)\n+\n       function Same_Column_As_Next_Non_Blank_Line return Boolean;\n       --  Called for a full line comment. If the indentation of this commment\n       --  matches that of the next non-blank line in the source, then True is\n@@ -297,6 +301,22 @@ package body Styleg is\n          return Source (S - 1) = '-' and then Source (S - 2) = '-';\n       end Is_Box_Comment;\n \n+      --------------------------\n+      -- Is_Special_Character --\n+      --------------------------\n+\n+      function Is_Special_Character (C : Character) return Boolean is\n+      begin\n+         if GNAT_Mode then\n+            return C = '!';\n+         else\n+            return\n+              Character'Pos (C) in 16#21# .. 16#2F#\n+                or else\n+              Character'Pos (C) in 16#3A# .. 16#3F#;\n+         end if;\n+      end Is_Special_Character;\n+\n       ----------------------------------------\n       -- Same_Column_As_Next_Non_Blank_Line --\n       ----------------------------------------\n@@ -338,11 +358,13 @@ package body Styleg is\n \n       --  For a comment that is not at the start of the line, the only\n       --  requirement is that we cannot have a non-blank character after\n-      --  the second minus sign.\n+      --  the second minus sign or a special character.\n \n       if Scan_Ptr /= First_Non_Blank_Location then\n          if Style_Check_Comments then\n-            if Source (Scan_Ptr + 2) > ' ' then\n+            if Source (Scan_Ptr + 2) > ' '\n+              and then not Is_Special_Character (Source (Scan_Ptr + 2))\n+            then\n                Error_Msg (\"(style) space required\", Scan_Ptr + 2);\n             end if;\n          end if;\n@@ -386,18 +408,8 @@ package body Styleg is\n             --  This is not permitted in internal GNAT implementation units\n             --  except for the case of --! as used by gnatprep output.\n \n-            if GNAT_Mode then\n-               if C = '!' then\n-                  return;\n-               end if;\n-\n-            else\n-               if Character'Pos (C) in 16#21# .. 16#2F#\n-                    or else\n-                  Character'Pos (C) in 16#3A# .. 16#3F#\n-               then\n-                  return;\n-               end if;\n+            if Is_Special_Character (C) then\n+               return;\n             end if;\n \n             --  The only other case in which we allow a character after"}]}