{"sha": "2538ff0d242b1a1a29f7a4a87c70e9bb2df109e9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjUzOGZmMGQyNDJiMWExYTI5ZjdhNGE4N2M3MGU5YmIyZGYxMDllOQ==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2019-11-28T22:28:59Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2019-11-28T22:28:59Z"}, "message": "rs6000: Use memory_operand for all simple {l,st}*brx instructions\n\nWe run fwprop before combine, very early even in the case of fwprop1;\nand fwprop1 will change memory addressing to what it considers cheaper.\nAfter the \"common\" change, it now changes the indexed store instruction\nin the testcase to be to a constant address.  But that is not an\nimprovement at all: the byte reverse instructions only exist in the\nindexed form, so they will not match anymore.\n\nThis patch changes the patterns for the byte reverse instructions to\nallow plain memory_operand, letting reload fix this up.\n\n\n\tPR target/92602\n\t* config/rs6000/rs6000.md (bswap<mode>2_load for HSI): Change the\n\tindexed_or_indirect_operand to be memory_operand.\n\t(bswap<mode>2_store for HSI): Ditto.\n\t(bswapdi2_load): Ditto.\n\t(bswapdi2_store): Ditto.\n\nFrom-SVN: r278821", "tree": {"sha": "719483de0f87f5e1086edafdadc4aedd9f911aaa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/719483de0f87f5e1086edafdadc4aedd9f911aaa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2538ff0d242b1a1a29f7a4a87c70e9bb2df109e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2538ff0d242b1a1a29f7a4a87c70e9bb2df109e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2538ff0d242b1a1a29f7a4a87c70e9bb2df109e9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2538ff0d242b1a1a29f7a4a87c70e9bb2df109e9/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "03df119db4f54905f46dbaa4d5bd733200c1c4dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03df119db4f54905f46dbaa4d5bd733200c1c4dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/03df119db4f54905f46dbaa4d5bd733200c1c4dd"}], "stats": {"total": 17, "additions": 13, "deletions": 4}, "files": [{"sha": "3c8f8d3346e974b9aaec695333da6ea971ed01d1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2538ff0d242b1a1a29f7a4a87c70e9bb2df109e9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2538ff0d242b1a1a29f7a4a87c70e9bb2df109e9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2538ff0d242b1a1a29f7a4a87c70e9bb2df109e9", "patch": "@@ -1,3 +1,12 @@\n+2019-11-28  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\tPR target/92602\n+\t* config/rs6000/rs6000.md (bswap<mode>2_load for HSI): Change the\n+\tindexed_or_indirect_operand to be memory_operand.\n+\t(bswap<mode>2_store for HSI): Ditto.\n+\t(bswapdi2_load): Ditto.\n+\t(bswapdi2_store): Ditto.\n+\n 2019-11-28  Martin Liska  <mliska@suse.cz>\n \n \tPR debug/46558"}, {"sha": "0187ba0a1a33cd73cc6b945a3012bd51297e0d6b", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2538ff0d242b1a1a29f7a4a87c70e9bb2df109e9/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2538ff0d242b1a1a29f7a4a87c70e9bb2df109e9/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=2538ff0d242b1a1a29f7a4a87c70e9bb2df109e9", "patch": "@@ -2510,13 +2510,13 @@\n \n (define_insn \"bswap<mode>2_load\"\n   [(set (match_operand:HSI 0 \"gpc_reg_operand\" \"=r\")\n-\t(bswap:HSI (match_operand:HSI 1 \"indexed_or_indirect_operand\" \"Z\")))]\n+\t(bswap:HSI (match_operand:HSI 1 \"memory_operand\" \"Z\")))]\n   \"\"\n   \"l<wd>brx %0,%y1\"\n   [(set_attr \"type\" \"load\")])\n \n (define_insn \"bswap<mode>2_store\"\n-  [(set (match_operand:HSI 0 \"indexed_or_indirect_operand\" \"=Z\")\n+  [(set (match_operand:HSI 0 \"memory_operand\" \"=Z\")\n \t(bswap:HSI (match_operand:HSI 1 \"gpc_reg_operand\" \"r\")))]\n   \"\"\n   \"st<wd>brx %1,%y0\"\n@@ -2632,13 +2632,13 @@\n ;; Power7/cell has ldbrx/stdbrx, so use it directly\n (define_insn \"bswapdi2_load\"\n   [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=r\")\n-\t(bswap:DI (match_operand:DI 1 \"indexed_or_indirect_operand\" \"Z\")))]\n+\t(bswap:DI (match_operand:DI 1 \"memory_operand\" \"Z\")))]\n   \"TARGET_POWERPC64 && TARGET_LDBRX\"\n   \"ldbrx %0,%y1\"\n   [(set_attr \"type\" \"load\")])\n \n (define_insn \"bswapdi2_store\"\n-  [(set (match_operand:DI 0 \"indexed_or_indirect_operand\" \"=Z\")\n+  [(set (match_operand:DI 0 \"memory_operand\" \"=Z\")\n \t(bswap:DI (match_operand:DI 1 \"gpc_reg_operand\" \"r\")))]\n   \"TARGET_POWERPC64 && TARGET_LDBRX\"\n   \"stdbrx %1,%y0\""}]}