{"sha": "c93e9e16fb2f98cf147efa3710c7d41fceecff54", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzkzZTllMTZmYjJmOThjZjE0N2VmYTM3MTBjN2Q0MWZjZWVjZmY1NA==", "commit": {"author": {"name": "James A. Morrison", "email": "phython@gcc.gnu.org", "date": "2005-02-26T14:01:03Z"}, "committer": {"name": "James A. Morrison", "email": "phython@gcc.gnu.org", "date": "2005-02-26T14:01:03Z"}, "message": "parse.y: Do comparisons as the type of the first expression.\n\n2005-02-26  James A. Morrison  <phython@gcc.gnu.org>\n\n        * parse.y: Do comparisons as the type of the first expression.\n        * treetree.c (tree_code_get_integer_value): Build integer constants\n        with the proper type.\n\nFrom-SVN: r95578", "tree": {"sha": "3ee2fa5b5b26dee05ba50d9f906279dd477341fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3ee2fa5b5b26dee05ba50d9f906279dd477341fc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c93e9e16fb2f98cf147efa3710c7d41fceecff54", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c93e9e16fb2f98cf147efa3710c7d41fceecff54", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c93e9e16fb2f98cf147efa3710c7d41fceecff54", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c93e9e16fb2f98cf147efa3710c7d41fceecff54/comments", "author": null, "committer": null, "parents": [{"sha": "03e3ca0d2b16e568ae6060e3a77109e0c371ce27", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03e3ca0d2b16e568ae6060e3a77109e0c371ce27", "html_url": "https://github.com/Rust-GCC/gccrs/commit/03e3ca0d2b16e568ae6060e3a77109e0c371ce27"}], "stats": {"total": 14, "additions": 12, "deletions": 2}, "files": [{"sha": "c1a2da61190087bc2e96937c73d8f1274cfab80d", "filename": "gcc/treelang/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c93e9e16fb2f98cf147efa3710c7d41fceecff54/gcc%2Ftreelang%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c93e9e16fb2f98cf147efa3710c7d41fceecff54/gcc%2Ftreelang%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftreelang%2FChangeLog?ref=c93e9e16fb2f98cf147efa3710c7d41fceecff54", "patch": "@@ -1,3 +1,9 @@\n+2005-02-26  James A. Morrison  <phython@gcc.gnu.org>\n+\n+\t* parse.y: Do comparisons as the type of the first expression.\n+\t* treetree.c (tree_code_get_integer_value): Build integer constants\n+\twith the proper type.\n+\n 2005-02-26  James A. Morrison  <phython@gcc.gnu.org>\n \n \t* Make-lang.in: Remove commented out code."}, {"sha": "abf2bcbf795fb1f89b6e2fa23d427ce46bfc35ca", "filename": "gcc/treelang/parse.y", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c93e9e16fb2f98cf147efa3710c7d41fceecff54/gcc%2Ftreelang%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c93e9e16fb2f98cf147efa3710c7d41fceecff54/gcc%2Ftreelang%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftreelang%2Fparse.y?ref=c93e9e16fb2f98cf147efa3710c7d41fceecff54", "patch": "@@ -591,8 +591,11 @@ INTEGER {\n   struct prod_token_parm_item *tok = $2;\n   struct prod_token_parm_item *op1 = $1;\n   struct prod_token_parm_item *op2 = $3;\n+  int type_code = NUMERIC_TYPE (op1);\n+  if (!type_code)\n+    YYERROR;\n   $$ = make_plus_expression\n-     (tok, op1, op2, SIGNED_INT, EXP_EQUALS);\n+     (tok, op1, op2, type_code, EXP_EQUALS);\n }\n |variable_ref ASSIGN expression {\n   struct prod_token_parm_item *tok = $2;"}, {"sha": "dcb7cd351a0568058e6d78299e7d65b92a2206a8", "filename": "gcc/treelang/treetree.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c93e9e16fb2f98cf147efa3710c7d41fceecff54/gcc%2Ftreelang%2Ftreetree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c93e9e16fb2f98cf147efa3710c7d41fceecff54/gcc%2Ftreelang%2Ftreetree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftreelang%2Ftreetree.c?ref=c93e9e16fb2f98cf147efa3710c7d41fceecff54", "patch": "@@ -650,7 +650,8 @@ tree_code_get_integer_value (unsigned char* chars, unsigned int length)\n   for (ix = start; ix < length; ix++)\n     val = val * 10 + chars[ix] - (unsigned char)'0';\n   val = val*negative;\n-  return build_int_cst_wide (NULL_TREE,\n+  return build_int_cst_wide (start == 1 ?\n+\t\t\t\tinteger_type_node : unsigned_type_node,\n \t\t\t     val & 0xffffffff, (val >> 32) & 0xffffffff);\n }\n "}]}