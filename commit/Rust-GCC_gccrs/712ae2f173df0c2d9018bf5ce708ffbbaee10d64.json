{"sha": "712ae2f173df0c2d9018bf5ce708ffbbaee10d64", "node_id": "C_kwDOANBUbNoAKDcxMmFlMmYxNzNkZjBjMmQ5MDE4YmY1Y2U3MDhmZmJiYWVlMTBkNjQ", "commit": {"author": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2022-04-28T11:25:26Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2022-04-28T11:25:26Z"}, "message": "Fix equality interface on TyTy::FnType\n\nWe missed a case to ensure the substitutions are equal in the is_equal\ninterface. This becomes important when dealing with generic associated\ntypes since the projections could end up overlapping and we need to\ndifferentiate them by the substitutions and monomorphization.", "tree": {"sha": "44aacf2b029f4b284e6fc120bdf2df082ab21d47", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/44aacf2b029f4b284e6fc120bdf2df082ab21d47"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/712ae2f173df0c2d9018bf5ce708ffbbaee10d64", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/712ae2f173df0c2d9018bf5ce708ffbbaee10d64", "html_url": "https://github.com/Rust-GCC/gccrs/commit/712ae2f173df0c2d9018bf5ce708ffbbaee10d64", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/712ae2f173df0c2d9018bf5ce708ffbbaee10d64/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1ada076b9324982fd6f49aea6456e99613e394a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ada076b9324982fd6f49aea6456e99613e394a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ada076b9324982fd6f49aea6456e99613e394a8"}], "stats": {"total": 13, "additions": 13, "deletions": 0}, "files": [{"sha": "0673d209f0efcc0ba72db4637b50eb0372b9d332", "filename": "gcc/rust/typecheck/rust-tyty.cc", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/712ae2f173df0c2d9018bf5ce708ffbbaee10d64/gcc%2Frust%2Ftypecheck%2Frust-tyty.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/712ae2f173df0c2d9018bf5ce708ffbbaee10d64/gcc%2Frust%2Ftypecheck%2Frust-tyty.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-tyty.cc?ref=712ae2f173df0c2d9018bf5ce708ffbbaee10d64", "patch": "@@ -1230,6 +1230,19 @@ FnType::is_equal (const BaseType &other) const\n     {\n       if (get_num_substitutions () != other2.get_num_substitutions ())\n \treturn false;\n+\n+      const FnType &ofn = static_cast<const FnType &> (other);\n+      for (size_t i = 0; i < get_num_substitutions (); i++)\n+\t{\n+\t  const SubstitutionParamMapping &a = get_substs ().at (i);\n+\t  const SubstitutionParamMapping &b = ofn.get_substs ().at (i);\n+\n+\t  const ParamType *pa = a.get_param_ty ();\n+\t  const ParamType *pb = b.get_param_ty ();\n+\n+\t  if (!pa->is_equal (*pb))\n+\t    return false;\n+\t}\n     }\n \n   if (num_params () != other2.num_params ())"}]}