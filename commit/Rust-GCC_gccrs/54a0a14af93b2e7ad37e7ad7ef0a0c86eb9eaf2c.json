{"sha": "54a0a14af93b2e7ad37e7ad7ef0a0c86eb9eaf2c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTRhMGExNGFmOTNiMmU3YWQzN2U3YWQ3ZWYwYTBjODZlYjllYWYyYw==", "commit": {"author": {"name": "Matthias Klose", "email": "doko@ubuntu.com", "date": "2007-02-20T19:46:57Z"}, "committer": {"name": "Matthias Klose", "email": "doko@gcc.gnu.org", "date": "2007-02-20T19:46:57Z"}, "message": "Makefile.am: Add rules to build and install man pages from texinfo docs.\n\nChangeLog\n\n2007-02-20  Matthias Klose  <doko@ubuntu.com>\n\n        * doc/Makefile.am: Add rules to build and install man pages\n        from texinfo docs.\n        * doc/hacking.texinfo doc/tools.texinfo, doc/vmintegration.texinfo:\n        Rename, prefix files with \"cp-\".\n        * doc/cp-tools.texinfo: Add markup for man page generation,\n        add documentation for command line options for gjar, gjavah,\n        gnative2ascii, gorbd, grmid, grmiregistry, gserialver, gtnameserv.\n        doc/texi2pod.pl: New, taken from the GCC sources.\n\nChangeLog.gcj\n\n2007-02-20  Matthias Klose  <doko@ubuntu.com>\n\n        * Merge doc update from classpath HEAD.\n        * doc/texi2pod.pl: Not imported.\n        * doc/Makefile.am: Use GCC's texi2pod.pl\n        * doc/Makefile.in: Regenerate.\n\nFrom-SVN: r122170", "tree": {"sha": "aae88e448e141dd8326be37982ec5dec34305862", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aae88e448e141dd8326be37982ec5dec34305862"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/54a0a14af93b2e7ad37e7ad7ef0a0c86eb9eaf2c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54a0a14af93b2e7ad37e7ad7ef0a0c86eb9eaf2c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/54a0a14af93b2e7ad37e7ad7ef0a0c86eb9eaf2c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54a0a14af93b2e7ad37e7ad7ef0a0c86eb9eaf2c/comments", "author": {"login": "doko42", "id": 11258518, "node_id": "MDQ6VXNlcjExMjU4NTE4", "avatar_url": "https://avatars.githubusercontent.com/u/11258518?v=4", "gravatar_id": "", "url": "https://api.github.com/users/doko42", "html_url": "https://github.com/doko42", "followers_url": "https://api.github.com/users/doko42/followers", "following_url": "https://api.github.com/users/doko42/following{/other_user}", "gists_url": "https://api.github.com/users/doko42/gists{/gist_id}", "starred_url": "https://api.github.com/users/doko42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/doko42/subscriptions", "organizations_url": "https://api.github.com/users/doko42/orgs", "repos_url": "https://api.github.com/users/doko42/repos", "events_url": "https://api.github.com/users/doko42/events{/privacy}", "received_events_url": "https://api.github.com/users/doko42/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8df79ac594cb3c08f85452b809829151a3cc9f57", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8df79ac594cb3c08f85452b809829151a3cc9f57", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8df79ac594cb3c08f85452b809829151a3cc9f57"}], "stats": {"total": 1279, "additions": 1025, "deletions": 254}, "files": [{"sha": "c95970572e62440db93839dc012075de035e07c5", "filename": "libjava/classpath/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54a0a14af93b2e7ad37e7ad7ef0a0c86eb9eaf2c/libjava%2Fclasspath%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54a0a14af93b2e7ad37e7ad7ef0a0c86eb9eaf2c/libjava%2Fclasspath%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2FChangeLog?ref=54a0a14af93b2e7ad37e7ad7ef0a0c86eb9eaf2c", "patch": "@@ -1,3 +1,14 @@\n+2007-02-20  Matthias Klose  <doko@ubuntu.com>\n+\n+\t* doc/Makefile.am: Add rules to build and install man pages\n+\tfrom texinfo docs.\n+\t* doc/hacking.texinfo doc/tools.texinfo, doc/vmintegration.texinfo:\n+\tRename, prefix files with \"cp-\".\n+\t* doc/cp-tools.texinfo: Add markup for man page generation,\n+\tadd documentation for command line options for gjar, gjavah,\n+\tgnative2ascii, gorbd, grmid, grmiregistry, gserialver, gtnameserv.\n+\tdoc/texi2pod.pl: New, taken from the GCC sources.\n+\n 2006-10-14  Edwin Steiner  <edwin.steiner@gmx.net>\n \n \tPR classpath/28652:"}, {"sha": "9b1af8ee177ccb99bad30c09a654878fc8bd0f4e", "filename": "libjava/classpath/ChangeLog.gcj", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54a0a14af93b2e7ad37e7ad7ef0a0c86eb9eaf2c/libjava%2Fclasspath%2FChangeLog.gcj", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54a0a14af93b2e7ad37e7ad7ef0a0c86eb9eaf2c/libjava%2Fclasspath%2FChangeLog.gcj", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2FChangeLog.gcj?ref=54a0a14af93b2e7ad37e7ad7ef0a0c86eb9eaf2c", "patch": "@@ -1,3 +1,10 @@\n+2007-02-20  Matthias Klose  <doko@ubuntu.com>\n+\n+\t* Merge doc update from classpath HEAD.\n+\t* doc/texi2pod.pl: Not imported.\n+\t* doc/Makefile.am: Use GCC's texi2pod.pl\n+\t* doc/Makefile.in: Regenerate.\n+\n 2007-02-20  Gary Benson  <gbenson@redhat.com>\n \n \t* javax/management/MBeanServer.java: Updated."}, {"sha": "b5d057ad91299401157712f7ef5ac16cf5867184", "filename": "libjava/classpath/doc/Makefile.am", "status": "modified", "additions": 81, "deletions": 4, "changes": 85, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54a0a14af93b2e7ad37e7ad7ef0a0c86eb9eaf2c/libjava%2Fclasspath%2Fdoc%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54a0a14af93b2e7ad37e7ad7ef0a0c86eb9eaf2c/libjava%2Fclasspath%2Fdoc%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fdoc%2FMakefile.am?ref=54a0a14af93b2e7ad37e7ad7ef0a0c86eb9eaf2c", "patch": "@@ -1,14 +1,91 @@\n SUBDIRS = api\n \n-EXTRA_DIST = README.jaxp\n+EXTRA_DIST = README.jaxp $(man_MANS)\n \n-## GCJ LOCAL: we don't want to install Classpath's info files.\n-## info_TEXINFOS = hacking.texinfo vmintegration.texinfo\n+## GCJ LOCAL: we don't want to install all of Classpath's info files.\n+## info_TEXINFOS = cp-hacking.texinfo cp-vmintegration.texinfo cp-tools.texinfo\n \n %.dvi : %.texinfo\n \ttexi2dvi $<\n \n %.ps : %.dvi\n \tdvips -o $@ $<\n \n-docs: hacking.ps vmintegration.ps tools.ps\n+docs: cp-hacking.ps cp-vmintegration.ps cp-tools.ps\n+\n+#man_MANS = $(TOOLS_MANFILES)\n+TOOLS_MANFILES = \\\n+\tgappletviewer.1 \\\n+\tgjar.1 \\\n+\tgjarsigner.1 \\\n+\tgjavah.1 \\\n+\tgkeytool.1 \\\n+\tgnative2ascii.1 \\\n+\tgorbd.1 \\\n+\tgrmid.1 \\\n+\tgrmiregistry.1 \\\n+\tgserialver.1 \\\n+\tgtnameserv.1\n+\n+BASEVER = $(top_srcdir)/../../gcc/BASE-VER\n+DEVPHASE = $(top_srcdir)/../../gcc/DEV-PHASE\n+\n+POD2MAN = pod2man --center=\"GNU\" --release=\"gcc-$(shell cat $(BASEVER))\"\n+TEXI2POD = perl $(top_srcdir)/../../contrib/texi2pod.pl\n+STAMP = echo timestamp >\n+\n+# gcc-vers.texi is generated from the version files.\n+gcc-vers.texi: $(BASEVER) $(DEVPHASE)\n+\t(echo \"@set version-GCC $(shell cat $(BASEVER))\"; \\\n+\t if [ \"$(shell cat $(DEVPHASE))\" = \"experimental\" ]; \\\n+\t then echo \"@set DEVELOPMENT\"; \\\n+\t else echo \"@clear DEVELOPMENT\"; \\\n+\t fi) > $@T\n+\tmv -f $@T $@\n+\n+%.1: %.pod\n+\t$(STAMP) $@\n+\t-($(POD2MAN) --section=1 $< > $(@).T$$$$ && \\\n+\t\tmv -f $(@).T$$$$ $@) || \\\n+\t\t(rm -f $(@).T$$$$ && exit 1)\n+\n+.INTERMEDIATE: gappletviewer.pod gjarsigner.pod gjar.pod gjavah.pod \\\n+\tgkeytool.pod gnative2ascii.pod gorbd.pod grmid.pod grmiregistry.pod \\\n+\tgserialver.pod gtnameserv.pod\n+\n+gappletviewer.pod: $(srcdir)/cp-tools.texinfo\n+\t-$(TEXI2POD) -D gappletviewer < $< > $@\n+\n+gjarsigner.pod: $(srcdir)/cp-tools.texinfo\n+\t-$(TEXI2POD) -D gjarsigner < $< > $@\n+\n+gjar.pod: $(srcdir)/cp-tools.texinfo\n+\t-$(TEXI2POD) -D gjar < $< > $@\n+\n+gjavah.pod: $(srcdir)/cp-tools.texinfo\n+\t-$(TEXI2POD) -D gjavah < $< > $@\n+\n+# hack around the cross references and the enumeration\n+gkeytool.pod: $(srcdir)/cp-tools.texinfo\n+\t-$(TEXI2POD) -D gkeytool < $< > $@\n+\tsed -i -e 's/^For more details.*/See I<Common Options> for more details./' \\\n+\t    -e 's/1\\.<\\([^>]*\\)>/- \\1/' \\\n+\t\t$@\n+\n+gnative2ascii.pod: $(srcdir)/cp-tools.texinfo\n+\t-$(TEXI2POD) -D gnative2ascii < $< > $@\n+\n+gorbd.pod: $(srcdir)/cp-tools.texinfo\n+\t-$(TEXI2POD) -D gorbd < $< > $@\n+\n+grmid.pod: $(srcdir)/cp-tools.texinfo\n+\t-$(TEXI2POD) -D grmid < $< > $@\n+\n+grmiregistry.pod: $(srcdir)/cp-tools.texinfo\n+\t-$(TEXI2POD) -D grmiregistry < $< > $@\n+\n+gserialver.pod: $(srcdir)/cp-tools.texinfo\n+\t-$(TEXI2POD) -D gserialver < $< > $@\n+\n+gtnameserv.pod: $(srcdir)/cp-tools.texinfo\n+\t-$(TEXI2POD) -D gtnameserv < $< > $@"}, {"sha": "2d52813866f8b1cd3a8faaf6a913fe4a93944a59", "filename": "libjava/classpath/doc/Makefile.in", "status": "modified", "additions": 78, "deletions": 2, "changes": 80, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54a0a14af93b2e7ad37e7ad7ef0a0c86eb9eaf2c/libjava%2Fclasspath%2Fdoc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54a0a14af93b2e7ad37e7ad7ef0a0c86eb9eaf2c/libjava%2Fclasspath%2Fdoc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fdoc%2FMakefile.in?ref=54a0a14af93b2e7ad37e7ad7ef0a0c86eb9eaf2c", "patch": "@@ -296,7 +296,27 @@ target_vendor = @target_vendor@\n toolexeclibdir = @toolexeclibdir@\n vm_classes = @vm_classes@\n SUBDIRS = api\n-EXTRA_DIST = README.jaxp\n+EXTRA_DIST = README.jaxp $(man_MANS)\n+\n+#man_MANS = $(TOOLS_MANFILES)\n+TOOLS_MANFILES = \\\n+\tgappletviewer.1 \\\n+\tgjar.1 \\\n+\tgjarsigner.1 \\\n+\tgjavah.1 \\\n+\tgkeytool.1 \\\n+\tgnative2ascii.1 \\\n+\tgorbd.1 \\\n+\tgrmid.1 \\\n+\tgrmiregistry.1 \\\n+\tgserialver.1 \\\n+\tgtnameserv.1\n+\n+BASEVER = $(top_srcdir)/../../gcc/BASE-VER\n+DEVPHASE = $(top_srcdir)/../../gcc/DEV-PHASE\n+POD2MAN = pod2man --center=\"GNU\" --release=\"gcc-$(shell cat $(BASEVER))\"\n+TEXI2POD = perl $(top_srcdir)/../../contrib/texi2pod.pl\n+STAMP = echo timestamp >\n all: all-recursive\n \n .SUFFIXES:\n@@ -612,7 +632,63 @@ uninstall-info: uninstall-info-recursive\n %.ps : %.dvi\n \tdvips -o $@ $<\n \n-docs: hacking.ps vmintegration.ps tools.ps\n+docs: cp-hacking.ps cp-vmintegration.ps cp-tools.ps\n+\n+# gcc-vers.texi is generated from the version files.\n+gcc-vers.texi: $(BASEVER) $(DEVPHASE)\n+\t(echo \"@set version-GCC $(shell cat $(BASEVER))\"; \\\n+\t if [ \"$(shell cat $(DEVPHASE))\" = \"experimental\" ]; \\\n+\t then echo \"@set DEVELOPMENT\"; \\\n+\t else echo \"@clear DEVELOPMENT\"; \\\n+\t fi) > $@T\n+\tmv -f $@T $@\n+\n+%.1: %.pod\n+\t$(STAMP) $@\n+\t-($(POD2MAN) --section=1 $< > $(@).T$$$$ && \\\n+\t\tmv -f $(@).T$$$$ $@) || \\\n+\t\t(rm -f $(@).T$$$$ && exit 1)\n+\n+.INTERMEDIATE: gappletviewer.pod gjarsigner.pod gjar.pod gjavah.pod \\\n+\tgkeytool.pod gnative2ascii.pod gorbd.pod grmid.pod grmiregistry.pod \\\n+\tgserialver.pod gtnameserv.pod\n+\n+gappletviewer.pod: $(srcdir)/cp-tools.texinfo\n+\t-$(TEXI2POD) -D gappletviewer < $< > $@\n+\n+gjarsigner.pod: $(srcdir)/cp-tools.texinfo\n+\t-$(TEXI2POD) -D gjarsigner < $< > $@\n+\n+gjar.pod: $(srcdir)/cp-tools.texinfo\n+\t-$(TEXI2POD) -D gjar < $< > $@\n+\n+gjavah.pod: $(srcdir)/cp-tools.texinfo\n+\t-$(TEXI2POD) -D gjavah < $< > $@\n+\n+# hack around the cross references and the enumeration\n+gkeytool.pod: $(srcdir)/cp-tools.texinfo\n+\t-$(TEXI2POD) -D gkeytool < $< > $@\n+\tsed -i -e 's/^For more details.*/See I<Common Options> for more details./' \\\n+\t    -e 's/1\\.<\\([^>]*\\)>/- \\1/' \\\n+\t\t$@\n+\n+gnative2ascii.pod: $(srcdir)/cp-tools.texinfo\n+\t-$(TEXI2POD) -D gnative2ascii < $< > $@\n+\n+gorbd.pod: $(srcdir)/cp-tools.texinfo\n+\t-$(TEXI2POD) -D gorbd < $< > $@\n+\n+grmid.pod: $(srcdir)/cp-tools.texinfo\n+\t-$(TEXI2POD) -D grmid < $< > $@\n+\n+grmiregistry.pod: $(srcdir)/cp-tools.texinfo\n+\t-$(TEXI2POD) -D grmiregistry < $< > $@\n+\n+gserialver.pod: $(srcdir)/cp-tools.texinfo\n+\t-$(TEXI2POD) -D gserialver < $< > $@\n+\n+gtnameserv.pod: $(srcdir)/cp-tools.texinfo\n+\t-$(TEXI2POD) -D gtnameserv < $< > $@\n # Tell versions [3.59,3.63) of GNU make to not export all variables.\n # Otherwise a system limit (for SysV at least) may be exceeded.\n .NOEXPORT:"}, {"sha": "efb7aa903c034b88f551bc368b35f6503f95f4a8", "filename": "libjava/classpath/doc/cp-hacking.texinfo", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54a0a14af93b2e7ad37e7ad7ef0a0c86eb9eaf2c/libjava%2Fclasspath%2Fdoc%2Fcp-hacking.texinfo", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54a0a14af93b2e7ad37e7ad7ef0a0c86eb9eaf2c/libjava%2Fclasspath%2Fdoc%2Fcp-hacking.texinfo", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fdoc%2Fcp-hacking.texinfo?ref=54a0a14af93b2e7ad37e7ad7ef0a0c86eb9eaf2c", "previous_filename": "libjava/classpath/doc/hacking.texinfo"}, {"sha": "c6c887ed41b9888ed6027a029efc4bee1adeea8a", "filename": "libjava/classpath/doc/cp-tools.texinfo", "status": "renamed", "additions": 848, "deletions": 248, "changes": 1096, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54a0a14af93b2e7ad37e7ad7ef0a0c86eb9eaf2c/libjava%2Fclasspath%2Fdoc%2Fcp-tools.texinfo", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54a0a14af93b2e7ad37e7ad7ef0a0c86eb9eaf2c/libjava%2Fclasspath%2Fdoc%2Fcp-tools.texinfo", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fdoc%2Fcp-tools.texinfo?ref=54a0a14af93b2e7ad37e7ad7ef0a0c86eb9eaf2c", "patch": "@@ -7,6 +7,17 @@\n \n @setchapternewpage on\n \n+@c Common macros to support generating man pages:\n+\n+@macro gcctabopt{body}\n+@code{\\body\\}\n+@end macro\n+@macro gccoptlist{body}\n+@smallexample\n+\\body\\\n+@end smallexample\n+@end macro\n+\n @ifinfo\n This file documents the Tools included in a standard distribution of the GNU\n Classpath project deliverables.\n@@ -55,6 +66,7 @@ Software Development Kit (SDK).\n @menu\n * Applet Tools::               Work with applets\n * Security Tools::             Work securely with Java applications\n+* Other Tools::                Other tools in classpath\n * I18N Issues::                How to add support for non-English languages\n \n @detailmenu\n@@ -111,6 +123,17 @@ Management Commands\n * Command -keypasswd::         Change the password protecting a Key Entry\n * Command -delete::            Remove an entry in a Key Store\n \n+Other Tools\n+\n+* jar Tool::                   Archive tool for Java archives\n+* javah Tool::                 A java header compiler\n+* native2ascii Tool::          An encoding converter\n+* orbd Tool::                  An object request broker daemon\n+* serialver Tool::             A serial version command\n+* rmid Tool::                  RMI activation daemon\n+* rmiregistry Tool::           Remote object registry\n+* tnameserv Tool::             Naming service\n+\n I18N Issues\n \n * Language Resources::         Where resources are located\n@@ -143,117 +166,125 @@ If while using these tools you think you found a bug, then please report it at @\n @node appletviewer Tool, gcjwebplugin, Applet Tools, Applet Tools\n @comment node-name, next, previous, up\n @section The @code{appletviewer} Tool\n+@c man title gappletviewer Load and runs an applet\n \n-@table @b\n+SYNOPSIS\n \n-@item SYNOPSIS\n-@code{appletviewer [OPTION]... URL...}@*\n-@code{appletviewer [OPTION]... -code CODE}@*\n-@code{appletviewer [OPTION]... -plugin INPUT,OUTPUT}\n+@c man begin SYNOPSIS gappletviewer\n+appletviewer [@var{OPTION}]@dots{} @var{URL}@dots{} @var{@*}\n \n-@item DESCRIPTION\n-The @code{appletviewer} tool loads and runs an applet.\n+appletviewer [@var{OPTION}]@dots{} @option{-code} @var{CODE} @var{@*}\n+\n+appletviewer [@var{OPTION}]@dots{} @option{-plugin} @var{INPUT},@var{OUTPUT}\n+@c man end\n+\n+DESCRIPTION\n+@c man begin DESCRIPTION gappletviewer\n+The @command{appletviewer} tool loads and runs an applet.\n \n Use the first form to test applets specified by tag.  The URL should\n-resolve to an HTML document from which the @code{appletviewer} will\n+resolve to an HTML document from which the @command{appletviewer} will\n extract applet tags.  The APPLET, EMBED and OBJECT tags are supported.\n If a given document contains multiple applet tags, all the applets\n will be loaded, with each applet appearing in its own window.\n Likewise, when multiple URLs are specified, each applet tag instance\n is given its own window.  If a given document contains no recognized\n-tags the @code{appletviewer} does nothing.\n+tags the @command{appletviewer} does nothing.\n \n-@example\n-@code{appletviewer http://www.gnu.org/software/classpath/}\n-@end example\n+@smallexample\n+appletviewer http://www.gnu.org/software/classpath/\n+@end smallexample\n \n Use the second form to test an applet in development.  This form\n allows applet tag attributes to be supplied on the command line.  Only\n-one applet may be specified using the @code{-code} option.  The\n-@code{-code} option overrides the URL form -- any URLs specified will\n+one applet may be specified using the @option{-code} option.  The\n+@option{-code} option overrides the URL form -- any URLs specified will\n be ignored.\n \n-@example\n-@code{appletviewer -code Test.class -param datafile,data.txt}\n-@end example\n+@smallexample\n+appletviewer -code Test.class -param datafile,data.txt\n+@end smallexample\n \n-@code{gcjwebplugin} uses the third form to communicate with the\n-@code{appletviewer} through named pipes.\n+@command{gcjwebplugin} uses the third form to communicate with the\n+@command{appletviewer} through named pipes.\n+@c man end\n \n-@item URL OPTIONS\n-@table @b\n+@c man begin OPTIONS gappletviewer\n+URL OPTIONS\n+@table @gcctabopt\n @item -debug\n This option is not yet implemented but is provided for compatibility.\n \n-@item -encoding CHARSET\n+@item -encoding @var{CHARSET}\n Use this option to specify an alternate character encoding for the\n specified HTML page.\n \n @end table\n \n-@item APPLET TAG OPTIONS\n-@table @b\n-@item -code CODE\n-Use the @code{-code} option to specify the value of the applet tag\n-CODE attribute.\n+APPLET TAG OPTIONS\n+@table @gcctabopt\n+@item -code @var{CODE}\n+Use the @option{-code} option to specify the value of the applet tag\n+@var{CODE} attribute.\n \n-@item -codebase CODEBASE\n-Use the @code{-codebase} option to specify the value of the applet tag\n-CODEBASE attribute.\n+@item -codebase @var{CODEBASE}\n+Use the @option{-codebase} option to specify the value of the applet tag\n+@var{CODEBASE} attribute.\n \n-@item -archive ARCHIVE\n-Use the @code{-archive} option to specify the value of the applet tag\n-ARCHIVE attribute.\n+@item -archive @var{ARCHIVE}\n+Use the @option{-archive} option to specify the value of the applet tag\n+@var{ARCHIVE} attribute.\n \n-@item -width WIDTH\n-Use the @code{-width} option to specify the value of the applet tag\n-WIDTH attribute.\n+@item -width @var{WIDTH}\n+Use the @option{-width} option to specify the value of the applet tag\n+@var{WIDTH} attribute.\n \n-@item -height HEIGHT\n-Use the @code{-height} option to specify the value of the applet tag\n-HEIGHT attribute.\n+@item -height @var{HEIGHT}\n+Use the @option{-height} option to specify the value of the applet tag\n+@var{HEIGHT} attribute.\n \n-@item -param NAME,VALUE\n-Use the @code{-param} option to specify values for the NAME and VALUE\n-attributes of an applet PARAM tag.\n+@item -param @var{NAME},@var{VALUE}\n+Use the @option{-param} option to specify values for the @var{NAME}\n+and @var{VALUE} attributes of an applet PARAM tag.\n \n @end table\n \n-@item PLUGIN OPTION\n-@table @b\n-@item -plugin INPUT,OUTPUT\n-@code{gcjwebplugin} uses the @code{-plugin} option to specify the\n-named pipe the @code{appletviewer} should use for receiving commands\n-(INPUT) and the one it should use for sending commands to\n-@code{gcjwebplugin} (OUTPUT).\n+PLUGIN OPTION\n+@table @gcctabopt\n+@item -plugin @var{INPUT},@var{OUTPUT}\n+@command{gcjwebplugin} uses the @option{-plugin} option to specify the\n+named pipe the @command{appletviewer} should use for receiving commands\n+(@var{INPUT}) and the one it should use for sending commands to\n+@command{gcjwebplugin} (@var{OUTPUT}).\n \n @end table\n \n-@item DEBUGGING OPTION\n-@table @b\n+DEBUGGING OPTION\n+@table @gcctabopt\n @item -verbose\n-Use the @code{-verbose} option to have the @code{appletviewer} print\n+Use the @option{-verbose} option to have the @command{appletviewer} print\n debugging messages.\n \n @end table\n \n-@item STANDARD OPTIONS\n-@table @b\n+STANDARD OPTIONS\n+\n+@table @gcctabopt\n @item -help\n-Use the @code{-help} option to have the @code{appletviewer} print a\n+Use the @option{-help} option to have the @command{appletviewer} print a\n usage message, then exit.\n \n @item -version\n-Use the @code{-version} option to have the @code{appletviewer} print\n+Use the @option{-version} option to have the @command{appletviewer} print\n its version, then exit.\n \n-@item -JOPTION\n-Use the @code{-J} option to pass OPTION to the virtual machine that\n-will run the @code{appletviewer}.  Unlike other options, there must\n-not be a space between the -J and OPTION.\n+@item -J@var{OPTION}\n+Use the @option{-J} option to pass @var{OPTION} to the virtual machine that\n+will run the @command{appletviewer}.  Unlike other options, there must\n+not be a space between the @option{-J} and @var{OPTION}.\n \n @end table\n-@end table\n+@c man end\n \n @comment ----------------------------------------------------------------------\n \n@@ -267,15 +298,16 @@ browsers (e.g., Firefox, Galeon, Mozilla).\n \n @comment ----------------------------------------------------------------------\n \n-@node Security Tools, I18N Issues, Applet Tools, Top\n+@node Security Tools, Other Tools, Applet Tools, Top\n @comment node-name, next, previous, up\n @chapter Security Tools\n \n-Two Security Tools are available with GNU Classpath: @b{jarsigner} and @b{keytool}.\n+Two Security Tools are available with GNU Classpath:\n+@command{jarsigner} and @command{keytool}.\n \n To avoid conflicts with other implementations, the jarsigner\n-executable is called ``gjarsigner'' and the keytool executable is\n-called ``gkeytool''.\n+executable is called @command{gjarsigner} and the keytool executable is\n+called @command{gkeytool}.\n \n @menu\n * jarsigner Tool::             Sign and verify .JAR files\n@@ -289,19 +321,26 @@ If while using these tools you think you found a bug, then please report it at @\n @node jarsigner Tool, keytool Tool, Security Tools, Security Tools\n @comment node-name, next, previous, up\n @section The @code{jarsigner} Tool\n+@c man title gjarsigner Java ARchive (JAR) file signing and verification tool\n \n-The @b{jarsigner} tool is invoked from the command line, in one of two forms, as follows:\n+The @command{jarsigner} tool is invoked from the command line, in one\n+of two forms, as follows:\n \n @example\n-@code{jarsigner [OPTION]... FILE ALIAS}\n-@code{jarsigner -verify [OPTION]... FILE}\n+@c man begin SYNOPSIS gjarsigner\n+jarsigner [@var{OPTION}]@dots{} @var{FILE} @var{ALIAS}\n+\n+jarsigner @option{-verify} [@var{OPTION}]@dots{} @var{FILE}\n+@c man end\n @end example\n \n+@c man begin DESCRIPTION gjarsigner\n When the first form is used, the tool signs the designated JAR file. The second form, on the other hand, is used to verify a previously signed JAR file.\n \n-@code{FILE} is the .JAR file to process; i.e. to sign if the first syntax form is used, or to verify if the second syntax form is used instead.\n+@var{FILE} is the .JAR file to process; i.e. to sign if the first syntax form is used, or to verify if the second syntax form is used instead.\n \n-@code{ALIAS} must be a known @i{Alias} of a @i{Key Entry} in the designated @i{Key Store}. The private key material associated with this @i{Alias} is then used for signing the designated .JAR file.\n+@var{ALIAS} must be a known @i{Alias} of a @i{Key Entry} in the designated @i{Key Store}. The private key material associated with this @i{Alias} is then used for signing the designated .JAR file.\n+@c man end\n \n @menu\n * Common jarsigner Options::   Options used when signing or verifying a file\n@@ -313,11 +352,12 @@ When the first form is used, the tool signs the designated JAR file. The second\n \n @node Common jarsigner Options, Signing Options, jarsigner Tool, jarsigner Tool\n @comment node-name, next, previous, up\n+@c man begin OPTIONS gjarsigner\n @subsection Common options\n \n The following options may be used when the tool is used for either signing, or verifying, a .JAR file.\n \n-@table @b\n+@table @gcctabopt\n @item -verbose\n Use this option to force the tool to generate more verbose messages, during its processing.\n \n@@ -334,141 +374,156 @@ A fully qualified class name of a @i{Security Provider} to add to the current li\n Prints a help text similar to this one.\n \n @end table\n+@c man end\n \n @comment ----------------------------------------------------------------------\n \n @node Signing Options, Verification Options, Common jarsigner Options, jarsigner Tool\n @comment node-name, next, previous, up\n+@c man begin OPTIONS gjarsigner\n @subsection Signing options\n \n The following options may be specified when using the tool for signing purposes.\n \n-@table @b\n-@item -keystore URL\n+@table @gcctabopt\n+@item -keystore @var{URL}\n Use this option to specify the location of the key store to use. The default value is a file URL referencing the file named @file{.keystore} located in the path returned by the call to @code{java.lang.System#getProperty(String)} using @code{user.home} as argument.\n \n If a URL was specified, but was found to be malformed --e.g. missing protocol element-- the tool will attempt to use the URL value as a file-name (with absolute or relative path-name) of a key store --as if the protocol was @code{file:}.\n \n-@item -storetype STORE_TYPE\n+@item -storetype @var{STORE_TYPE}\n Use this option to specify the type of the key store to use. The default value, if this option is omitted, is that of the property @code{keystore.type} in the security properties file, which is obtained by invoking the static method call @code{getDefaultType()} in @code{java.security.KeyStore}.\n \n-@item -storepass PASSWORD\n+@item -storepass @var{PASSWORD}\n Use this option to specify the password which will be used to unlock the key store. If this option is missing, the User will be prompted to provide a password.\n \n-@item -keypass PASSWORD\n+@item -keypass @var{PASSWORD}\n Use this option to specify the password which the tool will use to unlock the @i{Key Entry} associated with the designated @i{Alias}.\n \n If this option is omitted, the tool will first attempt to unlock the @i{Key Entry} using the same password protecting the key store. If this fails, you will then be prompted to provide a password.\n \n-@item -sigfile NAME\n-Use this option to designate a literal that will be used to construct file names for both the @code{.SF} and @code{.DSA} signature files. These files  will be generated, by the tool, and placed in the @file{META-INF} directory of the signed JAR.  Permissible characters for @code{NAME} must be in the range \"a-zA-Z0-9_-\".  All characters will be converted to upper-case ones.\n+@item -sigfile @var{NAME}\n+Use this option to designate a literal that will be used to construct file names for both the @code{.SF} and @code{.DSA} signature files. These files  will be generated, by the tool, and placed in the @file{META-INF} directory of the signed JAR.  Permissible characters for @var{NAME} must be in the range \"a-zA-Z0-9_-\".  All characters will be converted to upper-case ones.\n \n-If this option is missing, the first eight characters of the @code{ALIAS} argument will be used. When this is the case, any character in @code{ALIAS} that is outside the permissible range of characters will be replaced by an underscore.\n+If this option is missing, the first eight characters of the @var{ALIAS} argument will be used. When this is the case, any character in @var{ALIAS} that is outside the permissible range of characters will be replaced by an underscore.\n \n-@item -signedjar FILE\n-Use this option to specify the file name of the signed JAR. If this option is omitted, then the signed JAR will be named the same as @code{FILE}; i.e. the input JAR file will be replaced with the signed copy.\n+@item -signedjar @var{FILE}\n+Use this option to specify the file name of the signed JAR. If this option is omitted, then the signed JAR will be named the same as @var{FILE}; i.e. the input JAR file will be replaced with the signed copy.\n \n @end table\n+@c man end\n \n @comment ----------------------------------------------------------------------\n \n @node Verification Options, , Signing Options, jarsigner Tool\n @comment node-name, next, previous, up\n+@c man begin OPTIONS gjarsigner\n @subsection Verification options\n \n The following options may be specified when using the tool for verification purposes.\n \n-@table @b\n+@table @gcctabopt\n @item -verify\n Use this option to indicate that the tool is to be used for verification purposes.\n \n @item -certs\n-This option is used in conjunction with the @code{-verbose} option. When present, along with the @code{-verbose} option, the tool will print more detailed information about the certificates of the signer(s) being processed.\n+This option is used in conjunction with the @option{-verbose} option. When present, along with the @option{-verbose} option, the tool will print more detailed information about the certificates of the signer(s) being processed.\n \n @end table\n+@c man end\n \n @comment ----------------------------------------------------------------------\n \n @node keytool Tool, , jarsigner Tool, Security Tools\n @comment node-name, next, previous, up\n @section The @code{keytool} Tool\n+@c man title gkeytool Manage private keys and public certificates\n+\n+@ignore\n+@c man begin SYNOPSIS gkeytool\n+keytool [@var{COMMAND}] @dots{}\n+@c man end\n+@end ignore\n \n-Cryptographic credentials, in a Java environment, are usually stored in a @i{Key Store}. The Java SDK specifies a @i{Key Store} as a persistent container of two types of objects: @i{Key Entries} and @i{Trusted Certificates}. The security tool @b{keytool} is a Java-based application for managing those types of objects.\n+@c man begin DESCRIPTION gkeytool\n+Cryptographic credentials, in a Java environment, are usually stored in a @i{Key Store}. The Java SDK specifies a @i{Key Store} as a persistent container of two types of objects: @i{Key Entries} and @i{Trusted Certificates}. The security tool @command{keytool} is a Java-based application for managing those types of objects.\n \n A @i{Key Entry} represents the private key part of a key-pair used in Public-Key Cryptography, and a signed X.509 certificate which authenticates the public key part for a known entity; i.e. the owner of the key-pair. The X.509 certificate itself contains the public key part of the key-pair.\n \n-A @i{Trusted Certificate} is a signed X.509 certificate issued by a trusted entity. The @i{Trust} in this context is relative to the User of the @b{keytool}. In other words, the existence of a @i{Trusted Certificate} in the @i{Key Store} processed by a @b{keytool} command implies that the User trusts the @i{Issuer} of that @i{Trusted Certificate} to also sign, and hence authenticates, other @i{Subjects} the tool may process.\n+A @i{Trusted Certificate} is a signed X.509 certificate issued by a trusted entity. The @i{Trust} in this context is relative to the User of the @command{keytool}. In other words, the existence of a @i{Trusted Certificate} in the @i{Key Store} processed by a @command{keytool} command implies that the User trusts the @i{Issuer} of that @i{Trusted Certificate} to also sign, and hence authenticates, other @i{Subjects} the tool may process.\n \n @i{Trusted Certificates} are important because they allow the tool to mechanically construct @i{Chains of Trust} starting from one of the @i{Trusted Certificates} in a @i{Key Store} and ending with a certificate whose @i{Issuer} is potentially unknown. A valid chain is an ordered list, starting with a @i{Trusted Certificate} (also called the @i{anchor}), ending with the target certificate, and satisfying the condition that the @i{Subject} of certificate @code{#i} is the @i{Issuer} of certificate @code{#i + 1}.\n \n-The @b{keytool} is invoked from the command line as follows:\n+The @command{keytool} is invoked from the command line as follows:\n \n-@example\n-@code{keytool [COMMAND]...}\n-@end example\n+@smallexample\n+keytool [COMMAND] ...\n+@end smallexample\n \n-Multiple @code{COMMAND}s may be specified at once, each complete with its own options. @b{keytool} will parse all the arguments, before processing, and executing, each @code{COMMAND}. If an exception occurs while executing one @code{COMMAND} @b{keytool} will abort. Note however that because the implementation of the tool uses code to parse command line options that also supports GNU-style options, you have to separate each command group with a double-hyphen; e.g\n+Multiple @var{COMMAND}s may be specified at once, each complete with its own options. @command{keytool} will parse all the arguments, before processing, and executing, each @code{COMMAND}. If an exception occurs while executing one @var{COMMAND} @command{keytool} will abort. Note however that because the implementation of the tool uses code to parse command line options that also supports GNU-style options, you have to separate each command group with a double-hyphen; e.g\n \n-@example\n-@code{keytool -list -- -printcert -alias mykey}\n-@end example\n+@smallexample\n+keytool -list -- -printcert -alias mykey\n+@end smallexample\n+@c man end\n \n Here is a summary of the commands supported by the tool:\n \n+@c man begin OPTIONS gkeytool\n @enumerate\n @item Add/Update commands\n-@itemize @bullet\n-@item -genkey [OPTION]@dots{}\n+@table @gcctabopt\n+@item -genkey [@var{OPTION}]@dots{}\n Generate a new @i{Key Entry}, eventually creating a new key store.\n \n-@item -import [OPTION]@dots{}\n+@item -import [@var{OPTION}]@dots{}\n Add, to a key store, @i{Key Entries} (private keys and certificate chains authenticating the public keys) and @i{Trusted Certificates} (3rd party certificates which can be used as @i{Trust Anchors} when building chains-of-trust).\n \n-@item -selfcert [OPTION]@dots{}\n+@item -selfcert [@var{OPTION}]@dots{}\n Generate a new self-signed @i{Trusted Certificate}.\n \n-@item -cacert [OPTION]@dots{}\n+@item -cacert [@var{OPTION}]@dots{}\n Import a CA @i{Trusted Certificate}.\n \n-@item -identitydb [OPTION]@dots{}\n+@item -identitydb [@var{OPTION}]@dots{}\n @b{NOT IMPLEMENTED YET}.@*\n Import a JDK 1.1 style Identity Database.\n-@end itemize\n+@end table\n \n @item Export commands\n-@itemize @bullet\n-@item -certreq [OPTION]@dots{}\n+@table @gcctabopt\n+@item -certreq [@var{OPTION}]@dots{}\n Issue a @i{Certificate Signing Request} (CSR) which can be then sent to a @i{Certification Authority} (CA) to issue a certificate signed (by the CA) and authenticating the @i{Subject} of the request.\n \n-@item -export [OPTION]@dots{}\n+@item -export [@var{OPTION}]@dots{}\n Export a certificate from a key store.\n-@end itemize\n+@end table\n \n-@item Display commands\n-@itemize @bullet\n-@item -list [OPTION]@dots{}\n+@item  Display commands\n+@table @gcctabopt\n+@item -list [@var{OPTION}]@dots{}\n Print one or all certificates in a key store to @code{STDOUT}.\n \n-@item -printcert [OPTION]@dots{}\n+@item -printcert [@var{OPTION}]@dots{}\n Print a human-readable form of a certificate, in a designated file, to @code{STDOUT}.\n-@end itemize\n+@end table\n \n @item Management commands\n-@itemize @bullet\n-@item -keyclone [OPTION]@dots{}\n+@table @gcctabopt\n+@item -keyclone [@var{OPTION}]@dots{}\n Clone a @i{Key Entry} in a key store.\n \n-@item -storepasswd [OPTION]@dots{}\n+@item -storepasswd [@var{OPTION}]@dots{}\n Change the password protecting a key store.\n \n-@item -keypasswd [OPTION]@dots{}\n+@item -keypasswd [@var{OPTION}]@dots{}\n Change the password protecting a @i{Key Entry} in a key store.\n \n-@item -delete [OPTION]@dots{}\n+@item -delete [@var{OPTION}]@dots{}\n Delete a @i{Key Entry} or a @i{Trusted Certificate} from a key store.\n-@end itemize\n-\n+@end table\n @end enumerate\n+@c man end\n \n @menu\n * Getting Help::               How to get help with keytool commands\n@@ -506,54 +561,56 @@ It is worth noting here that the help messages printed by the tool are I18N-read\n \n @node Common keytool Options, Distinguished Names, Getting Help, keytool Tool\n @comment node-name, next, previous, up\n+@c man begin OPTIONS gkeytool\n @subsection Common options\n \n-The following @code{OPTION}s are used in more than one @code{COMMAND}. They are described here to reduce redundancy.\n+The following @option{OPTION}s are used in more than one @command{COMMAND}. They are described here to reduce redundancy.\n \n-@table @b\n+@table @gcctabopt\n @anchor{alias}\n-@item -alias ALIAS\n-Every entry, be it a @i{Key Entry} or a @i{Trusted Certificate}, in a key store is uniquely identified by a user-defined @i{Alias} string. Use this option to specify the @i{Alias} to use when referring to an entry in the key store. Unless specified otherwise, a default value of @code{mykey} shall be used when this option is omitted from the command line.\n+@item -alias @var{Alias}\n+Every entry, be it a @i{Key Entry} or a @i{Trusted Certificate}, in a key store is uniquely identified by a user-defined @var{Alias} string. Use this option to specify the @var{Alias} to use when referring to an entry in the key store. Unless specified otherwise, a default value of @code{mykey} shall be used when this option is omitted from the command line.\n \n @anchor{keyalg}\n-@item -keyalg ALGORITHM\n+@item -keyalg @var{ALGORITHM}\n Use this option to specify the canonical name of the key-pair generation algorithm. The default value for this option is @code{DSS} (a synonym for the Digital Signature Algorithm also known as DSA).\n \n @anchor{keysize}\n-@item -keysize SIZE\n+@item -keysize @var{SIZE}\n Use this option to specify the number of bits of the shared modulus (for both the public and private keys) to use when generating new keys. A default value of @code{1024} will be used if this option is omitted from the command line.\n \n @anchor{validity}\n-@item -validity DAY_COUNT\n+@item -validity @var{DAY_COUNT}\n Use this option to specify the number of days a newly generated certificate will be valid for. The default value is @code{90} (days) if this option is omitted from the command line.\n \n @anchor{storetype}\n-@item -storetype STORE_TYPE\n+@item -storetype @var{STORE_TYPE}\n Use this option to specify the type of the key store to use. The default value, if this option is omitted, is that of the property @code{keystore.type} in the security properties file, which is obtained by invoking the static method call @code{getDefaultType()} in @code{java.security.KeyStore}.\n \n @anchor{storepass}\n-@item -storepass PASSWORD\n+@item -storepass @var{PASSWORD}\n Use this option to specify the password protecting the key store. If this option is omitted from the command line, you will be prompted to provide a password.\n \n @anchor{keystore}\n-@item -keystore URL\n+@item -keystore @var{URL}\n Use this option to specify the location of the key store to use. The default value is a file URL referencing the file named @file{.keystore} located in the path returned by the call to @code{java.lang.System#getProperty(String)} using @code{user.home} as argument.\n \n If a URL was specified, but was found to be malformed --e.g. missing protocol element-- the tool will attempt to use the URL value as a file-name (with absolute or relative path-name) of a key store --as if the protocol was @code{file:}.\n \n @anchor{provider}\n-@item -provider PROVIDER_CLASS_NAME\n+@item -provider @var{PROVIDER_CLASS_NAME}\n A fully qualified class name of a @i{Security Provider} to add to the current list of @i{Security Providers} already installed in the JVM in-use. If a provider class is specified with this option, and was successfully added to the runtime --i.e. it was not already installed-- then the tool will attempt to removed this @i{Security Provider} before exiting.\n \n @anchor{file}\n-@item -file FILE\n+@item -file @var{FILE}\n Use this option to designate a file to use with a command. When specified with this option, the value is expected to be the fully qualified path of a file accessible by the File System. Depending on the command, the file may be used as input or as output. When this option is omitted from the command line, @code{STDIN} will be used instead, as the source of input, and @code{STDOUT} will be used instead as the output destination.\n \n @anchor{verbose}\n @item -v\n Unless specified otherwise, use this option to enable more verbose output.\n \n @end table\n+@c man end\n \n @comment ----------------------------------------------------------------------\n \n@@ -591,7 +648,9 @@ If the @i{Distinguished Name} is required, and no valid default value can be use\n \n @node Add/Update Commands, Export Commands, Distinguished Names, keytool Tool\n @comment node-name, next, previous, up\n+@c man begin OPTIONS gkeytool\n @subsection Add/Update commands\n+@c man end\n \n @menu\n * Command -genkey::            Generate private key and self-signed certificate\n@@ -605,75 +664,78 @@ If the @i{Distinguished Name} is required, and no valid default value can be use\n \n @node Command -genkey, Command -import, Add/Update Commands, Add/Update Commands\n @comment node-name, next, previous, up\n-@subsubsection @code{-genkey} command\n+@c man begin OPTIONS gkeytool\n+@subsubsection The @option{-genkey} command\n \n-Use this command to generate a new key-pair (both private and public keys), and save these credentials in the key store as a @i{Key Entry}, associated with the designated (if was specified with the @code{-alias} option) or default (if the @code{-alias} option is omitted) @i{Alias}.\n+Use this command to generate a new key-pair (both private and public keys), and save these credentials in the key store as a @i{Key Entry}, associated with the designated (if was specified with the @option{-alias} option) or default (if the @option{-alias} option is omitted) @i{Alias}.\n \n-The private key material will be protected with a user-defined password (see @code{-keypass} option). The public key on the other hand will be part of a self-signed X.509 certificate, which will form a 1-element chain and will be saved in the key store.\n+The private key material will be protected with a user-defined password (see @option{-keypass} option). The public key on the other hand will be part of a self-signed X.509 certificate, which will form a 1-element chain and will be saved in the key store.\n \n-@table @b\n-@item -alias ALIAS\n+@table @gcctabopt\n+@item -alias @var{ALIAS}\n For more details @pxref{alias,, ALIAS}.\n \n-@item -keyalg ALGORITHM\n+@item -keyalg @var{ALGORITHM}\n For more details @pxref{keyalg,, ALGORITHM}.\n \n-@item -keysize KEY_SIZE\n+@item -keysize @var{KEY_SIZE}\n For more details @pxref{keysize,, KEY_SIZE}.\n \n-@item -sigalg ALGORITHM\n+@item -sigalg @var{ALGORITHM}\n The canonical name of the digital signature algorithm to use for signing certificates. If this option is omitted, a default value will be chosen based on the type of the key-pair; i.e. the algorithm that ends up being used by the -keyalg option. If the key-pair generation algorithm is @code{DSA}, the value for the signature algorithm will be @code{SHA1withDSA}. If on the other hand the key-pair generation algorithm is @code{RSA}, then the tool will use @code{MD5withRSA} as the signature algorithm.\n \n-@item -dname NAME\n-This a mandatory value for the command. If no value is specified --i.e. the @code{-dname} option is omitted-- the tool will prompt you to enter a @i{Distinguished Name} to use as both the @i{Owner} and @i{Issuer} of the generated self-signed certificate.\n+@item -dname @var{NAME}\n+This a mandatory value for the command. If no value is specified --i.e. the @option{-dname} option is omitted-- the tool will prompt you to enter a @i{Distinguished Name} to use as both the @i{Owner} and @i{Issuer} of the generated self-signed certificate.\n \n For more details @pxref{dn,, X.500 DISTINGUISHED NAME}.\n \n-@item -keypass PASSWORD\n+@item -keypass @var{PASSWORD}\n Use this option to specify the password which the tool will use to protect the newly created @i{Key Entry}.\n \n If this option is omitted, you will be prompted to provide a password.\n \n-@item -validity DAY_COUNT\n+@item -validity @var{DAY_COUNT}\n For more details @pxref{validity,, DAY_COUNT}.\n \n-@item -storetype STORE_TYPE\n+@item -storetype @var{STORE_TYPE}\n For more details @pxref{storetype,, STORE_TYPE}.\n \n-@item -keystore URL\n+@item -keystore @var{URL}\n For more details @pxref{keystore,, URL}.\n \n-@item -storepass PASSWORD\n+@item -storepass @var{PASSWORD}\n For more details @pxref{storepass,, PASSWORD}.\n \n-@item -provider PROVIDER_CLASS_NAME\n+@item -provider @var{PROVIDER_CLASS_NAME}\n For more details @pxref{provider,, PROVIDER_CLASS_NAME}.\n \n @item -v\n For more details @pxref{verbose}.\n \n @end table\n+@c man end\n \n @comment ----------------------------------------------------------------------\n \n @node Command -import, Command -selfcert, Command -genkey, Add/Update Commands\n @comment node-name, next, previous, up\n-@subsubsection @code{-import} command\n+@c man begin OPTIONS gkeytool\n+@subsubsection The @option{-import} command\n \n Use this command to read an X.509 certificate, or a PKCS#7 @i{Certificate Reply} from a designated input source and incorporate the certificates into the key store.\n \n-If the @i{Alias} does not already exist in the key store, the tool treats the certificate read from the input source as a new @i{Trusted Certificate}. It then attempts to discover a chain-of-trust, starting from that certificate and ending at another @i{Trusted Certificate}, already stored in the key store. If the @code{-trustcacerts} option is present, an additional key store, of type @code{JKS} named @file{cacerts}, and assumed to be present in @file{$@{JAVA_HOME@}/lib/security} will also be consulted if found --@code{$@{JAVA_HOME@}} refers to the location of an installed @i{Java Runtime Environment} (JRE). If no chain-of-trust can be established, and unless the @code{-noprompt} option has been specified, the certificate is printed to @code{STDOUT} and the user is prompted for a confirmation.\n+If the @i{Alias} does not already exist in the key store, the tool treats the certificate read from the input source as a new @i{Trusted Certificate}. It then attempts to discover a chain-of-trust, starting from that certificate and ending at another @i{Trusted Certificate}, already stored in the key store. If the @option{-trustcacerts} option is present, an additional key store, of type @code{JKS} named @file{cacerts}, and assumed to be present in @file{$@{JAVA_HOME@}/lib/security} will also be consulted if found --@code{$@{JAVA_HOME@}} refers to the location of an installed @i{Java Runtime Environment} (JRE). If no chain-of-trust can be established, and unless the @code{-noprompt} option has been specified, the certificate is printed to @code{STDOUT} and the user is prompted for a confirmation.\n \n-If @i{Alias} exists in the key store, the tool will treat the certificate(s) read from the input source as a @i{Certificate Reply}, which can be a chain of certificates, that eventually would replace the chain of certificates associated with the @i{Key Entry} of that @i{Alias}. The substitution of the certificates only occurs if a chain-of-trust can be established between the bottom certificate of the chain read from the input file and the @i{Trusted Certificates} already present in the key store. Again, if the @code{-trustcacerts} option is specified, additional @i{Trusted Certificates} in the same @file{cacerts} key store will be considered. If no chain-of-trust can be established, the operation will abort.\n+If @i{Alias} exists in the key store, the tool will treat the certificate(s) read from the input source as a @i{Certificate Reply}, which can be a chain of certificates, that eventually would replace the chain of certificates associated with the @i{Key Entry} of that @i{Alias}. The substitution of the certificates only occurs if a chain-of-trust can be established between the bottom certificate of the chain read from the input file and the @i{Trusted Certificates} already present in the key store. Again, if the @option{-trustcacerts} option is specified, additional @i{Trusted Certificates} in the same @file{cacerts} key store will be considered. If no chain-of-trust can be established, the operation will abort.\n \n-@table @b\n-@item -alias ALIAS\n+@table @gcctabopt\n+@item -alias @var{ALIAS}\n For more details @pxref{alias,, ALIAS}.\n \n-@item -file FILE\n+@item -file @var{FILE}\n For more details @pxref{file,, FILE}.\n \n-@item -keypass PASSWORD\n+@item -keypass @var{PASSWORD}\n Use this option to specify the password which the tool will use to protect the @i{Key Entry} associated with the designated @i{Alias}, when replacing this @i{Alias}' chain of certificates with that found in the certificate reply.\n \n If this option is omitted, and the chain-of-trust for the certificate reply has been established, the tool will first attempt to unlock the @i{Key Entry} using the same password protecting the key store. If this fails, you will then be prompted to provide a password.\n@@ -684,135 +746,144 @@ Use this option to prevent the tool from prompting the user.\n @item -trustcacerts\n Use this option to indicate to the tool that a key store, of type @code{JKS}, named @file{cacerts}, and usually located in @file{lib/security} in an installed @i{Java Runtime Environment} should be considered when trying to establish chain-of-trusts.\n \n-@item -storetype STORE_TYPE\n+@item -storetype @var{STORE_TYPE}\n For more details @pxref{storetype,, STORE_TYPE}.\n \n-@item -keystore URL\n+@item -keystore @var{URL}\n For more details @pxref{keystore,, URL}.\n \n-@item -storepass PASSWORD\n+@item -storepass @var{PASSWORD}\n For more details @pxref{storepass,, PASSWORD}.\n \n-@item -provider PROVIDER_CLASS_NAME\n+@item -provider @var{PROVIDER_CLASS_NAME}\n For more details @pxref{provider,, PROVIDER_CLASS_NAME}.\n \n @item -v\n For more details @pxref{verbose}.\n \n @end table\n+@c man end\n \n @comment ----------------------------------------------------------------------\n \n @node Command -selfcert, Command -cacert, Command -import, Add/Update Commands\n @comment node-name, next, previous, up\n-@subsubsection @code{-selfcert} command\n+@c man begin OPTIONS gkeytool\n+@subsubsection The @option{-selfcert} command\n \n-Use this command to generate a self-signed X.509 version 1 certificate. The newly generated certificate will form a chain of one element which will replace the previous chain associated with the designated @i{Alias} (if @code{-alias} option was specified), or the default @i{Alias} (if @code{-alias} option was omitted).\n+Use this command to generate a self-signed X.509 version 1 certificate. The newly generated certificate will form a chain of one element which will replace the previous chain associated with the designated @i{Alias} (if @option{-alias} option was specified), or the default @i{Alias} (if @option{-alias} option was omitted).\n \n-@table @b\n-@item -alias ALIAS\n+@table @gcctabopt\n+@item -alias @var{ALIAS}\n For more details @pxref{alias,, ALIAS}.\n \n-@item -sigalg ALGORITHM\n+@item -sigalg @var{ALGORITHM}\n The canonical name of the digital signature algorithm to use for signing the certificate. If this option is omitted, a default value will be chosen based on the type of the private key associated with the designated @i{Alias}. If the private key is a @code{DSA} one, the value for the signature algorithm will be @code{SHA1withDSA}. If on the other hand the private key is an @code{RSA} one, then the tool will use @code{MD5withRSA} as the signature algorithm.\n \n-@item -dname NAME\n+@item -dname @var{NAME}\n Use this option to specify the @i{Distinguished Name} of the newly generated self-signed certificate. If this option is omitted, the existing @i{Distinguished Name} of the base certificate in the chain associated with the designated @i{Alias} will be used instead.\n \n For more details @pxref{dn,, X.500 DISTINGUISHED NAME}.\n \n-@item -validity DAY_COUNT\n+@item -validity @var{DAY_COUNT}\n For more details @pxref{validity,, DAY_COUNT}.\n \n-@item -keypass PASSWORD\n+@item -keypass @var{PASSWORD}\n Use this option to specify the password which the tool will use to unlock the @i{Key Entry} associated with the designated @i{Alias}.\n \n If this option is omitted, the tool will first attempt to unlock the @i{Key Entry} using the same password protecting the key store. If this fails, you will then be prompted to provide a password.\n \n-@item -storetype STORE_TYPE\n+@item -storetype @var{STORE_TYPE}\n For more details @pxref{storetype,, STORE_TYPE}.\n \n-@item -keystore URL\n+@item -keystore @var{URL}\n For more details @pxref{keystore,, URL}.\n \n-@item -storepass PASSWORD\n+@item -storepass @var{PASSWORD}\n For more details @pxref{storepass,, PASSWORD}.\n \n-@item -provider PROVIDER_CLASS_NAME\n+@item -provider @var{PROVIDER_CLASS_NAME}\n For more details @pxref{provider,, PROVIDER_CLASS_NAME}.\n \n @item -v\n For more details @pxref{verbose}.\n \n @end table\n+@c man end\n \n @comment ----------------------------------------------------------------------\n \n @node Command -cacert, Command -identitydb, Command -selfcert, Add/Update Commands\n @comment node-name, next, previous, up\n-@subsubsection @code{-cacert} command\n+@c man begin OPTIONS gkeytool\n+@subsubsection The @option{-cacert} command\n \n Use this command to import, a CA certificate and add it to the key store as a @i{Trusted Certificate}. The @i{Alias} for this new entry will be constructed from the FILE's base-name after replacing hyphens and dots with underscores.\n \n-This command is useful when used in a script that recursively visits a directory of CA certificates to populate a @code{cacerts.gkr} @i{Key Store} of trusted certificates which can then be used commands that specify the @code{-trustcacerts} option.\n+This command is useful when used in a script that recursively visits a directory of CA certificates to populate a @code{cacerts.gkr} @i{Key Store} of trusted certificates which can then be used commands that specify the @option{-trustcacerts} option.\n \n-@table @b\n-@item -file FILE\n+@table @gcctabopt\n+@item -file @var{FILE}\n For more details @pxref{file,, FILE}.\n \n-@item -storetype STORE_TYPE\n+@item -storetype @var{STORE_TYPE}\n For more details @pxref{storetype,, STORE_TYPE}.\n \n-@item -keystore URL\n+@item -keystore @var{URL}\n For more details @pxref{keystore,, URL}.\n \n-@item -storepass PASSWORD\n+@item -storepass @var{PASSWORD}\n For more details @pxref{storepass,, PASSWORD}.\n \n-@item -provider PROVIDER_CLASS_NAME\n+@item -provider @var{PROVIDER_CLASS_NAME}\n For more details @pxref{provider,, PROVIDER_CLASS_NAME}.\n \n @item -v\n For more details @pxref{verbose}.\n \n @end table\n+@c man end\n \n @comment ----------------------------------------------------------------------\n \n @node Command -identitydb, , Command -cacert, Add/Update Commands\n @comment node-name, next, previous, up\n-@subsubsection @code{-identitydb} command\n+@c man begin OPTIONS gkeytool\n+@subsubsection The @option{-identitydb} command\n \n @b{NOT IMPLEMENTED YET}.\n \n Use this command to import a JDK 1.1 style Identity Database.\n \n-@table @b\n-@item -file FILE\n+@table @gcctabopt\n+@item -file @var{FILE}\n For more details @pxref{file,, FILE}.\n \n-@item -storetype STORE_TYPE\n+@item -storetype @var{STORE_TYPE}\n For more details @pxref{storetype,, STORE_TYPE}.\n \n-@item -keystore URL\n+@item -keystore @var{URL}\n For more details @pxref{keystore,, URL}.\n \n-@item -storepass PASSWORD\n+@item -storepass @var{PASSWORD}\n For more details @pxref{storepass,, PASSWORD}.\n \n-@item -provider PROVIDER_CLASS_NAME\n+@item -provider @var{PROVIDER_CLASS_NAME}\n For more details @pxref{provider,, PROVIDER_CLASS_NAME}.\n \n @item -v\n For more details @pxref{verbose}.\n \n @end table\n+@c man end\n \n @comment ----------------------------------------------------------------------\n \n @node Export Commands, Display Commands, Add/Update Commands, keytool Tool\n @comment node-name, next, previous, up\n+@c man begin OPTIONS gkeytool\n @subsection Export commands\n+@c man end\n \n @menu\n * Command -certreq::           Generate Certificate Signing Requests (CSR)\n@@ -823,7 +894,8 @@ For more details @pxref{verbose}.\n \n @node Command -certreq, Command -export, Export Commands, Export Commands\n @comment node-name, next, previous, up\n-@subsubsection @code{-certreq} command\n+@c man begin OPTIONS gkeytool\n+@subsubsection The @option{-certreq} command\n \n Use this command to generate a PKCS#10 @i{Certificate Signing Request} (CSR) and write it to a designated output destination. The contents of the destination should look something like the following:\n \n@@ -836,33 +908,33 @@ FC...IVwNVOfQLRX+O5kAhQ/a4RTZme2L8PnpvgRwrf7Eg8D6w==\n -----END NEW CERTIFICATE REQUEST-----\n @end example\n \n-@b{IMPORTANT}: Some documentation (e.g. RSA examples) claims that the @code{Attributes} field, in the CSR is @code{OPTIONAL} while RFC-2986 implies the opposite. This implementation considers this field, by default, as @code{OPTIONAL}, unless the option @code{-attributes} is specified on the command line.\n+@b{IMPORTANT}: Some documentation (e.g. RSA examples) claims that the @code{Attributes} field, in the CSR is @code{OPTIONAL} while RFC-2986 implies the opposite. This implementation considers this field, by default, as @code{OPTIONAL}, unless the option @option{-attributes} is specified on the command line.\n \n-@table @b\n-@item -alias ALIAS\n+@table @gcctabopt\n+@item -alias @var{ALIAS}\n For more details @pxref{alias,, ALIAS}.\n \n-@item -sigalg ALGORITHM\n+@item -sigalg @var{ALGORITHM}\n The canonical name of the digital signature algorithm to use for signing the certificate. If this option is omitted, a default value will be chosen based on the type of the private key associated with the designated @i{Alias}. If the private key is a @code{DSA} one, the value for the signature algorithm will be @code{SHA1withDSA}. If on the other hand the private key is an @code{RSA} one, then the tool will use @code{MD5withRSA} as the signature algorithm.\n \n-@item -file FILE\n+@item -file @var{FILE}\n For more details @pxref{file,, FILE}.\n \n-@item -keypass PASSWORD\n+@item -keypass @var{PASSWORD}\n Use this option to specify the password which the tool will use to unlock the @i{Key Entry} associated with the designated @i{Alias}.\n \n If this option is omitted, the tool will first attempt to unlock the @i{Key Entry} using the same password protecting the key store. If this fails, you will then be prompted to provide a password.\n \n-@item -storetype STORE_TYPE\n+@item -storetype @var{STORE_TYPE}\n For more details @pxref{storetype,, STORE_TYPE}.\n \n-@item -keystore URL\n+@item -keystore @var{URL}\n For more details @pxref{keystore,, URL}.\n \n-@item -storepass PASSWORD\n+@item -storepass @var{PASSWORD}\n For more details @pxref{storepass,, PASSWORD}.\n \n-@item -provider PROVIDER_CLASS_NAME\n+@item -provider @var{PROVIDER_CLASS_NAME}\n For more details @pxref{provider,, PROVIDER_CLASS_NAME}.\n \n @item -v\n@@ -872,47 +944,52 @@ For more details @pxref{verbose}.\n Use this option to force the tool to encode a @code{NULL} DER value in the CSR as the value of the @code{Attributes} field.\n \n @end table\n+@c man end\n \n @comment ----------------------------------------------------------------------\n \n @node Command -export, , Command -certreq, Export Commands\n @comment node-name, next, previous, up\n-@subsubsection @code{-export} command\n+@c man begin OPTIONS gkeytool\n+@subsubsection The @option{-export} command\n \n-Use this command to export a certificate stored in a key store to a designated output destination, either in binary format (if the @code{-v} option is specified), or in RFC-1421 compliant encoding (if the @code{-rfc} option is specified instead).\n+Use this command to export a certificate stored in a key store to a designated output destination, either in binary format (if the @option{-v} option is specified), or in RFC-1421 compliant encoding (if the @option{-rfc} option is specified instead).\n \n-@table @b\n-@item -alias ALIAS\n+@table @gcctabopt\n+@item -alias @var{ALIAS}\n For more details @pxref{alias,, ALIAS}.\n \n-@item -file FILE\n+@item -file @var{FILE}\n For more details @pxref{file,, FILE}.\n \n-@item -storetype STORE_TYPE\n+@item -storetype @var{STORE_TYPE}\n For more details @pxref{storetype,, STORE_TYPE}.\n \n-@item -keystore URL\n+@item -keystore @var{URL}\n For more details @pxref{keystore,, URL}.\n \n-@item -storepass PASSWORD\n+@item -storepass @var{PASSWORD}\n For more details @pxref{storepass,, PASSWORD}.\n \n-@item -provider PROVIDER_CLASS_NAME\n+@item -provider @var{PROVIDER_CLASS_NAME}\n For more details @pxref{provider,, PROVIDER_CLASS_NAME}.\n \n @item -rfc\n Use RFC-1421 specifications when encoding the output.\n \n @item -v\n-Output the certificate in binary DER encoding. This is the default output format of the command if neither @code{-rfc} nor @code{-v} options were detected on the command line. If both this option and the @code{-rfc} option are detected on the command line, the tool will opt for the RFC-1421 style encoding.\n+Output the certificate in binary DER encoding. This is the default output format of the command if neither @option{-rfc} nor @code{-v} options were detected on the command line. If both this option and the @option{-rfc} option are detected on the command line, the tool will opt for the RFC-1421 style encoding.\n \n @end table\n+@c man end\n \n @comment ----------------------------------------------------------------------\n \n @node Display Commands, Management Commands, Export Commands, keytool Tool\n @comment node-name, next, previous, up\n+@c man begin OPTIONS gkeytool\n @subsection Display commands\n+@c man end\n \n @menu\n * Command -list::              Display information about one or all Aliases\n@@ -923,58 +1000,64 @@ Output the certificate in binary DER encoding. This is the default output format\n \n @node Command -list, Command -printcert, Display Commands, Display Commands\n @comment node-name, next, previous, up\n-@subsubsection @code{-list} command\n+@c man begin OPTIONS gkeytool\n+@subsubsection The @option{-list} command\n \n-Use this command to print one or all of a key store entries to @code{STDOUT}. Usually this command will only print a @i{fingerprint} of the certificate, unless either the @code{-rfc} or the @code{-v} option is specified.\n+Use this command to print one or all of a key store entries to @code{STDOUT}. Usually this command will only print a @i{fingerprint} of the certificate, unless either the @option{-rfc} or the @option{-v} option is specified.\n \n-@table @b\n-@item -alias ALIAS\n+@table @gcctabopt\n+@item -alias @var{ALIAS}\n If this option is omitted, the tool will print ALL the entries found in the key store.\n \n For more details @pxref{alias,, ALIAS}.\n \n-@item -storetype STORE_TYPE\n+@item -storetype @var{STORE_TYPE}\n For more details @pxref{storetype,, STORE_TYPE}.\n \n-@item -keystore URL\n+@item -keystore @var{URL}\n For more details @pxref{keystore,, URL}.\n \n-@item -storepass PASSWORD\n+@item -storepass @var{PASSWORD}\n For more details @pxref{storepass,, PASSWORD}.\n \n-@item -provider PROVIDER_CLASS_NAME\n+@item -provider @var{PROVIDER_CLASS_NAME}\n For more details @pxref{provider,, PROVIDER_CLASS_NAME}.\n \n @item -rfc\n Use RFC-1421 specifications when encoding the output.\n \n @item -v\n-Output the certificate in human-readable format. If both this option and the @code{-rfc} option are detected on the command line, the tool will opt for the human-readable form and will not abort the command.\n+Output the certificate in human-readable format. If both this option and the @option{-rfc} option are detected on the command line, the tool will opt for the human-readable form and will not abort the command.\n \n @end table\n+@c man end\n \n @comment ----------------------------------------------------------------------\n \n @node Command -printcert, , Command -list, Display Commands\n @comment node-name, next, previous, up\n-@subsubsection @code{-printcert} command\n+@c man begin OPTIONS gkeytool\n+@subsubsection The @option{-printcert} command\n \n Use this command to read a certificate from a designated input source and print it to @code{STDOUT} in a human-readable form.\n \n-@table @b\n-@item -file FILE\n+@table @gcctabopt\n+@item -file @var{FILE}\n For more details @pxref{file,, FILE}.\n \n @item -v\n For more details @pxref{verbose}.\n \n @end table\n+@c man end\n \n @comment ----------------------------------------------------------------------\n \n @node Management Commands, , Display Commands, keytool Tool\n @comment node-name, next, previous, up\n+@c man begin OPTIONS gkeytool\n @subsection Management commands\n+@c man end\n \n @menu\n * Command -keyclone::          Clone a Key Entry in a Key Store\n@@ -987,139 +1070,656 @@ For more details @pxref{verbose}.\n \n @node Command -keyclone, Command -storepasswd, Management Commands, Management Commands\n @comment node-name, next, previous, up\n-@subsubsection @code{-keyclone} command\n+@c man begin OPTIONS gkeytool\n+@subsubsection The @option{-keyclone} command\n \n Use this command to clone an existing @i{Key Entry} and store it under a new (different) @i{Alias} protecting, its private key material with possibly a new password.\n \n-@table @b\n-@item -alias ALIAS\n+@table @gcctabopt\n+@item -alias @var{ALIAS}\n For more details @pxref{alias,, ALIAS}.\n \n-@item -dest ALIAS\n+@item -dest @var{ALIAS}\n Use this option to specify the new @i{Alias} which will be used to identify the cloned copy of the @i{Key Entry}.\n \n-@item -keypass PASSWORD\n+@item -keypass @var{PASSWORD}\n Use this option to specify the password which the tool will use to unlock the @i{Key Entry} associated with the designated @i{Alias}.\n \n If this option is omitted, the tool will first attempt to unlock the @i{Key Entry} using the same password protecting the key store. If this fails, you will then be prompted to provide a password.\n \n-@item -new PASSWORD\n+@item -new @var{PASSWORD}\n Use this option to specify the password protecting the private key material of the newly cloned copy of the @i{Key Entry}.\n \n-@item -storetype STORE_TYPE\n+@item -storetype @var{STORE_TYPE}\n For more details @pxref{storetype,, STORE_TYPE}.\n \n-@item -keystore URL\n+@item -keystore @var{URL}\n For more details @pxref{keystore,, URL}.\n \n-@item -storepass PASSWORD\n+@item -storepass @var{PASSWORD}\n For more details @pxref{storepass,, PASSWORD}.\n \n-@item -provider PROVIDER_CLASS_NAME\n+@item -provider @var{PROVIDER_CLASS_NAME}\n For more details @pxref{provider,, PROVIDER_CLASS_NAME}.\n \n @item -v\n For more details @pxref{verbose}.\n \n @end table\n+@c man end\n \n @comment ----------------------------------------------------------------------\n \n @node Command -storepasswd, Command -keypasswd, Command -keyclone, Management Commands\n @comment node-name, next, previous, up\n-@subsubsection @code{-storepasswd} command\n+@c man begin OPTIONS gkeytool\n+@subsubsection The @option{-storepasswd} command\n \n Use this command to change the password protecting a key store.\n \n-@table @b\n-@item -new PASSWORD\n+@table @gcctabopt\n+@item -new @var{PASSWORD}\n The new, and different, password which will be used to protect the designated key store.\n \n-@item -storetype STORE_TYPE\n+@item -storetype @var{STORE_TYPE}\n For more details @pxref{storetype,, STORE_TYPE}.\n \n-@item -keystore URL\n+@item -keystore @var{URL}\n For more details @pxref{keystore,, URL}.\n \n-@item -storepass PASSWORD\n+@item -storepass @var{PASSWORD}\n For more details @pxref{storepass,, PASSWORD}.\n \n-@item -provider PROVIDER_CLASS_NAME\n+@item -provider @var{PROVIDER_CLASS_NAME}\n For more details @pxref{provider,, PROVIDER_CLASS_NAME}.\n \n @item -v\n For more details @pxref{verbose}.\n \n @end table\n+@c man end\n \n @comment ----------------------------------------------------------------------\n \n @node Command -keypasswd, Command -delete, Command -storepasswd, Management Commands\n @comment node-name, next, previous, up\n-@subsubsection @code{-keypasswd} command\n+@c man begin OPTIONS gkeytool\n+@subsubsection The @option{-keypasswd} command\n \n Use this command to change the password protecting the private key material of a designated @i{Key Entry}.\n \n-@table @b\n-@item -alias ALIAS\n+@table @gcctabopt\n+@item -alias @var{ALIAS}\n For more details @pxref{alias,, ALIAS}.\n \n Use this option to specify the password which the tool will use to unlock the @i{Key Entry} associated with the designated @i{Alias}.\n \n If this option is omitted, the tool will first attempt to unlock the @i{Key Entry} using the same password protecting the key store. If this fails, you will then be prompted to provide a password.\n \n-@item -new PASSWORD\n+@item -new @var{PASSWORD}\n The new, and different, password which will be used to protect the private key material of the designated @i{Key Entry}.\n \n-@item -storetype STORE_TYPE\n+@item -storetype @var{STORE_TYPE}\n For more details @pxref{storetype,, STORE_TYPE}.\n \n-@item -keystore URL\n+@item -keystore @var{URL}\n For more details @pxref{keystore,, URL}.\n \n-@item -storepass PASSWORD\n+@item -storepass @var{PASSWORD}\n For more details @pxref{storepass,, PASSWORD}.\n \n-@item -provider PROVIDER_CLASS_NAME\n+@item -provider @var{PROVIDER_CLASS_NAME}\n For more details @pxref{provider,, PROVIDER_CLASS_NAME}.\n \n @item -v\n For more details @pxref{verbose}.\n \n @end table\n+@c man end\n \n @comment ----------------------------------------------------------------------\n \n @node Command -delete, , Command -keypasswd, Management Commands\n @comment node-name, next, previous, up\n-@subsubsection @code{-delete} command\n+@c man begin OPTIONS gkeytool\n+@subsubsection The @option{-delete} command\n \n Use this command to delete a designated key store entry.\n \n-@table @b\n-@item -alias ALIAS\n+@table @gcctabopt\n+@item -alias @var{ALIAS}\n For more details @pxref{alias,, ALIAS}.\n \n-@item -storetype STORE_TYPE\n+@item -storetype @var{STORE_TYPE}\n For more details @pxref{storetype,, STORE_TYPE}.\n \n-@item -keystore URL\n+@item -keystore @var{URL}\n For more details @pxref{keystore,, URL}.\n \n-@item -storepass PASSWORD\n+@item -storepass @var{PASSWORD}\n For more details @pxref{storepass,, PASSWORD}.\n \n-@item -provider PROVIDER_CLASS_NAME\n+@item -provider @var{PROVIDER_CLASS_NAME}\n For more details @pxref{provider,, PROVIDER_CLASS_NAME}.\n \n @item -v\n For more details @pxref{verbose}.\n \n @end table\n+@c man end\n+\n+@comment ----------------------------------------------------------------------\n+\n+@node Other Tools, I18N Issues, Security Tools, Top\n+@comment node-name, next, previous, up\n+@chapter Other Tools\n+\n+This is a list of currently undocumented classpath tools: @b{jar},\n+@b{javah}, @b{native2ascii}, @b{orbd}, @b{serialver}, @b{rmid}, @b{rmiregistry}\n+and @b{tnameserv}.\n+\n+@menu\n+* jar Tool::                   Archive tool for Java archives\n+* javah Tool::                 A java header compiler\n+* native2ascii Tool::          An encoding converter\n+* orbd Tool::                  An object request broker daemon\n+* serialver Tool::             A serial version command\n+* rmid Tool::                  RMI activation daemon\n+* rmiregistry Tool::           Remote object registry\n+* tnameserv Tool::             Naming service\n+@end menu\n+\n+@comment ----------------------------------------------------------------------\n+\n+@node jar Tool, javah Tool, , Other Tools\n+@comment node-name, next, previous, up\n+@section The @command{jar} Tool\n+@c man title gjar - Archive tool for Java archives\n+\n+@c man begin DESCRIPTION gjar\n+\n+@command{gjar} is an implementation of Sun's jar utility that comes with\n+the JDK.\n+\n+If any file is a directory then it is processed recursively.  The\n+manifest file name and the archive file name needs to be specified in\n+the same order the @option{-m} and @option{-f} flags are specified.\n+\n+@c man end\n+\n+@ignore\n+@c man begin SYNOPSIS gjar\n+gjar @option{-ctxui} [@var{OPTIONS}] @var{jar-file} [@option{-C} @var{DIR} @var{FILE}] @var{FILE}@dots{}\n+@c man end\n+@end ignore\n+\n+@c man begin OPTIONS gjar\n+\n+Operation mode:\n+\n+@table @gcctabopt\n+@item -c\n+Create new archive.\n+\n+@item -t\n+List table of contents for archive.\n+\n+@item -x\n+Extract named (or all) files from archive.\n+\n+@item -u\n+Update existing archive.\n+\n+@item -i @var{FILE}\n+Compute archive index.\n+@end table\n+\n+Operation modifiers:\n+\n+@table @gcctabopt\n+@item -f @var{FILE}\n+Specify archive file name.\n+\n+@item -0\n+Store only; use no ZIP compression.\n+\n+@item -v\n+Generate verbose output on standard output.\n+\n+@item -M\n+Do not create a manifest file for the entries.\n+\n+@item -m @var{manifest}\n+Include manifest information from specified @var{manifest} file.\n+@end table\n+\n+File name selection:\n+\n+@table @gcctabopt\n+@item -C @var{DIR} @var{FILE}\n+Change to the @var{DIR} and include the following @var{FILE}.\n+\n+@item -@@\n+Read the names of the files to add to the archive from stdin.  This\n+option is supported only in combination with @option{-c} or @option{-u}.\n+Non standard option added in the GCC version.\n+@end table\n+\n+Standard options:\n+\n+@table @gcctabopt\n+@item -help\n+Print help text, then exit.\n+@item -version\n+Print version number, then exit.\n+@item -J@var{OPTION}\n+Pass argument to the Java runtime.\n+@end table\n+\n+@c man end\n+\n+@c man begin SEEALSO gjar\n+java(1), @dots{}\n+@c man end\n+\n+@comment ----------------------------------------------------------------------\n+\n+@node javah Tool, native2ascii Tool, jar Tool, Other Tools\n+@comment node-name, next, previous, up\n+@section The @command{javah} Tool\n+@c man title gjavah - generate header files from Java class files\n+\n+@c man begin DESCRIPTION gjavah\n+\n+The @command{gjavah} program is used to generate header files from class\n+files.  It can generate both CNI and JNI header files, as well as stub\n+implementation files which can be used as a basis for implementing the\n+required native methods.\n+\n+@c man end\n+\n+@ignore\n+@c man begin SYNOPSIS gjavah\n+gjavah @dots{}\n+@c man end\n+@end ignore\n+\n+@c man begin OPTIONS gjavah\n+\n+@table @gcctabopt\n+@item -d @var{DIR}\n+Set output directory.\n+\n+@item -o @var{FILE}\n+Set output file (only one of @option{-d} or @option{-o} may be used).\n+\n+@item -cmdfile @var{FILE}\n+Read command file.\n+\n+@item -all @var{DIR}\n+Operate on all class files under directory @var{DIR}.\n+\n+@item -stubs\n+Emit stub implementation.\n+\n+@item -jni\n+Emit JNI stubs or header (default).\n+\n+@item -cni\n+Emit CNI stubs or header (default JNI).\n+\n+@item -verbose\n+Set verbose mode.\n+\n+@item -force\n+Output files should always be written.\n+@end table\n+\n+Class path options:\n+@table @gcctabopt\n+@item -classpath @var{PATH}\n+Set the class path.\n+\n+@item -I@var{DIR}\n+Add directory to class path.\n+\n+@item -bootclasspath @var{PATH}\n+Set the boot class path.\n+\n+@item -extdirs @var{PATH}\n+Set the extension directory path.\n+@end table\n+\n+Standard options:\n+@table @gcctabopt\n+@item -help\n+Print help text, then exit.\n+@item -version\n+Print version number, then exit.\n+@item -J@var{OPTION}\n+Pass argument to the Java runtime.\n+@end table\n+@c man end\n+\n+@c man begin SEEALSO gjavah\n+javac(1), @dots{}\n+@c man end\n+\n+@comment ----------------------------------------------------------------------\n+\n+@node native2ascii Tool, orbd Tool, javah Tool, Other Tools\n+@comment node-name, next, previous, up\n+@section The @command{native2ascii} Tool\n+@c man title gnative2ascii - An encoding converter\n+\n+@c man begin DESCRIPTION gnative2ascii\n+\n+To be written @dots{}\n+\n+@c man end\n+\n+@ignore\n+@c man begin SYNOPSIS gnative2ascii\n+gnative2ascii [@var{OPTIONS}]@dots{} [@var{INPUTFILE} [@var{OUTPUTFILE}]]\n+@c man end\n+@end ignore\n+\n+@c man begin OPTIONS gnative2ascii\n+\n+@table @gcctabopt\n+@item -encoding @var{NAME}\n+Set the encoding to use.\n+\n+@item -reversed\n+Convert from encoding to native.\n+@end table\n+\n+Standard options:\n+@table @gcctabopt\n+@item -help\n+Print help text, then exit.\n+@item -version\n+Print version number, then exit.\n+@item -J@var{OPTION}\n+Pass argument to the Java runtime.\n+@end table\n+\n+@c man end\n+\n+@c man begin SEEALSO gnative2ascii\n+javac(1), @dots{}\n+@c man end\n+\n+@comment ----------------------------------------------------------------------\n+\n+@node orbd Tool, serialver Tool, native2ascii Tool, Other Tools\n+@comment node-name, next, previous, up\n+@section The @command{orbd} object request broker daemon\n+@c man title gorbd - An object request broker daemon\n+\n+@c man begin DESCRIPTION gorbd\n+\n+To be written @dots{}\n+\n+@c man end\n+\n+@ignore\n+@c man begin SYNOPSIS gorbd\n+gorbd @dots{}\n+@c man end\n+@end ignore\n+\n+@c man begin OPTIONS gorbd\n+\n+@table @gcctabopt\n+@item -ORBInitialPort @var{PORT}\n+Port on which persistent naming service is to be started.\n+\n+@item -ior @var{FILE}\n+File in which to store persistent naming service's IOR reference\n+\n+@item -directory @var{DIR}\n+Directory in which to store persistent data.\n+\n+@item -restart\n+Restart persistent naming service, clearing persistent naming\n+database.\n+@end table\n+\n+Standard options:\n+@table @gcctabopt\n+@item -help\n+Print help text, then exit.\n+@item -version\n+Print version number, then exit.\n+@item -J@var{OPTION}\n+Pass argument to the Java runtime.\n+@end table\n+\n+@c man end\n+\n+@c man begin SEEALSO gorbd\n+java(1), @dots{}\n+@c man end\n+\n+@comment ----------------------------------------------------------------------\n+\n+@node serialver Tool, rmid Tool, orbd Tool, Other Tools\n+@comment node-name, next, previous, up\n+@section The @command{serialver} version command\n+@c man title gserialver version command\n+\n+@c man begin DESCRIPTION gserialver\n+\n+Print the serialVersionUID of the specified classes.\n+\n+@c man end\n+\n+@ignore\n+@c man begin SYNOPSIS gserialver\n+gserialver [@var{OPTIONS}]@dots{} @var{CLASS}@dots{}\n+@c man end\n+@end ignore\n+\n+@c man begin OPTIONS gserialver\n+\n+@table @gcctabopt\n+@item -classpath @var{PATH}\n+Class path to use to find classes.\n+@end table\n+\n+Standard options:\n+@table @gcctabopt\n+@item -help\n+Print help text, then exit.\n+@item -version\n+Print version number, then exit.\n+@item -J@var{OPTION}\n+Pass argument to the Java runtime.\n+@end table\n+\n+@c man end\n+\n+@c man begin SEEALSO gserialver\n+javac(1), @dots{}\n+@c man end\n+\n+@comment ----------------------------------------------------------------------\n+\n+@node rmid Tool, rmiregistry Tool, serialver Tool, Other Tools\n+@comment node-name, next, previous, up\n+@section The @command{rmid} RMI activation system daemon\n+@c man title grmid - RMI activation system daemon\n+\n+@c man begin DESCRIPTION grmid\n+\n+To be written @dots{}\n+\n+@c man end\n+\n+@ignore\n+@c man begin SYNOPSIS grmid\n+grmid [@var{OPTIONS}]@dots{}\n+@c man end\n+@end ignore\n+\n+@c man begin OPTIONS grmid\n+\n+Activation process control:\n+@table @gcctabopt\n+@item -port @var{PORT}\n+Port on which activation system is to be started.\n+\n+@item -restart\n+Restart activation system, clearing persistent naming database, if\n+any.\n+\n+@item -stop\n+Stop activation system.\n+@end table\n+\n+Persistence:\n+@table @gcctabopt\n+@item -persistent\n+Make activation system persistent.\n+\n+@item -directory @var{DIR}\n+Directory in which to store persistent data.\n+@end table\n+\n+Debugging:\n+@table @gcctabopt\n+@item -verbose\n+Log binding events to standard out.\n+@end table\n+\n+Standard options:\n+@table @gcctabopt\n+@item -help\n+Print help text, then exit.\n+@item -version\n+Print version number, then exit.\n+@item -J@var{OPTION}\n+Pass argument to the Java runtime.\n+@end table\n+\n+@c man end\n+\n+@c man begin SEEALSO grmid\n+java(1), @dots{}\n+@c man end\n+\n+@comment ----------------------------------------------------------------------\n+\n+@node rmiregistry Tool, tnameserv Tool, rmid Tool, Other Tools\n+@comment node-name, next, previous, up\n+@section The @command{rmiregistry} Tool\n+@c man title grmiregistry - Remote object registry\n+\n+@c man begin DESCRIPTION grmiregistry\n+\n+@command{grmiregistry} starts a remote object registry on the current\n+host.  If no port number is specified, then port 1099 is used.\n+\n+@c man end\n+\n+@ignore\n+@c man begin SYNOPSIS grmiregistry\n+grmiregistry [@var{OPTIONS}]@dots{} @var{PORT}\n+@c man end\n+@end ignore\n+\n+@c man begin OPTIONS grmiregistry\n+\n+Registry process control:\n+@table @gcctabopt\n+@item -restart\n+Restart RMI naming service, clearing persistent naming database, if\n+any.\n+\n+@item -stop\n+Stop RMI naming service.\n+@end table\n+\n+Persistence:\n+@table @gcctabopt\n+@item -persistent\n+Make RMI naming service persistent.\n+\n+@item -directory @var{DIR}\n+Directory in which to store persistent data.\n+@end table\n+\n+Debugging:\n+@table @gcctabopt\n+@item -verbose\n+Log binding events to standard out.\n+@end table\n+\n+Standard options:\n+@table @gcctabopt\n+@item -help\n+Print help text, then exit.\n+@item -version\n+Print version number, then exit.\n+@item -J@var{OPTION}\n+Pass argument to the Java runtime.\n+@end table\n+\n+@c man end\n+\n+@c man begin SEEALSO grmiregistry\n+java(1), @dots{}\n+@c man end\n+\n+@comment ----------------------------------------------------------------------\n+\n+@node tnameserv Tool, , rmiregistry Tool, Other Tools\n+@comment node-name, next, previous, up\n+@section The @command{tnameserv} Tool\n+@c man title gtnameserv Naming service\n+\n+@c man begin DESCRIPTION gtnameserv\n+\n+To be written @dots{}\n+\n+@c man end\n+\n+@ignore\n+@c man begin SYNOPSIS gtnameserv\n+tnameserv [@var{OPTIONS}]\n+@c man end\n+@end ignore\n+\n+@c man begin OPTIONS gtnameserv\n+\n+@table @gcctabopt\n+@item -ORBInitialPort @var{PORT}\n+Port on which naming service is to be started.\n+\n+@item -ior @var{FILE}\n+File in which to store naming service's IOR reference.\n+@end table\n+\n+Standard options:\n+@table @gcctabopt\n+@item -help\n+Print help text, then exit.\n+@item -version\n+Print version number, then exit.\n+@item -J@var{OPTION}\n+Pass argument to the Java runtime.\n+@end table\n+\n+@c man end\n+\n+@c man begin SEEALSO gtnameserv\n+java(1), @dots{}\n+@c man end\n \n @comment ----------------------------------------------------------------------\n \n-@node I18N Issues, , Security Tools, Top\n+@node I18N Issues, , Other Tools, Top\n @comment node-name, next, previous, up\n @chapter I18N Issues\n ", "previous_filename": "libjava/classpath/doc/tools.texinfo"}, {"sha": "6d59b5d8fb4cc1caf3422737101afef0a6bfe8ee", "filename": "libjava/classpath/doc/cp-vmintegration.texinfo", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54a0a14af93b2e7ad37e7ad7ef0a0c86eb9eaf2c/libjava%2Fclasspath%2Fdoc%2Fcp-vmintegration.texinfo", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54a0a14af93b2e7ad37e7ad7ef0a0c86eb9eaf2c/libjava%2Fclasspath%2Fdoc%2Fcp-vmintegration.texinfo", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fdoc%2Fcp-vmintegration.texinfo?ref=54a0a14af93b2e7ad37e7ad7ef0a0c86eb9eaf2c", "previous_filename": "libjava/classpath/doc/vmintegration.texinfo"}]}