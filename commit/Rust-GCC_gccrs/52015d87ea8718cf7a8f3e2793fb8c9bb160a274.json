{"sha": "52015d87ea8718cf7a8f3e2793fb8c9bb160a274", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTIwMTVkODdlYTg3MThjZjdhOGYzZTI3OTNmYjhjOWJiMTYwYTI3NA==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2002-05-09T15:07:00Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2002-05-09T15:07:00Z"}, "message": "final.c (end_final): Use C trees to output data structures for profiling.\n\n\t* final.c (end_final): Use C trees to output data structures for profiling.\n\n\t* Makefile.in (LIBGCC_DEPS): Added missing dependency on gcov-io.h\n        (profile.o): New dependency profile.h\n        (final.o): New dependency profile.h\n        * profile.h: New file. New global structure profile_info.\n        * final.h (count_edges_instrumented_now): Declare.\n        (current_function_cfg_checksum): Declare.\n        (function_list): New structure.\n        (functions_head, functions_tail): New static variables.\n        (end_final): Emits more data, removed some -ax stuff.\n        (final): Stores function names and chcksums.\n        * gcov-io.h (__write_gcov_string): New function.\n        (__read_gcov_string): New function.\n        * gcov.c (read_profile): New function.\n        (create_program_flow_graph): Uses read_profile instead of reading\n\tda_file.\n        (read_files): Removed da_file checking, it's done by read_profile now.\n        * libgcc2.c (bb_function_info): New structure.\n        (bb): New field in structure, removed some -ax stuff.\n        (__bb_exit_func): Changed structure of da_file.\n        * profile.c (count_edges_instrumented_now): New global variable.\n        (current_function_cfg_checksum): New global variable.\n        (max_counter_in_program): New global variable.\n        (get_exec_counts): New function.\n        (compute_checksum): New function.\n        (instrument_edges): Sets count_edges_instrumented_now.\n        (compute_branch_probabilities): Uses get_exec_counts instead of\n\treading da_file.\n        (branch_prob): Calls compute_checksum and writes extra data to bbg_file.\n        (init_branch_prob): Removed da_file checking, done in get_exec_counts\n\tnow.\n        (end_branch_prob): Removed da_file checking, done in get_exec_counts\n\tnow.\n        * gcov.texi: Updated information about gcov file format.\n\nFrom-SVN: r53330", "tree": {"sha": "7c77715f5a3ebfa3cd816b259737311df8df7024", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7c77715f5a3ebfa3cd816b259737311df8df7024"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/52015d87ea8718cf7a8f3e2793fb8c9bb160a274", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52015d87ea8718cf7a8f3e2793fb8c9bb160a274", "html_url": "https://github.com/Rust-GCC/gccrs/commit/52015d87ea8718cf7a8f3e2793fb8c9bb160a274", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52015d87ea8718cf7a8f3e2793fb8c9bb160a274/comments", "author": null, "committer": null, "parents": [{"sha": "02263a8a370f650d31f71376e1a899443c76fc82", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02263a8a370f650d31f71376e1a899443c76fc82", "html_url": "https://github.com/Rust-GCC/gccrs/commit/02263a8a370f650d31f71376e1a899443c76fc82"}], "stats": {"total": 52, "additions": 52, "deletions": 0}, "files": [{"sha": "a6bc7ee984fa0ce1b3dc6f88d1715f4ee9e41c01", "filename": "gcc/profile.h", "status": "added", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52015d87ea8718cf7a8f3e2793fb8c9bb160a274/gcc%2Fprofile.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52015d87ea8718cf7a8f3e2793fb8c9bb160a274/gcc%2Fprofile.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprofile.h?ref=52015d87ea8718cf7a8f3e2793fb8c9bb160a274", "patch": "@@ -0,0 +1,52 @@\n+/* profile.h - Defines data exported from profile.c to other passes.\n+   Copyright (C) 1998, 1999, 2000, 2001 Free Software Foundation, Inc.\n+\n+This file is part of GCC.\n+\n+GCC is free software; you can redistribute it and/or modify it under\n+the terms of the GNU General Public License as published by the Free\n+Software Foundation; either version 2, or (at your option) any later\n+version.\n+\n+GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING.  If not, write to the Free\n+Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n+02111-1307, USA.  */\n+\n+#ifndef GCC_PROFILE_H\n+#define GCC_PROFILE_H\n+\n+struct\n+  {\n+    /* Used by final, for allocating the proper amount of storage for the\n+       instrumented arc execution counts.  */\n+\n+    int count_instrumented_edges;\n+\n+    /* Used by final, for writing correct # of instrumented edges\n+       in this function.  */\n+\n+    int count_edges_instrumented_now;\n+\n+    /* Checksum of the cfg. Used for 'identification' of code.\n+       Used by final.  */\n+\n+    long current_function_cfg_checksum;\n+\n+    /* Max. value of counter in program corresponding to the profile data\n+       for the current function.  */\n+\n+    gcov_type max_counter_in_program;\n+\n+    /* The number of profiles merged to form the profile data for the current\n+       function.  */\n+    int count_profiles_merged;\n+\n+  } profile_info;\n+\n+#endif"}]}