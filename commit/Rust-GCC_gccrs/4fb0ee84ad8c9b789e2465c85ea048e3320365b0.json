{"sha": "4fb0ee84ad8c9b789e2465c85ea048e3320365b0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGZiMGVlODRhZDhjOWI3ODllMjQ2NWM4NWVhMDQ4ZTMzMjAzNjViMA==", "commit": {"author": {"name": "zhengnannan", "email": "zhengnannan@huawei.com", "date": "2020-10-20T16:53:04Z"}, "committer": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2020-10-20T16:53:04Z"}, "message": "AArch64: Add FLAG for get/set reg intrinsics [PR94442]\n\n2020-10-20  Zhiheng Xie  <xiezhiheng@huawei.com>\n\t    Nannan Zheng  <zhengnannan@huawei.com>\n\ngcc/ChangeLog:\n\n\t* config/aarch64/aarch64-simd-builtins.def: Add proper FLAG\n\tfor get/set reg intrinsics.", "tree": {"sha": "39c24190972d8d74b54d8ce5d3d30ec238bb44aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/39c24190972d8d74b54d8ce5d3d30ec238bb44aa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4fb0ee84ad8c9b789e2465c85ea048e3320365b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4fb0ee84ad8c9b789e2465c85ea048e3320365b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4fb0ee84ad8c9b789e2465c85ea048e3320365b0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4fb0ee84ad8c9b789e2465c85ea048e3320365b0/comments", "author": null, "committer": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "16e4f1ad44e3c00b8b73c9e4ade3d236ea7044a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16e4f1ad44e3c00b8b73c9e4ade3d236ea7044a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16e4f1ad44e3c00b8b73c9e4ade3d236ea7044a8"}], "stats": {"total": 36, "additions": 18, "deletions": 18}, "files": [{"sha": "5bc596dbffc7a3499c9f322c2050323fdf914ff4", "filename": "gcc/config/aarch64/aarch64-simd-builtins.def", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4fb0ee84ad8c9b789e2465c85ea048e3320365b0/gcc%2Fconfig%2Faarch64%2Faarch64-simd-builtins.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4fb0ee84ad8c9b789e2465c85ea048e3320365b0/gcc%2Fconfig%2Faarch64%2Faarch64-simd-builtins.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-simd-builtins.def?ref=4fb0ee84ad8c9b789e2465c85ea048e3320365b0", "patch": "@@ -70,26 +70,26 @@\n   BUILTIN_VSDQ_I (BINOP_UUS, usqadd, 0, ALL)\n \n   /* Implemented by aarch64_get_dreg<VSTRUCT:mode><VDC:mode>.  */\n-  BUILTIN_VDC (GETREG, get_dregoi, 0, ALL)\n-  BUILTIN_VDC (GETREG, get_dregci, 0, ALL)\n-  BUILTIN_VDC (GETREG, get_dregxi, 0, ALL)\n-  VAR1 (GETREGP, get_dregoi, 0, ALL, di)\n-  VAR1 (GETREGP, get_dregci, 0, ALL, di)\n-  VAR1 (GETREGP, get_dregxi, 0, ALL, di)\n+  BUILTIN_VDC (GETREG, get_dregoi, 0, AUTO_FP)\n+  BUILTIN_VDC (GETREG, get_dregci, 0, AUTO_FP)\n+  BUILTIN_VDC (GETREG, get_dregxi, 0, AUTO_FP)\n+  VAR1 (GETREGP, get_dregoi, 0, AUTO_FP, di)\n+  VAR1 (GETREGP, get_dregci, 0, AUTO_FP, di)\n+  VAR1 (GETREGP, get_dregxi, 0, AUTO_FP, di)\n   /* Implemented by aarch64_get_qreg<VSTRUCT:mode><VQ:mode>.  */\n-  BUILTIN_VQ (GETREG, get_qregoi, 0, ALL)\n-  BUILTIN_VQ (GETREG, get_qregci, 0, ALL)\n-  BUILTIN_VQ (GETREG, get_qregxi, 0, ALL)\n-  VAR1 (GETREGP, get_qregoi, 0, ALL, v2di)\n-  VAR1 (GETREGP, get_qregci, 0, ALL, v2di)\n-  VAR1 (GETREGP, get_qregxi, 0, ALL, v2di)\n+  BUILTIN_VQ (GETREG, get_qregoi, 0, AUTO_FP)\n+  BUILTIN_VQ (GETREG, get_qregci, 0, AUTO_FP)\n+  BUILTIN_VQ (GETREG, get_qregxi, 0, AUTO_FP)\n+  VAR1 (GETREGP, get_qregoi, 0, AUTO_FP, v2di)\n+  VAR1 (GETREGP, get_qregci, 0, AUTO_FP, v2di)\n+  VAR1 (GETREGP, get_qregxi, 0, AUTO_FP, v2di)\n   /* Implemented by aarch64_set_qreg<VSTRUCT:mode><VQ:mode>.  */\n-  BUILTIN_VQ (SETREG, set_qregoi, 0, ALL)\n-  BUILTIN_VQ (SETREG, set_qregci, 0, ALL)\n-  BUILTIN_VQ (SETREG, set_qregxi, 0, ALL)\n-  VAR1 (SETREGP, set_qregoi, 0, ALL, v2di)\n-  VAR1 (SETREGP, set_qregci, 0, ALL, v2di)\n-  VAR1 (SETREGP, set_qregxi, 0, ALL, v2di)\n+  BUILTIN_VQ (SETREG, set_qregoi, 0, AUTO_FP)\n+  BUILTIN_VQ (SETREG, set_qregci, 0, AUTO_FP)\n+  BUILTIN_VQ (SETREG, set_qregxi, 0, AUTO_FP)\n+  VAR1 (SETREGP, set_qregoi, 0, AUTO_FP, v2di)\n+  VAR1 (SETREGP, set_qregci, 0, AUTO_FP, v2di)\n+  VAR1 (SETREGP, set_qregxi, 0, AUTO_FP, v2di)\n   /* Implemented by aarch64_ld1x2<VQ:mode>. */\n   BUILTIN_VQ (LOADSTRUCT, ld1x2, 0, ALL)\n   /* Implemented by aarch64_ld1x2<VDC:mode>. */"}]}