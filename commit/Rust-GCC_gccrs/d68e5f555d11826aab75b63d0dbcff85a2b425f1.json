{"sha": "d68e5f555d11826aab75b63d0dbcff85a2b425f1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDY4ZTVmNTU1ZDExODI2YWFiNzViNjNkMGRiY2ZmODVhMmI0MjVmMQ==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2001-11-19T07:08:36Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2001-11-19T07:08:36Z"}, "message": "verify.cc (type::to_array): New method.\n\n\t* verify.cc (type::to_array): New method.\n\t(_Jv_BytecodeVerifier::verify_instructions_0) [op_anewarray]:\n\tConstruct new array type.\n\nFrom-SVN: r47165", "tree": {"sha": "ffae3bbbb68e0f88dec21fdae51b13c8b1584b17", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ffae3bbbb68e0f88dec21fdae51b13c8b1584b17"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d68e5f555d11826aab75b63d0dbcff85a2b425f1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d68e5f555d11826aab75b63d0dbcff85a2b425f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d68e5f555d11826aab75b63d0dbcff85a2b425f1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d68e5f555d11826aab75b63d0dbcff85a2b425f1/comments", "author": null, "committer": null, "parents": [{"sha": "755407600fec4e6ec6aefbc5e9192fa278e92035", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/755407600fec4e6ec6aefbc5e9192fa278e92035", "html_url": "https://github.com/Rust-GCC/gccrs/commit/755407600fec4e6ec6aefbc5e9192fa278e92035"}], "stats": {"total": 23, "additions": 22, "deletions": 1}, "files": [{"sha": "af02f3ecf6d557b51e6a244a9cb48db111d83cdf", "filename": "libjava/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d68e5f555d11826aab75b63d0dbcff85a2b425f1/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d68e5f555d11826aab75b63d0dbcff85a2b425f1/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=d68e5f555d11826aab75b63d0dbcff85a2b425f1", "patch": "@@ -1,5 +1,9 @@\n 2001-11-18  Tom Tromey  <tromey@redhat.com>\n \n+\t* verify.cc (type::to_array): New method.\n+\t(_Jv_BytecodeVerifier::verify_instructions_0) [op_anewarray]:\n+\tConstruct new array type.\n+\n \t* verify.cc (_Jv_BytecodeVerifier::branch_prepass) [op_sipush]:\n \tSkip a short, not a byte.\n \t[op_newarray]: Skip a byte, not a short."}, {"sha": "8c290a38d2850c4d38c319eeaee1df65abb36b38", "filename": "libjava/verify.cc", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d68e5f555d11826aab75b63d0dbcff85a2b425f1/libjava%2Fverify.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d68e5f555d11826aab75b63d0dbcff85a2b425f1/libjava%2Fverify.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fverify.cc?ref=d68e5f555d11826aab75b63d0dbcff85a2b425f1", "patch": "@@ -491,6 +491,23 @@ class _Jv_BytecodeVerifier\n       return type (k);\n     }\n \n+    // Return the array type corresponding to an initialized\n+    // reference.  We could expand this to work for other kinds of\n+    // types, but currently we don't need to.\n+    type to_array ()\n+    {\n+      // Resolving isn't ideal, because it might force us to load\n+      // another class, but it's easy.  FIXME?\n+      if (key == unresolved_reference_type)\n+\tresolve ();\n+\n+      if (key == reference_type)\n+\treturn type (_Jv_GetArrayClass (data.klass,\n+\t\t\t\t\tdata.klass->getClassLoader ()));\n+      else\n+\tverify_fail (\"internal error in type::to_array()\");\n+    }\n+\n     bool isreference () const\n     {\n       return key >= reference_type;\n@@ -2426,7 +2443,7 @@ class _Jv_BytecodeVerifier\n \t    break;\n \t  case op_anewarray:\n \t    pop_type (int_type);\n-\t    push_type (check_class_constant (get_ushort ()));\n+\t    push_type (check_class_constant (get_ushort ()).to_array ());\n \t    break;\n \t  case op_arraylength:\n \t    {"}]}