{"sha": "c9682caf900e42175e7a2668520e9297570f53b0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzk2ODJjYWY5MDBlNDIxNzVlN2EyNjY4NTIwZTkyOTc1NzBmNTNiMA==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2001-05-31T17:11:44Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2001-05-31T17:11:44Z"}, "message": "flow.c (set_block_for_new_insns): Remove bogus shortcut.\n\n\t* flow.c (set_block_for_new_insns): Remove bogus shortcut.\n\t* i386.c (ix86_expand_int_movcc): Force one of operands to be register.\n\nFrom-SVN: r42747", "tree": {"sha": "58c50d87e8316ed6e6729423e4e0a32f4a2b8125", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/58c50d87e8316ed6e6729423e4e0a32f4a2b8125"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c9682caf900e42175e7a2668520e9297570f53b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9682caf900e42175e7a2668520e9297570f53b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c9682caf900e42175e7a2668520e9297570f53b0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9682caf900e42175e7a2668520e9297570f53b0/comments", "author": null, "committer": null, "parents": [{"sha": "916f3579cc45d3b99f570c00f49aebdf895d815b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/916f3579cc45d3b99f570c00f49aebdf895d815b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/916f3579cc45d3b99f570c00f49aebdf895d815b"}], "stats": {"total": 14, "additions": 8, "deletions": 6}, "files": [{"sha": "e568026dc4199a0019caebeaf2651be25bb31463", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9682caf900e42175e7a2668520e9297570f53b0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9682caf900e42175e7a2668520e9297570f53b0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c9682caf900e42175e7a2668520e9297570f53b0", "patch": "@@ -1,3 +1,8 @@\n+Thu May 31 19:09:53 CEST 2001  Jan Hubicka  <jh@suse.cz>\n+\n+\t* flow.c (set_block_for_new_insns): Remove bogus shortcut.\n+\t* i386.c (ix86_expand_int_movcc): Force one of operands to be register.\n+\n 2001-05-31  Rodney Brown  <rbrown64@csc.com.au>\n \n \t* install.texi (Configuration): Add html links for --with-gnu-as &"}, {"sha": "2fb8b285237784de19a5ce9fcb343e2385c9db47", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9682caf900e42175e7a2668520e9297570f53b0/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9682caf900e42175e7a2668520e9297570f53b0/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=c9682caf900e42175e7a2668520e9297570f53b0", "patch": "@@ -6575,6 +6575,9 @@ ix86_expand_int_movcc (operands)\n       emit_move_insn (tmp, operands[2]);\n       operands[2] = tmp;\n     }\n+  if (! register_operand (operands[2], VOIDmode)\n+      && ! register_operand (operands[3], VOIDmode))\n+    operands[2] = force_reg (GET_MODE (operands[0]), operands[2]);\n \n   emit_insn (compare_seq);\n   emit_insn (gen_rtx_SET (VOIDmode, operands[0],"}, {"sha": "ffbf4c7b3f660e2396f0456cd16764fe234a5a60", "filename": "gcc/flow.c", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9682caf900e42175e7a2668520e9297570f53b0/gcc%2Fflow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9682caf900e42175e7a2668520e9297570f53b0/gcc%2Fflow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflow.c?ref=c9682caf900e42175e7a2668520e9297570f53b0", "patch": "@@ -6734,12 +6734,6 @@ set_block_for_new_insns (insn, bb)\n {\n   set_block_for_insn (insn, bb);\n \n-  /* We dont scan to set the block to 0 since this is the default value.  \n-     If we did, we'd end up scanning/setting the entire prologue block\n-     everytime we insert an insn into it. */\n-  if (bb->index == 0)\n-    return;\n-\n   /* Scan the previous instructions setting the block number until we find \n      an instruction that has the block number set, or we find a note \n      of any kind.  */"}]}