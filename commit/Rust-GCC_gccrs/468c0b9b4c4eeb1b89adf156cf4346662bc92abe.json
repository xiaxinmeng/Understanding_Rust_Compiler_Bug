{"sha": "468c0b9b4c4eeb1b89adf156cf4346662bc92abe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDY4YzBiOWI0YzRlZWIxYjg5YWRmMTU2Y2Y0MzQ2NjYyYmM5MmFiZQ==", "commit": {"author": {"name": "Ira Ruben", "email": "ira@gcc.gnu.org", "date": "2002-01-10T19:01:00Z"}, "committer": {"name": "Ira Ruben", "email": "ira@gcc.gnu.org", "date": "2002-01-10T19:01:00Z"}, "message": "C test case for __attribute__((deprecated)).\n\nFrom-SVN: r48746", "tree": {"sha": "20647f57190e3e9e88371c156d5c97547401279d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/20647f57190e3e9e88371c156d5c97547401279d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/468c0b9b4c4eeb1b89adf156cf4346662bc92abe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/468c0b9b4c4eeb1b89adf156cf4346662bc92abe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/468c0b9b4c4eeb1b89adf156cf4346662bc92abe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/468c0b9b4c4eeb1b89adf156cf4346662bc92abe/comments", "author": null, "committer": null, "parents": [{"sha": "251b47c208b29df9656da445e26df0b9025a4f03", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/251b47c208b29df9656da445e26df0b9025a4f03", "html_url": "https://github.com/Rust-GCC/gccrs/commit/251b47c208b29df9656da445e26df0b9025a4f03"}], "stats": {"total": 117, "additions": 117, "deletions": 0}, "files": [{"sha": "bc82c6d620093bdee9ef27097d6689b0a6c62603", "filename": "gcc/testsuite/gcc.dg/deprecated.c", "status": "added", "additions": 117, "deletions": 0, "changes": 117, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/468c0b9b4c4eeb1b89adf156cf4346662bc92abe/gcc%2Ftestsuite%2Fgcc.dg%2Fdeprecated.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/468c0b9b4c4eeb1b89adf156cf4346662bc92abe/gcc%2Ftestsuite%2Fgcc.dg%2Fdeprecated.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdeprecated.c?ref=468c0b9b4c4eeb1b89adf156cf4346662bc92abe", "patch": "@@ -0,0 +1,117 @@\n+/* Test __attribute__ ((deprecated)) */\n+/* { dg-do compile } */\n+/* { dg-options \"-Wdeprecated-declarations\" } */\n+\n+#if 1\n+typedef int INT1 __attribute__((deprecated));\n+typedef INT1 INT2 __attribute__ ((__deprecated__));\n+\n+typedef INT1 INT1a; \t\t\t/* { dg-warning \"`INT1' is deprecated\" \"\" } */\n+typedef INT1 INT1b __attribute__ ((deprecated));\n+\n+INT1 should_be_unavailable; \t\t/* { dg-warning \"`INT1' is deprecated\" \"\" } */\n+INT1a should_not_be_deprecated;\n+\n+INT1 f1(void) __attribute__ ((deprecated)); \n+INT1 f2(void) {}\t\t\t/* { dg-warning \"`INT1' is deprecated\" \"\" } */\n+\n+INT2 f3(void) __attribute__ ((__deprecated__)); \n+INT2 f4(void) {}\t\t\t/* { dg-warning \"`INT2' is deprecated\" \"\" } */\n+int f5(INT2 x);\t\t\t\t/* { dg-warning \"`INT2' is deprecated\" \"\" } */\n+int f6(INT2 x) __attribute__ ((__deprecated__)); /* { dg-warning \"`INT2' is deprecated\" \"\" } */\n+\n+typedef enum {red, green, blue} Color __attribute__((deprecated));\n+\n+int g1;\n+int g2 __attribute__ ((deprecated));\n+int g3 __attribute__ ((__deprecated__));\n+Color k;\t\t\t\t/* { dg-warning \"`Color' is deprecated\" \"\" } */\n+\n+typedef struct {\n+  int field1;\n+  int field2 __attribute__ ((deprecated));\n+  int field3;\n+  int field4 __attribute__ ((__deprecated__));\n+  union {\n+    int field5;\n+    int field6 __attribute__ ((deprecated));\n+  } u1;\n+  int field7:1;\n+  int field8:1 __attribute__ ((deprecated));\n+  union {\n+    int field9;\n+    int field10;\n+  } u2 __attribute__ ((deprecated));\n+} S1;\n+\n+int func1()\n+{\n+   INT1 w;\t\t\t\t/* { dg-warning \"`INT1' is deprecated\" \"\" } */\n+   int x __attribute__ ((deprecated));\n+   int y __attribute__ ((__deprecated__));\n+   int z;\n+   int (*pf)() = f1;\t\t\t/* { dg-warning \"`f1' is deprecated\" \"\" } */\n+\n+   z = w + x + y + g1 + g2 + g3;\t/* { dg-warning \"`x' is deprecated\" \"\" } */\n+   \t\t\t\t\t/* { dg-warning \"`y' is deprecated\" \"\" { target *-*-* } 55 } */\n+   \t\t\t\t\t/* { dg-warning \"`g2' is deprecated\" \"\" { target *-*-* } 55 } */\n+   \t\t\t\t\t/* { dg-warning \"`g3' is deprecated\" \"\" { target *-*-* } 55 } */\n+   return f1(); \t\t\t/* { dg-warning \"`f1' is deprecated\" \"\" } */\n+}\n+\n+int func2(S1 *p)\n+{\n+  S1 lp;\n+  \n+  if (p->field1)\n+     return p->field2;\t\t\t/* { dg-warning \"`field2' is deprecated\" \"\" } */\n+  else if (lp.field4)\t\t\t/* { dg-warning \"`field4' is deprecated\" \"\" } */\n+     return p->field3;\n+  \n+  p->u1.field5 = g1 + p->field7;\n+  p->u2.field9;\t\t\t\t/* { dg-warning \"`u2' is deprecated\" \"\" } */\n+  return p->u1.field6 + p->field8;\t/* { dg-warning \"`field6' is deprecated\" \"\" } */\n+  \t\t\t\t\t/* { dg-warning \"`field8' is deprecated\" \"\" { target *-*-* } 73 } */\n+}\n+\n+struct SS1 {\n+  int x;\n+  INT1 y; \t\t\t\t/* { dg-warning \"`INT1' is deprecated\" \"\" } */\n+} __attribute__ ((deprecated));\n+\n+struct SS1 *p1;\t\t\t\t/* { dg-warning \"`SS1' is deprecated\" \"\" } */\n+\n+struct __attribute__ ((__deprecated__)) SS2 {\n+  int x;\n+  INT1 y; \t\t\t\t/* { dg-warning \"`INT1' is deprecated\" \"\" } */\n+};\n+\n+struct SS2 *p2;\t\t\t\t/* { dg-warning \"`SS2' is deprecated\" \"\" } */\n+#endif\n+\n+#ifdef __cplusplus\n+class T {\n+  public:\n+    void member1(int) __attribute__ ((deprecated));\n+    void member2(INT1) __attribute__ ((__deprecated__));\n+    int member3(T *);\n+    int x;\n+} __attribute__ ((deprecated));\n+\n+T *p2;\n+\n+inline void T::member1(int) {}\n+\n+int T::member2(T *p)\n+{\n+  p->member1(1);\t\t\t/* { xxdg-warning \"`member1' is deprecated\" \"\" } */\n+  (*p).member1(2);\t\t\t/* { xxdg-warning \"`member1' is deprecated\" \"\" } */\n+  p->member2(1);\t\t\t/* { xxdg-warning \"`member2' is deprecated\" \"\" } */\n+  (*p).member2(2);\t\t\t/* { xxdg-warning \"`member2' is deprecated\" \"\" } */\n+  p->member3(p);\n+  (*p).member3(p);\n+  return f1(); \t\t\t\t/* { xxdg-warning \"`f1' is deprecated\" \"\" } */\n+}\n+#endif\n+\n+"}]}