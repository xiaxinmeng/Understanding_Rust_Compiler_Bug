{"sha": "158cccea0d097d9f181bf4e35fdeb97865c960f7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTU4Y2NjZWEwZDA5N2Q5ZjE4MWJmNGUzNWZkZWI5Nzg2NWM5NjBmNw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-03-25T08:18:33Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-03-25T08:18:33Z"}, "message": "middle-end: Avoid using DECL_UID in ASM_FORMAT_PRIVATE_NAME [PR94223]\n\nAs mentioned in the PR, we don't guarantee DECL_UID to be the same between\ncorresponding decls in -g and -g0 builds, -g can create more decls and all\nthat is guaranteed is that the DECL_UIDs of the corresponding decls compare\nthe same.\nThe following testcase gets a -fcompare-debug failure because these\nfunctions use DECL_UID as the number in ASM_FORMAT_PRIVATE_NAME.\n\nThe patch fixes it by using just a sequential number there instead.\nI don't think this can be called during PCH writing, this only happens for\nnon-public decls and the C/C++ FEs shouldn't mangling those at that point\n(furthermore C++ FE uses a different set_decl_assembler_name hook and this\none is something only the gimplifier calls on C.NNNN temporaries.\n\n2020-03-25  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR c++/94223\n\t* langhooks.c (lhd_set_decl_assembler_name): Use a static ulong\n\tcounter instead of DECL_UID.\n\n\t* lto-lang.c (lto_set_decl_assembler_name): Use a static ulong\n\tcounter instead of DECL_UID.\n\n\t* g++.dg/opt/pr94223.C: New test.", "tree": {"sha": "e30b193d875bdb9d77fe1964f4d38352ec848990", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e30b193d875bdb9d77fe1964f4d38352ec848990"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/158cccea0d097d9f181bf4e35fdeb97865c960f7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/158cccea0d097d9f181bf4e35fdeb97865c960f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/158cccea0d097d9f181bf4e35fdeb97865c960f7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/158cccea0d097d9f181bf4e35fdeb97865c960f7/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f1154b4d3c54e83d493cc66d1a30c410b9b3108a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1154b4d3c54e83d493cc66d1a30c410b9b3108a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1154b4d3c54e83d493cc66d1a30c410b9b3108a"}], "stats": {"total": 26, "additions": 23, "deletions": 3}, "files": [{"sha": "cde4653c0304d3a986ceab50ebf87e3e6c021439", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/158cccea0d097d9f181bf4e35fdeb97865c960f7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/158cccea0d097d9f181bf4e35fdeb97865c960f7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=158cccea0d097d9f181bf4e35fdeb97865c960f7", "patch": "@@ -1,5 +1,9 @@\n 2020-03-25  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR c++/94223\n+\t* langhooks.c (lhd_set_decl_assembler_name): Use a static ulong\n+\tcounter instead of DECL_UID.\n+\n \tPR tree-optimization/94300\n \t* tree-ssa-sccvn.c (vn_walk_cb_data::push_partial_def): If pd.offset\n \tis positive, make sure that off + size isn't larger than needed_len."}, {"sha": "5e3216da63129b9e2779b43596efdc7d889cd163", "filename": "gcc/langhooks.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/158cccea0d097d9f181bf4e35fdeb97865c960f7/gcc%2Flanghooks.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/158cccea0d097d9f181bf4e35fdeb97865c960f7/gcc%2Flanghooks.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flanghooks.c?ref=158cccea0d097d9f181bf4e35fdeb97865c960f7", "patch": "@@ -160,16 +160,17 @@ lhd_set_decl_assembler_name (tree decl)\n \n      Can't use just the variable's own name for a variable whose scope\n      is less than the whole compilation.  Concatenate a distinguishing\n-     number - we use the DECL_UID.  */\n+     number.  */\n \n   if (TREE_PUBLIC (decl) || DECL_FILE_SCOPE_P (decl))\n     id = targetm.mangle_decl_assembler_name (decl, DECL_NAME (decl));\n   else\n     {\n       const char *name = IDENTIFIER_POINTER (DECL_NAME (decl));\n+      static unsigned long num;\n       char *label;\n \n-      ASM_FORMAT_PRIVATE_NAME (label, name, DECL_UID (decl));\n+      ASM_FORMAT_PRIVATE_NAME (label, name, num++);\n       id = get_identifier (label);\n     }\n "}, {"sha": "4171a3dc4aede05126a15079c04598b2a4f0776d", "filename": "gcc/lto/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/158cccea0d097d9f181bf4e35fdeb97865c960f7/gcc%2Flto%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/158cccea0d097d9f181bf4e35fdeb97865c960f7/gcc%2Flto%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2FChangeLog?ref=158cccea0d097d9f181bf4e35fdeb97865c960f7", "patch": "@@ -1,3 +1,9 @@\n+2020-03-25  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/94223\n+\t* lto-lang.c (lto_set_decl_assembler_name): Use a static ulong\n+\tcounter instead of DECL_UID.\n+\n 2020-03-24  Tobias Burnus  <tobias@codesourcery.com>\n \n \tPR libgomp/81689"}, {"sha": "a3e841850edf7cb620a24f59594843b6b6669f05", "filename": "gcc/lto/lto-lang.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/158cccea0d097d9f181bf4e35fdeb97865c960f7/gcc%2Flto%2Flto-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/158cccea0d097d9f181bf4e35fdeb97865c960f7/gcc%2Flto%2Flto-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2Flto-lang.c?ref=158cccea0d097d9f181bf4e35fdeb97865c960f7", "patch": "@@ -1179,8 +1179,9 @@ lto_set_decl_assembler_name (tree decl)\n     {\n       const char *name = IDENTIFIER_POINTER (DECL_NAME (decl));\n       char *label;\n+      static unsigned long num;\n \n-      ASM_FORMAT_PRIVATE_NAME (label, name, DECL_UID (decl));\n+      ASM_FORMAT_PRIVATE_NAME (label, name, num++);\n       id = get_identifier (label);\n     }\n "}, {"sha": "048f830409e2024cd93d47d69c93ca8d9148da32", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/158cccea0d097d9f181bf4e35fdeb97865c960f7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/158cccea0d097d9f181bf4e35fdeb97865c960f7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=158cccea0d097d9f181bf4e35fdeb97865c960f7", "patch": "@@ -1,5 +1,8 @@\n 2020-03-25  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR c++/94223\n+\t* g++.dg/opt/pr94223.C: New test.\n+\n \tPR tree-optimization/94300\n \t* gcc.target/i386/avx512f-pr94300.c: New test.\n "}, {"sha": "0de012de50405c6634464ea713255129f84414a0", "filename": "gcc/testsuite/g++.dg/opt/pr94223.C", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/158cccea0d097d9f181bf4e35fdeb97865c960f7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr94223.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/158cccea0d097d9f181bf4e35fdeb97865c960f7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr94223.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr94223.C?ref=158cccea0d097d9f181bf4e35fdeb97865c960f7", "patch": "@@ -0,0 +1,5 @@\n+// PR c++/94223\n+// { dg-do compile }\n+// { dg-options \"-O0 -std=c++2a -fcompare-debug\" }\n+\n+#include \"../cpp1z/init-statement6.C\""}]}