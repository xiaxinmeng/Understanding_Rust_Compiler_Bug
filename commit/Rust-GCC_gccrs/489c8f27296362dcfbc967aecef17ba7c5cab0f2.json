{"sha": "489c8f27296362dcfbc967aecef17ba7c5cab0f2", "node_id": "C_kwDOANBUbNoAKDQ4OWM4ZjI3Mjk2MzYyZGNmYmM5NjdhZWNlZjE3YmE3YzVjYWIwZjI", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2021-10-13T11:42:22Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2021-10-13T13:12:43Z"}, "message": "Add GSI_LAST_NEW_STMT iterator update\n\nCurrently when adding a sequence before there's no way to get the\niterator placed at the last added stmt which results in convoluted\ncode in the if-conversion usecase.  The following adds\nGSI_LAST_NEW_STMT and corrects one obvious mistake in\nexecute_update_addresses_taken as well as tries to avoid the\njust filed PR102726 by biasing the enum values to be outside of\nthe boolean 0/1 range.\n\n2021-10-13  Richard Biener  <rguenther@suse.de>\n\n\t* gimple-iterator.h (gsi_iterator_update): Add GSI_LAST_NEW_STMT,\n\tstart at integer value 2.\n\t* gimple-iterator.c (gsi_insert_seq_nodes_before): Update\n\tthe iterator for GSI_LAST_NEW_STMT.\n\t(gsi_insert_seq_nodes_after): Likewise.\n\t* tree-if-conv.c (predicate_statements): Use GSI_LAST_NEW_STMT.\n\t* tree-ssa.c (execute_update_addresses_taken): Correct bogus\n\targuments to gsi_replace.", "tree": {"sha": "3715aaa30654be1c67d3969cf5356d985828e8e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3715aaa30654be1c67d3969cf5356d985828e8e4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/489c8f27296362dcfbc967aecef17ba7c5cab0f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/489c8f27296362dcfbc967aecef17ba7c5cab0f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/489c8f27296362dcfbc967aecef17ba7c5cab0f2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/489c8f27296362dcfbc967aecef17ba7c5cab0f2/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e415bc4c035b1b655cf2cafcbe515382d1cefc93", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e415bc4c035b1b655cf2cafcbe515382d1cefc93", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e415bc4c035b1b655cf2cafcbe515382d1cefc93"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "ee4e63a3bd3427f1bf33a4c6f49d2290b20e6a56", "filename": "gcc/gimple-iterator.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/489c8f27296362dcfbc967aecef17ba7c5cab0f2/gcc%2Fgimple-iterator.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/489c8f27296362dcfbc967aecef17ba7c5cab0f2/gcc%2Fgimple-iterator.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-iterator.c?ref=489c8f27296362dcfbc967aecef17ba7c5cab0f2", "patch": "@@ -162,6 +162,9 @@ gsi_insert_seq_nodes_before (gimple_stmt_iterator *i,\n     case GSI_CONTINUE_LINKING:\n       i->ptr = first;\n       break;\n+    case GSI_LAST_NEW_STMT:\n+      i->ptr = last;\n+      break;\n     case GSI_SAME_STMT:\n       break;\n     default:\n@@ -271,6 +274,7 @@ gsi_insert_seq_nodes_after (gimple_stmt_iterator *i,\n     case GSI_NEW_STMT:\n       i->ptr = first;\n       break;\n+    case GSI_LAST_NEW_STMT:\n     case GSI_CONTINUE_LINKING:\n       i->ptr = last;\n       break;"}, {"sha": "0e384f72f94d521808bdee9e43a0c015b4085f15", "filename": "gcc/gimple-iterator.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/489c8f27296362dcfbc967aecef17ba7c5cab0f2/gcc%2Fgimple-iterator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/489c8f27296362dcfbc967aecef17ba7c5cab0f2/gcc%2Fgimple-iterator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-iterator.h?ref=489c8f27296362dcfbc967aecef17ba7c5cab0f2", "patch": "@@ -46,8 +46,8 @@ struct gphi_iterator : public gimple_stmt_iterator\n  \n enum gsi_iterator_update\n {\n-  GSI_NEW_STMT,\t\t/* Only valid when single statement is added, move\n-\t\t\t   iterator to it.  */\n+  GSI_NEW_STMT = 2,\t/* Move the iterator to the first statement added.  */\n+  GSI_LAST_NEW_STMT,\t/* Move the iterator to the last statement added.  */\n   GSI_SAME_STMT,\t/* Leave the iterator at the same statement.  */\n   GSI_CONTINUE_LINKING\t/* Move iterator to whatever position is suitable\n \t\t\t   for linking other statements in the same"}, {"sha": "0b6b07cfac62a92c7fa2ecffbe691c6e896ab660", "filename": "gcc/tree-if-conv.c", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/489c8f27296362dcfbc967aecef17ba7c5cab0f2/gcc%2Ftree-if-conv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/489c8f27296362dcfbc967aecef17ba7c5cab0f2/gcc%2Ftree-if-conv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-if-conv.c?ref=489c8f27296362dcfbc967aecef17ba7c5cab0f2", "patch": "@@ -2582,11 +2582,7 @@ predicate_statements (loop_p loop)\n \t    {\n \t      gsi_remove (&gsi, true);\n \t      gsi_insert_seq_before (&gsi, rewrite_to_defined_overflow (stmt),\n-\t\t\t\t     GSI_SAME_STMT);\n-\t      if (gsi_end_p (gsi))\n-\t\tgsi = gsi_last_bb (gimple_bb (stmt));\n-\t      else\n-\t\tgsi_prev (&gsi);\n+\t\t\t\t     GSI_LAST_NEW_STMT);\n \t    }\n \t  else if (gimple_vdef (stmt))\n \t    {"}, {"sha": "fde13defebf7351934b36d5907f0cb8a9ad9f308", "filename": "gcc/tree-ssa.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/489c8f27296362dcfbc967aecef17ba7c5cab0f2/gcc%2Ftree-ssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/489c8f27296362dcfbc967aecef17ba7c5cab0f2/gcc%2Ftree-ssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa.c?ref=489c8f27296362dcfbc967aecef17ba7c5cab0f2", "patch": "@@ -2079,7 +2079,7 @@ execute_update_addresses_taken (void)\n \t\t\t    gcall *call\n \t\t\t      = gimple_build_call_internal (IFN_ASAN_POISON, 0);\n \t\t\t    gimple_call_set_lhs (call, var);\n-\t\t\t    gsi_replace (&gsi, call, GSI_SAME_STMT);\n+\t\t\t    gsi_replace (&gsi, call, true);\n \t\t\t  }\n \t\t\telse\n \t\t\t  {\n@@ -2088,7 +2088,7 @@ execute_update_addresses_taken (void)\n \t\t\t       previous out of scope value.  */\n \t\t\t    tree clobber = build_clobber (TREE_TYPE (var));\n \t\t\t    gimple *g = gimple_build_assign (var, clobber);\n-\t\t\t    gsi_replace (&gsi, g, GSI_SAME_STMT);\n+\t\t\t    gsi_replace (&gsi, g, true);\n \t\t\t  }\n \t\t\tcontinue;\n \t\t      }"}]}