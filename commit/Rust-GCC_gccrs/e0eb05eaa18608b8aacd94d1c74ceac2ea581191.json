{"sha": "e0eb05eaa18608b8aacd94d1c74ceac2ea581191", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTBlYjA1ZWFhMTg2MDhiOGFhY2Q5NGQxYzc0Y2VhYzJlYTU4MTE5MQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2007-04-26T07:29:46Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2007-04-26T07:29:46Z"}, "message": "re PR tree-optimization/30558 (ICE with OpenMP and exceptions)\n\n\tPR tree-optimization/30558\n\t* tree-eh.c (lower_eh_filter): If EH_FILTER_MUST_NOT_THROW\n\tclear this_state.prev_try.\n\n\t* g++.dg/gomp/pr30558.C: New test.\n\nFrom-SVN: r124177", "tree": {"sha": "8e713314d70a2457d3d1988305713743db656680", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8e713314d70a2457d3d1988305713743db656680"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e0eb05eaa18608b8aacd94d1c74ceac2ea581191", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0eb05eaa18608b8aacd94d1c74ceac2ea581191", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e0eb05eaa18608b8aacd94d1c74ceac2ea581191", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0eb05eaa18608b8aacd94d1c74ceac2ea581191/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "29173496a0453f740b280bcc1f1ddbebc2726ced", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29173496a0453f740b280bcc1f1ddbebc2726ced", "html_url": "https://github.com/Rust-GCC/gccrs/commit/29173496a0453f740b280bcc1f1ddbebc2726ced"}], "stats": {"total": 56, "additions": 56, "deletions": 0}, "files": [{"sha": "b99d527209196dbacb3a41f977712dd21966b52c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0eb05eaa18608b8aacd94d1c74ceac2ea581191/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0eb05eaa18608b8aacd94d1c74ceac2ea581191/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e0eb05eaa18608b8aacd94d1c74ceac2ea581191", "patch": "@@ -1,3 +1,9 @@\n+2007-04-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/30558\n+\t* tree-eh.c (lower_eh_filter): If EH_FILTER_MUST_NOT_THROW\n+\tclear this_state.prev_try.\n+\n 2007-04-26  Richard Sandiford  <richard@codesourcery.com>\n \t    Mark Mitchell  <mark@codesourcery.com>\n "}, {"sha": "d75284ce407c552ca74f5c18c40a428fc5d82a5a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0eb05eaa18608b8aacd94d1c74ceac2ea581191/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0eb05eaa18608b8aacd94d1c74ceac2ea581191/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e0eb05eaa18608b8aacd94d1c74ceac2ea581191", "patch": "@@ -1,3 +1,8 @@\n+2007-04-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/30558\n+\t* g++.dg/gomp/pr30558.C: New test.\n+\n 2007-04-24  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/31338"}, {"sha": "e4929220b81aeb870b83a8346533556c5b90b0a4", "filename": "gcc/testsuite/g++.dg/gomp/pr30558.C", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0eb05eaa18608b8aacd94d1c74ceac2ea581191/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fpr30558.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0eb05eaa18608b8aacd94d1c74ceac2ea581191/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fpr30558.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fpr30558.C?ref=e0eb05eaa18608b8aacd94d1c74ceac2ea581191", "patch": "@@ -0,0 +1,41 @@\n+// PR tree-optimization/30558\n+// { dg-do compile }\n+// { dg-options \"-fopenmp\" }\n+\n+template <typename T> struct F\n+{\n+  ~F ();\n+  F (T);\n+  const T &operator[] (unsigned i) const;\n+};\n+\n+template <typename T> F<T> foo (const F<T> &x)\n+{\n+  return F<T> (x[1]);\n+}\n+\n+struct G\n+{\n+  G () { bar (2); }\n+  F<int> &operator () (F<int> x);\n+  void bar (int);\n+};\n+\n+int\n+main ()\n+{\n+  try\n+  {\n+    G g;\n+#pragma omp parallel for\n+    for (int i = 0; i < 10; ++i)\n+      {\n+\tF<int> j (i);\n+\tF<int> f = g (j);\n+\tF<int> h = foo (f);\n+      }\n+  }\n+  catch (int &e)\n+  {\n+  }\n+}"}, {"sha": "37fce85eb29df39421c7160802d2543261ea1890", "filename": "gcc/tree-eh.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0eb05eaa18608b8aacd94d1c74ceac2ea581191/gcc%2Ftree-eh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0eb05eaa18608b8aacd94d1c74ceac2ea581191/gcc%2Ftree-eh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-eh.c?ref=e0eb05eaa18608b8aacd94d1c74ceac2ea581191", "patch": "@@ -1497,6 +1497,10 @@ lower_eh_filter (struct leh_state *state, tree *tp)\n \t\t\t\t\t EH_FILTER_TYPES (inner));\n   this_state = *state;\n   this_state.cur_region = this_region;\n+  /* For must not throw regions any cleanup regions inside it\n+     can't reach outer catch regions.  */\n+  if (EH_FILTER_MUST_NOT_THROW (inner))\n+    this_state.prev_try = NULL;\n \n   lower_eh_constructs_1 (&this_state, &TREE_OPERAND (*tp, 0));\n "}]}