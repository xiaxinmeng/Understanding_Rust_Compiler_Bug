{"sha": "7abebba7f231dee68ab5a16f50a3f1b182b5a5cc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2FiZWJiYTdmMjMxZGVlNjhhYjVhMTZmNTBhM2YxYjE4MmI1YTVjYw==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2013-03-28T16:03:32Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2013-03-28T16:03:32Z"}, "message": "re PR c++/56725 (extra spaces in error message)\n\n/cp\n2013-03-28  Paolo Carlini  <paolo.carlini@oracle.com>\n\t    Manuel Lopez-Ibanez  <manu@gcc.gnu.org>\n\n\tPR c++/56725\n\t* call.c (convert_like_real): Change series of two permerrors\n\tto permerror + inform (and likewise for two errors).\n\t(build_new_method_call_1): Likewise.\n\t* typeck.c (convert_for_initialization): Change additional\n\twarning or error to inform.\n\n/testsuite\n2013-03-28  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/56725\n\t* g++.dg/conversion/op4.C: Adjust.\n\t* g++.dg/cpp0x/rv1n.C: Likewise.\n\t* g++.dg/cpp0x/rv2n.C: Likewise.\n\t* g++.dg/cpp0x/template_deduction.C: Likewise.\n\t* g++.dg/expr/cond8.C: Likewise.\n\t* g++.dg/other/error4.C: Likewise.\n\t* g++.old-deja/g++.bugs/900514_03.C: Likewise.\n\t* g++.old-deja/g++.bugs/900519_02.C: Likewise.\n\t* g++.old-deja/g++.bugs/900519_03.C: Likewise.\n\t* g++.old-deja/g++.bugs/900520_02.C: Likewise.\n\t* g++.old-deja/g++.jason/conversion2.C: Likewise.\n\t* g++.old-deja/g++.law/cvt20.C: Likewise.\n\t* g++.old-deja/g++.law/cvt8.C: Likewise.\n\t* g++.old-deja/g++.law/init8.C: Likewise.\n\t* g++.old-deja/g++.mike/net12.C: Likewise.\n\t* g++.old-deja/g++.mike/net8.C: Likewise.\n\t* g++.old-deja/g++.mike/p2793.C: Likewise.\n\t* g++.old-deja/g++.mike/p3836.C: Likewise.\n\t* g++.old-deja/g++.mike/p418.C: Likewise.\n\t* g++.old-deja/g++.mike/p701.C: Likewise.\n\t* g++.old-deja/g++.mike/p807.C: Likewise.\n\nFrom-SVN: r197206", "tree": {"sha": "1e29e643bd0eae0c6a366fe4ce13190c450e7785", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1e29e643bd0eae0c6a366fe4ce13190c450e7785"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7abebba7f231dee68ab5a16f50a3f1b182b5a5cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7abebba7f231dee68ab5a16f50a3f1b182b5a5cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7abebba7f231dee68ab5a16f50a3f1b182b5a5cc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7abebba7f231dee68ab5a16f50a3f1b182b5a5cc/comments", "author": null, "committer": null, "parents": [{"sha": "89ab31c15784b9d163e15688cc7c5bd589bcf465", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89ab31c15784b9d163e15688cc7c5bd589bcf465", "html_url": "https://github.com/Rust-GCC/gccrs/commit/89ab31c15784b9d163e15688cc7c5bd589bcf465"}], "stats": {"total": 154, "additions": 95, "deletions": 59}, "files": [{"sha": "ecc5503f37cee4b3f19b81d3089409dbc775b0ac", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7abebba7f231dee68ab5a16f50a3f1b182b5a5cc/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7abebba7f231dee68ab5a16f50a3f1b182b5a5cc/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=7abebba7f231dee68ab5a16f50a3f1b182b5a5cc", "patch": "@@ -1,3 +1,13 @@\n+2013-03-28  Paolo Carlini  <paolo.carlini@oracle.com>\n+\t    Manuel Lopez-Ibanez  <manu@gcc.gnu.org>\n+\n+\tPR c++/56725\n+\t* call.c (convert_like_real): Change series of two permerrors\n+\tto permerror + inform (and likewise for two errors).\n+\t(build_new_method_call_1): Likewise.\n+\t* typeck.c (convert_for_initialization): Change additional\n+\twarning or error to inform.\n+\n 2013-03-28  Gabriel Dos Reis  <gdr@integrable-solutions.net>\n \n \t* cp-tree.h (next_aggr_init_expr_arg): Remove static specifier."}, {"sha": "d39124ddcabf2f43495cff412795f3485a00a9ee", "filename": "gcc/cp/call.c", "status": "modified", "additions": 14, "deletions": 12, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7abebba7f231dee68ab5a16f50a3f1b182b5a5cc/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7abebba7f231dee68ab5a16f50a3f1b182b5a5cc/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=7abebba7f231dee68ab5a16f50a3f1b182b5a5cc", "patch": "@@ -5836,11 +5836,11 @@ convert_like_real (conversion *convs, tree expr, tree fn, int argnum,\n \t    break;\n \t}\n \n-      permerror (loc, \"invalid conversion from %qT to %qT\",\n-\t\t TREE_TYPE (expr), totype);\n-      if (fn)\n-\tpermerror (DECL_SOURCE_LOCATION (fn),\n-\t\t   \"  initializing argument %P of %qD\", argnum, fn);\n+      if (permerror (loc, \"invalid conversion from %qT to %qT\",\n+\t\t     TREE_TYPE (expr), totype)\n+\t  && fn)\n+\tinform (DECL_SOURCE_LOCATION (fn),\n+\t\t\"initializing argument %P of %qD\", argnum, fn);\n \n       return cp_convert (totype, expr, complain);\n     }\n@@ -5943,7 +5943,8 @@ convert_like_real (conversion *convs, tree expr, tree fn, int argnum,\n \t  build_user_type_conversion (totype, convs->u.expr, LOOKUP_NORMAL,\n \t\t\t\t      complain);\n \t  if (fn)\n-\t    error (\"  initializing argument %P of %q+D\", argnum, fn);\n+\t    inform (input_location, \"initializing argument %P of %q+D\",\n+\t\t    argnum, fn);\n \t}\n       return error_mark_node;\n \n@@ -6074,7 +6075,8 @@ convert_like_real (conversion *convs, tree expr, tree fn, int argnum,\n \t    error_at (loc, \"cannot bind %qT lvalue to %qT\",\n \t\t      TREE_TYPE (expr), totype);\n \t    if (fn)\n-\t      error (\"  initializing argument %P of %q+D\", argnum, fn);\n+\t      inform (input_location,\n+\t\t      \"initializing argument %P of %q+D\", argnum, fn);\n \t    return error_mark_node;\n \t  }\n \n@@ -7467,11 +7469,11 @@ build_new_method_call_1 (tree instance, tree fns, vec<tree, va_gc> **args,\n       if (! (complain & tf_error))\n \treturn error_mark_node;\n \n-      permerror (input_location,\n-\t\t \"cannot call constructor %<%T::%D%> directly\",\n-\t\t basetype, name);\n-      permerror (input_location, \"  for a function-style cast, remove the \"\n-\t\t \"redundant %<::%D%>\", name);\n+      if (permerror (input_location,\n+\t\t     \"cannot call constructor %<%T::%D%> directly\",\n+\t\t     basetype, name))\n+\tinform (input_location, \"for a function-style cast, remove the \"\n+\t\t\"redundant %<::%D%>\", name);\n       call = build_functional_cast (basetype, build_tree_list_vec (user_args),\n \t\t\t\t    complain);\n       return call;"}, {"sha": "4b6468ce6952354ba20395c410d8cbd670e4090e", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7abebba7f231dee68ab5a16f50a3f1b182b5a5cc/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7abebba7f231dee68ab5a16f50a3f1b182b5a5cc/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=7abebba7f231dee68ab5a16f50a3f1b182b5a5cc", "patch": "@@ -7984,13 +7984,12 @@ convert_for_initialization (tree exp, tree type, tree rhs, int flags,\n       if (fndecl)\n \tsavew = warningcount + werrorcount, savee = errorcount;\n       rhs = initialize_reference (type, rhs, flags, complain);\n-      if (fndecl)\n-\t{\n-\t  if (warningcount + werrorcount > savew)\n-\t    warning (0, \"in passing argument %P of %q+D\", parmnum, fndecl);\n-\t  else if (errorcount > savee)\n-\t    error (\"in passing argument %P of %q+D\", parmnum, fndecl);\n-\t}\n+\n+      if (fndecl\n+\t  && (warningcount + werrorcount > savew || errorcount > savee))\n+\tinform (input_location,\n+\t\t\"in passing argument %P of %q+D\", parmnum, fndecl);\n+\n       return rhs;\n     }\n "}, {"sha": "c5f0c2796b7a85b4a992f429d0e358baa8d02761", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 26, "deletions": 1, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7abebba7f231dee68ab5a16f50a3f1b182b5a5cc/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7abebba7f231dee68ab5a16f50a3f1b182b5a5cc/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7abebba7f231dee68ab5a16f50a3f1b182b5a5cc", "patch": "@@ -1,7 +1,32 @@\n+2013-03-28  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/56725\n+\t* g++.dg/conversion/op4.C: Adjust.\n+\t* g++.dg/cpp0x/rv1n.C: Likewise.\n+\t* g++.dg/cpp0x/rv2n.C: Likewise.\n+\t* g++.dg/cpp0x/template_deduction.C: Likewise.\n+\t* g++.dg/expr/cond8.C: Likewise.\n+\t* g++.dg/other/error4.C: Likewise.\n+\t* g++.old-deja/g++.bugs/900514_03.C: Likewise.\n+\t* g++.old-deja/g++.bugs/900519_02.C: Likewise.\n+\t* g++.old-deja/g++.bugs/900519_03.C: Likewise.\n+\t* g++.old-deja/g++.bugs/900520_02.C: Likewise.\n+\t* g++.old-deja/g++.jason/conversion2.C: Likewise.\n+\t* g++.old-deja/g++.law/cvt20.C: Likewise.\n+\t* g++.old-deja/g++.law/cvt8.C: Likewise.\n+\t* g++.old-deja/g++.law/init8.C: Likewise.\n+\t* g++.old-deja/g++.mike/net12.C: Likewise.\n+\t* g++.old-deja/g++.mike/net8.C: Likewise.\n+\t* g++.old-deja/g++.mike/p2793.C: Likewise.\n+\t* g++.old-deja/g++.mike/p3836.C: Likewise.\n+\t* g++.old-deja/g++.mike/p418.C: Likewise.\n+\t* g++.old-deja/g++.mike/p701.C: Likewise.\n+\t* g++.old-deja/g++.mike/p807.C: Likewise.\n+\n 2013-03-28  Tejas Belagod  <tejas.belagod@arm.com>\n \n \tPR middle-end/56694\n-\t* g++.dg/torture/pr56694.C: Fix test case to build on bare-metal \n+\t* g++.dg/torture/pr56694.C: Fix test case to build on bare-metal\n \ttargets.\n \n 2013-03-28  Marek Polacek  <polacek@redhat.com>"}, {"sha": "7ef4b6a0c6d16f699abda34ecc973110d16e2023", "filename": "gcc/testsuite/g++.dg/conversion/op4.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7abebba7f231dee68ab5a16f50a3f1b182b5a5cc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fop4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7abebba7f231dee68ab5a16f50a3f1b182b5a5cc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fop4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fop4.C?ref=7abebba7f231dee68ab5a16f50a3f1b182b5a5cc", "patch": "@@ -9,7 +9,7 @@ struct X {\n   }\n };\n \n-void add_one (X & ref) { /* { dg-error \"in passing argument\" } */\n+void add_one (X & ref) { /* { dg-message \"in passing argument\" } */\n   ++ ref.x;\n }\n "}, {"sha": "b15bdfb4c9337c649cdce680ad5e7256d461015f", "filename": "gcc/testsuite/g++.dg/cpp0x/rv1n.C", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7abebba7f231dee68ab5a16f50a3f1b182b5a5cc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv1n.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7abebba7f231dee68ab5a16f50a3f1b182b5a5cc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv1n.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv1n.C?ref=7abebba7f231dee68ab5a16f50a3f1b182b5a5cc", "patch": "@@ -30,7 +30,7 @@ const volatile A cv_source();\n \n // 1 at a time\n \n-one   sink_1_1(               A&);  // { dg-error \"\" }\n+one   sink_1_1(               A&);  // { dg-message \"\" }\n \n int test1_1()\n {\n@@ -48,7 +48,7 @@ int test1_1()\n     return 0;\n }\n \n-two   sink_1_2(const          A&);  // { dg-error \"\" }\n+two   sink_1_2(const          A&);  // { dg-message \"\" }\n \n int test1_2()\n {\n@@ -63,7 +63,7 @@ int test1_2()\n     return 0;\n }\n \n-three sink_1_3(volatile       A&);  // { dg-error \"\" }\n+three sink_1_3(volatile       A&);  // { dg-message \"\" }\n \n int test1_3()\n {\n@@ -80,7 +80,7 @@ int test1_3()\n     return 0;\n }\n \n-four  sink_1_4(const volatile A&);  // { dg-error \"\" }\n+four  sink_1_4(const volatile A&);  // { dg-message \"\" }\n \n int test1_4()\n {\n@@ -95,7 +95,7 @@ int test1_4()\n     return 0;\n }\n \n-five  sink_1_5(               A&&);  // { dg-error \"\" }\n+five  sink_1_5(               A&&);  // { dg-message \"\" }\n \n int test1_5()\n {\n@@ -113,7 +113,7 @@ int test1_5()\n     return 0;\n }\n \n-six   sink_1_6(const          A&&);  // { dg-error \"\" }\n+six   sink_1_6(const          A&&);  // { dg-message \"\" }\n \n int test1_6()\n {\n@@ -130,7 +130,7 @@ int test1_6()\n     return 0;\n }\n \n-seven sink_1_7(volatile       A&&);  // { dg-error \"\" }\n+seven sink_1_7(volatile       A&&);  // { dg-message \"\" }\n \n int test1_7()\n {\n@@ -147,7 +147,7 @@ int test1_7()\n     return 0;\n }\n \n-eight sink_1_8(const volatile A&&); // { dg-error \"\" }\n+eight sink_1_8(const volatile A&&); // { dg-message \"\" }\n \n int test1_8()\n {"}, {"sha": "f22e863230e155c6dffbc9be9d5d7373bc648f87", "filename": "gcc/testsuite/g++.dg/cpp0x/rv2n.C", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7abebba7f231dee68ab5a16f50a3f1b182b5a5cc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv2n.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7abebba7f231dee68ab5a16f50a3f1b182b5a5cc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv2n.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv2n.C?ref=7abebba7f231dee68ab5a16f50a3f1b182b5a5cc", "patch": "@@ -161,7 +161,7 @@ int test2_17()\n }\n \n one   sink_2_18(               A&);\n-eight sink_2_18(const volatile A&&); // { dg-error \"argument\" }\n+eight sink_2_18(const volatile A&&); // { dg-message \"argument\" }\n \n int test2_18()\n {\n@@ -288,7 +288,7 @@ int test2_27()\n }\n \n two   sink_2_28(const          A&);\n-eight sink_2_28(const volatile A&&); // { dg-error \"argument\" }\n+eight sink_2_28(const volatile A&&); // { dg-message \"argument\" }\n \n int test2_28()\n {\n@@ -362,7 +362,7 @@ int test2_37()\n }\n \n three sink_2_38(volatile       A&);\n-eight sink_2_38(const volatile A&&); // { dg-error \"argument\" }\n+eight sink_2_38(const volatile A&&); // { dg-message \"argument\" }\n \n int test2_38()\n {\n@@ -468,8 +468,8 @@ int test2_57()\n     return 0;\n }\n \n-five  sink_2_58(               A&&); // { dg-error \"argument\" }\n-eight sink_2_58(const volatile A&&); // { dg-error \"argument\" }\n+five  sink_2_58(               A&&); // { dg-message \"argument\" }\n+eight sink_2_58(const volatile A&&); // { dg-message \"argument\" }\n \n int test2_58()\n {\n@@ -505,8 +505,8 @@ int test2_67()\n     return 0;\n }\n \n-six   sink_2_68(const          A&&); // { dg-error \"argument\" }\n-eight sink_2_68(const volatile A&&); // { dg-error \"argument\" }\n+six   sink_2_68(const          A&&); // { dg-message \"argument\" }\n+eight sink_2_68(const volatile A&&); // { dg-message \"argument\" }\n \n int test2_68()\n {\n@@ -520,8 +520,8 @@ int test2_68()\n     sink_2_68(cva);\t\t// { dg-error \"lvalue\" }\n }\n \n-seven sink_2_78(volatile       A&&); // { dg-error \"argument\" }\n-eight sink_2_78(const volatile A&&); // { dg-error \"argument\" }\n+seven sink_2_78(volatile       A&&); // { dg-message \"argument\" }\n+eight sink_2_78(const volatile A&&); // { dg-message \"argument\" }\n \n int test2_78()\n {"}, {"sha": "4b8bd12b489d9a1650658dfaff5e2c27d5d97ade", "filename": "gcc/testsuite/g++.dg/cpp0x/template_deduction.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7abebba7f231dee68ab5a16f50a3f1b182b5a5cc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Ftemplate_deduction.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7abebba7f231dee68ab5a16f50a3f1b182b5a5cc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Ftemplate_deduction.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Ftemplate_deduction.C?ref=7abebba7f231dee68ab5a16f50a3f1b182b5a5cc", "patch": "@@ -35,7 +35,7 @@ test1(T&&)\n \n template <bool is_lvalue_ref, bool is_rvalue_ref, class T>\n void\n-test2(const T&&)\t\t// { dg-error \"argument\" }\n+test2(const T&&)\t\t// { dg-message \"argument\" }\n {\n     sa<is_lvalue_reference<const T&&>::value == is_lvalue_ref> t1;\n     sa<is_rvalue_reference<const T&&>::value == is_rvalue_ref> t2;"}, {"sha": "3e089537ff86048b27800df3fc2ff0f15f8e25e7", "filename": "gcc/testsuite/g++.dg/expr/cond8.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7abebba7f231dee68ab5a16f50a3f1b182b5a5cc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fcond8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7abebba7f231dee68ab5a16f50a3f1b182b5a5cc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fcond8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fcond8.C?ref=7abebba7f231dee68ab5a16f50a3f1b182b5a5cc", "patch": "@@ -3,7 +3,7 @@\n \n struct A\n {\n-  A(void*);\t\t\t// { dg-error \"initializing\" }\n+  A(void*);\t\t\t// { dg-message \"initializing\" }\n   ~A();\n };\n "}, {"sha": "a5d5e3c7e566bb37e582dcfd3a36956e38094100", "filename": "gcc/testsuite/g++.dg/other/error4.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7abebba7f231dee68ab5a16f50a3f1b182b5a5cc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ferror4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7abebba7f231dee68ab5a16f50a3f1b182b5a5cc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ferror4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ferror4.C?ref=7abebba7f231dee68ab5a16f50a3f1b182b5a5cc", "patch": "@@ -7,7 +7,7 @@\n \n struct Wrapper {};\n \n-void Foo(int const &); // { dg-error \"in passing\" \"\" }\n+void Foo(int const &); // { dg-message \"in passing\" \"\" }\n \n void Baz ()\n {"}, {"sha": "e2460d99bd0580bfc882ada43cf025681c4eaffb", "filename": "gcc/testsuite/g++.old-deja/g++.bugs/900514_03.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7abebba7f231dee68ab5a16f50a3f1b182b5a5cc/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bugs%2F900514_03.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7abebba7f231dee68ab5a16f50a3f1b182b5a5cc/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bugs%2F900514_03.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bugs%2F900514_03.C?ref=7abebba7f231dee68ab5a16f50a3f1b182b5a5cc", "patch": "@@ -16,7 +16,7 @@\n \n struct t_0_st_0;\n \n-struct t_0_st_1 {\t\t// { dg-error \"initializing\" }\n+struct t_0_st_1 {\t\t// { dg-message \"initializing\" }\n   int member;\n \n   t_0_st_1 (t_0_st_0&);// { dg-message \"note\" } \n@@ -85,7 +85,7 @@ void t_1_local_init ()\n \n struct t_2_st_0;\n \n-struct t_2_st_1 {\t\t// { dg-error \"initializing\" }\n+struct t_2_st_1 {\t\t// { dg-message \"initializing\" }\n   int member;\n \n   t_2_st_1 (t_2_st_0);\t\t// { dg-message \"note\" }"}, {"sha": "309d1ed72c4638d75e014f752a1b3874bf26c215", "filename": "gcc/testsuite/g++.old-deja/g++.bugs/900519_02.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7abebba7f231dee68ab5a16f50a3f1b182b5a5cc/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bugs%2F900519_02.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7abebba7f231dee68ab5a16f50a3f1b182b5a5cc/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bugs%2F900519_02.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bugs%2F900519_02.C?ref=7abebba7f231dee68ab5a16f50a3f1b182b5a5cc", "patch": "@@ -10,7 +10,7 @@\n extern const int cint_obj = 9;\n volatile int vint_obj = 9;\n \n-void take_int_ref (int& arg) { } // { dg-error \"\" } referenced by errors below\n+void take_int_ref (int& arg) { } // { dg-message \"\" } referenced by errors below\n \n int& global_int_ref0 = cint_obj;\t\t// { dg-error \"\" } \n int& global_int_ref1 = vint_obj;\t\t// { dg-error \"\" } "}, {"sha": "8f845f48419b09e3434b3cfb059b758add023e9c", "filename": "gcc/testsuite/g++.old-deja/g++.bugs/900519_03.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7abebba7f231dee68ab5a16f50a3f1b182b5a5cc/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bugs%2F900519_03.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7abebba7f231dee68ab5a16f50a3f1b182b5a5cc/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bugs%2F900519_03.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bugs%2F900519_03.C?ref=7abebba7f231dee68ab5a16f50a3f1b182b5a5cc", "patch": "@@ -14,8 +14,8 @@\n extern const int cint_obj;\n extern volatile int vint_obj;\n \n-void take_cint_ref (const int& arg) { }\t// { dg-error \"\" } \n-void take_vint_ref (volatile int& arg) { } // { dg-error \"\" } \n+void take_cint_ref (const int& arg) { }\t// { dg-message \"\" } \n+void take_vint_ref (volatile int& arg) { } // { dg-message \"\" } \n \n const int& global_cint_ref2 = vint_obj;\t\t// { dg-error \"\" } \n "}, {"sha": "69e0440c1207f81401cfe3f9e227a97da213a909", "filename": "gcc/testsuite/g++.old-deja/g++.bugs/900520_02.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7abebba7f231dee68ab5a16f50a3f1b182b5a5cc/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bugs%2F900520_02.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7abebba7f231dee68ab5a16f50a3f1b182b5a5cc/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bugs%2F900520_02.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bugs%2F900520_02.C?ref=7abebba7f231dee68ab5a16f50a3f1b182b5a5cc", "patch": "@@ -9,7 +9,7 @@ typedef int u_array[];\n typedef b_array &b_array_ref;\n typedef u_array &u_array_ref;\n \n-void take_b_array_ref (b_array_ref arg) { } // { dg-error \"\" } passed to here\n+void take_b_array_ref (b_array_ref arg) { } // { dg-message \"\" } passed to here\n \n extern u_array u_array_gbl_obj;\n "}, {"sha": "f10df7151abe3006cec8562d4b92a98847d76d97", "filename": "gcc/testsuite/g++.old-deja/g++.jason/conversion2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7abebba7f231dee68ab5a16f50a3f1b182b5a5cc/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fconversion2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7abebba7f231dee68ab5a16f50a3f1b182b5a5cc/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fconversion2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fconversion2.C?ref=7abebba7f231dee68ab5a16f50a3f1b182b5a5cc", "patch": "@@ -1,7 +1,7 @@\n // { dg-do assemble  }\n // PRMS Id: 3069\n \n-void f(int&);\t\t\t// { dg-error \"\" } referenced by error below\n+void f(int&);\t\t\t// { dg-message \"\" } referenced by error below\n void g(const int& i) {\n   f(i);\t\t\t\t// { dg-error \"\" } discarding const\n }"}, {"sha": "9389a107ff7fc0ff0a2dd94bda56cf90cf31c07a", "filename": "gcc/testsuite/g++.old-deja/g++.law/cvt20.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7abebba7f231dee68ab5a16f50a3f1b182b5a5cc/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fcvt20.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7abebba7f231dee68ab5a16f50a3f1b182b5a5cc/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fcvt20.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fcvt20.C?ref=7abebba7f231dee68ab5a16f50a3f1b182b5a5cc", "patch": "@@ -9,7 +9,7 @@\n \n // Compiles fine with Sun CC 2.1\n \n-void f(char *& x) // { dg-error \"passing argument\" }\n+void f(char *& x) // { dg-message \"passing argument\" }\n {\n   x++;\n }"}, {"sha": "cecec9c48f8a7b1cb4449b8906182590fa33a763", "filename": "gcc/testsuite/g++.old-deja/g++.law/cvt8.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7abebba7f231dee68ab5a16f50a3f1b182b5a5cc/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fcvt8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7abebba7f231dee68ab5a16f50a3f1b182b5a5cc/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fcvt8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fcvt8.C?ref=7abebba7f231dee68ab5a16f50a3f1b182b5a5cc", "patch": "@@ -24,7 +24,7 @@ B::operator const A&() const {\n         return a;\n }\n \n-void f(A &a) { // { dg-error \"\" } in passing argument\n+void f(A &a) { // { dg-message \"\" } in passing argument\n         printf(\"A at %x is %d\\n\", &a, a.i);\n }\n "}, {"sha": "5ed619b670d93c10481f72d775dd336baf32deb5", "filename": "gcc/testsuite/g++.old-deja/g++.law/init8.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7abebba7f231dee68ab5a16f50a3f1b182b5a5cc/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Finit8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7abebba7f231dee68ab5a16f50a3f1b182b5a5cc/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Finit8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Finit8.C?ref=7abebba7f231dee68ab5a16f50a3f1b182b5a5cc", "patch": "@@ -8,7 +8,7 @@\n \n \n const int ic = 1;\n-void f(int& arg)  // { dg-error \"passing argument 1\" }\n+void f(int& arg)  // { dg-message \"passing argument 1\" }\n {\n         if (arg) ;\n }"}, {"sha": "f27dd46c81bd0a34f73aa7a15bd92dd1d8a4b164", "filename": "gcc/testsuite/g++.old-deja/g++.mike/net12.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7abebba7f231dee68ab5a16f50a3f1b182b5a5cc/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fnet12.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7abebba7f231dee68ab5a16f50a3f1b182b5a5cc/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fnet12.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fnet12.C?ref=7abebba7f231dee68ab5a16f50a3f1b182b5a5cc", "patch": "@@ -7,7 +7,7 @@ struct Foo {\n   void m() const;\n };\n \n-void other(char &x);\t// { dg-error \"\" } reference below\n+void other(char &x);\t// { dg-message \"\" } reference below\n \n void\n Foo::m() const"}, {"sha": "d1f6864513b160f9eda7d06e5b369574a706b044", "filename": "gcc/testsuite/g++.old-deja/g++.mike/net8.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7abebba7f231dee68ab5a16f50a3f1b182b5a5cc/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fnet8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7abebba7f231dee68ab5a16f50a3f1b182b5a5cc/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fnet8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fnet8.C?ref=7abebba7f231dee68ab5a16f50a3f1b182b5a5cc", "patch": "@@ -11,14 +11,14 @@ public:\n   int bar;\n };\n \n-void func(Base&);\t\t\t// { dg-error \"passing argument 1\" } \n+void func(Base&);\t\t\t// { dg-message \"passing argument 1\" } \n \n void func2(const Derived& d) {\n   func(d);\t\t\t\t// { dg-error \"invalid initialization\" }\n }\n \n void\n-foo (int& a)\t\t\t\t// { dg-error \"in passing argument 1\" } \n+foo (int& a)\t\t\t\t// { dg-message \"in passing argument 1\" } \n {\n }\n "}, {"sha": "a331d6598be837df7fb8082f957919a5490cc257", "filename": "gcc/testsuite/g++.old-deja/g++.mike/p2793.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7abebba7f231dee68ab5a16f50a3f1b182b5a5cc/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp2793.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7abebba7f231dee68ab5a16f50a3f1b182b5a5cc/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp2793.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp2793.C?ref=7abebba7f231dee68ab5a16f50a3f1b182b5a5cc", "patch": "@@ -1,6 +1,6 @@\n // { dg-do assemble  }\n // prms-id: 2793\n \n-void f(char&) {\t\t\t// { dg-error \"\" } referenced by error below\n+void f(char&) {\t\t\t// { dg-message \"\" } referenced by error below\n   f('c');\t\t\t// { dg-error \"\" } \n }"}, {"sha": "08d15624bf608c877fa926a583b299ff6e4e82a7", "filename": "gcc/testsuite/g++.old-deja/g++.mike/p3836.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7abebba7f231dee68ab5a16f50a3f1b182b5a5cc/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp3836.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7abebba7f231dee68ab5a16f50a3f1b182b5a5cc/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp3836.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp3836.C?ref=7abebba7f231dee68ab5a16f50a3f1b182b5a5cc", "patch": "@@ -1,7 +1,7 @@\n // { dg-do assemble  }\n // prms-id: 3836\n \n-void f(int &i) {\t// { dg-error \"\" } ref line\n+void f(int &i) {\t// { dg-message \"\" } ref line\n   i = 10;\n }\n "}, {"sha": "544d5ca3953451f04e7082a80e632bb587a3d9a5", "filename": "gcc/testsuite/g++.old-deja/g++.mike/p418.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7abebba7f231dee68ab5a16f50a3f1b182b5a5cc/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp418.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7abebba7f231dee68ab5a16f50a3f1b182b5a5cc/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp418.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp418.C?ref=7abebba7f231dee68ab5a16f50a3f1b182b5a5cc", "patch": "@@ -11,7 +11,7 @@ public:\n \tint bar;\n };\n \n-void func(Base&);\t\t// { dg-error \"\" } referenced by error below\n+void func(Base&);\t\t// { dg-message \"\" } referenced by error below\n \n void func2(const Derived& d) {\n \tfunc(d);\t\t// { dg-error \"\" } should be error because of const"}, {"sha": "8e9a345e35a637cdfb19e777d7f2a2fbaf8acce9", "filename": "gcc/testsuite/g++.old-deja/g++.mike/p701.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7abebba7f231dee68ab5a16f50a3f1b182b5a5cc/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp701.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7abebba7f231dee68ab5a16f50a3f1b182b5a5cc/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp701.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp701.C?ref=7abebba7f231dee68ab5a16f50a3f1b182b5a5cc", "patch": "@@ -7,7 +7,7 @@ extern \"C\"\n }\n \n \n-void Munge(int& x) \t// { dg-error \"passing argument 1\" }\n+void Munge(int& x) \t// { dg-message \"passing argument 1\" }\n {\n    x = 2;\n }"}, {"sha": "e2f2b71ed7c72bf9b155ecac1d58bcba94021623", "filename": "gcc/testsuite/g++.old-deja/g++.mike/p807.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7abebba7f231dee68ab5a16f50a3f1b182b5a5cc/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp807.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7abebba7f231dee68ab5a16f50a3f1b182b5a5cc/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp807.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp807.C?ref=7abebba7f231dee68ab5a16f50a3f1b182b5a5cc", "patch": "@@ -24,7 +24,7 @@ class B\n };\n \n \n-int foo(B& b);\t\t\t// { dg-error \"\" } referenced below\n+int foo(B& b);\t\t\t// { dg-message \"\" } referenced below\n \n \n int main()"}]}