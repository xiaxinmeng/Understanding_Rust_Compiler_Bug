{"sha": "be340b974a62611b639ca5e2c8eacfa1144460b1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmUzNDBiOTc0YTYyNjExYjYzOWNhNWUyYzhlYWNmYTExNDQ0NjBiMQ==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2000-04-04T15:13:11Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2000-04-04T15:13:11Z"}, "message": "* gcc.dg/cast-qual-1.c: Check casts through a pointer typedef.\n\nFrom-SVN: r32903", "tree": {"sha": "a925057d821ed28ccc730cebd0903b691f9a64fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a925057d821ed28ccc730cebd0903b691f9a64fa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/be340b974a62611b639ca5e2c8eacfa1144460b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be340b974a62611b639ca5e2c8eacfa1144460b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be340b974a62611b639ca5e2c8eacfa1144460b1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be340b974a62611b639ca5e2c8eacfa1144460b1/comments", "author": null, "committer": null, "parents": [{"sha": "05ca7cfd3694bf3416f2feb91c2010a904da047e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05ca7cfd3694bf3416f2feb91c2010a904da047e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/05ca7cfd3694bf3416f2feb91c2010a904da047e"}], "stats": {"total": 34, "additions": 34, "deletions": 0}, "files": [{"sha": "10e520bcb003d966ad788752a771751aa7254e91", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be340b974a62611b639ca5e2c8eacfa1144460b1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be340b974a62611b639ca5e2c8eacfa1144460b1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=be340b974a62611b639ca5e2c8eacfa1144460b1", "patch": "@@ -1,3 +1,7 @@\n+2000-04-04  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* gcc.dg/cast-qual-1.c: Check casts through a pointer typedef.\n+\n 2000-04-03  Zack Weinberg  <zack@wolery.cumb.org>\n \n \t* gcc.dg/cpp-redef-2.c, gcc.dg/cpp-tradwarn1.c,"}, {"sha": "5597ccd64c5f8a98318a9bbfae23a635235ff17e", "filename": "gcc/testsuite/gcc.dg/cast-qual-1.c", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be340b974a62611b639ca5e2c8eacfa1144460b1/gcc%2Ftestsuite%2Fgcc.dg%2Fcast-qual-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be340b974a62611b639ca5e2c8eacfa1144460b1/gcc%2Ftestsuite%2Fgcc.dg%2Fcast-qual-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcast-qual-1.c?ref=be340b974a62611b639ca5e2c8eacfa1144460b1", "patch": "@@ -28,3 +28,33 @@ bad_assign(const void *bar)\n {\n   const char **foo = bar; /* { dg-warning \"initialization discards\" \"discarding `const' warning\" } */\n }\n+\n+typedef struct rtx_def * rtx;\n+\n+void\n+typedef_cast(const void *bar)\n+{\n+  (const rtx)bar; /* { dg-bogus \"cast discards\" \"discarding `const' warning\" } */\n+  (const rtx *)bar; /* { dg-warning \"cast discards\" \"discarding `const' warning\" } */\n+}\n+\n+void\n+typedef_cast2(const rtx bar)\n+{\n+  (const void *)bar; /* { dg-bogus \"cast discards\" \"discarding `const' warning\" } */\n+  (const void **)bar; /* { dg-warning \"cast discards\" \"discarding `const' warning\" } */\n+}\n+\n+void\n+typedef_assign(const void *bar)\n+{\n+  rtx const *foo1 = bar; /* { dg-bogus \"initialization discards\" \"discarding `const' warning\" } */\n+  const rtx *foo2 = bar; /* { dg-warning \"initialization discards\" \"discarding `const' warning\" } */\n+}\n+\n+void\n+typdef_assign2(const rtx bar)\n+{\n+  void *const *foo1 = bar; /* { dg-bogus \"initialization discards\" \"discarding `const' warning\" } */\n+  const void **foo2 = bar; /* { dg-warning \"initialization discards\" \"discarding `const' warning\" } */\n+}"}]}