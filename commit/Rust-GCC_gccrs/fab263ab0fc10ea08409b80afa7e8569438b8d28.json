{"sha": "fab263ab0fc10ea08409b80afa7e8569438b8d28", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmFiMjYzYWIwZmMxMGVhMDg0MDliODBhZmE3ZTg1Njk0MzhiOGQyOA==", "commit": {"author": {"name": "H.J. Lu", "email": "hjl.tools@gmail.com", "date": "2019-01-23T14:33:58Z"}, "committer": {"name": "H.J. Lu", "email": "hjl.tools@gmail.com", "date": "2020-07-09T13:35:57Z"}, "message": "x86: Enable FMA in rsqrt<mode>2 expander\n\nEnable FMA in rsqrt<mode>2 expander and fold rsqrtv16sf2 expander into\nrsqrt<mode>2 expander which expands to UNSPEC_RSQRT28 for TARGET_AVX512ER.\nAlthough it doesn't show performance change in our workloads, FMA can\nimprove other workloads.\n\ngcc/\n\n\tPR target/88713\n\t* config/i386/i386-expand.c (ix86_emit_swsqrtsf): Enable FMA.\n\t* config/i386/sse.md (VF_AVX512VL_VF1_128_256): New.\n\t(rsqrt<mode>2): Replace VF1_128_256 with VF_AVX512VL_VF1_128_256.\n\t(rsqrtv16sf2): Removed.\n\ngcc/testsuite/\n\n\tPR target/88713\n\t* gcc.target/i386/pr88713-1.c: New test.\n\t* gcc.target/i386/pr88713-2.c: Likewise.", "tree": {"sha": "a8c93ef2193d9ce7dd7128a0956de024c56da927", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a8c93ef2193d9ce7dd7128a0956de024c56da927"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fab263ab0fc10ea08409b80afa7e8569438b8d28", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fab263ab0fc10ea08409b80afa7e8569438b8d28", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fab263ab0fc10ea08409b80afa7e8569438b8d28", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fab263ab0fc10ea08409b80afa7e8569438b8d28/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a1e25d0008791118dd58eaddff5f4c3691f8750e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1e25d0008791118dd58eaddff5f4c3691f8750e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a1e25d0008791118dd58eaddff5f4c3691f8750e"}], "stats": {"total": 61, "additions": 42, "deletions": 19}, "files": [{"sha": "49718b7a41c9f15c288ed47334672c5518541d94", "filename": "gcc/config/i386/i386-expand.c", "status": "modified", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fab263ab0fc10ea08409b80afa7e8569438b8d28/gcc%2Fconfig%2Fi386%2Fi386-expand.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fab263ab0fc10ea08409b80afa7e8569438b8d28/gcc%2Fconfig%2Fi386%2Fi386-expand.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-expand.c?ref=fab263ab0fc10ea08409b80afa7e8569438b8d28", "patch": "@@ -15535,14 +15535,22 @@ void ix86_emit_swsqrtsf (rtx res, rtx a, machine_mode mode, bool recip)\n \t}\n     }\n \n+  mthree = force_reg (mode, mthree);\n+\n   /* e0 = x0 * a */\n   emit_insn (gen_rtx_SET (e0, gen_rtx_MULT (mode, x0, a)));\n-  /* e1 = e0 * x0 */\n-  emit_insn (gen_rtx_SET (e1, gen_rtx_MULT (mode, e0, x0)));\n \n-  /* e2 = e1 - 3. */\n-  mthree = force_reg (mode, mthree);\n-  emit_insn (gen_rtx_SET (e2, gen_rtx_PLUS (mode, e1, mthree)));\n+  if (TARGET_FMA || TARGET_AVX512F)\n+    emit_insn (gen_rtx_SET (e2,\n+\t\t\t    gen_rtx_FMA (mode, e0, x0, mthree)));\n+  else\n+    {\n+      /* e1 = e0 * x0 */\n+      emit_insn (gen_rtx_SET (e1, gen_rtx_MULT (mode, e0, x0)));\n+\n+      /* e2 = e1 - 3. */\n+      emit_insn (gen_rtx_SET (e2, gen_rtx_PLUS (mode, e1, mthree)));\n+    }\n \n   mhalf = force_reg (mode, mhalf);\n   if (recip)"}, {"sha": "d3ad5833e1f32bbb90ae11921507b9c6f7a34133", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 10, "deletions": 14, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fab263ab0fc10ea08409b80afa7e8569438b8d28/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fab263ab0fc10ea08409b80afa7e8569438b8d28/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=fab263ab0fc10ea08409b80afa7e8569438b8d28", "patch": "@@ -326,6 +326,12 @@\n   [V16SF (V8SF \"TARGET_AVX512VL\") (V4SF \"TARGET_AVX512VL\")\n    V8DF (V4DF \"TARGET_AVX512VL\") (V2DF \"TARGET_AVX512VL\")])\n \n+;; AVX512VL SF/DF plus 128- and 256-bit SF vector modes\n+(define_mode_iterator VF_AVX512VL_VF1_128_256\n+  [(V16SF \"TARGET_AVX512F\") (V8SF \"TARGET_AVX\") V4SF\n+   (V8DF \"TARGET_AVX512F\") (V4DF \"TARGET_AVX512VL\")\n+   (V2DF \"TARGET_AVX512VL\")])\n+\n (define_mode_iterator VF2_AVX512VL\n   [V8DF (V4DF \"TARGET_AVX512VL\") (V2DF \"TARGET_AVX512VL\")])\n \n@@ -2070,26 +2076,16 @@\n    (set_attr \"mode\" \"<ssescalarmode>\")])\n \n (define_expand \"rsqrt<mode>2\"\n-  [(set (match_operand:VF1_128_256 0 \"register_operand\")\n-\t(unspec:VF1_128_256\n-\t  [(match_operand:VF1_128_256 1 \"vector_operand\")] UNSPEC_RSQRT))]\n+  [(set (match_operand:VF_AVX512VL_VF1_128_256 0 \"register_operand\")\n+\t(unspec:VF_AVX512VL_VF1_128_256\n+\t  [(match_operand:VF_AVX512VL_VF1_128_256 1 \"vector_operand\")]\n+\t  UNSPEC_RSQRT))]\n   \"TARGET_SSE && TARGET_SSE_MATH\"\n {\n   ix86_emit_swsqrtsf (operands[0], operands[1], <MODE>mode, true);\n   DONE;\n })\n \n-(define_expand \"rsqrtv16sf2\"\n-  [(set (match_operand:V16SF 0 \"register_operand\")\n-\t(unspec:V16SF\n-\t  [(match_operand:V16SF 1 \"vector_operand\")]\n-\t  UNSPEC_RSQRT28))]\n-  \"TARGET_AVX512ER && TARGET_SSE_MATH\"\n-{\n-  ix86_emit_swsqrtsf (operands[0], operands[1], V16SFmode, true);\n-  DONE;\n-})\n-\n (define_insn \"<sse>_rsqrt<mode>2\"\n   [(set (match_operand:VF1_128_256 0 \"register_operand\" \"=x\")\n \t(unspec:VF1_128_256"}, {"sha": "26a0da57a41edb6010075d95aa60ef75d1412328", "filename": "gcc/testsuite/gcc.target/i386/pr88713-1.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fab263ab0fc10ea08409b80afa7e8569438b8d28/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr88713-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fab263ab0fc10ea08409b80afa7e8569438b8d28/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr88713-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr88713-1.c?ref=fab263ab0fc10ea08409b80afa7e8569438b8d28", "patch": "@@ -0,0 +1,13 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-Ofast -mno-avx512f -mfma\" } */\n+\n+extern float sqrtf (float);\n+\n+void\n+rsqrt (float* restrict r, float* restrict a)\n+{\n+  for (int i = 0; i < 64; i++)\n+    r[i] = sqrtf(a[i]);\n+}\n+\n+/* { dg-final { scan-assembler \"\\tvfmadd\\[123\\]+ps\" } } */"}, {"sha": "8b55dfcf9249a7305a9b55d02b045add30b56b38", "filename": "gcc/testsuite/gcc.target/i386/pr88713-2.c", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fab263ab0fc10ea08409b80afa7e8569438b8d28/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr88713-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fab263ab0fc10ea08409b80afa7e8569438b8d28/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr88713-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr88713-2.c?ref=fab263ab0fc10ea08409b80afa7e8569438b8d28", "patch": "@@ -0,0 +1,6 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-Ofast -march=skylake-avx512 -mno-fma\" } */\n+\n+#include \"pr88713-1.c\"\n+\n+/* { dg-final { scan-assembler \"\\tvfmadd\\[123\\]+ps\" } } */"}]}