{"sha": "4e0079cc3ce34e5d73d82ad99c96b43b7f5184e7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGUwMDc5Y2MzY2UzNGU1ZDczZDgyYWQ5OWM5NmI0M2I3ZjUxODRlNw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-16T12:17:56Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-16T12:17:56Z"}, "message": "[multiple changes]\n\n2009-04-16  Thomas Quinot  <quinot@adacore.com>\n\n\t* snames.ads-tmpl (Name_Defined): New predefined name for use by the\n\tintegrated preprocessor.\n\n\t* prep.ads, prep.adb (Setup_Hooks): New subprogram.\n\t(Initialize): Split into two subprograms, Initialize (to be called\n\tprior to compiler command line processing) and Setup_Hooks (to be called\n\tlater on when the first source file is loaded).\n\n\t* gprep.adb: Change call to Prep.Initialize to call to Prep.Setup_Hooks.\n\tAdd call to Prep.Initialize.\n\n\t* sinput-l.adb, prepcomp.adb: Change call to Prep.Initialize to call\n\tto Prep.Setup_Hooks.\n\n2009-04-16  Pascal Obry  <obry@adacore.com>\n\n\t* adaint.h, adaint.c (__gnat_chdir): New routine.\n\tSimple wrapper routines used to convert to proper encoding on\n\tWindows.\n\n\t* s-crtl.ads: Use __gnat_chdir instead of direct call to the C library.\n\n\t* a-direct.adb, g-dirope.adb: Use chdir from System.CRTL.\n\nFrom-SVN: r146174", "tree": {"sha": "8a23d332bae4e014e749fa8c79b5f8910a336c66", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8a23d332bae4e014e749fa8c79b5f8910a336c66"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4e0079cc3ce34e5d73d82ad99c96b43b7f5184e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e0079cc3ce34e5d73d82ad99c96b43b7f5184e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e0079cc3ce34e5d73d82ad99c96b43b7f5184e7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e0079cc3ce34e5d73d82ad99c96b43b7f5184e7/comments", "author": null, "committer": null, "parents": [{"sha": "9093359a7b5a48d0d93cd9f4f7620647c8d09d40", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9093359a7b5a48d0d93cd9f4f7620647c8d09d40", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9093359a7b5a48d0d93cd9f4f7620647c8d09d40"}], "stats": {"total": 118, "additions": 85, "deletions": 33}, "files": [{"sha": "188671c73845f293f80fb96ada68e11f0b3d1f10", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e0079cc3ce34e5d73d82ad99c96b43b7f5184e7/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e0079cc3ce34e5d73d82ad99c96b43b7f5184e7/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=4e0079cc3ce34e5d73d82ad99c96b43b7f5184e7", "patch": "@@ -1,3 +1,29 @@\n+2009-04-16  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* snames.ads-tmpl (Name_Defined): New predefined name for use by the\n+\tintegrated preprocessor.\n+\n+\t* prep.ads, prep.adb (Setup_Hooks): New subprogram.\n+\t(Initialize): Split into two subprograms, Initialize (to be called\n+\tprior to compiler command line processing) and Setup_Hooks (to be called\n+\tlater on when the first source file is loaded).\n+\n+\t* gprep.adb: Change call to Prep.Initialize to call to Prep.Setup_Hooks.\n+\tAdd call to Prep.Initialize.\n+\n+\t* sinput-l.adb, prepcomp.adb: Change call to Prep.Initialize to call\n+\tto Prep.Setup_Hooks.\n+\n+2009-04-16  Pascal Obry  <obry@adacore.com>\n+\n+\t* adaint.h, adaint.c (__gnat_chdir): New routine.\n+\tSimple wrapper routines used to convert to proper encoding on\n+\tWindows.\n+\n+\t* s-crtl.ads: Use __gnat_chdir instead of direct call to the C library.\n+\n+\t* a-direct.adb, g-dirope.adb: Use chdir from System.CRTL.\n+\n 2009-04-16  Quentin Ochem  <ochem@adacore.com>\n \n \t* sinput-p.adb (Clear_Source_File_Table): Use Sinput.Initialize instead"}, {"sha": "07f5836ff03880818136d45348ee8b6543c1675f", "filename": "gcc/ada/a-direct.adb", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e0079cc3ce34e5d73d82ad99c96b43b7f5184e7/gcc%2Fada%2Fa-direct.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e0079cc3ce34e5d73d82ad99c96b43b7f5184e7/gcc%2Fada%2Fa-direct.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-direct.adb?ref=4e0079cc3ce34e5d73d82ad99c96b43b7f5184e7", "patch": "@@ -1044,10 +1044,6 @@ package body Ada.Directories is\n \n    procedure Set_Directory (Directory : String) is\n       C_Dir_Name : constant String := Directory & ASCII.NUL;\n-\n-      function chdir (Dir_Name : String) return Integer;\n-      pragma Import (C, chdir, \"chdir\");\n-\n    begin\n       if not Is_Valid_Path_Name (Directory) then\n          raise Name_Error with"}, {"sha": "a777467e27d96387df94593ded55c9a5c0028a91", "filename": "gcc/ada/adaint.c", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e0079cc3ce34e5d73d82ad99c96b43b7f5184e7/gcc%2Fada%2Fadaint.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e0079cc3ce34e5d73d82ad99c96b43b7f5184e7/gcc%2Fada%2Fadaint.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fadaint.c?ref=4e0079cc3ce34e5d73d82ad99c96b43b7f5184e7", "patch": "@@ -708,6 +708,23 @@ __gnat_rename (char *from, char *to)\n #endif\n }\n \n+/* Changing directory.  */\n+\n+int\n+__gnat_chdir (char *path)\n+{\n+#if defined (__MINGW32__) && ! defined (__vxworks) && ! defined (CROSS_COMPILE)\n+  {\n+    TCHAR wpath[GNAT_MAX_PATH_LEN];\n+\n+    S2WSU (wpath, path, GNAT_MAX_PATH_LEN);\n+    return _tchdir (wpath);\n+  }\n+#else\n+  return chdir (path);\n+#endif\n+}\n+\n FILE *\n __gnat_fopen (char *path, char *mode, int encoding ATTRIBUTE_UNUSED)\n {"}, {"sha": "134cca303027147bffae27b307ac03dff47b80ff", "filename": "gcc/ada/adaint.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e0079cc3ce34e5d73d82ad99c96b43b7f5184e7/gcc%2Fada%2Fadaint.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e0079cc3ce34e5d73d82ad99c96b43b7f5184e7/gcc%2Fada%2Fadaint.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fadaint.h?ref=4e0079cc3ce34e5d73d82ad99c96b43b7f5184e7", "patch": "@@ -72,6 +72,7 @@ extern int    __gnat_stat\t\t\t   (char *,\n \t\t\t\t\t\t    struct stat *);\n extern int    __gnat_unlink                        (char *);\n extern int    __gnat_rename                        (char *, char *);\n+extern int    __gnat_chdir                         (char *);\n \n extern FILE  *__gnat_fopen\t\t\t   (char *, char *, int);\n extern FILE  *__gnat_freopen\t\t\t   (char *, char *, FILE *,"}, {"sha": "7109383555f2c247a57f67584636fc38bd9d6335", "filename": "gcc/ada/frontend.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e0079cc3ce34e5d73d82ad99c96b43b7f5184e7/gcc%2Fada%2Ffrontend.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e0079cc3ce34e5d73d82ad99c96b43b7f5184e7/gcc%2Fada%2Ffrontend.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffrontend.adb?ref=4e0079cc3ce34e5d73d82ad99c96b43b7f5184e7", "patch": "@@ -42,6 +42,7 @@ with Nlists;   use Nlists;\n with Opt;      use Opt;\n with Osint;\n with Par;\n+with Prep;\n with Prepcomp;\n with Restrict; use Restrict;\n with Rident;   use Rident;\n@@ -84,6 +85,7 @@ begin\n    Fname.UF.Initialize;\n    Checks.Initialize;\n    Sem_Warn.Initialize;\n+   Prep.Initialize;\n \n    --  Create package Standard\n "}, {"sha": "33086ed17660d32a8c7c3f10a953650cd291bb83", "filename": "gcc/ada/g-dirope.adb", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e0079cc3ce34e5d73d82ad99c96b43b7f5184e7/gcc%2Fada%2Fg-dirope.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e0079cc3ce34e5d73d82ad99c96b43b7f5184e7/gcc%2Fada%2Fg-dirope.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-dirope.adb?ref=4e0079cc3ce34e5d73d82ad99c96b43b7f5184e7", "patch": "@@ -168,10 +168,6 @@ package body GNAT.Directory_Operations is\n \n    procedure Change_Dir (Dir_Name : Dir_Name_Str) is\n       C_Dir_Name : constant String := Dir_Name & ASCII.NUL;\n-\n-      function chdir (Dir_Name : String) return Integer;\n-      pragma Import (C, chdir, \"chdir\");\n-\n    begin\n       if chdir (C_Dir_Name) /= 0 then\n          raise Directory_Error;"}, {"sha": "ec56bcc171f27a89081e85b7478a0cff5f9b1326", "filename": "gcc/ada/gprep.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e0079cc3ce34e5d73d82ad99c96b43b7f5184e7/gcc%2Fada%2Fgprep.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e0079cc3ce34e5d73d82ad99c96b43b7f5184e7/gcc%2Fada%2Fgprep.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgprep.adb?ref=4e0079cc3ce34e5d73d82ad99c96b43b7f5184e7", "patch": "@@ -167,10 +167,11 @@ package body GPrep is\n       Namet.Initialize;\n       Snames.Initialize;\n       Stringt.Initialize;\n+      Prep.Initialize;\n \n       --  Initialize the preprocessor\n \n-      Prep.Initialize\n+      Prep.Setup_Hooks\n         (Error_Msg         => Errutil.Error_Msg'Access,\n          Scan              => Scanner.Scan'Access,\n          Set_Ignore_Errors => Errutil.Set_Ignore_Errors'Access,"}, {"sha": "52328b236bb70f4efe22b599c82646475867c74d", "filename": "gcc/ada/prep.adb", "status": "modified", "additions": 22, "deletions": 20, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e0079cc3ce34e5d73d82ad99c96b43b7f5184e7/gcc%2Fada%2Fprep.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e0079cc3ce34e5d73d82ad99c96b43b7f5184e7/gcc%2Fada%2Fprep.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprep.adb?ref=4e0079cc3ce34e5d73d82ad99c96b43b7f5184e7", "patch": "@@ -119,9 +119,6 @@ package body Prep is\n    String_False : String_Id;\n    --  \"false\", as a string_id\n \n-   Name_Defined : Name_Id;\n-   --  defined, as a name_id\n-\n    ---------------\n    -- Behaviour --\n    ---------------\n@@ -691,13 +688,7 @@ package body Prep is\n    -- Initialize --\n    ----------------\n \n-   procedure Initialize\n-     (Error_Msg         : Error_Msg_Proc;\n-      Scan              : Scan_Proc;\n-      Set_Ignore_Errors : Set_Ignore_Errors_Proc;\n-      Put_Char          : Put_Char_Proc;\n-      New_EOL           : New_EOL_Proc)\n-   is\n+   procedure Initialize is\n    begin\n       if not Already_Initialized then\n          Start_String;\n@@ -707,22 +698,12 @@ package body Prep is\n          Start_String;\n          Empty_String := End_String;\n \n-         Name_Len := 7;\n-         Name_Buffer (1 .. Name_Len) := \"defined\";\n-         Name_Defined := Name_Find;\n-\n          Start_String;\n          Store_String_Chars (\"False\");\n          String_False := End_String;\n \n          Already_Initialized := True;\n       end if;\n-\n-      Prep.Error_Msg         := Error_Msg;\n-      Prep.Scan              := Scan;\n-      Prep.Set_Ignore_Errors := Set_Ignore_Errors;\n-      Prep.Put_Char          := Put_Char;\n-      Prep.New_EOL           := New_EOL;\n    end Initialize;\n \n    ------------------\n@@ -1470,4 +1451,25 @@ package body Prep is\n       Source_Modified := No_Error_Found and Modified;\n    end Preprocess;\n \n+   -----------------\n+   -- Setup_Hooks --\n+   -----------------\n+\n+   procedure Setup_Hooks\n+     (Error_Msg         : Error_Msg_Proc;\n+      Scan              : Scan_Proc;\n+      Set_Ignore_Errors : Set_Ignore_Errors_Proc;\n+      Put_Char          : Put_Char_Proc;\n+      New_EOL           : New_EOL_Proc)\n+   is\n+   begin\n+      pragma Assert (Already_Initialized);\n+\n+      Prep.Error_Msg         := Error_Msg;\n+      Prep.Scan              := Scan;\n+      Prep.Set_Ignore_Errors := Set_Ignore_Errors;\n+      Prep.Put_Char          := Put_Char;\n+      Prep.New_EOL           := New_EOL;\n+   end Setup_Hooks;\n+\n end Prep;"}, {"sha": "801167ee5fb6631dc64dd5d554995e8ab3f1e219", "filename": "gcc/ada/prep.ads", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e0079cc3ce34e5d73d82ad99c96b43b7f5184e7/gcc%2Fada%2Fprep.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e0079cc3ce34e5d73d82ad99c96b43b7f5184e7/gcc%2Fada%2Fprep.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprep.ads?ref=4e0079cc3ce34e5d73d82ad99c96b43b7f5184e7", "patch": "@@ -95,12 +95,16 @@ package Prep is\n \n    type New_EOL_Proc is access procedure;\n \n-   procedure Initialize\n+   procedure Initialize;\n+   --  Initialize the preprocessor's global structures\n+\n+   procedure Setup_Hooks\n      (Error_Msg         : Error_Msg_Proc;\n       Scan              : Scan_Proc;\n       Set_Ignore_Errors : Set_Ignore_Errors_Proc;\n       Put_Char          : Put_Char_Proc;\n       New_EOL           : New_EOL_Proc);\n+   --  Set the i/o hooks used by the preprocessor\n \n    procedure Parse_Def_File;\n    --  Parse the definition file. The definition file must have already been"}, {"sha": "108fe47d1a9337aff568610d56698d170d9ca2dd", "filename": "gcc/ada/prepcomp.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e0079cc3ce34e5d73d82ad99c96b43b7f5184e7/gcc%2Fada%2Fprepcomp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e0079cc3ce34e5d73d82ad99c96b43b7f5184e7/gcc%2Fada%2Fprepcomp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprepcomp.adb?ref=4e0079cc3ce34e5d73d82ad99c96b43b7f5184e7", "patch": "@@ -662,7 +662,7 @@ package body Prepcomp is\n             --  Initialize the preprocessor and set the characteristics of the\n             --  scanner for a definition file.\n \n-            Prep.Initialize\n+            Prep.Setup_Hooks\n               (Error_Msg         => Errout.Error_Msg'Access,\n                Scan              => Scn.Scanner.Scan'Access,\n                Set_Ignore_Errors => Errout.Set_Ignore_Errors'Access,"}, {"sha": "e2d586b46078719721a1c6eba24a9cf2209a36c3", "filename": "gcc/ada/s-crtl.ads", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e0079cc3ce34e5d73d82ad99c96b43b7f5184e7/gcc%2Fada%2Fs-crtl.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e0079cc3ce34e5d73d82ad99c96b43b7f5184e7/gcc%2Fada%2Fs-crtl.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-crtl.ads?ref=4e0079cc3ce34e5d73d82ad99c96b43b7f5184e7", "patch": "@@ -167,6 +167,9 @@ package System.CRTL is\n    procedure rmdir (dir_name : String);\n    pragma Import (C, rmdir, \"rmdir\");\n \n+   function chdir (dir_name : String) return int;\n+   pragma Import (C, chdir, \"__gnat_chdir\");\n+\n    function setvbuf\n      (stream : FILEs;\n       buffer : chars;"}, {"sha": "08cc5f8301aab0dff5be19945eeac641ff5bc7c6", "filename": "gcc/ada/sinput-l.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e0079cc3ce34e5d73d82ad99c96b43b7f5184e7/gcc%2Fada%2Fsinput-l.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e0079cc3ce34e5d73d82ad99c96b43b7f5184e7/gcc%2Fada%2Fsinput-l.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinput-l.adb?ref=4e0079cc3ce34e5d73d82ad99c96b43b7f5184e7", "patch": "@@ -494,9 +494,9 @@ package body Sinput.L is\n \n                Prep_Buffer_Last := 0;\n \n-               --  Initialize the preprocessor\n+               --  Initialize the preprocessor hooks\n \n-               Prep.Initialize\n+               Prep.Setup_Hooks\n                  (Error_Msg         => Errout.Error_Msg'Access,\n                   Scan              => Scn.Scanner.Scan'Access,\n                   Set_Ignore_Errors => Errout.Set_Ignore_Errors'Access,"}, {"sha": "cec5f5124b30662ce8ef9473adb1262c69ad2fe9", "filename": "gcc/ada/snames.ads-tmpl", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e0079cc3ce34e5d73d82ad99c96b43b7f5184e7/gcc%2Fada%2Fsnames.ads-tmpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e0079cc3ce34e5d73d82ad99c96b43b7f5184e7/gcc%2Fada%2Fsnames.ads-tmpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.ads-tmpl?ref=4e0079cc3ce34e5d73d82ad99c96b43b7f5184e7", "patch": "@@ -220,6 +220,10 @@ package Snames is\n    Name_Put_Line                       : constant Name_Id := N + $;\n    Name_To                             : constant Name_Id := N + $;\n \n+   --  Name used by the integrated preprocessor\n+\n+   Name_Defined                        : constant Name_Id := N + $;\n+\n    --  Names for packages that are treated specially by the compiler\n \n    Name_Exception_Traces               : constant Name_Id := N + $;"}]}