{"sha": "ad6be99f1ac24607e9c49cdbc9c300d76007f0b6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWQ2YmU5OWYxYWMyNDYwN2U5YzQ5Y2RiYzljMzAwZDc2MDA3ZjBiNg==", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2020-11-15T00:21:41Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-11-30T14:16:21Z"}, "message": "[Ada] Simplify analysis of assignment statements\n\ngcc/ada/\n\n\t* sem_ch5.adb (Set_Assignment_Type): Combine calls to Ekind\n\tusing membership test.\n\t(Should_Transform_BIP_Assignment): Replace assignment to a\n\t\"Result\" variable with simple return statements; avoid repeated\n\tcalls to Unqual_Conv by declaring a local constant.", "tree": {"sha": "cda6468fa75ea0fe7442ae215d553d83fa54ea9b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cda6468fa75ea0fe7442ae215d553d83fa54ea9b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ad6be99f1ac24607e9c49cdbc9c300d76007f0b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad6be99f1ac24607e9c49cdbc9c300d76007f0b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad6be99f1ac24607e9c49cdbc9c300d76007f0b6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad6be99f1ac24607e9c49cdbc9c300d76007f0b6/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "348050563099e7b73e37d28d10beac3a7dec1a86", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/348050563099e7b73e37d28d10beac3a7dec1a86", "html_url": "https://github.com/Rust-GCC/gccrs/commit/348050563099e7b73e37d28d10beac3a7dec1a86"}], "stats": {"total": 58, "additions": 26, "deletions": 32}, "files": [{"sha": "52150df5e69ee357afb94b406a528e161c9aef9a", "filename": "gcc/ada/sem_ch5.adb", "status": "modified", "additions": 26, "deletions": 32, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad6be99f1ac24607e9c49cdbc9c300d76007f0b6/gcc%2Fada%2Fsem_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad6be99f1ac24607e9c49cdbc9c300d76007f0b6/gcc%2Fada%2Fsem_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch5.adb?ref=ad6be99f1ac24607e9c49cdbc9c300d76007f0b6", "patch": "@@ -303,9 +303,9 @@ package body Sem_Ch5 is\n          --  also have an actual subtype.\n \n          if Is_Entity_Name (Opnd)\n-           and then (Ekind (Entity (Opnd)) = E_Out_Parameter\n-                      or else Ekind (Entity (Opnd)) in\n-                                E_In_Out_Parameter | E_Generic_In_Out_Parameter\n+           and then (Ekind (Entity (Opnd)) in E_Out_Parameter\n+                                            | E_In_Out_Parameter\n+                                            | E_Generic_In_Out_Parameter\n                       or else\n                         (Ekind (Entity (Opnd)) = E_Variable\n                           and then Nkind (Parent (Entity (Opnd))) =\n@@ -349,8 +349,6 @@ package body Sem_Ch5 is\n       function Should_Transform_BIP_Assignment\n         (Typ : Entity_Id) return Boolean\n       is\n-         Result : Boolean;\n-\n       begin\n          if Expander_Active\n            and then not Is_Limited_View (Typ)\n@@ -364,37 +362,33 @@ package body Sem_Ch5 is\n             --  parameterless function call if it denotes a function.\n             --  Finally, an attribute reference can be a function call.\n \n-            case Nkind (Unqual_Conv (Rhs)) is\n-               when N_Function_Call\n-                  | N_Op\n-               =>\n-                  Result := True;\n-\n-               when N_Expanded_Name\n-                  | N_Identifier\n-               =>\n-                  case Ekind (Entity (Unqual_Conv (Rhs))) is\n-                     when E_Function\n-                        | E_Operator\n-                     =>\n-                        Result := True;\n-\n-                     when others =>\n-                        Result := False;\n-                  end case;\n-\n-               when N_Attribute_Reference =>\n-                  Result := Attribute_Name (Unqual_Conv (Rhs)) = Name_Input;\n+            declare\n+               Unqual_Rhs : constant Node_Id := Unqual_Conv (Rhs);\n+            begin\n+               case Nkind (Unqual_Rhs) is\n+                  when N_Function_Call\n+                     | N_Op\n+                  =>\n+                     return True;\n+\n+                  when N_Expanded_Name\n+                     | N_Identifier\n+                  =>\n+                     return\n+                       Ekind (Entity (Unqual_Rhs)) in E_Function | E_Operator;\n+\n                   --  T'Input will turn into a call whose result type is T\n \n-               when others =>\n-                  Result := False;\n-            end case;\n+                  when N_Attribute_Reference =>\n+                     return Attribute_Name (Unqual_Rhs) = Name_Input;\n+\n+                  when others =>\n+                     return False;\n+               end case;\n+            end;\n          else\n-            Result := False;\n+            return False;\n          end if;\n-\n-         return Result;\n       end Should_Transform_BIP_Assignment;\n \n       ------------------------------"}]}