{"sha": "3ed27cf5e7f7507dc3fec0e6ad20aab55316cb57", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2VkMjdjZjVlN2Y3NTA3ZGMzZmVjMGU2YWQyMGFhYjU1MzE2Y2I1Nw==", "commit": {"author": {"name": "David S. Miller", "email": "davem@davemloft.net", "date": "2012-02-21T01:37:42Z"}, "committer": {"name": "David S. Miller", "email": "davem@gcc.gnu.org", "date": "2012-02-21T01:37:42Z"}, "message": "Explain why we don't use RDPC for sparc PIC register setup.\n\n\t* config/sparc/sparc.md (load_pcrel_sym<P:mode>): Explain why we\n\tdon't use the \"rd %pc\" instruction on v9 for PIC register loads.\n\nFrom-SVN: r184422", "tree": {"sha": "38e311a21b0073a0e3017df93bfd40876aa40ba6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/38e311a21b0073a0e3017df93bfd40876aa40ba6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3ed27cf5e7f7507dc3fec0e6ad20aab55316cb57", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ed27cf5e7f7507dc3fec0e6ad20aab55316cb57", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ed27cf5e7f7507dc3fec0e6ad20aab55316cb57", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ed27cf5e7f7507dc3fec0e6ad20aab55316cb57/comments", "author": {"login": "davem330", "id": 1053866, "node_id": "MDQ6VXNlcjEwNTM4NjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1053866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davem330", "html_url": "https://github.com/davem330", "followers_url": "https://api.github.com/users/davem330/followers", "following_url": "https://api.github.com/users/davem330/following{/other_user}", "gists_url": "https://api.github.com/users/davem330/gists{/gist_id}", "starred_url": "https://api.github.com/users/davem330/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davem330/subscriptions", "organizations_url": "https://api.github.com/users/davem330/orgs", "repos_url": "https://api.github.com/users/davem330/repos", "events_url": "https://api.github.com/users/davem330/events{/privacy}", "received_events_url": "https://api.github.com/users/davem330/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d1d7a85e534f4c388c881652f04bfe73ff71267c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1d7a85e534f4c388c881652f04bfe73ff71267c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d1d7a85e534f4c388c881652f04bfe73ff71267c"}], "stats": {"total": 9, "additions": 9, "deletions": 0}, "files": [{"sha": "df2419a5b45d9b1a92cc6a72829b54e9cb6951ff", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ed27cf5e7f7507dc3fec0e6ad20aab55316cb57/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ed27cf5e7f7507dc3fec0e6ad20aab55316cb57/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3ed27cf5e7f7507dc3fec0e6ad20aab55316cb57", "patch": "@@ -1,3 +1,8 @@\n+2012-02-20  David S. Miller  <davem@davemloft.net>\n+\n+\t* config/sparc/sparc.md (load_pcrel_sym<P:mode>): Explain why we\n+\tdon't use the \"rd %pc\" instruction on v9 for PIC register loads.\n+\n 2012-02-20  Aldy Hernandez  <aldyh@redhat.com>\n \n \tPR middle-end/52141"}, {"sha": "c0c1ef8ac38aecdc34d79264ec879eb207684166", "filename": "gcc/config/sparc/sparc.md", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ed27cf5e7f7507dc3fec0e6ad20aab55316cb57/gcc%2Fconfig%2Fsparc%2Fsparc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ed27cf5e7f7507dc3fec0e6ad20aab55316cb57/gcc%2Fconfig%2Fsparc%2Fsparc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.md?ref=3ed27cf5e7f7507dc3fec0e6ad20aab55316cb57", "patch": "@@ -1352,6 +1352,10 @@\n ;; Load in operand 0 the (absolute) address of operand 1, which is a symbolic\n ;; value subject to a PC-relative relocation.  Operand 2 is a helper function\n ;; that adds the PC value at the call point to register #(operand 3).\n+;;\n+;; Even on V9 we use this call sequence with a stub, instead of \"rd %pc, ...\"\n+;; because the RDPC instruction is extremely expensive and incurs a complete\n+;; instruction pipeline flush.\n \n (define_insn \"load_pcrel_sym<P:mode>\"\n   [(set (match_operand:P 0 \"register_operand\" \"=r\")"}]}