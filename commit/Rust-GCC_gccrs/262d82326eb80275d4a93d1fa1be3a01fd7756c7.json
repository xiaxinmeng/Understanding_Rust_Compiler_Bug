{"sha": "262d82326eb80275d4a93d1fa1be3a01fd7756c7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjYyZDgyMzI2ZWI4MDI3NWQ0YTkzZDFmYTFiZTNhMDFmZDc3NTZjNw==", "commit": {"author": {"name": "Andrey Belevantsev", "email": "abel@ispras.ru", "date": "2010-10-14T07:39:07Z"}, "committer": {"name": "Andrey Belevantsev", "email": "abel@gcc.gnu.org", "date": "2010-10-14T07:39:07Z"}, "message": "sel-sched-ir.c (maybe_tidy_empty_bb): Simplify comment.\n\n        * sel-sched-ir.c (maybe_tidy_empty_bb): Simplify comment.\n        (tidy_control_flow): Tidy vertical space.\n        (sel_remove_bb): New variable idx.  Use it to remember the basic\n        block index before deleting the block.\n        (sel_remove_empty_bb): Remove dead code, simplify and insert to ...\n        (sel_merge_blocks): ... here.\n        * sel-sched-ir.h (sel_remove_empty_bb): Remove prototype.\n\nFrom-SVN: r165453", "tree": {"sha": "40bdd5a81874bbd13e539fa496ff1cf907f8dc6b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/40bdd5a81874bbd13e539fa496ff1cf907f8dc6b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/262d82326eb80275d4a93d1fa1be3a01fd7756c7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/262d82326eb80275d4a93d1fa1be3a01fd7756c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/262d82326eb80275d4a93d1fa1be3a01fd7756c7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/262d82326eb80275d4a93d1fa1be3a01fd7756c7/comments", "author": {"login": "abonzo", "id": 20396542, "node_id": "MDQ6VXNlcjIwMzk2NTQy", "avatar_url": "https://avatars.githubusercontent.com/u/20396542?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abonzo", "html_url": "https://github.com/abonzo", "followers_url": "https://api.github.com/users/abonzo/followers", "following_url": "https://api.github.com/users/abonzo/following{/other_user}", "gists_url": "https://api.github.com/users/abonzo/gists{/gist_id}", "starred_url": "https://api.github.com/users/abonzo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abonzo/subscriptions", "organizations_url": "https://api.github.com/users/abonzo/orgs", "repos_url": "https://api.github.com/users/abonzo/repos", "events_url": "https://api.github.com/users/abonzo/events{/privacy}", "received_events_url": "https://api.github.com/users/abonzo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6699b754e1e0464109d8f7dc163ba245ec59c881", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6699b754e1e0464109d8f7dc163ba245ec59c881", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6699b754e1e0464109d8f7dc163ba245ec59c881"}], "stats": {"total": 78, "additions": 23, "deletions": 55}, "files": [{"sha": "3735ff524c09347d0396ba829751db516a49ba35", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/262d82326eb80275d4a93d1fa1be3a01fd7756c7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/262d82326eb80275d4a93d1fa1be3a01fd7756c7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=262d82326eb80275d4a93d1fa1be3a01fd7756c7", "patch": "@@ -1,3 +1,13 @@\n+2010-10-14  Andrey Belevantsev  <abel@ispras.ru>\n+\n+\t* sel-sched-ir.c (maybe_tidy_empty_bb): Simplify comment.\n+\t(tidy_control_flow): Tidy vertical space.\n+\t(sel_remove_bb): New variable idx.  Use it to remember the basic\n+\tblock index before deleting the block.\n+\t(sel_remove_empty_bb): Remove dead code, simplify and insert to ...\n+\t(sel_merge_blocks): ... here.\n+\t* sel-sched-ir.h (sel_remove_empty_bb): Remove prototype.\n+\n 2010-10-14  Jakub Jelinek  <jakub@redhat.com>\n \n \t* cse.c (is_dead_reg): Change into inline function that is not"}, {"sha": "34d5f51c2723e2fc28d7d39bfe816b5dfecf451c", "filename": "gcc/sel-sched-ir.c", "status": "modified", "additions": 13, "deletions": 53, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/262d82326eb80275d4a93d1fa1be3a01fd7756c7/gcc%2Fsel-sched-ir.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/262d82326eb80275d4a93d1fa1be3a01fd7756c7/gcc%2Fsel-sched-ir.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsel-sched-ir.c?ref=262d82326eb80275d4a93d1fa1be3a01fd7756c7", "patch": "@@ -154,6 +154,7 @@ static void free_history_vect (VEC (expr_history_def, heap) **);\n \n static void move_bb_info (basic_block, basic_block);\n static void remove_empty_bb (basic_block, bool);\n+static void sel_merge_blocks (basic_block, basic_block);\n static void sel_remove_loop_preheader (void);\n \n static bool insn_is_the_only_one_in_bb_p (insn_t);\n@@ -3598,13 +3599,11 @@ maybe_tidy_empty_bb (basic_block bb, bool recompute_toporder_p)\n         }\n     }\n \n-  /* If it is possible - merge BB with its predecessor.  */\n   if (can_merge_blocks_p (bb->prev_bb, bb))\n     sel_merge_blocks (bb->prev_bb, bb);\n   else\n-    /* Otherwise this is a block without fallthru predecessor.\n-       Just delete it.  */\n     {\n+      /* This is a block without fallthru predecessor.  Just delete it.  */\n       gcc_assert (pred_bb != NULL);\n \n       if (in_current_region_p (pred_bb))\n@@ -3700,7 +3699,6 @@ tidy_control_flow (basic_block xbb, bool full_tidying)\n       else if (recompute_toporder_p)\n \tsel_recompute_toporder ();\n     }\n-\n   return changed;\n }\n \n@@ -5020,16 +5018,18 @@ sel_add_bb (basic_block bb)\n static void\n sel_remove_bb (basic_block bb, bool remove_from_cfg_p)\n {\n+  unsigned idx = bb->index;\n+\n   gcc_assert (bb != NULL && BB_NOTE_LIST (bb) == NULL_RTX);\n \n   remove_bb_from_region (bb);\n   return_bb_to_pool (bb);\n-  bitmap_clear_bit (blocks_to_reschedule, bb->index);\n+  bitmap_clear_bit (blocks_to_reschedule, idx);\n \n   if (remove_from_cfg_p)\n     delete_and_free_basic_block (bb);\n \n-  rgn_setup_region (CONTAINING_RGN (bb->index));\n+  rgn_setup_region (CONTAINING_RGN (idx));\n }\n \n /* Concatenate info of EMPTY_BB to info of MERGE_BB.  */\n@@ -5044,50 +5044,6 @@ move_bb_info (basic_block merge_bb, basic_block empty_bb)\n \n }\n \n-/* Remove an empty basic block EMPTY_BB.  When MERGE_UP_P is true, we put\n-   EMPTY_BB's note lists into its predecessor instead of putting them\n-   into the successor.  When REMOVE_FROM_CFG_P is true, also remove\n-   the empty block.  */\n-void\n-sel_remove_empty_bb (basic_block empty_bb, bool merge_up_p,\n-\t\t     bool remove_from_cfg_p)\n-{\n-  basic_block merge_bb;\n-\n-  gcc_assert (sel_bb_empty_p (empty_bb));\n-\n-  if (merge_up_p)\n-    {\n-      merge_bb = empty_bb->prev_bb;\n-      gcc_assert (EDGE_COUNT (empty_bb->preds) == 1\n-\t\t  && EDGE_PRED (empty_bb, 0)->src == merge_bb);\n-    }\n-  else\n-    {\n-      edge e;\n-      edge_iterator ei;\n-\n-      merge_bb = bb_next_bb (empty_bb);\n-\n-      /* Redirect incoming edges (except fallthrough one) of EMPTY_BB to its\n-         successor block.  */\n-      for (ei = ei_start (empty_bb->preds);\n-           (e = ei_safe_edge (ei)); )\n-        {\n-          if (! (e->flags & EDGE_FALLTHRU))\n-            sel_redirect_edge_and_branch (e, merge_bb);\n-          else\n-            ei_next (&ei);\n-        }\n-\n-      gcc_assert (EDGE_COUNT (empty_bb->succs) == 1\n-\t\t  && EDGE_SUCC (empty_bb, 0)->dest == merge_bb);\n-    }\n-\n-  move_bb_info (merge_bb, empty_bb);\n-  remove_empty_bb (empty_bb, remove_from_cfg_p);\n-}\n-\n /* Remove EMPTY_BB.  If REMOVE_FROM_CFG_P is false, remove EMPTY_BB from\n    region, but keep it in CFG.  */\n static void\n@@ -5387,12 +5343,16 @@ sel_create_recovery_block (insn_t orig_insn)\n }\n \n /* Merge basic block B into basic block A.  */\n-void\n+static void\n sel_merge_blocks (basic_block a, basic_block b)\n {\n-  sel_remove_empty_bb (b, true, false);\n-  merge_blocks (a, b);\n+  gcc_assert (sel_bb_empty_p (b)\n+              && EDGE_COUNT (b->preds) == 1\n+              && EDGE_PRED (b, 0)->src == b->prev_bb);\n \n+  move_bb_info (b->prev_bb, b);\n+  remove_empty_bb (b, false);\n+  merge_blocks (a, b);\n   change_loops_latches (b, a);\n }\n "}, {"sha": "9ab04660c46b862c36576200e452a8d1a3267aeb", "filename": "gcc/sel-sched-ir.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/262d82326eb80275d4a93d1fa1be3a01fd7756c7/gcc%2Fsel-sched-ir.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/262d82326eb80275d4a93d1fa1be3a01fd7756c7/gcc%2Fsel-sched-ir.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsel-sched-ir.h?ref=262d82326eb80275d4a93d1fa1be3a01fd7756c7", "patch": "@@ -1618,11 +1618,9 @@ extern bool in_same_ebb_p (insn_t, insn_t);\n extern bool tidy_control_flow (basic_block, bool);\n extern void free_bb_note_pool (void);\n \n-extern void sel_remove_empty_bb (basic_block, bool, bool);\n extern void purge_empty_blocks (void);\n extern basic_block sel_split_edge (edge);\n extern basic_block sel_create_recovery_block (insn_t);\n-extern void sel_merge_blocks (basic_block, basic_block);\n extern bool sel_redirect_edge_and_branch (edge, basic_block);\n extern void sel_redirect_edge_and_branch_force (edge, basic_block);\n extern void sel_init_pipelining (void);"}]}