{"sha": "a6ae518ff7855e89b8b1e578e2124fd0a79f3f84", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTZhZTUxOGZmNzg1NWU4OWI4YjFlNTc4ZTIxMjRmZDBhNzlmM2Y4NA==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2014-01-24T14:03:19Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-01-24T14:03:19Z"}, "message": "sem_util.adb, [...]: Correct false positive warnings.\n\n2014-01-24  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_util.adb, lib-xref.adb: Correct false positive warnings.\n\nFrom-SVN: r207031", "tree": {"sha": "685f0bcb0d999d01912bd38b8e8d58ae51aed015", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/685f0bcb0d999d01912bd38b8e8d58ae51aed015"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a6ae518ff7855e89b8b1e578e2124fd0a79f3f84", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6ae518ff7855e89b8b1e578e2124fd0a79f3f84", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6ae518ff7855e89b8b1e578e2124fd0a79f3f84", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6ae518ff7855e89b8b1e578e2124fd0a79f3f84/comments", "author": null, "committer": null, "parents": [{"sha": "0bd38d942cf03bc447d09bce4045369eccfa9431", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0bd38d942cf03bc447d09bce4045369eccfa9431", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0bd38d942cf03bc447d09bce4045369eccfa9431"}], "stats": {"total": 41, "additions": 29, "deletions": 12}, "files": [{"sha": "cabedee249ac935e6e5e331ead39ff647de85357", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6ae518ff7855e89b8b1e578e2124fd0a79f3f84/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6ae518ff7855e89b8b1e578e2124fd0a79f3f84/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=a6ae518ff7855e89b8b1e578e2124fd0a79f3f84", "patch": "@@ -1,3 +1,7 @@\n+2014-01-24  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_util.adb, lib-xref.adb: Correct false positive warnings.\n+\n 2014-01-24  Vincent Celier  <celier@adacore.com>\n \n \t* projects.texi: Document that aggregate projects are only"}, {"sha": "67739211abca3308c5a76b5397a639f279e3d48f", "filename": "gcc/ada/lib-xref.adb", "status": "modified", "additions": 19, "deletions": 11, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6ae518ff7855e89b8b1e578e2124fd0a79f3f84/gcc%2Fada%2Flib-xref.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6ae518ff7855e89b8b1e578e2124fd0a79f3f84/gcc%2Fada%2Flib-xref.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-xref.adb?ref=a6ae518ff7855e89b8b1e578e2124fd0a79f3f84", "patch": "@@ -432,6 +432,7 @@ package body Lib.Xref is\n       --  ??? There are several routines here and there that perform a similar\n       --      (but subtly different) computation, which should be factored:\n \n+      --      Sem_Util.Is_LHS\n       --      Sem_Util.May_Be_Lvalue\n       --      Sem_Util.Known_To_Be_Assigned\n       --      Exp_Ch2.Expand_Entry_Parameter.In_Assignment_Context\n@@ -473,20 +474,27 @@ package body Lib.Xref is\n \n             --  ??? case of a slice assignment?\n \n-            --  ??? Note that in some cases this is called too early\n-            --  (see comments in Sem_Ch8.Find_Direct_Name), at a point where\n-            --  the tree is not fully typed yet. In that case we may lack\n-            --  an Etype for N, and we must disable the check for an implicit\n-            --  dereference. If the dereference is on an LHS, this causes a\n-            --  false positive.\n-\n             elsif (K = N_Selected_Component or else K = N_Indexed_Component)\n               and then Prefix (P) = N\n-              and then not (Present (Etype (N))\n-                              and then\n-                            Is_Access_Type (Etype (N)))\n             then\n-               N := P;\n+               --  Check for access type. First a kludge, In some cases this is\n+               --  called too early (see comments in Sem_Ch8.Find_Direct_Name),\n+               --  at a point where the tree is not fully typed yet. In that\n+               --  case we may lack an Etype for N, and we can't check the\n+               --  Etype. For now, we always return False in such a case,\n+               --  but this is clearly not right in all cases ???\n+\n+               if No (Etype (N)) then\n+                  return False;\n+\n+               elsif Is_Access_Type (Etype (N)) then\n+                  return False;\n+\n+               --  Access type case dealt with, keep going\n+\n+               else\n+                  N := P;\n+               end if;\n \n             --  All other cases, definitely not on left side\n "}, {"sha": "422e462112950b6fa8b4d50474fda3aa89a2ba2b", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6ae518ff7855e89b8b1e578e2124fd0a79f3f84/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6ae518ff7855e89b8b1e578e2124fd0a79f3f84/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=a6ae518ff7855e89b8b1e578e2124fd0a79f3f84", "patch": "@@ -9882,7 +9882,12 @@ package body Sem_Util is\n          --  a reference as a modification. It is not clear if there are any\n          --  other bad consequences. ???\n \n-         if Present (Etype (N)) and then Is_Access_Type (Etype (N)) then\n+         if No (Etype (N)) then\n+            return False;\n+\n+         --  We have an Etype set, so we can check it\n+\n+         elsif Is_Access_Type (Etype (N)) then\n             return False;\n \n          --  OK, not access type case, so just test whole expression"}]}