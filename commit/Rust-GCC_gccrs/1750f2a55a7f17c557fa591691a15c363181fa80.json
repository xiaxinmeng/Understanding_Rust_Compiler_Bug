{"sha": "1750f2a55a7f17c557fa591691a15c363181fa80", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTc1MGYyYTU1YTdmMTdjNTU3ZmE1OTE2OTFhMTVjMzYzMTgxZmE4MA==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2016-12-15T03:08:14Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@gcc.gnu.org", "date": "2016-12-15T03:08:14Z"}, "message": "PR c++/78774 - [6/7 Regression] ICE in constexpr string literals and templates\n\ngcc/cp/ChangeLog:\n\n\tPR c++/78774\n\t* pt.c (convert_template_argument): Avoid assuming operand type\n\tis non-null since that of SCOPE_REF is not.\n\ngcc/testsuite/ChangeLog:\n\n\tPR c++/78774\n\t* g++.dg/cpp1y/pr78774.C: New test.\n\nFrom-SVN: r243683", "tree": {"sha": "bfce59565b53d7ff9698a88792f51b7119a2bb80", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bfce59565b53d7ff9698a88792f51b7119a2bb80"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1750f2a55a7f17c557fa591691a15c363181fa80", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1750f2a55a7f17c557fa591691a15c363181fa80", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1750f2a55a7f17c557fa591691a15c363181fa80", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1750f2a55a7f17c557fa591691a15c363181fa80/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "edda2869d074f103dcc035e82282e9ea07421222", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/edda2869d074f103dcc035e82282e9ea07421222", "html_url": "https://github.com/Rust-GCC/gccrs/commit/edda2869d074f103dcc035e82282e9ea07421222"}], "stats": {"total": 27, "additions": 24, "deletions": 3}, "files": [{"sha": "d2e8d456023d410de03739778d1ec670e1044829", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1750f2a55a7f17c557fa591691a15c363181fa80/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1750f2a55a7f17c557fa591691a15c363181fa80/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=1750f2a55a7f17c557fa591691a15c363181fa80", "patch": "@@ -1,3 +1,9 @@\n+2016-12-14  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR c++/78774\n+\t* pt.c (convert_template_argument): Avoid assuming operand type\n+\tis non-null since that of SCOPE_REF is not.\n+\n 2016-12-14  Martin Jambor  <mjambor@suse.cz>\n \n \t* parser.c: Include omp-general.h and omp-offload.h instead of"}, {"sha": "a21be812bafa7fe2c4abf28cd5710b252b64c323", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1750f2a55a7f17c557fa591691a15c363181fa80/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1750f2a55a7f17c557fa591691a15c363181fa80/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=1750f2a55a7f17c557fa591691a15c363181fa80", "patch": "@@ -7379,9 +7379,10 @@ convert_template_argument (tree parm,\n           /* Reject template arguments that are references to built-in\n              functions with no library fallbacks.  */\n           const_tree inner = TREE_OPERAND (val, 0);\n-          if (TREE_CODE (TREE_TYPE (inner)) == REFERENCE_TYPE\n-              && TREE_CODE (TREE_TYPE (TREE_TYPE (inner))) == FUNCTION_TYPE\n-              && TREE_CODE (TREE_TYPE (inner)) == REFERENCE_TYPE\n+\t  const_tree innertype = TREE_TYPE (inner);\n+\t  if (innertype\n+\t      && TREE_CODE (innertype) == REFERENCE_TYPE\n+\t      && TREE_CODE (TREE_TYPE (innertype)) == FUNCTION_TYPE\n               && 0 < TREE_OPERAND_LENGTH (inner)\n               && reject_gcc_builtin (TREE_OPERAND (inner, 0)))\n               return error_mark_node;"}, {"sha": "88665a2c6a825c49ab86da2f679a429dd761a0c0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1750f2a55a7f17c557fa591691a15c363181fa80/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1750f2a55a7f17c557fa591691a15c363181fa80/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1750f2a55a7f17c557fa591691a15c363181fa80", "patch": "@@ -1,3 +1,8 @@\n+2016-12-14  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR c++/78774\n+\t* g++.dg/cpp1y/pr78774.C: New test.\n+\n 2016-12-14  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR target/78213"}, {"sha": "c77032ddbad4bf510e96e0a34f4840f8737ff0be", "filename": "gcc/testsuite/g++.dg/cpp1y/pr78774.C", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1750f2a55a7f17c557fa591691a15c363181fa80/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fpr78774.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1750f2a55a7f17c557fa591691a15c363181fa80/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fpr78774.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fpr78774.C?ref=1750f2a55a7f17c557fa591691a15c363181fa80", "patch": "@@ -0,0 +1,9 @@\n+// PR c++/78774 - [6/7 Regression] ICE in constexpr string literals and\n+// templates\n+// { dg-do compile { target c++14 } }\n+\n+template <int> struct ops {\n+  template <int> struct A;\n+  template <int *Ptr> using explode = typename A<*Ptr>::join;\n+};\n+template <typename Ts> typename ops<'\\0'>::explode<Ts::join>::type a;"}]}