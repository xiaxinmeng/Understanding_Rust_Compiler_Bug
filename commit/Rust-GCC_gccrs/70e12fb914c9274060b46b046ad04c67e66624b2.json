{"sha": "70e12fb914c9274060b46b046ad04c67e66624b2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzBlMTJmYjkxNGM5Mjc0MDYwYjQ2YjA0NmFkMDRjNjdlNjY2MjRiMg==", "commit": {"author": {"name": "Phil Edwards", "email": "pme@gcc.gnu.org", "date": "2002-12-30T03:58:46Z"}, "committer": {"name": "Phil Edwards", "email": "pme@gcc.gnu.org", "date": "2002-12-30T03:58:46Z"}, "message": "std_bitset.h: Better comments.\n\n2002-12-29  Phil Edwards  <pme@gcc.gnu.org>\n\n\t* include/std/std_bitset.h:  Better comments.\n\nFrom-SVN: r60614", "tree": {"sha": "5338c7efca5c061d71d769072ae44a2cb6c875e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5338c7efca5c061d71d769072ae44a2cb6c875e0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/70e12fb914c9274060b46b046ad04c67e66624b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70e12fb914c9274060b46b046ad04c67e66624b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70e12fb914c9274060b46b046ad04c67e66624b2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70e12fb914c9274060b46b046ad04c67e66624b2/comments", "author": null, "committer": null, "parents": [{"sha": "c85263d2971d46c3f5839b5e679967cfa073d40f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c85263d2971d46c3f5839b5e679967cfa073d40f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c85263d2971d46c3f5839b5e679967cfa073d40f"}], "stats": {"total": 22, "additions": 14, "deletions": 8}, "files": [{"sha": "71cc18fccba14c642a407df0b2d429b8835bc8dd", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70e12fb914c9274060b46b046ad04c67e66624b2/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70e12fb914c9274060b46b046ad04c67e66624b2/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=70e12fb914c9274060b46b046ad04c67e66624b2", "patch": "@@ -1,3 +1,7 @@\n+2002-12-29  Phil Edwards  <pme@gcc.gnu.org>\n+\n+\t* include/std/std_bitset.h:  Better comments.\n+\n 2002-12-28  Joseph S. Myers  <jsm@polyomino.org.uk>\n \n \t* docs/html/17_intro/porting.texi: Use @copying."}, {"sha": "143fe33f87f255f254b0567522e2a4b474728a44", "filename": "libstdc++-v3/include/std/std_bitset.h", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70e12fb914c9274060b46b046ad04c67e66624b2/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_bitset.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70e12fb914c9274060b46b046ad04c67e66624b2/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_bitset.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_bitset.h?ref=70e12fb914c9274060b46b046ad04c67e66624b2", "patch": "@@ -570,6 +570,7 @@ namespace std\n     struct _Sanitize<0>\n     { static void _S_do_sanitize(unsigned long) { } };\n \n+\n   /**\n    *  @brief  The %bitset class represents a @e fixed-size sequence of bits.\n    *\n@@ -578,19 +579,19 @@ namespace std\n    *  (Note that %bitset does @e not meet the formal requirements of a\n    *  <a href=\"tables.html#65\">container</a>.  Mainly, it lacks iterators.)\n    *\n-   *  The template argument, @a _Nb, may be any non-negative number of type\n-   *  size_t.\n+   *  The template argument, @a Nb, may be any non-negative number,\n+   *  specifying the number of bits (e.g., \"0\", \"12\", \"1024*1024\").\n    *\n-   *  A %bitset of size N uses U bits, where\n-   *  U = (N % (sizeof(unsigned long) * CHAR_BIT)).\n-   *  Thus, N - U bits are unused.  (They are the high-order bits in the\n-   *  highest word.)  It is a class invariant that those unused bits are\n-   *  always zero.\n+   *  In the general unoptimized case, storage is allocated in word-sized\n+   *  blocks.  Let B be the number of bits in a word, then (Nb+(B-1))/B\n+   *  words will be used for storage.  B - Nb%B bits are unused.  (They are\n+   *  the high-order bits in the highest word.)  It is a class invariant\n+   *  that those unused bits are always zero.\n    *\n    *  If you think of %bitset as \"a simple array of bits,\" be aware that\n    *  your mental picture is reversed:  a %bitset behaves the same way as\n    *  bits in integers do, with the bit at index 0 in the \"least significant\n-   *  / right-hand\" position, and the bit at index N-1 in the \"most\n+   *  / right-hand\" position, and the bit at index Nb-1 in the \"most\n    *  significant / left-hand\" position.  Thus, unlike other containers, a\n    *  %bitset's index \"counts from right to left,\" to put it very loosely.\n    *\n@@ -621,6 +622,7 @@ namespace std\n    *  @endcode\n    *\n    *  Also see http://gcc.gnu.org/onlinedocs/libstdc++/ext/sgiexts.html#ch23\n+   *  for a description of extensions.\n    *\n    *  @if maint\n    *  Most of the actual code isn't contained in %bitset<> itself, but in the"}]}