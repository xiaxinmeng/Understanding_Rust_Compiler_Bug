{"sha": "8f5893ab523ac3d89e80560c6a2e6a2e88a44bd7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGY1ODkzYWI1MjNhYzNkODllODA1NjBjNmEyZTZhMmU4OGE0NGJkNw==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2008-03-08T12:12:47Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2008-03-08T12:12:47Z"}, "message": "decl.c (gnat_to_gnu_entity): Do not bother propagating the TYPE_USER_ALIGN flag when creating a JM type.\n\n\t* decl.c (gnat_to_gnu_entity) <E_Signed_Integer_Subtype>: Do not\n\tbother propagating the TYPE_USER_ALIGN flag when creating a JM type.\n\nFrom-SVN: r133032", "tree": {"sha": "503f1746603678cbf086a3d219cece863b1b97d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/503f1746603678cbf086a3d219cece863b1b97d3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8f5893ab523ac3d89e80560c6a2e6a2e88a44bd7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f5893ab523ac3d89e80560c6a2e6a2e88a44bd7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f5893ab523ac3d89e80560c6a2e6a2e88a44bd7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f5893ab523ac3d89e80560c6a2e6a2e88a44bd7/comments", "author": null, "committer": null, "parents": [{"sha": "ba436c3b5c91bbe4c4ce3e122429dda3b47c26ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba436c3b5c91bbe4c4ce3e122429dda3b47c26ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba436c3b5c91bbe4c4ce3e122429dda3b47c26ee"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "1f3665585e869ccf48b3986d0adae2b9b0f07216", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f5893ab523ac3d89e80560c6a2e6a2e88a44bd7/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f5893ab523ac3d89e80560c6a2e6a2e88a44bd7/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=8f5893ab523ac3d89e80560c6a2e6a2e88a44bd7", "patch": "@@ -1,3 +1,8 @@\n+2008-03-08  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* decl.c (gnat_to_gnu_entity) <E_Signed_Integer_Subtype>: Do not\n+\tbother propagating the TYPE_USER_ALIGN flag when creating a JM type.\n+\n 2008-03-08  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* decl.c (gnat_to_gnu_entity) <E_Record_Type>: Do not force"}, {"sha": "c75de3f8af66b4f0d68208722dc1fd4bf637c4b1", "filename": "gcc/ada/decl.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f5893ab523ac3d89e80560c6a2e6a2e88a44bd7/gcc%2Fada%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f5893ab523ac3d89e80560c6a2e6a2e88a44bd7/gcc%2Fada%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdecl.c?ref=8f5893ab523ac3d89e80560c6a2e6a2e88a44bd7", "patch": "@@ -1484,7 +1484,7 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, int definition)\n \t such values), we only get the good bits, since the unused bits\n \t are uninitialized.  Both goals are accomplished by wrapping the\n \t modular value in an enclosing struct.  */\n-\tif (Is_Packed_Array_Type (gnat_entity))\n+      if (Is_Packed_Array_Type (gnat_entity))\n \t{\n \t  tree gnu_field_type = gnu_type;\n \t  tree gnu_field;\n@@ -1499,7 +1499,6 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, int definition)\n \t     their size, which may seem counter-intuitive but makes it\n \t     possible to easily overlay them on modular types.  */\n \t  TYPE_ALIGN (gnu_type) = TYPE_ALIGN (gnu_field_type);\n-\t  TYPE_USER_ALIGN (gnu_type) = TYPE_USER_ALIGN (gnu_field_type);\n \t  TYPE_PACKED (gnu_type) = 1;\n \n \t  /* Create a stripped-down declaration of the original type, mainly"}]}