{"sha": "77e6b0eb6094880a5989fbd87a09fc772f73f575", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzdlNmIwZWI2MDk0ODgwYTU5ODlmYmQ4N2EwOWZjNzcyZjczZjU3NQ==", "commit": {"author": {"name": "John Carr", "email": "jfc@mit.edu", "date": "1998-04-17T14:41:49Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1998-04-17T14:41:49Z"}, "message": "Patch from John Carr to fix sparc v9 failure.\n\n\t* emit-rtl.c (operand_subword_force): If a register can not be\n\taccessed by words, copy it to a pseudo register.\n\nFrom-SVN: r19267", "tree": {"sha": "ccd6b7fd42d32991a045c9b70abc3608d011bc9a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ccd6b7fd42d32991a045c9b70abc3608d011bc9a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/77e6b0eb6094880a5989fbd87a09fc772f73f575", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77e6b0eb6094880a5989fbd87a09fc772f73f575", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77e6b0eb6094880a5989fbd87a09fc772f73f575", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77e6b0eb6094880a5989fbd87a09fc772f73f575/comments", "author": {"login": "VoxSciurorum", "id": 60116679, "node_id": "MDQ6VXNlcjYwMTE2Njc5", "avatar_url": "https://avatars.githubusercontent.com/u/60116679?v=4", "gravatar_id": "", "url": "https://api.github.com/users/VoxSciurorum", "html_url": "https://github.com/VoxSciurorum", "followers_url": "https://api.github.com/users/VoxSciurorum/followers", "following_url": "https://api.github.com/users/VoxSciurorum/following{/other_user}", "gists_url": "https://api.github.com/users/VoxSciurorum/gists{/gist_id}", "starred_url": "https://api.github.com/users/VoxSciurorum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/VoxSciurorum/subscriptions", "organizations_url": "https://api.github.com/users/VoxSciurorum/orgs", "repos_url": "https://api.github.com/users/VoxSciurorum/repos", "events_url": "https://api.github.com/users/VoxSciurorum/events{/privacy}", "received_events_url": "https://api.github.com/users/VoxSciurorum/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "27f4cfdb2fdd6bfa9328dd0be59ad37138236b34", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27f4cfdb2fdd6bfa9328dd0be59ad37138236b34", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27f4cfdb2fdd6bfa9328dd0be59ad37138236b34"}], "stats": {"total": 14, "additions": 13, "deletions": 1}, "files": [{"sha": "9790268131900e82bd173f3c9b279c3f09c9387d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77e6b0eb6094880a5989fbd87a09fc772f73f575/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77e6b0eb6094880a5989fbd87a09fc772f73f575/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=77e6b0eb6094880a5989fbd87a09fc772f73f575", "patch": "@@ -1,3 +1,8 @@\n+Fri Apr 17 14:30:37 1998  John Carr <jfc@mit.edu>\n+\n+\t* emit-rtl.c (operand_subword_force): If a register can not be\n+\taccessed by words, copy it to a pseudo register.\n+\n Fri Apr 17 14:30:37 1998  Jim Wilson  <wilson@cygnus.com>\n \n \t* rs6000/vxppc.h (CPP_SPEC): Add support for mrelocatable*."}, {"sha": "40b0aa54e5199aab5d7509dbcf2fddc3b47e147a", "filename": "gcc/emit-rtl.c", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77e6b0eb6094880a5989fbd87a09fc772f73f575/gcc%2Femit-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77e6b0eb6094880a5989fbd87a09fc772f73f575/gcc%2Femit-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.c?ref=77e6b0eb6094880a5989fbd87a09fc772f73f575", "patch": "@@ -1380,7 +1380,14 @@ operand_subword_force (op, i, mode)\n     return result;\n \n   if (mode != BLKmode && mode != VOIDmode)\n-    op = force_reg (mode, op);\n+    {\n+      /* If this is a register which can not be accessed by words, copy it\n+\t to a pseudo register.  */\n+      if (GET_CODE (op) == REG)\n+\top = copy_to_reg (op);\n+      else\n+\top = force_reg (mode, op);\n+    }\n \n   result = operand_subword (op, i, 1, mode);\n   if (result == 0)"}]}