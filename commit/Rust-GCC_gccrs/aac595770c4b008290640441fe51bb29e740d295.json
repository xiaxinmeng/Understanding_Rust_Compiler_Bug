{"sha": "aac595770c4b008290640441fe51bb29e740d295", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWFjNTk1NzcwYzRiMDA4MjkwNjQwNDQxZmU1MWJiMjllNzQwZDI5NQ==", "commit": {"author": {"name": "Bernd Edlinger", "email": "bernd.edlinger@hotmail.de", "date": "2017-07-17T15:54:32Z"}, "committer": {"name": "Bernd Edlinger", "email": "edlinger@gcc.gnu.org", "date": "2017-07-17T15:54:32Z"}, "message": "gcc-dg.exp: Increase expect's match buffer size.\n\n2017-07-17  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n\n        * lib/gcc-dg.exp: Increase expect's match buffer size.\n\nFrom-SVN: r250279", "tree": {"sha": "fefaa4d8045ec90913f3562ec1b8d065793fd0e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fefaa4d8045ec90913f3562ec1b8d065793fd0e0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aac595770c4b008290640441fe51bb29e740d295", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aac595770c4b008290640441fe51bb29e740d295", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aac595770c4b008290640441fe51bb29e740d295", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aac595770c4b008290640441fe51bb29e740d295/comments", "author": {"login": "bernd-edlinger", "id": 17638929, "node_id": "MDQ6VXNlcjE3NjM4OTI5", "avatar_url": "https://avatars.githubusercontent.com/u/17638929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bernd-edlinger", "html_url": "https://github.com/bernd-edlinger", "followers_url": "https://api.github.com/users/bernd-edlinger/followers", "following_url": "https://api.github.com/users/bernd-edlinger/following{/other_user}", "gists_url": "https://api.github.com/users/bernd-edlinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/bernd-edlinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bernd-edlinger/subscriptions", "organizations_url": "https://api.github.com/users/bernd-edlinger/orgs", "repos_url": "https://api.github.com/users/bernd-edlinger/repos", "events_url": "https://api.github.com/users/bernd-edlinger/events{/privacy}", "received_events_url": "https://api.github.com/users/bernd-edlinger/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5dc3163d0e7d97c3b0c25c5a6161c5bb52a7fe16", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5dc3163d0e7d97c3b0c25c5a6161c5bb52a7fe16", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5dc3163d0e7d97c3b0c25c5a6161c5bb52a7fe16"}], "stats": {"total": 7, "additions": 7, "deletions": 0}, "files": [{"sha": "5ff0141dde530cd34b44263d655f5426bd3dc1b5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aac595770c4b008290640441fe51bb29e740d295/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aac595770c4b008290640441fe51bb29e740d295/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=aac595770c4b008290640441fe51bb29e740d295", "patch": "@@ -1,3 +1,7 @@\n+2017-07-17  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n+\n+\t* lib/gcc-dg.exp: Increase expect's match buffer size.\n+\n 2017-07-17  Bin Cheng  <bin.cheng@arm.com>\n \n \tPR target/81369"}, {"sha": "cb5d1843c928526faa0ad0d91e14028b2227034a", "filename": "gcc/testsuite/lib/gcc-dg.exp", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aac595770c4b008290640441fe51bb29e740d295/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aac595770c4b008290640441fe51bb29e740d295/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp?ref=aac595770c4b008290640441fe51bb29e740d295", "patch": "@@ -43,6 +43,9 @@ if { [ishost \"*-*-cygwin*\"] } {\n   setenv LANG C.ASCII\n }\n \n+# Avoid sporadic data-losses with expect\n+match_max -d 10000\n+\n # Ensure GCC_COLORS is unset, for the rare testcases that verify\n # how output is colorized.\n if [info exists ::env(GCC_COLORS) ] {"}]}