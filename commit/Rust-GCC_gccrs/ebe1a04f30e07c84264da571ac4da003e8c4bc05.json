{"sha": "ebe1a04f30e07c84264da571ac4da003e8c4bc05", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWJlMWEwNGYzMGUwN2M4NDI2NGRhNTcxYWM0ZGEwMDNlOGM0YmMwNQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2019-08-14T09:51:12Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-08-14T09:51:12Z"}, "message": "[Ada] Fix discrepancy in mechanism tracking private and full views\n\nThis fixes a discrepancy in the mechanism tracking the private and full\nviews of entities when entering and leaving scopes.  This mechanism\nrecords private entities that are dependent on other private entities,\nso that the exchange done on entering and leaving scopes can be\npropagated.\n\nThe propagation is done recursively on entering child units, but it was\nnot done recursively on leaving them, which would leave the dependency\nchains in a uncertain state in this case.  That's mostly visible when\ninlining across units is enabled for code involving a lot of generic\nunits.\n\n2019-08-14  Eric Botcazou  <ebotcazou@adacore.com>\n\ngcc/ada/\n\n\t* sem_ch7.adb (Install_Private_Declarations)\n\t<Swap_Private_Dependents>: Do not rely solely on the\n\tIs_Child_Unit flag on the unit to recurse.\n\t(Uninstall_Declarations) <Swap_Private_Dependents>: New\n\tfunction.  Use it to recurse on the private dependent entities\n\tfor child units.\n\ngcc/testsuite/\n\n\t* gnat.dg/inline18.adb, gnat.dg/inline18.ads,\n\tgnat.dg/inline18_gen1-inner_g.ads, gnat.dg/inline18_gen1.adb,\n\tgnat.dg/inline18_gen1.ads, gnat.dg/inline18_gen2.adb,\n\tgnat.dg/inline18_gen2.ads, gnat.dg/inline18_gen3.adb,\n\tgnat.dg/inline18_gen3.ads, gnat.dg/inline18_pkg1.adb,\n\tgnat.dg/inline18_pkg1.ads, gnat.dg/inline18_pkg2-child.ads,\n\tgnat.dg/inline18_pkg2.ads: New testcase.\n\nFrom-SVN: r274451", "tree": {"sha": "dc41e7ed30ca612c7edcd965c84c748bdfda198d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dc41e7ed30ca612c7edcd965c84c748bdfda198d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ebe1a04f30e07c84264da571ac4da003e8c4bc05", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ebe1a04f30e07c84264da571ac4da003e8c4bc05", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ebe1a04f30e07c84264da571ac4da003e8c4bc05", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ebe1a04f30e07c84264da571ac4da003e8c4bc05/comments", "author": null, "committer": null, "parents": [{"sha": "d2d56bbae32be728ff82191b6d328e3a8d7c1530", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2d56bbae32be728ff82191b6d328e3a8d7c1530", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d2d56bbae32be728ff82191b6d328e3a8d7c1530"}], "stats": {"total": 252, "additions": 221, "deletions": 31}, "files": [{"sha": "b69303240fc70fce1c03a9c95a70e307354f367c", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebe1a04f30e07c84264da571ac4da003e8c4bc05/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebe1a04f30e07c84264da571ac4da003e8c4bc05/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=ebe1a04f30e07c84264da571ac4da003e8c4bc05", "patch": "@@ -1,3 +1,12 @@\n+2019-08-14  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* sem_ch7.adb (Install_Private_Declarations)\n+\t<Swap_Private_Dependents>: Do not rely solely on the\n+\tIs_Child_Unit flag on the unit to recurse.\n+\t(Uninstall_Declarations) <Swap_Private_Dependents>: New\n+\tfunction.  Use it to recurse on the private dependent entities\n+\tfor child units.\n+\n 2019-08-14  Javier Miranda  <miranda@adacore.com>\n \n \t* exp_aggr.adb (Is_CCG_Supported_Aggregate): Return False for"}, {"sha": "f7998c0d75bd105270504769e00a74790d0312cf", "filename": "gcc/ada/sem_ch7.adb", "status": "modified", "additions": 75, "deletions": 31, "changes": 106, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebe1a04f30e07c84264da571ac4da003e8c4bc05/gcc%2Fada%2Fsem_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebe1a04f30e07c84264da571ac4da003e8c4bc05/gcc%2Fada%2Fsem_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch7.adb?ref=ebe1a04f30e07c84264da571ac4da003e8c4bc05", "patch": "@@ -2261,13 +2261,14 @@ package body Sem_Ch7 is\n       procedure Swap_Private_Dependents (Priv_Deps : Elist_Id);\n       --  When the full view of a private type is made available, we do the\n       --  same for its private dependents under proper visibility conditions.\n-      --  When compiling a grandchild unit this needs to be done recursively.\n+      --  When compiling a child unit this needs to be done recursively.\n \n       -----------------------------\n       -- Swap_Private_Dependents --\n       -----------------------------\n \n       procedure Swap_Private_Dependents (Priv_Deps : Elist_Id) is\n+         Cunit     : Entity_Id;\n          Deps      : Elist_Id;\n          Priv      : Entity_Id;\n          Priv_Elmt : Elmt_Id;\n@@ -2285,6 +2286,7 @@ package body Sem_Ch7 is\n             if Present (Full_View (Priv)) and then Is_Visible_Dependent (Priv)\n             then\n                if Is_Private_Type (Priv) then\n+                  Cunit := Cunit_Entity (Current_Sem_Unit);\n                   Deps := Private_Dependents (Priv);\n                   Is_Priv := True;\n                else\n@@ -2312,11 +2314,14 @@ package body Sem_Ch7 is\n                Set_Is_Potentially_Use_Visible\n                  (Priv, Is_Potentially_Use_Visible (Node (Priv_Elmt)));\n \n-               --  Within a child unit, recurse, except in generic child unit,\n-               --  which (unfortunately) handle private_dependents separately.\n+               --  Recurse for child units, except in generic child units,\n+               --  which unfortunately handle private_dependents separately.\n+               --  Note that the current unit may not have been analyzed,\n+               --  for example a package body, so we cannot rely solely on\n+               --  the Is_Child_Unit flag, but that's only an optimization.\n \n                if Is_Priv\n-                 and then Is_Child_Unit (Cunit_Entity (Current_Sem_Unit))\n+                 and then (No (Etype (Cunit)) or else Is_Child_Unit (Cunit))\n                  and then not Is_Empty_Elmt_List (Deps)\n                  and then not Inside_A_Generic\n                then\n@@ -2701,13 +2706,16 @@ package body Sem_Ch7 is\n       Decl      : constant Node_Id := Unit_Declaration_Node (P);\n       Id        : Entity_Id;\n       Full      : Entity_Id;\n-      Priv_Elmt : Elmt_Id;\n-      Priv_Sub  : Entity_Id;\n \n       procedure Preserve_Full_Attributes (Priv : Entity_Id; Full : Entity_Id);\n       --  Copy to the private declaration the attributes of the full view that\n       --  need to be available for the partial view also.\n \n+      procedure Swap_Private_Dependents (Priv_Deps : Elist_Id);\n+      --  When the full view of a private type is made unavailable, we do the\n+      --  same for its private dependents under proper visibility conditions.\n+      --  When compiling a child unit this needs to be done recursively.\n+\n       function Type_In_Use (T : Entity_Id) return Boolean;\n       --  Check whether type or base type appear in an active use_type clause\n \n@@ -2826,6 +2834,66 @@ package body Sem_Ch7 is\n          end if;\n       end Preserve_Full_Attributes;\n \n+      -----------------------------\n+      -- Swap_Private_Dependents --\n+      -----------------------------\n+\n+      procedure Swap_Private_Dependents (Priv_Deps : Elist_Id) is\n+         Cunit     : Entity_Id;\n+         Deps      : Elist_Id;\n+         Priv      : Entity_Id;\n+         Priv_Elmt : Elmt_Id;\n+         Is_Priv   : Boolean;\n+\n+      begin\n+         Priv_Elmt := First_Elmt (Priv_Deps);\n+         while Present (Priv_Elmt) loop\n+            Priv := Node (Priv_Elmt);\n+\n+            --  Before we do the swap, we verify the presence of the Full_View\n+            --  field, which may be empty due to a swap by a previous call to\n+            --  End_Package_Scope (e.g. from the freezing mechanism).\n+\n+            if Present (Full_View (Priv)) then\n+               if Is_Private_Type (Priv) then\n+                  Cunit := Cunit_Entity (Current_Sem_Unit);\n+                  Deps := Private_Dependents (Priv);\n+                  Is_Priv := True;\n+               else\n+                  Is_Priv := False;\n+               end if;\n+\n+               if Scope (Priv) = P\n+                 or else not In_Open_Scopes (Scope (Priv))\n+               then\n+                  Set_Is_Immediately_Visible (Priv, False);\n+               end if;\n+\n+               if Is_Visible_Dependent (Priv) then\n+                  Preserve_Full_Attributes (Priv, Full_View (Priv));\n+                  Replace_Elmt (Priv_Elmt, Full_View (Priv));\n+                  Exchange_Declarations (Priv);\n+\n+                  --  Recurse for child units, except in generic child units,\n+                  --  which unfortunately handle private_dependents separately.\n+                  --  Note that the current unit may not have been analyzed,\n+                  --  for example a package body, so we cannot rely solely on\n+                  --  the Is_Child_Unit flag, but that's only an optimization.\n+\n+                  if Is_Priv\n+                    and then (No (Etype (Cunit)) or else Is_Child_Unit (Cunit))\n+                    and then not Is_Empty_Elmt_List (Deps)\n+                    and then not Inside_A_Generic\n+                  then\n+                     Swap_Private_Dependents (Deps);\n+                  end if;\n+               end if;\n+            end if;\n+\n+            Next_Elmt (Priv_Elmt);\n+         end loop;\n+      end Swap_Private_Dependents;\n+\n       -----------------\n       -- Type_In_Use --\n       -----------------\n@@ -3077,31 +3145,7 @@ package body Sem_Ch7 is\n             --  were compiled in this scope, or installed previously\n             --  by Install_Private_Declarations.\n \n-            --  Before we do the swap, we verify the presence of the Full_View\n-            --  field which may be empty due to a swap by a previous call to\n-            --  End_Package_Scope (e.g. from the freezing mechanism).\n-\n-            Priv_Elmt := First_Elmt (Private_Dependents (Id));\n-            while Present (Priv_Elmt) loop\n-               Priv_Sub := Node (Priv_Elmt);\n-\n-               if Present (Full_View (Priv_Sub)) then\n-                  if Scope (Priv_Sub) = P\n-                     or else not In_Open_Scopes (Scope (Priv_Sub))\n-                  then\n-                     Set_Is_Immediately_Visible (Priv_Sub, False);\n-                  end if;\n-\n-                  if Is_Visible_Dependent (Priv_Sub) then\n-                     Preserve_Full_Attributes\n-                       (Priv_Sub, Full_View (Priv_Sub));\n-                     Replace_Elmt (Priv_Elmt, Full_View (Priv_Sub));\n-                     Exchange_Declarations (Priv_Sub);\n-                  end if;\n-               end if;\n-\n-               Next_Elmt (Priv_Elmt);\n-            end loop;\n+            Swap_Private_Dependents (Private_Dependents (Id));\n \n             --  Now restore the type itself to its private view\n "}, {"sha": "6b71b95ba3a5a57ba19a734fccf5e4ed76e40872", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebe1a04f30e07c84264da571ac4da003e8c4bc05/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebe1a04f30e07c84264da571ac4da003e8c4bc05/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ebe1a04f30e07c84264da571ac4da003e8c4bc05", "patch": "@@ -1,3 +1,13 @@\n+2019-08-14  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/inline18.adb, gnat.dg/inline18.ads,\n+\tgnat.dg/inline18_gen1-inner_g.ads, gnat.dg/inline18_gen1.adb,\n+\tgnat.dg/inline18_gen1.ads, gnat.dg/inline18_gen2.adb,\n+\tgnat.dg/inline18_gen2.ads, gnat.dg/inline18_gen3.adb,\n+\tgnat.dg/inline18_gen3.ads, gnat.dg/inline18_pkg1.adb,\n+\tgnat.dg/inline18_pkg1.ads, gnat.dg/inline18_pkg2-child.ads,\n+\tgnat.dg/inline18_pkg2.ads: New testcase.\n+\n 2019-08-14  Ed Schonberg  <schonberg@adacore.com>\n \n \t* gnat.dg/predicate12.adb, gnat.dg/predicate12.ads: New"}, {"sha": "29b3d4509e36af9bab6add9b670ca60fe5fb3688", "filename": "gcc/testsuite/gnat.dg/inline18.adb", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebe1a04f30e07c84264da571ac4da003e8c4bc05/gcc%2Ftestsuite%2Fgnat.dg%2Finline18.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebe1a04f30e07c84264da571ac4da003e8c4bc05/gcc%2Ftestsuite%2Fgnat.dg%2Finline18.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Finline18.adb?ref=ebe1a04f30e07c84264da571ac4da003e8c4bc05", "patch": "@@ -0,0 +1,6 @@\n+--  { dg-do compile }\n+--  { dg-options \"-O -gnatn\" }\n+\n+package body Inline18 is\n+  procedure Dummy is null;\n+end Inline18;"}, {"sha": "435ee7f60c7fa9e0959d7acf1a857ae64ddbb753", "filename": "gcc/testsuite/gnat.dg/inline18.ads", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebe1a04f30e07c84264da571ac4da003e8c4bc05/gcc%2Ftestsuite%2Fgnat.dg%2Finline18.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebe1a04f30e07c84264da571ac4da003e8c4bc05/gcc%2Ftestsuite%2Fgnat.dg%2Finline18.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Finline18.ads?ref=ebe1a04f30e07c84264da571ac4da003e8c4bc05", "patch": "@@ -0,0 +1,6 @@\n+with Inline18_Pkg1; use Inline18_Pkg1;\n+\n+package Inline18 is\n+  I : Integer := My_G.Next (0);\n+  procedure Dummy;\n+end Inline18;"}, {"sha": "2c6544d98ee9a68885d20a41a1852a8693ef1763", "filename": "gcc/testsuite/gnat.dg/inline18_gen1-inner_g.ads", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebe1a04f30e07c84264da571ac4da003e8c4bc05/gcc%2Ftestsuite%2Fgnat.dg%2Finline18_gen1-inner_g.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebe1a04f30e07c84264da571ac4da003e8c4bc05/gcc%2Ftestsuite%2Fgnat.dg%2Finline18_gen1-inner_g.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Finline18_gen1-inner_g.ads?ref=ebe1a04f30e07c84264da571ac4da003e8c4bc05", "patch": "@@ -0,0 +1,8 @@\n+generic\n+package Inline18_Gen1.Inner_G is\n+\n+  type T is new Inline18_Gen1.T;\n+\n+  Val : T;\n+\n+end Inline18_Gen1.Inner_G;"}, {"sha": "3352624fff2ff3025461d47bee69bf83d06a602d", "filename": "gcc/testsuite/gnat.dg/inline18_gen1.adb", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebe1a04f30e07c84264da571ac4da003e8c4bc05/gcc%2Ftestsuite%2Fgnat.dg%2Finline18_gen1.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebe1a04f30e07c84264da571ac4da003e8c4bc05/gcc%2Ftestsuite%2Fgnat.dg%2Finline18_gen1.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Finline18_gen1.adb?ref=ebe1a04f30e07c84264da571ac4da003e8c4bc05", "patch": "@@ -0,0 +1,9 @@\n+package body Inline18_Gen1 is\n+\n+  function Complete return T is\n+    Dummy : T;\n+  begin\n+    return Dummy;\n+  end;\n+\n+end Inline18_Gen1;"}, {"sha": "54e569302bc59201838018b53beb37f4af061096", "filename": "gcc/testsuite/gnat.dg/inline18_gen1.ads", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebe1a04f30e07c84264da571ac4da003e8c4bc05/gcc%2Ftestsuite%2Fgnat.dg%2Finline18_gen1.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebe1a04f30e07c84264da571ac4da003e8c4bc05/gcc%2Ftestsuite%2Fgnat.dg%2Finline18_gen1.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Finline18_gen1.ads?ref=ebe1a04f30e07c84264da571ac4da003e8c4bc05", "patch": "@@ -0,0 +1,14 @@\n+generic\n+\n+  type Bound_T is private;\n+\n+package Inline18_Gen1 is\n+\n+  type T is private;\n+  function Complete return T with Inline_Always;\n+\n+private\n+\n+  type T is array (0 .. 1) of Bound_T;\n+\n+end Inline18_Gen1;"}, {"sha": "fe09fd0f395d4e148a367030593a220410bcee15", "filename": "gcc/testsuite/gnat.dg/inline18_gen2.adb", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebe1a04f30e07c84264da571ac4da003e8c4bc05/gcc%2Ftestsuite%2Fgnat.dg%2Finline18_gen2.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebe1a04f30e07c84264da571ac4da003e8c4bc05/gcc%2Ftestsuite%2Fgnat.dg%2Finline18_gen2.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Finline18_gen2.adb?ref=ebe1a04f30e07c84264da571ac4da003e8c4bc05", "patch": "@@ -0,0 +1,10 @@\n+package body Inline18_Gen2 is\n+\n+  function Func (I : Interval_T) return T is\n+    pragma Unreferenced (I);\n+    Dummy : T;\n+  begin\n+    return Dummy;\n+  end;\n+\n+end Inline18_Gen2;"}, {"sha": "ca6302b694b71535d190d9a1acf730f8ec6ec4df", "filename": "gcc/testsuite/gnat.dg/inline18_gen2.ads", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebe1a04f30e07c84264da571ac4da003e8c4bc05/gcc%2Ftestsuite%2Fgnat.dg%2Finline18_gen2.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebe1a04f30e07c84264da571ac4da003e8c4bc05/gcc%2Ftestsuite%2Fgnat.dg%2Finline18_gen2.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Finline18_gen2.ads?ref=ebe1a04f30e07c84264da571ac4da003e8c4bc05", "patch": "@@ -0,0 +1,11 @@\n+generic\n+\n+  type Interval_T is private;\n+\n+package Inline18_Gen2 is\n+\n+  type T is new Integer;\n+\n+  function Func (I : Interval_T) return T;\n+\n+end Inline18_Gen2;"}, {"sha": "4f786c2de3fc31e0231984a1685a841a72771cb5", "filename": "gcc/testsuite/gnat.dg/inline18_gen3.adb", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebe1a04f30e07c84264da571ac4da003e8c4bc05/gcc%2Ftestsuite%2Fgnat.dg%2Finline18_gen3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebe1a04f30e07c84264da571ac4da003e8c4bc05/gcc%2Ftestsuite%2Fgnat.dg%2Finline18_gen3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Finline18_gen3.adb?ref=ebe1a04f30e07c84264da571ac4da003e8c4bc05", "patch": "@@ -0,0 +1,12 @@\n+package body Inline18_Gen3 is\n+\n+  package body Inner_G is\n+\n+    function Next (Position : Index_T) return Index_T is\n+    begin\n+      return Position;\n+    end;\n+\n+  end Inner_G;\n+\n+end Inline18_Gen3;"}, {"sha": "798df5f298c9daf771066a15c497667d29be67ae", "filename": "gcc/testsuite/gnat.dg/inline18_gen3.ads", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebe1a04f30e07c84264da571ac4da003e8c4bc05/gcc%2Ftestsuite%2Fgnat.dg%2Finline18_gen3.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebe1a04f30e07c84264da571ac4da003e8c4bc05/gcc%2Ftestsuite%2Fgnat.dg%2Finline18_gen3.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Finline18_gen3.ads?ref=ebe1a04f30e07c84264da571ac4da003e8c4bc05", "patch": "@@ -0,0 +1,13 @@\n+generic\n+\n+  type Index_T is range <>;\n+\n+package Inline18_Gen3 is\n+\n+  generic\n+  package Inner_G is\n+    function Next (Position : Index_T) return Index_T;\n+    pragma Inline (Next);\n+  end Inner_G;\n+\n+end Inline18_Gen3;"}, {"sha": "f266f099ccd40e409dc4d5c617ae9e5ca6f37059", "filename": "gcc/testsuite/gnat.dg/inline18_pkg1.adb", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebe1a04f30e07c84264da571ac4da003e8c4bc05/gcc%2Ftestsuite%2Fgnat.dg%2Finline18_pkg1.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebe1a04f30e07c84264da571ac4da003e8c4bc05/gcc%2Ftestsuite%2Fgnat.dg%2Finline18_pkg1.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Finline18_pkg1.adb?ref=ebe1a04f30e07c84264da571ac4da003e8c4bc05", "patch": "@@ -0,0 +1,8 @@\n+package body Inline18_Pkg1 is\n+\n+  procedure Proc (R : in out Rec) is\n+  begin\n+    R.Comp := My_G2.Func (Inline18_Pkg2.Child.General.Val);\n+  end;\n+\n+end Inline18_Pkg1;"}, {"sha": "a0c184ccfffb60ffc044bceb1623aacf6cc4cc75", "filename": "gcc/testsuite/gnat.dg/inline18_pkg1.ads", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebe1a04f30e07c84264da571ac4da003e8c4bc05/gcc%2Ftestsuite%2Fgnat.dg%2Finline18_pkg1.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebe1a04f30e07c84264da571ac4da003e8c4bc05/gcc%2Ftestsuite%2Fgnat.dg%2Finline18_pkg1.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Finline18_pkg1.ads?ref=ebe1a04f30e07c84264da571ac4da003e8c4bc05", "patch": "@@ -0,0 +1,19 @@\n+with Inline18_Pkg2.Child;\n+with Inline18_Gen2;\n+with Inline18_Gen3;\n+\n+package Inline18_Pkg1 is\n+\n+  package My_G2 is new Inline18_Gen2 (Inline18_Pkg2.Child.General.T);\n+\n+  package My_G3 is new Inline18_Gen3 (Integer);\n+\n+  type Rec is record\n+    Comp : My_G2.T;\n+  end record;\n+\n+  procedure Proc (R : in out Rec);\n+\n+  package My_G is new My_G3.Inner_G;\n+\n+end Inline18_Pkg1;"}, {"sha": "21f1ba13e3642caa7624f27c7576e46ccaeaf668", "filename": "gcc/testsuite/gnat.dg/inline18_pkg2-child.ads", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebe1a04f30e07c84264da571ac4da003e8c4bc05/gcc%2Ftestsuite%2Fgnat.dg%2Finline18_pkg2-child.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebe1a04f30e07c84264da571ac4da003e8c4bc05/gcc%2Ftestsuite%2Fgnat.dg%2Finline18_pkg2-child.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Finline18_pkg2-child.ads?ref=ebe1a04f30e07c84264da571ac4da003e8c4bc05", "patch": "@@ -0,0 +1,9 @@\n+with Inline18_Gen1.Inner_G;\n+\n+package Inline18_Pkg2.Child is\n+\n+  package Base is new Inline18_Gen1 (Integer);\n+\n+  package General is new Base.Inner_G;\n+\n+end Inline18_Pkg2.Child;"}, {"sha": "ae48bfc15414c4c2ead96220e59e9efff7241992", "filename": "gcc/testsuite/gnat.dg/inline18_pkg2.ads", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebe1a04f30e07c84264da571ac4da003e8c4bc05/gcc%2Ftestsuite%2Fgnat.dg%2Finline18_pkg2.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebe1a04f30e07c84264da571ac4da003e8c4bc05/gcc%2Ftestsuite%2Fgnat.dg%2Finline18_pkg2.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Finline18_pkg2.ads?ref=ebe1a04f30e07c84264da571ac4da003e8c4bc05", "patch": "@@ -0,0 +1,2 @@\n+package Inline18_Pkg2 is\n+end Inline18_Pkg2;"}]}