{"sha": "7bc89c296cf250980061f0960666e1eb46dfd4c1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2JjODljMjk2Y2YyNTA5ODAwNjFmMDk2MDY2NmUxZWI0NmRmZDRjMQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-12-08T20:41:17Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-12-08T20:41:17Z"}, "message": "(bsetmemqi, bclrmemqi): New patterns to set bit in memory byte with\nbit number dynamic (use bclr/bset instructions).\n\nFrom-SVN: r8631", "tree": {"sha": "721d9c37ae789c4f1e841012c6b552ed0db4f759", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/721d9c37ae789c4f1e841012c6b552ed0db4f759"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7bc89c296cf250980061f0960666e1eb46dfd4c1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7bc89c296cf250980061f0960666e1eb46dfd4c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7bc89c296cf250980061f0960666e1eb46dfd4c1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7bc89c296cf250980061f0960666e1eb46dfd4c1/comments", "author": null, "committer": null, "parents": [{"sha": "16f323bef32ff1349158412bba7b030acd3062be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16f323bef32ff1349158412bba7b030acd3062be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16f323bef32ff1349158412bba7b030acd3062be"}], "stats": {"total": 59, "additions": 59, "deletions": 0}, "files": [{"sha": "cfb5704f0eb3cea5930c480388980c3260550305", "filename": "gcc/config/m68k/m68k.md", "status": "modified", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bc89c296cf250980061f0960666e1eb46dfd4c1/gcc%2Fconfig%2Fm68k%2Fm68k.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bc89c296cf250980061f0960666e1eb46dfd4c1/gcc%2Fconfig%2Fm68k%2Fm68k.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.md?ref=7bc89c296cf250980061f0960666e1eb46dfd4c1", "patch": "@@ -3831,6 +3831,65 @@\n   \"\"\n   \"ror%.b %1,%0\")\n \f\n+\n+;; Bit set/clear in memory byte.\n+\n+;; set bit, bit number is int\n+(define_insn \"bsetmemqi\"\n+  [(set (match_operand:QI 0 \"memory_operand\" \"+m\")\n+\t(ior:QI (subreg:QI (ashift:SI (const_int 1)\n+\t\t(match_operand:SI 1 \"general_operand\" \"d\")) 0)\n+\t(match_dup 0)))]\n+  \"\"\n+  \"*\n+{\n+  CC_STATUS_INIT;\n+  return \\\"bset %1,%0\\\";\n+}\")\n+\n+;; set bit, bit number is (sign/zero)_extended from HImode/QImode\n+(define_insn \"\"\n+  [(set (match_operand:QI 0 \"memory_operand\" \"+m\")\n+\t(ior:QI (subreg:QI (ashift:SI (const_int 1)\n+\t    (match_operator:SI 2 \"extend_operator\"\n+\t\t[(match_operand 1 \"general_operand\" \"d\")])) 0)\n+\t(match_dup 0)))]\n+  \"\"\n+  \"*\n+{\n+  CC_STATUS_INIT;\n+  return \\\"bset %1,%0\\\";\n+}\")\n+\n+;; clear bit, bit number is int\n+(define_insn \"bclrmemqi\"\n+  [(set (zero_extract:SI (match_operand:QI 0 \"memory_operand\" \"+m\")\n+\t(const_int 1)\n+\t(minus:SI (const_int 7)\n+\t    (match_operand:SI 1 \"general_operand\" \"d\")))\n+    (const_int 0))]\n+  \"\"\n+  \"*\n+{\n+  CC_STATUS_INIT;\n+  return \\\"bclr %1,%0\\\";\n+}\")\n+\n+;; clear bit, bit number is (sign/zero)_extended from HImode/QImode\n+(define_insn \"\"\n+  [(set (zero_extract:SI (match_operand:QI 0 \"memory_operand\" \"+m\")\n+\t(const_int 1)\n+\t(minus:SI (const_int 7)\n+\t    (match_operator:SI 2 \"extend_operator\"\n+\t\t[(match_operand 1 \"general_operand\" \"d\")])))\n+    (const_int 0))]\n+  \"\"\n+  \"*\n+{\n+  CC_STATUS_INIT;\n+  return \\\"bclr %1,%0\\\";\n+}\")\n+\n ;; Special cases of bit-field insns which we should\n ;; recognize in preference to the general case.\n ;; These handle aligned 8-bit and 16-bit fields,"}]}