{"sha": "86f0bef37378a05ef620a6120b95698c3f113db8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODZmMGJlZjM3Mzc4YTA1ZWY2MjBhNjEyMGI5NTY5OGMzZjExM2RiOA==", "commit": {"author": {"name": "Vladimir Makarov", "email": "vmakarov@redhat.com", "date": "2015-09-24T20:40:30Z"}, "committer": {"name": "Vladimir Makarov", "email": "vmakarov@gcc.gnu.org", "date": "2015-09-24T20:40:30Z"}, "message": "re PR target/61578 (Code size increase for ARM thumb compared to 4.8.x when compiling with -Os)\n\n2015-09-24  Vladimir Makarov  <vmakarov@redhat.com>\n\n\tPR target/61578\n\t* ira-color.c (update_allocno_cost): Add parameter.\n\t(update_costs_from_allocno): Decrease conflict cost.  Pass the new\n\tparameter.\n\nFrom-SVN: r228097", "tree": {"sha": "a25a56cc9d84014637dade6e7835f7c12d69eb5b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a25a56cc9d84014637dade6e7835f7c12d69eb5b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/86f0bef37378a05ef620a6120b95698c3f113db8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86f0bef37378a05ef620a6120b95698c3f113db8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86f0bef37378a05ef620a6120b95698c3f113db8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86f0bef37378a05ef620a6120b95698c3f113db8/comments", "author": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3563212292d643dee54ff75771032ea92fe34e78", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3563212292d643dee54ff75771032ea92fe34e78", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3563212292d643dee54ff75771032ea92fe34e78"}], "stats": {"total": 32, "additions": 25, "deletions": 7}, "files": [{"sha": "e951934a80becdd26ab045f07ff77fae5b942cdc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86f0bef37378a05ef620a6120b95698c3f113db8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86f0bef37378a05ef620a6120b95698c3f113db8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=86f0bef37378a05ef620a6120b95698c3f113db8", "patch": "@@ -1,3 +1,10 @@\n+2015-09-24  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\tPR target/61578\n+\t* ira-color.c (update_allocno_cost): Add parameter.\n+\t(update_costs_from_allocno): Decrease conflict cost.  Pass the new\n+\tparameter.\n+\n 2015-09-24  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n \n \tPR driver/67640"}, {"sha": "a4820fb51496b060ee716a1d5c9676737584ae0b", "filename": "gcc/ira-color.c", "status": "modified", "additions": 18, "deletions": 7, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86f0bef37378a05ef620a6120b95698c3f113db8/gcc%2Fira-color.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86f0bef37378a05ef620a6120b95698c3f113db8/gcc%2Fira-color.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira-color.c?ref=86f0bef37378a05ef620a6120b95698c3f113db8", "patch": "@@ -1311,10 +1311,12 @@ get_next_update_cost (ira_allocno_t *allocno, ira_allocno_t *from, int *divisor)\n   return true;\n }\n \n-/* Increase costs of HARD_REGNO by UPDATE_COST for ALLOCNO.  Return\n-   true if we really modified the cost.  */\n+/* Increase costs of HARD_REGNO by UPDATE_COST and conflict cost by\n+   UPDATE_CONFLICT_COST for ALLOCNO.  Return true if we really\n+   modified the cost.  */\n static bool\n-update_allocno_cost (ira_allocno_t allocno, int hard_regno, int update_cost)\n+update_allocno_cost (ira_allocno_t allocno, int hard_regno,\n+\t\t     int update_cost, int update_conflict_cost)\n {\n   int i;\n   enum reg_class aclass = ALLOCNO_CLASS (allocno);\n@@ -1330,7 +1332,7 @@ update_allocno_cost (ira_allocno_t allocno, int hard_regno, int update_cost)\n     (&ALLOCNO_UPDATED_CONFLICT_HARD_REG_COSTS (allocno),\n      aclass, 0, ALLOCNO_CONFLICT_HARD_REG_COSTS (allocno));\n   ALLOCNO_UPDATED_HARD_REG_COSTS (allocno)[i] += update_cost;\n-  ALLOCNO_UPDATED_CONFLICT_HARD_REG_COSTS (allocno)[i] += update_cost;\n+  ALLOCNO_UPDATED_CONFLICT_HARD_REG_COSTS (allocno)[i] += update_conflict_cost;\n   return true;\n }\n \n@@ -1342,7 +1344,7 @@ static void\n update_costs_from_allocno (ira_allocno_t allocno, int hard_regno,\n \t\t\t   int divisor, bool decr_p, bool record_p)\n {\n-  int cost, update_cost;\n+  int cost, update_cost, update_conflict_cost;\n   machine_mode mode;\n   enum reg_class rclass, aclass;\n   ira_allocno_t another_allocno, from = NULL;\n@@ -1383,11 +1385,20 @@ update_costs_from_allocno (ira_allocno_t allocno, int hard_regno,\n \t  if (decr_p)\n \t    cost = -cost;\n \n-\t  update_cost = cp->freq * cost / divisor;\n+\t  update_conflict_cost = update_cost = cp->freq * cost / divisor;\n+\n+\t  if (ALLOCNO_COLOR_DATA (another_allocno) != NULL\n+\t      && (ALLOCNO_COLOR_DATA (allocno)->first_thread_allocno\n+\t\t  != ALLOCNO_COLOR_DATA (another_allocno)->first_thread_allocno))\n+\t    /* Decrease conflict cost of ANOTHER_ALLOCNO if it is not\n+\t       in the same allocation thread.  */\n+\t    update_conflict_cost /= COST_HOP_DIVISOR;\n+\n \t  if (update_cost == 0)\n \t    continue;\n \n-\t  if (! update_allocno_cost (another_allocno, hard_regno, update_cost))\n+\t  if (! update_allocno_cost (another_allocno, hard_regno,\n+\t\t\t\t     update_cost, update_conflict_cost))\n \t    continue;\n \t  queue_update_cost (another_allocno, allocno, divisor * COST_HOP_DIVISOR);\n \t  if (record_p && ALLOCNO_COLOR_DATA (another_allocno) != NULL)"}]}