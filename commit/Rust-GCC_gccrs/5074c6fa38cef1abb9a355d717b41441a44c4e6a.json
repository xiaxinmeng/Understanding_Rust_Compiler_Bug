{"sha": "5074c6fa38cef1abb9a355d717b41441a44c4e6a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTA3NGM2ZmEzOGNlZjFhYmI5YTM1NWQ3MTdiNDE0NDFhNDRjNGU2YQ==", "commit": {"author": {"name": "Sandra Loosemore", "email": "sandra@codesourcery.com", "date": "2021-03-17T21:37:05Z"}, "committer": {"name": "Sandra Loosemore", "email": "sandra@codesourcery.com", "date": "2021-03-17T21:41:31Z"}, "message": "nios2: Fix format complaints and similar diagnostics.\n\nThe nios2 back end has not been building with newer versions of host\nGCC due to several complaints about diagnostic formatting, along with\na couple other warnings.  This patch fixes the errors seen when\nbuilding with a host compiler from current mainline head.  I also made\na pass through all the error messages in this file to make them use\nmore consistent formatting, even where the host compiler was not\nspecifically complaining.\n\n\tgcc/\n\t* config/nios2/nios2.c (nios2_custom_check_insns): Clean up\n\terror message format issues.\n\t(nios2_option_override): Likewise.\n\t(nios2_expand_fpu_builtin): Likewise.\n\t(nios2_init_custom_builtins): Adjust to avoid bogus strncpy\n\ttruncation warning.\n\t(nios2_expand_custom_builtin): More error message format fixes.\n\t(nios2_expand_rdwrctl_builtin): Likewise.\n\t(nios2_expand_rdprs_builtin): Likewise.\n\t(nios2_expand_eni_builtin): Likewise.\n\t(nios2_expand_builtin): Likewise.\n\t(nios2_register_custom_code): Likewise.\n\t(nios2_valid_target_attribute_rec): Likewise.\n\t(nios2_add_insn_asm): Fix uninitialized variable warning.", "tree": {"sha": "4194a632e179434078cd455748fde90e616654e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4194a632e179434078cd455748fde90e616654e3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5074c6fa38cef1abb9a355d717b41441a44c4e6a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5074c6fa38cef1abb9a355d717b41441a44c4e6a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5074c6fa38cef1abb9a355d717b41441a44c4e6a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5074c6fa38cef1abb9a355d717b41441a44c4e6a/comments", "author": {"login": "SandraLoosemore", "id": 104087111, "node_id": "U_kgDOBjQ-Rw", "avatar_url": "https://avatars.githubusercontent.com/u/104087111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SandraLoosemore", "html_url": "https://github.com/SandraLoosemore", "followers_url": "https://api.github.com/users/SandraLoosemore/followers", "following_url": "https://api.github.com/users/SandraLoosemore/following{/other_user}", "gists_url": "https://api.github.com/users/SandraLoosemore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SandraLoosemore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SandraLoosemore/subscriptions", "organizations_url": "https://api.github.com/users/SandraLoosemore/orgs", "repos_url": "https://api.github.com/users/SandraLoosemore/repos", "events_url": "https://api.github.com/users/SandraLoosemore/events{/privacy}", "received_events_url": "https://api.github.com/users/SandraLoosemore/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SandraLoosemore", "id": 104087111, "node_id": "U_kgDOBjQ-Rw", "avatar_url": "https://avatars.githubusercontent.com/u/104087111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SandraLoosemore", "html_url": "https://github.com/SandraLoosemore", "followers_url": "https://api.github.com/users/SandraLoosemore/followers", "following_url": "https://api.github.com/users/SandraLoosemore/following{/other_user}", "gists_url": "https://api.github.com/users/SandraLoosemore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SandraLoosemore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SandraLoosemore/subscriptions", "organizations_url": "https://api.github.com/users/SandraLoosemore/orgs", "repos_url": "https://api.github.com/users/SandraLoosemore/repos", "events_url": "https://api.github.com/users/SandraLoosemore/events{/privacy}", "received_events_url": "https://api.github.com/users/SandraLoosemore/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bd364aaee338fbc6e3a49043614331ff471e7f4d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd364aaee338fbc6e3a49043614331ff471e7f4d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd364aaee338fbc6e3a49043614331ff471e7f4d"}], "stats": {"total": 63, "additions": 34, "deletions": 29}, "files": [{"sha": "bf5e2be62440a429fa1ef056d36576670158f5c6", "filename": "gcc/config/nios2/nios2.c", "status": "modified", "additions": 34, "deletions": 29, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5074c6fa38cef1abb9a355d717b41441a44c4e6a/gcc%2Fconfig%2Fnios2%2Fnios2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5074c6fa38cef1abb9a355d717b41441a44c4e6a/gcc%2Fconfig%2Fnios2%2Fnios2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnios2%2Fnios2.c?ref=5074c6fa38cef1abb9a355d717b41441a44c4e6a", "patch": "@@ -1179,16 +1179,17 @@ nios2_custom_check_insns (void)\n \tfor (j = 0; j < ARRAY_SIZE (nios2_fpu_insn); j++)\n \t  if (N2FPU_DOUBLE_REQUIRED_P (j) && ! N2FPU_ENABLED_P (j))\n \t    {\n-\t      error (\"switch %<-mcustom-%s%> is required for double \"\n-\t\t     \"precision floating point\", N2FPU_NAME (j));\n+\t      error (\"switch %<-mcustom-%s%> is required for \"\n+\t\t     \"double-precision floating-point\", N2FPU_NAME (j));\n \t      errors = true;\n \t    }\n \tbreak;\n       }\n \n   if (errors || custom_code_conflict)\n     fatal_error (input_location,\n-\t\t \"conflicting use of %<-mcustom%> switches, target attributes, \"\n+\t\t \"conflicting use of %<-mcustom%> switches, \"\n+\t\t \"target attributes, \"\n \t\t \"and/or %<__builtin_custom_%> functions\");\n }\n \n@@ -1378,25 +1379,25 @@ nios2_option_override (void)\n   if (flag_pic)\n     {\n       if (nios2_gpopt_option != gpopt_none)\n-\terror (\"%<-mgpopt%> not supported with PIC.\");\n+\terror (\"%<-mgpopt%> not supported with PIC\");\n       if (nios2_gprel_sec)\n-\terror (\"%<-mgprel-sec=%> not supported with PIC.\");\n+\terror (\"%<-mgprel-sec=%> not supported with PIC\");\n       if (nios2_r0rel_sec)\n-\terror (\"%<-mr0rel-sec=%> not supported with PIC.\");\n+\terror (\"%<-mr0rel-sec=%> not supported with PIC\");\n     }\n \n   /* Process -mgprel-sec= and -m0rel-sec=.  */\n   if (nios2_gprel_sec)\n     {\n       if (regcomp (&nios2_gprel_sec_regex, nios2_gprel_sec, \n \t\t   REG_EXTENDED | REG_NOSUB))\n-\terror (\"%<-mgprel-sec=%> argument is not a valid regular expression.\");\n+\terror (\"%<-mgprel-sec=%> argument is not a valid regular expression\");\n     }\n   if (nios2_r0rel_sec)\n     {\n       if (regcomp (&nios2_r0rel_sec_regex, nios2_r0rel_sec, \n \t\t   REG_EXTENDED | REG_NOSUB))\n-\terror (\"%<-mr0rel-sec=%> argument is not a valid regular expression.\");\n+\terror (\"%<-mr0rel-sec=%> argument is not a valid regular expression\");\n     }\n \n   /* If we don't have mul, we don't have mulx either!  */\n@@ -3574,8 +3575,9 @@ nios2_expand_fpu_builtin (tree exp, unsigned int code, rtx target)\n \n   if (N2FPU_N (code) < 0)\n     fatal_error (input_location,\n-\t\t \"Cannot call %<__builtin_custom_%s%> without specifying switch\"\n-\t\t \" %<-mcustom-%s%>\", N2FPU_NAME (code), N2FPU_NAME (code));\n+\t\t \"cannot call %<__builtin_custom_%s%> without specifying \"\n+\t\t \"switch %<-mcustom-%s%>\",\n+\t\t N2FPU_NAME (code), N2FPU_NAME (code));\n   if (has_target_p)\n     create_output_operand (&ops[opno++], target, dst_mode);\n   else\n@@ -3641,10 +3643,10 @@ nios2_init_custom_builtins (int start_code)\n \t    = build_function_type_list (ret_type, integer_type_node,\n \t\t\t\t\top[rhs1].type, op[rhs2].type,\n \t\t\t\t\tNULL_TREE);\n-\t  snprintf (builtin_name + n, 32 - n, \"%sn%s%s\",\n-\t\t    op[lhs].c, op[rhs1].c, op[rhs2].c);\n \t  /* Save copy of parameter string into custom_builtin_name[].  */\n-\t  strncpy (custom_builtin_name[builtin_code], builtin_name + n, 5);\n+\t  snprintf (custom_builtin_name[builtin_code], 5, \"%sn%s%s\",\n+\t\t    op[lhs].c, op[rhs1].c, op[rhs2].c);\n+\t  strncpy (builtin_name + n, custom_builtin_name[builtin_code], 5);\n \t  fndecl =\n \t    add_builtin_function (builtin_name, builtin_ftype,\n \t\t\t\t  start_code + builtin_code,\n@@ -3682,7 +3684,7 @@ nios2_expand_custom_builtin (tree exp, unsigned int index, rtx target)\n       if (argno == 0)\n \t{\n \t  if (!custom_insn_opcode (value, VOIDmode))\n-\t    error (\"custom instruction opcode must be compile time \"\n+\t    error (\"custom instruction opcode must be a compile-time \"\n \t\t   \"constant in the range 0-255 for %<__builtin_custom_%s%>\",\n \t\t   custom_builtin_name[index]);\n \t}\n@@ -3887,7 +3889,7 @@ nios2_expand_rdwrctl_builtin (tree exp, rtx target,\n   struct expand_operand ops[MAX_RECOG_OPERANDS];\n   if (!rdwrctl_operand (ctlcode, VOIDmode))\n     {\n-      error (\"Control register number must be in range 0-31 for %s\",\n+      error (\"control register number must be in range 0-31 for %s\",\n \t     d->name);\n       return has_target_p ? gen_reg_rtx (SImode) : const0_rtx;\n     }\n@@ -3915,14 +3917,14 @@ nios2_expand_rdprs_builtin (tree exp, rtx target,\n \n   if (!rdwrctl_operand (reg, VOIDmode))\n     {\n-      error (\"Register number must be in range 0-31 for %s\",\n+      error (\"register number must be in range 0-31 for %s\",\n \t     d->name);\n       return gen_reg_rtx (SImode);\n     }\n \n   if (!rdprs_dcache_operand (imm, VOIDmode))\n     {\n-      error (\"The immediate value must fit into a %d-bit integer for %s\",\n+      error (\"immediate value must fit into a %d-bit integer for %s\",\n \t     (TARGET_ARCH_R2) ? 12 : 16, d->name);\n       return gen_reg_rtx (SImode);\n     }\n@@ -3972,7 +3974,7 @@ nios2_expand_eni_builtin (tree exp, rtx target ATTRIBUTE_UNUSED,\n \n   if (INTVAL (imm) != 0 && INTVAL (imm) != 1)\n     {\n-      error (\"The ENI instruction operand must be either 0 or 1\");\n+      error (\"the ENI instruction operand must be either 0 or 1\");\n       return const0_rtx;      \n     }\n   create_integer_operand (&ops[0], INTVAL (imm));\n@@ -4000,7 +4002,7 @@ nios2_expand_builtin (tree exp, rtx target, rtx subtarget ATTRIBUTE_UNUSED,\n \n       if (d->arch > nios2_arch_option)\n \t{\n-\t  error (\"Builtin function %s requires Nios II R%d\",\n+\t  error (\"built-in function %s requires Nios II R%d\",\n \t\t d->name, (int) d->arch);\n \t  /* Given it is invalid, just generate a normal call.  */\n \t  return expand_call (exp, target, ignore);\n@@ -4080,14 +4082,16 @@ nios2_register_custom_code (unsigned int N, enum nios2_ccs_code status,\n       if (custom_code_status[N] == CCS_FPU && index != custom_code_index[N])\n \t{\n \t  custom_code_conflict = true;\n-\t  error (\"switch %<-mcustom-%s%> conflicts with switch %<-mcustom-%s%>\",\n+\t  error (\"switch %<-mcustom-%s%> conflicts with \"\n+\t\t \"switch %<-mcustom-%s%>\",\n \t\t N2FPU_NAME (custom_code_index[N]), N2FPU_NAME (index));\n \t}\n       else if (custom_code_status[N] == CCS_BUILTIN_CALL)\n \t{\n \t  custom_code_conflict = true;\n-\t  error (\"call to %<__builtin_custom_%s%> conflicts with switch \"\n-\t\t \"%<-mcustom-%s%>\", custom_builtin_name[custom_code_index[N]],\n+\t  error (\"call to %<__builtin_custom_%s%> conflicts with \"\n+\t\t \"switch %<-mcustom-%s%>\",\n+\t\t custom_builtin_name[custom_code_index[N]],\n \t\t N2FPU_NAME (index));\n \t}\n     }\n@@ -4096,8 +4100,9 @@ nios2_register_custom_code (unsigned int N, enum nios2_ccs_code status,\n       if (custom_code_status[N] == CCS_FPU)\n \t{\n \t  custom_code_conflict = true;\n-\t  error (\"call to %<__builtin_custom_%s%> conflicts with switch \"\n-\t\t \"%<-mcustom-%s%>\", custom_builtin_name[index],\n+\t  error (\"call to %<__builtin_custom_%s%> conflicts with \"\n+\t\t \"switch %<-mcustom-%s%>\",\n+\t\t custom_builtin_name[index],\n \t\t N2FPU_NAME (custom_code_index[N]));\n \t}\n       else\n@@ -4204,13 +4209,13 @@ nios2_valid_target_attribute_rec (tree args)\n \t      char *end_eq = p;\n \t      if (no_opt)\n \t\t{\n-\t\t  error (\"custom-fpu-cfg option does not support %<no-%>\");\n+\t\t  error (\"%<custom-fpu-cfg%> option does not support %<no-%>\");\n \t\t  return false;\n \t\t}\n \t      if (!eq)\n \t\t{\n-\t\t  error (\"custom-fpu-cfg option requires configuration\"\n-\t\t\t \" argument\");\n+\t\t  error (\"%<custom-fpu-cfg%> option requires configuration \"\n+\t\t\t \"argument\");\n \t\t  return false;\n \t\t}\n \t      /* Increment and skip whitespace.  */\n@@ -4282,7 +4287,7 @@ nios2_valid_target_attribute_rec (tree args)\n \t    }\n \t  else\n \t    {\n-\t      error (\"%<%s%> is unknown\", argstr);\n+\t      error (\"invalid custom instruction option %qs\", argstr);\n \t      return false;\n \t    }\n \n@@ -4707,7 +4712,7 @@ nios2_add_insn_asm (rtx_insn *insn, rtx *operands)\n bool\n nios2_cdx_narrow_form_p (rtx_insn *insn)\n {\n-  rtx pat, lhs, rhs1, rhs2;\n+  rtx pat, lhs, rhs1 = NULL_RTX, rhs2 = NULL_RTX;\n   enum attr_type type;\n   if (!TARGET_HAS_CDX)\n     return false;"}]}