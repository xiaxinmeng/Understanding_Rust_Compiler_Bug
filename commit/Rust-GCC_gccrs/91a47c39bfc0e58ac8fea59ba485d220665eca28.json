{"sha": "91a47c39bfc0e58ac8fea59ba485d220665eca28", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTFhNDdjMzliZmMwZTU4YWM4ZmVhNTliYTQ4NWQyMjA2NjVlY2EyOA==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2016-04-18T19:40:30Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2016-04-18T19:40:30Z"}, "message": "Optimize load double into xmm with zero_extend\n\n\"movq\" should used to load double into xmm register with zero_extend:\n\n(set (reg:V2DF 90)\n     (vec_concat:V2DF (reg/v:DF 88 [ d ])\n                      (const_double:DF 0.0 [0x0.0p+0])))\n\nUnlike \"movsd\", which only works with load from memory, \"movq\" works\nwith both memory and xmm register.\n\ngcc/\n\n\tPR target/70708\n\t* config/i386/sse.md (sse2_loadlpd): Accept load from \"xm\" and\n\treplace %vmovsd with \"%vmovq\".\n\t(vec_concatv2df): Likewise.\n\ngcc/testsuite/\n\n\tPR target/70708\n\t* gcc.target/i386/pr70708.c: New test.\n\nFrom-SVN: r235169", "tree": {"sha": "12cb956dfcb4981785e0a7d11d784aac19142133", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/12cb956dfcb4981785e0a7d11d784aac19142133"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/91a47c39bfc0e58ac8fea59ba485d220665eca28", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91a47c39bfc0e58ac8fea59ba485d220665eca28", "html_url": "https://github.com/Rust-GCC/gccrs/commit/91a47c39bfc0e58ac8fea59ba485d220665eca28", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91a47c39bfc0e58ac8fea59ba485d220665eca28/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "81c160c6f36e29dd25639f1a327d681c9c1a62ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81c160c6f36e29dd25639f1a327d681c9c1a62ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/81c160c6f36e29dd25639f1a327d681c9c1a62ba"}], "stats": {"total": 38, "additions": 32, "deletions": 6}, "files": [{"sha": "7a811a3f6e47bfafadef1156d27b09cbe0919ac4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91a47c39bfc0e58ac8fea59ba485d220665eca28/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91a47c39bfc0e58ac8fea59ba485d220665eca28/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=91a47c39bfc0e58ac8fea59ba485d220665eca28", "patch": "@@ -1,3 +1,10 @@\n+2016-04-18  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/70708\n+\t* config/i386/sse.md (sse2_loadlpd): Accept load from \"xm\" and\n+\treplace %vmovsd with \"%vmovq\".\n+\t(vec_concatv2df): Likewise.\n+\n 2016-04-18  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/mmx.md (*vec_extractv2sf_0): Use gen_lowpart."}, {"sha": "17596cf45684a1c448a4d2292537c635bd96b512", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91a47c39bfc0e58ac8fea59ba485d220665eca28/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91a47c39bfc0e58ac8fea59ba485d220665eca28/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=91a47c39bfc0e58ac8fea59ba485d220665eca28", "patch": "@@ -8804,14 +8804,14 @@\n \t  \"=x,x,x,x,x,x,x,x,m,m ,m\")\n \t(vec_concat:V2DF\n \t  (match_operand:DF 2 \"nonimmediate_operand\"\n-\t  \" m,m,m,x,x,0,0,x,x,*f,r\")\n+\t  \"xm,m,m,x,x,0,0,x,x,*f,r\")\n \t  (vec_select:DF\n \t    (match_operand:V2DF 1 \"vector_move_operand\"\n \t  \" C,0,x,0,x,x,o,o,0,0 ,0\")\n \t    (parallel [(const_int 1)]))))]\n   \"TARGET_SSE2 && !(MEM_P (operands[1]) && MEM_P (operands[2]))\"\n   \"@\n-   %vmovsd\\t{%2, %0|%0, %2}\n+   %vmovq\\t{%2, %0|%0, %2}\n    movlpd\\t{%2, %0|%0, %2}\n    vmovlpd\\t{%2, %1, %0|%0, %1, %2}\n    movsd\\t{%2, %0|%0, %2}\n@@ -8896,10 +8896,10 @@\n    (set_attr \"mode\" \"V2DF,DF,DF\")])\n \n (define_insn \"vec_concatv2df\"\n-  [(set (match_operand:V2DF 0 \"register_operand\"     \"=x,x,v,x,v,x,x,v,x,x\")\n+  [(set (match_operand:V2DF 0 \"register_operand\"     \"=x,x,v,x,v,x,x, v,x,x\")\n \t(vec_concat:V2DF\n-\t  (match_operand:DF 1 \"nonimmediate_operand\" \" 0,x,v,m,m,0,x,m,0,0\")\n-\t  (match_operand:DF 2 \"vector_move_operand\"  \" x,x,v,1,1,m,m,C,x,m\")))]\n+\t  (match_operand:DF 1 \"nonimmediate_operand\" \" 0,x,v,m,m,0,x,xm,0,0\")\n+\t  (match_operand:DF 2 \"vector_move_operand\"  \" x,x,v,1,1,m,m, C,x,m\")))]\n   \"TARGET_SSE\n    && (!(MEM_P (operands[1]) && MEM_P (operands[2]))\n        || (TARGET_SSE3 && rtx_equal_p (operands[1], operands[2])))\"\n@@ -8911,7 +8911,7 @@\n    vmovddup\\t{%1, %0|%0, %1}\n    movhpd\\t{%2, %0|%0, %2}\n    vmovhpd\\t{%2, %1, %0|%0, %1, %2}\n-   %vmovsd\\t{%1, %0|%0, %1}\n+   %vmovq\\t{%1, %0|%0, %1}\n    movlhps\\t{%2, %0|%0, %2}\n    movhps\\t{%2, %0|%0, %2}\"\n   [(set_attr \"isa\" \"sse2_noavx,avx,avx512vl,sse3,avx512vl,sse2_noavx,avx,sse2,noavx,noavx\")"}, {"sha": "6d9912aece55916b94d4c14ee6a247cd0600385e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91a47c39bfc0e58ac8fea59ba485d220665eca28/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91a47c39bfc0e58ac8fea59ba485d220665eca28/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=91a47c39bfc0e58ac8fea59ba485d220665eca28", "patch": "@@ -1,3 +1,8 @@\n+2016-04-18  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/70708\n+\t* gcc.target/i386/pr70708.c: New test.\n+\n 2016-04-18  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/43434"}, {"sha": "2219e61eb87dc544e73e332a4a2ed8904ba5d88b", "filename": "gcc/testsuite/gcc.target/i386/pr70708.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91a47c39bfc0e58ac8fea59ba485d220665eca28/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr70708.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91a47c39bfc0e58ac8fea59ba485d220665eca28/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr70708.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr70708.c?ref=91a47c39bfc0e58ac8fea59ba485d220665eca28", "patch": "@@ -0,0 +1,14 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -msse2\" } */\n+\n+typedef double __m128d __attribute__ ((__vector_size__ (16), __may_alias__));\n+\n+__m128d\n+foo (double d)\n+{\n+  return __extension__ (__m128d){ d, 0.0 };\n+}\n+\n+/* { dg-final { scan-assembler-times \"movq\\[ \\\\t\\]+\\[^\\n\\]*%xmm\" 1 } } */\n+/* { dg-final { scan-assembler-not \"movsd\\[ \\\\t\\]+\\[^\\n\\]*%xmm\" } } */\n+/* { dg-final { scan-assembler-not \"\\\\(%\\[er\\]sp\\\\)\" { target { ! ia32 } }} } */"}]}