{"sha": "1513512ec7d0751cba30c9c8804f2be462acfb9b", "node_id": "C_kwDOANBUbNoAKDE1MTM1MTJlYzdkMDc1MWNiYTMwYzljODgwNGYyYmU0NjJhY2ZiOWI", "commit": {"author": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2022-08-17T14:19:58Z"}, "committer": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2022-08-17T14:19:58Z"}, "message": "Fortran: OpenMP fix declare simd inside modules and absent linear step [PR106566]\n\ngcc/fortran/ChangeLog:\n\n\tPR fortran/106566\n\t* openmp.cc (gfc_match_omp_clauses): Fix setting linear-step value\n\tto 1 when not specified.\n\t(gfc_match_omp_declare_simd): Accept module procedures.\n\ngcc/testsuite/ChangeLog:\n\n\tPR fortran/106566\n\t* gfortran.dg/gomp/declare-simd-4.f90: New test.\n\t* gfortran.dg/gomp/declare-simd-5.f90: New test.\n\t* gfortran.dg/gomp/declare-simd-6.f90: New test.", "tree": {"sha": "c48a76e140ac29ce0f04eb4aa257758851740a69", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c48a76e140ac29ce0f04eb4aa257758851740a69"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1513512ec7d0751cba30c9c8804f2be462acfb9b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1513512ec7d0751cba30c9c8804f2be462acfb9b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1513512ec7d0751cba30c9c8804f2be462acfb9b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1513512ec7d0751cba30c9c8804f2be462acfb9b/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "027b281f1e8de55d959695c7f1e80572fae6dbe7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/027b281f1e8de55d959695c7f1e80572fae6dbe7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/027b281f1e8de55d959695c7f1e80572fae6dbe7"}], "stats": {"total": 143, "additions": 140, "deletions": 3}, "files": [{"sha": "594907714ffd3003ea9044ea19cba0edd15187b6", "filename": "gcc/fortran/openmp.cc", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1513512ec7d0751cba30c9c8804f2be462acfb9b/gcc%2Ffortran%2Fopenmp.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1513512ec7d0751cba30c9c8804f2be462acfb9b/gcc%2Ffortran%2Fopenmp.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fopenmp.cc?ref=1513512ec7d0751cba30c9c8804f2be462acfb9b", "patch": "@@ -2480,7 +2480,7 @@ gfc_match_omp_clauses (gfc_omp_clauses **cp, const omp_mask mask,\n \t\t      goto error;\n \t\t    }\n \t\t}\n-\t      else\n+\t      if (step == NULL)\n \t\t{\n \t\t  step = gfc_get_constant_expr (BT_INTEGER,\n \t\t\t\t\t\tgfc_default_integer_kind,\n@@ -4213,9 +4213,13 @@ gfc_match_omp_declare_simd (void)\n   gfc_omp_declare_simd *ods;\n   bool needs_space = false;\n \n-  switch (gfc_match (\" ( %s ) \", &proc_name))\n+  switch (gfc_match (\" ( \"))\n     {\n-    case MATCH_YES: break;\n+    case MATCH_YES:\n+      if (gfc_match_symbol (&proc_name, /* host assoc = */ true) != MATCH_YES\n+\t  || gfc_match (\" ) \") != MATCH_YES)\n+\treturn MATCH_ERROR;\n+      break;\n     case MATCH_NO: proc_name = NULL; needs_space = true; break;\n     case MATCH_ERROR: return MATCH_ERROR;\n     }"}, {"sha": "27a75ab679df5e0544737be48c1adcc2388b7863", "filename": "gcc/testsuite/gfortran.dg/gomp/declare-simd-4.f90", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1513512ec7d0751cba30c9c8804f2be462acfb9b/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fdeclare-simd-4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1513512ec7d0751cba30c9c8804f2be462acfb9b/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fdeclare-simd-4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fdeclare-simd-4.f90?ref=1513512ec7d0751cba30c9c8804f2be462acfb9b", "patch": "@@ -0,0 +1,42 @@\n+! { dg-do compile }\n+! { dg-additional-options \"-fdump-tree-gimple\" }\n+!\n+! PR fortran/106566\n+!\n+! { dg-final { scan-tree-dump-times \"__attribute__\\\\(\\\\(omp declare simd \\\\(linear\\\\(0:ref,step\\\\(4\\\\)\\\\) simdlen\\\\(8\\\\)\\\\)\\\\)\\\\)\" 2 \"gimple\" } }\n+! { dg-final { scan-tree-dump-times \"__attribute__\\\\(\\\\(omp declare simd \\\\(linear\\\\(0:ref,step\\\\(8\\\\)\\\\) simdlen\\\\(8\\\\)\\\\)\\\\)\\\\)\" 2 \"gimple\" } }\n+\n+subroutine add_one2(p)\n+  implicit none\n+  !$omp declare simd(add_one2) linear(p: ref) simdlen(8)\n+  integer(kind=4) :: p\n+\n+  p = p + 1\n+end subroutine\n+\n+subroutine linear_add_one2(p)\n+  implicit none\n+  !$omp declare simd(linear_add_one2) linear(p: ref, step(2)) simdlen(8)\n+  integer(kind=4) :: p\n+\n+  p = p + 1\n+end subroutine\n+\n+module m\n+   integer, parameter :: NN = 1023\n+   integer(kind=4) :: a(NN)\n+contains\n+  subroutine module_add_one2(q)\n+    implicit none\n+    !$omp declare simd(module_add_one2) linear(q: ref) simdlen(8)\n+    integer(kind=4) :: q\n+    q = q + 1\n+  end subroutine\n+\n+  subroutine linear_add_one2(q)\n+    implicit none\n+    !$omp declare simd(linear_add_one2) linear(q: ref, step(2)) simdlen(8)\n+    integer(kind=4) :: q\n+    q = q + 1\n+  end subroutine\n+end module"}, {"sha": "f5880f5009018ab6f68bb75d06dfecd796ce50c9", "filename": "gcc/testsuite/gfortran.dg/gomp/declare-simd-5.f90", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1513512ec7d0751cba30c9c8804f2be462acfb9b/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fdeclare-simd-5.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1513512ec7d0751cba30c9c8804f2be462acfb9b/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fdeclare-simd-5.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fdeclare-simd-5.f90?ref=1513512ec7d0751cba30c9c8804f2be462acfb9b", "patch": "@@ -0,0 +1,49 @@\n+! { dg-do compile }\n+!\n+! PR fortran/106566\n+!\n+\n+subroutine add_one2(p)\n+  implicit none\n+  procedure(add_one2) :: ext1\n+  !$omp declare simd(ext1) linear(p: ref) simdlen(8)  ! { dg-error \"OMP DECLARE SIMD should refer to containing procedure 'add_one2'\" }\n+  integer :: p\n+\n+  p = p + 1\n+end subroutine\n+\n+subroutine linear_add_one2(p)\n+  implicit none\n+  procedure(linear_add_one2) :: ext2\n+  !$omp declare simd(ext2) linear(p: ref, step(2)) simdlen(8)  ! { dg-error \"OMP DECLARE SIMD should refer to containing procedure 'linear_add_one2'\" }\n+  integer :: p\n+\n+  p = p + 1\n+end subroutine\n+\n+module m\n+   integer, parameter :: NN = 1023\n+   integer :: a(NN)\n+contains\n+  subroutine some_proc(r)\n+    integer :: r\n+  end subroutine\n+  subroutine module_add_one2(q)\n+    implicit none\n+    !$omp declare simd(some_proc) linear(q: ref) simdlen(8)  ! { dg-error \"OMP DECLARE SIMD should refer to containing procedure 'module_add_one2'\" }\n+    integer :: q\n+    q = q + 1\n+  end subroutine\n+\n+  subroutine module_linear_add_one2(q)\n+    implicit none\n+    interface\n+      subroutine other_proc(r)\n+        integer :: r\n+      end subroutine\n+    end interface\n+    !$omp declare simd(other_proc) linear(q: ref, step(2)) simdlen(8)  ! { dg-error \"OMP DECLARE SIMD should refer to containing procedure 'module_linear_add_one2'\" }\n+    integer :: q\n+    q = q + 1\n+  end subroutine\n+end module"}, {"sha": "83f2c0ab7cb002d27ef28a2dad386a58d2d451bf", "filename": "gcc/testsuite/gfortran.dg/gomp/declare-simd-6.f90", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1513512ec7d0751cba30c9c8804f2be462acfb9b/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fdeclare-simd-6.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1513512ec7d0751cba30c9c8804f2be462acfb9b/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fdeclare-simd-6.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fdeclare-simd-6.f90?ref=1513512ec7d0751cba30c9c8804f2be462acfb9b", "patch": "@@ -0,0 +1,42 @@\n+! { dg-do compile }\n+! { dg-additional-options \"-fdump-tree-gimple\" }\n+!\n+! PR fortran/106566\n+!\n+! { dg-final { scan-tree-dump-times \"__attribute__\\\\(\\\\(omp declare simd \\\\(linear\\\\(ref\\\\(0\\\\):4\\\\) simdlen\\\\(8\\\\)\\\\)\\\\)\\\\)\" 2 \"gimple\" } }\n+! { dg-final { scan-tree-dump-times \"__attribute__\\\\(\\\\(omp declare simd \\\\(linear\\\\(ref\\\\(0\\\\):8\\\\) simdlen\\\\(8\\\\)\\\\)\\\\)\\\\)\" 2 \"gimple\" } }\n+\n+subroutine add_one2(p)\n+  implicit none\n+  !$omp declare simd(add_one2) linear(ref(p)) simdlen(8)\n+  integer(kind=4) :: p\n+\n+  p = p + 1\n+end subroutine\n+\n+subroutine linear_add_one2(p)\n+  implicit none\n+  !$omp declare simd(linear_add_one2) linear(ref(p) : 2) simdlen(8)\n+  integer(kind=4) :: p\n+\n+  p = p + 1\n+end subroutine\n+\n+module m\n+   integer, parameter :: NN = 1023\n+   integer(kind=4) :: a(NN)\n+contains\n+  subroutine module_add_one2(q)\n+    implicit none\n+    !$omp declare simd(module_add_one2) linear(ref(q)) simdlen(8)\n+    integer(kind=4) :: q\n+    q = q + 1\n+  end subroutine\n+\n+  subroutine linear_add_one2(q)\n+    implicit none\n+    !$omp declare simd(linear_add_one2) linear(ref(q) : 2) simdlen(8)\n+    integer(kind=4) :: q\n+    q = q + 1\n+  end subroutine\n+end module"}]}