{"sha": "47e78f984ef151c621587a4dcdebc48dd577a36a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDdlNzhmOTg0ZWYxNTFjNjIxNTg3YTRkY2RlYmM0OGRkNTc3YTM2YQ==", "commit": {"author": {"name": "Dehao Chen", "email": "dehao@google.com", "date": "2014-06-03T21:36:05Z"}, "committer": {"name": "Dehao Chen", "email": "dehao@gcc.gnu.org", "date": "2014-06-03T21:36:05Z"}, "message": "tree-cfg.c (gimple_merge_blocks): Only reset count when BBs are in the same loop.\n\n2014-06-03  Dehao Chen  <dehao@google.com>\n\n\t* tree-cfg.c (gimple_merge_blocks): Only reset count when BBs are in\n\tthe same loop.\n\t* gcc.dg/tree-prof/merge_block.c: New test.\n\nFrom-SVN: r211202", "tree": {"sha": "830ac6e9ad7a9571a908b35acefb2b113b8183f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/830ac6e9ad7a9571a908b35acefb2b113b8183f3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/47e78f984ef151c621587a4dcdebc48dd577a36a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47e78f984ef151c621587a4dcdebc48dd577a36a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47e78f984ef151c621587a4dcdebc48dd577a36a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47e78f984ef151c621587a4dcdebc48dd577a36a/comments", "author": {"login": "danielcdh", "id": 694263, "node_id": "MDQ6VXNlcjY5NDI2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/694263?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danielcdh", "html_url": "https://github.com/danielcdh", "followers_url": "https://api.github.com/users/danielcdh/followers", "following_url": "https://api.github.com/users/danielcdh/following{/other_user}", "gists_url": "https://api.github.com/users/danielcdh/gists{/gist_id}", "starred_url": "https://api.github.com/users/danielcdh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danielcdh/subscriptions", "organizations_url": "https://api.github.com/users/danielcdh/orgs", "repos_url": "https://api.github.com/users/danielcdh/repos", "events_url": "https://api.github.com/users/danielcdh/events{/privacy}", "received_events_url": "https://api.github.com/users/danielcdh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "eb7404d46ae0ac7ec733e7b3850a00f11df2d4b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb7404d46ae0ac7ec733e7b3850a00f11df2d4b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb7404d46ae0ac7ec733e7b3850a00f11df2d4b7"}], "stats": {"total": 37, "additions": 35, "deletions": 2}, "files": [{"sha": "0d61afefbbddc8b0212d840e8991e34b111c9096", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47e78f984ef151c621587a4dcdebc48dd577a36a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47e78f984ef151c621587a4dcdebc48dd577a36a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=47e78f984ef151c621587a4dcdebc48dd577a36a", "patch": "@@ -1,3 +1,8 @@\n+2014-06-03  Dehao Chen  <dehao@google.com>\n+\n+\t* tree-cfg.c (gimple_merge_blocks): Only reset count when BBs are in\n+\tthe same loop.\n+\n 2014-06-03  Marek Polacek  <polacek@redhat.com>\n \n \tPR c/60439"}, {"sha": "db89ee3974fd336ae3755756eb0ba3c76058d209", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47e78f984ef151c621587a4dcdebc48dd577a36a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47e78f984ef151c621587a4dcdebc48dd577a36a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=47e78f984ef151c621587a4dcdebc48dd577a36a", "patch": "@@ -1,3 +1,7 @@\n+2014-06-03  Dehao Chen  <dehao@google.com>\n+\n+\t* gcc.dg/tree-prof/merge_block.c: New test.\n+\n 2014-06-03  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* g++.dg/ext/mv14.C (dg-options): Add -march=x86-64."}, {"sha": "62f7f2275021a24a68784830f3418160f000ef5f", "filename": "gcc/testsuite/gcc.dg/tree-prof/merge_block.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47e78f984ef151c621587a4dcdebc48dd577a36a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fmerge_block.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47e78f984ef151c621587a4dcdebc48dd577a36a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fmerge_block.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fmerge_block.c?ref=47e78f984ef151c621587a4dcdebc48dd577a36a", "patch": "@@ -0,0 +1,21 @@\n+\n+/* { dg-options \"-O2 -fno-ipa-pure-const -fdump-tree-optimized-blocks-details -fno-early-inlining\" } */\n+int a[8];\n+int t()\n+{\n+\tint i;\n+\tfor (i = 0; i < 3; i++)\n+\t\tif (a[i])\n+\t\t\tbreak;\n+\treturn i;\n+}\n+main ()\n+{\n+  int i;\n+  /* The loop will be optimized away after ipa-inline.  */\n+  for (i = 0; i < 1000; i++)\n+    t ();\n+  return 0;\n+}\n+/* { dg-final-use { scan-tree-dump-not \"Invalid sum\" \"optimized\"} } */\n+/* { dg-final-use { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "acf08fc7bed80dc50e51af93fca14f5c802c5cb0", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47e78f984ef151c621587a4dcdebc48dd577a36a/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47e78f984ef151c621587a4dcdebc48dd577a36a/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=47e78f984ef151c621587a4dcdebc48dd577a36a", "patch": "@@ -1880,8 +1880,11 @@ gimple_merge_blocks (basic_block a, basic_block b)\n   /* When merging two BBs, if their counts are different, the larger count\n      is selected as the new bb count. This is to handle inconsistent\n      profiles.  */\n-  a->count = MAX (a->count, b->count);\n-  a->frequency = MAX (a->frequency, b->frequency);\n+  if (a->loop_father == b->loop_father)\n+    {\n+      a->count = MAX (a->count, b->count);\n+      a->frequency = MAX (a->frequency, b->frequency);\n+    }\n \n   /* Merge the sequences.  */\n   last = gsi_last_bb (a);"}]}