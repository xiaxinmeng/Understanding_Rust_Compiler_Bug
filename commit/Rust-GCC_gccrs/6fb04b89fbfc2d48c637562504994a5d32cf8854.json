{"sha": "6fb04b89fbfc2d48c637562504994a5d32cf8854", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmZiMDRiODlmYmZjMmQ0OGM2Mzc1NjI1MDQ5OTRhNWQzMmNmODg1NA==", "commit": {"author": {"name": "Sandra Loosemore", "email": "sandra@codesourcery.com", "date": "2015-02-26T21:55:37Z"}, "committer": {"name": "Sandra Loosemore", "email": "sandra@gcc.gnu.org", "date": "2015-02-26T21:55:37Z"}, "message": "extend.texi (Function Attributes): Fix spelling and typos.\n\n2015-02-26  Sandra Loosemore  <sandra@codesourcery.com>\n\n\tgcc/\n\t* doc/extend.texi (Function Attributes): Fix spelling and typos.\n\t(Label Attributes): Likewise.\n\t(Cilk Plus Builtins): Likewise.\n\t(ARC SIMD Built-in Functions): Likewise.\n\t(ARM C Language Extensions (ACLE)): Likewise.\n\t(PowerPC Built-in Functions): Likewise.\n\t(PowerPC Hardware Transactional Memory Built-in Functions):\n\tLikewise.\n\nFrom-SVN: r221035", "tree": {"sha": "1b2dbbfbfd7524e17de88e411b88b404b71b4f39", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1b2dbbfbfd7524e17de88e411b88b404b71b4f39"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6fb04b89fbfc2d48c637562504994a5d32cf8854", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6fb04b89fbfc2d48c637562504994a5d32cf8854", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6fb04b89fbfc2d48c637562504994a5d32cf8854", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6fb04b89fbfc2d48c637562504994a5d32cf8854/comments", "author": {"login": "SandraLoosemore", "id": 104087111, "node_id": "U_kgDOBjQ-Rw", "avatar_url": "https://avatars.githubusercontent.com/u/104087111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SandraLoosemore", "html_url": "https://github.com/SandraLoosemore", "followers_url": "https://api.github.com/users/SandraLoosemore/followers", "following_url": "https://api.github.com/users/SandraLoosemore/following{/other_user}", "gists_url": "https://api.github.com/users/SandraLoosemore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SandraLoosemore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SandraLoosemore/subscriptions", "organizations_url": "https://api.github.com/users/SandraLoosemore/orgs", "repos_url": "https://api.github.com/users/SandraLoosemore/repos", "events_url": "https://api.github.com/users/SandraLoosemore/events{/privacy}", "received_events_url": "https://api.github.com/users/SandraLoosemore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d288c0abe62b0ea097852174651c5b87c2ac7800", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d288c0abe62b0ea097852174651c5b87c2ac7800", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d288c0abe62b0ea097852174651c5b87c2ac7800"}], "stats": {"total": 41, "additions": 26, "deletions": 15}, "files": [{"sha": "e0bafa794e4582ec3384a1e6ddf9dbbb1604ea1a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fb04b89fbfc2d48c637562504994a5d32cf8854/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fb04b89fbfc2d48c637562504994a5d32cf8854/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6fb04b89fbfc2d48c637562504994a5d32cf8854", "patch": "@@ -1,3 +1,14 @@\n+2015-02-26  Sandra Loosemore  <sandra@codesourcery.com>\n+\n+\t* doc/extend.texi (Function Attributes): Fix spelling and typos.\n+\t(Label Attributes): Likewise.\n+\t(Cilk Plus Builtins): Likewise.\n+\t(ARC SIMD Built-in Functions): Likewise.\n+\t(ARM C Language Extensions (ACLE)): Likewise.\n+\t(PowerPC Built-in Functions): Likewise.\n+\t(PowerPC Hardware Transactional Memory Built-in Functions):\n+\tLikewise.\n+\n 2015-02-26  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/65216"}, {"sha": "c066d32274e014d46cd3b30358f736e5c7a01909", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fb04b89fbfc2d48c637562504994a5d32cf8854/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fb04b89fbfc2d48c637562504994a5d32cf8854/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=6fb04b89fbfc2d48c637562504994a5d32cf8854", "patch": "@@ -2985,7 +2985,7 @@ which this handler should be assigned.  If the argument is a name it\n is treated as a symbolic name for the vector slot.  These names should\n match up with appropriate entries in the linker script.  By default\n the names @code{watchdog} for vector 26, @code{nmi} for vector 30 and\n-@code{reset} for vector 31 are recognised.\n+@code{reset} for vector 31 are recognized.\n \n You can also use the following function attributes to modify how\n normal functions interact with interrupt functions:\n@@ -3388,7 +3388,7 @@ the function label.  A second argument can be used to specify the\n number of halfwords to be added after the function label.  For\n both arguments the maximum allowed value is 1000000.\n \n-If both ar guments are zero, hotpatching is disabled.\n+If both arguments are zero, hotpatching is disabled.\n \n @item naked\n @cindex function without a prologue/epilogue code\n@@ -4633,7 +4633,7 @@ This example uses the @code{cold} label attribute to indicate the\n \n    asm goto (\"some asm\" : : : : NoError);\n \n-/* This branch (the fallthru from the asm) is less commonly used */\n+/* This branch (the fall-through from the asm) is less commonly used */\n ErrorHandling: \n    __attribute__((cold, unused)); /* Semi-colon is required here */\n    printf(\"error\\n\");\n@@ -8988,7 +8988,7 @@ returns -1.\n @node Cilk Plus Builtins\n @section Cilk Plus C/C++ Language Extension Built-in Functions\n \n-GCC provides support for the following built-in reduction funtions if Cilk Plus\n+GCC provides support for the following built-in reduction functions if Cilk Plus\n is enabled. Cilk Plus can be enabled using the @option{-fcilkplus} flag.\n \n @itemize @bullet\n@@ -10744,7 +10744,7 @@ __v8hi __builtin_arc_vupsbaw (__v8hi)\n __v8hi __builtin_arc_vupsbw (__v8hi)\n @end example\n \n-The followign take two @code{int} arguments and return no result:\n+The following take two @code{int} arguments and return no result:\n @example\n void __builtin_arc_vdirun (int, int)\n void __builtin_arc_vdorun (int, int)\n@@ -10983,11 +10983,11 @@ intrinsics can be found at\n The built-in intrinsics for the Advanced SIMD extension are available when\n NEON is enabled.\n \n-Currently, ARM and AArch64 back-ends do not support ACLE 2.0 fully.  Both\n-back-ends support CRC32 intrinsics from @file{arm_acle.h}.  The ARM backend's\n-16-bit floating-point Advanded SIMD Intrinsics currently comply to ACLE v1.1.\n-AArch64's backend does not have support for 16-bit floating point Advanced SIMD\n-Intrinsics yet.\n+Currently, ARM and AArch64 back ends do not support ACLE 2.0 fully.  Both\n+back ends support CRC32 intrinsics from @file{arm_acle.h}.  The ARM back end's\n+16-bit floating-point Advanced SIMD intrinsics currently comply to ACLE v1.1.\n+AArch64's back end does not have support for 16-bit floating point Advanced SIMD\n+intrinsics yet.\n \n See @ref{ARM Options} and @ref{AArch64 Options} for more information on the\n availability of extensions.\n@@ -12451,7 +12451,7 @@ unsigned int addg6s (unsigned int, unsigned int);\n @end smallexample\n \n The @code{__builtin_divde}, @code{__builtin_divdeo},\n-@code{__builitin_divdeu}, @code{__builtin_divdeou} functions require a\n+@code{__builtin_divdeu}, @code{__builtin_divdeou} functions require a\n 64-bit environment support ISA 2.06 or later.\n \n The following built-in functions are available for the PowerPC family\n@@ -12467,9 +12467,9 @@ _Decimal128 __builtin_denbcdq (int, _Decimal128);\n _Decimal64 __builtin_diex (_Decimal64, _Decimal64);\n _Decimal128 _builtin_diexq (_Decimal128, _Decimal128);\n _Decimal64 __builtin_dscli (_Decimal64, int);\n-_Decimal128 __builitn_dscliq (_Decimal128, int);\n+_Decimal128 __builtin_dscliq (_Decimal128, int);\n _Decimal64 __builtin_dscri (_Decimal64, int);\n-_Decimal128 __builitn_dscriq (_Decimal128, int);\n+_Decimal128 __builtin_dscriq (_Decimal128, int);\n unsigned long long __builtin_unpack_dec128 (_Decimal128, int);\n _Decimal128 __builtin_pack_dec128 (unsigned long long, unsigned long long);\n @end smallexample\n@@ -15079,7 +15079,7 @@ must be a constant integer in the range of 0 to 15.\n @subsection PowerPC Hardware Transactional Memory Built-in Functions\n GCC provides two interfaces for accessing the Hardware Transactional\n Memory (HTM) instructions available on some of the PowerPC family\n-of prcoessors (eg, POWER8).  The two interfaces come in a low level\n+of processors (eg, POWER8).  The two interfaces come in a low level\n interface, consisting of built-in functions specific to PowerPC and a\n higher level interface consisting of inline functions that are common\n between PowerPC and S/390.\n@@ -19255,4 +19255,4 @@ than no arguments, as C++ demands.\n @end table\n \n @c  LocalWords:  emph deftypefn builtin ARCv2EM SIMD builtins msimd\n-@c  LocalWords:  typedef v4si v8hi DMA dma vdiwr vdowr followign\n+@c  LocalWords:  typedef v4si v8hi DMA dma vdiwr vdowr"}]}