{"sha": "e44d7e39178cd91d8dce785b4df9da19a769db7d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTQ0ZDdlMzkxNzhjZDkxZDhkY2U3ODViNGRmOWRhMTlhNzY5ZGI3ZA==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-12-20T18:17:21Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-12-20T18:17:21Z"}, "message": "syscall: Don't define IPMreq in socket_irix.go.\n\nFrom Rainer Orth.\n\nFrom-SVN: r182549", "tree": {"sha": "4e46236ec4b16ff99cb2c673eb718a0a938ba99e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4e46236ec4b16ff99cb2c673eb718a0a938ba99e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e44d7e39178cd91d8dce785b4df9da19a769db7d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e44d7e39178cd91d8dce785b4df9da19a769db7d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e44d7e39178cd91d8dce785b4df9da19a769db7d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e44d7e39178cd91d8dce785b4df9da19a769db7d/comments", "author": null, "committer": null, "parents": [{"sha": "d48be5dfaf50c025bd4bdbaed375f1806d8c3bfb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d48be5dfaf50c025bd4bdbaed375f1806d8c3bfb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d48be5dfaf50c025bd4bdbaed375f1806d8c3bfb"}], "stats": {"total": 72, "additions": 32, "deletions": 40}, "files": [{"sha": "319a67b47c995faf4388c663ebb4c39684a92f7a", "filename": "libgo/go/syscall/socket_irix.go", "status": "modified", "additions": 32, "deletions": 40, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e44d7e39178cd91d8dce785b4df9da19a769db7d/libgo%2Fgo%2Fsyscall%2Fsocket_irix.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e44d7e39178cd91d8dce785b4df9da19a769db7d/libgo%2Fgo%2Fsyscall%2Fsocket_irix.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fsyscall%2Fsocket_irix.go?ref=e44d7e39178cd91d8dce785b4df9da19a769db7d", "patch": "@@ -74,54 +74,46 @@ func BindToDevice(fd int, device string) (err error) {\n \treturn ENOSYS\n }\n \n-// struct ip_mreg is provived in <netinet/in.h>, but protected with _SGIAPI.\n-// This could be enabled with -D_SGI_SOURCE, but conflicts with\n-// -D_XOPEN_SOURCE=500 required for msg_control etc. in struct msghgr, so\n-// simply provide it here.\n-type IPMreq struct {\n-\tMultiaddr [4]byte\n-\tInterface [4]byte\n-}\n-\n-// Similarly, <netdb.h> only provides struct addrinfo, AI_* and EAI_* if\n-// _NO_XOPEN4 && _NO_XOPEN5.\n+// <netdb.h> only provides struct addrinfo, AI_* and EAI_* if  _NO_XOPEN4\n+// && _NO_XOPEN5, but -D_XOPEN_SOURCE=500 is required for msg_control etc.\n+// in struct msghgr, so simply provide them here.\n type Addrinfo struct {\n-\tAi_flags int32\n-\tAi_family int32\n-\tAi_socktype int32\n-\tAi_protocol int32\n-\tAi_addrlen int32\n+\tAi_flags     int32\n+\tAi_family    int32\n+\tAi_socktype  int32\n+\tAi_protocol  int32\n+\tAi_addrlen   int32\n \tAi_canonname *uint8\n-\tAi_addr *_sockaddr\n-\tAi_next *Addrinfo\n+\tAi_addr      *_sockaddr\n+\tAi_next      *Addrinfo\n }\n \n const (\n-\tAI_PASSIVE\t= 0x00000001\n-\tAI_CANONNAME\t= 0x00000002\n-\tAI_NUMERICHOST\t= 0x00000004\n-\tAI_NUMERICSERV\t= 0x00000008\n-\tAI_ALL\t\t= 0x00000100\n-\tAI_ADDRCONFIG\t= 0x00000400\n-\tAI_V4MAPPED\t= 0x00000800\n-\tAI_DEFAULT\t= (AI_V4MAPPED | AI_ADDRCONFIG)\n+\tAI_PASSIVE     = 0x00000001\n+\tAI_CANONNAME   = 0x00000002\n+\tAI_NUMERICHOST = 0x00000004\n+\tAI_NUMERICSERV = 0x00000008\n+\tAI_ALL         = 0x00000100\n+\tAI_ADDRCONFIG  = 0x00000400\n+\tAI_V4MAPPED    = 0x00000800\n+\tAI_DEFAULT     = (AI_V4MAPPED | AI_ADDRCONFIG)\n )\n \n const (\n-\tEAI_ADDRFAMILY\t=  1\n-\tEAI_AGAIN\t=  2\n-\tEAI_BADFLAGS\t=  3\n-\tEAI_FAIL\t=  4\n-\tEAI_FAMILY\t=  5\n-\tEAI_MEMORY\t=  6\n-\tEAI_NODATA\t=  7\n-\tEAI_NONAME\t=  8\n-\tEAI_SERVICE\t=  9\n-\tEAI_SOCKTYPE\t= 10\n-\tEAI_SYSTEM\t= 11\n-\tEAI_BADHINTS\t= 12\n-\tEAI_OVERFLOW\t= 13\n-\tEAI_MAX\t\t= 14\n+\tEAI_ADDRFAMILY = 1\n+\tEAI_AGAIN      = 2\n+\tEAI_BADFLAGS   = 3\n+\tEAI_FAIL       = 4\n+\tEAI_FAMILY     = 5\n+\tEAI_MEMORY     = 6\n+\tEAI_NODATA     = 7\n+\tEAI_NONAME     = 8\n+\tEAI_SERVICE    = 9\n+\tEAI_SOCKTYPE   = 10\n+\tEAI_SYSTEM     = 11\n+\tEAI_BADHINTS   = 12\n+\tEAI_OVERFLOW   = 13\n+\tEAI_MAX        = 14\n )\n \n func anyToSockaddrOS(rsa *RawSockaddrAny) (Sockaddr, error) {"}]}