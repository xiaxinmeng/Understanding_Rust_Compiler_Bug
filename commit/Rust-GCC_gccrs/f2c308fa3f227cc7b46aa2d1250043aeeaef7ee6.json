{"sha": "f2c308fa3f227cc7b46aa2d1250043aeeaef7ee6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjJjMzA4ZmEzZjIyN2NjN2I0NmFhMmQxMjUwMDQzYWVlYWVmN2VlNg==", "commit": {"author": {"name": "Georg-Johann Lay", "email": "avr@gjlay.de", "date": "2011-08-01T15:35:45Z"}, "committer": {"name": "Georg-Johann Lay", "email": "gjl@gcc.gnu.org", "date": "2011-08-01T15:35:45Z"}, "message": "avr.h (mcu_type_s): Add errata_skip field.\n\n\t\n\t* config/avr/avr.h (mcu_type_s): Add errata_skip field.\n\t* config/avr/avr-devices.c (avr_mcu_types): Use it.\n\t* config/avr/avr-mcus.def (AVR_MCU): Use it.\n\t* config/avr/avr-c.c (avr_cpu_cpp_builtins): Use it to builtin\n\tdefine __AVR_ERRATA_SKIP__ and __AVR_ERRATA_SKIP_JMP_CALL__.\n\t* config/avr/libgcc.S (__mulshisi3, __ffshi2, __fmulsu_exit):\n\tUse __AVR_ERRATA_SKIP_JMP_CALL__ instead of __AVR_HAVE_JMP_CALL__\n\tto detect if XJMP must not be skipped.\n\nFrom-SVN: r177049", "tree": {"sha": "4a836a2847b3417e0b24a839b4a24c0ba6128fd1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4a836a2847b3417e0b24a839b4a24c0ba6128fd1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f2c308fa3f227cc7b46aa2d1250043aeeaef7ee6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2c308fa3f227cc7b46aa2d1250043aeeaef7ee6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2c308fa3f227cc7b46aa2d1250043aeeaef7ee6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2c308fa3f227cc7b46aa2d1250043aeeaef7ee6/comments", "author": null, "committer": {"login": "sprintersb", "id": 8905355, "node_id": "MDQ6VXNlcjg5MDUzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/8905355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sprintersb", "html_url": "https://github.com/sprintersb", "followers_url": "https://api.github.com/users/sprintersb/followers", "following_url": "https://api.github.com/users/sprintersb/following{/other_user}", "gists_url": "https://api.github.com/users/sprintersb/gists{/gist_id}", "starred_url": "https://api.github.com/users/sprintersb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sprintersb/subscriptions", "organizations_url": "https://api.github.com/users/sprintersb/orgs", "repos_url": "https://api.github.com/users/sprintersb/repos", "events_url": "https://api.github.com/users/sprintersb/events{/privacy}", "received_events_url": "https://api.github.com/users/sprintersb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "daec8eebdb7a3cfd3e59771455d24fac9adb151e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/daec8eebdb7a3cfd3e59771455d24fac9adb151e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/daec8eebdb7a3cfd3e59771455d24fac9adb151e"}], "stats": {"total": 385, "additions": 212, "deletions": 173}, "files": [{"sha": "573f740f164ed490c02e2803040049d89fe74edd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2c308fa3f227cc7b46aa2d1250043aeeaef7ee6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2c308fa3f227cc7b46aa2d1250043aeeaef7ee6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f2c308fa3f227cc7b46aa2d1250043aeeaef7ee6", "patch": "@@ -1,3 +1,14 @@\n+2011-08-01  Georg-Johann Lay  <avr@gjlay.de>\n+\t\n+\t* config/avr/avr.h (mcu_type_s): Add errata_skip field.\n+\t* config/avr/avr-devices.c (avr_mcu_types): Use it.\n+\t* config/avr/avr-mcus.def (AVR_MCU): Use it.\n+\t* config/avr/avr-c.c (avr_cpu_cpp_builtins): Use it to builtin\n+\tdefine __AVR_ERRATA_SKIP__ and __AVR_ERRATA_SKIP_JMP_CALL__.\n+\t* config/avr/libgcc.S (__mulshisi3, __ffshi2, __fmulsu_exit):\n+\tUse __AVR_ERRATA_SKIP_JMP_CALL__ instead of __AVR_HAVE_JMP_CALL__\n+\tto detect if XJMP must not be skipped.\n+\n 2011-08-02  Alan Modra  <amodra@gmail.com>\n \n \t* config/rs6000/rs6000-protos.h (rs6000_save_toc_in_prologue_p): Delete."}, {"sha": "abe25ab590e080fa22f5467fcbd78a36fad9ba91", "filename": "gcc/config/avr/avr-c.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2c308fa3f227cc7b46aa2d1250043aeeaef7ee6/gcc%2Fconfig%2Favr%2Favr-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2c308fa3f227cc7b46aa2d1250043aeeaef7ee6/gcc%2Fconfig%2Favr%2Favr-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr-c.c?ref=f2c308fa3f227cc7b46aa2d1250043aeeaef7ee6", "patch": "@@ -82,6 +82,14 @@ avr_cpu_cpp_builtins (struct cpp_reader *pfile)\n   if (TARGET_NO_INTERRUPTS)\n     cpp_define (pfile, \"__NO_INTERRUPTS__\");\n \n+  if (avr_current_device->errata_skip)\n+    {\n+      cpp_define (pfile, \"__AVR_ERRATA_SKIP__\");\n+      \n+      if (avr_current_arch->have_jmp_call)\n+        cpp_define (pfile, \"__AVR_ERRATA_SKIP_JMP_CALL__\");\n+    }\n+\n   /* Define builtin macros so that the user can\n      easily query if or if not a specific builtin\n      is available. */"}, {"sha": "d0dda8536af90097c18361594ea78bdd82df35d7", "filename": "gcc/config/avr/avr-devices.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2c308fa3f227cc7b46aa2d1250043aeeaef7ee6/gcc%2Fconfig%2Favr%2Favr-devices.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2c308fa3f227cc7b46aa2d1250043aeeaef7ee6/gcc%2Fconfig%2Favr%2Favr-devices.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr-devices.c?ref=f2c308fa3f227cc7b46aa2d1250043aeeaef7ee6", "patch": "@@ -40,11 +40,11 @@ const struct base_arch_s avr_arch_types[] = {\n };\n \n const struct mcu_type_s avr_mcu_types[] = {\n-#define AVR_MCU(NAME, ARCH, MACRO, SHORT_SP, DATA_SEC, LIBRARY_NAME)\t\\\n-  { NAME, ARCH, MACRO, SHORT_SP, DATA_SEC, LIBRARY_NAME },\n+#define AVR_MCU(NAME, ARCH, MACRO, SHORT_SP, ERRATA_SKIP, DATA_SEC, LIBRARY_NAME) \\\n+  { NAME, ARCH, MACRO, SHORT_SP, ERRATA_SKIP, DATA_SEC, LIBRARY_NAME },\n #include \"avr-mcus.def\"\n #undef AVR_MCU\n     /* End of list.  */\n-  { NULL,                   ARCH_UNKNOWN, NULL,                     0,      0, NULL }\n+  { NULL, ARCH_UNKNOWN, NULL, 0, 0, 0, NULL }\n };\n "}, {"sha": "4a592da9849570a59839959f9980c2963f9564f7", "filename": "gcc/config/avr/avr-mcus.def", "status": "modified", "additions": 167, "deletions": 167, "changes": 334, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2c308fa3f227cc7b46aa2d1250043aeeaef7ee6/gcc%2Fconfig%2Favr%2Favr-mcus.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2c308fa3f227cc7b46aa2d1250043aeeaef7ee6/gcc%2Fconfig%2Favr%2Favr-mcus.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr-mcus.def?ref=f2c308fa3f227cc7b46aa2d1250043aeeaef7ee6", "patch": "@@ -27,185 +27,185 @@\n \n    Before including this file, define a macro:\n \n-   AVR_MCU (NAME, ARCH, MACRO, SHORT_SP, DATA_SEC, LIBRARY_NAME)\n+   AVR_MCU (NAME, ARCH, MACRO, SHORT_SP, ERRATA_SKIP, DATA_SEC, LIBRARY_NAME)\n \n    where the arguments are the fields of struct mcu_type_s.  */\n \n /* \"avr2\" must be first for the \"0\" default to work as intended.  */\n \n /* Classic, <= 8K.  */\n-AVR_MCU (\"avr2\",                 ARCH_AVR2, NULL,                        0, 0x0060, \"s8515\")\n-AVR_MCU (\"at90s2313\",            ARCH_AVR2, \"__AVR_AT90S2313__\",         1, 0x0060, \"s2313\")\n-AVR_MCU (\"at90s2323\",            ARCH_AVR2, \"__AVR_AT90S2323__\",         1, 0x0060, \"s2323\")\n-AVR_MCU (\"at90s2333\",            ARCH_AVR2, \"__AVR_AT90S2333__\",         1, 0x0060, \"s2333\")\n-AVR_MCU (\"at90s2343\",            ARCH_AVR2, \"__AVR_AT90S2343__\",         1, 0x0060, \"s2343\")\n-AVR_MCU (\"attiny22\",             ARCH_AVR2, \"__AVR_ATtiny22__\",          1, 0x0060, \"tn22\")\n-AVR_MCU (\"attiny26\",             ARCH_AVR2, \"__AVR_ATtiny26__\",          1, 0x0060, \"tn26\")\n-AVR_MCU (\"at90s4414\",            ARCH_AVR2, \"__AVR_AT90S4414__\",         0, 0x0060, \"s4414\")\n-AVR_MCU (\"at90s4433\",            ARCH_AVR2, \"__AVR_AT90S4433__\",         1, 0x0060, \"s4433\")\n-AVR_MCU (\"at90s4434\",            ARCH_AVR2, \"__AVR_AT90S4434__\",         0, 0x0060, \"s4434\")\n-AVR_MCU (\"at90s8515\",            ARCH_AVR2, \"__AVR_AT90S8515__\",         0, 0x0060, \"s8515\")\n-AVR_MCU (\"at90c8534\",            ARCH_AVR2, \"__AVR_AT90C8534__\",         0, 0x0060, \"c8534\")\n-AVR_MCU (\"at90s8535\",            ARCH_AVR2, \"__AVR_AT90S8535__\",         0, 0x0060, \"s8535\")\n+AVR_MCU (\"avr2\",                 ARCH_AVR2, NULL,                        0, 1, 0x0060, \"s8515\")\n+AVR_MCU (\"at90s2313\",            ARCH_AVR2, \"__AVR_AT90S2313__\",         1, 0, 0x0060, \"s2313\")\n+AVR_MCU (\"at90s2323\",            ARCH_AVR2, \"__AVR_AT90S2323__\",         1, 0, 0x0060, \"s2323\")\n+AVR_MCU (\"at90s2333\",            ARCH_AVR2, \"__AVR_AT90S2333__\",         1, 0, 0x0060, \"s2333\")\n+AVR_MCU (\"at90s2343\",            ARCH_AVR2, \"__AVR_AT90S2343__\",         1, 0, 0x0060, \"s2343\")\n+AVR_MCU (\"attiny22\",             ARCH_AVR2, \"__AVR_ATtiny22__\",          1, 0, 0x0060, \"tn22\")\n+AVR_MCU (\"attiny26\",             ARCH_AVR2, \"__AVR_ATtiny26__\",          1, 0, 0x0060, \"tn26\")\n+AVR_MCU (\"at90s4414\",            ARCH_AVR2, \"__AVR_AT90S4414__\",         0, 0, 0x0060, \"s4414\")\n+AVR_MCU (\"at90s4433\",            ARCH_AVR2, \"__AVR_AT90S4433__\",         1, 0, 0x0060, \"s4433\")\n+AVR_MCU (\"at90s4434\",            ARCH_AVR2, \"__AVR_AT90S4434__\",         0, 0, 0x0060, \"s4434\")\n+AVR_MCU (\"at90s8515\",            ARCH_AVR2, \"__AVR_AT90S8515__\",         0, 1, 0x0060, \"s8515\")\n+AVR_MCU (\"at90c8534\",            ARCH_AVR2, \"__AVR_AT90C8534__\",         0, 0, 0x0060, \"c8534\")\n+AVR_MCU (\"at90s8535\",            ARCH_AVR2, \"__AVR_AT90S8535__\",         0, 0, 0x0060, \"s8535\")\n /* Classic + MOVW, <= 8K.  */\n-AVR_MCU (\"avr25\",                ARCH_AVR25, NULL,                       0, 0x0060, \"tn85\")\n-AVR_MCU (\"ata6289\",              ARCH_AVR25, \"__AVR_ATA6289__\",          0, 0x0100, \"a6289\")\n-AVR_MCU (\"attiny13\",             ARCH_AVR25, \"__AVR_ATtiny13__\",         1, 0x0060, \"tn13\")\n-AVR_MCU (\"attiny13a\",            ARCH_AVR25, \"__AVR_ATtiny13A__\",        1, 0x0060, \"tn13a\")\n-AVR_MCU (\"attiny2313\",           ARCH_AVR25, \"__AVR_ATtiny2313__\",       1, 0x0060, \"tn2313\")\n-AVR_MCU (\"attiny2313a\",          ARCH_AVR25, \"__AVR_ATtiny2313A__\",      1, 0x0060, \"tn2313a\")\n-AVR_MCU (\"attiny24\",             ARCH_AVR25, \"__AVR_ATtiny24__\",         1, 0x0060, \"tn24\")\n-AVR_MCU (\"attiny24a\",            ARCH_AVR25, \"__AVR_ATtiny24A__\",        1, 0x0060, \"tn24a\")\n-AVR_MCU (\"attiny4313\",           ARCH_AVR25, \"__AVR_ATtiny4313__\",       1, 0x0060, \"tn4313\")\n-AVR_MCU (\"attiny44\",             ARCH_AVR25, \"__AVR_ATtiny44__\",         0, 0x0060, \"tn44\")\n-AVR_MCU (\"attiny44a\",            ARCH_AVR25, \"__AVR_ATtiny44A__\",        0, 0x0060, \"tn44a\")\n-AVR_MCU (\"attiny84\",             ARCH_AVR25, \"__AVR_ATtiny84__\",         0, 0x0060, \"tn84\")\n-AVR_MCU (\"attiny84a\",            ARCH_AVR25, \"__AVR_ATtiny84A__\",        0, 0x0060, \"tn84\")\n-AVR_MCU (\"attiny25\",             ARCH_AVR25, \"__AVR_ATtiny25__\",         1, 0x0060, \"tn25\")\n-AVR_MCU (\"attiny45\",             ARCH_AVR25, \"__AVR_ATtiny45__\",         0, 0x0060, \"tn45\")\n-AVR_MCU (\"attiny85\",             ARCH_AVR25, \"__AVR_ATtiny85__\",         0, 0x0060, \"tn85\")\n-AVR_MCU (\"attiny261\",            ARCH_AVR25, \"__AVR_ATtiny261__\",        1, 0x0060, \"tn261\")\n-AVR_MCU (\"attiny261a\",           ARCH_AVR25, \"__AVR_ATtiny261A__\",       1, 0x0060, \"tn261a\")\n-AVR_MCU (\"attiny461\",            ARCH_AVR25, \"__AVR_ATtiny461__\",        0, 0x0060, \"tn461\")\n-AVR_MCU (\"attiny461a\",           ARCH_AVR25, \"__AVR_ATtiny461A__\",       0, 0x0060, \"tn461a\")\n-AVR_MCU (\"attiny861\",            ARCH_AVR25, \"__AVR_ATtiny861__\",        0, 0x0060, \"tn861\")\n-AVR_MCU (\"attiny861a\",           ARCH_AVR25, \"__AVR_ATtiny861A__\",       0, 0x0060, \"tn861a\")\n-AVR_MCU (\"attiny43u\",            ARCH_AVR25, \"__AVR_ATtiny43U__\",        0, 0x0060, \"tn43u\")\n-AVR_MCU (\"attiny87\",             ARCH_AVR25, \"__AVR_ATtiny87__\",         0, 0x0100, \"tn87\")\n-AVR_MCU (\"attiny48\",             ARCH_AVR25, \"__AVR_ATtiny48__\",         0, 0x0100, \"tn48\")\n-AVR_MCU (\"attiny88\",             ARCH_AVR25, \"__AVR_ATtiny88__\",         0, 0x0100, \"tn88\")\n-AVR_MCU (\"at86rf401\",            ARCH_AVR25, \"__AVR_AT86RF401__\",        1, 0x0060, \"86401\")\n+AVR_MCU (\"avr25\",                ARCH_AVR25, NULL,                       0, 0, 0x0060, \"tn85\")\n+AVR_MCU (\"ata6289\",              ARCH_AVR25, \"__AVR_ATA6289__\",          0, 0, 0x0100, \"a6289\")\n+AVR_MCU (\"attiny13\",             ARCH_AVR25, \"__AVR_ATtiny13__\",         1, 0, 0x0060, \"tn13\")\n+AVR_MCU (\"attiny13a\",            ARCH_AVR25, \"__AVR_ATtiny13A__\",        1, 0, 0x0060, \"tn13a\")\n+AVR_MCU (\"attiny2313\",           ARCH_AVR25, \"__AVR_ATtiny2313__\",       1, 0, 0x0060, \"tn2313\")\n+AVR_MCU (\"attiny2313a\",          ARCH_AVR25, \"__AVR_ATtiny2313A__\",      1, 0, 0x0060, \"tn2313a\")\n+AVR_MCU (\"attiny24\",             ARCH_AVR25, \"__AVR_ATtiny24__\",         1, 0, 0x0060, \"tn24\")\n+AVR_MCU (\"attiny24a\",            ARCH_AVR25, \"__AVR_ATtiny24A__\",        1, 0, 0x0060, \"tn24a\")\n+AVR_MCU (\"attiny4313\",           ARCH_AVR25, \"__AVR_ATtiny4313__\",       1, 0, 0x0060, \"tn4313\")\n+AVR_MCU (\"attiny44\",             ARCH_AVR25, \"__AVR_ATtiny44__\",         0, 0, 0x0060, \"tn44\")\n+AVR_MCU (\"attiny44a\",            ARCH_AVR25, \"__AVR_ATtiny44A__\",        0, 0, 0x0060, \"tn44a\")\n+AVR_MCU (\"attiny84\",             ARCH_AVR25, \"__AVR_ATtiny84__\",         0, 0, 0x0060, \"tn84\")\n+AVR_MCU (\"attiny84a\",            ARCH_AVR25, \"__AVR_ATtiny84A__\",        0, 0, 0x0060, \"tn84\")\n+AVR_MCU (\"attiny25\",             ARCH_AVR25, \"__AVR_ATtiny25__\",         1, 0, 0x0060, \"tn25\")\n+AVR_MCU (\"attiny45\",             ARCH_AVR25, \"__AVR_ATtiny45__\",         0, 0, 0x0060, \"tn45\")\n+AVR_MCU (\"attiny85\",             ARCH_AVR25, \"__AVR_ATtiny85__\",         0, 0, 0x0060, \"tn85\")\n+AVR_MCU (\"attiny261\",            ARCH_AVR25, \"__AVR_ATtiny261__\",        1, 0, 0x0060, \"tn261\")\n+AVR_MCU (\"attiny261a\",           ARCH_AVR25, \"__AVR_ATtiny261A__\",       1, 0, 0x0060, \"tn261a\")\n+AVR_MCU (\"attiny461\",            ARCH_AVR25, \"__AVR_ATtiny461__\",        0, 0, 0x0060, \"tn461\")\n+AVR_MCU (\"attiny461a\",           ARCH_AVR25, \"__AVR_ATtiny461A__\",       0, 0, 0x0060, \"tn461a\")\n+AVR_MCU (\"attiny861\",            ARCH_AVR25, \"__AVR_ATtiny861__\",        0, 0, 0x0060, \"tn861\")\n+AVR_MCU (\"attiny861a\",           ARCH_AVR25, \"__AVR_ATtiny861A__\",       0, 0, 0x0060, \"tn861a\")\n+AVR_MCU (\"attiny43u\",            ARCH_AVR25, \"__AVR_ATtiny43U__\",        0, 0, 0x0060, \"tn43u\")\n+AVR_MCU (\"attiny87\",             ARCH_AVR25, \"__AVR_ATtiny87__\",         0, 0, 0x0100, \"tn87\")\n+AVR_MCU (\"attiny48\",             ARCH_AVR25, \"__AVR_ATtiny48__\",         0, 0, 0x0100, \"tn48\")\n+AVR_MCU (\"attiny88\",             ARCH_AVR25, \"__AVR_ATtiny88__\",         0, 0, 0x0100, \"tn88\")\n+AVR_MCU (\"at86rf401\",            ARCH_AVR25, \"__AVR_AT86RF401__\",        1, 0, 0x0060, \"86401\")\n /* Classic, > 8K, <= 64K.  */\n-AVR_MCU (\"avr3\",                 ARCH_AVR3, NULL,                        0, 0x0060, \"43355\")\n-AVR_MCU (\"at43usb355\",           ARCH_AVR3, \"__AVR_AT43USB355__\",        0, 0x0060, \"43355\")\n-AVR_MCU (\"at76c711\",             ARCH_AVR3, \"__AVR_AT76C711__\",          0, 0x0060, \"76711\")\n+AVR_MCU (\"avr3\",                 ARCH_AVR3, NULL,                        0, 0, 0x0060, \"43355\")\n+AVR_MCU (\"at43usb355\",           ARCH_AVR3, \"__AVR_AT43USB355__\",        0, 0, 0x0060, \"43355\")\n+AVR_MCU (\"at76c711\",             ARCH_AVR3, \"__AVR_AT76C711__\",          0, 0, 0x0060, \"76711\")\n /* Classic, == 128K.  */\n-AVR_MCU (\"avr31\",                ARCH_AVR31, NULL,                       0, 0x0060, \"m103\")\n-AVR_MCU (\"atmega103\",            ARCH_AVR31, \"__AVR_ATmega103__\",        0, 0x0060, \"m103\")\n-AVR_MCU (\"at43usb320\",           ARCH_AVR31, \"__AVR_AT43USB320__\",       0, 0x0060, \"43320\")\n+AVR_MCU (\"avr31\",                ARCH_AVR31, NULL,                       0, 1, 0x0060, \"m103\")\n+AVR_MCU (\"atmega103\",            ARCH_AVR31, \"__AVR_ATmega103__\",        0, 1, 0x0060, \"m103\")\n+AVR_MCU (\"at43usb320\",           ARCH_AVR31, \"__AVR_AT43USB320__\",       0, 0, 0x0060, \"43320\")\n /* Classic + MOVW + JMP/CALL.  */\n-AVR_MCU (\"avr35\",                ARCH_AVR35, NULL,                       0, 0x0100, \"usb162\")\n-AVR_MCU (\"at90usb82\",            ARCH_AVR35, \"__AVR_AT90USB82__\",        0, 0x0100, \"usb82\")\n-AVR_MCU (\"at90usb162\",           ARCH_AVR35, \"__AVR_AT90USB162__\",       0, 0x0100, \"usb162\")\n-AVR_MCU (\"atmega8u2\",            ARCH_AVR35, \"__AVR_ATmega8U2__\",        0, 0x0100, \"m8u2\")\n-AVR_MCU (\"atmega16u2\",           ARCH_AVR35, \"__AVR_ATmega16U2__\",       0, 0x0100, \"m16u2\")\n-AVR_MCU (\"atmega32u2\",           ARCH_AVR35, \"__AVR_ATmega32U2__\",       0, 0x0100, \"m32u2\")\n-AVR_MCU (\"attiny167\",            ARCH_AVR35, \"__AVR_ATtiny167__\",        0, 0x0100, \"tn167\")\n+AVR_MCU (\"avr35\",                ARCH_AVR35, NULL,                       0, 0, 0x0100, \"usb162\")\n+AVR_MCU (\"at90usb82\",            ARCH_AVR35, \"__AVR_AT90USB82__\",        0, 0, 0x0100, \"usb82\")\n+AVR_MCU (\"at90usb162\",           ARCH_AVR35, \"__AVR_AT90USB162__\",       0, 0, 0x0100, \"usb162\")\n+AVR_MCU (\"atmega8u2\",            ARCH_AVR35, \"__AVR_ATmega8U2__\",        0, 0, 0x0100, \"m8u2\")\n+AVR_MCU (\"atmega16u2\",           ARCH_AVR35, \"__AVR_ATmega16U2__\",       0, 0, 0x0100, \"m16u2\")\n+AVR_MCU (\"atmega32u2\",           ARCH_AVR35, \"__AVR_ATmega32U2__\",       0, 0, 0x0100, \"m32u2\")\n+AVR_MCU (\"attiny167\",            ARCH_AVR35, \"__AVR_ATtiny167__\",        0, 0, 0x0100, \"tn167\")\n /* Enhanced, <= 8K.  */\n-AVR_MCU (\"avr4\",                 ARCH_AVR4, NULL,                        0, 0x0060, \"m8\")\n-AVR_MCU (\"atmega8\",              ARCH_AVR4, \"__AVR_ATmega8__\",           0, 0x0060, \"m8\")\n-AVR_MCU (\"atmega48\",             ARCH_AVR4, \"__AVR_ATmega48__\",          0, 0x0100, \"m48\")\n-AVR_MCU (\"atmega48a\",            ARCH_AVR4, \"__AVR_ATmega48A__\",         0, 0x0100, \"m48a\")\n-AVR_MCU (\"atmega48p\",            ARCH_AVR4, \"__AVR_ATmega48P__\",         0, 0x0100, \"m48p\")\n-AVR_MCU (\"atmega88\",             ARCH_AVR4, \"__AVR_ATmega88__\",          0, 0x0100, \"m88\")\n-AVR_MCU (\"atmega88a\",            ARCH_AVR4, \"__AVR_ATmega88A__\",         0, 0x0100, \"m88a\")\n-AVR_MCU (\"atmega88p\",            ARCH_AVR4, \"__AVR_ATmega88P__\",         0, 0x0100, \"m88p\")\n-AVR_MCU (\"atmega88pa\",           ARCH_AVR4, \"__AVR_ATmega88PA__\",        0, 0x0100, \"m88pa\")\n-AVR_MCU (\"atmega8515\",           ARCH_AVR4, \"__AVR_ATmega8515__\",        0, 0x0060, \"m8515\")\n-AVR_MCU (\"atmega8535\",           ARCH_AVR4, \"__AVR_ATmega8535__\",        0, 0x0060, \"m8535\")\n-AVR_MCU (\"atmega8hva\",           ARCH_AVR4, \"__AVR_ATmega8HVA__\",        0, 0x0100, \"m8hva\")\n-AVR_MCU (\"at90pwm1\",             ARCH_AVR4, \"__AVR_AT90PWM1__\",          0, 0x0100, \"90pwm1\")\n-AVR_MCU (\"at90pwm2\",             ARCH_AVR4, \"__AVR_AT90PWM2__\",          0, 0x0100, \"90pwm2\")\n-AVR_MCU (\"at90pwm2b\",            ARCH_AVR4, \"__AVR_AT90PWM2B__\",         0, 0x0100, \"90pwm2b\")\n-AVR_MCU (\"at90pwm3\",             ARCH_AVR4, \"__AVR_AT90PWM3__\",          0, 0x0100, \"90pwm3\")\n-AVR_MCU (\"at90pwm3b\",            ARCH_AVR4, \"__AVR_AT90PWM3B__\",         0, 0x0100, \"90pwm3b\")\n-AVR_MCU (\"at90pwm81\",            ARCH_AVR4, \"__AVR_AT90PWM81__\",         0, 0x0100, \"90pwm81\")\n+AVR_MCU (\"avr4\",                 ARCH_AVR4, NULL,                        0, 0, 0x0060, \"m8\")\n+AVR_MCU (\"atmega8\",              ARCH_AVR4, \"__AVR_ATmega8__\",           0, 0, 0x0060, \"m8\")\n+AVR_MCU (\"atmega48\",             ARCH_AVR4, \"__AVR_ATmega48__\",          0, 0, 0x0100, \"m48\")\n+AVR_MCU (\"atmega48a\",            ARCH_AVR4, \"__AVR_ATmega48A__\",         0, 0, 0x0100, \"m48a\")\n+AVR_MCU (\"atmega48p\",            ARCH_AVR4, \"__AVR_ATmega48P__\",         0, 0, 0x0100, \"m48p\")\n+AVR_MCU (\"atmega88\",             ARCH_AVR4, \"__AVR_ATmega88__\",          0, 0, 0x0100, \"m88\")\n+AVR_MCU (\"atmega88a\",            ARCH_AVR4, \"__AVR_ATmega88A__\",         0, 0, 0x0100, \"m88a\")\n+AVR_MCU (\"atmega88p\",            ARCH_AVR4, \"__AVR_ATmega88P__\",         0, 0, 0x0100, \"m88p\")\n+AVR_MCU (\"atmega88pa\",           ARCH_AVR4, \"__AVR_ATmega88PA__\",        0, 0, 0x0100, \"m88pa\")\n+AVR_MCU (\"atmega8515\",           ARCH_AVR4, \"__AVR_ATmega8515__\",        0, 0, 0x0060, \"m8515\")\n+AVR_MCU (\"atmega8535\",           ARCH_AVR4, \"__AVR_ATmega8535__\",        0, 0, 0x0060, \"m8535\")\n+AVR_MCU (\"atmega8hva\",           ARCH_AVR4, \"__AVR_ATmega8HVA__\",        0, 0, 0x0100, \"m8hva\")\n+AVR_MCU (\"at90pwm1\",             ARCH_AVR4, \"__AVR_AT90PWM1__\",          0, 0, 0x0100, \"90pwm1\")\n+AVR_MCU (\"at90pwm2\",             ARCH_AVR4, \"__AVR_AT90PWM2__\",          0, 0, 0x0100, \"90pwm2\")\n+AVR_MCU (\"at90pwm2b\",            ARCH_AVR4, \"__AVR_AT90PWM2B__\",         0, 0, 0x0100, \"90pwm2b\")\n+AVR_MCU (\"at90pwm3\",             ARCH_AVR4, \"__AVR_AT90PWM3__\",          0, 0, 0x0100, \"90pwm3\")\n+AVR_MCU (\"at90pwm3b\",            ARCH_AVR4, \"__AVR_AT90PWM3B__\",         0, 0, 0x0100, \"90pwm3b\")\n+AVR_MCU (\"at90pwm81\",            ARCH_AVR4, \"__AVR_AT90PWM81__\",         0, 0, 0x0100, \"90pwm81\")\n /* Enhanced, > 8K, <= 64K.  */\n-AVR_MCU (\"avr5\",                 ARCH_AVR5, NULL,                        0, 0x0060, \"m16\")\n-AVR_MCU (\"atmega16\",             ARCH_AVR5, \"__AVR_ATmega16__\",          0, 0x0060, \"m16\")\n-AVR_MCU (\"atmega16a\",            ARCH_AVR5, \"__AVR_ATmega16A__\",         0, 0x0060, \"m16a\")\n-AVR_MCU (\"atmega161\",            ARCH_AVR5, \"__AVR_ATmega161__\",         0, 0x0060, \"m161\")\n-AVR_MCU (\"atmega162\",            ARCH_AVR5, \"__AVR_ATmega162__\",         0, 0x0100, \"m162\")\n-AVR_MCU (\"atmega163\",            ARCH_AVR5, \"__AVR_ATmega163__\",         0, 0x0060, \"m163\")\n-AVR_MCU (\"atmega164a\",           ARCH_AVR5, \"__AVR_ATmega164A__\",        0, 0x0060, \"m164a\")\n-AVR_MCU (\"atmega164p\",           ARCH_AVR5, \"__AVR_ATmega164P__\",        0, 0x0100, \"m164p\")\n-AVR_MCU (\"atmega165\",            ARCH_AVR5, \"__AVR_ATmega165__\",         0, 0x0100, \"m165\")\n-AVR_MCU (\"atmega165a\",           ARCH_AVR5, \"__AVR_ATmega165A__\",        0, 0x0100, \"m165a\")\n-AVR_MCU (\"atmega165p\",           ARCH_AVR5, \"__AVR_ATmega165P__\",        0, 0x0100, \"m165p\")\n-AVR_MCU (\"atmega168\",            ARCH_AVR5, \"__AVR_ATmega168__\",         0, 0x0100, \"m168\")\n-AVR_MCU (\"atmega168a\",           ARCH_AVR5, \"__AVR_ATmega168A__\",        0, 0x0100, \"m168a\")\n-AVR_MCU (\"atmega168p\",           ARCH_AVR5, \"__AVR_ATmega168P__\",        0, 0x0100, \"m168p\")\n-AVR_MCU (\"atmega169\",            ARCH_AVR5, \"__AVR_ATmega169__\",         0, 0x0100, \"m169\")\n-AVR_MCU (\"atmega169a\",           ARCH_AVR5, \"__AVR_ATmega169A__\",        0, 0x0100, \"m169a\")\n-AVR_MCU (\"atmega169p\",           ARCH_AVR5, \"__AVR_ATmega169P__\",        0, 0x0100, \"m169p\")\n-AVR_MCU (\"atmega169pa\",          ARCH_AVR5, \"__AVR_ATmega169PA__\",       0, 0x0100, \"m169pa\")\n-AVR_MCU (\"atmega32\",             ARCH_AVR5, \"__AVR_ATmega32__\",          0, 0x0060, \"m32\")\n-AVR_MCU (\"atmega323\",            ARCH_AVR5, \"__AVR_ATmega323__\",         0, 0x0060, \"m323\")\n-AVR_MCU (\"atmega324a\",           ARCH_AVR5, \"__AVR_ATmega324A__\",        0, 0x0100, \"m324a\")\n-AVR_MCU (\"atmega324p\",           ARCH_AVR5, \"__AVR_ATmega324P__\",        0, 0x0100, \"m324p\")\n-AVR_MCU (\"atmega324pa\",          ARCH_AVR5, \"__AVR_ATmega324PA__\",       0, 0x0100, \"m324pa\")\n-AVR_MCU (\"atmega325\",            ARCH_AVR5, \"__AVR_ATmega325__\",         0, 0x0100, \"m325\")\n-AVR_MCU (\"atmega325a\",           ARCH_AVR5, \"__AVR_ATmega325A__\",        0, 0x0100, \"m325a\")\n-AVR_MCU (\"atmega325p\",           ARCH_AVR5, \"__AVR_ATmega325P__\",        0, 0x0100, \"m325p\")\n-AVR_MCU (\"atmega3250\",           ARCH_AVR5, \"__AVR_ATmega3250__\",        0, 0x0100, \"m3250\")\n-AVR_MCU (\"atmega3250a\",          ARCH_AVR5, \"__AVR_ATmega3250A__\",       0, 0x0100, \"m3250a\")\n-AVR_MCU (\"atmega3250p\",          ARCH_AVR5, \"__AVR_ATmega3250P__\",       0, 0x0100, \"m3250p\")\n-AVR_MCU (\"atmega328\",            ARCH_AVR5, \"__AVR_ATmega328__\",         0, 0x0100, \"m328\")\n-AVR_MCU (\"atmega328p\",           ARCH_AVR5, \"__AVR_ATmega328P__\",        0, 0x0100, \"m328p\")\n-AVR_MCU (\"atmega329\",            ARCH_AVR5, \"__AVR_ATmega329__\",         0, 0x0100, \"m329\")\n-AVR_MCU (\"atmega329a\",           ARCH_AVR5, \"__AVR_ATmega329A__\",        0, 0x0100, \"m329a\")\n-AVR_MCU (\"atmega329p\",           ARCH_AVR5, \"__AVR_ATmega329P__\",        0, 0x0100, \"m329p\")\n-AVR_MCU (\"atmega329pa\",          ARCH_AVR5, \"__AVR_ATmega329PA__\",       0, 0x0100, \"m329pa\")\n-AVR_MCU (\"atmega3290\",           ARCH_AVR5, \"__AVR_ATmega3290__\",        0, 0x0100, \"m3290\")\n-AVR_MCU (\"atmega3290a\",          ARCH_AVR5, \"__AVR_ATmega3290A__\",       0, 0x0100, \"m3290a\")\n-AVR_MCU (\"atmega3290p\",          ARCH_AVR5, \"__AVR_ATmega3290P__\",       0, 0x0100, \"m3290p\")\n-AVR_MCU (\"atmega406\",            ARCH_AVR5, \"__AVR_ATmega406__\",         0, 0x0100, \"m406\")\n-AVR_MCU (\"atmega64\",             ARCH_AVR5, \"__AVR_ATmega64__\",          0, 0x0100, \"m64\")\n-AVR_MCU (\"atmega640\",            ARCH_AVR5, \"__AVR_ATmega640__\",         0, 0x0200, \"m640\")\n-AVR_MCU (\"atmega644\",            ARCH_AVR5, \"__AVR_ATmega644__\",         0, 0x0100, \"m644\")\n-AVR_MCU (\"atmega644a\",           ARCH_AVR5, \"__AVR_ATmega644A__\",        0, 0x0100, \"m644a\")\n-AVR_MCU (\"atmega644p\",           ARCH_AVR5, \"__AVR_ATmega644P__\",        0, 0x0100, \"m644p\")\n-AVR_MCU (\"atmega644pa\",          ARCH_AVR5, \"__AVR_ATmega644PA__\",       0, 0x0100, \"m644pa\")\n-AVR_MCU (\"atmega645\",            ARCH_AVR5, \"__AVR_ATmega645__\",         0, 0x0100, \"m645\")\n-AVR_MCU (\"atmega645a\",           ARCH_AVR5, \"__AVR_ATmega645A__\",        0, 0x0100, \"m645a\")\n-AVR_MCU (\"atmega645p\",           ARCH_AVR5, \"__AVR_ATmega645P__\",        0, 0x0100, \"m645p\")\n-AVR_MCU (\"atmega6450\",           ARCH_AVR5, \"__AVR_ATmega6450__\",        0, 0x0100, \"m6450\")\n-AVR_MCU (\"atmega6450a\",          ARCH_AVR5, \"__AVR_ATmega6450A__\",       0, 0x0100, \"m6450a\")\n-AVR_MCU (\"atmega6450p\",          ARCH_AVR5, \"__AVR_ATmega6450P__\",       0, 0x0100, \"m6450p\")\n-AVR_MCU (\"atmega649\",            ARCH_AVR5, \"__AVR_ATmega649__\",         0, 0x0100, \"m649\")\n-AVR_MCU (\"atmega649a\",           ARCH_AVR5, \"__AVR_ATmega649A__\",        0, 0x0100, \"m649a\")\n-AVR_MCU (\"atmega649p\",           ARCH_AVR5, \"__AVR_ATmega649P__\",        0, 0x0100, \"m649p\")\n-AVR_MCU (\"atmega6490\",           ARCH_AVR5, \"__AVR_ATmega6490__\",        0, 0x0100, \"m6490\")\n-AVR_MCU (\"atmega16hva\",          ARCH_AVR5, \"__AVR_ATmega16HVA__\",       0, 0x0100, \"m16hva\")\n-AVR_MCU (\"atmega16hva2\",         ARCH_AVR5, \"__AVR_ATmega16HVA2__\",      0, 0x0100, \"m16hva2\")\n-AVR_MCU (\"atmega16hvb\",          ARCH_AVR5, \"__AVR_ATmega16HVB__\",       0, 0x0100, \"m16hvb\")\n-AVR_MCU (\"atmega32hvb\",          ARCH_AVR5, \"__AVR_ATmega32HVB__\",       0, 0x0100, \"m32hvb\")\n-AVR_MCU (\"atmega64hve\",          ARCH_AVR5, \"__AVR_ATmega64HVE__\",       0, 0x0100, \"m64hve\")\n-AVR_MCU (\"at90can32\",            ARCH_AVR5, \"__AVR_AT90CAN32__\",         0, 0x0100, \"can32\")\n-AVR_MCU (\"at90can64\",            ARCH_AVR5, \"__AVR_AT90CAN64__\",         0, 0x0100, \"can64\")\n-AVR_MCU (\"at90pwm216\",           ARCH_AVR5, \"__AVR_AT90PWM216__\",        0, 0x0100, \"90pwm216\")\n-AVR_MCU (\"at90pwm316\",           ARCH_AVR5, \"__AVR_AT90PWM316__\",        0, 0x0100, \"90pwm316\")\n-AVR_MCU (\"atmega32c1\",           ARCH_AVR5, \"__AVR_ATmega32C1__\",        0, 0x0100, \"m32c1\")\n-AVR_MCU (\"atmega64c1\",           ARCH_AVR5, \"__AVR_ATmega64C1__\",        0, 0x0100, \"m64c1\")\n-AVR_MCU (\"atmega16m1\",           ARCH_AVR5, \"__AVR_ATmega16M1__\",        0, 0x0100, \"m16m1\")\n-AVR_MCU (\"atmega32m1\",           ARCH_AVR5, \"__AVR_ATmega32M1__\",        0, 0x0100, \"m32m1\")\n-AVR_MCU (\"atmega64m1\",           ARCH_AVR5, \"__AVR_ATmega64M1__\",        0, 0x0100, \"m64m1\")\n-AVR_MCU (\"atmega16u4\",           ARCH_AVR5, \"__AVR_ATmega16U4__\",        0, 0x0100, \"m16u4\")\n-AVR_MCU (\"atmega32u4\",           ARCH_AVR5, \"__AVR_ATmega32U4__\",        0, 0x0100, \"m32u4\")\n-AVR_MCU (\"atmega32u6\",           ARCH_AVR5, \"__AVR_ATmega32U6__\",        0, 0x0100, \"m32u6\")\n-AVR_MCU (\"at90scr100\",           ARCH_AVR5, \"__AVR_AT90SCR100__\",        0, 0x0100, \"90scr100\")\n-AVR_MCU (\"at90usb646\",           ARCH_AVR5, \"__AVR_AT90USB646__\",        0, 0x0100, \"usb646\")\n-AVR_MCU (\"at90usb647\",           ARCH_AVR5, \"__AVR_AT90USB647__\",        0, 0x0100, \"usb647\")\n-AVR_MCU (\"at94k\",                ARCH_AVR5, \"__AVR_AT94K__\",             0, 0x0060, \"at94k\")\n-AVR_MCU (\"m3000\",                ARCH_AVR5, \"__AVR_M3000__\",             0, 0x1000, \"m3000\")\n+AVR_MCU (\"avr5\",                 ARCH_AVR5, NULL,                        0, 0, 0x0060, \"m16\")\n+AVR_MCU (\"atmega16\",             ARCH_AVR5, \"__AVR_ATmega16__\",          0, 0, 0x0060, \"m16\")\n+AVR_MCU (\"atmega16a\",            ARCH_AVR5, \"__AVR_ATmega16A__\",         0, 0, 0x0060, \"m16a\")\n+AVR_MCU (\"atmega161\",            ARCH_AVR5, \"__AVR_ATmega161__\",         0, 0, 0x0060, \"m161\")\n+AVR_MCU (\"atmega162\",            ARCH_AVR5, \"__AVR_ATmega162__\",         0, 0, 0x0100, \"m162\")\n+AVR_MCU (\"atmega163\",            ARCH_AVR5, \"__AVR_ATmega163__\",         0, 0, 0x0060, \"m163\")\n+AVR_MCU (\"atmega164a\",           ARCH_AVR5, \"__AVR_ATmega164A__\",        0, 0, 0x0060, \"m164a\")\n+AVR_MCU (\"atmega164p\",           ARCH_AVR5, \"__AVR_ATmega164P__\",        0, 0, 0x0100, \"m164p\")\n+AVR_MCU (\"atmega165\",            ARCH_AVR5, \"__AVR_ATmega165__\",         0, 0, 0x0100, \"m165\")\n+AVR_MCU (\"atmega165a\",           ARCH_AVR5, \"__AVR_ATmega165A__\",        0, 0, 0x0100, \"m165a\")\n+AVR_MCU (\"atmega165p\",           ARCH_AVR5, \"__AVR_ATmega165P__\",        0, 0, 0x0100, \"m165p\")\n+AVR_MCU (\"atmega168\",            ARCH_AVR5, \"__AVR_ATmega168__\",         0, 0, 0x0100, \"m168\")\n+AVR_MCU (\"atmega168a\",           ARCH_AVR5, \"__AVR_ATmega168A__\",        0, 0, 0x0100, \"m168a\")\n+AVR_MCU (\"atmega168p\",           ARCH_AVR5, \"__AVR_ATmega168P__\",        0, 0, 0x0100, \"m168p\")\n+AVR_MCU (\"atmega169\",            ARCH_AVR5, \"__AVR_ATmega169__\",         0, 0, 0x0100, \"m169\")\n+AVR_MCU (\"atmega169a\",           ARCH_AVR5, \"__AVR_ATmega169A__\",        0, 0, 0x0100, \"m169a\")\n+AVR_MCU (\"atmega169p\",           ARCH_AVR5, \"__AVR_ATmega169P__\",        0, 0, 0x0100, \"m169p\")\n+AVR_MCU (\"atmega169pa\",          ARCH_AVR5, \"__AVR_ATmega169PA__\",       0, 0, 0x0100, \"m169pa\")\n+AVR_MCU (\"atmega32\",             ARCH_AVR5, \"__AVR_ATmega32__\",          0, 0, 0x0060, \"m32\")\n+AVR_MCU (\"atmega323\",            ARCH_AVR5, \"__AVR_ATmega323__\",         0, 0, 0x0060, \"m323\")\n+AVR_MCU (\"atmega324a\",           ARCH_AVR5, \"__AVR_ATmega324A__\",        0, 0, 0x0100, \"m324a\")\n+AVR_MCU (\"atmega324p\",           ARCH_AVR5, \"__AVR_ATmega324P__\",        0, 0, 0x0100, \"m324p\")\n+AVR_MCU (\"atmega324pa\",          ARCH_AVR5, \"__AVR_ATmega324PA__\",       0, 0, 0x0100, \"m324pa\")\n+AVR_MCU (\"atmega325\",            ARCH_AVR5, \"__AVR_ATmega325__\",         0, 0, 0x0100, \"m325\")\n+AVR_MCU (\"atmega325a\",           ARCH_AVR5, \"__AVR_ATmega325A__\",        0, 0, 0x0100, \"m325a\")\n+AVR_MCU (\"atmega325p\",           ARCH_AVR5, \"__AVR_ATmega325P__\",        0, 0, 0x0100, \"m325p\")\n+AVR_MCU (\"atmega3250\",           ARCH_AVR5, \"__AVR_ATmega3250__\",        0, 0, 0x0100, \"m3250\")\n+AVR_MCU (\"atmega3250a\",          ARCH_AVR5, \"__AVR_ATmega3250A__\",       0, 0, 0x0100, \"m3250a\")\n+AVR_MCU (\"atmega3250p\",          ARCH_AVR5, \"__AVR_ATmega3250P__\",       0, 0, 0x0100, \"m3250p\")\n+AVR_MCU (\"atmega328\",            ARCH_AVR5, \"__AVR_ATmega328__\",         0, 0, 0x0100, \"m328\")\n+AVR_MCU (\"atmega328p\",           ARCH_AVR5, \"__AVR_ATmega328P__\",        0, 0, 0x0100, \"m328p\")\n+AVR_MCU (\"atmega329\",            ARCH_AVR5, \"__AVR_ATmega329__\",         0, 0, 0x0100, \"m329\")\n+AVR_MCU (\"atmega329a\",           ARCH_AVR5, \"__AVR_ATmega329A__\",        0, 0, 0x0100, \"m329a\")\n+AVR_MCU (\"atmega329p\",           ARCH_AVR5, \"__AVR_ATmega329P__\",        0, 0, 0x0100, \"m329p\")\n+AVR_MCU (\"atmega329pa\",          ARCH_AVR5, \"__AVR_ATmega329PA__\",       0, 0, 0x0100, \"m329pa\")\n+AVR_MCU (\"atmega3290\",           ARCH_AVR5, \"__AVR_ATmega3290__\",        0, 0, 0x0100, \"m3290\")\n+AVR_MCU (\"atmega3290a\",          ARCH_AVR5, \"__AVR_ATmega3290A__\",       0, 0, 0x0100, \"m3290a\")\n+AVR_MCU (\"atmega3290p\",          ARCH_AVR5, \"__AVR_ATmega3290P__\",       0, 0, 0x0100, \"m3290p\")\n+AVR_MCU (\"atmega406\",            ARCH_AVR5, \"__AVR_ATmega406__\",         0, 0, 0x0100, \"m406\")\n+AVR_MCU (\"atmega64\",             ARCH_AVR5, \"__AVR_ATmega64__\",          0, 0, 0x0100, \"m64\")\n+AVR_MCU (\"atmega640\",            ARCH_AVR5, \"__AVR_ATmega640__\",         0, 0, 0x0200, \"m640\")\n+AVR_MCU (\"atmega644\",            ARCH_AVR5, \"__AVR_ATmega644__\",         0, 0, 0x0100, \"m644\")\n+AVR_MCU (\"atmega644a\",           ARCH_AVR5, \"__AVR_ATmega644A__\",        0, 0, 0x0100, \"m644a\")\n+AVR_MCU (\"atmega644p\",           ARCH_AVR5, \"__AVR_ATmega644P__\",        0, 0, 0x0100, \"m644p\")\n+AVR_MCU (\"atmega644pa\",          ARCH_AVR5, \"__AVR_ATmega644PA__\",       0, 0, 0x0100, \"m644pa\")\n+AVR_MCU (\"atmega645\",            ARCH_AVR5, \"__AVR_ATmega645__\",         0, 0, 0x0100, \"m645\")\n+AVR_MCU (\"atmega645a\",           ARCH_AVR5, \"__AVR_ATmega645A__\",        0, 0, 0x0100, \"m645a\")\n+AVR_MCU (\"atmega645p\",           ARCH_AVR5, \"__AVR_ATmega645P__\",        0, 0, 0x0100, \"m645p\")\n+AVR_MCU (\"atmega6450\",           ARCH_AVR5, \"__AVR_ATmega6450__\",        0, 0, 0x0100, \"m6450\")\n+AVR_MCU (\"atmega6450a\",          ARCH_AVR5, \"__AVR_ATmega6450A__\",       0, 0, 0x0100, \"m6450a\")\n+AVR_MCU (\"atmega6450p\",          ARCH_AVR5, \"__AVR_ATmega6450P__\",       0, 0, 0x0100, \"m6450p\")\n+AVR_MCU (\"atmega649\",            ARCH_AVR5, \"__AVR_ATmega649__\",         0, 0, 0x0100, \"m649\")\n+AVR_MCU (\"atmega649a\",           ARCH_AVR5, \"__AVR_ATmega649A__\",        0, 0, 0x0100, \"m649a\")\n+AVR_MCU (\"atmega649p\",           ARCH_AVR5, \"__AVR_ATmega649P__\",        0, 0, 0x0100, \"m649p\")\n+AVR_MCU (\"atmega6490\",           ARCH_AVR5, \"__AVR_ATmega6490__\",        0, 0, 0x0100, \"m6490\")\n+AVR_MCU (\"atmega16hva\",          ARCH_AVR5, \"__AVR_ATmega16HVA__\",       0, 0, 0x0100, \"m16hva\")\n+AVR_MCU (\"atmega16hva2\",         ARCH_AVR5, \"__AVR_ATmega16HVA2__\",      0, 0, 0x0100, \"m16hva2\")\n+AVR_MCU (\"atmega16hvb\",          ARCH_AVR5, \"__AVR_ATmega16HVB__\",       0, 0, 0x0100, \"m16hvb\")\n+AVR_MCU (\"atmega32hvb\",          ARCH_AVR5, \"__AVR_ATmega32HVB__\",       0, 0, 0x0100, \"m32hvb\")\n+AVR_MCU (\"atmega64hve\",          ARCH_AVR5, \"__AVR_ATmega64HVE__\",       0, 0, 0x0100, \"m64hve\")\n+AVR_MCU (\"at90can32\",            ARCH_AVR5, \"__AVR_AT90CAN32__\",         0, 0, 0x0100, \"can32\")\n+AVR_MCU (\"at90can64\",            ARCH_AVR5, \"__AVR_AT90CAN64__\",         0, 0, 0x0100, \"can64\")\n+AVR_MCU (\"at90pwm216\",           ARCH_AVR5, \"__AVR_AT90PWM216__\",        0, 0, 0x0100, \"90pwm216\")\n+AVR_MCU (\"at90pwm316\",           ARCH_AVR5, \"__AVR_AT90PWM316__\",        0, 0, 0x0100, \"90pwm316\")\n+AVR_MCU (\"atmega32c1\",           ARCH_AVR5, \"__AVR_ATmega32C1__\",        0, 0, 0x0100, \"m32c1\")\n+AVR_MCU (\"atmega64c1\",           ARCH_AVR5, \"__AVR_ATmega64C1__\",        0, 0, 0x0100, \"m64c1\")\n+AVR_MCU (\"atmega16m1\",           ARCH_AVR5, \"__AVR_ATmega16M1__\",        0, 0, 0x0100, \"m16m1\")\n+AVR_MCU (\"atmega32m1\",           ARCH_AVR5, \"__AVR_ATmega32M1__\",        0, 0, 0x0100, \"m32m1\")\n+AVR_MCU (\"atmega64m1\",           ARCH_AVR5, \"__AVR_ATmega64M1__\",        0, 0, 0x0100, \"m64m1\")\n+AVR_MCU (\"atmega16u4\",           ARCH_AVR5, \"__AVR_ATmega16U4__\",        0, 0, 0x0100, \"m16u4\")\n+AVR_MCU (\"atmega32u4\",           ARCH_AVR5, \"__AVR_ATmega32U4__\",        0, 0, 0x0100, \"m32u4\")\n+AVR_MCU (\"atmega32u6\",           ARCH_AVR5, \"__AVR_ATmega32U6__\",        0, 0, 0x0100, \"m32u6\")\n+AVR_MCU (\"at90scr100\",           ARCH_AVR5, \"__AVR_AT90SCR100__\",        0, 0, 0x0100, \"90scr100\")\n+AVR_MCU (\"at90usb646\",           ARCH_AVR5, \"__AVR_AT90USB646__\",        0, 0, 0x0100, \"usb646\")\n+AVR_MCU (\"at90usb647\",           ARCH_AVR5, \"__AVR_AT90USB647__\",        0, 0, 0x0100, \"usb647\")\n+AVR_MCU (\"at94k\",                ARCH_AVR5, \"__AVR_AT94K__\",             0, 0, 0x0060, \"at94k\")\n+AVR_MCU (\"m3000\",                ARCH_AVR5, \"__AVR_M3000__\",             0, 0, 0x1000, \"m3000\")\n /* Enhanced, == 128K.  */\n-AVR_MCU (\"avr51\",                ARCH_AVR51, NULL,                       0, 0x0100, \"m128\")\n-AVR_MCU (\"atmega128\",            ARCH_AVR51, \"__AVR_ATmega128__\",        0, 0x0100, \"m128\")\n-AVR_MCU (\"atmega1280\",           ARCH_AVR51, \"__AVR_ATmega1280__\",       0, 0x0200, \"m1280\")\n-AVR_MCU (\"atmega1281\",           ARCH_AVR51, \"__AVR_ATmega1281__\",       0, 0x0200, \"m1281\")\n-AVR_MCU (\"atmega1284p\",          ARCH_AVR51, \"__AVR_ATmega1284P__\",      0, 0x0100, \"m1284p\")\n-AVR_MCU (\"atmega128rfa1\",        ARCH_AVR51, \"__AVR_ATmega128RFA1__\",    0, 0x0200, \"m128rfa1\")\n-AVR_MCU (\"at90can128\",           ARCH_AVR51, \"__AVR_AT90CAN128__\",       0, 0x0100, \"can128\")\n-AVR_MCU (\"at90usb1286\",          ARCH_AVR51, \"__AVR_AT90USB1286__\",      0, 0x0100, \"usb1286\")\n-AVR_MCU (\"at90usb1287\",          ARCH_AVR51, \"__AVR_AT90USB1287__\",      0, 0x0100, \"usb1286\")\n+AVR_MCU (\"avr51\",                ARCH_AVR51, NULL,                       0, 0, 0x0100, \"m128\")\n+AVR_MCU (\"atmega128\",            ARCH_AVR51, \"__AVR_ATmega128__\",        0, 0, 0x0100, \"m128\")\n+AVR_MCU (\"atmega1280\",           ARCH_AVR51, \"__AVR_ATmega1280__\",       0, 0, 0x0200, \"m1280\")\n+AVR_MCU (\"atmega1281\",           ARCH_AVR51, \"__AVR_ATmega1281__\",       0, 0, 0x0200, \"m1281\")\n+AVR_MCU (\"atmega1284p\",          ARCH_AVR51, \"__AVR_ATmega1284P__\",      0, 0, 0x0100, \"m1284p\")\n+AVR_MCU (\"atmega128rfa1\",        ARCH_AVR51, \"__AVR_ATmega128RFA1__\",    0, 0, 0x0200, \"m128rfa1\")\n+AVR_MCU (\"at90can128\",           ARCH_AVR51, \"__AVR_AT90CAN128__\",       0, 0, 0x0100, \"can128\")\n+AVR_MCU (\"at90usb1286\",          ARCH_AVR51, \"__AVR_AT90USB1286__\",      0, 0, 0x0100, \"usb1286\")\n+AVR_MCU (\"at90usb1287\",          ARCH_AVR51, \"__AVR_AT90USB1287__\",      0, 0, 0x0100, \"usb1286\")\n /* 3-Byte PC.  */\n-AVR_MCU (\"avr6\",                 ARCH_AVR6, NULL,                        0, 0x0200, \"m2561\")\n-AVR_MCU (\"atmega2560\",           ARCH_AVR6, \"__AVR_ATmega2560__\",        0, 0x0200, \"m2560\")\n-AVR_MCU (\"atmega2561\",           ARCH_AVR6, \"__AVR_ATmega2561__\",        0, 0x0200, \"m2561\")\n+AVR_MCU (\"avr6\",                 ARCH_AVR6, NULL,                        0, 0, 0x0200, \"m2561\")\n+AVR_MCU (\"atmega2560\",           ARCH_AVR6, \"__AVR_ATmega2560__\",        0, 0, 0x0200, \"m2560\")\n+AVR_MCU (\"atmega2561\",           ARCH_AVR6, \"__AVR_ATmega2561__\",        0, 0, 0x0200, \"m2561\")\n /* Assembler only.  */\n-AVR_MCU (\"avr1\",                 ARCH_AVR1, NULL,                        0, 0x0060, \"s1200\")\n-AVR_MCU (\"at90s1200\",            ARCH_AVR1, \"__AVR_AT90S1200__\",         0, 0x0060, \"s1200\")\n-AVR_MCU (\"attiny11\",             ARCH_AVR1, \"__AVR_ATtiny11__\",          0, 0x0060, \"tn11\")\n-AVR_MCU (\"attiny12\",             ARCH_AVR1, \"__AVR_ATtiny12__\",          0, 0x0060, \"tn12\")\n-AVR_MCU (\"attiny15\",             ARCH_AVR1, \"__AVR_ATtiny15__\",          0, 0x0060, \"tn15\")\n-AVR_MCU (\"attiny28\",             ARCH_AVR1, \"__AVR_ATtiny28__\",          0, 0x0060, \"tn28\")\n+AVR_MCU (\"avr1\",                 ARCH_AVR1, NULL,                        0, 0, 0x0060, \"s1200\")\n+AVR_MCU (\"at90s1200\",            ARCH_AVR1, \"__AVR_AT90S1200__\",         0, 0, 0x0060, \"s1200\")\n+AVR_MCU (\"attiny11\",             ARCH_AVR1, \"__AVR_ATtiny11__\",          0, 0, 0x0060, \"tn11\")\n+AVR_MCU (\"attiny12\",             ARCH_AVR1, \"__AVR_ATtiny12__\",          0, 0, 0x0060, \"tn12\")\n+AVR_MCU (\"attiny15\",             ARCH_AVR1, \"__AVR_ATtiny15__\",          0, 0, 0x0060, \"tn15\")\n+AVR_MCU (\"attiny28\",             ARCH_AVR1, \"__AVR_ATtiny28__\",          0, 0, 0x0060, \"tn28\")"}, {"sha": "c03c1f38c7b21b4e7f7f649a8859daa39e397247", "filename": "gcc/config/avr/avr.h", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2c308fa3f227cc7b46aa2d1250043aeeaef7ee6/gcc%2Fconfig%2Favr%2Favr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2c308fa3f227cc7b46aa2d1250043aeeaef7ee6/gcc%2Fconfig%2Favr%2Favr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.h?ref=f2c308fa3f227cc7b46aa2d1250043aeeaef7ee6", "patch": "@@ -91,6 +91,26 @@ struct mcu_type_s {\n   /* Stack pointer have 8 bits width.  */\n   int short_sp;\n   \n+  /* Some AVR devices have a core erratum when skipping a 2-word instruction.\n+     Skip instructions are:  SBRC, SBRS, SBIC, SBIS, CPSE.\n+     Problems will occur with return address is IRQ executes during the\n+     skip sequence.\n+\n+     A support ticket from Atmel returned the following information:\n+\n+         Subject: (ATTicket:644469) On AVR skip-bug core Erratum\n+         From: avr@atmel.com                    Date: 2011-07-27\n+         (Please keep the subject when replying to this mail)\n+\n+         This errata exists only in AT90S8515 and ATmega103 devices.\n+\n+         For information please refer the following respective errata links\n+            http://www.atmel.com/dyn/resources/prod_documents/doc2494.pdf\n+            http://www.atmel.com/dyn/resources/prod_documents/doc1436.pdf  */\n+\n+  /* Core Erratum:  Must not skip 2-word instruction.  */\n+  int errata_skip;\n+  \n   /* Start of data section.  */\n   int data_section_start;\n   "}, {"sha": "7bd21a32be05735da2c436333c4320295888c073", "filename": "gcc/config/avr/libgcc.S", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2c308fa3f227cc7b46aa2d1250043aeeaef7ee6/gcc%2Fconfig%2Favr%2Flibgcc.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2c308fa3f227cc7b46aa2d1250043aeeaef7ee6/gcc%2Fconfig%2Favr%2Flibgcc.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Flibgcc.S?ref=f2c308fa3f227cc7b46aa2d1250043aeeaef7ee6", "patch": "@@ -361,7 +361,7 @@ ENDF __umulhisi3\n ;;; (C3:C0) = (signed long) A1:A0   * B3:B0\n ;;; Clobbers: __tmp_reg__\n DEFUN __mulshisi3\n-#ifdef __AVR_HAVE_JMP_CALL__\n+#ifdef __AVR_ERRATA_SKIP_JMP_CALL__\n     ;; Some cores have problem skipping 2-word instruction\n     tst     A1\n     brmi    __mulohisi3\n@@ -1074,7 +1074,7 @@ ENDF __ffssi2\n ;; clobbers: r26\n DEFUN __ffshi2\n     clr  r26\n-#ifdef __AVR_HAVE_JMP_CALL__\n+#ifdef __AVR_ERRATA_SKIP_JMP_CALL__\n     ;; Some cores have problem skipping 2-word instruction\n     tst  r24\n     breq 2f\n@@ -1480,7 +1480,7 @@ DEFUN __fmulsu_exit\n     ;; A1 = |A1|\n     sbrc A1, 7\n     neg  A1\n-#ifdef __AVR_HAVE_JMP_CALL__\n+#ifdef __AVR_ERRATA_SKIP_JMP_CALL__\n     ;; Some cores have problem skipping 2-word instruction\n     tst  A0\n     brmi 1f"}]}