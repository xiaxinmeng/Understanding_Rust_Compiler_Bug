{"sha": "f3707a55acb980fbcd412ceb980b5621decb4dc0", "node_id": "C_kwDOANBUbNoAKGYzNzA3YTU1YWNiOTgwZmJjZDQxMmNlYjk4MGI1NjIxZGVjYjRkYzA", "commit": {"author": {"name": "Ian Lance Taylor", "email": "iant@golang.org", "date": "2023-01-06T17:39:49Z"}, "committer": {"name": "Ian Lance Taylor", "email": "iant@golang.org", "date": "2023-01-06T17:41:57Z"}, "message": "libbacktrace: don't run --build-id tests if it is not supported\n\n\tPR libbacktrace/108297\n\t* configure.ac: Test whether linker supports --build-id.\n\t* Makefile.am: Only run --build-id tests if supported.\n\t* configure, Makefile.in: Regenerate.", "tree": {"sha": "e6ac1614465f043f651d7eab7ccd6b4de3ee17da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e6ac1614465f043f651d7eab7ccd6b4de3ee17da"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f3707a55acb980fbcd412ceb980b5621decb4dc0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3707a55acb980fbcd412ceb980b5621decb4dc0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f3707a55acb980fbcd412ceb980b5621decb4dc0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3707a55acb980fbcd412ceb980b5621decb4dc0/comments", "author": {"login": "ianlancetaylor", "id": 3194333, "node_id": "MDQ6VXNlcjMxOTQzMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/3194333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ianlancetaylor", "html_url": "https://github.com/ianlancetaylor", "followers_url": "https://api.github.com/users/ianlancetaylor/followers", "following_url": "https://api.github.com/users/ianlancetaylor/following{/other_user}", "gists_url": "https://api.github.com/users/ianlancetaylor/gists{/gist_id}", "starred_url": "https://api.github.com/users/ianlancetaylor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ianlancetaylor/subscriptions", "organizations_url": "https://api.github.com/users/ianlancetaylor/orgs", "repos_url": "https://api.github.com/users/ianlancetaylor/repos", "events_url": "https://api.github.com/users/ianlancetaylor/events{/privacy}", "received_events_url": "https://api.github.com/users/ianlancetaylor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ianlancetaylor", "id": 3194333, "node_id": "MDQ6VXNlcjMxOTQzMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/3194333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ianlancetaylor", "html_url": "https://github.com/ianlancetaylor", "followers_url": "https://api.github.com/users/ianlancetaylor/followers", "following_url": "https://api.github.com/users/ianlancetaylor/following{/other_user}", "gists_url": "https://api.github.com/users/ianlancetaylor/gists{/gist_id}", "starred_url": "https://api.github.com/users/ianlancetaylor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ianlancetaylor/subscriptions", "organizations_url": "https://api.github.com/users/ianlancetaylor/orgs", "repos_url": "https://api.github.com/users/ianlancetaylor/repos", "events_url": "https://api.github.com/users/ianlancetaylor/events{/privacy}", "received_events_url": "https://api.github.com/users/ianlancetaylor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f7bd48c6bbd3d7a479943b248b973aaf6c59463b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7bd48c6bbd3d7a479943b248b973aaf6c59463b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f7bd48c6bbd3d7a479943b248b973aaf6c59463b"}], "stats": {"total": 99, "additions": 78, "deletions": 21}, "files": [{"sha": "1c4ac2baeb65a3bc91862f550fb9b0e05c2d0d62", "filename": "libbacktrace/Makefile.am", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3707a55acb980fbcd412ceb980b5621decb4dc0/libbacktrace%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3707a55acb980fbcd412ceb980b5621decb4dc0/libbacktrace%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2FMakefile.am?ref=f3707a55acb980fbcd412ceb980b5621decb4dc0", "patch": "@@ -248,6 +248,7 @@ check_DATA += allocfail.dSYM\n endif USE_DSYMUTIL\n \n if HAVE_ELF\n+if HAVE_BUILDID\n if HAVE_OBJCOPY_DEBUGLINK\n \n b2test_SOURCES = $(btest_SOURCES)\n@@ -271,6 +272,7 @@ MAKETESTS += b3test_dwz_buildid\n endif HAVE_DWZ\n \n endif HAVE_OBJCOPY_DEBUGLINK\n+endif HAVE_BUILDID\n endif HAVE_ELF\n \n btest_SOURCES = btest.c testlib.c"}, {"sha": "c79fd3bfa6b2683015640f1ce79614aa3decb52d", "filename": "libbacktrace/Makefile.in", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3707a55acb980fbcd412ceb980b5621decb4dc0/libbacktrace%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3707a55acb980fbcd412ceb980b5621decb4dc0/libbacktrace%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2FMakefile.in?ref=f3707a55acb980fbcd412ceb980b5621decb4dc0", "patch": "@@ -133,10 +133,10 @@ TESTS = $(am__append_4) $(MAKETESTS) $(am__EXEEXT_16)\n @NATIVE_TRUE@@USE_DSYMUTIL_TRUE@\tbtest.dSYM btest_alloc.dSYM \\\n @NATIVE_TRUE@@USE_DSYMUTIL_TRUE@\tstest.dSYM stest_alloc.dSYM \\\n @NATIVE_TRUE@@USE_DSYMUTIL_TRUE@\tedtest.dSYM edtest_alloc.dSYM\n-@HAVE_ELF_TRUE@@HAVE_OBJCOPY_DEBUGLINK_TRUE@@NATIVE_TRUE@am__append_6 = b2test\n-@HAVE_ELF_TRUE@@HAVE_OBJCOPY_DEBUGLINK_TRUE@@NATIVE_TRUE@am__append_7 = b2test_buildid\n-@HAVE_DWZ_TRUE@@HAVE_ELF_TRUE@@HAVE_OBJCOPY_DEBUGLINK_TRUE@@NATIVE_TRUE@am__append_8 = b3test\n-@HAVE_DWZ_TRUE@@HAVE_ELF_TRUE@@HAVE_OBJCOPY_DEBUGLINK_TRUE@@NATIVE_TRUE@am__append_9 = b3test_dwz_buildid\n+@HAVE_BUILDID_TRUE@@HAVE_ELF_TRUE@@HAVE_OBJCOPY_DEBUGLINK_TRUE@@NATIVE_TRUE@am__append_6 = b2test\n+@HAVE_BUILDID_TRUE@@HAVE_ELF_TRUE@@HAVE_OBJCOPY_DEBUGLINK_TRUE@@NATIVE_TRUE@am__append_7 = b2test_buildid\n+@HAVE_BUILDID_TRUE@@HAVE_DWZ_TRUE@@HAVE_ELF_TRUE@@HAVE_OBJCOPY_DEBUGLINK_TRUE@@NATIVE_TRUE@am__append_8 = b3test\n+@HAVE_BUILDID_TRUE@@HAVE_DWZ_TRUE@@HAVE_ELF_TRUE@@HAVE_OBJCOPY_DEBUGLINK_TRUE@@NATIVE_TRUE@am__append_9 = b3test_dwz_buildid\n @HAVE_ELF_TRUE@@NATIVE_TRUE@am__append_10 = btest_lto\n @NATIVE_TRUE@am__append_11 = btest_alloc stest stest_alloc\n @HAVE_DWZ_TRUE@@NATIVE_TRUE@am__append_12 = btest_dwz\n@@ -222,8 +222,8 @@ libbacktrace_noformat_la_OBJECTS =  \\\n \t$(am_libbacktrace_noformat_la_OBJECTS)\n @NATIVE_TRUE@am_libbacktrace_noformat_la_rpath =\n @NATIVE_TRUE@am__EXEEXT_1 = allocfail$(EXEEXT)\n-@HAVE_ELF_TRUE@@HAVE_OBJCOPY_DEBUGLINK_TRUE@@NATIVE_TRUE@am__EXEEXT_2 = b2test$(EXEEXT)\n-@HAVE_DWZ_TRUE@@HAVE_ELF_TRUE@@HAVE_OBJCOPY_DEBUGLINK_TRUE@@NATIVE_TRUE@am__EXEEXT_3 = b3test$(EXEEXT)\n+@HAVE_BUILDID_TRUE@@HAVE_ELF_TRUE@@HAVE_OBJCOPY_DEBUGLINK_TRUE@@NATIVE_TRUE@am__EXEEXT_2 = b2test$(EXEEXT)\n+@HAVE_BUILDID_TRUE@@HAVE_DWZ_TRUE@@HAVE_ELF_TRUE@@HAVE_OBJCOPY_DEBUGLINK_TRUE@@NATIVE_TRUE@am__EXEEXT_3 = b3test$(EXEEXT)\n @NATIVE_TRUE@am__EXEEXT_4 = test_elf_32$(EXEEXT) test_elf_64$(EXEEXT) \\\n @NATIVE_TRUE@\ttest_macho$(EXEEXT) test_xcoff_32$(EXEEXT) \\\n @NATIVE_TRUE@\ttest_xcoff_64$(EXEEXT) test_pecoff$(EXEEXT) \\\n@@ -263,17 +263,17 @@ allocfail_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\\n \t$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\n @NATIVE_TRUE@am__objects_2 = b2test-btest.$(OBJEXT) \\\n @NATIVE_TRUE@\tb2test-testlib.$(OBJEXT)\n-@HAVE_ELF_TRUE@@HAVE_OBJCOPY_DEBUGLINK_TRUE@@NATIVE_TRUE@am_b2test_OBJECTS = $(am__objects_2)\n+@HAVE_BUILDID_TRUE@@HAVE_ELF_TRUE@@HAVE_OBJCOPY_DEBUGLINK_TRUE@@NATIVE_TRUE@am_b2test_OBJECTS = $(am__objects_2)\n b2test_OBJECTS = $(am_b2test_OBJECTS)\n-@HAVE_ELF_TRUE@@HAVE_OBJCOPY_DEBUGLINK_TRUE@@NATIVE_TRUE@b2test_DEPENDENCIES = libbacktrace_elf_for_test.la\n+@HAVE_BUILDID_TRUE@@HAVE_ELF_TRUE@@HAVE_OBJCOPY_DEBUGLINK_TRUE@@NATIVE_TRUE@b2test_DEPENDENCIES = libbacktrace_elf_for_test.la\n b2test_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\\n \t$(LIBTOOLFLAGS) --mode=link $(CCLD) $(b2test_CFLAGS) $(CFLAGS) \\\n \t$(b2test_LDFLAGS) $(LDFLAGS) -o $@\n @NATIVE_TRUE@am__objects_3 = b3test-btest.$(OBJEXT) \\\n @NATIVE_TRUE@\tb3test-testlib.$(OBJEXT)\n-@HAVE_DWZ_TRUE@@HAVE_ELF_TRUE@@HAVE_OBJCOPY_DEBUGLINK_TRUE@@NATIVE_TRUE@am_b3test_OBJECTS = $(am__objects_3)\n+@HAVE_BUILDID_TRUE@@HAVE_DWZ_TRUE@@HAVE_ELF_TRUE@@HAVE_OBJCOPY_DEBUGLINK_TRUE@@NATIVE_TRUE@am_b3test_OBJECTS = $(am__objects_3)\n b3test_OBJECTS = $(am_b3test_OBJECTS)\n-@HAVE_DWZ_TRUE@@HAVE_ELF_TRUE@@HAVE_OBJCOPY_DEBUGLINK_TRUE@@NATIVE_TRUE@b3test_DEPENDENCIES = libbacktrace_elf_for_test.la\n+@HAVE_BUILDID_TRUE@@HAVE_DWZ_TRUE@@HAVE_ELF_TRUE@@HAVE_OBJCOPY_DEBUGLINK_TRUE@@NATIVE_TRUE@b3test_DEPENDENCIES = libbacktrace_elf_for_test.la\n b3test_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\\n \t$(LIBTOOLFLAGS) --mode=link $(CCLD) $(b3test_CFLAGS) $(CFLAGS) \\\n \t$(b3test_LDFLAGS) $(LDFLAGS) -o $@\n@@ -1093,14 +1093,14 @@ libbacktrace_TEST_CFLAGS = $(EXTRA_FLAGS) $(WARN_FLAGS) -g\n @NATIVE_TRUE@allocfail_SOURCES = allocfail.c testlib.c\n @NATIVE_TRUE@allocfail_CFLAGS = $(libbacktrace_TEST_CFLAGS)\n @NATIVE_TRUE@allocfail_LDADD = libbacktrace_instrumented_alloc.la\n-@HAVE_ELF_TRUE@@HAVE_OBJCOPY_DEBUGLINK_TRUE@@NATIVE_TRUE@b2test_SOURCES = $(btest_SOURCES)\n-@HAVE_ELF_TRUE@@HAVE_OBJCOPY_DEBUGLINK_TRUE@@NATIVE_TRUE@b2test_CFLAGS = $(libbacktrace_TEST_CFLAGS)\n-@HAVE_ELF_TRUE@@HAVE_OBJCOPY_DEBUGLINK_TRUE@@NATIVE_TRUE@b2test_LDFLAGS = -Wl,--build-id\n-@HAVE_ELF_TRUE@@HAVE_OBJCOPY_DEBUGLINK_TRUE@@NATIVE_TRUE@b2test_LDADD = libbacktrace_elf_for_test.la\n-@HAVE_DWZ_TRUE@@HAVE_ELF_TRUE@@HAVE_OBJCOPY_DEBUGLINK_TRUE@@NATIVE_TRUE@b3test_SOURCES = $(btest_SOURCES)\n-@HAVE_DWZ_TRUE@@HAVE_ELF_TRUE@@HAVE_OBJCOPY_DEBUGLINK_TRUE@@NATIVE_TRUE@b3test_CFLAGS = $(libbacktrace_TEST_CFLAGS)\n-@HAVE_DWZ_TRUE@@HAVE_ELF_TRUE@@HAVE_OBJCOPY_DEBUGLINK_TRUE@@NATIVE_TRUE@b3test_LDFLAGS = -Wl,--build-id\n-@HAVE_DWZ_TRUE@@HAVE_ELF_TRUE@@HAVE_OBJCOPY_DEBUGLINK_TRUE@@NATIVE_TRUE@b3test_LDADD = libbacktrace_elf_for_test.la\n+@HAVE_BUILDID_TRUE@@HAVE_ELF_TRUE@@HAVE_OBJCOPY_DEBUGLINK_TRUE@@NATIVE_TRUE@b2test_SOURCES = $(btest_SOURCES)\n+@HAVE_BUILDID_TRUE@@HAVE_ELF_TRUE@@HAVE_OBJCOPY_DEBUGLINK_TRUE@@NATIVE_TRUE@b2test_CFLAGS = $(libbacktrace_TEST_CFLAGS)\n+@HAVE_BUILDID_TRUE@@HAVE_ELF_TRUE@@HAVE_OBJCOPY_DEBUGLINK_TRUE@@NATIVE_TRUE@b2test_LDFLAGS = -Wl,--build-id\n+@HAVE_BUILDID_TRUE@@HAVE_ELF_TRUE@@HAVE_OBJCOPY_DEBUGLINK_TRUE@@NATIVE_TRUE@b2test_LDADD = libbacktrace_elf_for_test.la\n+@HAVE_BUILDID_TRUE@@HAVE_DWZ_TRUE@@HAVE_ELF_TRUE@@HAVE_OBJCOPY_DEBUGLINK_TRUE@@NATIVE_TRUE@b3test_SOURCES = $(btest_SOURCES)\n+@HAVE_BUILDID_TRUE@@HAVE_DWZ_TRUE@@HAVE_ELF_TRUE@@HAVE_OBJCOPY_DEBUGLINK_TRUE@@NATIVE_TRUE@b3test_CFLAGS = $(libbacktrace_TEST_CFLAGS)\n+@HAVE_BUILDID_TRUE@@HAVE_DWZ_TRUE@@HAVE_ELF_TRUE@@HAVE_OBJCOPY_DEBUGLINK_TRUE@@NATIVE_TRUE@b3test_LDFLAGS = -Wl,--build-id\n+@HAVE_BUILDID_TRUE@@HAVE_DWZ_TRUE@@HAVE_ELF_TRUE@@HAVE_OBJCOPY_DEBUGLINK_TRUE@@NATIVE_TRUE@b3test_LDADD = libbacktrace_elf_for_test.la\n @NATIVE_TRUE@btest_SOURCES = btest.c testlib.c\n @NATIVE_TRUE@btest_CFLAGS = $(libbacktrace_TEST_CFLAGS) -O\n @NATIVE_TRUE@btest_LDADD = libbacktrace.la"}, {"sha": "6af2c04c81a8a3827dda1201e38d951be533a2c6", "filename": "libbacktrace/configure", "status": "modified", "additions": 46, "deletions": 2, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3707a55acb980fbcd412ceb980b5621decb4dc0/libbacktrace%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3707a55acb980fbcd412ceb980b5621decb4dc0/libbacktrace%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2Fconfigure?ref=f3707a55acb980fbcd412ceb980b5621decb4dc0", "patch": "@@ -657,6 +657,8 @@ HAVE_ZSTD_FALSE\n HAVE_ZSTD_TRUE\n HAVE_COMPRESSED_DEBUG_FALSE\n HAVE_COMPRESSED_DEBUG_TRUE\n+HAVE_BUILDID_FALSE\n+HAVE_BUILDID_TRUE\n HAVE_ZLIB_FALSE\n HAVE_ZLIB_TRUE\n HAVE_DWARF5_FALSE\n@@ -11539,7 +11541,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11542 \"configure\"\n+#line 11544 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11645,7 +11647,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11648 \"configure\"\n+#line 11650 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -13742,6 +13744,44 @@ else\n fi\n \n \n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether --build-id is supported\" >&5\n+$as_echo_n \"checking whether --build-id is supported... \" >&6; }\n+if ${libbacktrace_cv_ld_buildid+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  LDFLAGS_hold=$LDFLAGS\n+LDFLAGS=\"$LDFLAGS -Wl,--build-id\"\n+cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+int\n+main ()\n+{\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_link \"$LINENO\"; then :\n+  libbacktrace_cv_ld_buildid=yes\n+else\n+  libbacktrace_cv_ld_buildid=no\n+fi\n+rm -f core conftest.err conftest.$ac_objext \\\n+    conftest$ac_exeext conftest.$ac_ext\n+LDFLAGS=$LDFLAGS_hold\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $libbacktrace_cv_ld_buildid\" >&5\n+$as_echo \"$libbacktrace_cv_ld_buildid\" >&6; }\n+ if test \"$libbacktrace_cv_ld_buildid\" = yes; then\n+  HAVE_BUILDID_TRUE=\n+  HAVE_BUILDID_FALSE='#'\n+else\n+  HAVE_BUILDID_TRUE='#'\n+  HAVE_BUILDID_FALSE=\n+fi\n+\n+\n { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether --compress-debug-sections is supported\" >&5\n $as_echo_n \"checking whether --compress-debug-sections is supported... \" >&6; }\n if ${libgo_cv_ld_compress+:} false; then :\n@@ -14411,6 +14451,10 @@ if test -z \"${HAVE_ZLIB_TRUE}\" && test -z \"${HAVE_ZLIB_FALSE}\"; then\n   as_fn_error $? \"conditional \\\"HAVE_ZLIB\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\n fi\n+if test -z \"${HAVE_BUILDID_TRUE}\" && test -z \"${HAVE_BUILDID_FALSE}\"; then\n+  as_fn_error $? \"conditional \\\"HAVE_BUILDID\\\" was never defined.\n+Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\n+fi\n if test -z \"${HAVE_COMPRESSED_DEBUG_TRUE}\" && test -z \"${HAVE_COMPRESSED_DEBUG_FALSE}\"; then\n   as_fn_error $? \"conditional \\\"HAVE_COMPRESSED_DEBUG\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5"}, {"sha": "28e3a688c24fcd1b5adaabd98e8c9f6db412e611", "filename": "libbacktrace/configure.ac", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3707a55acb980fbcd412ceb980b5621decb4dc0/libbacktrace%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3707a55acb980fbcd412ceb980b5621decb4dc0/libbacktrace%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2Fconfigure.ac?ref=f3707a55acb980fbcd412ceb980b5621decb4dc0", "patch": "@@ -484,7 +484,18 @@ AC_CHECK_LIB([z], [compress],\n     [AC_DEFINE(HAVE_ZLIB, 1, [Define if -lz is available.])])\n AM_CONDITIONAL(HAVE_ZLIB, test \"$ac_cv_lib_z_compress\" = yes)\n \n-dnl Test whether the linker supports the --compress_debug_sections option.\n+dnl Test whether the linker supports the --build-id option.\n+AC_CACHE_CHECK([whether --build-id is supported],\n+[libbacktrace_cv_ld_buildid],\n+[LDFLAGS_hold=$LDFLAGS\n+LDFLAGS=\"$LDFLAGS -Wl,--build-id\"\n+AC_LINK_IFELSE([AC_LANG_PROGRAM(,)],\n+[libbacktrace_cv_ld_buildid=yes],\n+[libbacktrace_cv_ld_buildid=no])\n+LDFLAGS=$LDFLAGS_hold])\n+AM_CONDITIONAL(HAVE_BUILDID, test \"$libbacktrace_cv_ld_buildid\" = yes)\n+\n+dnl Test whether the linker supports the --compress-debug-sections option.\n AC_CACHE_CHECK([whether --compress-debug-sections is supported],\n [libgo_cv_ld_compress],\n [LDFLAGS_hold=$LDFLAGS"}]}