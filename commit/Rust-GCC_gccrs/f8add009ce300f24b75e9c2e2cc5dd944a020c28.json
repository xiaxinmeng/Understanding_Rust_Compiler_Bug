{"sha": "f8add009ce300f24b75e9c2e2cc5dd944a020c28", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjhhZGQwMDljZTMwMGYyNGI3NWU5YzJlMmNjNWRkOTQ0YTAyMGMyOA==", "commit": {"author": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2019-01-05T14:32:12Z"}, "committer": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2019-01-05T14:32:12Z"}, "message": "re PR fortran/88009 (ICE in find_intrinsic_vtab, at fortran/class.c:2761)\n\n2019-01-05  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/88009\n\t* class.c (gfc_find_derived_vtab): Mark the _final component as\n\tartificial.\n\t(find_intrinsic_vtab): Ditto. Also add an extra check to avoid\n\tdereferencing a null pointer and adjust indentation.\n\t* resolve.c (resolve_fl_variable): Add extra check to avoid\n\tdereferencing a null pointer. Move variable declarations to local scope.\n\t(resolve_fl_procedure): Add extra check to avoid dereferencing a null\n\tpointer.\n\t* symbol.c (check_conflict): Suppress errors for artificial symbols.\n\n2019-01-05  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/88009\n\t* gfortran.dg/blockdata_10.f90: New test case.\n\nFrom-SVN: r267598", "tree": {"sha": "5a6cb69b2476a6dcebaa5cce4fc91ee5158c3fd4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5a6cb69b2476a6dcebaa5cce4fc91ee5158c3fd4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f8add009ce300f24b75e9c2e2cc5dd944a020c28", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8add009ce300f24b75e9c2e2cc5dd944a020c28", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f8add009ce300f24b75e9c2e2cc5dd944a020c28", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8add009ce300f24b75e9c2e2cc5dd944a020c28/comments", "author": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "23141e52419417d34eab8a2976fe417a6041e15e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23141e52419417d34eab8a2976fe417a6041e15e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/23141e52419417d34eab8a2976fe417a6041e15e"}], "stats": {"total": 57, "additions": 45, "deletions": 12}, "files": [{"sha": "2b8da1dd919b9ddfcf14100512ca0b8f6db59326", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8add009ce300f24b75e9c2e2cc5dd944a020c28/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8add009ce300f24b75e9c2e2cc5dd944a020c28/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=f8add009ce300f24b75e9c2e2cc5dd944a020c28", "patch": "@@ -1,3 +1,16 @@\n+2019-01-05  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/88009\n+\t* class.c (gfc_find_derived_vtab): Mark the _final component as\n+\tartificial.\n+\t(find_intrinsic_vtab): Ditto. Also add an extra check to avoid\n+\tdereferencing a null pointer and adjust indentation.\n+\t* resolve.c (resolve_fl_variable): Add extra check to avoid\n+\tdereferencing a null pointer. Move variable declarations to local scope.\n+\t(resolve_fl_procedure): Add extra check to avoid dereferencing a null\n+\tpointer.\n+\t* symbol.c (check_conflict): Suppress errors for artificial symbols.\n+\n 2019-01-01  Steven G. Kargl  <kargl@gcc.gnu.org>\n \n \t* parse.c (decode_statement):  Suppress \"Unclassifiable statement\""}, {"sha": "77f0fca9385c7595dbcea870d429902e03720b2d", "filename": "gcc/fortran/class.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8add009ce300f24b75e9c2e2cc5dd944a020c28/gcc%2Ffortran%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8add009ce300f24b75e9c2e2cc5dd944a020c28/gcc%2Ffortran%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fclass.c?ref=f8add009ce300f24b75e9c2e2cc5dd944a020c28", "patch": "@@ -2466,6 +2466,7 @@ gfc_find_derived_vtab (gfc_symbol *derived)\n \t\tgoto cleanup;\n \t      c->attr.proc_pointer = 1;\n \t      c->attr.access = ACCESS_PRIVATE;\n+\t      c->attr.artificial = 1;\n \t      c->tb = XCNEW (gfc_typebound_proc);\n \t      c->tb->ppc = 1;\n \t      generate_finalization_wrapper (derived, ns, tname, c);\n@@ -2762,9 +2763,9 @@ find_intrinsic_vtab (gfc_typespec *ts)\n \t      /* This is elemental so that arrays are automatically\n \t\t treated correctly by the scalarizer.  */\n \t      copy->attr.elemental = 1;\n-\t      if (ns->proc_name->attr.flavor == FL_MODULE)\n+\t      if (ns->proc_name && ns->proc_name->attr.flavor == FL_MODULE)\n \t\tcopy->module = ns->proc_name->name;\n-\t\t  gfc_set_sym_referenced (copy);\n+\t      gfc_set_sym_referenced (copy);\n \t      /* Set up formal arguments.  */\n \t      gfc_get_symbol (\"src\", sub_ns, &src);\n \t      src->ts.type = ts->type;\n@@ -2798,6 +2799,7 @@ find_intrinsic_vtab (gfc_typespec *ts)\n \t\tgoto cleanup;\n \t      c->attr.proc_pointer = 1;\n \t      c->attr.access = ACCESS_PRIVATE;\n+\t      c->attr.artificial = 1;\n \t      c->tb = XCNEW (gfc_typebound_proc);\n \t      c->tb->ppc = 1;\n \t      c->initializer = gfc_get_null_expr (NULL);"}, {"sha": "beafe8da8bc0f9071a43ac3bb4aa4515ac0bb056", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 7, "deletions": 10, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8add009ce300f24b75e9c2e2cc5dd944a020c28/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8add009ce300f24b75e9c2e2cc5dd944a020c28/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=f8add009ce300f24b75e9c2e2cc5dd944a020c28", "patch": "@@ -12274,21 +12274,16 @@ deferred_requirements (gfc_symbol *sym)\n static bool\n resolve_fl_variable (gfc_symbol *sym, int mp_flag)\n {\n-  int no_init_flag, automatic_flag;\n-  gfc_expr *e;\n-  const char *auto_save_msg;\n-  bool saved_specification_expr;\n-\n-  auto_save_msg = \"Automatic object %qs at %L cannot have the \"\n-\t\t  \"SAVE attribute\";\n+  const char *auto_save_msg = \"Automatic object %qs at %L cannot have the \"\n+\t\t\t      \"SAVE attribute\";\n \n   if (!resolve_fl_var_and_proc (sym, mp_flag))\n     return false;\n \n   /* Set this flag to check that variables are parameters of all entries.\n      This check is effected by the call to gfc_resolve_expr through\n      is_non_constant_shape_array.  */\n-  saved_specification_expr = specification_expr;\n+  bool saved_specification_expr = specification_expr;\n   specification_expr = true;\n \n   if (sym->ns->proc_name\n@@ -12315,6 +12310,8 @@ resolve_fl_variable (gfc_symbol *sym, int mp_flag)\n     {\n       /* Make sure that character string variables with assumed length are\n \t dummy arguments.  */\n+      gfc_expr *e = NULL;\n+\n       if (sym->ts.u.cl)\n \te = sym->ts.u.cl->length;\n       else\n@@ -12364,7 +12361,7 @@ resolve_fl_variable (gfc_symbol *sym, int mp_flag)\n     apply_default_init_local (sym); /* Try to apply a default initialization.  */\n \n   /* Determine if the symbol may not have an initializer.  */\n-  no_init_flag = automatic_flag = 0;\n+  int no_init_flag = 0, automatic_flag = 0;\n   if (sym->attr.allocatable || sym->attr.external || sym->attr.dummy\n       || sym->attr.intrinsic || sym->attr.result)\n     no_init_flag = 1;\n@@ -12494,7 +12491,7 @@ resolve_fl_procedure (gfc_symbol *sym, int mp_flag)\n      module procedures are excluded by 2.2.3.3 - i.e., they are not\n      externally accessible and can access all the objects accessible in\n      the host.  */\n-  if (!(sym->ns->parent\n+  if (!(sym->ns->parent && sym->ns->parent->proc_name\n \t&& sym->ns->parent->proc_name->attr.flavor == FL_MODULE)\n       && gfc_check_symbol_access (sym))\n     {"}, {"sha": "cd52c73031b300569bb846f2ed0af9d1ad3f9c81", "filename": "gcc/fortran/symbol.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8add009ce300f24b75e9c2e2cc5dd944a020c28/gcc%2Ffortran%2Fsymbol.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8add009ce300f24b75e9c2e2cc5dd944a020c28/gcc%2Ffortran%2Fsymbol.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fsymbol.c?ref=f8add009ce300f24b75e9c2e2cc5dd944a020c28", "patch": "@@ -440,6 +440,9 @@ check_conflict (symbol_attribute *attr, const char *name, locus *where)\n   const char *a1, *a2;\n   int standard;\n \n+  if (attr->artificial)\n+    return true;\n+\n   if (where == NULL)\n     where = &gfc_current_locus;\n "}, {"sha": "70d51e4d1f4548fe9d5ccad67cd74d48bf7ebd9e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8add009ce300f24b75e9c2e2cc5dd944a020c28/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8add009ce300f24b75e9c2e2cc5dd944a020c28/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f8add009ce300f24b75e9c2e2cc5dd944a020c28", "patch": "@@ -1,3 +1,8 @@\n+2019-01-05  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/88009\n+\t* gfortran.dg/blockdata_10.f90: New test case.\n+\n 2019-01-05  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/82564"}, {"sha": "ce7ba25c269a89dc8a35a046a3f0d129f737b6db", "filename": "gcc/testsuite/gfortran.dg/blockdata_10.f90", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8add009ce300f24b75e9c2e2cc5dd944a020c28/gcc%2Ftestsuite%2Fgfortran.dg%2Fblockdata_10.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8add009ce300f24b75e9c2e2cc5dd944a020c28/gcc%2Ftestsuite%2Fgfortran.dg%2Fblockdata_10.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fblockdata_10.f90?ref=f8add009ce300f24b75e9c2e2cc5dd944a020c28", "patch": "@@ -0,0 +1,13 @@\n+! { dg-do compile }\n+!\n+! PR 88009: [9 Regression] ICE in find_intrinsic_vtab, at fortran/class.c:2761\n+!\n+! Contributed by G. Steinmetz <gscfq@t-online.de>\n+\n+module m\n+   class(*), allocatable :: z\n+end\n+block data\n+   use m\n+   z = 'z'  ! { dg-error \"assignment statement is not allowed|Unexpected assignment statement\" }\n+end"}]}