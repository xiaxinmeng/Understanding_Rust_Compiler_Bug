{"sha": "c7a06bc12629ce9c897e3cbf155a475eb7ac6375", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzdhMDZiYzEyNjI5Y2U5Yzg5N2UzY2JmMTU1YTQ3NWViN2FjNjM3NQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@ucw.cz", "date": "2015-03-01T01:09:25Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2015-03-01T01:09:25Z"}, "message": "ipa-icf.c (sem_function::merge): Fix handling of COMDAT.\n\n\t* ipa-icf.c (sem_function::merge): Fix handling of COMDAT.\n\t(sem_variable::merge) Likewise.\n\nFrom-SVN: r221085", "tree": {"sha": "359daf7e7ac852181ec5f6a060ddc4d2b4a1b7ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/359daf7e7ac852181ec5f6a060ddc4d2b4a1b7ae"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c7a06bc12629ce9c897e3cbf155a475eb7ac6375", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7a06bc12629ce9c897e3cbf155a475eb7ac6375", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c7a06bc12629ce9c897e3cbf155a475eb7ac6375", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7a06bc12629ce9c897e3cbf155a475eb7ac6375/comments", "author": null, "committer": null, "parents": [{"sha": "eb140ba0334cd9d7fd0bf5a24cef6c6ab10eef2e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb140ba0334cd9d7fd0bf5a24cef6c6ab10eef2e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb140ba0334cd9d7fd0bf5a24cef6c6ab10eef2e"}], "stats": {"total": 54, "additions": 34, "deletions": 20}, "files": [{"sha": "1b4b17dea95477a51f1263f738479ccc76cddb6c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7a06bc12629ce9c897e3cbf155a475eb7ac6375/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7a06bc12629ce9c897e3cbf155a475eb7ac6375/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c7a06bc12629ce9c897e3cbf155a475eb7ac6375", "patch": "@@ -1,3 +1,8 @@\n+2015-02-28  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* ipa-icf.c (sem_function::merge): Fix handling of COMDAT.\n+\t(sem_variable::merge) Likewise.\n+\n 2015-02-28  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* ipa-inline.c (can_inline_edge_p): Match opt_for_fn on inline"}, {"sha": "70a2883d412b3b7cfde696188696059b27ba61a5", "filename": "gcc/ipa-icf.c", "status": "modified", "additions": 29, "deletions": 20, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7a06bc12629ce9c897e3cbf155a475eb7ac6375/gcc%2Fipa-icf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7a06bc12629ce9c897e3cbf155a475eb7ac6375/gcc%2Fipa-icf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-icf.c?ref=c7a06bc12629ce9c897e3cbf155a475eb7ac6375", "patch": "@@ -733,6 +733,7 @@ sem_function::merge (sem_item *alias_item)\n   bool remove = false;\n \n   bool original_discardable = false;\n+  bool original_discarded = false;\n \n   bool original_address_matters = original->address_matters_p ();\n   bool alias_address_matters = alias->address_matters_p ();\n@@ -761,15 +762,16 @@ sem_function::merge (sem_item *alias_item)\n     }\n \n   /* See if original is in a section that can be discarded if the main\n-     symbol is not used.\n+     symbol is not used.  */\n \n-     Also consider case where we have resolution info and we know that\n+  if (original->can_be_discarded_p ())\n+    original_discardable = true;\n+  /* Also consider case where we have resolution info and we know that\n      original's definition is not going to be used.  In this case we can not\n      create alias to original.  */\n-  if (original->can_be_discarded_p ()\n-      || (node->resolution != LDPR_UNKNOWN\n-\t  && !decl_binds_to_current_def_p (node->decl)))\n-    original_discardable = true;\n+  if (node->resolution != LDPR_UNKNOWN\n+      && !decl_binds_to_current_def_p (node->decl))\n+    original_discardable = original_discarded = true;\n \n   /* Creating a symtab alias is the optimal way to merge.\n      It however can not be used in the following cases:\n@@ -788,6 +790,7 @@ sem_function::merge (sem_item *alias_item)\n \t  && (!DECL_COMDAT_GROUP (alias->decl)\n \t      || (DECL_COMDAT_GROUP (alias->decl)\n \t\t  != DECL_COMDAT_GROUP (original->decl))))\n+      || original_discarded\n       || !sem_item::target_supports_symbol_aliases_p ()\n       || DECL_COMDAT_GROUP (alias->decl) != DECL_COMDAT_GROUP (original->decl))\n     {\n@@ -797,7 +800,7 @@ sem_function::merge (sem_item *alias_item)\n \t comdat group. Other compiler producing the body of the\n \t another comdat group may make opossite decision and with unfortunate\n \t linker choices this may close a loop.  */\n-      if (DECL_COMDAT_GROUP (alias->decl)\n+      if (DECL_COMDAT_GROUP (original->decl) && DECL_COMDAT_GROUP (alias->decl)\n \t  && (DECL_COMDAT_GROUP (alias->decl)\n \t      != DECL_COMDAT_GROUP (original->decl)))\n \t{\n@@ -854,26 +857,27 @@ sem_function::merge (sem_item *alias_item)\n \n       /* Work out the symbol the wrapper should call.\n \t If ORIGINAL is interposable, we need to call a local alias.\n-\t Also produce local alias (if possible) as an optimization.  */\n-      if (!original_discardable\n-\t  || (DECL_COMDAT_GROUP (original->decl)\n-\t      && (DECL_COMDAT_GROUP (original->decl)\n-\t\t  == DECL_COMDAT_GROUP (alias->decl))))\n+\t Also produce local alias (if possible) as an optimization.\n+\n+\t Local aliases can not be created inside comdat groups because that\n+\t prevents inlining.  */\n+      if (!original_discardable && !original->get_comdat_group ())\n \t{\n \t  local_original\n \t    = dyn_cast <cgraph_node *> (original->noninterposable_alias ());\n \t  if (!local_original\n \t      && original->get_availability () > AVAIL_INTERPOSABLE)\n \t    local_original = original;\n-\t  /* If original is COMDAT local, we can not really redirect external\n-\t     callers to it.  */\n-\t  if (original->comdat_local_p ())\n-\t    redirect_callers = false;\n \t}\n       /* If we can not use local alias, fallback to the original\n \t when possible.  */\n       else if (original->get_availability () > AVAIL_INTERPOSABLE)\n \tlocal_original = original;\n+\n+      /* If original is COMDAT local, we can not really redirect calls outside\n+\t of its comdat group to it.  */\n+      if (original->comdat_local_p ())\n+        redirect_callers = false;\n       if (!local_original)\n \t{\n \t  if (dump_file)\n@@ -1545,11 +1549,16 @@ sem_variable::merge (sem_item *alias_item)\n \t\t \"adress of original and alias may be compared.\\n\\n\");\n       return false;\n     }\n+  if (DECL_COMDAT_GROUP (original->decl) != DECL_COMDAT_GROUP (alias->decl))\n+    {\n+      if (dump_file)\n+\tfprintf (dump_file, \"Not unifying; alias cannot be created; \"\n+\t\t \"across comdat group boundary\\n\\n\");\n+\n+      return false;\n+    }\n \n-  if (original_discardable\n-      && (!DECL_COMDAT_GROUP (original->decl)\n-\t  || (DECL_COMDAT_GROUP (original->decl)\n-\t      != DECL_COMDAT_GROUP (alias->decl))))\n+  if (original_discardable)\n     {\n       if (dump_file)\n \tfprintf (dump_file, \"Not unifying; alias cannot be created; \""}]}