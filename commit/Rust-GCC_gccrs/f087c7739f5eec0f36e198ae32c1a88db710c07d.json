{"sha": "f087c7739f5eec0f36e198ae32c1a88db710c07d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjA4N2M3NzM5ZjVlZWMwZjM2ZTE5OGFlMzJjMWE4OGRiNzEwYzA3ZA==", "commit": {"author": {"name": "Trevor Saunders", "email": "tbsaunde+gcc@tbsaunde.org", "date": "2016-11-21T06:16:03Z"}, "committer": {"name": "Trevor Saunders", "email": "tbsaunde@gcc.gnu.org", "date": "2016-11-21T06:16:03Z"}, "message": "remove cast from emit_libcall_block\n\ngcc/ChangeLog:\n\n2016-11-21  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n\n\t* optabs.c (emit_libcall_block): Change argument type to\n\trtx_insn *.\n\t* optabs.h: Adjust prototype.\n\nFrom-SVN: r242654", "tree": {"sha": "6876404ca98de9c5c307c2defcb46bfc576ec4a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6876404ca98de9c5c307c2defcb46bfc576ec4a6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f087c7739f5eec0f36e198ae32c1a88db710c07d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f087c7739f5eec0f36e198ae32c1a88db710c07d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f087c7739f5eec0f36e198ae32c1a88db710c07d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f087c7739f5eec0f36e198ae32c1a88db710c07d/comments", "author": null, "committer": null, "parents": [{"sha": "a29f6a2be31ce70d96c1d9337a8b79bc19aca76b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a29f6a2be31ce70d96c1d9337a8b79bc19aca76b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a29f6a2be31ce70d96c1d9337a8b79bc19aca76b"}], "stats": {"total": 13, "additions": 9, "deletions": 4}, "files": [{"sha": "226bf3e9eb9611a69082f649f32f77443fe208e2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f087c7739f5eec0f36e198ae32c1a88db710c07d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f087c7739f5eec0f36e198ae32c1a88db710c07d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f087c7739f5eec0f36e198ae32c1a88db710c07d", "patch": "@@ -1,3 +1,9 @@\n+2016-11-21  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n+\n+\t* optabs.c (emit_libcall_block): Change argument type to\n+\trtx_insn *.\n+\t* optabs.h: Adjust prototype.\n+\n 2016-11-21  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n \n \t* cfgrtl.c (delete_insn): Change argument type to rtx_insn *."}, {"sha": "bee1a21dfb67899a63e24f01398634a43ba60484", "filename": "gcc/optabs.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f087c7739f5eec0f36e198ae32c1a88db710c07d/gcc%2Foptabs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f087c7739f5eec0f36e198ae32c1a88db710c07d/gcc%2Foptabs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptabs.c?ref=f087c7739f5eec0f36e198ae32c1a88db710c07d", "patch": "@@ -3681,10 +3681,9 @@ emit_libcall_block_1 (rtx_insn *insns, rtx target, rtx result, rtx equiv,\n }\n \n void\n-emit_libcall_block (rtx insns, rtx target, rtx result, rtx equiv)\n+emit_libcall_block (rtx_insn *insns, rtx target, rtx result, rtx equiv)\n {\n-  emit_libcall_block_1 (safe_as_a <rtx_insn *> (insns),\n-\t\t\ttarget, result, equiv, false);\n+  emit_libcall_block_1 (insns, target, result, equiv, false);\n }\n \f\n /* Nonzero if we can perform a comparison of mode MODE straightforwardly."}, {"sha": "9ab8cb1a905c36e22065c8770e464e6eef846da6", "filename": "gcc/optabs.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f087c7739f5eec0f36e198ae32c1a88db710c07d/gcc%2Foptabs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f087c7739f5eec0f36e198ae32c1a88db710c07d/gcc%2Foptabs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptabs.h?ref=f087c7739f5eec0f36e198ae32c1a88db710c07d", "patch": "@@ -224,7 +224,7 @@ extern bool maybe_emit_unop_insn (enum insn_code, rtx, rtx, enum rtx_code);\n extern void emit_unop_insn (enum insn_code, rtx, rtx, enum rtx_code);\n \n /* Emit code to make a call to a constant function or a library call.  */\n-extern void emit_libcall_block (rtx, rtx, rtx, rtx);\n+extern void emit_libcall_block (rtx_insn *, rtx, rtx, rtx);\n \n /* The various uses that a comparison can have; used by can_compare_p:\n    jumps, conditional moves, store flag operations.  */"}]}