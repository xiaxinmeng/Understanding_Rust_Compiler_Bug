{"sha": "d2894ab516786dd46d978d7a994af20ee66fea8b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDI4OTRhYjUxNjc4NmRkNDZkOTc4ZDdhOTk0YWYyMGVlNjZmZWE4Yg==", "commit": {"author": {"name": "David Edelsohn", "email": "edelsohn@gnu.org", "date": "2006-03-19T20:57:43Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2006-03-19T20:57:43Z"}, "message": "rs6000.opt (no-fp-in-toc): Use Var not Mask.\n\n        * config/rs6000/rs6000.opt (no-fp-in-toc): Use Var not Mask.\n        (no-sum-in-toc): Same.\n        * config/rs6000/rs6000.c (rs6000_handle_option): Use new\n        variables.\n        * config/rs6000/sysv4.h (SUBTARGET_OVERRIDE_OPTIONS): Set\n        NO_FP_IN_TOC for -fPIC instead of mask.\n\n        * config/rs6000/t-aix43 (T_ADAFLAGS): Delete.\n        (BOOT_LDFLAGS): Delete.\n        (LDFLAGS): Delete.\n        * config/rs6000/t-aix52: Same.\n\n        * config/rs6000/rs6000.md (store_multiple_power): Delete.\n        (stmsi[345678]_power): New.\n\nFrom-SVN: r112215", "tree": {"sha": "bde77ed27020f37de8157054a7e527f474e1c7e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bde77ed27020f37de8157054a7e527f474e1c7e2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d2894ab516786dd46d978d7a994af20ee66fea8b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2894ab516786dd46d978d7a994af20ee66fea8b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d2894ab516786dd46d978d7a994af20ee66fea8b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2894ab516786dd46d978d7a994af20ee66fea8b/comments", "author": null, "committer": null, "parents": [{"sha": "79a495f1013cb67ffd4d6e9f651fff0790283eef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79a495f1013cb67ffd4d6e9f651fff0790283eef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/79a495f1013cb67ffd4d6e9f651fff0790283eef"}], "stats": {"total": 173, "additions": 139, "deletions": 34}, "files": [{"sha": "a0c55f6b5670e83640340c20b4f76f9df9422e6a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2894ab516786dd46d978d7a994af20ee66fea8b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2894ab516786dd46d978d7a994af20ee66fea8b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d2894ab516786dd46d978d7a994af20ee66fea8b", "patch": "@@ -1,3 +1,20 @@\n+2006-03-19  David Edelsohn  <edelsohn@gnu.org>\n+\n+\t* config/rs6000/rs6000.opt (no-fp-in-toc): Use Var not Mask.\n+\t(no-sum-in-toc): Same.\n+\t* config/rs6000/rs6000.c (rs6000_handle_option): Use new\n+\tvariables.\n+\t* config/rs6000/sysv4.h (SUBTARGET_OVERRIDE_OPTIONS): Set\n+\tNO_FP_IN_TOC for -fPIC instead of mask.\n+\n+\t* config/rs6000/t-aix43 (T_ADAFLAGS): Delete.\n+\t(BOOT_LDFLAGS): Delete.\n+\t(LDFLAGS): Delete.\n+\t* config/rs6000/t-aix52: Same.\n+\n+\t* config/rs6000/rs6000.md (store_multiple_power): Delete.\n+\t(stmsi[345678]_power): New.\n+\n 2006-03-17  Steve Ellcey  <sje@cup.hp.com>\n \n \t* config/ia64/ia64.opt: Add empty line to end of file."}, {"sha": "babd0760f3b0758df1e929cc3c20b0f63a9bb554", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2894ab516786dd46d978d7a994af20ee66fea8b/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2894ab516786dd46d978d7a994af20ee66fea8b/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=d2894ab516786dd46d978d7a994af20ee66fea8b", "patch": "@@ -1635,10 +1635,10 @@ rs6000_handle_option (size_t code, const char *arg, int value)\n \t\t\t\t| MASK_PPC_GFXOPT | MASK_POWERPC64);\n       break;\n     case OPT_mfull_toc:\n-      target_flags &= ~(MASK_MINIMAL_TOC | MASK_NO_FP_IN_TOC\n-\t\t\t| MASK_NO_SUM_IN_TOC);\n-      target_flags_explicit |= (MASK_MINIMAL_TOC | MASK_NO_FP_IN_TOC\n-\t\t\t\t| MASK_NO_SUM_IN_TOC);\n+      target_flags &= ~MASK_MINIMAL_TOC;\n+      TARGET_NO_FP_IN_TOC = 0;\n+      TARGET_NO_SUM_IN_TOC = 0;\n+      target_flags_explicit |= MASK_MINIMAL_TOC;\n #ifdef TARGET_USES_SYSV4_OPT\n       /* Note, V.4 no longer uses a normal TOC, so make -mfull-toc, be\n \t just the same as -mminimal-toc.  */\n@@ -1681,8 +1681,8 @@ rs6000_handle_option (size_t code, const char *arg, int value)\n     case OPT_mminimal_toc:\n       if (value == 1)\n \t{\n-\t  target_flags &= ~(MASK_NO_FP_IN_TOC | MASK_NO_SUM_IN_TOC);\n-\t  target_flags_explicit |= (MASK_NO_FP_IN_TOC | MASK_NO_SUM_IN_TOC);\n+\t  TARGET_NO_FP_IN_TOC = 0;\n+\t  TARGET_NO_SUM_IN_TOC = 0;\n \t}\n       break;\n "}, {"sha": "a844f2fb432c9244bef9cfe74736d1d3f8038d7c", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 108, "deletions": 9, "changes": 117, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2894ab516786dd46d978d7a994af20ee66fea8b/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2894ab516786dd46d978d7a994af20ee66fea8b/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=d2894ab516786dd46d978d7a994af20ee66fea8b", "patch": "@@ -8989,15 +8989,6 @@\n \t\t     gen_rtx_REG (SImode, regno + i));\n }\")\n \n-(define_insn \"*store_multiple_power\"\n-  [(match_parallel 0 \"store_multiple_operation\"\n-\t\t   [(set (match_operand:SI 1 \"indirect_operand\" \"=Q\")\n-\t\t\t (match_operand:SI 2 \"gpc_reg_operand\" \"r\"))\n-\t\t    (clobber (match_scratch:SI 3 \"=q\"))])]\n-  \"TARGET_STRING && TARGET_POWER\"\n-  \"{stsi|stswi} %2,%P1,%O0\"\n-  [(set_attr \"type\" \"store\")])\n-\n (define_insn \"*stmsi8\"\n   [(match_parallel 0 \"store_multiple_operation\"\n     [(set (mem:SI (match_operand:SI 1 \"gpc_reg_operand\" \"b\"))\n@@ -9105,6 +9096,114 @@\n   \"TARGET_STRING && !TARGET_POWER && XVECLEN (operands[0], 0) == 4\"\n   \"{stsi|stswi} %2,%1,%O0\"\n   [(set_attr \"type\" \"store_ux\")])\n+\n+(define_insn \"*stmsi8_power\"\n+  [(match_parallel 0 \"store_multiple_operation\"\n+    [(set (mem:SI (match_operand:SI 1 \"gpc_reg_operand\" \"b\"))\n+\t  (match_operand:SI 2 \"gpc_reg_operand\" \"r\"))\n+     (clobber (match_scratch:SI 3 \"q\"))\n+     (set (mem:SI (plus:SI (match_dup 1) (const_int 4)))\n+\t  (match_operand:SI 4 \"gpc_reg_operand\" \"r\"))\n+     (set (mem:SI (plus:SI (match_dup 1) (const_int 8)))\n+\t  (match_operand:SI 5 \"gpc_reg_operand\" \"r\"))\n+     (set (mem:SI (plus:SI (match_dup 1) (const_int 12)))\n+\t  (match_operand:SI 6 \"gpc_reg_operand\" \"r\"))\n+     (set (mem:SI (plus:SI (match_dup 1) (const_int 16)))\n+\t  (match_operand:SI 7 \"gpc_reg_operand\" \"r\"))\n+     (set (mem:SI (plus:SI (match_dup 1) (const_int 20)))\n+\t  (match_operand:SI 8 \"gpc_reg_operand\" \"r\"))\n+     (set (mem:SI (plus:SI (match_dup 1) (const_int 24)))\n+\t  (match_operand:SI 9 \"gpc_reg_operand\" \"r\"))\n+     (set (mem:SI (plus:SI (match_dup 1) (const_int 28)))\n+\t  (match_operand:SI 10 \"gpc_reg_operand\" \"r\"))])]\n+  \"TARGET_STRING && TARGET_POWER && XVECLEN (operands[0], 0) == 9\"\n+  \"{stsi|stswi} %2,%1,%O0\"\n+  [(set_attr \"type\" \"store_ux\")])\n+\n+(define_insn \"*stmsi7_power\"\n+  [(match_parallel 0 \"store_multiple_operation\"\n+    [(set (mem:SI (match_operand:SI 1 \"gpc_reg_operand\" \"b\"))\n+\t  (match_operand:SI 2 \"gpc_reg_operand\" \"r\"))\n+     (clobber (match_scratch:SI 3 \"q\"))\n+     (set (mem:SI (plus:SI (match_dup 1) (const_int 4)))\n+\t  (match_operand:SI 4 \"gpc_reg_operand\" \"r\"))\n+     (set (mem:SI (plus:SI (match_dup 1) (const_int 8)))\n+\t  (match_operand:SI 5 \"gpc_reg_operand\" \"r\"))\n+     (set (mem:SI (plus:SI (match_dup 1) (const_int 12)))\n+\t  (match_operand:SI 6 \"gpc_reg_operand\" \"r\"))\n+     (set (mem:SI (plus:SI (match_dup 1) (const_int 16)))\n+\t  (match_operand:SI 7 \"gpc_reg_operand\" \"r\"))\n+     (set (mem:SI (plus:SI (match_dup 1) (const_int 20)))\n+\t  (match_operand:SI 8 \"gpc_reg_operand\" \"r\"))\n+     (set (mem:SI (plus:SI (match_dup 1) (const_int 24)))\n+\t  (match_operand:SI 9 \"gpc_reg_operand\" \"r\"))])]\n+  \"TARGET_STRING && TARGET_POWER && XVECLEN (operands[0], 0) == 8\"\n+  \"{stsi|stswi} %2,%1,%O0\"\n+  [(set_attr \"type\" \"store_ux\")])\n+\n+(define_insn \"*stmsi6_power\"\n+  [(match_parallel 0 \"store_multiple_operation\"\n+    [(set (mem:SI (match_operand:SI 1 \"gpc_reg_operand\" \"b\"))\n+\t  (match_operand:SI 2 \"gpc_reg_operand\" \"r\"))\n+     (clobber (match_scratch:SI 3 \"q\"))\n+     (set (mem:SI (plus:SI (match_dup 1) (const_int 4)))\n+\t  (match_operand:SI 4 \"gpc_reg_operand\" \"r\"))\n+     (set (mem:SI (plus:SI (match_dup 1) (const_int 8)))\n+\t  (match_operand:SI 5 \"gpc_reg_operand\" \"r\"))\n+     (set (mem:SI (plus:SI (match_dup 1) (const_int 12)))\n+\t  (match_operand:SI 6 \"gpc_reg_operand\" \"r\"))\n+     (set (mem:SI (plus:SI (match_dup 1) (const_int 16)))\n+\t  (match_operand:SI 7 \"gpc_reg_operand\" \"r\"))\n+     (set (mem:SI (plus:SI (match_dup 1) (const_int 20)))\n+\t  (match_operand:SI 8 \"gpc_reg_operand\" \"r\"))])]\n+  \"TARGET_STRING && TARGET_POWER && XVECLEN (operands[0], 0) == 7\"\n+  \"{stsi|stswi} %2,%1,%O0\"\n+  [(set_attr \"type\" \"store_ux\")])\n+\n+(define_insn \"*stmsi5_power\"\n+  [(match_parallel 0 \"store_multiple_operation\"\n+    [(set (mem:SI (match_operand:SI 1 \"gpc_reg_operand\" \"b\"))\n+\t  (match_operand:SI 2 \"gpc_reg_operand\" \"r\"))\n+     (clobber (match_scratch:SI 3 \"q\"))\n+     (set (mem:SI (plus:SI (match_dup 1) (const_int 4)))\n+\t  (match_operand:SI 4 \"gpc_reg_operand\" \"r\"))\n+     (set (mem:SI (plus:SI (match_dup 1) (const_int 8)))\n+\t  (match_operand:SI 5 \"gpc_reg_operand\" \"r\"))\n+     (set (mem:SI (plus:SI (match_dup 1) (const_int 12)))\n+\t  (match_operand:SI 6 \"gpc_reg_operand\" \"r\"))\n+     (set (mem:SI (plus:SI (match_dup 1) (const_int 16)))\n+\t  (match_operand:SI 7 \"gpc_reg_operand\" \"r\"))])]\n+  \"TARGET_STRING && TARGET_POWER && XVECLEN (operands[0], 0) == 6\"\n+  \"{stsi|stswi} %2,%1,%O0\"\n+  [(set_attr \"type\" \"store_ux\")])\n+\n+(define_insn \"*stmsi4_power\"\n+  [(match_parallel 0 \"store_multiple_operation\"\n+    [(set (mem:SI (match_operand:SI 1 \"gpc_reg_operand\" \"b\"))\n+\t  (match_operand:SI 2 \"gpc_reg_operand\" \"r\"))\n+     (clobber (match_scratch:SI 3 \"q\"))\n+     (set (mem:SI (plus:SI (match_dup 1) (const_int 4)))\n+\t  (match_operand:SI 4 \"gpc_reg_operand\" \"r\"))\n+     (set (mem:SI (plus:SI (match_dup 1) (const_int 8)))\n+\t  (match_operand:SI 5 \"gpc_reg_operand\" \"r\"))\n+     (set (mem:SI (plus:SI (match_dup 1) (const_int 12)))\n+\t  (match_operand:SI 6 \"gpc_reg_operand\" \"r\"))])]\n+  \"TARGET_STRING && TARGET_POWER && XVECLEN (operands[0], 0) == 5\"\n+  \"{stsi|stswi} %2,%1,%O0\"\n+  [(set_attr \"type\" \"store_ux\")])\n+\n+(define_insn \"*stmsi3_power\"\n+  [(match_parallel 0 \"store_multiple_operation\"\n+    [(set (mem:SI (match_operand:SI 1 \"gpc_reg_operand\" \"b\"))\n+\t  (match_operand:SI 2 \"gpc_reg_operand\" \"r\"))\n+     (clobber (match_scratch:SI 3 \"q\"))\n+     (set (mem:SI (plus:SI (match_dup 1) (const_int 4)))\n+\t  (match_operand:SI 4 \"gpc_reg_operand\" \"r\"))\n+     (set (mem:SI (plus:SI (match_dup 1) (const_int 8)))\n+\t  (match_operand:SI 5 \"gpc_reg_operand\" \"r\"))])]\n+  \"TARGET_STRING && TARGET_POWER && XVECLEN (operands[0], 0) == 4\"\n+  \"{stsi|stswi} %2,%1,%O0\"\n+  [(set_attr \"type\" \"store_ux\")])\n \f\n (define_expand \"setmemsi\"\n   [(parallel [(set (match_operand:BLK 0 \"\" \"\")"}, {"sha": "081d981da922c79be0a271329c9eaf62e563c6a7", "filename": "gcc/config/rs6000/rs6000.opt", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2894ab516786dd46d978d7a994af20ee66fea8b/gcc%2Fconfig%2Frs6000%2Frs6000.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2894ab516786dd46d978d7a994af20ee66fea8b/gcc%2Fconfig%2Frs6000%2Frs6000.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.opt?ref=d2894ab516786dd46d978d7a994af20ee66fea8b", "patch": "@@ -140,19 +140,19 @@ Target Report Var(swdiv)\n Generate software floating point divide for better throughput\n \n mno-fp-in-toc\n-Target Report RejectNegative Mask(NO_FP_IN_TOC)\n+Target Report RejectNegative Var(TARGET_NO_FP_IN_TOC)\n Do not place floating point constants in TOC\n \n mfp-in-toc\n-Target Report RejectNegative InverseMask(NO_FP_IN_TOC)\n+Target Report RejectNegative Var(TARGET_NO_FP_IN_TOC,0) VarExists\n Place floating point constants in TOC\n \n mno-sum-in-toc\n-Target RejectNegative Mask(NO_SUM_IN_TOC)\n+Target RejectNegative Var(TARGET_NO_SUM_IN_TOC)\n Do not place symbol+offset constants in TOC\n \n msum-in-toc\n-Target RejectNegative InverseMask(NO_SUM_IN_TOC)\n+Target RejectNegative Var(TARGET_NO_SUM_IN_TOC,0) VarExists\n Place symbol+offset constants in TOC\n \n ;  Output only one TOC entry per module.  Normally linking fails if"}, {"sha": "55cf9cec6758df6594eb66388ae67609d37a7f13", "filename": "gcc/config/rs6000/sysv4.h", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2894ab516786dd46d978d7a994af20ee66fea8b/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2894ab516786dd46d978d7a994af20ee66fea8b/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fsysv4.h?ref=d2894ab516786dd46d978d7a994af20ee66fea8b", "patch": "@@ -221,7 +221,10 @@ do {\t\t\t\t\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n   /* Treat -fPIC the same as -mrelocatable.  */\t\t\t\t\\\n   if (flag_pic > 1 && DEFAULT_ABI != ABI_AIX)\t\t\t\t\\\n-    target_flags |= MASK_RELOCATABLE | MASK_MINIMAL_TOC | MASK_NO_FP_IN_TOC; \\\n+    {\t\t\t\t\t\t\t\t\t\\\n+      target_flags |= MASK_RELOCATABLE | MASK_MINIMAL_TOC;\t\t\\\n+      TARGET_NO_FP_IN_TOC = 1;\t\t\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n   else if (TARGET_RELOCATABLE)\t\t\t\t\t\t\\\n     flag_pic = 2;\t\t\t\t\t\t\t\\"}, {"sha": "6a73cdd03121fdaaf2eba268076ffd3303c0a178", "filename": "gcc/config/rs6000/t-aix43", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2894ab516786dd46d978d7a994af20ee66fea8b/gcc%2Fconfig%2Frs6000%2Ft-aix43", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2894ab516786dd46d978d7a994af20ee66fea8b/gcc%2Fconfig%2Frs6000%2Ft-aix43", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Ft-aix43?ref=d2894ab516786dd46d978d7a994af20ee66fea8b", "patch": "@@ -74,10 +74,3 @@ TARGET_LIBGCC2_CFLAGS = -mlong-double-128\n # Either 32-bit and 64-bit objects in archives.\n AR_FLAGS_FOR_TARGET = -X32_64\n \n-# Compile Ada files with minimal-toc.  The primary focus is gnatlib, so\n-# that the library does not use nearly the entire TOC of applications\n-# until gnatlib is built as a shared library on AIX.  Compiling the\n-# compiler with -mminimal-toc does not cause any harm.\n-T_ADAFLAGS = -mminimal-toc\n-BOOT_LDFLAGS = -Wl,-bbigtoc\n-LDFLAGS = `case $(CC) in *gcc*) echo -Wl,-bbigtoc ;; esac;`"}, {"sha": "37a5d83b82880b673fa6a82e7acd9a831758d67b", "filename": "gcc/config/rs6000/t-aix52", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2894ab516786dd46d978d7a994af20ee66fea8b/gcc%2Fconfig%2Frs6000%2Ft-aix52", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2894ab516786dd46d978d7a994af20ee66fea8b/gcc%2Fconfig%2Frs6000%2Ft-aix52", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Ft-aix52?ref=d2894ab516786dd46d978d7a994af20ee66fea8b", "patch": "@@ -55,10 +55,3 @@ TARGET_LIBGCC2_CFLAGS = -mlong-double-128\n # Either 32-bit and 64-bit objects in archives.\n AR_FLAGS_FOR_TARGET = -X32_64\n \n-# Compile Ada files with minimal-toc.  The primary focus is gnatlib, so\n-# that the library does not use nearly the entire TOC of applications\n-# until gnatlib is built as a shared library on AIX.  Compiling the\n-# compiler with -mminimal-toc does not cause any harm.\n-T_ADAFLAGS = -mminimal-toc\n-BOOT_LDFLAGS = -Wl,-bbigtoc\n-LDFLAGS = `case $(CC) in *gcc*) echo -Wl,-bbigtoc ;; esac;`"}]}