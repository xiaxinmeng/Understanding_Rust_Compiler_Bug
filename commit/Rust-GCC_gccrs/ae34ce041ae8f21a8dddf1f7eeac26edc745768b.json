{"sha": "ae34ce041ae8f21a8dddf1f7eeac26edc745768b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWUzNGNlMDQxYWU4ZjIxYThkZGRmMWY3ZWVhYzI2ZWRjNzQ1NzY4Yg==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2013-04-02T14:04:53Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2013-04-02T14:04:53Z"}, "message": "friend.c (do_friend): Use COMPLETE_OR_OPEN_TYPE_P.\n\n2013-04-02  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* friend.c (do_friend): Use COMPLETE_OR_OPEN_TYPE_P.\n\t* pt.c (find_parameter_packs_r): Use TYPE_ALIAS_P and TYPE_TI_ARGS.\n\t(for_each_template_parm_r): Use TYPE_TI_ARGS.\n\nFrom-SVN: r197356", "tree": {"sha": "b1134d704a76bfdb432cfc15cfa8bda5490facec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b1134d704a76bfdb432cfc15cfa8bda5490facec"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ae34ce041ae8f21a8dddf1f7eeac26edc745768b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae34ce041ae8f21a8dddf1f7eeac26edc745768b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae34ce041ae8f21a8dddf1f7eeac26edc745768b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae34ce041ae8f21a8dddf1f7eeac26edc745768b/comments", "author": null, "committer": null, "parents": [{"sha": "90eb75f26e6214dc4e673526952932674e901d8c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90eb75f26e6214dc4e673526952932674e901d8c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/90eb75f26e6214dc4e673526952932674e901d8c"}], "stats": {"total": 18, "additions": 10, "deletions": 8}, "files": [{"sha": "7b73e0329318ad5225b24fcaf4e801f04baf1dc5", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae34ce041ae8f21a8dddf1f7eeac26edc745768b/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae34ce041ae8f21a8dddf1f7eeac26edc745768b/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=ae34ce041ae8f21a8dddf1f7eeac26edc745768b", "patch": "@@ -1,3 +1,9 @@\n+2013-04-02  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* friend.c (do_friend): Use COMPLETE_OR_OPEN_TYPE_P.\n+\t* pt.c (find_parameter_packs_r): Use TYPE_ALIAS_P and TYPE_TI_ARGS.\n+\t(for_each_template_parm_r): Use TYPE_TI_ARGS.\n+\n 2013-04-02  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* cp-tree.h (TAGGED_TYPE_P): Remove."}, {"sha": "3c63ea6dbb9c8b0ab12c54dbc82fd07cc77d02c0", "filename": "gcc/cp/friend.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae34ce041ae8f21a8dddf1f7eeac26edc745768b/gcc%2Fcp%2Ffriend.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae34ce041ae8f21a8dddf1f7eeac26edc745768b/gcc%2Fcp%2Ffriend.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ffriend.c?ref=ae34ce041ae8f21a8dddf1f7eeac26edc745768b", "patch": "@@ -485,8 +485,7 @@ do_friend (tree ctype, tree declarator, tree decl,\n \t to be a friend, so we do lookup here even if CTYPE is in\n \t the process of being defined.  */\n       if (class_template_depth\n-\t  || COMPLETE_TYPE_P (ctype)\n-\t  || (CLASS_TYPE_P (ctype) && TYPE_BEING_DEFINED (ctype)))\n+\t  || COMPLETE_OR_OPEN_TYPE_P (ctype))\n \t{\n \t  if (DECL_TEMPLATE_INFO (decl))\n \t    /* DECL is a template specialization.  No need to"}, {"sha": "1d429fe0f1b6d99cbd29ea50b7af0f227f10a37c", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae34ce041ae8f21a8dddf1f7eeac26edc745768b/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae34ce041ae8f21a8dddf1f7eeac26edc745768b/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=ae34ce041ae8f21a8dddf1f7eeac26edc745768b", "patch": "@@ -3058,10 +3058,7 @@ find_parameter_packs_r (tree *tp, int *walk_subtrees, void* data)\n   bool parameter_pack_p = false;\n \n   /* Handle type aliases/typedefs.  */\n-  if (TYPE_P (t)\n-      && TYPE_NAME (t)\n-      && TREE_CODE (TYPE_NAME (t)) == TYPE_DECL\n-      && TYPE_DECL_ALIAS_P (TYPE_NAME (t)))\n+  if (TYPE_ALIAS_P (t))\n     {\n       if (TYPE_TEMPLATE_INFO (t))\n \tcp_walk_tree (&TYPE_TI_ARGS (t),\n@@ -3146,7 +3143,7 @@ find_parameter_packs_r (tree *tp, int *walk_subtrees, void* data)\n     case UNION_TYPE:\n     case ENUMERAL_TYPE:\n       if (TYPE_TEMPLATE_INFO (t))\n-\tcp_walk_tree (&TI_ARGS (TYPE_TEMPLATE_INFO (t)),\n+\tcp_walk_tree (&TYPE_TI_ARGS (t),\n \t\t      &find_parameter_packs_r, ppd, ppd->visited);\n \n       *walk_subtrees = 0;\n@@ -7619,7 +7616,7 @@ for_each_template_parm_r (tree *tp, int *walk_subtrees, void *d)\n     case ENUMERAL_TYPE:\n       if (!TYPE_TEMPLATE_INFO (t))\n \t*walk_subtrees = 0;\n-      else if (for_each_template_parm (TI_ARGS (TYPE_TEMPLATE_INFO (t)),\n+      else if (for_each_template_parm (TYPE_TI_ARGS (t),\n \t\t\t\t       fn, data, pfd->visited, \n \t\t\t\t       pfd->include_nondeduced_p))\n \treturn error_mark_node;"}]}