{"sha": "c5c780e6deb9cf337f4898db5716659698311d7d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzVjNzgwZTZkZWI5Y2YzMzdmNDg5OGRiNTcxNjY1OTY5ODMxMWQ3ZA==", "commit": {"author": {"name": "Hristian Kirtchev", "email": "kirtchev@adacore.com", "date": "2014-07-29T12:51:47Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-29T12:51:47Z"}, "message": "exp_ch4.adb (Process_Transient_Object): Remove constant In_Cond_Expr, use its initialization expression in place.\n\n2014-07-29  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* exp_ch4.adb (Process_Transient_Object): Remove constant\n\tIn_Cond_Expr, use its initialization expression in place.\n\t* exp_ch7.adb (Process_Declarations): There is no need to check\n\tthat a transient object being hooked is controlled as it would\n\tnot have been hooked in the first place.\n\t* exp_util.adb (Is_Aliased): 'Reference-d or renamed transient\n\tobjects are not considered aliased when the related context is\n\ta Boolean expression_with_actions.\n\t(Requires_Cleanup_Actions): There is no need to check that a transient\n\tobject being hooked is controlled as it would not have been hooked in\n\tthe first place.\n\nFrom-SVN: r213158", "tree": {"sha": "a24a16da19178913fb64eee87ace65e85b8ad461", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a24a16da19178913fb64eee87ace65e85b8ad461"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c5c780e6deb9cf337f4898db5716659698311d7d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5c780e6deb9cf337f4898db5716659698311d7d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c5c780e6deb9cf337f4898db5716659698311d7d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5c780e6deb9cf337f4898db5716659698311d7d/comments", "author": {"login": "kirtchev-adacore", "id": 60669983, "node_id": "MDQ6VXNlcjYwNjY5OTgz", "avatar_url": "https://avatars.githubusercontent.com/u/60669983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kirtchev-adacore", "html_url": "https://github.com/kirtchev-adacore", "followers_url": "https://api.github.com/users/kirtchev-adacore/followers", "following_url": "https://api.github.com/users/kirtchev-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/kirtchev-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/kirtchev-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kirtchev-adacore/subscriptions", "organizations_url": "https://api.github.com/users/kirtchev-adacore/orgs", "repos_url": "https://api.github.com/users/kirtchev-adacore/repos", "events_url": "https://api.github.com/users/kirtchev-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/kirtchev-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e2bc5465d67a558c23830e1561077eaba1f68973", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2bc5465d67a558c23830e1561077eaba1f68973", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e2bc5465d67a558c23830e1561077eaba1f68973"}], "stats": {"total": 66, "additions": 40, "deletions": 26}, "files": [{"sha": "7d2e4ce195d493e4c3071e1c017fd1aeff03fc64", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5c780e6deb9cf337f4898db5716659698311d7d/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5c780e6deb9cf337f4898db5716659698311d7d/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=c5c780e6deb9cf337f4898db5716659698311d7d", "patch": "@@ -1,3 +1,17 @@\n+2014-07-29  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* exp_ch4.adb (Process_Transient_Object): Remove constant\n+\tIn_Cond_Expr, use its initialization expression in place.\n+\t* exp_ch7.adb (Process_Declarations): There is no need to check\n+\tthat a transient object being hooked is controlled as it would\n+\tnot have been hooked in the first place.\n+\t* exp_util.adb (Is_Aliased): 'Reference-d or renamed transient\n+\tobjects are not considered aliased when the related context is\n+\ta Boolean expression_with_actions.\n+\t(Requires_Cleanup_Actions): There is no need to check that a transient\n+\tobject being hooked is controlled as it would not have been hooked in\n+\tthe first place.\n+\n 2014-07-29  Robert Dewar  <dewar@adacore.com>\n \n \t* errout.adb: Minor reformatting."}, {"sha": "96aa7f173ab144ab9c84409ab32587c4ff2d111e", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5c780e6deb9cf337f4898db5716659698311d7d/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5c780e6deb9cf337f4898db5716659698311d7d/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=c5c780e6deb9cf337f4898db5716659698311d7d", "patch": "@@ -12616,9 +12616,6 @@ package body Exp_Ch4 is\n       --  If False, call to finalizer includes a test of whether the hook\n       --  pointer is null.\n \n-      In_Cond_Expr : constant Boolean :=\n-                       Within_Case_Or_If_Expression (Rel_Node);\n-\n    begin\n       --  Step 0: determine where to attach finalization actions in the tree\n \n@@ -12636,10 +12633,10 @@ package body Exp_Ch4 is\n          --  conditional expression.\n \n          Finalize_Always :=\n-            not (In_Cond_Expr\n-                  or else\n-                    Nkind_In (Original_Node (Rel_Node), N_Case_Expression,\n-                                                        N_If_Expression));\n+           not Within_Case_Or_If_Expression (Rel_Node)\n+             and then not Nkind_In\n+                            (Original_Node (Rel_Node), N_Case_Expression,\n+                                                       N_If_Expression);\n \n          declare\n             Loc  : constant Source_Ptr := Sloc (Rel_Node);"}, {"sha": "c794f7d057ab8f7f20646880a70469a65e18d8a8", "filename": "gcc/ada/exp_ch7.adb", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5c780e6deb9cf337f4898db5716659698311d7d/gcc%2Fada%2Fexp_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5c780e6deb9cf337f4898db5716659698311d7d/gcc%2Fada%2Fexp_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.adb?ref=c5c780e6deb9cf337f4898db5716659698311d7d", "patch": "@@ -1817,9 +1817,7 @@ package body Exp_Ch7 is\n                elsif Is_Access_Type (Obj_Typ)\n                  and then Present (Status_Flag_Or_Transient_Decl (Obj_Id))\n                  and then Nkind (Status_Flag_Or_Transient_Decl (Obj_Id)) =\n-                                                        N_Object_Declaration\n-                 and then Is_Finalizable_Transient\n-                            (Status_Flag_Or_Transient_Decl (Obj_Id), Decl)\n+                                   N_Object_Declaration\n                then\n                   Processing_Actions (Has_No_Init => True);\n "}, {"sha": "d94e69deab613b2edc80549ca88eb548041678a6", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 21, "deletions": 16, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5c780e6deb9cf337f4898db5716659698311d7d/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5c780e6deb9cf337f4898db5716659698311d7d/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=c5c780e6deb9cf337f4898db5716659698311d7d", "patch": "@@ -3435,9 +3435,8 @@ package body Exp_Util is\n                    or else Etype (Assoc_Node) /= Standard_Void_Type)\n         and then Nkind (Assoc_Node) /= N_Procedure_Call_Statement\n         and then (Nkind (Assoc_Node) /= N_Attribute_Reference\n-                   or else\n-                     not Is_Procedure_Attribute_Name\n-                           (Attribute_Name (Assoc_Node)))\n+                   or else not Is_Procedure_Attribute_Name\n+                                 (Attribute_Name (Assoc_Node)))\n       then\n          N := Assoc_Node;\n          P := Parent (Assoc_Node);\n@@ -4557,6 +4556,17 @@ package body Exp_Util is\n       --  Start of processing for Is_Aliased\n \n       begin\n+         --  'Reference-d or renamed transient objects are not consider aliased\n+         --  when the related context is a Boolean expression_with_actions. The\n+         --  Boolean result is always known after the action list is evaluated,\n+         --  therefore the transient objects must be finalized at that point.\n+\n+         if Nkind (Rel_Node) = N_Expression_With_Actions\n+           and then Is_Boolean_Type (Etype (Rel_Node))\n+         then\n+            return False;\n+         end if;\n+\n          Stmt := First_Stmt;\n          while Present (Stmt) loop\n             if Nkind (Stmt) = N_Object_Declaration then\n@@ -4652,8 +4662,7 @@ package body Exp_Util is\n                if Nkind (Stmt) = N_Object_Declaration\n                  and then Present (Expression (Stmt))\n                  and then Nkind (Expression (Stmt)) = N_Reference\n-                 and then Nkind (Prefix (Expression (Stmt))) =\n-                            N_Function_Call\n+                 and then Nkind (Prefix (Expression (Stmt))) = N_Function_Call\n                then\n                   Call := Prefix (Expression (Stmt));\n \n@@ -7441,9 +7450,7 @@ package body Exp_Util is\n             elsif Is_Access_Type (Obj_Typ)\n               and then Present (Status_Flag_Or_Transient_Decl (Obj_Id))\n               and then Nkind (Status_Flag_Or_Transient_Decl (Obj_Id)) =\n-                                N_Object_Declaration\n-              and then Is_Finalizable_Transient\n-                         (Status_Flag_Or_Transient_Decl (Obj_Id), Decl)\n+                                                        N_Object_Declaration\n             then\n                return True;\n \n@@ -7464,9 +7471,8 @@ package body Exp_Util is\n             --  treated as controlled since they require manual cleanup.\n \n             elsif Ekind (Obj_Id) = E_Variable\n-              and then\n-                (Is_Simple_Protected_Type (Obj_Typ)\n-                  or else Has_Simple_Protected_Object (Obj_Typ))\n+              and then (Is_Simple_Protected_Type (Obj_Typ)\n+                         or else Has_Simple_Protected_Object (Obj_Typ))\n             then\n                return True;\n             end if;\n@@ -7529,9 +7535,7 @@ package body Exp_Util is\n                   and then not Is_Access_Subprogram_Type (Typ)\n                   and then Needs_Finalization\n                              (Available_View (Designated_Type (Typ))))\n-               or else\n-                (Is_Type (Typ)\n-                  and then Needs_Finalization (Typ)))\n+                or else (Is_Type (Typ) and then Needs_Finalization (Typ)))\n               and then Requires_Cleanup_Actions\n                          (Actions (Decl), Lib_Level, Nested_Constructs)\n             then\n@@ -7756,7 +7760,8 @@ package body Exp_Util is\n       if Ialign /= No_Uint and then Ialign > Maximum_Alignment then\n          return True;\n \n-      elsif Ialign /= No_Uint and then Oalign /= No_Uint\n+      elsif Ialign /= No_Uint\n+        and then Oalign /= No_Uint\n         and then Ialign <= Oalign\n       then\n          return True;\n@@ -8327,7 +8332,7 @@ package body Exp_Util is\n \n          when N_Range =>\n             return Side_Effect_Free (Low_Bound (N),  Name_Req, Variable_Ref)\n-                      and then\n+                     and then\n                    Side_Effect_Free (High_Bound (N), Name_Req, Variable_Ref);\n \n          --  A slice is side effect free if it is a side effect free"}]}