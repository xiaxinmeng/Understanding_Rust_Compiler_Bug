{"sha": "aafb55f64046cd09fbab560a597cc591bdfedac1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWFmYjU1ZjY0MDQ2Y2QwOWZiYWI1NjBhNTk3Y2M1OTFiZGZlZGFjMQ==", "commit": {"author": {"name": "Craig Burley", "email": "burley@gnu.org", "date": "1998-09-01T09:13:21Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-09-01T09:13:21Z"}, "message": "bugs.texi, [...]: Doc updates from Craig.\n\n \n        * bugs.texi, g77.1, g77.texi, intdoc.in, news.texi: Doc updates\n        from Craig.\n\nFrom-SVN: r22152", "tree": {"sha": "d18090729fb7b83d4718929fd26446e4887ae61c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d18090729fb7b83d4718929fd26446e4887ae61c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aafb55f64046cd09fbab560a597cc591bdfedac1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aafb55f64046cd09fbab560a597cc591bdfedac1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aafb55f64046cd09fbab560a597cc591bdfedac1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aafb55f64046cd09fbab560a597cc591bdfedac1/comments", "author": null, "committer": null, "parents": [{"sha": "b51e57aa2dd7d52373ade557d47b2afe3e7f9675", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b51e57aa2dd7d52373ade557d47b2afe3e7f9675", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b51e57aa2dd7d52373ade557d47b2afe3e7f9675"}], "stats": {"total": 190, "additions": 174, "deletions": 16}, "files": [{"sha": "f335961e90878e18603c9be919453ca345cf5cfb", "filename": "gcc/f/g77.texi", "status": "modified", "additions": 174, "deletions": 16, "changes": 190, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aafb55f64046cd09fbab560a597cc591bdfedac1/gcc%2Ff%2Fg77.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aafb55f64046cd09fbab560a597cc591bdfedac1/gcc%2Ff%2Fg77.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fg77.texi?ref=aafb55f64046cd09fbab560a597cc591bdfedac1", "patch": "@@ -14,7 +14,7 @@\n @c %**start of header \n @setfilename g77.info\n \n-@set last-up-date 1998-08-23\n+@set last-up-date 1998-09-01\n @set version-g77 0.5.24\n @set email-general egcs@@cygnus.com\n @set email-bugs egcs-bugs@@cygnus.com\n@@ -3310,7 +3310,71 @@ or, if you cannot do that, email\n @email{fortran@@gnu.org} asking for a recent copy of the\n GNU Fortran @file{.plan} file.\n \n-@heading In @code{egcs} 1.1:\n+@heading In @code{egcs} 1.1 (versus 0.5.24):\n+@itemize @bullet\n+@cindex alignment\n+@cindex double-precision performance\n+@cindex -malign-double\n+@item\n+Align static double-precision variables and arrays\n+on Intel x86 targets\n+regardless of whether @samp{-malign-double} is specified.\n+\n+Generally, this affects only local variables and arrays\n+having the @code{SAVE} attribute\n+or given initial values via @code{DATA}.\n+@end itemize\n+\n+@heading In @code{egcs} 1.1 (versus @code{egcs} 1.0.3):\n+@itemize @bullet\n+@item\n+Support @samp{FORMAT(I<@var{expr}>)} when @var{expr} is a\n+compile-time constant @code{INTEGER} expression.\n+\n+@item\n+Fix @code{g77} @samp{-g} option so procedures that\n+use @samp{ENTRY} can be stepped through, line by line,\n+in @code{gdb}.\n+\n+@item\n+Allow any @code{REAL} argument to intrinsics\n+@code{Second} and @code{CPU_Time}.\n+\n+@item\n+Use @code{tempnam}, if available, to open scratch files\n+(as in @samp{OPEN(STATUS='SCRATCH')})\n+so that the @code{TMPDIR} environment variable,\n+if present, is used.\n+\n+@item\n+@code{g77}'s version of @code{libf2c} separates out\n+the setting of global state\n+(such as command-line arguments and signal handling)\n+from @file{main.o} into distinct, new library\n+archive members.\n+\n+This should make it easier to write portable applications\n+that have their own (non-Fortran) @code{main()} routine\n+properly set up the @code{libf2c} environment, even\n+when @code{libf2c} (now @code{libg2c}) is a shared library.\n+\n+@item\n+The @code{g77} command now expects the run-time library\n+to be named @code{libg2c.a} instead of @code{libf2c.a},\n+to ensure that a version other than the one built and\n+installed as part of the same @code{g77} version is picked up.\n+\n+@item\n+Some diagnostics have been changed from warnings to errors,\n+to prevent inadvertent use of the resulting, probably buggy,\n+programs.\n+These mostly include diagnostics about use of unsupported features\n+in the @code{OPEN}, @code{INQUIRE}, @code{READ}, and\n+@code{WRITE} statements,\n+and about truncations of various sorts of constants.\n+@end itemize\n+\n+@heading In 0.5.24 and @code{egcs} 1.1 (versus 0.5.23):\n @itemize @bullet\n @item\n @code{g77} now treats @samp{%LOC(@var{expr})} and\n@@ -3335,16 +3399,27 @@ when the generated code wants to link to the one\n in @code{libf2c} (@code{libg2c}).\n \n @item\n-The F90 @samp{DATE_AND_TIME} intrinsic now is\n+@code{g77} emits more debugging information when\n+@samp{-g} is used.\n+\n+This new information allows, for example,\n+@kbd{which __g77_length_a} to be used in @code{gdb}\n+to determine the type of the phantom length argument\n+supplied with @samp{CHARACTER} variables.\n+\n+This information pertains to internally-generated\n+type, variable, and other information,\n+not to the longstanding deficiencies vis-a-vis\n+@samp{COMMON} and @samp{EQUIVALENCE}.\n+\n+@item\n+The F90 @samp{Date_and_Time} intrinsic now is\n supported.\n \n @item\n-The F90 @samp{SYSTEM_CLOCK} intrinsic allows\n+The F90 @samp{System_Clock} intrinsic allows\n the optional arguments (except for the @samp{Count}\n argument) to be omitted.\n-\n-@item\n-Upgrade to @code{libf2c} as of 1998-06-18.\n @end itemize\n \n @heading In 0.5.23:\n@@ -3373,7 +3448,7 @@ the options @samp{-fargument-alias}, @samp{-fargument-noalias},\n and @samp{-fargument-noalias-global},\n and the corresponding alias-analysis code.\n \n-(Version 1.0.1 of @code{egcs} has the alias-analysis\n+(@code{egcs} has the alias-analysis\n code, but not the @code{__restrict__} keyword.\n @code{egcs} @code{g77} users benefit from the alias-analysis\n code despite the lack of the @code{__restrict__} keyword,\n@@ -3385,7 +3460,7 @@ Support for the GNU compiler options\n @samp{-freduce-all-givs},\n and @samp{-frerun-loop-opt}.\n \n-(Version 1.0.1 of @code{egcs} supports these options.\n+(@code{egcs} supports these options.\n @code{g77} users of @code{egcs} benefit from them even if\n they are not explicitly specified,\n because the defaults are optimized for @code{g77} users.)\n@@ -3443,7 +3518,7 @@ and about truncations of various sorts of constants.\n @heading In 0.5.22:\n @itemize @bullet\n @item\n-Fix @code{SIGNAL} intrinsic so it offers portable\n+Fix @code{Signal} intrinsic so it offers portable\n support for 64-bit systems (such as Digital Alphas\n running GNU/Linux).\n \n@@ -3466,7 +3541,7 @@ Allow any numeric argument to intrinsics\n \n @item\n Use @code{tempnam}, if available, to open scratch files\n-(as in @samp{OPEN(STATUS='SCRATCH')}\n+(as in @samp{OPEN(STATUS='SCRATCH')})\n so that the @code{TMPDIR} environment variable,\n if present, is used.\n \n@@ -3488,6 +3563,61 @@ Fix compiler so it accepts @samp{-fgnu-intrinsics-*} and\n @samp{-fbadu77-intrinsics-*} options.\n @end itemize\n \n+@heading In @code{egcs} 1.0.2 (versus @code{egcs} 1.0.1):\n+@itemize @bullet\n+@item\n+Fix compiler so it accepts @samp{-fgnu-intrinsics-*} and\n+@samp{-fbadu77-intrinsics-*} options.\n+@end itemize\n+\n+@heading In @code{egcs} 1.0 (versus 0.5.21):\n+@itemize @bullet\n+@item\n+Version 1.0 of @code{egcs}\n+contains several regressions against\n+version 0.5.21 of @code{g77},\n+due to using the\n+``vanilla'' @code{gcc} back end instead of patching\n+it to fix a few bugs and improve performance in a\n+few cases.\n+\n+@xref{Actual Bugs,,Actual Bugs We Haven't Fixed Yet},\n+available in plain-text format in @code{gcc/f/BUGS},\n+for information on the known bugs in this version,\n+including the regressions.\n+\n+Features that have been dropped from this version\n+of @code{g77} due to their being implemented\n+via @code{g77}-specific patches to the @code{gcc}\n+back end in previous releases include:\n+\n+@itemize --\n+@item\n+Support for the C-language @code{restrict} keyword.\n+\n+@item\n+Support for the @samp{-W} option warning about\n+integer division by zero.\n+\n+@item\n+The Intel x86-specific option @samp{-malign-double}\n+applying to stack-allocated data\n+as well as statically-allocate data.\n+@end itemize\n+\n+@cindex -@w{}-driver option\n+@cindex g77 options, -@w{}-driver\n+@cindex options, -@w{}-driver\n+@item\n+Remove support for the @samp{--driver} option,\n+as @code{g77} now does all the driving,\n+just like @code{gcc}.\n+\n+@item\n+Allow any numeric argument to intrinsics\n+@code{Int2} and @code{Int8}.\n+@end itemize\n+\n @heading In 0.5.21:\n @itemize @bullet\n @item\n@@ -3525,9 +3655,16 @@ to avoid compiler crashes resulting from coding errors\n that these diagnostics normally would identify.\n \n @item\n-Fix @code{libU77} routines that accept file names\n-to strip trailing spaces from them, for consistency\n+Fix @code{libU77} routines that accept file and other names\n+to strip trailing blanks from them, for consistency\n with other implementations.\n+Blanks may be forcibly appended to such names by\n+appending a single null character (@samp{CHAR(0)})\n+to the significant trailing blanks.\n+\n+@item\n+Fix @code{CHMOD} intrinsic to work with file names\n+that have embedded blanks, commas, and so on.\n \n @item\n Fix @code{SIGNAL} intrinsic so it accepts an\n@@ -3555,9 +3692,21 @@ Add @code{INT2} and @code{INT8} intrinsics.\n @item\n Add @code{CPU_TIME} intrinsic.\n \n+@item\n+Add @code{ALARM} intrinsic.\n+\n @item\n @code{CTIME} intrinsic now accepts any @code{INTEGER}\n argument, not just @code{INTEGER(KIND=2)}.\n+\n+@item\n+@code{g77} driver now prints version information (such as produced\n+by @kbd{g77 -v}) to @code{stderr} instead of @code{stdout}.\n+\n+@item\n+The @samp{.r} suffix now designates a Ratfor source file,\n+to be preprocessed via the @code{ratfor} command, available\n+separately.\n @end itemize\n \n @heading In 0.5.20:\n@@ -3606,7 +3755,7 @@ building it from this and future versions of @code{g77}.\n @item\n Dave Love's implementation of @code{libU77} has been\n added to the version of @code{libf2c} distributed with\n-and built by @code{g77}.\n+and built as part of @code{g77}.\n @code{g77} now knows about the routines in this library\n as intrinsics.\n \n@@ -3654,8 +3803,8 @@ This type is wide enough\n (holds the same number of bits)\n as the character-pointer type on the machine.\n \n-On most systems, this won't make a noticeable difference,\n-whereas on Alphas and other systems with 64-bit pointers,\n+On most machines, this won't make a difference,\n+whereas, on Alphas and other systems with 64-bit pointers,\n the @code{INTEGER(KIND=0)} type is equivalent to @code{INTEGER(KIND=2)}\n (often referred to as @code{INTEGER*8})\n instead of the more common @code{INTEGER(KIND=1)}\n@@ -3731,6 +3880,15 @@ A new group of intrinsics, @samp{gnu}, has been added\n to contain the new @code{REALPART}, @code{IMAGPART},\n and @code{COMPLEX} intrinsics.\n An old group, @samp{dcp}, has been removed.\n+\n+@item\n+Complain about industry-wide ambiguous references\n+@samp{REAL(@var{expr})} and @samp{AIMAG(@var{expr})},\n+where @var{expr} is @code{DOUBLE COMPLEX} (or any\n+complex type other than @code{COMPLEX}), unless\n+@samp{-ff90} option specifies Fortran 90 interpretation\n+or new @samp{-fugly-complex} option, in conjunction with\n+@samp{-fnot-f90}, specifies @code{f2c} interpretation.\n @end itemize\n \n @heading In 0.5.19:"}]}