{"sha": "bd9c1f8f189c00662eaf588134b01bfbd424b87e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmQ5YzFmOGYxODljMDA2NjJlYWY1ODgxMzRiMDFiZmJkNDI0Yjg3ZQ==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2010-12-15T22:55:53Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2010-12-15T22:55:53Z"}, "message": "tm.texi.in (US_SOFTWARE_GOFAST): Don't document.\n\n\t* doc/tm.texi.in (US_SOFTWARE_GOFAST): Don't document.\n\t* doc/tm.texi: Regenerate.\n\t* system.h (US_SOFTWARE_GOFAST): Poison.\n\t* config.gcc (enable_gofast): Don't handle.\n\t* config/gofast.h: Remove.\n\t* config/mips/t-gofast: Remove.\n\t* config/fp-bit.c (US_SOFTWARE_GOFAST): Don't handle.\n\t* config/fp-bit.h (US_SOFTWARE_GOFAST): Don't handle.\n\t* config/mips/elforion.h: Don't mention GOFAST in comment.\n\t* config/mips/mips.c: Don't include gofast.h.\n\t(mips_init_libfuncs): Don't call gofast_maybe_init_libfuncs.\n\t* config/mips/t-sr71k (dp-bit.c, fp-bit.c): Don't define\n\tUS_SOFTWARE_GOFAST.\n\t* config/sparc/sparc.c: Don't include gofast.h.\n\t(sparc_init_libfuncs): Don't call gofast_maybe_init_libfuncs.\n\t* config/spu/t-spu-elf (dp-bit.c, fp-bit.c): Don't undefine\n\tUS_SOFTWARE_GOFAST.\n\nFrom-SVN: r167880", "tree": {"sha": "9aa1ce2e66c7dabed41e2d67c9a9a8a5dd4279db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9aa1ce2e66c7dabed41e2d67c9a9a8a5dd4279db"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bd9c1f8f189c00662eaf588134b01bfbd424b87e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd9c1f8f189c00662eaf588134b01bfbd424b87e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd9c1f8f189c00662eaf588134b01bfbd424b87e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd9c1f8f189c00662eaf588134b01bfbd424b87e/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "73487f1ebc9ea83725076c7e95b6afbca56e54f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73487f1ebc9ea83725076c7e95b6afbca56e54f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73487f1ebc9ea83725076c7e95b6afbca56e54f4"}], "stats": {"total": 393, "additions": 92, "deletions": 301}, "files": [{"sha": "6daa1c8e68979b12e41262b87313ff2e08737b48", "filename": "gcc/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd9c1f8f189c00662eaf588134b01bfbd424b87e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd9c1f8f189c00662eaf588134b01bfbd424b87e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bd9c1f8f189c00662eaf588134b01bfbd424b87e", "patch": "@@ -1,3 +1,23 @@\n+2010-12-15  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* doc/tm.texi.in (US_SOFTWARE_GOFAST): Don't document.\n+\t* doc/tm.texi: Regenerate.\n+\t* system.h (US_SOFTWARE_GOFAST): Poison.\n+\t* config.gcc (enable_gofast): Don't handle.\n+\t* config/gofast.h: Remove.\n+\t* config/mips/t-gofast: Remove.\n+\t* config/fp-bit.c (US_SOFTWARE_GOFAST): Don't handle.\n+\t* config/fp-bit.h (US_SOFTWARE_GOFAST): Don't handle.\n+\t* config/mips/elforion.h: Don't mention GOFAST in comment.\n+\t* config/mips/mips.c: Don't include gofast.h.\n+\t(mips_init_libfuncs): Don't call gofast_maybe_init_libfuncs.\n+\t* config/mips/t-sr71k (dp-bit.c, fp-bit.c): Don't define\n+\tUS_SOFTWARE_GOFAST.\n+\t* config/sparc/sparc.c: Don't include gofast.h.\n+\t(sparc_init_libfuncs): Don't call gofast_maybe_init_libfuncs.\n+\t* config/spu/t-spu-elf (dp-bit.c, fp-bit.c): Don't undefine\n+\tUS_SOFTWARE_GOFAST.\n+\n 2010-12-14  Jan Hubicka  <jh@suse.cz>\n \n \t* tree.c (get_file_function_name): Avoid using random seed on GLOBAL_sub_I"}, {"sha": "886da50d32e65994a0a58debe56703934504cc92", "filename": "gcc/config.gcc", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd9c1f8f189c00662eaf588134b01bfbd424b87e/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd9c1f8f189c00662eaf588134b01bfbd424b87e/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=bd9c1f8f189c00662eaf588134b01bfbd424b87e", "patch": "@@ -3562,13 +3562,7 @@ case ${target} in\n \t\t\t\ttm_defines=\"TARGET_ENDIAN_DEFAULT=0 $tm_defines\"\n \t\t\t\t;;\n \t\tesac\n-\t\tif test \"x$enable_gofast\" = xyes\n-\t\tthen\n-\t\t\ttm_defines=\"US_SOFTWARE_GOFAST $tm_defines\"\n-\t\t\ttmake_file=\"mips/t-gofast $tmake_file\"\n-\t\telse\n-\t\t\ttmake_file=\"mips/t-mips $tmake_file\"\n-\t\tfi\n+\t\ttmake_file=\"mips/t-mips $tmake_file\"\n \t\t;;\n \n \tpowerpc*-*-* | rs6000-*-*)"}, {"sha": "82d924ec2bfa4f2b2b9e9fc926bd16f4bddee6a2", "filename": "gcc/config/fp-bit.c", "status": "modified", "additions": 3, "deletions": 17, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd9c1f8f189c00662eaf588134b01bfbd424b87e/gcc%2Fconfig%2Ffp-bit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd9c1f8f189c00662eaf588134b01bfbd424b87e/gcc%2Fconfig%2Ffp-bit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffp-bit.c?ref=bd9c1f8f189c00662eaf588134b01bfbd424b87e", "patch": "@@ -1,7 +1,7 @@\n /* This is a software floating point library which can be used\n    for targets without hardware floating point. \n    Copyright (C) 1994, 1995, 1996, 1997, 1998, 2000, 2001, 2002, 2003,\n-   2004, 2005, 2008, 2009 Free Software Foundation, Inc.\n+   2004, 2005, 2008, 2009, 2010 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -48,8 +48,6 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n      8-bit processors.\n    CMPtype: Specify the type that floating point compares should return.\n      This defaults to SItype, aka int.\n-   US_SOFTWARE_GOFAST: This makes all entry points use the same names as the\n-     US Software goFast library.\n    _DEBUG_BITFLOAT: This makes debugging the code a little easier, by adding\n      two integers to the FLO_union_type.\n    NO_DENORMALS: Disable handling of denormals.\n@@ -1179,8 +1177,6 @@ compare (FLO_type arg_a, FLO_type arg_b)\n }\n #endif /* L_compare_sf || L_compare_df */\n \n-#ifndef US_SOFTWARE_GOFAST\n-\n /* These should be optimized for their specific tasks someday.  */\n \n #if defined(L_eq_sf) || defined(L_eq_df) || defined(L_eq_tf)\n@@ -1308,8 +1304,6 @@ _le_f2 (FLO_type arg_a, FLO_type arg_b)\n }\n #endif /* L_le_sf || L_le_df */\n \n-#endif /* ! US_SOFTWARE_GOFAST */\n-\n #if defined(L_unord_sf) || defined(L_unord_df) || defined(L_unord_tf)\n CMPtype\n _unord_f2 (FLO_type arg_a, FLO_type arg_b)\n@@ -1434,14 +1428,7 @@ float_to_si (FLO_type arg_a)\n }\n #endif /* L_sf_to_si || L_df_to_si */\n \n-#if defined(L_sf_to_usi) || defined(L_df_to_usi) || defined(L_tf_to_usi)\n-#if defined US_SOFTWARE_GOFAST || defined(L_tf_to_usi)\n-/* While libgcc2.c defines its own __fixunssfsi and __fixunsdfsi routines,\n-   we also define them for GOFAST because the ones in libgcc2.c have the\n-   wrong names and I'd rather define these here and keep GOFAST CYG-LOC's\n-   out of libgcc2.c.  We can't define these here if not GOFAST because then\n-   there'd be duplicate copies.  */\n-\n+#if defined(L_tf_to_usi)\n USItype\n float_to_usi (FLO_type arg_a)\n {\n@@ -1471,8 +1458,7 @@ float_to_usi (FLO_type arg_a)\n   else\n     return a.fraction.ll >> ((FRACBITS + NGARDS) - a.normal_exp);\n }\n-#endif /* US_SOFTWARE_GOFAST */\n-#endif /* L_sf_to_usi || L_df_to_usi */\n+#endif /* L_tf_to_usi */\n \n #if defined(L_negate_sf) || defined(L_negate_df) || defined(L_negate_tf)\n FLO_type"}, {"sha": "f0b07e91fb60ee952c62a639d715f4492099ab80", "filename": "gcc/config/fp-bit.h", "status": "modified", "additions": 63, "deletions": 102, "changes": 165, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd9c1f8f189c00662eaf588134b01bfbd424b87e/gcc%2Fconfig%2Ffp-bit.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd9c1f8f189c00662eaf588134b01bfbd424b87e/gcc%2Fconfig%2Ffp-bit.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffp-bit.h?ref=bd9c1f8f189c00662eaf588134b01bfbd424b87e", "patch": "@@ -1,5 +1,6 @@\n /* Header file for fp-bit.c.  */\n-/* Copyright (C) 2000, 2002, 2003, 2006, 2009 Free Software Foundation, Inc.\n+/* Copyright (C) 2000, 2002, 2003, 2006, 2009, 2010\n+   Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -217,101 +218,67 @@ typedef unsigned int UTItype __attribute__ ((mode (TI)));\n \ttypedef DItype intfrac;\n #endif /* FLOAT */\n \n-#ifdef US_SOFTWARE_GOFAST\n-#\tifdef TFLOAT\n-#\t\terror \"GOFAST TFmode not supported\"\n-#\telif defined FLOAT\n-#\t\tdefine add \t\tfpadd\n-#\t\tdefine sub \t\tfpsub\n-#\t\tdefine multiply \tfpmul\n-#\t\tdefine divide \t\tfpdiv\n-#\t\tdefine compare \t\tfpcmp\n-#\t\tdefine _unord_f2\t__unordsf2\n-#\t\tdefine usi_to_float \t__floatunsisf\n-#\t\tdefine si_to_float \tsitofp\n-#\t\tdefine float_to_si \tfptosi\n-#\t\tdefine float_to_usi \tfptoui\n-#\t\tdefine negate \t\t__negsf2\n-#\t\tdefine sf_to_df\t\tfptodp\n-#\t\tdefine sf_to_tf\t\t__extendsftf2\n-#\telse\n-#\t\tdefine add \t\tdpadd\n-#\t\tdefine sub \t\tdpsub\n-#\t\tdefine multiply \tdpmul\n-#\t\tdefine divide \t\tdpdiv\n-#\t\tdefine compare \t\tdpcmp\n-#\t\tdefine _unord_f2\t__unorddf2\n-#\t\tdefine usi_to_float \t__floatunsidf\n-#\t\tdefine si_to_float \tlitodp\n-#\t\tdefine float_to_si \tdptoli\n-#\t\tdefine float_to_usi \tdptoul\n-#\t\tdefine negate \t\t__negdf2\n-#\t\tdefine df_to_sf \tdptofp\n-#\t\tdefine df_to_tf \t__extenddftf2\n-#\tendif /* FLOAT */\n+#ifdef TFLOAT\n+#\tdefine add \t\t__addtf3\n+#\tdefine sub \t\t__subtf3\n+#\tdefine multiply \t__multf3\n+#\tdefine divide \t\t__divtf3\n+#\tdefine compare \t\t__cmptf2\n+#\tdefine _eq_f2 \t\t__eqtf2\n+#\tdefine _ne_f2 \t\t__netf2\n+#\tdefine _gt_f2 \t\t__gttf2\n+#\tdefine _ge_f2 \t\t__getf2\n+#\tdefine _lt_f2 \t\t__lttf2\n+#\tdefine _le_f2 \t\t__letf2\n+#\tdefine _unord_f2\t__unordtf2\n+#\tdefine usi_to_float \t__floatunsitf\n+#\tdefine si_to_float \t__floatsitf\n+#\tdefine float_to_si \t__fixtfsi\n+#\tdefine float_to_usi \t__fixunstfsi\n+#\tdefine negate \t\t__negtf2\n+#\tdefine tf_to_sf\t\t__trunctfsf2\n+#\tdefine tf_to_df\t\t__trunctfdf2\n+#elif defined FLOAT\n+#\tdefine add \t\t__addsf3\n+#\tdefine sub \t\t__subsf3\n+#\tdefine multiply \t__mulsf3\n+#\tdefine divide \t\t__divsf3\n+#\tdefine compare \t\t__cmpsf2\n+#\tdefine _eq_f2 \t\t__eqsf2\n+#\tdefine _ne_f2 \t\t__nesf2\n+#\tdefine _gt_f2 \t\t__gtsf2\n+#\tdefine _ge_f2 \t\t__gesf2\n+#\tdefine _lt_f2 \t\t__ltsf2\n+#\tdefine _le_f2 \t\t__lesf2\n+#\tdefine _unord_f2\t__unordsf2\n+#\tdefine usi_to_float \t__floatunsisf\n+#\tdefine si_to_float \t__floatsisf\n+#\tdefine float_to_si \t__fixsfsi\n+#\tdefine float_to_usi \t__fixunssfsi\n+#\tdefine negate \t\t__negsf2\n+#\tdefine sf_to_df\t\t__extendsfdf2\n+#\tdefine sf_to_tf\t\t__extendsftf2\n #else\n-#\tifdef TFLOAT\n-#\t\tdefine add \t\t__addtf3\n-#\t\tdefine sub \t\t__subtf3\n-#\t\tdefine multiply \t__multf3\n-#\t\tdefine divide \t\t__divtf3\n-#\t\tdefine compare \t\t__cmptf2\n-#\t\tdefine _eq_f2 \t\t__eqtf2\n-#\t\tdefine _ne_f2 \t\t__netf2\n-#\t\tdefine _gt_f2 \t\t__gttf2\n-#\t\tdefine _ge_f2 \t\t__getf2\n-#\t\tdefine _lt_f2 \t\t__lttf2\n-#\t\tdefine _le_f2 \t\t__letf2\n-#\t\tdefine _unord_f2\t__unordtf2\n-#\t\tdefine usi_to_float \t__floatunsitf\n-#\t\tdefine si_to_float \t__floatsitf\n-#\t\tdefine float_to_si \t__fixtfsi\n-#\t\tdefine float_to_usi \t__fixunstfsi\n-#\t\tdefine negate \t\t__negtf2\n-#\t\tdefine tf_to_sf\t\t__trunctfsf2\n-#\t\tdefine tf_to_df\t\t__trunctfdf2\n-#\telif defined FLOAT\n-#\t\tdefine add \t\t__addsf3\n-#\t\tdefine sub \t\t__subsf3\n-#\t\tdefine multiply \t__mulsf3\n-#\t\tdefine divide \t\t__divsf3\n-#\t\tdefine compare \t\t__cmpsf2\n-#\t\tdefine _eq_f2 \t\t__eqsf2\n-#\t\tdefine _ne_f2 \t\t__nesf2\n-#\t\tdefine _gt_f2 \t\t__gtsf2\n-#\t\tdefine _ge_f2 \t\t__gesf2\n-#\t\tdefine _lt_f2 \t\t__ltsf2\n-#\t\tdefine _le_f2 \t\t__lesf2\n-#\t\tdefine _unord_f2\t__unordsf2\n-#\t\tdefine usi_to_float \t__floatunsisf\n-#\t\tdefine si_to_float \t__floatsisf\n-#\t\tdefine float_to_si \t__fixsfsi\n-#\t\tdefine float_to_usi \t__fixunssfsi\n-#\t\tdefine negate \t\t__negsf2\n-#\t\tdefine sf_to_df\t\t__extendsfdf2\n-#\t\tdefine sf_to_tf\t\t__extendsftf2\n-#\telse\n-#\t\tdefine add \t\t__adddf3\n-#\t\tdefine sub \t\t__subdf3\n-#\t\tdefine multiply \t__muldf3\n-#\t\tdefine divide \t\t__divdf3\n-#\t\tdefine compare \t\t__cmpdf2\n-#\t\tdefine _eq_f2 \t\t__eqdf2\n-#\t\tdefine _ne_f2 \t\t__nedf2\n-#\t\tdefine _gt_f2 \t\t__gtdf2\n-#\t\tdefine _ge_f2 \t\t__gedf2\n-#\t\tdefine _lt_f2 \t\t__ltdf2\n-#\t\tdefine _le_f2 \t\t__ledf2\n-#\t\tdefine _unord_f2\t__unorddf2\n-#\t\tdefine usi_to_float \t__floatunsidf\n-#\t\tdefine si_to_float \t__floatsidf\n-#\t\tdefine float_to_si \t__fixdfsi\n-#\t\tdefine float_to_usi \t__fixunsdfsi\n-#\t\tdefine negate \t\t__negdf2\n-#\t\tdefine df_to_sf\t\t__truncdfsf2\n-#\t\tdefine df_to_tf\t\t__extenddftf2\n-#\tendif /* FLOAT */\n-#endif /* US_SOFTWARE_GOFAST */\n+#\tdefine add \t\t__adddf3\n+#\tdefine sub \t\t__subdf3\n+#\tdefine multiply \t__muldf3\n+#\tdefine divide \t\t__divdf3\n+#\tdefine compare \t\t__cmpdf2\n+#\tdefine _eq_f2 \t\t__eqdf2\n+#\tdefine _ne_f2 \t\t__nedf2\n+#\tdefine _gt_f2 \t\t__gtdf2\n+#\tdefine _ge_f2 \t\t__gedf2\n+#\tdefine _lt_f2 \t\t__ltdf2\n+#\tdefine _le_f2 \t\t__ledf2\n+#\tdefine _unord_f2\t__unorddf2\n+#\tdefine usi_to_float \t__floatunsidf\n+#\tdefine si_to_float \t__floatsidf\n+#\tdefine float_to_si \t__fixdfsi\n+#\tdefine float_to_usi \t__fixunsdfsi\n+#\tdefine negate \t\t__negdf2\n+#\tdefine df_to_sf\t\t__truncdfsf2\n+#\tdefine df_to_tf\t\t__extenddftf2\n+#endif /* FLOAT */\n \n #ifndef INLINE\n #define INLINE __inline__\n@@ -437,8 +404,6 @@ extern int __fpcmp_parts (fp_number_type *, fp_number_type *);\n extern CMPtype compare (FLO_type, FLO_type);\n #endif\n \n-#ifndef US_SOFTWARE_GOFAST\n-\n #if defined(L_eq_sf) || defined(L_eq_df) || defined(L_eq_tf)\n extern CMPtype _eq_f2 (FLO_type, FLO_type);\n #endif\n@@ -467,8 +432,6 @@ extern CMPtype _le_f2 (FLO_type, FLO_type);\n extern CMPtype _unord_f2 (FLO_type, FLO_type);\n #endif\n \n-#endif /* ! US_SOFTWARE_GOFAST */\n-\n #if defined(L_si_to_sf) || defined(L_si_to_df) || defined(L_si_to_tf)\n extern FLO_type si_to_float (SItype);\n #endif\n@@ -477,11 +440,9 @@ extern FLO_type si_to_float (SItype);\n extern SItype float_to_si (FLO_type);\n #endif\n \n-#if defined(L_sf_to_usi) || defined(L_df_to_usi) || defined(L_tf_to_usi)\n-#if defined(US_SOFTWARE_GOFAST) || defined(L_tf_to_usi)\n+#if defined(L_tf_to_usi)\n extern USItype float_to_usi (FLO_type);\n #endif\n-#endif\n \n #if defined(L_usi_to_sf) || defined(L_usi_to_df) || defined(L_usi_to_tf)\n extern FLO_type usi_to_float (USItype);"}, {"sha": "69e9eddf00941996278003bc455a9fe2551fd333", "filename": "gcc/config/gofast.h", "status": "removed", "additions": 0, "deletions": 80, "changes": 80, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73487f1ebc9ea83725076c7e95b6afbca56e54f4/gcc%2Fconfig%2Fgofast.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73487f1ebc9ea83725076c7e95b6afbca56e54f4/gcc%2Fconfig%2Fgofast.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fgofast.h?ref=73487f1ebc9ea83725076c7e95b6afbca56e54f4", "patch": "@@ -1,80 +0,0 @@\n-/* US Software GOFAST floating point library support.\n-   Copyright (C) 1994, 1998, 1999, 2002, 2003, 2004, 2007\n-   Free Software Foundation, Inc.\n-\n-This file is part of GCC.\n-\n-GCC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 3, or (at your option)\n-any later version.\n-\n-GCC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GCC; see the file COPYING3.  If not see\n-<http://www.gnu.org/licenses/>.  */\n-\n-/* The US Software GOFAST library requires special optabs support.\n-   This file is intended to be included by config/ARCH/ARCH.c.  It\n-   defines one function, gofast_maybe_init_libfuncs, which should be\n-   called from the TARGET_INIT_LIBFUNCS hook.  When tm.h has defined\n-   US_SOFTWARE_GOFAST, this function will adjust all the optabs and\n-   libfuncs appropriately.  Otherwise it will do nothing.  */\n-\n-static void\n-gofast_maybe_init_libfuncs (void)\n-{\n-#ifdef US_SOFTWARE_GOFAST\n-  int mode;\n-\n-  set_optab_libfunc (add_optab, SFmode, \"fpadd\");\n-  set_optab_libfunc (add_optab, DFmode, \"dpadd\");\n-  set_optab_libfunc (sub_optab, SFmode, \"fpsub\");\n-  set_optab_libfunc (sub_optab, DFmode, \"dpsub\");\n-  set_optab_libfunc (smul_optab, SFmode, \"fpmul\");\n-  set_optab_libfunc (smul_optab, DFmode, \"dpmul\");\n-  set_optab_libfunc (sdiv_optab, SFmode, \"fpdiv\");\n-  set_optab_libfunc (sdiv_optab, DFmode, \"dpdiv\");\n-  set_optab_libfunc (cmp_optab, SFmode, \"fpcmp\");\n-  set_optab_libfunc (cmp_optab, DFmode, \"dpcmp\");\n-\n-  /* GOFAST does not provide libfuncs for negation, so we use the\n-     standard names.  */\n-\n-  /* GCC does not use fpcmp/dpcmp for gt or ge because its own\n-     FP-emulation library returns +1 for both > and unord.  So we\n-     leave gt and ge unset, such that, instead of fpcmp(a,b) >[=], we\n-     generate fpcmp(b,a) <[=] 0, which is unambiguous.  For unord\n-     libfuncs, we use our own functions, since GOFAST doesn't supply\n-     them.  */\n-\n-  set_optab_libfunc (eq_optab, SFmode, \"fpcmp\");\n-  set_optab_libfunc (ne_optab, SFmode, \"fpcmp\");\n-  set_optab_libfunc (gt_optab, SFmode, 0);\n-  set_optab_libfunc (ge_optab, SFmode, 0);\n-  set_optab_libfunc (lt_optab, SFmode, \"fpcmp\");\n-  set_optab_libfunc (le_optab, SFmode, \"fpcmp\");\n-\n-  set_optab_libfunc (eq_optab, DFmode, \"dpcmp\");\n-  set_optab_libfunc (ne_optab, DFmode, \"dpcmp\");\n-  set_optab_libfunc (gt_optab, DFmode, 0);\n-  set_optab_libfunc (ge_optab, DFmode, 0);\n-  set_optab_libfunc (lt_optab, DFmode, \"dpcmp\");\n-  set_optab_libfunc (le_optab, DFmode, \"dpcmp\");\n-\n-  set_conv_libfunc (sext_optab,   DFmode, SFmode, \"fptodp\");\n-  set_conv_libfunc (trunc_optab,  SFmode, DFmode, \"dptofp\");\n-\n-  set_conv_libfunc (sfix_optab,   SImode, SFmode, \"fptosi\");\n-  set_conv_libfunc (sfix_optab,   SImode, DFmode, \"dptoli\");\n-  set_conv_libfunc (ufix_optab,   SImode, SFmode, \"fptoui\");\n-  set_conv_libfunc (ufix_optab,   SImode, DFmode, \"dptoul\");\n-\n-  set_conv_libfunc (sfloat_optab, SFmode, SImode, \"sitofp\");\n-  set_conv_libfunc (sfloat_optab, DFmode, SImode, \"litodp\");\n-#endif\n-}"}, {"sha": "5560580c274b6b3da9efae6c104cf6bb85be1b6f", "filename": "gcc/config/mips/elforion.h", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd9c1f8f189c00662eaf588134b01bfbd424b87e/gcc%2Fconfig%2Fmips%2Felforion.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd9c1f8f189c00662eaf588134b01bfbd424b87e/gcc%2Fconfig%2Fmips%2Felforion.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Felforion.h?ref=bd9c1f8f189c00662eaf588134b01bfbd424b87e", "patch": "@@ -1,6 +1,5 @@\n-/* Definitions of target machine for GNU compiler.  MIPS ORION version with\n-   GOFAST floating point library.\n-   Copyright (C) 1994, 1998, 2007 Free Software Foundation, Inc.\n+/* Definitions of target machine for GNU compiler.  MIPS ORION version.\n+   Copyright (C) 1994, 1998, 2007, 2010 Free Software Foundation, Inc.\n \n This file is part of GCC.\n "}, {"sha": "883747ecba4950c2a54bfcb4edba919e1d4717b3", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd9c1f8f189c00662eaf588134b01bfbd424b87e/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd9c1f8f189c00662eaf588134b01bfbd424b87e/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=bd9c1f8f189c00662eaf588134b01bfbd424b87e", "patch": "@@ -11149,8 +11149,6 @@ mips_preferred_simd_mode (enum machine_mode mode ATTRIBUTE_UNUSED)\n \n /* Implement TARGET_INIT_LIBFUNCS.  */\n \n-#include \"config/gofast.h\"\n-\n static void\n mips_init_libfuncs (void)\n {\n@@ -11209,9 +11207,6 @@ mips_init_libfuncs (void)\n \t\t\t    \"__mips16_floatunsidf\");\n \t}\n     }\n-  else\n-    /* Register the gofast functions if selected using --enable-gofast.  */\n-    gofast_maybe_init_libfuncs ();\n \n   /* The MIPS16 ISA does not have an encoding for \"sync\", so we rely\n      on an external non-MIPS16 routine to implement __sync_synchronize.  */"}, {"sha": "ba5d61b85982f87051a77a5fb4061c66ab3c77b3", "filename": "gcc/config/mips/t-gofast", "status": "removed", "additions": 0, "deletions": 37, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73487f1ebc9ea83725076c7e95b6afbca56e54f4/gcc%2Fconfig%2Fmips%2Ft-gofast", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73487f1ebc9ea83725076c7e95b6afbca56e54f4/gcc%2Fconfig%2Fmips%2Ft-gofast", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Ft-gofast?ref=73487f1ebc9ea83725076c7e95b6afbca56e54f4", "patch": "@@ -1,37 +0,0 @@\n-# Copyright (C) 2002 Free Software Foundation, Inc.\n-#\n-# This file is part of GCC.\n-#\n-# GCC is free software; you can redistribute it and/or modify\n-# it under the terms of the GNU General Public License as published by\n-# the Free Software Foundation; either version 3, or (at your option)\n-# any later version.\n-#\n-# GCC is distributed in the hope that it will be useful,\n-# but WITHOUT ANY WARRANTY; without even the implied warranty of\n-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-# GNU General Public License for more details.\n-#\n-# You should have received a copy of the GNU General Public License\n-# along with GCC; see the file COPYING3.  If not see\n-# <http://www.gnu.org/licenses/>.\n-\n-# We want fine grained libraries, so use the new code to build the\n-# floating point emulation libraries.\n-FPBIT = fp-bit.c\n-DPBIT = dp-bit.c\n-\n-dp-bit.c: $(srcdir)/config/fp-bit.c\n-\techo '#ifdef __MIPSEL__' > dp-bit.c\n-\techo '#define FLOAT_BIT_ORDER_MISMATCH' >> dp-bit.c\n-\techo '#endif' >> dp-bit.c\n-\techo '#define US_SOFTWARE_GOFAST' >> dp-bit.c\n-\tcat $(srcdir)/config/fp-bit.c >> dp-bit.c\n-\n-fp-bit.c: $(srcdir)/config/fp-bit.c\n-\techo '#define FLOAT' > fp-bit.c\n-\techo '#ifdef __MIPSEL__' >> fp-bit.c\n-\techo '#define FLOAT_BIT_ORDER_MISMATCH' >> fp-bit.c\n-\techo '#endif' >> fp-bit.c\n-\techo '#define US_SOFTWARE_GOFAST' >> fp-bit.c\n-\tcat $(srcdir)/config/fp-bit.c >> fp-bit.c"}, {"sha": "5eb96a12e4392534e4b91bc35d94745b6966800a", "filename": "gcc/config/mips/t-sr71k", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd9c1f8f189c00662eaf588134b01bfbd424b87e/gcc%2Fconfig%2Fmips%2Ft-sr71k", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd9c1f8f189c00662eaf588134b01bfbd424b87e/gcc%2Fconfig%2Fmips%2Ft-sr71k", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Ft-sr71k?ref=bd9c1f8f189c00662eaf588134b01bfbd424b87e", "patch": "@@ -1,4 +1,4 @@\n-# Copyright (C) 2002, 2003 Free Software Foundation, Inc.\n+# Copyright (C) 2002, 2003, 2010 Free Software Foundation, Inc.\n #\n # This file is part of GCC.\n #\n@@ -49,15 +49,13 @@ dp-bit.c: $(srcdir)/config/fp-bit.c\n \techo '#ifdef __MIPSEL__' > dp-bit.c\n \techo '#define FLOAT_BIT_ORDER_MISMATCH' >> dp-bit.c\n \techo '#endif' >> dp-bit.c\n-\techo '#define US_SOFTWARE_GOFAST' >> dp-bit.c\n \tcat $(srcdir)/config/fp-bit.c >> dp-bit.c\n \n fp-bit.c: $(srcdir)/config/fp-bit.c\n \techo '#define FLOAT' > fp-bit.c\n \techo '#ifdef __MIPSEL__' >> fp-bit.c\n \techo '#define FLOAT_BIT_ORDER_MISMATCH' >> fp-bit.c\n \techo '#endif' >> fp-bit.c\n-\techo '#define US_SOFTWARE_GOFAST' >> fp-bit.c\n \tcat $(srcdir)/config/fp-bit.c >> fp-bit.c\n \n # Build the libraries for both hard and soft floating point"}, {"sha": "b37b8519b14307a14781babc894391fb2e282e35", "filename": "gcc/config/sparc/sparc.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd9c1f8f189c00662eaf588134b01bfbd424b87e/gcc%2Fconfig%2Fsparc%2Fsparc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd9c1f8f189c00662eaf588134b01bfbd424b87e/gcc%2Fconfig%2Fsparc%2Fsparc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.c?ref=bd9c1f8f189c00662eaf588134b01bfbd424b87e", "patch": "@@ -8466,7 +8466,6 @@ sparc_function_ok_for_sibcall (tree decl, tree exp ATTRIBUTE_UNUSED)\n }\n \f\n /* libfunc renaming.  */\n-#include \"config/gofast.h\"\n \n static void\n sparc_init_libfuncs (void)\n@@ -8560,8 +8559,6 @@ sparc_init_libfuncs (void)\n \t  set_conv_libfunc (ufix_optab, DImode, DFmode, \"__dtoul\");\n \t}\n     }\n-\n-  gofast_maybe_init_libfuncs ();\n }\n \f\n #define def_builtin(NAME, CODE, TYPE) \\"}, {"sha": "3bb54e428dd3841537f99155230fd5317e1605e7", "filename": "gcc/config/spu/t-spu-elf", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd9c1f8f189c00662eaf588134b01bfbd424b87e/gcc%2Fconfig%2Fspu%2Ft-spu-elf", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd9c1f8f189c00662eaf588134b01bfbd424b87e/gcc%2Fconfig%2Fspu%2Ft-spu-elf", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fspu%2Ft-spu-elf?ref=bd9c1f8f189c00662eaf588134b01bfbd424b87e", "patch": "@@ -1,4 +1,4 @@\n-#  Copyright (C) 2006, 2007, 2008, 2009 Free Software Foundation, Inc.\n+#  Copyright (C) 2006, 2007, 2008, 2009, 2010 Free Software Foundation, Inc.\n #\n #  This file is free software; you can redistribute it and/or modify it under\n #  the terms of the GNU General Public License as published by the Free\n@@ -55,12 +55,10 @@ FPBIT = fp-bit.c\n DPBIT = dp-bit.c\n \n dp-bit.c: $(srcdir)/config/fp-bit.c $(srcdir)/config/spu/t-spu-elf\n-\techo '#undef US_SOFTWARE_GOFAST' > dp-bit.c\n \tcat $(srcdir)/config/fp-bit.c >> dp-bit.c\n \n fp-bit.c: $(srcdir)/config/fp-bit.c $(srcdir)/config/spu/t-spu-elf\n \techo '#define FLOAT' > fp-bit.c\n-\techo '#undef US_SOFTWARE_GOFAST' >> fp-bit.c\n \tcat $(srcdir)/config/fp-bit.c >> fp-bit.c\n \n # Don't let CTOR_LIST end up in sdata section."}, {"sha": "da8d14bc82d336b23819dff3748fdc07a23daa66", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd9c1f8f189c00662eaf588134b01bfbd424b87e/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd9c1f8f189c00662eaf588134b01bfbd424b87e/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=bd9c1f8f189c00662eaf588134b01bfbd424b87e", "patch": "@@ -5268,26 +5268,6 @@ If this macro evaluates to @code{false} the comparison functions return\n in @file{libgcc.a}, you do not need to define this macro.\n @end defmac\n \n-@cindex US Software GOFAST, floating point emulation library\n-@cindex floating point emulation library, US Software GOFAST\n-@cindex GOFAST, floating point emulation library\n-@findex gofast_maybe_init_libfuncs\n-@defmac US_SOFTWARE_GOFAST\n-Define this macro if your system C library uses the US Software GOFAST\n-library to provide floating point emulation.\n-\n-In addition to defining this macro, your architecture must set\n-@code{TARGET_INIT_LIBFUNCS} to @code{gofast_maybe_init_libfuncs}, or\n-else call that function from its version of that hook.  It is defined\n-in @file{config/gofast.h}, which must be included by your\n-architecture's @file{@var{cpu}.c} file.  See @file{sparc/sparc.c} for\n-an example.\n-\n-If this macro is defined, the\n-@code{TARGET_FLOAT_LIB_COMPARE_RETURNS_BOOL} target hook must return\n-false for @code{SFmode} and @code{DFmode} comparisons.\n-@end defmac\n-\n @cindex @code{EDOM}, implicit usage\n @findex matherr\n @defmac TARGET_EDOM"}, {"sha": "050b163fb4a1259fac6cd2e131c08e8ea82f3f10", "filename": "gcc/doc/tm.texi.in", "status": "modified", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd9c1f8f189c00662eaf588134b01bfbd424b87e/gcc%2Fdoc%2Ftm.texi.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd9c1f8f189c00662eaf588134b01bfbd424b87e/gcc%2Fdoc%2Ftm.texi.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi.in?ref=bd9c1f8f189c00662eaf588134b01bfbd424b87e", "patch": "@@ -5250,26 +5250,6 @@ If this macro evaluates to @code{false} the comparison functions return\n in @file{libgcc.a}, you do not need to define this macro.\n @end defmac\n \n-@cindex US Software GOFAST, floating point emulation library\n-@cindex floating point emulation library, US Software GOFAST\n-@cindex GOFAST, floating point emulation library\n-@findex gofast_maybe_init_libfuncs\n-@defmac US_SOFTWARE_GOFAST\n-Define this macro if your system C library uses the US Software GOFAST\n-library to provide floating point emulation.\n-\n-In addition to defining this macro, your architecture must set\n-@code{TARGET_INIT_LIBFUNCS} to @code{gofast_maybe_init_libfuncs}, or\n-else call that function from its version of that hook.  It is defined\n-in @file{config/gofast.h}, which must be included by your\n-architecture's @file{@var{cpu}.c} file.  See @file{sparc/sparc.c} for\n-an example.\n-\n-If this macro is defined, the\n-@code{TARGET_FLOAT_LIB_COMPARE_RETURNS_BOOL} target hook must return\n-false for @code{SFmode} and @code{DFmode} comparisons.\n-@end defmac\n-\n @cindex @code{EDOM}, implicit usage\n @findex matherr\n @defmac TARGET_EDOM"}, {"sha": "5724c5ef03348d57f798d0358dcdc1f7c052b10e", "filename": "gcc/system.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd9c1f8f189c00662eaf588134b01bfbd424b87e/gcc%2Fsystem.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd9c1f8f189c00662eaf588134b01bfbd424b87e/gcc%2Fsystem.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsystem.h?ref=bd9c1f8f189c00662eaf588134b01bfbd424b87e", "patch": "@@ -822,7 +822,7 @@ extern void fancy_abort (const char *, int, const char *) ATTRIBUTE_NORETURN;\n \tSWITCH_CURTAILS_COMPILATION SWITCH_TAKES_ARG WORD_SWITCH_TAKES_ARG \\\n \tTARGET_OPTION_TRANSLATE_TABLE HANDLE_PRAGMA_PACK_PUSH_POP\t   \\\n \tHANDLE_SYSV_PRAGMA HANDLE_PRAGMA_WEAK CONDITIONAL_REGISTER_USAGE   \\\n-\tFUNCTION_ARG_BOUNDARY MUST_USE_SJLJ_EXCEPTIONS\n+\tFUNCTION_ARG_BOUNDARY MUST_USE_SJLJ_EXCEPTIONS US_SOFTWARE_GOFAST\n \n /* Hooks that are no longer used.  */\n  #pragma GCC poison LANG_HOOKS_FUNCTION_MARK LANG_HOOKS_FUNCTION_FREE\t\\"}]}