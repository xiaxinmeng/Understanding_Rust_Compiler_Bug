{"sha": "694cf0251226348b64d885cfb378f775ff2a0d58", "node_id": "C_kwDOANBUbNoAKDY5NGNmMDI1MTIyNjM0OGI2NGQ4ODVjZmIzNzhmNzc1ZmYyYTBkNTg", "commit": {"author": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2021-11-07T21:58:54Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2021-11-16T14:19:05Z"}, "message": "Fixup verify assigneee to be permissive of PathInExpression", "tree": {"sha": "10033ca155c58b4b5dcc4f2204cdd29d7e836e97", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/10033ca155c58b4b5dcc4f2204cdd29d7e836e97"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/694cf0251226348b64d885cfb378f775ff2a0d58", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/694cf0251226348b64d885cfb378f775ff2a0d58", "html_url": "https://github.com/Rust-GCC/gccrs/commit/694cf0251226348b64d885cfb378f775ff2a0d58", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/694cf0251226348b64d885cfb378f775ff2a0d58/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c47d5cbdee9b701fb7753b44530fcb51f80b20fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c47d5cbdee9b701fb7753b44530fcb51f80b20fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c47d5cbdee9b701fb7753b44530fcb51f80b20fa"}], "stats": {"total": 7, "additions": 7, "deletions": 0}, "files": [{"sha": "d362fe431de4676553de4e58e1e592614ff780e8", "filename": "gcc/rust/resolve/rust-ast-verify-assignee.h", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/694cf0251226348b64d885cfb378f775ff2a0d58/gcc%2Frust%2Fresolve%2Frust-ast-verify-assignee.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/694cf0251226348b64d885cfb378f775ff2a0d58/gcc%2Frust%2Fresolve%2Frust-ast-verify-assignee.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fresolve%2Frust-ast-verify-assignee.h?ref=694cf0251226348b64d885cfb378f775ff2a0d58", "patch": "@@ -75,6 +75,13 @@ class VerifyAsignee : public ResolverBase\n       }\n   }\n \n+  void visit (AST::DereferenceExpr &expr) override\n+  {\n+    expr.get_dereferenced_expr ()->accept_vis (*this);\n+  }\n+\n+  void visit (AST::PathInExpression &expr) override { ok = true; }\n+\n private:\n   VerifyAsignee (NodeId parent) : ResolverBase (parent), ok (false) {}\n "}]}