{"sha": "6d27d749d70f21c40b58918b9aca2cfbb2f8d5e4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmQyN2Q3NDlkNzBmMjFjNDBiNTg5MThiOWFjYTJjZmJiMmY4ZDVlNA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2015-10-28T10:07:03Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2015-10-28T10:07:03Z"}, "message": "common.opt (fchecking): New flag controlling flag_checking.\n\n2015-10-28  Richard Biener  <rguenther@suse.de>\n\n\t* common.opt (fchecking): New flag controlling flag_checking.\n\t* passes.c (verify_curr_properties): Drop DEBUG_FUNCTION.\n\t* timevar.c (timer::print): Adjust output.\n\t* doc/invoke.texi (fchecking): Document.\n\nFrom-SVN: r229480", "tree": {"sha": "627c9143b80f24e29686e3f31ed1c27d0dfb24c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/627c9143b80f24e29686e3f31ed1c27d0dfb24c7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6d27d749d70f21c40b58918b9aca2cfbb2f8d5e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d27d749d70f21c40b58918b9aca2cfbb2f8d5e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d27d749d70f21c40b58918b9aca2cfbb2f8d5e4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d27d749d70f21c40b58918b9aca2cfbb2f8d5e4/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "254b22cc79c594756343f645cbcf7163e39cf5b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/254b22cc79c594756343f645cbcf7163e39cf5b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/254b22cc79c594756343f645cbcf7163e39cf5b4"}], "stats": {"total": 37, "additions": 23, "deletions": 14}, "files": [{"sha": "416bc155c11862635f0ff58d6a8db5b5547784e5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d27d749d70f21c40b58918b9aca2cfbb2f8d5e4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d27d749d70f21c40b58918b9aca2cfbb2f8d5e4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6d27d749d70f21c40b58918b9aca2cfbb2f8d5e4", "patch": "@@ -1,3 +1,10 @@\n+2015-10-28  Richard Biener  <rguenther@suse.de>\n+\n+\t* common.opt (fchecking): New flag controlling flag_checking.\n+\t* passes.c (verify_curr_properties): Drop DEBUG_FUNCTION.\n+\t* timevar.c (timer::print): Adjust output.\n+\t* doc/invoke.texi (fchecking): Document.\n+\n 2015-10-28  Richard Biener  <rguenther@suse.de>\n \n \tPR middle-end/68067"}, {"sha": "961a1b63c47da7d29a497497102bd414f16175fb", "filename": "gcc/common.opt", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d27d749d70f21c40b58918b9aca2cfbb2f8d5e4/gcc%2Fcommon.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d27d749d70f21c40b58918b9aca2cfbb2f8d5e4/gcc%2Fcommon.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon.opt?ref=6d27d749d70f21c40b58918b9aca2cfbb2f8d5e4", "patch": "@@ -46,11 +46,6 @@ int optimize_fast\n Variable\n bool in_lto_p = false\n \n-; Enable additional checks of internal state consistency, which may slow\n-; the compiler down.\n-Variable\n-bool flag_checking = CHECKING_P\n-\n ; 0 means straightforward implementation of complex divide acceptable.\n ; 1 means wide ranges of inputs must work for complex divide.\n ; 2 means C99-like requirements for complex multiply and divide.\n@@ -1002,6 +997,10 @@ fcheck-new\n Common Var(flag_check_new)\n Check the return value of new in C++.\n \n+fchecking\n+Common Var(flag_checking) Init(CHECKING_P)\n+Perform internal consistency checkings.\n+\n fcombine-stack-adjustments\n Common Report Var(flag_combine_stack_adjustments) Optimization\n Looks for opportunities to reduce stack adjustments and stack references."}, {"sha": "76fdc31769d7f54ea88520e9c3f6bfea0c8a6059", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d27d749d70f21c40b58918b9aca2cfbb2f8d5e4/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d27d749d70f21c40b58918b9aca2cfbb2f8d5e4/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=6d27d749d70f21c40b58918b9aca2cfbb2f8d5e4", "patch": "@@ -310,7 +310,7 @@ Objective-C and Objective-C++ Dialects}.\n -fsanitize=@var{style} -fsanitize-recover -fsanitize-recover=@var{style} @gol\n -fasan-shadow-offset=@var{number} -fsanitize-sections=@var{s1},@var{s2},... @gol\n -fsanitize-undefined-trap-on-error @gol\n--fcheck-pointer-bounds -fchkp-check-incomplete-type @gol\n+-fcheck-pointer-bounds -fchecking -fchkp-check-incomplete-type @gol\n -fchkp-first-field-has-own-bounds -fchkp-narrow-bounds @gol\n -fchkp-narrow-to-innermost-array -fchkp-optimize @gol\n -fchkp-use-fast-string-functions -fchkp-use-nochk-string-functions @gol\n@@ -6145,6 +6145,12 @@ structure field attribute (@pxref{Type Attributes}) and\n functions for controlling the Pointer Bounds Checker.  @xref{Pointer\n Bounds Checker builtins}, for more information.\n \n+@item -fchecking\n+@opindex fchecking\n+@opindex fno-checking\n+Enable internal consistency checking.  The default depends on\n+the compiler configuration.\n+\n @item -fchkp-check-incomplete-type\n @opindex fchkp-check-incomplete-type\n @opindex fno-chkp-check-incomplete-type"}, {"sha": "82834ca1f5ce832db7b5f186daf156c3426bd083", "filename": "gcc/passes.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d27d749d70f21c40b58918b9aca2cfbb2f8d5e4/gcc%2Fpasses.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d27d749d70f21c40b58918b9aca2cfbb2f8d5e4/gcc%2Fpasses.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpasses.c?ref=6d27d749d70f21c40b58918b9aca2cfbb2f8d5e4", "patch": "@@ -2073,7 +2073,7 @@ clear_last_verified (function *fn, void *data ATTRIBUTE_UNUSED)\n /* Helper function. Verify that the properties has been turn into the\n    properties expected by the pass.  */\n \n-static void DEBUG_FUNCTION\n+static void\n verify_curr_properties (function *fn, void *data)\n {\n   unsigned int props = (size_t)data;"}, {"sha": "a0e1a0a3f1f917c66a910e9a34c51705b35c01e3", "filename": "gcc/timevar.c", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d27d749d70f21c40b58918b9aca2cfbb2f8d5e4/gcc%2Ftimevar.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d27d749d70f21c40b58918b9aca2cfbb2f8d5e4/gcc%2Ftimevar.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftimevar.c?ref=6d27d749d70f21c40b58918b9aca2cfbb2f8d5e4", "patch": "@@ -728,13 +728,10 @@ timer::print (FILE *fp)\n #endif\n   fprintf (fp, \"%8u kB\\n\", (unsigned) (total->ggc_mem >> 10));\n \n-  if (flag_checking)\n-    {\n-      fprintf (fp, \"Extra diagnostic checks enabled; \"\n-\t\t   \"compiler may run slowly.\\n\");\n-      fprintf (fp, \"Configure with --enable-checking=release \"\n-\t\t   \"to disable checks.\\n\");\n-    }\n+  if (CHECKING_P || flag_checking)\n+    fprintf (fp, \"Extra diagnostic checks enabled; compiler may run slowly.\\n\");\n+  if (CHECKING_P)\n+    fprintf (fp, \"Configure with --enable-checking=release to disable checks.\\n\");\n #ifndef ENABLE_ASSERT_CHECKING\n   fprintf (fp, \"Internal checks disabled; compiler is not suited for release.\\n\");\n   fprintf (fp, \"Configure with --enable-checking=release to enable checks.\\n\");"}]}