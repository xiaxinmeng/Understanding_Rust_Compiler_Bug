{"sha": "75eefe3fe069dc5affd43dd51acfff6c5a974f2d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzVlZWZlM2ZlMDY5ZGM1YWZmZDQzZGQ1MWFjZmZmNmM1YTk3NGYyZA==", "commit": {"author": {"name": "Ulrich Weigand", "email": "uweigand@de.ibm.com", "date": "2002-01-25T20:22:31Z"}, "committer": {"name": "Ulrich Weigand", "email": "uweigand@gcc.gnu.org", "date": "2002-01-25T20:22:31Z"}, "message": "reload1.c (eliminate_regs_in_insn): Recognize frame pointer adjustments even if...\n\n* reload1.c (eliminate_regs_in_insn): Recognize frame pointer\nadjustments even if they are implemented by more than two insns.\n\nFrom-SVN: r49221", "tree": {"sha": "c8f651042a043ae5af3976029b4e4fe3589fd046", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c8f651042a043ae5af3976029b4e4fe3589fd046"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/75eefe3fe069dc5affd43dd51acfff6c5a974f2d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75eefe3fe069dc5affd43dd51acfff6c5a974f2d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75eefe3fe069dc5affd43dd51acfff6c5a974f2d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75eefe3fe069dc5affd43dd51acfff6c5a974f2d/comments", "author": null, "committer": null, "parents": [{"sha": "5a133afd40b3a39a7d19ac1204d8d9849f671444", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a133afd40b3a39a7d19ac1204d8d9849f671444", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a133afd40b3a39a7d19ac1204d8d9849f671444"}], "stats": {"total": 57, "additions": 28, "deletions": 29}, "files": [{"sha": "bec4e64e324968c96fa555315118292ac3a95763", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75eefe3fe069dc5affd43dd51acfff6c5a974f2d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75eefe3fe069dc5affd43dd51acfff6c5a974f2d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=75eefe3fe069dc5affd43dd51acfff6c5a974f2d", "patch": "@@ -1,3 +1,8 @@\n+2002-01-25  Ulrich Weigand  <uweigand@de.ibm.com>\n+\n+\t* reload1.c (eliminate_regs_in_insn): Recognize frame pointer\n+\tadjustments even if they are implemented by more than two insns.\n+\n Fri Jan 25 20:43:56 CET 2002  Jan Hubicka  <jh@suse.cz>\n \n \t* df.c (df_ref_create, df_ref_record_1, df_ref_record): Kill BB argument."}, {"sha": "5211b5fcb367a7efa48a3ec13274abac3b437885", "filename": "gcc/reload1.c", "status": "modified", "additions": 23, "deletions": 29, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75eefe3fe069dc5affd43dd51acfff6c5a974f2d/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75eefe3fe069dc5affd43dd51acfff6c5a974f2d/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=75eefe3fe069dc5affd43dd51acfff6c5a974f2d", "patch": "@@ -2932,38 +2932,32 @@ eliminate_regs_in_insn (insn, replace)\n \t    if (ep->from == FRAME_POINTER_REGNUM\n \t\t&& ep->to == HARD_FRAME_POINTER_REGNUM)\n \t      {\n-\t\trtx src = SET_SRC (old_set);\n-\t\tint offset = 0, ok = 0;\n-\t\trtx prev_insn, prev_set;\n-\n-\t\tif (src == ep->to_rtx)\n-\t\t  offset = 0, ok = 1;\n-\t\telse if (GET_CODE (src) == PLUS\n-\t\t\t && GET_CODE (XEXP (src, 0)) == CONST_INT\n-\t\t\t && XEXP (src, 1) == ep->to_rtx)\n-\t\t  offset = INTVAL (XEXP (src, 0)), ok = 1;\n-\t\telse if (GET_CODE (src) == PLUS\n-\t\t\t && GET_CODE (XEXP (src, 1)) == CONST_INT\n-\t\t\t && XEXP (src, 0) == ep->to_rtx)\n-\t\t  offset = INTVAL (XEXP (src, 1)), ok = 1;\n-\t\telse if ((prev_insn = prev_nonnote_insn (insn)) != 0\n-\t\t\t && (prev_set = single_set (prev_insn)) != 0\n-\t\t\t && rtx_equal_p (SET_DEST (prev_set), src))\n+\t\trtx base = SET_SRC (old_set);\n+\t\trtx base_insn = insn;\n+\t\tint offset = 0;\n+\n+\t\twhile (base != ep->to_rtx)\n \t\t  {\n-\t\t    src = SET_SRC (prev_set);\n-\t\t    if (src == ep->to_rtx)\n-\t\t      offset = 0, ok = 1;\n-\t\t    else if (GET_CODE (src) == PLUS\n-\t\t\t     && GET_CODE (XEXP (src, 0)) == CONST_INT\n-\t\t\t     && XEXP (src, 1) == ep->to_rtx)\n-\t\t      offset = INTVAL (XEXP (src, 0)), ok = 1;\n-\t\t    else if (GET_CODE (src) == PLUS\n-\t\t\t     && GET_CODE (XEXP (src, 1)) == CONST_INT\n-\t\t\t     && XEXP (src, 0) == ep->to_rtx)\n-\t\t      offset = INTVAL (XEXP (src, 1)), ok = 1;\n+\t\t    rtx prev_insn, prev_set;\n+\n+\t\t    if (GET_CODE (base) == PLUS\n+\t\t        && GET_CODE (XEXP (base, 1)) == CONST_INT)\n+\t\t      {\n+\t\t        offset += INTVAL (XEXP (base, 1));\n+\t\t        base = XEXP (base, 0);\n+\t\t      }\n+\t\t    else if ((prev_insn = prev_nonnote_insn (base_insn)) != 0\n+\t\t\t     && (prev_set = single_set (prev_insn)) != 0\n+\t\t\t     && rtx_equal_p (SET_DEST (prev_set), base))\n+\t\t      {\n+\t\t        base = SET_SRC (prev_set);\n+\t\t        base_insn = prev_insn;\n+\t\t      }\n+\t\t    else\n+\t\t      break;\n \t\t  }\n \n-\t\tif (ok)\n+\t\tif (base == ep->to_rtx)\n \t\t  {\n \t\t    rtx src\n \t\t      = plus_constant (ep->to_rtx, offset - ep->offset);"}]}