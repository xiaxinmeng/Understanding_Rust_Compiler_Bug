{"sha": "90ef229674991eae3daa1a066d4608ffe146e3ad", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTBlZjIyOTY3NDk5MWVhZTNkYWExYTA2NmQ0NjA4ZmZlMTQ2ZTNhZA==", "commit": {"author": {"name": "Janis Johnson", "email": "janis187@us.ibm.com", "date": "2009-02-06T21:01:46Z"}, "committer": {"name": "Janis Johnson", "email": "janis@gcc.gnu.org", "date": "2009-02-06T21:01:46Z"}, "message": "re PR c/39035 (if( 0.0DF ) is considered true)\n\n\tPR c/39035\n\t* real.c (do_compare): Special-case compare of zero against\n\tdecimal float value.\n\n\t* gcc.dg/dfp/pr39035.c: New test.\n\nFrom-SVN: r143992", "tree": {"sha": "48c2fa1417f3cc8b1103a20746052eb2deaa3219", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/48c2fa1417f3cc8b1103a20746052eb2deaa3219"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/90ef229674991eae3daa1a066d4608ffe146e3ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90ef229674991eae3daa1a066d4608ffe146e3ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/90ef229674991eae3daa1a066d4608ffe146e3ad", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90ef229674991eae3daa1a066d4608ffe146e3ad/comments", "author": null, "committer": null, "parents": [{"sha": "4c51d57f4961ab2cab9a5772321c64cb04bf9412", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c51d57f4961ab2cab9a5772321c64cb04bf9412", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c51d57f4961ab2cab9a5772321c64cb04bf9412"}], "stats": {"total": 102, "additions": 101, "deletions": 1}, "files": [{"sha": "1e450105874404676dab5d7ab6f03bcc6b09fa85", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90ef229674991eae3daa1a066d4608ffe146e3ad/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90ef229674991eae3daa1a066d4608ffe146e3ad/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=90ef229674991eae3daa1a066d4608ffe146e3ad", "patch": "@@ -1,3 +1,9 @@\n+2009-02-06  Janis Johnson  <janis187@us.ibm.com>\n+\n+\tPR c/39035\n+\t* real.c (do_compare): Special-case compare of zero against\n+\tdecimal float value.\n+\n 2009-02-06  Joseph Myers  <joseph@codesourcery.com>\n \n \tPR c/36432"}, {"sha": "29fee8305e1ca49c37f930b79ac7a2676700719b", "filename": "gcc/real.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90ef229674991eae3daa1a066d4608ffe146e3ad/gcc%2Freal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90ef229674991eae3daa1a066d4608ffe146e3ad/gcc%2Freal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freal.c?ref=90ef229674991eae3daa1a066d4608ffe146e3ad", "patch": "@@ -905,15 +905,23 @@ do_compare (const REAL_VALUE_TYPE *a, const REAL_VALUE_TYPE *b,\n       /* Sign of zero doesn't matter for compares.  */\n       return 0;\n \n+    case CLASS2 (rvc_normal, rvc_zero):\n+      /* Decimal float zero is special and uses rvc_normal, not rvc_zero.  */\n+      if (a->decimal)\n+\treturn decimal_do_compare (a, b, nan_result);\n+      /* Fall through.  */\n     case CLASS2 (rvc_inf, rvc_zero):\n     case CLASS2 (rvc_inf, rvc_normal):\n-    case CLASS2 (rvc_normal, rvc_zero):\n       return (a->sign ? -1 : 1);\n \n     case CLASS2 (rvc_inf, rvc_inf):\n       return -a->sign - -b->sign;\n \n     case CLASS2 (rvc_zero, rvc_normal):\n+      /* Decimal float zero is special and uses rvc_normal, not rvc_zero.  */\n+      if (b->decimal)\n+\treturn decimal_do_compare (a, b, nan_result);\n+      /* Fall through.  */\n     case CLASS2 (rvc_zero, rvc_inf):\n     case CLASS2 (rvc_normal, rvc_inf):\n       return (b->sign ? 1 : -1);"}, {"sha": "bf0aca756ee907eb475c5a3c2843c299a31fb598", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90ef229674991eae3daa1a066d4608ffe146e3ad/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90ef229674991eae3daa1a066d4608ffe146e3ad/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=90ef229674991eae3daa1a066d4608ffe146e3ad", "patch": "@@ -1,3 +1,8 @@\n+2009-02-06  Janis Johnson  <janis187@us.ibm.com>\n+\n+\tPR c/39035\n+\t* gcc.dg/dfp/pr39035.c: New test.\n+\n 2009-02-06  Joseph Myers  <joseph@codesourcery.com>\n \n \tPR c/36432"}, {"sha": "2d44e06a432c2cc3f2187b17ae39395c691bbfb8", "filename": "gcc/testsuite/gcc.dg/dfp/pr39035.c", "status": "added", "additions": 81, "deletions": 0, "changes": 81, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90ef229674991eae3daa1a066d4608ffe146e3ad/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fpr39035.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90ef229674991eae3daa1a066d4608ffe146e3ad/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fpr39035.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fpr39035.c?ref=90ef229674991eae3daa1a066d4608ffe146e3ad", "patch": "@@ -0,0 +1,81 @@\n+/* { dg-do run } */\n+/* { dg-options \"-std=gnu99 -O\" } */\n+\n+/* DFP TR 24732 == WG14 / N1176, N1312 */\n+/* Based on a test from Fred Tydeman.  */\n+\n+extern void abort (void);\n+int failures = 0;\n+\n+#ifdef DBG\n+#include <stdio.h>\n+#define FAILURE(MSG) { printf (\"line %d: %s\\n\", __LINE__, MSG); failures++; }\n+#else\n+#define FAILURE(MSG) failures++;\n+#endif\n+\n+/* Test runtime computations.  */\n+\n+void\n+runtime32 (void)\n+{\n+  volatile _Decimal32 d;\n+  d = 0.0DF;\n+  if (d)\n+    FAILURE (\"0.0DF should be zero\")\n+}\n+\n+void\n+runtime64 (void)\n+{\n+  volatile _Decimal64 d;\n+  d = 0.0DD;\n+  if (d)\n+    FAILURE (\"0.0DD should be zero\")\n+}\n+\n+void\n+runtime128 (void)\n+{\n+  volatile _Decimal128 d;\n+  d = 0.0DL;\n+  if (d)\n+    FAILURE (\"0.0DL should be zero\")\n+}\n+\n+void\n+fold32 (void)\n+{\n+  if (0.0DF)\n+    FAILURE (\"0.0DF should be zero\")\n+}\n+\n+void\n+fold64 (void)\n+{\n+  if (0.0DD)\n+    FAILURE (\"0.0DD should be zero\")\n+}\n+\n+void\n+fold128 (void)\n+{\n+  if (0.0DL)\n+    FAILURE (\"0.0DL should be zero\")\n+}\n+\n+int\n+main(void)\n+{\n+  runtime32 ();\n+  runtime64 ();\n+  runtime128 ();\n+\n+  fold32 ();\n+  fold64 ();\n+  fold128 ();\n+\n+  if (failures != 0)\n+    abort ();\n+  return 0;\n+}"}]}