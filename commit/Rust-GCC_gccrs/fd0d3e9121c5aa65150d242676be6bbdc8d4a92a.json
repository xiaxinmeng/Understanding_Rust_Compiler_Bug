{"sha": "fd0d3e9121c5aa65150d242676be6bbdc8d4a92a", "node_id": "C_kwDOANBUbNoAKGZkMGQzZTkxMjFjNWFhNjUxNTBkMjQyNjc2YmU2YmJkYzhkNGE5MmE", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2022-04-28T20:50:06Z"}, "committer": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2022-04-29T19:07:57Z"}, "message": "c++: pedwarn for empty unnamed enum in decl [PR67048]\n\n[dcl.dcl]/5 says that\n\n  enum { };\n\nis ill-formed, and since r197742 we issue a pedwarn.  However, the\npedwarn also fires for\n\n   enum { } x;\n\nwhich is well-formed.  So only warn when {} is followed by a ;.  This\nshould be correct since you can't have \"enum {}, <whatever>\" -- that\nproduces \"expected unqualified-id before ',' token\".\n\n\tPR c++/67048\n\ngcc/cp/ChangeLog:\n\n\t* parser.cc (cp_parser_enum_specifier): Warn about empty unnamed enum\n\tonly when it's followed by a semicolon.\n\ngcc/testsuite/ChangeLog:\n\n\t* g++.dg/cpp0x/enum42.C: New test.", "tree": {"sha": "12f441f0f0de04633a08e1d00e26d6988b6c19a0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/12f441f0f0de04633a08e1d00e26d6988b6c19a0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fd0d3e9121c5aa65150d242676be6bbdc8d4a92a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd0d3e9121c5aa65150d242676be6bbdc8d4a92a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd0d3e9121c5aa65150d242676be6bbdc8d4a92a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd0d3e9121c5aa65150d242676be6bbdc8d4a92a/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8d0fcf135857869f7cff36d29bc3527c482372a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d0fcf135857869f7cff36d29bc3527c482372a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d0fcf135857869f7cff36d29bc3527c482372a9"}], "stats": {"total": 11, "additions": 10, "deletions": 1}, "files": [{"sha": "a5cbb3e896fc210d39d99be9f5c039f9cc1cd3dc", "filename": "gcc/cp/parser.cc", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd0d3e9121c5aa65150d242676be6bbdc8d4a92a/gcc%2Fcp%2Fparser.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd0d3e9121c5aa65150d242676be6bbdc8d4a92a/gcc%2Fcp%2Fparser.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.cc?ref=fd0d3e9121c5aa65150d242676be6bbdc8d4a92a", "patch": "@@ -21012,7 +21012,9 @@ cp_parser_enum_specifier (cp_parser* parser)\n       /* If the next token is not '}', then there are some enumerators.  */\n       else if (cp_lexer_next_token_is (parser->lexer, CPP_CLOSE_BRACE))\n \t{\n-\t  if (is_unnamed && !scoped_enum_p)\n+\t  if (is_unnamed && !scoped_enum_p\n+\t      /* Don't warn for enum {} a; here.  */\n+\t      && cp_lexer_nth_token_is (parser->lexer, 2, CPP_SEMICOLON))\n \t    pedwarn (type_start_token->location, OPT_Wpedantic,\n \t\t     \"ISO C++ forbids empty unnamed enum\");\n \t}"}, {"sha": "05b372a1947db9c106c63910fd767dd63b14947e", "filename": "gcc/testsuite/g++.dg/cpp0x/enum42.C", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd0d3e9121c5aa65150d242676be6bbdc8d4a92a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fenum42.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd0d3e9121c5aa65150d242676be6bbdc8d4a92a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fenum42.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fenum42.C?ref=fd0d3e9121c5aa65150d242676be6bbdc8d4a92a", "patch": "@@ -0,0 +1,7 @@\n+// PR c++/67048\n+// { dg-do compile { target c++11 } }\n+// { dg-options -Wpedantic }\n+\n+typedef enum {} X;\n+enum {} x;\n+enum {} y, z;"}]}