{"sha": "1b20e079b0e5eec9ebf708864a14e6b8f3a6003e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWIyMGUwNzliMGU1ZWVjOWViZjcwODg2NGExNGU2YjhmM2E2MDAzZQ==", "commit": {"author": {"name": "Steve Ellcey", "email": "sellcey@marvell.com", "date": "2019-01-22T22:37:34Z"}, "committer": {"name": "Steve Ellcey", "email": "sje@gcc.gnu.org", "date": "2019-01-22T22:37:34Z"}, "message": "c-c++-common/gomp/pr60823-1.c: Change aarch64-*-* target to aarch64*-*-* target.\n\n2018-01-22  Steve Ellcey  <sellcey@marvell.com>\n\n\tc-c++-common/gomp/pr60823-1.c: Change aarch64-*-* target\n\tto aarch64*-*-* target.\n\tc-c++-common/gomp/pr60823-3.c: Ditto.\n\tg++.dg/gomp/declare-simd-1.C: Ditto.\n\tg++.dg/gomp/declare-simd-3.C: Ditto.\n\tg++.dg/gomp/declare-simd-4.C: Ditto.\n\tg++.dg/gomp/declare-simd-7.C: Ditto.\n\tg++.dg/gomp/pr88182.C: Ditto.\n\tgcc.dg/gomp/declare-simd-1.c: Ditto.\n\tgcc.dg/gomp/declare-simd-3.c: Ditto.\n\tgcc.dg/gomp/pr59669-2.c: Ditto.\n\tgcc.dg/gomp/pr87895-1.c: Ditto.\n\tgcc.dg/gomp/simd-clones-2.c: Ditto.\n\tgfortran.dg/gomp/declare-simd-2.f90: Ditto.\n\tgfortran.dg/gomp/pr79154-1.f90: Ditto.\n\tgfortran.dg/gomp/pr83977.f90: Ditto.\n\nFrom-SVN: r268168", "tree": {"sha": "859dbaca44eb0a9a271695a94e6b31b7086ed115", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/859dbaca44eb0a9a271695a94e6b31b7086ed115"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1b20e079b0e5eec9ebf708864a14e6b8f3a6003e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b20e079b0e5eec9ebf708864a14e6b8f3a6003e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b20e079b0e5eec9ebf708864a14e6b8f3a6003e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b20e079b0e5eec9ebf708864a14e6b8f3a6003e/comments", "author": null, "committer": null, "parents": [{"sha": "c21af61d6d6f4879e282f5f6742ea6a1ef9f41a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c21af61d6d6f4879e282f5f6742ea6a1ef9f41a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c21af61d6d6f4879e282f5f6742ea6a1ef9f41a3"}], "stats": {"total": 97, "additions": 58, "deletions": 39}, "files": [{"sha": "17fad73ab6ca2b316c9708f316c1d1b66b29e74e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b20e079b0e5eec9ebf708864a14e6b8f3a6003e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b20e079b0e5eec9ebf708864a14e6b8f3a6003e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1b20e079b0e5eec9ebf708864a14e6b8f3a6003e", "patch": "@@ -1,3 +1,22 @@\n+2018-01-22  Steve Ellcey  <sellcey@marvell.com>\n+\n+\tc-c++-common/gomp/pr60823-1.c: Change aarch64-*-* target\n+\tto aarch64*-*-* target.\n+\tc-c++-common/gomp/pr60823-3.c: Ditto.\n+\tg++.dg/gomp/declare-simd-1.C: Ditto.\n+\tg++.dg/gomp/declare-simd-3.C: Ditto.\n+\tg++.dg/gomp/declare-simd-4.C: Ditto.\n+\tg++.dg/gomp/declare-simd-7.C: Ditto.\n+\tg++.dg/gomp/pr88182.C: Ditto.\n+\tgcc.dg/gomp/declare-simd-1.c: Ditto.\n+\tgcc.dg/gomp/declare-simd-3.c: Ditto.\n+\tgcc.dg/gomp/pr59669-2.c: Ditto.\n+\tgcc.dg/gomp/pr87895-1.c: Ditto.\n+\tgcc.dg/gomp/simd-clones-2.c: Ditto.\n+\tgfortran.dg/gomp/declare-simd-2.f90: Ditto.\n+\tgfortran.dg/gomp/pr79154-1.f90: Ditto.\n+\tgfortran.dg/gomp/pr83977.f90: Ditto.\n+\n 2019-01-22  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/88965"}, {"sha": "2cc44e82c3cffa259003fa5fdbe8edd6b688d23e", "filename": "gcc/testsuite/c-c++-common/gomp/pr60823-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b20e079b0e5eec9ebf708864a14e6b8f3a6003e/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fpr60823-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b20e079b0e5eec9ebf708864a14e6b8f3a6003e/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fpr60823-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fpr60823-1.c?ref=1b20e079b0e5eec9ebf708864a14e6b8f3a6003e", "patch": "@@ -17,4 +17,4 @@ foo (const double c1, const double c2)\n     }\n   return res;\n }\n-/* { dg-warning \"GCC does not currently support mixed size types for 'simd' functions\" \"\" { target aarch64-*-* } .-13 } */\n+/* { dg-warning \"GCC does not currently support mixed size types for 'simd' functions\" \"\" { target aarch64*-*-* } .-13 } */"}, {"sha": "56ad50c41f6edeced26deaa57aea592f12c5edb1", "filename": "gcc/testsuite/c-c++-common/gomp/pr60823-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b20e079b0e5eec9ebf708864a14e6b8f3a6003e/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fpr60823-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b20e079b0e5eec9ebf708864a14e6b8f3a6003e/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fpr60823-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fpr60823-3.c?ref=1b20e079b0e5eec9ebf708864a14e6b8f3a6003e", "patch": "@@ -28,6 +28,6 @@ foo (double c1, double c2)\n   baz (*(struct S *)&c1, *(struct S *)&c2);\n   return c1 + c2 + ((struct S *)&c1)->c[1];\n }\n-/* { dg-warning \"GCC does not currently support mixed size types for 'simd' functions\" \"\" { target aarch64-*-* } .-16 } */\n+/* { dg-warning \"GCC does not currently support mixed size types for 'simd' functions\" \"\" { target aarch64*-*-* } .-16 } */\n \n #endif"}, {"sha": "dcffaec9696eb9f93233199bdb9586d60fb120b6", "filename": "gcc/testsuite/g++.dg/gomp/declare-simd-1.C", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b20e079b0e5eec9ebf708864a14e6b8f3a6003e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fdeclare-simd-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b20e079b0e5eec9ebf708864a14e6b8f3a6003e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fdeclare-simd-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fdeclare-simd-1.C?ref=1b20e079b0e5eec9ebf708864a14e6b8f3a6003e", "patch": "@@ -14,7 +14,7 @@ int f2 (int a, int *b, int c)\n   return a + *b + c;\n }\n \n-// { dg-warning \"GCC does not currently support mixed size types for 'simd' functions\" \"\" { target aarch64-*-* } .-5 }\n+// { dg-warning \"GCC does not currently support mixed size types for 'simd' functions\" \"\" { target aarch64*-*-* } .-5 }\n // { dg-final { scan-assembler-times \"_ZGVbM8uva32l4__Z2f2iPii:\" 1 { target { i?86-*-* x86_64-*-* } } } }\n // { dg-final { scan-assembler-times \"_ZGVbN8uva32l4__Z2f2iPii:\" 1 { target { i?86-*-* x86_64-*-* } } } }\n // { dg-final { scan-assembler-times \"_ZGVcM8uva32l4__Z2f2iPii:\" 1 { target { i?86-*-* x86_64-*-* } } } }\n@@ -90,8 +90,8 @@ namespace N1\n // { dg-final { scan-assembler-times \"_ZGVdN2va16__ZN2N12N23f10EPx:\" 1 { target { i?86-*-* x86_64-*-* } } } }\n // { dg-final { scan-assembler-times \"_ZGVeM2va16__ZN2N12N23f10EPx:\" 1 { target { i?86-*-* x86_64-*-* } } } }\n // { dg-final { scan-assembler-times \"_ZGVeN2va16__ZN2N12N23f10EPx:\" 1 { target { i?86-*-* x86_64-*-* } } } }\n-// { dg-final { scan-assembler-times \"_ZGVnM2va16__ZN2N12N23f10EPx:\" 1 { target { aarch64-*-* } } } }\n-// { dg-final { scan-assembler-times \"_ZGVnN2va16__ZN2N12N23f10EPx:\" 1 { target { aarch64-*-* } } } }\n+// { dg-final { scan-assembler-times \"_ZGVnM2va16__ZN2N12N23f10EPx:\" 1 { target { aarch64*-*-* } } } }\n+// { dg-final { scan-assembler-times \"_ZGVnN2va16__ZN2N12N23f10EPx:\" 1 { target { aarch64*-*-* } } } }\n \n struct A\n {\n@@ -194,7 +194,7 @@ int B<int>::f25<7> (int a, int *b, int c)\n   return a + *b + c;\n }\n \n-// { dg-warning \"GCC does not currently support mixed size types for 'simd' functions\" \"\" { target aarch64-*-* } .-5 }\n+// { dg-warning \"GCC does not currently support mixed size types for 'simd' functions\" \"\" { target aarch64*-*-* } .-5 }\n // { dg-final { scan-assembler-times \"_ZGVbM8vuva32u__ZN1BIiE3f25ILi7EEEiiPii:\" 1 { target { i?86-*-* x86_64-*-* } } } }\n // { dg-final { scan-assembler-times \"_ZGVbN8vuva32u__ZN1BIiE3f25ILi7EEEiiPii:\" 1 { target { i?86-*-* x86_64-*-* } } } }\n // { dg-final { scan-assembler-times \"_ZGVcM8vuva32u__ZN1BIiE3f25ILi7EEEiiPii:\" 1 { target { i?86-*-* x86_64-*-* } } } }\n@@ -212,7 +212,7 @@ int B<int>::f26<-1> (int a, int *b, int c)\n   return a + *b + c;\n }\n \n-// { dg-warning \"GCC does not currently support mixed size types for 'simd' functions\" \"\" { target aarch64-*-* } .-5 }\n+// { dg-warning \"GCC does not currently support mixed size types for 'simd' functions\" \"\" { target aarch64*-*-* } .-5 }\n // { dg-final { scan-assembler-times \"_ZGVbM4vl2va32__ZN1BIiE3f26ILin1EEEiiPii:\" 1 { target { i?86-*-* x86_64-*-* } } } }\n // { dg-final { scan-assembler-times \"_ZGVbN4vl2va32__ZN1BIiE3f26ILin1EEEiiPii:\" 1 { target { i?86-*-* x86_64-*-* } } } }\n // { dg-final { scan-assembler-times \"_ZGVcM4vl2va32__ZN1BIiE3f26ILin1EEEiiPii:\" 1 { target { i?86-*-* x86_64-*-* } } } }\n@@ -244,7 +244,7 @@ f30 (int x)\n   return x;\n }\n \n-// { dg-warning \"GCC does not currently support simdlen 16 for type 'int'\" \"\" { target aarch64-*-* } .-7 }\n+// { dg-warning \"GCC does not currently support simdlen 16 for type 'int'\" \"\" { target aarch64*-*-* } .-7 }\n // { dg-final { scan-assembler-times \"_ZGVbM16v__Z3f30i:\" 1 { target { i?86-*-* x86_64-*-* } } } }\n // { dg-final { scan-assembler-times \"_ZGVbN16v__Z3f30i:\" 1 { target { i?86-*-* x86_64-*-* } } } }\n // { dg-final { scan-assembler-times \"_ZGVcM16v__Z3f30i:\" 1 { target { i?86-*-* x86_64-*-* } } } }\n@@ -287,7 +287,7 @@ struct D\n   int f37 (int a);\n   int e;\n };\n-// { dg-warning \"GCC does not currently support simdlen 16 for type 'int'\" \"\" { target aarch64-*-* } .-3 }\n+// { dg-warning \"GCC does not currently support simdlen 16 for type 'int'\" \"\" { target aarch64*-*-* } .-3 }\n \n void\n f38 (D &d)"}, {"sha": "ee4ab6febd0dfc727e57fce9438b2e9001075155", "filename": "gcc/testsuite/g++.dg/gomp/declare-simd-3.C", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b20e079b0e5eec9ebf708864a14e6b8f3a6003e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fdeclare-simd-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b20e079b0e5eec9ebf708864a14e6b8f3a6003e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fdeclare-simd-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fdeclare-simd-3.C?ref=1b20e079b0e5eec9ebf708864a14e6b8f3a6003e", "patch": "@@ -13,7 +13,7 @@ int f1 (int a, int b, int c, int &d, int &e, int &f)\n   return a + b + c + d + e + f;\n }\n \n-// { dg-warning \"GCC does not currently support mixed size types for 'simd' functions\" \"\" { target aarch64-*-* } .-11 }\n+// { dg-warning \"GCC does not currently support mixed size types for 'simd' functions\" \"\" { target aarch64*-*-* } .-11 }\n // { dg-final { scan-assembler-times \"_ZGVbM4vulLUR4__Z2f1iiiRiS_S_:\" 1 { target { i?86-*-* x86_64-*-* } } } }\n // { dg-final { scan-assembler-times \"_ZGVbN4vulLUR4__Z2f1iiiRiS_S_:\" 1 { target { i?86-*-* x86_64-*-* } } } }\n // { dg-final { scan-assembler-times \"_ZGVcM4vulLUR4__Z2f1iiiRiS_S_:\" 1 { target { i?86-*-* x86_64-*-* } } } }\n@@ -42,7 +42,7 @@ int f2 (int a, int b, int c, int &d, int &e, int &f)\n   return a + b + c + d + e + f;\n }\n \n-// { dg-warning \"GCC does not currently support mixed size types for 'simd' functions\" \"\" { target aarch64-*-* } .-17 }\n+// { dg-warning \"GCC does not currently support mixed size types for 'simd' functions\" \"\" { target aarch64*-*-* } .-17 }\n // { dg-final { scan-assembler-times \"_ZGVbM4vulLUR4__Z2f2iiiRiS_S_:\" 1 { target { i?86-*-* x86_64-*-* } } } }\n // { dg-final { scan-assembler-times \"_ZGVbN4vulLUR4__Z2f2iiiRiS_S_:\" 1 { target { i?86-*-* x86_64-*-* } } } }\n // { dg-final { scan-assembler-times \"_ZGVcM4vulLUR4__Z2f2iiiRiS_S_:\" 1 { target { i?86-*-* x86_64-*-* } } } }\n@@ -58,7 +58,7 @@ int f3 (const int a, const int b, const int c, const int &d, const int &e, const\n   return a + b + c + d + e + f;\n }\n \n-// { dg-warning \"GCC does not currently support mixed size types for 'simd' functions\" \"\" { target aarch64-*-* } .-5 }\n+// { dg-warning \"GCC does not currently support mixed size types for 'simd' functions\" \"\" { target aarch64*-*-* } .-5 }\n // { dg-final { scan-assembler-times \"_ZGVbM4vulLUR4__Z2f3iiiRKiS0_S0_:\" 1 { target { i?86-*-* x86_64-*-* } } } }\n // { dg-final { scan-assembler-times \"_ZGVbN4vulLUR4__Z2f3iiiRKiS0_S0_:\" 1 { target { i?86-*-* x86_64-*-* } } } }\n // { dg-final { scan-assembler-times \"_ZGVcM4vulLUR4__Z2f3iiiRKiS0_S0_:\" 1 { target { i?86-*-* x86_64-*-* } } } }\n@@ -80,7 +80,7 @@ int f4 (const int a, const int b, const int c, const int &d, const int &e, const\n   return a + b + c + d + e + f;\n }\n \n-// { dg-warning \"GCC does not currently support mixed size types for 'simd' functions\" \"\" { target aarch64-*-* } .-11 }\n+// { dg-warning \"GCC does not currently support mixed size types for 'simd' functions\" \"\" { target aarch64*-*-* } .-11 }\n // { dg-final { scan-assembler-times \"_ZGVbM4vulLUR4__Z2f4iiiRKiS0_S0_:\" 1 { target { i?86-*-* x86_64-*-* } } } }\n // { dg-final { scan-assembler-times \"_ZGVbN4vulLUR4__Z2f4iiiRKiS0_S0_:\" 1 { target { i?86-*-* x86_64-*-* } } } }\n // { dg-final { scan-assembler-times \"_ZGVcM4vulLUR4__Z2f4iiiRKiS0_S0_:\" 1 { target { i?86-*-* x86_64-*-* } } } }"}, {"sha": "d76defbc93319e94e23086250defc65758af18fc", "filename": "gcc/testsuite/g++.dg/gomp/declare-simd-4.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b20e079b0e5eec9ebf708864a14e6b8f3a6003e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fdeclare-simd-4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b20e079b0e5eec9ebf708864a14e6b8f3a6003e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fdeclare-simd-4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fdeclare-simd-4.C?ref=1b20e079b0e5eec9ebf708864a14e6b8f3a6003e", "patch": "@@ -5,7 +5,7 @@ f1 (int *p, int *q, short *s)\n   return *p + *q + *s;\n }\n \n-// { dg-warning \"GCC does not currently support mixed size types for 'simd' functions\" \"\" { target aarch64-*-* } .-5 }\n+// { dg-warning \"GCC does not currently support mixed size types for 'simd' functions\" \"\" { target aarch64*-*-* } .-5 }\n // { dg-final { scan-assembler-times \"_ZGVbM4l4ln4ln6__Z2f1PiS_Ps:\" 1 { target { i?86-*-* x86_64-*-* } } } }\n // { dg-final { scan-assembler-times \"_ZGVbN4l4ln4ln6__Z2f1PiS_Ps:\" 1 { target { i?86-*-* x86_64-*-* } } } }\n // { dg-final { scan-assembler-times \"_ZGVcM4l4ln4ln6__Z2f1PiS_Ps:\" 1 { target { i?86-*-* x86_64-*-* } } } }\n@@ -22,7 +22,7 @@ f2 (int *p, short *q, int s, int r, int &t)\n   return *p + *q + r;\n }\n \n-// { dg-warning \"GCC does not currently support mixed size types for 'simd' functions\" \"\" { target aarch64-*-* } .-5 }\n+// { dg-warning \"GCC does not currently support mixed size types for 'simd' functions\" \"\" { target aarch64*-*-* } .-5 }\n // { dg-final { scan-assembler-times \"_ZGVbN8ls2ls4uls2u__Z2f2PiPsiiRi:\" 1 { target { i?86-*-* x86_64-*-* } } } }\n // { dg-final { scan-assembler-times \"_ZGVcN8ls2ls4uls2u__Z2f2PiPsiiRi:\" 1 { target { i?86-*-* x86_64-*-* } } } }\n // { dg-final { scan-assembler-times \"_ZGVdN8ls2ls4uls2u__Z2f2PiPsiiRi:\" 1 { target { i?86-*-* x86_64-*-* } } } }\n@@ -35,7 +35,7 @@ f3 (int &p, short &q, int s, int &r, int &t)\n   return p + q + r;\n }\n \n-// { dg-warning \"GCC does not currently support mixed size types for 'simd' functions\" \"\" { target aarch64-*-* } .-5 }\n+// { dg-warning \"GCC does not currently support mixed size types for 'simd' functions\" \"\" { target aarch64*-*-* } .-5 }\n // { dg-final { scan-assembler-times \"_ZGVbN8Rs2Ls4uUs2u__Z2f3RiRsiS_S_:\" 1 { target { i?86-*-* x86_64-*-* } } } }\n // { dg-final { scan-assembler-times \"_ZGVcN8Rs2Ls4uUs2u__Z2f3RiRsiS_S_:\" 1 { target { i?86-*-* x86_64-*-* } } } }\n // { dg-final { scan-assembler-times \"_ZGVdN8Rs2Ls4uUs2u__Z2f3RiRsiS_S_:\" 1 { target { i?86-*-* x86_64-*-* } } } }"}, {"sha": "373be28ebd325b254b1f467c2ad761479e26685b", "filename": "gcc/testsuite/g++.dg/gomp/declare-simd-7.C", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b20e079b0e5eec9ebf708864a14e6b8f3a6003e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fdeclare-simd-7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b20e079b0e5eec9ebf708864a14e6b8f3a6003e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fdeclare-simd-7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fdeclare-simd-7.C?ref=1b20e079b0e5eec9ebf708864a14e6b8f3a6003e", "patch": "@@ -18,7 +18,7 @@ foo1 (int a, int b, float c, S d, int *e, int f, int &g, int &h, int &i, int j,\n {\n   return bar1 (a, b, c, d, e, f, g, h, i, j, k);\n }\n-// { dg-warning \"GCC does not currently support mixed size types for 'simd' functions\" \"\" { target aarch64-*-* } .-4 }\n+// { dg-warning \"GCC does not currently support mixed size types for 'simd' functions\" \"\" { target aarch64*-*-* } .-4 }\n \n #pragma omp declare simd inbranch uniform (b, c, d, e) aligned (e : 16) \\\n \t\t    linear (f : 2) linear (ref (g) : 1) \\\n@@ -29,7 +29,7 @@ foo2 (int a, int b, float c, S d, int *e, int f, int &g, int &h, int &i, int j,\n {\n   return bar2 (a, b, c, d, e, f, g, h, i, j, k);\n }\n-// { dg-warning \"GCC does not currently support mixed size types for 'simd' functions\" \"\" { target aarch64-*-* } .-4 }\n+// { dg-warning \"GCC does not currently support mixed size types for 'simd' functions\" \"\" { target aarch64*-*-* } .-4 }\n \n #pragma omp declare simd notinbranch uniform (b, c, d, e) aligned (e : 16) \\\n \t\t    linear (f : 2) linear (ref (g) : 1) \\\n@@ -40,7 +40,7 @@ foo3 (int a, int b, float c, S d, int *e, int f, int &g, int &h, int &i, int j,\n {\n   return bar3 (a, b, c, d, e, f, g, h, i, j, k);\n }\n-// { dg-warning \"GCC does not currently support mixed size types for 'simd' functions\" \"\" { target aarch64-*-* } .-4 }\n+// { dg-warning \"GCC does not currently support mixed size types for 'simd' functions\" \"\" { target aarch64*-*-* } .-4 }\n \n #pragma omp declare simd inbranch uniform (b, c, d, e) aligned (e : 16) \\\n \t\t    linear (f : 2) linear (ref (g) : 1) \\\n@@ -51,4 +51,4 @@ foo4 (int a, int b, float c, S d, int *e, int f, int &g, int &h, int &i, int j,\n {\n   return bar4 (a, b, c, d, e, f, g, h, i, j, k);\n }\n-// { dg-warning \"GCC does not currently support mixed size types for 'simd' functions\" \"\" { target aarch64-*-* } .-4 }\n+// { dg-warning \"GCC does not currently support mixed size types for 'simd' functions\" \"\" { target aarch64*-*-* } .-4 }"}, {"sha": "504f50376408543d4bbce55dbcc8f0f06b0fd805", "filename": "gcc/testsuite/g++.dg/gomp/pr88182.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b20e079b0e5eec9ebf708864a14e6b8f3a6003e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fpr88182.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b20e079b0e5eec9ebf708864a14e6b8f3a6003e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fpr88182.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fpr88182.C?ref=1b20e079b0e5eec9ebf708864a14e6b8f3a6003e", "patch": "@@ -18,7 +18,7 @@ foo (double c1, double c2)\n     }\n   return res;\n }\n-// { dg-warning \"GCC does not currently support mixed size types for 'simd' functions\" \"\" { target aarch64-*-* } .-15 }\n+// { dg-warning \"GCC does not currently support mixed size types for 'simd' functions\" \"\" { target aarch64*-*-* } .-15 }\n \n __attribute__((noinline, noclone)) void\n bar (double *x, double *y)"}, {"sha": "add322873e64590ff3187f20907687ef34991fcb", "filename": "gcc/testsuite/gcc.dg/gomp/declare-simd-1.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b20e079b0e5eec9ebf708864a14e6b8f3a6003e/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fdeclare-simd-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b20e079b0e5eec9ebf708864a14e6b8f3a6003e/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fdeclare-simd-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fdeclare-simd-1.c?ref=1b20e079b0e5eec9ebf708864a14e6b8f3a6003e", "patch": "@@ -13,7 +13,7 @@ int f2 (int a, int *b, int c)\n   return a + *b + c;\n }\n \n-/* { dg-warning \"GCC does not currently support mixed size types for 'simd' function\" \"\" { target aarch64-*-* } .-5 } */\n+/* { dg-warning \"GCC does not currently support mixed size types for 'simd' function\" \"\" { target aarch64*-*-* } .-5 } */\n /* { dg-final { scan-assembler-times \"_ZGVbM8uva32l4_f2:\" 1 { target { i?86-*-* x86_64-*-* } } } } */\n /* { dg-final { scan-assembler-times \"_ZGVbN8uva32l4_f2:\" 1 { target { i?86-*-* x86_64-*-* } } } } */\n /* { dg-final { scan-assembler-times \"_ZGVcM8uva32l4_f2:\" 1 { target { i?86-*-* x86_64-*-* } } } } */\n@@ -50,7 +50,7 @@ f7 (int x)\n   return x;\n }\n \n-/* { dg-warning \"GCC does not currently support simdlen 16 for type 'int'\" \"\" { target aarch64-*-* } .-7 } */\n+/* { dg-warning \"GCC does not currently support simdlen 16 for type 'int'\" \"\" { target aarch64*-*-* } .-7 } */\n /* { dg-final { scan-assembler-times \"_ZGVbM16v_f7:\" 1 { target { i?86-*-* x86_64-*-* } } } } */\n /* { dg-final { scan-assembler-times \"_ZGVbN16v_f7:\" 1 { target { i?86-*-* x86_64-*-* } } } } */\n /* { dg-final { scan-assembler-times \"_ZGVcM16v_f7:\" 1 { target { i?86-*-* x86_64-*-* } } } } */\n@@ -70,7 +70,7 @@ f13 (int c; int *b; int a; int a, int *b, int c)\n   return a + *b + c;\n }\n \n-/* { dg-warning \"GCC does not currently support mixed size types for 'simd' function\" \"\" { target aarch64-*-* } .-5 } */\n+/* { dg-warning \"GCC does not currently support mixed size types for 'simd' function\" \"\" { target aarch64*-*-* } .-5 } */\n /* { dg-final { scan-assembler-times \"_ZGVbM8uva32l4_f13:\" 1 { target { i?86-*-* x86_64-*-* } } } } */\n /* { dg-final { scan-assembler-times \"_ZGVbN8uva32l4_f13:\" 1 { target { i?86-*-* x86_64-*-* } } } } */\n /* { dg-final { scan-assembler-times \"_ZGVcM8uva32l4_f13:\" 1 { target { i?86-*-* x86_64-*-* } } } } */\n@@ -89,7 +89,7 @@ f14 (a, b, c)\n   return a + *b + c;\n }\n \n-/* { dg-warning \"GCC does not currently support mixed size types for 'simd' function\" \"\" { target aarch64-*-* } .-7 } */\n+/* { dg-warning \"GCC does not currently support mixed size types for 'simd' function\" \"\" { target aarch64*-*-* } .-7 } */\n /* { dg-final { scan-assembler-times \"_ZGVbM8uva32l4_f14:\" 1 { target { i?86-*-* x86_64-*-* } } } } */\n /* { dg-final { scan-assembler-times \"_ZGVbN8uva32l4_f14:\" 1 { target { i?86-*-* x86_64-*-* } } } } */\n /* { dg-final { scan-assembler-times \"_ZGVcM8uva32l4_f14:\" 1 { target { i?86-*-* x86_64-*-* } } } } */\n@@ -106,7 +106,7 @@ f15 (int a, int *b, int c)\n   return a + *b + c;\n }\n \n-/* { dg-warning \"GCC does not currently support mixed size types for 'simd' function\" \"\" { target aarch64-*-* } .-5 } */\n+/* { dg-warning \"GCC does not currently support mixed size types for 'simd' function\" \"\" { target aarch64*-*-* } .-5 } */\n /* { dg-final { scan-assembler-times \"_ZGVbM8uva32l4_f15:\" 1 { target { i?86-*-* x86_64-*-* } } } } */\n /* { dg-final { scan-assembler-times \"_ZGVbN8uva32l4_f15:\" 1 { target { i?86-*-* x86_64-*-* } } } } */\n /* { dg-final { scan-assembler-times \"_ZGVcM8uva32l4_f15:\" 1 { target { i?86-*-* x86_64-*-* } } } } */\n@@ -128,7 +128,7 @@ int f17 (int g, long *h)\n   return g + h[0];\n }\n \n-/* { dg-warning \"GCC does not currently support mixed size types for 'simd' function\" \"\" { target aarch64-*-* } .-5 } */\n+/* { dg-warning \"GCC does not currently support mixed size types for 'simd' function\" \"\" { target aarch64*-*-* } .-5 } */\n /* { dg-final { scan-assembler-times \"_ZGVbM4l20va8_f17:\" 1 { target { { i?86-*-* x86_64-*-* } && lp64 } } } } */\n /* { dg-final { scan-assembler-times \"_ZGVbN4l20va8_f17:\" 1 { target { { i?86-*-* x86_64-*-* } && lp64 } } } } */\n /* { dg-final { scan-assembler-times \"_ZGVcM4l20va8_f17:\" 1 { target { { i?86-*-* x86_64-*-* } && lp64 } } } } */\n@@ -155,7 +155,7 @@ f18 (j, i)\n   return j + i[0];\n }\n \n-/* { dg-warning \"GCC does not currently support mixed size types for 'simd' function\" \"\" { target aarch64-*-* } .-7 } */\n+/* { dg-warning \"GCC does not currently support mixed size types for 'simd' function\" \"\" { target aarch64*-*-* } .-7 } */\n /* { dg-final { scan-assembler-times \"_ZGVbM4l20va8_f18:\" 1 { target { { i?86-*-* x86_64-*-* } && lp64 } } } } */\n /* { dg-final { scan-assembler-times \"_ZGVbN4l20va8_f18:\" 1 { target { { i?86-*-* x86_64-*-* } && lp64 } } } } */\n /* { dg-final { scan-assembler-times \"_ZGVcM4l20va8_f18:\" 1 { target { { i?86-*-* x86_64-*-* } && lp64 } } } } */"}, {"sha": "bf01c023541ae2100f63887901f4f330fbf1a12f", "filename": "gcc/testsuite/gcc.dg/gomp/declare-simd-3.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b20e079b0e5eec9ebf708864a14e6b8f3a6003e/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fdeclare-simd-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b20e079b0e5eec9ebf708864a14e6b8f3a6003e/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fdeclare-simd-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fdeclare-simd-3.c?ref=1b20e079b0e5eec9ebf708864a14e6b8f3a6003e", "patch": "@@ -5,7 +5,7 @@ f1 (int *p, int *q, short *s)\n   return *p + *q + *s;\n }\n \n-/* { dg-warning \"GCC does not currently support mixed size types for 'simd' functions\" \"\" { target aarch64-*-* } .-5 } */\n+/* { dg-warning \"GCC does not currently support mixed size types for 'simd' functions\" \"\" { target aarch64*-*-* } .-5 } */\n /* { dg-final { scan-assembler-times \"_ZGVbM4l4ln4ln6_f1:\" 1 { target { i?86-*-* x86_64-*-* } } } } */\n /* { dg-final { scan-assembler-times \"_ZGVbN4l4ln4ln6_f1:\" 1 { target { i?86-*-* x86_64-*-* } } } } */\n /* { dg-final { scan-assembler-times \"_ZGVcM4l4ln4ln6_f1:\" 1 { target { i?86-*-* x86_64-*-* } } } } */\n@@ -22,7 +22,7 @@ f2 (int *p, short *q, int s, int r, int t)\n   return *p + *q + r;\n }\n \n-/* { dg-warning \"GCC does not currently support mixed size types for 'simd' functions\" \"\" { target aarch64-*-* } .-5 } */\n+/* { dg-warning \"GCC does not currently support mixed size types for 'simd' functions\" \"\" { target aarch64*-*-* } .-5 } */\n /* { dg-final { scan-assembler-times \"_ZGVbN8ls2ls4uls2u_f2:\" 1 { target { i?86-*-* x86_64-*-* } } } } */\n /* { dg-final { scan-assembler-times \"_ZGVcN8ls2ls4uls2u_f2:\" 1 { target { i?86-*-* x86_64-*-* } } } } */\n /* { dg-final { scan-assembler-times \"_ZGVdN8ls2ls4uls2u_f2:\" 1 { target { i?86-*-* x86_64-*-* } } } } */"}, {"sha": "26a30f4e3fa4cb1b0d1fea978420c347f8fb04a1", "filename": "gcc/testsuite/gcc.dg/gomp/pr59669-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b20e079b0e5eec9ebf708864a14e6b8f3a6003e/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fpr59669-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b20e079b0e5eec9ebf708864a14e6b8f3a6003e/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fpr59669-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fpr59669-2.c?ref=1b20e079b0e5eec9ebf708864a14e6b8f3a6003e", "patch": "@@ -7,4 +7,4 @@ void\n bar (int *a)\n {\n }\n-/* { dg-warning \"GCC does not currently support mixed size types for 'simd' functions\" \"\" { target aarch64-*-* } .-3 } */\n+/* { dg-warning \"GCC does not currently support mixed size types for 'simd' functions\" \"\" { target aarch64*-*-* } .-3 } */"}, {"sha": "7338f18d192072c4447957f3f20a32545c961d7f", "filename": "gcc/testsuite/gcc.dg/gomp/pr87895-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b20e079b0e5eec9ebf708864a14e6b8f3a6003e/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fpr87895-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b20e079b0e5eec9ebf708864a14e6b8f3a6003e/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fpr87895-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fpr87895-1.c?ref=1b20e079b0e5eec9ebf708864a14e6b8f3a6003e", "patch": "@@ -17,4 +17,4 @@ bar (int *x, int y)\n   if ((y == 0) ? (*x = 0) : *x)\n     return 0;\n }\n-/* { dg-warning \"GCC does not currently support mixed size types for 'simd' functions\" \"\" { target aarch64-*-* } .-5 } */\n+/* { dg-warning \"GCC does not currently support mixed size types for 'simd' functions\" \"\" { target aarch64*-*-* } .-5 } */"}, {"sha": "844b80b2a8d1916f6aec848ddfa72cbf8be4c1a4", "filename": "gcc/testsuite/gcc.dg/gomp/simd-clones-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b20e079b0e5eec9ebf708864a14e6b8f3a6003e/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fsimd-clones-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b20e079b0e5eec9ebf708864a14e6b8f3a6003e/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fsimd-clones-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fsimd-clones-2.c?ref=1b20e079b0e5eec9ebf708864a14e6b8f3a6003e", "patch": "@@ -6,7 +6,7 @@ int addit(int a, int b, int *c)\n {\n   return a + b;\n }\n-/* { dg-warning \"GCC does not currently support mixed size types for 'simd' functions\" \"\" { target aarch64-*-* } .-4 } */\n+/* { dg-warning \"GCC does not currently support mixed size types for 'simd' functions\" \"\" { target aarch64*-*-* } .-4 } */\n \n #pragma omp declare simd uniform(a) aligned(a:32) linear(k:1) notinbranch\n float setArray(float *a, float x, int k)\n@@ -15,7 +15,7 @@ float setArray(float *a, float x, int k)\n   return a[k];\n }\n \n-/* { dg-warning \"GCC does not currently support mixed size types for 'simd' functions\" \"\" { target aarch64-*-* } .-6 } */\n+/* { dg-warning \"GCC does not currently support mixed size types for 'simd' functions\" \"\" { target aarch64*-*-* } .-6 } */\n /* { dg-final { scan-tree-dump \"_ZGVbN4ua32vl_setArray\" \"optimized\" { target i?86-*-* x86_64-*-* } } } */\n /* { dg-final { scan-tree-dump \"_ZGVbN4vvva32_addit\" \"optimized\" { target i?86-*-* x86_64-*-* } } } */\n /* { dg-final { scan-tree-dump \"_ZGVbM4vl66u_addit\" \"optimized\" { target i?86-*-* x86_64-*-* } } } */"}, {"sha": "bbf70d9664a74601bed1d3352c0c33145e8fc8e7", "filename": "gcc/testsuite/gfortran.dg/gomp/declare-simd-2.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b20e079b0e5eec9ebf708864a14e6b8f3a6003e/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fdeclare-simd-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b20e079b0e5eec9ebf708864a14e6b8f3a6003e/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fdeclare-simd-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fdeclare-simd-2.f90?ref=1b20e079b0e5eec9ebf708864a14e6b8f3a6003e", "patch": "@@ -1,6 +1,6 @@\n ! { dg-do compile }\n \n-function f1 (a, b, c, d, e, f) ! { dg-warning \"GCC does not currently support mixed size types for 'simd' functions\" \"\" { target aarch64-*-* } }\n+function f1 (a, b, c, d, e, f) ! { dg-warning \"GCC does not currently support mixed size types for 'simd' functions\" \"\" { target aarch64*-*-* } }\n   integer, value :: a, b, c\n   integer :: d, e, f, f1\n !$omp declare simd (f1) uniform(b) linear(c, d) linear(uval(e)) linear(ref(f))\n@@ -12,7 +12,7 @@ function f1 (a, b, c, d, e, f) ! { dg-warning \"GCC does not currently support mi\n   f = f + 1\n   f1 = a + b + c + d + e + f\n end function f1\n-integer function f2 (a, b) ! { dg-warning \"GCC does not currently support mixed size types for 'simd' functions\" \"\" { target aarch64-*-* } }\n+integer function f2 (a, b) ! { dg-warning \"GCC does not currently support mixed size types for 'simd' functions\" \"\" { target aarch64*-*-* } }\n   integer :: a, b\n !$omp declare simd uniform(b) linear(ref(a):b)\n   a = a + 1"}, {"sha": "69a0009e13c2c8c35c1afbfb081921a26de773dd", "filename": "gcc/testsuite/gfortran.dg/gomp/pr79154-1.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b20e079b0e5eec9ebf708864a14e6b8f3a6003e/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fpr79154-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b20e079b0e5eec9ebf708864a14e6b8f3a6003e/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fpr79154-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fpr79154-1.f90?ref=1b20e079b0e5eec9ebf708864a14e6b8f3a6003e", "patch": "@@ -1,7 +1,7 @@\n ! PR fortran/79154\n ! { dg-do compile }\n \n-pure real function foo (a, b)\t\t! { dg-warning \"GCC does not currently support mixed size types for 'simd' functions\" \"\" { target aarch64-*-* } }\n+pure real function foo (a, b)\t\t! { dg-warning \"GCC does not currently support mixed size types for 'simd' functions\" \"\" { target aarch64*-*-* } }\n !$omp declare simd(foo)\t\t\t! { dg-bogus \"may not appear in PURE or ELEMENTAL\" }\n   real, intent(in) :: a, b\n   foo = a + b\n@@ -20,7 +20,7 @@ pure real function baz (a, b)\n   real, intent(in) :: a, b\n   baz = a + b\n end function baz\n-elemental real function fooe (a, b)\t! { dg-warning \"GCC does not currently support mixed size types for 'simd' functions\" \"\" { target aarch64-*-* } }\n+elemental real function fooe (a, b)\t! { dg-warning \"GCC does not currently support mixed size types for 'simd' functions\" \"\" { target aarch64*-*-* } }\n !$omp declare simd(fooe)\t\t! { dg-bogus \"may not appear in PURE or ELEMENTAL\" }\n   real, intent(in) :: a, b\n   fooe = a + b"}, {"sha": "ea8e229fe5486a645cc7cc8aae748725f979c448", "filename": "gcc/testsuite/gfortran.dg/gomp/pr83977.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b20e079b0e5eec9ebf708864a14e6b8f3a6003e/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fpr83977.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b20e079b0e5eec9ebf708864a14e6b8f3a6003e/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fpr83977.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fpr83977.f90?ref=1b20e079b0e5eec9ebf708864a14e6b8f3a6003e", "patch": "@@ -1,7 +1,7 @@\n ! PR middle-end/83977\n ! { dg-do compile }\n \n-integer function foo (a, b) ! { dg-warning \"GCC does not currently support mixed size types for 'simd' functions\" \"\" { target aarch64-*-* } }\n+integer function foo (a, b) ! { dg-warning \"GCC does not currently support mixed size types for 'simd' functions\" \"\" { target aarch64*-*-* } }\n    integer :: a, b\n !$omp declare simd uniform(b) linear(ref(a):b)\n    a = a + 1"}]}