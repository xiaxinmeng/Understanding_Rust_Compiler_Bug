{"sha": "dbe89f49da468fbd42a27bdb7b8f06de76a871b4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGJlODlmNDlkYTQ2OGZiZDQyYTI3YmRiN2I4ZjA2ZGU3NmE4NzFiNA==", "commit": {"author": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2019-06-18T08:41:12Z"}, "committer": {"name": "Iain Sandoe", "email": "iains@gcc.gnu.org", "date": "2019-06-18T08:41:12Z"}, "message": "[Darwin] The need for FDE symbols is dependent on linker used, not OS rev.\n\n    \nFor very old toolchains, the compiler generated extra symbols that mark the\nstart of each FDE.  We no longer need this (since xcode 3 era).\n\nSince we have detection of the linker version, we can use that directly to\ndetermine if support is needed.\n\n2019-06-18  Iain Sandoe  <iain@sandoe.co.uk>\n\n\t* config/darwin.c (darwin_emit_unwind_label): New default to false.\n\t(darwin_override_options): Set darwin_emit_unwind_label as needed.\n\nFrom-SVN: r272409", "tree": {"sha": "18e0aa011fd35c693308d37c61299036aa1f9584", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/18e0aa011fd35c693308d37c61299036aa1f9584"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dbe89f49da468fbd42a27bdb7b8f06de76a871b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dbe89f49da468fbd42a27bdb7b8f06de76a871b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dbe89f49da468fbd42a27bdb7b8f06de76a871b4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dbe89f49da468fbd42a27bdb7b8f06de76a871b4/comments", "author": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c6ece5c1349cb3205288efe76df9039a8390e20d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6ece5c1349cb3205288efe76df9039a8390e20d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c6ece5c1349cb3205288efe76df9039a8390e20d"}], "stats": {"total": 40, "additions": 31, "deletions": 9}, "files": [{"sha": "477b6f797498193b2230b11075f960b24f4f1d5b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbe89f49da468fbd42a27bdb7b8f06de76a871b4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbe89f49da468fbd42a27bdb7b8f06de76a871b4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dbe89f49da468fbd42a27bdb7b8f06de76a871b4", "patch": "@@ -1,3 +1,8 @@\n+2019-06-18  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\t* config/darwin.c (darwin_emit_unwind_label): New default to false.\n+\t(darwin_override_options): Set darwin_emit_unwind_label as needed.\n+\n 2019-06-18  Martin Jambor  <mjambor@suse.cz>\n \n \tPR ipa/90889"}, {"sha": "a40f532eec640bc51311abedd8b1d427dd1b8c9a", "filename": "gcc/config/darwin.c", "status": "modified", "additions": 26, "deletions": 9, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbe89f49da468fbd42a27bdb7b8f06de76a871b4/gcc%2Fconfig%2Fdarwin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbe89f49da468fbd42a27bdb7b8f06de76a871b4/gcc%2Fconfig%2Fdarwin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin.c?ref=dbe89f49da468fbd42a27bdb7b8f06de76a871b4", "patch": "@@ -99,6 +99,10 @@ int generating_for_darwin_version ;\n    for weak or single-definition items.  */\n static bool ld_uses_coal_sects = false;\n \n+/* Very old (ld_classic) linkers need a symbol to mark the start of\n+   each FDE.  */\n+static bool ld_needs_eh_markers = false;\n+\n /* Section names.  */\n section * darwin_sections[NUM_DARWIN_SECTIONS];\n \n@@ -2080,11 +2084,11 @@ darwin_emit_unwind_label (FILE *file, tree decl, int for_eh, int empty)\n   static int invok_count = 0;\n   static tree last_fun_decl = NULL_TREE;\n   \n-  /* We use the linker to emit the .eh labels for Darwin 9 and above.  */\n-  if (! for_eh || generating_for_darwin_version >= 9)\n+  /* Modern linkers can produce distinct FDEs without compiler support.  */\n+  if (! for_eh || ! ld_needs_eh_markers)\n     return;\n \n-  /* FIXME: This only works when the eh for all sections of a function is \n+  /* FIXME: This only works when the eh for all sections of a function are \n      emitted at the same time.  If that changes, we would need to use a lookup\n      table of some form to determine what to do.  Also, we should emit the\n      unadorned label for the partition containing the public label for a\n@@ -3257,16 +3261,29 @@ darwin_override_options (void)\n      indirections and we no longer need to emit pic symbol stubs.\n      However, if we are generating code for earlier ones (or for use in the \n      kernel) the stubs might still be required, and this will be set true.\n-     If the user sets it on or off - then that takes precedence. */\n+     If the user sets it on or off - then that takes precedence.\n+\n+     Linkers that don't need stubs, don't need the EH symbol markers either.\n+  */\n \n   if (!global_options_set.x_darwin_picsymbol_stubs)\n     {\n-      if (darwin_target_linker) {\n-\tif (strverscmp (darwin_target_linker, MIN_LD64_OMIT_STUBS) < 0)\n+      if (darwin_target_linker) \n+\t{\n+\t  if (strverscmp (darwin_target_linker, MIN_LD64_OMIT_STUBS) < 0)\n+\t    {\n+\t      darwin_picsymbol_stubs = true;\n+\t      ld_needs_eh_markers = true;\n+\t    }\n+\t} \n+      else if (generating_for_darwin_version < 9)\n+\t{\n+\t  /* If we don't know the linker version and we're targeting an old\n+\t     system, we know no better than to assume the use of an earlier \n+\t     linker.  */\n \t  darwin_picsymbol_stubs = true;\n-      } else if (generating_for_darwin_version < 9)\n-\t/* We know no better than to assume the use of an earlier linker.  */\n-\tdarwin_picsymbol_stubs = true;\n+\t  ld_needs_eh_markers = true;\n+\t}\n     }\n   else if (DARWIN_X86 && darwin_picsymbol_stubs && TARGET_64BIT)\n     {"}]}