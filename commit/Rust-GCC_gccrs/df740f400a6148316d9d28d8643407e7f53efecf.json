{"sha": "df740f400a6148316d9d28d8643407e7f53efecf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGY3NDBmNDAwYTYxNDgzMTZkOWQyOGQ4NjQzNDA3ZTdmNTNlZmVjZg==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-03-29T18:54:27Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-03-29T18:54:27Z"}, "message": "Fix select setting a map expression.\n\nAlso fix select parsing when declaring a variable with no\nstatements.\n\nFrom-SVN: r171690", "tree": {"sha": "3b8b93d7259a48e103254046934eaacc30a30a04", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3b8b93d7259a48e103254046934eaacc30a30a04"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/df740f400a6148316d9d28d8643407e7f53efecf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df740f400a6148316d9d28d8643407e7f53efecf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/df740f400a6148316d9d28d8643407e7f53efecf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df740f400a6148316d9d28d8643407e7f53efecf/comments", "author": null, "committer": null, "parents": [{"sha": "5b9e705e63f09c873cd19b7e79a0b7019d13f1ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b9e705e63f09c873cd19b7e79a0b7019d13f1ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b9e705e63f09c873cd19b7e79a0b7019d13f1ac"}], "stats": {"total": 50, "additions": 26, "deletions": 24}, "files": [{"sha": "970dc159ed13436a8e42bd8b433ccb7e639fc214", "filename": "gcc/go/gofrontend/parse.cc", "status": "modified", "additions": 26, "deletions": 24, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df740f400a6148316d9d28d8643407e7f53efecf/gcc%2Fgo%2Fgofrontend%2Fparse.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df740f400a6148316d9d28d8643407e7f53efecf/gcc%2Fgo%2Fgofrontend%2Fparse.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fparse.cc?ref=df740f400a6148316d9d28d8643407e7f53efecf", "patch": "@@ -4274,40 +4274,42 @@ Parse::comm_clause(Select_clauses* clauses, bool* saw_default)\n   bool got_case = this->comm_case(&is_send, &channel, &val, &closed,\n \t\t\t\t  &varname, &closedname, &is_default);\n \n+  if (!is_send\n+      && varname.empty()\n+      && closedname.empty()\n+      && val != NULL\n+      && val->index_expression() != NULL)\n+    val->index_expression()->set_is_lvalue();\n+\n   if (this->peek_token()->is_op(OPERATOR_COLON))\n     this->advance_token();\n   else\n     error_at(this->location(), \"expected colon\");\n \n-  Block* statements = NULL;\n+  this->gogo_->start_block(this->location());\n+\n   Named_object* var = NULL;\n-  Named_object* closedvar = NULL;\n-  if (this->peek_token()->is_op(OPERATOR_SEMICOLON))\n-    this->advance_token();\n-  else if (this->statement_list_may_start_here())\n+  if (!varname.empty())\n     {\n-      this->gogo_->start_block(this->location());\n+      // FIXME: LOCATION is slightly wrong here.\n+      Variable* v = new Variable(NULL, channel, false, false, false,\n+\t\t\t\t location);\n+      v->set_type_from_chan_element();\n+      var = this->gogo_->add_variable(varname, v);\n+    }\n \n-      if (!varname.empty())\n-\t{\n-\t  // FIXME: LOCATION is slightly wrong here.\n-\t  Variable* v = new Variable(NULL, channel, false, false, false,\n-\t\t\t\t     location);\n-\t  v->set_type_from_chan_element();\n-\t  var = this->gogo_->add_variable(varname, v);\n-\t}\n+  Named_object* closedvar = NULL;\n+  if (!closedname.empty())\n+    {\n+      // FIXME: LOCATION is slightly wrong here.\n+      Variable* v = new Variable(Type::lookup_bool_type(), NULL,\n+\t\t\t\t false, false, false, location);\n+      closedvar = this->gogo_->add_variable(closedname, v);\n+    }\n \n-      if (!closedname.empty())\n-\t{\n-\t  // FIXME: LOCATION is slightly wrong here.\n-\t  Variable* v = new Variable(Type::lookup_bool_type(), NULL,\n-\t\t\t\t     false, false, false, location);\n-\t  closedvar = this->gogo_->add_variable(closedname, v);\n-\t}\n+  this->statement_list();\n \n-      this->statement_list();\n-      statements = this->gogo_->finish_block(this->location());\n-    }\n+  Block* statements = this->gogo_->finish_block(this->location());\n \n   if (is_default)\n     {"}]}