{"sha": "e7e18a21d244061497ee88dea27d4695da2f28f3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTdlMThhMjFkMjQ0MDYxNDk3ZWU4OGRlYTI3ZDQ2OTVkYTJmMjhmMw==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2000-09-14T07:51:56Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2000-09-14T07:51:56Z"}, "message": "defineclass.cc: Include alloca.h only if HAVE_ALLOCA_H.\n\n* defineclass.cc: Include alloca.h only if HAVE_ALLOCA_H.\n* java/lang/natDouble.cc: Likewise.\n* java/lang/reflect/natMethod.cc: Likewise.\n* interpret.cc: Likewise.  Fix NULLCHECKs that tested a _Jv_word.\n\nFrom-SVN: r36404", "tree": {"sha": "b6d90ae85faa8c655f2554e676c8df655d8e517e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b6d90ae85faa8c655f2554e676c8df655d8e517e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e7e18a21d244061497ee88dea27d4695da2f28f3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7e18a21d244061497ee88dea27d4695da2f28f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7e18a21d244061497ee88dea27d4695da2f28f3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7e18a21d244061497ee88dea27d4695da2f28f3/comments", "author": null, "committer": null, "parents": [{"sha": "597c1b349fcbda26ba75a4e3a4fb136c26887d7a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/597c1b349fcbda26ba75a4e3a4fb136c26887d7a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/597c1b349fcbda26ba75a4e3a4fb136c26887d7a"}], "stats": {"total": 24, "additions": 20, "deletions": 4}, "files": [{"sha": "b2c825e9e7a0cb0d216fc43dceeb6f5e94555da1", "filename": "libjava/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7e18a21d244061497ee88dea27d4695da2f28f3/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7e18a21d244061497ee88dea27d4695da2f28f3/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=e7e18a21d244061497ee88dea27d4695da2f28f3", "patch": "@@ -1,3 +1,10 @@\n+2000-09-14  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\t* defineclass.cc: Include alloca.h only if HAVE_ALLOCA_H.\n+\t* java/lang/natDouble.cc: Likewise.\n+\t* java/lang/reflect/natMethod.cc: Likewise.\n+\t* interpret.cc: Likewise.  Fix NULLCHECKs that tested a _Jv_word.\n+\n 2000-09-13  Alexandre Oliva  <aoliva@redhat.com>\n \n \t* configure.in (LIBDATASTARTSPEC): Use `%s' to search for"}, {"sha": "7ddead0965bc88e99f321a7525c166679937ae96", "filename": "libjava/defineclass.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7e18a21d244061497ee88dea27d4695da2f28f3/libjava%2Fdefineclass.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7e18a21d244061497ee88dea27d4695da2f28f3/libjava%2Fdefineclass.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fdefineclass.cc?ref=e7e18a21d244061497ee88dea27d4695da2f28f3", "patch": "@@ -24,7 +24,9 @@ details.  */\n \n #ifdef INTERPRETER\n \n+#if HAVE_ALLOCA_H\n #include <alloca.h>\n+#endif\n #include <java-cpool.h>\n #include <gcj/cni.h>\n "}, {"sha": "74e87880a0205e54ad2e40c6e97c5384bfbbc309", "filename": "libjava/interpret.cc", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7e18a21d244061497ee88dea27d4695da2f28f3/libjava%2Finterpret.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7e18a21d244061497ee88dea27d4695da2f28f3/libjava%2Finterpret.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Finterpret.cc?ref=e7e18a21d244061497ee88dea27d4695da2f28f3", "patch": "@@ -35,7 +35,9 @@ details.  */\n \n #ifdef INTERPRETER\n \n+#if HAVE_ALLOCA_H\n #include <alloca.h>\n+#endif\n \n #define ClassError _CL_Q34java4lang5Error\n extern java::lang::Class ClassError;\n@@ -51,7 +53,7 @@ static void throw_null_pointer_exception ()\n   __attribute__ ((__noreturn__));\n #endif\n \n-extern \"C\" double __ieee754_fmod __P((double,double));\n+extern \"C\" double __ieee754_fmod (double,double);\n \n static inline void dupx (_Jv_word *sp, int n, int x)\n {\n@@ -678,7 +680,7 @@ void _Jv_InterpMethod::continue1 (_Jv_InterpMethodInvocation *inv)\n \trmeth = (_Jv_ResolvePoolEntry (defining_class, index)).rmethod;\n \n \tsp -= rmeth->stack_item_count;\n-\tNULLCHECK(sp[0]);\n+\tNULLCHECK (sp[0].o);\n \n \tif (rmeth->vtable_index == -1)\n \t  {\n@@ -2147,7 +2149,7 @@ void _Jv_InterpMethod::continue1 (_Jv_InterpMethodInvocation *inv)\n \n \tsp -= rmeth->stack_item_count;\n \n-\tNULLCHECK(sp[0]);\n+\tNULLCHECK (sp[0].o);\n \n \tfun = (void (*)()) rmeth->method->ncode;\n       }\n@@ -2178,10 +2180,11 @@ void _Jv_InterpMethod::continue1 (_Jv_InterpMethodInvocation *inv)\n \trmeth = (_Jv_ResolvePoolEntry (defining_class, index)).rmethod;\n \n \tsp -= rmeth->stack_item_count;\n-\tNULLCHECK(sp[0]);\n \n \tjobject rcv = sp[0].o;\n \n+\tNULLCHECK (rcv);\n+\n \tfun = (void (*)())\n \t  _Jv_LookupInterfaceMethod (rcv->getClass (),\n \t\t\t\t     rmeth->method->name,"}, {"sha": "dc799b2d4b5e05e77d0b645ac42ef121a5cf4d17", "filename": "libjava/java/lang/natDouble.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7e18a21d244061497ee88dea27d4695da2f28f3/libjava%2Fjava%2Flang%2FnatDouble.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7e18a21d244061497ee88dea27d4695da2f28f3/libjava%2Fjava%2Flang%2FnatDouble.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FnatDouble.cc?ref=e7e18a21d244061497ee88dea27d4695da2f28f3", "patch": "@@ -10,7 +10,9 @@ details.  */\n \n #include <config.h>\n \n+#if HAVE_ALLOCA_H\n #include <alloca.h>\n+#endif\n \n #include <stdlib.h>\n "}, {"sha": "0f829debd30be7beb97bf24dbc5f0d55c2190414", "filename": "libjava/java/lang/reflect/natMethod.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7e18a21d244061497ee88dea27d4695da2f28f3/libjava%2Fjava%2Flang%2Freflect%2FnatMethod.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7e18a21d244061497ee88dea27d4695da2f28f3/libjava%2Fjava%2Flang%2Freflect%2FnatMethod.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2Freflect%2FnatMethod.cc?ref=e7e18a21d244061497ee88dea27d4695da2f28f3", "patch": "@@ -10,7 +10,9 @@ details.  */\n \n #include <config.h>\n \n+#if HAVE_ALLOCA_H\n #include <alloca.h>\n+#endif\n \n #include <gcj/cni.h>\n #include <jvm.h>"}]}