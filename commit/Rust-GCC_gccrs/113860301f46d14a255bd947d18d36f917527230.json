{"sha": "113860301f46d14a255bd947d18d36f917527230", "node_id": "C_kwDOANBUbNoAKDExMzg2MDMwMWY0NmQxNGEyNTViZDk0N2QxOGQzNmY5MTc1MjcyMzA", "commit": {"author": {"name": "Andrew Pinski", "email": "apinski@marvell.com", "date": "2021-10-16T04:14:57Z"}, "committer": {"name": "Andrew Pinski", "email": "apinski@marvell.com", "date": "2021-10-21T08:18:58Z"}, "message": "Improve maybe_remove_writeonly_store to do a simple DCE for defining statement\n\nInstead of putting a full blow DCE after execute_fixup_cfg, it makes sense\nto try to remove the defining statement for the store that is being removed.\nUsing simple_dce_from_worklist makes this easier, just mark the ssa_name on\nthe rhs side of the store (if it was one) in a bitmap and then call\nsimple_dce_from_worklist at the end.\n\ngcc.dg/pr36902.c needed to be changed such that the static array was no\nlonger a static array but a global array.  This is because this new dce\nwill remove the load as it is dead. I also filed PR 102864 for the warning\non dead loads.\n\ngcc/ChangeLog:\n\n\t* tree-cfg.c (maybe_remove_writeonly_store): Add dce_ssa_names argument.\n\tMark the ssa-name of the rhs as one to be removed.\n\t(execute_fixup_cfg): Update call to maybe_remove_writeonly_store.\n\tCall simple_dce_from_worklist at the end to a simple dce.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.dg/pr36902.c: Move buf to be a non-static variable.", "tree": {"sha": "d146b49eef3628ed6b72086820c2bb089ea06421", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d146b49eef3628ed6b72086820c2bb089ea06421"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/113860301f46d14a255bd947d18d36f917527230", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/113860301f46d14a255bd947d18d36f917527230", "html_url": "https://github.com/Rust-GCC/gccrs/commit/113860301f46d14a255bd947d18d36f917527230", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/113860301f46d14a255bd947d18d36f917527230/comments", "author": {"login": "apinski-cavium", "id": 6335315, "node_id": "MDQ6VXNlcjYzMzUzMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/6335315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apinski-cavium", "html_url": "https://github.com/apinski-cavium", "followers_url": "https://api.github.com/users/apinski-cavium/followers", "following_url": "https://api.github.com/users/apinski-cavium/following{/other_user}", "gists_url": "https://api.github.com/users/apinski-cavium/gists{/gist_id}", "starred_url": "https://api.github.com/users/apinski-cavium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apinski-cavium/subscriptions", "organizations_url": "https://api.github.com/users/apinski-cavium/orgs", "repos_url": "https://api.github.com/users/apinski-cavium/repos", "events_url": "https://api.github.com/users/apinski-cavium/events{/privacy}", "received_events_url": "https://api.github.com/users/apinski-cavium/received_events", "type": "User", "site_admin": false}, "committer": {"login": "apinski-cavium", "id": 6335315, "node_id": "MDQ6VXNlcjYzMzUzMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/6335315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apinski-cavium", "html_url": "https://github.com/apinski-cavium", "followers_url": "https://api.github.com/users/apinski-cavium/followers", "following_url": "https://api.github.com/users/apinski-cavium/following{/other_user}", "gists_url": "https://api.github.com/users/apinski-cavium/gists{/gist_id}", "starred_url": "https://api.github.com/users/apinski-cavium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apinski-cavium/subscriptions", "organizations_url": "https://api.github.com/users/apinski-cavium/orgs", "repos_url": "https://api.github.com/users/apinski-cavium/repos", "events_url": "https://api.github.com/users/apinski-cavium/events{/privacy}", "received_events_url": "https://api.github.com/users/apinski-cavium/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "36ec4a3c927bd2cc212a7f331ad842cd90eb5283", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36ec4a3c927bd2cc212a7f331ad842cd90eb5283", "html_url": "https://github.com/Rust-GCC/gccrs/commit/36ec4a3c927bd2cc212a7f331ad842cd90eb5283"}], "stats": {"total": 23, "additions": 17, "deletions": 6}, "files": [{"sha": "365a26e26b70cb846ddb1ad4d68437fb8164cb37", "filename": "gcc/testsuite/gcc.dg/pr36902.c", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/113860301f46d14a255bd947d18d36f917527230/gcc%2Ftestsuite%2Fgcc.dg%2Fpr36902.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/113860301f46d14a255bd947d18d36f917527230/gcc%2Ftestsuite%2Fgcc.dg%2Fpr36902.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr36902.c?ref=113860301f46d14a255bd947d18d36f917527230", "patch": "@@ -24,10 +24,9 @@ struct {\n   unsigned char pcr_select[4];\n } sel;\n \n+unsigned char buf[64];\n int bar(void)\n {\n-  static unsigned char buf[64];\n-\n   sel.size_of_select = 3;\n   foo(buf, sel.pcr_select, sel.size_of_select);\n \n@@ -52,8 +51,6 @@ foo2(unsigned char * to, const unsigned char * from, int n)\n \n int baz(void)\n {\n-  static unsigned char buf[64];\n-\n   sel.size_of_select = 5;\n   foo2(buf, sel.pcr_select, sel.size_of_select);\n "}, {"sha": "b3a27bcd17ce437835b635cc58e329338a6c5354", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/113860301f46d14a255bd947d18d36f917527230/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/113860301f46d14a255bd947d18d36f917527230/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=113860301f46d14a255bd947d18d36f917527230", "patch": "@@ -54,6 +54,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"value-prof.h\"\n #include \"tree-inline.h\"\n #include \"tree-ssa-live.h\"\n+#include \"tree-ssa-dce.h\"\n #include \"omp-general.h\"\n #include \"omp-expand.h\"\n #include \"tree-cfgcleanup.h\"\n@@ -9669,7 +9670,8 @@ make_pass_warn_unused_result (gcc::context *ctxt)\n /* Maybe Remove stores to variables we marked write-only.\n    Return true if a store was removed. */\n static bool\n-maybe_remove_writeonly_store (gimple_stmt_iterator &gsi, gimple *stmt)\n+maybe_remove_writeonly_store (gimple_stmt_iterator &gsi, gimple *stmt,\n+\t\t\t      bitmap dce_ssa_names)\n {\n   /* Keep access when store has side effect, i.e. in case when source\n      is volatile.  */  \n@@ -9692,6 +9694,15 @@ maybe_remove_writeonly_store (gimple_stmt_iterator &gsi, gimple *stmt)\n       print_gimple_stmt (dump_file, stmt, 0,\n \t\t\t TDF_VOPS|TDF_MEMSYMS);\n     }\n+\n+  /* Mark ssa name defining to be checked for simple dce. */\n+  if (gimple_assign_single_p (stmt))\n+    {\n+      tree rhs = gimple_assign_rhs1 (stmt);\n+      if (TREE_CODE (rhs) == SSA_NAME\n+\t  && !SSA_NAME_IS_DEFAULT_DEF (rhs))\n+\tbitmap_set_bit (dce_ssa_names, SSA_NAME_VERSION (rhs));\n+    }\n   unlink_stmt_vdef (stmt);\n   gsi_remove (&gsi, true);\n   release_defs (stmt);\n@@ -9714,6 +9725,7 @@ execute_fixup_cfg (void)\n   profile_count num = node->count;\n   profile_count den = ENTRY_BLOCK_PTR_FOR_FN (cfun)->count;\n   bool scale = num.initialized_p () && !(num == den);\n+  auto_bitmap dce_ssa_names;\n \n   if (scale)\n     {\n@@ -9754,7 +9766,7 @@ execute_fixup_cfg (void)\n \t     }\n \n \t  /* Remove stores to variables we marked write-only. */\n-\t  if (maybe_remove_writeonly_store (gsi, stmt))\n+\t  if (maybe_remove_writeonly_store (gsi, stmt, dce_ssa_names))\n \t    {\n \t      todo |= TODO_update_ssa | TODO_cleanup_cfg;\n \t      continue;\n@@ -9820,6 +9832,8 @@ execute_fixup_cfg (void)\n       && (todo & TODO_cleanup_cfg))\n     loops_state_set (LOOPS_NEED_FIXUP);\n \n+  simple_dce_from_worklist (dce_ssa_names);\n+\n   return todo;\n }\n "}]}