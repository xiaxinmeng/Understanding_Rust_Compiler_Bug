{"sha": "fced8ba341c8467ab19b74093689de385cfb61af", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmNlZDhiYTM0MWM4NDY3YWIxOWI3NDA5MzY4OWRlMzg1Y2ZiNjFhZg==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-10-16T02:49:07Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-10-16T02:49:07Z"}, "message": "(distribute_bit_expr): Test for BIT_{AND,IOR}_EXPR.\n\nFrom-SVN: r2484", "tree": {"sha": "d739cf7c9bc76439f19e0dc64abf24bb8d9da1e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d739cf7c9bc76439f19e0dc64abf24bb8d9da1e9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fced8ba341c8467ab19b74093689de385cfb61af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fced8ba341c8467ab19b74093689de385cfb61af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fced8ba341c8467ab19b74093689de385cfb61af", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fced8ba341c8467ab19b74093689de385cfb61af/comments", "author": null, "committer": null, "parents": [{"sha": "fa771c3751a1de38508a4d254d21b73523c3eb06", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa771c3751a1de38508a4d254d21b73523c3eb06", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa771c3751a1de38508a4d254d21b73523c3eb06"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "9b64082368fa85ce1ed28021a7a23593e2e30dd2", "filename": "gcc/fold-const.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fced8ba341c8467ab19b74093689de385cfb61af/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fced8ba341c8467ab19b74093689de385cfb61af/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=fced8ba341c8467ab19b74093689de385cfb61af", "patch": "@@ -2080,8 +2080,8 @@ distribute_bit_expr (code, type, arg0, arg1)\n \n   if (TREE_CODE (arg0) != TREE_CODE (arg1)\n       || TREE_CODE (arg0) == code\n-      || (TREE_CODE (arg0) != TRUTH_AND_EXPR\n-\t  && TREE_CODE (arg0) != TRUTH_OR_EXPR))\n+      || (TREE_CODE (arg0) != BIT_AND_EXPR\n+\t  && TREE_CODE (arg0) != BIT_IOR_EXPR))\n     return 0;\n \n   if (operand_equal_p (TREE_OPERAND (arg0, 0), TREE_OPERAND (arg1, 0), 0))"}]}