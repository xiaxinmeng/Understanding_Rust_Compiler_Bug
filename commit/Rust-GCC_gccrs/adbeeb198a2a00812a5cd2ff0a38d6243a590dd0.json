{"sha": "adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWRiZWViMTk4YTJhMDA4MTJhNWNkMmZmMGEzOGQ2MjQzYTU5MGRkMA==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "iant@golang.org", "date": "2020-12-03T19:13:03Z"}, "committer": {"name": "Ian Lance Taylor", "email": "iant@golang.org", "date": "2020-12-03T19:13:03Z"}, "message": "Go testsuite: add a bunch of new tests from source repo", "tree": {"sha": "997693ae4cdd712b0633da1a9624416a65989570", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/997693ae4cdd712b0633da1a9624416a65989570"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/comments", "author": {"login": "ianlancetaylor", "id": 3194333, "node_id": "MDQ6VXNlcjMxOTQzMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/3194333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ianlancetaylor", "html_url": "https://github.com/ianlancetaylor", "followers_url": "https://api.github.com/users/ianlancetaylor/followers", "following_url": "https://api.github.com/users/ianlancetaylor/following{/other_user}", "gists_url": "https://api.github.com/users/ianlancetaylor/gists{/gist_id}", "starred_url": "https://api.github.com/users/ianlancetaylor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ianlancetaylor/subscriptions", "organizations_url": "https://api.github.com/users/ianlancetaylor/orgs", "repos_url": "https://api.github.com/users/ianlancetaylor/repos", "events_url": "https://api.github.com/users/ianlancetaylor/events{/privacy}", "received_events_url": "https://api.github.com/users/ianlancetaylor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ianlancetaylor", "id": 3194333, "node_id": "MDQ6VXNlcjMxOTQzMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/3194333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ianlancetaylor", "html_url": "https://github.com/ianlancetaylor", "followers_url": "https://api.github.com/users/ianlancetaylor/followers", "following_url": "https://api.github.com/users/ianlancetaylor/following{/other_user}", "gists_url": "https://api.github.com/users/ianlancetaylor/gists{/gist_id}", "starred_url": "https://api.github.com/users/ianlancetaylor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ianlancetaylor/subscriptions", "organizations_url": "https://api.github.com/users/ianlancetaylor/orgs", "repos_url": "https://api.github.com/users/ianlancetaylor/repos", "events_url": "https://api.github.com/users/ianlancetaylor/events{/privacy}", "received_events_url": "https://api.github.com/users/ianlancetaylor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2a099fd223f836e1d51c7f58e7261e18f483141c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a099fd223f836e1d51c7f58e7261e18f483141c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a099fd223f836e1d51c7f58e7261e18f483141c"}], "stats": {"total": 3339, "additions": 3339, "deletions": 0}, "files": [{"sha": "7ea1b2908dd007693ade8ace90ed97a3711adc9b", "filename": "gcc/testsuite/go.test/test/alias2.go", "status": "added", "additions": 104, "deletions": 0, "changes": 104, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Falias2.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Falias2.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Falias2.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,104 @@\n+// errorcheck\n+\n+// Copyright 2016 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+// Test basic restrictions on type aliases.\n+\n+package p\n+\n+import (\n+\t\"reflect\"\n+\t. \"reflect\"\n+)\n+\n+type T0 struct{}\n+\n+// Valid type alias declarations.\n+\n+type _ = T0\n+type _ = int\n+type _ = struct{}\n+type _ = reflect.Value\n+type _ = Value\n+\n+type (\n+\tA0 = T0\n+\tA1 = int\n+\tA2 = struct{}\n+\tA3 = reflect.Value\n+\tA4 = Value\n+\tA5 = Value\n+\n+\tN0 A0\n+)\n+\n+// Methods can be declared on the original named type and the alias.\n+func (T0) m1()  {} // GCCGO_ERROR \"previous\"\n+func (*T0) m1() {} // ERROR \"method redeclared: T0\\.m1|redefinition of .m1.\"\n+func (A0) m1()  {} // ERROR \"T0\\.m1 redeclared in this block|redefinition of .m1.\"\n+func (A0) m1()  {} // ERROR \"T0\\.m1 redeclared in this block|redefinition of .m1.\"\n+func (A0) m2()  {}\n+\n+// Type aliases and the original type name can be used interchangeably.\n+var _ A0 = T0{}\n+var _ T0 = A0{}\n+\n+// But aliases and original types cannot be used with new types based on them.\n+var _ N0 = T0{} // ERROR \"cannot use T0 literal \\(type T0\\) as type N0 in assignment|incompatible type\"\n+var _ N0 = A0{} // ERROR \"cannot use T0 literal \\(type T0\\) as type N0 in assignment|incompatible type\"\n+\n+var _ A5 = Value{}\n+\n+var _ interface {\n+\tm1()\n+\tm2()\n+} = T0{}\n+\n+var _ interface {\n+\tm1()\n+\tm2()\n+} = A0{}\n+\n+func _() {\n+\ttype _ = T0\n+\ttype _ = int\n+\ttype _ = struct{}\n+\ttype _ = reflect.Value\n+\ttype _ = Value\n+\n+\ttype (\n+\t\tA0 = T0\n+\t\tA1 = int\n+\t\tA2 = struct{}\n+\t\tA3 = reflect.Value\n+\t\tA4 = Value\n+\t\tA5 Value\n+\n+\t\tN0 A0\n+\t)\n+\n+\tvar _ A0 = T0{}\n+\tvar _ T0 = A0{}\n+\n+\tvar _ N0 = T0{} // ERROR \"cannot use T0 literal \\(type T0\\) as type N0 in assignment|incompatible type\"\n+\tvar _ N0 = A0{} // ERROR \"cannot use T0 literal \\(type T0\\) as type N0 in assignment|incompatible type\"\n+\n+\tvar _ A5 = Value{} // ERROR \"cannot use reflect\\.Value literal \\(type reflect.Value\\) as type A5 in assignment|incompatible type\"\n+}\n+\n+// Invalid type alias declarations.\n+\n+type _ = reflect.ValueOf // ERROR \"reflect.ValueOf is not a type|expected type\"\n+\n+func (A1) m() {} // ERROR \"cannot define new methods on non-local type int|may not define methods on non-local type\"\n+func (A2) m() {} // ERROR \"invalid receiver type\"\n+func (A3) m() {} // ERROR \"cannot define new methods on non-local type reflect.Value|may not define methods on non-local type\"\n+func (A4) m() {} // ERROR \"cannot define new methods on non-local type reflect.Value|may not define methods on non-local type\"\n+\n+type B1 = struct{}\n+\n+func (B1) m() {} // ERROR \"invalid receiver type\"\n+\n+// TODO(gri) expand"}, {"sha": "09b3408d16c88e6c21a1d5d3b49ac9f833c3903c", "filename": "gcc/testsuite/go.test/test/alias3.dir/a.go", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Falias3.dir%2Fa.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Falias3.dir%2Fa.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Falias3.dir%2Fa.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,42 @@\n+// Copyright 2017 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+package a\n+\n+import \"go/build\"\n+\n+type (\n+\tFloat64 = float64\n+\tRune    = rune\n+)\n+\n+type (\n+\tInt       int\n+\tIntAlias  = Int\n+\tIntAlias2 = IntAlias\n+\tS         struct {\n+\t\tInt\n+\t\tIntAlias\n+\t\tIntAlias2\n+\t}\n+)\n+\n+type (\n+\tContext = build.Context\n+)\n+\n+type (\n+\tI1 interface {\n+\t\tM1(IntAlias2) Float64\n+\t\tM2() Context\n+\t}\n+\n+\tI2 = interface {\n+\t\tM1(Int) float64\n+\t\tM2() build.Context\n+\t}\n+)\n+\n+var i1 I1\n+var i2 I2 = i1"}, {"sha": "8a86cc064341e2b2a17a7b3a14fa54e59936ed41", "filename": "gcc/testsuite/go.test/test/alias3.dir/b.go", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Falias3.dir%2Fb.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Falias3.dir%2Fb.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Falias3.dir%2Fb.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,26 @@\n+// Copyright 2017 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+package b\n+\n+import (\n+\t\"./a\"\n+\t. \"go/build\"\n+)\n+\n+func F(x float64) a.Float64 {\n+\treturn x\n+}\n+\n+type MyContext = Context // = build.Context\n+\n+var C a.Context = Default\n+\n+type S struct{}\n+\n+func (S) M1(x a.IntAlias) float64 { return a.Float64(x) }\n+func (S) M2() Context             { return Default }\n+\n+var _ a.I1 = S{}\n+var _ a.I2 = S{}"}, {"sha": "161d5934c254622ebffe86c893e7ac745812bb74", "filename": "gcc/testsuite/go.test/test/alias3.dir/c.go", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Falias3.dir%2Fc.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Falias3.dir%2Fc.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Falias3.dir%2Fc.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,25 @@\n+// Copyright 2017 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+package main\n+\n+import (\n+\t\"./a\"\n+\t\"./b\"\n+)\n+\n+func main() {\n+\tvar _ float64 = b.F(0)\n+\tvar _ a.Rune = int32(0)\n+\n+\t// embedded types can have different names but the same types\n+\tvar s a.S\n+\ts.Int = 1\n+\ts.IntAlias = s.Int\n+\ts.IntAlias2 = s.Int\n+\n+\t// aliases denote identical types across packages\n+\tvar c a.Context = b.C\n+\tvar _ b.MyContext = c\n+}"}, {"sha": "c3732c311b75f5a3b24749ddd578a8ddd5281651", "filename": "gcc/testsuite/go.test/test/alias3.go", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Falias3.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Falias3.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Falias3.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,7 @@\n+// rundir\n+\n+// Copyright 2017 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+package ignored"}, {"sha": "20bca3a0f97ad9bb07fcaae8265d0a37c0ac1a73", "filename": "gcc/testsuite/go.test/test/chan/select8.go", "status": "added", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchan%2Fselect8.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchan%2Fselect8.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchan%2Fselect8.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,55 @@\n+// run\n+\n+// Copyright 2019 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+// Test break statements in a select.\n+// Gccgo had a bug in handling this.\n+// Test 1,2,3-case selects, so it covers both the general\n+// code path and the specialized optimizations for one-\n+// and two-case selects.\n+\n+package main\n+\n+var ch = make(chan int)\n+\n+func main() {\n+\tgo func() {\n+\t\tfor {\n+\t\t\tch <- 5\n+\t\t}\n+\t}()\n+\n+\tselect {\n+\tcase <-ch:\n+\t\tbreak\n+\t\tpanic(\"unreachable\")\n+\t}\n+\n+\tselect {\n+\tdefault:\n+\t\tbreak\n+\t\tpanic(\"unreachable\")\n+\t}\n+\n+\tselect {\n+\tcase <-ch:\n+\t\tbreak\n+\t\tpanic(\"unreachable\")\n+\tdefault:\n+\t\tbreak\n+\t\tpanic(\"unreachable\")\n+\t}\n+\n+\tselect {\n+\tcase <-ch:\n+\t\tbreak\n+\t\tpanic(\"unreachable\")\n+\tcase ch <- 10:\n+\t\tpanic(\"unreachable\")\n+\tdefault:\n+\t\tbreak\n+\t\tpanic(\"unreachable\")\n+\t}\n+}"}, {"sha": "eb1ad5e571a4839efba65e65f64fb92d79b3f2e5", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug487.go", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug487.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug487.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug487.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,24 @@\n+// errorcheck\n+\n+// Copyright 2014 The Go Authors.  All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+// The gccgo compiler did not reliably report mismatches between the\n+// number of function results and the number of expected results.\n+\n+package p\n+\n+func G() (int, int, int) {\n+\treturn 0, 0, 0\n+}\n+\n+func F() {\n+\ta, b := G()\t// ERROR \"mismatch\"\n+\ta, b = G()\t// ERROR \"mismatch\"\n+\t_, _ = a, b\n+}\n+\n+func H() (int, int) {\n+\treturn G()\t// ERROR \"too many|mismatch\"\n+}"}, {"sha": "94eaf7f1ea8e233259960f0555bfd02a72844e6d", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug488.dir/a.go", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug488.dir%2Fa.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug488.dir%2Fa.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug488.dir%2Fa.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,7 @@\n+// Copyright 2014 The Go Authors.  All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+package a\n+\n+var p2 = Printf\t\t// ERROR \"undefined\""}, {"sha": "21b4c5b541a0cef2fb949c584704526b875bc415", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug488.dir/b.go", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug488.dir%2Fb.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug488.dir%2Fb.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug488.dir%2Fb.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,9 @@\n+// Copyright 2014 The Go Authors.  All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+package a\n+\n+import . \"fmt\"\n+\n+var p1 = Print"}, {"sha": "63a601ed934573ed57a483b00b363d2a5021d829", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug488.go", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug488.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug488.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug488.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,12 @@\n+// errorcheckdir\n+\n+// Copyright 2014 The Go Authors.  All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+// The gccgo compiler had a bug: if one file in a package did a dot\n+// import, then an earlier file in the package would incorrectly\n+// resolve to the imported names rather than reporting undefined\n+// errors.\n+\n+package ignored"}, {"sha": "21b4c5b541a0cef2fb949c584704526b875bc415", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug489.dir/a.go", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug489.dir%2Fa.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug489.dir%2Fa.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug489.dir%2Fa.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,9 @@\n+// Copyright 2014 The Go Authors.  All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+package a\n+\n+import . \"fmt\"\n+\n+var p1 = Print"}, {"sha": "63eab86999ea823a4f69d9409b5ae6affe743045", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug489.dir/b.go", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug489.dir%2Fb.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug489.dir%2Fb.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug489.dir%2Fb.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,9 @@\n+// Copyright 2014 The Go Authors.  All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+package a\n+\n+import \"fmt\"\n+\n+var p2 = fmt.Printf"}, {"sha": "d5588013755a8fc209fcfb342a02ba547b14e757", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug489.dir/c.go", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug489.dir%2Fc.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug489.dir%2Fc.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug489.dir%2Fc.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,9 @@\n+// Copyright 2014 The Go Authors.  All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+package a\n+\n+import . \"fmt\"\n+\n+var p3 = Println"}, {"sha": "bf5e2cdbd35f1a134178077fa0fc4120f3e2a106", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug489.go", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug489.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug489.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug489.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,12 @@\n+// compiledir\n+\n+// Copyright 2014 The Go Authors.  All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+// The gccgo compiler had a bug: if one file in a package did a dot\n+// import, then an earlier file in the package would incorrectly\n+// resolve to the imported names rather than reporting undefined\n+// errors.\n+\n+package ignored"}, {"sha": "90917e55e839ba82754b5543d3c7ac43f5e2e23c", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug492.dir/a.go", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug492.dir%2Fa.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug492.dir%2Fa.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug492.dir%2Fa.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,16 @@\n+// Copyright 2014 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+package a\n+\n+type s struct {\n+\ts string\n+}\n+\n+func F1(s s) {\n+}\n+\n+func F2() s {\n+\treturn s{\"\"}\n+}"}, {"sha": "5b8c4f2a533eb8d68f24e2c323567a21aca1b33a", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug492.dir/b.go", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug492.dir%2Fb.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug492.dir%2Fb.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug492.dir%2Fb.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,11 @@\n+// Copyright 2014 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+package main\n+\n+import \"./a\"\n+\n+func main() {\n+\tdefer a.F1(a.F2())\n+}"}, {"sha": "050a9e5ee203e470c9b7a9c9a26ae4dd9440988e", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug492.go", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug492.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug492.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug492.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,9 @@\n+// rundir\n+\n+// Copyright 2014 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+// Test case that gccgo failed to link.\n+\n+package ignored"}, {"sha": "643e9af4b8ea79b42267d8dd8b9f534e6000157f", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug493.go", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug493.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug493.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug493.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,15 @@\n+// compile\n+\n+// Copyright 2014 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+// Test case that gccgo failed to compile.\n+\n+package p\n+\n+func F() []string {\n+\treturn []string{\"\"}\n+}\n+\n+var V = append(F())"}, {"sha": "42f18797f78cb6191e81ca79bae00b2bc4913e27", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug494.go", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug494.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug494.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug494.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,51 @@\n+// run\n+\n+// Copyright 2014 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+// Gccgo incorrectly executed functions multiple times when they\n+// appeared in a composite literal that required a conversion between\n+// different interface types.\n+\n+package main\n+\n+type MyInt int\n+\n+var c MyInt\n+\n+func (c *MyInt) S(i int) {\n+\t*c = MyInt(i)\n+}\n+\n+func (c *MyInt) V() int {\n+\treturn int(*c)\n+}\n+\n+type i1 interface {\n+\tS(int)\n+\tV() int\n+}\n+\n+type i2 interface {\n+\tV() int\n+}\n+\n+type s struct {\n+\ti i2\n+}\n+\n+func f() i1 {\n+\tc++\n+\treturn &c\n+}\n+\n+func main() {\n+\tp := &s{f()}\n+\tif v := p.i.V(); v != 1 {\n+\t\tpanic(v)\n+\t}\n+\tif c != 1 {\n+\t\tpanic(c)\n+\t}\n+}"}, {"sha": "4307c75e83a69b0785af1f08dd8b5408c2f97693", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug496.go", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug496.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug496.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug496.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,29 @@\n+// compile\n+\n+// Copyright 2015 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+// Gccgo used to give an error:\n+// <built-in>: error: redefinition of \u2018s$F$hash\u2019\n+// <built-in>: note: previous definition of \u2018s$F$hash\u2019 was here\n+// <built-in>: error: redefinition of \u2018s$F$equal\u2019\n+// <built-in>: note: previous definition of \u2018s$F$equal\u2019 was here\n+\n+package p\n+\n+type T1 int\n+\n+func (t T1) F() {\n+\ttype s struct {\n+\t\tf string\n+\t}\n+}\n+\n+type T2 int\n+\n+func (t T2) F() {\n+\ttype s struct {\n+\t\tf string\n+\t}\n+}"}, {"sha": "661cfacd7919c00028d6e8e6023fe1b5e8b65069", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug497.go", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug497.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug497.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug497.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,27 @@\n+// run\n+\n+// Copyright 2015 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+// Gccgo used to miscompile this, because of the empty struct.\n+\n+package main\n+\n+type T struct {\n+\tfield s\n+}\n+\n+type s struct{}\n+\n+var X T\n+\n+func F(_ T, c interface{}) int {\n+\treturn len(c.(string))\n+}\n+\n+func main() {\n+\tif v := F(X, \"hi\"); v != 2 {\n+\t\tpanic(v)\n+\t}\n+}"}, {"sha": "e4142e935bd131902760b7f178fccd523e8ef5b1", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug499.go", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug499.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug499.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug499.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,15 @@\n+// run\n+\n+// Copyright 2016 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+// Gccgo got confused when a type was used both for a map bucket type\n+// and for a map key type.\n+\n+package main\n+\n+func main() {\n+\t_ = make(map[byte]byte)\n+\t_ = make(map[[8]byte]chan struct{})\n+}"}, {"sha": "2dd5df13b0c5a92d75fc923ceeded2cbc3b44583", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug500.go", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug500.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug500.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug500.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,41 @@\n+// run\n+\n+// Copyright 2016 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+// Gccgo generated incorrect GC info when a global variable was\n+// initialized to a slice of a value containing pointers.  The initial\n+// backing array for the slice was allocated in the .data section,\n+// which is fine, but the backing array was not registered as a GC\n+// root.\n+\n+package main\n+\n+import (\n+\t\"runtime\"\n+)\n+\n+type s struct {\n+\tstr string\n+}\n+\n+var a = []struct {\n+\tstr string\n+}{\n+\t{\"\"},\n+}\n+\n+var b = \"b\"\n+var c = \"c\"\n+\n+func init() {\n+\ta[0].str = b + c\n+}\n+\n+func main() {\n+\truntime.GC()\n+\tif a[0].str != b + c {\n+\t\tpanic(a[0].str)\n+\t}\n+}"}, {"sha": "8e951b18c8e2a91885c99c4d86c6035cc4ab3dfb", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug501.go", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug501.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug501.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug501.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,24 @@\n+// run\n+\n+// Copyright 2016 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+// Gccgo got a compiler crash compiling the addition of more than five\n+// strings with mixed constants and variables.\n+\n+package main\n+\n+func F(s string) (string, error) {\n+\treturn s, nil\n+}\n+\n+func G(a, b, c string) (string, error) {\n+\treturn F(\"a\" + a + \"b\" + b + \"c\" + c)\n+}\n+\n+func main() {\n+\tif got, _ := G(\"x\", \"y\", \"z\"); got != \"axbycz\" {\n+\t\tpanic(got)\n+\t}\n+}"}, {"sha": "cff73e7d7fe0b238c49859c7eafb1ea7fa85ec81", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug502.go", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug502.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug502.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug502.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,28 @@\n+// build\n+\n+// Copyright 2017 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+// Linking this with gccgo got an undefined symbol reference,\n+// because the private method in testing.TB led gccgo to assume that\n+// the interface method table would be defined in the testing package.\n+\n+package main\n+\n+import \"testing\"\n+\n+type I interface {\n+\ttesting.TB\n+\tParallel()\n+}\n+\n+func F(i I) {\n+\ti.Log(\"F\")\n+}\n+\n+var t testing.T\n+\n+func main() {\n+\tF(&t)\n+}"}, {"sha": "7bbc7981c5e8684c8689c83c840d65f748556c84", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug503.go", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug503.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug503.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug503.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,16 @@\n+// compile\n+\n+// Copyright 2017 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+// gccgo crashed compiling this file, due to failing to correctly emit\n+// the type descriptor for a named alias.\n+\n+package p\n+\n+type entry = struct {\n+\ta, b, c int\n+}\n+\n+var V entry"}, {"sha": "ac0be937ab2d8cb08e688e364d1ab5cc8672d96f", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug504.dir/a.go", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug504.dir%2Fa.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug504.dir%2Fa.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug504.dir%2Fa.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,7 @@\n+// Copyright 2017 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+package a\n+\n+type MyInt = int"}, {"sha": "e8f8da9af88a42efb6c7a39501edc52a8af61415", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug504.dir/b.go", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug504.dir%2Fb.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug504.dir%2Fb.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug504.dir%2Fb.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,11 @@\n+// Copyright 2017 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+package b\n+\n+import \"./a\"\n+\n+func F() a.MyInt {\n+\treturn 0\n+}"}, {"sha": "5a6e889905986aad5ae22b891bf579210d96bb3a", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug504.dir/c.go", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug504.dir%2Fc.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug504.dir%2Fc.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug504.dir%2Fc.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,9 @@\n+// Copyright 2017 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+package c\n+\n+import \"./b\"\n+\n+var V = b.F()"}, {"sha": "bdbd95c7a3143dabb19a9761bbeca1e0df0acbdf", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug504.dir/main.go", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug504.dir%2Fmain.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug504.dir%2Fmain.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug504.dir%2Fmain.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,11 @@\n+// Copyright 2017 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+package main\n+\n+import \"./c\"\n+\n+func main() {\n+\tprintln(c.V)\n+}"}, {"sha": "ae1f2e52d8e0eeb6b26fd16e27cf7c68b96f2b0e", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug504.go", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug504.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug504.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug504.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,10 @@\n+// compiledir\n+\n+// Copyright 2017 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+// Gccgo mishandled a reference to a type alias in a package that was\n+// not directly imported.\n+\n+package ignored"}, {"sha": "062a0871688e1f8c5b3ba186a02c4dff86c3840c", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug505.go", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug505.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug505.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug505.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,20 @@\n+// compile\n+\n+// Copyright 2017 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+// gccgo crashed compiling this file with a failed conversion to the\n+// alias type when constructing the composite literal.\n+\n+package p\n+\n+type I interface{ M() }\n+type A = I\n+type S struct {\n+\tf A\n+}\n+\n+func F(i I) S {\n+\treturn S{f: i}\n+}"}, {"sha": "2729b81ac684c2e63033f3c36659e3fe6c3e09bb", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug506.dir/a.go", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug506.dir%2Fa.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug506.dir%2Fa.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug506.dir%2Fa.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,16 @@\n+// Copyright 2017 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+package a\n+\n+type internal struct {\n+\tf1 string\n+\tf2 float64\n+}\n+\n+type S struct {\n+\tF struct {\n+\t\tI internal\n+\t}\n+}"}, {"sha": "f54c95d3203b61cc304933e09307c47646bbc346", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug506.dir/main.go", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug506.dir%2Fmain.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug506.dir%2Fmain.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug506.dir%2Fmain.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,20 @@\n+// Copyright 2017 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+package main\n+\n+import (\n+\t\"fmt\"\n+\n+\t\"./a\"\n+)\n+\n+var v = a.S{}\n+\n+func main() {\n+\twant := \"{{ 0}}\"\n+\tif got := fmt.Sprint(v.F); got != want {\n+\t\tpanic(got)\n+\t}\n+}"}, {"sha": "3ca09ad0eccd9416152c330aa0d0d218790dd0a6", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug506.go", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug506.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug506.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug506.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,10 @@\n+// rundir\n+\n+// Copyright 2017 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+// Gccgo caused an undefined symbol reference building hash functions\n+// for an imported struct with unexported fields.\n+\n+package ignored"}, {"sha": "59d494281d0175fc6b032c10792f3278d930c0ba", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug507.dir/a.go", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug507.dir%2Fa.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug507.dir%2Fa.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug507.dir%2Fa.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,13 @@\n+// Copyright 2019 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+package a\n+\n+type I interface {\n+\tM()\n+}\n+\n+type S struct {\n+\tI I\n+}"}, {"sha": "6e4196412ffe834598aed6a2d2590e266e3ec6bd", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug507.dir/b.go", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug507.dir%2Fb.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug507.dir%2Fb.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug507.dir%2Fb.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,9 @@\n+// Copyright 2019 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+package b\n+\n+import . \"./a\"\n+\n+var V2 I"}, {"sha": "23846ed88a764895965590c3113ef41d2552c104", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug507.dir/c.go", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug507.dir%2Fc.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug507.dir%2Fc.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug507.dir%2Fc.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,9 @@\n+// Copyright 2019 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+package b\n+\n+import \"./a\"\n+\n+var V1 = a.S{I: nil}"}, {"sha": "48547b09be7427bbde91b928fdd092d831d69d41", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug507.go", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug507.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug507.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug507.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,9 @@\n+// compiledir\n+\n+// Copyright 2019 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+// Gccgo mishandled a combination of normal import and dot import.\n+\n+package ignored"}, {"sha": "69b1adaf9598cf7e9df524a90068c28564ef2688", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug508.go", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug508.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug508.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug508.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,14 @@\n+// compile\n+\n+// Copyright 2020 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+// Gccgo mishandles composite literals of map with type bool.\n+\n+package p\n+\n+var M = map[bool]uint8{\n+\tfalse: 0,\n+\ttrue: 1,\n+}"}, {"sha": "df6ed61f89363dc893f9aa5ebba1918e039afcde", "filename": "gcc/testsuite/go.test/test/fixedbugs/bug509.go", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug509.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug509.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fbug509.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,30 @@\n+// compile\n+\n+// Copyright 2020 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+// Gccgo mishandles a couple of alias cases.\n+\n+package p\n+\n+type S struct{}\n+\n+func (*S) M() {}\n+\n+type I interface {\n+\tM()\n+}\n+\n+type A = *S\n+\n+var V1 I\n+var _ = V1.(*S)\n+var _ = V1.(A)\n+\n+func F() {\n+\tvar v I\n+\tv = (*S)(nil)\n+\tv = A(nil)\n+\t_ = v\n+}"}, {"sha": "b557b2f1614794f65c37f7665c4e6b61142b5b57", "filename": "gcc/testsuite/go.test/test/fixedbugs/gcc67968.dir/a.go", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fgcc67968.dir%2Fa.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fgcc67968.dir%2Fa.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fgcc67968.dir%2Fa.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,8 @@\n+package a\n+\n+type T int\n+\n+func (a *T) Foo() [1]string {\n+\tvar r [1]string\n+\treturn r\n+}"}, {"sha": "4362b441260329a584d2c09e3e9e8be4694a7490", "filename": "gcc/testsuite/go.test/test/fixedbugs/gcc67968.dir/b.go", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fgcc67968.dir%2Fb.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fgcc67968.dir%2Fb.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fgcc67968.dir%2Fb.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,8 @@\n+package b\n+\n+import \"./a\"\n+\n+func F() (interface{}) {\n+     var v *a.T\n+     return v.Foo()\n+}"}, {"sha": "8db3dd8a51171a4ca5453f8edbad0b20c4441371", "filename": "gcc/testsuite/go.test/test/fixedbugs/gcc67968.go", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fgcc67968.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fgcc67968.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fgcc67968.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,14 @@\n+// compiledir\n+\n+// Copyright 2015 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+// https://gcc.gnu.org/PR67968\n+\n+// gccgo compiler crash building the equality and hash functions for a\n+// type when a return statement requires a conversion to interface\n+// type of a call of function defined in a different package that\n+// returns an unnamed type.\n+\n+package ignored"}, {"sha": "3e3412753ecfb5f66c638e8870d541d22510be90", "filename": "gcc/testsuite/go.test/test/fixedbugs/gcc78763.go", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fgcc78763.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fgcc78763.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fgcc78763.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,19 @@\n+// compile\n+\n+// Copyright 2016 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+// The gccgo compiler crashed while compiling this code.\n+// https://gcc.gnu.org/PR78763.\n+\n+package p\n+\n+import \"unsafe\"\n+\n+func F() int {\n+\tif unsafe.Sizeof(0) == 8 {\n+\t\treturn 8\n+\t}\n+\treturn 0\n+}"}, {"sha": "530b397f0f9d1d5eeb1c4ba816f669d87f0277eb", "filename": "gcc/testsuite/go.test/test/fixedbugs/gcc80226.go", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fgcc80226.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fgcc80226.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fgcc80226.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,17 @@\n+// compile\n+\n+// Copyright 2017 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+// The gccgo compiler crashed while compiling a function that returned\n+// multiple zero-sized structs.\n+// https://gcc.gnu.org/PR80226.\n+\n+package p\n+\n+type S struct{}\n+\n+func F() (S, S) {\n+\treturn S{}, S{}\n+}"}, {"sha": "93ca6b40a512b65dbd25ee0c6cb07cb8a60697ce", "filename": "gcc/testsuite/go.test/test/fixedbugs/gcc89321.go", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fgcc89321.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fgcc89321.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fgcc89321.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,17 @@\n+// compile\n+\n+// Copyright 2019 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+// https://gcc.gnu.org/PR89321\n+// gccgo compiler crash building map literals with a zero-sized value type.\n+\n+package p\n+\n+type M map[byte]struct{}\n+\n+var (\n+\tM1 = M{1: {}, 2: {}, 3: {}}\n+\tM2 = M{1: {}, 2: {}}\n+)"}, {"sha": "379a362d73b2d8c6f5c71a52df777f8ec9109951", "filename": "gcc/testsuite/go.test/test/fixedbugs/issue12621.go", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue12621.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue12621.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue12621.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,20 @@\n+// run\n+\n+// Copyright 2018 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+// Issues 12576 and 12621: Negative untyped floating point constants\n+// with small magnitude round to 0, not negative zero.\n+\n+package main\n+\n+import \"math\"\n+\n+var m = -1e-10000\n+\n+func main() {\n+\tif math.Signbit(m) {\n+\t\tpanic(m)\n+\t}\n+}"}, {"sha": "62b17a04c482e47bdd6640285c542f120a8cffd2", "filename": "gcc/testsuite/go.test/test/fixedbugs/issue14540.go", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue14540.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue14540.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue14540.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,20 @@\n+// errorcheck\n+\n+// Copyright 2017 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+package p\n+\n+func f(x int) {\n+\tswitch x {\n+\tcase 0:\n+\t\tfallthrough\n+\t\t; // ok\n+\tcase 1:\n+\t\tfallthrough // ERROR \"fallthrough statement out of place\"\n+\t\t{}\n+\tcase 2:\n+\t\tfallthrough // ERROR \"cannot fallthrough\"\n+\t}\n+}"}, {"sha": "936105ed126bd38e1128ce7e9721784c7f7b1e20", "filename": "gcc/testsuite/go.test/test/fixedbugs/issue15002.go", "status": "added", "additions": 132, "deletions": 0, "changes": 132, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue15002.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue15002.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue15002.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,132 @@\n+// run\n+// +build amd64\n+// +build linux darwin\n+\n+// Copyright 2016 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+package main\n+\n+import (\n+\t\"fmt\"\n+\t\"syscall\"\n+)\n+\n+// Use global variables so the compiler\n+// doesn't know that they are constants.\n+var p = syscall.Getpagesize()\n+var zero = 0\n+var one = 1\n+\n+func main() {\n+\t// Allocate 2 pages of memory.\n+\tb, err := syscall.Mmap(-1, 0, 2*p, syscall.PROT_READ|syscall.PROT_WRITE, syscall.MAP_ANON|syscall.MAP_PRIVATE)\n+\tif err != nil {\n+\t\tpanic(err)\n+\t}\n+\t// Mark the second page as faulting.\n+\terr = syscall.Mprotect(b[p:], syscall.PROT_NONE)\n+\tif err != nil {\n+\t\tpanic(err)\n+\t}\n+\t// Get a slice pointing to the last byte of the good page.\n+\tx := b[p-one : p]\n+\n+\ttest16(x)\n+\ttest16i(x, 0)\n+\ttest32(x)\n+\ttest32i(x, 0)\n+\ttest64(x)\n+\ttest64i(x, 0)\n+}\n+\n+func test16(x []byte) uint16 {\n+\tdefer func() {\n+\t\tr := recover()\n+\t\tif r == nil {\n+\t\t\tpanic(\"no fault or bounds check failure happened\")\n+\t\t}\n+\t\ts := fmt.Sprintf(\"%s\", r)\n+\t\tif s != \"runtime error: index out of range [1] with length 1\" {\n+\t\t\tpanic(\"bad panic: \" + s)\n+\t\t}\n+\t}()\n+\t// Try to read 2 bytes from x.\n+\treturn uint16(x[0]) | uint16(x[1])<<8\n+\n+\t// We expect to get an \"index out of range\" error from x[1].\n+\t// If we promote the first load to a 2-byte load, it will segfault, which we don't want.\n+}\n+\n+func test16i(x []byte, i int) uint16 {\n+\tdefer func() {\n+\t\tr := recover()\n+\t\tif r == nil {\n+\t\t\tpanic(\"no fault or bounds check failure happened\")\n+\t\t}\n+\t\ts := fmt.Sprintf(\"%s\", r)\n+\t\tif s != \"runtime error: index out of range [1] with length 1\" {\n+\t\t\tpanic(\"bad panic: \" + s)\n+\t\t}\n+\t}()\n+\treturn uint16(x[i]) | uint16(x[i+1])<<8\n+}\n+\n+func test32(x []byte) uint32 {\n+\tdefer func() {\n+\t\tr := recover()\n+\t\tif r == nil {\n+\t\t\tpanic(\"no fault or bounds check failure happened\")\n+\t\t}\n+\t\ts := fmt.Sprintf(\"%s\", r)\n+\t\tif s != \"runtime error: index out of range [1] with length 1\" {\n+\t\t\tpanic(\"bad panic: \" + s)\n+\t\t}\n+\t}()\n+\treturn uint32(x[0]) | uint32(x[1])<<8 | uint32(x[2])<<16 | uint32(x[3])<<24\n+}\n+\n+func test32i(x []byte, i int) uint32 {\n+\tdefer func() {\n+\t\tr := recover()\n+\t\tif r == nil {\n+\t\t\tpanic(\"no fault or bounds check failure happened\")\n+\t\t}\n+\t\ts := fmt.Sprintf(\"%s\", r)\n+\t\tif s != \"runtime error: index out of range [1] with length 1\" {\n+\t\t\tpanic(\"bad panic: \" + s)\n+\t\t}\n+\t}()\n+\treturn uint32(x[i]) | uint32(x[i+1])<<8 | uint32(x[i+2])<<16 | uint32(x[i+3])<<24\n+}\n+\n+func test64(x []byte) uint64 {\n+\tdefer func() {\n+\t\tr := recover()\n+\t\tif r == nil {\n+\t\t\tpanic(\"no fault or bounds check failure happened\")\n+\t\t}\n+\t\ts := fmt.Sprintf(\"%s\", r)\n+\t\tif s != \"runtime error: index out of range [1] with length 1\" {\n+\t\t\tpanic(\"bad panic: \" + s)\n+\t\t}\n+\t}()\n+\treturn uint64(x[0]) | uint64(x[1])<<8 | uint64(x[2])<<16 | uint64(x[3])<<24 |\n+\t\tuint64(x[4])<<32 | uint64(x[5])<<40 | uint64(x[6])<<48 | uint64(x[7])<<56\n+}\n+\n+func test64i(x []byte, i int) uint64 {\n+\tdefer func() {\n+\t\tr := recover()\n+\t\tif r == nil {\n+\t\t\tpanic(\"no fault or bounds check failure happened\")\n+\t\t}\n+\t\ts := fmt.Sprintf(\"%s\", r)\n+\t\tif s != \"runtime error: index out of range [1] with length 1\" {\n+\t\t\tpanic(\"bad panic: \" + s)\n+\t\t}\n+\t}()\n+\treturn uint64(x[i+0]) | uint64(x[i+1])<<8 | uint64(x[i+2])<<16 | uint64(x[i+3])<<24 |\n+\t\tuint64(x[i+4])<<32 | uint64(x[i+5])<<40 | uint64(x[i+6])<<48 | uint64(x[i+7])<<56\n+}"}, {"sha": "9ee3387e9693a0fe4022d502612401f9d003cae7", "filename": "gcc/testsuite/go.test/test/fixedbugs/issue16949.go", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue16949.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue16949.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue16949.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,30 @@\n+// errorcheck\n+\n+// Copyright 2016 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+// Ensure that typed non-integer len and cap make arguments are not accepted.\n+\n+package main\n+\n+var sink []byte\n+\n+func main() {\n+\tsink = make([]byte, 1.0)\n+\tsink = make([]byte, float32(1.0)) // ERROR \"non-integer.*len\"\n+\tsink = make([]byte, float64(1.0)) // ERROR \"non-integer.*len\"\n+\n+\tsink = make([]byte, 0, 1.0)\n+\tsink = make([]byte, 0, float32(1.0)) // ERROR \"non-integer.*cap\"\n+\tsink = make([]byte, 0, float64(1.0)) // ERROR \"non-integer.*cap\"\n+\n+\tsink = make([]byte, 1+0i)\n+\tsink = make([]byte, complex64(1+0i))  // ERROR \"non-integer.*len\"\n+\tsink = make([]byte, complex128(1+0i)) // ERROR \"non-integer.*len\"\n+\n+\tsink = make([]byte, 0, 1+0i)\n+\tsink = make([]byte, 0, complex64(1+0i))  // ERROR \"non-integer.*cap\"\n+\tsink = make([]byte, 0, complex128(1+0i)) // ERROR \"non-integer.*cap\"\n+\n+}"}, {"sha": "5e01dde699c3c68aa217e8772534d5914c7efb09", "filename": "gcc/testsuite/go.test/test/fixedbugs/issue19113.go", "status": "added", "additions": 108, "deletions": 0, "changes": 108, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue19113.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue19113.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue19113.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,108 @@\n+// run\n+\n+// Copyright 2019 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+package main\n+\n+import \"reflect\"\n+\n+var tests = []interface{}{\n+\tfunc(x int, s int) int {\n+\t\treturn x << s\n+\t},\n+\tfunc(x int, s int64) int {\n+\t\treturn x << s\n+\t},\n+\tfunc(x int, s int32) int {\n+\t\treturn x << s\n+\t},\n+\tfunc(x int, s int16) int {\n+\t\treturn x << s\n+\t},\n+\tfunc(x int, s int8) int {\n+\t\treturn x << s\n+\t},\n+\tfunc(x int, s int) int {\n+\t\treturn x >> s\n+\t},\n+\tfunc(x int, s int64) int {\n+\t\treturn x >> s\n+\t},\n+\tfunc(x int, s int32) int {\n+\t\treturn x >> s\n+\t},\n+\tfunc(x int, s int16) int {\n+\t\treturn x >> s\n+\t},\n+\tfunc(x int, s int8) int {\n+\t\treturn x >> s\n+\t},\n+\tfunc(x uint, s int) uint {\n+\t\treturn x << s\n+\t},\n+\tfunc(x uint, s int64) uint {\n+\t\treturn x << s\n+\t},\n+\tfunc(x uint, s int32) uint {\n+\t\treturn x << s\n+\t},\n+\tfunc(x uint, s int16) uint {\n+\t\treturn x << s\n+\t},\n+\tfunc(x uint, s int8) uint {\n+\t\treturn x << s\n+\t},\n+\tfunc(x uint, s int) uint {\n+\t\treturn x >> s\n+\t},\n+\tfunc(x uint, s int64) uint {\n+\t\treturn x >> s\n+\t},\n+\tfunc(x uint, s int32) uint {\n+\t\treturn x >> s\n+\t},\n+\tfunc(x uint, s int16) uint {\n+\t\treturn x >> s\n+\t},\n+\tfunc(x uint, s int8) uint {\n+\t\treturn x >> s\n+\t},\n+}\n+\n+func main() {\n+\tfor _, t := range tests {\n+\t\trunTest(reflect.ValueOf(t))\n+\t}\n+}\n+\n+func runTest(f reflect.Value) {\n+\txt := f.Type().In(0)\n+\tst := f.Type().In(1)\n+\n+\tfor _, x := range []int{1, 0, -1} {\n+\t\tfor _, s := range []int{-99, -64, -63, -32, -31, -16, -15, -8, -7, -1, 0, 1, 7, 8, 15, 16, 31, 32, 63, 64, 99} {\n+\t\t\targs := []reflect.Value{\n+\t\t\t\treflect.ValueOf(x).Convert(xt),\n+\t\t\t\treflect.ValueOf(s).Convert(st),\n+\t\t\t}\n+\t\t\tif s < 0 {\n+\t\t\t\tshouldPanic(func() {\n+\t\t\t\t\tf.Call(args)\n+\t\t\t\t})\n+\t\t\t} else {\n+\t\t\t\tf.Call(args) // should not panic\n+\t\t\t}\n+\t\t}\n+\t}\n+}\n+\n+func shouldPanic(f func()) {\n+\tdefer func() {\n+\t\tif recover() == nil {\n+\t\t\tpanic(\"did not panic\")\n+\t\t}\n+\t}()\n+\tf()\n+}"}, {"sha": "5fd1ad8a46b07b09eddb382baeb0227dcb4b2e81", "filename": "gcc/testsuite/go.test/test/fixedbugs/issue20923.go", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue20923.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue20923.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue20923.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,19 @@\n+// compile\n+\n+// Copyright 2018 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+// Issue 20923: gccgo failed to compile parenthesized select case expressions.\n+\n+package p\n+\n+func F(c chan bool) {\n+\tselect {\n+\tcase (<-c):\n+\tcase _ = (<-c):\n+\tcase _, _ = (<-c):\n+\tcase (c) <- true:\n+\tdefault:\n+\t}\n+}"}, {"sha": "3531b2b81fdf17a2ed9f4f65c210caeac17ccbff", "filename": "gcc/testsuite/go.test/test/fixedbugs/issue21253.go", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue21253.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue21253.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue21253.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,27 @@\n+// compile\n+\n+// Copyright 2017 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+// Gccgo crashed compiling this code due to failing to finalize\n+// interfaces in the right order.\n+\n+package p\n+\n+type s1 struct {\n+\tf m\n+\tI\n+}\n+\n+type m interface {\n+\tMm(*s2)\n+}\n+\n+type s2 struct {\n+\t*s1\n+}\n+\n+type I interface {\n+\tMI()\n+}"}, {"sha": "ec432f9ae8967852454a5956a9b30815d71c3f76", "filename": "gcc/testsuite/go.test/test/fixedbugs/issue22305.go", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue22305.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue22305.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue22305.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,15 @@\n+// compile\n+\n+// Copyright 2017 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+// Issue 22305: gccgo failed to compile this file.\n+\n+package main\n+\n+var F func() [0]func()\n+var i = 2\n+var B = F()[i]\n+\n+func main() {}"}, {"sha": "af005656d278964c8ef791708926539692f76b99", "filename": "gcc/testsuite/go.test/test/fixedbugs/issue23188.go", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue23188.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue23188.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue23188.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,32 @@\n+// run\n+\n+// Copyright 2018 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+// Test order of evaluation of index operations.\n+\n+package main\n+\n+func main() {\n+        arr := []int{1, 2}\n+\n+\t// The spec says that in an assignment statement the operands\n+\t// of all index expressions and pointer indirections on the\n+\t// left, and the expressions on the right, are evaluated in\n+\t// the usual order. The usual order means function calls and\n+\t// channel operations are done first. Then the assignments are\n+\t// carried out one at a time. The operands of an index\n+\t// expression include both the array and the index. So this\n+\t// evaluates as\n+\t//   tmp1 := arr\n+\t//   tmp2 := len(arr) - 1\n+\t//   tmp3 := len(arr)\n+\t//   arr = arr[:tmp3-1]\n+\t//   tmp1[tmp2] = 3\n+        arr, arr[len(arr)-1] = arr[:len(arr)-1], 3\n+\n+\tif len(arr) != 1 || arr[0] != 1 || arr[:2][1] != 3 {\n+\t\tpanic(arr)\n+\t}\n+}"}, {"sha": "1e64af1903aff6e47d7b160d22e8efc9fc32b38a", "filename": "gcc/testsuite/go.test/test/fixedbugs/issue23489.go", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue23489.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue23489.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue23489.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,20 @@\n+// run\n+\n+// Copyright 2017 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+// Caused gccgo to issue a spurious compilation error.\n+\n+package main\n+\n+type T struct{}\n+\n+func (*T) Foo() {}\n+\n+type P = *T\n+\n+func main() {\n+\tvar p P\n+\tp.Foo()\n+}"}, {"sha": "05ffd6be298613f77238085de4c384b31912cd4f", "filename": "gcc/testsuite/go.test/test/fixedbugs/issue23912.go", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue23912.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue23912.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue23912.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,30 @@\n+// compile\n+\n+// Copyright 2018 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+// A couple of aliases cases that gccgo incorrectly gave errors for.\n+\n+package p\n+\n+func F1() {\n+\ttype E = struct{}\n+\ttype X struct{}\n+\tvar x X\n+\tvar y E = x\n+\t_ = y\n+}\n+\n+func F2() {\n+\ttype E = struct{}\n+\ttype S []E\n+\ttype T []struct{}\n+\ttype X struct{}\n+\tvar x X\n+\ts := S{E{}}\n+\tt := T{struct{}{}}\n+\t_ = append(s, x)\n+\t_ = append(s, t[0])\n+\t_ = append(s, t...)\n+}"}, {"sha": "a97b4b6c72c2c1d6bebee918f39e3f0bd021e58a", "filename": "gcc/testsuite/go.test/test/fixedbugs/issue26335.go", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue26335.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue26335.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue26335.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,32 @@\n+// run\n+\n+// Copyright 2018 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+// gccgo mishandled passing a struct with an empty field through\n+// reflect.Value.Call.\n+\n+package main\n+\n+import (\n+\t\"reflect\"\n+)\n+\n+type Empty struct {\n+\tf1, f2 *byte\n+\tempty struct{}\n+}\n+\n+func F(e Empty, s []string) {\n+\tif len(s) != 1 || s[0] != \"hi\" {\n+\t\tpanic(\"bad slice\")\n+\t}\n+}\n+\n+func main() {\n+\treflect.ValueOf(F).Call([]reflect.Value{\n+\t\treflect.ValueOf(Empty{}),\n+\t\treflect.ValueOf([]string{\"hi\"}),\n+\t})\n+}"}, {"sha": "cbacd84f48912f4700c059bbadbf5dbe3536dad4", "filename": "gcc/testsuite/go.test/test/fixedbugs/issue26340.go", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue26340.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue26340.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue26340.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,21 @@\n+// compile\n+\n+// Copyright 2018 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+// gccgo did not permit omitting the type of a composite literal\n+// element when the element type is a pointer type.\n+\n+package p\n+\n+type S []T\n+type T struct { x int }\n+\n+var _ = map[string]*S{\n+\t\"a\": {\n+\t\t{ 1 },\n+\t},\n+}\n+\n+var _ = [1]*S{ { {1}, } }"}, {"sha": "ec367e9282d74cd719e9f430de63037bd1226fa6", "filename": "gcc/testsuite/go.test/test/fixedbugs/issue28601.go", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue28601.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue28601.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue28601.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,15 @@\n+// compile\n+\n+// Copyright 2018 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+// Failed to compile with gccgo.\n+\n+package p\n+\n+import \"unsafe\"\n+\n+const w int = int(unsafe.Sizeof(0))\n+\n+var a [w]byte"}, {"sha": "452a6e3ae80a7355e97558936ae6d3ec6f090467", "filename": "gcc/testsuite/go.test/test/fixedbugs/issue30116.go", "status": "added", "additions": 112, "deletions": 0, "changes": 112, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue30116.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue30116.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue30116.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,112 @@\n+// run\n+\n+// Copyright 2019 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+// This test makes sure the text output for bounds check failures is as expected.\n+\n+package main\n+\n+import (\n+\t\"fmt\"\n+\t\"os\"\n+\t\"runtime\"\n+\t\"text/tabwriter\"\n+)\n+\n+// Testing with length 3 slices, arrays, and strings.\n+// Large (>1<<32) values are included to test 32-bit platforms.\n+var indexes = []int64{-9876543210, -1, 0, 2, 3, 9876543210}\n+var slices = []int64{-9876543210, -1, 0, 3, 4, 9876543210}\n+\n+var w *tabwriter.Writer\n+\n+func main() {\n+\tw = tabwriter.NewWriter(os.Stdout, 0, 0, 1, ' ', tabwriter.AlignRight)\n+\tdefer w.Flush()\n+\tdoIndex()\n+\tdoSlice()\n+\tdoSlice3()\n+}\n+func doIndex() {\n+\ta := []int{1, 2, 3}\n+\tfor _, i := range indexes {\n+\t\tprintPanic(fmt.Sprintf(\"slice[%d]\", i), func() {\n+\t\t\t_ = a[i]\n+\t\t})\n+\t}\n+\tb := [3]int{1, 2, 3}\n+\tfor _, i := range indexes {\n+\t\tprintPanic(fmt.Sprintf(\"array[%d]\", i), func() {\n+\t\t\t_ = b[i]\n+\t\t})\n+\t}\n+\tc := \"123\"\n+\tfor _, i := range indexes {\n+\t\tprintPanic(fmt.Sprintf(\"string[%d]\", i), func() {\n+\t\t\t_ = c[i]\n+\t\t})\n+\t}\n+}\n+\n+func doSlice() {\n+\ta := []int{1, 2, 3}\n+\tfor _, i := range slices {\n+\t\tfor _, j := range slices {\n+\t\t\tprintPanic(fmt.Sprintf(\"slice[%d:%d]\", i, j), func() {\n+\t\t\t\t_ = a[i:j]\n+\t\t\t})\n+\t\t}\n+\t}\n+\tb := [3]int{1, 2, 3}\n+\tfor _, i := range slices {\n+\t\tfor _, j := range slices {\n+\t\t\tprintPanic(fmt.Sprintf(\"array[%d:%d]\", i, j), func() {\n+\t\t\t\t_ = b[i:j]\n+\t\t\t})\n+\t\t}\n+\t}\n+\tc := \"123\"\n+\tfor _, i := range slices {\n+\t\tfor _, j := range slices {\n+\t\t\tprintPanic(fmt.Sprintf(\"string[%d:%d]\", i, j), func() {\n+\t\t\t\t_ = c[i:j]\n+\t\t\t})\n+\t\t}\n+\t}\n+}\n+\n+func doSlice3() {\n+\ta := []int{1, 2, 3}\n+\tfor _, i := range slices {\n+\t\tfor _, j := range slices {\n+\t\t\tfor _, k := range slices {\n+\t\t\t\tprintPanic(fmt.Sprintf(\"slice[%d:%d:%d]\", i, j, k), func() {\n+\t\t\t\t\t_ = a[i:j:k]\n+\t\t\t\t})\n+\t\t\t}\n+\t\t}\n+\t}\n+\tb := [3]int{1, 2, 3}\n+\tfor _, i := range slices {\n+\t\tfor _, j := range slices {\n+\t\t\tfor _, k := range slices {\n+\t\t\t\tprintPanic(fmt.Sprintf(\"array[%d:%d:%d]\", i, j, k), func() {\n+\t\t\t\t\t_ = b[i:j:k]\n+\t\t\t\t})\n+\t\t\t}\n+\t\t}\n+\t}\n+}\n+\n+func printPanic(msg string, f func()) {\n+\tdefer func() {\n+\t\tres := \"no panic\"\n+\t\tif e := recover(); e != nil {\n+\t\t\tres = e.(runtime.Error).Error()\n+\t\t}\n+\t\tfmt.Fprintf(w, \"%s\\t %s\\n\", msg, res)\n+\t}()\n+\tf()\n+}"}, {"sha": "bde134d9509f57c2c5dc012979c34976e2d4fcfa", "filename": "gcc/testsuite/go.test/test/fixedbugs/issue30116.out", "status": "added", "additions": 558, "deletions": 0, "changes": 558, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue30116.out", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue30116.out", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue30116.out?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,558 @@\n+                         slice[-9876543210] runtime error: index out of range [-9876543210]\n+                                  slice[-1] runtime error: index out of range [-1]\n+                                   slice[0] no panic\n+                                   slice[2] no panic\n+                                   slice[3] runtime error: index out of range [3] with length 3\n+                          slice[9876543210] runtime error: index out of range [9876543210] with length 3\n+                         array[-9876543210] runtime error: index out of range [-9876543210]\n+                                  array[-1] runtime error: index out of range [-1]\n+                                   array[0] no panic\n+                                   array[2] no panic\n+                                   array[3] runtime error: index out of range [3] with length 3\n+                          array[9876543210] runtime error: index out of range [9876543210] with length 3\n+                        string[-9876543210] runtime error: index out of range [-9876543210]\n+                                 string[-1] runtime error: index out of range [-1]\n+                                  string[0] no panic\n+                                  string[2] no panic\n+                                  string[3] runtime error: index out of range [3] with length 3\n+                         string[9876543210] runtime error: index out of range [9876543210] with length 3\n+             slice[-9876543210:-9876543210] runtime error: slice bounds out of range [:-9876543210]\n+                      slice[-9876543210:-1] runtime error: slice bounds out of range [:-1]\n+                       slice[-9876543210:0] runtime error: slice bounds out of range [-9876543210:]\n+                       slice[-9876543210:3] runtime error: slice bounds out of range [-9876543210:]\n+                       slice[-9876543210:4] runtime error: slice bounds out of range [:4] with capacity 3\n+              slice[-9876543210:9876543210] runtime error: slice bounds out of range [:9876543210] with capacity 3\n+                      slice[-1:-9876543210] runtime error: slice bounds out of range [:-9876543210]\n+                               slice[-1:-1] runtime error: slice bounds out of range [:-1]\n+                                slice[-1:0] runtime error: slice bounds out of range [-1:]\n+                                slice[-1:3] runtime error: slice bounds out of range [-1:]\n+                                slice[-1:4] runtime error: slice bounds out of range [:4] with capacity 3\n+                       slice[-1:9876543210] runtime error: slice bounds out of range [:9876543210] with capacity 3\n+                       slice[0:-9876543210] runtime error: slice bounds out of range [:-9876543210]\n+                                slice[0:-1] runtime error: slice bounds out of range [:-1]\n+                                 slice[0:0] no panic\n+                                 slice[0:3] no panic\n+                                 slice[0:4] runtime error: slice bounds out of range [:4] with capacity 3\n+                        slice[0:9876543210] runtime error: slice bounds out of range [:9876543210] with capacity 3\n+                       slice[3:-9876543210] runtime error: slice bounds out of range [:-9876543210]\n+                                slice[3:-1] runtime error: slice bounds out of range [:-1]\n+                                 slice[3:0] runtime error: slice bounds out of range [3:0]\n+                                 slice[3:3] no panic\n+                                 slice[3:4] runtime error: slice bounds out of range [:4] with capacity 3\n+                        slice[3:9876543210] runtime error: slice bounds out of range [:9876543210] with capacity 3\n+                       slice[4:-9876543210] runtime error: slice bounds out of range [:-9876543210]\n+                                slice[4:-1] runtime error: slice bounds out of range [:-1]\n+                                 slice[4:0] runtime error: slice bounds out of range [4:0]\n+                                 slice[4:3] runtime error: slice bounds out of range [4:3]\n+                                 slice[4:4] runtime error: slice bounds out of range [:4] with capacity 3\n+                        slice[4:9876543210] runtime error: slice bounds out of range [:9876543210] with capacity 3\n+              slice[9876543210:-9876543210] runtime error: slice bounds out of range [:-9876543210]\n+                       slice[9876543210:-1] runtime error: slice bounds out of range [:-1]\n+                        slice[9876543210:0] runtime error: slice bounds out of range [9876543210:0]\n+                        slice[9876543210:3] runtime error: slice bounds out of range [9876543210:3]\n+                        slice[9876543210:4] runtime error: slice bounds out of range [:4] with capacity 3\n+               slice[9876543210:9876543210] runtime error: slice bounds out of range [:9876543210] with capacity 3\n+             array[-9876543210:-9876543210] runtime error: slice bounds out of range [:-9876543210]\n+                      array[-9876543210:-1] runtime error: slice bounds out of range [:-1]\n+                       array[-9876543210:0] runtime error: slice bounds out of range [-9876543210:]\n+                       array[-9876543210:3] runtime error: slice bounds out of range [-9876543210:]\n+                       array[-9876543210:4] runtime error: slice bounds out of range [:4] with length 3\n+              array[-9876543210:9876543210] runtime error: slice bounds out of range [:9876543210] with length 3\n+                      array[-1:-9876543210] runtime error: slice bounds out of range [:-9876543210]\n+                               array[-1:-1] runtime error: slice bounds out of range [:-1]\n+                                array[-1:0] runtime error: slice bounds out of range [-1:]\n+                                array[-1:3] runtime error: slice bounds out of range [-1:]\n+                                array[-1:4] runtime error: slice bounds out of range [:4] with length 3\n+                       array[-1:9876543210] runtime error: slice bounds out of range [:9876543210] with length 3\n+                       array[0:-9876543210] runtime error: slice bounds out of range [:-9876543210]\n+                                array[0:-1] runtime error: slice bounds out of range [:-1]\n+                                 array[0:0] no panic\n+                                 array[0:3] no panic\n+                                 array[0:4] runtime error: slice bounds out of range [:4] with length 3\n+                        array[0:9876543210] runtime error: slice bounds out of range [:9876543210] with length 3\n+                       array[3:-9876543210] runtime error: slice bounds out of range [:-9876543210]\n+                                array[3:-1] runtime error: slice bounds out of range [:-1]\n+                                 array[3:0] runtime error: slice bounds out of range [3:0]\n+                                 array[3:3] no panic\n+                                 array[3:4] runtime error: slice bounds out of range [:4] with length 3\n+                        array[3:9876543210] runtime error: slice bounds out of range [:9876543210] with length 3\n+                       array[4:-9876543210] runtime error: slice bounds out of range [:-9876543210]\n+                                array[4:-1] runtime error: slice bounds out of range [:-1]\n+                                 array[4:0] runtime error: slice bounds out of range [4:0]\n+                                 array[4:3] runtime error: slice bounds out of range [4:3]\n+                                 array[4:4] runtime error: slice bounds out of range [:4] with length 3\n+                        array[4:9876543210] runtime error: slice bounds out of range [:9876543210] with length 3\n+              array[9876543210:-9876543210] runtime error: slice bounds out of range [:-9876543210]\n+                       array[9876543210:-1] runtime error: slice bounds out of range [:-1]\n+                        array[9876543210:0] runtime error: slice bounds out of range [9876543210:0]\n+                        array[9876543210:3] runtime error: slice bounds out of range [9876543210:3]\n+                        array[9876543210:4] runtime error: slice bounds out of range [:4] with length 3\n+               array[9876543210:9876543210] runtime error: slice bounds out of range [:9876543210] with length 3\n+            string[-9876543210:-9876543210] runtime error: slice bounds out of range [:-9876543210]\n+                     string[-9876543210:-1] runtime error: slice bounds out of range [:-1]\n+                      string[-9876543210:0] runtime error: slice bounds out of range [-9876543210:]\n+                      string[-9876543210:3] runtime error: slice bounds out of range [-9876543210:]\n+                      string[-9876543210:4] runtime error: slice bounds out of range [:4] with length 3\n+             string[-9876543210:9876543210] runtime error: slice bounds out of range [:9876543210] with length 3\n+                     string[-1:-9876543210] runtime error: slice bounds out of range [:-9876543210]\n+                              string[-1:-1] runtime error: slice bounds out of range [:-1]\n+                               string[-1:0] runtime error: slice bounds out of range [-1:]\n+                               string[-1:3] runtime error: slice bounds out of range [-1:]\n+                               string[-1:4] runtime error: slice bounds out of range [:4] with length 3\n+                      string[-1:9876543210] runtime error: slice bounds out of range [:9876543210] with length 3\n+                      string[0:-9876543210] runtime error: slice bounds out of range [:-9876543210]\n+                               string[0:-1] runtime error: slice bounds out of range [:-1]\n+                                string[0:0] no panic\n+                                string[0:3] no panic\n+                                string[0:4] runtime error: slice bounds out of range [:4] with length 3\n+                       string[0:9876543210] runtime error: slice bounds out of range [:9876543210] with length 3\n+                      string[3:-9876543210] runtime error: slice bounds out of range [:-9876543210]\n+                               string[3:-1] runtime error: slice bounds out of range [:-1]\n+                                string[3:0] runtime error: slice bounds out of range [3:0]\n+                                string[3:3] no panic\n+                                string[3:4] runtime error: slice bounds out of range [:4] with length 3\n+                       string[3:9876543210] runtime error: slice bounds out of range [:9876543210] with length 3\n+                      string[4:-9876543210] runtime error: slice bounds out of range [:-9876543210]\n+                               string[4:-1] runtime error: slice bounds out of range [:-1]\n+                                string[4:0] runtime error: slice bounds out of range [4:0]\n+                                string[4:3] runtime error: slice bounds out of range [4:3]\n+                                string[4:4] runtime error: slice bounds out of range [:4] with length 3\n+                       string[4:9876543210] runtime error: slice bounds out of range [:9876543210] with length 3\n+             string[9876543210:-9876543210] runtime error: slice bounds out of range [:-9876543210]\n+                      string[9876543210:-1] runtime error: slice bounds out of range [:-1]\n+                       string[9876543210:0] runtime error: slice bounds out of range [9876543210:0]\n+                       string[9876543210:3] runtime error: slice bounds out of range [9876543210:3]\n+                       string[9876543210:4] runtime error: slice bounds out of range [:4] with length 3\n+              string[9876543210:9876543210] runtime error: slice bounds out of range [:9876543210] with length 3\n+ slice[-9876543210:-9876543210:-9876543210] runtime error: slice bounds out of range [::-9876543210]\n+          slice[-9876543210:-9876543210:-1] runtime error: slice bounds out of range [::-1]\n+           slice[-9876543210:-9876543210:0] runtime error: slice bounds out of range [:-9876543210:]\n+           slice[-9876543210:-9876543210:3] runtime error: slice bounds out of range [:-9876543210:]\n+           slice[-9876543210:-9876543210:4] runtime error: slice bounds out of range [::4] with capacity 3\n+  slice[-9876543210:-9876543210:9876543210] runtime error: slice bounds out of range [::9876543210] with capacity 3\n+          slice[-9876543210:-1:-9876543210] runtime error: slice bounds out of range [::-9876543210]\n+                   slice[-9876543210:-1:-1] runtime error: slice bounds out of range [::-1]\n+                    slice[-9876543210:-1:0] runtime error: slice bounds out of range [:-1:]\n+                    slice[-9876543210:-1:3] runtime error: slice bounds out of range [:-1:]\n+                    slice[-9876543210:-1:4] runtime error: slice bounds out of range [::4] with capacity 3\n+           slice[-9876543210:-1:9876543210] runtime error: slice bounds out of range [::9876543210] with capacity 3\n+           slice[-9876543210:0:-9876543210] runtime error: slice bounds out of range [::-9876543210]\n+                    slice[-9876543210:0:-1] runtime error: slice bounds out of range [::-1]\n+                     slice[-9876543210:0:0] runtime error: slice bounds out of range [-9876543210::]\n+                     slice[-9876543210:0:3] runtime error: slice bounds out of range [-9876543210::]\n+                     slice[-9876543210:0:4] runtime error: slice bounds out of range [::4] with capacity 3\n+            slice[-9876543210:0:9876543210] runtime error: slice bounds out of range [::9876543210] with capacity 3\n+           slice[-9876543210:3:-9876543210] runtime error: slice bounds out of range [::-9876543210]\n+                    slice[-9876543210:3:-1] runtime error: slice bounds out of range [::-1]\n+                     slice[-9876543210:3:0] runtime error: slice bounds out of range [:3:0]\n+                     slice[-9876543210:3:3] runtime error: slice bounds out of range [-9876543210::]\n+                     slice[-9876543210:3:4] runtime error: slice bounds out of range [::4] with capacity 3\n+            slice[-9876543210:3:9876543210] runtime error: slice bounds out of range [::9876543210] with capacity 3\n+           slice[-9876543210:4:-9876543210] runtime error: slice bounds out of range [::-9876543210]\n+                    slice[-9876543210:4:-1] runtime error: slice bounds out of range [::-1]\n+                     slice[-9876543210:4:0] runtime error: slice bounds out of range [:4:0]\n+                     slice[-9876543210:4:3] runtime error: slice bounds out of range [:4:3]\n+                     slice[-9876543210:4:4] runtime error: slice bounds out of range [::4] with capacity 3\n+            slice[-9876543210:4:9876543210] runtime error: slice bounds out of range [::9876543210] with capacity 3\n+  slice[-9876543210:9876543210:-9876543210] runtime error: slice bounds out of range [::-9876543210]\n+           slice[-9876543210:9876543210:-1] runtime error: slice bounds out of range [::-1]\n+            slice[-9876543210:9876543210:0] runtime error: slice bounds out of range [:9876543210:0]\n+            slice[-9876543210:9876543210:3] runtime error: slice bounds out of range [:9876543210:3]\n+            slice[-9876543210:9876543210:4] runtime error: slice bounds out of range [::4] with capacity 3\n+   slice[-9876543210:9876543210:9876543210] runtime error: slice bounds out of range [::9876543210] with capacity 3\n+          slice[-1:-9876543210:-9876543210] runtime error: slice bounds out of range [::-9876543210]\n+                   slice[-1:-9876543210:-1] runtime error: slice bounds out of range [::-1]\n+                    slice[-1:-9876543210:0] runtime error: slice bounds out of range [:-9876543210:]\n+                    slice[-1:-9876543210:3] runtime error: slice bounds out of range [:-9876543210:]\n+                    slice[-1:-9876543210:4] runtime error: slice bounds out of range [::4] with capacity 3\n+           slice[-1:-9876543210:9876543210] runtime error: slice bounds out of range [::9876543210] with capacity 3\n+                   slice[-1:-1:-9876543210] runtime error: slice bounds out of range [::-9876543210]\n+                            slice[-1:-1:-1] runtime error: slice bounds out of range [::-1]\n+                             slice[-1:-1:0] runtime error: slice bounds out of range [:-1:]\n+                             slice[-1:-1:3] runtime error: slice bounds out of range [:-1:]\n+                             slice[-1:-1:4] runtime error: slice bounds out of range [::4] with capacity 3\n+                    slice[-1:-1:9876543210] runtime error: slice bounds out of range [::9876543210] with capacity 3\n+                    slice[-1:0:-9876543210] runtime error: slice bounds out of range [::-9876543210]\n+                             slice[-1:0:-1] runtime error: slice bounds out of range [::-1]\n+                              slice[-1:0:0] runtime error: slice bounds out of range [-1::]\n+                              slice[-1:0:3] runtime error: slice bounds out of range [-1::]\n+                              slice[-1:0:4] runtime error: slice bounds out of range [::4] with capacity 3\n+                     slice[-1:0:9876543210] runtime error: slice bounds out of range [::9876543210] with capacity 3\n+                    slice[-1:3:-9876543210] runtime error: slice bounds out of range [::-9876543210]\n+                             slice[-1:3:-1] runtime error: slice bounds out of range [::-1]\n+                              slice[-1:3:0] runtime error: slice bounds out of range [:3:0]\n+                              slice[-1:3:3] runtime error: slice bounds out of range [-1::]\n+                              slice[-1:3:4] runtime error: slice bounds out of range [::4] with capacity 3\n+                     slice[-1:3:9876543210] runtime error: slice bounds out of range [::9876543210] with capacity 3\n+                    slice[-1:4:-9876543210] runtime error: slice bounds out of range [::-9876543210]\n+                             slice[-1:4:-1] runtime error: slice bounds out of range [::-1]\n+                              slice[-1:4:0] runtime error: slice bounds out of range [:4:0]\n+                              slice[-1:4:3] runtime error: slice bounds out of range [:4:3]\n+                              slice[-1:4:4] runtime error: slice bounds out of range [::4] with capacity 3\n+                     slice[-1:4:9876543210] runtime error: slice bounds out of range [::9876543210] with capacity 3\n+           slice[-1:9876543210:-9876543210] runtime error: slice bounds out of range [::-9876543210]\n+                    slice[-1:9876543210:-1] runtime error: slice bounds out of range [::-1]\n+                     slice[-1:9876543210:0] runtime error: slice bounds out of range [:9876543210:0]\n+                     slice[-1:9876543210:3] runtime error: slice bounds out of range [:9876543210:3]\n+                     slice[-1:9876543210:4] runtime error: slice bounds out of range [::4] with capacity 3\n+            slice[-1:9876543210:9876543210] runtime error: slice bounds out of range [::9876543210] with capacity 3\n+           slice[0:-9876543210:-9876543210] runtime error: slice bounds out of range [::-9876543210]\n+                    slice[0:-9876543210:-1] runtime error: slice bounds out of range [::-1]\n+                     slice[0:-9876543210:0] runtime error: slice bounds out of range [:-9876543210:]\n+                     slice[0:-9876543210:3] runtime error: slice bounds out of range [:-9876543210:]\n+                     slice[0:-9876543210:4] runtime error: slice bounds out of range [::4] with capacity 3\n+            slice[0:-9876543210:9876543210] runtime error: slice bounds out of range [::9876543210] with capacity 3\n+                    slice[0:-1:-9876543210] runtime error: slice bounds out of range [::-9876543210]\n+                             slice[0:-1:-1] runtime error: slice bounds out of range [::-1]\n+                              slice[0:-1:0] runtime error: slice bounds out of range [:-1:]\n+                              slice[0:-1:3] runtime error: slice bounds out of range [:-1:]\n+                              slice[0:-1:4] runtime error: slice bounds out of range [::4] with capacity 3\n+                     slice[0:-1:9876543210] runtime error: slice bounds out of range [::9876543210] with capacity 3\n+                     slice[0:0:-9876543210] runtime error: slice bounds out of range [::-9876543210]\n+                              slice[0:0:-1] runtime error: slice bounds out of range [::-1]\n+                               slice[0:0:0] no panic\n+                               slice[0:0:3] no panic\n+                               slice[0:0:4] runtime error: slice bounds out of range [::4] with capacity 3\n+                      slice[0:0:9876543210] runtime error: slice bounds out of range [::9876543210] with capacity 3\n+                     slice[0:3:-9876543210] runtime error: slice bounds out of range [::-9876543210]\n+                              slice[0:3:-1] runtime error: slice bounds out of range [::-1]\n+                               slice[0:3:0] runtime error: slice bounds out of range [:3:0]\n+                               slice[0:3:3] no panic\n+                               slice[0:3:4] runtime error: slice bounds out of range [::4] with capacity 3\n+                      slice[0:3:9876543210] runtime error: slice bounds out of range [::9876543210] with capacity 3\n+                     slice[0:4:-9876543210] runtime error: slice bounds out of range [::-9876543210]\n+                              slice[0:4:-1] runtime error: slice bounds out of range [::-1]\n+                               slice[0:4:0] runtime error: slice bounds out of range [:4:0]\n+                               slice[0:4:3] runtime error: slice bounds out of range [:4:3]\n+                               slice[0:4:4] runtime error: slice bounds out of range [::4] with capacity 3\n+                      slice[0:4:9876543210] runtime error: slice bounds out of range [::9876543210] with capacity 3\n+            slice[0:9876543210:-9876543210] runtime error: slice bounds out of range [::-9876543210]\n+                     slice[0:9876543210:-1] runtime error: slice bounds out of range [::-1]\n+                      slice[0:9876543210:0] runtime error: slice bounds out of range [:9876543210:0]\n+                      slice[0:9876543210:3] runtime error: slice bounds out of range [:9876543210:3]\n+                      slice[0:9876543210:4] runtime error: slice bounds out of range [::4] with capacity 3\n+             slice[0:9876543210:9876543210] runtime error: slice bounds out of range [::9876543210] with capacity 3\n+           slice[3:-9876543210:-9876543210] runtime error: slice bounds out of range [::-9876543210]\n+                    slice[3:-9876543210:-1] runtime error: slice bounds out of range [::-1]\n+                     slice[3:-9876543210:0] runtime error: slice bounds out of range [:-9876543210:]\n+                     slice[3:-9876543210:3] runtime error: slice bounds out of range [:-9876543210:]\n+                     slice[3:-9876543210:4] runtime error: slice bounds out of range [::4] with capacity 3\n+            slice[3:-9876543210:9876543210] runtime error: slice bounds out of range [::9876543210] with capacity 3\n+                    slice[3:-1:-9876543210] runtime error: slice bounds out of range [::-9876543210]\n+                             slice[3:-1:-1] runtime error: slice bounds out of range [::-1]\n+                              slice[3:-1:0] runtime error: slice bounds out of range [:-1:]\n+                              slice[3:-1:3] runtime error: slice bounds out of range [:-1:]\n+                              slice[3:-1:4] runtime error: slice bounds out of range [::4] with capacity 3\n+                     slice[3:-1:9876543210] runtime error: slice bounds out of range [::9876543210] with capacity 3\n+                     slice[3:0:-9876543210] runtime error: slice bounds out of range [::-9876543210]\n+                              slice[3:0:-1] runtime error: slice bounds out of range [::-1]\n+                               slice[3:0:0] runtime error: slice bounds out of range [3:0:]\n+                               slice[3:0:3] runtime error: slice bounds out of range [3:0:]\n+                               slice[3:0:4] runtime error: slice bounds out of range [::4] with capacity 3\n+                      slice[3:0:9876543210] runtime error: slice bounds out of range [::9876543210] with capacity 3\n+                     slice[3:3:-9876543210] runtime error: slice bounds out of range [::-9876543210]\n+                              slice[3:3:-1] runtime error: slice bounds out of range [::-1]\n+                               slice[3:3:0] runtime error: slice bounds out of range [:3:0]\n+                               slice[3:3:3] no panic\n+                               slice[3:3:4] runtime error: slice bounds out of range [::4] with capacity 3\n+                      slice[3:3:9876543210] runtime error: slice bounds out of range [::9876543210] with capacity 3\n+                     slice[3:4:-9876543210] runtime error: slice bounds out of range [::-9876543210]\n+                              slice[3:4:-1] runtime error: slice bounds out of range [::-1]\n+                               slice[3:4:0] runtime error: slice bounds out of range [:4:0]\n+                               slice[3:4:3] runtime error: slice bounds out of range [:4:3]\n+                               slice[3:4:4] runtime error: slice bounds out of range [::4] with capacity 3\n+                      slice[3:4:9876543210] runtime error: slice bounds out of range [::9876543210] with capacity 3\n+            slice[3:9876543210:-9876543210] runtime error: slice bounds out of range [::-9876543210]\n+                     slice[3:9876543210:-1] runtime error: slice bounds out of range [::-1]\n+                      slice[3:9876543210:0] runtime error: slice bounds out of range [:9876543210:0]\n+                      slice[3:9876543210:3] runtime error: slice bounds out of range [:9876543210:3]\n+                      slice[3:9876543210:4] runtime error: slice bounds out of range [::4] with capacity 3\n+             slice[3:9876543210:9876543210] runtime error: slice bounds out of range [::9876543210] with capacity 3\n+           slice[4:-9876543210:-9876543210] runtime error: slice bounds out of range [::-9876543210]\n+                    slice[4:-9876543210:-1] runtime error: slice bounds out of range [::-1]\n+                     slice[4:-9876543210:0] runtime error: slice bounds out of range [:-9876543210:]\n+                     slice[4:-9876543210:3] runtime error: slice bounds out of range [:-9876543210:]\n+                     slice[4:-9876543210:4] runtime error: slice bounds out of range [::4] with capacity 3\n+            slice[4:-9876543210:9876543210] runtime error: slice bounds out of range [::9876543210] with capacity 3\n+                    slice[4:-1:-9876543210] runtime error: slice bounds out of range [::-9876543210]\n+                             slice[4:-1:-1] runtime error: slice bounds out of range [::-1]\n+                              slice[4:-1:0] runtime error: slice bounds out of range [:-1:]\n+                              slice[4:-1:3] runtime error: slice bounds out of range [:-1:]\n+                              slice[4:-1:4] runtime error: slice bounds out of range [::4] with capacity 3\n+                     slice[4:-1:9876543210] runtime error: slice bounds out of range [::9876543210] with capacity 3\n+                     slice[4:0:-9876543210] runtime error: slice bounds out of range [::-9876543210]\n+                              slice[4:0:-1] runtime error: slice bounds out of range [::-1]\n+                               slice[4:0:0] runtime error: slice bounds out of range [4:0:]\n+                               slice[4:0:3] runtime error: slice bounds out of range [4:0:]\n+                               slice[4:0:4] runtime error: slice bounds out of range [::4] with capacity 3\n+                      slice[4:0:9876543210] runtime error: slice bounds out of range [::9876543210] with capacity 3\n+                     slice[4:3:-9876543210] runtime error: slice bounds out of range [::-9876543210]\n+                              slice[4:3:-1] runtime error: slice bounds out of range [::-1]\n+                               slice[4:3:0] runtime error: slice bounds out of range [:3:0]\n+                               slice[4:3:3] runtime error: slice bounds out of range [4:3:]\n+                               slice[4:3:4] runtime error: slice bounds out of range [::4] with capacity 3\n+                      slice[4:3:9876543210] runtime error: slice bounds out of range [::9876543210] with capacity 3\n+                     slice[4:4:-9876543210] runtime error: slice bounds out of range [::-9876543210]\n+                              slice[4:4:-1] runtime error: slice bounds out of range [::-1]\n+                               slice[4:4:0] runtime error: slice bounds out of range [:4:0]\n+                               slice[4:4:3] runtime error: slice bounds out of range [:4:3]\n+                               slice[4:4:4] runtime error: slice bounds out of range [::4] with capacity 3\n+                      slice[4:4:9876543210] runtime error: slice bounds out of range [::9876543210] with capacity 3\n+            slice[4:9876543210:-9876543210] runtime error: slice bounds out of range [::-9876543210]\n+                     slice[4:9876543210:-1] runtime error: slice bounds out of range [::-1]\n+                      slice[4:9876543210:0] runtime error: slice bounds out of range [:9876543210:0]\n+                      slice[4:9876543210:3] runtime error: slice bounds out of range [:9876543210:3]\n+                      slice[4:9876543210:4] runtime error: slice bounds out of range [::4] with capacity 3\n+             slice[4:9876543210:9876543210] runtime error: slice bounds out of range [::9876543210] with capacity 3\n+  slice[9876543210:-9876543210:-9876543210] runtime error: slice bounds out of range [::-9876543210]\n+           slice[9876543210:-9876543210:-1] runtime error: slice bounds out of range [::-1]\n+            slice[9876543210:-9876543210:0] runtime error: slice bounds out of range [:-9876543210:]\n+            slice[9876543210:-9876543210:3] runtime error: slice bounds out of range [:-9876543210:]\n+            slice[9876543210:-9876543210:4] runtime error: slice bounds out of range [::4] with capacity 3\n+   slice[9876543210:-9876543210:9876543210] runtime error: slice bounds out of range [::9876543210] with capacity 3\n+           slice[9876543210:-1:-9876543210] runtime error: slice bounds out of range [::-9876543210]\n+                    slice[9876543210:-1:-1] runtime error: slice bounds out of range [::-1]\n+                     slice[9876543210:-1:0] runtime error: slice bounds out of range [:-1:]\n+                     slice[9876543210:-1:3] runtime error: slice bounds out of range [:-1:]\n+                     slice[9876543210:-1:4] runtime error: slice bounds out of range [::4] with capacity 3\n+            slice[9876543210:-1:9876543210] runtime error: slice bounds out of range [::9876543210] with capacity 3\n+            slice[9876543210:0:-9876543210] runtime error: slice bounds out of range [::-9876543210]\n+                     slice[9876543210:0:-1] runtime error: slice bounds out of range [::-1]\n+                      slice[9876543210:0:0] runtime error: slice bounds out of range [9876543210:0:]\n+                      slice[9876543210:0:3] runtime error: slice bounds out of range [9876543210:0:]\n+                      slice[9876543210:0:4] runtime error: slice bounds out of range [::4] with capacity 3\n+             slice[9876543210:0:9876543210] runtime error: slice bounds out of range [::9876543210] with capacity 3\n+            slice[9876543210:3:-9876543210] runtime error: slice bounds out of range [::-9876543210]\n+                     slice[9876543210:3:-1] runtime error: slice bounds out of range [::-1]\n+                      slice[9876543210:3:0] runtime error: slice bounds out of range [:3:0]\n+                      slice[9876543210:3:3] runtime error: slice bounds out of range [9876543210:3:]\n+                      slice[9876543210:3:4] runtime error: slice bounds out of range [::4] with capacity 3\n+             slice[9876543210:3:9876543210] runtime error: slice bounds out of range [::9876543210] with capacity 3\n+            slice[9876543210:4:-9876543210] runtime error: slice bounds out of range [::-9876543210]\n+                     slice[9876543210:4:-1] runtime error: slice bounds out of range [::-1]\n+                      slice[9876543210:4:0] runtime error: slice bounds out of range [:4:0]\n+                      slice[9876543210:4:3] runtime error: slice bounds out of range [:4:3]\n+                      slice[9876543210:4:4] runtime error: slice bounds out of range [::4] with capacity 3\n+             slice[9876543210:4:9876543210] runtime error: slice bounds out of range [::9876543210] with capacity 3\n+   slice[9876543210:9876543210:-9876543210] runtime error: slice bounds out of range [::-9876543210]\n+            slice[9876543210:9876543210:-1] runtime error: slice bounds out of range [::-1]\n+             slice[9876543210:9876543210:0] runtime error: slice bounds out of range [:9876543210:0]\n+             slice[9876543210:9876543210:3] runtime error: slice bounds out of range [:9876543210:3]\n+             slice[9876543210:9876543210:4] runtime error: slice bounds out of range [::4] with capacity 3\n+    slice[9876543210:9876543210:9876543210] runtime error: slice bounds out of range [::9876543210] with capacity 3\n+ array[-9876543210:-9876543210:-9876543210] runtime error: slice bounds out of range [::-9876543210]\n+          array[-9876543210:-9876543210:-1] runtime error: slice bounds out of range [::-1]\n+           array[-9876543210:-9876543210:0] runtime error: slice bounds out of range [:-9876543210:]\n+           array[-9876543210:-9876543210:3] runtime error: slice bounds out of range [:-9876543210:]\n+           array[-9876543210:-9876543210:4] runtime error: slice bounds out of range [::4] with length 3\n+  array[-9876543210:-9876543210:9876543210] runtime error: slice bounds out of range [::9876543210] with length 3\n+          array[-9876543210:-1:-9876543210] runtime error: slice bounds out of range [::-9876543210]\n+                   array[-9876543210:-1:-1] runtime error: slice bounds out of range [::-1]\n+                    array[-9876543210:-1:0] runtime error: slice bounds out of range [:-1:]\n+                    array[-9876543210:-1:3] runtime error: slice bounds out of range [:-1:]\n+                    array[-9876543210:-1:4] runtime error: slice bounds out of range [::4] with length 3\n+           array[-9876543210:-1:9876543210] runtime error: slice bounds out of range [::9876543210] with length 3\n+           array[-9876543210:0:-9876543210] runtime error: slice bounds out of range [::-9876543210]\n+                    array[-9876543210:0:-1] runtime error: slice bounds out of range [::-1]\n+                     array[-9876543210:0:0] runtime error: slice bounds out of range [-9876543210::]\n+                     array[-9876543210:0:3] runtime error: slice bounds out of range [-9876543210::]\n+                     array[-9876543210:0:4] runtime error: slice bounds out of range [::4] with length 3\n+            array[-9876543210:0:9876543210] runtime error: slice bounds out of range [::9876543210] with length 3\n+           array[-9876543210:3:-9876543210] runtime error: slice bounds out of range [::-9876543210]\n+                    array[-9876543210:3:-1] runtime error: slice bounds out of range [::-1]\n+                     array[-9876543210:3:0] runtime error: slice bounds out of range [:3:0]\n+                     array[-9876543210:3:3] runtime error: slice bounds out of range [-9876543210::]\n+                     array[-9876543210:3:4] runtime error: slice bounds out of range [::4] with length 3\n+            array[-9876543210:3:9876543210] runtime error: slice bounds out of range [::9876543210] with length 3\n+           array[-9876543210:4:-9876543210] runtime error: slice bounds out of range [::-9876543210]\n+                    array[-9876543210:4:-1] runtime error: slice bounds out of range [::-1]\n+                     array[-9876543210:4:0] runtime error: slice bounds out of range [:4:0]\n+                     array[-9876543210:4:3] runtime error: slice bounds out of range [:4:3]\n+                     array[-9876543210:4:4] runtime error: slice bounds out of range [::4] with length 3\n+            array[-9876543210:4:9876543210] runtime error: slice bounds out of range [::9876543210] with length 3\n+  array[-9876543210:9876543210:-9876543210] runtime error: slice bounds out of range [::-9876543210]\n+           array[-9876543210:9876543210:-1] runtime error: slice bounds out of range [::-1]\n+            array[-9876543210:9876543210:0] runtime error: slice bounds out of range [:9876543210:0]\n+            array[-9876543210:9876543210:3] runtime error: slice bounds out of range [:9876543210:3]\n+            array[-9876543210:9876543210:4] runtime error: slice bounds out of range [::4] with length 3\n+   array[-9876543210:9876543210:9876543210] runtime error: slice bounds out of range [::9876543210] with length 3\n+          array[-1:-9876543210:-9876543210] runtime error: slice bounds out of range [::-9876543210]\n+                   array[-1:-9876543210:-1] runtime error: slice bounds out of range [::-1]\n+                    array[-1:-9876543210:0] runtime error: slice bounds out of range [:-9876543210:]\n+                    array[-1:-9876543210:3] runtime error: slice bounds out of range [:-9876543210:]\n+                    array[-1:-9876543210:4] runtime error: slice bounds out of range [::4] with length 3\n+           array[-1:-9876543210:9876543210] runtime error: slice bounds out of range [::9876543210] with length 3\n+                   array[-1:-1:-9876543210] runtime error: slice bounds out of range [::-9876543210]\n+                            array[-1:-1:-1] runtime error: slice bounds out of range [::-1]\n+                             array[-1:-1:0] runtime error: slice bounds out of range [:-1:]\n+                             array[-1:-1:3] runtime error: slice bounds out of range [:-1:]\n+                             array[-1:-1:4] runtime error: slice bounds out of range [::4] with length 3\n+                    array[-1:-1:9876543210] runtime error: slice bounds out of range [::9876543210] with length 3\n+                    array[-1:0:-9876543210] runtime error: slice bounds out of range [::-9876543210]\n+                             array[-1:0:-1] runtime error: slice bounds out of range [::-1]\n+                              array[-1:0:0] runtime error: slice bounds out of range [-1::]\n+                              array[-1:0:3] runtime error: slice bounds out of range [-1::]\n+                              array[-1:0:4] runtime error: slice bounds out of range [::4] with length 3\n+                     array[-1:0:9876543210] runtime error: slice bounds out of range [::9876543210] with length 3\n+                    array[-1:3:-9876543210] runtime error: slice bounds out of range [::-9876543210]\n+                             array[-1:3:-1] runtime error: slice bounds out of range [::-1]\n+                              array[-1:3:0] runtime error: slice bounds out of range [:3:0]\n+                              array[-1:3:3] runtime error: slice bounds out of range [-1::]\n+                              array[-1:3:4] runtime error: slice bounds out of range [::4] with length 3\n+                     array[-1:3:9876543210] runtime error: slice bounds out of range [::9876543210] with length 3\n+                    array[-1:4:-9876543210] runtime error: slice bounds out of range [::-9876543210]\n+                             array[-1:4:-1] runtime error: slice bounds out of range [::-1]\n+                              array[-1:4:0] runtime error: slice bounds out of range [:4:0]\n+                              array[-1:4:3] runtime error: slice bounds out of range [:4:3]\n+                              array[-1:4:4] runtime error: slice bounds out of range [::4] with length 3\n+                     array[-1:4:9876543210] runtime error: slice bounds out of range [::9876543210] with length 3\n+           array[-1:9876543210:-9876543210] runtime error: slice bounds out of range [::-9876543210]\n+                    array[-1:9876543210:-1] runtime error: slice bounds out of range [::-1]\n+                     array[-1:9876543210:0] runtime error: slice bounds out of range [:9876543210:0]\n+                     array[-1:9876543210:3] runtime error: slice bounds out of range [:9876543210:3]\n+                     array[-1:9876543210:4] runtime error: slice bounds out of range [::4] with length 3\n+            array[-1:9876543210:9876543210] runtime error: slice bounds out of range [::9876543210] with length 3\n+           array[0:-9876543210:-9876543210] runtime error: slice bounds out of range [::-9876543210]\n+                    array[0:-9876543210:-1] runtime error: slice bounds out of range [::-1]\n+                     array[0:-9876543210:0] runtime error: slice bounds out of range [:-9876543210:]\n+                     array[0:-9876543210:3] runtime error: slice bounds out of range [:-9876543210:]\n+                     array[0:-9876543210:4] runtime error: slice bounds out of range [::4] with length 3\n+            array[0:-9876543210:9876543210] runtime error: slice bounds out of range [::9876543210] with length 3\n+                    array[0:-1:-9876543210] runtime error: slice bounds out of range [::-9876543210]\n+                             array[0:-1:-1] runtime error: slice bounds out of range [::-1]\n+                              array[0:-1:0] runtime error: slice bounds out of range [:-1:]\n+                              array[0:-1:3] runtime error: slice bounds out of range [:-1:]\n+                              array[0:-1:4] runtime error: slice bounds out of range [::4] with length 3\n+                     array[0:-1:9876543210] runtime error: slice bounds out of range [::9876543210] with length 3\n+                     array[0:0:-9876543210] runtime error: slice bounds out of range [::-9876543210]\n+                              array[0:0:-1] runtime error: slice bounds out of range [::-1]\n+                               array[0:0:0] no panic\n+                               array[0:0:3] no panic\n+                               array[0:0:4] runtime error: slice bounds out of range [::4] with length 3\n+                      array[0:0:9876543210] runtime error: slice bounds out of range [::9876543210] with length 3\n+                     array[0:3:-9876543210] runtime error: slice bounds out of range [::-9876543210]\n+                              array[0:3:-1] runtime error: slice bounds out of range [::-1]\n+                               array[0:3:0] runtime error: slice bounds out of range [:3:0]\n+                               array[0:3:3] no panic\n+                               array[0:3:4] runtime error: slice bounds out of range [::4] with length 3\n+                      array[0:3:9876543210] runtime error: slice bounds out of range [::9876543210] with length 3\n+                     array[0:4:-9876543210] runtime error: slice bounds out of range [::-9876543210]\n+                              array[0:4:-1] runtime error: slice bounds out of range [::-1]\n+                               array[0:4:0] runtime error: slice bounds out of range [:4:0]\n+                               array[0:4:3] runtime error: slice bounds out of range [:4:3]\n+                               array[0:4:4] runtime error: slice bounds out of range [::4] with length 3\n+                      array[0:4:9876543210] runtime error: slice bounds out of range [::9876543210] with length 3\n+            array[0:9876543210:-9876543210] runtime error: slice bounds out of range [::-9876543210]\n+                     array[0:9876543210:-1] runtime error: slice bounds out of range [::-1]\n+                      array[0:9876543210:0] runtime error: slice bounds out of range [:9876543210:0]\n+                      array[0:9876543210:3] runtime error: slice bounds out of range [:9876543210:3]\n+                      array[0:9876543210:4] runtime error: slice bounds out of range [::4] with length 3\n+             array[0:9876543210:9876543210] runtime error: slice bounds out of range [::9876543210] with length 3\n+           array[3:-9876543210:-9876543210] runtime error: slice bounds out of range [::-9876543210]\n+                    array[3:-9876543210:-1] runtime error: slice bounds out of range [::-1]\n+                     array[3:-9876543210:0] runtime error: slice bounds out of range [:-9876543210:]\n+                     array[3:-9876543210:3] runtime error: slice bounds out of range [:-9876543210:]\n+                     array[3:-9876543210:4] runtime error: slice bounds out of range [::4] with length 3\n+            array[3:-9876543210:9876543210] runtime error: slice bounds out of range [::9876543210] with length 3\n+                    array[3:-1:-9876543210] runtime error: slice bounds out of range [::-9876543210]\n+                             array[3:-1:-1] runtime error: slice bounds out of range [::-1]\n+                              array[3:-1:0] runtime error: slice bounds out of range [:-1:]\n+                              array[3:-1:3] runtime error: slice bounds out of range [:-1:]\n+                              array[3:-1:4] runtime error: slice bounds out of range [::4] with length 3\n+                     array[3:-1:9876543210] runtime error: slice bounds out of range [::9876543210] with length 3\n+                     array[3:0:-9876543210] runtime error: slice bounds out of range [::-9876543210]\n+                              array[3:0:-1] runtime error: slice bounds out of range [::-1]\n+                               array[3:0:0] runtime error: slice bounds out of range [3:0:]\n+                               array[3:0:3] runtime error: slice bounds out of range [3:0:]\n+                               array[3:0:4] runtime error: slice bounds out of range [::4] with length 3\n+                      array[3:0:9876543210] runtime error: slice bounds out of range [::9876543210] with length 3\n+                     array[3:3:-9876543210] runtime error: slice bounds out of range [::-9876543210]\n+                              array[3:3:-1] runtime error: slice bounds out of range [::-1]\n+                               array[3:3:0] runtime error: slice bounds out of range [:3:0]\n+                               array[3:3:3] no panic\n+                               array[3:3:4] runtime error: slice bounds out of range [::4] with length 3\n+                      array[3:3:9876543210] runtime error: slice bounds out of range [::9876543210] with length 3\n+                     array[3:4:-9876543210] runtime error: slice bounds out of range [::-9876543210]\n+                              array[3:4:-1] runtime error: slice bounds out of range [::-1]\n+                               array[3:4:0] runtime error: slice bounds out of range [:4:0]\n+                               array[3:4:3] runtime error: slice bounds out of range [:4:3]\n+                               array[3:4:4] runtime error: slice bounds out of range [::4] with length 3\n+                      array[3:4:9876543210] runtime error: slice bounds out of range [::9876543210] with length 3\n+            array[3:9876543210:-9876543210] runtime error: slice bounds out of range [::-9876543210]\n+                     array[3:9876543210:-1] runtime error: slice bounds out of range [::-1]\n+                      array[3:9876543210:0] runtime error: slice bounds out of range [:9876543210:0]\n+                      array[3:9876543210:3] runtime error: slice bounds out of range [:9876543210:3]\n+                      array[3:9876543210:4] runtime error: slice bounds out of range [::4] with length 3\n+             array[3:9876543210:9876543210] runtime error: slice bounds out of range [::9876543210] with length 3\n+           array[4:-9876543210:-9876543210] runtime error: slice bounds out of range [::-9876543210]\n+                    array[4:-9876543210:-1] runtime error: slice bounds out of range [::-1]\n+                     array[4:-9876543210:0] runtime error: slice bounds out of range [:-9876543210:]\n+                     array[4:-9876543210:3] runtime error: slice bounds out of range [:-9876543210:]\n+                     array[4:-9876543210:4] runtime error: slice bounds out of range [::4] with length 3\n+            array[4:-9876543210:9876543210] runtime error: slice bounds out of range [::9876543210] with length 3\n+                    array[4:-1:-9876543210] runtime error: slice bounds out of range [::-9876543210]\n+                             array[4:-1:-1] runtime error: slice bounds out of range [::-1]\n+                              array[4:-1:0] runtime error: slice bounds out of range [:-1:]\n+                              array[4:-1:3] runtime error: slice bounds out of range [:-1:]\n+                              array[4:-1:4] runtime error: slice bounds out of range [::4] with length 3\n+                     array[4:-1:9876543210] runtime error: slice bounds out of range [::9876543210] with length 3\n+                     array[4:0:-9876543210] runtime error: slice bounds out of range [::-9876543210]\n+                              array[4:0:-1] runtime error: slice bounds out of range [::-1]\n+                               array[4:0:0] runtime error: slice bounds out of range [4:0:]\n+                               array[4:0:3] runtime error: slice bounds out of range [4:0:]\n+                               array[4:0:4] runtime error: slice bounds out of range [::4] with length 3\n+                      array[4:0:9876543210] runtime error: slice bounds out of range [::9876543210] with length 3\n+                     array[4:3:-9876543210] runtime error: slice bounds out of range [::-9876543210]\n+                              array[4:3:-1] runtime error: slice bounds out of range [::-1]\n+                               array[4:3:0] runtime error: slice bounds out of range [:3:0]\n+                               array[4:3:3] runtime error: slice bounds out of range [4:3:]\n+                               array[4:3:4] runtime error: slice bounds out of range [::4] with length 3\n+                      array[4:3:9876543210] runtime error: slice bounds out of range [::9876543210] with length 3\n+                     array[4:4:-9876543210] runtime error: slice bounds out of range [::-9876543210]\n+                              array[4:4:-1] runtime error: slice bounds out of range [::-1]\n+                               array[4:4:0] runtime error: slice bounds out of range [:4:0]\n+                               array[4:4:3] runtime error: slice bounds out of range [:4:3]\n+                               array[4:4:4] runtime error: slice bounds out of range [::4] with length 3\n+                      array[4:4:9876543210] runtime error: slice bounds out of range [::9876543210] with length 3\n+            array[4:9876543210:-9876543210] runtime error: slice bounds out of range [::-9876543210]\n+                     array[4:9876543210:-1] runtime error: slice bounds out of range [::-1]\n+                      array[4:9876543210:0] runtime error: slice bounds out of range [:9876543210:0]\n+                      array[4:9876543210:3] runtime error: slice bounds out of range [:9876543210:3]\n+                      array[4:9876543210:4] runtime error: slice bounds out of range [::4] with length 3\n+             array[4:9876543210:9876543210] runtime error: slice bounds out of range [::9876543210] with length 3\n+  array[9876543210:-9876543210:-9876543210] runtime error: slice bounds out of range [::-9876543210]\n+           array[9876543210:-9876543210:-1] runtime error: slice bounds out of range [::-1]\n+            array[9876543210:-9876543210:0] runtime error: slice bounds out of range [:-9876543210:]\n+            array[9876543210:-9876543210:3] runtime error: slice bounds out of range [:-9876543210:]\n+            array[9876543210:-9876543210:4] runtime error: slice bounds out of range [::4] with length 3\n+   array[9876543210:-9876543210:9876543210] runtime error: slice bounds out of range [::9876543210] with length 3\n+           array[9876543210:-1:-9876543210] runtime error: slice bounds out of range [::-9876543210]\n+                    array[9876543210:-1:-1] runtime error: slice bounds out of range [::-1]\n+                     array[9876543210:-1:0] runtime error: slice bounds out of range [:-1:]\n+                     array[9876543210:-1:3] runtime error: slice bounds out of range [:-1:]\n+                     array[9876543210:-1:4] runtime error: slice bounds out of range [::4] with length 3\n+            array[9876543210:-1:9876543210] runtime error: slice bounds out of range [::9876543210] with length 3\n+            array[9876543210:0:-9876543210] runtime error: slice bounds out of range [::-9876543210]\n+                     array[9876543210:0:-1] runtime error: slice bounds out of range [::-1]\n+                      array[9876543210:0:0] runtime error: slice bounds out of range [9876543210:0:]\n+                      array[9876543210:0:3] runtime error: slice bounds out of range [9876543210:0:]\n+                      array[9876543210:0:4] runtime error: slice bounds out of range [::4] with length 3\n+             array[9876543210:0:9876543210] runtime error: slice bounds out of range [::9876543210] with length 3\n+            array[9876543210:3:-9876543210] runtime error: slice bounds out of range [::-9876543210]\n+                     array[9876543210:3:-1] runtime error: slice bounds out of range [::-1]\n+                      array[9876543210:3:0] runtime error: slice bounds out of range [:3:0]\n+                      array[9876543210:3:3] runtime error: slice bounds out of range [9876543210:3:]\n+                      array[9876543210:3:4] runtime error: slice bounds out of range [::4] with length 3\n+             array[9876543210:3:9876543210] runtime error: slice bounds out of range [::9876543210] with length 3\n+            array[9876543210:4:-9876543210] runtime error: slice bounds out of range [::-9876543210]\n+                     array[9876543210:4:-1] runtime error: slice bounds out of range [::-1]\n+                      array[9876543210:4:0] runtime error: slice bounds out of range [:4:0]\n+                      array[9876543210:4:3] runtime error: slice bounds out of range [:4:3]\n+                      array[9876543210:4:4] runtime error: slice bounds out of range [::4] with length 3\n+             array[9876543210:4:9876543210] runtime error: slice bounds out of range [::9876543210] with length 3\n+   array[9876543210:9876543210:-9876543210] runtime error: slice bounds out of range [::-9876543210]\n+            array[9876543210:9876543210:-1] runtime error: slice bounds out of range [::-1]\n+             array[9876543210:9876543210:0] runtime error: slice bounds out of range [:9876543210:0]\n+             array[9876543210:9876543210:3] runtime error: slice bounds out of range [:9876543210:3]\n+             array[9876543210:9876543210:4] runtime error: slice bounds out of range [::4] with length 3\n+    array[9876543210:9876543210:9876543210] runtime error: slice bounds out of range [::9876543210] with length 3"}, {"sha": "7c2aea2cd4871bd76662b2ce6f114d168e14db64", "filename": "gcc/testsuite/go.test/test/fixedbugs/issue30116u.go", "status": "added", "additions": 112, "deletions": 0, "changes": 112, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue30116u.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue30116u.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue30116u.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,112 @@\n+// run\n+\n+// Copyright 2019 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+// This test makes sure the text output for bounds check failures is as expected.\n+\n+package main\n+\n+import (\n+\t\"fmt\"\n+\t\"os\"\n+\t\"runtime\"\n+\t\"text/tabwriter\"\n+)\n+\n+// Testing with length 3 slices, arrays, and strings.\n+// A large (>1<<32) value is included to test 32-bit platforms.\n+var indexes = []uint64{0, 2, 3, 1<<32 - 1, 1<<64 - 1}\n+var slices = []uint64{0, 3, 4, 1<<32 - 1, 1<<64 - 1}\n+\n+var w *tabwriter.Writer\n+\n+func main() {\n+\tw = tabwriter.NewWriter(os.Stdout, 0, 0, 1, ' ', tabwriter.AlignRight)\n+\tdefer w.Flush()\n+\tdoIndex()\n+\tdoSlice()\n+\tdoSlice3()\n+}\n+func doIndex() {\n+\ta := []int{1, 2, 3}\n+\tfor _, i := range indexes {\n+\t\tprintPanic(fmt.Sprintf(\"slice[%d]\", i), func() {\n+\t\t\t_ = a[i]\n+\t\t})\n+\t}\n+\tb := [3]int{1, 2, 3}\n+\tfor _, i := range indexes {\n+\t\tprintPanic(fmt.Sprintf(\"array[%d]\", i), func() {\n+\t\t\t_ = b[i]\n+\t\t})\n+\t}\n+\tc := \"123\"\n+\tfor _, i := range indexes {\n+\t\tprintPanic(fmt.Sprintf(\"string[%d]\", i), func() {\n+\t\t\t_ = c[i]\n+\t\t})\n+\t}\n+}\n+\n+func doSlice() {\n+\ta := []int{1, 2, 3}\n+\tfor _, i := range slices {\n+\t\tfor _, j := range slices {\n+\t\t\tprintPanic(fmt.Sprintf(\"slice[%d:%d]\", i, j), func() {\n+\t\t\t\t_ = a[i:j]\n+\t\t\t})\n+\t\t}\n+\t}\n+\tb := [3]int{1, 2, 3}\n+\tfor _, i := range slices {\n+\t\tfor _, j := range slices {\n+\t\t\tprintPanic(fmt.Sprintf(\"array[%d:%d]\", i, j), func() {\n+\t\t\t\t_ = b[i:j]\n+\t\t\t})\n+\t\t}\n+\t}\n+\tc := \"123\"\n+\tfor _, i := range slices {\n+\t\tfor _, j := range slices {\n+\t\t\tprintPanic(fmt.Sprintf(\"string[%d:%d]\", i, j), func() {\n+\t\t\t\t_ = c[i:j]\n+\t\t\t})\n+\t\t}\n+\t}\n+}\n+\n+func doSlice3() {\n+\ta := []int{1, 2, 3}\n+\tfor _, i := range slices {\n+\t\tfor _, j := range slices {\n+\t\t\tfor _, k := range slices {\n+\t\t\t\tprintPanic(fmt.Sprintf(\"slice[%d:%d:%d]\", i, j, k), func() {\n+\t\t\t\t\t_ = a[i:j:k]\n+\t\t\t\t})\n+\t\t\t}\n+\t\t}\n+\t}\n+\tb := [3]int{1, 2, 3}\n+\tfor _, i := range slices {\n+\t\tfor _, j := range slices {\n+\t\t\tfor _, k := range slices {\n+\t\t\t\tprintPanic(fmt.Sprintf(\"array[%d:%d:%d]\", i, j, k), func() {\n+\t\t\t\t\t_ = b[i:j:k]\n+\t\t\t\t})\n+\t\t\t}\n+\t\t}\n+\t}\n+}\n+\n+func printPanic(msg string, f func()) {\n+\tdefer func() {\n+\t\tres := \"no panic\"\n+\t\tif e := recover(); e != nil {\n+\t\t\tres = e.(runtime.Error).Error()\n+\t\t}\n+\t\tfmt.Fprintf(w, \"%s\\t %s\\n\", msg, res)\n+\t}()\n+\tf()\n+}"}, {"sha": "ee19192aaab87a3896973e8fc4643fce098bdf07", "filename": "gcc/testsuite/go.test/test/fixedbugs/issue30116u.out", "status": "added", "additions": 340, "deletions": 0, "changes": 340, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue30116u.out", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue30116u.out", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue30116u.out?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,340 @@\n+                                                              slice[0] no panic\n+                                                              slice[2] no panic\n+                                                              slice[3] runtime error: index out of range [3] with length 3\n+                                                     slice[4294967295] runtime error: index out of range [4294967295] with length 3\n+                                           slice[18446744073709551615] runtime error: index out of range [18446744073709551615] with length 3\n+                                                              array[0] no panic\n+                                                              array[2] no panic\n+                                                              array[3] runtime error: index out of range [3] with length 3\n+                                                     array[4294967295] runtime error: index out of range [4294967295] with length 3\n+                                           array[18446744073709551615] runtime error: index out of range [18446744073709551615] with length 3\n+                                                             string[0] no panic\n+                                                             string[2] no panic\n+                                                             string[3] runtime error: index out of range [3] with length 3\n+                                                    string[4294967295] runtime error: index out of range [4294967295] with length 3\n+                                          string[18446744073709551615] runtime error: index out of range [18446744073709551615] with length 3\n+                                                            slice[0:0] no panic\n+                                                            slice[0:3] no panic\n+                                                            slice[0:4] runtime error: slice bounds out of range [:4] with capacity 3\n+                                                   slice[0:4294967295] runtime error: slice bounds out of range [:4294967295] with capacity 3\n+                                         slice[0:18446744073709551615] runtime error: slice bounds out of range [:18446744073709551615] with capacity 3\n+                                                            slice[3:0] runtime error: slice bounds out of range [3:0]\n+                                                            slice[3:3] no panic\n+                                                            slice[3:4] runtime error: slice bounds out of range [:4] with capacity 3\n+                                                   slice[3:4294967295] runtime error: slice bounds out of range [:4294967295] with capacity 3\n+                                         slice[3:18446744073709551615] runtime error: slice bounds out of range [:18446744073709551615] with capacity 3\n+                                                            slice[4:0] runtime error: slice bounds out of range [4:0]\n+                                                            slice[4:3] runtime error: slice bounds out of range [4:3]\n+                                                            slice[4:4] runtime error: slice bounds out of range [:4] with capacity 3\n+                                                   slice[4:4294967295] runtime error: slice bounds out of range [:4294967295] with capacity 3\n+                                         slice[4:18446744073709551615] runtime error: slice bounds out of range [:18446744073709551615] with capacity 3\n+                                                   slice[4294967295:0] runtime error: slice bounds out of range [4294967295:0]\n+                                                   slice[4294967295:3] runtime error: slice bounds out of range [4294967295:3]\n+                                                   slice[4294967295:4] runtime error: slice bounds out of range [:4] with capacity 3\n+                                          slice[4294967295:4294967295] runtime error: slice bounds out of range [:4294967295] with capacity 3\n+                                slice[4294967295:18446744073709551615] runtime error: slice bounds out of range [:18446744073709551615] with capacity 3\n+                                         slice[18446744073709551615:0] runtime error: slice bounds out of range [18446744073709551615:0]\n+                                         slice[18446744073709551615:3] runtime error: slice bounds out of range [18446744073709551615:3]\n+                                         slice[18446744073709551615:4] runtime error: slice bounds out of range [:4] with capacity 3\n+                                slice[18446744073709551615:4294967295] runtime error: slice bounds out of range [:4294967295] with capacity 3\n+                      slice[18446744073709551615:18446744073709551615] runtime error: slice bounds out of range [:18446744073709551615] with capacity 3\n+                                                            array[0:0] no panic\n+                                                            array[0:3] no panic\n+                                                            array[0:4] runtime error: slice bounds out of range [:4] with length 3\n+                                                   array[0:4294967295] runtime error: slice bounds out of range [:4294967295] with length 3\n+                                         array[0:18446744073709551615] runtime error: slice bounds out of range [:18446744073709551615] with length 3\n+                                                            array[3:0] runtime error: slice bounds out of range [3:0]\n+                                                            array[3:3] no panic\n+                                                            array[3:4] runtime error: slice bounds out of range [:4] with length 3\n+                                                   array[3:4294967295] runtime error: slice bounds out of range [:4294967295] with length 3\n+                                         array[3:18446744073709551615] runtime error: slice bounds out of range [:18446744073709551615] with length 3\n+                                                            array[4:0] runtime error: slice bounds out of range [4:0]\n+                                                            array[4:3] runtime error: slice bounds out of range [4:3]\n+                                                            array[4:4] runtime error: slice bounds out of range [:4] with length 3\n+                                                   array[4:4294967295] runtime error: slice bounds out of range [:4294967295] with length 3\n+                                         array[4:18446744073709551615] runtime error: slice bounds out of range [:18446744073709551615] with length 3\n+                                                   array[4294967295:0] runtime error: slice bounds out of range [4294967295:0]\n+                                                   array[4294967295:3] runtime error: slice bounds out of range [4294967295:3]\n+                                                   array[4294967295:4] runtime error: slice bounds out of range [:4] with length 3\n+                                          array[4294967295:4294967295] runtime error: slice bounds out of range [:4294967295] with length 3\n+                                array[4294967295:18446744073709551615] runtime error: slice bounds out of range [:18446744073709551615] with length 3\n+                                         array[18446744073709551615:0] runtime error: slice bounds out of range [18446744073709551615:0]\n+                                         array[18446744073709551615:3] runtime error: slice bounds out of range [18446744073709551615:3]\n+                                         array[18446744073709551615:4] runtime error: slice bounds out of range [:4] with length 3\n+                                array[18446744073709551615:4294967295] runtime error: slice bounds out of range [:4294967295] with length 3\n+                      array[18446744073709551615:18446744073709551615] runtime error: slice bounds out of range [:18446744073709551615] with length 3\n+                                                           string[0:0] no panic\n+                                                           string[0:3] no panic\n+                                                           string[0:4] runtime error: slice bounds out of range [:4] with length 3\n+                                                  string[0:4294967295] runtime error: slice bounds out of range [:4294967295] with length 3\n+                                        string[0:18446744073709551615] runtime error: slice bounds out of range [:18446744073709551615] with length 3\n+                                                           string[3:0] runtime error: slice bounds out of range [3:0]\n+                                                           string[3:3] no panic\n+                                                           string[3:4] runtime error: slice bounds out of range [:4] with length 3\n+                                                  string[3:4294967295] runtime error: slice bounds out of range [:4294967295] with length 3\n+                                        string[3:18446744073709551615] runtime error: slice bounds out of range [:18446744073709551615] with length 3\n+                                                           string[4:0] runtime error: slice bounds out of range [4:0]\n+                                                           string[4:3] runtime error: slice bounds out of range [4:3]\n+                                                           string[4:4] runtime error: slice bounds out of range [:4] with length 3\n+                                                  string[4:4294967295] runtime error: slice bounds out of range [:4294967295] with length 3\n+                                        string[4:18446744073709551615] runtime error: slice bounds out of range [:18446744073709551615] with length 3\n+                                                  string[4294967295:0] runtime error: slice bounds out of range [4294967295:0]\n+                                                  string[4294967295:3] runtime error: slice bounds out of range [4294967295:3]\n+                                                  string[4294967295:4] runtime error: slice bounds out of range [:4] with length 3\n+                                         string[4294967295:4294967295] runtime error: slice bounds out of range [:4294967295] with length 3\n+                               string[4294967295:18446744073709551615] runtime error: slice bounds out of range [:18446744073709551615] with length 3\n+                                        string[18446744073709551615:0] runtime error: slice bounds out of range [18446744073709551615:0]\n+                                        string[18446744073709551615:3] runtime error: slice bounds out of range [18446744073709551615:3]\n+                                        string[18446744073709551615:4] runtime error: slice bounds out of range [:4] with length 3\n+                               string[18446744073709551615:4294967295] runtime error: slice bounds out of range [:4294967295] with length 3\n+                     string[18446744073709551615:18446744073709551615] runtime error: slice bounds out of range [:18446744073709551615] with length 3\n+                                                          slice[0:0:0] no panic\n+                                                          slice[0:0:3] no panic\n+                                                          slice[0:0:4] runtime error: slice bounds out of range [::4] with capacity 3\n+                                                 slice[0:0:4294967295] runtime error: slice bounds out of range [::4294967295] with capacity 3\n+                                       slice[0:0:18446744073709551615] runtime error: slice bounds out of range [::18446744073709551615] with capacity 3\n+                                                          slice[0:3:0] runtime error: slice bounds out of range [:3:0]\n+                                                          slice[0:3:3] no panic\n+                                                          slice[0:3:4] runtime error: slice bounds out of range [::4] with capacity 3\n+                                                 slice[0:3:4294967295] runtime error: slice bounds out of range [::4294967295] with capacity 3\n+                                       slice[0:3:18446744073709551615] runtime error: slice bounds out of range [::18446744073709551615] with capacity 3\n+                                                          slice[0:4:0] runtime error: slice bounds out of range [:4:0]\n+                                                          slice[0:4:3] runtime error: slice bounds out of range [:4:3]\n+                                                          slice[0:4:4] runtime error: slice bounds out of range [::4] with capacity 3\n+                                                 slice[0:4:4294967295] runtime error: slice bounds out of range [::4294967295] with capacity 3\n+                                       slice[0:4:18446744073709551615] runtime error: slice bounds out of range [::18446744073709551615] with capacity 3\n+                                                 slice[0:4294967295:0] runtime error: slice bounds out of range [:4294967295:0]\n+                                                 slice[0:4294967295:3] runtime error: slice bounds out of range [:4294967295:3]\n+                                                 slice[0:4294967295:4] runtime error: slice bounds out of range [::4] with capacity 3\n+                                        slice[0:4294967295:4294967295] runtime error: slice bounds out of range [::4294967295] with capacity 3\n+                              slice[0:4294967295:18446744073709551615] runtime error: slice bounds out of range [::18446744073709551615] with capacity 3\n+                                       slice[0:18446744073709551615:0] runtime error: slice bounds out of range [:18446744073709551615:0]\n+                                       slice[0:18446744073709551615:3] runtime error: slice bounds out of range [:18446744073709551615:3]\n+                                       slice[0:18446744073709551615:4] runtime error: slice bounds out of range [::4] with capacity 3\n+                              slice[0:18446744073709551615:4294967295] runtime error: slice bounds out of range [::4294967295] with capacity 3\n+                    slice[0:18446744073709551615:18446744073709551615] runtime error: slice bounds out of range [::18446744073709551615] with capacity 3\n+                                                          slice[3:0:0] runtime error: slice bounds out of range [3:0:]\n+                                                          slice[3:0:3] runtime error: slice bounds out of range [3:0:]\n+                                                          slice[3:0:4] runtime error: slice bounds out of range [::4] with capacity 3\n+                                                 slice[3:0:4294967295] runtime error: slice bounds out of range [::4294967295] with capacity 3\n+                                       slice[3:0:18446744073709551615] runtime error: slice bounds out of range [::18446744073709551615] with capacity 3\n+                                                          slice[3:3:0] runtime error: slice bounds out of range [:3:0]\n+                                                          slice[3:3:3] no panic\n+                                                          slice[3:3:4] runtime error: slice bounds out of range [::4] with capacity 3\n+                                                 slice[3:3:4294967295] runtime error: slice bounds out of range [::4294967295] with capacity 3\n+                                       slice[3:3:18446744073709551615] runtime error: slice bounds out of range [::18446744073709551615] with capacity 3\n+                                                          slice[3:4:0] runtime error: slice bounds out of range [:4:0]\n+                                                          slice[3:4:3] runtime error: slice bounds out of range [:4:3]\n+                                                          slice[3:4:4] runtime error: slice bounds out of range [::4] with capacity 3\n+                                                 slice[3:4:4294967295] runtime error: slice bounds out of range [::4294967295] with capacity 3\n+                                       slice[3:4:18446744073709551615] runtime error: slice bounds out of range [::18446744073709551615] with capacity 3\n+                                                 slice[3:4294967295:0] runtime error: slice bounds out of range [:4294967295:0]\n+                                                 slice[3:4294967295:3] runtime error: slice bounds out of range [:4294967295:3]\n+                                                 slice[3:4294967295:4] runtime error: slice bounds out of range [::4] with capacity 3\n+                                        slice[3:4294967295:4294967295] runtime error: slice bounds out of range [::4294967295] with capacity 3\n+                              slice[3:4294967295:18446744073709551615] runtime error: slice bounds out of range [::18446744073709551615] with capacity 3\n+                                       slice[3:18446744073709551615:0] runtime error: slice bounds out of range [:18446744073709551615:0]\n+                                       slice[3:18446744073709551615:3] runtime error: slice bounds out of range [:18446744073709551615:3]\n+                                       slice[3:18446744073709551615:4] runtime error: slice bounds out of range [::4] with capacity 3\n+                              slice[3:18446744073709551615:4294967295] runtime error: slice bounds out of range [::4294967295] with capacity 3\n+                    slice[3:18446744073709551615:18446744073709551615] runtime error: slice bounds out of range [::18446744073709551615] with capacity 3\n+                                                          slice[4:0:0] runtime error: slice bounds out of range [4:0:]\n+                                                          slice[4:0:3] runtime error: slice bounds out of range [4:0:]\n+                                                          slice[4:0:4] runtime error: slice bounds out of range [::4] with capacity 3\n+                                                 slice[4:0:4294967295] runtime error: slice bounds out of range [::4294967295] with capacity 3\n+                                       slice[4:0:18446744073709551615] runtime error: slice bounds out of range [::18446744073709551615] with capacity 3\n+                                                          slice[4:3:0] runtime error: slice bounds out of range [:3:0]\n+                                                          slice[4:3:3] runtime error: slice bounds out of range [4:3:]\n+                                                          slice[4:3:4] runtime error: slice bounds out of range [::4] with capacity 3\n+                                                 slice[4:3:4294967295] runtime error: slice bounds out of range [::4294967295] with capacity 3\n+                                       slice[4:3:18446744073709551615] runtime error: slice bounds out of range [::18446744073709551615] with capacity 3\n+                                                          slice[4:4:0] runtime error: slice bounds out of range [:4:0]\n+                                                          slice[4:4:3] runtime error: slice bounds out of range [:4:3]\n+                                                          slice[4:4:4] runtime error: slice bounds out of range [::4] with capacity 3\n+                                                 slice[4:4:4294967295] runtime error: slice bounds out of range [::4294967295] with capacity 3\n+                                       slice[4:4:18446744073709551615] runtime error: slice bounds out of range [::18446744073709551615] with capacity 3\n+                                                 slice[4:4294967295:0] runtime error: slice bounds out of range [:4294967295:0]\n+                                                 slice[4:4294967295:3] runtime error: slice bounds out of range [:4294967295:3]\n+                                                 slice[4:4294967295:4] runtime error: slice bounds out of range [::4] with capacity 3\n+                                        slice[4:4294967295:4294967295] runtime error: slice bounds out of range [::4294967295] with capacity 3\n+                              slice[4:4294967295:18446744073709551615] runtime error: slice bounds out of range [::18446744073709551615] with capacity 3\n+                                       slice[4:18446744073709551615:0] runtime error: slice bounds out of range [:18446744073709551615:0]\n+                                       slice[4:18446744073709551615:3] runtime error: slice bounds out of range [:18446744073709551615:3]\n+                                       slice[4:18446744073709551615:4] runtime error: slice bounds out of range [::4] with capacity 3\n+                              slice[4:18446744073709551615:4294967295] runtime error: slice bounds out of range [::4294967295] with capacity 3\n+                    slice[4:18446744073709551615:18446744073709551615] runtime error: slice bounds out of range [::18446744073709551615] with capacity 3\n+                                                 slice[4294967295:0:0] runtime error: slice bounds out of range [4294967295:0:]\n+                                                 slice[4294967295:0:3] runtime error: slice bounds out of range [4294967295:0:]\n+                                                 slice[4294967295:0:4] runtime error: slice bounds out of range [::4] with capacity 3\n+                                        slice[4294967295:0:4294967295] runtime error: slice bounds out of range [::4294967295] with capacity 3\n+                              slice[4294967295:0:18446744073709551615] runtime error: slice bounds out of range [::18446744073709551615] with capacity 3\n+                                                 slice[4294967295:3:0] runtime error: slice bounds out of range [:3:0]\n+                                                 slice[4294967295:3:3] runtime error: slice bounds out of range [4294967295:3:]\n+                                                 slice[4294967295:3:4] runtime error: slice bounds out of range [::4] with capacity 3\n+                                        slice[4294967295:3:4294967295] runtime error: slice bounds out of range [::4294967295] with capacity 3\n+                              slice[4294967295:3:18446744073709551615] runtime error: slice bounds out of range [::18446744073709551615] with capacity 3\n+                                                 slice[4294967295:4:0] runtime error: slice bounds out of range [:4:0]\n+                                                 slice[4294967295:4:3] runtime error: slice bounds out of range [:4:3]\n+                                                 slice[4294967295:4:4] runtime error: slice bounds out of range [::4] with capacity 3\n+                                        slice[4294967295:4:4294967295] runtime error: slice bounds out of range [::4294967295] with capacity 3\n+                              slice[4294967295:4:18446744073709551615] runtime error: slice bounds out of range [::18446744073709551615] with capacity 3\n+                                        slice[4294967295:4294967295:0] runtime error: slice bounds out of range [:4294967295:0]\n+                                        slice[4294967295:4294967295:3] runtime error: slice bounds out of range [:4294967295:3]\n+                                        slice[4294967295:4294967295:4] runtime error: slice bounds out of range [::4] with capacity 3\n+                               slice[4294967295:4294967295:4294967295] runtime error: slice bounds out of range [::4294967295] with capacity 3\n+                     slice[4294967295:4294967295:18446744073709551615] runtime error: slice bounds out of range [::18446744073709551615] with capacity 3\n+                              slice[4294967295:18446744073709551615:0] runtime error: slice bounds out of range [:18446744073709551615:0]\n+                              slice[4294967295:18446744073709551615:3] runtime error: slice bounds out of range [:18446744073709551615:3]\n+                              slice[4294967295:18446744073709551615:4] runtime error: slice bounds out of range [::4] with capacity 3\n+                     slice[4294967295:18446744073709551615:4294967295] runtime error: slice bounds out of range [::4294967295] with capacity 3\n+           slice[4294967295:18446744073709551615:18446744073709551615] runtime error: slice bounds out of range [::18446744073709551615] with capacity 3\n+                                       slice[18446744073709551615:0:0] runtime error: slice bounds out of range [18446744073709551615:0:]\n+                                       slice[18446744073709551615:0:3] runtime error: slice bounds out of range [18446744073709551615:0:]\n+                                       slice[18446744073709551615:0:4] runtime error: slice bounds out of range [::4] with capacity 3\n+                              slice[18446744073709551615:0:4294967295] runtime error: slice bounds out of range [::4294967295] with capacity 3\n+                    slice[18446744073709551615:0:18446744073709551615] runtime error: slice bounds out of range [::18446744073709551615] with capacity 3\n+                                       slice[18446744073709551615:3:0] runtime error: slice bounds out of range [:3:0]\n+                                       slice[18446744073709551615:3:3] runtime error: slice bounds out of range [18446744073709551615:3:]\n+                                       slice[18446744073709551615:3:4] runtime error: slice bounds out of range [::4] with capacity 3\n+                              slice[18446744073709551615:3:4294967295] runtime error: slice bounds out of range [::4294967295] with capacity 3\n+                    slice[18446744073709551615:3:18446744073709551615] runtime error: slice bounds out of range [::18446744073709551615] with capacity 3\n+                                       slice[18446744073709551615:4:0] runtime error: slice bounds out of range [:4:0]\n+                                       slice[18446744073709551615:4:3] runtime error: slice bounds out of range [:4:3]\n+                                       slice[18446744073709551615:4:4] runtime error: slice bounds out of range [::4] with capacity 3\n+                              slice[18446744073709551615:4:4294967295] runtime error: slice bounds out of range [::4294967295] with capacity 3\n+                    slice[18446744073709551615:4:18446744073709551615] runtime error: slice bounds out of range [::18446744073709551615] with capacity 3\n+                              slice[18446744073709551615:4294967295:0] runtime error: slice bounds out of range [:4294967295:0]\n+                              slice[18446744073709551615:4294967295:3] runtime error: slice bounds out of range [:4294967295:3]\n+                              slice[18446744073709551615:4294967295:4] runtime error: slice bounds out of range [::4] with capacity 3\n+                     slice[18446744073709551615:4294967295:4294967295] runtime error: slice bounds out of range [::4294967295] with capacity 3\n+           slice[18446744073709551615:4294967295:18446744073709551615] runtime error: slice bounds out of range [::18446744073709551615] with capacity 3\n+                    slice[18446744073709551615:18446744073709551615:0] runtime error: slice bounds out of range [:18446744073709551615:0]\n+                    slice[18446744073709551615:18446744073709551615:3] runtime error: slice bounds out of range [:18446744073709551615:3]\n+                    slice[18446744073709551615:18446744073709551615:4] runtime error: slice bounds out of range [::4] with capacity 3\n+           slice[18446744073709551615:18446744073709551615:4294967295] runtime error: slice bounds out of range [::4294967295] with capacity 3\n+ slice[18446744073709551615:18446744073709551615:18446744073709551615] runtime error: slice bounds out of range [::18446744073709551615] with capacity 3\n+                                                          array[0:0:0] no panic\n+                                                          array[0:0:3] no panic\n+                                                          array[0:0:4] runtime error: slice bounds out of range [::4] with length 3\n+                                                 array[0:0:4294967295] runtime error: slice bounds out of range [::4294967295] with length 3\n+                                       array[0:0:18446744073709551615] runtime error: slice bounds out of range [::18446744073709551615] with length 3\n+                                                          array[0:3:0] runtime error: slice bounds out of range [:3:0]\n+                                                          array[0:3:3] no panic\n+                                                          array[0:3:4] runtime error: slice bounds out of range [::4] with length 3\n+                                                 array[0:3:4294967295] runtime error: slice bounds out of range [::4294967295] with length 3\n+                                       array[0:3:18446744073709551615] runtime error: slice bounds out of range [::18446744073709551615] with length 3\n+                                                          array[0:4:0] runtime error: slice bounds out of range [:4:0]\n+                                                          array[0:4:3] runtime error: slice bounds out of range [:4:3]\n+                                                          array[0:4:4] runtime error: slice bounds out of range [::4] with length 3\n+                                                 array[0:4:4294967295] runtime error: slice bounds out of range [::4294967295] with length 3\n+                                       array[0:4:18446744073709551615] runtime error: slice bounds out of range [::18446744073709551615] with length 3\n+                                                 array[0:4294967295:0] runtime error: slice bounds out of range [:4294967295:0]\n+                                                 array[0:4294967295:3] runtime error: slice bounds out of range [:4294967295:3]\n+                                                 array[0:4294967295:4] runtime error: slice bounds out of range [::4] with length 3\n+                                        array[0:4294967295:4294967295] runtime error: slice bounds out of range [::4294967295] with length 3\n+                              array[0:4294967295:18446744073709551615] runtime error: slice bounds out of range [::18446744073709551615] with length 3\n+                                       array[0:18446744073709551615:0] runtime error: slice bounds out of range [:18446744073709551615:0]\n+                                       array[0:18446744073709551615:3] runtime error: slice bounds out of range [:18446744073709551615:3]\n+                                       array[0:18446744073709551615:4] runtime error: slice bounds out of range [::4] with length 3\n+                              array[0:18446744073709551615:4294967295] runtime error: slice bounds out of range [::4294967295] with length 3\n+                    array[0:18446744073709551615:18446744073709551615] runtime error: slice bounds out of range [::18446744073709551615] with length 3\n+                                                          array[3:0:0] runtime error: slice bounds out of range [3:0:]\n+                                                          array[3:0:3] runtime error: slice bounds out of range [3:0:]\n+                                                          array[3:0:4] runtime error: slice bounds out of range [::4] with length 3\n+                                                 array[3:0:4294967295] runtime error: slice bounds out of range [::4294967295] with length 3\n+                                       array[3:0:18446744073709551615] runtime error: slice bounds out of range [::18446744073709551615] with length 3\n+                                                          array[3:3:0] runtime error: slice bounds out of range [:3:0]\n+                                                          array[3:3:3] no panic\n+                                                          array[3:3:4] runtime error: slice bounds out of range [::4] with length 3\n+                                                 array[3:3:4294967295] runtime error: slice bounds out of range [::4294967295] with length 3\n+                                       array[3:3:18446744073709551615] runtime error: slice bounds out of range [::18446744073709551615] with length 3\n+                                                          array[3:4:0] runtime error: slice bounds out of range [:4:0]\n+                                                          array[3:4:3] runtime error: slice bounds out of range [:4:3]\n+                                                          array[3:4:4] runtime error: slice bounds out of range [::4] with length 3\n+                                                 array[3:4:4294967295] runtime error: slice bounds out of range [::4294967295] with length 3\n+                                       array[3:4:18446744073709551615] runtime error: slice bounds out of range [::18446744073709551615] with length 3\n+                                                 array[3:4294967295:0] runtime error: slice bounds out of range [:4294967295:0]\n+                                                 array[3:4294967295:3] runtime error: slice bounds out of range [:4294967295:3]\n+                                                 array[3:4294967295:4] runtime error: slice bounds out of range [::4] with length 3\n+                                        array[3:4294967295:4294967295] runtime error: slice bounds out of range [::4294967295] with length 3\n+                              array[3:4294967295:18446744073709551615] runtime error: slice bounds out of range [::18446744073709551615] with length 3\n+                                       array[3:18446744073709551615:0] runtime error: slice bounds out of range [:18446744073709551615:0]\n+                                       array[3:18446744073709551615:3] runtime error: slice bounds out of range [:18446744073709551615:3]\n+                                       array[3:18446744073709551615:4] runtime error: slice bounds out of range [::4] with length 3\n+                              array[3:18446744073709551615:4294967295] runtime error: slice bounds out of range [::4294967295] with length 3\n+                    array[3:18446744073709551615:18446744073709551615] runtime error: slice bounds out of range [::18446744073709551615] with length 3\n+                                                          array[4:0:0] runtime error: slice bounds out of range [4:0:]\n+                                                          array[4:0:3] runtime error: slice bounds out of range [4:0:]\n+                                                          array[4:0:4] runtime error: slice bounds out of range [::4] with length 3\n+                                                 array[4:0:4294967295] runtime error: slice bounds out of range [::4294967295] with length 3\n+                                       array[4:0:18446744073709551615] runtime error: slice bounds out of range [::18446744073709551615] with length 3\n+                                                          array[4:3:0] runtime error: slice bounds out of range [:3:0]\n+                                                          array[4:3:3] runtime error: slice bounds out of range [4:3:]\n+                                                          array[4:3:4] runtime error: slice bounds out of range [::4] with length 3\n+                                                 array[4:3:4294967295] runtime error: slice bounds out of range [::4294967295] with length 3\n+                                       array[4:3:18446744073709551615] runtime error: slice bounds out of range [::18446744073709551615] with length 3\n+                                                          array[4:4:0] runtime error: slice bounds out of range [:4:0]\n+                                                          array[4:4:3] runtime error: slice bounds out of range [:4:3]\n+                                                          array[4:4:4] runtime error: slice bounds out of range [::4] with length 3\n+                                                 array[4:4:4294967295] runtime error: slice bounds out of range [::4294967295] with length 3\n+                                       array[4:4:18446744073709551615] runtime error: slice bounds out of range [::18446744073709551615] with length 3\n+                                                 array[4:4294967295:0] runtime error: slice bounds out of range [:4294967295:0]\n+                                                 array[4:4294967295:3] runtime error: slice bounds out of range [:4294967295:3]\n+                                                 array[4:4294967295:4] runtime error: slice bounds out of range [::4] with length 3\n+                                        array[4:4294967295:4294967295] runtime error: slice bounds out of range [::4294967295] with length 3\n+                              array[4:4294967295:18446744073709551615] runtime error: slice bounds out of range [::18446744073709551615] with length 3\n+                                       array[4:18446744073709551615:0] runtime error: slice bounds out of range [:18446744073709551615:0]\n+                                       array[4:18446744073709551615:3] runtime error: slice bounds out of range [:18446744073709551615:3]\n+                                       array[4:18446744073709551615:4] runtime error: slice bounds out of range [::4] with length 3\n+                              array[4:18446744073709551615:4294967295] runtime error: slice bounds out of range [::4294967295] with length 3\n+                    array[4:18446744073709551615:18446744073709551615] runtime error: slice bounds out of range [::18446744073709551615] with length 3\n+                                                 array[4294967295:0:0] runtime error: slice bounds out of range [4294967295:0:]\n+                                                 array[4294967295:0:3] runtime error: slice bounds out of range [4294967295:0:]\n+                                                 array[4294967295:0:4] runtime error: slice bounds out of range [::4] with length 3\n+                                        array[4294967295:0:4294967295] runtime error: slice bounds out of range [::4294967295] with length 3\n+                              array[4294967295:0:18446744073709551615] runtime error: slice bounds out of range [::18446744073709551615] with length 3\n+                                                 array[4294967295:3:0] runtime error: slice bounds out of range [:3:0]\n+                                                 array[4294967295:3:3] runtime error: slice bounds out of range [4294967295:3:]\n+                                                 array[4294967295:3:4] runtime error: slice bounds out of range [::4] with length 3\n+                                        array[4294967295:3:4294967295] runtime error: slice bounds out of range [::4294967295] with length 3\n+                              array[4294967295:3:18446744073709551615] runtime error: slice bounds out of range [::18446744073709551615] with length 3\n+                                                 array[4294967295:4:0] runtime error: slice bounds out of range [:4:0]\n+                                                 array[4294967295:4:3] runtime error: slice bounds out of range [:4:3]\n+                                                 array[4294967295:4:4] runtime error: slice bounds out of range [::4] with length 3\n+                                        array[4294967295:4:4294967295] runtime error: slice bounds out of range [::4294967295] with length 3\n+                              array[4294967295:4:18446744073709551615] runtime error: slice bounds out of range [::18446744073709551615] with length 3\n+                                        array[4294967295:4294967295:0] runtime error: slice bounds out of range [:4294967295:0]\n+                                        array[4294967295:4294967295:3] runtime error: slice bounds out of range [:4294967295:3]\n+                                        array[4294967295:4294967295:4] runtime error: slice bounds out of range [::4] with length 3\n+                               array[4294967295:4294967295:4294967295] runtime error: slice bounds out of range [::4294967295] with length 3\n+                     array[4294967295:4294967295:18446744073709551615] runtime error: slice bounds out of range [::18446744073709551615] with length 3\n+                              array[4294967295:18446744073709551615:0] runtime error: slice bounds out of range [:18446744073709551615:0]\n+                              array[4294967295:18446744073709551615:3] runtime error: slice bounds out of range [:18446744073709551615:3]\n+                              array[4294967295:18446744073709551615:4] runtime error: slice bounds out of range [::4] with length 3\n+                     array[4294967295:18446744073709551615:4294967295] runtime error: slice bounds out of range [::4294967295] with length 3\n+           array[4294967295:18446744073709551615:18446744073709551615] runtime error: slice bounds out of range [::18446744073709551615] with length 3\n+                                       array[18446744073709551615:0:0] runtime error: slice bounds out of range [18446744073709551615:0:]\n+                                       array[18446744073709551615:0:3] runtime error: slice bounds out of range [18446744073709551615:0:]\n+                                       array[18446744073709551615:0:4] runtime error: slice bounds out of range [::4] with length 3\n+                              array[18446744073709551615:0:4294967295] runtime error: slice bounds out of range [::4294967295] with length 3\n+                    array[18446744073709551615:0:18446744073709551615] runtime error: slice bounds out of range [::18446744073709551615] with length 3\n+                                       array[18446744073709551615:3:0] runtime error: slice bounds out of range [:3:0]\n+                                       array[18446744073709551615:3:3] runtime error: slice bounds out of range [18446744073709551615:3:]\n+                                       array[18446744073709551615:3:4] runtime error: slice bounds out of range [::4] with length 3\n+                              array[18446744073709551615:3:4294967295] runtime error: slice bounds out of range [::4294967295] with length 3\n+                    array[18446744073709551615:3:18446744073709551615] runtime error: slice bounds out of range [::18446744073709551615] with length 3\n+                                       array[18446744073709551615:4:0] runtime error: slice bounds out of range [:4:0]\n+                                       array[18446744073709551615:4:3] runtime error: slice bounds out of range [:4:3]\n+                                       array[18446744073709551615:4:4] runtime error: slice bounds out of range [::4] with length 3\n+                              array[18446744073709551615:4:4294967295] runtime error: slice bounds out of range [::4294967295] with length 3\n+                    array[18446744073709551615:4:18446744073709551615] runtime error: slice bounds out of range [::18446744073709551615] with length 3\n+                              array[18446744073709551615:4294967295:0] runtime error: slice bounds out of range [:4294967295:0]\n+                              array[18446744073709551615:4294967295:3] runtime error: slice bounds out of range [:4294967295:3]\n+                              array[18446744073709551615:4294967295:4] runtime error: slice bounds out of range [::4] with length 3\n+                     array[18446744073709551615:4294967295:4294967295] runtime error: slice bounds out of range [::4294967295] with length 3\n+           array[18446744073709551615:4294967295:18446744073709551615] runtime error: slice bounds out of range [::18446744073709551615] with length 3\n+                    array[18446744073709551615:18446744073709551615:0] runtime error: slice bounds out of range [:18446744073709551615:0]\n+                    array[18446744073709551615:18446744073709551615:3] runtime error: slice bounds out of range [:18446744073709551615:3]\n+                    array[18446744073709551615:18446744073709551615:4] runtime error: slice bounds out of range [::4] with length 3\n+           array[18446744073709551615:18446744073709551615:4294967295] runtime error: slice bounds out of range [::4294967295] with length 3\n+ array[18446744073709551615:18446744073709551615:18446744073709551615] runtime error: slice bounds out of range [::18446744073709551615] with length 3"}, {"sha": "3837e021c4817381de7aaa3a0e7f76987777fb09", "filename": "gcc/testsuite/go.test/test/fixedbugs/issue30659.dir/a.go", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue30659.dir%2Fa.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue30659.dir%2Fa.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue30659.dir%2Fa.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,19 @@\n+// Copyright 2019 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+package a\n+\n+type I interface {\n+\tI2\n+}\n+type I2 interface {\n+\tM()\n+}\n+type S struct{}\n+\n+func (*S) M() {}\n+\n+func New() I {\n+\treturn &S{}\n+}"}, {"sha": "272e520582e8f02c88e564b8e118aae99964a495", "filename": "gcc/testsuite/go.test/test/fixedbugs/issue30659.dir/b.go", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue30659.dir%2Fb.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue30659.dir%2Fb.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue30659.dir%2Fb.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,13 @@\n+// Copyright 2019 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+package b\n+\n+import (\n+\t\"./a\"\n+)\n+\n+func B(p1 a.I, p2 a.I2) int {\n+\treturn 42\n+}"}, {"sha": "973ae1dcef229fff93cfeb070dc2b64f1ccfd0e0", "filename": "gcc/testsuite/go.test/test/fixedbugs/issue30659.go", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue30659.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue30659.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue30659.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,7 @@\n+// compiledir\n+\n+// Copyright 2019 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+package ignored"}, {"sha": "54ed7713f6432a729c6e72005e0025197d518189", "filename": "gcc/testsuite/go.test/test/fixedbugs/issue32901.dir/a.go", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue32901.dir%2Fa.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue32901.dir%2Fa.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue32901.dir%2Fa.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2019 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+package a\n+\n+type T struct { x int }\n+\n+func F() interface{} {\n+\treturn [2]T{}\n+}\n+\n+func P() interface{} {\n+\treturn &[2]T{}\n+}"}, {"sha": "932d7b0afa53f05266e65476ce1f92e744a870d2", "filename": "gcc/testsuite/go.test/test/fixedbugs/issue32901.dir/b.go", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue32901.dir%2Fb.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue32901.dir%2Fb.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue32901.dir%2Fb.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2019 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+package b\n+\n+import \"./a\"\n+\n+func F() interface{} {\n+\treturn a.F()\n+}\n+\n+func P() interface{} {\n+\treturn a.P()\n+}"}, {"sha": "5f31c7ff028b6dc0d05af923e4e5d58d1edb419b", "filename": "gcc/testsuite/go.test/test/fixedbugs/issue32901.dir/c.go", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue32901.dir%2Fc.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue32901.dir%2Fc.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue32901.dir%2Fc.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,17 @@\n+// Copyright 2019 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+package c\n+\n+import \"./b\"\n+\n+func F() interface{} {\n+\tgo func(){}() // make it non-inlineable\n+\treturn b.F()\n+}\n+\n+func P() interface{} {\n+\tgo func(){}() // make it non-inlineable\n+\treturn b.P()\n+}"}, {"sha": "28bb8cde28343791ae0215febdc80eef699c31f3", "filename": "gcc/testsuite/go.test/test/fixedbugs/issue32901.dir/main.go", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue32901.dir%2Fmain.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue32901.dir%2Fmain.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue32901.dir%2Fmain.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,18 @@\n+// Copyright 2019 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+package main\n+\n+import \"./c\"\n+import \"reflect\"\n+\n+func main() {\n+\tx := c.F()\n+\tp := c.P()\n+\tt := reflect.PtrTo(reflect.TypeOf(x))\n+\ttp := reflect.TypeOf(p)\n+\tif t != tp {\n+\t\tpanic(\"FAIL\")\n+\t}\n+}"}, {"sha": "004c3da79eef1f32151a0ef52607354d405a1ae5", "filename": "gcc/testsuite/go.test/test/fixedbugs/issue32901.go", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue32901.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue32901.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue32901.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,9 @@\n+// rundir\n+\n+// Copyright 2019 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+// Issue 32901: type descriptor equality bug in gccgo.\n+\n+package ignored"}, {"sha": "b13c4b404d13bb2fa3eae332000f9d963ee5f524", "filename": "gcc/testsuite/go.test/test/fixedbugs/issue32922.dir/a.go", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue32922.dir%2Fa.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue32922.dir%2Fa.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue32922.dir%2Fa.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,18 @@\n+// Copyright 2019 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+package a\n+\n+func A() int {\n+\treturn p(\"count\")\n+}\n+\n+func p(which string, args ...string) int {\n+\tswitch which {\n+\tcase \"count\", \"something\":\n+\t\treturn 1\n+\tdefault:\n+\t\treturn 2\n+\t}\n+}"}, {"sha": "fdaf42d3dff4ebd35bd664e348956f5f3349759c", "filename": "gcc/testsuite/go.test/test/fixedbugs/issue32922.dir/b.go", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue32922.dir%2Fb.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue32922.dir%2Fb.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue32922.dir%2Fb.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,11 @@\n+// Copyright 2019 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+package b\n+\n+import \"./a\"\n+\n+func B() int {\n+\treturn 99 + a.A()\n+}"}, {"sha": "005c8e68cb4615c09c7333ee8657dd44f2ce71e5", "filename": "gcc/testsuite/go.test/test/fixedbugs/issue32922.go", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue32922.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue32922.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue32922.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,11 @@\n+// compiledir\n+\n+// Copyright 2019 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+// This directory contains a pair of packages that triggers a compiler\n+// error in gccgo (problem with the way inlinable call expressions are\n+// imported). See issue 32922 for details.\n+\n+package ignored"}, {"sha": "056be88aeac9c7e9817e09c9ccfd69e05c74ae5f", "filename": "gcc/testsuite/go.test/test/fixedbugs/issue33013.dir/a.go", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue33013.dir%2Fa.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue33013.dir%2Fa.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue33013.dir%2Fa.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,9 @@\n+// Copyright 2019 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+package a\n+\n+type G interface {\n+\tUsesEmpty(p interface{}) int\n+}"}, {"sha": "5694b58282c5451311256a483a363ad8b1cfc59e", "filename": "gcc/testsuite/go.test/test/fixedbugs/issue33013.dir/b.go", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue33013.dir%2Fb.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue33013.dir%2Fb.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue33013.dir%2Fb.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,24 @@\n+// Copyright 2019 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+package b\n+\n+import \"a\"\n+\n+type Service uint64\n+type ServiceDesc struct {\n+\tX int\n+\tuc\n+}\n+\n+type uc interface {\n+\tf() a.G\n+}\n+\n+var q int\n+\n+func RS(svcd *ServiceDesc, server interface{}, qq uint8) *Service {\n+\tdefer func() { q += int(qq) }()\n+\treturn nil\n+}"}, {"sha": "bfdc0b535fe543031ee83d978915c1c4c6668df5", "filename": "gcc/testsuite/go.test/test/fixedbugs/issue33013.dir/c.go", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue33013.dir%2Fc.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue33013.dir%2Fc.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue33013.dir%2Fc.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,19 @@\n+// Copyright 2019 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+package c\n+\n+import (\n+\t\"a\"\n+\t\"b\"\n+)\n+\n+type BI interface {\n+\tSomething(s int64) int64\n+\tAnother(pxp a.G) int32\n+}\n+\n+func BRS(sd *b.ServiceDesc, server BI, xyz int) *b.Service {\n+\treturn b.RS(sd, server, 7)\n+}"}, {"sha": "f4fff4ac62a29961c597c67cad95c2d2aa53719b", "filename": "gcc/testsuite/go.test/test/fixedbugs/issue33013.dir/d.go", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue33013.dir%2Fd.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue33013.dir%2Fd.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue33013.dir%2Fd.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,16 @@\n+// Copyright 2019 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+package d\n+\n+import (\n+\t\"b\"\n+\t\"c\"\n+)\n+\n+var GA b.Service\n+\n+func C() {\n+\tc.BRS(nil, nil, 22)\n+}"}, {"sha": "e363cf500f3fb4d8ff3343d2db84140785e275ff", "filename": "gcc/testsuite/go.test/test/fixedbugs/issue33013.go", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue33013.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue33013.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue33013.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,9 @@\n+// compiledir\n+\n+// Copyright 2019 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+// Issue 33013: gccgo compiler error with inlinable function\n+\n+package ignored"}, {"sha": "948f4fdf3b2af3fb006f47862ede5a8b8da90775", "filename": "gcc/testsuite/go.test/test/fixedbugs/issue33020.dir/a.go", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue33020.dir%2Fa.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue33020.dir%2Fa.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue33020.dir%2Fa.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,16 @@\n+// Copyright 2019 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+package a\n+\n+var G1 int\n+var G2 int\n+var G3 int\n+var G4 int\n+var G5 int\n+var G6 int\n+var G7 int\n+var G8 int\n+var G9 int\n+var G10 int"}, {"sha": "354ab3ebfe66e914b3e062e96aef1e85cafb8bc9", "filename": "gcc/testsuite/go.test/test/fixedbugs/issue33020.dir/b.go", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue33020.dir%2Fb.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue33020.dir%2Fb.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue33020.dir%2Fb.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,22 @@\n+// Copyright 2019 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+package b\n+\n+import \"a\"\n+\n+var N n\n+\n+type n struct{}\n+\n+func (r n) M1() int  { return a.G1 }\n+func (r n) M2() int  { return a.G2 }\n+func (r n) M3() int  { return a.G3 }\n+func (r n) M4() int  { return a.G4 }\n+func (r n) M5() int  { return a.G5 }\n+func (r n) M6() int  { return a.G6 }\n+func (r n) M7() int  { return a.G7 }\n+func (r n) M8() int  { return a.G8 }\n+func (r n) M9() int  { return a.G9 }\n+func (r n) M10() int { return a.G10 }"}, {"sha": "ccdf1874537866826b2646ff78d20b6123b0b133", "filename": "gcc/testsuite/go.test/test/fixedbugs/issue33020.go", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue33020.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue33020.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue33020.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,9 @@\n+// compiledir\n+\n+// Copyright 2019 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+// Issue 33020: gccgo undefined behavior with inlinable function\n+\n+package ignored"}, {"sha": "5e6a3581a17c1e3f93de1238da9910c6c6ff4303", "filename": "gcc/testsuite/go.test/test/fixedbugs/issue33062.go", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue33062.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue33062.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue33062.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,33 @@\n+// run\n+\n+// Copyright 2019 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+// Issue 33062: gccgo generates incorrect type equality\n+// functions.\n+\n+package main\n+\n+type simpleStruct struct {\n+\tint\n+\tstring\n+}\n+\n+type complexStruct struct {\n+\tint\n+\tsimpleStruct\n+}\n+\n+func main() {\n+\tx := complexStruct{1, simpleStruct{2, \"xxx\"}}\n+\tix := interface{}(x)\n+\ty := complexStruct{1, simpleStruct{2, \"yyy\"}}\n+\tiy := interface{}(y)\n+\tif ix != ix {\n+\t\tpanic(\"FAIL\")\n+\t}\n+\tif ix == iy {\n+\t\tpanic(\"FAIL\")\n+\t}\n+}"}, {"sha": "28714e0c991e8936bea5d1dcf09b697ed71690fb", "filename": "gcc/testsuite/go.test/test/fixedbugs/issue33158.dir/a.go", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue33158.dir%2Fa.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue33158.dir%2Fa.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue33158.dir%2Fa.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,25 @@\n+// Copyright 2019 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+package a\n+\n+var GS string\n+\n+func M() string {\n+\tif s := getname(\"Fred\"); s != \"\" {\n+\t\treturn s\n+\t}\n+\tif s := getname(\"Joe\"); s != \"\" {\n+\t\treturn s\n+\t}\n+\n+\treturn string(\"Alex\")\n+}\n+\n+// getname can be any function returning a string, just has to be non-inlinable.\n+\n+//go:noinline\n+func getname(s string) string {\n+\treturn s + \"foo\"\n+}"}, {"sha": "a16f0da600e3a49d192099845ffbd5060760ab45", "filename": "gcc/testsuite/go.test/test/fixedbugs/issue33158.dir/b.go", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue33158.dir%2Fb.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue33158.dir%2Fb.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue33158.dir%2Fb.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,11 @@\n+// Copyright 2019 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+package b\n+\n+import \"a\"\n+\n+func B() string {\n+\treturn a.M()\n+}"}, {"sha": "1bba8f2f76f55f2d2689ce019f1ce45d8309bf53", "filename": "gcc/testsuite/go.test/test/fixedbugs/issue33158.go", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue33158.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue33158.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue33158.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,9 @@\n+// compiledir\n+\n+// Copyright 2019 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+// Issue 33158: gccgo duplicate def error from importing inlinable function\n+\n+package ignored"}, {"sha": "2d96301f9cfedbf07d92159b18e2ba0a6436c525", "filename": "gcc/testsuite/go.test/test/fixedbugs/issue33219.dir/a.go", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue33219.dir%2Fa.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue33219.dir%2Fa.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue33219.dir%2Fa.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,17 @@\n+// Copyright 2019 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+package a\n+\n+type A interface {\n+\tM(i interface{}) interface{}\n+}\n+\n+var a1 A\n+var a2 A\n+\n+func V(p A, k, v interface{}) A {\n+\tdefer func() { a1, a2 = a2, a1 }()\n+\treturn a1\n+}"}, {"sha": "2a8f518bef5c3b00af88386961851ee6617e7f52", "filename": "gcc/testsuite/go.test/test/fixedbugs/issue33219.dir/b.go", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue33219.dir%2Fb.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue33219.dir%2Fb.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue33219.dir%2Fb.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,25 @@\n+// Copyright 2019 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+package b\n+\n+import \"./a\"\n+\n+type Service uint64\n+\n+var q *Service\n+var r *Service\n+\n+type f struct{}\n+\n+var fk f\n+\n+func No(s a.A, qq uint8) *Service {\n+\tdefer func() { q, r = r, q }()\n+\treturn q\n+}\n+\n+func Yes(s a.A, p *uint64) a.A {\n+\treturn a.V(s, fk, p)\n+}"}, {"sha": "ece48d76031da39347e3fd7508142945dcaf013e", "filename": "gcc/testsuite/go.test/test/fixedbugs/issue33219.dir/c.go", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue33219.dir%2Fc.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue33219.dir%2Fc.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue33219.dir%2Fc.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,20 @@\n+// Copyright 2019 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+package c\n+\n+import (\n+\t\"a\"\n+\t\"b\"\n+)\n+\n+type BI interface {\n+\tAnother(pxp a.A) int32\n+}\n+\n+//go:noinline\n+func BRS(sd a.A, xyz int) *b.Service {\n+\tx := b.Yes(sd, nil)\n+\treturn b.No(x, 1)\n+}"}, {"sha": "45edc8ba65f21c25d91e7f7c6f9e43f6ce851147", "filename": "gcc/testsuite/go.test/test/fixedbugs/issue33219.go", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue33219.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue33219.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue33219.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,9 @@\n+// compiledir\n+\n+// Copyright 2019 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+// Issue 33219: gccgo assert in \"implements_interface()\"\n+\n+package ignored"}, {"sha": "7eb5b927c498872039e41bdd0a9588e48a5fd0e1", "filename": "gcc/testsuite/go.test/test/fixedbugs/issue33739.dir/a.go", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue33739.dir%2Fa.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue33739.dir%2Fa.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue33739.dir%2Fa.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,11 @@\n+// Copyright 2019 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+package a\n+\n+func F() func() {\n+\treturn f\n+}\n+\n+func f() {}"}, {"sha": "caca1ec686e252e7ed3e6467925066a7a470d1fd", "filename": "gcc/testsuite/go.test/test/fixedbugs/issue33739.dir/b.go", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue33739.dir%2Fb.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue33739.dir%2Fb.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue33739.dir%2Fb.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,11 @@\n+// Copyright 2019 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+package main\n+\n+import \"a\"\n+\n+func main() {\n+\ta.F()()\n+}"}, {"sha": "b7707822869fc21756202a568ecf4104d59c2d70", "filename": "gcc/testsuite/go.test/test/fixedbugs/issue33739.go", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue33739.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue33739.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue33739.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,9 @@\n+// rundir\n+\n+// Copyright 2019 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+// Issue 33739: gccgo undefined symbol with cross-package inlining\n+\n+package ignored"}, {"sha": "2c149135ad6d4bffb5116a2d27c90489d7b1e056", "filename": "gcc/testsuite/go.test/test/fixedbugs/issue34503.dir/a.go", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue34503.dir%2Fa.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue34503.dir%2Fa.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue34503.dir%2Fa.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2019 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+package a\n+\n+import \"unsafe\"\n+\n+type HookFunc func(x uint64)\n+\n+var HookV unsafe.Pointer\n+\n+func Hook(x uint64) {\n+\t(*(*HookFunc)(HookV))(x)\n+}"}, {"sha": "21bdfcc1b50cfddc60bf5ede5681ef25be297fcc", "filename": "gcc/testsuite/go.test/test/fixedbugs/issue34503.dir/b.go", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue34503.dir%2Fb.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue34503.dir%2Fb.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue34503.dir%2Fb.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,11 @@\n+// Copyright 2019 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+package b\n+\n+import \"a\"\n+\n+func Bfunc() {\n+\ta.Hook(101)\n+}"}, {"sha": "d843df7062826019cf906f9e1b7dfd87cad74c5e", "filename": "gcc/testsuite/go.test/test/fixedbugs/issue34503.go", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue34503.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue34503.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue34503.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,9 @@\n+// compiledir\n+\n+// Copyright 2019 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+// Issue 34503: gccgo compiler error importing inlinable function\n+\n+package ignored"}, {"sha": "b6af5556b3c832d874471ff8261239cee65438e3", "filename": "gcc/testsuite/go.test/test/fixedbugs/issue34577.dir/a.go", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue34577.dir%2Fa.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue34577.dir%2Fa.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue34577.dir%2Fa.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,27 @@\n+// Copyright 2019 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+package a\n+\n+type A struct {\n+\tx int\n+}\n+\n+type AI interface {\n+\tbar()\n+}\n+\n+type AC int\n+\n+func (ab AC) bar() {\n+}\n+\n+const (\n+\tACC = AC(101)\n+)\n+\n+//go:noinline\n+func W(a A, k, v interface{}) A {\n+\treturn A{3}\n+}"}, {"sha": "bbcd1af5179cd0c5e1690b89c3677d00368c43e7", "filename": "gcc/testsuite/go.test/test/fixedbugs/issue34577.dir/b.go", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue34577.dir%2Fb.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue34577.dir%2Fb.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue34577.dir%2Fb.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,23 @@\n+// Copyright 2019 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+package b\n+\n+import \"a\"\n+\n+type B struct {\n+\ts string\n+}\n+\n+func (b B) Func(x a.A) a.A {\n+\treturn a.W(x, k, b)\n+}\n+\n+type ktype int\n+\n+const k ktype = 0\n+\n+func Func2() a.AI {\n+\treturn a.ACC\n+}"}, {"sha": "b4caaebb66c3249fdb54cead62e6224a02dd16f2", "filename": "gcc/testsuite/go.test/test/fixedbugs/issue34577.go", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue34577.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue34577.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue34577.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,9 @@\n+// compiledir\n+\n+// Copyright 2019 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+// Issue 34577: gccgo compiler error emitting export data\n+\n+package ignored"}, {"sha": "88596a571c0b37f704e2f570798f41285db891dd", "filename": "gcc/testsuite/go.test/test/fixedbugs/issue35739.dir/a.go", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue35739.dir%2Fa.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue35739.dir%2Fa.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue35739.dir%2Fa.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,16 @@\n+// Copyright 2020 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+package a\n+\n+type myError string\n+\n+func (e myError) Error() string { return string(e) }\n+\n+const myErrorVal myError = \"error\"\n+\n+\n+func IsMyError(err error) bool {\n+\treturn err == error(myErrorVal)\n+}"}, {"sha": "8d22aac8d6b058b186e04da35aa7ae1f259b70c8", "filename": "gcc/testsuite/go.test/test/fixedbugs/issue35739.dir/b.go", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue35739.dir%2Fb.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue35739.dir%2Fb.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue35739.dir%2Fb.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,11 @@\n+// Copyright 2020 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+package b\n+\n+import \"./a\"\n+\n+func F(err error) bool {\n+\treturn a.IsMyError(err)\n+}"}, {"sha": "26f09d8c1bf8774f9cd8dd55ad5716f6bd658753", "filename": "gcc/testsuite/go.test/test/fixedbugs/issue35739.go", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue35739.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue35739.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue35739.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,9 @@\n+// compiledir\n+\n+// Copyright 2020 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+// Issue 35739: gccgo inlining error with constant with method.\n+\n+package ignored"}, {"sha": "1207aecd39b2f5d285c0def69c2ec5872f751a64", "filename": "gcc/testsuite/go.test/test/fixedbugs/issue38125.go", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue38125.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue38125.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue38125.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,22 @@\n+// compile\n+\n+// Copyright 2020 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+// gccgo mishandled embedded methods of type aliases.\n+\n+package p\n+\n+type I int\n+\n+func (I) M() {}\n+\n+type T = struct {\n+\tI\n+}\n+\n+func F() {\n+\t_ = T.M\n+\t_ = struct { I }.M\n+}"}, {"sha": "1cb68e99145140b1efd120486272c7b3e3d810c6", "filename": "gcc/testsuite/go.test/test/fixedbugs/issue40152.go", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue40152.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue40152.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue40152.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,21 @@\n+// run\n+\n+// Copyright 2020 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+// Gccgo mishandles converting an untyped boolean to an interface type.\n+\n+package main\n+\n+func t(args ...interface{}) bool {\n+        x := true\n+        return x == args[0]\n+}\n+\n+func main() {\n+\tr := t(\"x\" == \"x\" && \"y\" == \"y\")\n+\tif !r {\n+\t\tpanic(r)\n+\t}\n+}"}, {"sha": "5519e9331aa0c6103444bfe8f30d03df07e5a134", "filename": "gcc/testsuite/go.test/test/fixedbugs/issue40252.dir/a.go", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue40252.dir%2Fa.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue40252.dir%2Fa.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue40252.dir%2Fa.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,14 @@\n+// Copyright 2020 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+package a\n+\n+type I interface {\n+\tFunc()\n+}\n+\n+func Call() {\n+\tf := I.Func\n+\tf(nil)\n+}"}, {"sha": "93f5b706242ef723f7362d7eea2b9913ba6d25b6", "filename": "gcc/testsuite/go.test/test/fixedbugs/issue40252.dir/main.go", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue40252.dir%2Fmain.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue40252.dir%2Fmain.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue40252.dir%2Fmain.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,16 @@\n+// Copyright 2020 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+package main\n+\n+import \"./a\"\n+\n+func main() {\n+\tdefer func() {\n+\t\tif recover() == nil {\n+\t\t\tpanic(\"expected nil pointer dereference\")\n+\t\t}\n+\t}()\n+\ta.Call()\n+}"}, {"sha": "9be4e665d2923d4183f637501244a33922659b48", "filename": "gcc/testsuite/go.test/test/fixedbugs/issue40252.go", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue40252.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue40252.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue40252.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,8 @@\n+// rundir\n+\n+// Copyright 2020 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+// gccgo got an undefined symbol reference when inlining a method expression.\n+package ignored"}, {"sha": "d83a02247a3788758e541fa47143e423fa6426e5", "filename": "gcc/testsuite/go.test/test/fixedbugs/issue42790.go", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue42790.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue42790.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue42790.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,9 @@\n+// compile\n+\n+// Copyright 2020 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+package p\n+\n+const _ = -uint(len(string(1<<32)) - len(\"\\uFFFD\"))"}, {"sha": "ba48cefa955a7d3f628e2e9488038ab10219eac8", "filename": "gcc/testsuite/go.test/test/fixedbugs/issue6977.go", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue6977.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue6977.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue6977.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,40 @@\n+// errorcheck\n+\n+// Copyright 2019 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+package p\n+\n+import \"io\"\n+\n+// Alan's initial report.\n+\n+type I interface { f(); String() string }\n+type J interface { g(); String() string }\n+\n+type IJ1 = interface { I; J }\n+type IJ2 = interface { f(); g(); String() string }\n+\n+var _ = (*IJ1)(nil) == (*IJ2)(nil) // static assert that IJ1 and IJ2 are identical types\n+\n+// The canonical example.\n+\n+type ReadWriteCloser interface { io.ReadCloser; io.WriteCloser }\n+\n+// Some more cases.\n+\n+type M interface { m() }\n+type M32 interface { m() int32 }\n+type M64 interface { m() int64 }\n+\n+type U1 interface { m() }\n+type U2 interface { m(); M }\n+type U3 interface { M; m() }\n+type U4 interface { M; M; M }\n+type U5 interface { U1; U2; U3; U4 }\n+\n+type U6 interface { m(); m() } // ERROR \"duplicate method\"\n+type U7 interface { M32; m() } // ERROR \"duplicate method\"\n+type U8 interface { m(); M32 } // ERROR \"duplicate method\"\n+type U9 interface { M32; M64 } // ERROR \"duplicate method\""}, {"sha": "5639f97bb89b946717857925e5ff1624782c2980", "filename": "gcc/testsuite/go.test/test/fixedbugs/issue8042.go", "status": "added", "additions": 66, "deletions": 0, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue8042.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adbeeb198a2a00812a5cd2ff0a38d6243a590dd0/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue8042.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue8042.go?ref=adbeeb198a2a00812a5cd2ff0a38d6243a590dd0", "patch": "@@ -0,0 +1,66 @@\n+// compile\n+\n+// Copyright 2017 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+// Verify that gotos across non-variable declarations\n+// are accepted.\n+\n+package p\n+\n+func _() {\n+\tgoto L1\n+\tconst x = 0\n+L1:\n+\tgoto L2\n+\ttype T int\n+L2:\n+}\n+\n+func _() {\n+\t{\n+\t\tgoto L1\n+\t}\n+\tconst x = 0\n+L1:\n+\t{\n+\t\tgoto L2\n+\t}\n+\ttype T int\n+L2:\n+}\n+\n+func _(d int) {\n+\tif d > 0 {\n+\t\tgoto L1\n+\t} else {\n+\t\tgoto L2\n+\t}\n+\tconst x = 0\n+L1:\n+\tswitch d {\n+\tcase 1:\n+\t\tgoto L3\n+\tcase 2:\n+\tdefault:\n+\t\tgoto L4\n+\t}\n+\ttype T1 int\n+L2:\n+\tconst y = 1\n+L3:\n+\tfor d > 0 {\n+\t\tif d < 10 {\n+\t\t\tgoto L4\n+\t\t}\n+\t}\n+\ttype T2 int\n+L4:\n+\tselect {\n+\tdefault:\n+\t\tgoto L5\n+\t}\n+\ttype T3 int\n+L5:\n+}"}]}