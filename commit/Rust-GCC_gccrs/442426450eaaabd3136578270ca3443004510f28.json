{"sha": "442426450eaaabd3136578270ca3443004510f28", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDQyNDI2NDUwZWFhYWJkMzEzNjU3ODI3MGNhMzQ0MzAwNDUxMGYyOA==", "commit": {"author": {"name": "James Van Artsdalen", "email": "jrv@gnu.org", "date": "1992-09-17T05:20:26Z"}, "committer": {"name": "James Van Artsdalen", "email": "jrv@gnu.org", "date": "1992-09-17T05:20:26Z"}, "message": "(addsi3,ashlsi3): Handle the case where the stack pointer appears as an\nindex reg.\n\nFrom-SVN: r2140", "tree": {"sha": "bcdb92a3bf2493dca0b266a3323cca6ee2d3d163", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bcdb92a3bf2493dca0b266a3323cca6ee2d3d163"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/442426450eaaabd3136578270ca3443004510f28", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/442426450eaaabd3136578270ca3443004510f28", "html_url": "https://github.com/Rust-GCC/gccrs/commit/442426450eaaabd3136578270ca3443004510f28", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/442426450eaaabd3136578270ca3443004510f28/comments", "author": null, "committer": null, "parents": [{"sha": "3292923dd1d498fbd3cf472164972636f8925220", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3292923dd1d498fbd3cf472164972636f8925220", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3292923dd1d498fbd3cf472164972636f8925220"}], "stats": {"total": 22, "additions": 20, "deletions": 2}, "files": [{"sha": "2d2f28eb57959257d2cccb74a41bae72686a7e8c", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 20, "deletions": 2, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442426450eaaabd3136578270ca3443004510f28/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442426450eaaabd3136578270ca3443004510f28/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=442426450eaaabd3136578270ca3443004510f28", "patch": "@@ -1392,8 +1392,20 @@\n       if (! TARGET_486 || ! REG_P (operands[2]))\n         {\n \t  CC_STATUS_INIT;\n-\t  operands[1] = SET_SRC (PATTERN (insn));\n-\t  return AS2 (lea%L0,%a1,%0);\n+\n+\t  if (operands[2] == stack_pointer_rtx)\n+\t    {\n+\t      rtx temp;\n+\n+\t      temp = operands[1];\n+\t      operands[1] = operands[2];\n+\t      operands[2] = temp;\n+\t    }\n+\t  if (operands[2] != stack_pointer_rtx)\n+\t    {\n+\t      operands[1] = SET_SRC (PATTERN (insn));\n+\t      return AS2 (lea%L0,%a1,%0);\n+\t    }\n \t}\n \n       output_asm_insn (AS2 (mov%L0,%1,%0), operands);\n@@ -2391,6 +2403,12 @@\n       else\n         {\n           CC_STATUS_INIT;\n+\n+\t  if (operands[1] == stack_pointer_rtx)\n+\t    {\n+\t      output_asm_insn (AS2 (mov%L0,%1,%0), operands);\n+\t      operands[1] = operands[0];\n+\t    }\n           operands[1] = gen_rtx (MULT, SImode, operands[1],\n \t\t\t\t GEN_INT (1 << INTVAL (operands[2])));\n \t  return AS2 (lea%L0,%a1,%0);"}]}