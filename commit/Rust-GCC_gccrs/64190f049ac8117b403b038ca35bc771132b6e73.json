{"sha": "64190f049ac8117b403b038ca35bc771132b6e73", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjQxOTBmMDQ5YWM4MTE3YjQwM2IwMzhjYTM1YmM3NzExMzJiNmU3Mw==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2016-10-15T11:08:10Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2016-10-15T11:08:10Z"}, "message": "revert: diagnostic.c (diagnostic_action_after_output): Remove max error handling here ....\n\nRevert\n\t* diagnostic.c (diagnostic_action_after_output): Remove max error\n\thandling here ....\n\t(diagnostic_report_diagnostic): ... do it here instead.\n\n\ttestsuite/\n\t* c-c++-common/fmax-errors.c: Make sure note is emitted.\n\nFrom-SVN: r241198", "tree": {"sha": "37bc21c8fd16ea5e3a0c78d472d5549b86a7ed15", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/37bc21c8fd16ea5e3a0c78d472d5549b86a7ed15"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/64190f049ac8117b403b038ca35bc771132b6e73", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64190f049ac8117b403b038ca35bc771132b6e73", "html_url": "https://github.com/Rust-GCC/gccrs/commit/64190f049ac8117b403b038ca35bc771132b6e73", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64190f049ac8117b403b038ca35bc771132b6e73/comments", "author": null, "committer": null, "parents": [{"sha": "35d942444418606e75f2e65aa7708616c5233035", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35d942444418606e75f2e65aa7708616c5233035", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35d942444418606e75f2e65aa7708616c5233035"}], "stats": {"total": 61, "additions": 17, "deletions": 44}, "files": [{"sha": "2cf3f940d8824e761f88c0169b36105971aaf871", "filename": "gcc/ChangeLog", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64190f049ac8117b403b038ca35bc771132b6e73/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64190f049ac8117b403b038ca35bc771132b6e73/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=64190f049ac8117b403b038ca35bc771132b6e73", "patch": "@@ -1,9 +1,3 @@\n-2016-10-14  Nathan Sidwell  <nathan@acm.org>\n-\n-\t* diagnostic.c (diagnostic_action_after_output): Remove fatal\n-\tand max error handling here ....\n-\t(diagnostic_report_diagnostic): ... do it here instead.\n-\n 2016-10-14  David Malcolm  <dmalcolm@redhat.com>\n \n \t* print-rtl-function.c (print_edge): Omit \"(flags)\" when none are"}, {"sha": "2304e14c76185c2da0eab53db5f4a97e633a12d5", "filename": "gcc/diagnostic.c", "status": "modified", "additions": 15, "deletions": 22, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64190f049ac8117b403b038ca35bc771132b6e73/gcc%2Fdiagnostic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64190f049ac8117b403b038ca35bc771132b6e73/gcc%2Fdiagnostic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdiagnostic.c?ref=64190f049ac8117b403b038ca35bc771132b6e73", "patch": "@@ -470,8 +470,18 @@ diagnostic_action_after_output (diagnostic_context *context,\n \t  diagnostic_finish (context);\n \t  exit (FATAL_EXIT_CODE);\n \t}\n-      /* -fmax-error handling is just before the next diagnostic is\n-\t emitted.  */\n+      if (context->max_errors != 0\n+\t  && ((unsigned) (diagnostic_kind_count (context, DK_ERROR)\n+\t\t\t  + diagnostic_kind_count (context, DK_SORRY)\n+\t\t\t  + diagnostic_kind_count (context, DK_WERROR))\n+\t      >= context->max_errors))\n+\t{\n+\t  fnotice (stderr,\n+\t\t   \"compilation terminated due to -fmax-errors=%u.\\n\",\n+\t\t   context->max_errors);\n+\t  diagnostic_finish (context);\n+\t  exit (FATAL_EXIT_CODE);\n+\t}\n       break;\n \n     case DK_ICE:\n@@ -824,7 +834,9 @@ diagnostic_report_diagnostic (diagnostic_context *context,\n      -Wno-error=*.  */\n   if (context->warning_as_error_requested\n       && diagnostic->kind == DK_WARNING)\n-    diagnostic->kind = DK_ERROR;\n+    {\n+      diagnostic->kind = DK_ERROR;\n+    }\n \n   if (diagnostic->option_index\n       && diagnostic->option_index != permissive_error_option (context))\n@@ -880,25 +892,6 @@ diagnostic_report_diagnostic (diagnostic_context *context,\n \treturn false;\n     }\n \n-  if (diagnostic->kind != DK_NOTE && context->max_errors)\n-    {\n-      /* Check, before emitting the diagnostic, whether we would\n-\t exceed the limit.  This way we will emit notes relevant to\n-\t the final emitted error.  */\n-      int count = (diagnostic_kind_count (context, DK_ERROR)\n-\t\t   + diagnostic_kind_count (context, DK_SORRY)\n-\t\t   + diagnostic_kind_count (context, DK_WERROR));\n-\n-      if ((unsigned) count >= context->max_errors)\n-\t{\n-\t  fnotice (stderr,\n-\t\t   \"compilation terminated due to -fmax-errors=%u.\\n\",\n-\t\t   context->max_errors);\n-\t  diagnostic_finish (context);\n-\t  exit (FATAL_EXIT_CODE);\n-\t}\n-    }\n-\n   context->lock++;\n \n   if (diagnostic->kind == DK_ICE || diagnostic->kind == DK_ICE_NOBT)"}, {"sha": "849c6e49de6809cec913f47190c35c7023d7cb44", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64190f049ac8117b403b038ca35bc771132b6e73/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64190f049ac8117b403b038ca35bc771132b6e73/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=64190f049ac8117b403b038ca35bc771132b6e73", "patch": "@@ -1,7 +1,3 @@\n-2016-10-14  Nathan Sidwell  <nathan@acm.org>\n-\n-\t* c-c++-common/fmax-errors.c: Add error with note.\n-\n 2016-10-14  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/77959"}, {"sha": "1ef78eb9eb8ff870bd0baf866a86340808f4df7a", "filename": "gcc/testsuite/c-c++-common/fmax-errors.c", "status": "modified", "additions": 2, "deletions": 12, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64190f049ac8117b403b038ca35bc771132b6e73/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ffmax-errors.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64190f049ac8117b403b038ca35bc771132b6e73/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ffmax-errors.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ffmax-errors.c?ref=64190f049ac8117b403b038ca35bc771132b6e73", "patch": "@@ -1,21 +1,11 @@\n /* PR c/44782 */\n /* { dg-do compile } */\n-/* { dg-options \"-fmax-errors=3 -Wall\" } */\n+/* { dg-options \"-fmax-errors=3\" } */\n \n void foo (unsigned int i, unsigned int j)\n {\n   (i) ();\t\t\t/* { dg-error \"\" } */\n   (j) ();\t\t\t/* { dg-error \"\" } */\n-\n-  i + j; /* { dg-warning \"\" }  */\n-\n-  (k) ();\t\t\t/* { dg-error \"\" } */\n-  /* Make sure we see the notes related to the final error we emit.  */\n-  /* { dg-message \"identifier\" \"\" { target c } 12 } */\n-\n-  /* Warnings after the final error should not appear.  */\n-  i + j; /* no warning.  */\n-\n+  (i+j) ();\t\t\t/* { dg-error \"\" } */\n   (i*j) ();\t\t\t/* no error here due to -fmax-errors */\n-\n } /* { dg-prune-output \"compilation terminated\" } */"}]}