{"sha": "c0fe508e8b201c7789a66f252609a0f9006acfe9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzBmZTUwOGU4YjIwMWM3Nzg5YTY2ZjI1MjYwOWEwZjkwMDZhY2ZlOQ==", "commit": {"author": {"name": "Toon Moene", "email": "toon@moene.indiv.nluug.nl", "date": "2002-05-20T08:30:03Z"}, "committer": {"name": "Toon Moene", "email": "toon@gcc.gnu.org", "date": "2002-05-20T08:30:03Z"}, "message": "optabs.c (expand_cmplxdiv_wide): Use complex_part_zero_p.\n\n2002-05-19  Toon Moene  <toon@moene.indiv.nluug.nl>\n\n\t* optabs.c (expand_cmplxdiv_wide): Use complex_part_zero_p.\n\t(expand_binop): Ditto (3 times).\n\nFrom-SVN: r53655", "tree": {"sha": "79c7bff18900074ef2431e2ea0e500148cc0671c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/79c7bff18900074ef2431e2ea0e500148cc0671c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c0fe508e8b201c7789a66f252609a0f9006acfe9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0fe508e8b201c7789a66f252609a0f9006acfe9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0fe508e8b201c7789a66f252609a0f9006acfe9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0fe508e8b201c7789a66f252609a0f9006acfe9/comments", "author": null, "committer": null, "parents": [{"sha": "f362c7623d64bd76c85e84b11a46dd2dea45cad5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f362c7623d64bd76c85e84b11a46dd2dea45cad5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f362c7623d64bd76c85e84b11a46dd2dea45cad5"}], "stats": {"total": 19, "additions": 13, "deletions": 6}, "files": [{"sha": "31e4d6e73a1ab5b49950abb207d9ca6a50ff490d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0fe508e8b201c7789a66f252609a0f9006acfe9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0fe508e8b201c7789a66f252609a0f9006acfe9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c0fe508e8b201c7789a66f252609a0f9006acfe9", "patch": "@@ -1,3 +1,8 @@\n+2002-05-19  Toon Moene  <toon@moene.indiv.nluug.nl>\n+\n+\t* optabs.c (expand_cmplxdiv_wide): Use complex_part_zero_p.\n+\t(expand_binop): Ditto (3 times).\n+\n 2002-05-19  Mark Mitchell  <mitchell@doubledemon.codesourcery.com>\n \n \t* Makefile.in (distclean): Remove QMTest stuff."}, {"sha": "46b86c534dad6fd47ecec5fbd95fd77923af66c2", "filename": "gcc/optabs.c", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0fe508e8b201c7789a66f252609a0f9006acfe9/gcc%2Foptabs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0fe508e8b201c7789a66f252609a0f9006acfe9/gcc%2Foptabs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptabs.c?ref=c0fe508e8b201c7789a66f252609a0f9006acfe9", "patch": "@@ -554,7 +554,7 @@ expand_cmplxdiv_wide (real0, real1, imag0, imag1, realr, imagr, submode,\n \n   /* Calculate dividend.  */\n \n-  if (imag0 == 0)\n+  if (complex_part_zero_p (imag0, class, submode))\n     {\n       /* Compute a / (c+id) as a(c/d) / (c(c/d)+d) + i (-a) / (c(c/d)+d).  */\n \n@@ -1553,7 +1553,7 @@ expand_binop (mode, binoptab, op0, op1, target, unsignedp, methods)\n       else\n \treal1 = op1;\n \n-      if (real0 == 0 || real1 == 0 || ! (imag0 != 0|| imag1 != 0))\n+      if (real0 == 0 || real1 == 0 || ! (imag0 != 0 || imag1 != 0))\n \tabort ();\n \n       switch (binoptab->code)\n@@ -1570,10 +1570,11 @@ expand_binop (mode, binoptab, op0, op1, target, unsignedp, methods)\n \t  else if (res != realr)\n \t    emit_move_insn (realr, res);\n \n-\t  if (imag0 && imag1)\n+\t  if (!complex_part_zero_p (imag0, class, submode)\n+\t      && !complex_part_zero_p (imag1, class, submode))\n \t    res = expand_binop (submode, binoptab, imag0, imag1,\n \t\t\t\timagr, unsignedp, methods);\n-\t  else if (imag0)\n+\t  else if (!complex_part_zero_p (imag0, class, submode))\n \t    res = imag0;\n \t  else if (binoptab->code == MINUS)\n             res = expand_unop (submode,\n@@ -1593,7 +1594,8 @@ expand_binop (mode, binoptab, op0, op1, target, unsignedp, methods)\n \tcase MULT:\n \t  /* (a+ib) * (c+id) = (ac-bd) + i(ad+cb) */\n \n-\t  if (imag0 && imag1)\n+\t  if (!complex_part_zero_p (imag0, class, submode)\n+\t       && !complex_part_zero_p (imag1, class, submode))\n \t    {\n \t      rtx temp1, temp2;\n \n@@ -1656,7 +1658,7 @@ expand_binop (mode, binoptab, op0, op1, target, unsignedp, methods)\n \t      else if (res != realr)\n \t\temit_move_insn (realr, res);\n \n-\t      if (imag0 != 0)\n+\t      if (!complex_part_zero_p (imag0, class, submode))\n \t\tres = expand_binop (submode, binoptab,\n \t\t\t\t    real1, imag0, imagr, unsignedp, methods);\n \t      else"}]}