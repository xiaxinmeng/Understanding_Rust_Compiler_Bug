{"sha": "c6c3f55699d316da38496de1328f6e09a46deed8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzZjM2Y1NTY5OWQzMTZkYTM4NDk2ZGUxMzI4ZjZlMDlhNDZkZWVkOA==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2019-10-11T20:44:02Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2019-10-11T20:44:02Z"}, "message": "PR c++/92049 - extra error with -fchecking=2.\n\nThe concepts merge brought this bit\n\n@@ -26326,9 +26559,9 @@ build_non_dependent_expr (tree expr)\n     unexpected recursive instantiations.  */\n       && !parsing_nsdmi ()\n       /* Don't do this during concept expansion either and for\n-         the same reason.  */\n-      && !expanding_concept ())\n-    fold_non_dependent_expr (expr, tf_none);\n+    the same reason.  */\n+      && !parsing_constraint_expression_p ())\n+    fold_non_dependent_expr (expr);\n\n   STRIP_ANY_LOCATION_WRAPPER (expr);\n\n(which I'm not finding in the ChangeLog).  Dropping tf_none means that\nfold_non_dependent_expr will use tf_warning_or_error by default, and in\nthis test that causes an error:\n\n  template<bool> struct cond;\n\n  template<int> struct S { \n    void f(int i) {\n      cond<__builtin_constant_p(i)>();\n    }\n  };\n\n  S<1> s;\n\nwhere it complains that cond<false> is incomplete.  Which it is, but we're\nnot actually instantiating the function f, so issuing an error seems\noverzealous (though not wrong), and it breaks a bunch of tests.  This patch\nbrings that tf_none back.  We will still complain if we do instantiate f.\n\n\t* pt.c (build_non_dependent_expr): Call fold_non_dependent_expr\n\twith tf_none.\n\n\t* g++.dg/template/builtin2.C: New test.\n\nFrom-SVN: r276906", "tree": {"sha": "f3138d560c12a55888dfb3704380ec81964e0267", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f3138d560c12a55888dfb3704380ec81964e0267"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c6c3f55699d316da38496de1328f6e09a46deed8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6c3f55699d316da38496de1328f6e09a46deed8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c6c3f55699d316da38496de1328f6e09a46deed8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6c3f55699d316da38496de1328f6e09a46deed8/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "436103a09831b2924d3262c13a17da530f90da92", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/436103a09831b2924d3262c13a17da530f90da92", "html_url": "https://github.com/Rust-GCC/gccrs/commit/436103a09831b2924d3262c13a17da530f90da92"}], "stats": {"total": 18, "additions": 17, "deletions": 1}, "files": [{"sha": "02a330d772e95667ee26efc38d7c2aea49f5f255", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6c3f55699d316da38496de1328f6e09a46deed8/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6c3f55699d316da38496de1328f6e09a46deed8/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=c6c3f55699d316da38496de1328f6e09a46deed8", "patch": "@@ -1,3 +1,9 @@\n+2019-10-11  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/92049 - extra error with -fchecking=2.\n+\t* pt.c (build_non_dependent_expr): Call fold_non_dependent_expr\n+\twith tf_none.\n+\n 2019-10-11  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* typeck.c (cp_build_binary_op): Do not handle RROTATE_EXPR and"}, {"sha": "773eb43d9342d18c6b38a910fe1b0a17a2923348", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6c3f55699d316da38496de1328f6e09a46deed8/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6c3f55699d316da38496de1328f6e09a46deed8/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=c6c3f55699d316da38496de1328f6e09a46deed8", "patch": "@@ -27059,7 +27059,7 @@ build_non_dependent_expr (tree expr)\n       /* Don't do this during concept processing either and for\n          the same reason.  */\n       && !processing_constraint_expression_p ())\n-    fold_non_dependent_expr (expr);\n+    fold_non_dependent_expr (expr, tf_none);\n \n   STRIP_ANY_LOCATION_WRAPPER (expr);\n "}, {"sha": "bbcea404db490895b87fa303b704cb1c2267ae9b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6c3f55699d316da38496de1328f6e09a46deed8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6c3f55699d316da38496de1328f6e09a46deed8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c6c3f55699d316da38496de1328f6e09a46deed8", "patch": "@@ -1,3 +1,8 @@\n+2019-10-11  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/92049 - extra error with -fchecking=2.\n+\t* g++.dg/template/builtin2.C: New test.\n+\n 2019-10-11  Jim Wilson  <jimw@sifive.com>\n \n \tPR rtl-optimization/91860"}, {"sha": "4e9089a2313bd52e3e928d1ac2f00898515c3ef1", "filename": "gcc/testsuite/g++.dg/template/builtin2.C", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6c3f55699d316da38496de1328f6e09a46deed8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fbuiltin2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6c3f55699d316da38496de1328f6e09a46deed8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fbuiltin2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fbuiltin2.C?ref=c6c3f55699d316da38496de1328f6e09a46deed8", "patch": "@@ -0,0 +1,5 @@\n+// PR c++/92049 - extra error with -fchecking=2.\n+// { dg-do compile { target c++11 } }\n+// { dg-additional-options \"-fchecking=2\" }\n+\n+#include \"builtin1.C\""}]}