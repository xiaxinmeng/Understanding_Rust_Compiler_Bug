{"sha": "db39d0c23d152eb9ce816dbb59bae15c19cc46aa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGIzOWQwYzIzZDE1MmViOWNlODE2ZGJiNTliYWUxNWMxOWNjNDZhYQ==", "commit": {"author": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2008-01-31T22:20:47Z"}, "committer": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2008-01-31T22:20:47Z"}, "message": "re PR fortran/34910 (ICE on invalid assignments in doubly-contained functions)\n\n2008-01-31  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/34910\n\t* expr.c (gfc_check_assign): It is an error to assign\n\tto a sibling procedure.\n\n2008-01-31  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/34910\n\t* gfortran.dg/proc_assign_2.f90: New test.\n\nFrom-SVN: r131985", "tree": {"sha": "827d843af0d30a8bc85669854afa7db71d97e61c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/827d843af0d30a8bc85669854afa7db71d97e61c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/db39d0c23d152eb9ce816dbb59bae15c19cc46aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db39d0c23d152eb9ce816dbb59bae15c19cc46aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db39d0c23d152eb9ce816dbb59bae15c19cc46aa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db39d0c23d152eb9ce816dbb59bae15c19cc46aa/comments", "author": null, "committer": null, "parents": [{"sha": "0451301c5987ec736e4e7c8a2f430b3b9051288e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0451301c5987ec736e4e7c8a2f430b3b9051288e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0451301c5987ec736e4e7c8a2f430b3b9051288e"}], "stats": {"total": 41, "additions": 41, "deletions": 0}, "files": [{"sha": "f426aa240596c250cb5ffa2d069346d76536d6cb", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db39d0c23d152eb9ce816dbb59bae15c19cc46aa/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db39d0c23d152eb9ce816dbb59bae15c19cc46aa/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=db39d0c23d152eb9ce816dbb59bae15c19cc46aa", "patch": "@@ -1,3 +1,9 @@\n+2008-01-31  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/34910\n+\t* expr.c (gfc_check_assign): It is an error to assign\n+\tto a sibling procedure.\n+\n 2008-01-30  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/34975"}, {"sha": "ac159f5ce6ca6fbc518deec6e4ba9b9969e4c92d", "filename": "gcc/fortran/expr.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db39d0c23d152eb9ce816dbb59bae15c19cc46aa/gcc%2Ffortran%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db39d0c23d152eb9ce816dbb59bae15c19cc46aa/gcc%2Ffortran%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fexpr.c?ref=db39d0c23d152eb9ce816dbb59bae15c19cc46aa", "patch": "@@ -2705,6 +2705,15 @@ gfc_check_assign (gfc_expr *lvalue, gfc_expr *rvalue, int conform)\n \t    bad_proc = true;\n \t}\n \n+      /* (iv) Host associated and not the function symbol or the\n+\t      parent result.  This picks up sibling references, which\n+\t      cannot be entries.  */\n+      if (!sym->attr.entry\n+\t    && sym->ns == gfc_current_ns->parent\n+\t    && sym != gfc_current_ns->proc_name\n+\t    && sym != gfc_current_ns->parent->proc_name->result)\n+\tbad_proc = true;\n+\n       if (bad_proc)\n \t{\n \t  gfc_error (\"'%s' at %L is not a VALUE\", sym->name, &lvalue->where);"}, {"sha": "29c8ac9e0af7980fdb4089fdda2f18d00b2d147e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db39d0c23d152eb9ce816dbb59bae15c19cc46aa/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db39d0c23d152eb9ce816dbb59bae15c19cc46aa/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=db39d0c23d152eb9ce816dbb59bae15c19cc46aa", "patch": "@@ -1,3 +1,8 @@\n+2008-01-31  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/34910\n+\t* gfortran.dg/proc_assign_2.f90: New test.\n+\n 2008-01-31  Douglas Gregor  <doug.gregor@gmail.com>\n            Jakub Jelinek  <jakub@redhat.com>\n "}, {"sha": "5a92be5cabce40d565f284280c9cf926ccc1fe69", "filename": "gcc/testsuite/gfortran.dg/proc_assign_2.f90", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db39d0c23d152eb9ce816dbb59bae15c19cc46aa/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_assign_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db39d0c23d152eb9ce816dbb59bae15c19cc46aa/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_assign_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_assign_2.f90?ref=db39d0c23d152eb9ce816dbb59bae15c19cc46aa", "patch": "@@ -0,0 +1,21 @@\n+! { dg-do compile }\n+! This checks the fix for PR34910, in which the invalid reference\n+! below caused an ICE.\n+!\n+! Contributed by Daniel Franke <dfranke@gcc.gnu.org>\n+!\n+MODULE foo\n+CONTAINS\n+  INTEGER FUNCTION f()\n+  f = 42\n+  CONTAINS\n+    LOGICAL FUNCTION f1()\n+      f1 = .TRUE.\n+    END FUNCTION\n+\n+    LOGICAL FUNCTION f2()\n+      f1 = .FALSE.  ! { dg-error \"not a VALUE\" }\n+    END FUNCTION\n+  END FUNCTION\n+END MODULE\n+! { dg-final { cleanup-modules \"foo\" } }"}]}