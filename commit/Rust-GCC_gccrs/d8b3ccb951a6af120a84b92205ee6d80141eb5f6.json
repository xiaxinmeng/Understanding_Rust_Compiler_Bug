{"sha": "d8b3ccb951a6af120a84b92205ee6d80141eb5f6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDhiM2NjYjk1MWE2YWYxMjBhODRiOTIyMDVlZTZkODAxNDFlYjVmNg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-01T14:36:39Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-01T14:36:39Z"}, "message": "[multiple changes]\n\n2011-08-01  Javier Miranda  <miranda@adacore.com>\n\n\t* sem_util.adb (Abstract_Interface_List): Complete condition when\n\tprocessing private type declarations to avoid reading unavailable\n\tattribute.\n\t(Is_Synchronized_Tagged_Type): Complete condition when processing\n\tprivate extension declaration nodes to avoid reading unavailable\n\tattribute.\n\n2011-08-01  Thomas Quinot  <quinot@adacore.com>\n\n\t* sem_ch3.adb: Minor reformatting.\n\n2011-08-01  Thomas Quinot  <quinot@adacore.com>\n\n\t* s-parame-ae653.ads, s-parame-vms-alpha.ads, s-parame-hpux.ads,\n\ti-cpoint.adb, i-cstrin.adb, i-cpoint.ads, i-cstrin.ads,\n\ts-parame-vms-ia64.ads, s-parame.ads, i-c.ads, s-parame-vxworks.ads,\n\ts-parame-vms-restrict.ads: Remove duplicated Interfaces.C.* packages\n\tfor VMS, instead parametrize the common implementation with\n\tSystem.Parameters declarations.\n\nFrom-SVN: r177038", "tree": {"sha": "a8932a4f652039be98ba53557540e75fb93afa61", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a8932a4f652039be98ba53557540e75fb93afa61"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d8b3ccb951a6af120a84b92205ee6d80141eb5f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8b3ccb951a6af120a84b92205ee6d80141eb5f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8b3ccb951a6af120a84b92205ee6d80141eb5f6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8b3ccb951a6af120a84b92205ee6d80141eb5f6/comments", "author": null, "committer": null, "parents": [{"sha": "0bb9276c88e58a10a6711a49b974bb5e71eb37e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0bb9276c88e58a10a6711a49b974bb5e71eb37e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0bb9276c88e58a10a6711a49b974bb5e71eb37e7"}], "stats": {"total": 141, "additions": 121, "deletions": 20}, "files": [{"sha": "49d6da6d39825b99fe759aba48c55c7e471646af", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8b3ccb951a6af120a84b92205ee6d80141eb5f6/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8b3ccb951a6af120a84b92205ee6d80141eb5f6/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=d8b3ccb951a6af120a84b92205ee6d80141eb5f6", "patch": "@@ -1,3 +1,25 @@\n+2011-08-01  Javier Miranda  <miranda@adacore.com>\n+\n+\t* sem_util.adb (Abstract_Interface_List): Complete condition when\n+\tprocessing private type declarations to avoid reading unavailable\n+\tattribute.\n+\t(Is_Synchronized_Tagged_Type): Complete condition when processing\n+\tprivate extension declaration nodes to avoid reading unavailable\n+\tattribute.\n+\n+2011-08-01  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* sem_ch3.adb: Minor reformatting.\n+\n+2011-08-01  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* s-parame-ae653.ads, s-parame-vms-alpha.ads, s-parame-hpux.ads,\n+\ti-cpoint.adb, i-cstrin.adb, i-cpoint.ads, i-cstrin.ads,\n+\ts-parame-vms-ia64.ads, s-parame.ads, i-c.ads, s-parame-vxworks.ads,\n+\ts-parame-vms-restrict.ads: Remove duplicated Interfaces.C.* packages\n+\tfor VMS, instead parametrize the common implementation with\n+\tSystem.Parameters declarations.\n+\n 2011-08-01  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gnat_rm.texi: Document limitation of Pragma No_Strict_Aliasing."}, {"sha": "1088836e25ed022458f75490bb05bca0b9b9b828", "filename": "gcc/ada/i-c.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8b3ccb951a6af120a84b92205ee6d80141eb5f6/gcc%2Fada%2Fi-c.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8b3ccb951a6af120a84b92205ee6d80141eb5f6/gcc%2Fada%2Fi-c.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fi-c.ads?ref=d8b3ccb951a6af120a84b92205ee6d80141eb5f6", "patch": "@@ -54,10 +54,10 @@ package Interfaces.C is\n    --  a non-private system.address type.\n \n    type ptrdiff_t is\n-     range -(2 ** (Standard'Address_Size - Integer'(1))) ..\n-           +(2 ** (Standard'Address_Size - Integer'(1)) - 1);\n+     range -(2 ** (System.Parameters.ptr_bits - Integer'(1))) ..\n+           +(2 ** (System.Parameters.ptr_bits - Integer'(1)) - 1);\n \n-   type size_t is mod 2 ** Standard'Address_Size;\n+   type size_t is mod 2 ** System.Parameters.ptr_bits;\n \n    --  Floating-Point\n "}, {"sha": "6506448c2aa8c6fe38e1f5e807fce980a4211637", "filename": "gcc/ada/i-cpoint.adb", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8b3ccb951a6af120a84b92205ee6d80141eb5f6/gcc%2Fada%2Fi-cpoint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8b3ccb951a6af120a84b92205ee6d80141eb5f6/gcc%2Fada%2Fi-cpoint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fi-cpoint.adb?ref=d8b3ccb951a6af120a84b92205ee6d80141eb5f6", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -36,7 +36,7 @@ with Ada.Unchecked_Conversion;\n \n package body Interfaces.C.Pointers is\n \n-   type Addr is mod Memory_Size;\n+   type Addr is mod 2 ** System.Parameters.ptr_bits;\n \n    function To_Pointer is new Ada.Unchecked_Conversion (Addr,      Pointer);\n    function To_Addr    is new Ada.Unchecked_Conversion (Pointer,   Addr);\n@@ -195,6 +195,7 @@ package body Interfaces.C.Pointers is\n             subtype A is Element_Array (L .. H);\n \n             type PA is access A;\n+            for PA'Size use System.Parameters.ptr_bits;\n             function To_PA is new Ada.Unchecked_Conversion (Pointer, PA);\n \n          begin\n@@ -238,6 +239,7 @@ package body Interfaces.C.Pointers is\n             subtype A is Element_Array (L .. H);\n \n             type PA is access A;\n+            for PA'Size use System.Parameters.ptr_bits;\n             function To_PA is new Ada.Unchecked_Conversion (Pointer, PA);\n \n          begin"}, {"sha": "e6a8ae4eff341970e2d04ce9ac635086f6ff0155", "filename": "gcc/ada/i-cpoint.ads", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8b3ccb951a6af120a84b92205ee6d80141eb5f6/gcc%2Fada%2Fi-cpoint.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8b3ccb951a6af120a84b92205ee6d80141eb5f6/gcc%2Fada%2Fi-cpoint.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fi-cpoint.ads?ref=d8b3ccb951a6af120a84b92205ee6d80141eb5f6", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1993-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1993-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -33,6 +33,8 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n+with System.Parameters;\n+\n generic\n    type Index is (<>);\n    type Element is private;\n@@ -43,6 +45,7 @@ package Interfaces.C.Pointers is\n    pragma Preelaborate;\n \n    type Pointer is access all Element;\n+   for Pointer'Size use System.Parameters.ptr_bits;\n \n    pragma No_Strict_Aliasing (Pointer);\n    --  We turn off any strict aliasing assumptions for the pointer type,"}, {"sha": "814894646409b0545d8d9d2724ee266b01fb9226", "filename": "gcc/ada/i-cstrin.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8b3ccb951a6af120a84b92205ee6d80141eb5f6/gcc%2Fada%2Fi-cstrin.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8b3ccb951a6af120a84b92205ee6d80141eb5f6/gcc%2Fada%2Fi-cstrin.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fi-cstrin.adb?ref=d8b3ccb951a6af120a84b92205ee6d80141eb5f6", "patch": "@@ -42,10 +42,10 @@ package body Interfaces.C.Strings is\n    --  this type will in fact be used for aliasing values of other types.\n \n    function To_chars_ptr is\n-      new Ada.Unchecked_Conversion (Address, chars_ptr);\n+      new Ada.Unchecked_Conversion (System.Parameters.C_Address, chars_ptr);\n \n    function To_Address is\n-      new Ada.Unchecked_Conversion (chars_ptr, Address);\n+      new Ada.Unchecked_Conversion (chars_ptr, System.Parameters.C_Address);\n \n    -----------------------\n    -- Local Subprograms --\n@@ -70,7 +70,7 @@ package body Interfaces.C.Strings is\n    --  compatible, so we directly import here the malloc and free routines.\n \n    function Memory_Alloc (Size : size_t) return chars_ptr;\n-   pragma Import (C, Memory_Alloc, \"__gnat_malloc\");\n+   pragma Import (C, Memory_Alloc, System.Parameters.C_Malloc_Linkname);\n \n    procedure Memory_Free (Address : chars_ptr);\n    pragma Import (C, Memory_Free, \"__gnat_free\");"}, {"sha": "bc6df774addc26b97451bc2cf4d2e74cb5d0f393", "filename": "gcc/ada/i-cstrin.ads", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8b3ccb951a6af120a84b92205ee6d80141eb5f6/gcc%2Fada%2Fi-cstrin.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8b3ccb951a6af120a84b92205ee6d80141eb5f6/gcc%2Fada%2Fi-cstrin.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fi-cstrin.ads?ref=d8b3ccb951a6af120a84b92205ee6d80141eb5f6", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1993-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1993-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -37,6 +37,7 @@ package Interfaces.C.Strings is\n    pragma Preelaborate;\n \n    type char_array_access is access all char_array;\n+   for char_array_access'Size use System.Parameters.ptr_bits;\n \n    pragma No_Strict_Aliasing (char_array_access);\n    --  Since this type is used for external interfacing, with the pointer\n@@ -91,7 +92,7 @@ package Interfaces.C.Strings is\n \n private\n    type chars_ptr is access all Character;\n-   pragma Convention (C, chars_ptr);\n+   for chars_ptr'Size use System.Parameters.ptr_bits;\n \n    pragma No_Strict_Aliasing (chars_ptr);\n    --  Since this type is used for external interfacing, with the pointer"}, {"sha": "ae8a21074f2814a2f350cf01a216a82b0e2157fc", "filename": "gcc/ada/s-parame-ae653.ads", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8b3ccb951a6af120a84b92205ee6d80141eb5f6/gcc%2Fada%2Fs-parame-ae653.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8b3ccb951a6af120a84b92205ee6d80141eb5f6/gcc%2Fada%2Fs-parame-ae653.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-parame-ae653.ads?ref=d8b3ccb951a6af120a84b92205ee6d80141eb5f6", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -112,6 +112,15 @@ package System.Parameters is\n    --  is that this is the same as type Long_Integer, but this is not true\n    --  of all targets. For example, in OpenVMS long /= Long_Integer.\n \n+   ptr_bits  : constant := Standard'Address_Size;\n+   subtype C_Address is System.Address;\n+   --  Number of bits in Interaces.C pointers, normally a standard address,\n+   --  except on 64-bit VMS where they are 32-bit addresses, for compatibility\n+   --  with legacy code.\n+\n+   C_Malloc_Linkname : constant String := \"__gnat_malloc\";\n+   --  Name of runtime function used to allocate such a pointer\n+\n    ----------------------------------------------\n    -- Behavior of Pragma Finalize_Storage_Only --\n    ----------------------------------------------"}, {"sha": "7bb22b0532dd36708c277db1749ae33357eab5e3", "filename": "gcc/ada/s-parame-hpux.ads", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8b3ccb951a6af120a84b92205ee6d80141eb5f6/gcc%2Fada%2Fs-parame-hpux.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8b3ccb951a6af120a84b92205ee6d80141eb5f6/gcc%2Fada%2Fs-parame-hpux.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-parame-hpux.ads?ref=d8b3ccb951a6af120a84b92205ee6d80141eb5f6", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -110,6 +110,15 @@ package System.Parameters is\n    --  is that this is the same as type Long_Integer, but this is not true\n    --  of all targets. For example, in OpenVMS long /= Long_Integer.\n \n+   ptr_bits  : constant := Standard'Address_Size;\n+   subtype C_Address is System.Address;\n+   --  Number of bits in Interaces.C pointers, normally a standard address,\n+   --  except on 64-bit VMS where they are 32-bit addresses, for compatibility\n+   --  with legacy code.\n+\n+   C_Malloc_Linkname : constant String := \"__gnat_malloc\";\n+   --  Name of runtime function used to allocate such a pointer\n+\n    ----------------------------------------------\n    -- Behavior of Pragma Finalize_Storage_Only --\n    ----------------------------------------------"}, {"sha": "308656c1415ca369876d1ed7b70b7a789470f814", "filename": "gcc/ada/s-parame-vms-alpha.ads", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8b3ccb951a6af120a84b92205ee6d80141eb5f6/gcc%2Fada%2Fs-parame-vms-alpha.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8b3ccb951a6af120a84b92205ee6d80141eb5f6/gcc%2Fada%2Fs-parame-vms-alpha.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-parame-vms-alpha.ads?ref=d8b3ccb951a6af120a84b92205ee6d80141eb5f6", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -46,6 +46,8 @@\n --  Note: do not introduce any pragma Inline statements into this unit, since\n --  otherwise the relinking and rebinding capability would be deactivated.\n \n+with System.Aux_DEC;\n+\n package System.Parameters is\n    pragma Pure;\n \n@@ -110,6 +112,15 @@ package System.Parameters is\n    --  is that this is the same as type Long_Integer, but this is not true\n    --  of all targets. For example, in OpenVMS long /= Long_Integer.\n \n+   ptr_bits  : constant := 32;\n+   subtype C_Address is System.Short_Address;\n+   --  Number of bits in Interaces.C pointers, normally a standard address,\n+   --  except on 64-bit VMS where they are 32-bit addresses, for compatibility\n+   --  with legacy code.\n+\n+   C_Malloc_Linkname : constant String := \"__gnat_malloc32\";\n+   --  Name of runtime function used to allocate such a pointer\n+\n    ----------------------------------------------\n    -- Behavior of Pragma Finalize_Storage_Only --\n    ----------------------------------------------"}, {"sha": "29ec8088843f77ab2e8c22c9187e0d4c2fe015dd", "filename": "gcc/ada/s-parame-vms-ia64.ads", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8b3ccb951a6af120a84b92205ee6d80141eb5f6/gcc%2Fada%2Fs-parame-vms-ia64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8b3ccb951a6af120a84b92205ee6d80141eb5f6/gcc%2Fada%2Fs-parame-vms-ia64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-parame-vms-ia64.ads?ref=d8b3ccb951a6af120a84b92205ee6d80141eb5f6", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -46,6 +46,8 @@\n --  Note: do not introduce any pragma Inline statements into this unit, since\n --  otherwise the relinking and rebinding capability would be deactivated.\n \n+with System.Aux_DEC;\n+\n package System.Parameters is\n    pragma Pure;\n \n@@ -110,6 +112,15 @@ package System.Parameters is\n    --  is that this is the same as type Long_Integer, but this is not true\n    --  of all targets. For example, in OpenVMS long /= Long_Integer.\n \n+   ptr_bits  : constant := 32;\n+   subtype C_Address is System.Short_Address;\n+   --  Number of bits in Interaces.C pointers, normally a standard address,\n+   --  except on 64-bit VMS where they are 32-bit addresses, for compatibility\n+   --  with legacy code.\n+\n+   C_Malloc_Linkname : constant String := \"__gnat_malloc32\";\n+   --  Name of runtime function used to allocate such a pointer\n+\n    ----------------------------------------------\n    -- Behavior of Pragma Finalize_Storage_Only --\n    ----------------------------------------------"}, {"sha": "7c3cbd677945a819ce742c66313b05170aa449c6", "filename": "gcc/ada/s-parame-vms-restrict.ads", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8b3ccb951a6af120a84b92205ee6d80141eb5f6/gcc%2Fada%2Fs-parame-vms-restrict.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8b3ccb951a6af120a84b92205ee6d80141eb5f6/gcc%2Fada%2Fs-parame-vms-restrict.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-parame-vms-restrict.ads?ref=d8b3ccb951a6af120a84b92205ee6d80141eb5f6", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -46,6 +46,8 @@\n --  Note: do not introduce any pragma Inline statements into this unit, since\n --  otherwise the relinking and rebinding capability would be deactivated.\n \n+with System.Aux_DEC;\n+\n package System.Parameters is\n    pragma Pure;\n \n@@ -110,6 +112,15 @@ package System.Parameters is\n    --  is that this is the same as type Long_Integer, but this is not true\n    --  of all targets. For example, in OpenVMS long /= Long_Integer.\n \n+   ptr_bits  : constant := 32;\n+   subtype C_Address is System.Short_Address;\n+   --  Number of bits in Interaces.C pointers, normally a standard address,\n+   --  except on 64-bit VMS where they are 32-bit addresses, for compatibility\n+   --  with legacy code.\n+\n+   C_Malloc_Linkname : constant String := \"__gnat_malloc32\";\n+   --  Name of runtime function used to allocate such a pointer\n+\n    ----------------------------------------------\n    -- Behavior of Pragma Finalize_Storage_Only --\n    ----------------------------------------------"}, {"sha": "715eb04e7d4ca62923d292de277219b24750a32f", "filename": "gcc/ada/s-parame-vxworks.ads", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8b3ccb951a6af120a84b92205ee6d80141eb5f6/gcc%2Fada%2Fs-parame-vxworks.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8b3ccb951a6af120a84b92205ee6d80141eb5f6/gcc%2Fada%2Fs-parame-vxworks.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-parame-vxworks.ads?ref=d8b3ccb951a6af120a84b92205ee6d80141eb5f6", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -112,6 +112,15 @@ package System.Parameters is\n    --  is that this is the same as type Long_Integer, but this is not true\n    --  of all targets. For example, in OpenVMS long /= Long_Integer.\n \n+   ptr_bits  : constant := Standard'Address_Size;\n+   subtype C_Address is System.Address;\n+   --  Number of bits in Interaces.C pointers, normally a standard address,\n+   --  except on 64-bit VMS where they are 32-bit addresses, for compatibility\n+   --  with legacy code.\n+\n+   C_Malloc_Linkname : constant String := \"__gnat_malloc\";\n+   --  Name of runtime function used to allocate such a pointer\n+\n    ----------------------------------------------\n    -- Behavior of Pragma Finalize_Storage_Only --\n    ----------------------------------------------"}, {"sha": "526139f1ed47d227291a319eeed6c83b0766c2bd", "filename": "gcc/ada/s-parame.ads", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8b3ccb951a6af120a84b92205ee6d80141eb5f6/gcc%2Fada%2Fs-parame.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8b3ccb951a6af120a84b92205ee6d80141eb5f6/gcc%2Fada%2Fs-parame.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-parame.ads?ref=d8b3ccb951a6af120a84b92205ee6d80141eb5f6", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -112,6 +112,15 @@ package System.Parameters is\n    --  is that this is the same as type Long_Integer, but this is not true\n    --  of all targets. For example, in OpenVMS long /= Long_Integer.\n \n+   ptr_bits  : constant := Standard'Address_Size;\n+   subtype C_Address is System.Address;\n+   --  Number of bits in Interaces.C pointers, normally a standard address,\n+   --  except on 64-bit VMS where they are 32-bit addresses, for compatibility\n+   --  with legacy code.\n+\n+   C_Malloc_Linkname : constant String := \"__gnat_malloc\";\n+   --  Name of runtime function used to allocate such a pointer\n+\n    ----------------------------------------------\n    -- Behavior of Pragma Finalize_Storage_Only --\n    ----------------------------------------------"}, {"sha": "c101d93c6022b5480782251efbc1ccf58daa8fe1", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8b3ccb951a6af120a84b92205ee6d80141eb5f6/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8b3ccb951a6af120a84b92205ee6d80141eb5f6/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=d8b3ccb951a6af120a84b92205ee6d80141eb5f6", "patch": "@@ -1175,7 +1175,7 @@ package body Sem_Ch3 is\n \n             --  In ASIS mode, the access_to_subprogram may be analyzed twice,\n             --  when it is part of an unconstrained type and subtype expansion\n-            --  is disabled.  To avoid back-end problems with shared profiles,\n+            --  is disabled. To avoid back-end problems with shared profiles,\n             --  use previous subprogram type as the designated type.\n \n             if ASIS_Mode"}, {"sha": "f42c8ece866e90bc9dfce80a50efa3c3f18a8379", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8b3ccb951a6af120a84b92205ee6d80141eb5f6/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8b3ccb951a6af120a84b92205ee6d80141eb5f6/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=d8b3ccb951a6af120a84b92205ee6d80141eb5f6", "patch": "@@ -165,7 +165,10 @@ package body Sem_Util is\n             Nod := Type_Definition (Parent (Typ));\n \n          elsif Nkind (Parent (Typ)) = N_Private_Type_Declaration then\n-            if Present (Full_View (Typ)) then\n+            if Present (Full_View (Typ))\n+              and then Nkind (Parent (Full_View (Typ)))\n+                         = N_Full_Type_Declaration\n+            then\n                Nod := Type_Definition (Parent (Full_View (Typ)));\n \n             --  If the full-view is not available we cannot do anything else\n@@ -7335,6 +7338,7 @@ package body Sem_Util is\n                 and then Is_Synchronized_Interface (E))\n             or else\n              (Ekind (E) = E_Record_Type_With_Private\n+                and then Nkind (Parent (E)) = N_Private_Extension_Declaration\n                 and then (Synchronized_Present (Parent (E))\n                            or else Is_Synchronized_Interface (Etype (E))));\n    end Is_Synchronized_Tagged_Type;"}]}