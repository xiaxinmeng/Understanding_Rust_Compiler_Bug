{"sha": "cab6e7717eff3872849ef593073e9e3a6ad47956", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2FiNmU3NzE3ZWZmMzg3Mjg0OWVmNTkzMDczZTllM2E2YWQ0Nzk1Ng==", "commit": {"author": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2007-03-29T12:04:09Z"}, "committer": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2007-03-29T12:04:09Z"}, "message": "ifcvt.c (struct noce_if_info): Add then_else_reversed field.\n\n\t* ifcvt.c (struct noce_if_info): Add then_else_reversed field.\n\t(noce_get_alt_condition): Look at it to determine whether to\n\treverse the condition or not.\n\t(noce_get_condition): Substitute the truth for lies.\n\t(noce_find_if_block): Set the then_else_reversed field.\n\nFrom-SVN: r123327", "tree": {"sha": "bb9d8684fd23c1a34a7634ee37863dc889f5b85e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bb9d8684fd23c1a34a7634ee37863dc889f5b85e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cab6e7717eff3872849ef593073e9e3a6ad47956", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cab6e7717eff3872849ef593073e9e3a6ad47956", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cab6e7717eff3872849ef593073e9e3a6ad47956", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cab6e7717eff3872849ef593073e9e3a6ad47956/comments", "author": null, "committer": null, "parents": [{"sha": "ed31d14cafee6f62692ed62e1ca295aa9b1b65ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed31d14cafee6f62692ed62e1ca295aa9b1b65ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed31d14cafee6f62692ed62e1ca295aa9b1b65ee"}], "stats": {"total": 30, "additions": 24, "deletions": 6}, "files": [{"sha": "ed51488e46a21c377e6b054b8775303524b0be60", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cab6e7717eff3872849ef593073e9e3a6ad47956/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cab6e7717eff3872849ef593073e9e3a6ad47956/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cab6e7717eff3872849ef593073e9e3a6ad47956", "patch": "@@ -1,3 +1,11 @@\n+2007-03-29  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\t* ifcvt.c (struct noce_if_info): Add then_else_reversed field.\n+\t(noce_get_alt_condition): Look at it to determine whether to\n+\treverse the condition or not.\n+\t(noce_get_condition): Substitute the truth for lies.\n+\t(noce_find_if_block): Set the then_else_reversed field.\n+\n 2007-03-29  Lars Poeschel <larsi@wh2.tu-dresden.de>\n \n \t* config/fr30/fr30.md (movdi): Do not accept immediates as the"}, {"sha": "4a993d3ee400c6cf44f8384cdc9a32415f67838c", "filename": "gcc/ifcvt.c", "status": "modified", "additions": 16, "deletions": 6, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cab6e7717eff3872849ef593073e9e3a6ad47956/gcc%2Fifcvt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cab6e7717eff3872849ef593073e9e3a6ad47956/gcc%2Fifcvt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fifcvt.c?ref=cab6e7717eff3872849ef593073e9e3a6ad47956", "patch": "@@ -621,6 +621,12 @@ struct noce_if_info\n \n   /* The SET_DEST of INSN_A.  */\n   rtx x;\n+\n+  /* True if this if block is not canonical.  In the canonical form of\n+     if blocks, the THEN_BB is the block reached via the fallthru edge\n+     from TEST_BB.  For the noce transformations, we allow the symmetric\n+     form as well.  */\n+  bool then_else_reversed;\n };\n \n static rtx noce_emit_store_flag (struct noce_if_info *, rtx, int, int);\n@@ -1503,6 +1509,8 @@ noce_get_alt_condition (struct noce_if_info *if_info, rtx target,\n   reverse\n     = GET_CODE (XEXP (SET_SRC (set), 2)) == LABEL_REF\n       && XEXP (XEXP (SET_SRC (set), 2), 0) == JUMP_LABEL (if_info->jump);\n+  if (if_info->then_else_reversed)\n+    reverse = !reverse;\n \n   /* If we're looking for a constant, try to make the conditional\n      have that constant in it.  There are two reasons why it may\n@@ -2017,8 +2025,8 @@ noce_try_bitop (struct noce_if_info *if_info)\n /* Similar to get_condition, only the resulting condition must be\n    valid at JUMP, instead of at EARLIEST.\n \n-   If THEN_ELSE_REVERSED is true, the fallthrough goes to the THEN\n-   block of the caller, and we have to reverse the condition.  */\n+   If THEN_ELSE_REVERSED is true, the fallthrough does not go to the\n+   THEN block of the caller, and we have to reverse the condition.  */\n \n static rtx\n noce_get_condition (rtx jump, rtx *earliest, bool then_else_reversed)\n@@ -2036,8 +2044,9 @@ noce_get_condition (rtx jump, rtx *earliest, bool then_else_reversed)\n   reverse = (GET_CODE (XEXP (SET_SRC (set), 2)) == LABEL_REF\n \t     && XEXP (XEXP (SET_SRC (set), 2), 0) == JUMP_LABEL (jump));\n \n-  /* We may have to reverse because the caller's if block is not canonical\n-     (i.e. the ELSE block isn't the fallthrough block for the TEST block).  */\n+  /* We may have to reverse because the caller's if block is not canonical,\n+     i.e. the THEN block isn't the fallthrough block for the TEST block\n+     (see find_if_header).  */\n   if (then_else_reversed)\n     reverse = !reverse;\n \n@@ -2671,7 +2680,7 @@ noce_find_if_block (basic_block test_bb,\n   /* Recognize an IF-ELSE-JOIN block.  We can have those because the order\n      of basic blocks in cfglayout mode does not matter, so the fallthrough\n      edge can go to any basic block (and not just to bb->next_bb, like in\n-     cfgrtl mode).  */ \n+     cfgrtl mode).  */\n   else if (single_pred_p (else_edge->dest)\n \t   && single_succ_p (else_edge->dest)\n \t   && single_succ (else_edge->dest) == then_edge->dest)\n@@ -2687,7 +2696,7 @@ noce_find_if_block (basic_block test_bb,\n   else\n     /* Not a form we can handle.  */\n     return FALSE;\n-     \n+\n   /* The edges of the THEN and ELSE blocks cannot have complex edges.  */\n   if (single_succ_edge (then_bb)->flags & EDGE_COMPLEX)\n     return FALSE;\n@@ -2735,6 +2744,7 @@ noce_find_if_block (basic_block test_bb,\n   if_info.join_bb = join_bb;\n   if_info.cond = cond;\n   if_info.jump = jump;\n+  if_info.then_else_reversed = then_else_reversed;\n \n   /* Do the real work.  */\n "}]}