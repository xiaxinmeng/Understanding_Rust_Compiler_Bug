{"sha": "54654d29cb254b75a486c33b0a2bbdbddb526f33", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTQ2NTRkMjljYjI1NGI3NWE0ODZjMzNiMGEyYmJkYmRkYjUyNmYzMw==", "commit": {"author": {"name": "Douglas Gregor", "email": "dgregor@osl.iu.edu", "date": "2007-01-25T04:02:36Z"}, "committer": {"name": "Doug Gregor", "email": "dgregor@gcc.gnu.org", "date": "2007-01-25T04:02:36Z"}, "message": "lex.c (D_CPP0X): Rename.\n\n2007-01-24  Douglas Gregor  <dgregor@osl.iu.edu>\n\n\t* lex.c (D_CPP0X): Rename.\n\t(D_CXX0X): To this.\n\t(reswords): D_CPP0X -> D_CXX0X.\n\t(init_reswords): Ditto.\n\t* parser.c (cp_lexer_get_preprocessor_token): Warn about the use\n\tof C++0x keywords as identifiers.\n\nFrom-SVN: r121161", "tree": {"sha": "8719ff17fe366c09f62ada22587f82ead23564a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8719ff17fe366c09f62ada22587f82ead23564a7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/54654d29cb254b75a486c33b0a2bbdbddb526f33", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54654d29cb254b75a486c33b0a2bbdbddb526f33", "html_url": "https://github.com/Rust-GCC/gccrs/commit/54654d29cb254b75a486c33b0a2bbdbddb526f33", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54654d29cb254b75a486c33b0a2bbdbddb526f33/comments", "author": null, "committer": null, "parents": [{"sha": "18103407c6e0e824c5c92ac0a07e6baca6f71f43", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18103407c6e0e824c5c92ac0a07e6baca6f71f43", "html_url": "https://github.com/Rust-GCC/gccrs/commit/18103407c6e0e824c5c92ac0a07e6baca6f71f43"}], "stats": {"total": 29, "additions": 26, "deletions": 3}, "files": [{"sha": "e04ee5a4cc5e0cc72bf57f75f02e08c6e99f153e", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54654d29cb254b75a486c33b0a2bbdbddb526f33/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54654d29cb254b75a486c33b0a2bbdbddb526f33/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=54654d29cb254b75a486c33b0a2bbdbddb526f33", "patch": "@@ -1,3 +1,12 @@\n+2007-01-24  Douglas Gregor  <dgregor@osl.iu.edu>\n+\n+\t* lex.c (D_CPP0X): Rename.\n+\t(D_CXX0X): To this.\n+\t(reswords): D_CPP0X -> D_CXX0X.\n+\t(init_reswords): Ditto.\n+\t* parser.c (cp_lexer_get_preprocessor_token): Warn about the use\n+\tof C++0x keywords as identifiers.\n+\n 2007-01-23  Simon Martin  <simartin@users.sourceforge.net>\n \n \tPR c++/27492"}, {"sha": "db78a474e5d44bf57c13ad31accd0c91dc6056d8", "filename": "gcc/cp/lex.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54654d29cb254b75a486c33b0a2bbdbddb526f33/gcc%2Fcp%2Flex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54654d29cb254b75a486c33b0a2bbdbddb526f33/gcc%2Fcp%2Flex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Flex.c?ref=54654d29cb254b75a486c33b0a2bbdbddb526f33", "patch": "@@ -176,7 +176,7 @@ struct resword\n #define D_EXT\t\t0x01\t/* GCC extension */\n #define D_ASM\t\t0x02\t/* in C99, but has a switch to turn it off */\n #define D_OBJC\t\t0x04\t/* Objective C++ only */\n-#define D_CPP0X         0x08    /* C++0x only */\n+#define D_CXX0X         0x08    /* C++0x only */\n \n CONSTRAINT(ridbits_fit, RID_LAST_MODIFIER < sizeof(unsigned long) * CHAR_BIT);\n \n@@ -260,7 +260,7 @@ static const struct resword reswords[] =\n   { \"signed\",\t\tRID_SIGNED,\t0 },\n   { \"sizeof\",\t\tRID_SIZEOF,\t0 },\n   { \"static\",\t\tRID_STATIC,\t0 },\n-  { \"static_assert\",    RID_STATIC_ASSERT, D_CPP0X },\n+  { \"static_assert\",    RID_STATIC_ASSERT, D_CXX0X },\n   { \"static_cast\",\tRID_STATCAST,\t0 },\n   { \"struct\",\t\tRID_STRUCT,\t0 },\n   { \"switch\",\t\tRID_SWITCH,\t0 },\n@@ -317,7 +317,7 @@ init_reswords (void)\n   int mask = ((flag_no_asm ? D_ASM : 0)\n \t      | D_OBJC\n \t      | (flag_no_gnu_keywords ? D_EXT : 0)\n-              | (flag_cpp0x ? 0 : D_CPP0X));\n+              | (flag_cpp0x ? 0 : D_CXX0X));\n \n   ridpointers = GGC_CNEWVEC (tree, (int) RID_MAX);\n   for (i = 0; i < ARRAY_SIZE (reswords); i++)"}, {"sha": "fa18e20b99e931d74dbe8582c9f2cbd466a1be0c", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54654d29cb254b75a486c33b0a2bbdbddb526f33/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54654d29cb254b75a486c33b0a2bbdbddb526f33/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=54654d29cb254b75a486c33b0a2bbdbddb526f33", "patch": "@@ -443,6 +443,20 @@ cp_lexer_get_preprocessor_token (cp_lexer *lexer ATTRIBUTE_UNUSED ,\n \t}\n       else\n \t{\n+          if (warn_cxx0x_compat\n+              && C_RID_CODE (token->u.value) >= RID_FIRST_CXX0X\n+              && C_RID_CODE (token->u.value) <= RID_LAST_CXX0X)\n+            {\n+              /* Warn about the C++0x keyword (but still treat it as\n+                 an identifier).  */\n+              warning (0, \"identifier %<%s%> will become a keyword in C++0x\",\n+                       IDENTIFIER_POINTER (token->u.value));\n+\n+              /* Clear out the C_RID_CODE so we don't warn about this\n+                 particular identifier-turned-keyword again.  */\n+              C_RID_CODE (token->u.value) = RID_MAX;\n+            }\n+\n \t  token->ambiguous_p = false;\n \t  token->keyword = RID_MAX;\n \t}"}]}