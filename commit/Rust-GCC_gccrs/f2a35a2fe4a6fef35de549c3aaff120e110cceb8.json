{"sha": "f2a35a2fe4a6fef35de549c3aaff120e110cceb8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjJhMzVhMmZlNGE2ZmVmMzVkZTU0OWMzYWFmZjEyMGUxMTBjY2ViOA==", "commit": {"author": {"name": "Bob Duff", "email": "duff@adacore.com", "date": "2019-08-20T09:49:23Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-08-20T09:49:23Z"}, "message": "[Ada] Fix a folding issue with System'To_Address\n\n2019-08-20  Bob Duff  <duff@adacore.com>\n\ngcc/ada/\n\n\t* sem_eval.adb (Expr_Value): Implement the case of an unchecked\n\tconversion of a static expression.\n\nFrom-SVN: r274726", "tree": {"sha": "c19b127d296dc81e352f3d38158f8ea5bca8abae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c19b127d296dc81e352f3d38158f8ea5bca8abae"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f2a35a2fe4a6fef35de549c3aaff120e110cceb8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2a35a2fe4a6fef35de549c3aaff120e110cceb8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2a35a2fe4a6fef35de549c3aaff120e110cceb8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2a35a2fe4a6fef35de549c3aaff120e110cceb8/comments", "author": {"login": "bobduff", "id": 29099567, "node_id": "MDQ6VXNlcjI5MDk5NTY3", "avatar_url": "https://avatars.githubusercontent.com/u/29099567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bobduff", "html_url": "https://github.com/bobduff", "followers_url": "https://api.github.com/users/bobduff/followers", "following_url": "https://api.github.com/users/bobduff/following{/other_user}", "gists_url": "https://api.github.com/users/bobduff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bobduff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bobduff/subscriptions", "organizations_url": "https://api.github.com/users/bobduff/orgs", "repos_url": "https://api.github.com/users/bobduff/repos", "events_url": "https://api.github.com/users/bobduff/events{/privacy}", "received_events_url": "https://api.github.com/users/bobduff/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d21ae867a5a83c7c5dd11a2e51d0c4b2ff9e41b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d21ae867a5a83c7c5dd11a2e51d0c4b2ff9e41b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d21ae867a5a83c7c5dd11a2e51d0c4b2ff9e41b8"}], "stats": {"total": 19, "additions": 16, "deletions": 3}, "files": [{"sha": "e9a8e79a0dba13f2a16e9681118531b2ac97a05d", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2a35a2fe4a6fef35de549c3aaff120e110cceb8/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2a35a2fe4a6fef35de549c3aaff120e110cceb8/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=f2a35a2fe4a6fef35de549c3aaff120e110cceb8", "patch": "@@ -1,3 +1,8 @@\n+2019-08-20  Bob Duff  <duff@adacore.com>\n+\n+\t* sem_eval.adb (Expr_Value): Implement the case of an unchecked\n+\tconversion of a static expression.\n+\n 2019-08-20  Bob Duff  <duff@adacore.com>\n \n \t* sem_ch13.adb (Is_Null_Array): New function, used to detect the"}, {"sha": "430b8bd5234c64b1b61359a7be2424dc630cb166", "filename": "gcc/ada/sem_eval.adb", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2a35a2fe4a6fef35de549c3aaff120e110cceb8/gcc%2Fada%2Fsem_eval.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2a35a2fe4a6fef35de549c3aaff120e110cceb8/gcc%2Fada%2Fsem_eval.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_eval.adb?ref=f2a35a2fe4a6fef35de549c3aaff120e110cceb8", "patch": "@@ -4281,10 +4281,9 @@ package body Sem_Eval is\n          pragma Assert (Is_Access_Type (Underlying_Type (Etype (N))));\n          Val := Uint_0;\n \n-      --  Otherwise must be character literal\n+      --  Character literal\n \n-      else\n-         pragma Assert (Kind = N_Character_Literal);\n+      elsif Kind = N_Character_Literal then\n          Ent := Entity (N);\n \n          --  Since Character literals of type Standard.Character don't\n@@ -4298,6 +4297,15 @@ package body Sem_Eval is\n          else\n             Val := Enumeration_Pos (Ent);\n          end if;\n+\n+      --  Unchecked conversion, which can come from System'To_Address (X)\n+      --  where X is a static integer expression. Recursively evaluate X.\n+\n+      elsif Kind = N_Unchecked_Type_Conversion then\n+         Val := Expr_Value (Expression (N));\n+\n+      else\n+         raise Program_Error;\n       end if;\n \n       --  Come here with Val set to value to be returned, set cache"}]}