{"sha": "e02669dbdf1d1099710dbc515f07d0b4785ae2fd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTAyNjY5ZGJkZjFkMTA5OTcxMGRiYzUxNWYwN2QwYjQ3ODVhZTJmZA==", "commit": {"author": {"name": "Christoph Muellner", "email": "christoph.muellner@theobroma-systems.com", "date": "2018-11-23T17:52:19Z"}, "committer": {"name": "Philipp Tomsich", "email": "ptomsich@gcc.gnu.org", "date": "2018-11-23T17:52:19Z"}, "message": "[aarch64] Add CPU support for Ampere Computing's eMAG.\n\n2018-11-23  Christoph Muellner <christoph.muellner@theobroma-system.com>\n\n\t* config/aarch64/aarch64-cores.def: Define emag.\n\t* config/aarch64/aarch64-tune.md: Regenerated with emag.\n\t* config/aarch64/aarch64.c (emag_tunings): New struct.\n\t* doc/invoke.texi: Document mtune value.\n\nFrom-SVN: r266415", "tree": {"sha": "8be17b4425277a03b6937706d52f4db869d3ebfe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8be17b4425277a03b6937706d52f4db869d3ebfe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e02669dbdf1d1099710dbc515f07d0b4785ae2fd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e02669dbdf1d1099710dbc515f07d0b4785ae2fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e02669dbdf1d1099710dbc515f07d0b4785ae2fd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e02669dbdf1d1099710dbc515f07d0b4785ae2fd/comments", "author": {"login": "cmuellner", "id": 92810, "node_id": "MDQ6VXNlcjkyODEw", "avatar_url": "https://avatars.githubusercontent.com/u/92810?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cmuellner", "html_url": "https://github.com/cmuellner", "followers_url": "https://api.github.com/users/cmuellner/followers", "following_url": "https://api.github.com/users/cmuellner/following{/other_user}", "gists_url": "https://api.github.com/users/cmuellner/gists{/gist_id}", "starred_url": "https://api.github.com/users/cmuellner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cmuellner/subscriptions", "organizations_url": "https://api.github.com/users/cmuellner/orgs", "repos_url": "https://api.github.com/users/cmuellner/repos", "events_url": "https://api.github.com/users/cmuellner/events{/privacy}", "received_events_url": "https://api.github.com/users/cmuellner/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cf28c77eb162a717775354349a47f68bc7088181", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf28c77eb162a717775354349a47f68bc7088181", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf28c77eb162a717775354349a47f68bc7088181"}], "stats": {"total": 41, "additions": 39, "deletions": 2}, "files": [{"sha": "fb107374807b8633195c3f5ddff0a8904c2df1a6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e02669dbdf1d1099710dbc515f07d0b4785ae2fd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e02669dbdf1d1099710dbc515f07d0b4785ae2fd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e02669dbdf1d1099710dbc515f07d0b4785ae2fd", "patch": "@@ -1,3 +1,10 @@\n+2018-11-23  Christoph Muellner  <christoph.muellner@theobroma-systems.com>\n+\n+        * config/aarch64/aarch64-cores.def: Define emag.\n+\t* config/aarch64/aarch64-tune.md: Regenerated with emag.\n+\t* config/aarch64/aarch64.c (emag_tunings): New struct.\n+\t* doc/invoke.texi: Document mtune value.\n+\n 2018-11-23  Christoph Muellner  <christoph.muellner@theobroma-systems.com>\n \t    Philipp Tomsich <philipp.tomsich@theobroma-systems.com>\n "}, {"sha": "74be5dbf25954560c0b78e6da62f64dc0d143486", "filename": "gcc/config/aarch64/aarch64-cores.def", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e02669dbdf1d1099710dbc515f07d0b4785ae2fd/gcc%2Fconfig%2Faarch64%2Faarch64-cores.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e02669dbdf1d1099710dbc515f07d0b4785ae2fd/gcc%2Fconfig%2Faarch64%2Faarch64-cores.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-cores.def?ref=e02669dbdf1d1099710dbc515f07d0b4785ae2fd", "patch": "@@ -61,6 +61,11 @@ AARCH64_CORE(\"thunderxt88\",   thunderxt88,   thunderx,  8A,  AARCH64_FL_FOR_ARCH\n AARCH64_CORE(\"thunderxt81\",   thunderxt81,   thunderx,  8A,  AARCH64_FL_FOR_ARCH8 | AARCH64_FL_CRC | AARCH64_FL_CRYPTO, thunderx,  0x43, 0x0a2, -1)\n AARCH64_CORE(\"thunderxt83\",   thunderxt83,   thunderx,  8A,  AARCH64_FL_FOR_ARCH8 | AARCH64_FL_CRC | AARCH64_FL_CRYPTO, thunderx,  0x43, 0x0a3, -1)\n \n+/* Ampere Computing cores. */\n+/* Do not swap around \"emag\" and \"xgene1\",\n+   this order is required to handle variant correctly. */\n+AARCH64_CORE(\"emag\",        emag,      xgene1,    8A,  AARCH64_FL_FOR_ARCH8 | AARCH64_FL_CRC | AARCH64_FL_CRYPTO, emag, 0x50, 0x000, 3)\n+\n /* APM ('P') cores. */\n AARCH64_CORE(\"xgene1\",      xgene1,    xgene1,    8A,  AARCH64_FL_FOR_ARCH8, xgene1, 0x50, 0x000, -1)\n "}, {"sha": "2fc7f0398e73dd146a15ec1468d2fe94f339616b", "filename": "gcc/config/aarch64/aarch64-tune.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e02669dbdf1d1099710dbc515f07d0b4785ae2fd/gcc%2Fconfig%2Faarch64%2Faarch64-tune.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e02669dbdf1d1099710dbc515f07d0b4785ae2fd/gcc%2Fconfig%2Faarch64%2Faarch64-tune.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-tune.md?ref=e02669dbdf1d1099710dbc515f07d0b4785ae2fd", "patch": "@@ -1,5 +1,5 @@\n ;; -*- buffer-read-only: t -*-\n ;; Generated automatically by gentune.sh from aarch64-cores.def\n (define_attr \"tune\"\n-\t\"cortexa35,cortexa53,cortexa57,cortexa72,cortexa73,thunderx,thunderxt88p1,thunderxt88,thunderxt81,thunderxt83,xgene1,falkor,qdf24xx,exynosm1,phecda,thunderx2t99p1,vulcan,thunderx2t99,cortexa55,cortexa75,cortexa76,ares,tsv110,saphira,cortexa57cortexa53,cortexa72cortexa53,cortexa73cortexa35,cortexa73cortexa53,cortexa75cortexa55,cortexa76cortexa55\"\n+\t\"cortexa35,cortexa53,cortexa57,cortexa72,cortexa73,thunderx,thunderxt88p1,thunderxt88,thunderxt81,thunderxt83,emag,xgene1,falkor,qdf24xx,exynosm1,phecda,thunderx2t99p1,vulcan,thunderx2t99,cortexa55,cortexa75,cortexa76,ares,tsv110,saphira,cortexa57cortexa53,cortexa72cortexa53,cortexa73cortexa35,cortexa73cortexa53,cortexa75cortexa55,cortexa76cortexa55\"\n \t(const (symbol_ref \"((enum attr_tune) aarch64_tune)\")))"}, {"sha": "90bbc578f1a001b52b77561c968c717dcd4aac70", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e02669dbdf1d1099710dbc515f07d0b4785ae2fd/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e02669dbdf1d1099710dbc515f07d0b4785ae2fd/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=e02669dbdf1d1099710dbc515f07d0b4785ae2fd", "patch": "@@ -957,6 +957,31 @@ static const struct tune_params xgene1_tunings =\n   &xgene1_prefetch_tune\n };\n \n+static const struct tune_params emag_tunings =\n+{\n+  &xgene1_extra_costs,\n+  &xgene1_addrcost_table,\n+  &xgene1_regmove_cost,\n+  &xgene1_vector_cost,\n+  &generic_branch_cost,\n+  &xgene1_approx_modes,\n+  6, /* memmov_cost  */\n+  4, /* issue_rate  */\n+  AARCH64_FUSE_NOTHING, /* fusible_ops  */\n+  \"16\",\t/* function_align.  */\n+  \"16\",\t/* jump_align.  */\n+  \"16\",\t/* loop_align.  */\n+  2,\t/* int_reassoc_width.  */\n+  4,\t/* fp_reassoc_width.  */\n+  1,\t/* vec_reassoc_width.  */\n+  2,\t/* min_div_recip_mul_sf.  */\n+  2,\t/* min_div_recip_mul_df.  */\n+  17,\t/* max_case_values.  */\n+  tune_params::AUTOPREFETCHER_OFF,\t/* autoprefetcher_model.  */\n+  (AARCH64_EXTRA_TUNE_NO_LDP_STP_QREGS),\t/* tune_flags.  */\n+  &xgene1_prefetch_tune\n+};\n+\n static const struct tune_params qdf24xx_tunings =\n {\n   &qdf24xx_extra_costs,"}, {"sha": "77bdfaad3ebbdb84c36cfe256d0ab3669a8d1a2c", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e02669dbdf1d1099710dbc515f07d0b4785ae2fd/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e02669dbdf1d1099710dbc515f07d0b4785ae2fd/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=e02669dbdf1d1099710dbc515f07d0b4785ae2fd", "patch": "@@ -15565,7 +15565,7 @@ Specify the name of the target processor for which GCC should tune the\n performance of the code.  Permissible values for this option are:\n @samp{generic}, @samp{cortex-a35}, @samp{cortex-a53}, @samp{cortex-a55},\n @samp{cortex-a57}, @samp{cortex-a72}, @samp{cortex-a73}, @samp{cortex-a75},\n-@samp{cortex-a76}, @samp{ares}, @samp{exynos-m1}, @samp{falkor},\n+@samp{cortex-a76}, @samp{ares}, @samp{exynos-m1}, @samp{emag}, @samp{falkor},\n @samp{qdf24xx}, @samp{saphira}, @samp{phecda}, @samp{xgene1}, @samp{vulcan},\n @samp{thunderx}, @samp{thunderxt88}, @samp{thunderxt88p1}, @samp{thunderxt81},\n @samp{tsv110}, @samp{thunderxt83}, @samp{thunderx2t99},"}]}