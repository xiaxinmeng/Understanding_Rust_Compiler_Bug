{"sha": "78414d74b1deeb1782202bc5e81f99475a01f96a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Nzg0MTRkNzRiMWRlZWIxNzgyMjAyYmM1ZTgxZjk5NDc1YTAxZjk2YQ==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@eyesopen.com", "date": "2002-03-31T03:34:55Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2002-03-31T03:34:55Z"}, "message": "regmove.c (combine_stack_adjustments_for_block): Avoid emitting a stack adjustment of zero bytes.\n\n        * regmove.c (combine_stack_adjustments_for_block): Avoid\n        emitting a stack adjustment of zero bytes.  Let delete_insn\n        update bb->head.\n\nCo-Authored-By: Richard Henderson <rth@redhat.com>\n\nFrom-SVN: r51628", "tree": {"sha": "42ad0818461fd5d706268d557c614908d217f328", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/42ad0818461fd5d706268d557c614908d217f328"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/78414d74b1deeb1782202bc5e81f99475a01f96a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78414d74b1deeb1782202bc5e81f99475a01f96a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78414d74b1deeb1782202bc5e81f99475a01f96a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78414d74b1deeb1782202bc5e81f99475a01f96a/comments", "author": null, "committer": null, "parents": [{"sha": "33074e5fe7854810796e1b4a180622be8656eac9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33074e5fe7854810796e1b4a180622be8656eac9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/33074e5fe7854810796e1b4a180622be8656eac9"}], "stats": {"total": 55, "additions": 28, "deletions": 27}, "files": [{"sha": "07eb3c4ed2dd4c7b1b9e0bc4ea2591b6564d80e9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78414d74b1deeb1782202bc5e81f99475a01f96a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78414d74b1deeb1782202bc5e81f99475a01f96a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=78414d74b1deeb1782202bc5e81f99475a01f96a", "patch": "@@ -1,3 +1,10 @@\n+2002-03-30  Roger Sayle <roger@eyesopen.com>\n+            Richard Henderson  <rth@redhat.com>\n+\n+        * regmove.c (combine_stack_adjustments_for_block): Avoid\n+        emitting a stack adjustment of zero bytes.  Let delete_insn\n+        update bb->head.\n+\n 2002-03-30  Richard Henderson  <rth@redhat.com>\n \n \t* config/sparc/sparc.c: Remove all references to TARGET_EPILOGUE."}, {"sha": "59b1005137ae895d4d90631231e3b7d757409fb1", "filename": "gcc/regmove.c", "status": "modified", "additions": 21, "deletions": 27, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78414d74b1deeb1782202bc5e81f99475a01f96a/gcc%2Fregmove.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78414d74b1deeb1782202bc5e81f99475a01f96a/gcc%2Fregmove.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fregmove.c?ref=78414d74b1deeb1782202bc5e81f99475a01f96a", "patch": "@@ -2331,19 +2331,17 @@ combine_stack_adjustments_for_block (bb)\n   HOST_WIDE_INT last_sp_adjust = 0;\n   rtx last_sp_set = NULL_RTX;\n   struct csa_memlist *memlist = NULL;\n-  rtx pending_delete;\n-  rtx insn, next;\n+  rtx insn, next, set;\n   struct record_stack_memrefs_data data;\n+  bool end_of_block = false;\n \n-  for (insn = bb->head; ; insn = next)\n+  for (insn = bb->head; !end_of_block ; insn = next)\n     {\n-      rtx set;\n-\n-      pending_delete = NULL_RTX;\n+      end_of_block = insn == bb->end;\n       next = NEXT_INSN (insn);\n \n       if (! INSN_P (insn))\n-\tgoto processed;\n+\tcontinue;\n \n       set = single_set_for_csa (insn);\n       if (set)\n@@ -2365,7 +2363,7 @@ combine_stack_adjustments_for_block (bb)\n \t\t{\n \t\t  last_sp_set = insn;\n \t\t  last_sp_adjust = this_adjust;\n-\t\t  goto processed;\n+\t\t  continue;\n \t\t}\n \n \t      /* If not all recorded memrefs can be adjusted, or the\n@@ -2397,9 +2395,9 @@ combine_stack_adjustments_for_block (bb)\n \t\t\t\t\t\t  this_adjust))\n \t\t    {\n \t\t      /* It worked!  */\n-\t\t      pending_delete = insn;\n+\t\t      delete_insn (insn);\n \t\t      last_sp_adjust += this_adjust;\n-\t\t      goto processed;\n+\t\t      continue;\n \t\t    }\n \t\t}\n \n@@ -2418,16 +2416,20 @@ combine_stack_adjustments_for_block (bb)\n \t\t      last_sp_adjust += this_adjust;\n \t\t      free_csa_memlist (memlist);\n \t\t      memlist = NULL;\n-\t\t      goto processed;\n+\t\t      continue;\n \t\t    }\n \t\t}\n \n-\t      /* Combination failed.  Restart processing from here.  */\n+\t      /* Combination failed.  Restart processing from here.  If\n+\t\t deallocation+allocation conspired to cancel, we can\n+\t\t delete the old deallocation insn.  */\n+\t      if (last_sp_set && last_sp_adjust == 0)\n+\t\tdelete_insn (insn);\n \t      free_csa_memlist (memlist);\n \t      memlist = NULL;\n \t      last_sp_set = insn;\n \t      last_sp_adjust = this_adjust;\n-\t      goto processed;\n+\t      continue;\n \t    }\n \n \t  /* Find a predecrement of exactly the previous adjustment and\n@@ -2453,15 +2455,12 @@ combine_stack_adjustments_for_block (bb)\n \t\t\t\t\t\t\t stack_pointer_rtx),\n \t\t\t\t  0))\n \t    {\n-\t      if (last_sp_set == bb->head)\n-\t\tbb->head = NEXT_INSN (last_sp_set);\n \t      delete_insn (last_sp_set);\n-\n \t      free_csa_memlist (memlist);\n \t      memlist = NULL;\n \t      last_sp_set = NULL_RTX;\n \t      last_sp_adjust = 0;\n-\t      goto processed;\n+\t      continue;\n \t    }\n \t}\n \n@@ -2471,7 +2470,7 @@ combine_stack_adjustments_for_block (bb)\n \t  && !for_each_rtx (&PATTERN (insn), record_stack_memrefs, &data))\n \t{\n \t   memlist = data.memlist;\n-\t   goto processed;\n+\t   continue;\n \t}\n       memlist = data.memlist;\n \n@@ -2481,20 +2480,15 @@ combine_stack_adjustments_for_block (bb)\n \t  && (GET_CODE (insn) == CALL_INSN\n \t      || reg_mentioned_p (stack_pointer_rtx, PATTERN (insn))))\n \t{\n+\t  if (last_sp_set && last_sp_adjust == 0)\n+\t    delete_insn (last_sp_set);\n \t  free_csa_memlist (memlist);\n \t  memlist = NULL;\n \t  last_sp_set = NULL_RTX;\n \t  last_sp_adjust = 0;\n \t}\n-\n-    processed:\n-      if (insn == bb->end)\n-\tbreak;\n-\n-      if (pending_delete)\n-\tdelete_insn (pending_delete);\n     }\n \n-  if (pending_delete)\n-    delete_insn (pending_delete);\n+  if (last_sp_set && last_sp_adjust == 0)\n+    delete_insn (last_sp_set);\n }"}]}