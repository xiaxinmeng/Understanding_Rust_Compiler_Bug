{"sha": "d872ada0175de73128885455c0ea198dfff236e8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDg3MmFkYTAxNzVkZTczMTI4ODg1NDU1YzBlYTE5OGRmZmYyMzZlOA==", "commit": {"author": {"name": "Geoffrey Keating", "email": "geoffk@apple.com", "date": "2007-07-12T13:43:33Z"}, "committer": {"name": "Geoffrey Keating", "email": "geoffk@gcc.gnu.org", "date": "2007-07-12T13:43:33Z"}, "message": "builtins.c (get_pointer_alignment): Honor DECL_ALIGN on a FUNCTION_DECL.\n\n\t* builtins.c (get_pointer_alignment): Honor DECL_ALIGN on a\n\tFUNCTION_DECL.\n\t* tree.c (build_decl_stat): Move code from here...\n\t(make_node_stat): ... to here.  Don't uselessly clear DECL_USER_ALIGN.\n\t(expr_align): Honor DECL_ALIGN on a FUNCTION_DECL.  Add comment\n\tabout using DECL_ALIGN of LABEL_DECL and CONST_DECL.\n\t* tree.h (DECL_USER_ALIGN): Fix misplaced comment.\n\t* varasm.c (assemble_start_function): Use DECL_ALIGN instead of\n\tFUNCTION_BOUNDARY.\n\nFrom-SVN: r126588", "tree": {"sha": "1768a9d093d8c397f3d10649233aaf7917fff2df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1768a9d093d8c397f3d10649233aaf7917fff2df"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d872ada0175de73128885455c0ea198dfff236e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d872ada0175de73128885455c0ea198dfff236e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d872ada0175de73128885455c0ea198dfff236e8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d872ada0175de73128885455c0ea198dfff236e8/comments", "author": {"login": "geoffk01", "id": 31905243, "node_id": "MDQ6VXNlcjMxOTA1MjQz", "avatar_url": "https://avatars.githubusercontent.com/u/31905243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/geoffk01", "html_url": "https://github.com/geoffk01", "followers_url": "https://api.github.com/users/geoffk01/followers", "following_url": "https://api.github.com/users/geoffk01/following{/other_user}", "gists_url": "https://api.github.com/users/geoffk01/gists{/gist_id}", "starred_url": "https://api.github.com/users/geoffk01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/geoffk01/subscriptions", "organizations_url": "https://api.github.com/users/geoffk01/orgs", "repos_url": "https://api.github.com/users/geoffk01/repos", "events_url": "https://api.github.com/users/geoffk01/events{/privacy}", "received_events_url": "https://api.github.com/users/geoffk01/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0f3943ec666c162d7e2881aacafa8159bee1fe8f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f3943ec666c162d7e2881aacafa8159bee1fe8f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f3943ec666c162d7e2881aacafa8159bee1fe8f"}], "stats": {"total": 48, "additions": 27, "deletions": 21}, "files": [{"sha": "c1264e3cd63ced274b1d92fad3aed4ee0962c3cd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d872ada0175de73128885455c0ea198dfff236e8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d872ada0175de73128885455c0ea198dfff236e8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d872ada0175de73128885455c0ea198dfff236e8", "patch": "@@ -1,3 +1,15 @@\n+2007-07-12  Geoffrey Keating  <geoffk@apple.com>\n+\n+\t* builtins.c (get_pointer_alignment): Honor DECL_ALIGN on a\n+\tFUNCTION_DECL.\n+\t* tree.c (build_decl_stat): Move code from here...\n+\t(make_node_stat): ... to here.  Don't uselessly clear DECL_USER_ALIGN.\n+\t(expr_align): Honor DECL_ALIGN on a FUNCTION_DECL.  Add comment\n+\tabout using DECL_ALIGN of LABEL_DECL and CONST_DECL.\n+\t* tree.h (DECL_USER_ALIGN): Fix misplaced comment.\n+\t* varasm.c (assemble_start_function): Use DECL_ALIGN instead of\n+\tFUNCTION_BOUNDARY.\n+\n 2007-07-12  Dorit Nuzman  <dorit@il.ibm.com>\n \n \t* target.h (builtin_vectorization_cost): Add new target builtin."}, {"sha": "44cfc0d48b2abc8727553724ca87adeb335bf501", "filename": "gcc/builtins.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d872ada0175de73128885455c0ea198dfff236e8/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d872ada0175de73128885455c0ea198dfff236e8/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=d872ada0175de73128885455c0ea198dfff236e8", "patch": "@@ -355,9 +355,7 @@ get_pointer_alignment (tree exp, unsigned int max_align)\n \t      else if (offset)\n \t\tinner = MIN (inner, BITS_PER_UNIT);\n \t    }\n-\t  if (TREE_CODE (exp) == FUNCTION_DECL)\n-\t    align = FUNCTION_BOUNDARY;\n-\t  else if (DECL_P (exp))\n+\t  if (DECL_P (exp))\n \t    align = MIN (inner, DECL_ALIGN (exp));\n #ifdef CONSTANT_ALIGNMENT\n \t  else if (CONSTANT_CLASS_P (exp))"}, {"sha": "21a87a22f5a80bd027d6028aa7ec7d5ccaf95d2b", "filename": "gcc/tree.c", "status": "modified", "additions": 10, "deletions": 12, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d872ada0175de73128885455c0ea198dfff236e8/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d872ada0175de73128885455c0ea198dfff236e8/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=d872ada0175de73128885455c0ea198dfff236e8", "patch": "@@ -588,9 +588,13 @@ make_node_stat (enum tree_code code MEM_STAT_DECL)\n \tDECL_IN_SYSTEM_HEADER (t) = in_system_header;\n       if (CODE_CONTAINS_STRUCT (code, TS_DECL_COMMON))\n \t{\n-\t  if (code != FUNCTION_DECL)\n+\t  if (code == FUNCTION_DECL)\n+\t    {\n+\t      DECL_ALIGN (t) = FUNCTION_BOUNDARY;\n+\t      DECL_MODE (t) = FUNCTION_MODE;\n+\t    }\n+\t  else\n \t    DECL_ALIGN (t) = 1;\n-\t  DECL_USER_ALIGN (t) = 0;\t  \n \t  /* We have not yet computed the alias set for this declaration.  */\n \t  DECL_POINTER_ALIAS_SET (t) = -1;\n \t}\n@@ -1914,14 +1918,13 @@ expr_align (tree t)\n       align1 = expr_align (TREE_OPERAND (t, 2));\n       return MIN (align0, align1);\n \n+      /* FIXME: LABEL_DECL and CONST_DECL never have DECL_ALIGN set\n+\t meaningfully, it's always 1.  */\n     case LABEL_DECL:     case CONST_DECL:\n     case VAR_DECL:       case PARM_DECL:   case RESULT_DECL:\n-      if (DECL_ALIGN (t) != 0)\n-\treturn DECL_ALIGN (t);\n-      break;\n-\n     case FUNCTION_DECL:\n-      return FUNCTION_BOUNDARY;\n+      gcc_assert (DECL_ALIGN (t) != 0);\n+      return DECL_ALIGN (t);\n \n     default:\n       break;\n@@ -3311,11 +3314,6 @@ build_decl_stat (enum tree_code code, tree name, tree type MEM_STAT_DECL)\n \n   if (code == VAR_DECL || code == PARM_DECL || code == RESULT_DECL)\n     layout_decl (t, 0);\n-  else if (code == FUNCTION_DECL)\n-    {\n-      DECL_MODE (t) = FUNCTION_MODE;\n-      DECL_ALIGN (t) = FUNCTION_BOUNDARY;\n-    }\n \n   return t;\n }"}, {"sha": "64e028eb3f0d57287b76b32527e195270ae904ea", "filename": "gcc/tree.h", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d872ada0175de73128885455c0ea198dfff236e8/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d872ada0175de73128885455c0ea198dfff236e8/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=d872ada0175de73128885455c0ea198dfff236e8", "patch": "@@ -2589,10 +2589,8 @@ struct tree_memory_partition_tag GTY(())\n #define DECL_ALIGN(NODE) (DECL_COMMON_CHECK (NODE)->decl_common.align)\n /* The alignment of NODE, in bytes.  */\n #define DECL_ALIGN_UNIT(NODE) (DECL_ALIGN (NODE) / BITS_PER_UNIT)\n-/* For FIELD_DECLs, off_align holds the number of low-order bits of\n-   DECL_FIELD_OFFSET which are known to be always zero.\n-   DECL_OFFSET_ALIGN thus returns the alignment that DECL_FIELD_OFFSET\n-   has.  */\n+/* Set if the alignment of this DECL has been set by the user, for\n+   example with an 'aligned' attribute.  */\n #define DECL_USER_ALIGN(NODE) (DECL_COMMON_CHECK (NODE)->decl_common.user_align)\n /* Holds the machine mode corresponding to the declaration of a variable or\n    field.  Always equal to TYPE_MODE (TREE_TYPE (decl)) except for a"}, {"sha": "2b29093c533a8a925ebfe0fdc431d8fc2f459e04", "filename": "gcc/varasm.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d872ada0175de73128885455c0ea198dfff236e8/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d872ada0175de73128885455c0ea198dfff236e8/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=d872ada0175de73128885455c0ea198dfff236e8", "patch": "@@ -1638,7 +1638,7 @@ assemble_start_function (tree decl, const char *fnname)\n   if (flag_reorder_blocks_and_partition)\n     {\n       switch_to_section (unlikely_text_section ());\n-      assemble_align (FUNCTION_BOUNDARY);\n+      assemble_align (DECL_ALIGN (decl));\n       ASM_OUTPUT_LABEL (asm_out_file, cfun->cold_section_label);\n \n       /* When the function starts with a cold section, we need to explicitly\n@@ -1648,7 +1648,7 @@ assemble_start_function (tree decl, const char *fnname)\n \t  && BB_PARTITION (ENTRY_BLOCK_PTR->next_bb) == BB_COLD_PARTITION)\n \t{\n \t  switch_to_section (text_section);\n-\t  assemble_align (FUNCTION_BOUNDARY);\n+\t  assemble_align (DECL_ALIGN (decl));\n \t  ASM_OUTPUT_LABEL (asm_out_file, cfun->hot_section_label);\n \t  hot_label_written = true;\n \t  first_function_block_is_cold = true;"}]}