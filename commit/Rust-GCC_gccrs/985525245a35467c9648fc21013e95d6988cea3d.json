{"sha": "985525245a35467c9648fc21013e95d6988cea3d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTg1NTI1MjQ1YTM1NDY3Yzk2NDhmYzIxMDEzZTk1ZDY5ODhjZWEzZA==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-06-30T19:02:44Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-06-30T19:02:44Z"}, "message": "(main): Don't look for `gld' or `TARGET-gld'.\n\nFrom-SVN: r4805", "tree": {"sha": "0839ca9cb2e1fe0693c5762ca1140fa3dfe918bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0839ca9cb2e1fe0693c5762ca1140fa3dfe918bb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/985525245a35467c9648fc21013e95d6988cea3d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/985525245a35467c9648fc21013e95d6988cea3d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/985525245a35467c9648fc21013e95d6988cea3d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/985525245a35467c9648fc21013e95d6988cea3d/comments", "author": null, "committer": null, "parents": [{"sha": "da3c33362d11f10b2fbb36b89337936cb66de439", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da3c33362d11f10b2fbb36b89337936cb66de439", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da3c33362d11f10b2fbb36b89337936cb66de439"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "d88b0aca60915ef7cffaaf7caa6e931fc34e8bab", "filename": "gcc/collect2.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/985525245a35467c9648fc21013e95d6988cea3d/gcc%2Fcollect2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/985525245a35467c9648fc21013e95d6988cea3d/gcc%2Fcollect2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcollect2.c?ref=985525245a35467c9648fc21013e95d6988cea3d", "patch": "@@ -690,8 +690,10 @@ main (argc, argv)\n   char *full_ld_suffix\t= ld_suffix;\n   char *real_ld_suffix\t= \"real-ld\";\n   char *full_real_ld_suffix = real_ld_suffix;\n+#if 0\n   char *gld_suffix\t= \"gld\";\n   char *full_gld_suffix\t= gld_suffix;\n+#endif\n   char *nm_suffix\t= \"nm\";\n   char *full_nm_suffix\t= nm_suffix;\n   char *gnm_suffix\t= \"gnm\";\n@@ -800,11 +802,13 @@ main (argc, argv)\n   strcat (full_real_ld_suffix, \"-\");\n   strcat (full_real_ld_suffix, real_ld_suffix);\n \n+#if 0\n   full_gld_suffix\n     = xcalloc (strlen (gld_suffix) + strlen (target_machine) + 2, 1);\n   strcpy (full_gld_suffix, target_machine);\n   strcat (full_gld_suffix, \"-\");\n   strcat (full_gld_suffix, gld_suffix);\n+#endif\n \n   full_nm_suffix\n     = xcalloc (strlen (nm_suffix) + strlen (target_machine) + 2, 1);\n@@ -833,12 +837,14 @@ main (argc, argv)\n \n   /* Try to discover a valid linker/nm/strip to use.  */\n \n+#if 0\n   /* Search the (target-specific) compiler dirs for `gld'.  */\n   ld_file_name = find_a_file (&cpath, gld_suffix);\n   /* Search the ordinary system bin directories\n      for `gld' (if native linking) or `TARGET-gld' (if cross).  */\n   if (ld_file_name == 0)\n     ld_file_name = find_a_file (&path, full_gld_suffix);\n+#endif\n   /* Likewise for `real-ld'.  */\n   if (ld_file_name == 0)\n     ld_file_name = find_a_file (&cpath, real_ld_suffix);"}]}