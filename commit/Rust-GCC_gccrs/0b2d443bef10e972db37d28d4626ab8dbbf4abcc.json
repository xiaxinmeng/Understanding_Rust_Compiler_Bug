{"sha": "0b2d443bef10e972db37d28d4626ab8dbbf4abcc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGIyZDQ0M2JlZjEwZTk3MmRiMzdkMjhkNDYyNmFiOGRiYmY0YWJjYw==", "commit": {"author": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2012-08-15T22:11:03Z"}, "committer": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2012-08-15T22:11:03Z"}, "message": "re PR fortran/54243 ([OOP] ICE (segfault) in gfc_type_compatible for invalid BT_CLASS)\n\n2012-08-15  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/54243\n\tPR fortran/54244\n\t* resolve.c (check_typebound_baseobject): Check for class_ok attribute.\n\t(resolve_procedure_interface,resolve_fl_derived0): Copy class_ok\n\tattribute.\n\n2012-08-15  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/54243\n\tPR fortran/54244\n\t* gfortran.dg/typebound_call_24.f03: New.\n\nFrom-SVN: r190420", "tree": {"sha": "6ab45128d591070c8fae12c6a1330ad520318450", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6ab45128d591070c8fae12c6a1330ad520318450"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0b2d443bef10e972db37d28d4626ab8dbbf4abcc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b2d443bef10e972db37d28d4626ab8dbbf4abcc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b2d443bef10e972db37d28d4626ab8dbbf4abcc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b2d443bef10e972db37d28d4626ab8dbbf4abcc/comments", "author": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4b78ca9d8182bee10545a1f507b4fc39689d98b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b78ca9d8182bee10545a1f507b4fc39689d98b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b78ca9d8182bee10545a1f507b4fc39689d98b6"}], "stats": {"total": 43, "additions": 43, "deletions": 0}, "files": [{"sha": "17b14a98ec6e5de71fe1a4e38c2fc778b3f043bd", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b2d443bef10e972db37d28d4626ab8dbbf4abcc/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b2d443bef10e972db37d28d4626ab8dbbf4abcc/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=0b2d443bef10e972db37d28d4626ab8dbbf4abcc", "patch": "@@ -1,3 +1,11 @@\n+2012-08-15  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/54243\n+\tPR fortran/54244\n+\t* resolve.c (check_typebound_baseobject): Check for class_ok attribute.\n+\t(resolve_procedure_interface,resolve_fl_derived0): Copy class_ok\n+\tattribute.\n+\n 2012-08-14  Mikael Morin  <mikael@gcc.gnu.org>\n \n \tPR fortran/47586"}, {"sha": "ac5a36260669fd3291e7d435e74ccca6415fbb89", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b2d443bef10e972db37d28d4626ab8dbbf4abcc/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b2d443bef10e972db37d28d4626ab8dbbf4abcc/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=0b2d443bef10e972db37d28d4626ab8dbbf4abcc", "patch": "@@ -237,6 +237,7 @@ resolve_procedure_interface (gfc_symbol *sym)\n       sym->attr.always_explicit = ifc->attr.always_explicit;\n       sym->attr.ext_attr |= ifc->attr.ext_attr;\n       sym->attr.is_bind_c = ifc->attr.is_bind_c;\n+      sym->attr.class_ok = ifc->attr.class_ok;\n       /* Copy array spec.  */\n       sym->as = gfc_copy_array_spec (ifc->as);\n       if (sym->as)\n@@ -5795,6 +5796,9 @@ check_typebound_baseobject (gfc_expr* e)\n \n   gcc_assert (base->ts.type == BT_DERIVED || base->ts.type == BT_CLASS);\n \n+  if (base->ts.type == BT_CLASS && !gfc_expr_attr (base).class_ok)\n+    return FAILURE;\n+\n   /* F08:C611.  */\n   if (base->ts.type == BT_DERIVED && base->ts.u.derived->attr.abstract)\n     {\n@@ -11982,6 +11986,7 @@ resolve_fl_derived0 (gfc_symbol *sym)\n \t      c->attr.recursive = ifc->attr.recursive;\n \t      c->attr.always_explicit = ifc->attr.always_explicit;\n \t      c->attr.ext_attr |= ifc->attr.ext_attr;\n+\t      c->attr.class_ok = ifc->attr.class_ok;\n \t      /* Replace symbols in array spec.  */\n \t      if (c->as)\n \t\t{"}, {"sha": "9c454bf82904655e5d12cd87d8c23c795f82e17d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b2d443bef10e972db37d28d4626ab8dbbf4abcc/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b2d443bef10e972db37d28d4626ab8dbbf4abcc/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0b2d443bef10e972db37d28d4626ab8dbbf4abcc", "patch": "@@ -1,3 +1,9 @@\n+2012-08-15  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/54243\n+\tPR fortran/54244\n+\t* gfortran.dg/typebound_call_24.f03: New.\n+\n 2012-08-15  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n \n \tPR tree-optimization/54245"}, {"sha": "48d63dc60230b850a77813673aaf8e381d590131", "filename": "gcc/testsuite/gfortran.dg/typebound_call_24.f03", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b2d443bef10e972db37d28d4626ab8dbbf4abcc/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_call_24.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b2d443bef10e972db37d28d4626ab8dbbf4abcc/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_call_24.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_call_24.f03?ref=0b2d443bef10e972db37d28d4626ab8dbbf4abcc", "patch": "@@ -0,0 +1,24 @@\n+! { dg-do compile }\n+!\n+! PR 54243: [OOP] ICE (segfault) in gfc_type_compatible for invalid BT_CLASS\n+!\n+! Contributed by Sylwester Arabas <slayoo@staszic.waw.pl>\n+\n+module aqq_m\n+  type :: aqq_t\n+  contains\n+    procedure :: aqq_init\n+  end type \n+ contains\n+  subroutine aqq_init(this)\n+    class(aqq_t) :: this\n+  end subroutine\n+end module\n+\n+program bug2\n+  use aqq_m\n+  class(aqq_t) :: aqq  ! { dg-error \"must be dummy, allocatable or pointer\" }\n+  call aqq%aqq_init\n+end program\n+\n+! { dg-final { cleanup-modules \"aqq_m\" } }"}]}