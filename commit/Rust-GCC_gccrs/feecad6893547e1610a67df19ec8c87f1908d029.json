{"sha": "feecad6893547e1610a67df19ec8c87f1908d029", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmVlY2FkNjg5MzU0N2UxNjEwYTY3ZGYxOWVjOGM4N2YxOTA4ZDAyOQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-02T12:32:54Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-02T12:32:54Z"}, "message": "[multiple changes]\n\n2011-08-02  Eric Botcazou  <ebotcazou@adacore.com>\n\n\t* inline.adb (Get_Code_Unit_Entity): New local function.  Returns the\n\tentity node for the unit containing the parameter.\n\t(Add_Inlined_Body): Use it to find the unit containing the subprogram.\n\t(Add_Inlined_Subprogram): Likewise.\n\t* gcc-interface/Make-lang.in: Update dependencies.\n\n2011-08-02  Thomas Quinot  <quinot@adacore.com>\n\n\t* s-stusta.adb (Print): Make sure Pos is always initialized to a\n\tsuitable value.\n\n2011-08-02  Ed Falis  <falis@adacore.com>\n\n\t* init.c: Fix conditional compilation so that the fp initialization is\n\tpeformed for the MILS VxWorks Guest OS.\n\nFrom-SVN: r177136", "tree": {"sha": "c75ff609f32edc447360fb00672ec49aa6eaa835", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c75ff609f32edc447360fb00672ec49aa6eaa835"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/feecad6893547e1610a67df19ec8c87f1908d029", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/feecad6893547e1610a67df19ec8c87f1908d029", "html_url": "https://github.com/Rust-GCC/gccrs/commit/feecad6893547e1610a67df19ec8c87f1908d029", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/feecad6893547e1610a67df19ec8c87f1908d029/comments", "author": null, "committer": null, "parents": [{"sha": "12f0c50ca93bed7c589750e20df7977787e0ea07", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12f0c50ca93bed7c589750e20df7977787e0ea07", "html_url": "https://github.com/Rust-GCC/gccrs/commit/12f0c50ca93bed7c589750e20df7977787e0ea07"}], "stats": {"total": 4376, "additions": 2484, "deletions": 1892}, "files": [{"sha": "596668dbd03c8b0270387ee05ec693935ae22ea0", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feecad6893547e1610a67df19ec8c87f1908d029/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feecad6893547e1610a67df19ec8c87f1908d029/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=feecad6893547e1610a67df19ec8c87f1908d029", "patch": "@@ -1,3 +1,21 @@\n+2011-08-02  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* inline.adb (Get_Code_Unit_Entity): New local function.  Returns the\n+\tentity node for the unit containing the parameter.\n+\t(Add_Inlined_Body): Use it to find the unit containing the subprogram.\n+\t(Add_Inlined_Subprogram): Likewise.\n+\t* gcc-interface/Make-lang.in: Update dependencies.\n+\n+2011-08-02  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* s-stusta.adb (Print): Make sure Pos is always initialized to a\n+\tsuitable value.\n+\n+2011-08-02  Ed Falis  <falis@adacore.com>\n+\n+\t* init.c: Fix conditional compilation so that the fp initialization is\n+\tpeformed for the MILS VxWorks Guest OS.\n+\n 2011-08-02  Geert Bosch  <bosch@adacore.com>\n \n \t* a-calfor.adb (Image): Simplify, removing unnecessary uses of 'Image."}, {"sha": "96cf1c628ad661985234c7263d6f93d25af74cc6", "filename": "gcc/ada/gcc-interface/Make-lang.in", "status": "modified", "additions": 2418, "deletions": 1857, "changes": 4275, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feecad6893547e1610a67df19ec8c87f1908d029/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feecad6893547e1610a67df19ec8c87f1908d029/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMake-lang.in?ref=feecad6893547e1610a67df19ec8c87f1908d029"}, {"sha": "df0bb932ca7a588a25b5f83851d7310dca0e276d", "filename": "gcc/ada/init.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feecad6893547e1610a67df19ec8c87f1908d029/gcc%2Fada%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feecad6893547e1610a67df19ec8c87f1908d029/gcc%2Fada%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finit.c?ref=feecad6893547e1610a67df19ec8c87f1908d029", "patch": "@@ -2026,7 +2026,7 @@ __gnat_init_float (void)\n      to get correct Ada semantics.  Note that for AE653 vThreads, the HW\n      overflow settings are an OS configuration issue.  The instructions\n      below have no effect.  */\n-#if defined (_ARCH_PPC) && !defined (_SOFT_FLOAT) && !defined (VTHREADS)\n+#if defined (_ARCH_PPC) && !defined (_SOFT_FLOAT) && (!defined (VTHREADS) || defined (__VXWORKSMILS__))\n #if defined (__SPE__)\n   {\n      const unsigned long spefscr_mask = 0xfffffff3;"}, {"sha": "339c01fbaf144f56f9a850b3ad0aaa63cf944b22", "filename": "gcc/ada/inline.adb", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feecad6893547e1610a67df19ec8c87f1908d029/gcc%2Fada%2Finline.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feecad6893547e1610a67df19ec8c87f1908d029/gcc%2Fada%2Finline.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finline.adb?ref=feecad6893547e1610a67df19ec8c87f1908d029", "patch": "@@ -137,6 +137,10 @@ package body Inline is\n    -- Local Subprograms --\n    -----------------------\n \n+   function Get_Code_Unit_Entity (E : Entity_Id) return Entity_Id;\n+   pragma Inline (Get_Code_Unit_Entity);\n+   --  Return the entity node for the unit containing E\n+\n    function Scope_In_Main_Unit (Scop : Entity_Id) return Boolean;\n    --  Return True if Scop is in the main unit or its spec\n \n@@ -317,7 +321,7 @@ package body Inline is\n       if not Is_Abstract_Subprogram (E) and then not Is_Nested (E)\n         and then Convention (E) /= Convention_Protected\n       then\n-         Pack := Scope (E);\n+         Pack := Get_Code_Unit_Entity (E);\n \n          if Must_Inline\n            and then Ekind (Pack) = E_Package\n@@ -352,7 +356,7 @@ package body Inline is\n \n    procedure Add_Inlined_Subprogram (Index : Subp_Index) is\n       E    : constant Entity_Id := Inlined.Table (Index).Name;\n-      Pack : constant Entity_Id := Cunit_Entity (Get_Code_Unit (E));\n+      Pack : constant Entity_Id := Get_Code_Unit_Entity (E);\n       Succ : Succ_Index;\n       Subp : Subp_Index;\n \n@@ -1158,6 +1162,15 @@ package body Inline is\n       end loop;\n    end Remove_Dead_Instance;\n \n+   --------------------------\n+   -- Get_Code_Unit_Entity --\n+   --------------------------\n+\n+   function Get_Code_Unit_Entity (E : Entity_Id) return Entity_Id is\n+   begin\n+      return Cunit_Entity (Get_Code_Unit (E));\n+   end Get_Code_Unit_Entity;\n+\n    ------------------------\n    -- Scope_In_Main_Unit --\n    ------------------------"}, {"sha": "e690c74cdaaa4a05e3e80d37d142927004b6bbd2", "filename": "gcc/ada/s-stusta.adb", "status": "modified", "additions": 32, "deletions": 32, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feecad6893547e1610a67df19ec8c87f1908d029/gcc%2Fada%2Fs-stusta.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feecad6893547e1610a67df19ec8c87f1908d029/gcc%2Fada%2Fs-stusta.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-stusta.adb?ref=feecad6893547e1610a67df19ec8c87f1908d029", "patch": "@@ -62,9 +62,9 @@ package body System.Stack_Usage.Tasking is\n       Res : out Stack_Usage_Result);\n    --  Convert an object of type System.Stack_Usage in a Stack_Usage_Result\n \n-   --------------\n-   --  Convert --\n-   --------------\n+   -------------\n+   -- Convert --\n+   -------------\n \n    procedure Convert\n      (TS  : System.Stack_Usage.Task_Result;\n@@ -73,19 +73,19 @@ package body System.Stack_Usage.Tasking is\n       Res := TS;\n    end Convert;\n \n-   ----------------------\n-   --  Report_For_Task --\n-   ----------------------\n+   ---------------------\n+   -- Report_For_Task --\n+   ---------------------\n \n    procedure Report_For_Task (Id : System.Tasking.Task_Id) is\n    begin\n       System.Stack_Usage.Compute_Result (Id.Common.Analyzer);\n       System.Stack_Usage.Report_Result (Id.Common.Analyzer);\n    end Report_For_Task;\n \n-   ------------------------\n-   --  Compute_All_Tasks --\n-   ------------------------\n+   -----------------------\n+   -- Compute_All_Tasks --\n+   -----------------------\n \n    procedure Compute_All_Tasks is\n       Id : System.Tasking.Task_Id;\n@@ -111,9 +111,9 @@ package body System.Stack_Usage.Tasking is\n       end if;\n    end Compute_All_Tasks;\n \n-   ---------------------------\n-   --  Compute_Current_Task --\n-   ---------------------------\n+   --------------------------\n+   -- Compute_Current_Task --\n+   --------------------------\n \n    procedure Compute_Current_Task is\n    begin\n@@ -128,9 +128,9 @@ package body System.Stack_Usage.Tasking is\n       end if;\n    end Compute_Current_Task;\n \n-   ------------------\n-   --  Report_Impl --\n-   ------------------\n+   -----------------\n+   -- Report_Impl --\n+   -----------------\n \n    procedure Report_Impl (All_Tasks : Boolean; Do_Print : Boolean) is\n    begin\n@@ -158,18 +158,18 @@ package body System.Stack_Usage.Tasking is\n \n    end Report_Impl;\n \n-   ----------------------\n-   --  Report_All_Task --\n-   ----------------------\n+   ---------------------\n+   -- Report_All_Task --\n+   ---------------------\n \n    procedure Report_All_Tasks is\n    begin\n       Report_Impl (True, True);\n    end Report_All_Tasks;\n \n-   --------------------------\n-   --  Report_Current_Task --\n-   --------------------------\n+   -------------------------\n+   -- Report_Current_Task --\n+   -------------------------\n \n    procedure Report_Current_Task is\n       Res : Stack_Usage_Result;\n@@ -178,9 +178,9 @@ package body System.Stack_Usage.Tasking is\n       Print (Res);\n    end Report_Current_Task;\n \n-   --------------------------\n-   --  Get_All_Tasks_Usage --\n-   --------------------------\n+   -------------------------\n+   -- Get_All_Tasks_Usage --\n+   -------------------------\n \n    function Get_All_Tasks_Usage return Stack_Usage_Result_Array is\n       Res : Stack_Usage_Result_Array\n@@ -195,9 +195,9 @@ package body System.Stack_Usage.Tasking is\n       return Res;\n    end Get_All_Tasks_Usage;\n \n-   -----------------------------\n-   --  Get_Current_Task_Usage --\n-   -----------------------------\n+   ----------------------------\n+   -- Get_Current_Task_Usage --\n+   ----------------------------\n \n    function Get_Current_Task_Usage return Stack_Usage_Result is\n       Res : Stack_Usage_Result;\n@@ -228,12 +228,12 @@ package body System.Stack_Usage.Tasking is\n       return Res;\n    end Get_Current_Task_Usage;\n \n-   ------------\n-   --  Print --\n-   ------------\n+   -----------\n+   -- Print --\n+   -----------\n \n    procedure Print (Obj : Stack_Usage_Result) is\n-      Pos : Positive;\n+      Pos : Positive := Obj.Task_Name'Last;\n    begin\n \n       --  Simply trim the string containing the task name\n@@ -247,7 +247,7 @@ package body System.Stack_Usage.Tasking is\n \n       declare\n          T_Name : constant String := Obj.Task_Name\n-           (Obj.Task_Name'First .. Pos);\n+                                       (Obj.Task_Name'First .. Pos);\n       begin\n          Put_Line\n            (\"| \" & T_Name & \" | \" & Natural'Image (Obj.Max_Size) &"}]}