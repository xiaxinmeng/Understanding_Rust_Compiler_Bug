{"sha": "cbd3488bb9798167f4eeb8dd7ed693dcbf66d987", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2JkMzQ4OGJiOTc5ODE2N2Y0ZWViOGRkN2VkNjkzZGNiZjY2ZDk4Nw==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2000-06-11T20:21:02Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2000-06-11T20:21:02Z"}, "message": "[multiple changes]\n\n2000-06-09  Rodney Brown  <RodneyBrown@mynd.com>\n\n        * mcore-protos.h: discards const warning removal.\n        * mcore.c: discards const warning removal.\n\n2000-06-09  Kazu Hirata  <kazu@hxi.com>\n\n        * config/h8300/lib1funcs.asm: Declare the machine architecture at\n        the beginning of the file.\n\n2000-06-09  J. David Anglin  <dave@hiauly1.hia.nrc.ca>\n\n        * real.h:  Add prototype for ldexp.\n\nFrom-SVN: r34496", "tree": {"sha": "a64c8855d038918ad26334051725e80fb581ef60", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a64c8855d038918ad26334051725e80fb581ef60"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cbd3488bb9798167f4eeb8dd7ed693dcbf66d987", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cbd3488bb9798167f4eeb8dd7ed693dcbf66d987", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cbd3488bb9798167f4eeb8dd7ed693dcbf66d987", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cbd3488bb9798167f4eeb8dd7ed693dcbf66d987/comments", "author": null, "committer": null, "parents": [{"sha": "83c137d7a05ff97ec1c0b03097d4d9c43d5527b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83c137d7a05ff97ec1c0b03097d4d9c43d5527b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/83c137d7a05ff97ec1c0b03097d4d9c43d5527b5"}], "stats": {"total": 52, "additions": 29, "deletions": 23}, "files": [{"sha": "700cbb4683b93f66b38155b222e8dcf8760922dd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cbd3488bb9798167f4eeb8dd7ed693dcbf66d987/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cbd3488bb9798167f4eeb8dd7ed693dcbf66d987/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cbd3488bb9798167f4eeb8dd7ed693dcbf66d987", "patch": "@@ -31,6 +31,20 @@\n \n \t* Makefile.in (c-parse.o): Also depend on output.h.\n \n+2000-06-09  Rodney Brown  <RodneyBrown@mynd.com>\n+\n+        * mcore-protos.h: discards const warning removal.\n+        * mcore.c: discards const warning removal.\n+\n+2000-06-09  Kazu Hirata  <kazu@hxi.com>\n+\n+\t* config/h8300/lib1funcs.asm: Declare the machine architecture at\n+\tthe beginning of the file.\n+\n+2000-06-09  J. David Anglin  <dave@hiauly1.hia.nrc.ca>\n+\n+\t* real.h:  Add prototype for ldexp.\n+\n 2000-06-09  Zack Weinberg  <zack@wolery.cumb.org>\n \n \t* ggc-none.c, ggc-simple.c, ggc-page.c (ggc_alloc_obj): Rename"}, {"sha": "312e21d9d7c8453686009dbdb6ce87df7edcd9f1", "filename": "gcc/config/h8300/lib1funcs.asm", "status": "modified", "additions": 8, "deletions": 16, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cbd3488bb9798167f4eeb8dd7ed693dcbf66d987/gcc%2Fconfig%2Fh8300%2Flib1funcs.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cbd3488bb9798167f4eeb8dd7ed693dcbf66d987/gcc%2Fconfig%2Fh8300%2Flib1funcs.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Flib1funcs.asm?ref=cbd3488bb9798167f4eeb8dd7ed693dcbf66d987", "patch": "@@ -95,6 +95,14 @@ Boston, MA 02111-1307, USA.  */\n #define A3E\te3\n #endif\n \n+#ifdef __H8300H__\n+\t.h8300h\n+#endif\n+\n+#ifdef __H8300S__\n+\t.h8300s\n+#endif\n+\n #ifdef L_cmpsi2\n #ifdef __H8300__\n \t.section .text\n@@ -304,14 +312,6 @@ setbit:\tinc\tA0L\t\t; do insert bit\n ;; We bunch all of this into one object file since there are several\n ;; \"supporting routines\".\n \n-#ifdef __H8300H__\n-\t.h8300h\n-#endif\n-\n-#ifdef __H8300S__\n-\t.h8300s\n-#endif\n-\n \t.section .text\n \t.align 2\n \n@@ -736,14 +736,6 @@ _done:\n \n #else /* __H8300H__ */\n \n-#ifdef __H8300H__\n-\t.h8300h\n-#endif\n-\n-#ifdef __H8300S__\n-\t.h8300s\n-#endif\n-\n \t.global\t___mulsi3\n ___mulsi3:\n \tsub.l\tA2P,A2P"}, {"sha": "8dc1b09742ebba3f1527c4e575eca9abc4dffd46", "filename": "gcc/config/mcore/mcore-protos.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cbd3488bb9798167f4eeb8dd7ed693dcbf66d987/gcc%2Fconfig%2Fmcore%2Fmcore-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cbd3488bb9798167f4eeb8dd7ed693dcbf66d987/gcc%2Fconfig%2Fmcore%2Fmcore-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmcore%2Fmcore-protos.h?ref=cbd3488bb9798167f4eeb8dd7ed693dcbf66d987", "patch": "@@ -30,8 +30,8 @@ extern int    mcore_byte_offset            \tPARAMS ((unsigned int));\n extern int    mcore_halfword_offset        \tPARAMS ((unsigned int));\n extern int    mcore_const_trick_uses_not   \tPARAMS ((long));\n extern void   mcore_override_options       \tPARAMS ((void));\n-extern int    mcore_dllexport_name_p       \tPARAMS ((char *));\n-extern int    mcore_dllimport_name_p       \tPARAMS ((char *));\n+extern int    mcore_dllexport_name_p       \tPARAMS ((const char *));\n+extern int    mcore_dllimport_name_p       \tPARAMS ((const char *));\n extern int    mcore_naked_function_p       \tPARAMS ((void));\n \n #ifdef TREE_CODE"}, {"sha": "4622adeeb9cecf5b9e858310244b1a6727b5e868", "filename": "gcc/config/mcore/mcore.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cbd3488bb9798167f4eeb8dd7ed693dcbf66d987/gcc%2Fconfig%2Fmcore%2Fmcore.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cbd3488bb9798167f4eeb8dd7ed693dcbf66d987/gcc%2Fconfig%2Fmcore%2Fmcore.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmcore%2Fmcore.c?ref=cbd3488bb9798167f4eeb8dd7ed693dcbf66d987", "patch": "@@ -3254,15 +3254,15 @@ mcore_function_arg_partial_nregs (cum, mode, type, named)\n /* Return non-zero if SYMBOL is marked as being dllexport'd.  */\n int\n mcore_dllexport_name_p (symbol)\n-     char * symbol;\n+     const char * symbol;\n {\n   return symbol[0] == '@' && symbol[1] == 'e' && symbol[2] == '.';\n }\n \n /* Return non-zero if SYMBOL is marked as being dllimport'd.  */\n int\n mcore_dllimport_name_p (symbol)\n-     char * symbol;\n+     const char * symbol;\n {\n   return symbol[0] == '@' && symbol[1] == 'i' && symbol[2] == '.';\n }\n@@ -3272,7 +3272,7 @@ static void\n mcore_mark_dllexport (decl)\n      tree decl;\n {\n-  char * oldname;\n+  const char * oldname;\n   char * newname;\n   rtx    rtlname;\n   tree   idp;\n@@ -3309,7 +3309,7 @@ static void\n mcore_mark_dllimport (decl)\n      tree decl;\n {\n-  char * oldname;\n+  const char * oldname;\n   char * newname;\n   tree   idp;\n   rtx    rtlname;"}, {"sha": "ccd0541a1fa4fcb3fac8cd22c1659b7f94a99ca0", "filename": "gcc/real.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cbd3488bb9798167f4eeb8dd7ed693dcbf66d987/gcc%2Freal.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cbd3488bb9798167f4eeb8dd7ed693dcbf66d987/gcc%2Freal.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freal.h?ref=cbd3488bb9798167f4eeb8dd7ed693dcbf66d987", "patch": "@@ -359,7 +359,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n /* Scale X by Y powers of 2.  */\n #ifndef REAL_VALUE_LDEXP\n #define REAL_VALUE_LDEXP(x, y) ldexp (x, y)\n-extern double ldexp ();\n+extern double ldexp PARAMS ((double, int));\n #endif\n \n /* Convert the string X to a floating-point value.  */"}]}