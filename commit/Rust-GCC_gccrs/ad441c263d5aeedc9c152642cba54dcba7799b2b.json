{"sha": "ad441c263d5aeedc9c152642cba54dcba7799b2b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWQ0NDFjMjYzZDVhZWVkYzljMTUyNjQyY2JhNTRkY2JhNzc5OWIyYg==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2019-06-04T23:10:56Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2019-06-04T23:10:56Z"}, "message": "decl.c (grokdeclarator): Use declarator->id_loc in two additional places.\n\n/cp\n2019-06-04  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* decl.c (grokdeclarator): Use declarator->id_loc in two\n\tadditional places.\n\n/testsuite\n2019-06-04  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* g++.dg/concepts/pr60573.C: Test locations too.\n\t* g++.dg/cpp0x/deleted13.C: Likewise.\n\t* g++.dg/parse/error29.C: Likewise.\n\t* g++.dg/parse/qualified4.C: Likewise.\n\t* g++.dg/template/crash96.C Likewise.\n\t* g++.old-deja/g++.brendan/crash22.C Likewise.\n\t* g++.old-deja/g++.brendan/crash23.C Likewise.\n\t* g++.old-deja/g++.law/visibility10.C Likewise.\n\t* g++.old-deja/g++.other/decl5.C: Likewise.\n\nFrom-SVN: r271928", "tree": {"sha": "bb138637ad2e641016f0388fc490098fa7b7f1ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bb138637ad2e641016f0388fc490098fa7b7f1ec"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ad441c263d5aeedc9c152642cba54dcba7799b2b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad441c263d5aeedc9c152642cba54dcba7799b2b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad441c263d5aeedc9c152642cba54dcba7799b2b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad441c263d5aeedc9c152642cba54dcba7799b2b/comments", "author": null, "committer": null, "parents": [{"sha": "e756e900e911fdbc57cd76d6c12d20a9b1892e55", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e756e900e911fdbc57cd76d6c12d20a9b1892e55", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e756e900e911fdbc57cd76d6c12d20a9b1892e55"}], "stats": {"total": 70, "additions": 43, "deletions": 27}, "files": [{"sha": "ddd5581a1111146c42c4ecac3e3acd71234fbb14", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad441c263d5aeedc9c152642cba54dcba7799b2b/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad441c263d5aeedc9c152642cba54dcba7799b2b/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=ad441c263d5aeedc9c152642cba54dcba7799b2b", "patch": "@@ -1,3 +1,8 @@\n+2019-06-04  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* decl.c (grokdeclarator): Use declarator->id_loc in two\n+\tadditional places.\n+\n 2019-06-04  Nathan Sidwell  <nathan@acm.org>\n \n \t* name-lookup.c (lookup_type_scope_1): Reimplement, handle local"}, {"sha": "23b2a4c2831c43cda7a980d4705aa7a21791ed7e", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 11, "deletions": 12, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad441c263d5aeedc9c152642cba54dcba7799b2b/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad441c263d5aeedc9c152642cba54dcba7799b2b/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=ad441c263d5aeedc9c152642cba54dcba7799b2b", "patch": "@@ -11873,6 +11873,8 @@ grokdeclarator (const cp_declarator *declarator,\n       unqualified_id = dname;\n     }\n \n+  location_t loc = declarator ? declarator->id_loc : input_location;\n+\n   /* If TYPE is a FUNCTION_TYPE, but the function name was explicitly\n      qualified with a class-name, turn it into a METHOD_TYPE, unless\n      we know that the function is static.  We take advantage of this\n@@ -11898,8 +11900,7 @@ grokdeclarator (const cp_declarator *declarator,\n \t      friendp = 0;\n \t    }\n \t  else\n-\t    permerror (declarator->id_loc, \n-\t\t       \"extra qualification %<%T::%> on member %qs\",\n+\t    permerror (loc, \"extra qualification %<%T::%> on member %qs\",\n \t\t       ctype, name);\n \t}\n       else if (/* If the qualifying type is already complete, then we\n@@ -11928,19 +11929,19 @@ grokdeclarator (const cp_declarator *declarator,\n \t  if (current_class_type\n \t      && (!friendp || funcdef_flag || initialized))\n \t    {\n-\t      error (funcdef_flag || initialized\n-\t\t     ? G_(\"cannot define member function %<%T::%s%> \"\n-\t\t\t  \"within %qT\")\n-\t\t     : G_(\"cannot declare member function %<%T::%s%> \"\n-\t\t\t  \"within %qT\"),\n-\t\t     ctype, name, current_class_type);\n+\t      error_at (loc, funcdef_flag || initialized\n+\t\t\t? G_(\"cannot define member function %<%T::%s%> \"\n+\t\t\t     \"within %qT\")\n+\t\t\t: G_(\"cannot declare member function %<%T::%s%> \"\n+\t\t\t     \"within %qT\"),\n+\t\t\tctype, name, current_class_type);\n \t      return error_mark_node;\n \t    }\n \t}\n       else if (typedef_p && current_class_type)\n \t{\n-\t  error (\"cannot declare member %<%T::%s%> within %qT\",\n-\t\t ctype, name, current_class_type);\n+\t  error_at (loc, \"cannot declare member %<%T::%s%> within %qT\",\n+\t\t    ctype, name, current_class_type);\n \t  return error_mark_node;\n \t}\n     }\n@@ -12053,8 +12054,6 @@ grokdeclarator (const cp_declarator *declarator,\n \t}\n     }\n \n-  location_t loc = declarator ? declarator->id_loc : input_location;\n-\n   /* If this is declaring a typedef name, return a TYPE_DECL.  */\n   if (typedef_p && decl_context != TYPENAME)\n     {"}, {"sha": "03fbc0be021e12cbd7af02d4c49c2226a18ccddf", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad441c263d5aeedc9c152642cba54dcba7799b2b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad441c263d5aeedc9c152642cba54dcba7799b2b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ad441c263d5aeedc9c152642cba54dcba7799b2b", "patch": "@@ -1,3 +1,15 @@\n+2019-06-04  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* g++.dg/concepts/pr60573.C: Test locations too.\n+\t* g++.dg/cpp0x/deleted13.C: Likewise.\n+\t* g++.dg/parse/error29.C: Likewise.\n+\t* g++.dg/parse/qualified4.C: Likewise.\n+\t* g++.dg/template/crash96.C Likewise.\n+\t* g++.old-deja/g++.brendan/crash22.C Likewise.\n+\t* g++.old-deja/g++.brendan/crash23.C Likewise.\n+\t* g++.old-deja/g++.law/visibility10.C Likewise.\n+\t* g++.old-deja/g++.other/decl5.C: Likewise.\n+\n 2019-06-04  Bill Schmidt  <wschmidt@linux.ibm.com>\n \n \tPR target/78263"}, {"sha": "42cda21ef745006442245ffc66faa3c05a07c465", "filename": "gcc/testsuite/g++.dg/concepts/pr60573.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad441c263d5aeedc9c152642cba54dcba7799b2b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr60573.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad441c263d5aeedc9c152642cba54dcba7799b2b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr60573.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr60573.C?ref=ad441c263d5aeedc9c152642cba54dcba7799b2b", "patch": "@@ -9,7 +9,7 @@ struct A\n     void foo(auto);\n   };\n \n-  void B::foo(auto) {}  // { dg-error \"cannot define\" }\n+  void B::foo(auto) {}  // { dg-error \"8:cannot define\" }\n \n   struct X\n   {\n@@ -21,8 +21,8 @@ struct A\n       };\n     };\n \n-    void Y::Z::foo(auto) {}  // { dg-error \"cannot define\" }\n+    void Y::Z::foo(auto) {}  // { dg-error \"10:cannot define\" }\n   };\n \n-  void X::Y::Z::foo(auto) {}  // { dg-error \"cannot define\" }\n+  void X::Y::Z::foo(auto) {}  // { dg-error \"8:cannot define\" }\n };"}, {"sha": "ce915a840e9081693255eddf998e14ce644fa78f", "filename": "gcc/testsuite/g++.dg/cpp0x/deleted13.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad441c263d5aeedc9c152642cba54dcba7799b2b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdeleted13.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad441c263d5aeedc9c152642cba54dcba7799b2b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdeleted13.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdeleted13.C?ref=ad441c263d5aeedc9c152642cba54dcba7799b2b", "patch": "@@ -8,5 +8,5 @@ struct A\n \n struct B\n {\n-  template<typename> friend void A::foo() = delete; // { dg-error \"\" }\n+  template<typename> friend void A::foo() = delete; // { dg-error \"34:cannot define\" }\n };"}, {"sha": "20cc82004f2a16948d70027ab21ae15c32972f9b", "filename": "gcc/testsuite/g++.dg/parse/error29.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad441c263d5aeedc9c152642cba54dcba7799b2b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror29.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad441c263d5aeedc9c152642cba54dcba7799b2b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror29.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror29.C?ref=ad441c263d5aeedc9c152642cba54dcba7799b2b", "patch": "@@ -7,7 +7,7 @@ struct A {\n   void operator delete(void *);\n };\n struct B { \n-  friend void A::foo() {} // { dg-error \"22:cannot define member function 'A::foo' within 'B'\" }\n-  friend void A::operator delete(void*) {} // { dg-error \"39:cannot define member function 'A::operator delete' within 'B'\" }\n-  friend A::A() {} // { dg-error \"15:cannot define member function 'A::A' within 'B'\" }\n+  friend void A::foo() {} // { dg-error \"15:cannot define member function 'A::foo' within 'B'\" }\n+  friend void A::operator delete(void*) {} // { dg-error \"15:cannot define member function 'A::operator delete' within 'B'\" }\n+  friend A::A() {} // { dg-error \"10:cannot define member function 'A::A' within 'B'\" }\n };"}, {"sha": "71b01afd3bd8dcb4cdecc0a04633d4c7b1a0c83c", "filename": "gcc/testsuite/g++.dg/parse/qualified4.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad441c263d5aeedc9c152642cba54dcba7799b2b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fqualified4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad441c263d5aeedc9c152642cba54dcba7799b2b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fqualified4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fqualified4.C?ref=ad441c263d5aeedc9c152642cba54dcba7799b2b", "patch": "@@ -2,5 +2,5 @@\n // { dg-options \"\" }\n \n struct X { \n-  void X::bar() {} // { dg-error \"\" }\n+  void X::bar() {} // { dg-error \"8:extra qualification\" }\n }; "}, {"sha": "d1ce2db78b566f27043f25ff36bdcd1c26d76b8b", "filename": "gcc/testsuite/g++.dg/template/crash96.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad441c263d5aeedc9c152642cba54dcba7799b2b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash96.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad441c263d5aeedc9c152642cba54dcba7799b2b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash96.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash96.C?ref=ad441c263d5aeedc9c152642cba54dcba7799b2b", "patch": "@@ -2,5 +2,5 @@\n \n template<int> struct A\n {\n-  template<int> template<int> void A::foo() {} // { dg-error \"extra qualification\" }\n+  template<int> template<int> void A::foo() {} // { dg-error \"36:extra qualification\" }\n };"}, {"sha": "7e56892c7e9ded12198d0b588fe1eee805102644", "filename": "gcc/testsuite/g++.old-deja/g++.brendan/crash22.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad441c263d5aeedc9c152642cba54dcba7799b2b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash22.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad441c263d5aeedc9c152642cba54dcba7799b2b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash22.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash22.C?ref=ad441c263d5aeedc9c152642cba54dcba7799b2b", "patch": "@@ -6,6 +6,6 @@ struct A {\n };\n \n struct B {\n-    void A::a1(); // this used to die in chainon(), now grokdeclarator should// { dg-error \"\" }  cannot declare.*\n-    void A::a2(); // should be fixed by the 930629 change.// { dg-error \"\" }  cannot declare.*\n+    void A::a1(); // this used to die in chainon(), now grokdeclarator should// { dg-error \"10:cannot declare\" }  cannot declare.*\n+    void A::a2(); // should be fixed by the 930629 change.// { dg-error \"10:cannot declare\" }  cannot declare.*\n };"}, {"sha": "f09609dc744e266a9282d4d7a561fab5a66903fd", "filename": "gcc/testsuite/g++.old-deja/g++.brendan/crash23.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad441c263d5aeedc9c152642cba54dcba7799b2b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash23.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad441c263d5aeedc9c152642cba54dcba7799b2b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash23.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash23.C?ref=ad441c263d5aeedc9c152642cba54dcba7799b2b", "patch": "@@ -10,6 +10,6 @@ public:\n     void f ();\n     void g (int);\n   };\n-  void B::f () {}// { dg-error \"\" } .*\n-  void B::g (int val) {}// { dg-error \"\" } .*\n+  void B::f () {}// { dg-error \"8:cannot define\" } .*\n+  void B::g (int val) {}// { dg-error \"8:cannot define\" } .*\n };"}, {"sha": "7abb4a85d7c020b730a8463073676a8d9f0ee6df", "filename": "gcc/testsuite/g++.old-deja/g++.law/visibility10.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad441c263d5aeedc9c152642cba54dcba7799b2b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fvisibility10.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad441c263d5aeedc9c152642cba54dcba7799b2b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fvisibility10.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fvisibility10.C?ref=ad441c263d5aeedc9c152642cba54dcba7799b2b", "patch": "@@ -10,7 +10,7 @@ public:\n };\n \n class deriv : public base {\n-  void base :: f1();// { dg-error \"\" } .*\n+  void base :: f1();// { dg-error \"8:cannot declare\" } .*\n };\n \n int main ()"}, {"sha": "6d229325187b18c6abd97a06025f4d023f0c6369", "filename": "gcc/testsuite/g++.old-deja/g++.other/decl5.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad441c263d5aeedc9c152642cba54dcba7799b2b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fdecl5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad441c263d5aeedc9c152642cba54dcba7799b2b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fdecl5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fdecl5.C?ref=ad441c263d5aeedc9c152642cba54dcba7799b2b", "patch": "@@ -35,7 +35,7 @@ struct B {\n   struct ::Q {        // { dg-error \"global qual\" } ::Q not a member of B\n     int m;\n   };\n-  int A::fn() {       // { dg-error \"cannot define member\" } A::fn not a member of B\n+  int A::fn() {       // { dg-error \"7:cannot define member\" } A::fn not a member of B\n     return 0;\n   }\n   void fn(struct ::Q &);"}]}