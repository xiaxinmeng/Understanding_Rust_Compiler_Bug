{"sha": "c0e938d0cdbc3ae9b202e855d9f7ccea96138344", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzBlOTM4ZDBjZGJjM2FlOWIyMDJlODU1ZDlmN2NjZWE5NjEzODM0NA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-05-02T08:32:34Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-05-02T08:32:34Z"}, "message": "[multiple changes]\n\n2017-05-02  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* exp_attr.adb: Minor reformatting.\n\n2017-05-02  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch4.adb (Analyze_Selected_Component): Improve error\n\tdetection for illegal references to private components or\n\toperations of a protected type in the body of the type.\n\nFrom-SVN: r247469", "tree": {"sha": "3806acc558ed9137664e033b2109e2fd981f3a13", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3806acc558ed9137664e033b2109e2fd981f3a13"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c0e938d0cdbc3ae9b202e855d9f7ccea96138344", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0e938d0cdbc3ae9b202e855d9f7ccea96138344", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0e938d0cdbc3ae9b202e855d9f7ccea96138344", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0e938d0cdbc3ae9b202e855d9f7ccea96138344/comments", "author": null, "committer": null, "parents": [{"sha": "99bba92c35b2ea997f0e7f326a921faf23c0b45c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99bba92c35b2ea997f0e7f326a921faf23c0b45c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/99bba92c35b2ea997f0e7f326a921faf23c0b45c"}], "stats": {"total": 79, "additions": 60, "deletions": 19}, "files": [{"sha": "f1754d8723bd399fe75b93eeeb68eb6b9a614281", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0e938d0cdbc3ae9b202e855d9f7ccea96138344/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0e938d0cdbc3ae9b202e855d9f7ccea96138344/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=c0e938d0cdbc3ae9b202e855d9f7ccea96138344", "patch": "@@ -1,3 +1,13 @@\n+2017-05-02  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* exp_attr.adb: Minor reformatting.\n+\n+2017-05-02  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch4.adb (Analyze_Selected_Component): Improve error\n+\tdetection for illegal references to private components or\n+\toperations of a protected type in the body of the type.\n+\n 2017-05-02  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* opt.ads: Add missing GNAT markers in comments."}, {"sha": "5413581002f0a21bed798c0540f1c2493794d9ef", "filename": "gcc/ada/exp_attr.adb", "status": "modified", "additions": 18, "deletions": 16, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0e938d0cdbc3ae9b202e855d9f7ccea96138344/gcc%2Fada%2Fexp_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0e938d0cdbc3ae9b202e855d9f7ccea96138344/gcc%2Fada%2Fexp_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_attr.adb?ref=c0e938d0cdbc3ae9b202e855d9f7ccea96138344", "patch": "@@ -362,16 +362,18 @@ package body Exp_Attr is\n    ---------------------------------\n \n    function Build_Disp_Get_Task_Id_Call (Actual : Node_Id) return Node_Id is\n-      Typ  : constant Entity_Id := Etype (Actual);\n-      Id : constant Node_Id :=\n-        New_Occurrence_Of\n-          (Find_Prim_Op (Typ, Name_uDisp_Get_Task_Id), Sloc (Actual));\n-      Result : constant Node_Id :=\n-        Make_Function_Call (Sloc (Actual),\n-          Name => Id,\n-          Parameter_Associations => New_List (Actual));\n+      Loc  : constant Source_Ptr := Sloc (Actual);\n+      Typ  : constant Entity_Id  := Etype (Actual);\n+      Subp : constant Entity_Id  := Find_Prim_Op (Typ, Name_uDisp_Get_Task_Id);\n+\n    begin\n-      return Result;\n+      --  Generate:\n+      --    _Disp_Get_Task_Id (Actual)\n+\n+      return\n+        Make_Function_Call (Loc,\n+          Name                   => New_Occurrence_Of (Subp, Loc),\n+          Parameter_Associations => New_List (Actual));\n    end Build_Disp_Get_Task_Id_Call;\n \n    --------------------------\n@@ -2501,13 +2503,13 @@ package body Exp_Attr is\n          then\n             Rewrite (N,\n               Make_Function_Call (Loc,\n-                Name =>\n+                Name                   =>\n                   New_Occurrence_Of (RTE (RE_Callable), Loc),\n                 Parameter_Associations => New_List (\n                   Make_Unchecked_Type_Conversion (Loc,\n                     Subtype_Mark =>\n                       New_Occurrence_Of (RTE (RO_ST_Task_Id), Loc),\n-                    Expression => Build_Disp_Get_Task_Id_Call (Pref)))));\n+                    Expression   => Build_Disp_Get_Task_Id_Call (Pref)))));\n \n          else\n             Rewrite (N, Build_Call_With_Task (Pref, RTE (RE_Callable)));\n@@ -3591,9 +3593,9 @@ package body Exp_Attr is\n               and then Is_Interface (Ptyp)\n               and then Is_Task_Interface (Ptyp)\n             then\n-               Rewrite\n-                 (N, Unchecked_Convert_To\n-                       (Id_Kind, Build_Disp_Get_Task_Id_Call (Pref)));\n+               Rewrite (N,\n+                 Unchecked_Convert_To\n+                   (Id_Kind, Build_Disp_Get_Task_Id_Call (Pref)));\n \n             else\n                Rewrite (N,\n@@ -6282,13 +6284,13 @@ package body Exp_Attr is\n          then\n             Rewrite (N,\n               Make_Function_Call (Loc,\n-                Name =>\n+                Name                   =>\n                   New_Occurrence_Of (RTE (RE_Terminated), Loc),\n                 Parameter_Associations => New_List (\n                   Make_Unchecked_Type_Conversion (Loc,\n                     Subtype_Mark =>\n                       New_Occurrence_Of (RTE (RO_ST_Task_Id), Loc),\n-                    Expression => Build_Disp_Get_Task_Id_Call (Pref)))));\n+                    Expression   => Build_Disp_Get_Task_Id_Call (Pref)))));\n \n          elsif Restricted_Profile then\n             Rewrite (N,"}, {"sha": "12f930df6989c89e8a0d366967abe036359c9229", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 32, "deletions": 3, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0e938d0cdbc3ae9b202e855d9f7ccea96138344/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0e938d0cdbc3ae9b202e855d9f7ccea96138344/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=c0e938d0cdbc3ae9b202e855d9f7ccea96138344", "patch": "@@ -4311,6 +4311,7 @@ package body Sem_Ch4 is\n       Act_Decl      : Node_Id;\n       Comp          : Entity_Id;\n       Has_Candidate : Boolean := False;\n+      Hidden_Comp   : Entity_Id;\n       In_Scope      : Boolean;\n       Is_Private_Op : Boolean;\n       Parent_N      : Node_Id;\n@@ -4850,6 +4851,7 @@ package body Sem_Ch4 is\n          --  can only be a direct name or an expanded name.\n \n          Set_Etype (Sel, Any_Type);\n+         Hidden_Comp := Empty;\n          In_Scope := In_Open_Scopes (Prefix_Type);\n          Is_Private_Op := False;\n \n@@ -4900,6 +4902,10 @@ package body Sem_Ch4 is\n                   Has_Candidate := True;\n \n                else\n+                  if Ekind (Comp) = E_Component then\n+                     Hidden_Comp := Comp;\n+                  end if;\n+\n                   goto Next_Comp;\n                end if;\n \n@@ -4921,6 +4927,20 @@ package body Sem_Ch4 is\n             end if;\n \n             <<Next_Comp>>\n+               if Comp = First_Private_Entity (Type_To_Use) then\n+                  if Etype (Sel) /= Any_Type then\n+\n+                     --  We have a candiate.\n+                     exit;\n+\n+                  else\n+                     --  Indicate that subsequent operations are private,\n+                     --  for better error reporting.\n+\n+                     Is_Private_Op := True;\n+                  end if;\n+               end if;\n+\n                Next_Entity (Comp);\n                exit when not In_Scope\n                  and then\n@@ -4968,11 +4988,20 @@ package body Sem_Ch4 is\n \n          elsif In_Scope\n            and then Is_Object_Reference (Original_Node (Prefix (N)))\n+           and then Comes_From_Source (N)\n            and then Is_Private_Op\n          then\n-            Error_Msg_NE\n-              (\"invalid reference to private operation of some object of \"\n-               & \"type &\", N, Type_To_Use);\n+            if Present (Hidden_Comp) then\n+               Error_Msg_NE\n+                 (\"invalid reference to private component of object \"\n+                  & \"of type &\", N, Type_To_Use);\n+\n+            else\n+               Error_Msg_NE\n+                 (\"invalid reference to private operation of some object of \"\n+                  & \"type &\", N, Type_To_Use);\n+            end if;\n+\n             Set_Entity (Sel, Any_Id);\n             Set_Etype  (Sel, Any_Type);\n             return;"}]}