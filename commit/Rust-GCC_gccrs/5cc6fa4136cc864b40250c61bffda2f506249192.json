{"sha": "5cc6fa4136cc864b40250c61bffda2f506249192", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWNjNmZhNDEzNmNjODY0YjQwMjUwYzYxYmZmZGEyZjUwNjI0OTE5Mg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-07-30T15:56:34Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-07-30T15:56:34Z"}, "message": "Resync.\n\nFrom-SVN: r138325", "tree": {"sha": "f7e51af0de1fd104786952383b1668f9b3899fa4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f7e51af0de1fd104786952383b1668f9b3899fa4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5cc6fa4136cc864b40250c61bffda2f506249192", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5cc6fa4136cc864b40250c61bffda2f506249192", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5cc6fa4136cc864b40250c61bffda2f506249192", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5cc6fa4136cc864b40250c61bffda2f506249192/comments", "author": null, "committer": null, "parents": [{"sha": "d44202ba07e54a1d61bebb53abc6133139e75e7d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d44202ba07e54a1d61bebb53abc6133139e75e7d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d44202ba07e54a1d61bebb53abc6133139e75e7d"}], "stats": {"total": 82, "additions": 82, "deletions": 0}, "files": [{"sha": "09ed93ae7ef91439cff6132d9aa9907a872008fb", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 82, "deletions": 0, "changes": 82, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cc6fa4136cc864b40250c61bffda2f506249192/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cc6fa4136cc864b40250c61bffda2f506249192/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=5cc6fa4136cc864b40250c61bffda2f506249192", "patch": "@@ -1,3 +1,85 @@\n+2008-07-30  Robert Dewar  <dewar@adacore.com>\n+\n+\t* gnatlink.adb: Minor reformatting\n+\n+2008-07-30  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* rtsfind.adb (Check_RPC): Check version consistency even when not\n+\tgenerating RCI stubs. Provide more detailed error message in case of\n+\tmismatch.\n+\n+2008-07-30  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch8.adb (Analyze_Subprogram_Renaming): When renaming an attribute\n+\tas a actual in an instance, check for a missing attribute to prevent\n+\tprogram_error on an illegal program.\n+\t\n+\t* exp_util.adb (Find_Prim_Op): Rather than Assert (False), raise program\n+\terror if primitive is not found, so that exception can be handled\n+\telsewhere on illegal programs.\n+\n+2008-07-30  Robert Dewar  <dewar@adacore.com>\n+\n+\t* uintp.adb (UI_GCD): Fix potential overflow\n+\n+2008-07-30  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* einfo.adb: Flag245 is now used.\n+\t(Is_Primitive_Wrapper, Set_Is_Primitive_Wrapper): Relax the assertion\n+\tcheck to include functions.\n+\t(Is_Private_Primitive, Set_Is_Private_Primitive): New subprograms.\n+\t(Wrapped_Entity, Set_Wrapped_Entity): Relax the assertion check to\n+\tinclude functions.\n+\t(Write_Entity_Flags): Move flag Is_Primitive, add Is_Private_Primitive\n+\tto the list of displayed flags.\n+\n+\t* einfo.ads: Update comment on the usage of Is_Primitive_Wrapper and\n+\tWrapped_Entity. These two flags are now present in functions.\n+\tNew flag Is_Private_Primitive.\n+\t(Is_Private_Primitive, Set_Is_Private_Primitive): New subprograms.\n+\n+\t* exp_ch9.adb:\n+\t(Build_Wrapper_Bodies): New subprogram.\n+\t(Build_Wrapper_Body): The spec and body have been moved to in\n+\tBuild_Wrapper_ Bodies. Code cleanup.\n+\t(Build_Wrapper_Spec): Moved to the spec of Exp_Ch9. Code cleanup.\n+\tWrappers are now generated for primitives declared between the private\n+\tand full view of a concurrent type that implements an interface.\n+\t(Build_Wrapper_Specs): New subprogram.\n+\t(Expand_N_Protected_Body): Code reformatting. Replace the wrapper body\n+\tcreation mechanism with a call to Build_Wrapper_Bodies.\n+\t(Expand_N_Protected_Type_Declaration): Code reformatting. Replace the\n+\twrapper spec creation mechanism with a call to Build_Wrapper_Specs.\n+\t(Expand_N_Task_Body): Replace the wrapper body creation\n+\tmechanism with a call to Build_Wrapper_Bodies.\n+\t(Expand_N_Task_Type_Declaration): Replace the wrapper spec\n+\tcreation mechanism with a call to Build_Wrapper_Specs.\n+\t(Is_Private_Primitive_Subprogram): New subprogram.\n+\t(Overriding_Possible): Code cleanup.\n+\t(Replicate_Entry_Formals): Renamed to Replicate_Formals, code cleanup.\n+\n+\t* exp_ch9.ads (Build_Wrapper_Spec): Moved from the body of Exp_Ch9.\n+\n+\t* sem_ch3.adb: Add with and use clause for Exp_Ch9.\n+\t(Process_Full_View): Build wrapper specs for all primitives\n+\tthat belong to a private view completed by a concurrent type\n+\timplementing an interface.\n+\t\n+\t* sem_ch6.adb (Analyze_Subprogram_Body): When the current subprogram\n+\tis a primitive of a\n+\tconcurrent type with a private view that implements an interface, try to\n+\tfind the proper spec.\n+\t(Analyze_Subprogram_Declaration): Mark a subprogram as a private\n+\tprimitive if the type of its first parameter is a non-generic tagged\n+\tprivate type.\n+\t(Analyze_Subprogram_Specification): Code reformatting.\n+\t(Disambiguate_Spec): New routine.\n+\t(Find_Corresponding_Spec): Add a flag to controll the output of errors.\n+\t(Is_Private_Concurrent_Primitive): New routine.\n+\n+\t* sem_ch6.ads:\n+\t(Find_Corresponding_Spec): Add a formal to control the output of errors.\n+\n 2008-07-30  Doug Rupp  <rupp@adacore.com>\n \n \t* gigi.h (build_vms_descriptor64): New function prototype."}]}