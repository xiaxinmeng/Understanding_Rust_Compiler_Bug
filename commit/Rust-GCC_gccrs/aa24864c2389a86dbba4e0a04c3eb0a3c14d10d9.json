{"sha": "aa24864c2389a86dbba4e0a04c3eb0a3c14d10d9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWEyNDg2NGMyMzg5YTg2ZGJiYTRlMGEwNGMzZWIwYTNjMTRkMTBkOQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2004-09-29T02:50:47Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2004-09-29T02:50:47Z"}, "message": "re PR tree-optimization/15089 (local register variable with a specified register is bad)\n\n        PR 15089\n        * tree-ssa-copy.c (may_propagate_copy_into_asm): New.\n        * tree-flow.h (may_propagate_copy_into_asm): Declare.\n        * tree-ssa-ccp.c (replace_uses_in): Use it.\n        * tree-ssa-dom.c (cprop_operand): Likewise.\n\nFrom-SVN: r88269", "tree": {"sha": "6ec2f8d5a10435c23e27413403888abc84af50b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6ec2f8d5a10435c23e27413403888abc84af50b0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aa24864c2389a86dbba4e0a04c3eb0a3c14d10d9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa24864c2389a86dbba4e0a04c3eb0a3c14d10d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa24864c2389a86dbba4e0a04c3eb0a3c14d10d9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa24864c2389a86dbba4e0a04c3eb0a3c14d10d9/comments", "author": null, "committer": null, "parents": [{"sha": "e376fe584282938a72a287a467a408ec4619e5fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e376fe584282938a72a287a467a408ec4619e5fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e376fe584282938a72a287a467a408ec4619e5fb"}], "stats": {"total": 59, "additions": 50, "deletions": 9}, "files": [{"sha": "8b803fa8596c2fe642c7c5f404e092af11da5b68", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa24864c2389a86dbba4e0a04c3eb0a3c14d10d9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa24864c2389a86dbba4e0a04c3eb0a3c14d10d9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=aa24864c2389a86dbba4e0a04c3eb0a3c14d10d9", "patch": "@@ -1,3 +1,11 @@\n+2004-09-28  Richard Henderson  <rth@redhat.com>\n+\n+\tPR 15089\n+\t* tree-ssa-copy.c (may_propagate_copy_into_asm): New.\n+\t* tree-flow.h (may_propagate_copy_into_asm): Declare.\n+\t* tree-ssa-ccp.c (replace_uses_in): Use it.\n+\t* tree-ssa-dom.c (cprop_operand): Likewise.\n+\n 2004-09-28 Jeff Law  <law@redhat.com>\n \n \t* tree-ssa-threadupdate.c (create_block_for_threading):  Request"}, {"sha": "c07b0f1db8b373c303db4a317c3e02f569f6affc", "filename": "gcc/testsuite/gcc.dg/tree-ssa/asm-2.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa24864c2389a86dbba4e0a04c3eb0a3c14d10d9/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fasm-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa24864c2389a86dbba4e0a04c3eb0a3c14d10d9/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fasm-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fasm-2.c?ref=aa24864c2389a86dbba4e0a04c3eb0a3c14d10d9", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-tree-optimized\" } */\n+\n+#define REGISTER \"0\"\n+\n+void baz(void)\n+{\n+\tregister int xyzzy asm(REGISTER) = 1;\n+\tasm volatile (\"\" : : \"r\"(xyzzy));\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"asm\\[^\\\\r\\\\n\\]*xyzzy\" 1 \"optimized\" } } */"}, {"sha": "d62e6b7efa0882753e20ae1520b878175e08a001", "filename": "gcc/tree-flow.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa24864c2389a86dbba4e0a04c3eb0a3c14d10d9/gcc%2Ftree-flow.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa24864c2389a86dbba4e0a04c3eb0a3c14d10d9/gcc%2Ftree-flow.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-flow.h?ref=aa24864c2389a86dbba4e0a04c3eb0a3c14d10d9", "patch": "@@ -610,6 +610,7 @@ extern void propagate_value (use_operand_p, tree);\n extern void propagate_tree_value (tree *, tree);\n extern void replace_exp (use_operand_p, tree);\n extern bool may_propagate_copy (tree, tree);\n+extern bool may_propagate_copy_into_asm (tree);\n \n /* Description of number of iterations of a loop.  All the expressions inside\n    the structure can be evaluated at the end of the loop's preheader"}, {"sha": "d3ad9563a6b8894addc92a037a32eb175c815e15", "filename": "gcc/tree-ssa-ccp.c", "status": "modified", "additions": 14, "deletions": 9, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa24864c2389a86dbba4e0a04c3eb0a3c14d10d9/gcc%2Ftree-ssa-ccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa24864c2389a86dbba4e0a04c3eb0a3c14d10d9/gcc%2Ftree-ssa-ccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-ccp.c?ref=aa24864c2389a86dbba4e0a04c3eb0a3c14d10d9", "patch": "@@ -454,16 +454,21 @@ replace_uses_in (tree stmt, bool *replaced_addresses_p)\n \n   FOR_EACH_SSA_USE_OPERAND (use, stmt, iter, SSA_OP_USE)\n     {\n-      value *val = get_value (USE_FROM_PTR (use));\n+      tree tuse = USE_FROM_PTR (use);\n+      value *val = get_value (tuse);\n \n-      if (val->lattice_val == CONSTANT)\n-\t{\n-\t  SET_USE (use, val->const_val);\n-\t  replaced = true;\n-\t  if (POINTER_TYPE_P (TREE_TYPE (USE_FROM_PTR (use))) \n-\t      && replaced_addresses_p)\n-\t    *replaced_addresses_p = true;\n-\t}\n+      if (val->lattice_val != CONSTANT)\n+\tcontinue;\n+\n+      if (TREE_CODE (stmt) == ASM_EXPR\n+\t  && !may_propagate_copy_into_asm (tuse))\n+\tcontinue;\n+\n+      SET_USE (use, val->const_val);\n+\n+      replaced = true;\n+      if (POINTER_TYPE_P (TREE_TYPE (tuse)) && replaced_addresses_p)\n+\t*replaced_addresses_p = true;\n     }\n \n   return replaced;"}, {"sha": "63a3c20417d7c0314562d2491b048fd837b26ec1", "filename": "gcc/tree-ssa-copy.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa24864c2389a86dbba4e0a04c3eb0a3c14d10d9/gcc%2Ftree-ssa-copy.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa24864c2389a86dbba4e0a04c3eb0a3c14d10d9/gcc%2Ftree-ssa-copy.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-copy.c?ref=aa24864c2389a86dbba4e0a04c3eb0a3c14d10d9", "patch": "@@ -156,6 +156,16 @@ may_propagate_copy (tree dest, tree orig)\n   return true;\n }\n \n+/* Similarly, but we know that we're propagating into an ASM_EXPR.  */\n+\n+bool\n+may_propagate_copy_into_asm (tree dest)\n+{\n+  /* Hard register operands of asms are special.  Do not bypass.  */\n+  return !(TREE_CODE (dest) == SSA_NAME\n+\t   && DECL_HARD_REGISTER (SSA_NAME_VAR (dest)));\n+}\n+\n \n /* Given two SSA_NAMEs pointers ORIG and NEW such that we are copy\n    propagating NEW into ORIG, consolidate aliasing information so that"}, {"sha": "15bf695db4b276e9dff65439d5f7605ecfc7f68f", "filename": "gcc/tree-ssa-dom.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa24864c2389a86dbba4e0a04c3eb0a3c14d10d9/gcc%2Ftree-ssa-dom.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa24864c2389a86dbba4e0a04c3eb0a3c14d10d9/gcc%2Ftree-ssa-dom.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-dom.c?ref=aa24864c2389a86dbba4e0a04c3eb0a3c14d10d9", "patch": "@@ -2536,6 +2536,11 @@ cprop_operand (tree stmt, use_operand_p op_p)\n \t      || TREE_CODE (val) != SSA_NAME))\n \treturn false;\n \n+      /* Do not replace hard register operands in asm statements.  */\n+      if (TREE_CODE (stmt) == ASM_EXPR\n+\t  && !may_propagate_copy_into_asm (op))\n+\treturn false;\n+\n       /* Get the toplevel type of each operand.  */\n       op_type = TREE_TYPE (op);\n       val_type = TREE_TYPE (val);"}]}