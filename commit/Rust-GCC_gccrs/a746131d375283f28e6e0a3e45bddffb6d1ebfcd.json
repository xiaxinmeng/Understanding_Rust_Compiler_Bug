{"sha": "a746131d375283f28e6e0a3e45bddffb6d1ebfcd", "node_id": "C_kwDOANBUbNoAKGE3NDYxMzFkMzc1MjgzZjI4ZTZlMGEzZTQ1YmRkZmZiNmQxZWJmY2Q", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2022-01-18T00:08:53Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2022-05-09T09:27:37Z"}, "message": "[Ada] Remove extra space around binary operators\n\nStyle cleanups. Violation initially spotted while reading the code for\nUI_Expon; other occurrences found with grep (and examined manually,\nbecause sometimes the extra space is needed for a code layout).\n\ngcc/ada/\n\n\t* bindgen.adb, errout.adb, exp_unst.adb, gnatchop.adb,\n\tlibgnat/a-ngcefu.adb, libgnat/a-strunb.adb,\n\tlibgnat/a-stwiun.adb, libgnat/a-stzunb.adb,\n\tlibgnat/a-wtedit.adb, libgnat/g-debpoo.adb, osint.adb,\n\tsigtramp-vxworks.c, uintp.adb: Remove extra whitespace around +,\n\t-, *, / and **.", "tree": {"sha": "2f83215c313fe27600d98f9d412585de4ed4a2cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2f83215c313fe27600d98f9d412585de4ed4a2cc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a746131d375283f28e6e0a3e45bddffb6d1ebfcd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a746131d375283f28e6e0a3e45bddffb6d1ebfcd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a746131d375283f28e6e0a3e45bddffb6d1ebfcd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a746131d375283f28e6e0a3e45bddffb6d1ebfcd/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "348931ea3e09cbafa0bbd4dadfb05694aef531c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/348931ea3e09cbafa0bbd4dadfb05694aef531c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/348931ea3e09cbafa0bbd4dadfb05694aef531c0"}], "stats": {"total": 48, "additions": 24, "deletions": 24}, "files": [{"sha": "d7ba26798e5bdd6848cf019c51d891a893e2ef64", "filename": "gcc/ada/bindgen.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a746131d375283f28e6e0a3e45bddffb6d1ebfcd/gcc%2Fada%2Fbindgen.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a746131d375283f28e6e0a3e45bddffb6d1ebfcd/gcc%2Fada%2Fbindgen.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindgen.adb?ref=a746131d375283f28e6e0a3e45bddffb6d1ebfcd", "patch": "@@ -2907,7 +2907,7 @@ package body Bindgen is\n             Nlen := Name'Length;\n             Name (Name'Last) := Character'Val (J mod 10 + Character'Pos ('0'));\n             Name (Name'Last - 1) :=\n-              Character'Val (J /   10 + Character'Pos ('0'));\n+              Character'Val (J / 10 + Character'Pos ('0'));\n          end if;\n \n          for K in ALIs.First .. ALIs.Last loop"}, {"sha": "44d461f315b1c6d0b9d6322bd4b0a5f29b8f2cfb", "filename": "gcc/ada/errout.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a746131d375283f28e6e0a3e45bddffb6d1ebfcd/gcc%2Fada%2Ferrout.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a746131d375283f28e6e0a3e45bddffb6d1ebfcd/gcc%2Fada%2Ferrout.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.adb?ref=a746131d375283f28e6e0a3e45bddffb6d1ebfcd", "patch": "@@ -3876,7 +3876,7 @@ package body Errout is\n       --  dealing with some cases of internal names).\n \n       while Name_Len > 1 and then Name_Buffer (Name_Len) in 'A' .. 'Z' loop\n-         Name_Len := Name_Len  - 1;\n+         Name_Len := Name_Len - 1;\n       end loop;\n \n       --  If we have any of the names from standard that start with the"}, {"sha": "2fb929908401fd1974104b6294d4f251959debbc", "filename": "gcc/ada/exp_unst.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a746131d375283f28e6e0a3e45bddffb6d1ebfcd/gcc%2Fada%2Fexp_unst.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a746131d375283f28e6e0a3e45bddffb6d1ebfcd/gcc%2Fada%2Fexp_unst.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_unst.adb?ref=a746131d375283f28e6e0a3e45bddffb6d1ebfcd", "patch": "@@ -856,7 +856,7 @@ package body Exp_Unst is\n                      S : Entity_Id := E;\n \n                   begin\n-                     for J in reverse 1 .. L  - 1 loop\n+                     for J in reverse 1 .. L - 1 loop\n                         S := Enclosing_Subprogram (S);\n                         Subps.Table (Subp_Index (S)).Reachable := True;\n                      end loop;"}, {"sha": "03ad454b2e3f7af2922a6f35e640a6c92ddc9313", "filename": "gcc/ada/gnatchop.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a746131d375283f28e6e0a3e45bddffb6d1ebfcd/gcc%2Fada%2Fgnatchop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a746131d375283f28e6e0a3e45bddffb6d1ebfcd/gcc%2Fada%2Fgnatchop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatchop.adb?ref=a746131d375283f28e6e0a3e45bddffb6d1ebfcd", "patch": "@@ -721,7 +721,7 @@ procedure Gnatchop is\n       begin\n          Parse_Token (Source, Parse_Ptr, Token_Ptr);\n \n-         if Source'Last  + 1 - Token_Ptr < Literal'Length\n+         if Source'Last + 1 - Token_Ptr < Literal'Length\n            or else\n              Source (Token_Ptr .. Token_Ptr + Literal'Length - 1) /= Literal\n          then"}, {"sha": "56beb0fa37664ea5fb9db4c7bc366a57456cc7c2", "filename": "gcc/ada/libgnat/a-ngcefu.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a746131d375283f28e6e0a3e45bddffb6d1ebfcd/gcc%2Fada%2Flibgnat%2Fa-ngcefu.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a746131d375283f28e6e0a3e45bddffb6d1ebfcd/gcc%2Fada%2Flibgnat%2Fa-ngcefu.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-ngcefu.adb?ref=a746131d375283f28e6e0a3e45bddffb6d1ebfcd", "patch": "@@ -225,7 +225,7 @@ package body Ada.Numerics.Generic_Complex_Elementary_Functions is\n       elsif abs Re (X) > 1.0 / Epsilon or else\n             abs Im (X) > 1.0 / Epsilon\n       then\n-         Xt := Complex_One  /  X;\n+         Xt := Complex_One / X;\n \n          if Re (X) < 0.0 then\n             Set_Re (Xt, PI - Re (Xt));\n@@ -442,7 +442,7 @@ package body Ada.Numerics.Generic_Complex_Elementary_Functions is\n       if abs Re (X) < Square_Root_Epsilon and then\n          abs Im (X) < Square_Root_Epsilon\n       then\n-         return Complex_One  /  X;\n+         return Complex_One / X;\n \n       elsif Im (X) > Log_Inverse_Epsilon_2 then\n          return -Complex_I;\n@@ -463,7 +463,7 @@ package body Ada.Numerics.Generic_Complex_Elementary_Functions is\n       if abs Re (X) < Square_Root_Epsilon and then\n          abs Im (X) < Square_Root_Epsilon\n       then\n-         return Complex_One  /  X;\n+         return Complex_One / X;\n \n       elsif Re (X) > Log_Inverse_Epsilon_2 then\n          return Complex_One;"}, {"sha": "f8e880eecfa8beda9bb647c30828a8242da0281a", "filename": "gcc/ada/libgnat/a-strunb.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a746131d375283f28e6e0a3e45bddffb6d1ebfcd/gcc%2Fada%2Flibgnat%2Fa-strunb.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a746131d375283f28e6e0a3e45bddffb6d1ebfcd/gcc%2Fada%2Flibgnat%2Fa-strunb.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-strunb.adb?ref=a746131d375283f28e6e0a3e45bddffb6d1ebfcd", "patch": "@@ -721,7 +721,7 @@ package body Ada.Strings.Unbounded is\n       Realloc_For_Chunk (Source, New_Item'Length);\n \n       Source.Reference\n-        (Before +  New_Item'Length .. Source.Last + New_Item'Length) :=\n+        (Before + New_Item'Length .. Source.Last + New_Item'Length) :=\n            Source.Reference (Before .. Source.Last);\n \n       Source.Reference (Before .. Before + New_Item'Length - 1) := New_Item;"}, {"sha": "8773a621f200abeea2418b1e9109284e7f6fdf12", "filename": "gcc/ada/libgnat/a-stwiun.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a746131d375283f28e6e0a3e45bddffb6d1ebfcd/gcc%2Fada%2Flibgnat%2Fa-stwiun.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a746131d375283f28e6e0a3e45bddffb6d1ebfcd/gcc%2Fada%2Flibgnat%2Fa-stwiun.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-stwiun.adb?ref=a746131d375283f28e6e0a3e45bddffb6d1ebfcd", "patch": "@@ -718,7 +718,7 @@ package body Ada.Strings.Wide_Unbounded is\n       Realloc_For_Chunk (Source, New_Item'Length);\n \n       Source.Reference\n-        (Before +  New_Item'Length .. Source.Last + New_Item'Length) :=\n+        (Before + New_Item'Length .. Source.Last + New_Item'Length) :=\n            Source.Reference (Before .. Source.Last);\n \n       Source.Reference (Before .. Before + New_Item'Length - 1) := New_Item;"}, {"sha": "a92714cdcf3a6a3cd9844b2999b3ed3ec0655638", "filename": "gcc/ada/libgnat/a-stzunb.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a746131d375283f28e6e0a3e45bddffb6d1ebfcd/gcc%2Fada%2Flibgnat%2Fa-stzunb.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a746131d375283f28e6e0a3e45bddffb6d1ebfcd/gcc%2Fada%2Flibgnat%2Fa-stzunb.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-stzunb.adb?ref=a746131d375283f28e6e0a3e45bddffb6d1ebfcd", "patch": "@@ -726,7 +726,7 @@ package body Ada.Strings.Wide_Wide_Unbounded is\n       Realloc_For_Chunk (Source, New_Item'Length);\n \n       Source.Reference\n-        (Before +  New_Item'Length .. Source.Last + New_Item'Length) :=\n+        (Before + New_Item'Length .. Source.Last + New_Item'Length) :=\n            Source.Reference (Before .. Source.Last);\n \n       Source.Reference (Before .. Before + New_Item'Length - 1) := New_Item;"}, {"sha": "9b9f70269b8a0ee85e88719d914e52ca6a67557a", "filename": "gcc/ada/libgnat/a-wtedit.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a746131d375283f28e6e0a3e45bddffb6d1ebfcd/gcc%2Fada%2Flibgnat%2Fa-wtedit.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a746131d375283f28e6e0a3e45bddffb6d1ebfcd/gcc%2Fada%2Flibgnat%2Fa-wtedit.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-wtedit.adb?ref=a746131d375283f28e6e0a3e45bddffb6d1ebfcd", "patch": "@@ -246,8 +246,8 @@ package body Ada.Wide_Text_IO.Editing is\n \n                   else\n                      Count := Count * 10\n-                                +  Character'Pos (Picture (Last)) -\n-                                   Character'Pos ('0');\n+                                + Character'Pos (Picture (Last)) -\n+                                  Character'Pos ('0');\n                   end if;\n \n                   Last := Last + 1;"}, {"sha": "6e0cf1048c76c851916a218e7c8d0767ba8ec243", "filename": "gcc/ada/libgnat/g-debpoo.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a746131d375283f28e6e0a3e45bddffb6d1ebfcd/gcc%2Fada%2Flibgnat%2Fg-debpoo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a746131d375283f28e6e0a3e45bddffb6d1ebfcd/gcc%2Fada%2Flibgnat%2Fg-debpoo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fg-debpoo.adb?ref=a746131d375283f28e6e0a3e45bddffb6d1ebfcd", "patch": "@@ -791,7 +791,7 @@ package body GNAT.Debug_Pools is\n \n          declare\n             Block_Number : constant Integer_Address :=\n-                             Int_Storage /  Memory_Chunk_Size;\n+                             Int_Storage / Memory_Chunk_Size;\n             Ptr          : constant Validity_Bits_Ref :=\n                              Validy_Htable.Get (Block_Number);\n             Offset       : constant Integer_Address :=\n@@ -844,7 +844,7 @@ package body GNAT.Debug_Pools is\n       procedure Set_Valid (Storage : System.Address; Value : Boolean) is\n          Int_Storage  : constant Integer_Address := To_Integer (Storage);\n          Block_Number : constant Integer_Address :=\n-                          Int_Storage /  Memory_Chunk_Size;\n+                          Int_Storage / Memory_Chunk_Size;\n          Ptr          : Validity_Bits_Ref := Validy_Htable.Get (Block_Number);\n          Offset       : constant Integer_Address :=\n                           (Int_Storage - (Block_Number * Memory_Chunk_Size)) /"}, {"sha": "af76dc7b4f928e36ddea41286940afd669f5f173", "filename": "gcc/ada/osint.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a746131d375283f28e6e0a3e45bddffb6d1ebfcd/gcc%2Fada%2Fosint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a746131d375283f28e6e0a3e45bddffb6d1ebfcd/gcc%2Fada%2Fosint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fosint.adb?ref=a746131d375283f28e6e0a3e45bddffb6d1ebfcd", "patch": "@@ -1971,9 +1971,9 @@ package body Osint is\n    function Nb_Dir_In_Obj_Search_Path return Natural is\n    begin\n       if Opt.Look_In_Primary_Dir then\n-         return Lib_Search_Directories.Last -  Primary_Directory + 1;\n+         return Lib_Search_Directories.Last - Primary_Directory + 1;\n       else\n-         return Lib_Search_Directories.Last -  Primary_Directory;\n+         return Lib_Search_Directories.Last - Primary_Directory;\n       end if;\n    end Nb_Dir_In_Obj_Search_Path;\n \n@@ -1984,9 +1984,9 @@ package body Osint is\n    function Nb_Dir_In_Src_Search_Path return Natural is\n    begin\n       if Opt.Look_In_Primary_Dir then\n-         return Src_Search_Directories.Last -  Primary_Directory + 1;\n+         return Src_Search_Directories.Last - Primary_Directory + 1;\n       else\n-         return Src_Search_Directories.Last -  Primary_Directory;\n+         return Src_Search_Directories.Last - Primary_Directory;\n       end if;\n    end Nb_Dir_In_Src_Search_Path;\n "}, {"sha": "357a834082b75fd364afce0d89e900cf2bbf4df8", "filename": "gcc/ada/sigtramp-vxworks.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a746131d375283f28e6e0a3e45bddffb6d1ebfcd/gcc%2Fada%2Fsigtramp-vxworks.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a746131d375283f28e6e0a3e45bddffb6d1ebfcd/gcc%2Fada%2Fsigtramp-vxworks.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsigtramp-vxworks.c?ref=a746131d375283f28e6e0a3e45bddffb6d1ebfcd", "patch": "@@ -49,15 +49,15 @@\n \n typedef struct mcontext\n   {\n-    REG_SET     regs;\n+    REG_SET regs;\n   } mcontext_t;\n \n typedef struct ucontext\n   {\n-    mcontext_t          uc_mcontext;    /* register set */\n-    struct ucontext *   uc_link;        /* not used */\n-    sigset_t            uc_sigmask;     /* set of signals blocked */\n-    stack_t             uc_stack;       /* stack of context signaled */\n+    mcontext_t        uc_mcontext;    /* register set */\n+    struct ucontext * uc_link;        /* not used */\n+    sigset_t          uc_sigmask;     /* set of signals blocked */\n+    stack_t           uc_stack;       /* stack of context signaled */\n   } ucontext_t;\n #endif\n "}, {"sha": "854d2e167b012580104eab10c430942dd1620776", "filename": "gcc/ada/uintp.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a746131d375283f28e6e0a3e45bddffb6d1ebfcd/gcc%2Fada%2Fuintp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a746131d375283f28e6e0a3e45bddffb6d1ebfcd/gcc%2Fada%2Fuintp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fuintp.adb?ref=a746131d375283f28e6e0a3e45bddffb6d1ebfcd", "patch": "@@ -1431,7 +1431,7 @@ package body Uintp is\n \n             N := N / Uint_2;\n             exit when N = Uint_0;\n-            Squares := Squares *  Squares;\n+            Squares := Squares * Squares;\n          end loop;\n \n          Uintp.Release_And_Save (M, Result);"}]}