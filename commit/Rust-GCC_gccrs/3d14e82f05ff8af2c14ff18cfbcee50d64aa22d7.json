{"sha": "3d14e82f05ff8af2c14ff18cfbcee50d64aa22d7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2QxNGU4MmYwNWZmOGFmMmMxNGZmMThjZmJjZWU1MGQ2NGFhMjJkNw==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1997-03-18T22:55:01Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1997-03-18T22:55:01Z"}, "message": "(shorten_branches): Split all insns before computing insn lengths.\n\n(shorten_branches): Split all insns before computing insn\nlengths.\n(final_scan_insn, case default): If HAVE_ATTR_length defined, call\nabort for any insn that has a '#' output template.\n\nFrom-SVN: r13744", "tree": {"sha": "c638d7f111b1248210d76f7b8586c9ae1789894f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c638d7f111b1248210d76f7b8586c9ae1789894f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3d14e82f05ff8af2c14ff18cfbcee50d64aa22d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d14e82f05ff8af2c14ff18cfbcee50d64aa22d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d14e82f05ff8af2c14ff18cfbcee50d64aa22d7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d14e82f05ff8af2c14ff18cfbcee50d64aa22d7/comments", "author": null, "committer": null, "parents": [{"sha": "aff4d29bf4e61838c3ed08862146f16c8cfe9253", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aff4d29bf4e61838c3ed08862146f16c8cfe9253", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aff4d29bf4e61838c3ed08862146f16c8cfe9253"}], "stats": {"total": 14, "additions": 14, "deletions": 0}, "files": [{"sha": "64b5c500b5da298ff329f45afdadaa510b2bd21a", "filename": "gcc/final.c", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d14e82f05ff8af2c14ff18cfbcee50d64aa22d7/gcc%2Ffinal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d14e82f05ff8af2c14ff18cfbcee50d64aa22d7/gcc%2Ffinal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffinal.c?ref=3d14e82f05ff8af2c14ff18cfbcee50d64aa22d7", "patch": "@@ -655,6 +655,13 @@ shorten_branches (first)\n   rtx body;\n   int uid;\n \n+  /* In order to make sure that all instructions have valid length info,\n+     we must split them before we compute the address/length info.  */\n+\n+  for (insn = NEXT_INSN (first); insn; insn = NEXT_INSN (insn))\n+    if (GET_RTX_CLASS (GET_CODE (insn)) == 'i')\n+      insn = try_split (PATTERN (insn), insn, 1);\n+\n   /* Compute maximum UID and allocate arrays.  */\n   for (insn = first; insn; insn = NEXT_INSN (insn))\n     if (INSN_UID (insn) > max_uid)\n@@ -2090,6 +2097,13 @@ final_scan_insn (insn, file, optimize, prescan, nopeepholes)\n \t    if (new == insn && PATTERN (new) == body)\n \t      abort ();\n \t      \n+#ifdef HAVE_ATTR_length\n+\t    /* This instruction should have been split in shorten_branches,\n+\t       to ensure that we would have valid length info for the\n+\t       splitees.  */\n+\t    abort ();\n+#endif\n+\n \t    new_block = 0;\n \t    return new;\n \t  }"}]}