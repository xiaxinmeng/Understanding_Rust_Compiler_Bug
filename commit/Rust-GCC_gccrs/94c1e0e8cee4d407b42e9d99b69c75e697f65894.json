{"sha": "94c1e0e8cee4d407b42e9d99b69c75e697f65894", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTRjMWUwZThjZWU0ZDQwN2I0MmU5ZDk5YjY5Yzc1ZTY5N2Y2NTg5NA==", "commit": {"author": {"name": "Mike Stump", "email": "mrs@apple.com", "date": "2002-10-26T01:18:52Z"}, "committer": {"name": "Mike Stump", "email": "mrs@gcc.gnu.org", "date": "2002-10-26T01:18:52Z"}, "message": "c-typeck.c (warn_for_assignment): Don't print argument number, if zero.\n\n\t* c-typeck.c (warn_for_assignment): Don't print argument number, if zero.\n\tFixes gcc.dg/warn-1.c.\n\nFrom-SVN: r58550", "tree": {"sha": "2d00071b22ba1ea6afacc4fa452106cec43387de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2d00071b22ba1ea6afacc4fa452106cec43387de"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/94c1e0e8cee4d407b42e9d99b69c75e697f65894", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94c1e0e8cee4d407b42e9d99b69c75e697f65894", "html_url": "https://github.com/Rust-GCC/gccrs/commit/94c1e0e8cee4d407b42e9d99b69c75e697f65894", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94c1e0e8cee4d407b42e9d99b69c75e697f65894/comments", "author": null, "committer": null, "parents": [{"sha": "f0dd122b47336c311afb102bf23a369d096a82be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0dd122b47336c311afb102bf23a369d096a82be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f0dd122b47336c311afb102bf23a369d096a82be"}], "stats": {"total": 29, "additions": 27, "deletions": 2}, "files": [{"sha": "4227a7cda90dd2f68e2215245579f361d7ddb2a6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94c1e0e8cee4d407b42e9d99b69c75e697f65894/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94c1e0e8cee4d407b42e9d99b69c75e697f65894/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=94c1e0e8cee4d407b42e9d99b69c75e697f65894", "patch": "@@ -1,3 +1,7 @@\n+2002-10-25  Mike Stump  <mrs@apple.com>\n+\n+\t* c-typeck.c (warn_for_assignment): Don't print argument number, if zero.\n+\n Sat Oct 26 01:44:46 CEST 2002  Jan Hubicka  <jh@suse.cz>\n \n \t* toplev.c (dump_file_index): Add DFI_ce3."}, {"sha": "0915b1091c8c10964e89072956b96d21ba9a967b", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 23, "deletions": 2, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94c1e0e8cee4d407b42e9d99b69c75e697f65894/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94c1e0e8cee4d407b42e9d99b69c75e697f65894/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=94c1e0e8cee4d407b42e9d99b69c75e697f65894", "patch": "@@ -4309,7 +4309,8 @@ c_convert_parm_for_inlining (parm, value, fn)\n \n /* Print a warning using MSGID.\n    It gets OPNAME as its one parameter.\n-   If OPNAME is null, it is replaced by \"passing arg ARGNUM of `FUNCTION'\".\n+   if OPNAME is null and ARGNUM is 0, it is replaced by \"passing arg of `FUNCTION'\".\n+   Otherwise if OPNAME is null, it is replaced by \"passing arg ARGNUM of `FUNCTION'\".\n    FUNCTION and ARGNUM are handled specially if we are building an\n    Objective-C selector.  */\n \n@@ -4330,7 +4331,27 @@ warn_for_assignment (msgid, opname, function, argnum)\n \t  function = selector;\n \t  argnum -= 2;\n \t}\n-      if (function)\n+      if (argnum == 0)\n+\t{\n+\t  if (function)\n+\t    {\t    \n+\t      /* Function name is known; supply it.  */\n+\t      const char *const argstring = _(\"passing arg of `%s'\");\n+\t      new_opname = (char *) alloca (IDENTIFIER_LENGTH (function)\n+\t\t\t\t\t    + strlen (argstring) + 1\n+\t\t\t\t\t    + 1);\n+\t      sprintf (new_opname, argstring,\n+\t\t       IDENTIFIER_POINTER (function));\n+\t    }\n+\t  else\n+\t    {\n+\t      /* Function name unknown (call through ptr).  */\n+\t      const char *const argnofun = _(\"passing arg of pointer to function\");\n+\t      new_opname = (char *) alloca (strlen (argnofun) + 1 + 1);\n+\t      sprintf (new_opname, argnofun);\n+\t    }\n+\t}\n+      else if (function)\n \t{\n \t  /* Function name is known; supply it.  */\n \t  const char *const argstring = _(\"passing arg %d of `%s'\");"}]}