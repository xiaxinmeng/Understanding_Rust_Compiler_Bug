{"sha": "5aa0548d689468fde141ada9f33dc823e2de5a72", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWFhMDU0OGQ2ODk0NjhmZGUxNDFhZGE5ZjMzZGM4MjNlMmRlNWE3Mg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-18T09:46:49Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-18T09:46:49Z"}, "message": "[multiple changes]\n\n2014-07-18  Robert Dewar  <dewar@adacore.com>\n\n\t* lib-writ.adb, makeutl.adb, ali.ads: Minor reformatting.\n\n2014-07-18  Vincent Celier  <celier@adacore.com>\n\n\t* lib-writ.ads: Update documentation about the D lines.\n\nFrom-SVN: r212796", "tree": {"sha": "318e941f7f5d2a3c2661e9dcbbe28bcfd7b3c157", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/318e941f7f5d2a3c2661e9dcbbe28bcfd7b3c157"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5aa0548d689468fde141ada9f33dc823e2de5a72", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5aa0548d689468fde141ada9f33dc823e2de5a72", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5aa0548d689468fde141ada9f33dc823e2de5a72", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5aa0548d689468fde141ada9f33dc823e2de5a72/comments", "author": null, "committer": null, "parents": [{"sha": "8b034336be00989bcc51e37559da7dae4be43658", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b034336be00989bcc51e37559da7dae4be43658", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b034336be00989bcc51e37559da7dae4be43658"}], "stats": {"total": 65, "additions": 35, "deletions": 30}, "files": [{"sha": "766912bd27c5a3f219b12b83d3f3d2ad4e79df58", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5aa0548d689468fde141ada9f33dc823e2de5a72/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5aa0548d689468fde141ada9f33dc823e2de5a72/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=5aa0548d689468fde141ada9f33dc823e2de5a72", "patch": "@@ -1,3 +1,11 @@\n+2014-07-18  Robert Dewar  <dewar@adacore.com>\n+\n+\t* lib-writ.adb, makeutl.adb, ali.ads: Minor reformatting.\n+\n+2014-07-18  Vincent Celier  <celier@adacore.com>\n+\n+\t* lib-writ.ads: Update documentation about the D lines.\n+\n 2014-07-18  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_ch13.adb (Replace_Type_References_Generic): Use type entity"}, {"sha": "66a462ed41e02e727e094d3a7b474e8287dbae32", "filename": "gcc/ada/ali.ads", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5aa0548d689468fde141ada9f33dc823e2de5a72/gcc%2Fada%2Fali.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5aa0548d689468fde141ada9f33dc823e2de5a72/gcc%2Fada%2Fali.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fali.ads?ref=5aa0548d689468fde141ada9f33dc823e2de5a72", "patch": "@@ -768,8 +768,7 @@ package ALI is\n       --  Name_Id for subunit name if present, else No_Name\n \n       Unit_Name : Name_Id;\n-      --  Name_Id for the unit name, if not a subunit. No_Name for a subunit.\n-\n+      --  Name_Id for the unit name if not a subunit (No_Name for a subunit)\n       Rfile : File_Name_Type;\n       --  Reference file name. Same as Sfile unless a Source_Reference pragma\n       --  was used, in which case it reflects the name used in the pragma."}, {"sha": "bd0ae5cdc622154a3c4bee4aa62919b381f21746", "filename": "gcc/ada/lib-writ.adb", "status": "modified", "additions": 18, "deletions": 24, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5aa0548d689468fde141ada9f33dc823e2de5a72/gcc%2Fada%2Flib-writ.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5aa0548d689468fde141ada9f33dc823e2de5a72/gcc%2Fada%2Flib-writ.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-writ.adb?ref=5aa0548d689468fde141ada9f33dc823e2de5a72", "patch": "@@ -426,17 +426,16 @@ package body Lib.Writ is\n          --  If this is a spec ...\n \n          if (Is_Subprogram (Uent)\n-               or else Ekind (Uent) = E_Package\n-               or else Is_Generic_Unit (Uent))\n+              or else Ekind (Uent) = E_Package\n+              or else Is_Generic_Unit (Uent))\n \n             --  and an elaboration entity was declared ...\n \n             and then Present (Elaboration_Entity (Uent))\n \n             --  and either the elaboration flag is required ...\n \n-            and then\n-              (Elaboration_Entity_Required (Uent)\n+            and then (Elaboration_Entity_Required (Uent)\n \n                --  or this unit has elaboration code ...\n \n@@ -450,9 +449,7 @@ package body Lib.Writ is\n                    and then Present (Body_Entity (Uent))\n                    and then\n                      not Has_No_Elaboration_Code\n-                           (Parent\n-                             (Declaration_Node\n-                               (Body_Entity (Uent))))))\n+                           (Parent (Declaration_Node (Body_Entity (Uent))))))\n          then\n             if Convention (Uent) = Convention_CIL then\n \n@@ -531,7 +528,7 @@ package body Lib.Writ is\n            or else\n              (Present (Library_Unit (Unode))\n                 and then\n-              Nkind (Unit (Library_Unit (Unode))) in N_Generic_Declaration)\n+                  Nkind (Unit (Library_Unit (Unode))) in N_Generic_Declaration)\n          then\n             Write_Info_Str (\" GE\");\n          end if;\n@@ -576,19 +573,18 @@ package body Lib.Writ is\n          if Nkind (Unit (Unode)) in N_Unit_Body then\n             for S in Units.First .. Last_Unit loop\n \n-               --  We are only interested in subunits.\n-               --  For preproc. data and def. files, Cunit is Empty, so\n-               --  we need to test that first.\n+               --  We are only interested in subunits. For preproc. data and\n+               --  def. files, Cunit is Empty, so we need to test that first.\n \n                if Cunit (S) /= Empty\n                  and then Nkind (Unit (Cunit (S))) = N_Subunit\n                then\n                   Pnode := Library_Unit (Cunit (S));\n \n-                  --  In gnatc mode, the errors in the subunits will not\n-                  --  have been recorded, but the analysis of the subunit\n-                  --  may have failed. There is no information to add to\n-                  --  ALI file in this case.\n+                  --  In gnatc mode, the errors in the subunits will not have\n+                  --  been recorded, but the analysis of the subunit may have\n+                  --  failed. There is no information to add to ALI file in\n+                  --  this case.\n \n                   if No (Pnode) then\n                      exit;\n@@ -780,8 +776,8 @@ package body Lib.Writ is\n             --  Add element to with table if it is with'ed or if it is the\n             --  parent spec of the main unit (case of main unit is a child\n             --  unit). The latter with is not needed for semantic purposes,\n-            --  but is required by the binder for elaboration purposes.\n-            --  For preproc. data and def. files, there is no Unit_Name,\n+            --  but is required by the binder for elaboration purposes. For\n+            --  preprocessing data and definition files, there is no Unit_Name,\n             --  check for that first.\n \n             if Unit_Name (J) /= No_Unit_Name\n@@ -1057,8 +1053,8 @@ package body Lib.Writ is\n             if Nkind (U) = N_Subprogram_Body\n               and then Present (Corresponding_Spec (U))\n               and then\n-                Ekind_In (Corresponding_Spec (U),\n-                  E_Generic_Procedure, E_Generic_Function)\n+                Ekind_In (Corresponding_Spec (U), E_Generic_Procedure,\n+                                                  E_Generic_Function)\n             then\n                null;\n \n@@ -1183,9 +1179,7 @@ package body Lib.Writ is\n       --  for which we have generated code\n \n       for Unit in Units.First .. Last_Unit loop\n-         if Units.Table (Unit).Generate_Code\n-           or else Unit = Main_Unit\n-         then\n+         if Units.Table (Unit).Generate_Code or else Unit = Main_Unit then\n             if not Has_No_Elaboration_Code (Cunit (Unit)) then\n                Main_Restrictions.Violated (No_Elaboration_Code) := True;\n             end if;\n@@ -1412,8 +1406,8 @@ package body Lib.Writ is\n             if Sind /= No_Source_File then\n                Fname := File_Name (Sind);\n \n-               --  Ensure that on platforms where the file names are not\n-               --  case sensitive, the recorded file name is in lower case.\n+               --  Ensure that on platforms where the file names are not case\n+               --  sensitive, the recorded file name is in lower case.\n \n                if not File_Names_Case_Sensitive then\n                   Get_Name_String (Fname);"}, {"sha": "aee3f8f3e41ed75d25f0d9de7c6bab7582fc7b5d", "filename": "gcc/ada/lib-writ.ads", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5aa0548d689468fde141ada9f33dc823e2de5a72/gcc%2Fada%2Flib-writ.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5aa0548d689468fde141ada9f33dc823e2de5a72/gcc%2Fada%2Flib-writ.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-writ.ads?ref=5aa0548d689468fde141ada9f33dc823e2de5a72", "patch": "@@ -767,7 +767,7 @@ package Lib.Writ is\n    --  units depend. This is used by the binder for consistency checking.\n    --  These lines are also referenced by the cross-reference information.\n \n-   --    D source-name time-stamp checksum [subunit-name] line:file-name\n+   --    D source-name time-stamp checksum (sub)unit-name line:file-name\n \n    --      source-name also includes preprocessing data file and preprocessing\n    --      definition file. These preprocessing files may be given as full\n@@ -782,9 +782,10 @@ package Lib.Writ is\n    --      The checksum is an 8-hex digit representation of the source file\n    --      checksum, with letters given in lower case.\n \n-   --      The subunit name is present only if the dependency line is for a\n-   --      subunit. It contains the fully qualified name of the subunit in all\n-   --      lower case letters.\n+   --      If the unit is not a subunit, the (sub)unit name is the unit name in\n+   --      internal format, as described in package Uname. If the unit is a\n+   --      subunit, the (sub)unit name is the fully qualified name of the\n+   --      subunit in all lower case letters.\n \n    --      The line:file-name entry is present only if a Source_Reference\n    --      pragma appeared in the source file identified by source-name. In"}, {"sha": "3b72ed70a0fdffda62ac468d4946906efb4d52ff", "filename": "gcc/ada/makeutl.adb", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5aa0548d689468fde141ada9f33dc823e2de5a72/gcc%2Fada%2Fmakeutl.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5aa0548d689468fde141ada9f33dc823e2de5a72/gcc%2Fada%2Fmakeutl.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakeutl.adb?ref=5aa0548d689468fde141ada9f33dc823e2de5a72", "patch": "@@ -320,6 +320,9 @@ package body Makeutl is\n                   end;\n                end if;\n \n+               --  Check that a dependent source for a unit that is from a\n+               --  project is indeed a source of this unit.\n+\n                Unit_Name := SD.Unit_Name;\n \n                if Unit_Name /= No_Name"}]}