{"sha": "997d3894fbd931e4dfa210a809175d7c2dc73b4b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTk3ZDM4OTRmYmQ5MzFlNGRmYTIxMGE4MDkxNzVkN2MyZGM3M2I0Yg==", "commit": {"author": {"name": "Bob Duff", "email": "duff@adacore.com", "date": "2021-04-07T11:52:07Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-06-29T14:23:45Z"}, "message": "[Ada] Fix bug in node/entity kind numbers in sinfo/einfo.h\n\ngcc/ada/\n\n\t* gen_il-gen.adb (Put_C_Type_And_Subtypes): Put the correct\n\tnumbers.\n\t* gen_il-internals.ads, gen_il-internals.adb: (Pos): Remove this\n\tfunction. It was assuming that the order of the enumeration\n\tliterals in Type_Enum is the same as the order of the generated\n\ttypes Node_Kind and Entity_Kind, which is not true.", "tree": {"sha": "0951d51e40da6fa3a8b688fa61821c4bfc31e973", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0951d51e40da6fa3a8b688fa61821c4bfc31e973"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/997d3894fbd931e4dfa210a809175d7c2dc73b4b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/997d3894fbd931e4dfa210a809175d7c2dc73b4b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/997d3894fbd931e4dfa210a809175d7c2dc73b4b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/997d3894fbd931e4dfa210a809175d7c2dc73b4b/comments", "author": {"login": "bobduff", "id": 29099567, "node_id": "MDQ6VXNlcjI5MDk5NTY3", "avatar_url": "https://avatars.githubusercontent.com/u/29099567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bobduff", "html_url": "https://github.com/bobduff", "followers_url": "https://api.github.com/users/bobduff/followers", "following_url": "https://api.github.com/users/bobduff/following{/other_user}", "gists_url": "https://api.github.com/users/bobduff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bobduff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bobduff/subscriptions", "organizations_url": "https://api.github.com/users/bobduff/orgs", "repos_url": "https://api.github.com/users/bobduff/repos", "events_url": "https://api.github.com/users/bobduff/events{/privacy}", "received_events_url": "https://api.github.com/users/bobduff/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "10215ba9d7848b858d3c2103807222675028225a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10215ba9d7848b858d3c2103807222675028225a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/10215ba9d7848b858d3c2103807222675028225a"}], "stats": {"total": 31, "additions": 13, "deletions": 18}, "files": [{"sha": "6a61117a8319263f9110e288f34d232fee0595bf", "filename": "gcc/ada/gen_il-gen.adb", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/997d3894fbd931e4dfa210a809175d7c2dc73b4b/gcc%2Fada%2Fgen_il-gen.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/997d3894fbd931e4dfa210a809175d7c2dc73b4b/gcc%2Fada%2Fgen_il-gen.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgen_il-gen.adb?ref=997d3894fbd931e4dfa210a809175d7c2dc73b4b", "patch": "@@ -2930,9 +2930,15 @@ package body Gen_IL.Gen is\n       procedure Put_C_Type_And_Subtypes\n         (S : in out Sink; Root : Root_Type) is\n \n+         Cur_Pos : Root_Nat := 0;\n+         --  Current Node_Kind'Pos or Entity_Kind'Pos to be printed\n+\n          procedure Put_Enum_Lit (T : Node_Or_Entity_Type);\n          --  Print out the #define corresponding to the Ada enumeration literal\n          --  for T in Node_Kind and Entity_Kind (i.e. concrete types).\n+         --  This looks like \"#define Some_Kind <pos>\", where Some_Kind\n+         --  is the Node_Kind or Entity_Kind enumeration literal, and\n+         --  <pos> is Node_Kind'Pos or Entity_Kind'Pos of that literal.\n \n          procedure Put_Kind_Subtype (T : Node_Or_Entity_Type);\n          --  Print out the SUBTYPE macro call corresponding to an abstract\n@@ -2941,7 +2947,8 @@ package body Gen_IL.Gen is\n          procedure Put_Enum_Lit (T : Node_Or_Entity_Type) is\n          begin\n             if T in Concrete_Type then\n-               Put (S, \"#define \" & Image (T) & \" \" & Image (Pos (T)) & \"\" & LF);\n+               Put (S, \"#define \" & Image (T) & \" \" & Image (Cur_Pos) & LF);\n+               Cur_Pos := Cur_Pos + 1;\n             end if;\n          end Put_Enum_Lit;\n \n@@ -2961,7 +2968,7 @@ package body Gen_IL.Gen is\n          Iterate_Types (Root, Pre => Put_Enum_Lit'Access);\n \n          Put (S, \"#define Number_\" & Node_Or_Entity (Root) & \"_Kinds \" &\n-              Image (Pos (Last_Concrete (Root)) + 1) & \"\" & LF & LF);\n+              Image (Cur_Pos) & \"\" & LF & LF);\n \n          Iterate_Types (Root, Pre => Put_Kind_Subtype'Access);\n "}, {"sha": "d77fe7a6e2d7f6bac11ce2e0f2fab62d9ec9892c", "filename": "gcc/ada/gen_il-internals.adb", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/997d3894fbd931e4dfa210a809175d7c2dc73b4b/gcc%2Fada%2Fgen_il-internals.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/997d3894fbd931e4dfa210a809175d7c2dc73b4b/gcc%2Fada%2Fgen_il-internals.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgen_il-internals.adb?ref=997d3894fbd931e4dfa210a809175d7c2dc73b4b", "patch": "@@ -477,16 +477,4 @@ package body Gen_IL.Internals is\n       Put (S, \"--  End type hierarchy for \" & N_Or_E & LF & LF);\n    end Put_Type_Hierarchy;\n \n-   ---------\n-   -- Pos --\n-   ---------\n-\n-   function Pos (T : Concrete_Type) return Root_Nat is\n-      First : constant Concrete_Type :=\n-        (if T in Concrete_Node then Concrete_Node'First\n-         else Concrete_Entity'First);\n-   begin\n-      return Type_Enum'Pos (T) - Type_Enum'Pos (First);\n-   end Pos;\n-\n end Gen_IL.Internals;"}, {"sha": "9c5779bd2d8292c92f851658fb631fbf9c476c25", "filename": "gcc/ada/gen_il-internals.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/997d3894fbd931e4dfa210a809175d7c2dc73b4b/gcc%2Fada%2Fgen_il-internals.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/997d3894fbd931e4dfa210a809175d7c2dc73b4b/gcc%2Fada%2Fgen_il-internals.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgen_il-internals.ads?ref=997d3894fbd931e4dfa210a809175d7c2dc73b4b", "patch": "@@ -202,7 +202,10 @@ package Gen_IL.Internals is\n         Nil'Access);\n    --  Iterate top-down on the type hierarchy. Call Pre and Post before and\n    --  after walking child types. Note that this ignores union types, because\n-   --  they are nonhierarchical.\n+   --  they are nonhierarchical. The order in which concrete types are visited\n+   --  matches the order of the generated enumeration types Node_Kind and\n+   --  Entity_Kind, which is not the same as the order of the Type_Enum\n+   --  type in Gen_IL.Types.\n \n    function Is_Descendant (Ancestor, Descendant : Node_Or_Entity_Type)\n      return Boolean;\n@@ -212,9 +215,6 @@ package Gen_IL.Internals is\n \n    procedure Put_Type_Hierarchy (S : in out Sink; Root : Root_Type);\n \n-   function Pos (T : Concrete_Type) return Root_Nat;\n-   --  Return Node_Kind'Pos (T) or Entity_Kind'Pos (T)\n-\n    ----------------\n \n    type Field_Desc is record"}]}