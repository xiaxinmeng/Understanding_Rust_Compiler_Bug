{"sha": "7e8ed0a6e48698fd6c8eaf189f4b771c6ed2e08b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2U4ZWQwYTZlNDg2OThmZDZjOGVhZjE4OWY0Yjc3MWM2ZWQyZTA4Yg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-16T10:52:29Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-16T10:52:29Z"}, "message": "[multiple changes]\n\n2009-04-16  Jerome Lambourg  <lambourg@adacore.com>\n\n\t* sem_prag.adb (Process_Import_Or_Interface): With .NET,\n\tAccess_Subprogram types can also be imported.\n\t(Check_Form_Of_Interface_Name): Accept '/' character in entity CIL\n\tnames.\n\n2009-04-16  Ed Schonberg  <schonberg@adacore.com>\n\n\t* exp_ch6.adb (Make_Build_In_Place_Call_In_Object_Declaration):\n\tpreserve homonym chain when the declaration is rewritten into a\n\trenaming declaration, in order to preserve visibility structure.\n\nFrom-SVN: r146169", "tree": {"sha": "dcceae89cc6922c98e0c9881ad141f8aac5867fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dcceae89cc6922c98e0c9881ad141f8aac5867fe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7e8ed0a6e48698fd6c8eaf189f4b771c6ed2e08b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e8ed0a6e48698fd6c8eaf189f4b771c6ed2e08b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e8ed0a6e48698fd6c8eaf189f4b771c6ed2e08b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e8ed0a6e48698fd6c8eaf189f4b771c6ed2e08b/comments", "author": null, "committer": null, "parents": [{"sha": "54634841e755bf81e1c01d6ad9d4284d2b774709", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54634841e755bf81e1c01d6ad9d4284d2b774709", "html_url": "https://github.com/Rust-GCC/gccrs/commit/54634841e755bf81e1c01d6ad9d4284d2b774709"}], "stats": {"total": 28, "additions": 22, "deletions": 6}, "files": [{"sha": "b98108741243b0c0b72e176394ee081538c5d7af", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e8ed0a6e48698fd6c8eaf189f4b771c6ed2e08b/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e8ed0a6e48698fd6c8eaf189f4b771c6ed2e08b/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=7e8ed0a6e48698fd6c8eaf189f4b771c6ed2e08b", "patch": "@@ -1,3 +1,16 @@\n+2009-04-16  Jerome Lambourg  <lambourg@adacore.com>\n+\n+\t* sem_prag.adb (Process_Import_Or_Interface): With .NET,\n+\tAccess_Subprogram types can also be imported.\n+\t(Check_Form_Of_Interface_Name): Accept '/' character in entity CIL\n+\tnames.\n+\n+2009-04-16  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_ch6.adb (Make_Build_In_Place_Call_In_Object_Declaration):\n+\tpreserve homonym chain when the declaration is rewritten into a\n+\trenaming declaration, in order to preserve visibility structure.\n+\n 2009-04-16  Jerome Lambourg  <lambourg@adacore.com>\n \n \t* sem_prag.adb (Analyze_Pragma): Make sure that pragma pack is not"}, {"sha": "bae10b7e4b8b1c76e3fb9cfb55b649bfdc1afb00", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e8ed0a6e48698fd6c8eaf189f4b771c6ed2e08b/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e8ed0a6e48698fd6c8eaf189f4b771c6ed2e08b/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=7e8ed0a6e48698fd6c8eaf189f4b771c6ed2e08b", "patch": "@@ -5588,7 +5588,7 @@ package body Exp_Ch6 is\n          --  in current scope). The Next_Entity links of the two entities also\n          --  have to be swapped since the entities are part of the return\n          --  scope's entity list and the list structure would otherwise be\n-         --  corrupted.\n+         --  corrupted. Finally, the homonym chain must be preserved as well.\n \n          declare\n             Renaming_Def_Id  : constant Entity_Id :=\n@@ -5602,6 +5602,7 @@ package body Exp_Ch6 is\n \n             Set_Next_Entity (Renaming_Def_Id, Next_Entity (Obj_Def_Id));\n             Set_Next_Entity (Obj_Def_Id, Next_Entity_Temp);\n+            Set_Homonym     (Renaming_Def_Id, Homonym (Obj_Def_Id));\n \n             Exchange_Entities (Renaming_Def_Id, Obj_Def_Id);\n          end;"}, {"sha": "cdbd9e338c2e4720b1bf32037f10efcbf6a999f6", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e8ed0a6e48698fd6c8eaf189f4b771c6ed2e08b/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e8ed0a6e48698fd6c8eaf189f4b771c6ed2e08b/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=7e8ed0a6e48698fd6c8eaf189f4b771c6ed2e08b", "patch": "@@ -3531,13 +3531,14 @@ package body Sem_Prag is\n             end loop;\n \n          --  When the convention is Java or CIL, we also allow Import to be\n-         --  given for packages, generic packages, exceptions, and record\n-         --  components.\n+         --  given for packages, generic packages, exceptions, record\n+         --  components, and access to subprograms.\n \n          elsif (C = Convention_Java or else C = Convention_CIL)\n            and then\n              (Is_Package_Or_Generic_Package (Def_Id)\n                or else Ekind (Def_Id) = E_Exception\n+               or else Ekind (Def_Id) = E_Access_Subprogram_Type\n                or else Nkind (Parent (Def_Id)) = N_Component_Declaration)\n          then\n             Set_Imported (Def_Id);\n@@ -3931,16 +3932,17 @@ package body Sem_Prag is\n                   --  For all cases except external names on CLI target,\n                   --  commas, spaces and slashes are dubious (in CLI, we use\n                   --  spaces and commas in external names to specify assembly\n-                  --  version and public key).\n+                  --  version and public key, while slashes can be used in\n+                  --  names to mark nested classes).\n \n                   or else ((not Ext_Name_Case or else VM_Target /= CLI_Target)\n                              and then (Get_Character (C) = ' '\n                                          or else\n                                        Get_Character (C) = ','\n                                          or else\n-                                       Get_Character (C) = '/'\n-                                         or else\n                                        Get_Character (C) = '\\'))\n+                 or else (VM_Target /= CLI_Target\n+                           and then Get_Character (C) = '/')\n                then\n                   Error_Msg\n                     (\"?interface name contains illegal character\","}]}