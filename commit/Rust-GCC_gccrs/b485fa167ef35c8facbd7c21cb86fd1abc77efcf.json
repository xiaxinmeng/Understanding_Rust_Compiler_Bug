{"sha": "b485fa167ef35c8facbd7c21cb86fd1abc77efcf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjQ4NWZhMTY3ZWYzNWM4ZmFjYmQ3YzIxY2I4NmZkMWFiYzc3ZWZjZg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-01-22T21:37:36Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-01-22T21:37:36Z"}, "message": "dwarf2out: Always emit required 0 entries for DWARF 5 in *.debug_line [PR98796]\n\nWhen GCC is emitting .debug_line or .gnu.debuglto_.debug_line section by\nitself (happens either with too old or non-GNU assembler, with\n-gno-as-loc-support or with -flto) on empty translation units, it violates\nthe DWARF 5 requirements.\nThe standard says:\n\"The first entry is the current directory of the compilation.\"\nand a few lines later:\n\"The first entry in the sequence is the primary source file whose file name\nexactly matches that given in the DW_AT_name attribute in the compilation\nunit debugging information entry.\"\nGCC emits 4 zeros (directory entry format count, directories count,\nfilename entry format count and filename count), which would be ok if the\nspec said The first entry may be rather than is.\n\nI had a brief look at whether I could just fall through into the rest of the\nfunction, but there are too many assumptions that there is at least one\nnormal file that it can't be done that way easily.\n\nSo this patch instead extends the early out code to emit the required\nminimum, which is 15 bytes more than we used to emit before.\n\n2021-01-22  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR debug/98796\n\t* dwarf2out.c (output_file_names): For -gdwarf-5, if there are no\n\tfilenames to emit, still emit the required 0 index directory and\n\tfilename entries that match DW_AT_comp_dir and DW_AT_name of the\n\tcompilation unit.", "tree": {"sha": "9b2f7f2326b7fdbea8c200d4fe822e795271df93", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9b2f7f2326b7fdbea8c200d4fe822e795271df93"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b485fa167ef35c8facbd7c21cb86fd1abc77efcf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b485fa167ef35c8facbd7c21cb86fd1abc77efcf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b485fa167ef35c8facbd7c21cb86fd1abc77efcf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b485fa167ef35c8facbd7c21cb86fd1abc77efcf/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "32a93eac7adbb34bb50ed07a9841c870b7ebcb7a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32a93eac7adbb34bb50ed07a9841c870b7ebcb7a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/32a93eac7adbb34bb50ed07a9841c870b7ebcb7a"}], "stats": {"total": 48, "additions": 44, "deletions": 4}, "files": [{"sha": "2ec3449a19062b18fc19a957e1b027c1e0dfc80e", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 44, "deletions": 4, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b485fa167ef35c8facbd7c21cb86fd1abc77efcf/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b485fa167ef35c8facbd7c21cb86fd1abc77efcf/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=b485fa167ef35c8facbd7c21cb86fd1abc77efcf", "patch": "@@ -12252,10 +12252,50 @@ output_file_names (void)\n     {\n       if (dwarf_version >= 5)\n \t{\n-\t  dw2_asm_output_data (1, 0, \"Directory entry format count\");\n-\t  dw2_asm_output_data_uleb128 (0, \"Directories count\");\n-\t  dw2_asm_output_data (1, 0, \"File name entry format count\");\n-\t  dw2_asm_output_data_uleb128 (0, \"File names count\");\n+\t  const char *comp_dir = comp_dir_string ();\n+\t  if (comp_dir == NULL)\n+\t    comp_dir = \"\";\n+\t  dw2_asm_output_data (1, 1, \"Directory entry format count\");\n+\t  enum dwarf_form str_form = DW_FORM_string;\n+\t  if (DWARF5_USE_DEBUG_LINE_STR)\n+\t    str_form = DW_FORM_line_strp;\n+\t  dw2_asm_output_data_uleb128 (DW_LNCT_path, \"DW_LNCT_path\");\n+\t  dw2_asm_output_data_uleb128 (str_form, \"%s\",\n+\t\t\t\t       get_DW_FORM_name (str_form));\n+\t  dw2_asm_output_data_uleb128 (1, \"Directories count\");\n+\t  if (str_form == DW_FORM_string)\n+\t    dw2_asm_output_nstring (comp_dir, -1, \"Directory Entry: %#x\", 0);\n+\t  else\n+\t    output_line_string (str_form, comp_dir, \"Directory Entry\", 0);\n+\t  const char *filename0 = get_AT_string (comp_unit_die (), DW_AT_name);\n+\t  if (filename0 == NULL)\n+\t    filename0 = \"\";\n+#ifdef VMS_DEBUGGING_INFO\n+\t  dw2_asm_output_data (1, 4, \"File name entry format count\");\n+#else\n+\t  dw2_asm_output_data (1, 2, \"File name entry format count\");\n+#endif\n+\t  dw2_asm_output_data_uleb128 (DW_LNCT_path, \"DW_LNCT_path\");\n+\t  dw2_asm_output_data_uleb128 (str_form, \"%s\",\n+\t\t\t\t       get_DW_FORM_name (str_form));\n+\t  dw2_asm_output_data_uleb128 (DW_LNCT_directory_index,\n+\t\t\t\t       \"DW_LNCT_directory_index\");\n+\t  dw2_asm_output_data_uleb128 (DW_FORM_data1, \"%s\",\n+\t\t\t\t       get_DW_FORM_name (DW_FORM_data1));\n+#ifdef VMS_DEBUGGING_INFO\n+\t  dw2_asm_output_data_uleb128 (DW_LNCT_timestamp, \"DW_LNCT_timestamp\");\n+\t  dw2_asm_output_data_uleb128 (DW_FORM_udata, \"DW_FORM_udata\");\n+\t  dw2_asm_output_data_uleb128 (DW_LNCT_size, \"DW_LNCT_size\");\n+\t  dw2_asm_output_data_uleb128 (DW_FORM_udata, \"DW_FORM_udata\");\n+#endif\n+\t  dw2_asm_output_data_uleb128 (1, \"File names count\");\n+\n+\t  output_line_string (str_form, filename0, \"File Entry\", 0);\n+\t  dw2_asm_output_data (1, 0, NULL);\n+#ifdef VMS_DEBUGGING_INFO\n+\t  dw2_asm_output_data_uleb128 (0, NULL);\n+\t  dw2_asm_output_data_uleb128 (0, NULL);\n+#endif\n \t}\n       else\n \t{"}]}