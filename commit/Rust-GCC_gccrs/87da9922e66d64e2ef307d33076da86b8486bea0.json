{"sha": "87da9922e66d64e2ef307d33076da86b8486bea0", "node_id": "C_kwDOANBUbNoAKDg3ZGE5OTIyZTY2ZDY0ZTJlZjMwN2QzMzA3NmRhODZiODQ4NmJlYTA", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-11-22T09:53:17Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-11-22T09:53:17Z"}, "message": "Merge #800\n\n800: Added Remark markdown automation  r=philberty a=mvvsmk\n\nFixes #487 \r\nRemark.yml contains the workflow, and .remarkrc is the linter's config file. The configurations follow the same ones as shown in the reference repo specified by `@philberty` in the issue.\r\n\r\nThe linter works great, and the Test is shown as unsuccessful if a check fails. I also created a PR ( [here](https://github.com/mvvsmk/gccrs/pull/1) )in my fork to test this.  You can check the results out [here.](https://github.com/mvvsmk/gccrs/runs/4126281781?check_suite_focus=true) The test file's name is TEST.md .\r\n\r\nPlease note that the run mentioned above also shows errors in CONTRIBUTING.md and README.md, which were not part of the commit, but the linter goes over them regardless, as they are part of the Repository.\r\n\r\n### The issues that still remain are :\r\n\r\n- There are two files CONTRIBUTING.md and README.md which have a few errors, I could configure the linter to skip them, but it would be much easier to correct them.\r\n- The trigger branch for the workflow was not specified. Hence I use master.\r\n- Custom configurations/changes you would like me to add.\r\n\r\nThis is my first PR, so please let me know if I've missed anything! Thanks.\r\n\r\nSee: #487 \r\n\r\nSigned-off-by: M V V S Manoj Kumar <mvvsmanojkumar@gmail.com>\n\nCo-authored-by: @mvvsmk <mvvsmanojkumar@gmail.com>\nCo-authored-by: M V V S Manoj Kumar <mvvsmanojkumar@gmail.com>", "tree": {"sha": "fec95467decd432589e1138ccd20bfdbaddaf6f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fec95467decd432589e1138ccd20bfdbaddaf6f1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/87da9922e66d64e2ef307d33076da86b8486bea0", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhm2iNCRBK7hj4Ov3rIwAAtbcIAHwnA2RuyFQGuFWdNQRZwVS4\nLMkp8knmLSxFnxOiN7xtMMkTVcK3mVu3mdi8NoojTu4t3rKCa+w6tfz1d9dJOqt6\n6HV3QpzYT6S7JYt4qoij3tykfDr8ICo4PNvX0sxmh/EW61ogd86YmqwPJ8xisP9R\n8YOWPNZMHi+ntG2QrwwZOQxyV0imeYoHAnQCqiHdST2avYK3zf+OtNbAsyiTtSVn\niGlImxir4BKXYE2nsNyPX8EMUAz17yar+kmp/aSYqFx9AiTZ4zHHcDicCPSKh8H7\nCC3N/Yq0b7+MuA2GoIwda5IVesbJpshoFwJvFOYfx6fMDhcpW8o1geNOZJUxL1s=\n=O6R+\n-----END PGP SIGNATURE-----\n", "payload": "tree fec95467decd432589e1138ccd20bfdbaddaf6f1\nparent fece068309e8a3cbeb81539fba14e1c970740a94\nparent 1a03ecbe99422e87f7dcd2fca544d84b2ff924cc\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1637574797 +0000\ncommitter GitHub <noreply@github.com> 1637574797 +0000\n\nMerge #800\n\n800: Added Remark markdown automation  r=philberty a=mvvsmk\n\nFixes #487 \r\nRemark.yml contains the workflow, and .remarkrc is the linter's config file. The configurations follow the same ones as shown in the reference repo specified by `@philberty` in the issue.\r\n\r\nThe linter works great, and the Test is shown as unsuccessful if a check fails. I also created a PR ( [here](https://github.com/mvvsmk/gccrs/pull/1) )in my fork to test this.  You can check the results out [here.](https://github.com/mvvsmk/gccrs/runs/4126281781?check_suite_focus=true) The test file's name is TEST.md .\r\n\r\nPlease note that the run mentioned above also shows errors in CONTRIBUTING.md and README.md, which were not part of the commit, but the linter goes over them regardless, as they are part of the Repository.\r\n\r\n### The issues that still remain are :\r\n\r\n- There are two files CONTRIBUTING.md and README.md which have a few errors, I could configure the linter to skip them, but it would be much easier to correct them.\r\n- The trigger branch for the workflow was not specified. Hence I use master.\r\n- Custom configurations/changes you would like me to add.\r\n\r\nThis is my first PR, so please let me know if I've missed anything! Thanks.\r\n\r\nSee: #487 \r\n\r\nSigned-off-by: M V V S Manoj Kumar <mvvsmanojkumar@gmail.com>\n\nCo-authored-by: @mvvsmk <mvvsmanojkumar@gmail.com>\nCo-authored-by: M V V S Manoj Kumar <mvvsmanojkumar@gmail.com>\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87da9922e66d64e2ef307d33076da86b8486bea0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/87da9922e66d64e2ef307d33076da86b8486bea0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87da9922e66d64e2ef307d33076da86b8486bea0/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fece068309e8a3cbeb81539fba14e1c970740a94", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fece068309e8a3cbeb81539fba14e1c970740a94", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fece068309e8a3cbeb81539fba14e1c970740a94"}, {"sha": "1a03ecbe99422e87f7dcd2fca544d84b2ff924cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a03ecbe99422e87f7dcd2fca544d84b2ff924cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a03ecbe99422e87f7dcd2fca544d84b2ff924cc"}], "stats": {"total": 95, "additions": 77, "deletions": 18}, "files": [{"sha": "9be51e243c353cc94c77d6e830a7e50287086722", "filename": ".github/workflows/Remark.yml", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87da9922e66d64e2ef307d33076da86b8486bea0/.github%2Fworkflows%2FRemark.yml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87da9922e66d64e2ef307d33076da86b8486bea0/.github%2Fworkflows%2FRemark.yml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/.github%2Fworkflows%2FRemark.yml?ref=87da9922e66d64e2ef307d33076da86b8486bea0", "patch": "@@ -0,0 +1,31 @@\n+name: Remark\n+\n+on:\n+  push:\n+    branches:\n+      - master\n+  pull_request:\n+    branches: \n+      - master\n+\n+jobs:\n+  remark:\n+    runs-on: ubuntu-latest\n+\n+    steps:\n+    # Setup\n+    - name: Checkout\n+      uses: actions/checkout@v2.3.3\n+\n+    - name: Setup Node.js\n+      uses: actions/setup-node@v1.4.4\n+      with:\n+        node-version: '12.x'\n+\n+    - name: Install remark\n+      run: npm install remark-cli remark-lint remark-lint-maximum-line-length remark-preset-lint-recommended remark-gfm\n+\n+    # Run\n+    - name: Check *.md files\n+      run: git ls-files -z *.md | xargs -0 -n 1 npx remark -u lint -f > /dev/null\n+"}, {"sha": "a2e00a159fcdb62cb2adbda532cb0544bdc32507", "filename": ".remarkrc", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87da9922e66d64e2ef307d33076da86b8486bea0/.remarkrc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87da9922e66d64e2ef307d33076da86b8486bea0/.remarkrc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/.remarkrc?ref=87da9922e66d64e2ef307d33076da86b8486bea0", "patch": "@@ -0,0 +1,14 @@\n+{\n+  \"plugins\": [\n+    \"remark-preset-lint-recommended\",\n+    \"remark-gfm\",\n+    [\"remark-lint-maximum-line-length\", 120],\n+    [\"remark-lint-list-item-indent\", false],\n+    [\"remark-lint-no-literal-urls\", false],\n+    [\"remark-lint-no-shortcut-reference-link\", false]\n+  ],\n+  \"settings\": {\n+    \"commonmark\": true\n+  }\n+}\n+"}, {"sha": "20e499c29e1e3b2927f79906870dbaf032e63994", "filename": "CONTRIBUTING.md", "status": "modified", "additions": 17, "deletions": 8, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87da9922e66d64e2ef307d33076da86b8486bea0/CONTRIBUTING.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87da9922e66d64e2ef307d33076da86b8486bea0/CONTRIBUTING.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/CONTRIBUTING.md?ref=87da9922e66d64e2ef307d33076da86b8486bea0", "patch": "@@ -4,24 +4,29 @@\n \n * **Ensure the bug was not already reported** by searching on GitHub under [Issues](https://github.com/Rust-GCC/gccrs/issues).\n \n-* If you're unable to find an open issue addressing the problem, [open a new one](https://github.com/Rust-GCC/gccrs/issues/new). Be sure to include a **title and clear description**, as much relevant information as possible, and a **code sample** or an **executable test case** demonstrating the expected behavior that is not occurring.\n+* If you're unable to find an open issue addressing the problem, [open a new one](https://github.com/Rust-GCC/gccrs/issues/new). \n+  Be sure to include a **title and clear description**, as much relevant information as possible, and a **code sample** \n+  or an **executable test case** demonstrating the expected behavior that is not occurring.\n \n #### **Do you want to submit a patch?**\n \n * Open a new GitHub pull request with the patch.\n \n * Ensure the PR description clearly describes the problem and solution. Include the relevant issue number if applicable.\n \n-* Before submitting, GCC development requires copyright assignment or the Developer's Certificate of Origin sign-off. Please see the [Contributing to GCC](https://gcc.gnu.org/contribute.html) guide or [Developer's Certificate of Origin (DCO) Sign-off](https://gcc.gnu.org/dco.html) guide.\n+* Before submitting, GCC development requires copyright assignment or the Developer's Certificate of Origin sign-off.\n+   Please see the [Contributing to GCC](https://gcc.gnu.org/contribute.html) guide or [Developer's Certificate of Origin (DCO) Sign-off](https://gcc.gnu.org/dco.html) guide.\n \n * Patches sent to the [`gcc-rust` mailing list](https://gcc.gnu.org/mailman/listinfo/gcc-rust) are likewise welcome.\n-These will be imported into a GitHub PR to follow the normal review process, and the link to the GitHub PR sent to the submitter.\n+These will be imported into a GitHub PR to follow the normal review process, \n+and the link to the GitHub PR sent to the submitter.\n \n #### **Do you intend to add a new feature or change an existing one?**\n \n * Suggest your change in the [Zulip](https://gcc-rust.zulipchat.com/) and start writing code.\n \n-* Do not open an issue on GitHub until you have collected positive feedback about the change. GitHub issues are primarily intended for bug reports and fixes.\n+* Do not open an issue on GitHub until you have collected positive feedback about the change. \n+  GitHub issues are primarily intended for bug reports and fixes.\n \n #### **Do you have questions about the source code?**\n \n@@ -38,18 +43,21 @@ These will be imported into a GitHub PR to follow the normal review process, and\n \n * Avoid PR's with merge commit unless there's a good reason\n \n-* Where possible please add test cases to `gcc/testsuite/rust/` for all PRs. Some issues may not be testable via dejagnu/automation such as debug dump changes.\n+* Where possible please add test cases to `gcc/testsuite/rust/` for all PRs. \n+  Some issues may not be testable via dejagnu/automation such as debug dump changes.\n \n * Follow the [GCC coding style](https://gcc.gnu.org/codingconventions.html) (see `clang-format` below).\n \n * PRs won't be merged until the build and tests pass.\n \n-* Please take the time to create good git commit messages. See the existing format of them in the git log or refer to something like: https://chris.beams.io/posts/git-commit/\n+* Please take the time to create good git commit messages. \n+  See the existing format of them in the git log or refer to something like: https://chris.beams.io/posts/git-commit/\n \n #### Running `clang-format` locally\n \n * on all files using python scripts\n-... corresponding to what the _Clang Format Lint_ (`.github/workflows/clang-format.yml`) is doing, with `clang-format-10` being available locally, and avoiding the Docker overhead.\n+... corresponding to what the _Clang Format Lint_ (`.github/workflows/clang-format.yml`) \n+is doing, with `clang-format-10` being available locally, and avoiding the Docker overhead.\n \n ```shell\n $ wget 'https://github.com/DoozyX/clang-format-lint-action/raw/v0.11/run-clang-format.py'\n@@ -114,7 +122,8 @@ index 9559374ce60..bd3043295ce 100644\n  };\n ```\n \n-Also note that you can use a given version of `clang-format` by using `git clang-format-10` if you have installed that particular version.\n+Also note that you can use a given version of `clang-format` by using `git clang-format-10` if you have \n+installed that particular version.\n \n Thanks! :heart: :heart: :heart:\n "}, {"sha": "5c8307ff4d8d25ab4c932aa63b97de7b2be14623", "filename": "README.md", "status": "modified", "additions": 15, "deletions": 10, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87da9922e66d64e2ef307d33076da86b8486bea0/README.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87da9922e66d64e2ef307d33076da86b8486bea0/README.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/README.md?ref=87da9922e66d64e2ef307d33076da86b8486bea0", "patch": "@@ -82,7 +82,8 @@ $ $HOME/gccrs-install/gccrs -g -O2 -c test.rs -o test.o\n $ $HOME/gccrs-install/gccrs -o test test.o\n ```\n \n-You can also setup your shell to automatically find the installed compiler. For example for `bash`, add the following in your `$HOME/.bashrc`:\n+You can also setup your shell to automatically find the installed compiler. For example for `bash`, \n+add the following in your `$HOME/.bashrc`:\n \n ```bash\n export PATH=$HOME/gccrs-install/bin:$PATH\n@@ -125,7 +126,8 @@ test cases referencing any issues on Github.\n \n ### Enabling internal checks\n \n-GCC has several internal checks that can be enabled during configuration. In the case of `gccrs`, you can enable the following:\n+GCC has several internal checks that can be enabled during configuration. In the case of `gccrs`, \n+you can enable the following:\n ```bash\n $ ../gccrs/configure --prefix=$HOME/gccrs-install --disable-bootstrap --enable-multilib --enable-languages=rust --enable-checking=gimple,tree,types\n ```\n@@ -143,7 +145,8 @@ $ gdb --args  /some/path/../../rust1 test.rs -quiet -dumpbase arithmetic_express\n  -mtune=generic -march=x86-64 -O0 -w -version -fdiagnostics-color=never -fno-diagnostics-show-caret -fno-diagnostics-show-line-numbers -fdiagnostics-urls=never -fdiagnostics-path-format=separate-events -o test.s -L/lib/x86_64-linux-gnu -L/lib/../lib64 -L/usr/lib/x86_64-linux-gnu\n ```\n \n-Or simply add the `-wrapper gdb,--args` option. This will call each subcommand in `gdb` and you simply have to break/debug in `rust1`:\n+Or simply add the `-wrapper gdb,--args` option. \n+This will call each subcommand in `gdb` and you simply have to break/debug in `rust1`:\n ```bash\n $ gccrs test.rs -O0 -S -o arithmetic_expressions1.s -wrapper gdb,--args\n ```\n@@ -192,16 +195,18 @@ To emit Rust front end debug output, you may add options like `-frust-debug`, `-\n \n If you want to contribute to GCC Rust, you can find more information in [CONTRIBUTING.md](https://github.com/Rust-GCC/gccrs/blob/master/CONTRIBUTING.md).\n \n-Please be aware this project is designed to be pushed upstream to GCC when we reach some milestones, and this means we require\n-copyright assignment or the Developer's Certificate of Origin sign-off. Please see the [Contributing to GCC](https://gcc.gnu.org/contribute.html) guide or [Developer's Certificate of Origin (DCO) Sign-off](https://gcc.gnu.org/dco.html) guide.\n+Please be aware this project is designed to be pushed upstream to GCC when we reach some milestones, \n+and this means we require copyright assignment or the Developer's Certificate of Origin sign-off. \n+Please see the [Contributing to GCC](https://gcc.gnu.org/contribute.html) guide or [Developer's Certificate of Origin (DCO) Sign-off](https://gcc.gnu.org/dco.html) guide.\n \n-Not all contributions must be code; we would love to see new test cases or bugs and issues to be reported. Feel free to add any comments on open PRs\n+Not all contributions must be code; we would love to see new test cases or bugs and issues to be reported. \n+Feel free to add any comments on open PRs\n \n ## Community\n \n We can be found on all usual Rust channels such as Zulip, but we also have our own channels:\n \n- * GCC Rust Zulip: https://gcc-rust.zulipchat.com/\n- * Twitter: https://twitter.com/gcc_rust\n- * GCC Mailing List: https://gcc.gnu.org/mailman/listinfo/gcc-rust\n- * irc: irc.oftc.net - gccrust\n+* GCC Rust Zulip: https://gcc-rust.zulipchat.com/\n+* Twitter: https://twitter.com/gcc_rust\n+* GCC Mailing List: https://gcc.gnu.org/mailman/listinfo/gcc-rust\n+* irc: irc.oftc.net - gccrust"}]}