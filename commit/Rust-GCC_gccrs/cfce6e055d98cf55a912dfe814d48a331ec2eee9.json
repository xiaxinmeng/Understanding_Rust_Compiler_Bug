{"sha": "cfce6e055d98cf55a912dfe814d48a331ec2eee9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2ZjZTZlMDU1ZDk4Y2Y1NWE5MTJkZmU4MTRkNDhhMzMxZWMyZWVlOQ==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2019-03-18T11:28:01Z"}, "committer": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2019-03-18T11:28:01Z"}, "message": "Add forgotten requeing in propagate_subaccesses_across_link\n\n2019-03-18  Martin Jambor  <mjambor@suse.cz>\n\n\tPR tree-optimization/89546\n\t* tree-sra.c (propagate_subaccesses_across_link): Requeue new_acc if\n\tany propagation to its children took place.\n\n\ttestsuite/\n\t* gcc.dg/tree-ssa/pr89546.c: New test.\n\nFrom-SVN: r269761", "tree": {"sha": "f503ed0e9c71e2b6d7bb8244dcf11f98b8ef3659", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f503ed0e9c71e2b6d7bb8244dcf11f98b8ef3659"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cfce6e055d98cf55a912dfe814d48a331ec2eee9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfce6e055d98cf55a912dfe814d48a331ec2eee9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cfce6e055d98cf55a912dfe814d48a331ec2eee9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfce6e055d98cf55a912dfe814d48a331ec2eee9/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4d7dfada8935a362601d1782bd6598e3e1d78d74", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d7dfada8935a362601d1782bd6598e3e1d78d74", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d7dfada8935a362601d1782bd6598e3e1d78d74"}], "stats": {"total": 119, "additions": 117, "deletions": 2}, "files": [{"sha": "d3a9c25e2dd76ef5f900f0f2294eafbd16c8cf86", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfce6e055d98cf55a912dfe814d48a331ec2eee9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfce6e055d98cf55a912dfe814d48a331ec2eee9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cfce6e055d98cf55a912dfe814d48a331ec2eee9", "patch": "@@ -1,3 +1,9 @@\n+2019-03-18  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR tree-optimization/89546\n+\t* tree-sra.c (propagate_subaccesses_across_link): Requeue new_acc if\n+\tany propagation to its children took place.\n+\n 2019-03-18  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \tPR target/89627"}, {"sha": "e9301aac6fb65940bcf8d1f49c559b8aed0c466b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfce6e055d98cf55a912dfe814d48a331ec2eee9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfce6e055d98cf55a912dfe814d48a331ec2eee9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=cfce6e055d98cf55a912dfe814d48a331ec2eee9", "patch": "@@ -1,3 +1,8 @@\n+2019-03-18  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR tree-optimization/89546\n+\t* gcc.dg/tree-ssa/pr89546.c: New test.\n+\n 2019-03-18  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \tPR target/89627"}, {"sha": "c4645ae1858451d561953c236a36f409f3a71bb1", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr89546.c", "status": "added", "additions": 100, "deletions": 0, "changes": 100, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfce6e055d98cf55a912dfe814d48a331ec2eee9/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr89546.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfce6e055d98cf55a912dfe814d48a331ec2eee9/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr89546.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr89546.c?ref=cfce6e055d98cf55a912dfe814d48a331ec2eee9", "patch": "@@ -0,0 +1,100 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O\" } */\n+\n+struct I\n+{\n+  int i;\n+};\n+\n+struct A\n+{\n+  struct I i1;\n+  struct I i2;\n+  struct I i3;\n+};\n+\n+struct B\n+{\n+  struct I i0;\n+  struct A a;\n+};\n+\n+struct C\n+{\n+  struct I i00;\n+  struct B b;\n+};\n+\n+volatile int v;\n+\n+void __attribute__((noipa))\n+consume_i (struct I i)\n+{\n+  v = i.i;\n+}\n+\n+void __attribute__((noipa))\n+consume_a (struct A a)\n+{\n+  v = a.i1.i;\n+}\n+\n+void __attribute__((noipa))\n+consume_b (struct B b)\n+{\n+  v = b.a.i1.i;\n+}\n+\n+void __attribute__((noipa))\n+consume_c (struct C c)\n+{\n+  v = c.b.a.i1.i;\n+}\n+\n+\n+\n+\n+int __attribute__((noipa))\n+foo (struct I input)\n+{\n+  struct I i1, i2, i3;\n+  struct A a1, a2, a3;\n+  struct B b1;\n+  struct C c;\n+\n+  i1 = input;\n+  a1.i1 = i1;\n+  b1.a = a1;\n+\n+  i2.i = 1;\n+  b1.i0 = i2;\n+\n+  c.b = b1;\n+\n+  a2 = c.b.a;\n+  a3 = a2;\n+  i3 = a3.i1;\n+\n+  int t = c.b.i0.i;\n+  a2.i3.i = 4;\n+  consume_i (i1);\n+  consume_i (i2);\n+  consume_b (b1);\n+  consume_a (a1);\n+  consume_a (a2);\n+  consume_a (a3);\n+  consume_c (c);\n+\n+  return i3.i + t;\n+}\n+\n+int\n+main (int argc, char *argv[])\n+{\n+  struct I s;\n+  s.i = 1234;\n+  int i = foo (s);\n+  if (i != 1235)\n+    __builtin_abort ();\n+  return 0;\n+}"}, {"sha": "fd51a3d0323548b35c000f0332f2000bd15f0a8e", "filename": "gcc/tree-sra.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfce6e055d98cf55a912dfe814d48a331ec2eee9/gcc%2Ftree-sra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfce6e055d98cf55a912dfe814d48a331ec2eee9/gcc%2Ftree-sra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-sra.c?ref=cfce6e055d98cf55a912dfe814d48a331ec2eee9", "patch": "@@ -2752,8 +2752,12 @@ propagate_subaccesses_across_link (struct access *lacc, struct access *racc)\n \n \t      rchild->grp_hint = 1;\n \t      new_acc->grp_hint |= new_acc->grp_read;\n-\t      if (rchild->first_child)\n-\t\tret |= propagate_subaccesses_across_link (new_acc, rchild);\n+\t      if (rchild->first_child\n+\t\t  && propagate_subaccesses_across_link (new_acc, rchild))\n+\t\t{\n+\t\t  ret = 1;\n+\t\t  add_access_to_work_queue (new_acc);\n+\t\t}\n \t    }\n \t  else\n \t    {"}]}