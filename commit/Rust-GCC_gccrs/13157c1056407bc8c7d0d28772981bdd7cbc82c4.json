{"sha": "13157c1056407bc8c7d0d28772981bdd7cbc82c4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTMxNTdjMTA1NjQwN2JjOGM3ZDBkMjg3NzI5ODFiZGQ3Y2JjODJjNA==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@gmail.com", "date": "2019-02-04T13:19:49Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2019-02-04T13:19:49Z"}, "message": "[RS6000] Fix potiential buffer overflow\n\n\t* config/rs6000/rs6000.c (rs6000_indirect_call_template_1): Increase\n\tstr[] size to 160, and comment.\n\nFrom-SVN: r268520", "tree": {"sha": "8528a3cfde4f870ccd2dc6202fcec502839adb3d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8528a3cfde4f870ccd2dc6202fcec502839adb3d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/13157c1056407bc8c7d0d28772981bdd7cbc82c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13157c1056407bc8c7d0d28772981bdd7cbc82c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/13157c1056407bc8c7d0d28772981bdd7cbc82c4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13157c1056407bc8c7d0d28772981bdd7cbc82c4/comments", "author": {"login": "amodra", "id": 6006325, "node_id": "MDQ6VXNlcjYwMDYzMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amodra", "html_url": "https://github.com/amodra", "followers_url": "https://api.github.com/users/amodra/followers", "following_url": "https://api.github.com/users/amodra/following{/other_user}", "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}", "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amodra/subscriptions", "organizations_url": "https://api.github.com/users/amodra/orgs", "repos_url": "https://api.github.com/users/amodra/repos", "events_url": "https://api.github.com/users/amodra/events{/privacy}", "received_events_url": "https://api.github.com/users/amodra/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d92ec61d23834a69e962fe66acd7c192c3abc972", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d92ec61d23834a69e962fe66acd7c192c3abc972", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d92ec61d23834a69e962fe66acd7c192c3abc972"}], "stats": {"total": 46, "additions": 44, "deletions": 2}, "files": [{"sha": "3c52283d93cf5e181d7280eb32b404268675ea18", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13157c1056407bc8c7d0d28772981bdd7cbc82c4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13157c1056407bc8c7d0d28772981bdd7cbc82c4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=13157c1056407bc8c7d0d28772981bdd7cbc82c4", "patch": "@@ -1,3 +1,8 @@\n+2019-02-04  Alan Modra  <amodra@gmail.com>\n+\n+\t* config/rs6000/rs6000.c (rs6000_indirect_call_template_1): Increase\n+\tstr[] size to 160, and comment.\n+\n 2019-02-04  Alan Modra  <amodra@gmail.com>\n \n \t* config/rs6000/rs6000.c (rs6000_indirect_call_template_1),"}, {"sha": "711278c742257ba9f7817e9fbee5c3da0366e2ca", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 39, "deletions": 2, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13157c1056407bc8c7d0d28772981bdd7cbc82c4/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13157c1056407bc8c7d0d28772981bdd7cbc82c4/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=13157c1056407bc8c7d0d28772981bdd7cbc82c4", "patch": "@@ -21609,10 +21609,47 @@ rs6000_indirect_call_template_1 (rtx *operands, unsigned int funop,\n \t\t\t\t bool sibcall)\n {\n   /* -Wformat-overflow workaround, without which gcc thinks that %u\n-      might produce 10 digits.  */\n+     might produce 10 digits.  Note that -Wformat-overflow will not\n+     currently warn here for str[], so do not rely on a warning to\n+     ensure str[] is correctly sized.  */\n   gcc_assert (funop <= MAX_RECOG_OPERANDS);\n \n-  static char str[144];  /* 1 spare */\n+  /* Currently, funop is either 0 or 1.  The maximum string is always\n+     a !speculate 64-bit __tls_get_addr call.\n+\n+     ABI_AIX:\n+     .  9\tld 2,%3\\n\\t\n+     . 27\t.reloc .,R_PPC64_TLSGD,%2\\n\\t\n+     . 29\t.reloc .,R_PPC64_PLTSEQ,%z1\\n\\t\n+     .  9\tcrset 2\\n\\t\n+     . 27\t.reloc .,R_PPC64_TLSGD,%2\\n\\t\n+     . 30\t.reloc .,R_PPC64_PLTCALL,%z1\\n\\t\n+     . 10\tbeq%T1l-\\n\\t\n+     . 10\tld 2,%4(1)\n+     .---\n+     .151\n+\n+     ABI_ELFv2:\n+     . 27\t.reloc .,R_PPC64_TLSGD,%2\\n\\t\n+     . 29\t.reloc .,R_PPC64_PLTSEQ,%z1\\n\\t\n+     .  9\tcrset 2\\n\\t\n+     . 27\t.reloc .,R_PPC64_TLSGD,%2\\n\\t\n+     . 30\t.reloc .,R_PPC64_PLTCALL,%z1\\n\\t\n+     . 10\tbeq%T1l-\\n\\t\n+     . 10\tld 2,%3(1)\n+     .---\n+     .142\n+\n+     ABI_V4:\n+     . 27\t.reloc .,R_PPC64_TLSGD,%2\\n\\t\n+     . 35\t.reloc .,R_PPC64_PLTSEQ,%z1+32768\\n\\t\n+     .  9\tcrset 2\\n\\t\n+     . 27\t.reloc .,R_PPC64_TLSGD,%2\\n\\t\n+     . 36\t.reloc .,R_PPC64_PLTCALL,%z1+32768\\n\\t\n+     .  8\tbeq%T1l-\n+     .---\n+     .141  */\n+  static char str[160];  /* 8 spare */\n   char *s = str;\n   const char *ptrload = TARGET_64BIT ? \"d\" : \"wz\";\n "}]}