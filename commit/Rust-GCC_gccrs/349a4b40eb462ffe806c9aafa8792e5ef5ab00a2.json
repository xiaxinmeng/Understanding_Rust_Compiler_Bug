{"sha": "349a4b40eb462ffe806c9aafa8792e5ef5ab00a2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzQ5YTRiNDBlYjQ2MmZmZTgwNmM5YWFmYTg3OTJlNWVmNWFiMDBhMg==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2002-04-28T20:40:39Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2002-04-28T20:40:39Z"}, "message": "ggc-common.c (ggc_mark_rtx_children_1): Rename from...\n\n        * ggc-common.c (ggc_mark_rtx_children_1): Rename from...\n        (ggc_mark_rtx_children): New.\n\nFrom-SVN: r52864", "tree": {"sha": "2d1cd87e9ec72ca228d2bfd87f65be0151f4781f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2d1cd87e9ec72ca228d2bfd87f65be0151f4781f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/349a4b40eb462ffe806c9aafa8792e5ef5ab00a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/349a4b40eb462ffe806c9aafa8792e5ef5ab00a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/349a4b40eb462ffe806c9aafa8792e5ef5ab00a2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/349a4b40eb462ffe806c9aafa8792e5ef5ab00a2/comments", "author": null, "committer": null, "parents": [{"sha": "7a03f82f06d645537bd2a48043d2101770cc4ba9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a03f82f06d645537bd2a48043d2101770cc4ba9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a03f82f06d645537bd2a48043d2101770cc4ba9"}], "stats": {"total": 44, "additions": 44, "deletions": 0}, "files": [{"sha": "b8a0f7c98c29b2cdf256861027c7aaa76945935f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/349a4b40eb462ffe806c9aafa8792e5ef5ab00a2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/349a4b40eb462ffe806c9aafa8792e5ef5ab00a2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=349a4b40eb462ffe806c9aafa8792e5ef5ab00a2", "patch": "@@ -1,3 +1,9 @@\n+2002-04-28  Richard Henderson  <rth@redhat.com>\n+\n+\tPR c/5154\n+\t* ggc-common.c (ggc_mark_rtx_children_1): Rename from... \n+\t(ggc_mark_rtx_children): New.\n+\n 2002-04-28  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/6496"}, {"sha": "a90a01fb51a1e729d2187aab04808c4cf5abf8ee", "filename": "gcc/ggc-common.c", "status": "modified", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/349a4b40eb462ffe806c9aafa8792e5ef5ab00a2/gcc%2Fggc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/349a4b40eb462ffe806c9aafa8792e5ef5ab00a2/gcc%2Fggc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fggc-common.c?ref=349a4b40eb462ffe806c9aafa8792e5ef5ab00a2", "patch": "@@ -38,6 +38,7 @@ static ggc_statistics *ggc_stats;\n /* Trees that have been marked, but whose children still need marking.  */\n varray_type ggc_pending_trees;\n \n+static void ggc_mark_rtx_children_1 PARAMS ((rtx));\n static void ggc_mark_rtx_ptr PARAMS ((void *));\n static void ggc_mark_tree_ptr PARAMS ((void *));\n static void ggc_mark_rtx_varray_ptr PARAMS ((void *));\n@@ -271,6 +272,43 @@ ggc_mark_roots ()\n void\n ggc_mark_rtx_children (r)\n      rtx r;\n+{\n+  rtx i, last;\n+\n+  /* Special case the instruction chain.  This is a data structure whose\n+     chain length is potentially unbounded, and which contain references\n+     within the chain (e.g. label_ref and insn_list).  If do nothing here,\n+     we risk blowing the stack recursing through a long chain of insns.\n+\n+     Combat this by marking all of the instructions in the chain before\n+     marking the contents of those instructions.  */\n+\n+  switch (GET_CODE (r))\n+    {\n+    case INSN:\n+    case JUMP_INSN:\n+    case CALL_INSN:\n+    case NOTE:\n+    case CODE_LABEL:\n+    case BARRIER:\n+      for (i = NEXT_INSN (r); ; i = NEXT_INSN (i))\n+\tif (! ggc_test_and_set_mark (i))\n+\t  break;\n+      last = i;\n+\n+      for (i = NEXT_INSN (r); i != last; i = NEXT_INSN (i))\n+\tggc_mark_rtx_children_1 (i);\n+\n+    default:\n+      break;\n+    }\n+\n+  ggc_mark_rtx_children_1 (r);\n+}\n+\n+static void\n+ggc_mark_rtx_children_1 (r)\n+     rtx r;\n {\n   const char *fmt;\n   int i;"}]}