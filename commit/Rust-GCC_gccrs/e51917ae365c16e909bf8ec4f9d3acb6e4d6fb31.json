{"sha": "e51917ae365c16e909bf8ec4f9d3acb6e4d6fb31", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTUxOTE3YWUzNjVjMTZlOTA5YmY4ZWM0ZjlkM2FjYjZlNGQ2ZmIzMQ==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2007-07-02T10:46:35Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2007-07-02T10:46:35Z"}, "message": "configure.ac: Check for .gnu_attribute on Power.\n\n\t* configure.ac: Check for .gnu_attribute on Power.\n\t* configure: Regenerate.\n\t* config/rs6000/rs6000.c (rs6000_file_start): If supported, output\n\tattribute for floating-point ABI.\n\nFrom-SVN: r126197", "tree": {"sha": "61daf4ddedae2d6b032727d5d673f1310ccbda11", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/61daf4ddedae2d6b032727d5d673f1310ccbda11"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e51917ae365c16e909bf8ec4f9d3acb6e4d6fb31", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e51917ae365c16e909bf8ec4f9d3acb6e4d6fb31", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e51917ae365c16e909bf8ec4f9d3acb6e4d6fb31", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e51917ae365c16e909bf8ec4f9d3acb6e4d6fb31/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3053ce44094e4d0418e02dffc5433ee84e1e530d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3053ce44094e4d0418e02dffc5433ee84e1e530d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3053ce44094e4d0418e02dffc5433ee84e1e530d"}], "stats": {"total": 56, "additions": 56, "deletions": 0}, "files": [{"sha": "036f8f373bd64f895c0992bbcd5f24b84a1fc6c5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e51917ae365c16e909bf8ec4f9d3acb6e4d6fb31/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e51917ae365c16e909bf8ec4f9d3acb6e4d6fb31/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e51917ae365c16e909bf8ec4f9d3acb6e4d6fb31", "patch": "@@ -1,3 +1,10 @@\n+2007-07-02  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* configure.ac: Check for .gnu_attribute on Power.\n+\t* configure: Regenerate.\n+\t* config/rs6000/rs6000.c (rs6000_file_start): If supported, output\n+\tattribute for floating-point ABI.\n+\n 2007-07-02  Ira Rosen  <irar@il.ibm.com>\n \n \tPR tree-optimization/32230"}, {"sha": "f54a216c0eea7f18d65aa1166ea3055ed44dfaa5", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e51917ae365c16e909bf8ec4f9d3acb6e4d6fb31/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e51917ae365c16e909bf8ec4f9d3acb6e4d6fb31/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=e51917ae365c16e909bf8ec4f9d3acb6e4d6fb31", "patch": "@@ -2205,6 +2205,12 @@ rs6000_file_start (void)\n \tputc ('\\n', file);\n     }\n \n+#ifdef HAVE_AS_GNU_ATTRIBUTE\n+  if (TARGET_32BIT && DEFAULT_ABI == ABI_V4)\n+    fprintf (file, \"\\t.gnu_attribute 4, %d\\n\",\n+\t     (TARGET_HARD_FLOAT && TARGET_FPRS) ? 1 : 2);\n+#endif\n+\n   if (DEFAULT_ABI == ABI_AIX || (TARGET_ELF && flag_pic == 2))\n     {\n       switch_to_section (toc_section);"}, {"sha": "c50bf8ccb002554bee2826de5952a1fcfd1c7d71", "filename": "gcc/configure", "status": "modified", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e51917ae365c16e909bf8ec4f9d3acb6e4d6fb31/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e51917ae365c16e909bf8ec4f9d3acb6e4d6fb31/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=e51917ae365c16e909bf8ec4f9d3acb6e4d6fb31", "patch": "@@ -15758,6 +15758,43 @@ cat >>confdefs.h <<\\_ACEOF\n #define HAVE_AS_DFP 1\n _ACEOF\n \n+fi\n+\n+    echo \"$as_me:$LINENO: checking assembler for .gnu_attribute support\" >&5\n+echo $ECHO_N \"checking assembler for .gnu_attribute support... $ECHO_C\" >&6\n+if test \"${gcc_cv_as_powerpc_gnu_attribute+set}\" = set; then\n+  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n+else\n+  gcc_cv_as_powerpc_gnu_attribute=no\n+    if test $in_tree_gas = yes; then\n+    if test $gcc_cv_gas_vers -ge `expr \\( \\( 2 \\* 1000 \\) + 18 \\) \\* 1000 + 0`\n+  then gcc_cv_as_powerpc_gnu_attribute=yes\n+fi\n+  elif test x$gcc_cv_as != x; then\n+    echo '.gnu_attribute 4,1' > conftest.s\n+    if { ac_try='$gcc_cv_as  -o conftest.o conftest.s >&5'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }\n+    then\n+\tgcc_cv_as_powerpc_gnu_attribute=yes\n+    else\n+      echo \"configure: failed program was\" >&5\n+      cat conftest.s >&5\n+    fi\n+    rm -f conftest.o conftest.s\n+  fi\n+fi\n+echo \"$as_me:$LINENO: result: $gcc_cv_as_powerpc_gnu_attribute\" >&5\n+echo \"${ECHO_T}$gcc_cv_as_powerpc_gnu_attribute\" >&6\n+if test $gcc_cv_as_powerpc_gnu_attribute = yes; then\n+\n+cat >>confdefs.h <<\\_ACEOF\n+#define HAVE_AS_GNU_ATTRIBUTE 1\n+_ACEOF\n+\n fi\n     ;;\n "}, {"sha": "56a986a9f90dfa584a7ad08d2df464189354dd02", "filename": "gcc/configure.ac", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e51917ae365c16e909bf8ec4f9d3acb6e4d6fb31/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e51917ae365c16e909bf8ec4f9d3acb6e4d6fb31/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=e51917ae365c16e909bf8ec4f9d3acb6e4d6fb31", "patch": "@@ -2929,6 +2929,12 @@ LCF0:\n       [$conftest_s],,\n       [AC_DEFINE(HAVE_AS_DFP, 1,\n \t  [Define if your assembler supports DFP instructions.])])\n+\n+    gcc_GAS_CHECK_FEATURE([.gnu_attribute support],\n+      gcc_cv_as_powerpc_gnu_attribute, [2,18,0],,\n+      [.gnu_attribute 4,1],,\n+      [AC_DEFINE(HAVE_AS_GNU_ATTRIBUTE, 1,\n+\t  [Define if your assembler supports .gnu_attribute.])])\n     ;;\n \n   mips*-*-*)"}]}