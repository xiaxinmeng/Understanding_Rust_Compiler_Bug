{"sha": "3aab3d374adf1b333661a6948c586c8d665a0807", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2FhYjNkMzc0YWRmMWIzMzM2NjFhNjk0OGM1ODZjOGQ2NjVhMDgwNw==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2019-02-23T14:54:23Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2019-02-23T14:54:23Z"}, "message": "re PR c++/89419 (ICE in is_normal_capture_proxy starting with r253601)\n\n\tPR c++/89419\n\t* g++.dg/cpp1y/lambda-generic-89419.C: New test.\n\nFrom-SVN: r269159", "tree": {"sha": "d494ea6c3cd438de661b083081967481df9a4358", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d494ea6c3cd438de661b083081967481df9a4358"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3aab3d374adf1b333661a6948c586c8d665a0807", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3aab3d374adf1b333661a6948c586c8d665a0807", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3aab3d374adf1b333661a6948c586c8d665a0807", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3aab3d374adf1b333661a6948c586c8d665a0807/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "28a19c5be3c3982595230497f1a6142fda69bdfa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28a19c5be3c3982595230497f1a6142fda69bdfa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/28a19c5be3c3982595230497f1a6142fda69bdfa"}], "stats": {"total": 27, "additions": 27, "deletions": 0}, "files": [{"sha": "3cd5d935edf2fe682d1ae22a165aca3fb568ff7c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3aab3d374adf1b333661a6948c586c8d665a0807/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3aab3d374adf1b333661a6948c586c8d665a0807/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3aab3d374adf1b333661a6948c586c8d665a0807", "patch": "@@ -4,6 +4,9 @@\n \t* g++.dg/cpp0x/noexcept34.C: New test.\n \t* g++.dg/cpp0x/noexcept35.C: New test.\n \n+\tPR c++/89419\n+\t* g++.dg/cpp1y/lambda-generic-89419.C: New test.\n+\n 2019-02-23  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/88117"}, {"sha": "46ce909f3b8fa4f367c534b4a870785c602ff786", "filename": "gcc/testsuite/g++.dg/cpp1y/lambda-generic-89419.C", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3aab3d374adf1b333661a6948c586c8d665a0807/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Flambda-generic-89419.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3aab3d374adf1b333661a6948c586c8d665a0807/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Flambda-generic-89419.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Flambda-generic-89419.C?ref=3aab3d374adf1b333661a6948c586c8d665a0807", "patch": "@@ -0,0 +1,24 @@\n+// PR c++/89419\n+// { dg-do compile { target c++14 } }\n+\n+struct A;\n+struct B {\n+  struct C { C (); C (C &); } b;\n+};\n+struct D { A operator* (); };\n+struct A {\n+  template <typename T> void foo (T x) { x (this); }\n+};\n+struct E {\n+  auto bar () { return e; }\n+  D e;\n+};\n+struct F { B f; int g; };\n+\n+int\n+main ()\n+{\n+  E e;\n+  auto f = *e.bar ();\n+  auto i = [&] { F g; g.g = 1; auto h = [&](auto) { g.g = 0; }; f.foo (h); return g; };\n+}"}]}