{"sha": "5557e16d2a4707e68b2de8bc732aca79f09a1055", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTU1N2UxNmQyYTQ3MDdlNjhiMmRlOGJjNzMyYWNhNzlmMDlhMTA1NQ==", "commit": {"author": {"name": "Bernardo Innocenti", "email": "bernie@develer.com", "date": "2004-07-13T20:54:38Z"}, "committer": {"name": "Bernardo Innocenti", "email": "bernie@gcc.gnu.org", "date": "2004-07-13T20:54:38Z"}, "message": "libiberty.h (ASTRDUP): Add casts required for stricter type conversion rules of C++.\n\n\t* libiberty.h (ASTRDUP): Add casts required for stricter\n\ttype conversion rules of C++.\n\t* obstack.h (obstack_free): Likewise.\n\nFrom-SVN: r84642", "tree": {"sha": "f8cecab53232e9ebcd43e6bdf97e6e810b05c431", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f8cecab53232e9ebcd43e6bdf97e6e810b05c431"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5557e16d2a4707e68b2de8bc732aca79f09a1055", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5557e16d2a4707e68b2de8bc732aca79f09a1055", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5557e16d2a4707e68b2de8bc732aca79f09a1055", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5557e16d2a4707e68b2de8bc732aca79f09a1055/comments", "author": {"login": "codewiz", "id": 1184492, "node_id": "MDQ6VXNlcjExODQ0OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1184492?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codewiz", "html_url": "https://github.com/codewiz", "followers_url": "https://api.github.com/users/codewiz/followers", "following_url": "https://api.github.com/users/codewiz/following{/other_user}", "gists_url": "https://api.github.com/users/codewiz/gists{/gist_id}", "starred_url": "https://api.github.com/users/codewiz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codewiz/subscriptions", "organizations_url": "https://api.github.com/users/codewiz/orgs", "repos_url": "https://api.github.com/users/codewiz/repos", "events_url": "https://api.github.com/users/codewiz/events{/privacy}", "received_events_url": "https://api.github.com/users/codewiz/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ee536902d67e3c2a3f7d54676b4099d7ac6ab797", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee536902d67e3c2a3f7d54676b4099d7ac6ab797", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee536902d67e3c2a3f7d54676b4099d7ac6ab797"}], "stats": {"total": 14, "additions": 10, "deletions": 4}, "files": [{"sha": "55ea8854ba29dc111ee0634bed00e2edea13f594", "filename": "include/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5557e16d2a4707e68b2de8bc732aca79f09a1055/include%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5557e16d2a4707e68b2de8bc732aca79f09a1055/include%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2FChangeLog?ref=5557e16d2a4707e68b2de8bc732aca79f09a1055", "patch": "@@ -1,3 +1,9 @@\n+2004-07-13  Bernardo Innocenti  <bernie@develer.com>\n+\n+\t* libiberty.h (ASTRDUP): Add casts required for stricter\n+\ttype conversion rules of C++.\n+\t* obstack.h (obstack_free): Likewise.\n+\n 2004-05-04  Andreas Jaeger  <aj@suse.de>\n \n \t* demangle.h: Do not use C++ reserved keyword typename as"}, {"sha": "5c1015385806f385dbba28176046eec8c1c07261", "filename": "include/libiberty.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5557e16d2a4707e68b2de8bc732aca79f09a1055/include%2Flibiberty.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5557e16d2a4707e68b2de8bc732aca79f09a1055/include%2Flibiberty.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2Flibiberty.h?ref=5557e16d2a4707e68b2de8bc732aca79f09a1055", "patch": "@@ -309,7 +309,7 @@ extern PTR C_alloca PARAMS ((size_t)) ATTRIBUTE_MALLOC;\n # define ASTRDUP(X) \\\n   (__extension__ ({ const char *const libiberty_optr = (X); \\\n    const unsigned long libiberty_len = strlen (libiberty_optr) + 1; \\\n-   char *const libiberty_nptr = alloca (libiberty_len); \\\n+   char *const libiberty_nptr = (char *const) alloca (libiberty_len); \\\n    (char *) memcpy (libiberty_nptr, libiberty_optr, libiberty_len); }))\n #else\n # define alloca(x) C_alloca(x)\n@@ -323,7 +323,7 @@ extern unsigned long libiberty_len;\n # define ASTRDUP(X) \\\n   (libiberty_optr = (X), \\\n    libiberty_len = strlen (libiberty_optr) + 1, \\\n-   libiberty_nptr = alloca (libiberty_len), \\\n+   libiberty_nptr = (char *) alloca (libiberty_len), \\\n    (char *) memcpy (libiberty_nptr, libiberty_optr, libiberty_len))\n #endif\n "}, {"sha": "007853e805d2115478ba40d8fbe900486d9049f9", "filename": "include/obstack.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5557e16d2a4707e68b2de8bc732aca79f09a1055/include%2Fobstack.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5557e16d2a4707e68b2de8bc732aca79f09a1055/include%2Fobstack.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2Fobstack.h?ref=5557e16d2a4707e68b2de8bc732aca79f09a1055", "patch": "@@ -494,9 +494,9 @@ __extension__\t\t\t\t\t\t\t\t\\\n # define obstack_free(OBSTACK, OBJ)\t\t\t\t\t\\\n __extension__\t\t\t\t\t\t\t\t\\\n ({ struct obstack *__o = (OBSTACK);\t\t\t\t\t\\\n-   void *__obj = (OBJ);\t\t\t\t\t\t\t\\\n+   void *__obj = (void *) (OBJ);\t\t\t\t\t\\\n    if (__obj > (void *)__o->chunk && __obj < (void *)__o->chunk_limit)  \\\n-     __o->next_free = __o->object_base = __obj;\t\t\t\t\\\n+     __o->next_free = __o->object_base = (char *) __obj;\t\t\\\n    else (obstack_free) (__o, __obj); })\n \f\n #else /* not __GNUC__ or not __STDC__ */"}]}