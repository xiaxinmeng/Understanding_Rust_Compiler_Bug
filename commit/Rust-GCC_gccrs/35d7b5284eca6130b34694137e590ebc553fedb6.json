{"sha": "35d7b5284eca6130b34694137e590ebc553fedb6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzVkN2I1Mjg0ZWNhNjEzMGIzNDY5NDEzN2U1OTBlYmM1NTNmZWRiNg==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2019-02-17T17:25:27Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2019-02-17T17:25:27Z"}, "message": "re PR c++/89315 (Cannot convert to std::initializer_list - fails with gcc9 works with gcc8)\n\n\tPR c++/89315\n\t* g++.dg/cpp0x/initlist114.C: New test.\n\nFrom-SVN: r268971", "tree": {"sha": "9ad7ec3c4ba4d365aaa1cc51ab4a83f628bcc41b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9ad7ec3c4ba4d365aaa1cc51ab4a83f628bcc41b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/35d7b5284eca6130b34694137e590ebc553fedb6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35d7b5284eca6130b34694137e590ebc553fedb6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35d7b5284eca6130b34694137e590ebc553fedb6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35d7b5284eca6130b34694137e590ebc553fedb6/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "feb0dcfede4a8c855e85b1b8a9ff3232a4c74229", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/feb0dcfede4a8c855e85b1b8a9ff3232a4c74229", "html_url": "https://github.com/Rust-GCC/gccrs/commit/feb0dcfede4a8c855e85b1b8a9ff3232a4c74229"}], "stats": {"total": 24, "additions": 24, "deletions": 0}, "files": [{"sha": "e128474dc9e10985298f21cd906c48e5f35082c2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35d7b5284eca6130b34694137e590ebc553fedb6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35d7b5284eca6130b34694137e590ebc553fedb6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=35d7b5284eca6130b34694137e590ebc553fedb6", "patch": "@@ -5,6 +5,9 @@\n \n \t* g++.old-deja/g++.robertl/eb82.C: Tweak dg-error.\n \n+\tPR c++/89315\n+\t* g++.dg/cpp0x/initlist114.C: New test.\n+\n 2019-02-16  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR c++/88680"}, {"sha": "ffd7fa973bdd613547d813d5c07c954712f9f567", "filename": "gcc/testsuite/g++.dg/cpp0x/initlist114.C", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35d7b5284eca6130b34694137e590ebc553fedb6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist114.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35d7b5284eca6130b34694137e590ebc553fedb6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist114.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist114.C?ref=35d7b5284eca6130b34694137e590ebc553fedb6", "patch": "@@ -0,0 +1,21 @@\n+// PR c++/89315\n+// { dg-do compile { target c++11 } }\n+\n+#include <initializer_list>\n+\n+struct bar {\n+    bar(std::initializer_list<int>, int = int());\n+};\n+\n+struct i {\n+    const bar & invitees;\n+};\n+\n+template <typename = void> struct n {\n+public:\n+    void m_fn1() { i{{}}; }\n+};\n+\n+struct o : n<> {\n+    void p() { m_fn1(); }\n+};"}]}