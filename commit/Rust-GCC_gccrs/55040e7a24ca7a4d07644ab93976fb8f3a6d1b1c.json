{"sha": "55040e7a24ca7a4d07644ab93976fb8f3a6d1b1c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTUwNDBlN2EyNGNhN2E0ZDA3NjQ0YWI5Mzk3NmZiOGYzYTZkMWIxYw==", "commit": {"author": {"name": "Kelley Cook", "email": "kcook@gcc.gnu.org", "date": "2004-09-27T23:16:29Z"}, "committer": {"name": "R. Kelley Cook", "email": "kcook@gcc.gnu.org", "date": "2004-09-27T23:16:29Z"}, "message": "Makefile.in (STAGESTUFF): Split into ...\n\n2004-09-27  Kelley Cook  <kcook@gcc.gnu.org>\n\n\t* Makefile.in (STAGESTUFF): Split into ...\n\t(STAGECOPYSTUFF, STAGEMOVESTUFF): ... these.\n\t(mostlyclean): Update.\n\t(stage1-start, stage2-start, stage3-start, stage4-start,\n\tstageprofile-start, stagefeedback-start): Copy the STAGECOPYSTUFF.\n\tMove the STAGEMOVESTUFF.\n\nFrom-SVN: r88207", "tree": {"sha": "52d8539ed627f21530980b0a14f6a50b91780f6b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/52d8539ed627f21530980b0a14f6a50b91780f6b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/55040e7a24ca7a4d07644ab93976fb8f3a6d1b1c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55040e7a24ca7a4d07644ab93976fb8f3a6d1b1c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/55040e7a24ca7a4d07644ab93976fb8f3a6d1b1c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55040e7a24ca7a4d07644ab93976fb8f3a6d1b1c/comments", "author": null, "committer": null, "parents": [{"sha": "5572488da4ac74384de756ff9df68998bc9dd453", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5572488da4ac74384de756ff9df68998bc9dd453", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5572488da4ac74384de756ff9df68998bc9dd453"}], "stats": {"total": 40, "additions": 29, "deletions": 11}, "files": [{"sha": "b3c3a529003088a5bc88d90d374c7b7c81823e74", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55040e7a24ca7a4d07644ab93976fb8f3a6d1b1c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55040e7a24ca7a4d07644ab93976fb8f3a6d1b1c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=55040e7a24ca7a4d07644ab93976fb8f3a6d1b1c", "patch": "@@ -1,3 +1,12 @@\n+2004-09-27  Kelley Cook  <kcook@gcc.gnu.org>\n+\n+\t* Makefile.in (STAGESTUFF): Split into ...\n+\t(STAGECOPYSTUFF, STAGEMOVESTUFF): ... these.\n+\t(mostlyclean): Update.\n+\t(stage1-start, stage2-start, stage3-start, stage4-start,\n+\tstageprofile-start, stagefeedback-start): Copy the STAGECOPYSTUFF.\n+\tMove the STAGEMOVESTUFF.\n+\n 2004-09-27  Eric Botcazou  <ebotcazou@libertysurf.fr>\n \n \t* system.h (getpagesize): Return 'int' instead of 'long'."}, {"sha": "f890579008ff7ff08753d331735e25eed94a607d", "filename": "gcc/Makefile.in", "status": "modified", "additions": 20, "deletions": 11, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55040e7a24ca7a4d07644ab93976fb8f3a6d1b1c/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55040e7a24ca7a4d07644ab93976fb8f3a6d1b1c/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=55040e7a24ca7a4d07644ab93976fb8f3a6d1b1c", "patch": "@@ -937,16 +937,19 @@ OBJS-onestep = libbackend.o $(OBJS-archive)\n \n BACKEND = main.o @TREEBROWSER@ libbackend.a $(CPPLIB)\n \n-# Files to be copied away after each stage in building.\n-STAGESTUFF = *$(objext) insn-flags.h insn-config.h insn-codes.h \\\n+# Files to be copied after each stage in building.\n+STAGECOPYSTUFF = insn-flags.h insn-config.h insn-codes.h \\\n  insn-output.c insn-recog.c insn-emit.c insn-extract.c insn-peep.c \\\n  insn-attr.h insn-attrtab.c insn-opinit.c insn-preds.c insn-constants.h \\\n  tm-preds.h \\\n  tree-check.h insn-conditions.c min-insn-modes.c insn-modes.c insn-modes.h \\\n- s-flags s-config s-codes s-mlib s-genrtl s-modes s-gtype gtyp-gen.h \\\n+ genrtl.c genrtl.h gt-*.h gtype-*.h gtype-desc.c gtyp-gen.h\n+\n+# Files to be moved away after each stage in building.\n+STAGEMOVESTUFF = *$(objext) \\\n+ s-flags s-config s-codes s-mlib s-genrtl s-modes s-gtype \\\n  s-gtyp-gen s-output s-recog s-emit s-extract s-peep s-check s-conditions \\\n  s-attr s-attrtab s-opinit s-preds s-constants s-crt0 \\\n- genrtl.c genrtl.h gt-*.h gtype-*.h gtype-desc.c \\\n  xgcc$(exeext) cpp$(exeext) cc1$(exeext) $(EXTRA_PASSES) \\\n  $(EXTRA_PARTS) $(EXTRA_PROGRAMS) gcc-cross$(exeext) \\\n  protoize$(exeext) unprotoize$(exeext) \\\n@@ -3031,7 +3034,7 @@ fsf-funding.pod: funding.texi\n # (less duplicated code).\n \n mostlyclean: lang.mostlyclean\n-\t-rm -f $(STAGESTUFF)\n+\t-rm -f $(STAGECOPYSTUFF) $(STAGEMOVESTUFF)\n \t-rm -f *$(coverageexts)\n \t-rm -rf libgcc\n # Delete build programs\n@@ -3895,7 +3898,8 @@ stage1-start:\n \t done\n # If SPECS is overridden, make sure it is `installed' as specs.\n \t-mv $(SPECS) stage1/specs\n-\t-mv $(STAGESTUFF) stage1\n+\t-mv $(STAGEMOVESTUFF) stage1\n+\t-cp -p $(STAGECOPYSTUFF) stage1\n # Copy as/ld if they exist to stage dir, so that running xgcc from the stage\n # dir will work properly.\n \t-if [ -f as$(exeext) ] ; then (cd stage1 && $(LN_S) ../as$(exeext) .) ; else true ; fi\n@@ -3932,7 +3936,8 @@ stage2-start:\n \t done\n # If SPECS is overridden, make sure it is `installed' as specs.\n \t-mv $(SPECS) stage2/specs\n-\t-mv $(STAGESTUFF) stage2\n+\t-mv $(STAGEMOVESTUFF) stage2\n+\t-cp -p $(STAGECOPYSTUFF) stage2\n # Copy as/ld if they exist to stage dir, so that running xgcc from the stage\n # dir will work properly.\n \t-if [ -f as$(exeext) ] ; then (cd stage2 && $(LN_S) ../as$(exeext) .) ; else true ; fi\n@@ -3965,7 +3970,8 @@ stage3-start:\n \t done\n # If SPECS is overridden, make sure it is `installed' as specs.\n \t-mv $(SPECS) stage3/specs\n-\t-mv $(STAGESTUFF) stage3\n+\t-mv $(STAGEMOVESTUFF) stage3\n+\t-cp -p $(STAGECOPYSTUFF) stage3\n # Copy as/ld if they exist to stage dir, so that running xgcc from the stage\n # dir will work properly.\n \t-if [ -f as$(exeext) ] ; then (cd stage3 && $(LN_S) ../as$(exeext) .) ; else true ; fi\n@@ -3998,7 +4004,8 @@ stage4-start:\n \t done\n # If SPECS is overridden, make sure it is `installed' as specs.\n \t-mv $(SPECS) stage4/specs\n-\t-mv $(STAGESTUFF) stage4\n+\t-mv $(STAGEMOVESTUFF) stage4\n+\t-cp -p $(STAGECOPYSTUFF) stage4\n # Copy as/ld if they exist to stage dir, so that running xgcc from the stage\n # dir will work properly.\n \t-if [ -f as$(exeext) ] ; then (cd stage4 && $(LN_S) ../as$(exeext) .) ; else true ; fi\n@@ -4029,7 +4036,8 @@ stageprofile-start:\n \t do \\\n \t   if [ -d stageprofile/$$dir ] ; then true ; else mkdir stageprofile/$$dir ; fi ; \\\n \t done\n-\t-mv $(STAGESTUFF) stageprofile\n+\t-mv $(STAGEMOVESTUFF) stageprofile\n+\t-cp -p $(STAGECOPYSTUFF) stageprofile\n # Copy as/ld if they exist to stage dir, so that running xgcc from the stage\n # dir will work properly.\n \t-if [ -f as$(exeext) ] ; then (cd stageprofile && $(LN_S) ../as$(exeext) .) ; else true ; fi\n@@ -4060,7 +4068,8 @@ stagefeedback-start:\n \t do \\\n \t   if [ -d stagefeedback/$$dir ] ; then true ; else mkdir stagefeedback/$$dir ; fi ; \\\n \t done\n-\t-mv $(STAGESTUFF) stagefeedback\n+\t-mv $(STAGEMOVESTUFF) stagefeedback\n+\t-cp -p $(STAGECOPYSTUFF) stagefeedback\n # Copy as/ld if they exist to stage dir, so that running xgcc from the stage\n # dir will work properly.\n \t-if [ -f as$(exeext) ] ; then (cd stagefeedback && $(LN_S) ../as$(exeext) .) ; else true ; fi"}]}