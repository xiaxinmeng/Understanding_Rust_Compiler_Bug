{"sha": "e88290aca7d00f3fb5ad0367ea61b0de18254af5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTg4MjkwYWNhN2QwMGYzZmI1YWQwMzY3ZWE2MWIwZGUxODI1NGFmNQ==", "commit": {"author": {"name": "Marcus Shawcroft", "email": "marcus.shawcroft@arm.com", "date": "2010-09-13T15:06:26Z"}, "committer": {"name": "Marcus Shawcroft", "email": "mshawcroft@gcc.gnu.org", "date": "2010-09-13T15:06:26Z"}, "message": "arm.md: (define_attr \"conds\"): Update comment.\n\n2010-09-13  Marcus Shawcroft  <marcus.shawcroft@arm.com>\n\n        * config/arm/arm.md: (define_attr \"conds\"): Update comment.\n\t* config/arm/sync.md (arm_sync_compare_and_swapsi): Change \n          conds attribute to clob.\n          (arm_sync_compare_and_swapsi): Likewise.\n\t  (arm_sync_compare_and_swap<mode>): Likewise.\n\t  (arm_sync_lock_test_and_setsi): Likewise.\n\t  (arm_sync_lock_test_and_set<mode>): Likewise.\n\t  (arm_sync_new_<sync_optab>si): Likewise.\n\t  (arm_sync_new_nandsi): Likewise.\n\t  (arm_sync_new_<sync_optab><mode>): Likewise.\n\t  (arm_sync_new_nand<mode>): Likewise.\n\t  (arm_sync_old_<sync_optab>si): Likewise.\n\t  (arm_sync_old_nandsi): Likewise.\n\t  (arm_sync_old_<sync_optab><mode>): Likewise.\n\t  (arm_sync_old_nand<mode>): Likewise.\n\n2010-09-13  Marcus Shawcroft  <marcus.shawcroft@arm.com>\n\n\t* gcc.target/arm/sync-1.c: New.\n\nFrom-SVN: r164247", "tree": {"sha": "2b8145c41f2fcbd2f00ba2b659c7dcfe9529f06f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2b8145c41f2fcbd2f00ba2b659c7dcfe9529f06f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e88290aca7d00f3fb5ad0367ea61b0de18254af5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e88290aca7d00f3fb5ad0367ea61b0de18254af5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e88290aca7d00f3fb5ad0367ea61b0de18254af5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e88290aca7d00f3fb5ad0367ea61b0de18254af5/comments", "author": {"login": "mshawcroft", "id": 6357566, "node_id": "MDQ6VXNlcjYzNTc1NjY=", "avatar_url": "https://avatars.githubusercontent.com/u/6357566?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mshawcroft", "html_url": "https://github.com/mshawcroft", "followers_url": "https://api.github.com/users/mshawcroft/followers", "following_url": "https://api.github.com/users/mshawcroft/following{/other_user}", "gists_url": "https://api.github.com/users/mshawcroft/gists{/gist_id}", "starred_url": "https://api.github.com/users/mshawcroft/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mshawcroft/subscriptions", "organizations_url": "https://api.github.com/users/mshawcroft/orgs", "repos_url": "https://api.github.com/users/mshawcroft/repos", "events_url": "https://api.github.com/users/mshawcroft/events{/privacy}", "received_events_url": "https://api.github.com/users/mshawcroft/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "97075d3bf181c4b83ae157dac44062b565d7fb68", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97075d3bf181c4b83ae157dac44062b565d7fb68", "html_url": "https://github.com/Rust-GCC/gccrs/commit/97075d3bf181c4b83ae157dac44062b565d7fb68"}], "stats": {"total": 78, "additions": 63, "deletions": 15}, "files": [{"sha": "8d47a83402ec8b70fabf528ba579b34dc2505e48", "filename": "gcc/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e88290aca7d00f3fb5ad0367ea61b0de18254af5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e88290aca7d00f3fb5ad0367ea61b0de18254af5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e88290aca7d00f3fb5ad0367ea61b0de18254af5", "patch": "@@ -1,3 +1,21 @@\n+2010-09-13  Marcus Shawcroft  <marcus.shawcroft@arm.com>\n+\n+\t* config/arm/arm.md: (define_attr \"conds\"): Update comment.\n+\t* config/arm/sync.md (arm_sync_compare_and_swapsi): Change \n+\tconds attribute to clob.\n+        (arm_sync_compare_and_swapsi): Likewise.\n+\t(arm_sync_compare_and_swap<mode>): Likewise.\n+\t(arm_sync_lock_test_and_setsi): Likewise.\n+\t(arm_sync_lock_test_and_set<mode>): Likewise.\n+\t(arm_sync_new_<sync_optab>si): Likewise.\n+\t(arm_sync_new_nandsi): Likewise.\n+\t(arm_sync_new_<sync_optab><mode>): Likewise.\n+\t(arm_sync_new_nand<mode>): Likewise.\n+\t(arm_sync_old_<sync_optab>si): Likewise.\n+\t(arm_sync_old_nandsi): Likewise.\n+\t(arm_sync_old_<sync_optab><mode>): Likewise.\n+\t(arm_sync_old_nand<mode>): Likewise.\n+\n 2010-09-13  Olivier Hainque  <hainque@adacore.com>\n \n         * fwprop.c (forward_propagate_and_simplify): Only attach a"}, {"sha": "d10d04ba74d948d3dd3b046083c617c6e8bbc4d3", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e88290aca7d00f3fb5ad0367ea61b0de18254af5/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e88290aca7d00f3fb5ad0367ea61b0de18254af5/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=e88290aca7d00f3fb5ad0367ea61b0de18254af5", "patch": "@@ -419,10 +419,11 @@\n ; CLOB means that the condition codes are altered in an undefined manner, if\n ;   they are altered at all\n ;\n-; UNCONDITIONAL means the instions can not be conditionally executed.\n+; UNCONDITIONAL means the instruction can not be conditionally executed and\n+;   that the instruction does not use or alter the condition codes.\n ;\n-; NOCOND means that the condition codes are neither altered nor affect the\n-;   output of this insn\n+; NOCOND means that the instruction does not use or alter the condition\n+;   codes but can be converted into a conditionally exectuted instruction.\n \n (define_attr \"conds\" \"use,set,clob,unconditional,nocond\"\n \t(if_then_else"}, {"sha": "4c4b4fa106bdf86cc06f5eb2b34d58a54ca2ae6f", "filename": "gcc/config/arm/sync.md", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e88290aca7d00f3fb5ad0367ea61b0de18254af5/gcc%2Fconfig%2Farm%2Fsync.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e88290aca7d00f3fb5ad0367ea61b0de18254af5/gcc%2Fconfig%2Farm%2Fsync.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fsync.md?ref=e88290aca7d00f3fb5ad0367ea61b0de18254af5", "patch": "@@ -300,7 +300,7 @@\n    (set_attr \"sync_new_value\"       \"3\")\n    (set_attr \"sync_t1\"              \"0\")\n    (set_attr \"sync_t2\"              \"4\")\n-   (set_attr \"conds\" \"nocond\")\n+   (set_attr \"conds\" \"clob\")\n    (set_attr \"predicable\" \"no\")])\n \n (define_insn \"arm_sync_compare_and_swap<mode>\"\n@@ -327,7 +327,7 @@\n    (set_attr \"sync_new_value\"       \"3\")\n    (set_attr \"sync_t1\"              \"0\")\n    (set_attr \"sync_t2\"              \"4\")\n-   (set_attr \"conds\" \"nocond\")\n+   (set_attr \"conds\" \"clob\")\n    (set_attr \"predicable\" \"no\")])\n \n (define_insn \"arm_sync_lock_test_and_setsi\"\n@@ -348,7 +348,7 @@\n    (set_attr \"sync_new_value\"       \"2\")\n    (set_attr \"sync_t1\"              \"0\")\n    (set_attr \"sync_t2\"              \"3\")\n-   (set_attr \"conds\" \"nocond\")\n+   (set_attr \"conds\" \"clob\")\n    (set_attr \"predicable\" \"no\")])\n \n (define_insn \"arm_sync_lock_test_and_set<mode>\"\n@@ -369,7 +369,7 @@\n    (set_attr \"sync_new_value\"       \"2\")\n    (set_attr \"sync_t1\"              \"0\")\n    (set_attr \"sync_t2\"              \"3\")\n-   (set_attr \"conds\" \"nocond\")\n+   (set_attr \"conds\" \"clob\")\n    (set_attr \"predicable\" \"no\")])\n \n (define_insn \"arm_sync_new_<sync_optab>si\"\n@@ -394,7 +394,7 @@\n    (set_attr \"sync_t1\"              \"0\")\n    (set_attr \"sync_t2\"              \"3\")\n    (set_attr \"sync_op\"              \"<sync_optab>\")\n-   (set_attr \"conds\" \"nocond\")\n+   (set_attr \"conds\" \"clob\")\n    (set_attr \"predicable\" \"no\")])\n \n (define_insn \"arm_sync_new_nandsi\"\n@@ -419,7 +419,7 @@\n    (set_attr \"sync_t1\"              \"0\")\n    (set_attr \"sync_t2\"              \"3\")\n    (set_attr \"sync_op\"              \"nand\")\n-   (set_attr \"conds\" \"nocond\")\n+   (set_attr \"conds\" \"clob\")\n    (set_attr \"predicable\" \"no\")])\n \n (define_insn \"arm_sync_new_<sync_optab><mode>\"\n@@ -445,7 +445,7 @@\n    (set_attr \"sync_t1\"              \"0\")\n    (set_attr \"sync_t2\"              \"3\")\n    (set_attr \"sync_op\"              \"<sync_optab>\")\n-   (set_attr \"conds\" \"nocond\")\n+   (set_attr \"conds\" \"clob\")\n    (set_attr \"predicable\" \"no\")])\n \n (define_insn \"arm_sync_new_nand<mode>\"\n@@ -472,7 +472,7 @@\n    (set_attr \"sync_t1\"              \"0\")\n    (set_attr \"sync_t2\"              \"3\")\n    (set_attr \"sync_op\"              \"nand\")\n-   (set_attr \"conds\" \"nocond\")\n+   (set_attr \"conds\" \"clob\")\n    (set_attr \"predicable\" \"no\")])\n \n (define_insn \"arm_sync_old_<sync_optab>si\"\n@@ -498,7 +498,7 @@\n    (set_attr \"sync_t1\"              \"3\")\n    (set_attr \"sync_t2\"              \"4\")\n    (set_attr \"sync_op\"              \"<sync_optab>\")\n-   (set_attr \"conds\" \"nocond\")\n+   (set_attr \"conds\" \"clob\")\n    (set_attr \"predicable\" \"no\")])\n \n (define_insn \"arm_sync_old_nandsi\"\n@@ -524,7 +524,7 @@\n    (set_attr \"sync_t1\"              \"3\")\n    (set_attr \"sync_t2\"              \"4\")\n    (set_attr \"sync_op\"              \"nand\")\n-   (set_attr \"conds\" \"nocond\")\n+   (set_attr \"conds\" \t\t    \"clob\")\n    (set_attr \"predicable\" \"no\")])\n \n (define_insn \"arm_sync_old_<sync_optab><mode>\"\n@@ -551,7 +551,7 @@\n    (set_attr \"sync_t1\"              \"3\")\n    (set_attr \"sync_t2\"              \"4\")\n    (set_attr \"sync_op\"              \"<sync_optab>\")\n-   (set_attr \"conds\" \"nocond\")\n+   (set_attr \"conds\" \t\t    \"clob\")\n    (set_attr \"predicable\" \"no\")])\n \n (define_insn \"arm_sync_old_nand<mode>\"\n@@ -578,7 +578,7 @@\n    (set_attr \"sync_t1\"              \"3\")\n    (set_attr \"sync_t2\"              \"4\")\n    (set_attr \"sync_op\"              \"nand\")\n-   (set_attr \"conds\" \"nocond\")\n+   (set_attr \"conds\"                \"clob\")\n    (set_attr \"predicable\" \"no\")])\n \n (define_insn \"*memory_barrier\""}, {"sha": "efcecb6c53e2909eb46841bb6c373683c58ffd2c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e88290aca7d00f3fb5ad0367ea61b0de18254af5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e88290aca7d00f3fb5ad0367ea61b0de18254af5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e88290aca7d00f3fb5ad0367ea61b0de18254af5", "patch": "@@ -1,3 +1,7 @@\n+2010-09-13  Marcus Shawcroft  <marcus.shawcroft@arm.com>\n+\n+\t* gcc.target/arm/sync-1.c: New.\n+\n 2010-09-12  Olivier Hainque  <hainque@adacore.com>\n \n \t* gnat.dg/memtrap.adb: New test."}, {"sha": "ad85a04b398be89f8a003a211901c5844de17b5a", "filename": "gcc/testsuite/gcc.target/arm/sync-1.c", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e88290aca7d00f3fb5ad0367ea61b0de18254af5/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsync-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e88290aca7d00f3fb5ad0367ea61b0de18254af5/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsync-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsync-1.c?ref=e88290aca7d00f3fb5ad0367ea61b0de18254af5", "patch": "@@ -0,0 +1,25 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O2 -march=armv7-a\" } */\n+\n+volatile int mem;\n+\n+int\n+bar (int x, int y)\n+{\n+  if (x)\n+    __sync_fetch_and_add(&mem, y);\n+  return 0;\n+}\n+\n+extern void abort (void);\n+\n+int\n+main (int argc, char *argv[])\n+{\n+  mem = 0;\n+  bar (0, 1);\n+  bar (1, 1);\n+  if (mem != 1)\n+    abort ();\n+  return 0;\n+}"}]}