{"sha": "cd4c46f3dec9d5c995069f888fa18408b759b7f8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2Q0YzQ2ZjNkZWM5ZDVjOTk1MDY5Zjg4OGZhMTg0MDhiNzU5YjdmOA==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2001-11-21T04:57:09Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2001-11-21T04:57:09Z"}, "message": "clipper.c (clipper_movstr): Avoid uninitialized warning.\n\n\t* clipper.c (clipper_movstr): Avoid uninitialized warning.\n\t* i960.c (is_mask, legitimize_address): Likewise.\n\t* m88k.c (m88k_expand_prologue): Likewise.\n\t* m88k.md: Likewise.\n\t* mcore.c (emit_new_cond_insn): Likewise.\n\t* stormy16.c (xstormy16_emit_cbranch): Likewise.\n\nFrom-SVN: r47233", "tree": {"sha": "39968a5611fbf56fcae5e91cd85a8f9408d14df4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/39968a5611fbf56fcae5e91cd85a8f9408d14df4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cd4c46f3dec9d5c995069f888fa18408b759b7f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd4c46f3dec9d5c995069f888fa18408b759b7f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd4c46f3dec9d5c995069f888fa18408b759b7f8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd4c46f3dec9d5c995069f888fa18408b759b7f8/comments", "author": null, "committer": null, "parents": [{"sha": "f607bc57e3c6ec362167f7c11a6886268cfadf29", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f607bc57e3c6ec362167f7c11a6886268cfadf29", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f607bc57e3c6ec362167f7c11a6886268cfadf29"}], "stats": {"total": 30, "additions": 21, "deletions": 9}, "files": [{"sha": "6ce39fc3ae04dfab451d1c522d9f5d3b8776f46c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd4c46f3dec9d5c995069f888fa18408b759b7f8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd4c46f3dec9d5c995069f888fa18408b759b7f8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cd4c46f3dec9d5c995069f888fa18408b759b7f8", "patch": "@@ -1,3 +1,12 @@\n+2001-11-20  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* clipper.c (clipper_movstr): Avoid uninitialized warning.\n+\t* i960.c (is_mask, legitimize_address): Likewise.\n+\t* m88k.c (m88k_expand_prologue): Likewise.\n+\t* m88k.md: Likewise.\n+\t* mcore.c (emit_new_cond_insn): Likewise.\n+\t* stormy16.c (xstormy16_emit_cbranch): Likewise.\n+\n 2001-11-20  Zack Weinberg  <zack@codesourcery.com>\n \n \t* config.gcc: Delete powerpcle-*-solaris2* stanza."}, {"sha": "6ec16eda84db0e8fbcde7e8c90fff3a2a4321eea", "filename": "gcc/config/clipper/clipper.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd4c46f3dec9d5c995069f888fa18408b759b7f8/gcc%2Fconfig%2Fclipper%2Fclipper.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd4c46f3dec9d5c995069f888fa18408b759b7f8/gcc%2Fconfig%2Fclipper%2Fclipper.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fclipper%2Fclipper.c?ref=cd4c46f3dec9d5c995069f888fa18408b759b7f8", "patch": "@@ -223,7 +223,7 @@ void\n clipper_movstr (operands)\n      rtx *operands;\n {\n-  rtx dst,src,cnt,tmp,top,bottom,xops[3];\n+  rtx dst,src,cnt,tmp,top,bottom=NULL_RTX,xops[3];\n   int align;\n   int fixed;\n "}, {"sha": "bea61c4706bfeaafed986841671d4fa2b2f07325", "filename": "gcc/config/i960/i960.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd4c46f3dec9d5c995069f888fa18408b759b7f8/gcc%2Fconfig%2Fi960%2Fi960.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd4c46f3dec9d5c995069f888fa18408b759b7f8/gcc%2Fconfig%2Fi960%2Fi960.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi960%2Fi960.c?ref=cd4c46f3dec9d5c995069f888fa18408b759b7f8", "patch": "@@ -330,7 +330,7 @@ int\n is_mask (val)\n      unsigned int val;\n {\n-  register int start, end, i;\n+  register int start, end = 0, i;\n \n   start = -1;\n   for (i = 0; val != 0; val >>= 1, i++)\n@@ -2118,7 +2118,7 @@ legitimize_address (x, oldx, mode)\n \t  other = XEXP (x, 1);\n \t}\n       else\n-\tconstant = 0;\n+\tconstant = 0, other = 0;\n \n       if (constant)\n \tx = gen_rtx_PLUS (Pmode,"}, {"sha": "adcf5c19f35f6a8d2e549ccda402efc96edc4c5e", "filename": "gcc/config/m88k/m88k.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd4c46f3dec9d5c995069f888fa18408b759b7f8/gcc%2Fconfig%2Fm88k%2Fm88k.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd4c46f3dec9d5c995069f888fa18408b759b7f8/gcc%2Fconfig%2Fm88k%2Fm88k.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm88k%2Fm88k.c?ref=cd4c46f3dec9d5c995069f888fa18408b759b7f8", "patch": "@@ -2017,7 +2017,7 @@ m88k_expand_prologue ()\n     {\n       rtx return_reg = gen_rtx_REG (SImode, 1);\n       rtx label = gen_label_rtx ();\n-      rtx temp_reg;\n+      rtx temp_reg = NULL_RTX;\n \n       if (! save_regs[1])\n \t{"}, {"sha": "75b9d2c50100e25b16ab4c9c5413696ea6f0bba6", "filename": "gcc/config/m88k/m88k.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd4c46f3dec9d5c995069f888fa18408b759b7f8/gcc%2Fconfig%2Fm88k%2Fm88k.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd4c46f3dec9d5c995069f888fa18408b759b7f8/gcc%2Fconfig%2Fm88k%2Fm88k.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm88k%2Fm88k.md?ref=cd4c46f3dec9d5c995069f888fa18408b759b7f8", "patch": "@@ -2931,7 +2931,7 @@\n       rtx label1 = gen_label_rtx ();\n       rtx label2 = gen_label_rtx ();\n       rtx label3 = gen_label_rtx ();\n-      rtx label4;\n+      rtx label4 = NULL_RTX;\n \n       emit_insn (gen_negsi2 (neg_op2, op2));\n       emit_insn (gen_cmpsi (op2, const0_rtx));\n@@ -3799,7 +3799,7 @@\n   register rtx index_diff = gen_reg_rtx (SImode);\n   register rtx low = GEN_INT (-INTVAL (operands[1]));\n   register rtx label = gen_rtx_LABEL_REF (Pmode, operands[3]);\n-  register rtx base;\n+  register rtx base = NULL_RTX;\n \n   if (! CASE_VECTOR_INSNS)\n     /* These instructions are likely to be scheduled and made loop invariant."}, {"sha": "fc68ff3d5aeef4b44bc867bdd8dc70f1b6f37cf8", "filename": "gcc/config/mcore/mcore.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd4c46f3dec9d5c995069f888fa18408b759b7f8/gcc%2Fconfig%2Fmcore%2Fmcore.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd4c46f3dec9d5c995069f888fa18408b759b7f8/gcc%2Fconfig%2Fmcore%2Fmcore.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmcore%2Fmcore.c?ref=cd4c46f3dec9d5c995069f888fa18408b759b7f8", "patch": "@@ -2708,7 +2708,10 @@ emit_new_cond_insn (insn, cond)\n       src = SET_SRC (pat);\n     }\n   else\n-    dst = JUMP_LABEL (insn);\n+    {\n+      dst = JUMP_LABEL (insn);\n+      src = NULL_RTX;\n+    }\n \n   switch (num)\n     {"}, {"sha": "9de076883054512974edf20249b13c9046426d49", "filename": "gcc/config/stormy16/stormy16.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd4c46f3dec9d5c995069f888fa18408b759b7f8/gcc%2Fconfig%2Fstormy16%2Fstormy16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd4c46f3dec9d5c995069f888fa18408b759b7f8/gcc%2Fconfig%2Fstormy16%2Fstormy16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fstormy16%2Fstormy16.c?ref=cd4c46f3dec9d5c995069f888fa18408b759b7f8", "patch": "@@ -132,7 +132,7 @@ xstormy16_emit_cbranch (code, loc)\n     {\n       int unsigned_p = (code == GTU || code == LEU);\n       int gt_p = (code == GT || code == GTU);\n-      rtx lab;\n+      rtx lab = NULL_RTX;\n       \n       if (gt_p)\n \tlab = gen_label_rtx ();\n@@ -148,7 +148,7 @@ xstormy16_emit_cbranch (code, loc)\n \t   && (code == NE || code == EQ)\n \t   && op1 != const0_rtx)\n     {\n-      rtx lab;\n+      rtx lab = NULL_RTX;\n       int num_words = GET_MODE_BITSIZE (mode) / BITS_PER_WORD;\n       int i;\n       "}]}