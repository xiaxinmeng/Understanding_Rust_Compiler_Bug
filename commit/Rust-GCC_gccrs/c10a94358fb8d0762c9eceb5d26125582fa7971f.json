{"sha": "c10a94358fb8d0762c9eceb5d26125582fa7971f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzEwYTk0MzU4ZmI4ZDA3NjJjOWVjZWI1ZDI2MTI1NTgyZmE3OTcxZg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2018-12-02T20:43:49Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2018-12-02T20:43:49Z"}, "message": "re PR target/88278 (Fails to elide zeroing of upper vector register)\n\n\tPR target/88278\n\t* config/i386/sse.md (*vec_concatv4sf_0, *vec_concatv4si_0): New insns.\n\n\t* gcc.target/i386/pr88278.c: New test.\n\t* gcc.target/i386/pr53759.c: Don't expect vmovlps insn, expect vmovq\n\tinstead.\n\t* gcc.target/i386/pr53759-2.c: New test.\n\nFrom-SVN: r266728", "tree": {"sha": "79f59acd478a433ec4f57b990f723c2a6aabdfb0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/79f59acd478a433ec4f57b990f723c2a6aabdfb0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c10a94358fb8d0762c9eceb5d26125582fa7971f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c10a94358fb8d0762c9eceb5d26125582fa7971f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c10a94358fb8d0762c9eceb5d26125582fa7971f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c10a94358fb8d0762c9eceb5d26125582fa7971f/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "92531115113b79b69992df4dae764620474249e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92531115113b79b69992df4dae764620474249e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/92531115113b79b69992df4dae764620474249e5"}], "stats": {"total": 92, "additions": 91, "deletions": 1}, "files": [{"sha": "d74c1a990248a8e70ff1934a0dcd54fa3ee33d5c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c10a94358fb8d0762c9eceb5d26125582fa7971f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c10a94358fb8d0762c9eceb5d26125582fa7971f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c10a94358fb8d0762c9eceb5d26125582fa7971f", "patch": "@@ -1,3 +1,8 @@\n+2018-12-02  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/88278\n+\t* config/i386/sse.md (*vec_concatv4sf_0, *vec_concatv4si_0): New insns.\n+\n 2018-12-02  Jeff Law  <law@redhat.com>\n \n \t* config/h8300/h8300.md (call, call_value): Drop mode from "}, {"sha": "1415c36930b727aad218418d719bbb30c20edbea", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c10a94358fb8d0762c9eceb5d26125582fa7971f/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c10a94358fb8d0762c9eceb5d26125582fa7971f/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=c10a94358fb8d0762c9eceb5d26125582fa7971f", "patch": "@@ -7248,6 +7248,17 @@\n    (set_attr \"prefix\" \"orig,maybe_evex,orig,maybe_evex\")\n    (set_attr \"mode\" \"V4SF,V4SF,V2SF,V2SF\")])\n \n+(define_insn \"*vec_concatv4sf_0\"\n+  [(set (match_operand:V4SF 0 \"register_operand\"       \"=v\")\n+\t(vec_concat:V4SF\n+\t  (match_operand:V2SF 1 \"nonimmediate_operand\" \"xm\")\n+\t  (match_operand:V2SF 2 \"const0_operand\"       \" C\")))]\n+  \"TARGET_SSE2\"\n+  \"%vmovq\\t{%1, %0|%0, %1}\"\n+  [(set_attr \"type\" \"ssemov\")\n+   (set_attr \"prefix\" \"maybe_vex\")\n+   (set_attr \"mode\" \"DF\")])\n+\n ;; Avoid combining registers from different units in a single alternative,\n ;; see comment above inline_secondary_memory_needed function in i386.c\n (define_insn \"vec_set<mode>_0\"\n@@ -14409,6 +14420,23 @@\n    (set_attr \"prefix\" \"orig,maybe_evex,orig,orig,maybe_evex\")\n    (set_attr \"mode\" \"TI,TI,V4SF,V2SF,V2SF\")])\n \n+(define_insn \"*vec_concatv4si_0\"\n+  [(set (match_operand:V4SI 0 \"register_operand\"       \"=v,x\")\n+\t(vec_concat:V4SI\n+\t  (match_operand:V2SI 1 \"nonimmediate_operand\" \"xm,?!*y\")\n+\t  (match_operand:V2SI 2 \"const0_operand\"       \" C,C\")))]\n+  \"TARGET_SSE2\"\n+  \"@\n+   %vmovq\\t{%1, %0|%0, %1}\n+   movq2dq\\t{%1, %0|%0, %1}\"\n+  [(set_attr \"type\" \"ssemov\")\n+   (set_attr \"prefix\" \"maybe_vex,orig\")\n+   (set_attr \"mode\" \"TI\")\n+   (set (attr \"preferred_for_speed\")\n+     (if_then_else (eq_attr \"alternative\" \"1\")\n+       (symbol_ref \"TARGET_INTER_UNIT_MOVES_FROM_VEC\")\n+       (symbol_ref \"true\")))])\n+\n ;; movd instead of movq is required to handle broken assemblers.\n (define_insn \"vec_concatv2di\"\n   [(set (match_operand:V2DI 0 \"register_operand\""}, {"sha": "a28b73ca5a71d180f59ecbac6a81452ff51fadab", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c10a94358fb8d0762c9eceb5d26125582fa7971f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c10a94358fb8d0762c9eceb5d26125582fa7971f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c10a94358fb8d0762c9eceb5d26125582fa7971f", "patch": "@@ -1,5 +1,11 @@\n 2018-12-02  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR target/88278\n+\t* gcc.target/i386/pr88278.c: New test.\n+\t* gcc.target/i386/pr53759.c: Don't expect vmovlps insn, expect vmovq\n+\tinstead.\n+\t* gcc.target/i386/pr53759-2.c: New test.\n+\n \t* c-c++-common/gomp/cancel-1.c (f2): Add various taskloop related\n \ttests.\n "}, {"sha": "ddabb8481dcabe6f02ec9f12509a01d259c362dd", "filename": "gcc/testsuite/gcc.target/i386/pr53759-2.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c10a94358fb8d0762c9eceb5d26125582fa7971f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr53759-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c10a94358fb8d0762c9eceb5d26125582fa7971f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr53759-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr53759-2.c?ref=c10a94358fb8d0762c9eceb5d26125582fa7971f", "patch": "@@ -0,0 +1,16 @@\n+/* PR target/53759 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mavx\" } */\n+\n+#include <xmmintrin.h>\n+\n+void\n+foo (__m128 *x, __m64 *y)\n+{\n+  __m128 a = _mm_add_ps (x[1], x[2]);\n+  __m128 b = _mm_loadl_pi (a, y);\n+  *x = _mm_add_ps (b, b);\n+}\n+\n+/* { dg-final { scan-assembler \"vmovlps\\[ \\\\t\\]\" } } */\n+/* { dg-final { scan-assembler-not \"vshufps\\[ \\\\t\\]\" } } */"}, {"sha": "c30592daf10d5aa885b41721133fd6d2d1dfeaeb", "filename": "gcc/testsuite/gcc.target/i386/pr53759.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c10a94358fb8d0762c9eceb5d26125582fa7971f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr53759.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c10a94358fb8d0762c9eceb5d26125582fa7971f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr53759.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr53759.c?ref=c10a94358fb8d0762c9eceb5d26125582fa7971f", "patch": "@@ -12,5 +12,6 @@ foo (__m128 *x, __m64 *y)\n   *x = _mm_add_ps (b, b);\n }\n \n-/* { dg-final { scan-assembler \"vmovlps\\[ \\\\t\\]\" } } */\n+/* { dg-final { scan-assembler \"vmovq\\[ \\\\t\\]\" } } */\n+/* { dg-final { scan-assembler-not \"vmovlps\\[ \\\\t\\]\" } } */\n /* { dg-final { scan-assembler-not \"vshufps\\[ \\\\t\\]\" } } */"}, {"sha": "84d6e264332c66e39f5ffec98e87da928a7f41b7", "filename": "gcc/testsuite/gcc.target/i386/pr88278.c", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c10a94358fb8d0762c9eceb5d26125582fa7971f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr88278.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c10a94358fb8d0762c9eceb5d26125582fa7971f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr88278.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr88278.c?ref=c10a94358fb8d0762c9eceb5d26125582fa7971f", "patch": "@@ -0,0 +1,34 @@\n+/* PR target/88278 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -msse2 -mno-sse3 -fgimple -masm=att\" } */\n+/* { dg-final { scan-assembler-times \"movq\\[ \\t]+\\\\(\" 2 } } */\n+/* { dg-final { scan-assembler-not \"punpcklqdq\\[ \\t]+\" } } */\n+/* { dg-final { scan-assembler-not \"pxor\\[ \\t]+\" } } */\n+\n+typedef unsigned char v16qi __attribute__((vector_size(16)));\n+typedef unsigned char v8qi __attribute__((vector_size(8)));\n+typedef unsigned int v4si __attribute__((vector_size(16)));\n+typedef unsigned int v2si __attribute__((vector_size(8)));\n+\n+v16qi __GIMPLE foo (unsigned char *p)\n+{\n+  v8qi _2;\n+  v16qi _3;\n+\n+bb_2:\n+  _2 = __MEM <v8qi, 8> (p_1(D));\n+  _3 = _Literal (v16qi) { _2, _Literal (v8qi) { _Literal (unsigned char) 0, _Literal (unsigned char) 0, _Literal (unsigned char) 0, _Literal (unsigned char) 0, _Literal (unsigned char) 0, _Literal (unsigned char) 0, _Literal (unsigned char) 0 } };\n+  return _3;\n+}\n+\n+\n+v4si __GIMPLE bar (unsigned int *p)\n+{\n+  v2si _2;\n+  v4si _3;\n+\n+bb_2:\n+  _2 = __MEM <v2si, 32> (p_1(D));\n+  _3 = _Literal (v4si) { _2, _Literal (v2si) { 0u, 0u } };\n+  return _3;\n+}"}]}