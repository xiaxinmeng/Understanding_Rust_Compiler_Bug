{"sha": "8f0960834317f5a64a9246b0321b5f90f9faaf05", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGYwOTYwODM0MzE3ZjVhNjRhOTI0NmIwMzIxYjVmOTBmOWZhYWYwNQ==", "commit": {"author": {"name": "Andrew Haley", "email": "aph@redhat.com", "date": "2005-09-09T16:04:11Z"}, "committer": {"name": "Andrew Haley", "email": "aph@gcc.gnu.org", "date": "2005-09-09T16:04:11Z"}, "message": "re PR libgcj/23182 (instanceof sometimes fails if compiled with -findirect-dispatch)\n\n2005-09-09  Andrew Haley  <aph@redhat.com>\n\n        PR libgcj/23182\n        * expr.c (pop_type_0): If the expected type is object or ptr\n        (i.e. void*), return the type of the object we just popped from\n        the stack.\n\nFrom-SVN: r104098", "tree": {"sha": "6fd2fb5055153c98b6d6dc6750a93ed970f7081a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6fd2fb5055153c98b6d6dc6750a93ed970f7081a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8f0960834317f5a64a9246b0321b5f90f9faaf05", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f0960834317f5a64a9246b0321b5f90f9faaf05", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f0960834317f5a64a9246b0321b5f90f9faaf05", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f0960834317f5a64a9246b0321b5f90f9faaf05/comments", "author": {"login": "theRealAph", "id": 254637, "node_id": "MDQ6VXNlcjI1NDYzNw==", "avatar_url": "https://avatars.githubusercontent.com/u/254637?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theRealAph", "html_url": "https://github.com/theRealAph", "followers_url": "https://api.github.com/users/theRealAph/followers", "following_url": "https://api.github.com/users/theRealAph/following{/other_user}", "gists_url": "https://api.github.com/users/theRealAph/gists{/gist_id}", "starred_url": "https://api.github.com/users/theRealAph/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theRealAph/subscriptions", "organizations_url": "https://api.github.com/users/theRealAph/orgs", "repos_url": "https://api.github.com/users/theRealAph/repos", "events_url": "https://api.github.com/users/theRealAph/events{/privacy}", "received_events_url": "https://api.github.com/users/theRealAph/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "70e9e3d60c55f89df8887ea9d0db0dc1aa0d4dcf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70e9e3d60c55f89df8887ea9d0db0dc1aa0d4dcf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70e9e3d60c55f89df8887ea9d0db0dc1aa0d4dcf"}], "stats": {"total": 12, "additions": 12, "deletions": 0}, "files": [{"sha": "ed9655338ebfa07378bacefefccd6e08909a650d", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f0960834317f5a64a9246b0321b5f90f9faaf05/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f0960834317f5a64a9246b0321b5f90f9faaf05/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=8f0960834317f5a64a9246b0321b5f90f9faaf05", "patch": "@@ -1,3 +1,10 @@\n+2005-09-09  Andrew Haley  <aph@redhat.com>\n+\n+\tPR libgcj/23182 \n+\t* expr.c (pop_type_0): If the expected type is object or ptr\n+\t(i.e. void*), return the type of the object we just popped from\n+\tthe stack.\n+\n 2005-09-06  Andrew Pinski  <pinskia@physics.uc.edu>\n \n \t* java-gimplify.c (java_gimplify_block): NULL out the old BLOCK's"}, {"sha": "8aa49ada40fe12d0354bf5fc1931514bb1a9abfd", "filename": "gcc/java/expr.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f0960834317f5a64a9246b0321b5f90f9faaf05/gcc%2Fjava%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f0960834317f5a64a9246b0321b5f90f9faaf05/gcc%2Fjava%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fexpr.c?ref=8f0960834317f5a64a9246b0321b5f90f9faaf05", "patch": "@@ -350,6 +350,11 @@ pop_type_0 (tree type, char **messagep)\n     return t;\n   if (TREE_CODE (type) == POINTER_TYPE && TREE_CODE (t) == POINTER_TYPE)\n     {\n+      /* If the expected type we've been passed is object or ptr\n+\t (i.e. void*), the caller needs to know the real type.  */\n+      if (type == ptr_type_node || type == object_ptr_type_node)\n+        return t;\n+\n       /* Since the verifier has already run, we know that any\n \t types we see will be compatible.  In BC mode, this fact\n \t may be checked at runtime, but if that is so then we can"}]}