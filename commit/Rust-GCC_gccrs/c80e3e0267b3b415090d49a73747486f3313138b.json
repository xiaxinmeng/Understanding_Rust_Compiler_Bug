{"sha": "c80e3e0267b3b415090d49a73747486f3313138b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzgwZTNlMDI2N2IzYjQxNTA5MGQ0OWE3Mzc0NzQ4NmYzMzEzMTM4Yg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-05-06T21:57:41Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-05-06T21:57:41Z"}, "message": "re PR c++/48911 ([C++0x] Error for valid array subscript)\n\n\tPR c++/48911\n\t* semantics.c (cxx_eval_array_reference): Handle implicit\n\tinitializers.\n\nFrom-SVN: r173510", "tree": {"sha": "523ded34c464561c71a40891051869504f7dc0f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/523ded34c464561c71a40891051869504f7dc0f8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c80e3e0267b3b415090d49a73747486f3313138b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c80e3e0267b3b415090d49a73747486f3313138b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c80e3e0267b3b415090d49a73747486f3313138b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c80e3e0267b3b415090d49a73747486f3313138b/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d8f426ecc93d65cb9c8c7698116b6bad194fbdb9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8f426ecc93d65cb9c8c7698116b6bad194fbdb9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8f426ecc93d65cb9c8c7698116b6bad194fbdb9"}], "stats": {"total": 63, "additions": 62, "deletions": 1}, "files": [{"sha": "3bc6a14680ff000bbfac2ebfcfe44557c4f5f6c8", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c80e3e0267b3b415090d49a73747486f3313138b/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c80e3e0267b3b415090d49a73747486f3313138b/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=c80e3e0267b3b415090d49a73747486f3313138b", "patch": "@@ -1,3 +1,9 @@\n+2011-05-06  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/48911\n+\t* semantics.c (cxx_eval_array_reference): Handle implicit\n+\tinitializers.\n+\n 2011-05-06  Nathan Froyd  <froydnj@codesourcery.com>\n \n \t* cp-tree.h (type_of_this_parm, class_of_this_parm): New functions."}, {"sha": "ca069f577000e1d76643c191d5ad422bcb43061e", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c80e3e0267b3b415090d49a73747486f3313138b/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c80e3e0267b3b415090d49a73747486f3313138b/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=c80e3e0267b3b415090d49a73747486f3313138b", "patch": "@@ -6323,6 +6323,7 @@ cxx_eval_array_reference (const constexpr_call *call, tree t,\n \t\t\t\t\t   non_constant_p);\n   tree index, oldidx;\n   HOST_WIDE_INT i;\n+  tree elem_type;\n   unsigned len, elem_nchars = 1;\n   if (*non_constant_p)\n     return t;\n@@ -6335,16 +6336,27 @@ cxx_eval_array_reference (const constexpr_call *call, tree t,\n     return t;\n   else if (addr)\n     return build4 (ARRAY_REF, TREE_TYPE (t), ary, index, NULL, NULL);\n+  elem_type = TREE_TYPE (TREE_TYPE (ary));\n   if (TREE_CODE (ary) == CONSTRUCTOR)\n     len = CONSTRUCTOR_NELTS (ary);\n   else\n     {\n-      elem_nchars = (TYPE_PRECISION (TREE_TYPE (TREE_TYPE (ary)))\n+      elem_nchars = (TYPE_PRECISION (elem_type)\n \t\t     / TYPE_PRECISION (char_type_node));\n       len = (unsigned) TREE_STRING_LENGTH (ary) / elem_nchars;\n     }\n   if (compare_tree_int (index, len) >= 0)\n     {\n+      if (tree_int_cst_lt (index, array_type_nelts_top (TREE_TYPE (ary))))\n+\t{\n+\t  /* If it's within the array bounds but doesn't have an explicit\n+\t     initializer, it's value-initialized.  */\n+\t  tree val = build_value_init (elem_type, tf_warning_or_error);\n+\t  return cxx_eval_constant_expression (call, val,\n+\t\t\t\t\t       allow_non_constant, addr,\n+\t\t\t\t\t       non_constant_p);\n+\t}\n+\n       if (!allow_non_constant)\n \terror (\"array subscript out of bound\");\n       *non_constant_p = true;"}, {"sha": "a59b4722b201274dc5a52f230810f0ba0cf2cde8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c80e3e0267b3b415090d49a73747486f3313138b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c80e3e0267b3b415090d49a73747486f3313138b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c80e3e0267b3b415090d49a73747486f3313138b", "patch": "@@ -1,3 +1,7 @@\n+2011-05-06  Jason Merrill  <jason@redhat.com>\n+\n+\t* g++.dg/cpp0x/constexpr-missing.C: New.\n+\n 2011-05-06  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/18918"}, {"sha": "547f552e37752c62931c595cc8faad397b852e10", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-missing.C", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c80e3e0267b3b415090d49a73747486f3313138b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-missing.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c80e3e0267b3b415090d49a73747486f3313138b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-missing.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-missing.C?ref=c80e3e0267b3b415090d49a73747486f3313138b", "patch": "@@ -0,0 +1,39 @@\n+// PR c++/48911\n+// { dg-do compile }\n+// { dg-options \"-std=c++0x\" }\n+\n+#define SA(X) static_assert((X),#X)\n+\n+struct A\n+{\n+  constexpr A () : a (6) {}\n+  int a;\n+};\n+\n+int\n+main ()\n+{\n+  constexpr int a[2] = { 42 };\n+  constexpr int i = a[1];\n+  SA(i==0);\n+  constexpr int b[1] = { };\n+  constexpr int j = b[0];\n+  SA(j==0);\n+  constexpr char c[2] = \"a\";\n+  constexpr char k = c[1];\n+  SA(k==0);\n+  constexpr char d[2] = \"\";\n+  constexpr char l = d[1];\n+  SA(l==0);\n+  constexpr wchar_t e[2] = L\"a\";\n+  constexpr wchar_t m = e[1];\n+  SA(m==0);\n+  constexpr wchar_t f[2] = L\"\";\n+  constexpr wchar_t n = f[1];\n+  SA(n==0);\n+  constexpr A g[2] = { A () };\n+  constexpr A o = g[0];\n+  SA(o.a == 6);\n+  constexpr A p = g[1];\n+  SA(p.a == 6);\n+}"}]}