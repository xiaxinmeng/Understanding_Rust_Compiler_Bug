{"sha": "6c4db916e28bf97a729ec06ff71da03963f0f7e4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmM0ZGI5MTZlMjhiZjk3YTcyOWVjMDZmZjcxZGEwMzk2M2YwZjdlNA==", "commit": {"author": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2020-06-15T14:56:02Z"}, "committer": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2020-06-16T21:33:26Z"}, "message": "d: Use toTypeFunction instead of explicit cast\n\ngcc/d/ChangeLog:\n\n\t* d-frontend.cc (eval_builtin): Use toTypeFunction instead of cast.\n\t* decl.cc (DeclVisitor::visit): Likewise.\n\t* toir.cc (IRVisitor::visit): Likewise.\n\t* typeinfo.cc (TypeInfoVisitor::visit): Likewise.", "tree": {"sha": "eabf2e31908e50431f3c24f88c45ee96010b6a5e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eabf2e31908e50431f3c24f88c45ee96010b6a5e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6c4db916e28bf97a729ec06ff71da03963f0f7e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c4db916e28bf97a729ec06ff71da03963f0f7e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c4db916e28bf97a729ec06ff71da03963f0f7e4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c4db916e28bf97a729ec06ff71da03963f0f7e4/comments", "author": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "89fdaf5ad853c3d55060b9929027946833aee77a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89fdaf5ad853c3d55060b9929027946833aee77a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/89fdaf5ad853c3d55060b9929027946833aee77a"}], "stats": {"total": 35, "additions": 11, "deletions": 24}, "files": [{"sha": "7434819d6449d9417d52485c51de250ebe336551", "filename": "gcc/d/d-frontend.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c4db916e28bf97a729ec06ff71da03963f0f7e4/gcc%2Fd%2Fd-frontend.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c4db916e28bf97a729ec06ff71da03963f0f7e4/gcc%2Fd%2Fd-frontend.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fd-frontend.cc?ref=6c4db916e28bf97a729ec06ff71da03963f0f7e4", "patch": "@@ -177,7 +177,7 @@ eval_builtin (Loc loc, FuncDeclaration *fd, Expressions *arguments)\n   gcc_assert (fndecl_built_in_p (decl)\n \t      || DECL_INTRINSIC_CODE (decl) != INTRINSIC_NONE);\n \n-  TypeFunction *tf = (TypeFunction *) fd->type;\n+  TypeFunction *tf = fd->type->toTypeFunction ();\n   Expression *e = NULL;\n   input_location = make_location_t (loc);\n "}, {"sha": "a6144f7c269f28ff69549df53cf675716170fed0", "filename": "gcc/d/decl.cc", "status": "modified", "additions": 8, "deletions": 20, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c4db916e28bf97a729ec06ff71da03963f0f7e4/gcc%2Fd%2Fdecl.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c4db916e28bf97a729ec06ff71da03963f0f7e4/gcc%2Fd%2Fdecl.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdecl.cc?ref=6c4db916e28bf97a729ec06ff71da03963f0f7e4", "patch": "@@ -449,26 +449,14 @@ class DeclVisitor : public Visitor\n \n \t    if (fd->leastAsSpecialized (fd2) || fd2->leastAsSpecialized (fd))\n \t      {\n-\t\tTypeFunction *tf = (TypeFunction *) fd->type;\n-\t\tif (tf->ty == Tfunction)\n-\t\t  {\n-\t\t    error_at (make_location_t (fd->loc), \"use of %qs\",\n-\t\t\t      fd->toPrettyChars ());\n-\t\t    inform (make_location_t (fd2->loc), \"is hidden by %qs\",\n-\t\t\t    fd2->toPrettyChars ());\n-\t\t    inform (make_location_t (d->loc),\n-\t\t\t    \"use %<alias %s = %s.%s;%> to introduce base class \"\n-\t\t\t    \"overload set\", fd->toChars (),\n-\t\t\t    fd->parent->toChars (), fd->toChars ());\n-\t\t  }\n-\t\telse\n-\t\t  {\n-\t\t    error_at (make_location_t (fd->loc), \"use of %qs\",\n-\t\t\t      fd->toPrettyChars ());\n-\t\t    inform (make_location_t (fd2->loc), \"is hidden by %qs\",\n-\t\t\t      fd2->toPrettyChars ());\n-\t\t  }\n-\n+\t\terror_at (make_location_t (fd->loc), \"use of %qs\",\n+\t\t\t  fd->toPrettyChars ());\n+\t\tinform (make_location_t (fd2->loc), \"is hidden by %qs\",\n+\t\t\tfd2->toPrettyChars ());\n+\t\tinform (make_location_t (d->loc),\n+\t\t\t\"use %<alias %s = %s.%s;%> to introduce base class \"\n+\t\t\t\"overload set\", fd->toChars (),\n+\t\t\tfd->parent->toChars (), fd->toChars ());\n \t\thas_errors = true;\n \t\tbreak;\n \t      }"}, {"sha": "d8a14efd6672fff2e1507a36183c5c8e59e210eb", "filename": "gcc/d/toir.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c4db916e28bf97a729ec06ff71da03963f0f7e4/gcc%2Fd%2Ftoir.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c4db916e28bf97a729ec06ff71da03963f0f7e4/gcc%2Fd%2Ftoir.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Ftoir.cc?ref=6c4db916e28bf97a729ec06ff71da03963f0f7e4", "patch": "@@ -1006,7 +1006,7 @@ class IRVisitor : public Visitor\n \treturn;\n       }\n \n-    TypeFunction *tf = (TypeFunction *)this->func_->type;\n+    TypeFunction *tf = this->func_->type->toTypeFunction ();\n     Type *type = this->func_->tintro != NULL\n       ? this->func_->tintro->nextOf () : tf->nextOf ();\n "}, {"sha": "f3051d3e122c5b8fe14a6ccc08db803ce1069e6b", "filename": "gcc/d/typeinfo.cc", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c4db916e28bf97a729ec06ff71da03963f0f7e4/gcc%2Fd%2Ftypeinfo.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c4db916e28bf97a729ec06ff71da03963f0f7e4/gcc%2Fd%2Ftypeinfo.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Ftypeinfo.cc?ref=6c4db916e28bf97a729ec06ff71da03963f0f7e4", "patch": "@@ -1045,8 +1045,7 @@ class TypeInfoVisitor : public Visitor\n \n     if (sd->xhash)\n       {\n-\tTypeFunction *tf = (TypeFunction *) sd->xhash->type;\n-\tgcc_assert (tf->ty == Tfunction);\n+\tTypeFunction *tf = sd->xhash->type->toTypeFunction ();\n \tif (!tf->isnothrow || tf->trust == TRUSTsystem)\n \t  {\n \t    warning (sd->xhash->loc, \"toHash() must be declared as \""}]}