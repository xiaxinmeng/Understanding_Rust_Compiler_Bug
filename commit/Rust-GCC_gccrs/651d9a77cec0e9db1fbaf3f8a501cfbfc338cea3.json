{"sha": "651d9a77cec0e9db1fbaf3f8a501cfbfc338cea3", "node_id": "C_kwDOANBUbNoAKDY1MWQ5YTc3Y2VjMGU5ZGIxZmJhZjNmOGE1MDFjZmJmYzMzOGNlYTM", "commit": {"author": {"name": "Arthur Cohen", "email": "arthur.cohen@embecosm.com", "date": "2022-03-21T15:52:31Z"}, "committer": {"name": "Arthur Cohen", "email": "arthur.cohen@embecosm.com", "date": "2022-03-21T15:52:31Z"}, "message": "macros: Add helper debugging function for substituted tokens\n\nSince this is less noisy, I guess we can keep it in at all times instead\nof commenting it. Doing it like so - through a single function call -\nmeans that we avoid creating the string entirely in release builds\n\nCo-authored-by: philberty <philip.herron@embecosm.com>", "tree": {"sha": "d62dd97d755d38d08351b8f6f297195e4068ff24", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d62dd97d755d38d08351b8f6f297195e4068ff24"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/651d9a77cec0e9db1fbaf3f8a501cfbfc338cea3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/651d9a77cec0e9db1fbaf3f8a501cfbfc338cea3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/651d9a77cec0e9db1fbaf3f8a501cfbfc338cea3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/651d9a77cec0e9db1fbaf3f8a501cfbfc338cea3/comments", "author": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1bb9a29688ab4ddfec7f8d36ca2cee63c5f258d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1bb9a29688ab4ddfec7f8d36ca2cee63c5f258d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1bb9a29688ab4ddfec7f8d36ca2cee63c5f258d2"}], "stats": {"total": 19, "additions": 16, "deletions": 3}, "files": [{"sha": "f6d63d27d0b8563a8778ce27eaa4529eba3f2ada", "filename": "gcc/rust/expand/rust-macro-expand.cc", "status": "modified", "additions": 16, "deletions": 3, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/651d9a77cec0e9db1fbaf3f8a501cfbfc338cea3/gcc%2Frust%2Fexpand%2Frust-macro-expand.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/651d9a77cec0e9db1fbaf3f8a501cfbfc338cea3/gcc%2Frust%2Fexpand%2Frust-macro-expand.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fexpand%2Frust-macro-expand.cc?ref=651d9a77cec0e9db1fbaf3f8a501cfbfc338cea3", "patch": "@@ -960,6 +960,20 @@ transcribe_context (MacroExpander::ContextType ctx,\n     }\n }\n \n+static std::string\n+tokens_to_str (std::vector<std::unique_ptr<AST::Token>> &tokens)\n+{\n+  std::string str;\n+  if (!tokens.empty ())\n+    {\n+      str += tokens[0]->as_string ();\n+      for (size_t i = 1; i < tokens.size (); i++)\n+\tstr += \" \" + tokens[i]->as_string ();\n+    }\n+\n+  return str;\n+}\n+\n AST::ASTFragment\n MacroExpander::transcribe_rule (\n   AST::MacroRule &match_rule, AST::DelimTokenTree &invoc_token_tree,\n@@ -979,9 +993,8 @@ MacroExpander::transcribe_rule (\n   std::vector<std::unique_ptr<AST::Token>> substituted_tokens\n     = substitute_context.substitute_tokens ();\n \n-  // handy for debugging\n-  // for (auto &tok : substituted_tokens)\n-  //   rust_debug (\"[tok] %s\", tok->as_string ().c_str ());\n+  rust_debug (\"substituted tokens: %s\",\n+\t      tokens_to_str (substituted_tokens).c_str ());\n \n   // parse it to an ASTFragment\n   MacroInvocLexer lex (std::move (substituted_tokens));"}]}