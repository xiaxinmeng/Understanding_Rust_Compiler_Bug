{"sha": "350138ba1d27c8494e0e8a593f290711aec8d4db", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzUwMTM4YmExZDI3Yzg0OTRlMGU4YTU5M2YyOTA3MTFhZWM4ZDRkYg==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2000-12-05T23:06:32Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2000-12-05T23:06:32Z"}, "message": "acinclude.m4: Change up to reflect new directory organization.\n\n\n2000-12-05  Benjamin Kosnik  <bkoz@fillmore.redhat.com>\n\n\t* acinclude.m4: Change up to reflect new directory organization.\n\tAdd in bits for NetBSD.\n\t* aclocal.m4: Regenerate.\n\t* configure: Regenerate.\n\t* config/os/bsd: New directory.\n\t* config/os/netbsd: Move to...\n\t* config/os/bsd/netbsd: ...here.\n\t* config/os/freebsd: Move to...\n\t* config/os/bsd/freebsd: ...here.\n\nFrom-SVN: r38054", "tree": {"sha": "95806d33f56cb21638f286700e7d619b38291f79", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/95806d33f56cb21638f286700e7d619b38291f79"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/350138ba1d27c8494e0e8a593f290711aec8d4db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/350138ba1d27c8494e0e8a593f290711aec8d4db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/350138ba1d27c8494e0e8a593f290711aec8d4db", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/350138ba1d27c8494e0e8a593f290711aec8d4db/comments", "author": null, "committer": null, "parents": [{"sha": "4c42e347eebf50d8a0d82319c3519aba54bd8f24", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c42e347eebf50d8a0d82319c3519aba54bd8f24", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c42e347eebf50d8a0d82319c3519aba54bd8f24"}], "stats": {"total": 267, "additions": 0, "deletions": 267}, "files": [{"sha": "ea97e91a781c7a7da881635f8cff20006480d04f", "filename": "libstdc++-v3/config/os/freebsd/bits/ctype_base.h", "status": "removed", "additions": 0, "deletions": 77, "changes": 77, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c42e347eebf50d8a0d82319c3519aba54bd8f24/libstdc%2B%2B-v3%2Fconfig%2Fos%2Ffreebsd%2Fbits%2Fctype_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c42e347eebf50d8a0d82319c3519aba54bd8f24/libstdc%2B%2B-v3%2Fconfig%2Fos%2Ffreebsd%2Fbits%2Fctype_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Ffreebsd%2Fbits%2Fctype_base.h?ref=4c42e347eebf50d8a0d82319c3519aba54bd8f24", "patch": "@@ -1,77 +0,0 @@\n-// Locale support -*- C++ -*-\n-\n-// Copyright (C) 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-//\n-// ISO C++ 14882: 22.1  Locales\n-//\n-  \n-// Information as gleaned from /usr/include/ctype.h on FreeBSD 3.4,\n-// 4.0 and all versions of the CVS managed file at:\n-// :pserver:anoncvs@anoncvs.freebsd.org:/home/ncvs/src/include/ctype.h\n-  \n-  struct ctype_base\n-  {\n-    typedef unsigned long \tmask;\n-    // Non-standard typedefs.\n-    typedef const int* \t\t__to_type;\n-\n-    enum\n-    {\n-#ifdef _CTYPE_S\n-      // FreeBSD 4.0 uses this style of define.\n-      space = _CTYPE_S,\n-      print = _CTYPE_R,\n-      cntrl = _CTYPE_C,\n-      upper = _CTYPE_U,\n-      lower = _CTYPE_L,\n-      alpha = _CTYPE_A,\n-      digit = _CTYPE_D,\n-      punct = _CTYPE_P,\n-      xdigit = _CTYPE_X,\n-      alnum = _CTYPE_A | _CTYPE_D,\n-      graph = _CTYPE_G\n-#else\n-      // Older versions, including Free BSD 3.4, use this style of define.\n-      space = _S,\n-      print = _R,\n-      cntrl = _C,\n-      upper = _U,\n-      lower = _L,\n-      alpha = _A,\n-      digit = _D,\n-      punct = _P,\n-      xdigit = _X,\n-      alnum = _A | _D,\n-      graph = _G\n-#endif\n-    };\n-  };\n-\n-\n-"}, {"sha": "92ffe703fd6a1307f443ef9e1d6e5d75227bbafa", "filename": "libstdc++-v3/config/os/freebsd/bits/ctype_inline.h", "status": "removed", "additions": 0, "deletions": 78, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c42e347eebf50d8a0d82319c3519aba54bd8f24/libstdc%2B%2B-v3%2Fconfig%2Fos%2Ffreebsd%2Fbits%2Fctype_inline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c42e347eebf50d8a0d82319c3519aba54bd8f24/libstdc%2B%2B-v3%2Fconfig%2Fos%2Ffreebsd%2Fbits%2Fctype_inline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Ffreebsd%2Fbits%2Fctype_inline.h?ref=4c42e347eebf50d8a0d82319c3519aba54bd8f24", "patch": "@@ -1,78 +0,0 @@\n-// Locale support -*- C++ -*-\n-\n-// Copyright (C) 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-//\n-// ISO C++ 14882: 22.1  Locales\n-//\n-  \n-// ctype bits to be inlined go here. Non-inlinable (ie virtual do_*)\n-// functions go in ctype.cc\n-  \n-  bool\n-  ctype<char>::\n-  is(mask __m, char __c) const throw()\n-  { \n-    if (__m & (digit | xdigit))\n-      return __isctype(__c, __m);\n-    else\n-      return __istype(__c, __m);\n-  }\n-\n-  const char*\n-  ctype<char>::\n-  is(const char* __low, const char* __high, mask* __vec) const throw()\n-  {\n-    // XXX\n-    while (__low < __high)\n-      *__vec++ = _M_table[(unsigned char)(*__low++)];\n-    return __high;\n-  }\n-\n-  const char*\n-  ctype<char>::\n-  scan_is(mask __m, const char* __low, const char* __high) const throw()\n-  {\n-    while (__low < __high && !this->is(__m, *__low))\n-      ++__low;\n-    return __low;\n-  }\n-\n-  const char*\n-  ctype<char>::\n-  scan_not(mask __m, const char* __low, const char* __high) const throw()\n-  {\n-    while (__low < __high && this->is(__m, *__low) != 0)\n-      ++__low;\n-    return __low;\n-  }\n-\n-\n-\n-\n-"}, {"sha": "24fdcdb23eac1056e9d6f9d6c8ceba65cfa2d311", "filename": "libstdc++-v3/config/os/freebsd/bits/ctype_noninline.h", "status": "removed", "additions": 0, "deletions": 71, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c42e347eebf50d8a0d82319c3519aba54bd8f24/libstdc%2B%2B-v3%2Fconfig%2Fos%2Ffreebsd%2Fbits%2Fctype_noninline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c42e347eebf50d8a0d82319c3519aba54bd8f24/libstdc%2B%2B-v3%2Fconfig%2Fos%2Ffreebsd%2Fbits%2Fctype_noninline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Ffreebsd%2Fbits%2Fctype_noninline.h?ref=4c42e347eebf50d8a0d82319c3519aba54bd8f24", "patch": "@@ -1,71 +0,0 @@\n-// Locale support -*- C++ -*-\n-\n-// Copyright (C) 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-//\n-// ISO C++ 14882: 22.1  Locales\n-//\n-  \n-// Information as gleaned from /usr/include/ctype.h\n-  \n-  ctype<char>::ctype(const mask* __table = 0, bool __del = false, \n-\tsize_t __refs = 0) \n-    : _Ctype_nois<char>(__refs), _M_del(__table != 0 && __del), \n-      _M_toupper(NULL), _M_tolower(NULL),\n-      _M_ctable(NULL), _M_table(__table == 0 ? _M_ctable: __table) \n-    { }\n-\n-  char\n-  ctype<char>::do_toupper(char __c) const\n-  { return ::toupper((int) __c); }\n-\n-  const char*\n-  ctype<char>::do_toupper(char* __low, const char* __high) const\n-  {\n-    while (__low < __high)\n-      {\n-\t*__low = ::toupper((int) *__low);\n-\t++__low;\n-      }\n-    return __high;\n-  }\n-\n-  char\n-  ctype<char>::do_tolower(char __c) const\n-  { return ::tolower((int) __c); }\n-\n-  const char* \n-  ctype<char>::do_tolower(char* __low, const char* __high) const\n-  {\n-    while (__low < __high)\n-      {\n-\t*__low = ::tolower((int) *__low);\n-\t++__low;\n-      }\n-    return __high;\n-  }"}, {"sha": "1cb71d149ec16ac457a29ce0085dae50698584bd", "filename": "libstdc++-v3/config/os/freebsd/bits/os_defines.h", "status": "removed", "additions": 0, "deletions": 41, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c42e347eebf50d8a0d82319c3519aba54bd8f24/libstdc%2B%2B-v3%2Fconfig%2Fos%2Ffreebsd%2Fbits%2Fos_defines.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c42e347eebf50d8a0d82319c3519aba54bd8f24/libstdc%2B%2B-v3%2Fconfig%2Fos%2Ffreebsd%2Fbits%2Fos_defines.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Ffreebsd%2Fbits%2Fos_defines.h?ref=4c42e347eebf50d8a0d82319c3519aba54bd8f24", "patch": "@@ -1,41 +0,0 @@\n-// Specific definitions for BSD  -*- C++ -*-\n-\n-// Copyright (C) 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-\n-#ifndef _GLIBCPP_OS_DEFINES\n-#  define _GLIBCPP_OS_DEFINES\n-\n-\n-/* System-specific #define, typedefs, corrections, etc, go here.  This\n-   file will come before all others. */\n-\n-\n-#endif\n-\n-"}]}