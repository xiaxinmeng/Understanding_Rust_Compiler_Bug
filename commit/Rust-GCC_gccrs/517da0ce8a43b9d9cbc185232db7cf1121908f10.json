{"sha": "517da0ce8a43b9d9cbc185232db7cf1121908f10", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTE3ZGEwY2U4YTQzYjlkOWNiYzE4NTIzMmRiN2NmMTEyMTkwOGYxMA==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2003-12-29T19:26:16Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2003-12-29T19:26:16Z"}, "message": "acconfig.h: Add _GLIBCXX_USE_C99_MATH.\n\n\t* acconfig.h: Add _GLIBCXX_USE_C99_MATH.\n\t* acinclude.m4 (GLIBCXX_ENABLE_C99): Define GLIBCXX_USE_C99_MATH.\n\t* configure.ac: Define HAVE_S_ISREG and HAVE_S_IFREG when\n\ttargeting newlib.\n\t* aclocal.m4: Regenerated.\n\t* config.h.in: Likewise.\n\t* configure: Likewise.\n\t* Makefile.in: Likewise.\n\t* include/Makefile.in: Likewise.\n\t* libmath/Makefile.in: Likewise.\n\t* libsupc++/Makefile.in: Likewise.\n\t* testsuite/Makefile.in: Likewise.\n\t* src/Makefile.in: Likewise.\n\t* po/Makefile.in: Likewise.\n\t* include/c_std/std_cmath.h (_GLIBCXX_USE_C99): Replace with ...\n\t(_GLIBCXX_USE_C99_MATH): ... this.\n\n\t* testsuite/27_io/basic_filebuf/sgetn/char/1-in.cc: XFAIL for\n\tarm-none-elf.\n\t* testsuite/27_io/basic_filebuf/sgetn/char/1-io.cc: Likewise.\n\t* testsuite/27_io/basic_filebuf/sgetn/char/2-in.cc: Likewise.\n\t* testsuite/27_io/basic_filebuf/sgetn/char/2-io.cc: Likewise.\n\t* testsuite/27_io/basic_istream/readsome/char/6476-2.cc: Likewise.\n\t* testsuite/27_io/objects/char/9.cc: Likewise.\n\t* testsuite/ext/stdio_filebuf/char/10063-2.cc: Likewise.\n\nFrom-SVN: r75209", "tree": {"sha": "bf822e4da5d4ebefe8894111a122f80ee4d1b258", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bf822e4da5d4ebefe8894111a122f80ee4d1b258"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/517da0ce8a43b9d9cbc185232db7cf1121908f10", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/517da0ce8a43b9d9cbc185232db7cf1121908f10", "html_url": "https://github.com/Rust-GCC/gccrs/commit/517da0ce8a43b9d9cbc185232db7cf1121908f10", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/517da0ce8a43b9d9cbc185232db7cf1121908f10/comments", "author": null, "committer": null, "parents": [{"sha": "88e541e13b8cd466aa6cf4acaada7345e43b8eee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88e541e13b8cd466aa6cf4acaada7345e43b8eee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88e541e13b8cd466aa6cf4acaada7345e43b8eee"}], "stats": {"total": 17616, "additions": 5020, "deletions": 12596}, "files": [{"sha": "6dbfb7dc00b4721010badc6b1ab9d3f01cb4dd27", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/517da0ce8a43b9d9cbc185232db7cf1121908f10/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/517da0ce8a43b9d9cbc185232db7cf1121908f10/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=517da0ce8a43b9d9cbc185232db7cf1121908f10", "patch": "@@ -1,3 +1,31 @@\n+2003-12-29  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* acconfig.h: Add _GLIBCXX_USE_C99_MATH.\n+\t* acinclude.m4 (GLIBCXX_ENABLE_C99): Define GLIBCXX_USE_C99_MATH.\n+\t* configure.ac: Define HAVE_S_ISREG and HAVE_S_IFREG when\n+\ttargeting newlib.\n+\t* aclocal.m4: Regenerated.\n+\t* config.h.in: Likewise.\n+\t* configure: Likewise.\n+\t* Makefile.in: Likewise.\n+\t* include/Makefile.in: Likewise.\n+\t* libmath/Makefile.in: Likewise.\n+\t* libsupc++/Makefile.in: Likewise.\n+\t* testsuite/Makefile.in: Likewise.\n+\t* src/Makefile.in: Likewise.\n+\t* po/Makefile.in: Likewise.\n+\t* include/c_std/std_cmath.h (_GLIBCXX_USE_C99): Replace with ...\n+\t(_GLIBCXX_USE_C99_MATH): ... this.\n+\n+\t* testsuite/27_io/basic_filebuf/sgetn/char/1-in.cc: XFAIL for\n+\tarm-none-elf.\n+\t* testsuite/27_io/basic_filebuf/sgetn/char/1-io.cc: Likewise.\n+\t* testsuite/27_io/basic_filebuf/sgetn/char/2-in.cc: Likewise.\n+\t* testsuite/27_io/basic_filebuf/sgetn/char/2-io.cc: Likewise.\n+\t* testsuite/27_io/basic_istream/readsome/char/6476-2.cc: Likewise.\n+\t* testsuite/27_io/objects/char/9.cc: Likewise.\n+\t* testsuite/ext/stdio_filebuf/char/10063-2.cc: Likewise.\n+\n 2003-12-28  Paolo Carlini  <pcarlini@suse.de>\n \n \t* include/ext/pool_allocator.h (class __pool_alloc): Use"}, {"sha": "6e1353193b5f40240f79b9cb6d66ab151d25c09e", "filename": "libstdc++-v3/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/517da0ce8a43b9d9cbc185232db7cf1121908f10/libstdc%2B%2B-v3%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/517da0ce8a43b9d9cbc185232db7cf1121908f10/libstdc%2B%2B-v3%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FMakefile.in?ref=517da0ce8a43b9d9cbc185232db7cf1121908f10", "patch": "@@ -306,7 +306,7 @@ am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \\\n  configure.lineno\n $(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ Makefile.am $(top_srcdir)/fragment.am $(top_srcdir)/configure.ac $(ACLOCAL_M4)\n \tcd $(top_srcdir) && \\\n-\t  $(AUTOMAKE) --foreign  ./Makefile\n+\t  $(AUTOMAKE) --foreign  Makefile\n Makefile: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.in  $(top_builddir)/config.status\n \tcd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)\n "}, {"sha": "0137c83d6c801bf0dec11cbfcaec7a55f13717fc", "filename": "libstdc++-v3/acconfig.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/517da0ce8a43b9d9cbc185232db7cf1121908f10/libstdc%2B%2B-v3%2Facconfig.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/517da0ce8a43b9d9cbc185232db7cf1121908f10/libstdc%2B%2B-v3%2Facconfig.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facconfig.h?ref=517da0ce8a43b9d9cbc185232db7cf1121908f10", "patch": "@@ -16,6 +16,9 @@\n // Include I/O support for 'long long' and 'unsigned long long'.\n #undef _GLIBCXX_USE_LONG_LONG\n \n+// Define if C99 math functions (like fpclassify) should be exposed.\n+#undef _GLIBCXX_USE_C99_MATH\n+\n // Define if C99 features such as lldiv_t, llabs, lldiv should be exposed.\n #undef _GLIBCXX_USE_C99\n "}, {"sha": "f4c449f57653e1659008defc4b0447dbea7e11d0", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/517da0ce8a43b9d9cbc185232db7cf1121908f10/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/517da0ce8a43b9d9cbc185232db7cf1121908f10/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=517da0ce8a43b9d9cbc185232db7cf1121908f10", "patch": "@@ -866,6 +866,10 @@ AC_DEFUN(GLIBCXX_ENABLE_C99, [\n                  [isunordered(0.0,0.0);],, [ac_c99_math=no])\n   AC_MSG_RESULT($ac_c99_math)\n \n+  if test x\"$ac_c99_math\" = x\"yes\"; then\n+    AC_DEFINE(_GLIBCXX_USE_C99_MATH)\n+  fi\n+\n   # Check for the existence in <stdio.h> of vscanf, et. al.\n   ac_c99_stdio=yes;\n   AC_MSG_CHECKING([for ISO C99 support in <stdio.h>])\n@@ -942,6 +946,10 @@ AC_DEFUN(GLIBCXX_ENABLE_C99, [\n   fi;\n   AC_MSG_RESULT($enable_c99)\n \n+  if test x\"$ac_99_math\" = x\"yes\"; then\n+    AC_DEFINE(_GLIBCXX_USE_C99_MATH)\n+  fi\n+\n   # Option parsed, now set things appropriately\n   if test x\"$enable_c99\" = x\"yes\"; then\n     AC_DEFINE(_GLIBCXX_USE_C99)"}, {"sha": "a2fcf8af16bafd0d7a857ca4212f11bd7ea22dd9", "filename": "libstdc++-v3/aclocal.m4", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/517da0ce8a43b9d9cbc185232db7cf1121908f10/libstdc%2B%2B-v3%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/517da0ce8a43b9d9cbc185232db7cf1121908f10/libstdc%2B%2B-v3%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Faclocal.m4?ref=517da0ce8a43b9d9cbc185232db7cf1121908f10", "patch": "@@ -1,4 +1,4 @@\n-# generated automatically by aclocal 1.7.8 -*- Autoconf -*-\n+# generated automatically by aclocal 1.7.9 -*- Autoconf -*-\n \n # Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2002\n # Free Software Foundation, Inc.\n@@ -879,6 +879,10 @@ AC_DEFUN(GLIBCXX_ENABLE_C99, [\n                  [isunordered(0.0,0.0);],, [ac_c99_math=no])\n   AC_MSG_RESULT($ac_c99_math)\n \n+  if test x\"$ac_c99_math\" = x\"yes\"; then\n+    AC_DEFINE(_GLIBCXX_USE_C99_MATH)\n+  fi\n+\n   # Check for the existence in <stdio.h> of vscanf, et. al.\n   ac_c99_stdio=yes;\n   AC_MSG_CHECKING([for ISO C99 support in <stdio.h>])\n@@ -955,6 +959,10 @@ AC_DEFUN(GLIBCXX_ENABLE_C99, [\n   fi;\n   AC_MSG_RESULT($enable_c99)\n \n+  if test x\"$ac_99_math\" = x\"yes\"; then\n+    AC_DEFINE(_GLIBCXX_USE_C99_MATH)\n+  fi\n+\n   # Option parsed, now set things appropriately\n   if test x\"$enable_c99\" = x\"yes\"; then\n     AC_DEFINE(_GLIBCXX_USE_C99)\n@@ -1985,7 +1993,7 @@ AC_DEFUN([AM_AUTOMAKE_VERSION],[am__api_version=\"1.7\"])\n # Call AM_AUTOMAKE_VERSION so it can be traced.\n # This function is AC_REQUIREd by AC_INIT_AUTOMAKE.\n AC_DEFUN([AM_SET_CURRENT_AUTOMAKE_VERSION],\n-\t [AM_AUTOMAKE_VERSION([1.7.8])])\n+\t [AM_AUTOMAKE_VERSION([1.7.9])])\n \n # Helper functions for option handling.                    -*- Autoconf -*-\n "}, {"sha": "361cec580599a0f135830fe2b97e08b9b91060c7", "filename": "libstdc++-v3/config.h.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/517da0ce8a43b9d9cbc185232db7cf1121908f10/libstdc%2B%2B-v3%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/517da0ce8a43b9d9cbc185232db7cf1121908f10/libstdc%2B%2B-v3%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig.h.in?ref=517da0ce8a43b9d9cbc185232db7cf1121908f10", "patch": "@@ -17,6 +17,9 @@\n // Include I/O support for 'long long' and 'unsigned long long'.\n #undef _GLIBCXX_USE_LONG_LONG\n \n+// Define if C99 math functions (like fpclassify) should be exposed.\n+#undef _GLIBCXX_USE_C99_MATH\n+\n // Define if C99 features such as lldiv_t, llabs, lldiv should be exposed.\n #undef _GLIBCXX_USE_C99\n "}, {"sha": "3d4909b7cac83a19a2c8090f11868296517dd5e1", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 4917, "deletions": 12574, "changes": 17491, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/517da0ce8a43b9d9cbc185232db7cf1121908f10/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/517da0ce8a43b9d9cbc185232db7cf1121908f10/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=517da0ce8a43b9d9cbc185232db7cf1121908f10"}, {"sha": "baf8d7f4b59ca0ffb73364851843f92cef46573c", "filename": "libstdc++-v3/configure.ac", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/517da0ce8a43b9d9cbc185232db7cf1121908f10/libstdc%2B%2B-v3%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/517da0ce8a43b9d9cbc185232db7cf1121908f10/libstdc%2B%2B-v3%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure.ac?ref=517da0ce8a43b9d9cbc185232db7cf1121908f10", "patch": "@@ -220,6 +220,9 @@ else\n     AC_DEFINE(HAVE_SQRTF)\n     AC_DEFINE(HAVE_TANF)\n     AC_DEFINE(HAVE_TANHF)\n+\n+    AC_DEFINE(HAVE_S_ISREG)\n+    AC_DEFINE(HAVE_S_IFREG)\n   else\n     m4_include([crossconfig.m4])\n   fi"}, {"sha": "8c266e81fef9c5cddef58a1b83430a54a90bdd3e", "filename": "libstdc++-v3/include/Makefile.in", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/517da0ce8a43b9d9cbc185232db7cf1121908f10/libstdc%2B%2B-v3%2Finclude%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/517da0ce8a43b9d9cbc185232db7cf1121908f10/libstdc%2B%2B-v3%2Finclude%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2FMakefile.in?ref=517da0ce8a43b9d9cbc185232db7cf1121908f10", "patch": "@@ -1,4 +1,4 @@\n-# Makefile.in generated by automake 1.7.8 from Makefile.am.\n+# Makefile.in generated by automake 1.7.9 from Makefile.am.\n # @configure_input@\n \n # Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003\n@@ -525,9 +525,9 @@ debug_headers = \\\n # Some \"C\" header schemes require the \"C\" compatibility headers.\n # For --enable-cheaders=c_std\n @GLIBCXX_C_HEADERS_C_STD_TRUE@c_base_headers_extra = ${c_base_srcdir}/cmath.tcc\n+@GLIBCXX_C_HEADERS_COMPATIBILITY_FALSE@c_compatibility_headers_extra = \n \n @GLIBCXX_C_HEADERS_COMPATIBILITY_TRUE@c_compatibility_headers_extra = ${c_compatibility_headers}\n-@GLIBCXX_C_HEADERS_COMPATIBILITY_FALSE@c_compatibility_headers_extra = \n \n host_srcdir = ${glibcxx_srcdir}/$(OS_INC_SRCDIR)\n host_builddir = ./${host_alias}/bits\n@@ -673,7 +673,7 @@ install-am: all-am\n installcheck: installcheck-am\n install-strip:\n \t$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" \\\n-\t  INSTALL_STRIP_FLAG=-s \\\n+\t  install_sh_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" INSTALL_STRIP_FLAG=-s \\\n \t  `test -z '$(STRIP)' || \\\n \t    echo \"INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'\"` install\n mostlyclean-generic:"}, {"sha": "66866b2cc3a06c9daeab4fd6f30bba5923956ea8", "filename": "libstdc++-v3/include/c_std/std_cmath.h", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/517da0ce8a43b9d9cbc185232db7cf1121908f10/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstd_cmath.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/517da0ce8a43b9d9cbc185232db7cf1121908f10/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstd_cmath.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstd_cmath.h?ref=517da0ce8a43b9d9cbc185232db7cf1121908f10", "patch": "@@ -436,8 +436,7 @@ namespace std\n     { return __builtin_tanh(__x); }\n }\n \n-\n-#if _GLIBCXX_USE_C99\n+#if _GLIBCXX_USE_C99_MATH\n #if !_GLIBCXX_USE_C99_FP_MACROS_DYNAMIC\n // These are possible macros imported from C99-land. For strict\n // conformance, remove possible C99-injected names from the global\n@@ -514,7 +513,7 @@ namespace __gnu_cxx\n #endif /* _GLIBCXX_USE_C99_FP_MACROS_DYNAMIC */\n #endif\n \n-#if _GLIBCXX_USE_C99\n+#if _GLIBCXX_USE_C99_MATH\n #if !_GLIBCXX_USE_C99_FP_MACROS_DYNAMIC\n namespace __gnu_cxx\n {"}, {"sha": "e5e1d62f9867b41e721aa00f11146d6f123aee29", "filename": "libstdc++-v3/libmath/Makefile.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/517da0ce8a43b9d9cbc185232db7cf1121908f10/libstdc%2B%2B-v3%2Flibmath%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/517da0ce8a43b9d9cbc185232db7cf1121908f10/libstdc%2B%2B-v3%2Flibmath%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibmath%2FMakefile.in?ref=517da0ce8a43b9d9cbc185232db7cf1121908f10", "patch": "@@ -1,4 +1,4 @@\n-# Makefile.in generated by automake 1.7.8 from Makefile.am.\n+# Makefile.in generated by automake 1.7.9 from Makefile.am.\n # @configure_input@\n \n # Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003\n@@ -379,7 +379,7 @@ install-am: all-am\n installcheck: installcheck-am\n install-strip:\n \t$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" \\\n-\t  INSTALL_STRIP_FLAG=-s \\\n+\t  install_sh_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" INSTALL_STRIP_FLAG=-s \\\n \t  `test -z '$(STRIP)' || \\\n \t    echo \"INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'\"` install\n mostlyclean-generic:"}, {"sha": "f2ef55ee83b570179cf1b7f3cc0c675b53703aee", "filename": "libstdc++-v3/libsupc++/Makefile.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/517da0ce8a43b9d9cbc185232db7cf1121908f10/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/517da0ce8a43b9d9cbc185232db7cf1121908f10/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in?ref=517da0ce8a43b9d9cbc185232db7cf1121908f10", "patch": "@@ -1,4 +1,4 @@\n-# Makefile.in generated by automake 1.7.8 from Makefile.am.\n+# Makefile.in generated by automake 1.7.9 from Makefile.am.\n # @configure_input@\n \n # Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003\n@@ -530,7 +530,7 @@ install-am: all-am\n installcheck: installcheck-am\n install-strip:\n \t$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" \\\n-\t  INSTALL_STRIP_FLAG=-s \\\n+\t  install_sh_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" INSTALL_STRIP_FLAG=-s \\\n \t  `test -z '$(STRIP)' || \\\n \t    echo \"INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'\"` install\n mostlyclean-generic:"}, {"sha": "c36ef8fea61caa79b85b0e45415a32db3a3627c5", "filename": "libstdc++-v3/po/Makefile.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/517da0ce8a43b9d9cbc185232db7cf1121908f10/libstdc%2B%2B-v3%2Fpo%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/517da0ce8a43b9d9cbc185232db7cf1121908f10/libstdc%2B%2B-v3%2Fpo%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fpo%2FMakefile.in?ref=517da0ce8a43b9d9cbc185232db7cf1121908f10", "patch": "@@ -1,4 +1,4 @@\n-# Makefile.in generated by automake 1.7.8 from Makefile.am.\n+# Makefile.in generated by automake 1.7.9 from Makefile.am.\n # @configure_input@\n \n # Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003\n@@ -318,7 +318,7 @@ install-am: all-am\n installcheck: installcheck-am\n install-strip:\n \t$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" \\\n-\t  INSTALL_STRIP_FLAG=-s \\\n+\t  install_sh_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" INSTALL_STRIP_FLAG=-s \\\n \t  `test -z '$(STRIP)' || \\\n \t    echo \"INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'\"` install\n mostlyclean-generic:"}, {"sha": "3f1d41bd9e3ad9fbff7b8575390a596621d1ce75", "filename": "libstdc++-v3/src/Makefile.in", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/517da0ce8a43b9d9cbc185232db7cf1121908f10/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/517da0ce8a43b9d9cbc185232db7cf1121908f10/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in?ref=517da0ce8a43b9d9cbc185232db7cf1121908f10", "patch": "@@ -1,4 +1,4 @@\n-# Makefile.in generated by automake 1.7.8 from Makefile.am.\n+# Makefile.in generated by automake 1.7.9 from Makefile.am.\n # @configure_input@\n \n # Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003\n@@ -219,12 +219,12 @@ AM_CPPFLAGS = $(GLIBCXX_INCLUDES)\n \n # Cross compiler support.\n toolexeclib_LTLIBRARIES = libstdc++.la\n-@GLIBCXX_BUILD_VERSIONED_SHLIB_FALSE@version_arg = \n \n # Symbol versioning for shared libraries.\n @GLIBCXX_BUILD_VERSIONED_SHLIB_TRUE@version_arg = -Wl,--version-script=libstdc++-symbol.ver\n-@GLIBCXX_BUILD_VERSIONED_SHLIB_FALSE@version_dep = \n+@GLIBCXX_BUILD_VERSIONED_SHLIB_FALSE@version_arg = \n @GLIBCXX_BUILD_VERSIONED_SHLIB_TRUE@version_dep = libstdc++-symbol.ver\n+@GLIBCXX_BUILD_VERSIONED_SHLIB_FALSE@version_dep = \n \n # Source files linked in via configuration/make substitution for a\n # particular host.\n@@ -551,7 +551,7 @@ install-am: all-am\n installcheck: installcheck-am\n install-strip:\n \t$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" \\\n-\t  INSTALL_STRIP_FLAG=-s \\\n+\t  install_sh_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" INSTALL_STRIP_FLAG=-s \\\n \t  `test -z '$(STRIP)' || \\\n \t    echo \"INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'\"` install\n mostlyclean-generic:"}, {"sha": "50e5475a744f05001f7b3413ad83b05e8be90084", "filename": "libstdc++-v3/testsuite/27_io/basic_filebuf/sgetn/char/1-in.cc", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/517da0ce8a43b9d9cbc185232db7cf1121908f10/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fsgetn%2Fchar%2F1-in.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/517da0ce8a43b9d9cbc185232db7cf1121908f10/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fsgetn%2Fchar%2F1-in.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fsgetn%2Fchar%2F1-in.cc?ref=517da0ce8a43b9d9cbc185232db7cf1121908f10", "patch": "@@ -18,6 +18,10 @@\n // Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n // USA.\n \n+// The ARM simulator does not provide support for \"fstat\", which\n+// causes \"in_avail\" to return an incorrect value.\n+// { dg-do run { xfail arm-none-elf } }\n+\n // 27.8.1.4 Overridden virtual functions\n \n #include <fstream>"}, {"sha": "f35d0dde58ab222fcdf2265e485b098ed7fab8eb", "filename": "libstdc++-v3/testsuite/27_io/basic_filebuf/sgetn/char/1-io.cc", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/517da0ce8a43b9d9cbc185232db7cf1121908f10/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fsgetn%2Fchar%2F1-io.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/517da0ce8a43b9d9cbc185232db7cf1121908f10/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fsgetn%2Fchar%2F1-io.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fsgetn%2Fchar%2F1-io.cc?ref=517da0ce8a43b9d9cbc185232db7cf1121908f10", "patch": "@@ -18,6 +18,10 @@\n // Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n // USA.\n \n+// The ARM simulator does not provide support for \"fstat\", which\n+// causes \"in_avail\" to return an incorrect value.\n+// { dg-do run { xfail arm-none-elf } }\n+\n // 27.8.1.4 Overridden virtual functions\n \n #include <fstream>"}, {"sha": "f02babec18229f0a9e68b299e04abf70d8366d43", "filename": "libstdc++-v3/testsuite/27_io/basic_filebuf/sgetn/char/2-in.cc", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/517da0ce8a43b9d9cbc185232db7cf1121908f10/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fsgetn%2Fchar%2F2-in.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/517da0ce8a43b9d9cbc185232db7cf1121908f10/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fsgetn%2Fchar%2F2-in.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fsgetn%2Fchar%2F2-in.cc?ref=517da0ce8a43b9d9cbc185232db7cf1121908f10", "patch": "@@ -18,6 +18,10 @@\n // Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n // USA.\n \n+// The ARM simulator does not provide support for \"fstat\", which\n+// causes \"in_avail\" to return an incorrect value.\n+// { dg-do run { xfail arm-none-elf } }\n+\n // 27.8.1.4 Overridden virtual functions\n \n #include <fstream>"}, {"sha": "f4f5113aa4349b023640e189ffd5c03c8978f3eb", "filename": "libstdc++-v3/testsuite/27_io/basic_filebuf/sgetn/char/2-io.cc", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/517da0ce8a43b9d9cbc185232db7cf1121908f10/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fsgetn%2Fchar%2F2-io.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/517da0ce8a43b9d9cbc185232db7cf1121908f10/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fsgetn%2Fchar%2F2-io.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fsgetn%2Fchar%2F2-io.cc?ref=517da0ce8a43b9d9cbc185232db7cf1121908f10", "patch": "@@ -18,6 +18,10 @@\n // Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n // USA.\n \n+// The ARM simulator does not provide support for \"fstat\", which\n+// causes \"in_avail\" to return an incorrect value.\n+// { dg-do run { xfail arm-none-elf } }\n+\n // 27.8.1.4 Overridden virtual functions\n \n #include <fstream>"}, {"sha": "95b421306a05a7c7d3049679e15ac0ae815d29f3", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/readsome/char/6746-2.cc", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/517da0ce8a43b9d9cbc185232db7cf1121908f10/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Freadsome%2Fchar%2F6746-2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/517da0ce8a43b9d9cbc185232db7cf1121908f10/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Freadsome%2Fchar%2F6746-2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Freadsome%2Fchar%2F6746-2.cc?ref=517da0ce8a43b9d9cbc185232db7cf1121908f10", "patch": "@@ -18,6 +18,10 @@\n // Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n // USA.\n \n+// The ARM simulator does not provide support for \"fstat\", which\n+// causes \"in_avail\" to return an incorrect value.\n+// { dg-do run { xfail arm-none-elf } }\n+\n // 27.6.1.3 unformatted input functions\n // @require@ %-*.tst %-*.txt\n // @diff@ %-*.tst %-*.txt"}, {"sha": "cf0579f071cf424445b0089c4f98e1052c71d495", "filename": "libstdc++-v3/testsuite/27_io/objects/char/9.cc", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/517da0ce8a43b9d9cbc185232db7cf1121908f10/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fobjects%2Fchar%2F9.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/517da0ce8a43b9d9cbc185232db7cf1121908f10/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fobjects%2Fchar%2F9.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fobjects%2Fchar%2F9.cc?ref=517da0ce8a43b9d9cbc185232db7cf1121908f10", "patch": "@@ -18,6 +18,10 @@\n // Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n // USA.\n  \n+// The ARM simulator does not provide support for \"fstat\", which\n+// causes \"in_avail\" to return an incorrect value.\n+// { dg-do run { xfail arm-none-elf } }\n+\n #include <iostream>\n #include <cstdio>\n #include <testsuite_hooks.h>\n@@ -35,6 +39,7 @@ void test09()\n \n   freopen(name, \"r\", stdin);\n  \n+  fprintf(stderr, \"%d\\n\", std::cin.rdbuf()->in_avail());\n   // The number of unread characters should be 4 (a, b, c, \\\\n)\n   VERIFY( 4 == std::cin.rdbuf()->in_avail() );\n }"}, {"sha": "cfa2e2e00239625c73db54277a5e562e4aa9c760", "filename": "libstdc++-v3/testsuite/Makefile.in", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/517da0ce8a43b9d9cbc185232db7cf1121908f10/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/517da0ce8a43b9d9cbc185232db7cf1121908f10/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in?ref=517da0ce8a43b9d9cbc185232db7cf1121908f10", "patch": "@@ -1,4 +1,4 @@\n-# Makefile.in generated by automake 1.7.8 from Makefile.am.\n+# Makefile.in generated by automake 1.7.9 from Makefile.am.\n # @configure_input@\n \n # Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003\n@@ -242,9 +242,9 @@ lists_of_files = \\\n \n noinst_LIBRARIES = libv3test.a\n libv3test_a_SOURCES = testsuite_hooks.cc testsuite_allocator.cc\n+@GLIBCXX_TEST_ABI_FALSE@noinst_PROGRAMS = \n \n @GLIBCXX_TEST_ABI_TRUE@noinst_PROGRAMS = abi_check\n-@GLIBCXX_TEST_ABI_FALSE@noinst_PROGRAMS = \n abi_check_SOURCES = abi_check.cc\n \n baseline_file = ${baseline_dir}/baseline_symbols.txt\n@@ -498,7 +498,7 @@ install-am: all-am\n installcheck: installcheck-am\n install-strip:\n \t$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" \\\n-\t  INSTALL_STRIP_FLAG=-s \\\n+\t  install_sh_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" INSTALL_STRIP_FLAG=-s \\\n \t  `test -z '$(STRIP)' || \\\n \t    echo \"INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'\"` install\n mostlyclean-generic:"}, {"sha": "299bc16ecc3683d6110260e248b7ab157af3b695", "filename": "libstdc++-v3/testsuite/ext/stdio_filebuf/char/10063-2.cc", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/517da0ce8a43b9d9cbc185232db7cf1121908f10/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fstdio_filebuf%2Fchar%2F10063-2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/517da0ce8a43b9d9cbc185232db7cf1121908f10/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fstdio_filebuf%2Fchar%2F10063-2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fstdio_filebuf%2Fchar%2F10063-2.cc?ref=517da0ce8a43b9d9cbc185232db7cf1121908f10", "patch": "@@ -16,6 +16,10 @@\n // Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n // USA.\n \n+// The ARM simulator does not provide support for \"fstat\", which\n+// causes \"sbumpc\" to return an incorrect value.\n+// { dg-do run { xfail arm-none-elf } }\n+\n #include <cstdio>\n #include <fstream>\n #include <ext/stdio_filebuf.h>"}]}