{"sha": "f6db796d0a12704bc46a0ccff6e86e4b21a73008", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjZkYjc5NmQwYTEyNzA0YmM0NmEwY2NmZjZlODZlNGIyMWE3MzAwOA==", "commit": {"author": {"name": "Andre Vehreschild", "email": "vehre@gcc.gnu.org", "date": "2020-10-15T13:43:35Z"}, "committer": {"name": "Andre Vehreschild", "email": "vehre@gcc.gnu.org", "date": "2020-10-15T13:47:15Z"}, "message": "Fix fndecl's for fortran coarray calls.\n\ngcc/fortran/ChangeLog:\n\n\t* trans-decl.c (gfc_build_builtin_function_decls): Fix the coarray fndecls.", "tree": {"sha": "cbbbe8fba9923f1375746b20f6ecedf96f327eb8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cbbbe8fba9923f1375746b20f6ecedf96f327eb8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f6db796d0a12704bc46a0ccff6e86e4b21a73008", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6db796d0a12704bc46a0ccff6e86e4b21a73008", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6db796d0a12704bc46a0ccff6e86e4b21a73008", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6db796d0a12704bc46a0ccff6e86e4b21a73008/comments", "author": null, "committer": null, "parents": [{"sha": "34af17c0164f3138df094b144c7f74c2d1805444", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34af17c0164f3138df094b144c7f74c2d1805444", "html_url": "https://github.com/Rust-GCC/gccrs/commit/34af17c0164f3138df094b144c7f74c2d1805444"}], "stats": {"total": 76, "additions": 38, "deletions": 38}, "files": [{"sha": "fca1622edd146212949dfaaab8c7c6c23c84f90e", "filename": "gcc/fortran/trans-decl.c", "status": "modified", "additions": 38, "deletions": 38, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6db796d0a12704bc46a0ccff6e86e4b21a73008/gcc%2Ffortran%2Ftrans-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6db796d0a12704bc46a0ccff6e86e4b21a73008/gcc%2Ffortran%2Ftrans-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-decl.c?ref=f6db796d0a12704bc46a0ccff6e86e4b21a73008", "patch": "@@ -3832,9 +3832,9 @@ gfc_build_builtin_function_decls (void)\n       pppchar_type\n \t= build_pointer_type (build_pointer_type (pchar_type_node));\n \n-      gfor_fndecl_caf_init = gfc_build_library_function_decl (\n-\tget_identifier (PREFIX(\"caf_init\")), void_type_node,\n-\t2, pint_type, pppchar_type);\n+      gfor_fndecl_caf_init = gfc_build_library_function_decl_with_spec (\n+\tget_identifier (PREFIX(\"caf_init\")), \". W W \",\n+\tvoid_type_node, 2, pint_type, pppchar_type);\n \n       gfor_fndecl_caf_finalize = gfc_build_library_function_decl (\n \tget_identifier (PREFIX(\"caf_finalize\")), void_type_node, 0);\n@@ -3848,71 +3848,71 @@ gfc_build_builtin_function_decls (void)\n \t2, integer_type_node, integer_type_node);\n \n       gfor_fndecl_caf_register = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"caf_register\")), \"R R W W W W R \",\n+\tget_identifier (PREFIX(\"caf_register\")), \". . . W w w w . \",\n \tvoid_type_node, 7,\n \tsize_type_node, integer_type_node, ppvoid_type_node, pvoid_type_node,\n \tpint_type, pchar_type_node, size_type_node);\n \n       gfor_fndecl_caf_deregister = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"caf_deregister\")), \"W R W W R \",\n+\tget_identifier (PREFIX(\"caf_deregister\")), \". W . w w . \",\n \tvoid_type_node, 5,\n \tppvoid_type_node, integer_type_node, pint_type, pchar_type_node,\n \tsize_type_node);\n \n       gfor_fndecl_caf_get = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"caf_get\")), \". R . R R W R R R W \",\n+\tget_identifier (PREFIX(\"caf_get\")), \". r . . r r w . . . w \",\n \tvoid_type_node, 10,\n \tpvoid_type_node, size_type_node, integer_type_node, pvoid_type_node,\n \tpvoid_type_node, pvoid_type_node, integer_type_node, integer_type_node,\n \tboolean_type_node, pint_type);\n \n       gfor_fndecl_caf_send = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"caf_send\")), \". R . R R R R R R W R \",\n+\tget_identifier (PREFIX(\"caf_send\")), \". r . . w r r . . . w \",\n \tvoid_type_node, 11,\n \tpvoid_type_node, size_type_node, integer_type_node, pvoid_type_node,\n \tpvoid_type_node, pvoid_type_node, integer_type_node, integer_type_node,\n \tboolean_type_node, pint_type, pvoid_type_node);\n \n       gfor_fndecl_caf_sendget = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"caf_sendget\")), \". R . R R R R . R R R R R R \",\n+\tget_identifier (PREFIX(\"caf_sendget\")), \". r . . w r r . . r r . . . w \",\n \tvoid_type_node,\t14, pvoid_type_node, size_type_node, integer_type_node,\n \tpvoid_type_node, pvoid_type_node, pvoid_type_node, size_type_node,\n \tinteger_type_node, pvoid_type_node, pvoid_type_node, integer_type_node,\n \tinteger_type_node, boolean_type_node, integer_type_node);\n \n       gfor_fndecl_caf_get_by_ref = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"caf_get_by_ref\")), \". R W R R R R R W R \",\n+\tget_identifier (PREFIX(\"caf_get_by_ref\")), \". r . w r . . . . w . \",\n \tvoid_type_node,\n \t10, pvoid_type_node, integer_type_node, pvoid_type_node,\n \tpvoid_type_node, integer_type_node, integer_type_node,\n \tboolean_type_node, boolean_type_node, pint_type, integer_type_node);\n \n       gfor_fndecl_caf_send_by_ref = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"caf_send_by_ref\")), \". R R R R R R R W R \",\n+\tget_identifier (PREFIX(\"caf_send_by_ref\")), \". r . r r . . . . w . \",\n \tvoid_type_node,\t10, pvoid_type_node, integer_type_node, pvoid_type_node,\n \tpvoid_type_node, integer_type_node, integer_type_node,\n \tboolean_type_node, boolean_type_node, pint_type, integer_type_node);\n \n       gfor_fndecl_caf_sendget_by_ref\n \t  = gfc_build_library_function_decl_with_spec (\n \t    get_identifier (PREFIX(\"caf_sendget_by_ref\")),\n-\t    \". R R . R R R R R W W R R \",\n+\t    \". r . r r . r . . . w w . . \",\n \t    void_type_node, 13, pvoid_type_node, integer_type_node,\n \t    pvoid_type_node, pvoid_type_node, integer_type_node,\n \t    pvoid_type_node, integer_type_node, integer_type_node,\n \t    boolean_type_node, pint_type, pint_type, integer_type_node,\n \t    integer_type_node);\n \n       gfor_fndecl_caf_sync_all = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"caf_sync_all\")), \". W W . \", void_type_node,\n+\tget_identifier (PREFIX(\"caf_sync_all\")), \". w w . \", void_type_node,\n \t3, pint_type, pchar_type_node, size_type_node);\n \n       gfor_fndecl_caf_sync_memory = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"caf_sync_memory\")), \". W W . \", void_type_node,\n+\tget_identifier (PREFIX(\"caf_sync_memory\")), \". w w . \", void_type_node,\n \t3, pint_type, pchar_type_node, size_type_node);\n \n       gfor_fndecl_caf_sync_images = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"caf_sync_images\")), \". . R W W . \", void_type_node,\n+\tget_identifier (PREFIX(\"caf_sync_images\")), \". . r w w . \", void_type_node,\n \t5, integer_type_node, pint_type, pint_type,\n \tpchar_type_node, size_type_node);\n \n@@ -3923,7 +3923,7 @@ gfc_build_builtin_function_decls (void)\n       TREE_THIS_VOLATILE (gfor_fndecl_caf_error_stop) = 1;\n \n       gfor_fndecl_caf_error_stop_str = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"caf_error_stop_str\")), \". R . \",\n+\tget_identifier (PREFIX(\"caf_error_stop_str\")), \". r . \",\n \tvoid_type_node, 2, pchar_type_node, size_type_node);\n       /* CAF's ERROR STOP doesn't return.  */\n       TREE_THIS_VOLATILE (gfor_fndecl_caf_error_stop_str) = 1;\n@@ -3935,55 +3935,55 @@ gfc_build_builtin_function_decls (void)\n       TREE_THIS_VOLATILE (gfor_fndecl_caf_stop_numeric) = 1;\n \n       gfor_fndecl_caf_stop_str = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"caf_stop_str\")), \". R . \",\n+\tget_identifier (PREFIX(\"caf_stop_str\")), \". r . \",\n \tvoid_type_node, 2, pchar_type_node, size_type_node);\n       /* CAF's STOP doesn't return.  */\n       TREE_THIS_VOLATILE (gfor_fndecl_caf_stop_str) = 1;\n \n       gfor_fndecl_caf_atomic_def = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"caf_atomic_define\")), \"R . . R W \",\n+\tget_identifier (PREFIX(\"caf_atomic_define\")), \". r . . w w . . \",\n \tvoid_type_node, 7, pvoid_type_node, size_type_node, integer_type_node,\n \tpvoid_type_node, pint_type, integer_type_node, integer_type_node);\n \n       gfor_fndecl_caf_atomic_ref = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"caf_atomic_ref\")), \"R . . W W \",\n+\tget_identifier (PREFIX(\"caf_atomic_ref\")), \". r . . w w . . \",\n \tvoid_type_node, 7, pvoid_type_node, size_type_node, integer_type_node,\n \tpvoid_type_node, pint_type, integer_type_node, integer_type_node);\n \n       gfor_fndecl_caf_atomic_cas = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"caf_atomic_cas\")), \"R . . W R R W \",\n+\tget_identifier (PREFIX(\"caf_atomic_cas\")), \". r . . w r r w . . \",\n \tvoid_type_node, 9, pvoid_type_node, size_type_node, integer_type_node,\n \tpvoid_type_node, pvoid_type_node, pvoid_type_node, pint_type,\n \tinteger_type_node, integer_type_node);\n \n       gfor_fndecl_caf_atomic_op = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"caf_atomic_op\")), \". R . . R W W \",\n+\tget_identifier (PREFIX(\"caf_atomic_op\")), \". . r . . r w w . . \",\n \tvoid_type_node, 9, integer_type_node, pvoid_type_node, size_type_node,\n \tinteger_type_node, pvoid_type_node, pvoid_type_node, pint_type,\n \tinteger_type_node, integer_type_node);\n \n       gfor_fndecl_caf_lock = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"caf_lock\")), \"R . . W W W \",\n+\tget_identifier (PREFIX(\"caf_lock\")), \". r . . w w w . \",\n \tvoid_type_node, 7, pvoid_type_node, size_type_node, integer_type_node,\n \tpint_type, pint_type, pchar_type_node, size_type_node);\n \n       gfor_fndecl_caf_unlock = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"caf_unlock\")), \"R . . W W \",\n+\tget_identifier (PREFIX(\"caf_unlock\")), \". r . . w w . \",\n \tvoid_type_node, 6, pvoid_type_node, size_type_node, integer_type_node,\n \tpint_type, pchar_type_node, size_type_node);\n \n       gfor_fndecl_caf_event_post = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"caf_event_post\")), \"R . . W W \",\n+\tget_identifier (PREFIX(\"caf_event_post\")), \". r . . w w . \",\n \tvoid_type_node, 6, pvoid_type_node, size_type_node, integer_type_node,\n \tpint_type, pchar_type_node, size_type_node);\n \n       gfor_fndecl_caf_event_wait = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"caf_event_wait\")), \"R . . W W \",\n+\tget_identifier (PREFIX(\"caf_event_wait\")), \". r . . w w . \",\n \tvoid_type_node, 6, pvoid_type_node, size_type_node, integer_type_node,\n \tpint_type, pchar_type_node, size_type_node);\n \n       gfor_fndecl_caf_event_query = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"caf_event_query\")), \"R . . W W \",\n+\tget_identifier (PREFIX(\"caf_event_query\")), \". r . . w w \",\n \tvoid_type_node, 5, pvoid_type_node, size_type_node, integer_type_node,\n \tpint_type, pint_type);\n \n@@ -3994,19 +3994,19 @@ gfc_build_builtin_function_decls (void)\n \n       gfor_fndecl_caf_failed_images\n \t= gfc_build_library_function_decl_with_spec (\n-\t    get_identifier (PREFIX(\"caf_failed_images\")), \"W R R \",\n+\t    get_identifier (PREFIX(\"caf_failed_images\")), \". w . r \",\n \t    void_type_node, 3, pvoid_type_node, ppvoid_type_node,\n \t    integer_type_node);\n \n       gfor_fndecl_caf_form_team\n \t= gfc_build_library_function_decl_with_spec (\n-\t    get_identifier (PREFIX(\"caf_form_team\")), \"R W R \",\n+\t    get_identifier (PREFIX(\"caf_form_team\")), \". . W . \",\n \t    void_type_node, 3, integer_type_node, ppvoid_type_node,\n \t    integer_type_node);\n \n       gfor_fndecl_caf_change_team\n \t= gfc_build_library_function_decl_with_spec (\n-\t    get_identifier (PREFIX(\"caf_change_team\")), \"R R \",\n+\t    get_identifier (PREFIX(\"caf_change_team\")), \". w . \",\n \t    void_type_node, 2, ppvoid_type_node,\n \t    integer_type_node);\n \n@@ -4021,56 +4021,56 @@ gfc_build_builtin_function_decls (void)\n \n       gfor_fndecl_caf_sync_team\n \t= gfc_build_library_function_decl_with_spec (\n-\t    get_identifier (PREFIX(\"caf_sync_team\")), \"R R \",\n+\t    get_identifier (PREFIX(\"caf_sync_team\")), \". r . \",\n \t    void_type_node, 2, ppvoid_type_node,\n \t    integer_type_node);\n \n       gfor_fndecl_caf_team_number\n       \t= gfc_build_library_function_decl_with_spec (\n-\t    get_identifier (PREFIX(\"caf_team_number\")), \"R \",\n+\t    get_identifier (PREFIX(\"caf_team_number\")), \". r \",\n       \t    integer_type_node, 1, integer_type_node);\n \n       gfor_fndecl_caf_image_status\n \t= gfc_build_library_function_decl_with_spec (\n-\t    get_identifier (PREFIX(\"caf_image_status\")), \"R R \",\n+\t    get_identifier (PREFIX(\"caf_image_status\")), \". . r \",\n \t    integer_type_node, 2, integer_type_node, ppvoid_type_node);\n \n       gfor_fndecl_caf_stopped_images\n \t= gfc_build_library_function_decl_with_spec (\n-\t    get_identifier (PREFIX(\"caf_stopped_images\")), \"W R R \",\n+\t    get_identifier (PREFIX(\"caf_stopped_images\")), \". w r r \",\n \t    void_type_node, 3, pvoid_type_node, ppvoid_type_node,\n \t    integer_type_node);\n \n       gfor_fndecl_co_broadcast = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"caf_co_broadcast\")), \"W . W W \",\n+\tget_identifier (PREFIX(\"caf_co_broadcast\")), \". w . w w . \",\n \tvoid_type_node, 5, pvoid_type_node, integer_type_node,\n \tpint_type, pchar_type_node, size_type_node);\n \n       gfor_fndecl_co_max = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"caf_co_max\")), \"W . W W \",\n+\tget_identifier (PREFIX(\"caf_co_max\")), \". w . w w . . \",\n \tvoid_type_node, 6, pvoid_type_node, integer_type_node,\n \tpint_type, pchar_type_node, integer_type_node, size_type_node);\n \n       gfor_fndecl_co_min = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"caf_co_min\")), \"W . W W \",\n+\tget_identifier (PREFIX(\"caf_co_min\")), \". w . w w . . \",\n \tvoid_type_node, 6, pvoid_type_node, integer_type_node,\n \tpint_type, pchar_type_node, integer_type_node, size_type_node);\n \n       gfor_fndecl_co_reduce = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"caf_co_reduce\")), \"W . R . W W \",\n+\tget_identifier (PREFIX(\"caf_co_reduce\")), \". w r . . w w . . \",\n \tvoid_type_node, 8, pvoid_type_node,\n \tbuild_pointer_type (build_varargs_function_type_list (void_type_node,\n \t\t\t\t\t\t\t      NULL_TREE)),\n \tinteger_type_node, integer_type_node, pint_type, pchar_type_node,\n \tinteger_type_node, size_type_node);\n \n       gfor_fndecl_co_sum = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"caf_co_sum\")), \"W . W W \",\n+\tget_identifier (PREFIX(\"caf_co_sum\")), \". w . w w . \",\n \tvoid_type_node, 5, pvoid_type_node, integer_type_node,\n \tpint_type, pchar_type_node, size_type_node);\n \n       gfor_fndecl_caf_is_present = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"caf_is_present\")), \"R R R \",\n+\tget_identifier (PREFIX(\"caf_is_present\")), \". r . r \",\n \tinteger_type_node, 3, pvoid_type_node, integer_type_node,\n \tpvoid_type_node);\n     }"}]}