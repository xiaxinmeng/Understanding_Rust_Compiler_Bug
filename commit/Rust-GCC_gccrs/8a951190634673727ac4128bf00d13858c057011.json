{"sha": "8a951190634673727ac4128bf00d13858c057011", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGE5NTExOTA2MzQ2NzM3MjdhYzQxMjhiZjAwZDEzODU4YzA1NzAxMQ==", "commit": {"author": {"name": "Andreas Jaeger", "email": "aj@gcc.gnu.org", "date": "2002-05-24T06:30:41Z"}, "committer": {"name": "Andreas Jaeger", "email": "aj@gcc.gnu.org", "date": "2002-05-24T06:30:41Z"}, "message": "ggc-page.c (alloc_page): Cast variables of type size_t to unsigned long, adjust printf format string.\n\n\t* ggc-page.c (alloc_page): Cast variables of type size_t to\n\tunsigned long, adjust printf format string.\n\t(ggc_alloc): Likewise.\n\t(ggc_print_statistics): Likewise.\n\t(ggc_print_statistics): Correct printf format string for SCALE to\n\tuse unsigned long.\n\nFrom-SVN: r53820", "tree": {"sha": "afdc2d299bec9a01ad11cc133fd8958e21dff60e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/afdc2d299bec9a01ad11cc133fd8958e21dff60e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8a951190634673727ac4128bf00d13858c057011", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a951190634673727ac4128bf00d13858c057011", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a951190634673727ac4128bf00d13858c057011", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a951190634673727ac4128bf00d13858c057011/comments", "author": null, "committer": null, "parents": [{"sha": "f29e2ec06c1fc2251004fc66908f824b0df30462", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f29e2ec06c1fc2251004fc66908f824b0df30462", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f29e2ec06c1fc2251004fc66908f824b0df30462"}], "stats": {"total": 31, "additions": 21, "deletions": 10}, "files": [{"sha": "bc44ee8a395925c784d04b3ac1d5f0cea9b7eff1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a951190634673727ac4128bf00d13858c057011/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a951190634673727ac4128bf00d13858c057011/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8a951190634673727ac4128bf00d13858c057011", "patch": "@@ -1,3 +1,12 @@\n+2002-05-24  Andreas Jaeger  <aj@suse.de>\n+\n+\t* ggc-page.c (alloc_page): Cast variables of type size_t to\n+\tunsigned long, adjust printf format string.\n+\t(ggc_alloc): Likewise.\n+\t(ggc_print_statistics): Likewise.\n+\t(ggc_print_statistics): Correct printf format string for SCALE to\n+\tuse unsigned long.\n+\n 2002-05-24  Danny Smith  <dannysmith@users.sourceforge.net>\n \n \t* config/i386/mingw32.h (CPP_SPEC): Remove -remap.\n@@ -8,14 +17,14 @@\n \t* config/i386/mingw32.h (OUTPUT_QUOTED_STRING): Properly output\n \tquoted strings.\n \t* dwarf2out.c (lookup_filename): Properly quote filename in .file\n-\tdirective in assembly file. \n+\tdirective in assembly file.\n \t* config/m68k/dpx2.h (ASM_OUTPUT_SOURCE_FILENAME): Likewise.\n \t* config/m88k/m88k.h (ASM_OUTPUT_SOURCE_FILENAME): Likewise.\n \t* config/pj/pj.h (ASM_FILE_START): Likewise.\n \t* config/rs6000/xcoff.h (ASM_FILE_START): Likewise.\n \t* config/avr/avr.c (asm_file_end): Likewise.\n \t* toplev.c (output_quoted_string): Handle possibly signed plain\n-\tchar. \n+\tchar.\n \t* toplev.h (output_clean_symbol_name): Declare\n \t* toplev.c (output_clean_symbol_name): Define.\n \t* config/alpha/alpha.c (unicosmk_output_module_name): Use it.\n@@ -289,7 +298,7 @@ Thu May 23 19:43:41 CEST 2002  Jan Hubicka  <jh@suse.cz>\n \t* config/i386/i386.c, config/i386/i386.h: Tidy comments and whitespace.\n \t(ix86_arch): Set type to enum processor_type.\n \n-\t* config/i386/i386.md (movsi_1, movdi_1_rex64): Use \n+\t* config/i386/i386.md (movsi_1, movdi_1_rex64): Use\n \tLEGITIMATE_PIC_OPERAND_P not SYMBOLIC_CONST.\n \n 2002-05-23  Jakub Jelinek  <jakub@redhat.com>\n@@ -500,7 +509,7 @@ objc:\n \n 2002-05-21  Jeffrey A Law  <law@redhat.com>\n \n- \t* optabs.c (expand_binop): For double-word integer multiplies,\n+\t* optabs.c (expand_binop): For double-word integer multiplies,\n \tdo not compute intermediate results into something that is\n \tnot a register (such as a SUBREG or MEM).\n "}, {"sha": "dd124d3cc8f1c2f3b318150eb5f2a98680517f6b", "filename": "gcc/ggc-page.c", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a951190634673727ac4128bf00d13858c057011/gcc%2Fggc-page.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a951190634673727ac4128bf00d13858c057011/gcc%2Fggc-page.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fggc-page.c?ref=8a951190634673727ac4128bf00d13858c057011", "patch": "@@ -732,8 +732,8 @@ alloc_page (order)\n \n   if (GGC_DEBUG_LEVEL >= 2)\n     fprintf (G.debug_file, \n-\t     \"Allocating page at %p, object size=%ld, data %p-%p\\n\",\n-\t     (PTR) entry, (long) OBJECT_SIZE (order), page,\n+\t     \"Allocating page at %p, object size=%lu, data %p-%p\\n\",\n+\t     (PTR) entry, (unsigned long) OBJECT_SIZE (order), page,\n \t     page + entry_size - 1);\n \n   return entry;\n@@ -954,8 +954,9 @@ ggc_alloc (size)\n \n   if (GGC_DEBUG_LEVEL >= 3)\n     fprintf (G.debug_file, \n-\t     \"Allocating object, requested size=%ld, actual=%ld at %p on %p\\n\",\n-\t     (long) size, (long) OBJECT_SIZE (order), result, (PTR) entry);\n+\t     \"Allocating object, requested size=%lu, actual=%lu at %p on %p\\n\",\n+\t     (unsigned long) size, (unsigned long) OBJECT_SIZE (order), result,\n+\t     (PTR) entry);\n \n   return result;\n }\n@@ -1500,13 +1501,14 @@ ggc_print_statistics ()\n \t  overhead += (sizeof (page_entry) - sizeof (long)\n \t\t       + BITMAP_SIZE (OBJECTS_PER_PAGE (i) + 1));\n \t}\n-      fprintf (stderr, \"%-5d %10ld%c %10ld%c %10ld%c\\n\", OBJECT_SIZE (i),\n+      fprintf (stderr, \"%-5lu %10lu%c %10lu%c %10lu%c\\n\",\n+\t       (unsigned long) OBJECT_SIZE (i),\n \t       SCALE (allocated), LABEL (allocated),\n \t       SCALE (in_use), LABEL (in_use),\n \t       SCALE (overhead), LABEL (overhead));\n       total_overhead += overhead;\n     }\n-  fprintf (stderr, \"%-5s %10ld%c %10ld%c %10ld%c\\n\", \"Total\",\n+  fprintf (stderr, \"%-5s %10lu%c %10lu%c %10lu%c\\n\", \"Total\",\n \t   SCALE (G.bytes_mapped), LABEL (G.bytes_mapped),\n \t   SCALE (G.allocated), LABEL(G.allocated),\n \t   SCALE (total_overhead), LABEL (total_overhead));"}]}