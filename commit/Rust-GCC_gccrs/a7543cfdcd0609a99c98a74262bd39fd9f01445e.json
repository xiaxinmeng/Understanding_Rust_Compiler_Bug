{"sha": "a7543cfdcd0609a99c98a74262bd39fd9f01445e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTc1NDNjZmRjZDA2MDlhOTljOThhNzQyNjJiZDM5ZmQ5ZjAxNDQ1ZQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2008-07-08T01:11:18Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2008-07-08T01:11:18Z"}, "message": "libstdc++.exp (check_v3_target_stdint): New.\n\n2008-07-07  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* testsuite/lib/libstdc++.exp (check_v3_target_stdint): New.\n\t* testsuite/lib/dg-options.exp (dg-require-cstdint): New.\n\t* testsuite/20_util/ratio/cons/cons1.cc: Use it.\n\t* testsuite/20_util/ratio/cons/cons_overflow.cc: Likewise.\n\t* testsuite/20_util/ratio/operations/ops1.cc: Likewise.\n\t* testsuite/20_util/ratio/operations/ops2.cc: Likewise.\n\t* testsuite/20_util/ratio/operations/ops3.cc: Likewise.\n\t* testsuite/20_util/ratio/operations/ops_overflow.cc: Likewise.\n\t* testsuite/20_util/ratio/comparisons/comp1.cc: Likewise.\n\t* testsuite/20_util/ratio/comparisons/comp2.cc: Likewise.\n\n\t* include/std/type_traits: Fix comment typo.\n\nFrom-SVN: r137612", "tree": {"sha": "c4255cd8fdc12d7071cf142b8404710583654637", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c4255cd8fdc12d7071cf142b8404710583654637"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a7543cfdcd0609a99c98a74262bd39fd9f01445e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7543cfdcd0609a99c98a74262bd39fd9f01445e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a7543cfdcd0609a99c98a74262bd39fd9f01445e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7543cfdcd0609a99c98a74262bd39fd9f01445e/comments", "author": null, "committer": null, "parents": [{"sha": "d508e6f85fb526c4a1c06cd761bb4925b60111ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d508e6f85fb526c4a1c06cd761bb4925b60111ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d508e6f85fb526c4a1c06cd761bb4925b60111ad"}], "stats": {"total": 278, "additions": 162, "deletions": 116}, "files": [{"sha": "d4c02c747e7c1a33c01025d3841d6a70ce9aa35b", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7543cfdcd0609a99c98a74262bd39fd9f01445e/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7543cfdcd0609a99c98a74262bd39fd9f01445e/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=a7543cfdcd0609a99c98a74262bd39fd9f01445e", "patch": "@@ -1,3 +1,18 @@\n+2008-07-07  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* testsuite/lib/libstdc++.exp (check_v3_target_stdint): New.\n+\t* testsuite/lib/dg-options.exp (dg-require-cstdint): New.\n+\t* testsuite/20_util/ratio/cons/cons1.cc: Use it.\n+\t* testsuite/20_util/ratio/cons/cons_overflow.cc: Likewise.\n+\t* testsuite/20_util/ratio/operations/ops1.cc: Likewise.\n+\t* testsuite/20_util/ratio/operations/ops2.cc: Likewise.\n+\t* testsuite/20_util/ratio/operations/ops3.cc: Likewise.\n+\t* testsuite/20_util/ratio/operations/ops_overflow.cc: Likewise.\n+\t* testsuite/20_util/ratio/comparisons/comp1.cc: Likewise.\n+\t* testsuite/20_util/ratio/comparisons/comp2.cc: Likewise.\n+\n+\t* include/std/type_traits: Fix comment typo.\n+\n 2008-07-06  Roger Sayle  <roger@eyesopen.com>\n \n \t* include/std/system_error (is_error_code_enum): Use identifier"}, {"sha": "6c97280a41bd1c3c708feaea22d85b4b45170e17", "filename": "libstdc++-v3/include/std/type_traits", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7543cfdcd0609a99c98a74262bd39fd9f01445e/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftype_traits", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7543cfdcd0609a99c98a74262bd39fd9f01445e/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftype_traits", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftype_traits?ref=a7543cfdcd0609a99c98a74262bd39fd9f01445e", "patch": "@@ -203,13 +203,13 @@ namespace std\n     : public integral_constant<bool, __has_trivial_destructor(_Tp)>\n     { };\n \n-  /// has_nothrow_default_destructor\n+  /// has_nothrow_default_constructor\n   template<typename _Tp>\n     struct has_nothrow_default_constructor\n     : public integral_constant<bool, __has_nothrow_constructor(_Tp)>\n     { };\n \n-  /// has_nothrow_copy_destructor\n+  /// has_nothrow_copy_constructor\n   template<typename _Tp>\n     struct has_nothrow_copy_constructor\n     : public integral_constant<bool, __has_nothrow_copy(_Tp)>"}, {"sha": "c916b3099984089da00205f6319a1d278e73a61f", "filename": "libstdc++-v3/testsuite/20_util/ratio/comparisons/comp1.cc", "status": "modified", "additions": 30, "deletions": 35, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7543cfdcd0609a99c98a74262bd39fd9f01445e/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fratio%2Fcomparisons%2Fcomp1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7543cfdcd0609a99c98a74262bd39fd9f01445e/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fratio%2Fcomparisons%2Fcomp1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fratio%2Fcomparisons%2Fcomp1.cc?ref=a7543cfdcd0609a99c98a74262bd39fd9f01445e", "patch": "@@ -1,4 +1,5 @@\n // { dg-options \"-std=gnu++0x\" }\n+// { dg-require-cstdint \"\" }\n \n // Copyright (C) 2008 Free Software Foundation\n //\n@@ -21,8 +22,6 @@\n #include <ratio>\n #include <testsuite_hooks.h>\n \n-#ifdef _GLIBCXX_USE_C99_STDINT_TR1\n-\n void\n test01()\n {\n@@ -31,57 +30,53 @@ test01()\n   VERIFY(( std::ratio_equal<std::ratio<2,6>, std::ratio<1,3>>::value == 1 ));\n   VERIFY(( std::ratio_equal<std::ratio<2,6>, std::ratio<1,4>>::value == 0 ));\n   \n-  VERIFY(( std::ratio_not_equal<std::ratio<2,6>, \n-           std::ratio<1,3>>::value == 0 ));\n-  VERIFY(( std::ratio_not_equal<std::ratio<2,6>, \n-           std::ratio<1,4>>::value == 1 ));\n+  VERIFY( (std::ratio_not_equal<std::ratio<2,6>, \n+           std::ratio<1,3>>::value == 0) );\n+  VERIFY( (std::ratio_not_equal<std::ratio<2,6>, \n+           std::ratio<1,4>>::value == 1) );\n }\n \n void\n test02()\n {\n   bool test __attribute__((unused)) = true;\n  \n-  VERIFY(( std::ratio_less<std::ratio<1,4>, std::ratio<1,3>>::value == 1 ));\n-  VERIFY(( std::ratio_less<std::ratio<-1,3>, std::ratio<1,3>>::value == 1 ));\n+  VERIFY( (std::ratio_less<std::ratio<1,4>, std::ratio<1,3>>::value == 1) );\n+  VERIFY( (std::ratio_less<std::ratio<-1,3>, std::ratio<1,3>>::value == 1) );\n   \n-  VERIFY(( std::ratio_less<std::ratio<1,3>, std::ratio<1,4>>::value == 0 ));\n-  VERIFY(( std::ratio_less<std::ratio<1,3>, std::ratio<-1,3>>::value == 0 ));\n+  VERIFY( (std::ratio_less<std::ratio<1,3>, std::ratio<1,4>>::value == 0) );\n+  VERIFY( (std::ratio_less<std::ratio<1,3>, std::ratio<-1,3>>::value == 0) );\n       \n-  VERIFY(( std::ratio_less_equal<std::ratio<-1,3>, \n-           std::ratio<-1,3>>::value == 1 ));\n-  VERIFY(( std::ratio_less_equal<std::ratio<1,4>, \n-           std::ratio<1,3>>::value == 1 ));\n+  VERIFY( (std::ratio_less_equal<std::ratio<-1,3>, \n+           std::ratio<-1,3>>::value == 1) );\n+  VERIFY( ( std::ratio_less_equal<std::ratio<1,4>, \n+           std::ratio<1,3>>::value == 1) );\n   \n-  VERIFY(( std::ratio_less_equal<std::ratio<1,4>, \n-           std::ratio<-1,3>>::value == 0 ));\n-  VERIFY(( std::ratio_less_equal<std::ratio<1,3>, \n-           std::ratio<-1,3>>::value == 0 ));\n+  VERIFY( (std::ratio_less_equal<std::ratio<1,4>, \n+           std::ratio<-1,3>>::value == 0) );\n+  VERIFY( (std::ratio_less_equal<std::ratio<1,3>, \n+           std::ratio<-1,3>>::value == 0) );\n   \n-  VERIFY(( std::ratio_greater<std::ratio<1,3>, std::ratio<1,4>>::value == 1 ));\n-  VERIFY(( std::ratio_greater<std::ratio<1,3>, std::ratio<-1,3>>::value == 1 ));\n+  VERIFY( (std::ratio_greater<std::ratio<1,3>, std::ratio<1,4>>::value == 1) );\n+  VERIFY( (std::ratio_greater<std::ratio<1,3>, std::ratio<-1,3>>::value == 1) );\n   \n-  VERIFY(( std::ratio_greater<std::ratio<1,4>, std::ratio<1,3>>::value == 0 ));\n-  VERIFY(( std::ratio_greater<std::ratio<-1,3>, std::ratio<1,3>>::value == 0 ));\n+  VERIFY( (std::ratio_greater<std::ratio<1,4>, std::ratio<1,3>>::value == 0) );\n+  VERIFY( (std::ratio_greater<std::ratio<-1,3>, std::ratio<1,3>>::value == 0) );\n \n-  VERIFY(( std::ratio_greater_equal<std::ratio<1,3>, \n-           std::ratio<1,3>>::value == 1 ));\n-  VERIFY(( std::ratio_greater_equal<std::ratio<1,3>, \n-           std::ratio<-1,3>>::value == 1 ));\n-  \n-  VERIFY(( std::ratio_greater_equal<std::ratio<-1,3>, \n-           std::ratio<1,3>>::value == 0 ));\n-  VERIFY(( std::ratio_greater_equal<std::ratio<1,4>, \n-           std::ratio<1,3>>::value == 0 ));\n-}\n+  VERIFY( (std::ratio_greater_equal<std::ratio<1,3>, \n+           std::ratio<1,3>>::value == 1) );\n+  VERIFY( (std::ratio_greater_equal<std::ratio<1,3>, \n+           std::ratio<-1,3>>::value == 1) );\n \n-#endif //_GLIBCXX_USE_C99_STDINT_TR1\n+  VERIFY( (std::ratio_greater_equal<std::ratio<-1,3>, \n+           std::ratio<1,3>>::value == 0) );\n+  VERIFY( (std::ratio_greater_equal<std::ratio<1,4>, \n+           std::ratio<1,3>>::value == 0) );\n+}\n \n int main()\n {\n-#ifdef _GLIBCXX_USE_C99_STDINT_TR1\n   test01();\n   test02();\n-#endif\n   return 0;\n }"}, {"sha": "56052e45328e23d8beb7c20f893946b2220e9b4e", "filename": "libstdc++-v3/testsuite/20_util/ratio/comparisons/comp2.cc", "status": "modified", "additions": 12, "deletions": 17, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7543cfdcd0609a99c98a74262bd39fd9f01445e/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fratio%2Fcomparisons%2Fcomp2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7543cfdcd0609a99c98a74262bd39fd9f01445e/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fratio%2Fcomparisons%2Fcomp2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fratio%2Fcomparisons%2Fcomp2.cc?ref=a7543cfdcd0609a99c98a74262bd39fd9f01445e", "patch": "@@ -1,4 +1,5 @@\n // { dg-options \"-std=gnu++0x\" }\n+// { dg-require-cstdint \"\" }\n \n // Copyright (C) 2008 Free Software Foundation\n //\n@@ -21,36 +22,30 @@\n #include <ratio>\n #include <testsuite_hooks.h>\n \n-#ifdef _GLIBCXX_USE_C99_STDINT_TR1\n-\n static const std::intmax_t M = INTMAX_MAX;\n \n void\n test01()\n {\n   bool test __attribute__((unused)) = true;\n  \n-  //no overflow with same denominator\n-  VERIFY(( std::ratio_less<std::ratio<M - 2, M>,\n-           std::ratio<M - 1, M>>::value == 1 ) );\n+  // No overflow with same denominator\n+  VERIFY( (std::ratio_less<std::ratio<M - 2, M>,\n+           std::ratio<M - 1, M>>::value == 1) );\n   \n-  VERIFY(( std::ratio_less<std::ratio<M - 1, M>,\n-           std::ratio<M - 2, M>>::value == 0 ) );\n-           \n-  //no overflow if signs differ\n-  VERIFY(( std::ratio_less<std::ratio<-M, M - 1>,\n-           std::ratio<M - 1, M - 2>>::value == 1 ) );\n+  VERIFY( (std::ratio_less<std::ratio<M - 1, M>,\n+           std::ratio<M - 2, M>>::value == 0) );\n+     \n+  // No overflow if signs differ\n+  VERIFY( (std::ratio_less<std::ratio<-M, M - 1>,\n+           std::ratio<M - 1, M - 2>>::value == 1) );\n   \n-  VERIFY(( std::ratio_less<std::ratio<M - 1, M - 2>,\n-           std::ratio<-M, M - 1>>::value == 0 ) );\n+  VERIFY( (std::ratio_less<std::ratio<M - 1, M - 2>,\n+           std::ratio<-M, M - 1>>::value == 0) );\n }\n \n-#endif //_GLIBCXX_USE_C99_STDINT_TR1\n-\n int main()\n {\n-#ifdef _GLIBCXX_USE_C99_STDINT_TR1\n   test01();\n-#endif\n   return 0;\n }"}, {"sha": "84860699ac8fab2ee39cd0a47f8e74ad9322b537", "filename": "libstdc++-v3/testsuite/20_util/ratio/cons/cons1.cc", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7543cfdcd0609a99c98a74262bd39fd9f01445e/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fratio%2Fcons%2Fcons1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7543cfdcd0609a99c98a74262bd39fd9f01445e/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fratio%2Fcons%2Fcons1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fratio%2Fcons%2Fcons1.cc?ref=a7543cfdcd0609a99c98a74262bd39fd9f01445e", "patch": "@@ -1,4 +1,5 @@\n // { dg-options \"-std=gnu++0x\" }\n+// { dg-require-cstdint \"\" }\n \n // 2008-07-03 Chris Fairles <chris.fairles@gmail.com>\n \n@@ -23,8 +24,6 @@\n #include <ratio>\n #include <testsuite_hooks.h>\n \n-#ifdef _GLIBCXX_USE_C99_STDINT_TR1\n-\n void\n test01()\n {\n@@ -46,12 +45,8 @@ test01()\n   VERIFY( r3.den == r0.den );  \n }\n \n-#endif //_GLIBCXX_USE_C99_STDINT_TR1\n-\n int main()\n {\n-#ifdef _GLIBCXX_USE_C99_STDINT_TR1\n   test01();\n-#endif //_GLIBCXX_USE_C99_STDINT_TR1\n   return 0;\n }"}, {"sha": "570ea6cbc7d52558e151b20598ffba7d85ae8731", "filename": "libstdc++-v3/testsuite/20_util/ratio/cons/cons_overflow.cc", "status": "modified", "additions": 5, "deletions": 8, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7543cfdcd0609a99c98a74262bd39fd9f01445e/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fratio%2Fcons%2Fcons_overflow.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7543cfdcd0609a99c98a74262bd39fd9f01445e/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fratio%2Fcons%2Fcons_overflow.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fratio%2Fcons%2Fcons_overflow.cc?ref=a7543cfdcd0609a99c98a74262bd39fd9f01445e", "patch": "@@ -1,5 +1,6 @@\n-// { dg-options \"-std=gnu++0x\" }\n // { dg-do compile }\n+// { dg-options \"-std=gnu++0x\" }\n+// { dg-require-cstdint \"\" }\n \n // Copyright (C) 2008 Free Software Foundation\n //\n@@ -21,8 +22,6 @@\n \n #include <ratio>\n \n-#ifdef _GLIBCXX_USE_C99_STDINT_TR1\n-\n void\n test01()\n {\n@@ -48,11 +47,9 @@ test04()\n   std::ratio<1,0> r1;\n }\n \n-// { dg-error \"instantiated from here\" \"\" { target *-*-* } 36 }\n-// { dg-error \"instantiated from here\" \"\" { target *-*-* } 42 }\n-// { dg-error \"instantiated from here\" \"\" { target *-*-* } 48 }\n+// { dg-error \"instantiated from here\" \"\" { target *-*-* } 35 }\n+// { dg-error \"instantiated from here\" \"\" { target *-*-* } 41 }\n+// { dg-error \"instantiated from here\" \"\" { target *-*-* } 47 }\n // { dg-error \"denominator cannot be zero\" \"\" { target *-*-* } 150 }\n // { dg-error \"out of range\" \"\" { target *-*-* } 151 }\n // { dg-excess-errors \"In instantiation of\" }\n-\n-#endif //_GLIBCXX_USE_C99_STDINT_TR1"}, {"sha": "b05092dd8e9d22ff2ad288bacc8f2cffb2a1c736", "filename": "libstdc++-v3/testsuite/20_util/ratio/operations/ops1.cc", "status": "modified", "additions": 9, "deletions": 14, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7543cfdcd0609a99c98a74262bd39fd9f01445e/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fratio%2Foperations%2Fops1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7543cfdcd0609a99c98a74262bd39fd9f01445e/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fratio%2Foperations%2Fops1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fratio%2Foperations%2Fops1.cc?ref=a7543cfdcd0609a99c98a74262bd39fd9f01445e", "patch": "@@ -1,4 +1,5 @@\n // { dg-options \"-std=gnu++0x\" }\n+// { dg-require-cstdint \"\" }\n \n // 2008-07-03 Chris Fairles <chris.fairles@gmail.com>\n \n@@ -23,17 +24,15 @@\n #include <ratio>\n #include <testsuite_hooks.h>\n \n-#ifdef _GLIBCXX_USE_C99_STDINT_TR1\n-\n void\n test01()\n {\n   bool test __attribute__((unused)) = true;\n \n   std::ratio_add<std::ratio<3,8>, std::ratio<5,12>>::type r;\n \n-  VERIFY( r.num == 19);\n-  VERIFY( r.den == 24);\n+  VERIFY( r.num == 19 );\n+  VERIFY( r.den == 24 );\n }\n \n void\n@@ -42,8 +41,8 @@ test02()\n   bool test __attribute__((unused)) = true;\n   std::ratio_subtract<std::ratio<3,8>, std::ratio<5,12>>::type r;\n \n-  VERIFY( r.num == -1);\n-  VERIFY( r.den == 24);\n+  VERIFY( r.num == -1 );\n+  VERIFY( r.den == 24 );\n }\n \n void\n@@ -52,8 +51,8 @@ test03()\n   bool test __attribute__((unused)) = true;\n   std::ratio_multiply<std::ratio<3,8>, std::ratio<5,12>>::type r;\n \n-  VERIFY( r.num == 5);\n-  VERIFY( r.den == 32);\n+  VERIFY( r.num == 5 );\n+  VERIFY( r.den == 32 );\n }\n \n void\n@@ -62,19 +61,15 @@ test04()\n   bool test __attribute__((unused)) = true;\n   std::ratio_divide<std::ratio<3,8>, std::ratio<5,12>>::type r;\n \n-  VERIFY( r.num == 9);\n-  VERIFY( r.den == 10);\n+  VERIFY( r.num == 9 );\n+  VERIFY( r.den == 10 );\n }\n \n-#endif //_GLIBCXX_USE_C99_STDINT_TR1\n-\n int main()\n {\n-#ifdef _GLIBCXX_USE_C99_STDINT_TR1\n   test01();\n   test02();\n   test03();\n   test04();\n-#endif //_GLIBCXX_USE_C99_STDINT_TR1\n   return 0;\n }"}, {"sha": "3d3241f31284fe63ed3c4e2dc18cd6c361e0a204", "filename": "libstdc++-v3/testsuite/20_util/ratio/operations/ops2.cc", "status": "modified", "additions": 5, "deletions": 10, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7543cfdcd0609a99c98a74262bd39fd9f01445e/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fratio%2Foperations%2Fops2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7543cfdcd0609a99c98a74262bd39fd9f01445e/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fratio%2Foperations%2Fops2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fratio%2Foperations%2Fops2.cc?ref=a7543cfdcd0609a99c98a74262bd39fd9f01445e", "patch": "@@ -1,4 +1,5 @@\n // { dg-options \"-std=gnu++0x\" }\n+// { dg-require-cstdint \"\" }\n \n // 2008-07-03 Chris Fairles <chris.fairles@gmail.com>\n \n@@ -23,8 +24,6 @@\n #include <ratio>\n #include <testsuite_hooks.h>\n \n-#ifdef _GLIBCXX_USE_C99_STDINT_TR1\n-\n typedef std::ratio<1, INTMAX_MAX> one_over_max;\n typedef std::ratio<2, INTMAX_MAX> two_over_max;\n typedef std::ratio<INTMAX_MAX, 1> max_over_one;\n@@ -44,8 +43,8 @@ test01()\n     std::ratio<INTMAX_MAX / 2, INTMAX_MAX / 2>,\n     std::ratio<INTMAX_MAX / 2 , INTMAX_MAX / 2 + 1>>::type r2;\n   \n-  VERIFY( r2.num == INTMAX_MAX);\n-  VERIFY( r2.den == (INTMAX_MAX / 2) + 1);\n+  VERIFY( r2.num == INTMAX_MAX );\n+  VERIFY( r2.den == (INTMAX_MAX / 2) + 1 );\n }\n \n void\n@@ -62,17 +61,13 @@ test02()\n     std::ratio<INTMAX_MAX / 2, INTMAX_MAX / 2>,\n     std::ratio<INTMAX_MAX / 2 , INTMAX_MAX / 2 + 1>>::type r2;\n   \n-  VERIFY( r2.num == 1);\n-  VERIFY( r2.den == (INTMAX_MAX / 2) + 1);\n+  VERIFY( r2.num == 1 );\n+  VERIFY( r2.den == (INTMAX_MAX / 2) + 1 );\n }\n \n-#endif //_GLIBCXX_USE_C99_STDINT_TR1\n-\n int main()\n {\n-#ifdef _GLIBCXX_USE_C99_STDINT_TR1\n   test01();\n   test02();\n-#endif //_GLIBCXX_USE_C99_STDINT_TR1\n   return 0;\n }"}, {"sha": "2008275a216785748170cb418d3c611e084d2366", "filename": "libstdc++-v3/testsuite/20_util/ratio/operations/ops3.cc", "status": "modified", "additions": 9, "deletions": 14, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7543cfdcd0609a99c98a74262bd39fd9f01445e/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fratio%2Foperations%2Fops3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7543cfdcd0609a99c98a74262bd39fd9f01445e/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fratio%2Foperations%2Fops3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fratio%2Foperations%2Fops3.cc?ref=a7543cfdcd0609a99c98a74262bd39fd9f01445e", "patch": "@@ -1,4 +1,5 @@\n // { dg-options \"-std=gnu++0x\" }\n+// { dg-require-cstdint \"\" }\n \n // 2008-07-03 Chris Fairles <chris.fairles@gmail.com>\n \n@@ -23,8 +24,6 @@\n #include <ratio>\n #include <testsuite_hooks.h>\n \n-#ifdef _GLIBCXX_USE_C99_STDINT_TR1\n-\n void\n test01()\n {\n@@ -34,15 +33,15 @@ test01()\n     std::ratio<2, INTMAX_MAX>,\n     std::ratio<INTMAX_MAX, 2>>::type r1;\n \n-  VERIFY( r1.num == 1);\n-  VERIFY( r1.den == 1);\n+  VERIFY( r1.num == 1 );\n+  VERIFY( r1.den == 1 );\n \n   std::ratio_multiply<\n     std::ratio<INTMAX_MAX, 2>,\n     std::ratio<2 , INTMAX_MAX - 1>>::type r2;\n   \n-  VERIFY( r2.num == INTMAX_MAX);\n-  VERIFY( r2.den == INTMAX_MAX - 1);\n+  VERIFY( r2.num == INTMAX_MAX );\n+  VERIFY( r2.den == INTMAX_MAX - 1 );\n }\n \n void\n@@ -54,24 +53,20 @@ test02()\n     std::ratio<INTMAX_MAX, 2>,\n     std::ratio<INTMAX_MAX, 2>>::type r1;\n \n-  VERIFY( r1.num == 1);\n-  VERIFY( r1.den == 1);\n+  VERIFY( r1.num == 1 );\n+  VERIFY( r1.den == 1 );\n \n   std::ratio_divide<\n     std::ratio<INTMAX_MAX-1, 2>,\n     std::ratio<INTMAX_MAX, 2>>::type r2;\n   \n-  VERIFY( r2.num == INTMAX_MAX - 1);\n-  VERIFY( r2.den == INTMAX_MAX);\n+  VERIFY( r2.num == INTMAX_MAX - 1 );\n+  VERIFY( r2.den == INTMAX_MAX );\n }\n \n-#endif //_GLIBCXX_USE_C99_STDINT_TR1\n-\n int main()\n {\n-#ifdef _GLIBCXX_USE_C99_STDINT_TR1\n   test01();\n   test02();\n-#endif //_GLIBCXX_USE_C99_STDINT_TR1\n   return 0;\n }"}, {"sha": "860f9f253b2804496aa0edf4c75ffcc1933b127c", "filename": "libstdc++-v3/testsuite/20_util/ratio/operations/ops_overflow.cc", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7543cfdcd0609a99c98a74262bd39fd9f01445e/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fratio%2Foperations%2Fops_overflow.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7543cfdcd0609a99c98a74262bd39fd9f01445e/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fratio%2Foperations%2Fops_overflow.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fratio%2Foperations%2Fops_overflow.cc?ref=a7543cfdcd0609a99c98a74262bd39fd9f01445e", "patch": "@@ -1,5 +1,6 @@\n-// { dg-options \"-std=gnu++0x\" }\n // { dg-do compile }\n+// { dg-options \"-std=gnu++0x\" }\n+// { dg-require-cstdint \"\" }\n \n // 2008-07-03 Chris Fairles <chris.fairles@gmail.com>\n \n@@ -23,8 +24,6 @@\n \n #include <ratio>\n \n-#ifdef _GLIBCXX_USE_C99_STDINT_TR1\n-\n void\n test01()\n {\n@@ -38,14 +37,12 @@ test02()\n   std::ratio_multiply<std::ratio<INTMAX_MAX>, std::ratio<INTMAX_MAX>>::type r2;\n }\n \n-// { dg-error \"instantiated from here\" \"\" { target *-*-* } 31 }\n+// { dg-error \"instantiated from here\" \"\" { target *-*-* } 30 }\n+// { dg-error \"instantiated from here\" \"\" { target *-*-* } 36 }\n // { dg-error \"instantiated from here\" \"\" { target *-*-* } 37 }\n-// { dg-error \"instantiated from here\" \"\" { target *-*-* } 38 }\n // { dg-error \"overflow in addition\" \"\" { target *-*-* } 127 }\n // { dg-error \"overflow in multiplication\" \"\" { target *-*-* } 95 }\n // { dg-error \"overflow in multiplication\" \"\" { target *-*-* } 97 }\n // { dg-error \"overflow in multiplication\" \"\" { target *-*-* } 99 }\n // { dg-excess-errors \"In instantiation of\" }\n // { dg-excess-errors \"out of range\" }\n-\n-#endif //_GLIBCXX_USE_C99_STDINT_TR1"}, {"sha": "e2d22ae598bc6d019f10ae8f149cac45ec71f5b8", "filename": "libstdc++-v3/testsuite/lib/dg-options.exp", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7543cfdcd0609a99c98a74262bd39fd9f01445e/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Fdg-options.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7543cfdcd0609a99c98a74262bd39fd9f01445e/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Fdg-options.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Fdg-options.exp?ref=a7543cfdcd0609a99c98a74262bd39fd9f01445e", "patch": "@@ -88,3 +88,12 @@ proc dg-require-rvalref { args } {\n     }\n     return\n }\n+\n+proc dg-require-cstdint { args } {\n+    if { ![ check_v3_target_cstdint ] } {\n+\tupvar dg-do-what dg-do-what\n+\tset dg-do-what [list [lindex ${dg-do-what} 0] \"N\" \"P\"]\n+\treturn\n+    }\n+    return\n+}"}, {"sha": "d8c168defacfab31e3067cf38a51f7334b9f89fe", "filename": "libstdc++-v3/testsuite/lib/libstdc++.exp", "status": "modified", "additions": 61, "deletions": 3, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7543cfdcd0609a99c98a74262bd39fd9f01445e/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Flibstdc%2B%2B.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7543cfdcd0609a99c98a74262bd39fd9f01445e/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Flibstdc%2B%2B.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Flibstdc%2B%2B.exp?ref=a7543cfdcd0609a99c98a74262bd39fd9f01445e", "patch": "@@ -1,6 +1,6 @@\n # libstdc++ \"tool init file\" for DejaGNU\n \n-# Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007\n+# Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008\n # Free Software Foundation, Inc.\n #\n # This program is free software; you can redistribute it and/or modify\n@@ -939,7 +939,7 @@ proc check_v3_target_debug_mode { } {\n     } else {\n \tset et_debug_mode 0\n \n-\t# Set up, compile, and execute a C++ test program that depends\n+\t# Set up and compile a C++ test program that depends\n \t# on debug mode working.\n \tset src debug_mode[pid].cc\n \tset exe debug_mode[pid].exe\n@@ -993,7 +993,7 @@ proc check_v3_target_parallel_mode { } {\n     } else {\n \tset et_parallel_mode 0\n \n-\t# Set up, compile, and execute a C++ test program that depends\n+\t# Set up and compile a C++ test program that depends\n \t# on parallel mode working.\n \tset src parallel_mode[pid].cc\n \tset exe parallel_mode[pid].exe\n@@ -1021,3 +1021,61 @@ proc check_v3_target_parallel_mode { } {\n     verbose \"check_v3_target_parallel_mode: $et_parallel_mode\" 2\n     return $et_parallel_mode\n }\n+\n+proc check_v3_target_cstdint { } {\n+    global cxxflags\n+    global DEFAULT_CXXFLAGS\n+    global et_cstdint\n+\n+    global tool\t\n+\n+    if { ![info exists et_cstdint_target_name] } {\n+\tset et_cstdint_target_name \"\"\n+    }\n+\n+    # If the target has changed since we set the cached value, clear it.\n+    set current_target [current_target_name]\n+    if { $current_target != $et_cstdint_target_name } {\n+\tverbose \"check_v3_target_cstdint: `$et_cstdint_target_name'\" 2\n+\tset et_cstdint_target_name $current_target\n+\tif [info exists et_cstdint] {\n+\t    verbose \"check_v3_target_cstdint: removing cached result\" 2\n+\t    unset et_cstdint\n+\t}\n+    }\n+\n+    if [info exists et_cstdint] {\n+\tverbose \"check_v3_target_cstdint: using cached result\" 2\n+    } else {\n+\tset et_cstdint 0\n+\n+\t# Set up and compile a C++0x test program that depends\n+\t# on the C99 stdint facilities to be available.\n+\tset src cstdint[pid].cc\n+\tset exe cstdint[pid].exe\n+\n+\tset f [open $src \"w\"]\n+\tputs $f \"#include <cstdint>\"\n+\tputs $f \"int main()\"\n+\tputs $f \"#ifdef _GLIBCXX_USE_C99_STDINT_TR1\"\n+\tputs $f \"{ return 0; }\"\n+\tputs $f \"#endif\"\n+\tclose $f\n+\n+\tset cxxflags_saved $cxxflags\n+\tset cxxflags \"$cxxflags $DEFAULT_CXXFLAGS -std=gnu++0x -Werror\"\n+\n+\tset lines [v3_target_compile $src $exe executable \"\"]\n+\tset cxxflags $cxxflags_saved\n+\tfile delete $src\n+\n+\tif [string match \"\" $lines] {\n+\t    # No error message, compilation succeeded.\n+\t    set et_cstdint 1\n+\t} else {\n+\t    verbose \"check_v3_target_cstdint: compilation failed\" 2\n+\t}\n+    }\n+    verbose \"check_v3_target_cstdint: $et_cstdint\" 2\n+    return $et_cstdint\n+}"}]}