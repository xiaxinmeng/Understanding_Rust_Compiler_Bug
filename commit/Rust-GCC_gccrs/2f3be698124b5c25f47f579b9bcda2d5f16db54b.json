{"sha": "2f3be698124b5c25f47f579b9bcda2d5f16db54b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmYzYmU2OTgxMjRiNWMyNWY0N2Y1NzliOWJjZGEyZDVmMTZkYjU0Yg==", "commit": {"author": {"name": "Terry Guo", "email": "terry.guo@arm.com", "date": "2013-11-28T12:31:51Z"}, "committer": {"name": "Xuepeng Guo", "email": "xguo@gcc.gnu.org", "date": "2013-11-28T12:31:51Z"}, "message": "arm.c (v7m_extra_costs): New table.\n\n2013-11-28  Terry Guo  <terry.guo@arm.com>\n\n\t* config/arm/arm.c (v7m_extra_costs): New table.\n\t(arm_v7m_tune): Use it.\n\nFrom-SVN: r205484", "tree": {"sha": "24552c0c8e56fceecb9d60947b91313a8f03e756", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/24552c0c8e56fceecb9d60947b91313a8f03e756"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2f3be698124b5c25f47f579b9bcda2d5f16db54b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f3be698124b5c25f47f579b9bcda2d5f16db54b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f3be698124b5c25f47f579b9bcda2d5f16db54b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f3be698124b5c25f47f579b9bcda2d5f16db54b/comments", "author": null, "committer": null, "parents": [{"sha": "ff082cab8150ceabc83e2321824c5a4f372df396", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff082cab8150ceabc83e2321824c5a4f372df396", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff082cab8150ceabc83e2321824c5a4f372df396"}], "stats": {"total": 107, "additions": 106, "deletions": 1}, "files": [{"sha": "777fe094d7dea85528433eba902e5a90a5bb2157", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f3be698124b5c25f47f579b9bcda2d5f16db54b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f3be698124b5c25f47f579b9bcda2d5f16db54b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2f3be698124b5c25f47f579b9bcda2d5f16db54b", "patch": "@@ -1,3 +1,8 @@\n+2013-11-28  Terry Guo  <terry.guo@arm.com>\n+\n+\t* config/arm/arm.c (v7m_extra_costs): New table.\n+\t(arm_v7m_tune): Use it.\n+\n 2013-11-28  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* config/sol2.h (TIME_LIBRARY): Define."}, {"sha": "3b15ba8db83b9966139c06b23ef3968ad4658ba4", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 101, "deletions": 1, "changes": 102, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f3be698124b5c25f47f579b9bcda2d5f16db54b/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f3be698124b5c25f47f579b9bcda2d5f16db54b/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=2f3be698124b5c25f47f579b9bcda2d5f16db54b", "patch": "@@ -1264,6 +1264,106 @@ const struct cpu_cost_table cortexa15_extra_costs =\n   }\n };\n \n+const struct cpu_cost_table v7m_extra_costs =\n+{\n+  /* ALU */\n+  {\n+    0,\t\t\t/* Arith.  */\n+    0,\t\t\t/* Logical.  */\n+    0,\t\t\t/* Shift.  */\n+    0,\t\t\t/* Shift_reg.  */\n+    0,\t\t\t/* Arith_shift.  */\n+    COSTS_N_INSNS (1),\t/* Arith_shift_reg.  */\n+    0,\t\t\t/* Log_shift.  */\n+    COSTS_N_INSNS (1),\t/* Log_shift_reg.  */\n+    0,\t\t\t/* Extend.  */\n+    COSTS_N_INSNS (1),\t/* Extend_arith.  */\n+    0,\t\t\t/* Bfi.  */\n+    0,\t\t\t/* Bfx.  */\n+    0,\t\t\t/* Clz.  */\n+    COSTS_N_INSNS (1),\t/* non_exec.  */\n+    false\t\t/* non_exec_costs_exec.  */\n+  },\n+  {\n+    /* MULT SImode */\n+    {\n+      COSTS_N_INSNS (1),\t/* Simple.  */\n+      COSTS_N_INSNS (1),\t/* Flag_setting.  */\n+      COSTS_N_INSNS (2),\t/* Extend.  */\n+      COSTS_N_INSNS (1),\t/* Add.  */\n+      COSTS_N_INSNS (3),\t/* Extend_add.  */\n+      COSTS_N_INSNS (8)\t\t/* Idiv.  */\n+    },\n+    /* MULT DImode */\n+    {\n+      0,\t\t\t/* Simple (N/A).  */\n+      0,\t\t\t/* Flag_setting (N/A).  */\n+      COSTS_N_INSNS (2),\t/* Extend.  */\n+      0,\t\t\t/* Add (N/A).  */\n+      COSTS_N_INSNS (3),\t/* Extend_add.  */\n+      0\t\t\t\t/* Idiv (N/A).  */\n+    }\n+  },\n+  /* LD/ST */\n+  {\n+    COSTS_N_INSNS (2),\t/* Load.  */\n+    0,\t\t\t/* Load_sign_extend.  */\n+    COSTS_N_INSNS (3),\t/* Ldrd.  */\n+    COSTS_N_INSNS (2),\t/* Ldm_1st.  */\n+    1,\t\t\t/* Ldm_regs_per_insn_1st.  */\n+    1,\t\t\t/* Ldm_regs_per_insn_subsequent.  */\n+    COSTS_N_INSNS (2),\t/* Loadf.  */\n+    COSTS_N_INSNS (3),\t/* Loadd.  */\n+    COSTS_N_INSNS (1),  /* Load_unaligned.  */\n+    COSTS_N_INSNS (2),\t/* Store.  */\n+    COSTS_N_INSNS (3),\t/* Strd.  */\n+    COSTS_N_INSNS (2),\t/* Stm_1st.  */\n+    1,\t\t\t/* Stm_regs_per_insn_1st.  */\n+    1,\t\t\t/* Stm_regs_per_insn_subsequent.  */\n+    COSTS_N_INSNS (2),\t/* Storef.  */\n+    COSTS_N_INSNS (3),\t/* Stored.  */\n+    COSTS_N_INSNS (1)  /* Store_unaligned.  */\n+  },\n+  {\n+    /* FP SFmode */\n+    {\n+      COSTS_N_INSNS (7),\t/* Div.  */\n+      COSTS_N_INSNS (2),\t/* Mult.  */\n+      COSTS_N_INSNS (5),\t/* Mult_addsub.  */\n+      COSTS_N_INSNS (3),\t/* Fma.  */\n+      COSTS_N_INSNS (1),\t/* Addsub.  */\n+      0,\t\t\t/* Fpconst.  */\n+      0,\t\t\t/* Neg.  */\n+      0,\t\t\t/* Compare.  */\n+      0,\t\t\t/* Widen.  */\n+      0,\t\t\t/* Narrow.  */\n+      0,\t\t\t/* Toint.  */\n+      0,\t\t\t/* Fromint.  */\n+      0\t\t\t\t/* Roundint.  */\n+    },\n+    /* FP DFmode */\n+    {\n+      COSTS_N_INSNS (15),\t/* Div.  */\n+      COSTS_N_INSNS (5),\t/* Mult.  */\n+      COSTS_N_INSNS (7),\t/* Mult_addsub.  */\n+      COSTS_N_INSNS (7),\t/* Fma.  */\n+      COSTS_N_INSNS (3),\t/* Addsub.  */\n+      0,\t\t\t/* Fpconst.  */\n+      0,\t\t\t/* Neg.  */\n+      0,\t\t\t/* Compare.  */\n+      0,\t\t\t/* Widen.  */\n+      0,\t\t\t/* Narrow.  */\n+      0,\t\t\t/* Toint.  */\n+      0,\t\t\t/* Fromint.  */\n+      0\t\t\t\t/* Roundint.  */\n+    }\n+  },\n+  /* Vector */\n+  {\n+    COSTS_N_INSNS (1)\t/* Alu.  */\n+  }\n+};\n+\n const struct tune_params arm_slowmul_tune =\n {\n   arm_slowmul_rtx_costs,\n@@ -1473,7 +1573,7 @@ const struct tune_params arm_cortex_a9_tune =\n const struct tune_params arm_v7m_tune =\n {\n   arm_9e_rtx_costs,\n-  &generic_extra_costs,\n+  &v7m_extra_costs,\n   NULL,\t\t\t\t\t\t/* Sched adj cost.  */\n   1,\t\t\t\t\t\t/* Constant limit.  */\n   5,\t\t\t\t\t\t/* Max cond insns.  */"}]}