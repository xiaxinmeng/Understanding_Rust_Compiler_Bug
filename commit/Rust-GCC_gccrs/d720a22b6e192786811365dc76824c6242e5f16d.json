{"sha": "d720a22b6e192786811365dc76824c6242e5f16d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDcyMGEyMmI2ZTE5Mjc4NjgxMTM2NWRjNzY4MjRjNjI0MmU1ZjE2ZA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely.gcc@gmail.com", "date": "2012-11-07T09:17:42Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2012-11-07T09:17:42Z"}, "message": "stl_vector.h (vector(size_type)): Add missing allocator parameter.\n\n\t* include/bits/stl_vector.h (vector(size_type)): Add missing allocator\n\tparameter.\n\t* include/bits/stl_bvector.h: Likewise.\n\t* include/debug/vector (vector(size_type)): Likewise.\n\t* include/profile/vector (vector(size_type)): Likewise. Pass allocator\n\tto base constructor.\n\t* testsuite/23_containers/vector/requirements/dr438/assign_neg.cc:\n\tAdjust dg-error line numbers.\n\t* testsuite/23_containers/vector/requirements/dr438/\n\tconstructor_1_neg.cc: Likewise.\n\t* testsuite/23_containers/vector/requirements/dr438/\n\tconstructor_2_neg.cc: Likewise.\n\t* testsuite/23_containers/vector/requirements/dr438/insert_neg.cc:\n\tLikewise.\n\nFrom-SVN: r193284", "tree": {"sha": "620d7f53cf5dd17bea18ed6eacf0aac0bf4a48c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/620d7f53cf5dd17bea18ed6eacf0aac0bf4a48c1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d720a22b6e192786811365dc76824c6242e5f16d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d720a22b6e192786811365dc76824c6242e5f16d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d720a22b6e192786811365dc76824c6242e5f16d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d720a22b6e192786811365dc76824c6242e5f16d/comments", "author": null, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aaa050aa4a13eb045ae5db57d8a50a5b4121c29e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aaa050aa4a13eb045ae5db57d8a50a5b4121c29e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aaa050aa4a13eb045ae5db57d8a50a5b4121c29e"}], "stats": {"total": 56, "additions": 45, "deletions": 11}, "files": [{"sha": "233f2b96b5b207d48c7a6e2215d3c400b9e16cc7", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d720a22b6e192786811365dc76824c6242e5f16d/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d720a22b6e192786811365dc76824c6242e5f16d/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=d720a22b6e192786811365dc76824c6242e5f16d", "patch": "@@ -1,3 +1,20 @@\n+2012-11-07  Jonathan Wakely  <jwakely.gcc@gmail.com>\n+\n+\t* include/bits/stl_vector.h (vector(size_type)): Add missing allocator\n+\tparameter.\n+\t* include/bits/stl_bvector.h: Likewise.\n+\t* include/debug/vector (vector(size_type)): Likewise.\n+\t* include/profile/vector (vector(size_type)): Likewise. Pass allocator\n+\tto base constructor.\n+\t* testsuite/23_containers/vector/requirements/dr438/assign_neg.cc:\n+\tAdjust dg-error line numbers.\n+\t* testsuite/23_containers/vector/requirements/dr438/\n+\tconstructor_1_neg.cc: Likewise.\n+\t* testsuite/23_containers/vector/requirements/dr438/\n+\tconstructor_2_neg.cc: Likewise.\n+\t* testsuite/23_containers/vector/requirements/dr438/insert_neg.cc:\n+\tLikewise.\n+\n 2012-11-06  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR libstdc++/51850"}, {"sha": "b8d3efbf6511135669625f4140583a4302c8557b", "filename": "libstdc++-v3/include/bits/stl_bvector.h", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d720a22b6e192786811365dc76824c6242e5f16d/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_bvector.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d720a22b6e192786811365dc76824c6242e5f16d/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_bvector.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_bvector.h?ref=d720a22b6e192786811365dc76824c6242e5f16d", "patch": "@@ -555,6 +555,21 @@ template<typename _Alloc>\n     vector(const allocator_type& __a)\n     : _Base(__a) { }\n \n+#ifdef __GXX_EXPERIMENTAL_CXX0X__\n+    explicit\n+    vector(size_type __n, const allocator_type& __a = allocator_type())\n+    : vector(__n, false, __a)\n+    { }\n+\n+    vector(size_type __n, const bool& __value, \n+\t   const allocator_type& __a = allocator_type())\n+    : _Base(__a)\n+    {\n+      _M_initialize(__n);\n+      std::fill(this->_M_impl._M_start._M_p, this->_M_impl._M_end_of_storage, \n+\t\t__value ? ~0 : 0);\n+    }\n+#else\n     explicit\n     vector(size_type __n, const bool& __value = bool(), \n \t   const allocator_type& __a = allocator_type())\n@@ -564,6 +579,7 @@ template<typename _Alloc>\n       std::fill(this->_M_impl._M_start._M_p, this->_M_impl._M_end_of_storage, \n \t\t__value ? ~0 : 0);\n     }\n+#endif\n \n     vector(const vector& __x)\n     : _Base(__x._M_get_Bit_allocator())"}, {"sha": "1f14f7eda7ec6a12c0cd9fff6ec0a6b1bb750862", "filename": "libstdc++-v3/include/bits/stl_vector.h", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d720a22b6e192786811365dc76824c6242e5f16d/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_vector.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d720a22b6e192786811365dc76824c6242e5f16d/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_vector.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_vector.h?ref=d720a22b6e192786811365dc76824c6242e5f16d", "patch": "@@ -261,13 +261,14 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n       /**\n        *  @brief  Creates a %vector with default constructed elements.\n        *  @param  __n  The number of elements to initially create.\n+       *  @param  __a  An allocator.\n        *\n        *  This constructor fills the %vector with @a __n default\n        *  constructed elements.\n        */\n       explicit\n-      vector(size_type __n)\n-      : _Base(__n)\n+      vector(size_type __n, const allocator_type& __a = allocator_type())\n+      : _Base(__n, __a)\n       { _M_default_initialize(__n); }\n \n       /**"}, {"sha": "fe65bab0c7a3aca73372fe73958ea060f3c8c6d6", "filename": "libstdc++-v3/include/debug/vector", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d720a22b6e192786811365dc76824c6242e5f16d/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fvector", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d720a22b6e192786811365dc76824c6242e5f16d/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fvector", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fvector?ref=d720a22b6e192786811365dc76824c6242e5f16d", "patch": "@@ -83,8 +83,8 @@ namespace __debug\n \n #ifdef __GXX_EXPERIMENTAL_CXX0X__\n       explicit\n-      vector(size_type __n)\n-      : _Base(__n), _M_guaranteed_capacity(__n) { }\n+      vector(size_type __n, const _Allocator& __a = _Allocator())\n+      : _Base(__n, __a), _M_guaranteed_capacity(__n) { }\n \n       vector(size_type __n, const _Tp& __value,\n \t     const _Allocator& __a = _Allocator())"}, {"sha": "ec931a3bd91a151f04583fa1c0ed8a96cda1ec3e", "filename": "libstdc++-v3/include/profile/vector", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d720a22b6e192786811365dc76824c6242e5f16d/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fvector", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d720a22b6e192786811365dc76824c6242e5f16d/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fvector", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fvector?ref=d720a22b6e192786811365dc76824c6242e5f16d", "patch": "@@ -84,8 +84,8 @@ namespace __profile\n \n #ifdef __GXX_EXPERIMENTAL_CXX0X__\n       explicit\n-      vector(size_type __n)\n-      : _Base(__n)\n+      vector(size_type __n, const _Allocator& __a = _Allocator())\n+      : _Base(__n, __a)\n       {\n         __profcxx_vector_construct(this, this->capacity());\n         __profcxx_vector_construct2(this);\n@@ -147,7 +147,7 @@ namespace __profile\n       }\n \n       vector(const _Base& __x, const _Allocator& __a)\n-      : _Base(__x) \n+      : _Base(__x, __a)\n       { \n         __profcxx_vector_construct(this, this->capacity());\n         __profcxx_vector_construct2(this);"}, {"sha": "8c009891f5f76190fad31818759a57db9baaf264", "filename": "libstdc++-v3/testsuite/23_containers/vector/requirements/dr438/assign_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d720a22b6e192786811365dc76824c6242e5f16d/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fdr438%2Fassign_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d720a22b6e192786811365dc76824c6242e5f16d/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fdr438%2Fassign_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fdr438%2Fassign_neg.cc?ref=d720a22b6e192786811365dc76824c6242e5f16d", "patch": "@@ -18,7 +18,7 @@\n // <http://www.gnu.org/licenses/>.\n \n // { dg-do compile }\n-// { dg-error \"no matching\" \"\" { target *-*-* } 1236 }\n+// { dg-error \"no matching\" \"\" { target *-*-* } 1237 }\n \n #include <vector>\n "}, {"sha": "e5a46445782903beb5eb044bd9db658477f7495d", "filename": "libstdc++-v3/testsuite/23_containers/vector/requirements/dr438/constructor_1_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d720a22b6e192786811365dc76824c6242e5f16d/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fdr438%2Fconstructor_1_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d720a22b6e192786811365dc76824c6242e5f16d/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fdr438%2Fconstructor_1_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fdr438%2Fconstructor_1_neg.cc?ref=d720a22b6e192786811365dc76824c6242e5f16d", "patch": "@@ -18,7 +18,7 @@\n // <http://www.gnu.org/licenses/>.\n \n // { dg-do compile }\n-// { dg-error \"no matching\" \"\" { target *-*-* } 1166 }\n+// { dg-error \"no matching\" \"\" { target *-*-* } 1167 }\n \n #include <vector>\n "}, {"sha": "9e2924c2f235b2601f17899e2191bbd1362408b0", "filename": "libstdc++-v3/testsuite/23_containers/vector/requirements/dr438/constructor_2_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d720a22b6e192786811365dc76824c6242e5f16d/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fdr438%2Fconstructor_2_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d720a22b6e192786811365dc76824c6242e5f16d/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fdr438%2Fconstructor_2_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fdr438%2Fconstructor_2_neg.cc?ref=d720a22b6e192786811365dc76824c6242e5f16d", "patch": "@@ -18,7 +18,7 @@\n // <http://www.gnu.org/licenses/>.\n \n // { dg-do compile }\n-// { dg-error \"no matching\" \"\" { target *-*-* } 1166 }\n+// { dg-error \"no matching\" \"\" { target *-*-* } 1167 }\n \n #include <vector>\n #include <utility>"}, {"sha": "e4bec2668e7c7a3c990ccb01c82d3bdafb242bcf", "filename": "libstdc++-v3/testsuite/23_containers/vector/requirements/dr438/insert_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d720a22b6e192786811365dc76824c6242e5f16d/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fdr438%2Finsert_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d720a22b6e192786811365dc76824c6242e5f16d/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fdr438%2Finsert_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fdr438%2Finsert_neg.cc?ref=d720a22b6e192786811365dc76824c6242e5f16d", "patch": "@@ -18,7 +18,7 @@\n // <http://www.gnu.org/licenses/>.\n \n // { dg-do compile }\n-// { dg-error \"no matching\" \"\" { target *-*-* } 1277 }\n+// { dg-error \"no matching\" \"\" { target *-*-* } 1278 }\n \n #include <vector>\n "}]}