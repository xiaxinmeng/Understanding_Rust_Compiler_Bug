{"sha": "c0cdbd39634ec31bb882cb8fd10281c466a3f116", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzBjZGJkMzk2MzRlYzMxYmI4ODJjYjhmZDEwMjgxYzQ2NmEzZjExNg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-02-20T13:48:32Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-02-20T13:48:32Z"}, "message": "[multiple changes]\n\n2014-02-20  Robert Dewar  <dewar@adacore.com>\n\n\t* s-os_lib.ads (Rename_File): Minor commment addition.\n\n2014-02-20  Thomas Quinot  <quinot@adacore.com>\n\n\t* einfo.ads: Minor reformatting.\n\n2014-02-20  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* aspects.adb (Exchange_Aspects): New routine.\n\t* aspects.ads (Exchange_Aspects): New routine.\n\t* atree.adb (Rewrite): Do not check whether the save node has\n\taspects as it never will, instead check the node about to be clobbered.\n\t* einfo.adb (Write_Field25_Name): Abstract_States can appear in\n\tentities of generic packages.\n\t* sem_ch6.adb (Analyze_Expression_Function): Fix the parent\n\tpointer of an aspect specification list after rewriting takes place.\n\t* sem_ch7.adb (Analyze_Package_Body_Helper): Swap the aspect\n\tspecifications of the generic template and the copy used for analysis.\n\t* sem_ch12.adb (Analyze_Generic_Package_Declaration): Swap\n\tthe aspect specifications of the generic template and the\n\tcopy used for analysis.\n\t(Analyze_Package_Instantiation): Propagate the aspect specifications\n\tfrom the generic template to the instantiation.\n\t(Build_Instance_Compilation_Unit_Nodes): Propagate the aspect\n\tspecifications from the generic template to the instantiation.\n\t* sem_ch13.adb (Analyze_Aspect_Specifications): Handle aspects\n\tAbstract_State, Initializes and Initial_Condition when they\n\tapply to a package instantiation.\n\n2014-02-20  Robert Dewar  <dewar@adacore.com>\n\n\t* stringt.adb: Add call to Initialize in package initialization.\n\nFrom-SVN: r207946", "tree": {"sha": "92d48152d59a4acf2b86ea5aed380bc117b69211", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/92d48152d59a4acf2b86ea5aed380bc117b69211"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c0cdbd39634ec31bb882cb8fd10281c466a3f116", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0cdbd39634ec31bb882cb8fd10281c466a3f116", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0cdbd39634ec31bb882cb8fd10281c466a3f116", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0cdbd39634ec31bb882cb8fd10281c466a3f116/comments", "author": null, "committer": null, "parents": [{"sha": "fe4552f4aa8a2a96a58bd2c2d4db8a41bee97936", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe4552f4aa8a2a96a58bd2c2d4db8a41bee97936", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe4552f4aa8a2a96a58bd2c2d4db8a41bee97936"}], "stats": {"total": 183, "additions": 159, "deletions": 24}, "files": [{"sha": "ccd4d0e1c8f1f874ad47f8dc24bb993656b7d382", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0cdbd39634ec31bb882cb8fd10281c466a3f116/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0cdbd39634ec31bb882cb8fd10281c466a3f116/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=c0cdbd39634ec31bb882cb8fd10281c466a3f116", "patch": "@@ -1,3 +1,38 @@\n+2014-02-20  Robert Dewar  <dewar@adacore.com>\n+\n+\t* s-os_lib.ads (Rename_File): Minor commment addition.\n+\n+2014-02-20  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* einfo.ads: Minor reformatting.\n+\n+2014-02-20  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* aspects.adb (Exchange_Aspects): New routine.\n+\t* aspects.ads (Exchange_Aspects): New routine.\n+\t* atree.adb (Rewrite): Do not check whether the save node has\n+\taspects as it never will, instead check the node about to be clobbered.\n+\t* einfo.adb (Write_Field25_Name): Abstract_States can appear in\n+\tentities of generic packages.\n+\t* sem_ch6.adb (Analyze_Expression_Function): Fix the parent\n+\tpointer of an aspect specification list after rewriting takes place.\n+\t* sem_ch7.adb (Analyze_Package_Body_Helper): Swap the aspect\n+\tspecifications of the generic template and the copy used for analysis.\n+\t* sem_ch12.adb (Analyze_Generic_Package_Declaration): Swap\n+\tthe aspect specifications of the generic template and the\n+\tcopy used for analysis.\n+\t(Analyze_Package_Instantiation): Propagate the aspect specifications\n+\tfrom the generic template to the instantiation.\n+\t(Build_Instance_Compilation_Unit_Nodes): Propagate the aspect\n+\tspecifications from the generic template to the instantiation.\n+\t* sem_ch13.adb (Analyze_Aspect_Specifications): Handle aspects\n+\tAbstract_State, Initializes and Initial_Condition when they\n+\tapply to a package instantiation.\n+\n+2014-02-20  Robert Dewar  <dewar@adacore.com>\n+\n+\t* stringt.adb: Add call to Initialize in package initialization.\n+\n 2014-02-20  Robert Dewar  <dewar@adacore.com>\n \n \t* a-crbtgk.adb, a-cihama.adb, a-coinve.adb, a-ciorse.adb, a-crbtgo.adb,"}, {"sha": "3e45c508e76d33c5ef1f19d4fcfdf24edffd849e", "filename": "gcc/ada/aspects.adb", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0cdbd39634ec31bb882cb8fd10281c466a3f116/gcc%2Fada%2Faspects.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0cdbd39634ec31bb882cb8fd10281c466a3f116/gcc%2Fada%2Faspects.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Faspects.adb?ref=c0cdbd39634ec31bb882cb8fd10281c466a3f116", "patch": "@@ -174,6 +174,31 @@ package body Aspects is\n       return True;\n    end Aspects_On_Body_Or_Stub_OK;\n \n+   ----------------------\n+   -- Exchange_Aspects --\n+   ----------------------\n+\n+   procedure Exchange_Aspects (N1 : Node_Id; N2 : Node_Id) is\n+   begin\n+      pragma Assert\n+        (Permits_Aspect_Specifications (N1)\n+           and then Permits_Aspect_Specifications (N2));\n+\n+      --  Perform the exchange only when both nodes have lists to be swapped\n+\n+      if Has_Aspects (N1) and then Has_Aspects (N2) then\n+         declare\n+            L1 : constant List_Id := Aspect_Specifications (N1);\n+            L2 : constant List_Id := Aspect_Specifications (N2);\n+         begin\n+            Set_Parent (L1, N2);\n+            Set_Parent (L2, N1);\n+            Aspect_Specifications_Hash_Table.Set (N1, L2);\n+            Aspect_Specifications_Hash_Table.Set (N2, L1);\n+         end;\n+      end if;\n+   end Exchange_Aspects;\n+\n    -----------------\n    -- Find_Aspect --\n    -----------------"}, {"sha": "d0b625edc435206fdb4a3021b985824f4779b5a6", "filename": "gcc/ada/aspects.ads", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0cdbd39634ec31bb882cb8fd10281c466a3f116/gcc%2Fada%2Faspects.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0cdbd39634ec31bb882cb8fd10281c466a3f116/gcc%2Fada%2Faspects.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Faspects.ads?ref=c0cdbd39634ec31bb882cb8fd10281c466a3f116", "patch": "@@ -786,6 +786,11 @@ package Aspects is\n    --  N denotes a body [stub] with aspects. Determine whether all aspects of N\n    --  are allowed to appear on a body [stub].\n \n+   procedure Exchange_Aspects (N1 : Node_Id; N2 : Node_Id);\n+   --  Exchange the aspect specifications of two nodes. If either node lacks an\n+   --  aspect specification list, the routine has no effect. It is assumed that\n+   --  both nodes can support aspects.\n+\n    function Find_Aspect (Id : Entity_Id; A : Aspect_Id) return Node_Id;\n    --  Find the aspect specification of aspect A associated with entity I.\n    --  Return Empty if Id does not have the requested aspect."}, {"sha": "9e7897e79aadc71c61ee14b27c603f2da4f629ff", "filename": "gcc/ada/atree.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0cdbd39634ec31bb882cb8fd10281c466a3f116/gcc%2Fada%2Fatree.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0cdbd39634ec31bb882cb8fd10281c466a3f116/gcc%2Fada%2Fatree.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fatree.adb?ref=c0cdbd39634ec31bb882cb8fd10281c466a3f116", "patch": "@@ -1870,8 +1870,7 @@ package body Atree is\n          --  Both the old and new copies of the node will share the same list\n          --  of aspect specifications if aspect specifications are present.\n \n-         if Has_Aspects (Sav_Node) then\n-            Set_Has_Aspects (Sav_Node, False);\n+         if Old_Has_Aspects then\n             Set_Aspect_Specifications\n               (Sav_Node, Aspect_Specifications (Old_Node));\n          end if;"}, {"sha": "1502d446aad561139e252313a1c1965c409cc88e", "filename": "gcc/ada/einfo.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0cdbd39634ec31bb882cb8fd10281c466a3f116/gcc%2Fada%2Feinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0cdbd39634ec31bb882cb8fd10281c466a3f116/gcc%2Fada%2Feinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.adb?ref=c0cdbd39634ec31bb882cb8fd10281c466a3f116", "patch": "@@ -9290,7 +9290,8 @@ package body Einfo is\n    procedure Write_Field25_Name (Id : Entity_Id) is\n    begin\n       case Ekind (Id) is\n-         when E_Package                                    =>\n+         when E_Generic_Package                            |\n+              E_Package                                    =>\n             Write_Str (\"Abstract_States\");\n \n          when E_Variable                                   =>"}, {"sha": "9fef149ecca5fe45067b4b4bf12d6664f384aeac", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0cdbd39634ec31bb882cb8fd10281c466a3f116/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0cdbd39634ec31bb882cb8fd10281c466a3f116/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=c0cdbd39634ec31bb882cb8fd10281c466a3f116", "patch": "@@ -3622,13 +3622,12 @@ package Einfo is\n --       in a Relative_Deadline pragma for a task type.\n \n --    Renamed_Entity (Node18)\n---       Defined in exceptions, packages, subprograms and generic units. Set\n+--       Defined in exceptions, packages, subprograms, and generic units. Set\n --       for entities that are defined by a renaming declaration. Denotes the\n --       renamed entity, or transitively the ultimate renamed entity if\n --       there is a chain of renaming declarations. Empty if no renaming.\n \n --    Renamed_In_Spec (Flag231)\n-\n --       Defined in package entities. If a package renaming occurs within\n --       a package spec, then this flag is set on the renamed package. The\n --       purpose is to prevent a warning about unused entities in the renamed"}, {"sha": "00aebc24e1a6110910f33fbdd3945100969ba698", "filename": "gcc/ada/s-os_lib.ads", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0cdbd39634ec31bb882cb8fd10281c466a3f116/gcc%2Fada%2Fs-os_lib.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0cdbd39634ec31bb882cb8fd10281c466a3f116/gcc%2Fada%2Fs-os_lib.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-os_lib.ads?ref=c0cdbd39634ec31bb882cb8fd10281c466a3f116", "patch": "@@ -301,7 +301,9 @@ package System.OS_Lib is\n       New_Name : String;\n       Success  : out Boolean);\n    --  Rename a file. Success is set True or False indicating if the rename is\n-   --  successful or not.\n+   --  successful or not. Note that on some Systems (notably Windows), if there\n+   --  is already an existing file with the name New_Name, that is one of the\n+   --  conditions that can cause failure.\n \n    --  The following defines the mode for the Copy_File procedure below. Note\n    --  that \"time stamps and other file attributes\" in the descriptions below"}, {"sha": "15c1cbe36c0c3fce9df3ed2883ca2a8a07d28b71", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 24, "deletions": 3, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0cdbd39634ec31bb882cb8fd10281c466a3f116/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0cdbd39634ec31bb882cb8fd10281c466a3f116/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=c0cdbd39634ec31bb882cb8fd10281c466a3f116", "patch": "@@ -3019,6 +3019,11 @@ package body Sem_Ch12 is\n       New_N := Copy_Generic_Node (N, Empty, Instantiating => False);\n       Set_Parent_Spec (New_N, Save_Parent);\n       Rewrite (N, New_N);\n+\n+      --  Once the contents of the generic copy and the template are swapped,\n+      --  do the same for their respective aspect specifications.\n+\n+      Exchange_Aspects (N, New_N);\n       Id := Defining_Entity (N);\n       Generate_Definition (Id);\n \n@@ -3088,7 +3093,6 @@ package body Sem_Ch12 is\n             Check_References (Id);\n          end if;\n       end if;\n-\n    end Analyze_Generic_Package_Declaration;\n \n    --------------------------------------------\n@@ -3598,7 +3602,7 @@ package body Sem_Ch12 is\n            Make_Package_Renaming_Declaration (Loc,\n              Defining_Unit_Name =>\n                Make_Defining_Identifier (Loc, Chars (Gen_Unit)),\n-             Name => New_Occurrence_Of (Act_Decl_Id, Loc));\n+             Name               => New_Occurrence_Of (Act_Decl_Id, Loc));\n \n          Append (Unit_Renaming, Renaming_List);\n \n@@ -3616,6 +3620,14 @@ package body Sem_Ch12 is\n            Make_Package_Declaration (Loc,\n              Specification => Act_Spec);\n \n+         --  Propagate the aspect specifications from the package declaration\n+         --  template to the instantiated version of the package declaration.\n+\n+         if Has_Aspects (Act_Tree) then\n+            Set_Aspect_Specifications (Act_Decl,\n+              New_Copy_List_Tree (Aspect_Specifications (Act_Tree)));\n+         end if;\n+\n          --  Save the instantiation node, for subsequent instantiation of the\n          --  body, if there is one and we are generating code for the current\n          --  unit. Mark unit as having a body (avoids premature error message).\n@@ -5007,7 +5019,7 @@ package body Sem_Ch12 is\n           Unit           => Act_Decl,\n           Aux_Decls_Node => Make_Compilation_Unit_Aux (Sloc (N)));\n \n-      Set_Parent_Spec   (Act_Decl, Parent_Spec (N));\n+      Set_Parent_Spec (Act_Decl, Parent_Spec (N));\n \n       --  The new compilation unit is linked to its body, but both share the\n       --  same file, so we do not set Body_Required on the new unit so as not\n@@ -5018,6 +5030,15 @@ package body Sem_Ch12 is\n       --  compilation unit of the instance, since this is the main unit.\n \n       Rewrite (N, Act_Body);\n+\n+      --  Propagate the aspect specifications from the package body template to\n+      --  the instantiated version of the package body.\n+\n+      if Has_Aspects (Act_Body) then\n+         Set_Aspect_Specifications\n+           (N, New_Copy_List_Tree (Aspect_Specifications (Act_Body)));\n+      end if;\n+\n       Body_Cunit := Parent (N);\n \n       --  The two compilation unit nodes are linked by the Library_Unit field"}, {"sha": "1e81110fec6bf769ad4babfd50b985ca7f70240b", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 42, "deletions": 15, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0cdbd39634ec31bb882cb8fd10281c466a3f116/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0cdbd39634ec31bb882cb8fd10281c466a3f116/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=c0cdbd39634ec31bb882cb8fd10281c466a3f116", "patch": "@@ -2008,13 +2008,22 @@ package body Sem_Ch13 is\n                --  immediately.\n \n                when Aspect_Abstract_State => Abstract_State : declare\n-                  Decls : List_Id;\n+                  Context : Node_Id := N;\n+                  Decls   : List_Id;\n \n                begin\n-                  if Nkind_In (N, N_Generic_Package_Declaration,\n-                                  N_Package_Declaration)\n+                  --  When aspect Abstract_State appears on a generic package,\n+                  --  it is propageted to the package instance. The context in\n+                  --  this case is the instance spec.\n+\n+                  if Nkind (Context) = N_Package_Instantiation then\n+                     Context := Instance_Spec (Context);\n+                  end if;\n+\n+                  if Nkind_In (Context, N_Generic_Package_Declaration,\n+                                        N_Package_Declaration)\n                   then\n-                     Decls := Visible_Declarations (Specification (N));\n+                     Decls := Visible_Declarations (Specification (Context));\n \n                      Make_Aitem_Pragma\n                        (Pragma_Argument_Associations => New_List (\n@@ -2025,7 +2034,7 @@ package body Sem_Ch13 is\n \n                      if No (Decls) then\n                         Decls := New_List;\n-                        Set_Visible_Declarations (N, Decls);\n+                        Set_Visible_Declarations (Context, Decls);\n                      end if;\n \n                      Prepend_To (Decls, Aitem);\n@@ -2084,13 +2093,22 @@ package body Sem_Ch13 is\n                --  it must be evaluated at the end of the said declarations.\n \n                when Aspect_Initial_Condition => Initial_Condition : declare\n-                  Decls : List_Id;\n+                  Context : Node_Id := N;\n+                  Decls   : List_Id;\n \n                begin\n-                  if Nkind_In (N, N_Generic_Package_Declaration,\n-                                  N_Package_Declaration)\n+                  --  When aspect Abstract_State appears on a generic package,\n+                  --  it is propageted to the package instance. The context in\n+                  --  this case is the instance spec.\n+\n+                  if Nkind (Context) = N_Package_Instantiation then\n+                     Context := Instance_Spec (Context);\n+                  end if;\n+\n+                  if Nkind_In (Context, N_Generic_Package_Declaration,\n+                                        N_Package_Declaration)\n                   then\n-                     Decls := Visible_Declarations (Specification (N));\n+                     Decls := Visible_Declarations (Specification (Context));\n \n                      Make_Aitem_Pragma\n                        (Pragma_Argument_Associations => New_List (\n@@ -2104,7 +2122,7 @@ package body Sem_Ch13 is\n \n                      if No (Decls) then\n                         Decls := New_List;\n-                        Set_Visible_Declarations (N, Decls);\n+                        Set_Visible_Declarations (Context, Decls);\n                      end if;\n \n                      Prepend_To (Decls, Aitem);\n@@ -2125,13 +2143,22 @@ package body Sem_Ch13 is\n                --  said declarations.\n \n                when Aspect_Initializes => Initializes : declare\n-                  Decls : List_Id;\n+                  Context : Node_Id := N;\n+                  Decls   : List_Id;\n \n                begin\n-                  if Nkind_In (N, N_Generic_Package_Declaration,\n-                                  N_Package_Declaration)\n+                  --  When aspect Abstract_State appears on a generic package,\n+                  --  it is propageted to the package instance. The context in\n+                  --  this case is the instance spec.\n+\n+                  if Nkind (Context) = N_Package_Instantiation then\n+                     Context := Instance_Spec (Context);\n+                  end if;\n+\n+                  if Nkind_In (Context, N_Generic_Package_Declaration,\n+                                        N_Package_Declaration)\n                   then\n-                     Decls := Visible_Declarations (Specification (N));\n+                     Decls := Visible_Declarations (Specification (Context));\n \n                      Make_Aitem_Pragma\n                        (Pragma_Argument_Associations => New_List (\n@@ -2144,7 +2171,7 @@ package body Sem_Ch13 is\n \n                      if No (Decls) then\n                         Decls := New_List;\n-                        Set_Visible_Declarations (N, Decls);\n+                        Set_Visible_Declarations (Context, Decls);\n                      end if;\n \n                      Prepend_To (Decls, Aitem);"}, {"sha": "2bd2e3c70806b09ae03dc10eaf0f82f1504c0816", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0cdbd39634ec31bb882cb8fd10281c466a3f116/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0cdbd39634ec31bb882cb8fd10281c466a3f116/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=c0cdbd39634ec31bb882cb8fd10281c466a3f116", "patch": "@@ -374,6 +374,13 @@ package body Sem_Ch6 is\n          Generate_Reference (Prev, Defining_Entity (N), 'b', Force => True);\n          Rewrite (N, New_Body);\n \n+         --  Correct the parent pointer of the aspect specification list to\n+         --  reference the rewritten node.\n+\n+         if Has_Aspects (N) then\n+            Set_Parent (Aspect_Specifications (N), N);\n+         end if;\n+\n          --  Propagate any pragmas that apply to the expression function to the\n          --  proper body when the expression function acts as a completion.\n          --  Aspects are automatically transfered because of node rewriting.\n@@ -429,6 +436,14 @@ package body Sem_Ch6 is\n            Make_Subprogram_Declaration (Loc, Specification => Spec);\n \n          Rewrite (N, New_Decl);\n+\n+         --  Correct the parent pointer of the aspect specification list to\n+         --  reference the rewritten node.\n+\n+         if Has_Aspects (N) then\n+            Set_Parent (Aspect_Specifications (N), N);\n+         end if;\n+\n          Analyze (N);\n          Set_Is_Inlined (Defining_Entity (New_Decl));\n "}, {"sha": "caf69cea7f9ee15796b3d2dd00a10fcaf4183a22", "filename": "gcc/ada/sem_ch7.adb", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0cdbd39634ec31bb882cb8fd10281c466a3f116/gcc%2Fada%2Fsem_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0cdbd39634ec31bb882cb8fd10281c466a3f116/gcc%2Fada%2Fsem_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch7.adb?ref=c0cdbd39634ec31bb882cb8fd10281c466a3f116", "patch": "@@ -327,6 +327,11 @@ package body Sem_Ch7 is\n          New_N := Copy_Generic_Node (N, Empty, Instantiating => False);\n          Rewrite (N, New_N);\n \n+         --  Once the contents of the generic copy and the template are\n+         --  swapped, do the same for their respective aspect specifications.\n+\n+         Exchange_Aspects (N, New_N);\n+\n          --  Update Body_Id to point to the copied node for the remainder of\n          --  the processing.\n "}, {"sha": "e5d1573abe1c2b6db8a7b0bf8f79ed6bfa5ed400", "filename": "gcc/ada/stringt.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0cdbd39634ec31bb882cb8fd10281c466a3f116/gcc%2Fada%2Fstringt.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0cdbd39634ec31bb882cb8fd10281c466a3f116/gcc%2Fada%2Fstringt.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fstringt.adb?ref=c0cdbd39634ec31bb882cb8fd10281c466a3f116", "patch": "@@ -475,6 +475,7 @@ package body Stringt is\n --  Setup the null string\n \n begin\n+   Initialize;\n    Start_String;\n    Null_String_Id := End_String;\n "}]}