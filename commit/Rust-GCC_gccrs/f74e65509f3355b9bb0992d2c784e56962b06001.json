{"sha": "f74e65509f3355b9bb0992d2c784e56962b06001", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Zjc0ZTY1NTA5ZjMzNTViOWJiMDk5MmQyYzc4NGU1Njk2MmIwNjAwMQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2015-12-02T16:34:58Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2015-12-02T16:34:58Z"}, "message": "mips.c (mips_emit_probe_stack_range): Adjust.\n\n\t* config/mips/mips.c (mips_emit_probe_stack_range): Adjust.\n\t(mips_output_probe_stack_range): Rotate the loop and simplify.\n\nFrom-SVN: r231188", "tree": {"sha": "4fb91cfcec800769055eff37186cc38fea07a555", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4fb91cfcec800769055eff37186cc38fea07a555"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f74e65509f3355b9bb0992d2c784e56962b06001", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f74e65509f3355b9bb0992d2c784e56962b06001", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f74e65509f3355b9bb0992d2c784e56962b06001", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f74e65509f3355b9bb0992d2c784e56962b06001/comments", "author": null, "committer": null, "parents": [{"sha": "202d0c11b90695a523cc7fabc5e225ab1f7e51a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/202d0c11b90695a523cc7fabc5e225ab1f7e51a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/202d0c11b90695a523cc7fabc5e225ab1f7e51a1"}], "stats": {"total": 31, "additions": 15, "deletions": 16}, "files": [{"sha": "c33163b87b97566e22d61ed39d7c52dd3ed0d0e1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f74e65509f3355b9bb0992d2c784e56962b06001/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f74e65509f3355b9bb0992d2c784e56962b06001/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f74e65509f3355b9bb0992d2c784e56962b06001", "patch": "@@ -1,3 +1,8 @@\n+2015-12-02  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* config/mips/mips.c (mips_emit_probe_stack_range): Adjust.\n+\t(mips_output_probe_stack_range): Rotate the loop and simplify.\n+\n 2015-12-02  David Sherwood  <david.sherwood@arm.com>\n \n \t* config/aarch64/aarch64.md: New pattern."}, {"sha": "6145944fbf7584fbafc6915cbe5fd855e1d21dc8", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 10, "deletions": 16, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f74e65509f3355b9bb0992d2c784e56962b06001/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f74e65509f3355b9bb0992d2c784e56962b06001/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=f74e65509f3355b9bb0992d2c784e56962b06001", "patch": "@@ -11364,11 +11364,12 @@ mips_emit_probe_stack_range (HOST_WIDE_INT first, HOST_WIDE_INT size)\n \n       /* Step 3: the loop\n \n-\twhile (TEST_ADDR != LAST_ADDR)\n+\tdo\n \t  {\n \t    TEST_ADDR = TEST_ADDR + PROBE_INTERVAL\n \t    probe at TEST_ADDR\n \t  }\n+\twhile (TEST_ADDR != LAST_ADDR)\n \n \tprobes at FIRST + N * PROBE_INTERVAL for values of N from 1\n \tuntil it is equal to ROUNDED_SIZE.  */\n@@ -11394,38 +11395,31 @@ const char *\n mips_output_probe_stack_range (rtx reg1, rtx reg2)\n {\n   static int labelno = 0;\n-  char loop_lab[32], end_lab[32], tmp[64];\n+  char loop_lab[32], tmp[64];\n   rtx xops[2];\n \n-  ASM_GENERATE_INTERNAL_LABEL (loop_lab, \"LPSRL\", labelno);\n-  ASM_GENERATE_INTERNAL_LABEL (end_lab, \"LPSRE\", labelno++);\n+  ASM_GENERATE_INTERNAL_LABEL (loop_lab, \"LPSRL\", labelno++);\n \n+  /* Loop.  */\n   ASM_OUTPUT_INTERNAL_LABEL (asm_out_file, loop_lab);\n \n-  /* Jump to END_LAB if TEST_ADDR == LAST_ADDR.  */\n-  xops[0] = reg1;\n-  xops[1] = reg2;\n-  strcpy (tmp, \"%(%<beq\\t%0,%1,\");\n-  output_asm_insn (strcat (tmp, &end_lab[1]), xops);\n- \n   /* TEST_ADDR = TEST_ADDR + PROBE_INTERVAL.  */\n+  xops[0] = reg1;\n   xops[1] = GEN_INT (-PROBE_INTERVAL);\n   if (TARGET_64BIT && TARGET_LONG64)\n     output_asm_insn (\"daddiu\\t%0,%0,%1\", xops);\n   else\n     output_asm_insn (\"addiu\\t%0,%0,%1\", xops);\n \n-  /* Probe at TEST_ADDR and branch.  */\n-  fprintf (asm_out_file, \"\\tb\\t\");\n-  assemble_name_raw (asm_out_file, loop_lab);\n-  fputc ('\\n', asm_out_file);\n+  /* Probe at TEST_ADDR, test if TEST_ADDR == LAST_ADDR and branch.  */\n+  xops[1] = reg2;\n+  strcpy (tmp, \"%(%<bne\\t%0,%1,\");\n+  output_asm_insn (strcat (tmp, &loop_lab[1]), xops); \n   if (TARGET_64BIT)\n     output_asm_insn (\"sd\\t$0,0(%0)%)\", xops);\n   else\n     output_asm_insn (\"sw\\t$0,0(%0)%)\", xops);\n \n-  ASM_OUTPUT_INTERNAL_LABEL (asm_out_file, end_lab);\n-\n   return \"\";\n }\n "}]}