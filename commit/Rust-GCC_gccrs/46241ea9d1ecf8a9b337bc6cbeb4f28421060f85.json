{"sha": "46241ea9d1ecf8a9b337bc6cbeb4f28421060f85", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDYyNDFlYTlkMWVjZjhhOWIzMzdiYzZjYmViNGYyODQyMTA2MGY4NQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2010-10-21T11:10:41Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2010-10-21T11:10:41Z"}, "message": "re PR tree-optimization/45764 (wrong code  -O2 vs -O3    (problem in vectorizer???))\n\n2010-10-21  Richard Guenther  <rguenther@suse.de>\n\tMichael Matz  <matz@suse.de>\n\n\tPR tree-optimization/45764\n\t* tree-vect-data-refs.c (vect_compute_data_ref_alignment):\n\tAdjust initial misalignment for negative DR_STEP.\n\t(vect_find_same_alignment_drs): Two DRs with different DR_STEP\n\tdo not have the same alignment over the whole iteration domain.\n\n        * gcc.dg/torture/pr45764.c: New testcase.\n\nCo-Authored-By: Michael Matz <matz@suse.de>\n\nFrom-SVN: r165768", "tree": {"sha": "07db227d6df5b3850d566a5d4679103b4ded669c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/07db227d6df5b3850d566a5d4679103b4ded669c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/46241ea9d1ecf8a9b337bc6cbeb4f28421060f85", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46241ea9d1ecf8a9b337bc6cbeb4f28421060f85", "html_url": "https://github.com/Rust-GCC/gccrs/commit/46241ea9d1ecf8a9b337bc6cbeb4f28421060f85", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46241ea9d1ecf8a9b337bc6cbeb4f28421060f85/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "82c1834a6f07c83204ef8c2c426355e433cbef29", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82c1834a6f07c83204ef8c2c426355e433cbef29", "html_url": "https://github.com/Rust-GCC/gccrs/commit/82c1834a6f07c83204ef8c2c426355e433cbef29"}], "stats": {"total": 62, "additions": 62, "deletions": 0}, "files": [{"sha": "c0b14a36e39070dc7b0bf64586fc739b4f02e8d2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46241ea9d1ecf8a9b337bc6cbeb4f28421060f85/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46241ea9d1ecf8a9b337bc6cbeb4f28421060f85/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=46241ea9d1ecf8a9b337bc6cbeb4f28421060f85", "patch": "@@ -1,3 +1,12 @@\n+2010-10-21  Richard Guenther  <rguenther@suse.de>\n+\tMichael Matz  <matz@suse.de>\n+\n+\tPR tree-optimization/45764\n+\t* tree-vect-data-refs.c (vect_compute_data_ref_alignment):\n+\tAdjust initial misalignment for negative DR_STEP.\n+\t(vect_find_same_alignment_drs): Two DRs with different DR_STEP\n+\tdo not have the same alignment over the whole iteration domain.\n+\n 2010-10-21  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/46111"}, {"sha": "8b12fcaec4636b28a16579aa2fc36659b00d0c66", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46241ea9d1ecf8a9b337bc6cbeb4f28421060f85/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46241ea9d1ecf8a9b337bc6cbeb4f28421060f85/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=46241ea9d1ecf8a9b337bc6cbeb4f28421060f85", "patch": "@@ -1,3 +1,9 @@\n+2010-10-21  Richard Guenther  <rguenther@suse.de>\n+\tMichael Matz  <matz@suse.de>\n+\n+\tPR tree-optimization/45764\n+\t* gcc.dg/torture/pr45764.c: New testcase.\n+\n 2010-10-21  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/46111"}, {"sha": "6d43b872596402919e87742cf6cdb0eeb6bd74e2", "filename": "gcc/testsuite/gcc.dg/torture/pr45764.c", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46241ea9d1ecf8a9b337bc6cbeb4f28421060f85/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr45764.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46241ea9d1ecf8a9b337bc6cbeb4f28421060f85/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr45764.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr45764.c?ref=46241ea9d1ecf8a9b337bc6cbeb4f28421060f85", "patch": "@@ -0,0 +1,27 @@\n+/* { dg-do run } */\n+\n+int result[64][16];\n+\n+int main()\n+{\n+  double dbuf[1000] = {0.0};\n+  int ibuf[900];\n+  int i, j;\n+\n+  double d1 = 0.0;\n+  double d2 = 0.0;\n+  for (i = 0; i < 900; ++i) {\n+      ibuf[i] = (int)(d2 - d1);\n+      d1 += dbuf[i];\n+      d2 += dbuf[i + 64];\n+  }\n+\n+  for (i = 0; i < 64; ++i) {\n+      for (j = 0; j < 8; ++j) {\n+\t  result[i][     j] = ibuf[64 - i + 64 * j];\n+\t  result[i][15 - j] = ibuf[     i + 64 * j];\n+      }\n+  }\n+\n+  return 0;\n+}"}, {"sha": "0828e22114acf3afc985d0240706e3642622e2b1", "filename": "gcc/tree-vect-data-refs.c", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46241ea9d1ecf8a9b337bc6cbeb4f28421060f85/gcc%2Ftree-vect-data-refs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46241ea9d1ecf8a9b337bc6cbeb4f28421060f85/gcc%2Ftree-vect-data-refs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-data-refs.c?ref=46241ea9d1ecf8a9b337bc6cbeb4f28421060f85", "patch": "@@ -900,6 +900,19 @@ vect_compute_data_ref_alignment (struct data_reference *dr)\n \t      || (TREE_CODE (base) == VAR_DECL\n \t\t  && DECL_ALIGN (base) >= TYPE_ALIGN (vectype)));\n \n+  /* If this is a backward running DR then first access in the larger\n+     vectype actually is N-1 elements before the address in the DR.\n+     Adjust misalign accordingly.  */\n+  if (tree_int_cst_compare (DR_STEP (dr), size_zero_node) < 0)\n+    {\n+      tree offset = ssize_int (TYPE_VECTOR_SUBPARTS (vectype) - 1);\n+      /* DR_STEP(dr) is the same as -TYPE_SIZE of the scalar type,\n+\t otherwise we wouldn't be here.  */\n+      offset = fold_build2 (MULT_EXPR, ssizetype, offset, DR_STEP (dr));\n+      /* PLUS because DR_STEP was negative.  */\n+      misalign = size_binop (PLUS_EXPR, misalign, offset);\n+    }\n+\n   /* Modulo alignment.  */\n   misalign = size_binop (FLOOR_MOD_EXPR, misalign, alignment);\n \n@@ -1934,6 +1947,13 @@ vect_find_same_alignment_drs (struct data_dependence_relation *ddr,\n   if (DDR_NUM_DIST_VECTS (ddr) == 0)\n     return;\n \n+  /* Data-dependence analysis reports a distance vector of zero\n+     for data-references that overlap only in the first iteration\n+     but have different sign step (see PR45764).\n+     So as a sanity check require equal DR_STEP.  */\n+  if (!operand_equal_p (DR_STEP (dra), DR_STEP (drb), 0))\n+    return;\n+\n   loop_depth = index_in_loop_nest (loop->num, DDR_LOOP_NEST (ddr));\n   FOR_EACH_VEC_ELT (lambda_vector, DDR_DIST_VECTS (ddr), i, dist_v)\n     {"}]}