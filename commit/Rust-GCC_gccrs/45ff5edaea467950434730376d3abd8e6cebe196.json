{"sha": "45ff5edaea467950434730376d3abd8e6cebe196", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDVmZjVlZGFlYTQ2Nzk1MDQzNDczMDM3NmQzYWJkOGU2Y2ViZTE5Ng==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2008-05-15T08:21:32Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2008-05-15T08:21:32Z"}, "message": "re PR tree-optimization/34330 (-ftree-parallelize-loops=4 ICE with the vectorizer also)\n\n2008-05-15  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/34330\n\t* tree-ssa-alias.c (get_smt_for): Only assert that accesses\n\tthrough the pointer will alias the SMT.\n\n\t* gcc.dg/torture/pr34330.c: New testcase.\n\nFrom-SVN: r135329", "tree": {"sha": "99675451abeb5c9e80d68e0b7b6f15dd819bb283", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/99675451abeb5c9e80d68e0b7b6f15dd819bb283"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/45ff5edaea467950434730376d3abd8e6cebe196", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45ff5edaea467950434730376d3abd8e6cebe196", "html_url": "https://github.com/Rust-GCC/gccrs/commit/45ff5edaea467950434730376d3abd8e6cebe196", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45ff5edaea467950434730376d3abd8e6cebe196/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e491ed09b31dc8ab89cf84cc5f94b3ee02792d12", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e491ed09b31dc8ab89cf84cc5f94b3ee02792d12", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e491ed09b31dc8ab89cf84cc5f94b3ee02792d12"}], "stats": {"total": 39, "additions": 37, "deletions": 2}, "files": [{"sha": "7451ace922f49bb1d17a27c7104f318f37be470a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45ff5edaea467950434730376d3abd8e6cebe196/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45ff5edaea467950434730376d3abd8e6cebe196/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=45ff5edaea467950434730376d3abd8e6cebe196", "patch": "@@ -1,3 +1,9 @@\n+2008-05-15  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/34330\n+\t* tree-ssa-alias.c (get_smt_for): Only assert that accesses\n+\tthrough the pointer will alias the SMT.\n+\n 2008-05-14  Andreas Tobler  <a.tobler@schweiz.org>\n \n \t* config/sparc/sparc.h (NO_PROFILE_COUNTERS): Define as 0."}, {"sha": "8215e221cd27a2fa4cba81a6fb5a9d8351abefc0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45ff5edaea467950434730376d3abd8e6cebe196/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45ff5edaea467950434730376d3abd8e6cebe196/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=45ff5edaea467950434730376d3abd8e6cebe196", "patch": "@@ -1,3 +1,8 @@\n+2008-05-15  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/34330\n+\t* gcc.dg/torture/pr34330.c: New testcase.\n+\n 2008-05-14  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n \n \tPR fortran/36059"}, {"sha": "85cfe37e8ad1ebcabc1f53fd994160bfc182be56", "filename": "gcc/testsuite/gcc.dg/torture/pr34330.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45ff5edaea467950434730376d3abd8e6cebe196/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr34330.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45ff5edaea467950434730376d3abd8e6cebe196/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr34330.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr34330.c?ref=45ff5edaea467950434730376d3abd8e6cebe196", "patch": "@@ -0,0 +1,21 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-ftree-parallelize-loops=4 -ftree-vectorize\" } */\n+\n+struct T\n+{\n+  int t;\n+  struct { short s1, s2, s3, s4; } *s;\n+};\n+\n+void\n+foo (int *a, int *b, int *c, int *d, struct T *e)\n+{\n+  int i;\n+  for (i = 0; i < e->t; i++)\n+    {\n+      e->s[i].s1 = a[i];\n+      e->s[i].s2 = b[i];\n+      e->s[i].s3 = c[i];\n+      e->s[i].s4 = d[i];\n+    }\n+}"}, {"sha": "a054329e8d4c6502d9e51db1831da2294fd1dea3", "filename": "gcc/tree-ssa-alias.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45ff5edaea467950434730376d3abd8e6cebe196/gcc%2Ftree-ssa-alias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45ff5edaea467950434730376d3abd8e6cebe196/gcc%2Ftree-ssa-alias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-alias.c?ref=45ff5edaea467950434730376d3abd8e6cebe196", "patch": "@@ -3025,8 +3025,11 @@ get_smt_for (tree ptr, struct alias_info *ai)\n   TREE_THIS_VOLATILE (tag) |= TREE_THIS_VOLATILE (tag_type);\n \n   /* Make sure that the symbol tag has the same alias set as the\n-     pointed-to type.  */\n-  gcc_assert (tag_set == get_alias_set (tag));\n+     pointed-to type or at least accesses through the pointer will\n+     alias that set.  The latter can happen after the vectorizer\n+     created pointers of vector type.  */\n+  gcc_assert (tag_set == get_alias_set (tag)\n+\t      || alias_set_subset_of (tag_set, get_alias_set (tag)));\n \n   return tag;\n }"}]}