{"sha": "4a136a214ede91ef05caac017814b142883dc80d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGExMzZhMjE0ZWRlOTFlZjA1Y2FhYzAxNzgxNGIxNDI4ODNkYzgwZA==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2020-02-05T17:53:06Z"}, "committer": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2020-02-06T16:58:23Z"}, "message": "c++: Fix ICE with lambda in operator function [PR93597]\n\nIf we are going to use get_first_fn let's make sure we operate on\nis_overloaded_fn, as the rest of the codebase does, and if lookup finds\nany class-scope declaration, return early too.\n\n\tPR c++/93597 - ICE with lambda in operator function.\n\t* name-lookup.c (maybe_save_operator_binding): Check is_overloaded_fn.\n\n\t* g++.dg/cpp0x/lambda/lambda-93597.C: New test.", "tree": {"sha": "2fbaaf508ba18858fb6293c4f6c29204515e24da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2fbaaf508ba18858fb6293c4f6c29204515e24da"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4a136a214ede91ef05caac017814b142883dc80d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a136a214ede91ef05caac017814b142883dc80d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a136a214ede91ef05caac017814b142883dc80d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a136a214ede91ef05caac017814b142883dc80d/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f78335df69993a900512f92324cab6a20b1bde0c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f78335df69993a900512f92324cab6a20b1bde0c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f78335df69993a900512f92324cab6a20b1bde0c"}], "stats": {"total": 26, "additions": 22, "deletions": 4}, "files": [{"sha": "1c8af804b63aed18df9a8d861f367c1b9ead27f6", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a136a214ede91ef05caac017814b142883dc80d/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a136a214ede91ef05caac017814b142883dc80d/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=4a136a214ede91ef05caac017814b142883dc80d", "patch": "@@ -1,3 +1,8 @@\n+2020-02-06  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/93597 - ICE with lambda in operator function.\n+\t* name-lookup.c (maybe_save_operator_binding): Check is_overloaded_fn.\n+\n 2020-02-05  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/93140"}, {"sha": "2a9bae531627eedb6579038b5c4e2ddcdfe5a044", "filename": "gcc/cp/name-lookup.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a136a214ede91ef05caac017814b142883dc80d/gcc%2Fcp%2Fname-lookup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a136a214ede91ef05caac017814b142883dc80d/gcc%2Fcp%2Fname-lookup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fname-lookup.c?ref=4a136a214ede91ef05caac017814b142883dc80d", "patch": "@@ -7624,10 +7624,10 @@ maybe_save_operator_binding (tree e)\n \n   if (!fns && (fns = op_unqualified_lookup (fnname)))\n     {\n-      tree fn = get_first_fn (fns);\n-      if (DECL_CLASS_SCOPE_P (fn))\n-\t/* We don't need to remember class-scope functions, normal unqualified\n-\t   lookup will find them again.  */\n+      tree d = is_overloaded_fn (fns) ? get_first_fn (fns) : fns;\n+      if (DECL_P (d) && DECL_CLASS_SCOPE_P (d))\n+\t/* We don't need to remember class-scope functions or declarations,\n+\t   normal unqualified lookup will find them again.  */\n \treturn;\n \n       bindings = tree_cons (fnname, fns, bindings);"}, {"sha": "601bc336290b4a3da56b92c8f4a26634e3b4f9c2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a136a214ede91ef05caac017814b142883dc80d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a136a214ede91ef05caac017814b142883dc80d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4a136a214ede91ef05caac017814b142883dc80d", "patch": "@@ -1,3 +1,8 @@\n+2020-02-06  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/93597 - ICE with lambda in operator function.\n+\t* g++.dg/cpp0x/lambda/lambda-93597.C: New test.\n+\n 2020-02-06  Tobias Burnus  <tobias@codesourcery.com>\n \n \t* gcc.target/arm/multilib.exp (multilib_config): Pass flags to"}, {"sha": "257d9c7cdfde48ae118773072e1c5d4a29245873", "filename": "gcc/testsuite/g++.dg/cpp0x/lambda/lambda-93597.C", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a136a214ede91ef05caac017814b142883dc80d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-93597.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a136a214ede91ef05caac017814b142883dc80d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-93597.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-93597.C?ref=4a136a214ede91ef05caac017814b142883dc80d", "patch": "@@ -0,0 +1,8 @@\n+// PR c++/93597 - ICE with lambda in operator function.\n+// { dg-do compile { target c++11 } }\n+\n+template <typename T>\n+struct S {\n+  using T ::operator<;\n+  void operator==(T x) { [x] { 0 < x; }; }\n+};"}]}