{"sha": "35f3782f4a742da812456d640a1f02a274598e87", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzVmMzc4MmY0YTc0MmRhODEyNDU2ZDY0MGExZjAyYTI3NDU5OGU4Nw==", "commit": {"author": {"name": "Paolo Bonzini", "email": "bonzini@gnu.org", "date": "2007-08-23T12:15:20Z"}, "committer": {"name": "Paolo Bonzini", "email": "bonzini@gcc.gnu.org", "date": "2007-08-23T12:15:20Z"}, "message": "gcc:\n\n2007-08-23  Paolo Bonzini  <bonzini@gnu.org>\n\n\t* config/i386/sse.md (*sse_and<mode>3, *sse_ior<mode>3,\n\t*sse_nand<mode>3, *sse_xor<mode>3): New.\n\ngcc/testsuite:\n2007-08-23  Paolo Bonzini  <bonzini@gnu.org>\n\n\t* gcc.target/i386/xorps-sse.c: New.\n\t* gcc.target/i386/xorps-sse2.c: New.\n\nFrom-SVN: r127735", "tree": {"sha": "15a075df961d7e376ddb30e81213d3310259d83f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/15a075df961d7e376ddb30e81213d3310259d83f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/35f3782f4a742da812456d640a1f02a274598e87", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35f3782f4a742da812456d640a1f02a274598e87", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35f3782f4a742da812456d640a1f02a274598e87", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35f3782f4a742da812456d640a1f02a274598e87/comments", "author": {"login": "bonzini", "id": 42082, "node_id": "MDQ6VXNlcjQyMDgy", "avatar_url": "https://avatars.githubusercontent.com/u/42082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bonzini", "html_url": "https://github.com/bonzini", "followers_url": "https://api.github.com/users/bonzini/followers", "following_url": "https://api.github.com/users/bonzini/following{/other_user}", "gists_url": "https://api.github.com/users/bonzini/gists{/gist_id}", "starred_url": "https://api.github.com/users/bonzini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bonzini/subscriptions", "organizations_url": "https://api.github.com/users/bonzini/orgs", "repos_url": "https://api.github.com/users/bonzini/repos", "events_url": "https://api.github.com/users/bonzini/events{/privacy}", "received_events_url": "https://api.github.com/users/bonzini/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d97ac71d00c514a7a3a4cf134b4c7c287a22599c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d97ac71d00c514a7a3a4cf134b4c7c287a22599c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d97ac71d00c514a7a3a4cf134b4c7c287a22599c"}], "stats": {"total": 94, "additions": 88, "deletions": 6}, "files": [{"sha": "b8c7a21e41b60449e477fec297ee0bfa2e236419", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35f3782f4a742da812456d640a1f02a274598e87/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35f3782f4a742da812456d640a1f02a274598e87/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=35f3782f4a742da812456d640a1f02a274598e87", "patch": "@@ -1,3 +1,8 @@\n+2007-08-23  Paolo Bonzini  <bonzini@gnu.org>\n+\n+\t* config/i386/sse.md (*sse_and<mode>3, *sse_ior<mode>3,\n+\t*sse_nand<mode>3, *sse_xor<mode>3): New.\n+\n 2007-08-23  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/i386.h (PRINT_OPERAND_PUNCT_VALID_P): Add ';' code."}, {"sha": "07969375f1d1e1dbb4ed9fe46d181cbc4006580c", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 49, "deletions": 6, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35f3782f4a742da812456d640a1f02a274598e87/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35f3782f4a742da812456d640a1f02a274598e87/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=35f3782f4a742da812456d640a1f02a274598e87", "patch": "@@ -3773,10 +3773,21 @@\n   [(set (match_operand:SSEMODEI 0 \"register_operand\" \"\")\n \t(and:SSEMODEI (match_operand:SSEMODEI 1 \"nonimmediate_operand\" \"\")\n \t\t      (match_operand:SSEMODEI 2 \"nonimmediate_operand\" \"\")))]\n-  \"TARGET_SSE2\"\n+  \"TARGET_SSE\"\n   \"ix86_fixup_binary_operands_no_copy (AND, <MODE>mode, operands);\")\n \n-(define_insn \"*and<mode>3\"\n+(define_insn \"*sse_and<mode>3\"\n+  [(set (match_operand:SSEMODEI 0 \"register_operand\" \"=x\")\n+        (and:SSEMODEI\n+          (match_operand:SSEMODEI 1 \"nonimmediate_operand\" \"%0\")\n+          (match_operand:SSEMODEI 2 \"nonimmediate_operand\" \"xm\")))]\n+  \"(TARGET_SSE && !TARGET_SSE2)\n+   && ix86_binary_operator_ok (AND, <MODE>mode, operands)\"\n+  \"andps\\t{%2, %0|%0, %2}\"\n+  [(set_attr \"type\" \"sselog\")\n+   (set_attr \"mode\" \"V4SF\")])\n+\n+(define_insn \"*sse2_and<mode>3\"\n   [(set (match_operand:SSEMODEI 0 \"register_operand\" \"=x\")\n \t(and:SSEMODEI\n \t  (match_operand:SSEMODEI 1 \"nonimmediate_operand\" \"%0\")\n@@ -3787,6 +3798,16 @@\n    (set_attr \"prefix_data16\" \"1\")\n    (set_attr \"mode\" \"TI\")])\n \n+(define_insn \"*sse_nand<mode>3\"\n+  [(set (match_operand:SSEMODEI 0 \"register_operand\" \"=x\")\n+\t(and:SSEMODEI\n+\t  (not:SSEMODEI (match_operand:SSEMODEI 1 \"register_operand\" \"0\"))\n+          (match_operand:SSEMODEI 2 \"nonimmediate_operand\" \"xm\")))]\n+  \"(TARGET_SSE && !TARGET_SSE2)\"\n+  \"andnps\\t{%2, %0|%0, %2}\"\n+  [(set_attr \"type\" \"sselog\")\n+   (set_attr \"mode\" \"V4SF\")])\n+\n (define_insn \"sse2_nand<mode>3\"\n   [(set (match_operand:SSEMODEI 0 \"register_operand\" \"=x\")\n \t(and:SSEMODEI\n@@ -3831,10 +3852,21 @@\n   [(set (match_operand:SSEMODEI 0 \"register_operand\" \"\")\n \t(ior:SSEMODEI (match_operand:SSEMODEI 1 \"nonimmediate_operand\" \"\")\n \t\t      (match_operand:SSEMODEI 2 \"nonimmediate_operand\" \"\")))]\n-  \"TARGET_SSE2\"\n+  \"TARGET_SSE\"\n   \"ix86_fixup_binary_operands_no_copy (IOR, <MODE>mode, operands);\")\n \n-(define_insn \"*ior<mode>3\"\n+(define_insn \"*sse_ior<mode>3\"\n+  [(set (match_operand:SSEMODEI 0 \"register_operand\" \"=x\")\n+        (ior:SSEMODEI\n+          (match_operand:SSEMODEI 1 \"nonimmediate_operand\" \"%0\")\n+          (match_operand:SSEMODEI 2 \"nonimmediate_operand\" \"xm\")))]\n+  \"(TARGET_SSE && !TARGET_SSE2)\n+   && ix86_binary_operator_ok (IOR, <MODE>mode, operands)\"\n+  \"orps\\t{%2, %0|%0, %2}\"\n+  [(set_attr \"type\" \"sselog\")\n+   (set_attr \"mode\" \"V4SF\")])\n+\n+(define_insn \"*sse2_ior<mode>3\"\n   [(set (match_operand:SSEMODEI 0 \"register_operand\" \"=x\")\n \t(ior:SSEMODEI\n \t  (match_operand:SSEMODEI 1 \"nonimmediate_operand\" \"%0\")\n@@ -3867,10 +3899,21 @@\n   [(set (match_operand:SSEMODEI 0 \"register_operand\" \"\")\n \t(xor:SSEMODEI (match_operand:SSEMODEI 1 \"nonimmediate_operand\" \"\")\n \t\t      (match_operand:SSEMODEI 2 \"nonimmediate_operand\" \"\")))]\n-  \"TARGET_SSE2\"\n+  \"TARGET_SSE\"\n   \"ix86_fixup_binary_operands_no_copy (XOR, <MODE>mode, operands);\")\n \n-(define_insn \"*xor<mode>3\"\n+(define_insn \"*sse_xor<mode>3\"\n+  [(set (match_operand:SSEMODEI 0 \"register_operand\" \"=x\")\n+\t(xor:SSEMODEI\n+\t  (match_operand:SSEMODEI 1 \"nonimmediate_operand\" \"%0\")\n+\t  (match_operand:SSEMODEI 2 \"nonimmediate_operand\" \"xm\")))]\n+  \"(TARGET_SSE && !TARGET_SSE2)\n+   && ix86_binary_operator_ok (XOR, <MODE>mode, operands)\"\n+  \"xorps\\t{%2, %0|%0, %2}\"\n+  [(set_attr \"type\" \"sselog\")\n+   (set_attr \"mode\" \"V4SF\")])\n+\n+(define_insn \"*sse2_xor<mode>3\"\n   [(set (match_operand:SSEMODEI 0 \"register_operand\" \"=x\")\n \t(xor:SSEMODEI\n \t  (match_operand:SSEMODEI 1 \"nonimmediate_operand\" \"%0\")"}, {"sha": "ef44671770637104e6f0df67b447ee7b461b7e04", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35f3782f4a742da812456d640a1f02a274598e87/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35f3782f4a742da812456d640a1f02a274598e87/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=35f3782f4a742da812456d640a1f02a274598e87", "patch": "@@ -11,6 +11,11 @@\n \t* gfortran.dg/min_max_optional_3.f90: Remove.\n \t* gfortran.dg/min_max_optional_4.f90: Remove.\n \n+2007-08-23  Paolo Bonzini  <bonzini@gnu.org>\n+\n+\t* gcc.target/i386/xorps-sse.c: New.\n+\t* gcc.target/i386/xorps-sse2.c: New.\n+\n 2007-08-23  Paolo Bonzini  <bonzini@gnu.org>\n \n \t* gcc.target/i386/cmov3.c: Fix scan-assembler."}, {"sha": "e9c0a2e7395fda171357959004386e91010e8d52", "filename": "gcc/testsuite/gcc.target/i386/xorps-sse.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35f3782f4a742da812456d640a1f02a274598e87/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fxorps-sse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35f3782f4a742da812456d640a1f02a274598e87/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fxorps-sse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fxorps-sse.c?ref=35f3782f4a742da812456d640a1f02a274598e87", "patch": "@@ -0,0 +1,14 @@\n+/* Test that we generate xorps instruction when pxor is not available.  */\n+/* { dg-do compile } */\n+/* { dg-options \"-O -msse -mno-sse2\" } */\n+/* { dg-final { scan-assembler \"xorps\\[ \\t\\]\" } } */\n+\n+#define vector __attribute__ ((vector_size (16)))\n+\n+vector int i(vector int f)\n+{\n+  vector int g = { 0x80000000, 0, 0x80000000, 0 };\n+  vector int f_int = (vector int) f;\n+  return (f_int ^ g);\n+}\n+"}, {"sha": "3c268b4cbaa4145a0ef83aa95c45874a7d9255c8", "filename": "gcc/testsuite/gcc.target/i386/xorps-sse2.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35f3782f4a742da812456d640a1f02a274598e87/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fxorps-sse2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35f3782f4a742da812456d640a1f02a274598e87/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fxorps-sse2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fxorps-sse2.c?ref=35f3782f4a742da812456d640a1f02a274598e87", "patch": "@@ -0,0 +1,15 @@\n+/* Test that we generate xorps when the result is used in FP math.  */\n+/* { dg-do compile } */\n+/* { dg-options \"-O -msse2 -mno-sse3\" } */\n+/* { dg-final { scan-assembler \"xorps\\[ \\t\\]\" { xfail *-*-* } } } */\n+/* { dg-final { scan-assembler-not \"pxor\" { xfail *-*-* } } } */\n+\n+#define vector __attribute__ ((vector_size (16)))\n+\n+vector float i(vector float f, vector float h)\n+{\n+  vector int g = { 0x80000000, 0, 0x80000000, 0 };\n+  vector int f_int = (vector int) f;\n+  return ((vector float) (f_int ^ g)) + h;\n+}\n+"}]}