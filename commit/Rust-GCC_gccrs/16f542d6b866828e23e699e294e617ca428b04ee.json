{"sha": "16f542d6b866828e23e699e294e617ca428b04ee", "node_id": "C_kwDOANBUbNoAKDE2ZjU0MmQ2Yjg2NjgyOGUyM2U2OTllMjk0ZTYxN2NhNDI4YjA0ZWU", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-08-27T00:17:09Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-08-27T00:17:09Z"}, "message": "Daily bump.", "tree": {"sha": "e95220d7961f63259c5f7d3cde639ba80c7a9b6d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e95220d7961f63259c5f7d3cde639ba80c7a9b6d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/16f542d6b866828e23e699e294e617ca428b04ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16f542d6b866828e23e699e294e617ca428b04ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16f542d6b866828e23e699e294e617ca428b04ee", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16f542d6b866828e23e699e294e617ca428b04ee/comments", "author": null, "committer": null, "parents": [{"sha": "d0fd62d0ff4d1e0648e11b650b4f449772663990", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0fd62d0ff4d1e0648e11b650b4f449772663990", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d0fd62d0ff4d1e0648e11b650b4f449772663990"}], "stats": {"total": 421, "additions": 420, "deletions": 1}, "files": [{"sha": "4ee88c5fb9d639450ea87334e2c1784e32e5e360", "filename": "contrib/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16f542d6b866828e23e699e294e617ca428b04ee/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16f542d6b866828e23e699e294e617ca428b04ee/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=16f542d6b866828e23e699e294e617ca428b04ee", "patch": "@@ -1,3 +1,7 @@\n+2022-08-26  Martin Liska  <mliska@suse.cz>\n+\n+\t* config-list.mk: Remove cr16.\n+\n 2022-08-19  Stefan Schulze Frielinghaus  <stefansf@linux.ibm.com>\n \n \t* clang-format: Add further FOR_EACH_ macros."}, {"sha": "f2b8efbf5a4e6f09d9f2e9cf68f1cc11fecfbbb5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 129, "deletions": 0, "changes": 129, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16f542d6b866828e23e699e294e617ca428b04ee/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16f542d6b866828e23e699e294e617ca428b04ee/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=16f542d6b866828e23e699e294e617ca428b04ee", "patch": "@@ -1,3 +1,132 @@\n+2022-08-26  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* real.cc (real_iszero): New.\n+\t* real.h (real_iszero): New.\n+\n+2022-08-26  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* real.cc (real_isinf): New overload.\n+\t(real_inf): Add sign argument.\n+\t* real.h (real_isinf): New overload.\n+\t(real_inf): Add sign argument.\n+\n+2022-08-26  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/81159\n+\t* doc/invoke.texi: Document -Wself-move.\n+\n+2022-08-26  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* value-range.cc (vrange::set): Set varying.\n+\t(vrange::set_nonzero): Same.\n+\t(vrange::set_zero): Same.\n+\t(vrange::set_nonnegative): Same.\n+\n+2022-08-26  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* range-op-float.cc (foperator_equal::op1_range): Do not blindly\n+\tcopy op2 range when honoring signed zeros.\n+\n+2022-08-26  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* tree-ssa-threadbackward.cc (possibly_profitable_path_p): Always\n+\tadd newline.\n+\t(profitable_path_p): Same.\n+\n+2022-08-26  Richard Biener  <rguenther@suse.de>\n+\n+\t* gimple-predicate-analysis.h\n+\t(uninit_analysis::use_cannot_happen): Remove.\n+\t* gimple-predicate-analysis.cc (can_be_invalidated_p): Remove.\n+\t(uninit_analysis::use_cannot_happen): Likewise.\n+\t(uninit_analysis::is_use_guarded): Do not call\n+\tuse_cannot_happen.\n+\t(dump_predicates): Remove.\n+\t(simple_control_dep_chain): Remove edge overload.\n+\n+2022-08-26  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* internal-fn.cc (expand_GOMP_TARGET_REV): New.\n+\t* internal-fn.def (GOMP_TARGET_REV): New.\n+\t* lto-cgraph.cc (lto_output_node, verify_node_partition): Mark\n+\t'omp target device_ancestor_host' as in_other_partition and don't\n+\terror if absent.\n+\t* omp-low.cc (create_omp_child_function): Mark as 'noclone'.\n+\t* omp-expand.cc (expand_omp_target): For reverse offload, remove\n+\tsorry, use device = GOMP_DEVICE_HOST_FALLBACK and create\n+\tempty-body nohost function.\n+\t* omp-offload.cc (execute_omp_device_lower): Handle\n+\tIFN_GOMP_TARGET_REV.\n+\t(pass_omp_target_link::execute): For ACCEL_COMPILER, don't\n+\tnullify fn argument for reverse offload\n+\n+2022-08-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* builtins.def (BUILT_IN_ISSIGNALING): New built-in.\n+\t* builtins.cc (expand_builtin_issignaling): New function.\n+\t(expand_builtin_signbit): Don't overwrite target.\n+\t(expand_builtin): Handle BUILT_IN_ISSIGNALING.\n+\t(fold_builtin_classify): Likewise.\n+\t(fold_builtin_1): Likewise.\n+\t* optabs.def (issignaling_optab): New.\n+\t* fold-const-call.cc (fold_const_call_ss): Handle\n+\tBUILT_IN_ISSIGNALING.\n+\t* config/i386/i386.md (issignalingxf2): New expander.\n+\t* doc/extend.texi (__builtin_issignaling): Document.\n+\t(__builtin_isinf, __builtin_isnan): Clarify behavior with\n+\t-ffinite-math-only.\n+\t* doc/md.texi (issignaling<mode>2): Likewise.\n+\n+2022-08-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/106099\n+\t* internal-fn.def (TRAP): Add ECF_LOOPING_CONST_OR_PURE flag.\n+\t* tree-cfg.cc (execute_fixup_cfg): Add IFN_TRAP instead of\n+\t__builtin_trap to avoid the need of vops.\n+\n+2022-08-26  Richard Biener  <rguenther@suse.de>\n+\n+\t* gimple-predicate-analysis.cc (dfs_mark_dominating_region):\n+\tNew helper.\n+\t(compute_control_dep_chain): Adjust to honor marked region\n+\tif provided.\n+\t(uninit_analysis::init_from_phi_def): Pre-mark the dominating\n+\tregion to improve compute_control_dep_chain walking.\n+\t* vec.h (vec<T, va_heap, vl_ptr>::allocated): Add forwarder.\n+\n+2022-08-26  Richard Biener  <rguenther@suse.de>\n+\n+\t* gimple-predicate-analysis.cc\n+\t(uninit_analysis::collect_phi_def_edges): Only expand a\n+\tPHI def edge when it is possibly undefined.\n+\n+2022-08-26  Martin Liska  <mliska@suse.cz>\n+\n+\t* doc/extend.texi: Remove cr16 related stuff.\n+\t* doc/install.texi: Likewise.\n+\t* doc/invoke.texi: Likewise.\n+\t* doc/md.texi: Likewise.\n+\t* function-tests.cc (test_expansion_to_rtl): Likewise.\n+\t* common/config/cr16/cr16-common.cc: Removed.\n+\t* config/cr16/constraints.md: Removed.\n+\t* config/cr16/cr16-protos.h: Removed.\n+\t* config/cr16/cr16.cc: Removed.\n+\t* config/cr16/cr16.h: Removed.\n+\t* config/cr16/cr16.md: Removed.\n+\t* config/cr16/cr16.opt: Removed.\n+\t* config/cr16/predicates.md: Removed.\n+\t* config/cr16/t-cr16: Removed.\n+\n+2022-08-26  liuhongt  <hongtao.liu@intel.com>\n+\n+\tPR target/106704\n+\t* config/i386/i386-builtin.def (BDESC): Add\n+\tCODE_FOR_avx_blendvpd256/CODE_FOR_avx_blendvps256 to\n+\tcorresponding builtins.\n+\t* config/i386/i386.cc (ix86_gimple_fold_builtin):\n+\tDon't fold IX86_BUILTIN_PBLENDVB256, IX86_BUILTIN_BLENDVPS256,\n+\tIX86_BUILTIN_BLENDVPD256 w/o TARGET_AVX2.\n+\n 2022-08-25  Marek Polacek  <polacek@redhat.com>\n \n \t* ginclude/stddef.h: Define nullptr_t."}, {"sha": "bdd286f5e87f7a8fc9da7456ce534d566b1e6b84", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16f542d6b866828e23e699e294e617ca428b04ee/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16f542d6b866828e23e699e294e617ca428b04ee/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=16f542d6b866828e23e699e294e617ca428b04ee", "patch": "@@ -1 +1 @@\n-20220826\n+20220827"}, {"sha": "f76581e82cfdc5a9bc993d47dfd6f949233c975c", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16f542d6b866828e23e699e294e617ca428b04ee/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16f542d6b866828e23e699e294e617ca428b04ee/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=16f542d6b866828e23e699e294e617ca428b04ee", "patch": "@@ -1,3 +1,19 @@\n+2022-08-26  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/81159\n+\t* c.opt (Wself-move): New option.\n+\n+2022-08-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* c-common.cc (check_builtin_function_arguments): Handle\n+\tBUILT_IN_ISSIGNALING.\n+\n+2022-08-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/106648\n+\t* c-cppbuiltin.cc (c_cpp_builtins): Predefine\n+\t__cpp_named_character_escapes to 202207L.\n+\n 2022-08-25  Marek Polacek  <polacek@redhat.com>\n \n \t* c-common.cc (c_common_reswords): Enable nullptr in C2X."}, {"sha": "7095ebbc47c2a67d16b8e05fc69b79e4dc13d0a4", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16f542d6b866828e23e699e294e617ca428b04ee/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16f542d6b866828e23e699e294e617ca428b04ee/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=16f542d6b866828e23e699e294e617ca428b04ee", "patch": "@@ -1,3 +1,7 @@\n+2022-08-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* c-typeck.cc (convert_arguments): Handle BUILT_IN_ISSIGNALING.\n+\n 2022-08-25  Marek Polacek  <polacek@redhat.com>\n \n \t* c-convert.cc (c_convert) <case POINTER_TYPE>: Handle NULLPTR_TYPE."}, {"sha": "71fb7dbb18a11b10cb8ed5536592541a358e97f6", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16f542d6b866828e23e699e294e617ca428b04ee/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16f542d6b866828e23e699e294e617ca428b04ee/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=16f542d6b866828e23e699e294e617ca428b04ee", "patch": "@@ -1,3 +1,9 @@\n+2022-08-26  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/81159\n+\t* typeck.cc (maybe_warn_self_move): New.\n+\t(cp_build_modify_expr): Call maybe_warn_self_move.\n+\n 2022-08-25  Marek Polacek  <polacek@redhat.com>\n \n \t* cp-tree.h (enum cp_tree_index): Remove CTI_NULLPTR, CTI_NULLPTR_TYPE."}, {"sha": "8216d3b577c3018383bc27622eed9403b1b589b4", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16f542d6b866828e23e699e294e617ca428b04ee/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16f542d6b866828e23e699e294e617ca428b04ee/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=16f542d6b866828e23e699e294e617ca428b04ee", "patch": "@@ -1,3 +1,29 @@\n+2022-08-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR fortran/106579\n+\t* trans-intrinsic.cc: Include realmpfr.h.\n+\t(conv_intrinsic_ieee_value): New function.\n+\t(gfc_conv_ieee_arithmetic_function): Handle ieee_value.\n+\n+2022-08-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR fortran/106579\n+\t* f95-lang.cc (gfc_init_builtin_functions): Initialize\n+\tBUILT_IN_FPCLASSIFY.\n+\t* libgfortran.h (IEEE_OTHER_VALUE, IEEE_SIGNALING_NAN,\n+\tIEEE_QUIET_NAN, IEEE_NEGATIVE_INF, IEEE_NEGATIVE_NORMAL,\n+\tIEEE_NEGATIVE_DENORMAL, IEEE_NEGATIVE_SUBNORMAL,\n+\tIEEE_NEGATIVE_ZERO, IEEE_POSITIVE_ZERO, IEEE_POSITIVE_DENORMAL,\n+\tIEEE_POSITIVE_SUBNORMAL, IEEE_POSITIVE_NORMAL, IEEE_POSITIVE_INF):\n+\tNew enum.\n+\t* trans-intrinsic.cc (conv_intrinsic_ieee_class): New function.\n+\t(gfc_conv_ieee_arithmetic_function): Handle ieee_class.\n+\n+2022-08-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* f95-lang.cc (gfc_init_builtin_functions): Initialize\n+\tBUILT_IN_ISSIGNALING.\n+\n 2022-08-25  Tobias Burnus  <tobias@codesourcery.com>\n \n \t* parse.cc (parse_omp_structured_block): When parsing strictly"}, {"sha": "0f77e5c3903fcb1d234aa1c76c9e1daa089a06cf", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 101, "deletions": 0, "changes": 101, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16f542d6b866828e23e699e294e617ca428b04ee/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16f542d6b866828e23e699e294e617ca428b04ee/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=16f542d6b866828e23e699e294e617ca428b04ee", "patch": "@@ -1,3 +1,104 @@\n+2022-08-26  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/81159\n+\t* g++.dg/warn/Wself-move1.C: New test.\n+\n+2022-08-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/106647\n+\t* g++.dg/cpp23/wchar-multi1.C: New test.\n+\t* g++.dg/cpp23/wchar-multi2.C: New test.\n+\n+2022-08-26  Richard Biener  <rguenther@suse.de>\n+\n+\t* gcc.dg/uninit-pred-11.c: New testcase.\n+\n+2022-08-26  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* c-c++-common/gomp/reverse-offload-1.c: Remove dg-sorry.\n+\t* c-c++-common/gomp/target-device-ancestor-4.c: Likewise.\n+\t* gfortran.dg/gomp/target-device-ancestor-4.f90: Likewise.\n+\t* gfortran.dg/gomp/target-device-ancestor-5.f90: Likewise.\n+\t* c-c++-common/goacc/classify-kernels-parloops.c: Add 'noclone' to\n+\tscan-tree-dump-times.\n+\t* c-c++-common/goacc/classify-kernels-unparallelized-parloops.c:\n+\tLikewise.\n+\t* c-c++-common/goacc/classify-kernels-unparallelized.c: Likewise.\n+\t* c-c++-common/goacc/classify-kernels.c: Likewise.\n+\t* c-c++-common/goacc/classify-parallel.c: Likewise.\n+\t* c-c++-common/goacc/classify-serial.c: Likewise.\n+\t* c-c++-common/goacc/kernels-counter-vars-function-scope.c: Likewise.\n+\t* c-c++-common/goacc/kernels-loop-2.c: Likewise.\n+\t* c-c++-common/goacc/kernels-loop-3.c: Likewise.\n+\t* c-c++-common/goacc/kernels-loop-data-2.c: Likewise.\n+\t* c-c++-common/goacc/kernels-loop-data-enter-exit-2.c: Likewise.\n+\t* c-c++-common/goacc/kernels-loop-data-enter-exit.c: Likewise.\n+\t* c-c++-common/goacc/kernels-loop-data-update.c: Likewise.\n+\t* c-c++-common/goacc/kernels-loop-data.c: Likewise.\n+\t* c-c++-common/goacc/kernels-loop-g.c: Likewise.\n+\t* c-c++-common/goacc/kernels-loop-mod-not-zero.c: Likewise.\n+\t* c-c++-common/goacc/kernels-loop-n.c: Likewise.\n+\t* c-c++-common/goacc/kernels-loop-nest.c: Likewise.\n+\t* c-c++-common/goacc/kernels-loop.c: Likewise.\n+\t* c-c++-common/goacc/kernels-one-counter-var.c: Likewise.\n+\t* c-c++-common/goacc/kernels-parallel-loop-data-enter-exit.c: Likewise.\n+\t* gfortran.dg/goacc/classify-kernels-parloops.f95: Likewise.\n+\t* gfortran.dg/goacc/classify-kernels-unparallelized-parloops.f95:\n+\tLikewise.\n+\t* gfortran.dg/goacc/classify-kernels-unparallelized.f95: Likewise.\n+\t* gfortran.dg/goacc/classify-kernels.f95: Likewise.\n+\t* gfortran.dg/goacc/classify-parallel.f95: Likewise.\n+\t* gfortran.dg/goacc/classify-serial.f95: Likewise.\n+\t* gfortran.dg/goacc/kernels-loop-2.f95: Likewise.\n+\t* gfortran.dg/goacc/kernels-loop-data-2.f95: Likewise.\n+\t* gfortran.dg/goacc/kernels-loop-data-enter-exit-2.f95: Likewise.\n+\t* gfortran.dg/goacc/kernels-loop-data-enter-exit.f95: Likewise.\n+\t* gfortran.dg/goacc/kernels-loop-data-update.f95: Likewise.\n+\t* gfortran.dg/goacc/kernels-loop-data.f95: Likewise.\n+\t* gfortran.dg/goacc/kernels-loop-n.f95: Likewise.\n+\t* gfortran.dg/goacc/kernels-loop.f95: Likewise.\n+\t* gfortran.dg/goacc/kernels-parallel-loop-data-enter-exit.f95: Likewise.\n+\n+2022-08-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* gcc.dg/torture/builtin-issignaling-1.c: New test.\n+\t* gcc.dg/torture/builtin-issignaling-2.c: New test.\n+\t* gcc.dg/torture/float16-builtin-issignaling-1.c: New test.\n+\t* gcc.dg/torture/float32-builtin-issignaling-1.c: New test.\n+\t* gcc.dg/torture/float32x-builtin-issignaling-1.c: New test.\n+\t* gcc.dg/torture/float64-builtin-issignaling-1.c: New test.\n+\t* gcc.dg/torture/float64x-builtin-issignaling-1.c: New test.\n+\t* gcc.dg/torture/float128-builtin-issignaling-1.c: New test.\n+\t* gcc.dg/torture/float128x-builtin-issignaling-1.c: New test.\n+\t* gcc.target/i386/builtin-issignaling-1.c: New test.\n+\n+2022-08-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/106099\n+\t* gcc.dg/pr106099.c: New test.\n+\n+2022-08-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/106648\n+\t* c-c++-common/cpp/named-universal-char-escape-1.c: New test.\n+\t* c-c++-common/cpp/named-universal-char-escape-2.c: New test.\n+\t* c-c++-common/cpp/named-universal-char-escape-3.c: New test.\n+\t* c-c++-common/cpp/named-universal-char-escape-4.c: New test.\n+\t* c-c++-common/Wbidi-chars-25.c: New test.\n+\t* gcc.dg/cpp/named-universal-char-escape-1.c: New test.\n+\t* gcc.dg/cpp/named-universal-char-escape-2.c: New test.\n+\t* g++.dg/cpp/named-universal-char-escape-1.C: New test.\n+\t* g++.dg/cpp/named-universal-char-escape-2.C: New test.\n+\t* g++.dg/cpp23/feat-cxx2b.C: Test __cpp_named_character_escapes.\n+\n+2022-08-26  Martin Liska  <mliska@suse.cz>\n+\n+\t* lib/target-supports.exp: Remove cr16 related stuff.\n+\n+2022-08-26  liuhongt  <hongtao.liu@intel.com>\n+\n+\t* gcc.target/i386/pr106704.c: New test.\n+\n 2022-08-25  Marek Polacek  <polacek@redhat.com>\n \n \t* gcc.dg/c11-nullptr-1.c: New test."}, {"sha": "d5e0a1c7f693cea9af95ea069b6117dd6876145a", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16f542d6b866828e23e699e294e617ca428b04ee/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16f542d6b866828e23e699e294e617ca428b04ee/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=16f542d6b866828e23e699e294e617ca428b04ee", "patch": "@@ -1,3 +1,31 @@\n+2022-08-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/106647\n+\t* charset.cc (wide_str_to_charconst): Implement P2362R3 - Remove\n+\tnon-encodable wide character literals and multicharacter.  For\n+\tC++23 use CPP_DL_ERROR instead of CPP_DL_WARNING for\n+\t\"character constant too long for its type\" diagnostics on CPP_WCHAR\n+\tliterals.\n+\n+2022-08-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/106648\n+\t* charset.cc: Implement C++23 P2071R2 - Named universal character\n+\tescapes.  Include uname2c.h.\n+\t(hangul_syllables, hangul_count): New variables.\n+\t(struct uname2c_data): New type.\n+\t(_cpp_uname2c, _cpp_uname2c_uax44_lm2): New functions.\n+\t(_cpp_valid_ucn): Use them.  Handle named universal character escapes.\n+\t(convert_ucn): Adjust comment.\n+\t(convert_escape): Call convert_ucn even for \\N.\n+\t(_cpp_interpret_identifier): Handle named universal character escapes.\n+\t* lex.cc (get_bidi_ucn): Fix up function comment formatting.\n+\t(get_bidi_named): New function.\n+\t(forms_identifier_p, lex_string): Handle named universal character\n+\tescapes.\n+\t* makeuname2c.cc: New file.  Small parts copied from makeucnid.cc.\n+\t* uname2c.h: New generated file.\n+\n 2022-08-24  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/106646"}, {"sha": "ac76f7dc365755da5a290b15bba613b830e58eb7", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16f542d6b866828e23e699e294e617ca428b04ee/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16f542d6b866828e23e699e294e617ca428b04ee/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=16f542d6b866828e23e699e294e617ca428b04ee", "patch": "@@ -1,3 +1,16 @@\n+2022-08-26  Martin Liska  <mliska@suse.cz>\n+\n+\t* config.host: Remove cr16 related stuff.\n+\t* config/cr16/crti.S: Removed.\n+\t* config/cr16/crtlibid.S: Removed.\n+\t* config/cr16/crtn.S: Removed.\n+\t* config/cr16/divmodhi3.c: Removed.\n+\t* config/cr16/lib1funcs.S: Removed.\n+\t* config/cr16/t-cr16: Removed.\n+\t* config/cr16/t-crtlibid: Removed.\n+\t* config/cr16/unwind-cr16.c: Removed.\n+\t* config/cr16/unwind-dw2.h: Removed.\n+\n 2022-08-16  Kito Cheng  <kito.cheng@sifive.com>\n \n \t* config/riscv/sfp-machine.h (_FP_NANFRAC_H): New."}, {"sha": "ad1e03cbfd3ce3abb96be5dd11168b3393649076", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16f542d6b866828e23e699e294e617ca428b04ee/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16f542d6b866828e23e699e294e617ca428b04ee/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=16f542d6b866828e23e699e294e617ca428b04ee", "patch": "@@ -1,3 +1,20 @@\n+2022-08-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR fortran/106579\n+\t* ieee/ieee_helper.c (IEEE_OTHER_VALUE, IEEE_SIGNALING_NAN,\n+\tIEEE_QUIET_NAN, IEEE_NEGATIVE_INF, IEEE_NEGATIVE_NORMAL,\n+\tIEEE_NEGATIVE_DENORMAL, IEEE_NEGATIVE_SUBNORMAL,\n+\tIEEE_NEGATIVE_ZERO, IEEE_POSITIVE_ZERO, IEEE_POSITIVE_DENORMAL,\n+\tIEEE_POSITIVE_SUBNORMAL, IEEE_POSITIVE_NORMAL, IEEE_POSITIVE_INF):\n+\tMove to gcc/fortran/libgfortran.h.\n+\n+2022-08-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR fortran/105105\n+\t* ieee/ieee_helper.c: Don't include issignaling_fallback.h.\n+\t(CLASSMACRO): Use __builtin_issignaling instead of issignaling.\n+\t* ieee/issignaling_fallback.h: Removed.\n+\n 2022-08-17  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n \t    Jakub Jelinek  <jakub@redhat.com>\n "}, {"sha": "47b541c3b56ad0b336f44bacc2b2b4d98daf8ed7", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16f542d6b866828e23e699e294e617ca428b04ee/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16f542d6b866828e23e699e294e617ca428b04ee/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=16f542d6b866828e23e699e294e617ca428b04ee", "patch": "@@ -1,3 +1,12 @@\n+2022-08-26  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* libgomp.texi (OpenMP 5.0): Mark 'ancestor' as implemented but\n+\trefer to 'requires'.\n+\t* testsuite/libgomp.c-c++-common/reverse-offload-1-aux.c: New test.\n+\t* testsuite/libgomp.c-c++-common/reverse-offload-1.c: New test.\n+\t* testsuite/libgomp.fortran/reverse-offload-1-aux.f90: New test.\n+\t* testsuite/libgomp.fortran/reverse-offload-1.f90: New test.\n+\n 2022-08-17  Tobias Burnus  <tobias@codesourcery.com>\n \n \tPR middle-end/106548"}, {"sha": "4ef6242092600bace33a2b02f86d600d0a9c437e", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 66, "deletions": 0, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16f542d6b866828e23e699e294e617ca428b04ee/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16f542d6b866828e23e699e294e617ca428b04ee/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=16f542d6b866828e23e699e294e617ca428b04ee", "patch": "@@ -1,3 +1,69 @@\n+2022-08-26  Patrick Palka  <ppalka@redhat.com>\n+\n+\t* include/std/ranges (zip_view::_Iterator::operator<): Remove\n+\tas per LWG 3692.\n+\t(zip_view::_Iterator::operator>): Likewise.\n+\t(zip_view::_Iterator::operator<=): Likewise.\n+\t(zip_view::_Iterator::operator>=): Likewise.\n+\t(zip_view::_Iterator::operator<=>): Remove three_way_comparable\n+\tconstraint as per LWG 3692.\n+\t(zip_transform_view::_Iterator): Ditto as per LWG 3702.\n+\n+2022-08-26  Patrick Palka  <ppalka@redhat.com>\n+\n+\t* include/std/ranges (zip_view::_Iterator): Befriend\n+\tzip_transform_view.\n+\t(__detail::__range_iter_cat): Define.\n+\t(zip_transform_view): Define.\n+\t(zip_transform_view::_Iterator): Define.\n+\t(zip_transform_view::_Sentinel): Define.\n+\t(views::__detail::__can_zip_transform_view): Define.\n+\t(views::_ZipTransform): Define.\n+\t(views::zip_transform): Define.\n+\t* testsuite/std/ranges/zip_transform/1.cc: New test.\n+\n+2022-08-26  Patrick Palka  <ppalka@redhat.com>\n+\n+\t* include/std/type_traits (enable_if, __enable_if_t): Define them\n+\tearlier.\n+\t(__detail::__first_t): Define.\n+\t(__detail::__or_fn, __detail::__and_fn): Declare.\n+\t(__or_, __and_): Redefine as alias templates in terms of __or_fn\n+\tand __and_fn.\n+\t(__not_): Redefine as an alias template.\n+\t(__detail::__disjunction_impl, __detail::__conjunction_impl):\n+\tDefine.\n+\t(conjuction, disjunction): Redefine in terms of __disjunction_impl\n+\tand __conjunction_impl.\n+\n+2022-08-26  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/std/system_error (error_code::_Check): New alias\n+\ttemplate for constructor SFINAE constraint.\n+\t(error_code::error_code(ErrorCodeEnum)): Use it.\n+\t(error_code::operator=(ErrorCodeEnum)): Remove.\n+\t(error_condition::_Check): New alias template for constraint.\n+\t(error_condition::error_condition(ErrorConditionEnum)): Use it.\n+\t(error_condition::operator=(ErrorConditionEnum)): Remove.\n+\t* testsuite/19_diagnostics/error_code/cons/1.cc: Check\n+\tconstructor taking user-defined error enum.\n+\t* testsuite/19_diagnostics/error_condition/cons/1.cc: Likewise.\n+\n+2022-08-26  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/bits/basic_string.h (starts_with, ends_with, contains):\n+\tAdd nonnull attribute.\n+\t* include/bits/cow_string.h (starts_with, ends_with, contains):\n+\tLikewise.\n+\t* include/std/string_view (starts_with, ends_with, contains):\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string/operations/contains/nonnull.cc\n+\t* testsuite/21_strings/basic_string/operations/ends_with/nonnull.cc\n+\t* testsuite/21_strings/basic_string/operations/starts_with/nonnull.cc\n+\t* testsuite/21_strings/basic_string_view/operations/contains/nonnull.cc\n+\t* testsuite/21_strings/basic_string_view/operations/ends_with/nonnull.cc\n+\t* testsuite/21_strings/basic_string_view/operations/starts_with/nonnull.cc\n+\n 2022-08-25  Patrick Palka  <ppalka@redhat.com>\n \n \t* include/std/ranges (lazy_split_view::_OuterIter::_M_current):"}]}