{"sha": "a65dcb0d6ebb2f0d5c7570f6477baedeb81464c1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTY1ZGNiMGQ2ZWJiMmYwZDVjNzU3MGY2NDc3YmFlZGViODE0NjRjMQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2016-04-18T12:48:42Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2016-04-18T12:48:42Z"}, "message": "[multiple changes]\n\n2016-04-18  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_prag.adb (Analyze_Pragma, case Test_Case): Improve error\n\tmessage for wrong placement of aspect Test_Case.\n\n2016-04-18  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* einfo.ads: Update the documentation of attribute Renamed_Object.\n\t* exp_spark.adb (Expand_Potential_Renaming): Reimplemented.\n\n2016-04-18  Gary Dismukes  <dismukes@adacore.com>\n\n\t* exp_ch4.adb (Optimize_Length_Comparison): Return immediately\n\tin the case of AAMP (same as for use of the -gnatd.P switch) to\n\tsuppress this optimization, which avoids creating a dependence\n\ton the 64-bit arithmetic package.\n\nFrom-SVN: r235144", "tree": {"sha": "01bc4b041a83ae527795ebd6050f3e69044be10d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/01bc4b041a83ae527795ebd6050f3e69044be10d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a65dcb0d6ebb2f0d5c7570f6477baedeb81464c1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a65dcb0d6ebb2f0d5c7570f6477baedeb81464c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a65dcb0d6ebb2f0d5c7570f6477baedeb81464c1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a65dcb0d6ebb2f0d5c7570f6477baedeb81464c1/comments", "author": null, "committer": null, "parents": [{"sha": "7b3ccbbf0e4f9cde4fdb5ed9cfb6aebd93554240", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b3ccbbf0e4f9cde4fdb5ed9cfb6aebd93554240", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b3ccbbf0e4f9cde4fdb5ed9cfb6aebd93554240"}], "stats": {"total": 83, "additions": 62, "deletions": 21}, "files": [{"sha": "b72d52477fc1f35f3559cb1abe4712e0b2b91b3e", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a65dcb0d6ebb2f0d5c7570f6477baedeb81464c1/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a65dcb0d6ebb2f0d5c7570f6477baedeb81464c1/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=a65dcb0d6ebb2f0d5c7570f6477baedeb81464c1", "patch": "@@ -1,3 +1,20 @@\n+2016-04-18  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_prag.adb (Analyze_Pragma, case Test_Case): Improve error\n+\tmessage for wrong placement of aspect Test_Case.\n+\n+2016-04-18  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* einfo.ads: Update the documentation of attribute Renamed_Object.\n+\t* exp_spark.adb (Expand_Potential_Renaming): Reimplemented.\n+\n+2016-04-18  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* exp_ch4.adb (Optimize_Length_Comparison): Return immediately\n+\tin the case of AAMP (same as for use of the -gnatd.P switch) to\n+\tsuppress this optimization, which avoids creating a dependence\n+\ton the 64-bit arithmetic package.\n+\n 2016-04-18  Arnaud Charlet  <charlet@adacore.com>\n \n \t* exp_ch4.adb: Update comment."}, {"sha": "76520c8d1899e9021c94d8df24b820cbe644dcb5", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 10, "deletions": 11, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a65dcb0d6ebb2f0d5c7570f6477baedeb81464c1/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a65dcb0d6ebb2f0d5c7570f6477baedeb81464c1/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=a65dcb0d6ebb2f0d5c7570f6477baedeb81464c1", "patch": "@@ -3886,17 +3886,16 @@ package Einfo is\n --       package can see the entities in the package via the renaming.\n \n --    Renamed_Object (Node18)\n---       Defined in all objects (constants, variables, components, formal\n---       parameters, generic formal parameters, and loop parameters).\n---       ??? Defined in discriminants?\n---       Set non-Empty if the object was declared by a renaming declaration,\n---       in which case it references the tree node for the name of the renamed\n---       object. This is only possible for the variable and constant cases.\n---       For formal parameters, this field is used in the course of inline\n---       expansion, to map the formals of a subprogram into the corresponding\n---       actuals. For formals of a task entry, it denotes the local renaming\n---       that replaces the actual within the accept statement. The field is\n---       Empty otherwise (it is always empty for loop parameters).\n+--       Defined in components, constants, discriminants, formal parameters,\n+--       generic formals, loop parameters, and variables. Set to non-Empty if\n+--       the object was declared by a renaming declaration. For constants and\n+--       variables, the attribute references the tree node for the name of the\n+--       renamed object. For formal parameters, the field is used in inlining\n+--       and maps the entities of all formal parameters of a subprogram to the\n+--       entities of the corresponding actuals. For formals of a task entry,\n+--       the attribute denotes the local renaming that replaces the actual\n+--       within an accept statement. For all remaining cases (discriminants,\n+--       loop parameters) the field is Empty.\n \n --    Renaming_Map (Uint9)\n --       Defined in generic subprograms, generic packages, and their"}, {"sha": "2e7b36b54e8c0c2be09044d8b2a56df0c545dcd0", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a65dcb0d6ebb2f0d5c7570f6477baedeb81464c1/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a65dcb0d6ebb2f0d5c7570f6477baedeb81464c1/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=a65dcb0d6ebb2f0d5c7570f6477baedeb81464c1", "patch": "@@ -12806,9 +12806,11 @@ package body Exp_Ch4 is\n          return;\n       end if;\n \n-      --  Nothing to do if special -gnatd.P debug flag set\n+      --  Nothing to do if special -gnatd.P debug flag set or target is AAMP.\n+      --  For AAMP the 64-bit arithmetic package would get dragged in, which\n+      --  we want to avoid, plus this optimization has limited benefit on AAMP.\n \n-      if Debug_Flag_Dot_PP then\n+      if Debug_Flag_Dot_PP or else AAMP_On_Target then\n          return;\n       end if;\n "}, {"sha": "d1e97fc13bc4636c22fe6f6e103344381b1c7461", "filename": "gcc/ada/exp_spark.adb", "status": "modified", "additions": 26, "deletions": 6, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a65dcb0d6ebb2f0d5c7570f6477baedeb81464c1/gcc%2Fada%2Fexp_spark.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a65dcb0d6ebb2f0d5c7570f6477baedeb81464c1/gcc%2Fada%2Fexp_spark.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_spark.adb?ref=a65dcb0d6ebb2f0d5c7570f6477baedeb81464c1", "patch": "@@ -31,6 +31,7 @@ with Exp_Util; use Exp_Util;\n with Sem_Res;  use Sem_Res;\n with Sem_Util; use Sem_Util;\n with Sinfo;    use Sinfo;\n+with Tbuild;   use Tbuild;\n \n package body Exp_SPARK is\n \n@@ -117,16 +118,35 @@ package body Exp_SPARK is\n    -------------------------------\n \n    procedure Expand_Potential_Renaming (N : Node_Id) is\n-      E : constant Entity_Id := Entity (N);\n-      T : constant Entity_Id := Etype (N);\n+      Id     : constant Entity_Id  := Entity (N);\n+      Loc    : constant Source_Ptr := Sloc (N);\n+      Typ    : constant Entity_Id  := Etype (N);\n+      Ren_Id : Node_Id;\n \n    begin\n       --  Replace a reference to a renaming with the actual renamed object\n \n-      if Ekind (E) in Object_Kind and then Present (Renamed_Object (E)) then\n-         Rewrite (N, New_Copy_Tree (Renamed_Object (E)));\n-         Reset_Analyzed_Flags (N);\n-         Analyze_And_Resolve (N, T);\n+      if Ekind (Id) in Object_Kind then\n+         Ren_Id := Renamed_Object (Id);\n+\n+         if Present (Ren_Id) then\n+\n+            --  The renamed object is an entity when instantiating generics\n+            --  or inlining bodies. In this case the renaming is part of the\n+            --  mapping \"prologue\" which links actuals to formals.\n+\n+            if Nkind (Ren_Id) in N_Entity then\n+               Rewrite (N, New_Occurrence_Of (Ren_Id, Loc));\n+\n+            --  Otherwise the renamed object denotes a name\n+\n+            else\n+               Rewrite (N, New_Copy_Tree (Ren_Id));\n+               Reset_Analyzed_Flags (N);\n+            end if;\n+\n+            Analyze_And_Resolve (N, Typ);\n+         end if;\n       end if;\n    end Expand_Potential_Renaming;\n "}, {"sha": "27a44d8cc5b5fbc8cff310f4d447ff7d27390558", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a65dcb0d6ebb2f0d5c7570f6477baedeb81464c1/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a65dcb0d6ebb2f0d5c7570f6477baedeb81464c1/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=a65dcb0d6ebb2f0d5c7570f6477baedeb81464c1", "patch": "@@ -21739,7 +21739,8 @@ package body Sem_Prag is\n             --  Otherwise the placement is illegal\n \n             else\n-               Pragma_Misplaced;\n+               Error_Pragma\n+                 (\"pragma % must be specified within a package declaration\");\n                return;\n             end if;\n \n@@ -21778,7 +21779,9 @@ package body Sem_Prag is\n             --  Otherwise the placement is illegal\n \n             else\n-               Pragma_Misplaced;\n+               Error_Pragma\n+                 (\"pragma % must be applied to a library-level subprogram \"\n+                  & \"declaration\");\n                return;\n             end if;\n "}]}