{"sha": "2cb01a397200b182e28f9d91dfde104e3a3895d1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmNiMDFhMzk3MjAwYjE4MmUyOGY5ZDkxZGZkZTEwNGUzYTM4OTVkMQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2013-10-01T03:12:15Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2013-10-01T03:12:15Z"}, "message": "reflect: Fix reflect.Call with function following non-pointer.\n\nFrom-SVN: r203052", "tree": {"sha": "4447732d9d4c8bb77dbef74ce06fa4020dfe93e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4447732d9d4c8bb77dbef74ce06fa4020dfe93e8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2cb01a397200b182e28f9d91dfde104e3a3895d1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2cb01a397200b182e28f9d91dfde104e3a3895d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2cb01a397200b182e28f9d91dfde104e3a3895d1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2cb01a397200b182e28f9d91dfde104e3a3895d1/comments", "author": null, "committer": null, "parents": [{"sha": "62fecdd3409a01f0c776bb72d98fd5ef1385d27c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62fecdd3409a01f0c776bb72d98fd5ef1385d27c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62fecdd3409a01f0c776bb72d98fd5ef1385d27c"}], "stats": {"total": 15, "additions": 13, "deletions": 2}, "files": [{"sha": "140a068b9cae32640d8290c043d415234da04fd3", "filename": "libgo/go/reflect/all_test.go", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2cb01a397200b182e28f9d91dfde104e3a3895d1/libgo%2Fgo%2Freflect%2Fall_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2cb01a397200b182e28f9d91dfde104e3a3895d1/libgo%2Fgo%2Freflect%2Fall_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Freflect%2Fall_test.go?ref=2cb01a397200b182e28f9d91dfde104e3a3895d1", "patch": "@@ -2406,6 +2406,15 @@ func TestVariadic(t *testing.T) {\n \t}\n }\n \n+func TestFuncArg(t *testing.T) {\n+\tf1 := func(i int, f func(int) int) int { return f(i) }\n+\tf2 := func(i int) int { return i + 1 }\n+\tr := ValueOf(f1).Call([]Value{ValueOf(100), ValueOf(f2)})\n+\tif r[0].Int() != 101 {\n+\t\tt.Errorf(\"function returned %d, want 101\", r[0].Int())\n+\t}\n+}\n+\n var tagGetTests = []struct {\n \tTag   StructTag\n \tKey   string"}, {"sha": "b199f70888c2848a595b34f512b11590109f0172", "filename": "libgo/go/reflect/value.go", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2cb01a397200b182e28f9d91dfde104e3a3895d1/libgo%2Fgo%2Freflect%2Fvalue.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2cb01a397200b182e28f9d91dfde104e3a3895d1/libgo%2Fgo%2Freflect%2Fvalue.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Freflect%2Fvalue.go?ref=2cb01a397200b182e28f9d91dfde104e3a3895d1", "patch": "@@ -433,7 +433,7 @@ func (v Value) call(op string, in []Value) []Value {\n \tif v.flag&flagMethod != 0 {\n \t\tnin++\n \t}\n-\tfirstPointer := len(in) > 0 && Kind(t.In(0).(*rtype).kind) != Ptr && v.flag&flagMethod == 0 && isMethod(v.typ)\n+\tfirstPointer := len(in) > 0 && t.In(0).Kind() != Ptr && v.flag&flagMethod == 0 && isMethod(v.typ)\n \tparams := make([]unsafe.Pointer, nin)\n \toff := 0\n \tif v.flag&flagMethod != 0 {\n@@ -497,8 +497,10 @@ func isMethod(t *rtype) bool {\n \tsawRet := false\n \tfor i, c := range s {\n \t\tif c == '(' {\n+\t\t\tif parens == 0 {\n+\t\t\t\tparams++\n+\t\t\t}\n \t\t\tparens++\n-\t\t\tparams++\n \t\t} else if c == ')' {\n \t\t\tparens--\n \t\t} else if parens == 0 && c == ' ' && s[i+1] != '(' && !sawRet {"}]}