{"sha": "28f52a4d8eb0703eadd9eb19df729c69a6b5cd23", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjhmNTJhNGQ4ZWIwNzAzZWFkZDllYjE5ZGY3MjljNjlhNmI1Y2QyMw==", "commit": {"author": {"name": "J\"orn Rennecke", "email": "joern.rennecke@st.com", "date": "2005-08-16T11:57:07Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2005-08-16T11:57:07Z"}, "message": "re PR middle-end/20396 (TRULY_NOOP_TRUNCATION ignored)\n\n2005-08-16  J\"orn Rennecke <joern.rennecke@st.com>\n            Richard Shann <rshann@superh.com>\n\n\tPR middle-end/20396:\n\t* optabs.c (expand_binop): Take TRULY_NOOP_TRUNCATION into account.\n\nCo-Authored-By: Richard Shann <rshann@superh.com>\n\nFrom-SVN: r103153", "tree": {"sha": "404fca0a018cd944cf88b31b1982060b87e4d818", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/404fca0a018cd944cf88b31b1982060b87e4d818"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/28f52a4d8eb0703eadd9eb19df729c69a6b5cd23", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28f52a4d8eb0703eadd9eb19df729c69a6b5cd23", "html_url": "https://github.com/Rust-GCC/gccrs/commit/28f52a4d8eb0703eadd9eb19df729c69a6b5cd23", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28f52a4d8eb0703eadd9eb19df729c69a6b5cd23/comments", "author": null, "committer": null, "parents": [{"sha": "546ad2d9fce6b9ed05b0634a9731db3609414c9d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/546ad2d9fce6b9ed05b0634a9731db3609414c9d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/546ad2d9fce6b9ed05b0634a9731db3609414c9d"}], "stats": {"total": 18, "additions": 15, "deletions": 3}, "files": [{"sha": "9d613e4c676e9a45bd8b10ec732be5e1b20b3d6b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28f52a4d8eb0703eadd9eb19df729c69a6b5cd23/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28f52a4d8eb0703eadd9eb19df729c69a6b5cd23/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=28f52a4d8eb0703eadd9eb19df729c69a6b5cd23", "patch": "@@ -1,3 +1,9 @@\n+2005-08-16  J\"orn Rennecke <joern.rennecke@st.com>\n+            Richard Shann <rshann@superh.com>\n+\n+\tPR middle-end/20396:\n+\t* optabs.c (expand_binop): Take TRULY_NOOP_TRUNCATION into account.\n+\n 2005-08-16  Sebastian Pop  <pop@cri.ensmp.fr>\n \n \t* tree-ssa-loop-niter.c (scev_probably_wraps_p): Reword a comment."}, {"sha": "9f73ac1eecfafd496f9d98fc91a6c2e2b3dee67a", "filename": "gcc/optabs.c", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28f52a4d8eb0703eadd9eb19df729c69a6b5cd23/gcc%2Foptabs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28f52a4d8eb0703eadd9eb19df729c69a6b5cd23/gcc%2Foptabs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptabs.c?ref=28f52a4d8eb0703eadd9eb19df729c69a6b5cd23", "patch": "@@ -1184,7 +1184,9 @@ expand_binop (enum machine_mode mode, optab binoptab, rtx op0, rtx op1,\n \n       if (temp != 0)\n \t{\n-\t  if (GET_MODE_CLASS (mode) == MODE_INT)\n+\t  if (GET_MODE_CLASS (mode) == MODE_INT\n+\t      && TRULY_NOOP_TRUNCATION (GET_MODE_BITSIZE (mode),\n+                                        GET_MODE_BITSIZE (GET_MODE (temp))))\n \t    return gen_lowpart (mode, temp);\n \t  else\n \t    return convert_to_mode (mode, temp, unsignedp);\n@@ -1231,7 +1233,9 @@ expand_binop (enum machine_mode mode, optab binoptab, rtx op0, rtx op1,\n \t\t\t\t unsignedp, OPTAB_DIRECT);\n \t    if (temp)\n \t      {\n-\t\tif (class != MODE_INT)\n+\t\tif (class != MODE_INT\n+                    || !TRULY_NOOP_TRUNCATION (GET_MODE_BITSIZE (mode),\n+                                               GET_MODE_BITSIZE (wider_mode)))\n \t\t  {\n \t\t    if (target == 0)\n \t\t      target = gen_reg_rtx (mode);\n@@ -1759,7 +1763,9 @@ expand_binop (enum machine_mode mode, optab binoptab, rtx op0, rtx op1,\n \t\t\t\t   unsignedp, methods);\n \t      if (temp)\n \t\t{\n-\t\t  if (class != MODE_INT)\n+\t\t  if (class != MODE_INT\n+\t\t      || !TRULY_NOOP_TRUNCATION (GET_MODE_BITSIZE (mode),\n+\t\t\t\t\t\t GET_MODE_BITSIZE (wider_mode)))\n \t\t    {\n \t\t      if (target == 0)\n \t\t\ttarget = gen_reg_rtx (mode);"}]}