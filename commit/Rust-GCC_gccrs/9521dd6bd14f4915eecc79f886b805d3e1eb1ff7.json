{"sha": "9521dd6bd14f4915eecc79f886b805d3e1eb1ff7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTUyMWRkNmJkMTRmNDkxNWVlY2M3OWY4ODZiODA1ZDNlMWViMWZmNw==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2007-01-18T12:03:35Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2007-01-18T12:03:35Z"}, "message": "basic_string.h (basic_string<>::_S_compare): Add.\n\n2007-01-18  Paolo Carlini  <pcarlini@suse.de>\n\n\t* include/bits/basic_string.h (basic_string<>::_S_compare): Add.\n\t(compare(const basic_string&)): Use it.\n\t* include/bits/basic_string.tcc (compare(size_type, size_type,\n\tconst basic_string&), compare(size_type, size_type,\n\tconst basic_string&, size_type, size_type), compare(const _CharT*),\n\tcompare(size_type, size_type, const _CharT*), compare(size_type,\n\tsize_type, const _CharT*, size_type)): Likewise.\n\t* include/ext/vstring_util.h (__vstring_utility<>::_S_compare): Add.\n\t* include/ext/vstring.h (compare(const __versa_string&)): Use it.\n\t* include/ext/vstring.tcc (compare(size_type, size_type,\n\tconst __versa_string&), compare(size_type, size_type,\n\tconst __versa_string&, size_type, size_type), compare(const _CharT*),\n\tcompare(size_type, size_type, const _CharT*), compare(size_type,\n\tsize_type, const _CharT*, size_type)): Likewise.\n\nFrom-SVN: r120896", "tree": {"sha": "bc73149696da051bfa175aaabfeeb69c2d25b183", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bc73149696da051bfa175aaabfeeb69c2d25b183"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9521dd6bd14f4915eecc79f886b805d3e1eb1ff7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9521dd6bd14f4915eecc79f886b805d3e1eb1ff7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9521dd6bd14f4915eecc79f886b805d3e1eb1ff7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9521dd6bd14f4915eecc79f886b805d3e1eb1ff7/comments", "author": null, "committer": null, "parents": [{"sha": "463c03f1bc2380d46a39e63efd00df157a18fee2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/463c03f1bc2380d46a39e63efd00df157a18fee2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/463c03f1bc2380d46a39e63efd00df157a18fee2"}], "stats": {"total": 80, "additions": 63, "deletions": 17}, "files": [{"sha": "53fc417c2bc63f303ae6cbf70729267b9073410a", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9521dd6bd14f4915eecc79f886b805d3e1eb1ff7/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9521dd6bd14f4915eecc79f886b805d3e1eb1ff7/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=9521dd6bd14f4915eecc79f886b805d3e1eb1ff7", "patch": "@@ -1,3 +1,20 @@\n+2007-01-18  Paolo Carlini  <pcarlini@suse.de>\n+\n+\t* include/bits/basic_string.h (basic_string<>::_S_compare): Add.\n+\t(compare(const basic_string&)): Use it.\n+\t* include/bits/basic_string.tcc (compare(size_type, size_type,\n+\tconst basic_string&), compare(size_type, size_type,\n+\tconst basic_string&, size_type, size_type), compare(const _CharT*),\n+\tcompare(size_type, size_type, const _CharT*), compare(size_type,\n+\tsize_type, const _CharT*, size_type)): Likewise.\n+\t* include/ext/vstring_util.h (__vstring_utility<>::_S_compare): Add.\n+\t* include/ext/vstring.h (compare(const __versa_string&)): Use it.\n+\t* include/ext/vstring.tcc (compare(size_type, size_type,\n+\tconst __versa_string&), compare(size_type, size_type,\n+\tconst __versa_string&, size_type, size_type), compare(const _CharT*),\n+\tcompare(size_type, size_type, const _CharT*), compare(size_type,\n+\tsize_type, const _CharT*, size_type)): Likewise.\n+\n 2007-01-15  Ian Lance Taylor  <iant@google.com>\n \t    Paolo Carlini  <pcarlini@suse.de>\n "}, {"sha": "509306840f25903bed8cff479d653e565ace533d", "filename": "libstdc++-v3/include/bits/basic_string.h", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9521dd6bd14f4915eecc79f886b805d3e1eb1ff7/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9521dd6bd14f4915eecc79f886b805d3e1eb1ff7/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.h?ref=9521dd6bd14f4915eecc79f886b805d3e1eb1ff7", "patch": "@@ -1,6 +1,7 @@\n // Components for manipulating sequences of characters -*- C++ -*-\n \n-// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006\n+// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005,\n+// 2006, 2007\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -389,6 +390,19 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n       _S_copy_chars(_CharT* __p, const _CharT* __k1, const _CharT* __k2)\n       { _M_copy(__p, __k1, __k2 - __k1); }\n \n+      static int\n+      _S_compare(size_type __n1, size_type __n2)\n+      {\n+\tconst difference_type __d = difference_type(__n1 - __n2);\n+\n+\tif (__d > numeric_limits<int>::max())\n+\t  return numeric_limits<int>::max();\n+\telse if (__d < numeric_limits<int>::min())\n+\t  return numeric_limits<int>::min();\n+\telse\n+\t  return int(__d);\t\n+      }\n+\n       void\n       _M_mutate(size_type __pos, size_type __len1, size_type __len2);\n \n@@ -1933,7 +1947,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n \n \tint __r = traits_type::compare(_M_data(), __str.data(), __len);\n \tif (!__r)\n-\t  __r =  __size - __osize;\n+\t  __r = _S_compare(__size, __osize);\n \treturn __r;\n       }\n "}, {"sha": "3437fdaba4a85a4cff832f97899f2696ae937b43", "filename": "libstdc++-v3/include/bits/basic_string.tcc", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9521dd6bd14f4915eecc79f886b805d3e1eb1ff7/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9521dd6bd14f4915eecc79f886b805d3e1eb1ff7/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.tcc?ref=9521dd6bd14f4915eecc79f886b805d3e1eb1ff7", "patch": "@@ -1,6 +1,7 @@\n // Components for manipulating sequences of characters -*- C++ -*-\n \n-// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006\n+// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005,\n+// 2006, 2007\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -902,7 +903,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n       const size_type __len = std::min(__n, __osize);\n       int __r = traits_type::compare(_M_data() + __pos, __str.data(), __len);\n       if (!__r)\n-\t__r = __n - __osize;\n+\t__r = _S_compare(__n, __osize);\n       return __r;\n     }\n \n@@ -920,7 +921,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n       int __r = traits_type::compare(_M_data() + __pos1,\n \t\t\t\t     __str.data() + __pos2, __len);\n       if (!__r)\n-\t__r = __n1 - __n2;\n+\t__r = _S_compare(__n1, __n2);\n       return __r;\n     }\n \n@@ -935,7 +936,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n       const size_type __len = std::min(__size, __osize);\n       int __r = traits_type::compare(_M_data(), __s, __len);\n       if (!__r)\n-\t__r = __size - __osize;\n+\t__r = _S_compare(__size, __osize);\n       return __r;\n     }\n \n@@ -951,7 +952,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n       const size_type __len = std::min(__n1, __osize);\n       int __r = traits_type::compare(_M_data() + __pos, __s, __len);\n       if (!__r)\n-\t__r = __n1 - __osize;\n+\t__r = _S_compare(__n1, __osize);\n       return __r;\n     }\n \n@@ -967,7 +968,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n       const size_type __len = std::min(__n1, __n2);\n       int __r = traits_type::compare(_M_data() + __pos, __s, __len);\n       if (!__r)\n-\t__r = __n1 - __n2;\n+\t__r = _S_compare(__n1, __n2);\n       return __r;\n     }\n "}, {"sha": "32bc94edce0a13db7ebac6f63e67889d7288960f", "filename": "libstdc++-v3/include/ext/vstring.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9521dd6bd14f4915eecc79f886b805d3e1eb1ff7/libstdc%2B%2B-v3%2Finclude%2Fext%2Fvstring.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9521dd6bd14f4915eecc79f886b805d3e1eb1ff7/libstdc%2B%2B-v3%2Finclude%2Fext%2Fvstring.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fvstring.h?ref=9521dd6bd14f4915eecc79f886b805d3e1eb1ff7", "patch": "@@ -1,6 +1,6 @@\n // Versatile string -*- C++ -*-\n \n-// Copyright (C) 2005, 2006 Free Software Foundation, Inc.\n+// Copyright (C) 2005, 2006, 2007 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -1675,7 +1675,7 @@ _GLIBCXX_BEGIN_NAMESPACE(__gnu_cxx)\n \n \tint __r = traits_type::compare(this->_M_data(), __str.data(), __len);\n \tif (!__r)\n-\t  __r =  __size - __osize;\n+\t  __r = _S_compare(__size, __osize);\n \treturn __r;\n       }\n "}, {"sha": "69dd5f04faa2c76f3f1136ec72f5b2e9e48db993", "filename": "libstdc++-v3/include/ext/vstring.tcc", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9521dd6bd14f4915eecc79f886b805d3e1eb1ff7/libstdc%2B%2B-v3%2Finclude%2Fext%2Fvstring.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9521dd6bd14f4915eecc79f886b805d3e1eb1ff7/libstdc%2B%2B-v3%2Finclude%2Fext%2Fvstring.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fvstring.tcc?ref=9521dd6bd14f4915eecc79f886b805d3e1eb1ff7", "patch": "@@ -1,6 +1,6 @@\n // Versatile string -*- C++ -*-\n \n-// Copyright (C) 2005, 2006 Free Software Foundation, Inc.\n+// Copyright (C) 2005, 2006, 2007 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -467,7 +467,7 @@ _GLIBCXX_BEGIN_NAMESPACE(__gnu_cxx)\n       int __r = traits_type::compare(this->_M_data() + __pos,\n \t\t\t\t     __str.data(), __len);\n       if (!__r)\n-\t__r = __n - __osize;\n+\t__r = _S_compare(__n, __osize);\n       return __r;\n     }\n \n@@ -486,7 +486,7 @@ _GLIBCXX_BEGIN_NAMESPACE(__gnu_cxx)\n       int __r = traits_type::compare(this->_M_data() + __pos1,\n \t\t\t\t     __str.data() + __pos2, __len);\n       if (!__r)\n-\t__r = __n1 - __n2;\n+\t__r = _S_compare(__n1, __n2);\n       return __r;\n     }\n \n@@ -502,7 +502,7 @@ _GLIBCXX_BEGIN_NAMESPACE(__gnu_cxx)\n       const size_type __len = std::min(__size, __osize);\n       int __r = traits_type::compare(this->_M_data(), __s, __len);\n       if (!__r)\n-\t__r = __size - __osize;\n+\t__r = _S_compare(__size, __osize);\n       return __r;\n     }\n \n@@ -519,7 +519,7 @@ _GLIBCXX_BEGIN_NAMESPACE(__gnu_cxx)\n       const size_type __len = std::min(__n1, __osize);\n       int __r = traits_type::compare(this->_M_data() + __pos, __s, __len);\n       if (!__r)\n-\t__r = __n1 - __osize;\n+\t__r = _S_compare(__n1, __osize);\n       return __r;\n     }\n \n@@ -536,7 +536,7 @@ _GLIBCXX_BEGIN_NAMESPACE(__gnu_cxx)\n       const size_type __len = std::min(__n1, __n2);\n       int __r = traits_type::compare(this->_M_data() + __pos, __s, __len);\n       if (!__r)\n-\t__r = __n1 - __n2;\n+\t__r = _S_compare(__n1, __n2);\n       return __r;\n     }\n "}, {"sha": "e29d8bfbe7a62bba005a548899c4244d539847b0", "filename": "libstdc++-v3/include/ext/vstring_util.h", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9521dd6bd14f4915eecc79f886b805d3e1eb1ff7/libstdc%2B%2B-v3%2Finclude%2Fext%2Fvstring_util.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9521dd6bd14f4915eecc79f886b805d3e1eb1ff7/libstdc%2B%2B-v3%2Finclude%2Fext%2Fvstring_util.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fvstring_util.h?ref=9521dd6bd14f4915eecc79f886b805d3e1eb1ff7", "patch": "@@ -1,6 +1,6 @@\n // Versatile string utility -*- C++ -*-\n \n-// Copyright (C) 2005, 2006 Free Software Foundation, Inc.\n+// Copyright (C) 2005, 2006, 2007 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -55,6 +55,7 @@ _GLIBCXX_BEGIN_NAMESPACE(__gnu_cxx)\n       typedef _Traits\t\t\t\t\t    traits_type;      \n       typedef typename _Traits::char_type\t\t    value_type;\n       typedef typename _CharT_alloc_type::size_type\t    size_type;\n+      typedef typename _CharT_alloc_type::difference_type   difference_type;      \n       typedef typename _CharT_alloc_type::pointer\t    pointer;\n       typedef typename _CharT_alloc_type::const_pointer\t    const_pointer;\n \n@@ -169,6 +170,19 @@ _GLIBCXX_BEGIN_NAMESPACE(__gnu_cxx)\n       static void\n       _S_copy_chars(_CharT* __p, const _CharT* __k1, const _CharT* __k2)\n       { _S_copy(__p, __k1, __k2 - __k1); }\n+\n+      static int\n+      _S_compare(size_type __n1, size_type __n2)\n+      {\n+\tconst difference_type __d = difference_type(__n1 - __n2);\n+\n+\tif (__d > std::numeric_limits<int>::max())\n+\t  return std::numeric_limits<int>::max();\n+\telse if (__d < std::numeric_limits<int>::min())\n+\t  return std::numeric_limits<int>::min();\n+\telse\n+\t  return int(__d);\t\n+      }\n     };\n \n _GLIBCXX_END_NAMESPACE"}]}