{"sha": "2b78f22152e0af0612433f2bdf1d9eae76bfd843", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmI3OGYyMjE1MmUwYWYwNjEyNDMzZjJiZGYxZDllYWU3NmJmZDg0Mw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2016-04-27T10:42:08Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2016-04-27T10:42:08Z"}, "message": "re PR ipa/70785 (LTO bootstrap with IPA PTA is broken)\n\n2016-04-27  Richard Biener  <rguenther@suse.de>\n\n\tPR ipa/70785\n\t* tree-ssa-structalias.c (refered_from_nonlocal_fn): New\n\tfunction cummulating used_from_other_partition, externally_visible\n\tand force_output from aliases.\n\t(refered_from_nonlocal_var): Likewise.\n\t(ipa_pta_execute): Use call_for_symbol_and_aliases to cummulate\n\tnode flags properly.\n\nFrom-SVN: r235477", "tree": {"sha": "2d34bc0aec820121f34dc86520fb24811bd5eee2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2d34bc0aec820121f34dc86520fb24811bd5eee2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2b78f22152e0af0612433f2bdf1d9eae76bfd843", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b78f22152e0af0612433f2bdf1d9eae76bfd843", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b78f22152e0af0612433f2bdf1d9eae76bfd843", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b78f22152e0af0612433f2bdf1d9eae76bfd843/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c1e1f4333b65cb99f2dbfff267a634448d947529", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1e1f4333b65cb99f2dbfff267a634448d947529", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c1e1f4333b65cb99f2dbfff267a634448d947529"}], "stats": {"total": 39, "additions": 38, "deletions": 1}, "files": [{"sha": "38dd7c83f157ef490c0f57296b187e3ae717f66a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b78f22152e0af0612433f2bdf1d9eae76bfd843/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b78f22152e0af0612433f2bdf1d9eae76bfd843/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2b78f22152e0af0612433f2bdf1d9eae76bfd843", "patch": "@@ -1,3 +1,13 @@\n+2016-04-27  Richard Biener  <rguenther@suse.de>\n+\n+\tPR ipa/70785\n+\t* tree-ssa-structalias.c (refered_from_nonlocal_fn): New\n+\tfunction cummulating used_from_other_partition, externally_visible\n+\tand force_output from aliases.\n+\t(refered_from_nonlocal_var): Likewise.\n+\t(ipa_pta_execute): Use call_for_symbol_and_aliases to cummulate\n+\tnode flags properly.\n+\n 2016-04-27  Bernd Schmidt  <bschmidt@redhat.com>\n \n \t* doc/invoke.texi (Warning Options): Add -Wmemset-elt-size."}, {"sha": "8c25af7088d747cd23e67498c3bb083a3a8edfb0", "filename": "gcc/tree-ssa-structalias.c", "status": "modified", "additions": 28, "deletions": 1, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b78f22152e0af0612433f2bdf1d9eae76bfd843/gcc%2Ftree-ssa-structalias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b78f22152e0af0612433f2bdf1d9eae76bfd843/gcc%2Ftree-ssa-structalias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-structalias.c?ref=2b78f22152e0af0612433f2bdf1d9eae76bfd843", "patch": "@@ -7508,7 +7508,7 @@ struct pt_solution ipa_escaped_pt\n   = { true, false, false, false, false, false, false, false, NULL };\n \n /* Associate node with varinfo DATA. Worker for\n-   cgraph_for_node_and_aliases.  */\n+   cgraph_for_symbol_thunks_and_aliases.  */\n static bool\n associate_varinfo_to_alias (struct cgraph_node *node, void *data)\n {\n@@ -7624,6 +7624,29 @@ debug_varmap (void)\n   dump_varmap (stderr);\n }\n \n+/* Compute whether node is refered to non-locally.  Worker for\n+   cgraph_for_symbol_thunks_and_aliases.  */\n+static bool\n+refered_from_nonlocal_fn (struct cgraph_node *node, void *data)\n+{\n+  bool *nonlocal_p = (bool *)data;\n+  *nonlocal_p |= (node->used_from_other_partition\n+\t\t  || node->externally_visible\n+\t\t  || node->force_output);\n+  return false;\n+}\n+\n+/* Same for varpool nodes.  */\n+static bool\n+refered_from_nonlocal_var (struct varpool_node *node, void *data)\n+{\n+  bool *nonlocal_p = (bool *)data;\n+  *nonlocal_p |= (node->used_from_other_partition\n+\t\t  || node->externally_visible\n+\t\t  || node->force_output);\n+  return false;\n+}\n+\n /* Execute the driver for IPA PTA.  */\n static unsigned int\n ipa_pta_execute (void)\n@@ -7687,6 +7710,8 @@ ipa_pta_execute (void)\n \t\t\t || node->externally_visible\n \t\t\t || node->force_output\n \t\t\t || node_address_taken);\n+      node->call_for_symbol_thunks_and_aliases (refered_from_nonlocal_fn,\n+\t\t\t\t\t\t&nonlocal_p, true);\n \n       vi = create_function_info_for (node->decl,\n \t\t\t\t     alias_get_name (node->decl), false,\n@@ -7724,6 +7749,8 @@ ipa_pta_execute (void)\n       bool nonlocal_p = (var->used_from_other_partition\n \t\t\t || var->externally_visible\n \t\t\t || var->force_output);\n+      var->call_for_symbol_and_aliases (refered_from_nonlocal_var,\n+\t\t\t\t\t&nonlocal_p, true);\n       if (nonlocal_p)\n \tvi->is_ipa_escape_point = true;\n     }"}]}