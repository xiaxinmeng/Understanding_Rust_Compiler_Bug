{"sha": "72e52b88582e738c8b8bde5f85af63d3a0e15d2b", "node_id": "C_kwDOANBUbNoAKDcyZTUyYjg4NTgyZTczOGM4YjhiZGU1Zjg1YWY2M2QzYTBlMTVkMmI", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2022-05-31T20:17:58Z"}, "committer": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2022-06-01T19:20:27Z"}, "message": "c++: auto function as function argument [PR105779]\n\nThis testcase demonstrates that the issue in PR105623 is not limited to\ntemplates, so we should do the marking in a less template-specific place.\n\n\tPR c++/105779\n\ngcc/cp/ChangeLog:\n\n\t* call.cc (resolve_args): Call mark_single_function here.\n\t* pt.cc (unify_one_argument): Not here.\n\ngcc/testsuite/ChangeLog:\n\n\t* g++.dg/cpp1y/auto-fn63.C: New test.", "tree": {"sha": "34d204d4404904275a5a8788c6ea9e31d478c96f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/34d204d4404904275a5a8788c6ea9e31d478c96f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/72e52b88582e738c8b8bde5f85af63d3a0e15d2b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72e52b88582e738c8b8bde5f85af63d3a0e15d2b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/72e52b88582e738c8b8bde5f85af63d3a0e15d2b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72e52b88582e738c8b8bde5f85af63d3a0e15d2b/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ae54c1b09963779c5c3914782324ff48af32e2f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae54c1b09963779c5c3914782324ff48af32e2f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae54c1b09963779c5c3914782324ff48af32e2f1"}], "stats": {"total": 21, "additions": 17, "deletions": 4}, "files": [{"sha": "4710c3777c55999f4e8d737ab57244f31abc5081", "filename": "gcc/cp/call.cc", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72e52b88582e738c8b8bde5f85af63d3a0e15d2b/gcc%2Fcp%2Fcall.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72e52b88582e738c8b8bde5f85af63d3a0e15d2b/gcc%2Fcp%2Fcall.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.cc?ref=72e52b88582e738c8b8bde5f85af63d3a0e15d2b", "patch": "@@ -4672,6 +4672,11 @@ resolve_args (vec<tree, va_gc> *args, tsubst_flags_t complain)\n \t}\n       else if (invalid_nonstatic_memfn_p (EXPR_LOCATION (arg), arg, complain))\n \treturn NULL;\n+\n+      /* Force auto deduction now.  Omit tf_warning to avoid redundant\n+\t deprecated warning on deprecated-14.C.  */\n+      if (!mark_single_function (arg, tf_error))\n+\treturn NULL;\n     }\n   return args;\n }"}, {"sha": "6de8e496859acd92d92b02141f974f743d7b7303", "filename": "gcc/cp/pt.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72e52b88582e738c8b8bde5f85af63d3a0e15d2b/gcc%2Fcp%2Fpt.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72e52b88582e738c8b8bde5f85af63d3a0e15d2b/gcc%2Fcp%2Fpt.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.cc?ref=72e52b88582e738c8b8bde5f85af63d3a0e15d2b", "patch": "@@ -22624,10 +22624,6 @@ unify_one_argument (tree tparms, tree targs, tree parm, tree arg,\n \t      return unify_success (explain_p);\n \t    }\n \n-\t  /* Force auto deduction now.  Use tf_none to avoid redundant\n-\t     deprecated warning on deprecated-14.C.  */\n-\t  mark_single_function (arg, tf_none);\n-\n \t  arg_expr = arg;\n \t  arg = unlowered_expr_type (arg);\n \t  if (arg == error_mark_node)"}, {"sha": "ca3bc854065ca4ed604b232c546bf7b849ed402d", "filename": "gcc/testsuite/g++.dg/cpp1y/auto-fn63.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72e52b88582e738c8b8bde5f85af63d3a0e15d2b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fauto-fn63.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72e52b88582e738c8b8bde5f85af63d3a0e15d2b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fauto-fn63.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fauto-fn63.C?ref=72e52b88582e738c8b8bde5f85af63d3a0e15d2b", "patch": "@@ -0,0 +1,12 @@\n+// PR c++/105779\n+// { dg-do compile { target c++14 } }\n+\n+template<int>\n+struct struct1\n+{\n+  static auto apply() { return 1; }\n+};\n+\n+int method(int(*f)());\n+\n+int t = method(struct1<1>::apply);"}]}