{"sha": "d128a6bbe4b50d1c2d035d4cf59b9ab38f398159", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDEyOGE2YmJlNGI1MGQxYzJkMDM1ZDRjZjU5YjlhYjM4ZjM5ODE1OQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-02-19T04:36:33Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-02-19T04:36:33Z"}, "message": "Don't crash on out of range switch value.\n\nFrom-SVN: r170305", "tree": {"sha": "32d03f5dc53f17789a73f4a880d70da14e1f2ca7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/32d03f5dc53f17789a73f4a880d70da14e1f2ca7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d128a6bbe4b50d1c2d035d4cf59b9ab38f398159", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d128a6bbe4b50d1c2d035d4cf59b9ab38f398159", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d128a6bbe4b50d1c2d035d4cf59b9ab38f398159", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d128a6bbe4b50d1c2d035d4cf59b9ab38f398159/comments", "author": null, "committer": null, "parents": [{"sha": "6f6961cf116360adc27324d52d6e6a8ccf7c96c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f6961cf116360adc27324d52d6e6a8ccf7c96c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f6961cf116360adc27324d52d6e6a8ccf7c96c2"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "99ed6653914efd39b5d07bf9226929c3768fd67a", "filename": "gcc/go/gofrontend/statements.cc", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d128a6bbe4b50d1c2d035d4cf59b9ab38f398159/gcc%2Fgo%2Fgofrontend%2Fstatements.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d128a6bbe4b50d1c2d035d4cf59b9ab38f398159/gcc%2Fgo%2Fgofrontend%2Fstatements.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fstatements.cc?ref=d128a6bbe4b50d1c2d035d4cf59b9ab38f398159", "patch": "@@ -3212,7 +3212,12 @@ Case_clauses::Case_clause::get_constant_tree(Translate_context* context,\n \t  mpz_t ival;\n \t  mpz_init(ival);\n \t  if (!(*p)->integer_constant_value(true, ival, &itype))\n-\t    gcc_unreachable();\n+\t    {\n+\t      // Something went wrong.  This can happen with a\n+\t      // negative constant and an unsigned switch value.\n+\t      gcc_assert(saw_errors());\n+\t      continue;\n+\t    }\n \t  gcc_assert(itype != NULL);\n \t  tree type_tree = itype->get_tree(context->gogo());\n \t  tree val = Expression::integer_constant_tree(ival, type_tree);"}]}