{"sha": "e8a8ce6929fb2df8cda8797ea048afd49cb504a7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZThhOGNlNjkyOWZiMmRmOGNkYTg3OTdlYTA0OGFmZDQ5Y2I1MDRhNw==", "commit": {"author": {"name": "Tristan Gingold", "email": "gingold@adacore.com", "date": "2011-12-13T13:30:18Z"}, "committer": {"name": "Tristan Gingold", "email": "gingold@gcc.gnu.org", "date": "2011-12-13T13:30:18Z"}, "message": "vmsdbgout.c (vmsdbgout_write_source_line): New function.\n\n2011-12-13  Tristan Gingold  <gingold@adacore.com>\n\n\t* vmsdbgout.c (vmsdbgout_write_source_line): New function.\n\t(vmsdbgout_end_prologue): Call vmsdbgout_write_source_line.\n\t(vmsdbgout_begin_epilogue): Likewise.\n\t(vmsdbgout_end_epilogue): Likewise.\n\t(vmsdbgout_source_line): Move code to vmsdbgout_write_source_line.\n\nFrom-SVN: r182281", "tree": {"sha": "39e1220fd00d288a45abc5467fee27309840d0ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/39e1220fd00d288a45abc5467fee27309840d0ea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e8a8ce6929fb2df8cda8797ea048afd49cb504a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8a8ce6929fb2df8cda8797ea048afd49cb504a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e8a8ce6929fb2df8cda8797ea048afd49cb504a7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8a8ce6929fb2df8cda8797ea048afd49cb504a7/comments", "author": {"login": "gingold-adacore", "id": 16334725, "node_id": "MDQ6VXNlcjE2MzM0NzI1", "avatar_url": "https://avatars.githubusercontent.com/u/16334725?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gingold-adacore", "html_url": "https://github.com/gingold-adacore", "followers_url": "https://api.github.com/users/gingold-adacore/followers", "following_url": "https://api.github.com/users/gingold-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/gingold-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/gingold-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gingold-adacore/subscriptions", "organizations_url": "https://api.github.com/users/gingold-adacore/orgs", "repos_url": "https://api.github.com/users/gingold-adacore/repos", "events_url": "https://api.github.com/users/gingold-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/gingold-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4642ed295275670cf0c321513b136b405d1098b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4642ed295275670cf0c321513b136b405d1098b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4642ed295275670cf0c321513b136b405d1098b7"}], "stats": {"total": 62, "additions": 38, "deletions": 24}, "files": [{"sha": "63b7eacc1216017ab3b9c6601b8956a133eace12", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8a8ce6929fb2df8cda8797ea048afd49cb504a7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8a8ce6929fb2df8cda8797ea048afd49cb504a7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e8a8ce6929fb2df8cda8797ea048afd49cb504a7", "patch": "@@ -1,3 +1,11 @@\n+2011-12-13  Tristan Gingold  <gingold@adacore.com>\n+\n+\t* vmsdbgout.c (vmsdbgout_write_source_line): New function.\n+\t(vmsdbgout_end_prologue): Call vmsdbgout_write_source_line.\n+\t(vmsdbgout_begin_epilogue): Likewise.\n+\t(vmsdbgout_end_epilogue): Likewise.\n+\t(vmsdbgout_source_line): Move code to vmsdbgout_write_source_line.\n+\n 2011-12-13  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/51481"}, {"sha": "968965351a2e157f9a34f60fe609cfdf207f160d", "filename": "gcc/vmsdbgout.c", "status": "modified", "additions": 30, "deletions": 24, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8a8ce6929fb2df8cda8797ea048afd49cb504a7/gcc%2Fvmsdbgout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8a8ce6929fb2df8cda8797ea048afd49cb504a7/gcc%2Fvmsdbgout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvmsdbgout.c?ref=e8a8ce6929fb2df8cda8797ea048afd49cb504a7", "patch": "@@ -158,6 +158,7 @@ static void vmsdbgout_begin_block (unsigned int, unsigned int);\n static void vmsdbgout_end_block (unsigned int, unsigned int);\n static bool vmsdbgout_ignore_block (const_tree);\n static void vmsdbgout_source_line (unsigned int, const char *, int, bool);\n+static void vmsdbgout_write_source_line (unsigned, const char *, int , bool);\n static void vmsdbgout_begin_prologue (unsigned int, const char *);\n static void vmsdbgout_end_prologue (unsigned int, const char *);\n static void vmsdbgout_end_function (unsigned int);\n@@ -1162,7 +1163,7 @@ vmsdbgout_end_prologue (unsigned int line, const char *file)\n       ASM_OUTPUT_LABEL (asm_out_file, label);\n \n       /* VMS PCA expects every PC range to correlate to some line and file.  */\n-      vmsdbgout_source_line (line, file, 0, true);\n+      vmsdbgout_write_source_line (line, file, 0, true);\n     }\n }\n \n@@ -1202,7 +1203,7 @@ vmsdbgout_begin_epilogue (unsigned int line, const char *file)\n \n \t  /* VMS PCA expects every PC range to correlate to some line and\n \t     file.  */\n-\t  vmsdbgout_source_line (line, file, 0, true);\n+\t  vmsdbgout_write_source_line (line, file, 0, true);\n \t}\n     }\n }\n@@ -1228,7 +1229,7 @@ vmsdbgout_end_epilogue (unsigned int line, const char *file)\n       ASM_OUTPUT_LABEL (asm_out_file, label);\n \n       /* VMS PCA expects every PC range to correlate to some line and file.  */\n-      vmsdbgout_source_line (line, file, 0, true);\n+      vmsdbgout_write_source_line (line, file, 0, true);\n     }\n }\n \n@@ -1387,6 +1388,31 @@ lookup_filename (const char *file_name)\n    and record information relating to this source line, in\n    'line_info_table' for later output of the .debug_line section.  */\n \n+static void\n+vmsdbgout_write_source_line (unsigned line, const char *filename,\n+                             int discriminator, bool is_stmt)\n+{\n+  dst_line_info_ref line_info;\n+\n+  targetm.asm_out.internal_label (asm_out_file, LINE_CODE_LABEL,\n+                                  line_info_table_in_use);\n+\n+  /* Expand the line info table if necessary.  */\n+  if (line_info_table_in_use == line_info_table_allocated)\n+    {\n+      line_info_table_allocated += LINE_INFO_TABLE_INCREMENT;\n+      line_info_table = XRESIZEVEC (dst_line_info_entry, line_info_table,\n+                                    line_info_table_allocated);\n+    }\n+\n+  /* Add the new entry at the end of the line_info_table.  */\n+  line_info = &line_info_table[line_info_table_in_use++];\n+  line_info->dst_file_num = lookup_filename (filename);\n+  line_info->dst_line_num = line;\n+  if (line > file_info_table[line_info->dst_file_num].max_line)\n+    file_info_table[line_info->dst_file_num].max_line = line;\n+}\n+\n static void\n vmsdbgout_source_line (register unsigned line, register const char *filename,\n                        int discriminator, bool is_stmt)\n@@ -1395,27 +1421,7 @@ vmsdbgout_source_line (register unsigned line, register const char *filename,\n     (*dwarf2_debug_hooks.source_line) (line, filename, discriminator, is_stmt);\n \n   if (debug_info_level >= DINFO_LEVEL_TERSE)\n-    {\n-      dst_line_info_ref line_info;\n-\n-      targetm.asm_out.internal_label (asm_out_file, LINE_CODE_LABEL,\n-\t\t\t\t      line_info_table_in_use);\n-\n-      /* Expand the line info table if necessary.  */\n-      if (line_info_table_in_use == line_info_table_allocated)\n-\t{\n-\t  line_info_table_allocated += LINE_INFO_TABLE_INCREMENT;\n-\t  line_info_table = XRESIZEVEC (dst_line_info_entry, line_info_table,\n-\t\t\t\t\tline_info_table_allocated);\n-\t}\n-\n-      /* Add the new entry at the end of the line_info_table.  */\n-      line_info = &line_info_table[line_info_table_in_use++];\n-      line_info->dst_file_num = lookup_filename (filename);\n-      line_info->dst_line_num = line;\n-      if (line > file_info_table[line_info->dst_file_num].max_line)\n-\tfile_info_table[line_info->dst_file_num].max_line = line;\n-    }\n+    vmsdbgout_write_source_line (line, filename, discriminator, is_stmt);\n }\n \n /* Record the beginning of a new source file, for later output."}]}