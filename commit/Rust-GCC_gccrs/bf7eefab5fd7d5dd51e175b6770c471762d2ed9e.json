{"sha": "bf7eefab5fd7d5dd51e175b6770c471762d2ed9e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmY3ZWVmYWI1ZmQ3ZDVkZDUxZTE3NWI2NzcwYzQ3MTc2MmQyZWQ5ZQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2011-03-21T18:19:47Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2011-03-21T18:19:47Z"}, "message": "re PR bootstrap/48216 (IRIX 6 Ada bootstrap broken: gnu_decl uninitialized in gcc-interface/decl.c:elaborate_expression_1)\n\n\tPR bootstrap/48216\n\t* gcc-interface/decl.c (elaborate_expression_1): Localize GNU_DECL.\n\nFrom-SVN: r171254", "tree": {"sha": "0e6cf29443d852053f8e92f0211df22c6a1add02", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0e6cf29443d852053f8e92f0211df22c6a1add02"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bf7eefab5fd7d5dd51e175b6770c471762d2ed9e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf7eefab5fd7d5dd51e175b6770c471762d2ed9e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf7eefab5fd7d5dd51e175b6770c471762d2ed9e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf7eefab5fd7d5dd51e175b6770c471762d2ed9e/comments", "author": null, "committer": null, "parents": [{"sha": "31408f60e99e80c891e4f0356abeacf58c86f999", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31408f60e99e80c891e4f0356abeacf58c86f999", "html_url": "https://github.com/Rust-GCC/gccrs/commit/31408f60e99e80c891e4f0356abeacf58c86f999"}], "stats": {"total": 26, "additions": 16, "deletions": 10}, "files": [{"sha": "b2d88618040114dbe194ed6736c562dbadd83018", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf7eefab5fd7d5dd51e175b6770c471762d2ed9e/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf7eefab5fd7d5dd51e175b6770c471762d2ed9e/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=bf7eefab5fd7d5dd51e175b6770c471762d2ed9e", "patch": "@@ -1,3 +1,8 @@\n+2011-03-21  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\tPR bootstrap/48216\n+\t* gcc-interface/decl.c (elaborate_expression_1): Localize GNU_DECL.\n+\n 2011-03-21  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/decl.c (components_to_record): Add REORDER parameter,"}, {"sha": "2f9b2ecec23621be6b483d57d4cf9e7d5d2adf6a", "filename": "gcc/ada/gcc-interface/decl.c", "status": "modified", "additions": 11, "deletions": 10, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf7eefab5fd7d5dd51e175b6770c471762d2ed9e/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf7eefab5fd7d5dd51e175b6770c471762d2ed9e/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fdecl.c?ref=bf7eefab5fd7d5dd51e175b6770c471762d2ed9e", "patch": "@@ -6006,7 +6006,6 @@ elaborate_expression_1 (tree gnu_expr, Entity_Id gnat_entity, tree gnu_name,\n {\n   const bool expr_global_p = Is_Public (gnat_entity) || global_bindings_p ();\n   bool expr_variable_p, use_variable;\n-  tree gnu_decl;\n \n   /* In most cases, we won't see a naked FIELD_DECL because a discriminant\n      reference will have been replaced with a COMPONENT_REF when the type\n@@ -6071,15 +6070,17 @@ elaborate_expression_1 (tree gnu_expr, Entity_Id gnat_entity, tree gnu_name,\n \n   /* Now create it, possibly only for debugging purposes.  */\n   if (use_variable || need_debug)\n-    gnu_decl\n-      = create_var_decl (create_concat_name (gnat_entity,\n-\t\t\t\t\t     IDENTIFIER_POINTER (gnu_name)),\n-\t\t\t NULL_TREE, TREE_TYPE (gnu_expr), gnu_expr,\n-\t\t\t !need_debug, Is_Public (gnat_entity),\n-\t\t\t !definition, expr_global_p, NULL, gnat_entity);\n-\n-  if (use_variable)\n-    return gnu_decl;\n+    {\n+      tree gnu_decl\n+\t= create_var_decl (create_concat_name (gnat_entity,\n+\t\t\t\t\t       IDENTIFIER_POINTER (gnu_name)),\n+\t\t\t   NULL_TREE, TREE_TYPE (gnu_expr), gnu_expr,\n+\t\t\t   !need_debug, Is_Public (gnat_entity),\n+\t\t\t   !definition, expr_global_p, NULL, gnat_entity);\n+\n+      if (use_variable)\n+\treturn gnu_decl;\n+    }\n \n   return expr_variable_p ? gnat_save_expr (gnu_expr) : gnu_expr;\n }"}]}