{"sha": "2ce59df73da0bb9ab64eae1b59851f33a623260c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmNlNTlkZjczZGEwYmI5YWI2NGVhZTFiNTk4NTFmMzNhNjIzMjYwYw==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2009-06-04T05:52:03Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2009-06-04T05:52:03Z"}, "message": "tree-ssa-live.c (remove_unused_scope_block_p): Keep variables that have value exprs.\n\n* tree-ssa-live.c (remove_unused_scope_block_p): Keep variables\nthat have value exprs.\n\nFrom-SVN: r148161", "tree": {"sha": "64e4783b15e2bc0c0bdebb492b442e74a5a7df4d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/64e4783b15e2bc0c0bdebb492b442e74a5a7df4d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2ce59df73da0bb9ab64eae1b59851f33a623260c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ce59df73da0bb9ab64eae1b59851f33a623260c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ce59df73da0bb9ab64eae1b59851f33a623260c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ce59df73da0bb9ab64eae1b59851f33a623260c/comments", "author": null, "committer": null, "parents": [{"sha": "78bd9046a8dff27c8247a5c80bdec5f7122f77d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78bd9046a8dff27c8247a5c80bdec5f7122f77d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78bd9046a8dff27c8247a5c80bdec5f7122f77d2"}], "stats": {"total": 16, "additions": 16, "deletions": 0}, "files": [{"sha": "2190c0fb982946c92131a08298bf7654ed7379c8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ce59df73da0bb9ab64eae1b59851f33a623260c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ce59df73da0bb9ab64eae1b59851f33a623260c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2ce59df73da0bb9ab64eae1b59851f33a623260c", "patch": "@@ -1,3 +1,8 @@\n+2009-06-04  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\t* tree-ssa-live.c (remove_unused_scope_block_p): Keep variables\n+\tthat have value exprs.\n+\n 2009-06-04  Alexandre Oliva  <aoliva@redhat.com>\n \n \t* dwarf2asm.c (dw2_force_const_mem): Defer creation of"}, {"sha": "c7366ff95dc162bca852c0a3ff3b479219865113", "filename": "gcc/tree-ssa-live.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ce59df73da0bb9ab64eae1b59851f33a623260c/gcc%2Ftree-ssa-live.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ce59df73da0bb9ab64eae1b59851f33a623260c/gcc%2Ftree-ssa-live.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-live.c?ref=2ce59df73da0bb9ab64eae1b59851f33a623260c", "patch": "@@ -435,6 +435,17 @@ remove_unused_scope_block_p (tree scope)\n \t will be output to file.  */\n       if (TREE_CODE (*t) == FUNCTION_DECL)\n \tunused = false;\n+\n+      /* If a decl has a value expr, we need to instantiate it\n+\t regardless of debug info generation, to avoid codegen\n+\t differences in memory overlap tests.  update_equiv_regs() may\n+\t indirectly call validate_equiv_mem() to test whether a\n+\t SET_DEST overlaps with others, and if the value expr changes\n+\t by virtual register instantiation, we may get end up with\n+\t different results.  */\n+      else if (TREE_CODE (*t) == VAR_DECL && DECL_HAS_VALUE_EXPR_P (*t))\n+\tunused = false;\n+\n       /* Remove everything we don't generate debug info for.  */\n       else if (DECL_IGNORED_P (*t))\n \t{"}]}