{"sha": "5a6452e6606550a4a84e929d90971a9d78d5f6de", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWE2NDUyZTY2MDY1NTBhNGE4NGU5MjlkOTA5NzFhOWQ3OGQ1ZjZkZQ==", "commit": {"author": {"name": "Tom de Vries", "email": "tom@codesourcery.com", "date": "2016-03-09T09:14:21Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2016-03-09T09:14:21Z"}, "message": "Add oacc kernels testcases in libgomp.oacc-fortran\n\n2016-03-09  Tom de Vries  <tom@codesourcery.com>\n\n\t* testsuite/libgomp.oacc-fortran/kernels-loop-2.f95: New test.\n\t* testsuite/libgomp.oacc-fortran/kernels-loop-data-2.f95: Same.\n\t* testsuite/libgomp.oacc-fortran/kernels-loop-data-enter-exit-2.f95:\n\tSame.\n\t* testsuite/libgomp.oacc-fortran/kernels-loop-data-enter-exit.f95: Same.\n\t* testsuite/libgomp.oacc-fortran/kernels-loop-data-update.f95: Same.\n\t* testsuite/libgomp.oacc-fortran/kernels-loop-data.f95: Same.\n\t* testsuite/libgomp.oacc-fortran/kernels-loop.f95: Same.\n\nFrom-SVN: r234078", "tree": {"sha": "f427dcf84e47c5dd35775260e3dedfeeb4748641", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f427dcf84e47c5dd35775260e3dedfeeb4748641"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5a6452e6606550a4a84e929d90971a9d78d5f6de", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a6452e6606550a4a84e929d90971a9d78d5f6de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a6452e6606550a4a84e929d90971a9d78d5f6de", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a6452e6606550a4a84e929d90971a9d78d5f6de/comments", "author": null, "committer": null, "parents": [{"sha": "bf751f40a851b4c792ef34d98c11c30d66cdc40d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf751f40a851b4c792ef34d98c11c30d66cdc40d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf751f40a851b4c792ef34d98c11c30d66cdc40d"}], "stats": {"total": 255, "additions": 255, "deletions": 0}, "files": [{"sha": "70db8981a848f18428bbb6b9a53a15b00c5c531c", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a6452e6606550a4a84e929d90971a9d78d5f6de/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a6452e6606550a4a84e929d90971a9d78d5f6de/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=5a6452e6606550a4a84e929d90971a9d78d5f6de", "patch": "@@ -1,3 +1,14 @@\n+2016-03-09  Tom de Vries  <tom@codesourcery.com>\n+\n+\t* testsuite/libgomp.oacc-fortran/kernels-loop-2.f95: New test.\n+\t* testsuite/libgomp.oacc-fortran/kernels-loop-data-2.f95: Same.\n+\t* testsuite/libgomp.oacc-fortran/kernels-loop-data-enter-exit-2.f95:\n+\tSame.\n+\t* testsuite/libgomp.oacc-fortran/kernels-loop-data-enter-exit.f95: Same.\n+\t* testsuite/libgomp.oacc-fortran/kernels-loop-data-update.f95: Same.\n+\t* testsuite/libgomp.oacc-fortran/kernels-loop-data.f95: Same.\n+\t* testsuite/libgomp.oacc-fortran/kernels-loop.f95: Same.\n+\n 2016-03-07  Martin Jambor  <mjambor@suse.cz>\n \n \t* testsuite/lib/libgomp.exp"}, {"sha": "1fb40eee722b1c361c07dd27564e5792f26943f3", "filename": "libgomp/testsuite/libgomp.oacc-fortran/kernels-loop-2.f95", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a6452e6606550a4a84e929d90971a9d78d5f6de/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fkernels-loop-2.f95", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a6452e6606550a4a84e929d90971a9d78d5f6de/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fkernels-loop-2.f95", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fkernels-loop-2.f95?ref=5a6452e6606550a4a84e929d90971a9d78d5f6de", "patch": "@@ -0,0 +1,32 @@\n+! { dg-do run }\n+! { dg-options \"-ftree-parallelize-loops=32\" }\n+\n+program main\n+  implicit none\n+  integer, parameter         :: n = 1024\n+  integer, dimension (0:n-1) :: a, b, c\n+  integer                    :: i, ii\n+\n+  !$acc kernels copyout (a(0:n-1))\n+  do i = 0, n - 1\n+     a(i) = i * 2\n+  end do\n+  !$acc end kernels\n+\n+  !$acc kernels copyout (b(0:n-1))\n+  do i = 0, n -1\n+     b(i) = i * 4\n+  end do\n+  !$acc end kernels\n+\n+  !$acc kernels copyin (a(0:n-1), b(0:n-1)) copyout (c(0:n-1))\n+  do ii = 0, n - 1\n+     c(ii) = a(ii) + b(ii)\n+  end do\n+  !$acc end kernels\n+\n+  do i = 0, n - 1\n+     if (c(i) .ne. a(i) + b(i)) call abort\n+  end do\n+\n+end program main"}, {"sha": "7b52253e6dcd3aa9eba2773dbd422aff6e7e8c71", "filename": "libgomp/testsuite/libgomp.oacc-fortran/kernels-loop-data-2.f95", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a6452e6606550a4a84e929d90971a9d78d5f6de/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fkernels-loop-data-2.f95", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a6452e6606550a4a84e929d90971a9d78d5f6de/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fkernels-loop-data-2.f95", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fkernels-loop-data-2.f95?ref=5a6452e6606550a4a84e929d90971a9d78d5f6de", "patch": "@@ -0,0 +1,38 @@\n+! { dg-do run }\n+! { dg-options \"-ftree-parallelize-loops=32\" }\n+\n+program main\n+  implicit none\n+  integer, parameter         :: n = 1024\n+  integer, dimension (0:n-1) :: a, b, c\n+  integer                    :: i, ii\n+\n+  !$acc data copyout (a(0:n-1))\n+  !$acc kernels present (a(0:n-1))\n+  do i = 0, n - 1\n+     a(i) = i * 2\n+  end do\n+  !$acc end kernels\n+  !$acc end data\n+\n+  !$acc data copyout (b(0:n-1))\n+  !$acc kernels present (b(0:n-1))\n+  do i = 0, n -1\n+     b(i) = i * 4\n+  end do\n+  !$acc end kernels\n+  !$acc end data\n+\n+  !$acc data copyin (a(0:n-1), b(0:n-1)) copyout (c(0:n-1))\n+  !$acc kernels present (a(0:n-1), b(0:n-1), c(0:n-1))\n+  do ii = 0, n - 1\n+     c(ii) = a(ii) + b(ii)\n+  end do\n+  !$acc end kernels\n+  !$acc end data\n+\n+  do i = 0, n - 1\n+     if (c(i) .ne. a(i) + b(i)) call abort\n+  end do\n+\n+end program main"}, {"sha": "af98efaa702a57b2466607ffc311f2deca971afe", "filename": "libgomp/testsuite/libgomp.oacc-fortran/kernels-loop-data-enter-exit-2.f95", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a6452e6606550a4a84e929d90971a9d78d5f6de/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fkernels-loop-data-enter-exit-2.f95", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a6452e6606550a4a84e929d90971a9d78d5f6de/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fkernels-loop-data-enter-exit-2.f95", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fkernels-loop-data-enter-exit-2.f95?ref=5a6452e6606550a4a84e929d90971a9d78d5f6de", "patch": "@@ -0,0 +1,38 @@\n+! { dg-do run }\n+! { dg-options \"-ftree-parallelize-loops=32\" }\n+\n+program main\n+  implicit none\n+  integer, parameter         :: n = 1024\n+  integer, dimension (0:n-1) :: a, b, c\n+  integer                    :: i, ii\n+\n+  !$acc enter data create (a(0:n-1))\n+  !$acc kernels present (a(0:n-1))\n+  do i = 0, n - 1\n+     a(i) = i * 2\n+  end do\n+  !$acc end kernels\n+  !$acc exit data copyout (a(0:n-1))\n+\n+  !$acc enter data create (b(0:n-1))\n+  !$acc kernels present (b(0:n-1))\n+  do i = 0, n -1\n+     b(i) = i * 4\n+  end do\n+  !$acc end kernels\n+  !$acc exit data copyout (b(0:n-1))\n+\n+  !$acc enter data copyin (a(0:n-1), b(0:n-1)) create (c(0:n-1))\n+  !$acc kernels present (a(0:n-1), b(0:n-1), c(0:n-1))\n+  do ii = 0, n - 1\n+     c(ii) = a(ii) + b(ii)\n+  end do\n+  !$acc end kernels\n+  !$acc exit data copyout (c(0:n-1))\n+\n+  do i = 0, n - 1\n+     if (c(i) .ne. a(i) + b(i)) call abort\n+  end do\n+\n+end program main"}, {"sha": "bb6f8dca7fc5da21202d1b768c7c66b65b572801", "filename": "libgomp/testsuite/libgomp.oacc-fortran/kernels-loop-data-enter-exit.f95", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a6452e6606550a4a84e929d90971a9d78d5f6de/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fkernels-loop-data-enter-exit.f95", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a6452e6606550a4a84e929d90971a9d78d5f6de/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fkernels-loop-data-enter-exit.f95", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fkernels-loop-data-enter-exit.f95?ref=5a6452e6606550a4a84e929d90971a9d78d5f6de", "patch": "@@ -0,0 +1,36 @@\n+! { dg-do run }\n+! { dg-options \"-ftree-parallelize-loops=32\" }\n+\n+program main\n+  implicit none\n+  integer, parameter         :: n = 1024\n+  integer, dimension (0:n-1) :: a, b, c\n+  integer                    :: i, ii\n+\n+  !$acc enter data create (a(0:n-1), b(0:n-1), c(0:n-1))\n+\n+  !$acc kernels present (a(0:n-1))\n+  do i = 0, n - 1\n+     a(i) = i * 2\n+  end do\n+  !$acc end kernels\n+\n+  !$acc kernels present (b(0:n-1))\n+  do i = 0, n -1\n+     b(i) = i * 4\n+  end do\n+  !$acc end kernels\n+\n+  !$acc kernels present (a(0:n-1), b(0:n-1), c(0:n-1))\n+  do ii = 0, n - 1\n+     c(ii) = a(ii) + b(ii)\n+  end do\n+  !$acc end kernels\n+\n+  !$acc exit data copyout (a(0:n-1), b(0:n-1), c(0:n-1))\n+\n+  do i = 0, n - 1\n+     if (c(i) .ne. a(i) + b(i)) call abort\n+  end do\n+\n+end program main"}, {"sha": "cab1f2c674c9d31a3253942ceb4ca4badc24dcd8", "filename": "libgomp/testsuite/libgomp.oacc-fortran/kernels-loop-data-update.f95", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a6452e6606550a4a84e929d90971a9d78d5f6de/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fkernels-loop-data-update.f95", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a6452e6606550a4a84e929d90971a9d78d5f6de/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fkernels-loop-data-update.f95", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fkernels-loop-data-update.f95?ref=5a6452e6606550a4a84e929d90971a9d78d5f6de", "patch": "@@ -0,0 +1,36 @@\n+! { dg-do run }\n+! { dg-options \"-ftree-parallelize-loops=32\" }\n+\n+program main\n+  implicit none\n+  integer, parameter         :: n = 1024\n+  integer, dimension (0:n-1) :: a, b, c\n+  integer                    :: i, ii\n+\n+  !$acc enter data create (a(0:n-1), b(0:n-1), c(0:n-1))\n+\n+  !$acc kernels present (a(0:n-1))\n+  do i = 0, n - 1\n+     a(i) = i * 2\n+  end do\n+  !$acc end kernels\n+\n+  do i = 0, n -1\n+     b(i) = i * 4\n+  end do\n+\n+  !$acc update device (b(0:n-1))\n+\n+  !$acc kernels present (a(0:n-1), b(0:n-1), c(0:n-1))\n+  do ii = 0, n - 1\n+     c(ii) = a(ii) + b(ii)\n+  end do\n+  !$acc end kernels\n+\n+  !$acc exit data copyout (a(0:n-1), c(0:n-1))\n+\n+  do i = 0, n - 1\n+     if (c(i) .ne. a(i) + b(i)) call abort\n+  end do\n+\n+end program main"}, {"sha": "f26671ddb4d8513672afa77f6765ba8695a99fee", "filename": "libgomp/testsuite/libgomp.oacc-fortran/kernels-loop-data.f95", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a6452e6606550a4a84e929d90971a9d78d5f6de/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fkernels-loop-data.f95", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a6452e6606550a4a84e929d90971a9d78d5f6de/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fkernels-loop-data.f95", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fkernels-loop-data.f95?ref=5a6452e6606550a4a84e929d90971a9d78d5f6de", "patch": "@@ -0,0 +1,36 @@\n+! { dg-do run }\n+! { dg-options \"-ftree-parallelize-loops=32\" }\n+\n+program main\n+  implicit none\n+  integer, parameter         :: n = 1024\n+  integer, dimension (0:n-1) :: a, b, c\n+  integer                    :: i, ii\n+\n+  !$acc data copyout (a(0:n-1), b(0:n-1), c(0:n-1))\n+\n+  !$acc kernels present (a(0:n-1))\n+  do i = 0, n - 1\n+     a(i) = i * 2\n+  end do\n+  !$acc end kernels\n+\n+  !$acc kernels present (b(0:n-1))\n+  do i = 0, n -1\n+     b(i) = i * 4\n+  end do\n+  !$acc end kernels\n+\n+  !$acc kernels present (a(0:n-1), b(0:n-1), c(0:n-1))\n+  do ii = 0, n - 1\n+     c(ii) = a(ii) + b(ii)\n+  end do\n+  !$acc end kernels\n+\n+  !$acc end data\n+\n+  do i = 0, n - 1\n+     if (c(i) .ne. a(i) + b(i)) call abort\n+  end do\n+\n+end program main"}, {"sha": "b02dd57396d33ee002ece46cabe8648acb951abb", "filename": "libgomp/testsuite/libgomp.oacc-fortran/kernels-loop.f95", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a6452e6606550a4a84e929d90971a9d78d5f6de/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fkernels-loop.f95", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a6452e6606550a4a84e929d90971a9d78d5f6de/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fkernels-loop.f95", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fkernels-loop.f95?ref=5a6452e6606550a4a84e929d90971a9d78d5f6de", "patch": "@@ -0,0 +1,28 @@\n+! { dg-do run }\n+! { dg-options \"-ftree-parallelize-loops=32\" }\n+\n+program main\n+  implicit none\n+  integer, parameter         :: n = 1024\n+  integer, dimension (0:n-1) :: a, b, c\n+  integer                    :: i, ii\n+\n+  do i = 0, n - 1\n+     a(i) = i * 2\n+  end do\n+\n+  do i = 0, n -1\n+     b(i) = i * 4\n+  end do\n+\n+  !$acc kernels copyin (a(0:n-1), b(0:n-1)) copyout (c(0:n-1))\n+  do ii = 0, n - 1\n+     c(ii) = a(ii) + b(ii)\n+  end do\n+  !$acc end kernels\n+\n+  do i = 0, n - 1\n+     if (c(i) .ne. a(i) + b(i)) call abort\n+  end do\n+\n+end program main"}]}