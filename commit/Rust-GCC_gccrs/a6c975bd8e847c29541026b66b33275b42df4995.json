{"sha": "a6c975bd8e847c29541026b66b33275b42df4995", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTZjOTc1YmQ4ZTg0N2MyOTU0MTAyNmI2NmIzMzI3NWI0MmRmNDk5NQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2011-08-26T14:55:05Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2011-08-26T14:55:05Z"}, "message": "trans-decl.c (get_proc_pointer_decl): Set DECL_TLS_MODEL if threadprivate.\n\n\t* trans-decl.c (get_proc_pointer_decl): Set DECL_TLS_MODEL\n\tif threadprivate.\n\t* symbol.c (check_conflict): Allow threadprivate attribute with\n\tFL_PROCEDURE if proc_pointer.\n\n\t* testsuite/libgomp.fortran/threadprivate4.f90: New test.\n\nFrom-SVN: r178114", "tree": {"sha": "5460c14eafa145770f2aadf261d0b5fd64127454", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5460c14eafa145770f2aadf261d0b5fd64127454"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a6c975bd8e847c29541026b66b33275b42df4995", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6c975bd8e847c29541026b66b33275b42df4995", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6c975bd8e847c29541026b66b33275b42df4995", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6c975bd8e847c29541026b66b33275b42df4995/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2f27df53e757ee0ef77d042e92a7cd8e931e97f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f27df53e757ee0ef77d042e92a7cd8e931e97f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f27df53e757ee0ef77d042e92a7cd8e931e97f5"}], "stats": {"total": 97, "additions": 96, "deletions": 1}, "files": [{"sha": "08c68ada97e595470175cfacf23aab958a872052", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6c975bd8e847c29541026b66b33275b42df4995/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6c975bd8e847c29541026b66b33275b42df4995/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=a6c975bd8e847c29541026b66b33275b42df4995", "patch": "@@ -1,3 +1,10 @@\n+2011-08-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* trans-decl.c (get_proc_pointer_decl): Set DECL_TLS_MODEL\n+\tif threadprivate.\n+\t* symbol.c (check_conflict): Allow threadprivate attribute with\n+\tFL_PROCEDURE if proc_pointer.\n+\n 2011-08-25  Mikael Morin  <mikael.morin@gcc.gnu.org>\n \n \tPR fortran/50050"}, {"sha": "ce4ab3d1c38f666a2b174f7bd967299b00649b66", "filename": "gcc/fortran/symbol.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6c975bd8e847c29541026b66b33275b42df4995/gcc%2Ffortran%2Fsymbol.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6c975bd8e847c29541026b66b33275b42df4995/gcc%2Ffortran%2Fsymbol.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fsymbol.c?ref=a6c975bd8e847c29541026b66b33275b42df4995", "patch": "@@ -673,7 +673,8 @@ check_conflict (symbol_attribute *attr, const char *name, locus *where)\n \t  conf2 (codimension);\n \t  conf2 (dimension);\n \t  conf2 (function);\n-\t  conf2 (threadprivate);\n+\t  if (!attr->proc_pointer)\n+\t    conf2 (threadprivate);\n \t}\n \n       if (!attr->proc_pointer)"}, {"sha": "c85e20c007b49258d5eca61c88a9111b730bde54", "filename": "gcc/fortran/trans-decl.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6c975bd8e847c29541026b66b33275b42df4995/gcc%2Ffortran%2Ftrans-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6c975bd8e847c29541026b66b33275b42df4995/gcc%2Ffortran%2Ftrans-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-decl.c?ref=a6c975bd8e847c29541026b66b33275b42df4995", "patch": "@@ -1534,6 +1534,11 @@ get_proc_pointer_decl (gfc_symbol *sym)\n \t\t\t\t\t\t  false, true);\n     }\n \n+  /* Handle threadprivate procedure pointers.  */\n+  if (sym->attr.threadprivate\n+      && (TREE_STATIC (decl) || DECL_EXTERNAL (decl)))\n+    DECL_TLS_MODEL (decl) = decl_default_tls_model (decl);\n+\n   attributes = add_attributes_to_decl (sym->attr, NULL_TREE);\n   decl_attributes (&decl, attributes, 0);\n "}, {"sha": "37864682ea166ba072f453e50cf3387399ac3c5a", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6c975bd8e847c29541026b66b33275b42df4995/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6c975bd8e847c29541026b66b33275b42df4995/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=a6c975bd8e847c29541026b66b33275b42df4995", "patch": "@@ -1,3 +1,7 @@\n+2011-08-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* testsuite/libgomp.fortran/threadprivate4.f90: New test.\n+\n 2011-08-19  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR fortran/49792"}, {"sha": "b5fb10bfee765e51df14b6f54404aa2aef4064d8", "filename": "libgomp/testsuite/libgomp.fortran/threadprivate4.f90", "status": "added", "additions": 78, "deletions": 0, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6c975bd8e847c29541026b66b33275b42df4995/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fthreadprivate4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6c975bd8e847c29541026b66b33275b42df4995/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fthreadprivate4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fthreadprivate4.f90?ref=a6c975bd8e847c29541026b66b33275b42df4995", "patch": "@@ -0,0 +1,78 @@\n+! { dg-do run }\n+! { dg-require-effective-target tls_runtime }\n+\n+module threadprivate4\n+  integer :: vi\n+  procedure(), pointer :: foo\n+!$omp threadprivate (foo, vi)\n+\n+contains\n+  subroutine fn0\n+    vi = 0\n+  end subroutine fn0\n+  subroutine fn1\n+    vi = 1\n+  end subroutine fn1\n+  subroutine fn2\n+    vi = 2\n+  end subroutine fn2\n+  subroutine fn3\n+    vi = 3\n+  end subroutine fn3\n+end module threadprivate4\n+\n+  use omp_lib\n+  use threadprivate4\n+\n+  integer :: i\n+  logical :: l\n+\n+  procedure(), pointer :: bar1\n+  common /thrc/ bar1\n+!$omp threadprivate (/thrc/)\n+\n+  procedure(), pointer, save :: bar2\n+!$omp threadprivate (bar2)\n+\n+  l = .false.\n+  call omp_set_dynamic (.false.)\n+  call omp_set_num_threads (4)\n+\n+!$omp parallel num_threads (4) reduction (.or.:l) private (i)\n+  i = omp_get_thread_num ()\n+  if (i.eq.0) then\n+    foo => fn0\n+    bar1 => fn0\n+    bar2 => fn0\n+  elseif (i.eq.1) then\n+    foo => fn1\n+    bar1 => fn1\n+    bar2 => fn1\n+  elseif (i.eq.2) then\n+    foo => fn2\n+    bar1 => fn2\n+    bar2 => fn2\n+  else\n+    foo => fn3\n+    bar1 => fn3\n+    bar2 => fn3\n+  end if\n+  vi = -1\n+!$omp barrier\n+  vi = -1\n+  call foo ()\n+  l=l.or.(vi.ne.i)\n+  vi = -2\n+  call bar1 ()\n+  l=l.or.(vi.ne.i)\n+  vi = -3\n+  call bar2 ()\n+  l=l.or.(vi.ne.i)\n+  vi = -1\n+!$omp end parallel\n+\n+  if (l) call abort\n+\n+end\n+\n+! { dg-final { cleanup-modules \"threadprivate4\" } }"}]}