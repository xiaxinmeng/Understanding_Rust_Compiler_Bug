{"sha": "7187286ef3381ebde6377015fe776d6d11329a32", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzE4NzI4NmVmMzM4MWViZGU2Mzc3MDE1ZmU3NzZkNmQxMTMyOWEzMg==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2019-09-30T16:21:07Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2019-09-30T16:21:07Z"}, "message": "Remove global call sets: postreload-gcse.c\n\nThis is another case in which we should conservatively treat\npartial kills as full kills.\n\n2019-09-30  Richard Sandiford  <richard.sandiford@arm.com>\n\ngcc/\n\t* postreload-gcse.c: Include regs.h and function-abi.h.\n\t(record_opr_changes): Use insn_callee_abi to get the ABI of the\n\tcall insn target.  Conservatively assume that partially-clobbered\n\tregisters are altered.\n\nFrom-SVN: r276329", "tree": {"sha": "b8883782b4098fb88d3045da443e50e98c141046", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b8883782b4098fb88d3045da443e50e98c141046"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7187286ef3381ebde6377015fe776d6d11329a32", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7187286ef3381ebde6377015fe776d6d11329a32", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7187286ef3381ebde6377015fe776d6d11329a32", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7187286ef3381ebde6377015fe776d6d11329a32/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3df28f006a7ceaf958a9ce9d100dd1e266e18f26", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3df28f006a7ceaf958a9ce9d100dd1e266e18f26", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3df28f006a7ceaf958a9ce9d100dd1e266e18f26"}], "stats": {"total": 15, "additions": 14, "deletions": 1}, "files": [{"sha": "a30c38d6ebc2de4d6cab6c82c88de92f66d81607", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7187286ef3381ebde6377015fe776d6d11329a32/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7187286ef3381ebde6377015fe776d6d11329a32/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7187286ef3381ebde6377015fe776d6d11329a32", "patch": "@@ -1,3 +1,10 @@\n+2019-09-30  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* postreload-gcse.c: Include regs.h and function-abi.h.\n+\t(record_opr_changes): Use insn_callee_abi to get the ABI of the\n+\tcall insn target.  Conservatively assume that partially-clobbered\n+\tregisters are altered.\n+\n 2019-09-30  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* postreload.c (reload_combine_recognize_pattern): Use crtl->abi"}, {"sha": "0c12b3808a66b5fc26da4f571521bc2ca29fbe59", "filename": "gcc/postreload-gcse.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7187286ef3381ebde6377015fe776d6d11329a32/gcc%2Fpostreload-gcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7187286ef3381ebde6377015fe776d6d11329a32/gcc%2Fpostreload-gcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpostreload-gcse.c?ref=7187286ef3381ebde6377015fe776d6d11329a32", "patch": "@@ -41,6 +41,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"intl.h\"\n #include \"gcse-common.h\"\n #include \"gcse.h\"\n+#include \"regs.h\"\n+#include \"function-abi.h\"\n \n /* The following code implements gcse after reload, the purpose of this\n    pass is to cleanup redundant loads generated by reload and other\n@@ -772,7 +774,11 @@ record_opr_changes (rtx_insn *insn)\n     {\n       unsigned int regno;\n       hard_reg_set_iterator hrsi;\n-      EXECUTE_IF_SET_IN_HARD_REG_SET (regs_invalidated_by_call, 0, regno, hrsi)\n+      /* We don't track modes of hard registers, so we need to be\n+\t conservative and assume that partial kills are full kills.  */\n+      HARD_REG_SET callee_clobbers\n+\t= insn_callee_abi (insn).full_and_partial_reg_clobbers ();\n+      EXECUTE_IF_SET_IN_HARD_REG_SET (callee_clobbers, 0, regno, hrsi)\n \trecord_last_reg_set_info_regno (insn, regno);\n \n       if (! RTL_CONST_OR_PURE_CALL_P (insn))"}]}