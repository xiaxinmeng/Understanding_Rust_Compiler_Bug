{"sha": "a147b6d28fa9db1c7533d53e19837009f3f7fd05", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTE0N2I2ZDI4ZmE5ZGIxYzc1MzNkNTNlMTk4MzcwMDlmM2Y3ZmQwNQ==", "commit": {"author": {"name": "Georg-Johann Lay", "email": "avr@gjlay.de", "date": "2012-08-23T15:41:03Z"}, "committer": {"name": "Georg-Johann Lay", "email": "gjl@gcc.gnu.org", "date": "2012-08-23T15:41:03Z"}, "message": "Makefile.in (fixed-funcs,fixed-conv-funcs): filter-out LIB2FUNCS_EXCLUDE before adding them to libgcc-objects, libgcc-s-objects.\n\n\t* Makefile.in (fixed-funcs,fixed-conv-funcs): filter-out\n\tLIB2FUNCS_EXCLUDE before adding them to libgcc-objects,\n\tlibgcc-s-objects.\n\t* fixed-obj.mk: Only expand dependency if $o is not in\n\tLIB2FUNCS_EXCLUDE.\n\nFrom-SVN: r190624", "tree": {"sha": "50b0cf22878d9d6382e639f49b548bfc86a5d7b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/50b0cf22878d9d6382e639f49b548bfc86a5d7b8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a147b6d28fa9db1c7533d53e19837009f3f7fd05", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a147b6d28fa9db1c7533d53e19837009f3f7fd05", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a147b6d28fa9db1c7533d53e19837009f3f7fd05", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a147b6d28fa9db1c7533d53e19837009f3f7fd05/comments", "author": null, "committer": {"login": "sprintersb", "id": 8905355, "node_id": "MDQ6VXNlcjg5MDUzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/8905355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sprintersb", "html_url": "https://github.com/sprintersb", "followers_url": "https://api.github.com/users/sprintersb/followers", "following_url": "https://api.github.com/users/sprintersb/following{/other_user}", "gists_url": "https://api.github.com/users/sprintersb/gists{/gist_id}", "starred_url": "https://api.github.com/users/sprintersb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sprintersb/subscriptions", "organizations_url": "https://api.github.com/users/sprintersb/orgs", "repos_url": "https://api.github.com/users/sprintersb/repos", "events_url": "https://api.github.com/users/sprintersb/events{/privacy}", "received_events_url": "https://api.github.com/users/sprintersb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c583af79c0295886c0d4f951aba8ae864518d40d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c583af79c0295886c0d4f951aba8ae864518d40d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c583af79c0295886c0d4f951aba8ae864518d40d"}], "stats": {"total": 18, "additions": 14, "deletions": 4}, "files": [{"sha": "33ad51854798e69ae4019d07c8b5d80d93d8033b", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a147b6d28fa9db1c7533d53e19837009f3f7fd05/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a147b6d28fa9db1c7533d53e19837009f3f7fd05/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=a147b6d28fa9db1c7533d53e19837009f3f7fd05", "patch": "@@ -1,3 +1,11 @@\n+2012-08-22  Georg-Johann Lay  <avr@gjlay.de>\n+\n+\t* Makefile.in (fixed-funcs,fixed-conv-funcs): filter-out\n+\tLIB2FUNCS_EXCLUDE before adding them to libgcc-objects,\n+\tlibgcc-s-objects.\n+\t* fixed-obj.mk: Only expand dependency if $o is not in\n+\tLIB2FUNCS_EXCLUDE.\n+\n 2012-08-22  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* config/i386/t-linux (HOST_LIBGCC2_CFLAGS): New."}, {"sha": "1de1b8e5a48b2645e033c1b7e37dbda841746b4a", "filename": "libgcc/Makefile.in", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a147b6d28fa9db1c7533d53e19837009f3f7fd05/libgcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a147b6d28fa9db1c7533d53e19837009f3f7fd05/libgcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FMakefile.in?ref=a147b6d28fa9db1c7533d53e19837009f3f7fd05", "patch": "@@ -763,9 +763,9 @@ iter-to := $(fixed-modes)\n include $(srcdir)/empty.mk $(patsubst %,$(srcdir)/fixed-obj.mk,$(iter-items))\n \n # Add arithmetic functions to list of objects to be built\n-libgcc-objects += $(patsubst %,%$(objext),$(fixed-funcs))\n+libgcc-objects += $(patsubst %,%$(objext),$(filter-out $(LIB2FUNCS_EXCLUDE),$(fixed-funcs)))\n ifeq ($(enable_shared),yes)\n-libgcc-s-objects += $(patsubst %,%_s$(objext),$(fixed-funcs))\n+libgcc-s-objects += $(patsubst %,%_s$(objext),$(filter-out $(LIB2FUNCS_EXCLUDE),$(fixed-funcs)))\n endif\n \n # Convert from or to fractional\n@@ -782,9 +782,9 @@ iter-to := $(fixed-conv-to)\n include $(srcdir)/empty.mk $(patsubst %,$(srcdir)/fixed-obj.mk,$(iter-items))\n \n # Add conversion functions to list of objects to be built\n-libgcc-objects += $(patsubst %,%$(objext),$(fixed-conv-funcs))\n+libgcc-objects += $(patsubst %,%$(objext),$(filter-out $(LIB2FUNCS_EXCLUDE),$(fixed-conv-funcs)))\n ifeq ($(enable_shared),yes)\n-libgcc-s-objects += $(patsubst %,%_s$(objext),$(fixed-conv-funcs))\n+libgcc-s-objects += $(patsubst %,%_s$(objext),$(filter-out $(LIB2FUNCS_EXCLUDE),$(fixed-conv-funcs)))\n endif\n \n endif"}, {"sha": "4db7a5792c7a88e31942c669783d4d0b14e6817d", "filename": "libgcc/fixed-obj.mk", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a147b6d28fa9db1c7533d53e19837009f3f7fd05/libgcc%2Ffixed-obj.mk", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a147b6d28fa9db1c7533d53e19837009f3f7fd05/libgcc%2Ffixed-obj.mk", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Ffixed-obj.mk?ref=a147b6d28fa9db1c7533d53e19837009f3f7fd05", "patch": "@@ -22,10 +22,12 @@ endif\n \n #$(info $o$(objext): -DL$($o-label) $($o-opt))\n \n+ifneq ($o,$(filter $o,$(LIB2FUNCS_EXCLUDE)))\n $o$(objext): %$(objext): $(srcdir)/fixed-bit.c\n \t$(gcc_compile) -DL$($*-label) $($*-opt) -c $(srcdir)/fixed-bit.c $(vis_hide)\n \n ifeq ($(enable_shared),yes)\n $(o)_s$(objext): %_s$(objext): $(srcdir)/fixed-bit.c\n \t$(gcc_s_compile) -DL$($*-label) $($*-opt) -c $(srcdir)/fixed-bit.c\n endif\n+endif"}]}