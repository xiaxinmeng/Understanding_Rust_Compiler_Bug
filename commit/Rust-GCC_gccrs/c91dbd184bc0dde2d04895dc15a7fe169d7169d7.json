{"sha": "c91dbd184bc0dde2d04895dc15a7fe169d7169d7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzkxZGJkMTg0YmMwZGRlMmQwNDg5NWRjMTVhN2ZlMTY5ZDcxNjlkNw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-02-06T10:24:21Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-02-06T10:24:21Z"}, "message": "[multiple changes]\n\n2013-02-06  Javier Miranda  <miranda@adacore.com>\n\n\t* exp_ch5.adb (Expand_N_Assignment_Statement): Do not generate the\n\truntime check on assignment to tagged types if compiling with checks\n\tsuppressed.\n\n2013-02-06  Robert Dewar  <dewar@adacore.com>\n\n\t* exp_util.adb, checks.adb, sem_ch12.adb, sem_res.adb, prj-conf.adb,\n\ts-os_lib.adb: Minor reformatting\n\n2013-02-06  Vincent Celier  <celier@adacore.com>\n\n\t* ug_words: Add -gnateY = /IGNORE_STYLE_CHECKS_PRAGMAS.\n\n2013-02-06  Ed Schonberg  <schonberg@adacore.com>\n\n\t* snames.ads-tmpl: Add Name_Rational and pragma Rational.\n\t* par-prag.adb: Recognize pragma Rational.\n\t* opt.ads (Rational_Profile): flag to control compatibility mode\n\twith Rational compiler.\n\t* sem_ch8.adb (Analyze_Subprogram_Renaming): When Rational profile\n\tis enable, accept renaming declarations where the new subprogram\n\tand the renamed entity have the same name.\n\t* sem_prag.adb (analyze_pragma): Add pragma Rational, and recognize\n\tRational as a profile.\n\nFrom-SVN: r195793", "tree": {"sha": "101818bea7dd9a225ff9577318d645145d5b8615", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/101818bea7dd9a225ff9577318d645145d5b8615"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c91dbd184bc0dde2d04895dc15a7fe169d7169d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c91dbd184bc0dde2d04895dc15a7fe169d7169d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c91dbd184bc0dde2d04895dc15a7fe169d7169d7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c91dbd184bc0dde2d04895dc15a7fe169d7169d7/comments", "author": null, "committer": null, "parents": [{"sha": "ba08ba8412fb405d32184021400e1eda7b38b9a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba08ba8412fb405d32184021400e1eda7b38b9a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba08ba8412fb405d32184021400e1eda7b38b9a5"}], "stats": {"total": 148, "additions": 103, "deletions": 45}, "files": [{"sha": "12c6dc5224122c945994eaa2cfa282b8fb293285", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c91dbd184bc0dde2d04895dc15a7fe169d7169d7/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c91dbd184bc0dde2d04895dc15a7fe169d7169d7/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=c91dbd184bc0dde2d04895dc15a7fe169d7169d7", "patch": "@@ -1,3 +1,30 @@\n+2013-02-06  Javier Miranda  <miranda@adacore.com>\n+\n+\t* exp_ch5.adb (Expand_N_Assignment_Statement): Do not generate the\n+\truntime check on assignment to tagged types if compiling with checks\n+\tsuppressed.\n+\n+2013-02-06  Robert Dewar  <dewar@adacore.com>\n+\n+\t* exp_util.adb, checks.adb, sem_ch12.adb, sem_res.adb, prj-conf.adb,\n+\ts-os_lib.adb: Minor reformatting\n+\n+2013-02-06  Vincent Celier  <celier@adacore.com>\n+\n+\t* ug_words: Add -gnateY = /IGNORE_STYLE_CHECKS_PRAGMAS.\n+\n+2013-02-06  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* snames.ads-tmpl: Add Name_Rational and pragma Rational.\n+\t* par-prag.adb: Recognize pragma Rational.\n+\t* opt.ads (Rational_Profile): flag to control compatibility mode\n+\twith Rational compiler.\n+\t* sem_ch8.adb (Analyze_Subprogram_Renaming): When Rational profile\n+\tis enable, accept renaming declarations where the new subprogram\n+\tand the renamed entity have the same name.\n+\t* sem_prag.adb (analyze_pragma): Add pragma Rational, and recognize\n+\tRational as a profile.\n+\n 2013-02-06  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* exp_ch5.adb (Expand_Loop_Entry_Attributes): When"}, {"sha": "7afabd1c2c68e0b3f4f94b5474e43299ac600e69", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c91dbd184bc0dde2d04895dc15a7fe169d7169d7/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c91dbd184bc0dde2d04895dc15a7fe169d7169d7/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=c91dbd184bc0dde2d04895dc15a7fe169d7169d7", "patch": "@@ -1536,9 +1536,9 @@ package body Checks is\n       --  the constraints are constants. In this case, we can do the check\n       --  successfully at compile time.\n \n-      --  We skip this check for the case where the node is a rewritten`as\n-      --  an allocator, because it already carries the context subtype, and\n-      --  extracting the discriminants from the aggregate is messy.\n+      --  We skip this check for the case where the node is rewritten`as\n+      --  an allocator, because it already carries the context subtype,\n+      --  and extracting the discriminants from the aggregate is messy.\n \n       if Is_Constrained (S_Typ)\n         and then Nkind (Original_Node (N)) /= N_Allocator\n@@ -1596,11 +1596,11 @@ package body Checks is\n             if Ekind (T_Typ) = E_Private_Subtype\n               and then Present (Full_View (T_Typ))\n             then\n-               DconT  :=\n+               DconT :=\n                  First_Elmt (Discriminant_Constraint (Full_View (T_Typ)));\n-\n             else\n-               DconT  := First_Elmt (Discriminant_Constraint (T_Typ));\n+               DconT :=\n+                 First_Elmt (Discriminant_Constraint (T_Typ));\n             end if;\n \n             while Present (Discr) loop"}, {"sha": "243279b00fc8a4f42c8c84adc38f710dec531113", "filename": "gcc/ada/exp_ch5.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c91dbd184bc0dde2d04895dc15a7fe169d7169d7/gcc%2Fada%2Fexp_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c91dbd184bc0dde2d04895dc15a7fe169d7169d7/gcc%2Fada%2Fexp_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch5.adb?ref=c91dbd184bc0dde2d04895dc15a7fe169d7169d7", "patch": "@@ -2476,7 +2476,8 @@ package body Exp_Ch5 is\n                   --  the assignment we generate run-time check to ensure that\n                   --  the tags of source and target match.\n \n-                  if Is_Class_Wide_Type (Typ)\n+                  if not Tag_Checks_Suppressed (Typ)\n+                    and then Is_Class_Wide_Type (Typ)\n                     and then Is_Tagged_Type (Typ)\n                     and then Is_Tagged_Type (Underlying_Type (Etype (Rhs)))\n                   then"}, {"sha": "1900a9fd7ea7e7511dd0acb0535d7b407dc443d2", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c91dbd184bc0dde2d04895dc15a7fe169d7169d7/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c91dbd184bc0dde2d04895dc15a7fe169d7169d7/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=c91dbd184bc0dde2d04895dc15a7fe169d7169d7", "patch": "@@ -7952,9 +7952,9 @@ package body Exp_Util is\n       Par : Node_Id;\n \n    begin\n-      --  Locate an enclosing case or if expression. Note that these constructs\n-      --  appear as expression_with_actions, hence the test using the original\n-      --  node.\n+      --  Locate an enclosing case or if expression. Note: these constructs can\n+      --  get expanded into Expression_With_Actions, hence the need to test\n+      --  using the original node.\n \n       Par := N;\n       while Present (Par) loop"}, {"sha": "8d792224b2a4d8249623a0c9e3288e502461dffc", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c91dbd184bc0dde2d04895dc15a7fe169d7169d7/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c91dbd184bc0dde2d04895dc15a7fe169d7169d7/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=c91dbd184bc0dde2d04895dc15a7fe169d7169d7", "patch": "@@ -1181,6 +1181,10 @@ package Opt is\n    --  Set to True if the tool should not have any output if there are no\n    --  errors or warnings.\n \n+   Rational_Profile : Boolean := False;\n+   --  GNAT\n+   --  Set to True to enable compatibility mode with Rational compiler.\n+\n    Replace_In_Comments : Boolean := False;\n    --  GNATPREP\n    --  Set to True if -C switch used"}, {"sha": "fdd5905cd930abd7b1ec3bba84bec0e6bbb68fd1", "filename": "gcc/ada/par-prag.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c91dbd184bc0dde2d04895dc15a7fe169d7169d7/gcc%2Fada%2Fpar-prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c91dbd184bc0dde2d04895dc15a7fe169d7169d7/gcc%2Fada%2Fpar-prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-prag.adb?ref=c91dbd184bc0dde2d04895dc15a7fe169d7169d7", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1245,6 +1245,7 @@ begin\n            Pragma_Remote_Call_Interface          |\n            Pragma_Remote_Types                   |\n            Pragma_Restricted_Run_Time            |\n+           Pragma_Rational                       |\n            Pragma_Ravenscar                      |\n            Pragma_Reviewable                     |\n            Pragma_Share_Generic                  |"}, {"sha": "9ba624cdc0d64fa32781b6a2be5e5e3221d76917", "filename": "gcc/ada/prj-conf.adb", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c91dbd184bc0dde2d04895dc15a7fe169d7169d7/gcc%2Fada%2Fprj-conf.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c91dbd184bc0dde2d04895dc15a7fe169d7169d7/gcc%2Fada%2Fprj-conf.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-conf.adb?ref=c91dbd184bc0dde2d04895dc15a7fe169d7169d7", "patch": "@@ -1629,9 +1629,8 @@ package body Prj.Conf is\n       Success             : Boolean;\n \n       Conf_Project : Project_Id := No_Project;\n-      --  The object directory of this project will be used to store the config\n-      --  project file in auto-configuration. Set by procedure Check_Project\n-      --  below.\n+      --  The object directory of this project is used to store the config\n+      --  project file in auto-configuration. Set by Check_Project below.\n \n       procedure Check_Project (Project : Project_Id);\n       --  Look for a non aggregate project. If one is found, put its project Id\n@@ -1644,11 +1643,11 @@ package body Prj.Conf is\n       procedure Check_Project (Project : Project_Id) is\n       begin\n          if Project.Qualifier = Aggregate\n-           or else Project.Qualifier = Aggregate_Library\n+              or else\n+            Project.Qualifier = Aggregate_Library\n          then\n             declare\n-               List : Aggregated_Project_List :=\n-                 Project.Aggregated_Projects;\n+               List : Aggregated_Project_List := Project.Aggregated_Projects;\n \n             begin\n                --  Look for a non aggregate project until one is found\n@@ -1664,6 +1663,8 @@ package body Prj.Conf is\n          end if;\n       end Check_Project;\n \n+   --  Start of processing for Process_Project_And_Apply_Config\n+\n    begin\n       Main_Project := No_Project;\n       Automatically_Generated := False;"}, {"sha": "268e541865685c2fb3bddab1dc709ba2f89602c9", "filename": "gcc/ada/s-os_lib.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c91dbd184bc0dde2d04895dc15a7fe169d7169d7/gcc%2Fada%2Fs-os_lib.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c91dbd184bc0dde2d04895dc15a7fe169d7169d7/gcc%2Fada%2Fs-os_lib.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-os_lib.adb?ref=c91dbd184bc0dde2d04895dc15a7fe169d7169d7", "patch": "@@ -1656,7 +1656,7 @@ package body System.OS_Lib is\n    procedure Normalize_Arguments (Args : in out Argument_List) is\n \n       procedure Quote_Argument (Arg : in out String_Access);\n-      --  Add quote around argument if it contains spaces\n+      --  Add quote around argument if it contains spaces (or HT characters)\n \n       C_Argument_Needs_Quote : Integer;\n       pragma Import (C, C_Argument_Needs_Quote, \"__gnat_argument_needs_quote\");"}, {"sha": "3f8abe7f58c8efaadd23da7e19900e902d390b38", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c91dbd184bc0dde2d04895dc15a7fe169d7169d7/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c91dbd184bc0dde2d04895dc15a7fe169d7169d7/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=c91dbd184bc0dde2d04895dc15a7fe169d7169d7", "patch": "@@ -10452,24 +10452,24 @@ package body Sem_Ch12 is\n          T : constant Entity_Id := Get_Instance_Of (Gen_T);\n \n       begin\n+         --  Some detailed comments would be useful here ???\n+\n          return ((Base_Type (T) = Act_T\n                    or else Base_Type (T) = Base_Type (Act_T))\n                   and then Subtypes_Statically_Match (T, Act_T))\n \n            or else (Is_Class_Wide_Type (Gen_T)\n                      and then Is_Class_Wide_Type (Act_T)\n-                     and then\n-                       Subtypes_Match\n-                        (Get_Instance_Of (Root_Type (Gen_T)),\n-                         Root_Type (Act_T)))\n+                     and then Subtypes_Match\n+                                (Get_Instance_Of (Root_Type (Gen_T)),\n+                                 Root_Type (Act_T)))\n \n            or else\n-             ((Ekind (Gen_T) = E_Anonymous_Access_Subprogram_Type\n-                 or else Ekind (Gen_T) = E_Anonymous_Access_Type)\n+             (Ekind_In (Gen_T, E_Anonymous_Access_Subprogram_Type,\n+                               E_Anonymous_Access_Type)\n                and then Ekind (Act_T) = Ekind (Gen_T)\n-               and then\n-                 Subtypes_Statically_Match\n-                   (Designated_Type (Gen_T), Designated_Type (Act_T)));\n+               and then Subtypes_Statically_Match\n+                          (Designated_Type (Gen_T), Designated_Type (Act_T)));\n       end Subtypes_Match;\n \n       -----------------------------------------"}, {"sha": "ae7d97c8fb369b4704d8c92cb327ba101b2fe7d3", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 18, "deletions": 11, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c91dbd184bc0dde2d04895dc15a7fe169d7169d7/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c91dbd184bc0dde2d04895dc15a7fe169d7169d7/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=c91dbd184bc0dde2d04895dc15a7fe169d7169d7", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -2804,16 +2804,23 @@ package body Sem_Ch8 is\n             end if;\n          end if;\n \n-         if not Is_Actual\n-           and then (Old_S = New_S\n-                      or else\n-                        (Nkind (Nam) /= N_Expanded_Name\n-                          and then Chars (Old_S) = Chars (New_S))\n-                      or else\n-                        (Nkind (Nam) = N_Expanded_Name\n-                          and then Entity (Prefix (Nam)) = Current_Scope\n-                          and then\n-                            Chars (Selector_Name (Nam)) = Chars (New_S)))\n+         if Is_Actual then\n+            null;\n+\n+         --  The following is illegal, because F hides whatever other F may\n+         --  be around:\n+         --     function F (..)  renames F;\n+\n+         elsif Old_S = New_S\n+           or else (Nkind (Nam) /= N_Expanded_Name\n+                     and then Chars (Old_S) = Chars (New_S))\n+         then\n+            Error_Msg_N (\"subprogram cannot rename itself\", N);\n+\n+         elsif Nkind (Nam) = N_Expanded_Name\n+           and then Entity (Prefix (Nam)) = Current_Scope\n+           and then Chars (Selector_Name (Nam)) = Chars (New_S)\n+           and then not Rational_Profile\n          then\n             Error_Msg_N (\"subprogram cannot rename itself\", N);\n          end if;"}, {"sha": "d72c7d70727db76c60ce6f21733cbf15d93fc16a", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c91dbd184bc0dde2d04895dc15a7fe169d7169d7/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c91dbd184bc0dde2d04895dc15a7fe169d7169d7/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=c91dbd184bc0dde2d04895dc15a7fe169d7169d7", "patch": "@@ -13859,7 +13859,7 @@ package body Sem_Prag is\n \n          --  pragma Profile (profile_IDENTIFIER);\n \n-         --  profile_IDENTIFIER => Restricted | Ravenscar\n+         --  profile_IDENTIFIER => Restricted | Ravenscar | Rational\n \n          when Pragma_Profile =>\n             Ada_2005_Pragma;\n@@ -13879,6 +13879,9 @@ package body Sem_Prag is\n                     (Restricted,\n                      N, Warn => Treat_Restrictions_As_Warnings);\n \n+               elsif Chars (Argx) = Name_Rational then\n+                  Rational_Profile := True;\n+\n                elsif Chars (Argx) = Name_No_Implementation_Extensions then\n                   Set_Profile_Restrictions\n                     (No_Implementation_Extensions,\n@@ -14275,6 +14278,15 @@ package body Sem_Prag is\n             end if;\n          end;\n \n+         --------------\n+         -- Rational --\n+         --------------\n+\n+         --  pragma Rational, for compatibility with foreign compiler\n+\n+         when Pragma_Rational =>\n+            Rational_Profile := True;\n+\n          -----------------------\n          -- Relative_Deadline --\n          -----------------------\n@@ -16599,6 +16611,7 @@ package body Sem_Prag is\n       Pragma_Pure_12                        => -1,\n       Pragma_Pure_Function                  => -1,\n       Pragma_Queuing_Policy                 => -1,\n+      Pragma_Rational                       => -1,\n       Pragma_Ravenscar                      => -1,\n       Pragma_Relative_Deadline              => -1,\n       Pragma_Remote_Access_Type             => -1,"}, {"sha": "4fcbee93a2ca0b357f5a2bd19f96f9fa99ef190e", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c91dbd184bc0dde2d04895dc15a7fe169d7169d7/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c91dbd184bc0dde2d04895dc15a7fe169d7169d7/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=c91dbd184bc0dde2d04895dc15a7fe169d7169d7", "patch": "@@ -3423,7 +3423,9 @@ package body Sem_Res is\n                   --  * For a scalar type that has the Default_Value aspect\n                   --    specified, the formal parameter is initialized from the\n                   --    value of the actual, without checking that the value\n-                  --    satisfies any constraint or any predicate;\n+                  --    satisfies any constraint or any predicate.\n+                  --  I do not understand why this case is included??? this is\n+                  --  not a case where an OUT parameter is treated as IN OUT.\n \n                   --  * For a composite type with discriminants or that has\n                   --    implicit initial values for any subcomponents, the\n@@ -3442,10 +3444,9 @@ package body Sem_Res is\n                                 Present (Default_Aspect_Value (Etype (F))))\n                          or else\n                            (Is_Composite_Type (Etype (F))\n-                              and then\n-                                (Has_Discriminants (Etype (F))\n-                                   or else\n-                                 Is_Partially_Initialized_Type (Etype (F)))))\n+                              and then (Has_Discriminants (Etype (F))\n+                                         or else Is_Partially_Initialized_Type\n+                                                   (Etype (F)))))\n                   then\n                      Generate_Reference (Orig_A, A);\n                   end if;"}, {"sha": "466719542e6ba69138804401be483f614bfeb969", "filename": "gcc/ada/snames.ads-tmpl", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c91dbd184bc0dde2d04895dc15a7fe169d7169d7/gcc%2Fada%2Fsnames.ads-tmpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c91dbd184bc0dde2d04895dc15a7fe169d7169d7/gcc%2Fada%2Fsnames.ads-tmpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.ads-tmpl?ref=c91dbd184bc0dde2d04895dc15a7fe169d7169d7", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                             T e m p l a t e                              --\n --                                                                          --\n---          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -422,6 +422,7 @@ package Snames is\n    Name_Profile_Warnings               : constant Name_Id := N + $; -- GNAT\n    Name_Propagate_Exceptions           : constant Name_Id := N + $; -- GNAT\n    Name_Queuing_Policy                 : constant Name_Id := N + $;\n+   Name_Rational                       : constant Name_Id := N + $; -- GNAT\n    Name_Ravenscar                      : constant Name_Id := N + $; -- GNAT\n    Name_Restricted_Run_Time            : constant Name_Id := N + $; -- GNAT\n    Name_Restrictions                   : constant Name_Id := N + $;\n@@ -1717,6 +1718,7 @@ package Snames is\n       Pragma_Profile_Warnings,\n       Pragma_Propagate_Exceptions,\n       Pragma_Queuing_Policy,\n+      Pragma_Rational,\n       Pragma_Ravenscar,\n       Pragma_Restricted_Run_Time,\n       Pragma_Restrictions,"}, {"sha": "77a36ca095f135d595d21aad0d1e0ae919a8b78e", "filename": "gcc/ada/ug_words", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c91dbd184bc0dde2d04895dc15a7fe169d7169d7/gcc%2Fada%2Fug_words", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c91dbd184bc0dde2d04895dc15a7fe169d7169d7/gcc%2Fada%2Fug_words", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fug_words?ref=c91dbd184bc0dde2d04895dc15a7fe169d7169d7", "patch": "@@ -74,6 +74,7 @@ gcc -c          ^ GNAT COMPILE\n -gnateS         ^ /SCO_OUTPUT\n -gnatet         ^ /TARGET_DEPENDENT_INFO\n -gnateV         ^ /PARAMETER_VALIDITY_CHECK\n+-gnateY         ^ /IGNORE_STYLE_CHECKS_PRAGMAS\n -gnatE          ^ /CHECKS=ELABORATION\n -gnatf          ^ /REPORT_ERRORS=FULL\n -gnatF          ^ /UPPERCASE_EXTERNALS"}]}