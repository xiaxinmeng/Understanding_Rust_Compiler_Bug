{"sha": "a5046f48b3de8b9ce2b2b7dd3426cd51a01e246b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTUwNDZmNDhiM2RlOGI5Y2UyYjJiN2RkMzQyNmNkNTFhMDFlMjQ2Yg==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2016-03-16T11:57:02Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2016-03-16T11:57:02Z"}, "message": "Save call-clobbered registers in _mcount on 32-bit Solaris/x86 (PR target/38239)\n\n\tPR target/38239\n\t* config/sol2/gmon.c [__i386__] (_mcount): Save and restore\n\tcall-clobbered registers.\n\t(internal_mcount): Remove __i386__ handling.\n\nFrom-SVN: r234256", "tree": {"sha": "ef8347a5f086259718003084f46bb00038048ff8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ef8347a5f086259718003084f46bb00038048ff8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a5046f48b3de8b9ce2b2b7dd3426cd51a01e246b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5046f48b3de8b9ce2b2b7dd3426cd51a01e246b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5046f48b3de8b9ce2b2b7dd3426cd51a01e246b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5046f48b3de8b9ce2b2b7dd3426cd51a01e246b/comments", "author": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "197adb69832f8e211e9d421aed2e35e882544d22", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/197adb69832f8e211e9d421aed2e35e882544d22", "html_url": "https://github.com/Rust-GCC/gccrs/commit/197adb69832f8e211e9d421aed2e35e882544d22"}], "stats": {"total": 43, "additions": 19, "deletions": 24}, "files": [{"sha": "3a626bc9bb747c9a3a22956b13d8166a95be8e61", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5046f48b3de8b9ce2b2b7dd3426cd51a01e246b/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5046f48b3de8b9ce2b2b7dd3426cd51a01e246b/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=a5046f48b3de8b9ce2b2b7dd3426cd51a01e246b", "patch": "@@ -1,3 +1,10 @@\n+2016-03-16  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\tPR target/38239\n+\t* config/sol2/gmon.c [__i386__] (_mcount): Save and restore\n+\tcall-clobbered registers.\n+\t(internal_mcount): Remove __i386__ handling.\n+\n 2016-02-26  Joel Sherrill <joel@rtems.org>\n \n \t* config.host: Add x86_64-*-rtems*."}, {"sha": "652fd1ed946ff56d7fc014b942f39338f4a1edad", "filename": "libgcc/config/sol2/gmon.c", "status": "modified", "additions": 12, "deletions": 24, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5046f48b3de8b9ce2b2b7dd3426cd51a01e246b/libgcc%2Fconfig%2Fsol2%2Fgmon.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5046f48b3de8b9ce2b2b7dd3426cd51a01e246b/libgcc%2Fconfig%2Fsol2%2Fgmon.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fsol2%2Fgmon.c?ref=a5046f48b3de8b9ce2b2b7dd3426cd51a01e246b", "patch": "@@ -44,11 +44,7 @@\n \n extern void monstartup (char *, char *);\n extern void _mcleanup (void);\n-#ifdef __i386__\n-static void internal_mcount (void) __attribute__ ((used));\n-#else\n static void internal_mcount (char *, unsigned short *) __attribute__ ((used));\n-#endif\n static void moncontrol (int);\n \n struct phdr {\n@@ -223,8 +219,19 @@ _mcleanup (void)\n /* Solaris 2 libraries use _mcount.  */\n #if defined __i386__\n asm(\".globl _mcount\\n\"\n+    \"\t.type\t_mcount, @function\\n\"\n     \"_mcount:\\n\"\n-    \"\tjmp\tinternal_mcount\\n\");\n+    /* Save and restore the call-clobbered registers.  */\n+    \"\tpushl\t%eax\\n\"\n+    \"\tpushl\t%ecx\\n\"\n+    \"\tpushl\t%edx\\n\"\n+    \"\tmovl\t12(%esp), %edx\\n\"\n+    \"\tmovl\t4(%ebp), %eax\\n\"\n+    \"\tcall\tinternal_mcount\\n\"\n+    \"\tpopl\t%edx\\n\"\n+    \"\tpopl\t%ecx\\n\"\n+    \"\tpopl\t%eax\\n\"\n+    \"\tret\\n\");\n #elif defined __x86_64__\n /* See GLIBC for additional information about this technique.  */\n asm(\".globl _mcount\\n\" \n@@ -299,32 +306,13 @@ asm(\".global _mcount\\n\"\n #endif\n \n static void\n-#ifdef __i386__\n-internal_mcount (void)\n-#else\n internal_mcount (char *selfpc, unsigned short *frompcindex)\n-#endif\n {\n   struct tostruct *top;\n   struct tostruct *prevtop;\n   long toindex;\n   static char already_setup;\n \n-#ifdef __i386__\n-  char *selfpc;\n-  unsigned short *frompcindex;\n-\n-  /* Find the return address for mcount and the return address for mcount's\n-     caller.  */\n-\n-  /* selfpc = pc pushed by mcount call.\n-     This identifies the function that was just entered.  */\n-  selfpc = (void *) __builtin_return_address (0);\n-  /* frompcindex = pc in preceding frame.\n-     This identifies the caller of the function just entered.  */\n-  frompcindex = (void *) __builtin_return_address (1);\n-#endif\n-\n /* Only necessary without the Solaris CRTs or a proper gcrt1.o, otherwise\n    crtpg.o or gcrt1.o take care of that.\n "}]}