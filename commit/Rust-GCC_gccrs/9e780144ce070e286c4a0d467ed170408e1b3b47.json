{"sha": "9e780144ce070e286c4a0d467ed170408e1b3b47", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWU3ODAxNDRjZTA3MGUyODZjNGEwZDQ2N2VkMTcwNDA4ZTFiM2I0Nw==", "commit": {"author": {"name": "Wilco Dijkstra", "email": "wdijkstr@arm.com", "date": "2017-11-16T11:30:43Z"}, "committer": {"name": "Wilco Dijkstra", "email": "wilco@gcc.gnu.org", "date": "2017-11-16T11:30:43Z"}, "message": "[AArch64] Fix frame tests\n\nImprove the AArch64 frame tests - add -f(no-)omit-frame-pointer,\nupdate checks and add missing tests.  As a result all tests now\npass. \n\n    gcc/testsuite/\n\t* gcc.target/aarch64/lr_free_2.c: Fix test.\n\t* gcc.target/aarch64/spill_1.c: Likewise.\n\t* gcc.target/aarch64/test_frame_11.c: Likewise.\n\t* gcc.target/aarch64/test_frame_12.c: Likewise.\n\t* gcc.target/aarch64/test_frame_13.c: Likewise.\n\t* gcc.target/aarch64/test_frame_14.c: Likewise.\n\t* gcc.target/aarch64/test_frame_15.c: Likewise.\n\t* gcc.target/aarch64/test_frame_3.c: Likewise.\n\t* gcc.target/aarch64/test_frame_5.c: Likewise.\n\t* gcc.target/aarch64/test_frame_9.c: Likewise.\n\nFrom-SVN: r254814", "tree": {"sha": "5e8c6884ebabe877e93dae60f92979cd392fb3a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5e8c6884ebabe877e93dae60f92979cd392fb3a9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9e780144ce070e286c4a0d467ed170408e1b3b47", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e780144ce070e286c4a0d467ed170408e1b3b47", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e780144ce070e286c4a0d467ed170408e1b3b47", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e780144ce070e286c4a0d467ed170408e1b3b47/comments", "author": null, "committer": null, "parents": [{"sha": "8e43e9cd6064351db0015596cdafc225b75d975f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e43e9cd6064351db0015596cdafc225b75d975f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e43e9cd6064351db0015596cdafc225b75d975f"}], "stats": {"total": 51, "additions": 36, "deletions": 15}, "files": [{"sha": "2c3e979ce95dc19dc17a85ba0b7cc9e8cc417af3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e780144ce070e286c4a0d467ed170408e1b3b47/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e780144ce070e286c4a0d467ed170408e1b3b47/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9e780144ce070e286c4a0d467ed170408e1b3b47", "patch": "@@ -1,3 +1,16 @@\n+2017-11-16  Wilco Dijkstra  <wdijkstr@arm.com>\n+\n+\t* gcc.target/aarch64/lr_free_2.c: Fix test.\n+\t* gcc.target/aarch64/spill_1.c: Likewise.\n+\t* gcc.target/aarch64/test_frame_11.c: Likewise.\n+\t* gcc.target/aarch64/test_frame_12.c: Likewise.\n+\t* gcc.target/aarch64/test_frame_13.c: Likewise.\n+\t* gcc.target/aarch64/test_frame_14.c: Likewise.\n+\t* gcc.target/aarch64/test_frame_15.c: Likewise.\n+\t* gcc.target/aarch64/test_frame_3.c: Likewise.\n+\t* gcc.target/aarch64/test_frame_5.c: Likewise.\n+\t* gcc.target/aarch64/test_frame_9.c: Likewise.\n+\n 2017-11-16  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/70383"}, {"sha": "5d9500f4fb144bdae5d0199f0b0a218deb504176", "filename": "gcc/testsuite/gcc.target/aarch64/lr_free_2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e780144ce070e286c4a0d467ed170408e1b3b47/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Flr_free_2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e780144ce070e286c4a0d467ed170408e1b3b47/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Flr_free_2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Flr_free_2.c?ref=9e780144ce070e286c4a0d467ed170408e1b3b47", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do run } */\n-/* { dg-options \"-fno-inline -O2 -ffixed-x2 -ffixed-x3 -ffixed-x4 -ffixed-x5 -ffixed-x6 -ffixed-x7 -ffixed-x8 -ffixed-x9 -ffixed-x10 -ffixed-x11 -ffixed-x12 -ffixed-x13 -ffixed-x14 -ffixed-x15 -ffixed-x16 -ffixed-x17 -ffixed-x18 -ffixed-x19 -ffixed-x20 -ffixed-x21 -ffixed-x22 -ffixed-x23 -ffixed-x24 -ffixed-x25 -ffixed-x26 -ffixed-x27 -ffixed-x28 --save-temps -mgeneral-regs-only -fno-ipa-cp -fdump-rtl-ira\" } */\n+/* { dg-options \"-fno-omit-frame-pointer -fno-inline -O2 -ffixed-x2 -ffixed-x3 -ffixed-x4 -ffixed-x5 -ffixed-x6 -ffixed-x7 -ffixed-x8 -ffixed-x9 -ffixed-x10 -ffixed-x11 -ffixed-x12 -ffixed-x13 -ffixed-x14 -ffixed-x15 -ffixed-x16 -ffixed-x17 -ffixed-x18 -ffixed-x19 -ffixed-x20 -ffixed-x21 -ffixed-x22 -ffixed-x23 -ffixed-x24 -ffixed-x25 -ffixed-x26 -ffixed-x27 -ffixed-x28 --save-temps -mgeneral-regs-only -fno-ipa-cp -fdump-rtl-ira\" } */\n \n extern void abort ();\n "}, {"sha": "c9528cb21daaefcdd5f1218ee13edf40ee44bd99", "filename": "gcc/testsuite/gcc.target/aarch64/spill_1.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e780144ce070e286c4a0d467ed170408e1b3b47/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fspill_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e780144ce070e286c4a0d467ed170408e1b3b47/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fspill_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fspill_1.c?ref=9e780144ce070e286c4a0d467ed170408e1b3b47", "patch": "@@ -14,5 +14,3 @@ foo (void)\n }\n \n /* { dg-final { scan-assembler-times {\\tmovi\\tv[0-9]+\\.4s,} 2 } } */\n-/* { dg-final { scan-assembler-not {\\tldr\\t} } } */\n-/* { dg-final { scan-assembler-not {\\tstr\\t} } } */"}, {"sha": "67f858260d9156ac00951a21aa57353182188133", "filename": "gcc/testsuite/gcc.target/aarch64/test_frame_11.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e780144ce070e286c4a0d467ed170408e1b3b47/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftest_frame_11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e780144ce070e286c4a0d467ed170408e1b3b47/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftest_frame_11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftest_frame_11.c?ref=9e780144ce070e286c4a0d467ed170408e1b3b47", "patch": "@@ -5,7 +5,7 @@\n      * optimized code should use \"stp !\" for stack adjustment.  */\n \n /* { dg-do run } */\n-/* { dg-options \"-O2 --save-temps\" } */\n+/* { dg-options \"-fno-omit-frame-pointer -O2 --save-temps\" } */\n \n #include \"test_frame_common.h\"\n "}, {"sha": "02e48b4acac0a27a4beca0a3011d8d2c1a408117", "filename": "gcc/testsuite/gcc.target/aarch64/test_frame_12.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e780144ce070e286c4a0d467ed170408e1b3b47/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftest_frame_12.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e780144ce070e286c4a0d467ed170408e1b3b47/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftest_frame_12.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftest_frame_12.c?ref=9e780144ce070e286c4a0d467ed170408e1b3b47", "patch": "@@ -4,7 +4,7 @@\n      * number of callee-save reg >= 2.  */\n \n /* { dg-do run } */\n-/* { dg-options \"-O2 --save-temps\" } */\n+/* { dg-options \"-O2 -fomit-frame-pointer --save-temps\" } */\n \n #include \"test_frame_common.h\"\n \n@@ -14,5 +14,5 @@ t_frame_run (test12)\n /* { dg-final { scan-assembler-times \"sub\\tsp, sp, #\\[0-9\\]+\" 1 } } */\n \n /* Check epilogue using no write-back.  */\n-/* { dg-final { scan-assembler \"ldp\\tx29, x30, \\\\\\[sp, \\[0-9\\]+\\\\\\]\" } } */\n+/* { dg-final { scan-assembler \"ldr\\tx30, \\\\\\[sp, \\[0-9\\]+\\\\\\]\" } } */\n "}, {"sha": "33139363785d6befcb5eb009bc4324df785d32c4", "filename": "gcc/testsuite/gcc.target/aarch64/test_frame_13.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e780144ce070e286c4a0d467ed170408e1b3b47/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftest_frame_13.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e780144ce070e286c4a0d467ed170408e1b3b47/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftest_frame_13.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftest_frame_13.c?ref=9e780144ce070e286c4a0d467ed170408e1b3b47", "patch": "@@ -5,7 +5,7 @@\n      * Use a single stack adjustment, no writeback.  */\n \n /* { dg-do run } */\n-/* { dg-options \"-O2 --save-temps\" } */\n+/* { dg-options \"-fno-omit-frame-pointer -O2 --save-temps\" } */\n \n #include \"test_frame_common.h\"\n "}, {"sha": "95e2bf301d71d7f3e9ff2d6545e0e08923d009d5", "filename": "gcc/testsuite/gcc.target/aarch64/test_frame_14.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e780144ce070e286c4a0d467ed170408e1b3b47/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftest_frame_14.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e780144ce070e286c4a0d467ed170408e1b3b47/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftest_frame_14.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftest_frame_14.c?ref=9e780144ce070e286c4a0d467ed170408e1b3b47", "patch": "@@ -4,9 +4,12 @@\n      * number of callee-save reg >= 2.  */\n \n /* { dg-do run } */\n-/* { dg-options \"-O2\" } */\n+/* { dg-options \"-O2 -fno-omit-frame-pointer --save-temps\" } */\n \n #include \"test_frame_common.h\"\n \n t_frame_pattern_outgoing (test14, 700, , 8, a[8])\n t_frame_run (test14)\n+\n+/* { dg-final { scan-assembler-times \"sub\\tsp, sp, #\\[0-9\\]+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"stp\\tx29, x30, \\\\\\[sp, \\[0-9\\]+\\\\\\]\" 1 } } */"}, {"sha": "aebf6d1e43f7cdd70eb927fd365a78f122ccea62", "filename": "gcc/testsuite/gcc.target/aarch64/test_frame_15.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e780144ce070e286c4a0d467ed170408e1b3b47/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftest_frame_15.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e780144ce070e286c4a0d467ed170408e1b3b47/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftest_frame_15.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftest_frame_15.c?ref=9e780144ce070e286c4a0d467ed170408e1b3b47", "patch": "@@ -6,7 +6,7 @@\n      * Use a single stack adjustment, no writeback.  */\n \n /* { dg-do run } */\n-/* { dg-options \"-O2 --save-temps\" } */\n+/* { dg-options \"-fno-omit-frame-pointer -O2 --save-temps\" } */\n \n #include \"test_frame_common.h\"\n "}, {"sha": "b34a0ddd41d650521ca68d96bc79f0645b69caa0", "filename": "gcc/testsuite/gcc.target/aarch64/test_frame_3.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e780144ce070e286c4a0d467ed170408e1b3b47/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftest_frame_3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e780144ce070e286c4a0d467ed170408e1b3b47/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftest_frame_3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftest_frame_3.c?ref=9e780144ce070e286c4a0d467ed170408e1b3b47", "patch": "@@ -6,9 +6,12 @@\n      * we can't use \"str !\" to optimize stack adjustment.  */\n \n /* { dg-do run } */\n-/* { dg-options \"-O2 -fomit-frame-pointer\" } */\n+/* { dg-options \"-O2 -fomit-frame-pointer --save-temps\" } */\n \n #include \"test_frame_common.h\"\n \n t_frame_pattern (test3, 400, )\n t_frame_run (test3)\n+\n+/* { dg-final { scan-assembler-times \"sub\\tsp, sp, #\\[0-9\\]+\" 1 } } */\n+/* { dg-final { scan-assembler \"str\\tx30, \\\\\\[sp\\\\\\]\" } } */"}, {"sha": "2d7c83a7404bc97a959f534bb2344aa3607a9e22", "filename": "gcc/testsuite/gcc.target/aarch64/test_frame_5.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e780144ce070e286c4a0d467ed170408e1b3b47/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftest_frame_5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e780144ce070e286c4a0d467ed170408e1b3b47/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftest_frame_5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftest_frame_5.c?ref=9e780144ce070e286c4a0d467ed170408e1b3b47", "patch": "@@ -5,9 +5,12 @@\n      * one subtraction of the whole frame size.  */\n \n /* { dg-do run } */\n-/* { dg-options \"-O2 -fomit-frame-pointer\" } */\n+/* { dg-options \"-O2 -fomit-frame-pointer --save-temps\" } */\n \n #include \"test_frame_common.h\"\n \n t_frame_pattern_outgoing (test5, 300, \"x19\", 8, a[8])\n t_frame_run (test5)\n+\n+/* { dg-final { scan-assembler-times \"sub\\tsp, sp, #\\[0-9\\]+\" 1 } } */\n+/* { dg-final { scan-assembler \"stp\\tx\\[0-9\\]+, x30, \\\\\\[sp, \\[0-9\\]+\\\\\\]\" } } */"}, {"sha": "a28fbcee9598a52cacc08a40694430ad4d2d7104", "filename": "gcc/testsuite/gcc.target/aarch64/test_frame_9.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e780144ce070e286c4a0d467ed170408e1b3b47/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftest_frame_9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e780144ce070e286c4a0d467ed170408e1b3b47/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftest_frame_9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftest_frame_9.c?ref=9e780144ce070e286c4a0d467ed170408e1b3b47", "patch": "@@ -4,14 +4,15 @@\n      * total frame size > 512.\n        area except outgoing <= 512\n      * number of callee-saved reg = 1.\n-     * Split stack adjustment into two subtractions.\n-       the first subtractions couldn't be optimized\n-       into \"str !\" as it's > 256.  */\n+     * Use a single stack adjustment.  */\n \n /* { dg-do run } */\n-/* { dg-options \"-O2 -fomit-frame-pointer\" } */\n+/* { dg-options \"-O2 -fomit-frame-pointer --save-temps\" } */\n \n #include \"test_frame_common.h\"\n \n t_frame_pattern_outgoing (test9, 480, , 24, a[8], a[9], a[10])\n t_frame_run (test9)\n+\n+/* { dg-final { scan-assembler-times \"sub\\tsp, sp, #\\[0-9\\]+\" 1 } } */\n+/* { dg-final { scan-assembler \"str\\tx30, \\\\\\[sp, \\[0-9\\]+\\\\\\]\" } } */"}]}