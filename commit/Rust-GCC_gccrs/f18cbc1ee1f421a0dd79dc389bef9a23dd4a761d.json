{"sha": "f18cbc1ee1f421a0dd79dc389bef9a23dd4a761d", "node_id": "C_kwDOANBUbNoAKGYxOGNiYzFlZTFmNDIxYTBkZDc5ZGMzODliZWY5YTIzZGQ0YTc2MWQ", "commit": {"author": {"name": "Fran\u00e7ois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2021-12-17T18:30:36Z"}, "committer": {"name": "Fran\u00e7ois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2021-12-18T08:20:49Z"}, "message": "Darwin: Future-proof and homogeneize detection of darwin versions\n\nThe current GCC branch will become 12.1.0, which will be the stable\nversion of GCC when the next macOS version is released. There are some\nplaces in GCC that don\u2019t handle darwin22 as a version, so we need to\nfuture-proof it (gcc/config.gcc and gcc/config/darwin-driver.c). We\nalign that code with what Apple clang does, i.e. accept all potential\nmajor macOS versions until 99.\n\nThis patch also homogenises the handling of darwin version numbers,\nwhere the majority of places use darwin2*, but some used darwin2[0-9]*.\nSince there never was a darwin2.x version, the two are equivalent, and\nwe prefer the simpler darwin2*\n\ngcc/ChangeLog:\n\n\t* config/darwin-driver.c: Make version code more future-proof.\n\t* config.gcc: Homogeneize darwin versions.\n\t* configure.ac: Homogeneize darwin versions.\n\t* configure: Regenerate.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.dg/darwin-minversion-link.c: Test darwin21.\n\t* obj-c++.dg/cxx-ivars-3.mm: Homogeneize darwin versions.\n\t* obj-c++.dg/objc-gc-3.mm: Homogeneize darwin versions.\n\t* objc.dg/objc-gc-4.m: Homogeneize darwin versions.", "tree": {"sha": "0a243e2185f02ff994f70deb2e79fb094149afa6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0a243e2185f02ff994f70deb2e79fb094149afa6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f18cbc1ee1f421a0dd79dc389bef9a23dd4a761d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f18cbc1ee1f421a0dd79dc389bef9a23dd4a761d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f18cbc1ee1f421a0dd79dc389bef9a23dd4a761d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f18cbc1ee1f421a0dd79dc389bef9a23dd4a761d/comments", "author": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2554e2da9263e4e26a164318f8041b19b8e54c21", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2554e2da9263e4e26a164318f8041b19b8e54c21", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2554e2da9263e4e26a164318f8041b19b8e54c21"}], "stats": {"total": 23, "additions": 12, "deletions": 11}, "files": [{"sha": "c8c0ef9aa05cbf679c37c66a6cf3a44d543dcf45", "filename": "gcc/config.gcc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f18cbc1ee1f421a0dd79dc389bef9a23dd4a761d/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f18cbc1ee1f421a0dd79dc389bef9a23dd4a761d/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=f18cbc1ee1f421a0dd79dc389bef9a23dd4a761d", "patch": "@@ -1847,7 +1847,7 @@ hppa[12]*-*-hpux11*)\n \t\tdwarf2=no\n \tfi\n \t;;\n-i[34567]86-*-darwin1[89]* | i[34567]86-*-darwin2[0-9]*)\n+i[34567]86-*-darwin1[89]* | i[34567]86-*-darwin2*)\n \techo \"Error: 32bit target is not supported after Darwin17\" 1>&2\n \t;;\n i[34567]86-*-darwin*)\n@@ -1857,7 +1857,7 @@ i[34567]86-*-darwin*)\n \ttmake_file=\"${tmake_file} ${cpu_type}/t-darwin32-biarch t-slibgcc\"\n \ttm_file=\"${cpu_type}/darwin32-biarch.h ${tm_file} \"\n \t;;\n-x86_64-*-darwin1[89]* | x86_64-*-darwin2[01]*)\n+x86_64-*-darwin1[89]* | x86_64-*-darwin2*)\n \t# Only 64b from now\n \ttm_defines=\"${tm_defines} TARGET_64BIT_DEFAULT=(OPTION_MASK_ISA_64BIT|OPTION_MASK_ABI_64)\"\n \ttm_defines=\"${tm_defines} TARGET_BI_ARCH=0\""}, {"sha": "e459a72f907c9c31b193c8ca86fb5bbb1dbbc91f", "filename": "gcc/config/darwin-driver.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f18cbc1ee1f421a0dd79dc389bef9a23dd4a761d/gcc%2Fconfig%2Fdarwin-driver.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f18cbc1ee1f421a0dd79dc389bef9a23dd4a761d/gcc%2Fconfig%2Fdarwin-driver.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin-driver.c?ref=f18cbc1ee1f421a0dd79dc389bef9a23dd4a761d", "patch": "@@ -64,7 +64,8 @@ validate_macosx_version_min (const char *version_str)\n \n   major = strtoul (version_str, &end, 10);\n \n-  if (major < 10 || major > 12 ) /* macOS 10, 11, and 12 are known. */\n+  /* macOS 10, 11, and 12 are known. clang accepts up to 99.  */\n+  if (major < 10 || major > 99)\n     return NULL;\n \n   /* Skip a separating period, if there's one.  */\n@@ -160,8 +161,7 @@ darwin_find_version_from_kernel (void)\n \n   /* Darwin20 sees a transition to macOS 11.  In this, it seems that the\n      mapping to macOS minor version is now shifted to the kernel minor\n-     version - 1 (at least for the initial releases).  At this stage, we\n-     don't know what macOS version will correspond to Darwin21.  */\n+     version - 1 (at least for the initial releases).  */\n   if (major_vers >= 20)\n     {\n       int minor_vers = *version_p++ - '0';"}, {"sha": "992a9d70092173a4f26529fb8e304ba8156712d1", "filename": "gcc/configure", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f18cbc1ee1f421a0dd79dc389bef9a23dd4a761d/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f18cbc1ee1f421a0dd79dc389bef9a23dd4a761d/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=f18cbc1ee1f421a0dd79dc389bef9a23dd4a761d", "patch": "@@ -26947,7 +26947,7 @@ $as_echo \"$as_me: WARNING: LTO for $target requires binutils >= 2.20.1, but vers\n \t;;\n     esac\n     case $target_os in\n-       darwin2[0-9]* | darwin19*)\n+       darwin2* | darwin19*)\n         { $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler for llvm assembler x86-pad-for-align option\" >&5\n $as_echo_n \"checking assembler for llvm assembler x86-pad-for-align option... \" >&6; }\n if ${gcc_cv_as_mllvm_x86_pad_for_align+:} false; then :"}, {"sha": "0db9c4cb02789057ff8d9d69eb9114d197c4fd08", "filename": "gcc/configure.ac", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f18cbc1ee1f421a0dd79dc389bef9a23dd4a761d/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f18cbc1ee1f421a0dd79dc389bef9a23dd4a761d/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=f18cbc1ee1f421a0dd79dc389bef9a23dd4a761d", "patch": "@@ -4692,7 +4692,7 @@ foo:\tnop\n \t;;\n     esac\n     case $target_os in\n-       darwin2[[0-9]]* | darwin19*)\n+       darwin2* | darwin19*)\n         gcc_GAS_CHECK_FEATURE([llvm assembler x86-pad-for-align option],\n           gcc_cv_as_mllvm_x86_pad_for_align,\n           [-mllvm -x86-pad-for-align=false], [.text],,"}, {"sha": "b6ede31c985ecb22127eca7c48b0c7ddae442469", "filename": "gcc/testsuite/gcc.dg/darwin-minversion-link.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f18cbc1ee1f421a0dd79dc389bef9a23dd4a761d/gcc%2Ftestsuite%2Fgcc.dg%2Fdarwin-minversion-link.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f18cbc1ee1f421a0dd79dc389bef9a23dd4a761d/gcc%2Ftestsuite%2Fgcc.dg%2Fdarwin-minversion-link.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdarwin-minversion-link.c?ref=f18cbc1ee1f421a0dd79dc389bef9a23dd4a761d", "patch": "@@ -15,7 +15,8 @@\n /* { dg-additional-options \"-mmacosx-version-min=010.013.06 -DCHECK=101306\" { target *-*-darwin17* } } */\n /* { dg-additional-options \"-mmacosx-version-min=010.014.05 -DCHECK=101405\" { target *-*-darwin18* } } */\n /* { dg-additional-options \"-mmacosx-version-min=010.015.06 -DCHECK=101506\" { target *-*-darwin19* } } */\n-/* { dg-additional-options \"-mmacosx-version-min=011.000.00 -DCHECK=110000\" { target *-*-darwin20 } } */\n+/* { dg-additional-options \"-mmacosx-version-min=011.000.00 -DCHECK=110000\" { target *-*-darwin20* } } */\n+/* { dg-additional-options \"-mmacosx-version-min=012.000.00 -DCHECK=120000\" { target *-*-darwin21* } } */\n \n int\n main ()"}, {"sha": "27bae630ce801e20a033b289f9a7dbe9b9dcf6b4", "filename": "gcc/testsuite/obj-c++.dg/cxx-ivars-3.mm", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f18cbc1ee1f421a0dd79dc389bef9a23dd4a761d/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fcxx-ivars-3.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f18cbc1ee1f421a0dd79dc389bef9a23dd4a761d/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fcxx-ivars-3.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fcxx-ivars-3.mm?ref=f18cbc1ee1f421a0dd79dc389bef9a23dd4a761d", "patch": "@@ -2,7 +2,7 @@\n \n // { dg-do run { target *-*-darwin* } }\n // { dg-skip-if \"\" { *-*-* } { \"-fgnu-runtime\" } { \"\" } }\n-// { dg-skip-if \"Headers incompatible with 10.4 APIs\" { *-*-darwin1[1-9]* *-*-darwin2[0-9]* } { \"-fnext-runtime\" } { \"\" } }\n+// { dg-skip-if \"Headers incompatible with 10.4 APIs\" { *-*-darwin1[1-9]* *-*-darwin2* } { \"-fnext-runtime\" } { \"\" } }\n // { dg-additional-options \"-fobjc-call-cxx-cdtors -mmacosx-version-min=10.4 -framework Foundation\" }\n // This test has no equivalent or meaning for m64/ABI V2\n // { dg-xfail-run-if \"No Test Avail\" {  *-*-darwin* && lp64 } { \"-fnext-runtime\" } { \"\" } }"}, {"sha": "18f2cbe88690a3718aa43ed3240213101dd34281", "filename": "gcc/testsuite/obj-c++.dg/objc-gc-3.mm", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f18cbc1ee1f421a0dd79dc389bef9a23dd4a761d/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fobjc-gc-3.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f18cbc1ee1f421a0dd79dc389bef9a23dd4a761d/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fobjc-gc-3.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fobjc-gc-3.mm?ref=f18cbc1ee1f421a0dd79dc389bef9a23dd4a761d", "patch": "@@ -3,7 +3,7 @@\n /* Contributed by Ziemowit Laski <zlaski@apple.com>  */\n \n /* { dg-do compile } */\n-/* { dg-skip-if \"GC API is an error from Darwin16.\" { *-*-darwin1[6-9]* *-*-darwin2[0-9]* } { \"-fnext-runtime\" } { \"\" } } */\n+/* { dg-skip-if \"GC API is an error from Darwin16.\" { *-*-darwin1[6-9]* *-*-darwin2* } { \"-fnext-runtime\" } { \"\" } } */\n /* { dg-options \"-fobjc-gc\" } */\n /* { dg-prune-output \"cc1objplus: warning: '-fobjc-gc' is ignored for '-fgnu-runtime'\" } */\n "}, {"sha": "1b2d9674969f50cbd5129d0fc5756dba24b5d0e2", "filename": "gcc/testsuite/objc.dg/objc-gc-4.m", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f18cbc1ee1f421a0dd79dc389bef9a23dd4a761d/gcc%2Ftestsuite%2Fobjc.dg%2Fobjc-gc-4.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f18cbc1ee1f421a0dd79dc389bef9a23dd4a761d/gcc%2Ftestsuite%2Fobjc.dg%2Fobjc-gc-4.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fobjc-gc-4.m?ref=f18cbc1ee1f421a0dd79dc389bef9a23dd4a761d", "patch": "@@ -3,7 +3,7 @@\n /* Contributed by Ziemowit Laski <zlaski@apple.com>  */\n \n /* { dg-do compile } */\n-/* { dg-skip-if \"GC API is an error from Darwin16.\" { *-*-darwin1[6-9]* *-*-darwin2[0-9]* } { \"-fnext-runtime\" } { \"\" } } */\n+/* { dg-skip-if \"GC API is an error from Darwin16.\" { *-*-darwin1[6-9]* *-*-darwin2* } { \"-fnext-runtime\" } { \"\" } } */\n /* { dg-options \"-fobjc-gc\" } */\n /* { dg-prune-output \"cc1obj: warning: '-fobjc-gc' is ignored for '-fgnu-runtime'\" } */\n "}]}