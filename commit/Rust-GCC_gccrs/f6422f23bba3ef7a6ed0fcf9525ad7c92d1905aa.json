{"sha": "f6422f23bba3ef7a6ed0fcf9525ad7c92d1905aa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjY0MjJmMjNiYmEzZWY3YTZlZDBmY2Y5NTI1YWQ3YzkyZDE5MDVhYQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@ucw.cz", "date": "2017-12-08T11:27:28Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2017-12-08T11:27:28Z"}, "message": "re PR tree-optimization/83609 (ICE in read_complex_part at gcc/expr.c:3202)\n\n\n\t* profile-count.c (profile_count::from_gcov_type): Move from\n\tprofile-count.h; handle overflow.\n\t* profile-count. (profile_count::from_gcov_type): Move offline.\n\n\tPR middle-end/83609\n\t* gcc.c-torture/compile/pr83069.c: New testcase.\n\nFrom-SVN: r255507", "tree": {"sha": "04b3b1dbe61a5e583aa434041886ebd77afd6abd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/04b3b1dbe61a5e583aa434041886ebd77afd6abd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f6422f23bba3ef7a6ed0fcf9525ad7c92d1905aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6422f23bba3ef7a6ed0fcf9525ad7c92d1905aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6422f23bba3ef7a6ed0fcf9525ad7c92d1905aa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6422f23bba3ef7a6ed0fcf9525ad7c92d1905aa/comments", "author": null, "committer": null, "parents": [{"sha": "b1cf82933e894cbdb21d63653c20258dc8c87997", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1cf82933e894cbdb21d63653c20258dc8c87997", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1cf82933e894cbdb21d63653c20258dc8c87997"}], "stats": {"total": 61, "additions": 49, "deletions": 12}, "files": [{"sha": "f7fac96d27c12165948c7e53b756fa7ccc697e77", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6422f23bba3ef7a6ed0fcf9525ad7c92d1905aa/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6422f23bba3ef7a6ed0fcf9525ad7c92d1905aa/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f6422f23bba3ef7a6ed0fcf9525ad7c92d1905aa", "patch": "@@ -1,3 +1,10 @@\n+2017-12-08  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\tPR middle-end/83609\n+\t* profile-count.c (profile_count::from_gcov_type): Move from\n+\tprofile-count.h; handle overflow.\n+\t* profile-count.h (profile_count::from_gcov_type): Move offline.\n+\n 2017-12-08  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \tPR rtl-optimization/83304"}, {"sha": "3b106d3f3ca1ef1559f485a0e8b1ce55e54bfff4", "filename": "gcc/profile-count.c", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6422f23bba3ef7a6ed0fcf9525ad7c92d1905aa/gcc%2Fprofile-count.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6422f23bba3ef7a6ed0fcf9525ad7c92d1905aa/gcc%2Fprofile-count.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprofile-count.c?ref=f6422f23bba3ef7a6ed0fcf9525ad7c92d1905aa", "patch": "@@ -327,3 +327,21 @@ profile_count::combine_with_ipa_count (profile_count ipa)\n     return this->global0 ();\n   return this->global0adjusted ();\n }\n+\n+/* The profiling runtime uses gcov_type, which is usually 64bit integer.\n+   Conversions back and forth are used to read the coverage and get it\n+   into internal representation.  */\n+profile_count\n+profile_count::from_gcov_type (gcov_type v)\n+  {\n+    profile_count ret;\n+    gcc_checking_assert (v >= 0);\n+    if (dump_file && v >= (gcov_type)max_count)\n+      fprintf (dump_file,\n+\t       \"Capping gcov count %\" PRId64 \" to max_count %\" PRId64 \"\\n\",\n+\t       (int64_t) v, (int64_t) max_count);\n+    ret.m_val = MIN (v, (gcov_type)max_count);\n+    ret.m_quality = profile_precise;\n+    return ret;\n+  }\n+"}, {"sha": "75456ad3586f0acb417b03038e418e2b472876f1", "filename": "gcc/profile-count.h", "status": "modified", "additions": 5, "deletions": 12, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6422f23bba3ef7a6ed0fcf9525ad7c92d1905aa/gcc%2Fprofile-count.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6422f23bba3ef7a6ed0fcf9525ad7c92d1905aa/gcc%2Fprofile-count.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprofile-count.h?ref=f6422f23bba3ef7a6ed0fcf9525ad7c92d1905aa", "patch": "@@ -667,18 +667,6 @@ class GTY(()) profile_count\n       return c;\n     }\n \n-  /* The profiling runtime uses gcov_type, which is usually 64bit integer.\n-     Conversions back and forth are used to read the coverage and get it\n-     into internal representation.  */\n-  static profile_count from_gcov_type (gcov_type v)\n-    {\n-      profile_count ret;\n-      gcc_checking_assert (v >= 0 && (uint64_t) v <= max_count);\n-      ret.m_val = v;\n-      ret.m_quality = profile_precise;\n-      return ret;\n-    }\n-\n   /* Conversion to gcov_type is lossy.  */\n   gcov_type to_gcov_type () const\n     {\n@@ -1083,6 +1071,11 @@ class GTY(()) profile_count\n      global0.  */\n   profile_count combine_with_ipa_count (profile_count ipa);\n \n+  /* The profiling runtime uses gcov_type, which is usually 64bit integer.\n+     Conversions back and forth are used to read the coverage and get it\n+     into internal representation.  */\n+  static profile_count from_gcov_type (gcov_type v);\n+\n   /* LTO streaming support.  */\n   static profile_count stream_in (struct lto_input_block *);\n   void stream_out (struct output_block *);"}, {"sha": "cae9220a63d770cfb8597bad82141636e91a1332", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6422f23bba3ef7a6ed0fcf9525ad7c92d1905aa/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6422f23bba3ef7a6ed0fcf9525ad7c92d1905aa/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f6422f23bba3ef7a6ed0fcf9525ad7c92d1905aa", "patch": "@@ -1,3 +1,8 @@\n+2017-12-08  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\tPR middle-end/83609\n+\t* gcc.c-torture/compile/pr83069.c: New testcase.\n+\n 2017-12-08  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/81303"}, {"sha": "addb2df765b7d0049a23d212bcfb844c88cd9dc4", "filename": "gcc/testsuite/gcc.c-torture/compile/pr83069.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6422f23bba3ef7a6ed0fcf9525ad7c92d1905aa/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr83069.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6422f23bba3ef7a6ed0fcf9525ad7c92d1905aa/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr83069.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr83069.c?ref=f6422f23bba3ef7a6ed0fcf9525ad7c92d1905aa", "patch": "@@ -0,0 +1,14 @@\n+#define MAX 98\n+\n+void foo (unsigned long *res, unsigned long in)\n+{\n+  for (unsigned long a = 0; a < MAX; a++)\n+    for (unsigned long b = 0; b < MAX; b++)\n+      for (unsigned long c = 0; c < MAX; c++)\n+        for (unsigned long d = 0; d < MAX; d++)\n+          for (unsigned long e = 0; e < MAX; e++)\n+            for (unsigned long f = 0; f < MAX; f++)\n+              for (unsigned long g = 0; g < MAX; g++)\n+                *res += a * in;\n+}\n+"}]}