{"sha": "9dd58aa41c1bde5bce9959c1453af4e790564073", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWRkNThhYTQxYzFiZGU1YmNlOTk1OWMxNDUzYWY0ZTc5MDU2NDA3Mw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2011-10-14T12:05:43Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2011-10-14T12:05:43Z"}, "message": "gimple.c (walk_stmt_load_store_addr_ops): Call visit_addr also on COND_EXPR/VEC_COND_EXPR comparison operands if...\n\n\t* gimple.c (walk_stmt_load_store_addr_ops): Call visit_addr\n\talso on COND_EXPR/VEC_COND_EXPR comparison operands if they are\n\tADDR_EXPRs.\n\nFrom-SVN: r179969", "tree": {"sha": "f3787af36c0768d6230a44b826c991a52ee7c1f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f3787af36c0768d6230a44b826c991a52ee7c1f5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9dd58aa41c1bde5bce9959c1453af4e790564073", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9dd58aa41c1bde5bce9959c1453af4e790564073", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9dd58aa41c1bde5bce9959c1453af4e790564073", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9dd58aa41c1bde5bce9959c1453af4e790564073/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9918dc0f9985b9bf08b81652fd7073826658cdda", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9918dc0f9985b9bf08b81652fd7073826658cdda", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9918dc0f9985b9bf08b81652fd7073826658cdda"}], "stats": {"total": 27, "additions": 24, "deletions": 3}, "files": [{"sha": "c3bc276ce2ec4ab7a9722091c64cddbe22e197df", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9dd58aa41c1bde5bce9959c1453af4e790564073/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9dd58aa41c1bde5bce9959c1453af4e790564073/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9dd58aa41c1bde5bce9959c1453af4e790564073", "patch": "@@ -1,3 +1,9 @@\n+2011-10-14  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* gimple.c (walk_stmt_load_store_addr_ops): Call visit_addr\n+\talso on COND_EXPR/VEC_COND_EXPR comparison operands if they are\n+\tADDR_EXPRs.\n+\n 2011-10-14  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/50723"}, {"sha": "b2874bb071bf30ad6854e3ce467c92d2193deae0", "filename": "gcc/gimple.c", "status": "modified", "additions": 18, "deletions": 3, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9dd58aa41c1bde5bce9959c1453af4e790564073/gcc%2Fgimple.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9dd58aa41c1bde5bce9959c1453af4e790564073/gcc%2Fgimple.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple.c?ref=9dd58aa41c1bde5bce9959c1453af4e790564073", "patch": "@@ -5313,9 +5313,24 @@ walk_stmt_load_store_addr_ops (gimple stmt, void *data,\n \t       || gimple_code (stmt) == GIMPLE_COND))\n     {\n       for (i = 0; i < gimple_num_ops (stmt); ++i)\n-\tif (gimple_op (stmt, i)\n-\t    && TREE_CODE (gimple_op (stmt, i)) == ADDR_EXPR)\n-\t  ret |= visit_addr (stmt, TREE_OPERAND (gimple_op (stmt, i), 0), data);\n+\t{\n+\t  tree op = gimple_op (stmt, i);\n+\t  if (op == NULL_TREE)\n+\t    ;\n+\t  else if (TREE_CODE (op) == ADDR_EXPR)\n+\t    ret |= visit_addr (stmt, TREE_OPERAND (op, 0), data);\n+\t  /* COND_EXPR and VCOND_EXPR rhs1 argument is a comparison\n+\t     tree with two operands.  */\n+\t  else if (i == 1 && COMPARISON_CLASS_P (op))\n+\t    {\n+\t      if (TREE_CODE (TREE_OPERAND (op, 0)) == ADDR_EXPR)\n+\t\tret |= visit_addr (stmt, TREE_OPERAND (TREE_OPERAND (op, 0),\n+\t\t\t\t\t\t       0), data);\n+\t      if (TREE_CODE (TREE_OPERAND (op, 1)) == ADDR_EXPR)\n+\t\tret |= visit_addr (stmt, TREE_OPERAND (TREE_OPERAND (op, 1),\n+\t\t\t\t\t\t       0), data);\n+\t    }\n+\t}\n     }\n   else if (is_gimple_call (stmt))\n     {"}]}