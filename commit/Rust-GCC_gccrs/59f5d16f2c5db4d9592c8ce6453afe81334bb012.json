{"sha": "59f5d16f2c5db4d9592c8ce6453afe81334bb012", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTlmNWQxNmYyYzVkYjRkOTU5MmM4Y2U2NDUzYWZlODEzMzRiYjAxMg==", "commit": {"author": {"name": "Richard Earnshaw", "email": "rearnsha@arm.com", "date": "2021-04-28T16:56:38Z"}, "committer": {"name": "Richard Earnshaw", "email": "rearnsha@arm.com", "date": "2021-04-28T16:57:57Z"}, "message": "arm: fix UB due to missing mode check [PR100311]\n\nSome places in the compiler iterate over all the fixed registers to\ncheck if that register can be used in a particular mode.  The idiom is\nto iterate over the register and then for that register, if it\nsupports the current mode to check all that register and any\nadditional registers needed (HARD_REGNO_NREGS).  If these two checks\nare not fully aligned then it is possible to generate a buffer overrun\nwhen testing data objects that are sized by the number of hard regs in\nthe machine.\n\nThe VPR register is a case where these checks were not consistent and\nbecause this is the last HARD register the result was that we ended up\noverflowing the fixed_regs array.\n\ngcc:\n\tPR target/100311\n\t* config/arm/arm.c (arm_hard_regno_mode_ok): Only allow VPR to be\n\tused in HImode.", "tree": {"sha": "47b62070c12fbc35ac55ffe999332019798075d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/47b62070c12fbc35ac55ffe999332019798075d5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/59f5d16f2c5db4d9592c8ce6453afe81334bb012", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59f5d16f2c5db4d9592c8ce6453afe81334bb012", "html_url": "https://github.com/Rust-GCC/gccrs/commit/59f5d16f2c5db4d9592c8ce6453afe81334bb012", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59f5d16f2c5db4d9592c8ce6453afe81334bb012/comments", "author": null, "committer": null, "parents": [{"sha": "e1543e694dadf1ea70eb72325219bc0cdc914a35", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1543e694dadf1ea70eb72325219bc0cdc914a35", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e1543e694dadf1ea70eb72325219bc0cdc914a35"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "0371d9818fd83512113ed4f46742979cc016b516", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59f5d16f2c5db4d9592c8ce6453afe81334bb012/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59f5d16f2c5db4d9592c8ce6453afe81334bb012/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=59f5d16f2c5db4d9592c8ce6453afe81334bb012", "patch": "@@ -25269,7 +25269,7 @@ arm_hard_regno_mode_ok (unsigned int regno, machine_mode mode)\n     return false;\n \n   if (IS_VPR_REGNUM (regno))\n-    return true;\n+    return mode == HImode;\n \n   if (TARGET_THUMB1)\n     /* For the Thumb we only allow values bigger than SImode in"}]}