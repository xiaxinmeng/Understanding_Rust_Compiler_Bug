{"sha": "ac447f256bc7c31c7f9b034048b5fb62183fca52", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWM0NDdmMjU2YmM3YzMxYzdmOWIwMzQwNDhiNWZiNjIxODNmY2E1Mg==", "commit": {"author": {"name": "Nick Clifton", "email": "nickc@redhat.com", "date": "2010-02-15T15:44:39Z"}, "committer": {"name": "Nick Clifton", "email": "nickc@gcc.gnu.org", "date": "2010-02-15T15:44:39Z"}, "message": "h8300.c: (h8300_push_pop): Use bool type for boolean parameters.\n\n        * config/h8300/h8300.c: (h8300_push_pop): Use bool type for\n        boolean parameters.  Use emit_jump_insn when emitting a pop\n        instruction containing a return insn.\n        (push): Use 'true' rather than '1' as second parameter to F.\n        (h8300_expand_prologue): Likewise.\n        Use 'true' and 'false' for boolean parameters to\n        h8300_push_pop.\n        (h8300_expand_epilogue): Likewise.\n\nFrom-SVN: r156774", "tree": {"sha": "e2f61f60d78bc9721963f14bffe92a3bd40a2064", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e2f61f60d78bc9721963f14bffe92a3bd40a2064"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ac447f256bc7c31c7f9b034048b5fb62183fca52", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac447f256bc7c31c7f9b034048b5fb62183fca52", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac447f256bc7c31c7f9b034048b5fb62183fca52", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac447f256bc7c31c7f9b034048b5fb62183fca52/comments", "author": {"login": "nickclifton", "id": 31441682, "node_id": "MDQ6VXNlcjMxNDQxNjgy", "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nickclifton", "html_url": "https://github.com/nickclifton", "followers_url": "https://api.github.com/users/nickclifton/followers", "following_url": "https://api.github.com/users/nickclifton/following{/other_user}", "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}", "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions", "organizations_url": "https://api.github.com/users/nickclifton/orgs", "repos_url": "https://api.github.com/users/nickclifton/repos", "events_url": "https://api.github.com/users/nickclifton/events{/privacy}", "received_events_url": "https://api.github.com/users/nickclifton/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "694d3cfd6027342090cd48a5251ccaaa19af05cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/694d3cfd6027342090cd48a5251ccaaa19af05cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/694d3cfd6027342090cd48a5251ccaaa19af05cf"}], "stats": {"total": 33, "additions": 24, "deletions": 9}, "files": [{"sha": "72c02ef4a8ad3c32de496e0a005cf32f8c3e7427", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac447f256bc7c31c7f9b034048b5fb62183fca52/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac447f256bc7c31c7f9b034048b5fb62183fca52/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ac447f256bc7c31c7f9b034048b5fb62183fca52", "patch": "@@ -1,3 +1,14 @@\n+2010-02-15  Nick Clifton  <nickc@redhat.com>\n+\n+\t* config/h8300/h8300.c: (h8300_push_pop): Use bool type for\n+\tboolean parameters.  Use emit_jump_insn when emitting a pop\n+\tinstruction containing a return insn.\n+        (push): Use 'true' rather than '1' as second parameter to F.\n+        (h8300_expand_prologue): Likewise.\n+        Use 'true' and 'false' for boolean parameters to\n+\th8300_push_pop.\n+        (h8300_expand_epilogue): Likewise.\n+\n 2010-02-15  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/43068"}, {"sha": "7df015cf33c1aea1496a6cd33452278539aaf711", "filename": "gcc/config/h8300/h8300.c", "status": "modified", "additions": 13, "deletions": 9, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac447f256bc7c31c7f9b034048b5fb62183fca52/gcc%2Fconfig%2Fh8300%2Fh8300.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac447f256bc7c31c7f9b034048b5fb62183fca52/gcc%2Fconfig%2Fh8300%2Fh8300.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.c?ref=ac447f256bc7c31c7f9b034048b5fb62183fca52", "patch": "@@ -98,7 +98,7 @@ static void h8300_asm_named_section (const char *, unsigned int, tree);\n #endif\n static int h8300_and_costs (rtx);\n static int h8300_shift_costs (rtx);\n-static void          h8300_push_pop               (int, int, int, int);\n+static void          h8300_push_pop               (int, int, bool, bool);\n static int           h8300_stack_offset_p         (rtx, int);\n static int           h8300_ldm_stm_regno          (rtx, int, int, int);\n static void          h8300_reorg                  (void);\n@@ -623,7 +623,7 @@ push (int rn)\n     x = gen_push_h8300hs_advanced (reg);\n   else\n     x = gen_push_h8300hs_normal (reg);\n-  x = F (emit_insn (x), 1);\n+  x = F (emit_insn (x), true);\n   REG_NOTES (x) = gen_rtx_EXPR_LIST (REG_INC, stack_pointer_rtx, 0);\n }\n \n@@ -662,7 +662,7 @@ pop (int rn)\n \t(set sp (plus sp (const_int adjust)))]  */\n \n static void\n-h8300_push_pop (int regno, int nregs, int pop_p, int return_p)\n+h8300_push_pop (int regno, int nregs, bool pop_p, bool return_p)\n {\n   int i, j;\n   rtvec vec;\n@@ -680,7 +680,7 @@ h8300_push_pop (int regno, int nregs, int pop_p, int return_p)\n \n   /* We need one element for the return insn, if present, one for each\n      register, and one for stack adjustment.  */\n-  vec = rtvec_alloc ((return_p != 0) + nregs + 1);\n+  vec = rtvec_alloc ((return_p ? 1 : 0) + nregs + 1);\n   sp = stack_pointer_rtx;\n   i = 0;\n \n@@ -720,7 +720,11 @@ h8300_push_pop (int regno, int nregs, int pop_p, int return_p)\n   x = gen_rtx_PARALLEL (VOIDmode, vec);\n   if (!pop_p)\n     x = Fpa (x);\n-  emit_insn (x);\n+\n+  if (return_p)\n+    emit_jump_insn (x);\n+  else\n+    emit_insn (x);\n }\n \n /* Return true if X has the value sp + OFFSET.  */\n@@ -855,7 +859,7 @@ h8300_expand_prologue (void)\n     {\n       /* Push fp.  */\n       push (HARD_FRAME_POINTER_REGNUM);\n-      F (emit_move_insn (hard_frame_pointer_rtx, stack_pointer_rtx), 1);\n+      F (emit_move_insn (hard_frame_pointer_rtx, stack_pointer_rtx), true);\n     }\n \n   /* Push the rest of the registers in ascending order.  */\n@@ -881,7 +885,7 @@ h8300_expand_prologue (void)\n \t\tn_regs = 2;\n \t    }\n \n-\t  h8300_push_pop (regno, n_regs, 0, 0);\n+\t  h8300_push_pop (regno, n_regs, false, false);\n \t}\n     }\n \n@@ -954,7 +958,7 @@ h8300_expand_epilogue (void)\n \t      && (saved_regs & ((1 << (regno - n_regs + 1)) - 1)) == 0)\n \t    returned_p = true;\n \n-\t  h8300_push_pop (regno - n_regs + 1, n_regs, 1, returned_p);\n+\t  h8300_push_pop (regno - n_regs + 1, n_regs, true, returned_p);\n \t}\n     }\n \n@@ -963,7 +967,7 @@ h8300_expand_epilogue (void)\n     {\n       if (TARGET_H8300SX)\n \treturned_p = true;\n-      h8300_push_pop (HARD_FRAME_POINTER_REGNUM, 1, 1, returned_p);\n+      h8300_push_pop (HARD_FRAME_POINTER_REGNUM, 1, true, returned_p);\n     }\n \n   if (!returned_p)"}]}