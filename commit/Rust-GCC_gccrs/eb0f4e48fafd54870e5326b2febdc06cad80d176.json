{"sha": "eb0f4e48fafd54870e5326b2febdc06cad80d176", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWIwZjRlNDhmYWZkNTQ4NzBlNTMyNmIyZmViZGMwNmNhZDgwZDE3Ng==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2019-05-27T11:04:48Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2019-05-27T11:04:48Z"}, "message": "trans.c (Identifier_to_gnu): Minor tweaks.\n\n\t* gcc-interface/trans.c (Identifier_to_gnu): Minor tweaks.\n\t(gnat_to_gnu): Do not convert the result if it is a reference to an\n\tunconstrained array used as the prefix of an attribute reference that\n\trequires an lvalue.\n\nFrom-SVN: r271653", "tree": {"sha": "b3cf46ccce97e35b97f57665b20763126493a7e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b3cf46ccce97e35b97f57665b20763126493a7e5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eb0f4e48fafd54870e5326b2febdc06cad80d176", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb0f4e48fafd54870e5326b2febdc06cad80d176", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb0f4e48fafd54870e5326b2febdc06cad80d176", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb0f4e48fafd54870e5326b2febdc06cad80d176/comments", "author": null, "committer": null, "parents": [{"sha": "00e7f01dc47892361aa865714e84872745c691ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00e7f01dc47892361aa865714e84872745c691ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/00e7f01dc47892361aa865714e84872745c691ec"}], "stats": {"total": 59, "additions": 52, "deletions": 7}, "files": [{"sha": "fc08a02a4f8228e94e655d0942ba486251e5e999", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb0f4e48fafd54870e5326b2febdc06cad80d176/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb0f4e48fafd54870e5326b2febdc06cad80d176/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=eb0f4e48fafd54870e5326b2febdc06cad80d176", "patch": "@@ -1,3 +1,10 @@\n+2019-05-27  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/trans.c (Identifier_to_gnu): Minor tweaks.\n+\t(gnat_to_gnu): Do not convert the result if it is a reference to an\n+\tunconstrained array used as the prefix of an attribute reference that\n+\trequires an lvalue.\n+\n 2019-05-27  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/trans.c (Gigi_Types_Compatible): New predicate."}, {"sha": "2efc800d60eb94b0625c5846b96b9246273b9bf8", "filename": "gcc/ada/gcc-interface/trans.c", "status": "modified", "additions": 18, "deletions": 7, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb0f4e48fafd54870e5326b2febdc06cad80d176/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb0f4e48fafd54870e5326b2febdc06cad80d176/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Ftrans.c?ref=eb0f4e48fafd54870e5326b2febdc06cad80d176", "patch": "@@ -1110,11 +1110,12 @@ Identifier_to_gnu (Node_Id gnat_node, tree *gnu_result_type_p)\n     }\n   else\n     {\n-      /* We want to use the Actual_Subtype if it has already been elaborated,\n-\t otherwise the Etype.  Avoid using Actual_Subtype for packed arrays to\n-\t simplify things.  */\n+      /* We use the Actual_Subtype only if it has already been elaborated,\n+\t as we may be invoked precisely during its elaboration, otherwise\n+\t the Etype.  Avoid using it for packed arrays to simplify things.  */\n       if ((Ekind (gnat_entity) == E_Constant\n-\t   || Ekind (gnat_entity) == E_Variable || Is_Formal (gnat_entity))\n+\t   || Ekind (gnat_entity) == E_Variable\n+\t   || Is_Formal (gnat_entity))\n \t  && !(Is_Array_Type (Etype (gnat_entity))\n \t       && Present (Packed_Array_Impl_Type (Etype (gnat_entity))))\n \t  && Present (Actual_Subtype (gnat_entity))\n@@ -8685,7 +8686,11 @@ gnat_to_gnu (Node_Id gnat_node)\n \t  declaration, return the result unmodified because we want to use the\n \t  return slot optimization in this case.\n \n-       5. Finally, if the type of the result is already correct.  */\n+       5. If this is a reference to an unconstrained array which is used as the\n+\t  prefix of an attribute reference that requires an lvalue, return the\n+\t  result unmodified because we want return the original bounds.\n+\n+       6. Finally, if the type of the result is already correct.  */\n \n   if (Present (Parent (gnat_node))\n       && (lhs_or_actual_p (gnat_node)\n@@ -8734,13 +8739,19 @@ gnat_to_gnu (Node_Id gnat_node)\n   else if (gnu_result == error_mark_node || gnu_result_type == void_type_node)\n     gnu_result = error_mark_node;\n \n-  else if (Present (Parent (gnat_node))\n+  else if (TREE_CODE (gnu_result) == CALL_EXPR\n+\t   && Present (Parent (gnat_node))\n \t   && (Nkind (Parent (gnat_node)) == N_Object_Declaration\n \t       || Nkind (Parent (gnat_node)) == N_Object_Renaming_Declaration)\n-\t   && TREE_CODE (gnu_result) == CALL_EXPR\n \t   && return_type_with_variable_size_p (TREE_TYPE (gnu_result)))\n     ;\n \n+  else if (TREE_CODE (gnu_result) == UNCONSTRAINED_ARRAY_REF\n+\t   && Present (Parent (gnat_node))\n+\t   && Nkind (Parent (gnat_node)) == N_Attribute_Reference\n+\t   && lvalue_required_for_attribute_p (Parent (gnat_node)))\n+    ;\n+\n   else if (TREE_TYPE (gnu_result) != gnu_result_type)\n     gnu_result = convert (gnu_result_type, gnu_result);\n "}, {"sha": "56084cc83f35e51645b8b0d8580812d994c8ff38", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb0f4e48fafd54870e5326b2febdc06cad80d176/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb0f4e48fafd54870e5326b2febdc06cad80d176/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=eb0f4e48fafd54870e5326b2febdc06cad80d176", "patch": "@@ -1,3 +1,7 @@\n+2019-05-27  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/aliased2.adb: New test.\n+\n 2019-05-27  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gnat.dg/limited_with7.ad[sb]: New test."}, {"sha": "0e1adacd8981e617407ce777826698a4484468b5", "filename": "gcc/testsuite/gnat.dg/aliased2.adb", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb0f4e48fafd54870e5326b2febdc06cad80d176/gcc%2Ftestsuite%2Fgnat.dg%2Faliased2.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb0f4e48fafd54870e5326b2febdc06cad80d176/gcc%2Ftestsuite%2Fgnat.dg%2Faliased2.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Faliased2.adb?ref=eb0f4e48fafd54870e5326b2febdc06cad80d176", "patch": "@@ -0,0 +1,23 @@\n+-- { dg-do run }\n+\n+procedure Aliased2 is\n+\n+  type Rec is record\n+    Data : access constant String;\n+  end record;\n+\n+  function Get (S : aliased String) return Rec is\n+    R : Rec := (Data => S'Unchecked_Access);\n+  begin\n+    return R;\n+  end;\n+\n+  S : aliased String := \"Hello\";\n+\n+  R : Rec := Get (S);\n+\n+begin\n+  if R.Data'Length /= S'Length then\n+    raise Program_Error;\n+  end if;\n+end;"}]}