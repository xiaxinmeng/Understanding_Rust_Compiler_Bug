{"sha": "d08615f28f4f12a5f633e11a460f9187a54a59af", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDA4NjE1ZjI4ZjRmMTJhNWY2MzNlMTFhNDYwZjkxODdhNTRhNTlhZg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2016-09-15T07:17:45Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2016-09-15T07:17:45Z"}, "message": "re PR tree-optimization/77514 (ICE in VN_INFO_GET, at tree-ssa-sccvn.c:406 w/ -O2 (and above))\n\n2016-09-15  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/77514\n\t* tree-ssa-pre.c (create_expression_by_pieces): Handle garbage\n\tonly forced_stmts sequence.\n\n\t* gcc.dg/torture/pr77514.c: New testcase.\n\nFrom-SVN: r240153", "tree": {"sha": "7a8ca019034d9bf3b7353d34bcac996b3a07b9d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7a8ca019034d9bf3b7353d34bcac996b3a07b9d1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d08615f28f4f12a5f633e11a460f9187a54a59af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d08615f28f4f12a5f633e11a460f9187a54a59af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d08615f28f4f12a5f633e11a460f9187a54a59af", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d08615f28f4f12a5f633e11a460f9187a54a59af/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "46aa019a01e8278b12961c63fb457306e09cf13f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46aa019a01e8278b12961c63fb457306e09cf13f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/46aa019a01e8278b12961c63fb457306e09cf13f"}], "stats": {"total": 48, "additions": 47, "deletions": 1}, "files": [{"sha": "0c74a2caec2e9b41bf181f495cdf3f2428461b2e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d08615f28f4f12a5f633e11a460f9187a54a59af/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d08615f28f4f12a5f633e11a460f9187a54a59af/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d08615f28f4f12a5f633e11a460f9187a54a59af", "patch": "@@ -1,3 +1,9 @@\n+2016-09-15  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/77514\n+\t* tree-ssa-pre.c (create_expression_by_pieces): Handle garbage\n+\tonly forced_stmts sequence.\n+\n 2016-09-15  Kugan Vivekanandarajah  <kuganv@linaro.org>\n \n \t* tree-ssanames.h (FOR_EACH_SSA_NAME): New."}, {"sha": "623a764e339ca8e3a3b7c86860e176ab8595b347", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d08615f28f4f12a5f633e11a460f9187a54a59af/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d08615f28f4f12a5f633e11a460f9187a54a59af/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d08615f28f4f12a5f633e11a460f9187a54a59af", "patch": "@@ -1,3 +1,8 @@\n+2016-09-15  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/77514\n+\t* gcc.dg/torture/pr77514.c: New testcase.\n+\n 2016-09-14  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/77549"}, {"sha": "464841ce364f24d0a7d13ba42bdb6238df70832b", "filename": "gcc/testsuite/gcc.dg/torture/pr77514.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d08615f28f4f12a5f633e11a460f9187a54a59af/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr77514.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d08615f28f4f12a5f633e11a460f9187a54a59af/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr77514.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr77514.c?ref=d08615f28f4f12a5f633e11a460f9187a54a59af", "patch": "@@ -0,0 +1,21 @@\n+/* { dg-do compile } */\n+\n+void\n+m1 (char l0, char e8, int hw)\n+{\n+  char *rs = &l0;\n+\n+yu:\n+  l0 = 1;\n+  while (l0 != 0)\n+    {\n+      l0 = -l0;\n+      l0 += (*rs ^ (l0 &= 1));\n+    }\n+  for (;;)\n+    {\n+      if (hw != 0)\n+\tgoto yu;\n+      rs = &e8;\n+    }\n+}"}, {"sha": "d1fe72cca3f699402fc4e70c435ae692e47f462c", "filename": "gcc/tree-ssa-pre.c", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d08615f28f4f12a5f633e11a460f9187a54a59af/gcc%2Ftree-ssa-pre.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d08615f28f4f12a5f633e11a460f9187a54a59af/gcc%2Ftree-ssa-pre.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-pre.c?ref=d08615f28f4f12a5f633e11a460f9187a54a59af", "patch": "@@ -2879,7 +2879,21 @@ create_expression_by_pieces (basic_block block, pre_expr expr,\n       gimple_seq_discard (forced_stmts);\n       return folded;\n     }\n-\n+  /* Likewise if we simplified to sth not queued for insertion.  */\n+  bool found = false;\n+  gsi = gsi_start (forced_stmts);\n+  for (; !gsi_end_p (gsi); gsi_next (&gsi))\n+    {\n+      gimple *stmt = gsi_stmt (gsi);\n+      tree forcedname = gimple_get_lhs (stmt);\n+      if (forcedname == folded)\n+\tfound = true;\n+    }\n+  if (! found)\n+    {\n+      gimple_seq_discard (forced_stmts);\n+      return folded;\n+    }\n   gcc_assert (TREE_CODE (folded) == SSA_NAME);\n \n   /* If we have any intermediate expressions to the value sets, add them"}]}