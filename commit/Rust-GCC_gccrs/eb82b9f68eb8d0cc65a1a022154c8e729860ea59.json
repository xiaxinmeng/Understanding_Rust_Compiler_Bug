{"sha": "eb82b9f68eb8d0cc65a1a022154c8e729860ea59", "node_id": "C_kwDOANBUbNoAKGViODJiOWY2OGViOGQwY2M2NWExYTAyMjE1NGM4ZTcyOTg2MGVhNTk", "commit": {"author": {"name": "Andrew MacLeod", "email": "amacleod@redhat.com", "date": "2022-09-21T13:29:40Z"}, "committer": {"name": "Andrew MacLeod", "email": "amacleod@redhat.com", "date": "2022-09-22T18:48:29Z"}, "message": "Convert CFN_BUILT_IN_SIGNBIT to range-ops.\n\n\t* gimple-range-fold.cc (range_of_builtin_int_call): Remove case\n\tfor CFN_BUILT_IN_SIGNBIT.\n\t* gimple-range-op.cc (class cfn_signbit): New.\n\t(gimple_range_op_handler::maybe_builtin_call): Set arguments.", "tree": {"sha": "47ff8f19112fb98c89842dc55090fcc66cfe9cca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/47ff8f19112fb98c89842dc55090fcc66cfe9cca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eb82b9f68eb8d0cc65a1a022154c8e729860ea59", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb82b9f68eb8d0cc65a1a022154c8e729860ea59", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb82b9f68eb8d0cc65a1a022154c8e729860ea59", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb82b9f68eb8d0cc65a1a022154c8e729860ea59/comments", "author": null, "committer": null, "parents": [{"sha": "b40b3035879cf695b72010858b9705a344292bdb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b40b3035879cf695b72010858b9705a344292bdb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b40b3035879cf695b72010858b9705a344292bdb"}], "stats": {"total": 47, "additions": 27, "deletions": 20}, "files": [{"sha": "417a925ac9fac78e8960f0c60eb8ab6d7d6fa636", "filename": "gcc/gimple-range-fold.cc", "status": "modified", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb82b9f68eb8d0cc65a1a022154c8e729860ea59/gcc%2Fgimple-range-fold.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb82b9f68eb8d0cc65a1a022154c8e729860ea59/gcc%2Fgimple-range-fold.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-range-fold.cc?ref=eb82b9f68eb8d0cc65a1a022154c8e729860ea59", "patch": "@@ -944,26 +944,6 @@ fold_using_range::range_of_builtin_int_call (irange &r, gcall *call,\n \n   switch (func)\n     {\n-    case CFN_BUILT_IN_SIGNBIT:\n-      {\n-\targ = gimple_call_arg (call, 0);\n-\tfrange tmp;\n-\tif (src.get_operand (tmp, arg))\n-\t  {\n-\t    bool signbit;\n-\t    if (tmp.signbit_p (signbit))\n-\t      {\n-\t\tif (signbit)\n-\t\t  r.set_nonzero (type);\n-\t\telse\n-\t\t  r.set_zero (type);\n-\t\treturn true;\n-\t      }\n-\t    return false;\n-\t  }\n-\tbreak;\n-      }\n-\n     case CFN_BUILT_IN_TOUPPER:\n       {\n \targ = gimple_call_arg (call, 0);"}, {"sha": "d62dff5f92eb9a681f553ba98423b85040736fe0", "filename": "gcc/gimple-range-op.cc", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb82b9f68eb8d0cc65a1a022154c8e729860ea59/gcc%2Fgimple-range-op.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb82b9f68eb8d0cc65a1a022154c8e729860ea59/gcc%2Fgimple-range-op.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-range-op.cc?ref=eb82b9f68eb8d0cc65a1a022154c8e729860ea59", "patch": "@@ -301,6 +301,27 @@ class cfn_constant_p : public range_operator\n   }\n } op_cfn_constant_p;\n \n+// Implement range operator for CFN_BUILT_IN_SIGNBIT.\n+class cfn_signbit : public range_operator_float\n+{\n+public:\n+  using range_operator_float::fold_range;\n+  virtual bool fold_range (irange &r, tree type, const frange &lh,\n+\t\t\t   const irange &, relation_kind) const\n+  {\n+    bool signbit;\n+    if (lh.signbit_p (signbit))\n+      {\n+\tif (signbit)\n+\t  r.set_nonzero (type);\n+\telse\n+\t  r.set_zero (type);\n+\treturn true;\n+      }\n+   return false;\n+  }\n+} op_cfn_signbit;\n+\n // Set up a gimple_range_op_handler for any built in function which can be\n // supported via range-ops.\n \n@@ -331,6 +352,12 @@ gimple_range_op_handler::maybe_builtin_call ()\n \tm_valid = false;\n       break;\n \n+    case CFN_BUILT_IN_SIGNBIT:\n+      m_op1 = gimple_call_arg (call, 0);\n+      m_float = &op_cfn_signbit;\n+      m_valid = true;\n+      break;\n+\n     default:\n       break;\n     }"}]}