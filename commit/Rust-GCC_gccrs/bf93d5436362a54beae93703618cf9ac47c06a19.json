{"sha": "bf93d5436362a54beae93703618cf9ac47c06a19", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmY5M2Q1NDM2MzYyYTU0YmVhZTkzNzAzNjE4Y2Y5YWM0N2MwNmExOQ==", "commit": {"author": {"name": "Andreas Tobler", "email": "andreast@gcc.gnu.org", "date": "2016-01-14T20:27:49Z"}, "committer": {"name": "Andreas Tobler", "email": "andreast@gcc.gnu.org", "date": "2016-01-14T20:27:49Z"}, "message": "configure.ac: Replace the hard-coded -ldl requirement for link_sanitizer_common with a...\n\n2016-01-14  Andreas Tobler  <andreast@gcc.gnu.org>\n\n    * configure.ac: Replace the hard-coded -ldl requirement for\n    link_sanitizer_common with a configure time check for -ldl.\n    * configure: Regenerate.\n\nFrom-SVN: r232385", "tree": {"sha": "92f1ce1f067dd71e382bc2344c00514b5bb404f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/92f1ce1f067dd71e382bc2344c00514b5bb404f0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bf93d5436362a54beae93703618cf9ac47c06a19", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf93d5436362a54beae93703618cf9ac47c06a19", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf93d5436362a54beae93703618cf9ac47c06a19", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf93d5436362a54beae93703618cf9ac47c06a19/comments", "author": null, "committer": null, "parents": [{"sha": "e6d6ec9e06d6512732941c86464d8c5852928432", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6d6ec9e06d6512732941c86464d8c5852928432", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e6d6ec9e06d6512732941c86464d8c5852928432"}], "stats": {"total": 60, "additions": 56, "deletions": 4}, "files": [{"sha": "5d25590ae7ccc60dce67f16f11e25f8554758336", "filename": "libsanitizer/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf93d5436362a54beae93703618cf9ac47c06a19/libsanitizer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf93d5436362a54beae93703618cf9ac47c06a19/libsanitizer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2FChangeLog?ref=bf93d5436362a54beae93703618cf9ac47c06a19", "patch": "@@ -1,3 +1,9 @@\n+2016-01-14  Andreas Tobler  <andreast@gcc.gnu.org>\n+\n+\t* configure.ac: Replace the hard-coded -ldl requirement for\n+\tlink_sanitizer_common with a configure time check for -ldl.\n+\t* configure: Regenerate.\n+\n 2015-11-24  Maxim Ostapenko  <m.ostapenko@partner.samsung.com>\n \n \t* include/system/linux/asm/ptrace.h: Move to ..."}, {"sha": "040ded0abc60bb27066a25846687a1d1d80c7805", "filename": "libsanitizer/configure", "status": "modified", "additions": 45, "deletions": 3, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf93d5436362a54beae93703618cf9ac47c06a19/libsanitizer%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf93d5436362a54beae93703618cf9ac47c06a19/libsanitizer%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fconfigure?ref=bf93d5436362a54beae93703618cf9ac47c06a19", "patch": "@@ -10000,7 +10000,7 @@ _LT_EOF\n \tif $NM -V 2>&1 | $GREP 'GNU' > /dev/null; then\n \t  export_symbols_cmds='$NM -Bpg $libobjs $convenience | awk '\\''{ if (((\\$ 2 == \"T\") || (\\$ 2 == \"D\") || (\\$ 2 == \"B\") || (\\$ 2 == \"W\")) && (substr(\\$ 3,1,1) != \".\")) { print \\$ 3 } }'\\'' | sort -u > $export_symbols'\n \telse\n-\t  export_symbols_cmds='$NM -BCpg $libobjs $convenience | awk '\\''{ if (((\\$ 2 == \"T\") || (\\$ 2 == \"D\") || (\\$ 2 == \"B\")) && (substr(\\$ 3,1,1) != \".\")) { print \\$ 3 } }'\\'' | sort -u > $export_symbols'\n+\t  export_symbols_cmds='$NM -BCpg $libobjs $convenience | awk '\\''{ if (((\\$ 2 == \"T\") || (\\$ 2 == \"D\") || (\\$ 2 == \"B\") || (\\$ 2 == \"L\")) && (substr(\\$ 3,1,1) != \".\")) { print \\$ 3 } }'\\'' | sort -u > $export_symbols'\n \tfi\n \taix_use_runtimelinking=no\n \n@@ -14486,7 +14486,7 @@ $as_echo_n \"checking whether the $compiler linker ($LD) supports shared librarie\n     if $NM -V 2>&1 | $GREP 'GNU' > /dev/null; then\n       export_symbols_cmds_CXX='$NM -Bpg $libobjs $convenience | awk '\\''{ if (((\\$ 2 == \"T\") || (\\$ 2 == \"D\") || (\\$ 2 == \"B\") || (\\$ 2 == \"W\")) && (substr(\\$ 3,1,1) != \".\")) { print \\$ 3 } }'\\'' | sort -u > $export_symbols'\n     else\n-      export_symbols_cmds_CXX='$NM -BCpg $libobjs $convenience | awk '\\''{ if (((\\$ 2 == \"T\") || (\\$ 2 == \"D\") || (\\$ 2 == \"B\")) && (substr(\\$ 3,1,1) != \".\")) { print \\$ 3 } }'\\'' | sort -u > $export_symbols'\n+      export_symbols_cmds_CXX='$NM -BCpg $libobjs $convenience | awk '\\''{ if (((\\$ 2 == \"T\") || (\\$ 2 == \"D\") || (\\$ 2 == \"B\") || (\\$ 2 == \"L\")) && (substr(\\$ 3,1,1) != \".\")) { print \\$ 3 } }'\\'' | sort -u > $export_symbols'\n     fi\n     ;;\n   pw32*)\n@@ -15515,7 +15515,7 @@ done\n \n \n # Common libraries that we need to link against for all sanitizer libs.\n-link_sanitizer_common='-lpthread -ldl -lm'\n+link_sanitizer_common='-lpthread -lm'\n \n # At least for glibc, shm_open is in librt.  But don't pull that\n # in if it still doesn't give us the function we want.  This\n@@ -15561,6 +15561,48 @@ if test \"x$ac_cv_lib_rt_shm_open\" = x\"\"yes; then :\n fi\n \n \n+# Do a configure time check for -ldl\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for dlsym in -ldl\" >&5\n+$as_echo_n \"checking for dlsym in -ldl... \" >&6; }\n+if test \"${ac_cv_lib_dl_dlsym+set}\" = set; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  ac_check_lib_save_LIBS=$LIBS\n+LIBS=\"-ldl  $LIBS\"\n+cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+/* Override any GCC internal prototype to avoid an error.\n+   Use char because int might match the return type of a GCC\n+   builtin and then its argument prototype would still apply.  */\n+#ifdef __cplusplus\n+extern \"C\"\n+#endif\n+char dlsym ();\n+int\n+main ()\n+{\n+return dlsym ();\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_link \"$LINENO\"; then :\n+  ac_cv_lib_dl_dlsym=yes\n+else\n+  ac_cv_lib_dl_dlsym=no\n+fi\n+rm -f core conftest.err conftest.$ac_objext \\\n+    conftest$ac_exeext conftest.$ac_ext\n+LIBS=$ac_check_lib_save_LIBS\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_dl_dlsym\" >&5\n+$as_echo \"$ac_cv_lib_dl_dlsym\" >&6; }\n+if test \"x$ac_cv_lib_dl_dlsym\" = x\"\"yes; then :\n+  link_sanitizer_common=\"-ldl $link_sanitizer_common\"\n+fi\n+\n+\n # Set up the set of additional libraries that we need to link against for libasan.\n link_libasan=$link_sanitizer_common\n "}, {"sha": "063b1d64c257aafe7927f6e1c4c733c03a10bc27", "filename": "libsanitizer/configure.ac", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf93d5436362a54beae93703618cf9ac47c06a19/libsanitizer%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf93d5436362a54beae93703618cf9ac47c06a19/libsanitizer%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fconfigure.ac?ref=bf93d5436362a54beae93703618cf9ac47c06a19", "patch": "@@ -96,14 +96,18 @@ AM_CONDITIONAL(LSAN_SUPPORTED, [test \"x$LSAN_SUPPORTED\" = \"xyes\"])\n AC_CHECK_FUNCS(clock_getres clock_gettime clock_settime)\n \n # Common libraries that we need to link against for all sanitizer libs.\n-link_sanitizer_common='-lpthread -ldl -lm'\n+link_sanitizer_common='-lpthread -lm'\n \n # At least for glibc, shm_open is in librt.  But don't pull that\n # in if it still doesn't give us the function we want.  This\n # test is copied from libgomp.\n AC_CHECK_LIB(rt, shm_open,\n   [link_sanitizer_common=\"-lrt $link_sanitizer_common\"])\n \n+# Do a configure time check for -ldl\n+AC_CHECK_LIB(dl, dlsym,\n+  [link_sanitizer_common=\"-ldl $link_sanitizer_common\"])\n+\n # Set up the set of additional libraries that we need to link against for libasan.\n link_libasan=$link_sanitizer_common\n AC_SUBST(link_libasan)"}]}