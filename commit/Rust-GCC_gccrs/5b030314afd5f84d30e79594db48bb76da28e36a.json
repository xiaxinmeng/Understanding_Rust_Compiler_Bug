{"sha": "5b030314afd5f84d30e79594db48bb76da28e36a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWIwMzAzMTRhZmQ1Zjg0ZDMwZTc5NTk0ZGI0OGJiNzZkYTI4ZTM2YQ==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2003-07-01T09:00:45Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2003-07-01T09:00:45Z"}, "message": "c-tree.h (define_label): Replace filename and lineno arguments with a location_t.\n\n\t* c-tree.h (define_label): Replace filename and lineno arguments\n\twith a location_t.\n\t* c-decl.c (poplevel): Adjust define_label call.\n\t(pop_label_level): Likewise.\n\t(define_label): Replace filename and lineno arguments with a\n\tlocation_t.\n\t(store_parm_decls): Use DECL_SOURCE_LOCATION.\n\t* c-parse.in (label): Adjust define_label call.\n\n\t* cp/cp-tree.h (define_label): Replace filename and lineno\n\targuments with a location_t.\n\t* cp/decl.c (pop_label): Adjust define_label call.\n\t(define_label): Replace filename and lineno arguments with a\n\tlocation_t.\n\t* cp/semantics.c (finish_label): Adjust define_label call.\n\n\t* java/decl.c (poplevel): Adjust define_label call.\n\nFrom-SVN: r68766", "tree": {"sha": "1ab2a373f3e8ac65651f191c54f58b1023039ddc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1ab2a373f3e8ac65651f191c54f58b1023039ddc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5b030314afd5f84d30e79594db48bb76da28e36a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b030314afd5f84d30e79594db48bb76da28e36a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b030314afd5f84d30e79594db48bb76da28e36a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b030314afd5f84d30e79594db48bb76da28e36a/comments", "author": null, "committer": null, "parents": [{"sha": "c9bdad35171f64bcabad635254fa9f3dfc05a376", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9bdad35171f64bcabad635254fa9f3dfc05a376", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c9bdad35171f64bcabad635254fa9f3dfc05a376"}], "stats": {"total": 66, "additions": 43, "deletions": 23}, "files": [{"sha": "f0272ccae669322b5b20d7271373c382ad746ae0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b030314afd5f84d30e79594db48bb76da28e36a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b030314afd5f84d30e79594db48bb76da28e36a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5b030314afd5f84d30e79594db48bb76da28e36a", "patch": "@@ -1,3 +1,14 @@\n+2003-07-01  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* c-tree.h (define_label): Replace filename and lineno arguments\n+\twith a location_t.\n+\t* c-decl.c (poplevel): Adjust define_label call.\n+\t(pop_label_level): Likewise.\n+\t(define_label): Replace filename and lineno arguments with a\n+\tlocation_t.\n+\t(store_parm_decls): Use DECL_SOURCE_LOCATION.\n+\t* c-parse.in (label): Adjust define_label call.\n+\n 2003-07-01  Neil Booth  <neil@daikokuya.co.uk>\n \n \t* config/sol2.h, config/alpha/alpha.h, config/alpha/linux.h,"}, {"sha": "557438b935ab10caba5f77131e186517a47df708", "filename": "gcc/c-decl.c", "status": "modified", "additions": 7, "deletions": 13, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b030314afd5f84d30e79594db48bb76da28e36a/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b030314afd5f84d30e79594db48bb76da28e36a/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=5b030314afd5f84d30e79594db48bb76da28e36a", "patch": "@@ -607,8 +607,7 @@ poplevel (int keep, int reverse, int functionbody)\n \t    {\n \t      error_with_decl (label, \"label `%s' used but not defined\");\n \t      /* Avoid crashing later.  */\n-\t      define_label (input_filename, input_line,\n-\t\t\t    DECL_NAME (label));\n+\t      define_label (input_location, DECL_NAME (label));\n \t    }\n \t  else if (warn_unused_label && !TREE_USED (label))\n \t    warning_with_decl (label, \"label `%s' defined but not used\");\n@@ -699,8 +698,7 @@ pop_label_level (void)\n \t      error_with_decl (TREE_VALUE (link),\n \t\t\t       \"label `%s' used but not defined\");\n \t      /* Avoid crashing later.  */\n-\t      define_label (input_filename, input_line,\n-\t\t\t    DECL_NAME (TREE_VALUE (link)));\n+\t      define_label (input_location, DECL_NAME (TREE_VALUE (link)));\n \t    }\n \t  else if (warn_unused_label && !TREE_USED (TREE_VALUE (link)))\n \t    warning_with_decl (TREE_VALUE (link),\n@@ -2055,12 +2053,9 @@ shadow_label (tree name)\n    Otherwise return 0.  */\n \n tree\n-define_label (const char* filename, int line, tree name)\n+define_label (location_t location, tree name)\n {\n-  location_t locus;\n   tree decl = lookup_label (name);\n-  locus.file = filename;\n-  locus.line = line;\n \n   /* If label with this name is known from an outer context, shadow it.  */\n   if (decl != 0 && DECL_CONTEXT (decl) != current_function_decl)\n@@ -2072,19 +2067,19 @@ define_label (const char* filename, int line, tree name)\n \n   if (warn_traditional && !in_system_header && lookup_name (name))\n     warning (\"%Htraditional C lacks a separate namespace for labels, \"\n-             \"identifier `%s' conflicts\", &locus, IDENTIFIER_POINTER (name));\n+             \"identifier `%s' conflicts\", &location, IDENTIFIER_POINTER (name));\n \n   if (DECL_INITIAL (decl) != 0)\n     {\n-      error (\"%Hduplicate label `%s'\", &locus, IDENTIFIER_POINTER (name));\n+      error (\"%Hduplicate label `%s'\", &location, IDENTIFIER_POINTER (name));\n       return 0;\n     }\n   else\n     {\n       /* Mark label as having been defined.  */\n       DECL_INITIAL (decl) = error_mark_node;\n       /* Say where in the source.  */\n-      DECL_SOURCE_LOCATION (decl) = locus;\n+      DECL_SOURCE_LOCATION (decl) = location;\n       return decl;\n     }\n }\n@@ -5879,8 +5874,7 @@ store_parm_decls (void)\n \t      found = build_decl (PARM_DECL, TREE_VALUE (parm),\n \t\t\t\t  integer_type_node);\n \t      DECL_ARG_TYPE (found) = TREE_TYPE (found);\n-\t      DECL_SOURCE_LINE (found) = DECL_SOURCE_LINE (fndecl);\n-\t      DECL_SOURCE_FILE (found) = DECL_SOURCE_FILE (fndecl);\n+\t      DECL_SOURCE_LOCATION (found) = DECL_SOURCE_LOCATION (fndecl);\n \t      if (flag_isoc99)\n \t\tpedwarn_with_decl (found, \"type of `%s' defaults to `int'\");\n \t      else if (extra_warnings)"}, {"sha": "d575013848713ccc31e38f2aaf0454fad7d3d8d1", "filename": "gcc/c-parse.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b030314afd5f84d30e79594db48bb76da28e36a/gcc%2Fc-parse.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b030314afd5f84d30e79594db48bb76da28e36a/gcc%2Fc-parse.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-parse.in?ref=5b030314afd5f84d30e79594db48bb76da28e36a", "patch": "@@ -2446,7 +2446,7 @@ label:\t  CASE expr_no_commas ':'\n                 { stmt_count++;\n \t\t  $$ = do_case (NULL_TREE, NULL_TREE); }\n \t| identifier save_location ':' maybe_attribute\n-\t\t{ tree label = define_label ($2.file, $2.line, $1);\n+\t\t{ tree label = define_label ($2, $1);\n \t\t  stmt_count++;\n \t\t  if (label)\n \t\t    {"}, {"sha": "f32eb1196f17b8024243c53866094791b41731e2", "filename": "gcc/c-tree.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b030314afd5f84d30e79594db48bb76da28e36a/gcc%2Fc-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b030314afd5f84d30e79594db48bb76da28e36a/gcc%2Fc-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-tree.h?ref=5b030314afd5f84d30e79594db48bb76da28e36a", "patch": "@@ -189,7 +189,7 @@ extern void check_for_loop_decls (void);\n extern void clear_parm_order (void);\n extern int  complete_array_type (tree, tree, int);\n extern void declare_parm_level (int);\n-extern tree define_label (const char *, int, tree);\n+extern tree define_label (location_t, tree);\n extern void finish_decl (tree, tree, tree);\n extern tree finish_enum (tree, tree, tree);\n extern void finish_function (int, int);"}, {"sha": "3b9601458ff4fb6d4ce199eafb24eee8c4736fd7", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b030314afd5f84d30e79594db48bb76da28e36a/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b030314afd5f84d30e79594db48bb76da28e36a/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=5b030314afd5f84d30e79594db48bb76da28e36a", "patch": "@@ -1,3 +1,12 @@\n+2003-07-01  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* cp-tree.h (define_label): Replace filename and lineno\n+\targuments with a location_t.\n+\t* decl.c (pop_label): Adjust define_label call.\n+\t(define_label): Replace filename and lineno arguments with a\n+\tlocation_t.\n+\t* semantics.c (finish_label): Adjust define_label call.\n+\n 2003-07-01  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/9559"}, {"sha": "aec80b3895cfb51d4128aaaf3052385550544a5d", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b030314afd5f84d30e79594db48bb76da28e36a/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b030314afd5f84d30e79594db48bb76da28e36a/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=5b030314afd5f84d30e79594db48bb76da28e36a", "patch": "@@ -3650,7 +3650,7 @@ extern tree push_using_directive                (tree);\n extern bool push_class_level_binding\t\t(tree, tree);\n extern tree implicitly_declare\t\t\t(tree);\n extern tree declare_local_label                 (tree);\n-extern tree define_label\t\t\t(const char *, int, tree);\n+extern tree define_label\t\t\t(location_t, tree);\n extern void check_goto\t\t\t\t(tree);\n extern void define_case_label\t\t\t(void);\n extern tree namespace_binding                   (tree, tree);"}, {"sha": "24e8f787569f04960b3b62a6efadfc27c82d95c3", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b030314afd5f84d30e79594db48bb76da28e36a/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b030314afd5f84d30e79594db48bb76da28e36a/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=5b030314afd5f84d30e79594db48bb76da28e36a", "patch": "@@ -1175,9 +1175,13 @@ pop_label (tree label, tree old_value)\n     {\n       if (DECL_INITIAL (label) == NULL_TREE)\n \t{\n+\t  location_t location;\n+\n \t  cp_error_at (\"label `%D' used but not defined\", label);\n+ \t  location.file = input_filename;\n+\t  location.line = 0;\n \t  /* Avoid crashing later.  */\n-\t  define_label (input_filename, 1, DECL_NAME (label));\n+\t  define_label (location, DECL_NAME (label));\n \t}\n       else if (warn_unused_label && !TREE_USED (label))\n \tcp_warning_at (\"label `%D' defined but not used\", label);\n@@ -4939,7 +4943,7 @@ check_goto (tree decl)\n    Otherwise return 0.  */\n \n tree\n-define_label (const char* filename, int line, tree name)\n+define_label (location_t location, tree name)\n {\n   tree decl = lookup_label (name);\n   struct named_label_list *ent;\n@@ -4968,8 +4972,7 @@ define_label (const char* filename, int line, tree name)\n       /* Mark label as having been defined.  */\n       DECL_INITIAL (decl) = error_mark_node;\n       /* Say where in the source.  */\n-      DECL_SOURCE_FILE (decl) = filename;\n-      DECL_SOURCE_LINE (decl) = line;\n+      DECL_SOURCE_LOCATION (decl) = location;\n       if (ent)\n \t{\n \t  ent->names_in_scope = current_binding_level->names;"}, {"sha": "a42443b94f65d1d279879ff12df65c1839a54a19", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b030314afd5f84d30e79594db48bb76da28e36a/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b030314afd5f84d30e79594db48bb76da28e36a/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=5b030314afd5f84d30e79594db48bb76da28e36a", "patch": "@@ -1136,7 +1136,7 @@ finish_asm_stmt (tree cv_qualifier,\n tree\n finish_label_stmt (tree name)\n {\n-  tree decl = define_label (input_filename, input_line, name);\n+  tree decl = define_label (input_location, name);\n   return add_stmt (build_stmt (LABEL_STMT, decl));\n }\n "}, {"sha": "2ef46cf369b92c709da9a989a0d8c42072ae8873", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b030314afd5f84d30e79594db48bb76da28e36a/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b030314afd5f84d30e79594db48bb76da28e36a/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=5b030314afd5f84d30e79594db48bb76da28e36a", "patch": "@@ -1,3 +1,7 @@\n+2003-07-01  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* decl.c (poplevel): Adjust define_label call.\n+\n 2003-06-27  Zack Weinberg  <zack@codesourcery.com>\n \n \t* gjavah.c (flag_jni): Make non-static."}, {"sha": "2737463eca005378b4938dc861aeff5aa7d757f6", "filename": "gcc/java/decl.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b030314afd5f84d30e79594db48bb76da28e36a/gcc%2Fjava%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b030314afd5f84d30e79594db48bb76da28e36a/gcc%2Fjava%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fdecl.c?ref=5b030314afd5f84d30e79594db48bb76da28e36a", "patch": "@@ -1366,8 +1366,7 @@ poplevel (int keep, int reverse, int functionbody)\n \t    {\n \t      error_with_decl (label, \"label `%s' used but not defined\");\n \t      /* Avoid crashing later.  */\n-\t      define_label (input_filename, lineno,\n-\t\t\t    DECL_NAME (label));\n+\t      define_label (input_location, DECL_NAME (label));\n \t    }\n \t  else if (warn_unused[UNUSED_LABEL] && !TREE_USED (label))\n \t    warning_with_decl (label, \"label `%s' defined but not used\");"}]}