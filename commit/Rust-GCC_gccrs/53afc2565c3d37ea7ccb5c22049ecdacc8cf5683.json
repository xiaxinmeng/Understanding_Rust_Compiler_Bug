{"sha": "53afc2565c3d37ea7ccb5c22049ecdacc8cf5683", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTNhZmMyNTY1YzNkMzdlYTdjY2I1YzIyMDQ5ZWNkYWNjOGNmNTY4Mw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-12-08T19:33:33Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-12-08T19:33:33Z"}, "message": "(do_include): Don't turn newline markers into spaces when expanding an\ninclude file name.\n\nFrom-SVN: r8629", "tree": {"sha": "2fdece993feb62192de251fb579934040eba107f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2fdece993feb62192de251fb579934040eba107f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/53afc2565c3d37ea7ccb5c22049ecdacc8cf5683", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53afc2565c3d37ea7ccb5c22049ecdacc8cf5683", "html_url": "https://github.com/Rust-GCC/gccrs/commit/53afc2565c3d37ea7ccb5c22049ecdacc8cf5683", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53afc2565c3d37ea7ccb5c22049ecdacc8cf5683/comments", "author": null, "committer": null, "parents": [{"sha": "b6d9014380599b256146987362e5bbbf443d065d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6d9014380599b256146987362e5bbbf443d065d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b6d9014380599b256146987362e5bbbf443d065d"}], "stats": {"total": 29, "additions": 25, "deletions": 4}, "files": [{"sha": "f276193453d0e9d1d8c8b592bd862ba05a5d0cb0", "filename": "gcc/cccp.c", "status": "modified", "additions": 25, "deletions": 4, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53afc2565c3d37ea7ccb5c22049ecdacc8cf5683/gcc%2Fcccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53afc2565c3d37ea7ccb5c22049ecdacc8cf5683/gcc%2Fcccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcccp.c?ref=53afc2565c3d37ea7ccb5c22049ecdacc8cf5683", "patch": "@@ -4061,7 +4061,6 @@ do_include (buf, limit, op, keyword)\n \n   int retried = 0;\t\t/* Have already tried macro\n \t\t\t\t   expanding the include line*/\n-  FILE_BUF trybuf;\t\t/* It got expanded into here */\n   int angle_brackets = 0;\t/* 0 for \"...\", 1 for <...> */\n   int pcf = -1;\n   char *pcfbuf;\n@@ -4198,10 +4197,32 @@ do_include (buf, limit, op, keyword)\n       error (\"`#%s' expects \\\"FILENAME\\\" or <FILENAME>\", keyword->name);\n       return 0;\n     } else {\n-      trybuf = expand_to_temp_buffer (buf, limit, 0, 0);\n+      /* Expand buffer and then remove any newline markers.\n+\t We can't just tell expand_to_temp_buffer to omit the markers,\n+\t since it would put extra spaces in include file names.  */\n+      FILE_BUF trybuf = expand_to_temp_buffer (buf, limit, 1, 0);\n+      U_CHAR *src = trybuf.buf;\n       buf = (U_CHAR *) alloca (trybuf.bufp - trybuf.buf + 1);\n-      bcopy ((char *) trybuf.buf, (char *) buf, trybuf.bufp - trybuf.buf);\n-      limit = buf + (trybuf.bufp - trybuf.buf);\n+      limit = buf;\n+      while (src != trybuf.bufp) {\n+\tswitch ((*limit++ = *src++)) {\n+\t  case '\\n':\n+\t    limit--;\n+\t    src++;\n+\t    break;\n+\n+\t  case '\\'':\n+\t  case '\\\"':\n+\t    {\n+\t      U_CHAR *src1 = skip_quoted_string (src - 1, trybuf.bufp, 0,\n+\t\t\t\t\t\t NULL_PTR, NULL_PTR, NULL_PTR);\n+\t      while (src != src1)\n+\t\t*limit++ = *src++;\n+\t    }\n+\t    break;\n+\t}\n+      }\n+      *limit = 0;\n       free (trybuf.buf);\n       retried++;\n       goto get_filename;"}]}