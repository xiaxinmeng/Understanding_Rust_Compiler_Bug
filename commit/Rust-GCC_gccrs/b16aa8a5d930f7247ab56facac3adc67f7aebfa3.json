{"sha": "b16aa8a5d930f7247ab56facac3adc67f7aebfa3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjE2YWE4YTVkOTMwZjcyNDdhYjU2ZmFjYWMzYWRjNjdmN2FlYmZhMw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@vlsi1.ultra.nyu.edu", "date": "2004-11-29T00:56:58Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2004-11-29T00:56:58Z"}, "message": "gcse.c (insert_store): Error if try to insert store on abnormal edge.\n\n\t* gcse.c (insert_store): Error if try to insert store on abnormal edge.\n\t(store_motion): Don't move store if any edge we'd want to move it\n\tto is abnormal.\n\nFrom-SVN: r91447", "tree": {"sha": "4c0d3a61c11e170df36e960438ad28e74a1ff1f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4c0d3a61c11e170df36e960438ad28e74a1ff1f1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b16aa8a5d930f7247ab56facac3adc67f7aebfa3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b16aa8a5d930f7247ab56facac3adc67f7aebfa3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b16aa8a5d930f7247ab56facac3adc67f7aebfa3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b16aa8a5d930f7247ab56facac3adc67f7aebfa3/comments", "author": null, "committer": null, "parents": [{"sha": "45d8710e5eddf8ff9b12ae8b0081389a7e40683e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45d8710e5eddf8ff9b12ae8b0081389a7e40683e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/45d8710e5eddf8ff9b12ae8b0081389a7e40683e"}], "stats": {"total": 35, "additions": 27, "deletions": 8}, "files": [{"sha": "8724e4c44eb77b0e930f0ec7e7141b2a2906c6e2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b16aa8a5d930f7247ab56facac3adc67f7aebfa3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b16aa8a5d930f7247ab56facac3adc67f7aebfa3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b16aa8a5d930f7247ab56facac3adc67f7aebfa3", "patch": "@@ -1,5 +1,9 @@\n 2004-11-28  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n+\t* gcse.c (insert_store): Error if try to insert store on abnormal edge.\n+\t(store_motion): Don't move store if any edge we'd want to move it\n+\tto is abnormal.\n+\n \t* expr.c (expand_expr_real_1, case ARRAY_REF): Properly fold with\n \tnon-zero lower bound.\n "}, {"sha": "dc3a01f85bcdae2d9cb76687b3d23223b80059f8", "filename": "gcc/gcse.c", "status": "modified", "additions": 23, "deletions": 8, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b16aa8a5d930f7247ab56facac3adc67f7aebfa3/gcc%2Fgcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b16aa8a5d930f7247ab56facac3adc67f7aebfa3/gcc%2Fgcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcse.c?ref=b16aa8a5d930f7247ab56facac3adc67f7aebfa3", "patch": "@@ -4219,7 +4219,7 @@ pre_edge_insert (struct edge_list *edge_list, struct expr **index_map)\n \t\t\t   handling this situation.  This one is easiest for\n \t\t\t   now.  */\n \n-\t\t\tif ((eg->flags & EDGE_ABNORMAL) == EDGE_ABNORMAL)\n+\t\t\tif (eg->flags & EDGE_ABNORMAL)\n \t\t\t  insert_insn_end_bb (index_map[j], bb, 0);\n \t\t\telse\n \t\t\t  {\n@@ -6220,13 +6220,9 @@ insert_store (struct ls_expr * expr, edge e)\n       return 0;\n     }\n \n-  /* We can't insert on this edge, so we'll insert at the head of the\n-     successors block.  See Morgan, sec 10.5.  */\n-  if ((e->flags & EDGE_ABNORMAL) == EDGE_ABNORMAL)\n-    {\n-      insert_insn_start_bb (insn, bb);\n-      return 0;\n-    }\n+  /* We can't put stores in the front of blocks pointed to by abnormal\n+     edges since that may put a store where one didn't used to be.  */\n+  gcc_assert (!(e->flags & EDGE_ABNORMAL));\n \n   insert_insn_on_edge (insn, e);\n \n@@ -6490,6 +6486,25 @@ store_motion (void)\n   /* Now we want to insert the new stores which are going to be needed.  */\n   for (ptr = first_ls_expr (); ptr != NULL; ptr = next_ls_expr (ptr))\n     {\n+      /* If any of the edges we have above are abnormal, we can't move this\n+\t store.  */\n+      for (x = NUM_EDGES (edge_list) - 1; x >= 0; x--)\n+\tif (TEST_BIT (pre_insert_map[x], ptr->index)\n+\t    && (INDEX_EDGE (edge_list, x)->flags & EDGE_ABNORMAL))\n+\t  break;\n+\n+      if (x >= 0)\n+\t{\n+\t  if (gcse_file != NULL)\n+\t    fprintf (gcse_file,\n+\t\t     \"Can't replace store %d: abnormal edge from %d to %d\\n\",\n+\t\t     ptr->index, INDEX_EDGE (edge_list, x)->src->index,\n+\t\t     INDEX_EDGE (edge_list, x)->dest->index);\n+\t  continue;\n+\t}\n+\t\t      \n+      /* Now we want to insert the new stores which are going to be needed.  */\n+\n       FOR_EACH_BB (bb)\n \tif (TEST_BIT (pre_delete_map[bb->index], ptr->index))\n \t  delete_store (ptr, bb);"}]}