{"sha": "24070fcb42eca4e9df8129f9c3ffb3cf71379fa5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjQwNzBmY2I0MmVjYTRlOWRmODEyOWY5YzNmZmIzY2Y3MTM3OWZhNQ==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2009-04-25T21:19:09Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2009-04-25T21:19:09Z"}, "message": "re PR c/39582 (bad errors for some uses of [*] arrays)\n\n\tPR c/39582\n\t* c-typeck.c (c_expr_sizeof_type): Create a C_MAYBE_CONST_EXPR\n\twith non-null C_MAYBE_CONST_EXPR_PRE if size of a variable-length\n\ttype is an integer constant.\n\ntestsuite:\n\t* gcc.dg/vla-20.c: New test.\n\nFrom-SVN: r146787", "tree": {"sha": "8c910c03d4c980b208b9616acc0764a504105241", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8c910c03d4c980b208b9616acc0764a504105241"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/24070fcb42eca4e9df8129f9c3ffb3cf71379fa5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24070fcb42eca4e9df8129f9c3ffb3cf71379fa5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/24070fcb42eca4e9df8129f9c3ffb3cf71379fa5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24070fcb42eca4e9df8129f9c3ffb3cf71379fa5/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "afdb7762cb3eb4f2e14a0fd3a774008f684210e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/afdb7762cb3eb4f2e14a0fd3a774008f684210e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/afdb7762cb3eb4f2e14a0fd3a774008f684210e8"}], "stats": {"total": 38, "additions": 36, "deletions": 2}, "files": [{"sha": "b454cb6efae7c464c27a558a53ee8aab355bf6da", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24070fcb42eca4e9df8129f9c3ffb3cf71379fa5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24070fcb42eca4e9df8129f9c3ffb3cf71379fa5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=24070fcb42eca4e9df8129f9c3ffb3cf71379fa5", "patch": "@@ -1,3 +1,10 @@\n+2009-04-25  Joseph Myers  <joseph@codesourcery.com>\n+\n+\tPR c/39582\n+\t* c-typeck.c (c_expr_sizeof_type): Create a C_MAYBE_CONST_EXPR\n+\twith non-null C_MAYBE_CONST_EXPR_PRE if size of a variable-length\n+\ttype is an integer constant.\n+\n 2009-04-25  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/39897"}, {"sha": "dc7d731ee02e944f8de182cf45f3f73c6bf8ea84", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24070fcb42eca4e9df8129f9c3ffb3cf71379fa5/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24070fcb42eca4e9df8129f9c3ffb3cf71379fa5/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=24070fcb42eca4e9df8129f9c3ffb3cf71379fa5", "patch": "@@ -2391,8 +2391,18 @@ c_expr_sizeof_type (struct c_type_name *t)\n   ret.value = c_sizeof (type);\n   ret.original_code = ERROR_MARK;\n   ret.original_type = NULL;\n-  if (type_expr && c_vla_type_p (type))\n-    {\n+  if ((type_expr || TREE_CODE (ret.value) == INTEGER_CST)\n+      && c_vla_type_p (type))\n+    {\n+      /* If the type is a [*] array, it is a VLA but is represented as\n+\t having a size of zero.  In such a case we must ensure that\n+\t the result of sizeof does not get folded to a constant by\n+\t c_fully_fold, because if the size is evaluated the result is\n+\t not constant and so constraints on zero or negative size\n+\t arrays must not be applied when this sizeof call is inside\n+\t another array declarator.  */\n+      if (!type_expr)\n+\ttype_expr = integer_zero_node;\n       ret.value = build2 (C_MAYBE_CONST_EXPR, TREE_TYPE (ret.value),\n \t\t\t  type_expr, ret.value);\n       C_MAYBE_CONST_EXPR_NON_CONST (ret.value) = !type_expr_const;"}, {"sha": "44c8c1ae91f4f58ab4dc0a480c5d0c5f62585e44", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24070fcb42eca4e9df8129f9c3ffb3cf71379fa5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24070fcb42eca4e9df8129f9c3ffb3cf71379fa5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=24070fcb42eca4e9df8129f9c3ffb3cf71379fa5", "patch": "@@ -1,3 +1,8 @@\n+2009-04-25  Joseph Myers  <joseph@codesourcery.com>\n+\n+\tPR c/39582\n+\t* gcc.dg/vla-20.c: New test.\n+\n 2009-04-25  Joseph Myers  <joseph@codesourcery.com>\n \n \tPR c/39564"}, {"sha": "04d9ee753a33f4fdc9cc9e4694db011ca0e98a52", "filename": "gcc/testsuite/gcc.dg/vla-20.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24070fcb42eca4e9df8129f9c3ffb3cf71379fa5/gcc%2Ftestsuite%2Fgcc.dg%2Fvla-20.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24070fcb42eca4e9df8129f9c3ffb3cf71379fa5/gcc%2Ftestsuite%2Fgcc.dg%2Fvla-20.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvla-20.c?ref=24070fcb42eca4e9df8129f9c3ffb3cf71379fa5", "patch": "@@ -0,0 +1,12 @@\n+/* Test use of sizeof with [*] in type name: should not refer to\n+   zero-size array.  PR 39582.  */\n+/* { dg-do compile } */\n+/* { dg-options \"-std=c99 -pedantic-errors\" } */\n+\n+void foo11d(int x[sizeof(int *[*])]); /* { dg-warning \"not in a declaration\" } */\n+\n+/* Although the size is not constant, it may nevertheless appear in a\n+   constant expression if not evaluated.  */\n+\n+void foo11e(int x[1 ? 0 : sizeof(int *[*])]); /* { dg-warning \"not in a declaration\" } */\n+/* { dg-error \"zero-size array\" \"correct zero size\" { target *-*-* } 11 } */"}]}