{"sha": "aef3a6b297352e3ac17d7588682dbc956861bf58", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWVmM2E2YjI5NzM1MmUzYWMxN2Q3NTg4NjgyZGJjOTU2ODYxYmY1OA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2012-01-23T16:35:31Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2012-01-23T16:35:31Z"}, "message": "re PR c++/51925 (ICE in tsubst with using and template function)\n\n\tPR c++/51925\n\t* class.c (add_method): Set OVL_USED for using-decls.\n\t* tree.c (ovl_scope): New.\n\t* cp-tree.h: Declare it.\n\t* parser.c (cp_parser_template_name): Use it.\n\t* semantics.c (baselink_for_fns): Likewise.\n\t* name-lookup.c (set_inherited_value_binding_p): Likewise.\n\nFrom-SVN: r183438", "tree": {"sha": "7d70f52991e33cb3ff8fc4c0f1dad261445bf079", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7d70f52991e33cb3ff8fc4c0f1dad261445bf079"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aef3a6b297352e3ac17d7588682dbc956861bf58", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aef3a6b297352e3ac17d7588682dbc956861bf58", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aef3a6b297352e3ac17d7588682dbc956861bf58", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aef3a6b297352e3ac17d7588682dbc956861bf58/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5965b617aa6ad71890de872bdbaa6fd0d7aab216", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5965b617aa6ad71890de872bdbaa6fd0d7aab216", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5965b617aa6ad71890de872bdbaa6fd0d7aab216"}], "stats": {"total": 77, "additions": 65, "deletions": 12}, "files": [{"sha": "b6bf88f4caacfb7a5fa36b11ffadb46ac6c09420", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aef3a6b297352e3ac17d7588682dbc956861bf58/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aef3a6b297352e3ac17d7588682dbc956861bf58/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=aef3a6b297352e3ac17d7588682dbc956861bf58", "patch": "@@ -1,3 +1,13 @@\n+2012-01-23  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/51925\n+\t* class.c (add_method): Set OVL_USED for using-decls.\n+\t* tree.c (ovl_scope): New.\n+\t* cp-tree.h: Declare it.\n+\t* parser.c (cp_parser_template_name): Use it.\n+\t* semantics.c (baselink_for_fns): Likewise.\n+\t* name-lookup.c (set_inherited_value_binding_p): Likewise.\n+\n 2012-01-20  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/51402"}, {"sha": "d654b7604c62c8319acd3f0f00698e9ca6eac36f", "filename": "gcc/cp/class.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aef3a6b297352e3ac17d7588682dbc956861bf58/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aef3a6b297352e3ac17d7588682dbc956861bf58/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=aef3a6b297352e3ac17d7588682dbc956861bf58", "patch": "@@ -1118,6 +1118,8 @@ add_method (tree type, tree method, tree using_decl)\n \n   /* Add the new binding.  */\n   overload = build_overload (method, current_fns);\n+  if (using_decl && TREE_CODE (overload) == OVERLOAD)\n+    OVL_USED (overload) = true;\n \n   if (conv_p)\n     TYPE_HAS_CONVERSION (type) = 1;"}, {"sha": "f27755e4cf97ae1e4e00509b319c0b47783345f5", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aef3a6b297352e3ac17d7588682dbc956861bf58/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aef3a6b297352e3ac17d7588682dbc956861bf58/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=aef3a6b297352e3ac17d7588682dbc956861bf58", "patch": "@@ -75,6 +75,7 @@ c-common.h, not after.\n       IMPLICIT_CONV_EXPR_DIRECT_INIT (in IMPLICIT_CONV_EXPR)\n       TRANSACTION_EXPR_IS_STMT (in TRANSACTION_EXPR)\n       CONVERT_EXPR_VBASE_PATH (in CONVERT_EXPR)\n+      OVL_ARG_DEPENDENT (in OVERLOAD)\n    1: IDENTIFIER_VIRTUAL_P (in IDENTIFIER_NODE)\n       TI_PENDING_TEMPLATE_FLAG.\n       TEMPLATE_PARMS_FOR_INLINE.\n@@ -5679,6 +5680,7 @@ extern tree get_fns\t\t\t\t(tree);\n extern tree get_first_fn\t\t\t(tree);\n extern tree ovl_cons\t\t\t\t(tree, tree);\n extern tree build_overload\t\t\t(tree, tree);\n+extern tree ovl_scope\t\t\t\t(tree);\n extern bool non_static_member_function_p        (tree);\n extern const char *cxx_printable_name\t\t(tree, int);\n extern const char *cxx_printable_name_translate\t(tree, int);"}, {"sha": "235134249acfc2dbec4dd943b39c95dae4292d4d", "filename": "gcc/cp/name-lookup.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aef3a6b297352e3ac17d7588682dbc956861bf58/gcc%2Fcp%2Fname-lookup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aef3a6b297352e3ac17d7588682dbc956861bf58/gcc%2Fcp%2Fname-lookup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fname-lookup.c?ref=aef3a6b297352e3ac17d7588682dbc956861bf58", "patch": "@@ -2853,7 +2853,7 @@ set_inherited_value_binding_p (cxx_binding *binding, tree decl,\n       tree context;\n \n       if (TREE_CODE (decl) == OVERLOAD)\n-\tcontext = CP_DECL_CONTEXT (OVL_CURRENT (decl));\n+\tcontext = ovl_scope (decl);\n       else\n \t{\n \t  gcc_assert (DECL_P (decl));"}, {"sha": "491f48e0fcc757d042a9aa910656dc91778c35d4", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aef3a6b297352e3ac17d7588682dbc956861bf58/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aef3a6b297352e3ac17d7588682dbc956861bf58/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=aef3a6b297352e3ac17d7588682dbc956861bf58", "patch": "@@ -12722,7 +12722,7 @@ cp_parser_template_name (cp_parser* parser,\n      its name; we will look it up again during template instantiation.  */\n   if (DECL_FUNCTION_TEMPLATE_P (decl) || !DECL_P (decl))\n     {\n-      tree scope = CP_DECL_CONTEXT (get_first_fn (decl));\n+      tree scope = ovl_scope (decl);\n       if (TYPE_P (scope) && dependent_type_p (scope))\n \treturn identifier;\n     }"}, {"sha": "901996248768f8550a58126d89cbcda0db316c01", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aef3a6b297352e3ac17d7588682dbc956861bf58/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aef3a6b297352e3ac17d7588682dbc956861bf58/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=aef3a6b297352e3ac17d7588682dbc956861bf58", "patch": "@@ -2807,23 +2807,20 @@ finish_base_specifier (tree base, tree access, bool virtual_p)\n tree\n baselink_for_fns (tree fns)\n {\n-  tree fn;\n+  tree scope;\n   tree cl;\n \n   if (BASELINK_P (fns) \n       || error_operand_p (fns))\n     return fns;\n-  \n-  fn = fns;\n-  if (TREE_CODE (fn) == TEMPLATE_ID_EXPR)\n-    fn = TREE_OPERAND (fn, 0);\n-  fn = get_first_fn (fn);\n-  if (!DECL_FUNCTION_MEMBER_P (fn))\n+\n+  scope = ovl_scope (fns);\n+  if (!CLASS_TYPE_P (scope))\n     return fns;\n \n-  cl = currently_open_derived_class (DECL_CONTEXT (fn));\n+  cl = currently_open_derived_class (scope);\n   if (!cl)\n-    cl = DECL_CONTEXT (fn);\n+    cl = scope;\n   cl = TYPE_BINFO (cl);\n   return build_baselink (cl, cl, fns, /*optype=*/NULL_TREE);\n }"}, {"sha": "cf39800b1072dd7f36aace60c7cdf09bc6a82621", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aef3a6b297352e3ac17d7588682dbc956861bf58/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aef3a6b297352e3ac17d7588682dbc956861bf58/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=aef3a6b297352e3ac17d7588682dbc956861bf58", "patch": "@@ -1525,6 +1525,24 @@ build_overload (tree decl, tree chain)\n   return ovl_cons (decl, chain);\n }\n \n+/* Return the scope where the overloaded functions OVL were found.  */\n+\n+tree\n+ovl_scope (tree ovl)\n+{\n+  if (TREE_CODE (ovl) == OFFSET_REF\n+      || TREE_CODE (ovl) == COMPONENT_REF)\n+    ovl = TREE_OPERAND (ovl, 1);\n+  if (TREE_CODE (ovl) == BASELINK)\n+    return BINFO_TYPE (BASELINK_BINFO (ovl));\n+  if (TREE_CODE (ovl) == TEMPLATE_ID_EXPR)\n+    ovl = TREE_OPERAND (ovl, 0);\n+  /* Skip using-declarations.  */\n+  while (TREE_CODE (ovl) == OVERLOAD && OVL_USED (ovl) && OVL_CHAIN (ovl))\n+    ovl = OVL_CHAIN (ovl);\n+  return CP_DECL_CONTEXT (OVL_CURRENT (ovl));\n+}\n+\n /* Return TRUE if FN is a non-static member function, FALSE otherwise.\n    This function looks into BASELINK and OVERLOAD nodes.  */\n "}, {"sha": "6ba32c2b167d74bfb072476f03ed8edaa06647ee", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aef3a6b297352e3ac17d7588682dbc956861bf58/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aef3a6b297352e3ac17d7588682dbc956861bf58/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=aef3a6b297352e3ac17d7588682dbc956861bf58", "patch": "@@ -1,3 +1,9 @@\n+2012-01-22  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/51925\n+\t* g++.dg/template/using20.C: New.\n+\t* g++.dg/template/template-id-2.C: Adjust diagnostic.\n+\n 2012-01-23  Jason Merrill  <jason@redhat.com>\n \n \tPR target/51934"}, {"sha": "d214716cbe14ae235af730e6cd74357eab9325f3", "filename": "gcc/testsuite/g++.dg/template/template-id-2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aef3a6b297352e3ac17d7588682dbc956861bf58/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ftemplate-id-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aef3a6b297352e3ac17d7588682dbc956861bf58/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ftemplate-id-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ftemplate-id-2.C?ref=aef3a6b297352e3ac17d7588682dbc956861bf58", "patch": "@@ -11,7 +11,7 @@ template<> struct A<void>\n     template<typename T> void foo()\n     {\n         A<T> a;\n-        a.template foo<int>();\t// { dg-error \"no member\" }\n+        a.template foo<int>();\t// { dg-error \"member\" }\n     }\n };\n "}, {"sha": "1df9549cd6c8468027af6e4728818b70e97ff4ac", "filename": "gcc/testsuite/g++.dg/template/using20.C", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aef3a6b297352e3ac17d7588682dbc956861bf58/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fusing20.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aef3a6b297352e3ac17d7588682dbc956861bf58/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fusing20.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fusing20.C?ref=aef3a6b297352e3ac17d7588682dbc956861bf58", "patch": "@@ -0,0 +1,18 @@\n+// PR c++/51925\n+\n+struct E\n+{\n+  int e ();\n+};\n+template <typename T1>\n+struct G : public E\n+{\n+  using E::e;\n+  template <int> void e ();\n+  void f () { e <0> (); }\n+};\n+int f(void)\n+{\n+  G<int> a;\n+  a.f();\n+}"}]}