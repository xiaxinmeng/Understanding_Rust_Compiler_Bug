{"sha": "3563212292d643dee54ff75771032ea92fe34e78", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzU2MzIxMjI5MmQ2NDNkZWU1NGZmNzU3NzEwMzJlYTkyZmUzNGU3OA==", "commit": {"author": {"name": "Manuel L\u00f3pez-Ib\u00e1\u00f1ez", "email": "manu@gcc.gnu.org", "date": "2015-09-24T16:37:43Z"}, "committer": {"name": "Manuel L\u00f3pez-Ib\u00e1\u00f1ez", "email": "manu@gcc.gnu.org", "date": "2015-09-24T16:37:43Z"}, "message": "fdiagnostics-color=never does not disable color for some diagnostics\n\nActually, I was trying to reject non-warning options as argument to\n-Werror=. However, the new test fails because -fdiagnostics-color=never is\nalways placed by the driver after the warning options when calling the compiler\nproper. This patch prunes all -fdiagnostics-color from the command-line but the\nlast one, which is moved to the first position.\n\ngcc/ChangeLog:\n\n2015-09-24  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n\n\tPR driver/67640\n\t* opts-common.c (prune_options): Discard all -fdiagnostics-color\n\tbut the last one, which is moved to the front to be processed\n\tfirst.\n\t* opts.c (enable_warning_as_error): Reject options that do not\n\tcontrol warnings.\n\ngcc/testsuite/ChangeLog:\n\n2015-09-24  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n\n\tPR driver/67640\n\t* gcc.dg/Werror-13.c: New test.\n\nFrom-SVN: r228094", "tree": {"sha": "65b1cf01a9ae795a5ecb148e8eac6ed626108fc6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/65b1cf01a9ae795a5ecb148e8eac6ed626108fc6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3563212292d643dee54ff75771032ea92fe34e78", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3563212292d643dee54ff75771032ea92fe34e78", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3563212292d643dee54ff75771032ea92fe34e78", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3563212292d643dee54ff75771032ea92fe34e78/comments", "author": null, "committer": null, "parents": [{"sha": "2af16a7c1e190f54a2d276a1088d39bcc9cbdce4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2af16a7c1e190f54a2d276a1088d39bcc9cbdce4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2af16a7c1e190f54a2d276a1088d39bcc9cbdce4"}], "stats": {"total": 46, "additions": 43, "deletions": 3}, "files": [{"sha": "d0893001b8eb6c9f238eaceeb86686b1de75b30b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3563212292d643dee54ff75771032ea92fe34e78/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3563212292d643dee54ff75771032ea92fe34e78/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3563212292d643dee54ff75771032ea92fe34e78", "patch": "@@ -1,3 +1,12 @@\n+2015-09-24  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n+\n+\tPR driver/67640\n+\t* opts-common.c (prune_options): Discard all -fdiagnostics-color\n+\tbut the last one, which is moved to the front to be processed\n+\tfirst.\n+\t* opts.c (enable_warning_as_error): Reject options that do not\n+\tcontrol warnings.\n+\n 2015-09-24  Jiong Wang  <jiong.wang@arm.com>\n \n \t* config/aarch64/aarch64.c (aarch64_print_operand): Add \"CONST\" support."}, {"sha": "d9bf4d4b897d4f2af7a581172ff0a5bd07a9ebf7", "filename": "gcc/opts-common.c", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3563212292d643dee54ff75771032ea92fe34e78/gcc%2Fopts-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3563212292d643dee54ff75771032ea92fe34e78/gcc%2Fopts-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts-common.c?ref=3563212292d643dee54ff75771032ea92fe34e78", "patch": "@@ -825,6 +825,7 @@ prune_options (struct cl_decoded_option **decoded_options,\n     = XNEWVEC (struct cl_decoded_option, old_decoded_options_count);\n   unsigned int i;\n   const struct cl_option *option;\n+  unsigned int fdiagnostics_color_idx = 0;\n \n   /* Remove arguments which are negated by others after them.  */\n   new_decoded_options_count = 0;\n@@ -844,6 +845,11 @@ prune_options (struct cl_decoded_option **decoded_options,\n \tcase OPT_SPECIAL_input_file:\n \t  goto keep;\n \n+\t/* Do not save OPT_fdiagnostics_color_, just remember the last one.  */\n+\tcase OPT_fdiagnostics_color_:\n+\t  fdiagnostics_color_idx = i;\n+\t  continue;\n+\n \tdefault:\n \t  gcc_assert (opt_idx < cl_options_count);\n \t  option = &cl_options[opt_idx];\n@@ -879,6 +885,17 @@ prune_options (struct cl_decoded_option **decoded_options,\n \t}\n     }\n \n+  if (fdiagnostics_color_idx > 1)\n+    {\n+      /* We put the last -fdiagnostics-color= at the first position\n+\t after argv[0] so it can take effect immediately.  */\n+      memmove (new_decoded_options + 2, new_decoded_options + 1,\n+\t       sizeof (struct cl_decoded_option) \n+\t       * (new_decoded_options_count - 1));\n+      new_decoded_options[1] = old_decoded_options[fdiagnostics_color_idx];\n+      new_decoded_options_count++;\n+    }\n+\n   free (old_decoded_options);\n   new_decoded_options = XRESIZEVEC (struct cl_decoded_option,\n \t\t\t\t    new_decoded_options,"}, {"sha": "b437114d40127f3641b5603b9a02e2afd28cb306", "filename": "gcc/opts.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3563212292d643dee54ff75771032ea92fe34e78/gcc%2Fopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3563212292d643dee54ff75771032ea92fe34e78/gcc%2Fopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.c?ref=3563212292d643dee54ff75771032ea92fe34e78", "patch": "@@ -2359,9 +2359,10 @@ enable_warning_as_error (const char *arg, int value, unsigned int lang_mask,\n   strcpy (new_option + 1, arg);\n   option_index = find_opt (new_option, lang_mask);\n   if (option_index == OPT_SPECIAL_unknown)\n-    {\n-      error_at (loc, \"-Werror=%s: no option -%s\", arg, new_option);\n-    }\n+    error_at (loc, \"-Werror=%s: no option -%s\", arg, new_option);\n+  else if (!(cl_options[option_index].flags & CL_WARNING))\n+    error_at (loc, \"-Werror=%s: -%s is not an option that controls warnings\",\n+\t      arg, new_option);\n   else\n     {\n       const diagnostic_t kind = value ? DK_ERROR : DK_WARNING;"}, {"sha": "de6131bdd2faed7b0447431f6b66243215da3f05", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3563212292d643dee54ff75771032ea92fe34e78/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3563212292d643dee54ff75771032ea92fe34e78/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3563212292d643dee54ff75771032ea92fe34e78", "patch": "@@ -1,3 +1,8 @@\n+2015-09-24  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n+\n+\tPR driver/67640\n+\t* gcc.dg/Werror-13.c: New test.\n+\n 2015-09-24  Szabolcs Nagy  <szabolcs.nagy@arm.com>\n \n \t* gcc.target/aarch64/target_attr_10.c (foo): Use dg-message for note."}, {"sha": "e8aa99261f88185e72d58a3551f0b8cd2bf35359", "filename": "gcc/testsuite/gcc.dg/Werror-13.c", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3563212292d643dee54ff75771032ea92fe34e78/gcc%2Ftestsuite%2Fgcc.dg%2FWerror-13.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3563212292d643dee54ff75771032ea92fe34e78/gcc%2Ftestsuite%2Fgcc.dg%2FWerror-13.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWerror-13.c?ref=3563212292d643dee54ff75771032ea92fe34e78", "patch": "@@ -0,0 +1,8 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-Werror=error -Werror=p, -Werror=l, -Werror=fatal-errors\" } */\n+/* { dg-error \"-Wp, is not an option that controls warnings\" \"\" { target *-*-* } 0 } */\n+/* { dg-error \"-Wl, is not an option that controls warnings\" \"\" { target *-*-* } 0 } */\n+/* { dg-error \"-Werror is not an option that controls warnings\" \"\" { target *-*-* } 0 } */\n+/* { dg-error \"-Wfatal-errors is not an option that controls warnings\" \"\" { target *-*-* } 0 } */\n+\n+int i;"}]}