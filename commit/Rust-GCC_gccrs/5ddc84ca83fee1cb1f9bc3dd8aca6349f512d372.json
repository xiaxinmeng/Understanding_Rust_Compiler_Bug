{"sha": "5ddc84ca83fee1cb1f9bc3dd8aca6349f512d372", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWRkYzg0Y2E4M2ZlZTFjYjFmOWJjM2RkOGFjYTYzNDlmNTEyZDM3Mg==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2015-10-27T09:31:28Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2015-10-27T09:31:28Z"}, "message": "Move powi folds to match.pd\n\nTested on x86_64-linux-gnu, aarch64-linux-gnu and arm-linux-gnueabi.\n\ngcc/\n\t* builtins.c (fold_builtin_powi): Delete.\n\t(fold_builtin_2): Handle constant powi arguments here.\n\t* match.pd: Add rules previously handled by fold_builtin_powi.\n\ngcc/testsuite/\n\t* gcc.dg/builtins-52.c: Add -O to dg-options.\n\nFrom-SVN: r229409", "tree": {"sha": "f75493d242a6b6a9042457f0ad8bea2c2583d172", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f75493d242a6b6a9042457f0ad8bea2c2583d172"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5ddc84ca83fee1cb1f9bc3dd8aca6349f512d372", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ddc84ca83fee1cb1f9bc3dd8aca6349f512d372", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ddc84ca83fee1cb1f9bc3dd8aca6349f512d372", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ddc84ca83fee1cb1f9bc3dd8aca6349f512d372/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b4838d77014a4bb6e9d3cd4a1e31ab303de268b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4838d77014a4bb6e9d3cd4a1e31ab303de268b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b4838d77014a4bb6e9d3cd4a1e31ab303de268b9"}], "stats": {"total": 89, "additions": 40, "deletions": 49}, "files": [{"sha": "5e048d9966034ea6700e33f6888257d6968b7fa9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ddc84ca83fee1cb1f9bc3dd8aca6349f512d372/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ddc84ca83fee1cb1f9bc3dd8aca6349f512d372/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5ddc84ca83fee1cb1f9bc3dd8aca6349f512d372", "patch": "@@ -1,3 +1,9 @@\n+2015-10-27  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* builtins.c (fold_builtin_powi): Delete.\n+\t(fold_builtin_2): Handle constant powi arguments here.\n+\t* match.pd: Add rules previously handled by fold_builtin_powi.\n+\n 2015-10-27  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* builtins.c (fold_builtin_pow): Delete in favor of..."}, {"sha": "3d39d43594becbd6c02cbb6e3d146eac8c0aa787", "filename": "gcc/builtins.c", "status": "modified", "additions": 10, "deletions": 48, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ddc84ca83fee1cb1f9bc3dd8aca6349f512d372/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ddc84ca83fee1cb1f9bc3dd8aca6349f512d372/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=5ddc84ca83fee1cb1f9bc3dd8aca6349f512d372", "patch": "@@ -156,7 +156,6 @@ static tree rewrite_call_expr (location_t, tree, int, tree, int, ...);\n static bool validate_arg (const_tree, enum tree_code code);\n static rtx expand_builtin_fabs (tree, rtx, rtx);\n static rtx expand_builtin_signbit (tree, rtx);\n-static tree fold_builtin_powi (location_t, tree, tree, tree, tree);\n static tree fold_builtin_bitop (tree, tree);\n static tree fold_builtin_strchr (location_t, tree, tree, tree);\n static tree fold_builtin_memchr (location_t, tree, tree, tree, tree);\n@@ -7517,52 +7516,6 @@ fold_const_builtin_pow (tree arg0, tree arg1, tree type)\n   return NULL_TREE;\n }\n \n-/* Fold a builtin function call to powi, powif, or powil with argument ARG.\n-   Return NULL_TREE if no simplification can be made.  */\n-static tree\n-fold_builtin_powi (location_t loc, tree fndecl ATTRIBUTE_UNUSED,\n-\t\t   tree arg0, tree arg1, tree type)\n-{\n-  if (!validate_arg (arg0, REAL_TYPE)\n-      || !validate_arg (arg1, INTEGER_TYPE))\n-    return NULL_TREE;\n-\n-  /* Optimize pow(1.0,y) = 1.0.  */\n-  if (real_onep (arg0))\n-    return omit_one_operand_loc (loc, type, build_real (type, dconst1), arg1);\n-\n-  if (tree_fits_shwi_p (arg1))\n-    {\n-      HOST_WIDE_INT c = tree_to_shwi (arg1);\n-\n-      /* Evaluate powi at compile-time.  */\n-      if (TREE_CODE (arg0) == REAL_CST\n-\t  && !TREE_OVERFLOW (arg0))\n-\t{\n-\t  REAL_VALUE_TYPE x;\n-\t  x = TREE_REAL_CST (arg0);\n-\t  real_powi (&x, TYPE_MODE (type), &x, c);\n-\t  return build_real (type, x);\n-\t}\n-\n-      /* Optimize pow(x,0) = 1.0.  */\n-      if (c == 0)\n-\treturn omit_one_operand_loc (loc, type, build_real (type, dconst1),\n-\t\t\t\t arg0);\n-\n-      /* Optimize pow(x,1) = x.  */\n-      if (c == 1)\n-\treturn arg0;\n-\n-      /* Optimize pow(x,-1) = 1.0/x.  */\n-      if (c == -1)\n-\treturn fold_build2_loc (loc, RDIV_EXPR, type,\n-\t\t\t   build_real (type, dconst1), arg0);\n-    }\n-\n-  return NULL_TREE;\n-}\n-\n /* A subroutine of fold_builtin to fold the various exponent\n    functions.  Return NULL_TREE if no simplification can be made.\n    FUNC is the corresponding MPFR exponent function.  */\n@@ -9379,7 +9332,16 @@ fold_builtin_2 (location_t loc, tree fndecl, tree arg0, tree arg1)\n       return fold_const_builtin_pow (arg0, arg1, type);\n \n     CASE_FLT_FN (BUILT_IN_POWI):\n-      return fold_builtin_powi (loc, fndecl, arg0, arg1, type);\n+      if (TREE_CODE (arg0) == REAL_CST\n+\t  && !TREE_OVERFLOW (arg0)\n+\t  && tree_fits_shwi_p (arg1))\n+\t{\n+\t  HOST_WIDE_INT c = tree_to_shwi (arg1);\n+\t  REAL_VALUE_TYPE x;\n+\t  real_powi (&x, TYPE_MODE (type), TREE_REAL_CST_PTR (arg0), c);\n+\t  return build_real (type, x);\n+\t}\n+      break;\n \n     CASE_FLT_FN (BUILT_IN_COPYSIGN):\n       return fold_builtin_copysign (loc, arg0, arg1, type);"}, {"sha": "1c3331972d604d44ad21c527400740df0e3c7691", "filename": "gcc/match.pd", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ddc84ca83fee1cb1f9bc3dd8aca6349f512d372/gcc%2Fmatch.pd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ddc84ca83fee1cb1f9bc3dd8aca6349f512d372/gcc%2Fmatch.pd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatch.pd?ref=5ddc84ca83fee1cb1f9bc3dd8aca6349f512d372", "patch": "@@ -84,6 +84,7 @@ DEFINE_MATH_FN (LOG10)\n DEFINE_MATH_FN (EXP10)\n DEFINE_MATH_FN (POW)\n DEFINE_MATH_FN (POW10)\n+DEFINE_MATH_FN (POWI)\n DEFINE_MATH_FN (SQRT)\n DEFINE_MATH_FN (CBRT)\n DEFINE_MATH_FN (SIN)\n@@ -2820,6 +2821,24 @@ DEFINE_INT_AND_FLOAT_ROUND_FN (RINT)\n \t     real_equal (value, &tmp)))\n      (cbrts @0))))))\n \n+/* powi(1,x) -> 1.  */\n+(simplify\n+ (POWI real_onep@0 @1)\n+ @0)\n+\n+(simplify\n+ (POWI @0 INTEGER_CST@1)\n+ (switch\n+  /* powi(x,0) -> 1.  */\n+  (if (wi::eq_p (@1, 0))\n+   { build_real (type, dconst1); })\n+  /* powi(x,1) -> x.  */\n+  (if (wi::eq_p (@1, 1))\n+   @0)\n+  /* powi(x,-1) -> 1/x.  */\n+  (if (wi::eq_p (@1, -1))\n+   (rdiv { build_real (type, dconst1); } @0))))\n+\n /* Narrowing of arithmetic and logical operations. \n \n    These are conceptually similar to the transformations performed for"}, {"sha": "8721999bd8f39ec5caf0d036042add009044dee2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ddc84ca83fee1cb1f9bc3dd8aca6349f512d372/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ddc84ca83fee1cb1f9bc3dd8aca6349f512d372/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5ddc84ca83fee1cb1f9bc3dd8aca6349f512d372", "patch": "@@ -1,3 +1,7 @@\n+2015-10-27  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* gcc.dg/builtins-52.c: Add -O to dg-options.\n+\n 2015-10-27  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* gcc.dg/torture/builtin-math-1.c: Skip at -O0."}, {"sha": "1cff017ad9466e1ff958add0003eb02c9e0f027c", "filename": "gcc/testsuite/gcc.dg/builtins-52.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ddc84ca83fee1cb1f9bc3dd8aca6349f512d372/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-52.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ddc84ca83fee1cb1f9bc3dd8aca6349f512d372/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-52.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-52.c?ref=5ddc84ca83fee1cb1f9bc3dd8aca6349f512d372", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do link } */\n-/* { dg-options \"-ffast-math\" } */\n+/* { dg-options \"-O -ffast-math\" } */\n \n extern void link_error(void);\n "}]}