{"sha": "7ac6195704c2c071d24d43f36e292041cf65c9e3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2FjNjE5NTcwNGMyYzA3MWQyNGQ0M2YzNmUyOTIwNDFjZjY1YzllMw==", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2009-05-25T03:07:00Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2009-05-25T03:07:00Z"}, "message": "Dominique Dhumieres\n\n2009-05-24  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n\t    Dominique Dhumieres\n\n\tPR fortran/35732\n\tPR fortran/39872\n\t* trans-array.c (gfc_conv_ss_startstride): Add one to index.\n\t* gfortran.dg/bounds_check_fail_3.f90: New test.\n\t* gfortran.dg/bounds_check_fail_4.f90: New test.\n\t* gfortran.dg/bounds_check_14.f90: Update test.\n\t* gfortran.dg/bound_4.f90: Update test.\n\nFrom-SVN: r147842", "tree": {"sha": "addb86e9ecb9c6288fb90687361d529dbd351acc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/addb86e9ecb9c6288fb90687361d529dbd351acc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7ac6195704c2c071d24d43f36e292041cf65c9e3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ac6195704c2c071d24d43f36e292041cf65c9e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ac6195704c2c071d24d43f36e292041cf65c9e3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ac6195704c2c071d24d43f36e292041cf65c9e3/comments", "author": null, "committer": null, "parents": [{"sha": "ea74392e0926b55a8587c3aa2ea3f92a2ec3529a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea74392e0926b55a8587c3aa2ea3f92a2ec3529a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea74392e0926b55a8587c3aa2ea3f92a2ec3529a"}], "stats": {"total": 55, "additions": 49, "deletions": 6}, "files": [{"sha": "61278ba76bdb822c206711e6d47eb372156c814d", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ac6195704c2c071d24d43f36e292041cf65c9e3/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ac6195704c2c071d24d43f36e292041cf65c9e3/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=7ac6195704c2c071d24d43f36e292041cf65c9e3", "patch": "@@ -1,3 +1,10 @@\n+2009-05-24  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\t    Dominique Dhumieres\n+\n+\tPR fortran/35732\n+\tPR fortran/39872\n+\t* trans-array.c (gfc_conv_ss_startstride): Add one to index.\n+\n 2009-05-22  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n \n \tPR fortran/40195"}, {"sha": "36a99a4b9d1389ee2b442c3c1db9b51e0090b7ca", "filename": "gcc/fortran/trans-array.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ac6195704c2c071d24d43f36e292041cf65c9e3/gcc%2Ffortran%2Ftrans-array.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ac6195704c2c071d24d43f36e292041cf65c9e3/gcc%2Ffortran%2Ftrans-array.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-array.c?ref=7ac6195704c2c071d24d43f36e292041cf65c9e3", "patch": "@@ -3256,6 +3256,8 @@ gfc_conv_ss_startstride (gfc_loopinfo * loop)\n \t\t\t\t info->start[n]);\n \t      tmp = fold_build2 (FLOOR_DIV_EXPR, gfc_array_index_type, tmp,\n \t\t\t\t info->stride[n]);\n+\t      tmp = fold_build2 (PLUS_EXPR, gfc_array_index_type,\n+\t\t\t\t gfc_index_one_node, tmp);\n \t      tmp = fold_build2 (MAX_EXPR, gfc_array_index_type, tmp,\n \t\t\t\t build_int_cst (gfc_array_index_type, 0));\n \t      /* We remember the size of the first section, and check all the"}, {"sha": "e0907db628f0584e935198bfb16e195757b10f66", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ac6195704c2c071d24d43f36e292041cf65c9e3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ac6195704c2c071d24d43f36e292041cf65c9e3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7ac6195704c2c071d24d43f36e292041cf65c9e3", "patch": "@@ -1,3 +1,13 @@\n+2009-05-24  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\t    Dominique Dhumieres\n+\n+\tPR fortran/35732\n+\tPR fortran/39872\n+\t* gfortran.dg/bounds_check_fail_3.f90: New test.\n+\t* gfortran.dg/bounds_check_fail_4.f90: New test.\n+\t* gfortran.dg/bounds_check_14.f90: Update test.\n+\t* gfortran.dg/bound_4.f90: Update test.\n+\n 2009-05-24  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/40233"}, {"sha": "b63ce9ec6a92c71ad83d617ef2ed82d64f984e4b", "filename": "gcc/testsuite/gfortran.dg/bound_4.f90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ac6195704c2c071d24d43f36e292041cf65c9e3/gcc%2Ftestsuite%2Fgfortran.dg%2Fbound_4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ac6195704c2c071d24d43f36e292041cf65c9e3/gcc%2Ftestsuite%2Fgfortran.dg%2Fbound_4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fbound_4.f90?ref=7ac6195704c2c071d24d43f36e292041cf65c9e3", "patch": "@@ -12,14 +12,14 @@ end program test\n \n subroutine ha0020(mf3)\n   implicit none\n-  integer xca(1), xda(1), mf3\n+  integer xca(2), xda(2), mf3\n \n   xca = 1\n   xda = -1\n \n-  xca(1:1) = xda(1:2:mf3)\n+  xca(1:2:-1) = xda(1:2:mf3)\n \n-  if (any (xca /= -1)) call abort\n+  if (any (xca /= 1)) call abort\n   if (any(xda(1:2:mf3) /= xda(1:0))) call abort\n   if (size(xda(1:2:mf3)) /= 0) call abort\n   if (any(shape(xda(1:2:mf3)) /= 0)) call abort"}, {"sha": "1e5a4aeeee32d54d0ee2d063d8768786f4907b89", "filename": "gcc/testsuite/gfortran.dg/bounds_check_14.f90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ac6195704c2c071d24d43f36e292041cf65c9e3/gcc%2Ftestsuite%2Fgfortran.dg%2Fbounds_check_14.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ac6195704c2c071d24d43f36e292041cf65c9e3/gcc%2Ftestsuite%2Fgfortran.dg%2Fbounds_check_14.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fbounds_check_14.f90?ref=7ac6195704c2c071d24d43f36e292041cf65c9e3", "patch": "@@ -13,14 +13,14 @@ end program test\n \n subroutine ha0020(mf3)\n   implicit none\n-  integer xca(1), xda(1), mf3\n+  integer xca(2), xda(2), mf3\n \n   xca = 1\n   xda = -1\n \n-  xca(1:1) = xda(1:2:mf3)\n+  xca(1:2:-1) = xda(1:2:mf3)\n \n-  if (any (xca /= -1)) call abort\n+  if (any (xca /= 1)) call abort\n   if (any(xda(1:2:mf3) /= xda(1:0))) call abort\n   if (size(xda(1:2:mf3)) /= 0) call abort\n   if (any(shape(xda(1:2:mf3)) /= 0)) call abort"}, {"sha": "0826b7d5efcf45bb244eb4666a2f93bb9d46e3ed", "filename": "gcc/testsuite/gfortran.dg/bounds_check_fail_3.f90", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ac6195704c2c071d24d43f36e292041cf65c9e3/gcc%2Ftestsuite%2Fgfortran.dg%2Fbounds_check_fail_3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ac6195704c2c071d24d43f36e292041cf65c9e3/gcc%2Ftestsuite%2Fgfortran.dg%2Fbounds_check_fail_3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fbounds_check_fail_3.f90?ref=7ac6195704c2c071d24d43f36e292041cf65c9e3", "patch": "@@ -0,0 +1,12 @@\n+! { dg-do run }\n+! { dg-options \"-fbounds-check\" }\n+! { dg-shouldfail \"foo\" }\n+  integer x(10), m, n\n+  x = (/ (i, i = 1, 10) /)\n+  m = -3\n+  n = -2\n+  x(7:1:m) = x(6:2:n) \n+  if (any(x /= (/ 2, 2, 3, 4, 5, 6, 6, 8, 9, 10 /))) call abort()\n+  x(8:1:m) = x(5:2:n) \n+  end\n+! { dg-output \"line 10 .* bound mismatch, .* dimension 1 .* array \\'x\\' \\\\\\(3/2\\\\\\)\" }"}, {"sha": "dee3ca8d66ed49ce00664664d4236a9c044f89b9", "filename": "gcc/testsuite/gfortran.dg/bounds_check_fail_4.f90", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ac6195704c2c071d24d43f36e292041cf65c9e3/gcc%2Ftestsuite%2Fgfortran.dg%2Fbounds_check_fail_4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ac6195704c2c071d24d43f36e292041cf65c9e3/gcc%2Ftestsuite%2Fgfortran.dg%2Fbounds_check_fail_4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fbounds_check_fail_4.f90?ref=7ac6195704c2c071d24d43f36e292041cf65c9e3", "patch": "@@ -0,0 +1,12 @@\n+! { dg-do run }\n+! { dg-options \"-fbounds-check\" }\n+! { dg-shouldfail \"foo\" }\n+  integer x(10), m, n\n+  x = (/ (i, i = 1, 10) /)\n+  m = -3\n+  n = -2\n+  x(7:1:m) = x(1:3) + x(6:2:n) \n+  if (any(x /= (/ 5, 2, 3, 6, 5, 6, 7, 8, 9, 10 /))) call abort()\n+  x(8:1:m) = x(1:3) + x(5:2:n) \n+  end\n+! { dg-output \"line 10 .* bound mismatch, .* dimension 1 .* array \\'x\\' \\\\\\(2/3\\\\\\)\" }"}]}