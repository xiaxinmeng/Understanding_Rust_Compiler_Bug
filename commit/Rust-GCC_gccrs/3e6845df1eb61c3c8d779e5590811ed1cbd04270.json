{"sha": "3e6845df1eb61c3c8d779e5590811ed1cbd04270", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2U2ODQ1ZGYxZWI2MWMzYzhkNzc5ZTU1OTA4MTFlZDFjYmQwNDI3MA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2018-06-11T09:18:27Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-06-11T09:18:27Z"}, "message": "[Ada] Minor reformatting\n\n2018-06-11  Arnaud Charlet  <charlet@adacore.com>\n\ngcc/ada/\n\n\t* exp_ch3.adb, exp_unst.adb, inline.adb, sem_prag.adb: Minor\n\treformatting.\n\nFrom-SVN: r261416", "tree": {"sha": "a7ed79694d965dcc33497882de1446115c799cd0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a7ed79694d965dcc33497882de1446115c799cd0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3e6845df1eb61c3c8d779e5590811ed1cbd04270", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e6845df1eb61c3c8d779e5590811ed1cbd04270", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e6845df1eb61c3c8d779e5590811ed1cbd04270", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e6845df1eb61c3c8d779e5590811ed1cbd04270/comments", "author": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "62458cc14370cde6cc48f365532eb53f987a75ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62458cc14370cde6cc48f365532eb53f987a75ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62458cc14370cde6cc48f365532eb53f987a75ea"}], "stats": {"total": 25, "additions": 15, "deletions": 10}, "files": [{"sha": "3314303f62ca81b31c3c53d6b6d4fd49d09842e9", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e6845df1eb61c3c8d779e5590811ed1cbd04270/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e6845df1eb61c3c8d779e5590811ed1cbd04270/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=3e6845df1eb61c3c8d779e5590811ed1cbd04270", "patch": "@@ -1,3 +1,8 @@\n+2018-06-11  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* exp_ch3.adb, exp_unst.adb, inline.adb, sem_prag.adb: Minor\n+\treformatting.\n+\n 2018-06-11  Yannick Moy  <moy@adacore.com>\n \n \t* doc/gnat_rm/implementation_defined_pragmas.rst: Add Suppressible"}, {"sha": "9281896d1312d19e9be986097be48852cc8c3092", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e6845df1eb61c3c8d779e5590811ed1cbd04270/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e6845df1eb61c3c8d779e5590811ed1cbd04270/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=3e6845df1eb61c3c8d779e5590811ed1cbd04270", "patch": "@@ -9220,9 +9220,9 @@ package body Exp_Ch3 is\n       end loop;\n    end Make_Controlling_Function_Wrappers;\n \n-   -------------------\n-   --  Make_Eq_Body --\n-   -------------------\n+   ------------------\n+   -- Make_Eq_Body --\n+   ------------------\n \n    function Make_Eq_Body\n      (Typ     : Entity_Id;"}, {"sha": "bcdbfe72d0d5169e4105d9810a3f30323af6c1bd", "filename": "gcc/ada/exp_unst.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e6845df1eb61c3c8d779e5590811ed1cbd04270/gcc%2Fada%2Fexp_unst.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e6845df1eb61c3c8d779e5590811ed1cbd04270/gcc%2Fada%2Fexp_unst.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_unst.adb?ref=3e6845df1eb61c3c8d779e5590811ed1cbd04270", "patch": "@@ -826,7 +826,7 @@ package body Exp_Unst is\n                   end if;\n \n                --  Generic associations are not analyzed: the actuals are\n-               --  transferred to renaming qnd subtype declarations that\n+               --  transferred to renaming and subtype declarations that\n                --  are the ones that must be examined.\n \n                when N_Generic_Association =>"}, {"sha": "f615e65045413f85717691649630512c9b364835", "filename": "gcc/ada/inline.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e6845df1eb61c3c8d779e5590811ed1cbd04270/gcc%2Fada%2Finline.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e6845df1eb61c3c8d779e5590811ed1cbd04270/gcc%2Fada%2Finline.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finline.adb?ref=3e6845df1eb61c3c8d779e5590811ed1cbd04270", "patch": "@@ -1098,8 +1098,8 @@ package body Inline is\n          if not Has_Single_Return (N)\n \n            --  Skip inlining if the function returns an unconstrained type\n-           --  using an extended return statement since this part of the\n-           --  new inlining model which is not yet supported by the current\n+           --  using an extended return statement, since this part of the\n+           --  new inlining model is not yet supported by the current\n            --  implementation. ???\n \n            or else (Returns_Unconstrained_Type (Spec_Id)"}, {"sha": "3065dabc09df3fbccf9ab055c8c5c0aeb6019431", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e6845df1eb61c3c8d779e5590811ed1cbd04270/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e6845df1eb61c3c8d779e5590811ed1cbd04270/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=3e6845df1eb61c3c8d779e5590811ed1cbd04270", "patch": "@@ -3200,7 +3200,7 @@ package body Sem_Prag is\n \n          --  The item appears in the visible state space of some package. In\n          --  general this scenario does not warrant Part_Of except when the\n-         --  package is a non-generic private child unit and the encapsulating\n+         --  package is a nongeneric private child unit and the encapsulating\n          --  state is declared in a parent unit or a public descendant of that\n          --  parent unit.\n \n@@ -3210,7 +3210,7 @@ package body Sem_Prag is\n               and then Is_Private_Descendant (Pack_Id)\n             then\n                --  A variable or state abstraction which is part of the visible\n-               --  state of a non-generic private child unit or its public\n+               --  state of a nongeneric private child unit or its public\n                --  descendants must have its Part_Of indicator specified. The\n                --  Part_Of indicator must denote a state declared by either the\n                --  parent unit of the private unit or by a public descendant of\n@@ -3252,7 +3252,7 @@ package body Sem_Prag is\n                end if;\n \n             --  Indicator Part_Of is not needed when the related package is\n-            --  not a non-generic private child unit or a public descendant\n+            --  not a nongeneric private child unit or a public descendant\n             --  thereof.\n \n             else\n@@ -28833,7 +28833,7 @@ package body Sem_Prag is\n \n       --  In general an item declared in the visible state space of a package\n       --  does not require a Part_Of indicator. The only exception is when the\n-      --  related package is a non-generic private child unit in which case\n+      --  related package is a nongeneric private child unit, in which case\n       --  Part_Of must denote a state in the parent unit or in one of its\n       --  descendants.\n "}]}