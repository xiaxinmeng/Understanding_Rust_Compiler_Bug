{"sha": "76aa57137c694f75b7b33409b49a5063685fe241", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzZhYTU3MTM3YzY5NGY3NWI3YjMzNDA5YjQ5YTUwNjM2ODVmZTI0MQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2004-07-10T07:23:17Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2004-07-10T07:23:17Z"}, "message": "* builtins.c (std_gimplify_va_arg_expr): Fix borked BIT_AND_EXPR.\n\nFrom-SVN: r84446", "tree": {"sha": "bc564e88496d0493d9d7f329bdc8ef2d117d2ee3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bc564e88496d0493d9d7f329bdc8ef2d117d2ee3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/76aa57137c694f75b7b33409b49a5063685fe241", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76aa57137c694f75b7b33409b49a5063685fe241", "html_url": "https://github.com/Rust-GCC/gccrs/commit/76aa57137c694f75b7b33409b49a5063685fe241", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76aa57137c694f75b7b33409b49a5063685fe241/comments", "author": null, "committer": null, "parents": [{"sha": "45cc478337efd4f1f5f62bfd70857ab5679aae7a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45cc478337efd4f1f5f62bfd70857ab5679aae7a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/45cc478337efd4f1f5f62bfd70857ab5679aae7a"}], "stats": {"total": 15, "additions": 9, "deletions": 6}, "files": [{"sha": "0187db96a56de8deffd0dc70c1a08c510f13e091", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76aa57137c694f75b7b33409b49a5063685fe241/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76aa57137c694f75b7b33409b49a5063685fe241/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=76aa57137c694f75b7b33409b49a5063685fe241", "patch": "@@ -1,3 +1,7 @@\n+2004-07-10  Richard Henderson  <rth@redhat.com>\n+\n+\t* builtins.c (std_gimplify_va_arg_expr): Fix borked BIT_AND_EXPR.\n+\n 2004-07-09  Mike Stump  <mrs@apple.com>\n \n \t* config/darwin.c (no_dead_strip): Add."}, {"sha": "7d86ddc8841fc3c77b747449498e9996a3aca39a", "filename": "gcc/builtins.c", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76aa57137c694f75b7b33409b49a5063685fe241/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76aa57137c694f75b7b33409b49a5063685fe241/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=76aa57137c694f75b7b33409b49a5063685fe241", "patch": "@@ -4483,29 +4483,28 @@ std_gimplify_va_arg_expr (tree valist, tree type, tree *pre_p, tree *post_p)\n   abort ();\n #endif\n \n-  /* Compute the rounded size of the type.  */\n   align = PARM_BOUNDARY / BITS_PER_UNIT;\n-  boundary = FUNCTION_ARG_BOUNDARY (TYPE_MODE (type), type);\n+  boundary = FUNCTION_ARG_BOUNDARY (TYPE_MODE (type), type) / BITS_PER_UNIT;\n \n   /* Hoist the valist value into a temporary for the moment.  */\n   valist_tmp = get_initialized_tmp_var (valist, pre_p, NULL);\n \n   /* va_list pointer is aligned to PARM_BOUNDARY.  If argument actually\n      requires greater alignment, we must perform dynamic alignment.  */\n-  if (boundary > PARM_BOUNDARY)\n+  if (boundary > align)\n     {\n-      unsigned byte_bound = boundary / BITS_PER_UNIT;\n-\n-      t = fold_convert (TREE_TYPE (valist), size_int (byte_bound - 1));\n+      t = fold_convert (TREE_TYPE (valist), size_int (boundary - 1));\n       t = build2 (MODIFY_EXPR, TREE_TYPE (valist), valist_tmp,\n \t\t  build2 (PLUS_EXPR, TREE_TYPE (valist), valist_tmp, t));\n       gimplify_and_add (t, pre_p);\n \n+      t = fold_convert (TREE_TYPE (valist), size_int (-boundary));\n       t = build2 (MODIFY_EXPR, TREE_TYPE (valist), valist_tmp,\n \t\t  build2 (BIT_AND_EXPR, TREE_TYPE (valist), valist_tmp, t));\n       gimplify_and_add (t, pre_p);\n     }\n \n+  /* Compute the rounded size of the type.  */\n   type_size = size_in_bytes (type);\n   rounded_size = round_up (type_size, align);\n "}]}