{"sha": "682287fb313413b08b53e35d38d61a3e64e29b45", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjgyMjg3ZmIzMTM0MTNiMDhiNTNlMzVkMzhkNjFhM2U2NGUyOWI0NQ==", "commit": {"author": {"name": "James Greenhalgh", "email": "james.greenhalgh@arm.com", "date": "2013-12-18T19:21:45Z"}, "committer": {"name": "James Greenhalgh", "email": "jgreenhalgh@gcc.gnu.org", "date": "2013-12-18T19:21:45Z"}, "message": "[AArch64 1/3 big.LITTLE] Driver rewriting of big.LITTLE names.\n\ngcc/\n\n\t* common/config/aarch64/aarch64-common.c\n\t(aarch64_rewrite_selected_cpu): New.\n\t(aarch64_rewrite_mcpu): New.\n\t* config/aarch64/aarch64-protos.h\n\t(aarch64_rewrite_selected_cpu): New.\n\t* config/aarch64/aarch64.h (BIG_LITTLE_SPEC): New.\n\t(BIG_LITTLE_SPEC_FUNCTIONS): Likewise.\n\t(ASM_CPU_SPEC): Likewise.\n\t(EXTRA_SPEC_FUNCTIONS): Likewise.\n\t(EXTRA_SPECS): Likewise.\n\t(ASM_SPEC): Likewise.\n\t* config/aarch64/aarch64.c (aarch64_start_file): Rewrite target\n\tCPU name.\n\nFrom-SVN: r206098", "tree": {"sha": "bf2e9db6c35899121d12968e429df52ba042112e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bf2e9db6c35899121d12968e429df52ba042112e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/682287fb313413b08b53e35d38d61a3e64e29b45", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/682287fb313413b08b53e35d38d61a3e64e29b45", "html_url": "https://github.com/Rust-GCC/gccrs/commit/682287fb313413b08b53e35d38d61a3e64e29b45", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/682287fb313413b08b53e35d38d61a3e64e29b45/comments", "author": {"login": "jgreenhalgh-arm", "id": 6104025, "node_id": "MDQ6VXNlcjYxMDQwMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6104025?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jgreenhalgh-arm", "html_url": "https://github.com/jgreenhalgh-arm", "followers_url": "https://api.github.com/users/jgreenhalgh-arm/followers", "following_url": "https://api.github.com/users/jgreenhalgh-arm/following{/other_user}", "gists_url": "https://api.github.com/users/jgreenhalgh-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jgreenhalgh-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jgreenhalgh-arm/subscriptions", "organizations_url": "https://api.github.com/users/jgreenhalgh-arm/orgs", "repos_url": "https://api.github.com/users/jgreenhalgh-arm/repos", "events_url": "https://api.github.com/users/jgreenhalgh-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/jgreenhalgh-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a5dcac11d5cdcc49bae97841462059acbb149f6e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5dcac11d5cdcc49bae97841462059acbb149f6e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5dcac11d5cdcc49bae97841462059acbb149f6e"}], "stats": {"total": 75, "additions": 73, "deletions": 2}, "files": [{"sha": "9ad5ec88da68e83263bc8a418379247c63b577bd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/682287fb313413b08b53e35d38d61a3e64e29b45/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/682287fb313413b08b53e35d38d61a3e64e29b45/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=682287fb313413b08b53e35d38d61a3e64e29b45", "patch": "@@ -1,3 +1,19 @@\n+2013-12-18  James Greenhalgh  <james.greenhalgh@arm.com>\n+\n+\t* common/config/aarch64/aarch64-common.c\n+\t(aarch64_rewrite_selected_cpu): New.\n+\t(aarch64_rewrite_mcpu): New.\n+\t* config/aarch64/aarch64-protos.h\n+\t(aarch64_rewrite_selected_cpu): New.\n+\t* config/aarch64/aarch64.h (BIG_LITTLE_SPEC): New.\n+\t(BIG_LITTLE_SPEC_FUNCTIONS): Likewise.\n+\t(ASM_CPU_SPEC): Likewise.\n+\t(EXTRA_SPEC_FUNCTIONS): Likewise.\n+\t(EXTRA_SPECS): Likewise.\n+\t(ASM_SPEC): Likewise.\n+\t* config/aarch64/aarch64.c (aarch64_start_file): Rewrite target\n+\tCPU name.\n+\n 2013-12-18  Balaji V. Iyer  <balaji.v.iyer@intel.com>\n \n \t* omp-low.c (simd_clone_clauses_extract): Replaced the string"}, {"sha": "19acce1087c6b7701ca040cf5494ffff3caef3fd", "filename": "gcc/common/config/aarch64/aarch64-common.c", "status": "modified", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/682287fb313413b08b53e35d38d61a3e64e29b45/gcc%2Fcommon%2Fconfig%2Faarch64%2Faarch64-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/682287fb313413b08b53e35d38d61a3e64e29b45/gcc%2Fcommon%2Fconfig%2Faarch64%2Faarch64-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon%2Fconfig%2Faarch64%2Faarch64-common.c?ref=682287fb313413b08b53e35d38d61a3e64e29b45", "patch": "@@ -88,3 +88,38 @@ aarch64_handle_option (struct gcc_options *opts,\n }\n \n struct gcc_targetm_common targetm_common = TARGETM_COMMON_INITIALIZER;\n+\n+#define AARCH64_CPU_NAME_LENGTH 20\n+\n+/* Truncate NAME at the first '.' character seen, or return\n+   NAME unmodified.  */\n+\n+const char *\n+aarch64_rewrite_selected_cpu (const char *name)\n+{\n+  static char output_buf[AARCH64_CPU_NAME_LENGTH + 1] = {0};\n+  char *arg_pos;\n+\n+  strncpy (output_buf, name, AARCH64_CPU_NAME_LENGTH);\n+  arg_pos = strchr (output_buf, '.');\n+\n+  /* If we found a '.' truncate the entry at that point.  */\n+  if (arg_pos)\n+    *arg_pos = '\\0';\n+\n+  return output_buf;\n+}\n+\n+/* Called by the driver to rewrite a name passed to the -mcpu\n+   argument in preparation to be passed to the assembler.  The\n+   name will be in ARGV[0], ARGC should always be 1.  */\n+\n+const char *\n+aarch64_rewrite_mcpu (int argc, const char **argv)\n+{\n+  gcc_assert (argc == 1);\n+  return aarch64_rewrite_selected_cpu (argv[0]);\n+}\n+\n+#undef AARCH64_CPU_NAME_LENGTH\n+"}, {"sha": "97e1fb5ddb73df125e7b61a70513c7805ab9b29c", "filename": "gcc/config/aarch64/aarch64-elf.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/682287fb313413b08b53e35d38d61a3e64e29b45/gcc%2Fconfig%2Faarch64%2Faarch64-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/682287fb313413b08b53e35d38d61a3e64e29b45/gcc%2Fconfig%2Faarch64%2Faarch64-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-elf.h?ref=682287fb313413b08b53e35d38d61a3e64e29b45", "patch": "@@ -145,7 +145,8 @@\n %{mbig-endian:-EB} \\\n %{mlittle-endian:-EL} \\\n %{mcpu=*:-mcpu=%*} \\\n-%{march=*:-march=%*}\" \\\n+%{march=*:-march=%*} \\\n+%(asm_cpu_spec)\" \\\n ASM_MABI_SPEC\n #endif\n "}, {"sha": "6ac059b2f38a7a91587c6d19979fca1f6d2a0c75", "filename": "gcc/config/aarch64/aarch64-protos.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/682287fb313413b08b53e35d38d61a3e64e29b45/gcc%2Fconfig%2Faarch64%2Faarch64-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/682287fb313413b08b53e35d38d61a3e64e29b45/gcc%2Fconfig%2Faarch64%2Faarch64-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-protos.h?ref=682287fb313413b08b53e35d38d61a3e64e29b45", "patch": "@@ -189,6 +189,8 @@ bool aarch64_simd_valid_immediate (rtx, enum machine_mode, bool,\n bool aarch64_symbolic_address_p (rtx);\n bool aarch64_uimm12_shift (HOST_WIDE_INT);\n const char *aarch64_output_casesi (rtx *);\n+const char *aarch64_rewrite_selected_cpu (const char *name);\n+\n enum aarch64_symbol_type aarch64_classify_symbol (rtx,\n \t\t\t\t\t\t  enum aarch64_symbol_context);\n enum aarch64_symbol_type aarch64_classify_tls_symbol (rtx);"}, {"sha": "0c53e6475a8fab48c92dd30a9389dc20110e5095", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/682287fb313413b08b53e35d38d61a3e64e29b45/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/682287fb313413b08b53e35d38d61a3e64e29b45/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=682287fb313413b08b53e35d38d61a3e64e29b45", "patch": "@@ -7437,7 +7437,9 @@ aarch64_start_file (void)\n     }\n   else if (selected_cpu)\n     {\n-      asm_fprintf (asm_out_file, \"\\t.cpu %s\", selected_cpu->name);\n+      const char *truncated_name\n+\t    = aarch64_rewrite_selected_cpu (selected_cpu->name);\n+      asm_fprintf (asm_out_file, \"\\t.cpu %s\", truncated_name);\n       aarch64_print_extension ();\n     }\n   default_file_start();"}, {"sha": "d89c09b9c142ed0e7ba0acaac93050171e3c10b6", "filename": "gcc/config/aarch64/aarch64.h", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/682287fb313413b08b53e35d38d61a3e64e29b45/gcc%2Fconfig%2Faarch64%2Faarch64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/682287fb313413b08b53e35d38d61a3e64e29b45/gcc%2Fconfig%2Faarch64%2Faarch64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.h?ref=682287fb313413b08b53e35d38d61a3e64e29b45", "patch": "@@ -857,4 +857,19 @@ extern enum aarch64_code_model aarch64_cmodel;\n #define ENDIAN_LANE_N(mode, n)  \\\n   (BYTES_BIG_ENDIAN ? GET_MODE_NUNITS (mode) - 1 - n : n)\n \n+#define BIG_LITTLE_SPEC \\\n+   \" %{mcpu=*:%<mcpu=* -mcpu=%:rewrite_mcpu(%{mcpu=*:%*})}\"\n+\n+extern const char *aarch64_rewrite_mcpu (int argc, const char **argv);\n+#define BIG_LITTLE_CPU_SPEC_FUNCTIONS \\\n+  { \"rewrite_mcpu\", aarch64_rewrite_mcpu },\n+\n+#define ASM_CPU_SPEC \\\n+   BIG_LITTLE_SPEC\n+\n+#define EXTRA_SPEC_FUNCTIONS BIG_LITTLE_CPU_SPEC_FUNCTIONS\n+\n+#define EXTRA_SPECS\t\t\t\t\t\t\\\n+  { \"asm_cpu_spec\",\t\tASM_CPU_SPEC }\n+\n #endif /* GCC_AARCH64_H */"}]}