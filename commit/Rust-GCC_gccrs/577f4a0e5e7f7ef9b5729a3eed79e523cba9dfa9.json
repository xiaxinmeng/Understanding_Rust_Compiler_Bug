{"sha": "577f4a0e5e7f7ef9b5729a3eed79e523cba9dfa9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTc3ZjRhMGU1ZTdmN2VmOWI1NzI5YTNlZWQ3OWU1MjNjYmE5ZGZhOQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2019-12-03T14:47:24Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2019-12-03T14:47:24Z"}, "message": "re PR target/92758 (r278833 breaks gcc.target/powerpc/fold-vec-splat-floatdouble.c)\n\n2019-12-03  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/92758\n\t* tree-ssa-forwprop.c (simplify_vector_constructor): Restore\n\toperation on uniform vectors.\n\nFrom-SVN: r278938", "tree": {"sha": "e14bbde6f47b47343772c6d8863596bfeba96bd9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e14bbde6f47b47343772c6d8863596bfeba96bd9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/577f4a0e5e7f7ef9b5729a3eed79e523cba9dfa9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/577f4a0e5e7f7ef9b5729a3eed79e523cba9dfa9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/577f4a0e5e7f7ef9b5729a3eed79e523cba9dfa9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/577f4a0e5e7f7ef9b5729a3eed79e523cba9dfa9/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d8f0024b57e261f0466b2b206d459ad05ab7ca1c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8f0024b57e261f0466b2b206d459ad05ab7ca1c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8f0024b57e261f0466b2b206d459ad05ab7ca1c"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "9efc808eb8731bdfe5ee90c5c58bb54aab5675a3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/577f4a0e5e7f7ef9b5729a3eed79e523cba9dfa9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/577f4a0e5e7f7ef9b5729a3eed79e523cba9dfa9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=577f4a0e5e7f7ef9b5729a3eed79e523cba9dfa9", "patch": "@@ -1,3 +1,9 @@\n+2019-12-03  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/92758\n+\t* tree-ssa-forwprop.c (simplify_vector_constructor): Restore\n+\toperation on uniform vectors.\n+\n 2019-12-03  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/92645"}, {"sha": "4a831242c0e1418d89523aaee0eef900d8fcc3bb", "filename": "gcc/tree-ssa-forwprop.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/577f4a0e5e7f7ef9b5729a3eed79e523cba9dfa9/gcc%2Ftree-ssa-forwprop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/577f4a0e5e7f7ef9b5729a3eed79e523cba9dfa9/gcc%2Ftree-ssa-forwprop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-forwprop.c?ref=577f4a0e5e7f7ef9b5729a3eed79e523cba9dfa9", "patch": "@@ -2043,8 +2043,7 @@ simplify_vector_constructor (gimple_stmt_iterator *gsi)\n   gcc_checking_assert (TREE_CODE (op) == CONSTRUCTOR\n \t\t       && TREE_CODE (type) == VECTOR_TYPE);\n \n-  if (!TYPE_VECTOR_SUBPARTS (type).is_constant (&nelts)\n-      || uniform_vector_p (op))\n+  if (!TYPE_VECTOR_SUBPARTS (type).is_constant (&nelts))\n     return false;\n   elem_type = TREE_TYPE (type);\n   elem_size = TREE_INT_CST_LOW (TYPE_SIZE (elem_type));"}]}