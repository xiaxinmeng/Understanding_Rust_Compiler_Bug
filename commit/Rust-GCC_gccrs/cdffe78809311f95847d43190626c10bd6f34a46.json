{"sha": "cdffe78809311f95847d43190626c10bd6f34a46", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2RmZmU3ODgwOTMxMWY5NTg0N2Q0MzE5MDYyNmMxMGJkNmYzNGE0Ng==", "commit": {"author": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2015-11-09T05:50:24Z"}, "committer": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2015-11-09T05:50:24Z"}, "message": "re PR fortran/68053 (lower bound of implied shape array restricted too much)\n\n2015-11-08  Steven g. Kargl  <kargl@gcc.gnu.org>\n\n\tPR fortran/68053\n\t* decl.c (add_init_expr_to_sym):  Try to reduce initialization expression\n\tbefore testing for a constant value.\n\n2015-11-08  Steven g. Kargl  <kargl@gcc.gnu.org>\n\n\tPR fortran/68053\n\t* gfortran.dg/pr68053.f90: New test.\n\nFrom-SVN: r229992", "tree": {"sha": "9226171a5ab0c8441dea04b71eee335fcdb42203", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9226171a5ab0c8441dea04b71eee335fcdb42203"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cdffe78809311f95847d43190626c10bd6f34a46", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cdffe78809311f95847d43190626c10bd6f34a46", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cdffe78809311f95847d43190626c10bd6f34a46", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cdffe78809311f95847d43190626c10bd6f34a46/comments", "author": null, "committer": null, "parents": [{"sha": "61c94e79ebc90cf45fb9985dee0e3878ac33e55c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61c94e79ebc90cf45fb9985dee0e3878ac33e55c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/61c94e79ebc90cf45fb9985dee0e3878ac33e55c"}], "stats": {"total": 55, "additions": 42, "deletions": 13}, "files": [{"sha": "cd4c94e67645f2d78130715af6b7ea6fb6b6df53", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cdffe78809311f95847d43190626c10bd6f34a46/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cdffe78809311f95847d43190626c10bd6f34a46/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=cdffe78809311f95847d43190626c10bd6f34a46", "patch": "@@ -1,3 +1,9 @@\n+2015-11-08  Steven g. Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran/68053\n+\t* decl.c (add_init_expr_to_sym):  Try to reduce initialization expression\n+\tbefore testing for a constant value.\n+\n 2015-11-08  Andre Vehreschild  <vehre@gcc.gnu.org>\n \n \tPR fortran/68218"}, {"sha": "0c3377f7b080f2f543fb2de712aea698b1af9178", "filename": "gcc/fortran/decl.c", "status": "modified", "additions": 21, "deletions": 13, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cdffe78809311f95847d43190626c10bd6f34a46/gcc%2Ffortran%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cdffe78809311f95847d43190626c10bd6f34a46/gcc%2Ffortran%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdecl.c?ref=cdffe78809311f95847d43190626c10bd6f34a46", "patch": "@@ -1529,26 +1529,34 @@ add_init_expr_to_sym (const char *name, gfc_expr **initp, locus *var_locus)\n \t  for (dim = 0; dim < sym->as->rank; ++dim)\n \t    {\n \t      int k;\n-\t      gfc_expr* lower;\n-\t      gfc_expr* e;\n+\t      gfc_expr *e, *lower;\n \n \t      lower = sym->as->lower[dim];\n-\t      if (lower->expr_type != EXPR_CONSTANT)\n+\n+\t      /* If the lower bound is an array element from another \n+\t\t parameterized array, then it is marked with EXPR_VARIABLE and\n+\t\t is an initialization expression.  Try to reduce it.  */\n+\t      if (lower->expr_type == EXPR_VARIABLE)\n+\t\tgfc_reduce_init_expr (lower);\n+\n+\t      if (lower->expr_type == EXPR_CONSTANT)\n+\t\t{\n+\t\t  /* All dimensions must be without upper bound.  */\n+\t\t  gcc_assert (!sym->as->upper[dim]);\n+\n+\t\t  k = lower->ts.kind;\n+\t\t  e = gfc_get_constant_expr (BT_INTEGER, k, &sym->declared_at);\n+\t\t  mpz_add (e->value.integer, lower->value.integer,\n+\t\t\t   init->shape[dim]);\n+\t\t  mpz_sub_ui (e->value.integer, e->value.integer, 1);\n+\t\t  sym->as->upper[dim] = e;\n+\t\t}\n+\t      else\n \t\t{\n \t\t  gfc_error (\"Non-constant lower bound in implied-shape\"\n \t\t\t     \" declaration at %L\", &lower->where);\n \t\t  return false;\n \t\t}\n-\n-\t      /* All dimensions must be without upper bound.  */\n-\t      gcc_assert (!sym->as->upper[dim]);\n-\n-\t      k = lower->ts.kind;\n-\t      e = gfc_get_constant_expr (BT_INTEGER, k, &sym->declared_at);\n-\t      mpz_add (e->value.integer,\n-\t\t       lower->value.integer, init->shape[dim]);\n-\t      mpz_sub_ui (e->value.integer, e->value.integer, 1);\n-\t      sym->as->upper[dim] = e;\n \t    }\n \n \t  sym->as->type = AS_EXPLICIT;"}, {"sha": "f8c5d5ab7a38617c163bd33638ad28af01fdbe31", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cdffe78809311f95847d43190626c10bd6f34a46/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cdffe78809311f95847d43190626c10bd6f34a46/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=cdffe78809311f95847d43190626c10bd6f34a46", "patch": "@@ -1,3 +1,8 @@\n+2015-11-08  Steven g. Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran/68053\n+\t* gfortran.dg/pr68053.f90: New test.\n+\n 2015-11-06  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* g++.dg/lto/pr68057_0.C: Fix testcase."}, {"sha": "e59693c5f667495d477eb5a8ac9a2e9c6659900d", "filename": "gcc/testsuite/gfortran.dg/pr68053.f90", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cdffe78809311f95847d43190626c10bd6f34a46/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr68053.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cdffe78809311f95847d43190626c10bd6f34a46/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr68053.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr68053.f90?ref=cdffe78809311f95847d43190626c10bd6f34a46", "patch": "@@ -0,0 +1,10 @@\n+! { dg-do run }\n+! PR fortran/68053\n+! Original code contributed by Gerhard Steinmetz\n+! <gerhard dot steinmetx dot fortran at t-online dot de>\n+program p\n+   integer, parameter :: n(3) = [1,2,3]\n+   integer, parameter :: x(1) = 7\n+   integer, parameter :: z(n(2):*) = x\n+   if (lbound(z,1) /= 2) call abort\n+end"}]}