{"sha": "75b63a9191017a605ff048e509709750566dbbad", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzViNjNhOTE5MTAxN2E2MDVmZjA0OGU1MDk3MDk3NTA1NjZkYmJhZA==", "commit": {"author": {"name": "Sebastian Pop", "email": "sebastian.pop@amd.com", "date": "2009-11-25T04:56:49Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2009-11-25T04:56:49Z"}, "message": "graphite-poly.h (copy_lst): Do full copy of LST.\n\n2009-10-09  Sebastian Pop  <sebastian.pop@amd.com>\n\n\t* graphite-poly.h (copy_lst): Do full copy of LST.\n\nFrom-SVN: r154566", "tree": {"sha": "a95683f861b95768ae6ddd6d66f9d82eeea55009", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a95683f861b95768ae6ddd6d66f9d82eeea55009"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/75b63a9191017a605ff048e509709750566dbbad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75b63a9191017a605ff048e509709750566dbbad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75b63a9191017a605ff048e509709750566dbbad", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75b63a9191017a605ff048e509709750566dbbad/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7cc4ff8d299a5b9727aa3cdcf98ca2b47ad2e7a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7cc4ff8d299a5b9727aa3cdcf98ca2b47ad2e7a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7cc4ff8d299a5b9727aa3cdcf98ca2b47ad2e7a1"}], "stats": {"total": 15, "additions": 14, "deletions": 1}, "files": [{"sha": "6323d1d5944a725be6ec8374a6ad40b2a9f5500c", "filename": "gcc/ChangeLog.graphite", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75b63a9191017a605ff048e509709750566dbbad/gcc%2FChangeLog.graphite", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75b63a9191017a605ff048e509709750566dbbad/gcc%2FChangeLog.graphite", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog.graphite?ref=75b63a9191017a605ff048e509709750566dbbad", "patch": "@@ -1,3 +1,7 @@\n+2009-10-09  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\t* graphite-poly.h (copy_lst): Do full copy of LST.\n+\n 2009-10-07  Sebastian Pop  <sebastian.pop@amd.com>\n \n \t* graphite-sese-to-poly.c (reduction_phi_p): Call remove_invariant_phi"}, {"sha": "6ae330ccdcdc161028ceb9f656df92c807886467", "filename": "gcc/graphite-poly.h", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75b63a9191017a605ff048e509709750566dbbad/gcc%2Fgraphite-poly.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75b63a9191017a605ff048e509709750566dbbad/gcc%2Fgraphite-poly.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-poly.h?ref=75b63a9191017a605ff048e509709750566dbbad", "patch": "@@ -678,7 +678,16 @@ copy_lst (lst_p lst)\n     return NULL;\n \n   if (LST_LOOP_P (lst))\n-    return new_lst_loop (VEC_copy (lst_p, heap, LST_SEQ (lst)));\n+    {\n+      int i;\n+      lst_p l;\n+      VEC (lst_p, heap) *seq = VEC_alloc (lst_p, heap, 5);\n+\n+      for (i = 0; VEC_iterate (lst_p, LST_SEQ (lst), i, l); i++)\n+\tVEC_safe_push (lst_p, heap, seq, copy_lst (l));\n+\n+      return new_lst_loop (seq);\n+    }\n \n   return new_lst_stmt (LST_PBB (lst));\n }"}]}