{"sha": "e6683450f4a26dae7774be735a3429f48aee9565", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTY2ODM0NTBmNGEyNmRhZTc3NzRiZTczNWEzNDI5ZjQ4YWVlOTU2NQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-05-19T10:05:30Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-05-19T10:05:30Z"}, "message": "builtins: Fix ICE with unprototyped builtin call [PR100576]\n\nFor unprototyped builtins the checking we perform is only about whether\nthe used argument is integral, pointer etc., not the exact precision.\nWe emit a warning about the problem though:\npr100576.c: In function \u2018foo\u2019:\npr100576.c:9:11: warning: implicit declaration of function \u2018memcmp\u2019 [-Wimplicit-function-declaration]\n    9 |   int n = memcmp (p, v, b);\n      |           ^~~~~~\npr100576.c:1:1: note: include \u2018<string.h>\u2019 or provide a declaration of \u2018memcmp\u2019\n  +++ |+#include <string.h>\n    1 | /* PR middle-end/100576 */\npr100576.c:9:25: warning: \u2018memcmp\u2019 argument 3 type is \u2018int\u2019 where \u2018long unsigned int\u2019 is expected in a call to built-in function declared without prototype\n+[-Wbuiltin-declaration-mismatch]\n    9 |   int n = memcmp (p, v, b);\n      |                         ^\nIt means in the testcase below where the user incorrectly called memcmp\nwith last argument int rather then size_t, the warning stuff in builtins.c\nICEs because it compares a wide_int from such a bound with another wide_int\nwhich has precision of size_t/sizetype and wide_int asserts the compared\nwide_ints are compatible.\n\nFixed by forcing the bound to have the right type.\n\n2021-05-19  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR middle-end/100576\n\t* builtins.c (check_read_access): Convert bound to size_type_node if\n\tnon-NULL.\n\n\t* gcc.c-torture/compile/pr100576.c: New test.", "tree": {"sha": "d5f7a3155133bc1f9ca4b0f6f43a5f98f140c572", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d5f7a3155133bc1f9ca4b0f6f43a5f98f140c572"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e6683450f4a26dae7774be735a3429f48aee9565", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6683450f4a26dae7774be735a3429f48aee9565", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e6683450f4a26dae7774be735a3429f48aee9565", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6683450f4a26dae7774be735a3429f48aee9565/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a73a5af281cebd03bbd37f37eef9a8a91b5fbf95", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a73a5af281cebd03bbd37f37eef9a8a91b5fbf95", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a73a5af281cebd03bbd37f37eef9a8a91b5fbf95"}], "stats": {"total": 14, "additions": 14, "deletions": 0}, "files": [{"sha": "6a2875edfb5e2e94b4ac6c064792064009248b10", "filename": "gcc/builtins.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6683450f4a26dae7774be735a3429f48aee9565/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6683450f4a26dae7774be735a3429f48aee9565/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=e6683450f4a26dae7774be735a3429f48aee9565", "patch": "@@ -4904,6 +4904,8 @@ check_read_access (tree exp, tree src, tree bound /* = NULL_TREE */,\n   if (!warn_stringop_overread)\n     return true;\n \n+  if (bound && !useless_type_conversion_p (size_type_node, TREE_TYPE (bound)))\n+    bound = fold_convert (size_type_node, bound);\n   access_data data (exp, access_read_only, NULL_TREE, false, bound, true);\n   compute_objsize (src, ost, &data.src);\n   return check_access (exp, /*dstwrite=*/ NULL_TREE, /*maxread=*/ bound,"}, {"sha": "f2f40ec451207513f8fd9198f1ed0318a8464e37", "filename": "gcc/testsuite/gcc.c-torture/compile/pr100576.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6683450f4a26dae7774be735a3429f48aee9565/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr100576.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6683450f4a26dae7774be735a3429f48aee9565/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr100576.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr100576.c?ref=e6683450f4a26dae7774be735a3429f48aee9565", "patch": "@@ -0,0 +1,12 @@\n+/* PR middle-end/100576 */\n+\n+const char v[] = {0x12};\n+\n+void\n+foo (const char *p)\n+{\n+  int b = sizeof v;\n+  int n = memcmp (p, v, b);\n+  if (n)\n+    __builtin_abort ();\n+}"}]}