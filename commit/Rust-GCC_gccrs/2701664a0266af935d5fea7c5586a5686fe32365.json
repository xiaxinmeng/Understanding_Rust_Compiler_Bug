{"sha": "2701664a0266af935d5fea7c5586a5686fe32365", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjcwMTY2NGEwMjY2YWY5MzVkNWZlYTdjNTU4NmE1Njg2ZmUzMjM2NQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2013-05-23T03:46:44Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2013-05-23T03:46:44Z"}, "message": "re PR c++/56915 (ICE in symtab_add_to_same_comdat_group, at symtab.c:383)\n\n\tPR c++/56915\n\t* semantics.c (maybe_add_lambda_conv_op): Give up if the call op\n\tisn't defined.\n\nFrom-SVN: r199231", "tree": {"sha": "ff9f692ff5d1df3031ada35da63437dc453d453e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ff9f692ff5d1df3031ada35da63437dc453d453e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2701664a0266af935d5fea7c5586a5686fe32365", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2701664a0266af935d5fea7c5586a5686fe32365", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2701664a0266af935d5fea7c5586a5686fe32365", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2701664a0266af935d5fea7c5586a5686fe32365/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cfb00b41d986cfe48ff0d06722f64122b8f1a41e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfb00b41d986cfe48ff0d06722f64122b8f1a41e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cfb00b41d986cfe48ff0d06722f64122b8f1a41e"}], "stats": {"total": 38, "additions": 38, "deletions": 0}, "files": [{"sha": "cd58d70f4a010018698b66db3b720417394f5b5d", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2701664a0266af935d5fea7c5586a5686fe32365/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2701664a0266af935d5fea7c5586a5686fe32365/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=2701664a0266af935d5fea7c5586a5686fe32365", "patch": "@@ -1,3 +1,9 @@\n+2013-05-22  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/56915\n+\t* semantics.c (maybe_add_lambda_conv_op): Give up if the call op\n+\tisn't defined.\n+\n 2013-05-22  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/57352"}, {"sha": "5b363377b53045fcfa3066f64886179c10599a92", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2701664a0266af935d5fea7c5586a5686fe32365/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2701664a0266af935d5fea7c5586a5686fe32365/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=2701664a0266af935d5fea7c5586a5686fe32365", "patch": "@@ -9784,6 +9784,13 @@ maybe_add_lambda_conv_op (tree type)\n   if (processing_template_decl)\n     return;\n \n+  if (DECL_INITIAL (callop) == NULL_TREE)\n+    {\n+      /* If the op() wasn't instantiated due to errors, give up.  */\n+      gcc_assert (errorcount || sorrycount);\n+      return;\n+    }\n+\n   stattype = build_function_type (TREE_TYPE (TREE_TYPE (callop)),\n \t\t\t\t  FUNCTION_ARG_CHAIN (callop));\n "}, {"sha": "520b80488a8aff92877e66bed1998051a05b34a7", "filename": "gcc/testsuite/g++.dg/cpp0x/lambda/lambda-template11.C", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2701664a0266af935d5fea7c5586a5686fe32365/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-template11.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2701664a0266af935d5fea7c5586a5686fe32365/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-template11.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-template11.C?ref=2701664a0266af935d5fea7c5586a5686fe32365", "patch": "@@ -0,0 +1,25 @@\n+// PR c++/56915\n+// { dg-require-effective-target c++11 }\n+\n+template <typename T>\n+class A\n+{\n+    typename T::type b();\t// { dg-error \"int\" }\n+};\n+\n+template <typename T, typename U>\n+void waldo(T, U) {}\n+\n+template <typename T>\n+void bar()\n+{\n+    waldo([](A<T> a){ return a; },\n+          []{});\n+}\n+\n+int main()\n+{\n+    bar<int>();\n+}\n+\n+// { dg-prune-output \"used but never defined\" }"}]}