{"sha": "1464632be3927d37a6c8b0c188e967b426d84bda", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTQ2NDYzMmJlMzkyN2QzN2E2YzhiMGMxODhlOTY3YjQyNmQ4NGJkYQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2001-02-13T22:10:04Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2001-02-13T22:10:04Z"}, "message": "* regclass.c (init_reg_sets_1): Silence warning.\n\nFrom-SVN: r39646", "tree": {"sha": "27551de61c774eec846bdf9fdfbb230dcca22556", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/27551de61c774eec846bdf9fdfbb230dcca22556"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1464632be3927d37a6c8b0c188e967b426d84bda", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1464632be3927d37a6c8b0c188e967b426d84bda", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1464632be3927d37a6c8b0c188e967b426d84bda", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1464632be3927d37a6c8b0c188e967b426d84bda/comments", "author": null, "committer": null, "parents": [{"sha": "a8083431ba2ecf2e4592ab8f9c608d6916d3fdbe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8083431ba2ecf2e4592ab8f9c608d6916d3fdbe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a8083431ba2ecf2e4592ab8f9c608d6916d3fdbe"}], "stats": {"total": 104, "additions": 56, "deletions": 48}, "files": [{"sha": "8226cb8cb15b536dc0b4e746beee678cab8a2dc3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1464632be3927d37a6c8b0c188e967b426d84bda/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1464632be3927d37a6c8b0c188e967b426d84bda/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1464632be3927d37a6c8b0c188e967b426d84bda", "patch": "@@ -1,3 +1,7 @@\n+Tue Feb 13 23:05:42 CET 2001  Jan Hubicka  <jh@suse.cz>\n+\n+ \t* regclass.c (init_reg_sets_1): Silence warning.\n+\n Tue Feb 13 22:03:07 CET 2001  Jan Hubicka  <jh@suse.cz>\n \n \t* i386.md (sqrt?f2): Change to expander."}, {"sha": "8764cdb827b18f5c87d111158251a538cdd87d35", "filename": "gcc/regclass.c", "status": "modified", "additions": 52, "deletions": 48, "changes": 100, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1464632be3927d37a6c8b0c188e967b426d84bda/gcc%2Fregclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1464632be3927d37a6c8b0c188e967b426d84bda/gcc%2Fregclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fregclass.c?ref=1464632be3927d37a6c8b0c188e967b426d84bda", "patch": "@@ -288,7 +288,7 @@ init_reg_sets_1 ()\n {\n   register unsigned int i, j;\n   register unsigned int /* enum machine_mode */ m;\n-  char contains_reg_of_mode [LIM_REG_CLASSES] [MAX_MACHINE_MODE];\n+  char contains_reg_of_mode [N_REG_CLASSES] [MAX_MACHINE_MODE];\n   char allocatable_regs_of_mode [MAX_MACHINE_MODE];\n \n   /* This macro allows the fixed or call-used registers\n@@ -443,53 +443,57 @@ init_reg_sets_1 ()\n \n   for (m = 0; m < MAX_MACHINE_MODE; m++)\n     if (allocatable_regs_of_mode [m])\n-      for (i = 0; i < N_REG_CLASSES; i++)\n-\tif (contains_reg_of_mode [i][m])\n-\t  for (j = 0; j < N_REG_CLASSES; j++)\n-\t    {\n-\t      int cost;\n-\t      enum reg_class *p1, *p2;\n-\n-\t      if (!contains_reg_of_mode [j][m])\n-\t\t{\n-\t\t  move_cost[m][i][j] = 65536;\n-\t\t  may_move_in_cost[m][i][j] = 65536;\n-\t\t  may_move_out_cost[m][i][j] = 65536;\n-\t\t}\n-\t      else\n-\t\t{\n-\t\t  cost = i == j ? 2 : REGISTER_MOVE_COST (m, i, j);\n-\n-\t\t  for (p2 = &reg_class_subclasses[j][0]; *p2 != LIM_REG_CLASSES;\n-\t\t       p2++)\n-\t\t    if (*p2 != i && contains_reg_of_mode [*p1][m])\n-\t\t      cost = MAX (cost, move_cost [m][i][*p2]);\n-\n-\t\t  for (p1 = &reg_class_subclasses[i][0]; *p1 != LIM_REG_CLASSES;\n-\t\t       p1++)\n-\t\t    if (*p1 != j && contains_reg_of_mode [*p1][m])\n-\t\t      cost = MAX (cost, move_cost [m][*p1][j]);\n-\n-\t\t  move_cost[m][i][j] = cost;\n-\n-\t\t  if (reg_class_subset_p (i, j))\n-\t\t    may_move_in_cost[m][i][j] = 0;\n-\t\t  else\n-\t\t    may_move_in_cost[m][i][j] = cost;\n-\n-\t\t  if (reg_class_subset_p (j, i))\n-\t\t    may_move_out_cost[m][i][j] = 0;\n-\t\t  else\n-\t\t    may_move_out_cost[m][i][j] = cost;\n-\t\t}\n-\t    }\n-\telse\n-\t  for (j = 0; j < N_REG_CLASSES; j++)\n-\t    {\n-\t      move_cost[m][i][j] = 65536;\n-\t      may_move_in_cost[m][i][j] = 65536;\n-\t      may_move_out_cost[m][i][j] = 65536;\n-\t    }\n+      {\n+\tfor (i = 0; i < N_REG_CLASSES; i++)\n+\t  if (contains_reg_of_mode [i][m])\n+\t    for (j = 0; j < N_REG_CLASSES; j++)\n+\t      {\n+\t\tint cost;\n+\t\tenum reg_class *p1, *p2;\n+\n+\t\tif (!contains_reg_of_mode [j][m])\n+\t\t  {\n+\t\t    move_cost[m][i][j] = 65536;\n+\t\t    may_move_in_cost[m][i][j] = 65536;\n+\t\t    may_move_out_cost[m][i][j] = 65536;\n+\t\t  }\n+\t\telse\n+\t\t  {\n+\t\t    cost = i == j ? 2 : REGISTER_MOVE_COST (m, i, j);\n+\n+\t\t    for (p2 = &reg_class_subclasses[j][0];\n+\t\t         *p2 != LIM_REG_CLASSES;\n+\t\t\t p2++)\n+\t\t      if (*p2 != i && contains_reg_of_mode [*p1][m])\n+\t\t\tcost = MAX (cost, move_cost [m][i][*p2]);\n+\n+\t\t    for (p1 = &reg_class_subclasses[i][0];\n+\t\t       \t *p1 != LIM_REG_CLASSES;\n+\t\t\t p1++)\n+\t\t      if (*p1 != j && contains_reg_of_mode [*p1][m])\n+\t\t\tcost = MAX (cost, move_cost [m][*p1][j]);\n+\n+\t\t    move_cost[m][i][j] = cost;\n+\n+\t\t    if (reg_class_subset_p (i, j))\n+\t\t      may_move_in_cost[m][i][j] = 0;\n+\t\t    else\n+\t\t      may_move_in_cost[m][i][j] = cost;\n+\n+\t\t    if (reg_class_subset_p (j, i))\n+\t\t      may_move_out_cost[m][i][j] = 0;\n+\t\t    else\n+\t\t      may_move_out_cost[m][i][j] = cost;\n+\t\t  }\n+\t      }\n+\t  else\n+\t    for (j = 0; j < N_REG_CLASSES; j++)\n+\t      {\n+\t\tmove_cost[m][i][j] = 65536;\n+\t\tmay_move_in_cost[m][i][j] = 65536;\n+\t\tmay_move_out_cost[m][i][j] = 65536;\n+\t      }\n+      }\n \n #ifdef CLASS_CANNOT_CHANGE_MODE\n   {"}]}