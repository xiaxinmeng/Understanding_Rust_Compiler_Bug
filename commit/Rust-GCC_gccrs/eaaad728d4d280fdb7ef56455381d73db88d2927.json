{"sha": "eaaad728d4d280fdb7ef56455381d73db88d2927", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWFhYWQ3MjhkNGQyODBmZGI3ZWY1NjQ1NTM4MWQ3M2RiODhkMjkyNw==", "commit": {"author": {"name": "Guilhem Lavaux", "email": "guilhem@kaffe.org", "date": "2003-09-25T13:21:27Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2003-09-25T13:21:27Z"}, "message": "DecimalFormat.java (format): Don't immediatly round baseNumber to long.\n\n2003-09-25  Guilhem Lavaux  <guilhem@kaffe.org>\n\n\t* java/text/DecimalFormat.java (format): Don't immediatly round\n\tbaseNumber to long.\n\t(setMinimumIntegerDigits): Call super.\n\t(setMinimumFractionDigits): Likewise.\n\t(setMaximumIntegerDigits): Likewise.\n\t(setMaximumFractionDigits): Likewise.\n\nFrom-SVN: r71773", "tree": {"sha": "df9c5c336653d1d6e3f3ef4b32685efc8b13eb74", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/df9c5c336653d1d6e3f3ef4b32685efc8b13eb74"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eaaad728d4d280fdb7ef56455381d73db88d2927", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eaaad728d4d280fdb7ef56455381d73db88d2927", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eaaad728d4d280fdb7ef56455381d73db88d2927", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eaaad728d4d280fdb7ef56455381d73db88d2927/comments", "author": null, "committer": null, "parents": [{"sha": "7b865c363709a01ee6302456ea2d7b71a733acd9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b865c363709a01ee6302456ea2d7b71a733acd9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b865c363709a01ee6302456ea2d7b71a733acd9"}], "stats": {"total": 19, "additions": 14, "deletions": 5}, "files": [{"sha": "d34670d6cb0e3a6318f145de128f92c0f7eef3c1", "filename": "libjava/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eaaad728d4d280fdb7ef56455381d73db88d2927/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eaaad728d4d280fdb7ef56455381d73db88d2927/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=eaaad728d4d280fdb7ef56455381d73db88d2927", "patch": "@@ -1,3 +1,12 @@\n+2003-09-25  Guilhem Lavaux  <guilhem@kaffe.org>\n+\n+\t* java/text/DecimalFormat.java (format): Don't immediatly round\n+\tbaseNumber to long.\n+\t(setMinimumIntegerDigits): Call super.\n+\t(setMinimumFractionDigits): Likewise.\n+\t(setMaximumIntegerDigits): Likewise.\n+\t(setMaximumFractionDigits): Likewise.\n+\n 2003-09-25  Michael Koch  <konqueror@gmx.de>\n \n \t* gnu/java/nio/DatagramChannelImpl.java"}, {"sha": "7c5d5b0ba7b0b47839f3b88c63c1e87f5bdd0d2b", "filename": "libjava/java/text/DecimalFormat.java", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eaaad728d4d280fdb7ef56455381d73db88d2927/libjava%2Fjava%2Ftext%2FDecimalFormat.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eaaad728d4d280fdb7ef56455381d73db88d2927/libjava%2Fjava%2Ftext%2FDecimalFormat.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Ftext%2FDecimalFormat.java?ref=eaaad728d4d280fdb7ef56455381d73db88d2927", "patch": "@@ -456,7 +456,7 @@ public StringBuffer format (double number, StringBuffer dest,\n \t    exponent = (long) Math.floor (Math.log(number) / Math.log(10));\n \t    if (minimumIntegerDigits > 0)\n \t      exponent -= minimumIntegerDigits - 1;\n-\t    baseNumber = (long) (number / Math.pow(10.0, exponent));\n+\t    baseNumber = (number / Math.pow(10.0, exponent));\n \t  }\n \telse\n \t  baseNumber = number;\n@@ -871,22 +871,22 @@ public void setGroupingSize (int groupSize)\n \n   public void setMaximumFractionDigits (int newValue)\n   {\n-    maximumFractionDigits = Math.min(newValue, 340);\n+    super.setMaximumFractionDigits(Math.min(newValue, 340));\n   }\n \n   public void setMaximumIntegerDigits (int newValue)\n   {\n-    maximumIntegerDigits = Math.min(newValue, 309);\n+    super.setMaximumIntegerDigits(Math.min(newValue, 309));\n   }\n \n   public void setMinimumFractionDigits (int newValue)\n   {\n-    minimumFractionDigits = Math.min(newValue, 340);\n+    super.setMinimumFractionDigits(Math.min(newValue, 340));\n   }\n \n   public void setMinimumIntegerDigits (int newValue)\n   {\n-    minimumIntegerDigits = Math.min(newValue, 309);\n+    super.setMinimumIntegerDigits(Math.min(newValue, 309));\n   }\n \n   public void setMultiplier (int newValue)"}]}