{"sha": "3e009bf0e968f77a6ae0705544cd169ea6e95fd0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2UwMDliZjBlOTY4Zjc3YTZhZTA3MDU1NDRjZDE2OWVhNmU5NWZkMA==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2016-05-19T17:52:56Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2016-05-19T17:52:56Z"}, "message": "sched-deps.c (sched_analyze_2): Also force pending loads from memory.\n\n\t* sched-deps.c (sched_analyze_2) <case TRAP_IF>: Also\n\tforce pending loads from memory.\n\nFrom-SVN: r236481", "tree": {"sha": "0deee605f5cf334ffd4f94ab9c9a00423577c492", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0deee605f5cf334ffd4f94ab9c9a00423577c492"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3e009bf0e968f77a6ae0705544cd169ea6e95fd0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e009bf0e968f77a6ae0705544cd169ea6e95fd0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e009bf0e968f77a6ae0705544cd169ea6e95fd0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e009bf0e968f77a6ae0705544cd169ea6e95fd0/comments", "author": null, "committer": null, "parents": [{"sha": "4f45da44cd3a43e9daf5cb12573d80803a2c1028", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f45da44cd3a43e9daf5cb12573d80803a2c1028", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f45da44cd3a43e9daf5cb12573d80803a2c1028"}], "stats": {"total": 17, "additions": 12, "deletions": 5}, "files": [{"sha": "1c62002bb0e6c1b63b8f24459fa3e43786c4de7f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e009bf0e968f77a6ae0705544cd169ea6e95fd0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e009bf0e968f77a6ae0705544cd169ea6e95fd0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3e009bf0e968f77a6ae0705544cd169ea6e95fd0", "patch": "@@ -1,3 +1,8 @@\n+2016-05-19  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* sched-deps.c (sched_analyze_2) <case TRAP_IF>: Also\n+\tforce pending loads from memory.\n+\n 2016-05-19  Kelvin Nilsen  <kelvin@gcc.gnu.org>\n \n \t* config/rs6000/altivec.md (UNSPEC_DARN): New unspec constant.\n@@ -39,7 +44,7 @@\n \n 2016-05-19  Jan Hubicka  <hubicka@ucw.cz>\n \n-\t* tree-vect-loop.c (vect_analyze_loop_2): Use also \n+\t* tree-vect-loop.c (vect_analyze_loop_2): Use also\n \tmax_loop_iterations_int.\n \n 2016-05-19  Marek Polacek  <polacek@redhat.com>\n@@ -97,8 +102,7 @@\n 2016-05-19  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* config/arm/arm.c (arm_new_rtx_costs, SIGN_EXTEND case):\n-\tDon't add cost of inner memory when handling sign-extended\n-\tloads.\n+\tDon't add cost of inner memory when handling sign-extended loads.\n \n 2016-05-19  Ilya Enkovich  <ilya.enkovich@intel.com>\n "}, {"sha": "41a6af25c79b609af947538d8b7df1d87dfcb8a0", "filename": "gcc/sched-deps.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e009bf0e968f77a6ae0705544cd169ea6e95fd0/gcc%2Fsched-deps.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e009bf0e968f77a6ae0705544cd169ea6e95fd0/gcc%2Fsched-deps.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsched-deps.c?ref=3e009bf0e968f77a6ae0705544cd169ea6e95fd0", "patch": "@@ -2709,9 +2709,12 @@ sched_analyze_2 (struct deps_desc *deps, rtx x, rtx_insn *insn)\n \treturn;\n       }\n \n-    /* Force pending stores to memory in case a trap handler needs them.  */\n+    /* Force pending stores to memory in case a trap handler needs them.\n+       Also force pending loads from memory; loads and stores can segfault\n+       and the signal handler won't be triggered if the trap insn was moved\n+       above load or store insn.  */\n     case TRAP_IF:\n-      flush_pending_lists (deps, insn, true, false);\n+      flush_pending_lists (deps, insn, true, true);\n       break;\n \n     case PREFETCH:"}]}