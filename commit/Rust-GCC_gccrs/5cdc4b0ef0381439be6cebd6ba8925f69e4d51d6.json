{"sha": "5cdc4b0ef0381439be6cebd6ba8925f69e4d51d6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWNkYzRiMGVmMDM4MTQzOWJlNmNlYmQ2YmE4OTI1ZjY5ZTRkNTFkNg==", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2016-12-16T20:27:51Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2016-12-16T20:27:51Z"}, "message": "re PR fortran/78662 ([F03] Incorrect parsing of quotes in the char-literal-constant of the DT data descriptor)\n\n2016-12-16  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n\n\tPR fortran/78622\n\t* io.c (format_lex): Continue of string delimiter seen.\n\n\t* io/transfer.c (get_dt_format): New static function to alloc\n\tand set the DT iotype string, handling doubled quotes.\n\t(formatted_transfer_scalar_read,\n\tformatted_transfer_scalar_write): Use new function.\n\n\t* gfortran.dg/dtio_20.f03: New test.\n\nFrom-SVN: r243765", "tree": {"sha": "1c1292043826432403d69b5a9ecd00fa24a8f2f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1c1292043826432403d69b5a9ecd00fa24a8f2f8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5cdc4b0ef0381439be6cebd6ba8925f69e4d51d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5cdc4b0ef0381439be6cebd6ba8925f69e4d51d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5cdc4b0ef0381439be6cebd6ba8925f69e4d51d6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5cdc4b0ef0381439be6cebd6ba8925f69e4d51d6/comments", "author": null, "committer": null, "parents": [{"sha": "c2d42d16195d87ad6fb063a0db0287ad197a972b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2d42d16195d87ad6fb063a0db0287ad197a972b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c2d42d16195d87ad6fb063a0db0287ad197a972b"}], "stats": {"total": 99, "additions": 82, "deletions": 17}, "files": [{"sha": "fba0d985b0dc313a5187d775267645aaf9d7ba27", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cdc4b0ef0381439be6cebd6ba8925f69e4d51d6/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cdc4b0ef0381439be6cebd6ba8925f69e4d51d6/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=5cdc4b0ef0381439be6cebd6ba8925f69e4d51d6", "patch": "@@ -1,3 +1,8 @@\n+2016-12-16  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR fortran/78622\n+\t* io.c (format_lex): Continue of string delimiter seen.\n+\n 2016-12-16  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR fortran/78757"}, {"sha": "8f4f26807171aa2cdf33d34bfdb38fc2b905f33d", "filename": "gcc/fortran/io.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cdc4b0ef0381439be6cebd6ba8925f69e4d51d6/gcc%2Ffortran%2Fio.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cdc4b0ef0381439be6cebd6ba8925f69e4d51d6/gcc%2Ffortran%2Fio.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fio.c?ref=5cdc4b0ef0381439be6cebd6ba8925f69e4d51d6", "patch": "@@ -486,12 +486,13 @@ format_lex (void)\n \t\t  if (c == delim)\n \t\t    {\n \t\t      c = next_char (NONSTRING);\n-\n \t\t      if (c == '\\0')\n \t\t\t{\n \t\t\t  token = FMT_END;\n \t\t\t  break;\n \t\t\t}\n+\t\t      if (c == delim)\n+\t\t\tcontinue;\n \t\t      unget_char ();\n \t\t      break;\n \t\t    }"}, {"sha": "5cfda764ca492757b176178e0b6278e0556cbc87", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cdc4b0ef0381439be6cebd6ba8925f69e4d51d6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cdc4b0ef0381439be6cebd6ba8925f69e4d51d6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5cdc4b0ef0381439be6cebd6ba8925f69e4d51d6", "patch": "@@ -1,3 +1,8 @@\n+2016-12-16  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR fortran/78622\n+\t* gfortran.dg/dtio_20.f03: New test.\n+\n 2016-12-16  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR fortran/78757"}, {"sha": "dce487256faa098e045b2af1a5cb3491d89e9611", "filename": "gcc/testsuite/gfortran.dg/dtio_20.f03", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cdc4b0ef0381439be6cebd6ba8925f69e4d51d6/gcc%2Ftestsuite%2Fgfortran.dg%2Fdtio_20.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cdc4b0ef0381439be6cebd6ba8925f69e4d51d6/gcc%2Ftestsuite%2Fgfortran.dg%2Fdtio_20.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdtio_20.f03?ref=5cdc4b0ef0381439be6cebd6ba8925f69e4d51d6", "patch": "@@ -0,0 +1,31 @@\n+MODULE m\n+  IMPLICIT NONE\n+  \n+  TYPE :: t\n+    CHARACTER :: c\n+  CONTAINS\n+    PROCEDURE :: write_formatted\n+    GENERIC :: WRITE(FORMATTED) => write_formatted\n+  END TYPE t\n+CONTAINS\n+  SUBROUTINE write_formatted(dtv, unit, iotype, v_list, iostat, iomsg)\n+    CLASS(t), INTENT(IN) :: dtv\n+    INTEGER, INTENT(IN) :: unit\n+    CHARACTER(*), INTENT(IN) :: iotype\n+    INTEGER, INTENT(IN) :: v_list(:)\n+    INTEGER, INTENT(OUT) :: iostat\n+    CHARACTER(*), INTENT(INOUT) :: iomsg\n+    \n+    WRITE (unit, \"(A)\", IOSTAT=iostat, IOMSG=iomsg) iotype\n+  END SUBROUTINE write_formatted\n+END MODULE m\n+\n+PROGRAM p\n+  USE m\n+  IMPLICIT NONE\n+  CHARACTER(25) :: str\n+  \n+  TYPE(t) :: x\n+  WRITE (str, \"(DT'a''b')\") x\n+  if (str.ne.\"DTa'b\") call abort\n+END PROGRAM p"}, {"sha": "bcd8cd3e24fb7f0e548c1e9bbf8968ca12ad6698", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cdc4b0ef0381439be6cebd6ba8925f69e4d51d6/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cdc4b0ef0381439be6cebd6ba8925f69e4d51d6/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=5cdc4b0ef0381439be6cebd6ba8925f69e4d51d6", "patch": "@@ -1,3 +1,11 @@\n+2016-12-16  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR fortran/78622\n+\t* io/transfer.c (get_dt_format): New static function to alloc\n+\tand set the DT iotype string, handling doubled quotes.\n+\t(formatted_transfer_scalar_read,\n+\tformatted_transfer_scalar_write): Use new function.\n+\n 2016-12-12  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* configure.ac: Call GCC_CHECK_LINKER_HWCAP."}, {"sha": "c90e8c5e480512e6e940f1d920fc51dbe162068f", "filename": "libgfortran/io/transfer.c", "status": "modified", "additions": 31, "deletions": 16, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cdc4b0ef0381439be6cebd6ba8925f69e4d51d6/libgfortran%2Fio%2Ftransfer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cdc4b0ef0381439be6cebd6ba8925f69e4d51d6/libgfortran%2Fio%2Ftransfer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Ftransfer.c?ref=5cdc4b0ef0381439be6cebd6ba8925f69e4d51d6", "patch": "@@ -1264,6 +1264,33 @@ require_numeric_type (st_parameter_dt *dtp, bt actual, const fnode *f)\n   return 1;\n }\n \n+static char *\n+get_dt_format (char *p, gfc_charlen_type *length)\n+{\n+  char delim = p[-1];  /* The delimiter is always the first character back.  */\n+  char c, *q, *res;\n+  gfc_charlen_type len = *length; /* This length already correct, less 'DT'.  */\n+\n+  res = q = xmalloc (len + 2);\n+\n+  /* Set the beginning of the string to 'DT', length adjusted below.  */\n+  *q++ = 'D';\n+  *q++ = 'T';\n+\n+  /* The string may contain doubled quotes so scan and skip as needed.  */\n+  for (; len > 0; len--)\n+    {\n+      c = *q++ = *p++;\n+      if (c == delim)\n+\tp++;  /* Skip the doubled delimiter.  */\n+    }\n+\n+  /* Adjust the string length by two now that we are done.  */\n+  *length += 2;\n+\n+  return res;\n+}\n+\n \n /* This function is in the main loop for a formatted data transfer\n    statement.  It would be natural to implement this as a coroutine\n@@ -1420,7 +1447,7 @@ formatted_transfer_scalar_read (st_parameter_dt *dtp, bt type, void *p, int kind\n \t  gfc_charlen_type child_iomsg_len;\n \t  int noiostat;\n \t  int *child_iostat = NULL;\n-\t  char *iotype = f->u.udf.string;\n+\t  char *iotype;\n \t  gfc_charlen_type iotype_len = f->u.udf.string_len;\n \n \t  /* Build the iotype string.  */\n@@ -1430,13 +1457,7 @@ formatted_transfer_scalar_read (st_parameter_dt *dtp, bt type, void *p, int kind\n \t      iotype = dt;\n \t    }\n \t  else\n-\t    {\n-\t      iotype_len += 2;\n-\t      iotype = xmalloc (iotype_len);\n-\t      iotype[0] = dt[0];\n-\t      iotype[1] = dt[1];\n-\t      memcpy (iotype + 2, f->u.udf.string, f->u.udf.string_len);\n-\t    }\n+\t    iotype = get_dt_format (f->u.udf.string, &iotype_len);\n \n \t  /* Set iostat, intent(out).  */\n \t  noiostat = 0;\n@@ -1890,7 +1911,7 @@ formatted_transfer_scalar_write (st_parameter_dt *dtp, bt type, void *p, int kin\n \t  gfc_charlen_type child_iomsg_len;\n \t  int noiostat;\n \t  int *child_iostat = NULL;\n-\t  char *iotype = f->u.udf.string;\n+\t  char *iotype;\n \t  gfc_charlen_type iotype_len = f->u.udf.string_len;\n \n \t  /* Build the iotype string.  */\n@@ -1900,13 +1921,7 @@ formatted_transfer_scalar_write (st_parameter_dt *dtp, bt type, void *p, int kin\n \t      iotype = dt;\n \t    }\n \t  else\n-\t    {\n-\t      iotype_len += 2;\n-\t      iotype = xmalloc (iotype_len);\n-\t      iotype[0] = dt[0];\n-\t      iotype[1] = dt[1];\n-\t      memcpy (iotype + 2, f->u.udf.string, f->u.udf.string_len);\n-\t    }\n+\t    iotype = get_dt_format (f->u.udf.string, &iotype_len);\n \n \t  /* Set iostat, intent(out).  */\n \t  noiostat = 0;"}]}