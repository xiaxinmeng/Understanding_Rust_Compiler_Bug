{"sha": "e11c48711128a8aff3938cf28954acf1b1cc0b62", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTExYzQ4NzExMTI4YThhZmYzOTM4Y2YyODk1NGFjZjFiMWNjMGI2Mg==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2019-06-27T09:42:39Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2019-06-27T09:42:39Z"}, "message": "PR libstdc++/91012 fixfilesystem_error::what() string\n\nWhen I refactored the filesystem_error code I changed it to only use the\nconstructor parameter in the what() string, instead of the string\nreturned by system_error::what(). That meant it no longer included the\ndescription of the error_code that system_error adds. This restores the\nprevious behaivour, as encouraged by the standard (\"Implementations\nshould include the system_error::what() string and the pathnames of\npath1 and path2 in the native format in the returned string\").\n\n\tPR libstdc++/91012\n\t* src/c++17/fs_path.cc (filesystem_error::_Impl): Use a string_view\n\tfor the what_arg parameters.\n\t(filesystem_error::filesystem_error): Pass system_error::what() to\n\tthe _Impl constructor.\n\t* testsuite/27_io/filesystem/filesystem_error/cons.cc: Ensure that\n\tfilesystem_error::what() contains system_error::what().\n\nFrom-SVN: r272739", "tree": {"sha": "a52f13388f07db6a0045d26e0e71e44bc6692057", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a52f13388f07db6a0045d26e0e71e44bc6692057"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e11c48711128a8aff3938cf28954acf1b1cc0b62", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e11c48711128a8aff3938cf28954acf1b1cc0b62", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e11c48711128a8aff3938cf28954acf1b1cc0b62", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e11c48711128a8aff3938cf28954acf1b1cc0b62/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4c4be718fb65f9b8dd06d83c6fa3f697a5369d52", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c4be718fb65f9b8dd06d83c6fa3f697a5369d52", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c4be718fb65f9b8dd06d83c6fa3f697a5369d52"}], "stats": {"total": 37, "additions": 24, "deletions": 13}, "files": [{"sha": "fd823af319aa2f893b7644e895b5684054bdf5c7", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e11c48711128a8aff3938cf28954acf1b1cc0b62/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e11c48711128a8aff3938cf28954acf1b1cc0b62/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=e11c48711128a8aff3938cf28954acf1b1cc0b62", "patch": "@@ -1,3 +1,13 @@\n+2019-06-27  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/91012\n+\t* src/c++17/fs_path.cc (filesystem_error::_Impl): Use a string_view\n+\tfor the what_arg parameters.\n+\t(filesystem_error::filesystem_error): Pass system_error::what() to\n+\tthe _Impl constructor.\n+\t* testsuite/27_io/filesystem/filesystem_error/cons.cc: Ensure that\n+\tfilesystem_error::what() contains system_error::what().\n+\n 2019-06-26  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* include/std/charconv (chars_format): Define bitmask type."}, {"sha": "14842452354e089febbe699e34badfaacb333fdb", "filename": "libstdc++-v3/src/c++17/fs_path.cc", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e11c48711128a8aff3938cf28954acf1b1cc0b62/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B17%2Ffs_path.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e11c48711128a8aff3938cf28954acf1b1cc0b62/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B17%2Ffs_path.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B17%2Ffs_path.cc?ref=e11c48711128a8aff3938cf28954acf1b1cc0b62", "patch": "@@ -1928,20 +1928,20 @@ fs::hash_value(const path& p) noexcept\n \n struct fs::filesystem_error::_Impl\n {\n-  _Impl(const string& what_arg, const path& p1, const path& p2)\n+  _Impl(string_view what_arg, const path& p1, const path& p2)\n   : path1(p1), path2(p2), what(make_what(what_arg, &p1, &p2))\n   { }\n \n-  _Impl(const string& what_arg, const path& p1)\n+  _Impl(string_view what_arg, const path& p1)\n   : path1(p1), path2(), what(make_what(what_arg, &p1, nullptr))\n   { }\n \n-  _Impl(const string& what_arg)\n+  _Impl(string_view what_arg)\n   : what(make_what(what_arg, nullptr, nullptr))\n   { }\n \n   static std::string\n-  make_what(const std::string& s, const path* p1, const path* p2)\n+  make_what(string_view s, const path* p1, const path* p2)\n   {\n     const std::string pstr1 = p1 ? p1->u8string() : std::string{};\n     const std::string pstr2 = p2 ? p2->u8string() : std::string{};\n@@ -1977,20 +1977,20 @@ template class std::__shared_ptr<const fs::filesystem_error::_Impl>;\n fs::filesystem_error::\n filesystem_error(const string& what_arg, error_code ec)\n : system_error(ec, what_arg),\n-  _M_impl(std::__make_shared<_Impl>(what_arg))\n+  _M_impl(std::__make_shared<_Impl>(system_error::what()))\n { }\n \n fs::filesystem_error::\n filesystem_error(const string& what_arg, const path& p1, error_code ec)\n : system_error(ec, what_arg),\n-  _M_impl(std::__make_shared<_Impl>(what_arg, p1))\n+  _M_impl(std::__make_shared<_Impl>(system_error::what(), p1))\n { }\n \n fs::filesystem_error::\n filesystem_error(const string& what_arg, const path& p1, const path& p2,\n \t\t error_code ec)\n : system_error(ec, what_arg),\n-  _M_impl(std::__make_shared<_Impl>(what_arg, p1, p2))\n+  _M_impl(std::__make_shared<_Impl>(system_error::what(), p1, p2))\n { }\n \n fs::filesystem_error::~filesystem_error() = default;"}, {"sha": "1644d3553399f83c9ade0d6d9a2e174c6d5555b7", "filename": "libstdc++-v3/testsuite/27_io/filesystem/filesystem_error/cons.cc", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e11c48711128a8aff3938cf28954acf1b1cc0b62/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Ffilesystem_error%2Fcons.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e11c48711128a8aff3938cf28954acf1b1cc0b62/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Ffilesystem_error%2Fcons.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Ffilesystem_error%2Fcons.cc?ref=e11c48711128a8aff3938cf28954acf1b1cc0b62", "patch": "@@ -36,9 +36,10 @@ test01()\n   const std::error_code ec = make_error_code(std::errc::is_a_directory);\n   const std::filesystem::path p1 = \"test/path/one\";\n   const std::filesystem::path p2 = \"/test/path/two\";\n+  std::system_error syserr(ec, str);\n \n   const filesystem_error e1(str, ec);\n-  VERIFY( contains(e1.what(), str) );\n+  VERIFY( contains(e1.what(), syserr.what()) );\n   VERIFY( !contains(e1.what(), \"[]\") ); // no \"empty path\" in the string\n   VERIFY( e1.path1().empty() );\n   VERIFY( e1.path2().empty() );\n@@ -47,23 +48,23 @@ test01()\n   const filesystem_error e2(str, p1, ec);\n   VERIFY( e2.path1() == p1 );\n   VERIFY( e2.path2().empty() );\n-  VERIFY( contains(e2.what(), str) );\n+  VERIFY( contains(e2.what(), syserr.what()) );\n   VERIFY( contains(e2.what(), p1.string()) );\n   VERIFY( !contains(e2.what(), \"[]\") );\n   VERIFY( e2.code() == ec );\n \n   const filesystem_error e3(str, std::filesystem::path{}, ec);\n   VERIFY( e3.path1().empty() );\n   VERIFY( e3.path2().empty() );\n-  VERIFY( contains(e3.what(), str) );\n+  VERIFY( contains(e3.what(), syserr.what()) );\n   VERIFY( contains(e3.what(), \"[]\") );\n   VERIFY( !contains(e3.what(), \"[] []\") );\n   VERIFY( e3.code() == ec );\n \n   const filesystem_error e4(str, p1, p2, ec);\n   VERIFY( e4.path1() == p1 );\n   VERIFY( e4.path2() == p2 );\n-  VERIFY( contains(e4.what(), str) );\n+  VERIFY( contains(e4.what(), syserr.what()) );\n   VERIFY( contains(e4.what(), p1.string()) );\n   VERIFY( contains(e4.what(), p2.string()) );\n   VERIFY( !contains(e4.what(), \"[]\") );\n@@ -72,15 +73,15 @@ test01()\n   const filesystem_error e5(str, p1, std::filesystem::path{}, ec);\n   VERIFY( e5.path1() == p1 );\n   VERIFY( e5.path2().empty() );\n-  VERIFY( contains(e5.what(), str) );\n+  VERIFY( contains(e5.what(), syserr.what()) );\n   VERIFY( contains(e5.what(), p1.string()) );\n   VERIFY( contains(e5.what(), \"[]\") );\n   VERIFY( e5.code() == ec );\n \n   const filesystem_error e6(str, std::filesystem::path{}, p2, ec);\n   VERIFY( e6.path1().empty() );\n   VERIFY( e6.path2() == p2 );\n-  VERIFY( contains(e6.what(), str) );\n+  VERIFY( contains(e6.what(), syserr.what()) );\n   VERIFY( contains(e6.what(), \"[]\") );\n   VERIFY( contains(e6.what(), p2.string()) );\n   VERIFY( e6.code() == ec );"}]}