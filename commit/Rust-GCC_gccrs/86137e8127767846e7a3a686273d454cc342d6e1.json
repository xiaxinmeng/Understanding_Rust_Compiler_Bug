{"sha": "86137e8127767846e7a3a686273d454cc342d6e1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODYxMzdlODEyNzc2Nzg0NmU3YTNhNjg2MjczZDQ1NGNjMzQyZDZlMQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely.gcc@gmail.com", "date": "2010-12-14T22:13:26Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2010-12-14T22:13:26Z"}, "message": "re PR libstdc++/46910 (std::shared_ptr requires public destructor for a class with friend deleter)\n\n2010-12-14  Jonathan Wakely  <jwakely.gcc@gmail.com>\n\n\tPR libstdc++/46910\n\t* include/bits/shared_ptr_base.h (_Sp_counted_deleter): Do not\n\tderive from _Sp_counted_ptr.\n\t* testsuite/20_util/shared_ptr/cons/46910.cc: New.\n\t* testsuite/20_util/shared_ptr/cons/43820.cc: Adjust.\n\t* testsuite/20_util/weak_ptr/comparison/cmp_neg.cc: Adjust.\n\nFrom-SVN: r167819", "tree": {"sha": "2e0d2414be5097b1fc5fde696391c485b6fb7da2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2e0d2414be5097b1fc5fde696391c485b6fb7da2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/86137e8127767846e7a3a686273d454cc342d6e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86137e8127767846e7a3a686273d454cc342d6e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86137e8127767846e7a3a686273d454cc342d6e1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86137e8127767846e7a3a686273d454cc342d6e1/comments", "author": null, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9ecfa8de88025917ab3442db65caf62abd46d538", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ecfa8de88025917ab3442db65caf62abd46d538", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ecfa8de88025917ab3442db65caf62abd46d538"}], "stats": {"total": 77, "additions": 65, "deletions": 12}, "files": [{"sha": "548a4ee88e3df53366d21d0c2f2db31c8b9e2d5b", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86137e8127767846e7a3a686273d454cc342d6e1/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86137e8127767846e7a3a686273d454cc342d6e1/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=86137e8127767846e7a3a686273d454cc342d6e1", "patch": "@@ -1,3 +1,12 @@\n+2010-12-14  Jonathan Wakely  <jwakely.gcc@gmail.com>\n+\n+\tPR libstdc++/46910\n+\t* include/bits/shared_ptr_base.h (_Sp_counted_deleter): Do not\n+\tderive from _Sp_counted_ptr.\n+\t* testsuite/20_util/shared_ptr/cons/46910.cc: New.\n+\t* testsuite/20_util/shared_ptr/cons/43820.cc: Adjust.\n+\t* testsuite/20_util/weak_ptr/comparison/cmp_neg.cc: Adjust.\n+\n 2010-12-13  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* config/abi/post/solaris2.8/baseline_symbols.txt: Regenerate."}, {"sha": "b3333576b2838301004e7ef6859924a6b3f31b60", "filename": "libstdc++-v3/include/bits/shared_ptr_base.h", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86137e8127767846e7a3a686273d454cc342d6e1/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fshared_ptr_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86137e8127767846e7a3a686273d454cc342d6e1/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fshared_ptr_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fshared_ptr_base.h?ref=86137e8127767846e7a3a686273d454cc342d6e1", "patch": "@@ -318,7 +318,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n \n   // Support for custom deleter and/or allocator\n   template<typename _Ptr, typename _Deleter, typename _Alloc, _Lock_policy _Lp>\n-    class _Sp_counted_deleter : public _Sp_counted_ptr<_Ptr, _Lp>\n+    class _Sp_counted_deleter : public _Sp_counted_base<_Lp>\n     {\n       typedef typename _Alloc::template\n \t  rebind<_Sp_counted_deleter>::other _My_alloc_type;\n@@ -334,21 +334,18 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n \t: _My_alloc_type(__a), _M_del(__d) { }\n       };\n \n-    protected:\n-      typedef _Sp_counted_ptr<_Ptr, _Lp> _Base_type;\n-\n     public:\n       // __d(__p) must not throw.\n       _Sp_counted_deleter(_Ptr __p, _Deleter __d)\n-      : _Base_type(__p), _M_del(__d, _Alloc()) { }\n+      : _M_ptr(__p), _M_del(__d, _Alloc()) { }\n \n       // __d(__p) must not throw.\n       _Sp_counted_deleter(_Ptr __p, _Deleter __d, const _Alloc& __a)\n-      : _Base_type(__p), _M_del(__d, __a) { }\n+      : _M_ptr(__p), _M_del(__d, __a) { }\n \n       virtual void\n       _M_dispose() // nothrow\n-      { _M_del._M_del(_Base_type::_M_ptr); }\n+      { _M_del._M_del(_M_ptr); }\n \n       virtual void\n       _M_destroy() // nothrow\n@@ -369,6 +366,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n       }\n \n     protected:\n+      _Ptr             _M_ptr;  // copy constructor must not throw\n       _My_Deleter      _M_del;  // copy constructor must not throw\n     };\n \n@@ -397,7 +395,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n       {\n \tvoid* __p = &_M_storage;\n \t::new (__p) _Tp();  // might throw\n-\t_Base_type::_Base_type::_M_ptr = static_cast<_Tp*>(__p);\n+\t_Base_type::_M_ptr = static_cast<_Tp*>(__p);\n       }\n \n       template<typename... _Args>\n@@ -407,7 +405,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n \t{\n \t  void* __p = &_M_storage;\n \t  ::new (__p) _Tp(std::forward<_Args>(__args)...);  // might throw\n-\t  _Base_type::_Base_type::_M_ptr = static_cast<_Tp*>(__p);\n+\t  _Base_type::_M_ptr = static_cast<_Tp*>(__p);\n \t}\n \n       // Override because the allocator needs to know the dynamic type"}, {"sha": "837c668efe9e688e57198615c9a5f8cdd82d5b2a", "filename": "libstdc++-v3/testsuite/20_util/shared_ptr/cons/43820.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86137e8127767846e7a3a686273d454cc342d6e1/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcons%2F43820.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86137e8127767846e7a3a686273d454cc342d6e1/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcons%2F43820.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcons%2F43820.cc?ref=86137e8127767846e7a3a686273d454cc342d6e1", "patch": "@@ -32,9 +32,9 @@ void test01()\n {\n   X* px = 0;\n   std::shared_ptr<X> p1(px);   // { dg-error \"here\" }\n-  // { dg-error \"incomplete\" \"\" { target *-*-* } 765 }\n+  // { dg-error \"incomplete\" \"\" { target *-*-* } 763 }\n \n   std::shared_ptr<X> p9(ap());  // { dg-error \"here\" }\n-  // { dg-error \"incomplete\" \"\" { target *-*-* } 857 }\n+  // { dg-error \"incomplete\" \"\" { target *-*-* } 855 }\n \n }"}, {"sha": "d8275198c2e7ca4e5d26ed7e354a273be8a8e4b9", "filename": "libstdc++-v3/testsuite/20_util/shared_ptr/cons/46910.cc", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86137e8127767846e7a3a686273d454cc342d6e1/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcons%2F46910.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86137e8127767846e7a3a686273d454cc342d6e1/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcons%2F46910.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcons%2F46910.cc?ref=86137e8127767846e7a3a686273d454cc342d6e1", "patch": "@@ -0,0 +1,46 @@\n+// { dg-options \"-std=gnu++0x\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2010 Free Software Foundation\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// 20.9.10.2 Class template shared_ptr [util.smartptr.shared]\n+\n+#include <memory>\n+#include <testsuite_hooks.h>\n+\n+// 20.9.10.2.1 shared_ptr constructors [util.smartptr.shared.const]\n+\n+struct deleter;\n+\n+class A\n+{\n+  ~A() = default;\n+  friend struct deleter;\n+};\n+\n+struct deleter\n+{\n+  void operator()(A* a) const;\n+};\n+\n+void\n+test01()\n+{\n+  std::shared_ptr<A> p(new A, deleter());\n+}\n+"}, {"sha": "357e32f97e9b7916bed0a2786b38623e600f8107", "filename": "libstdc++-v3/testsuite/20_util/weak_ptr/comparison/cmp_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86137e8127767846e7a3a686273d454cc342d6e1/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fweak_ptr%2Fcomparison%2Fcmp_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86137e8127767846e7a3a686273d454cc342d6e1/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fweak_ptr%2Fcomparison%2Fcmp_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fweak_ptr%2Fcomparison%2Fcmp_neg.cc?ref=86137e8127767846e7a3a686273d454cc342d6e1", "patch": "@@ -43,7 +43,7 @@ main()\n }\n \n // { dg-warning \"note\" \"\" { target *-*-* } 352 }\n-// { dg-warning \"note\" \"\" { target *-*-* } 1085 }\n+// { dg-warning \"note\" \"\" { target *-*-* } 1083 }\n // { dg-warning \"note\" \"\" { target *-*-* } 465 }\n // { dg-warning \"note\" \"\" { target *-*-* } 585 }\n // { dg-warning \"note\" \"\" { target *-*-* } 1048 }"}]}