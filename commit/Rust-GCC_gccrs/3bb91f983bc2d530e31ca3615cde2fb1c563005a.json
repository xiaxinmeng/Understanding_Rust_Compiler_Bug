{"sha": "3bb91f983bc2d530e31ca3615cde2fb1c563005a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2JiOTFmOTgzYmMyZDUzMGUzMWNhMzYxNWNkZTJmYjFjNTYzMDA1YQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2016-06-22T09:47:02Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2016-06-22T09:47:02Z"}, "message": "lib.ads: Code cleanup.\n\n2016-06-22  Arnaud Charlet  <charlet@adacore.com>\n\n\t* lib.ads: Code cleanup.\n\t* inline.adb: Type refinement for a counter variable.\n\t* lib-xref-spark_specific.adb (Add_SPARK_File): removal of no-op code.\n\tCode cleanup.\n\nFrom-SVN: r237682", "tree": {"sha": "3cd96afc28e73ca4467c5b9af0d037b6fc26cf56", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3cd96afc28e73ca4467c5b9af0d037b6fc26cf56"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3bb91f983bc2d530e31ca3615cde2fb1c563005a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3bb91f983bc2d530e31ca3615cde2fb1c563005a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3bb91f983bc2d530e31ca3615cde2fb1c563005a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3bb91f983bc2d530e31ca3615cde2fb1c563005a/comments", "author": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f9405b6348ba821cdc6a9d4c2e0e03050b16a0f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9405b6348ba821cdc6a9d4c2e0e03050b16a0f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f9405b6348ba821cdc6a9d4c2e0e03050b16a0f9"}], "stats": {"total": 72, "additions": 30, "deletions": 42}, "files": [{"sha": "851424db2ab39415a0c045cdb6cfa82fec0d24bd", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bb91f983bc2d530e31ca3615cde2fb1c563005a/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bb91f983bc2d530e31ca3615cde2fb1c563005a/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=3bb91f983bc2d530e31ca3615cde2fb1c563005a", "patch": "@@ -1,3 +1,10 @@\n+2016-06-22  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* lib.ads: Code cleanup.\n+\t* inline.adb: Type refinement for a counter variable.\n+\t* lib-xref-spark_specific.adb (Add_SPARK_File): removal of no-op code.\n+\tCode cleanup.\n+\n 2016-06-21  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/decl.c (set_nonaliased_component_on_array_type): New"}, {"sha": "d205636be03ce3279c2686c287a8422794d4181d", "filename": "gcc/ada/inline.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bb91f983bc2d530e31ca3615cde2fb1c563005a/gcc%2Fada%2Finline.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bb91f983bc2d530e31ca3615cde2fb1c563005a/gcc%2Fada%2Finline.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finline.adb?ref=3bb91f983bc2d530e31ca3615cde2fb1c563005a", "patch": "@@ -3868,7 +3868,7 @@ package body Inline is\n    --  the body is an internal error.\n \n    procedure Instantiate_Bodies is\n-      J    : Int;\n+      J    : Nat;\n       Info : Pending_Body_Info;\n \n    begin"}, {"sha": "7e131f02e27d0a0d5e3130ef1e4c4d54ed6f4e79", "filename": "gcc/ada/lib-xref-spark_specific.adb", "status": "modified", "additions": 2, "deletions": 21, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bb91f983bc2d530e31ca3615cde2fb1c563005a/gcc%2Fada%2Flib-xref-spark_specific.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bb91f983bc2d530e31ca3615cde2fb1c563005a/gcc%2Fada%2Flib-xref-spark_specific.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-xref-spark_specific.adb?ref=3bb91f983bc2d530e31ca3615cde2fb1c563005a", "patch": "@@ -201,27 +201,6 @@ package body SPARK_Specific is\n          end loop;\n       end;\n \n-      --  Remove those scopes previously marked for removal\n-\n-      declare\n-         Scope_Id : Scope_Index;\n-\n-      begin\n-         Scope_Id := From;\n-         for Index in From .. SPARK_Scope_Table.Last loop\n-            declare\n-               S : SPARK_Scope_Record renames SPARK_Scope_Table.Table (Index);\n-            begin\n-               if S.Scope_Num /= 0 then\n-                  SPARK_Scope_Table.Table (Scope_Id) := S;\n-                  Scope_Id := Scope_Id + 1;\n-               end if;\n-            end;\n-         end loop;\n-\n-         SPARK_Scope_Table.Set_Last (Scope_Id - 1);\n-      end;\n-\n       --  Make entry for new file in file table\n \n       Get_Name_String (Reference_Name (File));\n@@ -236,6 +215,8 @@ package body SPARK_Specific is\n       then\n          Get_Name_String (Reference_Name (Main_Source_File));\n          Unit_File_Name := new String'(Name_Buffer (1 .. Name_Len));\n+      else\n+         Unit_File_Name := null;\n       end if;\n \n       SPARK_File_Table.Append ("}, {"sha": "4f8ffee3a297af7ba25d9b6ca5ccb3199464c3ca", "filename": "gcc/ada/lib.ads", "status": "modified", "additions": 20, "deletions": 20, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bb91f983bc2d530e31ca3615cde2fb1c563005a/gcc%2Fada%2Flib.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bb91f983bc2d530e31ca3615cde2fb1c563005a/gcc%2Fada%2Flib.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib.ads?ref=3bb91f983bc2d530e31ca3615cde2fb1c563005a", "patch": "@@ -418,25 +418,25 @@ package Lib is\n       --  but tools can use this status (e.g. ASIS looking at the generated\n       --  tree) to know that a fatal error was detected.\n \n-   function Cunit             (U : Unit_Number_Type) return Node_Id;\n-   function Cunit_Entity      (U : Unit_Number_Type) return Entity_Id;\n-   function Dependency_Num    (U : Unit_Number_Type) return Nat;\n-   function Dynamic_Elab      (U : Unit_Number_Type) return Boolean;\n-   function Error_Location    (U : Unit_Number_Type) return Source_Ptr;\n-   function Expected_Unit     (U : Unit_Number_Type) return Unit_Name_Type;\n-   function Fatal_Error       (U : Unit_Number_Type) return Fatal_Type;\n-   function Generate_Code     (U : Unit_Number_Type) return Boolean;\n-   function Ident_String      (U : Unit_Number_Type) return Node_Id;\n-   function Has_RACW          (U : Unit_Number_Type) return Boolean;\n-   function Loading           (U : Unit_Number_Type) return Boolean;\n-   function Main_CPU          (U : Unit_Number_Type) return Int;\n-   function Main_Priority     (U : Unit_Number_Type) return Int;\n-   function Munit_Index       (U : Unit_Number_Type) return Nat;\n-   function No_Elab_Code_All  (U : Unit_Number_Type) return Boolean;\n-   function OA_Setting        (U : Unit_Number_Type) return Character;\n-   function Source_Index      (U : Unit_Number_Type) return Source_File_Index;\n-   function Unit_File_Name    (U : Unit_Number_Type) return File_Name_Type;\n-   function Unit_Name         (U : Unit_Number_Type) return Unit_Name_Type;\n+   function Cunit            (U : Unit_Number_Type) return Node_Id;\n+   function Cunit_Entity     (U : Unit_Number_Type) return Entity_Id;\n+   function Dependency_Num   (U : Unit_Number_Type) return Nat;\n+   function Dynamic_Elab     (U : Unit_Number_Type) return Boolean;\n+   function Error_Location   (U : Unit_Number_Type) return Source_Ptr;\n+   function Expected_Unit    (U : Unit_Number_Type) return Unit_Name_Type;\n+   function Fatal_Error      (U : Unit_Number_Type) return Fatal_Type;\n+   function Generate_Code    (U : Unit_Number_Type) return Boolean;\n+   function Ident_String     (U : Unit_Number_Type) return Node_Id;\n+   function Has_RACW         (U : Unit_Number_Type) return Boolean;\n+   function Loading          (U : Unit_Number_Type) return Boolean;\n+   function Main_CPU         (U : Unit_Number_Type) return Int;\n+   function Main_Priority    (U : Unit_Number_Type) return Int;\n+   function Munit_Index      (U : Unit_Number_Type) return Nat;\n+   function No_Elab_Code_All (U : Unit_Number_Type) return Boolean;\n+   function OA_Setting       (U : Unit_Number_Type) return Character;\n+   function Source_Index     (U : Unit_Number_Type) return Source_File_Index;\n+   function Unit_File_Name   (U : Unit_Number_Type) return File_Name_Type;\n+   function Unit_Name        (U : Unit_Number_Type) return Unit_Name_Type;\n    --  Get value of named field from given units table entry\n \n    procedure Set_Cunit            (U : Unit_Number_Type; N : Node_Id);\n@@ -485,7 +485,7 @@ package Lib is\n \n    function Exact_Source_Name (Loc : Source_Ptr) return String;\n    --  Return name of entity at location Loc exactly as written in the source.\n-   --  this includes copying the wide character encodings exactly as they were\n+   --  This includes copying the wide character encodings exactly as they were\n    --  used in the source, so the caller must be aware of the possibility of\n    --  such encodings.\n "}]}