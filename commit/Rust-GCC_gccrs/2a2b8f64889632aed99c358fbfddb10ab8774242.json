{"sha": "2a2b8f64889632aed99c358fbfddb10ab8774242", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmEyYjhmNjQ4ODk2MzJhZWQ5OWMzNThmYmZkZGIxMGFiODc3NDI0Mg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-02-16T15:16:48Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-02-16T15:16:48Z"}, "message": "re PR tree-optimization/69820 (Test miscompiled with -O3 option)\n\n\tPR tree-optimization/69820\n\t* tree-vect-patterns.c (type_conversion_p): Return false if\n\t*orig_type is unsigned single precision or boolean.\n\t(vect_recog_dot_prod_pattern, vect_recog_widen_mult_pattern):\n\tFormatting fix.\n\n\t* gcc.dg/vect/pr69820.c: New test.\n\nCo-Authored-By: Richard Biener <rguenther@suse.de>\n\nFrom-SVN: r233457", "tree": {"sha": "81ba9a735fe10da57d5391dad67dbe86cf870450", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/81ba9a735fe10da57d5391dad67dbe86cf870450"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2a2b8f64889632aed99c358fbfddb10ab8774242", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a2b8f64889632aed99c358fbfddb10ab8774242", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a2b8f64889632aed99c358fbfddb10ab8774242", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a2b8f64889632aed99c358fbfddb10ab8774242/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5aa7d94c2e02552095cd56bd36ca19db4cb58c9a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5aa7d94c2e02552095cd56bd36ca19db4cb58c9a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5aa7d94c2e02552095cd56bd36ca19db4cb58c9a"}], "stats": {"total": 76, "additions": 66, "deletions": 10}, "files": [{"sha": "0fcc1ee73ee34ff36548247b267fbc27e57fa576", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a2b8f64889632aed99c358fbfddb10ab8774242/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a2b8f64889632aed99c358fbfddb10ab8774242/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2a2b8f64889632aed99c358fbfddb10ab8774242", "patch": "@@ -1,3 +1,12 @@\n+2016-02-16  Jakub Jelinek  <jakub@redhat.com>\n+\t    Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/69820\n+\t* tree-vect-patterns.c (type_conversion_p): Return false if\n+\t*orig_type is unsigned single precision or boolean.\n+\t(vect_recog_dot_prod_pattern, vect_recog_widen_mult_pattern):\n+\tFormatting fix.\n+\n 2016-02-16  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR rtl-optimization/69764"}, {"sha": "242ed9717e33cf29feb691706bcef2e6265310c0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a2b8f64889632aed99c358fbfddb10ab8774242/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a2b8f64889632aed99c358fbfddb10ab8774242/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2a2b8f64889632aed99c358fbfddb10ab8774242", "patch": "@@ -1,3 +1,8 @@\n+2016-02-16  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/69820\n+\t* gcc.dg/vect/pr69820.c: New test.\n+\n 2016-02-16  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/69776"}, {"sha": "be24e4fa9a1343e4308bfd967f1ccfdd3549db5c", "filename": "gcc/testsuite/gcc.dg/vect/pr69820.c", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a2b8f64889632aed99c358fbfddb10ab8774242/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr69820.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a2b8f64889632aed99c358fbfddb10ab8774242/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr69820.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr69820.c?ref=2a2b8f64889632aed99c358fbfddb10ab8774242", "patch": "@@ -0,0 +1,35 @@\n+/* PR tree-optimization/69820 */\n+\n+#include \"tree-vect.h\"\n+\n+unsigned int a[100];\n+long long int b[100];\n+unsigned short c[100];\n+\n+__attribute__((noinline, noclone)) void\n+foo (void)\n+{\n+  int i;\n+  for (i = 0; i < 100; ++i)\n+    b[i] = a[i] * (c[i] * (_Bool) c[i]);\n+}\n+\n+int\n+main ()\n+{\n+  int i;\n+  if (__SIZEOF_INT__ * __CHAR_BIT__ != 32)\n+    return 0;\n+  check_vect ();\n+  for (i = 0; i < 100; ++i)\n+    {\n+      a[i] = 3489456818U;\n+      b[i] = 0x1eadbeefbeefdeadLL;\n+      c[i] = 38364;\n+    }\n+  foo ();\n+  for (i = 0; i < 100; ++i)\n+    if (b[i] != 0xed446af8U)\n+      __builtin_abort ();\n+  return 0;\n+}"}, {"sha": "95ce38d5f0423d61b002cfb4c5b187acd5ac0c7a", "filename": "gcc/tree-vect-patterns.c", "status": "modified", "additions": 17, "deletions": 10, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a2b8f64889632aed99c358fbfddb10ab8774242/gcc%2Ftree-vect-patterns.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a2b8f64889632aed99c358fbfddb10ab8774242/gcc%2Ftree-vect-patterns.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-patterns.c?ref=2a2b8f64889632aed99c358fbfddb10ab8774242", "patch": "@@ -171,6 +171,13 @@ type_conversion_p (tree name, gimple *use_stmt, bool check_sign,\n   if (!*def_stmt)\n     return false;\n \n+  if (dt == vect_internal_def)\n+    {\n+      stmt_vec_info def_vinfo = vinfo_for_stmt (*def_stmt);\n+      if (STMT_VINFO_IN_PATTERN_P (def_vinfo))\n+\treturn false;\n+    }\n+\n   if (!is_gimple_assign (*def_stmt))\n     return false;\n \n@@ -334,8 +341,8 @@ vect_recog_dot_prod_pattern (vec<gimple *> *stmts, tree *type_in,\n       stmt = last_stmt;\n \n       if (type_conversion_p (oprnd0, stmt, true, &half_type, &def_stmt,\n-                               &promotion)\n-         && promotion)\n+\t\t\t     &promotion)\n+\t  && promotion)\n         {\n           stmt = def_stmt;\n           oprnd0 = gimple_assign_rhs1 (stmt);\n@@ -395,13 +402,13 @@ vect_recog_dot_prod_pattern (vec<gimple *> *stmts, tree *type_in,\n           || !types_compatible_p (TREE_TYPE (oprnd1), prod_type))\n         return NULL;\n       if (!type_conversion_p (oprnd0, stmt, true, &half_type0, &def_stmt,\n-                                &promotion)\n-          || !promotion)\n+\t\t\t      &promotion)\n+\t  || !promotion)\n         return NULL;\n       oprnd00 = gimple_assign_rhs1 (def_stmt);\n       if (!type_conversion_p (oprnd1, stmt, true, &half_type1, &def_stmt,\n-                                &promotion)\n-          || !promotion)\n+\t\t\t      &promotion)\n+\t  || !promotion)\n         return NULL;\n       oprnd01 = gimple_assign_rhs1 (def_stmt);\n       if (!types_compatible_p (half_type0, half_type1))\n@@ -891,10 +898,10 @@ vect_recog_widen_mult_pattern (vec<gimple *> *stmts,\n \t  oprnd = &oprnd1;\n \t}\n \n-        tree old_oprnd = gimple_assign_rhs1 (def_stmt);\n-\ttree new_oprnd = make_ssa_name (half_type0);\n-\tnew_stmt = gimple_build_assign (new_oprnd, NOP_EXPR, old_oprnd);\n-        *oprnd = new_oprnd;\n+      tree old_oprnd = gimple_assign_rhs1 (def_stmt);\n+      tree new_oprnd = make_ssa_name (half_type0);\n+      new_stmt = gimple_build_assign (new_oprnd, NOP_EXPR, old_oprnd);\n+      *oprnd = new_oprnd;\n     }\n \n   /* Handle unsigned case.  Look for"}]}