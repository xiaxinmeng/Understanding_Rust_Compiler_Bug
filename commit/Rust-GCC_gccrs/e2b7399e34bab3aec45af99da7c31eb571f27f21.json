{"sha": "e2b7399e34bab3aec45af99da7c31eb571f27f21", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTJiNzM5OWUzNGJhYjNhZWM0NWFmOTlkYTdjMzFlYjU3MWYyN2YyMQ==", "commit": {"author": {"name": "Dmitriy Anisimkov", "email": "anisimko@adacore.com", "date": "2020-03-23T10:16:51Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-06-12T08:29:25Z"}, "message": "[Ada] Don't correct socket timeout on Windows Server 2019\n\n2020-06-12  Dmitriy Anisimkov  <anisimko@adacore.com>\n\ngcc/ada/\n\n\t* socket.c (__gnat_minus_500ms): Use GetVersionEx to detect\n\tWindows Server version.\n\t* libgnat/g-sothco.ads (Minus_500ms_Windows_Timeout): Remade to\n\tBoolean constant.\n\t* libgnat/g-socket.adb (Set_Socket_Option): Use\n\tMinus_500ms_Windows_Timeout constant instead of function call.", "tree": {"sha": "d1e4e4020baed15565a0bd63c0edd3063e160cbe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d1e4e4020baed15565a0bd63c0edd3063e160cbe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e2b7399e34bab3aec45af99da7c31eb571f27f21", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2b7399e34bab3aec45af99da7c31eb571f27f21", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e2b7399e34bab3aec45af99da7c31eb571f27f21", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2b7399e34bab3aec45af99da7c31eb571f27f21/comments", "author": {"login": "anisimkov", "id": 15864134, "node_id": "MDQ6VXNlcjE1ODY0MTM0", "avatar_url": "https://avatars.githubusercontent.com/u/15864134?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anisimkov", "html_url": "https://github.com/anisimkov", "followers_url": "https://api.github.com/users/anisimkov/followers", "following_url": "https://api.github.com/users/anisimkov/following{/other_user}", "gists_url": "https://api.github.com/users/anisimkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/anisimkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anisimkov/subscriptions", "organizations_url": "https://api.github.com/users/anisimkov/orgs", "repos_url": "https://api.github.com/users/anisimkov/repos", "events_url": "https://api.github.com/users/anisimkov/events{/privacy}", "received_events_url": "https://api.github.com/users/anisimkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5052a270c0f685998a3456d87d441a59bc1d67ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5052a270c0f685998a3456d87d441a59bc1d67ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5052a270c0f685998a3456d87d441a59bc1d67ee"}], "stats": {"total": 41, "additions": 29, "deletions": 12}, "files": [{"sha": "4c6566b5133a9e81c3cb07ae9dc5a9d8729ef7e7", "filename": "gcc/ada/libgnat/g-socket.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2b7399e34bab3aec45af99da7c31eb571f27f21/gcc%2Fada%2Flibgnat%2Fg-socket.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2b7399e34bab3aec45af99da7c31eb571f27f21/gcc%2Fada%2Flibgnat%2Fg-socket.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fg-socket.adb?ref=e2b7399e34bab3aec45af99da7c31eb571f27f21", "patch": "@@ -2722,7 +2722,7 @@ package body GNAT.Sockets is\n                --  Old windows versions actual timeout is 500 ms + the given\n                --  value (unless it is 0).\n \n-               if Minus_500ms_Windows_Timeout /= 0 then\n+               if Minus_500ms_Windows_Timeout then\n                   if U4 > 500 then\n                      U4 := U4 - 500;\n "}, {"sha": "cc7bccdcb453f26d9ac3247e152aa29fdb9d15ac", "filename": "gcc/ada/libgnat/g-sothco.ads", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2b7399e34bab3aec45af99da7c31eb571f27f21/gcc%2Fada%2Flibgnat%2Fg-sothco.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2b7399e34bab3aec45af99da7c31eb571f27f21/gcc%2Fada%2Flibgnat%2Fg-sothco.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fg-sothco.ads?ref=e2b7399e34bab3aec45af99da7c31eb571f27f21", "patch": "@@ -451,12 +451,19 @@ package GNAT.Sockets.Thin_Common is\n    renames Short_To_Network;\n    --  Symmetric operation\n \n-   function Minus_500ms_Windows_Timeout return C.int;\n+   Minus_500ms_Windows_Timeout : constant Boolean;\n    --  Microsoft Windows desktop older then 8.0 and Microsoft Windows Server\n    --  older than 2019 need timeout correction for 500 milliseconds. This\n-   --  routine returns 1 for such versions.\n+   --  constant is True for such versions.\n \n private\n+\n+   function Get_Minus_500ms_Timeout return C.int\n+     with Import, Convention => C, External_Name => \"__gnat_minus_500ms\";\n+\n+   Minus_500ms_Windows_Timeout : constant Boolean :=\n+                                   Get_Minus_500ms_Timeout /= 0;\n+\n    pragma Import (C, Get_Socket_From_Set, \"__gnat_get_socket_from_set\");\n    pragma Import (C, Is_Socket_In_Set, \"__gnat_is_socket_in_set\");\n    pragma Import (C, Last_Socket_In_Set, \"__gnat_last_socket_in_set\");\n@@ -488,6 +495,4 @@ private\n    pragma Import (C, Hostent_H_Length,   \"__gnat_hostent_h_length\");\n    pragma Import (C, Hostent_H_Addr,     \"__gnat_hostent_h_addr\");\n \n-   pragma Import (C, Minus_500ms_Windows_Timeout, \"__gnat_minus_500ms\");\n-\n end GNAT.Sockets.Thin_Common;"}, {"sha": "dd73c6ab6135cfa14da4f693149c2d09c152a07f", "filename": "gcc/ada/socket.c", "status": "modified", "additions": 19, "deletions": 7, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2b7399e34bab3aec45af99da7c31eb571f27f21/gcc%2Fada%2Fsocket.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2b7399e34bab3aec45af99da7c31eb571f27f21/gcc%2Fada%2Fsocket.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsocket.c?ref=e2b7399e34bab3aec45af99da7c31eb571f27f21", "patch": "@@ -801,14 +801,26 @@ const char * __gnat_gai_strerror(int errcode) {\n \n int __gnat_minus_500ms() {\n #if defined (_WIN32)\n-  // Windows 8.0 and newer do not need 500 millisecond socket timeout\n-  // correction.\n-  // We do not know the Windows server version without socket timeout\n-  // correction for now. When we know, we can add the call for\n-  // IsWindowsVersionOrGreater(10, 0, ????) into condition.\n-  return !IsWindows8OrGreater() || IsWindowsServer();\n+  // Windows Server 2019 and Windows 8.0 do not need 500 millisecond socket\n+  // timeout correction.\n+  if (IsWindowsServer()) {\n+    OSVERSIONINFO osvi;\n+    ZeroMemory(&osvi, sizeof(OSVERSIONINFO));\n+    osvi.dwOSVersionInfoSize = sizeof(OSVERSIONINFO);\n+    // Documentation proposes to use IsWindowsVersionOrGreater(10, 0, 17763)\n+    // but it does not compare by the build number (last parameter). See\n+    // regression test for RC03-012 in fixedbugs, there are some code to\n+    // investigate Windows version API behavior.\n+    GetVersionEx(&osvi);\n+    return osvi.dwMajorVersion < 10\n+        || osvi.dwMajorVersion == 10\n+        && osvi.dwMinorVersion == 0\n+        && osvi.dwBuildNumber < 17763;\n+  } else {\n+    return !IsWindows8OrGreater();\n+  }\n #else\n-   return 0;\n+  return 0;\n #endif\n }\n "}]}