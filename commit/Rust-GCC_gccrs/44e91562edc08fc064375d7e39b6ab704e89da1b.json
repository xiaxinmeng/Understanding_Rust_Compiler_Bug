{"sha": "44e91562edc08fc064375d7e39b6ab704e89da1b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDRlOTE1NjJlZGMwOGZjMDY0Mzc1ZDdlMzliNmFiNzA0ZTg5ZGExYg==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2004-08-22T17:55:51Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2004-08-22T17:55:51Z"}, "message": "locale_facets.tcc (num_put<>::do_put(bool)): Cast to a signed type, long according to the resolution of DR 359.\n\n2004-08-22  Paolo Carlini  <pcarlini@suse.de>\n\n\t* include/bits/locale_facets.tcc (num_put<>::do_put(bool)): Cast\n\tto a signed type, long according to the resolution of DR 359.\n\t* testsuite/22_locale/num_put/put/char/9.cc: New.\n\t* testsuite/22_locale/num_put/put/wchar_t/9.cc: New.\n\n\t* include/bits/locale_facets.tcc (num_put<>::do_put(const void*)):\n\tSimplify a bit: no need to clear showpos.\n\nFrom-SVN: r86382", "tree": {"sha": "a5ee913b37e8296fee3796e2b3f62c56f7681640", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a5ee913b37e8296fee3796e2b3f62c56f7681640"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/44e91562edc08fc064375d7e39b6ab704e89da1b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44e91562edc08fc064375d7e39b6ab704e89da1b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/44e91562edc08fc064375d7e39b6ab704e89da1b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44e91562edc08fc064375d7e39b6ab704e89da1b/comments", "author": null, "committer": null, "parents": [{"sha": "efd610a684483259ed93aeb592373181416eb81c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/efd610a684483259ed93aeb592373181416eb81c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/efd610a684483259ed93aeb592373181416eb81c"}], "stats": {"total": 141, "additions": 137, "deletions": 4}, "files": [{"sha": "1c45d9a26031ed5ba1a4da1eccb22b97fad875f7", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44e91562edc08fc064375d7e39b6ab704e89da1b/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44e91562edc08fc064375d7e39b6ab704e89da1b/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=44e91562edc08fc064375d7e39b6ab704e89da1b", "patch": "@@ -1,3 +1,13 @@\n+2004-08-22  Paolo Carlini  <pcarlini@suse.de>\n+\n+\t* include/bits/locale_facets.tcc (num_put<>::do_put(bool)): Cast\n+\tto a signed type, long according to the resolution of DR 359.\n+\t* testsuite/22_locale/num_put/put/char/9.cc: New.\n+\t* testsuite/22_locale/num_put/put/wchar_t/9.cc: New.\n+\n+\t* include/bits/locale_facets.tcc (num_put<>::do_put(const void*)):\n+\tSimplify a bit: no need to clear showpos.\n+\n 2004-08-21  Paolo Carlini  <pcarlini@suse.de>\n \n \t* include/bits/char_traits.h (struct _Char_traits_match): Remove,"}, {"sha": "1aea83aea14505960adc4c834309e63bc0390151", "filename": "libstdc++-v3/include/bits/locale_facets.tcc", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44e91562edc08fc064375d7e39b6ab704e89da1b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44e91562edc08fc064375d7e39b6ab704e89da1b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc?ref=44e91562edc08fc064375d7e39b6ab704e89da1b", "patch": "@@ -1160,8 +1160,8 @@ namespace std\n       const ios_base::fmtflags __flags = __io.flags();\n       if ((__flags & ios_base::boolalpha) == 0)\n         {\n-          unsigned long __uv = __v;\n-          __s = _M_insert_int(__s, __io, __fill, __uv);\n+          const long __l = __v;\n+          __s = _M_insert_int(__s, __io, __fill, __l);\n         }\n       else\n         {\n@@ -1238,8 +1238,7 @@ namespace std\n            const void* __v) const\n     {\n       const ios_base::fmtflags __flags = __io.flags();\n-      const ios_base::fmtflags __fmt = ~(ios_base::showpos\n-\t\t\t\t\t | ios_base::basefield\n+      const ios_base::fmtflags __fmt = ~(ios_base::basefield\n \t\t\t\t\t | ios_base::uppercase\n \t\t\t\t\t | ios_base::internal);\n       __io.flags(__flags & __fmt | (ios_base::hex | ios_base::showbase));"}, {"sha": "c5016e603cc68e8c2eb9e2a47f62137b2592641c", "filename": "libstdc++-v3/testsuite/22_locale/num_put/put/char/9.cc", "status": "added", "additions": 62, "deletions": 0, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44e91562edc08fc064375d7e39b6ab704e89da1b/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnum_put%2Fput%2Fchar%2F9.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44e91562edc08fc064375d7e39b6ab704e89da1b/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnum_put%2Fput%2Fchar%2F9.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnum_put%2Fput%2Fchar%2F9.cc?ref=44e91562edc08fc064375d7e39b6ab704e89da1b", "patch": "@@ -0,0 +1,62 @@\n+// 2004-08-22  Paolo Carlini  <pcarlini@suse.de>\n+\n+// Copyright (C) 2004 Free Software Foundation\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 22.2.2.2.1  num_put members\n+\n+#include <locale>\n+#include <sstream>\n+#include <testsuite_hooks.h>\n+\n+// According to 22.2.2.2.2, p23 and the resolution of DR 359\n+// val must be casted to a signed type: this can be revealed\n+// by ios_base::showpos, which is effective only for signed\n+// types (also see libstdc++/15565 about this).\n+void test01()\n+{\n+  using namespace std;\n+  bool test __attribute__((unused)) = true;\n+\n+  // basic construction\n+  locale loc_c = locale::classic();\n+\n+  // sanity check the data is correct.\n+  const string empty;\n+\n+  // cache the num_put facet\n+  ostringstream oss;\n+  oss.imbue(loc_c);\n+  const num_put<char>& np = use_facet<num_put<char> >(oss.getloc());\n+\n+  bool b = true;\n+  np.put(oss.rdbuf(), oss, ' ', b);\n+  VERIFY( oss.str() == \"1\" );\n+\n+  oss.str(empty);\n+  oss.clear();\n+  oss.setf(ios_base::showpos);\n+  np.put(oss.rdbuf(), oss, ' ', b);\n+  VERIFY( oss.str() == \"+1\" );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "5c326112adcd023955013b7ffee49a74aeb28983", "filename": "libstdc++-v3/testsuite/22_locale/num_put/put/wchar_t/9.cc", "status": "added", "additions": 62, "deletions": 0, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44e91562edc08fc064375d7e39b6ab704e89da1b/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnum_put%2Fput%2Fwchar_t%2F9.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44e91562edc08fc064375d7e39b6ab704e89da1b/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnum_put%2Fput%2Fwchar_t%2F9.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnum_put%2Fput%2Fwchar_t%2F9.cc?ref=44e91562edc08fc064375d7e39b6ab704e89da1b", "patch": "@@ -0,0 +1,62 @@\n+// 2004-08-22  Paolo Carlini  <pcarlini@suse.de>\n+\n+// Copyright (C) 2004 Free Software Foundation\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 22.2.2.2.1  num_put members\n+\n+#include <locale>\n+#include <sstream>\n+#include <testsuite_hooks.h>\n+\n+// According to 22.2.2.2.2, p23 and the resolution of DR 359\n+// val must be casted to a signed type: this can be revealed\n+// by ios_base::showpos, which is effective only for signed\n+// types (also see libstdc++/15565 about this).\n+void test01()\n+{\n+  using namespace std;\n+  bool test __attribute__((unused)) = true;\n+\n+  // basic construction\n+  locale loc_c = locale::classic();\n+\n+  // sanity check the data is correct.\n+  const wstring empty;\n+\n+  // cache the num_put facet\n+  wostringstream oss;\n+  oss.imbue(loc_c);\n+  const num_put<wchar_t>& np = use_facet<num_put<wchar_t> >(oss.getloc());\n+\n+  bool b = true;\n+  np.put(oss.rdbuf(), oss, L' ', b);\n+  VERIFY( oss.str() == L\"1\" );\n+\n+  oss.str(empty);\n+  oss.clear();\n+  oss.setf(ios_base::showpos);\n+  np.put(oss.rdbuf(), oss, L' ', b);\n+  VERIFY( oss.str() == L\"+1\" );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}]}