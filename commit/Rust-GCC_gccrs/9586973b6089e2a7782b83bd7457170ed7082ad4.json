{"sha": "9586973b6089e2a7782b83bd7457170ed7082ad4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTU4Njk3M2I2MDg5ZTJhNzc4MmI4M2JkNzQ1NzE3MGVkNzA4MmFkNA==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2015-04-13T14:02:26Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2015-04-13T14:02:26Z"}, "message": "i386.md (*bmi2_umul<mode><dwi>3_1): Merge from *bmi2_umulsidi3_1 and *bmi2_umulditi3_1 using DWIH mode iterator.\n\n\t* config/i386/i386.md (*bmi2_umul<mode><dwi>3_1): Merge from\n\t*bmi2_umulsidi3_1 and *bmi2_umulditi3_1 using DWIH mode iterator.\n\nFrom-SVN: r222052", "tree": {"sha": "d5e36d64e7245343bd311224f37c23c3580f9c06", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d5e36d64e7245343bd311224f37c23c3580f9c06"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9586973b6089e2a7782b83bd7457170ed7082ad4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9586973b6089e2a7782b83bd7457170ed7082ad4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9586973b6089e2a7782b83bd7457170ed7082ad4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9586973b6089e2a7782b83bd7457170ed7082ad4/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c4ef2f8634669376c85304a5ebe181edf4f73a4c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4ef2f8634669376c85304a5ebe181edf4f73a4c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4ef2f8634669376c85304a5ebe181edf4f73a4c"}], "stats": {"total": 51, "additions": 19, "deletions": 32}, "files": [{"sha": "e846816e09d1165b80213855a0195046dd9c5819", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9586973b6089e2a7782b83bd7457170ed7082ad4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9586973b6089e2a7782b83bd7457170ed7082ad4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9586973b6089e2a7782b83bd7457170ed7082ad4", "patch": "@@ -1,3 +1,8 @@\n+2015-04-13  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.md (*bmi2_umul<mode><dwi>3_1): Merge from\n+\t*bmi2_umulsidi3_1 and *bmi2_umulditi3_1 using DWIH mode iterator.\n+\n 2015-04-13  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/65204"}, {"sha": "729db75584e7ca946809d23348a4ce77481ee499", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 14, "deletions": 32, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9586973b6089e2a7782b83bd7457170ed7082ad4/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9586973b6089e2a7782b83bd7457170ed7082ad4/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=9586973b6089e2a7782b83bd7457170ed7082ad4", "patch": "@@ -6818,41 +6818,23 @@\n \t      (clobber (reg:CC FLAGS_REG))])]\n   \"TARGET_QIMODE_MATH\")\n \n-(define_insn \"*bmi2_umulditi3_1\"\n-  [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n-\t(mult:DI\n-\t  (match_operand:DI 2 \"nonimmediate_operand\" \"%d\")\n-\t  (match_operand:DI 3 \"nonimmediate_operand\" \"rm\")))\n-   (set (match_operand:DI 1 \"register_operand\" \"=r\")\n-\t(truncate:DI\n-\t  (lshiftrt:TI\n-\t    (mult:TI (zero_extend:TI (match_dup 2))\n-\t\t     (zero_extend:TI (match_dup 3)))\n-\t    (const_int 64))))]\n-  \"TARGET_64BIT && TARGET_BMI2\n-   && !(MEM_P (operands[1]) && MEM_P (operands[2]))\"\n-  \"mulx\\t{%3, %0, %1|%1, %0, %3}\"\n-  [(set_attr \"type\" \"imulx\")\n-   (set_attr \"prefix\" \"vex\")\n-   (set_attr \"mode\" \"DI\")])\n-\n-(define_insn \"*bmi2_umulsidi3_1\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n-\t(mult:SI\n-\t  (match_operand:SI 2 \"nonimmediate_operand\" \"%d\")\n-\t  (match_operand:SI 3 \"nonimmediate_operand\" \"rm\")))\n-   (set (match_operand:SI 1 \"register_operand\" \"=r\")\n-\t(truncate:SI\n-\t  (lshiftrt:DI\n-\t    (mult:DI (zero_extend:DI (match_dup 2))\n-\t\t     (zero_extend:DI (match_dup 3)))\n-\t    (const_int 32))))]\n-  \"!TARGET_64BIT && TARGET_BMI2\n+(define_insn \"*bmi2_umul<mode><dwi>3_1\"\n+  [(set (match_operand:DWIH 0 \"register_operand\" \"=r\")\n+\t(mult:DWIH\n+\t  (match_operand:DWIH 2 \"nonimmediate_operand\" \"%d\")\n+\t  (match_operand:DWIH 3 \"nonimmediate_operand\" \"rm\")))\n+   (set (match_operand:DWIH 1 \"register_operand\" \"=r\")\n+\t(truncate:DWIH\n+\t  (lshiftrt:<DWI>\n+\t    (mult:<DWI> (zero_extend:<DWI> (match_dup 2))\n+\t\t\t(zero_extend:<DWI> (match_dup 3)))\n+\t    (match_operand:QI 4 \"const_int_operand\" \"n\"))))]\n+  \"TARGET_BMI2 && INTVAL (operands[4]) == <MODE_SIZE> * BITS_PER_UNIT\n    && !(MEM_P (operands[1]) && MEM_P (operands[2]))\"\n   \"mulx\\t{%3, %0, %1|%1, %0, %3}\"\n   [(set_attr \"type\" \"imulx\")\n    (set_attr \"prefix\" \"vex\")\n-   (set_attr \"mode\" \"SI\")])\n+   (set_attr \"mode\" \"<MODE>\")])\n \n (define_insn \"*umul<mode><dwi>3_1\"\n   [(set (match_operand:<DWI> 0 \"register_operand\" \"=r,A\")\n@@ -6902,7 +6884,7 @@\n {\n   split_double_mode (<DWI>mode, &operands[0], 1, &operands[3], &operands[4]);\n \n-  operands[5] = GEN_INT (GET_MODE_BITSIZE (<MODE>mode));\n+  operands[5] = GEN_INT (<MODE_SIZE> * BITS_PER_UNIT);\n })\n \n (define_insn \"*mul<mode><dwi>3_1\""}]}