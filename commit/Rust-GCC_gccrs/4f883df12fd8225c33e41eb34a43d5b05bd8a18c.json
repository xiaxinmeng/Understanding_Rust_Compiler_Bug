{"sha": "4f883df12fd8225c33e41eb34a43d5b05bd8a18c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGY4ODNkZjEyZmQ4MjI1YzMzZTQxZWIzNGE0M2Q1YjA1YmQ4YTE4Yw==", "commit": {"author": {"name": "Ulrich Weigand", "email": "uweigand@gcc.gnu.org", "date": "2013-11-14T18:30:19Z"}, "committer": {"name": "Ulrich Weigand", "email": "uweigand@gcc.gnu.org", "date": "2013-11-14T18:30:19Z"}, "message": "Forgot to add file in last commit.\n\nFrom-SVN: r204802", "tree": {"sha": "ea9be288c6c7207046a70f94d49166dc787036d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ea9be288c6c7207046a70f94d49166dc787036d8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4f883df12fd8225c33e41eb34a43d5b05bd8a18c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f883df12fd8225c33e41eb34a43d5b05bd8a18c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f883df12fd8225c33e41eb34a43d5b05bd8a18c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f883df12fd8225c33e41eb34a43d5b05bd8a18c/comments", "author": null, "committer": null, "parents": [{"sha": "8c8b21e4f737fdf0e75fcc4a414eee0d4ce56113", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c8b21e4f737fdf0e75fcc4a414eee0d4ce56113", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c8b21e4f737fdf0e75fcc4a414eee0d4ce56113"}], "stats": {"total": 54, "additions": 54, "deletions": 0}, "files": [{"sha": "32561736077bbdcb08df7e5ab5803e004152171b", "filename": "gcc/testsuite/g++.dg/eh/ppc64-sighandle-cr.C", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f883df12fd8225c33e41eb34a43d5b05bd8a18c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fppc64-sighandle-cr.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f883df12fd8225c33e41eb34a43d5b05bd8a18c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fppc64-sighandle-cr.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fppc64-sighandle-cr.C?ref=4f883df12fd8225c33e41eb34a43d5b05bd8a18c", "patch": "@@ -0,0 +1,54 @@\n+// { dg-do run { target { powerpc64*-*-linux* } } }\n+// { dg-options \"-fexceptions -fnon-call-exceptions\" }\n+\n+#include <signal.h>\n+#include <stdlib.h>\n+#include <fenv.h>\n+\n+#define SET_CR(R,V) __asm__ __volatile__ (\"mtcrf %0,%1\" : : \"n\" (1<<(7-R)), \"r\" (V<<(4*(7-R))) : \"cr\" #R)\n+#define GET_CR(R) ({ int tmp; __asm__ __volatile__ (\"mfcr %0\" : \"=r\" (tmp)); (tmp >> 4*(7-R)) & 15; })\n+\n+void sighandler (int signo, siginfo_t * si, void * uc)\n+{\n+  SET_CR(2, 3);\n+  SET_CR(3, 2);\n+  SET_CR(4, 1);\n+\n+  throw 0;\n+}\n+\n+float test (float a, float b) __attribute__ ((__noinline__));\n+float test (float a, float b)\n+{\n+  float x;\n+  asm (\"mtcrf %1,%2\" : \"=f\" (x) : \"n\" (1 << (7-3)), \"r\" (0), \"0\" (b) : \"cr3\");\n+  return a / x;\n+}\n+\n+int main ()\n+{\n+  struct sigaction sa;\n+  int status;\n+\n+  sa.sa_sigaction = sighandler;\n+  sa.sa_flags = SA_SIGINFO;\n+\n+  status = sigaction (SIGFPE, & sa, NULL);\n+\n+  feenableexcept (FE_DIVBYZERO);\n+\n+  SET_CR(2, 6);\n+  SET_CR(3, 9);\n+  SET_CR(4, 12);\n+\n+  try {\n+    test (1, 0);\n+  }\n+  catch (...) {\n+    return GET_CR(2) != 6 || GET_CR(3) != 9 || GET_CR(4) != 12;\n+  }\n+\n+  return 1;\n+}\n+\n+"}]}