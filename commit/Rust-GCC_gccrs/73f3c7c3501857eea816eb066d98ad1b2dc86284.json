{"sha": "73f3c7c3501857eea816eb066d98ad1b2dc86284", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzNmM2M3YzM1MDE4NTdlZWE4MTZlYjA2NmQ5OGFkMWIyZGM4NjI4NA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-04-11T10:19:56Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-04-11T10:19:56Z"}, "message": "(frame_size): Now a union.\n\n(DECL_ALIGN, DECL_FRAME_SIZE, DECL_FUNCTION_CODE): Access proper\nfield of frame_size union.\n(DECL_SET_FUNCTION_CODE): Simplified; retained for compatibility.\n\nFrom-SVN: r7024", "tree": {"sha": "b06f4a36943e5e656375d2ae8a2831983bae1ce8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b06f4a36943e5e656375d2ae8a2831983bae1ce8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/73f3c7c3501857eea816eb066d98ad1b2dc86284", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73f3c7c3501857eea816eb066d98ad1b2dc86284", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73f3c7c3501857eea816eb066d98ad1b2dc86284", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73f3c7c3501857eea816eb066d98ad1b2dc86284/comments", "author": null, "committer": null, "parents": [{"sha": "969d0d3c37b98787ec0afa056c8c65182ba509d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/969d0d3c37b98787ec0afa056c8c65182ba509d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/969d0d3c37b98787ec0afa056c8c65182ba509d9"}], "stats": {"total": 16, "additions": 9, "deletions": 7}, "files": [{"sha": "c79f576239384e0d28109376d6afe381a566af8c", "filename": "gcc/tree.h", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73f3c7c3501857eea816eb066d98ad1b2dc86284/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73f3c7c3501857eea816eb066d98ad1b2dc86284/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=73f3c7c3501857eea816eb066d98ad1b2dc86284", "patch": "@@ -771,7 +771,7 @@ struct tree_type\n    Need not be constant.  */\n #define DECL_SIZE(NODE) ((NODE)->decl.size)\n /* Holds the alignment required for the datum.  */\n-#define DECL_ALIGN(NODE) ((NODE)->decl.frame_size)\n+#define DECL_ALIGN(NODE) ((NODE)->decl.frame_size.u)\n /* Holds the machine mode corresponding to the declaration of a variable or\n    field.  Always equal to TYPE_MODE (TREE_TYPE (decl)) except for a\n    FIELD_DECL.  */\n@@ -789,13 +789,11 @@ struct tree_type\n #define DECL_SAVED_INSNS(NODE) ((NODE)->decl.saved_insns.r)\n /* For FUNCTION_DECL, if it is inline,\n    holds the size of the stack frame, as an integer.  */\n-#define DECL_FRAME_SIZE(NODE) ((NODE)->decl.frame_size)\n+#define DECL_FRAME_SIZE(NODE) ((NODE)->decl.frame_size.i)\n /* For FUNCTION_DECL, if it is built-in,\n    this identifies which built-in operation it is.  */\n-#define DECL_FUNCTION_CODE(NODE) \\\n- ((enum built_in_function) (NODE)->decl.frame_size)\n-#define DECL_SET_FUNCTION_CODE(NODE,VAL) \\\n- ((NODE)->decl.frame_size = (int) (VAL))\n+#define DECL_FUNCTION_CODE(NODE) ((NODE)->decl.frame_size.f)\n+#define DECL_SET_FUNCTION_CODE(NODE,VAL) ((NODE)->decl.frame_size.f = (VAL))\n /* For a FIELD_DECL, holds the size of the member as an integer.  */\n #define DECL_FIELD_SIZE(NODE) ((NODE)->decl.saved_insns.i)\n \n@@ -955,7 +953,11 @@ struct tree_decl\n   /* For a FUNCTION_DECL, if inline, this is the size of frame needed.\n      If built-in, this is the code for which built-in function.\n      For other kinds of decls, this is DECL_ALIGN.  */\n-  int frame_size;\n+  union {\n+    int i;\n+    unsigned int u;\n+    enum built_in_function f;\n+  } frame_size;\n   /* For FUNCTION_DECLs: points to insn that constitutes its definition\n      on the permanent obstack.  For any other kind of decl, this is the\n      alignment.  */"}]}