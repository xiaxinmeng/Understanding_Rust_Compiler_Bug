{"sha": "270c60bb5f93889717d18a7835069897a7ce3e16", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjcwYzYwYmI1ZjkzODg5NzE3ZDE4YTc4MzUwNjk4OTdhN2NlM2UxNg==", "commit": {"author": {"name": "Daniel Berlin", "email": "dberlin@dberlin.org", "date": "2007-04-07T23:08:23Z"}, "committer": {"name": "Daniel Berlin", "email": "dberlin@gcc.gnu.org", "date": "2007-04-07T23:08:23Z"}, "message": "2007-04-07  Daniel Berlin  <dberlin@dberlin.org>\n\n\tRevert change removing staticp.\n\nFrom-SVN: r123650", "tree": {"sha": "52566fdbb0b084676aa3532c776e0d3c48a44aae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/52566fdbb0b084676aa3532c776e0d3c48a44aae"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/270c60bb5f93889717d18a7835069897a7ce3e16", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/270c60bb5f93889717d18a7835069897a7ce3e16", "html_url": "https://github.com/Rust-GCC/gccrs/commit/270c60bb5f93889717d18a7835069897a7ce3e16", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/270c60bb5f93889717d18a7835069897a7ce3e16/comments", "author": {"login": "dberlin", "id": 324715, "node_id": "MDQ6VXNlcjMyNDcxNQ==", "avatar_url": "https://avatars.githubusercontent.com/u/324715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dberlin", "html_url": "https://github.com/dberlin", "followers_url": "https://api.github.com/users/dberlin/followers", "following_url": "https://api.github.com/users/dberlin/following{/other_user}", "gists_url": "https://api.github.com/users/dberlin/gists{/gist_id}", "starred_url": "https://api.github.com/users/dberlin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dberlin/subscriptions", "organizations_url": "https://api.github.com/users/dberlin/orgs", "repos_url": "https://api.github.com/users/dberlin/repos", "events_url": "https://api.github.com/users/dberlin/events{/privacy}", "received_events_url": "https://api.github.com/users/dberlin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ee57a66148bae672e53312950c296ef81294f064", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee57a66148bae672e53312950c296ef81294f064", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee57a66148bae672e53312950c296ef81294f064"}], "stats": {"total": 68, "additions": 62, "deletions": 6}, "files": [{"sha": "019d8fd499af2d1c87c846b9f418b1d95d9ff09d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/270c60bb5f93889717d18a7835069897a7ce3e16/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/270c60bb5f93889717d18a7835069897a7ce3e16/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=270c60bb5f93889717d18a7835069897a7ce3e16", "patch": "@@ -1,3 +1,7 @@\n+2007-04-07  Daniel Berlin  <dberlin@dberlin.org>\n+\n+\tRevert change removing staticp.\n+\n 2007-04-07  Anatoly Sokolov <aesok@post.ru>\n \n \tPR target/30289"}, {"sha": "8f71e6916ed7ce0c879bdd1979bb18523f04fd36", "filename": "gcc/c-common.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/270c60bb5f93889717d18a7835069897a7ce3e16/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/270c60bb5f93889717d18a7835069897a7ce3e16/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=270c60bb5f93889717d18a7835069897a7ce3e16", "patch": "@@ -4294,6 +4294,15 @@ c_expand_body (tree fndecl)\n \t\t\t\tdecl_fini_priority_lookup (fndecl));\n }\n \n+/* Hook used by staticp to handle language-specific tree codes.  */\n+\n+tree\n+c_staticp (tree exp)\n+{\n+  return (TREE_CODE (exp) == COMPOUND_LITERAL_EXPR\n+\t  && TREE_STATIC (COMPOUND_LITERAL_EXPR_DECL (exp))\n+\t  ? exp : NULL);\n+}\n \f\n \n /* Given a boolean expression ARG, return a tree representing an increment"}, {"sha": "b128e31a0085da7d0d57d4c9a43e313bbd58d209", "filename": "gcc/c-common.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/270c60bb5f93889717d18a7835069897a7ce3e16/gcc%2Fc-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/270c60bb5f93889717d18a7835069897a7ce3e16/gcc%2Fc-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.h?ref=270c60bb5f93889717d18a7835069897a7ce3e16", "patch": "@@ -825,6 +825,8 @@ extern bool vector_types_convertible_p (tree t1, tree t2, bool emit_lax_note);\n extern rtx c_expand_expr (tree, rtx, enum machine_mode, int, rtx *);\n extern void c_expand_body (tree);\n \n+extern tree c_staticp (tree);\n+\n extern void init_c_lex (void);\n \n extern void c_cpp_builtins (cpp_reader *);"}, {"sha": "f3f0867e958b23ca61214895449c50b27d802902", "filename": "gcc/c-objc-common.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/270c60bb5f93889717d18a7835069897a7ce3e16/gcc%2Fc-objc-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/270c60bb5f93889717d18a7835069897a7ce3e16/gcc%2Fc-objc-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-objc-common.h?ref=270c60bb5f93889717d18a7835069897a7ce3e16", "patch": "@@ -56,6 +56,8 @@ extern void c_initialize_diagnostics (diagnostic_context *);\n #define LANG_HOOKS_FINISH_INCOMPLETE_DECL c_finish_incomplete_decl\n #undef LANG_HOOKS_REDUCE_BIT_FIELD_OPERATIONS\n #define LANG_HOOKS_REDUCE_BIT_FIELD_OPERATIONS true\n+#undef LANG_HOOKS_STATICP\n+#define LANG_HOOKS_STATICP c_staticp\n #undef LANG_HOOKS_NO_BODY_BLOCKS\n #define LANG_HOOKS_NO_BODY_BLOCKS true\n #undef LANG_HOOKS_WARN_UNUSED_GLOBAL_DECL"}, {"sha": "32f6829bce8a9c5f98733e5931824b9a913a70e5", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/270c60bb5f93889717d18a7835069897a7ce3e16/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/270c60bb5f93889717d18a7835069897a7ce3e16/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=270c60bb5f93889717d18a7835069897a7ce3e16", "patch": "@@ -1,3 +1,7 @@\n+2007-04-07  Daniel Berlin  <dberlin@dberlin.org>\n+\n+\tRevert change removing staticp.\n+\n 2007-04-06  Daniel Berlin  <dberlin@dberlin.org>\n \n \t* cp-objcp-common.c (cxx_staticp): Remove."}, {"sha": "af8eb94cf4945e61d90ecbd410cc0c633aea4e22", "filename": "gcc/cp/cp-objcp-common.c", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/270c60bb5f93889717d18a7835069897a7ce3e16/gcc%2Fcp%2Fcp-objcp-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/270c60bb5f93889717d18a7835069897a7ce3e16/gcc%2Fcp%2Fcp-objcp-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-objcp-common.c?ref=270c60bb5f93889717d18a7835069897a7ce3e16", "patch": "@@ -200,6 +200,21 @@ cxx_types_compatible_p (tree x, tree y)\n   return 0;\n }\n \n+tree\n+cxx_staticp (tree arg)\n+{\n+  switch (TREE_CODE (arg))\n+    {\n+    case BASELINK:\n+      return staticp (BASELINK_FUNCTIONS (arg));\n+\n+    default:\n+      break;\n+    }\n+  \n+  return NULL_TREE;\n+}\n+\n /* Stubs to keep c-opts.c happy.  */\n void\n push_file_scope (void)"}, {"sha": "23e1f0ffff1f2d77586240edfffced7dcb16a354", "filename": "gcc/cp/cp-objcp-common.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/270c60bb5f93889717d18a7835069897a7ce3e16/gcc%2Fcp%2Fcp-objcp-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/270c60bb5f93889717d18a7835069897a7ce3e16/gcc%2Fcp%2Fcp-objcp-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-objcp-common.h?ref=270c60bb5f93889717d18a7835069897a7ce3e16", "patch": "@@ -59,6 +59,8 @@ extern tree objcp_tsubst_copy_and_build (tree, tree, tsubst_flags_t,\n #define LANG_HOOKS_EXPAND_DECL c_expand_decl\n #undef LANG_HOOKS_PARSE_FILE\n #define LANG_HOOKS_PARSE_FILE c_common_parse_file\n+#undef LANG_HOOKS_STATICP\n+#define LANG_HOOKS_STATICP cxx_staticp\n #undef LANG_HOOKS_DUP_LANG_SPECIFIC_DECL\n #define LANG_HOOKS_DUP_LANG_SPECIFIC_DECL cxx_dup_lang_specific_decl\n #undef LANG_HOOKS_SET_DECL_ASSEMBLER_NAME"}, {"sha": "3b3821ef2575368bdf9e045d1a69e60df20f5353", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/270c60bb5f93889717d18a7835069897a7ce3e16/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/270c60bb5f93889717d18a7835069897a7ce3e16/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=270c60bb5f93889717d18a7835069897a7ce3e16", "patch": "@@ -4816,6 +4816,7 @@ extern bool cp_var_mod_type_p\t\t\t(tree, tree);\n extern void cxx_initialize_diagnostics\t\t(struct diagnostic_context *);\n extern int cxx_types_compatible_p\t\t(tree, tree);\n extern void init_shadowed_var_for_decl\t\t(void);\n+extern tree cxx_staticp                         (tree);\n \n /* in cp-gimplify.c */\n extern int cp_gimplify_expr\t\t\t(tree *, tree *, tree *);"}, {"sha": "004b3c56f42f1eb018a8b4efd3f8629845894a3e", "filename": "gcc/langhooks-def.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/270c60bb5f93889717d18a7835069897a7ce3e16/gcc%2Flanghooks-def.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/270c60bb5f93889717d18a7835069897a7ce3e16/gcc%2Flanghooks-def.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flanghooks-def.h?ref=270c60bb5f93889717d18a7835069897a7ce3e16", "patch": "@@ -49,6 +49,7 @@ extern tree lhd_return_tree (tree);\n extern tree lhd_return_null_tree_v (void);\n extern tree lhd_return_null_tree (tree);\n extern tree lhd_do_nothing_iii_return_null_tree (int, int, int);\n+extern tree lhd_staticp (tree);\n extern void lhd_print_tree_nothing (FILE *, tree, int);\n extern const char *lhd_decl_printable_name (tree, int);\n extern const char *lhd_dwarf_name (tree, int);\n@@ -109,6 +110,7 @@ extern void lhd_omp_firstprivatize_type_sizes (struct gimplify_omp_ctx *,\n #define LANG_HOOKS_EXPAND_EXPR\t\tlhd_expand_expr\n #define LANG_HOOKS_EXPAND_DECL\t\tlhd_expand_decl\n #define LANG_HOOKS_FINISH_INCOMPLETE_DECL lhd_do_nothing_t\n+#define LANG_HOOKS_STATICP\t\tlhd_staticp\n #define LANG_HOOKS_DUP_LANG_SPECIFIC_DECL lhd_do_nothing_t\n #define LANG_HOOKS_SET_DECL_ASSEMBLER_NAME lhd_set_decl_assembler_name\n #define LANG_HOOKS_REDUCE_BIT_FIELD_OPERATIONS false\n@@ -294,6 +296,7 @@ extern tree lhd_make_node (enum tree_code);\n   LANG_HOOKS_EXPAND_DECL, \\\n   LANG_HOOKS_FINISH_INCOMPLETE_DECL, \\\n   LANG_HOOKS_MARK_ADDRESSABLE, \\\n+  LANG_HOOKS_STATICP, \\\n   LANG_HOOKS_DUP_LANG_SPECIFIC_DECL, \\\n   LANG_HOOKS_SET_DECL_ASSEMBLER_NAME, \\\n   LANG_HOOKS_REDUCE_BIT_FIELD_OPERATIONS, \\"}, {"sha": "919f05dea7d0c6a993539fd8808bea07d2cf14db", "filename": "gcc/langhooks.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/270c60bb5f93889717d18a7835069897a7ce3e16/gcc%2Flanghooks.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/270c60bb5f93889717d18a7835069897a7ce3e16/gcc%2Flanghooks.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flanghooks.c?ref=270c60bb5f93889717d18a7835069897a7ce3e16", "patch": "@@ -117,6 +117,14 @@ lhd_print_tree_nothing (FILE * ARG_UNUSED (file),\n {\n }\n \n+/* Called from staticp.  */\n+\n+tree\n+lhd_staticp (tree ARG_UNUSED (exp))\n+{\n+  return NULL;\n+}\n+\n /* Called from check_global_declarations.  */\n \n bool"}, {"sha": "f0220fc91c3607d2e858bdecf405168f21fef35d", "filename": "gcc/langhooks.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/270c60bb5f93889717d18a7835069897a7ce3e16/gcc%2Flanghooks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/270c60bb5f93889717d18a7835069897a7ce3e16/gcc%2Flanghooks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flanghooks.h?ref=270c60bb5f93889717d18a7835069897a7ce3e16", "patch": "@@ -324,6 +324,9 @@ struct lang_hooks\n      successful.  */\n   bool (*mark_addressable) (tree);\n \n+  /* Hook called by staticp for language-specific tree codes.  */\n+  tree (*staticp) (tree);\n+\n   /* Replace the DECL_LANG_SPECIFIC data, which may be NULL, of the\n      DECL_NODE with a newly GC-allocated copy.  */\n   void (*dup_lang_specific_decl) (tree);"}, {"sha": "0ea18b2f700fed1375f8d0cd7e9a4f15ec78daee", "filename": "gcc/tree.c", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/270c60bb5f93889717d18a7835069897a7ce3e16/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/270c60bb5f93889717d18a7835069897a7ce3e16/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=270c60bb5f93889717d18a7835069897a7ce3e16", "patch": "@@ -1986,7 +1986,10 @@ staticp (tree arg)\n       return arg;\n \n     case COMPONENT_REF:\n-      gcc_assert (TREE_CODE (TREE_OPERAND (arg, 1)) == FIELD_DECL);\n+      /* If the thing being referenced is not a field, then it is\n+\t something language specific.  */\n+      if (TREE_CODE (TREE_OPERAND (arg, 1)) != FIELD_DECL)\n+\treturn (*lang_hooks.staticp) (arg);\n \n       /* If we are referencing a bitfield, we can't evaluate an\n \t ADDR_EXPR at compile time and so it isn't a constant.  */\n@@ -2012,10 +2015,11 @@ staticp (tree arg)\n \treturn false;\n \n     default:\n-      /* All language specific tree codes should have been lowered by\n-\t now. */\n-      gcc_assert_lowered (arg);\n-      return NULL;\n+      if ((unsigned int) TREE_CODE (arg)\n+\t  >= (unsigned int) LAST_AND_UNUSED_TREE_CODE)\n+\treturn lang_hooks.staticp (arg);\n+      else\n+\treturn NULL;\n     }\n }\n \f"}, {"sha": "64efe7c60fe1d855791cbddb4b13720cbf4646c4", "filename": "gcc/tree.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/270c60bb5f93889717d18a7835069897a7ce3e16/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/270c60bb5f93889717d18a7835069897a7ce3e16/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=270c60bb5f93889717d18a7835069897a7ce3e16", "patch": "@@ -921,7 +921,6 @@ extern void omp_clause_range_check_failed (const tree, const char *, int,\n \n #endif\n \n-#define gcc_assert_lowered(NODE) gcc_assert (TREE_CODE (NODE) <= LAST_AND_UNUSED_TREE_CODE)\n #define TREE_BLOCK(NODE)\t\t*(tree_block (NODE))\n \n #include \"tree-check.h\""}]}