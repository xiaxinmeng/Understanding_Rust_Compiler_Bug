{"sha": "4d20c9591561bea6f51240d350303169773c2a2a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGQyMGM5NTkxNTYxYmVhNmY1MTI0MGQzNTAzMDMxNjk3NzNjMmEyYQ==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2013-07-05T10:26:21Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-07-05T10:26:21Z"}, "message": "gnat_rm.texi: Document that -gnatR and -gnatD cannot be used together.\n\n2013-07-05  Robert Dewar  <dewar@adacore.com>\n\n\t* gnat_rm.texi: Document that -gnatR and -gnatD cannot be used\n\ttogether.\n\t* switch-c.adb: Do not allow -gnatD and -gnatR to both be\n\tspecified.\n\nFrom-SVN: r200701", "tree": {"sha": "a580298a6c7abde16fb802e2b7b58ebffbe79807", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a580298a6c7abde16fb802e2b7b58ebffbe79807"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4d20c9591561bea6f51240d350303169773c2a2a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d20c9591561bea6f51240d350303169773c2a2a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d20c9591561bea6f51240d350303169773c2a2a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d20c9591561bea6f51240d350303169773c2a2a/comments", "author": null, "committer": null, "parents": [{"sha": "a1390a6ef6adec0f9abf2b41de88275bd3bd228d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1390a6ef6adec0f9abf2b41de88275bd3bd228d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a1390a6ef6adec0f9abf2b41de88275bd3bd228d"}], "stats": {"total": 56, "additions": 56, "deletions": 0}, "files": [{"sha": "66c293ba5e9577ff8b2a0e7452a0b00561cd3559", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d20c9591561bea6f51240d350303169773c2a2a/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d20c9591561bea6f51240d350303169773c2a2a/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=4d20c9591561bea6f51240d350303169773c2a2a", "patch": "@@ -1,3 +1,10 @@\n+2013-07-05  Robert Dewar  <dewar@adacore.com>\n+\n+\t* gnat_rm.texi: Document that -gnatR and -gnatD cannot be used\n+\ttogether.\n+\t* switch-c.adb: Do not allow -gnatD and -gnatR to both be\n+\tspecified.\n+\n 2013-07-05  Robert Dewar  <dewar@adacore.com>\n \n \t* gnat_rm.texi: Add missing documentation for pragmas."}, {"sha": "27225435546daad6147c6e67f509520c5cb6e64a", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d20c9591561bea6f51240d350303169773c2a2a/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d20c9591561bea6f51240d350303169773c2a2a/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=4d20c9591561bea6f51240d350303169773c2a2a", "patch": "@@ -189,6 +189,7 @@ Implementation Defined Pragmas\n * Pragma No_Body::\n * Pragma No_Inline::\n * Pragma No_Return::\n+* Pragma No_Run_Time::\n * Pragma No_Strict_Aliasing ::\n * Pragma Normalize_Scalars::\n * Pragma Obsolescent::\n@@ -995,6 +996,7 @@ consideration, the use of these pragmas should be minimized.\n * Pragma No_Body::\n * Pragma No_Inline::\n * Pragma No_Return::\n+* Pragma No_Run_Time::\n * Pragma No_Strict_Aliasing::\n * Pragma Normalize_Scalars::\n * Pragma Obsolescent::\n@@ -4316,6 +4318,24 @@ Note that in Ada 2005 mode, this pragma is part of the language. It is\n available in all earlier versions of Ada as an implementation-defined\n pragma.\n \n+@node Pragma No_Run_Time\n+@unnumberedsec Pragma No_Run_Time\n+@findex No_Run_Time\n+@noindent\n+Syntax:\n+\n+@smallexample @c ada\n+pragma No_Run_Time;\n+@end smallexample\n+\n+@noindent\n+This is an obsolete configuration pragma that historically was used to\n+setup what is now called the \"zero footprint\" library. It causes any\n+library units outside this basic library to be ignored. The use of\n+this pragma has been superceded by the general configuration run-time\n+capability of @code{GNAT} where the compiler takes into account whatever\n+units happen to be accessible in the library.\n+\n @node Pragma No_Strict_Aliasing\n @unnumberedsec Pragma No_Strict_Aliasing\n @findex No_Strict_Aliasing"}, {"sha": "0fc6bdb2188c0280b113af32b7757fcc80b44497", "filename": "gcc/ada/switch-c.adb", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d20c9591561bea6f51240d350303169773c2a2a/gcc%2Fada%2Fswitch-c.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d20c9591561bea6f51240d350303169773c2a2a/gcc%2Fada%2Fswitch-c.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fswitch-c.adb?ref=4d20c9591561bea6f51240d350303169773c2a2a", "patch": "@@ -394,6 +394,22 @@ package body Switch.C is\n             when 'D' =>\n                Ptr := Ptr + 1;\n \n+               --  Not allowed if previous -gnatR given\n+\n+               --  The reason for this prohibition is that the rewriting of\n+               --  Sloc values causes strange malfunctions in the tests of\n+               --  whether units belong to the main source. This is really a\n+               --  bug, but too hard to fix for a marginal capability ???\n+\n+               --  The proper fix is to completely redo -gnatD processing so\n+               --  that the tree is not messed with, and instead a separate\n+               --  table is built on the side for debug information generation.\n+\n+               if List_Representation_Info /= 0 then\n+                  Osint.Fail\n+                    (\"-gnatD not permitted since -gnatR given previously\");\n+               end if;\n+\n                --  Scan optional integer line limit value\n \n                if Nat_Present (Switch_Chars, Max, Ptr) then\n@@ -988,9 +1004,22 @@ package body Switch.C is\n             --  -gnatR (list rep. info)\n \n             when 'R' =>\n+\n+               --  Not allowed if previous -gnatD given. See more extensive\n+               --  comments in the 'D' section for the inverse test.\n+\n+               if Debug_Generated_Code then\n+                  Osint.Fail\n+                    (\"-gnatR not permitted since -gnatD given previously\");\n+               end if;\n+\n+               --  Set to annotate rep info, and set default -gnatR mode\n+\n                Back_Annotate_Rep_Info := True;\n                List_Representation_Info := 1;\n \n+               --  Scan possible parameter\n+\n                Ptr := Ptr + 1;\n                while Ptr <= Max loop\n                   C := Switch_Chars (Ptr);"}]}