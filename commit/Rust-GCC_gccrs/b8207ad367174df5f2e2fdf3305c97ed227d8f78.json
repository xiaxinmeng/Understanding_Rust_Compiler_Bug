{"sha": "b8207ad367174df5f2e2fdf3305c97ed227d8f78", "node_id": "C_kwDOANBUbNoAKGI4MjA3YWQzNjcxNzRkZjVmMmUyZmRmMzMwNWM5N2VkMjI3ZDhmNzg", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-03-30T13:18:55Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-03-31T07:18:42Z"}, "message": "Revert \"gimple: allow more folding of memcpy [PR102125]\"\n\nThis reverts commit 5f6a6c91d7c592cb49f7c519f289777eac09bb74.", "tree": {"sha": "328cb87df4eccad37fd03f0dfc040074c73a937a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/328cb87df4eccad37fd03f0dfc040074c73a937a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b8207ad367174df5f2e2fdf3305c97ed227d8f78", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8207ad367174df5f2e2fdf3305c97ed227d8f78", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8207ad367174df5f2e2fdf3305c97ed227d8f78", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8207ad367174df5f2e2fdf3305c97ed227d8f78/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "63cd7cef7e0f49fa557c5f694dbbd2e68de1f822", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63cd7cef7e0f49fa557c5f694dbbd2e68de1f822", "html_url": "https://github.com/Rust-GCC/gccrs/commit/63cd7cef7e0f49fa557c5f694dbbd2e68de1f822"}], "stats": {"total": 16, "additions": 5, "deletions": 11}, "files": [{"sha": "270a9a249d38229038f7532b5ccb23ab67d2c3fd", "filename": "gcc/gimple-fold.cc", "status": "modified", "additions": 5, "deletions": 11, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8207ad367174df5f2e2fdf3305c97ed227d8f78/gcc%2Fgimple-fold.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8207ad367174df5f2e2fdf3305c97ed227d8f78/gcc%2Fgimple-fold.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-fold.cc?ref=b8207ad367174df5f2e2fdf3305c97ed227d8f78", "patch": "@@ -67,8 +67,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-vector-builder.h\"\n #include \"tree-ssa-strlen.h\"\n #include \"varasm.h\"\n-#include \"memmodel.h\"\n-#include \"optabs.h\"\n #include \"internal-fn.h\"\n \n enum strlen_range_kind {\n@@ -962,17 +960,14 @@ gimple_fold_builtin_memory_op (gimple_stmt_iterator *gsi,\n \t= build_int_cst (build_pointer_type_for_mode (char_type_node,\n \t\t\t\t\t\t      ptr_mode, true), 0);\n \n-      /* If we can perform the copy efficiently with first doing all loads and\n-\t then all stores inline it that way.  Currently efficiently means that\n-\t we can load all the memory with a single set operation and that the\n-\t total size is less than MOVE_MAX * MOVE_RATIO.  */\n+      /* If we can perform the copy efficiently with first doing all loads\n+         and then all stores inline it that way.  Currently efficiently\n+\t means that we can load all the memory into a single integer\n+\t register which is what MOVE_MAX gives us.  */\n       src_align = get_pointer_alignment (src);\n       dest_align = get_pointer_alignment (dest);\n       if (tree_fits_uhwi_p (len)\n-\t  && (compare_tree_int\n-\t      (len, (MOVE_MAX\n-\t\t     * MOVE_RATIO (optimize_function_for_size_p (cfun))))\n-\t      <= 0)\n+\t  && compare_tree_int (len, MOVE_MAX) <= 0\n \t  /* FIXME: Don't transform copies from strings with known length.\n \t     Until GCC 9 this prevented a case in gcc.dg/strlenopt-8.c\n \t     from being handled, and the case was XFAILed for that reason.\n@@ -1006,7 +1001,6 @@ gimple_fold_builtin_memory_op (gimple_stmt_iterator *gsi,\n \t      scalar_int_mode mode;\n \t      if (int_mode_for_size (ilen * 8, 0).exists (&mode)\n \t\t  && GET_MODE_SIZE (mode) * BITS_PER_UNIT == ilen * 8\n-\t\t  && have_insn_for (SET, mode)\n \t\t  /* If the destination pointer is not aligned we must be able\n \t\t     to emit an unaligned store.  */\n \t\t  && (dest_align >= GET_MODE_ALIGNMENT (mode)"}]}