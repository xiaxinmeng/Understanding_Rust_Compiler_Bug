{"sha": "c389d3496ad217dbce58cc90c7cc7c7d31b40d81", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzM4OWQzNDk2YWQyMTdkYmNlNThjYzkwYzdjYzdjN2QzMWI0MGQ4MQ==", "commit": {"author": {"name": "Oleg Endo", "email": "olegendo@gcc.gnu.org", "date": "2016-06-04T06:08:33Z"}, "committer": {"name": "Oleg Endo", "email": "olegendo@gcc.gnu.org", "date": "2016-06-04T06:08:33Z"}, "message": "Avoid potential slient wrong-code with reg+reg addr. modes on SH.\n\ngcc/\n\t* config/sh/sh.c (sh_print_operand_address): Don't use hardcoded 'r0'\n\tfor reg+reg addressing mode.\n\nFrom-SVN: r237088", "tree": {"sha": "74a8b350552d28cacb1da3da852e03ab9a1d07f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/74a8b350552d28cacb1da3da852e03ab9a1d07f1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c389d3496ad217dbce58cc90c7cc7c7d31b40d81", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c389d3496ad217dbce58cc90c7cc7c7d31b40d81", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c389d3496ad217dbce58cc90c7cc7c7d31b40d81", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c389d3496ad217dbce58cc90c7cc7c7d31b40d81/comments", "author": null, "committer": null, "parents": [{"sha": "4624e9cd754a68b8dbd7fe7d75ef4882626649c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4624e9cd754a68b8dbd7fe7d75ef4882626649c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4624e9cd754a68b8dbd7fe7d75ef4882626649c6"}], "stats": {"total": 17, "additions": 15, "deletions": 2}, "files": [{"sha": "bce140bef53a65fe0967da256c105ddcca845d8f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c389d3496ad217dbce58cc90c7cc7c7d31b40d81/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c389d3496ad217dbce58cc90c7cc7c7d31b40d81/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c389d3496ad217dbce58cc90c7cc7c7d31b40d81", "patch": "@@ -1,3 +1,8 @@\n+2016-06-04  Oleg Endo  <olegendo@gcc.gnu.org>\n+\n+\t* config/sh/sh.c (sh_print_operand_address): Don't use hardcoded 'r0'\n+\tfor reg+reg addressing mode.\n+\n 2016-06-03  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n \n \t* rs6000-c.c (c/c-tree.h): Add #include."}, {"sha": "74327aa7c7ec868d1f7b690abd1744cd6e528195", "filename": "gcc/config/sh/sh.c", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c389d3496ad217dbce58cc90c7cc7c7d31b40d81/gcc%2Fconfig%2Fsh%2Fsh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c389d3496ad217dbce58cc90c7cc7c7d31b40d81/gcc%2Fconfig%2Fsh%2Fsh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.c?ref=c389d3496ad217dbce58cc90c7cc7c7d31b40d81", "patch": "@@ -1038,8 +1038,16 @@ sh_print_operand_address (FILE *stream, machine_mode /*mode*/, rtx x)\n \t      int base_num = true_regnum (base);\n \t      int index_num = true_regnum (index);\n \n-\t      fprintf (stream, \"@(r0,%s)\",\n-\t\t       reg_names[MAX (base_num, index_num)]);\n+\t      /* If base or index is R0, make sure that it comes first.\n+\t\t Usually one of them will be R0, but the order might be wrong.\n+\t\t If neither base nor index are R0 it's an error and we just\n+\t\t pass it on to the assembler.  This avoids silent wrong code\n+\t\t bugs.  */\n+\t      if (base_num == 0 && index_num != 0)\n+\t\tstd::swap (base_num, index_num);\n+\n+\t      fprintf (stream, \"@(%s,%s)\", reg_names[index_num],\n+\t\t\t\t\t   reg_names[base_num]);\n \t      break;\n \t    }\n "}]}