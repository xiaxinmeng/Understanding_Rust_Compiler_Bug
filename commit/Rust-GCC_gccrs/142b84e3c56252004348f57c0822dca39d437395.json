{"sha": "142b84e3c56252004348f57c0822dca39d437395", "node_id": "C_kwDOANBUbNoAKDE0MmI4NGUzYzU2MjUyMDA0MzQ4ZjU3YzA4MjJkY2EzOWQ0MzczOTU", "commit": {"author": {"name": "Owen Avery", "email": "powerboat9.gamer@gmail.com", "date": "2023-05-09T00:58:59Z"}, "committer": {"name": "CohenArthur", "email": "arthur.cohen@embecosm.com", "date": "2023-05-12T11:28:13Z"}, "message": "Handle keywords in macro fragments\n\ngcc/rust/ChangeLog:\n\n\t* lex/rust-token.cc\n\t(token_id_is_keyword): New.\n\t(token_id_keyword_string): New.\n\t* lex/rust-token.h\n\t(token_id_is_keyword): New.\n\t(token_id_keyword_string): New.\n\t* expand/rust-macro-expand.cc\n\t(MacroExpander::match_fragment): Match keywords for ident fragment.\n\t* parse/rust-parse-impl.h\n\t(Parser::parse_identifier_or_keyword_token): Add.\n\t* parse/rust-parse.h\n\t(Parser::parse_identifier_or_keyword_token): Add.\n\ngcc/testsuite/ChangeLog:\n\n\t* rust/compile/macro-issue2192.rs: New test.\n\nSigned-off-by: Owen Avery <powerboat9.gamer@gmail.com>", "tree": {"sha": "b6f6cbf2603eebd3207331cd1914b4b028a754a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b6f6cbf2603eebd3207331cd1914b4b028a754a3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/142b84e3c56252004348f57c0822dca39d437395", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/142b84e3c56252004348f57c0822dca39d437395", "html_url": "https://github.com/Rust-GCC/gccrs/commit/142b84e3c56252004348f57c0822dca39d437395", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/142b84e3c56252004348f57c0822dca39d437395/comments", "author": {"login": "powerboat9", "id": 7397652, "node_id": "MDQ6VXNlcjczOTc2NTI=", "avatar_url": "https://avatars.githubusercontent.com/u/7397652?v=4", "gravatar_id": "", "url": "https://api.github.com/users/powerboat9", "html_url": "https://github.com/powerboat9", "followers_url": "https://api.github.com/users/powerboat9/followers", "following_url": "https://api.github.com/users/powerboat9/following{/other_user}", "gists_url": "https://api.github.com/users/powerboat9/gists{/gist_id}", "starred_url": "https://api.github.com/users/powerboat9/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/powerboat9/subscriptions", "organizations_url": "https://api.github.com/users/powerboat9/orgs", "repos_url": "https://api.github.com/users/powerboat9/repos", "events_url": "https://api.github.com/users/powerboat9/events{/privacy}", "received_events_url": "https://api.github.com/users/powerboat9/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dc809645295e424285cd05df655d8c0084e546b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc809645295e424285cd05df655d8c0084e546b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc809645295e424285cd05df655d8c0084e546b8"}], "stats": {"total": 68, "additions": 67, "deletions": 1}, "files": [{"sha": "b607cd5ba2bfdc254a313a31ecf939930b6d507f", "filename": "gcc/rust/expand/rust-macro-expand.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/142b84e3c56252004348f57c0822dca39d437395/gcc%2Frust%2Fexpand%2Frust-macro-expand.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/142b84e3c56252004348f57c0822dca39d437395/gcc%2Frust%2Fexpand%2Frust-macro-expand.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fexpand%2Frust-macro-expand.cc?ref=142b84e3c56252004348f57c0822dca39d437395", "patch": "@@ -378,7 +378,7 @@ MacroExpander::match_fragment (Parser<MacroInvocLexer> &parser,\n       break;\n \n     case AST::MacroFragSpec::IDENT:\n-      parser.parse_identifier_pattern ();\n+      parser.parse_identifier_or_keyword_token ();\n       break;\n \n     case AST::MacroFragSpec::LITERAL:"}, {"sha": "179560d2fcf0d0d27ad1c054623b57895b02a448", "filename": "gcc/rust/lex/rust-token.cc", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/142b84e3c56252004348f57c0822dca39d437395/gcc%2Frust%2Flex%2Frust-token.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/142b84e3c56252004348f57c0822dca39d437395/gcc%2Frust%2Flex%2Frust-token.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Flex%2Frust-token.cc?ref=142b84e3c56252004348f57c0822dca39d437395", "patch": "@@ -57,6 +57,40 @@ token_id_to_str (TokenId id)\n     }\n }\n \n+/* checks if a token is a keyword */\n+bool\n+token_id_is_keyword (TokenId id)\n+{\n+  switch (id)\n+    {\n+#define RS_TOKEN_KEYWORD(name, _) case name:\n+#define RS_TOKEN(a, b)\n+      RS_TOKEN_LIST return true;\n+#undef RS_TOKEN_KEYWORD\n+#undef RS_TOKEN\n+    default:\n+      return false;\n+    }\n+}\n+\n+/* gets the string associated with a keyword */\n+const char *\n+token_id_keyword_string (TokenId id)\n+{\n+  switch (id)\n+    {\n+#define RS_TOKEN_KEYWORD(id, str)                                              \\\n+  case id:                                                                     \\\n+    return str;\n+#define RS_TOKEN(a, b)\n+      RS_TOKEN_LIST\n+#undef RS_TOKEN_KEYWORD\n+#undef RS_TOKEN\n+    default:\n+      return nullptr;\n+    }\n+}\n+\n const char *\n get_type_hint_string (PrimitiveCoreType type)\n {"}, {"sha": "9dea83c8b24ac324138d22a1d81732f1d4ec2b7d", "filename": "gcc/rust/lex/rust-token.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/142b84e3c56252004348f57c0822dca39d437395/gcc%2Frust%2Flex%2Frust-token.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/142b84e3c56252004348f57c0822dca39d437395/gcc%2Frust%2Flex%2Frust-token.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Flex%2Frust-token.h?ref=142b84e3c56252004348f57c0822dca39d437395", "patch": "@@ -226,6 +226,12 @@ get_token_description (TokenId id);\n  * x-macros */\n const char *\n token_id_to_str (TokenId id);\n+/* checks if a token is a keyword */\n+bool\n+token_id_is_keyword (TokenId id);\n+/* gets the string associated with a keyword */\n+const char *\n+token_id_keyword_string (TokenId id);\n // Get type hint description as a string.\n const char *\n get_type_hint_string (PrimitiveCoreType type);"}, {"sha": "182454560a2e6068eb028502831875d512d09181", "filename": "gcc/rust/parse/rust-parse-impl.h", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/142b84e3c56252004348f57c0822dca39d437395/gcc%2Frust%2Fparse%2Frust-parse-impl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/142b84e3c56252004348f57c0822dca39d437395/gcc%2Frust%2Fparse%2Frust-parse-impl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fparse%2Frust-parse-impl.h?ref=142b84e3c56252004348f57c0822dca39d437395", "patch": "@@ -999,6 +999,24 @@ Parser<ManagedTokenSource>::parse_delim_token_tree ()\n     }\n }\n \n+// Parses an identifier/keyword as a Token\n+template <typename ManagedTokenSource>\n+std::unique_ptr<AST::Token>\n+Parser<ManagedTokenSource>::parse_identifier_or_keyword_token ()\n+{\n+  const_TokenPtr t = lexer.peek_token ();\n+\n+  if (t->get_id () == IDENTIFIER || token_id_is_keyword (t->get_id ()))\n+    {\n+      lexer.skip_token ();\n+      return std::unique_ptr<AST::Token> (new AST::Token (std::move (t)));\n+    }\n+  else\n+    {\n+      return nullptr;\n+    }\n+}\n+\n /* Parses a TokenTree syntactical production. This is either a delimited token\n  * tree or a non-delimiter token. */\n template <typename ManagedTokenSource>"}, {"sha": "71f0ff1c0d22613c688811ccb57d466896ee2b47", "filename": "gcc/rust/parse/rust-parse.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/142b84e3c56252004348f57c0822dca39d437395/gcc%2Frust%2Fparse%2Frust-parse.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/142b84e3c56252004348f57c0822dca39d437395/gcc%2Frust%2Fparse%2Frust-parse.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fparse%2Frust-parse.h?ref=142b84e3c56252004348f57c0822dca39d437395", "patch": "@@ -148,6 +148,7 @@ template <typename ManagedTokenSource> class Parser\n   std::vector<std::unique_ptr<AST::LifetimeParam> > parse_lifetime_params ();\n   AST::Visibility parse_visibility ();\n   std::unique_ptr<AST::IdentifierPattern> parse_identifier_pattern ();\n+  std::unique_ptr<AST::Token> parse_identifier_or_keyword_token ();\n   std::unique_ptr<AST::TokenTree> parse_token_tree ();\n   std::tuple<AST::SimplePath, std::unique_ptr<AST::AttrInput>, Location>\n   parse_attribute_body ();"}, {"sha": "deb2dd746600c30089bfa1a9818c24065f46b83b", "filename": "gcc/testsuite/rust/compile/macro-issue2192.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/142b84e3c56252004348f57c0822dca39d437395/gcc%2Ftestsuite%2Frust%2Fcompile%2Fmacro-issue2192.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/142b84e3c56252004348f57c0822dca39d437395/gcc%2Ftestsuite%2Frust%2Fcompile%2Fmacro-issue2192.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Fmacro-issue2192.rs?ref=142b84e3c56252004348f57c0822dca39d437395", "patch": "@@ -0,0 +1,7 @@\n+macro_rules! foo {\n+    ($a:ident) => {}\n+}\n+\n+pub fn bar() {\n+    foo!(self);\n+}"}]}