{"sha": "f61edbf65f93da4d4c1d7c3f201b39dc85d982c2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjYxZWRiZjY1ZjkzZGE0ZDRjMWQ3YzNmMjAxYjM5ZGM4NWQ5ODJjMg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2008-05-07T07:40:01Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2008-05-07T07:40:01Z"}, "message": "re PR middle-end/36137 (gcc can't do math)\n\n\tPR middle-end/36137\n\t* fold-const.c (fold_binary): Use STRIP_SIGN_NOPS instead of\n\tSTRIP_NOPS on arguments even for MIN_EXPR and MAX_EXPR.\n\n\t* gcc.c-torture/execute/20080506-1.c: New test.\n\nFrom-SVN: r135028", "tree": {"sha": "4931bfe9c77a6c8047f0ddbf95b8af43821d7528", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4931bfe9c77a6c8047f0ddbf95b8af43821d7528"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f61edbf65f93da4d4c1d7c3f201b39dc85d982c2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f61edbf65f93da4d4c1d7c3f201b39dc85d982c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f61edbf65f93da4d4c1d7c3f201b39dc85d982c2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f61edbf65f93da4d4c1d7c3f201b39dc85d982c2/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c18c98c0ade56bc46ce65bbf5cdff26a2577c990", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c18c98c0ade56bc46ce65bbf5cdff26a2577c990", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c18c98c0ade56bc46ce65bbf5cdff26a2577c990"}], "stats": {"total": 41, "additions": 34, "deletions": 7}, "files": [{"sha": "20ee05cd6f306d4e17e4766be255815a073c9409", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f61edbf65f93da4d4c1d7c3f201b39dc85d982c2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f61edbf65f93da4d4c1d7c3f201b39dc85d982c2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f61edbf65f93da4d4c1d7c3f201b39dc85d982c2", "patch": "@@ -1,14 +1,14 @@\n 2008-05-07  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR middle-end/36137\n+\t* fold-const.c (fold_binary): Use STRIP_SIGN_NOPS instead of\n+\tSTRIP_NOPS on arguments even for MIN_EXPR and MAX_EXPR.\n+\n \tPR middle-end/36106\n \t* omp-low.c (expand_omp_atomic_pipeline): Load value using the\n \tintegral type rather than floating point, then VIEW_CONVERT_EXPR\n \tto the floating point type.\n \n-\t* testsuite/libgomp.c/atomic-5.c: New test.\n-\t* testsuite/libgomp.c/atomic-6.c: New test.\n-\t* testsuite/libgomp.c/autopar-1.c: New test.\n-\n 2008-05-07  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/i386.c (ix86_expand_copysign): Force non-zero constant"}, {"sha": "db7be875427d8908568ac4dd16714f54d5f5fb4d", "filename": "gcc/fold-const.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f61edbf65f93da4d4c1d7c3f201b39dc85d982c2/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f61edbf65f93da4d4c1d7c3f201b39dc85d982c2/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=f61edbf65f93da4d4c1d7c3f201b39dc85d982c2", "patch": "@@ -1,6 +1,6 @@\n /* Fold a constant sub-tree into a single node for C-compiler\n    Copyright (C) 1987, 1988, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999,\n-   2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007\n+   2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008\n    Free Software Foundation, Inc.\n \n This file is part of GCC.\n@@ -9261,15 +9261,16 @@ fold_binary (enum tree_code code, tree type, tree op0, tree op1)\n      safe for every expression, except for a comparison expression\n      because its signedness is derived from its operands.  So, in\n      the latter case, only strip conversions that don't change the\n-     signedness.\n+     signedness.  MIN_EXPR/MAX_EXPR also need signedness of arguments\n+     preserved.\n \n      Note that this is done as an internal manipulation within the\n      constant folder, in order to find the simplest representation\n      of the arguments so that their form can be studied.  In any\n      cases, the appropriate type conversions should be put back in\n      the tree that will get out of the constant folder.  */\n \n-  if (kind == tcc_comparison)\n+  if (kind == tcc_comparison || code == MIN_EXPR || code == MAX_EXPR)\n     {\n       STRIP_SIGN_NOPS (arg0);\n       STRIP_SIGN_NOPS (arg1);"}, {"sha": "a36aa5a3301c6133bfacfab0bbc6cde699e37f36", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f61edbf65f93da4d4c1d7c3f201b39dc85d982c2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f61edbf65f93da4d4c1d7c3f201b39dc85d982c2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f61edbf65f93da4d4c1d7c3f201b39dc85d982c2", "patch": "@@ -1,3 +1,8 @@\n+2008-05-07  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/36137\n+\t* gcc.c-torture/execute/20080506-1.c: New test.\n+\n 2008-05-06  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR libfortran/34974"}, {"sha": "4f6d6d81a774e401ec6494da3031083eaf327477", "filename": "gcc/testsuite/gcc.c-torture/execute/20080506-1.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f61edbf65f93da4d4c1d7c3f201b39dc85d982c2/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20080506-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f61edbf65f93da4d4c1d7c3f201b39dc85d982c2/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20080506-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20080506-1.c?ref=f61edbf65f93da4d4c1d7c3f201b39dc85d982c2", "patch": "@@ -0,0 +1,21 @@\n+/* PR middle-end/36137 */\n+extern void abort (void);\n+\n+#define MIN(a, b) ((a) < (b) ? (a) : (b))\n+#define MAX(a, b) ((a) > (b) ? (a) : (b))\n+\n+int\n+main ()\n+{\n+  unsigned int u;\n+  int i = -1;\n+\n+  u = MAX ((unsigned int) MAX (i, 0), 1);\n+  if (u != 1)\n+    abort ();\n+\n+  u = MIN ((unsigned int) MAX (i, 0), (unsigned int) i);\n+  if (u != 0)\n+    abort ();\n+  return 0;\n+}"}]}