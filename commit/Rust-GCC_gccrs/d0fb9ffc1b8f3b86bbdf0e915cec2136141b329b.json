{"sha": "d0fb9ffc1b8f3b86bbdf0e915cec2136141b329b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDBmYjlmZmMxYjhmM2I4NmJiZGYwZTkxNWNlYzIxMzYxNDFiMzI5Yg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-05-14T07:51:05Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-05-14T07:51:05Z"}, "message": "openmp: Fix placement of 2nd+ preparation statement for PHIs in simd clone lowering [PR95108]\n\nFor normal stmts, preparation statements are inserted before the stmt, so if we need multiple,\nthey are in the correct order, but for PHIs we emit them after labels in the entry successor\nbb, and we used to emit them in the reverse order that way.\n\n2020-05-14  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR middle-end/95108\n\t* omp-simd-clone.c (struct modify_stmt_info): Add after_stmt member.\n\t(ipa_simd_modify_stmt_ops): For PHIs, only add before first stmt in\n\tentry block if info->after_stmt is NULL, otherwise add after that stmt\n\tand update it after adding each stmt.\n\t(ipa_simd_modify_function_body): Initialize info.after_stmt.\n\n\t* gcc.dg/gomp/pr95108.c: New test.", "tree": {"sha": "6134d68b15fcb5d6601caaaa82290e0bd000b2be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6134d68b15fcb5d6601caaaa82290e0bd000b2be"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d0fb9ffc1b8f3b86bbdf0e915cec2136141b329b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0fb9ffc1b8f3b86bbdf0e915cec2136141b329b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d0fb9ffc1b8f3b86bbdf0e915cec2136141b329b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0fb9ffc1b8f3b86bbdf0e915cec2136141b329b/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "49ddde69fc8e1e4c48d4b0027ea37ac862da0f1f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49ddde69fc8e1e4c48d4b0027ea37ac862da0f1f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/49ddde69fc8e1e4c48d4b0027ea37ac862da0f1f"}], "stats": {"total": 45, "additions": 43, "deletions": 2}, "files": [{"sha": "0f0dbd051c9cfff9b042ed83da4896e2f829d2ac", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0fb9ffc1b8f3b86bbdf0e915cec2136141b329b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0fb9ffc1b8f3b86bbdf0e915cec2136141b329b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d0fb9ffc1b8f3b86bbdf0e915cec2136141b329b", "patch": "@@ -1,5 +1,12 @@\n 2020-05-14  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR middle-end/95108\n+\t* omp-simd-clone.c (struct modify_stmt_info): Add after_stmt member.\n+\t(ipa_simd_modify_stmt_ops): For PHIs, only add before first stmt in\n+\tentry block if info->after_stmt is NULL, otherwise add after that stmt\n+\tand update it after adding each stmt.\n+\t(ipa_simd_modify_function_body): Initialize info.after_stmt.\n+\n \t* function.h (struct function): Add has_omp_target bit.\n \t* omp-offload.c (omp_discover_declare_target_fn_r): New function,\n \told renamed to ..."}, {"sha": "09fdd6074321b219cc3679e423bc69a6ff9f4b4f", "filename": "gcc/omp-simd-clone.c", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0fb9ffc1b8f3b86bbdf0e915cec2136141b329b/gcc%2Fomp-simd-clone.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0fb9ffc1b8f3b86bbdf0e915cec2136141b329b/gcc%2Fomp-simd-clone.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-simd-clone.c?ref=d0fb9ffc1b8f3b86bbdf0e915cec2136141b329b", "patch": "@@ -821,6 +821,7 @@ simd_clone_init_simd_arrays (struct cgraph_node *node,\n struct modify_stmt_info {\n   ipa_param_body_adjustments *adjustments;\n   gimple *stmt;\n+  gimple *after_stmt;\n   /* True if the parent statement was modified by\n      ipa_simd_modify_stmt_ops.  */\n   bool modified;\n@@ -912,7 +913,10 @@ ipa_simd_modify_stmt_ops (tree *tp, int *walk_subtrees, void *data)\n       gimple_stmt_iterator gsi;\n       if (gimple_code (info->stmt) == GIMPLE_PHI)\n \t{\n-\t  gsi = gsi_after_labels (single_succ (ENTRY_BLOCK_PTR_FOR_FN (cfun)));\n+\t  if (info->after_stmt)\n+\t    gsi = gsi_for_stmt (info->after_stmt);\n+\t  else\n+\t    gsi = gsi_after_labels (single_succ (ENTRY_BLOCK_PTR_FOR_FN (cfun)));\n \t  /* Cache SSA_NAME for next time.  */\n \t  if (pbr\n \t      && TREE_CODE (*orig_tp) == ADDR_EXPR\n@@ -924,7 +928,12 @@ ipa_simd_modify_stmt_ops (tree *tp, int *walk_subtrees, void *data)\n \t}\n       else\n \tgsi = gsi_for_stmt (info->stmt);\n-      gsi_insert_before (&gsi, stmt, GSI_SAME_STMT);\n+      if (info->after_stmt)\n+\tgsi_insert_after (&gsi, stmt, GSI_SAME_STMT);\n+      else\n+\tgsi_insert_before (&gsi, stmt, GSI_SAME_STMT);\n+      if (gimple_code (info->stmt) == GIMPLE_PHI)\n+\tinfo->after_stmt = stmt;\n       *orig_tp = repl;\n     }\n   else if (!useless_type_conversion_p (TREE_TYPE (*tp), TREE_TYPE (repl)))\n@@ -1015,6 +1024,7 @@ ipa_simd_modify_function_body (struct cgraph_node *node,\n \t  gphi *phi = as_a <gphi *> (gsi_stmt (gsi));\n \t  int i, n = gimple_phi_num_args (phi);\n \t  info.stmt = phi;\n+\t  info.after_stmt = NULL;\n \t  struct walk_stmt_info wi;\n \t  memset (&wi, 0, sizeof (wi));\n \t  info.modified = false;\n@@ -1040,6 +1050,7 @@ ipa_simd_modify_function_body (struct cgraph_node *node,\n \t{\n \t  gimple *stmt = gsi_stmt (gsi);\n \t  info.stmt = stmt;\n+\t  info.after_stmt = NULL;\n \t  struct walk_stmt_info wi;\n \n \t  memset (&wi, 0, sizeof (wi));"}, {"sha": "13d55484c6a204fa4c23c7d3e6ea519f3b3c1e8b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0fb9ffc1b8f3b86bbdf0e915cec2136141b329b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0fb9ffc1b8f3b86bbdf0e915cec2136141b329b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d0fb9ffc1b8f3b86bbdf0e915cec2136141b329b", "patch": "@@ -1,3 +1,8 @@\n+2020-05-14  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/95108\n+\t* gcc.dg/gomp/pr95108.c: New test.\n+\n 2020-05-14  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n \n \tPR target/95046"}, {"sha": "b492333686b1d245a4f4f11d42cfcd21597e28b6", "filename": "gcc/testsuite/gcc.dg/gomp/pr95108.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0fb9ffc1b8f3b86bbdf0e915cec2136141b329b/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fpr95108.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0fb9ffc1b8f3b86bbdf0e915cec2136141b329b/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fpr95108.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fpr95108.c?ref=d0fb9ffc1b8f3b86bbdf0e915cec2136141b329b", "patch": "@@ -0,0 +1,18 @@\n+/* PR middle-end/95108 */\n+/* { dg-do compile { target vect_simd_clones } } */\n+/* { dg-options \"-O2 -fopenmp-simd -w\" } */\n+\n+int *v;\n+\n+#pragma omp declare simd\n+void\n+foo (int x)\n+{\n+  int *a = &x + 1;\n+\n+  for (;;)\n+    {\n+      *v = *a;\n+      a = v;\n+    }\n+}"}]}