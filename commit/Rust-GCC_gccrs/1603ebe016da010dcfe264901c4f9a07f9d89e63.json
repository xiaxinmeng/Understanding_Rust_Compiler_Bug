{"sha": "1603ebe016da010dcfe264901c4f9a07f9d89e63", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTYwM2ViZTAxNmRhMDEwZGNmZTI2NDkwMWM0ZjlhMDdmOWQ4OWU2Mw==", "commit": {"author": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2016-07-22T10:38:32Z"}, "committer": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2016-07-22T10:38:32Z"}, "message": "re PR fortran/71795 (Two Bugs in array constructors (optimization))\n\n2016-07-22  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR fortran/71795\n\t* frontend-passes.c (combine_array_constructor):  Don't\n\tdo anything if the expression is inside an array iterator.\n\n2016-07-22  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR fortran/71795\n\t* gfortran.dg/constructor_50.f90:  New test.\n\nFrom-SVN: r238638", "tree": {"sha": "3079ee3a42a7d958ac9f39d6af5f07745081498f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3079ee3a42a7d958ac9f39d6af5f07745081498f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1603ebe016da010dcfe264901c4f9a07f9d89e63", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1603ebe016da010dcfe264901c4f9a07f9d89e63", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1603ebe016da010dcfe264901c4f9a07f9d89e63", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1603ebe016da010dcfe264901c4f9a07f9d89e63/comments", "author": null, "committer": null, "parents": [{"sha": "bc91c4361527fb229ad47f20a45de0b3160f2de9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc91c4361527fb229ad47f20a45de0b3160f2de9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc91c4361527fb229ad47f20a45de0b3160f2de9"}], "stats": {"total": 37, "additions": 37, "deletions": 0}, "files": [{"sha": "ff12b56ec2e350bc137c001cf6e3eb76d2a81d5c", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1603ebe016da010dcfe264901c4f9a07f9d89e63/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1603ebe016da010dcfe264901c4f9a07f9d89e63/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=1603ebe016da010dcfe264901c4f9a07f9d89e63", "patch": "@@ -1,3 +1,9 @@\n+2016-07-22  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/71795\n+\t* frontend-passes.c (combine_array_constructor):  Don't\n+\tdo anything if the expression is inside an array iterator.\n+\n 2016-07-22  Andre Vehreschild  <vehre@gcc.gnu.org>\n \n \t* expr.c (gfc_find_stat_co): Fixed whitespaces."}, {"sha": "d333c6882a46bd0f94a28bd9564d454de75201d5", "filename": "gcc/fortran/frontend-passes.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1603ebe016da010dcfe264901c4f9a07f9d89e63/gcc%2Ffortran%2Ffrontend-passes.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1603ebe016da010dcfe264901c4f9a07f9d89e63/gcc%2Ffortran%2Ffrontend-passes.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ffrontend-passes.c?ref=1603ebe016da010dcfe264901c4f9a07f9d89e63", "patch": "@@ -1255,6 +1255,11 @@ combine_array_constructor (gfc_expr *e)\n   if (forall_level > 0)\n     return false;\n \n+  /* Inside an iterator, things can get hairy; we are likely to create\n+     an invalid temporary variable.  */\n+  if (iterator_level > 0)\n+    return false;\n+\n   op1 = e->value.op.op1;\n   op2 = e->value.op.op2;\n "}, {"sha": "feb3236fef92d4084a2b620d1bfd3d07162893d2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1603ebe016da010dcfe264901c4f9a07f9d89e63/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1603ebe016da010dcfe264901c4f9a07f9d89e63/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1603ebe016da010dcfe264901c4f9a07f9d89e63", "patch": "@@ -1,3 +1,8 @@\n+2016-07-22  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/71795\n+\t* gfortran.dg/constructor_50.f90:  New test.\n+\n 2016-07-22  Martin Liska  <mliska@suse.cz>\n \n \tPR gcov-profile/69028"}, {"sha": "c22c980edde583c3480840a1166d9d43434e6bbb", "filename": "gcc/testsuite/gfortran.dg/array_constructor_50.f90", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1603ebe016da010dcfe264901c4f9a07f9d89e63/gcc%2Ftestsuite%2Fgfortran.dg%2Farray_constructor_50.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1603ebe016da010dcfe264901c4f9a07f9d89e63/gcc%2Ftestsuite%2Fgfortran.dg%2Farray_constructor_50.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Farray_constructor_50.f90?ref=1603ebe016da010dcfe264901c4f9a07f9d89e63", "patch": "@@ -0,0 +1,21 @@\n+! { dg-do run }\n+! PR 71795 - wrong result when putting an array constructor\n+! instide an iterator.\n+     program test\n+\n+     implicit none\n+     integer :: i,n\n+     logical, dimension(1) :: ra\n+     logical :: rs\n+     integer, allocatable :: a(:)\n+\n+     allocate ( a(1) )\n+\n+     n = 1\n+     a = 2\n+\n+     ra = (/ (any(a(i).eq.(/1,2,3/)) ,i=1,n) /)\n+     if (.not. all(ra)) call abort\n+     rs = any ( (/ (any(a(i).eq.(/1,2,3/)) ,i=1,n) /) )\n+     if (.not. rs) call abort\n+   end program test"}]}