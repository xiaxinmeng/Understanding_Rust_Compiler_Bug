{"sha": "f4a88680ab308f951699bdfb7b181013d434d151", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjRhODg2ODBhYjMwOGY5NTE2OTliZGZiN2IxODEwMTNkNDM0ZDE1MQ==", "commit": {"author": {"name": "Joern Rennecke", "email": "amylaar@spamcop.net", "date": "2010-11-09T17:23:05Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2010-11-09T17:23:05Z"}, "message": "re PR target/44759 (mn10300.md signed/unsigned comparisons)\n\n        PR target/44759\n        * config/mn10300/mn10300.c (SIZE_FMOV_LIMIT): Promote all arms of\n        conditional to type of S.\n        (mn10300_function_arg): Remove unused variable align.\n        (mn10300_arg_partial_bytes): Likewise.\n        * config/mn10300/mn10300.md (attribute cpu): Cast value to\n        enum attr_cpu.\n\nFrom-SVN: r166500", "tree": {"sha": "796b44e040d150a09cf135b323d42346cf3b8d87", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/796b44e040d150a09cf135b323d42346cf3b8d87"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f4a88680ab308f951699bdfb7b181013d434d151", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4a88680ab308f951699bdfb7b181013d434d151", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4a88680ab308f951699bdfb7b181013d434d151", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4a88680ab308f951699bdfb7b181013d434d151/comments", "author": null, "committer": null, "parents": [{"sha": "959fc02c27caefe184137ff482a34608e1ff64b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/959fc02c27caefe184137ff482a34608e1ff64b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/959fc02c27caefe184137ff482a34608e1ff64b9"}], "stats": {"total": 27, "additions": 16, "deletions": 11}, "files": [{"sha": "254ffb076cde1b36a5d488108ee7a79e49619b5c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4a88680ab308f951699bdfb7b181013d434d151/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4a88680ab308f951699bdfb7b181013d434d151/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f4a88680ab308f951699bdfb7b181013d434d151", "patch": "@@ -52,6 +52,14 @@\n \t(schedType): Cast result of picochip_schedule_type to\n \tenum attr_schedType.\n \n+\tPR target/44759\n+\t* config/mn10300/mn10300.c (SIZE_FMOV_LIMIT): Promote all arms of\n+\tconditional to type of S.\n+\t(mn10300_function_arg): Remove unused variable align.\n+\t(mn10300_arg_partial_bytes): Likewise.\n+\t* config/mn10300/mn10300.md (attribute cpu): Cast value to\n+\tenum attr_cpu.\n+\n 2010-11-09  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR bootstrap/46392"}, {"sha": "78d7aa229f30270c571e8ee796bc6dacfb3b733d", "filename": "gcc/config/mn10300/mn10300.c", "status": "modified", "additions": 7, "deletions": 10, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4a88680ab308f951699bdfb7b181013d434d151/gcc%2Fconfig%2Fmn10300%2Fmn10300.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4a88680ab308f951699bdfb7b181013d434d151/gcc%2Fconfig%2Fmn10300%2Fmn10300.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmn10300%2Fmn10300.c?ref=f4a88680ab308f951699bdfb7b181013d434d151", "patch": "@@ -735,11 +735,14 @@ mn10300_expand_prologue (void)\n \t\t\t: (((S) >= (1 << 7)) || ((S) < -(1 << 7))) ? 4 : 2)\n #define SIZE_ADD_SP(S) ((((S) >= (1 << 15)) || ((S) < -(1 << 15))) ? 6 \\\n \t\t\t: (((S) >= (1 << 7)) || ((S) < -(1 << 7))) ? 4 : 3)\n+\n+/* We add 0 * (S) in two places to promote to the type of S,\n+   so that all arms of the conditional have the same type.  */\n #define SIZE_FMOV_LIMIT(S,N,L,SIZE1,SIZE2,ELSE) \\\n-  (((S) >= (L)) ? (SIZE1) * (N) \\\n+  (((S) >= (L)) ? 0 * (S) + (SIZE1) * (N) \\\n    : ((S) + 4 * (N) >= (L)) ? (((L) - (S)) / 4 * (SIZE2) \\\n \t\t\t       + ((S) + 4 * (N) - (L)) / 4 * (SIZE1)) \\\n-   : (ELSE))\n+   : 0 * (S) + (ELSE))\n #define SIZE_FMOV_SP_(S,N) \\\n   (SIZE_FMOV_LIMIT ((S), (N), (1 << 24), 7, 6, \\\n                    SIZE_FMOV_LIMIT ((S), (N), (1 << 8), 6, 4, \\\n@@ -1459,7 +1462,7 @@ mn10300_function_arg (CUMULATIVE_ARGS *cum, enum machine_mode mode,\n \t\t      const_tree type, bool named ATTRIBUTE_UNUSED)\n {\n   rtx result = NULL_RTX;\n-  int size, align;\n+  int size;\n \n   /* We only support using 2 data registers as argument registers.  */\n   int nregs = 2;\n@@ -1470,9 +1473,6 @@ mn10300_function_arg (CUMULATIVE_ARGS *cum, enum machine_mode mode,\n   else\n     size = GET_MODE_SIZE (mode);\n \n-  /* Figure out the alignment of the object to be passed.  */\n-  align = size;\n-\n   cum->nbytes = (cum->nbytes + 3) & ~3;\n \n   /* Don't pass this arg via a register if all the argument registers\n@@ -1521,7 +1521,7 @@ static int\n mn10300_arg_partial_bytes (CUMULATIVE_ARGS *cum, enum machine_mode mode,\n \t\t\t   tree type, bool named ATTRIBUTE_UNUSED)\n {\n-  int size, align;\n+  int size;\n \n   /* We only support using 2 data registers as argument registers.  */\n   int nregs = 2;\n@@ -1532,9 +1532,6 @@ mn10300_arg_partial_bytes (CUMULATIVE_ARGS *cum, enum machine_mode mode,\n   else\n     size = GET_MODE_SIZE (mode);\n \n-  /* Figure out the alignment of the object to be passed.  */\n-  align = size;\n-\n   cum->nbytes = (cum->nbytes + 3) & ~3;\n \n   /* Don't pass this arg via a register if all the argument registers"}, {"sha": "9f2fc9f972835972e231ccca2fee3db2a448dc1d", "filename": "gcc/config/mn10300/mn10300.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4a88680ab308f951699bdfb7b181013d434d151/gcc%2Fconfig%2Fmn10300%2Fmn10300.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4a88680ab308f951699bdfb7b181013d434d151/gcc%2Fconfig%2Fmn10300%2Fmn10300.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmn10300%2Fmn10300.md?ref=f4a88680ab308f951699bdfb7b181013d434d151", "patch": "@@ -44,7 +44,7 @@\n ;; Processor type.  This attribute must exactly match the processor_type\n ;; enumeration in mn10300.h.\n (define_attr \"cpu\" \"mn10300,am33,am33_2,am34\"\n-  (const (symbol_ref \"mn10300_tune_cpu\")))\n+  (const (symbol_ref \"(enum attr_cpu) mn10300_tune_cpu\")))\n \n \f\n ;; Pipeline description."}]}