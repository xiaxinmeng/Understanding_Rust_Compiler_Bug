{"sha": "d6b2c474747305341ffe3f4c6fdc4f1fee4a47d1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDZiMmM0NzQ3NDczMDUzNDFmZmUzZjRjNmZkYzRmMWZlZTRhNDdkMQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2002-02-11T15:24:37Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2002-02-11T15:24:37Z"}, "message": "mention NRVO\n\nFrom-SVN: r49677", "tree": {"sha": "0c4250ecfa42f44e16d721ca34b9da6156e9c10d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0c4250ecfa42f44e16d721ca34b9da6156e9c10d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d6b2c474747305341ffe3f4c6fdc4f1fee4a47d1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6b2c474747305341ffe3f4c6fdc4f1fee4a47d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d6b2c474747305341ffe3f4c6fdc4f1fee4a47d1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6b2c474747305341ffe3f4c6fdc4f1fee4a47d1/comments", "author": null, "committer": null, "parents": [{"sha": "66df7a985f423ee12a75bd1ae0852ad942b925c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66df7a985f423ee12a75bd1ae0852ad942b925c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/66df7a985f423ee12a75bd1ae0852ad942b925c3"}], "stats": {"total": 12, "additions": 12, "deletions": 0}, "files": [{"sha": "869ba057b2d145b6fc53080563c2d20b0158a060", "filename": "gcc/cp/NEWS", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6b2c474747305341ffe3f4c6fdc4f1fee4a47d1/gcc%2Fcp%2FNEWS", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6b2c474747305341ffe3f4c6fdc4f1fee4a47d1/gcc%2Fcp%2FNEWS", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FNEWS?ref=d6b2c474747305341ffe3f4c6fdc4f1fee4a47d1", "patch": "@@ -44,6 +44,18 @@\n   any cleanup for that parameter is performed in the caller, as specified\n   by the ia64 C++ ABI, rather than the called function as before.\n \n+* G++ now supports the \"named return value optimization\":  for code like\n+\n+    A f () {\n+      A a;\n+      ...\n+      return a;\n+    }\n+\n+  G++ will allocate 'a' in the return value slot, so that the return\n+  becomes a no-op.  For this to work, all return statements in the function\n+  must return the same variable.\n+\n *** Changes in GCC 3.0:\n \n * Support for guiding declarations has been removed."}]}