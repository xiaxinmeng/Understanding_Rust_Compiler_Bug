{"sha": "06ba585456409276aec14ef4649249addfd01f64", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDZiYTU4NTQ1NjQwOTI3NmFlYzE0ZWY0NjQ5MjQ5YWRkZmQwMWY2NA==", "commit": {"author": {"name": "Franz Sirl", "email": "Franz.Sirl-kernel@lauterbach.com", "date": "2003-10-28T19:46:42Z"}, "committer": {"name": "Franz Sirl", "email": "sirl@gcc.gnu.org", "date": "2003-10-28T19:46:42Z"}, "message": "re PR target/11598 (testcase gcc.dg/20020118-1.c fails runtime check of __attribute__((aligned(16))))\n\n\t2003-10-28  Franz Sirl  <Franz.Sirl-kernel@lauterbach.com>\n\n\tPR target/11598\n\tPR libgcj/10610\n\t* config/rs6000/sysv4.h (PREFERRED_STACK_BOUNDARY): New macro.\n\nFrom-SVN: r73017", "tree": {"sha": "8f2bad2aaa57fa9a29b6cb36314b2515557a8268", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8f2bad2aaa57fa9a29b6cb36314b2515557a8268"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/06ba585456409276aec14ef4649249addfd01f64", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06ba585456409276aec14ef4649249addfd01f64", "html_url": "https://github.com/Rust-GCC/gccrs/commit/06ba585456409276aec14ef4649249addfd01f64", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06ba585456409276aec14ef4649249addfd01f64/comments", "author": {"login": "jinkama-san", "id": 1462162, "node_id": "MDQ6VXNlcjE0NjIxNjI=", "avatar_url": "https://avatars.githubusercontent.com/u/1462162?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jinkama-san", "html_url": "https://github.com/jinkama-san", "followers_url": "https://api.github.com/users/jinkama-san/followers", "following_url": "https://api.github.com/users/jinkama-san/following{/other_user}", "gists_url": "https://api.github.com/users/jinkama-san/gists{/gist_id}", "starred_url": "https://api.github.com/users/jinkama-san/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jinkama-san/subscriptions", "organizations_url": "https://api.github.com/users/jinkama-san/orgs", "repos_url": "https://api.github.com/users/jinkama-san/repos", "events_url": "https://api.github.com/users/jinkama-san/events{/privacy}", "received_events_url": "https://api.github.com/users/jinkama-san/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ed1ca05a176303e626fb12bb93e7d2540f46b618", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed1ca05a176303e626fb12bb93e7d2540f46b618", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed1ca05a176303e626fb12bb93e7d2540f46b618"}], "stats": {"total": 21, "additions": 21, "deletions": 0}, "files": [{"sha": "0438e095ac9dff1d9ed27373a79c7bbd0cbaf24f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06ba585456409276aec14ef4649249addfd01f64/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06ba585456409276aec14ef4649249addfd01f64/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=06ba585456409276aec14ef4649249addfd01f64", "patch": "@@ -1,3 +1,9 @@\n+2003-10-28  Franz Sirl  <Franz.Sirl-kernel@lauterbach.com>\n+\n+\tPR target/11598\n+\tPR libgcj/10610\n+\t* config/rs6000/sysv4.h (PREFERRED_STACK_BOUNDARY): New macro.\n+\n 2003-10-28  Richard Earnshaw  <rearnsha@arm.com>\n \n \t* arm.c (arm_output_epilogue): When using a frame pointer, don't emit"}, {"sha": "7c327f756a17c9f5762ceedf188a9090d1643903", "filename": "gcc/config/rs6000/sysv4.h", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06ba585456409276aec14ef4649249addfd01f64/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06ba585456409276aec14ef4649249addfd01f64/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fsysv4.h?ref=06ba585456409276aec14ef4649249addfd01f64", "patch": "@@ -389,6 +389,21 @@ do {\t\t\t\t\t\t\t\t\t\\\n #undef\tSTACK_BOUNDARY\n #define\tSTACK_BOUNDARY\t(TARGET_ALTIVEC_ABI ? 128 : 64)\n \n+/* Define this macro if you wish to preserve a certain alignment for\n+   the stack pointer, greater than what the hardware enforces.  The\n+   definition is a C expression for the desired alignment (measured\n+   in bits).  This macro must evaluate to a value equal to or larger\n+   than STACK_BOUNDARY.\n+   For the SYSV ABI and variants the alignment of the stack pointer\n+   is usually controlled manually in rs6000.c. However, to maintain\n+   alignment across alloca () in all circumstances,\n+   PREFERRED_STACK_BOUNDARY needs to be set as well.\n+   This has the additional advantage of allowing a bigger maximum\n+   alignment of user objects on the stack.  */\n+\n+#undef PREFERRED_STACK_BOUNDARY\n+#define PREFERRED_STACK_BOUNDARY 128\n+\n /* Real stack boundary as mandated by the appropriate ABI.  */\n #define ABI_STACK_BOUNDARY ((TARGET_EABI && !TARGET_ALTIVEC_ABI) ? 64 : 128)\n "}]}