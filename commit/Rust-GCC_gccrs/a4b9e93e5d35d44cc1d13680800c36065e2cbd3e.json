{"sha": "a4b9e93e5d35d44cc1d13680800c36065e2cbd3e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTRiOWU5M2U1ZDM1ZDQ0Y2MxZDEzNjgwODAwYzM2MDY1ZTJjYmQzZQ==", "commit": {"author": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2006-03-13T22:49:56Z"}, "committer": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2006-03-13T22:49:56Z"}, "message": "re PR libfortran/25378 ([Fortran 2003] maxloc for all-false mask)\n\n2006-03-13  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/25378\n\t* trans-intrinsic.c (gfc_conv_intrinsic_minmaxloc): Set the initial position to zero and\n\tmodify the condition for updating it, to implement the F2003 requirement for all(mask)\n\tis false.\n\n2006-03-13  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/25378\n\t* libgfortran/m4/minloc1.m4: Set the initial position to zero and modify the condition for\n\tupdating it, to implement the F2003 requirement for all(mask).eq.false.\n\t* libgfortran/m4/maxloc1.m4: The same.\n\t* libgfortran/m4/iforeach.m4: The same.\n\t* libgfortran/m4/minloc0.m4: The same.\n\t* libgfortran/m4/maxloc0.m4: The same.\n\t* libgfortran/generated/maxloc0_16_i16.c: Regenerated, together with 41 others.\n\t* libgfortran/generated/minloc0_16_i16.c: Regenerated, together with 41 others.\n\n2006-03-13  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/25378\n\t* gfortran.fortran-torture/execute/intrinsic_mmloc_3.f90: Expand test to include more\n\tpermuatations of mask and index.\n\t* testsuite/gfortran.dg/scalar_mask_1.f90: Modify last test to respond to F2003 spec.\n\tthat the position returned for an all false mask && condition is zero.\n\nFrom-SVN: r112028", "tree": {"sha": "c9b7df7a9552d154d8cf7e2055c0a2c433188f18", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c9b7df7a9552d154d8cf7e2055c0a2c433188f18"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/comments", "author": null, "committer": null, "parents": [{"sha": "94c5a84153af895ba99c7de5ebd2448e4d80c4d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94c5a84153af895ba99c7de5ebd2448e4d80c4d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/94c5a84153af895ba99c7de5ebd2448e4d80c4d5"}], "stats": {"total": 8552, "additions": 5636, "deletions": 2916}, "files": [{"sha": "00f35ec9e7b8d6f3d8150bcf4dc9faf305df1ade", "filename": "configure", "status": "modified", "additions": 5220, "deletions": 2533, "changes": 7753, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/configure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/configure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure?ref=a4b9e93e5d35d44cc1d13680800c36065e2cbd3e"}, {"sha": "b5f7d7330bef93bf2f90419e908ba5701cdefd50", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=a4b9e93e5d35d44cc1d13680800c36065e2cbd3e", "patch": "@@ -1,3 +1,10 @@\n+2006-03-13  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/25378\n+\t* trans-intrinsic.c (gfc_conv_intrinsic_minmaxloc): Set the initial position to zero and\n+\tmodify the condition for updating it, to implement the F2003 requirement for all(mask)\n+\tis false.\n+\n 2006-03-13  Jakub Jelinek  <jakub@redhat.com>\n \n \t* trans-openmp.c (gfc_trans_omp_variable): Handle references"}, {"sha": "33350cbfa51761ba0781af2232ccd667db9dd1c7", "filename": "gcc/fortran/trans-intrinsic.c", "status": "modified", "additions": 9, "deletions": 22, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/gcc%2Ffortran%2Ftrans-intrinsic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/gcc%2Ffortran%2Ftrans-intrinsic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-intrinsic.c?ref=a4b9e93e5d35d44cc1d13680800c36065e2cbd3e", "patch": "@@ -1671,7 +1671,6 @@ gfc_conv_intrinsic_minmaxloc (gfc_se * se, gfc_expr * expr, int op)\n   tree tmp;\n   tree elsetmp;\n   tree ifbody;\n-  tree cond;\n   gfc_loopinfo loop;\n   gfc_actual_arglist *actual;\n   gfc_ss *arrayss;\n@@ -1744,17 +1743,10 @@ gfc_conv_intrinsic_minmaxloc (gfc_se * se, gfc_expr * expr, int op)\n \n   gcc_assert (loop.dimen == 1);\n \n-  /* Initialize the position to the first element.  If the array has zero\n-     size we need to return zero.  Otherwise use the first element of the\n-     array, in case all elements are equal to the limit.\n-     i.e. pos = (ubound >= lbound) ? lbound, lbound - 1;  */\n-  tmp = fold_build2 (MINUS_EXPR, gfc_array_index_type,\n-\t\t     loop.from[0], gfc_index_one_node);\n-  cond = fold_build2 (GE_EXPR, boolean_type_node,\n-\t\t      loop.to[0], loop.from[0]);\n-  tmp = fold_build3 (COND_EXPR, gfc_array_index_type, cond,\n-\t\t     loop.from[0], tmp);\n-  gfc_add_modify_expr (&loop.pre, pos, tmp);\n+  /* Initialize the position to zero, following Fortran 2003.  We are free\n+     to do this because Fortran 95 allows the result of an entirely false\n+     mask to be processor dependent.  */\n+  gfc_add_modify_expr (&loop.pre, pos, gfc_index_zero_node);\n \n   gfc_mark_ss_chain_used (arrayss, 1);\n   if (maskss)\n@@ -1794,8 +1786,10 @@ gfc_conv_intrinsic_minmaxloc (gfc_se * se, gfc_expr * expr, int op)\n \n   ifbody = gfc_finish_block (&ifblock);\n \n-  /* If it is a more extreme value.  */\n-  tmp = build2 (op, boolean_type_node, arrayse.expr, limit);\n+  /* If it is a more extreme value or pos is still zero.  */\n+  tmp = build2 (TRUTH_OR_EXPR, boolean_type_node,\n+\t\t  build2 (op, boolean_type_node, arrayse.expr, limit),\n+\t\t  build2 (EQ_EXPR, boolean_type_node, pos, gfc_index_zero_node));\n   tmp = build3_v (COND_EXPR, tmp, ifbody, build_empty_stmt ());\n   gfc_add_expr_to_block (&block, tmp);\n \n@@ -1826,14 +1820,7 @@ gfc_conv_intrinsic_minmaxloc (gfc_se * se, gfc_expr * expr, int op)\n \t the pos variable the same way as above.  */\n \n       gfc_init_block (&elseblock);\n-\n-      elsetmp = fold_build2 (MINUS_EXPR, gfc_array_index_type,\n-\t\t\t     loop.from[0], gfc_index_one_node);\n-      cond = fold_build2 (GE_EXPR, boolean_type_node,\n-\t\t\t  loop.to[0], loop.from[0]);\n-      elsetmp = fold_build3 (COND_EXPR, gfc_array_index_type, cond,\n-\t\t\t  loop.from[0], elsetmp);\n-      gfc_add_modify_expr (&elseblock, pos, elsetmp);\n+      gfc_add_modify_expr (&elseblock, pos, gfc_index_zero_node);\n       elsetmp = gfc_finish_block (&elseblock);\n \n       tmp = build3_v (COND_EXPR, maskse.expr, tmp, elsetmp);"}, {"sha": "f049f464d1bfd69169fffa774cec06a54b57b985", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a4b9e93e5d35d44cc1d13680800c36065e2cbd3e", "patch": "@@ -1,3 +1,11 @@\n+2006-03-13  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/25378\n+\t* gfortran.fortran-torture/execute/intrinsic_mmloc_3.f90: Expand test to include more\n+\tpermuatations of mask and index.\n+\t* testsuite/gfortran.dg/scalar_mask_1.f90: Modify last test to respond to F2003 spec.\n+\tthat the position returned for an all false mask && condition is zero.\n+\n 2006-03-13  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/25989"}, {"sha": "e2e5d6c421db3c25b63331da684a47560565254a", "filename": "gcc/testsuite/gfortran.dg/scalar_mask_1.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/gcc%2Ftestsuite%2Fgfortran.dg%2Fscalar_mask_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/gcc%2Ftestsuite%2Fgfortran.dg%2Fscalar_mask_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fscalar_mask_1.f90?ref=a4b9e93e5d35d44cc1d13680800c36065e2cbd3e", "patch": "@@ -11,5 +11,5 @@ program main\n   if (maxval (a, .true.) /= 3.0) call abort\n   if (maxval (a, .false.) > -1e38) call abort\n   if (maxloc (a, 1, .true.) /= 2) call abort\n-  if (maxloc (a, 1, .false.) /= 1) call abort\n+  if (maxloc (a, 1, .false.) /= 0) call abort ! Change to F2003 requirement.\n end program main"}, {"sha": "078a08d70b44e4243eb2aaf9fac81ebe247ffcef", "filename": "gcc/testsuite/gfortran.fortran-torture/execute/intrinsic_mmloc_3.f90", "status": "modified", "additions": 30, "deletions": 2, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fexecute%2Fintrinsic_mmloc_3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fexecute%2Fintrinsic_mmloc_3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fexecute%2Fintrinsic_mmloc_3.f90?ref=a4b9e93e5d35d44cc1d13680800c36065e2cbd3e", "patch": "@@ -3,10 +3,38 @@\n program intrinsic_mmloc_3\n   integer, dimension(2) :: d\n   integer, dimension(2,2) :: a\n+  logical, dimension(2) :: k\n+  logical, dimension(2,2) :: l\n+\n+  k = .true.\n+  l = .true.\n+\n+  d = -huge (d)\n+  if (maxloc (d, 1) .ne. 1) call abort ()\n+\n+  d = huge (d)\n+  if (minloc (d, 1) .ne. 1) call abort ()\n \n   d = -huge (d)\n-  if (maxloc (d, 1) .ne. 1) call abort()\n+  if (maxloc (d, 1, k) .ne. 1) call abort ()\n+\n+  d = huge (d)\n+  if (minloc (d, 1, k) .ne. 1) call abort ()\n+\n+  a = -huge (a)\n+  d = maxloc (a)\n+  if (any (d .ne. 1)) call abort ()\n+\n   a = huge (a)\n   d = minloc (a)\n-  if (any (d .ne. 1)) call abort()\n+  if (any (d .ne. 1)) call abort ()\n+\n+  a = -huge (a)\n+  d = maxloc (a, l)\n+  if (any (d .ne. 1)) call abort ()\n+\n+  a = huge (a)\n+  d = minloc (a, l)\n+  if (any (d .ne. 1)) call abort ()\n+\n end program"}, {"sha": "01c7cee6dab45008020cb5ef08ed3560f3e2ca4a", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 11, "deletions": 8, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=a4b9e93e5d35d44cc1d13680800c36065e2cbd3e", "patch": "@@ -1,11 +1,14 @@\n-2006-03-09  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n-\n-\tPR libgfortran/26499\n-\t* io/file_pos (st_rewind): Flush always.\n-\t* io/unix.c (fd_truncate): Return SUCCESS rather than FAILURE for\n-\tspecial files like /dev/null.\n-\t* io/transfer.c (st_write_done): Remove broken logic that prevented\n-\tcalling fd_truncate.\n+2006-03-13  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/25378\n+\t* libgfortran/m4/minloc1.m4: Set the initial position to zero and modify the condition for\n+\tupdating it, to implement the F2003 requirement for all(mask).eq.false.\n+\t* libgfortran/m4/maxloc1.m4: The same.\n+\t* libgfortran/m4/iforeach.m4: The same.\n+\t* libgfortran/m4/minloc0.m4: The same.\n+\t* libgfortran/m4/maxloc0.m4: The same.\n+\t* libgfortran/generated/maxloc0_16_i16.c: Regenerated, together with 41 others.\n+\t* libgfortran/generated/minloc0_16_i16.c: Regenerated, together with 41 others.\n \n 2006-03-05  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n "}, {"sha": "93ad9e4ebd16ac44f31020d4b51406419a72f397", "filename": "libgfortran/generated/maxloc0_16_i16.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fmaxloc0_16_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fmaxloc0_16_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_16_i16.c?ref=a4b9e93e5d35d44cc1d13680800c36065e2cbd3e", "patch": "@@ -106,7 +106,7 @@ maxloc0_16_i16 (gfc_array_i16 * const restrict retarray,\n \n   /* Initialize the return value.  */\n   for (n = 0; n < rank; n++)\n-    dest[n * dstride] = 1;\n+    dest[n * dstride] = 0;\n   {\n \n   GFC_INTEGER_16 maxval;\n@@ -118,7 +118,7 @@ maxloc0_16_i16 (gfc_array_i16 * const restrict retarray,\n       {\n         /* Implementation start.  */\n \n-  if (*base > maxval)\n+  if (*base > maxval || !dest[0])\n     {\n       maxval = *base;\n       for (n = 0; n < rank; n++)\n@@ -241,7 +241,7 @@ mmaxloc0_16_i16 (gfc_array_i16 * const restrict retarray,\n \n   /* Initialize the return value.  */\n   for (n = 0; n < rank; n++)\n-    dest[n * dstride] = 1;\n+    dest[n * dstride] = 0;\n   {\n \n   GFC_INTEGER_16 maxval;\n@@ -253,7 +253,7 @@ mmaxloc0_16_i16 (gfc_array_i16 * const restrict retarray,\n       {\n         /* Implementation start.  */\n \n-  if (*mbase && *base > maxval)\n+  if (*mbase && (*base > maxval || !dest[0]))\n     {\n       maxval = *base;\n       for (n = 0; n < rank; n++)"}, {"sha": "6808f693f2951fbdb3352c242e31e73185f288f4", "filename": "libgfortran/generated/maxloc0_16_i4.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fmaxloc0_16_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fmaxloc0_16_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_16_i4.c?ref=a4b9e93e5d35d44cc1d13680800c36065e2cbd3e", "patch": "@@ -106,7 +106,7 @@ maxloc0_16_i4 (gfc_array_i16 * const restrict retarray,\n \n   /* Initialize the return value.  */\n   for (n = 0; n < rank; n++)\n-    dest[n * dstride] = 1;\n+    dest[n * dstride] = 0;\n   {\n \n   GFC_INTEGER_4 maxval;\n@@ -118,7 +118,7 @@ maxloc0_16_i4 (gfc_array_i16 * const restrict retarray,\n       {\n         /* Implementation start.  */\n \n-  if (*base > maxval)\n+  if (*base > maxval || !dest[0])\n     {\n       maxval = *base;\n       for (n = 0; n < rank; n++)\n@@ -241,7 +241,7 @@ mmaxloc0_16_i4 (gfc_array_i16 * const restrict retarray,\n \n   /* Initialize the return value.  */\n   for (n = 0; n < rank; n++)\n-    dest[n * dstride] = 1;\n+    dest[n * dstride] = 0;\n   {\n \n   GFC_INTEGER_4 maxval;\n@@ -253,7 +253,7 @@ mmaxloc0_16_i4 (gfc_array_i16 * const restrict retarray,\n       {\n         /* Implementation start.  */\n \n-  if (*mbase && *base > maxval)\n+  if (*mbase && (*base > maxval || !dest[0]))\n     {\n       maxval = *base;\n       for (n = 0; n < rank; n++)"}, {"sha": "ed3061add6f9ff8c34135bd845b6b65820111fa1", "filename": "libgfortran/generated/maxloc0_16_i8.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fmaxloc0_16_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fmaxloc0_16_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_16_i8.c?ref=a4b9e93e5d35d44cc1d13680800c36065e2cbd3e", "patch": "@@ -106,7 +106,7 @@ maxloc0_16_i8 (gfc_array_i16 * const restrict retarray,\n \n   /* Initialize the return value.  */\n   for (n = 0; n < rank; n++)\n-    dest[n * dstride] = 1;\n+    dest[n * dstride] = 0;\n   {\n \n   GFC_INTEGER_8 maxval;\n@@ -118,7 +118,7 @@ maxloc0_16_i8 (gfc_array_i16 * const restrict retarray,\n       {\n         /* Implementation start.  */\n \n-  if (*base > maxval)\n+  if (*base > maxval || !dest[0])\n     {\n       maxval = *base;\n       for (n = 0; n < rank; n++)\n@@ -241,7 +241,7 @@ mmaxloc0_16_i8 (gfc_array_i16 * const restrict retarray,\n \n   /* Initialize the return value.  */\n   for (n = 0; n < rank; n++)\n-    dest[n * dstride] = 1;\n+    dest[n * dstride] = 0;\n   {\n \n   GFC_INTEGER_8 maxval;\n@@ -253,7 +253,7 @@ mmaxloc0_16_i8 (gfc_array_i16 * const restrict retarray,\n       {\n         /* Implementation start.  */\n \n-  if (*mbase && *base > maxval)\n+  if (*mbase && (*base > maxval || !dest[0]))\n     {\n       maxval = *base;\n       for (n = 0; n < rank; n++)"}, {"sha": "e427ba50ef2887bd52ac98d80bdc107cae34d993", "filename": "libgfortran/generated/maxloc0_16_r10.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fmaxloc0_16_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fmaxloc0_16_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_16_r10.c?ref=a4b9e93e5d35d44cc1d13680800c36065e2cbd3e", "patch": "@@ -106,7 +106,7 @@ maxloc0_16_r10 (gfc_array_i16 * const restrict retarray,\n \n   /* Initialize the return value.  */\n   for (n = 0; n < rank; n++)\n-    dest[n * dstride] = 1;\n+    dest[n * dstride] = 0;\n   {\n \n   GFC_REAL_10 maxval;\n@@ -118,7 +118,7 @@ maxloc0_16_r10 (gfc_array_i16 * const restrict retarray,\n       {\n         /* Implementation start.  */\n \n-  if (*base > maxval)\n+  if (*base > maxval || !dest[0])\n     {\n       maxval = *base;\n       for (n = 0; n < rank; n++)\n@@ -241,7 +241,7 @@ mmaxloc0_16_r10 (gfc_array_i16 * const restrict retarray,\n \n   /* Initialize the return value.  */\n   for (n = 0; n < rank; n++)\n-    dest[n * dstride] = 1;\n+    dest[n * dstride] = 0;\n   {\n \n   GFC_REAL_10 maxval;\n@@ -253,7 +253,7 @@ mmaxloc0_16_r10 (gfc_array_i16 * const restrict retarray,\n       {\n         /* Implementation start.  */\n \n-  if (*mbase && *base > maxval)\n+  if (*mbase && (*base > maxval || !dest[0]))\n     {\n       maxval = *base;\n       for (n = 0; n < rank; n++)"}, {"sha": "b457997aedd5b81de8f944e60917f098d3d9e4e0", "filename": "libgfortran/generated/maxloc0_16_r16.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fmaxloc0_16_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fmaxloc0_16_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_16_r16.c?ref=a4b9e93e5d35d44cc1d13680800c36065e2cbd3e", "patch": "@@ -106,7 +106,7 @@ maxloc0_16_r16 (gfc_array_i16 * const restrict retarray,\n \n   /* Initialize the return value.  */\n   for (n = 0; n < rank; n++)\n-    dest[n * dstride] = 1;\n+    dest[n * dstride] = 0;\n   {\n \n   GFC_REAL_16 maxval;\n@@ -118,7 +118,7 @@ maxloc0_16_r16 (gfc_array_i16 * const restrict retarray,\n       {\n         /* Implementation start.  */\n \n-  if (*base > maxval)\n+  if (*base > maxval || !dest[0])\n     {\n       maxval = *base;\n       for (n = 0; n < rank; n++)\n@@ -241,7 +241,7 @@ mmaxloc0_16_r16 (gfc_array_i16 * const restrict retarray,\n \n   /* Initialize the return value.  */\n   for (n = 0; n < rank; n++)\n-    dest[n * dstride] = 1;\n+    dest[n * dstride] = 0;\n   {\n \n   GFC_REAL_16 maxval;\n@@ -253,7 +253,7 @@ mmaxloc0_16_r16 (gfc_array_i16 * const restrict retarray,\n       {\n         /* Implementation start.  */\n \n-  if (*mbase && *base > maxval)\n+  if (*mbase && (*base > maxval || !dest[0]))\n     {\n       maxval = *base;\n       for (n = 0; n < rank; n++)"}, {"sha": "e9dbcbf9ce2721c419f1762f068632a1b34239b0", "filename": "libgfortran/generated/maxloc0_16_r4.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fmaxloc0_16_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fmaxloc0_16_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_16_r4.c?ref=a4b9e93e5d35d44cc1d13680800c36065e2cbd3e", "patch": "@@ -106,7 +106,7 @@ maxloc0_16_r4 (gfc_array_i16 * const restrict retarray,\n \n   /* Initialize the return value.  */\n   for (n = 0; n < rank; n++)\n-    dest[n * dstride] = 1;\n+    dest[n * dstride] = 0;\n   {\n \n   GFC_REAL_4 maxval;\n@@ -118,7 +118,7 @@ maxloc0_16_r4 (gfc_array_i16 * const restrict retarray,\n       {\n         /* Implementation start.  */\n \n-  if (*base > maxval)\n+  if (*base > maxval || !dest[0])\n     {\n       maxval = *base;\n       for (n = 0; n < rank; n++)\n@@ -241,7 +241,7 @@ mmaxloc0_16_r4 (gfc_array_i16 * const restrict retarray,\n \n   /* Initialize the return value.  */\n   for (n = 0; n < rank; n++)\n-    dest[n * dstride] = 1;\n+    dest[n * dstride] = 0;\n   {\n \n   GFC_REAL_4 maxval;\n@@ -253,7 +253,7 @@ mmaxloc0_16_r4 (gfc_array_i16 * const restrict retarray,\n       {\n         /* Implementation start.  */\n \n-  if (*mbase && *base > maxval)\n+  if (*mbase && (*base > maxval || !dest[0]))\n     {\n       maxval = *base;\n       for (n = 0; n < rank; n++)"}, {"sha": "07d7aef11f5391fca7415b8e1061e95017993ad3", "filename": "libgfortran/generated/maxloc0_16_r8.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fmaxloc0_16_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fmaxloc0_16_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_16_r8.c?ref=a4b9e93e5d35d44cc1d13680800c36065e2cbd3e", "patch": "@@ -106,7 +106,7 @@ maxloc0_16_r8 (gfc_array_i16 * const restrict retarray,\n \n   /* Initialize the return value.  */\n   for (n = 0; n < rank; n++)\n-    dest[n * dstride] = 1;\n+    dest[n * dstride] = 0;\n   {\n \n   GFC_REAL_8 maxval;\n@@ -118,7 +118,7 @@ maxloc0_16_r8 (gfc_array_i16 * const restrict retarray,\n       {\n         /* Implementation start.  */\n \n-  if (*base > maxval)\n+  if (*base > maxval || !dest[0])\n     {\n       maxval = *base;\n       for (n = 0; n < rank; n++)\n@@ -241,7 +241,7 @@ mmaxloc0_16_r8 (gfc_array_i16 * const restrict retarray,\n \n   /* Initialize the return value.  */\n   for (n = 0; n < rank; n++)\n-    dest[n * dstride] = 1;\n+    dest[n * dstride] = 0;\n   {\n \n   GFC_REAL_8 maxval;\n@@ -253,7 +253,7 @@ mmaxloc0_16_r8 (gfc_array_i16 * const restrict retarray,\n       {\n         /* Implementation start.  */\n \n-  if (*mbase && *base > maxval)\n+  if (*mbase && (*base > maxval || !dest[0]))\n     {\n       maxval = *base;\n       for (n = 0; n < rank; n++)"}, {"sha": "08f318081293d36023391a97bfadc73f935c4349", "filename": "libgfortran/generated/maxloc0_4_i16.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fmaxloc0_4_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fmaxloc0_4_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_4_i16.c?ref=a4b9e93e5d35d44cc1d13680800c36065e2cbd3e", "patch": "@@ -106,7 +106,7 @@ maxloc0_4_i16 (gfc_array_i4 * const restrict retarray,\n \n   /* Initialize the return value.  */\n   for (n = 0; n < rank; n++)\n-    dest[n * dstride] = 1;\n+    dest[n * dstride] = 0;\n   {\n \n   GFC_INTEGER_16 maxval;\n@@ -118,7 +118,7 @@ maxloc0_4_i16 (gfc_array_i4 * const restrict retarray,\n       {\n         /* Implementation start.  */\n \n-  if (*base > maxval)\n+  if (*base > maxval || !dest[0])\n     {\n       maxval = *base;\n       for (n = 0; n < rank; n++)\n@@ -241,7 +241,7 @@ mmaxloc0_4_i16 (gfc_array_i4 * const restrict retarray,\n \n   /* Initialize the return value.  */\n   for (n = 0; n < rank; n++)\n-    dest[n * dstride] = 1;\n+    dest[n * dstride] = 0;\n   {\n \n   GFC_INTEGER_16 maxval;\n@@ -253,7 +253,7 @@ mmaxloc0_4_i16 (gfc_array_i4 * const restrict retarray,\n       {\n         /* Implementation start.  */\n \n-  if (*mbase && *base > maxval)\n+  if (*mbase && (*base > maxval || !dest[0]))\n     {\n       maxval = *base;\n       for (n = 0; n < rank; n++)"}, {"sha": "9c342d90b82395af1261523a67f099b14653c828", "filename": "libgfortran/generated/maxloc0_4_i4.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fmaxloc0_4_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fmaxloc0_4_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_4_i4.c?ref=a4b9e93e5d35d44cc1d13680800c36065e2cbd3e", "patch": "@@ -106,7 +106,7 @@ maxloc0_4_i4 (gfc_array_i4 * const restrict retarray,\n \n   /* Initialize the return value.  */\n   for (n = 0; n < rank; n++)\n-    dest[n * dstride] = 1;\n+    dest[n * dstride] = 0;\n   {\n \n   GFC_INTEGER_4 maxval;\n@@ -118,7 +118,7 @@ maxloc0_4_i4 (gfc_array_i4 * const restrict retarray,\n       {\n         /* Implementation start.  */\n \n-  if (*base > maxval)\n+  if (*base > maxval || !dest[0])\n     {\n       maxval = *base;\n       for (n = 0; n < rank; n++)\n@@ -241,7 +241,7 @@ mmaxloc0_4_i4 (gfc_array_i4 * const restrict retarray,\n \n   /* Initialize the return value.  */\n   for (n = 0; n < rank; n++)\n-    dest[n * dstride] = 1;\n+    dest[n * dstride] = 0;\n   {\n \n   GFC_INTEGER_4 maxval;\n@@ -253,7 +253,7 @@ mmaxloc0_4_i4 (gfc_array_i4 * const restrict retarray,\n       {\n         /* Implementation start.  */\n \n-  if (*mbase && *base > maxval)\n+  if (*mbase && (*base > maxval || !dest[0]))\n     {\n       maxval = *base;\n       for (n = 0; n < rank; n++)"}, {"sha": "9e3d66b872fb4c54a7f47b8577553483950fde44", "filename": "libgfortran/generated/maxloc0_4_i8.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fmaxloc0_4_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fmaxloc0_4_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_4_i8.c?ref=a4b9e93e5d35d44cc1d13680800c36065e2cbd3e", "patch": "@@ -106,7 +106,7 @@ maxloc0_4_i8 (gfc_array_i4 * const restrict retarray,\n \n   /* Initialize the return value.  */\n   for (n = 0; n < rank; n++)\n-    dest[n * dstride] = 1;\n+    dest[n * dstride] = 0;\n   {\n \n   GFC_INTEGER_8 maxval;\n@@ -118,7 +118,7 @@ maxloc0_4_i8 (gfc_array_i4 * const restrict retarray,\n       {\n         /* Implementation start.  */\n \n-  if (*base > maxval)\n+  if (*base > maxval || !dest[0])\n     {\n       maxval = *base;\n       for (n = 0; n < rank; n++)\n@@ -241,7 +241,7 @@ mmaxloc0_4_i8 (gfc_array_i4 * const restrict retarray,\n \n   /* Initialize the return value.  */\n   for (n = 0; n < rank; n++)\n-    dest[n * dstride] = 1;\n+    dest[n * dstride] = 0;\n   {\n \n   GFC_INTEGER_8 maxval;\n@@ -253,7 +253,7 @@ mmaxloc0_4_i8 (gfc_array_i4 * const restrict retarray,\n       {\n         /* Implementation start.  */\n \n-  if (*mbase && *base > maxval)\n+  if (*mbase && (*base > maxval || !dest[0]))\n     {\n       maxval = *base;\n       for (n = 0; n < rank; n++)"}, {"sha": "c44fedd6aa3ea34644d1fbe0df21192f5af1348f", "filename": "libgfortran/generated/maxloc0_4_r10.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fmaxloc0_4_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fmaxloc0_4_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_4_r10.c?ref=a4b9e93e5d35d44cc1d13680800c36065e2cbd3e", "patch": "@@ -106,7 +106,7 @@ maxloc0_4_r10 (gfc_array_i4 * const restrict retarray,\n \n   /* Initialize the return value.  */\n   for (n = 0; n < rank; n++)\n-    dest[n * dstride] = 1;\n+    dest[n * dstride] = 0;\n   {\n \n   GFC_REAL_10 maxval;\n@@ -118,7 +118,7 @@ maxloc0_4_r10 (gfc_array_i4 * const restrict retarray,\n       {\n         /* Implementation start.  */\n \n-  if (*base > maxval)\n+  if (*base > maxval || !dest[0])\n     {\n       maxval = *base;\n       for (n = 0; n < rank; n++)\n@@ -241,7 +241,7 @@ mmaxloc0_4_r10 (gfc_array_i4 * const restrict retarray,\n \n   /* Initialize the return value.  */\n   for (n = 0; n < rank; n++)\n-    dest[n * dstride] = 1;\n+    dest[n * dstride] = 0;\n   {\n \n   GFC_REAL_10 maxval;\n@@ -253,7 +253,7 @@ mmaxloc0_4_r10 (gfc_array_i4 * const restrict retarray,\n       {\n         /* Implementation start.  */\n \n-  if (*mbase && *base > maxval)\n+  if (*mbase && (*base > maxval || !dest[0]))\n     {\n       maxval = *base;\n       for (n = 0; n < rank; n++)"}, {"sha": "e5ff44fe4a0877e214bf3cf6e8a53bed9396beed", "filename": "libgfortran/generated/maxloc0_4_r16.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fmaxloc0_4_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fmaxloc0_4_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_4_r16.c?ref=a4b9e93e5d35d44cc1d13680800c36065e2cbd3e", "patch": "@@ -106,7 +106,7 @@ maxloc0_4_r16 (gfc_array_i4 * const restrict retarray,\n \n   /* Initialize the return value.  */\n   for (n = 0; n < rank; n++)\n-    dest[n * dstride] = 1;\n+    dest[n * dstride] = 0;\n   {\n \n   GFC_REAL_16 maxval;\n@@ -118,7 +118,7 @@ maxloc0_4_r16 (gfc_array_i4 * const restrict retarray,\n       {\n         /* Implementation start.  */\n \n-  if (*base > maxval)\n+  if (*base > maxval || !dest[0])\n     {\n       maxval = *base;\n       for (n = 0; n < rank; n++)\n@@ -241,7 +241,7 @@ mmaxloc0_4_r16 (gfc_array_i4 * const restrict retarray,\n \n   /* Initialize the return value.  */\n   for (n = 0; n < rank; n++)\n-    dest[n * dstride] = 1;\n+    dest[n * dstride] = 0;\n   {\n \n   GFC_REAL_16 maxval;\n@@ -253,7 +253,7 @@ mmaxloc0_4_r16 (gfc_array_i4 * const restrict retarray,\n       {\n         /* Implementation start.  */\n \n-  if (*mbase && *base > maxval)\n+  if (*mbase && (*base > maxval || !dest[0]))\n     {\n       maxval = *base;\n       for (n = 0; n < rank; n++)"}, {"sha": "f5dba470153b524fbb68da3d3022639f73ad49aa", "filename": "libgfortran/generated/maxloc0_4_r4.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fmaxloc0_4_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fmaxloc0_4_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_4_r4.c?ref=a4b9e93e5d35d44cc1d13680800c36065e2cbd3e", "patch": "@@ -106,7 +106,7 @@ maxloc0_4_r4 (gfc_array_i4 * const restrict retarray,\n \n   /* Initialize the return value.  */\n   for (n = 0; n < rank; n++)\n-    dest[n * dstride] = 1;\n+    dest[n * dstride] = 0;\n   {\n \n   GFC_REAL_4 maxval;\n@@ -118,7 +118,7 @@ maxloc0_4_r4 (gfc_array_i4 * const restrict retarray,\n       {\n         /* Implementation start.  */\n \n-  if (*base > maxval)\n+  if (*base > maxval || !dest[0])\n     {\n       maxval = *base;\n       for (n = 0; n < rank; n++)\n@@ -241,7 +241,7 @@ mmaxloc0_4_r4 (gfc_array_i4 * const restrict retarray,\n \n   /* Initialize the return value.  */\n   for (n = 0; n < rank; n++)\n-    dest[n * dstride] = 1;\n+    dest[n * dstride] = 0;\n   {\n \n   GFC_REAL_4 maxval;\n@@ -253,7 +253,7 @@ mmaxloc0_4_r4 (gfc_array_i4 * const restrict retarray,\n       {\n         /* Implementation start.  */\n \n-  if (*mbase && *base > maxval)\n+  if (*mbase && (*base > maxval || !dest[0]))\n     {\n       maxval = *base;\n       for (n = 0; n < rank; n++)"}, {"sha": "a82cedad3d3431b29a19a61d915f0879539920d0", "filename": "libgfortran/generated/maxloc0_4_r8.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fmaxloc0_4_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fmaxloc0_4_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_4_r8.c?ref=a4b9e93e5d35d44cc1d13680800c36065e2cbd3e", "patch": "@@ -106,7 +106,7 @@ maxloc0_4_r8 (gfc_array_i4 * const restrict retarray,\n \n   /* Initialize the return value.  */\n   for (n = 0; n < rank; n++)\n-    dest[n * dstride] = 1;\n+    dest[n * dstride] = 0;\n   {\n \n   GFC_REAL_8 maxval;\n@@ -118,7 +118,7 @@ maxloc0_4_r8 (gfc_array_i4 * const restrict retarray,\n       {\n         /* Implementation start.  */\n \n-  if (*base > maxval)\n+  if (*base > maxval || !dest[0])\n     {\n       maxval = *base;\n       for (n = 0; n < rank; n++)\n@@ -241,7 +241,7 @@ mmaxloc0_4_r8 (gfc_array_i4 * const restrict retarray,\n \n   /* Initialize the return value.  */\n   for (n = 0; n < rank; n++)\n-    dest[n * dstride] = 1;\n+    dest[n * dstride] = 0;\n   {\n \n   GFC_REAL_8 maxval;\n@@ -253,7 +253,7 @@ mmaxloc0_4_r8 (gfc_array_i4 * const restrict retarray,\n       {\n         /* Implementation start.  */\n \n-  if (*mbase && *base > maxval)\n+  if (*mbase && (*base > maxval || !dest[0]))\n     {\n       maxval = *base;\n       for (n = 0; n < rank; n++)"}, {"sha": "35fd1f7cac7621647733f95ee44c0c630436c881", "filename": "libgfortran/generated/maxloc0_8_i16.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fmaxloc0_8_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fmaxloc0_8_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_8_i16.c?ref=a4b9e93e5d35d44cc1d13680800c36065e2cbd3e", "patch": "@@ -106,7 +106,7 @@ maxloc0_8_i16 (gfc_array_i8 * const restrict retarray,\n \n   /* Initialize the return value.  */\n   for (n = 0; n < rank; n++)\n-    dest[n * dstride] = 1;\n+    dest[n * dstride] = 0;\n   {\n \n   GFC_INTEGER_16 maxval;\n@@ -118,7 +118,7 @@ maxloc0_8_i16 (gfc_array_i8 * const restrict retarray,\n       {\n         /* Implementation start.  */\n \n-  if (*base > maxval)\n+  if (*base > maxval || !dest[0])\n     {\n       maxval = *base;\n       for (n = 0; n < rank; n++)\n@@ -241,7 +241,7 @@ mmaxloc0_8_i16 (gfc_array_i8 * const restrict retarray,\n \n   /* Initialize the return value.  */\n   for (n = 0; n < rank; n++)\n-    dest[n * dstride] = 1;\n+    dest[n * dstride] = 0;\n   {\n \n   GFC_INTEGER_16 maxval;\n@@ -253,7 +253,7 @@ mmaxloc0_8_i16 (gfc_array_i8 * const restrict retarray,\n       {\n         /* Implementation start.  */\n \n-  if (*mbase && *base > maxval)\n+  if (*mbase && (*base > maxval || !dest[0]))\n     {\n       maxval = *base;\n       for (n = 0; n < rank; n++)"}, {"sha": "16320bdb307e579d8c310453bc6b500248745dea", "filename": "libgfortran/generated/maxloc0_8_i4.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fmaxloc0_8_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fmaxloc0_8_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_8_i4.c?ref=a4b9e93e5d35d44cc1d13680800c36065e2cbd3e", "patch": "@@ -106,7 +106,7 @@ maxloc0_8_i4 (gfc_array_i8 * const restrict retarray,\n \n   /* Initialize the return value.  */\n   for (n = 0; n < rank; n++)\n-    dest[n * dstride] = 1;\n+    dest[n * dstride] = 0;\n   {\n \n   GFC_INTEGER_4 maxval;\n@@ -118,7 +118,7 @@ maxloc0_8_i4 (gfc_array_i8 * const restrict retarray,\n       {\n         /* Implementation start.  */\n \n-  if (*base > maxval)\n+  if (*base > maxval || !dest[0])\n     {\n       maxval = *base;\n       for (n = 0; n < rank; n++)\n@@ -241,7 +241,7 @@ mmaxloc0_8_i4 (gfc_array_i8 * const restrict retarray,\n \n   /* Initialize the return value.  */\n   for (n = 0; n < rank; n++)\n-    dest[n * dstride] = 1;\n+    dest[n * dstride] = 0;\n   {\n \n   GFC_INTEGER_4 maxval;\n@@ -253,7 +253,7 @@ mmaxloc0_8_i4 (gfc_array_i8 * const restrict retarray,\n       {\n         /* Implementation start.  */\n \n-  if (*mbase && *base > maxval)\n+  if (*mbase && (*base > maxval || !dest[0]))\n     {\n       maxval = *base;\n       for (n = 0; n < rank; n++)"}, {"sha": "99ab4b940d8fc0e972917d7646b470ef68bdeb0d", "filename": "libgfortran/generated/maxloc0_8_i8.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fmaxloc0_8_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fmaxloc0_8_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_8_i8.c?ref=a4b9e93e5d35d44cc1d13680800c36065e2cbd3e", "patch": "@@ -106,7 +106,7 @@ maxloc0_8_i8 (gfc_array_i8 * const restrict retarray,\n \n   /* Initialize the return value.  */\n   for (n = 0; n < rank; n++)\n-    dest[n * dstride] = 1;\n+    dest[n * dstride] = 0;\n   {\n \n   GFC_INTEGER_8 maxval;\n@@ -118,7 +118,7 @@ maxloc0_8_i8 (gfc_array_i8 * const restrict retarray,\n       {\n         /* Implementation start.  */\n \n-  if (*base > maxval)\n+  if (*base > maxval || !dest[0])\n     {\n       maxval = *base;\n       for (n = 0; n < rank; n++)\n@@ -241,7 +241,7 @@ mmaxloc0_8_i8 (gfc_array_i8 * const restrict retarray,\n \n   /* Initialize the return value.  */\n   for (n = 0; n < rank; n++)\n-    dest[n * dstride] = 1;\n+    dest[n * dstride] = 0;\n   {\n \n   GFC_INTEGER_8 maxval;\n@@ -253,7 +253,7 @@ mmaxloc0_8_i8 (gfc_array_i8 * const restrict retarray,\n       {\n         /* Implementation start.  */\n \n-  if (*mbase && *base > maxval)\n+  if (*mbase && (*base > maxval || !dest[0]))\n     {\n       maxval = *base;\n       for (n = 0; n < rank; n++)"}, {"sha": "eaaff9f5451c2664aadb2a75c42632a5eea925c3", "filename": "libgfortran/generated/maxloc0_8_r10.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fmaxloc0_8_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fmaxloc0_8_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_8_r10.c?ref=a4b9e93e5d35d44cc1d13680800c36065e2cbd3e", "patch": "@@ -106,7 +106,7 @@ maxloc0_8_r10 (gfc_array_i8 * const restrict retarray,\n \n   /* Initialize the return value.  */\n   for (n = 0; n < rank; n++)\n-    dest[n * dstride] = 1;\n+    dest[n * dstride] = 0;\n   {\n \n   GFC_REAL_10 maxval;\n@@ -118,7 +118,7 @@ maxloc0_8_r10 (gfc_array_i8 * const restrict retarray,\n       {\n         /* Implementation start.  */\n \n-  if (*base > maxval)\n+  if (*base > maxval || !dest[0])\n     {\n       maxval = *base;\n       for (n = 0; n < rank; n++)\n@@ -241,7 +241,7 @@ mmaxloc0_8_r10 (gfc_array_i8 * const restrict retarray,\n \n   /* Initialize the return value.  */\n   for (n = 0; n < rank; n++)\n-    dest[n * dstride] = 1;\n+    dest[n * dstride] = 0;\n   {\n \n   GFC_REAL_10 maxval;\n@@ -253,7 +253,7 @@ mmaxloc0_8_r10 (gfc_array_i8 * const restrict retarray,\n       {\n         /* Implementation start.  */\n \n-  if (*mbase && *base > maxval)\n+  if (*mbase && (*base > maxval || !dest[0]))\n     {\n       maxval = *base;\n       for (n = 0; n < rank; n++)"}, {"sha": "e0d1a427e1577816b2fe1e9cf92892e980ba3355", "filename": "libgfortran/generated/maxloc0_8_r16.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fmaxloc0_8_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fmaxloc0_8_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_8_r16.c?ref=a4b9e93e5d35d44cc1d13680800c36065e2cbd3e", "patch": "@@ -106,7 +106,7 @@ maxloc0_8_r16 (gfc_array_i8 * const restrict retarray,\n \n   /* Initialize the return value.  */\n   for (n = 0; n < rank; n++)\n-    dest[n * dstride] = 1;\n+    dest[n * dstride] = 0;\n   {\n \n   GFC_REAL_16 maxval;\n@@ -118,7 +118,7 @@ maxloc0_8_r16 (gfc_array_i8 * const restrict retarray,\n       {\n         /* Implementation start.  */\n \n-  if (*base > maxval)\n+  if (*base > maxval || !dest[0])\n     {\n       maxval = *base;\n       for (n = 0; n < rank; n++)\n@@ -241,7 +241,7 @@ mmaxloc0_8_r16 (gfc_array_i8 * const restrict retarray,\n \n   /* Initialize the return value.  */\n   for (n = 0; n < rank; n++)\n-    dest[n * dstride] = 1;\n+    dest[n * dstride] = 0;\n   {\n \n   GFC_REAL_16 maxval;\n@@ -253,7 +253,7 @@ mmaxloc0_8_r16 (gfc_array_i8 * const restrict retarray,\n       {\n         /* Implementation start.  */\n \n-  if (*mbase && *base > maxval)\n+  if (*mbase && (*base > maxval || !dest[0]))\n     {\n       maxval = *base;\n       for (n = 0; n < rank; n++)"}, {"sha": "54047b5ed51a86da2c7b706dbd63807dc901b5de", "filename": "libgfortran/generated/maxloc0_8_r4.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fmaxloc0_8_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fmaxloc0_8_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_8_r4.c?ref=a4b9e93e5d35d44cc1d13680800c36065e2cbd3e", "patch": "@@ -106,7 +106,7 @@ maxloc0_8_r4 (gfc_array_i8 * const restrict retarray,\n \n   /* Initialize the return value.  */\n   for (n = 0; n < rank; n++)\n-    dest[n * dstride] = 1;\n+    dest[n * dstride] = 0;\n   {\n \n   GFC_REAL_4 maxval;\n@@ -118,7 +118,7 @@ maxloc0_8_r4 (gfc_array_i8 * const restrict retarray,\n       {\n         /* Implementation start.  */\n \n-  if (*base > maxval)\n+  if (*base > maxval || !dest[0])\n     {\n       maxval = *base;\n       for (n = 0; n < rank; n++)\n@@ -241,7 +241,7 @@ mmaxloc0_8_r4 (gfc_array_i8 * const restrict retarray,\n \n   /* Initialize the return value.  */\n   for (n = 0; n < rank; n++)\n-    dest[n * dstride] = 1;\n+    dest[n * dstride] = 0;\n   {\n \n   GFC_REAL_4 maxval;\n@@ -253,7 +253,7 @@ mmaxloc0_8_r4 (gfc_array_i8 * const restrict retarray,\n       {\n         /* Implementation start.  */\n \n-  if (*mbase && *base > maxval)\n+  if (*mbase && (*base > maxval || !dest[0]))\n     {\n       maxval = *base;\n       for (n = 0; n < rank; n++)"}, {"sha": "820d3a7ec8f88b2f87c638ac596c74be8e192018", "filename": "libgfortran/generated/maxloc0_8_r8.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fmaxloc0_8_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fmaxloc0_8_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_8_r8.c?ref=a4b9e93e5d35d44cc1d13680800c36065e2cbd3e", "patch": "@@ -106,7 +106,7 @@ maxloc0_8_r8 (gfc_array_i8 * const restrict retarray,\n \n   /* Initialize the return value.  */\n   for (n = 0; n < rank; n++)\n-    dest[n * dstride] = 1;\n+    dest[n * dstride] = 0;\n   {\n \n   GFC_REAL_8 maxval;\n@@ -118,7 +118,7 @@ maxloc0_8_r8 (gfc_array_i8 * const restrict retarray,\n       {\n         /* Implementation start.  */\n \n-  if (*base > maxval)\n+  if (*base > maxval || !dest[0])\n     {\n       maxval = *base;\n       for (n = 0; n < rank; n++)\n@@ -241,7 +241,7 @@ mmaxloc0_8_r8 (gfc_array_i8 * const restrict retarray,\n \n   /* Initialize the return value.  */\n   for (n = 0; n < rank; n++)\n-    dest[n * dstride] = 1;\n+    dest[n * dstride] = 0;\n   {\n \n   GFC_REAL_8 maxval;\n@@ -253,7 +253,7 @@ mmaxloc0_8_r8 (gfc_array_i8 * const restrict retarray,\n       {\n         /* Implementation start.  */\n \n-  if (*mbase && *base > maxval)\n+  if (*mbase && (*base > maxval || !dest[0]))\n     {\n       maxval = *base;\n       for (n = 0; n < rank; n++)"}, {"sha": "9595ac33d405300f79b7edf601d6ac95256898c1", "filename": "libgfortran/generated/maxloc1_16_i16.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fmaxloc1_16_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fmaxloc1_16_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_16_i16.c?ref=a4b9e93e5d35d44cc1d13680800c36065e2cbd3e", "patch": "@@ -132,15 +132,15 @@ maxloc1_16_i16 (gfc_array_i16 * const restrict retarray,\n \n   GFC_INTEGER_16 maxval;\n   maxval = -GFC_INTEGER_16_HUGE;\n-  result = 1;\n+  result = 0;\n         if (len <= 0)\n \t  *dest = 0;\n \telse\n \t  {\n \t    for (n = 0; n < len; n++, src += delta)\n \t      {\n \n-  if (*src > maxval)\n+  if (*src > maxval || !result)\n     {\n       maxval = *src;\n       result = (GFC_INTEGER_16)n + 1;\n@@ -299,15 +299,15 @@ mmaxloc1_16_i16 (gfc_array_i16 * const restrict retarray,\n \n   GFC_INTEGER_16 maxval;\n   maxval = -GFC_INTEGER_16_HUGE;\n-  result = 1;\n+  result = 0;\n         if (len <= 0)\n \t  *dest = 0;\n \telse\n \t  {\n \t    for (n = 0; n < len; n++, src += delta, msrc += mdelta)\n \t      {\n \n-  if (*msrc && *src > maxval)\n+  if (*msrc && (*src > maxval || !result))\n     {\n       maxval = *src;\n       result = (GFC_INTEGER_16)n + 1;"}, {"sha": "cd668bbd6ee4c29c3f4c25b54cfd03bba22f07e2", "filename": "libgfortran/generated/maxloc1_16_i4.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fmaxloc1_16_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fmaxloc1_16_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_16_i4.c?ref=a4b9e93e5d35d44cc1d13680800c36065e2cbd3e", "patch": "@@ -132,15 +132,15 @@ maxloc1_16_i4 (gfc_array_i16 * const restrict retarray,\n \n   GFC_INTEGER_4 maxval;\n   maxval = -GFC_INTEGER_4_HUGE;\n-  result = 1;\n+  result = 0;\n         if (len <= 0)\n \t  *dest = 0;\n \telse\n \t  {\n \t    for (n = 0; n < len; n++, src += delta)\n \t      {\n \n-  if (*src > maxval)\n+  if (*src > maxval || !result)\n     {\n       maxval = *src;\n       result = (GFC_INTEGER_16)n + 1;\n@@ -299,15 +299,15 @@ mmaxloc1_16_i4 (gfc_array_i16 * const restrict retarray,\n \n   GFC_INTEGER_4 maxval;\n   maxval = -GFC_INTEGER_4_HUGE;\n-  result = 1;\n+  result = 0;\n         if (len <= 0)\n \t  *dest = 0;\n \telse\n \t  {\n \t    for (n = 0; n < len; n++, src += delta, msrc += mdelta)\n \t      {\n \n-  if (*msrc && *src > maxval)\n+  if (*msrc && (*src > maxval || !result))\n     {\n       maxval = *src;\n       result = (GFC_INTEGER_16)n + 1;"}, {"sha": "ab665986b09403f295e77f78645c2e34e6c3f430", "filename": "libgfortran/generated/maxloc1_16_i8.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fmaxloc1_16_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fmaxloc1_16_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_16_i8.c?ref=a4b9e93e5d35d44cc1d13680800c36065e2cbd3e", "patch": "@@ -132,15 +132,15 @@ maxloc1_16_i8 (gfc_array_i16 * const restrict retarray,\n \n   GFC_INTEGER_8 maxval;\n   maxval = -GFC_INTEGER_8_HUGE;\n-  result = 1;\n+  result = 0;\n         if (len <= 0)\n \t  *dest = 0;\n \telse\n \t  {\n \t    for (n = 0; n < len; n++, src += delta)\n \t      {\n \n-  if (*src > maxval)\n+  if (*src > maxval || !result)\n     {\n       maxval = *src;\n       result = (GFC_INTEGER_16)n + 1;\n@@ -299,15 +299,15 @@ mmaxloc1_16_i8 (gfc_array_i16 * const restrict retarray,\n \n   GFC_INTEGER_8 maxval;\n   maxval = -GFC_INTEGER_8_HUGE;\n-  result = 1;\n+  result = 0;\n         if (len <= 0)\n \t  *dest = 0;\n \telse\n \t  {\n \t    for (n = 0; n < len; n++, src += delta, msrc += mdelta)\n \t      {\n \n-  if (*msrc && *src > maxval)\n+  if (*msrc && (*src > maxval || !result))\n     {\n       maxval = *src;\n       result = (GFC_INTEGER_16)n + 1;"}, {"sha": "90606dd86e1430ec14fe4e2e64e3233882063241", "filename": "libgfortran/generated/maxloc1_16_r10.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fmaxloc1_16_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fmaxloc1_16_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_16_r10.c?ref=a4b9e93e5d35d44cc1d13680800c36065e2cbd3e", "patch": "@@ -132,15 +132,15 @@ maxloc1_16_r10 (gfc_array_i16 * const restrict retarray,\n \n   GFC_REAL_10 maxval;\n   maxval = -GFC_REAL_10_HUGE;\n-  result = 1;\n+  result = 0;\n         if (len <= 0)\n \t  *dest = 0;\n \telse\n \t  {\n \t    for (n = 0; n < len; n++, src += delta)\n \t      {\n \n-  if (*src > maxval)\n+  if (*src > maxval || !result)\n     {\n       maxval = *src;\n       result = (GFC_INTEGER_16)n + 1;\n@@ -299,15 +299,15 @@ mmaxloc1_16_r10 (gfc_array_i16 * const restrict retarray,\n \n   GFC_REAL_10 maxval;\n   maxval = -GFC_REAL_10_HUGE;\n-  result = 1;\n+  result = 0;\n         if (len <= 0)\n \t  *dest = 0;\n \telse\n \t  {\n \t    for (n = 0; n < len; n++, src += delta, msrc += mdelta)\n \t      {\n \n-  if (*msrc && *src > maxval)\n+  if (*msrc && (*src > maxval || !result))\n     {\n       maxval = *src;\n       result = (GFC_INTEGER_16)n + 1;"}, {"sha": "0a1939c9cde5fdfff5b6423f123d5243c3d46d63", "filename": "libgfortran/generated/maxloc1_16_r16.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fmaxloc1_16_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fmaxloc1_16_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_16_r16.c?ref=a4b9e93e5d35d44cc1d13680800c36065e2cbd3e", "patch": "@@ -132,15 +132,15 @@ maxloc1_16_r16 (gfc_array_i16 * const restrict retarray,\n \n   GFC_REAL_16 maxval;\n   maxval = -GFC_REAL_16_HUGE;\n-  result = 1;\n+  result = 0;\n         if (len <= 0)\n \t  *dest = 0;\n \telse\n \t  {\n \t    for (n = 0; n < len; n++, src += delta)\n \t      {\n \n-  if (*src > maxval)\n+  if (*src > maxval || !result)\n     {\n       maxval = *src;\n       result = (GFC_INTEGER_16)n + 1;\n@@ -299,15 +299,15 @@ mmaxloc1_16_r16 (gfc_array_i16 * const restrict retarray,\n \n   GFC_REAL_16 maxval;\n   maxval = -GFC_REAL_16_HUGE;\n-  result = 1;\n+  result = 0;\n         if (len <= 0)\n \t  *dest = 0;\n \telse\n \t  {\n \t    for (n = 0; n < len; n++, src += delta, msrc += mdelta)\n \t      {\n \n-  if (*msrc && *src > maxval)\n+  if (*msrc && (*src > maxval || !result))\n     {\n       maxval = *src;\n       result = (GFC_INTEGER_16)n + 1;"}, {"sha": "445e8b093b7cfef4cf9af237cf4176e01386a8b4", "filename": "libgfortran/generated/maxloc1_16_r4.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fmaxloc1_16_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fmaxloc1_16_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_16_r4.c?ref=a4b9e93e5d35d44cc1d13680800c36065e2cbd3e", "patch": "@@ -132,15 +132,15 @@ maxloc1_16_r4 (gfc_array_i16 * const restrict retarray,\n \n   GFC_REAL_4 maxval;\n   maxval = -GFC_REAL_4_HUGE;\n-  result = 1;\n+  result = 0;\n         if (len <= 0)\n \t  *dest = 0;\n \telse\n \t  {\n \t    for (n = 0; n < len; n++, src += delta)\n \t      {\n \n-  if (*src > maxval)\n+  if (*src > maxval || !result)\n     {\n       maxval = *src;\n       result = (GFC_INTEGER_16)n + 1;\n@@ -299,15 +299,15 @@ mmaxloc1_16_r4 (gfc_array_i16 * const restrict retarray,\n \n   GFC_REAL_4 maxval;\n   maxval = -GFC_REAL_4_HUGE;\n-  result = 1;\n+  result = 0;\n         if (len <= 0)\n \t  *dest = 0;\n \telse\n \t  {\n \t    for (n = 0; n < len; n++, src += delta, msrc += mdelta)\n \t      {\n \n-  if (*msrc && *src > maxval)\n+  if (*msrc && (*src > maxval || !result))\n     {\n       maxval = *src;\n       result = (GFC_INTEGER_16)n + 1;"}, {"sha": "3a663bb109477d624947720766190eb7438abefa", "filename": "libgfortran/generated/maxloc1_16_r8.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fmaxloc1_16_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fmaxloc1_16_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_16_r8.c?ref=a4b9e93e5d35d44cc1d13680800c36065e2cbd3e", "patch": "@@ -132,15 +132,15 @@ maxloc1_16_r8 (gfc_array_i16 * const restrict retarray,\n \n   GFC_REAL_8 maxval;\n   maxval = -GFC_REAL_8_HUGE;\n-  result = 1;\n+  result = 0;\n         if (len <= 0)\n \t  *dest = 0;\n \telse\n \t  {\n \t    for (n = 0; n < len; n++, src += delta)\n \t      {\n \n-  if (*src > maxval)\n+  if (*src > maxval || !result)\n     {\n       maxval = *src;\n       result = (GFC_INTEGER_16)n + 1;\n@@ -299,15 +299,15 @@ mmaxloc1_16_r8 (gfc_array_i16 * const restrict retarray,\n \n   GFC_REAL_8 maxval;\n   maxval = -GFC_REAL_8_HUGE;\n-  result = 1;\n+  result = 0;\n         if (len <= 0)\n \t  *dest = 0;\n \telse\n \t  {\n \t    for (n = 0; n < len; n++, src += delta, msrc += mdelta)\n \t      {\n \n-  if (*msrc && *src > maxval)\n+  if (*msrc && (*src > maxval || !result))\n     {\n       maxval = *src;\n       result = (GFC_INTEGER_16)n + 1;"}, {"sha": "b881504cbe0915eee4b6a73667280b0173b36d17", "filename": "libgfortran/generated/maxloc1_4_i16.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fmaxloc1_4_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fmaxloc1_4_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_4_i16.c?ref=a4b9e93e5d35d44cc1d13680800c36065e2cbd3e", "patch": "@@ -132,15 +132,15 @@ maxloc1_4_i16 (gfc_array_i4 * const restrict retarray,\n \n   GFC_INTEGER_16 maxval;\n   maxval = -GFC_INTEGER_16_HUGE;\n-  result = 1;\n+  result = 0;\n         if (len <= 0)\n \t  *dest = 0;\n \telse\n \t  {\n \t    for (n = 0; n < len; n++, src += delta)\n \t      {\n \n-  if (*src > maxval)\n+  if (*src > maxval || !result)\n     {\n       maxval = *src;\n       result = (GFC_INTEGER_4)n + 1;\n@@ -299,15 +299,15 @@ mmaxloc1_4_i16 (gfc_array_i4 * const restrict retarray,\n \n   GFC_INTEGER_16 maxval;\n   maxval = -GFC_INTEGER_16_HUGE;\n-  result = 1;\n+  result = 0;\n         if (len <= 0)\n \t  *dest = 0;\n \telse\n \t  {\n \t    for (n = 0; n < len; n++, src += delta, msrc += mdelta)\n \t      {\n \n-  if (*msrc && *src > maxval)\n+  if (*msrc && (*src > maxval || !result))\n     {\n       maxval = *src;\n       result = (GFC_INTEGER_4)n + 1;"}, {"sha": "e8a053ec04ae22386424e09795789f739465260c", "filename": "libgfortran/generated/maxloc1_4_i4.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fmaxloc1_4_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fmaxloc1_4_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_4_i4.c?ref=a4b9e93e5d35d44cc1d13680800c36065e2cbd3e", "patch": "@@ -132,15 +132,15 @@ maxloc1_4_i4 (gfc_array_i4 * const restrict retarray,\n \n   GFC_INTEGER_4 maxval;\n   maxval = -GFC_INTEGER_4_HUGE;\n-  result = 1;\n+  result = 0;\n         if (len <= 0)\n \t  *dest = 0;\n \telse\n \t  {\n \t    for (n = 0; n < len; n++, src += delta)\n \t      {\n \n-  if (*src > maxval)\n+  if (*src > maxval || !result)\n     {\n       maxval = *src;\n       result = (GFC_INTEGER_4)n + 1;\n@@ -299,15 +299,15 @@ mmaxloc1_4_i4 (gfc_array_i4 * const restrict retarray,\n \n   GFC_INTEGER_4 maxval;\n   maxval = -GFC_INTEGER_4_HUGE;\n-  result = 1;\n+  result = 0;\n         if (len <= 0)\n \t  *dest = 0;\n \telse\n \t  {\n \t    for (n = 0; n < len; n++, src += delta, msrc += mdelta)\n \t      {\n \n-  if (*msrc && *src > maxval)\n+  if (*msrc && (*src > maxval || !result))\n     {\n       maxval = *src;\n       result = (GFC_INTEGER_4)n + 1;"}, {"sha": "ff5b7b9fe19721d19cc4ab47f5a476d9fbbf0b9c", "filename": "libgfortran/generated/maxloc1_4_i8.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fmaxloc1_4_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fmaxloc1_4_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_4_i8.c?ref=a4b9e93e5d35d44cc1d13680800c36065e2cbd3e", "patch": "@@ -132,15 +132,15 @@ maxloc1_4_i8 (gfc_array_i4 * const restrict retarray,\n \n   GFC_INTEGER_8 maxval;\n   maxval = -GFC_INTEGER_8_HUGE;\n-  result = 1;\n+  result = 0;\n         if (len <= 0)\n \t  *dest = 0;\n \telse\n \t  {\n \t    for (n = 0; n < len; n++, src += delta)\n \t      {\n \n-  if (*src > maxval)\n+  if (*src > maxval || !result)\n     {\n       maxval = *src;\n       result = (GFC_INTEGER_4)n + 1;\n@@ -299,15 +299,15 @@ mmaxloc1_4_i8 (gfc_array_i4 * const restrict retarray,\n \n   GFC_INTEGER_8 maxval;\n   maxval = -GFC_INTEGER_8_HUGE;\n-  result = 1;\n+  result = 0;\n         if (len <= 0)\n \t  *dest = 0;\n \telse\n \t  {\n \t    for (n = 0; n < len; n++, src += delta, msrc += mdelta)\n \t      {\n \n-  if (*msrc && *src > maxval)\n+  if (*msrc && (*src > maxval || !result))\n     {\n       maxval = *src;\n       result = (GFC_INTEGER_4)n + 1;"}, {"sha": "306cfe986717a8550448cdb93472627b7dd5aa93", "filename": "libgfortran/generated/maxloc1_4_r10.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fmaxloc1_4_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fmaxloc1_4_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_4_r10.c?ref=a4b9e93e5d35d44cc1d13680800c36065e2cbd3e", "patch": "@@ -132,15 +132,15 @@ maxloc1_4_r10 (gfc_array_i4 * const restrict retarray,\n \n   GFC_REAL_10 maxval;\n   maxval = -GFC_REAL_10_HUGE;\n-  result = 1;\n+  result = 0;\n         if (len <= 0)\n \t  *dest = 0;\n \telse\n \t  {\n \t    for (n = 0; n < len; n++, src += delta)\n \t      {\n \n-  if (*src > maxval)\n+  if (*src > maxval || !result)\n     {\n       maxval = *src;\n       result = (GFC_INTEGER_4)n + 1;\n@@ -299,15 +299,15 @@ mmaxloc1_4_r10 (gfc_array_i4 * const restrict retarray,\n \n   GFC_REAL_10 maxval;\n   maxval = -GFC_REAL_10_HUGE;\n-  result = 1;\n+  result = 0;\n         if (len <= 0)\n \t  *dest = 0;\n \telse\n \t  {\n \t    for (n = 0; n < len; n++, src += delta, msrc += mdelta)\n \t      {\n \n-  if (*msrc && *src > maxval)\n+  if (*msrc && (*src > maxval || !result))\n     {\n       maxval = *src;\n       result = (GFC_INTEGER_4)n + 1;"}, {"sha": "6f6cd22b27aff13b9af7c6b01b10c0d23ca8c783", "filename": "libgfortran/generated/maxloc1_4_r16.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fmaxloc1_4_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fmaxloc1_4_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_4_r16.c?ref=a4b9e93e5d35d44cc1d13680800c36065e2cbd3e", "patch": "@@ -132,15 +132,15 @@ maxloc1_4_r16 (gfc_array_i4 * const restrict retarray,\n \n   GFC_REAL_16 maxval;\n   maxval = -GFC_REAL_16_HUGE;\n-  result = 1;\n+  result = 0;\n         if (len <= 0)\n \t  *dest = 0;\n \telse\n \t  {\n \t    for (n = 0; n < len; n++, src += delta)\n \t      {\n \n-  if (*src > maxval)\n+  if (*src > maxval || !result)\n     {\n       maxval = *src;\n       result = (GFC_INTEGER_4)n + 1;\n@@ -299,15 +299,15 @@ mmaxloc1_4_r16 (gfc_array_i4 * const restrict retarray,\n \n   GFC_REAL_16 maxval;\n   maxval = -GFC_REAL_16_HUGE;\n-  result = 1;\n+  result = 0;\n         if (len <= 0)\n \t  *dest = 0;\n \telse\n \t  {\n \t    for (n = 0; n < len; n++, src += delta, msrc += mdelta)\n \t      {\n \n-  if (*msrc && *src > maxval)\n+  if (*msrc && (*src > maxval || !result))\n     {\n       maxval = *src;\n       result = (GFC_INTEGER_4)n + 1;"}, {"sha": "3795ed80d55f54571d80da751cc963e92d11343f", "filename": "libgfortran/generated/maxloc1_4_r4.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fmaxloc1_4_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fmaxloc1_4_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_4_r4.c?ref=a4b9e93e5d35d44cc1d13680800c36065e2cbd3e", "patch": "@@ -132,15 +132,15 @@ maxloc1_4_r4 (gfc_array_i4 * const restrict retarray,\n \n   GFC_REAL_4 maxval;\n   maxval = -GFC_REAL_4_HUGE;\n-  result = 1;\n+  result = 0;\n         if (len <= 0)\n \t  *dest = 0;\n \telse\n \t  {\n \t    for (n = 0; n < len; n++, src += delta)\n \t      {\n \n-  if (*src > maxval)\n+  if (*src > maxval || !result)\n     {\n       maxval = *src;\n       result = (GFC_INTEGER_4)n + 1;\n@@ -299,15 +299,15 @@ mmaxloc1_4_r4 (gfc_array_i4 * const restrict retarray,\n \n   GFC_REAL_4 maxval;\n   maxval = -GFC_REAL_4_HUGE;\n-  result = 1;\n+  result = 0;\n         if (len <= 0)\n \t  *dest = 0;\n \telse\n \t  {\n \t    for (n = 0; n < len; n++, src += delta, msrc += mdelta)\n \t      {\n \n-  if (*msrc && *src > maxval)\n+  if (*msrc && (*src > maxval || !result))\n     {\n       maxval = *src;\n       result = (GFC_INTEGER_4)n + 1;"}, {"sha": "82d4a6710c92c86214f7eb27548d4b0bb4b1eab1", "filename": "libgfortran/generated/maxloc1_4_r8.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fmaxloc1_4_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fmaxloc1_4_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_4_r8.c?ref=a4b9e93e5d35d44cc1d13680800c36065e2cbd3e", "patch": "@@ -132,15 +132,15 @@ maxloc1_4_r8 (gfc_array_i4 * const restrict retarray,\n \n   GFC_REAL_8 maxval;\n   maxval = -GFC_REAL_8_HUGE;\n-  result = 1;\n+  result = 0;\n         if (len <= 0)\n \t  *dest = 0;\n \telse\n \t  {\n \t    for (n = 0; n < len; n++, src += delta)\n \t      {\n \n-  if (*src > maxval)\n+  if (*src > maxval || !result)\n     {\n       maxval = *src;\n       result = (GFC_INTEGER_4)n + 1;\n@@ -299,15 +299,15 @@ mmaxloc1_4_r8 (gfc_array_i4 * const restrict retarray,\n \n   GFC_REAL_8 maxval;\n   maxval = -GFC_REAL_8_HUGE;\n-  result = 1;\n+  result = 0;\n         if (len <= 0)\n \t  *dest = 0;\n \telse\n \t  {\n \t    for (n = 0; n < len; n++, src += delta, msrc += mdelta)\n \t      {\n \n-  if (*msrc && *src > maxval)\n+  if (*msrc && (*src > maxval || !result))\n     {\n       maxval = *src;\n       result = (GFC_INTEGER_4)n + 1;"}, {"sha": "69cb35ec5f90304d69ff0f43dd4064396d0fc98a", "filename": "libgfortran/generated/maxloc1_8_i16.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fmaxloc1_8_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fmaxloc1_8_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_8_i16.c?ref=a4b9e93e5d35d44cc1d13680800c36065e2cbd3e", "patch": "@@ -132,15 +132,15 @@ maxloc1_8_i16 (gfc_array_i8 * const restrict retarray,\n \n   GFC_INTEGER_16 maxval;\n   maxval = -GFC_INTEGER_16_HUGE;\n-  result = 1;\n+  result = 0;\n         if (len <= 0)\n \t  *dest = 0;\n \telse\n \t  {\n \t    for (n = 0; n < len; n++, src += delta)\n \t      {\n \n-  if (*src > maxval)\n+  if (*src > maxval || !result)\n     {\n       maxval = *src;\n       result = (GFC_INTEGER_8)n + 1;\n@@ -299,15 +299,15 @@ mmaxloc1_8_i16 (gfc_array_i8 * const restrict retarray,\n \n   GFC_INTEGER_16 maxval;\n   maxval = -GFC_INTEGER_16_HUGE;\n-  result = 1;\n+  result = 0;\n         if (len <= 0)\n \t  *dest = 0;\n \telse\n \t  {\n \t    for (n = 0; n < len; n++, src += delta, msrc += mdelta)\n \t      {\n \n-  if (*msrc && *src > maxval)\n+  if (*msrc && (*src > maxval || !result))\n     {\n       maxval = *src;\n       result = (GFC_INTEGER_8)n + 1;"}, {"sha": "6857896d5b51e7d395857790dd40fe906e293859", "filename": "libgfortran/generated/maxloc1_8_i4.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fmaxloc1_8_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fmaxloc1_8_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_8_i4.c?ref=a4b9e93e5d35d44cc1d13680800c36065e2cbd3e", "patch": "@@ -132,15 +132,15 @@ maxloc1_8_i4 (gfc_array_i8 * const restrict retarray,\n \n   GFC_INTEGER_4 maxval;\n   maxval = -GFC_INTEGER_4_HUGE;\n-  result = 1;\n+  result = 0;\n         if (len <= 0)\n \t  *dest = 0;\n \telse\n \t  {\n \t    for (n = 0; n < len; n++, src += delta)\n \t      {\n \n-  if (*src > maxval)\n+  if (*src > maxval || !result)\n     {\n       maxval = *src;\n       result = (GFC_INTEGER_8)n + 1;\n@@ -299,15 +299,15 @@ mmaxloc1_8_i4 (gfc_array_i8 * const restrict retarray,\n \n   GFC_INTEGER_4 maxval;\n   maxval = -GFC_INTEGER_4_HUGE;\n-  result = 1;\n+  result = 0;\n         if (len <= 0)\n \t  *dest = 0;\n \telse\n \t  {\n \t    for (n = 0; n < len; n++, src += delta, msrc += mdelta)\n \t      {\n \n-  if (*msrc && *src > maxval)\n+  if (*msrc && (*src > maxval || !result))\n     {\n       maxval = *src;\n       result = (GFC_INTEGER_8)n + 1;"}, {"sha": "5c5f8368b53a8af70817d4cbef7e64c3a126eeeb", "filename": "libgfortran/generated/maxloc1_8_i8.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fmaxloc1_8_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fmaxloc1_8_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_8_i8.c?ref=a4b9e93e5d35d44cc1d13680800c36065e2cbd3e", "patch": "@@ -132,15 +132,15 @@ maxloc1_8_i8 (gfc_array_i8 * const restrict retarray,\n \n   GFC_INTEGER_8 maxval;\n   maxval = -GFC_INTEGER_8_HUGE;\n-  result = 1;\n+  result = 0;\n         if (len <= 0)\n \t  *dest = 0;\n \telse\n \t  {\n \t    for (n = 0; n < len; n++, src += delta)\n \t      {\n \n-  if (*src > maxval)\n+  if (*src > maxval || !result)\n     {\n       maxval = *src;\n       result = (GFC_INTEGER_8)n + 1;\n@@ -299,15 +299,15 @@ mmaxloc1_8_i8 (gfc_array_i8 * const restrict retarray,\n \n   GFC_INTEGER_8 maxval;\n   maxval = -GFC_INTEGER_8_HUGE;\n-  result = 1;\n+  result = 0;\n         if (len <= 0)\n \t  *dest = 0;\n \telse\n \t  {\n \t    for (n = 0; n < len; n++, src += delta, msrc += mdelta)\n \t      {\n \n-  if (*msrc && *src > maxval)\n+  if (*msrc && (*src > maxval || !result))\n     {\n       maxval = *src;\n       result = (GFC_INTEGER_8)n + 1;"}, {"sha": "e4f17d49b8e6d634d62a839ea9a7dc76dc4cd55e", "filename": "libgfortran/generated/maxloc1_8_r10.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fmaxloc1_8_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fmaxloc1_8_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_8_r10.c?ref=a4b9e93e5d35d44cc1d13680800c36065e2cbd3e", "patch": "@@ -132,15 +132,15 @@ maxloc1_8_r10 (gfc_array_i8 * const restrict retarray,\n \n   GFC_REAL_10 maxval;\n   maxval = -GFC_REAL_10_HUGE;\n-  result = 1;\n+  result = 0;\n         if (len <= 0)\n \t  *dest = 0;\n \telse\n \t  {\n \t    for (n = 0; n < len; n++, src += delta)\n \t      {\n \n-  if (*src > maxval)\n+  if (*src > maxval || !result)\n     {\n       maxval = *src;\n       result = (GFC_INTEGER_8)n + 1;\n@@ -299,15 +299,15 @@ mmaxloc1_8_r10 (gfc_array_i8 * const restrict retarray,\n \n   GFC_REAL_10 maxval;\n   maxval = -GFC_REAL_10_HUGE;\n-  result = 1;\n+  result = 0;\n         if (len <= 0)\n \t  *dest = 0;\n \telse\n \t  {\n \t    for (n = 0; n < len; n++, src += delta, msrc += mdelta)\n \t      {\n \n-  if (*msrc && *src > maxval)\n+  if (*msrc && (*src > maxval || !result))\n     {\n       maxval = *src;\n       result = (GFC_INTEGER_8)n + 1;"}, {"sha": "0a5dd515e9d0c56eb424c39a84dcdc207407cea0", "filename": "libgfortran/generated/maxloc1_8_r16.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fmaxloc1_8_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fmaxloc1_8_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_8_r16.c?ref=a4b9e93e5d35d44cc1d13680800c36065e2cbd3e", "patch": "@@ -132,15 +132,15 @@ maxloc1_8_r16 (gfc_array_i8 * const restrict retarray,\n \n   GFC_REAL_16 maxval;\n   maxval = -GFC_REAL_16_HUGE;\n-  result = 1;\n+  result = 0;\n         if (len <= 0)\n \t  *dest = 0;\n \telse\n \t  {\n \t    for (n = 0; n < len; n++, src += delta)\n \t      {\n \n-  if (*src > maxval)\n+  if (*src > maxval || !result)\n     {\n       maxval = *src;\n       result = (GFC_INTEGER_8)n + 1;\n@@ -299,15 +299,15 @@ mmaxloc1_8_r16 (gfc_array_i8 * const restrict retarray,\n \n   GFC_REAL_16 maxval;\n   maxval = -GFC_REAL_16_HUGE;\n-  result = 1;\n+  result = 0;\n         if (len <= 0)\n \t  *dest = 0;\n \telse\n \t  {\n \t    for (n = 0; n < len; n++, src += delta, msrc += mdelta)\n \t      {\n \n-  if (*msrc && *src > maxval)\n+  if (*msrc && (*src > maxval || !result))\n     {\n       maxval = *src;\n       result = (GFC_INTEGER_8)n + 1;"}, {"sha": "15a82f2492167633c32bf27f0a02e7ae4af5e848", "filename": "libgfortran/generated/maxloc1_8_r4.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fmaxloc1_8_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fmaxloc1_8_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_8_r4.c?ref=a4b9e93e5d35d44cc1d13680800c36065e2cbd3e", "patch": "@@ -132,15 +132,15 @@ maxloc1_8_r4 (gfc_array_i8 * const restrict retarray,\n \n   GFC_REAL_4 maxval;\n   maxval = -GFC_REAL_4_HUGE;\n-  result = 1;\n+  result = 0;\n         if (len <= 0)\n \t  *dest = 0;\n \telse\n \t  {\n \t    for (n = 0; n < len; n++, src += delta)\n \t      {\n \n-  if (*src > maxval)\n+  if (*src > maxval || !result)\n     {\n       maxval = *src;\n       result = (GFC_INTEGER_8)n + 1;\n@@ -299,15 +299,15 @@ mmaxloc1_8_r4 (gfc_array_i8 * const restrict retarray,\n \n   GFC_REAL_4 maxval;\n   maxval = -GFC_REAL_4_HUGE;\n-  result = 1;\n+  result = 0;\n         if (len <= 0)\n \t  *dest = 0;\n \telse\n \t  {\n \t    for (n = 0; n < len; n++, src += delta, msrc += mdelta)\n \t      {\n \n-  if (*msrc && *src > maxval)\n+  if (*msrc && (*src > maxval || !result))\n     {\n       maxval = *src;\n       result = (GFC_INTEGER_8)n + 1;"}, {"sha": "c89135e2f3a89e73e8df56d59bd90e8ea30b2226", "filename": "libgfortran/generated/maxloc1_8_r8.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fmaxloc1_8_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fmaxloc1_8_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_8_r8.c?ref=a4b9e93e5d35d44cc1d13680800c36065e2cbd3e", "patch": "@@ -132,15 +132,15 @@ maxloc1_8_r8 (gfc_array_i8 * const restrict retarray,\n \n   GFC_REAL_8 maxval;\n   maxval = -GFC_REAL_8_HUGE;\n-  result = 1;\n+  result = 0;\n         if (len <= 0)\n \t  *dest = 0;\n \telse\n \t  {\n \t    for (n = 0; n < len; n++, src += delta)\n \t      {\n \n-  if (*src > maxval)\n+  if (*src > maxval || !result)\n     {\n       maxval = *src;\n       result = (GFC_INTEGER_8)n + 1;\n@@ -299,15 +299,15 @@ mmaxloc1_8_r8 (gfc_array_i8 * const restrict retarray,\n \n   GFC_REAL_8 maxval;\n   maxval = -GFC_REAL_8_HUGE;\n-  result = 1;\n+  result = 0;\n         if (len <= 0)\n \t  *dest = 0;\n \telse\n \t  {\n \t    for (n = 0; n < len; n++, src += delta, msrc += mdelta)\n \t      {\n \n-  if (*msrc && *src > maxval)\n+  if (*msrc && (*src > maxval || !result))\n     {\n       maxval = *src;\n       result = (GFC_INTEGER_8)n + 1;"}, {"sha": "7bf58e32789bdfd9f83bf375575b195bcfd89241", "filename": "libgfortran/generated/minloc0_16_i16.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fminloc0_16_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fminloc0_16_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_16_i16.c?ref=a4b9e93e5d35d44cc1d13680800c36065e2cbd3e", "patch": "@@ -106,7 +106,7 @@ minloc0_16_i16 (gfc_array_i16 * const restrict retarray,\n \n   /* Initialize the return value.  */\n   for (n = 0; n < rank; n++)\n-    dest[n * dstride] = 1;\n+    dest[n * dstride] = 0;\n   {\n \n   GFC_INTEGER_16 minval;\n@@ -118,7 +118,7 @@ minloc0_16_i16 (gfc_array_i16 * const restrict retarray,\n       {\n         /* Implementation start.  */\n \n-  if (*base < minval)\n+  if (*base < minval || !dest[0])\n     {\n       minval = *base;\n       for (n = 0; n < rank; n++)\n@@ -241,7 +241,7 @@ mminloc0_16_i16 (gfc_array_i16 * const restrict retarray,\n \n   /* Initialize the return value.  */\n   for (n = 0; n < rank; n++)\n-    dest[n * dstride] = 1;\n+    dest[n * dstride] = 0;\n   {\n \n   GFC_INTEGER_16 minval;\n@@ -253,7 +253,7 @@ mminloc0_16_i16 (gfc_array_i16 * const restrict retarray,\n       {\n         /* Implementation start.  */\n \n-  if (*mbase && *base < minval)\n+  if (*mbase && (*base < minval || !dest[0]))\n     {\n       minval = *base;\n       for (n = 0; n < rank; n++)"}, {"sha": "b42205bd6b442512a7748afa46ee34ae25e79376", "filename": "libgfortran/generated/minloc0_16_i4.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fminloc0_16_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fminloc0_16_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_16_i4.c?ref=a4b9e93e5d35d44cc1d13680800c36065e2cbd3e", "patch": "@@ -106,7 +106,7 @@ minloc0_16_i4 (gfc_array_i16 * const restrict retarray,\n \n   /* Initialize the return value.  */\n   for (n = 0; n < rank; n++)\n-    dest[n * dstride] = 1;\n+    dest[n * dstride] = 0;\n   {\n \n   GFC_INTEGER_4 minval;\n@@ -118,7 +118,7 @@ minloc0_16_i4 (gfc_array_i16 * const restrict retarray,\n       {\n         /* Implementation start.  */\n \n-  if (*base < minval)\n+  if (*base < minval || !dest[0])\n     {\n       minval = *base;\n       for (n = 0; n < rank; n++)\n@@ -241,7 +241,7 @@ mminloc0_16_i4 (gfc_array_i16 * const restrict retarray,\n \n   /* Initialize the return value.  */\n   for (n = 0; n < rank; n++)\n-    dest[n * dstride] = 1;\n+    dest[n * dstride] = 0;\n   {\n \n   GFC_INTEGER_4 minval;\n@@ -253,7 +253,7 @@ mminloc0_16_i4 (gfc_array_i16 * const restrict retarray,\n       {\n         /* Implementation start.  */\n \n-  if (*mbase && *base < minval)\n+  if (*mbase && (*base < minval || !dest[0]))\n     {\n       minval = *base;\n       for (n = 0; n < rank; n++)"}, {"sha": "c687d10b716a5d14f97b3b34b81a224d2ab5a8da", "filename": "libgfortran/generated/minloc0_16_i8.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fminloc0_16_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fminloc0_16_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_16_i8.c?ref=a4b9e93e5d35d44cc1d13680800c36065e2cbd3e", "patch": "@@ -106,7 +106,7 @@ minloc0_16_i8 (gfc_array_i16 * const restrict retarray,\n \n   /* Initialize the return value.  */\n   for (n = 0; n < rank; n++)\n-    dest[n * dstride] = 1;\n+    dest[n * dstride] = 0;\n   {\n \n   GFC_INTEGER_8 minval;\n@@ -118,7 +118,7 @@ minloc0_16_i8 (gfc_array_i16 * const restrict retarray,\n       {\n         /* Implementation start.  */\n \n-  if (*base < minval)\n+  if (*base < minval || !dest[0])\n     {\n       minval = *base;\n       for (n = 0; n < rank; n++)\n@@ -241,7 +241,7 @@ mminloc0_16_i8 (gfc_array_i16 * const restrict retarray,\n \n   /* Initialize the return value.  */\n   for (n = 0; n < rank; n++)\n-    dest[n * dstride] = 1;\n+    dest[n * dstride] = 0;\n   {\n \n   GFC_INTEGER_8 minval;\n@@ -253,7 +253,7 @@ mminloc0_16_i8 (gfc_array_i16 * const restrict retarray,\n       {\n         /* Implementation start.  */\n \n-  if (*mbase && *base < minval)\n+  if (*mbase && (*base < minval || !dest[0]))\n     {\n       minval = *base;\n       for (n = 0; n < rank; n++)"}, {"sha": "99ae91d7fc0c6156535b2ef245af0c3164194ea0", "filename": "libgfortran/generated/minloc0_16_r10.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fminloc0_16_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fminloc0_16_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_16_r10.c?ref=a4b9e93e5d35d44cc1d13680800c36065e2cbd3e", "patch": "@@ -106,7 +106,7 @@ minloc0_16_r10 (gfc_array_i16 * const restrict retarray,\n \n   /* Initialize the return value.  */\n   for (n = 0; n < rank; n++)\n-    dest[n * dstride] = 1;\n+    dest[n * dstride] = 0;\n   {\n \n   GFC_REAL_10 minval;\n@@ -118,7 +118,7 @@ minloc0_16_r10 (gfc_array_i16 * const restrict retarray,\n       {\n         /* Implementation start.  */\n \n-  if (*base < minval)\n+  if (*base < minval || !dest[0])\n     {\n       minval = *base;\n       for (n = 0; n < rank; n++)\n@@ -241,7 +241,7 @@ mminloc0_16_r10 (gfc_array_i16 * const restrict retarray,\n \n   /* Initialize the return value.  */\n   for (n = 0; n < rank; n++)\n-    dest[n * dstride] = 1;\n+    dest[n * dstride] = 0;\n   {\n \n   GFC_REAL_10 minval;\n@@ -253,7 +253,7 @@ mminloc0_16_r10 (gfc_array_i16 * const restrict retarray,\n       {\n         /* Implementation start.  */\n \n-  if (*mbase && *base < minval)\n+  if (*mbase && (*base < minval || !dest[0]))\n     {\n       minval = *base;\n       for (n = 0; n < rank; n++)"}, {"sha": "d727f4c91e6205487d5d783487a8378e28eec5b9", "filename": "libgfortran/generated/minloc0_16_r16.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fminloc0_16_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fminloc0_16_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_16_r16.c?ref=a4b9e93e5d35d44cc1d13680800c36065e2cbd3e", "patch": "@@ -106,7 +106,7 @@ minloc0_16_r16 (gfc_array_i16 * const restrict retarray,\n \n   /* Initialize the return value.  */\n   for (n = 0; n < rank; n++)\n-    dest[n * dstride] = 1;\n+    dest[n * dstride] = 0;\n   {\n \n   GFC_REAL_16 minval;\n@@ -118,7 +118,7 @@ minloc0_16_r16 (gfc_array_i16 * const restrict retarray,\n       {\n         /* Implementation start.  */\n \n-  if (*base < minval)\n+  if (*base < minval || !dest[0])\n     {\n       minval = *base;\n       for (n = 0; n < rank; n++)\n@@ -241,7 +241,7 @@ mminloc0_16_r16 (gfc_array_i16 * const restrict retarray,\n \n   /* Initialize the return value.  */\n   for (n = 0; n < rank; n++)\n-    dest[n * dstride] = 1;\n+    dest[n * dstride] = 0;\n   {\n \n   GFC_REAL_16 minval;\n@@ -253,7 +253,7 @@ mminloc0_16_r16 (gfc_array_i16 * const restrict retarray,\n       {\n         /* Implementation start.  */\n \n-  if (*mbase && *base < minval)\n+  if (*mbase && (*base < minval || !dest[0]))\n     {\n       minval = *base;\n       for (n = 0; n < rank; n++)"}, {"sha": "501a668efd6ee38c9b55aede55f058cf5233fea1", "filename": "libgfortran/generated/minloc0_16_r4.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fminloc0_16_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fminloc0_16_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_16_r4.c?ref=a4b9e93e5d35d44cc1d13680800c36065e2cbd3e", "patch": "@@ -106,7 +106,7 @@ minloc0_16_r4 (gfc_array_i16 * const restrict retarray,\n \n   /* Initialize the return value.  */\n   for (n = 0; n < rank; n++)\n-    dest[n * dstride] = 1;\n+    dest[n * dstride] = 0;\n   {\n \n   GFC_REAL_4 minval;\n@@ -118,7 +118,7 @@ minloc0_16_r4 (gfc_array_i16 * const restrict retarray,\n       {\n         /* Implementation start.  */\n \n-  if (*base < minval)\n+  if (*base < minval || !dest[0])\n     {\n       minval = *base;\n       for (n = 0; n < rank; n++)\n@@ -241,7 +241,7 @@ mminloc0_16_r4 (gfc_array_i16 * const restrict retarray,\n \n   /* Initialize the return value.  */\n   for (n = 0; n < rank; n++)\n-    dest[n * dstride] = 1;\n+    dest[n * dstride] = 0;\n   {\n \n   GFC_REAL_4 minval;\n@@ -253,7 +253,7 @@ mminloc0_16_r4 (gfc_array_i16 * const restrict retarray,\n       {\n         /* Implementation start.  */\n \n-  if (*mbase && *base < minval)\n+  if (*mbase && (*base < minval || !dest[0]))\n     {\n       minval = *base;\n       for (n = 0; n < rank; n++)"}, {"sha": "57783b6c174d2cb0af4cea077698cb458e99714e", "filename": "libgfortran/generated/minloc0_16_r8.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fminloc0_16_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fminloc0_16_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_16_r8.c?ref=a4b9e93e5d35d44cc1d13680800c36065e2cbd3e", "patch": "@@ -106,7 +106,7 @@ minloc0_16_r8 (gfc_array_i16 * const restrict retarray,\n \n   /* Initialize the return value.  */\n   for (n = 0; n < rank; n++)\n-    dest[n * dstride] = 1;\n+    dest[n * dstride] = 0;\n   {\n \n   GFC_REAL_8 minval;\n@@ -118,7 +118,7 @@ minloc0_16_r8 (gfc_array_i16 * const restrict retarray,\n       {\n         /* Implementation start.  */\n \n-  if (*base < minval)\n+  if (*base < minval || !dest[0])\n     {\n       minval = *base;\n       for (n = 0; n < rank; n++)\n@@ -241,7 +241,7 @@ mminloc0_16_r8 (gfc_array_i16 * const restrict retarray,\n \n   /* Initialize the return value.  */\n   for (n = 0; n < rank; n++)\n-    dest[n * dstride] = 1;\n+    dest[n * dstride] = 0;\n   {\n \n   GFC_REAL_8 minval;\n@@ -253,7 +253,7 @@ mminloc0_16_r8 (gfc_array_i16 * const restrict retarray,\n       {\n         /* Implementation start.  */\n \n-  if (*mbase && *base < minval)\n+  if (*mbase && (*base < minval || !dest[0]))\n     {\n       minval = *base;\n       for (n = 0; n < rank; n++)"}, {"sha": "b71fbaa286dcfb82501fb3b5f5868946bb893fa3", "filename": "libgfortran/generated/minloc0_4_i16.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fminloc0_4_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fminloc0_4_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_4_i16.c?ref=a4b9e93e5d35d44cc1d13680800c36065e2cbd3e", "patch": "@@ -106,7 +106,7 @@ minloc0_4_i16 (gfc_array_i4 * const restrict retarray,\n \n   /* Initialize the return value.  */\n   for (n = 0; n < rank; n++)\n-    dest[n * dstride] = 1;\n+    dest[n * dstride] = 0;\n   {\n \n   GFC_INTEGER_16 minval;\n@@ -118,7 +118,7 @@ minloc0_4_i16 (gfc_array_i4 * const restrict retarray,\n       {\n         /* Implementation start.  */\n \n-  if (*base < minval)\n+  if (*base < minval || !dest[0])\n     {\n       minval = *base;\n       for (n = 0; n < rank; n++)\n@@ -241,7 +241,7 @@ mminloc0_4_i16 (gfc_array_i4 * const restrict retarray,\n \n   /* Initialize the return value.  */\n   for (n = 0; n < rank; n++)\n-    dest[n * dstride] = 1;\n+    dest[n * dstride] = 0;\n   {\n \n   GFC_INTEGER_16 minval;\n@@ -253,7 +253,7 @@ mminloc0_4_i16 (gfc_array_i4 * const restrict retarray,\n       {\n         /* Implementation start.  */\n \n-  if (*mbase && *base < minval)\n+  if (*mbase && (*base < minval || !dest[0]))\n     {\n       minval = *base;\n       for (n = 0; n < rank; n++)"}, {"sha": "c655b1ac713527788bbf3f36156452992d2c74d1", "filename": "libgfortran/generated/minloc0_4_i4.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fminloc0_4_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fminloc0_4_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_4_i4.c?ref=a4b9e93e5d35d44cc1d13680800c36065e2cbd3e", "patch": "@@ -106,7 +106,7 @@ minloc0_4_i4 (gfc_array_i4 * const restrict retarray,\n \n   /* Initialize the return value.  */\n   for (n = 0; n < rank; n++)\n-    dest[n * dstride] = 1;\n+    dest[n * dstride] = 0;\n   {\n \n   GFC_INTEGER_4 minval;\n@@ -118,7 +118,7 @@ minloc0_4_i4 (gfc_array_i4 * const restrict retarray,\n       {\n         /* Implementation start.  */\n \n-  if (*base < minval)\n+  if (*base < minval || !dest[0])\n     {\n       minval = *base;\n       for (n = 0; n < rank; n++)\n@@ -241,7 +241,7 @@ mminloc0_4_i4 (gfc_array_i4 * const restrict retarray,\n \n   /* Initialize the return value.  */\n   for (n = 0; n < rank; n++)\n-    dest[n * dstride] = 1;\n+    dest[n * dstride] = 0;\n   {\n \n   GFC_INTEGER_4 minval;\n@@ -253,7 +253,7 @@ mminloc0_4_i4 (gfc_array_i4 * const restrict retarray,\n       {\n         /* Implementation start.  */\n \n-  if (*mbase && *base < minval)\n+  if (*mbase && (*base < minval || !dest[0]))\n     {\n       minval = *base;\n       for (n = 0; n < rank; n++)"}, {"sha": "7f94829c47da16c767c58aae645e36927cd567a5", "filename": "libgfortran/generated/minloc0_4_i8.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fminloc0_4_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fminloc0_4_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_4_i8.c?ref=a4b9e93e5d35d44cc1d13680800c36065e2cbd3e", "patch": "@@ -106,7 +106,7 @@ minloc0_4_i8 (gfc_array_i4 * const restrict retarray,\n \n   /* Initialize the return value.  */\n   for (n = 0; n < rank; n++)\n-    dest[n * dstride] = 1;\n+    dest[n * dstride] = 0;\n   {\n \n   GFC_INTEGER_8 minval;\n@@ -118,7 +118,7 @@ minloc0_4_i8 (gfc_array_i4 * const restrict retarray,\n       {\n         /* Implementation start.  */\n \n-  if (*base < minval)\n+  if (*base < minval || !dest[0])\n     {\n       minval = *base;\n       for (n = 0; n < rank; n++)\n@@ -241,7 +241,7 @@ mminloc0_4_i8 (gfc_array_i4 * const restrict retarray,\n \n   /* Initialize the return value.  */\n   for (n = 0; n < rank; n++)\n-    dest[n * dstride] = 1;\n+    dest[n * dstride] = 0;\n   {\n \n   GFC_INTEGER_8 minval;\n@@ -253,7 +253,7 @@ mminloc0_4_i8 (gfc_array_i4 * const restrict retarray,\n       {\n         /* Implementation start.  */\n \n-  if (*mbase && *base < minval)\n+  if (*mbase && (*base < minval || !dest[0]))\n     {\n       minval = *base;\n       for (n = 0; n < rank; n++)"}, {"sha": "a29677d03bc8315dfa51f21c434a746c38937686", "filename": "libgfortran/generated/minloc0_4_r10.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fminloc0_4_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fminloc0_4_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_4_r10.c?ref=a4b9e93e5d35d44cc1d13680800c36065e2cbd3e", "patch": "@@ -106,7 +106,7 @@ minloc0_4_r10 (gfc_array_i4 * const restrict retarray,\n \n   /* Initialize the return value.  */\n   for (n = 0; n < rank; n++)\n-    dest[n * dstride] = 1;\n+    dest[n * dstride] = 0;\n   {\n \n   GFC_REAL_10 minval;\n@@ -118,7 +118,7 @@ minloc0_4_r10 (gfc_array_i4 * const restrict retarray,\n       {\n         /* Implementation start.  */\n \n-  if (*base < minval)\n+  if (*base < minval || !dest[0])\n     {\n       minval = *base;\n       for (n = 0; n < rank; n++)\n@@ -241,7 +241,7 @@ mminloc0_4_r10 (gfc_array_i4 * const restrict retarray,\n \n   /* Initialize the return value.  */\n   for (n = 0; n < rank; n++)\n-    dest[n * dstride] = 1;\n+    dest[n * dstride] = 0;\n   {\n \n   GFC_REAL_10 minval;\n@@ -253,7 +253,7 @@ mminloc0_4_r10 (gfc_array_i4 * const restrict retarray,\n       {\n         /* Implementation start.  */\n \n-  if (*mbase && *base < minval)\n+  if (*mbase && (*base < minval || !dest[0]))\n     {\n       minval = *base;\n       for (n = 0; n < rank; n++)"}, {"sha": "61cf4b1b9de6c54fec43a172fa67862dc69091ff", "filename": "libgfortran/generated/minloc0_4_r16.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fminloc0_4_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fminloc0_4_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_4_r16.c?ref=a4b9e93e5d35d44cc1d13680800c36065e2cbd3e", "patch": "@@ -106,7 +106,7 @@ minloc0_4_r16 (gfc_array_i4 * const restrict retarray,\n \n   /* Initialize the return value.  */\n   for (n = 0; n < rank; n++)\n-    dest[n * dstride] = 1;\n+    dest[n * dstride] = 0;\n   {\n \n   GFC_REAL_16 minval;\n@@ -118,7 +118,7 @@ minloc0_4_r16 (gfc_array_i4 * const restrict retarray,\n       {\n         /* Implementation start.  */\n \n-  if (*base < minval)\n+  if (*base < minval || !dest[0])\n     {\n       minval = *base;\n       for (n = 0; n < rank; n++)\n@@ -241,7 +241,7 @@ mminloc0_4_r16 (gfc_array_i4 * const restrict retarray,\n \n   /* Initialize the return value.  */\n   for (n = 0; n < rank; n++)\n-    dest[n * dstride] = 1;\n+    dest[n * dstride] = 0;\n   {\n \n   GFC_REAL_16 minval;\n@@ -253,7 +253,7 @@ mminloc0_4_r16 (gfc_array_i4 * const restrict retarray,\n       {\n         /* Implementation start.  */\n \n-  if (*mbase && *base < minval)\n+  if (*mbase && (*base < minval || !dest[0]))\n     {\n       minval = *base;\n       for (n = 0; n < rank; n++)"}, {"sha": "f55bbae1f4a748bf4c6b8176fe52006df0acd209", "filename": "libgfortran/generated/minloc0_4_r4.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fminloc0_4_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fminloc0_4_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_4_r4.c?ref=a4b9e93e5d35d44cc1d13680800c36065e2cbd3e", "patch": "@@ -106,7 +106,7 @@ minloc0_4_r4 (gfc_array_i4 * const restrict retarray,\n \n   /* Initialize the return value.  */\n   for (n = 0; n < rank; n++)\n-    dest[n * dstride] = 1;\n+    dest[n * dstride] = 0;\n   {\n \n   GFC_REAL_4 minval;\n@@ -118,7 +118,7 @@ minloc0_4_r4 (gfc_array_i4 * const restrict retarray,\n       {\n         /* Implementation start.  */\n \n-  if (*base < minval)\n+  if (*base < minval || !dest[0])\n     {\n       minval = *base;\n       for (n = 0; n < rank; n++)\n@@ -241,7 +241,7 @@ mminloc0_4_r4 (gfc_array_i4 * const restrict retarray,\n \n   /* Initialize the return value.  */\n   for (n = 0; n < rank; n++)\n-    dest[n * dstride] = 1;\n+    dest[n * dstride] = 0;\n   {\n \n   GFC_REAL_4 minval;\n@@ -253,7 +253,7 @@ mminloc0_4_r4 (gfc_array_i4 * const restrict retarray,\n       {\n         /* Implementation start.  */\n \n-  if (*mbase && *base < minval)\n+  if (*mbase && (*base < minval || !dest[0]))\n     {\n       minval = *base;\n       for (n = 0; n < rank; n++)"}, {"sha": "d8a2f825432b830adb6a1150800a02c8a5c51323", "filename": "libgfortran/generated/minloc0_4_r8.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fminloc0_4_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fminloc0_4_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_4_r8.c?ref=a4b9e93e5d35d44cc1d13680800c36065e2cbd3e", "patch": "@@ -106,7 +106,7 @@ minloc0_4_r8 (gfc_array_i4 * const restrict retarray,\n \n   /* Initialize the return value.  */\n   for (n = 0; n < rank; n++)\n-    dest[n * dstride] = 1;\n+    dest[n * dstride] = 0;\n   {\n \n   GFC_REAL_8 minval;\n@@ -118,7 +118,7 @@ minloc0_4_r8 (gfc_array_i4 * const restrict retarray,\n       {\n         /* Implementation start.  */\n \n-  if (*base < minval)\n+  if (*base < minval || !dest[0])\n     {\n       minval = *base;\n       for (n = 0; n < rank; n++)\n@@ -241,7 +241,7 @@ mminloc0_4_r8 (gfc_array_i4 * const restrict retarray,\n \n   /* Initialize the return value.  */\n   for (n = 0; n < rank; n++)\n-    dest[n * dstride] = 1;\n+    dest[n * dstride] = 0;\n   {\n \n   GFC_REAL_8 minval;\n@@ -253,7 +253,7 @@ mminloc0_4_r8 (gfc_array_i4 * const restrict retarray,\n       {\n         /* Implementation start.  */\n \n-  if (*mbase && *base < minval)\n+  if (*mbase && (*base < minval || !dest[0]))\n     {\n       minval = *base;\n       for (n = 0; n < rank; n++)"}, {"sha": "a6346cfa60944ad3a43afa057897e166558a2b47", "filename": "libgfortran/generated/minloc0_8_i16.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fminloc0_8_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fminloc0_8_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_8_i16.c?ref=a4b9e93e5d35d44cc1d13680800c36065e2cbd3e", "patch": "@@ -106,7 +106,7 @@ minloc0_8_i16 (gfc_array_i8 * const restrict retarray,\n \n   /* Initialize the return value.  */\n   for (n = 0; n < rank; n++)\n-    dest[n * dstride] = 1;\n+    dest[n * dstride] = 0;\n   {\n \n   GFC_INTEGER_16 minval;\n@@ -118,7 +118,7 @@ minloc0_8_i16 (gfc_array_i8 * const restrict retarray,\n       {\n         /* Implementation start.  */\n \n-  if (*base < minval)\n+  if (*base < minval || !dest[0])\n     {\n       minval = *base;\n       for (n = 0; n < rank; n++)\n@@ -241,7 +241,7 @@ mminloc0_8_i16 (gfc_array_i8 * const restrict retarray,\n \n   /* Initialize the return value.  */\n   for (n = 0; n < rank; n++)\n-    dest[n * dstride] = 1;\n+    dest[n * dstride] = 0;\n   {\n \n   GFC_INTEGER_16 minval;\n@@ -253,7 +253,7 @@ mminloc0_8_i16 (gfc_array_i8 * const restrict retarray,\n       {\n         /* Implementation start.  */\n \n-  if (*mbase && *base < minval)\n+  if (*mbase && (*base < minval || !dest[0]))\n     {\n       minval = *base;\n       for (n = 0; n < rank; n++)"}, {"sha": "2aa54535bc70de3d113f875808ae653b68944e6b", "filename": "libgfortran/generated/minloc0_8_i4.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fminloc0_8_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fminloc0_8_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_8_i4.c?ref=a4b9e93e5d35d44cc1d13680800c36065e2cbd3e", "patch": "@@ -106,7 +106,7 @@ minloc0_8_i4 (gfc_array_i8 * const restrict retarray,\n \n   /* Initialize the return value.  */\n   for (n = 0; n < rank; n++)\n-    dest[n * dstride] = 1;\n+    dest[n * dstride] = 0;\n   {\n \n   GFC_INTEGER_4 minval;\n@@ -118,7 +118,7 @@ minloc0_8_i4 (gfc_array_i8 * const restrict retarray,\n       {\n         /* Implementation start.  */\n \n-  if (*base < minval)\n+  if (*base < minval || !dest[0])\n     {\n       minval = *base;\n       for (n = 0; n < rank; n++)\n@@ -241,7 +241,7 @@ mminloc0_8_i4 (gfc_array_i8 * const restrict retarray,\n \n   /* Initialize the return value.  */\n   for (n = 0; n < rank; n++)\n-    dest[n * dstride] = 1;\n+    dest[n * dstride] = 0;\n   {\n \n   GFC_INTEGER_4 minval;\n@@ -253,7 +253,7 @@ mminloc0_8_i4 (gfc_array_i8 * const restrict retarray,\n       {\n         /* Implementation start.  */\n \n-  if (*mbase && *base < minval)\n+  if (*mbase && (*base < minval || !dest[0]))\n     {\n       minval = *base;\n       for (n = 0; n < rank; n++)"}, {"sha": "63dd21a7766e8bb4b8eedb86ba926f50442ad9c4", "filename": "libgfortran/generated/minloc0_8_i8.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fminloc0_8_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fminloc0_8_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_8_i8.c?ref=a4b9e93e5d35d44cc1d13680800c36065e2cbd3e", "patch": "@@ -106,7 +106,7 @@ minloc0_8_i8 (gfc_array_i8 * const restrict retarray,\n \n   /* Initialize the return value.  */\n   for (n = 0; n < rank; n++)\n-    dest[n * dstride] = 1;\n+    dest[n * dstride] = 0;\n   {\n \n   GFC_INTEGER_8 minval;\n@@ -118,7 +118,7 @@ minloc0_8_i8 (gfc_array_i8 * const restrict retarray,\n       {\n         /* Implementation start.  */\n \n-  if (*base < minval)\n+  if (*base < minval || !dest[0])\n     {\n       minval = *base;\n       for (n = 0; n < rank; n++)\n@@ -241,7 +241,7 @@ mminloc0_8_i8 (gfc_array_i8 * const restrict retarray,\n \n   /* Initialize the return value.  */\n   for (n = 0; n < rank; n++)\n-    dest[n * dstride] = 1;\n+    dest[n * dstride] = 0;\n   {\n \n   GFC_INTEGER_8 minval;\n@@ -253,7 +253,7 @@ mminloc0_8_i8 (gfc_array_i8 * const restrict retarray,\n       {\n         /* Implementation start.  */\n \n-  if (*mbase && *base < minval)\n+  if (*mbase && (*base < minval || !dest[0]))\n     {\n       minval = *base;\n       for (n = 0; n < rank; n++)"}, {"sha": "c627e7eeb14d3a5df35e180009b63740a43ca917", "filename": "libgfortran/generated/minloc0_8_r10.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fminloc0_8_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fminloc0_8_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_8_r10.c?ref=a4b9e93e5d35d44cc1d13680800c36065e2cbd3e", "patch": "@@ -106,7 +106,7 @@ minloc0_8_r10 (gfc_array_i8 * const restrict retarray,\n \n   /* Initialize the return value.  */\n   for (n = 0; n < rank; n++)\n-    dest[n * dstride] = 1;\n+    dest[n * dstride] = 0;\n   {\n \n   GFC_REAL_10 minval;\n@@ -118,7 +118,7 @@ minloc0_8_r10 (gfc_array_i8 * const restrict retarray,\n       {\n         /* Implementation start.  */\n \n-  if (*base < minval)\n+  if (*base < minval || !dest[0])\n     {\n       minval = *base;\n       for (n = 0; n < rank; n++)\n@@ -241,7 +241,7 @@ mminloc0_8_r10 (gfc_array_i8 * const restrict retarray,\n \n   /* Initialize the return value.  */\n   for (n = 0; n < rank; n++)\n-    dest[n * dstride] = 1;\n+    dest[n * dstride] = 0;\n   {\n \n   GFC_REAL_10 minval;\n@@ -253,7 +253,7 @@ mminloc0_8_r10 (gfc_array_i8 * const restrict retarray,\n       {\n         /* Implementation start.  */\n \n-  if (*mbase && *base < minval)\n+  if (*mbase && (*base < minval || !dest[0]))\n     {\n       minval = *base;\n       for (n = 0; n < rank; n++)"}, {"sha": "d4e307187a2294fbeadb392185dac19bfd5fb408", "filename": "libgfortran/generated/minloc0_8_r16.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fminloc0_8_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fminloc0_8_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_8_r16.c?ref=a4b9e93e5d35d44cc1d13680800c36065e2cbd3e", "patch": "@@ -106,7 +106,7 @@ minloc0_8_r16 (gfc_array_i8 * const restrict retarray,\n \n   /* Initialize the return value.  */\n   for (n = 0; n < rank; n++)\n-    dest[n * dstride] = 1;\n+    dest[n * dstride] = 0;\n   {\n \n   GFC_REAL_16 minval;\n@@ -118,7 +118,7 @@ minloc0_8_r16 (gfc_array_i8 * const restrict retarray,\n       {\n         /* Implementation start.  */\n \n-  if (*base < minval)\n+  if (*base < minval || !dest[0])\n     {\n       minval = *base;\n       for (n = 0; n < rank; n++)\n@@ -241,7 +241,7 @@ mminloc0_8_r16 (gfc_array_i8 * const restrict retarray,\n \n   /* Initialize the return value.  */\n   for (n = 0; n < rank; n++)\n-    dest[n * dstride] = 1;\n+    dest[n * dstride] = 0;\n   {\n \n   GFC_REAL_16 minval;\n@@ -253,7 +253,7 @@ mminloc0_8_r16 (gfc_array_i8 * const restrict retarray,\n       {\n         /* Implementation start.  */\n \n-  if (*mbase && *base < minval)\n+  if (*mbase && (*base < minval || !dest[0]))\n     {\n       minval = *base;\n       for (n = 0; n < rank; n++)"}, {"sha": "c484e8d325b6cb025f2a3e178f092704925d1edd", "filename": "libgfortran/generated/minloc0_8_r4.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fminloc0_8_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fminloc0_8_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_8_r4.c?ref=a4b9e93e5d35d44cc1d13680800c36065e2cbd3e", "patch": "@@ -106,7 +106,7 @@ minloc0_8_r4 (gfc_array_i8 * const restrict retarray,\n \n   /* Initialize the return value.  */\n   for (n = 0; n < rank; n++)\n-    dest[n * dstride] = 1;\n+    dest[n * dstride] = 0;\n   {\n \n   GFC_REAL_4 minval;\n@@ -118,7 +118,7 @@ minloc0_8_r4 (gfc_array_i8 * const restrict retarray,\n       {\n         /* Implementation start.  */\n \n-  if (*base < minval)\n+  if (*base < minval || !dest[0])\n     {\n       minval = *base;\n       for (n = 0; n < rank; n++)\n@@ -241,7 +241,7 @@ mminloc0_8_r4 (gfc_array_i8 * const restrict retarray,\n \n   /* Initialize the return value.  */\n   for (n = 0; n < rank; n++)\n-    dest[n * dstride] = 1;\n+    dest[n * dstride] = 0;\n   {\n \n   GFC_REAL_4 minval;\n@@ -253,7 +253,7 @@ mminloc0_8_r4 (gfc_array_i8 * const restrict retarray,\n       {\n         /* Implementation start.  */\n \n-  if (*mbase && *base < minval)\n+  if (*mbase && (*base < minval || !dest[0]))\n     {\n       minval = *base;\n       for (n = 0; n < rank; n++)"}, {"sha": "97f19cefff42e697d662b73f7f918d464f0a23af", "filename": "libgfortran/generated/minloc0_8_r8.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fminloc0_8_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fminloc0_8_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_8_r8.c?ref=a4b9e93e5d35d44cc1d13680800c36065e2cbd3e", "patch": "@@ -106,7 +106,7 @@ minloc0_8_r8 (gfc_array_i8 * const restrict retarray,\n \n   /* Initialize the return value.  */\n   for (n = 0; n < rank; n++)\n-    dest[n * dstride] = 1;\n+    dest[n * dstride] = 0;\n   {\n \n   GFC_REAL_8 minval;\n@@ -118,7 +118,7 @@ minloc0_8_r8 (gfc_array_i8 * const restrict retarray,\n       {\n         /* Implementation start.  */\n \n-  if (*base < minval)\n+  if (*base < minval || !dest[0])\n     {\n       minval = *base;\n       for (n = 0; n < rank; n++)\n@@ -241,7 +241,7 @@ mminloc0_8_r8 (gfc_array_i8 * const restrict retarray,\n \n   /* Initialize the return value.  */\n   for (n = 0; n < rank; n++)\n-    dest[n * dstride] = 1;\n+    dest[n * dstride] = 0;\n   {\n \n   GFC_REAL_8 minval;\n@@ -253,7 +253,7 @@ mminloc0_8_r8 (gfc_array_i8 * const restrict retarray,\n       {\n         /* Implementation start.  */\n \n-  if (*mbase && *base < minval)\n+  if (*mbase && (*base < minval || !dest[0]))\n     {\n       minval = *base;\n       for (n = 0; n < rank; n++)"}, {"sha": "75e505494a3f74cbcd5964bc7ade184c4a8d11ba", "filename": "libgfortran/generated/minloc1_16_i16.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fminloc1_16_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fminloc1_16_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_16_i16.c?ref=a4b9e93e5d35d44cc1d13680800c36065e2cbd3e", "patch": "@@ -132,15 +132,15 @@ minloc1_16_i16 (gfc_array_i16 * const restrict retarray,\n \n   GFC_INTEGER_16 minval;\n   minval = GFC_INTEGER_16_HUGE;\n-  result = 1;\n+  result = 0;\n         if (len <= 0)\n \t  *dest = 0;\n \telse\n \t  {\n \t    for (n = 0; n < len; n++, src += delta)\n \t      {\n \n-  if (*src < minval)\n+  if (*src < minval || !result)\n     {\n       minval = *src;\n       result = (GFC_INTEGER_16)n + 1;\n@@ -299,15 +299,15 @@ mminloc1_16_i16 (gfc_array_i16 * const restrict retarray,\n \n   GFC_INTEGER_16 minval;\n   minval = GFC_INTEGER_16_HUGE;\n-  result = 1;\n+  result = 0;\n         if (len <= 0)\n \t  *dest = 0;\n \telse\n \t  {\n \t    for (n = 0; n < len; n++, src += delta, msrc += mdelta)\n \t      {\n \n-  if (*msrc && *src < minval)\n+  if (*msrc && (*src < minval || !result))\n     {\n       minval = *src;\n       result = (GFC_INTEGER_16)n + 1;"}, {"sha": "d2fdd5414833951c847f8aba8cf9375dc0389fe3", "filename": "libgfortran/generated/minloc1_16_i4.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fminloc1_16_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fminloc1_16_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_16_i4.c?ref=a4b9e93e5d35d44cc1d13680800c36065e2cbd3e", "patch": "@@ -132,15 +132,15 @@ minloc1_16_i4 (gfc_array_i16 * const restrict retarray,\n \n   GFC_INTEGER_4 minval;\n   minval = GFC_INTEGER_4_HUGE;\n-  result = 1;\n+  result = 0;\n         if (len <= 0)\n \t  *dest = 0;\n \telse\n \t  {\n \t    for (n = 0; n < len; n++, src += delta)\n \t      {\n \n-  if (*src < minval)\n+  if (*src < minval || !result)\n     {\n       minval = *src;\n       result = (GFC_INTEGER_16)n + 1;\n@@ -299,15 +299,15 @@ mminloc1_16_i4 (gfc_array_i16 * const restrict retarray,\n \n   GFC_INTEGER_4 minval;\n   minval = GFC_INTEGER_4_HUGE;\n-  result = 1;\n+  result = 0;\n         if (len <= 0)\n \t  *dest = 0;\n \telse\n \t  {\n \t    for (n = 0; n < len; n++, src += delta, msrc += mdelta)\n \t      {\n \n-  if (*msrc && *src < minval)\n+  if (*msrc && (*src < minval || !result))\n     {\n       minval = *src;\n       result = (GFC_INTEGER_16)n + 1;"}, {"sha": "19ac6d773525bfd117e7f7bb68f3cd859fb95417", "filename": "libgfortran/generated/minloc1_16_i8.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fminloc1_16_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fminloc1_16_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_16_i8.c?ref=a4b9e93e5d35d44cc1d13680800c36065e2cbd3e", "patch": "@@ -132,15 +132,15 @@ minloc1_16_i8 (gfc_array_i16 * const restrict retarray,\n \n   GFC_INTEGER_8 minval;\n   minval = GFC_INTEGER_8_HUGE;\n-  result = 1;\n+  result = 0;\n         if (len <= 0)\n \t  *dest = 0;\n \telse\n \t  {\n \t    for (n = 0; n < len; n++, src += delta)\n \t      {\n \n-  if (*src < minval)\n+  if (*src < minval || !result)\n     {\n       minval = *src;\n       result = (GFC_INTEGER_16)n + 1;\n@@ -299,15 +299,15 @@ mminloc1_16_i8 (gfc_array_i16 * const restrict retarray,\n \n   GFC_INTEGER_8 minval;\n   minval = GFC_INTEGER_8_HUGE;\n-  result = 1;\n+  result = 0;\n         if (len <= 0)\n \t  *dest = 0;\n \telse\n \t  {\n \t    for (n = 0; n < len; n++, src += delta, msrc += mdelta)\n \t      {\n \n-  if (*msrc && *src < minval)\n+  if (*msrc && (*src < minval || !result))\n     {\n       minval = *src;\n       result = (GFC_INTEGER_16)n + 1;"}, {"sha": "cc3d59b0256e3ad830378081b38ea0d12ed3c23b", "filename": "libgfortran/generated/minloc1_16_r10.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fminloc1_16_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fminloc1_16_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_16_r10.c?ref=a4b9e93e5d35d44cc1d13680800c36065e2cbd3e", "patch": "@@ -132,15 +132,15 @@ minloc1_16_r10 (gfc_array_i16 * const restrict retarray,\n \n   GFC_REAL_10 minval;\n   minval = GFC_REAL_10_HUGE;\n-  result = 1;\n+  result = 0;\n         if (len <= 0)\n \t  *dest = 0;\n \telse\n \t  {\n \t    for (n = 0; n < len; n++, src += delta)\n \t      {\n \n-  if (*src < minval)\n+  if (*src < minval || !result)\n     {\n       minval = *src;\n       result = (GFC_INTEGER_16)n + 1;\n@@ -299,15 +299,15 @@ mminloc1_16_r10 (gfc_array_i16 * const restrict retarray,\n \n   GFC_REAL_10 minval;\n   minval = GFC_REAL_10_HUGE;\n-  result = 1;\n+  result = 0;\n         if (len <= 0)\n \t  *dest = 0;\n \telse\n \t  {\n \t    for (n = 0; n < len; n++, src += delta, msrc += mdelta)\n \t      {\n \n-  if (*msrc && *src < minval)\n+  if (*msrc && (*src < minval || !result))\n     {\n       minval = *src;\n       result = (GFC_INTEGER_16)n + 1;"}, {"sha": "76e8787ad62b121745dc96826fb0f67a259b67f5", "filename": "libgfortran/generated/minloc1_16_r16.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fminloc1_16_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fminloc1_16_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_16_r16.c?ref=a4b9e93e5d35d44cc1d13680800c36065e2cbd3e", "patch": "@@ -132,15 +132,15 @@ minloc1_16_r16 (gfc_array_i16 * const restrict retarray,\n \n   GFC_REAL_16 minval;\n   minval = GFC_REAL_16_HUGE;\n-  result = 1;\n+  result = 0;\n         if (len <= 0)\n \t  *dest = 0;\n \telse\n \t  {\n \t    for (n = 0; n < len; n++, src += delta)\n \t      {\n \n-  if (*src < minval)\n+  if (*src < minval || !result)\n     {\n       minval = *src;\n       result = (GFC_INTEGER_16)n + 1;\n@@ -299,15 +299,15 @@ mminloc1_16_r16 (gfc_array_i16 * const restrict retarray,\n \n   GFC_REAL_16 minval;\n   minval = GFC_REAL_16_HUGE;\n-  result = 1;\n+  result = 0;\n         if (len <= 0)\n \t  *dest = 0;\n \telse\n \t  {\n \t    for (n = 0; n < len; n++, src += delta, msrc += mdelta)\n \t      {\n \n-  if (*msrc && *src < minval)\n+  if (*msrc && (*src < minval || !result))\n     {\n       minval = *src;\n       result = (GFC_INTEGER_16)n + 1;"}, {"sha": "46ed3b6328008c0d733e708294ff4ef8f4389c0e", "filename": "libgfortran/generated/minloc1_16_r4.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fminloc1_16_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fminloc1_16_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_16_r4.c?ref=a4b9e93e5d35d44cc1d13680800c36065e2cbd3e", "patch": "@@ -132,15 +132,15 @@ minloc1_16_r4 (gfc_array_i16 * const restrict retarray,\n \n   GFC_REAL_4 minval;\n   minval = GFC_REAL_4_HUGE;\n-  result = 1;\n+  result = 0;\n         if (len <= 0)\n \t  *dest = 0;\n \telse\n \t  {\n \t    for (n = 0; n < len; n++, src += delta)\n \t      {\n \n-  if (*src < minval)\n+  if (*src < minval || !result)\n     {\n       minval = *src;\n       result = (GFC_INTEGER_16)n + 1;\n@@ -299,15 +299,15 @@ mminloc1_16_r4 (gfc_array_i16 * const restrict retarray,\n \n   GFC_REAL_4 minval;\n   minval = GFC_REAL_4_HUGE;\n-  result = 1;\n+  result = 0;\n         if (len <= 0)\n \t  *dest = 0;\n \telse\n \t  {\n \t    for (n = 0; n < len; n++, src += delta, msrc += mdelta)\n \t      {\n \n-  if (*msrc && *src < minval)\n+  if (*msrc && (*src < minval || !result))\n     {\n       minval = *src;\n       result = (GFC_INTEGER_16)n + 1;"}, {"sha": "2d8bbf915f6dcc0857dc7a0e295e8b81a07a57c4", "filename": "libgfortran/generated/minloc1_16_r8.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fminloc1_16_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fminloc1_16_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_16_r8.c?ref=a4b9e93e5d35d44cc1d13680800c36065e2cbd3e", "patch": "@@ -132,15 +132,15 @@ minloc1_16_r8 (gfc_array_i16 * const restrict retarray,\n \n   GFC_REAL_8 minval;\n   minval = GFC_REAL_8_HUGE;\n-  result = 1;\n+  result = 0;\n         if (len <= 0)\n \t  *dest = 0;\n \telse\n \t  {\n \t    for (n = 0; n < len; n++, src += delta)\n \t      {\n \n-  if (*src < minval)\n+  if (*src < minval || !result)\n     {\n       minval = *src;\n       result = (GFC_INTEGER_16)n + 1;\n@@ -299,15 +299,15 @@ mminloc1_16_r8 (gfc_array_i16 * const restrict retarray,\n \n   GFC_REAL_8 minval;\n   minval = GFC_REAL_8_HUGE;\n-  result = 1;\n+  result = 0;\n         if (len <= 0)\n \t  *dest = 0;\n \telse\n \t  {\n \t    for (n = 0; n < len; n++, src += delta, msrc += mdelta)\n \t      {\n \n-  if (*msrc && *src < minval)\n+  if (*msrc && (*src < minval || !result))\n     {\n       minval = *src;\n       result = (GFC_INTEGER_16)n + 1;"}, {"sha": "94712f4ecec24fbf092930525d41acd9d08d642d", "filename": "libgfortran/generated/minloc1_4_i16.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fminloc1_4_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fminloc1_4_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_4_i16.c?ref=a4b9e93e5d35d44cc1d13680800c36065e2cbd3e", "patch": "@@ -132,15 +132,15 @@ minloc1_4_i16 (gfc_array_i4 * const restrict retarray,\n \n   GFC_INTEGER_16 minval;\n   minval = GFC_INTEGER_16_HUGE;\n-  result = 1;\n+  result = 0;\n         if (len <= 0)\n \t  *dest = 0;\n \telse\n \t  {\n \t    for (n = 0; n < len; n++, src += delta)\n \t      {\n \n-  if (*src < minval)\n+  if (*src < minval || !result)\n     {\n       minval = *src;\n       result = (GFC_INTEGER_4)n + 1;\n@@ -299,15 +299,15 @@ mminloc1_4_i16 (gfc_array_i4 * const restrict retarray,\n \n   GFC_INTEGER_16 minval;\n   minval = GFC_INTEGER_16_HUGE;\n-  result = 1;\n+  result = 0;\n         if (len <= 0)\n \t  *dest = 0;\n \telse\n \t  {\n \t    for (n = 0; n < len; n++, src += delta, msrc += mdelta)\n \t      {\n \n-  if (*msrc && *src < minval)\n+  if (*msrc && (*src < minval || !result))\n     {\n       minval = *src;\n       result = (GFC_INTEGER_4)n + 1;"}, {"sha": "a80d2c68d07d85f2a564d8c9bccce24560d537b2", "filename": "libgfortran/generated/minloc1_4_i4.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fminloc1_4_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fminloc1_4_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_4_i4.c?ref=a4b9e93e5d35d44cc1d13680800c36065e2cbd3e", "patch": "@@ -132,15 +132,15 @@ minloc1_4_i4 (gfc_array_i4 * const restrict retarray,\n \n   GFC_INTEGER_4 minval;\n   minval = GFC_INTEGER_4_HUGE;\n-  result = 1;\n+  result = 0;\n         if (len <= 0)\n \t  *dest = 0;\n \telse\n \t  {\n \t    for (n = 0; n < len; n++, src += delta)\n \t      {\n \n-  if (*src < minval)\n+  if (*src < minval || !result)\n     {\n       minval = *src;\n       result = (GFC_INTEGER_4)n + 1;\n@@ -299,15 +299,15 @@ mminloc1_4_i4 (gfc_array_i4 * const restrict retarray,\n \n   GFC_INTEGER_4 minval;\n   minval = GFC_INTEGER_4_HUGE;\n-  result = 1;\n+  result = 0;\n         if (len <= 0)\n \t  *dest = 0;\n \telse\n \t  {\n \t    for (n = 0; n < len; n++, src += delta, msrc += mdelta)\n \t      {\n \n-  if (*msrc && *src < minval)\n+  if (*msrc && (*src < minval || !result))\n     {\n       minval = *src;\n       result = (GFC_INTEGER_4)n + 1;"}, {"sha": "55c837034e4003cf95fbd54a6049f1e077c46afe", "filename": "libgfortran/generated/minloc1_4_i8.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fminloc1_4_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fminloc1_4_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_4_i8.c?ref=a4b9e93e5d35d44cc1d13680800c36065e2cbd3e", "patch": "@@ -132,15 +132,15 @@ minloc1_4_i8 (gfc_array_i4 * const restrict retarray,\n \n   GFC_INTEGER_8 minval;\n   minval = GFC_INTEGER_8_HUGE;\n-  result = 1;\n+  result = 0;\n         if (len <= 0)\n \t  *dest = 0;\n \telse\n \t  {\n \t    for (n = 0; n < len; n++, src += delta)\n \t      {\n \n-  if (*src < minval)\n+  if (*src < minval || !result)\n     {\n       minval = *src;\n       result = (GFC_INTEGER_4)n + 1;\n@@ -299,15 +299,15 @@ mminloc1_4_i8 (gfc_array_i4 * const restrict retarray,\n \n   GFC_INTEGER_8 minval;\n   minval = GFC_INTEGER_8_HUGE;\n-  result = 1;\n+  result = 0;\n         if (len <= 0)\n \t  *dest = 0;\n \telse\n \t  {\n \t    for (n = 0; n < len; n++, src += delta, msrc += mdelta)\n \t      {\n \n-  if (*msrc && *src < minval)\n+  if (*msrc && (*src < minval || !result))\n     {\n       minval = *src;\n       result = (GFC_INTEGER_4)n + 1;"}, {"sha": "1d9b7547ec2834e789c577ab0133dd56d150763d", "filename": "libgfortran/generated/minloc1_4_r10.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fminloc1_4_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fminloc1_4_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_4_r10.c?ref=a4b9e93e5d35d44cc1d13680800c36065e2cbd3e", "patch": "@@ -132,15 +132,15 @@ minloc1_4_r10 (gfc_array_i4 * const restrict retarray,\n \n   GFC_REAL_10 minval;\n   minval = GFC_REAL_10_HUGE;\n-  result = 1;\n+  result = 0;\n         if (len <= 0)\n \t  *dest = 0;\n \telse\n \t  {\n \t    for (n = 0; n < len; n++, src += delta)\n \t      {\n \n-  if (*src < minval)\n+  if (*src < minval || !result)\n     {\n       minval = *src;\n       result = (GFC_INTEGER_4)n + 1;\n@@ -299,15 +299,15 @@ mminloc1_4_r10 (gfc_array_i4 * const restrict retarray,\n \n   GFC_REAL_10 minval;\n   minval = GFC_REAL_10_HUGE;\n-  result = 1;\n+  result = 0;\n         if (len <= 0)\n \t  *dest = 0;\n \telse\n \t  {\n \t    for (n = 0; n < len; n++, src += delta, msrc += mdelta)\n \t      {\n \n-  if (*msrc && *src < minval)\n+  if (*msrc && (*src < minval || !result))\n     {\n       minval = *src;\n       result = (GFC_INTEGER_4)n + 1;"}, {"sha": "df903cb2d3d447c6a0c3643df06a6f835af40348", "filename": "libgfortran/generated/minloc1_4_r16.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fminloc1_4_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fminloc1_4_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_4_r16.c?ref=a4b9e93e5d35d44cc1d13680800c36065e2cbd3e", "patch": "@@ -132,15 +132,15 @@ minloc1_4_r16 (gfc_array_i4 * const restrict retarray,\n \n   GFC_REAL_16 minval;\n   minval = GFC_REAL_16_HUGE;\n-  result = 1;\n+  result = 0;\n         if (len <= 0)\n \t  *dest = 0;\n \telse\n \t  {\n \t    for (n = 0; n < len; n++, src += delta)\n \t      {\n \n-  if (*src < minval)\n+  if (*src < minval || !result)\n     {\n       minval = *src;\n       result = (GFC_INTEGER_4)n + 1;\n@@ -299,15 +299,15 @@ mminloc1_4_r16 (gfc_array_i4 * const restrict retarray,\n \n   GFC_REAL_16 minval;\n   minval = GFC_REAL_16_HUGE;\n-  result = 1;\n+  result = 0;\n         if (len <= 0)\n \t  *dest = 0;\n \telse\n \t  {\n \t    for (n = 0; n < len; n++, src += delta, msrc += mdelta)\n \t      {\n \n-  if (*msrc && *src < minval)\n+  if (*msrc && (*src < minval || !result))\n     {\n       minval = *src;\n       result = (GFC_INTEGER_4)n + 1;"}, {"sha": "e723e92d20c989606474ed36ec36833f3efb9d3f", "filename": "libgfortran/generated/minloc1_4_r4.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fminloc1_4_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fminloc1_4_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_4_r4.c?ref=a4b9e93e5d35d44cc1d13680800c36065e2cbd3e", "patch": "@@ -132,15 +132,15 @@ minloc1_4_r4 (gfc_array_i4 * const restrict retarray,\n \n   GFC_REAL_4 minval;\n   minval = GFC_REAL_4_HUGE;\n-  result = 1;\n+  result = 0;\n         if (len <= 0)\n \t  *dest = 0;\n \telse\n \t  {\n \t    for (n = 0; n < len; n++, src += delta)\n \t      {\n \n-  if (*src < minval)\n+  if (*src < minval || !result)\n     {\n       minval = *src;\n       result = (GFC_INTEGER_4)n + 1;\n@@ -299,15 +299,15 @@ mminloc1_4_r4 (gfc_array_i4 * const restrict retarray,\n \n   GFC_REAL_4 minval;\n   minval = GFC_REAL_4_HUGE;\n-  result = 1;\n+  result = 0;\n         if (len <= 0)\n \t  *dest = 0;\n \telse\n \t  {\n \t    for (n = 0; n < len; n++, src += delta, msrc += mdelta)\n \t      {\n \n-  if (*msrc && *src < minval)\n+  if (*msrc && (*src < minval || !result))\n     {\n       minval = *src;\n       result = (GFC_INTEGER_4)n + 1;"}, {"sha": "5fbf3ec0482e70c484cf5fcaab069065926fc562", "filename": "libgfortran/generated/minloc1_4_r8.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fminloc1_4_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fminloc1_4_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_4_r8.c?ref=a4b9e93e5d35d44cc1d13680800c36065e2cbd3e", "patch": "@@ -132,15 +132,15 @@ minloc1_4_r8 (gfc_array_i4 * const restrict retarray,\n \n   GFC_REAL_8 minval;\n   minval = GFC_REAL_8_HUGE;\n-  result = 1;\n+  result = 0;\n         if (len <= 0)\n \t  *dest = 0;\n \telse\n \t  {\n \t    for (n = 0; n < len; n++, src += delta)\n \t      {\n \n-  if (*src < minval)\n+  if (*src < minval || !result)\n     {\n       minval = *src;\n       result = (GFC_INTEGER_4)n + 1;\n@@ -299,15 +299,15 @@ mminloc1_4_r8 (gfc_array_i4 * const restrict retarray,\n \n   GFC_REAL_8 minval;\n   minval = GFC_REAL_8_HUGE;\n-  result = 1;\n+  result = 0;\n         if (len <= 0)\n \t  *dest = 0;\n \telse\n \t  {\n \t    for (n = 0; n < len; n++, src += delta, msrc += mdelta)\n \t      {\n \n-  if (*msrc && *src < minval)\n+  if (*msrc && (*src < minval || !result))\n     {\n       minval = *src;\n       result = (GFC_INTEGER_4)n + 1;"}, {"sha": "07cbf78c511109197c8b3200f36c737a63d32951", "filename": "libgfortran/generated/minloc1_8_i16.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fminloc1_8_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fminloc1_8_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_8_i16.c?ref=a4b9e93e5d35d44cc1d13680800c36065e2cbd3e", "patch": "@@ -132,15 +132,15 @@ minloc1_8_i16 (gfc_array_i8 * const restrict retarray,\n \n   GFC_INTEGER_16 minval;\n   minval = GFC_INTEGER_16_HUGE;\n-  result = 1;\n+  result = 0;\n         if (len <= 0)\n \t  *dest = 0;\n \telse\n \t  {\n \t    for (n = 0; n < len; n++, src += delta)\n \t      {\n \n-  if (*src < minval)\n+  if (*src < minval || !result)\n     {\n       minval = *src;\n       result = (GFC_INTEGER_8)n + 1;\n@@ -299,15 +299,15 @@ mminloc1_8_i16 (gfc_array_i8 * const restrict retarray,\n \n   GFC_INTEGER_16 minval;\n   minval = GFC_INTEGER_16_HUGE;\n-  result = 1;\n+  result = 0;\n         if (len <= 0)\n \t  *dest = 0;\n \telse\n \t  {\n \t    for (n = 0; n < len; n++, src += delta, msrc += mdelta)\n \t      {\n \n-  if (*msrc && *src < minval)\n+  if (*msrc && (*src < minval || !result))\n     {\n       minval = *src;\n       result = (GFC_INTEGER_8)n + 1;"}, {"sha": "917c0b274ba39e780cbec20dae5396e6ad7d4754", "filename": "libgfortran/generated/minloc1_8_i4.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fminloc1_8_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fminloc1_8_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_8_i4.c?ref=a4b9e93e5d35d44cc1d13680800c36065e2cbd3e", "patch": "@@ -132,15 +132,15 @@ minloc1_8_i4 (gfc_array_i8 * const restrict retarray,\n \n   GFC_INTEGER_4 minval;\n   minval = GFC_INTEGER_4_HUGE;\n-  result = 1;\n+  result = 0;\n         if (len <= 0)\n \t  *dest = 0;\n \telse\n \t  {\n \t    for (n = 0; n < len; n++, src += delta)\n \t      {\n \n-  if (*src < minval)\n+  if (*src < minval || !result)\n     {\n       minval = *src;\n       result = (GFC_INTEGER_8)n + 1;\n@@ -299,15 +299,15 @@ mminloc1_8_i4 (gfc_array_i8 * const restrict retarray,\n \n   GFC_INTEGER_4 minval;\n   minval = GFC_INTEGER_4_HUGE;\n-  result = 1;\n+  result = 0;\n         if (len <= 0)\n \t  *dest = 0;\n \telse\n \t  {\n \t    for (n = 0; n < len; n++, src += delta, msrc += mdelta)\n \t      {\n \n-  if (*msrc && *src < minval)\n+  if (*msrc && (*src < minval || !result))\n     {\n       minval = *src;\n       result = (GFC_INTEGER_8)n + 1;"}, {"sha": "c9a152761762a0c9c92f5476524c710b44f8c0c5", "filename": "libgfortran/generated/minloc1_8_i8.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fminloc1_8_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fminloc1_8_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_8_i8.c?ref=a4b9e93e5d35d44cc1d13680800c36065e2cbd3e", "patch": "@@ -132,15 +132,15 @@ minloc1_8_i8 (gfc_array_i8 * const restrict retarray,\n \n   GFC_INTEGER_8 minval;\n   minval = GFC_INTEGER_8_HUGE;\n-  result = 1;\n+  result = 0;\n         if (len <= 0)\n \t  *dest = 0;\n \telse\n \t  {\n \t    for (n = 0; n < len; n++, src += delta)\n \t      {\n \n-  if (*src < minval)\n+  if (*src < minval || !result)\n     {\n       minval = *src;\n       result = (GFC_INTEGER_8)n + 1;\n@@ -299,15 +299,15 @@ mminloc1_8_i8 (gfc_array_i8 * const restrict retarray,\n \n   GFC_INTEGER_8 minval;\n   minval = GFC_INTEGER_8_HUGE;\n-  result = 1;\n+  result = 0;\n         if (len <= 0)\n \t  *dest = 0;\n \telse\n \t  {\n \t    for (n = 0; n < len; n++, src += delta, msrc += mdelta)\n \t      {\n \n-  if (*msrc && *src < minval)\n+  if (*msrc && (*src < minval || !result))\n     {\n       minval = *src;\n       result = (GFC_INTEGER_8)n + 1;"}, {"sha": "c36838c10d85037564091a65ed75a8dc522d6af8", "filename": "libgfortran/generated/minloc1_8_r10.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fminloc1_8_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fminloc1_8_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_8_r10.c?ref=a4b9e93e5d35d44cc1d13680800c36065e2cbd3e", "patch": "@@ -132,15 +132,15 @@ minloc1_8_r10 (gfc_array_i8 * const restrict retarray,\n \n   GFC_REAL_10 minval;\n   minval = GFC_REAL_10_HUGE;\n-  result = 1;\n+  result = 0;\n         if (len <= 0)\n \t  *dest = 0;\n \telse\n \t  {\n \t    for (n = 0; n < len; n++, src += delta)\n \t      {\n \n-  if (*src < minval)\n+  if (*src < minval || !result)\n     {\n       minval = *src;\n       result = (GFC_INTEGER_8)n + 1;\n@@ -299,15 +299,15 @@ mminloc1_8_r10 (gfc_array_i8 * const restrict retarray,\n \n   GFC_REAL_10 minval;\n   minval = GFC_REAL_10_HUGE;\n-  result = 1;\n+  result = 0;\n         if (len <= 0)\n \t  *dest = 0;\n \telse\n \t  {\n \t    for (n = 0; n < len; n++, src += delta, msrc += mdelta)\n \t      {\n \n-  if (*msrc && *src < minval)\n+  if (*msrc && (*src < minval || !result))\n     {\n       minval = *src;\n       result = (GFC_INTEGER_8)n + 1;"}, {"sha": "93352946319e6e8729b6a6dcbf65584ac0f21058", "filename": "libgfortran/generated/minloc1_8_r16.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fminloc1_8_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fminloc1_8_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_8_r16.c?ref=a4b9e93e5d35d44cc1d13680800c36065e2cbd3e", "patch": "@@ -132,15 +132,15 @@ minloc1_8_r16 (gfc_array_i8 * const restrict retarray,\n \n   GFC_REAL_16 minval;\n   minval = GFC_REAL_16_HUGE;\n-  result = 1;\n+  result = 0;\n         if (len <= 0)\n \t  *dest = 0;\n \telse\n \t  {\n \t    for (n = 0; n < len; n++, src += delta)\n \t      {\n \n-  if (*src < minval)\n+  if (*src < minval || !result)\n     {\n       minval = *src;\n       result = (GFC_INTEGER_8)n + 1;\n@@ -299,15 +299,15 @@ mminloc1_8_r16 (gfc_array_i8 * const restrict retarray,\n \n   GFC_REAL_16 minval;\n   minval = GFC_REAL_16_HUGE;\n-  result = 1;\n+  result = 0;\n         if (len <= 0)\n \t  *dest = 0;\n \telse\n \t  {\n \t    for (n = 0; n < len; n++, src += delta, msrc += mdelta)\n \t      {\n \n-  if (*msrc && *src < minval)\n+  if (*msrc && (*src < minval || !result))\n     {\n       minval = *src;\n       result = (GFC_INTEGER_8)n + 1;"}, {"sha": "69ebc29e0d0d99b715add76fc8b4470fc280ed22", "filename": "libgfortran/generated/minloc1_8_r4.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fminloc1_8_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fminloc1_8_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_8_r4.c?ref=a4b9e93e5d35d44cc1d13680800c36065e2cbd3e", "patch": "@@ -132,15 +132,15 @@ minloc1_8_r4 (gfc_array_i8 * const restrict retarray,\n \n   GFC_REAL_4 minval;\n   minval = GFC_REAL_4_HUGE;\n-  result = 1;\n+  result = 0;\n         if (len <= 0)\n \t  *dest = 0;\n \telse\n \t  {\n \t    for (n = 0; n < len; n++, src += delta)\n \t      {\n \n-  if (*src < minval)\n+  if (*src < minval || !result)\n     {\n       minval = *src;\n       result = (GFC_INTEGER_8)n + 1;\n@@ -299,15 +299,15 @@ mminloc1_8_r4 (gfc_array_i8 * const restrict retarray,\n \n   GFC_REAL_4 minval;\n   minval = GFC_REAL_4_HUGE;\n-  result = 1;\n+  result = 0;\n         if (len <= 0)\n \t  *dest = 0;\n \telse\n \t  {\n \t    for (n = 0; n < len; n++, src += delta, msrc += mdelta)\n \t      {\n \n-  if (*msrc && *src < minval)\n+  if (*msrc && (*src < minval || !result))\n     {\n       minval = *src;\n       result = (GFC_INTEGER_8)n + 1;"}, {"sha": "7d662d5016b776947f3b31fe66537dd6fee17baa", "filename": "libgfortran/generated/minloc1_8_r8.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fminloc1_8_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fgenerated%2Fminloc1_8_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_8_r8.c?ref=a4b9e93e5d35d44cc1d13680800c36065e2cbd3e", "patch": "@@ -132,15 +132,15 @@ minloc1_8_r8 (gfc_array_i8 * const restrict retarray,\n \n   GFC_REAL_8 minval;\n   minval = GFC_REAL_8_HUGE;\n-  result = 1;\n+  result = 0;\n         if (len <= 0)\n \t  *dest = 0;\n \telse\n \t  {\n \t    for (n = 0; n < len; n++, src += delta)\n \t      {\n \n-  if (*src < minval)\n+  if (*src < minval || !result)\n     {\n       minval = *src;\n       result = (GFC_INTEGER_8)n + 1;\n@@ -299,15 +299,15 @@ mminloc1_8_r8 (gfc_array_i8 * const restrict retarray,\n \n   GFC_REAL_8 minval;\n   minval = GFC_REAL_8_HUGE;\n-  result = 1;\n+  result = 0;\n         if (len <= 0)\n \t  *dest = 0;\n \telse\n \t  {\n \t    for (n = 0; n < len; n++, src += delta, msrc += mdelta)\n \t      {\n \n-  if (*msrc && *src < minval)\n+  if (*msrc && (*src < minval || !result))\n     {\n       minval = *src;\n       result = (GFC_INTEGER_8)n + 1;"}, {"sha": "cfe563952bb4c038448cdb37fd253c07ca04edeb", "filename": "libgfortran/m4/iforeach.m4", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fm4%2Fiforeach.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fm4%2Fiforeach.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Fiforeach.m4?ref=a4b9e93e5d35d44cc1d13680800c36065e2cbd3e", "patch": "@@ -71,7 +71,7 @@ name`'rtype_qual`_'atype_code (rtype * const restrict retarray,\n \n   /* Initialize the return value.  */\n   for (n = 0; n < rank; n++)\n-    dest[n * dstride] = 1;\n+    dest[n * dstride] = 0;\n   {\n ')dnl\n define(START_FOREACH_BLOCK,\n@@ -198,7 +198,7 @@ void\n \n   /* Initialize the return value.  */\n   for (n = 0; n < rank; n++)\n-    dest[n * dstride] = 1;\n+    dest[n * dstride] = 0;\n   {\n ')dnl\n define(START_MASKED_FOREACH_BLOCK, `START_FOREACH_BLOCK')dnl"}, {"sha": "9feaa4b99b8e721b8e1ff1732bdaaa4dd3cde56f", "filename": "libgfortran/m4/maxloc0.m4", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fm4%2Fmaxloc0.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fm4%2Fmaxloc0.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Fmaxloc0.m4?ref=a4b9e93e5d35d44cc1d13680800c36065e2cbd3e", "patch": "@@ -45,7 +45,7 @@ FOREACH_FUNCTION(\n \n   maxval = atype_min;'\n ,\n-`  if (*base > maxval)\n+`  if (*base > maxval || !dest[0])\n     {\n       maxval = *base;\n       for (n = 0; n < rank; n++)\n@@ -57,7 +57,7 @@ MASKED_FOREACH_FUNCTION(\n \n   maxval = atype_min;'\n ,\n-`  if (*mbase && *base > maxval)\n+`  if (*mbase && (*base > maxval || !dest[0]))\n     {\n       maxval = *base;\n       for (n = 0; n < rank; n++)"}, {"sha": "161368482f6c6915fcf2b817e33d7bd97ad90682", "filename": "libgfortran/m4/maxloc1.m4", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fm4%2Fmaxloc1.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fm4%2Fmaxloc1.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Fmaxloc1.m4?ref=a4b9e93e5d35d44cc1d13680800c36065e2cbd3e", "patch": "@@ -43,8 +43,8 @@ include(ifunction.m4)dnl\n ARRAY_FUNCTION(0,\n `  atype_name maxval;\n   maxval = atype_min;\n-  result = 1;',\n-`  if (*src > maxval)\n+  result = 0;',\n+`  if (*src > maxval || !result)\n     {\n       maxval = *src;\n       result = (rtype_name)n + 1;\n@@ -53,8 +53,8 @@ ARRAY_FUNCTION(0,\n MASKED_ARRAY_FUNCTION(0,\n `  atype_name maxval;\n   maxval = atype_min;\n-  result = 1;',\n-`  if (*msrc && *src > maxval)\n+  result = 0;',\n+`  if (*msrc && (*src > maxval || !result))\n     {\n       maxval = *src;\n       result = (rtype_name)n + 1;"}, {"sha": "1c2aa18cf0854d99dd170dd08f153c3d2cb1e393", "filename": "libgfortran/m4/minloc0.m4", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fm4%2Fminloc0.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fm4%2Fminloc0.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Fminloc0.m4?ref=a4b9e93e5d35d44cc1d13680800c36065e2cbd3e", "patch": "@@ -45,7 +45,7 @@ FOREACH_FUNCTION(\n \n   minval = atype_max;'\n ,\n-`  if (*base < minval)\n+`  if (*base < minval || !dest[0])\n     {\n       minval = *base;\n       for (n = 0; n < rank; n++)\n@@ -57,7 +57,7 @@ MASKED_FOREACH_FUNCTION(\n \n   minval = atype_max;'\n ,\n-`  if (*mbase && *base < minval)\n+`  if (*mbase && (*base < minval || !dest[0]))\n     {\n       minval = *base;\n       for (n = 0; n < rank; n++)"}, {"sha": "0c116eb63be6d4e434eb0136b9859ea3de71b502", "filename": "libgfortran/m4/minloc1.m4", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fm4%2Fminloc1.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4b9e93e5d35d44cc1d13680800c36065e2cbd3e/libgfortran%2Fm4%2Fminloc1.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Fminloc1.m4?ref=a4b9e93e5d35d44cc1d13680800c36065e2cbd3e", "patch": "@@ -43,8 +43,8 @@ include(ifunction.m4)dnl\n ARRAY_FUNCTION(0,\n `  atype_name minval;\n   minval = atype_max;\n-  result = 1;',\n-`  if (*src < minval)\n+  result = 0;',\n+`  if (*src < minval || !result)\n     {\n       minval = *src;\n       result = (rtype_name)n + 1;\n@@ -53,8 +53,8 @@ ARRAY_FUNCTION(0,\n MASKED_ARRAY_FUNCTION(0,\n `  atype_name minval;\n   minval = atype_max;\n-  result = 1;',\n-`  if (*msrc && *src < minval)\n+  result = 0;',\n+`  if (*msrc && (*src < minval || !result))\n     {\n       minval = *src;\n       result = (rtype_name)n + 1;"}]}