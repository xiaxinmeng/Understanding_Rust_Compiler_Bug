{"sha": "3fe5ceadbbeb824a498db96fc7ee40faed0b45f3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2ZlNWNlYWRiYmViODI0YTQ5OGRiOTZmYzdlZTQwZmFlZDBiNDVmMw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-08-01T10:08:23Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-08-01T10:08:23Z"}, "message": "[multiple changes]\n\n2014-08-01  Robert Dewar  <dewar@adacore.com>\n\n\t* inline.adb, s-os_lib.ads: Minor reformatting.\n\n2014-08-01  Arnaud Charlet  <charlet@adacore.com>\n\n\t* s-tasdeb.ads, s-tasdeb.adb (Master_Hook, Master_Completed_Hook): New.\n\t* s-tassta.adb (Task_Wrapper, Vulnerable_Complete_Master): Call new\n\thooks.\n\nFrom-SVN: r213444", "tree": {"sha": "0247822eace17cf34469977f4d8fed4b47516f78", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0247822eace17cf34469977f4d8fed4b47516f78"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3fe5ceadbbeb824a498db96fc7ee40faed0b45f3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3fe5ceadbbeb824a498db96fc7ee40faed0b45f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3fe5ceadbbeb824a498db96fc7ee40faed0b45f3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3fe5ceadbbeb824a498db96fc7ee40faed0b45f3/comments", "author": null, "committer": null, "parents": [{"sha": "39521a94f844f6c6462b4b7849e7f1e2780be6fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39521a94f844f6c6462b4b7849e7f1e2780be6fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/39521a94f844f6c6462b4b7849e7f1e2780be6fa"}], "stats": {"total": 74, "additions": 71, "deletions": 3}, "files": [{"sha": "cd231664c4a188fd6f13b3f1180e6b47561ea3e9", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fe5ceadbbeb824a498db96fc7ee40faed0b45f3/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fe5ceadbbeb824a498db96fc7ee40faed0b45f3/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=3fe5ceadbbeb824a498db96fc7ee40faed0b45f3", "patch": "@@ -1,3 +1,13 @@\n+2014-08-01  Robert Dewar  <dewar@adacore.com>\n+\n+\t* inline.adb, s-os_lib.ads: Minor reformatting.\n+\n+2014-08-01  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* s-tasdeb.ads, s-tasdeb.adb (Master_Hook, Master_Completed_Hook): New.\n+\t* s-tassta.adb (Task_Wrapper, Vulnerable_Complete_Master): Call new\n+\thooks.\n+\n 2014-08-01  Yannick Moy  <moy@adacore.com>\n \n \t* inline.adb (Cannot_Inline): Issue info message instead of"}, {"sha": "36631c2d68fc2c4618dad270c276e40c19381fc5", "filename": "gcc/ada/inline.adb", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fe5ceadbbeb824a498db96fc7ee40faed0b45f3/gcc%2Fada%2Finline.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fe5ceadbbeb824a498db96fc7ee40faed0b45f3/gcc%2Fada%2Finline.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finline.adb?ref=3fe5ceadbbeb824a498db96fc7ee40faed0b45f3", "patch": "@@ -1239,10 +1239,14 @@ package body Inline is\n         and then Msg (Msg'First .. Msg'First + 12) = \"cannot inline\"\n       then\n          declare\n-            Len1 : constant Positive := 13;  --  length of \"cannot inline\"\n+            Len1 : constant Positive := 13;\n+            --  Length of \"cannot inline\"\n+\n             Len2 : constant Positive := 31;\n-            --  lenth of \"info: no contextual analysis of\"\n+            --  Length of \"info: no contextual analysis of\"\n+\n             New_Msg : String (1 .. Msg'Length + Len2 - Len1);\n+\n          begin\n             New_Msg (1 .. Len2) := \"info: no contextual analysis of\";\n             New_Msg (Len2 + 1 .. Msg'Length + Len2 - Len1) :="}, {"sha": "d3ded15ee4a70b366deca6e2e7e27b7974b81609", "filename": "gcc/ada/s-os_lib.ads", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fe5ceadbbeb824a498db96fc7ee40faed0b45f3/gcc%2Fada%2Fs-os_lib.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fe5ceadbbeb824a498db96fc7ee40faed0b45f3/gcc%2Fada%2Fs-os_lib.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-os_lib.ads?ref=3fe5ceadbbeb824a498db96fc7ee40faed0b45f3", "patch": "@@ -426,7 +426,9 @@ package System.OS_Lib is\n    --  to the current position (origin = SEEK_CUR), end of file (origin =\n    --  SEEK_END), or start of file (origin = SEEK_SET).\n \n-   type Large_File_Size is range -2 ** 63 .. 2 ** 63 - 1;\n+   type Large_File_Size is range -2**63 .. 2**63 - 1;\n+   --  Maximum supported size for a file (8 exabytes = 8 million terabytes,\n+   --  should be enough to accomodate all possible needs for quite a while).\n \n    function File_Length (FD : File_Descriptor) return Long_Integer;\n    pragma Import (C, File_Length, \"__gnat_file_length_long\");"}, {"sha": "a18b844bcba4439839fc84a2a648e8c41fa62a25", "filename": "gcc/ada/s-tasdeb.adb", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fe5ceadbbeb824a498db96fc7ee40faed0b45f3/gcc%2Fada%2Fs-tasdeb.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fe5ceadbbeb824a498db96fc7ee40faed0b45f3/gcc%2Fada%2Fs-tasdeb.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tasdeb.adb?ref=3fe5ceadbbeb824a498db96fc7ee40faed0b45f3", "patch": "@@ -437,4 +437,34 @@ package body System.Tasking.Debug is\n           (Fd, S'Address, System.CRTL.size_t (Count));\n    end Write;\n \n+   -----------------\n+   -- Master_Hook --\n+   -----------------\n+\n+   procedure Master_Hook\n+     (Dependent    : Task_Id;\n+      Parent       : Task_Id;\n+      Master_Level : Integer)\n+   is\n+      pragma Inspection_Point (Dependent);\n+      pragma Inspection_Point (Parent);\n+      pragma Inspection_Point (Master_Level);\n+   begin\n+      null;\n+   end Master_Hook;\n+\n+   ---------------------------\n+   -- Master_Completed_Hook --\n+   ---------------------------\n+\n+   procedure Master_Completed_Hook\n+     (Self_ID      : Task_Id;\n+      Master_Level : Integer)\n+   is\n+      pragma Inspection_Point (Self_ID);\n+      pragma Inspection_Point (Master_Level);\n+   begin\n+      null;\n+   end Master_Completed_Hook;\n+\n end System.Tasking.Debug;"}, {"sha": "4302fde526694dd5609bb9564a4df56265c30131", "filename": "gcc/ada/s-tasdeb.ads", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fe5ceadbbeb824a498db96fc7ee40faed0b45f3/gcc%2Fada%2Fs-tasdeb.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fe5ceadbbeb824a498db96fc7ee40faed0b45f3/gcc%2Fada%2Fs-tasdeb.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tasdeb.ads?ref=3fe5ceadbbeb824a498db96fc7ee40faed0b45f3", "patch": "@@ -145,4 +145,21 @@ package System.Tasking.Debug is\n    --  Enable or disable tracing for Flag. By default, flags in the range\n    --  'A' .. 'Z' are disabled, others are enabled.\n \n+   ---------------------------------\n+   -- Hooks for Valgrind/Helgrind --\n+   ---------------------------------\n+\n+   procedure Master_Hook\n+     (Dependent    : Task_Id;\n+      Parent       : Task_Id;\n+      Master_Level : Integer);\n+   --  Indicate to Valgrind/Helgrind that the master of Dependent\n+   --  is Parent + Master_Level.\n+\n+   procedure Master_Completed_Hook\n+     (Self_ID      : Task_Id;\n+      Master_Level : Integer);\n+   --  Indicate to Valgrind/Helgrind that Self_ID has completed\n+   --  the master Master_Level.\n+\n end System.Tasking.Debug;"}, {"sha": "1cf83dad09900ed438a07ef1957738221151f0d2", "filename": "gcc/ada/s-tassta.adb", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fe5ceadbbeb824a498db96fc7ee40faed0b45f3/gcc%2Fada%2Fs-tassta.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fe5ceadbbeb824a498db96fc7ee40faed0b45f3/gcc%2Fada%2Fs-tassta.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tassta.adb?ref=3fe5ceadbbeb824a498db96fc7ee40faed0b45f3", "patch": "@@ -1119,6 +1119,9 @@ package body System.Tasking.Stages is\n    begin\n       pragma Assert (Self_ID.Deferral_Level = 1);\n \n+      Debug.Master_Hook\n+        (Self_ID, Self_ID.Common.Parent, Self_ID.Master_of_Task);\n+\n       --  Assume a size of the stack taken at this stage\n \n       if not Parameters.Sec_Stack_Dynamic then\n@@ -1985,6 +1988,8 @@ package body System.Tasking.Stages is\n       --  since the value is only updated by each task for itself.\n \n       Self_ID.Master_Within := CM - 1;\n+\n+      Debug.Master_Completed_Hook (Self_ID, CM);\n    end Vulnerable_Complete_Master;\n \n    ------------------------------"}]}