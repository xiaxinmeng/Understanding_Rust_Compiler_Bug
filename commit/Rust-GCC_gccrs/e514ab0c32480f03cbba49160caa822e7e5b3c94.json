{"sha": "e514ab0c32480f03cbba49160caa822e7e5b3c94", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTUxNGFiMGMzMjQ4MGYwM2NiYmE0OTE2MGNhYTgyMmU3ZTViM2M5NA==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2017-05-29T14:08:04Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2017-05-29T14:08:04Z"}, "message": "PR c++/80891 (#1)\n\n\tPR c++/80891 (#1)\n\t* pt.c (most_specialized_instantiation): Cope with duplicate\n\tinstantiations.\n\n\tPR c++/80891 (#1)\n\t* g++.dg/lookup/pr80891-1.C: New.\n\nFrom-SVN: r248573", "tree": {"sha": "36db105ffe2c19aa65a5d17c2074a3f14052c5ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/36db105ffe2c19aa65a5d17c2074a3f14052c5ac"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e514ab0c32480f03cbba49160caa822e7e5b3c94", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e514ab0c32480f03cbba49160caa822e7e5b3c94", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e514ab0c32480f03cbba49160caa822e7e5b3c94", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e514ab0c32480f03cbba49160caa822e7e5b3c94/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "58dec010560be6fc090a2b5a65e5b4349b88748b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58dec010560be6fc090a2b5a65e5b4349b88748b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/58dec010560be6fc090a2b5a65e5b4349b88748b"}], "stats": {"total": 67, "additions": 47, "deletions": 20}, "files": [{"sha": "d538c3eb6f2ff23cc249e57f8ce8db392e50907f", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e514ab0c32480f03cbba49160caa822e7e5b3c94/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e514ab0c32480f03cbba49160caa822e7e5b3c94/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=e514ab0c32480f03cbba49160caa822e7e5b3c94", "patch": "@@ -1,5 +1,9 @@\n 2017-05-29  Nathan Sidwell  <nathan@acm.org>\n \n+\tPR c++/80891 (#1)\n+\t* pt.c (most_specialized_instantiation): Cope with duplicate\n+\tinstantiations.\n+\n \tPR c++/80891 (#3)\n \t* cp-tree.h (build_min_nt_call_vec): Declare.\n \t* decl.c (build_offset_ref_call_from_tree): Call it."}, {"sha": "d3a0d7a9b8b5025e761d680c3afedd3c3cb52d7d", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 21, "deletions": 20, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e514ab0c32480f03cbba49160caa822e7e5b3c94/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e514ab0c32480f03cbba49160caa822e7e5b3c94/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=e514ab0c32480f03cbba49160caa822e7e5b3c94", "patch": "@@ -21728,31 +21728,32 @@ most_specialized_instantiation (tree templates)\n \n   champ = templates;\n   for (fn = TREE_CHAIN (templates); fn; fn = TREE_CHAIN (fn))\n-    {\n-      int fate = more_specialized_inst (TREE_VALUE (champ), TREE_VALUE (fn));\n-      if (fate == -1)\n-\tchamp = fn;\n-      else if (!fate)\n-\t{\n-\t  /* Equally specialized, move to next function.  If there\n-\t     is no next function, nothing's most specialized.  */\n-\t  fn = TREE_CHAIN (fn);\n+    if (TREE_VALUE (champ) != TREE_VALUE (fn))\n+      {\n+\tint fate = more_specialized_inst (TREE_VALUE (champ), TREE_VALUE (fn));\n+\tif (fate == -1)\n \t  champ = fn;\n-\t  if (!fn)\n-\t    break;\n-\t}\n-    }\n+\telse if (!fate)\n+\t  {\n+\t    /* Equally specialized, move to next function.  If there\n+\t       is no next function, nothing's most specialized.  */\n+\t    fn = TREE_CHAIN (fn);\n+\t    champ = fn;\n+\t    if (!fn)\n+\t      break;\n+\t  }\n+      }\n \n   if (champ)\n     /* Now verify that champ is better than everything earlier in the\n        instantiation list.  */\n-    for (fn = templates; fn != champ; fn = TREE_CHAIN (fn)) {\n-      if (more_specialized_inst (TREE_VALUE (champ), TREE_VALUE (fn)) != 1)\n-      {\n-        champ = NULL_TREE;\n-        break;\n-      }\n-    }\n+    for (fn = templates; fn != champ; fn = TREE_CHAIN (fn))\n+      if (TREE_VALUE (champ) != TREE_VALUE (fn)\n+\t  && more_specialized_inst (TREE_VALUE (champ), TREE_VALUE (fn)) != 1)\n+\t{\n+\t  champ = NULL_TREE;\n+\t  break;\n+\t}\n \n   processing_template_decl--;\n "}, {"sha": "98e06f923bf0d2ab8b2a5444c8d21cb134306ce3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e514ab0c32480f03cbba49160caa822e7e5b3c94/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e514ab0c32480f03cbba49160caa822e7e5b3c94/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e514ab0c32480f03cbba49160caa822e7e5b3c94", "patch": "@@ -1,5 +1,8 @@\n 2017-05-29  Nathan Sidwell  <nathan@acm.org>\n \n+\tPR c++/80891 (#1)\n+\t* g++.dg/lookup/pr80891-1.C: New.\n+\n \tPR c++/80891 (#3)\n \t* g++.dg/lookup/pr80891-3.C: New.\n "}, {"sha": "725ca190ae9b05638bf9e1f7f81277aa560ef35e", "filename": "gcc/testsuite/g++.dg/lookup/pr80891-1.C", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e514ab0c32480f03cbba49160caa822e7e5b3c94/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fpr80891-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e514ab0c32480f03cbba49160caa822e7e5b3c94/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fpr80891-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fpr80891-1.C?ref=e514ab0c32480f03cbba49160caa822e7e5b3c94", "patch": "@@ -0,0 +1,19 @@\n+// PR c++/80891 part 1\n+// std::endl is found via two paths and most_specialized_instantiation\n+// gets confused.\n+\n+namespace std {\n+  struct A {\n+    void operator<<(A(A));\n+  };\n+  template <typename _CharT, typename _Traits> _CharT endl(_Traits);\n+  A a;\n+}\n+\n+using std::endl;\n+\n+void chi_squared_sample_sized()\n+{\n+  using namespace std;\n+  a << endl;\n+}"}]}