{"sha": "8359c87e12157ec6a75026f2f90a7e032a3de30c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODM1OWM4N2UxMjE1N2VjNmE3NTAyNmYyZjkwYTdlMDMyYTNkZTMwYw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2014-04-14T08:35:22Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2014-04-14T08:35:22Z"}, "message": "re PR lto/60720 (clisp fails to build with -flto: internal compiler error: tree check: expected array_type, have record_type in array_ref_low_bound, at expr.c:6941)\n\n2014-04-14  Richard Biener  <rguenther@suse.de>\n\n\tPR lto/60720\n\t* lto-streamer-out.c (wrap_refs): New function.\n\t(lto_output): Wrap symbol references in global initializes in\n\ttype-preserving MEM_REFs.\n\n\t* gcc.dg/lto/pr60720_0.c: New testcase.\n\t* gcc.dg/lto/pr60720_1.c: Likewise.\n\nFrom-SVN: r209359", "tree": {"sha": "206513ad080c96ac3a9e1f365f8c2a44e3ff71f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/206513ad080c96ac3a9e1f365f8c2a44e3ff71f1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8359c87e12157ec6a75026f2f90a7e032a3de30c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8359c87e12157ec6a75026f2f90a7e032a3de30c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8359c87e12157ec6a75026f2f90a7e032a3de30c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8359c87e12157ec6a75026f2f90a7e032a3de30c/comments", "author": null, "committer": null, "parents": [{"sha": "9447df74c059415f2c53df95d845ab9964793074", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9447df74c059415f2c53df95d845ab9964793074", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9447df74c059415f2c53df95d845ab9964793074"}], "stats": {"total": 93, "additions": 77, "deletions": 16}, "files": [{"sha": "026735907fd97da54f0f32f0bf94c8b15bc9092e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8359c87e12157ec6a75026f2f90a7e032a3de30c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8359c87e12157ec6a75026f2f90a7e032a3de30c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8359c87e12157ec6a75026f2f90a7e032a3de30c", "patch": "@@ -1,3 +1,10 @@\n+2014-04-14  Richard Biener  <rguenther@suse.de>\n+\n+\tPR lto/60720\n+\t* lto-streamer-out.c (wrap_refs): New function.\n+\t(lto_output): Wrap symbol references in global initializes in\n+\ttype-preserving MEM_REFs.\n+\n 2014-04-14  Christian Bruel  <christian.bruel@st.com>\n \n         * config/sh/sh-mem.cc (sh_expand_strlen): Unroll last word."}, {"sha": "b193d730d75b9c4a7de9b625f1565208f6d6a88f", "filename": "gcc/lto-streamer-out.c", "status": "modified", "additions": 47, "deletions": 15, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8359c87e12157ec6a75026f2f90a7e032a3de30c/gcc%2Flto-streamer-out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8359c87e12157ec6a75026f2f90a7e032a3de30c/gcc%2Flto-streamer-out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-streamer-out.c?ref=8359c87e12157ec6a75026f2f90a7e032a3de30c", "patch": "@@ -2022,6 +2022,29 @@ copy_function (struct cgraph_node *node)\n   lto_end_section ();\n }\n \n+/* Wrap symbol references in *TP inside a type-preserving MEM_REF.  */\n+\n+static tree\n+wrap_refs (tree *tp, int *ws, void *)\n+{\n+  tree t = *tp;\n+  if (handled_component_p (t)\n+      && TREE_CODE (TREE_OPERAND (t, 0)) == VAR_DECL)\n+    {\n+      tree decl = TREE_OPERAND (t, 0);\n+      tree ptrtype = build_pointer_type (TREE_TYPE (decl));\n+      TREE_OPERAND (t, 0) = build2 (MEM_REF, TREE_TYPE (decl),\n+\t\t\t\t    build1 (ADDR_EXPR, ptrtype, decl),\n+\t\t\t\t    build_int_cst (ptrtype, 0));\n+      TREE_THIS_VOLATILE (TREE_OPERAND (t, 0)) = TREE_THIS_VOLATILE (decl);\n+      *ws = 0;\n+    }\n+  else if (TREE_CODE (t) == CONSTRUCTOR)\n+    ;\n+  else if (!EXPR_P (t))\n+    *ws = 0;\n+  return NULL_TREE;\n+}\n \n /* Main entry point from the pass manager.  */\n \n@@ -2043,24 +2066,33 @@ lto_output (void)\n   for (i = 0; i < n_nodes; i++)\n     {\n       symtab_node *snode = lto_symtab_encoder_deref (encoder, i);\n-      cgraph_node *node = dyn_cast <cgraph_node> (snode);\n-      if (node\n-\t  && lto_symtab_encoder_encode_body_p (encoder, node)\n-\t  && !node->alias)\n+      if (cgraph_node *node = dyn_cast <cgraph_node> (snode))\n \t{\n+\t  if (lto_symtab_encoder_encode_body_p (encoder, node)\n+\t      && !node->alias)\n+\t    {\n #ifdef ENABLE_CHECKING\n-\t  gcc_assert (!bitmap_bit_p (output, DECL_UID (node->decl)));\n-\t  bitmap_set_bit (output, DECL_UID (node->decl));\n+\t      gcc_assert (!bitmap_bit_p (output, DECL_UID (node->decl)));\n+\t      bitmap_set_bit (output, DECL_UID (node->decl));\n #endif\n-\t  decl_state = lto_new_out_decl_state ();\n-\t  lto_push_out_decl_state (decl_state);\n-\t  if (gimple_has_body_p (node->decl) || !flag_wpa)\n-\t    output_function (node);\n-\t  else\n-\t    copy_function (node);\n-\t  gcc_assert (lto_get_out_decl_state () == decl_state);\n-\t  lto_pop_out_decl_state ();\n-\t  lto_record_function_out_decl_state (node->decl, decl_state);\n+\t      decl_state = lto_new_out_decl_state ();\n+\t      lto_push_out_decl_state (decl_state);\n+\t      if (gimple_has_body_p (node->decl) || !flag_wpa)\n+\t\toutput_function (node);\n+\t      else\n+\t\tcopy_function (node);\n+\t      gcc_assert (lto_get_out_decl_state () == decl_state);\n+\t      lto_pop_out_decl_state ();\n+\t      lto_record_function_out_decl_state (node->decl, decl_state);\n+\t    }\n+\t}\n+      else if (varpool_node *node = dyn_cast <varpool_node> (snode))\n+\t{\n+\t  /* Wrap symbol references inside the ctor in a type\n+\t     preserving MEM_REF.  */\n+\t  tree ctor = DECL_INITIAL (node->decl);\n+\t  if (ctor && !in_lto_p)\n+\t    walk_tree (&ctor, wrap_refs, NULL, NULL);\n \t}\n     }\n "}, {"sha": "6c49b9aa5890684c53b8620e38f10e73c28a7ea6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8359c87e12157ec6a75026f2f90a7e032a3de30c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8359c87e12157ec6a75026f2f90a7e032a3de30c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8359c87e12157ec6a75026f2f90a7e032a3de30c", "patch": "@@ -1,4 +1,10 @@\n-2014-01-20  Christian Bruel  <christian.bruel@st.com>\n+2014-04-14  Richard Biener  <rguenther@suse.de>\n+\n+\tPR lto/60720\n+\t* gcc.dg/lto/pr60720_0.c: New testcase.\n+\t* gcc.dg/lto/pr60720_1.c: Likewise.\n+\n+2014-04-14  Christian Bruel  <christian.bruel@st.com>\n \n \t* gcc.target/sh/memset.c: New test.\n "}, {"sha": "79cef5dad1a68cc639ab8058cc7aef2c97dd74da", "filename": "gcc/testsuite/gcc.dg/lto/pr60720_0.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8359c87e12157ec6a75026f2f90a7e032a3de30c/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fpr60720_0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8359c87e12157ec6a75026f2f90a7e032a3de30c/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fpr60720_0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fpr60720_0.c?ref=8359c87e12157ec6a75026f2f90a7e032a3de30c", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-lto-do run } */\n+/* { dg-extra-ld-options { -w } } */\n+\n+/* ???  lto.exp does not allow to scan for\n+   :1:12: warning: type of 'x' does not match original declaration\n+    extern int x[];\n+               ^\n+   :1:5: note: previously declared here\n+    int x;\n+        ^  */\n+\n+extern int x[];\n+int *foo[] = { &x[0] };\n+\n+int main() { return *foo[0]; }"}, {"sha": "6d1a0d47b7f73eacb962f3711df06b21ed11f7ca", "filename": "gcc/testsuite/gcc.dg/lto/pr60720_1.c", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8359c87e12157ec6a75026f2f90a7e032a3de30c/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fpr60720_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8359c87e12157ec6a75026f2f90a7e032a3de30c/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fpr60720_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fpr60720_1.c?ref=8359c87e12157ec6a75026f2f90a7e032a3de30c", "patch": "@@ -0,0 +1 @@\n+int x;"}]}