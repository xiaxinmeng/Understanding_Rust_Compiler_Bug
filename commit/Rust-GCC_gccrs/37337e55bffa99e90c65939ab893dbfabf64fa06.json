{"sha": "37337e55bffa99e90c65939ab893dbfabf64fa06", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzczMzdlNTViZmZhOTllOTBjNjU5MzlhYjg5M2RiZmFiZjY0ZmEwNg==", "commit": {"author": {"name": "Ulrich Weigand", "email": "uweigand@de.ibm.com", "date": "2004-09-20T23:42:00Z"}, "committer": {"name": "Ulrich Weigand", "email": "uweigand@gcc.gnu.org", "date": "2004-09-20T23:42:00Z"}, "message": "s390.c (s390_select_rtx_section): Remove.\n\n\t* config/s390/s390.c (s390_select_rtx_section): Remove.\n\t(TARGET_ASM_SELECT_RTX_SECTION): Do not redefine.\n\nFrom-SVN: r87779", "tree": {"sha": "d4277834bc8b03929608bcfddc5cc13b938afb5d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d4277834bc8b03929608bcfddc5cc13b938afb5d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/37337e55bffa99e90c65939ab893dbfabf64fa06", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37337e55bffa99e90c65939ab893dbfabf64fa06", "html_url": "https://github.com/Rust-GCC/gccrs/commit/37337e55bffa99e90c65939ab893dbfabf64fa06", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37337e55bffa99e90c65939ab893dbfabf64fa06/comments", "author": null, "committer": null, "parents": [{"sha": "455786b6c75af58bd20f39f00148c12562d65863", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/455786b6c75af58bd20f39f00148c12562d65863", "html_url": "https://github.com/Rust-GCC/gccrs/commit/455786b6c75af58bd20f39f00148c12562d65863"}], "stats": {"total": 24, "additions": 5, "deletions": 19}, "files": [{"sha": "167e1b97a47919371fdbcff45d5f154181952890", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37337e55bffa99e90c65939ab893dbfabf64fa06/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37337e55bffa99e90c65939ab893dbfabf64fa06/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=37337e55bffa99e90c65939ab893dbfabf64fa06", "patch": "@@ -1,3 +1,8 @@\n+2004-09-20  Ulrich Weigand  <uweigand@de.ibm.com>\n+\n+\t* config/s390/s390.c (s390_select_rtx_section): Remove.\n+\t(TARGET_ASM_SELECT_RTX_SECTION): Do not redefine.\n+\n 2004-09-20  Kaz Kojima  <kkojima@gcc.gnu.org>\n \n \t* config/sh/sh.c (sh_expand_prologue): Add a REG_FRAME_RELATED_EXPR"}, {"sha": "124f4e54df95166144b3c6e285b59d0096d074cc", "filename": "gcc/config/s390/s390.c", "status": "modified", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37337e55bffa99e90c65939ab893dbfabf64fa06/gcc%2Fconfig%2Fs390%2Fs390.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37337e55bffa99e90c65939ab893dbfabf64fa06/gcc%2Fconfig%2Fs390%2Fs390.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.c?ref=37337e55bffa99e90c65939ab893dbfabf64fa06", "patch": "@@ -57,8 +57,6 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n \n \n static bool s390_assemble_integer (rtx, unsigned int, int);\n-static void s390_select_rtx_section (enum machine_mode, rtx,\n-\t\t\t\t     unsigned HOST_WIDE_INT);\n static void s390_encode_section_info (tree, rtx, int);\n static bool s390_cannot_force_const_mem (rtx);\n static rtx s390_delegitimize_address (rtx);\n@@ -97,9 +95,6 @@ static bool s390_pass_by_reference (CUMULATIVE_ARGS *, enum machine_mode mode,\n #undef  TARGET_ASM_CLOSE_PAREN\n #define TARGET_ASM_CLOSE_PAREN \"\"\n \n-#undef\tTARGET_ASM_SELECT_RTX_SECTION\n-#define\tTARGET_ASM_SELECT_RTX_SECTION  s390_select_rtx_section\n-\n #undef\tTARGET_ENCODE_SECTION_INFO\n #define TARGET_ENCODE_SECTION_INFO s390_encode_section_info\n \n@@ -7544,20 +7539,6 @@ s390_function_profiler (FILE *file, int labelno)\n     }\n }\n \n-/* Select section for constant in constant pool.  In 32-bit mode,\n-   constants go in the function section; in 64-bit mode in .rodata.  */\n-\n-static void\n-s390_select_rtx_section (enum machine_mode mode ATTRIBUTE_UNUSED,\n-\t\t\t rtx x ATTRIBUTE_UNUSED,\n-\t\t\t unsigned HOST_WIDE_INT align ATTRIBUTE_UNUSED)\n-{\n-  if (TARGET_CPU_ZARCH)\n-    readonly_data_section ();\n-  else\n-    function_section (current_function_decl);\n-}\n-\n /* Encode symbol attributes (local vs. global, tls model) of a SYMBOL_REF\n    into its SYMBOL_REF_FLAGS.  */\n "}]}