{"sha": "319638ed5cd91621c8164eca42bd96bbd8139f02", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzE5NjM4ZWQ1Y2Q5MTYyMWM4MTY0ZWNhNDJiZDk2YmJkODEzOWYwMg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2012-01-11T22:59:12Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2012-01-11T22:59:12Z"}, "message": "re PR bootstrap/51796 (internal compiler error: in distribute_notes, at combine.c:13285 for libgomp/alloc.c on m68k-linux)\n\n\tPR bootstrap/51796\n\t* combine.c (distribute_notes): If i3 is a noreturn call,\n\tallow old_size to be equal to args_size and make sure the\n\tnoreturn call gets REG_ARGS_SIZE note.\n\t* expr.c (fixup_args_size_notes): Put REG_ARGS_SIZE notes\n\ton noreturn calls even when the delta is 0.\n\n\t* gcc.dg/pr51796.c: New test.\n\nFrom-SVN: r183111", "tree": {"sha": "fbdc23d46078139f7cb8428d4b8b9ecfefb8f37b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fbdc23d46078139f7cb8428d4b8b9ecfefb8f37b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/319638ed5cd91621c8164eca42bd96bbd8139f02", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/319638ed5cd91621c8164eca42bd96bbd8139f02", "html_url": "https://github.com/Rust-GCC/gccrs/commit/319638ed5cd91621c8164eca42bd96bbd8139f02", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/319638ed5cd91621c8164eca42bd96bbd8139f02/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "11d8e1a4cbf1a47eb3fe0a673cff6b820ffdda2c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11d8e1a4cbf1a47eb3fe0a673cff6b820ffdda2c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/11d8e1a4cbf1a47eb3fe0a673cff6b820ffdda2c"}], "stats": {"total": 70, "additions": 63, "deletions": 7}, "files": [{"sha": "4d6d129312868fc6a1938bfff1165f28501042b1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/319638ed5cd91621c8164eca42bd96bbd8139f02/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/319638ed5cd91621c8164eca42bd96bbd8139f02/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=319638ed5cd91621c8164eca42bd96bbd8139f02", "patch": "@@ -1,3 +1,12 @@\n+2012-01-11  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR bootstrap/51796\n+\t* combine.c (distribute_notes): If i3 is a noreturn call,\n+\tallow old_size to be equal to args_size and make sure the\n+\tnoreturn call gets REG_ARGS_SIZE note.\n+\t* expr.c (fixup_args_size_notes): Put REG_ARGS_SIZE notes\n+\ton noreturn calls even when the delta is 0.\n+\n 2012-01-11  Nathan Sidwell  <nathan@acm.org>\n \n \t* gcov.c (STRING_SIZE): Remove."}, {"sha": "417887017e640244d11fb7b209bb3631d436ec1d", "filename": "gcc/combine.c", "status": "modified", "additions": 22, "deletions": 2, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/319638ed5cd91621c8164eca42bd96bbd8139f02/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/319638ed5cd91621c8164eca42bd96bbd8139f02/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=319638ed5cd91621c8164eca42bd96bbd8139f02", "patch": "@@ -1,7 +1,7 @@\n /* Optimize by combining instructions for GNU compiler.\n    Copyright (C) 1987, 1988, 1992, 1993, 1994, 1995, 1996, 1997, 1998,\n    1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010,\n-   2011 Free Software Foundation, Inc.\n+   2011, 2012 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -13281,8 +13281,28 @@ distribute_notes (rtx notes, rtx from_insn, rtx i3, rtx i2, rtx elim_i2,\n \t  if (!noop_move_p (i3))\n \t    {\n \t      int old_size, args_size = INTVAL (XEXP (note, 0));\n+\t      /* fixup_args_size_notes looks at REG_NORETURN note,\n+\t\t so ensure the note is placed there first.  */\n+\t      if (CALL_P (i3))\n+\t\t{\n+\t\t  rtx *np;\n+\t\t  for (np = &next_note; *np; np = &XEXP (*np, 1))\n+\t\t    if (REG_NOTE_KIND (*np) == REG_NORETURN)\n+\t\t      {\n+\t\t\trtx n = *np;\n+\t\t\t*np = XEXP (n, 1);\n+\t\t\tXEXP (n, 1) = REG_NOTES (i3);\n+\t\t\tREG_NOTES (i3) = n;\n+\t\t\tbreak;\n+\t\t      }\n+\t\t}\n \t      old_size = fixup_args_size_notes (PREV_INSN (i3), i3, args_size);\n-\t      gcc_assert (old_size != args_size);\n+\t      /* emit_call_1 adds for !ACCUMULATE_OUTGOING_ARGS\n+\t\t REG_ARGS_SIZE note to all noreturn calls, allow that here.  */\n+\t      gcc_assert (old_size != args_size\n+\t\t\t  || (CALL_P (i3)\n+\t\t\t      && !ACCUMULATE_OUTGOING_ARGS\n+\t\t\t      && find_reg_note (i3, REG_NORETURN, NULL_RTX)));\n \t    }\n \t  break;\n "}, {"sha": "c5162692241634b1f6d7aef7e3b4092d8669d2d7", "filename": "gcc/expr.c", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/319638ed5cd91621c8164eca42bd96bbd8139f02/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/319638ed5cd91621c8164eca42bd96bbd8139f02/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=319638ed5cd91621c8164eca42bd96bbd8139f02", "patch": "@@ -1,7 +1,7 @@\n /* Convert tree expression to rtl instructions, for GNU compiler.\n    Copyright (C) 1988, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999,\n-   2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011\n-   Free Software Foundation, Inc.\n+   2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011,\n+   2012 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -3642,9 +3642,11 @@ mem_autoinc_base (rtx mem)\n      (1) One or more auto-inc style memory references (aka pushes),\n      (2) One or more addition/subtraction with the SP as destination,\n      (3) A single move insn with the SP as destination,\n-     (4) A call_pop insn.\n+     (4) A call_pop insn,\n+     (5) Noreturn call insns if !ACCUMULATE_OUTGOING_ARGS.\n \n-   Insns in the sequence that do not modify the SP are ignored.\n+   Insns in the sequence that do not modify the SP are ignored,\n+   except for noreturn calls.\n \n    The return value is the amount of adjustment that can be trivially\n    verified, via immediate operand or auto-inc.  If the adjustment\n@@ -3789,7 +3791,12 @@ fixup_args_size_notes (rtx prev, rtx last, int end_args_size)\n \n       this_delta = find_args_size_adjust (insn);\n       if (this_delta == 0)\n-\tcontinue;\n+\t{\n+\t  if (!CALL_P (insn)\n+\t      || ACCUMULATE_OUTGOING_ARGS\n+\t      || find_reg_note (insn, REG_NORETURN, NULL_RTX) == NULL_RTX)\n+\t    continue;\n+\t}\n \n       gcc_assert (!saw_unknown);\n       if (this_delta == HOST_WIDE_INT_MIN)"}, {"sha": "970e4e0029247d6a28fc25918d87fa6ef3ff8a24", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/319638ed5cd91621c8164eca42bd96bbd8139f02/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/319638ed5cd91621c8164eca42bd96bbd8139f02/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=319638ed5cd91621c8164eca42bd96bbd8139f02", "patch": "@@ -1,3 +1,8 @@\n+2012-01-11  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR bootstrap/51796\n+\t* gcc.dg/pr51796.c: New test.\n+\n 2012-01-11  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/51818"}, {"sha": "c07ad1087cce2507e00e0a206f428e28731333c3", "filename": "gcc/testsuite/gcc.dg/pr51796.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/319638ed5cd91621c8164eca42bd96bbd8139f02/gcc%2Ftestsuite%2Fgcc.dg%2Fpr51796.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/319638ed5cd91621c8164eca42bd96bbd8139f02/gcc%2Ftestsuite%2Fgcc.dg%2Fpr51796.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr51796.c?ref=319638ed5cd91621c8164eca42bd96bbd8139f02", "patch": "@@ -0,0 +1,15 @@\n+/* PR bootstrap/51796 */\n+/* { dg-do compile } */\n+/* { dg-options \"-Os -fno-omit-frame-pointer -fno-tree-dominator-opts -fno-tree-fre -fno-tree-pre\" } */\n+\n+typedef void (*entry_func) (void) __attribute__ ((noreturn));\n+extern entry_func entry_addr;\n+static void bsd_boot_entry (void)\n+{\n+  stop ();\n+}   \n+void bsd_boot (void)\n+{\n+  entry_addr = (entry_func) bsd_boot_entry;\n+  (*entry_addr) ();\n+}"}]}