{"sha": "7b0cab995daec07d1fddae14c57918ae0c30fb21", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2IwY2FiOTk1ZGFlYzA3ZDFmZGRhZTE0YzU3OTE4YWUwYzMwZmIyMQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2005-04-09T16:09:11Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2005-04-09T16:09:11Z"}, "message": "cfglayout.c (copy_bbs): Rename n_edges to num_edges.\n\n\t* cfglayout.c (copy_bbs): Rename n_edges to num_edges.\n\t* cfgloop.c (get_loop_exit_edges): Likewise.\n\t* cfgloopmanip.c (fix_irreducible_loops): Likewise.\n\t(unloop): Likewise.\n\t* loop-unroll.c (analyze_insns_in_loop): Likewise.\n\t* tree-cfg.c (dump_cfg_status): Likewise.\n\nCo-Authored-By: Steven Bosscher <stevenb@suse.de>\n\nFrom-SVN: r97903", "tree": {"sha": "b5d29f6fe23b01c580491479ee045f7bfb5ac469", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b5d29f6fe23b01c580491479ee045f7bfb5ac469"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7b0cab995daec07d1fddae14c57918ae0c30fb21", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b0cab995daec07d1fddae14c57918ae0c30fb21", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b0cab995daec07d1fddae14c57918ae0c30fb21", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b0cab995daec07d1fddae14c57918ae0c30fb21/comments", "author": null, "committer": null, "parents": [{"sha": "5b296c8a7612a3a3adea46343e3475bbb979a2e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b296c8a7612a3a3adea46343e3475bbb979a2e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b296c8a7612a3a3adea46343e3475bbb979a2e8"}], "stats": {"total": 54, "additions": 32, "deletions": 22}, "files": [{"sha": "b01ba2d53bb6f43410103b4283f156ca3c8e40e5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b0cab995daec07d1fddae14c57918ae0c30fb21/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b0cab995daec07d1fddae14c57918ae0c30fb21/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7b0cab995daec07d1fddae14c57918ae0c30fb21", "patch": "@@ -1,3 +1,13 @@\n+2005-04-09  Jan Hubicka  <jh@suse.cz>\n+\t    Steven Bosscher  <stevenb@suse.de>\n+\n+\t* cfglayout.c (copy_bbs): Rename n_edges to num_edges.\n+\t* cfgloop.c (get_loop_exit_edges): Likewise.\n+\t* cfgloopmanip.c (fix_irreducible_loops): Likewise.\n+\t(unloop): Likewise.\n+\t* loop-unroll.c (analyze_insns_in_loop): Likewise.\n+\t* tree-cfg.c (dump_cfg_status): Likewise.\n+\n 2005-04-09  David Edelsohn  <edelsohn@gnu.org>\n \n \t* config/rs6000/predicates.md (altivec_register_operand): Remove"}, {"sha": "22c93f1142032d027c3308593b1b39bf3bcf9273", "filename": "gcc/cfglayout.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b0cab995daec07d1fddae14c57918ae0c30fb21/gcc%2Fcfglayout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b0cab995daec07d1fddae14c57918ae0c30fb21/gcc%2Fcfglayout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfglayout.c?ref=7b0cab995daec07d1fddae14c57918ae0c30fb21", "patch": "@@ -1228,7 +1228,7 @@ can_copy_bbs_p (basic_block *bbs, unsigned n)\n \n void\n copy_bbs (basic_block *bbs, unsigned n, basic_block *new_bbs,\n-\t  edge *edges, unsigned n_edges, edge *new_edges,\n+\t  edge *edges, unsigned num_edges, edge *new_edges,\n \t  struct loop *base)\n {\n   unsigned i, j;\n@@ -1267,7 +1267,7 @@ copy_bbs (basic_block *bbs, unsigned n, basic_block *new_bbs,\n     }\n \n   /* Redirect edges.  */\n-  for (j = 0; j < n_edges; j++)\n+  for (j = 0; j < num_edges; j++)\n     new_edges[j] = NULL;\n   for (i = 0; i < n; i++)\n     {\n@@ -1277,7 +1277,7 @@ copy_bbs (basic_block *bbs, unsigned n, basic_block *new_bbs,\n \n       FOR_EACH_EDGE (e, ei, new_bb->succs)\n \t{\n-\t  for (j = 0; j < n_edges; j++)\n+\t  for (j = 0; j < num_edges; j++)\n \t    if (edges[j] && edges[j]->src == bb && edges[j]->dest == e->dest)\n \t      new_edges[j] = e;\n "}, {"sha": "553fd981faa80138df7facb3aa8767abfa2cf037", "filename": "gcc/cfgloop.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b0cab995daec07d1fddae14c57918ae0c30fb21/gcc%2Fcfgloop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b0cab995daec07d1fddae14c57918ae0c30fb21/gcc%2Fcfgloop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgloop.c?ref=7b0cab995daec07d1fddae14c57918ae0c30fb21", "patch": "@@ -926,7 +926,7 @@ get_loop_body_in_bfs_order (const struct loop *loop)\n \n /* Gets exit edges of a LOOP, returning their number in N_EDGES.  */\n edge *\n-get_loop_exit_edges (const struct loop *loop, unsigned int *n_edges)\n+get_loop_exit_edges (const struct loop *loop, unsigned int *num_edges)\n {\n   edge *edges, e;\n   unsigned i, n;\n@@ -942,7 +942,7 @@ get_loop_exit_edges (const struct loop *loop, unsigned int *n_edges)\n       if (!flow_bb_inside_loop_p (loop, e->dest))\n \tn++;\n   edges = xmalloc (n * sizeof (edge));\n-  *n_edges = n;\n+  *num_edges = n;\n   n = 0;\n   for (i = 0; i < loop->num_nodes; i++)\n     FOR_EACH_EDGE (e, ei, body[i]->succs)"}, {"sha": "0a369787ebf4aa5b51d7a4934d3336b7b7a295f1", "filename": "gcc/cfgloopmanip.c", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b0cab995daec07d1fddae14c57918ae0c30fb21/gcc%2Fcfgloopmanip.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b0cab995daec07d1fddae14c57918ae0c30fb21/gcc%2Fcfgloopmanip.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgloopmanip.c?ref=7b0cab995daec07d1fddae14c57918ae0c30fb21", "patch": "@@ -252,7 +252,7 @@ fix_irreducible_loops (basic_block from)\n   int stack_top;\n   sbitmap on_stack;\n   edge *edges, e;\n-  unsigned n_edges, i;\n+  unsigned num_edges, i;\n \n   if (!(from->flags & BB_IRREDUCIBLE_LOOP))\n     return;\n@@ -278,16 +278,16 @@ fix_irreducible_loops (basic_block from)\n \n       bb->flags &= ~BB_IRREDUCIBLE_LOOP;\n       if (bb->loop_father->header == bb)\n-\tedges = get_loop_exit_edges (bb->loop_father, &n_edges);\n+\tedges = get_loop_exit_edges (bb->loop_father, &num_edges);\n       else\n \t{\n-\t  n_edges = EDGE_COUNT (bb->succs);\n-\t  edges = xmalloc (n_edges * sizeof (edge));\n+\t  num_edges = EDGE_COUNT (bb->succs);\n+\t  edges = xmalloc (num_edges * sizeof (edge));\n \t  FOR_EACH_EDGE (e, ei, bb->succs)\n \t    edges[ei.index] = e;\n \t}\n \n-      for (i = 0; i < n_edges; i++)\n+      for (i = 0; i < num_edges; i++)\n \t{\n \t  e = edges[i];\n \n@@ -574,7 +574,7 @@ unloop (struct loops *loops, struct loop *loop)\n   unsigned i, n;\n   basic_block latch = loop->latch;\n   edge *edges;\n-  unsigned n_edges;\n+  unsigned num_edges;\n \n   /* This is relatively straightforward.  The dominators are unchanged, as\n      loop header dominates loop latch, so the only thing we have to care of\n@@ -583,7 +583,7 @@ unloop (struct loops *loops, struct loop *loop)\n      its work.  */\n \n   body = get_loop_body (loop);\n-  edges = get_loop_exit_edges (loop, &n_edges);\n+  edges = get_loop_exit_edges (loop, &num_edges);\n   n = loop->num_nodes;\n   for (i = 0; i < n; i++)\n     if (body[i]->loop_father == loop)\n@@ -612,10 +612,10 @@ unloop (struct loops *loops, struct loop *loop)\n      update the irreducible marks inside its body.  While it is certainly\n      possible to do, it is a bit complicated and this situation should be\n      very rare, so we just remark all loops in this case.  */\n-  for (i = 0; i < n_edges; i++)\n+  for (i = 0; i < num_edges; i++)\n     if (edges[i]->flags & EDGE_IRREDUCIBLE_LOOP)\n       break;\n-  if (i != n_edges)\n+  if (i != num_edges)\n     mark_irreducible_loops (loops);\n   free (edges);\n }"}, {"sha": "ab3828d9d020d72614eae568de2ff18103fd9ea1", "filename": "gcc/loop-unroll.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b0cab995daec07d1fddae14c57918ae0c30fb21/gcc%2Floop-unroll.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b0cab995daec07d1fddae14c57918ae0c30fb21/gcc%2Floop-unroll.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop-unroll.c?ref=7b0cab995daec07d1fddae14c57918ae0c30fb21", "patch": "@@ -1640,14 +1640,14 @@ static struct opt_info *\n analyze_insns_in_loop (struct loop *loop)\n {\n   basic_block *body, bb;\n-  unsigned i, n_edges = 0;\n+  unsigned i, num_edges = 0;\n   struct opt_info *opt_info = xcalloc (1, sizeof (struct opt_info));\n   rtx insn;\n   struct iv_to_split *ivts = NULL;\n   struct var_to_expand *ves = NULL;\n   PTR *slot1;\n   PTR *slot2;\n-  edge *edges = get_loop_exit_edges (loop, &n_edges);\n+  edge *edges = get_loop_exit_edges (loop, &num_edges);\n   bool can_apply = false;\n   \n   iv_analysis_loop_init (loop);\n@@ -1667,7 +1667,7 @@ analyze_insns_in_loop (struct loop *loop)\n   else\n     opt_info->loop_preheader = loop_preheader_edge (loop)->src;\n   \n-  if (n_edges == 1\n+  if (num_edges == 1\n       && !(edges[0]->flags & EDGE_COMPLEX))\n     {\n       opt_info->loop_exit = loop_split_edge_with (edges[0], NULL_RTX);"}, {"sha": "d54408cc8c2f8db983243c267408aae89c1e6689", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b0cab995daec07d1fddae14c57918ae0c30fb21/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b0cab995daec07d1fddae14c57918ae0c30fb21/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=7b0cab995daec07d1fddae14c57918ae0c30fb21", "patch": "@@ -2551,7 +2551,7 @@ dump_cfg_stats (FILE *file)\n {\n   static long max_num_merged_labels = 0;\n   unsigned long size, total = 0;\n-  int n_edges;\n+  long num_edges;\n   basic_block bb;\n   const char * const fmt_str   = \"%-30s%-13s%12s\\n\";\n   const char * const fmt_str_1 = \"%-30s%13d%11lu%c\\n\";\n@@ -2572,12 +2572,12 @@ dump_cfg_stats (FILE *file)\n   fprintf (file, fmt_str_1, \"Basic blocks\", n_basic_blocks,\n \t   SCALE (size), LABEL (size));\n \n-  n_edges = 0;\n+  num_edges = 0;\n   FOR_EACH_BB (bb)\n-    n_edges += EDGE_COUNT (bb->succs);\n-  size = n_edges * sizeof (struct edge_def);\n+    num_edges += EDGE_COUNT (bb->succs);\n+  size = num_edges * sizeof (struct edge_def);\n   total += size;\n-  fprintf (file, fmt_str_1, \"Edges\", n_edges, SCALE (size), LABEL (size));\n+  fprintf (file, fmt_str_1, \"Edges\", num_edges, SCALE (size), LABEL (size));\n \n   size = n_basic_blocks * sizeof (struct bb_ann_d);\n   total += size;"}]}