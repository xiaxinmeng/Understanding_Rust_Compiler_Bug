{"sha": "c1b993c0a669dd73e6b4914936699a247e68a48f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzFiOTkzYzBhNjY5ZGQ3M2U2YjQ5MTQ5MzY2OTlhMjQ3ZTY4YTQ4Zg==", "commit": {"author": {"name": "Prachi Godbole", "email": "prachi.godbole@imgtec.com", "date": "2017-03-06T10:32:47Z"}, "committer": {"name": "Prachi Godbole", "email": "prachigodbole@gcc.gnu.org", "date": "2017-03-06T10:32:47Z"}, "message": "mips-msa.md (msa_fmax_a_<msafmt>, [...]): Introduce mode interator for if_then_else.\n\ngcc/\n\t* config/mips/mips-msa.md (msa_fmax_a_<msafmt>, msa_fmin_a_<msafmt>,\n\tmsa_max_a_<msafmt>, msa_min_a_<msafmt>): Introduce mode interator for\n\tif_then_else.\n\t(smin<mode>3, smax<mode>3): Change operand print code from 'B' to 'E'.\n\ngcc/testsuite/\n\t* gcc.target/mips/msa-minmax.c: New tests.\n\nFrom-SVN: r245913", "tree": {"sha": "b8f19bb0b6846d0d567bec9996b59b519e036a90", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b8f19bb0b6846d0d567bec9996b59b519e036a90"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c1b993c0a669dd73e6b4914936699a247e68a48f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1b993c0a669dd73e6b4914936699a247e68a48f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c1b993c0a669dd73e6b4914936699a247e68a48f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1b993c0a669dd73e6b4914936699a247e68a48f/comments", "author": null, "committer": null, "parents": [{"sha": "a50a32aa3cbd139b2fbc56bcd80a82dc7f6ca5e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a50a32aa3cbd139b2fbc56bcd80a82dc7f6ca5e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a50a32aa3cbd139b2fbc56bcd80a82dc7f6ca5e5"}], "stats": {"total": 61, "additions": 55, "deletions": 6}, "files": [{"sha": "5fbe9ef02df707cd2aeb1e252b7cab5470df37ca", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1b993c0a669dd73e6b4914936699a247e68a48f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1b993c0a669dd73e6b4914936699a247e68a48f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c1b993c0a669dd73e6b4914936699a247e68a48f", "patch": "@@ -1,3 +1,10 @@\n+2017-03-06  Prachi Godbole  <prachi.godbole@imgtec.com>\n+\n+\t* config/mips/mips-msa.md (msa_fmax_a_<msafmt>, msa_fmin_a_<msafmt>,\n+\tmsa_max_a_<msafmt>, msa_min_a_<msafmt>): Introduce mode interator for\n+\tif_then_else.\n+\t(smin<mode>3, smax<mode>3): Change operand print code from 'B' to 'E'.\n+\n 2017-03-06  Martin Liska  <mliska@suse.cz>\n \n \tPR sanitize/79783"}, {"sha": "accb8de387ca1ee2e8e5822dbf671a34eed57133", "filename": "gcc/config/mips/mips-msa.md", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1b993c0a669dd73e6b4914936699a247e68a48f/gcc%2Fconfig%2Fmips%2Fmips-msa.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1b993c0a669dd73e6b4914936699a247e68a48f/gcc%2Fconfig%2Fmips%2Fmips-msa.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips-msa.md?ref=c1b993c0a669dd73e6b4914936699a247e68a48f", "patch": "@@ -1688,7 +1688,7 @@\n \n (define_insn \"msa_fmax_a_<msafmt>\"\n   [(set (match_operand:FMSA 0 \"register_operand\" \"=f\")\n-\t(if_then_else\n+\t(if_then_else:FMSA\n \t   (gt (abs:FMSA (match_operand:FMSA 1 \"register_operand\" \"f\"))\n \t       (abs:FMSA (match_operand:FMSA 2 \"register_operand\" \"f\")))\n \t   (match_dup 1)\n@@ -1709,7 +1709,7 @@\n \n (define_insn \"msa_fmin_a_<msafmt>\"\n   [(set (match_operand:FMSA 0 \"register_operand\" \"=f\")\n-\t(if_then_else\n+\t(if_then_else:FMSA\n \t   (lt (abs:FMSA (match_operand:FMSA 1 \"register_operand\" \"f\"))\n \t       (abs:FMSA (match_operand:FMSA 2 \"register_operand\" \"f\")))\n \t   (match_dup 1)\n@@ -2174,7 +2174,7 @@\n \n (define_insn \"msa_max_a_<msafmt>\"\n   [(set (match_operand:IMSA 0 \"register_operand\" \"=f\")\n-\t(if_then_else\n+\t(if_then_else:IMSA\n \t   (gt (abs:IMSA (match_operand:IMSA 1 \"register_operand\" \"f\"))\n \t       (abs:IMSA (match_operand:IMSA 2 \"register_operand\" \"f\")))\n \t   (match_dup 1)\n@@ -2191,7 +2191,7 @@\n   \"ISA_HAS_MSA\"\n   \"@\n    max_s.<msafmt>\\t%w0,%w1,%w2\n-   maxi_s.<msafmt>\\t%w0,%w1,%B2\"\n+   maxi_s.<msafmt>\\t%w0,%w1,%E2\"\n   [(set_attr \"type\" \"simd_int_arith\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n@@ -2208,7 +2208,7 @@\n \n (define_insn \"msa_min_a_<msafmt>\"\n   [(set (match_operand:IMSA 0 \"register_operand\" \"=f\")\n-\t(if_then_else\n+\t(if_then_else:IMSA\n \t   (lt (abs:IMSA (match_operand:IMSA 1 \"register_operand\" \"f\"))\n \t       (abs:IMSA (match_operand:IMSA 2 \"register_operand\" \"f\")))\n \t   (match_dup 1)\n@@ -2225,7 +2225,7 @@\n   \"ISA_HAS_MSA\"\n   \"@\n    min_s.<msafmt>\\t%w0,%w1,%w2\n-   mini_s.<msafmt>\\t%w0,%w1,%B2\"\n+   mini_s.<msafmt>\\t%w0,%w1,%E2\"\n   [(set_attr \"type\" \"simd_int_arith\")\n    (set_attr \"mode\" \"<MODE>\")])\n "}, {"sha": "4850fe5da456f677915c4a0d484e812a11cc67d4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1b993c0a669dd73e6b4914936699a247e68a48f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1b993c0a669dd73e6b4914936699a247e68a48f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c1b993c0a669dd73e6b4914936699a247e68a48f", "patch": "@@ -1,3 +1,7 @@\n+2017-03-06  Prachi Godbole  <prachi.godbole@imgtec.com>\n+\n+\t* gcc.target/mips/msa-minmax.c: New tests.\n+\n 2017-03-06  Martin Liska  <mliska@suse.cz>\n \n \tPR sanitize/79783"}, {"sha": "72cfdacf80bdd418d31be7a7db8ea294c67d9a2d", "filename": "gcc/testsuite/gcc.target/mips/msa-minmax.c", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1b993c0a669dd73e6b4914936699a247e68a48f/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmsa-minmax.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1b993c0a669dd73e6b4914936699a247e68a48f/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmsa-minmax.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmsa-minmax.c?ref=c1b993c0a669dd73e6b4914936699a247e68a48f", "patch": "@@ -0,0 +1,38 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-mno-mips16 -mfp64 -mhard-float -mmsa\" } */\n+\n+typedef int v4i32 __attribute__ ((vector_size(16)));\n+typedef float v4f32 __attribute__ ((vector_size(16)));\n+\n+/* Test MSA signed min/max immediate for correct assembly output.  */\n+\n+void\n+min_s_msa (v4i32 *vx, v4i32 *vy)\n+{\n+  *vy = __builtin_msa_mini_s_w (*vx, -15);\n+}\n+/* { dg-final { scan-assembler \"-15\" } }  */\n+\n+void\n+max_s_msa (v4i32 *vx, v4i32 *vy)\n+{\n+  *vy = __builtin_msa_maxi_s_w (*vx, -15);\n+}\n+/* { dg-final { scan-assembler \"-15\" } }  */\n+\n+/* Test MSA min_a/max_a instructions for forward propagation optimization.  */\n+\n+#define FUNC(NAME, TYPE, RETTYPE) RETTYPE NAME##_a_msa (TYPE *vx, TYPE *vy) \\\n+{ \\\n+  TYPE dest = __builtin_msa_##NAME##_a_w (*vx, *vy); \\\n+  return dest[0]; \\\n+}\n+\n+FUNC(fmin, v4f32, float)\n+/* { dg-final { scan-assembler \"fmin_a.w\" } }  */\n+FUNC(fmax, v4f32, float)\n+/* { dg-final { scan-assembler \"fmax_a.w\" } }  */\n+FUNC(min, v4i32, int)\n+/* { dg-final { scan-assembler \"min_a.w\" } }  */\n+FUNC(max, v4i32, int)\n+/* { dg-final { scan-assembler \"max_a.w\" } }  */"}]}