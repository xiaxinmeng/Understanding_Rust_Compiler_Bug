{"sha": "78e68f88a5c0103a8cc46589968df72fad272d3b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzhlNjhmODhhNWMwMTAzYThjYzQ2NTg5OTY4ZGY3MmZhZDI3MmQzYg==", "commit": {"author": {"name": "Gabriel Dos Reis", "email": "gdr@integrable-solutions.net", "date": "2003-03-30T20:31:51Z"}, "committer": {"name": "Gabriel Dos Reis", "email": "gdr@gcc.gnu.org", "date": "2003-03-30T20:31:51Z"}, "message": "Makefile.in (STRICT_WARN): Don't warn for ISO C constructs.\n\n        * Makefile.in (STRICT_WARN): Don't warn for ISO C constructs.\n        (STRICT2_WARN): Likewise.\n\nFrom-SVN: r65052", "tree": {"sha": "19e1c9b443b12d927bc133a2477f9ad95f47dae1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/19e1c9b443b12d927bc133a2477f9ad95f47dae1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/78e68f88a5c0103a8cc46589968df72fad272d3b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78e68f88a5c0103a8cc46589968df72fad272d3b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78e68f88a5c0103a8cc46589968df72fad272d3b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78e68f88a5c0103a8cc46589968df72fad272d3b/comments", "author": {"login": "cxx-undef", "id": 5528103, "node_id": "MDQ6VXNlcjU1MjgxMDM=", "avatar_url": "https://avatars.githubusercontent.com/u/5528103?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cxx-undef", "html_url": "https://github.com/cxx-undef", "followers_url": "https://api.github.com/users/cxx-undef/followers", "following_url": "https://api.github.com/users/cxx-undef/following{/other_user}", "gists_url": "https://api.github.com/users/cxx-undef/gists{/gist_id}", "starred_url": "https://api.github.com/users/cxx-undef/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cxx-undef/subscriptions", "organizations_url": "https://api.github.com/users/cxx-undef/orgs", "repos_url": "https://api.github.com/users/cxx-undef/repos", "events_url": "https://api.github.com/users/cxx-undef/events{/privacy}", "received_events_url": "https://api.github.com/users/cxx-undef/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7c71dc2b0d6268b58a06bf6c09d5420b13e70992", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c71dc2b0d6268b58a06bf6c09d5420b13e70992", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c71dc2b0d6268b58a06bf6c09d5420b13e70992"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "4599a07564499326a1ac150e2ca4cd3adb47949a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78e68f88a5c0103a8cc46589968df72fad272d3b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78e68f88a5c0103a8cc46589968df72fad272d3b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=78e68f88a5c0103a8cc46589968df72fad272d3b", "patch": "@@ -1,3 +1,8 @@\n+2003-03-30  Gabriel Dos Reis  <gdr@integrable-solutions.net>\n+\n+        * Makefile.in (STRICT_WARN): Don't warn for ISO C constructs.\n+        (STRICT2_WARN): Likewise.\n+\t\n 2003-03-30  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \tPR other/6955"}, {"sha": "b72040edd6f3f32460c0dc022a58487e08d95380", "filename": "gcc/Makefile.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78e68f88a5c0103a8cc46589968df72fad272d3b/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78e68f88a5c0103a8cc46589968df72fad272d3b/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=78e68f88a5c0103a8cc46589968df72fad272d3b", "patch": "@@ -141,8 +141,8 @@ coverageexts = .{da,bbg}\n # with other compilers.  This is partially controlled by configure in\n # stage1, as not all versions of gcc understand -Wno-long-long.\n LOOSE_WARN = -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes\n-STRICT_WARN = -Wtraditional @strict1_warn@\n-STRICT2_WARN = -Wtraditional -pedantic -Wno-long-long @WERROR@\n+STRICT_WARN = @strict1_warn@\n+STRICT2_WARN = -pedantic -Wno-long-long @WERROR@\n \n # This is set by --enable-checking.  The idea is to catch forgotten\n # \"extern\" tags in header files."}]}