{"sha": "f5ef2a143cc5ab8e8d8e25e2e74228d160bacb55", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjVlZjJhMTQzY2M1YWI4ZThkOGUyNWUyZTc0MjI4ZDE2MGJhY2I1NQ==", "commit": {"author": {"name": "Will Schmidt", "email": "will_schmidt@vnet.ibm.com", "date": "2018-01-26T15:30:41Z"}, "committer": {"name": "Will Schmidt", "email": "willschm@gcc.gnu.org", "date": "2018-01-26T15:30:41Z"}, "message": "fold-vec-cmp-int.c: Delete.\n\n[testsuite]\n\n2018-01-24  Will Schmidt  <will_schmidt@vnet.ibm.com>\n\n        * gcc.target/powerpc/fold-vec-cmp-int.c: Delete.\n        * gcc.target/powerpc/fold-vec-cmp-int.h: New.\n        * gcc.target/powerpc/fold-vec-cmp-int.p7.c: New.\n        * gcc.target/powerpc/fold-vec-cmp-int.p8.c: New.\n        * gcc.target/powerpc/fold-vec-cmp-int.p9.c: New.\n        * gcc.target/powerpc/fold-vec-cmp-short.c: Delete.\n        * gcc.target/powerpc/fold-vec-cmp-short.h: New.\n        * gcc.target/powerpc/fold-vec-cmp-short.p8.c: New.\n        * gcc.target/powerpc/fold-vec-cmp-short.p9.c: New.\n        * gcc.target/powerpc/fold-vec-cmp-char.c: Delete.\n        * gcc.target/powerpc/fold-vec-cmp-char.h: New.\n        * gcc.target/powerpc/fold-vec-cmp-char.p8.c: New.\n        * gcc.target/powerpc/fold-vec-cmp-char.p9.c: New.\n\nFrom-SVN: r257095", "tree": {"sha": "b3ec8c0d8cb0a8ad52ae872db1514fb453a35092", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b3ec8c0d8cb0a8ad52ae872db1514fb453a35092"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f5ef2a143cc5ab8e8d8e25e2e74228d160bacb55", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5ef2a143cc5ab8e8d8e25e2e74228d160bacb55", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f5ef2a143cc5ab8e8d8e25e2e74228d160bacb55", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5ef2a143cc5ab8e8d8e25e2e74228d160bacb55/comments", "author": {"login": "willschm", "id": 44359, "node_id": "MDQ6VXNlcjQ0MzU5", "avatar_url": "https://avatars.githubusercontent.com/u/44359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/willschm", "html_url": "https://github.com/willschm", "followers_url": "https://api.github.com/users/willschm/followers", "following_url": "https://api.github.com/users/willschm/following{/other_user}", "gists_url": "https://api.github.com/users/willschm/gists{/gist_id}", "starred_url": "https://api.github.com/users/willschm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/willschm/subscriptions", "organizations_url": "https://api.github.com/users/willschm/orgs", "repos_url": "https://api.github.com/users/willschm/repos", "events_url": "https://api.github.com/users/willschm/events{/privacy}", "received_events_url": "https://api.github.com/users/willschm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "98abdf3a03768a9e6fbbabd156d3d994fe9315e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98abdf3a03768a9e6fbbabd156d3d994fe9315e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98abdf3a03768a9e6fbbabd156d3d994fe9315e8"}], "stats": {"total": 145, "additions": 124, "deletions": 21}, "files": [{"sha": "fa0a167e2fd741a7cad38bc8a64d803898de915d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5ef2a143cc5ab8e8d8e25e2e74228d160bacb55/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5ef2a143cc5ab8e8d8e25e2e74228d160bacb55/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f5ef2a143cc5ab8e8d8e25e2e74228d160bacb55", "patch": "@@ -1,3 +1,19 @@\n+2018-01-26  Will Schmidt  <will_schmidt@vnet.ibm.com>\n+\n+\t* gcc.target/powerpc/fold-vec-cmp-int.c: Delete.\n+\t* gcc.target/powerpc/fold-vec-cmp-int.h: New.\n+\t* gcc.target/powerpc/fold-vec-cmp-int.p7.c: New.\n+\t* gcc.target/powerpc/fold-vec-cmp-int.p8.c: New.\n+\t* gcc.target/powerpc/fold-vec-cmp-int.p9.c: New.\n+\t* gcc.target/powerpc/fold-vec-cmp-short.c: Delete.\n+\t* gcc.target/powerpc/fold-vec-cmp-short.h: New.\n+\t* gcc.target/powerpc/fold-vec-cmp-short.p8.c: New.\n+\t* gcc.target/powerpc/fold-vec-cmp-short.p9.c: New.\n+\t* gcc.target/powerpc/fold-vec-cmp-char.c: Delete.\n+\t* gcc.target/powerpc/fold-vec-cmp-char.h: New.\n+\t* gcc.target/powerpc/fold-vec-cmp-char.p8.c: New.\n+\t* gcc.target/powerpc/fold-vec-cmp-char.p9.c: New.\n+\n 2018-01-26  Martin Liska  <mliska@suse.cz>\n \n \t* lib/target-supports.exp: Return a value, otherwise -Wreturn-type"}, {"sha": "53161213ca9a0c1249b2d61bc3237e6798adb51d", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-cmp-char.h", "status": "renamed", "additions": 2, "deletions": 11, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5ef2a143cc5ab8e8d8e25e2e74228d160bacb55/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-cmp-char.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5ef2a143cc5ab8e8d8e25e2e74228d160bacb55/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-cmp-char.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-cmp-char.h?ref=f5ef2a143cc5ab8e8d8e25e2e74228d160bacb55", "patch": "@@ -1,9 +1,5 @@\n-/* Verify that overloaded built-ins for vec_cmp{eq,ge,gt,le,lt,ne} with\n-   char inputs produce the right code.  */\n-\n-/* { dg-do compile } */\n-/* { dg-require-effective-target powerpc_p8vector_ok } */\n-/* { dg-options \"-mpower8-vector -O2\" } */\n+/* Header file for fold-vec-cmp-char*.c tests.  Used to verify codegen results\n+   for vec_cmp{eq,ge,gt,le,lt,ne} builtins.  */\n \n #include <altivec.h>\n \n@@ -79,8 +75,3 @@ test6_ne (vector unsigned char x, vector unsigned char y)\n   return vec_cmpne (x, y);\n }\n \n-/* { dg-final { scan-assembler-times \"vcmpequb\" 4 } } */\n-/* { dg-final { scan-assembler-times \"vcmpgtsb\" 4 } } */\n-/* { dg-final { scan-assembler-times \"vcmpgtub\" 4 } } */\n-/* { dg-final { scan-assembler-times \"xxlnor\" 6 } } */\n-", "previous_filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-cmp-char.c"}, {"sha": "c14a98e735aac4d80918f32990e4cc52dc368975", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-cmp-char.p8.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5ef2a143cc5ab8e8d8e25e2e74228d160bacb55/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-cmp-char.p8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5ef2a143cc5ab8e8d8e25e2e74228d160bacb55/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-cmp-char.p8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-cmp-char.p8.c?ref=f5ef2a143cc5ab8e8d8e25e2e74228d160bacb55", "patch": "@@ -0,0 +1,15 @@\n+/* Verify that overloaded built-ins for vec_cmp{eq,ge,gt,le,lt,ne} with\n+   char inputs produce the right code when -mcpu=power8 is specified.  */\n+\n+/* { dg-do compile } */\n+/* { dg-require-effective-target powerpc_p8vector_ok } */\n+/* { dg-options \"-mpower8-vector -mcpu=power8 -O2\" } */\n+/* { dg-skip-if \"do not override -mcpu\" { powerpc*-*-* } { \"-mcpu=*\" } { \"-mcpu=power8\" } } */\n+\n+#include \"fold-vec-cmp-char.h\"\n+\n+/* { dg-final { scan-assembler-times \"vcmpequb\" 4 } } */\n+/* { dg-final { scan-assembler-times \"vcmpgtsb\" 4 } } */\n+/* { dg-final { scan-assembler-times \"vcmpgtub\" 4 } } */\n+/* { dg-final { scan-assembler-times \"xxlnor\" 6 } } */\n+"}, {"sha": "e3ff89c483e25d52fe87c120b96e1bad1949b5b9", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-cmp-char.p9.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5ef2a143cc5ab8e8d8e25e2e74228d160bacb55/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-cmp-char.p9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5ef2a143cc5ab8e8d8e25e2e74228d160bacb55/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-cmp-char.p9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-cmp-char.p9.c?ref=f5ef2a143cc5ab8e8d8e25e2e74228d160bacb55", "patch": "@@ -0,0 +1,16 @@\n+/* Verify that overloaded built-ins for vec_cmp{eq,ge,gt,le,lt,ne} with\n+   char inputs produce the right code when -mcpu=power9 is specified.  */\n+\n+/* { dg-do compile } */\n+/* { dg-require-effective-target powerpc_p8vector_ok } */\n+/* { dg-options \"-mpower8-vector -mcpu=power9  -O2\" } */\n+/* { dg-skip-if \"do not override -mcpu\" { powerpc*-*-* } { \"-mcpu=*\" } { \"-mcpu=power9\" } } */\n+\n+#include \"fold-vec-cmp-char.h\"\n+\n+/* { dg-final { scan-assembler-times \"vcmpneb\" 2 } } */\n+/* { dg-final { scan-assembler-times \"vcmpequb\" 2 } } */\n+/* { dg-final { scan-assembler-times \"vcmpgtsb\" 4 } } */\n+/* { dg-final { scan-assembler-times \"vcmpgtub\" 4 } } */\n+/* { dg-final { scan-assembler-times \"xxlnor\" 4 } } */\n+"}, {"sha": "0da58e0e0a9cd2aa4be0e0f577464087185647de", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-cmp-int.h", "status": "renamed", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5ef2a143cc5ab8e8d8e25e2e74228d160bacb55/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-cmp-int.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5ef2a143cc5ab8e8d8e25e2e74228d160bacb55/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-cmp-int.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-cmp-int.h?ref=f5ef2a143cc5ab8e8d8e25e2e74228d160bacb55", "patch": "@@ -79,8 +79,3 @@ test6_ne (vector unsigned int x, vector unsigned int y)\n   return vec_cmpne (x, y);\n }\n \n-/* { dg-final { scan-assembler-times \"vcmpequw\" 4 } } */\n-/* { dg-final { scan-assembler-times \"vcmpgtsw\" 4 } } */\n-/* { dg-final { scan-assembler-times \"vcmpgtuw\" 4 } } */\n-/* { dg-final { scan-assembler-times \"xxlnor\" 6 } } */\n-", "previous_filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-cmp-int.c"}, {"sha": "87038ebd606c4bb1cc414a2a163262393397449a", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-cmp-int.p7.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5ef2a143cc5ab8e8d8e25e2e74228d160bacb55/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-cmp-int.p7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5ef2a143cc5ab8e8d8e25e2e74228d160bacb55/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-cmp-int.p7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-cmp-int.p7.c?ref=f5ef2a143cc5ab8e8d8e25e2e74228d160bacb55", "patch": "@@ -0,0 +1,14 @@\n+/* Verify that overloaded built-ins for vec_cmp with int\n+   inputs produce the right code.  */\n+\n+/* { dg-do compile } */\n+/* { dg-require-effective-target powerpc_vsx_ok } */\n+/* { dg-options \"-mcpu=power7 -O2\" } */\n+/* { dg-skip-if \"do not override -mcpu\" { powerpc*-*-* } { \"-mcpu=*\" } { \"-mcpu=power7\" } } */\n+\n+#include \"fold-vec-cmp-int.h\"\n+\n+/* { dg-final { scan-assembler-times \"vcmpequw\" 4 } } */\n+/* { dg-final { scan-assembler-times \"vcmpgtsw\" 4 } } */\n+/* { dg-final { scan-assembler-times \"vcmpgtuw\" 4 } } */\n+/* { dg-final { scan-assembler-times \"xxlnor\" 6 } } */"}, {"sha": "023ea7345d403fdc915e7be1e2ca04eecf22874c", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-cmp-int.p8.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5ef2a143cc5ab8e8d8e25e2e74228d160bacb55/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-cmp-int.p8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5ef2a143cc5ab8e8d8e25e2e74228d160bacb55/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-cmp-int.p8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-cmp-int.p8.c?ref=f5ef2a143cc5ab8e8d8e25e2e74228d160bacb55", "patch": "@@ -0,0 +1,14 @@\n+/* Verify that overloaded built-ins for vec_cmp with int\n+   inputs produce the right code.  */\n+\n+/* { dg-do compile } */\n+/* { dg-require-effective-target powerpc_p8vector_ok } */\n+/* { dg-options \"-mpower8-vector -mcpu=power8 -O2\" } */\n+/* { dg-skip-if \"do not override -mcpu\" { powerpc*-*-* } { \"-mcpu=*\" } { \"-mcpu=power8\" } } */\n+\n+#include \"fold-vec-cmp-int.h\"\n+\n+/* { dg-final { scan-assembler-times \"vcmpequw\" 4 } } */\n+/* { dg-final { scan-assembler-times \"vcmpgtsw\" 4 } } */\n+/* { dg-final { scan-assembler-times \"vcmpgtuw\" 4 } } */\n+/* { dg-final { scan-assembler-times \"xxlnor\" 6 } } */"}, {"sha": "ba6d788afca79f0563c2ab455d85a3956b8b0f1c", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-cmp-int.p9.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5ef2a143cc5ab8e8d8e25e2e74228d160bacb55/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-cmp-int.p9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5ef2a143cc5ab8e8d8e25e2e74228d160bacb55/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-cmp-int.p9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-cmp-int.p9.c?ref=f5ef2a143cc5ab8e8d8e25e2e74228d160bacb55", "patch": "@@ -0,0 +1,15 @@\n+/* Verify that overloaded built-ins for vec_cmp with int\n+   inputs produce the right code.  */\n+\n+/* { dg-do compile } */\n+/* { dg-require-effective-target powerpc_p9vector_ok } */\n+/* { dg-options \"-mpower9-vector -O2\" } */\n+/* { dg-skip-if \"do not override -mcpu\" { powerpc*-*-* } { \"-mcpu=*\" } { \"-mcpu=power9\" } } */\n+\n+#include \"fold-vec-cmp-int.h\"\n+\n+/* { dg-final { scan-assembler-times \"vcmpequw\" 2 } } */\n+/* { dg-final { scan-assembler-times \"vcmpnew\" 2 } } */\n+/* { dg-final { scan-assembler-times \"vcmpgtsw\" 4 } } */\n+/* { dg-final { scan-assembler-times \"vcmpgtuw\" 4 } } */\n+/* { dg-final { scan-assembler-times \"xxlnor\" 4 } } */"}, {"sha": "5729db4aaee869c316af1a56085e048606f4013d", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-cmp-short.h", "status": "renamed", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5ef2a143cc5ab8e8d8e25e2e74228d160bacb55/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-cmp-short.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5ef2a143cc5ab8e8d8e25e2e74228d160bacb55/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-cmp-short.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-cmp-short.h?ref=f5ef2a143cc5ab8e8d8e25e2e74228d160bacb55", "patch": "@@ -80,8 +80,3 @@ test6_ne (vector unsigned short x, vector unsigned short y)\n   return vec_cmpne (x, y);\n }\n \n-/* { dg-final { scan-assembler-times \"vcmpequh\" 4 } } */\n-/* { dg-final { scan-assembler-times \"vcmpgtsh\" 4 } } */\n-/* { dg-final { scan-assembler-times \"vcmpgtuh\" 4 } } */\n-/* { dg-final { scan-assembler-times \"xxlnor\" 6 } } */\n-", "previous_filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-cmp-short.c"}, {"sha": "d7dd06d11e59575f72f988bf9b99db2de264a4a0", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-cmp-short.p8.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5ef2a143cc5ab8e8d8e25e2e74228d160bacb55/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-cmp-short.p8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5ef2a143cc5ab8e8d8e25e2e74228d160bacb55/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-cmp-short.p8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-cmp-short.p8.c?ref=f5ef2a143cc5ab8e8d8e25e2e74228d160bacb55", "patch": "@@ -0,0 +1,16 @@\n+/* Verify that overloaded built-ins for vec_cmp with short\n+   inputs produce the right code.  */\n+\n+/* { dg-do compile } */\n+/* { dg-require-effective-target powerpc_p8vector_ok } */\n+/* { dg-options \"-mpower8-vector -mcpu=power8 -O2\" } */\n+/* { dg-skip-if \"do not override -mcpu\" { powerpc*-*-* } { \"-mcpu=*\" } { \"-mcpu=power8\" } } */\n+\n+#include \"fold-vec-cmp-short.h\"\n+\n+/* { dg-final { scan-assembler-times \"vcmpequh\" 4 } } */\n+/* { dg-final { scan-assembler-times \"vcmpneh\" 0 } } */\n+/* { dg-final { scan-assembler-times \"vcmpgtsh\" 4 } } */\n+/* { dg-final { scan-assembler-times \"vcmpgtuh\" 4 } } */\n+/* { dg-final { scan-assembler-times \"xxlnor\" 6 } } */\n+"}, {"sha": "1fc685893130f9214cb04eadeb769f6847d4f089", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-cmp-short.p9.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5ef2a143cc5ab8e8d8e25e2e74228d160bacb55/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-cmp-short.p9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5ef2a143cc5ab8e8d8e25e2e74228d160bacb55/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-cmp-short.p9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-cmp-short.p9.c?ref=f5ef2a143cc5ab8e8d8e25e2e74228d160bacb55", "patch": "@@ -0,0 +1,16 @@\n+/* Verify that overloaded built-ins for vec_cmp with short\n+   inputs produce the right code.  */\n+\n+/* { dg-do compile } */\n+/* { dg-require-effective-target powerpc_p9vector_ok } */\n+/* { dg-options \"-mpower9-vector -mcpu=power9 -O2\" } */\n+/* { dg-skip-if \"do not override -mcpu\" { powerpc*-*-* } { \"-mcpu=*\" } { \"-mcpu=power9\" } } */\n+\n+#include \"fold-vec-cmp-short.h\"\n+\n+/* { dg-final { scan-assembler-times \"vcmpequh\" 2 } } */\n+/* { dg-final { scan-assembler-times \"vcmpneh\"  2 } } */\n+/* { dg-final { scan-assembler-times \"vcmpgtsh\" 4 } } */\n+/* { dg-final { scan-assembler-times \"vcmpgtuh\" 4 } } */\n+/* { dg-final { scan-assembler-times \"xxlnor\" 4 } } */\n+"}]}