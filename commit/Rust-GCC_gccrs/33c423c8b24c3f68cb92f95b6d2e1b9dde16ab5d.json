{"sha": "33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzNjNDIzYzhiMjRjM2Y2OGNiOTJmOTViNmQyZTFiOWRkZTE2YWI1ZA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2007-08-14T08:50:51Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2007-08-14T08:50:51Z"}, "message": "[multiple changes]\n\n2007-08-14  Geert Bosch  <bosch@adacore.com>\n\n\t* i-forbla.ads, i-forbla.adb, a-ngcoar.adb, a-ngcoar.ads, i-forlap.ads,\n\ts-gearop.adb, s-gecobl.adb, s-gecobl.ads, s-gerela.adb, s-gerela.ads:\n\tAdd required linker pragmas for automatically linking with the gnalasup\n\tlinear algebra support library, and the systems math library.\n\tRename cdot to cdotu and zdot to zdotu.\n\tUpdate header comment to describe purpose of package.\n\n2007-08-14  Thomas Quinot  <quinot@adacore.com>\n\n\t* exp_ch7.adb (Find_Final_List): For an anonymous access type that has\n\tan explicitly specified Associated_Final_Chain, use that list.\n\t(Expand_N_Package_Body): Build dispatch tables of library level tagged\n\ttypes.\n\t(Expand_N_Package_Declaration): Build dispatch tables of library level\n\ttagged types. Minor code cleanup.\n\n2007-08-14  Vincent Celier  <celier@adacore.com>\n\n\t* gnatchop.adb (Terminate_Program): Remove exception and use\n\tTypes.Terminate_Program instead.\n\n\t* osint.ads, osint.adb (Current_Exit_Status): New global variable\n\t(Find_Program_Name): Added protection against empty name.\n\t(OS_Exit_Through_Exception): New procedure\n\n\t* s-os_lib.ads, s-os_lib.adb (OS_Exit): New procedure body\n\t(OS_Exit_Default): New procedure that contains the previous\n\timplementation of procedure OS_Exit.\n\t(Final_Value): Remove obsolete Interix stuff.\n\n2007-08-14  Thomas Quinot  <quinot@adacore.com>\n\n\t* g-socket.ads: Reorganize example code so that it also works on\n\tWindows XP.\n\n2007-08-14  Tristan Gingold  <gingold@adacore.com>\n\n\t* g-trasym.ads: AIX now supports symbolic backtraces.\n\n2007-08-14  Ed Schonberg  <schonberg@adacore.com>\n\n\t* lib-load.adb (From_Limited_With_Chain): Always scan the stack of\n\tunits being loaded to detect circularities. A circularity may be\n\tpresent even if the current chain of pending units to load starts from\n\ta limited_with_clause.\n\n\t* lib-load.ads: Change profile of Load_Unit to use a with_clause\n\trather than a boolean flag, in order to detect circularities in\n\twith_clauses.\n\n\t* par-load.adb: Use current with_clause in calls to Load_Unit, rather\n\tthan propagating the From_Limited_With flag, in order to handle\n\tproperly circularities involving with_clauses.\n\n2007-08-14  Nicolas Setton  <setton@adacore.com>\n\n\t* link.c (FreeBSD): Add \"const\" keyword where needed, to eliminate\n\twarnings.\n\n2007-08-14  Arnaud Charlet  <charlet@adacore.com>\n\n\t* Makefile.in: GNATRTL_LINEARALGEBRA_OBJS: New variable holding objects\n\tto build for libgnala.\n\tlibgnat: Add rules to build libgnala.a\n\t(LIBGNAT_TARGET_PAIRS for VxWorks): Remove s-osinte-vxworks.adb from\n\ttarget pairs of the VxWorks 6 kernel runtime, use it only for VxWorks 5.\n\tAdd s-osinte-vxworks-kernel.adb to the target pairs of the\n\tkernel run-time lib for VxWorks 6, which would provide a different\n\timplementation for Task_Cont and Task_Stop than the VxWorks 5 version.\n\tx86-solaris section (EH_MECHANISM): Set to -gcc, as this port is now\n\trunning ZCX by default.\n\tAdd g-sttsne-locking to LynxOS version.\n\tRemove g-sttsne-vxworks.ads; use g-sttsne-locking.ads instead.\n\tOn x86/darwin, use a-numaux-x86.ad? and system-darwin-x86.ads.\n\n\t* system-darwin-x86.ads: New file.\n\n\t* Make-lang.in: Delete files before copying onto them, so if they are\n\tread-only, the copy won't fail.\n\tUpdate dependencies\n\n2007-08-14  Pascal Obry  <obry@adacore.com>\n\n\t* mdll-fil.adb, * mdll.adb: Implement a more consistent libraries\n\tnaming scheme.\n\n2007-08-14  Vincent Celier  <celier@adacore.com>\n\n\t* mlib-utl.adb (Gcc_Name): Change from constant String to String_Access\n\t(Gcc): Initialize Gcc_Name at the first call\n\n2007-08-14  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch7.adb (Analyze_Package_Specification): Do not install private\n\twith_clauses of the enclosing unit when analyzing the package\n\tspecification of a nested instance.\n\n2007-08-14  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* sinfo.ads, sinfo.adb (Is_Coextension, Set_Is_Coextension): Removed.\n\t(Is_Dynamic_Coextension, Set_Is_Dynamic_Coextension): New routines.\n\tRemove flag Is_Coextension. Add flag Is_Dynamic_Coextension. Update the\n\tlayout of N_Allocator.\n\n2007-08-14  Thomas Quinot  <quinot@adacore.com>\n\n\t* rtsfind.adb (Check_RPC): Add PCS version check.\n\n\t* gnatvsn.ads, gnatvsn.adb: Add PCS version.\n\t(Gnat_Free_Software): New function.\n\n\t* sem_dist.ads, sem_dist.adb (Get_PCS_Version): New subprogram. Returns\n\tthe PCS_Version value from s-parint, used to check that it is consistent\n\twith what exp_dist expects.\n\n\t* s-parint.ads (PCS_Version): New entity for checking consistency\n\tbetween exp_dist and PCS.\n\n\t* gen-soccon.c: (SO_REUSEPORT): New constant.\n\n2007-08-14  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* a-calfor.adb (Image (Duration; Boolean)): Change type of local\n\tvariable Sub_Second to Duration in order to accomodate a larger range\n\tof arithmetic operations.\n\n2007-08-14  Bob Duff  <duff@adacore.com>\n\n\t* g-sttsne-locking.ads: Move comments from spec to body.\n\t* g-sttsne-locking.adb: Move comments from spec to body.\n\t* g-sttsne-vxworks.ads: Removed.\n\t* g-sttsne-vxworks.adb: Removed.\n\nFrom-SVN: r127467", "tree": {"sha": "bc637fac407ff7e642e0541a6da74fc5d842ee43", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bc637fac407ff7e642e0541a6da74fc5d842ee43"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d/comments", "author": null, "committer": null, "parents": [{"sha": "6d64bc378c6d5f95f5f76ea3e42e8c009f4b9b4d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d64bc378c6d5f95f5f76ea3e42e8c009f4b9b4d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d64bc378c6d5f95f5f76ea3e42e8c009f4b9b4d"}], "stats": {"total": 5930, "additions": 3278, "deletions": 2652}, "files": [{"sha": "4cde6f00caa919392dc38c1eaa98d997e765c06c", "filename": "gcc/ada/Make-lang.in", "status": "modified", "additions": 2500, "deletions": 2204, "changes": 4704, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d/gcc%2Fada%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d/gcc%2Fada%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMake-lang.in?ref=33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d"}, {"sha": "b228b377a137d06a0a74a1751b29f542b2415034", "filename": "gcc/ada/Makefile.in", "status": "modified", "additions": 60, "deletions": 30, "changes": 90, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d/gcc%2Fada%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d/gcc%2Fada%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMakefile.in?ref=33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d", "patch": "@@ -411,7 +411,7 @@ ifeq ($(strip $(filter-out m68k% wrs vx%,$(targ))),)\n   g-socthi.adb<g-socthi-vxworks.adb \\\n   g-stsifd.adb<g-stsifd-sockets.adb \\\n   g-sttsne.adb<g-sttsne-vxworks.adb \\\n-  g-sttsne.ads<g-sttsne-vxworks.ads \\\n+  g-sttsne.ads<g-sttsne-locking.ads \\\n   system.ads<system-vxworks-m68k.ads\n \n   TOOLS_TARGET_PAIRS=mlib-tgt-specific.adb<mlib-tgt-vxworks.adb\n@@ -448,7 +448,7 @@ ifeq ($(strip $(filter-out powerpc% wrs vxworks,$(targ))),)\n   g-socthi.adb<g-socthi-vxworks.adb \\\n   g-stsifd.adb<g-stsifd-sockets.adb \\\n   g-sttsne.adb<g-sttsne-vxworks.adb \\\n-  g-sttsne.ads<g-sttsne-vxworks.ads\n+  g-sttsne.ads<g-sttsne-locking.ads\n \n   TOOLS_TARGET_PAIRS=mlib-tgt-specific.adb<mlib-tgt-vxworks.adb\n \n@@ -472,16 +472,17 @@ ifeq ($(strip $(filter-out powerpc% wrs vxworks,$(targ))),)\n   else\n     LIBGNAT_TARGET_PAIRS += \\\n     s-interr.adb<s-interr-vxworks.adb \\\n-    s-osinte.adb<s-osinte-vxworks.adb \\\n     s-tpopsp.adb<s-tpopsp-vxworks.adb \\\n     system.ads<system-vxworks-ppc.ads\n \n     ifeq ($(strip $(filter-out kernel,$(THREAD_KIND))),)\n       LIBGNAT_TARGET_PAIRS += \\\n-      s-osinte.ads<s-osinte-vxworks6.ads\n+      s-osinte.ads<s-osinte-vxworks6.ads \\\n+      s-osinte.adb<s-osinte-vxworks-kernel.adb\n     else\n       LIBGNAT_TARGET_PAIRS += \\\n-      s-osinte.ads<s-osinte-vxworks.ads\n+      s-osinte.ads<s-osinte-vxworks.ads \\\n+      s-osinte.adb<s-osinte-vxworks.adb\n     endif\n \n     EXTRA_GNATRTL_NONTASKING_OBJS=i-vxwork.o i-vxwoio.o s-vxwexc.o\n@@ -517,7 +518,7 @@ ifeq ($(strip $(filter-out powerpc% wrs vxworksae,$(targ))),)\n   g-socthi.adb<g-socthi-vxworks.adb \\\n   g-stsifd.adb<g-stsifd-sockets.adb \\\n   g-sttsne.adb<g-sttsne-vxworks.adb \\\n-  g-sttsne.ads<g-sttsne-vxworks.ads \\\n+  g-sttsne.ads<g-sttsne-locking.ads \\\n   system.ads<system-vxworks-ppc-vthread.ads\n \n   TOOLS_TARGET_PAIRS=mlib-tgt-specific.adb<mlib-tgt-vxworks.adb\n@@ -565,7 +566,7 @@ ifeq ($(strip $(filter-out sparc% wrs vx%,$(targ))),)\n   g-socthi.adb<g-socthi-vxworks.adb \\\n   g-stsifd.adb<g-stsifd-sockets.adb \\\n   g-sttsne.adb<g-sttsne-vxworks.adb \\\n-  g-sttsne.ads<g-sttsne-vxworks.ads \\\n+  g-sttsne.ads<g-sttsne-locking.ads \\\n   system.ads<system-vxworks-sparcv9.ads   \\\n \n   TOOLS_TARGET_PAIRS=mlib-tgt-specific.adb<mlib-tgt-vxworks.adb\n@@ -596,7 +597,7 @@ ifeq ($(strip $(filter-out %86 wrs vxworks,$(targ))),)\n   g-socthi.adb<g-socthi-vxworks.adb \\\n   g-stsifd.adb<g-stsifd-sockets.adb \\\n   g-sttsne.adb<g-sttsne-vxworks.adb \\\n-  g-sttsne.ads<g-sttsne-vxworks.ads\n+  g-sttsne.ads<g-sttsne-locking.ads\n \n   TOOLS_TARGET_PAIRS=mlib-tgt-specific.adb<mlib-tgt-vxworks.adb\n \n@@ -620,16 +621,17 @@ ifeq ($(strip $(filter-out %86 wrs vxworks,$(targ))),)\n   else\n     LIBGNAT_TARGET_PAIRS += \\\n     s-interr.adb<s-interr-vxworks.adb \\\n-    s-osinte.adb<s-osinte-vxworks.adb \\\n     s-tpopsp.adb<s-tpopsp-vxworks.adb \\\n     system.ads<system-vxworks-x86.ads\n \n     ifeq ($(strip $(filter-out kernel,$(THREAD_KIND))),)\n       LIBGNAT_TARGET_PAIRS += \\\n-      s-osinte.ads<s-osinte-vxworks6.ads\n+      s-osinte.ads<s-osinte-vxworks6.ads \\\n+      s-osinte.adb<s-osinte-vxworks-kernel.adb\n     else\n       LIBGNAT_TARGET_PAIRS += \\\n-      s-osinte.ads<s-osinte-vxworks.ads\n+      s-osinte.ads<s-osinte-vxworks.ads \\\n+      s-osinte.adb<s-osinte-vxworks.adb\n     endif\n \n     EXTRA_GNATRTL_NONTASKING_OBJS=i-vxwork.o i-vxwoio.o s-vxwexc.o\n@@ -661,7 +663,7 @@ ifeq ($(strip $(filter-out arm% coff wrs vx%,$(targ))),)\n   g-socthi.adb<g-socthi-vxworks.adb \\\n   g-stsifd.adb<g-stsifd-sockets.adb \\\n   g-sttsne.adb<g-sttsne-vxworks.adb \\\n-  g-sttsne.ads<g-sttsne-vxworks.ads \\\n+  g-sttsne.ads<g-sttsne-locking.ads \\\n   system.ads<system-vxworks-arm.ads\n \n   TOOLS_TARGET_PAIRS=mlib-tgt-specific.adb<mlib-tgt-vxworks.adb\n@@ -693,7 +695,7 @@ ifeq ($(strip $(filter-out mips% wrs vx%,$(targ))),)\n   g-socthi.adb<g-socthi-vxworks.adb \\\n   g-stsifd.adb<g-stsifd-sockets.adb \\\n   g-sttsne.adb<g-sttsne-vxworks.adb \\\n-  g-sttsne.ads<g-sttsne-vxworks.ads \\\n+  g-sttsne.ads<g-sttsne-locking.ads \\\n   system.ads<system-vxworks-mips.ads\n \n   TOOLS_TARGET_PAIRS=mlib-tgt-specific.adb<mlib-tgt-vxworks.adb\n@@ -797,6 +799,7 @@ ifeq ($(strip $(filter-out %86 solaris2%,$(arch) $(osys))),)\n \n   TOOLS_TARGET_PAIRS=mlib-tgt-specific.adb<mlib-tgt-solaris.adb\n \n+  EH_MECHANISM=-gcc\n   THREADSLIB = -lposix4 -lthread\n   MISCLIB = -lposix4 -lnsl -lsocket\n   SO_OPTS = -Wl,-h,\n@@ -1075,6 +1078,8 @@ ifeq ($(strip $(filter-out lynxos,$(osys))),)\n     a-intnam.ads<a-intnam-lynxos.ads \\\n     g-bytswa.adb<g-bytswa-x86.adb \\\n     g-soccon.ads<g-soccon-lynxos.ads \\\n+    g-sttsne.adb<g-sttsne-locking.adb \\\n+    g-sttsne.ads<g-sttsne-locking.ads \\\n     s-inmaop.adb<s-inmaop-posix.adb \\\n     s-intman.adb<s-intman-posix.adb \\\n     s-osinte.adb<s-osinte-lynxos.adb \\\n@@ -1091,6 +1096,8 @@ ifeq ($(strip $(filter-out lynxos,$(osys))),)\n     LIBGNAT_TARGET_PAIRS = \\\n     a-intnam.ads<a-intnam-lynxos.ads \\\n     g-soccon.ads<g-soccon-lynxos.ads \\\n+    g-sttsne.adb<g-sttsne-locking.adb \\\n+    g-sttsne.ads<g-sttsne-locking.ads \\\n     s-inmaop.adb<s-inmaop-posix.adb \\\n     s-intman.adb<s-intman-posix.adb \\\n     s-osinte.adb<s-osinte-lynxos.adb \\\n@@ -1465,22 +1472,38 @@ ifeq ($(strip $(filter-out %x86_64 linux%,$(arch) $(osys))),)\n   LIBRARY_VERSION := $(LIB_VERSION)\n endif\n \n-ifeq ($(strip $(filter-out powerpc darwin%,$(arch) $(osys))),)\n-  LIBGNAT_TARGET_PAIRS = \\\n-  a-intnam.ads<a-intnam-darwin.ads \\\n-  a-numaux.ads<a-numaux-darwin.ads \\\n-  a-numaux.adb<a-numaux-darwin.adb \\\n-  g-soccon.ads<g-soccon-darwin.ads \\\n-  i-forbla.adb<i-forbla-darwin.adb \\\n-  s-inmaop.adb<s-inmaop-posix.adb \\\n-  s-intman.adb<s-intman-posix.adb \\\n-  s-osinte.adb<s-osinte-darwin.adb \\\n-  s-osinte.ads<s-osinte-darwin.ads \\\n-  s-osprim.adb<s-osprim-posix.adb \\\n-  s-taprop.adb<s-taprop-posix.adb \\\n-  s-taspri.ads<s-taspri-posix.ads \\\n-  s-tpopsp.adb<s-tpopsp-posix-foreign.adb \\\n-  system.ads<system-darwin-ppc.ads\n+ifeq ($(strip $(filter-out darwin%,$(osys))),)\n+  ifeq ($(strip $(filter-out %86,$(arch))),)\n+    LIBGNAT_TARGET_PAIRS = \\\n+    a-intnam.ads<a-intnam-darwin.ads \\\n+    s-inmaop.adb<s-inmaop-posix.adb \\\n+    s-intman.adb<s-intman-posix.adb \\\n+    s-osinte.adb<s-osinte-darwin.adb \\\n+    s-osinte.ads<s-osinte-darwin.ads \\\n+    s-osprim.adb<s-osprim-posix.adb \\\n+    s-taprop.adb<s-taprop-posix.adb \\\n+    s-taspri.ads<s-taspri-posix.ads \\\n+    s-tpopsp.adb<s-tpopsp-posix-foreign.adb \\\n+    g-soccon.ads<g-soccon-darwin.ads \\\n+    a-numaux.ads<a-numaux-x86.ads \\\n+    a-numaux.adb<a-numaux-x86.adb \\\n+    system.ads<system-darwin-x86.ads\n+  else\n+    LIBGNAT_TARGET_PAIRS = \\\n+    a-intnam.ads<a-intnam-darwin.ads \\\n+    s-inmaop.adb<s-inmaop-posix.adb \\\n+    s-intman.adb<s-intman-posix.adb \\\n+    s-osinte.adb<s-osinte-darwin.adb \\\n+    s-osinte.ads<s-osinte-darwin.ads \\\n+    s-osprim.adb<s-osprim-posix.adb \\\n+    s-taprop.adb<s-taprop-posix.adb \\\n+    s-taspri.ads<s-taspri-posix.ads \\\n+    s-tpopsp.adb<s-tpopsp-posix-foreign.adb \\\n+    g-soccon.ads<g-soccon-darwin.ads \\\n+    a-numaux.ads<a-numaux-darwin.ads \\\n+    a-numaux.adb<a-numaux-darwin.adb \\\n+    system.ads<system-darwin-ppc.ads\n+  endif\n \n   TOOLS_TARGET_PAIRS =  \\\n     mlib-tgt-specific.adb<mlib-tgt-darwin.adb\n@@ -1542,8 +1565,11 @@ LIBGNAT_OBJS = adaint.o argv.o cio.o cstreams.o ctrl_c.o errno.o exit.o env.o \\\n \n include $(fsrcdir)/Makefile.rtl\n \n+GNATRTL_LINEARALGEBRA_OBJS = a-nlcoar.o a-nllcar.o a-nllrar.o a-nlrear.o \\\n+  a-nucoar.o a-nurear.o i-forbla.o i-forlap.o s-gearop.o\n+\n GNATRTL_OBJS = $(GNATRTL_NONTASKING_OBJS) $(GNATRTL_TASKING_OBJS) \\\n-  g-trasym.o memtrack.o\n+  $(GNATRTL_LINEARALGEBRA_OBJS) g-trasym.o memtrack.o\n \n # Default run time files\n \n@@ -1555,6 +1581,7 @@ ADA_INCLUDE_SRCS =\\\n  s-[a-o]*.adb s-[p-z]*.adb s-[a-o]*.ads s-[p-z]*.ads  \n \n LIBGNAT=../rts/libgnat.a \n+\n GCC_LINK=$(CC) -static-libgcc $(ADA_INCLUDES)\n \n # when compiling the tools, the runtime has to be first on the path so that\n@@ -1803,6 +1830,9 @@ gnatlib: ../stamp-gnatlib1 ../stamp-gnatlib2\n \t$(AR_FOR_TARGET) $(AR_FLAGS) rts/libgnarl$(arext) \\\n \t   $(addprefix rts/,$(GNATRTL_TASKING_OBJS))\n \t$(RANLIB_FOR_TARGET) rts/libgnarl$(arext)\n+\t$(AR_FOR_TARGET) $(AR_FLAGS) rts/libgnala$(arext) \\\n+\t   $(addprefix rts/,$(GNATRTL_LINEARALGEBRA_OBJS))\n+\t$(RANLIB_FOR_TARGET) rts/libgnala$(arext)\n         ifeq ($(GMEM_LIB),gmemlib)\n \t\t$(AR_FOR_TARGET) $(AR_FLAGS) rts/libgmem$(arext) \\\n \t\t  rts/memtrack.o"}, {"sha": "d16f18730bafec625086c2fa59c1151f77df5086", "filename": "gcc/ada/a-calfor.adb", "status": "modified", "additions": 50, "deletions": 27, "changes": 77, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d/gcc%2Fada%2Fa-calfor.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d/gcc%2Fada%2Fa-calfor.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-calfor.adb?ref=33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---            Copyright (C) 2006, Free Software Foundation, Inc.            --\n+--          Copyright (C) 2006-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -140,14 +140,36 @@ package body Ada.Calendar.Formatting is\n       Hour       : Hour_Number;\n       Minute     : Minute_Number;\n       Second     : Second_Number;\n-      Sub_Second : Second_Duration;\n+      Sub_Second : Duration;\n       SS_Nat     : Natural;\n \n-      Result : String := \"00:00:00.00\";\n+      Low  : Integer;\n+      High : Integer;\n+\n+      Result : String := \"-00:00:00.00\";\n \n    begin\n-      Split (Elapsed_Time, Hour, Minute, Second, Sub_Second);\n-      SS_Nat := Natural (Sub_Second * 100.0);\n+      Split (abs (Elapsed_Time), Hour, Minute, Second, Sub_Second);\n+\n+      --  Determine the two slice bounds for the result string depending on\n+      --  whether the input is negative and whether fractions are requested.\n+\n+      if Elapsed_Time < 0.0 then\n+         Low := 1;\n+      else\n+         Low := 2;\n+      end if;\n+\n+      if Include_Time_Fraction then\n+         High := 12;\n+      else\n+         High := 9;\n+      end if;\n+\n+      --  Prevent rounding when converting to natural\n+\n+      Sub_Second := Sub_Second * 100.0 - 0.5;\n+      SS_Nat := Natural (Sub_Second);\n \n       declare\n          Hour_Str   : constant String := Hour_Number'Image (Hour);\n@@ -156,47 +178,45 @@ package body Ada.Calendar.Formatting is\n          SS_Str     : constant String := Natural'Image (SS_Nat);\n \n       begin\n-         --  Hour processing, positions 1 and 2\n+         --  Hour processing, positions 2 and 3\n \n          if Hour < 10 then\n-            Result (2) := Hour_Str (2);\n+            Result (3) := Hour_Str (2);\n          else\n-            Result (1) := Hour_Str (2);\n-            Result (2) := Hour_Str (3);\n+            Result (2) := Hour_Str (2);\n+            Result (3) := Hour_Str (3);\n          end if;\n \n-         --  Minute processing, positions 4 and 5\n+         --  Minute processing, positions 5 and 6\n \n          if Minute < 10 then\n-            Result (5) := Minute_Str (2);\n+            Result (6) := Minute_Str (2);\n          else\n-            Result (4) := Minute_Str (2);\n-            Result (5) := Minute_Str (3);\n+            Result (5) := Minute_Str (2);\n+            Result (6) := Minute_Str (3);\n          end if;\n \n-         --  Second processing, positions 7 and 8\n+         --  Second processing, positions 8 and 9\n \n          if Second < 10 then\n-            Result (8) := Second_Str (2);\n+            Result (9) := Second_Str (2);\n          else\n-            Result (7) := Second_Str (2);\n-            Result (8) := Second_Str (3);\n+            Result (8) := Second_Str (2);\n+            Result (9) := Second_Str (3);\n          end if;\n \n-         --  Optional sub second processing, positions 10 and 11\n+         --  Optional sub second processing, positions 11 and 12\n \n          if Include_Time_Fraction then\n             if SS_Nat < 10 then\n-               Result (11) := SS_Str (2);\n+               Result (12) := SS_Str (2);\n             else\n-               Result (10) := SS_Str (2);\n-               Result (11) := SS_Str (3);\n+               Result (11) := SS_Str (2);\n+               Result (12) := SS_Str (3);\n             end if;\n-\n-            return Result;\n-         else\n-            return Result (1 .. 8);\n          end if;\n+\n+         return Result (Low .. High);\n       end;\n    end Image;\n \n@@ -215,7 +235,7 @@ package body Ada.Calendar.Formatting is\n       Hour        : Hour_Number;\n       Minute      : Minute_Number;\n       Second      : Second_Number;\n-      Sub_Second  : Second_Duration;\n+      Sub_Second  : Duration;\n       SS_Nat      : Natural;\n       Leap_Second : Boolean;\n \n@@ -225,7 +245,10 @@ package body Ada.Calendar.Formatting is\n       Split (Date, Year, Month, Day,\n              Hour, Minute, Second, Sub_Second, Leap_Second, Time_Zone);\n \n-      SS_Nat := Natural (Sub_Second * 100.0);\n+      --  Prevent rounding when converting to natural\n+\n+      Sub_Second := Sub_Second * 100.0 - 0.5;\n+      SS_Nat := Natural (Sub_Second);\n \n       declare\n          Year_Str   : constant String := Year_Number'Image (Year);"}, {"sha": "9e0f03818cb367ecf2075d194c825d6c974fcb4d", "filename": "gcc/ada/a-ngcoar.adb", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d/gcc%2Fada%2Fa-ngcoar.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d/gcc%2Fada%2Fa-ngcoar.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ngcoar.adb?ref=33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d", "patch": "@@ -65,6 +65,9 @@ package body Ada.Numerics.Generic_Complex_Arrays is\n       Complex_Vector => Complex_Vector,\n       Complex_Matrix => Complex_Matrix);\n \n+   subtype Real is Real_Arrays.Real;\n+   --  Work around visibility bug ???\n+\n    use BLAS, LAPACK;\n \n    --  Procedure versions of functions returning unconstrained values.\n@@ -1108,7 +1111,7 @@ package body Ada.Numerics.Generic_Complex_Arrays is\n    -----------------\n \n    procedure Eigensystem\n-     (A       : in Complex_Matrix;\n+     (A       : Complex_Matrix;\n       Values  : out Real_Vector;\n       Vectors : out Complex_Matrix)\n    is"}, {"sha": "abffbd1b63638347d9452a380e18538a0b279775", "filename": "gcc/ada/a-ngcoar.ads", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d/gcc%2Fada%2Fa-ngcoar.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d/gcc%2Fada%2Fa-ngcoar.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ngcoar.ads?ref=33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d", "patch": "@@ -35,8 +35,8 @@ package Ada.Numerics.Generic_Complex_Arrays is\n    function Re (X : Complex_Vector) return Real_Vector;\n    function Im (X : Complex_Vector) return Real_Vector;\n \n-   procedure Set_Re (X : in out Complex_Vector; Re : in Real_Vector);\n-   procedure Set_Im (X : in out Complex_Vector; Im : in Real_Vector);\n+   procedure Set_Re (X : in out Complex_Vector; Re : Real_Vector);\n+   procedure Set_Im (X : in out Complex_Vector; Im : Real_Vector);\n \n    function Compose_From_Cartesian\n      (Re : Real_Vector) return Complex_Vector;\n@@ -129,8 +129,8 @@ package Ada.Numerics.Generic_Complex_Arrays is\n    function Re (X : Complex_Matrix) return Real_Matrix;\n    function Im (X : Complex_Matrix) return Real_Matrix;\n \n-   procedure Set_Re (X : in out Complex_Matrix; Re : in Real_Matrix);\n-   procedure Set_Im (X : in out Complex_Matrix; Im : in Real_Matrix);\n+   procedure Set_Re (X : in out Complex_Matrix; Re : Real_Matrix);\n+   procedure Set_Im (X : in out Complex_Matrix; Im : Real_Matrix);\n \n    function Compose_From_Cartesian (Re : Real_Matrix) return Complex_Matrix;\n \n@@ -268,7 +268,7 @@ package Ada.Numerics.Generic_Complex_Arrays is\n    function Eigenvalues (A : Complex_Matrix) return Real_Vector;\n \n    procedure Eigensystem\n-     (A       : in Complex_Matrix;\n+     (A       : Complex_Matrix;\n       Values  : out Real_Vector;\n       Vectors : out Complex_Matrix);\n "}, {"sha": "4dc1164b5d899514fd569896619d0eca68864b2a", "filename": "gcc/ada/exp_ch7.adb", "status": "modified", "additions": 52, "deletions": 35, "changes": 87, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d/gcc%2Fada%2Fexp_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d/gcc%2Fada%2Fexp_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.adb?ref=33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d", "patch": "@@ -36,6 +36,7 @@ with Exp_Ch9;  use Exp_Ch9;\n with Exp_Ch11; use Exp_Ch11;\n with Exp_Dbug; use Exp_Dbug;\n with Exp_Dist; use Exp_Dist;\n+with Exp_Disp; use Exp_Disp;\n with Exp_Tss;  use Exp_Tss;\n with Exp_Util; use Exp_Util;\n with Freeze;   use Freeze;\n@@ -310,7 +311,7 @@ package body Exp_Ch7 is\n    --  Here is a simple example of the expansion of a controlled block :\n \n    --    declare\n-   --       X : Controlled ;\n+   --       X : Controlled;\n    --       Y : Controlled := Init;\n    --\n    --       type R is record\n@@ -369,10 +370,10 @@ package body Exp_Ch7 is\n    --    end;\n \n    function Global_Flist_Ref (Flist_Ref : Node_Id) return Boolean;\n-   --  Return True if Flist_Ref refers to a global final list, either\n-   --  the object GLobal_Final_List which is used to attach standalone\n-   --  objects, or any of the list controllers associated with library\n-   --  level access to controlled objects\n+   --  Return True if Flist_Ref refers to a global final list, either the\n+   --  object Global_Final_List which is used to attach standalone objects,\n+   --  or any of the list controllers associated with library-level access\n+   --  to controlled objects.\n \n    procedure Clean_Simple_Protected_Objects (N : Node_Id);\n    --  Protected objects without entries are not controlled types, and the\n@@ -1415,12 +1416,12 @@ package body Exp_Ch7 is\n    --  Start of processing for Expand_Ctrl_Function_Call\n \n    begin\n-      --  Optimization, if the returned value (which is on the sec-stack)\n-      --  is returned again, no need to copy/readjust/finalize, we can just\n-      --  pass the value thru (see Expand_N_Return_Statement), and thus no\n+      --  Optimization, if the returned value (which is on the sec-stack) is\n+      --  returned again, no need to copy/readjust/finalize, we can just pass\n+      --  the value thru (see Expand_N_Simple_Return_Statement), and thus no\n       --  attachment is needed\n \n-      if Nkind (Parent (N)) = N_Return_Statement then\n+      if Nkind (Parent (N)) = N_Simple_Return_Statement then\n          return;\n       end if;\n \n@@ -1579,6 +1580,13 @@ package body Exp_Ch7 is\n \n       if Ekind (Ent) = E_Package then\n          Push_Scope (Corresponding_Spec (N));\n+\n+         --  Build dispatch tables of library level tagged types\n+\n+         if Is_Compilation_Unit (Ent) then\n+            Build_Static_Dispatch_Tables (N);\n+         end if;\n+\n          Build_Task_Activation_Call (N);\n          Pop_Scope;\n       end if;\n@@ -1595,23 +1603,21 @@ package body Exp_Ch7 is\n    -- Expand_N_Package_Declaration --\n    ----------------------------------\n \n-   --  Add call to Activate_Tasks if there are tasks declared and the\n-   --  package has no body. Note that in Ada83,  this may result in\n-   --  premature activation of some tasks, given that we cannot tell\n-   --  whether a body will eventually appear.\n+   --  Add call to Activate_Tasks if there are tasks declared and the package\n+   --  has no body. Note that in Ada83, this may result in premature activation\n+   --  of some tasks, given that we cannot tell whether a body will eventually\n+   --  appear.\n \n    procedure Expand_N_Package_Declaration (N : Node_Id) is\n-      Spec    : constant Node_Id := Specification (N);\n+      Spec    : constant Node_Id   := Specification (N);\n+      Id      : constant Entity_Id := Defining_Entity (N);\n       Decls   : List_Id;\n-\n-      No_Body : Boolean;\n+      No_Body : Boolean := False;\n       --  True in the case of a package declaration that is a compilation unit\n       --  and for which no associated body will be compiled in\n       --  this compilation.\n-   begin\n-\n-      No_Body := False;\n \n+   begin\n       --  Case of a package declaration other than a compilation unit\n \n       if Nkind (Parent (N)) /= N_Compilation_Unit then\n@@ -1620,7 +1626,7 @@ package body Exp_Ch7 is\n       --  Case of a compilation unit that does not require a body\n \n       elsif not Body_Required (Parent (N))\n-        and then not Unit_Requires_Body (Defining_Entity (N))\n+        and then not Unit_Requires_Body (Id)\n       then\n          No_Body := True;\n \n@@ -1631,7 +1637,7 @@ package body Exp_Ch7 is\n       --  spec).\n \n       elsif Parent (N) = Cunit (Main_Unit)\n-        and then Is_Remote_Call_Interface (Defining_Entity (N))\n+        and then Is_Remote_Call_Interface (Id)\n         and then Distribution_Stub_Mode = Generate_Caller_Stub_Body\n       then\n          No_Body := True;\n@@ -1642,9 +1648,9 @@ package body Exp_Ch7 is\n       --  have a specific separate compilation unit for that).\n \n       if No_Body then\n-         Push_Scope (Defining_Entity (N));\n+         Push_Scope (Id);\n \n-         if Has_RACW (Defining_Entity (N)) then\n+         if Has_RACW (Id) then\n \n             --  Generate RACW subprogram bodies\n \n@@ -1659,7 +1665,7 @@ package body Exp_Ch7 is\n                Set_Visible_Declarations (Spec, Decls);\n             end if;\n \n-            Append_RACW_Bodies (Decls, Defining_Entity (N));\n+            Append_RACW_Bodies (Decls, Id);\n             Analyze_List (Decls);\n          end if;\n \n@@ -1673,6 +1679,15 @@ package body Exp_Ch7 is\n          Pop_Scope;\n       end if;\n \n+      --  Build dispatch tables of library level tagged types\n+\n+      if Is_Compilation_Unit (Id)\n+        or else (Is_Generic_Instance (Id)\n+                   and then Is_Library_Level_Entity (Id))\n+      then\n+         Build_Static_Dispatch_Tables (N);\n+      end if;\n+\n       --  Note: it is not necessary to worry about generating a subprogram\n       --  descriptor, since the only way to get exception handlers into a\n       --  package spec is to include instantiations, and that would cause\n@@ -1698,7 +1713,7 @@ package body Exp_Ch7 is\n \n    begin\n       --  Case of an internal component. The Final list is the record\n-      --  controller of the enclosing record\n+      --  controller of the enclosing record.\n \n       if Present (Ref) then\n          R := Ref;\n@@ -1741,7 +1756,9 @@ package body Exp_Ch7 is\n       --  context is a declaration or an assignment.\n \n       elsif Is_Access_Type (E)\n-        and then Ekind (E) /= E_Anonymous_Access_Type\n+        and then (Ekind (E) /= E_Anonymous_Access_Type\n+                    or else\n+                  Present (Associated_Final_Chain (E)))\n       then\n          if not From_With_Type (E) then\n             return\n@@ -1775,15 +1792,15 @@ package body Exp_Ch7 is\n             return New_Reference_To (RTE (RE_Global_Final_List), Sloc (E));\n          else\n             if No (Finalization_Chain_Entity (S)) then\n-\n-               Id := Make_Defining_Identifier (Sloc (S),\n-                 New_Internal_Name ('F'));\n+               Id :=\n+                 Make_Defining_Identifier (Sloc (S),\n+                   Chars => New_Internal_Name ('F'));\n                Set_Finalization_Chain_Entity (S, Id);\n \n                --  Set momentarily some semantics attributes to allow normal\n                --  analysis of expansions containing references to this chain.\n                --  Will be fully decorated during the expansion of the scope\n-               --  itself\n+               --  itself.\n \n                Set_Ekind (Id, E_Variable);\n                Set_Etype (Id, RTE (RE_Finalizable_Ptr));\n@@ -1813,7 +1830,7 @@ package body Exp_Ch7 is\n \n             --  Simple statement can be wrapped\n \n-            when N_Pragma               =>\n+            when N_Pragma =>\n                return The_Parent;\n \n             --  Usually assignments are good candidate for wrapping\n@@ -1876,7 +1893,7 @@ package body Exp_Ch7 is\n                  N_Terminate_Alternative            =>\n                return P;\n \n-            when N_Attribute_Reference              =>\n+            when N_Attribute_Reference =>\n \n                if Is_Procedure_Attribute_Name\n                     (Attribute_Name (The_Parent))\n@@ -1888,7 +1905,7 @@ package body Exp_Ch7 is\n             --  expression in a raise_with_expression uses the secondary\n             --  stack, for example.\n \n-            when N_Raise_Statement  =>\n+            when N_Raise_Statement =>\n                return The_Parent;\n \n             --  If the expression is within the iteration scheme of a loop,\n@@ -1909,7 +1926,7 @@ package body Exp_Ch7 is\n             --  The return statement is not to be wrapped when the function\n             --  itself needs wrapping at the outer-level\n \n-            when N_Return_Statement            =>\n+            when N_Simple_Return_Statement =>\n                declare\n                   Applies_To : constant Entity_Id :=\n                                  Return_Applies_To\n@@ -3139,7 +3156,7 @@ package body Exp_Ch7 is\n       if VM_Target = No_VM\n         and then Uses_Sec_Stack (Current_Scope)\n         and then No (Flist)\n-        and then Nkind (Action) /= N_Return_Statement\n+        and then Nkind (Action) /= N_Simple_Return_Statement\n         and then Nkind (Par) /= N_Exception_Handler\n       then\n "}, {"sha": "cbbb1331af0fc8c1720095ddd451fa9e132d7ff8", "filename": "gcc/ada/g-socket.ads", "status": "modified", "additions": 15, "deletions": 12, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d/gcc%2Fada%2Fg-socket.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d/gcc%2Fada%2Fg-socket.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socket.ads?ref=33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d", "patch": "@@ -180,13 +180,6 @@ package GNAT.Sockets is\n    --           Socket_Level,\n    --           (Reuse_Address, True));\n \n-   --        --  Join a multicast group\n-\n-   --        Set_Socket_Option\n-   --          (Socket,\n-   --           IP_Protocol_For_IP_Level,\n-   --           (Add_Membership, Inet_Addr (Group), Any_Inet_Addr));\n-\n    --        --  Controls the live time of the datagram to avoid it being\n    --        --  looped forever due to routing errors. Routers decrement\n    --        --  the TTL of every datagram as it traverses from one network\n@@ -213,6 +206,16 @@ package GNAT.Sockets is\n \n    --        Bind_Socket (Socket, Address);\n \n+   --        --  Join a multicast group\n+\n+   --        --  Portability note: On Windows, this option may be set only\n+   --        --  on a bound socket.\n+\n+   --        Set_Socket_Option\n+   --          (Socket,\n+   --           IP_Protocol_For_IP_Level,\n+   --           (Add_Membership, Inet_Addr (Group), Any_Inet_Addr));\n+\n    --        --  If this socket is intended to send messages, provide the\n    --        --  receiver socket address.\n \n@@ -305,11 +308,6 @@ package GNAT.Sockets is\n    --           Socket_Level,\n    --           (Reuse_Address, True));\n \n-   --        Set_Socket_Option\n-   --          (Socket,\n-   --           IP_Protocol_For_IP_Level,\n-   --           (Add_Membership, Inet_Addr (Group), Any_Inet_Addr));\n-\n    --        Set_Socket_Option\n    --          (Socket,\n    --           IP_Protocol_For_IP_Level,\n@@ -325,6 +323,11 @@ package GNAT.Sockets is\n \n    --        Bind_Socket (Socket, Address);\n \n+   --        Set_Socket_Option\n+   --          (Socket,\n+   --           IP_Protocol_For_IP_Level,\n+   --           (Add_Membership, Inet_Addr (Group), Any_Inet_Addr));\n+\n    --        Address.Addr := Inet_Addr (Group);\n    --        Address.Port := 55505;\n "}, {"sha": "622587123ee91de17227074d73fe7fe6adbfa3a8", "filename": "gcc/ada/g-sttsne-locking.adb", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d/gcc%2Fada%2Fg-sttsne-locking.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d/gcc%2Fada%2Fg-sttsne-locking.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-sttsne-locking.adb?ref=33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d", "patch": "@@ -31,12 +31,20 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n+--  This version is used on VMS and LynxOS\n+\n with GNAT.Task_Lock;\n \n with Interfaces.C; use Interfaces.C;\n \n package body GNAT.Sockets.Thin.Task_Safe_NetDB is\n \n+   --  The Safe_GetXXXbyYYY routines wrap the Nonreentrant_ versions using the\n+   --  task lock, and copy the relevant data structures (under the lock) into\n+   --  the result. The Nonreentrant_ versions are expected to be in the parent\n+   --  package GNAT.Sockets.Thin (on platforms that use this version of\n+   --  Task_Safe_NetDB).\n+\n    procedure Copy_Host_Entry\n      (Source_Hostent       : Hostent;\n       Target_Hostent       : out Hostent;"}, {"sha": "3f2fb43da7bde8216dac1d92d63f49fe5dea7adf", "filename": "gcc/ada/g-sttsne-locking.ads", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d/gcc%2Fada%2Fg-sttsne-locking.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d/gcc%2Fada%2Fg-sttsne-locking.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-sttsne-locking.ads?ref=33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d", "patch": "@@ -31,20 +31,15 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This version is used on VMS and LynxOS\n+--  This version is used on VMS, LynxOS, and VxWorks. There are two versions of\n+--  the body: one for VMS and LynxOS, the other for VxWorks.\n \n package GNAT.Sockets.Thin.Task_Safe_NetDB is\n \n    ----------------------------------------\n    -- Reentrant network databases access --\n    ----------------------------------------\n \n-   --  The following routines wrap the Nonreentrant_ versions using the task\n-   --  lock, and copy the relevant data structures (under the lock) into the\n-   --  result. The Nonreentrant_ versions are expected to be in the parent\n-   --  package GNAT.Sockets.Thin (on platforms that use this version of\n-   --  Task_Safe_NetDB).\n-\n    function Safe_Gethostbyname\n      (Name     : C.char_array;\n       Ret      : not null access Hostent;"}, {"sha": "9dbe0eafc4f408c3e3567f9b153e29b7df15f347", "filename": "gcc/ada/g-sttsne-vxworks.adb", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d/gcc%2Fada%2Fg-sttsne-vxworks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d/gcc%2Fada%2Fg-sttsne-vxworks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-sttsne-vxworks.adb?ref=33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d", "patch": "@@ -31,6 +31,9 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n+--  This version is used on VxWorks. Note that the corresponding spec is in\n+--  g-sttsne-locking.ads.\n+\n with Interfaces.C; use Interfaces.C;\n \n package body GNAT.Sockets.Thin.Task_Safe_NetDB is"}, {"sha": "063ba12671f6ec67f1e9b1118b51e8fdf5c8c722", "filename": "gcc/ada/g-sttsne-vxworks.ads", "status": "removed", "additions": 0, "deletions": 72, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d64bc378c6d5f95f5f76ea3e42e8c009f4b9b4d/gcc%2Fada%2Fg-sttsne-vxworks.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d64bc378c6d5f95f5f76ea3e42e8c009f4b9b4d/gcc%2Fada%2Fg-sttsne-vxworks.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-sttsne-vxworks.ads?ref=6d64bc378c6d5f95f5f76ea3e42e8c009f4b9b4d", "patch": "@@ -1,72 +0,0 @@\n-------------------------------------------------------------------------------\n---                                                                          --\n---                         GNAT COMPILER COMPONENTS                         --\n---                                                                          --\n---    G N A T . S O C K E T S . T H I N . T A S K _ S A F E _ N E T D B     --\n---                                                                          --\n---                                 S p e c                                  --\n---                                                                          --\n---                     Copyright (C) 2007, AdaCore                          --\n---                                                                          --\n--- GNAT is free software;  you can  redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n--- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n--- for  more details.  You should have  received  a copy of the GNU General --\n--- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n--- to  the  Free Software Foundation,  51  Franklin  Street,  Fifth  Floor, --\n--- Boston, MA 02110-1301, USA.                                              --\n---                                                                          --\n--- As a special exception,  if other files  instantiate  generics from this --\n--- unit, or you link  this unit with other files  to produce an executable, --\n--- this  unit  does not  by itself cause  the resulting  executable  to  be --\n--- covered  by the  GNU  General  Public  License.  This exception does not --\n--- however invalidate  any other reasons why  the executable file  might be --\n--- covered by the  GNU Public License.                                      --\n---                                                                          --\n--- GNAT was originally developed  by the GNAT team at  New York University. --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n---                                                                          --\n-------------------------------------------------------------------------------\n-\n---  This version is used on VxWorks\n-\n-package GNAT.Sockets.Thin.Task_Safe_NetDB is\n-\n-   ----------------------------------------\n-   -- Reentrant network databases access --\n-   ----------------------------------------\n-\n-   function Safe_Gethostbyname\n-     (Name     : C.char_array;\n-      Ret      : not null access Hostent;\n-      Buf      : System.Address;\n-      Buflen   : C.int;\n-      H_Errnop : not null access C.int) return C.int;\n-\n-   function Safe_Gethostbyaddr\n-     (Addr      : System.Address;\n-      Addr_Len  : C.int;\n-      Addr_Type : C.int;\n-      Ret       : not null access Hostent;\n-      Buf       : System.Address;\n-      Buflen    : C.int;\n-      H_Errnop  : not null access C.int) return C.int;\n-\n-   function Safe_Getservbyname\n-     (Name     : C.char_array;\n-      Proto    : C.char_array;\n-      Ret      : not null access Servent;\n-      Buf      : System.Address;\n-      Buflen   : C.int) return C.int;\n-\n-   function Safe_Getservbyport\n-     (Port     : C.int;\n-      Proto    : C.char_array;\n-      Ret      : not null access Servent;\n-      Buf      : System.Address;\n-      Buflen   : C.int) return C.int;\n-\n-end GNAT.Sockets.Thin.Task_Safe_NetDB;"}, {"sha": "346f73bdac9342b6dd47b2358063472221cac924", "filename": "gcc/ada/g-trasym.ads", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d/gcc%2Fada%2Fg-trasym.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d/gcc%2Fada%2Fg-trasym.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-trasym.ads?ref=33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d", "patch": "@@ -36,12 +36,13 @@\n --  This capability is currently supported on the following targets:\n \n --     HP-UX\n---     Irix MIPS\n+--     IRIX\n --     GNU/Linux x86\n+--     AIX\n --     Solaris sparc\n---     Tru64 alpha\n+--     Tru64\n --     OpenVMS/Alpha\n---     Windows NT/XP\n+--     Windows NT/XP/Vista\n \n --  The routines provided in this package assume that your application has\n --  been compiled with debugging information turned on, since this information\n@@ -59,16 +60,15 @@\n --  - archive this executable\n --  - strip a copy of the executable and distribute/deploy this version\n --  - at run time, compute absolute traceback (-bargs -E) from your\n---    executable and log it using Ada.Exceptions.Exception_Occurrence\n+--    executable and log it using Ada.Exceptions.Exception_Information\n --  - off line, compute the symbolic traceback using the executable archived\n --    with debug info and addr2line or gdb (using info line *<addr>) on the\n --    absolute addresses logged by your application.\n \n --  In order to retrieve symbolic information, functions in this package will\n --  read on disk all the debug information of the executable file (found via\n---  Argument (0), so any path information needed to read the executable file\n---  need to be provided when launching the executable), and load then in\n---  memory, causing a significant cpu and memory overhead.\n+--  Argument (0), and looked in the PATH if needed), and load them in memory,\n+--  causing a significant cpu and memory overhead.\n \n --  On all platforms except VMS, this package is not intended to be used\n --  within a shared library, symbolic tracebacks are only supported for the"}, {"sha": "26be9378df8b0fdae03658cf91917a17d5a6762b", "filename": "gcc/ada/gen-soccon.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d/gcc%2Fada%2Fgen-soccon.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d/gcc%2Fada%2Fgen-soccon.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgen-soccon.c?ref=33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d", "patch": "@@ -497,6 +497,11 @@ CND(TCP_NODELAY, \"Do not coalesce packets\")\n #endif\n CND(SO_REUSEADDR, \"Bind reuse local address\")\n \n+#ifndef SO_REUSEPORT\n+#define SO_REUSEPORT -1\n+#endif\n+CND(SO_REUSEPORT, \"Bind reuse port number\")\n+\n #ifndef SO_KEEPALIVE\n #define SO_KEEPALIVE -1\n #endif"}, {"sha": "8db06e233a6b28eca7243dc83337ddce55055137", "filename": "gcc/ada/gnatchop.adb", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d/gcc%2Fada%2Fgnatchop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d/gcc%2Fada%2Fgnatchop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatchop.adb?ref=33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d", "patch": "@@ -38,12 +38,10 @@ with GNAT.Table;\n \n with Gnatvsn;\n with Hostparm;\n+with Types;\n \n procedure Gnatchop is\n \n-   Terminate_Program : exception;\n-   --  Used to terminate execution immediately\n-\n    Config_File_Name : constant String_Access := new String'(\"gnat.adc\");\n    --  The name of the file holding the GNAT configuration pragmas\n \n@@ -362,7 +360,7 @@ procedure Gnatchop is\n          Set_Exit_Status (Failure);\n \n          if Exit_On_Error then\n-            raise Terminate_Program;\n+            raise Types.Terminate_Program;\n          end if;\n       end if;\n    end Error_Msg;\n@@ -696,7 +694,7 @@ procedure Gnatchop is\n       return Success;\n \n    exception\n-      when Failure | Terminate_Program =>\n+      when Failure | Types.Terminate_Program =>\n          Close (Offset_FD);\n          Delete_File (Offset_Name'Address, Success);\n          return False;\n@@ -1114,7 +1112,7 @@ procedure Gnatchop is\n \n             when 'h' =>\n                Usage;\n-               raise Terminate_Program;\n+               raise Types.Terminate_Program;\n \n             when 'k' =>\n                declare\n@@ -1852,7 +1850,7 @@ begin\n    return;\n \n exception\n-   when Terminate_Program =>\n+   when Types.Terminate_Program =>\n       null;\n \n end Gnatchop;"}, {"sha": "3b9fb07f0946a4d2fd76c7df3a6e8e39d43fd2c6", "filename": "gcc/ada/gnatvsn.adb", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d/gcc%2Fada%2Fgnatvsn.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d/gcc%2Fada%2Fgnatvsn.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatvsn.adb?ref=33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---       Copyright (C) 2002-2006 Free Software Foundation, Inc.             --\n+--       Copyright (C) 2002-2007 Free Software Foundation, Inc.             --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -33,6 +33,19 @@\n \n package body Gnatvsn is\n \n+   ------------------------\n+   -- Gnat_Free_Software --\n+   ------------------------\n+\n+   function Gnat_Free_Software return String is\n+   begin\n+      return\n+        \"This is free software; see the source for copying conditions.\" &\n+        ASCII.LF &\n+        \"There is NO warranty; not even for MERCHANTABILITY or FITNESS\" &\n+        \" FOR A PARTICULAR PURPOSE.\";\n+   end Gnat_Free_Software;\n+\n    Version_String : String (1 .. Ver_Len_Max);\n    --  Import the C string defined in the (language-independent) source file\n    --  version.c."}, {"sha": "c3c17a30cefa68504d03f3f38cc8341fd34b9e34", "filename": "gcc/ada/gnatvsn.ads", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d/gcc%2Fada%2Fgnatvsn.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d/gcc%2Fada%2Fgnatvsn.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatvsn.ads?ref=33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2006 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2007 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -64,6 +64,10 @@ package Gnatvsn is\n    --       gives appropriate bug submission instructions that do not reference\n    --       customer number etc.\n \n+   function Gnat_Free_Software return String;\n+   --  Text to be displayed by the different GNAT tools when switch --version\n+   --  is used. This text depends on the GNAT build type.\n+\n    Ver_Len_Max : constant := 64;\n    --  Longest possible length for Gnat_Version_String in this or any\n    --  other version of GNAT. This is used by the binder to establish\n@@ -89,7 +93,14 @@ package Gnatvsn is\n    --  the tree format that would result in a compiler being incompatible with\n    --  an older version of ASIS, or vice versa.\n \n-   Current_Year : constant String := \"2006\";\n+   PCS_Version_Number : constant := 1;\n+   --  PCS interface version. This is used to check for consistency between the\n+   --  compiler used to generate distribution stubs and the PCS implementation.\n+   --  It must be incremented whenever a change is made to the generated code\n+   --  for distribution stubs that would result in the compiler being\n+   --  incompatible with an older version of the PCS, or vice versa.\n+\n+   Current_Year : constant String := \"2007\";\n    --  Used in printing copyright messages\n \n end Gnatvsn;"}, {"sha": "f54497d941341511e1fc939bed36e26296a6231f", "filename": "gcc/ada/i-forbla.adb", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d/gcc%2Fada%2Fi-forbla.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d/gcc%2Fada%2Fi-forbla.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fi-forbla.adb?ref=33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---            Copyright (C) 2006, Free Software Foundation, Inc.            --\n+--         Copyright (C) 2006-2007, Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -31,9 +31,13 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  For platforms without, or with unknown libraries, no libraries are linked\n---  by default. The user has to specify the required BLAS and LAPACK libraries\n---  explicitly on the command line.\n+--  This Interfaces.Fortran.Blas package body contains the required linker\n+--  pragmas for automatically linking with the gnalasup linear algebra support\n+--  library, and the systems math library. Alternative bodies can be supplied\n+--  if different sets of libraries are needed.\n \n package body Interfaces.Fortran.BLAS is\n+   pragma Linker_Options (\"-lgnala\");\n+   pragma Linker_Options (\"-lgnalasup\");\n+   pragma Linker_Options (\"-lm\");\n end Interfaces.Fortran.BLAS;"}, {"sha": "c405478b5d91273b4d8aba20e7c61f08fb8ea2b8", "filename": "gcc/ada/i-forbla.ads", "status": "modified", "additions": 18, "deletions": 6, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d/gcc%2Fada%2Fi-forbla.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d/gcc%2Fada%2Fi-forbla.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fi-forbla.ads?ref=33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---            Copyright (C) 2006, Free Software Foundation, Inc.            --\n+--         Copyright (C) 2006-2007, Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -31,10 +31,22 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  Comment required if non-RM package ???\n+--  This package provides a thin binding to the standard Fortran BLAS library.\n+--  Documentation and a reference BLAS implementation is available from\n+--  ftp://ftp.netlib.org. The main purpose of this package is to facilitate\n+--  implementation of the Ada 2005 Ada.Numerics.Generic_Real_Arrays and\n+--  Ada.Numerics.Generic_Complex_Arrays packages. Bindings to other BLAS\n+--  routines may be added over time.\n+\n+--  As actual linker arguments to link with the BLAS implementation differs\n+--  according to platform and chosen BLAS implementation, the linker arguments\n+--  are given in the body of this package. The body may need to be modified in\n+--  order to link with different BLAS implementations tuned to the specific\n+--  target.\n \n package Interfaces.Fortran.BLAS is\n    pragma Pure;\n+   pragma Elaborate_Body;\n \n    No_Trans   : aliased constant Character := 'N';\n    Trans      : aliased constant Character := 'T';\n@@ -81,14 +93,14 @@ package Interfaces.Fortran.BLAS is\n       Y     : Double_Precision_Vector;\n       Inc_Y : Integer := 1) return Double_Precision;\n \n-   function cdot\n+   function cdotu\n      (N     : Positive;\n       X     : Complex_Vector;\n       Inc_X : Integer := 1;\n       Y     : Complex_Vector;\n       Inc_Y : Integer := 1) return Complex;\n \n-   function zdot\n+   function zdotu\n      (N     : Positive;\n       X     : Double_Complex_Vector;\n       Inc_X : Integer := 1;\n@@ -232,7 +244,7 @@ package Interfaces.Fortran.BLAS is\n       Ld_C    : Integer);\n \n private\n-   pragma Import (Fortran, cdot,   \"cdot_\");\n+   pragma Import (Fortran, cdotu,  \"cdotu_\");\n    pragma Import (Fortran, cgemm,  \"cgemm_\");\n    pragma Import (Fortran, cgemv,  \"cgemv_\");\n    pragma Import (Fortran, ddot,   \"ddot_\");\n@@ -245,7 +257,7 @@ private\n    pragma Import (Fortran, sgemm,  \"sgemm_\");\n    pragma Import (Fortran, sgemv,  \"sgemv_\");\n    pragma Import (Fortran, snrm2,  \"snrm2_\");\n-   pragma Import (Fortran, zdot,   \"zdot_\");\n+   pragma Import (Fortran, zdotu,  \"zdotu_\");\n    pragma Import (Fortran, zgemm,  \"zgemm_\");\n    pragma Import (Fortran, zgemv,  \"zgemv_\");\n end Interfaces.Fortran.BLAS;"}, {"sha": "3e8f2be07c389a65b4da2c620c34b880d4a1ce3b", "filename": "gcc/ada/i-forlap.ads", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d/gcc%2Fada%2Fi-forlap.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d/gcc%2Fada%2Fi-forlap.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fi-forlap.ads?ref=33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d", "patch": "@@ -293,7 +293,7 @@ package Interfaces.Fortran.LAPACK is\n       N      : Natural;\n       A      : in out Real_Matrix;\n       Ld_A   : Positive;\n-      Tau    : in Real_Vector;\n+      Tau    : Real_Vector;\n       Work   : out Real_Vector;\n       L_Work : Integer;\n       Info   : access Integer);\n@@ -303,20 +303,20 @@ package Interfaces.Fortran.LAPACK is\n       N      : Natural;\n       A      : in out Double_Precision_Matrix;\n       Ld_A   : Positive;\n-      Tau    : in Double_Precision_Vector;\n+      Tau    : Double_Precision_Vector;\n       Work   : out Double_Precision_Vector;\n       L_Work : Integer;\n       Info   : access Integer);\n \n    procedure sstebz\n      (Rng      : access constant Character;\n       Order    : access constant Character;\n-      N        : in Natural;\n-      Vl, Vu   : in Real := 0.0;\n-      Il, Iu   : in Integer := 1;\n-      Abs_Tol  : in Real := 0.0;\n-      D        : in Real_Vector;\n-      E        : in Real_Vector;\n+      N        : Natural;\n+      Vl, Vu   : Real := 0.0;\n+      Il, Iu   : Integer := 1;\n+      Abs_Tol  : Real := 0.0;\n+      D        : Real_Vector;\n+      E        : Real_Vector;\n       M        : out Natural;\n       N_Split  : out Natural;\n       W        : out Real_Vector;\n@@ -329,12 +329,12 @@ package Interfaces.Fortran.LAPACK is\n    procedure dstebz\n      (Rng      : access constant Character;\n       Order    : access constant Character;\n-      N        : in Natural;\n-      Vl, Vu   : in Double_Precision := 0.0;\n-      Il, Iu   : in Integer := 1;\n-      Abs_Tol  : in Double_Precision := 0.0;\n-      D        : in Double_Precision_Vector;\n-      E        : in Double_Precision_Vector;\n+      N        : Natural;\n+      Vl, Vu   : Double_Precision := 0.0;\n+      Il, Iu   : Integer := 1;\n+      Abs_Tol  : Double_Precision := 0.0;\n+      D        : Double_Precision_Vector;\n+      E        : Double_Precision_Vector;\n       M        : out Natural;\n       N_Split  : out Natural;\n       W        : out Double_Precision_Vector;"}, {"sha": "98f9a52b242bc510e9bc9eb1e2b5373c6fb2a4f8", "filename": "gcc/ada/lib-load.adb", "status": "modified", "additions": 20, "deletions": 19, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d/gcc%2Fada%2Flib-load.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d/gcc%2Fada%2Flib-load.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-load.adb?ref=33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d", "patch": "@@ -52,7 +52,7 @@ package body Lib.Load is\n    -- Local Subprograms --\n    -----------------------\n \n-   function From_Limited_With_Chain (Lim : Boolean) return Boolean;\n+   function From_Limited_With_Chain return Boolean;\n    --  Check whether a possible circular dependence includes units that\n    --  have been loaded through limited_with clauses, in which case there\n    --  is no real circularity.\n@@ -236,22 +236,24 @@ package body Lib.Load is\n    -- From_Limited_With_Chain --\n    -----------------------------\n \n-   function From_Limited_With_Chain (Lim : Boolean) return Boolean is\n+   function From_Limited_With_Chain return Boolean is\n+      Curr_Num : constant Unit_Number_Type :=\n+                   Load_Stack.Table (Load_Stack.Last).Unit_Number;\n+\n    begin\n       --  True if the current load operation is through a limited_with clause\n+      --  and we are not within a loop of regular with_clauses.\n \n-      if Lim then\n-         return True;\n-\n-      --  Examine the Load_Stack to locate any previous Limited_with clause\n+      for U in reverse Load_Stack.First .. Load_Stack.Last - 1 loop\n+         if Load_Stack.Table (U).Unit_Number = Curr_Num then\n+            return False;\n \n-      elsif Load_Stack.Last - 1 > Load_Stack.First then\n-         for U in Load_Stack.First .. Load_Stack.Last - 1 loop\n-            if Load_Stack.Table (U).From_Limited_With then\n-               return True;\n-            end if;\n-         end loop;\n-      end if;\n+         elsif Present (Load_Stack.Table (U).With_Node)\n+           and then Limited_Present (Load_Stack.Table (U).With_Node)\n+         then\n+            return True;\n+         end if;\n+      end loop;\n \n       return False;\n    end From_Limited_With_Chain;\n@@ -285,7 +287,7 @@ package body Lib.Load is\n \n    begin\n       Load_Stack.Increment_Last;\n-      Load_Stack.Table (Load_Stack.Last) := (Main_Unit, False);\n+      Load_Stack.Table (Load_Stack.Last) := (Main_Unit, Empty);\n \n       --  Initialize unit table entry for Main_Unit. Note that we don't know\n       --  the unit name yet, that gets filled in when the parser parses the\n@@ -339,7 +341,7 @@ package body Lib.Load is\n       Subunit           : Boolean;\n       Corr_Body         : Unit_Number_Type := No_Unit;\n       Renamings         : Boolean          := False;\n-      From_Limited_With : Boolean          := False) return Unit_Number_Type\n+      With_Node         : Node_Id          := Empty) return Unit_Number_Type\n    is\n       Calling_Unit : Unit_Number_Type;\n       Uname_Actual : Unit_Name_Type;\n@@ -558,7 +560,7 @@ package body Lib.Load is\n       --  and indicate the kind of with_clause responsible for the load.\n \n       Load_Stack.Increment_Last;\n-      Load_Stack.Table (Load_Stack.Last) := (Unum, From_Limited_With);\n+      Load_Stack.Table (Load_Stack.Last) := (Unum, With_Node);\n \n       --  Case of entry already in table\n \n@@ -579,7 +581,7 @@ package body Lib.Load is\n                        or else Acts_As_Spec (Units.Table (Unum).Cunit))\n            and then (Nkind (Error_Node) /= N_With_Clause\n                        or else not Limited_Present (Error_Node))\n-           and then not From_Limited_With_Chain (From_Limited_With)\n+           and then not From_Limited_With_Chain\n          then\n             if Debug_Flag_L then\n                Write_Str (\"  circular dependency encountered\");\n@@ -653,8 +655,7 @@ package body Lib.Load is\n                Multiple_Unit_Index := Get_Unit_Index (Uname_Actual);\n                Units.Table (Unum).Munit_Index := Multiple_Unit_Index;\n                Initialize_Scanner (Unum, Source_Index (Unum));\n-               Discard_List (Par (Configuration_Pragmas => False,\n-                                  From_Limited_With     => From_Limited_With));\n+               Discard_List (Par (Configuration_Pragmas => False));\n                Multiple_Unit_Index := Save_Index;\n                Set_Loading (Unum, False);\n             end;"}, {"sha": "af5f92b6937159222ca2b81e88bb86512f8562fc", "filename": "gcc/ada/lib-load.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d/gcc%2Fada%2Flib-load.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d/gcc%2Fada%2Flib-load.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-load.ads?ref=33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d", "patch": "@@ -110,7 +110,7 @@ package Lib.Load is\n       Subunit           : Boolean;\n       Corr_Body         : Unit_Number_Type := No_Unit;\n       Renamings         : Boolean          := False;\n-      From_Limited_With : Boolean          := False) return Unit_Number_Type;\n+      With_Node         : Node_Id          := Empty) return Unit_Number_Type;\n    --  This function loads and parses the unit specified by Load_Name (or\n    --  returns the unit number for the previously constructed units table\n    --  entry if this is not the first call for this unit). Required indicates"}, {"sha": "65592877db13912860affe7a1ed14729fcae47ad", "filename": "gcc/ada/link.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d/gcc%2Fada%2Flink.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d/gcc%2Fada%2Flink.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flink.c?ref=33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                          C Implementation File                           *\n  *                                                                          *\n- *          Copyright (C) 1992-2004, Free Software Foundation, Inc.         *\n+ *          Copyright (C) 1992-2007, Free Software Foundation, Inc.         *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n@@ -154,13 +154,13 @@ unsigned char __gnat_using_gnu_linker = 0;\n const char *__gnat_object_library_extension = \".a\";\n \n #elif defined (__FreeBSD__)\n-char *__gnat_object_file_option = \"\";\n-char *__gnat_run_path_option = \"-Wl,-rpath,\";\n+const char *__gnat_object_file_option = \"\";\n+const char *__gnat_run_path_option = \"-Wl,-rpath,\";\n char __gnat_shared_libgnat_default = STATIC;\n int __gnat_link_max = 8192;\n unsigned char __gnat_objlist_file_supported = 1;\n unsigned char __gnat_using_gnu_linker = 1;\n-char *__gnat_object_library_extension = \".a\";\n+const char *__gnat_object_library_extension = \".a\";\n \n #elif defined (linux)\n const char *__gnat_object_file_option = \"\";"}, {"sha": "be6aeec4c30f89a52dda04b9a83907d0e56eaa3d", "filename": "gcc/ada/mdll-fil.adb", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d/gcc%2Fada%2Fmdll-fil.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d/gcc%2Fada%2Fmdll-fil.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmdll-fil.adb?ref=33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -80,11 +80,12 @@ package body MDLL.Fil is\n    begin\n       if I = 0 then\n          return Filename;\n+\n       else\n          if New_Ext = \"\" then\n-            return Head (Filename, I - 1);\n+            return Filename (Filename'First .. I - 1);\n          else\n-            return Head (Filename, I - 1) & '.' & New_Ext;\n+            return Filename (Filename'First .. I - 1) & '.' & New_Ext;\n          end if;\n       end if;\n    end Ext_To;"}, {"sha": "71d27e06062e97770fdfb9b897481cadef5fa86b", "filename": "gcc/ada/mdll.adb", "status": "modified", "additions": 32, "deletions": 19, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d/gcc%2Fada%2Fmdll.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d/gcc%2Fada%2Fmdll.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmdll.adb?ref=33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -25,7 +25,7 @@\n ------------------------------------------------------------------------------\n \n --  This package provides the core high level routines used by GNATDLL\n---  to build Windows DLL\n+--  to build Windows DLL.\n \n with Ada.Text_IO;\n \n@@ -38,6 +38,10 @@ package body MDLL is\n    use Ada;\n    use GNAT;\n \n+   --  Convention used for the library names on Windows:\n+   --  DLL:            <name>.dll\n+   --  Import library: lib<name>.dll\n+\n    function Get_Dll_Name (Lib_Filename : String) return String;\n    --  Returns <Lib_Filename> if it contains a file extension otherwise it\n    --  returns <Lib_Filename>.dll.\n@@ -69,7 +73,7 @@ package body MDLL is\n       Bas_File : aliased constant String := Base_Filename & \".base\";\n       Dll_File : aliased          String := Get_Dll_Name (Lib_Filename);\n       Exp_File : aliased          String := Base_Filename & \".exp\";\n-      Lib_File : aliased constant String := \"lib\" & Base_Filename & \".a\";\n+      Lib_File : aliased constant String := \"lib\" & Base_Filename & \".dll.a\";\n \n       Bas_Opt  : aliased String := \"-Wl,--base-file,\" & Bas_File;\n       Lib_Opt  : aliased String := \"-mdll\";\n@@ -450,10 +454,32 @@ package body MDLL is\n       --------------------------\n \n       procedure Build_Import_Library (Lib_Filename : String) is\n+\n+         function No_Lib_Prefix (Filename : String) return String;\n+         --  Return Filename without the lib prefix if present\n+\n+         -------------------\n+         -- No_Lib_Prefix --\n+         -------------------\n+\n+         function No_Lib_Prefix (Filename : String) return String is\n+         begin\n+            if Filename (Filename'First .. Filename'First + 2) = \"lib\" then\n+               return Filename (Filename'First + 3 .. Filename'Last);\n+            else\n+               return Filename;\n+            end if;\n+         end No_Lib_Prefix;\n+\n+         --  Local variables\n+\n          Def_File      : String renames Def_Filename;\n          Dll_File      : constant String := Get_Dll_Name (Lib_Filename);\n-         Base_Filename : constant String := MDLL.Fil.Ext_To (Lib_Filename);\n-         Lib_File      : constant String := \"lib\" & Base_Filename & \".a\";\n+         Base_Filename : constant String :=\n+                           MDLL.Fil.Ext_To (No_Lib_Prefix (Lib_Filename));\n+         Lib_File      : constant String := \"lib\" & Base_Filename & \".dll.a\";\n+\n+      --  Start of processing for Build_Import_Library\n \n       begin\n          if not Quiet then\n@@ -469,20 +495,7 @@ package body MDLL is\n    --  Start of processing for Build_Import_Library\n \n    begin\n-      --  If the library has the form lib<name>.a then the def file should be\n-      --  <name>.def and the DLL to link against <name>.dll. This is a Windows\n-      --  convention and we try as much as possible to follow the platform\n-      --  convention.\n-\n-      if Lib_Filename'Length > 3\n-        and then\n-          Lib_Filename (Lib_Filename'First .. Lib_Filename'First + 2) = \"lib\"\n-      then\n-         Build_Import_Library\n-           (Lib_Filename (Lib_Filename'First + 3 .. Lib_Filename'Last));\n-      else\n-         Build_Import_Library (Lib_Filename);\n-      end if;\n+      Build_Import_Library (Lib_Filename);\n    end Build_Import_Library;\n \n    ------------------"}, {"sha": "0aedfe6d125f109e852775f5be8bf7a13da65397", "filename": "gcc/ada/mlib-utl.adb", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d/gcc%2Fada%2Fmlib-utl.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d/gcc%2Fada%2Fmlib-utl.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-utl.adb?ref=33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d", "patch": "@@ -36,7 +36,7 @@ with System;\n \n package body MLib.Utl is\n \n-   Gcc_Name : constant String := Osint.Program_Name (\"gcc\").all;\n+   Gcc_Name : String_Access;\n    --  Default value of the \"gcc\" executable used in procedure Gcc\n \n    Gcc_Exec : String_Access;\n@@ -408,10 +408,14 @@ package body MLib.Utl is\n    begin\n       if Driver_Name = No_Name then\n          if Gcc_Exec = null then\n-            Gcc_Exec := Locate_Exec_On_Path (Gcc_Name);\n+            if Gcc_Name = null then\n+               Gcc_Name :=  Osint.Program_Name (\"gcc\");\n+            end if;\n+\n+            Gcc_Exec := Locate_Exec_On_Path (Gcc_Name.all);\n \n             if Gcc_Exec = null then\n-               Fail (Gcc_Name, \" not found in path\");\n+               Fail (Gcc_Name.all, \" not found in path\");\n             end if;\n          end if;\n \n@@ -579,7 +583,7 @@ package body MLib.Utl is\n \n       if not Success then\n          if Driver_Name = No_Name then\n-            Fail (Gcc_Name, \" execution error\");\n+            Fail (Gcc_Name.all, \" execution error\");\n          else\n             Fail (Get_Name_String (Driver_Name), \" execution error\");\n          end if;"}, {"sha": "13c75bee752fd1af2223c8347585eaeb324bf823", "filename": "gcc/ada/osint.adb", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d/gcc%2Fada%2Fosint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d/gcc%2Fada%2Fosint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fosint.adb?ref=33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d", "patch": "@@ -857,8 +857,7 @@ package body Osint is\n       --  If we come here, the user has typed the executable name with no\n       --  directory prefix.\n \n-      return Get_Install_Dir\n-        (System.OS_Lib.Locate_Exec_On_Path (Exec_Name.all).all);\n+      return Get_Install_Dir (Locate_Exec_On_Path (Exec_Name.all).all);\n    end Executable_Prefix;\n \n    ------------------\n@@ -1055,6 +1054,11 @@ package body Osint is\n    begin\n       Fill_Arg (Command_Name'Address, 0);\n \n+      if Command_Name = \"\" then\n+         Name_Len := 0;\n+         return;\n+      end if;\n+\n       --  The program name might be specified by a full path name. However,\n       --  we don't want to print that all out in an error message, so the\n       --  path might need to be stripped away.\n@@ -1824,6 +1828,16 @@ package body Osint is\n       return Name_Enter;\n    end Object_File_Name;\n \n+   -------------------------------\n+   -- OS_Exit_Through_Exception --\n+   -------------------------------\n+\n+   procedure OS_Exit_Through_Exception (Status : Integer) is\n+   begin\n+      Current_Exit_Status := Status;\n+      raise Types.Terminate_Program;\n+   end OS_Exit_Through_Exception;\n+\n    --------------------------\n    -- OS_Time_To_GNAT_Time --\n    --------------------------"}, {"sha": "d97d451d245016f02b6ef433c43e5aa5788f5c2d", "filename": "gcc/ada/osint.ads", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d/gcc%2Fada%2Fosint.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d/gcc%2Fada%2Fosint.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fosint.ads?ref=33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d", "patch": "@@ -520,6 +520,14 @@ package Osint is\n    -- Termination --\n    -----------------\n \n+   Current_Exit_Status : Integer := 0;\n+   --  Exit status that is set with procedure OS_Exit_Through_Exception below\n+   --  and can be used in exception handler for Types.Terminate_Program to call\n+   --  Set_Exit_Status as the last action of the program.\n+\n+   procedure OS_Exit_Through_Exception (Status : Integer);\n+   --  Set the Current_Exit_Status, then raise Types.Terminate_Program\n+\n    type Exit_Code_Type is (\n       E_Success,    -- No warnings or errors\n       E_Warnings,   -- Compiler warnings generated"}, {"sha": "1faef63d60df060a5c6ba6a65013f9fb1c0d56ed", "filename": "gcc/ada/par-load.adb", "status": "modified", "additions": 10, "deletions": 13, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d/gcc%2Fada%2Fpar-load.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d/gcc%2Fada%2Fpar-load.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-load.adb?ref=33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d", "patch": "@@ -322,11 +322,10 @@ begin\n       if Spec_Name /= No_Unit_Name then\n          Unum :=\n            Load_Unit\n-             (Load_Name         => Spec_Name,\n-              Required          => True,\n-              Subunit           => False,\n-              Error_Node        => Curunit,\n-              From_Limited_With => From_Limited_With);\n+             (Load_Name  => Spec_Name,\n+              Required   => True,\n+              Subunit    => False,\n+              Error_Node => Curunit);\n \n          if Unum /= No_Unit then\n             Set_Parent_Spec (Unit (Curunit), Cunit (Unum));\n@@ -389,14 +388,12 @@ begin\n \n             Unum :=\n               Load_Unit\n-                (Load_Name         => Spec_Name,\n-                 Required          => False,\n-                 Subunit           => False,\n-                 Error_Node        => With_Node,\n-                 Renamings         => True,\n-                 From_Limited_With => From_Limited_With\n-                                        or else\n-                                      Limited_Present (Context_Node));\n+                (Load_Name  => Spec_Name,\n+                 Required   => False,\n+                 Subunit    => False,\n+                 Error_Node => With_Node,\n+                 Renamings  => True,\n+                 With_Node  => Context_Node);\n \n             --  If we find the unit, then set spec pointer in the N_With_Clause\n             --  to point to the compilation unit for the spec. Remember that"}, {"sha": "56e1ce0a3df902710a0f4386ed1a5a12be83a950", "filename": "gcc/ada/rtsfind.adb", "status": "modified", "additions": 31, "deletions": 8, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d/gcc%2Fada%2Frtsfind.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d/gcc%2Fada%2Frtsfind.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frtsfind.adb?ref=33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d", "patch": "@@ -33,6 +33,7 @@ with Elists;   use Elists;\n with Errout;   use Errout;\n with Fname;    use Fname;\n with Fname.UF; use Fname.UF;\n+with Gnatvsn;  use Gnatvsn;\n with Lib;      use Lib;\n with Lib.Load; use Lib.Load;\n with Namet;    use Namet;\n@@ -862,9 +863,10 @@ package body Rtsfind is\n \n       procedure Check_RPC;\n       --  Reject programs that make use of distribution features not supported\n-      --  on the current target. On such targets (VMS, Vxworks, others?) we\n-      --  only provide a minimal body for System.Rpc that only supplies an\n-      --  implementation of partition_id.\n+      --  on the current target. Also check that the PCS is compatible with\n+      --  the code generator version. On such targets (VMS, Vxworks, others?)\n+      --  we provide a minimal body for System.Rpc that only supplies an\n+      --  implementation of Partition_Id.\n \n       function Find_Local_Entity (E : RE_Id) return Entity_Id;\n       --  This function is used when entity E is in this compilation's main\n@@ -875,6 +877,25 @@ package body Rtsfind is\n       ---------------\n \n       procedure Check_RPC is\n+\n+         procedure Check_RPC_Failure (Msg : String);\n+         pragma No_Return (Check_RPC_Failure);\n+         --  Display Msg on standard error and raise Unrecoverable_Error\n+\n+         -----------------------\n+         -- Check_RPC_Failure --\n+         -----------------------\n+\n+         procedure Check_RPC_Failure (Msg : String) is\n+         begin\n+            Set_Standard_Error;\n+            Write_Str (Msg);\n+            Write_Eol;\n+            raise Unrecoverable_Error;\n+         end Check_RPC_Failure;\n+\n+      --  Start of processing for Check_RPC\n+\n       begin\n          --  Bypass this check if debug flag -gnatdR set\n \n@@ -897,12 +918,14 @@ package body Rtsfind is\n                      E = RE_Params_Stream_Type\n                        or else\n                      E = RE_Request_Access)\n-           and then Get_PCS_Name = Name_No_DSA\n          then\n-            Set_Standard_Error;\n-            Write_Str (\"distribution feature not supported\");\n-            Write_Eol;\n-            raise Unrecoverable_Error;\n+            if Get_PCS_Name = Name_No_DSA then\n+               Check_RPC_Failure (\"distribution feature not supported\");\n+\n+            elsif Get_PCS_Version /= Gnatvsn.PCS_Version_Number then\n+               Check_RPC_Failure (\"PCS version mismatch\");\n+\n+            end if;\n          end if;\n       end Check_RPC;\n "}, {"sha": "8d5d39b9c0e3365fa387f0a537065c731c0eeaaa", "filename": "gcc/ada/s-gearop.adb", "status": "modified", "additions": 17, "deletions": 7, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d/gcc%2Fada%2Fs-gearop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d/gcc%2Fada%2Fs-gearop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-gearop.adb?ref=33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---            Copyright (C) 2006, Free Software Foundation, Inc.            --\n+--         Copyright (C) 2006-2007, Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -151,7 +151,12 @@ package body System.Generic_Array_Operations is\n \n       for J in R'Range (1) loop\n          for K in R'Range (2) loop\n-            R (J, K) := Operation (Left (J, K), Right (J, K));\n+            R (J, K) :=\n+              Operation\n+                (Left (J, K),\n+                 Right\n+                   (J - R'First (1) + Right'First (1),\n+                    K - R'First (2) + Right'First (2)));\n          end loop;\n       end loop;\n \n@@ -179,7 +184,12 @@ package body System.Generic_Array_Operations is\n \n       for J in R'Range (1) loop\n          for K in R'Range (2) loop\n-            R (J, K) := Operation (X (J, K), Y (J, K), Z);\n+            R (J, K) :=\n+              Operation\n+                (X (J, K),\n+                 Y (J - R'First (1) + Y'First (1),\n+                    K - R'First (2) + Y'First (2)),\n+                 Z);\n          end loop;\n       end loop;\n \n@@ -203,7 +213,7 @@ package body System.Generic_Array_Operations is\n       end if;\n \n       for J in R'Range loop\n-         R (J) := Operation (Left (J), Right (J));\n+         R (J) := Operation (Left (J), Right (J - R'First + Right'First));\n       end loop;\n \n       return R;\n@@ -227,7 +237,7 @@ package body System.Generic_Array_Operations is\n       end if;\n \n       for J in R'Range loop\n-         R (J) := Operation (X (J), Y (J), Z);\n+         R (J) := Operation (X (J), Y (J - X'First + Y'First), Z);\n       end loop;\n \n       return R;\n@@ -402,8 +412,8 @@ package body System.Generic_Array_Operations is\n    begin\n       for J in R'Range (1) loop\n          for K in R'Range (2) loop\n-            R (J, K) := A (J - R'First (1) + A'First (1),\n-                           K - R'First (2) + A'First (2));\n+            R (J, K) := A (K - R'First (2) + A'First (1),\n+                           J - R'First (1) + A'First (2));\n          end loop;\n       end loop;\n    end Transpose;"}, {"sha": "789b0afce672153232eced257da5596b2f70c213", "filename": "gcc/ada/s-gecobl.adb", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d/gcc%2Fada%2Fs-gecobl.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d/gcc%2Fada%2Fs-gecobl.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-gecobl.adb?ref=33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---            Copyright (C) 2006, Free Software Foundation, Inc.            --\n+--         Copyright (C) 2006-2007, Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -146,7 +146,7 @@ package body System.Generic_Complex_BLAS is\n             function Conv_X is new Unchecked_Conversion (Address, X_Ptr);\n             function Conv_Y is new Unchecked_Conversion (Address, Y_Ptr);\n          begin\n-            return To_Complex (BLAS.cdot (N, Conv_X (X'Address).all, Inc_X,\n+            return To_Complex (BLAS.cdotu (N, Conv_X (X'Address).all, Inc_X,\n                                   Conv_Y (Y'Address).all, Inc_Y));\n          end;\n \n@@ -157,12 +157,12 @@ package body System.Generic_Complex_BLAS is\n             function Conv_X is new Unchecked_Conversion (Address, X_Ptr);\n             function Conv_Y is new Unchecked_Conversion (Address, Y_Ptr);\n          begin\n-            return To_Complex (BLAS.zdot (N, Conv_X (X'Address).all, Inc_X,\n+            return To_Complex (BLAS.zdotu (N, Conv_X (X'Address).all, Inc_X,\n                                      Conv_Y (Y'Address).all, Inc_Y));\n          end;\n \n       else\n-         return To_Complex (BLAS.zdot (N, To_Double_Complex (X), Inc_X,\n+         return To_Complex (BLAS.zdotu (N, To_Double_Complex (X), Inc_X,\n                                   To_Double_Complex (Y), Inc_Y));\n       end if;\n    end dot;\n@@ -177,7 +177,7 @@ package body System.Generic_Complex_BLAS is\n       M       : Positive;\n       N       : Positive;\n       K       : Positive;\n-      Alpha   : Complex := (1.0, 1.0);\n+      Alpha   : Complex := (1.0, 0.0);\n       A       : Complex_Matrix;\n       Ld_A    : Integer;\n       B       : Complex_Matrix;\n@@ -251,7 +251,7 @@ package body System.Generic_Complex_BLAS is\n      (Trans : access constant Character;\n       M     : Natural := 0;\n       N     : Natural := 0;\n-      Alpha : Complex := (1.0, 1.0);\n+      Alpha : Complex := (1.0, 0.0);\n       A     : Complex_Matrix;\n       Ld_A  : Positive;\n       X     : Complex_Vector;"}, {"sha": "533e7ae587516fcadd35199b7ec83dfa0dc515b6", "filename": "gcc/ada/s-gecobl.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d/gcc%2Fada%2Fs-gecobl.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d/gcc%2Fada%2Fs-gecobl.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-gecobl.ads?ref=33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---            Copyright (C) 2006, Free Software Foundation, Inc.            --\n+--         Copyright (C) 2006-2007, Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -73,7 +73,7 @@ package System.Generic_Complex_BLAS is\n      (Trans : access constant Character;\n       M     : Natural := 0;\n       N     : Natural := 0;\n-      Alpha : Complex := (1.0, 1.0);\n+      Alpha : Complex := (1.0, 0.0);\n       A     : Complex_Matrix;\n       Ld_A  : Positive;\n       X     : Complex_Vector;\n@@ -92,7 +92,7 @@ package System.Generic_Complex_BLAS is\n       M       : Positive;\n       N       : Positive;\n       K       : Positive;\n-      Alpha   : Complex := (1.0, 1.0);\n+      Alpha   : Complex := (1.0, 0.0);\n       A       : Complex_Matrix;\n       Ld_A    : Integer;\n       B       : Complex_Matrix;"}, {"sha": "3641b4cbba1db9d7a8dab68fd6bb1924f0610035", "filename": "gcc/ada/s-gerela.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d/gcc%2Fada%2Fs-gerela.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d/gcc%2Fada%2Fs-gerela.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-gerela.adb?ref=33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d", "patch": "@@ -282,7 +282,7 @@ package body System.Generic_Real_LAPACK is\n       N      : Natural;\n       A      : in out Real_Matrix;\n       Ld_A   : Positive;\n-      Tau    : in Real_Vector;\n+      Tau    : Real_Vector;\n       Work   : out Real_Vector;\n       L_Work : Integer;\n       Info   : access Integer)"}, {"sha": "7b2a5628038c040b38331dc001c522237221b938", "filename": "gcc/ada/s-gerela.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d/gcc%2Fada%2Fs-gerela.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d/gcc%2Fada%2Fs-gerela.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-gerela.ads?ref=33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d", "patch": "@@ -94,7 +94,7 @@ package System.Generic_Real_LAPACK is\n       N      : Natural;\n       A      : in out Real_Matrix;\n       Ld_A   : Positive;\n-      Tau    : in Real_Vector;\n+      Tau    : Real_Vector;\n       Work   : out Real_Vector;\n       L_Work : Integer;\n       Info   : access Integer);"}, {"sha": "c37ab61c546d3983079cdfa4e11cd5a077c85fc2", "filename": "gcc/ada/s-os_lib.adb", "status": "modified", "additions": 44, "deletions": 71, "changes": 115, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d/gcc%2Fada%2Fs-os_lib.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d/gcc%2Fada%2Fs-os_lib.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-os_lib.adb?ref=33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d", "patch": "@@ -1698,18 +1698,13 @@ package body System.OS_Lib is\n       Canonical_File_Addr : System.Address;\n       Canonical_File_Len  : Integer;\n \n-      Need_To_Check_Drive_Letter : Boolean := False;\n-      --  Set to true if Name is an absolute path that starts with \"//\"\n-\n       function Strlen (S : System.Address) return Integer;\n       pragma Import (C, Strlen, \"strlen\");\n \n       function Final_Value (S : String) return String;\n-      --  Make final adjustment to the returned string.\n-      --  To compensate for non standard path name in Interix,\n-      --  if S is \"/x\" or starts with \"/x\", where x is a capital\n-      --  letter 'A' to 'Z', add an additional '/' at the beginning\n-      --  so that the returned value starts with \"//x\".\n+      --  Make final adjustment to the returned string. This function strips\n+      --  trailing directory separators, and folds returned string to lower\n+      --  case if required.\n \n       function Get_Directory  (Dir : String) return String;\n       --  If Dir is not empty, return it, adding a directory separator\n@@ -1727,71 +1722,33 @@ package body System.OS_Lib is\n          Last : Natural;\n \n       begin\n-         --  Interix has the non standard notion of disk drive\n-         --  indicated by two '/' followed by a capital letter\n-         --  'A' .. 'Z'. One of the two '/' may have been removed\n-         --  by Normalize_Pathname. It has to be added again.\n-         --  For other OSes, this should not make no difference.\n-\n-         if Need_To_Check_Drive_Letter\n-           and then S'Length >= 2\n-           and then S (S'First) = '/'\n-           and then S (S'First + 1) in 'A' .. 'Z'\n-           and then (S'Length = 2 or else S (S'First + 2) = '/')\n-         then\n-            declare\n-               Result : String (1 .. S'Length + 1);\n-\n-            begin\n-               Result (1) := '/';\n-               Result (2 .. Result'Last) := S;\n-               Last := Result'Last;\n-\n-               if Fold_To_Lower_Case then\n-                  System.Case_Util.To_Lower (Result);\n-               end if;\n-\n-               --  Remove trailing directory separator, if any\n-\n-               if Last > 1 and then\n-                 (Result (Last) = '/' or else\n-                  Result (Last) = Directory_Separator)\n-               then\n-                  Last := Last - 1;\n-               end if;\n+         if Fold_To_Lower_Case then\n+            System.Case_Util.To_Lower (S1);\n+         end if;\n \n-               return Result (1 .. Last);\n-            end;\n+         --  Remove trailing directory separator, if any\n \n-         else\n-            if Fold_To_Lower_Case then\n-               System.Case_Util.To_Lower (S1);\n-            end if;\n+         Last := S1'Last;\n \n-            --  Remove trailing directory separator, if any\n-\n-            Last := S1'Last;\n+         if Last > 1\n+           and then (S1 (Last) = '/'\n+                       or else\n+                     S1 (Last) = Directory_Separator)\n+         then\n+            --  Special case for Windows: C:\\\n \n-            if Last > 1\n-              and then (S1 (Last) = '/'\n-                          or else\n-                        S1 (Last) = Directory_Separator)\n+            if Last = 3\n+              and then S1 (1) /= Directory_Separator\n+              and then S1 (2) = ':'\n             then\n-               --  Special case for Windows: C:\\\n-\n-               if Last = 3\n-                 and then S1 (1) /= Directory_Separator\n-                 and then S1 (2) = ':'\n-               then\n-                  null;\n+               null;\n \n-               else\n-                  Last := Last - 1;\n-               end if;\n+            else\n+               Last := Last - 1;\n             end if;\n-\n-            return S1 (1 .. Last);\n          end if;\n+\n+         return S1 (1 .. Last);\n       end Final_Value;\n \n       -------------------\n@@ -1956,12 +1913,6 @@ package body System.OS_Lib is\n             Last := Reference_Dir'Length;\n          end if;\n \n-         --  If name starts with \"//\", we may have a drive letter on Interix\n-\n-         if Last = 1 and then End_Path >= 3 then\n-            Need_To_Check_Drive_Letter := (Path_Buffer (1 .. 2)) = \"//\";\n-         end if;\n-\n          Start  := Last + 1;\n          Finish := Last;\n \n@@ -2167,6 +2118,28 @@ package body System.OS_Lib is\n       return Open_Read_Write (C_Name (C_Name'First)'Address, Fmode);\n    end Open_Read_Write;\n \n+   -------------\n+   -- OS_Exit --\n+   -------------\n+\n+   procedure OS_Exit (Status : Integer) is\n+   begin\n+      OS_Exit_Ptr (Status);\n+      raise Program_Error;\n+   end OS_Exit;\n+\n+   ---------------------\n+   -- OS_Exit_Default --\n+   ---------------------\n+\n+   procedure OS_Exit_Default (Status : Integer) is\n+      procedure GNAT_OS_Exit (Status : Integer);\n+      pragma Import (C, GNAT_OS_Exit, \"__gnat_os_exit\");\n+      pragma No_Return (GNAT_OS_Exit);\n+   begin\n+      GNAT_OS_Exit (Status);\n+   end OS_Exit_Default;\n+\n    --------------------\n    -- Pid_To_Integer --\n    --------------------"}, {"sha": "cfa41480f435945351e35f85433c080b82bc80b9", "filename": "gcc/ada/s-os_lib.ads", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d/gcc%2Fada%2Fs-os_lib.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d/gcc%2Fada%2Fs-os_lib.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-os_lib.ads?ref=33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d", "patch": "@@ -814,12 +814,24 @@ package System.OS_Lib is\n    --  changes made by Setenv calls. This procedure is not available on VMS.\n \n    procedure OS_Exit (Status : Integer);\n-   pragma Import (C, OS_Exit, \"__gnat_os_exit\");\n    pragma No_Return (OS_Exit);\n+\n    --  Exit to OS with given status code (program is terminated). Note that\n    --  this is abrupt termination. All tasks are immediately terminated. There\n    --  are no finalization or other Ada-specific cleanup actions performed. On\n-   --  systems with atexit handlers (such as Unix and Windows) are performed.\n+   --  systems with atexit handlers (such as Unix and Windows), atexit handlers\n+   --  are called.\n+\n+   type OS_Exit_Subprogram is access procedure (Status : Integer);\n+\n+   procedure OS_Exit_Default (Status : Integer);\n+   pragma No_Return (OS_Exit_Default);\n+   --  Default implementation of procedure OS_Exit\n+\n+   OS_Exit_Ptr : OS_Exit_Subprogram := OS_Exit_Default'Access;\n+   --  OS_Exit is implemented through this access value. It it then possible to\n+   --  change the implementation of OS_Exit by redirecting OS_Exit_Ptr to an\n+   --  other implementation.\n \n    procedure OS_Abort;\n    pragma Import (C, OS_Abort, \"abort\");"}, {"sha": "39b96c97deae23d2d591edbff3f6e0adb7a9b80f", "filename": "gcc/ada/s-parint.ads", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d/gcc%2Fada%2Fs-parint.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d/gcc%2Fada%2Fs-parint.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-parint.ads?ref=33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---          Copyright (C) 1995-2006, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1995-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -45,6 +45,12 @@ package System.Partition_Interface is\n \n    type DSA_Implementation_Name is (No_DSA, GARLIC_DSA, PolyORB_DSA);\n    DSA_Implementation : constant DSA_Implementation_Name := No_DSA;\n+   --  Identification of this DSA implementation variant\n+\n+   PCS_Version : constant := 1;\n+   --  Version of the PCS API (for Exp_Dist consistency check).\n+   --  This version number is matched against Gnatvsn.PCS_Version_Number to\n+   --  ensure that the versions of Exp_Dist and the PCS are consistent.\n \n    --  RCI receiving stubs contain a table of descriptors for\n    --  all user subprograms exported by the unit."}, {"sha": "65930a6d9f01326f76c1bf8d6fac7f303d5a09f8", "filename": "gcc/ada/sem_ch7.adb", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d/gcc%2Fada%2Fsem_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d/gcc%2Fada%2Fsem_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch7.adb?ref=33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d", "patch": "@@ -1100,14 +1100,18 @@ package body Sem_Ch7 is\n \n          --  The current compilation unit may include private with_clauses,\n          --  which are visible in the private part of the current nested\n-         --  package, and have to be installed now.\n+         --  package, and have to be installed now. This is not done for\n+         --  nested instantiations, where the private with_clauses of the\n+         --  enclosing unit have no effect once the instantiation info is\n+         --  established and we start analyzing the package declaration.\n \n          declare\n             Comp_Unit : constant Entity_Id := Cunit_Entity (Current_Sem_Unit);\n          begin\n             if (Ekind (Comp_Unit) = E_Package\n                  or else Ekind (Comp_Unit) = E_Generic_Package)\n               and then not In_Private_Part (Comp_Unit)\n+              and then not In_Instance\n             then\n                Install_Private_With_Clauses (Comp_Unit);\n                Private_With_Clauses_Installed := True;\n@@ -2088,7 +2092,7 @@ package body Sem_Ch7 is\n \n             else\n                Error_Msg_N\n-                  (\"missing full declaration for deferred constant ('R'M 7.4)\",\n+                  (\"missing full declaration for deferred constant (RM 7.4)\",\n                      Id);\n \n                if Is_Limited_Type (Etype (Id)) then"}, {"sha": "87007eca9b979235ff4d93220bb95c574fa7262a", "filename": "gcc/ada/sem_dist.adb", "status": "modified", "additions": 30, "deletions": 5, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d/gcc%2Fada%2Fsem_dist.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d/gcc%2Fada%2Fsem_dist.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_dist.adb?ref=33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -36,12 +36,14 @@ with Namet;    use Namet;\n with Opt;      use Opt;\n with Rtsfind;  use Rtsfind;\n with Sem;      use Sem;\n+with Sem_Eval; use Sem_Eval;\n with Sem_Res;  use Sem_Res;\n with Sem_Util; use Sem_Util;\n with Sinfo;    use Sinfo;\n with Stand;    use Stand;\n with Stringt;  use Stringt;\n with Tbuild;   use Tbuild;\n+with Uintp;    use Uintp;\n \n package body Sem_Dist is\n \n@@ -202,13 +204,36 @@ package body Sem_Dist is\n    ------------------\n \n    function Get_PCS_Name return PCS_Names is\n-      PCS_Name : constant PCS_Names :=\n-                   Chars (Entity (Expression\n-                                    (Parent (RTE (RE_DSA_Implementation)))));\n    begin\n-      return PCS_Name;\n+      return\n+        Chars (Entity (Expression (Parent (RTE (RE_DSA_Implementation)))));\n    end Get_PCS_Name;\n \n+   ---------------------\n+   -- Get_PCS_Version --\n+   ---------------------\n+\n+   function Get_PCS_Version return Int is\n+      PCS_Version_Entity : Entity_Id;\n+      PCS_Version        : Int;\n+\n+   begin\n+      if RTE_Available (RE_PCS_Version) then\n+         PCS_Version_Entity := RTE (RE_PCS_Version);\n+         pragma Assert (Ekind (PCS_Version_Entity) = E_Named_Integer);\n+         PCS_Version :=\n+           UI_To_Int (Expr_Value (Constant_Value (PCS_Version_Entity)));\n+\n+      else\n+         --  Case of System.Partition_Interface.PCS_Version not found:\n+         --  return a null version.\n+\n+         PCS_Version := 0;\n+      end if;\n+\n+      return PCS_Version;\n+   end Get_PCS_Version;\n+\n    ------------------------\n    -- Is_All_Remote_Call --\n    ------------------------"}, {"sha": "aad314d5209b1ec3cfd38417ee42e1a5a10781b2", "filename": "gcc/ada/sem_dist.ads", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d/gcc%2Fada%2Fsem_dist.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d/gcc%2Fada%2Fsem_dist.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_dist.ads?ref=33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -35,6 +35,12 @@ package Sem_Dist is\n    --  Return the name of a literal of type System.Partition_Interface.\n    --  DSA_Implementation_Type indicating what PCS is currently in use.\n \n+   function Get_PCS_Version return Int;\n+   --  Return the version number of the PCS API implemented by the PCS.\n+   --  The consistency of this version with the one expected by Exp_Dist\n+   --  (Gnatvsn.PCS_Version_Number) in Rtsfind.Check_RPC.\n+   --  If no PCS version information is available, 0 is returned.\n+\n    procedure Add_Stub_Constructs (N : Node_Id);\n    --  Create the stubs constructs for a remote call interface package\n    --  specification or body or for a shared passive specification. For caller"}, {"sha": "033b60f794510039cf19b30af0982520368713c5", "filename": "gcc/ada/sinfo.adb", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d/gcc%2Fada%2Fsinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d/gcc%2Fada%2Fsinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.adb?ref=33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d", "patch": "@@ -1550,14 +1550,6 @@ package body Sinfo is\n       return Flag7 (N);\n    end Is_Asynchronous_Call_Block;\n \n-   function Is_Coextension\n-      (N : Node_Id) return Boolean is\n-   begin\n-      pragma Assert (False\n-        or else NT (N).Nkind = N_Allocator);\n-      return Flag18 (N);\n-   end Is_Coextension;\n-\n    function Is_Component_Left_Opnd\n       (N : Node_Id) return Boolean is\n    begin\n@@ -1582,6 +1574,14 @@ package body Sinfo is\n       return Flag16 (N);\n    end Is_Controlling_Actual;\n \n+   function Is_Dynamic_Coextension\n+      (N : Node_Id) return Boolean is\n+   begin\n+      pragma Assert (False\n+        or else NT (N).Nkind = N_Allocator);\n+      return Flag18 (N);\n+   end Is_Dynamic_Coextension;\n+\n    function Is_Entry_Barrier_Function\n       (N : Node_Id) return Boolean is\n    begin\n@@ -4249,14 +4249,6 @@ package body Sinfo is\n       Set_Flag7 (N, Val);\n    end Set_Is_Asynchronous_Call_Block;\n \n-   procedure Set_Is_Coextension\n-      (N : Node_Id; Val : Boolean := True) is\n-   begin\n-      pragma Assert (False\n-        or else NT (N).Nkind = N_Allocator);\n-      Set_Flag18 (N, Val);\n-   end Set_Is_Coextension;\n-\n    procedure Set_Is_Component_Left_Opnd\n       (N : Node_Id; Val : Boolean := True) is\n    begin\n@@ -4281,6 +4273,14 @@ package body Sinfo is\n       Set_Flag16 (N, Val);\n    end Set_Is_Controlling_Actual;\n \n+   procedure Set_Is_Dynamic_Coextension\n+      (N : Node_Id; Val : Boolean := True) is\n+   begin\n+      pragma Assert (False\n+        or else NT (N).Nkind = N_Allocator);\n+      Set_Flag18 (N, Val);\n+   end Set_Is_Dynamic_Coextension;\n+\n    procedure Set_Is_Entry_Barrier_Function\n       (N : Node_Id; Val : Boolean := True) is\n    begin"}, {"sha": "403c5a2437f409d464662b13089e175b6cf73a3a", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 38, "deletions": 29, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d", "patch": "@@ -630,7 +630,7 @@ package Sinfo is\n    --    starting at the highest addressed element. Note that if neither of the\n    --    flags Forwards_OK or Backwards_OK is set, it means that the front end\n    --    could not determine that either direction is definitely safe, and a\n-   --    runtime check is required.\n+   --    runtime check may be required if the backend cannot figure it out.\n \n    --  Body_To_Inline (Node3-Sem)\n    --    present in subprogram declarations. Denotes analyzed but unexpanded\n@@ -651,7 +651,7 @@ package Sinfo is\n    --    permitted (in Ada 83 or Ada 95).\n \n    --  By_Ref (Flag5-Sem)\n-   --    A flag present in N_Return_Statement and\n+   --    A flag present in N_Simple_Return_Statement and\n    --    N_Extended_Return_Statement.\n    --    It is set when the returned expression is already allocated on the\n    --    secondary stack and thus the result is passed by reference rather\n@@ -671,7 +671,7 @@ package Sinfo is\n    --    access discriminants of the allocated object.\n \n    --  Comes_From_Extended_Return_Statement (Flag18-Sem)\n-   --    Present in N_Return_Statement nodes. True if this node was\n+   --    Present in N_Simple_Return_Statement nodes. True if this node was\n    --    constructed as part of the expansion of an\n    --    N_Extended_Return_Statement.\n \n@@ -866,7 +866,7 @@ package Sinfo is\n    --  Do_Tag_Check (Flag13-Sem)\n    --    This flag is set on an N_Assignment_Statement, N_Function_Call,\n    --    N_Procedure_Call_Statement, N_Type_Conversion,\n-   --    N_Return_Statement, or N_Extended_Return_Statement\n+   --    N_Simple_Return_Statement, or N_Extended_Return_Statement\n    --    node to indicate that the tag check can be suppressed. It is not\n    --    yet decided how this flag is used (TBD ???).\n \n@@ -1145,12 +1145,6 @@ package Sinfo is\n    --    expansion of an asynchronous entry call. Such a block needs cleanup\n    --    handler to assure that the call is cancelled.\n \n-   --  Is_Coextension (Flag18-Sem)\n-   --    Present in allocator nodes, to indicate that this is an allocator\n-   --    for an access discriminant of a dynamically allocated object. The\n-   --    coextension must be deallocated and finalized at the same time as\n-   --    the enclosing object.\n-\n    --  Is_Component_Left_Opnd  (Flag13-Sem)\n    --  Is_Component_Right_Opnd (Flag14-Sem)\n    --    Present in concatenation nodes, to indicate that the corresponding\n@@ -1162,6 +1156,12 @@ package Sinfo is\n    --    a dispatching call. It is off in all other cases. See Sem_Disp for\n    --    details of its use.\n \n+   --  Is_Dynamic_Coextension (Flag18-Sem)\n+   --    Present in allocator nodes, to indicate that this is an allocator\n+   --    for an access discriminant of a dynamically allocated object. The\n+   --    coextension must be deallocated and finalized at the same time as\n+   --    the enclosing object.\n+\n    --  Is_Entry_Barrier_Function (Flag8-Sem)\n    --    This flag is set in an N_Subprogram_Body node which is the expansion\n    --    of an entry barrier from a protected entry body. It is used for the\n@@ -1462,11 +1462,11 @@ package Sinfo is\n    --    is used to clarify output from the packed array cases.\n \n    --  Procedure_To_Call (Node2-Sem)\n-   --    Present in N_Allocator, N_Free_Statement, N_Return_Statement,\n+   --    Present in N_Allocator, N_Free_Statement, N_Simple_Return_Statement,\n    --    and N_Extended_Return_Statement nodes. References the entity for the\n    --    declaration of the procedure to be called to accomplish the required\n    --    operation (i.e. for the Allocate procedure in the case of N_Allocator\n-   --    and N_Return_Statement and N_Extended_Return_Statement (for\n+   --    and N_Simple_Return_Statement and N_Extended_Return_Statement (for\n    --    allocating the return value), and for the Deallocate procedure in the\n    --    case of N_Free_Statement.\n \n@@ -1497,7 +1497,7 @@ package Sinfo is\n    --    renaming declaration allows registering of the proper exception name.\n \n    --  Return_Statement_Entity (Node5-Sem)\n-   --    Present in N_Return_Statement and N_Extended_Return_Statement.\n+   --    Present in N_Simple_Return_Statement and N_Extended_Return_Statement.\n    --    Points to an E_Return_Statement representing the return statement.\n \n    --  Return_Object_Declarations (List3)\n@@ -1547,8 +1547,8 @@ package Sinfo is\n    --    Static_Processing_OK flag set.\n \n    --  Storage_Pool (Node1-Sem)\n-   --    Present in N_Allocator, N_Free_Statement, N_Return_Statement, and\n-   --    N_Extended_Return_Statement nodes. References the entity for the\n+   --    Present in N_Allocator, N_Free_Statement, N_Simple_Return_Statement,\n+   --    and N_Extended_Return_Statement nodes. References the entity for the\n    --    storage pool to be used for the allocate or free call or for the\n    --    allocation of the returned value from function. Empty indicates that\n    --    the global default default pool is to be used. Note that in the case\n@@ -3666,7 +3666,7 @@ package Sinfo is\n       --  No_Initialization (Flag13-Sem)\n       --  Is_Static_Coextension (Flag14-Sem)\n       --  Do_Storage_Check (Flag17-Sem)\n-      --  Is_Coextension (Flag18-Sem)\n+      --  Is_Dynamic_Coextension (Flag18-Sem)\n       --  plus fields for expression\n \n       ---------------------------------\n@@ -4347,7 +4347,9 @@ package Sinfo is\n \n       --  RETURN_SUBTYPE_INDICATION ::= SUBTYPE_INDICATION | ACCESS_DEFINITION\n \n-      --  So in Ada 2005, RETURN_STATEMENT is no longer a nonterminal\n+      --  So in Ada 2005, RETURN_STATEMENT is no longer a nonterminal, but\n+      --  \"return statement\" is defined in 6.5 to mean a\n+      --  SIMPLE_RETURN_STATEMENT or an EXTENDED_RETURN_STATEMENT.\n \n       --  N_Return_Statement\n       --  Sloc points to RETURN\n@@ -4359,8 +4361,11 @@ package Sinfo is\n       --  By_Ref (Flag5-Sem)\n       --  Comes_From_Extended_Return_Statement (Flag18-Sem)\n \n-      --  ???N_Return_Statement represents a simple_return_statement,\n-      --  and should be renamed to N_Simple_Return_Statement.\n+      --  N_Return_Statement represents a simple_return_statement, and is\n+      --  renamed to be N_Simple_Return_Statement below. Clients should refer\n+      --  to N_Simple_Return_Statement. We retain N_Return_Statement because\n+      --  that's how gigi knows it. See also renaming of Make_Return_Statement\n+      --  as Make_Simple_Return_Statement in Sem_Util.\n \n       --  Note: Return_Statement_Entity points to an E_Return_Statement\n \n@@ -4391,7 +4396,7 @@ package Sinfo is\n       --  the Return_Statement_Entity represents the statement itself, and the\n       --  Defining_Identifier of the Object_Declaration in\n       --  Return_Object_Declarations represents the object being\n-      --  returned. N_Return_Statement has only the former.\n+      --  returned. N_Simple_Return_Statement has only the former.\n \n       ------------------------------\n       -- 7.1  Package Declaration --\n@@ -7091,7 +7096,7 @@ package Sinfo is\n       N_Null_Statement,\n       N_Raise_Statement,\n       N_Requeue_Statement,\n-      N_Return_Statement,\n+      N_Return_Statement, -- renamed as N_Simple_Return_Statement in Sem_Util\n       N_Extended_Return_Statement,\n       N_Selective_Accept,\n       N_Timed_Entry_Call,\n@@ -7850,9 +7855,6 @@ package Sinfo is\n    function Is_Asynchronous_Call_Block\n      (N : Node_Id) return Boolean;    -- Flag7\n \n-   function Is_Coextension\n-     (N : Node_Id) return Boolean;    -- Flag18\n-\n    function Is_Component_Left_Opnd\n      (N : Node_Id) return Boolean;    -- Flag13\n \n@@ -7862,6 +7864,9 @@ package Sinfo is\n    function Is_Controlling_Actual\n      (N : Node_Id) return Boolean;    -- Flag16\n \n+   function Is_Dynamic_Coextension\n+     (N : Node_Id) return Boolean;    -- Flag18\n+\n    function Is_Entry_Barrier_Function\n      (N : Node_Id) return Boolean;    -- Flag8\n \n@@ -8705,9 +8710,6 @@ package Sinfo is\n    procedure Set_Is_Asynchronous_Call_Block\n      (N : Node_Id; Val : Boolean := True);    -- Flag7\n \n-   procedure Set_Is_Coextension\n-     (N : Node_Id; Val : Boolean := True);    -- Flag18\n-\n    procedure Set_Is_Component_Left_Opnd\n      (N : Node_Id; Val : Boolean := True);    -- Flag13\n \n@@ -8717,6 +8719,9 @@ package Sinfo is\n    procedure Set_Is_Controlling_Actual\n      (N : Node_Id; Val : Boolean := True);    -- Flag16\n \n+   procedure Set_Is_Dynamic_Coextension\n+     (N : Node_Id; Val : Boolean := True);    -- Flag18\n+\n    procedure Set_Is_Entry_Barrier_Function\n      (N : Node_Id; Val : Boolean := True);    -- Flag8\n \n@@ -10807,10 +10812,10 @@ package Sinfo is\n    pragma Inline (Instance_Spec);\n    pragma Inline (Intval);\n    pragma Inline (Is_Asynchronous_Call_Block);\n-   pragma Inline (Is_Coextension);\n    pragma Inline (Is_Component_Left_Opnd);\n    pragma Inline (Is_Component_Right_Opnd);\n    pragma Inline (Is_Controlling_Actual);\n+   pragma Inline (Is_Dynamic_Coextension);\n    pragma Inline (Is_Entry_Barrier_Function);\n    pragma Inline (Is_In_Discriminant_Check);\n    pragma Inline (Is_Machine_Number);\n@@ -11088,10 +11093,10 @@ package Sinfo is\n    pragma Inline (Set_Instance_Spec);\n    pragma Inline (Set_Intval);\n    pragma Inline (Set_Is_Asynchronous_Call_Block);\n-   pragma Inline (Set_Is_Coextension);\n    pragma Inline (Set_Is_Component_Left_Opnd);\n    pragma Inline (Set_Is_Component_Right_Opnd);\n    pragma Inline (Set_Is_Controlling_Actual);\n+   pragma Inline (Set_Is_Dynamic_Coextension);\n    pragma Inline (Set_Is_Entry_Barrier_Function);\n    pragma Inline (Set_Is_In_Discriminant_Check);\n    pragma Inline (Set_Is_Machine_Number);\n@@ -11213,4 +11218,8 @@ package Sinfo is\n    pragma Inline (Set_Was_Originally_Stub);\n    pragma Inline (Set_Zero_Cost_Handling);\n \n+   N_Simple_Return_Statement : constant Node_Kind := N_Return_Statement;\n+   --  Rename N_Return_Statement to be N_Simple_Return_Statement. Clients\n+   --  should refer to N_Simple_Return_Statement.\n+\n end Sinfo;"}, {"sha": "a6f6cf1a2bc30dd63b179c7d84ab98119f5f71f8", "filename": "gcc/ada/system-darwin-x86.ads", "status": "added", "additions": 171, "deletions": 0, "changes": 171, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d/gcc%2Fada%2Fsystem-darwin-x86.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d/gcc%2Fada%2Fsystem-darwin-x86.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-darwin-x86.ads?ref=33c423c8b24c3f68cb92f95b6d2e1b9dde16ab5d", "patch": "@@ -0,0 +1,171 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                        GNAT RUN-TIME COMPONENTS                          --\n+--                                                                          --\n+--                               S Y S T E M                                --\n+--                                                                          --\n+--                                 S p e c                                  --\n+--                          (Darwin/x86 Version)                            --\n+--                                                                          --\n+--          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n+--                                                                          --\n+-- This specification is derived from the Ada Reference Manual for use with --\n+-- GNAT. The copyright notice above, and the license provisions that follow --\n+-- apply solely to the  contents of the part following the private keyword. --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n+-- for  more details.  You should have  received  a copy of the GNU General --\n+-- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n+-- to  the  Free Software Foundation,  51  Franklin  Street,  Fifth  Floor, --\n+-- Boston, MA 02110-1301, USA.                                              --\n+--                                                                          --\n+-- As a special exception,  if other files  instantiate  generics from this --\n+-- unit, or you link  this unit with other files  to produce an executable, --\n+-- this  unit  does not  by itself cause  the resulting  executable  to  be --\n+-- covered  by the  GNU  General  Public  License.  This exception does not --\n+-- however invalidate  any other reasons why  the executable file  might be --\n+-- covered by the  GNU Public License.                                      --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+package System is\n+   pragma Pure;\n+   --  Note that we take advantage of the implementation permission to make\n+   --  this unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada\n+   --  2005, this is Pure in any case (AI-362).\n+\n+   type Name is (SYSTEM_NAME_GNAT);\n+   System_Name : constant Name := SYSTEM_NAME_GNAT;\n+\n+   --  System-Dependent Named Numbers\n+\n+   Min_Int               : constant := Long_Long_Integer'First;\n+   Max_Int               : constant := Long_Long_Integer'Last;\n+\n+   Max_Binary_Modulus    : constant := 2 ** Long_Long_Integer'Size;\n+   Max_Nonbinary_Modulus : constant := Integer'Last;\n+\n+   Max_Base_Digits       : constant := Long_Long_Float'Digits;\n+   Max_Digits            : constant := Long_Long_Float'Digits;\n+\n+   Max_Mantissa          : constant := 63;\n+   Fine_Delta            : constant := 2.0 ** (-Max_Mantissa);\n+\n+   Tick                  : constant := 0.01;\n+\n+   --  Storage-related Declarations\n+\n+   type Address is private;\n+   pragma Preelaborable_Initialization (Address);\n+   Null_Address : constant Address;\n+\n+   Storage_Unit : constant := 8;\n+   Word_Size    : constant := 32;\n+   Memory_Size  : constant := 2 ** 32;\n+\n+   --  Address comparison\n+\n+   function \"<\"  (Left, Right : Address) return Boolean;\n+   function \"<=\" (Left, Right : Address) return Boolean;\n+   function \">\"  (Left, Right : Address) return Boolean;\n+   function \">=\" (Left, Right : Address) return Boolean;\n+   function \"=\"  (Left, Right : Address) return Boolean;\n+\n+   pragma Import (Intrinsic, \"<\");\n+   pragma Import (Intrinsic, \"<=\");\n+   pragma Import (Intrinsic, \">\");\n+   pragma Import (Intrinsic, \">=\");\n+   pragma Import (Intrinsic, \"=\");\n+\n+   --  Other System-Dependent Declarations\n+\n+   type Bit_Order is (High_Order_First, Low_Order_First);\n+   Default_Bit_Order : constant Bit_Order := Low_Order_First;\n+   pragma Warnings (Off, Default_Bit_Order); -- kill constant condition warning\n+\n+   --  Priority-related Declarations (RM D.1)\n+\n+   --  The values defined here are derived from the following Darwin\n+   --  sources:\n+   --\n+   --  Libc/pthreads/pthread.c\n+   --    pthread_init calls host_info to retrieve the HOST_PRIORITY_INFO.\n+   --    This file includes \"pthread_internals\".\n+   --  Libc/pthreads/pthread_internals.h\n+   --    This file includes <mach/mach.h>.\n+   --  xnu/osfmk/mach/mach.h\n+   --    This file includes <mach/mach_types.h>.\n+   --  xnu/osfmk/mach/mach_types.h\n+   --    This file includes <mach/host_info.h>.\n+   --  xnu/osfmk/mach/host_info.h\n+   --    This file contains the definition of the host_info_t data structure\n+   --    and the function prototype for host_info.\n+   --  xnu/osfmk/kern/host.c\n+   --    This file defines the function host_info which sets the\n+   --    priority_info field of struct host_info_t. This file includes\n+   --    <kern/processor.h>.\n+   --  xnu/osfmk/kern/processor.h\n+   --    This file includes <kern/sched.h>.\n+   --  xnu/osfmk/kern/sched.h\n+   --    This file defines the values for each level of priority.\n+\n+   Max_Interrupt_Priority : constant Positive := 63;\n+   Max_Priority           : constant Positive := Max_Interrupt_Priority - 1;\n+\n+   subtype Any_Priority is Integer range 0 .. Max_Interrupt_Priority;\n+   subtype Priority is Any_Priority range 0 .. Max_Priority;\n+   subtype Interrupt_Priority is Any_Priority\n+     range Priority'Last + 1 .. Max_Interrupt_Priority;\n+\n+   Default_Priority : constant Priority :=\n+     (Priority'Last - Priority'First) / 2;\n+\n+private\n+\n+   type Address is mod Memory_Size;\n+   Null_Address : constant Address := 0;\n+\n+   --------------------------------------\n+   -- System Implementation Parameters --\n+   --------------------------------------\n+\n+   --  These parameters provide information about the target that is used\n+   --  by the compiler. They are in the private part of System, where they\n+   --  can be accessed using the special circuitry in the Targparm unit\n+   --  whose source should be consulted for more detailed descriptions\n+   --  of the individual switch values.\n+\n+   Backend_Divide_Checks     : constant Boolean := False;\n+   Backend_Overflow_Checks   : constant Boolean := False;\n+   Command_Line_Args         : constant Boolean := True;\n+   Configurable_Run_Time     : constant Boolean := False;\n+   Denorm                    : constant Boolean := True;\n+   Duration_32_Bits          : constant Boolean := False;\n+   Exit_Status_Supported     : constant Boolean := True;\n+   Fractional_Fixed_Ops      : constant Boolean := False;\n+   Frontend_Layout           : constant Boolean := False;\n+   Machine_Overflows         : constant Boolean := False;\n+   Machine_Rounds            : constant Boolean := True;\n+   Preallocated_Stacks       : constant Boolean := False;\n+   Signed_Zeros              : constant Boolean := True;\n+   Stack_Check_Default       : constant Boolean := False;\n+   Stack_Check_Probes        : constant Boolean := False;\n+   Support_64_Bit_Divides    : constant Boolean := True;\n+   Support_Aggregates        : constant Boolean := True;\n+   Support_Composite_Assign  : constant Boolean := True;\n+   Support_Composite_Compare : constant Boolean := True;\n+   Support_Long_Shifts       : constant Boolean := True;\n+   Suppress_Standard_Library : constant Boolean := False;\n+   Use_Ada_Main_Program_Name : constant Boolean := False;\n+   ZCX_By_Default            : constant Boolean := True;\n+   GCC_ZCX_Support           : constant Boolean := True;\n+\n+end System;"}]}