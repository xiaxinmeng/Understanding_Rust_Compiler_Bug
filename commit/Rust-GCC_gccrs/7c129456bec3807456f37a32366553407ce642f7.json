{"sha": "7c129456bec3807456f37a32366553407ce642f7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2MxMjk0NTZiZWMzODA3NDU2ZjM3YTMyMzY2NTUzNDA3Y2U2NDJmNw==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-03-20T19:17:48Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-03-20T19:17:48Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r537", "tree": {"sha": "6f3a3f605a44ff8c4fc6a3602163fc40cf9159c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6f3a3f605a44ff8c4fc6a3602163fc40cf9159c3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7c129456bec3807456f37a32366553407ce642f7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c129456bec3807456f37a32366553407ce642f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c129456bec3807456f37a32366553407ce642f7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c129456bec3807456f37a32366553407ce642f7/comments", "author": null, "committer": null, "parents": [{"sha": "ae0bc81a388fd5210fa1a23e8debf1871459e86f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae0bc81a388fd5210fa1a23e8debf1871459e86f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae0bc81a388fd5210fa1a23e8debf1871459e86f"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "aa6c19179b861800a689116e99ad661a172efd99", "filename": "gcc/config/m68k/hp320.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c129456bec3807456f37a32366553407ce642f7/gcc%2Fconfig%2Fm68k%2Fhp320.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c129456bec3807456f37a32366553407ce642f7/gcc%2Fconfig%2Fm68k%2Fhp320.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fhp320.h?ref=7c129456bec3807456f37a32366553407ce642f7", "patch": "@@ -385,7 +385,7 @@ do{  if (PREFIX[0] == 'L' && PREFIX[1] == 'I')\t\t\\\n   else if (CODE == '-') fprintf (FILE, \"-(%%sp)\");\t\t\t\\\n   else if (CODE == '+') fprintf (FILE, \"(%%sp)+\");\t\t\t\\\n   else if (CODE == '@') fprintf (FILE, \"(%%sp)\");\t\t\t\\\n-  else if (CODE == '!') fprintf (FILE, \"%%cc\");\t\t\t\t\\\n+  else if (CODE == '!') fprintf (FILE, \"%%fpcr\");\t\t\t\\\n   else if (CODE == '$') { if (TARGET_68040_ONLY) fprintf (FILE, \"s\"); } \\\n   else if (CODE == '&') { if (TARGET_68040_ONLY) fprintf (FILE, \"d\"); } \\\n   else if (GET_CODE (X) == REG)\t\t\t\t\t\t\\"}, {"sha": "9c417b65004754f6e55423d52376ae9580a101e6", "filename": "gcc/config/m68k/m68k.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c129456bec3807456f37a32366553407ce642f7/gcc%2Fconfig%2Fm68k%2Fm68k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c129456bec3807456f37a32366553407ce642f7/gcc%2Fconfig%2Fm68k%2Fm68k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.h?ref=7c129456bec3807456f37a32366553407ce642f7", "patch": "@@ -1645,7 +1645,7 @@ do { union { float f; long l;} tem;\t\t\t\\\n        sp@, (sp) or (%sp) depending on the style of syntax.\n    '#' for an immediate operand prefix (# in MIT and Motorola syntax\n        but & in SGS syntax).\n-   '!' for the cc register (used in an `and to cc' insn).\n+   '!' for the fpcr register (used in some float-to-fixed conversions).\n    '$' for the letter `s' in an op code, but only on the 68040.\n    '&' for the letter `d' in an op code, but only on the 68040.\n "}, {"sha": "9a12fd28ec8464eebf71cc5797bbbca7622914d5", "filename": "gcc/config/m68k/m68k.md", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c129456bec3807456f37a32366553407ce642f7/gcc%2Fconfig%2Fm68k%2Fm68k.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c129456bec3807456f37a32366553407ce642f7/gcc%2Fconfig%2Fm68k%2Fm68k.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.md?ref=7c129456bec3807456f37a32366553407ce642f7", "patch": "@@ -61,7 +61,7 @@\n ;;- \"%-\"    push operand \"sp@-\"\t\t\t\tmove%.l d0,%-\n ;;- \"%+\"    pop operand \"sp@+\"\t\t\t\tmove%.l d0,%+\n ;;- \"%@\"    top of stack \"sp@\"\t\t\t\tmove%.l d0,%@\n-;;- \"%!\"    ??? \"cc\"\t\t\t\t\t(not used)\n+;;- \"%!\"    fpcr register\n ;;- \"%$\"    single-precision fp specifier (\"s\" or \"\")\tf%$add.x fp0,fp1\n ;;- \"%&\"    double-precision fp specifier (\"d\" or \"\")\tf%&add.x fp0,fp1\n \n@@ -1577,7 +1577,7 @@\n   \"*\n {\n   CC_STATUS_INIT;\n-  return \\\"fmovem%.l fpcr,%2\\;moveq #16,%3\\;or%.l %2,%3\\;and%.w #-33,%3\\;fmovem%.l %3,fpcr\\;fmove%.l %1,%0\\;fmovem%.l %2,fpcr\\\";\n+  return \\\"fmovem%.l %!,%2\\;moveq #16,%3\\;or%.l %2,%3\\;and%.w #-33,%3\\;fmovem%.l %3,%!\\;fmove%.l %1,%0\\;fmovem%.l %2,%!\\\";\n }\")\n \n (define_insn \"fix_truncdfhi2\"\n@@ -1589,7 +1589,7 @@\n   \"*\n {\n   CC_STATUS_INIT;\n-  return \\\"fmovem%.l fpcr,%2\\;moveq #16,%3\\;or%.l %2,%3\\;and%.w #-33,%3\\;fmovem%.l %3,fpcr\\;fmove%.w %1,%0\\;fmovem%.l %2,fpcr\\\";\n+  return \\\"fmovem%.l %!,%2\\;moveq #16,%3\\;or%.l %2,%3\\;and%.w #-33,%3\\;fmovem%.l %3,%!\\;fmove%.w %1,%0\\;fmovem%.l %2,%!\\\";\n }\")\n \n (define_insn \"fix_truncdfqi2\"\n@@ -1601,7 +1601,7 @@\n   \"*\n {\n   CC_STATUS_INIT;\n-  return \\\"fmovem%.l fpcr,%2\\;moveq #16,%3\\;or%.l %2,%3\\;and%.w #-33,%3\\;fmovem%.l %3,fpcr\\;fmove%.b %1,%0\\;fmovem%.l %2,fpcr\\\";\n+  return \\\"fmovem%.l %!,%2\\;moveq #16,%3\\;or%.l %2,%3\\;and%.w #-33,%3\\;fmovem%.l %3,%!\\;fmove%.b %1,%0\\;fmovem%.l %2,%!\\\";\n }\")\n \n ;; Convert a float to a float whose value is an integer."}, {"sha": "caa894861c1198a17b48ed3d32dd3e1247f30c2a", "filename": "gcc/config/m68k/mot3300.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c129456bec3807456f37a32366553407ce642f7/gcc%2Fconfig%2Fm68k%2Fmot3300.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c129456bec3807456f37a32366553407ce642f7/gcc%2Fconfig%2Fm68k%2Fmot3300.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fmot3300.h?ref=7c129456bec3807456f37a32366553407ce642f7", "patch": "@@ -409,7 +409,7 @@ do { union { float f; long l;} tem;\t\t\t\\\n        sp@, (sp) or (%sp) depending on the style of syntax.\n    '#' for an immediate operand prefix (# in MIT and Motorola syntax\n        but & in SGS syntax).\n-   '!' for the cc register (used in an `and to cc' insn).\n+   '!' for the fpcr register (used in some float-to-fixed conversions).\n    '$' for the letter `s' in an op code, but only on the 68040.\n    '&' for the letter `d' in an op code, but only on the 68040.\n \n@@ -431,7 +431,7 @@ do { union { float f; long l;} tem;\t\t\t\\\n   else if (CODE == '-') fprintf (FILE, \"-(%%sp)\");\t\t\t\\\n   else if (CODE == '+') fprintf (FILE, \"(%%sp)+\");\t\t\t\\\n   else if (CODE == '@') fprintf (FILE, \"(%%sp)\");\t\t\t\\\n-  else if (CODE == '!') fprintf (FILE, \"%%cc\");\t\t\t\t\\\n+  else if (CODE == '!') fprintf (FILE, \"%%fpcr\");\t\t\t\\\n   else if (CODE == '$') { if (TARGET_68040_ONLY) fprintf (FILE, \"s\"); }\t\\\n   else if (CODE == '&') { if (TARGET_68040_ONLY) fprintf (FILE, \"d\"); }\t\\\n   else if (GET_CODE (X) == REG)\t\t\t\t\t\t\\"}, {"sha": "a9615f4ca8fede7a93f3c9ecc5ee14334be68d4b", "filename": "gcc/config/m68k/tower-as.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c129456bec3807456f37a32366553407ce642f7/gcc%2Fconfig%2Fm68k%2Ftower-as.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c129456bec3807456f37a32366553407ce642f7/gcc%2Fconfig%2Fm68k%2Ftower-as.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Ftower-as.h?ref=7c129456bec3807456f37a32366553407ce642f7", "patch": "@@ -406,7 +406,7 @@ do { union { float f; long l;} tem;\t\t\t\\\n   else if (CODE == '-') fprintf (FILE, \"-(%%sp)\");\t\t\t\\\n   else if (CODE == '+') fprintf (FILE, \"(%%sp)+\");\t\t\t\\\n   else if (CODE == '@') fprintf (FILE, \"(%%sp)\");\t\t\t\\\n-  else if (CODE == '!') fprintf (FILE, \"%%cc\");\t\t\t\t\\\n+  else if (CODE == '!') fprintf (FILE, \"%%fpcr\");\t\t\t\\\n   else if (GET_CODE (X) == REG)\t\t\t\t\t\t\\\n     fprintf (FILE, \"%s\", reg_names[REGNO (X)]);\t\t\t\t\\\n   else if (GET_CODE (X) == MEM)\t\t\t\t\t\t\\"}]}