{"sha": "0acefe5425bf661788da3f51943f8218b4b88164", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGFjZWZlNTQyNWJmNjYxNzg4ZGEzZjUxOTQzZjgyMThiNGI4ODE2NA==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1994-03-22T23:57:28Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1994-03-22T23:57:28Z"}, "message": "(TRAMPOLINE_TEMPLATE): Add `move $25,$3' for when TARGET_ABICALLS.\n\n(TRAMPOLINE_TEMPLATE): Add `move $25,$3' for when\nTARGET_ABICALLS.  Delete padding for 64 bit case.  Adjust offsets.\n(TRAMPOLINE_SIZE): Increase from 9 to 10 words for 32 bit case.\n(INITIALIZE_TRAMPOLINE): Increase offsets by 4 bytes for 32 bit case.\n\nFrom-SVN: r6846", "tree": {"sha": "89d037a74b714be27932c2a0b5da1fe56e199a44", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/89d037a74b714be27932c2a0b5da1fe56e199a44"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0acefe5425bf661788da3f51943f8218b4b88164", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0acefe5425bf661788da3f51943f8218b4b88164", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0acefe5425bf661788da3f51943f8218b4b88164", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0acefe5425bf661788da3f51943f8218b4b88164/comments", "author": null, "committer": null, "parents": [{"sha": "65624c8ef35a07c95c941f8953bb60fade1110ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65624c8ef35a07c95c941f8953bb60fade1110ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/65624c8ef35a07c95c941f8953bb60fade1110ed"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "ba1786646e3a52be1c3c7245f0702c1adff79c2c", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0acefe5425bf661788da3f51943f8218b4b88164/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0acefe5425bf661788da3f51943f8218b4b88164/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=0acefe5425bf661788da3f51943f8218b4b88164", "patch": "@@ -2016,14 +2016,14 @@ typedef struct mips_args {\n     }\t\t\t\t\t\t\t\t\t\\\n   else\t\t\t\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\t\t\t\\\n-      fprintf (STREAM, \"\\t.word\\t0x8fe30010\\t\\t# lw     $3,16($31)\\n\");\t\\\n-      fprintf (STREAM, \"\\t.word\\t0x8fe20014\\t\\t# lw     $2,20($31)\\n\");\t\\\n+      fprintf (STREAM, \"\\t.word\\t0x8fe30014\\t\\t# lw     $3,20($31)\\n\");\t\\\n+      fprintf (STREAM, \"\\t.word\\t0x8fe20018\\t\\t# lw     $2,24($31)\\n\");\t\\\n     }\t\t\t\t\t\t\t\t\t\\\n+  fprintf (STREAM, \"\\t.word\\t0x0060c821\\t\\t# move   $25,$3 (abicalls)\\n\"); \\\n   fprintf (STREAM, \"\\t.word\\t0x00600008\\t\\t# jr     $3\\n\");\t\t\\\n   fprintf (STREAM, \"\\t.word\\t0x0020f821\\t\\t# move   $31,$1\\n\");\t\t\\\n   if (TARGET_LONG64)\t\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\t\t\t\\\n-      fprintf (STREAM, \"\\t.word\\t0x00000000\\t\\t# <alignment padding>\\n\"); \\\n       fprintf (STREAM, \"\\t.dword\\t0x00000000\\t\\t# <function address>\\n\"); \\\n       fprintf (STREAM, \"\\t.dword\\t0x00000000\\t\\t# <static chain value>\\n\"); \\\n     }\t\t\t\t\t\t\t\t\t\\\n@@ -2037,7 +2037,7 @@ typedef struct mips_args {\n /* A C expression for the size in bytes of the trampoline, as an\n    integer.  */\n \n-#define TRAMPOLINE_SIZE (TARGET_LONG64 ? (8 * 4 + 2 * 8) : (9 * 4))\n+#define TRAMPOLINE_SIZE (32 + (TARGET_LONG64 ? 16 : 8))\n \n /* Alignment required for trampolines, in bits.  */\n \n@@ -2059,8 +2059,8 @@ typedef struct mips_args {\n     }\t\t\t\t\t\t\t\t\t    \\\n   else\t\t\t\t\t\t\t\t\t    \\\n     {\t\t\t\t\t\t\t\t\t    \\\n-      emit_move_insn (gen_rtx (MEM, SImode, plus_constant (addr, 28)), FUNC); \\\n-      emit_move_insn (gen_rtx (MEM, SImode, plus_constant (addr, 32)), CHAIN);\\\n+      emit_move_insn (gen_rtx (MEM, SImode, plus_constant (addr, 32)), FUNC); \\\n+      emit_move_insn (gen_rtx (MEM, SImode, plus_constant (addr, 36)), CHAIN);\\\n     }\t\t\t\t\t\t\t\t\t    \\\n \t\t\t\t\t\t\t\t\t    \\\n   /* Flush the instruction cache.  */\t\t\t\t\t    \\"}]}