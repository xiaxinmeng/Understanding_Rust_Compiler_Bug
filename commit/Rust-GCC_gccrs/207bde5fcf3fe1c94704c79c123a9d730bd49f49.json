{"sha": "207bde5fcf3fe1c94704c79c123a9d730bd49f49", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjA3YmRlNWZjZjNmZTFjOTQ3MDRjNzljMTIzYTlkNzMwYmQ0OWY0OQ==", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2008-01-18T02:08:22Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2008-01-18T02:08:22Z"}, "message": "re PR fortran/34556 (Rejects valid with bogus error message: parameter initalization)\n\n2008-01-17  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n\n\tPR fortran/34556\n\t* simplify.c (is_constant_array_expr): New static function that returns\n\ttrue if the given expression is an array and is constant.\n\t(gfc_simplify_reshape): Use new function.\n\nFrom-SVN: r131623", "tree": {"sha": "0d870b6c1926c0dab0f36b7ab20630d7d863c637", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0d870b6c1926c0dab0f36b7ab20630d7d863c637"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/207bde5fcf3fe1c94704c79c123a9d730bd49f49", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/207bde5fcf3fe1c94704c79c123a9d730bd49f49", "html_url": "https://github.com/Rust-GCC/gccrs/commit/207bde5fcf3fe1c94704c79c123a9d730bd49f49", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/207bde5fcf3fe1c94704c79c123a9d730bd49f49/comments", "author": null, "committer": null, "parents": [{"sha": "6c633d454a09f6fd5f85f54d46f57a733967c667", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c633d454a09f6fd5f85f54d46f57a733967c667", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c633d454a09f6fd5f85f54d46f57a733967c667"}], "stats": {"total": 46, "additions": 38, "deletions": 8}, "files": [{"sha": "81feb213caa58d5e1ca7a109462cb5bc6f3380b5", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/207bde5fcf3fe1c94704c79c123a9d730bd49f49/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/207bde5fcf3fe1c94704c79c123a9d730bd49f49/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=207bde5fcf3fe1c94704c79c123a9d730bd49f49", "patch": "@@ -1,3 +1,10 @@\n+2008-01-17  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR fortran/34556\n+\t* simplify.c (is_constant_array_expr): New static function that returns\n+\ttrue if the given expression is an array and is constant.\n+\t(gfc_simplify_reshape): Use new function.\n+\n 2008-01-17  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR fortran/33375"}, {"sha": "12be1e08222254faeee1cafde0c52be1f6e4c2f4", "filename": "gcc/fortran/simplify.c", "status": "modified", "additions": 31, "deletions": 8, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/207bde5fcf3fe1c94704c79c123a9d730bd49f49/gcc%2Ffortran%2Fsimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/207bde5fcf3fe1c94704c79c123a9d730bd49f49/gcc%2Ffortran%2Fsimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fsimplify.c?ref=207bde5fcf3fe1c94704c79c123a9d730bd49f49", "patch": "@@ -3164,6 +3164,30 @@ gfc_simplify_repeat (gfc_expr *e, gfc_expr *n)\n }\n \n \n+/* Test that the expression is an constant array.  */\n+\n+static bool\n+is_constant_array_expr (gfc_expr *e)\n+{\n+  gfc_constructor *c;\n+\n+  if (e == NULL)\n+    return true;\n+\n+  if (e->expr_type != EXPR_ARRAY || !gfc_is_constant_expr (e))\n+    return false;\n+  \n+  if (e->value.constructor == NULL)\n+    return false;\n+  \n+  for (c = e->value.constructor; c; c = c->next)\n+    if (c->expr->expr_type != EXPR_CONSTANT)\n+      return false;\n+\n+  return true;\n+}\n+\n+\n /* This one is a bear, but mainly has to do with shuffling elements.  */\n \n gfc_expr *\n@@ -3178,22 +3202,21 @@ gfc_simplify_reshape (gfc_expr *source, gfc_expr *shape_exp,\n   size_t nsource;\n   gfc_expr *e;\n \n-  /* Unpack the shape array.  */\n-  if (source->expr_type != EXPR_ARRAY || !gfc_is_constant_expr (source))\n+  /* Check that argument expression types are OK.  */\n+  if (!is_constant_array_expr (source))\n     return NULL;\n \n-  if (shape_exp->expr_type != EXPR_ARRAY || !gfc_is_constant_expr (shape_exp))\n+  if (!is_constant_array_expr (shape_exp))\n     return NULL;\n \n-  if (pad != NULL\n-      && (pad->expr_type != EXPR_ARRAY || !gfc_is_constant_expr (pad)))\n+  if (!is_constant_array_expr (pad))\n     return NULL;\n \n-  if (order_exp != NULL\n-      && (order_exp->expr_type != EXPR_ARRAY\n-\t  || !gfc_is_constant_expr (order_exp)))\n+  if (!is_constant_array_expr (order_exp))\n     return NULL;\n \n+  /* Proceed with simplification, unpacking the array.  */\n+\n   mpz_init (index);\n   rank = 0;\n   head = tail = NULL;"}]}