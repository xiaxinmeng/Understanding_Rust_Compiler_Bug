{"sha": "02d208ff0f057f9b15414f15fd2ece8eef5f49e5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDJkMjA4ZmYwZjA1N2Y5YjE1NDE0ZjE1ZmQyZWNlOGVlZjVmNDllNQ==", "commit": {"author": {"name": "Andreas Jaeger", "email": "aj@gcc.gnu.org", "date": "2001-05-04T04:58:46Z"}, "committer": {"name": "Andreas Jaeger", "email": "aj@gcc.gnu.org", "date": "2001-05-04T04:58:46Z"}, "message": "except.h: Add prototype declaration for expand_builtin_init_dwarf_reg_sizes.\n\n\t* except.h: Add prototype declaration for\n\texpand_builtin_init_dwarf_reg_sizes.\n\nFrom-SVN: r41823", "tree": {"sha": "b9127d969c245a44970fae4a7dea9315e0d9a7b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b9127d969c245a44970fae4a7dea9315e0d9a7b5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/02d208ff0f057f9b15414f15fd2ece8eef5f49e5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02d208ff0f057f9b15414f15fd2ece8eef5f49e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/02d208ff0f057f9b15414f15fd2ece8eef5f49e5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02d208ff0f057f9b15414f15fd2ece8eef5f49e5/comments", "author": null, "committer": null, "parents": [{"sha": "acc72c37744ddd4cfb99f2db8e52138964e09ae5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/acc72c37744ddd4cfb99f2db8e52138964e09ae5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/acc72c37744ddd4cfb99f2db8e52138964e09ae5"}], "stats": {"total": 21, "additions": 14, "deletions": 7}, "files": [{"sha": "bb502a4f3930934afcf5a94bd846de2f49f5896e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02d208ff0f057f9b15414f15fd2ece8eef5f49e5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02d208ff0f057f9b15414f15fd2ece8eef5f49e5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=02d208ff0f057f9b15414f15fd2ece8eef5f49e5", "patch": "@@ -1,3 +1,8 @@\n+2001-05-04  Andreas Jaeger  <aj@suse.de>\n+\n+\t* except.h: Add prototype declaration for\n+\texpand_builtin_init_dwarf_reg_sizes.\n+\n 2001-05-03  Geoffrey Keating  <geoffk@redhat.com>\n \n \t* Makefile.in (site.exp): Set TESTING_IN_BUILD_TREE.\n@@ -49,9 +54,9 @@\n \t* config/m68hc11/m68hc11.c (limit_reload_class): Remove.\n \t(m68hc11_override_options): Remove setting of flag_no_nonansi_builtin.\n \tSet 68HC12 min offset to -65536.\n-\t(print_operand): Put parenthesis arround the operand if it refers \n+\t(print_operand): Put parenthesis arround the operand if it refers\n \tto a symbol having the same name as a register.\n-\t(m68hc11_z_replacement): When z register is replaced by its \n+\t(m68hc11_z_replacement): When z register is replaced by its\n \tequivalent soft register, force the insn to be re-recognized.\n \t(m68hc11_check_z_replacement): Fix the test when destination is\n \tthe index register and z dies in the insn.\n@@ -77,13 +82,13 @@\n \n \t* config/m68hc11/m68hc11.md (*addhi3_68hc12): Fix generation\n \tand use m68hc11_notice_keep_cc when using leax/leay.\n-\t(addhi3 split): Reject split if the insn is handled by \n+\t(addhi3 split): Reject split if the insn is handled by\n \tleax/leay above.\n \t* config/m68hc11/m68hc11.c (m68hc11_split_move): For 68HC12 the\n \tpush must be handled in a special way if the source operand uses\n \tsp as index register.\n \t(m68hc11_notice_keep_cc): New function.\n-\t(m68hc11_gen_movhi): Use it when an insn changes a register but \n+\t(m68hc11_gen_movhi): Use it when an insn changes a register but\n \tnot the flags.\n \t(m68hc11_gen_movqi): Fix move for 68HC12.\n \t* config/m68hc11/m68hc11-protos.h (m68hc11_notice_keep_cc): Declare.\n@@ -97,7 +102,7 @@\n \n \t* config/m68hc11/m68hc11.md (tsthi_1): Use cpd for 68HC12.\n \t(zero_extendsi split): Simplify and use (zero_extendhi).\n-\t(*addhi3): Remove 'w' constraint since stack pointer is handled \n+\t(*addhi3): Remove 'w' constraint since stack pointer is handled\n \tby (addhi3_sp).\n \t(*ashlhi3_2): Operand 2 is clobbered use '+' for its constraint.\n \t(*ashlhi3, *ashrhi3, *lshrhi3): Likewise.\n@@ -343,7 +348,7 @@ Wed May  2 13:09:36 2001  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n 2001-04-30  Zack Weinberg  <zackw@stanford.edu>\n \n-\t* tsystem.h: Test only POSIX for availability of string.h \n+\t* tsystem.h: Test only POSIX for availability of string.h\n \tand time.h.\n \t* config.gcc (all systems): If USG appeared in xm_defines,\n \tchange it to POSIX.  If both USG and POSIX appeared, just"}, {"sha": "b2c3943d3da0d483c97880e94fc386a89c228376", "filename": "gcc/except.h", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02d208ff0f057f9b15414f15fd2ece8eef5f49e5/gcc%2Fexcept.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02d208ff0f057f9b15414f15fd2ece8eef5f49e5/gcc%2Fexcept.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexcept.h?ref=02d208ff0f057f9b15414f15fd2ece8eef5f49e5", "patch": "@@ -1,5 +1,6 @@\n /* Exception Handling interface routines.\n-   Copyright (C) 1996, 1997, 1998, 1999, 2000 Free Software Foundation, Inc.\n+   Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001\n+   Free Software Foundation, Inc.\n    Contributed by Mike Stump <mrs@cygnus.com>.\n \n This file is part of GNU CC.\n@@ -130,6 +131,7 @@ extern void output_function_exception_table\tPARAMS ((void));\n extern void expand_builtin_unwind_init\t\tPARAMS ((void));\n extern rtx expand_builtin_eh_return_data_regno\tPARAMS ((tree));\n extern rtx expand_builtin_extract_return_addr\tPARAMS ((tree));\n+extern void expand_builtin_init_dwarf_reg_sizes PARAMS ((tree));\n extern rtx expand_builtin_frob_return_addr\tPARAMS ((tree));\n extern rtx expand_builtin_dwarf_fp_regnum\tPARAMS ((void));\n extern void expand_builtin_eh_return\t\tPARAMS ((tree, tree));"}]}