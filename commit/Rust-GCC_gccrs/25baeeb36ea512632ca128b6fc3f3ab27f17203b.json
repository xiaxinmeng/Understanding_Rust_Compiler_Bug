{"sha": "25baeeb36ea512632ca128b6fc3f3ab27f17203b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjViYWVlYjM2ZWE1MTI2MzJjYTEyOGI2ZmMzZjNhYjI3ZjE3MjAzYg==", "commit": {"author": {"name": "Tom de Vries", "email": "tdevries@suse.de", "date": "2018-11-21T08:10:41Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2018-11-21T08:10:41Z"}, "message": "[driver] Ensure --help=params lines end with period\n\nEnsure that gcc --help=params lines end with a period by:\n- fixing the help message of param HOT_BB_COUNT_FRACTION, and\n- adding a test-case.\n\nBuild and tested on x86_64.\n\n2018-11-21  Tom de Vries  <tdevries@suse.de>\n\n\tPR driver/79855\n\t* params.def (HOT_BB_COUNT_FRACTION): Terminate help message with\n\tperiod.\n\n\t* lib/options.exp (check_for_options_with_filter): New proc.\n\t* gcc.misc-tests/help.exp: Check that --help=params lines end with\n\tperiod.\n\nFrom-SVN: r266338", "tree": {"sha": "d5fb76f3b41f379967a8b2312657cb138f2fcdfc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d5fb76f3b41f379967a8b2312657cb138f2fcdfc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/25baeeb36ea512632ca128b6fc3f3ab27f17203b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25baeeb36ea512632ca128b6fc3f3ab27f17203b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/25baeeb36ea512632ca128b6fc3f3ab27f17203b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25baeeb36ea512632ca128b6fc3f3ab27f17203b/comments", "author": {"login": "vries", "id": 4057235, "node_id": "MDQ6VXNlcjQwNTcyMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vries", "html_url": "https://github.com/vries", "followers_url": "https://api.github.com/users/vries/followers", "following_url": "https://api.github.com/users/vries/following{/other_user}", "gists_url": "https://api.github.com/users/vries/gists{/gist_id}", "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vries/subscriptions", "organizations_url": "https://api.github.com/users/vries/orgs", "repos_url": "https://api.github.com/users/vries/repos", "events_url": "https://api.github.com/users/vries/events{/privacy}", "received_events_url": "https://api.github.com/users/vries/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7c74e813c9de0562b447f20fb51de8d36ea396bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c74e813c9de0562b447f20fb51de8d36ea396bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c74e813c9de0562b447f20fb51de8d36ea396bb"}], "stats": {"total": 51, "additions": 46, "deletions": 5}, "files": [{"sha": "bff4dfb5daabf636310a250ff3d103e4589d745a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25baeeb36ea512632ca128b6fc3f3ab27f17203b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25baeeb36ea512632ca128b6fc3f3ab27f17203b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=25baeeb36ea512632ca128b6fc3f3ab27f17203b", "patch": "@@ -1,3 +1,9 @@\n+2018-11-21  Tom de Vries  <tdevries@suse.de>\n+\n+\tPR driver/79855\n+\t* params.def (HOT_BB_COUNT_FRACTION): Terminate help message with\n+\tperiod.\n+\n 2018-11-21  Andreas Krebbel  <krebbel@linux.ibm.com>\n \n \t* configure.ac: Add check for Binutils to determine whether vector"}, {"sha": "11396a7f3af3133d2a93175b3330f3bd5bfc15db", "filename": "gcc/params.def", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25baeeb36ea512632ca128b6fc3f3ab27f17203b/gcc%2Fparams.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25baeeb36ea512632ca128b6fc3f3ab27f17203b/gcc%2Fparams.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fparams.def?ref=25baeeb36ea512632ca128b6fc3f3ab27f17203b", "patch": "@@ -397,7 +397,7 @@ DEFPARAM(PARAM_SMS_LOOP_AVERAGE_COUNT_THRESHOLD,\n DEFPARAM(HOT_BB_COUNT_FRACTION,\n \t \"hot-bb-count-fraction\",\n \t \"Select fraction of the maximal count of repetitions of basic block in program given basic \"\n-\t \"block needs to have to be considered hot (used in non-LTO mode)\",\n+\t \"block needs to have to be considered hot (used in non-LTO mode).\",\n \t 10000, 0, 0)\n DEFPARAM(HOT_BB_COUNT_WS_PERMILLE,\n \t \"hot-bb-count-ws-permille\","}, {"sha": "855cc5963b7513b7afe8cdd8a3631c72d94178c9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25baeeb36ea512632ca128b6fc3f3ab27f17203b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25baeeb36ea512632ca128b6fc3f3ab27f17203b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=25baeeb36ea512632ca128b6fc3f3ab27f17203b", "patch": "@@ -1,3 +1,10 @@\n+2018-11-21  Tom de Vries  <tdevries@suse.de>\n+\n+\tPR driver/79855\n+\t* lib/options.exp (check_for_options_with_filter): New proc.\n+\t* gcc.misc-tests/help.exp: Check that --help=params lines end with\n+\tperiod.\n+\n 2018-11-21  Jakub Jelinek  <jakub@redhat.com>\n \t    Mark Eggleston  <mark.eggleston@codethink.com>\n "}, {"sha": "34ff9406e25d062b0e186babc69de4eb61a06461", "filename": "gcc/testsuite/gcc.misc-tests/help.exp", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25baeeb36ea512632ca128b6fc3f3ab27f17203b/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fhelp.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25baeeb36ea512632ca128b6fc3f3ab27f17203b/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fhelp.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fhelp.exp?ref=25baeeb36ea512632ca128b6fc3f3ab27f17203b", "patch": "@@ -63,6 +63,8 @@ check_for_options c \"-v --help\" \"\" {are likely to\\n  -std} \"\"\n # Try various --help= classes and qualifiers.\n check_for_options c \"--help=optimizers\" \"-O\" \"  -g  \" \"\"\n check_for_options c \"--help=params\" \"maximum number of\" \"-Wunsafe-loop-optimizations\" \"\"\n+check_for_options_with_filter c \"--help=params\" \\\n+    \"^The --param option recognizes the following as parameters:$\" \"\" {[^.]$} \"\"\n check_for_options c \"--help=C\" \"-ansi\" \"-gnatO\" \"\"\n check_for_options c {--help=C++} {-std=c\\+\\+} \"-gnatO\" \"\"\n check_for_options c \"--help=common\" \"-dumpbase\" \"-gnatO\" \"\""}, {"sha": "60d85eea9d4caea8ed219c19275da833b0a4a931", "filename": "gcc/testsuite/lib/options.exp", "status": "modified", "additions": 30, "deletions": 4, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25baeeb36ea512632ca128b6fc3f3ab27f17203b/gcc%2Ftestsuite%2Flib%2Foptions.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25baeeb36ea512632ca128b6fc3f3ab27f17203b/gcc%2Ftestsuite%2Flib%2Foptions.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Foptions.exp?ref=25baeeb36ea512632ca128b6fc3f3ab27f17203b", "patch": "@@ -26,11 +26,14 @@ if { [ishost \"*-*-cygwin*\"] } {\n }\n \n # Run the LANGUAGE compiler with GCC_OPTIONS and inspect the compiler\n-# output to make sure that they match the newline-separated patterns\n-# in COMPILER_PATTERNS but not the patterns in COMPILER_NON_PATTERNS.\n-# In case of failure, xfail if XFAIL is nonempty.\n+# output excluding EXCLUDE lines to make sure that they match the\n+# newline-separated patterns in COMPILER_PATTERNS but not the patterns in\n+# COMPILER_NON_PATTERNS.  In case of failure, xfail if XFAIL is nonempty.\n \n-proc check_for_options {language gcc_options compiler_patterns compiler_non_patterns expected_failure} {\n+proc check_for_options_with_filter { language gcc_options exclude \\\n+\t\t\t\t\t compiler_patterns \\\n+\t\t\t\t\t compiler_non_patterns \\\n+\t\t\t\t\t expected_failure } {\n     set filename test-[pid]\n     set fd [open $filename.c w]\n     puts $fd \"int main (void) { return 0; }\"\n@@ -47,6 +50,21 @@ proc check_for_options {language gcc_options compiler_patterns compiler_non_patt\n     set gcc_output [gcc_target_compile $filename.c $filename.x executable $gcc_options]\n     remote_file build delete $filename.c $filename.x $filename.gcno\n \n+    if { $exclude != \"\" } {\n+\tset lines [split $gcc_output \"\\n\"]\n+\tset gcc_output \"\"\n+\tforeach line $lines {\n+\t    if {[regexp -line -- \"$exclude\" $line]} {\n+\t\tcontinue\n+\t    }\n+\t    if { $gcc_output == \"\" } {\n+\t\tset gcc_output \"$line\"\n+\t    } else {\n+\t\tset gcc_output \"$gcc_output\\n$line\"\n+\t    }\n+\t}\t\n+   }\n+    \n     # Verify that COMPILER_PATTERRNS appear in gcc output.\n     foreach pattern [split $compiler_patterns \"\\n\"] {\n \tif {$pattern != \"\"} {\n@@ -79,3 +97,11 @@ proc check_for_options {language gcc_options compiler_patterns compiler_non_patt\n \t}\n     }\n }\n+\n+# As check_for_options_with_filter, but without the EXCLUDE parameter.\n+\n+proc check_for_options { language gcc_options compiler_patterns \\\n+\t\t\t     compiler_non_patterns expected_failure } {\n+    check_for_options_with_filter $language $gcc_options \"\" $compiler_patterns \\\n+\t$compiler_non_patterns $expected_failure\n+}"}]}