{"sha": "8c8b42cf72f677e004909b2ab3b3f12353fb94d5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGM4YjQyY2Y3MmY2NzdlMDA0OTA5YjJhYjNiM2YxMjM1M2ZiOTRkNQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2019-03-21T22:03:07Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2019-03-21T22:03:07Z"}, "message": "re PR c++/71446 (Incorrect overload resolution when using designated initializers)\n\n\tPR c++/71446\n\t* call.c (filed_in_pset): Change pset from hash_set<tree> * to\n\thash_set<tree, true> &, adjust uses accordingly.\n\t(build_aggr_conv): Change pset from hash_set<tree> *\n\tto hash_set<tree, true>.  Replace goto fail; with return NULL;,\n\tadjust pset uses.\n\nFrom-SVN: r269861", "tree": {"sha": "6f6420ed0bc94abda56c58b3cdb96da5edc89d8c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6f6420ed0bc94abda56c58b3cdb96da5edc89d8c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8c8b42cf72f677e004909b2ab3b3f12353fb94d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c8b42cf72f677e004909b2ab3b3f12353fb94d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c8b42cf72f677e004909b2ab3b3f12353fb94d5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c8b42cf72f677e004909b2ab3b3f12353fb94d5/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "152d47df7f625885ae972386c759330cea6b169e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/152d47df7f625885ae972386c759330cea6b169e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/152d47df7f625885ae972386c759330cea6b169e"}], "stats": {"total": 36, "additions": 17, "deletions": 19}, "files": [{"sha": "61cf384e732d06b1e5acb3d3f4a05f84077fcd89", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c8b42cf72f677e004909b2ab3b3f12353fb94d5/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c8b42cf72f677e004909b2ab3b3f12353fb94d5/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=8c8b42cf72f677e004909b2ab3b3f12353fb94d5", "patch": "@@ -1,5 +1,12 @@\n 2019-03-21  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR c++/71446\n+\t* call.c (filed_in_pset): Change pset from hash_set<tree> * to\n+\thash_set<tree, true> &, adjust uses accordingly.\n+\t(build_aggr_conv): Change pset from hash_set<tree> *\n+\tto hash_set<tree, true>.  Replace goto fail; with return NULL;,\n+\tadjust pset uses.\n+\n \tPR c++/89767\n \t* parser.c (cp_parser_lambda_introducer): Add ids and first_capture_id\n \tvariables, check for duplicates in this function."}, {"sha": "a4adab20d4123b46d7e15bfe218a97590eca4ffe", "filename": "gcc/cp/call.c", "status": "modified", "additions": 10, "deletions": 19, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c8b42cf72f677e004909b2ab3b3f12353fb94d5/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c8b42cf72f677e004909b2ab3b3f12353fb94d5/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=8c8b42cf72f677e004909b2ab3b3f12353fb94d5", "patch": "@@ -907,9 +907,9 @@ can_convert_array (tree atype, tree ctor, int flags, tsubst_flags_t complain)\n    is in PSET.  */\n \n static bool\n-field_in_pset (hash_set<tree> *pset, tree field)\n+field_in_pset (hash_set<tree, true> &pset, tree field)\n {\n-  if (pset->contains (field))\n+  if (pset.contains (field))\n     return true;\n   if (ANON_AGGR_TYPE_P (TREE_TYPE (field)))\n     for (field = TYPE_FIELDS (TREE_TYPE (field));\n@@ -934,7 +934,7 @@ build_aggr_conv (tree type, tree ctor, int flags, tsubst_flags_t complain)\n   conversion *c;\n   tree field = next_initializable_field (TYPE_FIELDS (type));\n   tree empty_ctor = NULL_TREE;\n-  hash_set<tree> *pset = NULL;\n+  hash_set<tree, true> pset;\n \n   /* We already called reshape_init in implicit_conversion.  */\n \n@@ -964,20 +964,18 @@ build_aggr_conv (tree type, tree ctor, int flags, tsubst_flags_t complain)\n \t\t\t\t      complain);\n \n \t      if (!ok)\n-\t\tgoto fail;\n+\t\treturn NULL;\n \t      /* For unions, there should be just one initializer.  */\n \t      if (TREE_CODE (type) == UNION_TYPE)\n \t\t{\n \t\t  field = NULL_TREE;\n \t\t  i = 1;\n \t\t  break;\n \t\t}\n-\t      if (pset == NULL)\n-\t\tpset = new hash_set<tree>;\n-\t      pset->add (idx);\n+\t      pset.add (idx);\n \t    }\n \t  else\n-\t    goto fail;\n+\t    return NULL;\n \t}\n     }\n \n@@ -987,7 +985,7 @@ build_aggr_conv (tree type, tree ctor, int flags, tsubst_flags_t complain)\n       tree val;\n       bool ok;\n \n-      if (pset && field_in_pset (pset, field))\n+      if (pset.elements () && field_in_pset (pset, field))\n \tcontinue;\n       if (i < CONSTRUCTOR_NELTS (ctor))\n \t{\n@@ -998,7 +996,7 @@ build_aggr_conv (tree type, tree ctor, int flags, tsubst_flags_t complain)\n \tval = get_nsdmi (field, /*ctor*/false, complain);\n       else if (TYPE_REF_P (ftype))\n \t/* Value-initialization of reference is ill-formed.  */\n-\tgoto fail;\n+\treturn NULL;\n       else\n \t{\n \t  if (empty_ctor == NULL_TREE)\n@@ -1014,22 +1012,15 @@ build_aggr_conv (tree type, tree ctor, int flags, tsubst_flags_t complain)\n \t\t\t      complain);\n \n       if (!ok)\n-\tgoto fail;\n+\treturn NULL;\n \n       if (TREE_CODE (type) == UNION_TYPE)\n \tbreak;\n     }\n \n   if (i < CONSTRUCTOR_NELTS (ctor))\n-    {\n-    fail:\n-      if (pset)\n-\tdelete pset;\n-      return NULL;\n-    }\n+    return NULL;\n \n-  if (pset)\n-    delete pset;\n   c = alloc_conversion (ck_aggr);\n   c->type = type;\n   c->rank = cr_exact;"}]}