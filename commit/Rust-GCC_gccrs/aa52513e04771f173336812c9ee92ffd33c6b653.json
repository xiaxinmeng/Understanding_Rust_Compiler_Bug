{"sha": "aa52513e04771f173336812c9ee92ffd33c6b653", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWE1MjUxM2UwNDc3MWYxNzMzMzY4MTJjOWVlOTJmZmQzM2M2YjY1Mw==", "commit": {"author": {"name": "Sebastian Pop", "email": "sebastian.pop@amd.com", "date": "2010-03-08T17:49:02Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2010-03-08T17:49:02Z"}, "message": "New function combine_context_id_scat.\n\n2010-03-04  Sebastian Pop  <sebastian.pop@amd.com>\n\n\t* graphite-poly.h (struct poly_scattering): Add layout documentation.\n\t(struct poly_bb): Same.\n\t(combine_context_id_scat): New.\n\nFrom-SVN: r157281", "tree": {"sha": "a58d1e66eae3ae4128e2660d14f60f23ba294c48", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a58d1e66eae3ae4128e2660d14f60f23ba294c48"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aa52513e04771f173336812c9ee92ffd33c6b653", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa52513e04771f173336812c9ee92ffd33c6b653", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa52513e04771f173336812c9ee92ffd33c6b653", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa52513e04771f173336812c9ee92ffd33c6b653/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "392c0ce1d7fbeb987a1ade0dcbe7b3fb28990101", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/392c0ce1d7fbeb987a1ade0dcbe7b3fb28990101", "html_url": "https://github.com/Rust-GCC/gccrs/commit/392c0ce1d7fbeb987a1ade0dcbe7b3fb28990101"}], "stats": {"total": 59, "additions": 57, "deletions": 2}, "files": [{"sha": "366513252db48e43d840198d4c98ec351108d9e0", "filename": "gcc/ChangeLog.graphite", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa52513e04771f173336812c9ee92ffd33c6b653/gcc%2FChangeLog.graphite", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa52513e04771f173336812c9ee92ffd33c6b653/gcc%2FChangeLog.graphite", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog.graphite?ref=aa52513e04771f173336812c9ee92ffd33c6b653", "patch": "@@ -1,3 +1,9 @@\n+2010-03-04  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\t* graphite-poly.h (struct poly_scattering): Add layout documentation.\n+\t(struct poly_bb): Same.\n+\t(combine_context_id_scat): New.\n+\n 2010-03-02  Sebastian Pop  <sebastian.pop@amd.com>\n \n \tPR middle-end/42326"}, {"sha": "b5866995a63456265cc50a867400cd5eabbbf306", "filename": "gcc/graphite-poly.h", "status": "modified", "additions": 51, "deletions": 2, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa52513e04771f173336812c9ee92ffd33c6b653/gcc%2Fgraphite-poly.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa52513e04771f173336812c9ee92ffd33c6b653/gcc%2Fgraphite-poly.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-poly.h?ref=aa52513e04771f173336812c9ee92ffd33c6b653", "patch": "@@ -263,7 +263,9 @@ typedef struct poly_scattering *poly_scattering_p;\n \n struct poly_scattering\n {\n-  /* The scattering function containing the transformations.  */\n+  /* The scattering function containing the transformations: the\n+     layout of this polyhedron is: T|I|G with T the transform\n+     scattering, I the iteration domain, G the context parameters.  */\n   ppl_Polyhedron_t scattering;\n \n   /* The number of local variables.  */\n@@ -283,7 +285,9 @@ struct poly_bb\n   /* Pointer to the SCOP containing this PBB.  */\n   scop_p scop;\n \n-  /* The iteration domain of this bb.\n+  /* The iteration domain of this bb.  The layout of this polyhedron\n+     is I|G with I the iteration domain, G the context parameters.\n+\n      Example:\n \n      for (i = a - 7*b + 8; i <= 3*a + 13*b + 20; i++)\n@@ -1467,4 +1471,49 @@ restore_scattering (scop_p scop)\n   restore_lst_schedule (scop);\n }\n \n+/* For a given PBB, add to RES the scop context, the iteration domain,\n+   the original scattering when ORIGINAL_P is true, otherwise add the\n+   transformed scattering.  */\n+\n+static inline void\n+combine_context_id_scat (ppl_Pointset_Powerset_C_Polyhedron_t *res,\n+\t\t\t poly_bb_p pbb, bool original_p)\n+{\n+  ppl_Pointset_Powerset_C_Polyhedron_t context;\n+  ppl_Pointset_Powerset_C_Polyhedron_t id;\n+\n+  ppl_new_Pointset_Powerset_C_Polyhedron_from_C_Polyhedron\n+    (res, original_p ?\n+     PBB_ORIGINAL_SCATTERING (pbb) : PBB_TRANSFORMED_SCATTERING (pbb));\n+\n+  ppl_new_Pointset_Powerset_C_Polyhedron_from_Pointset_Powerset_C_Polyhedron\n+    (&context, SCOP_CONTEXT (PBB_SCOP (pbb)));\n+\n+  ppl_new_Pointset_Powerset_C_Polyhedron_from_Pointset_Powerset_C_Polyhedron\n+    (&id, PBB_DOMAIN (pbb));\n+\n+  /* Extend the context and the iteration domain to the dimension of\n+     the scattering: T|I|G.  */\n+  {\n+    ppl_dimension_type gdim, tdim, idim;\n+\n+    ppl_Pointset_Powerset_C_Polyhedron_space_dimension (*res, &tdim);\n+    ppl_Pointset_Powerset_C_Polyhedron_space_dimension (context, &gdim);\n+    ppl_Pointset_Powerset_C_Polyhedron_space_dimension (id, &idim);\n+\n+    if (tdim > gdim)\n+      ppl_insert_dimensions_pointset (context, 0, tdim - gdim);\n+\n+    if (tdim > idim)\n+      ppl_insert_dimensions_pointset (id, 0, tdim - idim);\n+  }\n+\n+  /* Add the context and the iteration domain to the result.  */\n+  ppl_Pointset_Powerset_C_Polyhedron_intersection_assign (*res, context);\n+  ppl_Pointset_Powerset_C_Polyhedron_intersection_assign (*res, id);\n+\n+  ppl_delete_Pointset_Powerset_C_Polyhedron (context);\n+  ppl_delete_Pointset_Powerset_C_Polyhedron (id);\n+}\n+\n #endif"}]}