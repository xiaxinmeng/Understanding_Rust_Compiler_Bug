{"sha": "f34fa464bb843234b1ca23c752ce8cb2207b9dff", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjM0ZmE0NjRiYjg0MzIzNGIxY2EyM2M3NTJjZThjYjIyMDdiOWRmZg==", "commit": {"author": {"name": "Zdenek Dvorak", "email": "rakdver@gcc.gnu.org", "date": "2004-09-25T11:06:43Z"}, "committer": {"name": "Zdenek Dvorak", "email": "rakdver@gcc.gnu.org", "date": "2004-09-25T11:06:43Z"}, "message": "re PR tree-optimization/17474 (Compiling at -01 yields different results)\n\n\tPR tree-optimization/17474\n\t* tree-ssa-ccp.c (maybe_fold_offset_to_component_ref): Determine\n\toffset of the field correctly when DECL_FIELD_BIT_OFFSET != 0.\n\nFrom-SVN: r88095", "tree": {"sha": "94519e6887d55fa32512e268b6a4a6a4262a6623", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/94519e6887d55fa32512e268b6a4a6a4262a6623"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f34fa464bb843234b1ca23c752ce8cb2207b9dff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f34fa464bb843234b1ca23c752ce8cb2207b9dff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f34fa464bb843234b1ca23c752ce8cb2207b9dff", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f34fa464bb843234b1ca23c752ce8cb2207b9dff/comments", "author": null, "committer": null, "parents": [{"sha": "17b2e29d7058aaa466b6562c919c8ad4e235576e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17b2e29d7058aaa466b6562c919c8ad4e235576e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/17b2e29d7058aaa466b6562c919c8ad4e235576e"}], "stats": {"total": 16, "additions": 12, "deletions": 4}, "files": [{"sha": "63d20983690bfe56c7391a2140d0c6ef69bbcc5d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f34fa464bb843234b1ca23c752ce8cb2207b9dff/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f34fa464bb843234b1ca23c752ce8cb2207b9dff/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f34fa464bb843234b1ca23c752ce8cb2207b9dff", "patch": "@@ -1,6 +1,12 @@\n+2004-09-25  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>\n+\n+\tPR tree-optimization/17474\n+\t* tree-ssa-ccp.c (maybe_fold_offset_to_component_ref): Determine\n+\toffset of the field correctly when DECL_FIELD_BIT_OFFSET != 0.\n+\n 2004-09-25  Jan Hubicka  <jh@suse.cz>\n \n-\t* predict.c (counts_to_freqs): Make glolbal.\n+\t* predict.c (counts_to_freqs): Make global.\n \t* predict.h (counts_to_freqa): Declare.\n \t* profile.c (compute_branch_probabilities): Compute frequencies\n \t* tree-profile.c (do_tree_profiling): Refine conditional on when"}, {"sha": "144a8bfaeb0e1bd027e92114c2815476ea4ec361", "filename": "gcc/tree-ssa-ccp.c", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f34fa464bb843234b1ca23c752ce8cb2207b9dff/gcc%2Ftree-ssa-ccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f34fa464bb843234b1ca23c752ce8cb2207b9dff/gcc%2Ftree-ssa-ccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-ccp.c?ref=f34fa464bb843234b1ca23c752ce8cb2207b9dff", "patch": "@@ -1395,7 +1395,7 @@ static tree\n maybe_fold_offset_to_component_ref (tree record_type, tree base, tree offset,\n \t\t\t\t    tree orig_type, bool base_is_ptr)\n {\n-  tree f, t, field_type, tail_array_field;\n+  tree f, t, field_type, tail_array_field, field_offset;\n \n   if (TREE_CODE (record_type) != RECORD_TYPE\n       && TREE_CODE (record_type) != UNION_TYPE\n@@ -1415,7 +1415,9 @@ maybe_fold_offset_to_component_ref (tree record_type, tree base, tree offset,\n \tcontinue;\n       if (DECL_BIT_FIELD (f))\n \tcontinue;\n-      if (TREE_CODE (DECL_FIELD_OFFSET (f)) != INTEGER_CST)\n+\n+      field_offset = byte_position (f);\n+      if (TREE_CODE (field_offset) != INTEGER_CST)\n \tcontinue;\n \n       /* ??? Java creates \"interesting\" fields for representing base classes.\n@@ -1428,7 +1430,7 @@ maybe_fold_offset_to_component_ref (tree record_type, tree base, tree offset,\n       tail_array_field = NULL_TREE;\n \n       /* Check to see if this offset overlaps with the field.  */\n-      cmp = tree_int_cst_compare (DECL_FIELD_OFFSET (f), offset);\n+      cmp = tree_int_cst_compare (field_offset, offset);\n       if (cmp > 0)\n \tcontinue;\n "}]}