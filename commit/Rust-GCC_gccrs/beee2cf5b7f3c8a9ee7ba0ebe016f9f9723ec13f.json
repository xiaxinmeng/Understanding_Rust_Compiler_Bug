{"sha": "beee2cf5b7f3c8a9ee7ba0ebe016f9f9723ec13f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmVlZTJjZjViN2YzYzhhOWVlN2JhMGViZTAxNmY5Zjk3MjNlYzEzZg==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@gmail.com", "date": "2012-04-26T00:02:12Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2012-04-26T00:02:12Z"}, "message": "savres.c: New test.\n\n\t* gcc.target/powerpc/savres.c: New test.\n\t* gcc.target/powerpc/powerpc.exp: Run it.\n\nFrom-SVN: r186850", "tree": {"sha": "3d0b9d5dc0c369c04d5b81c533816d8f28a1af00", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3d0b9d5dc0c369c04d5b81c533816d8f28a1af00"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/beee2cf5b7f3c8a9ee7ba0ebe016f9f9723ec13f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/beee2cf5b7f3c8a9ee7ba0ebe016f9f9723ec13f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/beee2cf5b7f3c8a9ee7ba0ebe016f9f9723ec13f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/beee2cf5b7f3c8a9ee7ba0ebe016f9f9723ec13f/comments", "author": {"login": "amodra", "id": 6006325, "node_id": "MDQ6VXNlcjYwMDYzMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amodra", "html_url": "https://github.com/amodra", "followers_url": "https://api.github.com/users/amodra/followers", "following_url": "https://api.github.com/users/amodra/following{/other_user}", "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}", "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amodra/subscriptions", "organizations_url": "https://api.github.com/users/amodra/orgs", "repos_url": "https://api.github.com/users/amodra/repos", "events_url": "https://api.github.com/users/amodra/events{/privacy}", "received_events_url": "https://api.github.com/users/amodra/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6d0f7cacc0b58c62280ec2e66543e550849a1ad9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d0f7cacc0b58c62280ec2e66543e550849a1ad9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d0f7cacc0b58c62280ec2e66543e550849a1ad9"}], "stats": {"total": 1174, "additions": 1173, "deletions": 1}, "files": [{"sha": "92c11605aaa4ab6063f4a8bb2106574d8f8a22e1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/beee2cf5b7f3c8a9ee7ba0ebe016f9f9723ec13f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/beee2cf5b7f3c8a9ee7ba0ebe016f9f9723ec13f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=beee2cf5b7f3c8a9ee7ba0ebe016f9f9723ec13f", "patch": "@@ -1,3 +1,8 @@\n+2012-04-26  Alan Modra  <amodra@gmail.com>\n+\n+\t* gcc.target/powerpc/savres.c: New test.\n+\t* gcc.target/powerpc/powerpc.exp: Run it.\n+\n 2012-04-26  Hans-Peter Nilsson  <hp@axis.com>\n \n \tPR target/53120"}, {"sha": "adc59f5804d369f68fbc05d03ba3e35ffbcc7cad", "filename": "gcc/testsuite/gcc.target/powerpc/powerpc.exp", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/beee2cf5b7f3c8a9ee7ba0ebe016f9f9723ec13f/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpowerpc.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/beee2cf5b7f3c8a9ee7ba0ebe016f9f9723ec13f/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpowerpc.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpowerpc.exp?ref=beee2cf5b7f3c8a9ee7ba0ebe016f9f9723ec13f", "patch": "@@ -1,4 +1,4 @@\n-#   Copyright (C) 2005, 2007 Free Software Foundation, Inc.\n+#   Copyright (C) 2005, 2007, 2012 Free Software Foundation, Inc.\n \n # This program is free software; you can redistribute it and/or modify\n # it under the terms of the GNU General Public License as published by\n@@ -37,5 +37,14 @@ dg-init\n dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.\\[cS\\]]] \\\n \t\"\" $DEFAULT_CFLAGS\n \n+set SAVRES_TEST_OPTS [list -Os -O2 {-Os -mno-multiple} {-O2 -mno-multiple}]\n+set alti \"\"\n+if [check_vmx_hw_available] {\n+    set alti \"-maltivec\"\n+}\n+torture-init\n+set-torture-options $SAVRES_TEST_OPTS\n+gcc-dg-runtest [list $srcdir/$subdir/savres.c] $alti\n+\n # All done.\n dg-finish"}, {"sha": "4ea966349c4385ca465b4d868bd6debf6ce239d1", "filename": "gcc/testsuite/gcc.target/powerpc/savres.c", "status": "added", "additions": 1158, "deletions": 0, "changes": 1158, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/beee2cf5b7f3c8a9ee7ba0ebe016f9f9723ec13f/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsavres.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/beee2cf5b7f3c8a9ee7ba0ebe016f9f9723ec13f/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsavres.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsavres.c?ref=beee2cf5b7f3c8a9ee7ba0ebe016f9f9723ec13f", "patch": "@@ -0,0 +1,1158 @@\n+/* { dg-do run } */\n+/* { dg-options \"-fno-inline -fomit-frame-pointer\" } */\n+\n+/* -fno-inline -maltivec -m32/-m64 -mmultiple/no-multiple -Os/-O2.  */\n+#ifndef NO_BODY\n+#define abort() __builtin_abort ()\n+#define vec_all_eq(v1,v2) __builtin_vec_vcmpeq_p (2, v1, v2)\n+#define SET(T,R,V) register T R __asm__ (#R) = V\n+#define SET_GPR(R,V) SET (long, R, V)\n+#define SET_FPR(R,V) SET (double, R, V)\n+#define SET_VR(R,V) SET (__attribute__ ((vector_size (16))) int, R, V)\n+#define SET_CR(R,V) __asm__ __volatile__ (\"mtcrf %0,%1\" : : \"n\" (1<<(7-R)), \"r\" (V<<(4*(7-R))) : \"cr\" #R)\n+#define TRASH_GPR(R) SET_GPR (R, 0)\n+#define TRASH_FPR(R) SET_FPR (R, 0)\n+#define TRASH_VR(R) SET_VR (R, val0)\n+#define TRASH_CR(R) SET_CR (R, 0)\n+#define TRASH_SOME_GPR TRASH_GPR (r30); TRASH_GPR (r31)\n+#define TRASH_SOME_FPR TRASH_FPR (fr28); TRASH_FPR (fr31)\n+#define TRASH_SOME_VR TRASH_VR (v26); TRASH_VR (v27); TRASH_VR (v31)\n+#define TRASH_SOME_CR TRASH_CR (2)\n+#define TRASH_ALL_GPR TRASH_GPR (r14); TRASH_GPR (r15); TRASH_GPR (r16); TRASH_GPR (r17); TRASH_GPR (r18); TRASH_GPR (r19); TRASH_GPR (r20); TRASH_GPR (r21); TRASH_GPR (r22); TRASH_GPR (r23); TRASH_GPR (r24); TRASH_GPR (r25); TRASH_GPR (r26); TRASH_GPR (r27); TRASH_GPR (r28); TRASH_GPR (r29); TRASH_GPR (r30); TRASH_GPR (r31)\n+#define TRASH_ALL_FPR TRASH_FPR (fr14); TRASH_FPR (fr15); TRASH_FPR (fr16); TRASH_FPR (fr17); TRASH_FPR (fr18); TRASH_FPR (fr19); TRASH_FPR (fr20); TRASH_FPR (fr21); TRASH_FPR (fr22); TRASH_FPR (fr23); TRASH_FPR (fr24); TRASH_FPR (fr25); TRASH_FPR (fr26); TRASH_FPR (fr27); TRASH_FPR (fr28); TRASH_FPR (fr29); TRASH_FPR (fr30); TRASH_FPR (fr31)\n+#define TRASH_ALL_VR TRASH_VR (v20); TRASH_VR (v21); TRASH_VR (v22); TRASH_VR (v23); TRASH_VR (v24); TRASH_VR (v25); TRASH_VR (v26); TRASH_VR (v27); TRASH_VR (v28); TRASH_VR (v29); TRASH_VR (v30); TRASH_VR (v31)\n+#define TRASH_ALL_CR TRASH_CR (2); TRASH_CR (3); TRASH_CR (4)\n+#define USE_SOME_GPR __asm__ __volatile__ (\"#%0 %1\" : : \"r\" (r30), \"r\" (r31))\n+#define USE_SOME_FPR __asm__ __volatile__ (\"#%0 %1\" : : \"f\" (fr28), \"f\" (fr31))\n+#define USE_SOME_VR __asm__ __volatile__ (\"#%0 %1 %2\" : : \"v\" (v26), \"v\" (v27), \"v\" (v31))\n+#define USE_SOME_CR\n+#define USE_ALL_GPR __asm__ __volatile__ (\"#%0 %1 %2 %3 %4 %5 %6 %7 %8 %9 %10 %11 %12 %13 %14 %15 %16 %17\" : : \"r\" (r14), \"r\" (r15), \"r\" (r16), \"r\" (r17), \"r\" (r18), \"r\" (r19), \"r\" (r20), \"r\" (r21), \"r\" (r22), \"r\" (r23), \"r\" (r24), \"r\" (r25), \"r\" (r26), \"r\" (r27), \"r\" (r28), \"r\" (r29), \"r\" (r30), \"r\" (r31))\n+#define USE_ALL_FPR __asm__ __volatile__ (\"#%0 %1 %2 %3 %4 %5 %6 %7 %8 %9 %10 %11 %12 %13 %14 %15 %16 %17\" : : \"f\" (fr14), \"f\" (fr15), \"f\" (fr16), \"f\" (fr17), \"f\" (fr18), \"f\" (fr19), \"f\" (fr20), \"f\" (fr21), \"f\" (fr22), \"f\" (fr23), \"f\" (fr24), \"f\" (fr25), \"f\" (fr26), \"f\" (fr27), \"f\" (fr28), \"f\" (fr29), \"f\" (fr30), \"f\" (fr31))\n+#define USE_ALL_VR __asm__ __volatile__ (\"#%0 %1 %2 %3 %4 %5 %6 %7 %8 %9 %10 %11\" : : \"v\" (v20), \"v\" (v21), \"v\" (v22), \"v\" (v23), \"v\" (v24), \"v\" (v25), \"v\" (v26), \"v\" (v27), \"v\" (v28), \"v\" (v29), \"v\" (v30), \"v\" (v31))\n+#define USE_ALL_CR\n+\n+#define INIT_GPR SET_GPR (r14, 14); SET_GPR (r15, 15); SET_GPR (r16, 16); SET_GPR (r17, 17); SET_GPR (r18, 18); SET_GPR (r19, 19); SET_GPR (r20, 20); SET_GPR (r21, 21); SET_GPR (r22, 22); SET_GPR (r23, 23); SET_GPR (r24, 24); SET_GPR (r25, 25); SET_GPR (r26, 26); SET_GPR (r27, 27); SET_GPR (r28, 28); SET_GPR (r29, 29); SET_GPR (r30, 30); SET_GPR (r31, 31)\n+#define INIT_FPR SET_FPR (fr14, 140.0); SET_FPR (fr15, 150.0); SET_FPR (fr16, 160.0); SET_FPR (fr17, 170.0); SET_FPR (fr18, 180.0); SET_FPR (fr19, 190.0); SET_FPR (fr20, 200.0); SET_FPR (fr21, 210.0); SET_FPR (fr22, 220.0); SET_FPR (fr23, 230.0); SET_FPR (fr24, 240.0); SET_FPR (fr25, 250.0); SET_FPR (fr26, 260.0); SET_FPR (fr27, 270.0); SET_FPR (fr28, 280.0); SET_FPR (fr29, 290.0); SET_FPR (fr30, 300.0); SET_FPR (fr31, 310.0)\n+#define INIT_VR SET_VR (v20, val20); SET_VR (v21, val21); SET_VR (v22, val22); SET_VR (v23, val23); SET_VR (v24, val24); SET_VR (v25, val25); SET_VR (v26, val26); SET_VR (v27, val27); SET_VR (v28, val28); SET_VR (v29, val29); SET_VR (v30, val30); SET_VR (v31, val31)\n+#define INIT_CR SET_CR (2, 6); SET_CR (3, 7); SET_CR (4, 8)\n+#ifdef __ALTIVEC__\n+__attribute__ ((vector_size (16))) int val0 = {0,0,0,0};\n+__attribute__ ((vector_size (16))) int val20 = {-201,-202,-203,-204};\n+__attribute__ ((vector_size (16))) int val21 = {-211,-212,-213,-214};\n+__attribute__ ((vector_size (16))) int val22 = {-221,-222,-223,-224};\n+__attribute__ ((vector_size (16))) int val23 = {-231,-232,-233,-234};\n+__attribute__ ((vector_size (16))) int val24 = {-241,-242,-243,-244};\n+__attribute__ ((vector_size (16))) int val25 = {-251,-252,-253,-254};\n+__attribute__ ((vector_size (16))) int val26 = {-261,-262,-263,-264};\n+__attribute__ ((vector_size (16))) int val27 = {-271,-272,-273,-274};\n+__attribute__ ((vector_size (16))) int val28 = {-281,-282,-283,-284};\n+__attribute__ ((vector_size (16))) int val29 = {-291,-292,-293,-294};\n+__attribute__ ((vector_size (16))) int val30 = {-301,-302,-303,-304};\n+__attribute__ ((vector_size (16))) int val31 = {-311,-312,-313,-314};\n+#define INIT_REGS INIT_VR; INIT_FPR; INIT_GPR; INIT_CR\n+#else\n+#ifndef __NO_FPRS__\n+#define INIT_REGS INIT_FPR; INIT_GPR; INIT_CR\n+#else\n+#define INIT_REGS INIT_GPR; INIT_CR\n+#endif\n+#endif\n+#define VERIFY_GPR if (r14 != 14 || r15 != 15 || r16 != 16 || r17 != 17 || r18 != 18 || r19 != 19 || r20 != 20 || r21 != 21 || r22 != 22 || r23 != 23 || r24 != 24 || r25 != 25 || r26 != 26 || r27 != 27 || r28 != 28 || r29 != 29 || r30 != 30 || r31 != 31) abort ()\n+#define VERIFY_FPR if (fr14 != 140.0 || fr15 != 150.0 || fr16 != 160.0 || fr17 != 170.0 || fr18 != 180.0 || fr19 != 190.0 || fr20 != 200.0 || fr21 != 210.0 || fr22 != 220.0 || fr23 != 230.0 || fr24 != 240.0 || fr25 != 250.0 || fr26 != 260.0 || fr27 != 270.0 || fr28 != 280.0 || fr29 != 290.0 || fr30 != 300.0 || fr31 != 310.0) abort ()\n+#define VERIFY_VR if (!vec_all_eq (v20, val20) || !vec_all_eq (v21, val21) || !vec_all_eq (v22, val22) || !vec_all_eq (v23, val23) || !vec_all_eq (v24, val24) || !vec_all_eq (v25, val25) || !vec_all_eq (v26, val26) || !vec_all_eq (v27, val27) || !vec_all_eq (v28, val28) || !vec_all_eq (v29, val29) || !vec_all_eq (v30, val30) || !vec_all_eq (v31, val31)) abort ()\n+#define VERIFY_CR ({ int tmp; __asm__ __volatile__ (\"mfcr %0\" : \"=r\" (tmp)); if ((tmp & ((15 << 20) | (15 << 16) | (15 << 12))) != ((6 << 20) | (7 << 16) | (8 << 12))) abort (); })\n+#ifdef __ALTIVEC__\n+#define VERIFY_REGS VERIFY_VR; VERIFY_FPR; VERIFY_GPR; VERIFY_CR\n+#else\n+#ifndef __NO_FPRS__\n+#define VERIFY_REGS VERIFY_FPR; VERIFY_GPR; VERIFY_CR\n+#else\n+#define VERIFY_REGS VERIFY_GPR; VERIFY_CR\n+#endif\n+#endif\n+\n+#else /* NO_BODY */\n+/* For looking at prologue and epilogue code without distractions.  */\n+#define TRASH_ALL_CR\n+#define TRASH_ALL_VR\n+#define TRASH_ALL_FPR\n+#define TRASH_ALL_GPR\n+#define USE_ALL_CR\n+#define USE_ALL_VR\n+#define USE_ALL_FPR\n+#define USE_ALL_GPR\n+#define TRASH_SOME_CR\n+#define TRASH_SOME_VR\n+#define TRASH_SOME_FPR\n+#define TRASH_SOME_GPR\n+#define USE_SOME_CR\n+#define USE_SOME_VR\n+#define USE_SOME_FPR\n+#define USE_SOME_GPR\n+#define INIT_REGS\n+#define VERIFY_REGS\n+#endif\n+\n+#ifdef __ALTIVEC__\n+#ifndef __NO_FPRS__\n+void b_all (void)\n+{\n+  char a[33000];\n+  TRASH_ALL_CR;\n+  TRASH_ALL_VR;\n+  TRASH_ALL_FPR;\n+  TRASH_ALL_GPR;\n+  USE_ALL_CR;\n+  USE_ALL_VR;\n+  USE_ALL_FPR;\n+  USE_ALL_GPR;\n+  __asm __volatile (\"#%0\" : \"=m\" (a) : : \"cr2\", \"cr3\", \"cr4\", \"v20\", \"v21\", \"v22\", \"v23\", \"v24\", \"v25\", \"v26\", \"v27\", \"v28\", \"v29\", \"v30\", \"v31\", \"fr14\", \"fr15\", \"fr16\", \"fr17\", \"fr18\", \"fr19\", \"fr20\", \"fr21\", \"fr22\", \"fr23\", \"fr24\", \"fr25\", \"fr26\", \"fr27\", \"fr28\", \"fr29\", \"fr30\", \"fr31\", \"r14\", \"r15\", \"r16\", \"r17\", \"r18\", \"r19\", \"r20\", \"r21\", \"r22\", \"r23\", \"r24\", \"r25\", \"r26\", \"r27\", \"r28\", \"r29\", \"r30\", \"r31\");\n+}\n+\n+void b_cvfr (void)\n+{\n+  char a[33000];\n+  TRASH_SOME_CR;\n+  TRASH_SOME_VR;\n+  TRASH_SOME_FPR;\n+  TRASH_SOME_GPR;\n+  USE_SOME_CR;\n+  USE_SOME_VR;\n+  USE_SOME_FPR;\n+  USE_SOME_GPR;\n+  __asm __volatile (\"#%0\" : \"=m\" (a) : : \"cr2\", \"v26\", \"v27\", \"v31\", \"fr28\", \"fr31\", \"r30\", \"r31\");\n+}\n+\n+void b_vfr (void)\n+{\n+  char a[33000];\n+  TRASH_SOME_VR;\n+  TRASH_SOME_FPR;\n+  TRASH_SOME_GPR;\n+  USE_SOME_VR;\n+  USE_SOME_FPR;\n+  USE_SOME_GPR;\n+  __asm __volatile (\"#%0\" : \"=m\" (a) : : \"v26\", \"v27\", \"v31\", \"fr28\", \"fr31\", \"r30\", \"r31\");\n+}\n+\n+void b_cvf (void)\n+{\n+  char a[33000];\n+  TRASH_SOME_CR;\n+  TRASH_SOME_VR;\n+  TRASH_SOME_FPR;\n+  USE_SOME_CR;\n+  USE_SOME_VR;\n+  USE_SOME_FPR;\n+  __asm __volatile (\"#%0\" : \"=m\" (a) : : \"cr2\", \"v26\", \"v27\", \"v31\", \"fr28\", \"fr31\");\n+}\n+\n+void b_vf (void)\n+{\n+  char a[33000];\n+  TRASH_SOME_VR;\n+  TRASH_SOME_FPR;\n+  USE_SOME_VR;\n+  USE_SOME_FPR;\n+  __asm __volatile (\"#%0\" : \"=m\" (a) : : \"v26\", \"v27\", \"v31\", \"fr28\", \"fr31\");\n+}\n+#endif\n+\n+void b_cvr (void)\n+{\n+  char a[33000];\n+  TRASH_SOME_CR;\n+  TRASH_SOME_VR;\n+  TRASH_SOME_GPR;\n+  USE_SOME_CR;\n+  USE_SOME_VR;\n+  USE_SOME_GPR;\n+  __asm __volatile (\"#%0\" : \"=m\" (a) : : \"cr2\", \"v26\", \"v27\", \"v31\", \"r30\", \"r31\");\n+}\n+\n+void b_vr (void)\n+{\n+  char a[33000];\n+  TRASH_SOME_VR;\n+  TRASH_SOME_GPR;\n+  USE_SOME_VR;\n+  USE_SOME_GPR;\n+  __asm __volatile (\"#%0\" : \"=m\" (a) : : \"v26\", \"v27\", \"v31\", \"r30\", \"r31\");\n+}\n+\n+void b_cv (void)\n+{\n+  char a[33000];\n+  TRASH_SOME_CR;\n+  TRASH_SOME_VR;\n+  USE_SOME_CR;\n+  USE_SOME_VR;\n+  __asm __volatile (\"#%0\" : \"=m\" (a) : : \"cr2\", \"v26\", \"v27\", \"v31\");\n+}\n+\n+void b_v (void)\n+{\n+  char a[33000];\n+  TRASH_SOME_VR;\n+  USE_SOME_VR;\n+  __asm __volatile (\"#%0\" : \"=m\" (a) : : \"v26\", \"v27\", \"v31\");\n+}\n+#endif\n+\n+#ifndef __NO_FPRS__\n+void b_cfr (void)\n+{\n+  char a[33000];\n+  TRASH_SOME_CR;\n+  TRASH_SOME_FPR;\n+  TRASH_SOME_GPR;\n+  USE_SOME_CR;\n+  USE_SOME_FPR;\n+  USE_SOME_GPR;\n+  __asm __volatile (\"#%0\" : \"=m\" (a) : : \"cr2\", \"fr28\", \"fr31\", \"r30\", \"r31\");\n+}\n+\n+void b_fr (void)\n+{\n+  char a[33000];\n+  TRASH_SOME_FPR;\n+  TRASH_SOME_GPR;\n+  USE_SOME_FPR;\n+  USE_SOME_GPR;\n+  __asm __volatile (\"#%0\" : \"=m\" (a) : : \"fr28\", \"fr31\", \"r30\", \"r31\");\n+}\n+\n+void b_cf (void)\n+{\n+  char a[33000];\n+  TRASH_SOME_CR;\n+  TRASH_SOME_FPR;\n+  USE_SOME_CR;\n+  USE_SOME_FPR;\n+  __asm __volatile (\"#%0\" : \"=m\" (a) : : \"cr2\", \"fr28\", \"fr31\");\n+}\n+\n+void b_f (void)\n+{\n+  char a[33000];\n+  TRASH_SOME_FPR;\n+  USE_SOME_FPR;\n+  __asm __volatile (\"#%0\" : \"=m\" (a) : : \"fr28\", \"fr31\");\n+}\n+#endif\n+\n+void b_cr (void)\n+{\n+  char a[33000];\n+  TRASH_SOME_CR;\n+  TRASH_SOME_GPR;\n+  USE_SOME_CR;\n+  USE_SOME_GPR;\n+  __asm __volatile (\"#%0\" : \"=m\" (a) : : \"cr2\", \"r30\", \"r31\");\n+}\n+\n+void b_r (void)\n+{\n+  char a[33000];\n+  TRASH_SOME_GPR;\n+  USE_SOME_GPR;\n+  __asm __volatile (\"#%0\" : \"=m\" (a) : : \"r30\", \"r31\");\n+}\n+\n+void b_c (void)\n+{\n+  char a[33000];\n+  TRASH_SOME_CR;\n+  USE_SOME_CR;\n+  __asm __volatile (\"#%0\" : \"=m\" (a) : : \"cr2\");\n+}\n+\n+void b_0 (void)\n+{\n+  char a[33000];\n+  __asm __volatile (\"#%0\" : \"=m\" (a) );\n+}\n+\n+#ifdef __ALTIVEC__\n+#ifndef __NO_FPRS__\n+void s_all (void)\n+{\n+  char a[33];\n+  TRASH_ALL_CR;\n+  TRASH_ALL_VR;\n+  TRASH_ALL_FPR;\n+  TRASH_ALL_GPR;\n+  USE_ALL_CR;\n+  USE_ALL_VR;\n+  USE_ALL_FPR;\n+  USE_ALL_GPR;\n+  __asm __volatile (\"#%0\" : \"=m\" (a) : : \"cr2\", \"cr3\", \"cr4\", \"v20\", \"v21\", \"v22\", \"v23\", \"v24\", \"v25\", \"v26\", \"v27\", \"v28\", \"v29\", \"v30\", \"v31\", \"fr14\", \"fr15\", \"fr16\", \"fr17\", \"fr18\", \"fr19\", \"fr20\", \"fr21\", \"fr22\", \"fr23\", \"fr24\", \"fr25\", \"fr26\", \"fr27\", \"fr28\", \"fr29\", \"fr30\", \"fr31\", \"r14\", \"r15\", \"r16\", \"r17\", \"r18\", \"r19\", \"r20\", \"r21\", \"r22\", \"r23\", \"r24\", \"r25\", \"r26\", \"r27\", \"r28\", \"r29\", \"r30\", \"r31\");\n+}\n+\n+void s_cvfr (void)\n+{\n+  char a[33];\n+  TRASH_SOME_CR;\n+  TRASH_SOME_VR;\n+  TRASH_SOME_FPR;\n+  TRASH_SOME_GPR;\n+  USE_SOME_CR;\n+  USE_SOME_VR;\n+  USE_SOME_FPR;\n+  USE_SOME_GPR;\n+  __asm __volatile (\"#%0\" : \"=m\" (a) : : \"cr2\", \"v26\", \"v27\", \"v31\", \"fr28\", \"fr31\", \"r30\", \"r31\");\n+}\n+\n+void s_vfr (void)\n+{\n+  char a[33];\n+  TRASH_SOME_VR;\n+  TRASH_SOME_FPR;\n+  TRASH_SOME_GPR;\n+  USE_SOME_VR;\n+  USE_SOME_FPR;\n+  USE_SOME_GPR;\n+  __asm __volatile (\"#%0\" : \"=m\" (a) : : \"v26\", \"v27\", \"v31\", \"fr28\", \"fr31\", \"r30\", \"r31\");\n+}\n+\n+void s_cvf (void)\n+{\n+  char a[33];\n+  TRASH_SOME_CR;\n+  TRASH_SOME_VR;\n+  TRASH_SOME_FPR;\n+  USE_SOME_CR;\n+  USE_SOME_VR;\n+  USE_SOME_FPR;\n+  __asm __volatile (\"#%0\" : \"=m\" (a) : : \"cr2\", \"v26\", \"v27\", \"v31\", \"fr28\", \"fr31\");\n+}\n+\n+void s_vf (void)\n+{\n+  char a[33];\n+  TRASH_SOME_VR;\n+  TRASH_SOME_FPR;\n+  USE_SOME_VR;\n+  USE_SOME_FPR;\n+  __asm __volatile (\"#%0\" : \"=m\" (a) : : \"v26\", \"v27\", \"v31\", \"fr28\", \"fr31\");\n+}\n+#endif\n+\n+void s_cvr (void)\n+{\n+  char a[33];\n+  TRASH_SOME_CR;\n+  TRASH_SOME_VR;\n+  TRASH_SOME_GPR;\n+  USE_SOME_CR;\n+  USE_SOME_VR;\n+  USE_SOME_GPR;\n+  __asm __volatile (\"#%0\" : \"=m\" (a) : : \"cr2\", \"v26\", \"v27\", \"v31\", \"r30\", \"r31\");\n+}\n+\n+void s_vr (void)\n+{\n+  char a[33];\n+  TRASH_SOME_VR;\n+  TRASH_SOME_GPR;\n+  USE_SOME_VR;\n+  USE_SOME_GPR;\n+  __asm __volatile (\"#%0\" : \"=m\" (a) : : \"v26\", \"v27\", \"v31\", \"r30\", \"r31\");\n+}\n+\n+void s_cv (void)\n+{\n+  char a[33];\n+  TRASH_SOME_CR;\n+  TRASH_SOME_VR;\n+  USE_SOME_CR;\n+  USE_SOME_VR;\n+  __asm __volatile (\"#%0\" : \"=m\" (a) : : \"cr2\", \"v26\", \"v27\", \"v31\");\n+}\n+\n+void s_v (void)\n+{\n+  char a[33];\n+  TRASH_SOME_VR;\n+  USE_SOME_VR;\n+  __asm __volatile (\"#%0\" : \"=m\" (a) : : \"v26\", \"v27\", \"v31\");\n+}\n+#endif\n+\n+#ifndef __NO_FPRS__\n+void s_cfr (void)\n+{\n+  char a[33];\n+  TRASH_SOME_CR;\n+  TRASH_SOME_FPR;\n+  TRASH_SOME_GPR;\n+  USE_SOME_CR;\n+  USE_SOME_FPR;\n+  USE_SOME_GPR;\n+  __asm __volatile (\"#%0\" : \"=m\" (a) : : \"cr2\", \"fr28\", \"fr31\", \"r30\", \"r31\");\n+}\n+\n+void s_fr (void)\n+{\n+  char a[33];\n+  TRASH_SOME_FPR;\n+  TRASH_SOME_GPR;\n+  USE_SOME_FPR;\n+  USE_SOME_GPR;\n+  __asm __volatile (\"#%0\" : \"=m\" (a) : : \"fr28\", \"fr31\", \"r30\", \"r31\");\n+}\n+\n+void s_cf (void)\n+{\n+  char a[33];\n+  TRASH_SOME_CR;\n+  TRASH_SOME_FPR;\n+  USE_SOME_CR;\n+  USE_SOME_FPR;\n+  __asm __volatile (\"#%0\" : \"=m\" (a) : : \"cr2\", \"fr28\", \"fr31\");\n+}\n+\n+void s_f (void)\n+{\n+  char a[33];\n+  TRASH_SOME_FPR;\n+  USE_SOME_FPR;\n+  __asm __volatile (\"#%0\" : \"=m\" (a) : : \"fr28\", \"fr31\");\n+}\n+#endif\n+\n+void s_cr (void)\n+{\n+  char a[33];\n+  TRASH_SOME_CR;\n+  TRASH_SOME_GPR;\n+  USE_SOME_CR;\n+  USE_SOME_GPR;\n+  __asm __volatile (\"#%0\" : \"=m\" (a) : : \"cr2\", \"r30\", \"r31\");\n+}\n+\n+void s_r (void)\n+{\n+  char a[33];\n+  TRASH_SOME_GPR;\n+  USE_SOME_GPR;\n+  __asm __volatile (\"#%0\" : \"=m\" (a) : : \"r30\", \"r31\");\n+}\n+\n+void s_c (void)\n+{\n+  char a[33];\n+  TRASH_SOME_CR;\n+  USE_SOME_CR;\n+  __asm __volatile (\"#%0\" : \"=m\" (a) : : \"cr2\");\n+}\n+\n+void s_0 (void)\n+{\n+  char a[33];\n+  __asm __volatile (\"#%0\" : \"=m\" (a) );\n+}\n+\n+#ifdef __ALTIVEC__\n+#ifndef __NO_FPRS__\n+void wb_all (void)\n+{\n+  char b[10];\n+  void nb_all (void)\n+  {\n+    char a[33000];\n+    TRASH_ALL_CR;\n+    TRASH_ALL_VR;\n+    TRASH_ALL_FPR;\n+    TRASH_ALL_GPR;\n+    USE_ALL_CR;\n+    USE_ALL_VR;\n+    USE_ALL_FPR;\n+    USE_ALL_GPR;\n+    __asm __volatile (\"#%0 %1\" : \"=m\" (a), \"=m\" (b) : : \"cr2\", \"cr3\", \"cr4\", \"v20\", \"v21\", \"v22\", \"v23\", \"v24\", \"v25\", \"v26\", \"v27\", \"v28\", \"v29\", \"v30\", \"v31\", \"fr14\", \"fr15\", \"fr16\", \"fr17\", \"fr18\", \"fr19\", \"fr20\", \"fr21\", \"fr22\", \"fr23\", \"fr24\", \"fr25\", \"fr26\", \"fr27\", \"fr28\", \"fr29\", \"fr30\", \"fr31\", \"r14\", \"r15\", \"r16\", \"r17\", \"r18\", \"r19\", \"r20\", \"r21\", \"r22\", \"r23\", \"r24\", \"r25\", \"r26\", \"r27\", \"r28\", \"r29\", \"r30\", \"r31\");\n+  }\n+  nb_all();\n+}\n+\n+void wb_cvfr (void)\n+{\n+  char b[10];\n+  void nb_cvfr (void)\n+  {\n+    char a[33000];\n+    TRASH_SOME_CR;\n+    TRASH_SOME_VR;\n+    TRASH_SOME_FPR;\n+    TRASH_SOME_GPR;\n+    USE_SOME_CR;\n+    USE_SOME_VR;\n+    USE_SOME_FPR;\n+    USE_SOME_GPR;\n+    __asm __volatile (\"#%0 %1\" : \"=m\" (a), \"=m\" (b) : : \"cr2\", \"v26\", \"v27\", \"v31\", \"fr28\", \"fr31\", \"r30\", \"r31\");\n+  }\n+  nb_cvfr ();\n+}\n+\n+void wb_vfr (void)\n+{\n+  char b[10];\n+  void nb_vfr (void)\n+  {\n+    char a[33000];\n+    TRASH_SOME_VR;\n+    TRASH_SOME_FPR;\n+    TRASH_SOME_GPR;\n+    USE_SOME_VR;\n+    USE_SOME_FPR;\n+    USE_SOME_GPR;\n+    __asm __volatile (\"#%0 %1\" : \"=m\" (a), \"=m\" (b) : : \"v26\", \"v27\", \"v31\", \"fr28\", \"fr31\", \"r30\", \"r31\");\n+  }\n+  nb_vfr ();\n+}\n+\n+void wb_cvf (void)\n+{\n+  char b[10];\n+  void nb_cvf (void)\n+  {\n+    char a[33000];\n+    TRASH_SOME_CR;\n+    TRASH_SOME_VR;\n+    TRASH_SOME_FPR;\n+    USE_SOME_CR;\n+    USE_SOME_VR;\n+    USE_SOME_FPR;\n+    __asm __volatile (\"#%0 %1\" : \"=m\" (a), \"=m\" (b) : : \"cr2\", \"v26\", \"v27\", \"v31\", \"fr28\", \"fr31\");\n+  }\n+  nb_cvf ();\n+}\n+\n+void wb_vf (void)\n+{\n+  char b[10];\n+  void nb_vf (void)\n+  {\n+    char a[33000];\n+    TRASH_SOME_VR;\n+    TRASH_SOME_FPR;\n+    USE_SOME_VR;\n+    USE_SOME_FPR;\n+    __asm __volatile (\"#%0 %1\" : \"=m\" (a), \"=m\" (b) : : \"v26\", \"v27\", \"v31\", \"fr28\", \"fr31\");\n+  }\n+  nb_vf ();\n+}\n+#endif\n+\n+void wb_cvr (void)\n+{\n+  char b[10];\n+  void nb_cvr (void)\n+  {\n+    char a[33000];\n+    TRASH_SOME_CR;\n+    TRASH_SOME_VR;\n+    TRASH_SOME_GPR;\n+    USE_SOME_CR;\n+    USE_SOME_VR;\n+    USE_SOME_GPR;\n+    __asm __volatile (\"#%0 %1\" : \"=m\" (a), \"=m\" (b) : : \"cr2\", \"v26\", \"v27\", \"v31\", \"r30\", \"r31\");\n+  }\n+  nb_cvr ();\n+}\n+\n+void wb_vr (void)\n+{\n+  char b[10];\n+  void nb_vr (void)\n+  {\n+    char a[33000];\n+    TRASH_SOME_VR;\n+    TRASH_SOME_GPR;\n+    USE_SOME_VR;\n+    USE_SOME_GPR;\n+    __asm __volatile (\"#%0 %1\" : \"=m\" (a), \"=m\" (b) : : \"v26\", \"v27\", \"v31\", \"r30\", \"r31\");\n+  }\n+  nb_vr ();\n+}\n+\n+void wb_cv (void)\n+{\n+  char b[10];\n+  void nb_cv (void)\n+  {\n+    char a[33000];\n+    TRASH_SOME_CR;\n+    TRASH_SOME_VR;\n+    USE_SOME_CR;\n+    USE_SOME_VR;\n+    __asm __volatile (\"#%0 %1\" : \"=m\" (a), \"=m\" (b) : : \"cr2\", \"v26\", \"v27\", \"v31\");\n+  }\n+  nb_cv ();\n+}\n+\n+void wb_v (void)\n+{\n+  char b[10];\n+  void nb_v (void)\n+  {\n+    char a[33000];\n+    TRASH_SOME_VR;\n+    USE_SOME_VR;\n+    __asm __volatile (\"#%0 %1\" : \"=m\" (a), \"=m\" (b) : : \"v26\", \"v27\", \"v31\");\n+  }\n+  nb_v ();\n+}\n+#endif\n+\n+#ifndef __NO_FPRS__\n+void wb_cfr (void)\n+{\n+  char b[10];\n+  void nb_cfr (void)\n+  {\n+    char a[33000];\n+    TRASH_SOME_CR;\n+    TRASH_SOME_FPR;\n+    TRASH_SOME_GPR;\n+    USE_SOME_CR;\n+    USE_SOME_FPR;\n+    USE_SOME_GPR;\n+    __asm __volatile (\"#%0 %1\" : \"=m\" (a), \"=m\" (b) : : \"cr2\", \"fr28\", \"fr31\", \"r30\", \"r31\");\n+  }\n+  nb_cfr ();\n+}\n+\n+void wb_fr (void)\n+{\n+  char b[10];\n+  void nb_fr (void)\n+  {\n+    char a[33000];\n+    TRASH_SOME_FPR;\n+    TRASH_SOME_GPR;\n+    USE_SOME_FPR;\n+    USE_SOME_GPR;\n+    __asm __volatile (\"#%0 %1\" : \"=m\" (a), \"=m\" (b) : : \"fr28\", \"fr31\", \"r30\", \"r31\");\n+  }\n+  nb_fr ();\n+}\n+\n+void wb_cf (void)\n+{\n+  char b[10];\n+  void nb_cf (void)\n+  {\n+    char a[33000];\n+    TRASH_SOME_CR;\n+    TRASH_SOME_FPR;\n+    USE_SOME_CR;\n+    USE_SOME_FPR;\n+    __asm __volatile (\"#%0 %1\" : \"=m\" (a), \"=m\" (b) : : \"cr2\", \"fr28\", \"fr31\");\n+  }\n+  nb_cf ();\n+}\n+\n+void wb_f (void)\n+{\n+  char b[10];\n+  void nb_f (void)\n+  {\n+    char a[33000];\n+    TRASH_SOME_FPR;\n+    USE_SOME_FPR;\n+    __asm __volatile (\"#%0 %1\" : \"=m\" (a), \"=m\" (b) : : \"fr28\", \"fr31\");\n+  }\n+  nb_f ();\n+}\n+#endif\n+\n+void wb_cr (void)\n+{\n+  char b[10];\n+  void nb_cr (void)\n+  {\n+    char a[33000];\n+    TRASH_SOME_CR;\n+    TRASH_SOME_GPR;\n+    USE_SOME_CR;\n+    USE_SOME_GPR;\n+    __asm __volatile (\"#%0 %1\" : \"=m\" (a), \"=m\" (b) : : \"cr2\", \"r30\", \"r31\");\n+  }\n+  nb_cr ();\n+}\n+\n+void wb_r (void)\n+{\n+  char b[10];\n+  void nb_r (void)\n+  {\n+    char a[33000];\n+    TRASH_SOME_GPR;\n+    USE_SOME_GPR;\n+    __asm __volatile (\"#%0 %1\" : \"=m\" (a), \"=m\" (b) : : \"r30\", \"r31\");\n+  }\n+  nb_r ();\n+}\n+\n+void wb_c (void)\n+{\n+  char b[10];\n+  void nb_c (void)\n+  {\n+    char a[33000];\n+    TRASH_SOME_CR;\n+    USE_SOME_CR;\n+    __asm __volatile (\"#%0 %1\" : \"=m\" (a), \"=m\" (b) : : \"cr2\");\n+  }\n+  nb_c ();\n+}\n+\n+void wb_0 (void)\n+{\n+  char b[10];\n+  void nb_0 (void)\n+  {\n+    char a[33000];\n+    __asm __volatile (\"#%0 %1\" : \"=m\" (a), \"=m\" (b) );\n+  }\n+  nb_0 ();\n+}\n+\n+#ifdef __ALTIVEC__\n+#ifndef __NO_FPRS__\n+void ws_all (void)\n+{\n+  char b[10];\n+  void ns_all (void)\n+  {\n+    char a[33];\n+    TRASH_ALL_CR;\n+    TRASH_ALL_VR;\n+    TRASH_ALL_FPR;\n+    TRASH_ALL_GPR;\n+    USE_ALL_CR;\n+    USE_ALL_VR;\n+    USE_ALL_FPR;\n+    USE_ALL_GPR;\n+    __asm __volatile (\"#%0 %1\" : \"=m\" (a), \"=m\" (b) : : \"cr2\", \"cr3\", \"cr4\", \"v20\", \"v21\", \"v22\", \"v23\", \"v24\", \"v25\", \"v26\", \"v27\", \"v28\", \"v29\", \"v30\", \"v31\", \"fr14\", \"fr15\", \"fr16\", \"fr17\", \"fr18\", \"fr19\", \"fr20\", \"fr21\", \"fr22\", \"fr23\", \"fr24\", \"fr25\", \"fr26\", \"fr27\", \"fr28\", \"fr29\", \"fr30\", \"fr31\", \"r14\", \"r15\", \"r16\", \"r17\", \"r18\", \"r19\", \"r20\", \"r21\", \"r22\", \"r23\", \"r24\", \"r25\", \"r26\", \"r27\", \"r28\", \"r29\", \"r30\", \"r31\");\n+  }\n+  ns_all();\n+}\n+\n+void ws_cvfr (void)\n+{\n+  char b[10];\n+  void ns_cvfr (void)\n+  {\n+    char a[33];\n+    TRASH_SOME_CR;\n+    TRASH_SOME_VR;\n+    TRASH_SOME_FPR;\n+    TRASH_SOME_GPR;\n+    USE_SOME_CR;\n+    USE_SOME_VR;\n+    USE_SOME_FPR;\n+    USE_SOME_GPR;\n+    __asm __volatile (\"#%0 %1\" : \"=m\" (a), \"=m\" (b) : : \"cr2\", \"v26\", \"v27\", \"v31\", \"fr28\", \"fr31\", \"r30\", \"r31\");\n+  }\n+  ns_cvfr ();\n+}\n+\n+void ws_vfr (void)\n+{\n+  char b[10];\n+  void ns_vfr (void)\n+  {\n+    char a[33];\n+    TRASH_SOME_VR;\n+    TRASH_SOME_FPR;\n+    TRASH_SOME_GPR;\n+    USE_SOME_VR;\n+    USE_SOME_FPR;\n+    USE_SOME_GPR;\n+    __asm __volatile (\"#%0 %1\" : \"=m\" (a), \"=m\" (b) : : \"v26\", \"v27\", \"v31\", \"fr28\", \"fr31\", \"r30\", \"r31\");\n+  }\n+  ns_vfr ();\n+}\n+\n+void ws_cvf (void)\n+{\n+  char b[10];\n+  void ns_cvf (void)\n+  {\n+    char a[33];\n+    TRASH_SOME_CR;\n+    TRASH_SOME_VR;\n+    TRASH_SOME_FPR;\n+    USE_SOME_CR;\n+    USE_SOME_VR;\n+    USE_SOME_FPR;\n+    __asm __volatile (\"#%0 %1\" : \"=m\" (a), \"=m\" (b) : : \"cr2\", \"v26\", \"v27\", \"v31\", \"fr28\", \"fr31\");\n+  }\n+  ns_cvf ();\n+}\n+\n+void ws_vf (void)\n+{\n+  char b[10];\n+  void ns_vf (void)\n+  {\n+    char a[33];\n+    TRASH_SOME_VR;\n+    TRASH_SOME_FPR;\n+    USE_SOME_VR;\n+    USE_SOME_FPR;\n+    __asm __volatile (\"#%0 %1\" : \"=m\" (a), \"=m\" (b) : : \"v26\", \"v27\", \"v31\", \"fr28\", \"fr31\");\n+  }\n+  ns_vf ();\n+}\n+#endif\n+\n+void ws_cvr (void)\n+{\n+  char b[10];\n+  void ns_cvr (void)\n+  {\n+    char a[33];\n+    TRASH_SOME_CR;\n+    TRASH_SOME_VR;\n+    TRASH_SOME_GPR;\n+    USE_SOME_CR;\n+    USE_SOME_VR;\n+    USE_SOME_GPR;\n+    __asm __volatile (\"#%0 %1\" : \"=m\" (a), \"=m\" (b) : : \"cr2\", \"v26\", \"v27\", \"v31\", \"r30\", \"r31\");\n+  }\n+  ns_cvr ();\n+}\n+\n+void ws_vr (void)\n+{\n+  char b[10];\n+  void ns_vr (void)\n+  {\n+    char a[33];\n+    TRASH_SOME_VR;\n+    TRASH_SOME_FPR;\n+    USE_SOME_VR;\n+    USE_SOME_FPR;\n+    __asm __volatile (\"#%0 %1\" : \"=m\" (a), \"=m\" (b) : : \"v26\", \"v27\", \"v31\", \"r30\", \"r31\");\n+  }\n+  ns_vr ();\n+}\n+\n+void ws_cv (void)\n+{\n+  char b[10];\n+  void ns_cv (void)\n+  {\n+    char a[33];\n+    TRASH_SOME_CR;\n+    TRASH_SOME_VR;\n+    USE_SOME_CR;\n+    USE_SOME_VR;\n+    __asm __volatile (\"#%0 %1\" : \"=m\" (a), \"=m\" (b) : : \"cr2\", \"v26\", \"v27\", \"v31\");\n+  }\n+  ns_cv ();\n+}\n+\n+void ws_v (void)\n+{\n+  char b[10];\n+  void ns_v (void)\n+  {\n+    char a[33];\n+    TRASH_SOME_VR;\n+    USE_SOME_VR;\n+    __asm __volatile (\"#%0 %1\" : \"=m\" (a), \"=m\" (b) : : \"v26\", \"v27\", \"v31\");\n+  }\n+  ns_v ();\n+}\n+#endif\n+\n+#ifndef __NO_FPRS__\n+void ws_cfr (void)\n+{\n+  char b[10];\n+  void ns_cfr (void)\n+  {\n+    char a[33];\n+    TRASH_SOME_CR;\n+    TRASH_SOME_FPR;\n+    TRASH_SOME_GPR;\n+    USE_SOME_CR;\n+    USE_SOME_FPR;\n+    USE_SOME_GPR;\n+    __asm __volatile (\"#%0 %1\" : \"=m\" (a), \"=m\" (b) : : \"cr2\", \"fr28\", \"fr31\", \"r30\", \"r31\");\n+  }\n+  ns_cfr ();\n+}\n+\n+void ws_fr (void)\n+{\n+  char b[10];\n+  void ns_fr (void)\n+  {\n+    char a[33];\n+    TRASH_SOME_FPR;\n+    TRASH_SOME_GPR;\n+    USE_SOME_FPR;\n+    USE_SOME_GPR;\n+    __asm __volatile (\"#%0 %1\" : \"=m\" (a), \"=m\" (b) : : \"fr28\", \"fr31\", \"r30\", \"r31\");\n+  }\n+  ns_fr ();\n+}\n+\n+void ws_cf (void)\n+{\n+  char b[10];\n+  void ns_cf (void)\n+  {\n+    char a[33];\n+    TRASH_SOME_CR;\n+    TRASH_SOME_FPR;\n+    USE_SOME_CR;\n+    USE_SOME_FPR;\n+    __asm __volatile (\"#%0 %1\" : \"=m\" (a), \"=m\" (b) : : \"cr2\", \"fr28\", \"fr31\");\n+  }\n+  ns_cf ();\n+}\n+\n+void ws_f (void)\n+{\n+  char b[10];\n+  void ns_f (void)\n+  {\n+    char a[33];\n+    TRASH_SOME_FPR;\n+    USE_SOME_FPR;\n+    __asm __volatile (\"#%0 %1\" : \"=m\" (a), \"=m\" (b) : : \"fr28\", \"fr31\");\n+  }\n+  ns_f ();\n+}\n+#endif\n+\n+void ws_cr (void)\n+{\n+  char b[10];\n+  void ns_cr (void)\n+  {\n+    char a[33];\n+    TRASH_SOME_CR;\n+    TRASH_SOME_GPR;\n+    USE_SOME_CR;\n+    USE_SOME_GPR;\n+    __asm __volatile (\"#%0 %1\" : \"=m\" (a), \"=m\" (b) : : \"cr2\", \"r30\", \"r31\");\n+  }\n+  ns_cr ();\n+}\n+\n+void ws_r (void)\n+{\n+  char b[10];\n+  void ns_r (void)\n+  {\n+    char a[33];\n+    TRASH_SOME_GPR;\n+    USE_SOME_GPR;\n+    __asm __volatile (\"#%0 %1\" : \"=m\" (a), \"=m\" (b) : : \"r30\", \"r31\");\n+  }\n+  ns_r ();\n+}\n+\n+void ws_c (void)\n+{\n+  char b[10];\n+  void ns_c (void)\n+  {\n+    char a[33];\n+    TRASH_SOME_CR;\n+    USE_SOME_CR;\n+    __asm __volatile (\"#%0 %1\" : \"=m\" (a), \"=m\" (b) : : \"cr2\");\n+  }\n+  ns_c ();\n+}\n+\n+void ws_0 (void)\n+{\n+  char b[10];\n+  void ns_0 (void)\n+  {\n+    char a[33];\n+    __asm __volatile (\"#%0 %1\" : \"=m\" (a), \"=m\" (b) );\n+  }\n+  ns_0 ();\n+}\n+\n+int main (void)\n+{\n+  INIT_REGS;\n+  USE_ALL_CR;\n+#ifdef __ALTIVEC__\n+  USE_ALL_VR;\n+#ifndef __NO_FPRS__\n+  USE_ALL_FPR;\n+#endif\n+#endif\n+  USE_ALL_GPR;\n+#ifdef __ALTIVEC__\n+#ifndef __NO_FPRS__\n+  b_all ();\n+  VERIFY_REGS;\n+  b_cvfr ();\n+  VERIFY_REGS;\n+  b_vfr ();\n+  VERIFY_REGS;\n+  b_cvf ();\n+  VERIFY_REGS;\n+  b_vf ();\n+  VERIFY_REGS;\n+#endif\n+  b_cvr ();\n+  VERIFY_REGS;\n+  b_vr ();\n+  VERIFY_REGS;\n+  b_cv ();\n+  VERIFY_REGS;\n+  b_v ();\n+  VERIFY_REGS;\n+#endif\n+#ifndef __NO_FPRS__\n+  b_cfr ();\n+  VERIFY_REGS;\n+  b_fr ();\n+  VERIFY_REGS;\n+  b_cf ();\n+  VERIFY_REGS;\n+  b_f ();\n+  VERIFY_REGS;\n+#endif\n+  b_cr ();\n+  VERIFY_REGS;\n+  b_r ();\n+  VERIFY_REGS;\n+  b_c ();\n+  VERIFY_REGS;\n+  b_0 ();\n+  VERIFY_REGS;\n+#ifdef __ALTIVEC__\n+#ifndef __NO_FPRS__\n+  s_all ();\n+  VERIFY_REGS;\n+  s_cvfr ();\n+  VERIFY_REGS;\n+  s_vfr ();\n+  VERIFY_REGS;\n+  s_cvf ();\n+  VERIFY_REGS;\n+  s_vf ();\n+  VERIFY_REGS;\n+#endif\n+  s_cvr ();\n+  VERIFY_REGS;\n+  s_vr ();\n+  VERIFY_REGS;\n+  s_cv ();\n+  VERIFY_REGS;\n+  s_v ();\n+  VERIFY_REGS;\n+#endif\n+#ifndef __NO_FPRS__\n+  s_cfr ();\n+  VERIFY_REGS;\n+  s_fr ();\n+  VERIFY_REGS;\n+  s_cf ();\n+  VERIFY_REGS;\n+  s_f ();\n+  VERIFY_REGS;\n+#endif\n+  s_cr ();\n+  VERIFY_REGS;\n+  s_r ();\n+  VERIFY_REGS;\n+  s_c ();\n+  VERIFY_REGS;\n+  s_0 ();\n+  VERIFY_REGS;\n+#ifdef __ALTIVEC__\n+#ifndef __NO_FPRS__\n+  wb_all ();\n+  VERIFY_REGS;\n+  wb_cvfr ();\n+  VERIFY_REGS;\n+  wb_vfr ();\n+  VERIFY_REGS;\n+  wb_cvf ();\n+  VERIFY_REGS;\n+  wb_vf ();\n+  VERIFY_REGS;\n+#endif\n+  wb_cvr ();\n+  VERIFY_REGS;\n+  wb_vr ();\n+  VERIFY_REGS;\n+  wb_cv ();\n+  VERIFY_REGS;\n+  wb_v ();\n+  VERIFY_REGS;\n+#endif\n+#ifndef __NO_FPRS__\n+  wb_cfr ();\n+  VERIFY_REGS;\n+  wb_fr ();\n+  VERIFY_REGS;\n+  wb_cf ();\n+  VERIFY_REGS;\n+  wb_f ();\n+  VERIFY_REGS;\n+#endif\n+  wb_cr ();\n+  VERIFY_REGS;\n+  wb_r ();\n+  VERIFY_REGS;\n+  wb_c ();\n+  VERIFY_REGS;\n+  wb_0 ();\n+  VERIFY_REGS;\n+#ifdef __ALTIVEC__\n+#ifndef __NO_FPRS__\n+  ws_all ();\n+  VERIFY_REGS;\n+  ws_cvfr ();\n+  VERIFY_REGS;\n+  ws_vfr ();\n+  VERIFY_REGS;\n+  ws_cvf ();\n+  VERIFY_REGS;\n+  ws_vf ();\n+  VERIFY_REGS;\n+#endif\n+  ws_cvr ();\n+  VERIFY_REGS;\n+  ws_vr ();\n+  VERIFY_REGS;\n+  ws_cv ();\n+  VERIFY_REGS;\n+  ws_v ();\n+  VERIFY_REGS;\n+#endif\n+#ifndef __NO_FPRS__\n+  ws_cfr ();\n+  VERIFY_REGS;\n+  ws_fr ();\n+  VERIFY_REGS;\n+  ws_cf ();\n+  VERIFY_REGS;\n+  ws_f ();\n+  VERIFY_REGS;\n+#endif\n+  ws_cr ();\n+  VERIFY_REGS;\n+  ws_r ();\n+  VERIFY_REGS;\n+  ws_c ();\n+  VERIFY_REGS;\n+  ws_0 ();\n+  VERIFY_REGS;\n+  return 0;\n+}"}]}