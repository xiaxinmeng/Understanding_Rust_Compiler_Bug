{"sha": "19305875c254f3eb3089f2f49737a0138ca7f1a5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTkzMDU4NzVjMjU0ZjNlYjMwODlmMmY0OTczN2EwMTM4Y2E3ZjFhNQ==", "commit": {"author": {"name": "Oleg Endo", "email": "olegendo@gcc.gnu.org", "date": "2014-03-01T13:16:37Z"}, "committer": {"name": "Oleg Endo", "email": "olegendo@gcc.gnu.org", "date": "2014-03-01T13:16:37Z"}, "message": "re PR target/60071 ([SH] internal compiler error: in final_scan_insn, at final.c:2963)\n\n\tPR target/60071\n\t* config/sh/sh.md (*mov_t_msb_neg): Split into ...\n\t(*mov_t_msb_neg_negc): ... this new insn.\n\n\tPR target/60071\n\t* gcc.c-torture/compile/pr60071.c: New.\n\nFrom-SVN: r208242", "tree": {"sha": "f894ad1c521394b83e649b88b3eb4fca7c8934ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f894ad1c521394b83e649b88b3eb4fca7c8934ec"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/19305875c254f3eb3089f2f49737a0138ca7f1a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19305875c254f3eb3089f2f49737a0138ca7f1a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/19305875c254f3eb3089f2f49737a0138ca7f1a5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19305875c254f3eb3089f2f49737a0138ca7f1a5/comments", "author": null, "committer": null, "parents": [{"sha": "570215f99d7ea33be820a1c5512ff885d7ca9f36", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/570215f99d7ea33be820a1c5512ff885d7ca9f36", "html_url": "https://github.com/Rust-GCC/gccrs/commit/570215f99d7ea33be820a1c5512ff885d7ca9f36"}], "stats": {"total": 38, "additions": 36, "deletions": 2}, "files": [{"sha": "c7936eafaed774801e12f31fc59a835fed8a0691", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19305875c254f3eb3089f2f49737a0138ca7f1a5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19305875c254f3eb3089f2f49737a0138ca7f1a5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=19305875c254f3eb3089f2f49737a0138ca7f1a5", "patch": "@@ -1,3 +1,9 @@\n+2014-03-01  Oleg Endo  <olegendo@gcc.gnu.org>\n+\n+\tPR target/60071\n+\t* config/sh/sh.md (*mov_t_msb_neg): Split into ...\n+\t(*mov_t_msb_neg_negc): ... this new insn.\n+\n 2014-02-28  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/58678"}, {"sha": "76af3a2e18b7e515c518a0cf898da6258b017aaa", "filename": "gcc/config/sh/sh.md", "status": "modified", "additions": 17, "deletions": 2, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19305875c254f3eb3089f2f49737a0138ca7f1a5/gcc%2Fconfig%2Fsh%2Fsh.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19305875c254f3eb3089f2f49737a0138ca7f1a5/gcc%2Fconfig%2Fsh%2Fsh.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.md?ref=19305875c254f3eb3089f2f49737a0138ca7f1a5", "patch": "@@ -11434,6 +11434,10 @@ label:\n ;;\tT = 1: 0x80000000 -> reg\n ;;\tT = 0: 0x7FFFFFFF -> reg\n ;; This works because 0 - 0x80000000 = 0x80000000.\n+;;\n+;; This insn must not match again after it has been split into the constant\n+;; load and negc.  This is accomplished by the special negc insn that\n+;; has a use on the operand.\n (define_insn_and_split \"*mov_t_msb_neg\"\n   [(set (match_operand:SI 0 \"arith_reg_dest\")\n \t(minus:SI (const_int -2147483648)  ;; 0x80000000\n@@ -11444,12 +11448,23 @@ label:\n   \"&& can_create_pseudo_p ()\"\n   [(set (match_dup 2) (const_int -2147483648))\n    (parallel [(set (match_dup 0) (minus:SI (neg:SI (match_dup 2))\n-\t\t\t\t (reg:SI T_REG)))\n-\t      (clobber (reg:SI T_REG))])]\n+\t\t\t\t \t   (reg:SI T_REG)))\n+\t      (clobber (reg:SI T_REG))\n+\t      (use (match_dup 2))])]\n {\n   operands[2] = gen_reg_rtx (SImode);\n })\n \n+(define_insn \"*mov_t_msb_neg_negc\"\n+  [(set (match_operand:SI 0 \"arith_reg_dest\" \"=r\")\n+\t(minus:SI (neg:SI (match_operand:SI 1 \"arith_reg_operand\" \"r\"))\n+\t\t  (match_operand:SI 2 \"t_reg_operand\")))\n+   (clobber (reg:SI T_REG))\n+   (use (match_dup 1))]\n+  \"TARGET_SH1\"\n+  \"negc\t%1,%0\"\n+  [(set_attr \"type\" \"arith\")])\n+\n ;; These are essentially the same as above, but with the inverted T bit.\n ;; Combine recognizes the split patterns, but does not take them sometimes\n ;; if the T_REG clobber is specified.  Instead it tries to split out the"}, {"sha": "d7ef999776da59dd1c18f9a6eac1652b27f54645", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19305875c254f3eb3089f2f49737a0138ca7f1a5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19305875c254f3eb3089f2f49737a0138ca7f1a5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=19305875c254f3eb3089f2f49737a0138ca7f1a5", "patch": "@@ -1,3 +1,8 @@\n+2014-03-01  Oleg Endo  <olegendo@gcc.gnu.org>\n+\n+\tPR target/60071\n+\t* gcc.c-torture/compile/pr60071.c: New.\n+\n 2014-02-28  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/60359"}, {"sha": "8bc2c1f4f58d685a07d416004b06c8954e56c5fb", "filename": "gcc/testsuite/gcc.c-torture/compile/pr60071.c", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19305875c254f3eb3089f2f49737a0138ca7f1a5/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr60071.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19305875c254f3eb3089f2f49737a0138ca7f1a5/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr60071.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr60071.c?ref=19305875c254f3eb3089f2f49737a0138ca7f1a5", "patch": "@@ -0,0 +1,8 @@\n+int\n+foo (int cls, int sign)\n+{\n+  if (__builtin_expect (cls == 4, 0))\n+    return (sign\n+            ? (-((int) ((~(unsigned)0) >> 1)))-1\n+            : ((int) ((~(unsigned)0) >> 1)));\n+}"}]}