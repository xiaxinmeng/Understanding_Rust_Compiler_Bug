{"sha": "fc402eec4b203f2fba90abd57805174d4101d618", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmM0MDJlZWM0YjIwM2YyZmJhOTBhYmQ1NzgwNTE3NGQ0MTAxZDYxOA==", "commit": {"author": {"name": "Andreas Arnez", "email": "arnez@linux.vnet.ibm.com", "date": "2015-11-09T15:35:10Z"}, "committer": {"name": "Andreas Krebbel", "email": "krebbel@gcc.gnu.org", "date": "2015-11-09T15:35:10Z"}, "message": "[PR debug/67192] Further fix C loops' back-jump location\n\ngcc/c/ChangeLog:\n\n\tPR debug/67192\n\t* c-typeck.c (c_finish_loop): For unconditional loops, set the\n\tlocation of the backward-goto to the start of the loop body.\n\ngcc/testsuite/ChangeLog:\n\n\tPR debug/67192\n\t* gcc.dg/guality/pr67192.c (f3, f4): New functions.\n\t(main): Invoke them.\n\nFrom-SVN: r230024", "tree": {"sha": "a60825da555a0c5971ceed078d9824a9407d97e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a60825da555a0c5971ceed078d9824a9407d97e9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fc402eec4b203f2fba90abd57805174d4101d618", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc402eec4b203f2fba90abd57805174d4101d618", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc402eec4b203f2fba90abd57805174d4101d618", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc402eec4b203f2fba90abd57805174d4101d618/comments", "author": null, "committer": null, "parents": [{"sha": "f6b0b3db86a579ae246409aafb1e49005cfebc2c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6b0b3db86a579ae246409aafb1e49005cfebc2c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6b0b3db86a579ae246409aafb1e49005cfebc2c"}], "stats": {"total": 48, "additions": 48, "deletions": 0}, "files": [{"sha": "a666a3e32a374375e47b79ee859c1cb4e94b581d", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc402eec4b203f2fba90abd57805174d4101d618/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc402eec4b203f2fba90abd57805174d4101d618/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=fc402eec4b203f2fba90abd57805174d4101d618", "patch": "@@ -1,3 +1,9 @@\n+2015-11-09  Andreas Arnez  <arnez@linux.vnet.ibm.com>\n+\n+\tPR debug/67192\n+\t* c-typeck.c (c_finish_loop): For unconditional loops, set the\n+\tlocation of the backward-goto to the start of the loop body.\n+\n 2015-11-09  Andreas Arnez  <arnez@linux.vnet.ibm.com>\n \n \tPR debug/67192"}, {"sha": "9ee2681424587048c7dd3abf8c03f29f4d138067", "filename": "gcc/c/c-typeck.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc402eec4b203f2fba90abd57805174d4101d618/gcc%2Fc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc402eec4b203f2fba90abd57805174d4101d618/gcc%2Fc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-typeck.c?ref=fc402eec4b203f2fba90abd57805174d4101d618", "patch": "@@ -9898,6 +9898,16 @@ c_finish_loop (location_t start_locus, tree cond, tree incr, tree body,\n \t    exit = fold_build3_loc (input_location,\n \t\t\t\tCOND_EXPR, void_type_node, cond, exit, t);\n \t}\n+      else\n+\t{\n+\t  /* For the backward-goto's location of an unconditional loop\n+\t     use the beginning of the body, or, if there is none, the\n+\t     top of the loop.  */\n+\t  location_t loc = EXPR_LOCATION (expr_first (body));\n+\t  if (loc == UNKNOWN_LOCATION)\n+\t    loc = start_locus;\n+\t  SET_EXPR_LOCATION (exit, loc);\n+\t}\n \n       add_stmt (top);\n     }"}, {"sha": "7408f52bd07dc2c9d914d8137a067ddf84d8b836", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc402eec4b203f2fba90abd57805174d4101d618/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc402eec4b203f2fba90abd57805174d4101d618/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fc402eec4b203f2fba90abd57805174d4101d618", "patch": "@@ -1,3 +1,9 @@\n+2015-11-09  Andreas Arnez  <arnez@linux.vnet.ibm.com>\n+\n+\tPR debug/67192\n+\t* gcc.dg/guality/pr67192.c (f3, f4): New functions.\n+\t(main): Invoke them.\n+\n 2015-11-09  Andreas Arnez  <arnez@linux.vnet.ibm.com>\n \n \tPR debug/67192"}, {"sha": "946e68f8faadcd0c48cac98a2e2c1a61377a01aa", "filename": "gcc/testsuite/gcc.dg/guality/pr67192.c", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc402eec4b203f2fba90abd57805174d4101d618/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr67192.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc402eec4b203f2fba90abd57805174d4101d618/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr67192.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr67192.c?ref=fc402eec4b203f2fba90abd57805174d4101d618", "patch": "@@ -39,15 +39,41 @@ f2 (void)\n   do_it (); /* { dg-final { gdb-test 39 \"cnt\" \"10\" } } */\n }\n \n+__attribute__((noinline, noclone)) static void\n+f3 (void)\n+{\n+  for (;; do_it())\n+    if (last ())\n+      break;\n+  do_it (); /* { dg-final { gdb-test 48 \"cnt\" \"15\" } } */\n+}\n+\n+__attribute__((noinline, noclone)) static void\n+f4 (void)\n+{\n+  while (1) /* { dg-final { gdb-test 54 \"cnt\" \"15\" } } */\n+    if (last ())\n+      break;\n+    else\n+      do_it ();\n+  do_it (); /* { dg-final { gdb-test 59 \"cnt\" \"20\" } } */\n+}\n+\n void (*volatile fnp1) (void) = f1;\n void (*volatile fnp2) (void) = f2;\n+void (*volatile fnp3) (void) = f3;\n+void (*volatile fnp4) (void) = f4;\n \n int\n main ()\n {\n   asm volatile (\"\" : : \"r\" (&fnp1) : \"memory\");\n   asm volatile (\"\" : : \"r\" (&fnp2) : \"memory\");\n+  asm volatile (\"\" : : \"r\" (&fnp3) : \"memory\");\n+  asm volatile (\"\" : : \"r\" (&fnp4) : \"memory\");\n   fnp1 ();\n   fnp2 ();\n+  fnp3 ();\n+  fnp4 ();\n   return 0;\n }"}]}