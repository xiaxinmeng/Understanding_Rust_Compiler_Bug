{"sha": "178b70cce7b8540651b7f7fdf3f934b46a7ed6ea", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTc4YjcwY2NlN2I4NTQwNjUxYjdmN2ZkZjNmOTM0YjQ2YTdlZDZlYQ==", "commit": {"author": {"name": "Nathan Froyd", "email": "froydnj@codesourcery.com", "date": "2010-05-31T02:20:16Z"}, "committer": {"name": "Nathan Froyd", "email": "froydnj@gcc.gnu.org", "date": "2010-05-31T02:20:16Z"}, "message": "objc-act.c (synth_module_prologue): Use build_function_type_list instead of build_function_type.\n\n\t* objc-act.c (synth_module_prologue): Use build_function_type_list\n\tinstead of build_function_type.\n\t(build_module_initializer_routine): Likewise.\n\t(build_next_objc_exception_stuff): Likewise.\n\t(build_objc_exception_stuff): Likewise.\n\nFrom-SVN: r160066", "tree": {"sha": "b72512e5ec2dabc5412f4021641b194410b1ba66", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b72512e5ec2dabc5412f4021641b194410b1ba66"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/178b70cce7b8540651b7f7fdf3f934b46a7ed6ea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/178b70cce7b8540651b7f7fdf3f934b46a7ed6ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/178b70cce7b8540651b7f7fdf3f934b46a7ed6ea", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/178b70cce7b8540651b7f7fdf3f934b46a7ed6ea/comments", "author": null, "committer": null, "parents": [{"sha": "d12a3d7e41915d45ee9b8839317d2a6e7ea7b8c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d12a3d7e41915d45ee9b8839317d2a6e7ea7b8c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d12a3d7e41915d45ee9b8839317d2a6e7ea7b8c4"}], "stats": {"total": 120, "additions": 59, "deletions": 61}, "files": [{"sha": "40b978092d9cd731deed90e2b9ad714512316e2e", "filename": "gcc/objc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/178b70cce7b8540651b7f7fdf3f934b46a7ed6ea/gcc%2Fobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/178b70cce7b8540651b7f7fdf3f934b46a7ed6ea/gcc%2Fobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2FChangeLog?ref=178b70cce7b8540651b7f7fdf3f934b46a7ed6ea", "patch": "@@ -1,3 +1,11 @@\n+2010-05-30  Nathan Froyd  <froydnj@codesourcery.com>\n+\n+\t* objc-act.c (synth_module_prologue): Use build_function_type_list\n+\tinstead of build_function_type.\n+\t(build_module_initializer_routine): Likewise.\n+\t(build_next_objc_exception_stuff): Likewise.\n+\t(build_objc_exception_stuff): Likewise.\n+\n 2010-05-27  Joseph Myers  <joseph@codesourcery.com>\n \n \t* objc-act.c: Include diagnostic-core.h instead of diagnostic.h."}, {"sha": "4a6f825f844c1e1a7609638ba314bf06b459b03c", "filename": "gcc/objc/objc-act.c", "status": "modified", "additions": 51, "deletions": 61, "changes": 112, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/178b70cce7b8540651b7f7fdf3f934b46a7ed6ea/gcc%2Fobjc%2Fobjc-act.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/178b70cce7b8540651b7f7fdf3f934b46a7ed6ea/gcc%2Fobjc%2Fobjc-act.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-act.c?ref=178b70cce7b8540651b7f7fdf3f934b46a7ed6ea", "patch": "@@ -1666,10 +1666,10 @@ synth_module_prologue (void)\n       /* id objc_msgSend_stret (id, SEL, ...); */\n       /* id objc_msgSendNonNil_stret (id, SEL, ...); */\n       type\n-\t= build_function_type (objc_object_type,\n-\t\t\t       tree_cons (NULL_TREE, objc_object_type,\n-\t\t\t\t\t  tree_cons (NULL_TREE, objc_selector_type,\n-\t\t\t\t\t\t     NULL_TREE)));\n+\t= build_varargs_function_type_list (objc_object_type,\n+                                            objc_object_type,\n+                                            objc_selector_type,\n+                                            NULL_TREE);\n       umsg_decl = add_builtin_function (TAG_MSGSEND,\n \t\t\t\t\ttype, 0, NOT_BUILT_IN,\n \t\t\t\t\tNULL, NULL_TREE);\n@@ -1710,10 +1710,10 @@ synth_module_prologue (void)\n       /* id objc_msgSendSuper (struct objc_super *, SEL, ...); */\n       /* id objc_msgSendSuper_stret (struct objc_super *, SEL, ...); */\n       type\n-\t= build_function_type (objc_object_type,\n-\t\t\t       tree_cons (NULL_TREE, objc_super_type,\n-\t\t\t\t\t  tree_cons (NULL_TREE, objc_selector_type,\n-\t\t\t\t\t\t     NULL_TREE)));\n+\t= build_varargs_function_type_list (objc_object_type,\n+                                            objc_super_type,\n+                                            objc_selector_type,\n+                                            NULL_TREE);\n       umsg_super_decl = add_builtin_function (TAG_MSGSENDSUPER,\n \t\t\t\t\t      type, 0, NOT_BUILT_IN,\n \t\t\t\t\t      NULL, NULL_TREE);\n@@ -1728,30 +1728,29 @@ synth_module_prologue (void)\n       /* GNU runtime messenger entry points.  */\n \n       /* typedef id (*IMP)(id, SEL, ...); */\n-      tree IMP_type\n-\t= build_pointer_type\n-\t  (build_function_type (objc_object_type,\n-\t\t\t\ttree_cons (NULL_TREE, objc_object_type,\n-\t\t\t\t\t   tree_cons (NULL_TREE, objc_selector_type,\n-\t\t\t\t\t\t      NULL_TREE))));\n+      tree ftype =\n+        build_varargs_function_type_list (objc_object_type,\n+                                          objc_object_type,\n+                                          objc_selector_type,\n+                                          NULL_TREE);\n+      tree IMP_type = build_pointer_type (ftype);\n \n       /* IMP objc_msg_lookup (id, SEL); */\n-      type\n-        = build_function_type (IMP_type,\n-\t\t\t       tree_cons (NULL_TREE, objc_object_type,\n-\t\t\t\t\t  tree_cons (NULL_TREE, objc_selector_type,\n-\t\t\t\t\t\t     OBJC_VOID_AT_END)));\n+      type = build_function_type_list (IMP_type,\n+                                       objc_object_type,\n+                                       objc_selector_type,\n+                                       NULL_TREE);\n       umsg_decl = add_builtin_function (TAG_MSGSEND,\n \t\t\t\t\ttype, 0, NOT_BUILT_IN,\n \t\t\t\t\tNULL, NULL_TREE);\n       TREE_NOTHROW (umsg_decl) = 0;\n \n       /* IMP objc_msg_lookup_super (struct objc_super *, SEL); */\n       type\n-        = build_function_type (IMP_type,\n-\t\t\t       tree_cons (NULL_TREE, objc_super_type,\n-\t\t\t\t\t  tree_cons (NULL_TREE, objc_selector_type,\n-\t\t\t\t\t\t     OBJC_VOID_AT_END)));\n+        = build_function_type_list (IMP_type,\n+                                    objc_super_type,\n+                                    objc_selector_type,\n+                                    NULL_TREE);\n       umsg_super_decl = add_builtin_function (TAG_MSGSENDSUPER,\n \t\t\t\t\t      type, 0, NOT_BUILT_IN,\n \t\t\t\t\t      NULL, NULL_TREE);\n@@ -1762,20 +1761,19 @@ synth_module_prologue (void)\n \n \t __objc_exec_class (void *); */\n       type\n-\t= build_function_type (void_type_node,\n-\t\t\t       tree_cons (NULL_TREE, ptr_type_node,\n-\t\t\t\t\t  OBJC_VOID_AT_END));\n+\t= build_function_type_list (void_type_node,\n+                                    ptr_type_node,\n+                                    NULL_TREE);\n       execclass_decl = add_builtin_function (TAG_EXECCLASS,\n \t\t\t\t\t     type, 0, NOT_BUILT_IN,\n \t\t\t\t\t     NULL, NULL_TREE);\n     }\n \n   /* id objc_getClass (const char *); */\n \n-  type = build_function_type (objc_object_type,\n-\t\t\t\t   tree_cons (NULL_TREE,\n-\t\t\t\t\t      const_string_type_node,\n-\t\t\t\t\t      OBJC_VOID_AT_END));\n+  type = build_function_type_list (objc_object_type,\n+                                   const_string_type_node,\n+                                   NULL_TREE);\n \n   objc_get_class_decl\n     = add_builtin_function (TAG_GETCLASS, type, 0, NOT_BUILT_IN,\n@@ -2399,13 +2397,11 @@ build_module_initializer_routine (void)\n \t\t\t      PARM_DECL, NULL_TREE, void_type_node));\n #ifdef OBJCPLUS\n   objc_start_function (get_identifier (TAG_GNUINIT),\n-\t\t       build_function_type (void_type_node,\n-\t\t\t\t\t    OBJC_VOID_AT_END),\n+\t\t       build_function_type_list (void_type_node, NULL_TREE),\n \t\t       NULL_TREE, NULL_TREE);\n #else\n   objc_start_function (get_identifier (TAG_GNUINIT),\n-\t\t       build_function_type (void_type_node,\n-\t\t\t\t\t    OBJC_VOID_AT_END),\n+\t\t       build_function_type_list (void_type_node, NULL_TREE),\n \t\t       NULL_TREE, objc_get_parm_info (0));\n #endif\n   body = c_begin_compound_stmt (true);\n@@ -4096,26 +4092,24 @@ build_next_objc_exception_stuff (void)\n   /* int _setjmp(...); */\n   /* If the user includes <setjmp.h>, this shall be superseded by\n      'int _setjmp(jmp_buf);' */\n-  temp_type = build_function_type (integer_type_node, NULL_TREE);\n+  temp_type = build_function_type_list (integer_type_node, NULL_TREE);\n   objc_setjmp_decl\n     = add_builtin_function (TAG_SETJMP, temp_type, 0, NOT_BUILT_IN, NULL, NULL_TREE);\n \n   /* id objc_exception_extract(struct _objc_exception_data *); */\n   temp_type\n-    = build_function_type (objc_object_type,\n-\t\t\t   tree_cons (NULL_TREE,\n-\t\t\t\t      build_pointer_type (objc_exception_data_template),\n-\t\t\t\t      OBJC_VOID_AT_END));\n+    = build_function_type_list (objc_object_type,\n+                                build_pointer_type (objc_exception_data_template),\n+                                NULL_TREE);\n   objc_exception_extract_decl\n     = add_builtin_function (TAG_EXCEPTIONEXTRACT, temp_type, 0, NOT_BUILT_IN, NULL,\n \t\t\t    NULL_TREE);\n   /* void objc_exception_try_enter(struct _objc_exception_data *); */\n   /* void objc_exception_try_exit(struct _objc_exception_data *); */\n   temp_type\n-    = build_function_type (void_type_node,\n-\t\t\t   tree_cons (NULL_TREE,\n-\t\t\t\t      build_pointer_type (objc_exception_data_template),\n-\t\t\t\t      OBJC_VOID_AT_END));\n+    = build_function_type_list (void_type_node,\n+                                build_pointer_type (objc_exception_data_template),\n+                                NULL_TREE);\n   objc_exception_try_enter_decl\n     = add_builtin_function (TAG_EXCEPTIONTRYENTER, temp_type, 0, NOT_BUILT_IN, NULL,\n \t\t\t    NULL_TREE);\n@@ -4125,10 +4119,8 @@ build_next_objc_exception_stuff (void)\n \n   /* int objc_exception_match(id, id); */\n   temp_type\n-    = build_function_type (integer_type_node,\n-\t\t\t   tree_cons (NULL_TREE, objc_object_type,\n-\t\t\t\t      tree_cons (NULL_TREE, objc_object_type,\n-\t\t\t\t\t\t OBJC_VOID_AT_END)));\n+    = build_function_type_list (integer_type_node,\n+                                objc_object_type, objc_object_type, NULL_TREE);\n   objc_exception_match_decl\n     = add_builtin_function (TAG_EXCEPTIONMATCH, temp_type, 0, NOT_BUILT_IN, NULL,\n \t\t\t    NULL_TREE);\n@@ -4137,13 +4129,11 @@ build_next_objc_exception_stuff (void)\n   /* id objc_assign_ivar_Fast (id, id, unsigned int)\n        __attribute__ ((hard_coded_address (OFFS_ASSIGNIVAR_FAST))); */\n   temp_type\n-    = build_function_type (objc_object_type,\n-\t\t\t   tree_cons\n-\t\t\t   (NULL_TREE, objc_object_type,\n-\t\t\t    tree_cons (NULL_TREE, objc_object_type,\n-\t\t\t\t       tree_cons (NULL_TREE,\n-\t\t\t\t\t\t  unsigned_type_node,\n-\t\t\t\t\t\t  OBJC_VOID_AT_END))));\n+    = build_function_type_list (objc_object_type,\n+                                objc_object_type,\n+                                objc_object_type,\n+                                unsigned_type_node,\n+                                NULL_TREE);\n   objc_assign_ivar_decl\n     = add_builtin_function (TAG_ASSIGNIVAR, temp_type, 0, NOT_BUILT_IN,\n \t\t\t    NULL, NULL_TREE);\n@@ -4162,10 +4152,10 @@ build_next_objc_exception_stuff (void)\n \n   /* id objc_assign_global (id, id *); */\n   /* id objc_assign_strongCast (id, id *); */\n-  temp_type = build_function_type (objc_object_type,\n-\t\ttree_cons (NULL_TREE, objc_object_type,\n-\t\t    tree_cons (NULL_TREE, build_pointer_type (objc_object_type),\n-\t\t\tOBJC_VOID_AT_END)));\n+  temp_type = build_function_type_list (objc_object_type,\n+                                        objc_object_type,\n+                                        build_pointer_type (objc_object_type),\n+                                        NULL_TREE);\n   objc_assign_global_decl\n \t= add_builtin_function (TAG_ASSIGNGLOBAL, temp_type, 0, NOT_BUILT_IN, NULL,\n \t\t\t\tNULL_TREE);\n@@ -4185,9 +4175,9 @@ build_objc_exception_stuff (void)\n   /* void objc_exception_throw(id) __attribute__((noreturn)); */\n   /* void objc_sync_enter(id); */\n   /* void objc_sync_exit(id); */\n-  temp_type = build_function_type (void_type_node,\n-\t\t\t\t   tree_cons (NULL_TREE, objc_object_type,\n-\t\t\t\t\t      OBJC_VOID_AT_END));\n+  temp_type = build_function_type_list (void_type_node,\n+                                        objc_object_type,\n+                                        NULL_TREE);\n   objc_exception_throw_decl\n     = add_builtin_function (TAG_EXCEPTIONTHROW, temp_type, 0, NOT_BUILT_IN, NULL,\n \t\t\t    noreturn_list);"}]}