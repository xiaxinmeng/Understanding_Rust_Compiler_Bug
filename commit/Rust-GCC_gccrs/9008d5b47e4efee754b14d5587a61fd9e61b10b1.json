{"sha": "9008d5b47e4efee754b14d5587a61fd9e61b10b1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTAwOGQ1YjQ3ZTRlZmVlNzU0YjE0ZDU1ODdhNjFmZDllNjFiMTBiMQ==", "commit": {"author": {"name": "Janis Johnson", "email": "janis187@us.ibm.com", "date": "2003-05-21T23:14:22Z"}, "committer": {"name": "Janis Johnson", "email": "janis@gcc.gnu.org", "date": "2003-05-21T23:14:22Z"}, "message": "scalar-return-1_main.c: New file.\n\n2003-05-21  Janis Johnson <janis187@us.ibm.com>\n\n\t* gcc.dg/compat/scalar-return-1_main.c: New file.\n\t* gcc.dg/compat/scalar-return-1_x.c: New file.\n\t* gcc.dg/compat/scalar-return-1_y.c: New file.\n\t* gcc.dg/compat/scalar-return-2_main.c: New file.\n\t* gcc.dg/compat/scalar-return-2_x.c: New file.\n\t* gcc.dg/compat/scalar-return-2_y.c: New file.\n\t* gcc.dg/compat/struct-return-3_main.c: New file.\n\t* gcc.dg/compat/struct-return-3_y.c: New file.\n\t* gcc.dg/compat/struct-return-3_x.c: New file.\n\t* gcc.dg/compat/struct-return-2_main.c: New file.\n\t* gcc.dg/compat/struct-return-2_x.c: New file.\n\t* gcc.dg/compat/struct-return-2_y.c: New file.\n\n(I thought I had committed these yesterday)\n\nFrom-SVN: r67070", "tree": {"sha": "d76d916f25bfd67bb95a3a4a1536fa989572ba35", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d76d916f25bfd67bb95a3a4a1536fa989572ba35"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9008d5b47e4efee754b14d5587a61fd9e61b10b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9008d5b47e4efee754b14d5587a61fd9e61b10b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9008d5b47e4efee754b14d5587a61fd9e61b10b1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9008d5b47e4efee754b14d5587a61fd9e61b10b1/comments", "author": null, "committer": null, "parents": [{"sha": "81888fcd42973009ff47f73f6b7fd8a56809f416", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81888fcd42973009ff47f73f6b7fd8a56809f416", "html_url": "https://github.com/Rust-GCC/gccrs/commit/81888fcd42973009ff47f73f6b7fd8a56809f416"}], "stats": {"total": 1009, "additions": 996, "deletions": 13}, "files": [{"sha": "c3b456ecee105bc56cb04da29e6747d6f517da7c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 15, "deletions": 13, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9008d5b47e4efee754b14d5587a61fd9e61b10b1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9008d5b47e4efee754b14d5587a61fd9e61b10b1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9008d5b47e4efee754b14d5587a61fd9e61b10b1", "patch": "@@ -1,3 +1,18 @@\n+2003-05-21  Janis Johnson  <janis187@us.ibm.com>\n+\n+\t* gcc.dg/compat/scalar-return-1_main.c: New file.\n+\t* gcc.dg/compat/scalar-return-1_x.c: New file.\n+\t* gcc.dg/compat/scalar-return-1_y.c: New file.\n+\t* gcc.dg/compat/scalar-return-2_main.c: New file.\n+\t* gcc.dg/compat/scalar-return-2_x.c: New file.\n+\t* gcc.dg/compat/scalar-return-2_y.c: New file.\n+\t* gcc.dg/compat/struct-return-3_main.c: New file.\n+\t* gcc.dg/compat/struct-return-3_y.c: New file.\n+\t* gcc.dg/compat/struct-return-3_x.c: New file.\n+\t* gcc.dg/compat/struct-return-2_main.c: New file.\n+\t* gcc.dg/compat/struct-return-2_x.c: New file.\n+\t* gcc.dg/compat/struct-return-2_y.c: New file.\n+\n 2003-05-21  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n \n \t* g++.old-deja/g++.law/profile1.C (dg-options): Add -static to options\n@@ -30,19 +45,6 @@\n \t* gcc.dg/compat/fp-struct-test-by-value-y.h: New file.\n \t* gcc.dg/compat/fp-struct-test-by-value-x.h: New file.\n \n-\t* gcc.dg/compat/scalar-return-1_main.c: New file.\n-\t* gcc.dg/compat/scalar-return-1_x.c: New file.\n-\t* gcc.dg/compat/scalar-return-1_y.c: New file.\n-\t* gcc.dg/compat/scalar-return-2_main.c: New file.\n-\t* gcc.dg/compat/scalar-return-2_x.c: New file.\n-\t* gcc.dg/compat/scalar-return-2_y.c: New file.\n-\t* gcc.dg/compat/struct-return-3_main.c: New file.\n-\t* gcc.dg/compat/struct-return-3_y.c: New file.\n-\t* gcc.dg/compat/struct-return-3_x.c: New file.\n-\t* gcc.dg/compat/struct-return-2_main.c: New file.\n-\t* gcc.dg/compat/struct-return-2_x.c: New file.\n-\t* gcc.dg/compat/struct-return-2_y.c: New file.\n-\n 2003-05-19  Jakub Jelinek  <jakub@redhat.com>\n \n \t* gcc.dg/20030225-2.c: New test."}, {"sha": "0dca50b1c8af9edd1ff77a0ac592c809c42bd4e7", "filename": "gcc/testsuite/gcc.dg/compat/scalar-return-1_main.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9008d5b47e4efee754b14d5587a61fd9e61b10b1/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-return-1_main.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9008d5b47e4efee754b14d5587a61fd9e61b10b1/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-return-1_main.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-return-1_main.c?ref=9008d5b47e4efee754b14d5587a61fd9e61b10b1", "patch": "@@ -0,0 +1,12 @@\n+/* Test function return values.  This test includes scalar types that\n+   are supported by va_arg.  */\n+\n+extern void scalar_return_1_x (void);\n+extern void exit (int);\n+\n+int\n+main ()\n+{\n+  scalar_return_1_x ();\n+  exit (0);\n+}"}, {"sha": "aaa634e81b649179279b63ba8951bbfd700f9c12", "filename": "gcc/testsuite/gcc.dg/compat/scalar-return-1_x.c", "status": "added", "additions": 110, "deletions": 0, "changes": 110, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9008d5b47e4efee754b14d5587a61fd9e61b10b1/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-return-1_x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9008d5b47e4efee754b14d5587a61fd9e61b10b1/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-return-1_x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-return-1_x.c?ref=9008d5b47e4efee754b14d5587a61fd9e61b10b1", "patch": "@@ -0,0 +1,110 @@\n+#ifdef DBG\n+#include <stdio.h>\n+#define DEBUG_FPUTS(x) fputs (x, stdout)\n+#define DEBUG_DOT putc ('.', stdout)\n+#define DEBUG_NL putc ('\\n', stdout)\n+#else\n+#define DEBUG_FPUTS(x)\n+#define DEBUG_DOT\n+#define DEBUG_NL\n+#endif\n+\n+#define T(NAME, TYPE, INITVAL) \t\t\t\t\t\\\n+TYPE g01##NAME, g02##NAME, g03##NAME, g04##NAME;\t\t\\\n+TYPE g05##NAME, g06##NAME, g07##NAME, g08##NAME;\t\t\\\n+TYPE g09##NAME, g10##NAME, g11##NAME, g12##NAME;\t\t\\\n+TYPE g13##NAME, g14##NAME, g15##NAME, g16##NAME;\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+extern void init##NAME (TYPE *p, TYPE v);\t\t\t\\\n+extern void checkg##NAME (void);\t\t\t\t\\\n+extern TYPE test0##NAME (void);\t\t\t\t\t\\\n+extern TYPE test1##NAME (TYPE);\t\t\t\t\t\\\n+extern TYPE testva##NAME (int n, ...);\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+void\t\t\t\t\t\t\t\t\\\n+check##NAME (TYPE x, TYPE v)\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\\\n+  if (x != v)\t\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\\\n+      DEBUG_NL;\t\t\t\t\t\t\t\\\n+      abort ();\t\t\t\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\t\\\n+}\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+void\t\t\t\t\t\t\t\t\\\n+testit##NAME (void)\t\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\\\n+  TYPE rslt;\t\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (#NAME);\t\t\t\t\t\t\\\n+  init##NAME (&g01##NAME,  1);\t\t\t\t\t\\\n+  init##NAME (&g02##NAME,  2);\t\t\t\t\t\\\n+  init##NAME (&g03##NAME,  3);\t\t\t\t\t\\\n+  init##NAME (&g04##NAME,  4);\t\t\t\t\t\\\n+  init##NAME (&g05##NAME,  5);\t\t\t\t\t\\\n+  init##NAME (&g06##NAME,  6);\t\t\t\t\t\\\n+  init##NAME (&g07##NAME,  7);\t\t\t\t\t\\\n+  init##NAME (&g08##NAME,  8);\t\t\t\t\t\\\n+  init##NAME (&g09##NAME,  9);\t\t\t\t\t\\\n+  init##NAME (&g10##NAME, 10);\t\t\t\t\t\\\n+  init##NAME (&g11##NAME, 11);\t\t\t\t\t\\\n+  init##NAME (&g12##NAME, 12);\t\t\t\t\t\\\n+  init##NAME (&g13##NAME, 13);\t\t\t\t\t\\\n+  init##NAME (&g14##NAME, 14);\t\t\t\t\t\\\n+  init##NAME (&g15##NAME, 15);\t\t\t\t\t\\\n+  init##NAME (&g16##NAME, 16);\t\t\t\t\t\\\n+  checkg##NAME ();\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (\" test0\");\t\t\t\t\t\\\n+  rslt = test0##NAME ();\t\t\t\t\t\\\n+  check##NAME (rslt, g01##NAME);\t\t\t\t\\\n+  DEBUG_FPUTS (\" test1\");\t\t\t\t\t\\\n+  rslt = test1##NAME (g01##NAME);\t\t\t\t\\\n+  check##NAME (rslt, g01##NAME);\t\t\t\t\\\n+  DEBUG_FPUTS (\" testva\");\t\t\t\t\t\\\n+  rslt = testva##NAME (1, g01##NAME);\t\t\t\t\\\n+  check##NAME (rslt, g01##NAME);\t\t\t\t\\\n+  rslt = testva##NAME (5, g01##NAME, g02##NAME, g03##NAME,\t\\\n+\t\t       g04##NAME, g05##NAME);\t\t\t\\\n+  check##NAME (rslt, g05##NAME);\t\t\t\t\\\n+  rslt = testva##NAME (9, g01##NAME, g02##NAME, g03##NAME,\t\\\n+\t\t       g04##NAME, g05##NAME, g06##NAME,\t\t\\\n+\t\t       g07##NAME, g08##NAME, g09##NAME);\t\\\n+  check##NAME (rslt, g09##NAME);\t\t\t\t\\\n+  rslt = testva##NAME (16, g01##NAME, g02##NAME, g03##NAME,\t\\\n+\t\t       g04##NAME, g05##NAME, g06##NAME,\t\t\\\n+\t\t       g07##NAME, g08##NAME, g09##NAME,\t\t\\\n+\t\t       g10##NAME, g11##NAME, g12##NAME,\t\t\\\n+\t\t       g13##NAME, g14##NAME, g15##NAME,\t\t\\\n+\t\t       g16##NAME);\t\t\t\t\\\n+  check##NAME (rslt, g16##NAME);\t\t\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n+}\n+\n+extern void abort (void);\n+\n+T(ui, unsigned int, 51)\n+T(si, int, (-55))\n+T(ul, unsigned long, 61)\n+T(sl, long, (-66))\n+T(ull, unsigned long long, 71)\n+T(sll, long long, (-77))\n+T(d, double, 91.0)\n+T(ld, long double, 92.0)\n+\n+#undef T\n+\n+void\n+scalar_return_1_x ()\n+{\n+#define T(NAME) testit##NAME ();\n+\n+T(ui)\n+T(si)\n+T(ul)\n+T(sl)\n+T(ull)\n+T(sll)\n+T(d)\n+T(ld)\n+\n+#undef T\n+}"}, {"sha": "edf332bd370af8d20bda968ca214cda0fc340467", "filename": "gcc/testsuite/gcc.dg/compat/scalar-return-1_y.c", "status": "added", "additions": 94, "deletions": 0, "changes": 94, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9008d5b47e4efee754b14d5587a61fd9e61b10b1/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-return-1_y.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9008d5b47e4efee754b14d5587a61fd9e61b10b1/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-return-1_y.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-return-1_y.c?ref=9008d5b47e4efee754b14d5587a61fd9e61b10b1", "patch": "@@ -0,0 +1,94 @@\n+#include <stdarg.h>\n+\n+#ifdef DBG\n+#include <stdio.h>\n+#define DEBUG_FPUTS(x) fputs (x, stdout)\n+#define DEBUG_DOT putc ('.', stdout)\n+#define DEBUG_NL putc ('\\n', stdout)\n+#else\n+#define DEBUG_FPUTS(x)\n+#define DEBUG_DOT\n+#define DEBUG_NL\n+#endif\n+\n+/* Turn off checking for variable arguments with -DSKIPVA.  */\n+#ifdef SKIPVA\n+const int test_va = 0;\n+#else\n+const int test_va = 1;\n+#endif\n+\n+#define T(NAME, TYPE, INITVAL)\t\t\t\t\t\\\n+extern TYPE g01##NAME, g02##NAME, g03##NAME, g04##NAME;\t\t\\\n+extern TYPE g05##NAME, g06##NAME, g07##NAME, g08##NAME;\t\t\\\n+extern TYPE g09##NAME, g10##NAME, g11##NAME, g12##NAME;\t\t\\\n+extern TYPE g13##NAME, g14##NAME, g15##NAME, g16##NAME;\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+extern void check##NAME (TYPE x, TYPE v);\t\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+void\t\t\t\t\t\t\t\t\\\n+init##NAME (TYPE *p, TYPE v)\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\\\n+  *p = v + INITVAL;\t\t\t\t\t\t\\\n+}\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+void\t\t\t\t\t\t\t\t\\\n+checkg##NAME (void)\t\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\\\n+  check##NAME (g01##NAME,  1+INITVAL);\t\t\t\t\\\n+  check##NAME (g02##NAME,  2+INITVAL);\t\t\t\t\\\n+  check##NAME (g03##NAME,  3+INITVAL);\t\t\t\t\\\n+  check##NAME (g04##NAME,  4+INITVAL);\t\t\t\t\\\n+  check##NAME (g05##NAME,  5+INITVAL);\t\t\t\t\\\n+  check##NAME (g06##NAME,  6+INITVAL);\t\t\t\t\\\n+  check##NAME (g07##NAME,  7+INITVAL);\t\t\t\t\\\n+  check##NAME (g08##NAME,  8+INITVAL);\t\t\t\t\\\n+  check##NAME (g09##NAME,  9+INITVAL);\t\t\t\t\\\n+  check##NAME (g10##NAME, 10+INITVAL);\t\t\t\t\\\n+  check##NAME (g11##NAME, 11+INITVAL);\t\t\t\t\\\n+  check##NAME (g12##NAME, 12+INITVAL);\t\t\t\t\\\n+  check##NAME (g13##NAME, 13+INITVAL);\t\t\t\t\\\n+  check##NAME (g14##NAME, 14+INITVAL);\t\t\t\t\\\n+  check##NAME (g15##NAME, 15+INITVAL);\t\t\t\t\\\n+  check##NAME (g16##NAME, 16+INITVAL);\t\t\t\t\\\n+}\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+TYPE\t\t\t\t\t\t\t\t\\\n+test0##NAME (void)\t\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\\\n+  return g01##NAME;\t\t\t\t\t\t\\\n+}\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+TYPE\t\t\t\t\t\t\t\t\\\n+test1##NAME (TYPE x01)\t\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\\\n+  return x01;\t\t\t\t\t\t\t\\\n+}\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+TYPE\t\t\t\t\t\t\t\t\\\n+testva##NAME (int n, ...)\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\\\n+  int i;\t\t\t\t\t\t\t\\\n+  TYPE rslt;\t\t\t\t\t\t\t\\\n+  va_list ap;\t\t\t\t\t\t\t\\\n+  if (test_va)\t\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\\\n+      va_start (ap, n);\t\t\t\t\t\t\\\n+      for (i = 0; i < n; i++)\t\t\t\t\t\\\n+\t{\t\t\t\t\t\t\t\\\n+\t  rslt = va_arg (ap, TYPE);\t\t\t\t\\\n+\t  DEBUG_DOT;\t\t\t\t\t\t\\\n+\t}\t\t\t\t\t\t\t\\\n+      va_end (ap);\t\t\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\t\\\n+  return rslt;\t\t\t\t\t\t\t\\\n+}\n+\n+T(ui, unsigned int, 51)\n+T(si, int, (-55))\n+T(ul, unsigned long, 61)\n+T(sl, long, (-66))\n+T(ull, unsigned long long, 71)\n+T(sll, long long, (-77))\n+T(d, double, 91.0)\n+T(ld, long double, 92.0)"}, {"sha": "56325e3dab7c57f382adc82bfed556535651edcc", "filename": "gcc/testsuite/gcc.dg/compat/scalar-return-2_main.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9008d5b47e4efee754b14d5587a61fd9e61b10b1/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-return-2_main.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9008d5b47e4efee754b14d5587a61fd9e61b10b1/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-return-2_main.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-return-2_main.c?ref=9008d5b47e4efee754b14d5587a61fd9e61b10b1", "patch": "@@ -0,0 +1,12 @@\n+/* Test function return values.   This test includes scalar types that\n+   are not supported by va_arg.  */\n+\n+extern void scalar_return_2_x (void);\n+extern void exit (int);\n+\n+int\n+main ()\n+{\n+  scalar_return_2_x ();\n+  exit (0);\n+}"}, {"sha": "16b4dd8c32a62d673b566af67d256a7852a21f38", "filename": "gcc/testsuite/gcc.dg/compat/scalar-return-2_x.c", "status": "added", "additions": 88, "deletions": 0, "changes": 88, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9008d5b47e4efee754b14d5587a61fd9e61b10b1/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-return-2_x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9008d5b47e4efee754b14d5587a61fd9e61b10b1/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-return-2_x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-return-2_x.c?ref=9008d5b47e4efee754b14d5587a61fd9e61b10b1", "patch": "@@ -0,0 +1,88 @@\n+#ifdef DBG\n+#include <stdio.h>\n+#define DEBUG_FPUTS(x) fputs (x, stdout)\n+#define DEBUG_DOT putc ('.', stdout)\n+#define DEBUG_NL putc ('\\n', stdout)\n+#else\n+#define DEBUG_FPUTS(x)\n+#define DEBUG_DOT\n+#define DEBUG_NL\n+#endif\n+\n+#define T(NAME, TYPE, INITVAL) \t\t\t\t\t\\\n+TYPE g01##NAME, g02##NAME, g03##NAME, g04##NAME;\t\t\\\n+TYPE g05##NAME, g06##NAME, g07##NAME, g08##NAME;\t\t\\\n+TYPE g09##NAME, g10##NAME, g11##NAME, g12##NAME;\t\t\\\n+TYPE g13##NAME, g14##NAME, g15##NAME, g16##NAME;\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+extern void init##NAME (TYPE *p, TYPE v);\t\t\t\\\n+extern void checkg##NAME (void);\t\t\t\t\\\n+extern TYPE test0##NAME (void);\t\t\t\t\t\\\n+extern TYPE test1##NAME (TYPE);\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+void\t\t\t\t\t\t\t\t\\\n+check##NAME (TYPE x, TYPE v)\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\\\n+  if (x != v)\t\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\\\n+      DEBUG_NL;\t\t\t\t\t\t\t\\\n+      abort ();\t\t\t\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\t\\\n+}\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+void\t\t\t\t\t\t\t\t\\\n+testit##NAME (void)\t\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\\\n+  TYPE rslt;\t\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (#NAME);\t\t\t\t\t\t\\\n+  init##NAME (&g01##NAME,  1);\t\t\t\t\t\\\n+  init##NAME (&g02##NAME,  2);\t\t\t\t\t\\\n+  init##NAME (&g03##NAME,  3);\t\t\t\t\t\\\n+  init##NAME (&g04##NAME,  4);\t\t\t\t\t\\\n+  init##NAME (&g05##NAME,  5);\t\t\t\t\t\\\n+  init##NAME (&g06##NAME,  6);\t\t\t\t\t\\\n+  init##NAME (&g07##NAME,  7);\t\t\t\t\t\\\n+  init##NAME (&g08##NAME,  8);\t\t\t\t\t\\\n+  init##NAME (&g09##NAME,  9);\t\t\t\t\t\\\n+  init##NAME (&g10##NAME, 10);\t\t\t\t\t\\\n+  init##NAME (&g11##NAME, 11);\t\t\t\t\t\\\n+  init##NAME (&g12##NAME, 12);\t\t\t\t\t\\\n+  init##NAME (&g13##NAME, 13);\t\t\t\t\t\\\n+  init##NAME (&g14##NAME, 14);\t\t\t\t\t\\\n+  init##NAME (&g15##NAME, 15);\t\t\t\t\t\\\n+  init##NAME (&g16##NAME, 16);\t\t\t\t\t\\\n+  checkg##NAME ();\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (\" test0\");\t\t\t\t\t\\\n+  rslt = test0##NAME ();\t\t\t\t\t\\\n+  check##NAME (rslt, g01##NAME);\t\t\t\t\\\n+  DEBUG_FPUTS (\" test1\");\t\t\t\t\t\\\n+  rslt = test1##NAME (g01##NAME);\t\t\t\t\\\n+  check##NAME (rslt, g01##NAME);\t\t\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n+}\n+\n+extern void abort (void);\n+\n+T(c, char, 21)\n+T(uc, unsigned char, 22)\n+T(sc, signed char, (-33))\n+T(us, unsigned short, 41)\n+T(ss, short, (-44))\n+T(f, float, 90.0)\n+\n+#undef T\n+\n+void\n+scalar_return_2_x ()\n+{\n+#define T(NAME) testit##NAME ();\n+\n+T(c)\n+T(uc)\n+T(sc)\n+T(us)\n+T(ss)\n+T(f)\n+\n+#undef T\n+}"}, {"sha": "89a824c924545d52ae413af42d9bebb32fefbeb7", "filename": "gcc/testsuite/gcc.dg/compat/scalar-return-2_y.c", "status": "added", "additions": 73, "deletions": 0, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9008d5b47e4efee754b14d5587a61fd9e61b10b1/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-return-2_y.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9008d5b47e4efee754b14d5587a61fd9e61b10b1/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-return-2_y.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-return-2_y.c?ref=9008d5b47e4efee754b14d5587a61fd9e61b10b1", "patch": "@@ -0,0 +1,73 @@\n+#include <stdarg.h>\n+\n+#ifdef DBG\n+#include <stdio.h>\n+#define DEBUG_FPUTS(x) fputs (x, stdout)\n+#define DEBUG_DOT putc ('.', stdout)\n+#define DEBUG_NL putc ('\\n', stdout)\n+#else\n+#define DEBUG_FPUTS(x)\n+#define DEBUG_DOT\n+#define DEBUG_NL\n+#endif\n+\n+/* Turn off checking for variable arguments with -DSKIPVA.  */\n+#ifdef SKIPVA\n+const int test_va = 0;\n+#else\n+const int test_va = 1;\n+#endif\n+\n+#define T(NAME, TYPE, INITVAL)\t\t\t\t\t\\\n+extern TYPE g01##NAME, g02##NAME, g03##NAME, g04##NAME;\t\t\\\n+extern TYPE g05##NAME, g06##NAME, g07##NAME, g08##NAME;\t\t\\\n+extern TYPE g09##NAME, g10##NAME, g11##NAME, g12##NAME;\t\t\\\n+extern TYPE g13##NAME, g14##NAME, g15##NAME, g16##NAME;\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+extern void check##NAME (TYPE x, TYPE v);\t\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+void\t\t\t\t\t\t\t\t\\\n+init##NAME (TYPE *p, TYPE v)\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\\\n+  *p = v + INITVAL;\t\t\t\t\t\t\\\n+}\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+void\t\t\t\t\t\t\t\t\\\n+checkg##NAME (void)\t\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\\\n+  check##NAME (g01##NAME,  1+INITVAL);\t\t\t\t\\\n+  check##NAME (g02##NAME,  2+INITVAL);\t\t\t\t\\\n+  check##NAME (g03##NAME,  3+INITVAL);\t\t\t\t\\\n+  check##NAME (g04##NAME,  4+INITVAL);\t\t\t\t\\\n+  check##NAME (g05##NAME,  5+INITVAL);\t\t\t\t\\\n+  check##NAME (g06##NAME,  6+INITVAL);\t\t\t\t\\\n+  check##NAME (g07##NAME,  7+INITVAL);\t\t\t\t\\\n+  check##NAME (g08##NAME,  8+INITVAL);\t\t\t\t\\\n+  check##NAME (g09##NAME,  9+INITVAL);\t\t\t\t\\\n+  check##NAME (g10##NAME, 10+INITVAL);\t\t\t\t\\\n+  check##NAME (g11##NAME, 11+INITVAL);\t\t\t\t\\\n+  check##NAME (g12##NAME, 12+INITVAL);\t\t\t\t\\\n+  check##NAME (g13##NAME, 13+INITVAL);\t\t\t\t\\\n+  check##NAME (g14##NAME, 14+INITVAL);\t\t\t\t\\\n+  check##NAME (g15##NAME, 15+INITVAL);\t\t\t\t\\\n+  check##NAME (g16##NAME, 16+INITVAL);\t\t\t\t\\\n+}\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+TYPE\t\t\t\t\t\t\t\t\\\n+test0##NAME (void)\t\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\\\n+  return g01##NAME;\t\t\t\t\t\t\\\n+}\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+TYPE\t\t\t\t\t\t\t\t\\\n+test1##NAME (TYPE x01)\t\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\\\n+  return x01;\t\t\t\t\t\t\t\\\n+}\n+\n+T(c, char, 21)\n+T(uc, unsigned char, 22)\n+T(sc, signed char, (-33))\n+T(us, unsigned short, 41)\n+T(ss, short, (-44))\n+T(f, float, 90.0)"}, {"sha": "6089c02555a22eb6590ebf6668eac42730fae751", "filename": "gcc/testsuite/gcc.dg/compat/struct-return-2_main.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9008d5b47e4efee754b14d5587a61fd9e61b10b1/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-return-2_main.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9008d5b47e4efee754b14d5587a61fd9e61b10b1/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-return-2_main.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-return-2_main.c?ref=9008d5b47e4efee754b14d5587a61fd9e61b10b1", "patch": "@@ -0,0 +1,12 @@\n+/* Test function return values.  This test includes structs that are\n+   arrays of unsigned integral scalars.  */\n+\n+extern void struct_return_2_x (void);\n+extern void exit (int);\n+\n+int\n+main ()\n+{\n+  struct_return_2_x ();\n+  exit (0);\n+}"}, {"sha": "aa2c34ad5c18f6d5f2a3bbe8960afc81ed8b6f60", "filename": "gcc/testsuite/gcc.dg/compat/struct-return-2_x.c", "status": "added", "additions": 205, "deletions": 0, "changes": 205, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9008d5b47e4efee754b14d5587a61fd9e61b10b1/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-return-2_x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9008d5b47e4efee754b14d5587a61fd9e61b10b1/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-return-2_x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-return-2_x.c?ref=9008d5b47e4efee754b14d5587a61fd9e61b10b1", "patch": "@@ -0,0 +1,205 @@\n+#ifdef DBG\n+#include <stdio.h>\n+#define DEBUG_FPUTS(x) fputs (x, stdout)\n+#define DEBUG_DOT putc ('.', stdout)\n+#define DEBUG_NL putc ('\\n', stdout)\n+#else\n+#define DEBUG_FPUTS(x)\n+#define DEBUG_DOT\n+#define DEBUG_NL\n+#endif\n+\n+#define T(N, NAME, TYPE)\t\t\t\t\t\\\n+struct S##NAME##N { TYPE i[N]; };\t\t\t\t\\\n+struct S##NAME##N g1s##NAME##N, g2s##NAME##N;\t\t\t\\\n+struct S##NAME##N g3s##NAME##N, g4s##NAME##N;\t\t\t\\\n+struct S##NAME##N g5s##NAME##N, g6s##NAME##N;\t\t\t\\\n+struct S##NAME##N g7s##NAME##N, g8s##NAME##N;\t\t\t\\\n+struct S##NAME##N g9s##NAME##N, g10s##NAME##N;\t\t\t\\\n+struct S##NAME##N g11s##NAME##N, g12s##NAME##N;\t\t\t\\\n+struct S##NAME##N g13s##NAME##N, g14s##NAME##N;\t\t\t\\\n+struct S##NAME##N g15s##NAME##N, g16s##NAME##N;\t\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+extern void init##NAME##N (struct S##NAME##N *p, int i);\t\\\n+extern void checkg##NAME##N (void);\t\t\t\t\\\n+extern struct S##NAME##N test0##NAME##N (void);\t\t\t\\\n+extern struct S##NAME##N test1##NAME##N (struct S##NAME##N);\t\\\n+extern struct S##NAME##N testva##NAME##N (int n, ...);\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+void\t\t\t\t\t\t\t\t\\\n+check##NAME##N (struct S##NAME##N *p, int i)\t\t\t\\\n+{\t\t\t\t\t\t\t\t\\\n+  int j;\t\t\t\t\t\t\t\\\n+  for (j = 0; j < N; j++)\t\t\t\t\t\\\n+    if (p->i[j] != (TYPE) (i + j))\t\t\t\t\\\n+      {\t\t\t\t\t\t\t\t\\\n+\tDEBUG_NL;\t\t\t\t\t\t\\\n+\tabort ();\t\t\t\t\t\t\\\n+      }\t\t\t\t\t\t\t\t\\\n+}\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+void\t\t\t\t\t\t\t\t\\\n+testit##NAME##N (void)\t\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\\\n+  struct S##NAME##N rslt;\t\t\t\t\t\\\n+  DEBUG_FPUTS (#NAME \"[\" #N \"]\");\t\t\t\t\\\n+  init##NAME##N  ( &g1s##NAME##N,  1*16);\t\t\t\\\n+  init##NAME##N  ( &g2s##NAME##N,  2*16);\t\t\t\\\n+  init##NAME##N  ( &g3s##NAME##N,  3*16);\t\t\t\\\n+  init##NAME##N  ( &g4s##NAME##N,  4*16);\t\t\t\\\n+  init##NAME##N  ( &g5s##NAME##N,  5*16);\t\t\t\\\n+  init##NAME##N  ( &g6s##NAME##N,  6*16);\t\t\t\\\n+  init##NAME##N  ( &g7s##NAME##N,  7*16);\t\t\t\\\n+  init##NAME##N  ( &g8s##NAME##N,  8*16);\t\t\t\\\n+  init##NAME##N  ( &g9s##NAME##N,  9*16);\t\t\t\\\n+  init##NAME##N  (&g10s##NAME##N, 10*16);\t\t\t\\\n+  init##NAME##N  (&g11s##NAME##N, 11*16);\t\t\t\\\n+  init##NAME##N  (&g12s##NAME##N, 12*16);\t\t\t\\\n+  init##NAME##N  (&g13s##NAME##N, 13*16);\t\t\t\\\n+  init##NAME##N  (&g14s##NAME##N, 14*16);\t\t\t\\\n+  init##NAME##N  (&g15s##NAME##N, 15*16);\t\t\t\\\n+  init##NAME##N  (&g16s##NAME##N, 16*16);\t\t\t\\\n+  checkg##NAME##N ();\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (\" test0\");\t\t\t\t\t\\\n+  rslt = test0##NAME##N ();\t\t\t\t\t\\\n+  check##NAME##N (&rslt, 1*16);\t\t\t\t\t\\\n+  DEBUG_FPUTS (\" test1\");\t\t\t\t\t\\\n+  rslt = test1##NAME##N (g1s##NAME##N);\t\t\t\t\\\n+  check##NAME##N (&rslt, 1*16);\t\t\t\t\t\\\n+  DEBUG_FPUTS (\" testva\");\t\t\t\t\t\\\n+  rslt = testva##NAME##N (1, g1s##NAME##N);\t\t\t\\\n+  check##NAME##N (&rslt, 1*16);\t\t\t\t\t\\\n+  rslt = testva##NAME##N (5,\t\t\t\t\t\\\n+\t\t\t  g1s##NAME##N, g2s##NAME##N,\t\t\\\n+\t\t\t  g3s##NAME##N, g4s##NAME##N,\t\t\\\n+\t\t\t  g5s##NAME##N);\t\t\t\\\n+  check##NAME##N (&rslt, 5*16);\t\t\t\t\t\\\n+  rslt = testva##NAME##N (9,\t\t\t\t\t\\\n+\t\t\t  g1s##NAME##N, g2s##NAME##N,\t\t\\\n+\t\t\t  g3s##NAME##N, g4s##NAME##N,\t\t\\\n+\t\t\t  g5s##NAME##N, g6s##NAME##N,\t\t\\\n+\t\t\t  g7s##NAME##N, g8s##NAME##N,\t\t\\\n+\t\t\t  g9s##NAME##N);\t\t\t\\\n+  check##NAME##N (&rslt, 9*16);\t\t\t\t\t\\\n+  rslt = testva##NAME##N (16,\t\t\t\t\t\\\n+\t\t\t  g1s##NAME##N, g2s##NAME##N,\t\t\\\n+\t\t\t  g3s##NAME##N, g4s##NAME##N,\t\t\\\n+\t\t\t  g5s##NAME##N, g6s##NAME##N,\t\t\\\n+\t\t\t  g7s##NAME##N, g8s##NAME##N,\t\t\\\n+\t\t\t  g9s##NAME##N, g10s##NAME##N,\t\t\\\n+\t\t\t  g11s##NAME##N, g12s##NAME##N,\t\t\\\n+\t\t\t  g13s##NAME##N, g14s##NAME##N,\t\t\\\n+\t\t\t  g15s##NAME##N, g16s##NAME##N);\t\\\n+  check##NAME##N (&rslt, 16*16);\t\t\t\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n+}\n+\n+extern void abort (void);\n+\n+T(0, uc, unsigned char)\n+T(1, uc, unsigned char)\n+T(2, uc, unsigned char)\n+T(3, uc, unsigned char)\n+T(4, uc, unsigned char)\n+T(5, uc, unsigned char)\n+T(6, uc, unsigned char)\n+T(7, uc, unsigned char)\n+T(8, uc, unsigned char)\n+T(9, uc, unsigned char)\n+T(10, uc, unsigned char)\n+T(11, uc, unsigned char)\n+T(12, uc, unsigned char)\n+T(13, uc, unsigned char)\n+T(14, uc, unsigned char)\n+T(15, uc, unsigned char)\n+T(0, us, unsigned short)\n+T(1, us, unsigned short)\n+T(2, us, unsigned short)\n+T(3, us, unsigned short)\n+T(4, us, unsigned short)\n+T(5, us, unsigned short)\n+T(6, us, unsigned short)\n+T(7, us, unsigned short)\n+T(8, us, unsigned short)\n+T(9, us, unsigned short)\n+T(10, us, unsigned short)\n+T(11, us, unsigned short)\n+T(12, us, unsigned short)\n+T(13, us, unsigned short)\n+T(14, us, unsigned short)\n+T(15, us, unsigned short)\n+T(0, ui, unsigned int)\n+T(1, ui, unsigned int)\n+T(2, ui, unsigned int)\n+T(3, ui, unsigned int)\n+T(4, ui, unsigned int)\n+T(5, ui, unsigned int)\n+T(6, ui, unsigned int)\n+T(7, ui, unsigned int)\n+T(8, ui, unsigned int)\n+T(9, ui, unsigned int)\n+T(10, ui, unsigned int)\n+T(11, ui, unsigned int)\n+T(12, ui, unsigned int)\n+T(13, ui, unsigned int)\n+T(14, ui, unsigned int)\n+T(15, ui, unsigned int)\n+\n+#undef T\n+\n+void\n+struct_return_2_x ()\n+{\n+#define T(N, NAME, TYPE) testit##NAME##N ();\n+\n+T(0, uc, unsigned char)\n+T(1, uc, unsigned char)\n+T(2, uc, unsigned char)\n+T(3, uc, unsigned char)\n+T(4, uc, unsigned char)\n+T(5, uc, unsigned char)\n+T(6, uc, unsigned char)\n+T(7, uc, unsigned char)\n+T(8, uc, unsigned char)\n+T(9, uc, unsigned char)\n+T(10, uc, unsigned char)\n+T(11, uc, unsigned char)\n+T(12, uc, unsigned char)\n+T(13, uc, unsigned char)\n+T(14, uc, unsigned char)\n+T(15, uc, unsigned char)\n+T(0, us, unsigned short)\n+T(1, us, unsigned short)\n+T(2, us, unsigned short)\n+T(3, us, unsigned short)\n+T(4, us, unsigned short)\n+T(5, us, unsigned short)\n+T(6, us, unsigned short)\n+T(7, us, unsigned short)\n+T(8, us, unsigned short)\n+T(9, us, unsigned short)\n+T(10, us, unsigned short)\n+T(11, us, unsigned short)\n+T(12, us, unsigned short)\n+T(13, us, unsigned short)\n+T(14, us, unsigned short)\n+T(15, us, unsigned short)\n+T(0, ui, unsigned int)\n+T(1, ui, unsigned int)\n+T(2, ui, unsigned int)\n+T(3, ui, unsigned int)\n+T(4, ui, unsigned int)\n+T(5, ui, unsigned int)\n+T(6, ui, unsigned int)\n+T(7, ui, unsigned int)\n+T(8, ui, unsigned int)\n+T(9, ui, unsigned int)\n+T(10, ui, unsigned int)\n+T(11, ui, unsigned int)\n+T(12, ui, unsigned int)\n+T(13, ui, unsigned int)\n+T(14, ui, unsigned int)\n+T(15, ui, unsigned int)\n+\n+#undef T\n+}"}, {"sha": "50f3cc716ba597b1800aacc5696def8ad9216e7f", "filename": "gcc/testsuite/gcc.dg/compat/struct-return-2_y.c", "status": "added", "additions": 142, "deletions": 0, "changes": 142, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9008d5b47e4efee754b14d5587a61fd9e61b10b1/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-return-2_y.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9008d5b47e4efee754b14d5587a61fd9e61b10b1/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-return-2_y.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-return-2_y.c?ref=9008d5b47e4efee754b14d5587a61fd9e61b10b1", "patch": "@@ -0,0 +1,142 @@\n+#include <stdarg.h>\n+\n+#ifdef DBG\n+#include <stdio.h>\n+#define DEBUG_FPUTS(x) fputs (x, stdout)\n+#define DEBUG_DOT putc ('.', stdout)\n+#define DEBUG_NL putc ('\\n', stdout)\n+#else\n+#define DEBUG_FPUTS(x)\n+#define DEBUG_DOT\n+#define DEBUG_NL\n+#endif\n+\n+/* Turn off checking for variable arguments with -DSKIPVA.  */\n+#ifdef SKIPVA\n+const int test_va = 0;\n+#else\n+const int test_va = 1;\n+#endif\n+\n+#define T(N, NAME, TYPE)\t\t\t\t\t\\\n+struct S##NAME##N { TYPE i[N]; };\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+extern struct S##NAME##N g1s##NAME##N, g2s##NAME##N;\t\t\\\n+extern struct S##NAME##N g3s##NAME##N, g4s##NAME##N;\t\t\\\n+extern struct S##NAME##N g5s##NAME##N, g6s##NAME##N;\t\t\\\n+extern struct S##NAME##N g7s##NAME##N, g8s##NAME##N;\t\t\\\n+extern struct S##NAME##N g9s##NAME##N, g10s##NAME##N;\t\t\\\n+extern struct S##NAME##N g11s##NAME##N, g12s##NAME##N;\t\t\\\n+extern struct S##NAME##N g13s##NAME##N, g14s##NAME##N;\t\t\\\n+extern struct S##NAME##N g15s##NAME##N, g16s##NAME##N;\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+extern void check##NAME##N (struct S##NAME##N *p, int i);\t\\\n+\t\t\t\t\t\t\t\t\\\n+void\t\t\t\t\t\t\t\t\\\n+init##NAME##N (struct S##NAME##N *p, int i)\t\t\t\\\n+{\t\t\t\t\t\t\t\t\\\n+  int j;\t\t\t\t\t\t\t\\\n+  for (j = 0; j < N; j++)\t\t\t\t\t\\\n+    p->i[j] = i + j;\t\t\t\t\t\t\\\n+}\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+void\t\t\t\t\t\t\t\t\\\n+checkg##NAME##N (void)\t\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\\\n+  check##NAME##N ( &g1s##NAME##N,  1*16);\t\t\t\\\n+  check##NAME##N ( &g2s##NAME##N,  2*16);\t\t\t\\\n+  check##NAME##N ( &g3s##NAME##N,  3*16);\t\t\t\\\n+  check##NAME##N ( &g4s##NAME##N,  4*16);\t\t\t\\\n+  check##NAME##N ( &g5s##NAME##N,  5*16);\t\t\t\\\n+  check##NAME##N ( &g6s##NAME##N,  6*16);\t\t\t\\\n+  check##NAME##N ( &g7s##NAME##N,  7*16);\t\t\t\\\n+  check##NAME##N ( &g8s##NAME##N,  8*16);\t\t\t\\\n+  check##NAME##N ( &g9s##NAME##N,  9*16);\t\t\t\\\n+  check##NAME##N (&g10s##NAME##N, 10*16);\t\t\t\\\n+  check##NAME##N (&g11s##NAME##N, 11*16);\t\t\t\\\n+  check##NAME##N (&g12s##NAME##N, 12*16);\t\t\t\\\n+  check##NAME##N (&g13s##NAME##N, 13*16);\t\t\t\\\n+  check##NAME##N (&g14s##NAME##N, 14*16);\t\t\t\\\n+  check##NAME##N (&g15s##NAME##N, 15*16);\t\t\t\\\n+  check##NAME##N (&g16s##NAME##N, 16*16);\t\t\t\\\n+}\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+struct S##NAME##N\t\t\t\t\t\t\\\n+test0##NAME##N (void)\t\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\\\n+  return g1s##NAME##N;\t\t\t\t\t\t\\\n+}\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+struct S##NAME##N\t\t\t\t\t\t\\\n+test1##NAME##N (struct S##NAME##N x01)\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\\\n+  return x01;\t\t\t\t\t\t\t\\\n+}\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+struct S##NAME##N\t\t\t\t\t\t\\\n+testva##NAME##N (int n, ...)\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\\\n+  int i;\t\t\t\t\t\t\t\\\n+  struct S##NAME##N rslt;\t\t\t\t\t\\\n+  va_list ap;\t\t\t\t\t\t\t\\\n+  if (test_va)\t\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\\\n+      va_start (ap, n);\t\t\t\t\t\t\\\n+      for (i = 0; i < n; i++)\t\t\t\t\t\\\n+\t{\t\t\t\t\t\t\t\\\n+\t  rslt = va_arg (ap, struct S##NAME##N);\t\t\\\n+\t  DEBUG_DOT;\t\t\t\t\t\t\\\n+\t}\t\t\t\t\t\t\t\\\n+      va_end (ap);\t\t\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\t\\\n+  return rslt;\t\t\t\t\t\t\t\\\n+}\n+\n+T(0, uc, unsigned char)\n+T(1, uc, unsigned char)\n+T(2, uc, unsigned char)\n+T(3, uc, unsigned char)\n+T(4, uc, unsigned char)\n+T(5, uc, unsigned char)\n+T(6, uc, unsigned char)\n+T(7, uc, unsigned char)\n+T(8, uc, unsigned char)\n+T(9, uc, unsigned char)\n+T(10, uc, unsigned char)\n+T(11, uc, unsigned char)\n+T(12, uc, unsigned char)\n+T(13, uc, unsigned char)\n+T(14, uc, unsigned char)\n+T(15, uc, unsigned char)\n+T(0, us, unsigned short)\n+T(1, us, unsigned short)\n+T(2, us, unsigned short)\n+T(3, us, unsigned short)\n+T(4, us, unsigned short)\n+T(5, us, unsigned short)\n+T(6, us, unsigned short)\n+T(7, us, unsigned short)\n+T(8, us, unsigned short)\n+T(9, us, unsigned short)\n+T(10, us, unsigned short)\n+T(11, us, unsigned short)\n+T(12, us, unsigned short)\n+T(13, us, unsigned short)\n+T(14, us, unsigned short)\n+T(15, us, unsigned short)\n+T(0, ui, unsigned int)\n+T(1, ui, unsigned int)\n+T(2, ui, unsigned int)\n+T(3, ui, unsigned int)\n+T(4, ui, unsigned int)\n+T(5, ui, unsigned int)\n+T(6, ui, unsigned int)\n+T(7, ui, unsigned int)\n+T(8, ui, unsigned int)\n+T(9, ui, unsigned int)\n+T(10, ui, unsigned int)\n+T(11, ui, unsigned int)\n+T(12, ui, unsigned int)\n+T(13, ui, unsigned int)\n+T(14, ui, unsigned int)\n+T(15, ui, unsigned int)"}, {"sha": "87be8a3db4016680e29a7521533c6642d37cef63", "filename": "gcc/testsuite/gcc.dg/compat/struct-return-3_main.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9008d5b47e4efee754b14d5587a61fd9e61b10b1/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-return-3_main.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9008d5b47e4efee754b14d5587a61fd9e61b10b1/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-return-3_main.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-return-3_main.c?ref=9008d5b47e4efee754b14d5587a61fd9e61b10b1", "patch": "@@ -0,0 +1,13 @@\n+/* Test function return values.  For this test, all struct members are\n+   scalar integral types and the structs are \"small\": 1, 2, 4, 8, and 12\n+   bytes for LP64.  */\n+\n+extern void struct_return_3_x (void);\n+extern void exit (int);\n+\n+int\n+main ()\n+{\n+  struct_return_3_x ();\n+  exit (0);\n+}"}, {"sha": "05d1e5059bd575a0419b5de562ca5071094a9424", "filename": "gcc/testsuite/gcc.dg/compat/struct-return-3_x.c", "status": "added", "additions": 122, "deletions": 0, "changes": 122, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9008d5b47e4efee754b14d5587a61fd9e61b10b1/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-return-3_x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9008d5b47e4efee754b14d5587a61fd9e61b10b1/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-return-3_x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-return-3_x.c?ref=9008d5b47e4efee754b14d5587a61fd9e61b10b1", "patch": "@@ -0,0 +1,122 @@\n+#ifdef DBG\n+#include <stdio.h>\n+#define DEBUG_FPUTS(x) fputs (x, stdout)\n+#define DEBUG_DOT putc ('.', stdout)\n+#define DEBUG_NL putc ('\\n', stdout)\n+#else\n+#define DEBUG_FPUTS(x)\n+#define DEBUG_DOT\n+#define DEBUG_NL\n+#endif\n+\n+#define T(TYPE)\t\t\t\t\t\t\t\\\n+TYPE g01##TYPE, g02##TYPE, g03##TYPE, g04##TYPE;\t\t\\\n+TYPE g05##TYPE, g06##TYPE, g07##TYPE, g08##TYPE;\t\t\\\n+TYPE g09##TYPE, g10##TYPE, g11##TYPE, g12##TYPE;\t\t\\\n+TYPE g13##TYPE, g14##TYPE, g15##TYPE, g16##TYPE;\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+extern void init##TYPE (TYPE *p, int i);\t\t\t\\\n+extern void checkg##TYPE (void);\t\t\t\t\\\n+extern TYPE test0##TYPE (void);\t\t\t\t\t\\\n+extern TYPE test1##TYPE (TYPE);\t\t\t\t\t\\\n+extern TYPE testva##TYPE (int n, ...);\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+void\t\t\t\t\t\t\t\t\\\n+testit##TYPE (void)\t\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\\\n+  TYPE rslt;\t\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (#TYPE);\t\t\t\t\t\t\\\n+  init##TYPE  (&g01##TYPE,  1);\t\t\t\t\t\\\n+  init##TYPE  (&g02##TYPE,  2);\t\t\t\t\t\\\n+  init##TYPE  (&g03##TYPE,  3);\t\t\t\t\t\\\n+  init##TYPE  (&g04##TYPE,  4);\t\t\t\t\t\\\n+  init##TYPE  (&g05##TYPE,  5);\t\t\t\t\t\\\n+  init##TYPE  (&g06##TYPE,  6);\t\t\t\t\t\\\n+  init##TYPE  (&g07##TYPE,  7);\t\t\t\t\t\\\n+  init##TYPE  (&g08##TYPE,  8);\t\t\t\t\t\\\n+  init##TYPE  (&g09##TYPE,  9);\t\t\t\t\t\\\n+  init##TYPE  (&g10##TYPE, 10);\t\t\t\t\t\\\n+  init##TYPE  (&g11##TYPE, 11);\t\t\t\t\t\\\n+  init##TYPE  (&g12##TYPE, 12);\t\t\t\t\t\\\n+  init##TYPE  (&g13##TYPE, 13);\t\t\t\t\t\\\n+  init##TYPE  (&g14##TYPE, 14);\t\t\t\t\t\\\n+  init##TYPE  (&g15##TYPE, 15);\t\t\t\t\t\\\n+  init##TYPE  (&g16##TYPE, 16);\t\t\t\t\t\\\n+  checkg##TYPE ();\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (\" test0\");\t\t\t\t\t\\\n+  rslt = test0##TYPE ();\t\t\t\t\t\\\n+  check##TYPE (rslt, 1);\t\t\t\t\t\\\n+  DEBUG_FPUTS (\" test1\");\t\t\t\t\t\\\n+  rslt = test1##TYPE (g01##TYPE);\t\t\t\t\\\n+  check##TYPE (rslt, 1);\t\t\t\t\t\\\n+  DEBUG_FPUTS (\" testva\");\t\t\t\t\t\\\n+  rslt = testva##TYPE (1, g01##TYPE);\t\t\t\t\\\n+  check##TYPE (rslt, 1);\t\t\t\t\t\\\n+  rslt = testva##TYPE (5, g01##TYPE, g02##TYPE,\t\t\t\\\n+\t\t\t  g03##TYPE, g04##TYPE,\t\t\t\\\n+\t\t\t  g05##TYPE);\t\t\t\t\\\n+  check##TYPE (rslt, 5);\t\t\t\t\t\\\n+  rslt = testva##TYPE (9, g01##TYPE, g02##TYPE,\t\t\t\\\n+\t\t\t  g03##TYPE, g04##TYPE,\t\t\t\\\n+\t\t\t  g05##TYPE, g06##TYPE,\t\t\t\\\n+\t\t\t  g07##TYPE, g08##TYPE,\t\t\t\\\n+\t\t\t  g09##TYPE);\t\t\t\t\\\n+  check##TYPE (rslt, 9);\t\t\t\t\t\\\n+  rslt = testva##TYPE (16, g01##TYPE, g02##TYPE,\t\t\\\n+\t\t\t  g03##TYPE, g04##TYPE,\t\t\t\\\n+\t\t\t  g05##TYPE, g06##TYPE,\t\t\t\\\n+\t\t\t  g07##TYPE, g08##TYPE,\t\t\t\\\n+\t\t\t  g09##TYPE, g10##TYPE,\t\t\t\\\n+\t\t\t  g11##TYPE, g12##TYPE,\t\t\t\\\n+\t\t\t  g13##TYPE, g14##TYPE,\t\t\t\\\n+\t\t\t  g15##TYPE, g16##TYPE);\t\t\\\n+  check##TYPE (rslt, 16);\t\t\t\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n+}\n+\n+extern void abort (void);\n+\n+#include \"small-struct-defs.h\"\n+#include \"small-struct-check.h\"\n+\n+T(Sc)\n+T(Ss)\n+T(Si)\n+T(Scs)\n+T(Ssc)\n+T(Sic)\n+T(Sci)\n+T(Ssi)\n+T(Sis)\n+T(Scsi)\n+T(Scis)\n+T(Ssci)\n+T(Ssic)\n+T(Sisc)\n+T(Sics)\n+\n+#undef T\n+\n+void\n+struct_return_3_x ()\n+{\n+#define T(TYPE) testit##TYPE ();\n+\n+T(Sc)\n+T(Ss)\n+T(Si)\n+T(Scs)\n+T(Ssc)\n+T(Sic)\n+T(Sci)\n+T(Ssi)\n+T(Sis)\n+T(Scsi)\n+T(Scis)\n+T(Ssci)\n+T(Ssic)\n+T(Sisc)\n+T(Sics)\n+\n+#undef T\n+}"}, {"sha": "4dc20311ca0eb0da260600ecaf6b8066a8b3ba3f", "filename": "gcc/testsuite/gcc.dg/compat/struct-return-3_y.c", "status": "added", "additions": 98, "deletions": 0, "changes": 98, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9008d5b47e4efee754b14d5587a61fd9e61b10b1/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-return-3_y.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9008d5b47e4efee754b14d5587a61fd9e61b10b1/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-return-3_y.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-return-3_y.c?ref=9008d5b47e4efee754b14d5587a61fd9e61b10b1", "patch": "@@ -0,0 +1,98 @@\n+#include <stdarg.h>\n+\n+#ifdef DBG\n+#include <stdio.h>\n+#define DEBUG_FPUTS(x) fputs (x, stdout)\n+#define DEBUG_DOT putc ('.', stdout)\n+#define DEBUG_NL putc ('\\n', stdout)\n+#else\n+#define DEBUG_FPUTS(x)\n+#define DEBUG_DOT\n+#define DEBUG_NL\n+#endif\n+\n+/* Turn off checking for variable arguments with -DSKIPVA.  */\n+#ifdef SKIPVA\n+const int test_va = 0;\n+#else\n+const int test_va = 1;\n+#endif\n+\n+#include \"small-struct-defs.h\"\n+#include \"small-struct-init.h\"\n+\n+#define T(TYPE)\t\t\t\t\t\t\t\\\n+extern TYPE g01##TYPE, g02##TYPE, g03##TYPE, g04##TYPE;\t\t\\\n+extern TYPE g05##TYPE, g06##TYPE, g07##TYPE, g08##TYPE;\t\t\\\n+extern TYPE g09##TYPE, g10##TYPE, g11##TYPE, g12##TYPE;\t\t\\\n+extern TYPE g13##TYPE, g14##TYPE, g15##TYPE, g16##TYPE;\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+extern void check##TYPE (TYPE x, int i);\t\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+void\t\t\t\t\t\t\t\t\\\n+checkg##TYPE (void)\t\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\\\n+  check##TYPE (g01##TYPE,  1);\t\t\t\t\t\\\n+  check##TYPE (g02##TYPE,  2);\t\t\t\t\t\\\n+  check##TYPE (g03##TYPE,  3);\t\t\t\t\t\\\n+  check##TYPE (g04##TYPE,  4);\t\t\t\t\t\\\n+  check##TYPE (g05##TYPE,  5);\t\t\t\t\t\\\n+  check##TYPE (g06##TYPE,  6);\t\t\t\t\t\\\n+  check##TYPE (g07##TYPE,  7);\t\t\t\t\t\\\n+  check##TYPE (g08##TYPE,  8);\t\t\t\t\t\\\n+  check##TYPE (g09##TYPE,  9);\t\t\t\t\t\\\n+  check##TYPE (g10##TYPE, 10);\t\t\t\t\t\\\n+  check##TYPE (g11##TYPE, 11);\t\t\t\t\t\\\n+  check##TYPE (g12##TYPE, 12);\t\t\t\t\t\\\n+  check##TYPE (g13##TYPE, 13);\t\t\t\t\t\\\n+  check##TYPE (g14##TYPE, 14);\t\t\t\t\t\\\n+  check##TYPE (g15##TYPE, 15);\t\t\t\t\t\\\n+  check##TYPE (g16##TYPE, 16);\t\t\t\t\t\\\n+}\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+TYPE\t\t\t\t\t\t\t\t\\\n+test0##TYPE (void)\t\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\\\n+  return g01##TYPE;\t\t\t\t\t\t\\\n+}\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+TYPE\t\t\t\t\t\t\t\t\\\n+test1##TYPE (TYPE x01)\t\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\\\n+  return x01;\t\t\t\t\t\t\t\\\n+}\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+TYPE\t\t\t\t\t\t\t\t\\\n+testva##TYPE (int n, ...)\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\\\n+  int i;\t\t\t\t\t\t\t\\\n+  TYPE rslt;\t\t\t\t\t\t\t\\\n+  va_list ap;\t\t\t\t\t\t\t\\\n+  if (test_va)\t\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\\\n+      va_start (ap, n);\t\t\t\t\t\t\\\n+      for (i = 0; i < n; i++)\t\t\t\t\t\\\n+\t{\t\t\t\t\t\t\t\\\n+\t  rslt = va_arg (ap, TYPE);\t\t\t\t\\\n+\t  DEBUG_DOT;\t\t\t\t\t\t\\\n+\t}\t\t\t\t\t\t\t\\\n+      va_end (ap);\t\t\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\t\\\n+  return rslt;\t\t\t\t\t\t\t\\\n+}\n+\n+T(Sc)\n+T(Ss)\n+T(Si)\n+T(Scs)\n+T(Ssc)\n+T(Sic)\n+T(Sci)\n+T(Ssi)\n+T(Sis)\n+T(Scsi)\n+T(Scis)\n+T(Ssci)\n+T(Ssic)\n+T(Sisc)\n+T(Sics)"}]}