{"sha": "231ef54b96d6022bc844107f50490ba5c96f4a50", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjMxZWY1NGI5NmQ2MDIyYmM4NDQxMDdmNTA0OTBiYTVjOTZmNGE1MA==", "commit": {"author": {"name": "Yannick Moy", "email": "moy@adacore.com", "date": "2019-09-19T08:14:03Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-09-19T08:14:03Z"}, "message": "[Ada] Disable inlining of traversal function in GNATprove\n\nTraversal functions as defined in SPARK RM 3.10 should not be inlined\nfor analysis in GNATprove, as this changes the ownership behavior.\nDisable the inlining performed in GNATprove on functions which could be\ninterpreted as such.\n\nThere is no impact on compilation and thus no test.\n\n2019-09-19  Yannick Moy  <moy@adacore.com>\n\ngcc/ada/\n\n\t* inline.adb (Can_Be_Inlined_In_GNATprove_Mode): Add special\n\tcase for traversal functions.\n\nFrom-SVN: r275948", "tree": {"sha": "34ead3fe4f6594bef2dbb93f2dce6de0f53bf2fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/34ead3fe4f6594bef2dbb93f2dce6de0f53bf2fa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/231ef54b96d6022bc844107f50490ba5c96f4a50", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/231ef54b96d6022bc844107f50490ba5c96f4a50", "html_url": "https://github.com/Rust-GCC/gccrs/commit/231ef54b96d6022bc844107f50490ba5c96f4a50", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/231ef54b96d6022bc844107f50490ba5c96f4a50/comments", "author": {"login": "yannickmoy", "id": 859440, "node_id": "MDQ6VXNlcjg1OTQ0MA==", "avatar_url": "https://avatars.githubusercontent.com/u/859440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yannickmoy", "html_url": "https://github.com/yannickmoy", "followers_url": "https://api.github.com/users/yannickmoy/followers", "following_url": "https://api.github.com/users/yannickmoy/following{/other_user}", "gists_url": "https://api.github.com/users/yannickmoy/gists{/gist_id}", "starred_url": "https://api.github.com/users/yannickmoy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yannickmoy/subscriptions", "organizations_url": "https://api.github.com/users/yannickmoy/orgs", "repos_url": "https://api.github.com/users/yannickmoy/repos", "events_url": "https://api.github.com/users/yannickmoy/events{/privacy}", "received_events_url": "https://api.github.com/users/yannickmoy/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "09709b4781192f7724e2bb2977d3610ae727260f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09709b4781192f7724e2bb2977d3610ae727260f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/09709b4781192f7724e2bb2977d3610ae727260f"}], "stats": {"total": 34, "additions": 34, "deletions": 0}, "files": [{"sha": "8c88e9061056c8d2ca44eef2ac1dfa357f88f5b6", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/231ef54b96d6022bc844107f50490ba5c96f4a50/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/231ef54b96d6022bc844107f50490ba5c96f4a50/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=231ef54b96d6022bc844107f50490ba5c96f4a50", "patch": "@@ -1,3 +1,8 @@\n+2019-09-19  Yannick Moy  <moy@adacore.com>\n+\n+\t* inline.adb (Can_Be_Inlined_In_GNATprove_Mode): Add special\n+\tcase for traversal functions.\n+\n 2019-09-19  Yannick Moy  <moy@adacore.com>\n \n \t* sem_prag.adb (Analyze_Global_In_Decl_Part): Do not issue an"}, {"sha": "dab2275b7662e8b98408d853bd88edae865cfff9", "filename": "gcc/ada/inline.adb", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/231ef54b96d6022bc844107f50490ba5c96f4a50/gcc%2Fada%2Finline.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/231ef54b96d6022bc844107f50490ba5c96f4a50/gcc%2Fada%2Finline.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finline.adb?ref=231ef54b96d6022bc844107f50490ba5c96f4a50", "patch": "@@ -1512,6 +1512,12 @@ package body Inline is\n       --  Return True if subprogram Id is defined in the package specification,\n       --  either its visible or private part.\n \n+      function Maybe_Traversal_Function (Id : Entity_Id) return Boolean;\n+      --  Return True if subprogram Id could be a traversal function, as\n+      --  defined in SPARK RM 3.10. This is only a safe approximation, as the\n+      --  knowledge of the SPARK boundary is needed to determine exactly\n+      --  traversal functions.\n+\n       ---------------------------------------------------\n       -- Has_Formal_With_Discriminant_Dependent_Fields --\n       ---------------------------------------------------\n@@ -1635,6 +1641,20 @@ package body Inline is\n          return Nkind (Parent (Decl)) = N_Compilation_Unit;\n       end Is_Unit_Subprogram;\n \n+      ------------------------------\n+      -- Maybe_Traversal_Function --\n+      ------------------------------\n+\n+      function Maybe_Traversal_Function (Id : Entity_Id) return Boolean is\n+      begin\n+         return Ekind (Id) = E_Function\n+\n+           --  Only traversal functions return an anonymous access-to-object\n+           --  type in SPARK.\n+\n+           and then Is_Anonymous_Access_Type (Etype (Id));\n+      end Maybe_Traversal_Function;\n+\n       --  Local declarations\n \n       Id : Entity_Id;\n@@ -1757,6 +1777,15 @@ package body Inline is\n       elsif Has_Formal_With_Discriminant_Dependent_Fields (Id) then\n          return False;\n \n+      --  Do not inline subprograms which may be traversal functions. Such\n+      --  inlining introduces temporary variables of named access type for\n+      --  which assignments are move instead of borrow/observe, possibly\n+      --  leading to spurious errors when checking SPARK rules related to\n+      --  pointer usage.\n+\n+      elsif Maybe_Traversal_Function (Id) then\n+         return False;\n+\n       --  Otherwise, this is a subprogram declared inside the private part of a\n       --  package, or inside a package body, or locally in a subprogram, and it\n       --  does not have any contract. Inline it."}]}