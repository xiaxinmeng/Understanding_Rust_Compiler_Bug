{"sha": "b2b222b31138eb3772cfd648ff2cf31be27ee30b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjJiMjIyYjMxMTM4ZWIzNzcyY2ZkNjQ4ZmYyY2YzMWJlMjdlZTMwYg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2014-05-20T13:54:06Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2014-05-20T13:54:06Z"}, "message": "tree-ssa-sccvn.c (process_scc): Dump SCC here, when iterating,\n\n2014-05-20  Richard Biener  <rguenther@suse.de>\n\n\t* tree-ssa-sccvn.c (process_scc): Dump SCC here, when\n\titerating,\n\t(extract_and_process_scc_for_name): not here.\n\t(cond_dom_walker::before_dom_children): Only process\n\tstmts that end the BB in interesting ways.\n\t(run_scc_vn): Mark param uses as visited.\n\nFrom-SVN: r210643", "tree": {"sha": "173bc51873496f0c9dd1827d9f390d07b2fcd19e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/173bc51873496f0c9dd1827d9f390d07b2fcd19e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b2b222b31138eb3772cfd648ff2cf31be27ee30b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2b222b31138eb3772cfd648ff2cf31be27ee30b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b2b222b31138eb3772cfd648ff2cf31be27ee30b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2b222b31138eb3772cfd648ff2cf31be27ee30b/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bdb5a9a30cf2074db776dc282ebdb135f25c36f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bdb5a9a30cf2074db776dc282ebdb135f25c36f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bdb5a9a30cf2074db776dc282ebdb135f25c36f0"}], "stats": {"total": 40, "additions": 33, "deletions": 7}, "files": [{"sha": "f0aecbd07df4812fc1bf598384b669dca5c75fe0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2b222b31138eb3772cfd648ff2cf31be27ee30b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2b222b31138eb3772cfd648ff2cf31be27ee30b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b2b222b31138eb3772cfd648ff2cf31be27ee30b", "patch": "@@ -1,3 +1,12 @@\n+2014-05-20  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-ssa-sccvn.c (process_scc): Dump SCC here, when\n+\titerating,\n+\t(extract_and_process_scc_for_name): not here.\n+\t(cond_dom_walker::before_dom_children): Only process\n+\tstmts that end the BB in interesting ways.\n+\t(run_scc_vn): Mark param uses as visited.\n+\n 2014-05-20  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* config/arm/arm.md (arith_shiftsi): Do not predicate for"}, {"sha": "b45dc143833338e04bf42ff7337a9c68bd53dd1c", "filename": "gcc/tree-ssa-sccvn.c", "status": "modified", "additions": 24, "deletions": 7, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2b222b31138eb3772cfd648ff2cf31be27ee30b/gcc%2Ftree-ssa-sccvn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2b222b31138eb3772cfd648ff2cf31be27ee30b/gcc%2Ftree-ssa-sccvn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-sccvn.c?ref=b2b222b31138eb3772cfd648ff2cf31be27ee30b", "patch": "@@ -3833,6 +3833,9 @@ process_scc (vec<tree> scc)\n \t}\n     }\n \n+  if (dump_file && (dump_flags & TDF_DETAILS))\n+    print_scc (dump_file, scc);\n+\n   /* Iterate over the SCC with the optimistic table until it stops\n      changing.  */\n   current_info = optimistic_info;\n@@ -3858,6 +3861,8 @@ process_scc (vec<tree> scc)\n \tchanged |= visit_use (var);\n     }\n \n+  if (dump_file && (dump_flags & TDF_DETAILS))\n+    fprintf (dump_file, \"Processing SCC needed %d iterations\\n\", iterations);\n   statistics_histogram_event (cfun, \"SCC iterations\", iterations);\n \n   /* Finally, copy the contents of the no longer used optimistic\n@@ -3909,9 +3914,6 @@ extract_and_process_scc_for_name (tree name)\n   if (scc.length () > 1)\n     sort_scc (scc);\n \n-  if (dump_file && (dump_flags & TDF_DETAILS))\n-    print_scc (dump_file, scc);\n-\n   process_scc (scc);\n \n   return true;\n@@ -4221,6 +4223,19 @@ cond_dom_walker::before_dom_children (basic_block bb)\n   if (!stmt)\n     return;\n \n+  enum gimple_code code = gimple_code (stmt);\n+  if (code != GIMPLE_COND\n+      && code != GIMPLE_SWITCH\n+      && code != GIMPLE_GOTO)\n+    return;\n+\n+  if (dump_file && (dump_flags & TDF_DETAILS))\n+    {\n+      fprintf (dump_file, \"Value-numbering operands of stmt ending BB %d: \",\n+\t       bb->index);\n+      print_gimple_stmt (dump_file, stmt, 0, 0);\n+    }\n+\n   /* Value-number the last stmts SSA uses.  */\n   ssa_op_iter i;\n   tree op;\n@@ -4236,7 +4251,7 @@ cond_dom_walker::before_dom_children (basic_block bb)\n      if value-numbering can prove they are not reachable.  Handling\n      computed gotos is also possible.  */\n   tree val;\n-  switch (gimple_code (stmt))\n+  switch (code)\n     {\n     case GIMPLE_COND:\n       {\n@@ -4259,8 +4274,7 @@ cond_dom_walker::before_dom_children (basic_block bb)\n       val = gimple_goto_dest (stmt);\n       break;\n     default:\n-      val = NULL_TREE;\n-      break;\n+      gcc_unreachable ();\n     }\n   if (!val)\n     return;\n@@ -4300,7 +4314,10 @@ run_scc_vn (vn_lookup_kind default_vn_walk_kind_)\n     {\n       tree def = ssa_default_def (cfun, param);\n       if (def)\n-\tVN_INFO (def)->valnum = def;\n+\t{\n+\t  VN_INFO (def)->visited = true;\n+\t  VN_INFO (def)->valnum = def;\n+\t}\n     }\n \n   /* Mark all edges as possibly executable.  */"}]}