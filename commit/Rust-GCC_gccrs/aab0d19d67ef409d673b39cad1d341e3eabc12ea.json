{"sha": "aab0d19d67ef409d673b39cad1d341e3eabc12ea", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWFiMGQxOWQ2N2VmNDA5ZDY3M2IzOWNhZDFkMzQxZTNlYWJjMTJlYQ==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@cygnus.com", "date": "2000-05-16T07:00:47Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2000-05-16T07:00:47Z"}, "message": "configure.in, [...]: Merge all libffi-related configury stuff from the libgcj tree.\n\n* configure.in, Makefile.in: Merge all libffi-related\nconfigury stuff from the libgcj tree.\n\nFrom-SVN: r33926", "tree": {"sha": "e1d00b54d7f96bd50f52d676ae6da3c1cf574b24", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e1d00b54d7f96bd50f52d676ae6da3c1cf574b24"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aab0d19d67ef409d673b39cad1d341e3eabc12ea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aab0d19d67ef409d673b39cad1d341e3eabc12ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aab0d19d67ef409d673b39cad1d341e3eabc12ea", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aab0d19d67ef409d673b39cad1d341e3eabc12ea/comments", "author": null, "committer": null, "parents": [{"sha": "d2f7de5840456608b37b42dfb3314acc93379478", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2f7de5840456608b37b42dfb3314acc93379478", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d2f7de5840456608b37b42dfb3314acc93379478"}], "stats": {"total": 99, "additions": 57, "deletions": 42}, "files": [{"sha": "896830159c90c94eba4019457ecdc1f6efcc6364", "filename": "ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aab0d19d67ef409d673b39cad1d341e3eabc12ea/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aab0d19d67ef409d673b39cad1d341e3eabc12ea/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=aab0d19d67ef409d673b39cad1d341e3eabc12ea", "patch": "@@ -1,3 +1,8 @@\n+2000-05-16  Alexandre Oliva  <aoliva@cygnus.com>\n+\n+\t* configure.in, Makefile.in: Merge all libffi-related\n+\tconfigury stuff from the libgcj tree.\n+\n 2000-05-15  David Edelsohn  <edelsohn@gnu.org>\n \n \t* configure.in: Special case powerpc*-*-aix* target_makefile_frag."}, {"sha": "b435d4e28a473f7fccb14dae9939b2d4a5442373", "filename": "Makefile.in", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aab0d19d67ef409d673b39cad1d341e3eabc12ea/Makefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aab0d19d67ef409d673b39cad1d341e3eabc12ea/Makefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.in?ref=aab0d19d67ef409d673b39cad1d341e3eabc12ea", "patch": "@@ -785,6 +785,7 @@ ALL_TARGET_MODULES = \\\n \tall-target-gperf \\\n \tall-target-examples \\\n \tall-target-libstub \\\n+\tall-target-libffi \\\n \tall-target-libjava \\\n \tall-target-zlib \\\n \tall-target-boehm-gc \\\n@@ -809,6 +810,7 @@ CONFIGURE_TARGET_MODULES = \\\n \tconfigure-target-gperf \\\n \tconfigure-target-examples \\\n \tconfigure-target-libstub \\\n+\tconfigure-target-libffi \\\n \tconfigure-target-libjava \\\n \tconfigure-target-zlib \\\n \tconfigure-target-boehm-gc \\\n@@ -828,6 +830,7 @@ CHECK_TARGET_MODULES = \\\n \tcheck-target-libobjc \\\n \tcheck-target-winsup \\\n \tcheck-target-libiberty \\\n+\tcheck-target-libffi \\\n \tcheck-target-libjava \\\n \tcheck-target-zlib \\\n \tcheck-target-boehm-gc \\\n@@ -939,6 +942,7 @@ CLEAN_TARGET_MODULES = \\\n \tclean-target-gperf \\\n \tclean-target-examples \\\n \tclean-target-libstub \\\n+\tclean-target-libffi \\\n \tclean-target-libjava \\\n \tclean-target-zlib \\\n \tclean-target-boehm-gc \\\n@@ -1634,8 +1638,10 @@ all-target-libio: configure-target-libio all-gas all-ld all-gcc all-target-libib\n check-target-libio: all-target-libstdc++\n all-libgui: all-tcl all-tk all-itcl\n all-libiberty:\n-configure-target-libjava: $(ALL_GCC) configure-target-zlib configure-target-boehm-gc configure-target-qthreads configure-target-newlib\n-all-target-libjava: configure-target-libjava all-gcc all-zip all-target-newlib all-target-zlib all-target-boehm-gc all-target-qthreads\n+configure-target-libffi: $(ALL_GCC) \n+configure-target-libjava: $(ALL_GCC) configure-target-zlib configure-target-boehm-gc configure-target-qthreads configure-target-newlib configure-target-libffi\n+all-target-libffi: configure-target-libffi\n+all-target-libjava: configure-target-libjava all-gcc all-zip all-target-newlib all-target-zlib all-target-boehm-gc all-target-qthreads all-target-libffi\n configure-target-librx: $(ALL_GCC) configure-target-newlib\n all-target-librx: configure-target-librx\n configure-target-libstdc++: $(ALL_GCC)"}, {"sha": "cfb33ad912efcbc83a52886b430aeae1d972872b", "filename": "configure.in", "status": "modified", "additions": 44, "deletions": 40, "changes": 84, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aab0d19d67ef409d673b39cad1d341e3eabc12ea/configure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aab0d19d67ef409d673b39cad1d341e3eabc12ea/configure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure.in?ref=aab0d19d67ef409d673b39cad1d341e3eabc12ea", "patch": "@@ -71,6 +71,7 @@ target_libs=\"target-libiberty \\\n \t\ttarget-libg++ \\\n \t\ttarget-libf2c \\\n \t\ttarget-libchill \\\n+\t\ttarget-libffi \\\n \t\ttarget-libjava \\\n \t\ttarget-zlib \\\n \t\ttarget-boehm-gc \\\n@@ -535,7 +536,7 @@ case \"${host}\" in\n     noconfigdirs=\"tcl expect dejagnu make texinfo bison patch flex byacc send-pr gprof uudecode dejagnu diff guile perl apache inet itcl tix db snavigator gnuserv gettext\"\n     ;;\n   i[3456]86-*-go32* | i[3456]86-*-msdosdjgpp*)\n-    noconfigdirs=\"tcl tk expect dejagnu make texinfo bison patch flex byacc send-pr uudecode dejagnu diff guile perl apache inet itcl tix db snavigator gnuserv gettext\"\n+    noconfigdirs=\"tcl tk expect dejagnu make texinfo bison patch flex byacc send-pr uudecode dejagnu diff guile perl apache inet itcl tix db snavigator gnuserv gettext libffi\"\n \t;;\n   i[3456]86-*-mingw32*)\n     # noconfigdirs=\"tcl tk expect dejagnu make texinfo bison patch flex byacc send-pr uudecode dejagnu diff guile perl apache inet itcl tix db snavigator gnuserv\"\n@@ -567,13 +568,13 @@ esac\n \n case \"${target}\" in\n   *-*-netware)\n-    noconfigdirs=\"$noconfigdirs target-libg++ ${libstdcxx_version} target-librx target-newlib target-libiberty target-libgloss\"\n+    noconfigdirs=\"$noconfigdirs target-libg++ ${libstdcxx_version} target-librx target-newlib target-libiberty target-libgloss target-libffi\"\n     ;;\n   *-*-rtems*)\n-    noconfigdirs=\"$noconfigdirs target-libgloss\"\n+    noconfigdirs=\"$noconfigdirs target-libgloss target-libffi\"\n     ;;\n   *-*-vxworks*)\n-    noconfigdirs=\"$noconfigdirs target-newlib target-libgloss\"\n+    noconfigdirs=\"$noconfigdirs target-newlib target-libgloss target-libffi\"\n     ;;\n   alpha*-dec-osf*)\n     # ld works, but does not support shared libraries.  emacs doesn't\n@@ -582,7 +583,7 @@ case \"${target}\" in\n     noconfigdirs=\"$noconfigdirs gas ld emacs fileutils target-newlib target-libgloss\"\n     ;;\n   alpha*-*-*vms*)\n-    noconfigdirs=\"$noconfigdirs gdb ld target-newlib target-libgloss\"\n+    noconfigdirs=\"$noconfigdirs gdb ld target-newlib target-libgloss target-libffi\"\n     ;;\n   alpha*-*-linux*)\n     # newlib is not 64 bit ready\n@@ -595,7 +596,7 @@ case \"${target}\" in\n     noconfigdirs=\"$noconfigdirs target-newlib target-libgloss\"\n     ;;\n   arc-*-*)\n-    noconfigdirs=\"$noconfigdirs target-libgloss\"\n+    noconfigdirs=\"$noconfigdirs target-libgloss target-libffi\"\n     ;;\n   sh*-*-pe|mips*-*-pe|*arm-wince-pe)\n     noconfigdirs=\"$noconfigdirs target-libjava target-libffi target-zlib\"\n@@ -625,22 +626,22 @@ case \"${target}\" in\n     fi\n     ;;\n   arm-*-oabi*)\n-    noconfigdirs=\"$noconfigdirs target-libgloss\"\n+    noconfigdirs=\"$noconfigdirs target-libgloss target-libffi\"\n     if [ x${is_cross_compiler} != xno ] ; then\n            target_configdirs=\"${target_configdirs} target-bsp target-libstub target-cygmon\"\n     fi\n     ;;\n   c4x-*-*)\n-    noconfigdirs=\"$noconfigdirs target-libg++ ${libstdcxx_version}  target-librx target-libgloss\"\n+    noconfigdirs=\"$noconfigdirs target-libg++ ${libstdcxx_version} target-librx target-libgloss target-libffi\"\n     ;;\n   thumb-*-coff)\n-    noconfigdirs=\"$noconfigdirs target-libgloss\"\n+    noconfigdirs=\"$noconfigdirs target-libgloss target-libffi\"\n     ;;\n   arm-*-riscix*)\n-    noconfigdirs=\"$noconfigdirs ld target-libgloss\"\n+    noconfigdirs=\"$noconfigdirs ld target-libgloss target-libffi\"\n     ;;\n   d10v-*-*)\n-    noconfigdirs=\"$noconfigdirs target-librx target-libg++ ${libstdcxx_version} target-libgloss\"\n+    noconfigdirs=\"$noconfigdirs target-librx target-libg++ ${libstdcxx_version} target-libgloss target-libffi\"\n     ;;\n   fr30-*-elf*)\n     if [ x${is_cross_compiler} != xno ] ; then\n@@ -649,7 +650,7 @@ case \"${target}\" in\n     ;;\n   h8300*-*-* | \\\n   h8500-*-*)\n-    noconfigdirs=\"$noconfigdirs target-libg++ ${libstdcxx_version}  target-librx target-libgloss\"\n+    noconfigdirs=\"$noconfigdirs target-libg++ ${libstdcxx_version} target-librx target-libgloss target-libffi\"\n     ;;\n   hppa*-*-*elf* | \\\n   hppa*-*-lites*)\n@@ -663,19 +664,19 @@ case \"${target}\" in\n \t\"\" | cc*) noconfigdirs=\"$noconfigdirs emacs emacs19\" ;;\n         *) ;;\n     esac\n-    noconfigdirs=\"$noconfigdirs ld shellutils\"\n+    noconfigdirs=\"$noconfigdirs ld shellutils target-libffi\"\n     ;;\n   i[3456]86-*-go32* | i[3456]-*-msdosdjgpp*)\n     # but don't build gdb\n-    noconfigdirs=\"$noconfigdirs gdb target-libg++ ${libstdcxx_version} target-librx\"\n+    noconfigdirs=\"$noconfigdirs gdb target-libg++ ${libstdcxx_version} target-librx target-libffi\"\n     ;;\n   *-*-linux*)\n     # linux has rx in libc\n     skipdirs=\"$skipdirs target-librx\"\n     ;;\n   i[3456]86-*-mingw32*)\n     target_configdirs=\"$target_configdirs target-mingw\"\n-    noconfigdirs=\"$noconfigdirs expect target-libgloss\"\n+    noconfigdirs=\"$noconfigdirs expect target-libgloss target-libffi\"\n \n     # Can't build gdb for mingw32 if not native.\n     case \"${host}\" in\n@@ -686,7 +687,7 @@ case \"${target}\" in\n     ;;    \n   *-*-cygwin32*)\n     target_configdirs=\"$target_configdirs target-winsup\"\n-    noconfigdirs=\"$noconfigdirs target-gperf target-libgloss\"\n+    noconfigdirs=\"$noconfigdirs target-gperf target-libgloss target-libffi\"\n     # always build newlib.\n     skipdirs=`echo \" ${skipdirs} \" | sed -e 's/ target-newlib / /'`\n \n@@ -698,15 +699,15 @@ case \"${target}\" in\n     esac\n     ;;    \n   i[3456]86-*-pe)\n-    noconfigdirs=\"$noconfigdirs target-libg++ ${libstdcxx_version} target-librx target-libgloss\"\n+    noconfigdirs=\"$noconfigdirs target-libg++ ${libstdcxx_version} target-librx target-libgloss target-libffi\"\n     ;;\n   i[3456]86-*-sco3.2v5*)\n     # The linker does not yet know about weak symbols in COFF,\n     # and is not configured to handle mixed ELF and COFF.\n-    noconfigdirs=\"$noconfigdirs ld target-libgloss\"\n+    noconfigdirs=\"$noconfigdirs ld target-libgloss target-libffi\"\n     ;;\n   i[3456]86-*-sco*)\n-    noconfigdirs=\"$noconfigdirs gprof target-libgloss\"\n+    noconfigdirs=\"$noconfigdirs gprof target-libgloss target-libffi\"\n     ;;\n   i[3456]86-*-solaris2*)\n     # The linker does static linking correctly, but the Solaris C library\n@@ -721,19 +722,19 @@ case \"${target}\" in\n         *) ;;\n     esac\n     # but that's okay since emacs doesn't work anyway\n-    noconfigdirs=\"$noconfigdirs emacs emacs19 target-libgloss\"\n+    noconfigdirs=\"$noconfigdirs emacs emacs19 target-libgloss target-libffi\"\n     ;;\n   i[3456]86-*-beos*)\n      noconfigdirs=\"$noconfigdirs gdb target-newlib target-libgloss\"\n      ;;\n   mn10200-*-*)\n-    noconfigdirs=\"$noconfigdirs\"\n+    noconfigdirs=\"$noconfigdirs target-libffi\"\n     if [ x${is_cross_compiler} != xno ] ; then\n \t   target_configdirs=\"${target_configdirs} target-libstub target-cygmon\"\n     fi\n     ;;\n   mn10300-*-*)\n-    noconfigdirs=\"$noconfigdirs\"\n+    noconfigdirs=\"$noconfigdirs target-libffi\"\n     if [ x${is_cross_compiler} != xno ] ; then\n \t   target_configdirs=\"${target_configdirs} target-libstub target-cygmon\"\n     fi\n@@ -744,40 +745,40 @@ case \"${target}\" in\n     # GNU ld is known to be broken for AIX 4.2 and 4.3 (at least)\n     # The symptom is that GDBtk 4.18 fails at startup with a segfault\n     # if linked by GNU ld, but not if linked by the native ld.\n-    noconfigdirs=\"$noconfigdirs gprof cvssrc target-libgloss ld\"\n+    noconfigdirs=\"$noconfigdirs gprof cvssrc target-libgloss target-libffi ld\"\n     use_gnu_ld=no\n     ;;\n   powerpc*-*-winnt* | powerpc*-*-pe* | ppc*-*-pe)\n     target_configdirs=\"$target_configdirs target-winsup\"\n-    noconfigdirs=\"$noconfigdirs gdb tcl tk make expect target-libgloss itcl tix db snavigator gnuserv\"\n+    noconfigdirs=\"$noconfigdirs gdb tcl tk make expect target-libgloss itcl tix db snavigator gnuserv target-libffi\"\n     # always build newlib.\n     skipdirs=`echo \" ${skipdirs} \" | sed -e 's/ target-newlib / /'`\n     ;;\n     # This is temporary until we can link against shared libraries\n   powerpcle-*-solaris*)\n-    noconfigdirs=\"$noconfigdirs gdb sim make tcl tk expect itcl tix db snavigator gnuserv\"\n+    noconfigdirs=\"$noconfigdirs gdb sim make tcl tk expect itcl tix db snavigator gnuserv target-libffi\"\n     ;;\n   powerpc-*-beos*)\n     noconfigdirs=\"$noconfigdirs gdb target-newlib target-libgloss\"\n     ;;\n   rs6000-*-lynxos*)\n     # The CVS server code doesn't work on the RS/6000\n     # Newlib makes problems for libg++ in crosses.\n-    noconfigdirs=\"$noconfigdirs target-newlib gprof cvssrc\"\n+    noconfigdirs=\"$noconfigdirs target-newlib gprof cvssrc target-libffi\"\n     ;;\n   rs6000-*-aix*)\n     # The configure and build of ld are currently disabled because\n     # GNU ld is known to be broken for AIX 4.2 and 4.3 (at least)\n     # The symptom is that GDBtk 4.18 fails at startup with a segfault\n     # if linked by GNU ld, but not if linked by the native ld.\n-    noconfigdirs=\"$noconfigdirs gprof ld\"\n+    noconfigdirs=\"$noconfigdirs gprof target-libffi ld\"\n     use_gnu_ld=no\n     ;;\n   rs6000-*-*)\n-    noconfigdirs=\"$noconfigdirs gprof\"\n+    noconfigdirs=\"$noconfigdirs gprof target-libffi\"\n     ;;\n   m68k-apollo-*)\n-    noconfigdirs=\"$noconfigdirs ld binutils gprof target-libgloss\"\n+    noconfigdirs=\"$noconfigdirs ld binutils gprof target-libgloss target-libffi\"\n     ;;\n   mips*-*-irix5*)\n     # The GNU linker does not support shared libraries.\n@@ -790,20 +791,20 @@ case \"${target}\" in\n     noconfigdirs=\"$noconfigdirs ld gas gprof emacs target-libgloss\"\n     ;;\n   mips*-dec-bsd*)\n-    noconfigdirs=\"$noconfigdirs gprof target-libgloss\"\n+    noconfigdirs=\"$noconfigdirs gprof target-libgloss target-libffi\"\n     ;;\n   mips*-*-bsd*)\n-    noconfigdirs=\"$noconfigdirs gprof target-libgloss\"\n+    noconfigdirs=\"$noconfigdirs gprof target-libgloss target-libffi\"\n     ;;\n   mipstx39-*-*)\n-    noconfigdirs=\"$noconfigdirs gprof\"   # same as generic mips\n+    noconfigdirs=\"$noconfigdirs gprof target-libffi\"   # same as generic mips\n     target_configdirs=\"${target_configdirs} target-libstub target-cygmon\"\n    ;;\n   mips*-*-*)\n-    noconfigdirs=\"$noconfigdirs gprof\"\n+    noconfigdirs=\"$noconfigdirs gprof target-libffi\"\n     ;;\n   romp-*-*)\n-    noconfigdirs=\"$noconfigdirs bfd binutils ld gas opcodes target-libgloss\"\n+    noconfigdirs=\"$noconfigdirs bfd binutils ld gas opcodes target-libgloss target-libffi\"\n     ;;\n   sh-*-*)\n     case \"${host}\" in\n@@ -812,7 +813,7 @@ case \"${target}\" in\n       i[3456]86-*-msdosdjgpp*) ;; # don't add gprof back in\n       *) skipdirs=`echo \" ${skipdirs} \" | sed -e 's/ gprof / /'` ;;\n     esac\n-    noconfigdirs=\"$noconfigdirs target-libgloss\"\n+    noconfigdirs=\"$noconfigdirs target-libgloss target-libffi\"\n     ;;\n   sparc-*-elf*)\n     if [ x${is_cross_compiler} != xno ] ; then\n@@ -822,11 +823,13 @@ case \"${target}\" in\n   sparc64-*-elf*)\n     if [ x${is_cross_compiler} != xno ] ; then\n \t   target_configdirs=\"${target_configdirs} target-libstub target-cygmon\"\n+    noconfigdirs=\"target-libffi\"\n     fi\n     ;;\n   sparclite-*-aout*)\n     if [ x${is_cross_compiler} != xno ] ; then\n \t   target_configdirs=\"${target_configdirs} target-libstub target-cygmon\"\n+    noconfigdirs=\"target-libffi\"\n     fi\n     ;;\n   sparc-*-sunos4*)\n@@ -837,25 +840,26 @@ case \"${target}\" in\n     fi\n     ;;\n   v810-*-*)\n-    noconfigdirs=\"$noconfigdirs bfd binutils gas gcc gdb ld ${libstdcxx_version} target-libg++ opcodes target-libgloss\"\n+    noconfigdirs=\"$noconfigdirs bfd binutils gas gcc gdb ld ${libstdcxx_version} target-libg++ opcodes target-libgloss target-libffi\"\n     ;;\n   v850-*-*)\n-    noconfigdirs=\"$noconfigdirs target-libgloss\"\n+    noconfigdirs=\"$noconfigdirs target-libgloss target-libffi\"\n     ;;\n   vax-*-vms)\n-    noconfigdirs=\"$noconfigdirs bfd binutils gdb ld target-newlib opcodes target-libgloss\"\n+    noconfigdirs=\"$noconfigdirs bfd binutils gdb ld target-newlib opcodes target-libgloss target-libffi\"\n     ;;\n   vax-*-*)\n-    noconfigdirs=\"$noconfigdirs target-newlib target-libgloss\"\n+    noconfigdirs=\"$noconfigdirs target-newlib target-libgloss target-libffi\"\n     ;;\n   *-*-lynxos*)\n     # Newlib makes problems for libg++ in crosses.\n-    noconfigdirs=\"$noconfigdirs target-newlib target-libgloss\"\n+    noconfigdirs=\"$noconfigdirs target-newlib target-libgloss target-libffi\"\n     ;; \n   *-*-macos* | \\\n   *-*-mpw*)\n     # Macs want a resource compiler.\n     configdirs=\"$configdirs grez\"\n+    noconfigdirs=\"target-libffi\"\n     ;;    \n esac\n "}]}