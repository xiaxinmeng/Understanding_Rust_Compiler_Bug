{"sha": "a5f105b59031f43cc15e2a44293a7631dfea4253", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTVmMTA1YjU5MDMxZjQzY2MxNWUyYTQ0MjkzYTc2MzFkZmVhNDI1Mw==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2004-03-27T16:21:21Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2004-03-27T16:21:21Z"}, "message": "[multiple changes]\n\n\n2004-03-27  Benjamin Kosnik  <bkoz@redhat.com>\n\n\tlibstdc++ PR/13598\n\t* config/locale/ieee_1003.1-2001/codecvt_specializations.h\n\t(__enc_traits::_M_destroy): New.\n\t(__enc_traits::~__enc_traits): Use it.\n\t(__enc_traits::operator=): Use _M_destroy, _M_init.\n\t(__enc_traits::__enc_traits): Same.\n\n2004-03-27  Petur Runolfsson  <peturr02@ru.is>\n\n\t* testsuite/ext/enc_filebuf/char/13598.cc: New.\n\nFrom-SVN: r80027", "tree": {"sha": "13503acaa4f6fbf5791b17b4ed6108e955151b1d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/13503acaa4f6fbf5791b17b4ed6108e955151b1d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a5f105b59031f43cc15e2a44293a7631dfea4253", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5f105b59031f43cc15e2a44293a7631dfea4253", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5f105b59031f43cc15e2a44293a7631dfea4253", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5f105b59031f43cc15e2a44293a7631dfea4253/comments", "author": null, "committer": null, "parents": [{"sha": "84c1fa24b1cb78ca71c2f5a490f93f266073e9bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84c1fa24b1cb78ca71c2f5a490f93f266073e9bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/84c1fa24b1cb78ca71c2f5a490f93f266073e9bc"}], "stats": {"total": 98, "additions": 87, "deletions": 11}, "files": [{"sha": "1756701c5aae01e7f620fd1cf278c089ef0185ff", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5f105b59031f43cc15e2a44293a7631dfea4253/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5f105b59031f43cc15e2a44293a7631dfea4253/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=a5f105b59031f43cc15e2a44293a7631dfea4253", "patch": "@@ -1,3 +1,16 @@\n+2004-03-27  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\tlibstdc++ PR/13598\n+\t* config/locale/ieee_1003.1-2001/codecvt_specializations.h\n+\t(__enc_traits::_M_destroy): New.\n+\t(__enc_traits::~__enc_traits): Use it.\n+\t(__enc_traits::operator=): Use _M_destroy, _M_init.\n+\t(__enc_traits::__enc_traits): Same.\n+\n+2004-03-27  Petur Runolfsson  <peturr02@ru.is>\n+\n+\t* testsuite/ext/enc_filebuf/char/13598.cc: New.\n+\n 2004-03-27  Paolo Carlini  <pcarlini@suse.de>\n \n \t* include/ext/mt_allocator.h: Uglify consistently names of"}, {"sha": "ef0923deb49c328dff8d4acf57b13321a9bc5c54", "filename": "libstdc++-v3/config/locale/ieee_1003.1-2001/codecvt_specializations.h", "status": "modified", "additions": 27, "deletions": 11, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5f105b59031f43cc15e2a44293a7631dfea4253/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fieee_1003.1-2001%2Fcodecvt_specializations.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5f105b59031f43cc15e2a44293a7631dfea4253/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fieee_1003.1-2001%2Fcodecvt_specializations.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fieee_1003.1-2001%2Fcodecvt_specializations.h?ref=a5f105b59031f43cc15e2a44293a7631dfea4253", "patch": "@@ -1,6 +1,6 @@\n // Locale support (codecvt) -*- C++ -*-\n \n-// Copyright (C) 2000, 2001, 2002, 2003 Free Software Foundation, Inc.\n+// Copyright (C) 2000, 2001, 2002, 2003, 2004 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -85,19 +85,25 @@\n     {\n       strncpy(_M_int_enc, __int, _S_max_size);\n       strncpy(_M_ext_enc, __ext, _S_max_size);\n+      _M_init();\n     }\n \n     // 21.1.2 traits typedefs\n     // p4\n     // typedef STATE_T state_type\n     // requires: state_type shall meet the requirements of\n     // CopyConstructible types (20.1.3)\n+    // NB: This does not preseve the actual state of the conversion\n+    // descriptor member, but it does duplicate the encoding\n+    // information.\n     __enc_traits(const __enc_traits& __obj): _M_in_desc(0), _M_out_desc(0)\n     {\n       strncpy(_M_int_enc, __obj._M_int_enc, _S_max_size);\n       strncpy(_M_ext_enc, __obj._M_ext_enc, _S_max_size);\n       _M_ext_bom = __obj._M_ext_bom;\n       _M_int_bom = __obj._M_int_bom;\n+      _M_destroy();\n+      _M_init();\n     }\n \n     // Need assignment operator as well.\n@@ -106,21 +112,15 @@\n     {\n       strncpy(_M_int_enc, __obj._M_int_enc, _S_max_size);\n       strncpy(_M_ext_enc, __obj._M_ext_enc, _S_max_size);\n-      _M_in_desc = 0;\n-      _M_out_desc = 0;\n       _M_ext_bom = __obj._M_ext_bom;\n       _M_int_bom = __obj._M_int_bom;\n+      _M_destroy();\n+      _M_init();\n       return *this;\n     }\n \n     ~__enc_traits()\n-    {\n-      __desc_type __err = reinterpret_cast<iconv_t>(-1);\n-      if (_M_in_desc && _M_in_desc != __err) \n-\ticonv_close(_M_in_desc);\n-      if (_M_out_desc && _M_out_desc != __err) \n-\ticonv_close(_M_out_desc);\n-    } \n+    { _M_destroy(); } \n \n     void\n     _M_init()\n@@ -142,6 +142,22 @@\n \t}\n     }\n \n+    void\n+    _M_destroy()\n+    {\n+      const __desc_type __err = reinterpret_cast<iconv_t>(-1);\n+      if (_M_in_desc && _M_in_desc != __err) \n+\t{\n+\t  iconv_close(_M_in_desc);\n+\t  _M_in_desc = 0;\n+\t}\n+      if (_M_out_desc && _M_out_desc != __err) \n+\t{\n+\t  iconv_close(_M_out_desc);\n+\t  _M_out_desc = 0;\n+\t}\n+    }\n+\n     bool\n     _M_good()\n     { \n@@ -173,7 +189,7 @@\n \n     const char* \n     _M_get_external_enc()\n-    { return _M_ext_enc; }\n+    { return _M_ext_enc; }    \n   };\n \n   // Partial specialization"}, {"sha": "a9270e145bbe00acc3db3424389b115f4d7170ea", "filename": "libstdc++-v3/testsuite/ext/enc_filebuf/char/13598.cc", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5f105b59031f43cc15e2a44293a7631dfea4253/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fenc_filebuf%2Fchar%2F13598.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5f105b59031f43cc15e2a44293a7631dfea4253/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fenc_filebuf%2Fchar%2F13598.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fenc_filebuf%2Fchar%2F13598.cc?ref=a5f105b59031f43cc15e2a44293a7631dfea4253", "patch": "@@ -0,0 +1,47 @@\n+// Copyright (C) 2004 Free Software Foundation\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+#include <locale>\n+#include <cstring>\n+#include <cassert>\n+#ifdef _GLIBCXX_USE___ENC_TRAITS\n+#include <ext/enc_filebuf.h>\n+#endif\n+\n+int main()\n+{\n+#ifdef _GLIBCXX_USE___ENC_TRAITS\n+  const char* str = \"Hello, world!\\n\";\n+\n+  std::locale loc(std::locale::classic(),\n+\t\t  new std::codecvt<char, char, std::__enc_traits>());\n+  std::__enc_traits st(\"ISO-8859-1\", \"ISO-8859-1\");\n+  __gnu_cxx::enc_filebuf<char> fb(st);\n+  fb.pubimbue(loc);\n+\n+  fb.open(\"tmp_13598\", std::ios_base::out);\n+  std::streamsize n = fb.sputn(str, std::strlen(str));\n+  int s = fb.pubsync();\n+  fb.close();\n+  \n+  assert(n == std::strlen(str));\n+  assert(s == 0);\n+#endif\n+  \n+  return 0;\n+}"}]}