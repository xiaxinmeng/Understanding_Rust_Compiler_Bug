{"sha": "b851ee9fdf0f3023635f0cb1f7c607b2d6801053", "node_id": "C_kwDOANBUbNoAKGI4NTFlZTlmZGYwZjMwMjM2MzVmMGNiMWY3YzYwN2IyZDY4MDEwNTM", "commit": {"author": {"name": "Siddhesh Poyarekar", "email": "siddhesh@gotplt.org", "date": "2023-01-25T00:47:05Z"}, "committer": {"name": "Siddhesh Poyarekar", "email": "siddhesh@gotplt.org", "date": "2023-01-25T00:47:05Z"}, "message": "tree-optimization/108522 Use COMPONENT_REF offset when available\n\nUse the offset in TREE_OPERAND(component_ref, 2) when available instead\nof DECL_FIELD_OFFSET when trying to compute offset for a COMPONENT_REF.\n\nCo-authored-by: Jakub Jelinek <jakub@redhat.com>\n\ngcc/ChangeLog:\n\n\tPR tree-optimization/108522\n\t* tree-object-size.cc (compute_object_offset): Use\n\tTREE_OPERAND(ref, 2) for COMPONENT_REF when available.\n\ngcc/testsuite/ChangeLog:\n\n\tPR tree-optimization/108522\n\t* gcc.dg/builtin-dynamic-object-size-0.c\n\t(test_dynarray_struct_member): New test.\n\t(main): Call it.\n\nSigned-off-by: Siddhesh Poyarekar <siddhesh@gotplt.org>", "tree": {"sha": "8e81c1f792baf54fb1043f359ef2ed679b41e58e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8e81c1f792baf54fb1043f359ef2ed679b41e58e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b851ee9fdf0f3023635f0cb1f7c607b2d6801053", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b851ee9fdf0f3023635f0cb1f7c607b2d6801053", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b851ee9fdf0f3023635f0cb1f7c607b2d6801053", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b851ee9fdf0f3023635f0cb1f7c607b2d6801053/comments", "author": {"login": "siddhesh", "id": 158582, "node_id": "MDQ6VXNlcjE1ODU4Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/158582?v=4", "gravatar_id": "", "url": "https://api.github.com/users/siddhesh", "html_url": "https://github.com/siddhesh", "followers_url": "https://api.github.com/users/siddhesh/followers", "following_url": "https://api.github.com/users/siddhesh/following{/other_user}", "gists_url": "https://api.github.com/users/siddhesh/gists{/gist_id}", "starred_url": "https://api.github.com/users/siddhesh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/siddhesh/subscriptions", "organizations_url": "https://api.github.com/users/siddhesh/orgs", "repos_url": "https://api.github.com/users/siddhesh/repos", "events_url": "https://api.github.com/users/siddhesh/events{/privacy}", "received_events_url": "https://api.github.com/users/siddhesh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "siddhesh", "id": 158582, "node_id": "MDQ6VXNlcjE1ODU4Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/158582?v=4", "gravatar_id": "", "url": "https://api.github.com/users/siddhesh", "html_url": "https://github.com/siddhesh", "followers_url": "https://api.github.com/users/siddhesh/followers", "following_url": "https://api.github.com/users/siddhesh/following{/other_user}", "gists_url": "https://api.github.com/users/siddhesh/gists{/gist_id}", "starred_url": "https://api.github.com/users/siddhesh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/siddhesh/subscriptions", "organizations_url": "https://api.github.com/users/siddhesh/orgs", "repos_url": "https://api.github.com/users/siddhesh/repos", "events_url": "https://api.github.com/users/siddhesh/events{/privacy}", "received_events_url": "https://api.github.com/users/siddhesh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0fa221685a36ef98cb20a6d435a150b5992e99e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0fa221685a36ef98cb20a6d435a150b5992e99e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0fa221685a36ef98cb20a6d435a150b5992e99e0"}], "stats": {"total": 20, "additions": 19, "deletions": 1}, "files": [{"sha": "569c0a87722865053090236f08984943431b1ee0", "filename": "gcc/testsuite/gcc.dg/builtin-dynamic-object-size-0.c", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b851ee9fdf0f3023635f0cb1f7c607b2d6801053/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltin-dynamic-object-size-0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b851ee9fdf0f3023635f0cb1f7c607b2d6801053/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltin-dynamic-object-size-0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltin-dynamic-object-size-0.c?ref=b851ee9fdf0f3023635f0cb1f7c607b2d6801053", "patch": "@@ -314,6 +314,20 @@ test_dynarray_struct_subobj2 (size_t sz, size_t off, size_t *objsz)\n   return __builtin_dynamic_object_size (&bin.c[off], 1);\n }\n \n+/* See pr #108522.  */\n+size_t\n+__attribute__ ((noinline))\n+test_dynarray_struct_member (size_t sz)\n+{\n+  struct\n+    {\n+      char a[sz];\n+      char b;\n+    } s;\n+\n+  return __builtin_dynamic_object_size (&s.b, 0);\n+}\n+\n size_t\n __attribute__ ((noinline))\n test_substring (size_t sz, size_t off)\n@@ -619,6 +633,8 @@ main (int argc, char **argv)\n   if (test_dynarray_struct_subobj2 (42, 4, &objsz)\n     != objsz - 4 - sizeof (long) - sizeof (int))\n     FAIL ();\n+  if (test_dynarray_struct_member (42) != sizeof (char))\n+    FAIL ();\n   if (test_substring_ptrplus (128, 4) != (128 - 4) * sizeof (int))\n     FAIL ();\n   if (test_substring_ptrplus (128, 142) != 0)"}, {"sha": "de93ffad9c9eed033af84533dc9083a6da850ae5", "filename": "gcc/tree-object-size.cc", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b851ee9fdf0f3023635f0cb1f7c607b2d6801053/gcc%2Ftree-object-size.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b851ee9fdf0f3023635f0cb1f7c607b2d6801053/gcc%2Ftree-object-size.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-object-size.cc?ref=b851ee9fdf0f3023635f0cb1f7c607b2d6801053", "patch": "@@ -412,7 +412,9 @@ compute_object_offset (const_tree expr, const_tree var)\n \treturn base;\n \n       t = TREE_OPERAND (expr, 1);\n-      off = size_binop (PLUS_EXPR, DECL_FIELD_OFFSET (t),\n+      off = size_binop (PLUS_EXPR,\n+\t\t\t(TREE_OPERAND (expr, 2) ? TREE_OPERAND (expr, 2)\n+\t\t\t : DECL_FIELD_OFFSET (t)),\n \t\t\tsize_int (tree_to_uhwi (DECL_FIELD_BIT_OFFSET (t))\n \t\t\t\t  / BITS_PER_UNIT));\n       break;"}]}