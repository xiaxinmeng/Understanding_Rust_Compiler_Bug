{"sha": "d844478ab47a16c8ae65f253fd1cdc685c7951fc", "node_id": "C_kwDOANBUbNoAKGQ4NDQ0NzhhYjQ3YTE2YzhhZTY1ZjI1M2ZkMWNkYzY4NWM3OTUxZmM", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2022-06-22T14:51:44Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2022-06-22T15:21:03Z"}, "message": "c++: Remove ifdefed code\n\nThe only reason I chose to use DECL_UID on this hash table was to make\nit stable against ASLR and perturbations due to other allocations.\nIt's not required for correctness, as the comment mentions the\nequality fn uses pointer identity.\n\n\tgcc/cp/\n\t* module.cc (struct duplicate_hash): Remove.\n\t(duplicate_hash_map): Adjust.", "tree": {"sha": "0096f3e7a735084d5d13158d635eca98f05ddd9c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0096f3e7a735084d5d13158d635eca98f05ddd9c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d844478ab47a16c8ae65f253fd1cdc685c7951fc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d844478ab47a16c8ae65f253fd1cdc685c7951fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d844478ab47a16c8ae65f253fd1cdc685c7951fc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d844478ab47a16c8ae65f253fd1cdc685c7951fc/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d68d366425369649cb4e25a07752e25a4fff52cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d68d366425369649cb4e25a07752e25a4fff52cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d68d366425369649cb4e25a07752e25a4fff52cf"}], "stats": {"total": 16, "additions": 1, "deletions": 15}, "files": [{"sha": "d735d7e8b30374490c6f219f1dbd3ee16e371f83", "filename": "gcc/cp/module.cc", "status": "modified", "additions": 1, "deletions": 15, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d844478ab47a16c8ae65f253fd1cdc685c7951fc/gcc%2Fcp%2Fmodule.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d844478ab47a16c8ae65f253fd1cdc685c7951fc/gcc%2Fcp%2Fmodule.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmodule.cc?ref=d844478ab47a16c8ae65f253fd1cdc685c7951fc", "patch": "@@ -2829,24 +2829,10 @@ struct merge_key {\n   }\n };\n \n-struct duplicate_hash : nodel_ptr_hash<tree_node>\n-{\n-#if 0\n-  /* This breaks variadic bases in the xtreme_header tests.  Since ::equal is\n-     the default pointer_hash::equal, let's use the default hash as well.  */\n-  inline static hashval_t hash (value_type decl)\n-  {\n-    if (TREE_CODE (decl) == TREE_BINFO)\n-      decl = TYPE_NAME (BINFO_TYPE (decl));\n-    return hashval_t (DECL_UID (decl));\n-  }\n-#endif\n-};\n-\n /* Hashmap of merged duplicates.  Usually decls, but can contain\n    BINFOs.  */\n typedef hash_map<tree,uintptr_t,\n-\t\t simple_hashmap_traits<duplicate_hash,uintptr_t> >\n+\t\t simple_hashmap_traits<nodel_ptr_hash<tree_node>,uintptr_t> >\n duplicate_hash_map;\n \n /* Tree stream reader.  Note that reading a stream doesn't mark the"}]}