{"sha": "1765b0231029c0479ddcf5d54e8f4882c5feda94", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTc2NWIwMjMxMDI5YzA0NzlkZGNmNWQ1NGU4ZjQ4ODJjNWZlZGE5NA==", "commit": {"author": {"name": "Rasmus Villemoes", "email": "rv@rasmusvillemoes.dk", "date": "2018-06-27T10:04:25Z"}, "committer": {"name": "Rasmus Villemoes", "email": "villemoes@gcc.gnu.org", "date": "2018-06-27T10:04:25Z"}, "message": "add support for --disable-gcov\n\nFor some targets (in my case VxWorks 5.5), libgcov does not compile due\nto missing functions and macros such as getpid() and F_OK.\n\nIncidentally, gcc/Makefile.in already contains comments such as\n\n# Install gcov if it was compiled.\n\nbut there is no logic in place to actually allow gcov to not be\ncompiled.\n\nSo add an option for disabling build and install of libgcov and the\nrelated host tools.\n\nFrom-SVN: r262180", "tree": {"sha": "12e1333e335da0d5357ee4418e40356b5c9ab765", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/12e1333e335da0d5357ee4418e40356b5c9ab765"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1765b0231029c0479ddcf5d54e8f4882c5feda94", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1765b0231029c0479ddcf5d54e8f4882c5feda94", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1765b0231029c0479ddcf5d54e8f4882c5feda94", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1765b0231029c0479ddcf5d54e8f4882c5feda94/comments", "author": {"login": "Villemoes", "id": 4375908, "node_id": "MDQ6VXNlcjQzNzU5MDg=", "avatar_url": "https://avatars.githubusercontent.com/u/4375908?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Villemoes", "html_url": "https://github.com/Villemoes", "followers_url": "https://api.github.com/users/Villemoes/followers", "following_url": "https://api.github.com/users/Villemoes/following{/other_user}", "gists_url": "https://api.github.com/users/Villemoes/gists{/gist_id}", "starred_url": "https://api.github.com/users/Villemoes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Villemoes/subscriptions", "organizations_url": "https://api.github.com/users/Villemoes/orgs", "repos_url": "https://api.github.com/users/Villemoes/repos", "events_url": "https://api.github.com/users/Villemoes/events{/privacy}", "received_events_url": "https://api.github.com/users/Villemoes/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ed4e2a178609194673c81a038034e16832a0a9be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed4e2a178609194673c81a038034e16832a0a9be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed4e2a178609194673c81a038034e16832a0a9be"}], "stats": {"total": 69, "additions": 64, "deletions": 5}, "files": [{"sha": "3604fd87e870d98eb110e181b296a0baaf4b9adf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1765b0231029c0479ddcf5d54e8f4882c5feda94/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1765b0231029c0479ddcf5d54e8f4882c5feda94/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1765b0231029c0479ddcf5d54e8f4882c5feda94", "patch": "@@ -1,3 +1,10 @@\n+2018-06-27  Rasmus Villemoes  <rv@rasmusvillemoes.dk>\n+\n+\t* configure.ac: Add --disable-gcov option.\n+\t* configure: Regenerate.\n+\t* Makefile.in: Honour @enable_gcov@.\n+\t* doc/install.texi: Document --disable-gcov.\n+\n 2018-06-27  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* config/arm/arm-cpus.in (cortex-a76): New entry."}, {"sha": "1f38cacde7a16da62f129b068f97213d396db0b3", "filename": "gcc/Makefile.in", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1765b0231029c0479ddcf5d54e8f4882c5feda94/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1765b0231029c0479ddcf5d54e8f4882c5feda94/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=1765b0231029c0479ddcf5d54e8f4882c5feda94", "patch": "@@ -137,8 +137,10 @@ SUBDIRS =@subdirs@ build\n \n # Selection of languages to be made.\n CONFIG_LANGUAGES = @all_selected_languages@\n-LANGUAGES = c gcov$(exeext) gcov-dump$(exeext) gcov-tool$(exeext) \\\n-            $(CONFIG_LANGUAGES)\n+LANGUAGES = c $(CONFIG_LANGUAGES)\n+ifeq (@enable_gcov@,yes)\n+LANGUAGES += gcov$(exeext) gcov-dump$(exeext) gcov-tool$(exeext)\n+endif\n \n # Default values for variables overridden in Makefile fragments.\n # CFLAGS is for the user to override to, e.g., do a cross build with -O2."}, {"sha": "bfef4be37826df9a00610df07559a13d002a1bef", "filename": "gcc/configure", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1765b0231029c0479ddcf5d54e8f4882c5feda94/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1765b0231029c0479ddcf5d54e8f4882c5feda94/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=1765b0231029c0479ddcf5d54e8f4882c5feda94", "patch": "@@ -779,6 +779,7 @@ REPORT_BUGS_TEXI\n REPORT_BUGS_TO\n PKGVERSION\n CONFIGURE_SPECS\n+enable_gcov\n enable_shared\n enable_fixed_point\n enable_decimal_float\n@@ -914,6 +915,7 @@ enable_vtable_verify\n enable_objc_gc\n with_dwarf2\n enable_shared\n+enable_gcov\n with_specs\n with_pkgversion\n with_bugurl\n@@ -1634,6 +1636,7 @@ Optional Features:\n   --enable-objc-gc        enable the use of Boehm's garbage collector with the\n                           GNU Objective-C runtime\n   --disable-shared        don't provide a shared libgcc\n+  --disable-gcov          don't provide libgcov and related host tools\n   --enable-languages=LIST specify which front-ends to build\n   --disable-rpath         do not hardcode runtime library paths\n   --enable-sjlj-exceptions\n@@ -7628,6 +7631,15 @@ fi\n \n \n \n+# Check whether --enable-gcov was given.\n+if test \"${enable_gcov+set}\" = set; then :\n+  enableval=$enable_gcov;\n+else\n+  enable_gcov=yes\n+fi\n+\n+\n+\n \n # Check whether --with-specs was given.\n if test \"${with_specs+set}\" = set; then :\n@@ -18448,7 +18460,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 18451 \"configure\"\n+#line 18463 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -18554,7 +18566,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 18557 \"configure\"\n+#line 18569 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"}, {"sha": "4fc851c644edc00f58fea69f92dbc2e9d9e54a08", "filename": "gcc/configure.ac", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1765b0231029c0479ddcf5d54e8f4882c5feda94/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1765b0231029c0479ddcf5d54e8f4882c5feda94/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=1765b0231029c0479ddcf5d54e8f4882c5feda94", "patch": "@@ -921,6 +921,11 @@ AC_ARG_ENABLE(shared,\n ], [enable_shared=yes])\n AC_SUBST(enable_shared)\n \n+AC_ARG_ENABLE(gcov,\n+[  --disable-gcov          don't provide libgcov and related host tools],\n+[], [enable_gcov=yes])\n+AC_SUBST(enable_gcov)\n+\n AC_ARG_WITH(specs,\n   [AS_HELP_STRING([--with-specs=SPECS],\n                   [add SPECS to driver command-line processing])],"}, {"sha": "03eaeed4e871f725bfd99aa0f943ac77b44c0806", "filename": "gcc/doc/install.texi", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1765b0231029c0479ddcf5d54e8f4882c5feda94/gcc%2Fdoc%2Finstall.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1765b0231029c0479ddcf5d54e8f4882c5feda94/gcc%2Fdoc%2Finstall.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finstall.texi?ref=1765b0231029c0479ddcf5d54e8f4882c5feda94", "patch": "@@ -1044,6 +1044,10 @@ virtual calls in verifiable mode at all.  However the libvtv library will\n still be built (see @option{--disable-libvtv} to turn off building libvtv).\n @option{--disable-vtable-verify} is the default.\n \n+@item --disable-gcov\n+Specify that the run-time library used for coverage analysis\n+and associated host tools should not be built.\n+\n @item --disable-multilib\n Specify that multiple target\n libraries to support different target variants, calling"}, {"sha": "cef65b5321ef40a0cbae1a12ba1f60f59623292e", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1765b0231029c0479ddcf5d54e8f4882c5feda94/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1765b0231029c0479ddcf5d54e8f4882c5feda94/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=1765b0231029c0479ddcf5d54e8f4882c5feda94", "patch": "@@ -1,3 +1,9 @@\n+2018-06-27  Rasmus Villemoes  <rv@rasmusvillemoes.dk>\n+\n+\t* configure.ac: Add --disable-gcov option.\n+\t* configure: Regenerate.\n+\t* Makefile.in: Honour @enable_gcov@.\n+\n 2018-06-21  Christophe Lyon  <christophe.lyon@linaro.org>\n \n \t* config/arm/lib1funcs.S (__ARM_ARCH__): Remove definitions, use"}, {"sha": "b7f20557214f62e21a4c6c078c295439bb4e0ab9", "filename": "libgcc/Makefile.in", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1765b0231029c0479ddcf5d54e8f4882c5feda94/libgcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1765b0231029c0479ddcf5d54e8f4882c5feda94/libgcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FMakefile.in?ref=1765b0231029c0479ddcf5d54e8f4882c5feda94", "patch": "@@ -36,6 +36,7 @@ SHELL = @SHELL@\n \n cpu_type = @cpu_type@\n enable_shared = @enable_shared@\n+enable_gcov = @enable_gcov@\n double_type_size = @double_type_size@\n long_double_type_size = @long_double_type_size@\n decimal_float = @decimal_float@\n@@ -941,7 +942,10 @@ libgcc.a libgcov.a libunwind.a libgcc_eh.a:\n \n \t$(RANLIB) $@\n \n-all: libgcc.a libgcov.a\n+all: libgcc.a\n+ifeq ($(enable_gcov),yes)\n+all: libgcov.a\n+endif\n \n ifneq ($(LIBUNWIND),)\n all: libunwind.a\n@@ -1164,9 +1168,11 @@ install-leaf: $(install-shared) $(install-libunwind)\n \t$(INSTALL_DATA) libgcc.a $(DESTDIR)$(inst_libdir)/\n \tchmod 644 $(DESTDIR)$(inst_libdir)/libgcc.a\n \t$(RANLIB) $(DESTDIR)$(inst_libdir)/libgcc.a\n+ifeq ($(enable_libgcov),yes)\n \t$(INSTALL_DATA) libgcov.a $(DESTDIR)$(inst_libdir)/\n \tchmod 644 $(DESTDIR)$(inst_libdir)/libgcov.a\n \t$(RANLIB) $(DESTDIR)$(inst_libdir)/libgcov.a\n+endif\n \n \tparts=\"$(INSTALL_PARTS)\";\t\t\t\t\\\n \tfor file in $$parts; do\t\t\t\t\t\\"}, {"sha": "79068536175f23017b2de4dc1c1fbd44628c3696", "filename": "libgcc/configure", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1765b0231029c0479ddcf5d54e8f4882c5feda94/libgcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1765b0231029c0479ddcf5d54e8f4882c5feda94/libgcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfigure?ref=1765b0231029c0479ddcf5d54e8f4882c5feda94", "patch": "@@ -620,6 +620,7 @@ build_cpu\n build\n with_aix_soname\n enable_vtable_verify\n+enable_gcov\n enable_shared\n libgcc_topdir\n target_alias\n@@ -667,6 +668,7 @@ with_target_subdir\n with_cross_host\n with_ld\n enable_shared\n+enable_gcov\n enable_vtable_verify\n with_aix_soname\n enable_version_specific_runtime_libs\n@@ -1306,6 +1308,7 @@ Optional Features:\n   --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)\n   --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]\n   --disable-shared        don't provide a shared libgcc\n+  --disable-gcov          don't provide libgcov and related host tools\n   --enable-vtable-verify    Enable vtable verification feature\n   --enable-version-specific-runtime-libs    Specify that runtime libraries should be installed in a compiler-specific directory\n   --enable-maintainer-mode\n@@ -2199,6 +2202,15 @@ fi\n \n \n \n+# Check whether --enable-gcov was given.\n+if test \"${enable_gcov+set}\" = set; then :\n+  enableval=$enable_gcov;\n+else\n+  enable_gcov=yes\n+fi\n+\n+\n+\n # Check whether --enable-vtable-verify was given.\n if test \"${enable_vtable_verify+set}\" = set; then :\n   enableval=$enable_vtable_verify; case \"$enableval\" in"}, {"sha": "9d0bbcaba8650d4190f383ca2a73bd8361bf6e19", "filename": "libgcc/configure.ac", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1765b0231029c0479ddcf5d54e8f4882c5feda94/libgcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1765b0231029c0479ddcf5d54e8f4882c5feda94/libgcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfigure.ac?ref=1765b0231029c0479ddcf5d54e8f4882c5feda94", "patch": "@@ -68,6 +68,11 @@ AC_ARG_ENABLE(shared,\n ], [enable_shared=yes])\n AC_SUBST(enable_shared)\n \n+AC_ARG_ENABLE(gcov,\n+[  --disable-gcov          don't provide libgcov and related host tools],\n+[], [enable_gcov=yes])\n+AC_SUBST(enable_gcov)\n+\n AC_ARG_ENABLE(vtable-verify,\n [  --enable-vtable-verify    Enable vtable verification feature ],\n [case \"$enableval\" in"}]}