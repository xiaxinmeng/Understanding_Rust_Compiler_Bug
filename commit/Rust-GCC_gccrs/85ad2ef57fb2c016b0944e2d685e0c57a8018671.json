{"sha": "85ad2ef57fb2c016b0944e2d685e0c57a8018671", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODVhZDJlZjU3ZmIyYzAxNmIwOTQ0ZTJkNjg1ZTBjNTdhODAxODY3MQ==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2011-04-28T22:49:46Z"}, "committer": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2011-04-28T22:49:46Z"}, "message": "cgraphunit.c (cgraph_preserve_function_body_p): Accept a cgraph node instead of a decl.\n\n2011-04-29  Martin Jambor  <mjambor@suse.cz>\n\n\t* cgraphunit.c (cgraph_preserve_function_body_p): Accept a cgraph\n\tnode instead of a decl.  Update all callers.\n\t* cgraph.h: Update declaration.\n\nFrom-SVN: r173138", "tree": {"sha": "26c22ad7602a23bc16258ff654830655fd733322", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/26c22ad7602a23bc16258ff654830655fd733322"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/85ad2ef57fb2c016b0944e2d685e0c57a8018671", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85ad2ef57fb2c016b0944e2d685e0c57a8018671", "html_url": "https://github.com/Rust-GCC/gccrs/commit/85ad2ef57fb2c016b0944e2d685e0c57a8018671", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85ad2ef57fb2c016b0944e2d685e0c57a8018671/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "74c810bdd01ab0b60037927982a4cee6c2c86416", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74c810bdd01ab0b60037927982a4cee6c2c86416", "html_url": "https://github.com/Rust-GCC/gccrs/commit/74c810bdd01ab0b60037927982a4cee6c2c86416"}], "stats": {"total": 19, "additions": 12, "deletions": 7}, "files": [{"sha": "204cd0b203743349439dd7295f1d58b028729aec", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ad2ef57fb2c016b0944e2d685e0c57a8018671/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ad2ef57fb2c016b0944e2d685e0c57a8018671/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=85ad2ef57fb2c016b0944e2d685e0c57a8018671", "patch": "@@ -1,3 +1,9 @@\n+2011-04-29  Martin Jambor  <mjambor@suse.cz>\n+\n+\t* cgraphunit.c (cgraph_preserve_function_body_p): Accept a cgraph\n+\tnode instead of a decl.  Update all callers.\n+\t* cgraph.h: Update declaration.\n+\n 2011-04-28  Ira Rosen  <ira.rosen@linaro.org>\n \n \tPR tree-optimization/48765"}, {"sha": "ec95ba7c430a445ed1f1e6ff331c668ab0400e5f", "filename": "gcc/cgraph.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ad2ef57fb2c016b0944e2d685e0c57a8018671/gcc%2Fcgraph.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ad2ef57fb2c016b0944e2d685e0c57a8018671/gcc%2Fcgraph.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.h?ref=85ad2ef57fb2c016b0944e2d685e0c57a8018671", "patch": "@@ -573,7 +573,7 @@ void cgraph_mark_needed_node (struct cgraph_node *);\n void cgraph_mark_address_taken_node (struct cgraph_node *);\n void cgraph_mark_reachable_node (struct cgraph_node *);\n bool cgraph_inline_p (struct cgraph_edge *, cgraph_inline_failed_t *reason);\n-bool cgraph_preserve_function_body_p (tree);\n+bool cgraph_preserve_function_body_p (struct cgraph_node *);\n void verify_cgraph (void);\n void verify_cgraph_node (struct cgraph_node *);\n void cgraph_build_static_cdtor (char which, tree body, int priority);"}, {"sha": "70b63b33b919f0e1a83ba07bb6a7efe504b409fa", "filename": "gcc/cgraphunit.c", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ad2ef57fb2c016b0944e2d685e0c57a8018671/gcc%2Fcgraphunit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ad2ef57fb2c016b0944e2d685e0c57a8018671/gcc%2Fcgraphunit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphunit.c?ref=85ad2ef57fb2c016b0944e2d685e0c57a8018671", "patch": "@@ -1580,7 +1580,7 @@ cgraph_expand_function (struct cgraph_node *node)\n   /* Make sure that BE didn't give up on compiling.  */\n   gcc_assert (TREE_ASM_WRITTEN (decl));\n   current_function_decl = NULL;\n-  gcc_assert (!cgraph_preserve_function_body_p (decl));\n+  gcc_assert (!cgraph_preserve_function_body_p (node));\n   cgraph_release_function_body (node);\n   /* Eliminate all call edges.  This is important so the GIMPLE_CALL no longer\n      points to the dead function body.  */\n@@ -1758,13 +1758,12 @@ cgraph_output_in_order (void)\n /* Return true when function body of DECL still needs to be kept around\n    for later re-use.  */\n bool\n-cgraph_preserve_function_body_p (tree decl)\n+cgraph_preserve_function_body_p (struct cgraph_node *node)\n {\n-  struct cgraph_node *node;\n-\n   gcc_assert (cgraph_global_info_ready);\n+  gcc_assert (!node->same_body_alias);\n+\n   /* Look if there is any clone around.  */\n-  node = cgraph_get_node (decl);\n   if (node->clones)\n     return true;\n   return false;"}, {"sha": "117958ccf031716268c38fac3d7d04d05502e242", "filename": "gcc/ipa-inline-transform.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85ad2ef57fb2c016b0944e2d685e0c57a8018671/gcc%2Fipa-inline-transform.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85ad2ef57fb2c016b0944e2d685e0c57a8018671/gcc%2Fipa-inline-transform.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-inline-transform.c?ref=85ad2ef57fb2c016b0944e2d685e0c57a8018671", "patch": "@@ -297,7 +297,7 @@ inline_transform (struct cgraph_node *node)\n \n   /* We might need the body of this function so that we can expand\n      it inline somewhere else.  */\n-  if (cgraph_preserve_function_body_p (node->decl))\n+  if (cgraph_preserve_function_body_p (node))\n     save_inline_function_body (node);\n \n   for (e = node->callees; e; e = e->next_callee)"}]}