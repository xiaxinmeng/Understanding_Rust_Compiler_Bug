{"sha": "3002e1601b13c6a4cd4382788d97ebbd789e4ce9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzAwMmUxNjAxYjEzYzZhNGNkNDM4Mjc4OGQ5N2ViYmQ3ODllNGNlOQ==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1992-12-31T22:28:54Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1992-12-31T22:28:54Z"}, "message": "(gen_input_reload):  Also handle PLUS of a MEM and CONSTANT specially.\n\nFrom-SVN: r3029", "tree": {"sha": "7e94784c1035d0cfba3c1744a4de9b76b1e0a35b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7e94784c1035d0cfba3c1744a4de9b76b1e0a35b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3002e1601b13c6a4cd4382788d97ebbd789e4ce9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3002e1601b13c6a4cd4382788d97ebbd789e4ce9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3002e1601b13c6a4cd4382788d97ebbd789e4ce9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3002e1601b13c6a4cd4382788d97ebbd789e4ce9/comments", "author": null, "committer": null, "parents": [{"sha": "c3eebffbac077d5e5d5a0dbb1b9ff02ba568b77e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3eebffbac077d5e5d5a0dbb1b9ff02ba568b77e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c3eebffbac077d5e5d5a0dbb1b9ff02ba568b77e"}], "stats": {"total": 25, "additions": 14, "deletions": 11}, "files": [{"sha": "3af03a22bf5be4c9e18ec8b767a8042af0c79467", "filename": "gcc/reload1.c", "status": "modified", "additions": 14, "deletions": 11, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3002e1601b13c6a4cd4382788d97ebbd789e4ce9/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3002e1601b13c6a4cd4382788d97ebbd789e4ce9/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=3002e1601b13c6a4cd4382788d97ebbd789e4ce9", "patch": "@@ -5698,9 +5698,10 @@ gen_input_reload (reloadreg, in, before_insn)\n      register that didn't get a hard register.  In that case we can just\n      call emit_move_insn.\n \n-     We can also be asked to reload a PLUS that adds either two registers or\n-     a register and a constant or MEM.  This can occur during frame pointer\n-     elimination.  That case if handled by trying to emit a single insn\n+     We can also be asked to reload a PLUS that adds either two registers, or\n+     a register and a constant or MEM, or a MEM and a constant.  This can\n+     occur during frame pointer elimination and while reloading addresses.\n+     This case is handled by trying to emit a single insn\n      to perform the add.  If it is not valid, we use a two insn sequence.\n \n      Finally, we could be called to handle an 'o' constraint by putting\n@@ -5719,16 +5720,18 @@ gen_input_reload (reloadreg, in, before_insn)\n      ??? At some point, this whole thing needs to be rethought.  */\n \n   if (GET_CODE (in) == PLUS\n-      && GET_CODE (XEXP (in, 0)) == REG\n-      && (GET_CODE (XEXP (in, 1)) == REG\n-\t  || CONSTANT_P (XEXP (in, 1))\n-\t  || GET_CODE (XEXP (in, 1)) == MEM))\n+      && ((GET_CODE (XEXP (in, 0)) == REG\n+\t   && (GET_CODE (XEXP (in, 1)) == REG\n+\t       || CONSTANT_P (XEXP (in, 1))\n+\t       || GET_CODE (XEXP (in, 1)) == MEM))\n+\t  || (GET_CODE (XEXP (in, 0)) == MEM\n+\t      && CONSTANT_P (XEXP (in, 1)))))\n     {\n       /* We need to compute the sum of what is either a register and a\n-\t constant, a register and memory, or a hard register and a pseudo\n-\t register and put it into the reload register.  The best possible way\n-\t of doing this is if the machine has a three-operand ADD insn that\n-\t accepts the required operands.\n+\t constant, a register and memory, a hard register and a pseudo\n+\t register, or memory and a constant and put it into the reload\n+\t register.  The best possible way of doing this is if the machine\n+\t has a three-operand ADD insn that accepts the required operands.\n \n \t The simplest approach is to try to generate such an insn and see if it\n \t is recognized and matches its constraints.  If so, it can be used."}]}