{"sha": "36bd43039bd1b42563052ce0991a977adb96f968", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzZiZDQzMDM5YmQxYjQyNTYzMDUyY2UwOTkxYTk3N2FkYjk2Zjk2OA==", "commit": {"author": {"name": "Andreas Schwab", "email": "schwab@suse.de", "date": "2007-07-01T15:28:34Z"}, "committer": {"name": "Andreas Schwab", "email": "schwab@gcc.gnu.org", "date": "2007-07-01T15:28:34Z"}, "message": "* dwarf2out.c (initial_return_save): Define only if used.\n\nFrom-SVN: r126170", "tree": {"sha": "004739658c202de7424b1acf09dec39405a3ab15", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/004739658c202de7424b1acf09dec39405a3ab15"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/36bd43039bd1b42563052ce0991a977adb96f968", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36bd43039bd1b42563052ce0991a977adb96f968", "html_url": "https://github.com/Rust-GCC/gccrs/commit/36bd43039bd1b42563052ce0991a977adb96f968", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36bd43039bd1b42563052ce0991a977adb96f968/comments", "author": {"login": "andreas-schwab", "id": 2175493, "node_id": "MDQ6VXNlcjIxNzU0OTM=", "avatar_url": "https://avatars.githubusercontent.com/u/2175493?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andreas-schwab", "html_url": "https://github.com/andreas-schwab", "followers_url": "https://api.github.com/users/andreas-schwab/followers", "following_url": "https://api.github.com/users/andreas-schwab/following{/other_user}", "gists_url": "https://api.github.com/users/andreas-schwab/gists{/gist_id}", "starred_url": "https://api.github.com/users/andreas-schwab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andreas-schwab/subscriptions", "organizations_url": "https://api.github.com/users/andreas-schwab/orgs", "repos_url": "https://api.github.com/users/andreas-schwab/repos", "events_url": "https://api.github.com/users/andreas-schwab/events{/privacy}", "received_events_url": "https://api.github.com/users/andreas-schwab/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d4d7f1d1bbe95e484a50e4f91ac5304a7bb47bdf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4d7f1d1bbe95e484a50e4f91ac5304a7bb47bdf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d4d7f1d1bbe95e484a50e4f91ac5304a7bb47bdf"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "96c4582f1d5de521ea715e5071b3e253f44fdbad", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36bd43039bd1b42563052ce0991a977adb96f968/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36bd43039bd1b42563052ce0991a977adb96f968/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=36bd43039bd1b42563052ce0991a977adb96f968", "patch": "@@ -1,3 +1,7 @@\n+2007-07-01  Andreas Schwab  <schwab@suse.de>\n+\n+\t* dwarf2out.c (initial_return_save): Define only if used.\n+\n 2007-07-01  Richard Sandiford  <richard@codesourcery.com>\n \n \tUnreverting Richard's Revert of:"}, {"sha": "140baf19eef903ff4319545d9ccfdbcc59b8c12c", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36bd43039bd1b42563052ce0991a977adb96f968/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36bd43039bd1b42563052ce0991a977adb96f968/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=36bd43039bd1b42563052ce0991a977adb96f968", "patch": "@@ -347,7 +347,9 @@ static void add_fde_cfi (const char *, dw_cfi_ref);\n static void lookup_cfa_1 (dw_cfi_ref, dw_cfa_location *);\n static void lookup_cfa (dw_cfa_location *);\n static void reg_save (const char *, unsigned, unsigned, HOST_WIDE_INT);\n+#ifdef DWARF2_UNWIND_INFO\n static void initial_return_save (rtx);\n+#endif\n static HOST_WIDE_INT stack_adjust_offset (rtx);\n static void output_cfi (dw_cfi_ref, dw_fde_ref, int);\n static void output_call_frame_info (int);\n@@ -955,6 +957,7 @@ dwarf2out_return_reg (const char *label, unsigned int sreg)\n   reg_save (label, DWARF_FRAME_RETURN_COLUMN, DWARF_FRAME_REGNUM (sreg), 0);\n }\n \n+#ifdef DWARF2_UNWIND_INFO\n /* Record the initial position of the return address.  RTL is\n    INCOMING_RETURN_ADDR_RTX.  */\n \n@@ -1012,6 +1015,7 @@ initial_return_save (rtx rtl)\n   if (reg != DWARF_FRAME_RETURN_COLUMN)\n     reg_save (NULL, DWARF_FRAME_RETURN_COLUMN, reg, offset - cfa.offset);\n }\n+#endif\n \n /* Given a SET, calculate the amount of stack adjustment it\n    contains.  */"}]}