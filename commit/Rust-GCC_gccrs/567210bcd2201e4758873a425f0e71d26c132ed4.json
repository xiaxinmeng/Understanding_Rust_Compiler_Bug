{"sha": "567210bcd2201e4758873a425f0e71d26c132ed4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTY3MjEwYmNkMjIwMWU0NzU4ODczYTQyNWYwZTcxZDI2YzEzMmVkNA==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "2011-12-29T21:13:10Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "2011-12-29T21:13:10Z"}, "message": "Update PR 51623, to eliminate checks against being in the text section.\n\nFrom-SVN: r182731", "tree": {"sha": "b520bd30cc20f696425874343ab9db364a6751da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b520bd30cc20f696425874343ab9db364a6751da"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/567210bcd2201e4758873a425f0e71d26c132ed4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/567210bcd2201e4758873a425f0e71d26c132ed4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/567210bcd2201e4758873a425f0e71d26c132ed4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/567210bcd2201e4758873a425f0e71d26c132ed4/comments", "author": null, "committer": null, "parents": [{"sha": "c1a46bc6893a3afadffc5a5ed93be536f1feec25", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1a46bc6893a3afadffc5a5ed93be536f1feec25", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c1a46bc6893a3afadffc5a5ed93be536f1feec25"}], "stats": {"total": 18, "additions": 13, "deletions": 5}, "files": [{"sha": "ce5276c122420334328eb48078c46da9a8321c6d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567210bcd2201e4758873a425f0e71d26c132ed4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567210bcd2201e4758873a425f0e71d26c132ed4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=567210bcd2201e4758873a425f0e71d26c132ed4", "patch": "@@ -1,3 +1,10 @@\n+2011-12-29  Michael Meissner  <meissner@linux.vnet.ibm.com>\n+\n+\tPR target/51623\n+\t* config/rs6000/rs6000.c (rs6000_assemble_integer): Delete check\n+\tfor an initialized pointer being in a text section with\n+\t-mrelocatable, since it should never happen.\n+\n 2011-12-29  Michael Eager  <eager@eagercon.com>\n \n \t* config/microblaze/microblaze.md: Add expander for simple_return,\n@@ -7,7 +14,7 @@\n \n \t* config/sh/sh.h (BRANCH_COST): Use sh_branch_cost variable.\n \t* config/sh/sh.c (sh_option_override): Simplify sh_branch_cost\n-        expression.\t\n+        expression.\n \n 2011-12-28  Ian Lance Taylor  <iant@google.com>\n "}, {"sha": "872b757fe70c43b3fb0d986e889651f6c6cba624", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/567210bcd2201e4758873a425f0e71d26c132ed4/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/567210bcd2201e4758873a425f0e71d26c132ed4/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=567210bcd2201e4758873a425f0e71d26c132ed4", "patch": "@@ -15456,12 +15456,13 @@ rs6000_assemble_integer (rtx x, unsigned int size, int aligned_p)\n     {\n       static int recurse = 0;\n \n-      /* For -mrelocatable, we mark all addresses that need to be fixed up\n-\t in the .fixup section.  */\n+      /* For -mrelocatable, we mark all addresses that need to be fixed up in\n+\t the .fixup section.  Since the TOC section is already relocated, we\n+\t don't need to mark it here.  We used to skip the text section, but it\n+\t should never be valid for relocated addresses to be placed in the text\n+\t section.  */\n       if (TARGET_RELOCATABLE\n \t  && in_section != toc_section\n-\t  && in_section != text_section\n-\t  && (in_section && (in_section->common.flags & SECTION_CODE)) == 0\n \t  && !recurse\n \t  && GET_CODE (x) != CONST_INT\n \t  && GET_CODE (x) != CONST_DOUBLE"}]}