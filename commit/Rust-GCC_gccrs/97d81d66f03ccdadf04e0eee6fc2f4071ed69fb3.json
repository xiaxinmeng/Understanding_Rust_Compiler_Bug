{"sha": "97d81d66f03ccdadf04e0eee6fc2f4071ed69fb3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTdkODFkNjZmMDNjY2RhZGYwNGUwZWVlNmZjMmY0MDcxZWQ2OWZiMw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2000-07-17T20:55:43Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2000-07-17T20:55:43Z"}, "message": "Makefile.in (clean): Remove libgcc directory.\n\n        * Makefile.in (clean): Remove libgcc directory.\n\n        * configure.in (-Wno-long-long check): Use higher-level macros.\n\nFrom-SVN: r35100", "tree": {"sha": "008df961c88d9b370daadb885b5b785f05a0ee8d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/008df961c88d9b370daadb885b5b785f05a0ee8d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/97d81d66f03ccdadf04e0eee6fc2f4071ed69fb3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97d81d66f03ccdadf04e0eee6fc2f4071ed69fb3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/97d81d66f03ccdadf04e0eee6fc2f4071ed69fb3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97d81d66f03ccdadf04e0eee6fc2f4071ed69fb3/comments", "author": null, "committer": null, "parents": [{"sha": "537815242eb9dd7e704aac5f2bdea0c80c0655a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/537815242eb9dd7e704aac5f2bdea0c80c0655a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/537815242eb9dd7e704aac5f2bdea0c80c0655a2"}], "stats": {"total": 30, "additions": 17, "deletions": 13}, "files": [{"sha": "c1ae522b55fe20cdd93684d2f3723a1f2269c102", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97d81d66f03ccdadf04e0eee6fc2f4071ed69fb3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97d81d66f03ccdadf04e0eee6fc2f4071ed69fb3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=97d81d66f03ccdadf04e0eee6fc2f4071ed69fb3", "patch": "@@ -1,3 +1,9 @@\n+2000-07-17  Jason Merrill  <jason@redhat.com>\n+\n+\t* Makefile.in (clean): Remove libgcc directory.\n+\n+\t* configure.in (-Wno-long-long check): Use higher-level macros.\n+\n 2000-07-17  Zack Weinberg  <zack@wolery.cumb.org>\n \n \t* simplify-rtx.c (simplify_binary_operation): Recognize\n@@ -12,9 +18,9 @@\n \n Mon Jul 17 08:26:35 2000  Clinton Popetz  <cpopetz@cygnus.com>\n \n-\t* mips.c (mips_expand_prologue): Don't calculate the last               \n-\targument register unless we need it.  When we are calculating \n-\tthis, make sure FUNCTION_ARG is giving us a REG.                        \n+\t* mips.c (mips_expand_prologue): Don't calculate the last argument\n+\tregister unless we need it.  When we are calculating this, make\n+\tsure FUNCTION_ARG is giving us a REG.\n \n 2000-07-17  Stephane Carrez  <Stephane.Carrez@worldnet.fr>\n \n@@ -24,7 +30,6 @@ Mon Jul 17 08:26:35 2000  Clinton Popetz  <cpopetz@cygnus.com>\n \n 2000-07-17  Mark Klein <mklein@dis.com>\n \n-\n          * pa.c (emit_hpdiv_const): Update to match new pattern for udivsi3.\n \n 2000-07-17  J. David Anglin  <dave@hiauly1.hia.nrc.ca>"}, {"sha": "17e2eb2bd2997127e9ddab493b39ba859cc3f602", "filename": "gcc/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97d81d66f03ccdadf04e0eee6fc2f4071ed69fb3/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97d81d66f03ccdadf04e0eee6fc2f4071ed69fb3/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=97d81d66f03ccdadf04e0eee6fc2f4071ed69fb3", "patch": "@@ -2155,6 +2155,7 @@ mostlyclean: $(INTL_MOSTLYCLEAN) lang.mostlyclean\n INTL_CLEAN = intl.clean\n clean: mostlyclean $(INTL_CLEAN) lang.clean\n \t-rm -f libgcc.a\n+\t-rm -rf libgcc\n \t-rm -f *.dvi\n \t-rm -f */*.dvi\n \t-if [ -f md.pre-cpp ]; then \\"}, {"sha": "839570ff077ee80de9f55073734035a113e2c6d3", "filename": "gcc/configure.in", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97d81d66f03ccdadf04e0eee6fc2f4071ed69fb3/gcc%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97d81d66f03ccdadf04e0eee6fc2f4071ed69fb3/gcc%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.in?ref=97d81d66f03ccdadf04e0eee6fc2f4071ed69fb3", "patch": "@@ -332,15 +332,13 @@ AC_SUBST(NO_MINUS_C_MINUS_O)\n \n gcc_AC_C_LONG_DOUBLE\n \n-AC_MSG_CHECKING(whether ${CC-cc} accepts -Wno-long-long)\n-echo 'void f(){}' > conftest.c\n-if test -z \"`${CC-cc} -Wno-long-long -c conftest.c 2>&1`\"; then\n-  ac_cv_prog_cc_no_long_long=yes\n-else\n-  ac_cv_prog_cc_no_long_long=no\n-fi\n-rm -f conftest*\n-echo \"$ac_t\"$ac_cv_prog_cc_no_long_long 1>&6\n+AC_CACHE_CHECK(whether ${CC-cc} accepts -Wno-long-long,\n+ac_cv_prog_cc_no_long_long,\n+[save_CFLAGS=\"$CFLAGS\"\n+CFLAGS=\"-Wno-long-long\"\n+AC_TRY_COMPILE(,,ac_cv_prog_cc_no_long_long=yes,\n+\t       ac_cv_prog_cc_no_long_long=no)\n+CFLAGS=\"$save_CFLAGS\"])\n \n # If the native compiler is GCC, we can enable warnings even in stage1.  \n # That's useful for people building cross-compilers, or just running a"}]}