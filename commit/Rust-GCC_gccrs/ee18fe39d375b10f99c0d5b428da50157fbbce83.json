{"sha": "ee18fe39d375b10f99c0d5b428da50157fbbce83", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWUxOGZlMzlkMzc1YjEwZjk5YzBkNWI0MjhkYTUwMTU3ZmJiY2U4Mw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2009-09-08T18:12:54Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2009-09-08T18:12:54Z"}, "message": "cp-tree.h (enum overload_flags): Remove OP_FLAG.\n\n\t* cp-tree.h (enum overload_flags): Remove OP_FLAG.\n\t* method.c (lazily_declare_fn): Check for dtorness in ABI warning.\n\nFrom-SVN: r151528", "tree": {"sha": "7bb5359fee295e5589c1461fade96c9624ea09b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7bb5359fee295e5589c1461fade96c9624ea09b7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ee18fe39d375b10f99c0d5b428da50157fbbce83", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee18fe39d375b10f99c0d5b428da50157fbbce83", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee18fe39d375b10f99c0d5b428da50157fbbce83", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee18fe39d375b10f99c0d5b428da50157fbbce83/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f33ab5c3f104755e1a626136f3d3f00583cfbf3c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f33ab5c3f104755e1a626136f3d3f00583cfbf3c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f33ab5c3f104755e1a626136f3d3f00583cfbf3c"}], "stats": {"total": 11, "additions": 6, "deletions": 5}, "files": [{"sha": "ebf4518a54697f4645798b8f4d505d8a341a60f5", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee18fe39d375b10f99c0d5b428da50157fbbce83/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee18fe39d375b10f99c0d5b428da50157fbbce83/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=ee18fe39d375b10f99c0d5b428da50157fbbce83", "patch": "@@ -1,12 +1,13 @@\n 2009-09-03  Jason Merrill  <jason@redhat.com>\n \n+\t* cp-tree.h (enum overload_flags): Remove OP_FLAG.\n+\t* method.c (lazily_declare_fn): Check for dtorness in ABI warning.\n+\n \t* name-lookup.c (is_class_level): Remove.\n \t(push_binding_level, leave_scope, resume_scope): Adjust.\n \t(pushlevel_class): Adjust.\n \t(poplevel_class): Make sure we're on class_binding_level.\n \n-2009-09-02  Jason Merrill  <jason@redhat.com>\n-\n \t* decl.c (grokmethod): Rename from start_method.\n \t(finish_method): Remove.\n \t* cp-tree.h: Adjust."}, {"sha": "ea3b4bf3d14abbc9d7104af5377235b9a8baca12", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee18fe39d375b10f99c0d5b428da50157fbbce83/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee18fe39d375b10f99c0d5b428da50157fbbce83/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=ee18fe39d375b10f99c0d5b428da50157fbbce83", "patch": "@@ -3804,7 +3804,7 @@ extern int at_eof;\n    TREE_PURPOSE slot.  */\n extern GTY(()) tree static_aggregates;\n \n-enum overload_flags { NO_SPECIAL = 0, DTOR_FLAG, OP_FLAG, TYPENAME_FLAG };\n+enum overload_flags { NO_SPECIAL = 0, DTOR_FLAG, TYPENAME_FLAG };\n \n /* These are uses as bits in flags passed to various functions to\n    control their behavior.  Despite the LOOKUP_ prefix, many of these"}, {"sha": "e57c825c94f3adf97c209524e170aa7fae5b2600", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee18fe39d375b10f99c0d5b428da50157fbbce83/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee18fe39d375b10f99c0d5b428da50157fbbce83/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=ee18fe39d375b10f99c0d5b428da50157fbbce83", "patch": "@@ -254,7 +254,7 @@ maybe_retrofit_in_chrg (tree fn)\n    FUNCTION is a FUNCTION_DECL.  It was created by `grokdeclarator'.\n \n    FLAGS contains bits saying what's special about today's\n-   arguments.  1 == DESTRUCTOR.  2 == OPERATOR.\n+   arguments.  DTOR_FLAG == DESTRUCTOR.\n \n    If FUNCTION is a destructor, then we must add the `auto-delete' field\n    as a second parameter.  There is some hair associated with the fact"}, {"sha": "6acf1bb4b717ffc94988db444b82ab335004fa73", "filename": "gcc/cp/method.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee18fe39d375b10f99c0d5b428da50157fbbce83/gcc%2Fcp%2Fmethod.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee18fe39d375b10f99c0d5b428da50157fbbce83/gcc%2Fcp%2Fmethod.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmethod.c?ref=ee18fe39d375b10f99c0d5b428da50157fbbce83", "patch": "@@ -1161,7 +1161,7 @@ lazily_declare_fn (special_function_kind sfk, tree type)\n       /* G++ 3.2 put the implicit destructor at the *beginning* of the\n \t TYPE_METHODS list, which cause the destructor to be emitted\n \t in an incorrect location in the vtable.  */\n-      if (warn_abi && DECL_VIRTUAL_P (fn))\n+      if (warn_abi && sfk == sfk_destructor && DECL_VIRTUAL_P (fn))\n \twarning (OPT_Wabi, \"vtable layout for class %qT may not be ABI-compliant\"\n \t\t \"and may change in a future version of GCC due to \"\n \t\t \"implicit virtual destructor\","}]}