{"sha": "977bc3ee11383e76acde2835ab4e2070904cf0bb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTc3YmMzZWUxMTM4M2U3NmFjZGUyODM1YWI0ZTIwNzA5MDRjZjBiYg==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2018-03-28T05:05:14Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2018-03-28T05:05:14Z"}, "message": "[PR c++/84973] don't defer output of uninstantiated templates\n\nWhen an anon struct gets a name through a typedef, we reset its\nlinkage and that of its members.  Member functions may get vague\nlinkage, which schedules them for deferred output, but we don't want\nto add them to the queue if they're uninstantiated templates,\ne.g. because the enclosing function is a template.  They will be added\nas needed when the enclosing template is instantiated.\n\n\nfor  gcc/cp/ChangeLog\n\n\tPR c++/84973\n\t* decl2.c (note_vague_linkage_fn): Don't defer uninstantiated\n\ttemplates.\n\nfor  gcc/testsuite/ChangeLog\n\n\tPR c++/84973\n\t* g++.dg/template/pr84973.C: New.\n\t* g++.dg/template/pr84973-2.C: New.\n\t* g++.dg/template/pr84973-3.C: New.\n\nFrom-SVN: r258914", "tree": {"sha": "72d8d670b2283dea022de70c80a412d6b390705f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/72d8d670b2283dea022de70c80a412d6b390705f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/977bc3ee11383e76acde2835ab4e2070904cf0bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/977bc3ee11383e76acde2835ab4e2070904cf0bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/977bc3ee11383e76acde2835ab4e2070904cf0bb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/977bc3ee11383e76acde2835ab4e2070904cf0bb/comments", "author": null, "committer": null, "parents": [{"sha": "04acc378eb62c937576065668df01a23fa1b0680", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04acc378eb62c937576065668df01a23fa1b0680", "html_url": "https://github.com/Rust-GCC/gccrs/commit/04acc378eb62c937576065668df01a23fa1b0680"}], "stats": {"total": 46, "additions": 46, "deletions": 0}, "files": [{"sha": "fc7b6b9ce13566653697ac25bb5bcff42a0e1800", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/977bc3ee11383e76acde2835ab4e2070904cf0bb/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/977bc3ee11383e76acde2835ab4e2070904cf0bb/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=977bc3ee11383e76acde2835ab4e2070904cf0bb", "patch": "@@ -1,5 +1,9 @@\n 2018-03-28  Alexandre Oliva <aoliva@redhat.com>\n \n+\tPR c++/84973\n+\t* decl2.c (note_vague_linkage_fn): Don't defer uninstantiated\n+\ttemplates.\n+\n \tPR c++/84968\n \t* tree.c (strip_typedefs_expr): Reject STATEMENT_LISTs.\n "}, {"sha": "fa753749e1a6b63f2497f529e35cdb211fca883c", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/977bc3ee11383e76acde2835ab4e2070904cf0bb/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/977bc3ee11383e76acde2835ab4e2070904cf0bb/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=977bc3ee11383e76acde2835ab4e2070904cf0bb", "patch": "@@ -739,6 +739,9 @@ check_classfn (tree ctype, tree function, tree template_parms)\n void\n note_vague_linkage_fn (tree decl)\n {\n+  if (processing_template_decl)\n+    return;\n+\n   DECL_DEFER_OUTPUT (decl) = 1;\n   vec_safe_push (deferred_fns, decl);\n }"}, {"sha": "252854e34c805fd075c5c6e79b4b807c4ebc0be5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/977bc3ee11383e76acde2835ab4e2070904cf0bb/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/977bc3ee11383e76acde2835ab4e2070904cf0bb/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=977bc3ee11383e76acde2835ab4e2070904cf0bb", "patch": "@@ -1,5 +1,10 @@\n 2018-03-28  Alexandre Oliva <aoliva@redhat.com>\n \n+\tPR c++/84973\n+\t* g++.dg/template/pr84973.C: New.\n+\t* g++.dg/template/pr84973-2.C: New.\n+\t* g++.dg/template/pr84973-3.C: New.\n+\n \tPR c++/84968\n \t* g++.dg/eh/pr84968.C: New.\n "}, {"sha": "41c205ad524394a14749747d7d37486c7c69c178", "filename": "gcc/testsuite/g++.dg/template/pr84973-2.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/977bc3ee11383e76acde2835ab4e2070904cf0bb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fpr84973-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/977bc3ee11383e76acde2835ab4e2070904cf0bb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fpr84973-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fpr84973-2.C?ref=977bc3ee11383e76acde2835ab4e2070904cf0bb", "patch": "@@ -0,0 +1,13 @@\n+// { dg-do compile }\n+\n+template <int> void a() {\n+  typedef struct {\n+    void b() try { b; } catch (short) { // { dg-error \"invalid use\" }\n+    }\n+  } c;\n+}\n+\n+int\n+main() {\n+  a<0>();\n+}"}, {"sha": "eeac214f2e1b97265778a14081cd836e1b1c7055", "filename": "gcc/testsuite/g++.dg/template/pr84973-3.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/977bc3ee11383e76acde2835ab4e2070904cf0bb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fpr84973-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/977bc3ee11383e76acde2835ab4e2070904cf0bb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fpr84973-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fpr84973-3.C?ref=977bc3ee11383e76acde2835ab4e2070904cf0bb", "patch": "@@ -0,0 +1,13 @@\n+// { dg-do link }\n+\n+template <int> void a() {\n+  typedef struct {\n+    void b() try { b(); } catch (short) {\n+    }\n+  } c;\n+}\n+\n+int\n+main() {\n+  a<0>();\n+}"}, {"sha": "b3f7170bc0dc0874124108215be42f5b51c28f1b", "filename": "gcc/testsuite/g++.dg/template/pr84973.C", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/977bc3ee11383e76acde2835ab4e2070904cf0bb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fpr84973.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/977bc3ee11383e76acde2835ab4e2070904cf0bb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fpr84973.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fpr84973.C?ref=977bc3ee11383e76acde2835ab4e2070904cf0bb", "patch": "@@ -0,0 +1,8 @@\n+// { dg-do compile }\n+\n+template <int> void a() {\n+  typedef struct {\n+    void b() try { b; } catch (short) {\n+    }\n+  } c;\n+}"}]}