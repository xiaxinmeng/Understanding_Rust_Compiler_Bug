{"sha": "03541b0d44b3a91357612de33229e31999e94f84", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDM1NDFiMGQ0NGIzYTkxMzU3NjEyZGUzMzIyOWUzMTk5OWU5NGY4NA==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2015-08-24T15:24:44Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2015-08-24T15:24:44Z"}, "message": "Update MOVE_RATIO cost for IA MCU\n\nThis patch updates MOVE_RATIO cost for IA MCU from 6 to 9 so that we\ncan unroll the loop completely for DOM with -mtune=iamcu.\n\ngcc/\n\n\tPR target/67329\n\t* config/i386/i386.c (iamcu_cost): Set MOVE_RATIO cost to 9.\n\ngcc/testsuite/\n\n\tPR target/67329\n\t* gcc.target/i386/pr67329.c: New test.\n\nFrom-SVN: r227132", "tree": {"sha": "41ad8be694f1c00833f40ea0d94956cfb79276ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/41ad8be694f1c00833f40ea0d94956cfb79276ce"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/03541b0d44b3a91357612de33229e31999e94f84", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03541b0d44b3a91357612de33229e31999e94f84", "html_url": "https://github.com/Rust-GCC/gccrs/commit/03541b0d44b3a91357612de33229e31999e94f84", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03541b0d44b3a91357612de33229e31999e94f84/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1358a747957c9f9bd64126c297740621bee4c6b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1358a747957c9f9bd64126c297740621bee4c6b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1358a747957c9f9bd64126c297740621bee4c6b2"}], "stats": {"total": 32, "additions": 31, "deletions": 1}, "files": [{"sha": "1bac36655a970e88e5d14c3286bac8dabcb5fb2a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03541b0d44b3a91357612de33229e31999e94f84/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03541b0d44b3a91357612de33229e31999e94f84/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=03541b0d44b3a91357612de33229e31999e94f84", "patch": "@@ -1,3 +1,8 @@\n+2015-08-24  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/67329\n+\t* config/i386/i386.c (iamcu_cost): Set MOVE_RATIO cost to 9.\n+\n 2015-08-24  Renlin Li  <renlin.li@arm.com>\n \n \t* config/arm/arm-protos.h (arm_valid_symbolic_address_p): Declare."}, {"sha": "070605fb4fcacf2e1d8892a072e47fb430452431", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03541b0d44b3a91357612de33229e31999e94f84/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03541b0d44b3a91357612de33229e31999e94f84/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=03541b0d44b3a91357612de33229e31999e94f84", "patch": "@@ -436,7 +436,7 @@ struct processor_costs iamcu_cost = {\n   COSTS_N_INSNS (3),\t\t\t/* cost of movsx */\n   COSTS_N_INSNS (2),\t\t\t/* cost of movzx */\n   8,\t\t\t\t\t/* \"large\" insn */\n-  6,\t\t\t\t\t/* MOVE_RATIO */\n+  9,\t\t\t\t\t/* MOVE_RATIO */\n   6,\t\t\t\t     /* cost for loading QImode using movzbl */\n   {2, 4, 2},\t\t\t\t/* cost of loading integer registers\n \t\t\t\t\t   in QImode, HImode and SImode."}, {"sha": "9161ce4b3b7bdc7f70f7641ce5d6cac471987619", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03541b0d44b3a91357612de33229e31999e94f84/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03541b0d44b3a91357612de33229e31999e94f84/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=03541b0d44b3a91357612de33229e31999e94f84", "patch": "@@ -1,3 +1,8 @@\n+2015-08-24  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/67329\n+\t* gcc.target/i386/pr67329.c: New test.\n+\n 2015-08-24  Nathan Sidwell  <nathan@acm.org>\n \n \t* gcc/testsuite/gcc.dg/pr49551.c: Needs -fdata-sections."}, {"sha": "a29dd5b4f8d7da66b80e0640c021abf34ebfe97a", "filename": "gcc/testsuite/gcc.target/i386/pr67329.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03541b0d44b3a91357612de33229e31999e94f84/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr67329.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03541b0d44b3a91357612de33229e31999e94f84/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr67329.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr67329.c?ref=03541b0d44b3a91357612de33229e31999e94f84", "patch": "@@ -0,0 +1,20 @@\n+/* { dg-do compile { target ia32 } } */\n+/* { dg-options \"-O3 -fno-tree-fre -fno-tree-pre -fdump-tree-optimized -mtune=iamcu\" } */\n+\n+int\n+foo ()\n+{\n+  const int a[8] = { 0, 1, 2, 3, 4, 5, 6, 7 };\n+  int i, sum;\n+\n+  sum = 0;\n+  for (i = 0; i < sizeof (a) / sizeof (*a); i++)\n+    sum += a[i];\n+\n+  return sum;\n+}\n+\n+/* After late unrolling the above loop completely DOM should be\n+   able to optimize this to return 28.  */\n+\n+/* { dg-final { scan-tree-dump \"return 28;\" \"optimized\" } } */"}]}