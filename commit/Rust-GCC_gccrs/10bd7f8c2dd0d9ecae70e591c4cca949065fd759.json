{"sha": "10bd7f8c2dd0d9ecae70e591c4cca949065fd759", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTBiZDdmOGMyZGQwZDllY2FlNzBlNTkxYzRjY2E5NDkwNjVmZDc1OQ==", "commit": {"author": {"name": "Jed Wing", "email": "jedwin@zloty.ugcs.caltech.edu", "date": "2000-03-20T18:12:59Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2000-03-20T18:12:59Z"}, "message": "method.c (build_overload_int): Use host_integerp.\n\n        * method.c (build_overload_int): Use host_integerp.\n\nCo-Authored-By: Jason Merrill <jason@casey.cygnus.com>\n\nFrom-SVN: r32650", "tree": {"sha": "50d8db3793d568d4f5281704a28a91d6fafd126c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/50d8db3793d568d4f5281704a28a91d6fafd126c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/10bd7f8c2dd0d9ecae70e591c4cca949065fd759", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10bd7f8c2dd0d9ecae70e591c4cca949065fd759", "html_url": "https://github.com/Rust-GCC/gccrs/commit/10bd7f8c2dd0d9ecae70e591c4cca949065fd759", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10bd7f8c2dd0d9ecae70e591c4cca949065fd759/comments", "author": null, "committer": null, "parents": [{"sha": "c65a922c68fcaafce36473e2e940cd5c9d12d7fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c65a922c68fcaafce36473e2e940cd5c9d12d7fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c65a922c68fcaafce36473e2e940cd5c9d12d7fe"}], "stats": {"total": 13, "additions": 8, "deletions": 5}, "files": [{"sha": "7f515d9f7b57f423ac31199918a75e3f03dacc41", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10bd7f8c2dd0d9ecae70e591c4cca949065fd759/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10bd7f8c2dd0d9ecae70e591c4cca949065fd759/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=10bd7f8c2dd0d9ecae70e591c4cca949065fd759", "patch": "@@ -1,3 +1,8 @@\n+2000-03-20  Jed Wing <jedwin@zloty.ugcs.caltech.edu>\n+\t    Jason Merrill  <jason@casey.cygnus.com>\n+\n+\t* method.c (build_overload_int): Use host_integerp.\n+\n 2000-03-20 Theodore Papadopoulo <Theodore.Papadopoulo@sophia.inria.fr>\n \n \t* init.c (build_offset_ref): Handle the case of a templated member"}, {"sha": "44dc3abf8a3dceeabd3b67c6bdaace2840dfc206", "filename": "gcc/cp/method.c", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10bd7f8c2dd0d9ecae70e591c4cca949065fd759/gcc%2Fcp%2Fmethod.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10bd7f8c2dd0d9ecae70e591c4cca949065fd759/gcc%2Fcp%2Fmethod.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmethod.c?ref=10bd7f8c2dd0d9ecae70e591c4cca949065fd759", "patch": "@@ -597,11 +597,9 @@ build_overload_int (value, flags)\n      should always be represented by constants.  */\n   my_friendly_assert (TREE_CODE (value) == INTEGER_CST, 243);\n \n-  /* If the high-order word is not merely a sign-extension of the\n-     low-order word, we must use a special output routine that can\n-     deal with this.  */\n-  if ((unsigned HOST_WIDE_INT) TREE_INT_CST_HIGH (value)\n-      != (TREE_INT_CST_LOW (value) >> (HOST_BITS_PER_WIDE_INT - 1)))\n+  /* If value doesn't fit in a single HOST_WIDE_INT, we must use a\n+     special output routine that can deal with this.  */\n+  if (! host_integerp (value, 0))\n     {\n       multiple_words_p = 1;\n       /* And there is certainly going to be more than one digit.  */"}]}