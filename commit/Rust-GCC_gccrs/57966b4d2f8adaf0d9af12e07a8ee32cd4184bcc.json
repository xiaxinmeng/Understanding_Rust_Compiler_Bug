{"sha": "57966b4d2f8adaf0d9af12e07a8ee32cd4184bcc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTc5NjZiNGQyZjhhZGFmMGQ5YWYxMmUwN2E4ZWUzMmNkNDE4NGJjYw==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2020-10-16T17:53:40Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-11-25T13:22:45Z"}, "message": "[Ada] Fix couple of minor issues with local exception propagation\n\ngcc/ada/\n\n\t* exp_ch11.adb (Expand_N_Raise_Statement): Use Is_Entity_Name\n\tconsistently in tests on the name of the statement.\n\t* exp_prag.adb (Expand_Pragma_Check): In the local propagation\n\tcase, wrap the raise statement in a block statement.", "tree": {"sha": "9cd4535852d955da17ec6016e068ac4995c2dd0e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9cd4535852d955da17ec6016e068ac4995c2dd0e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/57966b4d2f8adaf0d9af12e07a8ee32cd4184bcc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57966b4d2f8adaf0d9af12e07a8ee32cd4184bcc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57966b4d2f8adaf0d9af12e07a8ee32cd4184bcc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57966b4d2f8adaf0d9af12e07a8ee32cd4184bcc/comments", "author": null, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7a17384884750622969e01b90344f6aa4fc9838c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a17384884750622969e01b90344f6aa4fc9838c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a17384884750622969e01b90344f6aa4fc9838c"}], "stats": {"total": 23, "additions": 17, "deletions": 6}, "files": [{"sha": "ddd69dfce9838c8fefc99abd4cfc951da00e2ba0", "filename": "gcc/ada/exp_ch11.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57966b4d2f8adaf0d9af12e07a8ee32cd4184bcc/gcc%2Fada%2Fexp_ch11.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57966b4d2f8adaf0d9af12e07a8ee32cd4184bcc/gcc%2Fada%2Fexp_ch11.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch11.adb?ref=57966b4d2f8adaf0d9af12e07a8ee32cd4184bcc", "patch": "@@ -1553,7 +1553,7 @@ package body Exp_Ch11 is\n    begin\n       --  Processing for locally handled exception (exclude reraise case)\n \n-      if Present (Name (N)) and then Nkind (Name (N)) = N_Identifier then\n+      if Present (Name (N)) and then Is_Entity_Name (Name (N)) then\n          if Debug_Flag_Dot_G\n            or else Restriction_Active (No_Exception_Propagation)\n          then\n@@ -1657,7 +1657,7 @@ package body Exp_Ch11 is\n       --  but this is also faster in all modes). Propagate Comes_From_Source\n       --  flag to the new node.\n \n-      if Present (Name (N)) and then Nkind (Name (N)) = N_Identifier then\n+      if Present (Name (N)) and then Is_Entity_Name (Name (N)) then\n          Src := Comes_From_Source (N);\n \n          if Entity (Name (N)) = Standard_Constraint_Error then\n@@ -1689,7 +1689,7 @@ package body Exp_Ch11 is\n \n       --  where location_string identifies the file/line of the raise\n \n-      if Present (Name (N)) then\n+      if Present (Name (N)) and then Is_Entity_Name (Name (N)) then\n          declare\n             Id : Entity_Id := Entity (Name (N));\n             Buf : Bounded_String;"}, {"sha": "9a227c693d7f3074bd12f4cfd94bc38b457e8338", "filename": "gcc/ada/exp_prag.adb", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57966b4d2f8adaf0d9af12e07a8ee32cd4184bcc/gcc%2Fada%2Fexp_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57966b4d2f8adaf0d9af12e07a8ee32cd4184bcc/gcc%2Fada%2Fexp_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_prag.adb?ref=57966b4d2f8adaf0d9af12e07a8ee32cd4184bcc", "patch": "@@ -425,7 +425,12 @@ package body Exp_Prag is\n \n       --  Generate the appropriate if statement. Note that we consider this to\n       --  be an explicit conditional in the source, not an implicit if, so we\n-      --  do not call Make_Implicit_If_Statement.\n+      --  do not call Make_Implicit_If_Statement. Note also that we wrap the\n+      --  raise statement in a block statement so that, if the condition is\n+      --  evaluated at compile time to False, then the rewriting of the if\n+      --  statement will not involve the raise but the block statement, and\n+      --  thus not leave a dangling reference to the raise statement in the\n+      --  Local_Raise_Statements list of the handler.\n \n       --  Case where we generate a direct raise\n \n@@ -438,8 +443,14 @@ package body Exp_Prag is\n            Make_If_Statement (Loc,\n              Condition       => Make_Op_Not (Loc, Right_Opnd => Cond),\n              Then_Statements => New_List (\n-               Make_Raise_Statement (Loc,\n-                 Name => New_Occurrence_Of (RTE (RE_Assert_Failure), Loc)))));\n+               Make_Block_Statement (Loc,\n+                 Handled_Statement_Sequence =>\n+                   Make_Handled_Sequence_Of_Statements (Loc,\n+                     Statements => New_List (\n+                       Make_Raise_Statement (Loc,\n+                         Name =>\n+                           New_Occurrence_Of (RTE (RE_Assert_Failure),\n+                                                                   Loc))))))));\n \n       --  Case where we call the procedure\n "}]}