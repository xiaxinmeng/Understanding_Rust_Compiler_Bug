{"sha": "95cc59f17b4f3f858879bd2fbc6bcf12a865a08c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTVjYzU5ZjE3YjRmM2Y4NTg4NzliZDJmYmM2YmNmMTJhODY1YTA4Yw==", "commit": {"author": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2019-11-09T13:43:04Z"}, "committer": {"name": "Iain Sandoe", "email": "iains@gcc.gnu.org", "date": "2019-11-09T13:43:04Z"}, "message": "[Darwin, machopic 10/n] Rework X86 mcount stub code.\n\nWhen a stub is used to call the mcount function, the code is already\nmarking it as used unconditionally;  This is the only use of the so-\ncalled validation outside darwin.{h,c}.  This moves the 'validation'\ninto darwin.c which is a step towards making validation routine local.\n\ngcc/\n\n2019-11-09  Iain Sandoe  <iain@sandoe.co.uk>\n\n\t* config/darwin.c (machopic_mcount_stub_name): Validate the\n\tsymbol stub name when it is created.\n\t* config/i386/darwin.h (FUNCTION_PROFILER): Remove the symbol\n\tstub validation.\n\nFrom-SVN: r278000", "tree": {"sha": "785c75c7e4c096467b1c7996cac82892472ba8d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/785c75c7e4c096467b1c7996cac82892472ba8d0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/95cc59f17b4f3f858879bd2fbc6bcf12a865a08c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95cc59f17b4f3f858879bd2fbc6bcf12a865a08c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/95cc59f17b4f3f858879bd2fbc6bcf12a865a08c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95cc59f17b4f3f858879bd2fbc6bcf12a865a08c/comments", "author": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "038d7e1b199fcc480cf24e344e8c4030591de026", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/038d7e1b199fcc480cf24e344e8c4030591de026", "html_url": "https://github.com/Rust-GCC/gccrs/commit/038d7e1b199fcc480cf24e344e8c4030591de026"}], "stats": {"total": 34, "additions": 23, "deletions": 11}, "files": [{"sha": "f82006ac08b78106feac83402326d6d5c0fe12e9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95cc59f17b4f3f858879bd2fbc6bcf12a865a08c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95cc59f17b4f3f858879bd2fbc6bcf12a865a08c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=95cc59f17b4f3f858879bd2fbc6bcf12a865a08c", "patch": "@@ -1,3 +1,10 @@\n+2019-11-09  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\t* config/darwin.c (machopic_mcount_stub_name): Validate the\n+\tsymbol stub name when it is created.\n+\t* config/i386/darwin.h (FUNCTION_PROFILER): Remove the symbol\n+\tstub validation.\n+\n 2019-11-09  Jakub Jelinek  <jakub@redhat.com>\n \n \t* symtab.c: Fix comment typos."}, {"sha": "f34be22e09fc6e73383faec9d36cb8bc233ad49e", "filename": "gcc/config/darwin.c", "status": "modified", "additions": 14, "deletions": 9, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95cc59f17b4f3f858879bd2fbc6bcf12a865a08c/gcc%2Fconfig%2Fdarwin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95cc59f17b4f3f858879bd2fbc6bcf12a865a08c/gcc%2Fconfig%2Fdarwin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin.c?ref=95cc59f17b4f3f858879bd2fbc6bcf12a865a08c", "patch": "@@ -601,15 +601,6 @@ machopic_indirection_name (rtx sym_ref, bool stub_p)\n   return p->ptr_name;\n }\n \n-/* Return the name of the stub for the mcount function.  */\n-\n-const char*\n-machopic_mcount_stub_name (void)\n-{\n-  rtx symbol = gen_rtx_SYMBOL_REF (Pmode, \"*mcount\");\n-  return machopic_indirection_name (symbol, /*stub_p=*/true);\n-}\n-\n /* If NAME is the name of a stub or a non-lazy pointer , mark the stub\n    or non-lazy pointer as used -- and mark the object to which the\n    pointer/stub refers as used as well, since the pointer/stub will\n@@ -2155,6 +2146,20 @@ darwin_emit_except_table_label (FILE *file)\n \t\t\t       except_table_label_num++);\n   ASM_OUTPUT_LABEL (file, section_start_label);\n }\n+\n+/* Return, and mark as used, the name of the stub for the mcount function.\n+   Currently, this is only called by X86 code in the expansion of the\n+   FUNCTION_PROFILER macro, when stubs are enabled.  */\n+\n+const char*\n+machopic_mcount_stub_name (void)\n+{\n+  rtx symbol = gen_rtx_SYMBOL_REF (Pmode, \"*mcount\");\n+  const char *name = machopic_indirection_name (symbol, /*stub_p=*/true);\n+  machopic_validate_stub_or_non_lazy_ptr (name);\n+  return name;\n+}\n+\n /* Generate a PC-relative reference to a Mach-O non-lazy-symbol.  */\n \n void"}, {"sha": "d1e53efc629db1cbdf82734e2bda3f1c29c771ed", "filename": "gcc/config/i386/darwin.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95cc59f17b4f3f858879bd2fbc6bcf12a865a08c/gcc%2Fconfig%2Fi386%2Fdarwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95cc59f17b4f3f858879bd2fbc6bcf12a865a08c/gcc%2Fconfig%2Fi386%2Fdarwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fdarwin.h?ref=95cc59f17b4f3f858879bd2fbc6bcf12a865a08c", "patch": "@@ -239,7 +239,8 @@ along with GCC; see the file COPYING3.  If not see\n #undef TARGET_ASM_OUTPUT_IDENT\n #define TARGET_ASM_OUTPUT_IDENT default_asm_output_ident_directive\n \n-/* Darwin profiling -- call mcount.  */\n+/* Darwin profiling -- call mcount.\n+   If we need a stub, then we unconditionally mark it as used.  */\n #undef FUNCTION_PROFILER\n #define FUNCTION_PROFILER(FILE, LABELNO)\t\t\t\t\\\n   do {\t\t\t\t\t\t\t\t\t\\\n@@ -248,7 +249,6 @@ along with GCC; see the file COPYING3.  If not see\n       {\t\t\t\t\t\t\t\t\t\\\n \tconst char *name = machopic_mcount_stub_name ();\t\t\\\n \tfprintf (FILE, \"\\tcall %s\\n\", name+1);  /*  skip '&'  */\t\\\n-\tmachopic_validate_stub_or_non_lazy_ptr (name);\t\t\t\\\n       }\t\t\t\t\t\t\t\t\t\\\n     else fprintf (FILE, \"\\tcall mcount\\n\");\t\t\t\t\\\n   } while (0)"}]}