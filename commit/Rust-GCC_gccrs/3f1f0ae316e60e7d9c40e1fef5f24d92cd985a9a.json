{"sha": "3f1f0ae316e60e7d9c40e1fef5f24d92cd985a9a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2YxZjBhZTMxNmU2MGU3ZDljNDBlMWZlZjVmMjRkOTJjZDk4NWE5YQ==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2010-10-11T18:45:23Z"}, "committer": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2010-10-11T18:45:23Z"}, "message": "re PR middle-end/45699 (Incorrect copy constructor generated with -O)\n\n2010-10-11  Martin Jambor  <mjambor@suse.cz>\n\n\tPR middle-end/45699\n\t* gimple-fold.c (gimple_fold_obj_type_ref_known_binfo): Choose among\n\tthunks.\n\n\t* testsuite/g++.dg/torture/pr45699.C: New test.\n\t* testsuite/g++.dg/otr-fold-1.C: Adjusted.\n\t* testsuite/g++.dg/otr-fold-1.C: Likewise.\n\nFrom-SVN: r165327", "tree": {"sha": "8d6ed9719873c3ea29c68bb9687c7adf8babe3d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8d6ed9719873c3ea29c68bb9687c7adf8babe3d8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3f1f0ae316e60e7d9c40e1fef5f24d92cd985a9a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f1f0ae316e60e7d9c40e1fef5f24d92cd985a9a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f1f0ae316e60e7d9c40e1fef5f24d92cd985a9a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f1f0ae316e60e7d9c40e1fef5f24d92cd985a9a/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "90a2689f4d6b68b7542b0f7b04d66fea1cee5c0f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90a2689f4d6b68b7542b0f7b04d66fea1cee5c0f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/90a2689f4d6b68b7542b0f7b04d66fea1cee5c0f"}], "stats": {"total": 99, "additions": 96, "deletions": 3}, "files": [{"sha": "19016d348fe7d24fe24e81a0436a5cae7460968b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f1f0ae316e60e7d9c40e1fef5f24d92cd985a9a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f1f0ae316e60e7d9c40e1fef5f24d92cd985a9a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3f1f0ae316e60e7d9c40e1fef5f24d92cd985a9a", "patch": "@@ -1,3 +1,9 @@\n+2010-10-11  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR middle-end/45699\n+\t* gimple-fold.c (gimple_fold_obj_type_ref_known_binfo): Choose among\n+\tthunks.\n+\n 2010-10-11  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n \n \t* Makefile.in ($(lang_checks_parallel))"}, {"sha": "ce232e609e1fd2394e2c9e672f0574b359f1699f", "filename": "gcc/gimple-fold.c", "status": "modified", "additions": 20, "deletions": 1, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f1f0ae316e60e7d9c40e1fef5f24d92cd985a9a/gcc%2Fgimple-fold.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f1f0ae316e60e7d9c40e1fef5f24d92cd985a9a/gcc%2Fgimple-fold.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-fold.c?ref=3f1f0ae316e60e7d9c40e1fef5f24d92cd985a9a", "patch": "@@ -1463,7 +1463,7 @@ tree\n gimple_fold_obj_type_ref_known_binfo (HOST_WIDE_INT token, tree known_binfo)\n {\n   HOST_WIDE_INT i;\n-  tree v, fndecl;\n+  tree v, fndecl, delta;\n \n   v = BINFO_VIRTUALS (known_binfo);\n   i = 0;\n@@ -1475,6 +1475,25 @@ gimple_fold_obj_type_ref_known_binfo (HOST_WIDE_INT token, tree known_binfo)\n     }\n \n   fndecl = TREE_VALUE (v);\n+  delta = TREE_PURPOSE (v);\n+  gcc_assert (host_integerp (delta, 0));\n+\n+  if (integer_nonzerop (delta))\n+    {\n+      struct cgraph_node *node = cgraph_get_node (fndecl);\n+      HOST_WIDE_INT off = tree_low_cst (delta, 0);\n+\n+      if (!node)\n+        return NULL;\n+      for (node = node->same_body; node; node = node->next)\n+        if (node->thunk.thunk_p && off == node->thunk.fixed_offset)\n+          break;\n+      if (node)\n+        fndecl = node->decl;\n+      else\n+        return NULL;\n+     }\n+\n   /* When cgraph node is missing and function is not public, we cannot\n      devirtualize.  This can happen in WHOPR when the actual method\n      ends up in other partition, because we found devirtualization"}, {"sha": "8d6d09f5ab6e813f72902ffa178922f09f11d20e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f1f0ae316e60e7d9c40e1fef5f24d92cd985a9a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f1f0ae316e60e7d9c40e1fef5f24d92cd985a9a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3f1f0ae316e60e7d9c40e1fef5f24d92cd985a9a", "patch": "@@ -1,3 +1,10 @@\n+2010-10-11  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR middle-end/45699\n+\t* g++.dg/torture/pr45699.C: New test.\n+\t* g++.dg/otr-fold-1.C: Adjusted.\n+\t* g++.dg/otr-fold-1.C: Likewise.\n+\n 2010-10-11  Nick Clifton  <nickc@redhat.com>\n \n \t* gcc.c-torture/compile/pr44197.c: Require visibility support."}, {"sha": "2364730487e6109068c871e45fc195c163e8c8c1", "filename": "gcc/testsuite/g++.dg/otr-fold-1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f1f0ae316e60e7d9c40e1fef5f24d92cd985a9a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fotr-fold-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f1f0ae316e60e7d9c40e1fef5f24d92cd985a9a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fotr-fold-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fotr-fold-1.C?ref=3f1f0ae316e60e7d9c40e1fef5f24d92cd985a9a", "patch": "@@ -72,5 +72,5 @@ int main (int argc, char *argv[])\n   return 0;\n }\n \n-/* { dg-final { scan-tree-dump \"= B::foo\"  \"optimized\"  } } */\n+/* { dg-final { scan-tree-dump \"= B::.*foo\"  \"optimized\"  } } */\n /* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "a3cd1b5e66f2cef708dfcdd52ad51186e149da34", "filename": "gcc/testsuite/g++.dg/otr-fold-2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f1f0ae316e60e7d9c40e1fef5f24d92cd985a9a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fotr-fold-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f1f0ae316e60e7d9c40e1fef5f24d92cd985a9a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fotr-fold-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fotr-fold-2.C?ref=3f1f0ae316e60e7d9c40e1fef5f24d92cd985a9a", "patch": "@@ -84,5 +84,5 @@ int main (int argc, char *argv[])\n   return 0;\n }\n \n-/* { dg-final { scan-tree-dump \"= B::foo\"  \"optimized\"  } } */\n+/* { dg-final { scan-tree-dump \"= B::.*foo\"  \"optimized\"  } } */\n /* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "828c1ef8e579a0a0fb1670768ed104b42afb3b85", "filename": "gcc/testsuite/g++.dg/torture/pr45699.C", "status": "added", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f1f0ae316e60e7d9c40e1fef5f24d92cd985a9a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr45699.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f1f0ae316e60e7d9c40e1fef5f24d92cd985a9a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr45699.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr45699.C?ref=3f1f0ae316e60e7d9c40e1fef5f24d92cd985a9a", "patch": "@@ -0,0 +1,61 @@\n+// { dg-do run }\n+\n+extern \"C\" void abort ();\n+\n+class A\n+{\n+public:\n+  virtual void foo () {abort();}\n+};\n+\n+class B : public A\n+{\n+public:\n+  int z;\n+  virtual void foo () {abort();}\n+};\n+\n+class C : public A\n+{\n+public:\n+  void *a[32];\n+  unsigned long b;\n+  long c[32];\n+\n+  virtual void foo () {abort();}\n+};\n+\n+class D : public C, public B\n+{\n+public:\n+  D () : C(), B()\n+  {\n+    int i;\n+    for (i = 0; i < 32; i++)\n+      {\n+\ta[i] = (void *) 0;\n+\tc[i] = 0;\n+      }\n+    b = 0xaaaa;\n+  }\n+\n+  virtual void foo ();\n+};\n+\n+void D::foo()\n+{\n+  if (b != 0xaaaa)\n+    abort();\n+}\n+\n+static inline void bar (B &b)\n+{\n+  b.foo ();\n+}\n+\n+int main()\n+{\n+  D d;\n+  bar (d);\n+  return 0;\n+}"}]}