{"sha": "da37a70f55338ef295bb1f7a39f9ef3e407835dd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGEzN2E3MGY1NTMzOGVmMjk1YmIxZjdhMzlmOWVmM2U0MDc4MzVkZA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2018-01-24T09:31:56Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2018-01-24T09:31:56Z"}, "message": "re PR tree-optimization/82819 ([graphite] ICE in set_codegen_error, at graphite-isl-ast-to-gimple.c:206)\n\n2018-01-24  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/82819\n\t* graphite-isl-ast-to-gimple.c (binary_op_to_tree): Avoid\n\tcode generating pluses that are no-ops in the target precision.\n\n\t* gcc.dg/graphite/pr82819.c: New testcase.\n\nFrom-SVN: r257012", "tree": {"sha": "9688e107e8359408fc0e893df65b1ce706c9d077", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9688e107e8359408fc0e893df65b1ce706c9d077"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/da37a70f55338ef295bb1f7a39f9ef3e407835dd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da37a70f55338ef295bb1f7a39f9ef3e407835dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da37a70f55338ef295bb1f7a39f9ef3e407835dd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da37a70f55338ef295bb1f7a39f9ef3e407835dd/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "df9e39b16e41cd3452e6349e0f662f8aaf9a2dfa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df9e39b16e41cd3452e6349e0f662f8aaf9a2dfa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/df9e39b16e41cd3452e6349e0f662f8aaf9a2dfa"}], "stats": {"total": 36, "additions": 35, "deletions": 1}, "files": [{"sha": "12341eac44e2729482633bb5a32dcd0788e41ad4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da37a70f55338ef295bb1f7a39f9ef3e407835dd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da37a70f55338ef295bb1f7a39f9ef3e407835dd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=da37a70f55338ef295bb1f7a39f9ef3e407835dd", "patch": "@@ -1,3 +1,9 @@\n+2018-01-24  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/82819\n+\t* graphite-isl-ast-to-gimple.c (binary_op_to_tree): Avoid\n+\tcode generating pluses that are no-ops in the target precision.\n+\n 2018-01-24  Richard Biener  <rguenther@suse.de>\n \n \tPR middle-end/84000"}, {"sha": "89d8d941ce1e7b4d5664e2cc6a210d79c8d6dfcf", "filename": "gcc/graphite-isl-ast-to-gimple.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da37a70f55338ef295bb1f7a39f9ef3e407835dd/gcc%2Fgraphite-isl-ast-to-gimple.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da37a70f55338ef295bb1f7a39f9ef3e407835dd/gcc%2Fgraphite-isl-ast-to-gimple.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-isl-ast-to-gimple.c?ref=da37a70f55338ef295bb1f7a39f9ef3e407835dd", "patch": "@@ -326,7 +326,8 @@ binary_op_to_tree (tree type, __isl_take isl_ast_expr *expr, ivs_params &ip)\n   /* From our constraint generation we may get modulo operations that\n      we cannot represent explicitely but that are no-ops for TYPE.\n      Elide those.  */\n-  if (expr_type == isl_ast_op_pdiv_r\n+  if ((expr_type == isl_ast_op_pdiv_r\n+       || expr_type == isl_ast_op_add)\n       && isl_ast_expr_get_type (arg_expr) == isl_ast_expr_int\n       && (wi::exact_log2 (widest_int_from_isl_expr_int (arg_expr))\n \t  >= TYPE_PRECISION (type)))"}, {"sha": "eed77ed4084674a8eaed2e988b252de3bba9e011", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da37a70f55338ef295bb1f7a39f9ef3e407835dd/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da37a70f55338ef295bb1f7a39f9ef3e407835dd/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=da37a70f55338ef295bb1f7a39f9ef3e407835dd", "patch": "@@ -1,3 +1,8 @@\n+2018-01-24  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/82819\n+\t* gcc.dg/graphite/pr82819.c: New testcase.\n+\n 2018-01-23  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/83921"}, {"sha": "ed4b1b6ed53cac03e31ea34a5a2b7458f14f422e", "filename": "gcc/testsuite/gcc.dg/graphite/pr82819.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da37a70f55338ef295bb1f7a39f9ef3e407835dd/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr82819.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da37a70f55338ef295bb1f7a39f9ef3e407835dd/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr82819.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr82819.c?ref=da37a70f55338ef295bb1f7a39f9ef3e407835dd", "patch": "@@ -0,0 +1,22 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -floop-nest-optimize\" } */\n+\n+short int *ts;\n+\n+void\n+c2 (unsigned long long int s4, int ns)\n+{\n+  short int *b2 = (short int *)&ns;\n+\n+  while (ns != 0)\n+    {\n+      int xn;\n+\n+      for (xn = 0; xn < 3; ++xn)\n+\tfor (*b2 = 0; *b2 < 2; ++*b2)\n+\t  s4 += xn;\n+      if (s4 != 0)\n+\tb2 = ts;\n+      ++ns;\n+    }\n+}"}]}