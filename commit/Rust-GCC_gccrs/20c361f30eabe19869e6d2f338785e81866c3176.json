{"sha": "20c361f30eabe19869e6d2f338785e81866c3176", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjBjMzYxZjMwZWFiZTE5ODY5ZTZkMmYzMzg3ODVlODE4NjZjMzE3Ng==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2004-01-18T15:10:23Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2004-01-18T15:10:23Z"}, "message": "coverage.c (checksum_string): Rename to ...\n\n\n\t* coverage.c (checksum_string): Rename to ...\n\t(coverage_checksum_string): ... this one, Use crc32_string; recognize\n\tnames containing random number and zero the number out in order to get\n\tmatch.\n\nFrom-SVN: r76102", "tree": {"sha": "9fed97a9faf770cfb1e07dc8d782fa440327f565", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9fed97a9faf770cfb1e07dc8d782fa440327f565"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/20c361f30eabe19869e6d2f338785e81866c3176", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20c361f30eabe19869e6d2f338785e81866c3176", "html_url": "https://github.com/Rust-GCC/gccrs/commit/20c361f30eabe19869e6d2f338785e81866c3176", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20c361f30eabe19869e6d2f338785e81866c3176/comments", "author": null, "committer": null, "parents": [{"sha": "cacb5bba759f5df810479bb088ba02b1c575a7cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cacb5bba759f5df810479bb088ba02b1c575a7cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cacb5bba759f5df810479bb088ba02b1c575a7cc"}], "stats": {"total": 70, "additions": 53, "deletions": 17}, "files": [{"sha": "a7db3f7ba90946749ccb93a342d1580477c63519", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20c361f30eabe19869e6d2f338785e81866c3176/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20c361f30eabe19869e6d2f338785e81866c3176/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=20c361f30eabe19869e6d2f338785e81866c3176", "patch": "@@ -1,3 +1,10 @@\n+2004-01-18  Jan Hubicka  <jh@suse.cz>\n+\n+\t* coverage.c (checksum_string): Rename to ...\n+\t(coverage_checksum_string): ... this one, Use crc32_string; recognize\n+\tnames containing random number and zero the number out in order to get\n+\tmatch.\n+\n 2004-01-18  Richard Sandiford  <rsandifo@redhat.com>\n \n \t* config/mips/mips.c (mips_got_alias_set): Mark for PCH."}, {"sha": "d6322b2ca77cf064a9607c8a9049ea8000fef997", "filename": "gcc/coverage.c", "status": "modified", "additions": 46, "deletions": 17, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20c361f30eabe19869e6d2f338785e81866c3176/gcc%2Fcoverage.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20c361f30eabe19869e6d2f338785e81866c3176/gcc%2Fcoverage.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcoverage.c?ref=20c361f30eabe19869e6d2f338785e81866c3176", "patch": "@@ -109,7 +109,7 @@ static int htab_counts_entry_eq (const void *, const void *);\n static void htab_counts_entry_del (void *);\n static void read_counts_file (void);\n static unsigned compute_checksum (void);\n-static unsigned checksum_string (unsigned, const char *);\n+static unsigned coverage_checksum_string (unsigned, const char *);\n static tree build_fn_info_type (unsigned);\n static tree build_fn_info_value (const struct function_list *, tree);\n static tree build_ctr_info_type (void);\n@@ -405,23 +405,51 @@ coverage_counter_ref (unsigned counter, unsigned no)\n    checksum.  */\n \n static unsigned\n-checksum_string (unsigned chksum, const char *string)\n+coverage_checksum_string (unsigned chksum, const char *string)\n {\n-  do\n+  int i;\n+  char *dup = NULL;\n+\n+  /* Look for everything that looks if it were produced by\n+     get_file_function_name_long and zero out the second part\n+     that may result from flag_random_seed.  This is not critical\n+     as the checksums are used only for sanity checking.  */\n+  for (i = 0; string[i]; i++)\n     {\n-      unsigned value = *string << 24;\n-      unsigned ix;\n-\n-      for (ix = 8; ix--; value <<= 1)\n-\t{\n-\t  unsigned feedback;\n-\n-\t  feedback = (value ^ chksum) & 0x80000000 ? 0x04c11db7 : 0;\n-\t  chksum <<= 1;\n-\t  chksum ^= feedback;\n-\t}\n+      if (!strncmp (string + i, \"_GLOBAL__\", 9))\n+\tfor (i = i + 9; string[i]; i++)\n+\t  if (string[i]=='_')\n+\t    {\n+\t      int y;\n+\t      unsigned seed;\n+\n+\t      for (y = 1; y < 9; y++)\n+\t\tif (!(string[i + y] >= '0' && string[i + y] <= '9')\n+\t\t    && !(string[i + y] >= 'A' && string[i + y] <= 'F'))\n+\t\t  break;\n+\t      if (y != 9 || string[i + 9] != '_')\n+\t\tcontinue;\n+\t      for (y = 10; y < 18; y++)\n+\t\tif (!(string[i + y] >= '0' && string[i + y] <= '9')\n+\t\t    && !(string[i + y] >= 'A' && string[i + y] <= 'F'))\n+\t\t  break;\n+\t      if (y != 18)\n+\t\tcontinue;\n+\t      if (!sscanf (string + i + 10, \"%X\", &seed))\n+\t\tabort ();\n+\t      if (seed != crc32_string (0, flag_random_seed))\n+\t\tcontinue;\n+\t      string = dup = xstrdup (string);\n+\t      for (y = 10; y < 18; y++)\n+\t\tdup[i + y] = '0';\n+\t      break;\n+\t    }\n+      break;\n     }\n-  while (*string++);\n+\n+  chksum = crc32_string (chksum, string);\n+  if (dup)\n+    free (dup);\n \n   return chksum;\n }\n@@ -433,8 +461,9 @@ compute_checksum (void)\n {\n   unsigned chksum = DECL_SOURCE_LINE (current_function_decl);\n \n-  chksum = checksum_string (chksum, DECL_SOURCE_FILE (current_function_decl));\n-  chksum = checksum_string\n+  chksum = coverage_checksum_string (chksum,\n+      \t\t\t\t     DECL_SOURCE_FILE (current_function_decl));\n+  chksum = coverage_checksum_string\n     (chksum, IDENTIFIER_POINTER (DECL_ASSEMBLER_NAME (current_function_decl)));\n \n   return chksum;"}]}