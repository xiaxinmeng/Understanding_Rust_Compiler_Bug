{"sha": "b0a1da1950ff19fcc32497a416c29d4f3998d19a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjBhMWRhMTk1MGZmMTlmY2MzMjQ5N2E0MTZjMjlkNGYzOTk4ZDE5YQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@yorick.cygnus.com", "date": "1999-09-22T19:16:37Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1999-09-22T19:16:37Z"}, "message": "decl.c (define_case_label): Don't crash if we're not in a switch.\n\n\t* decl.c (define_case_label): Don't crash if we're not in a switch.\n\n\t* decl2.c (lang_decode_option): Don't bother explicitly ignoring flags.\n\t* lang-options.h: Restore -fthis-is-variable.  Remove help strings\n\tfor unsupported flags.\n\t* decl2.c (lang_decode_option): Accept and ignore -finit-priority.\n\tAccept and warn about -fthis-is-variable.\n\nFrom-SVN: r29594", "tree": {"sha": "5ba6d46e47be8c38664f0123f234c6cb075b6dbc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5ba6d46e47be8c38664f0123f234c6cb075b6dbc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b0a1da1950ff19fcc32497a416c29d4f3998d19a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0a1da1950ff19fcc32497a416c29d4f3998d19a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b0a1da1950ff19fcc32497a416c29d4f3998d19a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0a1da1950ff19fcc32497a416c29d4f3998d19a/comments", "author": null, "committer": null, "parents": [{"sha": "bad1e2ac25ca6a18ef11b747d9af4f4e6191d703", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bad1e2ac25ca6a18ef11b747d9af4f4e6191d703", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bad1e2ac25ca6a18ef11b747d9af4f4e6191d703"}], "stats": {"total": 43, "additions": 21, "deletions": 22}, "files": [{"sha": "25f9057dbcce7ff4fcf625894210338f36e52778", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0a1da1950ff19fcc32497a416c29d4f3998d19a/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0a1da1950ff19fcc32497a416c29d4f3998d19a/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=b0a1da1950ff19fcc32497a416c29d4f3998d19a", "patch": "@@ -1,3 +1,11 @@\n+1999-09-22  Jason Merrill  <jason@yorick.cygnus.com>\n+\n+\t* decl.c (define_case_label): Don't crash if we're not in a switch.\n+\n+\t* decl2.c (lang_decode_option): Don't bother explicitly ignoring flags.\n+\t* lang-options.h: Restore -fthis-is-variable.  Remove help strings\n+\tfor unsupported flags.\n+\n 1999-09-21  Jason Merrill  <jason@yorick.cygnus.com>\n \n \t* decl2.c (lang_decode_option): Accept and ignore -finit-priority."}, {"sha": "a6706b53928410acf4a1e394e373b2ee9ed12296", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0a1da1950ff19fcc32497a416c29d4f3998d19a/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0a1da1950ff19fcc32497a416c29d4f3998d19a/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=b0a1da1950ff19fcc32497a416c29d4f3998d19a", "patch": "@@ -4879,8 +4879,8 @@ pop_switch ()\n   switch_stack = switch_stack->next;\n }\n \n-/* Same, but for CASE labels.  If DECL is NULL_TREE, it's the default.  */\n-/* XXX Note decl is never actually used. (bpk) */\n+/* Note that we've seen a definition of a case label, and complain if this\n+   is a bad place for one.  */\n \n void\n define_case_label ()\n@@ -4889,6 +4889,10 @@ define_case_label ()\n   struct binding_level *b = current_binding_level;\n   int identified = 0;\n \n+  if (! switch_stack)\n+    /* Don't crash; we'll complain in do_case.  */\n+    return;\n+  \n   if (cleanup)\n     {\n       static int explained = 0;"}, {"sha": "262d6a1ed9259fd5fe0d6dc5fc2183a0ea362ae5", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 1, "deletions": 16, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0a1da1950ff19fcc32497a416c29d4f3998d19a/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0a1da1950ff19fcc32497a416c29d4f3998d19a/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=b0a1da1950ff19fcc32497a416c29d4f3998d19a", "patch": "@@ -567,25 +567,10 @@ lang_decode_option (argc, argv)\n       if (!strcmp (p, \"handle-exceptions\")\n \t  || !strcmp (p, \"no-handle-exceptions\"))\n \twarning (\"-fhandle-exceptions has been renamed to -fexceptions (and is now on by default)\");\n-\n-      if (!strcmp (p, \"memoize-lookups\")\n-\t  || !strcmp (p, \"no-memoize-lookups\")\n-\t  || !strcmp (p, \"save-memoized\")\n-\t  || !strcmp (p, \"no-save-memoized\")\n-\t  || !strcmp (p, \"no-all-virtual\")\n-\t  || !strcmp (p, \"no-enum-int-equiv\")\n-\t  || !strcmp (p, \"init-priority\")\n-\t  || !strcmp (p, \"no-init-priority\")\n-\t  || !strcmp (p, \"nonnull-objects\")\n-\t  || !strcmp (p, \"no-this-is-variable\")\n-          || !strcmp (p, \"ansi-overloading\"))\n-\t/* ignore */\n-\t;\n       else if (!strcmp (p, \"all-virtual\")\n \t       || !strcmp (p, \"enum-int-equiv\")\n \t       || !strcmp (p, \"no-nonnull-objects\")\n-\t       || !strcmp (p, \"this-is-variable\")\n-\t       || !strcmp (p, \"no-ansi-overloading\"))\n+\t       || !strcmp (p, \"this-is-variable\"))\n \twarning (\"-f%s is no longer supported\", p);\n       else if (! strcmp (p, \"alt-external-templates\"))\n \t{"}, {"sha": "4b743c0092b5052e2dfddf6994676330d003c33c", "filename": "gcc/cp/lang-options.h", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0a1da1950ff19fcc32497a416c29d4f3998d19a/gcc%2Fcp%2Flang-options.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0a1da1950ff19fcc32497a416c29d4f3998d19a/gcc%2Fcp%2Flang-options.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Flang-options.h?ref=b0a1da1950ff19fcc32497a416c29d4f3998d19a", "patch": "@@ -1,5 +1,5 @@\n /* Definitions for switches for C++.\n-   Copyright (C) 1995, 96-97, 1998 Free Software Foundation, Inc.\n+   Copyright (C) 1995, 96-98, 1999 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -25,7 +25,7 @@ DEFINE_LANG_NAME (\"C++\")\n \n   { \"-faccess-control\", \"\" },\n   { \"-fno-access-control\", \"Do not obey access control semantics\" },\n-  { \"-fall-virtual\", \"Make all member functions virtual\" },\n+  { \"-fall-virtual\", \"\" },\n   { \"-fno-all-virtual\", \"\" },\n   { \"-falt-external-templates\", \"Change when template instances are emitted\" },\n   { \"-fno-alt-external-templates\", \"\" },\n@@ -66,7 +66,7 @@ DEFINE_LANG_NAME (\"C++\")\n   { \"-fno-implicit-templates\", \"Only emit explicit template instatiations\" },\n   { \"-fimplicit-inline-templates\", \"\" },\n   { \"-fno-implicit-inline-templates\", \"Only emit explicit instatiations of inline templates\" },\n-  { \"-finit-priority\", \"Handle the init_priority attribute\" },\n+  { \"-finit-priority\", \"\" },\n   { \"-fno-init-priority\", \"\" },\n   { \"-flabels-ok\", \"Labels can be used as first class objects\" },\n   { \"-fno-labels-ok\", \"\" },\n@@ -78,7 +78,7 @@ DEFINE_LANG_NAME (\"C++\")\n   { \"-fnew-abi\", \"Enable experimental ABI changes\" },\n   { \"-fno-new-abi\", \"\" },\n   { \"-fnonnull-objects\", \"\" },\n-  { \"-fno-nonnull-objects\", \"Do not assume that a reference is always valid\" },\n+  { \"-fno-nonnull-objects\", \"\" },\n   { \"-foperator-names\", \"Recognise and/bitand/bitor/compl/not/or/xor\" },\n   { \"-fno-operator-names\", \"\" },\n   { \"-foptional-diags\", \"\" },\n@@ -96,6 +96,8 @@ DEFINE_LANG_NAME (\"C++\")\n   { \"-fstrict-prototype\", \"\" },\n   { \"-fno-strict-prototype\", \"Do not assume that empty prototype means no args\" },\n   { \"-ftemplate-depth-\", \"Specify maximum template instantiation depth\"},\n+  { \"-fthis-is-variable\", \"Make 'this' not be type '* const'\"  },\n+  { \"-fno-this-is-variable\", \"\" },\n   { \"-fvtable-gc\", \"Discard unused virtual functions\" },\n   { \"-fno-vtable-gc\", \"\" },\n   { \"-fvtable-thunks\", \"Implement vtables using thunks\" },"}]}