{"sha": "2aa26a5543cfd6fc2c03051d532f778da8318e9b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmFhMjZhNTU0M2NmZDZmYzJjMDMwNTFkNTMyZjc3OGRhODMxOGU5Yg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2015-03-13T08:52:51Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2015-03-13T08:52:51Z"}, "message": "re PR ipa/44563 (GCC uses a lot of RAM when compiling a large numbers of functions)\n\n2015-03-12  Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/44563\n\t* tree-inline.c (gimple_expand_calls_inline): Walk BB backwards\n\tto avoid quadratic behavior with inline expansion splitting blocks.\n\t* tree-cfgcleanup.c (cleanup_tree_cfg_bb): Do not merge block\n\twith the successor if the predecessor will be merged with it.\n\t* tree-cfg.c (gimple_can_merge_blocks_p): We can't merge the\n\tentry block with its successor.\n\nFrom-SVN: r221410", "tree": {"sha": "8fc2a2876c706f677325a184d1ccf5c45ac26b51", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8fc2a2876c706f677325a184d1ccf5c45ac26b51"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2aa26a5543cfd6fc2c03051d532f778da8318e9b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2aa26a5543cfd6fc2c03051d532f778da8318e9b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2aa26a5543cfd6fc2c03051d532f778da8318e9b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2aa26a5543cfd6fc2c03051d532f778da8318e9b/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2a5671ee800de5ace6b9d78cd47de73a04d92fa8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a5671ee800de5ace6b9d78cd47de73a04d92fa8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a5671ee800de5ace6b9d78cd47de73a04d92fa8"}], "stats": {"total": 38, "additions": 30, "deletions": 8}, "files": [{"sha": "3f24ed8d5690db71cca0cacbc73c094ee850ebe1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2aa26a5543cfd6fc2c03051d532f778da8318e9b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2aa26a5543cfd6fc2c03051d532f778da8318e9b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2aa26a5543cfd6fc2c03051d532f778da8318e9b", "patch": "@@ -1,3 +1,13 @@\n+2015-03-12  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/44563\n+\t* tree-inline.c (gimple_expand_calls_inline): Walk BB backwards\n+\tto avoid quadratic behavior with inline expansion splitting blocks.\n+\t* tree-cfgcleanup.c (cleanup_tree_cfg_bb): Do not merge block\n+\twith the successor if the predecessor will be merged with it.\n+\t* tree-cfg.c (gimple_can_merge_blocks_p): We can't merge the\n+\tentry block with its successor.\n+\n 2015-03-13  Richard Biener  <rguenther@suse.de>\n \n \tPR middle-end/44563"}, {"sha": "0f5e428124c71bd7c91e8e36ece4d87bf8dd455e", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2aa26a5543cfd6fc2c03051d532f778da8318e9b/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2aa26a5543cfd6fc2c03051d532f778da8318e9b/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=2aa26a5543cfd6fc2c03051d532f778da8318e9b", "patch": "@@ -1703,7 +1703,8 @@ gimple_can_merge_blocks_p (basic_block a, basic_block b)\n   if (!single_pred_p (b))\n     return false;\n \n-  if (b == EXIT_BLOCK_PTR_FOR_FN (cfun))\n+  if (a == ENTRY_BLOCK_PTR_FOR_FN (cfun)\n+      || b == EXIT_BLOCK_PTR_FOR_FN (cfun))\n     return false;\n \n   /* If A ends by a statement causing exceptions or something similar, we"}, {"sha": "e7122e33c2882250da0d4a9d390f339509d2c20c", "filename": "gcc/tree-cfgcleanup.c", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2aa26a5543cfd6fc2c03051d532f778da8318e9b/gcc%2Ftree-cfgcleanup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2aa26a5543cfd6fc2c03051d532f778da8318e9b/gcc%2Ftree-cfgcleanup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfgcleanup.c?ref=2aa26a5543cfd6fc2c03051d532f778da8318e9b", "patch": "@@ -650,8 +650,18 @@ cleanup_tree_cfg_bb (basic_block bb)\n   if (single_succ_p (bb)\n       && can_merge_blocks_p (bb, single_succ (bb)))\n     {\n-      merge_blocks (bb, single_succ (bb));\n-      return true;\n+      /* If there is a merge opportunity with the predecessor\n+         do nothing now but wait until we process the predecessor.\n+\t This happens when we visit BBs in a non-optimal order and\n+\t avoids quadratic behavior with adjusting stmts BB pointer.  */\n+      if (single_pred_p (bb)\n+\t  && can_merge_blocks_p (single_pred (bb), bb))\n+\t;\n+      else\n+\t{\n+\t  merge_blocks (bb, single_succ (bb));\n+\t  return true;\n+\t}\n     }\n \n   return retval;"}, {"sha": "83e43356f60b44678acdf6c686e7d1c425097055", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2aa26a5543cfd6fc2c03051d532f778da8318e9b/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2aa26a5543cfd6fc2c03051d532f778da8318e9b/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=2aa26a5543cfd6fc2c03051d532f778da8318e9b", "patch": "@@ -4779,18 +4779,19 @@ static bool\n gimple_expand_calls_inline (basic_block bb, copy_body_data *id)\n {\n   gimple_stmt_iterator gsi;\n+  bool inlined = false;\n \n-  for (gsi = gsi_start_bb (bb); !gsi_end_p (gsi); gsi_next (&gsi))\n+  for (gsi = gsi_last_bb (bb); !gsi_end_p (gsi);)\n     {\n       gimple stmt = gsi_stmt (gsi);\n+      gsi_prev (&gsi);\n \n       if (is_gimple_call (stmt)\n-\t  && !gimple_call_internal_p (stmt)\n-\t  && expand_call_inline (bb, stmt, id))\n-\treturn true;\n+\t  && !gimple_call_internal_p (stmt))\n+\tinlined |= expand_call_inline (bb, stmt, id);\n     }\n \n-  return false;\n+  return inlined;\n }\n \n "}]}