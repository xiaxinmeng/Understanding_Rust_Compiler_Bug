{"sha": "b55fbca39ee2568d007ce835f7684f3d2ec2e986", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjU1ZmJjYTM5ZWUyNTY4ZDAwN2NlODM1Zjc2ODRmM2QyZWMyZTk4Ng==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2018-05-18T11:54:37Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2018-05-18T11:54:37Z"}, "message": "gimple-ssa-evrp.c (class evrp_folder): Add simplify_stmt_using_ranges method.\n\n2018-05-18  Richard Biener  <rguenther@suse.de>\n\n\t* gimple-ssa-evrp.c (class evrp_folder): Add simplify_stmt_using_ranges\n\tmethod.\n\t(evrp_dom_walker::before_dom_children): Call it.\n\n\t* gcc.dg/tree-ssa/pr21559.c: Adjust.\n\t* gcc.dg/tree-ssa/pr45397.c: Likewise.\n\t* gcc.dg/tree-ssa/pr61839_1.c: Likewise.\n\t* gcc.dg/tree-ssa/pr61839_2.c: Likewise.\n\t* gcc.dg/tree-ssa/pr61839_4.c: Likewise.\n\t* gcc.dg/tree-ssa/vrp17.c: Likewise.\n\t* gcc.dg/tree-ssa/vrp18.c: Likewise.\n\t* gcc.dg/tree-ssa/vrp23.c: Likewise.\n\t* gcc.dg/tree-ssa/vrp24.c: Likewise.\n\t* gcc.dg/tree-ssa/vrp58.c: Likewise.\n\t* gcc.dg/vrp-min-max-1.c: Likewise.\n\t* gcc.dg/vrp-min-max-3.c: New testcase.\n\nFrom-SVN: r260357", "tree": {"sha": "4d007324c8edb4387099ef7b0c12aff3b035a3e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4d007324c8edb4387099ef7b0c12aff3b035a3e2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b55fbca39ee2568d007ce835f7684f3d2ec2e986", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b55fbca39ee2568d007ce835f7684f3d2ec2e986", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b55fbca39ee2568d007ce835f7684f3d2ec2e986", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b55fbca39ee2568d007ce835f7684f3d2ec2e986/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6b9fc1782effc67dd9f6def16207653d79647553", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b9fc1782effc67dd9f6def16207653d79647553", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b9fc1782effc67dd9f6def16207653d79647553"}], "stats": {"total": 93, "additions": 75, "deletions": 18}, "files": [{"sha": "4795777850b93d9723d032d49c411fc1b2ceea54", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b55fbca39ee2568d007ce835f7684f3d2ec2e986/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b55fbca39ee2568d007ce835f7684f3d2ec2e986/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b55fbca39ee2568d007ce835f7684f3d2ec2e986", "patch": "@@ -1,3 +1,9 @@\n+2018-05-18  Richard Biener  <rguenther@suse.de>\n+\n+\t* gimple-ssa-evrp.c (class evrp_folder): Add simplify_stmt_using_ranges\n+\tmethod.\n+\t(evrp_dom_walker::before_dom_children): Call it.\n+\n 2018-05-18  Richard Biener  <rguenther@suse.de>\n \n \t* tree-dfa.c (get_ref_base_and_extent): Use range-info to refine"}, {"sha": "b9a054fd2ee5c63cc66db44ba5a9b778ed38d36d", "filename": "gcc/gimple-ssa-evrp.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b55fbca39ee2568d007ce835f7684f3d2ec2e986/gcc%2Fgimple-ssa-evrp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b55fbca39ee2568d007ce835f7684f3d2ec2e986/gcc%2Fgimple-ssa-evrp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-ssa-evrp.c?ref=b55fbca39ee2568d007ce835f7684f3d2ec2e986", "patch": "@@ -47,6 +47,8 @@ class evrp_folder : public substitute_and_fold_engine\n  public:\n   tree get_value (tree) FINAL OVERRIDE;\n   evrp_folder (class vr_values *vr_values_) : vr_values (vr_values_) { }\n+  bool simplify_stmt_using_ranges (gimple_stmt_iterator *gsi)\n+    { return vr_values->simplify_stmt_using_ranges (gsi); }\n   class vr_values *vr_values;\n \n  private:\n@@ -180,6 +182,12 @@ evrp_dom_walker::before_dom_children (basic_block bb)\n \t  update_stmt (stmt);\n \t  did_replace = true;\n \t}\n+      if (evrp_folder.simplify_stmt_using_ranges (&gsi))\n+\t{\n+\t  stmt = gsi_stmt (gsi);\n+\t  update_stmt (stmt);\n+\t  did_replace = true;\n+\t}\n \n       if (did_replace)\n \t{"}, {"sha": "185ce2fb6c3b3be9e991d01edd737915d0840821", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b55fbca39ee2568d007ce835f7684f3d2ec2e986/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b55fbca39ee2568d007ce835f7684f3d2ec2e986/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b55fbca39ee2568d007ce835f7684f3d2ec2e986", "patch": "@@ -1,3 +1,18 @@\n+2018-05-18  Richard Biener  <rguenther@suse.de>\n+\n+\t* gcc.dg/tree-ssa/pr21559.c: Adjust.\n+\t* gcc.dg/tree-ssa/pr45397.c: Likewise.\n+\t* gcc.dg/tree-ssa/pr61839_1.c: Likewise.\n+\t* gcc.dg/tree-ssa/pr61839_2.c: Likewise.\n+\t* gcc.dg/tree-ssa/pr61839_4.c: Likewise.\n+\t* gcc.dg/tree-ssa/vrp17.c: Likewise.\n+\t* gcc.dg/tree-ssa/vrp18.c: Likewise.\n+\t* gcc.dg/tree-ssa/vrp23.c: Likewise.\n+\t* gcc.dg/tree-ssa/vrp24.c: Likewise.\n+\t* gcc.dg/tree-ssa/vrp58.c: Likewise.\n+\t* gcc.dg/vrp-min-max-1.c: Likewise.\n+\t* gcc.dg/vrp-min-max-3.c: New testcase.\n+\n 2018-05-18  Richard Biener  <rguenther@suse.de>\n \n \t* gcc.dg/tree-ssa/ssa-dse-35.c: New testcase."}, {"sha": "b4065668ff8f684a45fbd49283da50cc5a6dae9c", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr21559.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b55fbca39ee2568d007ce835f7684f3d2ec2e986/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr21559.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b55fbca39ee2568d007ce835f7684f3d2ec2e986/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr21559.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr21559.c?ref=b55fbca39ee2568d007ce835f7684f3d2ec2e986", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -fdump-tree-vrp1-details\" } */\n+/* { dg-options \"-O2 -fdump-tree-evrp-details -fdump-tree-vrp1-details\" } */\n \n static int blocksize = 4096;\n \n@@ -33,7 +33,7 @@ void foo (void)\n \n \n /* First, we should simplify the bits < 0 test within the loop.  */\n-/* { dg-final { scan-tree-dump-times \"Simplified relational\" 1 \"vrp1\" } } */\n+/* { dg-final { scan-tree-dump-times \"Simplified relational\" 1 \"evrp\" } } */\n \n /* Second, we should thread the edge out of the loop via the break\n    statement.  We also realize that the final bytes == 0 test is useless,"}, {"sha": "af75a75b1e2bce385d234a4304dfa4da2d99e277", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr45397.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b55fbca39ee2568d007ce835f7684f3d2ec2e986/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr45397.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b55fbca39ee2568d007ce835f7684f3d2ec2e986/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr45397.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr45397.c?ref=b55fbca39ee2568d007ce835f7684f3d2ec2e986", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -fdump-tree-phiopt1\" } */\n+/* { dg-options \"-O2 -fdump-tree-phiopt1 -fdump-tree-evrp\" } */\n \n int foo_add (const unsigned char *tmp, int i, int val)\n {\n@@ -18,6 +18,7 @@ int foo_mul (const unsigned char *tmp, int i, int val)\n \n /* All cases should end up using min/max for the saturated operations and\n    have no control flow.  */\n+/* { dg-final { scan-tree-dump-not \" & 255;\" \"evrp\" } } */\n /* { dg-final { scan-tree-dump-times \"MAX_EXPR\" 3 \"phiopt1\" } } */\n /* { dg-final { scan-tree-dump-times \"MIN_EXPR\" 3 \"phiopt1\" } } */\n /* { dg-final { scan-tree-dump-not \"if \" \"phiopt1\" } } */"}, {"sha": "d44c7dc188219b227a9e3ec7725ad288bf23e10e", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr61839_1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b55fbca39ee2568d007ce835f7684f3d2ec2e986/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr61839_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b55fbca39ee2568d007ce835f7684f3d2ec2e986/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr61839_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr61839_1.c?ref=b55fbca39ee2568d007ce835f7684f3d2ec2e986", "patch": "@@ -1,6 +1,6 @@\n /* PR tree-optimization/61839.  */\n /* { dg-do run } */\n-/* { dg-options \"-O2 -fdump-tree-vrp1 -fdump-tree-optimized\" } */\n+/* { dg-options \"-O2 -fdump-tree-vrp1 -fdisable-tree-evrp -fdump-tree-optimized\" } */\n /* { dg-require-effective-target int32plus } */\n \n __attribute__ ((noinline))"}, {"sha": "cfec54de991c20528e30e57e15712ef7cd976d59", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr61839_2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b55fbca39ee2568d007ce835f7684f3d2ec2e986/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr61839_2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b55fbca39ee2568d007ce835f7684f3d2ec2e986/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr61839_2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr61839_2.c?ref=b55fbca39ee2568d007ce835f7684f3d2ec2e986", "patch": "@@ -51,4 +51,4 @@ int bar2 ()\n /* Dont optimize 972195717 % 0 in function bar.  */\n /* { dg-final { scan-tree-dump-times \"972195717 % \" 1 \"evrp\" } } */\n /* May optimize in function bar2, but EVRP doesn't perform this yet.  */\n-/* { dg-final { scan-tree-dump-times \"972195715 % \" 0 \"evrp\" { xfail *-*-* } } } */\n+/* { dg-final { scan-tree-dump-times \"972195715 % \" 0 \"evrp\" } } */"}, {"sha": "a346912d12167de3d36ee4d29297095a8236332d", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr61839_4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b55fbca39ee2568d007ce835f7684f3d2ec2e986/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr61839_4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b55fbca39ee2568d007ce835f7684f3d2ec2e986/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr61839_4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr61839_4.c?ref=b55fbca39ee2568d007ce835f7684f3d2ec2e986", "patch": "@@ -1,6 +1,6 @@\n /* PR tree-optimization/61839.  */\n /* { dg-do run } */\n-/* { dg-options \"-O2 -fdump-tree-vrp1 -fdump-tree-optimized\" } */\n+/* { dg-options \"-O2 -fdump-tree-vrp1 -fdisable-tree-evrp -fdump-tree-optimized\" } */\n /* { dg-require-effective-target int32plus } */\n \n __attribute__ ((noinline))"}, {"sha": "b8470e7a3dbeb413859c68e93488b783baff1e0b", "filename": "gcc/testsuite/gcc.dg/tree-ssa/vrp17.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b55fbca39ee2568d007ce835f7684f3d2ec2e986/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp17.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b55fbca39ee2568d007ce835f7684f3d2ec2e986/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp17.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp17.c?ref=b55fbca39ee2568d007ce835f7684f3d2ec2e986", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -fdump-tree-vrp1\" } */\n+/* { dg-options \"-O2 -fdump-tree-evrp\" } */\n \n extern void abort (void) __attribute__ ((__noreturn__));\n union tree_node;\n@@ -27,5 +27,5 @@ gimplify_for_stmt (tree stmt)\n     abort ();\n }\n \n-/* { dg-final { scan-tree-dump-times \"Simplified relational\" 1 \"vrp1\" } } */\n+/* { dg-final { scan-tree-dump-times \"Simplified relational\" 1 \"evrp\" } } */\n "}, {"sha": "d7ab3f69f3798731a26b6e5cf2265576dd83f954", "filename": "gcc/testsuite/gcc.dg/tree-ssa/vrp18.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b55fbca39ee2568d007ce835f7684f3d2ec2e986/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp18.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b55fbca39ee2568d007ce835f7684f3d2ec2e986/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp18.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp18.c?ref=b55fbca39ee2568d007ce835f7684f3d2ec2e986", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -fdump-tree-vrp1\" } */\n+/* { dg-options \"-O2 -fdump-tree-evrp\" } */\n \n static int blocksize = 4096;\n \n@@ -30,4 +30,4 @@ void foo (void)\n     eof_reached = 1;\n }\n \n-/* { dg-final { scan-tree-dump-times \"Simplified relational\" 1 \"vrp1\" } } */\n+/* { dg-final { scan-tree-dump-times \"Simplified relational\" 1 \"evrp\" } } */"}, {"sha": "6ac8d55600d21ac359d13524999b38551dccd280", "filename": "gcc/testsuite/gcc.dg/tree-ssa/vrp23.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b55fbca39ee2568d007ce835f7684f3d2ec2e986/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp23.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b55fbca39ee2568d007ce835f7684f3d2ec2e986/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp23.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp23.c?ref=b55fbca39ee2568d007ce835f7684f3d2ec2e986", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -fno-tree-forwprop -fdump-tree-vrp1-details\" } */\n+/* { dg-options \"-O2 -fno-tree-forwprop -fdump-tree-evrp-details\" } */\n \n void aa (void);\n void aos (void);\n@@ -45,5 +45,5 @@ blah (int code1, int code2)\n /* The n_sets > 0 test can be simplified into n_sets == 1 since the\n    only way to reach the test is when n_sets <= 1, and the only value\n    which satisfies both conditions is n_sets == 1.  */\n-/* { dg-final { scan-tree-dump-times \"Simplified relational\" 1 \"vrp1\" } } */\n+/* { dg-final { scan-tree-dump-times \"Simplified relational\" 1 \"evrp\" } } */\n "}, {"sha": "dfe44b30649a3600bb106de3bc0c799d3d0492fa", "filename": "gcc/testsuite/gcc.dg/tree-ssa/vrp24.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b55fbca39ee2568d007ce835f7684f3d2ec2e986/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp24.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b55fbca39ee2568d007ce835f7684f3d2ec2e986/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp24.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp24.c?ref=b55fbca39ee2568d007ce835f7684f3d2ec2e986", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -fno-tree-forwprop -fdump-tree-vrp1-details -fdump-tree-optimized\" } */\n+/* { dg-options \"-O2 -fno-tree-forwprop -fdump-tree-evrp-details -fdump-tree-optimized\" } */\n \n \n struct rtx_def;\n@@ -88,6 +88,6 @@ sss (rtx insn, int code1, int code2, int code3)\n    n_sets can only have the values [0, 1] as it's the result of a\n    boolean operation.  */\n \n-/* { dg-final { scan-tree-dump-times \"Simplified relational\" 1 \"vrp1\" } } */\n+/* { dg-final { scan-tree-dump-times \"Simplified relational\" 2 \"evrp\" } } */\n /* { dg-final { scan-tree-dump-times \"if \" 4 \"optimized\" } } */\n "}, {"sha": "b64a2df8f33009e85b12bf593bec12b313a34636", "filename": "gcc/testsuite/gcc.dg/tree-ssa/vrp58.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b55fbca39ee2568d007ce835f7684f3d2ec2e986/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp58.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b55fbca39ee2568d007ce835f7684f3d2ec2e986/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp58.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp58.c?ref=b55fbca39ee2568d007ce835f7684f3d2ec2e986", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -fdump-tree-vrp1-details\" } */\n+/* { dg-options \"-O2 -fdump-tree-cddce1\" } */\n \n long long\n foo (long long a, signed char b, signed char c)\n@@ -8,5 +8,5 @@ foo (long long a, signed char b, signed char c)\n   return a + (short)bc;\n }\n \n-/* { dg-final { scan-tree-dump \"Folded into\" \"vrp1\" { target int32plus } } } */\n-/* { dg-final { scan-tree-dump \"Folding statement: _\\[0-9\\]\\* = \\\\(long long int\\\\) bc_\\[0-9\\]\\*;\" \"vrp1\" { target int16 } } } */\n+/* EVRP should remove the truncation to short, keeping (long long)bc.  */\n+/* { dg-final { scan-tree-dump-not \"short\" \"cddce1\" { target int32plus } } } */"}, {"sha": "b9c8379c832b5a3628f599bc50903d5a9219e5e7", "filename": "gcc/testsuite/gcc.dg/vrp-min-max-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b55fbca39ee2568d007ce835f7684f3d2ec2e986/gcc%2Ftestsuite%2Fgcc.dg%2Fvrp-min-max-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b55fbca39ee2568d007ce835f7684f3d2ec2e986/gcc%2Ftestsuite%2Fgcc.dg%2Fvrp-min-max-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvrp-min-max-1.c?ref=b55fbca39ee2568d007ce835f7684f3d2ec2e986", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -fdump-tree-vrp1 -fdump-tree-mergephi2\" } */\n+/* { dg-options \"-O2 -fdump-tree-vrp1 -fdisable-tree-evrp -fdump-tree-mergephi2\" } */\n \n int bar (void);\n "}, {"sha": "1fffee7bbd97da7e66393151442f88095a04f515", "filename": "gcc/testsuite/gcc.dg/vrp-min-max-3.c", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b55fbca39ee2568d007ce835f7684f3d2ec2e986/gcc%2Ftestsuite%2Fgcc.dg%2Fvrp-min-max-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b55fbca39ee2568d007ce835f7684f3d2ec2e986/gcc%2Ftestsuite%2Fgcc.dg%2Fvrp-min-max-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvrp-min-max-3.c?ref=b55fbca39ee2568d007ce835f7684f3d2ec2e986", "patch": "@@ -0,0 +1,27 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-tree-evrp -fdump-tree-fre1\" } */\n+\n+int bar (void);\n+\n+int foo1 (int x, int y)\n+{\n+  if (y < 10) return bar ();\n+  if (x > 9) return bar ();\n+\n+  return x < y ? x : y;\n+}\n+\n+int foo2 (int x, int y)\n+{\n+  if (y < 10) return bar ();\n+  if (x > 9) return bar ();\n+\n+  return x > y ? x : y;\n+}\n+\n+/* We expect to optimiz min/max in EVRP */\n+\n+/* { dg-final { scan-tree-dump-times \"MIN_EXPR\" 1 \"fre1\" } } */\n+/* { dg-final { scan-tree-dump-times \"MAX_EXPR\" 1 \"fre1\" } } */\n+/* { dg-final { scan-tree-dump-not \"MIN_EXPR\" \"evrp\" } } */\n+/* { dg-final { scan-tree-dump-not \"MAX_EXPR\" \"evrp\" } } */"}]}