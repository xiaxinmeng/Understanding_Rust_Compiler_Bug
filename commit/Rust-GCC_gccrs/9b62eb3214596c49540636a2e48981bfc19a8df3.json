{"sha": "9b62eb3214596c49540636a2e48981bfc19a8df3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWI2MmViMzIxNDU5NmM0OTU0MDYzNmEyZTQ4OTgxYmZjMTlhOGRmMw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-10-13T11:05:50Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-10-13T11:05:50Z"}, "message": "[multiple changes]\n\n2011-10-13  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_util.ads, sem_util.adb (Available_Full_View_Of_Component):\n\tNew predicate to determine whether some operations on an array\n\ttype are available when the full view of its component may differ\n\tfrom the view of the point of the array declaration.\n\t* sem_ch4.adb (Find_Equality_Types): Use\n\tAvailable_Full_View_Of_Component.\n\t* sem_type.adb (Valid_Boolean_Arg, Valid_Comparison_Arg): Ditto\n\n2011-10-13  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch9.adb: Analyze aspects while discriminants of protected\n\ttype are visible.\n\n2011-10-13  Geert Bosch  <bosch@adacore.com>\n\n\t* Makefile.rtl (GNATRTL_TASKING_OBJECTS): Add\n\ta-nlcoar.o, a-nllcar.o, a-nucoar.o and s-gearop.o, as these no\n\tlonger depend on an external library.\n\t* gcc-interface/Makefile.in (GNATRTL_LINEARALGEBRA_OBJS): Remove\n\ta-nlcoar.o, a-nllcar.o, a-nucoar.o and s-gearop.o.\n\tUpdate dependencies.\n\t* gcc-interface/Make-lang.in: Update dependencies.\n\nFrom-SVN: r179914", "tree": {"sha": "bd67117b4d54df74f1b16e417260bcc028e773d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bd67117b4d54df74f1b16e417260bcc028e773d5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9b62eb3214596c49540636a2e48981bfc19a8df3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b62eb3214596c49540636a2e48981bfc19a8df3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b62eb3214596c49540636a2e48981bfc19a8df3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b62eb3214596c49540636a2e48981bfc19a8df3/comments", "author": null, "committer": null, "parents": [{"sha": "1a36a0cd695e3254367fc01d371ae23f3d3f50fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a36a0cd695e3254367fc01d371ae23f3d3f50fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a36a0cd695e3254367fc01d371ae23f3d3f50fa"}], "stats": {"total": 150, "additions": 117, "deletions": 33}, "files": [{"sha": "7ce57e979bb332f3b61e34795039b7c70b5cf2e5", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b62eb3214596c49540636a2e48981bfc19a8df3/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b62eb3214596c49540636a2e48981bfc19a8df3/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=9b62eb3214596c49540636a2e48981bfc19a8df3", "patch": "@@ -1,3 +1,28 @@\n+2011-10-13  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_util.ads, sem_util.adb (Available_Full_View_Of_Component):\n+\tNew predicate to determine whether some operations on an array\n+\ttype are available when the full view of its component may differ\n+\tfrom the view of the point of the array declaration.\n+\t* sem_ch4.adb (Find_Equality_Types): Use\n+\tAvailable_Full_View_Of_Component.\n+\t* sem_type.adb (Valid_Boolean_Arg, Valid_Comparison_Arg): Ditto\n+\n+2011-10-13  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch9.adb: Analyze aspects while discriminants of protected\n+\ttype are visible.\n+\n+2011-10-13  Geert Bosch  <bosch@adacore.com>\n+\n+\t* Makefile.rtl (GNATRTL_TASKING_OBJECTS): Add\n+\ta-nlcoar.o, a-nllcar.o, a-nucoar.o and s-gearop.o, as these no\n+\tlonger depend on an external library.\n+\t* gcc-interface/Makefile.in (GNATRTL_LINEARALGEBRA_OBJS): Remove\n+\ta-nlcoar.o, a-nllcar.o, a-nucoar.o and s-gearop.o.\n+\tUpdate dependencies.\n+\t* gcc-interface/Make-lang.in: Update dependencies. \n+\n 2011-10-13  Cyrille Comar  <comar@adacore.com>\n \n \t* gnat_ugn.texi: Minor editing."}, {"sha": "d70583c52052a95742820cabb75906642b060736", "filename": "gcc/ada/Makefile.rtl", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b62eb3214596c49540636a2e48981bfc19a8df3/gcc%2Fada%2FMakefile.rtl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b62eb3214596c49540636a2e48981bfc19a8df3/gcc%2Fada%2FMakefile.rtl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMakefile.rtl?ref=9b62eb3214596c49540636a2e48981bfc19a8df3", "patch": "@@ -189,24 +189,27 @@ GNATRTL_NONTASKING_OBJS= \\\n   a-ngcoty$(objext) \\\n   a-ngelfu$(objext) \\\n   a-ngrear$(objext) \\\n-  a-nllrar$(objext) \\\n-  a-nlrear$(objext) \\\n-  a-nurear$(objext) \\\n   a-nlcefu$(objext) \\\n+  a-nlcoar$(objext) \\\n   a-nlcoty$(objext) \\\n   a-nlelfu$(objext) \\\n+  a-nlrear$(objext) \\\n+  a-nllcar$(objext) \\\n   a-nllcef$(objext) \\\n   a-nllcty$(objext) \\\n   a-nllefu$(objext) \\\n+  a-nllrar$(objext) \\\n   a-nscefu$(objext) \\\n   a-nscoty$(objext) \\\n   a-nselfu$(objext) \\\n+  a-nucoar$(objext) \\\n   a-nucoty$(objext) \\\n   a-nudira$(objext) \\\n   a-nuelfu$(objext) \\\n   a-nuflra$(objext) \\\n   a-numaux$(objext) \\\n   a-numeri$(objext) \\\n+  a-nurear$(objext) \\\n   a-rbtgbo$(objext) \\\n   a-rbtgbk$(objext) \\\n   a-rbtgso$(objext) \\\n@@ -515,6 +518,7 @@ GNATRTL_NONTASKING_OBJS= \\\n   s-fvadfl$(objext) \\\n   s-fvaffl$(objext) \\\n   s-fvagfl$(objext) \\\n+  s-gearop$(objext) \\\n   s-geveop$(objext) \\\n   s-gloloc$(objext) \\\n   s-htable$(objext) \\"}, {"sha": "81e14f20c34d8546d99cfabfd9de16b8c187de0b", "filename": "gcc/ada/gcc-interface/Make-lang.in", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b62eb3214596c49540636a2e48981bfc19a8df3/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b62eb3214596c49540636a2e48981bfc19a8df3/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMake-lang.in?ref=9b62eb3214596c49540636a2e48981bfc19a8df3", "patch": "@@ -3710,9 +3710,9 @@ ada/sem_aggr.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/lib-list.adb ada/lib-load.ads ada/lib-sort.adb ada/lib-util.ads \\\n    ada/lib-xref.ads ada/namet.ads ada/namet.adb ada/namet-sp.ads \\\n    ada/nlists.ads ada/nlists.adb ada/nmake.ads ada/nmake.adb ada/opt.ads \\\n-   ada/output.ads ada/par_sco.ads ada/put_alfa.ads ada/restrict.ads \\\n-   ada/restrict.adb ada/rident.ads ada/rtsfind.ads ada/scans.ads \\\n-   ada/sem.ads ada/sem.adb ada/sem_aggr.ads ada/sem_aggr.adb \\\n+   ada/opt.adb ada/output.ads ada/par_sco.ads ada/put_alfa.ads \\\n+   ada/restrict.ads ada/restrict.adb ada/rident.ads ada/rtsfind.ads \\\n+   ada/scans.ads ada/sem.ads ada/sem.adb ada/sem_aggr.ads ada/sem_aggr.adb \\\n    ada/sem_attr.ads ada/sem_aux.ads ada/sem_aux.adb ada/sem_cat.ads \\\n    ada/sem_ch10.ads ada/sem_ch11.ads ada/sem_ch12.ads ada/sem_ch13.ads \\\n    ada/sem_ch13.adb ada/sem_ch2.ads ada/sem_ch3.ads ada/sem_ch4.ads \\"}, {"sha": "160a15e013cd359dfb1ac7f9ae5cbceb4f3cd4f1", "filename": "gcc/ada/gcc-interface/Makefile.in", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b62eb3214596c49540636a2e48981bfc19a8df3/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b62eb3214596c49540636a2e48981bfc19a8df3/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMakefile.in?ref=9b62eb3214596c49540636a2e48981bfc19a8df3", "patch": "@@ -573,6 +573,8 @@ ifeq ($(strip $(filter-out e500% powerpc% wrs vxworks,$(targ))),)\n         endif\n       endif\n       EXTRA_GNATRTL_NONTASKING_OBJS=i-vxwork.o i-vxwoio.o s-vxwexc.o\n+      EXTRA_LIBGNAT_OBJS+=sigtramp-ppcvxw.o\n+      EXTRA_LIBGNAT_SRCS+=sigtramp-ppcvxw.c\n     endif\n   endif\n \n@@ -617,6 +619,9 @@ ifeq ($(strip $(filter-out powerpc% e500v2 wrs vxworksae,$(targ))),)\n   EXTRA_GNATRTL_NONTASKING_OBJS=i-vxwork.o i-vxwoio.o s-vxwexc.o\n   EXTRA_GNATRTL_TASKING_OBJS=s-vxwork.o s-vxwext.o\n \n+  EXTRA_LIBGNAT_SRCS+=sigtramp-ppcvxw.c\n+  EXTRA_LIBGNAT_OBJS+=sigtramp-ppcvxw.o\n+\n   # Extra pairs for the vthreads runtime\n   ifeq ($(strip $(filter-out vthreads,$(THREAD_KIND))),)\n     LIBGNAT_TARGET_PAIRS += \\\n@@ -679,8 +684,8 @@ ifeq ($(strip $(filter-out e500% powerpc% wrs vxworksmils,$(targ))),)\n   EXTRA_GNATRTL_NONTASKING_OBJS=i-vxwork.o i-vxwoio.o s-thread.o s-vxwexc.o\n   EXTRA_GNATRTL_TASKING_OBJS=s-vxwork.o s-vxwext.o\n \n-  EXTRA_LIBGNAT_SRCS+=vx_stack_info.c\n-  EXTRA_LIBGNAT_OBJS+=vx_stack_info.o\n+  EXTRA_LIBGNAT_SRCS+=vx_stack_info.c sigtramp-ppcvxw.c\n+  EXTRA_LIBGNAT_OBJS+=vx_stack_info.o sigtramp-ppcvxw.o\n   GNATRTL_SOCKETS_OBJS =\n \n   ifeq ($(strip $(filter-out yes,$(TRACE))),)\n@@ -2229,11 +2234,10 @@ LIBGNAT_OBJS = adadecode.o adaint.o argv.o cio.o cstreams.o ctrl_c.o\t\\\n \n include $(fsrcdir)/ada/Makefile.rtl\n \n-GNATRTL_LINEARALGEBRA_OBJS = a-nlcoar.o a-nllcar.o \\\n-  a-nucoar.o i-forbla.o i-forlap.o s-gearop.o\n+GNATRTL_LINEARALGEBRA_OBJS = i-forbla.o i-forlap.o\n \n GNATRTL_OBJS = $(GNATRTL_NONTASKING_OBJS) $(GNATRTL_TASKING_OBJS) \\\n-  $(GNATRTL_LINEARALGEBRA_OBJS) g-trasym.o memtrack.o\n+  $(GNATRTL_LINEARALGEBRA_OBJS) memtrack.o\n \n # Default run time files\n \n@@ -2413,7 +2417,6 @@ install-gnatlib: ../stamp-gnatlib-$(RTSDIR)\n \tfor file in $(RTSDIR)/*.ali; do \\\n \t    $(INSTALL_DATA_DATE) $$file $(DESTDIR)$(ADA_RTL_OBJ_DIR); \\\n \tdone\n-\t-$(INSTALL_DATA) $(RTSDIR)/g-trasym$(objext) $(DESTDIR)$(ADA_RTL_OBJ_DIR)\n \t-cd $(RTSDIR); for file in *$(arext);do \\\n \t    $(INSTALL_DATA) $$file $(DESTDIR)$(ADA_RTL_OBJ_DIR); \\\n \t    $(RANLIB_FOR_TARGET) $(DESTDIR)$(ADA_RTL_OBJ_DIR)/$$file; \\\n@@ -2835,6 +2838,7 @@ mkdir.o   : mkdir.c\n socket.o  : socket.c gsocket.h\n sysdep.o  : sysdep.c\n raise.o   : raise.c raise.h\n+sigtramp-ppcvxw.o : sigtramp-ppcvxw.c sigtramp.h\n vx_stack_info.o : vx_stack_info.c\n \n raise-gcc.o : raise-gcc.c raise.h"}, {"sha": "8fc504525199185f1c32ef5d5a70bab788eb53d9", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b62eb3214596c49540636a2e48981bfc19a8df3/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b62eb3214596c49540636a2e48981bfc19a8df3/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=9b62eb3214596c49540636a2e48981bfc19a8df3", "patch": "@@ -5548,9 +5548,15 @@ package body Sem_Ch4 is\n          end if;\n \n          if T1 /= Standard_Void_Type\n-           and then not Is_Limited_Type (T1)\n-           and then not Is_Limited_Composite (T1)\n            and then Has_Compatible_Type (R, T1)\n+           and then\n+             ((not Is_Limited_Type (T1)\n+                and then not Is_Limited_Composite (T1))\n+\n+               or else\n+                (Is_Array_Type (T1)\n+                   and then not Is_Limited_Type (Component_Type (T1))\n+                   and then Available_Full_View_Of_Component (T1)))\n          then\n             if Found\n               and then Base_Type (T1) /= Base_Type (T_F)"}, {"sha": "3677a7b25dacf28af35eb1fd9e676631eab8056c", "filename": "gcc/ada/sem_ch9.adb", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b62eb3214596c49540636a2e48981bfc19a8df3/gcc%2Fada%2Fsem_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b62eb3214596c49540636a2e48981bfc19a8df3/gcc%2Fada%2Fsem_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch9.adb?ref=9b62eb3214596c49540636a2e48981bfc19a8df3", "patch": "@@ -1163,7 +1163,11 @@ package body Sem_Ch9 is\n    begin\n       if No_Run_Time_Mode then\n          Error_Msg_CRT (\"protected type\", N);\n-         goto Leave;\n+         if Has_Aspects (N) then\n+            Analyze_Aspect_Specifications (N, Def_Id);\n+         end if;\n+\n+         return;\n       end if;\n \n       Tasking_Used := True;\n@@ -1256,6 +1260,13 @@ package body Sem_Ch9 is\n          Next_Entity (E);\n       end loop;\n \n+      --  If aspects are present, analyze them now. They can make references\n+      --  to the discriminants of the type.\n+\n+      if Has_Aspects (N) then\n+         Analyze_Aspect_Specifications (N, Def_Id);\n+      end if;\n+\n       End_Scope;\n \n       --  Case of a completion of a private declaration\n@@ -1287,11 +1298,6 @@ package body Sem_Ch9 is\n             Process_Full_View (N, T, Def_Id);\n          end if;\n       end if;\n-\n-   <<Leave>>\n-      if Has_Aspects (N) then\n-         Analyze_Aspect_Specifications (N, Def_Id);\n-      end if;\n    end Analyze_Protected_Type_Declaration;\n \n    ---------------------"}, {"sha": "c391163ea4b5067e6b5d1bb7f006e541710df03c", "filename": "gcc/ada/sem_type.adb", "status": "modified", "additions": 31, "deletions": 11, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b62eb3214596c49540636a2e48981bfc19a8df3/gcc%2Fada%2Fsem_type.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b62eb3214596c49540636a2e48981bfc19a8df3/gcc%2Fada%2Fsem_type.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_type.adb?ref=9b62eb3214596c49540636a2e48981bfc19a8df3", "patch": "@@ -3372,18 +3372,28 @@ package body Sem_Type is\n \n    function Valid_Boolean_Arg (T : Entity_Id) return Boolean is\n    begin\n-      return Is_Boolean_Type (T)\n-        or else T = Any_Composite\n-        or else (Is_Array_Type (T)\n-                  and then T /= Any_String\n-                  and then Number_Dimensions (T) = 1\n-                  and then Is_Boolean_Type (Component_Type (T))\n-                  and then (not Is_Private_Composite (T)\n-                             or else In_Instance)\n-                  and then (not Is_Limited_Composite (T)\n-                             or else In_Instance))\n+      if Is_Boolean_Type (T)\n         or else Is_Modular_Integer_Type (T)\n-        or else T = Universal_Integer;\n+        or else T = Universal_Integer\n+        or else T = Any_Composite\n+      then\n+         return True;\n+\n+      elsif Is_Array_Type (T)\n+        and then T /= Any_String\n+        and then Number_Dimensions (T) = 1\n+        and then Is_Boolean_Type (Component_Type (T))\n+        and then\n+         ((not Is_Private_Composite (T)\n+            and then not Is_Limited_Composite (T))\n+           or else In_Instance\n+           or else Available_Full_View_Of_Component (T))\n+      then\n+         return True;\n+\n+      else\n+         return False;\n+      end if;\n    end Valid_Boolean_Arg;\n \n    --------------------------\n@@ -3395,10 +3405,12 @@ package body Sem_Type is\n \n       if T = Any_Composite then\n          return False;\n+\n       elsif Is_Discrete_Type (T)\n         or else Is_Real_Type (T)\n       then\n          return True;\n+\n       elsif Is_Array_Type (T)\n           and then Number_Dimensions (T) = 1\n           and then Is_Discrete_Type (Component_Type (T))\n@@ -3408,6 +3420,14 @@ package body Sem_Type is\n                      or else In_Instance)\n       then\n          return True;\n+\n+      elsif Is_Array_Type (T)\n+        and then Number_Dimensions (T) = 1\n+        and then Is_Discrete_Type (Component_Type (T))\n+        and then Available_Full_View_Of_Component (T)\n+      then\n+         return True;\n+\n       elsif Is_String_Type (T) then\n          return True;\n       else"}, {"sha": "660611d83c8c1b908ebc5e335ce6b118b352765e", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b62eb3214596c49540636a2e48981bfc19a8df3/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b62eb3214596c49540636a2e48981bfc19a8df3/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=9b62eb3214596c49540636a2e48981bfc19a8df3", "patch": "@@ -333,6 +333,16 @@ package body Sem_Util is\n       end if;\n    end Apply_Compile_Time_Constraint_Error;\n \n+   function Available_Full_View_Of_Component (T : Entity_Id) return Boolean is\n+      ST  : constant Entity_Id := Scope (T);\n+      SCT : constant Entity_Id := Scope (Component_Type (T));\n+\n+   begin\n+      return In_Open_Scopes (ST)\n+        and then In_Open_Scopes (SCT)\n+        and then Scope_Depth (ST) >= Scope_Depth (SCT);\n+   end Available_Full_View_Of_Component;\n+\n    --------------------------------\n    -- Bad_Predicated_Subtype_Use --\n    --------------------------------"}, {"sha": "32e6ae66c6c73d467c6d32d1c6414440eb12f9bc", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b62eb3214596c49540636a2e48981bfc19a8df3/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b62eb3214596c49540636a2e48981bfc19a8df3/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=9b62eb3214596c49540636a2e48981bfc19a8df3", "patch": "@@ -94,6 +94,15 @@ package Sem_Util is\n    --  not end with a ? (this is used when the caller wants to parameterize\n    --  whether an error or warning is given.\n \n+   function Available_Full_View_Of_Component (T : Entity_Id) return Boolean;\n+   --  If at the point of declaration an array type has a private or limited\n+   --  component, several array operations are not avaiable on the type, and\n+   --  the array type is flagged accordingly. If in the immediate scope of\n+   --  the array type the component becomes non-private or non-limited, these\n+   --  operations become avaiable. This can happen if the scopes of both types\n+   --  are open, and the scope of the array is not outside the scope of the\n+   --  component.\n+\n    procedure Bad_Predicated_Subtype_Use\n      (Msg : String;\n       N   : Node_Id;\n@@ -836,8 +845,8 @@ package Sem_Util is\n    --  by the derived type declaration for type Typ.\n \n    function Is_Iterator (Typ : Entity_Id) return Boolean;\n-   --  AI05-0139-2: Check whether Typ is derived from the predefined interface\n-   --  Ada.Iterator_Interfaces.Forward_Iterator.\n+   --  AI05-0139-2 : check whether Typ is one of the predefined interfaces\n+   --  in Ada.Iterator_Interfaces, or it is derived from one.\n \n    function Is_LHS (N : Node_Id) return Boolean;\n    --  Returns True iff N is used as Name in an assignment statement"}]}