{"sha": "4ee646da946cc32932a71e3675898043d2e905c0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGVlNjQ2ZGE5NDZjYzMyOTMyYTcxZTM2NzU4OTgwNDNkMmU5MDVjMA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-03T09:26:00Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-03T09:26:00Z"}, "message": "[multiple changes]\n\n2011-08-03  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch6.adb: guard against error nodes in return statements.\n\n2011-08-03  Arnaud Charlet  <charlet@adacore.com>\n\n\t* errout.adb (Error_Msg_Internal): the main unit has not been read yet,\n\ta warning can only appear on a configuration file, so emit warning\n\twithout further checks.\n\n2011-08-03  Arnaud Charlet  <charlet@adacore.com>\n\n\t* s-interr.ads: add overriding keyword.\n\n2011-08-03  Geert Bosch  <bosch@adacore.com>\n\n\t* exp_attr.adb: Fix minor typo.\n\n2011-08-03  Ed Schonberg  <schonberg@adacore.com>\n\n\t* par-ch4.adb: improve error recovery.\n\nFrom-SVN: r177245", "tree": {"sha": "44d0794384ea7cc0d8bf1820e3f80fa5cb9211e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/44d0794384ea7cc0d8bf1820e3f80fa5cb9211e7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4ee646da946cc32932a71e3675898043d2e905c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ee646da946cc32932a71e3675898043d2e905c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ee646da946cc32932a71e3675898043d2e905c0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ee646da946cc32932a71e3675898043d2e905c0/comments", "author": null, "committer": null, "parents": [{"sha": "c0e538ad8071a46fc28634e622faa5a51bf81807", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0e538ad8071a46fc28634e622faa5a51bf81807", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0e538ad8071a46fc28634e622faa5a51bf81807"}], "stats": {"total": 64, "additions": 57, "deletions": 7}, "files": [{"sha": "9fb4ce894da24c6d689b1f4b0b78c0f52a702bc5", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ee646da946cc32932a71e3675898043d2e905c0/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ee646da946cc32932a71e3675898043d2e905c0/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=4ee646da946cc32932a71e3675898043d2e905c0", "patch": "@@ -1,3 +1,25 @@\n+2011-08-03  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch6.adb: guard against error nodes in return statements.\n+\n+2011-08-03  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* errout.adb (Error_Msg_Internal): the main unit has not been read yet,\n+\ta warning can only appear on a configuration file, so emit warning\n+\twithout further checks.\n+\n+2011-08-03  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* s-interr.ads: add overriding keyword.\n+\n+2011-08-03  Geert Bosch  <bosch@adacore.com>\n+\n+\t* exp_attr.adb: Fix minor typo.\n+\n+2011-08-03  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* par-ch4.adb: improve error recovery.\n+\n 2011-08-03  Emmanuel Briot  <briot@adacore.com>\n \n \t* prj-part.adb, prj-part.ads, prj-makr.adb, prj-pars.adb, prj-conf.adb,"}, {"sha": "49068ef23874899987021f61b293718cdf63bd10", "filename": "gcc/ada/errout.adb", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ee646da946cc32932a71e3675898043d2e905c0/gcc%2Fada%2Ferrout.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ee646da946cc32932a71e3675898043d2e905c0/gcc%2Fada%2Ferrout.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.adb?ref=4ee646da946cc32932a71e3675898043d2e905c0", "patch": "@@ -751,6 +751,12 @@ package body Errout is\n          if In_Extended_Main_Source_Unit (Sptr) then\n             null;\n \n+         --  If the main unit has not been read yet. the warning must be on\n+         --  a configuration file: gnat.adc or user-defined.\n+\n+         elsif No (Cunit (Main_Unit)) then\n+            null;\n+\n          --  If the flag location is not in the main extended source unit, then\n          --  we want to eliminate the warning, unless it is in the extended\n          --  main code unit and we want warnings on the instance."}, {"sha": "686bf04289aa5e41b2e07bb26bb86fd9706fe945", "filename": "gcc/ada/exp_attr.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ee646da946cc32932a71e3675898043d2e905c0/gcc%2Fada%2Fexp_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ee646da946cc32932a71e3675898043d2e905c0/gcc%2Fada%2Fexp_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_attr.adb?ref=4ee646da946cc32932a71e3675898043d2e905c0", "patch": "@@ -4998,7 +4998,7 @@ package body Exp_Attr is\n       -- Value --\n       -----------\n \n-      --  Value attribute is handled in separate unti Exp_Imgv\n+      --  Value attribute is handled in separate unit Exp_Imgv\n \n       when Attribute_Value =>\n          Exp_Imgv.Expand_Value_Attribute (N);"}, {"sha": "8d45b2c3cb9ac0221a1af916364d018ceac8dfaa", "filename": "gcc/ada/par-ch4.adb", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ee646da946cc32932a71e3675898043d2e905c0/gcc%2Fada%2Fpar-ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ee646da946cc32932a71e3675898043d2e905c0/gcc%2Fada%2Fpar-ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch4.adb?ref=4ee646da946cc32932a71e3675898043d2e905c0", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -606,8 +606,18 @@ package body Ch4 is\n             raise Error_Resync;\n \n          elsif Token /= Tok_Right_Paren then\n-            T_Right_Paren;\n-            raise Error_Resync;\n+            if Token = Tok_Arrow then\n+\n+               --  This may be an aggregate that is missing a qualification\n+\n+               Error_Msg_SC\n+                 (\"context of aggregate must be a qualified expression\");\n+               raise Error_Resync;\n+\n+            else\n+               T_Right_Paren;\n+               raise Error_Resync;\n+            end if;\n \n          else\n             Scan; -- past right paren"}, {"sha": "1d936f5a5f0fb52f9b64def44eb69ff0a9652eae", "filename": "gcc/ada/s-interr.ads", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ee646da946cc32932a71e3675898043d2e905c0/gcc%2Fada%2Fs-interr.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ee646da946cc32932a71e3675898043d2e905c0/gcc%2Fada%2Fs-interr.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-interr.ads?ref=4ee646da946cc32932a71e3675898043d2e905c0", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -256,6 +256,7 @@ package System.Interrupts is\n      (Object : access Static_Interrupt_Protection) return Boolean;\n    --  Returns True\n \n+   overriding\n    procedure Finalize (Object : in out Static_Interrupt_Protection);\n    --  Restore previous handlers as required by C.3.1(12) then call\n    --  Finalize (Protection)."}, {"sha": "11c807b5c3bbcc9728b35fd92183adc00cdba502", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ee646da946cc32932a71e3675898043d2e905c0/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ee646da946cc32932a71e3675898043d2e905c0/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=4ee646da946cc32932a71e3675898043d2e905c0", "patch": "@@ -628,8 +628,19 @@ package body Sem_Ch6 is\n \n       if Nkind (N) = N_Simple_Return_Statement then\n          Expr := Expression (N);\n-         Analyze_And_Resolve (Expr, R_Type);\n-         Check_Limited_Return (Expr);\n+\n+         --  Guard against a malformed expression. The parser may have\n+         --  tried to recover but the node is not analyzable.\n+\n+         if Nkind (Expr) = N_Error then\n+            Set_Etype (Expr, Any_Type);\n+            Expander_Mode_Save_And_Set (False);\n+            return;\n+\n+         else\n+            Analyze_And_Resolve (Expr, R_Type);\n+            Check_Limited_Return (Expr);\n+         end if;\n \n          --  RETURN only allowed in SPARK is as the last statement function\n "}]}