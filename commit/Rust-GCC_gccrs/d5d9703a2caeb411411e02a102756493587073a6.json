{"sha": "d5d9703a2caeb411411e02a102756493587073a6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDVkOTcwM2EyY2FlYjQxMTQxMWUwMmExMDI3NTY0OTM1ODcwNzNhNg==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2017-02-03T18:54:20Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2017-02-03T18:54:20Z"}, "message": "i386.c (dimode_scalar_chain::convert_reg): Use pextrd for TARGET_SSE4_1 when creating scalar copy.\n\n\t* config/i386/i386.c (dimode_scalar_chain::convert_reg):\n\tUse pextrd for TARGET_SSE4_1 when creating scalar copy.\n\nFrom-SVN: r245161", "tree": {"sha": "63e38cea1bb38cbac4b23254628856cc556dc76e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/63e38cea1bb38cbac4b23254628856cc556dc76e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d5d9703a2caeb411411e02a102756493587073a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5d9703a2caeb411411e02a102756493587073a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d5d9703a2caeb411411e02a102756493587073a6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5d9703a2caeb411411e02a102756493587073a6/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "86010a086b6ae8f1b129b6e992ed2ce2a36e38e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86010a086b6ae8f1b129b6e992ed2ce2a36e38e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86010a086b6ae8f1b129b6e992ed2ce2a36e38e3"}], "stats": {"total": 26, "additions": 23, "deletions": 3}, "files": [{"sha": "d722840f51911cf1fb50ae6c5d05871993ddda8e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5d9703a2caeb411411e02a102756493587073a6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5d9703a2caeb411411e02a102756493587073a6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d5d9703a2caeb411411e02a102756493587073a6", "patch": "@@ -1,3 +1,8 @@\n+2017-02-03  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.c (dimode_scalar_chain::convert_reg):\n+\tUse pextrd for TARGET_SSE4_1 when creating scalar copy.\n+\n 2017-02-03  Walter Lee  <walt@tilera.com>\n \n \tPR target/78862"}, {"sha": "3a659458ab0816730a740c6314ce92f087c3c45f", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 18, "deletions": 3, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5d9703a2caeb411411e02a102756493587073a6/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5d9703a2caeb411411e02a102756493587073a6/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=d5d9703a2caeb411411e02a102756493587073a6", "patch": "@@ -3622,11 +3622,26 @@ dimode_scalar_chain::convert_reg (unsigned regno)\n \n       if (scalar_copy)\n \t{\n-\t  rtx vcopy = gen_reg_rtx (V2DImode);\n-\n \t  start_sequence ();\n-\t  if (TARGET_INTER_UNIT_MOVES_FROM_VEC)\n+\t  if (TARGET_SSE4_1)\n+\t    {\n+\t      rtx tmp = gen_rtx_PARALLEL (VOIDmode, gen_rtvec (1, const0_rtx));\n+\t      emit_insn\n+\t\t(gen_rtx_SET\n+\t\t (gen_rtx_SUBREG (SImode, scopy, 0),\n+\t\t  gen_rtx_VEC_SELECT (SImode,\n+\t\t\t\t      gen_rtx_SUBREG (V4SImode, reg, 0), tmp)));\n+\n+\t      tmp = gen_rtx_PARALLEL (VOIDmode, gen_rtvec (1, const1_rtx));\n+\t      emit_insn\n+\t\t(gen_rtx_SET\n+\t\t (gen_rtx_SUBREG (SImode, scopy, 4),\n+\t\t  gen_rtx_VEC_SELECT (SImode,\n+\t\t\t\t      gen_rtx_SUBREG (V4SImode, reg, 0), tmp)));\n+\t    }\n+\t  else if (TARGET_INTER_UNIT_MOVES_FROM_VEC)\n \t    {\n+\t      rtx vcopy = gen_reg_rtx (V2DImode);\n \t      emit_move_insn (vcopy, gen_rtx_SUBREG (V2DImode, reg, 0));\n \t      emit_move_insn (gen_rtx_SUBREG (SImode, scopy, 0),\n \t\t\t      gen_rtx_SUBREG (SImode, vcopy, 0));"}]}