{"sha": "6a90d232abb6815994146ecc0ebbfc83d37f6d8a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmE5MGQyMzJhYmI2ODE1OTk0MTQ2ZWNjMGViYmZjODNkMzdmNmQ4YQ==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2009-05-18T17:21:13Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2009-05-18T17:21:13Z"}, "message": "re PR target/39942 (Nonoptimal code - leaveq; xchg   %ax,%ax; retq)\n\n2009-05-18  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR target/39942\n\t* config/i386/i386.c (ix86_avoid_jump_misspredicts): Replace\n\tgen_align with gen_pad.\n\t(ix86_reorg): Check ASM_OUTPUT_MAX_SKIP_PAD instead of\n\t#ifdef ASM_OUTPUT_MAX_SKIP_ALIGN.\n\n\t* config/i386/i386.h (ASM_OUTPUT_MAX_SKIP_PAD): New.\n\t* config/i386/x86-64.h (ASM_OUTPUT_MAX_SKIP_PAD): Likewise.\n\n\t* config/i386/i386.md (align): Renamed to ...\n\t(pad): This.  Replace ASM_OUTPUT_MAX_SKIP_ALIGN with\n\tASM_OUTPUT_MAX_SKIP_PAD.\n\nFrom-SVN: r147671", "tree": {"sha": "2fb3542b94522bbfefddada10c6ca9132052ae09", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2fb3542b94522bbfefddada10c6ca9132052ae09"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6a90d232abb6815994146ecc0ebbfc83d37f6d8a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a90d232abb6815994146ecc0ebbfc83d37f6d8a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a90d232abb6815994146ecc0ebbfc83d37f6d8a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a90d232abb6815994146ecc0ebbfc83d37f6d8a/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cf249b02ea98df08336b39543b54ff2830d87d94", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf249b02ea98df08336b39543b54ff2830d87d94", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf249b02ea98df08336b39543b54ff2830d87d94"}], "stats": {"total": 52, "additions": 46, "deletions": 6}, "files": [{"sha": "8260f928946f50e896211d6c359052a539360b7f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a90d232abb6815994146ecc0ebbfc83d37f6d8a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a90d232abb6815994146ecc0ebbfc83d37f6d8a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6a90d232abb6815994146ecc0ebbfc83d37f6d8a", "patch": "@@ -1,3 +1,18 @@\n+2009-05-18  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/39942\n+\t* config/i386/i386.c (ix86_avoid_jump_misspredicts): Replace\n+\tgen_align with gen_pad.\n+\t(ix86_reorg): Check ASM_OUTPUT_MAX_SKIP_PAD instead of\n+\t#ifdef ASM_OUTPUT_MAX_SKIP_ALIGN.\n+\n+\t* config/i386/i386.h (ASM_OUTPUT_MAX_SKIP_PAD): New.\n+\t* config/i386/x86-64.h (ASM_OUTPUT_MAX_SKIP_PAD): Likewise.\n+\n+\t* config/i386/i386.md (align): Renamed to ...\n+\t(pad): This.  Replace ASM_OUTPUT_MAX_SKIP_ALIGN with\n+\tASM_OUTPUT_MAX_SKIP_PAD.\n+\n 2009-05-18  Andreas Schwab  <schwab@linux-m68k.org>\n \n \t* config.gcc: Fix variable syntax."}, {"sha": "e9f8b9566a081db1337fc5108bf3e9755e7d4bb9", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a90d232abb6815994146ecc0ebbfc83d37f6d8a/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a90d232abb6815994146ecc0ebbfc83d37f6d8a/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=6a90d232abb6815994146ecc0ebbfc83d37f6d8a", "patch": "@@ -27334,7 +27334,7 @@ ix86_avoid_jump_mispredicts (void)\n \t  if (dump_file)\n \t    fprintf (dump_file, \"Padding insn %i by %i bytes!\\n\",\n \t\t     INSN_UID (insn), padsize);\n-          emit_insn_before (gen_align (GEN_INT (padsize)), insn);\n+          emit_insn_before (gen_pad (GEN_INT (padsize)), insn);\n \t}\n     }\n }\n@@ -27402,7 +27402,7 @@ ix86_reorg (void)\n     {\n       if (TARGET_PAD_RETURNS)\n \tix86_pad_returns ();\n-#ifdef ASM_OUTPUT_MAX_SKIP_ALIGN\n+#ifdef ASM_OUTPUT_MAX_SKIP_PAD\n       if (TARGET_FOUR_JUMP_LIMIT)\n \tix86_avoid_jump_mispredicts ();\n #endif"}, {"sha": "e42686b480928d51c54a9f552bd6c0725718c017", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a90d232abb6815994146ecc0ebbfc83d37f6d8a/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a90d232abb6815994146ecc0ebbfc83d37f6d8a/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=6a90d232abb6815994146ecc0ebbfc83d37f6d8a", "patch": "@@ -2175,6 +2175,22 @@ do {\t\t\t\t\t\t\t\t\t\\\n #define ASM_OUTPUT_OPCODE(STREAM, PTR) \\\n   ASM_OUTPUT_AVX_PREFIX ((STREAM), (PTR))\n \n+/* A C statement to output to the stdio stream FILE an assembler\n+   command to pad the location counter to a multiple of 1<<LOG\n+   bytes if it is within MAX_SKIP bytes.  */\n+\n+#ifdef HAVE_GAS_MAX_SKIP_P2ALIGN\n+#undef  ASM_OUTPUT_MAX_SKIP_PAD\n+#define ASM_OUTPUT_MAX_SKIP_PAD(FILE, LOG, MAX_SKIP)\t\t\t\\\n+  if ((LOG) != 0)\t\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\t\\\n+      if ((MAX_SKIP) == 0)\t\t\t\t\t\t\\\n+        fprintf ((FILE), \"\\t.p2align %d\\n\", (LOG));\t\t\t\\\n+      else\t\t\t\t\t\t\t\t\\\n+        fprintf ((FILE), \"\\t.p2align %d,,%d\\n\", (LOG), (MAX_SKIP));\t\\\n+    }\n+#endif\n+\n /* Under some conditions we need jump tables in the text section,\n    because the assembler cannot handle label differences between\n    sections.  This is the case for x86_64 on Mach-O for example.  */"}, {"sha": "2e2880220b8efd7c45298ca4badfc826d69c6ecc", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a90d232abb6815994146ecc0ebbfc83d37f6d8a/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a90d232abb6815994146ecc0ebbfc83d37f6d8a/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=6a90d232abb6815994146ecc0ebbfc83d37f6d8a", "patch": "@@ -15519,16 +15519,16 @@\n    (set_attr \"length_immediate\" \"0\")\n    (set_attr \"modrm\" \"0\")])\n \n-;; Align to 16-byte boundary, max skip in op0.  Used to avoid\n+;; Pad to 16-byte boundary, max skip in op0.  Used to avoid\n ;; branch prediction penalty for the third jump in a 16-byte\n ;; block on K8.\n \n-(define_insn \"align\"\n+(define_insn \"pad\"\n   [(unspec_volatile [(match_operand 0 \"\" \"\")] UNSPECV_ALIGN)]\n   \"\"\n {\n-#ifdef ASM_OUTPUT_MAX_SKIP_ALIGN\n-  ASM_OUTPUT_MAX_SKIP_ALIGN (asm_out_file, 4, (int)INTVAL (operands[0]));\n+#ifdef ASM_OUTPUT_MAX_SKIP_PAD\n+  ASM_OUTPUT_MAX_SKIP_PAD (asm_out_file, 4, (int)INTVAL (operands[0]));\n #else\n   /* It is tempting to use ASM_OUTPUT_ALIGN here, but we don't want to do that.\n      The align insn is used to avoid 3 jump instructions in the row to improve"}, {"sha": "5d6958cc4adee4e5d563cf29ae233119968f5d6c", "filename": "gcc/config/i386/x86-64.h", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a90d232abb6815994146ecc0ebbfc83d37f6d8a/gcc%2Fconfig%2Fi386%2Fx86-64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a90d232abb6815994146ecc0ebbfc83d37f6d8a/gcc%2Fconfig%2Fi386%2Fx86-64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fx86-64.h?ref=6a90d232abb6815994146ecc0ebbfc83d37f6d8a", "patch": "@@ -81,6 +81,15 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n       }\t\t\t\t\t\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\t\\\n   } while (0)\n+#undef  ASM_OUTPUT_MAX_SKIP_PAD\n+#define ASM_OUTPUT_MAX_SKIP_PAD(FILE, LOG, MAX_SKIP)\t\t\t\\\n+  if ((LOG) != 0)\t\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\t\\\n+      if ((MAX_SKIP) == 0)\t\t\t\t\t\t\\\n+        fprintf ((FILE), \"\\t.p2align %d\\n\", (LOG));\t\t\t\\\n+      else\t\t\t\t\t\t\t\t\\\n+        fprintf ((FILE), \"\\t.p2align %d,,%d\\n\", (LOG), (MAX_SKIP));\t\\\n+    }\n #endif\n \n "}]}