{"sha": "e39423c06daa6d37098d1000174587b10ce695a3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTM5NDIzYzA2ZGFhNmQzNzA5OGQxMDAwMTc0NTg3YjEwY2U2OTVhMw==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2014-10-15T20:20:05Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2014-10-15T20:20:05Z"}, "message": "libiberty: Expose choose_tmpdir, and fix constness of return type\n\ninclude/ChangeLog:\n\t* libiberty.h (choose_tmpdir): New prototype.\n\nlibiberty/ChangeLog:\n\t* choose-temp.c (choose_tmpdir): Remove now-redundant local\n\tcopy of prototype.\n\t* functions.texi: Regenerate.\n\t* make-temp-file.c (choose_tmpdir): Convert return type from\n\tchar * to const char * - given that this returns a pointer to\n\ta memoized allocation, the caller must not touch it.\n\nFrom-SVN: r216285", "tree": {"sha": "0b95c0fc810d46f2993b7222ec997e2cc685e750", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0b95c0fc810d46f2993b7222ec997e2cc685e750"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e39423c06daa6d37098d1000174587b10ce695a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e39423c06daa6d37098d1000174587b10ce695a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e39423c06daa6d37098d1000174587b10ce695a3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e39423c06daa6d37098d1000174587b10ce695a3/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "26882aba54fc8a2112450a011d699eb7b1110ee9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26882aba54fc8a2112450a011d699eb7b1110ee9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/26882aba54fc8a2112450a011d699eb7b1110ee9"}], "stats": {"total": 36, "additions": 26, "deletions": 10}, "files": [{"sha": "5198c249e7cda58fa4ae1fafa1f080bd650e4ce4", "filename": "include/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e39423c06daa6d37098d1000174587b10ce695a3/include%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e39423c06daa6d37098d1000174587b10ce695a3/include%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2FChangeLog?ref=e39423c06daa6d37098d1000174587b10ce695a3", "patch": "@@ -1,3 +1,7 @@\n+2014-10-15  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* libiberty.h (choose_tmpdir): New prototype.\n+\n 2013-10-02  Mark Wielaard  <mjw@redhat.com>\n \n \tPR debug/63239"}, {"sha": "d09c9a54811a51a3deea31c39240de2e109a724a", "filename": "include/libiberty.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e39423c06daa6d37098d1000174587b10ce695a3/include%2Flibiberty.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e39423c06daa6d37098d1000174587b10ce695a3/include%2Flibiberty.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2Flibiberty.h?ref=e39423c06daa6d37098d1000174587b10ce695a3", "patch": "@@ -227,6 +227,11 @@ extern char *make_relative_prefix (const char *, const char *,\n extern char *make_relative_prefix_ignore_links (const char *, const char *,\n \t\t\t\t\t\tconst char *) ATTRIBUTE_MALLOC;\n \n+/* Returns a pointer to a directory path suitable for creating temporary\n+   files in.  */\n+\n+extern const char *choose_tmpdir (void) ATTRIBUTE_RETURNS_NONNULL;\n+\n /* Choose a temporary directory to use for scratch files.  */\n \n extern char *choose_temp_base (void) ATTRIBUTE_MALLOC ATTRIBUTE_RETURNS_NONNULL;"}, {"sha": "73dee14ad67753057f085332510443c1d54f0171", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e39423c06daa6d37098d1000174587b10ce695a3/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e39423c06daa6d37098d1000174587b10ce695a3/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=e39423c06daa6d37098d1000174587b10ce695a3", "patch": "@@ -1,3 +1,12 @@\n+2014-10-15  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* choose-temp.c (choose_tmpdir): Remove now-redundant local\n+\tcopy of prototype.\n+\t* functions.texi: Regenerate.\n+\t* make-temp-file.c (choose_tmpdir): Convert return type from\n+\tchar * to const char * - given that this returns a pointer to\n+\ta memoized allocation, the caller must not touch it.\n+\n 2014-10-14  Joel Brobecker  <brobecker@adacore.com>\n \n \t* d-demangle.c: Replace strtold with strtod in global comment."}, {"sha": "8e1e84be7651d05962810979c34696733b338fb3", "filename": "libiberty/choose-temp.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e39423c06daa6d37098d1000174587b10ce695a3/libiberty%2Fchoose-temp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e39423c06daa6d37098d1000174587b10ce695a3/libiberty%2Fchoose-temp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fchoose-temp.c?ref=e39423c06daa6d37098d1000174587b10ce695a3", "patch": "@@ -34,7 +34,6 @@ Boston, MA 02110-1301, USA.  */\n #endif\n \n #include \"libiberty.h\"\n-extern char *choose_tmpdir (void);\n \n /* Name of temporary file.\n    mktemp requires 6 trailing X's.  */"}, {"sha": "387aee0bb9c39305573094c27628b4e7cff3c706", "filename": "libiberty/functions.texi", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e39423c06daa6d37098d1000174587b10ce695a3/libiberty%2Ffunctions.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e39423c06daa6d37098d1000174587b10ce695a3/libiberty%2Ffunctions.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Ffunctions.texi?ref=e39423c06daa6d37098d1000174587b10ce695a3", "patch": "@@ -125,7 +125,7 @@ Uses @code{malloc} to allocate storage for @var{nelem} objects of\n \n @end deftypefn\n \n-@c choose-temp.c:46\n+@c choose-temp.c:45\n @deftypefn Extension char* choose_temp_base (void)\n \n Return a prefix for temporary file names or @code{NULL} if unable to\n@@ -139,7 +139,7 @@ not recommended.\n @end deftypefn\n \n @c make-temp-file.c:96\n-@deftypefn Replacement char* choose_tmpdir ()\n+@deftypefn Replacement const char* choose_tmpdir ()\n \n Returns a pointer to a directory path suitable for creating temporary\n files in.\n@@ -160,9 +160,8 @@ number of seconds used.\n   @dots{}, @code{NULL})\n \n Concatenate zero or more of strings and return the result in freshly\n-@code{xmalloc}ed memory.  Returns @code{NULL} if insufficient memory is\n-available.  The argument list is terminated by the first @code{NULL}\n-pointer encountered.  Pointers to empty strings are ignored.\n+@code{xmalloc}ed memory.  The argument list is terminated by the first\n+@code{NULL} pointer encountered.  Pointers to empty strings are ignored.\n \n @end deftypefn\n \n@@ -528,7 +527,7 @@ nineteen EBCDIC varying characters is tested; exercise caution.)\n @end ftable\n @end defvr\n \n-@c hashtab.c:336\n+@c hashtab.c:328\n @deftypefn Supplemental htab_t htab_create_typed_alloc (size_t @var{size}, @\n htab_hash @var{hash_f}, htab_eq @var{eq_f}, htab_del @var{del_f}, @\n htab_alloc @var{alloc_tab_f}, htab_alloc @var{alloc_f}, @\n@@ -1163,7 +1162,7 @@ control over the state of the random number generator.\n \n @end deftypefn\n \n-@c concat.c:174\n+@c concat.c:160\n @deftypefn Extension char* reconcat (char *@var{optr}, const char *@var{s1}, @\n   @dots{}, @code{NULL})\n "}, {"sha": "244cc23c5090e1c0d227820dc703adbc8022f8d5", "filename": "libiberty/make-temp-file.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e39423c06daa6d37098d1000174587b10ce695a3/libiberty%2Fmake-temp-file.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e39423c06daa6d37098d1000174587b10ce695a3/libiberty%2Fmake-temp-file.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fmake-temp-file.c?ref=e39423c06daa6d37098d1000174587b10ce695a3", "patch": "@@ -93,7 +93,7 @@ static char *memoized_tmpdir;\n \n /*\n \n-@deftypefn Replacement char* choose_tmpdir ()\n+@deftypefn Replacement const char* choose_tmpdir ()\n \n Returns a pointer to a directory path suitable for creating temporary\n files in.\n@@ -102,7 +102,7 @@ files in.\n \n */\n \n-char *\n+const char *\n choose_tmpdir (void)\n {\n   if (!memoized_tmpdir)"}]}