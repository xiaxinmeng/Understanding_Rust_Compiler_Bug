{"sha": "0c50ee733d4ab7d8e363af4f5d530ac6a9e4081c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGM1MGVlNzMzZDRhYjdkOGUzNjNhZjRmNWQ1MzBhYzZhOWU0MDgxYw==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@hxi.com", "date": "2001-11-11T19:22:39Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2001-11-11T19:22:39Z"}, "message": "h8300.c (shift_alg): Remove SHIFT_MAX.\n\n\t* config/h8300/h8300.c (shift_alg): Remove SHIFT_MAX.\n\t(get_shift_alg): Remove redundant code.\n\nFrom-SVN: r46931", "tree": {"sha": "5cc33eee922e7c27c3f5bd45f9f00308f3022ef1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5cc33eee922e7c27c3f5bd45f9f00308f3022ef1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0c50ee733d4ab7d8e363af4f5d530ac6a9e4081c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c50ee733d4ab7d8e363af4f5d530ac6a9e4081c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c50ee733d4ab7d8e363af4f5d530ac6a9e4081c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c50ee733d4ab7d8e363af4f5d530ac6a9e4081c/comments", "author": null, "committer": null, "parents": [{"sha": "fe19a83d8a2719459520baa77d240a945c365b5b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe19a83d8a2719459520baa77d240a945c365b5b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe19a83d8a2719459520baa77d240a945c365b5b"}], "stats": {"total": 19, "additions": 8, "deletions": 11}, "files": [{"sha": "4d341822f7ba524e0375b5a80e52b1b63c44d1bb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c50ee733d4ab7d8e363af4f5d530ac6a9e4081c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c50ee733d4ab7d8e363af4f5d530ac6a9e4081c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0c50ee733d4ab7d8e363af4f5d530ac6a9e4081c", "patch": "@@ -1,3 +1,8 @@\n+2001-11-11  Kazu Hirata  <kazu@hxi.com>\n+\n+\t* config/h8300/h8300.c (shift_alg): Remove SHIFT_MAX.\n+\t(get_shift_alg): Remove redundant code.\n+\n 2001-11-11  Kazu Hirata  <kazu@hxi.com>\n \n \t* config/pa/milli64.S: Fix comment formatting."}, {"sha": "e8a5da33a73360620d6f1a07de7472e43a1f5e04", "filename": "gcc/config/h8300/h8300.c", "status": "modified", "additions": 3, "deletions": 11, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c50ee733d4ab7d8e363af4f5d530ac6a9e4081c/gcc%2Fconfig%2Fh8300%2Fh8300.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c50ee733d4ab7d8e363af4f5d530ac6a9e4081c/gcc%2Fconfig%2Fh8300%2Fh8300.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.c?ref=0c50ee733d4ab7d8e363af4f5d530ac6a9e4081c", "patch": "@@ -1982,8 +1982,7 @@ enum shift_alg\n   SHIFT_INLINE,\n   SHIFT_ROT_AND,\n   SHIFT_SPECIAL,\n-  SHIFT_LOOP,\n-  SHIFT_MAX\n+  SHIFT_LOOP\n };\n \n /* Symbols of the various shifts which can be used as indices.  */\n@@ -2212,7 +2211,6 @@ get_shift_alg (shift_type, shift_mode, count, info)\n   info->cc_valid_p = shift_one[cpu_type][shift_type][shift_mode].cc_valid;\n \n   /* Now look for cases we want to optimize.  */\n-\n   switch (shift_mode)\n     {\n     case QIshift:\n@@ -2238,8 +2236,6 @@ get_shift_alg (shift_type, shift_mode, count, info)\n \t    goto return_shift_loop;\n \n \t  /* Other shifts by 5, 6, or 7 bits use SHIFT_ROT_AND.  */\n-\t  info->shift1 = rotate_one[cpu_type][shift_type][shift_mode];\n-\t  info->shift2 = rotate_two[shift_type][shift_mode];\n \t  goto return_shift_rot_and;\n \t}\n \n@@ -2316,8 +2312,6 @@ get_shift_alg (shift_type, shift_mode, count, info)\n \t    }\n \t  else if (shift_type != SHIFT_ASHIFTRT)\n \t    {\n-\t      info->shift1 = rotate_one[cpu_type][shift_type][shift_mode];\n-\t      info->shift2 = rotate_two[shift_type][shift_mode];\n \t      goto return_shift_rot_and;\n \t    }\n \t}\n@@ -2409,8 +2403,6 @@ get_shift_alg (shift_type, shift_mode, count, info)\n \t    }\n \t  else\n \t    {\n-\t      info->shift1 = rotate_one[cpu_type][shift_type][shift_mode];\n-\t      info->shift2 = rotate_two[shift_type][shift_mode];\n \t      goto return_shift_rot_and;\n \t    }\n \t}\n@@ -2436,8 +2428,6 @@ get_shift_alg (shift_type, shift_mode, count, info)\n \t\t}\n \t      else\n \t\t{\n-\t\t  info->shift1 = rotate_one[cpu_type][shift_type][shift_mode];\n-\t\t  info->shift2 = rotate_two[shift_type][shift_mode];\n \t\t  goto return_shift_rot_and;\n \t\t}\n \t    }\n@@ -2464,6 +2454,8 @@ get_shift_alg (shift_type, shift_mode, count, info)\n   goto end;\n \n  return_shift_rot_and:\n+  info->shift1 = rotate_one[cpu_type][shift_type][shift_mode];\n+  info->shift2 = rotate_two[shift_type][shift_mode];\n   info->cc_valid_p = 0;\n   info->alg = SHIFT_ROT_AND;\n   goto end;"}]}