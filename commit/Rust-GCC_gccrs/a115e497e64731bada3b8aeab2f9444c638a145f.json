{"sha": "a115e497e64731bada3b8aeab2f9444c638a145f", "node_id": "C_kwDOANBUbNoAKGExMTVlNDk3ZTY0NzMxYmFkYTNiOGFlYWIyZjk0NDRjNjM4YTE0NWY", "commit": {"author": {"name": "Gary Dismukes", "email": "dismukes@adacore.com", "date": "2021-12-17T23:41:01Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2022-01-11T13:24:46Z"}, "message": "[Ada] Conformance error on protected subp with anonymous-access-to-tagged formal\n\ngcc/ada/\n\n\t* sem_disp.adb (Check_Controlling_Type): Add test for the case\n\twhere Subp is a subprogram associated with a protected\n\tsubprogram and return Empty, unless Tagged_Type is the\n\tcorresponding record type of the protected type.", "tree": {"sha": "a2c91c819164614e7bfb19bf0bd4a5a114ec3680", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a2c91c819164614e7bfb19bf0bd4a5a114ec3680"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a115e497e64731bada3b8aeab2f9444c638a145f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a115e497e64731bada3b8aeab2f9444c638a145f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a115e497e64731bada3b8aeab2f9444c638a145f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a115e497e64731bada3b8aeab2f9444c638a145f/comments", "author": {"login": "dismukes", "id": 50880541, "node_id": "MDQ6VXNlcjUwODgwNTQx", "avatar_url": "https://avatars.githubusercontent.com/u/50880541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dismukes", "html_url": "https://github.com/dismukes", "followers_url": "https://api.github.com/users/dismukes/followers", "following_url": "https://api.github.com/users/dismukes/following{/other_user}", "gists_url": "https://api.github.com/users/dismukes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dismukes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dismukes/subscriptions", "organizations_url": "https://api.github.com/users/dismukes/orgs", "repos_url": "https://api.github.com/users/dismukes/repos", "events_url": "https://api.github.com/users/dismukes/events{/privacy}", "received_events_url": "https://api.github.com/users/dismukes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e5be83512a66369ae77c9652d3a3073a14ff466a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5be83512a66369ae77c9652d3a3073a14ff466a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e5be83512a66369ae77c9652d3a3073a14ff466a"}], "stats": {"total": 23, "additions": 23, "deletions": 0}, "files": [{"sha": "cafe2c379f2c6f4f6579bd527da71d8c6f1c3921", "filename": "gcc/ada/sem_disp.adb", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a115e497e64731bada3b8aeab2f9444c638a145f/gcc%2Fada%2Fsem_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a115e497e64731bada3b8aeab2f9444c638a145f/gcc%2Fada%2Fsem_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_disp.adb?ref=a115e497e64731bada3b8aeab2f9444c638a145f", "patch": "@@ -478,6 +478,29 @@ package body Sem_Disp is\n       if No (Tagged_Type) or else Is_Class_Wide_Type (Tagged_Type) then\n          return Empty;\n \n+      --  In the special case of a protected subprogram of a tagged protected\n+      --  type that has a formal of a tagged type (or access formal whose type\n+      --  designates a tagged type), such a formal is not controlling unless\n+      --  it's of the protected type's corresponding record type. The latter\n+      --  can occur for the special wrapper subprograms created for protected\n+      --  subprograms. Such subprograms may occur in the same scope where some\n+      --  formal's tagged type is declared, and we don't want formals of that\n+      --  tagged type being marked as controlling, for one thing because they\n+      --  aren't controlling from the language point of view, but also because\n+      --  this can cause errors for access formals when conformance is checked\n+      --  between the spec and body of the protected subprogram (null-exclusion\n+      --  status of the formals may be set differently, which is the case that\n+      --  led to adding this check).\n+\n+      elsif Is_Subprogram (Subp)\n+        and then Present (Protected_Subprogram (Subp))\n+        and then Ekind (Scope (Protected_Subprogram (Subp))) = E_Protected_Type\n+        and then\n+          Base_Type (Tagged_Type)\n+            /= Corresponding_Record_Type (Scope (Protected_Subprogram (Subp)))\n+      then\n+         return Empty;\n+\n       --  The dispatching type and the primitive operation must be defined in\n       --  the same scope, except in the case of internal operations and formal\n       --  abstract subprograms."}]}