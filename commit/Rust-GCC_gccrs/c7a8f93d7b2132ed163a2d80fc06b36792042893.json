{"sha": "c7a8f93d7b2132ed163a2d80fc06b36792042893", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzdhOGY5M2Q3YjIxMzJlZDE2M2EyZDgwZmMwNmIzNjc5MjA0Mjg5Mw==", "commit": {"author": {"name": "Rasmus Villemoes", "email": "rv@rasmusvillemoes.dk", "date": "2018-09-03T13:26:45Z"}, "committer": {"name": "Rasmus Villemoes", "email": "villemoes@gcc.gnu.org", "date": "2018-09-03T13:26:45Z"}, "message": "fixincludes: vxworks: remove unnecessary parentheses in ioctl wrapper macro\n\nThe rationale for the fixinclude ioctl macro wrapper is, as far as I can\ntell (https://gcc.gnu.org/ml/gcc-patches/2012-09/msg01619.html)\n\n  Fix 2: Add hack for ioctl() on VxWorks.\n\n  ioctl() is supposed to be variadic, but VxWorks only has a three\n  argument version with the third argument of type int.  This messes up\n  when the third argument is not implicitly convertible to int.  This\n  adds a macro which wraps around ioctl() and explicitly casts the third\n  argument to an int.  This way, the most common use case of ioctl (with\n  a const char * for the third argument) will compile in C++, where\n  pointers must be explicitly casted to int.\n\nHowever, we have existing C++ code that calls the ioctl function via\n\n  ::ioctl(foo, bar, baz)\n\nand obviously this breaks when it gets expanded to\n\n  ::(ioctl)(foo, bar, (int)(baz))\n\nSince the GNU C preprocessor already prevents recursive expansion of\nfunction-like macros, the parentheses around ioctl are unnecessary.\n\nIncidentally, there is also a macro sioIoctl() in the vxworks sioLib.h\nheader that expands to\n\n  ((pSioChan)->pDrvFuncs->ioctl (pSioChan, cmd, arg))\n\nwhich also breaks when that gets further expanded to\n\n  ((pSioChan)->pDrvFuncs->(ioctl) (pSioChan, cmd, (int)(arg)))\n\nThis patch partly fixes that issue as well, but the third argument to\nthe pDrvFuncs->ioctl method should be void*, so the cast to (int) is\nslightly annoying. Internally, we've simply patched the sioIoctl macro:\n\n  (((pSioChan)->pDrvFuncs->ioctl) (pSioChan, cmd, arg))\n\nFrom-SVN: r264056", "tree": {"sha": "49ccf009f7aa408cd69d01f9e0aba20ffc63c707", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/49ccf009f7aa408cd69d01f9e0aba20ffc63c707"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c7a8f93d7b2132ed163a2d80fc06b36792042893", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7a8f93d7b2132ed163a2d80fc06b36792042893", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c7a8f93d7b2132ed163a2d80fc06b36792042893", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7a8f93d7b2132ed163a2d80fc06b36792042893/comments", "author": {"login": "Villemoes", "id": 4375908, "node_id": "MDQ6VXNlcjQzNzU5MDg=", "avatar_url": "https://avatars.githubusercontent.com/u/4375908?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Villemoes", "html_url": "https://github.com/Villemoes", "followers_url": "https://api.github.com/users/Villemoes/followers", "following_url": "https://api.github.com/users/Villemoes/following{/other_user}", "gists_url": "https://api.github.com/users/Villemoes/gists{/gist_id}", "starred_url": "https://api.github.com/users/Villemoes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Villemoes/subscriptions", "organizations_url": "https://api.github.com/users/Villemoes/orgs", "repos_url": "https://api.github.com/users/Villemoes/repos", "events_url": "https://api.github.com/users/Villemoes/events{/privacy}", "received_events_url": "https://api.github.com/users/Villemoes/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c98c243078c380ad4c9a1ef08869d3b64abb128f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c98c243078c380ad4c9a1ef08869d3b64abb128f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c98c243078c380ad4c9a1ef08869d3b64abb128f"}], "stats": {"total": 14, "additions": 10, "deletions": 4}, "files": [{"sha": "4f5f1fefb6748f64e0a17bc979c7c6dbade44a80", "filename": "fixincludes/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7a8f93d7b2132ed163a2d80fc06b36792042893/fixincludes%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7a8f93d7b2132ed163a2d80fc06b36792042893/fixincludes%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2FChangeLog?ref=c7a8f93d7b2132ed163a2d80fc06b36792042893", "patch": "@@ -1,3 +1,9 @@\n+2018-09-03  Rasmus Villemoes  <rv@rasmusvillemoes.dk>\n+\n+\t* inclhack.def (vxworks_ioctl_macro): Remove parentheses from\n+\texpansion of ioctl macro.\n+\t* fixincl.x: Regenerate.\n+\n 2018-07-23  David Edelsohn  <dje.gcc@gmail.com>\n \n \t* inclhack.def (aix_unistd): New."}, {"sha": "733242115349212b1b6adaa0f96ded9e23a886df", "filename": "fixincludes/fixincl.x", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7a8f93d7b2132ed163a2d80fc06b36792042893/fixincludes%2Ffixincl.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7a8f93d7b2132ed163a2d80fc06b36792042893/fixincludes%2Ffixincl.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ffixincl.x?ref=c7a8f93d7b2132ed163a2d80fc06b36792042893", "patch": "@@ -2,11 +2,11 @@\n  *\n  * DO NOT EDIT THIS FILE   (fixincl.x)\n  *\n- * It has been AutoGen-ed  July 23, 2018 at 07:27:34 PM by AutoGen 5.18\n+ * It has been AutoGen-ed  September  3, 2018 at 03:24:05 PM by AutoGen 5.18.7\n  * From the definitions    inclhack.def\n  * and the template file   fixincl\n  */\n-/* DO NOT SVN-MERGE THIS FILE, EITHER Mon Jul 23 19:27:34 UTC 2018\n+/* DO NOT SVN-MERGE THIS FILE, EITHER Mon Sep  3 15:24:05 CEST 2018\n  *\n  * You must regenerate it.  Use the ./genfixes script.\n  *\n@@ -9737,7 +9737,7 @@ tSCC* apzVxworks_Ioctl_MacroMachs[] = {\n static const char* apzVxworks_Ioctl_MacroPatch[] = {\n     \"format\",\n     \"%0\\n\\\n-#define ioctl(fd, func, arg) (ioctl)(fd, func, (int)(arg))\\n\",\n+#define ioctl(fd, func, arg) ioctl(fd, func, (int)(arg))\\n\",\n     \"extern[\\t ]+int[\\t ]+ioctl[\\t ]*\\\\([\\t ,[:alnum:]]*\\\\);\",\n     (char*)NULL };\n "}, {"sha": "f9ba9774f32cd9501d5db60d4cf1d0d7b538584e", "filename": "fixincludes/inclhack.def", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7a8f93d7b2132ed163a2d80fc06b36792042893/fixincludes%2Finclhack.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7a8f93d7b2132ed163a2d80fc06b36792042893/fixincludes%2Finclhack.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Finclhack.def?ref=c7a8f93d7b2132ed163a2d80fc06b36792042893", "patch": "@@ -4916,7 +4916,7 @@ fix = {\n \n     c_fix       = format;\n     c_fix_arg   = \"%0\\n\"\n-        \"#define ioctl(fd, func, arg) (ioctl)(fd, func, (int)(arg))\\n\";\n+        \"#define ioctl(fd, func, arg) ioctl(fd, func, (int)(arg))\\n\";\n     c_fix_arg   = \"extern[\\t ]+int[\\t ]+ioctl[\\t ]*\\\\([\\t ,[:alnum:]]*\\\\);\";\n         \n     test_text   = \"extern int ioctl ( int asdf1234, int jkl , int qwerty ) ;\";"}]}