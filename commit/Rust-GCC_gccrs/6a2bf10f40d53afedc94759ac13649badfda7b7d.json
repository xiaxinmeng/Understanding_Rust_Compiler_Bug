{"sha": "6a2bf10f40d53afedc94759ac13649badfda7b7d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmEyYmYxMGY0MGQ1M2FmZWRjOTQ3NTlhYzEzNjQ5YmFkZmRhN2I3ZA==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2013-07-22T13:03:50Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2013-07-22T13:03:50Z"}, "message": "trans-array.c (gfc_array_allocate, [...]): Plug memory leak.\n\n2013-07-22  Tobias Burnus  <burnus@net-b.de>\n\n        * trans-array.c (gfc_array_allocate,\n        gfc_trans_deferred_array): Plug memory leak.\n\nFrom-SVN: r201125", "tree": {"sha": "96151d06f40e7f07ab9f0b1862e218495072904e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/96151d06f40e7f07ab9f0b1862e218495072904e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6a2bf10f40d53afedc94759ac13649badfda7b7d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a2bf10f40d53afedc94759ac13649badfda7b7d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a2bf10f40d53afedc94759ac13649badfda7b7d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a2bf10f40d53afedc94759ac13649badfda7b7d/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "859abddd0692f10f89f3368264e3df955f6e2d68", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/859abddd0692f10f89f3368264e3df955f6e2d68", "html_url": "https://github.com/Rust-GCC/gccrs/commit/859abddd0692f10f89f3368264e3df955f6e2d68"}], "stats": {"total": 18, "additions": 12, "deletions": 6}, "files": [{"sha": "b75ffc249c554719eb13a33d8c321236a0d78fe9", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a2bf10f40d53afedc94759ac13649badfda7b7d/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a2bf10f40d53afedc94759ac13649badfda7b7d/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=6a2bf10f40d53afedc94759ac13649badfda7b7d", "patch": "@@ -1,3 +1,8 @@\n+2013-07-22  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* trans-array.c (gfc_array_allocate,\n+\tgfc_trans_deferred_array): Plug memory leak.\n+\n 2013-07-21   Ond\u0159ej B\u00edlka  <neleai@seznam.cz>\n \n \t* trans-decl.c: Fix comment typos."}, {"sha": "5bcd67ddd5933aaac8b12cdb0670a55d6a110ae8", "filename": "gcc/fortran/trans-array.c", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a2bf10f40d53afedc94759ac13649badfda7b7d/gcc%2Ffortran%2Ftrans-array.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a2bf10f40d53afedc94759ac13649badfda7b7d/gcc%2Ffortran%2Ftrans-array.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-array.c?ref=6a2bf10f40d53afedc94759ac13649badfda7b7d", "patch": "@@ -5209,7 +5209,7 @@ gfc_array_allocate (gfc_se * se, gfc_expr * expr, tree status, tree errmsg,\n \t\t\t      &se->pre, &set_descriptor_block, &overflow,\n \t\t\t      expr3_elem_size, nelems, expr3, ts);\n \n-  if (dimension)\n+  if (status == NULL_TREE && dimension)\n     {\n \n       var_overflow = gfc_create_var (integer_type_node, \"overflow\");\n@@ -5223,8 +5223,7 @@ gfc_array_allocate (gfc_se * se, gfc_expr * expr, tree status, tree errmsg,\n       error = build_call_expr_loc (input_location, gfor_fndecl_runtime_error,\n \t\t\t\t   1, msg);\n     }\n-\n-  if (status != NULL_TREE)\n+  else if (status != NULL_TREE)\n     {\n       tree status_type = TREE_TYPE (status);\n       stmtblock_t set_status_block;\n@@ -8525,10 +8524,12 @@ gfc_trans_deferred_array (gfc_symbol * sym, gfc_wrapped_block * block)\n       && !sym->attr.save && !sym->attr.result\n       && !sym->ns->proc_name->attr.is_main_program)\n     {\n+      gfc_expr *e;\n+      e = has_finalizer ? gfc_lval_expr_from_sym (sym) : NULL;\n       tmp = gfc_trans_dealloc_allocated (sym->backend_decl,\n-\t\t\t\t\t sym->attr.codimension,\n-\t\t\t\t\t has_finalizer\n-\t\t\t\t\t ? gfc_lval_expr_from_sym (sym) : NULL);\n+\t\t\t\t\t sym->attr.codimension, e);\n+      if (e)\n+\tgfc_free_expr (e);\n       gfc_add_expr_to_block (&cleanup, tmp);\n     }\n "}]}