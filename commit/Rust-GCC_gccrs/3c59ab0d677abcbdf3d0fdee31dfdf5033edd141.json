{"sha": "3c59ab0d677abcbdf3d0fdee31dfdf5033edd141", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2M1OWFiMGQ2NzdhYmNiZGYzZDBmZGVlMzFkZmRmNTAzM2VkZDE0MQ==", "commit": {"author": {"name": "David Edelsohn", "email": "dje.gcc@gmail.com", "date": "2012-03-23T23:55:01Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2012-03-23T23:55:01Z"}, "message": "inclhack.def (aix_malloc): New.\n\n       * inclhack.def (aix_malloc): New.\n       * fixincl.x: Regenerate.\n       * tests/base/malloc.h [AIX_MALLOC_CHECK]: New.\n\nFrom-SVN: r185752", "tree": {"sha": "f3b1689604dee80aff915fe030f37ef1229e195c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f3b1689604dee80aff915fe030f37ef1229e195c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3c59ab0d677abcbdf3d0fdee31dfdf5033edd141", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c59ab0d677abcbdf3d0fdee31dfdf5033edd141", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c59ab0d677abcbdf3d0fdee31dfdf5033edd141", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c59ab0d677abcbdf3d0fdee31dfdf5033edd141/comments", "author": {"login": "edelsohn", "id": 667700, "node_id": "MDQ6VXNlcjY2NzcwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/667700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edelsohn", "html_url": "https://github.com/edelsohn", "followers_url": "https://api.github.com/users/edelsohn/followers", "following_url": "https://api.github.com/users/edelsohn/following{/other_user}", "gists_url": "https://api.github.com/users/edelsohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/edelsohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edelsohn/subscriptions", "organizations_url": "https://api.github.com/users/edelsohn/orgs", "repos_url": "https://api.github.com/users/edelsohn/repos", "events_url": "https://api.github.com/users/edelsohn/events{/privacy}", "received_events_url": "https://api.github.com/users/edelsohn/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "03934a56326d43c1c8bb185979a90830fd25f880", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03934a56326d43c1c8bb185979a90830fd25f880", "html_url": "https://github.com/Rust-GCC/gccrs/commit/03934a56326d43c1c8bb185979a90830fd25f880"}], "stats": {"total": 77, "additions": 72, "deletions": 5}, "files": [{"sha": "37a378fdb81af91075f3bdca3310c5a20934e328", "filename": "fixincludes/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c59ab0d677abcbdf3d0fdee31dfdf5033edd141/fixincludes%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c59ab0d677abcbdf3d0fdee31dfdf5033edd141/fixincludes%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2FChangeLog?ref=3c59ab0d677abcbdf3d0fdee31dfdf5033edd141", "patch": "@@ -1,3 +1,9 @@\n+2012-03-23  David Edelsohn  <dje.gcc@gmail.com>\n+\n+\t* inclhack.def (aix_malloc): New.\n+\t* fixincl.x: Regenerate.\n+\t* tests/base/malloc.h [AIX_MALLOC_CHECK]: New.\n+\t\n 2012-03-22  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \tPR other/52626"}, {"sha": "3dbb744fec1630fe0d686abcfb378b6bf320f783", "filename": "fixincludes/fixincl.x", "status": "modified", "additions": 48, "deletions": 5, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c59ab0d677abcbdf3d0fdee31dfdf5033edd141/fixincludes%2Ffixincl.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c59ab0d677abcbdf3d0fdee31dfdf5033edd141/fixincludes%2Ffixincl.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ffixincl.x?ref=3c59ab0d677abcbdf3d0fdee31dfdf5033edd141", "patch": "@@ -2,11 +2,11 @@\n  * \n  * DO NOT EDIT THIS FILE   (fixincl.x)\n  * \n- * It has been AutoGen-ed  Wednesday March 14, 2012 at 03:19:50 PM MET\n+ * It has been AutoGen-ed  March 23, 2012 at 02:26:20 PM by AutoGen 5.10\n  * From the definitions    inclhack.def\n  * and the template file   fixincl\n  */\n-/* DO NOT SVN-MERGE THIS FILE, EITHER Wed Mar 14 15:19:50 MET 2012\n+/* DO NOT SVN-MERGE THIS FILE, EITHER Fri Mar 23 14:26:20 EDT 2012\n  *\n  * You must regenerate it.  Use the ./genfixes script.\n  *\n@@ -15,7 +15,7 @@\n  * certain ANSI-incompatible system header files which are fixed to work\n  * correctly with ANSI C and placed in a directory that GNU C will search.\n  *\n- * This file contains 211 fixup descriptions.\n+ * This file contains 212 fixup descriptions.\n  *\n  * See README for more information.\n  *\n@@ -520,6 +520,43 @@ static const char* apzAix_ComplexPatch[] = {\n     \"#define _Complex_I (__extension__ 1.0iF)\",\n     (char*)NULL };\n \n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Aix_Malloc fix\n+ */\n+tSCC zAix_MallocName[] =\n+     \"aix_malloc\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zAix_MallocList[] =\n+  \"malloc.h\\0\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+tSCC* apzAix_MallocMachs[] = {\n+        \"*-*-aix*\",\n+        (const char*)NULL };\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zAix_MallocSelect0[] =\n+       \"#ifdef __cplusplus\";\n+\n+#define    AIX_MALLOC_TEST_CT  1\n+static tTestDesc aAix_MallocTests[] = {\n+  { TT_EGREP,    zAix_MallocSelect0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Aix_Malloc\n+ */\n+static const char* apzAix_MallocPatch[] = {\n+    \"format\",\n+    \"#if (defined(__cplusplus) && defined(__IBMCPP__))\",\n+    (char*)NULL };\n+\n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n  *  Description of Aix_Net_If_Arp fix\n@@ -8592,9 +8629,9 @@ static const char* apzX11_SprintfPatch[] = {\n  *\n  *  List of all fixes\n  */\n-#define REGEX_COUNT          254\n+#define REGEX_COUNT          255\n #define MACH_LIST_SIZE_LIMIT 181\n-#define FIX_COUNT            211\n+#define FIX_COUNT            212\n \n /*\n  *  Enumerate the fixes\n@@ -8609,6 +8646,7 @@ typedef enum {\n     AAB_SOLARIS_SYS_VARARGS_H_FIXIDX,\n     AAB_SUN_MEMCPY_FIXIDX,\n     AIX_COMPLEX_FIXIDX,\n+    AIX_MALLOC_FIXIDX,\n     AIX_NET_IF_ARP_FIXIDX,\n     AIX_ONCE_INIT_1_FIXIDX,\n     AIX_ONCE_INIT_2_FIXIDX,\n@@ -8859,6 +8897,11 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n      AIX_COMPLEX_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aAix_ComplexTests,   apzAix_ComplexPatch, 0 },\n \n+  {  zAix_MallocName,    zAix_MallocList,\n+     apzAix_MallocMachs,\n+     AIX_MALLOC_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     aAix_MallocTests,   apzAix_MallocPatch, 0 },\n+\n   {  zAix_Net_If_ArpName,    zAix_Net_If_ArpList,\n      apzAix_Net_If_ArpMachs,\n      AIX_NET_IF_ARP_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,"}, {"sha": "8a26f2837ba9550c617c05caf38faa3db7791670", "filename": "fixincludes/inclhack.def", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c59ab0d677abcbdf3d0fdee31dfdf5033edd141/fixincludes%2Finclhack.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c59ab0d677abcbdf3d0fdee31dfdf5033edd141/fixincludes%2Finclhack.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Finclhack.def?ref=3c59ab0d677abcbdf3d0fdee31dfdf5033edd141", "patch": "@@ -369,6 +369,19 @@ fix = {\n     test_text = \"#define _Complex_I\t__I\\n\";\n };\n \n+/*\n+ *  malloc.h on AIX6 uses XLC++ specific builtin syntax\n+ */\n+fix = {\n+    hackname  = aix_malloc;\n+    mach      = \"*-*-aix*\";\n+    files     = \"malloc.h\";\n+    select    = \"#ifdef __cplusplus\";\n+    c_fix     = format;\n+    c_fix_arg = \"#if (defined(__cplusplus) && defined(__IBMCPP__))\";\n+    test_text = \"#ifdef __cplusplus\";\n+};\n+\n /*\n  * net/if_arp.h defines a variable fc_softc instead of adding a\n  * typedef for the struct on AIX 5.2, 5.3, 6.1 and 7.1"}, {"sha": "15be8b02b88c0cc4017f35b48033a05313c374bd", "filename": "fixincludes/tests/base/malloc.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c59ab0d677abcbdf3d0fdee31dfdf5033edd141/fixincludes%2Ftests%2Fbase%2Fmalloc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c59ab0d677abcbdf3d0fdee31dfdf5033edd141/fixincludes%2Ftests%2Fbase%2Fmalloc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ftests%2Fbase%2Fmalloc.h?ref=3c59ab0d677abcbdf3d0fdee31dfdf5033edd141", "patch": "@@ -9,6 +9,11 @@\n \n \n \n+#if defined( AIX_MALLOC_CHECK )\n+#if (defined(__cplusplus) && defined(__IBMCPP__))\n+#endif  /* AIX_MALLOC_CHECK */\n+\n+\n #if defined( SUN_MALLOC_CHECK )\n typedef void *\tmalloc_t;\n void\tfree();"}]}