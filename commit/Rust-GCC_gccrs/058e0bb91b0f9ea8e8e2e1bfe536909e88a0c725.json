{"sha": "058e0bb91b0f9ea8e8e2e1bfe536909e88a0c725", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDU4ZTBiYjkxYjBmOWVhOGU4ZTJlMWJmZTUzNjkwOWU4OGEwYzcyNQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-12-16T23:16:01Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-12-16T23:16:01Z"}, "message": "(optimize_reg_copy_2): Don't attempt optimization if destination\nregister dies.\n\nFrom-SVN: r10780", "tree": {"sha": "3092f4ddd4dd6afdf38355aed15cf21321dbfca1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3092f4ddd4dd6afdf38355aed15cf21321dbfca1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/058e0bb91b0f9ea8e8e2e1bfe536909e88a0c725", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/058e0bb91b0f9ea8e8e2e1bfe536909e88a0c725", "html_url": "https://github.com/Rust-GCC/gccrs/commit/058e0bb91b0f9ea8e8e2e1bfe536909e88a0c725", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/058e0bb91b0f9ea8e8e2e1bfe536909e88a0c725/comments", "author": null, "committer": null, "parents": [{"sha": "0c9cabe7d4eec4b2837f89dc5e789be0908ee642", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c9cabe7d4eec4b2837f89dc5e789be0908ee642", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c9cabe7d4eec4b2837f89dc5e789be0908ee642"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "9d941fef162c006bf9185b5213753abf18106b86", "filename": "gcc/local-alloc.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/058e0bb91b0f9ea8e8e2e1bfe536909e88a0c725/gcc%2Flocal-alloc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/058e0bb91b0f9ea8e8e2e1bfe536909e88a0c725/gcc%2Flocal-alloc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flocal-alloc.c?ref=058e0bb91b0f9ea8e8e2e1bfe536909e88a0c725", "patch": "@@ -865,7 +865,7 @@ optimize_reg_copy_1 (insn, dest, src)\n    In that case, we can replace all uses of DEST, starting with INSN and\n    ending with the set of SRC to DEST, with SRC.  We do not do this\n    optimization if a CALL_INSN is crossed unless SRC already crosses a\n-   call.\n+   call or if DEST dies before the copy back to SRC.\n \n    It is assumed that DEST and SRC are pseudos; it is too complicated to do\n    this for hard registers since the substitutions we may make might fail.  */\n@@ -930,6 +930,7 @@ optimize_reg_copy_2 (insn, dest, src)\n \t}\n \n       if (reg_set_p (src, p)\n+\t  || find_reg_note (p, REG_DEAD, dest)\n \t  || (GET_CODE (p) == CALL_INSN && reg_n_calls_crossed[sregno] == 0))\n \tbreak;\n     }"}]}