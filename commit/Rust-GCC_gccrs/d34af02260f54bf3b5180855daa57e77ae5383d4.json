{"sha": "d34af02260f54bf3b5180855daa57e77ae5383d4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDM0YWYwMjI2MGY1NGJmM2I1MTgwODU1ZGFhNTdlNzdhZTUzODNkNA==", "commit": {"author": {"name": "Ilya Enkovich", "email": "ilya.enkovich@intel.com", "date": "2014-08-18T13:26:06Z"}, "committer": {"name": "Kirill Yukhin", "email": "kyukhin@gcc.gnu.org", "date": "2014-08-18T13:26:06Z"}, "message": "re PR ipa/61800 (ICE: Segmentation fault during Firefox build)\n\nPR ipa/61800\n\ngcc/\n\t* cgraph.h (cgraph_node::create_indirect_edge): Add\n\tcompute_indirect_info param.\n\t* cgraph.c (cgraph_node::create_indirect_edge): Compute\n\tindirect_info only when it is required.\n\t* cgraphclones.c (cgraph_clone_edge): Do not recompute\n\tindirect_info fore cloned indirect edge.\n\ngcc/testsuite/\n\t* g++.dg/ipa/pr61800.C: New.\n\nFrom-SVN: r214099", "tree": {"sha": "43d6d2e3c39272c10953c9024618ac52bea882be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/43d6d2e3c39272c10953c9024618ac52bea882be"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d34af02260f54bf3b5180855daa57e77ae5383d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d34af02260f54bf3b5180855daa57e77ae5383d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d34af02260f54bf3b5180855daa57e77ae5383d4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d34af02260f54bf3b5180855daa57e77ae5383d4/comments", "author": {"login": "ienkovich", "id": 18308708, "node_id": "MDQ6VXNlcjE4MzA4NzA4", "avatar_url": "https://avatars.githubusercontent.com/u/18308708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ienkovich", "html_url": "https://github.com/ienkovich", "followers_url": "https://api.github.com/users/ienkovich/followers", "following_url": "https://api.github.com/users/ienkovich/following{/other_user}", "gists_url": "https://api.github.com/users/ienkovich/gists{/gist_id}", "starred_url": "https://api.github.com/users/ienkovich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ienkovich/subscriptions", "organizations_url": "https://api.github.com/users/ienkovich/orgs", "repos_url": "https://api.github.com/users/ienkovich/repos", "events_url": "https://api.github.com/users/ienkovich/events{/privacy}", "received_events_url": "https://api.github.com/users/ienkovich/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "44f5982995af71f407b47de16e35a0276d88b862", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44f5982995af71f407b47de16e35a0276d88b862", "html_url": "https://github.com/Rust-GCC/gccrs/commit/44f5982995af71f407b47de16e35a0276d88b862"}], "stats": {"total": 92, "additions": 88, "deletions": 4}, "files": [{"sha": "95f5de9a682971df67aecc43280463ec7d814f48", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d34af02260f54bf3b5180855daa57e77ae5383d4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d34af02260f54bf3b5180855daa57e77ae5383d4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d34af02260f54bf3b5180855daa57e77ae5383d4", "patch": "@@ -1,3 +1,13 @@\n+2014-08-18  Ilya Enkovich  <ilya.enkovich@intel.com>\n+\n+\tPR ipa/61800\n+\t* cgraph.h (cgraph_node::create_indirect_edge): Add\n+\tcompute_indirect_info param.\n+\t* cgraph.c (cgraph_node::create_indirect_edge): Compute\n+\tindirect_info only when it is required.\n+\t* cgraphclones.c (cgraph_clone_edge): Do not recompute\n+\tindirect_info fore cloned indirect edge.\n+\n 2014-08-18  Alexander Ivchenko  <alexander.ivchenko@intel.com>\n \t    Maxim Kuznetsov  <maxim.kuznetsov@intel.com>\n \t    Anna Tikhonova  <anna.tikhonova@intel.com>"}, {"sha": "cb49cdc9ef77ed5f77530f2d01e233259d4e730e", "filename": "gcc/cgraph.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d34af02260f54bf3b5180855daa57e77ae5383d4/gcc%2Fcgraph.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d34af02260f54bf3b5180855daa57e77ae5383d4/gcc%2Fcgraph.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.c?ref=d34af02260f54bf3b5180855daa57e77ae5383d4", "patch": "@@ -942,7 +942,8 @@ cgraph_allocate_init_indirect_info (void)\n \n struct cgraph_edge *\n cgraph_node::create_indirect_edge (gimple call_stmt, int ecf_flags,\n-\t\t\t\t   gcov_type count, int freq)\n+\t\t\t\t   gcov_type count, int freq,\n+\t\t\t\t   bool compute_indirect_info)\n {\n   struct cgraph_edge *edge = cgraph_node::create_edge (this, NULL, call_stmt,\n \t\t\t\t\t\t       count, freq, true);\n@@ -954,7 +955,8 @@ cgraph_node::create_indirect_edge (gimple call_stmt, int ecf_flags,\n   edge->indirect_info->ecf_flags = ecf_flags;\n \n   /* Record polymorphic call info.  */\n-  if (call_stmt\n+  if (compute_indirect_info\n+      && call_stmt\n       && (target = gimple_call_fn (call_stmt))\n       && virtual_method_call_p (target))\n     {"}, {"sha": "2594ae51109f08513f2dd35702eb4e13762f5159", "filename": "gcc/cgraph.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d34af02260f54bf3b5180855daa57e77ae5383d4/gcc%2Fcgraph.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d34af02260f54bf3b5180855daa57e77ae5383d4/gcc%2Fcgraph.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.h?ref=d34af02260f54bf3b5180855daa57e77ae5383d4", "patch": "@@ -915,7 +915,8 @@ struct GTY((tag (\"SYMTAB_FUNCTION\"))) cgraph_node : public symtab_node {\n      statement destination is a formal parameter of the caller with index\n      PARAM_INDEX. */\n   struct cgraph_edge *create_indirect_edge (gimple call_stmt, int ecf_flags,\n-\t\t\t\t\t    gcov_type count, int freq);\n+\t\t\t\t\t    gcov_type count, int freq,\n+\t\t\t\t\t    bool compute_indirect_info = true);\n \n   /* Like cgraph_create_edge walk the clone tree and update all clones sharing\n    same function body.  If clones already have edge for OLD_STMT; only"}, {"sha": "557f7345bb686667f836927846951eb98f169927", "filename": "gcc/cgraphclones.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d34af02260f54bf3b5180855daa57e77ae5383d4/gcc%2Fcgraphclones.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d34af02260f54bf3b5180855daa57e77ae5383d4/gcc%2Fcgraphclones.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphclones.c?ref=d34af02260f54bf3b5180855daa57e77ae5383d4", "patch": "@@ -136,7 +136,7 @@ cgraph_clone_edge (struct cgraph_edge *e, struct cgraph_node *n,\n \t{\n \t  new_edge = n->create_indirect_edge (call_stmt,\n \t\t\t\t\t      e->indirect_info->ecf_flags,\n-\t\t\t\t\t      count, freq);\n+\t\t\t\t\t      count, freq, false);\n \t  *new_edge->indirect_info = *e->indirect_info;\n \t}\n     }"}, {"sha": "e43e2954e1fbd60d4e33944195529acc36f61067", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d34af02260f54bf3b5180855daa57e77ae5383d4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d34af02260f54bf3b5180855daa57e77ae5383d4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d34af02260f54bf3b5180855daa57e77ae5383d4", "patch": "@@ -1,3 +1,7 @@\n+2014-08-18  Ilya Enkovich  <ilya.enkovich@intel.com>\n+\n+\t* g++.dg/ipa/pr61800.C: New.\n+\n 2014-08-18  Yury Gribov  <y.gribov@samsung.com>\n \n \tPR sanitizer/62089"}, {"sha": "b4da89921064b8e8481b81647b662642e739ff20", "filename": "gcc/testsuite/g++.dg/ipa/pr61800.C", "status": "added", "additions": 67, "deletions": 0, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d34af02260f54bf3b5180855daa57e77ae5383d4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr61800.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d34af02260f54bf3b5180855daa57e77ae5383d4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr61800.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr61800.C?ref=d34af02260f54bf3b5180855daa57e77ae5383d4", "patch": "@@ -0,0 +1,67 @@\n+/* PR ipa/61800 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+#pragma GCC visibility push(hidden)\n+class A\n+{\n+public:\n+  unsigned long m_fn1 () const;\n+};\n+class B;\n+class C\n+{\n+public:\n+  ;\n+  virtual bool m_fn2 (void) = 0;\n+};\n+class D\n+{\n+  virtual bool m_fn3 (const int &p1, B *p2) = 0;\n+};\n+class F : public D\n+{\n+  bool m_fn3 (const int &p1, B *p2);\n+  A mPredicates;\n+};\n+class B\n+{\n+};\n+class G : public B\n+{\n+  virtual unsigned int m_fn4 () = 0;\n+};\n+class H : public G\n+{\n+public:\n+  int txNodeSetContext_aContextNodeSet;\n+  H (B *p1) {}\n+  int\n+  m_fn5 ()\n+  {\n+    return mPosition < m_fn4 ();\n+  }\n+  unsigned int m_fn4 ();\n+  unsigned int mPosition;\n+};\n+\n+unsigned int a;\n+C *b;\n+bool\n+F::m_fn3 (const int &p1, B *p2)\n+{\n+  if (!b->m_fn2 ())\n+    return false;\n+  unsigned int c = mPredicates.m_fn1 ();\n+  for (1; 1 < c; ++a)\n+    {\n+      H d (p2);\n+      while (d.m_fn5 ())\n+        {\n+          do\n+            {\n+            }\n+          while (0);\n+        }\n+    }\n+}"}]}