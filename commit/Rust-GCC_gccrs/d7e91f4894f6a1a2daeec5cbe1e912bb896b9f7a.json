{"sha": "d7e91f4894f6a1a2daeec5cbe1e912bb896b9f7a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDdlOTFmNDg5NGY2YTFhMmRhZWVjNWNiZTFlOTEyYmI4OTZiOWY3YQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2021-08-11T08:26:18Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2021-08-11T10:55:24Z"}, "message": "middle-end/101858 - avoid shift of pointer in folding\n\nThis makes sure to not generate a shift of pointer types in\nsimplification of X < (cast) (1 << Y).\n\n2021-08-11  Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/101858\n\t* fold-const.c (fold_binary_loc): Guard simplification\n\tof  X < (cast) (1 << Y) to integer types.\n\n\t* gcc.dg/pr101858.c: New testcase.", "tree": {"sha": "141e305ab9267d1558440ea8fbdea11a74e514be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/141e305ab9267d1558440ea8fbdea11a74e514be"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d7e91f4894f6a1a2daeec5cbe1e912bb896b9f7a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7e91f4894f6a1a2daeec5cbe1e912bb896b9f7a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7e91f4894f6a1a2daeec5cbe1e912bb896b9f7a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7e91f4894f6a1a2daeec5cbe1e912bb896b9f7a/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f19c70afa4aa2416c581484a6eb51c0ac46acd08", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f19c70afa4aa2416c581484a6eb51c0ac46acd08", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f19c70afa4aa2416c581484a6eb51c0ac46acd08"}], "stats": {"total": 11, "additions": 11, "deletions": 0}, "files": [{"sha": "ff23f12f33c9e06071eca2b7664d82ef44210dd7", "filename": "gcc/fold-const.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7e91f4894f6a1a2daeec5cbe1e912bb896b9f7a/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7e91f4894f6a1a2daeec5cbe1e912bb896b9f7a/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=d7e91f4894f6a1a2daeec5cbe1e912bb896b9f7a", "patch": "@@ -12497,6 +12497,8 @@ fold_binary_loc (location_t loc, enum tree_code code, tree type,\n \t we can't optimize this.  E.g. (unsigned long long) (1 << Y) for Y\n \t 31 might be 0xffffffff80000000.  */\n       if ((code == LT_EXPR || code == GE_EXPR)\n+\t  && (INTEGRAL_TYPE_P (TREE_TYPE (arg0))\n+\t      || VECTOR_INTEGER_TYPE_P (TREE_TYPE (arg0)))\n \t  && TYPE_UNSIGNED (TREE_TYPE (arg0))\n \t  && CONVERT_EXPR_P (arg1)\n \t  && TREE_CODE (TREE_OPERAND (arg1, 0)) == LSHIFT_EXPR"}, {"sha": "61fcca60982cfdf36128364eacb53b4131fb2fc2", "filename": "gcc/testsuite/gcc.dg/pr101858.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7e91f4894f6a1a2daeec5cbe1e912bb896b9f7a/gcc%2Ftestsuite%2Fgcc.dg%2Fpr101858.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7e91f4894f6a1a2daeec5cbe1e912bb896b9f7a/gcc%2Ftestsuite%2Fgcc.dg%2Fpr101858.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr101858.c?ref=d7e91f4894f6a1a2daeec5cbe1e912bb896b9f7a", "patch": "@@ -0,0 +1,9 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-w\" } */\n+\n+int foo(int a)\n+{\n+  if (a < (int*)((__INTPTR_TYPE__)1 << a))\n+    a = 0;\n+  return a;\n+}"}]}