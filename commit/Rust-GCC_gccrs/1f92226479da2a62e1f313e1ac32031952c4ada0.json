{"sha": "1f92226479da2a62e1f313e1ac32031952c4ada0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWY5MjIyNjQ3OWRhMmE2MmUxZjMxM2UxYWMzMjAzMTk1MmM0YWRhMA==", "commit": {"author": {"name": "Zdenek Dvorak", "email": "dvorakz@suse.cz", "date": "2006-02-10T21:01:10Z"}, "committer": {"name": "Zdenek Dvorak", "email": "rakdver@gcc.gnu.org", "date": "2006-02-10T21:01:10Z"}, "message": "invoke.texi (-floop-optimize2): Removed.\n\n\t* doc/invoke.texi (-floop-optimize2): Removed.\n\t* toplev.c (process_options): Remove handling of flag_loop_optimize2.\n\t* loop-init.c (gate_handle_loop2): Do not test flag_loop_optimize2.\n\tTest flag_branch_on_count_reg only if HAVE_doloop_end.\n\t* common.opt (floop-optimize2): Removed.\n\t(fmove-loop-invariants): Enabled by default.\n\n\t* gcc.dg/20050105-1.c: Do not use -floop-optimize2.\n\nFrom-SVN: r110852", "tree": {"sha": "bd9c601cf33cdc324848180e51e95dbbc17f176e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bd9c601cf33cdc324848180e51e95dbbc17f176e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1f92226479da2a62e1f313e1ac32031952c4ada0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f92226479da2a62e1f313e1ac32031952c4ada0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f92226479da2a62e1f313e1ac32031952c4ada0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f92226479da2a62e1f313e1ac32031952c4ada0/comments", "author": null, "committer": null, "parents": [{"sha": "9769818580bba2156b8b2aba8c02c29ad54c8ee1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9769818580bba2156b8b2aba8c02c29ad54c8ee1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9769818580bba2156b8b2aba8c02c29ad54c8ee1"}], "stats": {"total": 49, "additions": 21, "deletions": 28}, "files": [{"sha": "413d150de61dc304045be9ccd14aa86ef12daea5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f92226479da2a62e1f313e1ac32031952c4ada0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f92226479da2a62e1f313e1ac32031952c4ada0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1f92226479da2a62e1f313e1ac32031952c4ada0", "patch": "@@ -1,3 +1,12 @@\n+2006-02-10  Zdenek Dvorak <dvorakz@suse.cz>\n+\n+\t* doc/invoke.texi (-floop-optimize2): Removed.\n+\t* toplev.c (process_options): Remove handling of flag_loop_optimize2.\n+\t* loop-init.c (gate_handle_loop2): Do not test flag_loop_optimize2.\n+\tTest flag_branch_on_count_reg only if HAVE_doloop_end.\n+\t* common.opt (floop-optimize2): Removed.\n+\t(fmove-loop-invariants): Enabled by default.\n+\n 2006-02-10  Sebastian Pop  <pop@cri.ensmp.fr>\n \n \t* tree-if-conv.c (combine_blocks): Free the result of"}, {"sha": "f8077ae37517036c0377bb0ee0598f69579a328f", "filename": "gcc/common.opt", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f92226479da2a62e1f313e1ac32031952c4ada0/gcc%2Fcommon.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f92226479da2a62e1f313e1ac32031952c4ada0/gcc%2Fcommon.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon.opt?ref=1f92226479da2a62e1f313e1ac32031952c4ada0", "patch": "@@ -555,10 +555,6 @@ floop-optimize\n Common Report Var(flag_loop_optimize)\n Perform loop optimizations\n \n-floop-optimize2\n-Common Report Var(flag_loop_optimize2)\n-Perform loop optimizations using the new loop optimizer\n-\n fmath-errno\n Common Report Var(flag_errno_math) Init(1)\n Set errno after built-in math functions\n@@ -587,7 +583,7 @@ Common Report Var(flag_modulo_sched)\n Perform SMS based modulo scheduling before the first scheduling pass\n \n fmove-loop-invariants\n-Common Report Var(flag_move_loop_invariants)\n+Common Report Var(flag_move_loop_invariants) Init(1)\n Move loop invariant computations out of loops\n \n fmudflap"}, {"sha": "1384562b98560af8faace68710d51d9a33181bc9", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f92226479da2a62e1f313e1ac32031952c4ada0/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f92226479da2a62e1f313e1ac32031952c4ada0/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=1f92226479da2a62e1f313e1ac32031952c4ada0", "patch": "@@ -315,7 +315,7 @@ Objective-C and Objective-C++ Dialects}.\n -finline-limit=@var{n}  -fkeep-inline-functions @gol\n -fkeep-static-consts  -fmerge-constants  -fmerge-all-constants @gol\n -fmodulo-sched -fno-branch-count-reg @gol\n--fno-default-inline  -fno-defer-pop -floop-optimize2 -fmove-loop-invariants @gol\n+-fno-default-inline  -fno-defer-pop -fmove-loop-invariants @gol\n -fno-function-cse  -fno-guess-branch-probability @gol\n -fno-inline  -fno-math-errno  -fno-peephole  -fno-peephole2 @gol\n -funsafe-math-optimizations  -funsafe-loop-optimizations  -ffinite-math-only @gol\n@@ -4832,12 +4832,6 @@ exit test conditions and optionally do strength-reduction as well.\n \n Enabled at levels @option{-O}, @option{-O2}, @option{-O3}, @option{-Os}.\n \n-@item -floop-optimize2\n-@opindex floop-optimize2\n-Perform loop optimizations using the new loop optimizer.  The optimizations\n-(loop unrolling, peeling and unswitching, loop invariant motion) are enabled\n-by separate flags.\n-\n @item -funsafe-loop-optimizations\n @opindex funsafe-loop-optimizations\n If given, the loop optimizer will assume that loop indices do not"}, {"sha": "51ad1dad3785b04651e7b857a6086e18f8455ce7", "filename": "gcc/loop-init.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f92226479da2a62e1f313e1ac32031952c4ada0/gcc%2Floop-init.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f92226479da2a62e1f313e1ac32031952c4ada0/gcc%2Floop-init.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop-init.c?ref=1f92226479da2a62e1f313e1ac32031952c4ada0", "patch": "@@ -133,12 +133,15 @@ loop_optimizer_finalize (struct loops *loops)\n static bool\n gate_handle_loop2 (void)\n {\n-  return (optimize > 0 && flag_loop_optimize2\n+  return (optimize > 0\n   \t  && (flag_move_loop_invariants\n               || flag_unswitch_loops\n               || flag_peel_loops\n               || flag_unroll_loops\n-              || flag_branch_on_count_reg));\n+#ifdef HAVE_doloop_end\n+\t      || (flag_branch_on_count_reg && HAVE_doloop_end)\n+#endif\n+\t      ));\n }\n \n struct tree_opt_pass pass_loop2 ="}, {"sha": "be9824e030c1f041158777ee7eeeb20e895952c0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f92226479da2a62e1f313e1ac32031952c4ada0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f92226479da2a62e1f313e1ac32031952c4ada0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1f92226479da2a62e1f313e1ac32031952c4ada0", "patch": "@@ -1,3 +1,7 @@\n+2006-02-10  Zdenek Dvorak <dvorakz@suse.cz>\n+\n+\t* gcc.dg/20050105-1.c: Do not use -floop-optimize2.\n+\n 2006-02-10  Jeff Law  <law@redhat.com>\n \n \t* gcc.c-torture/compile/pr26213.c: New test."}, {"sha": "58a75150bdb1a637ff4b49a4a04ea210111e317a", "filename": "gcc/testsuite/gcc.dg/20050105-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f92226479da2a62e1f313e1ac32031952c4ada0/gcc%2Ftestsuite%2Fgcc.dg%2F20050105-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f92226479da2a62e1f313e1ac32031952c4ada0/gcc%2Ftestsuite%2Fgcc.dg%2F20050105-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20050105-1.c?ref=1f92226479da2a62e1f313e1ac32031952c4ada0", "patch": "@@ -1,6 +1,6 @@\n /* PR rtl-optimization/18861 */\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -floop-optimize2\" } */\n+/* { dg-options \"-O2\" } */\n \n extern void abort (void);\n "}, {"sha": "013ce6e7a678214ada2920f63fd63fcc1540453f", "filename": "gcc/toplev.c", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f92226479da2a62e1f313e1ac32031952c4ada0/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f92226479da2a62e1f313e1ac32031952c4ada0/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=1f92226479da2a62e1f313e1ac32031952c4ada0", "patch": "@@ -1568,19 +1568,6 @@ process_options (void)\n   if (flag_rename_registers == AUTODETECT_VALUE)\n     flag_rename_registers = flag_unroll_loops || flag_peel_loops;\n \n-  /* If explicitly asked to run new loop optimizer, switch off the old\n-     one.  */\n-  if (flag_loop_optimize2)\n-    flag_loop_optimize = 0;\n-\n-  /* Enable new loop optimizer pass if any of its optimizations is called.  */\n-  if (flag_move_loop_invariants\n-      || flag_unswitch_loops\n-      || flag_peel_loops\n-      || flag_unroll_loops\n-      || flag_branch_on_count_reg)\n-    flag_loop_optimize2 = 1;\n-\n   if (flag_non_call_exceptions)\n     flag_asynchronous_unwind_tables = 1;\n   if (flag_asynchronous_unwind_tables)"}]}