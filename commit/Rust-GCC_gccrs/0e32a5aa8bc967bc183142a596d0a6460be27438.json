{"sha": "0e32a5aa8bc967bc183142a596d0a6460be27438", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGUzMmE1YWE4YmM5NjdiYzE4MzE0MmE1OTZkMGE2NDYwYmUyNzQzOA==", "commit": {"author": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2021-08-29T17:00:33Z"}, "committer": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2021-08-29T23:14:18Z"}, "message": "libiberty: Add support for D `typeof(*null)' types\n\nThe D language has a new bottom type `typeof(*null)'.  Null types were\nalso incorrectly being demangled as `none', this has been fixed to be\n`typeof(null)'.\n\nlibiberty/ChangeLog:\n\n\t* d-demangle.c (dlang_attributes): Handle typeof(*null).\n\t(dlang_type): Likewise.  Demangle 'n' as typeof(null).\n\t* testsuite/d-demangle-expected: Update tests.", "tree": {"sha": "1e4a2a1d03104cc7fccdaffac7965169cfe8899e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1e4a2a1d03104cc7fccdaffac7965169cfe8899e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0e32a5aa8bc967bc183142a596d0a6460be27438", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e32a5aa8bc967bc183142a596d0a6460be27438", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e32a5aa8bc967bc183142a596d0a6460be27438", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e32a5aa8bc967bc183142a596d0a6460be27438/comments", "author": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c3c669ac811429033c0151f910b38fc009e21ca8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3c669ac811429033c0151f910b38fc009e21ca8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c3c669ac811429033c0151f910b38fc009e21ca8"}], "stats": {"total": 18, "additions": 15, "deletions": 3}, "files": [{"sha": "c34f91843decb45119002ab2e20f1c38603a6769", "filename": "libiberty/d-demangle.c", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e32a5aa8bc967bc183142a596d0a6460be27438/libiberty%2Fd-demangle.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e32a5aa8bc967bc183142a596d0a6460be27438/libiberty%2Fd-demangle.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fd-demangle.c?ref=0e32a5aa8bc967bc183142a596d0a6460be27438", "patch": "@@ -573,9 +573,11 @@ dlang_attributes (string *decl, const char *mangled)\n \tcase 'g':\n \tcase 'h':\n \tcase 'k':\n+\tcase 'n':\n \t  /* inout parameter is represented as 'Ng'.\n \t     vector parameter is represented as 'Nh'.\n-\t     return paramenter is represented as 'Nk'.\n+\t     return parameter is represented as 'Nk'.\n+\t     typeof(*null) parameter is represented as 'Nn'.\n \t     If we see this, then we know we're really in the\n \t     parameter list.  Rewind and break.  */\n \t  mangled--;\n@@ -787,6 +789,12 @@ dlang_type (string *decl, const char *mangled, struct dlang_info *info)\n \t  string_append (decl, \")\");\n \t  return mangled;\n \t}\n+      else if (*mangled == 'n') /* typeof(*null) */\n+\t{\n+\t  mangled++;\n+\t  string_append (decl, \"typeof(*null)\");\n+\t  return mangled;\n+\t}\n       else\n \treturn NULL;\n     case 'A': /* dynamic array (T[]) */\n@@ -884,7 +892,7 @@ dlang_type (string *decl, const char *mangled, struct dlang_info *info)\n     /* Basic types */\n     case 'n':\n       mangled++;\n-      string_append (decl, \"none\");\n+      string_append (decl, \"typeof(null)\");\n       return mangled;\n     case 'v':\n       mangled++;"}, {"sha": "00036e7810a97640afa429ffbc16b7367f87738e", "filename": "libiberty/testsuite/d-demangle-expected", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e32a5aa8bc967bc183142a596d0a6460be27438/libiberty%2Ftestsuite%2Fd-demangle-expected", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e32a5aa8bc967bc183142a596d0a6460be27438/libiberty%2Ftestsuite%2Fd-demangle-expected", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Ftestsuite%2Fd-demangle-expected?ref=0e32a5aa8bc967bc183142a596d0a6460be27438", "patch": "@@ -83,7 +83,11 @@ demangle.test(ulong)\n #\n --format=dlang\n _D8demangle4testFnZv\n-demangle.test(none)\n+demangle.test(typeof(null))\n+#\n+--format=dlang\n+_D8demangle4testFNnZv\n+demangle.test(typeof(*null))\n #\n --format=dlang\n _D8demangle4testFoZv"}]}