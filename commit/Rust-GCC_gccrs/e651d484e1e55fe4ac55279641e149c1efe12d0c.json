{"sha": "e651d484e1e55fe4ac55279641e149c1efe12d0c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTY1MWQ0ODRlMWU1NWZlNGFjNTUyNzk2NDFlMTQ5YzFlZmUxMmQwYw==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2002-12-02T02:02:43Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2002-12-02T02:02:43Z"}, "message": "h8300.c (h8300_output_function_prologue): Remove variable idx.\n\n\t* config/h8300/h8300.c (h8300_output_function_prologue):\n\tRemove variable idx.\n\t(h8300_output_function_epilogue): Likewise.\n\nFrom-SVN: r59703", "tree": {"sha": "128f9ced4eaaa438007954623565baa81ee1eb90", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/128f9ced4eaaa438007954623565baa81ee1eb90"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e651d484e1e55fe4ac55279641e149c1efe12d0c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e651d484e1e55fe4ac55279641e149c1efe12d0c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e651d484e1e55fe4ac55279641e149c1efe12d0c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e651d484e1e55fe4ac55279641e149c1efe12d0c/comments", "author": null, "committer": null, "parents": [{"sha": "ab8227fa45518b721f6cf8d7a8d00e98979ac452", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab8227fa45518b721f6cf8d7a8d00e98979ac452", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab8227fa45518b721f6cf8d7a8d00e98979ac452"}], "stats": {"total": 18, "additions": 10, "deletions": 8}, "files": [{"sha": "4a7d372619f3f41473f9e60e4735166d6d526146", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e651d484e1e55fe4ac55279641e149c1efe12d0c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e651d484e1e55fe4ac55279641e149c1efe12d0c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e651d484e1e55fe4ac55279641e149c1efe12d0c", "patch": "@@ -1,3 +1,9 @@\n+2002-12-01  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* config/h8300/h8300.c (h8300_output_function_prologue):\n+\tRemove variable idx.\n+\t(h8300_output_function_epilogue): Likewise.\n+\n 2002-12-01  Zack Weinberg  <zack@codesourcery.com>\n \n \t* config/frv/xm-frv.h: Delete, unnecessary."}, {"sha": "84ce43684a072c6d85f8012494cd1c99cc5f510a", "filename": "gcc/config/h8300/h8300.c", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e651d484e1e55fe4ac55279641e149c1efe12d0c/gcc%2Fconfig%2Fh8300%2Fh8300.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e651d484e1e55fe4ac55279641e149c1efe12d0c/gcc%2Fconfig%2Fh8300%2Fh8300.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.c?ref=e651d484e1e55fe4ac55279641e149c1efe12d0c", "patch": "@@ -510,7 +510,7 @@ h8300_output_function_prologue (file, size)\n      HOST_WIDE_INT size;\n {\n   int fsize = round_frame_size (size);\n-  int idx;\n+  int regno;\n   int saved_regs;\n   int n_regs;\n \n@@ -580,10 +580,8 @@ h8300_output_function_prologue (file, size)\n \n   /* Push the rest of the registers in ascending order.  */\n   saved_regs = compute_saved_regs ();\n-  for (idx = 0; idx < FIRST_PSEUDO_REGISTER; idx += n_regs)\n+  for (regno = 0; regno < FIRST_PSEUDO_REGISTER; regno += n_regs)\n     {\n-      int regno = idx;\n-\n       n_regs = 1;\n       if (saved_regs & (1 << regno))\n \t{\n@@ -621,7 +619,7 @@ h8300_output_function_epilogue (file, size)\n      HOST_WIDE_INT size;\n {\n   int fsize = round_frame_size (size);\n-  int idx;\n+  int regno;\n   rtx insn = get_last_insn ();\n   int saved_regs;\n   int n_regs;\n@@ -648,10 +646,8 @@ h8300_output_function_epilogue (file, size)\n \n   /* Pop the saved registers in descending order.  */\n   saved_regs = compute_saved_regs ();\n-  for (idx = 0; idx < FIRST_PSEUDO_REGISTER; idx += n_regs)\n+  for (regno = FIRST_PSEUDO_REGISTER - 1; regno >= 0; regno -= n_regs)\n     {\n-      int regno = (FIRST_PSEUDO_REGISTER - 1) - idx;\n-\n       n_regs = 1;\n       if (saved_regs & (1 << regno))\n \t{"}]}