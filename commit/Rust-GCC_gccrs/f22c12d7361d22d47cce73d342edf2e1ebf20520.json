{"sha": "f22c12d7361d22d47cce73d342edf2e1ebf20520", "node_id": "C_kwDOANBUbNoAKGYyMmMxMmQ3MzYxZDIyZDQ3Y2NlNzNkMzQyZWRmMmUxZWJmMjA1MjA", "commit": {"author": {"name": "Ian Lance Taylor", "email": "iant@golang.org", "date": "2023-04-07T20:27:04Z"}, "committer": {"name": "Ian Lance Taylor", "email": "iant@golang.org", "date": "2023-04-07T21:07:10Z"}, "message": "mime: remove test ordering dependency\n\nBackport CL 421442 from upstream.\n\nOriginal description:\n\nArrange for tests that call setMimeInit to fully restore the old values,\nby clearing the sync.Once that controls initialization.\n\nOnce we've done that, call initMime in initMimeUnixTest because\notherwise the test types loaded there will be cleared by the call to\ninitMime that previously was not being done.\n\nFor golang/go#51648\n\nReviewed-on: https://go-review.googlesource.com/c/gofrontend/+/483117", "tree": {"sha": "ebd8e7630e3d9ed37c26d2620b66925b61837ac3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ebd8e7630e3d9ed37c26d2620b66925b61837ac3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f22c12d7361d22d47cce73d342edf2e1ebf20520", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f22c12d7361d22d47cce73d342edf2e1ebf20520", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f22c12d7361d22d47cce73d342edf2e1ebf20520", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f22c12d7361d22d47cce73d342edf2e1ebf20520/comments", "author": {"login": "ianlancetaylor", "id": 3194333, "node_id": "MDQ6VXNlcjMxOTQzMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/3194333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ianlancetaylor", "html_url": "https://github.com/ianlancetaylor", "followers_url": "https://api.github.com/users/ianlancetaylor/followers", "following_url": "https://api.github.com/users/ianlancetaylor/following{/other_user}", "gists_url": "https://api.github.com/users/ianlancetaylor/gists{/gist_id}", "starred_url": "https://api.github.com/users/ianlancetaylor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ianlancetaylor/subscriptions", "organizations_url": "https://api.github.com/users/ianlancetaylor/orgs", "repos_url": "https://api.github.com/users/ianlancetaylor/repos", "events_url": "https://api.github.com/users/ianlancetaylor/events{/privacy}", "received_events_url": "https://api.github.com/users/ianlancetaylor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ianlancetaylor", "id": 3194333, "node_id": "MDQ6VXNlcjMxOTQzMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/3194333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ianlancetaylor", "html_url": "https://github.com/ianlancetaylor", "followers_url": "https://api.github.com/users/ianlancetaylor/followers", "following_url": "https://api.github.com/users/ianlancetaylor/following{/other_user}", "gists_url": "https://api.github.com/users/ianlancetaylor/gists{/gist_id}", "starred_url": "https://api.github.com/users/ianlancetaylor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ianlancetaylor/subscriptions", "organizations_url": "https://api.github.com/users/ianlancetaylor/orgs", "repos_url": "https://api.github.com/users/ianlancetaylor/repos", "events_url": "https://api.github.com/users/ianlancetaylor/events{/privacy}", "received_events_url": "https://api.github.com/users/ianlancetaylor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f189c4ab489ce72e949c1ecde6b97e9dcbddf72e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f189c4ab489ce72e949c1ecde6b97e9dcbddf72e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f189c4ab489ce72e949c1ecde6b97e9dcbddf72e"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "e133650ad915176d71df790b6a0af6314c8eda09", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f22c12d7361d22d47cce73d342edf2e1ebf20520/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f22c12d7361d22d47cce73d342edf2e1ebf20520/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=f22c12d7361d22d47cce73d342edf2e1ebf20520", "patch": "@@ -1,4 +1,4 @@\n-63ba7dd52f2cc49dab4b70ac81309296a920d4dc\n+0411a2733fd468e69f1998edd91e8fe3ba40ff9e\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "5769c6a55de294d6405c767785049ae604109d28", "filename": "libgo/go/mime/type_test.go", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f22c12d7361d22d47cce73d342edf2e1ebf20520/libgo%2Fgo%2Fmime%2Ftype_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f22c12d7361d22d47cce73d342edf2e1ebf20520/libgo%2Fgo%2Fmime%2Ftype_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fmime%2Ftype_test.go?ref=f22c12d7361d22d47cce73d342edf2e1ebf20520", "patch": "@@ -14,7 +14,10 @@ import (\n func setMimeInit(fn func()) (cleanup func()) {\n \tonce = sync.Once{}\n \ttestInitMime = fn\n-\treturn func() { testInitMime = nil }\n+\treturn func() {\n+\t\ttestInitMime = nil\n+\t\tonce = sync.Once{}\n+\t}\n }\n \n func clearMimeTypes() {"}, {"sha": "43db44b7aa137bd2effcc5e15aede7b413650b64", "filename": "libgo/go/mime/type_unix_test.go", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f22c12d7361d22d47cce73d342edf2e1ebf20520/libgo%2Fgo%2Fmime%2Ftype_unix_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f22c12d7361d22d47cce73d342edf2e1ebf20520/libgo%2Fgo%2Fmime%2Ftype_unix_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fmime%2Ftype_unix_test.go?ref=f22c12d7361d22d47cce73d342edf2e1ebf20520", "patch": "@@ -11,6 +11,7 @@ import (\n )\n \n func initMimeUnixTest(t *testing.T) {\n+\tonce.Do(initMime)\n \terr := loadMimeGlobsFile(\"testdata/test.types.globs2\")\n \tif err != nil {\n \t\tt.Fatal(err)"}]}