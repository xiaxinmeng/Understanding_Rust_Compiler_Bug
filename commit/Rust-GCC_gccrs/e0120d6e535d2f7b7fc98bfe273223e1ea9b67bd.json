{"sha": "e0120d6e535d2f7b7fc98bfe273223e1ea9b67bd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTAxMjBkNmU1MzVkMmY3YjdmYzk4YmZlMjczMjIzZTFlYTliNjdiZA==", "commit": {"author": {"name": "Hans-Peter Nilsson", "email": "hp@bitrange.com", "date": "2001-07-23T13:21:39Z"}, "committer": {"name": "Hans-Peter Nilsson", "email": "hp@gcc.gnu.org", "date": "2001-07-23T13:21:39Z"}, "message": "reload.c (push_reload): Fix typo in comment.\n\n\t* reload.c (push_reload): Fix typo in comment.\n\t(find_reloads_address): Ditto.\n\t(reg_overlap_mentioned_for_reload_p): Ditto in head comment.\n\nFrom-SVN: r44264", "tree": {"sha": "dd28b8062b4d9a9f20b1c876528a601d79304230", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dd28b8062b4d9a9f20b1c876528a601d79304230"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e0120d6e535d2f7b7fc98bfe273223e1ea9b67bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0120d6e535d2f7b7fc98bfe273223e1ea9b67bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e0120d6e535d2f7b7fc98bfe273223e1ea9b67bd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0120d6e535d2f7b7fc98bfe273223e1ea9b67bd/comments", "author": null, "committer": null, "parents": [{"sha": "f981f97beb9437fac8f5071a282669b09e295707", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f981f97beb9437fac8f5071a282669b09e295707", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f981f97beb9437fac8f5071a282669b09e295707"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "b400b34f1f6dd26d28a1cf0061444ba04b94383a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0120d6e535d2f7b7fc98bfe273223e1ea9b67bd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0120d6e535d2f7b7fc98bfe273223e1ea9b67bd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e0120d6e535d2f7b7fc98bfe273223e1ea9b67bd", "patch": "@@ -1,3 +1,9 @@\n+2001-07-23  Hans-Peter Nilsson  <hp@bitrange.com>\n+\n+\t* reload.c (push_reload): Fix typo in comment.\n+\t(find_reloads_address): Ditto.\n+\t(reg_overlap_mentioned_for_reload_p): Ditto in head comment.\n+\n 2001-07-22  Richard Henderson  <rth@redhat.com>\n \n \t* flow.c: Grammar check and clarify a lot of comments."}, {"sha": "0955ec892874bd2e1e97fac860e6b1278e64b280", "filename": "gcc/reload.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0120d6e535d2f7b7fc98bfe273223e1ea9b67bd/gcc%2Freload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0120d6e535d2f7b7fc98bfe273223e1ea9b67bd/gcc%2Freload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload.c?ref=e0120d6e535d2f7b7fc98bfe273223e1ea9b67bd", "patch": "@@ -1364,7 +1364,7 @@ push_reload (in, out, inloc, outloc, class,\n       rld[i].opnum = MIN (rld[i].opnum, opnum);\n     }\n \n-  /* If the ostensible rtx being reload differs from the rtx found\n+  /* If the ostensible rtx being reloaded differs from the rtx found\n      in the location to substitute, this reload is not safe to combine\n      because we cannot reliably tell whether it appears in the insn.  */\n \n@@ -4847,7 +4847,7 @@ find_reloads_address (mode, memrefloc, ad, loc, opnum, type, ind_levels, insn)\n      into a register.  */\n   if (CONSTANT_P (ad) && ! strict_memory_address_p (mode, ad))\n     {\n-      /* If AD is in address in the constant pool, the MEM rtx may be shared.\n+      /* If AD is an address in the constant pool, the MEM rtx may be shared.\n \t Unshare it so we can safely alter it.  */\n       if (memrefloc && GET_CODE (ad) == SYMBOL_REF\n \t  && CONSTANT_POOL_ADDRESS_P (ad))\n@@ -6076,7 +6076,7 @@ refers_to_regno_for_reload_p (regno, endregno, x, loc)\n    contains a MEM (we don't bother checking for memory addresses that can't\n    conflict because we expect this to be a rare case.\n \n-   This function is similar to reg_overlap_mention_p in rtlanal.c except\n+   This function is similar to reg_overlap_mentioned_p in rtlanal.c except\n    that we look at equivalences for pseudos that didn't get hard registers.  */\n \n int"}]}