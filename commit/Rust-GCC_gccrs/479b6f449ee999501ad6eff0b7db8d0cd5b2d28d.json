{"sha": "479b6f449ee999501ad6eff0b7db8d0cd5b2d28d", "node_id": "C_kwDOANBUbNoAKDQ3OWI2ZjQ0OWVlOTk5NTAxYWQ2ZWZmMGI3ZGI4ZDBjZDViMmQyOGQ", "commit": {"author": {"name": "Takayuki 'January June' Suwa", "email": "jjsuwa_sys3175@yahoo.co.jp", "date": "2022-06-17T13:47:49Z"}, "committer": {"name": "Max Filippov", "email": "jcmvbkbc@gmail.com", "date": "2022-06-18T06:28:14Z"}, "message": "xtensa: Defer storing integer constants into litpool until reload\n\nStoring integer constants into litpool in the early stage of compilation\nhinders some integer optimizations.  In fact, such integer constants are\nnot subject to the constant folding process.\n\nFor example:\n\n    extern unsigned short value;\n    extern void foo(void);\n    void test(void) {\n      if (value == 30001)\n        foo();\n    }\n\n\t.literal_position\n\t.literal .LC0, value\n\t.literal .LC1, 30001\n    test:\n\tl32r\ta3, .LC0\n\tl32r\ta2, .LC1\n\tl16ui\ta3, a3, 0\n\textui\ta2, a2, 0, 16  // runtime zero-extension despite constant\n\tbne\ta3, a2, .L1\n\tj.l\tfoo, a9\n    .L1:\n\tret.n\n\nThis patch defers the placement of integer constants into litpool until\nthe start of reload:\n\n\t.literal_position\n\t.literal .LC0, value\n\t.literal .LC1, 30001\n    test:\n\tl32r\ta3, .LC0\n\tl32r\ta2, .LC1\n\tl16ui\ta3, a3, 0\n\tbne\ta3, a2, .L1\n\tj.l\tfoo, a9\n    .L1:\n\tret.n\n\ngcc/ChangeLog:\n\n\t* config/xtensa/constraints.md (Y):\n\tChange to include integer constants until reload begins.\n\t* config/xtensa/predicates.md (move_operand): Ditto.\n\t* config/xtensa/xtensa.cc (xtensa_emit_move_sequence):\n\tChange to allow storing integer constants into litpool only after\n\treload begins.", "tree": {"sha": "792545e37b0995be2b60a94b691461ac417038ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/792545e37b0995be2b60a94b691461ac417038ce"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/479b6f449ee999501ad6eff0b7db8d0cd5b2d28d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/479b6f449ee999501ad6eff0b7db8d0cd5b2d28d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/479b6f449ee999501ad6eff0b7db8d0cd5b2d28d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/479b6f449ee999501ad6eff0b7db8d0cd5b2d28d/comments", "author": {"login": "jjsuwa-sys3175", "id": 73290592, "node_id": "MDQ6VXNlcjczMjkwNTky", "avatar_url": "https://avatars.githubusercontent.com/u/73290592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jjsuwa-sys3175", "html_url": "https://github.com/jjsuwa-sys3175", "followers_url": "https://api.github.com/users/jjsuwa-sys3175/followers", "following_url": "https://api.github.com/users/jjsuwa-sys3175/following{/other_user}", "gists_url": "https://api.github.com/users/jjsuwa-sys3175/gists{/gist_id}", "starred_url": "https://api.github.com/users/jjsuwa-sys3175/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jjsuwa-sys3175/subscriptions", "organizations_url": "https://api.github.com/users/jjsuwa-sys3175/orgs", "repos_url": "https://api.github.com/users/jjsuwa-sys3175/repos", "events_url": "https://api.github.com/users/jjsuwa-sys3175/events{/privacy}", "received_events_url": "https://api.github.com/users/jjsuwa-sys3175/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jcmvbkbc", "id": 166731, "node_id": "MDQ6VXNlcjE2NjczMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/166731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jcmvbkbc", "html_url": "https://github.com/jcmvbkbc", "followers_url": "https://api.github.com/users/jcmvbkbc/followers", "following_url": "https://api.github.com/users/jcmvbkbc/following{/other_user}", "gists_url": "https://api.github.com/users/jcmvbkbc/gists{/gist_id}", "starred_url": "https://api.github.com/users/jcmvbkbc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jcmvbkbc/subscriptions", "organizations_url": "https://api.github.com/users/jcmvbkbc/orgs", "repos_url": "https://api.github.com/users/jcmvbkbc/repos", "events_url": "https://api.github.com/users/jcmvbkbc/events{/privacy}", "received_events_url": "https://api.github.com/users/jcmvbkbc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5a66d7dd2bf4c99b743de65a5b0bcfab44c77305", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a66d7dd2bf4c99b743de65a5b0bcfab44c77305", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a66d7dd2bf4c99b743de65a5b0bcfab44c77305"}], "stats": {"total": 14, "additions": 9, "deletions": 5}, "files": [{"sha": "0b7dcd1440e716d59fb1ca2231c10717e84964e9", "filename": "gcc/config/xtensa/constraints.md", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/479b6f449ee999501ad6eff0b7db8d0cd5b2d28d/gcc%2Fconfig%2Fxtensa%2Fconstraints.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/479b6f449ee999501ad6eff0b7db8d0cd5b2d28d/gcc%2Fconfig%2Fxtensa%2Fconstraints.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Fconstraints.md?ref=479b6f449ee999501ad6eff0b7db8d0cd5b2d28d", "patch": "@@ -113,8 +113,10 @@\n \n (define_constraint \"Y\"\n  \"A constant that can be used in relaxed MOVI instructions.\"\n- (and (match_code \"const_int,const_double,const,symbol_ref,label_ref\")\n-      (match_test \"TARGET_AUTO_LITPOOLS\")))\n+ (ior (and (match_code \"const_int,const_double,const,symbol_ref,label_ref\")\n+\t   (match_test \"TARGET_AUTO_LITPOOLS\"))\n+      (and (match_code \"const_int\")\n+\t   (match_test \"can_create_pseudo_p ()\"))))\n \n ;; Memory constraints.  Do not use define_memory_constraint here.  Doing so\n ;; causes reload to force some constants into the constant pool, but since"}, {"sha": "0590c0f81a99c616eaf19bbe28aa9ca47ebe158f", "filename": "gcc/config/xtensa/predicates.md", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/479b6f449ee999501ad6eff0b7db8d0cd5b2d28d/gcc%2Fconfig%2Fxtensa%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/479b6f449ee999501ad6eff0b7db8d0cd5b2d28d/gcc%2Fconfig%2Fxtensa%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Fpredicates.md?ref=479b6f449ee999501ad6eff0b7db8d0cd5b2d28d", "patch": "@@ -147,8 +147,9 @@\n \t       (match_test \"!constantpool_mem_p (op)\n \t\t\t    || GET_MODE_SIZE (mode) % UNITS_PER_WORD == 0\")))\n      (ior (and (match_code \"const_int\")\n-\t       (match_test \"GET_MODE_CLASS (mode) == MODE_INT\n-\t\t\t    && xtensa_simm12b (INTVAL (op))\"))\n+\t       (match_test \"(GET_MODE_CLASS (mode) == MODE_INT\n+\t\t\t     && xtensa_simm12b (INTVAL (op)))\n+\t\t\t    || can_create_pseudo_p ()\"))\n \t  (and (match_code \"const_int,const_double,const,symbol_ref,label_ref\")\n \t       (match_test \"(TARGET_CONST16 || TARGET_AUTO_LITPOOLS)\n \t\t\t    && CONSTANT_P (op)"}, {"sha": "c5d00acdf2cb2e3905a7f14bffc5c0fc2ae4d179", "filename": "gcc/config/xtensa/xtensa.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/479b6f449ee999501ad6eff0b7db8d0cd5b2d28d/gcc%2Fconfig%2Fxtensa%2Fxtensa.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/479b6f449ee999501ad6eff0b7db8d0cd5b2d28d/gcc%2Fconfig%2Fxtensa%2Fxtensa.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Fxtensa.cc?ref=479b6f449ee999501ad6eff0b7db8d0cd5b2d28d", "patch": "@@ -1182,7 +1182,8 @@ xtensa_emit_move_sequence (rtx *operands, machine_mode mode)\n \t  return 1;\n \t}\n \n-      if (! TARGET_AUTO_LITPOOLS && ! TARGET_CONST16)\n+      if (! TARGET_AUTO_LITPOOLS && ! TARGET_CONST16\n+\t  && ! (CONST_INT_P (src) && can_create_pseudo_p ()))\n \t{\n \t  src = force_const_mem (SImode, src);\n \t  operands[1] = src;"}]}