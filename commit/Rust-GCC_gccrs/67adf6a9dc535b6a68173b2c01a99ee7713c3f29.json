{"sha": "67adf6a9dc535b6a68173b2c01a99ee7713c3f29", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjdhZGY2YTlkYzUzNWI2YTY4MTczYjJjMDFhOTllZTc3MTNjM2YyOQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2002-05-30T00:38:36Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2002-05-30T00:38:36Z"}, "message": "biarch64.h (TARGET_64BIT_DEFAULT): Define with value.\n\n        * config/i386/biarch64.h (TARGET_64BIT_DEFAULT): Define with value.\n        (TARGET_BI_ARCH): Likewise.\n        * config/i386/i386.h: Test TARGET_64BIT_DEFAULT by value.\n        (TARGET_SWITCHES): Combine target defaults here not in TARGET_DEFAULT.\n        (TARGET_64BIT_DEFAULT): Default to 0.\n        (TARGET_DEFAULT): Default to MASK_OMIT_LEAF_FRAME_POINTER.\n\nFrom-SVN: r54032", "tree": {"sha": "3e449b4deebc1ddb35b1bbfdc216b6006948d80d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3e449b4deebc1ddb35b1bbfdc216b6006948d80d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/67adf6a9dc535b6a68173b2c01a99ee7713c3f29", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67adf6a9dc535b6a68173b2c01a99ee7713c3f29", "html_url": "https://github.com/Rust-GCC/gccrs/commit/67adf6a9dc535b6a68173b2c01a99ee7713c3f29", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67adf6a9dc535b6a68173b2c01a99ee7713c3f29/comments", "author": null, "committer": null, "parents": [{"sha": "145aacc2e0507dd42a80ae293bbe70f184d08272", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/145aacc2e0507dd42a80ae293bbe70f184d08272", "html_url": "https://github.com/Rust-GCC/gccrs/commit/145aacc2e0507dd42a80ae293bbe70f184d08272"}], "stats": {"total": 32, "additions": 21, "deletions": 11}, "files": [{"sha": "233963d5eb244bde42918c5d1ed833c95132e6fc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67adf6a9dc535b6a68173b2c01a99ee7713c3f29/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67adf6a9dc535b6a68173b2c01a99ee7713c3f29/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=67adf6a9dc535b6a68173b2c01a99ee7713c3f29", "patch": "@@ -1,3 +1,12 @@\n+2002-05-29  Richard Henderson  <rth@redhat.com>\n+\n+\t* config/i386/biarch64.h (TARGET_64BIT_DEFAULT): Define with value.\n+\t(TARGET_BI_ARCH): Likewise.\n+\t* config/i386/i386.h: Test TARGET_64BIT_DEFAULT by value.\n+\t(TARGET_SWITCHES): Combine target defaults here not in TARGET_DEFAULT.\n+\t(TARGET_64BIT_DEFAULT): Default to 0.\n+\t(TARGET_DEFAULT): Default to MASK_OMIT_LEAF_FRAME_POINTER.\n+\n 2002-05-29  Richard Henderson  <rth@redhat.com>\n \n \t* config/i386/i386.c (USE_HIDDEN_LINKONCE): New."}, {"sha": "2d3469833b8166b9cf9a7e9c98fa9fea16244941", "filename": "gcc/config/i386/biarch64.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67adf6a9dc535b6a68173b2c01a99ee7713c3f29/gcc%2Fconfig%2Fi386%2Fbiarch64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67adf6a9dc535b6a68173b2c01a99ee7713c3f29/gcc%2Fconfig%2Fi386%2Fbiarch64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fbiarch64.h?ref=67adf6a9dc535b6a68173b2c01a99ee7713c3f29", "patch": "@@ -21,5 +21,5 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n-#define TARGET_64BIT_DEFAULT\n-#define TARGET_BI_ARCH\n+#define TARGET_64BIT_DEFAULT MASK_64BIT\n+#define TARGET_BI_ARCH 1"}, {"sha": "17f1f234d59338904666520e5430f7f6c550355c", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67adf6a9dc535b6a68173b2c01a99ee7713c3f29/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67adf6a9dc535b6a68173b2c01a99ee7713c3f29/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=67adf6a9dc535b6a68173b2c01a99ee7713c3f29", "patch": "@@ -192,7 +192,7 @@ extern int target_flags;\n #ifdef TARGET_BI_ARCH\n #define TARGET_64BIT (target_flags & MASK_64BIT)\n #else\n-#ifdef TARGET_64BIT_DEFAULT\n+#if TARGET_64BIT_DEFAULT\n #define TARGET_64BIT 1\n #else\n #define TARGET_64BIT 0\n@@ -384,14 +384,15 @@ extern int x86_prefetch_sse;\n   { \"no-red-zone\",\t\tMASK_NO_RED_ZONE,\t\t\t      \\\n     N_(\"Do not use red-zone in the x86-64 code\") },\t\t\t      \\\n   SUBTARGET_SWITCHES\t\t\t\t\t\t\t      \\\n-  { \"\", TARGET_DEFAULT, 0 }}\n+  { \"\", TARGET_DEFAULT | TARGET_64BIT_DEFAULT | TARGET_SUBTARGET_DEFAULT, 0 }}\n \n-#ifdef TARGET_64BIT_DEFAULT\n-#define TARGET_DEFAULT (MASK_64BIT | TARGET_SUBTARGET_DEFAULT)\n-#else\n-#define TARGET_DEFAULT TARGET_SUBTARGET_DEFAULT\n+#ifndef TARGET_64BIT_DEFAULT\n+#define TARGET_64BIT_DEFAULT 0\n #endif\n \n+#define TARGET_DEFAULT MASK_OMIT_LEAF_FRAME_POINTER\n+\n+\n /* This macro is similar to `TARGET_SWITCHES' but defines names of\n    command options that have values.  Its definition is an\n    initializer with a subgrouping for each command option.\n@@ -590,13 +591,13 @@ extern int x86_prefetch_sse;\n \n #ifndef CPP_CPU_SPEC\n #ifdef TARGET_BI_ARCH\n-#ifdef TARGET_64BIT_DEFAULT\n+#if TARGET_64BIT_DEFAULT\n #define CPP_CPU_SPEC \"%{m32:%(cpp_cpu32)}%{!m32:%(cpp_cpu64)} %(cpp_cpucommon)\"\n #else\n #define CPP_CPU_SPEC \"%{m64:%(cpp_cpu64)}%{!m64:%(cpp_cpu32)} %(cpp_cpucommon)\"\n #endif\n #else\n-#ifdef TARGET_64BIT_DEFAULT\n+#if TARGET_64BIT_DEFAULT\n #define CPP_CPU_SPEC \"%(cpp_cpu64) %(cpp_cpucommon)\"\n #else\n #define CPP_CPU_SPEC \"%(cpp_cpu32) %(cpp_cpucommon)\"\n@@ -657,7 +658,7 @@ extern int x86_prefetch_sse;\n #define DOUBLE_TYPE_SIZE 64\n #define LONG_LONG_TYPE_SIZE 64\n \n-#if defined (TARGET_BI_ARCH) || defined (TARGET_64BIT_DEFAULT)\n+#if defined (TARGET_BI_ARCH) || TARGET_64BIT_DEFAULT\n #define MAX_BITS_PER_WORD 64\n #define MAX_LONG_TYPE_SIZE 64\n #else"}]}