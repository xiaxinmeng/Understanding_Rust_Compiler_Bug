{"sha": "829c98a06971706543d2d5d665e4636c9eb78534", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODI5Yzk4YTA2OTcxNzA2NTQzZDJkNWQ2NjVlNDYzNmM5ZWI3ODUzNA==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2017-08-02T11:19:58Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2017-08-02T11:19:58Z"}, "message": "pr25967-1.c: Delete\n\n\t* gcc.dg/guality/pr25967-1.c: Delete\n        * gcc.dg/guality/pr25967-2.c: Delete\n        * gcc.dg/guality/pr25967-3.c: Rename to pr25967-1.c.\n        * gcc.dg/guality/pr25967-4.c: Rename to pr25967-2.c.\n\n        * gcc.dg/torture/pr25967-1.c: Delete\n        * gcc.dg/torture/pr25967-2.c: Delete\n        * gcc.dg/torture/pr25967-3.c: Rename to pr25967-1.c.\n        * gcc.dg/torture/pr25967-4.c: Rename to pr25967-2.c.\n\nFrom-SVN: r250820", "tree": {"sha": "a1c22c32b136037f9e91245573c2d32cbdd9a629", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a1c22c32b136037f9e91245573c2d32cbdd9a629"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/829c98a06971706543d2d5d665e4636c9eb78534", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/829c98a06971706543d2d5d665e4636c9eb78534", "html_url": "https://github.com/Rust-GCC/gccrs/commit/829c98a06971706543d2d5d665e4636c9eb78534", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/829c98a06971706543d2d5d665e4636c9eb78534/comments", "author": null, "committer": null, "parents": [{"sha": "5c22bb4836c535c027a94e22dbfa33d406ae7c89", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c22bb4836c535c027a94e22dbfa33d406ae7c89", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c22bb4836c535c027a94e22dbfa33d406ae7c89"}], "stats": {"total": 344, "additions": 23, "deletions": 321}, "files": [{"sha": "1910d035c7baf1b5457add67555a773e78bf2e58", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/829c98a06971706543d2d5d665e4636c9eb78534/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/829c98a06971706543d2d5d665e4636c9eb78534/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=829c98a06971706543d2d5d665e4636c9eb78534", "patch": "@@ -11,13 +11,6 @@\n \tPR tree-optimization/81633\n \t* gcc.dg/vect/pr81633.c: New testcase.\n \n-2017-08-01  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\t* gcc.dg/guality/pr25967-3.c: New test.\n-\t* gcc.dg/guality/pr25967-4.c: Likewise.\n-\t* gcc.dg/torture/pr25967-3.c: Likewise.\n-\t* gcc.dg/torture/pr25967-4.c: Likewise.\n-\n 2017-08-01  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* gcc.dg/guality/pr25967-1.c: New test."}, {"sha": "0924d1c03c1368c9c4c3ea0e6acafb50c1efff63", "filename": "gcc/testsuite/gcc.dg/guality/pr25967-1.c", "status": "modified", "additions": 9, "deletions": 19, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/829c98a06971706543d2d5d665e4636c9eb78534/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr25967-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/829c98a06971706543d2d5d665e4636c9eb78534/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr25967-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr25967-1.c?ref=829c98a06971706543d2d5d665e4636c9eb78534", "patch": "@@ -12,14 +12,6 @@ typedef unsigned int uword_t __attribute__ ((mode (__word__)));\n #define SP\t\t0x12345674\n #define SS\t\t0x12345675\n \n-#ifdef __x86_64__\n-# define STACK_POINTER\t\"rsp\"\n-# define WORD_SIZE\t\"8\"\n-#else\n-# define STACK_POINTER\t\"esp\"\n-# define WORD_SIZE\t\"4\"\n-#endif\n-\n #define STRING(x)\tXSTRING(x)\n #define XSTRING(x)\t#x\n #define ASMNAME(cname)  ASMNAME2 (__USER_LABEL_PREFIX__, cname)\n@@ -38,11 +30,9 @@ __attribute__((naked, used))\n void\n fn (void)\n {\n-  struct interrupt_frame *frame;\n-  uword_t error;\n-  asm volatile (\"lea \" WORD_SIZE \"(%%\" STACK_POINTER \"), %0\\n\\t\"\n-\t\t\"mov (%%\" STACK_POINTER \"), %1\" \n-\t\t: \"=r\" (frame), \"=r\" (error) :); \n+  register uword_t *sp __asm__(\"sp\");\n+  uword_t error = *sp;\n+  struct interrupt_frame *frame = (struct interrupt_frame *) (sp + 1);\n   if (ERROR != error)\t\t/* BREAK */\n     __builtin_abort ();\n   if (IP != frame->ip)\n@@ -72,9 +62,9 @@ main ()\n   return 0;\n }\n \n-/* { dg-final { gdb-test 46 \"error\" \"0x12345670\" } } */\n-/* { dg-final { gdb-test 46 \"frame->ip\" \"0x12345671\" } } */\n-/* { dg-final { gdb-test 46 \"frame->cs\" \"0x12345672\" } } */\n-/* { dg-final { gdb-test 46 \"frame->flags\" \"0x12345673\" } } */\n-/* { dg-final { gdb-test 46 \"frame->sp\" \"0x12345674\" } } */\n-/* { dg-final { gdb-test 46 \"frame->ss\" \"0x12345675\" } } */\n+/* { dg-final { gdb-test 36 \"error\" \"0x12345670\" } } */\n+/* { dg-final { gdb-test 36 \"frame->ip\" \"0x12345671\" } } */\n+/* { dg-final { gdb-test 36 \"frame->cs\" \"0x12345672\" } } */\n+/* { dg-final { gdb-test 36 \"frame->flags\" \"0x12345673\" } } */\n+/* { dg-final { gdb-test 36 \"frame->sp\" \"0x12345674\" } } */\n+/* { dg-final { gdb-test 36 \"frame->ss\" \"0x12345675\" } } */"}, {"sha": "c3b59e212515ddc089c93af8a1fe52a95faa381a", "filename": "gcc/testsuite/gcc.dg/guality/pr25967-2.c", "status": "modified", "additions": 7, "deletions": 15, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/829c98a06971706543d2d5d665e4636c9eb78534/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr25967-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/829c98a06971706543d2d5d665e4636c9eb78534/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr25967-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr25967-2.c?ref=829c98a06971706543d2d5d665e4636c9eb78534", "patch": "@@ -11,14 +11,6 @@ typedef unsigned int uword_t __attribute__ ((mode (__word__)));\n #define SP\t\t0x12345674\n #define SS\t\t0x12345675\n \n-#ifdef __x86_64__\n-# define STACK_POINTER\t\"rsp\"\n-# define WORD_SIZE\t\"8\"\n-#else\n-# define STACK_POINTER\t\"esp\"\n-# define WORD_SIZE\t\"4\"\n-#endif\n-\n #define STRING(x)\tXSTRING(x)\n #define XSTRING(x)\t#x\n #define ASMNAME(cname)  ASMNAME2 (__USER_LABEL_PREFIX__, cname)\n@@ -37,8 +29,8 @@ __attribute__((naked, used))\n void\n fn (void)\n {\n-  struct interrupt_frame *frame;\n-  asm volatile (\"lea (%%\" STACK_POINTER \"), %0\" : \"=r\" (frame) : ); \n+  register uword_t *sp __asm__(\"sp\");\n+  struct interrupt_frame *frame = (struct interrupt_frame *) sp;\n   if (IP != frame->ip)\t\t/* BREAK */\n     __builtin_abort ();\n   if (CS != frame->cs)\n@@ -65,8 +57,8 @@ main ()\n   return 0;\n }\n \n-/* { dg-final { gdb-test 42 \"frame->ip\" \"0x12345671\" } } */\n-/* { dg-final { gdb-test 42 \"frame->cs\" \"0x12345672\" } } */\n-/* { dg-final { gdb-test 42 \"frame->flags\" \"0x12345673\" } } */\n-/* { dg-final { gdb-test 42 \"frame->sp\" \"0x12345674\" } } */\n-/* { dg-final { gdb-test 42 \"frame->ss\" \"0x12345675\" } } */\n+/* { dg-final { gdb-test 34 \"frame->ip\" \"0x12345671\" } } */\n+/* { dg-final { gdb-test 34 \"frame->cs\" \"0x12345672\" } } */\n+/* { dg-final { gdb-test 34 \"frame->flags\" \"0x12345673\" } } */\n+/* { dg-final { gdb-test 34 \"frame->sp\" \"0x12345674\" } } */\n+/* { dg-final { gdb-test 34 \"frame->ss\" \"0x12345675\" } } */"}, {"sha": "0924d1c03c1368c9c4c3ea0e6acafb50c1efff63", "filename": "gcc/testsuite/gcc.dg/guality/pr25967-3.c", "status": "removed", "additions": 0, "deletions": 70, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c22bb4836c535c027a94e22dbfa33d406ae7c89/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr25967-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c22bb4836c535c027a94e22dbfa33d406ae7c89/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr25967-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr25967-3.c?ref=5c22bb4836c535c027a94e22dbfa33d406ae7c89", "patch": "@@ -1,70 +0,0 @@\n-/* { dg-do run { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-g -mgeneral-regs-only\" } */\n-\n-extern void exit (int);\n-\n-typedef unsigned int uword_t __attribute__ ((mode (__word__)));\n-\n-#define ERROR\t\t0x12345670\n-#define IP\t\t0x12345671\n-#define CS\t\t0x12345672\n-#define FLAGS\t\t0x12345673\n-#define SP\t\t0x12345674\n-#define SS\t\t0x12345675\n-\n-#define STRING(x)\tXSTRING(x)\n-#define XSTRING(x)\t#x\n-#define ASMNAME(cname)  ASMNAME2 (__USER_LABEL_PREFIX__, cname)\n-#define ASMNAME2(prefix, cname) XSTRING (prefix) cname\n-\n-struct interrupt_frame\n-{\n-  uword_t ip;\n-  uword_t cs;\n-  uword_t flags;\n-  uword_t sp;\n-  uword_t ss;\n-};\n-\n-__attribute__((naked, used))\n-void\n-fn (void)\n-{\n-  register uword_t *sp __asm__(\"sp\");\n-  uword_t error = *sp;\n-  struct interrupt_frame *frame = (struct interrupt_frame *) (sp + 1);\n-  if (ERROR != error)\t\t/* BREAK */\n-    __builtin_abort ();\n-  if (IP != frame->ip)\n-    __builtin_abort ();\n-  if (CS != frame->cs)\n-    __builtin_abort ();\n-  if (FLAGS != frame->flags)\n-    __builtin_abort ();\n-  if (SP != frame->sp)\n-    __builtin_abort ();\n-  if (SS != frame->ss)\n-    __builtin_abort ();\n-\n-  exit (0);\n-}\n-\n-int\n-main ()\n-{\n-  asm (\"push\t$\" STRING (SS) \";\t\t\\\n-\tpush\t$\" STRING (SP) \";\t\t\\\n-\tpush\t$\" STRING (FLAGS) \";\t\t\\\n-\tpush\t$\" STRING (CS) \";\t\t\\\n-\tpush\t$\" STRING (IP) \";\t\t\\\n-\tpush\t$\" STRING (ERROR) \";\t\t\\\n-\tjmp\t \" ASMNAME (\"fn\"));\n-  return 0;\n-}\n-\n-/* { dg-final { gdb-test 36 \"error\" \"0x12345670\" } } */\n-/* { dg-final { gdb-test 36 \"frame->ip\" \"0x12345671\" } } */\n-/* { dg-final { gdb-test 36 \"frame->cs\" \"0x12345672\" } } */\n-/* { dg-final { gdb-test 36 \"frame->flags\" \"0x12345673\" } } */\n-/* { dg-final { gdb-test 36 \"frame->sp\" \"0x12345674\" } } */\n-/* { dg-final { gdb-test 36 \"frame->ss\" \"0x12345675\" } } */"}, {"sha": "c3b59e212515ddc089c93af8a1fe52a95faa381a", "filename": "gcc/testsuite/gcc.dg/guality/pr25967-4.c", "status": "removed", "additions": 0, "deletions": 64, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c22bb4836c535c027a94e22dbfa33d406ae7c89/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr25967-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c22bb4836c535c027a94e22dbfa33d406ae7c89/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr25967-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr25967-4.c?ref=5c22bb4836c535c027a94e22dbfa33d406ae7c89", "patch": "@@ -1,64 +0,0 @@\n-/* { dg-do run { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-g -mgeneral-regs-only\" } */\n-\n-extern void exit (int);\n-\n-typedef unsigned int uword_t __attribute__ ((mode (__word__)));\n-\n-#define IP\t\t0x12345671\n-#define CS\t\t0x12345672\n-#define FLAGS\t\t0x12345673\n-#define SP\t\t0x12345674\n-#define SS\t\t0x12345675\n-\n-#define STRING(x)\tXSTRING(x)\n-#define XSTRING(x)\t#x\n-#define ASMNAME(cname)  ASMNAME2 (__USER_LABEL_PREFIX__, cname)\n-#define ASMNAME2(prefix, cname) XSTRING (prefix) cname\n-\n-struct interrupt_frame\n-{\n-  uword_t ip;\n-  uword_t cs;\n-  uword_t flags;\n-  uword_t sp;\n-  uword_t ss;\n-};\n-\n-__attribute__((naked, used))\n-void\n-fn (void)\n-{\n-  register uword_t *sp __asm__(\"sp\");\n-  struct interrupt_frame *frame = (struct interrupt_frame *) sp;\n-  if (IP != frame->ip)\t\t/* BREAK */\n-    __builtin_abort ();\n-  if (CS != frame->cs)\n-    __builtin_abort ();\n-  if (FLAGS != frame->flags)\n-    __builtin_abort ();\n-  if (SP != frame->sp)\n-    __builtin_abort ();\n-  if (SS != frame->ss)\n-    __builtin_abort ();\n-\n-  exit (0);\n-}\n-\n-int\n-main ()\n-{\n-  asm (\"push\t$\" STRING (SS) \";\t\t\\\n-\tpush\t$\" STRING (SP) \";\t\t\\\n-\tpush\t$\" STRING (FLAGS) \";\t\t\\\n-\tpush\t$\" STRING (CS) \";\t\t\\\n-\tpush\t$\" STRING (IP) \";\t\t\\\n-\tjmp\t \" ASMNAME (\"fn\"));\n-  return 0;\n-}\n-\n-/* { dg-final { gdb-test 34 \"frame->ip\" \"0x12345671\" } } */\n-/* { dg-final { gdb-test 34 \"frame->cs\" \"0x12345672\" } } */\n-/* { dg-final { gdb-test 34 \"frame->flags\" \"0x12345673\" } } */\n-/* { dg-final { gdb-test 34 \"frame->sp\" \"0x12345674\" } } */\n-/* { dg-final { gdb-test 34 \"frame->ss\" \"0x12345675\" } } */"}, {"sha": "fd26a8b8ce30c7d670b3e81ab7d6d7f91e2210ef", "filename": "gcc/testsuite/gcc.dg/torture/pr25967-1.c", "status": "modified", "additions": 4, "deletions": 14, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/829c98a06971706543d2d5d665e4636c9eb78534/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr25967-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/829c98a06971706543d2d5d665e4636c9eb78534/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr25967-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr25967-1.c?ref=829c98a06971706543d2d5d665e4636c9eb78534", "patch": "@@ -12,14 +12,6 @@ typedef unsigned int uword_t __attribute__ ((mode (__word__)));\n #define SP\t\t0x12345674\n #define SS\t\t0x12345675\n \n-#ifdef __x86_64__\n-# define STACK_POINTER\t\"rsp\"\n-# define WORD_SIZE\t\"8\"\n-#else\n-# define STACK_POINTER\t\"esp\"\n-# define WORD_SIZE\t\"4\"\n-#endif\n-\n #define STRING(x)\tXSTRING(x)\n #define XSTRING(x)\t#x\n #define ASMNAME(cname)  ASMNAME2 (__USER_LABEL_PREFIX__, cname)\n@@ -38,12 +30,10 @@ __attribute__((naked, used))\n void\n fn (void)\n {\n-  struct interrupt_frame *frame;\n-  uword_t error;\n-  asm volatile (\"lea \" WORD_SIZE \"(%%\" STACK_POINTER \"), %0\\n\\t\"\n-\t\t\"mov (%%\" STACK_POINTER \"), %1\" \n-\t\t: \"=r\" (frame), \"=r\" (error) :); \n-  if (ERROR != error)\n+  register uword_t *sp __asm__(\"sp\");\n+  uword_t error = *sp;\n+  struct interrupt_frame *frame = (struct interrupt_frame *) (sp + 1);\n+  if (ERROR != error)\t\t/* BREAK */\n     __builtin_abort ();\n   if (IP != frame->ip)\n     __builtin_abort ();"}, {"sha": "4a0dd78c0adf9ce0fd89bccb08ec69ff470a5a61", "filename": "gcc/testsuite/gcc.dg/torture/pr25967-2.c", "status": "modified", "additions": 3, "deletions": 11, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/829c98a06971706543d2d5d665e4636c9eb78534/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr25967-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/829c98a06971706543d2d5d665e4636c9eb78534/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr25967-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr25967-2.c?ref=829c98a06971706543d2d5d665e4636c9eb78534", "patch": "@@ -11,14 +11,6 @@ typedef unsigned int uword_t __attribute__ ((mode (__word__)));\n #define SP\t\t0x12345674\n #define SS\t\t0x12345675\n \n-#ifdef __x86_64__\n-# define STACK_POINTER\t\"rsp\"\n-# define WORD_SIZE\t\"8\"\n-#else\n-# define STACK_POINTER\t\"esp\"\n-# define WORD_SIZE\t\"4\"\n-#endif\n-\n #define STRING(x)\tXSTRING(x)\n #define XSTRING(x)\t#x\n #define ASMNAME(cname)  ASMNAME2 (__USER_LABEL_PREFIX__, cname)\n@@ -37,9 +29,9 @@ __attribute__((naked, used))\n void\n fn (void)\n {\n-  struct interrupt_frame *frame;\n-  asm volatile (\"lea (%%\" STACK_POINTER \"), %0\" : \"=r\" (frame) : ); \n-  if (IP != frame->ip)\n+  register uword_t *sp __asm__(\"sp\");\n+  struct interrupt_frame *frame = (struct interrupt_frame *) sp;\n+  if (IP != frame->ip)\t\t/* BREAK */\n     __builtin_abort ();\n   if (CS != frame->cs)\n     __builtin_abort ();"}, {"sha": "fd26a8b8ce30c7d670b3e81ab7d6d7f91e2210ef", "filename": "gcc/testsuite/gcc.dg/torture/pr25967-3.c", "status": "removed", "additions": 0, "deletions": 63, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c22bb4836c535c027a94e22dbfa33d406ae7c89/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr25967-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c22bb4836c535c027a94e22dbfa33d406ae7c89/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr25967-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr25967-3.c?ref=5c22bb4836c535c027a94e22dbfa33d406ae7c89", "patch": "@@ -1,63 +0,0 @@\n-/* { dg-do run { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-mgeneral-regs-only\" } */\n-\n-extern void exit (int);\n-\n-typedef unsigned int uword_t __attribute__ ((mode (__word__)));\n-\n-#define ERROR\t\t0x12345670\n-#define IP\t\t0x12345671\n-#define CS\t\t0x12345672\n-#define FLAGS\t\t0x12345673\n-#define SP\t\t0x12345674\n-#define SS\t\t0x12345675\n-\n-#define STRING(x)\tXSTRING(x)\n-#define XSTRING(x)\t#x\n-#define ASMNAME(cname)  ASMNAME2 (__USER_LABEL_PREFIX__, cname)\n-#define ASMNAME2(prefix, cname) XSTRING (prefix) cname\n-\n-struct interrupt_frame\n-{\n-  uword_t ip;\n-  uword_t cs;\n-  uword_t flags;\n-  uword_t sp;\n-  uword_t ss;\n-};\n-\n-__attribute__((naked, used))\n-void\n-fn (void)\n-{\n-  register uword_t *sp __asm__(\"sp\");\n-  uword_t error = *sp;\n-  struct interrupt_frame *frame = (struct interrupt_frame *) (sp + 1);\n-  if (ERROR != error)\t\t/* BREAK */\n-    __builtin_abort ();\n-  if (IP != frame->ip)\n-    __builtin_abort ();\n-  if (CS != frame->cs)\n-    __builtin_abort ();\n-  if (FLAGS != frame->flags)\n-    __builtin_abort ();\n-  if (SP != frame->sp)\n-    __builtin_abort ();\n-  if (SS != frame->ss)\n-    __builtin_abort ();\n-\n-  exit (0);\n-}\n-\n-int\n-main ()\n-{\n-  asm (\"push\t$\" STRING (SS) \";\t\t\\\n-\tpush\t$\" STRING (SP) \";\t\t\\\n-\tpush\t$\" STRING (FLAGS) \";\t\t\\\n-\tpush\t$\" STRING (CS) \";\t\t\\\n-\tpush\t$\" STRING (IP) \";\t\t\\\n-\tpush\t$\" STRING (ERROR) \";\t\t\\\n-\tjmp\t \" ASMNAME (\"fn\"));\n-  return 0;\n-}"}, {"sha": "4a0dd78c0adf9ce0fd89bccb08ec69ff470a5a61", "filename": "gcc/testsuite/gcc.dg/torture/pr25967-4.c", "status": "removed", "additions": 0, "deletions": 58, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c22bb4836c535c027a94e22dbfa33d406ae7c89/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr25967-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c22bb4836c535c027a94e22dbfa33d406ae7c89/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr25967-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr25967-4.c?ref=5c22bb4836c535c027a94e22dbfa33d406ae7c89", "patch": "@@ -1,58 +0,0 @@\n-/* { dg-do run { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-mgeneral-regs-only\" } */\n-\n-extern void exit (int);\n-\n-typedef unsigned int uword_t __attribute__ ((mode (__word__)));\n-\n-#define IP\t\t0x12345671\n-#define CS\t\t0x12345672\n-#define FLAGS\t\t0x12345673\n-#define SP\t\t0x12345674\n-#define SS\t\t0x12345675\n-\n-#define STRING(x)\tXSTRING(x)\n-#define XSTRING(x)\t#x\n-#define ASMNAME(cname)  ASMNAME2 (__USER_LABEL_PREFIX__, cname)\n-#define ASMNAME2(prefix, cname) XSTRING (prefix) cname\n-\n-struct interrupt_frame\n-{\n-  uword_t ip;\n-  uword_t cs;\n-  uword_t flags;\n-  uword_t sp;\n-  uword_t ss;\n-};\n-\n-__attribute__((naked, used))\n-void\n-fn (void)\n-{\n-  register uword_t *sp __asm__(\"sp\");\n-  struct interrupt_frame *frame = (struct interrupt_frame *) sp;\n-  if (IP != frame->ip)\t\t/* BREAK */\n-    __builtin_abort ();\n-  if (CS != frame->cs)\n-    __builtin_abort ();\n-  if (FLAGS != frame->flags)\n-    __builtin_abort ();\n-  if (SP != frame->sp)\n-    __builtin_abort ();\n-  if (SS != frame->ss)\n-    __builtin_abort ();\n-\n-  exit (0);\n-}\n-\n-int\n-main ()\n-{\n-  asm (\"push\t$\" STRING (SS) \";\t\t\\\n-\tpush\t$\" STRING (SP) \";\t\t\\\n-\tpush\t$\" STRING (FLAGS) \";\t\t\\\n-\tpush\t$\" STRING (CS) \";\t\t\\\n-\tpush\t$\" STRING (IP) \";\t\t\\\n-\tjmp\t \" ASMNAME (\"fn\"));\n-  return 0;\n-}"}]}