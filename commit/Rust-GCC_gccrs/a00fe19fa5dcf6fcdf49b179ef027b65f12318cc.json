{"sha": "a00fe19fa5dcf6fcdf49b179ef027b65f12318cc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTAwZmUxOWZhNWRjZjZmY2RmNDliMTc5ZWYwMjdiNjVmMTIzMThjYw==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2002-05-17T07:01:18Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2002-05-17T07:01:18Z"}, "message": "ia64.c (ia64_reorg): Rebuild bb_for_insn before splitting.\n\n        * config/ia64/ia64.c (ia64_reorg): Rebuild bb_for_insn before\n        splitting.  Use split_all_insns; update_life_info_in_dirty_blocks.\n\nFrom-SVN: r53544", "tree": {"sha": "085cef4429b780c00bdbf49efd7cd098ac6cfec9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/085cef4429b780c00bdbf49efd7cd098ac6cfec9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a00fe19fa5dcf6fcdf49b179ef027b65f12318cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a00fe19fa5dcf6fcdf49b179ef027b65f12318cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a00fe19fa5dcf6fcdf49b179ef027b65f12318cc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a00fe19fa5dcf6fcdf49b179ef027b65f12318cc/comments", "author": null, "committer": null, "parents": [{"sha": "068d7739b9bb9e001d407a2d108846326aa13547", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/068d7739b9bb9e001d407a2d108846326aa13547", "html_url": "https://github.com/Rust-GCC/gccrs/commit/068d7739b9bb9e001d407a2d108846326aa13547"}], "stats": {"total": 22, "additions": 14, "deletions": 8}, "files": [{"sha": "b89f5c5e22caec9fc02775a78141a03131ead043", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a00fe19fa5dcf6fcdf49b179ef027b65f12318cc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a00fe19fa5dcf6fcdf49b179ef027b65f12318cc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a00fe19fa5dcf6fcdf49b179ef027b65f12318cc", "patch": "@@ -1,3 +1,8 @@\n+2002-05-16  Richard Henderson  <rth@redhat.com>\n+\n+\t* config/ia64/ia64.c (ia64_reorg): Rebuild bb_for_insn before\n+\tsplitting.  Use split_all_insns; update_life_info_in_dirty_blocks.\n+\n 2002-05-16  Richard Henderson  <rth@redhat.com>\n \n \t* config/alpha/unicosmk.h (TARGET_OS_CPP_BUILTINS): Fix typo.\n@@ -64,7 +69,7 @@ config:\n \tDefault-define here.\n \t(builtin_define_with_value): Can now wrap the expansion in\n \tquotation marks if such is wanted.\n-\t(cb_register_builtins): Update calls to\tbuiltin_define_with_value.  \n+\t(cb_register_builtins): Update calls to\tbuiltin_define_with_value.\n \tDefine __REGISTER_PREFIX__, __USER_LABEL_PREFIX__, and __VERSION__\n \there.\n \t(c_common_init): Set options->stdc_0_in_system_headers.\n@@ -89,7 +94,7 @@ config:\n \tstdc_0_in_system_headers) too to decide the value of __STDC__.\n \n \t* tradcpp.c (user_label_prefix): Kill.\n-\t(main): Remove code handling -f(no-)leading-underscore.\t\n+\t(main): Remove code handling -f(no-)leading-underscore.\n \t(initialize_builtins): Don't define __REGISTER_PREFIX__\n \tor __USER_LABEL_PREFIX__.\n \t(install_value): Wrap compound statement in dummy loop so the"}, {"sha": "562c977f677fd0fe9ad60204e048bde928c9efb3", "filename": "gcc/config/ia64/ia64.c", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a00fe19fa5dcf6fcdf49b179ef027b65f12318cc/gcc%2Fconfig%2Fia64%2Fia64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a00fe19fa5dcf6fcdf49b179ef027b65f12318cc/gcc%2Fconfig%2Fia64%2Fia64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.c?ref=a00fe19fa5dcf6fcdf49b179ef027b65f12318cc", "patch": "@@ -6713,15 +6713,16 @@ void\n ia64_reorg (insns)\n      rtx insns;\n {\n-  /* If optimizing, we'll have split before scheduling.  */\n-  if (optimize == 0)\n-    split_all_insns_noflow ();\n-\n   /* We are freeing block_for_insn in the toplev to keep compatibility\n      with old MDEP_REORGS that are not CFG based.  Recompute it now.  */\n   compute_bb_for_insn (get_max_uid ());\n-  /* update_life_info_in_dirty_blocks should be enought here.  */\n-  life_analysis (insns, NULL, PROP_DEATH_NOTES);\n+\n+  /* If optimizing, we'll have split before scheduling.  */\n+  if (optimize == 0)\n+    split_all_insns (0);\n+\n+  update_life_info_in_dirty_blocks (UPDATE_LIFE_GLOBAL_RM_NOTES,\n+\t\t\t\t    PROP_DEATH_NOTES);\n \n   if (ia64_flag_schedule_insns2)\n     {"}]}