{"sha": "68d28100a03d7a4bb0f5763f6478c2c84bf4e2ab", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjhkMjgxMDBhMDNkN2E0YmIwZjU3NjNmNjQ3OGMyYzg0YmY0ZTJhYg==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2003-04-11T19:45:32Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2003-04-11T19:45:32Z"}, "message": "libfuncs.h (LTI_setbits, [...]): New.\n\n        * libfuncs.h (LTI_setbits, LTI_gcov_flush, LTI_gcov_init): New.\n        (setbits_libfunc, gcov_flush_libfunc, gcov_init_libfunc): New.\n        * optabs.c (init_optabs): Initialize them.\n        (init_libfuncs): Use init_one_libfunc.\n        * calls.c (expand_call): Use gcov_flush_libfunc.\n        * expr.c (store_constructor): Use setbits_libfunc.\n        * function.c (expand_main_function): Use init_one_libfunc.\n        * profile.c (create_profiler): Use gcov_init_libfunc and DECL_RTL.\n\nFrom-SVN: r65478", "tree": {"sha": "b0e7821af42b01b42543a20a94b4ac966bf4eff5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b0e7821af42b01b42543a20a94b4ac966bf4eff5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/68d28100a03d7a4bb0f5763f6478c2c84bf4e2ab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68d28100a03d7a4bb0f5763f6478c2c84bf4e2ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68d28100a03d7a4bb0f5763f6478c2c84bf4e2ab", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68d28100a03d7a4bb0f5763f6478c2c84bf4e2ab/comments", "author": null, "committer": null, "parents": [{"sha": "8d3f856e31650d9c61a53af7b243d9d96702fbbd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d3f856e31650d9c61a53af7b243d9d96702fbbd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d3f856e31650d9c61a53af7b243d9d96702fbbd"}], "stats": {"total": 46, "additions": 30, "deletions": 16}, "files": [{"sha": "300f4e096f1b90a8788d9585faec73fb6772fa67", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68d28100a03d7a4bb0f5763f6478c2c84bf4e2ab/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68d28100a03d7a4bb0f5763f6478c2c84bf4e2ab/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=68d28100a03d7a4bb0f5763f6478c2c84bf4e2ab", "patch": "@@ -1,3 +1,14 @@\n+2003-04-11  Richard Henderson  <rth@redhat.com>\n+\n+\t* libfuncs.h (LTI_setbits, LTI_gcov_flush, LTI_gcov_init): New.\n+\t(setbits_libfunc, gcov_flush_libfunc, gcov_init_libfunc): New.\n+\t* optabs.c (init_optabs): Initialize them.\n+\t(init_libfuncs): Use init_one_libfunc.\n+\t* calls.c (expand_call): Use gcov_flush_libfunc.\n+\t* expr.c (store_constructor): Use setbits_libfunc.\n+\t* function.c (expand_main_function): Use init_one_libfunc.\n+\t* profile.c (create_profiler): Use gcov_init_libfunc and DECL_RTL.\n+\n 2003-04-11  Mark Mitchell  <mark@codesourcery.com>\n \n \t* doc/c-tree.texi (Functions): Remove DECL_REAL_CONTEXT"}, {"sha": "ffb8a21f021cf7796d0da8371695395838a1cb0c", "filename": "gcc/calls.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68d28100a03d7a4bb0f5763f6478c2c84bf4e2ab/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68d28100a03d7a4bb0f5763f6478c2c84bf4e2ab/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=68d28100a03d7a4bb0f5763f6478c2c84bf4e2ab", "patch": "@@ -2635,9 +2635,7 @@ expand_call (exp, target, ignore)\n \t is subject to race conditions, just as with multithreaded\n \t programs.  */\n \n-      emit_library_call (gen_rtx_SYMBOL_REF (Pmode, \"__gcov_flush\"),\n-\t\t      \t LCT_ALWAYS_RETURN,\n-\t\t\t VOIDmode, 0);\n+      emit_library_call (gcov_flush_libfunc, LCT_ALWAYS_RETURN, VOIDmode, 0);\n     }\n \n   /* Ensure current function's preferred stack boundary is at least"}, {"sha": "caf35cdaf49acbac549824676e476cebfe8f7492", "filename": "gcc/expr.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68d28100a03d7a4bb0f5763f6478c2c84bf4e2ab/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68d28100a03d7a4bb0f5763f6478c2c84bf4e2ab/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=68d28100a03d7a4bb0f5763f6478c2c84bf4e2ab", "patch": "@@ -5450,8 +5450,8 @@ store_constructor (exp, target, cleared, size)\n \t\t\t\t TYPE_MODE (sizetype));\n \t    }\n \t  else\n-\t    emit_library_call (gen_rtx_SYMBOL_REF (Pmode, \"__setbits\"),\n-\t\t\t       LCT_NORMAL, VOIDmode, 4, XEXP (targetx, 0),\n+\t    emit_library_call (setbits_libfunc, LCT_NORMAL,\n+\t\t\t       VOIDmode, 4, XEXP (targetx, 0),\n \t\t\t       Pmode, bitlength_rtx, TYPE_MODE (sizetype),\n \t\t\t       startbit_rtx, TYPE_MODE (sizetype),\n \t\t\t       endbit_rtx, TYPE_MODE (sizetype));"}, {"sha": "699fd21e6d477399081ff3dfe97af5a06cd422f8", "filename": "gcc/function.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68d28100a03d7a4bb0f5763f6478c2c84bf4e2ab/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68d28100a03d7a4bb0f5763f6478c2c84bf4e2ab/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=68d28100a03d7a4bb0f5763f6478c2c84bf4e2ab", "patch": "@@ -6470,8 +6470,7 @@ expand_main_function ()\n #endif\n \n #ifndef HAS_INIT_SECTION\n-  emit_library_call (gen_rtx_SYMBOL_REF (Pmode, NAME__MAIN), LCT_NORMAL,\n-\t\t     VOIDmode, 0);\n+  emit_library_call (init_one_libfunc (NAME__MAIN), LCT_NORMAL, VOIDmode, 0);\n #endif\n }\n \f"}, {"sha": "79b7d4249b2353b31f79bb1b19da1a501183e701", "filename": "gcc/libfuncs.h", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68d28100a03d7a4bb0f5763f6478c2c84bf4e2ab/gcc%2Flibfuncs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68d28100a03d7a4bb0f5763f6478c2c84bf4e2ab/gcc%2Flibfuncs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flibfuncs.h?ref=68d28100a03d7a4bb0f5763f6478c2c84bf4e2ab", "patch": "@@ -44,6 +44,7 @@ enum libfunc_index\n   LTI_bcmp,\n   LTI_memset,\n   LTI_bzero,\n+  LTI_setbits,\n \n   LTI_unwind_resume,\n   LTI_eh_personality,\n@@ -143,6 +144,9 @@ enum libfunc_index\n   LTI_profile_function_entry,\n   LTI_profile_function_exit,\n \n+  LTI_gcov_flush,\n+  LTI_gcov_init,\n+\n   LTI_MAX\n };\n \n@@ -171,6 +175,7 @@ extern GTY(()) rtx libfunc_table[LTI_MAX];\n #define bcmp_libfunc\t(libfunc_table[LTI_bcmp])\n #define memset_libfunc\t(libfunc_table[LTI_memset])\n #define bzero_libfunc\t(libfunc_table[LTI_bzero])\n+#define setbits_libfunc\t(libfunc_table[LTI_setbits])\n \n #define unwind_resume_libfunc\t(libfunc_table[LTI_unwind_resume])\n #define eh_personality_libfunc\t(libfunc_table[LTI_eh_personality])\n@@ -271,4 +276,7 @@ extern GTY(()) rtx libfunc_table[LTI_MAX];\n #define profile_function_entry_libfunc\t(libfunc_table[LTI_profile_function_entry])\n #define profile_function_exit_libfunc\t(libfunc_table[LTI_profile_function_exit])\n \n+#define gcov_flush_libfunc\t(libfunc_table[LTI_gcov_flush])\n+#define gcov_init_libfunc\t(libfunc_table[LTI_gcov_init])\n+\n #endif /* GCC_LIBFUNCS_H */"}, {"sha": "fc00b186dee6dedf36657aaf9bb917399ece97df", "filename": "gcc/optabs.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68d28100a03d7a4bb0f5763f6478c2c84bf4e2ab/gcc%2Foptabs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68d28100a03d7a4bb0f5763f6478c2c84bf4e2ab/gcc%2Foptabs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptabs.c?ref=68d28100a03d7a4bb0f5763f6478c2c84bf4e2ab", "patch": "@@ -5329,8 +5329,7 @@ init_libfuncs (optable, first_mode, last_mode, opname, suffix)\n       *p = '\\0';\n \n       optable->handlers[(int) mode].libfunc\n-\t= gen_rtx_SYMBOL_REF (Pmode, ggc_alloc_string (libfunc_name,\n-\t\t\t\t\t\t       p - libfunc_name));\n+\t= init_one_libfunc (ggc_alloc_string (libfunc_name, p - libfunc_name));\n     }\n }\n \n@@ -5647,6 +5646,7 @@ init_optabs ()\n   bcmp_libfunc = init_one_libfunc (\"__gcc_bcmp\");\n   memset_libfunc = init_one_libfunc (\"memset\");\n   bzero_libfunc = init_one_libfunc (\"bzero\");\n+  setbits_libfunc = init_one_libfunc (\"__setbits\");\n \n   unwind_resume_libfunc = init_one_libfunc (USING_SJLJ_EXCEPTIONS\n \t\t\t\t\t    ? \"_Unwind_SjLj_Resume\"\n@@ -5756,6 +5756,9 @@ init_optabs ()\n   profile_function_exit_libfunc\n     = init_one_libfunc (\"__cyg_profile_func_exit\");\n \n+  gcov_flush_libfunc = init_one_libfunc (\"__gcov_flush\");\n+  gcov_init_libfunc = init_one_libfunc (\"__gcov_init\");\n+\n #ifdef HAVE_conditional_trap\n   init_traps ();\n #endif"}, {"sha": "07f7a72e840fda122b8169e287cd29fc73d27f3b", "filename": "gcc/profile.c", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68d28100a03d7a4bb0f5763f6478c2c84bf4e2ab/gcc%2Fprofile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68d28100a03d7a4bb0f5763f6478c2c84bf4e2ab/gcc%2Fprofile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprofile.c?ref=68d28100a03d7a4bb0f5763f6478c2c84bf4e2ab", "patch": "@@ -1979,13 +1979,8 @@ create_profiler ()\n   cfun->arc_profile = 0;\n \n   /* Actually generate the code to call __gcov_init.  */\n-  gcov_info_address = force_reg (Pmode,\n-\t\t\t\t gen_rtx_SYMBOL_REF (\n-\t\t\t\t\tPmode,\n-\t\t\t\t\tIDENTIFIER_POINTER (\n-\t\t\t\t\t\tDECL_NAME (gcov_info))));\n-  emit_library_call (gen_rtx_SYMBOL_REF (Pmode, \"__gcov_init\"),\n-\t\t     LCT_NORMAL, VOIDmode, 1,\n+  gcov_info_address = force_reg (Pmode, XEXP (DECL_RTL (gcov_info), 0));\n+  emit_library_call (gcov_init_libfunc, LCT_NORMAL, VOIDmode, 1,\n \t\t     gcov_info_address, Pmode);\n \n   expand_function_end (input_filename, lineno, 0);"}]}