{"sha": "ef9429af779b19e68062c50cb38e0f6b32fc424e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWY5NDI5YWY3NzliMTllNjgwNjJjNTBjYjM4ZTBmNmIzMmZjNDI0ZQ==", "commit": {"author": {"name": "Tom Wood", "email": "wood@gnu.org", "date": "1992-09-02T16:09:16Z"}, "committer": {"name": "Tom Wood", "email": "wood@gnu.org", "date": "1992-09-02T16:09:16Z"}, "message": "(output_ascii): Output known escape characters and don't\nterminate the constant if an octal escape is used.\n\nFrom-SVN: r2029", "tree": {"sha": "b2aa80ef8149d38b22a538a44d624b53d81ca426", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b2aa80ef8149d38b22a538a44d624b53d81ca426"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ef9429af779b19e68062c50cb38e0f6b32fc424e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef9429af779b19e68062c50cb38e0f6b32fc424e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef9429af779b19e68062c50cb38e0f6b32fc424e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef9429af779b19e68062c50cb38e0f6b32fc424e/comments", "author": null, "committer": null, "parents": [{"sha": "d0dcc580cfd3c8a166c3db09cb46eafa32f32ef4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0dcc580cfd3c8a166c3db09cb46eafa32f32ef4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d0dcc580cfd3c8a166c3db09cb46eafa32f32ef4"}], "stats": {"total": 41, "additions": 29, "deletions": 12}, "files": [{"sha": "2c7c33e304fe11b98a069b9b2385a82969e9ba7e", "filename": "gcc/config/m88k/m88k.c", "status": "modified", "additions": 29, "deletions": 12, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef9429af779b19e68062c50cb38e0f6b32fc424e/gcc%2Fconfig%2Fm88k%2Fm88k.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef9429af779b19e68062c50cb38e0f6b32fc424e/gcc%2Fconfig%2Fm88k%2Fm88k.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm88k%2Fm88k.c?ref=ef9429af779b19e68062c50cb38e0f6b32fc424e", "patch": "@@ -46,7 +46,7 @@ extern char *ctime ();\n extern int flag_traditional;\n extern FILE *asm_out_file;\n \n-static char out_sccs_id[] = \"@(#)m88k.c\t2.2.6.9 04 Jul 1992 13:17:36\";\n+static char out_sccs_id[] = \"@(#)m88k.c\t2.2.7.2 08/31/92 13:26:22\";\n static char tm_sccs_id [] = TM_SCCS_ID;\n \n char *m88k_pound_sign = \"\";\t/* Either # for SVR4 or empty for SVR3 */\n@@ -1424,6 +1424,7 @@ output_ascii (file, opcode, max, p, size)\n      int size;\n {\n   int i;\n+  int in_escape = 0;\n \n   register int num = 0;\n \n@@ -1437,29 +1438,45 @@ output_ascii (file, opcode, max, p, size)\n \t  fprintf (file, \"\\\"\\n\\t%s\\t \\\"\", opcode);\n \t  num = 0;\n \t}\n-\n+\t  \n       if (c == '\\\"' || c == '\\\\')\n \t{\n+\tescape:\n \t  putc ('\\\\', file);\n-\t  num++;\n+\t  putc (c, file);\n+\t  num += 2;\n+\t  in_escape = 0;\n \t}\n-\n-      if (c >= ' ' && c < 0177)\n+      else if (in_escape && c >= '0' && c <= '9')\n+\t{\n+\t  /* If a digit follows an octal-escape, the Vax assembler fails\n+\t     to stop reading the escape after three digits.  Continue to\n+\t     output the values as an octal-escape until a non-digit is\n+\t     found.  */\n+\t  fprintf (file, \"\\\\%03o\", c);\n+\t  num += 4;\n+\t}\n+      else if (c >= ' ' && c < 0177)\n \t{\n \t  putc (c, file);\n \t  num++;\n+\t  in_escape = 0;\n \t}\n       else\n \t{\n+\t  switch (c)\n+\t    {\n+\t    case '\\t': c = 't'; goto escape;\n+\t    case '\\f': c = 'f'; goto escape;\n+\t    case '\\v': c = 'v'; goto escape;\n+\t    case '\\b': c = 'b'; goto escape;\n+\t    case '\\r': c = 'r'; goto escape;\n+\t    case '\\n': c = 'n'; goto escape;\n+\t    }\n+\n \t  fprintf (file, \"\\\\%03o\", c);\n \t  num += 4;\n-\t  /* After an octal-escape, if a digit follows,\n-\t     terminate one string constant and start another.\n-\t     The Vax assembler fails to stop reading the escape\n-\t     after three digits, so this is the only way we\n-\t     can get it to parse the data properly.  */\n-\t  if (i < size - 1 && p[i + 1] >= '0' && p[i + 1] <= '9')\n-\t    num = max + 1;\t/* next pass will start a new string */\n+\t  in_escape = 1;\n \t}\n     }\n   fprintf (file, \"\\\"\\n\");"}]}