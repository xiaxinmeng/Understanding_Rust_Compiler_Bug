{"sha": "36624850a44abb0585ee9c0ba8e83972a92b00e7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzY2MjQ4NTBhNDRhYmIwNTg1ZWU5YzBiYThlODM5NzJhOTJiMDBlNw==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2002-10-08T17:27:39Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2002-10-08T17:27:39Z"}, "message": "system.h (GCCBUGURL): Delete.\n\n\t* system.h (GCCBUGURL): Delete.\n\t* version.c (bug_report_url): New.  Add commentary about\n\tmodifying both these strings in modified distributions.\n\t* version.h: Declare bug_report_url.\n\n\t* diagnostic.c, gcc.c, gcov.c, java/gjavah.c, java/jcf-dump.c,\n\tjava/jv-scan.c: Globally replace GCCBUGURL with bug_report_url.\n\nFrom-SVN: r57932", "tree": {"sha": "4c61cdd49916dc5a573307e20011301688337161", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4c61cdd49916dc5a573307e20011301688337161"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/36624850a44abb0585ee9c0ba8e83972a92b00e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36624850a44abb0585ee9c0ba8e83972a92b00e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/36624850a44abb0585ee9c0ba8e83972a92b00e7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36624850a44abb0585ee9c0ba8e83972a92b00e7/comments", "author": null, "committer": null, "parents": [{"sha": "218145d684eb5aa0efb6aa5bb6fdf69cd474b59c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/218145d684eb5aa0efb6aa5bb6fdf69cd474b59c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/218145d684eb5aa0efb6aa5bb6fdf69cd474b59c"}], "stats": {"total": 67, "additions": 46, "deletions": 21}, "files": [{"sha": "21fc42c32e8db7119481a2d019bc197e2694f929", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 5, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36624850a44abb0585ee9c0ba8e83972a92b00e7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36624850a44abb0585ee9c0ba8e83972a92b00e7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=36624850a44abb0585ee9c0ba8e83972a92b00e7", "patch": "@@ -1,3 +1,13 @@\n+2002-10-08  Zack Weinberg  <zack@codesourcery.com>\n+\n+\t* system.h (GCCBUGURL): Delete.\n+\t* version.c (bug_report_url): New.  Add commentary about\n+\tmodifying both these strings in modified distributions.\n+\t* version.h: Declare bug_report_url.\n+\n+\t* diagnostic.c, gcc.c, gcov.c: Globally replace GCCBUGURL with\n+\tbug_report_url.\n+\n 2002-10-08  Nick Clifton  <nickc@redhat.com>\n \n \t* config/rs6000/spe.h (__ev_set_acc_u64): Use __ev_create_u64 to\n@@ -17,9 +27,9 @@ Tue Oct  8 16:50:10 CEST 2002  Jan Hubicka  <jh@suse.cz>\n \n \t* config/mips/mips.md (define_attr cpu): Add r4111.\n \n-2002-10-08  Anthony Green  <green@redhat.com> \n+2002-10-08  Anthony Green  <green@redhat.com>\n \n-\t* bitmap.c (bitmap_equal_p): Clear all bitmap_head fields. \n+\t* bitmap.c (bitmap_equal_p): Clear all bitmap_head fields.\n \n 2002-10-08  Michael Hayes  <m.hayes@elec.canterbury.ac.nz>\n \n@@ -75,7 +85,7 @@ Tue Oct  8 16:50:10 CEST 2002  Jan Hubicka  <jh@suse.cz>\n \t* pdp11.h (LEGITIMATE_CONSTANT_P): Fix soft-float case.\n \n \t* t-pdp11: Add LIB2FUNCS_EXTRA.\n-\t* pdp11.c (pdp11_output_function_prologue): Restrict offset to 16bit, \n+\t* pdp11.c (pdp11_output_function_prologue): Restrict offset to 16bit,\n \tadd preceding 0 to the octal constant, rename 'fp' to 'r5', rename\n \t'fldd' to 'ldd', rename 'fstd' to 'std'.\n \t(pdp11_output_function_epilogue): Likewise.\n@@ -84,7 +94,7 @@ Tue Oct  8 16:50:10 CEST 2002  Jan Hubicka  <jh@suse.cz>\n \t(print_operand_address): Add pre_modify, post_modify.\n \t(output_addr_const_pdp11): Add preceding 0 to the octal constant.\n \t* pdp11.h (GO_IF_LEGITIMATE_ADDRESS) : Add 'movb' pre_modify case\n-\twith the indication of Paul Koning. \n+\twith the indication of Paul Koning.\n \t(PRINT_OPERAND): Fix floating constant.\n \t* pdp11.md (movdi): Restrict matching pattern.\n \t(movqi): Generalize the matching pattern.\n@@ -102,7 +112,7 @@ Tue Oct  8 16:50:10 CEST 2002  Jan Hubicka  <jh@suse.cz>\n \t(mod): Fix wrong subreg.\n \n 2002-09-25  Eric Botcazou  <ebotcazou@libertysurf.fr>\n-            Volker Reichelt <reichelt@igpm.rwth-aachen.de>\n+\t    Volker Reichelt <reichelt@igpm.rwth-aachen.de>\n \n \tPR c/7411\n \t* expr.c (expand_expr) [PLUS]: Simplify after the operands"}, {"sha": "2596d03260e7afdc8983b99600f16fa0f45b0e02", "filename": "gcc/diagnostic.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36624850a44abb0585ee9c0ba8e83972a92b00e7/gcc%2Fdiagnostic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36624850a44abb0585ee9c0ba8e83972a92b00e7/gcc%2Fdiagnostic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdiagnostic.c?ref=36624850a44abb0585ee9c0ba8e83972a92b00e7", "patch": "@@ -1194,7 +1194,7 @@ internal_error VPARAMS ((const char *msgid, ...))\n   fnotice (stderr,\n \"Please submit a full bug report,\\n\\\n with preprocessed source if appropriate.\\n\\\n-See %s for instructions.\\n\", GCCBUGURL);\n+See %s for instructions.\\n\", bug_report_url);\n   exit (FATAL_EXIT_CODE);\n }\n \n@@ -1302,7 +1302,7 @@ error_recursion (context)\n   fnotice (stderr,\n \"Please submit a full bug report,\\n\\\n with preprocessed source if appropriate.\\n\\\n-See %s for instructions.\\n\", GCCBUGURL);\n+See %s for instructions.\\n\", bug_report_url);\n   exit (FATAL_EXIT_CODE);\n }\n "}, {"sha": "6c904ea0849ea9b4025b74c22f73e0b64c93b86b", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36624850a44abb0585ee9c0ba8e83972a92b00e7/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36624850a44abb0585ee9c0ba8e83972a92b00e7/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=36624850a44abb0585ee9c0ba8e83972a92b00e7", "patch": "@@ -1,11 +1,16 @@\n+2002-10-08  Zack Weinberg  <zack@codesourcery.com>\n+\n+\t* gjavah.c, jcf-dump.c, jv-scan.c: Globally replace GCCBUGURL with\n+\tbug_report_url.\n+\n 2002-10-08  Andrew Haley  <aph@redhat.com>\n \n \t* parse.y (attach_init_test_initialization_flags): Check for\n \terror_mark_node.\n \n-2002-10-07  Anthony Green  <green@redhat.com> \n+2002-10-07  Anthony Green  <green@redhat.com>\n \n-        * parse.y (merge_string_cste): Fix bug in string concatenation. \n+\t* parse.y (merge_string_cste): Fix bug in string concatenation.\n \n 2002-10-03  Michael Koch  <konqueror@gmx.de>\n \n@@ -50,7 +55,7 @@\n \n 2002-09-21  Richard Henderson  <rth@redhat.com>\n \n-\t* jcf-parse.c (get_constant): Decode from IEEE no matter \n+\t* jcf-parse.c (get_constant): Decode from IEEE no matter\n \twhat the target format.\n \n 2002-09-20  Kazu Hirata  <kazu@cs.umass.edu>\n@@ -173,7 +178,7 @@\n \n 2002-08-08  Bryce McKinlay  <bryce@waitaki.otago.ac.nz>\n \n-\t* jcf-write.c (get_access_flags): Return correct access flags for \n+\t* jcf-write.c (get_access_flags): Return correct access flags for\n \tprivate and protected inner classes.\n \n 2002-08-08  Nathan Sidwell  <nathan@codesourcery.com>\n@@ -316,10 +321,10 @@\n \n 2002-06-10  Bryce McKinlay  <bryce@waitaki.otago.ac.nz>\n \n-\t* gjavah.c (throwable_p): Accept argument as either a classname or \n+\t* gjavah.c (throwable_p): Accept argument as either a classname or\n \tsignature fragment. Create null-terminated classname string for super\n \twhen calling itself recursively.\n-\t(decode_signature_piece): Skip first character from class name \n+\t(decode_signature_piece): Skip first character from class name\n \tsignature when calling throwable_p.\n \n 2002-06-08  H.J. Lu  (hjl@gnu.org)"}, {"sha": "53099ad387643bb9a7bfa6156425ef75978fde53", "filename": "gcc/java/gjavah.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36624850a44abb0585ee9c0ba8e83972a92b00e7/gcc%2Fjava%2Fgjavah.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36624850a44abb0585ee9c0ba8e83972a92b00e7/gcc%2Fjava%2Fgjavah.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fgjavah.c?ref=36624850a44abb0585ee9c0ba8e83972a92b00e7", "patch": "@@ -2289,7 +2289,7 @@ help ()\n   /* We omit -MG until it is implemented.  */\n   printf (\"\\n\");\n   printf (\"For bug reporting instructions, please see:\\n\");\n-  printf (\"%s.\\n\", GCCBUGURL);\n+  printf (\"%s.\\n\", bug_report_url);\n   exit (0);\n }\n "}, {"sha": "72f1a5360b4adb35f40bf6782f151d18cef7c1c6", "filename": "gcc/java/jcf-dump.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36624850a44abb0585ee9c0ba8e83972a92b00e7/gcc%2Fjava%2Fjcf-dump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36624850a44abb0585ee9c0ba8e83972a92b00e7/gcc%2Fjava%2Fjcf-dump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjcf-dump.c?ref=36624850a44abb0585ee9c0ba8e83972a92b00e7", "patch": "@@ -829,7 +829,7 @@ help ()\n   printf (\"  -v, --verbose           Print extra information while running\\n\");\n   printf (\"\\n\");\n   printf (\"For bug reporting instructions, please see:\\n\");\n-  printf (\"%s.\\n\", GCCBUGURL);\n+  printf (\"%s.\\n\", bug_report_url);\n   exit (0);\n }\n "}, {"sha": "f92acebd7f4510f8f76181e34d5781100243f8b2", "filename": "gcc/java/jv-scan.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36624850a44abb0585ee9c0ba8e83972a92b00e7/gcc%2Fjava%2Fjv-scan.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36624850a44abb0585ee9c0ba8e83972a92b00e7/gcc%2Fjava%2Fjv-scan.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjv-scan.c?ref=36624850a44abb0585ee9c0ba8e83972a92b00e7", "patch": "@@ -115,7 +115,7 @@ help ()\n   printf (\"  --version               Print version number, then exit\\n\");\n   printf (\"\\n\");\n   printf (\"For bug reporting instructions, please see:\\n\");\n-  printf (\"%s.\\n\", GCCBUGURL);\n+  printf (\"%s.\\n\", bug_report_url);\n   exit (0);\n }\n "}, {"sha": "260232f9b99c9ed7759cde8083c75adb90ab0092", "filename": "gcc/system.h", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36624850a44abb0585ee9c0ba8e83972a92b00e7/gcc%2Fsystem.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36624850a44abb0585ee9c0ba8e83972a92b00e7/gcc%2Fsystem.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsystem.h?ref=36624850a44abb0585ee9c0ba8e83972a92b00e7", "patch": "@@ -23,11 +23,6 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #ifndef GCC_SYSTEM_H\n #define GCC_SYSTEM_H\n \n-/* This is the location of the online document giving information how\n-   to report bugs. If you change this string, also check for strings\n-   not under control of the preprocessor.  */\n-#define GCCBUGURL \"<URL:http://www.gnu.org/software/gcc/bugs.html>\"\n-\n /* We must include stdarg.h/varargs.h before stdio.h.  */\n #ifdef ANSI_PROTOTYPES\n #include <stdarg.h>"}, {"sha": "954b1522048e2c0d4f7565108b12965f5ce28c17", "filename": "gcc/version.c", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36624850a44abb0585ee9c0ba8e83972a92b00e7/gcc%2Fversion.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36624850a44abb0585ee9c0ba8e83972a92b00e7/gcc%2Fversion.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fversion.c?ref=36624850a44abb0585ee9c0ba8e83972a92b00e7", "patch": "@@ -1,4 +1,18 @@\n #include \"ansidecl.h\"\n #include \"version.h\"\n \n+/* This is the string reported as the version number by all components\n+   of the compiler.  If you distribute a modified version of GCC,\n+   please modify this string to indicate that, e.g. by putting your\n+   organization's name in parentheses at the end of the string.  */\n+\n const char version_string[] = \"3.3 20021008 (experimental)\";\n+\n+/* This is the location of the online document giving instructions for\n+   reporting bugs.  If you distribute a modified version of GCC,\n+   please change this to refer to a document giving instructions for\n+   reporting bugs to you, not us.  (You are of course welcome to\n+   forward us bugs reported to you, if you determine that they are\n+   not bugs in your modifications.)  */\n+\n+const char bug_report_url[] = \"<URL:http://www.gnu.org/software/gcc/bugs.html>\";"}, {"sha": "8e944ccdef60232e611394d5939a1eb485541d22", "filename": "gcc/version.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36624850a44abb0585ee9c0ba8e83972a92b00e7/gcc%2Fversion.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36624850a44abb0585ee9c0ba8e83972a92b00e7/gcc%2Fversion.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fversion.h?ref=36624850a44abb0585ee9c0ba8e83972a92b00e7", "patch": "@@ -1,4 +1,5 @@\n #ifndef GCC_VERSION_H\n #define GCC_VERSION_H\n extern const char version_string[];\n+extern const char bug_report_url[];\n #endif /* ! GCC_VERSION_H */"}]}