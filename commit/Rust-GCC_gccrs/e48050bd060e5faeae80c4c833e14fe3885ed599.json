{"sha": "e48050bd060e5faeae80c4c833e14fe3885ed599", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTQ4MDUwYmQwNjBlNWZhZWFlODBjNGM4MzNlMTRmZTM4ODVlZDU5OQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@libertysurf.fr", "date": "2005-10-19T14:42:17Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2005-10-19T14:42:17Z"}, "message": "re PR middle-end/23199 (ICE in int_mode_for_mode, at stor-layout.c:251)\n\n\tPR middle-end/23199\n\t* cfgrtl.c (safe_insert_insn_on_edge): Use can_copy_p to detect\n\twhether registers live on the edge can be saved/restored.\n\nFrom-SVN: r105618", "tree": {"sha": "78ff2fa79db3827d5cfd641d055766a3bbc93414", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/78ff2fa79db3827d5cfd641d055766a3bbc93414"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e48050bd060e5faeae80c4c833e14fe3885ed599", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e48050bd060e5faeae80c4c833e14fe3885ed599", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e48050bd060e5faeae80c4c833e14fe3885ed599", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e48050bd060e5faeae80c4c833e14fe3885ed599/comments", "author": {"login": "ebotcazou", "id": 48091907, "node_id": "MDQ6VXNlcjQ4MDkxOTA3", "avatar_url": "https://avatars.githubusercontent.com/u/48091907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebotcazou", "html_url": "https://github.com/ebotcazou", "followers_url": "https://api.github.com/users/ebotcazou/followers", "following_url": "https://api.github.com/users/ebotcazou/following{/other_user}", "gists_url": "https://api.github.com/users/ebotcazou/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebotcazou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebotcazou/subscriptions", "organizations_url": "https://api.github.com/users/ebotcazou/orgs", "repos_url": "https://api.github.com/users/ebotcazou/repos", "events_url": "https://api.github.com/users/ebotcazou/events{/privacy}", "received_events_url": "https://api.github.com/users/ebotcazou/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "486516b60ba69fa8bd5fd13a9e4f630642d18546", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/486516b60ba69fa8bd5fd13a9e4f630642d18546", "html_url": "https://github.com/Rust-GCC/gccrs/commit/486516b60ba69fa8bd5fd13a9e4f630642d18546"}], "stats": {"total": 55, "additions": 47, "deletions": 8}, "files": [{"sha": "45d936ae2730fcec96403b221b32053958034e24", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e48050bd060e5faeae80c4c833e14fe3885ed599/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e48050bd060e5faeae80c4c833e14fe3885ed599/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e48050bd060e5faeae80c4c833e14fe3885ed599", "patch": "@@ -1,3 +1,9 @@\n+2005-10-19  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+\n+\tPR middle-end/23199\n+\t* cfgrtl.c (safe_insert_insn_on_edge): Use can_copy_p to detect\n+\twhether registers live on the edge can be saved/restored.\n+\n 2005-10-19  Kaz Kojima  <kkojima@gcc.gnu.org>\n \n \t* config/sh/sh.c (fixup_mova): Skip notes."}, {"sha": "f49eceb1657584f0816927a685344680dd730ec4", "filename": "gcc/cfgrtl.c", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e48050bd060e5faeae80c4c833e14fe3885ed599/gcc%2Fcfgrtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e48050bd060e5faeae80c4c833e14fe3885ed599/gcc%2Fcfgrtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgrtl.c?ref=e48050bd060e5faeae80c4c833e14fe3885ed599", "patch": "@@ -1456,16 +1456,9 @@ safe_insert_insn_on_edge (rtx insn, edge e)\n   regset killed;\n   rtx save_regs = NULL_RTX;\n   unsigned regno;\n-  int noccmode;\n   enum machine_mode mode;\n   reg_set_iterator rsi;\n \n-#ifdef AVOID_CCMODE_COPIES\n-  noccmode = true;\n-#else\n-  noccmode = false;\n-#endif\n-\n   killed = ALLOC_REG_SET (&reg_obstack);\n \n   for (x = insn; x; x = NEXT_INSN (x))\n@@ -1491,7 +1484,8 @@ safe_insert_insn_on_edge (rtx insn, edge e)\n       if (mode == VOIDmode)\n \treturn false;\n \n-      if (noccmode && mode == CCmode)\n+      /* Avoid copying in CCmode if we can't.  */\n+      if (!can_copy_p (mode))\n \treturn false;\n \t\n       save_regs = alloc_EXPR_LIST (0,"}, {"sha": "860f92784c76c7f982d26616b3f61fd3d40ec7eb", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e48050bd060e5faeae80c4c833e14fe3885ed599/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e48050bd060e5faeae80c4c833e14fe3885ed599/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e48050bd060e5faeae80c4c833e14fe3885ed599", "patch": "@@ -1,3 +1,7 @@\n+2005-10-19  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+\n+\t* gcc.dg/profile-generate-2.c: New test.\n+\n 2005-10-18  Danny Smith  <dannysmith@users.sourceforge.net>\n \n \tPR target/23589"}, {"sha": "eaea065f5267c37d360650bd1e87431def0e0c50", "filename": "gcc/testsuite/gcc.dg/profile-generate-2.c", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e48050bd060e5faeae80c4c833e14fe3885ed599/gcc%2Ftestsuite%2Fgcc.dg%2Fprofile-generate-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e48050bd060e5faeae80c4c833e14fe3885ed599/gcc%2Ftestsuite%2Fgcc.dg%2Fprofile-generate-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fprofile-generate-2.c?ref=e48050bd060e5faeae80c4c833e14fe3885ed599", "patch": "@@ -0,0 +1,35 @@\n+/* PR middle-end/23199 */\n+/* Testcase by Ralf Menzel <menzel@ls6.cs.uni-dortmund.de> */\n+\n+/* { dg-do compile } */\n+/* { dg-options \"-O -fprofile-generate\" } */\n+\n+union rtunion_def\n+{\n+  struct rtx_def *rt_rtx;\n+};\n+\n+typedef union rtunion_def rtunion;\n+\n+struct rtx_def\n+{\n+  unsigned int in_struct : 1;\n+  union u {\n+    rtunion fld[1];\n+  } u;\n+};\n+\n+typedef struct rtx_def *rtx;\n+\n+static void\n+check_annul_list_true_false (int annul_true_p, rtx delay_list)\n+{\n+  rtx temp;\n+  while (1)\n+    {\n+      temp = delay_list;\n+      rtx trial = (((temp)->u.fld[0]).rt_rtx);\n+      if ((annul_true_p && (((trial))->in_struct)))\n+       return;\n+    }\n+}"}]}