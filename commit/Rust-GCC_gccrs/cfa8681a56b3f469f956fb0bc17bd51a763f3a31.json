{"sha": "cfa8681a56b3f469f956fb0bc17bd51a763f3a31", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2ZhODY4MWE1NmIzZjQ2OWY5NTZmYjBiYzE3YmQ1MWE3NjNmM2EzMQ==", "commit": {"author": {"name": "Andreas Tobler", "email": "andreast@gcc.gnu.org", "date": "2015-05-28T18:13:55Z"}, "committer": {"name": "Andreas Tobler", "email": "andreast@gcc.gnu.org", "date": "2015-05-28T18:13:55Z"}, "message": "configure.host: Add bits for FreeBSD amd64 and i386.\n\n2015-05-28  Andreas Tobler  <andreast@gcc.gnu.org>\n\n    * configure.host: Add bits for FreeBSD amd64 and i386.\n    * configure.ac: Add signal handler for FreeBSD (amd64/i386)\n    * configure: Regenerate.\n    * include/freebsd-signal.h: New file.\n\nFrom-SVN: r223845", "tree": {"sha": "569a21a1a3ace7d16af1d3d49af087359b8947db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/569a21a1a3ace7d16af1d3d49af087359b8947db"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cfa8681a56b3f469f956fb0bc17bd51a763f3a31", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfa8681a56b3f469f956fb0bc17bd51a763f3a31", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cfa8681a56b3f469f956fb0bc17bd51a763f3a31", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfa8681a56b3f469f956fb0bc17bd51a763f3a31/comments", "author": null, "committer": null, "parents": [{"sha": "d778b5a09c816040de7f25f630056e56ec5d1c09", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d778b5a09c816040de7f25f630056e56ec5d1c09", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d778b5a09c816040de7f25f630056e56ec5d1c09"}], "stats": {"total": 63, "additions": 63, "deletions": 0}, "files": [{"sha": "02b7ce75a65c94e74eaa57ac42e3f8b59db42281", "filename": "libjava/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfa8681a56b3f469f956fb0bc17bd51a763f3a31/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfa8681a56b3f469f956fb0bc17bd51a763f3a31/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=cfa8681a56b3f469f956fb0bc17bd51a763f3a31", "patch": "@@ -1,3 +1,10 @@\n+2015-05-28  Andreas Tobler  <andreast@gcc.gnu.org>\n+\n+\t* configure.host: Add bits for FreeBSD amd64 and i386.\n+\t* configure.ac: Add signal handler for FreeBSD (amd64/i386)\n+\t* configure: Regenerate.\n+\t* include/freebsd-signal.h: New file.\n+\n 2015-05-26  Andreas Tobler  <andreast@gcc.gnu.org>\n \n \t* testsuite/libjava.jni/jni.exp (gcj_jni_get_cxxflags_invocation): Add"}, {"sha": "141b213c420140cf3d57d218ddf909301ac0ca52", "filename": "libjava/configure", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfa8681a56b3f469f956fb0bc17bd51a763f3a31/libjava%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfa8681a56b3f469f956fb0bc17bd51a763f3a31/libjava%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fconfigure?ref=cfa8681a56b3f469f956fb0bc17bd51a763f3a31", "patch": "@@ -24412,6 +24412,9 @@ case \"${host}\" in\n  powerpc*-*-aix*)\n     SIGNAL_HANDLER=include/aix-signal.h\n     ;;\n+ i?86-*-freebsd* | x86_64-*-freebsd*)\n+    SIGNAL_HANDLER=include/freebsd-signal.h\n+    ;;\n  *)\n     SIGNAL_HANDLER=include/default-signal.h\n     ;;"}, {"sha": "656384be1fae685f880fa3f5ef19b2f195b195d0", "filename": "libjava/configure.ac", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfa8681a56b3f469f956fb0bc17bd51a763f3a31/libjava%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfa8681a56b3f469f956fb0bc17bd51a763f3a31/libjava%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fconfigure.ac?ref=cfa8681a56b3f469f956fb0bc17bd51a763f3a31", "patch": "@@ -1710,6 +1710,9 @@ case \"${host}\" in\n  powerpc*-*-aix*)\n     SIGNAL_HANDLER=include/aix-signal.h\n     ;;\n+ i?86-*-freebsd* | x86_64-*-freebsd*)\n+    SIGNAL_HANDLER=include/freebsd-signal.h\n+    ;;\n  *)\n     SIGNAL_HANDLER=include/default-signal.h\n     ;;"}, {"sha": "96222b82f7d558972e49ddb095d10ded5800eba7", "filename": "libjava/configure.host", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfa8681a56b3f469f956fb0bc17bd51a763f3a31/libjava%2Fconfigure.host", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfa8681a56b3f469f956fb0bc17bd51a763f3a31/libjava%2Fconfigure.host", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fconfigure.host?ref=cfa8681a56b3f469f956fb0bc17bd51a763f3a31", "patch": "@@ -338,6 +338,8 @@ EOF\n \t;;\n   *-*-freebsd*)\n \tslow_pthread_self=\n+\tcan_unwind_signal=yes\n+\tDIVIDESPEC=-fuse-divide-subroutine\n \t;;\n   *-mingw*)\n         libgcj_flags=\"${libgcj_flags} -fno-omit-frame-pointer\""}, {"sha": "c4f7e999c90dd41962e1ddae0887da0ffb89bbaa", "filename": "libjava/include/freebsd-signal.h", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfa8681a56b3f469f956fb0bc17bd51a763f3a31/libjava%2Finclude%2Ffreebsd-signal.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfa8681a56b3f469f956fb0bc17bd51a763f3a31/libjava%2Finclude%2Ffreebsd-signal.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Finclude%2Ffreebsd-signal.h?ref=cfa8681a56b3f469f956fb0bc17bd51a763f3a31", "patch": "@@ -0,0 +1,48 @@\n+/* freebsd-signal.h - Catch runtime signals and turn them into exceptions,\n+   on a FreeBSD system.  */\n+\n+/* Copyright (C) 2015 Free Software Foundation\n+\n+   This file is part of libgcj.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n+details.  */\n+\n+/* This file is really more of a specification.  The rest of the system\n+   should be arranged so that this Just Works.  */\n+\n+#ifndef JAVA_SIGNAL_H\n+# define JAVA_SIGNAL_H 1\n+\n+#include <sys/types.h>\n+#include <sys/signal.h>\n+\n+# define HANDLE_SEGV 1\n+# define HANDLE_FPE  1\n+\n+# define SIGNAL_HANDLER(_name)\t\t\t\t\t\\\n+  static void _name (int _dummy __attribute__ ((unused)))\n+\n+# define MAKE_THROW_FRAME(_exception)\n+\n+# define INIT_SEGV\t\t\t\t\\\n+  do {\t\t\t\t\t\t\\\n+    struct sigaction sa;\t\t\t\\\n+    sa.sa_handler = catch_segv;\t\t\\\n+    sigemptyset (&sa.sa_mask);\t\t\t\\\n+    sa.sa_flags = SA_NODEFER;\t\t\t\\\n+    sigaction (SIGBUS, &sa, NULL);\t\t\\\n+    sigaction (SIGSEGV, &sa, NULL);\t\t\\\n+    } while (0)\n+\n+# define INIT_FPE\t\t\t\t\\\n+  do {\t\t\t\t\t\t\\\n+    struct sigaction sa;\t\t\t\\\n+    sa.sa_handler = catch_fpe;\t\t\t\\\n+    sigemptyset (&sa.sa_mask);\t\t\t\\\n+    sa.sa_flags = SA_NODEFER;\t\t\t\\\n+    sigaction (SIGFPE, &sa, NULL);\t\t\\\n+    } while (0)\n+\n+#endif /* JAVA_SIGNAL_H */"}]}