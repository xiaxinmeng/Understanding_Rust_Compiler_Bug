{"sha": "48b1474efb32b90b45e4d824f5c670e24e059f0c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDhiMTQ3NGVmYjMyYjkwYjQ1ZTRkODI0ZjVjNjcwZTI0ZTA1OWYwYw==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2013-05-15T10:39:28Z"}, "committer": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2013-05-15T10:39:28Z"}, "message": "ipa-prop.c (ipa_make_edge_direct_to_target): Redirect calls to non-functions to builtin_unreachable.\n\n2013-05-15  Martin Jambor  <mjambor@suse.cz>\n\n\t* ipa-prop.c (ipa_make_edge_direct_to_target): Redirect calls to\n\tnon-functions to builtin_unreachable.\n\t* ipa-inline-transform.c (inline_call): Do not assert estimates were\n\tcorrect when new direct edges were discovered.\n\nFrom-SVN: r198926", "tree": {"sha": "6b4472d8eb1289a2e5d764132d9e64216728b539", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6b4472d8eb1289a2e5d764132d9e64216728b539"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/48b1474efb32b90b45e4d824f5c670e24e059f0c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48b1474efb32b90b45e4d824f5c670e24e059f0c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/48b1474efb32b90b45e4d824f5c670e24e059f0c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48b1474efb32b90b45e4d824f5c670e24e059f0c/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9de04252a07c04a9676de3c8606b0a29e66a23ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9de04252a07c04a9676de3c8606b0a29e66a23ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9de04252a07c04a9676de3c8606b0a29e66a23ce"}], "stats": {"total": 23, "additions": 18, "deletions": 5}, "files": [{"sha": "89827172fc0d73f7e422985d2b20e1c9ed31b831", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48b1474efb32b90b45e4d824f5c670e24e059f0c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48b1474efb32b90b45e4d824f5c670e24e059f0c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=48b1474efb32b90b45e4d824f5c670e24e059f0c", "patch": "@@ -1,3 +1,10 @@\n+2013-05-15  Martin Jambor  <mjambor@suse.cz>\n+\n+\t* ipa-prop.c (ipa_make_edge_direct_to_target): Redirect calls to\n+\tnon-functions to builtin_unreachable.\n+\t* ipa-inline-transform.c (inline_call): Do not assert estimates were\n+\tcorrect when new direct edges were discovered.\n+\n 2013-05-15  Martin Jambor  <mjambor@suse.cz>\n \n \t* ipa-prop.c (ipa_print_node_jump_functions): Print symbol order in"}, {"sha": "cb819d7cbb2588f1d84bc3e267895035841c2c71", "filename": "gcc/ipa-inline-transform.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48b1474efb32b90b45e4d824f5c670e24e059f0c/gcc%2Fipa-inline-transform.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48b1474efb32b90b45e4d824f5c670e24e059f0c/gcc%2Fipa-inline-transform.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-inline-transform.c?ref=48b1474efb32b90b45e4d824f5c670e24e059f0c", "patch": "@@ -260,7 +260,7 @@ inline_call (struct cgraph_edge *e, bool update_original,\n #ifdef ENABLE_CHECKING\n   /* Verify that estimated growth match real growth.  Allow off-by-one\n      error due to INLINE_SIZE_SCALE roudoff errors.  */\n-  gcc_assert (!update_overall_summary || !overall_size\n+  gcc_assert (!update_overall_summary || !overall_size || new_edges_found\n \t      || abs (estimated_growth - (new_size - old_size)) <= 1\n \t      /* FIXME: a hack.  Edges with false predicate are accounted\n \t\t wrong, we should remove them from callgraph.  */"}, {"sha": "abf21c98215ab9e64117d74a8d5e24d1cd07c233", "filename": "gcc/ipa-prop.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48b1474efb32b90b45e4d824f5c670e24e059f0c/gcc%2Fipa-prop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48b1474efb32b90b45e4d824f5c670e24e059f0c/gcc%2Fipa-prop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-prop.c?ref=48b1474efb32b90b45e4d824f5c670e24e059f0c", "patch": "@@ -2200,6 +2200,7 @@ ipa_make_edge_direct_to_target (struct cgraph_edge *ie, tree target)\n {\n   struct cgraph_node *callee;\n   struct inline_edge_summary *es = inline_edge_summary (ie);\n+  bool unreachable = false;\n \n   if (TREE_CODE (target) == ADDR_EXPR)\n     target = TREE_OPERAND (target, 0);\n@@ -2210,12 +2211,17 @@ ipa_make_edge_direct_to_target (struct cgraph_edge *ie, tree target)\n \t{\n \t  if (dump_file)\n \t    fprintf (dump_file, \"ipa-prop: Discovered direct call to non-function\"\n-\t\t\t\t\" in %s/%i.\\n\",\n+\t\t\t\t\" in %s/%i, making it unreachable.\\n\",\n \t\t     cgraph_node_name (ie->caller), ie->caller->symbol.order);\n-\t  return NULL;\n+\t  target = builtin_decl_implicit (BUILT_IN_UNREACHABLE);\n+\t  callee = cgraph_get_create_node (target);\n+\t  unreachable = true;\n \t}\n+      else\n+\tcallee = cgraph_get_node (target);\n     }\n-  callee = cgraph_get_node (target);\n+  else\n+    callee = cgraph_get_node (target);\n \n   /* Because may-edges are not explicitely represented and vtable may be external,\n      we may create the first reference to the object in the unit.  */\n@@ -2252,7 +2258,7 @@ ipa_make_edge_direct_to_target (struct cgraph_edge *ie, tree target)\n \t\t\t - eni_size_weights.call_cost);\n   es->call_stmt_time -= (eni_time_weights.indirect_call_cost\n \t\t\t - eni_time_weights.call_cost);\n-  if (dump_file)\n+  if (dump_file && !unreachable)\n     {\n       fprintf (dump_file, \"ipa-prop: Discovered %s call to a known target \"\n \t       \"(%s/%i -> %s/%i), for stmt \","}]}