{"sha": "b8545fbfe5d64073614eb66c7e1c1cae74e7c082", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yjg1NDVmYmZlNWQ2NDA3MzYxNGViNjZjN2UxYzFjYWU3NGU3YzA4Mg==", "commit": {"author": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2004-09-24T22:31:13Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2004-09-24T22:31:13Z"}, "message": "tree-ssa-dom.c (dom_opt_finalize_block): Fix violation of strict aliasing rules.\n\n\n\t* tree-ssa-dom.c (dom_opt_finalize_block): Fix violation of strict\n\taliasing rules.\n\t(simplify_cond_and_lookup_avail_expr): Likewise.\n\nFrom-SVN: r88077", "tree": {"sha": "e2e3161744f43a803583585dbfa4f56ae8e514a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e2e3161744f43a803583585dbfa4f56ae8e514a4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b8545fbfe5d64073614eb66c7e1c1cae74e7c082", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8545fbfe5d64073614eb66c7e1c1cae74e7c082", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8545fbfe5d64073614eb66c7e1c1cae74e7c082", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8545fbfe5d64073614eb66c7e1c1cae74e7c082/comments", "author": null, "committer": null, "parents": [{"sha": "018a4785065ba0b5164d5aae330613e42c5653ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/018a4785065ba0b5164d5aae330613e42c5653ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/018a4785065ba0b5164d5aae330613e42c5653ac"}], "stats": {"total": 17, "additions": 13, "deletions": 4}, "files": [{"sha": "9ff33e2e53463473ea58c7a27274f3405f36f559", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8545fbfe5d64073614eb66c7e1c1cae74e7c082/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8545fbfe5d64073614eb66c7e1c1cae74e7c082/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b8545fbfe5d64073614eb66c7e1c1cae74e7c082", "patch": "@@ -1,3 +1,9 @@\n+2004-09-24 Jeff Law  <law@redhat.com>\n+\n+\t* tree-ssa-dom.c (dom_opt_finalize_block): Fix violation of strict\n+\taliasing rules.\n+\t(simplify_cond_and_lookup_avail_expr): Likewise.\n+\n 2004-09-24  Joseph S. Myers  <jsm@polyomino.org.uk>\n \n \tPR c/12802"}, {"sha": "8bce1c3a9aa06db38a23b388b4a136040f591428", "filename": "gcc/tree-ssa-dom.c", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8545fbfe5d64073614eb66c7e1c1cae74e7c082/gcc%2Ftree-ssa-dom.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8545fbfe5d64073614eb66c7e1c1cae74e7c082/gcc%2Ftree-ssa-dom.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-dom.c?ref=b8545fbfe5d64073614eb66c7e1c1cae74e7c082", "patch": "@@ -978,7 +978,7 @@ dom_opt_finalize_block (struct dom_walk_data *walk_data, basic_block bb)\n   while (VARRAY_ACTIVE_SIZE (vrp_variables_stack) > 0)\n     {\n       tree var = VARRAY_TOP_TREE (vrp_variables_stack);\n-      struct vrp_hash_elt vrp_hash_elt;\n+      struct vrp_hash_elt vrp_hash_elt, *vrp_hash_elt_p;\n       void **slot;\n \n       /* Each variable has a stack of value range records.  We want to\n@@ -998,7 +998,9 @@ dom_opt_finalize_block (struct dom_walk_data *walk_data, basic_block bb)\n \n       slot = htab_find_slot (vrp_data, &vrp_hash_elt, NO_INSERT);\n \n-      var_vrp_records = (*(struct vrp_hash_elt **)slot)->records;\n+      vrp_hash_elt_p = (struct vrp_hash_elt *) *slot;\n+      var_vrp_records = vrp_hash_elt_p->records;\n+\n       while (VARRAY_ACTIVE_SIZE (var_vrp_records) > 0)\n \t{\n \t  struct vrp_element *element\n@@ -1894,7 +1896,7 @@ simplify_cond_and_lookup_avail_expr (tree stmt,\n \t  int lowequal, highequal, swapped, no_overlap, subset, cond_inverted;\n \t  varray_type vrp_records;\n \t  struct vrp_element *element;\n-\t  struct vrp_hash_elt vrp_hash_elt;\n+\t  struct vrp_hash_elt vrp_hash_elt, *vrp_hash_elt_p;\n \t  void **slot;\n \n \t  /* First see if we have test of an SSA_NAME against a constant\n@@ -1944,7 +1946,8 @@ simplify_cond_and_lookup_avail_expr (tree stmt,\n           if (slot == NULL)\n \t    return NULL;\n \n-\t  vrp_records = (*(struct vrp_hash_elt **)slot)->records;\n+\t  vrp_hash_elt_p = (struct vrp_hash_elt *) *slot;\n+\t  vrp_records = vrp_hash_elt_p->records;\n \t  if (vrp_records == NULL)\n \t    return NULL;\n "}]}