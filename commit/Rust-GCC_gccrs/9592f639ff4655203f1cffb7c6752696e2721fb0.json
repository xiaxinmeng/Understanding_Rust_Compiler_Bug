{"sha": "9592f639ff4655203f1cffb7c6752696e2721fb0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTU5MmY2MzlmZjQ2NTUyMDNmMWNmZmI3YzY3NTI2OTZlMjcyMWZiMA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-01-23T11:39:13Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-01-23T11:39:13Z"}, "message": "i386: Use bzhi for x & ((1 << y) - 1) or x & ((1U << y) - 1) [PR93346]\n\nThe bzhi patterns are quite complicated because they need to accurately\ndescribe the behavior of the instruction for all input values.\nThe following patterns are simple and make bzhi recognizable even for\ncases where not all input values are valid, because the user used\na shift, in which case the low 8 bit of the last operand need to be in\nbetween 0 and precision-1.\n\n2020-01-23  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR target/93346\n\t* config/i386/i386.md (*bmi2_bzhi_<mode>3_2, *bmi2_bzhi_<mode>3_3):\n\tNew define_insn patterns.\n\n\t* gcc.target/i386/pr93346.c: New test.", "tree": {"sha": "949dba7cd858fa9cea9afc9746505573a3054489", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/949dba7cd858fa9cea9afc9746505573a3054489"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9592f639ff4655203f1cffb7c6752696e2721fb0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9592f639ff4655203f1cffb7c6752696e2721fb0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9592f639ff4655203f1cffb7c6752696e2721fb0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9592f639ff4655203f1cffb7c6752696e2721fb0/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8a990ffafaaa18981c6e91d4ed88f05ed74c5f3f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a990ffafaaa18981c6e91d4ed88f05ed74c5f3f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a990ffafaaa18981c6e91d4ed88f05ed74c5f3f"}], "stats": {"total": 116, "additions": 116, "deletions": 0}, "files": [{"sha": "e62d3c02331194ed1983626c7f5d239af839b952", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9592f639ff4655203f1cffb7c6752696e2721fb0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9592f639ff4655203f1cffb7c6752696e2721fb0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9592f639ff4655203f1cffb7c6752696e2721fb0", "patch": "@@ -1,3 +1,9 @@\n+2020-01-23  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/93346\n+\t* config/i386/i386.md (*bmi2_bzhi_<mode>3_2, *bmi2_bzhi_<mode>3_3):\n+\tNew define_insn patterns.\n+\n 2020-01-23  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* doc/sourcebuild.texi (check-function-bodies): Add an"}, {"sha": "b5b53bbcfaa7580ca0435f920dcec5ab1456dfc4", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9592f639ff4655203f1cffb7c6752696e2721fb0/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9592f639ff4655203f1cffb7c6752696e2721fb0/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=9592f639ff4655203f1cffb7c6752696e2721fb0", "patch": "@@ -14304,6 +14304,35 @@\n    (set_attr \"prefix\" \"vex\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n+(define_insn \"*bmi2_bzhi_<mode>3_2\"\n+  [(set (match_operand:SWI48 0 \"register_operand\" \"=r\")\n+\t(and:SWI48\n+\t  (plus:SWI48\n+\t    (ashift:SWI48 (const_int 1)\n+\t\t\t  (match_operand:QI 2 \"register_operand\" \"r\"))\n+\t    (const_int -1))\n+\t  (match_operand:SWI48 1 \"nonimmediate_operand\" \"rm\")))\n+   (clobber (reg:CC FLAGS_REG))]\n+  \"TARGET_BMI2\"\n+  \"bzhi\\t{%<k>2, %1, %0|%0, %1, %<k>2}\"\n+  [(set_attr \"type\" \"bitmanip\")\n+   (set_attr \"prefix\" \"vex\")\n+   (set_attr \"mode\" \"<MODE>\")])\n+\n+(define_insn \"*bmi2_bzhi_<mode>3_3\"\n+  [(set (match_operand:SWI48 0 \"register_operand\" \"=r\")\n+\t(and:SWI48\n+\t  (not:SWI48\n+\t    (ashift:SWI48 (const_int -1)\n+\t\t\t  (match_operand:QI 2 \"register_operand\" \"r\")))\n+\t  (match_operand:SWI48 1 \"nonimmediate_operand\" \"rm\")))\n+   (clobber (reg:CC FLAGS_REG))]\n+  \"TARGET_BMI2\"\n+  \"bzhi\\t{%<k>2, %1, %0|%0, %1, %<k>2}\"\n+  [(set_attr \"type\" \"bitmanip\")\n+   (set_attr \"prefix\" \"vex\")\n+   (set_attr \"mode\" \"<MODE>\")])\n+\n (define_insn \"bmi2_pdep_<mode>3\"\n   [(set (match_operand:SWI48 0 \"register_operand\" \"=r\")\n         (unspec:SWI48 [(match_operand:SWI48 1 \"register_operand\" \"r\")"}, {"sha": "dbcd8dd83902b9d25d8af958c43b74f29f9e3ade", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9592f639ff4655203f1cffb7c6752696e2721fb0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9592f639ff4655203f1cffb7c6752696e2721fb0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9592f639ff4655203f1cffb7c6752696e2721fb0", "patch": "@@ -1,3 +1,8 @@\n+2020-01-23  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/93346\n+\t* gcc.target/i386/pr93346.c: New test.\n+\n 2020-01-23  Martin Sebor  <msebor@redhat.com>\n \n \tPR c/84919"}, {"sha": "bad5c48f945273868dcf74c2d3799ceeb3a62107", "filename": "gcc/testsuite/gcc.target/i386/pr93346.c", "status": "added", "additions": 76, "deletions": 0, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9592f639ff4655203f1cffb7c6752696e2721fb0/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr93346.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9592f639ff4655203f1cffb7c6752696e2721fb0/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr93346.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr93346.c?ref=9592f639ff4655203f1cffb7c6752696e2721fb0", "patch": "@@ -0,0 +1,76 @@\n+/* PR target/93346 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mbmi2\" } */\n+/* { dg-final { scan-assembler-times \"\\tbzhi\\t\" 12 } } */\n+\n+unsigned int\n+f1 (unsigned int x, unsigned int y)\n+{\n+  return x & ((1 << y) - 1);\n+} \n+\n+unsigned int\n+f2 (unsigned int x, unsigned int y)\n+{\n+  return x & ((1U << y) - 1);\n+} \n+\n+int\n+f3 (int x, unsigned int y)\n+{\n+  return x & ((1 << y) - 1);\n+} \n+\n+unsigned long\n+f4 (unsigned long x, unsigned int y)\n+{\n+  return x & ((1L << y) - 1);\n+} \n+\n+unsigned long\n+f5 (unsigned long x, unsigned int y)\n+{\n+  return x & ((1UL << y) - 1);\n+} \n+\n+long\n+f6 (long x, unsigned int y)\n+{\n+  return x & ((1L << y) - 1);\n+} \n+\n+unsigned int\n+f7 (unsigned int x, int y)\n+{\n+  return x & ((1 << y) - 1);\n+} \n+\n+unsigned int\n+f8 (unsigned int x, int y)\n+{\n+  return x & ((1U << y) - 1);\n+} \n+\n+int\n+f9 (int x, int y)\n+{\n+  return x & ((1 << y) - 1);\n+} \n+\n+unsigned long\n+f10 (unsigned long x, int y)\n+{\n+  return x & ((1L << y) - 1);\n+} \n+\n+unsigned long\n+f11 (unsigned long x, int y)\n+{\n+  return x & ((1UL << y) - 1);\n+} \n+\n+long\n+f12 (long x, int y)\n+{\n+  return x & ((1L << y) - 1);\n+} "}]}