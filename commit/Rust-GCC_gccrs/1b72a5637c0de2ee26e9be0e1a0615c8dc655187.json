{"sha": "1b72a5637c0de2ee26e9be0e1a0615c8dc655187", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWI3MmE1NjM3YzBkZTJlZTI2ZTliZTBlMWEwNjE1YzhkYzY1NTE4Nw==", "commit": {"author": {"name": "Justin Squirek", "email": "squirek@adacore.com", "date": "2018-07-17T08:07:42Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-07-17T08:07:42Z"}, "message": "[Ada] Argument_String_To_List creates empty items from whitespace\n\nThis patch corrects an issue whereby leading whitespace in a non-quoted\nargument list passed to Argument_String_To_List caused extraneous empty\narguments to be returned.\n\n2018-07-17  Justin Squirek  <squirek@adacore.com>\n\ngcc/ada/\n\n\t* libgnat/s-os_lib.adb (Argument_String_To_List): Fix trimming of\n\twhitespace.\n\ngcc/testsuite/\n\n\t* gnat.dg/split_args.adb: New testcase.\n\nFrom-SVN: r262783", "tree": {"sha": "ed500224e3e44789cd31fa4a2dd3ff2cb473f860", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ed500224e3e44789cd31fa4a2dd3ff2cb473f860"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1b72a5637c0de2ee26e9be0e1a0615c8dc655187", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b72a5637c0de2ee26e9be0e1a0615c8dc655187", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b72a5637c0de2ee26e9be0e1a0615c8dc655187", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b72a5637c0de2ee26e9be0e1a0615c8dc655187/comments", "author": {"login": "AdaDoom3", "id": 3445599, "node_id": "MDQ6VXNlcjM0NDU1OTk=", "avatar_url": "https://avatars.githubusercontent.com/u/3445599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AdaDoom3", "html_url": "https://github.com/AdaDoom3", "followers_url": "https://api.github.com/users/AdaDoom3/followers", "following_url": "https://api.github.com/users/AdaDoom3/following{/other_user}", "gists_url": "https://api.github.com/users/AdaDoom3/gists{/gist_id}", "starred_url": "https://api.github.com/users/AdaDoom3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AdaDoom3/subscriptions", "organizations_url": "https://api.github.com/users/AdaDoom3/orgs", "repos_url": "https://api.github.com/users/AdaDoom3/repos", "events_url": "https://api.github.com/users/AdaDoom3/events{/privacy}", "received_events_url": "https://api.github.com/users/AdaDoom3/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e6bc029a34598dd3af5c6a0aacd66ee62235cdfe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6bc029a34598dd3af5c6a0aacd66ee62235cdfe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e6bc029a34598dd3af5c6a0aacd66ee62235cdfe"}], "stats": {"total": 126, "additions": 73, "deletions": 53}, "files": [{"sha": "83196d3b61d36fb338cb47a8a4f7939fcb87c84b", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b72a5637c0de2ee26e9be0e1a0615c8dc655187/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b72a5637c0de2ee26e9be0e1a0615c8dc655187/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=1b72a5637c0de2ee26e9be0e1a0615c8dc655187", "patch": "@@ -1,3 +1,8 @@\n+2018-07-17  Justin Squirek  <squirek@adacore.com>\n+\n+\t* libgnat/s-os_lib.adb (Argument_String_To_List): Fix trimming of\n+\twhitespace.\n+\n 2018-07-17  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* sem_prag.adb (Has_Visible_State): Do not consider constants as"}, {"sha": "1464206c83bda28902a43b688673367d19ffabf9", "filename": "gcc/ada/libgnat/s-os_lib.adb", "status": "modified", "additions": 51, "deletions": 53, "changes": 104, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b72a5637c0de2ee26e9be0e1a0615c8dc655187/gcc%2Fada%2Flibgnat%2Fs-os_lib.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b72a5637c0de2ee26e9be0e1a0615c8dc655187/gcc%2Fada%2Flibgnat%2Fs-os_lib.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-os_lib.adb?ref=1b72a5637c0de2ee26e9be0e1a0615c8dc655187", "patch": "@@ -178,7 +178,6 @@ package body System.OS_Lib is\n \n       return Len;\n    end Args_Length;\n-\n    -----------------------------\n    -- Argument_String_To_List --\n    -----------------------------\n@@ -191,6 +190,9 @@ package body System.OS_Lib is\n       Idx      : Integer;\n       New_Argc : Natural := 0;\n \n+      Backqd : Boolean := False;\n+      Quoted : Boolean := False;\n+\n       Cleaned     : String (1 .. Arg_String'Length);\n       Cleaned_Idx : Natural;\n       --  A cleaned up version of the argument. This function is taking\n@@ -205,75 +207,71 @@ package body System.OS_Lib is\n       Idx := Arg_String'First;\n \n       loop\n-         exit when Idx > Arg_String'Last;\n+         --  Skip extraneous spaces\n \n-         declare\n-            Backqd  : Boolean := False;\n-            Quoted  : Boolean := False;\n-\n-         begin\n-            Cleaned_Idx := Cleaned'First;\n+         while Idx <= Arg_String'Last and then Arg_String (Idx) = ' ' loop\n+            Idx := Idx + 1;\n+         end loop;\n \n-            loop\n-               --  An unquoted space is the end of an argument\n+         exit when Idx > Arg_String'Last;\n \n-               if not (Backqd or Quoted)\n-                 and then Arg_String (Idx) = ' '\n-               then\n-                  exit;\n+         Cleaned_Idx := Cleaned'First;\n+         Backqd      := False;\n+         Quoted      := False;\n \n-               --  Start of a quoted string\n+         loop\n+            --  An unquoted space is the end of an argument\n \n-               elsif not (Backqd or Quoted)\n-                 and then Arg_String (Idx) = '\"'\n-               then\n-                  Quoted := True;\n-                  Cleaned (Cleaned_Idx) := Arg_String (Idx);\n-                  Cleaned_Idx := Cleaned_Idx + 1;\n+            if not (Backqd or Quoted)\n+              and then Arg_String (Idx) = ' '\n+            then\n+               exit;\n \n-               --  End of a quoted string and end of an argument\n+            --  Start of a quoted string\n \n-               elsif (Quoted and not Backqd)\n-                 and then Arg_String (Idx) = '\"'\n-               then\n-                  Cleaned (Cleaned_Idx) := Arg_String (Idx);\n-                  Cleaned_Idx := Cleaned_Idx + 1;\n-                  Idx := Idx + 1;\n-                  exit;\n+            elsif not (Backqd or Quoted)\n+              and then Arg_String (Idx) = '\"'\n+            then\n+               Quoted := True;\n+               Cleaned (Cleaned_Idx) := Arg_String (Idx);\n+               Cleaned_Idx := Cleaned_Idx + 1;\n \n-               --  Turn off backquoting after advancing one character\n+            --  End of a quoted string and end of an argument\n \n-               elsif Backqd then\n-                  Backqd := False;\n-                  Cleaned (Cleaned_Idx) := Arg_String (Idx);\n-                  Cleaned_Idx := Cleaned_Idx + 1;\n+            elsif (Quoted and not Backqd)\n+              and then Arg_String (Idx) = '\"'\n+            then\n+               Cleaned (Cleaned_Idx) := Arg_String (Idx);\n+               Cleaned_Idx := Cleaned_Idx + 1;\n+               Idx := Idx + 1;\n+               exit;\n \n-               --  Following character is backquoted\n+            --  Turn off backquoting after advancing one character\n \n-               elsif not Backslash_Is_Sep and then Arg_String (Idx) = '\\' then\n-                  Backqd := True;\n+            elsif Backqd then\n+               Backqd := False;\n+               Cleaned (Cleaned_Idx) := Arg_String (Idx);\n+               Cleaned_Idx := Cleaned_Idx + 1;\n \n-               else\n-                  Cleaned (Cleaned_Idx) := Arg_String (Idx);\n-                  Cleaned_Idx := Cleaned_Idx + 1;\n-               end if;\n+            --  Following character is backquoted\n \n-               Idx := Idx + 1;\n-               exit when Idx > Arg_String'Last;\n-            end loop;\n+            elsif not Backslash_Is_Sep and then Arg_String (Idx) = '\\' then\n+               Backqd := True;\n \n-            --  Found an argument\n+            else\n+               Cleaned (Cleaned_Idx) := Arg_String (Idx);\n+               Cleaned_Idx := Cleaned_Idx + 1;\n+            end if;\n \n-            New_Argc := New_Argc + 1;\n-            New_Argv (New_Argc) :=\n-              new String'(Cleaned (Cleaned'First .. Cleaned_Idx - 1));\n+            Idx := Idx + 1;\n+            exit when Idx > Arg_String'Last;\n+         end loop;\n \n-            --  Skip extraneous spaces\n+         --  Found an argument\n \n-            while Idx <= Arg_String'Last and then Arg_String (Idx) = ' ' loop\n-               Idx := Idx + 1;\n-            end loop;\n-         end;\n+         New_Argc := New_Argc + 1;\n+         New_Argv (New_Argc) :=\n+           new String'(Cleaned (Cleaned'First .. Cleaned_Idx - 1));\n       end loop;\n \n       return new Argument_List'(New_Argv (1 .. New_Argc));"}, {"sha": "eace53c3b354625bafc4c61824a34a2f1c4d1b0a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b72a5637c0de2ee26e9be0e1a0615c8dc655187/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b72a5637c0de2ee26e9be0e1a0615c8dc655187/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1b72a5637c0de2ee26e9be0e1a0615c8dc655187", "patch": "@@ -1,3 +1,7 @@\n+2018-07-17  Justin Squirek  <squirek@adacore.com>\n+\n+\t* gnat.dg/split_args.adb: New testcase.\n+\n 2018-07-17  Ed Schonberg  <schonberg@adacore.com>\n \n \t* gnat.dg/discr54.adb, gnat.dg/discr54_pkg.ads: New testcase."}, {"sha": "3ea39dc2c04ba37a63e652d91f5dd36ad24c66c3", "filename": "gcc/testsuite/gnat.dg/split_args.adb", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b72a5637c0de2ee26e9be0e1a0615c8dc655187/gcc%2Ftestsuite%2Fgnat.dg%2Fsplit_args.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b72a5637c0de2ee26e9be0e1a0615c8dc655187/gcc%2Ftestsuite%2Fgnat.dg%2Fsplit_args.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fsplit_args.adb?ref=1b72a5637c0de2ee26e9be0e1a0615c8dc655187", "patch": "@@ -0,0 +1,13 @@\n+--  { dg-do run }\n+--  { dg-options \"-gnatws\" }\n+\n+with System.OS_Lib; use System.OS_Lib;\n+\n+procedure Split_Args is\n+   X : constant Argument_List_Access :=\n+     Argument_String_To_List (\" -v\");\n+begin\n+   if X'Length /= 1 then\n+      raise Program_Error;\n+   end if;\n+end Split_Args;"}]}