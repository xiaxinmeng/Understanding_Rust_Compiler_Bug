{"sha": "0fa13661a9b9ba37df8bcdec4fa30ea91d19c878", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGZhMTM2NjFhOWI5YmEzN2RmOGJjZGVjNGZhMzBlYTkxZDE5Yzg3OA==", "commit": {"author": {"name": "Anthony Green", "email": "green@localhost.localdomain", "date": "2004-05-19T21:49:04Z"}, "committer": {"name": "Anthony Green", "email": "green@gcc.gnu.org", "date": "2004-05-19T21:49:04Z"}, "message": "Makefile.am (awt_java_source_files): Remove javax.rmi and gnu.javax.rmi code.\n\n2004-05-19  Anthony Green  <green@redhat.com>\n\n\t* Makefile.am (awt_java_source_files): Remove javax.rmi and\n\tgnu.javax.rmi code.\n\t* Makefile.in: Rebuilt.\n\t* javax/rmi/ClassDesc.java, javax/rmi/StubDelegate.java,\n\tjavax/rmi/UtilDelegate.java, javax/rmi/Stub.java,\n\tjavax/rmi/Util.java, javax/rmi/ObjectImpl.java,\n\tjavax/rmi/SystemException.java, javax/rmi/ValueHandler.java,\n\tjavax/rmi/PortableRemoteObjectDelegate.java, javax/rmi/Tie.java,\n\tgnu/javax/rmi/CORBA/DelegateFactory.java,\n\tgnu/javax/rmi/CORBA/GetDelegateInstanceException.java,\n\tgnu/javax/rmi/CORBA/PortableRemoteObjectDelegateImpl.java,\n\tgnu/javax/rmi/CORBA/StubDelegateImpl.java,\n\tgnu/javax/rmi/CORBA/UtilDelegateImpl.java,\n\tgnu/javax/rmi/CORBA/ValueHandlerImpl.java,\n\tgnu/javax/rmi/PortableServer.java: Remove files.\n\nFrom-SVN: r82036", "tree": {"sha": "328dfef398593355fd2a6e282667915d9a236af6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/328dfef398593355fd2a6e282667915d9a236af6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0fa13661a9b9ba37df8bcdec4fa30ea91d19c878", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0fa13661a9b9ba37df8bcdec4fa30ea91d19c878", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0fa13661a9b9ba37df8bcdec4fa30ea91d19c878", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0fa13661a9b9ba37df8bcdec4fa30ea91d19c878/comments", "author": null, "committer": null, "parents": [{"sha": "34eb8991ffc7d23522a2764821e03e0a774a2979", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34eb8991ffc7d23522a2764821e03e0a774a2979", "html_url": "https://github.com/Rust-GCC/gccrs/commit/34eb8991ffc7d23522a2764821e03e0a774a2979"}], "stats": {"total": 1666, "additions": 19, "deletions": 1647}, "files": [{"sha": "8299f0dce19ba81377c8ededd3b37467288000da", "filename": "libjava/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fa13661a9b9ba37df8bcdec4fa30ea91d19c878/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fa13661a9b9ba37df8bcdec4fa30ea91d19c878/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=0fa13661a9b9ba37df8bcdec4fa30ea91d19c878", "patch": "@@ -1,3 +1,21 @@\n+2004-05-19  Anthony Green  <green@localhost.localdomain>\n+\n+\t* Makefile.am (awt_java_source_files): Remove javax.rmi and\n+\tgnu.javax.rmi code.\n+\t* Makefile.in: Rebuilt.\n+\t* javax/rmi/ClassDesc.java, javax/rmi/StubDelegate.java,\n+\tjavax/rmi/UtilDelegate.java, javax/rmi/Stub.java,\n+\tjavax/rmi/Util.java, javax/rmi/ObjectImpl.java,\n+\tjavax/rmi/SystemException.java, javax/rmi/ValueHandler.java,\n+\tjavax/rmi/PortableRemoteObjectDelegate.java, javax/rmi/Tie.java,\n+\tgnu/javax/rmi/CORBA/DelegateFactory.java,\n+\tgnu/javax/rmi/CORBA/GetDelegateInstanceException.java,\n+\tgnu/javax/rmi/CORBA/PortableRemoteObjectDelegateImpl.java,\n+\tgnu/javax/rmi/CORBA/StubDelegateImpl.java,\n+\tgnu/javax/rmi/CORBA/UtilDelegateImpl.java,\n+\tgnu/javax/rmi/CORBA/ValueHandlerImpl.java,\n+\tgnu/javax/rmi/PortableServer.java: Remove files.\n+\n 2004-05-19  Anthony Green  <green@redhat.com>\n \n \t* Makefile.am: Define JAVA_EXT_DIRS."}, {"sha": "2f72f96343eba52af10613083f136caa2d3a3d87", "filename": "libjava/Makefile.am", "status": "modified", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fa13661a9b9ba37df8bcdec4fa30ea91d19c878/libjava%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fa13661a9b9ba37df8bcdec4fa30ea91d19c878/libjava%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.am?ref=0fa13661a9b9ba37df8bcdec4fa30ea91d19c878", "patch": "@@ -943,13 +943,6 @@ gnu/java/beans/BeanInfoEmbryo.java \\\n gnu/java/beans/EmptyBeanInfo.java \\\n gnu/java/beans/ExplicitBeanInfo.java \\\n gnu/java/beans/IntrospectionIncubator.java \\\n-gnu/javax/rmi/CORBA/DelegateFactory.java \\\n-gnu/javax/rmi/CORBA/GetDelegateInstanceException.java \\\n-gnu/javax/rmi/CORBA/PortableRemoteObjectDelegateImpl.java \\\n-gnu/javax/rmi/CORBA/StubDelegateImpl.java \\\n-gnu/javax/rmi/CORBA/UtilDelegateImpl.java \\\n-gnu/javax/rmi/CORBA/ValueHandlerImpl.java \\\n-gnu/javax/rmi/PortableServer.java \\\n java/applet/Applet.java \\\n java/applet/AppletStub.java \\\n java/applet/AppletContext.java \\\n@@ -1312,19 +1305,6 @@ java/beans/VetoableChangeListenerProxy.java \\\n java/beans/VetoableChangeSupport.java \\\n java/beans/Visibility.java \\\n java/beans/AppletInitializer.java \\\n-javax/rmi/BAD_OPERATION.java \\\n-javax/rmi/ORB.java \\\n-javax/rmi/PortableRemoteObject.java \\\n-javax/rmi/CORBA/ClassDesc.java \\\n-javax/rmi/CORBA/ObjectImpl.java\t\\\n-javax/rmi/CORBA/PortableRemoteObjectDelegate.java \\\n-javax/rmi/CORBA/StubDelegate.java \\\n-javax/rmi/CORBA/Stub.java \\\n-javax/rmi/CORBA/SystemException.java \\\n-javax/rmi/CORBA/Tie.java \\\n-javax/rmi/CORBA/UtilDelegate.java \\\n-javax/rmi/CORBA/Util.java \\\n-javax/rmi/CORBA/ValueHandler.java \\\n javax/swing/border/AbstractBorder.java \\\n javax/swing/border/BevelBorder.java \\\n javax/swing/border/Border.java \\"}, {"sha": "2ee14dd1a0ad932e6d28de17a0f0a4f2425b4d33", "filename": "libjava/Makefile.in", "status": "modified", "additions": 1, "deletions": 35, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fa13661a9b9ba37df8bcdec4fa30ea91d19c878/libjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fa13661a9b9ba37df8bcdec4fa30ea91d19c878/libjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.in?ref=0fa13661a9b9ba37df8bcdec4fa30ea91d19c878", "patch": "@@ -622,13 +622,6 @@ gnu/java/beans/BeanInfoEmbryo.java \\\n gnu/java/beans/EmptyBeanInfo.java \\\n gnu/java/beans/ExplicitBeanInfo.java \\\n gnu/java/beans/IntrospectionIncubator.java \\\n-gnu/javax/rmi/CORBA/DelegateFactory.java \\\n-gnu/javax/rmi/CORBA/GetDelegateInstanceException.java \\\n-gnu/javax/rmi/CORBA/PortableRemoteObjectDelegateImpl.java \\\n-gnu/javax/rmi/CORBA/StubDelegateImpl.java \\\n-gnu/javax/rmi/CORBA/UtilDelegateImpl.java \\\n-gnu/javax/rmi/CORBA/ValueHandlerImpl.java \\\n-gnu/javax/rmi/PortableServer.java \\\n java/applet/Applet.java \\\n java/applet/AppletStub.java \\\n java/applet/AppletContext.java \\\n@@ -991,19 +984,6 @@ java/beans/VetoableChangeListenerProxy.java \\\n java/beans/VetoableChangeSupport.java \\\n java/beans/Visibility.java \\\n java/beans/AppletInitializer.java \\\n-javax/rmi/BAD_OPERATION.java \\\n-javax/rmi/ORB.java \\\n-javax/rmi/PortableRemoteObject.java \\\n-javax/rmi/CORBA/ClassDesc.java \\\n-javax/rmi/CORBA/ObjectImpl.java\t\\\n-javax/rmi/CORBA/PortableRemoteObjectDelegate.java \\\n-javax/rmi/CORBA/StubDelegate.java \\\n-javax/rmi/CORBA/Stub.java \\\n-javax/rmi/CORBA/SystemException.java \\\n-javax/rmi/CORBA/Tie.java \\\n-javax/rmi/CORBA/UtilDelegate.java \\\n-javax/rmi/CORBA/Util.java \\\n-javax/rmi/CORBA/ValueHandler.java \\\n javax/swing/border/AbstractBorder.java \\\n javax/swing/border/BevelBorder.java \\\n javax/swing/border/Border.java \\\n@@ -3489,13 +3469,7 @@ DEP_FILES =  .deps/$(srcdir)/$(CONVERT_DIR)/gen-from-JIS.P \\\n .deps/gnu/java/util/prefs/MemoryBasedPreferences.P \\\n .deps/gnu/java/util/prefs/NodeReader.P \\\n .deps/gnu/java/util/prefs/NodeWriter.P \\\n-.deps/gnu/javax/rmi/CORBA/DelegateFactory.P \\\n-.deps/gnu/javax/rmi/CORBA/GetDelegateInstanceException.P \\\n-.deps/gnu/javax/rmi/CORBA/PortableRemoteObjectDelegateImpl.P \\\n-.deps/gnu/javax/rmi/CORBA/StubDelegateImpl.P \\\n-.deps/gnu/javax/rmi/CORBA/UtilDelegateImpl.P \\\n-.deps/gnu/javax/rmi/CORBA/ValueHandlerImpl.P \\\n-.deps/gnu/javax/rmi/PortableServer.P .deps/gnu/regexp/CharIndexed.P \\\n+.deps/gnu/regexp/CharIndexed.P \\\n .deps/gnu/regexp/CharIndexedCharArray.P \\\n .deps/gnu/regexp/CharIndexedInputStream.P \\\n .deps/gnu/regexp/CharIndexedString.P \\\n@@ -4515,14 +4489,6 @@ DEP_FILES =  .deps/$(srcdir)/$(CONVERT_DIR)/gen-from-JIS.P \\\n .deps/javax/print/event/PrintJobListener.P \\\n .deps/javax/print/event/PrintServiceAttributeEvent.P \\\n .deps/javax/print/event/PrintServiceAttributeListener.P \\\n-.deps/javax/rmi/BAD_OPERATION.P .deps/javax/rmi/CORBA/ClassDesc.P \\\n-.deps/javax/rmi/CORBA/ObjectImpl.P \\\n-.deps/javax/rmi/CORBA/PortableRemoteObjectDelegate.P \\\n-.deps/javax/rmi/CORBA/Stub.P .deps/javax/rmi/CORBA/StubDelegate.P \\\n-.deps/javax/rmi/CORBA/SystemException.P .deps/javax/rmi/CORBA/Tie.P \\\n-.deps/javax/rmi/CORBA/Util.P .deps/javax/rmi/CORBA/UtilDelegate.P \\\n-.deps/javax/rmi/CORBA/ValueHandler.P .deps/javax/rmi/ORB.P \\\n-.deps/javax/rmi/PortableRemoteObject.P \\\n .deps/javax/security/auth/x500/X500Principal.P \\\n .deps/javax/sql/ConnectionEvent.P \\\n .deps/javax/sql/ConnectionEventListener.P \\"}, {"sha": "bf6f9e64c01dc24c420bfe750d93702f2609998c", "filename": "libjava/gnu/javax/rmi/CORBA/DelegateFactory.java", "status": "removed", "additions": 0, "deletions": 76, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34eb8991ffc7d23522a2764821e03e0a774a2979/libjava%2Fgnu%2Fjavax%2Frmi%2FCORBA%2FDelegateFactory.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34eb8991ffc7d23522a2764821e03e0a774a2979/libjava%2Fgnu%2Fjavax%2Frmi%2FCORBA%2FDelegateFactory.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjavax%2Frmi%2FCORBA%2FDelegateFactory.java?ref=34eb8991ffc7d23522a2764821e03e0a774a2979", "patch": "@@ -1,76 +0,0 @@\n-/* DelegateFactory.java -- \n-   Copyright (C) 2002 Free Software Foundation, Inc.\n-\n-This file is part of GNU Classpath.\n-\n-GNU Classpath is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU Classpath is distributed in the hope that it will be useful, but\n-WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n-General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU Classpath; see the file COPYING.  If not, write to the\n-Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n-02111-1307 USA.\n-\n-Linking this library statically or dynamically with other modules is\n-making a combined work based on this library.  Thus, the terms and\n-conditions of the GNU General Public License cover the whole\n-combination.\n-\n-As a special exception, the copyright holders of this library give you\n-permission to link this library with independent modules to produce an\n-executable, regardless of the license terms of these independent\n-modules, and to copy and distribute the resulting executable under\n-terms of your choice, provided that you also meet, for each linked\n-independent module, the terms and conditions of the license of that\n-module.  An independent module is a module which is not derived from\n-or based on this library.  If you modify this library, you may extend\n-this exception to your version of the library, but you are not\n-obligated to do so.  If you do not wish to do so, delete this\n-exception statement from your version. */\n-\n-\n-package gnu.javax.rmi.CORBA;\n-\n-import java.util.HashMap;\n-import javax.rmi.CORBA.Util;\n-\n-public class DelegateFactory\n-{\n-  private static HashMap cache = new HashMap(4);\n-    \n-  public static synchronized Object getInstance(String type)\n-    throws GetDelegateInstanceException\n-  {\n-    Object r = cache.get(type);\n-    if (r != null)\n-      return r;\n-    String dcname = System.getProperty(\"javax.rmi.CORBA.\" + type + \"Class\");\n-    if (dcname == null)\n-      {\n-\t//throw new DelegateException\n-\t//  (\"no javax.rmi.CORBA.XXXClass property sepcified.\");\n-\tdcname = \"gnu.javax.rmi.CORBA.\" + type + \"DelegateImpl\";\n-      }\n-    try\n-      {\n-\tClass dclass = Class.forName(dcname, \n-\t\t\t\t     true,\n-\t\t\t\t     Thread.currentThread().getContextClassLoader());\n-\tr = dclass.newInstance();\n-\tcache.put(type, r);\n-\treturn r;\n-      }\n-    catch(Exception e)\n-      {\n-\tthrow new GetDelegateInstanceException\n-\t  (\"Exception when trying to get delegate instance:\" + dcname, e);\n-      }\n-  }\n-}"}, {"sha": "27b84f122395d140c3137e2583215c3c0197d050", "filename": "libjava/gnu/javax/rmi/CORBA/GetDelegateInstanceException.java", "status": "removed", "additions": 0, "deletions": 58, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34eb8991ffc7d23522a2764821e03e0a774a2979/libjava%2Fgnu%2Fjavax%2Frmi%2FCORBA%2FGetDelegateInstanceException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34eb8991ffc7d23522a2764821e03e0a774a2979/libjava%2Fgnu%2Fjavax%2Frmi%2FCORBA%2FGetDelegateInstanceException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjavax%2Frmi%2FCORBA%2FGetDelegateInstanceException.java?ref=34eb8991ffc7d23522a2764821e03e0a774a2979", "patch": "@@ -1,58 +0,0 @@\n-/* GetDelegateInstanceException.java -- \n-   Copyright (C) 2002 Free Software Foundation, Inc.\n-\n-This file is part of GNU Classpath.\n-\n-GNU Classpath is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU Classpath is distributed in the hope that it will be useful, but\n-WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n-General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU Classpath; see the file COPYING.  If not, write to the\n-Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n-02111-1307 USA.\n-\n-Linking this library statically or dynamically with other modules is\n-making a combined work based on this library.  Thus, the terms and\n-conditions of the GNU General Public License cover the whole\n-combination.\n-\n-As a special exception, the copyright holders of this library give you\n-permission to link this library with independent modules to produce an\n-executable, regardless of the license terms of these independent\n-modules, and to copy and distribute the resulting executable under\n-terms of your choice, provided that you also meet, for each linked\n-independent module, the terms and conditions of the license of that\n-module.  An independent module is a module which is not derived from\n-or based on this library.  If you modify this library, you may extend\n-this exception to your version of the library, but you are not\n-obligated to do so.  If you do not wish to do so, delete this\n-exception statement from your version. */\n-\n-\n-package gnu.javax.rmi.CORBA;\n-\n-import java.io.PrintStream;\n-import java.io.PrintWriter;\n-\n-public class GetDelegateInstanceException\n-  extends Exception\n-{\n-  private Throwable next;\n-  \n-  public GetDelegateInstanceException(String msg)\n-  {\n-    super(msg);\n-  }\n-  \n-  public GetDelegateInstanceException(String msg, Throwable next)\n-  {\n-    super(msg, next);\n-  }\n-}"}, {"sha": "973c4c4f89fdf294807384f1c3b0db8f8ce43a9d", "filename": "libjava/gnu/javax/rmi/CORBA/PortableRemoteObjectDelegateImpl.java", "status": "removed", "additions": 0, "deletions": 133, "changes": 133, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34eb8991ffc7d23522a2764821e03e0a774a2979/libjava%2Fgnu%2Fjavax%2Frmi%2FCORBA%2FPortableRemoteObjectDelegateImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34eb8991ffc7d23522a2764821e03e0a774a2979/libjava%2Fgnu%2Fjavax%2Frmi%2FCORBA%2FPortableRemoteObjectDelegateImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjavax%2Frmi%2FCORBA%2FPortableRemoteObjectDelegateImpl.java?ref=34eb8991ffc7d23522a2764821e03e0a774a2979", "patch": "@@ -1,133 +0,0 @@\n-/* PortableRemoteObjectDelegateImpl.java -- \n-   Copyright (C) 2002 Free Software Foundation, Inc.\n-\n-This file is part of GNU Classpath.\n-\n-GNU Classpath is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU Classpath is distributed in the hope that it will be useful, but\n-WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n-General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU Classpath; see the file COPYING.  If not, write to the\n-Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n-02111-1307 USA.\n-\n-Linking this library statically or dynamically with other modules is\n-making a combined work based on this library.  Thus, the terms and\n-conditions of the GNU General Public License cover the whole\n-combination.\n-\n-As a special exception, the copyright holders of this library give you\n-permission to link this library with independent modules to produce an\n-executable, regardless of the license terms of these independent\n-modules, and to copy and distribute the resulting executable under\n-terms of your choice, provided that you also meet, for each linked\n-independent module, the terms and conditions of the license of that\n-module.  An independent module is a module which is not derived from\n-or based on this library.  If you modify this library, you may extend\n-this exception to your version of the library, but you are not\n-obligated to do so.  If you do not wish to do so, delete this\n-exception statement from your version. */\n-\n-\n-package gnu.javax.rmi.CORBA;\n-\n-import java.rmi.*;\n-import java.rmi.server.*;\n-import gnu.javax.rmi.*;\n-import javax.rmi.CORBA.*;\n-\n-public class PortableRemoteObjectDelegateImpl\n-  implements PortableRemoteObjectDelegate\n-{\n-    \n-  public PortableRemoteObjectDelegateImpl()\n-  {\n-  }\n-\n-  public void connect(Remote remote, Remote remote1)\n-    throws RemoteException\n-  {\n-    throw new Error(\"Not implemented for PortableRemoteObjectDelegateImpl\");\n-  }\n-        \n-  public void exportObject(Remote obj)\n-    throws RemoteException\n-  {\n-    PortableServer.exportObject(obj);\n-  }\n-\n-  public Object narrow(Object narrowFrom, Class narrowTo)\n-    throws ClassCastException\n-  {\n-    if (narrowTo == null)\n-      throw new ClassCastException(\"Can't narrow to null class\");\n-    if (narrowFrom == null)\n-      return null;\n-\n-    Class fromClass = narrowFrom.getClass();\n-    Object result = null;\n-        \n-    try\n-      {\n-\tif (narrowTo.isAssignableFrom(fromClass))\n-\t  result = narrowFrom;\n-\telse\n-\t  {\n-\t    System.out.println(\"We still haven't implement this case: narrow \"\n-\t\t\t       + narrowFrom + \" of type \" + fromClass + \" to \"\n-\t\t\t       + narrowTo);\n-\t    Class[] cs = fromClass.getInterfaces();\n-\t    for (int i = 0; i < cs.length; i++)\n-\t      System.out.println(cs[i]);\n-\t    Exception e1 = new Exception();\n-\t    try\n-\t      {\n-\t\tthrow e1;\n-\t      }\n-\t    catch(Exception ee)\n-\t      {\n-\t\tee.printStackTrace();\n-\t      }\n-\t    System.exit(2);\n-\t    //throw new Error(\"We still haven't implement this case: narrow \"\n-\t    //                + narrowFrom + \" of type \" + fromClass + \" to \"\n-\t    //                + narrowTo);\n-\t    /*\n-\t      ObjectImpl objimpl = (ObjectImpl)narrowFrom;\n-\t      if(objimpl._is_a(PortableServer.getTypeName(narrowTo)))\n-\t      result = PortableServer.getStubFromObjectImpl(objimpl, narrowTo);\n-\t    */\n-\t  }\n-      }\n-    catch(Exception e)\n-      {\n-\tresult = null;\n-      }\n-        \n-    if (result == null)\n-      throw new ClassCastException(\"Can't narrow from \"\n-\t\t\t\t   + fromClass + \" to \" + narrowTo);\n-            \n-    return result;\n-  }\n-        \n-  public Remote toStub(Remote obj)\n-    throws NoSuchObjectException\n-  {\n-    return PortableServer.toStub(obj);\n-  }\n-\n-  public void unexportObject(Remote obj)\n-    throws NoSuchObjectException\n-  {\n-    PortableServer.unexportObject(obj);\n-  }\n-\n-}"}, {"sha": "894e50236fd0c010964abacf450043b25c919719", "filename": "libjava/gnu/javax/rmi/CORBA/StubDelegateImpl.java", "status": "removed", "additions": 0, "deletions": 113, "changes": 113, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34eb8991ffc7d23522a2764821e03e0a774a2979/libjava%2Fgnu%2Fjavax%2Frmi%2FCORBA%2FStubDelegateImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34eb8991ffc7d23522a2764821e03e0a774a2979/libjava%2Fgnu%2Fjavax%2Frmi%2FCORBA%2FStubDelegateImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjavax%2Frmi%2FCORBA%2FStubDelegateImpl.java?ref=34eb8991ffc7d23522a2764821e03e0a774a2979", "patch": "@@ -1,113 +0,0 @@\n-/* StubDelegateImpl.java -- \n-   Copyright (C) 2002 Free Software Foundation, Inc.\n-\n-This file is part of GNU Classpath.\n-\n-GNU Classpath is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU Classpath is distributed in the hope that it will be useful, but\n-WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n-General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU Classpath; see the file COPYING.  If not, write to the\n-Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n-02111-1307 USA.\n-\n-Linking this library statically or dynamically with other modules is\n-making a combined work based on this library.  Thus, the terms and\n-conditions of the GNU General Public License cover the whole\n-combination.\n-\n-As a special exception, the copyright holders of this library give you\n-permission to link this library with independent modules to produce an\n-executable, regardless of the license terms of these independent\n-modules, and to copy and distribute the resulting executable under\n-terms of your choice, provided that you also meet, for each linked\n-independent module, the terms and conditions of the license of that\n-module.  An independent module is a module which is not derived from\n-or based on this library.  If you modify this library, you may extend\n-this exception to your version of the library, but you are not\n-obligated to do so.  If you do not wish to do so, delete this\n-exception statement from your version. */\n-\n-\n-package gnu.javax.rmi.CORBA;\n-\n-import java.io.IOException;\n-import java.io.ObjectInputStream;\n-import java.io.ObjectOutputStream;\n-//import org.omg.CORBA.portable.Delegate;\n-//import org.omg.CORBA.portable.InputStream;\n-//import org.omg.CORBA.portable.OutputStream;\n-//import org.omg.CORBA_2_3.portable.ObjectImpl;\n-//import org.omg.CORBA.portable.ObjectImpl;\n-//import org.omg.CORBA.BAD_OPERATION;\n-//import org.omg.CORBA.ORB;\n-import java.rmi.RemoteException;\n-import javax.rmi.CORBA.Stub;\n-import javax.rmi.CORBA.StubDelegate;\n-import javax.rmi.CORBA.Tie;\n-import javax.rmi.CORBA.StubDelegate;\n-\n-public class StubDelegateImpl\n-  implements StubDelegate\n-{\n-\n-  private int hashCode;\n-    \n-  public StubDelegateImpl(){\n-    hashCode = 0;   \n-  }\n-  // XXX javax.rmi.ORB -> org.omg.CORBA.ORB\n-  public void connect(Stub self, javax.rmi.ORB orb)\n-    throws RemoteException\n-  {\n-    throw new Error(\"Not implemented for StubDelegate\");\n-  }\n-\n-  public boolean equals(Stub self, Object obj)\n-  {\n-    if(self == null || obj == null)\n-      return self == obj;\n-    if(!(obj instanceof Stub))\n-      return false;\n-    return self.hashCode() == ((Stub)obj).hashCode();\n-  }\n-\n-  public int hashCode(Stub self)\n-  {\n-    //FIX ME\n-    return hashCode;\n-  }\n-\n-  public String toString(Stub self)\n-  {\n-    try\n-      {\n-\treturn self._orb().object_to_string(self);\n-      }\n-    // XXX javax.rmi.BAD_OPERATION -> org.omg.CORBA.BAD_OPERATION\n-    catch(javax.rmi.BAD_OPERATION bad_operation)\n-      {\n-\treturn null;\n-      }\n-  }\n-\n-  public void readObject(Stub self, ObjectInputStream s)\n-    throws IOException, ClassNotFoundException\n-  {\n-    throw new Error(\"Not implemented for StubDelegate\");\n-  }\n-\n-  public void writeObject(Stub self, ObjectOutputStream s)\n-    throws IOException\n-  {\n-    throw new Error(\"Not implemented for StubDelegate\");\n-  }\n-    \n-}"}, {"sha": "70b2e60c673e5761e80b099e4f93780973183d9d", "filename": "libjava/gnu/javax/rmi/CORBA/UtilDelegateImpl.java", "status": "removed", "additions": 0, "deletions": 152, "changes": 152, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34eb8991ffc7d23522a2764821e03e0a774a2979/libjava%2Fgnu%2Fjavax%2Frmi%2FCORBA%2FUtilDelegateImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34eb8991ffc7d23522a2764821e03e0a774a2979/libjava%2Fgnu%2Fjavax%2Frmi%2FCORBA%2FUtilDelegateImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjavax%2Frmi%2FCORBA%2FUtilDelegateImpl.java?ref=34eb8991ffc7d23522a2764821e03e0a774a2979", "patch": "@@ -1,152 +0,0 @@\n-/* UtilDelegateImpl.java -- \n-   Copyright (C) 2002 Free Software Foundation, Inc.\n-\n-This file is part of GNU Classpath.\n-\n-GNU Classpath is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU Classpath is distributed in the hope that it will be useful, but\n-WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n-General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU Classpath; see the file COPYING.  If not, write to the\n-Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n-02111-1307 USA.\n-\n-Linking this library statically or dynamically with other modules is\n-making a combined work based on this library.  Thus, the terms and\n-conditions of the GNU General Public License cover the whole\n-combination.\n-\n-As a special exception, the copyright holders of this library give you\n-permission to link this library with independent modules to produce an\n-executable, regardless of the license terms of these independent\n-modules, and to copy and distribute the resulting executable under\n-terms of your choice, provided that you also meet, for each linked\n-independent module, the terms and conditions of the license of that\n-module.  An independent module is a module which is not derived from\n-or based on this library.  If you modify this library, you may extend\n-this exception to your version of the library, but you are not\n-obligated to do so.  If you do not wish to do so, delete this\n-exception statement from your version. */\n-\n-\n-package gnu.javax.rmi.CORBA;\n-\n-import java.rmi.Remote;\n-import java.rmi.RemoteException;\n-import java.rmi.server.RMIClassLoader;\n-import java.net.MalformedURLException;\n-import java.io.*;\n-//import org.omg.CORBA.ORB;\n-//import org.omg.CORBA.SystemException;\n-//import org.omg.CORBA.portable.InputStream;\n-//import org.omg.CORBA.portable.OutputStream;\n-import javax.rmi.CORBA.*;\n-\n-public class UtilDelegateImpl\n-  implements UtilDelegate\n-{\n-  // XXX javax.rmi.ORB -> org.omg.CORBA.ORB\n-  public Object copyObject(Object obj, javax.rmi.ORB orb)\n-    throws RemoteException\n-  {\n-    throw new Error(\"Not implemented for UtilDelegate\");\n-  }\n-\n-  // XXX javax.rmi.ORB -> org.omg.CORBA.ORB\n-  public Object[] copyObjects(Object obj[], javax.rmi.ORB orb)\n-    throws RemoteException\n-  {\n-    throw new Error(\"Not implemented for UtilDelegate\");\n-  }\n-\n-  public ValueHandler createValueHandler()\n-  {\n-    throw new Error(\"Not implemented for UtilDelegate\");\n-  }\n-    \n-  public String getCodebase(Class clz)\n-  {\n-    throw new Error(\"Not implemented for UtilDelegate\");\n-  }\n-    \n-  public Tie getTie(Remote target)\n-  {\n-    throw new Error(\"Not implemented for UtilDelegate\");\n-  }\n-    \n-  public boolean isLocal(Stub stub)\n-    throws RemoteException\n-  {\n-    throw new Error(\"Not implemented for UtilDelegate\");\n-  }\n-\n-  public Class loadClass(String className, String remoteCodebase,\n-\t\t  \t ClassLoader loader)\n-    throws ClassNotFoundException\n-  {\n-    try{\n-      if (remoteCodebase == null)\n-\treturn RMIClassLoader.loadClass(className);\n-      else\n-\treturn RMIClassLoader.loadClass(remoteCodebase, className);\n-    }\n-    catch (MalformedURLException e1)\n-      {\n-\tthrow new ClassNotFoundException(className, e1);\n-      }\n-    catch(ClassNotFoundException e2)\n-      {\n-\tif(loader != null)\n-\t  return loader.loadClass(className);\n-\telse\n-\t  return null;\n-      }\n-  }\n-\n-  public RemoteException mapSystemException(SystemException ex)\n-  {\n-    throw new Error(\"Not implemented for UtilDelegate\");\n-  }\n-\n-  public Object readAny(InputStream in)\n-  {\n-    throw new Error(\"Not implemented for UtilDelegate\");\n-  }\n-\n-  public void registerTarget(Tie tie, Remote target)\n-  {\n-    throw new Error(\"Not implemented for UtilDelegate\");\n-  }\n-    \n-  public void unexportObject(Remote target)\n-  {\n-    throw new Error(\"Not implemented for UtilDelegate\");\n-  }\n-    \n-  public RemoteException wrapException(Throwable orig)\n-  {\n-    throw new Error(\"Not implemented for UtilDelegate\");\n-  }\n-    \n-  public void writeAbstractObject(OutputStream out, Object obj)\n-  {\n-    throw new Error(\"Not implemented for UtilDelegate\");\n-  }\n-    \n-  public void writeAny(OutputStream out, Object obj)\n-  {\n-    throw new Error(\"Not implemented for UtilDelegate\");\n-  }\n-\n-  public void writeRemoteObject(OutputStream out, Object obj)\n-  {\n-    throw new Error(\"Not implemented for UtilDelegate\");\n-  }\n-}"}, {"sha": "6935aa68c4c92da85e05b39987aff3c662da70ea", "filename": "libjava/gnu/javax/rmi/CORBA/ValueHandlerImpl.java", "status": "removed", "additions": 0, "deletions": 82, "changes": 82, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34eb8991ffc7d23522a2764821e03e0a774a2979/libjava%2Fgnu%2Fjavax%2Frmi%2FCORBA%2FValueHandlerImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34eb8991ffc7d23522a2764821e03e0a774a2979/libjava%2Fgnu%2Fjavax%2Frmi%2FCORBA%2FValueHandlerImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjavax%2Frmi%2FCORBA%2FValueHandlerImpl.java?ref=34eb8991ffc7d23522a2764821e03e0a774a2979", "patch": "@@ -1,82 +0,0 @@\n-/* ValueHandlerImpl.java -- \n-   Copyright (C) 2002 Free Software Foundation, Inc.\n-\n-This file is part of GNU Classpath.\n-\n-GNU Classpath is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU Classpath is distributed in the hope that it will be useful, but\n-WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n-General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU Classpath; see the file COPYING.  If not, write to the\n-Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n-02111-1307 USA.\n-\n-Linking this library statically or dynamically with other modules is\n-making a combined work based on this library.  Thus, the terms and\n-conditions of the GNU General Public License cover the whole\n-combination.\n-\n-As a special exception, the copyright holders of this library give you\n-permission to link this library with independent modules to produce an\n-executable, regardless of the license terms of these independent\n-modules, and to copy and distribute the resulting executable under\n-terms of your choice, provided that you also meet, for each linked\n-independent module, the terms and conditions of the license of that\n-module.  An independent module is a module which is not derived from\n-or based on this library.  If you modify this library, you may extend\n-this exception to your version of the library, but you are not\n-obligated to do so.  If you do not wish to do so, delete this\n-exception statement from your version. */\n-\n-\n-package gnu.javax.rmi.CORBA;\n-\n-import java.io.*;\n-//import org.omg.CORBA.portable.InputStream;\n-//import org.omg.CORBA.portable.OutputStream;\n-//import org.omg.SendingContext.RunTime;\n-import javax.rmi.CORBA.ValueHandler;\n-\n-public class ValueHandlerImpl\n-  implements ValueHandler\n-{\n-\n-  public String getRMIRepositoryID(Class clz)\n-  {\n-    throw new Error(\"Not implemented for ValueHandler\");\n-  }\n-\n-  // XXX - Runtime -> RunTime\n-  public Runtime getRunTimeCodeBase()\n-  {\n-    throw new Error(\"Not implemented for ValueHandler\");\n-  }\n-    \n-  public boolean isCustomMarshaled(Class clz)\n-  {\n-    throw new Error(\"Not implemented for ValueHandler\");\n-  }   \n-    \n-  // XXX - Runtime -> RunTime\n-  public Serializable readValue(InputStream in, int offset, Class clz, String repositoryID, Runtime sender)\n-  {\n-    throw new Error(\"Not implemented for ValueHandler\");\n-  }\n-    \n-  public Serializable writeReplace(Serializable value)\n-  {\n-    throw new Error(\"Not implemented for ValueHandler\");\n-  }\n-    \n-  public void writeValue(OutputStream out, Serializable value)\n-  {\n-    throw new Error(\"Not implemented for ValueHandler\");\n-  }\n-}"}, {"sha": "b5022cab7b391df8625cd97e4583ac580ba47c38", "filename": "libjava/gnu/javax/rmi/PortableServer.java", "status": "removed", "additions": 0, "deletions": 142, "changes": 142, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34eb8991ffc7d23522a2764821e03e0a774a2979/libjava%2Fgnu%2Fjavax%2Frmi%2FPortableServer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34eb8991ffc7d23522a2764821e03e0a774a2979/libjava%2Fgnu%2Fjavax%2Frmi%2FPortableServer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjavax%2Frmi%2FPortableServer.java?ref=34eb8991ffc7d23522a2764821e03e0a774a2979", "patch": "@@ -1,142 +0,0 @@\n-/* PortableServer.java -- \n-   Copyright (C) 2002 Free Software Foundation, Inc.\n-\n-This file is part of GNU Classpath.\n-\n-GNU Classpath is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU Classpath is distributed in the hope that it will be useful, but\n-WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n-General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU Classpath; see the file COPYING.  If not, write to the\n-Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n-02111-1307 USA.\n-\n-Linking this library statically or dynamically with other modules is\n-making a combined work based on this library.  Thus, the terms and\n-conditions of the GNU General Public License cover the whole\n-combination.\n-\n-As a special exception, the copyright holders of this library give you\n-permission to link this library with independent modules to produce an\n-executable, regardless of the license terms of these independent\n-modules, and to copy and distribute the resulting executable under\n-terms of your choice, provided that you also meet, for each linked\n-independent module, the terms and conditions of the license of that\n-module.  An independent module is a module which is not derived from\n-or based on this library.  If you modify this library, you may extend\n-this exception to your version of the library, but you are not\n-obligated to do so.  If you do not wish to do so, delete this\n-exception statement from your version. */\n-\n-\n-package gnu.javax.rmi;\n-\n-import java.util.Hashtable;\n-import java.rmi.Remote;\n-import java.rmi.RemoteException;\n-import java.rmi.NoSuchObjectException;\n-import java.rmi.server.ExportException;\n-import java.rmi.server.UnicastRemoteObject;\n-import java.rmi.server.RemoteStub;\n-import javax.rmi.CORBA.*;\n-//import org.omg.CORBA.portable.ObjectImpl;\n-\n-/**\n- * The relationship of PortableRemoteObjectImpl with PortableServer\n- * is like that of UnicastRemoteObject with UnicastServer\n- */\n-public class PortableServer\n-{\n-  static private Hashtable tieCache = new Hashtable();\n-  static private Object NO_TIE = new Object();\n-    \n-  public static final synchronized void exportObject(Remote obj)\n-    throws RemoteException\n-  {\n-    if(Util.getTie(obj) != null)\n-      return;\n-    \n-    Tie tie = getTieFromRemote(obj);\n-    if (tie != null)\n-      Util.registerTarget(tie, obj);\n-    else\n-      UnicastRemoteObject.exportObject(obj);\n-  }\n-    \n-  public static final void unexportObject(Remote obj)\n-  {\n-    if (Util.getTie(obj) != null)\n-      Util.unexportObject(obj);\n-    if (tieCache.get(obj) != null) //??\n-      tieCache.remove(obj);\n-  }\n-  \n-  public static final Remote toStub(Remote obj)\n-    throws NoSuchObjectException\n-  {\n-    if (obj instanceof Stub || obj instanceof RemoteStub) \n-      return obj;\n-    \n-    Tie tie = Util.getTie(obj);\n-    Remote stub;\n-    if (tie != null)\n-      stub = getStubFromTie(tie);\n-    else\n-      throw new NoSuchObjectException(\"Can't toStub an unexported object\");\n-    return stub;\n-  }\n-    \n-  static synchronized Tie getTieFromRemote(Remote obj)\n-  {\n-    Object tie = tieCache.get(obj);\n-    if (tie == null)\n-      {\n-\ttie = getTieFromClass(obj.getClass());\n-\tif(tie == null)\n-\t  tieCache.put(obj, NO_TIE);\n-\telse\n-\t  tieCache.put(obj, tie);\n-      }\n-    else\n-      if(tie != NO_TIE)\n-\t{\n-\t  try\n-\t    {\n-\t      tie = obj.getClass().newInstance();\n-\t    }\n-\t  catch(Exception _)\n-\t    {\n-\t      tie = null;\n-\t    }\n-\t}\n-      else //NO_TIE\n-\ttie = null;\n-                \n-    return (Tie)tie;\n-  }\n-  \n-  static synchronized Tie getTieFromClass(Class clz)\n-  {\n-    //FIX ME\n-    return null;\n-  }\n-    \n-  public static Remote getStubFromTie(Tie tie)\n-  {\n-    //FIX ME\n-    return null;\n-  }\n-  \n-  public static Remote getStubFromObjectImpl(ObjectImpl objimpl, Class toClass)\n-  {\n-    //FIX ME\n-    return null;\n-  }\n-}"}, {"sha": "36081a47c57bc37f373d7328a67339710812880f", "filename": "libjava/javax/rmi/BAD_OPERATION.java", "status": "removed", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34eb8991ffc7d23522a2764821e03e0a774a2979/libjava%2Fjavax%2Frmi%2FBAD_OPERATION.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34eb8991ffc7d23522a2764821e03e0a774a2979/libjava%2Fjavax%2Frmi%2FBAD_OPERATION.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Frmi%2FBAD_OPERATION.java?ref=34eb8991ffc7d23522a2764821e03e0a774a2979", "patch": "@@ -1,4 +0,0 @@\n-package javax.rmi;\n-\n-/** XXX - Stub till we have org.omg.CORBA */\n-public class BAD_OPERATION extends Exception { }"}, {"sha": "052046df9262b79184767cdba631167cbb2c6e75", "filename": "libjava/javax/rmi/CORBA/ClassDesc.java", "status": "removed", "additions": 0, "deletions": 55, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34eb8991ffc7d23522a2764821e03e0a774a2979/libjava%2Fjavax%2Frmi%2FCORBA%2FClassDesc.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34eb8991ffc7d23522a2764821e03e0a774a2979/libjava%2Fjavax%2Frmi%2FCORBA%2FClassDesc.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Frmi%2FCORBA%2FClassDesc.java?ref=34eb8991ffc7d23522a2764821e03e0a774a2979", "patch": "@@ -1,55 +0,0 @@\n-/* ClassDesc.java -- \n-   Copyright (C) 2002 Free Software Foundation, Inc.\n-\n-This file is part of GNU Classpath.\n-\n-GNU Classpath is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU Classpath is distributed in the hope that it will be useful, but\n-WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n-General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU Classpath; see the file COPYING.  If not, write to the\n-Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n-02111-1307 USA.\n-\n-Linking this library statically or dynamically with other modules is\n-making a combined work based on this library.  Thus, the terms and\n-conditions of the GNU General Public License cover the whole\n-combination.\n-\n-As a special exception, the copyright holders of this library give you\n-permission to link this library with independent modules to produce an\n-executable, regardless of the license terms of these independent\n-modules, and to copy and distribute the resulting executable under\n-terms of your choice, provided that you also meet, for each linked\n-independent module, the terms and conditions of the license of that\n-module.  An independent module is a module which is not derived from\n-or based on this library.  If you modify this library, you may extend\n-this exception to your version of the library, but you are not\n-obligated to do so.  If you do not wish to do so, delete this\n-exception statement from your version. */\n-\n-\n-package javax.rmi.CORBA;\n-\n-import java.io.Serializable;\n-\n-public class ClassDesc\n-  implements Serializable\n-{\n-  /*\n-   * The following is serialized form required by Java API Doc\n-   */\n-  private String repid;\n-  private String codebase;\n-  \n-  public ClassDesc()\n-  {\n-  }\n-}"}, {"sha": "d76d673cedef94e5953106aae2449c921378090e", "filename": "libjava/javax/rmi/CORBA/ObjectImpl.java", "status": "removed", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34eb8991ffc7d23522a2764821e03e0a774a2979/libjava%2Fjavax%2Frmi%2FCORBA%2FObjectImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34eb8991ffc7d23522a2764821e03e0a774a2979/libjava%2Fjavax%2Frmi%2FCORBA%2FObjectImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Frmi%2FCORBA%2FObjectImpl.java?ref=34eb8991ffc7d23522a2764821e03e0a774a2979", "patch": "@@ -1,9 +0,0 @@\n-package javax.rmi.CORBA;\n-\n-/** XXX - Stub till we have org.omg.CORBA */\n-public class ObjectImpl\n-{\n-  public ObjectImpl _orb() { return null; }\n-  public String object_to_string(ObjectImpl o) \n-    throws javax.rmi.BAD_OPERATION { return null; }\n-}"}, {"sha": "7798a46668c8995ce3beb0899f70fe81e4f4d86b", "filename": "libjava/javax/rmi/CORBA/PortableRemoteObjectDelegate.java", "status": "removed", "additions": 0, "deletions": 65, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34eb8991ffc7d23522a2764821e03e0a774a2979/libjava%2Fjavax%2Frmi%2FCORBA%2FPortableRemoteObjectDelegate.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34eb8991ffc7d23522a2764821e03e0a774a2979/libjava%2Fjavax%2Frmi%2FCORBA%2FPortableRemoteObjectDelegate.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Frmi%2FCORBA%2FPortableRemoteObjectDelegate.java?ref=34eb8991ffc7d23522a2764821e03e0a774a2979", "patch": "@@ -1,65 +0,0 @@\n-/* PortableRemoteObjectDelegate.java -- Interface supporting PortableRemoteObject\n-   Copyright (C) 2002, 2004 Free Software Foundation, Inc.\n-\n-This file is part of GNU Classpath.\n-\n-GNU Classpath is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU Classpath is distributed in the hope that it will be useful, but\n-WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n-General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU Classpath; see the file COPYING.  If not, write to the\n-Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n-02111-1307 USA.\n-\n-Linking this library statically or dynamically with other modules is\n-making a combined work based on this library.  Thus, the terms and\n-conditions of the GNU General Public License cover the whole\n-combination.\n-\n-As a special exception, the copyright holders of this library give you\n-permission to link this library with independent modules to produce an\n-executable, regardless of the license terms of these independent\n-modules, and to copy and distribute the resulting executable under\n-terms of your choice, provided that you also meet, for each linked\n-independent module, the terms and conditions of the license of that\n-module.  An independent module is a module which is not derived from\n-or based on this library.  If you modify this library, you may extend\n-this exception to your version of the library, but you are not\n-obligated to do so.  If you do not wish to do so, delete this\n-exception statement from your version. */\n-\n-\n-package javax.rmi.CORBA;\n-\n-import java.rmi.NoSuchObjectException;\n-import java.rmi.Remote;\n-import java.rmi.RemoteException;\n-\n-/**\n- * A delegate is a singleton class that support delegation for method\n- * implementation in PortableRemoteObject.\n- */\n-public interface PortableRemoteObjectDelegate\n-{\n-  void connect(Remote target, Remote source)\n-    throws RemoteException;\n-        \n-  void exportObject(Remote obj)\n-    throws RemoteException;\n-\n-  Object narrow(Object narrowFrom, Class narrowTo)\n-    throws ClassCastException;\n-        \n-  Remote toStub(Remote obj)\n-    throws NoSuchObjectException;\n-  \n-  void unexportObject(Remote obj)\n-    throws NoSuchObjectException;\n-}"}, {"sha": "0ea10c9ee32f16a1681c34e9c79ce6949c230daa", "filename": "libjava/javax/rmi/CORBA/Stub.java", "status": "removed", "additions": 0, "deletions": 118, "changes": 118, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34eb8991ffc7d23522a2764821e03e0a774a2979/libjava%2Fjavax%2Frmi%2FCORBA%2FStub.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34eb8991ffc7d23522a2764821e03e0a774a2979/libjava%2Fjavax%2Frmi%2FCORBA%2FStub.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Frmi%2FCORBA%2FStub.java?ref=34eb8991ffc7d23522a2764821e03e0a774a2979", "patch": "@@ -1,118 +0,0 @@\n-/* Stub.java -- \n-   Copyright (C) 2002, 2004 Free Software Foundation, Inc.\n-\n-This file is part of GNU Classpath.\n-\n-GNU Classpath is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU Classpath is distributed in the hope that it will be useful, but\n-WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n-General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU Classpath; see the file COPYING.  If not, write to the\n-Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n-02111-1307 USA.\n-\n-Linking this library statically or dynamically with other modules is\n-making a combined work based on this library.  Thus, the terms and\n-conditions of the GNU General Public License cover the whole\n-combination.\n-\n-As a special exception, the copyright holders of this library give you\n-permission to link this library with independent modules to produce an\n-executable, regardless of the license terms of these independent\n-modules, and to copy and distribute the resulting executable under\n-terms of your choice, provided that you also meet, for each linked\n-independent module, the terms and conditions of the license of that\n-module.  An independent module is a module which is not derived from\n-or based on this library.  If you modify this library, you may extend\n-this exception to your version of the library, but you are not\n-obligated to do so.  If you do not wish to do so, delete this\n-exception statement from your version. */\n-\n-\n-package javax.rmi.CORBA;\n-\n-import gnu.javax.rmi.CORBA.DelegateFactory;\n-import gnu.javax.rmi.CORBA.GetDelegateInstanceException;\n-\n-import java.io.IOException;\n-import java.io.ObjectInputStream;\n-import java.io.ObjectOutputStream;\n-import java.io.Serializable;\n-import java.rmi.RemoteException;\n-\n-public abstract class Stub extends ObjectImpl\n-  implements Serializable\n-{\n-  private transient StubDelegate delegate;\n-                \n-  protected Stub()\n-  {\n-    try\n-      {\n-\tdelegate = (StubDelegate)DelegateFactory.getInstance(\"Stub\");\n-      }\n-    catch(GetDelegateInstanceException e)\n-      {\n-\tdelegate = null;\n-      }\n-  }\n-\n-  public int hashCode()\n-  {\n-    if(delegate != null)\n-      return delegate.hashCode(this);\n-    else\n-      return 0;\n-  }\n-\n-  public boolean equals(Object obj)\n-  {\n-    if(delegate != null)\n-      return delegate.equals(this, obj);\n-    else\n-      return false;\n-  }\n-\n-  public String toString()\n-  {\n-    String s = null;\n-    if(delegate != null)\n-      s = delegate.toString(this);\n-    if(s == null)\n-      s = super.toString();\n-    return s;\n-  }\n-\n-  // XXX javax.rmi.ORB -> org.omg.CORBA.ORB\n-  public void connect(javax.rmi.ORB orb)\n-    throws RemoteException\n-  {\n-    if(delegate != null)\n-      delegate.connect(this, orb);\n-  }\n-\n-  /**\n-   * The following two routines are required by serialized form of Java API doc.\n-   */\n-  private void readObject(ObjectInputStream stream)\n-    throws IOException, ClassNotFoundException\n-  {\n-    if(delegate != null)\n-      delegate.readObject(this, stream);\n-  }\n-\n-  private void writeObject(ObjectOutputStream stream)\n-    throws IOException\n-  {\n-    if(delegate != null)\n-      delegate.writeObject(this, stream);\n-  }\n-\n-}"}, {"sha": "6c7f69fe7dcd94bf90ef6a5d3a9884513b83022d", "filename": "libjava/javax/rmi/CORBA/StubDelegate.java", "status": "removed", "additions": 0, "deletions": 65, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34eb8991ffc7d23522a2764821e03e0a774a2979/libjava%2Fjavax%2Frmi%2FCORBA%2FStubDelegate.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34eb8991ffc7d23522a2764821e03e0a774a2979/libjava%2Fjavax%2Frmi%2FCORBA%2FStubDelegate.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Frmi%2FCORBA%2FStubDelegate.java?ref=34eb8991ffc7d23522a2764821e03e0a774a2979", "patch": "@@ -1,65 +0,0 @@\n-/* StubDelegate.java -- \n-   Copyright (C) 2002 Free Software Foundation, Inc.\n-\n-This file is part of GNU Classpath.\n-\n-GNU Classpath is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU Classpath is distributed in the hope that it will be useful, but\n-WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n-General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU Classpath; see the file COPYING.  If not, write to the\n-Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n-02111-1307 USA.\n-\n-Linking this library statically or dynamically with other modules is\n-making a combined work based on this library.  Thus, the terms and\n-conditions of the GNU General Public License cover the whole\n-combination.\n-\n-As a special exception, the copyright holders of this library give you\n-permission to link this library with independent modules to produce an\n-executable, regardless of the license terms of these independent\n-modules, and to copy and distribute the resulting executable under\n-terms of your choice, provided that you also meet, for each linked\n-independent module, the terms and conditions of the license of that\n-module.  An independent module is a module which is not derived from\n-or based on this library.  If you modify this library, you may extend\n-this exception to your version of the library, but you are not\n-obligated to do so.  If you do not wish to do so, delete this\n-exception statement from your version. */\n-\n-\n-package javax.rmi.CORBA;\n-\n-import java.io.IOException;\n-import java.io.ObjectInputStream;\n-import java.io.ObjectOutputStream;\n-import java.rmi.RemoteException;\n-//import org.omg.CORBA.ORB;\n-\n-public interface StubDelegate\n-{\n-\n-  // XXX javax.rmi.ORB -> org.omg.CORBA.ORB\n-  void connect(Stub self, javax.rmi.ORB orb)\n-    throws RemoteException;\n-\n-  boolean equals(Stub self, Object obj);\n-\n-  int hashCode(Stub self);\n-\n-  void readObject(Stub self, ObjectInputStream s)\n-    throws IOException, ClassNotFoundException;\n-\n-  String toString(Stub self);\n-\n-  void writeObject(Stub self, ObjectOutputStream s)\n-    throws IOException;\n-}"}, {"sha": "f8afdc35e35e68e77e90a87c69ee761782018db4", "filename": "libjava/javax/rmi/CORBA/SystemException.java", "status": "removed", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34eb8991ffc7d23522a2764821e03e0a774a2979/libjava%2Fjavax%2Frmi%2FCORBA%2FSystemException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34eb8991ffc7d23522a2764821e03e0a774a2979/libjava%2Fjavax%2Frmi%2FCORBA%2FSystemException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Frmi%2FCORBA%2FSystemException.java?ref=34eb8991ffc7d23522a2764821e03e0a774a2979", "patch": "@@ -1,4 +0,0 @@\n-package javax.rmi.CORBA;\n-\n-/** XXX - Stub till we have org.omg.CORBA */\n-public class SystemException extends Exception { }"}, {"sha": "ca14e3d42360387af26056122704c7df6acfbdc2", "filename": "libjava/javax/rmi/CORBA/Tie.java", "status": "removed", "additions": 0, "deletions": 62, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34eb8991ffc7d23522a2764821e03e0a774a2979/libjava%2Fjavax%2Frmi%2FCORBA%2FTie.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34eb8991ffc7d23522a2764821e03e0a774a2979/libjava%2Fjavax%2Frmi%2FCORBA%2FTie.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Frmi%2FCORBA%2FTie.java?ref=34eb8991ffc7d23522a2764821e03e0a774a2979", "patch": "@@ -1,62 +0,0 @@\n-/* Tie.java -- \n-   Copyright (C) 2002 Free Software Foundation, Inc.\n-\n-This file is part of GNU Classpath.\n-\n-GNU Classpath is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU Classpath is distributed in the hope that it will be useful, but\n-WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n-General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU Classpath; see the file COPYING.  If not, write to the\n-Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n-02111-1307 USA.\n-\n-Linking this library statically or dynamically with other modules is\n-making a combined work based on this library.  Thus, the terms and\n-conditions of the GNU General Public License cover the whole\n-combination.\n-\n-As a special exception, the copyright holders of this library give you\n-permission to link this library with independent modules to produce an\n-executable, regardless of the license terms of these independent\n-modules, and to copy and distribute the resulting executable under\n-terms of your choice, provided that you also meet, for each linked\n-independent module, the terms and conditions of the license of that\n-module.  An independent module is a module which is not derived from\n-or based on this library.  If you modify this library, you may extend\n-this exception to your version of the library, but you are not\n-obligated to do so.  If you do not wish to do so, delete this\n-exception statement from your version. */\n-\n-\n-package javax.rmi.CORBA;\n-\n-import java.rmi.Remote;\n-//import org.omg.CORBA.ORB;\n-//import org.omg.CORBA.portable.InvokeHandler;\n-\n-public interface Tie // XXX extends InvokeHandler\n-{\n-    \n-  void deactivate();\n-\n-  Remote getTarget();\n-\n-  // XXX javax.rmi.ORB -> org.omg.CORBA.ORB\n-  javax.rmi.ORB orb();\n-  \n-  // XXX javax.rmi.ORB -> org.omg.CORBA.ORB\n-  void orb(javax.rmi.ORB orb);\n-  \n-  void setTarget(Remote target);\n- \n-  // XXX Object -> org.omg.CORBA.Object\n-  Object thisObject();\n-}"}, {"sha": "34e05dafda2dea7241dd85615b1a5bb9fc7817d2", "filename": "libjava/javax/rmi/CORBA/Util.java", "status": "removed", "additions": 0, "deletions": 185, "changes": 185, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34eb8991ffc7d23522a2764821e03e0a774a2979/libjava%2Fjavax%2Frmi%2FCORBA%2FUtil.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34eb8991ffc7d23522a2764821e03e0a774a2979/libjava%2Fjavax%2Frmi%2FCORBA%2FUtil.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Frmi%2FCORBA%2FUtil.java?ref=34eb8991ffc7d23522a2764821e03e0a774a2979", "patch": "@@ -1,185 +0,0 @@\n-/* Util.java -- \n-   Copyright (C) 2002, 2004 Free Software Foundation, Inc.\n-\n-This file is part of GNU Classpath.\n-\n-GNU Classpath is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU Classpath is distributed in the hope that it will be useful, but\n-WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n-General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU Classpath; see the file COPYING.  If not, write to the\n-Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n-02111-1307 USA.\n-\n-Linking this library statically or dynamically with other modules is\n-making a combined work based on this library.  Thus, the terms and\n-conditions of the GNU General Public License cover the whole\n-combination.\n-\n-As a special exception, the copyright holders of this library give you\n-permission to link this library with independent modules to produce an\n-executable, regardless of the license terms of these independent\n-modules, and to copy and distribute the resulting executable under\n-terms of your choice, provided that you also meet, for each linked\n-independent module, the terms and conditions of the license of that\n-module.  An independent module is a module which is not derived from\n-or based on this library.  If you modify this library, you may extend\n-this exception to your version of the library, but you are not\n-obligated to do so.  If you do not wish to do so, delete this\n-exception statement from your version. */\n-\n-\n-package javax.rmi.CORBA;\n-\n-import gnu.javax.rmi.CORBA.DelegateFactory;\n-import gnu.javax.rmi.CORBA.GetDelegateInstanceException;\n-\n-import java.io.InputStream;\n-import java.io.OutputStream;\n-import java.rmi.Remote;\n-import java.rmi.RemoteException;\n-\n-public class Util\n-{\n-\n-  private static UtilDelegate delegate;\n-  static\n-  {\n-    try\n-      {\n-\tdelegate = (UtilDelegate)DelegateFactory.getInstance(\"Util\");\n-      }\n-    catch(GetDelegateInstanceException e)\n-      {\n-\tdelegate = null;\n-      }\n-  }\n-\n-  private Util()\n-  {\n-  }\n-\n-  // XXX - javax.rmi.ORB -> org.omg.CORBA.ORB\n-  public static Object copyObject(Object obj, javax.rmi.ORB orb)\n-    throws RemoteException\n-  {\n-    if(delegate != null)\n-      return delegate.copyObject(obj, orb);\n-    else\n-      return null;\n-  }\n-\n-  // XXX - javax.rmi.ORB -> org.omg.CORBA.ORB\n-  public static Object[] copyObjects(Object obj[], javax.rmi.ORB orb)\n-    throws RemoteException\n-  {\n-    if(delegate != null)\n-      return delegate.copyObjects(obj, orb);\n-    else\n-      return null;\n-  }\n-    \n-  public static ValueHandler createValueHandler()\n-  {\n-    if(delegate != null)\n-      return delegate.createValueHandler();\n-    else\n-      return null;\n-  }\n-    \n-  public static String getCodebase(Class clz)\n-  {\n-    if(delegate != null)\n-      return delegate.getCodebase(clz);\n-    else\n-      return null;\n-  }\n-    \n-  public static Tie getTie(Remote target)\n-  {\n-    if(delegate != null)\n-      return delegate.getTie(target);\n-    else\n-      return null;\n-  }\n-\n-  public static boolean isLocal(Stub stub)\n-    throws RemoteException\n-  {\n-    if(delegate != null)\n-      return delegate.isLocal(stub);\n-    else\n-      return false;\n-  }\n-\n-  public static Class loadClass(String className, String remoteCodebase, ClassLoader loader)\n-    throws ClassNotFoundException\n-  {\n-    if(delegate != null)\n-      return delegate.loadClass(className, remoteCodebase, loader);\n-    else\n-      throw new ClassNotFoundException(className + \": delegate == null\");\n-  }\n-    \n-  public static RemoteException mapSystemException(SystemException ex)\n-  {\n-    if(delegate != null)\n-      return delegate.mapSystemException(ex);\n-    else\n-      return null;\n-  }\n-\n-  public static Object readAny(InputStream in)\n-  {\n-    if(delegate != null)\n-      return delegate.readAny(in);\n-    else\n-      return null;\n-  }\n-\n-  public static void registerTarget(Tie tie, Remote target)\n-  {\n-    if(delegate != null)\n-      delegate.registerTarget(tie, target);\n-  }\n-    \n-  public static void unexportObject(Remote target)\n-  {\n-    if(delegate != null)\n-      delegate.unexportObject(target);\n-  }\n-    \n-  public static RemoteException wrapException(Throwable orig)\n-  {\n-    if(delegate != null)\n-      return delegate.wrapException(orig);\n-    else\n-      return null;\n-  }\n-    \n-  public static void writeAbstractObject(OutputStream out, Object obj)\n-  {\n-    if(delegate != null)\n-      delegate.writeAbstractObject(out, obj);\n-  }\n-    \n-  public static void writeAny(OutputStream out, Object obj)\n-  {\n-    if(delegate != null)\n-      delegate.writeAny(out, obj);\n-  }\n-    \n-  public static void writeRemoteObject(OutputStream out, Object obj)\n-  {\n-    if(delegate != null)\n-      delegate.writeRemoteObject(out, obj);\n-  }\n-\n-}"}, {"sha": "fac60d54236a98054fa1f73520b2030486f7b867", "filename": "libjava/javax/rmi/CORBA/UtilDelegate.java", "status": "removed", "additions": 0, "deletions": 85, "changes": 85, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34eb8991ffc7d23522a2764821e03e0a774a2979/libjava%2Fjavax%2Frmi%2FCORBA%2FUtilDelegate.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34eb8991ffc7d23522a2764821e03e0a774a2979/libjava%2Fjavax%2Frmi%2FCORBA%2FUtilDelegate.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Frmi%2FCORBA%2FUtilDelegate.java?ref=34eb8991ffc7d23522a2764821e03e0a774a2979", "patch": "@@ -1,85 +0,0 @@\n-/* UtilDelegate.java -- \n-   Copyright (C) 2002 Free Software Foundation, Inc.\n-\n-This file is part of GNU Classpath.\n-\n-GNU Classpath is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU Classpath is distributed in the hope that it will be useful, but\n-WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n-General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU Classpath; see the file COPYING.  If not, write to the\n-Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n-02111-1307 USA.\n-\n-Linking this library statically or dynamically with other modules is\n-making a combined work based on this library.  Thus, the terms and\n-conditions of the GNU General Public License cover the whole\n-combination.\n-\n-As a special exception, the copyright holders of this library give you\n-permission to link this library with independent modules to produce an\n-executable, regardless of the license terms of these independent\n-modules, and to copy and distribute the resulting executable under\n-terms of your choice, provided that you also meet, for each linked\n-independent module, the terms and conditions of the license of that\n-module.  An independent module is a module which is not derived from\n-or based on this library.  If you modify this library, you may extend\n-this exception to your version of the library, but you are not\n-obligated to do so.  If you do not wish to do so, delete this\n-exception statement from your version. */\n-\n-\n-package javax.rmi.CORBA;\n-\n-import java.io.InputStream;\n-import java.io.OutputStream;\n-import java.rmi.Remote;\n-import java.rmi.RemoteException;\n-//import org.omg.CORBA.ORB;\n-//import org.omg.CORBA.SystemException;\n-//import org.omg.CORBA.portable.InputStream;\n-//import org.omg.CORBA.portable.OutputStream;\n-\n-public interface UtilDelegate\n-{\n-\n-  // XXX javax.rmi.ORB -> org.omg.CORBA.ORB\n-  Object copyObject(Object obj, javax.rmi.ORB orb) throws RemoteException;\n-  \n-  // XXX javax.rmi.ORB -> org.omg.CORBA.ORB\n-  Object[] copyObjects(Object obj[], javax.rmi.ORB orb) throws RemoteException;\n-\n-  ValueHandler createValueHandler();\n-    \n-  String getCodebase(Class clz);\n-    \n-  Tie getTie(Remote target);\n-    \n-  boolean isLocal(Stub stub) throws RemoteException;\n-\n-  Class loadClass(String className, String remoteCodebase,\n-\t\t  ClassLoader loader) throws ClassNotFoundException;\n-\n-  RemoteException mapSystemException(SystemException ex);\n-\n-  Object readAny(InputStream in);\n-\n-  void registerTarget(Tie tie, Remote target);\n-    \n-  void unexportObject(Remote target);\n-    \n-  RemoteException wrapException(Throwable orig);\n-    \n-  void writeAbstractObject(OutputStream out, Object obj);\n-    \n-  void writeAny(OutputStream out, Object obj);\n-\n-  void writeRemoteObject(OutputStream out, Object obj);\n-}"}, {"sha": "fe98002219100bf734f59e49ca1f162e975f10e9", "filename": "libjava/javax/rmi/CORBA/ValueHandler.java", "status": "removed", "additions": 0, "deletions": 65, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34eb8991ffc7d23522a2764821e03e0a774a2979/libjava%2Fjavax%2Frmi%2FCORBA%2FValueHandler.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34eb8991ffc7d23522a2764821e03e0a774a2979/libjava%2Fjavax%2Frmi%2FCORBA%2FValueHandler.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Frmi%2FCORBA%2FValueHandler.java?ref=34eb8991ffc7d23522a2764821e03e0a774a2979", "patch": "@@ -1,65 +0,0 @@\n-/* ValueHandler.java -- \n-   Copyright (C) 2002, 2004 Free Software Foundation, Inc.\n-\n-This file is part of GNU Classpath.\n-\n-GNU Classpath is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU Classpath is distributed in the hope that it will be useful, but\n-WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n-General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU Classpath; see the file COPYING.  If not, write to the\n-Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n-02111-1307 USA.\n-\n-Linking this library statically or dynamically with other modules is\n-making a combined work based on this library.  Thus, the terms and\n-conditions of the GNU General Public License cover the whole\n-combination.\n-\n-As a special exception, the copyright holders of this library give you\n-permission to link this library with independent modules to produce an\n-executable, regardless of the license terms of these independent\n-modules, and to copy and distribute the resulting executable under\n-terms of your choice, provided that you also meet, for each linked\n-independent module, the terms and conditions of the license of that\n-module.  An independent module is a module which is not derived from\n-or based on this library.  If you modify this library, you may extend\n-this exception to your version of the library, but you are not\n-obligated to do so.  If you do not wish to do so, delete this\n-exception statement from your version. */\n-\n-\n-package javax.rmi.CORBA;\n-\n-import java.io.InputStream;\n-import java.io.OutputStream;\n-import java.io.Serializable;\n-//import org.omg.CORBA.portable.InputStream;\n-//import org.omg.CORBA.portable.OutputStream;\n-//import org.omg.SendingContext.RunTime;\n-\n-public interface ValueHandler\n-{\n-  \n-  String getRMIRepositoryID(Class clz);\n- \n-  // XXX Runtime -> RunTime\n-  Runtime getRunTimeCodeBase();\n-  \n-  boolean isCustomMarshaled(Class clz);\n-  \n-  // XXX Runtime -> RunTime\n-  Serializable readValue(InputStream in, int offset, Class clz,\n-\t\t\t String repositoryID, Runtime sender);\n-    \n-  Serializable writeReplace(Serializable value);\n-    \n-  void writeValue(OutputStream out, Serializable value);\n-}"}, {"sha": "be7a894e65af353c53162e7b3878bb225607b3be", "filename": "libjava/javax/rmi/ORB.java", "status": "removed", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34eb8991ffc7d23522a2764821e03e0a774a2979/libjava%2Fjavax%2Frmi%2FORB.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34eb8991ffc7d23522a2764821e03e0a774a2979/libjava%2Fjavax%2Frmi%2FORB.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Frmi%2FORB.java?ref=34eb8991ffc7d23522a2764821e03e0a774a2979", "patch": "@@ -1,4 +0,0 @@\n-package javax.rmi;\n-\n-/** XXX - Stub till we have org.omg.CORBA */\n-public class ORB { }"}, {"sha": "f95dafd6b839d47c4b7368541f9dd7c7679d2fc3", "filename": "libjava/javax/rmi/PortableRemoteObject.java", "status": "removed", "additions": 0, "deletions": 115, "changes": 115, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34eb8991ffc7d23522a2764821e03e0a774a2979/libjava%2Fjavax%2Frmi%2FPortableRemoteObject.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34eb8991ffc7d23522a2764821e03e0a774a2979/libjava%2Fjavax%2Frmi%2FPortableRemoteObject.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Frmi%2FPortableRemoteObject.java?ref=34eb8991ffc7d23522a2764821e03e0a774a2979", "patch": "@@ -1,115 +0,0 @@\n-/* PortableRemoteObject.java -- \n-   Copyright (C) 2002, 2004 Free Software Foundation, Inc.\n-\n-This file is part of GNU Classpath.\n-\n-GNU Classpath is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU Classpath is distributed in the hope that it will be useful, but\n-WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n-General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU Classpath; see the file COPYING.  If not, write to the\n-Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n-02111-1307 USA.\n-\n-Linking this library statically or dynamically with other modules is\n-making a combined work based on this library.  Thus, the terms and\n-conditions of the GNU General Public License cover the whole\n-combination.\n-\n-As a special exception, the copyright holders of this library give you\n-permission to link this library with independent modules to produce an\n-executable, regardless of the license terms of these independent\n-modules, and to copy and distribute the resulting executable under\n-terms of your choice, provided that you also meet, for each linked\n-independent module, the terms and conditions of the license of that\n-module.  An independent module is a module which is not derived from\n-or based on this library.  If you modify this library, you may extend\n-this exception to your version of the library, but you are not\n-obligated to do so.  If you do not wish to do so, delete this\n-exception statement from your version. */\n-\n-\n-package javax.rmi;\n-\n-import gnu.javax.rmi.CORBA.DelegateFactory;\n-import gnu.javax.rmi.CORBA.GetDelegateInstanceException;\n-\n-import java.rmi.NoSuchObjectException;\n-import java.rmi.Remote;\n-import java.rmi.RemoteException;\n-\n-import javax.rmi.CORBA.PortableRemoteObjectDelegate;\n-\n-public class PortableRemoteObject\n-  implements Remote /* why doc doesn't say should implement Remote */\n-{\n-\n-  private static PortableRemoteObjectDelegate delegate;\n-  static\n-  {\n-    try\n-      {\n-\tdelegate = (PortableRemoteObjectDelegate)DelegateFactory.getInstance\n-\t  (\"PortableRemoteObject\");\n-      }\n-    catch(GetDelegateInstanceException e)\n-      {\n-\te.printStackTrace();\n-\tdelegate = null;\n-      }\n-  }\n-\n-  protected PortableRemoteObject()\n-    throws RemoteException\n-  {\n-    if(delegate != null)\n-      exportObject((Remote)this);\n-  }\n-\n-  public static void connect(Remote target, Remote source)\n-    throws RemoteException\n-  {\n-    if(delegate != null)\n-      delegate.connect(target, source);\n-  }\n-    \n-  public static void exportObject(Remote obj)\n-    throws RemoteException\n-  {\n-    if(delegate != null)\n-      delegate.exportObject(obj);\n-  }\n-\n-  public static Object narrow(Object narrowFrom, Class narrowTo)\n-    throws ClassCastException\n-  {\n-    if(delegate != null)\n-      return delegate.narrow(narrowFrom, narrowTo);\n-    else\n-      return null;\n-  }\n-\n-  public static Remote toStub(Remote obj)\n-    throws NoSuchObjectException\n-  {\n-    if(delegate != null)\n-      return delegate.toStub(obj);\n-    else\n-      return null;\n-  }\n-\n-  public static void unexportObject(Remote obj)\n-    throws NoSuchObjectException\n-  {\n-    if(delegate != null)\n-      delegate.unexportObject(obj);\n-  }\n-  \n-}"}]}