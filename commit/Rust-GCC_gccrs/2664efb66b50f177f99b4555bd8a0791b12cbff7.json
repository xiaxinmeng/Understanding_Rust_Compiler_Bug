{"sha": "2664efb66b50f177f99b4555bd8a0791b12cbff7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjY2NGVmYjY2YjUwZjE3N2Y5OWI0NTU1YmQ4YTA3OTFiMTJjYmZmNw==", "commit": {"author": {"name": "Zdenek Dvorak", "email": "dvorakz@suse.cz", "date": "2007-05-31T16:27:05Z"}, "committer": {"name": "Zdenek Dvorak", "email": "rakdver@gcc.gnu.org", "date": "2007-05-31T16:27:05Z"}, "message": "re PR tree-optimization/32160 (ICE with -O3 in verify_ssa)\n\n\tPR tree-optimization/32160\n\t* tree-predcom.c (predcom_tmp_var): New function.  Mark created\n\tvariable as gimple reg.\n\t(initialize_root_vars, initialize_root_vars_lm): Use predcom_tmp_var.\n\n\t* gfortran.dg/predcom-1.f: New test.\n\nFrom-SVN: r125228", "tree": {"sha": "1bb95f0a0a18307404f6edf4de9051bbc9ee0f05", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1bb95f0a0a18307404f6edf4de9051bbc9ee0f05"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2664efb66b50f177f99b4555bd8a0791b12cbff7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2664efb66b50f177f99b4555bd8a0791b12cbff7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2664efb66b50f177f99b4555bd8a0791b12cbff7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2664efb66b50f177f99b4555bd8a0791b12cbff7/comments", "author": null, "committer": null, "parents": [{"sha": "01e4dd0dad070ccae1c2f0e2873f41ded5ca1595", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01e4dd0dad070ccae1c2f0e2873f41ded5ca1595", "html_url": "https://github.com/Rust-GCC/gccrs/commit/01e4dd0dad070ccae1c2f0e2873f41ded5ca1595"}], "stats": {"total": 56, "additions": 50, "deletions": 6}, "files": [{"sha": "64f97946581eef12890e6a90b25e6c783c6a98c6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2664efb66b50f177f99b4555bd8a0791b12cbff7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2664efb66b50f177f99b4555bd8a0791b12cbff7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2664efb66b50f177f99b4555bd8a0791b12cbff7", "patch": "@@ -1,3 +1,10 @@\n+2007-05-31  Zdenek Dvorak  <dvorakz@suse.cz>\n+\n+\tPR tree-optimization/32160\n+\t* tree-predcom.c (predcom_tmp_var): New function.  Mark created\n+\tvariable as gimple reg.\n+\t(initialize_root_vars, initialize_root_vars_lm): Use predcom_tmp_var.\n+\n 2007-05-31  Kazu Hirata  <kazu@codesourcery.com>\n \n \t* gcc.c (main): Don't consider linker options when issuing the"}, {"sha": "86e6766ed6159eaa2d07cb7f6943696fdcb720eb", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2664efb66b50f177f99b4555bd8a0791b12cbff7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2664efb66b50f177f99b4555bd8a0791b12cbff7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2664efb66b50f177f99b4555bd8a0791b12cbff7", "patch": "@@ -1,3 +1,8 @@\n+2007-05-31  Zdenek Dvorak  <dvorakz@suse.cz>\n+\n+\tPR tree-optimization/32160\n+\t* gfortran.dg/predcom-1.f: New test.\n+\n 2007-05-31  Richard Guenther  <rguenther@suse.de>\n \n \t* g++.dg/other/str_empty.C: Move..."}, {"sha": "1cc0bf24bad88931296164436ae7d69b2417f800", "filename": "gcc/testsuite/gfortran.dg/predcom-1.f", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2664efb66b50f177f99b4555bd8a0791b12cbff7/gcc%2Ftestsuite%2Fgfortran.dg%2Fpredcom-1.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2664efb66b50f177f99b4555bd8a0791b12cbff7/gcc%2Ftestsuite%2Fgfortran.dg%2Fpredcom-1.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpredcom-1.f?ref=2664efb66b50f177f99b4555bd8a0791b12cbff7", "patch": "@@ -0,0 +1,16 @@\n+! PR 32160, complex temporary variables were not marked as gimple registers\n+! { dg-do compile }\n+! { dg-options \"-O3\" }\n+\n+      REAL             FUNCTION CLANHT( N, E )\n+      INTEGER            N\n+      COMPLEX            E( * )\n+      INTEGER            I\n+      REAL               ANORM\n+      INTRINSIC          ABS\n+            DO 20 I = 1, N\n+               ANORM = ANORM +ABS( E( I ) )+ ABS( E( I-1 ) )\n+   20       CONTINUE\n+      CLANHT = ANORM\n+      RETURN\n+      END"}, {"sha": "b5c82923ee2371ac2a2a5c2711f3ee0b9a1aa42a", "filename": "gcc/tree-predcom.c", "status": "modified", "additions": 22, "deletions": 6, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2664efb66b50f177f99b4555bd8a0791b12cbff7/gcc%2Ftree-predcom.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2664efb66b50f177f99b4555bd8a0791b12cbff7/gcc%2Ftree-predcom.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-predcom.c?ref=2664efb66b50f177f99b4555bd8a0791b12cbff7", "patch": "@@ -1401,6 +1401,26 @@ mark_virtual_ops_for_renaming_list (tree list)\n     mark_virtual_ops_for_renaming (tsi_stmt (tsi));\n }\n \n+/* Returns a new temporary variable used for the I-th variable carrying\n+   value of REF.  The variable's uid is marked in TMP_VARS.  */\n+\n+static tree\n+predcom_tmp_var (tree ref, unsigned i, bitmap tmp_vars)\n+{\n+  tree type = TREE_TYPE (ref);\n+  tree var = create_tmp_var (type, get_lsm_tmp_name (ref, i));\n+\n+  /* We never access the components of the temporary variable in predictive\n+     commoning.  */\n+  if (TREE_CODE (type) == COMPLEX_TYPE\n+      || TREE_CODE (type) == VECTOR_TYPE)\n+    DECL_GIMPLE_REG_P (var) = 1;\n+\n+  add_referenced_var (var);\n+  bitmap_set_bit (tmp_vars, DECL_UID (var));\n+  return var;\n+}\n+\n /* Creates the variables for CHAIN, as well as phi nodes for them and\n    initialization on entry to LOOP.  Uids of the newly created\n    temporary variables are marked in TMP_VARS.  */\n@@ -1429,9 +1449,7 @@ initialize_root_vars (struct loop *loop, chain_p chain, bitmap tmp_vars)\n \n   for (i = 0; i < n + (reuse_first ? 0 : 1); i++)\n     {\n-      var = create_tmp_var (TREE_TYPE (ref), get_lsm_tmp_name (ref, i));\n-      add_referenced_var (var);\n-      bitmap_set_bit (tmp_vars, DECL_UID (var));\n+      var = predcom_tmp_var (ref, i, tmp_vars);\n       VEC_quick_push (tree, chain->vars, var);\n     }\n   if (reuse_first)\n@@ -1499,9 +1517,7 @@ initialize_root_vars_lm (struct loop *loop, dref root, bool written,\n   init = VEC_index (tree, inits, 0);\n \n   *vars = VEC_alloc (tree, heap, written ? 2 : 1);\n-  var = create_tmp_var (TREE_TYPE (ref), get_lsm_tmp_name (ref, 0));\n-  add_referenced_var (var);\n-  bitmap_set_bit (tmp_vars, DECL_UID (var));\n+  var = predcom_tmp_var (ref, 0, tmp_vars);\n   VEC_quick_push (tree, *vars, var);\n   if (written)\n     VEC_quick_push (tree, *vars, VEC_index (tree, *vars, 0));"}]}