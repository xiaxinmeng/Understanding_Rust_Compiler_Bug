{"sha": "d014a712e039ee0068b8b11a4c78a09e0c26454b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDAxNGE3MTJlMDM5ZWUwMDY4YjhiMTFhNGM3OGEwOWUwYzI2NDU0Yg==", "commit": {"author": {"name": "Patrick Palka", "email": "ppalka@gcc.gnu.org", "date": "2016-03-30T00:55:00Z"}, "committer": {"name": "Patrick Palka", "email": "ppalka@gcc.gnu.org", "date": "2016-03-30T00:55:00Z"}, "message": "PR tree-optimization/59124 (bogus -Warray-bounds warning)\n\ngcc/ChangeLog:\n\n\tPR tree-optimization/59124\n\t* tree-vrp.c (register_edge_assert_for_2): For NAME != CST1\n\twhere NAME = A +- CST2 add the assertion A != (CST1 -+ CST2).\n\ngcc/testsuite/ChangeLog:\n\n\tPR tree-optimization/59124\n\t* gcc.dg/Warray-bounds-19.c: New test.\n\nFrom-SVN: r234544", "tree": {"sha": "c62d92a46009aa3e890d1bcfa8cb3f9dc035396b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c62d92a46009aa3e890d1bcfa8cb3f9dc035396b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d014a712e039ee0068b8b11a4c78a09e0c26454b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d014a712e039ee0068b8b11a4c78a09e0c26454b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d014a712e039ee0068b8b11a4c78a09e0c26454b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d014a712e039ee0068b8b11a4c78a09e0c26454b/comments", "author": null, "committer": null, "parents": [{"sha": "3c258984f4ecbe279b224a03f1c135ae4fa65c40", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c258984f4ecbe279b224a03f1c135ae4fa65c40", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c258984f4ecbe279b224a03f1c135ae4fa65c40"}], "stats": {"total": 49, "additions": 49, "deletions": 0}, "files": [{"sha": "af1b6c2a56ee43ebcf71f8d442aaaf2e146adf4c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d014a712e039ee0068b8b11a4c78a09e0c26454b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d014a712e039ee0068b8b11a4c78a09e0c26454b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d014a712e039ee0068b8b11a4c78a09e0c26454b", "patch": "@@ -1,3 +1,9 @@\n+2016-03-30  Patrick Palka  <ppalka@gcc.gnu.org>\n+\n+\tPR tree-optimization/59124\n+\t* tree-vrp.c (register_edge_assert_for_2): For NAME != CST1\n+\twhere NAME = A +- CST2 add the assertion A != (CST1 -+ CST2).\n+\n 2016-03-29  Jeff Law  <law@redhat.com>\n \n \t* tree-ssa-coalesce.c (struct ssa_conflicts): Fix typo in"}, {"sha": "2d0ecdab899025dde6afd5a5e0f0e691dda47748", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d014a712e039ee0068b8b11a4c78a09e0c26454b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d014a712e039ee0068b8b11a4c78a09e0c26454b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d014a712e039ee0068b8b11a4c78a09e0c26454b", "patch": "@@ -1,3 +1,8 @@\n+2016-03-30  Patrick Palka  <ppalka@gcc.gnu.org>\n+\n+\tPR tree-optimization/59124\n+\t* gcc.dg/Warray-bounds-19.c: New test.\n+\n 2016-03-29  Zachary T Welch <zwelch@codesourcery.com>\n \n \t* lib/prune.exp (escape_regex_chars): New."}, {"sha": "e2f9661cde3646a11746a2464437b9c7c9a34788", "filename": "gcc/testsuite/gcc.dg/Warray-bounds-19.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d014a712e039ee0068b8b11a4c78a09e0c26454b/gcc%2Ftestsuite%2Fgcc.dg%2FWarray-bounds-19.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d014a712e039ee0068b8b11a4c78a09e0c26454b/gcc%2Ftestsuite%2Fgcc.dg%2FWarray-bounds-19.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWarray-bounds-19.c?ref=d014a712e039ee0068b8b11a4c78a09e0c26454b", "patch": "@@ -0,0 +1,17 @@\n+/* PR tree-optimization/59124 */\n+/* { dg-options \"-O3 -Warray-bounds\" } */\n+\n+unsigned baz[6];\n+\n+void foo(unsigned *bar, unsigned n)\n+{\n+  unsigned i, j;\n+\n+  if (n > 6)\n+    n = 6;\n+\n+  for (i = 1; i < n; i++)\n+    for (j = i - 1; j > 0; j--)\n+      bar[j - 1] = baz[j - 1];\n+}\n+"}, {"sha": "bbdf9ce28eb189505c74e65114856e4952753682", "filename": "gcc/tree-vrp.c", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d014a712e039ee0068b8b11a4c78a09e0c26454b/gcc%2Ftree-vrp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d014a712e039ee0068b8b11a4c78a09e0c26454b/gcc%2Ftree-vrp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vrp.c?ref=d014a712e039ee0068b8b11a4c78a09e0c26454b", "patch": "@@ -5310,6 +5310,27 @@ register_edge_assert_for_2 (tree name, edge e, gimple_stmt_iterator bsi,\n       if (is_gimple_assign (def_stmt))\n \trhs_code = gimple_assign_rhs_code (def_stmt);\n \n+      /* In the case of NAME != CST1 where NAME = A +- CST2 we can\n+         assert that A != CST1 -+ CST2.  */\n+      if ((comp_code == EQ_EXPR || comp_code == NE_EXPR)\n+\t  && (rhs_code == PLUS_EXPR || rhs_code == MINUS_EXPR))\n+\t{\n+\t  tree op0 = gimple_assign_rhs1 (def_stmt);\n+\t  tree op1 = gimple_assign_rhs2 (def_stmt);\n+\t  if (TREE_CODE (op0) == SSA_NAME\n+\t      && TREE_CODE (op1) == INTEGER_CST\n+\t      && live_on_edge (e, op0)\n+\t      && !has_single_use (op0))\n+\t    {\n+\t      enum tree_code reverse_op = (rhs_code == PLUS_EXPR\n+\t\t\t\t\t   ? MINUS_EXPR : PLUS_EXPR);\n+\t      op1 = int_const_binop (reverse_op, val, op1);\n+\t      if (TREE_OVERFLOW (op1))\n+\t\top1 = drop_tree_overflow (op1);\n+\t      register_new_assert_for (op0, op0, comp_code, op1, NULL, e, bsi);\n+\t    }\n+\t}\n+\n       /* Add asserts for NAME cmp CST and NAME being defined\n \t as NAME = (int) NAME2.  */\n       if (!TYPE_UNSIGNED (TREE_TYPE (val))"}]}