{"sha": "ff85f0afc7d5684378944f88a9bc9b931034788b", "node_id": "C_kwDOANBUbNoAKGZmODVmMGFmYzdkNTY4NDM3ODk0NGY4OGE5YmM5YjkzMTAzNDc4OGI", "commit": {"author": {"name": "Roger Sayle", "email": "roger@nextmovesoftware.com", "date": "2022-09-13T18:49:20Z"}, "committer": {"name": "Roger Sayle", "email": "roger@nextmovesoftware.com", "date": "2022-09-13T18:49:20Z"}, "message": "PR target/106877: Robustify reg-stack to malformed asm.\n\nThis patch resolves PR target/106877 an ICE-on-invalid inline-asm\nregression.  An innocent upstream change means that the test case\nfrom PR inline-asm/84683 now hits a different assert in reg-stack.cc's\nmove_for_stack_reg.  Fixed by duplicating Jakub's solution to PR 84683\nhttps://gcc.gnu.org/pipermail/gcc-patches/2018-March/495193.html at\nthis second (similar) gcc_assert.\n\n2022-09-13  Roger Sayle  <roger@nextmovesoftware.com>\n\ngcc/ChangeLog\n\tPR target/106877\n\t* reg-stack.cc (move_for_stack_reg): Check for any_malformed_asm\n\tin gcc_assert.\n\ngcc/testsuite/ChangeLog\n\tPR target/106877\n\t* g++.dg/ext/pr106877.C: New test case.", "tree": {"sha": "4066a80b17d87dc1ab05e4a4e0c41e0b04c9288d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4066a80b17d87dc1ab05e4a4e0c41e0b04c9288d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ff85f0afc7d5684378944f88a9bc9b931034788b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff85f0afc7d5684378944f88a9bc9b931034788b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff85f0afc7d5684378944f88a9bc9b931034788b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff85f0afc7d5684378944f88a9bc9b931034788b/comments", "author": {"login": "rogersayle", "id": 13512313, "node_id": "MDQ6VXNlcjEzNTEyMzEz", "avatar_url": "https://avatars.githubusercontent.com/u/13512313?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rogersayle", "html_url": "https://github.com/rogersayle", "followers_url": "https://api.github.com/users/rogersayle/followers", "following_url": "https://api.github.com/users/rogersayle/following{/other_user}", "gists_url": "https://api.github.com/users/rogersayle/gists{/gist_id}", "starred_url": "https://api.github.com/users/rogersayle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rogersayle/subscriptions", "organizations_url": "https://api.github.com/users/rogersayle/orgs", "repos_url": "https://api.github.com/users/rogersayle/repos", "events_url": "https://api.github.com/users/rogersayle/events{/privacy}", "received_events_url": "https://api.github.com/users/rogersayle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rogersayle", "id": 13512313, "node_id": "MDQ6VXNlcjEzNTEyMzEz", "avatar_url": "https://avatars.githubusercontent.com/u/13512313?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rogersayle", "html_url": "https://github.com/rogersayle", "followers_url": "https://api.github.com/users/rogersayle/followers", "following_url": "https://api.github.com/users/rogersayle/following{/other_user}", "gists_url": "https://api.github.com/users/rogersayle/gists{/gist_id}", "starred_url": "https://api.github.com/users/rogersayle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rogersayle/subscriptions", "organizations_url": "https://api.github.com/users/rogersayle/orgs", "repos_url": "https://api.github.com/users/rogersayle/repos", "events_url": "https://api.github.com/users/rogersayle/events{/privacy}", "received_events_url": "https://api.github.com/users/rogersayle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e11babbfac21163118b69dd25b468ade80dbe8de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e11babbfac21163118b69dd25b468ade80dbe8de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e11babbfac21163118b69dd25b468ade80dbe8de"}], "stats": {"total": 16, "additions": 15, "deletions": 1}, "files": [{"sha": "95e0e614e468002101500128bea81dd0f93d18f5", "filename": "gcc/reg-stack.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff85f0afc7d5684378944f88a9bc9b931034788b/gcc%2Freg-stack.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff85f0afc7d5684378944f88a9bc9b931034788b/gcc%2Freg-stack.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freg-stack.cc?ref=ff85f0afc7d5684378944f88a9bc9b931034788b", "patch": "@@ -1073,7 +1073,8 @@ move_for_stack_reg (rtx_insn *insn, stack_ptr regstack, rtx pat)\n \t      break;\n \n \t  /* The destination must be dead, or life analysis is borked.  */\n-\t  gcc_assert (get_hard_regnum (regstack, dest) < FIRST_STACK_REG);\n+\t  gcc_assert (get_hard_regnum (regstack, dest) < FIRST_STACK_REG\n+\t\t      || any_malformed_asm);\n \n \t  /* If the source is not live, this is yet another case of\n \t     uninitialized variables.  Load up a NaN instead.  */"}, {"sha": "6bffed9beaef671ef2314c1e45186ab0fd8ed5c6", "filename": "gcc/testsuite/g++.dg/ext/pr106877.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff85f0afc7d5684378944f88a9bc9b931034788b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fpr106877.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff85f0afc7d5684378944f88a9bc9b931034788b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fpr106877.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fpr106877.C?ref=ff85f0afc7d5684378944f88a9bc9b931034788b", "patch": "@@ -0,0 +1,13 @@\n+// PR target/106877\n+// { dg-do compile { target i?86-*-* x86_64-*-* } }\n+// { dg-options \"-O1 -m16 -mtune=sandybridge -flive-range-shrinkage -fno-dce\" }\n+\n+void\n+foo (float b, double c)\n+{\n+  for (int e = 0; e < 2; e++)\n+    {\n+      asm volatile (\"\" : \"+f\" (c));\t// { dg-error \"must specify a single register\" }\n+      asm (\"\" : \"+rm\" (c = b));\n+    }\n+}"}]}