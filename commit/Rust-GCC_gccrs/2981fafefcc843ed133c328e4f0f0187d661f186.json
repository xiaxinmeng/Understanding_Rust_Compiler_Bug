{"sha": "2981fafefcc843ed133c328e4f0f0187d661f186", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mjk4MWZhZmVmY2M4NDNlZDEzM2MzMjhlNGYwZjAxODdkNjYxZjE4Ng==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@eyesopen.com", "date": "2003-10-11T13:53:39Z"}, "committer": {"name": "Roger Sayle", "email": "sayle@gcc.gnu.org", "date": "2003-10-11T13:53:39Z"}, "message": "combine.c (apply_distributive_law): Enable \"distributive\" floating point optimizations with -funsafe-math-optimizations.\n\n\n\t* combine.c (apply_distributive_law): Enable \"distributive\" floating\n\tpoint optimizations with -funsafe-math-optimizations.\n\nFrom-SVN: r72334", "tree": {"sha": "1e2fae2e0119b871ed90d12f751e83b202e8ae81", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1e2fae2e0119b871ed90d12f751e83b202e8ae81"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2981fafefcc843ed133c328e4f0f0187d661f186", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2981fafefcc843ed133c328e4f0f0187d661f186", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2981fafefcc843ed133c328e4f0f0187d661f186", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2981fafefcc843ed133c328e4f0f0187d661f186/comments", "author": null, "committer": null, "parents": [{"sha": "379f1861d3d143f28098ceb8a32a7ddcd81c936b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/379f1861d3d143f28098ceb8a32a7ddcd81c936b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/379f1861d3d143f28098ceb8a32a7ddcd81c936b"}], "stats": {"total": 18, "additions": 12, "deletions": 6}, "files": [{"sha": "f5bec024a807cd69bc36e9164b8a5e155b511cbe", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2981fafefcc843ed133c328e4f0f0187d661f186/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2981fafefcc843ed133c328e4f0f0187d661f186/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2981fafefcc843ed133c328e4f0f0187d661f186", "patch": "@@ -1,3 +1,8 @@\n+2003-10-11  Roger Sayle  <roger@eyesopen.com>\n+\n+\t* combine.c (apply_distributive_law): Enable \"distributive\" floating\n+\tpoint optimizations with -funsafe-math-optimizations.\n+\n 2003-10-11  Andrew Pinski <pinskia@physics.uc.edu>\n \t\n \t* genmodes.c (emit_mode_mask) Change MASK to MODE_MASK."}, {"sha": "0a65bf221a85beb62b48267c92c853770c30f4a0", "filename": "gcc/combine.c", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2981fafefcc843ed133c328e4f0f0187d661f186/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2981fafefcc843ed133c328e4f0f0187d661f186/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=2981fafefcc843ed133c328e4f0f0187d661f186", "patch": "@@ -7791,22 +7791,23 @@ static rtx\n apply_distributive_law (rtx x)\n {\n   enum rtx_code code = GET_CODE (x);\n+  enum rtx_code inner_code;\n   rtx lhs, rhs, other;\n   rtx tem;\n-  enum rtx_code inner_code;\n \n-  /* Distributivity is not true for floating point.\n-     It can change the value.  So don't do it.\n-     -- rms and moshier@world.std.com.  */\n-  if (FLOAT_MODE_P (GET_MODE (x)))\n+  /* Distributivity is not true for floating point as it can change the\n+     value.  So we don't do it unless -funsafe-math-optimizations.  */\n+  if (FLOAT_MODE_P (GET_MODE (x))\n+      && ! flag_unsafe_math_optimizations)\n     return x;\n \n   /* The outer operation can only be one of the following:  */\n   if (code != IOR && code != AND && code != XOR\n       && code != PLUS && code != MINUS)\n     return x;\n \n-  lhs = XEXP (x, 0), rhs = XEXP (x, 1);\n+  lhs = XEXP (x, 0);\n+  rhs = XEXP (x, 1);\n \n   /* If either operand is a primitive we can't do anything, so get out\n      fast.  */"}]}