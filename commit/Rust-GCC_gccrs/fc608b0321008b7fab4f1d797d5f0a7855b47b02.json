{"sha": "fc608b0321008b7fab4f1d797d5f0a7855b47b02", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmM2MDhiMDMyMTAwOGI3ZmFiNGYxZDc5N2Q1ZjBhNzg1NWI0N2IwMg==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2000-12-22T12:27:36Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2000-12-22T12:27:36Z"}, "message": "Makefile.in (sched-deps.o, [...]): Fix dependency typo.\n\n\t* Makefile.in (sched-deps.o, sched-rgn.o): Fix dependency typo.\n\n\t* fp-bit.h (usi_to_float): Add prototype.\n\n\t* i386.c (file_info_cmp): Likewise.\n\t(dwarf2out_line): Hide variable `old_in_use'.\n\n\t* objc-act.c (objc_fatal): Delete.\n\n\t* sched-vis.c (visualize_stall_cycles): Remove unused variable.\n\n\t* system.h (getopt): Fix error in last change.\n\n\t* varasm.c (assemble_trampoline_template): Constify.\n\nFrom-SVN: r38452", "tree": {"sha": "799a3e92e0a1f48649c9992ca66eeffa273bc181", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/799a3e92e0a1f48649c9992ca66eeffa273bc181"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fc608b0321008b7fab4f1d797d5f0a7855b47b02", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc608b0321008b7fab4f1d797d5f0a7855b47b02", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc608b0321008b7fab4f1d797d5f0a7855b47b02", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc608b0321008b7fab4f1d797d5f0a7855b47b02/comments", "author": null, "committer": null, "parents": [{"sha": "a545190e1f8537cf66ff53a580168489102dbf09", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a545190e1f8537cf66ff53a580168489102dbf09", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a545190e1f8537cf66ff53a580168489102dbf09"}], "stats": {"total": 42, "additions": 28, "deletions": 14}, "files": [{"sha": "5ac8c253923d618af665a936f46daf8721f90864", "filename": "gcc/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc608b0321008b7fab4f1d797d5f0a7855b47b02/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc608b0321008b7fab4f1d797d5f0a7855b47b02/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fc608b0321008b7fab4f1d797d5f0a7855b47b02", "patch": "@@ -1,3 +1,20 @@\n+2000-12-22  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* Makefile.in (sched-deps.o, sched-rgn.o): Fix dependency typo.\n+\n+\t* fp-bit.h (usi_to_float): Add prototype.\n+\n+\t* i386.c (file_info_cmp): Likewise.\n+\t(dwarf2out_line): Hide variable `old_in_use'.\n+\t\n+\t* objc-act.c (objc_fatal): Delete.\n+\n+\t* sched-vis.c (visualize_stall_cycles): Remove unused variable.\n+\n+\t* system.h (getopt): Fix error in last change.\n+\n+\t* varasm.c (assemble_trampoline_template): Constify.\n+\n 2000-12-22  Jason Merrill  <jason@redhat.com>\n \n \t* collect2.c (main): Use auto_demangling."}, {"sha": "2e76bed9ad15b4b56cffdd96ea8006cf224f893c", "filename": "gcc/Makefile.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc608b0321008b7fab4f1d797d5f0a7855b47b02/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc608b0321008b7fab4f1d797d5f0a7855b47b02/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=fc608b0321008b7fab4f1d797d5f0a7855b47b02", "patch": "@@ -1458,10 +1458,10 @@ regmove.o : regmove.c $(CONFIG_H) system.h $(RTL_H) insn-config.h \\\n haifa-sched.o : haifa-sched.c $(CONFIG_H) system.h $(RTL_H) sched-int.h \\\n    $(BASIC_BLOCK_H) $(REGS_H) hard-reg-set.h flags.h insn-config.h function.h \\\n    $(INSN_ATTR_H) insn-flags.h toplev.h $(RECOG_H) except.h\n-sched-deps.o : haifa-sched.c $(CONFIG_H) system.h $(RTL_H) sched-int.h \\\n+sched-deps.o : sched-deps.c $(CONFIG_H) system.h $(RTL_H) sched-int.h \\\n    $(BASIC_BLOCK_H) $(REGS_H) hard-reg-set.h flags.h insn-config.h function.h \\\n    $(INSN_ATTR_H) toplev.h $(RECOG_H) except.h\n-sched-rgn.o : haifa-sched.c $(CONFIG_H) system.h $(RTL_H) sched-int.h \\\n+sched-rgn.o : sched-rgn.c $(CONFIG_H) system.h $(RTL_H) sched-int.h \\\n    $(BASIC_BLOCK_H) $(REGS_H) hard-reg-set.h flags.h insn-config.h function.h \\\n    $(INSN_ATTR_H) toplev.h $(RECOG_H) except.h\n sched-ebb.o : sched-ebb.c $(CONFIG_H) system.h $(RTL_H) sched-int.h \\"}, {"sha": "88d72db269d6425762d12c225f2a4c32d3ffa46b", "filename": "gcc/config/fp-bit.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc608b0321008b7fab4f1d797d5f0a7855b47b02/gcc%2Fconfig%2Ffp-bit.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc608b0321008b7fab4f1d797d5f0a7855b47b02/gcc%2Fconfig%2Ffp-bit.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffp-bit.h?ref=fc608b0321008b7fab4f1d797d5f0a7855b47b02", "patch": "@@ -384,6 +384,10 @@ extern USItype float_to_usi (FLO_type);\n #endif\n #endif\n \n+#if defined(L_usi_to_sf) || defined(L_usi_to_df)\n+extern FLO_type usi_to_float (USItype);\n+#endif\n+\n #if defined(L_negate_sf) || defined(L_negate_df)\n extern FLO_type negate (FLO_type);\n #endif"}, {"sha": "3bd1b81141a20ae4f6f3a963198d53b6b584b8ed", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc608b0321008b7fab4f1d797d5f0a7855b47b02/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc608b0321008b7fab4f1d797d5f0a7855b47b02/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=fc608b0321008b7fab4f1d797d5f0a7855b47b02", "patch": "@@ -8295,7 +8295,6 @@ ix86_expand_builtin (exp, target, subtarget, mode, ignore)\n     if (d->code == fcode)\n       return ix86_expand_sse_comi (d, arglist, target);\n \n- fail:\n   /* @@@ Should really do something sensible here.  */\n   return 0;\n }"}, {"sha": "8c6b6ce5a4bd5a881705d548df54e41e870b96eb", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc608b0321008b7fab4f1d797d5f0a7855b47b02/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc608b0321008b7fab4f1d797d5f0a7855b47b02/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=fc608b0321008b7fab4f1d797d5f0a7855b47b02", "patch": "@@ -3533,6 +3533,7 @@ static void gen_type_die_for_member\tPARAMS ((tree, tree, dw_die_ref));\n static void gen_abstract_function\tPARAMS ((tree));\n static rtx save_rtx\t\t\tPARAMS ((rtx));\n static void splice_child_die\t\tPARAMS ((dw_die_ref, dw_die_ref));\n+static int file_info_cmp\t\tPARAMS ((const void *, const void *));\n \n /* Section names used to hold DWARF debugging information.  */\n #ifndef DEBUG_INFO_SECTION\n@@ -11338,7 +11339,9 @@ dwarf2out_line (filename, line)\n \n       if (DWARF2_ASM_LINE_DEBUG_INFO)\n \t{\n+#if 0\n \t  unsigned old_in_use = line_file_table.in_use;\n+#endif\n \t  unsigned file_num = lookup_filename (&line_file_table, filename);\n \n \t  /* Emit the .file and .loc directives understood by GNU as.  */"}, {"sha": "5b6e33a85083f91e1244e5ce05509a8f51482ebb", "filename": "gcc/objc/objc-act.c", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc608b0321008b7fab4f1d797d5f0a7855b47b02/gcc%2Fobjc%2Fobjc-act.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc608b0321008b7fab4f1d797d5f0a7855b47b02/gcc%2Fobjc%2Fobjc-act.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-act.c?ref=fc608b0321008b7fab4f1d797d5f0a7855b47b02", "patch": "@@ -276,8 +276,6 @@ static void dump_interface\t\t\tPARAMS ((FILE *, tree));\n \n /* Everything else.  */\n \n-static void objc_fatal\t\t\t\tPARAMS ((void))\n-  ATTRIBUTE_NORETURN;\n static tree define_decl\t\t\t\tPARAMS ((tree, tree));\n static tree lookup_method_in_protocol_list\tPARAMS ((tree, tree, int));\n static tree lookup_protocol_in_reflist\t\tPARAMS ((tree, tree));\n@@ -745,12 +743,6 @@ lang_init ()\n   c_parse_init ();\n }\n \n-static void\n-objc_fatal ()\n-{\n-  fatal (\"Objective-C text in C source file\");\n-}\n-\n void\n finish_file ()\n {"}, {"sha": "4cd07790130aef6d88718e607d7e716454fb25ad", "filename": "gcc/sched-vis.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc608b0321008b7fab4f1d797d5f0a7855b47b02/gcc%2Fsched-vis.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc608b0321008b7fab4f1d797d5f0a7855b47b02/gcc%2Fsched-vis.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsched-vis.c?ref=fc608b0321008b7fab4f1d797d5f0a7855b47b02", "patch": "@@ -901,7 +901,6 @@ void\n visualize_stall_cycles (stalls)\n      int stalls;\n {\n-  int i;\n   const char *prefix = \";;       \";\n   const char *suffix = \"\\n\";\n   char *p;"}, {"sha": "ace7177047b512a6a007b9d61554db4d9ef8f3fc", "filename": "gcc/system.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc608b0321008b7fab4f1d797d5f0a7855b47b02/gcc%2Fsystem.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc608b0321008b7fab4f1d797d5f0a7855b47b02/gcc%2Fsystem.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsystem.h?ref=fc608b0321008b7fab4f1d797d5f0a7855b47b02", "patch": "@@ -278,7 +278,7 @@ extern char *getenv PARAMS ((const char *));\n #endif\n \n #if defined (HAVE_DECL_GETOPT) && !HAVE_DECL_GETOPT\n-extern int getopt PARAMS ((int, char * const *, char *));\n+extern int getopt PARAMS ((int, char * const *, const char *));\n #endif\n \n #if defined (HAVE_DECL_GETWD) && !HAVE_DECL_GETWD"}, {"sha": "b2c283e13b7d25e82d1aa305b30a99224e3adf61", "filename": "gcc/varasm.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc608b0321008b7fab4f1d797d5f0a7855b47b02/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc608b0321008b7fab4f1d797d5f0a7855b47b02/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=fc608b0321008b7fab4f1d797d5f0a7855b47b02", "patch": "@@ -1844,7 +1844,7 @@ rtx\n assemble_trampoline_template ()\n {\n   char label[256];\n-  char *name;\n+  const char *name;\n   int align;\n \n   /* By default, put trampoline templates in read-only data section.  */"}]}