{"sha": "01af7e0a0c230ca90c22b1f34ff9215ab6a714fd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDFhZjdlMGEwYzIzMGNhOTBjMjJiMWYzNGZmOTIxNWFiNmE3MTRmZA==", "commit": {"author": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2020-02-21T23:30:24Z"}, "committer": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2020-02-21T23:30:24Z"}, "message": "Fix handling of floating-point homogeneous aggregates.\n\n\t2020-02-21  John David Anglin  <danglin@gcc.gnu.org>\n\n\t* gcc/config/pa/pa.c (pa_function_value): Fix check for word and\n\tdouble-word size when handling aggregate return values.\n\t* gcc/config/pa/som.h (ASM_DECLARE_FUNCTION_NAME): Fix to indicate\n\tthat homogeneous SFmode and DFmode aggregates are passed and returned\n\tin general registers.", "tree": {"sha": "a82646dbc22e86985075738a40ebd9d91b9b3711", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a82646dbc22e86985075738a40ebd9d91b9b3711"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/01af7e0a0c230ca90c22b1f34ff9215ab6a714fd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01af7e0a0c230ca90c22b1f34ff9215ab6a714fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/01af7e0a0c230ca90c22b1f34ff9215ab6a714fd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01af7e0a0c230ca90c22b1f34ff9215ab6a714fd/comments", "author": null, "committer": null, "parents": [{"sha": "8d1780b56d0cb1d50115d4e925e81cd8b9cb2923", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d1780b56d0cb1d50115d4e925e81cd8b9cb2923", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d1780b56d0cb1d50115d4e925e81cd8b9cb2923"}], "stats": {"total": 28, "additions": 21, "deletions": 7}, "files": [{"sha": "cea52f00523c8d58960569cc5bdd0a923decb420", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01af7e0a0c230ca90c22b1f34ff9215ab6a714fd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01af7e0a0c230ca90c22b1f34ff9215ab6a714fd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=01af7e0a0c230ca90c22b1f34ff9215ab6a714fd", "patch": "@@ -1,3 +1,11 @@\n+2020-02-21  John David Anglin  <danglin@gcc.gnu.org>\n+\n+\t* gcc/config/pa/pa.c (pa_function_value): Fix check for word and\n+\tdouble-word size when handling aggregate return values.\n+\t* gcc/config/pa/som.h (ASM_DECLARE_FUNCTION_NAME): Fix to indicate\n+\tthat homogeneous SFmode and DFmode aggregates are passed and returned\n+\tin general registers.\n+\n 2020-02-21  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR translation/93759"}, {"sha": "a662de96ac929c0ad1c13038ae713fe9f3881bbc", "filename": "gcc/config/pa/pa.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01af7e0a0c230ca90c22b1f34ff9215ab6a714fd/gcc%2Fconfig%2Fpa%2Fpa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01af7e0a0c230ca90c22b1f34ff9215ab6a714fd/gcc%2Fconfig%2Fpa%2Fpa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.c?ref=01af7e0a0c230ca90c22b1f34ff9215ab6a714fd", "patch": "@@ -9335,7 +9335,7 @@ pa_function_value (const_tree valtype,\n       HOST_WIDE_INT valsize = int_size_in_bytes (valtype);\n \n       /* Handle aggregates that fit exactly in a word or double word.  */\n-      if ((valsize & (UNITS_PER_WORD - 1)) == 0)\n+      if (valsize == UNITS_PER_WORD || valsize == 2 * UNITS_PER_WORD)\n \treturn gen_rtx_REG (TYPE_MODE (valtype), 28);\n \n       if (TARGET_64BIT)"}, {"sha": "505fdd65d799a7d3f6110218a5c9abc8335259ca", "filename": "gcc/config/pa/som.h", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01af7e0a0c230ca90c22b1f34ff9215ab6a714fd/gcc%2Fconfig%2Fpa%2Fsom.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01af7e0a0c230ca90c22b1f34ff9215ab6a714fd/gcc%2Fconfig%2Fpa%2Fsom.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fsom.h?ref=01af7e0a0c230ca90c22b1f34ff9215ab6a714fd", "patch": "@@ -98,8 +98,8 @@ do {\t\t\t\t\t\t\t\t\\\n \n \f\n #define ASM_DECLARE_FUNCTION_NAME(FILE, NAME, DECL) \\\n-    do { tree fntype = TREE_TYPE (TREE_TYPE (DECL));\t\t\t\\\n-\t tree tree_type = TREE_TYPE (DECL);\t\t\t\t\\\n+    do { tree tree_type = TREE_TYPE (DECL);\t\t\t\t\\\n+\t tree fntype = TREE_TYPE (tree_type);\t\t\t\t\\\n \t tree parm;\t\t\t\t\t\t\t\\\n \t int i;\t\t\t\t\t\t\t\t\\\n \t if (TREE_PUBLIC (DECL) || TARGET_GAS)\t\t\t\t\\\n@@ -121,9 +121,11 @@ do {\t\t\t\t\t\t\t\t\\\n \t       {\t\t\t\t\t\t\t\\\n \t\t tree type = DECL_ARG_TYPE (parm);\t\t\t\\\n \t\t machine_mode mode = TYPE_MODE (type);\t\t\t\\\n-\t\t if (mode == SFmode && ! TARGET_SOFT_FLOAT)\t\t\\\n+\t\t if (!AGGREGATE_TYPE_P (type)\t\t\t\t\\\n+\t\t     && mode == SFmode && ! TARGET_SOFT_FLOAT)\t\t\\\n \t\t   fprintf (FILE, \",ARGW%d=FR\", i++);\t\t\t\\\n-\t\t else if (mode == DFmode && ! TARGET_SOFT_FLOAT)\t\\\n+\t\t else if (!AGGREGATE_TYPE_P (type)\t\t\t\\\n+\t\t\t  && mode == DFmode && ! TARGET_SOFT_FLOAT)\t\\\n \t\t   {\t\t\t\t\t\t\t\\\n \t\t     if (i <= 2)\t\t\t\t\t\\\n \t\t       {\t\t\t\t\t\t\\\n@@ -158,9 +160,13 @@ do {\t\t\t\t\t\t\t\t\\\n \t\t for (; i < 4; i++)\t\t\t\t\t\\\n \t\t   fprintf (FILE, \",ARGW%d=GR\", i);\t\t\t\\\n \t       }\t\t\t\t\t\t\t\\\n-\t     if (TYPE_MODE (fntype) == DFmode && ! TARGET_SOFT_FLOAT)\t\\\n+\t     if (!AGGREGATE_TYPE_P (fntype)\t\t\t\t\\\n+\t\t && TYPE_MODE (fntype) == DFmode\t\t\t\\\n+\t\t && ! TARGET_SOFT_FLOAT)\t\t\t\t\\\n \t       fputs (DFMODE_RETURN_STRING, FILE);\t\t\t\\\n-\t     else if (TYPE_MODE (fntype) == SFmode && ! TARGET_SOFT_FLOAT) \\\n+\t     else if (!AGGREGATE_TYPE_P (fntype)\t\t\t\\\n+\t\t      && TYPE_MODE (fntype) == SFmode\t\t\t\\\n+\t\t      && ! TARGET_SOFT_FLOAT)\t\t\t\t\\\n \t       fputs (SFMODE_RETURN_STRING, FILE);\t\t\t\\\n \t     else if (fntype != void_type_node)\t\t\t\t\\\n \t       fputs (\",RTNVAL=GR\", FILE);\t\t\t\t\\"}]}