{"sha": "84b7783609980a52d9b4471bc3c558ea862dcb62", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODRiNzc4MzYwOTk4MGE1MmQ5YjQ0NzFiYzNjNTU4ZWE4NjJkY2I2Mg==", "commit": {"author": {"name": "Neil Booth", "email": "neil@daikokuya.demon.co.uk", "date": "2001-05-27T21:04:28Z"}, "committer": {"name": "Neil Booth", "email": "neil@gcc.gnu.org", "date": "2001-05-27T21:04:28Z"}, "message": "c-decl.c (init_decl_processing): Don't call start_identifier_warnings.\n\n\t* c-decl.c (init_decl_processing):\n\t Don't call start_identifier_warnings.\n\t* flags.h (warn_id_clash, id_clash_len): Remove.\n\t* stringpool.c: Don't include flags.h.\n\t(scan_for_clashes, do_identifier_warnings,\n\tstart_identifier_warnings): Remove.\n\t* toplev.c (warn_id_clash, id_clash_len): Remove.\n\t(display_help): Don't document -Wid-clash.\n\t(decode_W_option): Print warning on -Wid-clash.\n\t* tree.h (start_identifier_warnings): Remove.\n\t* invoke.texi: Remove documentation of -Wid-clash.\n\nFrom-SVN: r42665", "tree": {"sha": "ddc105f7ab823ba9b7f49c48da4aa669a5fe6490", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ddc105f7ab823ba9b7f49c48da4aa669a5fe6490"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/84b7783609980a52d9b4471bc3c558ea862dcb62", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84b7783609980a52d9b4471bc3c558ea862dcb62", "html_url": "https://github.com/Rust-GCC/gccrs/commit/84b7783609980a52d9b4471bc3c558ea862dcb62", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84b7783609980a52d9b4471bc3c558ea862dcb62/comments", "author": null, "committer": null, "parents": [{"sha": "7b78a14a37cd517efee40901397dc272ecb55211", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b78a14a37cd517efee40901397dc272ecb55211", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b78a14a37cd517efee40901397dc272ecb55211"}], "stats": {"total": 79, "additions": 16, "deletions": 63}, "files": [{"sha": "c239ac121374151c3e9d3964be5bf379584988f9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84b7783609980a52d9b4471bc3c558ea862dcb62/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84b7783609980a52d9b4471bc3c558ea862dcb62/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=84b7783609980a52d9b4471bc3c558ea862dcb62", "patch": "@@ -1,3 +1,17 @@\n+2001-05-27  Neil Booth  <neil@daikokuya.demon.co.uk>\n+\n+\t* c-decl.c (init_decl_processing):\n+\t Don't call start_identifier_warnings.\n+\t* flags.h (warn_id_clash, id_clash_len): Remove.\n+\t* stringpool.c: Don't include flags.h.\n+\t(scan_for_clashes, do_identifier_warnings,\n+\tstart_identifier_warnings): Remove.\n+\t* toplev.c (warn_id_clash, id_clash_len): Remove.\n+\t(display_help): Don't document -Wid-clash.\n+\t(decode_W_option): Print warning on -Wid-clash.\n+\t* tree.h (start_identifier_warnings): Remove.\n+\t* invoke.texi: Remove documentation of -Wid-clash.\n+\n 2001-05-27  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n         * fixinc/fixtests.c: Declare entries in ENV_TABLE."}, {"sha": "7c02d0591d2f9c814bdae21a6f6c8e25f7141c0c", "filename": "gcc/c-decl.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84b7783609980a52d9b4471bc3c558ea862dcb62/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84b7783609980a52d9b4471bc3c558ea862dcb62/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=84b7783609980a52d9b4471bc3c558ea862dcb62", "patch": "@@ -3061,8 +3061,6 @@ init_decl_processing ()\n   make_fname_decl = c_make_fname_decl;\n   start_fname_decls ();\n \n-  start_identifier_warnings ();\n-\n   /* Prepare to check format strings against argument lists.  */\n   init_function_format_info ();\n "}, {"sha": "38ae79a5c4fc05d7f7cbad499e1ebdf7ac105c8f", "filename": "gcc/flags.h", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84b7783609980a52d9b4471bc3c558ea862dcb62/gcc%2Fflags.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84b7783609980a52d9b4471bc3c558ea862dcb62/gcc%2Fflags.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflags.h?ref=84b7783609980a52d9b4471bc3c558ea862dcb62", "patch": "@@ -142,12 +142,6 @@ extern int warn_missing_noreturn;\n \n extern int warn_cast_align;\n \n-/* Nonzero means warn about any identifiers that match in the first N\n-   characters.  The value N is in `id_clash_len'.  */\n-\n-extern int warn_id_clash;\n-extern unsigned int id_clash_len;\n-\n /* Nonzero means warn about any objects definitions whose size is larger\n    than N bytes.  Also want about function definitions whose returned\n    values are larger than N bytes. The value N is in `larger_than_size'.  */"}, {"sha": "41553457b8dc0c42af4bc15eda64a1babaf6ffd7", "filename": "gcc/invoke.texi", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84b7783609980a52d9b4471bc3c558ea862dcb62/gcc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84b7783609980a52d9b4471bc3c558ea862dcb62/gcc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Finvoke.texi?ref=84b7783609980a52d9b4471bc3c558ea862dcb62", "patch": "@@ -208,7 +208,7 @@ in the following sections.\n -Wconversion  -Wdisabled-optimization -Werror @gol\n -Wfloat-equal  -Wformat  -Wformat=2 @gol\n -Wformat-nonliteral -Wformat-security @gol\n--Wid-clash-@var{len}  -Wimplicit -Wimplicit-int  @gol\n+-Wimplicit -Wimplicit-int  @gol\n -Wimplicit-function-declaration @gol\n -Werror-implicit-function-declaration @gol\n -Wimport  -Winline @gol\n@@ -2232,11 +2232,6 @@ Warn if an undefined identifier is evaluated in an @samp{#if} directive.\n Warn whenever a local variable shadows another local variable, parameter or\n global variable or whenever a built-in function is shadowed.\n \n-@item -Wid-clash-@var{len}\n-Warn whenever two distinct identifiers match in the first @var{len}\n-characters.  This may help you prepare a program that will compile\n-with certain obsolete, brain-damaged compilers.\n-\n @item -Wlarger-than-@var{len}\n Warn whenever an object of larger than @var{len} bytes is defined.\n "}, {"sha": "62d2a06b27138f24210341d6b9945b64b2777808", "filename": "gcc/stringpool.c", "status": "modified", "additions": 0, "deletions": 35, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84b7783609980a52d9b4471bc3c558ea862dcb62/gcc%2Fstringpool.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84b7783609980a52d9b4471bc3c558ea862dcb62/gcc%2Fstringpool.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstringpool.c?ref=84b7783609980a52d9b4471bc3c558ea862dcb62", "patch": "@@ -32,7 +32,6 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #include \"ggc.h\"\n #include \"tree.h\"\n #include \"hashtable.h\"\n-#include \"flags.h\"\n #include \"toplev.h\"\n \n /* The \"\" allocated string.  */\n@@ -47,13 +46,10 @@ const char digit_vector[] = {\n \n struct ht *ident_hash;\n static struct obstack string_stack;\n-static int do_identifier_warnings;\n \n static hashnode alloc_node PARAMS ((hash_table *));\n static int mark_ident PARAMS ((struct cpp_reader *, hashnode, const PTR));\n static void mark_ident_hash PARAMS ((void *));\n-static int scan_for_clashes PARAMS ((struct cpp_reader *, hashnode,\n-\t\t\t\t     const char *));\n \n /* Initialize the string pool.  */\n void\n@@ -131,28 +127,6 @@ maybe_get_identifier (text)\n   return NULL_TREE;\n }\n \n-/* If this identifier is longer than the clash-warning length,\n-   do a brute force search of the entire table for clashes.  */\n-\n-static int\n-scan_for_clashes (pfile, h, text)\n-     struct cpp_reader *pfile ATTRIBUTE_UNUSED;\n-     hashnode h;\n-     const char *text;\n-{\n-  tree node = HT_IDENT_TO_GCC_IDENT (h);\n-\n-  if (IDENTIFIER_LENGTH (node) >= id_clash_len\n-      && !memcmp (IDENTIFIER_POINTER (node), text, id_clash_len))\n-    {\n-      warning (\"\\\"%s\\\" and \\\"%s\\\" identical in first %d characters\",\n-\t       text, IDENTIFIER_POINTER (node), id_clash_len);\n-      return 0;\n-    }\n-\n-  return 1;\n-}\n-\n /* Record the size of an identifier node for the language in use.\n    SIZE is the total size in bytes.\n    This is called by the language-specific files.  This must be\n@@ -166,15 +140,6 @@ set_identifier_size (size)\n     = (size - sizeof (struct tree_common)) / sizeof (tree);\n }\n \n-/* Enable warnings on similar identifiers (if requested).\n-   Done after the built-in identifiers are created.  */\n-\n-void\n-start_identifier_warnings ()\n-{\n-  do_identifier_warnings = 1;\n-}\n-\n /* Report some basic statistics about the string pool.  */\n \n void"}, {"sha": "0cb787568b15c37162a3ffc0b519368aec573b02", "filename": "gcc/toplev.c", "status": "modified", "additions": 1, "deletions": 13, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84b7783609980a52d9b4471bc3c558ea862dcb62/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84b7783609980a52d9b4471bc3c558ea862dcb62/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=84b7783609980a52d9b4471bc3c558ea862dcb62", "patch": "@@ -1455,12 +1455,6 @@ int warn_return_type;\n \n int warn_cast_align;\n \n-/* Nonzero means warn about any identifiers that match in the first N\n-   characters.  The value N is in `id_clash_len'.  */\n-\n-int warn_id_clash;\n-unsigned int id_clash_len;\n-\n /* Nonzero means warn about any objects definitions whose size is larger\n    than N bytes.  Also want about function definitions whose returned\n    values are larger than N bytes. The value N is in `larger_than_size'.  */\n@@ -3905,7 +3899,6 @@ display_help ()\n     }\n \n   printf (_(\"  -Wunused                Enable unused warnings\\n\"));\n-  printf (_(\"  -Wid-clash-<num>        Warn if 2 identifiers have the same first <num> chars\\n\"));\n   printf (_(\"  -Wlarger-than-<number>  Warn if an object is larger than <number> bytes\\n\"));\n   printf (_(\"  -p                      Enable function profiling\\n\"));\n #if defined (BLOCK_PROFILER) || defined (FUNCTION_BLOCK_PROFILER)\n@@ -4239,12 +4232,7 @@ decode_W_option (arg)\n     }\n \n   if ((option_value = skip_leading_substring (arg, \"id-clash-\")))\n-    {\n-      id_clash_len = read_integral_parameter (option_value, arg - 2, -1);\n-\n-      if (id_clash_len != -1)\n-\twarn_id_clash = 1;\n-    }\n+    warning (\"-Wid-clash-LEN is no longer supported\");\n   else if ((option_value = skip_leading_substring (arg, \"larger-than-\")))\n     {\n       larger_than_size = read_integral_parameter (option_value, arg - 2, -1);"}, {"sha": "6821b06b452dcd67048c0f31ba5aa9d2903a3ec7", "filename": "gcc/tree.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84b7783609980a52d9b4471bc3c558ea862dcb62/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84b7783609980a52d9b4471bc3c558ea862dcb62/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=84b7783609980a52d9b4471bc3c558ea862dcb62", "patch": "@@ -2718,7 +2718,6 @@ extern void expand_function_start\tPARAMS ((tree, int));\n \n extern int real_onep\t\t\tPARAMS ((tree));\n extern int real_twop\t\t\tPARAMS ((tree));\n-extern void start_identifier_warnings\tPARAMS ((void));\n extern void gcc_obstack_init\t\tPARAMS ((struct obstack *));\n extern void init_obstacks\t\tPARAMS ((void));\n extern void build_common_tree_nodes\tPARAMS ((int));"}]}