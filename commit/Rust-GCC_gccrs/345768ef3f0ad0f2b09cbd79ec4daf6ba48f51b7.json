{"sha": "345768ef3f0ad0f2b09cbd79ec4daf6ba48f51b7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzQ1NzY4ZWYzZjBhZDBmMmIwOWNiZDc5ZWM0ZGFmNmJhNDhmNTFiNw==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2006-11-11T04:01:42Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2006-11-11T04:01:42Z"}, "message": "fold-const.c (negate_mathfn_p): Add BUILT_IN_ERF.\n\n\t* fold-const.c (negate_mathfn_p): Add BUILT_IN_ERF.\n\ntestsuite:\n\t* gcc.dg/torture/builtin-symmetric-1.c: New test.\n\nFrom-SVN: r118682", "tree": {"sha": "a01015034e7637e43c95e5386ce6b1d3c4aa4f9d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a01015034e7637e43c95e5386ce6b1d3c4aa4f9d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/345768ef3f0ad0f2b09cbd79ec4daf6ba48f51b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/345768ef3f0ad0f2b09cbd79ec4daf6ba48f51b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/345768ef3f0ad0f2b09cbd79ec4daf6ba48f51b7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/345768ef3f0ad0f2b09cbd79ec4daf6ba48f51b7/comments", "author": null, "committer": null, "parents": [{"sha": "b8b7f1621f4c8270babb2a492e3f58413a368741", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8b7f1621f4c8270babb2a492e3f58413a368741", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8b7f1621f4c8270babb2a492e3f58413a368741"}], "stats": {"total": 63, "additions": 63, "deletions": 0}, "files": [{"sha": "a4c855391a8762cb4d8ccc7372d69b17a753ea72", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/345768ef3f0ad0f2b09cbd79ec4daf6ba48f51b7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/345768ef3f0ad0f2b09cbd79ec4daf6ba48f51b7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=345768ef3f0ad0f2b09cbd79ec4daf6ba48f51b7", "patch": "@@ -1,3 +1,7 @@\n+2006-11-10  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* fold-const.c (negate_mathfn_p): Add BUILT_IN_ERF.\n+\n 2006-11-10  Roger Sayle  <roger@eyesopen.com>\n \n \t* tree.c (build_int_cst_wide): Add an assertion (gcc_unreachable)"}, {"sha": "fedc3cad7e627489f6d142868ed21fe3dd58e9f5", "filename": "gcc/fold-const.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/345768ef3f0ad0f2b09cbd79ec4daf6ba48f51b7/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/345768ef3f0ad0f2b09cbd79ec4daf6ba48f51b7/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=345768ef3f0ad0f2b09cbd79ec4daf6ba48f51b7", "patch": "@@ -894,6 +894,7 @@ negate_mathfn_p (enum built_in_function code)\n     CASE_FLT_FN (BUILT_IN_SINH):\n     CASE_FLT_FN (BUILT_IN_TAN):\n     CASE_FLT_FN (BUILT_IN_TANH):\n+    CASE_FLT_FN (BUILT_IN_ERF):\n       return true;\n \n     default:"}, {"sha": "7566130247f3acba58fe816fbd472901a6c4449c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/345768ef3f0ad0f2b09cbd79ec4daf6ba48f51b7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/345768ef3f0ad0f2b09cbd79ec4daf6ba48f51b7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=345768ef3f0ad0f2b09cbd79ec4daf6ba48f51b7", "patch": "@@ -1,3 +1,7 @@\n+2006-11-10  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* gcc.dg/torture/builtin-symmetric-1.c: New test.\n+\n 2006-11-10 Paul Thomas <pault@gcc.gnu.org>\n \n    PR fortran/29758"}, {"sha": "49be06f8f846fd363289e5a285f34ada93a0e777", "filename": "gcc/testsuite/gcc.dg/torture/builtin-symmetric-1.c", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/345768ef3f0ad0f2b09cbd79ec4daf6ba48f51b7/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fbuiltin-symmetric-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/345768ef3f0ad0f2b09cbd79ec4daf6ba48f51b7/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fbuiltin-symmetric-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fbuiltin-symmetric-1.c?ref=345768ef3f0ad0f2b09cbd79ec4daf6ba48f51b7", "patch": "@@ -0,0 +1,54 @@\n+/* Copyright (C) 2006  Free Software Foundation.\n+\n+   Verify that built-in math function folding of symmetric even and\n+   odd functions is correctly performed by the compiler.\n+\n+   Origin: Kaveh R. Ghazi,  November 09, 2006.  */\n+\n+/* { dg-do link } */\n+/* { dg-options \"-ffast-math\" } */\n+\n+/* All references to link_error should go away at compile-time.  */\n+extern void link_error(int);\n+\n+/* Test that FUNC(-ARG) == FUNC(ARG).  */\n+#define TESTIT_EVEN(FUNC) do { \\\n+  if (__builtin_##FUNC##f(-xf) != __builtin_##FUNC##f(xf)) \\\n+    link_error(__LINE__); \\\n+  if (__builtin_##FUNC(-x) != __builtin_##FUNC(x)) \\\n+    link_error(__LINE__); \\\n+  if (__builtin_##FUNC##l(-xl) != __builtin_##FUNC##l(xl)) \\\n+    link_error(__LINE__); \\\n+  } while (0)\n+\n+/* Test that -FUNC(ARG) == FUNC(-ARG).  */\n+#define TESTIT_ODD(FUNC) do { \\\n+  if (-__builtin_##FUNC##f(-xf) != __builtin_##FUNC##f(xf)) \\\n+    link_error(__LINE__); \\\n+  if (-__builtin_##FUNC(-x) != __builtin_##FUNC(x)) \\\n+    link_error(__LINE__); \\\n+  if (-__builtin_##FUNC##l(-xl) != __builtin_##FUNC##l(xl)) \\\n+    link_error(__LINE__); \\\n+  } while (0)\n+\n+void foo (float xf, double x, long double xl)\n+{\n+  TESTIT_EVEN(cos);\n+\n+  TESTIT_ODD(asin);\n+  TESTIT_ODD(asinh);\n+  TESTIT_ODD(atan);\n+  TESTIT_ODD(atanh);\n+  TESTIT_ODD(cbrt);\n+  TESTIT_ODD(sin);\n+  TESTIT_ODD(sinh);\n+  TESTIT_ODD(tan);\n+  TESTIT_ODD(tanh);\n+  TESTIT_ODD(erf);\n+}\n+\n+int main()\n+{\n+  foo (1,1,1);\n+  return 0;\n+}"}]}