{"sha": "a2c54c951479b2eb5315f859a7035f48a3256c50", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTJjNTRjOTUxNDc5YjJlYjUzMTVmODU5YTcwMzVmNDhhMzI1NmM1MA==", "commit": {"author": {"name": "Hristian Kirtchev", "email": "kirtchev@adacore.com", "date": "2018-11-14T11:42:21Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-11-14T11:42:21Z"}, "message": "[Ada] Spurious error on Ghost null procedure\n\nThis patch modifies the analysis (which is really expansion) of null\nprocedures to set the Ghost mode of the spec when the null procedure\nacts as a completion.  This ensures that all nodes and entities\ngenerated by the expansion are marked as Ghost, and provide a proper\ncontext for references to Ghost entities.\n\n2018-11-14  Hristian Kirtchev  <kirtchev@adacore.com>\n\ngcc/ada/\n\n\t* sem_ch6.adb (Analyze_Null_Procedure): Capture Ghost and\n\tSPARK-related global state at the start of the routine. Set the\n\tGhost mode of the completed spec if any.  Restore the saved\n\tGhost and SPARK-related global state on exit from the routine.\n\ngcc/testsuite/\n\n\t* gnat.dg/ghost1.adb, gnat.dg/ghost1.ads: New testcase.\n\nFrom-SVN: r266132", "tree": {"sha": "402862c69eea358bd107637f10eb9391ceb19504", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/402862c69eea358bd107637f10eb9391ceb19504"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a2c54c951479b2eb5315f859a7035f48a3256c50", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2c54c951479b2eb5315f859a7035f48a3256c50", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2c54c951479b2eb5315f859a7035f48a3256c50", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2c54c951479b2eb5315f859a7035f48a3256c50/comments", "author": {"login": "kirtchev-adacore", "id": 60669983, "node_id": "MDQ6VXNlcjYwNjY5OTgz", "avatar_url": "https://avatars.githubusercontent.com/u/60669983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kirtchev-adacore", "html_url": "https://github.com/kirtchev-adacore", "followers_url": "https://api.github.com/users/kirtchev-adacore/followers", "following_url": "https://api.github.com/users/kirtchev-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/kirtchev-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/kirtchev-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kirtchev-adacore/subscriptions", "organizations_url": "https://api.github.com/users/kirtchev-adacore/orgs", "repos_url": "https://api.github.com/users/kirtchev-adacore/repos", "events_url": "https://api.github.com/users/kirtchev-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/kirtchev-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b5f581cdbba4f24c762f9e7d9741b7488bf752d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5f581cdbba4f24c762f9e7d9741b7488bf752d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b5f581cdbba4f24c762f9e7d9741b7488bf752d7"}], "stats": {"total": 75, "additions": 64, "deletions": 11}, "files": [{"sha": "ba6055d08270538fa4455db3f672edd47fb04bab", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2c54c951479b2eb5315f859a7035f48a3256c50/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2c54c951479b2eb5315f859a7035f48a3256c50/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=a2c54c951479b2eb5315f859a7035f48a3256c50", "patch": "@@ -1,3 +1,10 @@\n+2018-11-14  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* sem_ch6.adb (Analyze_Null_Procedure): Capture Ghost and\n+\tSPARK-related global state at the start of the routine. Set the\n+\tGhost mode of the completed spec if any.  Restore the saved\n+\tGhost and SPARK-related global state on exit from the routine.\n+\n 2018-11-14  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* doc/gnat_ugn/building_executable_programs_with_gnat.rst"}, {"sha": "e7b90b7782a8cb839f1521a48f241dfaade1f8a1", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 36, "deletions": 11, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2c54c951479b2eb5315f859a7035f48a3256c50/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2c54c951479b2eb5315f859a7035f48a3256c50/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=a2c54c951479b2eb5315f859a7035f48a3256c50", "patch": "@@ -1396,19 +1396,41 @@ package body Sem_Ch6 is\n    -- Analyze_Null_Procedure --\n    ----------------------------\n \n+   --  WARNING: This routine manages Ghost regions. Return statements must be\n+   --  replaced by gotos that jump to the end of the routine and restore the\n+   --  Ghost mode.\n+\n    procedure Analyze_Null_Procedure\n      (N             : Node_Id;\n       Is_Completion : out Boolean)\n    is\n-      Loc        : constant Source_Ptr := Sloc (N);\n-      Spec       : constant Node_Id    := Specification (N);\n+      Loc  : constant Source_Ptr := Sloc (N);\n+      Spec : constant Node_Id    := Specification (N);\n+\n+      Saved_GM   : constant Ghost_Mode_Type := Ghost_Mode;\n+      Saved_IGR  : constant Node_Id         := Ignored_Ghost_Region;\n+      Saved_ISMP : constant Boolean         :=\n+                     Ignore_SPARK_Mode_Pragmas_In_Instance;\n+      --  Save the Ghost and SPARK mode-related data to restore on exit\n+\n       Designator : Entity_Id;\n       Form       : Node_Id;\n       Null_Body  : Node_Id := Empty;\n       Null_Stmt  : Node_Id := Null_Statement (Spec);\n       Prev       : Entity_Id;\n \n    begin\n+      Prev := Current_Entity_In_Scope (Defining_Entity (Spec));\n+\n+      --  A null procedure is Ghost when it is stand-alone and is subject to\n+      --  pragma Ghost, or when the corresponding spec is Ghost. Set the mode\n+      --  now, to ensure that any nodes generated during analysis and expansion\n+      --  are properly marked as Ghost.\n+\n+      if Present (Prev) then\n+         Mark_And_Set_Ghost_Body (N, Prev);\n+      end if;\n+\n       --  Capture the profile of the null procedure before analysis, for\n       --  expansion at the freeze point and at each point of call. The body is\n       --  used if the procedure has preconditions, or if it is a completion. In\n@@ -1453,16 +1475,15 @@ package body Sem_Ch6 is\n       --  and set minimal semantic information on the original declaration,\n       --  which is rewritten as a null statement.\n \n-      Prev := Current_Entity_In_Scope (Defining_Entity (Spec));\n-\n       if Present (Prev) and then Is_Generic_Subprogram (Prev) then\n          Insert_Before (N, Null_Body);\n          Set_Ekind (Defining_Entity (N), Ekind (Prev));\n \n          Rewrite (N, Make_Null_Statement (Loc));\n          Analyze_Generic_Subprogram_Body (Null_Body, Prev);\n          Is_Completion := True;\n-         return;\n+\n+         goto Leave;\n \n       else\n          --  Resolve the types of the formals now, because the freeze point may\n@@ -1535,6 +1556,10 @@ package body Sem_Ch6 is\n          Rewrite (N, Null_Body);\n          Analyze (N);\n       end if;\n+\n+   <<Leave>>\n+      Ignore_SPARK_Mode_Pragmas_In_Instance := Saved_ISMP;\n+      Restore_Ghost_Region (Saved_GM, Saved_IGR);\n    end Analyze_Null_Procedure;\n \n    -----------------------------\n@@ -1583,7 +1608,7 @@ package body Sem_Ch6 is\n    ----------------------------\n \n    --  WARNING: This routine manages Ghost regions. Return statements must be\n-   --  replaced by gotos which jump to the end of the routine and restore the\n+   --  replaced by gotos that jump to the end of the routine and restore the\n    --  Ghost mode.\n \n    procedure Analyze_Procedure_Call (N : Node_Id) is\n@@ -2249,7 +2274,7 @@ package body Sem_Ch6 is\n    --  the subprogram, or to perform conformance checks.\n \n    --  WARNING: This routine manages Ghost regions. Return statements must be\n-   --  replaced by gotos which jump to the end of the routine and restore the\n+   --  replaced by gotos that jump to the end of the routine and restore the\n    --  Ghost mode.\n \n    procedure Analyze_Subprogram_Body_Helper (N : Node_Id) is\n@@ -3394,7 +3419,7 @@ package body Sem_Ch6 is\n          if Is_Generic_Subprogram (Prev_Id) then\n             Spec_Id := Prev_Id;\n \n-            --  A subprogram body is Ghost when it is stand alone and subject\n+            --  A subprogram body is Ghost when it is stand-alone and subject\n             --  to pragma Ghost or when the corresponding spec is Ghost. Set\n             --  the mode now to ensure that any nodes generated during analysis\n             --  and expansion are properly marked as Ghost.\n@@ -3446,7 +3471,7 @@ package body Sem_Ch6 is\n             if Is_Private_Concurrent_Primitive (Body_Id) then\n                Spec_Id := Disambiguate_Spec;\n \n-               --  A subprogram body is Ghost when it is stand alone and\n+               --  A subprogram body is Ghost when it is stand-alone and\n                --  subject to pragma Ghost or when the corresponding spec is\n                --  Ghost. Set the mode now to ensure that any nodes generated\n                --  during analysis and expansion are properly marked as Ghost.\n@@ -3462,7 +3487,7 @@ package body Sem_Ch6 is\n             else\n                Spec_Id := Find_Corresponding_Spec (N);\n \n-               --  A subprogram body is Ghost when it is stand alone and\n+               --  A subprogram body is Ghost when it is stand-alone and\n                --  subject to pragma Ghost or when the corresponding spec is\n                --  Ghost. Set the mode now to ensure that any nodes generated\n                --  during analysis and expansion are properly marked as Ghost.\n@@ -3569,7 +3594,7 @@ package body Sem_Ch6 is\n          else\n             Spec_Id := Corresponding_Spec (N);\n \n-            --  A subprogram body is Ghost when it is stand alone and subject\n+            --  A subprogram body is Ghost when it is stand-alone and subject\n             --  to pragma Ghost or when the corresponding spec is Ghost. Set\n             --  the mode now to ensure that any nodes generated during analysis\n             --  and expansion are properly marked as Ghost."}, {"sha": "b7373c9de8fd8848886c1401fa4f6f04fc350088", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2c54c951479b2eb5315f859a7035f48a3256c50/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2c54c951479b2eb5315f859a7035f48a3256c50/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a2c54c951479b2eb5315f859a7035f48a3256c50", "patch": "@@ -1,3 +1,7 @@\n+2018-11-14  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* gnat.dg/ghost1.adb, gnat.dg/ghost1.ads: New testcase.\n+\n 2018-11-14  Javier Miranda  <miranda@adacore.com>\n \n \t* gnat.dg/equal5.adb, gnat.dg/equal5.ads: New testcase."}, {"sha": "7a2c5518dd77451fbd8961d5c74ca44182ba9ffb", "filename": "gcc/testsuite/gnat.dg/ghost1.adb", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2c54c951479b2eb5315f859a7035f48a3256c50/gcc%2Ftestsuite%2Fgnat.dg%2Fghost1.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2c54c951479b2eb5315f859a7035f48a3256c50/gcc%2Ftestsuite%2Fgnat.dg%2Fghost1.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fghost1.adb?ref=a2c54c951479b2eb5315f859a7035f48a3256c50", "patch": "@@ -0,0 +1,8 @@\n+--  { dg-do compile }\n+\n+package body Ghost1 is\n+   procedure Body_Only (Obj : Ghost_Typ) is null\n+     with Ghost;\n+\n+   procedure Spec_And_Body (Obj : Ghost_Typ) is null;\n+end Ghost1;"}, {"sha": "afbcc2fbf18025b4ef7c7b32b75686c86eb0778e", "filename": "gcc/testsuite/gnat.dg/ghost1.ads", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2c54c951479b2eb5315f859a7035f48a3256c50/gcc%2Ftestsuite%2Fgnat.dg%2Fghost1.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2c54c951479b2eb5315f859a7035f48a3256c50/gcc%2Ftestsuite%2Fgnat.dg%2Fghost1.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fghost1.ads?ref=a2c54c951479b2eb5315f859a7035f48a3256c50", "patch": "@@ -0,0 +1,9 @@\n+package Ghost1 is\n+   type Ghost_Typ is record\n+      Data : Integer;\n+   end record\n+     with Ghost;\n+\n+   procedure Spec_And_Body (Obj : Ghost_Typ)\n+     with Ghost;\n+end Ghost1;"}]}