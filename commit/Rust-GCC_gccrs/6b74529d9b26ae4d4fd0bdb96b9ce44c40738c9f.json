{"sha": "6b74529d9b26ae4d4fd0bdb96b9ce44c40738c9f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmI3NDUyOWQ5YjI2YWU0ZDRmZDBiZGI5NmI5Y2U0NGM0MDczOGM5Zg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2012-09-27T10:48:07Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2012-09-27T10:48:07Z"}, "message": "re PR target/54703 (_mm_sub_pd is incorrectly substituted with vandnps)\n\n\tPR target/54703\n\t* simplify-rtx.c (simplify_binary_operation_1): Perform\n\t(x - (x & y)) -> (x & ~y) optimization only for integral\n\tmodes.\n\n\t* gcc.target/i386/pr54703.c: New test.\n\nFrom-SVN: r191801", "tree": {"sha": "a5150089f8e48540b0049e8de73fc0d5117fbf56", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a5150089f8e48540b0049e8de73fc0d5117fbf56"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6b74529d9b26ae4d4fd0bdb96b9ce44c40738c9f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b74529d9b26ae4d4fd0bdb96b9ce44c40738c9f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b74529d9b26ae4d4fd0bdb96b9ce44c40738c9f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b74529d9b26ae4d4fd0bdb96b9ce44c40738c9f/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e481cda684ff01bab0d4c1d3813dbfc92557182e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e481cda684ff01bab0d4c1d3813dbfc92557182e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e481cda684ff01bab0d4c1d3813dbfc92557182e"}], "stats": {"total": 50, "additions": 49, "deletions": 1}, "files": [{"sha": "747039adfcef83491887f54789abdcc6ddcc568b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b74529d9b26ae4d4fd0bdb96b9ce44c40738c9f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b74529d9b26ae4d4fd0bdb96b9ce44c40738c9f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6b74529d9b26ae4d4fd0bdb96b9ce44c40738c9f", "patch": "@@ -1,3 +1,10 @@\n+2012-09-27  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/54703\n+\t* simplify-rtx.c (simplify_binary_operation_1): Perform\n+\t(x - (x & y)) -> (x & ~y) optimization only for integral\n+\tmodes.\n+\n 2012-09-27  Marc Glisse  <marc.glisse@inria.fr>\n \n \tPR c/53024"}, {"sha": "af85ccc0836858895a4599be4386e6a1665d6bec", "filename": "gcc/simplify-rtx.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b74529d9b26ae4d4fd0bdb96b9ce44c40738c9f/gcc%2Fsimplify-rtx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b74529d9b26ae4d4fd0bdb96b9ce44c40738c9f/gcc%2Fsimplify-rtx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsimplify-rtx.c?ref=6b74529d9b26ae4d4fd0bdb96b9ce44c40738c9f", "patch": "@@ -2239,7 +2239,7 @@ simplify_binary_operation_1 (enum rtx_code code, enum machine_mode mode,\n \t\t\t\t    neg_const_int (mode, op1));\n \n       /* (x - (x & y)) -> (x & ~y) */\n-      if (GET_CODE (op1) == AND)\n+      if (INTEGRAL_MODE_P (mode) && GET_CODE (op1) == AND)\n \t{\n \t  if (rtx_equal_p (op0, XEXP (op1, 0)))\n \t    {"}, {"sha": "c23166ee24a82bb545709169009b0dd792a6194d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b74529d9b26ae4d4fd0bdb96b9ce44c40738c9f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b74529d9b26ae4d4fd0bdb96b9ce44c40738c9f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6b74529d9b26ae4d4fd0bdb96b9ce44c40738c9f", "patch": "@@ -1,3 +1,8 @@\n+2012-09-27  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/54703\n+\t* gcc.target/i386/pr54703.c: New test.\n+\n 2012-09-27  Richard Guenther  <rguenther@suse.de>\n \n \tPR lto/54709"}, {"sha": "e30c293c0766b18c78ca21a7626419f08f9ece7f", "filename": "gcc/testsuite/gcc.target/i386/pr54703.c", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b74529d9b26ae4d4fd0bdb96b9ce44c40738c9f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr54703.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b74529d9b26ae4d4fd0bdb96b9ce44c40738c9f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr54703.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr54703.c?ref=6b74529d9b26ae4d4fd0bdb96b9ce44c40738c9f", "patch": "@@ -0,0 +1,36 @@\n+/* PR target/54703 */\n+/* { dg-do run { target sse2_runtime } } */\n+/* { dg-options \"-O -msse2\" } */\n+/* { dg-additional-options \"-mavx -mtune=bdver1\" { target avx_runtime } } */\n+\n+extern void abort (void);\n+typedef double V __attribute__((vector_size(16)));\n+\n+union {\n+  unsigned long long m[2];\n+  V v;\n+} u = { { 0xffffffffff000000ULL, 0xffffffffff000000ULL } };\n+\n+static inline V\n+foo (V x)\n+{\n+  V y = __builtin_ia32_andpd (x, u.v);\n+  V z = __builtin_ia32_subpd (x, y);\n+  return __builtin_ia32_mulpd (y, z);\n+}\n+\n+void\n+test (V *x)\n+{\n+  V a = { 2.1, 2.1 };\n+  *x = foo (foo (a));\n+}\n+\n+int\n+main ()\n+{\n+  test (&u.v);\n+  if (u.m[0] != 0x3acbf487f0a30550ULL || u.m[1] != u.m[0])\n+    abort ();\n+  return 0;\n+}"}]}