{"sha": "7463703395236ab469763dc332aaa7b615547fbf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzQ2MzcwMzM5NTIzNmFiNDY5NzYzZGMzMzJhYWE3YjYxNTU0N2ZiZg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-03-14T14:37:43Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-03-14T14:37:43Z"}, "message": "(simplify_plus_minus): Reject \"simplifications\" that are too complex\nin form.\n\nFrom-SVN: r3733", "tree": {"sha": "5661855f10caf1f29978357988097164f23b8b0a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5661855f10caf1f29978357988097164f23b8b0a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7463703395236ab469763dc332aaa7b615547fbf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7463703395236ab469763dc332aaa7b615547fbf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7463703395236ab469763dc332aaa7b615547fbf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7463703395236ab469763dc332aaa7b615547fbf/comments", "author": null, "committer": null, "parents": [{"sha": "5931019b79cac956f09601b80f941ad5989f4c75", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5931019b79cac956f09601b80f941ad5989f4c75", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5931019b79cac956f09601b80f941ad5989f4c75"}], "stats": {"total": 12, "additions": 11, "deletions": 1}, "files": [{"sha": "9187d6f938ccf08a33d272430b6d6df4f47b3d09", "filename": "gcc/cse.c", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7463703395236ab469763dc332aaa7b615547fbf/gcc%2Fcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7463703395236ab469763dc332aaa7b615547fbf/gcc%2Fcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.c?ref=7463703395236ab469763dc332aaa7b615547fbf", "patch": "@@ -4015,7 +4015,17 @@ simplify_plus_minus (code, mode, op0, op1)\n \t\tncode = MINUS;\n \n \t      tem = simplify_binary_operation (ncode, mode, lhs, rhs);\n-\t      if (tem)\n+\n+\t      /* If we got a simple object, a SUBREG of a simple\n+\t\t object, or a NEG, use it.  Otherwise, we either got nothing\n+\t\t or we got something (like a NOT), which can cause an\n+\t\t infinite loop.  */\n+\n+\t      if (tem != 0\n+\t\t  && ((GET_CODE (tem) == SUBREG\n+\t\t       && GET_RTX_CLASS (GET_CODE (SUBREG_REG (tem))) == 'o')\n+\t\t      || GET_CODE (tem) == NEG\n+\t\t      || GET_RTX_CLASS (GET_CODE (tem)) == 'o'))\n \t\t{\n \t\t  ops[i] = tem, ops[j] = 0;\n \t\t  negs[i] = negs[i] && negs[j];"}]}