{"sha": "0760c3805d97a3c1554d95e982d86d096952e873", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDc2MGMzODA1ZDk3YTNjMTU1NGQ5NWU5ODJkODZkMDk2OTUyZTg3Mw==", "commit": {"author": {"name": "Paul Brook", "email": "pbrook@gcc.gnu.org", "date": "2004-06-09T00:37:20Z"}, "committer": {"name": "Paul Brook", "email": "pbrook@gcc.gnu.org", "date": "2004-06-09T00:37:20Z"}, "message": "* gfortran.fortran-torture/execure/intrinsic_associated.f90\n\t(pointer_to_section): Rewrite to use smaller array.\n\nFrom-SVN: r82805", "tree": {"sha": "45465b9787b29fc7c7a0a7cae1f09ce3d9b5c447", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/45465b9787b29fc7c7a0a7cae1f09ce3d9b5c447"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0760c3805d97a3c1554d95e982d86d096952e873", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0760c3805d97a3c1554d95e982d86d096952e873", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0760c3805d97a3c1554d95e982d86d096952e873", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0760c3805d97a3c1554d95e982d86d096952e873/comments", "author": null, "committer": null, "parents": [{"sha": "03febbee849aff83a570f223ad9a3f2425ac3177", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03febbee849aff83a570f223ad9a3f2425ac3177", "html_url": "https://github.com/Rust-GCC/gccrs/commit/03febbee849aff83a570f223ad9a3f2425ac3177"}], "stats": {"total": 92, "additions": 47, "deletions": 45}, "files": [{"sha": "175edd483a3ac576f5e9cbda3a342420b888b8bf", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 30, "deletions": 25, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0760c3805d97a3c1554d95e982d86d096952e873/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0760c3805d97a3c1554d95e982d86d096952e873/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0760c3805d97a3c1554d95e982d86d096952e873", "patch": "@@ -1,30 +1,35 @@\n+2004-06-09  Paul Brook  <paul@codesourcery.com>\n+\n+\t* gfortran.fortran-torture/execure/intrinsic_associated.f90\n+\t(pointer_to_section): Rewrite to use smaller array.\n+\n 2004-06-08  David Edelsohn  <edelsohn@gnu.org>\n \n-        * gcc.dg/ext/altivec-1.c: XFAIL powerpc-ibm-aix*.\n-        * gcc.dg/ext/altivec-10.c: Same.\n-        * gcc.dg/ext/altivec-11.c: Same.\n-        * gcc.dg/ext/altivec-12.c: Same.\n-        * gcc.dg/ext/altivec-13.c: Same.\n-        * gcc.dg/ext/altivec-14.c: Same.\n-        * gcc.dg/ext/altivec-15.c: Same.\n-        * gcc.dg/ext/altivec-16.c: Same.\n-        * gcc.dg/ext/altivec-3.c: Same.\n-        * gcc.dg/ext/altivec-4.c: Same.\n-        * gcc.dg/ext/altivec-6.c: Same.\n-        * gcc.dg/ext/altivec-7.c: Same.\n-        * gcc.dg/ext/altivec-8.c: Same.\n-        * gcc.dg/ext/altivec-varargs-1.c: Same.\n-\n-        * g++.dg/ext/altivec-1.C: Correct dg syntax.\n-        * g++.dg/ext/altivec-10.C: Same.\n-        * g++.dg/ext/altivec-2.C: Same.\n-        * g++.dg/ext/altivec-3.C: Same.\n-        * g++.dg/ext/altivec-4.C: Same.\n-        * g++.dg/ext/altivec-5.C: Same.\n-        * g++.dg/ext/altivec-6.C: Same.\n-        * g++.dg/ext/altivec-7.C: Same.\n-        * g++.dg/ext/altivec-8.C: Same.\n-        * g++.dg/ext/altivec-9.C: Same.\n+\t* gcc.dg/ext/altivec-1.c: XFAIL powerpc-ibm-aix*.\n+\t* gcc.dg/ext/altivec-10.c: Same.\n+\t* gcc.dg/ext/altivec-11.c: Same.\n+\t* gcc.dg/ext/altivec-12.c: Same.\n+\t* gcc.dg/ext/altivec-13.c: Same.\n+\t* gcc.dg/ext/altivec-14.c: Same.\n+\t* gcc.dg/ext/altivec-15.c: Same.\n+\t* gcc.dg/ext/altivec-16.c: Same.\n+\t* gcc.dg/ext/altivec-3.c: Same.\n+\t* gcc.dg/ext/altivec-4.c: Same.\n+\t* gcc.dg/ext/altivec-6.c: Same.\n+\t* gcc.dg/ext/altivec-7.c: Same.\n+\t* gcc.dg/ext/altivec-8.c: Same.\n+\t* gcc.dg/ext/altivec-varargs-1.c: Same.\n+\n+\t* g++.dg/ext/altivec-1.C: Correct dg syntax.\n+\t* g++.dg/ext/altivec-10.C: Same.\n+\t* g++.dg/ext/altivec-2.C: Same.\n+\t* g++.dg/ext/altivec-3.C: Same.\n+\t* g++.dg/ext/altivec-4.C: Same.\n+\t* g++.dg/ext/altivec-5.C: Same.\n+\t* g++.dg/ext/altivec-6.C: Same.\n+\t* g++.dg/ext/altivec-7.C: Same.\n+\t* g++.dg/ext/altivec-8.C: Same.\n+\t* g++.dg/ext/altivec-9.C: Same.\n \n 2004-06-08  Giovanni Bajo  <giovannibajo@gcc.gnu.org>\n "}, {"sha": "f0518deac080de99e57af8b101e703e27a7aa298", "filename": "gcc/testsuite/gfortran.fortran-torture/execute/intrinsic_associated.f90", "status": "modified", "additions": 17, "deletions": 20, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0760c3805d97a3c1554d95e982d86d096952e873/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fexecute%2Fintrinsic_associated.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0760c3805d97a3c1554d95e982d86d096952e873/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fexecute%2Fintrinsic_associated.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fexecute%2Fintrinsic_associated.f90?ref=0760c3805d97a3c1554d95e982d86d096952e873", "patch": "@@ -7,33 +7,30 @@ program intrinsic_associated\n end\n  \n subroutine pointer_to_section ()\n-   integer, dimension(100, 100), target :: xy\n+   integer, dimension(5, 5), target :: xy\n    integer, dimension(:, :), pointer :: window\n-   integer i, j, k, m, n\n-   data xy /10000*0/\n+   data xy /25*0/\n    logical t\n \n-   window => xy(10:50, 30:60)\n+   window => xy(2:4, 3:4)\n    window = 10\n    window (1, 1) = 0101\n-   window (41, 31) = 4161\n-   window (41, 1) = 4101\n-   window (1, 31) = 0161\n+   window (3, 2) = 4161\n+   window (3, 1) = 4101\n+   window (1, 2) = 0161\n \n-   t = associated (window, xy(10:50, 30:60))\n+   t = associated (window, xy(2:4, 3:4))\n    if (.not.t) call abort ()\n-   if (window(1, 1) .ne. xy(10, 30)) call abort ()\n-   if (window(41, 31) .ne. xy(50, 60)) call abort ()\n-   if (window(1, 31) .ne. xy(10, 60)) call abort ()\n-   if (window(41, 1) .ne. xy(50, 30)) call abort ()\n-   if (xy(9, 29) .ne. 0) call abort ()\n-   if (xy(51,29 ) .ne. 0) call abort ()\n-   if (xy(9, 60) .ne. 0) call abort ()\n-   if (xy(51, 60) .ne. 0) call abort ()\n-   if (xy(11, 31) .ne. 10) call abort ()\n-   if (xy(49, 59) .ne. 10) call abort ()\n-   if (xy(11, 59) .ne. 10) call abort ()\n-   if (xy(49, 31) .ne. 10) call abort ()\n+   ! Check that none of the array got mangled\n+   if ((xy(2, 3) .ne. 0101) .or. (xy (4, 4) .ne. 4161) &\n+       .or. (xy(4, 3) .ne. 4101) .or. (xy (2, 4) .ne. 0161)) call abort ()\n+   if (any (xy(:, 1:2) .ne. 0)) call abort ()\n+   if (any (xy(:, 5) .ne. 0)) call abort ()\n+   if (any (xy (1, 3:4) .ne. 0)) call abort ()\n+   if (any (xy (5, 3:4) .ne. 0)) call abort ()\n+   if (xy(3, 3) .ne. 10) call abort ()\n+   if (xy(3, 4) .ne. 10) call abort ()\n+   if (any (xy(2:4, 3:4) .ne. window)) call abort ()\n end\n \n subroutine sub1 (a, ap)"}]}