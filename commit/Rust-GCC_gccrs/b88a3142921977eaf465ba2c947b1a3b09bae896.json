{"sha": "b88a3142921977eaf465ba2c947b1a3b09bae896", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yjg4YTMxNDI5MjE5NzdlYWY0NjViYTJjOTQ3YjFhM2IwOWJhZTg5Ng==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-09-27T22:29:21Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-09-27T22:29:21Z"}, "message": "(optimize_bit_field): Put any insns made by change_address in front of INSN.\n\n(expand_function_end): Don't pass DECL_INITIAL to setjmp_protect if it is\nerror_mark_node.\n\nFrom-SVN: r8146", "tree": {"sha": "5cf8244d4e0e795f023d60633bd5f6292e244387", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5cf8244d4e0e795f023d60633bd5f6292e244387"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b88a3142921977eaf465ba2c947b1a3b09bae896", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b88a3142921977eaf465ba2c947b1a3b09bae896", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b88a3142921977eaf465ba2c947b1a3b09bae896", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b88a3142921977eaf465ba2c947b1a3b09bae896/comments", "author": null, "committer": null, "parents": [{"sha": "5b065c2142e716bad47cacb9d710a1243491d796", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b065c2142e716bad47cacb9d710a1243491d796", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b065c2142e716bad47cacb9d710a1243491d796"}], "stats": {"total": 12, "additions": 10, "deletions": 2}, "files": [{"sha": "ec83bab850846283b5e661e32435a8a597c6808f", "filename": "gcc/function.c", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b88a3142921977eaf465ba2c947b1a3b09bae896/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b88a3142921977eaf465ba2c947b1a3b09bae896/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=b88a3142921977eaf465ba2c947b1a3b09bae896", "patch": "@@ -2192,6 +2192,8 @@ optimize_bit_field (body, insn, equiv_mem)\n \t     and then for which byte of the word is wanted.  */\n \n \t  register int offset = INTVAL (XEXP (bitfield, 2));\n+\t  rtx insns;\n+\n \t  /* Adjust OFFSET to count bits from low-address byte.  */\n #if BITS_BIG_ENDIAN != BYTES_BIG_ENDIAN\n \t  offset = (GET_MODE_BITSIZE (GET_MODE (XEXP (bitfield, 0)))\n@@ -2210,8 +2212,12 @@ optimize_bit_field (body, insn, equiv_mem)\n #endif\n \t    }\n \n-\t  memref = change_address (memref, mode, \n+\t  start_sequence ();\n+\t  memref = change_address (memref, mode,\n \t\t\t\t   plus_constant (XEXP (memref, 0), offset));\n+\t  insns = get_insns ();\n+\t  end_sequence ();\n+\t  emit_insns_before (insns, insn);\n \n \t  /* Store this memory reference where\n \t     we found the bit field reference.  */\n@@ -5064,7 +5070,9 @@ expand_function_end (filename, line, end_bindings)\n      on a machine that fails to restore the registers.  */\n   if (NON_SAVING_SETJMP && current_function_calls_setjmp)\n     {\n-      setjmp_protect (DECL_INITIAL (current_function_decl));\n+      if (DECL_INITIAL (current_function_decl) != error_mark_node)\n+\tsetjmp_protect (DECL_INITIAL (current_function_decl));\n+\n       setjmp_protect_args ();\n     }\n #endif"}]}