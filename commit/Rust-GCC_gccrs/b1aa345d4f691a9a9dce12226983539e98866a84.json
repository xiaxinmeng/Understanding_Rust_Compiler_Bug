{"sha": "b1aa345d4f691a9a9dce12226983539e98866a84", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjFhYTM0NWQ0ZjY5MWE5YTlkY2UxMjIyNjk4MzUzOWU5ODg2NmE4NA==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-04-13T20:33:27Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-04-13T20:33:27Z"}, "message": "Comment change.\n\nFrom-SVN: r4130", "tree": {"sha": "f94dd4c8c52da54388157e83dd93792c8f00a470", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f94dd4c8c52da54388157e83dd93792c8f00a470"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b1aa345d4f691a9a9dce12226983539e98866a84", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1aa345d4f691a9a9dce12226983539e98866a84", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1aa345d4f691a9a9dce12226983539e98866a84", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1aa345d4f691a9a9dce12226983539e98866a84/comments", "author": null, "committer": null, "parents": [{"sha": "0b1dffa7f1351a87825d01136ed64575f3b0aae5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b1dffa7f1351a87825d01136ed64575f3b0aae5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b1dffa7f1351a87825d01136ed64575f3b0aae5"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "a7994aead79235a17dfaf32062ca6fbf71420b1f", "filename": "gcc/fold-const.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1aa345d4f691a9a9dce12226983539e98866a84/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1aa345d4f691a9a9dce12226983539e98866a84/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=b1aa345d4f691a9a9dce12226983539e98866a84", "patch": "@@ -1628,6 +1628,9 @@ non_lvalue (x)\n     {\n       if (TREE_CODE (x) == INTEGER_CST && integer_zerop (x))\n \t{\n+\t  /* Use NOP_EXPR instead of NON_LVALUE_EXPR\n+\t     so convert_for_assignment won't strip it.\n+\t     This is so this 0 won't be treated as a null pointer constant.  */\n \t  result = build1 (NOP_EXPR, TREE_TYPE (x), x);\n \t  TREE_CONSTANT (result) = TREE_CONSTANT (x);\n \t  return result;"}]}