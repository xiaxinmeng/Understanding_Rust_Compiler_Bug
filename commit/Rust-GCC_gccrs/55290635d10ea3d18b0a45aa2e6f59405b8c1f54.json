{"sha": "55290635d10ea3d18b0a45aa2e6f59405b8c1f54", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTUyOTA2MzVkMTBlYTNkMThiMGE0NWFhMmU2ZjU5NDA1YjhjMWY1NA==", "commit": {"author": {"name": "liuhongt", "email": "hongtao.liu@intel.com", "date": "2020-08-18T07:06:01Z"}, "committer": {"name": "liuhongt", "email": "hongtao.liu@intel.com", "date": "2020-08-26T02:04:53Z"}, "message": "Adjust testcase.\n\nRewriting testcase with cpp source file, then compare operator could\nbe used directly for vector, this would avoid impact of vectorizer.\n\ngcc/testsuite/ChangeLog:\n\tPR target/96667\n\t* gcc.target/i386/avx512bw-pr96246-1.c: Moved to...\n\t* g++.target/i386/avx512bw-pr96246-1.C: ...here.\n\t* gcc.target/i386/avx512bw-pr96246-2.c: Moved to...\n\t* g++.target/i386/avx512bw-pr96246-2.C: ...here.\n\t* gcc.target/i386/avx512vl-pr96246-1.c: Moved to...\n\t* g++.target/i386/avx512vl-pr96246-1.C: ...here.\n\t* gcc.target/i386/avx512vl-pr96246-2.c: Moved to...\n\t* g++.target/i386/avx512vl-pr96246-2.C: ...here.", "tree": {"sha": "176d75b743e37cefa36b9973414fd3ec6411f2a0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/176d75b743e37cefa36b9973414fd3ec6411f2a0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/55290635d10ea3d18b0a45aa2e6f59405b8c1f54", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55290635d10ea3d18b0a45aa2e6f59405b8c1f54", "html_url": "https://github.com/Rust-GCC/gccrs/commit/55290635d10ea3d18b0a45aa2e6f59405b8c1f54", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55290635d10ea3d18b0a45aa2e6f59405b8c1f54/comments", "author": {"login": "algebra84", "id": 22926165, "node_id": "MDQ6VXNlcjIyOTI2MTY1", "avatar_url": "https://avatars.githubusercontent.com/u/22926165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/algebra84", "html_url": "https://github.com/algebra84", "followers_url": "https://api.github.com/users/algebra84/followers", "following_url": "https://api.github.com/users/algebra84/following{/other_user}", "gists_url": "https://api.github.com/users/algebra84/gists{/gist_id}", "starred_url": "https://api.github.com/users/algebra84/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/algebra84/subscriptions", "organizations_url": "https://api.github.com/users/algebra84/orgs", "repos_url": "https://api.github.com/users/algebra84/repos", "events_url": "https://api.github.com/users/algebra84/events{/privacy}", "received_events_url": "https://api.github.com/users/algebra84/received_events", "type": "User", "site_admin": false}, "committer": {"login": "algebra84", "id": 22926165, "node_id": "MDQ6VXNlcjIyOTI2MTY1", "avatar_url": "https://avatars.githubusercontent.com/u/22926165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/algebra84", "html_url": "https://github.com/algebra84", "followers_url": "https://api.github.com/users/algebra84/followers", "following_url": "https://api.github.com/users/algebra84/following{/other_user}", "gists_url": "https://api.github.com/users/algebra84/gists{/gist_id}", "starred_url": "https://api.github.com/users/algebra84/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/algebra84/subscriptions", "organizations_url": "https://api.github.com/users/algebra84/orgs", "repos_url": "https://api.github.com/users/algebra84/repos", "events_url": "https://api.github.com/users/algebra84/events{/privacy}", "received_events_url": "https://api.github.com/users/algebra84/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2fc201382d3498778934f1262b57acd20f76f300", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2fc201382d3498778934f1262b57acd20f76f300", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2fc201382d3498778934f1262b57acd20f76f300"}], "stats": {"total": 62, "additions": 18, "deletions": 44}, "files": [{"sha": "eec844460f1a3325b9d81035249500874cf0dfdc", "filename": "gcc/testsuite/g++.target/i386/avx512bw-pr96246-1.C", "status": "renamed", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55290635d10ea3d18b0a45aa2e6f59405b8c1f54/gcc%2Ftestsuite%2Fg%2B%2B.target%2Fi386%2Favx512bw-pr96246-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55290635d10ea3d18b0a45aa2e6f59405b8c1f54/gcc%2Ftestsuite%2Fg%2B%2B.target%2Fi386%2Favx512bw-pr96246-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Fi386%2Favx512bw-pr96246-1.C?ref=55290635d10ea3d18b0a45aa2e6f59405b8c1f54", "patch": "@@ -1,8 +1,8 @@\n /* PR target/96246 */\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -ftree-vectorize -mavx512bw\" } */\n-/* { dg-final { scan-assembler-times \"vpblendm\\[bwdq\\]\\[\\t ]\" 4 } } */\n-/* { dg-final { scan-assembler-times \"vblendmp\\[sd\\]\\[\\t ]\" 2 } } */\n+/* { dg-options \"-O2 -std=c++14 -mavx512bw\" } */\n+/* { dg-final { scan-assembler-times \"vpblendm\\[bwdq\\]\\[\\t \\]\" 4 } } */\n+/* { dg-final { scan-assembler-times \"vblendmp\\[sd\\]\\[\\t \\]\" 2 } } */\n \n typedef char v64qi __attribute__((vector_size (64)));\n typedef short v32hi __attribute__((vector_size (64)));\n@@ -16,10 +16,7 @@ typedef double v8df __attribute__((vector_size (64)));\n   __attribute__ ((noipa))\t\t\t\t\\\n   foo_##vtype (vtype a, vtype b, vtype c, vtype d)\t\\\n   {\t\t\t\t\t\t\t\\\n-    vtype e;\t\t\t\t\t\t\\\n-    for (int i = 0; i != num; i++)\t\t\t\\\n-      e[i] = a[i] > b[i] ? c[i] : d[i];\t\t\t\\\n-    return e;\t\t\t\t\t\t\\\n+    return a > b ? c : d;\t\t\t\t\\\n   }\n \n COMPILE_TEST (v64qi, 64);", "previous_filename": "gcc/testsuite/gcc.target/i386/avx512bw-pr96246-1.c"}, {"sha": "b96b7c7c9322143e56d279c7cce1cd0acf30e978", "filename": "gcc/testsuite/g++.target/i386/avx512bw-pr96246-2.C", "status": "renamed", "additions": 5, "deletions": 15, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55290635d10ea3d18b0a45aa2e6f59405b8c1f54/gcc%2Ftestsuite%2Fg%2B%2B.target%2Fi386%2Favx512bw-pr96246-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55290635d10ea3d18b0a45aa2e6f59405b8c1f54/gcc%2Ftestsuite%2Fg%2B%2B.target%2Fi386%2Favx512bw-pr96246-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Fi386%2Favx512bw-pr96246-2.C?ref=55290635d10ea3d18b0a45aa2e6f59405b8c1f54", "patch": "@@ -1,19 +1,9 @@\n /* PR target/96246 */\n /* { dg-do run } */\n /* { dg-require-effective-target avx512bw } */\n-/* { dg-options \"-Ofast -mavx512bw\" } */\n+/* { dg-options \"-O2 -std=c++14 -mavx512bw\" } */\n \n-#ifndef CHECK\n-#define CHECK \"avx512f-helper.h\"\n-#endif\n-\n-#include CHECK\n-\n-#ifndef TEST\n-#define TEST avx512bw_test\n-#endif\n-\n-#include \"avx512bw-pr96246-1.c\"\n+#include \"avx512bw-pr96246-1.C\"\n \n #define RUNTIME_TEST(vtype, num)\t\t\t\\\n   do\t\t\t\t\t\t\t\\\n@@ -34,14 +24,14 @@\n     }\t\t\t\t\t\t\t\\\n   while (0)\n \n-static void\n-__attribute__ ((optimize (0)))\n-TEST (void)\n+int\n+main (void)\n {\n   RUNTIME_TEST (v64qi, 64);\n   RUNTIME_TEST (v32hi, 32);\n   RUNTIME_TEST (v16si, 16);\n   RUNTIME_TEST (v8di, 8);\n   RUNTIME_TEST (v16sf, 16);\n   RUNTIME_TEST (v8df, 8);\n+  return 0;\n }", "previous_filename": "gcc/testsuite/gcc.target/i386/avx512bw-pr96246-2.c"}, {"sha": "66eb9d25f1e4b7fcaa844f187270aa68b8345918", "filename": "gcc/testsuite/g++.target/i386/avx512vl-pr96246-1.C", "status": "renamed", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55290635d10ea3d18b0a45aa2e6f59405b8c1f54/gcc%2Ftestsuite%2Fg%2B%2B.target%2Fi386%2Favx512vl-pr96246-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55290635d10ea3d18b0a45aa2e6f59405b8c1f54/gcc%2Ftestsuite%2Fg%2B%2B.target%2Fi386%2Favx512vl-pr96246-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Fi386%2Favx512vl-pr96246-1.C?ref=55290635d10ea3d18b0a45aa2e6f59405b8c1f54", "patch": "@@ -1,8 +1,8 @@\n /* PR target/96246 */\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -ftree-vectorize -mavx512bw -mavx512vl\" } */\n-/* { dg-final { scan-assembler-times \"vpblendm\\[bwdq\\]\\[\\t ]\" 6 } } */\n-/* { dg-final { scan-assembler-times \"vblendmp\\[sd\\]\\[\\t ]\" 3 } } */\n+/* { dg-options \"-O2 -std=c++14 -mavx512bw -mavx512vl\" } */\n+/* { dg-final { scan-assembler-times \"vpblendm\\[bwdq\\]\\[\\t \\]\" 6 } } */\n+/* { dg-final { scan-assembler-times \"vblendmp\\[sd\\]\\[\\t \\]\" 3 } } */\n \n typedef char v16qi __attribute__ ((vector_size (16)));\n typedef char v32qi __attribute__ ((vector_size (32)));\n@@ -19,10 +19,7 @@ typedef double v4df __attribute__((vector_size (32)));\n   __attribute__ ((noipa))\t\t\t\t\\\n   foo_##vtype (vtype a, vtype b, vtype c, vtype d)\t\\\n   {\t\t\t\t\t\t\t\\\n-    vtype e;\t\t\t\t\t\t\\\n-    for (int i = 0; i != num; i++)\t\t\t\\\n-      e[i] = a[i] > b[i] ? c[i] : d[i];\t\t\t\\\n-    return e;\t\t\t\t\t\t\\\n+    return a > b ? c : d;\t\t\t\t\\\n   }\n \n COMPILE_TEST (v16qi, 16);", "previous_filename": "gcc/testsuite/gcc.target/i386/avx512vl-pr96246-1.c"}, {"sha": "9a16f0d2c9e86f622b50863a936a5bf96257df76", "filename": "gcc/testsuite/g++.target/i386/avx512vl-pr96246-2.C", "status": "renamed", "additions": 5, "deletions": 15, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55290635d10ea3d18b0a45aa2e6f59405b8c1f54/gcc%2Ftestsuite%2Fg%2B%2B.target%2Fi386%2Favx512vl-pr96246-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55290635d10ea3d18b0a45aa2e6f59405b8c1f54/gcc%2Ftestsuite%2Fg%2B%2B.target%2Fi386%2Favx512vl-pr96246-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Fi386%2Favx512vl-pr96246-2.C?ref=55290635d10ea3d18b0a45aa2e6f59405b8c1f54", "patch": "@@ -2,19 +2,9 @@\n /* { dg-do run } */\n /* { dg-require-effective-target avx512bw } */\n /* { dg-require-effective-target avx512vl } */\n-/* { dg-options \"-Ofast -mavx512bw -mavx512vl\" } */\n+/* { dg-options \"-O2 -std=c++14 -mavx512bw -mavx512vl\" } */\n \n-#ifndef CHECK\n-#define CHECK \"avx512f-helper.h\"\n-#endif\n-\n-#include CHECK\n-\n-#ifndef TEST\n-#define TEST avx512bw_test\n-#endif\n-\n-#include \"avx512vl-pr96246-1.c\"\n+#include \"avx512vl-pr96246-1.C\"\n \n #define RUNTIME_TEST(vtype, num)\t\t\t\\\n   do\t\t\t\t\t\t\t\\\n@@ -35,9 +25,8 @@\n     }\t\t\t\t\t\t\t\\\n   while (0)\n \n-static void\n-__attribute__ ((optimize (0)))\n-TEST (void)\n+int\n+main (void)\n {\n   RUNTIME_TEST (v16qi, 16);\n   RUNTIME_TEST (v32qi, 32);\n@@ -48,4 +37,5 @@ TEST (void)\n   RUNTIME_TEST (v8sf, 8);\n   RUNTIME_TEST (v4di, 4);\n   RUNTIME_TEST (v4df, 4);\n+  return 0;\n }", "previous_filename": "gcc/testsuite/gcc.target/i386/avx512vl-pr96246-2.c"}]}