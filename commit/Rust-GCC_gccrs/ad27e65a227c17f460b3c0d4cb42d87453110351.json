{"sha": "ad27e65a227c17f460b3c0d4cb42d87453110351", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWQyN2U2NWEyMjdjMTdmNDYwYjNjMGQ0Y2I0MmQ4NzQ1MzExMDM1MQ==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2003-04-22T12:28:51Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2003-04-22T12:28:51Z"}, "message": "stddef.h: Provide C++ safe offsetof.\n\n.:\t* ginclude/stddef.h: Provide C++ safe offsetof.\ntestsuite:\n\t* g++.dg/other/offsetof2.C: New test.\n\nFrom-SVN: r65936", "tree": {"sha": "cf90264870e497c09eb9a301d929a33fbb4c69f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cf90264870e497c09eb9a301d929a33fbb4c69f2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ad27e65a227c17f460b3c0d4cb42d87453110351", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad27e65a227c17f460b3c0d4cb42d87453110351", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad27e65a227c17f460b3c0d4cb42d87453110351", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad27e65a227c17f460b3c0d4cb42d87453110351/comments", "author": null, "committer": null, "parents": [{"sha": "834277a89aec821dc2d4da5ee03a6f0ca59b2819", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/834277a89aec821dc2d4da5ee03a6f0ca59b2819", "html_url": "https://github.com/Rust-GCC/gccrs/commit/834277a89aec821dc2d4da5ee03a6f0ca59b2819"}], "stats": {"total": 63, "additions": 62, "deletions": 1}, "files": [{"sha": "d5b8370daf1a0f8ba69a001a31b801a26c37e73b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad27e65a227c17f460b3c0d4cb42d87453110351/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad27e65a227c17f460b3c0d4cb42d87453110351/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ad27e65a227c17f460b3c0d4cb42d87453110351", "patch": "@@ -1,3 +1,7 @@\n+2003-04-22  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* ginclude/stddef.h: Provide C++ safe offsetof.\n+\n 2003-04-22  J\"orn Rennecke <joern.rennecke@superh.com>\n \n \t* function.c (purge_addressof_1): In (mem (addressof (reg))) case"}, {"sha": "ad091ea1383f52fa6831b2d2484345e20fce642c", "filename": "gcc/ginclude/stddef.h", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad27e65a227c17f460b3c0d4cb42d87453110351/gcc%2Fginclude%2Fstddef.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad27e65a227c17f460b3c0d4cb42d87453110351/gcc%2Fginclude%2Fstddef.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fginclude%2Fstddef.h?ref=ad27e65a227c17f460b3c0d4cb42d87453110351", "patch": "@@ -410,8 +410,14 @@ typedef __WINT_TYPE__ wint_t;\n #ifdef _STDDEF_H\n \n /* Offset of member MEMBER in a struct of type TYPE.  */\n-\n+#ifndef __cplusplus\n #define offsetof(TYPE, MEMBER) ((size_t) &((TYPE *)0)->MEMBER)\n+#else /* C++ */\n+/* The reference cast is necessary to thwart an operator& that might\n+   be applicable to MEMBER's type.  See DR 273 for details.  */\n+#define offsetof(TYPE, MEMBER) (reinterpret_cast <size_t> \\\n+    (&reinterpret_cast <char &>(static_cast <TYPE *> (0)->MEMBER)))\n+#endif /* C++ */\n \n #endif /* _STDDEF_H was defined this time */\n "}, {"sha": "8328263e424b4b1541e42c6567ddf24c6b16e7fc", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad27e65a227c17f460b3c0d4cb42d87453110351/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad27e65a227c17f460b3c0d4cb42d87453110351/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ad27e65a227c17f460b3c0d4cb42d87453110351", "patch": "@@ -1,3 +1,7 @@\n+2003-04-22  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* g++.dg/other/offsetof2.C: New test.\n+\n 2003-04-21  Mark Mitchell  <mark@codesourcery.com>\n \n \t* g++.dg/template/recurse.C: Adjust location of error messages."}, {"sha": "3ab63981d9b35facdd5eb5b5c3eddd590e0f5d6b", "filename": "gcc/testsuite/g++.dg/other/offsetof2.C", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad27e65a227c17f460b3c0d4cb42d87453110351/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Foffsetof2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad27e65a227c17f460b3c0d4cb42d87453110351/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Foffsetof2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Foffsetof2.C?ref=ad27e65a227c17f460b3c0d4cb42d87453110351", "patch": "@@ -0,0 +1,47 @@\n+// { dg-do run }\n+// { dg-options -Wold-style-cast }\n+\n+// Copyright (C) 2003 Free Software Foundation, Inc.\n+// Contributed by Nathan Sidwell 22 Apr 2003 <nathan@codesourcery.com>\n+\n+// DR273 POD can have an operator&, offsetof is still required to work\n+\n+#include <stddef.h>\n+\n+struct POD1\n+{\n+  int m;\n+  \n+  void *operator& () const {return 0;} // yes, still a pod!\n+};\n+\n+struct POD2 \n+{\n+  int m;\n+};\n+\n+void *operator& (POD2 const &) {return 0;} // ouch!\n+\n+struct POD3 \n+{\n+  int prefix;\n+  \n+  POD1 m;\n+};\n+\n+struct POD4\n+{\n+  int prefix;\n+  \n+  POD1 m;\n+};\n+\n+int main ()\n+{\n+  if (offsetof (POD3, m) != sizeof (int))\n+    return 1;\n+  if (offsetof (POD4, m) != sizeof (int))\n+    return 2;\n+  return 0;\n+}\n+"}]}