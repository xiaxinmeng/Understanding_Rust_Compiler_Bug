{"sha": "78a15b1f3f64783796b3f1ddbac94041fe1d4f29", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzhhMTViMWYzZjY0NzgzNzk2YjNmMWRkYmFjOTQwNDFmZTFkNGYyOQ==", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2007-12-17T00:47:14Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2007-12-17T00:47:14Z"}, "message": "re PR libfortran/34427 (Revision 130708 breaks namelist input)\n\n2007-12-16  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n\n\tPR fortran/34427\n\t* io/list_read.c (read_real): Handle intervening line ends and spaces.\n\t(get_name): Don't push separators to saved_string.\n\t(eat_separator): If in namelist mode eat spaces and line ends as well.\n\nFrom-SVN: r131003", "tree": {"sha": "408cb4fc5dc4082b93a6241a8cfa132f36e1c11f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/408cb4fc5dc4082b93a6241a8cfa132f36e1c11f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/78a15b1f3f64783796b3f1ddbac94041fe1d4f29", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78a15b1f3f64783796b3f1ddbac94041fe1d4f29", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78a15b1f3f64783796b3f1ddbac94041fe1d4f29", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78a15b1f3f64783796b3f1ddbac94041fe1d4f29/comments", "author": null, "committer": null, "parents": [{"sha": "3bee5325cad87db543b803f3ca64cd50c9453598", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3bee5325cad87db543b803f3ca64cd50c9453598", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3bee5325cad87db543b803f3ca64cd50c9453598"}], "stats": {"total": 61, "additions": 41, "deletions": 20}, "files": [{"sha": "286524b35c274fbcf73553fb23108b5f0a40c26c", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78a15b1f3f64783796b3f1ddbac94041fe1d4f29/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78a15b1f3f64783796b3f1ddbac94041fe1d4f29/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=78a15b1f3f64783796b3f1ddbac94041fe1d4f29", "patch": "@@ -1,3 +1,10 @@\n+2007-12-16  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR fortran/34427\n+\t* io/list_read.c (read_real): Handle intervening line ends and spaces.\n+\t(get_name): Don't push separators to saved_string.\n+\t(eat_separator): If in namelist mode eat spaces and line ends as well.\n+\n 2007-12-13  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \tPR libfortran/34370"}, {"sha": "df43589cad06b9744c7ca444097baaa3378a7d76", "filename": "libgfortran/io/list_read.c", "status": "modified", "additions": 34, "deletions": 20, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78a15b1f3f64783796b3f1ddbac94041fe1d4f29/libgfortran%2Fio%2Flist_read.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78a15b1f3f64783796b3f1ddbac94041fe1d4f29/libgfortran%2Fio%2Flist_read.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Flist_read.c?ref=78a15b1f3f64783796b3f1ddbac94041fe1d4f29", "patch": "@@ -307,15 +307,31 @@ eat_separator (st_parameter_dt *dtp)\n       break;\n \n     case '\\r':\n+      dtp->u.p.at_eol = 1;\n       n = next_char(dtp);\n       if (n == '\\n')\n-\tdtp->u.p.at_eol = 1;\n+\t{\n+\t  if (dtp->u.p.namelist_mode)\n+\t    {\n+\t      do\n+\t\tc = next_char (dtp);\n+\t      while (c == '\\n' || c == '\\r' || c == ' ');\n+\t      unget_char (dtp, c);\n+\t    }\n+\t}\n       else\n \tunget_char (dtp, n);\n       break;\n \n     case '\\n':\n       dtp->u.p.at_eol = 1;\n+      if (dtp->u.p.namelist_mode)\n+\t{\n+\t  do\n+\t    c = next_char (dtp);\n+\t  while (c == '\\n' || c == '\\r' || c == ' ');\n+\t  unget_char (dtp, c);\n+\t}\n       break;\n \n     case '!':\n@@ -1141,12 +1157,7 @@ parse_real (st_parameter_dt *dtp, void *buffer, int length)\n \n  exp2:\n   if (!isdigit (c))\n-    {\n-      if (c == 'i' || c == 'I' || c == 'n' || c == 'N')\n-\tgoto inf_nan;\n-      else\n-\tgoto bad;\n-    }\n+    goto bad;\n \n   push_char (dtp, c);\n \n@@ -1315,7 +1326,7 @@ read_real (st_parameter_dt *dtp, int length)\n {\n   char c, message[100];\n   int seen_dp;\n-  int is_inf, i;\n+  int is_inf;\n \n   seen_dp = 0;\n \n@@ -1578,20 +1589,22 @@ read_real (st_parameter_dt *dtp, int length)\n       l_push_char (dtp, c);\n     }\n \n-  if (!is_separator (c) || c == '=')\n+  if (!is_separator (c))\n     goto unwind;\n \n-  if (dtp->u.p.namelist_mode && c != ',' && c != '/')\n-    for (i = 0; i < 63; i++)\n-    { \n-      eat_spaces (dtp);\n-      c = next_char (dtp);\n-      l_push_char (dtp, c);\n-      if (c == '=')\n-\tgoto unwind;\n+  if (dtp->u.p.namelist_mode)\n+    {\t\n+      if (c == ' ' || c =='\\n' || c == '\\r')\n+\t{\n+\t  do\n+\t    c = next_char (dtp);\n+\t  while (c == ' ' || c =='\\n' || c == '\\r');\n \n-      if (c == ',' || c == '/' || !is_separator(c))\n-\tbreak;\n+\t  l_push_char (dtp, c);\n+\n+\t  if (c == '=')\n+\t    goto unwind;\n+\t}\n     }\n \n   if (is_inf)\n@@ -2594,7 +2607,8 @@ nml_get_obj_data (st_parameter_dt *dtp, namelist_info **pprev_nl,\n \n   do\n     {\n-      push_char (dtp, tolower(c));\n+      if (!is_separator (c))\n+\tpush_char (dtp, tolower(c));\n       c = next_char (dtp);\n     } while (!( c=='=' || c==' ' || c=='\\t' || c =='(' || c =='%' ));\n "}]}