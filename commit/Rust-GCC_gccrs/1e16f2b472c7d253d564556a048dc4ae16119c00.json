{"sha": "1e16f2b472c7d253d564556a048dc4ae16119c00", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWUxNmYyYjQ3MmM3ZDI1M2Q1NjQ1NTZhMDQ4ZGM0YWUxNjExOWMwMA==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2021-06-23T10:50:53Z"}, "committer": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2021-06-23T10:51:32Z"}, "message": "i386: Prevent unwanted combine from LZCNT to BSR [PR101175]\n\nThe current RTX pattern for BSR allows combine pass to convert LZCNT insn\nto BSR. Note that the LZCNT has a defined behavior to return the operand\nsize when operand is zero, where BSR has not.\n\nAdd a BSR specific setting of zero-flag to RTX pattern of BSR insn\nin order to avoid matching unwanted combinations.\n\n2021-06-23  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n\ngcc/\n\tPR target/101175\n\t* config/i386/i386.md (bsr_rex64): Add zero-flag setting RTX.\n\t(bsr): Ditto.\n\t(*bsrhi): Remove.\n\t(clz<mode>2): Update RTX pattern for additions.\n\ngcc/testsuite/\n\n\tPR target/101175\n\t* gcc.target/i386/pr101175.c: New test.", "tree": {"sha": "1590ac31c6e4a30d6ee2c5370e71b8c15bc28180", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1590ac31c6e4a30d6ee2c5370e71b8c15bc28180"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1e16f2b472c7d253d564556a048dc4ae16119c00", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e16f2b472c7d253d564556a048dc4ae16119c00", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e16f2b472c7d253d564556a048dc4ae16119c00", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e16f2b472c7d253d564556a048dc4ae16119c00/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "75404109dce57d2f8dac0f90808010233928418f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75404109dce57d2f8dac0f90808010233928418f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75404109dce57d2f8dac0f90808010233928418f"}], "stats": {"total": 64, "additions": 43, "deletions": 21}, "files": [{"sha": "4e242105719ae6d0f21c32c0952a9622caf6812e", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 15, "deletions": 21, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e16f2b472c7d253d564556a048dc4ae16119c00/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e16f2b472c7d253d564556a048dc4ae16119c00/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=1e16f2b472c7d253d564556a048dc4ae16119c00", "patch": "@@ -14533,10 +14533,12 @@\n    (set_attr \"mode\" \"SI\")])\n \n (define_insn \"bsr_rex64\"\n-  [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n+  [(set (reg:CCZ FLAGS_REG)\n+\t(compare:CCZ (match_operand:DI 1 \"nonimmediate_operand\" \"rm\")\n+\t\t     (const_int 0)))\n+   (set (match_operand:DI 0 \"register_operand\" \"=r\")\n \t(minus:DI (const_int 63)\n-\t\t  (clz:DI (match_operand:DI 1 \"nonimmediate_operand\" \"rm\"))))\n-   (clobber (reg:CC FLAGS_REG))]\n+\t\t  (clz:DI (match_dup 1))))]\n   \"TARGET_64BIT\"\n   \"bsr{q}\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"alu1\")\n@@ -14545,36 +14547,28 @@\n    (set_attr \"mode\" \"DI\")])\n \n (define_insn \"bsr\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n+  [(set (reg:CCZ FLAGS_REG)\n+\t(compare:CCZ (match_operand:SI 1 \"nonimmediate_operand\" \"rm\")\n+\t\t     (const_int 0)))\n+   (set (match_operand:SI 0 \"register_operand\" \"=r\")\n \t(minus:SI (const_int 31)\n-\t\t  (clz:SI (match_operand:SI 1 \"nonimmediate_operand\" \"rm\"))))\n-   (clobber (reg:CC FLAGS_REG))]\n+\t\t  (clz:SI (match_dup 1))))]\n   \"\"\n   \"bsr{l}\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"alu1\")\n    (set_attr \"prefix_0f\" \"1\")\n    (set_attr \"znver1_decode\" \"vector\")\n    (set_attr \"mode\" \"SI\")])\n \n-(define_insn \"*bsrhi\"\n-  [(set (match_operand:HI 0 \"register_operand\" \"=r\")\n-\t(minus:HI (const_int 15)\n-\t\t  (clz:HI (match_operand:HI 1 \"nonimmediate_operand\" \"rm\"))))\n-   (clobber (reg:CC FLAGS_REG))]\n-  \"\"\n-  \"bsr{w}\\t{%1, %0|%0, %1}\"\n-  [(set_attr \"type\" \"alu1\")\n-   (set_attr \"prefix_0f\" \"1\")\n-   (set_attr \"znver1_decode\" \"vector\")\n-   (set_attr \"mode\" \"HI\")])\n-\n (define_expand \"clz<mode>2\"\n   [(parallel\n-     [(set (match_operand:SWI48 0 \"register_operand\")\n+     [(set (reg:CCZ FLAGS_REG)\n+\t(compare:CCZ (match_operand:SWI48 1 \"nonimmediate_operand\" \"rm\")\n+\t\t     (const_int 0)))\n+      (set (match_operand:SWI48 0 \"register_operand\")\n \t   (minus:SWI48\n \t     (match_dup 2)\n-\t     (clz:SWI48 (match_operand:SWI48 1 \"nonimmediate_operand\"))))\n-      (clobber (reg:CC FLAGS_REG))])\n+\t     (clz:SWI48 (match_dup 1))))])\n    (parallel\n      [(set (match_dup 0) (xor:SWI48 (match_dup 0) (match_dup 2)))\n       (clobber (reg:CC FLAGS_REG))])]"}, {"sha": "ed7a08110a55ce819fd0bf41756df4b950894d61", "filename": "gcc/testsuite/gcc.target/i386/pr101175.c", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e16f2b472c7d253d564556a048dc4ae16119c00/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr101175.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e16f2b472c7d253d564556a048dc4ae16119c00/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr101175.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr101175.c?ref=1e16f2b472c7d253d564556a048dc4ae16119c00", "patch": "@@ -0,0 +1,28 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O2 -mlzcnt\" } */\n+/* { dg-require-effective-target lzcnt } */\n+\n+#include \"lzcnt-check.h\"\n+\n+static int\n+foo (unsigned int v)\n+{\n+  return v ? __builtin_clz (v) : 32;\n+}\n+\n+/* returns -1 if x == 0 */\n+int\n+__attribute__ ((noinline, noclone))\n+bar (unsigned int x)\n+{\n+  return 31 - foo (x);\n+}\n+\n+static void\n+lzcnt_test ()\n+{\n+  int r = bar (0);\n+\n+  if (r != -1)\n+    abort ();\n+}"}]}