{"sha": "1b4bda70e5c1fecb9fea6e2fc985f1dc61318f61", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWI0YmRhNzBlNWMxZmVjYjlmZWE2ZTJmYzk4NWYxZGM2MTMxOGY2MQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@libertysurf.fr", "date": "2004-01-27T13:29:26Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2004-01-27T13:29:26Z"}, "message": "re PR target/10904 (invalid (misaligned) FP register at -O2)\n\n\tPR target/10904\n\tPR target/13058\n\t* config/sparc/sparc.h (CANNOT_CHANGE_MODE_CLASS): New.\n\tForbid mode changes from SImode for lower FP regs if ARCH64.\n\nFrom-SVN: r76702", "tree": {"sha": "8612898897c739a2f1db954d9170d5f3ca646417", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8612898897c739a2f1db954d9170d5f3ca646417"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1b4bda70e5c1fecb9fea6e2fc985f1dc61318f61", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b4bda70e5c1fecb9fea6e2fc985f1dc61318f61", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b4bda70e5c1fecb9fea6e2fc985f1dc61318f61", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b4bda70e5c1fecb9fea6e2fc985f1dc61318f61/comments", "author": {"login": "ebotcazou", "id": 48091907, "node_id": "MDQ6VXNlcjQ4MDkxOTA3", "avatar_url": "https://avatars.githubusercontent.com/u/48091907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebotcazou", "html_url": "https://github.com/ebotcazou", "followers_url": "https://api.github.com/users/ebotcazou/followers", "following_url": "https://api.github.com/users/ebotcazou/following{/other_user}", "gists_url": "https://api.github.com/users/ebotcazou/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebotcazou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebotcazou/subscriptions", "organizations_url": "https://api.github.com/users/ebotcazou/orgs", "repos_url": "https://api.github.com/users/ebotcazou/repos", "events_url": "https://api.github.com/users/ebotcazou/events{/privacy}", "received_events_url": "https://api.github.com/users/ebotcazou/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1194fc79773b7e3abcf36123c58995e1129315e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1194fc79773b7e3abcf36123c58995e1129315e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1194fc79773b7e3abcf36123c58995e1129315e2"}], "stats": {"total": 82, "additions": 82, "deletions": 0}, "files": [{"sha": "60d2990a6a680fa6682a1f1aacdbccd07f1104aa", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b4bda70e5c1fecb9fea6e2fc985f1dc61318f61/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b4bda70e5c1fecb9fea6e2fc985f1dc61318f61/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1b4bda70e5c1fecb9fea6e2fc985f1dc61318f61", "patch": "@@ -1,3 +1,10 @@\n+2004-01-27  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+\n+\tPR target/10904\n+\tPR target/13058\n+\t* config/sparc/sparc.h (CANNOT_CHANGE_MODE_CLASS): New.\n+\tForbid mode changes from SImode for lower FP regs if ARCH64.\n+\n 2004-01-27  J\"orn Rennecke <joern.rennecke@superh.com>\n \n \t* Makefile.in (bt-load.o): Depend on except.h."}, {"sha": "eeab3c6a7fdc25faa05b7345bf8f632dc100ae47", "filename": "gcc/config/sparc/sparc.h", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b4bda70e5c1fecb9fea6e2fc985f1dc61318f61/gcc%2Fconfig%2Fsparc%2Fsparc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b4bda70e5c1fecb9fea6e2fc985f1dc61318f61/gcc%2Fconfig%2Fsparc%2Fsparc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.h?ref=1b4bda70e5c1fecb9fea6e2fc985f1dc61318f61", "patch": "@@ -1264,6 +1264,20 @@ enum reg_class { NO_REGS, FPCC_REGS, I64_REGS, GENERAL_REGS, FP_REGS,\n    {-1, -1, -1, 0x20},\t/* GENERAL_OR_EXTRA_FP_REGS */\t\\\n    {-1, -1, -1, 0x3f}}\t/* ALL_REGS */\n \n+/* Defines invalid mode changes.  Borrowed from pa64-regs.h.\n+\n+   SImode loads to floating-point registers are not zero-extended.\n+   The definition for LOAD_EXTEND_OP specifies that integer loads\n+   narrower than BITS_PER_WORD will be zero-extended.  As a result,\n+   we inhibit changes from SImode unless they are to a mode that is\n+   identical in size.  */\n+\n+#define CANNOT_CHANGE_MODE_CLASS(FROM, TO, CLASS)\t\t\\\n+  (TARGET_ARCH64\t\t\t\t\t\t\\\n+   && (FROM) == SImode\t\t\t\t\t\t\\\n+   && GET_MODE_SIZE (FROM) != GET_MODE_SIZE (TO)\t\t\\\n+   ? reg_classes_intersect_p (CLASS, FP_REGS) : 0)\n+\n /* The same information, inverted:\n    Return the class number of the smallest class containing\n    reg number REGNO.  This could be a conditional expression"}, {"sha": "475dd337b663d6893c529b501a893d1e2c5e0ce6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b4bda70e5c1fecb9fea6e2fc985f1dc61318f61/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b4bda70e5c1fecb9fea6e2fc985f1dc61318f61/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1b4bda70e5c1fecb9fea6e2fc985f1dc61318f61", "patch": "@@ -1,3 +1,8 @@\n+2004-01-27  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+\n+\t* gcc.dg/20040127-1.c: New test.\n+\t* gcc.dg/20040127-2.c: New test.\n+\n 2004-01-26  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n \n \t* objc.dg/stret-1.m (glob): Renamed to globa."}, {"sha": "0ea6062a5a913a6f5acf82bedf98951535b7c4ca", "filename": "gcc/testsuite/gcc.dg/20040127-1.c", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b4bda70e5c1fecb9fea6e2fc985f1dc61318f61/gcc%2Ftestsuite%2Fgcc.dg%2F20040127-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b4bda70e5c1fecb9fea6e2fc985f1dc61318f61/gcc%2Ftestsuite%2Fgcc.dg%2F20040127-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20040127-1.c?ref=1b4bda70e5c1fecb9fea6e2fc985f1dc61318f61", "patch": "@@ -0,0 +1,24 @@\n+/* PR target/10904 */\n+/* Origin: <kminola@eng.umd.edu> */\n+\n+/* Verify that the register allocator correctly aligns\n+   floating-point registers on SPARC64.  */\n+\n+/* { dg-do assemble } */\n+/* { dg-options \"-O2\" } */\n+\n+extern int foo1();\n+extern int foo2();\n+\n+void foo(int n, int b)\n+{\n+  int i, a;\n+\n+  foo1();\n+\n+  a = (long)(b * ((double) 0.1));\n+\n+  for (i=0; i < n; i++) {\n+    foo2(a);\n+  }\n+}"}, {"sha": "6e56dd8fc10f37c04bbf725fb33d3be0b11af79d", "filename": "gcc/testsuite/gcc.dg/20040127-2.c", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b4bda70e5c1fecb9fea6e2fc985f1dc61318f61/gcc%2Ftestsuite%2Fgcc.dg%2F20040127-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b4bda70e5c1fecb9fea6e2fc985f1dc61318f61/gcc%2Ftestsuite%2Fgcc.dg%2F20040127-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20040127-2.c?ref=1b4bda70e5c1fecb9fea6e2fc985f1dc61318f61", "patch": "@@ -0,0 +1,32 @@\n+/* PR target/13058 */\n+/* Origin: Lloyd Parkes <lloyd@must-have-coffee.gen.nz> */\n+/* Reduced testcase by  Falk Hueffner <falk@debian.org> */\n+\n+/* Verify that the register allocator correctly aligns\n+   floating-point registers on SPARC64.  */\n+\n+/* { dg-do compile } */\n+/* { dg-options \"-O\" } */\n+\n+typedef struct { int ThumbnailSize; } ImageInfo_t;\n+\n+double ConvertAnyFormat(void)\n+{\n+  return 0;\n+}\n+\n+void ProcessExifDir(ImageInfo_t *ImageInfoP, int NumDirEntries)\n+{\n+  unsigned int ThumbnailSize;\n+\n+  for (; NumDirEntries;) {\n+    Get16u();\n+    switch (NumDirEntries) {\n+      case 0x0201:\n+      case 0x0202:\n+        ThumbnailSize = ConvertAnyFormat();\n+    }\n+  }\n+\n+  ImageInfoP->ThumbnailSize = ThumbnailSize;\n+}"}]}