{"sha": "8c21550d5b849e6b38a88d8b1c3668a169dec5fd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGMyMTU1MGQ1Yjg0OWU2YjM4YTg4ZDhiMWMzNjY4YTE2OWRlYzVmZA==", "commit": {"author": {"name": "Joerg Wunsch", "email": "j.gnu@uriah.heep.sax.de", "date": "2006-05-22T15:51:36Z"}, "committer": {"name": "Denis Chertykov", "email": "denisc@gcc.gnu.org", "date": "2006-05-22T15:51:36Z"}, "message": "avr.c (avr_mcu_types): Add support for attiny261...\n\n\t* config/avr/avr.c (avr_mcu_types): Add support for attiny261,\n\tattiny461, attiny861, attiny25, attiny45, attiny85, attiny24,\n\tattiny44, attiny84, at90pwm2, at90pwm3, atmega165p, atmega169p, \n\tatmega164p, atmega324p, atmega644p, atmega644, atmega329, \n\tatmega3290, atmega649, atmega6490, atmega406, atmega640, \n\tatmega1280, atmega1281, at90can32, at90can64, at90usb646, \n\tat90usb647, at90usb1286 and at90usb1287 devices.  \n\t* config/avr/avr.h (LINK_SPEC, CRT_BINUTILS_SPECS): (Ditto.).\n\t* config/avr/t-avr (MULTILIB_MATCHES): (Ditto.).\n\nFrom-SVN: r113982", "tree": {"sha": "0c1e36961ab25caf37b6141ac7df2de5e6db85c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0c1e36961ab25caf37b6141ac7df2de5e6db85c1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8c21550d5b849e6b38a88d8b1c3668a169dec5fd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c21550d5b849e6b38a88d8b1c3668a169dec5fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c21550d5b849e6b38a88d8b1c3668a169dec5fd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c21550d5b849e6b38a88d8b1c3668a169dec5fd/comments", "author": null, "committer": null, "parents": [{"sha": "350f18df1c9171e298f57314f78d005ddf3d8fc3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/350f18df1c9171e298f57314f78d005ddf3d8fc3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/350f18df1c9171e298f57314f78d005ddf3d8fc3"}], "stats": {"total": 202, "additions": 183, "deletions": 19}, "files": [{"sha": "44e45256b363afcfcac0f2da7467c726430e206e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c21550d5b849e6b38a88d8b1c3668a169dec5fd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c21550d5b849e6b38a88d8b1c3668a169dec5fd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8c21550d5b849e6b38a88d8b1c3668a169dec5fd", "patch": "@@ -1,3 +1,16 @@\n+2006-18-05  Joerg Wunsch <j.gnu@uriah.heep.sax.de>\n+            Anatoly Sokolov <aesok@post.ru>\n+\n+\t* config/avr/avr.c (avr_mcu_types): Add support for attiny261,\n+\tattiny461, attiny861, attiny25, attiny45, attiny85, attiny24,\n+\tattiny44, attiny84, at90pwm2, at90pwm3, atmega165p, atmega169p, \n+\tatmega164p, atmega324p, atmega644p, atmega644, atmega329, \n+\tatmega3290, atmega649, atmega6490, atmega406, atmega640, \n+\tatmega1280, atmega1281, at90can32, at90can64, at90usb646, \n+\tat90usb647, at90usb1286 and at90usb1287 devices.  \n+\t* config/avr/avr.h (LINK_SPEC, CRT_BINUTILS_SPECS): (Ditto.).\n+\t* config/avr/t-avr (MULTILIB_MATCHES): (Ditto.).\n+\n 2006-05-22  Richard Sandiford  <richard@codesourcery.com>\n \n \t* mklibgcc.in (lib2funcs): Remove _floatdidf from initial assignment."}, {"sha": "2f981dd9738cb1bed77db0683b0e45012675bf08", "filename": "gcc/config/avr/avr.c", "status": "modified", "additions": 32, "deletions": 1, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c21550d5b849e6b38a88d8b1c3668a169dec5fd/gcc%2Fconfig%2Favr%2Favr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c21550d5b849e6b38a88d8b1c3668a169dec5fd/gcc%2Fconfig%2Favr%2Favr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.c?ref=8c21550d5b849e6b38a88d8b1c3668a169dec5fd", "patch": "@@ -172,10 +172,19 @@ static const struct mcu_type_s avr_mcu_types[] = {\n   { \"at90s8515\", 2, \"__AVR_AT90S8515__\" },\n   { \"at90c8534\", 2, \"__AVR_AT90C8534__\" },\n   { \"at90s8535\", 2, \"__AVR_AT90S8535__\" },\n-  { \"at86rf401\", 2, \"__AVR_AT86RF401__\" },\n     /* Classic + MOVW, <= 8K.  */\n   { \"attiny13\",   2, \"__AVR_ATtiny13__\" },\n   { \"attiny2313\", 2, \"__AVR_ATtiny2313__\" },\n+  { \"attiny24\", 2, \"__AVR_ATtiny24__\" },\n+  { \"attiny44\", 2, \"__AVR_ATtiny44__\" },\n+  { \"attiny84\", 2, \"__AVR_ATtiny84__\" },\n+  { \"attiny25\", 2, \"__AVR_ATtiny25__\" },\n+  { \"attiny45\", 2, \"__AVR_ATtiny45__\" },\n+  { \"attiny85\", 2, \"__AVR_ATtiny85__\" },\n+  { \"attiny261\", 2, \"__AVR_ATtiny261__\" },\n+  { \"attiny461\", 2, \"__AVR_ATtiny461__\" },\n+  { \"attiny861\", 2, \"__AVR_ATtiny861__\" },\n+  { \"at86rf401\", 2, \"__AVR_AT86RF401__\" },\n     /* Classic, > 8K.  */\n   { \"avr3\",      3, NULL },\n   { \"atmega103\", 3, \"__AVR_ATmega103__\" },\n@@ -190,24 +199,46 @@ static const struct mcu_type_s avr_mcu_types[] = {\n   { \"atmega88\",   4, \"__AVR_ATmega88__\" },\n   { \"atmega8515\", 4, \"__AVR_ATmega8515__\" },\n   { \"atmega8535\", 4, \"__AVR_ATmega8535__\" },\n+  { \"at90pwm2\",  4, \"__AVR_AT90PWM2__\" },\n+  { \"at90pwm3\",  4, \"__AVR_AT90PWM3__\" },\n     /* Enhanced, > 8K.  */\n   { \"avr5\",      5, NULL },\n   { \"atmega16\",  5, \"__AVR_ATmega16__\" },\n   { \"atmega161\", 5, \"__AVR_ATmega161__\" },\n   { \"atmega162\", 5, \"__AVR_ATmega162__\" },\n   { \"atmega163\", 5, \"__AVR_ATmega163__\" },\n+  { \"atmega164p\",5, \"__AVR_ATmega164P__\" },\n   { \"atmega165\", 5, \"__AVR_ATmega165__\" },\n+  { \"atmega165p\",5, \"__AVR_ATmega165P__\" },\n   { \"atmega168\", 5, \"__AVR_ATmega168__\" },\n   { \"atmega169\", 5, \"__AVR_ATmega169__\" },\n+  { \"atmega169p\",5, \"__AVR_ATmega169P__\" },\n   { \"atmega32\",  5, \"__AVR_ATmega32__\" },\n   { \"atmega323\", 5, \"__AVR_ATmega323__\" },\n+  { \"atmega324p\",5, \"__AVR_ATmega324P__\" },\n   { \"atmega325\", 5, \"__AVR_ATmega325__\" },\n   { \"atmega3250\", 5, \"__AVR_ATmega3250__\" },\n+  { \"atmega329\", 5, \"__AVR_ATmega329__\" },\n+  { \"atmega3290\", 5, \"__AVR_ATmega3290__\" },\n+  { \"atmega406\", 5, \"__AVR_ATmega406__\" },\n   { \"atmega64\",  5, \"__AVR_ATmega64__\" },\n+  { \"atmega640\", 5, \"__AVR_ATmega640__\" },\n+  { \"atmega644\", 5, \"__AVR_ATmega644__\" },\n+  { \"atmega644p\",5, \"__AVR_ATmega644P__\" },\n   { \"atmega645\", 5, \"__AVR_ATmega645__\" },\n   { \"atmega6450\", 5, \"__AVR_ATmega6450__\" },\n+  { \"atmega649\", 5, \"__AVR_ATmega649__\" },\n+  { \"atmega6490\", 5, \"__AVR_ATmega6490__\" },\n   { \"atmega128\", 5, \"__AVR_ATmega128__\" },\n+  { \"atmega1280\",5, \"__AVR_ATmega1280__\" },\n+  { \"atmega1281\",5, \"__AVR_ATmega1281__\" },\n+  { \"at90can32\", 5, \"__AVR_AT90CAN32__\" },\n+  { \"at90can64\", 5, \"__AVR_AT90CAN64__\" },\n   { \"at90can128\", 5, \"__AVR_AT90CAN128__\" },\n+  { \"at90usb646\", 5, \"__AVR_AT90USB646__\" },\n+  { \"at90usb647\", 5, \"__AVR_AT90USB647__\" },\n+  { \"at90usb1286\", 5, \"__AVR_AT90USB1286__\" },\n+  { \"at90usb1287\", 5, \"__AVR_AT90USB1287__\" },\n   { \"at94k\",     5, \"__AVR_AT94K__\" },\n     /* Assembler only.  */\n   { \"avr1\",      1, NULL },"}, {"sha": "186cfc6834e4f22194e2719c8e775fce3a2f81d0", "filename": "gcc/config/avr/avr.h", "status": "modified", "additions": 92, "deletions": 6, "changes": 98, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c21550d5b849e6b38a88d8b1c3668a169dec5fd/gcc%2Fconfig%2Favr%2Favr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c21550d5b849e6b38a88d8b1c3668a169dec5fd/gcc%2Fconfig%2Favr%2Favr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.h?ref=8c21550d5b849e6b38a88d8b1c3668a169dec5fd", "patch": "@@ -719,12 +719,67 @@ extern int avr_case_values_threshold;\n #define ASM_SPEC \"%{mmcu=*:-mmcu=%*}\"\n \n #define LINK_SPEC \" %{!mmcu*:-m avr2}\\\n-%{mmcu=at90s1200|mmcu=attiny11|mmcu=attiny12|mmcu=attiny15|mmcu=attiny28:-m avr1} \\\n-%{mmcu=attiny22|mmcu=attiny26|mmcu=at90s2*|mmcu=at90s4*|mmcu=at90s8*|mmcu=at90c8*|mmcu=at86rf401|mmcu=attiny13|mmcu=attiny2313:-m avr2}\\\n-%{mmcu=atmega103|mmcu=atmega603|mmcu=at43*|mmcu=at76*:-m avr3}\\\n-%{mmcu=atmega8*|mmcu=atmega48:-m avr4}\\\n-%{mmcu=atmega16*|mmcu=atmega32*|mmcu=atmega64*|mmcu=atmega128|mmcu=at90can128|mmcu=at94k:-m avr5}\\\n-%{mmcu=atmega325|mmcu=atmega3250|mmcu=atmega48|mmcu=atmega88|mmcu=atmega64|mmcu=atmega645|mmcu=atmega6450|mmcu=atmega128|mmcu=at90can128|mmcu=at90can128|mmcu=atmega162|mmcu=atmega165|mmcu=atmega168|mmcu=atmega169: -Tdata 0x800100} \"\n+%{mmcu=at90s1200|\\\n+  mmcu=attiny11|\\\n+  mmcu=attiny12|\\\n+  mmcu=attiny15|\\\n+  mmcu=attiny28:-m avr1}\\\n+%{mmcu=attiny22|\\\n+  mmcu=attiny26|\\\n+  mmcu=at90s2*|\\\n+  mmcu=at90s4*|\\\n+  mmcu=at90s8*|\\\n+  mmcu=at90c8*|\\\n+  mmcu=at86rf401|\\\n+  mmcu=attiny13|\\\n+  mmcu=attiny2313|\\\n+  mmcu=attiny24|\\\n+  mmcu=attiny25|\\\n+  mmcu=attiny261|\\\n+  mmcu=attiny4*|\\\n+  mmcu=attiny8*:-m avr2}\\\n+%{mmcu=atmega103|\\\n+  mmcu=atmega603|\\\n+  mmcu=at43*|\\\n+  mmcu=at76*:-m avr3}\\\n+%{mmcu=atmega8*|\\\n+  mmcu=atmega48|\\\n+  mmcu=at90pwm2|\\\n+  mmcu=at90pwm3:-m avr4}\\\n+%{mmcu=atmega16*|\\\n+  mmcu=atmega32*|\\\n+  mmcu=atmega406|\\\n+  mmcu=atmega64*|\\\n+  mmcu=atmega128*|\\\n+  mmcu=at90can*|\\\n+  mmcu=at90usb*|\\\n+  mmcu=at94k:-m avr5}\\\n+%{mmcu=atmega324*|\\\n+  mmcu=atmega325|\\\n+  mmcu=atmega3250|\\\n+  mmcu=atmega329|\\\n+  mmcu=atmega3290|\\\n+  mmcu=atmega406|\\\n+  mmcu=atmega48|\\\n+  mmcu=atmega88|\\\n+  mmcu=atmega64|\\\n+  mmcu=atmega644*|\\\n+  mmcu=atmega645|\\\n+  mmcu=atmega6450|\\\n+  mmcu=atmega649|\\\n+  mmcu=atmega6490|\\\n+  mmcu=atmega128|\\\n+  mmcu=atmega162|\\\n+  mmcu=atmega164*|\\\n+  mmcu=atmega165*|\\\n+  mmcu=atmega168|\\\n+  mmcu=atmega169*|\\\n+  mmcu=at90can*|\\\n+  mmcu=at90pwm*|\\\n+  mmcu=at90usb*: -Tdata 0x800100}\\\n+%{mmcu=atmega640|\\\n+  mmcu=atmega1280|\\\n+  mmcu=atmega1281: -Tdata 0x800200} \"\n \n #define LIB_SPEC \\\n   \"%{!mmcu=at90s1*:%{!mmcu=attiny11:%{!mmcu=attiny12:%{!mmcu=attiny15:%{!mmcu=attiny28: -lc }}}}}\"\n@@ -760,6 +815,15 @@ extern int avr_case_values_threshold;\n %{mmcu=at86rf401:crt86401.o%s} \\\n %{mmcu=attiny13:crttn13.o%s} \\\n %{mmcu=attiny2313:crttn2313.o%s} \\\n+%{mmcu=attiny24:crttn24.o%s} \\\n+%{mmcu=attiny44:crttn44.o%s} \\\n+%{mmcu=attiny84:crttn84.o%s} \\\n+%{mmcu=attiny25:crttn25.o%s} \\\n+%{mmcu=attiny45:crttn45.o%s} \\\n+%{mmcu=attiny85:crttn85.o%s} \\\n+%{mmcu=attiny261:crttn261.o%s} \\\n+%{mmcu=attiny461:crttn461.o%s} \\\n+%{mmcu=attiny861:crttn861.o%s} \\\n %{mmcu=atmega103|mmcu=avr3:crtm103.o%s} \\\n %{mmcu=atmega603:crtm603.o%s} \\\n %{mmcu=at43usb320:crt43320.o%s} \\\n@@ -770,22 +834,44 @@ extern int avr_case_values_threshold;\n %{mmcu=atmega88:crtm88.o%s} \\\n %{mmcu=atmega8515:crtm8515.o%s} \\\n %{mmcu=atmega8535:crtm8535.o%s} \\\n+%{mmcu=at90pwm2:crt90pwm2.o%s} \\\n+%{mmcu=at90pwm3:crt90pwm3.o%s} \\\n %{mmcu=atmega16:crtm16.o%s} \\\n %{mmcu=atmega161|mmcu=avr5:crtm161.o%s} \\\n %{mmcu=atmega162:crtm162.o%s} \\\n %{mmcu=atmega163:crtm163.o%s} \\\n+%{mmcu=atmega164p:crtm164p.o%s} \\\n %{mmcu=atmega165:crtm165.o%s} \\\n+%{mmcu=atmega165p:crtm165p.o%s} \\\n %{mmcu=atmega168:crtm168.o%s} \\\n %{mmcu=atmega169:crtm169.o%s} \\\n+%{mmcu=atmega169p:crtm169p.o%s} \\\n %{mmcu=atmega32:crtm32.o%s} \\\n %{mmcu=atmega323:crtm323.o%s} \\\n+%{mmcu=atmega324p:crtm324p.o%s} \\\n %{mmcu=atmega325:crtm325.o%s} \\\n %{mmcu=atmega3250:crtm3250.o%s} \\\n+%{mmcu=atmega329:crtm329.o%s} \\\n+%{mmcu=atmega3290:crtm3290.o%s} \\\n+%{mmcu=atmega406:crtm406.o%s} \\\n %{mmcu=atmega64:crtm64.o%s} \\\n+%{mmcu=atmega640:crtm640.o%s} \\\n+%{mmcu=atmega644:crtm644.o%s} \\\n+%{mmcu=atmega644p:crtm644p.o%s} \\\n %{mmcu=atmega645:crtm645.o%s} \\\n %{mmcu=atmega6450:crtm6450.o%s} \\\n+%{mmcu=atmega649:crtm649.o%s} \\\n+%{mmcu=atmega6490:crtm6490.o%s} \\\n %{mmcu=atmega128:crtm128.o%s} \\\n+%{mmcu=atmega1280:crtm1280.o%s} \\\n+%{mmcu=atmega1281:crtm1281.o%s} \\\n+%{mmcu=at90can32:crtcan32.o%s} \\\n+%{mmcu=at90can64:crtcan64.o%s} \\\n %{mmcu=at90can128:crtcan128.o%s} \\\n+%{mmcu=at90usb646:crtusb646.o%s} \\\n+%{mmcu=at90usb647:crtusb647.o%s} \\\n+%{mmcu=at90usb1286:crtusb1286.o%s} \\\n+%{mmcu=at90usb1287:crtusb1287.o%s} \\\n %{mmcu=at94k:crtat94k.o%s}\"\n \n #define EXTRA_SPECS {\"crt_binutils\", CRT_BINUTILS_SPECS},"}, {"sha": "a8fb8e9c4165c3b2be1ffc6d60683f1c097698dd", "filename": "gcc/config/avr/t-avr", "status": "modified", "additions": 46, "deletions": 12, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c21550d5b849e6b38a88d8b1c3668a169dec5fd/gcc%2Fconfig%2Favr%2Ft-avr", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c21550d5b849e6b38a88d8b1c3668a169dec5fd/gcc%2Fconfig%2Favr%2Ft-avr", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Ft-avr?ref=8c21550d5b849e6b38a88d8b1c3668a169dec5fd", "patch": "@@ -42,21 +42,55 @@ MULTILIB_DIRNAMES = avr2 avr3 avr4 avr5\n \n # The many avr2 matches are not listed here - this is the default.\n MULTILIB_MATCHES = \\\n-\tmmcu?avr3=mmcu?atmega103 mmcu?avr3=mmcu?atmega603 \\\n-\tmmcu?avr3=mmcu?at43usb320 mmcu?avr3=mmcu?at43usb355 \\\n+\tmmcu?avr3=mmcu?atmega103 \\\n+\tmmcu?avr3=mmcu?atmega603 \\\n+\tmmcu?avr3=mmcu?at43usb320 \\\n+\tmmcu?avr3=mmcu?at43usb355 \\\n \tmmcu?avr3=mmcu?at76c711 \\\n-\tmmcu?avr4=mmcu?atmega8515 mmcu?avr4=mmcu?atmega8535 \\\n-\tmmcu?avr4=mmcu?atmega8 mmcu?avr4=mmcu?atmega48 \\\n+\tmmcu?avr4=mmcu?atmega48 \\\n+\tmmcu?avr4=mmcu?atmega8 \\\n+\tmmcu?avr4=mmcu?atmega8515 \\\n+\tmmcu?avr4=mmcu?atmega8535 \\\n \tmmcu?avr4=mmcu?atmega88 \\\n-\tmmcu?avr5=mmcu?atmega161 mmcu?avr5=mmcu?atmega162 \\\n-\tmmcu?avr5=mmcu?atmega163 mmcu?avr5=mmcu?atmega169 \\\n-\tmmcu?avr5=mmcu?atmega16 mmcu?avr5=mmcu?atmega168 \\\n+\tmmcu?avr4=mmcu?at90pwm2 \\\n+\tmmcu?avr4=mmcu?at90pwm3 \\\n+\tmmcu?avr5=mmcu?atmega16 \\\n+\tmmcu?avr5=mmcu?atmega161 \\\n+\tmmcu?avr5=mmcu?atmega162 \\\n+\tmmcu?avr5=mmcu?atmega163 \\\n+\tmmcu?avr5=mmcu?atmega164p \\\n \tmmcu?avr5=mmcu?atmega165 \\\n-\tmmcu?avr5=mmcu?atmega323 mmcu?avr5=mmcu?atmega32 \\\n-\tmmcu?avr5=mmcu?atmega325 mmcu?avr5=mmcu?atmega3250 \\\n-\tmmcu?avr5=mmcu?atmega64  mmcu?avr5=mmcu?atmega128 \\\n-\tmmcu?avr5=mmcu?atmega645 mmcu?avr5=mmcu?atmega6450 \\\n-\tmmcu?avr5=mmcu?at94k mmcu?avr5=mmcu?at90can128\n+\tmmcu?avr5=mmcu?atmega165p \\\n+\tmmcu?avr5=mmcu?atmega168 \\\n+\tmmcu?avr5=mmcu?atmega169 \\\n+\tmmcu?avr5=mmcu?atmega169p \\\n+\tmmcu?avr5=mmcu?atmega32 \\\n+\tmmcu?avr5=mmcu?atmega323 \\\n+\tmmcu?avr5=mmcu?atmega324p \\\n+\tmmcu?avr5=mmcu?atmega325 \\\n+\tmmcu?avr5=mmcu?atmega3250 \\\n+\tmmcu?avr5=mmcu?atmega329 \\\n+\tmmcu?avr5=mmcu?atmega3290 \\\n+\tmmcu?avr5=mmcu?atmega406 \\\n+\tmmcu?avr5=mmcu?atmega64  \\\n+\tmmcu?avr5=mmcu?atmega640 \\\n+\tmmcu?avr5=mmcu?atmega644 \\\n+\tmmcu?avr5=mmcu?atmega644p \\\n+\tmmcu?avr5=mmcu?atmega645 \\\n+\tmmcu?avr5=mmcu?atmega6450 \\\n+\tmmcu?avr5=mmcu?atmega649 \\\n+\tmmcu?avr5=mmcu?atmega6490 \\\n+\tmmcu?avr5=mmcu?atmega128 \\\n+\tmmcu?avr5=mmcu?atmega1280 \\\n+\tmmcu?avr5=mmcu?atmega1281 \\\n+\tmmcu?avr5=mmcu?at90can32 \\\n+\tmmcu?avr5=mmcu?at90can64 \\\n+\tmmcu?avr5=mmcu?at90can128 \\\n+\tmmcu?avr5=mmcu?at90usb646 \\\n+\tmmcu?avr5=mmcu?at90usb647 \\\n+\tmmcu?avr5=mmcu?at90usb1286 \\\n+\tmmcu?avr5=mmcu?at90usb1287 \\\n+\tmmcu?avr5=mmcu?at94k\n \n MULTILIB_EXCEPTIONS =\n "}]}