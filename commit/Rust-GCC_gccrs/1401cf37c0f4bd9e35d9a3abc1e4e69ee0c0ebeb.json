{"sha": "1401cf37c0f4bd9e35d9a3abc1e4e69ee0c0ebeb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTQwMWNmMzdjMGY0YmQ5ZTM1ZDlhM2FiYzFlNGU2OWVlMGMwZWJlYg==", "commit": {"author": {"name": "Manuel L\u00f3pez-Ib\u00e1\u00f1ez", "email": "manu@gcc.gnu.org", "date": "2010-04-08T17:21:26Z"}, "committer": {"name": "Manuel L\u00f3pez-Ib\u00e1\u00f1ez", "email": "manu@gcc.gnu.org", "date": "2010-04-08T17:21:26Z"}, "message": "re PR driver/42485 (-V switch broken)\n\n2010-04-08  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n\n\tPR 42485\n\t* doc/invoke.texi (-b,-V): Delete.\n\t* doc/tm.texi: Do not mention -b.\n\t* gcc.c (display_help): Delete -b and -V.\n\t(process_command): Delete -b and -V.\n\t* gcc.h (DEFAULT_SWITCH_TAKES_ARG): Delete -b and -V.\n\nFrom-SVN: r158134", "tree": {"sha": "433be0dd043095ee2230d5a9c8a65c2293a07451", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/433be0dd043095ee2230d5a9c8a65c2293a07451"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1401cf37c0f4bd9e35d9a3abc1e4e69ee0c0ebeb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1401cf37c0f4bd9e35d9a3abc1e4e69ee0c0ebeb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1401cf37c0f4bd9e35d9a3abc1e4e69ee0c0ebeb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1401cf37c0f4bd9e35d9a3abc1e4e69ee0c0ebeb/comments", "author": null, "committer": null, "parents": [{"sha": "40ac4f73faa256e049279c1611d47a685ff7f370", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40ac4f73faa256e049279c1611d47a685ff7f370", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40ac4f73faa256e049279c1611d47a685ff7f370"}], "stats": {"total": 149, "additions": 18, "deletions": 131}, "files": [{"sha": "4b7d1e2cc722c1390a77064c27a6314605b1bea3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1401cf37c0f4bd9e35d9a3abc1e4e69ee0c0ebeb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1401cf37c0f4bd9e35d9a3abc1e4e69ee0c0ebeb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1401cf37c0f4bd9e35d9a3abc1e4e69ee0c0ebeb", "patch": "@@ -1,3 +1,12 @@\n+2010-04-08  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n+\n+\tPR 42485\n+\t* doc/invoke.texi (-b,-V): Delete.\n+\t* doc/tm.texi: Do not mention -b.\n+\t* gcc.c (display_help): Delete -b and -V.\n+\t(process_command): Delete -b and -V.\n+\t* gcc.h (DEFAULT_SWITCH_TAKES_ARG): Delete -b and -V.\n+\t\n 2010-04-08  Christian Borntraeger  <borntraeger@de.ibm.com>\n             Wolfgang Gellerich  <gellerich@de.ibm.com>\n "}, {"sha": "7a8ca5582cdf1689fb33a3efdb1235bdcff16600", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 2, "deletions": 37, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1401cf37c0f4bd9e35d9a3abc1e4e69ee0c0ebeb/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1401cf37c0f4bd9e35d9a3abc1e4e69ee0c0ebeb/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=1401cf37c0f4bd9e35d9a3abc1e4e69ee0c0ebeb", "patch": "@@ -428,11 +428,6 @@ Objective-C and Objective-C++ Dialects}.\n @gccoptlist{-B@var{prefix}  -I@var{dir}  -iquote@var{dir}  -L@var{dir}\n -specs=@var{file}  -I- --sysroot=@var{dir}}\n \n-@item Target Options\n-@c I wrote this xref this way to avoid overfull hbox. -- rms\n-@xref{Target Options}.\n-@gccoptlist{-V @var{version}  -b @var{machine}}\n-\n @item Machine Dependent Options\n @xref{Submodel Options,,Hardware Models and Configurations}.\n @c This list is ordered alphanumerically by subsection name.\n@@ -9556,33 +9551,7 @@ proper position among the other output files.\n The usual way to run GCC is to run the executable called @file{gcc}, or\n @file{<machine>-gcc} when cross-compiling, or\n @file{<machine>-gcc-<version>} to run a version other than the one that\n-was installed last.  Sometimes this is inconvenient, so GCC provides\n-options that will switch to another cross-compiler or version.\n-\n-@table @gcctabopt\n-@item -b @var{machine}\n-@opindex b\n-The argument @var{machine} specifies the target machine for compilation.\n-\n-The value to use for @var{machine} is the same as was specified as the\n-machine type when configuring GCC as a cross-compiler.  For\n-example, if a cross-compiler was configured with @samp{configure\n-arm-elf}, meaning to compile for an arm processor with elf binaries,\n-then you would specify @option{-b arm-elf} to run that cross compiler.\n-Because there are other options beginning with @option{-b}, the\n-configuration must contain a hyphen, or @option{-b} alone should be one\n-argument followed by the configuration in the next argument.\n-\n-@item -V @var{version}\n-@opindex V\n-The argument @var{version} specifies which version of GCC to run.\n-This is useful when multiple versions are installed.  For example,\n-@var{version} might be @samp{4.0}, meaning to run GCC version 4.0.\n-@end table\n-\n-The @option{-V} and @option{-b} options work by running the\n-@file{<machine>-gcc-<version>} executable, so there's no real reason to\n-use them if you can just run that directly.\n+was installed last.\n \n @node Submodel Options\n @section Hardware Models and Configurations\n@@ -9591,11 +9560,7 @@ use them if you can just run that directly.\n @cindex hardware models and configurations, specifying\n @cindex machine dependent options\n \n-Earlier we discussed the standard option @option{-b} which chooses among\n-different installed compilers for completely different target\n-machines, such as VAX vs.@: 68000 vs.@: 80386.\n-\n-In addition, each of these target machine types can have its own\n+Each target machine types can have its own\n special options, starting with @samp{-m}, to choose among various\n hardware models or configurations---for example, 68010 vs 68020,\n floating coprocessor or none.  A single installed version of the"}, {"sha": "8337e161fe42212c104952a324849845e435616b", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1401cf37c0f4bd9e35d9a3abc1e4e69ee0c0ebeb/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1401cf37c0f4bd9e35d9a3abc1e4e69ee0c0ebeb/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=1401cf37c0f4bd9e35d9a3abc1e4e69ee0c0ebeb", "patch": "@@ -465,7 +465,7 @@ indicates an absolute file name.\n @defmac MD_EXEC_PREFIX\n If defined, this macro is an additional prefix to try after\n @code{STANDARD_EXEC_PREFIX}.  @code{MD_EXEC_PREFIX} is not searched\n-when the @option{-b} option is used, or the compiler is built as a cross\n+when the compiler is built as a cross\n compiler.  If you define @code{MD_EXEC_PREFIX}, then be sure to add it\n to the list of directories used to find the assembler in @file{configure.in}.\n @end defmac\n@@ -497,14 +497,13 @@ is built as a cross compiler.\n @defmac MD_STARTFILE_PREFIX\n If defined, this macro supplies an additional prefix to try after the\n standard prefixes.  @code{MD_EXEC_PREFIX} is not searched when the\n-@option{-b} option is used, or when the compiler is built as a cross\n-compiler.\n+compiler is built as a cross compiler.\n @end defmac\n \n @defmac MD_STARTFILE_PREFIX_1\n If defined, this macro supplies yet another prefix to try after the\n-standard prefixes.  It is not searched when the @option{-b} option is\n-used, or when the compiler is built as a cross compiler.\n+standard prefixes.  It is not searched when the compiler is built as a\n+cross compiler.\n @end defmac\n \n @defmac INIT_ENVIRONMENT"}, {"sha": "cee4bf7767be9d87d9cc846dec45558ba1e63dae", "filename": "gcc/gcc.c", "status": "modified", "additions": 2, "deletions": 88, "changes": 90, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1401cf37c0f4bd9e35d9a3abc1e4e69ee0c0ebeb/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1401cf37c0f4bd9e35d9a3abc1e4e69ee0c0ebeb/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=1401cf37c0f4bd9e35d9a3abc1e4e69ee0c0ebeb", "patch": "@@ -262,11 +262,11 @@ static int use_pipes;\n \n static const char *compiler_version;\n \n-/* The target version specified with -V */\n+/* The target version.  */\n \n static const char *const spec_version = DEFAULT_TARGET_VERSION;\n \n-/* The target machine specified with -b.  */\n+/* The target machine.  */\n \n static const char *spec_machine = DEFAULT_TARGET_MACHINE;\n \n@@ -3420,8 +3420,6 @@ display_help (void)\n   --sysroot=<directory>    Use <directory> as the root directory for headers\\n\\\n                            and libraries\\n\"), stdout);\n   fputs (_(\"  -B <directory>           Add <directory> to the compiler's search paths\\n\"), stdout);\n-  fputs (_(\"  -b <machine>             Run gcc for target <machine>, if installed\\n\"), stdout);\n-  fputs (_(\"  -V <version>             Run gcc version number <version>, if installed\\n\"), stdout);\n   fputs (_(\"  -v                       Display the programs invoked by the compiler\\n\"), stdout);\n   fputs (_(\"  -###                     Like -v but options quoted and commands not executed\\n\"), stdout);\n   fputs (_(\"  -E                       Preprocess only; do not compile, assemble or link\\n\"), stdout);\n@@ -3526,81 +3524,6 @@ process_command (int argc, const char **argv)\n \t}\n     }\n \n-  /* If there is a -V or -b option (or both), process it now, before\n-     trying to interpret the rest of the command line.\n-     Use heuristic that all configuration names must have at least\n-     one dash '-'. This allows us to pass options starting with -b.  */\n-  if (argc > 1 && argv[1][0] == '-'\n-      && (argv[1][1] == 'V'\n-\t  || (argv[1][1] == 'b'\n-\t      && (argv[1][2] == '\\0'\n-\t\t  || NULL != strchr (argv[1] + 2, '-')))))\n-    {\n-      const char *new_version = DEFAULT_TARGET_VERSION;\n-      const char *new_machine = DEFAULT_TARGET_MACHINE;\n-      const char *progname = argv[0];\n-      char **new_argv;\n-      char *new_argv0;\n-      int baselen;\n-      int status = 0;\n-      int err = 0;\n-      const char *errmsg;\n-\n-      while (argc > 1 && argv[1][0] == '-'\n-\t     && (argv[1][1] == 'V'\n-\t\t || (argv[1][1] == 'b'\n-\t\t     && (argv[1][2] == '\\0'\n-\t\t\t || NULL != strchr (argv[1] + 2, '-')))))\n-\t{\n-\t  char opt = argv[1][1];\n-\t  const char *arg;\n-\t  if (argv[1][2] != '\\0')\n-\t    {\n-\t      arg = argv[1] + 2;\n-\t      argc -= 1;\n-\t      argv += 1;\n-\t    }\n-\t  else if (argc > 2)\n-\t    {\n-\t      arg = argv[2];\n-\t      argc -= 2;\n-\t      argv += 2;\n-\t    }\n-\t  else\n-\t    fatal (\"'-%c' option must have argument\", opt);\n-\t  if (opt == 'V')\n-\t    new_version = arg;\n-\t  else\n-\t    new_machine = arg;\n-\t}\n-\n-      for (baselen = strlen (progname); baselen > 0; baselen--)\n-\tif (IS_DIR_SEPARATOR (progname[baselen-1]))\n-\t  break;\n-      new_argv0 = XDUPVAR (char, progname, baselen,\n-\t\t\t   baselen + concat_length (new_version, new_machine,\n-\t\t\t\t\t\t    \"-gcc-\", NULL) + 1);\n-      strcpy (new_argv0 + baselen, new_machine);\n-      strcat (new_argv0, \"-gcc-\");\n-      strcat (new_argv0, new_version);\n-\n-      new_argv = XDUPVEC (char *, argv, argc + 1);\n-      new_argv[0] = new_argv0;\n-\n-      errmsg = pex_one (PEX_SEARCH, new_argv0, new_argv, progname, NULL,\n-\t\t\tNULL, &status, &err);\n-\n-      if (errmsg)\n-\t{\n-\t  if (err == 0)\n-\t    fatal (\"couldn't run '%s': %s\", new_argv0, errmsg);\n-\t  else\n-\t    fatal (\"couldn't run '%s': %s: %s\", new_argv0, errmsg,\n-\t\t    xstrerror (err));\n-        }\n-      exit (status);\n-    }\n-\n   /* Convert new-style -- options to old-style.  */\n   translate_options (&argc,\n \t\t     CONST_CAST2 (const char *const **, const char ***,\n@@ -4094,15 +4017,6 @@ process_command (int argc, const char **argv)\n \n \t  switch (c)\n \t    {\n-\t    case 'b':\n-\t      if (p[1] && NULL == strchr (argv[i] + 2, '-'))\n-\t\tgoto normal_switch;\n-\n-\t      /* Fall through.  */\n-\t    case 'V':\n-\t      fatal (\"'-%c' must come at the start of the command line\", c);\n-\t      break;\n-\n \t    case 'B':\n \t      {\n \t\tconst char *value;"}, {"sha": "3f80346dbc5918570706a7bce02b4a132534a86a", "filename": "gcc/gcc.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1401cf37c0f4bd9e35d9a3abc1e4e69ee0c0ebeb/gcc%2Fgcc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1401cf37c0f4bd9e35d9a3abc1e4e69ee0c0ebeb/gcc%2Fgcc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.h?ref=1401cf37c0f4bd9e35d9a3abc1e4e69ee0c0ebeb", "patch": "@@ -38,7 +38,7 @@ struct spec_function\n    || (CHAR) == 'e' || (CHAR) == 'T' || (CHAR) == 'u' \\\n    || (CHAR) == 'I' || (CHAR) == 'J' || (CHAR) == 'm' \\\n    || (CHAR) == 'x' || (CHAR) == 'L' || (CHAR) == 'A' \\\n-   || (CHAR) == 'V' || (CHAR) == 'B' || (CHAR) == 'b')\n+   || (CHAR) == 'B' )\n \n /* This defines which multi-letter switches take arguments.  */\n "}]}