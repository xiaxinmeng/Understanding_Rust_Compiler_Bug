{"sha": "e0422ed081029c1304889fecc84625d11817ead6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTA0MjJlZDA4MTAyOWMxMzA0ODg5ZmVjYzg0NjI1ZDExODE3ZWFkNg==", "commit": {"author": {"name": "Alexandre Petit-Bianco", "email": "apbianco@cygnus.com", "date": "2000-04-05T23:57:19Z"}, "committer": {"name": "Alexandre Petit-Bianco", "email": "apbianco@gcc.gnu.org", "date": "2000-04-05T23:57:19Z"}, "message": "class.c: (java_hash_hash_tree_node): Renamed from `decl_hash', made global.\n\n2000-04-05  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n\n        * class.c: (java_hash_hash_tree_node): Renamed from `decl_hash',\n        made global.\n        (java_hash_compare_tree_node): Renamed from `decl_compare, made\n        global.\n        (add_method_1): Use `java_hash_hash_tree_node' and\n        `java_hash_compare_tree_node'.\n        * java-tree.h: (java_hash_hash_tree_node): Prototyped.\n        (java_hash_compare_tree_node): Likewise.\n        * parse.y (find_applicable_accessible_methods_list): Create,\n        delete and use a hash table to remember already searched interfaces.\n\nFrom-SVN: r32947", "tree": {"sha": "cc1b0c1538d105f85b359c4203c60cefa16ce6c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cc1b0c1538d105f85b359c4203c60cefa16ce6c7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e0422ed081029c1304889fecc84625d11817ead6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0422ed081029c1304889fecc84625d11817ead6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e0422ed081029c1304889fecc84625d11817ead6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0422ed081029c1304889fecc84625d11817ead6/comments", "author": null, "committer": null, "parents": [{"sha": "007baa49fe54d77966c746ddfd391c3fdb7c4eeb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/007baa49fe54d77966c746ddfd391c3fdb7c4eeb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/007baa49fe54d77966c746ddfd391c3fdb7c4eeb"}], "stats": {"total": 485, "additions": 226, "deletions": 259}, "files": [{"sha": "1a0edc8f87fcc68b36fd82285f09a72405a8a7ad", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0422ed081029c1304889fecc84625d11817ead6/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0422ed081029c1304889fecc84625d11817ead6/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=e0422ed081029c1304889fecc84625d11817ead6", "patch": "@@ -1,3 +1,16 @@\n+2000-04-05  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n+\n+\t* class.c: (java_hash_hash_tree_node): Renamed from `decl_hash',\n+\tmade global.\n+\t(java_hash_compare_tree_node): Renamed from `decl_compare, made\n+\tglobal.\n+\t(add_method_1): Use `java_hash_hash_tree_node' and\n+\t`java_hash_compare_tree_node'.\n+\t* java-tree.h: (java_hash_hash_tree_node): Prototyped.\n+\t(java_hash_compare_tree_node): Likewise.\n+\t* parse.y (find_applicable_accessible_methods_list): Create,\n+\tdelete and use a hash table to remember already searched interfaces.\n+\n 2000-04-03  Matt Welsh  <mdw@cs.berkeley.edu>\n \n \t* jcf-depend.c (add_entry): Fixed bug where list was always replaced"}, {"sha": "d8fa86cc6eb0de405294509fb148bbd12390804c", "filename": "gcc/java/class.c", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0422ed081029c1304889fecc84625d11817ead6/gcc%2Fjava%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0422ed081029c1304889fecc84625d11817ead6/gcc%2Fjava%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fclass.c?ref=e0422ed081029c1304889fecc84625d11817ead6", "patch": "@@ -594,22 +594,25 @@ init_test_hash_newfunc (entry, table, string)\n   return (struct hash_entry *) ret;\n }\n \n-static unsigned long\n-decl_hash (k)\n+/* Hash table helpers. Also reused in find_applicable_accessible_methods_list\n+   (parse.y). The hash of a tree node is it's pointer value,\n+   comparison is direct. */\n+\n+unsigned long\n+java_hash_hash_tree_node (k)\n      hash_table_key k;\n {\n   return (long) k;\n }\n \n-static boolean\n-decl_compare (k1, k2)\n+boolean\n+java_hash_compare_tree_node (k1, k2)\n      hash_table_key k1;\n      hash_table_key k2;\n {\n   return ((char*) k1 == (char*) k2);\n }\n \n-\n tree\n add_method_1 (handle_class, access_flags, name, function_type)\n      tree handle_class;\n@@ -632,8 +635,8 @@ add_method_1 (handle_class, access_flags, name, function_type)\n \n   /* Initialize the static initializer test table.  */\n   hash_table_init (&DECL_FUNCTION_INIT_TEST_TABLE (fndecl),\n-\t\t   init_test_hash_newfunc, decl_hash,\n-\t\t   decl_compare);\n+\t\t   init_test_hash_newfunc, java_hash_hash_tree_node, \n+\t\t   java_hash_compare_tree_node);\n \n   TREE_CHAIN (fndecl) = TYPE_METHODS (handle_class);\n   TYPE_METHODS (handle_class) = fndecl;"}, {"sha": "e38ed81b1056552c4fd7a65b3ea72398ba00c069", "filename": "gcc/java/java-tree.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0422ed081029c1304889fecc84625d11817ead6/gcc%2Fjava%2Fjava-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0422ed081029c1304889fecc84625d11817ead6/gcc%2Fjava%2Fjava-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjava-tree.h?ref=e0422ed081029c1304889fecc84625d11817ead6", "patch": "@@ -753,6 +753,9 @@ void java_debug_context PARAMS ((void));\n void safe_layout_class PARAMS ((tree));\n \n extern tree get_boehm_type_descriptor PARAMS ((tree));\n+extern unsigned long java_hash_hash_tree_node PARAMS ((hash_table_key));\n+extern boolean java_hash_compare_tree_node PARAMS ((hash_table_key, \n+\t\t\t\t\t\t    hash_table_key));\n \n /* We use ARGS_SIZE_RTX to indicate that gcc/expr.h has been included\n    to declare `enum expand_modifier'. */"}, {"sha": "d476617ab4a4a3d169d729a1b2b8504b0d6893d8", "filename": "gcc/java/parse.c", "status": "modified", "additions": 181, "deletions": 241, "changes": 422, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0422ed081029c1304889fecc84625d11817ead6/gcc%2Fjava%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0422ed081029c1304889fecc84625d11817ead6/gcc%2Fjava%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.c?ref=e0422ed081029c1304889fecc84625d11817ead6", "patch": "@@ -1,6 +1,7 @@\n \n /*  A Bison parser, made from ./parse.y\n-    by GNU Bison version 1.28  */\n+ by  GNU Bison version 1.25\n+  */\n \n #define YYBISON 1  /* Identify Bison output.  */\n \n@@ -11,113 +12,113 @@\n #define yychar java_char\n #define yydebug java_debug\n #define yynerrs java_nerrs\n-#define\tPLUS_TK\t257\n-#define\tMINUS_TK\t258\n-#define\tMULT_TK\t259\n-#define\tDIV_TK\t260\n-#define\tREM_TK\t261\n-#define\tLS_TK\t262\n-#define\tSRS_TK\t263\n-#define\tZRS_TK\t264\n-#define\tAND_TK\t265\n-#define\tXOR_TK\t266\n-#define\tOR_TK\t267\n-#define\tBOOL_AND_TK\t268\n-#define\tBOOL_OR_TK\t269\n-#define\tEQ_TK\t270\n-#define\tNEQ_TK\t271\n-#define\tGT_TK\t272\n-#define\tGTE_TK\t273\n-#define\tLT_TK\t274\n-#define\tLTE_TK\t275\n-#define\tPLUS_ASSIGN_TK\t276\n-#define\tMINUS_ASSIGN_TK\t277\n-#define\tMULT_ASSIGN_TK\t278\n-#define\tDIV_ASSIGN_TK\t279\n-#define\tREM_ASSIGN_TK\t280\n-#define\tLS_ASSIGN_TK\t281\n-#define\tSRS_ASSIGN_TK\t282\n-#define\tZRS_ASSIGN_TK\t283\n-#define\tAND_ASSIGN_TK\t284\n-#define\tXOR_ASSIGN_TK\t285\n-#define\tOR_ASSIGN_TK\t286\n-#define\tPUBLIC_TK\t287\n-#define\tPRIVATE_TK\t288\n-#define\tPROTECTED_TK\t289\n-#define\tSTATIC_TK\t290\n-#define\tFINAL_TK\t291\n-#define\tSYNCHRONIZED_TK\t292\n-#define\tVOLATILE_TK\t293\n-#define\tTRANSIENT_TK\t294\n-#define\tNATIVE_TK\t295\n-#define\tPAD_TK\t296\n-#define\tABSTRACT_TK\t297\n-#define\tMODIFIER_TK\t298\n-#define\tDECR_TK\t299\n-#define\tINCR_TK\t300\n-#define\tDEFAULT_TK\t301\n-#define\tIF_TK\t302\n-#define\tTHROW_TK\t303\n-#define\tBOOLEAN_TK\t304\n-#define\tDO_TK\t305\n-#define\tIMPLEMENTS_TK\t306\n-#define\tTHROWS_TK\t307\n-#define\tBREAK_TK\t308\n-#define\tIMPORT_TK\t309\n-#define\tELSE_TK\t310\n-#define\tINSTANCEOF_TK\t311\n-#define\tRETURN_TK\t312\n-#define\tVOID_TK\t313\n-#define\tCATCH_TK\t314\n-#define\tINTERFACE_TK\t315\n-#define\tCASE_TK\t316\n-#define\tEXTENDS_TK\t317\n-#define\tFINALLY_TK\t318\n-#define\tSUPER_TK\t319\n-#define\tWHILE_TK\t320\n-#define\tCLASS_TK\t321\n-#define\tSWITCH_TK\t322\n-#define\tCONST_TK\t323\n-#define\tTRY_TK\t324\n-#define\tFOR_TK\t325\n-#define\tNEW_TK\t326\n-#define\tCONTINUE_TK\t327\n-#define\tGOTO_TK\t328\n-#define\tPACKAGE_TK\t329\n-#define\tTHIS_TK\t330\n-#define\tBYTE_TK\t331\n-#define\tSHORT_TK\t332\n-#define\tINT_TK\t333\n-#define\tLONG_TK\t334\n-#define\tCHAR_TK\t335\n-#define\tINTEGRAL_TK\t336\n-#define\tFLOAT_TK\t337\n-#define\tDOUBLE_TK\t338\n-#define\tFP_TK\t339\n-#define\tID_TK\t340\n-#define\tREL_QM_TK\t341\n-#define\tREL_CL_TK\t342\n-#define\tNOT_TK\t343\n-#define\tNEG_TK\t344\n-#define\tASSIGN_ANY_TK\t345\n-#define\tASSIGN_TK\t346\n-#define\tOP_TK\t347\n-#define\tCP_TK\t348\n-#define\tOCB_TK\t349\n-#define\tCCB_TK\t350\n-#define\tOSB_TK\t351\n-#define\tCSB_TK\t352\n-#define\tSC_TK\t353\n-#define\tC_TK\t354\n-#define\tDOT_TK\t355\n-#define\tSTRING_LIT_TK\t356\n-#define\tCHAR_LIT_TK\t357\n-#define\tINT_LIT_TK\t358\n-#define\tFP_LIT_TK\t359\n-#define\tTRUE_TK\t360\n-#define\tFALSE_TK\t361\n-#define\tBOOL_LIT_TK\t362\n-#define\tNULL_TK\t363\n+#define\tPLUS_TK\t258\n+#define\tMINUS_TK\t259\n+#define\tMULT_TK\t260\n+#define\tDIV_TK\t261\n+#define\tREM_TK\t262\n+#define\tLS_TK\t263\n+#define\tSRS_TK\t264\n+#define\tZRS_TK\t265\n+#define\tAND_TK\t266\n+#define\tXOR_TK\t267\n+#define\tOR_TK\t268\n+#define\tBOOL_AND_TK\t269\n+#define\tBOOL_OR_TK\t270\n+#define\tEQ_TK\t271\n+#define\tNEQ_TK\t272\n+#define\tGT_TK\t273\n+#define\tGTE_TK\t274\n+#define\tLT_TK\t275\n+#define\tLTE_TK\t276\n+#define\tPLUS_ASSIGN_TK\t277\n+#define\tMINUS_ASSIGN_TK\t278\n+#define\tMULT_ASSIGN_TK\t279\n+#define\tDIV_ASSIGN_TK\t280\n+#define\tREM_ASSIGN_TK\t281\n+#define\tLS_ASSIGN_TK\t282\n+#define\tSRS_ASSIGN_TK\t283\n+#define\tZRS_ASSIGN_TK\t284\n+#define\tAND_ASSIGN_TK\t285\n+#define\tXOR_ASSIGN_TK\t286\n+#define\tOR_ASSIGN_TK\t287\n+#define\tPUBLIC_TK\t288\n+#define\tPRIVATE_TK\t289\n+#define\tPROTECTED_TK\t290\n+#define\tSTATIC_TK\t291\n+#define\tFINAL_TK\t292\n+#define\tSYNCHRONIZED_TK\t293\n+#define\tVOLATILE_TK\t294\n+#define\tTRANSIENT_TK\t295\n+#define\tNATIVE_TK\t296\n+#define\tPAD_TK\t297\n+#define\tABSTRACT_TK\t298\n+#define\tMODIFIER_TK\t299\n+#define\tDECR_TK\t300\n+#define\tINCR_TK\t301\n+#define\tDEFAULT_TK\t302\n+#define\tIF_TK\t303\n+#define\tTHROW_TK\t304\n+#define\tBOOLEAN_TK\t305\n+#define\tDO_TK\t306\n+#define\tIMPLEMENTS_TK\t307\n+#define\tTHROWS_TK\t308\n+#define\tBREAK_TK\t309\n+#define\tIMPORT_TK\t310\n+#define\tELSE_TK\t311\n+#define\tINSTANCEOF_TK\t312\n+#define\tRETURN_TK\t313\n+#define\tVOID_TK\t314\n+#define\tCATCH_TK\t315\n+#define\tINTERFACE_TK\t316\n+#define\tCASE_TK\t317\n+#define\tEXTENDS_TK\t318\n+#define\tFINALLY_TK\t319\n+#define\tSUPER_TK\t320\n+#define\tWHILE_TK\t321\n+#define\tCLASS_TK\t322\n+#define\tSWITCH_TK\t323\n+#define\tCONST_TK\t324\n+#define\tTRY_TK\t325\n+#define\tFOR_TK\t326\n+#define\tNEW_TK\t327\n+#define\tCONTINUE_TK\t328\n+#define\tGOTO_TK\t329\n+#define\tPACKAGE_TK\t330\n+#define\tTHIS_TK\t331\n+#define\tBYTE_TK\t332\n+#define\tSHORT_TK\t333\n+#define\tINT_TK\t334\n+#define\tLONG_TK\t335\n+#define\tCHAR_TK\t336\n+#define\tINTEGRAL_TK\t337\n+#define\tFLOAT_TK\t338\n+#define\tDOUBLE_TK\t339\n+#define\tFP_TK\t340\n+#define\tID_TK\t341\n+#define\tREL_QM_TK\t342\n+#define\tREL_CL_TK\t343\n+#define\tNOT_TK\t344\n+#define\tNEG_TK\t345\n+#define\tASSIGN_ANY_TK\t346\n+#define\tASSIGN_TK\t347\n+#define\tOP_TK\t348\n+#define\tCP_TK\t349\n+#define\tOCB_TK\t350\n+#define\tCCB_TK\t351\n+#define\tOSB_TK\t352\n+#define\tCSB_TK\t353\n+#define\tSC_TK\t354\n+#define\tC_TK\t355\n+#define\tDOT_TK\t356\n+#define\tSTRING_LIT_TK\t357\n+#define\tCHAR_LIT_TK\t358\n+#define\tINT_LIT_TK\t359\n+#define\tFP_LIT_TK\t360\n+#define\tTRUE_TK\t361\n+#define\tFALSE_TK\t362\n+#define\tBOOL_LIT_TK\t363\n+#define\tNULL_TK\t364\n \n #line 48 \"./parse.y\"\n \n@@ -516,7 +517,7 @@ typedef union {\n #define\tYYFLAG\t\t-32768\n #define\tYYNTBASE\t110\n \n-#define YYTRANSLATE(x) ((unsigned)(x) <= 363 ? yytranslate[x] : 272)\n+#define YYTRANSLATE(x) ((unsigned)(x) <= 364 ? yytranslate[x] : 272)\n \n static const char yytranslate[] = {     0,\n      2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n@@ -544,18 +545,18 @@ static const char yytranslate[] = {     0,\n      2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n      2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n      2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n-     2,     2,     2,     2,     2,     1,     3,     4,     5,     6,\n-     7,     8,     9,    10,    11,    12,    13,    14,    15,    16,\n-    17,    18,    19,    20,    21,    22,    23,    24,    25,    26,\n-    27,    28,    29,    30,    31,    32,    33,    34,    35,    36,\n-    37,    38,    39,    40,    41,    42,    43,    44,    45,    46,\n-    47,    48,    49,    50,    51,    52,    53,    54,    55,    56,\n-    57,    58,    59,    60,    61,    62,    63,    64,    65,    66,\n-    67,    68,    69,    70,    71,    72,    73,    74,    75,    76,\n-    77,    78,    79,    80,    81,    82,    83,    84,    85,    86,\n-    87,    88,    89,    90,    91,    92,    93,    94,    95,    96,\n-    97,    98,    99,   100,   101,   102,   103,   104,   105,   106,\n-   107,   108,   109\n+     2,     2,     2,     2,     2,     1,     2,     3,     4,     5,\n+     6,     7,     8,     9,    10,    11,    12,    13,    14,    15,\n+    16,    17,    18,    19,    20,    21,    22,    23,    24,    25,\n+    26,    27,    28,    29,    30,    31,    32,    33,    34,    35,\n+    36,    37,    38,    39,    40,    41,    42,    43,    44,    45,\n+    46,    47,    48,    49,    50,    51,    52,    53,    54,    55,\n+    56,    57,    58,    59,    60,    61,    62,    63,    64,    65,\n+    66,    67,    68,    69,    70,    71,    72,    73,    74,    75,\n+    76,    77,    78,    79,    80,    81,    82,    83,    84,    85,\n+    86,    87,    88,    89,    90,    91,    92,    93,    94,    95,\n+    96,    97,    98,    99,   100,   101,   102,   103,   104,   105,\n+   106,   107,   108,   109\n };\n \n #if YYDEBUG != 0\n@@ -2386,8 +2387,7 @@ static const short yycheck[] = {     3,\n #define YYPURE 1\n \n /* -*-C-*-  Note some compilers choke on comments on `#line' lines.  */\n-#line 3 \"/usr/lib/bison.simple\"\n-/* This file comes from bison-1.28.  */\n+#line 3 \"/home/apbianco/install/intel-java-alpha/install-x86//share/bison.simple\"\n \n /* Skeleton output parser for bison,\n    Copyright (C) 1984, 1989, 1990 Free Software Foundation, Inc.\n@@ -2404,66 +2404,46 @@ static const short yycheck[] = {     3,\n \n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n-   Foundation, Inc., 59 Temple Place - Suite 330,\n-   Boston, MA 02111-1307, USA.  */\n+   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.  */\n \n /* As a special exception, when this file is copied by Bison into a\n    Bison output file, you may use that output file without restriction.\n    This special exception was added by the Free Software Foundation\n    in version 1.24 of Bison.  */\n \n-/* This is the parser code that is written into each bison parser\n-  when the %semantic_parser declaration is not specified in the grammar.\n-  It was written by Richard Stallman by simplifying the hairy parser\n-  used when %semantic_parser is specified.  */\n-\n-#ifndef YYSTACK_USE_ALLOCA\n-#ifdef alloca\n-#define YYSTACK_USE_ALLOCA\n-#else /* alloca not defined */\n+#ifndef alloca\n #ifdef __GNUC__\n-#define YYSTACK_USE_ALLOCA\n #define alloca __builtin_alloca\n #else /* not GNU C.  */\n-#if (!defined (__STDC__) && defined (sparc)) || defined (__sparc__) || defined (__sparc) || defined (__sgi) || (defined (__sun) && defined (__i386))\n-#define YYSTACK_USE_ALLOCA\n+#if (!defined (__STDC__) && defined (sparc)) || defined (__sparc__) || defined (__sparc) || defined (__sgi)\n #include <alloca.h>\n #else /* not sparc */\n-/* We think this test detects Watcom and Microsoft C.  */\n-/* This used to test MSDOS, but that is a bad idea\n-   since that symbol is in the user namespace.  */\n-#if (defined (_MSDOS) || defined (_MSDOS_)) && !defined (__TURBOC__)\n-#if 0 /* No need for malloc.h, which pollutes the namespace;\n-\t instead, just don't use alloca.  */\n+#if defined (MSDOS) && !defined (__TURBOC__)\n #include <malloc.h>\n-#endif\n #else /* not MSDOS, or __TURBOC__ */\n #if defined(_AIX)\n-/* I don't know what this was needed for, but it pollutes the namespace.\n-   So I turned it off.   rms, 2 May 1997.  */\n-/* #include <malloc.h>  */\n+#include <malloc.h>\n  #pragma alloca\n-#define YYSTACK_USE_ALLOCA\n-#else /* not MSDOS, or __TURBOC__, or _AIX */\n-#if 0\n-#ifdef __hpux /* haible@ilog.fr says this works for HPUX 9.05 and up,\n-\t\t and on HPUX 10.  Eventually we can turn this on.  */\n-#define YYSTACK_USE_ALLOCA\n-#define alloca __builtin_alloca\n+#else /* not MSDOS, __TURBOC__, or _AIX */\n+#ifdef __hpux\n+#ifdef __cplusplus\n+extern \"C\" {\n+void *alloca (unsigned int);\n+};\n+#else /* not __cplusplus */\n+void *alloca ();\n+#endif /* not __cplusplus */\n #endif /* __hpux */\n-#endif\n #endif /* not _AIX */\n #endif /* not MSDOS, or __TURBOC__ */\n-#endif /* not sparc */\n-#endif /* not GNU C */\n-#endif /* alloca not defined */\n-#endif /* YYSTACK_USE_ALLOCA not defined */\n+#endif /* not sparc.  */\n+#endif /* not GNU C.  */\n+#endif /* alloca not defined.  */\n \n-#ifdef YYSTACK_USE_ALLOCA\n-#define YYSTACK_ALLOC alloca\n-#else\n-#define YYSTACK_ALLOC malloc\n-#endif\n+/* This is the parser code that is written into each bison parser\n+  when the %semantic_parser declaration is not specified in the grammar.\n+  It was written by Richard Stallman by simplifying the hairy parser\n+  used when %semantic_parser is specified.  */\n \n /* Note: there must be only one dollar sign in this file.\n    It is replaced by the list of actions, each action\n@@ -2473,8 +2453,8 @@ static const short yycheck[] = {     3,\n #define yyclearin\t(yychar = YYEMPTY)\n #define YYEMPTY\t\t-2\n #define YYEOF\t\t0\n-#define YYACCEPT\tgoto yyacceptlab\n-#define YYABORT \tgoto yyabortlab\n+#define YYACCEPT\treturn(0)\n+#define YYABORT \treturn(1)\n #define YYERROR\t\tgoto yyerrlab1\n /* Like YYERROR except do call yyerror.\n    This remains here temporarily to ease the\n@@ -2555,12 +2535,12 @@ int yydebug;\t\t\t/*  nonzero means print parse trace\t*/\n #ifndef YYMAXDEPTH\n #define YYMAXDEPTH 10000\n #endif\n-\f\n-/* Define __yy_memcpy.  Note that the size argument\n-   should be passed with type unsigned int, because that is what the non-GCC\n-   definitions require.  With GCC, __builtin_memcpy takes an arg\n-   of type size_t, but it can handle unsigned int.  */\n \n+/* Prevent warning if -Wstrict-prototypes.  */\n+#ifdef __GNUC__\n+int yyparse (void);\n+#endif\n+\f\n #if __GNUC__ > 1\t\t/* GNU C and GNU C++ define this.  */\n #define __yy_memcpy(TO,FROM,COUNT)\t__builtin_memcpy(TO,FROM,COUNT)\n #else\t\t\t\t/* not GNU C or C++ */\n@@ -2572,7 +2552,7 @@ static void\n __yy_memcpy (to, from, count)\n      char *to;\n      char *from;\n-     unsigned int count;\n+     int count;\n {\n   register char *f = from;\n   register char *t = to;\n@@ -2587,10 +2567,10 @@ __yy_memcpy (to, from, count)\n /* This is the most reliable way to avoid incompatibilities\n    in available built-in functions on various systems.  */\n static void\n-__yy_memcpy (char *to, char *from, unsigned int count)\n+__yy_memcpy (char *to, char *from, int count)\n {\n-  register char *t = to;\n   register char *f = from;\n+  register char *t = to;\n   register int i = count;\n \n   while (i-- > 0)\n@@ -2600,7 +2580,7 @@ __yy_memcpy (char *to, char *from, unsigned int count)\n #endif\n #endif\n \f\n-#line 217 \"/usr/lib/bison.simple\"\n+#line 196 \"/home/apbianco/install/intel-java-alpha/install-x86//share/bison.simple\"\n \n /* The user can define YYPARSE_PARAM as the name of an argument to be passed\n    into yyparse.  The argument should have type void *.\n@@ -2621,15 +2601,6 @@ __yy_memcpy (char *to, char *from, unsigned int count)\n #define YYPARSE_PARAM_DECL\n #endif /* not YYPARSE_PARAM */\n \n-/* Prevent warning if -Wstrict-prototypes.  */\n-#ifdef __GNUC__\n-#ifdef YYPARSE_PARAM\n-int yyparse (void *);\n-#else\n-int yyparse (void);\n-#endif\n-#endif\n-\n int\n yyparse(YYPARSE_PARAM_ARG)\n      YYPARSE_PARAM_DECL\n@@ -2658,7 +2629,6 @@ yyparse(YYPARSE_PARAM_ARG)\n #endif\n \n   int yystacksize = YYINITDEPTH;\n-  int yyfree_stacks = 0;\n \n #ifdef YYPURE\n   int yychar;\n@@ -2743,32 +2713,18 @@ yyparse(YYPARSE_PARAM_ARG)\n       if (yystacksize >= YYMAXDEPTH)\n \t{\n \t  yyerror(\"parser stack overflow\");\n-\t  if (yyfree_stacks)\n-\t    {\n-\t      free (yyss);\n-\t      free (yyvs);\n-#ifdef YYLSP_NEEDED\n-\t      free (yyls);\n-#endif\n-\t    }\n \t  return 2;\n \t}\n       yystacksize *= 2;\n       if (yystacksize > YYMAXDEPTH)\n \tyystacksize = YYMAXDEPTH;\n-#ifndef YYSTACK_USE_ALLOCA\n-      yyfree_stacks = 1;\n-#endif\n-      yyss = (short *) YYSTACK_ALLOC (yystacksize * sizeof (*yyssp));\n-      __yy_memcpy ((char *)yyss, (char *)yyss1,\n-\t\t   size * (unsigned int) sizeof (*yyssp));\n-      yyvs = (YYSTYPE *) YYSTACK_ALLOC (yystacksize * sizeof (*yyvsp));\n-      __yy_memcpy ((char *)yyvs, (char *)yyvs1,\n-\t\t   size * (unsigned int) sizeof (*yyvsp));\n+      yyss = (short *) alloca (yystacksize * sizeof (*yyssp));\n+      __yy_memcpy ((char *)yyss, (char *)yyss1, size * sizeof (*yyssp));\n+      yyvs = (YYSTYPE *) alloca (yystacksize * sizeof (*yyvsp));\n+      __yy_memcpy ((char *)yyvs, (char *)yyvs1, size * sizeof (*yyvsp));\n #ifdef YYLSP_NEEDED\n-      yyls = (YYLTYPE *) YYSTACK_ALLOC (yystacksize * sizeof (*yylsp));\n-      __yy_memcpy ((char *)yyls, (char *)yyls1,\n-\t\t   size * (unsigned int) sizeof (*yylsp));\n+      yyls = (YYLTYPE *) alloca (yystacksize * sizeof (*yylsp));\n+      __yy_memcpy ((char *)yyls, (char *)yyls1, size * sizeof (*yylsp));\n #endif\n #endif /* no yyoverflow */\n \n@@ -5020,7 +4976,7 @@ case 503:\n     break;}\n }\n    /* the action file gets copied in in place of this dollarsign */\n-#line 543 \"/usr/lib/bison.simple\"\n+#line 498 \"/home/apbianco/install/intel-java-alpha/install-x86//share/bison.simple\"\n \f\n   yyvsp -= yylen;\n   yyssp -= yylen;\n@@ -5215,30 +5171,6 @@ case 503:\n \n   yystate = yyn;\n   goto yynewstate;\n-\n- yyacceptlab:\n-  /* YYACCEPT comes here.  */\n-  if (yyfree_stacks)\n-    {\n-      free (yyss);\n-      free (yyvs);\n-#ifdef YYLSP_NEEDED\n-      free (yyls);\n-#endif\n-    }\n-  return 0;\n-\n- yyabortlab:\n-  /* YYABORT comes here.  */\n-  if (yyfree_stacks)\n-    {\n-      free (yyss);\n-      free (yyvs);\n-#ifdef YYLSP_NEEDED\n-      free (yyls);\n-#endif\n-    }\n-  return 1;\n }\n #line 2546 \"./parse.y\"\n \n@@ -12537,22 +12469,29 @@ find_applicable_accessible_methods_list (lc, class, name, arglist)\n   /* Search interfaces */\n   if (CLASS_INTERFACE (TYPE_NAME (class)))\n     {\n-      static tree searched_interfaces = NULL_TREE;\n+      static struct hash_table t, *searched_interfaces = NULL;\n       static int search_not_done = 0;\n       int i, n;\n       tree basetype_vec = TYPE_BINFO_BASETYPES (class);\n \n-      /* Have we searched this interface already? We shoud use a hash\n-         table, FIXME */\n+      /* Search in the hash table, otherwise create a new one if\n+         necessary and insert the new entry. */\n+\n       if (searched_interfaces)\n-\t{  \n-\t  tree current;  \n-\t  for (current = searched_interfaces; \n-\t       current; current = TREE_CHAIN (current))\n-\t    if (TREE_VALUE (current) == class)\n-\t      return NULL;\n+\t{\n+\t  if (hash_lookup (searched_interfaces, \n+\t\t\t   (const hash_table_key) class, FALSE, NULL))\n+\t    return NULL;\n \t}\n-      searched_interfaces = tree_cons (NULL_TREE, class, searched_interfaces);\n+      else\n+\t{\n+\t  hash_table_init (&t, hash_newfunc, java_hash_hash_tree_node,\n+\t\t\t   java_hash_compare_tree_node);\n+\t  searched_interfaces = &t;\n+\t}\n+\n+      hash_lookup (searched_interfaces, \n+\t\t   (const hash_table_key) class, TRUE, NULL);\n \n       search_applicable_methods_list (lc, TYPE_METHODS (class), \n \t\t\t\t      name, arglist, &list, &all_list);\n@@ -12577,7 +12516,8 @@ find_applicable_accessible_methods_list (lc, class, name, arglist)\n \t    search_applicable_methods_list (lc, \n \t\t\t\t\t    TYPE_METHODS (object_type_node),\n \t\t\t\t\t    name, arglist, &list, &all_list);\n-\t  searched_interfaces = NULL_TREE;  \n+\t  hash_table_free (searched_interfaces);\n+\t  searched_interfaces = NULL;  \n \t}\n     }\n   /* Search classes */"}, {"sha": "bfb72429e8f2ea224ff152d3d49152d9c77fad97", "filename": "gcc/java/parse.y", "status": "modified", "additions": 19, "deletions": 11, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0422ed081029c1304889fecc84625d11817ead6/gcc%2Fjava%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0422ed081029c1304889fecc84625d11817ead6/gcc%2Fjava%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.y?ref=e0422ed081029c1304889fecc84625d11817ead6", "patch": "@@ -9839,22 +9839,29 @@ find_applicable_accessible_methods_list (lc, class, name, arglist)\n   /* Search interfaces */\n   if (CLASS_INTERFACE (TYPE_NAME (class)))\n     {\n-      static tree searched_interfaces = NULL_TREE;\n+      static struct hash_table t, *searched_interfaces = NULL;\n       static int search_not_done = 0;\n       int i, n;\n       tree basetype_vec = TYPE_BINFO_BASETYPES (class);\n \n-      /* Have we searched this interface already? We shoud use a hash\n-         table, FIXME */\n+      /* Search in the hash table, otherwise create a new one if\n+         necessary and insert the new entry. */\n+\n       if (searched_interfaces)\n-\t{  \n-\t  tree current;  \n-\t  for (current = searched_interfaces; \n-\t       current; current = TREE_CHAIN (current))\n-\t    if (TREE_VALUE (current) == class)\n-\t      return NULL;\n+\t{\n+\t  if (hash_lookup (searched_interfaces, \n+\t\t\t   (const hash_table_key) class, FALSE, NULL))\n+\t    return NULL;\n \t}\n-      searched_interfaces = tree_cons (NULL_TREE, class, searched_interfaces);\n+      else\n+\t{\n+\t  hash_table_init (&t, hash_newfunc, java_hash_hash_tree_node,\n+\t\t\t   java_hash_compare_tree_node);\n+\t  searched_interfaces = &t;\n+\t}\n+\n+      hash_lookup (searched_interfaces, \n+\t\t   (const hash_table_key) class, TRUE, NULL);\n \n       search_applicable_methods_list (lc, TYPE_METHODS (class), \n \t\t\t\t      name, arglist, &list, &all_list);\n@@ -9879,7 +9886,8 @@ find_applicable_accessible_methods_list (lc, class, name, arglist)\n \t    search_applicable_methods_list (lc, \n \t\t\t\t\t    TYPE_METHODS (object_type_node),\n \t\t\t\t\t    name, arglist, &list, &all_list);\n-\t  searched_interfaces = NULL_TREE;  \n+\t  hash_table_free (searched_interfaces);\n+\t  searched_interfaces = NULL;  \n \t}\n     }\n   /* Search classes */"}]}