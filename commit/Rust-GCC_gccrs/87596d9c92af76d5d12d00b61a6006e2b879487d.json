{"sha": "87596d9c92af76d5d12d00b61a6006e2b879487d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODc1OTZkOWM5MmFmNzZkNWQxMmQwMGI2MWE2MDA2ZTJiODc5NDg3ZA==", "commit": {"author": {"name": "Anthony Green", "email": "green@redhat.com", "date": "2001-06-02T09:18:14Z"}, "committer": {"name": "Anthony Green", "email": "green@gcc.gnu.org", "date": "2001-06-02T09:18:14Z"}, "message": "Fake a PASS for targets which don't support invocation.\n\nFrom-SVN: r42792", "tree": {"sha": "5210aef71259914c5e11d2caf65c4f24c76d4e89", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5210aef71259914c5e11d2caf65c4f24c76d4e89"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/87596d9c92af76d5d12d00b61a6006e2b879487d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87596d9c92af76d5d12d00b61a6006e2b879487d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/87596d9c92af76d5d12d00b61a6006e2b879487d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87596d9c92af76d5d12d00b61a6006e2b879487d/comments", "author": {"login": "atgreen", "id": 89993, "node_id": "MDQ6VXNlcjg5OTkz", "avatar_url": "https://avatars.githubusercontent.com/u/89993?v=4", "gravatar_id": "", "url": "https://api.github.com/users/atgreen", "html_url": "https://github.com/atgreen", "followers_url": "https://api.github.com/users/atgreen/followers", "following_url": "https://api.github.com/users/atgreen/following{/other_user}", "gists_url": "https://api.github.com/users/atgreen/gists{/gist_id}", "starred_url": "https://api.github.com/users/atgreen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/atgreen/subscriptions", "organizations_url": "https://api.github.com/users/atgreen/orgs", "repos_url": "https://api.github.com/users/atgreen/repos", "events_url": "https://api.github.com/users/atgreen/events{/privacy}", "received_events_url": "https://api.github.com/users/atgreen/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c8fb98139d128d61cd1c4695dc115d3a16da66b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8fb98139d128d61cd1c4695dc115d3a16da66b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c8fb98139d128d61cd1c4695dc115d3a16da66b2"}], "stats": {"total": 11, "additions": 11, "deletions": 0}, "files": [{"sha": "41ce7adbed5f0aac3e4a5d2d5c68b111d31c3405", "filename": "libjava/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87596d9c92af76d5d12d00b61a6006e2b879487d/libjava%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87596d9c92af76d5d12d00b61a6006e2b879487d/libjava%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2FChangeLog?ref=87596d9c92af76d5d12d00b61a6006e2b879487d", "patch": "@@ -1,3 +1,8 @@\n+2001-06-02  Anthony Green  <green@redhat.com>\n+\n+\t* libjava.lang/invokethrow.java: Fake a pass for systems which\n+\tdon't support invocation.\n+\n 2001-05-30  Tom Tromey  <tromey@redhat.com>\n \n \t* libjava.lang/invokethrow.out: New file."}, {"sha": "8cf3ca0a51ba5ad3f0263b5213e0349d80a166f0", "filename": "libjava/testsuite/libjava.lang/invokethrow.java", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87596d9c92af76d5d12d00b61a6006e2b879487d/libjava%2Ftestsuite%2Flibjava.lang%2Finvokethrow.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87596d9c92af76d5d12d00b61a6006e2b879487d/libjava%2Ftestsuite%2Flibjava.lang%2Finvokethrow.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.lang%2Finvokethrow.java?ref=87596d9c92af76d5d12d00b61a6006e2b879487d", "patch": "@@ -22,6 +22,12 @@ public static void main (String[] args)\n       {\n \tSystem.out.println (x1.getTargetException ().getMessage ());\n       }\n+    catch (UnsupportedOperationException _)\n+      {\n+\t// Some systems don't support invocation, in which case we\n+\t// will fake a passing result.\n+\tSystem.out.println (\"hi!\");\n+      }\n     catch (Throwable _)\n       {\n       }"}]}