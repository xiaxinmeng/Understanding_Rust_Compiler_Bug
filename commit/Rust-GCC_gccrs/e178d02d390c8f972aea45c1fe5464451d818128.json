{"sha": "e178d02d390c8f972aea45c1fe5464451d818128", "node_id": "C_kwDOANBUbNoAKGUxNzhkMDJkMzkwYzhmOTcyYWVhNDVjMWZlNTQ2NDQ1MWQ4MTgxMjg", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-11-02T08:44:24Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-11-02T08:44:24Z"}, "message": "ia32: Disallow mode(V1TI) [PR103020]\n\nAs discussed in the PR, TImode isn't supported for -m32 on x86 (for the same\nreason as on most 32-bit targets, no support for > 2 * BITS_PER_WORD\nprecision integers), but since PR32280 V1TImode is allowed with -msse in SSE\nregs, V2TImode with -mavx or V4TImode with -mavx512f.\ntypedef __int128 V __attribute__((vector_size ({16,32,64}));\nwill not work, neither typedef int I __attribute__((mode(TI)));\nbut mode(V1TI), mode(V2TI) etc. are accepted with a warning when those\nISAs are enabled.  But they are certainly not fully supported, for some\noptabs maybe, but most of them will not.  And, veclower lowering those ops\nto TImode scalar operations will not work either because TImode isn't\nsupported.\n\nSo, this patch keeps V1TImode etc. in VALID*_MODE macros so that we can use\nit in certain instructions, but disallows it in\ntargetm.vector_mode_supported_p, so that we don't offer those modes to the\nuser as supported.\n\n2021-11-02  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR target/103020\n\t* config/i386/i386.c (ix86_vector_mode_supported_p): Reject vector\n\tmodes with TImode inner mode if 32-bit.\n\n\t* gcc.target/i386/pr103020.c: New test.", "tree": {"sha": "8f778ddcfcfa9050857a908c671cb881cc74e97a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8f778ddcfcfa9050857a908c671cb881cc74e97a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e178d02d390c8f972aea45c1fe5464451d818128", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e178d02d390c8f972aea45c1fe5464451d818128", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e178d02d390c8f972aea45c1fe5464451d818128", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e178d02d390c8f972aea45c1fe5464451d818128/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f81970b5f386630b98a33373c23dcc9234c6a980", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f81970b5f386630b98a33373c23dcc9234c6a980", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f81970b5f386630b98a33373c23dcc9234c6a980"}], "stats": {"total": 15, "additions": 15, "deletions": 0}, "files": [{"sha": "eb371d0eb8c05a4c0a452a897c04fc1d851a23bc", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e178d02d390c8f972aea45c1fe5464451d818128/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e178d02d390c8f972aea45c1fe5464451d818128/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=e178d02d390c8f972aea45c1fe5464451d818128", "patch": "@@ -21989,6 +21989,10 @@ ix86_libgcc_floating_mode_supported_p (scalar_float_mode mode)\n static bool\n ix86_vector_mode_supported_p (machine_mode mode)\n {\n+  /* For ia32, scalar TImode isn't supported and so V1TImode shouldn't be\n+     either.  */\n+  if (!TARGET_64BIT && GET_MODE_INNER (mode) == TImode)\n+    return false;\n   if (TARGET_SSE && VALID_SSE_REG_MODE (mode))\n     return true;\n   if (TARGET_SSE2 && VALID_SSE2_REG_MODE (mode))"}, {"sha": "75253c72c9affe6dc4c2172859b140e99d8e0722", "filename": "gcc/testsuite/gcc.target/i386/pr103020.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e178d02d390c8f972aea45c1fe5464451d818128/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr103020.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e178d02d390c8f972aea45c1fe5464451d818128/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr103020.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr103020.c?ref=e178d02d390c8f972aea45c1fe5464451d818128", "patch": "@@ -0,0 +1,11 @@\n+/* PR target/103020 */\n+/* { dg-do compile { target { ! int128 } } } */\n+/* { dg-additional-options \"-mavx512f\" } */\n+\n+typedef int TI __attribute__((mode (TI)));\t/* { dg-error \"unable to emulate\" } */\n+typedef int V1TI __attribute__((mode (V1TI)));\t/* { dg-error \"unable to emulate\" } */\n+typedef int V2TI __attribute__((mode (V2TI)));\t/* { dg-error \"unable to emulate\" } */\n+typedef int V4TI __attribute__((mode (V4TI)));\t/* { dg-error \"unable to emulate\" } */\n+/* { dg-warning \"is deprecated\" \"V1TI\" { target *-*-* } .-3 } */\n+/* { dg-warning \"is deprecated\" \"V2TI\" { target *-*-* } .-3 } */\n+/* { dg-warning \"is deprecated\" \"V4TI\" { target *-*-* } .-3 } */"}]}