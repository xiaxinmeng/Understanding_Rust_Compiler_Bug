{"sha": "1060d9404d1ab275b540efe1c7868d08c07a81e1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTA2MGQ5NDA0ZDFhYjI3NWI1NDBlZmUxYzc4NjhkMDhjMDdhODFlMQ==", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2015-02-07T15:13:15Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2015-02-07T15:13:15Z"}, "message": "re PR fortran/60956 (error reading (and writing) large text files in gfortran)\n\n2015-02-07  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n\n\tPR libgfortran/60956\n\t* io/fbuf.c (fbuf_flush_list): New function that only flushes\n\tif current fbuf position exceeds a limit.\n\t* io/fbuf.h: Declare the new function.\n\t* io/io.h (enum unit_mode): Add two new modes.\n\t* io/list_read.c (list_formatted_read_scalar): Call new function.\n\t* io/write.c: Include fbuf.h. (list_formatted_write_scalar):\n\tCall new function.\n\nFrom-SVN: r220505", "tree": {"sha": "81fec064d6dc7d20671ba02ca25c864dc9cec2f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/81fec064d6dc7d20671ba02ca25c864dc9cec2f8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1060d9404d1ab275b540efe1c7868d08c07a81e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1060d9404d1ab275b540efe1c7868d08c07a81e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1060d9404d1ab275b540efe1c7868d08c07a81e1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1060d9404d1ab275b540efe1c7868d08c07a81e1/comments", "author": null, "committer": null, "parents": [{"sha": "c0c91386b7ebd2c241d6ee2d5c172e57f5185472", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0c91386b7ebd2c241d6ee2d5c172e57f5185472", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0c91386b7ebd2c241d6ee2d5c172e57f5185472"}], "stats": {"total": 55, "additions": 54, "deletions": 1}, "files": [{"sha": "d3b8f8f6e48ebf2b501032cc1a666258ba722c81", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1060d9404d1ab275b540efe1c7868d08c07a81e1/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1060d9404d1ab275b540efe1c7868d08c07a81e1/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=1060d9404d1ab275b540efe1c7868d08c07a81e1", "patch": "@@ -1,3 +1,14 @@\n+2015-02-07  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libgfortran/60956\n+\t* io/fbuf.c (fbuf_flush_list): New function that only flushes\n+\tif current fbuf position exceeds a limit.\n+\t* io/fbuf.h: Declare the new function.\n+\t* io/io.h (enum unit_mode): Add two new modes.\n+\t* io/list_read.c (list_formatted_read_scalar): Call new function.\n+\t* io/write.c: Include fbuf.h. (list_formatted_write_scalar):\n+\tCall new function.\n+\n 2015-01-24  Janne Blomqvist  <jb@gcc.gnu.org>\n \n \tPR libfortran/64770"}, {"sha": "b3750d21a3ba2348ce5909758a78599fd350325a", "filename": "libgfortran/io/fbuf.c", "status": "modified", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1060d9404d1ab275b540efe1c7868d08c07a81e1/libgfortran%2Fio%2Ffbuf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1060d9404d1ab275b540efe1c7868d08c07a81e1/libgfortran%2Fio%2Ffbuf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Ffbuf.c?ref=1060d9404d1ab275b540efe1c7868d08c07a81e1", "patch": "@@ -171,6 +171,42 @@ fbuf_flush (gfc_unit * u, unit_mode mode)\n }\n \n \n+/* The mode argument is LIST_WRITING for write mode and LIST_READING for\n+   read.  This should only be used for list directed  I/O.\n+   Return value is 0 for success, -1 on failure.  */\n+\n+int\n+fbuf_flush_list (gfc_unit * u, unit_mode mode)\n+{\n+  int nwritten;\n+\n+  if (!u->fbuf)\n+    return 0;\n+\n+  if (u->fbuf->pos < 524288) /* Upper limit for list writing.  */\n+    return 0;\n+\n+  fbuf_debug (u, \"fbuf_flush_list with mode %d: \", mode);\n+\n+  if (mode == LIST_WRITING)\n+    {\n+      nwritten = swrite (u->s, u->fbuf->buf, u->fbuf->pos);\n+      if (nwritten < 0)\n+\treturn -1;\n+    }\n+\n+  /* Salvage remaining bytes for both reading and writing.  */ \n+  if (u->fbuf->act > u->fbuf->pos)\n+    memmove (u->fbuf->buf, u->fbuf->buf + u->fbuf->pos, \n+             u->fbuf->act - u->fbuf->pos);\n+\n+  u->fbuf->act -= u->fbuf->pos;\n+  u->fbuf->pos = 0;\n+\n+  return 0;\n+}\n+\n+\n int\n fbuf_seek (gfc_unit * u, int off, int whence)\n {"}, {"sha": "220c8d7b56dc848eed77410264250ebb519669e4", "filename": "libgfortran/io/fbuf.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1060d9404d1ab275b540efe1c7868d08c07a81e1/libgfortran%2Fio%2Ffbuf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1060d9404d1ab275b540efe1c7868d08c07a81e1/libgfortran%2Fio%2Ffbuf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Ffbuf.h?ref=1060d9404d1ab275b540efe1c7868d08c07a81e1", "patch": "@@ -59,6 +59,9 @@ internal_proto(fbuf_alloc);\n extern int fbuf_flush (gfc_unit *, unit_mode);\n internal_proto(fbuf_flush);\n \n+extern int fbuf_flush_list (gfc_unit *, unit_mode);\n+internal_proto(fbuf_flush_list);\n+\n extern int fbuf_seek (gfc_unit *, int, int);\n internal_proto(fbuf_seek);\n "}, {"sha": "f34d0c34cf6b66803b3d8a710484da6dab2290a4", "filename": "libgfortran/io/io.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1060d9404d1ab275b540efe1c7868d08c07a81e1/libgfortran%2Fio%2Fio.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1060d9404d1ab275b540efe1c7868d08c07a81e1/libgfortran%2Fio%2Fio.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Fio.h?ref=1060d9404d1ab275b540efe1c7868d08c07a81e1", "patch": "@@ -231,7 +231,7 @@ typedef enum\n unit_advance;\n \n typedef enum\n-{READING, WRITING}\n+{READING, WRITING, LIST_READING, LIST_WRITING}\n unit_mode;\n \n typedef enum"}, {"sha": "45243ed9f3931edd898b46b73ec3d9b84ec16ef9", "filename": "libgfortran/io/list_read.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1060d9404d1ab275b540efe1c7868d08c07a81e1/libgfortran%2Fio%2Flist_read.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1060d9404d1ab275b540efe1c7868d08c07a81e1/libgfortran%2Fio%2Flist_read.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Flist_read.c?ref=1060d9404d1ab275b540efe1c7868d08c07a81e1", "patch": "@@ -2210,6 +2210,7 @@ list_formatted_read_scalar (st_parameter_dt *dtp, bt type, void *p,\n       free_line (dtp);\n       hit_eof (dtp);\n     }\n+  fbuf_flush_list (dtp->u.p.current_unit, LIST_READING);\n   return err;\n }\n "}, {"sha": "3e890b981d123e19fb1280efab0b66b566ffaaa0", "filename": "libgfortran/io/write.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1060d9404d1ab275b540efe1c7868d08c07a81e1/libgfortran%2Fio%2Fwrite.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1060d9404d1ab275b540efe1c7868d08c07a81e1/libgfortran%2Fio%2Fwrite.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Fwrite.c?ref=1060d9404d1ab275b540efe1c7868d08c07a81e1", "patch": "@@ -25,6 +25,7 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n <http://www.gnu.org/licenses/>.  */\n \n #include \"io.h\"\n+#include \"fbuf.h\"\n #include \"format.h\"\n #include \"unix.h\"\n #include <assert.h>\n@@ -1585,6 +1586,7 @@ list_formatted_write_scalar (st_parameter_dt *dtp, bt type, void *p, int kind,\n       internal_error (&dtp->common, \"list_formatted_write(): Bad type\");\n     }\n \n+  fbuf_flush_list (dtp->u.p.current_unit, LIST_WRITING);\n   dtp->u.p.char_flag = (type == BT_CHARACTER);\n }\n "}]}