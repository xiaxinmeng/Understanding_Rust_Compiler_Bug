{"sha": "7b41f81532af0bc59a4121a057ee4a81f54b0eae", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2I0MWY4MTUzMmFmMGJjNTlhNDEyMWEwNTdlZTRhODFmNTRiMGVhZQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-10-26T19:11:25Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-10-26T19:11:25Z"}, "message": "(fix-header.o): Depend on fix-header.c.\n\n(scan-decls.o): New target.\n(gen-protos.o, scan.o): New targets.\n\n(deduced.h): Pass GCC source dir to scan-types.sh.\n\nFrom-SVN: r5900", "tree": {"sha": "78c30668f3f304783f1852b3b72c4ad7ba3ff72d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/78c30668f3f304783f1852b3b72c4ad7ba3ff72d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7b41f81532af0bc59a4121a057ee4a81f54b0eae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b41f81532af0bc59a4121a057ee4a81f54b0eae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b41f81532af0bc59a4121a057ee4a81f54b0eae", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b41f81532af0bc59a4121a057ee4a81f54b0eae/comments", "author": null, "committer": null, "parents": [{"sha": "829407e190ab929329b95cd68d0ece43157b65ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/829407e190ab929329b95cd68d0ece43157b65ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/829407e190ab929329b95cd68d0ece43157b65ab"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "06eab5b00d4cf1216b42ce836b0a1ed85034c6f4", "filename": "gcc/Makefile.in", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b41f81532af0bc59a4121a057ee4a81f54b0eae/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b41f81532af0bc59a4121a057ee4a81f54b0eae/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=7b41f81532af0bc59a4121a057ee4a81f54b0eae", "patch": "@@ -1571,12 +1571,15 @@ objc-headers: stmp-fixinc\n deduced.h: $(GCC_PASSES) $(srcdir)/scan-types.sh stmp-int-hdrs\n \tCC=\"$(GCC_FOR_TARGET) $(GCC_CFLAGS) $(ALL_CPPFLAGS) -Iinclude -I${SYSTEM_HEADER_DIR}\"; \\\n \t  export CC; \\\n-\t  $(srcdir)/scan-types.sh >tmp-deduced.h\n+\t  $(srcdir)/scan-types.sh \"$(srcdir)\" >tmp-deduced.h\n \tmv tmp-deduced.h deduced.h\n \n gen-protos: gen-protos.o scan.o\n \t${HOST_CC} -o gen-protos gen-protos.o scan.o\n \n+gen-protos.o: gen-protos.c scan.h\n+scan.o: scan.c scan.h\n+\n xsys-protos.h: $(GCC_PASSES) $(srcdir)/sys-protos.h deduced.h gen-protos Makefile\n \tcat deduced.h $(srcdir)/sys-protos.h > fixtmp.c\n \t$(GCC_FOR_TARGET) fixtmp.c -E \\\n@@ -1587,7 +1590,8 @@ xsys-protos.h: $(GCC_PASSES) $(srcdir)/sys-protos.h deduced.h gen-protos Makefil\n fix-header: fix-header.o scan-decls.o scan.o xsys-protos.h $(HOST_OBSTACK)\n \t$(HOST_CC) -o fix-header fix-header.o scan-decls.o scan.o $(HOST_OBSTACK)\n \n-fix-header.o: xsys-protos.h\n+fix-header.o: fix-header.c obstack.h scan.h xsys-protos.h\n+scan-decls.o: scan-decls.c scan.h\n \n # stmp-fixproto depends on this, not on fix-header directly.\n # The idea is to make sure fix-header gets built,"}]}