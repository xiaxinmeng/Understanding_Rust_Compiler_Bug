{"sha": "4e92c31f3a3d1e85c3269348f1953658f11e694f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGU5MmMzMWYzYTNkMWU4NWMzMjY5MzQ4ZjE5NTM2NThmMTFlNjk0Zg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2012-02-11T08:50:23Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2012-02-11T08:50:23Z"}, "message": "re PR c++/51910 (-frepo linking failure)\n\n\tPR c++/51910\n\t* tlink.c (demangled_hash_entry): Change mangled to a VEC.\n\t(demangle_new_symbols): Fill it.\n\t(scan_linker_output): Walk it.\n\t(start_tweaking): Split out from scan_linker_output.\n\t(maybe_tweak): Update sym->chosen.\n\t* Makefile.in (COLLECT2_OBJS): Add vec.o and gcc-none.o\n\nFrom-SVN: r184127", "tree": {"sha": "d83848df093e0931613ba5a004396792d78d19cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d83848df093e0931613ba5a004396792d78d19cc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4e92c31f3a3d1e85c3269348f1953658f11e694f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e92c31f3a3d1e85c3269348f1953658f11e694f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e92c31f3a3d1e85c3269348f1953658f11e694f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e92c31f3a3d1e85c3269348f1953658f11e694f/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bd0ba05d4c778a42c0199f7868c36975431edcb2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd0ba05d4c778a42c0199f7868c36975431edcb2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd0ba05d4c778a42c0199f7868c36975431edcb2"}], "stats": {"total": 131, "additions": 108, "deletions": 23}, "files": [{"sha": "9dce4240230fdf5cd1d838515340359a4ece8cd3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e92c31f3a3d1e85c3269348f1953658f11e694f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e92c31f3a3d1e85c3269348f1953658f11e694f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4e92c31f3a3d1e85c3269348f1953658f11e694f", "patch": "@@ -1,3 +1,13 @@\n+2012-02-10  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/51910\n+\t* tlink.c (demangled_hash_entry): Change mangled to a VEC.\n+\t(demangle_new_symbols): Fill it.\n+\t(scan_linker_output): Walk it.\n+\t(start_tweaking): Split out from scan_linker_output.\n+\t(maybe_tweak): Update sym->chosen.\n+\t* Makefile.in (COLLECT2_OBJS): Add vec.o and gcc-none.o\n+\n 2012-02-11  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR debug/52132"}, {"sha": "f6cf8ffca330237831137346dc512ecff770a918", "filename": "gcc/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e92c31f3a3d1e85c3269348f1953658f11e694f/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e92c31f3a3d1e85c3269348f1953658f11e694f/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=4e92c31f3a3d1e85c3269348f1953658f11e694f", "patch": "@@ -1946,7 +1946,7 @@ gcc-ranlib.c: gcc-ar.c\n gcc-nm.c: gcc-ar.c\n \tcp $^ $@\n \n-COLLECT2_OBJS = collect2.o collect2-aix.o tlink.o\n+COLLECT2_OBJS = collect2.o collect2-aix.o tlink.o vec.o ggc-none.o\n COLLECT2_LIBS = @COLLECT2_LIBS@\n collect2$(exeext): $(COLLECT2_OBJS) $(LIBDEPS)\n # Don't try modifying collect2 (aka ld) in place--it might be linking this."}, {"sha": "812cee10c3bfaca6051826d0a082d34540cad551", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e92c31f3a3d1e85c3269348f1953658f11e694f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e92c31f3a3d1e85c3269348f1953658f11e694f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4e92c31f3a3d1e85c3269348f1953658f11e694f", "patch": "@@ -1,3 +1,8 @@\n+2012-02-10  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/51910\n+\t* g++.dg/template/repo10.C: New.\n+\n 2012-02-11  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR debug/52132"}, {"sha": "c92f7a52b60d40040308321cc2020f6e32c74101", "filename": "gcc/testsuite/g++.dg/template/repo10.C", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e92c31f3a3d1e85c3269348f1953658f11e694f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Frepo10.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e92c31f3a3d1e85c3269348f1953658f11e694f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Frepo10.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Frepo10.C?ref=4e92c31f3a3d1e85c3269348f1953658f11e694f", "patch": "@@ -0,0 +1,16 @@\n+// PR c++/51910\n+// { dg-options -frepo }\n+// { dg-require-host-local \"\" }\n+// { dg-skip-if \"dkms are not final links\" { vxworks_kernel } }\n+// { dg-final cleanup-repo-files }\n+\n+template<typename T>\n+struct Foo\n+{\n+  virtual ~Foo() { }\n+};\n+\n+int main( int, char*[] )\n+{\n+  Foo<int> test;\n+}"}, {"sha": "67c7086ceb1effd354af44acb155ef845284f35b", "filename": "gcc/tlink.c", "status": "modified", "additions": 76, "deletions": 22, "changes": 98, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e92c31f3a3d1e85c3269348f1953658f11e694f/gcc%2Ftlink.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e92c31f3a3d1e85c3269348f1953658f11e694f/gcc%2Ftlink.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftlink.c?ref=4e92c31f3a3d1e85c3269348f1953658f11e694f", "patch": "@@ -32,6 +32,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"collect2.h\"\n #include \"filenames.h\"\n #include \"diagnostic-core.h\"\n+#include \"vec.h\"\n \n /* TARGET_64BIT may be defined to use driver specific functionality. */\n #undef TARGET_64BIT\n@@ -67,10 +68,14 @@ typedef struct file_hash_entry\n   int tweaking;\n } file;\n \n+typedef const char *str;\n+DEF_VEC_P(str);\n+DEF_VEC_ALLOC_P(str,heap);\n+\n typedef struct demangled_hash_entry\n {\n   const char *key;\n-  const char *mangled;\n+  VEC(str,heap) *mangled;\n } demangled;\n \n /* Hash and comparison functions for these hash tables.  */\n@@ -435,9 +440,15 @@ maybe_tweak (char *line, file *f)\n       sym->tweaked = 1;\n \n       if (line[0] == 'O')\n-\tline[0] = 'C';\n+\t{\n+\t  line[0] = 'C';\n+\t  sym->chosen = 1;\n+\t}\n       else\n-\tline[0] = 'O';\n+\t{\n+\t  line[0] = 'O';\n+\t  sym->chosen = 0;\n+\t}\n     }\n }\n \n@@ -598,8 +609,32 @@ demangle_new_symbols (void)\n \tcontinue;\n \n       dem = demangled_hash_lookup (p, true);\n-      dem->mangled = sym->key;\n+      VEC_safe_push (str, heap, dem->mangled, sym->key);\n+    }\n+}\n+\n+/* We want to tweak symbol SYM.  Return true if all is well, false on\n+   error.  */\n+\n+static bool\n+start_tweaking (symbol *sym)\n+{\n+  if (sym && sym->tweaked)\n+    {\n+      error (\"'%s' was assigned to '%s', but was not defined \"\n+\t     \"during recompilation, or vice versa\",\n+\t     sym->key, sym->file->key);\n+      return 0;\n+    }\n+  if (sym && !sym->tweaking)\n+    {\n+      if (tlink_verbose >= 2)\n+\tfprintf (stderr, _(\"collect: tweaking %s in %s\\n\"),\n+\t\t sym->key, sym->file->key);\n+      sym->tweaking = 1;\n+      file_push (sym->file);\n     }\n+  return true;\n }\n \n /* Step through the output of the linker, in the file named FNAME, and\n@@ -616,8 +651,11 @@ scan_linker_output (const char *fname)\n     {\n       char *p = line, *q;\n       symbol *sym;\n+      demangled *dem = 0;\n       int end;\n       int ok = 0;\n+      unsigned ix;\n+      str s;\n \n       /* On darwin9, we might have to skip \" in \" lines as well.  */\n       if (skip_next_in_line\n@@ -662,7 +700,6 @@ scan_linker_output (const char *fname)\n \t/* Try a mangled name in quotes.  */\n \t{\n \t  char *oldq = q + 1;\n-\t  demangled *dem = 0;\n \t  q = 0;\n \n \t  /* On darwin9, we look for \"foo\" referenced from:\\n\\(.* in .*\\n\\)*  */\n@@ -718,9 +755,7 @@ scan_linker_output (const char *fname)\n \t    {\n \t      *q = 0;\n \t      dem = demangled_hash_lookup (p, false);\n-\t      if (dem)\n-\t\tsym = symbol_hash_lookup (dem->mangled, false);\n-\t      else\n+\t      if (!dem)\n \t\t{\n \t\t  if (!strncmp (p, USER_LABEL_PREFIX,\n \t\t\t\tstrlen (USER_LABEL_PREFIX)))\n@@ -730,24 +765,43 @@ scan_linker_output (const char *fname)\n \t    }\n \t}\n \n-      if (sym && sym->tweaked)\n+      if (dem)\n \t{\n-\t  error (\"'%s' was assigned to '%s', but was not defined \"\n-\t\t \"during recompilation, or vice versa\",\n-\t\t sym->key, sym->file->key);\n-\t  fclose (stream);\n-\t  return 0;\n-\t}\n-      if (sym && !sym->tweaking)\n-\t{\n-\t  if (tlink_verbose >= 2)\n-\t    fprintf (stderr, _(\"collect: tweaking %s in %s\\n\"),\n-\t\t     sym->key, sym->file->key);\n-\t  sym->tweaking = 1;\n-\t  file_push (sym->file);\n+\t  /* We found a demangled name.  If this is the name of a\n+\t     constructor or destructor, there can be several mangled names\n+\t     that match it, so choose or unchoose all of them.  If some are\n+\t     chosen and some not, leave the later ones that don't match\n+\t     alone for now; either this will cause the link to suceed, or\n+\t     on the next attempt we will switch all of them the other way\n+\t     and that will cause it to succeed.  */\n+\t  int chosen = 0;\n+\t  int len = VEC_length (str, dem->mangled);\n+\t  ok = true;\n+\t  FOR_EACH_VEC_ELT (str, dem->mangled, ix, s)\n+\t    {\n+\t      sym = symbol_hash_lookup (s, false);\n+\t      if (ix == 0)\n+\t\tchosen = sym->chosen;\n+\t      else if (sym->chosen != chosen)\n+\t\t/* Mismatch.  */\n+\t\tcontinue;\n+\t      /* Avoid an error about re-tweaking when we guess wrong in\n+\t\t the case of mismatch.  */\n+\t      if (len > 1)\n+\t\tsym->tweaked = false;\n+\t      ok = start_tweaking (sym);\n+\t    }\n \t}\n+      else\n+\tok = start_tweaking (sym);\n \n       obstack_free (&temporary_obstack, temporary_firstobj);\n+\n+      if (!ok)\n+\t{\n+\t  fclose (stream);\n+\t  return 0;\n+\t}\n     }\n \n   fclose (stream);"}]}