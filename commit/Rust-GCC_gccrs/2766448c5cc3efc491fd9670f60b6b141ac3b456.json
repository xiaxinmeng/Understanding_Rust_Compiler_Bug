{"sha": "2766448c5cc3efc491fd9670f60b6b141ac3b456", "node_id": "C_kwDOANBUbNoAKDI3NjY0NDhjNWNjM2VmYzQ5MWZkOTY3MGY2MGI2YjE0MWFjM2I0NTY", "commit": {"author": {"name": "Chung-Lin Tang", "email": "cltang@codesourcery.com", "date": "2021-12-09T16:38:20Z"}, "committer": {"name": "Chung-Lin Tang", "email": "cltang@codesourcery.com", "date": "2021-12-09T16:39:03Z"}, "message": "openmp: Fix libgomp.c++ testsuite errors for non-offload configs\n\nSome testcases for libgomp.c++ only works for non-shared address space offloading,\nbecause it exercises the zero-length array section behavior for offloaded\naddress space, testing for NULL/non-NULL cases.\n\nlibgomp/ChangeLog:\n\n\t* testsuite/libgomp.c++/target-lambda-1.C: Only run under\n\t\"target offload_device_nonshared_as\"\n\t* testsuite/libgomp.c++/target-this-3.C: Likewise.\n\t* testsuite/libgomp.c++/target-this-4.C: Likewise.", "tree": {"sha": "a5a05dcade3f176f240dbdd0f67e55bbd13fb2f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a5a05dcade3f176f240dbdd0f67e55bbd13fb2f1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2766448c5cc3efc491fd9670f60b6b141ac3b456", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2766448c5cc3efc491fd9670f60b6b141ac3b456", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2766448c5cc3efc491fd9670f60b6b141ac3b456", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2766448c5cc3efc491fd9670f60b6b141ac3b456/comments", "author": {"login": "cltang", "id": 4055966, "node_id": "MDQ6VXNlcjQwNTU5NjY=", "avatar_url": "https://avatars.githubusercontent.com/u/4055966?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cltang", "html_url": "https://github.com/cltang", "followers_url": "https://api.github.com/users/cltang/followers", "following_url": "https://api.github.com/users/cltang/following{/other_user}", "gists_url": "https://api.github.com/users/cltang/gists{/gist_id}", "starred_url": "https://api.github.com/users/cltang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cltang/subscriptions", "organizations_url": "https://api.github.com/users/cltang/orgs", "repos_url": "https://api.github.com/users/cltang/repos", "events_url": "https://api.github.com/users/cltang/events{/privacy}", "received_events_url": "https://api.github.com/users/cltang/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cltang", "id": 4055966, "node_id": "MDQ6VXNlcjQwNTU5NjY=", "avatar_url": "https://avatars.githubusercontent.com/u/4055966?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cltang", "html_url": "https://github.com/cltang", "followers_url": "https://api.github.com/users/cltang/followers", "following_url": "https://api.github.com/users/cltang/following{/other_user}", "gists_url": "https://api.github.com/users/cltang/gists{/gist_id}", "starred_url": "https://api.github.com/users/cltang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cltang/subscriptions", "organizations_url": "https://api.github.com/users/cltang/orgs", "repos_url": "https://api.github.com/users/cltang/repos", "events_url": "https://api.github.com/users/cltang/events{/privacy}", "received_events_url": "https://api.github.com/users/cltang/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6a0f6018ba41658b9b85ad82ed1bd748754f3eca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a0f6018ba41658b9b85ad82ed1bd748754f3eca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a0f6018ba41658b9b85ad82ed1bd748754f3eca"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "c5acbb8bf30ca55734f04282c9c711a265698850", "filename": "libgomp/testsuite/libgomp.c++/target-lambda-1.C", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2766448c5cc3efc491fd9670f60b6b141ac3b456/libgomp%2Ftestsuite%2Flibgomp.c%2B%2B%2Ftarget-lambda-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2766448c5cc3efc491fd9670f60b6b141ac3b456/libgomp%2Ftestsuite%2Flibgomp.c%2B%2B%2Ftarget-lambda-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.c%2B%2B%2Ftarget-lambda-1.C?ref=2766448c5cc3efc491fd9670f60b6b141ac3b456", "patch": "@@ -1,3 +1,5 @@\n+// { dg-do run { target offload_device_nonshared_as } }\n+\n #include <cstdlib>\n #include <cstring>\n "}, {"sha": "6049ba8e201308acb5947539a5802d067473e02d", "filename": "libgomp/testsuite/libgomp.c++/target-this-3.C", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2766448c5cc3efc491fd9670f60b6b141ac3b456/libgomp%2Ftestsuite%2Flibgomp.c%2B%2B%2Ftarget-this-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2766448c5cc3efc491fd9670f60b6b141ac3b456/libgomp%2Ftestsuite%2Flibgomp.c%2B%2B%2Ftarget-this-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.c%2B%2B%2Ftarget-this-3.C?ref=2766448c5cc3efc491fd9670f60b6b141ac3b456", "patch": "@@ -1,3 +1,5 @@\n+// { dg-do run { target offload_device_nonshared_as } }\n+\n #include <stdio.h>\n #include <string.h>\n extern \"C\" void abort ();"}, {"sha": "f0237c9b6b83c1b7fc8b897c2196d44df173b082", "filename": "libgomp/testsuite/libgomp.c++/target-this-4.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2766448c5cc3efc491fd9670f60b6b141ac3b456/libgomp%2Ftestsuite%2Flibgomp.c%2B%2B%2Ftarget-this-4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2766448c5cc3efc491fd9670f60b6b141ac3b456/libgomp%2Ftestsuite%2Flibgomp.c%2B%2B%2Ftarget-this-4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.c%2B%2B%2Ftarget-this-4.C?ref=2766448c5cc3efc491fd9670f60b6b141ac3b456", "patch": "@@ -1,6 +1,7 @@\n-\n // We use 'auto' without a function return type, so specify dialect here\n // { dg-additional-options \"-std=c++14\" }\n+// { dg-do run { target offload_device_nonshared_as } }\n+\n #include <cstdlib>\n #include <cstring>\n "}]}