{"sha": "b61148dd4f5b244381b91b86dd7e921698f92687", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjYxMTQ4ZGQ0ZjViMjQ0MzgxYjkxYjg2ZGQ3ZTkyMTY5OGY5MjY4Nw==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "1999-08-20T21:57:38Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "1999-08-20T21:57:38Z"}, "message": "* c-common.c (c_get_alias_set): Update comment.\n\nFrom-SVN: r28780", "tree": {"sha": "7fca7eb8154acbe4119ad9cc2a8c8d081dd4a9ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7fca7eb8154acbe4119ad9cc2a8c8d081dd4a9ab"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b61148dd4f5b244381b91b86dd7e921698f92687", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b61148dd4f5b244381b91b86dd7e921698f92687", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b61148dd4f5b244381b91b86dd7e921698f92687", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b61148dd4f5b244381b91b86dd7e921698f92687/comments", "author": null, "committer": null, "parents": [{"sha": "f2655b99bc6217d561b0ba64e9c0e89b2ef1626d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2655b99bc6217d561b0ba64e9c0e89b2ef1626d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2655b99bc6217d561b0ba64e9c0e89b2ef1626d"}], "stats": {"total": 27, "additions": 22, "deletions": 5}, "files": [{"sha": "abe370202527cda1654336fcb804970b46d4d0e5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b61148dd4f5b244381b91b86dd7e921698f92687/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b61148dd4f5b244381b91b86dd7e921698f92687/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b61148dd4f5b244381b91b86dd7e921698f92687", "patch": "@@ -1,3 +1,7 @@\n+Fri Aug 20 15:02:10 1999  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* c-common.c (c_get_alias_set): Update comment.\n+\n 1999-08-20  Andreas Jaeger  <aj@arthur.rhein-neckar.de>\n \n \t* linux.h (LIB_SPEC): Added."}, {"sha": "bcf22109db2518eb820d6b3290f4c429de34ceb5", "filename": "gcc/c-common.c", "status": "modified", "additions": 18, "deletions": 5, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b61148dd4f5b244381b91b86dd7e921698f92687/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b61148dd4f5b244381b91b86dd7e921698f92687/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=b61148dd4f5b244381b91b86dd7e921698f92687", "patch": "@@ -3411,11 +3411,24 @@ c_get_alias_set (t)\n \t `I *' are different types.  So, we have to pick a canonical\n \t representative.  We do this below.\n \t \n-\t Note that this approach is actually more conservative that it\n-\t needs to be.  In particular, `const int *' and `int *' should\n-\t be in different alias sets, but this approach puts them in\n-\t the same alias set.  */\n-\n+\t Technically, this approach is actually more conservative that\n+\t it needs to be.  In particular, `const int *' and `int *'\n+\t chould be in different alias sets, according to the C and C++\n+\t standard, since their types are not the same, and so,\n+\t technically, an `int **' and `const int **' cannot point at\n+\t the same thing.\n+\n+         But, the standard is wrong.  In particular, this code is\n+\t legal C++:\n+\n+            int *ip;\n+            int **ipp = &ip;\n+            const int* const* cipp = &ip;\n+\n+         And, it doesn't make sense for that to be legal unless you\n+\t can dereference IPP and CIPP.  So, we ignore cv-qualifiers on\n+\t the pointed-to types.  This issue has been reported to the\n+\t C++ committee.  */\n       t = TYPE_MAIN_VARIANT (TREE_TYPE (type));\n       t = ((TREE_CODE (type) == POINTER_TYPE)\n \t   ? build_pointer_type (t) : build_reference_type (t));"}]}