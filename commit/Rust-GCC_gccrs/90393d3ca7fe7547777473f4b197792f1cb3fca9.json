{"sha": "90393d3ca7fe7547777473f4b197792f1cb3fca9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTAzOTNkM2NhN2ZlNzU0Nzc3NzQ3M2Y0YjE5Nzc5MmYxY2IzZmNhOQ==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2019-12-16T10:33:54Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-12-16T10:33:54Z"}, "message": "[Ada] Crash on conversion in branch of if-expression\n\n2019-12-16  Ed Schonberg  <schonberg@adacore.com>\n\ngcc/ada/\n\n\t* checks.adb (Apply_Float_Conversion_Check): Use node of type\n\tconversion and not its parent, when inserting the declaration\n\tfor the temporary that hold the result of the conversion.\n\tPreviously the declaration was inserted above the parent of the\n\tconversion, apparently as a small optimization for the\n\tsubsequent traversal in Insert_Actions.  Unfortunately a similar\n\toptimization takes place in Insert_Actions, assuming that the\n\tinsertion point must be above the expression that creates the\n\tactions to insert.  This is not correct in the presence of\n\tconditional expressions (i.e.  since Ada2012), where the\n\tinsertion must be in the list of actions attached to the current\n\talternative.\n\nFrom-SVN: r279422", "tree": {"sha": "821a6b8acb86adc767c5f4b93f61910f7b03211f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/821a6b8acb86adc767c5f4b93f61910f7b03211f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/90393d3ca7fe7547777473f4b197792f1cb3fca9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90393d3ca7fe7547777473f4b197792f1cb3fca9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/90393d3ca7fe7547777473f4b197792f1cb3fca9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90393d3ca7fe7547777473f4b197792f1cb3fca9/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4a1872632c20e4b93d5d3214505470966c0bebb4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a1872632c20e4b93d5d3214505470966c0bebb4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a1872632c20e4b93d5d3214505470966c0bebb4"}], "stats": {"total": 27, "additions": 26, "deletions": 1}, "files": [{"sha": "e0f821b0a285eaba0bef284b8a8a9858ca3789d0", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90393d3ca7fe7547777473f4b197792f1cb3fca9/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90393d3ca7fe7547777473f4b197792f1cb3fca9/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=90393d3ca7fe7547777473f4b197792f1cb3fca9", "patch": "@@ -1,3 +1,18 @@\n+2019-12-16  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* checks.adb (Apply_Float_Conversion_Check): Use node of type\n+\tconversion and not its parent, when inserting the declaration\n+\tfor the temporary that hold the result of the conversion.\n+\tPreviously the declaration was inserted above the parent of the\n+\tconversion, apparently as a small optimization for the\n+\tsubsequent traversal in Insert_Actions.  Unfortunately a similar\n+\toptimization takes place in Insert_Actions, assuming that the\n+\tinsertion point must be above the expression that creates the\n+\tactions to insert.  This is not correct in the presence of\n+\tconditional expressions (i.e.  since Ada2012), where the\n+\tinsertion must be in the list of actions attached to the current\n+\talternative.\n+\n 2019-12-16  Bob Duff  <duff@adacore.com>\n \n \t* sem_attr.adb (Analyze_Attribute): Use Known_RM_Size. But we"}, {"sha": "6b910fd7024b08fd84e424bea33d3798a29632c7", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90393d3ca7fe7547777473f4b197792f1cb3fca9/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90393d3ca7fe7547777473f4b197792f1cb3fca9/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=90393d3ca7fe7547777473f4b197792f1cb3fca9", "patch": "@@ -2067,7 +2067,17 @@ package body Checks is\n             Apply_Float_Conversion_Check (Ck_Node, Target_Base);\n             Set_Etype (Temp, Target_Base);\n \n-            Insert_Action (Parent (Par),\n+            --  Note : previously the declaration was inserted above\n+            --  the parent of the conversion, apparently as a small\n+            --  optimization for the subequent traversal in Insert_\n+            --  Actions.  Unfortunately a similar optimization takes\n+            --  place in Insert_Actions, assuming that the insertion\n+            --  point must be above the expression that creates actions.\n+            --  This is not correct in the presence of conditional\n+            --  expressions, where the insertion must be in the\n+            --  list of asctions attached to the current alternative.\n+\n+            Insert_Action (Par,\n               Make_Object_Declaration (Loc,\n                 Defining_Identifier => Temp,\n                 Object_Definition => New_Occurrence_Of (Target_Typ, Loc),"}]}