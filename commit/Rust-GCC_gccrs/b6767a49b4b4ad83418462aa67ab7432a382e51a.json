{"sha": "b6767a49b4b4ad83418462aa67ab7432a382e51a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjY3NjdhNDliNGI0YWQ4MzQxODQ2MmFhNjdhYjc0MzJhMzgyZTUxYQ==", "commit": {"author": {"name": "Brent Verner", "email": "brent@rcfile.org", "date": "2000-08-14T20:56:06Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2000-08-14T20:56:06Z"}, "message": "debug_assert.h: new file\n\n\n2000-08-14  Brent Verner <brent@rcfile.org>\n\n\t* testsuite/debug_assert.h: new file\n\t* testsuite/*/*.cc: s/test\\s*&=([^;]+);/VERIFY($1);/g\n\tchanged conditional #include <c?assert.?h?> to\n\tunconditional #include <debug_assert.h>\n\t* mkcheck.in: added $SRC_DIR/testsuite to include search path\n\tfor testsuite compile command.\n\nFrom-SVN: r35688", "tree": {"sha": "cec8fbc5f766f37fb828c98249647ace0bbc4fca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cec8fbc5f766f37fb828c98249647ace0bbc4fca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b6767a49b4b4ad83418462aa67ab7432a382e51a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6767a49b4b4ad83418462aa67ab7432a382e51a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b6767a49b4b4ad83418462aa67ab7432a382e51a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6767a49b4b4ad83418462aa67ab7432a382e51a/comments", "author": null, "committer": null, "parents": [{"sha": "e49a1d2e073c02fafe4fc80147966c1f0c11488f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e49a1d2e073c02fafe4fc80147966c1f0c11488f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e49a1d2e073c02fafe4fc80147966c1f0c11488f"}], "stats": {"total": 51, "additions": 51, "deletions": 0}, "files": [{"sha": "dbd6e98405692a8e4434245dd305afe41475156e", "filename": "libstdc++-v3/testsuite/debug_assert.h", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6767a49b4b4ad83418462aa67ab7432a382e51a/libstdc%2B%2B-v3%2Ftestsuite%2Fdebug_assert.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6767a49b4b4ad83418462aa67ab7432a382e51a/libstdc%2B%2B-v3%2Ftestsuite%2Fdebug_assert.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fdebug_assert.h?ref=b6767a49b4b4ad83418462aa67ab7432a382e51a", "patch": "@@ -0,0 +1,51 @@\n+// 20000810  Brent Verner <brent@rcfile.org>\n+//\n+// Copyright (C) 2000 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+//\n+//\n+// Purpose:\n+//   This file is included in the various testsuite programs to provide\n+//   #define(able) assert() behavior for debugging/testing. It may be\n+//   a suitable location for other furry woodland creatures as well.\n+//\n+// Notes:\n+//   If you find yourself compiling small test progs as much as I\n+//   do, you can move this file to a location your compiler(s)\n+//   will find, and possibly add more cheap debugging stuff...\n+//\n+\n+#ifndef _CPP_DEBUG_ASSERT_H\n+#define _CPP_DEBUG_ASSERT_H\n+\n+#ifdef DEBUG_ASSERT\n+# include <cassert>\n+# define VERIFY(fn) assert(fn)\n+\n+#else\n+# define VERIFY(fn) test &= (fn)\n+// should we define this here to make sure no 'unexpected' failures\n+// happen, or do we require that it be defined in any scope where\n+// the VERIFY macro is used???\n+//\n+// static bool test = true;\n+#endif\n+\n+\n+#endif // _CPP_DEBUG_ASSERT_H\n+"}]}