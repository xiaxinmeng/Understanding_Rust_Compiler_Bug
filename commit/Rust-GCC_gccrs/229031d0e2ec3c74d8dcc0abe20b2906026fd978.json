{"sha": "229031d0e2ec3c74d8dcc0abe20b2906026fd978", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjI5MDMxZDBlMmVjM2M3NGQ4ZGNjMGFiZTIwYjI5MDYwMjZmZDk3OA==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2004-09-10T08:56:36Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2004-09-10T08:56:36Z"}, "message": "cgraphunit.c, [...]: Fix comment typos.\n\n\t* cgraphunit.c, predict.c, tree-ssa-loop-ivopts.c: Fix comment\n\ttypos.\n\nFrom-SVN: r87283", "tree": {"sha": "a235258f481319105e716bd009d194ca54190e52", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a235258f481319105e716bd009d194ca54190e52"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/229031d0e2ec3c74d8dcc0abe20b2906026fd978", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/229031d0e2ec3c74d8dcc0abe20b2906026fd978", "html_url": "https://github.com/Rust-GCC/gccrs/commit/229031d0e2ec3c74d8dcc0abe20b2906026fd978", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/229031d0e2ec3c74d8dcc0abe20b2906026fd978/comments", "author": null, "committer": null, "parents": [{"sha": "3cf735f6061e6fa76a3fedca521b6f3f3be28c1e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3cf735f6061e6fa76a3fedca521b6f3f3be28c1e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3cf735f6061e6fa76a3fedca521b6f3f3be28c1e"}], "stats": {"total": 13, "additions": 9, "deletions": 4}, "files": [{"sha": "5053005a10abc827cc5b3e21680290bcebadb10d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/229031d0e2ec3c74d8dcc0abe20b2906026fd978/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/229031d0e2ec3c74d8dcc0abe20b2906026fd978/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=229031d0e2ec3c74d8dcc0abe20b2906026fd978", "patch": "@@ -1,3 +1,8 @@\n+2004-09-10  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* cgraphunit.c, predict.c, tree-ssa-loop-ivopts.c: Fix comment\n+\ttypos.\n+\n 2004-09-10  Paolo Bonzini  <bonzini@gnu.org>\n \n \t* cgraph.h (cgraph_dump_file): Do not declare."}, {"sha": "e297c217839b4d7e1f4a43710c0310d674de7bc1", "filename": "gcc/cgraphunit.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/229031d0e2ec3c74d8dcc0abe20b2906026fd978/gcc%2Fcgraphunit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/229031d0e2ec3c74d8dcc0abe20b2906026fd978/gcc%2Fcgraphunit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphunit.c?ref=229031d0e2ec3c74d8dcc0abe20b2906026fd978", "patch": "@@ -823,7 +823,7 @@ cgraph_expand_function (struct cgraph_node *node)\n       DECL_SAVED_TREE (node->decl) = NULL;\n       DECL_STRUCT_FUNCTION (node->decl) = NULL;\n       DECL_INITIAL (node->decl) = error_mark_node;\n-      /* Elliminate all call edges.  This is important so the call_expr no longer\n+      /* Eliminate all call edges.  This is important so the call_expr no longer\n \t points to the dead function body.  */\n       while (node->callees)\n \tcgraph_remove_edge (node->callees);"}, {"sha": "fbbc1579b39349fe6ee06f33fa9c61423eb3b068", "filename": "gcc/predict.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/229031d0e2ec3c74d8dcc0abe20b2906026fd978/gcc%2Fpredict.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/229031d0e2ec3c74d8dcc0abe20b2906026fd978/gcc%2Fpredict.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpredict.c?ref=229031d0e2ec3c74d8dcc0abe20b2906026fd978", "patch": "@@ -313,7 +313,7 @@ dump_prediction (FILE *file, enum br_predictor predictor, int probability,\n   fprintf (file, \"\\n\");\n }\n \n-/* We can not predict the probabilities of ougtoing edges of bb.  Set them\n+/* We can not predict the probabilities of outgoing edges of bb.  Set them\n    evenly and hope for the best.  */\n static void\n set_even_probabilities (basic_block bb)\n@@ -846,7 +846,7 @@ estimate_probability (struct loops *loops_info)\n     profile_status = PROFILE_GUESSED;\n }\n \n-/* Set edge->probability for each succestor edge of BB.  */\n+/* Set edge->probability for each successor edge of BB.  */\n void\n guess_outgoing_edge_probabilities (basic_block bb)\n {"}, {"sha": "c8e3762a5e9601ba18dd8566436dd37e45d3672f", "filename": "gcc/tree-ssa-loop-ivopts.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/229031d0e2ec3c74d8dcc0abe20b2906026fd978/gcc%2Ftree-ssa-loop-ivopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/229031d0e2ec3c74d8dcc0abe20b2906026fd978/gcc%2Ftree-ssa-loop-ivopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-ivopts.c?ref=229031d0e2ec3c74d8dcc0abe20b2906026fd978", "patch": "@@ -1559,7 +1559,7 @@ add_standard_iv_candidates (struct ivopts_data *data)\n       \t\t build_int_cst (unsigned_intSI_type_node, 1),\n \t\t true, NULL);\n \n-  /* The same for a long type if it is still fast enought.  */\n+  /* The same for a long type if it is still fast enough.  */\n   if (BITS_PER_WORD > 32)\n     add_candidate (data,\n \t\t   build_int_cst (unsigned_intDI_type_node, 0),"}]}