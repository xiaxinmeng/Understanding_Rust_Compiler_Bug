{"sha": "d2ceebd171b3c9dc2d6079ca8e49012d2f0dd21c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDJjZWViZDE3MWIzYzlkYzJkNjA3OWNhOGU0OTAxMmQyZjBkZDIxYw==", "commit": {"author": {"name": "Richard Earnshaw", "email": "rearnsha@arm.com", "date": "1999-02-16T11:00:47Z"}, "committer": {"name": "Richard Earnshaw", "email": "rearnsha@gcc.gnu.org", "date": "1999-02-16T11:00:47Z"}, "message": "arm.md (*zeroextractqi_compare0_scratch): Re-add load instruction killed in previous change.\n\n* config/arm/arm.md (*zeroextractqi_compare0_scratch): Re-add load\ninstruction killed in previous change.  Simplify mask generation.\n(*zeroextractsi_compare0_scratch): Simpify mask generation.\n\nFrom-SVN: r25241", "tree": {"sha": "f6629bf735ba63b605e454db45988851d4c945c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f6629bf735ba63b605e454db45988851d4c945c3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d2ceebd171b3c9dc2d6079ca8e49012d2f0dd21c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2ceebd171b3c9dc2d6079ca8e49012d2f0dd21c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d2ceebd171b3c9dc2d6079ca8e49012d2f0dd21c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2ceebd171b3c9dc2d6079ca8e49012d2f0dd21c/comments", "author": null, "committer": null, "parents": [{"sha": "e84aaeeb5e1652dc24df45574c765e013a0f84a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e84aaeeb5e1652dc24df45574c765e013a0f84a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e84aaeeb5e1652dc24df45574c765e013a0f84a7"}], "stats": {"total": 31, "additions": 13, "deletions": 18}, "files": [{"sha": "0b6bbdf771de0e71c0c2145ba0d0895b6c1e3802", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2ceebd171b3c9dc2d6079ca8e49012d2f0dd21c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2ceebd171b3c9dc2d6079ca8e49012d2f0dd21c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d2ceebd171b3c9dc2d6079ca8e49012d2f0dd21c", "patch": "@@ -1,3 +1,9 @@\n+Tue Feb 16 10:53:51 1999  Richard Earnshaw (rearnsha@arm.com)\n+\n+\t* config/arm/arm.md (*zeroextractqi_compare0_scratch): Re-add load\n+\tinstruction killed in previous change.  Simplify mask generation.\n+\t(*zeroextractsi_compare0_scratch): Simpify mask generation.\n+\n Tue Feb 16 09:52:26 1999  Nick Clifton  <nickc@cygnus.com>\n \n \t* config/arm/arm.md (zeroextractqi_compare0_scratch): Ensure that"}, {"sha": "cf4212bb6fcc3e3889a6f634dac6cd34ea31f7f9", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 7, "deletions": 18, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2ceebd171b3c9dc2d6079ca8e49012d2f0dd21c/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2ceebd171b3c9dc2d6079ca8e49012d2f0dd21c/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=d2ceebd171b3c9dc2d6079ca8e49012d2f0dd21c", "patch": "@@ -1193,16 +1193,10 @@\n    && INTVAL (operands[1]) + (INTVAL (operands[2]) & 1) <= 8\n    && INTVAL (operands[1]) + INTVAL (operands[2]) <= 32\"\n   \"*\n-{\n-  unsigned int mask = 0;\n-  int cnt = INTVAL (operands[1]);\n-  \n-  while (cnt--)\n-    mask = (mask << 1) | 1;\n-  operands[1] = GEN_INT (mask << INTVAL (operands[2]));\n+  operands[1] = GEN_INT (((1 << INTVAL (operands[1])) - 1)\n+\t\t\t << INTVAL (operands[2]));\n   output_asm_insn (\\\"tst%?\\\\t%0, %1\\\", operands);\n   return \\\"\\\";\n-}\n \"\n [(set_attr \"conds\" \"set\")])\n \n@@ -1214,19 +1208,14 @@\n \t\t\t  (match_operand 2 \"const_int_operand\" \"n\"))\n \t\t\t (const_int 0)))\n    (clobber (match_scratch:QI 3 \"=r\"))]\n-  \"INTVAL (operands[2]) >= 0 && INTVAL (operands[1]) > 0 &&\n-  ((INTVAL (operands[1]) + INTVAL (operands[2])) <= 8)\"\n+  \"INTVAL (operands[2]) >= 0 && INTVAL (operands[1]) > 0\n+   && (INTVAL (operands[2]) + INTVAL (operands[1]) <= 8)\"\n   \"*\n-{\n-  unsigned int mask = 0;\n-  int cnt = INTVAL (operands[1]);\n-  \n-  while (cnt--)\n-    mask = (mask << 1) | 1;\n-  operands[1] = GEN_INT (mask << INTVAL (operands[2]));\n+  operands[1] = GEN_INT (((1 << INTVAL (operands[1])) - 1)\n+\t\t\t << INTVAL (operands[2]));\n+  output_asm_insn (\\\"ldr%?b\\\\t%3, %0\\\", operands);\n   output_asm_insn (\\\"tst%?\\\\t%3, %1\\\", operands);\n   return \\\"\\\";\n-}\n \"\n [(set_attr \"conds\" \"set\")\n  (set_attr \"length\" \"8\")])"}]}