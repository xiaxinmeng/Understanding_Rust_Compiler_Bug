{"sha": "130ffea03c8226065628437f9611c029f21fcc62", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTMwZmZlYTAzYzgyMjYwNjU2Mjg0MzdmOTYxMWMwMjlmMjFmY2M2Mg==", "commit": {"author": {"name": "Bernd Edlinger", "email": "bernd.edlinger@hotmail.de", "date": "2016-09-14T07:18:53Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2016-09-14T07:18:53Z"}, "message": "Add braces to a condition in predict.c (PR middle-end/77574)\n\n\t    Martin Liska  <mliska@suse.cz>\n\n\tPR middle-end/77574\n\t* predict.c (force_edge_cold): Add braces to a condition.\n\nCo-Authored-By: Martin Liska <mliska@suse.cz>\n\nFrom-SVN: r240128", "tree": {"sha": "92b003931ccc79ac706c51f475b91af3ba8f44aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/92b003931ccc79ac706c51f475b91af3ba8f44aa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/130ffea03c8226065628437f9611c029f21fcc62", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/130ffea03c8226065628437f9611c029f21fcc62", "html_url": "https://github.com/Rust-GCC/gccrs/commit/130ffea03c8226065628437f9611c029f21fcc62", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/130ffea03c8226065628437f9611c029f21fcc62/comments", "author": {"login": "bernd-edlinger", "id": 17638929, "node_id": "MDQ6VXNlcjE3NjM4OTI5", "avatar_url": "https://avatars.githubusercontent.com/u/17638929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bernd-edlinger", "html_url": "https://github.com/bernd-edlinger", "followers_url": "https://api.github.com/users/bernd-edlinger/followers", "following_url": "https://api.github.com/users/bernd-edlinger/following{/other_user}", "gists_url": "https://api.github.com/users/bernd-edlinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/bernd-edlinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bernd-edlinger/subscriptions", "organizations_url": "https://api.github.com/users/bernd-edlinger/orgs", "repos_url": "https://api.github.com/users/bernd-edlinger/repos", "events_url": "https://api.github.com/users/bernd-edlinger/events{/privacy}", "received_events_url": "https://api.github.com/users/bernd-edlinger/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fb05e304cd36ecc353818428d4bf6a7e6fcad4c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb05e304cd36ecc353818428d4bf6a7e6fcad4c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb05e304cd36ecc353818428d4bf6a7e6fcad4c7"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "a0b660b79626dd89384097a8c57cf533e43500b9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/130ffea03c8226065628437f9611c029f21fcc62/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/130ffea03c8226065628437f9611c029f21fcc62/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=130ffea03c8226065628437f9611c029f21fcc62", "patch": "@@ -1,3 +1,9 @@\n+2016-09-14  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n+\t    Martin Liska  <mliska@suse.cz>\n+\n+\tPR middle-end/77574\n+\t* predict.c (force_edge_cold): Add braces to a condition.\n+\n 2016-09-13  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n \n \tPR rtl-optimization/77289"}, {"sha": "b3d169770c99d384cd3d7da4e2705d1cf153a704", "filename": "gcc/predict.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/130ffea03c8226065628437f9611c029f21fcc62/gcc%2Fpredict.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/130ffea03c8226065628437f9611c029f21fcc62/gcc%2Fpredict.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpredict.c?ref=130ffea03c8226065628437f9611c029f21fcc62", "patch": "@@ -3723,7 +3723,7 @@ force_edge_cold (edge e, bool impossible)\n   int prob_scale = REG_BR_PROB_BASE;\n \n   /* If edge is already improbably or cold, just return.  */\n-  if (e->probability <= impossible ? PROB_VERY_UNLIKELY : 0\n+  if (e->probability <= (impossible ? PROB_VERY_UNLIKELY : 0)\n       && (!impossible || !e->count))\n     return;\n   FOR_EACH_EDGE (e2, ei, e->src->succs)"}]}