{"sha": "90fa63e134f478c775b64b281901ecbba3c9f15b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTBmYTYzZTEzNGY0NzhjNzc1YjY0YjI4MTkwMWVjYmJhM2M5ZjE1Yg==", "commit": {"author": {"name": "Andrew MacLeod", "email": "amacleod@redhat.com", "date": "2021-06-23T16:14:37Z"}, "committer": {"name": "Andrew MacLeod", "email": "amacleod@redhat.com", "date": "2021-06-24T17:25:57Z"}, "message": "Fix comment typo.\n\n\t* range-op.cc: Fix comment.", "tree": {"sha": "febf38683df1c14c4f21851c4ac9fd4e11c99ca1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/febf38683df1c14c4f21851c4ac9fd4e11c99ca1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/90fa63e134f478c775b64b281901ecbba3c9f15b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90fa63e134f478c775b64b281901ecbba3c9f15b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/90fa63e134f478c775b64b281901ecbba3c9f15b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90fa63e134f478c775b64b281901ecbba3c9f15b/comments", "author": null, "committer": null, "parents": [{"sha": "c761be53f6b62e22ac5de18c4aaf88648f64f5b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c761be53f6b62e22ac5de18c4aaf88648f64f5b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c761be53f6b62e22ac5de18c4aaf88648f64f5b7"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "29ee9e0f645dfad36bca675cebe1a5cefd3dace0", "filename": "gcc/range-op.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90fa63e134f478c775b64b281901ecbba3c9f15b/gcc%2Frange-op.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90fa63e134f478c775b64b281901ecbba3c9f15b/gcc%2Frange-op.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frange-op.cc?ref=90fa63e134f478c775b64b281901ecbba3c9f15b", "patch": "@@ -1299,7 +1299,7 @@ operator_minus::wi_fold (irange &r, tree type,\n }\n \n // Check to see if the relation REL between OP1 and OP2 has any effect on the\n-// LHS of the epxression.  If so, apply it to LHS_RANGE.\n+// LHS of the expression.  If so, apply it to LHS_RANGE.\n \n bool\n operator_minus::op1_op2_relation_effect (irange &lhs_range, tree type,"}]}