{"sha": "91a41201b5cea1d72cd84e0e8751289774fcba42", "node_id": "C_kwDOANBUbNoAKDkxYTQxMjAxYjVjZWExZDcyY2Q4NGUwZTg3NTEyODk3NzRmY2JhNDI", "commit": {"author": {"name": "Ju-Zhe Zhong", "email": "juzhe.zhong@rivai.ai", "date": "2023-01-03T01:39:57Z"}, "committer": {"name": "Kito Cheng", "email": "kito.cheng@sifive.com", "date": "2023-01-26T18:53:00Z"}, "message": "RISC-V: Fix vsetivli instruction asm for IMM AVL\n\nNotice that we should used vsetivli zero,4 instead of vsetvli zero,4\nfor IMM AVL (0 ~ 31) according to RVV ISA.\n\nThis patch fix vsetivli instruction asm bug.\n\ngcc/ChangeLog:\n\n\t* config/riscv/vector.md:\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/riscv/rvv/base/vle-constraint-1.c:", "tree": {"sha": "649e328840235e23bfcd3a3cc45d2d53b33f51d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/649e328840235e23bfcd3a3cc45d2d53b33f51d8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/91a41201b5cea1d72cd84e0e8751289774fcba42", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91a41201b5cea1d72cd84e0e8751289774fcba42", "html_url": "https://github.com/Rust-GCC/gccrs/commit/91a41201b5cea1d72cd84e0e8751289774fcba42", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91a41201b5cea1d72cd84e0e8751289774fcba42/comments", "author": {"login": "zhongjuzhe", "id": 66454988, "node_id": "MDQ6VXNlcjY2NDU0OTg4", "avatar_url": "https://avatars.githubusercontent.com/u/66454988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhongjuzhe", "html_url": "https://github.com/zhongjuzhe", "followers_url": "https://api.github.com/users/zhongjuzhe/followers", "following_url": "https://api.github.com/users/zhongjuzhe/following{/other_user}", "gists_url": "https://api.github.com/users/zhongjuzhe/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhongjuzhe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhongjuzhe/subscriptions", "organizations_url": "https://api.github.com/users/zhongjuzhe/orgs", "repos_url": "https://api.github.com/users/zhongjuzhe/repos", "events_url": "https://api.github.com/users/zhongjuzhe/events{/privacy}", "received_events_url": "https://api.github.com/users/zhongjuzhe/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kito-cheng", "id": 2723185, "node_id": "MDQ6VXNlcjI3MjMxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kito-cheng", "html_url": "https://github.com/kito-cheng", "followers_url": "https://api.github.com/users/kito-cheng/followers", "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions", "organizations_url": "https://api.github.com/users/kito-cheng/orgs", "repos_url": "https://api.github.com/users/kito-cheng/repos", "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/kito-cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "856eec0d6b65c7b28b4b6c4fd6ccc10f2f6a22b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/856eec0d6b65c7b28b4b6c4fd6ccc10f2f6a22b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/856eec0d6b65c7b28b4b6c4fd6ccc10f2f6a22b1"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "83bc1ab9c461009ae784fbaa58deb1fb57f0bd8b", "filename": "gcc/config/riscv/vector.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91a41201b5cea1d72cd84e0e8751289774fcba42/gcc%2Fconfig%2Friscv%2Fvector.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91a41201b5cea1d72cd84e0e8751289774fcba42/gcc%2Fconfig%2Friscv%2Fvector.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Fvector.md?ref=91a41201b5cea1d72cd84e0e8751289774fcba42", "patch": "@@ -581,7 +581,7 @@\n \t\t    (match_operand 3 \"const_int_operand\" \"i\")\n \t\t    (match_operand 4 \"const_int_operand\" \"i\")] UNSPEC_VSETVL))]\n   \"TARGET_VECTOR\"\n-  \"vsetvli\\tzero,%0,e%1,%m2,t%p3,m%p4\"\n+  \"vset%i0vli\\tzero,%0,e%1,%m2,t%p3,m%p4\"\n   [(set_attr \"type\" \"vsetvl\")\n    (set_attr \"mode\" \"<MODE>\")])\n "}, {"sha": "8d01e2082f8bc31ae7de2224b74457491b50ddcb", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vle-constraint-1.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91a41201b5cea1d72cd84e0e8751289774fcba42/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvle-constraint-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91a41201b5cea1d72cd84e0e8751289774fcba42/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvle-constraint-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvle-constraint-1.c?ref=91a41201b5cea1d72cd84e0e8751289774fcba42", "patch": "@@ -6,7 +6,7 @@\n \n /*\n ** f1:\n-**\tvsetvli\\tzero,4,e32,m1,tu,ma\n+**\tvsetivli\\tzero,4,e32,m1,tu,ma\n **\tvle32\\.v\\tv[0-9]+,0\\([a-x0-9]+\\)\n **\tvle32\\.v\\tv[0-9]+,0\\([a-x0-9]+\\)\n **\tvse32\\.v\\tv[0-9]+,0\\([a-x0-9]+\\)\n@@ -23,7 +23,7 @@ void f1 (float * in, float *out)\n ** f2:\n **\tvsetvli\\t[a-x0-9]+,zero,e8,mf4,ta,ma\n **\tvlm.v\\tv[0-9]+,0\\([a-x0-9]+\\)\n-**\tvsetvli\\tzero,4,e32,m1,ta,ma\n+**\tvsetivli\\tzero,4,e32,m1,ta,ma\n **\tvle32.v\\tv[0-9]+,0\\([a-x0-9]+\\),v0.t\n **\tvse32.v\\tv[0-9]+,0\\([a-x0-9]+\\)\n **\tret\n@@ -41,7 +41,7 @@ void f2 (float * in, float *out)\n ** f3:\n **\tvsetvli\\t[a-x0-9]+,zero,e8,mf4,ta,ma\n **\tvlm.v\\tv[0-9]+,0\\([a-x0-9]+\\)\n-**\tvsetvli\\tzero,4,e32,m1,tu,mu\n+**\tvsetivli\\tzero,4,e32,m1,tu,mu\n **\tvle32\\.v\\tv[0-9]+,0\\([a-x0-9]+\\)\n **\tvle32.v\\tv[0-9]+,0\\([a-x0-9]+\\),v0.t\n **\tvse32.v\\tv[0-9]+,0\\([a-x0-9]+\\)\n@@ -58,7 +58,7 @@ void f3 (float * in, float *out)\n \n /*\n ** f4:\n-**\tvsetvli\\tzero,4,e8,mf8,tu,ma\n+**\tvsetivli\\tzero,4,e8,mf8,tu,ma\n **\tvle8\\.v\\tv[0-9]+,0\\([a-x0-9]+\\)\n **\tvle8\\.v\\tv[0-9]+,0\\([a-x0-9]+\\)\n **\tvse8\\.v\\tv[0-9]+,0\\([a-x0-9]+\\)\n@@ -75,7 +75,7 @@ void f4 (int8_t * in, int8_t *out)\n ** f5:\n **\tvsetvli\\t[a-x0-9]+,zero,e8,mf8,ta,ma\n **\tvlm.v\\tv[0-9]+,0\\([a-x0-9]+\\)\n-**\tvsetvli\\tzero,4,e8,mf8,ta,ma\n+**\tvsetivli\\tzero,4,e8,mf8,ta,ma\n **\tvle8.v\\tv[0-9]+,0\\([a-x0-9]+\\),v0.t\n **\tvse8.v\\tv[0-9]+,0\\([a-x0-9]+\\)\n **\tret\n@@ -93,7 +93,7 @@ void f5 (int8_t * in, int8_t *out)\n ** f6:\n **\tvsetvli\\t[a-x0-9]+,zero,e8,mf8,ta,ma\n **\tvlm.v\\tv[0-9]+,0\\([a-x0-9]+\\)\n-**\tvsetvli\\tzero,4,e8,mf8,tu,mu\n+**\tvsetivli\\tzero,4,e8,mf8,tu,mu\n **\tvle8\\.v\\tv[0-9]+,0\\([a-x0-9]+\\)\n **\tvle8.v\\tv[0-9]+,0\\([a-x0-9]+\\),v0.t\n **\tvse8.v\\tv[0-9]+,0\\([a-x0-9]+\\)"}]}