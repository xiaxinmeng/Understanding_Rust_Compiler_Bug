{"sha": "7a6bd5ae0eacf36eaf26d37466eb5efe805f0aae", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2E2YmQ1YWUwZWFjZjM2ZWFmMjZkMzc0NjZlYjVlZmU4MDVmMGFhZQ==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2000-08-15T15:28:19Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2000-08-15T15:28:19Z"}, "message": "tm.texi (Addressing Modes): Clarify PRE/POST_MODIFY descriptions.\n\n        * tm.texi (Addressing Modes): Clarify PRE/POST_MODIFY descriptions.\n\nRestoring tm.texi after corruption.\n\nFrom-SVN: r35717", "tree": {"sha": "9c3b4b7290d019c930b410b7e4e4e5b8be8e0d5c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9c3b4b7290d019c930b410b7e4e4e5b8be8e0d5c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7a6bd5ae0eacf36eaf26d37466eb5efe805f0aae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a6bd5ae0eacf36eaf26d37466eb5efe805f0aae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a6bd5ae0eacf36eaf26d37466eb5efe805f0aae", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a6bd5ae0eacf36eaf26d37466eb5efe805f0aae/comments", "author": null, "committer": null, "parents": [{"sha": "864bcaa7cf5acbb711a9fd68b2865b2ac036ccee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/864bcaa7cf5acbb711a9fd68b2865b2ac036ccee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/864bcaa7cf5acbb711a9fd68b2865b2ac036ccee"}], "stats": {"total": 32, "additions": 13, "deletions": 19}, "files": [{"sha": "25cc96c98c11e07fcb0ea522f72e9e7553661337", "filename": "gcc/tm.texi", "status": "modified", "additions": 13, "deletions": 19, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a6bd5ae0eacf36eaf26d37466eb5efe805f0aae/gcc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a6bd5ae0eacf36eaf26d37466eb5efe805f0aae/gcc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftm.texi?ref=7a6bd5ae0eacf36eaf26d37466eb5efe805f0aae", "patch": "@@ -4277,37 +4277,31 @@ to the lookup function, which returns a pointer to the method.\n This is about addressing modes.\n \n @table @code\n-@findex HAVE_POST_INCREMENT\n-@item HAVE_POST_INCREMENT\n-A C expression that is nonzero the machine supports post-increment addressing.\n-\n @findex HAVE_PRE_INCREMENT\n-@findex HAVE_POST_DECREMENT\n @findex HAVE_PRE_DECREMENT\n+@findex HAVE_POST_INCREMENT\n+@findex HAVE_POST_DECREMENT\n @item HAVE_PRE_INCREMENT\n-@itemx HAVE_POST_DECREMENT\n @itemx HAVE_PRE_DECREMENT\n-Similar for other kinds of addressing.\n+@itemx HAVE_POST_INCREMENT\n+@itemx HAVE_POST_DECREMENT\n+A C expression that is non-zero if the machine supports pre-increment,\n+pre-decrement, post-increment, or post-decrement addressing respectively.\n \n @findex HAVE_POST_MODIFY_DISP\n-@item HAVE_POST_MODIFY_DISP\n-Define this macro if the machine supports post-modify addressing\n-with a constant displacement.\n-\n @findex HAVE_PRE_MODIFY_DISP\n @item HAVE_PRE_MODIFY_DISP\n-Define this macro if the machine supports pre-modify addressing\n-with a constant displacement.\n+@itemx HAVE_POST_MODIFY_DISP\n+A C expression that is non-zero if the machine supports pre- or\n+post-address side-effect generation involving constants other than\n+the size of the memory operand.\n \n @findex HAVE_POST_MODIFY_REG\n-@item HAVE_POST_MODIFY_REG\n-Define this macro if the machine supports post-modify addressing\n-by the contents of a register.\n-\n @findex HAVE_PRE_MODIFY_REG\n @item HAVE_PRE_MODIFY_REG\n-Define this macro if the machine supports pre-modify addressing\n-by the contents of a register.\n+@itemx HAVE_POST_MODIFY_REG\n+A C expression that is non-zero if the machine supports pre- or\n+post-address side-effect generation involving a register displacement.\n \n @findex CONSTANT_ADDRESS_P\n @item CONSTANT_ADDRESS_P (@var{x})"}]}