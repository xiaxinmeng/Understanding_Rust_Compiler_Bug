{"sha": "e1e7141cf3128d384dca902928d98a47cb57dddd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTFlNzE0MWNmMzEyOGQzODRkY2E5MDI5MjhkOThhNDdjYjU3ZGRkZA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2008-03-10T19:26:35Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2008-03-10T19:26:35Z"}, "message": "trans.c (emit_range_check): Do not emit the check if the base type of the expression is the type against...\n\n\t* trans.c (emit_range_check): Do not emit the check if the base type\n\tof the expression is the type against which its range must be checked.\n\nFrom-SVN: r133083", "tree": {"sha": "dc98e5c42a55d7c4388ee9c0100c8cc34396efaa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dc98e5c42a55d7c4388ee9c0100c8cc34396efaa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e1e7141cf3128d384dca902928d98a47cb57dddd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1e7141cf3128d384dca902928d98a47cb57dddd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e1e7141cf3128d384dca902928d98a47cb57dddd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1e7141cf3128d384dca902928d98a47cb57dddd/comments", "author": null, "committer": null, "parents": [{"sha": "725c2d321c429ef8f09b8474e0f3d693c6a5d1d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/725c2d321c429ef8f09b8474e0f3d693c6a5d1d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/725c2d321c429ef8f09b8474e0f3d693c6a5d1d8"}], "stats": {"total": 27, "additions": 27, "deletions": 0}, "files": [{"sha": "814d51730f57d027f2edd316f0788b3f11d1c901", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1e7141cf3128d384dca902928d98a47cb57dddd/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1e7141cf3128d384dca902928d98a47cb57dddd/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=e1e7141cf3128d384dca902928d98a47cb57dddd", "patch": "@@ -1,3 +1,8 @@\n+2008-03-10  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* trans.c (emit_range_check): Do not emit the check if the base type\n+\tof the expression is the type against which its range must be checked.\n+\n 2008-03-08  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* decl.c (maybe_pad_type): Use value_factor_p."}, {"sha": "4cfd2253987516e8fb9c052a094e7fc8045f1d54", "filename": "gcc/ada/trans.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1e7141cf3128d384dca902928d98a47cb57dddd/gcc%2Fada%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1e7141cf3128d384dca902928d98a47cb57dddd/gcc%2Fada%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftrans.c?ref=e1e7141cf3128d384dca902928d98a47cb57dddd", "patch": "@@ -5757,6 +5757,11 @@ emit_range_check (tree gnu_expr, Entity_Id gnat_range_type)\n   tree gnu_high = TYPE_MAX_VALUE (gnu_range_type);\n   tree gnu_compare_type = get_base_type (TREE_TYPE (gnu_expr));\n \n+  /* If GNU_EXPR has GNAT_RANGE_TYPE as its base type, no check is needed.\n+     This can for example happen when translating 'Val or 'Value.  */\n+  if (gnu_compare_type == gnu_range_type)\n+    return gnu_expr;\n+\n   /* If GNU_EXPR has an integral type that is narrower than GNU_RANGE_TYPE,\n      we can't do anything since we might be truncating the bounds.  No\n      check is needed in this case.  */"}, {"sha": "d4cb32611cb3bbdf0e1942a17d842b2b7654c3ec", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1e7141cf3128d384dca902928d98a47cb57dddd/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1e7141cf3128d384dca902928d98a47cb57dddd/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e1e7141cf3128d384dca902928d98a47cb57dddd", "patch": "@@ -1,3 +1,7 @@\n+2008-03-10  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/range_check2.adb: New test.\n+\n 2008-03-10  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR tree-optimization/35494"}, {"sha": "33172f155e5a460c14862100ba08b8d8ea4d5cdf", "filename": "gcc/testsuite/gnat.dg/range_check2.adb", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1e7141cf3128d384dca902928d98a47cb57dddd/gcc%2Ftestsuite%2Fgnat.dg%2Frange_check2.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1e7141cf3128d384dca902928d98a47cb57dddd/gcc%2Ftestsuite%2Fgnat.dg%2Frange_check2.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Frange_check2.adb?ref=e1e7141cf3128d384dca902928d98a47cb57dddd", "patch": "@@ -0,0 +1,13 @@\n+-- { dg-do compile }\n+-- { dg-options \"-O2\" }\n+\n+procedure Range_Check2 is\n+\n+  subtype Block_Subtype is String(1 .. 6);\n+  type Color is (Black, Red, Green, Yellow, Blue, Magenta, Cyan, White);\n+  Foregrnd_Color : Color := White;\n+  Block : Block_Subtype := \"123456\";\n+\n+begin\n+  Foregrnd_Color := Color'Val(Integer'Value(Block(5 .. 6)));\n+end;"}]}