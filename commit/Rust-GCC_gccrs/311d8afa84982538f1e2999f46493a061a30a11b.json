{"sha": "311d8afa84982538f1e2999f46493a061a30a11b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzExZDhhZmE4NDk4MjUzOGYxZTI5OTlmNDY0OTNhMDYxYTMwYTExYg==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2000-11-18T15:55:38Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2000-11-18T15:55:38Z"}, "message": "Make-lang.in (INTDOC_DEPS): New macro.\n\n* Make-lang.in (INTDOC_DEPS): New macro.\n(f/intdoc.texi): Depend on $(INTDOC_DEPS).  Build f/intdoc.\n(f/intdoc): Likewise.  Add $(build_exeext).\n\nFrom-SVN: r37543", "tree": {"sha": "0476164db5f489edeb36e35a87591ef9bb298bda", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0476164db5f489edeb36e35a87591ef9bb298bda"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/311d8afa84982538f1e2999f46493a061a30a11b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/311d8afa84982538f1e2999f46493a061a30a11b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/311d8afa84982538f1e2999f46493a061a30a11b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/311d8afa84982538f1e2999f46493a061a30a11b/comments", "author": null, "committer": null, "parents": [{"sha": "4a58aab6a74b673d3c713ed429363bccc080df39", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a58aab6a74b673d3c713ed429363bccc080df39", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a58aab6a74b673d3c713ed429363bccc080df39"}], "stats": {"total": 23, "additions": 20, "deletions": 3}, "files": [{"sha": "549dbfc7c2373bb7ac13884004cac359b1e2186d", "filename": "gcc/f/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/311d8afa84982538f1e2999f46493a061a30a11b/gcc%2Ff%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/311d8afa84982538f1e2999f46493a061a30a11b/gcc%2Ff%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FChangeLog?ref=311d8afa84982538f1e2999f46493a061a30a11b", "patch": "@@ -1,3 +1,9 @@\n+2000-11-18  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\t* Make-lang.in (INTDOC_DEPS): New macro.\n+\t(f/intdoc.texi): Depend on $(INTDOC_DEPS).  Build f/intdoc.\n+\t(f/intdoc): Likewise.  Add $(build_exeext).\n+\n 2000-11-17  Zack Weinberg  <zack@wolery.stanford.edu>\n \n \t* lex.c (ffelex_hash_): Change ggc_alloc_string (var, -1) to"}, {"sha": "cefe3dc1b085cae24ba649463f7a12e472d32883", "filename": "gcc/f/Make-lang.in", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/311d8afa84982538f1e2999f46493a061a30a11b/gcc%2Ff%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/311d8afa84982538f1e2999f46493a061a30a11b/gcc%2Ff%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FMake-lang.in?ref=311d8afa84982538f1e2999f46493a061a30a11b", "patch": "@@ -214,12 +214,23 @@ f/g77.dvi: $(srcdir)/f/g77.texi $(srcdir)/f/bugs.texi \\\n # been found only upon reading the documentation that was automatically\n # produced from it.\n \n-$(srcdir)/f/intdoc.texi: f/intdoc$(build_exeext)\n+# If the documentation files depended on executables in the build\n+# tree, there'd be no way to ship a source tree with the documentation\n+# already generated such that `make' wouldn't attempt to rebuilt it.\n+# So, we punt and arrange for the documentation files to depend on the\n+# dependencies of the executables, not on the executables themselves.\n+# But then, we have to build the executables explicitly in their build\n+# rules.\n+\n+INTDOC_DEPS = $(srcdir)/f/intdoc.c $(srcdir)/f/intrin.h $(srcdir)/f/intrin.def\n+\n+$(srcdir)/f/intdoc.texi: $(INTDOC_DEPS) $(srcdir)/f/intdoc.in\n+\t$(MAKE) f/intdoc$(build_exeext)\n \tf/intdoc$(build_exeext) > $(srcdir)/f/intdoc.texi\n \n-f/intdoc: f/intdoc.c f/intdoc.h0 f/intrin.h f/intrin.def hconfig.h system.h\n+f/intdoc$(build_exeext): $(INTDOC_DEPS) f/intdoc.h0 hconfig.h system.h\n \t  $(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) $(INCLUDES) \\\n-\t\t  $(srcdir)/f/intdoc.c -o f/intdoc\n+\t\t  $(srcdir)/f/intdoc.c -o f/intdoc$(build_exeext)\n \n f/intdoc.h0: f/intdoc.in f/ansify$(build_exeext)\n \tf/ansify$(build_exeext) $(srcdir)/f/intdoc.in \\"}]}