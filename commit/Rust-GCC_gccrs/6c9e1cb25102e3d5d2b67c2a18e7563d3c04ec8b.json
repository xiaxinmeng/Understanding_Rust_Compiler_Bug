{"sha": "6c9e1cb25102e3d5d2b67c2a18e7563d3c04ec8b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmM5ZTFjYjI1MTAyZTNkNWQyYjY3YzJhMThlNzU2M2QzYzA0ZWM4Yg==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-07-19T01:09:39Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-07-19T01:09:39Z"}, "message": "(build_binary_op): Don't set shorten for signed division.\n\nFrom-SVN: r1623", "tree": {"sha": "045de22c45c8839a748673295497426b01c823c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/045de22c45c8839a748673295497426b01c823c5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6c9e1cb25102e3d5d2b67c2a18e7563d3c04ec8b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c9e1cb25102e3d5d2b67c2a18e7563d3c04ec8b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c9e1cb25102e3d5d2b67c2a18e7563d3c04ec8b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c9e1cb25102e3d5d2b67c2a18e7563d3c04ec8b/comments", "author": null, "committer": null, "parents": [{"sha": "fea868cb1ae8d33a1f486def9a2b2dc561f021a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fea868cb1ae8d33a1f486def9a2b2dc561f021a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fea868cb1ae8d33a1f486def9a2b2dc561f021a3"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "7b9342914a1670dec894dc69d40de70c789ac9bb", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c9e1cb25102e3d5d2b67c2a18e7563d3c04ec8b/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c9e1cb25102e3d5d2b67c2a18e7563d3c04ec8b/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=6c9e1cb25102e3d5d2b67c2a18e7563d3c04ec8b", "patch": "@@ -2283,7 +2283,9 @@ build_binary_op (code, orig_op0, orig_op1, convert_p)\n \t  if (!(code0 == INTEGER_TYPE && code1 == INTEGER_TYPE))\n \t    resultcode = RDIV_EXPR;\n \t  else\n-\t    shorten = 1;\n+\t    /* When dividing two signed integers, you have to promote to int.\n+\t       E.g. (short) -32868 / (short) -1 doesn't fit in a short.  */\n+\t    shorten = TREE_UNSIGNED (op0);\n \t  common = 1;\n \t}\n       break;"}]}