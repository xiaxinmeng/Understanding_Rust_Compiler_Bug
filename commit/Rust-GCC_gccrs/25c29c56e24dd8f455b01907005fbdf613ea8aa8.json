{"sha": "25c29c56e24dd8f455b01907005fbdf613ea8aa8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjVjMjljNTZlMjRkZDhmNDU1YjAxOTA3MDA1ZmJkZjYxM2VhOGFhOA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2008-08-29T18:43:57Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2008-08-29T18:43:57Z"}, "message": "trans-decl.c (gfc_build_qualified_array): Build non-flat array type for debug info purposes.\n\n\t* trans-decl.c (gfc_build_qualified_array): Build non-flat\n\tarray type for debug info purposes.\n\n\t* dwarf2out.c (add_bound_info): If lookup_decl_die failed, try\n\tloc_descriptor_from_tree_1.\n\nFrom-SVN: r139774", "tree": {"sha": "e922fdce8f61d2ccd258acbf79748a4b8fd3bc03", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e922fdce8f61d2ccd258acbf79748a4b8fd3bc03"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/25c29c56e24dd8f455b01907005fbdf613ea8aa8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25c29c56e24dd8f455b01907005fbdf613ea8aa8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/25c29c56e24dd8f455b01907005fbdf613ea8aa8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25c29c56e24dd8f455b01907005fbdf613ea8aa8/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a64f5186dd1a3ea27bc7540c625ab24afd8030a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a64f5186dd1a3ea27bc7540c625ab24afd8030a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a64f5186dd1a3ea27bc7540c625ab24afd8030a3"}], "stats": {"total": 56, "additions": 56, "deletions": 0}, "files": [{"sha": "809bfd6161f97decbcb95555ba75406d82e33896", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25c29c56e24dd8f455b01907005fbdf613ea8aa8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25c29c56e24dd8f455b01907005fbdf613ea8aa8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=25c29c56e24dd8f455b01907005fbdf613ea8aa8", "patch": "@@ -1,5 +1,8 @@\n 2008-08-29  Jakub Jelinek  <jakub@redhat.com>\n \n+\t* dwarf2out.c (add_bound_info): If lookup_decl_die failed, try\n+\tloc_descriptor_from_tree_1.\n+\n \tPR fortran/29635\n \tPR fortran/23057\n \t* debug.h (struct gcc_debug_hooks): Add NAME and CHILD"}, {"sha": "4c6364cc3024d4fa71c305ecdc3cd157f9a62dea", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25c29c56e24dd8f455b01907005fbdf613ea8aa8/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25c29c56e24dd8f455b01907005fbdf613ea8aa8/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=25c29c56e24dd8f455b01907005fbdf613ea8aa8", "patch": "@@ -11934,6 +11934,7 @@ add_bound_info (dw_die_ref subrange_die, enum dwarf_attribute bound_attr, tree b\n     case RESULT_DECL:\n       {\n \tdw_die_ref decl_die = lookup_decl_die (bound);\n+\tdw_loc_descr_ref loc;\n \n \t/* ??? Can this happen, or should the variable have been bound\n \t   first?  Probably it can, since I imagine that we try to create\n@@ -11942,6 +11943,11 @@ add_bound_info (dw_die_ref subrange_die, enum dwarf_attribute bound_attr, tree b\n \t   later parameter.  */\n \tif (decl_die != NULL)\n \t  add_AT_die_ref (subrange_die, bound_attr, decl_die);\n+\telse\n+\t  {\n+\t    loc = loc_descriptor_from_tree_1 (bound, 0);\n+\t    add_AT_location_description (subrange_die, bound_attr, loc);\n+\t  }\n \tbreak;\n       }\n "}, {"sha": "55d452fdcdd424cc3a3d700c9d0af71d9bf0664c", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25c29c56e24dd8f455b01907005fbdf613ea8aa8/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25c29c56e24dd8f455b01907005fbdf613ea8aa8/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=25c29c56e24dd8f455b01907005fbdf613ea8aa8", "patch": "@@ -1,5 +1,8 @@\n 2008-08-29  Jakub Jelinek  <jakub@redhat.com>\n \n+\t* trans-decl.c (gfc_build_qualified_array): Build non-flat\n+\tarray type for debug info purposes.\n+\n \tPR fortran/29635\n \tPR fortran/23057\n \t* f95-lang.c (gfc_init_ts): New function."}, {"sha": "54a1aa0159f704d9a12ffe18fc83a58e952a075a", "filename": "gcc/fortran/trans-decl.c", "status": "modified", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25c29c56e24dd8f455b01907005fbdf613ea8aa8/gcc%2Ffortran%2Ftrans-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25c29c56e24dd8f455b01907005fbdf613ea8aa8/gcc%2Ffortran%2Ftrans-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-decl.c?ref=25c29c56e24dd8f455b01907005fbdf613ea8aa8", "patch": "@@ -703,6 +703,50 @@ gfc_build_qualified_array (tree decl, gfc_symbol * sym)\n       TYPE_DOMAIN (type) = range;\n       layout_type (type);\n     }\n+\n+  if (nest || write_symbols == NO_DEBUG)\n+    return;\n+\n+  if (TYPE_NAME (type) != NULL_TREE\n+      && GFC_TYPE_ARRAY_UBOUND (type, sym->as->rank - 1) != NULL_TREE\n+      && TREE_CODE (GFC_TYPE_ARRAY_UBOUND (type, sym->as->rank - 1)) == VAR_DECL)\n+    {\n+      tree gtype = DECL_ORIGINAL_TYPE (TYPE_NAME (type));\n+\n+      for (dim = 0; dim < sym->as->rank - 1; dim++)\n+\t{\n+\t  gcc_assert (TREE_CODE (gtype) == ARRAY_TYPE);\n+\t  gtype = TREE_TYPE (gtype);\n+\t}\n+      gcc_assert (TREE_CODE (gtype) == ARRAY_TYPE);\n+      if (TYPE_MAX_VALUE (TYPE_DOMAIN (gtype)) == NULL)\n+\tTYPE_NAME (type) = NULL_TREE;\n+    }\n+\n+  if (TYPE_NAME (type) == NULL_TREE)\n+    {\n+      tree gtype = TREE_TYPE (type), rtype, type_decl;\n+\n+      for (dim = sym->as->rank - 1; dim >= 0; dim--)\n+\t{\n+\t  rtype = build_range_type (gfc_array_index_type,\n+\t\t\t\t    GFC_TYPE_ARRAY_LBOUND (type, dim),\n+\t\t\t\t    GFC_TYPE_ARRAY_UBOUND (type, dim));\n+\t  gtype = build_array_type (gtype, rtype);\n+\t  /* Ensure the bound variables aren't optimized out at -O0.  */\n+\t  if (!optimize)\n+\t    {\n+\t      if (GFC_TYPE_ARRAY_LBOUND (type, dim)\n+\t\t  && TREE_CODE (GFC_TYPE_ARRAY_LBOUND (type, dim)) == VAR_DECL)\n+\t\tDECL_IGNORED_P (GFC_TYPE_ARRAY_LBOUND (type, dim)) = 0;\n+\t      if (GFC_TYPE_ARRAY_UBOUND (type, dim)\n+\t\t  && TREE_CODE (GFC_TYPE_ARRAY_UBOUND (type, dim)) == VAR_DECL)\n+\t\tDECL_IGNORED_P (GFC_TYPE_ARRAY_UBOUND (type, dim)) = 0;\n+\t    }\n+\t}\n+      TYPE_NAME (type) = type_decl = build_decl (TYPE_DECL, NULL, gtype);\n+      DECL_ORIGINAL_TYPE (type_decl) = gtype;\n+    }\n }\n \n "}]}