{"sha": "ca77d87c47315c6e3d694bb42dd9f2a079c41de9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2E3N2Q4N2M0NzMxNWM2ZTNkNjk0YmI0MmRkOWYyYTA3OWM0MWRlOQ==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@hxi.com", "date": "2002-02-09T17:31:50Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2002-02-09T17:31:50Z"}, "message": "h8300.h: Fix formatting.\n\n\t* config/h8300/h8300.h: Fix formatting.  Remove commented-out\n\tdefinitions.\n\nFrom-SVN: r49639", "tree": {"sha": "393f5ba6e4d9a05fd670790845a50457ee00452c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/393f5ba6e4d9a05fd670790845a50457ee00452c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ca77d87c47315c6e3d694bb42dd9f2a079c41de9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca77d87c47315c6e3d694bb42dd9f2a079c41de9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca77d87c47315c6e3d694bb42dd9f2a079c41de9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca77d87c47315c6e3d694bb42dd9f2a079c41de9/comments", "author": null, "committer": null, "parents": [{"sha": "16c9630430fc8632ba7a769d99d3c3313ddbadbe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16c9630430fc8632ba7a769d99d3c3313ddbadbe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16c9630430fc8632ba7a769d99d3c3313ddbadbe"}], "stats": {"total": 52, "additions": 28, "deletions": 24}, "files": [{"sha": "fcc417800b0bb860bd10cc8b42ab83378c160ac9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca77d87c47315c6e3d694bb42dd9f2a079c41de9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca77d87c47315c6e3d694bb42dd9f2a079c41de9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ca77d87c47315c6e3d694bb42dd9f2a079c41de9", "patch": "@@ -1,3 +1,8 @@\n+2002-02-09  Kazu Hirata  <kazu@hxi.com>\n+\n+\t* config/h8300/h8300.h: Fix formatting.  Remove commented-out\n+\tdefinitions.\n+\n 2002-02-09  Kazu Hirata  <kazu@hxi.com>\n \n \t* config/h8300/h8300.md (length): Correct the distance valid"}, {"sha": "1c53c9d1ef208847a79b8987983dafb6294cf533", "filename": "gcc/config/h8300/h8300.h", "status": "modified", "additions": 23, "deletions": 24, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca77d87c47315c6e3d694bb42dd9f2a079c41de9/gcc%2Fconfig%2Fh8300%2Fh8300.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca77d87c47315c6e3d694bb42dd9f2a079c41de9/gcc%2Fconfig%2Fh8300%2Fh8300.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.h?ref=ca77d87c47315c6e3d694bb42dd9f2a079c41de9", "patch": "@@ -744,19 +744,21 @@ struct cum_arg\n \t    ^^^^^^ function\n */\n \n-#define TRAMPOLINE_TEMPLATE(FILE)\t\t\t\\\n-  do {\t\t\t\t\t\t\t\\\n-    if (TARGET_H8300)\t\t\t\t\t\\\n-      {\t\t\t\t\t\t\t\\\n-\tfprintf (FILE, \"\\tmov.w\t#0x1234,r3\\n\");\t\t\\\n-\tfprintf (FILE, \"\\tjmp\t@0x1234\\n\");\t\t\\\n-      }\t\t\t\t\t\t\t\\\n-    else\t\t\t\t\t\t\\\n-      {\t\t\t\t\t\t\t\\\n-\tfprintf (FILE, \"\\tmov.l\t#0x12345678,er3\\n\");\t\\\n-\tfprintf (FILE, \"\\tjmp\t@0x123456\\n\");\t\t\\\n-      }\t\t\t\t\t\t\t\\\n-  } while (0)\n+#define TRAMPOLINE_TEMPLATE(FILE)\t\t\t\t\\\n+  do\t\t\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\\\n+      if (TARGET_H8300)\t\t\t\t\t\t\\\n+\t{\t\t\t\t\t\t\t\\\n+\t  fprintf (FILE, \"\\tmov.w\t#0x1234,r3\\n\");\t\t\\\n+\t  fprintf (FILE, \"\\tjmp\t@0x1234\\n\");\t\t\t\\\n+\t}\t\t\t\t\t\t\t\\\n+      else\t\t\t\t\t\t\t\\\n+\t{\t\t\t\t\t\t\t\\\n+\t  fprintf (FILE, \"\\tmov.l\t#0x12345678,er3\\n\");\t\\\n+\t  fprintf (FILE, \"\\tjmp\t@0x123456\\n\");\t\t\t\\\n+\t}\t\t\t\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\t\\\n+  while (0)\n \n /* Length in units of the trampoline for entering a nested function.  */\n \n@@ -766,23 +768,20 @@ struct cum_arg\n    FNADDR is an RTX for the address of the function's pure code.\n    CXT is an RTX for the static chain value for the function.  */\n \n-#define INITIALIZE_TRAMPOLINE(TRAMP, FNADDR, CXT)\t\t\t\t\\\n-{\t\t\t\t\t\t\t\t\t\t\\\n-  enum machine_mode mode = TARGET_H8300H || TARGET_H8300S? SImode : HImode; \\\n-  emit_move_insn (gen_rtx_MEM (mode, plus_constant ((TRAMP), 2)), CXT);    \\\n-  emit_move_insn (gen_rtx_MEM (mode, plus_constant ((TRAMP), 6)), FNADDR); \\\n-  if (TARGET_H8300H || TARGET_H8300S)\t\t\t\t\t   \\\n-    emit_move_insn (gen_rtx_MEM (QImode, plus_constant ((TRAMP), 6)),\t   \\\n-\t\t    GEN_INT (0x5A)); \t\t\t\t\t   \\\n+#define INITIALIZE_TRAMPOLINE(TRAMP, FNADDR, CXT)\t\t\t     \\\n+{\t\t\t\t\t\t\t\t\t     \\\n+  enum machine_mode mode = TARGET_H8300H || TARGET_H8300S ? SImode : HImode; \\\n+  emit_move_insn (gen_rtx_MEM (mode, plus_constant ((TRAMP), 2)), CXT);\t     \\\n+  emit_move_insn (gen_rtx_MEM (mode, plus_constant ((TRAMP), 6)), FNADDR);   \\\n+  if (TARGET_H8300H || TARGET_H8300S)\t\t\t\t\t     \\\n+    emit_move_insn (gen_rtx_MEM (QImode, plus_constant ((TRAMP), 6)),\t     \\\n+\t\t    GEN_INT (0x5A));\t\t\t\t\t     \\\n }\n \f\n /* Addressing modes, and classification of registers for them.  */\n \n #define HAVE_POST_INCREMENT 1\n-/*#define HAVE_POST_DECREMENT 0 */\n-\n #define HAVE_PRE_DECREMENT 1\n-/*#define HAVE_PRE_INCREMENT 0 */\n \n /* Macros to check register numbers against specific register classes.  */\n "}]}