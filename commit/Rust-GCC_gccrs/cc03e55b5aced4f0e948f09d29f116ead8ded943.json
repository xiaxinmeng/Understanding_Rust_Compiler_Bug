{"sha": "cc03e55b5aced4f0e948f09d29f116ead8ded943", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2MwM2U1NWI1YWNlZDRmMGU5NDhmMDlkMjlmMTE2ZWFkOGRlZDk0Mw==", "commit": {"author": {"name": "Igor Tsimbalist", "email": "igor.v.tsimbalist@intel.com", "date": "2017-11-17T22:57:07Z"}, "committer": {"name": "Igor Tsimbalist", "email": "itsimbal@gcc.gnu.org", "date": "2017-11-17T22:57:07Z"}, "message": "Add extra field to gtm_jmpbuf on x86 only\n\nExpand the gtm_jmpbuf structure by one word field to add\nIntel CET support further. The code in sjlj.S already\nallocates more space on the stack then gtm_jmpbuf needs.\nUse this extra space to absorb the new field.\n\nThe structure is allocated on the stack in such a way\nthat eip/rsp field is overlapped with return address on\nthe stack. Locate the new field right before eip/rsp so\ncode that accesses buffer fields relative to address of\ngtm_jmpbuf has its offsets unchanged.\n\n\t* libitm/config/x86/target.h: Add new field (ssp).\n\t* libitm/config/x86/sjlj.S: Change offsets.\n\nFrom-SVN: r254907", "tree": {"sha": "0ff8632cc51a62f1347e564e5a2d05329e0aee43", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0ff8632cc51a62f1347e564e5a2d05329e0aee43"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cc03e55b5aced4f0e948f09d29f116ead8ded943", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc03e55b5aced4f0e948f09d29f116ead8ded943", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc03e55b5aced4f0e948f09d29f116ead8ded943", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc03e55b5aced4f0e948f09d29f116ead8ded943/comments", "author": {"login": "itsimbal", "id": 29258612, "node_id": "MDQ6VXNlcjI5MjU4NjEy", "avatar_url": "https://avatars.githubusercontent.com/u/29258612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/itsimbal", "html_url": "https://github.com/itsimbal", "followers_url": "https://api.github.com/users/itsimbal/followers", "following_url": "https://api.github.com/users/itsimbal/following{/other_user}", "gists_url": "https://api.github.com/users/itsimbal/gists{/gist_id}", "starred_url": "https://api.github.com/users/itsimbal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/itsimbal/subscriptions", "organizations_url": "https://api.github.com/users/itsimbal/orgs", "repos_url": "https://api.github.com/users/itsimbal/repos", "events_url": "https://api.github.com/users/itsimbal/events{/privacy}", "received_events_url": "https://api.github.com/users/itsimbal/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7cac54fb0dffd050963e122e79f042f4c2f000c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7cac54fb0dffd050963e122e79f042f4c2f000c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7cac54fb0dffd050963e122e79f042f4c2f000c0"}], "stats": {"total": 53, "additions": 32, "deletions": 21}, "files": [{"sha": "196ac9a1ab2ea46bc6804f226be2264cab4b9c75", "filename": "libitm/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc03e55b5aced4f0e948f09d29f116ead8ded943/libitm%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc03e55b5aced4f0e948f09d29f116ead8ded943/libitm%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2FChangeLog?ref=cc03e55b5aced4f0e948f09d29f116ead8ded943", "patch": "@@ -1,3 +1,8 @@\n+2017-11-17  Igor Tsimbalist  <igor.v.tsimbalist@intel.com>\n+\n+\t* libitm/config/x86/target.h: Add new field (ssp).\n+\t* libitm/config/x86/sjlj.S: Change offsets.\n+\n 2017-05-12  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* testsuite/lib/libitm.exp: Load scanlang.exp."}, {"sha": "7de417ca101c83e5557a6be7498b9ddb1f2815e7", "filename": "libitm/config/x86/sjlj.S", "status": "modified", "additions": 25, "deletions": 21, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc03e55b5aced4f0e948f09d29f116ead8ded943/libitm%2Fconfig%2Fx86%2Fsjlj.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc03e55b5aced4f0e948f09d29f116ead8ded943/libitm%2Fconfig%2Fx86%2Fsjlj.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2Fconfig%2Fx86%2Fsjlj.S?ref=cc03e55b5aced4f0e948f09d29f116ead8ded943", "patch": "@@ -126,20 +126,22 @@ SYM(_ITM_beginTransaction):\n \t/* Store edi for future HTM fast path retries.  We use a stack slot\n \t   lower than the jmpbuf so that the jmpbuf's rip field will overlap\n \t   with the proper return address on the stack.  */\n-\tmovl\t%edi, 8(%rsp)\n+\tmovl\t%edi, (%rsp)\n \t/* Save the jmpbuf for any non-HTM-fastpath execution method.\n \t   Because rsp-based addressing is 1 byte larger and we've got rax\n \t   handy, use it.  */\n-\tmovq\t%rax, -64(%rax)\n-\tmovq\t%rbx, -56(%rax)\n-\tmovq\t%rbp, -48(%rax)\n-\tmovq\t%r12, -40(%rax)\n-\tmovq\t%r13, -32(%rax)\n-\tmovq\t%r14, -24(%rax)\n-\tmovq\t%r15, -16(%rax)\n-\tleaq\t-64(%rax), %rsi\n+\tmovq\t%rax, -72(%rax)\n+\tmovq\t%rbx, -64(%rax)\n+\tmovq\t%rbp, -56(%rax)\n+\tmovq\t%r12, -48(%rax)\n+\tmovq\t%r13, -40(%rax)\n+\tmovq\t%r14, -32(%rax)\n+\tmovq\t%r15, -24(%rax)\n+\txorq\t%rdx, %rdx\n+\tmovq\t%rdx, -16(%rax)\n+\tleaq\t-72(%rax), %rsi\n \tcall\tSYM(GTM_begin_transaction)\n-\tmovl\t8(%rsp), %edi\n+\tmovl\t(%rsp), %edi\n \taddq\t$72, %rsp\n \tcfi_adjust_cfa_offset(-72)\n #ifdef HAVE_AS_RTM\n@@ -162,20 +164,22 @@ SYM(_ITM_beginTransaction):\n \tmovl\t4(%esp), %eax\n \tsubl\t$28, %esp\n \tcfi_def_cfa_offset(32)\n-\tmovl\t%ecx, 8(%esp)\n-\tmovl\t%ebx, 12(%esp)\n-\tmovl\t%esi, 16(%esp)\n-\tmovl\t%edi, 20(%esp)\n-\tmovl\t%ebp, 24(%esp)\n-\tleal\t8(%esp), %edx\n+\tmovl\t%ecx, 4(%esp)\n+\tmovl\t%ebx, 8(%esp)\n+\tmovl\t%esi, 12(%esp)\n+\tmovl\t%edi, 16(%esp)\n+\tmovl\t%ebp, 20(%esp)\n+\txorl\t%edx, %edx\n+\tmovl\t%edx, 24(%esp)\n+\tleal\t4(%esp), %edx\n #if defined HAVE_ATTRIBUTE_VISIBILITY || !defined __PIC__\n \tcall\tSYM(GTM_begin_transaction)\n #elif defined __ELF__\n \tcall\t1f\n 1:\tpopl\t%ebx\n \taddl\t$_GLOBAL_OFFSET_TABLE_+[.-1b], %ebx\n \tcall\tSYM(GTM_begin_transaction)@PLT\n-\tmovl\t12(%esp), %ebx\n+\tmovl\t8(%esp), %ebx\n #else\n # error \"Unsupported PIC sequence\"\n #endif\n@@ -203,21 +207,21 @@ SYM(GTM_longjmp):\n \tmovq\t48(%rsi), %r15\n \tmovl\t%edi, %eax\n \tcfi_def_cfa(%rsi, 0)\n-\tcfi_offset(%rip, 56)\n+\tcfi_offset(%rip, 64)\n \tcfi_register(%rsp, %rcx)\n \tmovq\t%rcx, %rsp\n-\tjmp\t*56(%rsi)\n+\tjmp\t*64(%rsi)\n #else\n \tmovl\t(%edx), %ecx\n \tmovl\t4(%edx), %ebx\n \tmovl\t8(%edx), %esi\n \tmovl\t12(%edx), %edi\n \tmovl\t16(%edx), %ebp\n \tcfi_def_cfa(%edx, 0)\n-\tcfi_offset(%eip, 20)\n+\tcfi_offset(%eip, 24)\n \tcfi_register(%esp, %ecx)\n \tmovl\t%ecx, %esp\n-\tjmp\t*20(%edx)\n+\tjmp\t*24(%edx)\n #endif\n \tcfi_endproc\n "}, {"sha": "5a4b820c2054e2d6b991994660879cf6a86aabc5", "filename": "libitm/config/x86/target.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc03e55b5aced4f0e948f09d29f116ead8ded943/libitm%2Fconfig%2Fx86%2Ftarget.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc03e55b5aced4f0e948f09d29f116ead8ded943/libitm%2Fconfig%2Fx86%2Ftarget.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2Fconfig%2Fx86%2Ftarget.h?ref=cc03e55b5aced4f0e948f09d29f116ead8ded943", "patch": "@@ -39,12 +39,14 @@ typedef struct gtm_jmpbuf\n   unsigned long long r13;\n   unsigned long long r14;\n   unsigned long long r15;\n+  unsigned long long ssp;\n   unsigned long long rip;\n #else\n   unsigned long ebx;\n   unsigned long esi;\n   unsigned long edi;\n   unsigned long ebp;\n+  unsigned long ssp;\n   unsigned long eip;\n #endif\n } gtm_jmpbuf;"}]}