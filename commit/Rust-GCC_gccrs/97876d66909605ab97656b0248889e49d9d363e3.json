{"sha": "97876d66909605ab97656b0248889e49d9d363e3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTc4NzZkNjY5MDk2MDVhYjk3NjU2YjAyNDg4ODllNDlkOWQzNjNlMw==", "commit": {"author": {"name": "Richard Earnshaw", "email": "rearnsha@arm.com", "date": "2001-01-25T10:35:09Z"}, "committer": {"name": "Richard Earnshaw", "email": "rearnsha@gcc.gnu.org", "date": "2001-01-25T10:35:09Z"}, "message": "* lex.c (java_read_char): Check for EOF from getc first.\n\nFrom-SVN: r39261", "tree": {"sha": "51c585e913c6b54002cdd8f29b9a41b598543728", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/51c585e913c6b54002cdd8f29b9a41b598543728"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/97876d66909605ab97656b0248889e49d9d363e3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97876d66909605ab97656b0248889e49d9d363e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/97876d66909605ab97656b0248889e49d9d363e3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97876d66909605ab97656b0248889e49d9d363e3/comments", "author": null, "committer": null, "parents": [{"sha": "86e212125feadb56d55459f167c9de10e8bf998c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86e212125feadb56d55459f167c9de10e8bf998c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86e212125feadb56d55459f167c9de10e8bf998c"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "cbe63223b3599ac5858836636222c801474a8734", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97876d66909605ab97656b0248889e49d9d363e3/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97876d66909605ab97656b0248889e49d9d363e3/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=97876d66909605ab97656b0248889e49d9d363e3", "patch": "@@ -1,3 +1,7 @@\n+2001-01-25  Richard Earnshaw  <rearnsha@arm.com>\n+\n+\t* lex.c (java_read_char): Check for EOF from getc first.\n+\n 2001-01-23  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n \t* class.c (layout_class): Don't lay the superclass out if it's"}, {"sha": "fdfb0a7705d5b28aeedb1e09783e1a9d709efe5b", "filename": "gcc/java/lex.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97876d66909605ab97656b0248889e49d9d363e3/gcc%2Fjava%2Flex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97876d66909605ab97656b0248889e49d9d363e3/gcc%2Fjava%2Flex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Flex.c?ref=97876d66909605ab97656b0248889e49d9d363e3", "patch": "@@ -447,10 +447,10 @@ java_read_char (lex)\n       int c, c1, c2;\n       c = getc (lex->finput);\n \n-      if (c < 128)\n-\treturn (unicode_t)c;\n       if (c == EOF)\n \treturn UEOF;\n+      if (c < 128)\n+\treturn (unicode_t)c;\n       else\n \t{\n \t  if ((c & 0xe0) == 0xc0)"}]}