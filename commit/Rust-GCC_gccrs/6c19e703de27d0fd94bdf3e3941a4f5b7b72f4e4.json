{"sha": "6c19e703de27d0fd94bdf3e3941a4f5b7b72f4e4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmMxOWU3MDNkZTI3ZDBmZDk0YmRmM2UzOTQxYTRmNWI3YjcyZjRlNA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2017-11-22T22:35:52Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2017-11-22T22:35:52Z"}, "message": "re PR c++/82401 (error: qsort comparator non-negative on sorted output: 1 in insert_late_enum_def_bindings on an invalid code)\n\n\tPR c++/82401\n\t* name-lookup.c (member_name_cmp): Return 0 if a == b.\n\n\t* g++.dg/cpp0x/pr82401.C: New test.\n\nFrom-SVN: r255084", "tree": {"sha": "f1d1ba8a4fceb120ca9dc9ae7121b2a78948ec46", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f1d1ba8a4fceb120ca9dc9ae7121b2a78948ec46"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6c19e703de27d0fd94bdf3e3941a4f5b7b72f4e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c19e703de27d0fd94bdf3e3941a4f5b7b72f4e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c19e703de27d0fd94bdf3e3941a4f5b7b72f4e4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c19e703de27d0fd94bdf3e3941a4f5b7b72f4e4/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "52af380439eab2770ad65af495e2c1a281e4b097", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52af380439eab2770ad65af495e2c1a281e4b097", "html_url": "https://github.com/Rust-GCC/gccrs/commit/52af380439eab2770ad65af495e2c1a281e4b097"}], "stats": {"total": 31, "additions": 30, "deletions": 1}, "files": [{"sha": "59e890f6efddf3df2ad8184d0908d2c305f6970b", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c19e703de27d0fd94bdf3e3941a4f5b7b72f4e4/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c19e703de27d0fd94bdf3e3941a4f5b7b72f4e4/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=6c19e703de27d0fd94bdf3e3941a4f5b7b72f4e4", "patch": "@@ -1,3 +1,8 @@\n+2017-11-22  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/82401\n+\t* name-lookup.c (member_name_cmp): Return 0 if a == b.\n+\n 2017-11-22  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR c++/62170"}, {"sha": "9f65c4d7992738d005ceb36e48be75586ce40ff3", "filename": "gcc/cp/name-lookup.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c19e703de27d0fd94bdf3e3941a4f5b7b72f4e4/gcc%2Fcp%2Fname-lookup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c19e703de27d0fd94bdf3e3941a4f5b7b72f4e4/gcc%2Fcp%2Fname-lookup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fname-lookup.c?ref=6c19e703de27d0fd94bdf3e3941a4f5b7b72f4e4", "patch": "@@ -1469,7 +1469,10 @@ member_name_cmp (const void *a_p, const void *b_p)\n      how we order these.  Use UID as a proxy for source ordering, so\n      that identically-located decls still have a well-defined stable\n      ordering.  */\n-  return DECL_UID (a) < DECL_UID (b) ? -1 : +1;\n+  if (DECL_UID (a) != DECL_UID (b))\n+    return DECL_UID (a) < DECL_UID (b) ? -1 : +1;\n+  gcc_assert (a == b);\n+  return 0;\n }\n \n static struct {"}, {"sha": "726773bee0d1fc6689502491d209127ee79f55c5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c19e703de27d0fd94bdf3e3941a4f5b7b72f4e4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c19e703de27d0fd94bdf3e3941a4f5b7b72f4e4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6c19e703de27d0fd94bdf3e3941a4f5b7b72f4e4", "patch": "@@ -1,3 +1,8 @@\n+2017-11-22  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/82401\n+\t* g++.dg/cpp0x/pr82401.C: New test.\n+\n 2017-11-22  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR tree-optimization/82588"}, {"sha": "52d40e0428284a4dd73da2d210535c1c15d1ea83", "filename": "gcc/testsuite/g++.dg/cpp0x/pr82401.C", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c19e703de27d0fd94bdf3e3941a4f5b7b72f4e4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr82401.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c19e703de27d0fd94bdf3e3941a4f5b7b72f4e4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr82401.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr82401.C?ref=6c19e703de27d0fd94bdf3e3941a4f5b7b72f4e4", "patch": "@@ -0,0 +1,16 @@\n+// PR c++/82401\n+// { dg-do compile { target c++11 } }\n+// { dg-options \"\" }\n+\n+template <typename T> struct A\n+{\n+  enum E : T;\n+  void h ();\n+};\n+template <typename T> enum A<T>::E : T { e1, e2 };\n+template <> enum A<long long>::E : long long {};\n+template <typename T> struct C\n+{\n+  enum class E : T;\n+};\n+C<int>::E c3 = C<int>::E::e1;\t// { dg-error \"is not a member of\" }"}]}