{"sha": "3645c6e286c4677815e0eeeb8c8aefa759795bd0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzY0NWM2ZTI4NmM0Njc3ODE1ZTBlZWViOGM4YWVmYTc1OTc5NWJkMA==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2019-06-09T23:18:28Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2019-06-09T23:18:28Z"}, "message": "re PR c++/65175 (ICE forming a typedef with an alias template)\n\n\tPR c++/65175\n\t* g++.dg/cpp0x/alias-decl-69.C: New test.\n\nFrom-SVN: r272098", "tree": {"sha": "436dc98c9ac5aec53de6f92bc70011c85b8705c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/436dc98c9ac5aec53de6f92bc70011c85b8705c3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3645c6e286c4677815e0eeeb8c8aefa759795bd0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3645c6e286c4677815e0eeeb8c8aefa759795bd0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3645c6e286c4677815e0eeeb8c8aefa759795bd0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3645c6e286c4677815e0eeeb8c8aefa759795bd0/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "dcba286a9ad584b5713ab32c63516519ecef521a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dcba286a9ad584b5713ab32c63516519ecef521a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dcba286a9ad584b5713ab32c63516519ecef521a"}], "stats": {"total": 43, "additions": 43, "deletions": 0}, "files": [{"sha": "8f5eba984a74bb89b2b2d8c9719997d5f3a3d297", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3645c6e286c4677815e0eeeb8c8aefa759795bd0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3645c6e286c4677815e0eeeb8c8aefa759795bd0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3645c6e286c4677815e0eeeb8c8aefa759795bd0", "patch": "@@ -1,5 +1,8 @@\n 2019-06-09  Marek Polacek  <polacek@redhat.com>\n \n+\tPR c++/65175\n+\t* g++.dg/cpp0x/alias-decl-69.C: New test.\n+\n \tPR c++/60366\n \t* g++.dg/cpp0x/lambda/lambda-ice32.C: New test.\n "}, {"sha": "7dd7aa2379c8d29332db35492edb52e9e9b438ec", "filename": "gcc/testsuite/g++.dg/cpp0x/alias-decl-69.C", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3645c6e286c4677815e0eeeb8c8aefa759795bd0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-69.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3645c6e286c4677815e0eeeb8c8aefa759795bd0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-69.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-69.C?ref=3645c6e286c4677815e0eeeb8c8aefa759795bd0", "patch": "@@ -0,0 +1,40 @@\n+// PR c++/65175\n+// { dg-do compile { target c++11 } }\n+\n+template <class a> using au = typename a::av;\n+template <bool, class a> using az = a;\n+template <template <class...> class b, class... bf> struct d {\n+  template <class bh> struct f { typedef bh e; };\n+  static auto g(int) -> f<b<bf...>>;\n+  typedef typename decltype(g(0))::e e;\n+};\n+template <class = void> class h;\n+template <class, class, template <class...> class, class...> struct i;\n+struct j {\n+  typedef int bu;\n+};\n+namespace bv {\n+template <class> struct k : j {};\n+template <class bx> struct l : i<int, void, k, bx> {};\n+} // namespace bv\n+template <class bx> auto bw(bx) -> az<bv::l<bx>::c, typename bv::l<bx>::bz>;\n+template <class, class cd, class> struct n : j { au<cd> av; };\n+template <class, class cd, class> struct K : j { au<cd> av; };\n+template <class cj> struct o {\n+  typedef typename cj::e e;\n+  static const bool c = true;\n+  typedef h<typename e::bu> bz;\n+};\n+template <class, class, template <class...> class cj, class... bf>\n+struct i : o<d<cj, bf...>> {};\n+template <class> class h {\n+public:\n+  typedef int av;\n+  struct : i<int, int, K, int, h, int> {} s;\n+  template <class> struct p : i<int, int, n, int, h<h>, int> {};\n+  template <class bx, class cl>\n+  auto m_fn2(bx, cl) -> az<p<cl>::c, typename p<cl>::bz>;\n+  template <class bx> static auto q(int, int, bx cm) -> decltype(bw(cm));\n+};\n+int a, b;\n+void c() { h<>::q(b, 5, a).m_fn2(5, a); }"}]}