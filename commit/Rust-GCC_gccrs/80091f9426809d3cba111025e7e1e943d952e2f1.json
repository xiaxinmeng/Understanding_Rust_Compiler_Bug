{"sha": "80091f9426809d3cba111025e7e1e943d952e2f1", "node_id": "C_kwDOANBUbNoAKDgwMDkxZjk0MjY4MDlkM2NiYTExMTAyNWU3ZTFlOTQzZDk1MmUyZjE", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-12-17T08:56:21Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-12-17T09:54:16Z"}, "message": "Sync config.sub: 2021-10-27\n\nChangeLog:\n\n\t* config.sub: Sync from master.", "tree": {"sha": "24a57db91409197356efcd06240c50c15ce87dbb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/24a57db91409197356efcd06240c50c15ce87dbb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/80091f9426809d3cba111025e7e1e943d952e2f1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80091f9426809d3cba111025e7e1e943d952e2f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/80091f9426809d3cba111025e7e1e943d952e2f1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80091f9426809d3cba111025e7e1e943d952e2f1/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ff56eea24e48f7a8a3b39db7049d1da532d4b8af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff56eea24e48f7a8a3b39db7049d1da532d4b8af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff56eea24e48f7a8a3b39db7049d1da532d4b8af"}], "stats": {"total": 81, "additions": 53, "deletions": 28}, "files": [{"sha": "38f3d037a785f54fb6a5e946d83fc29a2085757c", "filename": "config.sub", "status": "modified", "additions": 53, "deletions": 28, "changes": 81, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80091f9426809d3cba111025e7e1e943d952e2f1/config.sub", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80091f9426809d3cba111025e7e1e943d952e2f1/config.sub", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config.sub?ref=80091f9426809d3cba111025e7e1e943d952e2f1", "patch": "@@ -2,7 +2,9 @@\n # Configuration validation subroutine script.\n #   Copyright 1992-2021 Free Software Foundation, Inc.\n \n-timestamp='2021-01-08'\n+# shellcheck disable=SC2006,SC2268 # see below for rationale\n+\n+timestamp='2021-10-27'\n \n # This file is free software; you can redistribute it and/or modify it\n # under the terms of the GNU General Public License as published by\n@@ -50,7 +52,14 @@ timestamp='2021-01-08'\n #\tCPU_TYPE-MANUFACTURER-KERNEL-OPERATING_SYSTEM\n # It is wrong to echo any other type of specification.\n \n-me=$(echo \"$0\" | sed -e 's,.*/,,')\n+# The \"shellcheck disable\" line above the timestamp inhibits complaints\n+# about features and limitations of the classic Bourne shell that were\n+# superseded or lifted in POSIX.  However, this script identifies a wide\n+# variety of pre-POSIX systems that do not have POSIX shells at all, and\n+# even some reasonably current systems (Solaris 10 as case-in-point) still\n+# have a pre-POSIX /bin/sh.\n+\n+me=`echo \"$0\" | sed -e 's,.*/,,'`\n \n usage=\"\\\n Usage: $0 [OPTION] CPU-MFR-OPSYS or ALIAS\n@@ -112,9 +121,11 @@ esac\n \n # Split fields of configuration type\n # shellcheck disable=SC2162\n+saved_IFS=$IFS\n IFS=\"-\" read field1 field2 field3 field4 <<EOF\n $1\n EOF\n+IFS=$saved_IFS\n \n # Separate into logical components for further validation\n case $1 in\n@@ -163,6 +174,10 @@ case $1 in\n \t\t\t\t\t\tbasic_machine=$field1\n \t\t\t\t\t\tbasic_os=$field2\n \t\t\t\t\t\t;;\n+\t\t\t\t\tzephyr*)\n+\t\t\t\t\t\tbasic_machine=$field1-unknown\n+\t\t\t\t\t\tbasic_os=$field2\n+\t\t\t\t\t\t;;\n \t\t\t\t\t# Manufacturers\n \t\t\t\t\tdec* | mips* | sequent* | encore* | pc533* | sgi* | sony* \\\n \t\t\t\t\t| att* | 7300* | 3300* | delta* | motorola* | sun[234]* \\\n@@ -769,22 +784,22 @@ case $basic_machine in\n \t\tvendor=hp\n \t\t;;\n \ti*86v32)\n-\t\tcpu=$(echo \"$1\" | sed -e 's/86.*/86/')\n+\t\tcpu=`echo \"$1\" | sed -e 's/86.*/86/'`\n \t\tvendor=pc\n \t\tbasic_os=sysv32\n \t\t;;\n \ti*86v4*)\n-\t\tcpu=$(echo \"$1\" | sed -e 's/86.*/86/')\n+\t\tcpu=`echo \"$1\" | sed -e 's/86.*/86/'`\n \t\tvendor=pc\n \t\tbasic_os=sysv4\n \t\t;;\n \ti*86v)\n-\t\tcpu=$(echo \"$1\" | sed -e 's/86.*/86/')\n+\t\tcpu=`echo \"$1\" | sed -e 's/86.*/86/'`\n \t\tvendor=pc\n \t\tbasic_os=sysv\n \t\t;;\n \ti*86sol2)\n-\t\tcpu=$(echo \"$1\" | sed -e 's/86.*/86/')\n+\t\tcpu=`echo \"$1\" | sed -e 's/86.*/86/'`\n \t\tvendor=pc\n \t\tbasic_os=solaris2\n \t\t;;\n@@ -917,14 +932,16 @@ case $basic_machine in\n \t\t;;\n \tleon-*|leon[3-9]-*)\n \t\tcpu=sparc\n-\t\tvendor=$(echo \"$basic_machine\" | sed 's/-.*//')\n+\t\tvendor=`echo \"$basic_machine\" | sed 's/-.*//'`\n \t\t;;\n \n \t*-*)\n \t\t# shellcheck disable=SC2162\n+\t\tsaved_IFS=$IFS\n \t\tIFS=\"-\" read cpu vendor <<EOF\n $basic_machine\n EOF\n+\t\tIFS=$saved_IFS\n \t\t;;\n \t# We use `pc' rather than `unknown'\n \t# because (1) that's what they normally are, and\n@@ -1084,7 +1101,7 @@ case $cpu-$vendor in\n \t\tcpu=mipsisa64sb1el\n \t\t;;\n \tsh5e[lb]-*)\n-\t\tcpu=$(echo \"$cpu\" | sed 's/^\\(sh.\\)e\\(.\\)$/\\1\\2e/')\n+\t\tcpu=`echo \"$cpu\" | sed 's/^\\(sh.\\)e\\(.\\)$/\\1\\2e/'`\n \t\t;;\n \tspur-*)\n \t\tcpu=spur\n@@ -1102,7 +1119,7 @@ case $cpu-$vendor in\n \t\tcpu=x86_64\n \t\t;;\n \txscale-* | xscalee[bl]-*)\n-\t\tcpu=$(echo \"$cpu\" | sed 's/^xscale/arm/')\n+\t\tcpu=`echo \"$cpu\" | sed 's/^xscale/arm/'`\n \t\t;;\n \tarm64-*)\n \t\tcpu=aarch64\n@@ -1165,7 +1182,7 @@ case $cpu-$vendor in\n \t\t\t| alphapca5[67] | alpha64pca5[67] \\\n \t\t\t| am33_2.0 \\\n \t\t\t| amdgcn \\\n-\t\t\t| arc | arceb \\\n+\t\t\t| arc | arceb | arc32 | arc64 \\\n \t\t\t| arm | arm[lb]e | arme[lb] | armv* \\\n \t\t\t| avr | avr32 \\\n \t\t\t| asmjs \\\n@@ -1204,9 +1221,13 @@ case $cpu-$vendor in\n \t\t\t| mips64vr5900 | mips64vr5900el \\\n \t\t\t| mipsisa32 | mipsisa32el \\\n \t\t\t| mipsisa32r2 | mipsisa32r2el \\\n+\t\t\t| mipsisa32r3 | mipsisa32r3el \\\n+\t\t\t| mipsisa32r5 | mipsisa32r5el \\\n \t\t\t| mipsisa32r6 | mipsisa32r6el \\\n \t\t\t| mipsisa64 | mipsisa64el \\\n \t\t\t| mipsisa64r2 | mipsisa64r2el \\\n+\t\t\t| mipsisa64r3 | mipsisa64r3el \\\n+\t\t\t| mipsisa64r5 | mipsisa64r5el \\\n \t\t\t| mipsisa64r6 | mipsisa64r6el \\\n \t\t\t| mipsisa64sb1 | mipsisa64sb1el \\\n \t\t\t| mipsisa64sr71k | mipsisa64sr71kel \\\n@@ -1283,35 +1304,37 @@ esac\n if test x$basic_os != x\n then\n \n-# First recognize some ad-hoc caes, or perhaps split kernel-os, or else just\n+# First recognize some ad-hoc cases, or perhaps split kernel-os, or else just\n # set os.\n case $basic_os in\n \tgnu/linux*)\n \t\tkernel=linux\n-\t\tos=$(echo $basic_os | sed -e 's|gnu/linux|gnu|')\n+\t\tos=`echo \"$basic_os\" | sed -e 's|gnu/linux|gnu|'`\n \t\t;;\n \tos2-emx)\n \t\tkernel=os2\n-\t\tos=$(echo $basic_os | sed -e 's|os2-emx|emx|')\n+\t\tos=`echo \"$basic_os\" | sed -e 's|os2-emx|emx|'`\n \t\t;;\n \tnto-qnx*)\n \t\tkernel=nto\n-\t\tos=$(echo $basic_os | sed -e 's|nto-qnx|qnx|')\n+\t\tos=`echo \"$basic_os\" | sed -e 's|nto-qnx|qnx|'`\n \t\t;;\n \t*-*)\n \t\t# shellcheck disable=SC2162\n+\t\tsaved_IFS=$IFS\n \t\tIFS=\"-\" read kernel os <<EOF\n $basic_os\n EOF\n+\t\tIFS=$saved_IFS\n \t\t;;\n \t# Default OS when just kernel was specified\n \tnto*)\n \t\tkernel=nto\n-\t\tos=$(echo $basic_os | sed -e 's|nto|qnx|')\n+\t\tos=`echo \"$basic_os\" | sed -e 's|nto|qnx|'`\n \t\t;;\n \tlinux*)\n \t\tkernel=linux\n-\t\tos=$(echo $basic_os | sed -e 's|linux|gnu|')\n+\t\tos=`echo \"$basic_os\" | sed -e 's|linux|gnu|'`\n \t\t;;\n \t*)\n \t\tkernel=\n@@ -1332,7 +1355,7 @@ case $os in\n \t\tos=cnk\n \t\t;;\n \tsolaris1 | solaris1.*)\n-\t\tos=$(echo $os | sed -e 's|solaris1|sunos4|')\n+\t\tos=`echo \"$os\" | sed -e 's|solaris1|sunos4|'`\n \t\t;;\n \tsolaris)\n \t\tos=solaris2\n@@ -1361,7 +1384,7 @@ case $os in\n \t\tos=sco3.2v4\n \t\t;;\n \tsco3.2.[4-9]*)\n-\t\tos=$(echo $os | sed -e 's/sco3.2./sco3.2v/')\n+\t\tos=`echo \"$os\" | sed -e 's/sco3.2./sco3.2v/'`\n \t\t;;\n \tsco*v* | scout)\n \t\t# Don't match below\n@@ -1391,7 +1414,7 @@ case $os in\n \t\tos=lynxos\n \t\t;;\n \tmac[0-9]*)\n-\t\tos=$(echo \"$os\" | sed -e 's|mac|macos|')\n+\t\tos=`echo \"$os\" | sed -e 's|mac|macos|'`\n \t\t;;\n \topened*)\n \t\tos=openedition\n@@ -1400,10 +1423,10 @@ case $os in\n \t\tos=os400\n \t\t;;\n \tsunos5*)\n-\t\tos=$(echo \"$os\" | sed -e 's|sunos5|solaris2|')\n+\t\tos=`echo \"$os\" | sed -e 's|sunos5|solaris2|'`\n \t\t;;\n \tsunos6*)\n-\t\tos=$(echo \"$os\" | sed -e 's|sunos6|solaris3|')\n+\t\tos=`echo \"$os\" | sed -e 's|sunos6|solaris3|'`\n \t\t;;\n \twince*)\n \t\tos=wince\n@@ -1437,7 +1460,7 @@ case $os in\n \t\t;;\n \t# Preserve the version number of sinix5.\n \tsinix5.*)\n-\t\tos=$(echo $os | sed -e 's|sinix|sysv|')\n+\t\tos=`echo \"$os\" | sed -e 's|sinix|sysv|'`\n \t\t;;\n \tsinix*)\n \t\tos=sysv4\n@@ -1684,7 +1707,7 @@ fi\n # Now, validate our (potentially fixed-up) OS.\n case $os in\n \t# Sometimes we do \"kernel-libc\", so those need to count as OSes.\n-\tmusl* | newlib* | uclibc*)\n+\tmusl* | newlib* | relibc* | uclibc*)\n \t\t;;\n \t# Likewise for \"kernel-abi\"\n \teabi* | gnueabi*)\n@@ -1707,12 +1730,12 @@ case $os in\n \t     | nindy* | vxsim* | vxworks* | ebmon* | hms* | mvs* \\\n \t     | clix* | riscos* | uniplus* | iris* | isc* | rtu* | xenix* \\\n \t     | mirbsd* | netbsd* | dicos* | openedition* | ose* \\\n-\t     | bitrig* | openbsd* | solidbsd* | libertybsd* | os108* \\\n+\t     | bitrig* | openbsd* | secbsd* | solidbsd* | libertybsd* | os108* \\\n \t     | ekkobsd* | freebsd* | riscix* | lynxos* | os400* \\\n \t     | bosx* | nextstep* | cxux* | aout* | elf* | oabi* \\\n \t     | ptx* | coff* | ecoff* | winnt* | domain* | vsta* \\\n \t     | udi* | lites* | ieee* | go32* | aux* | hcos* \\\n-\t     | chorusrdb* | cegcc* | glidix* \\\n+\t     | chorusrdb* | cegcc* | glidix* | serenity* \\\n \t     | cygwin* | msys* | pe* | moss* | proelf* | rtems* \\\n \t     | midipix* | mingw32* | mingw64* | mint* \\\n \t     | uxpv* | beos* | mpeix* | udk* | moxiebox* \\\n@@ -1725,7 +1748,8 @@ case $os in\n \t     | skyos* | haiku* | rdos* | toppers* | drops* | es* \\\n \t     | onefs* | tirtos* | phoenix* | fuchsia* | redox* | bme* \\\n \t     | midnightbsd* | amdhsa* | unleashed* | emscripten* | wasi* \\\n-\t     | nsk* | powerunix* | genode* | zvmoe* | qnx* | emx*)\n+\t     | nsk* | powerunix* | genode* | zvmoe* | qnx* | emx* | zephyr* \\\n+\t     | fiwix* )\n \t\t;;\n \t# This one is extra strict with allowed versions\n \tsco3.2v2 | sco3.2v[4-9]* | sco5v6*)\n@@ -1742,11 +1766,12 @@ esac\n # As a final step for OS-related things, validate the OS-kernel combination\n # (given a valid OS), if there is a kernel.\n case $kernel-$os in\n-\tlinux-gnu* | linux-dietlibc* | linux-android* | linux-newlib* | linux-musl* | linux-uclibc* )\n+\tlinux-gnu* | linux-dietlibc* | linux-android* | linux-newlib* \\\n+\t\t   | linux-musl* | linux-relibc* | linux-uclibc* )\n \t\t;;\n \tuclinux-uclibc* )\n \t\t;;\n-\t-dietlibc* | -newlib* | -musl* | -uclibc* )\n+\t-dietlibc* | -newlib* | -musl* | -relibc* | -uclibc* )\n \t\t# These are just libc implementations, not actual OSes, and thus\n \t\t# require a kernel.\n \t\techo \"Invalid configuration \\`$1': libc \\`$os' needs explicit kernel.\" 1>&2"}]}