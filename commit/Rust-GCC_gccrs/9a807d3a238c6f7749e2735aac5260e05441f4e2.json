{"sha": "9a807d3a238c6f7749e2735aac5260e05441f4e2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWE4MDdkM2EyMzhjNmY3NzQ5ZTI3MzVhYWM1MjYwZTA1NDQxZjRlMg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-12-07T23:49:30Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-12-07T23:49:30Z"}, "message": "(struct function): Make frame_offset be HOST_WIDE_INT.\n\n(get_frame_size): Add definition.\n\nFrom-SVN: r13244", "tree": {"sha": "5e005395c518b4cb96bca82b01576c91c6357616", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5e005395c518b4cb96bca82b01576c91c6357616"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9a807d3a238c6f7749e2735aac5260e05441f4e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a807d3a238c6f7749e2735aac5260e05441f4e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a807d3a238c6f7749e2735aac5260e05441f4e2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a807d3a238c6f7749e2735aac5260e05441f4e2/comments", "author": null, "committer": null, "parents": [{"sha": "8af5168bae5245ada9e40d353925bcdbfef54fed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8af5168bae5245ada9e40d353925bcdbfef54fed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8af5168bae5245ada9e40d353925bcdbfef54fed"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "69e60ae4a680d06218b06aae0465217bb8f3f418", "filename": "gcc/function.h", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a807d3a238c6f7749e2735aac5260e05441f4e2/gcc%2Ffunction.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a807d3a238c6f7749e2735aac5260e05441f4e2/gcc%2Ffunction.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.h?ref=9a807d3a238c6f7749e2735aac5260e05441f4e2", "patch": "@@ -95,7 +95,7 @@ struct function\n   rtx save_expr_regs;\n   rtx stack_slot_list;\n   rtx parm_birth_insn;\n-  int frame_offset;\n+  HOST_WIDE_INT frame_offset;\n   rtx tail_recursion_label;\n   rtx tail_recursion_reentry;\n   rtx internal_arg_pointer;\n@@ -223,6 +223,11 @@ extern struct function *outer_function_chain;\n    the index of that block in the vector.  */\n extern tree *identify_blocks PROTO((tree, rtx));\n \n+/* Return size needed for stack frame based on slots so far allocated.\n+   This size counts from zero.  It is not rounded to STACK_BOUNDARY;\n+   the caller may have to do that.  */\n+extern HOST_WIDE_INT get_frame_size PROTO((void));\n+\n /* These variables hold pointers to functions to\n    save and restore machine-specific data,\n    in push_function_context and pop_function_context.  */"}]}