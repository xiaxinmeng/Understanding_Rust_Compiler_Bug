{"sha": "75cc21e2b7153b7561a7636fd668ba66f10b72eb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzVjYzIxZTJiNzE1M2I3NTYxYTc2MzZmZDY2OGJhNjZmMTBiNzJlYg==", "commit": {"author": {"name": "Andreas Krebbel", "email": "Andreas.Krebbel@de.ibm.com", "date": "2014-02-07T14:22:41Z"}, "committer": {"name": "Andreas Krebbel", "email": "krebbel@gcc.gnu.org", "date": "2014-02-07T14:22:41Z"}, "message": "2014-02-07  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>\n\n\t* config/s390/s390.md (\"atomic_load<mode>\", \"atomic_store<mode>\")\n\t(\"atomic_compare_and_swap<mode>\", \"atomic_fetch_<atomic><mode>\"):\n\tReject misaligned operands.\n\nFrom-SVN: r207601", "tree": {"sha": "49766e280c6339d4b422b4273878dfd033014f70", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/49766e280c6339d4b422b4273878dfd033014f70"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/75cc21e2b7153b7561a7636fd668ba66f10b72eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75cc21e2b7153b7561a7636fd668ba66f10b72eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75cc21e2b7153b7561a7636fd668ba66f10b72eb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75cc21e2b7153b7561a7636fd668ba66f10b72eb/comments", "author": null, "committer": null, "parents": [{"sha": "f4b83d665915650fb5711732f3edab926425d957", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4b83d665915650fb5711732f3edab926425d957", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4b83d665915650fb5711732f3edab926425d957"}], "stats": {"total": 18, "additions": 18, "deletions": 0}, "files": [{"sha": "13fac243bb4033dabec3ef9fa62b3a35decc6e02", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75cc21e2b7153b7561a7636fd668ba66f10b72eb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75cc21e2b7153b7561a7636fd668ba66f10b72eb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=75cc21e2b7153b7561a7636fd668ba66f10b72eb", "patch": "@@ -1,3 +1,9 @@\n+2014-02-07  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>\n+\n+\t* config/s390/s390.md (\"atomic_load<mode>\", \"atomic_store<mode>\")\n+\t(\"atomic_compare_and_swap<mode>\", \"atomic_fetch_<atomic><mode>\"):\n+\tReject misaligned operands.\n+\n 2014-02-07  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>\n \n \t* optabs.c (expand_atomic_compare_and_swap): Allow expander to"}, {"sha": "3f863048ef95c214730c2045335c34dafbe7b355", "filename": "gcc/config/s390/s390.md", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75cc21e2b7153b7561a7636fd668ba66f10b72eb/gcc%2Fconfig%2Fs390%2Fs390.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75cc21e2b7153b7561a7636fd668ba66f10b72eb/gcc%2Fconfig%2Fs390%2Fs390.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.md?ref=75cc21e2b7153b7561a7636fd668ba66f10b72eb", "patch": "@@ -9108,6 +9108,9 @@\n    (match_operand:SI 2 \"const_int_operand\")]\t;; model\n   \"\"\n {\n+  if (MEM_ALIGN (operands[1]) < GET_MODE_BITSIZE (GET_MODE (operands[1])))\n+    FAIL;\n+\n   if (<MODE>mode == TImode)\n     emit_insn (gen_atomic_loadti_1 (operands[0], operands[1]));\n   else if (<MODE>mode == DImode && !TARGET_ZARCH)\n@@ -9149,6 +9152,9 @@\n {\n   enum memmodel model = (enum memmodel) INTVAL (operands[2]);\n \n+  if (MEM_ALIGN (operands[0]) < GET_MODE_BITSIZE (GET_MODE (operands[0])))\n+    FAIL;\n+\n   if (<MODE>mode == TImode)\n     emit_insn (gen_atomic_storeti_1 (operands[0], operands[1]));\n   else if (<MODE>mode == DImode && !TARGET_ZARCH)\n@@ -9203,6 +9209,9 @@\n   if (!register_operand (output, <MODE>mode))\n     output = gen_reg_rtx (<MODE>mode);\n \n+  if (MEM_ALIGN (operands[2]) < GET_MODE_BITSIZE (GET_MODE (operands[2])))\n+    FAIL;\n+\n   emit_insn (gen_atomic_compare_and_swap<mode>_internal\n \t     (output, operands[2], operands[3], operands[4]));\n \n@@ -9319,6 +9328,9 @@\n    (match_operand:SI 3 \"const_int_operand\")]\t\t;; model\n   \"TARGET_Z196\"\n {\n+  if (MEM_ALIGN (operands[1]) < GET_MODE_BITSIZE (GET_MODE (operands[1])))\n+    FAIL;\n+\n   emit_insn (gen_atomic_fetch_<atomic><mode>_iaf\n \t     (operands[0], operands[1], operands[2]));\n   DONE;"}]}