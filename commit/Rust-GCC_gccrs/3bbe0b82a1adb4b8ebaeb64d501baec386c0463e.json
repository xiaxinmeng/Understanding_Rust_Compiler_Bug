{"sha": "3bbe0b82a1adb4b8ebaeb64d501baec386c0463e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2JiZTBiODJhMWFkYjRiOGViYWViNjRkNTAxYmFlYzM4NmMwNDYzZQ==", "commit": {"author": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2016-10-26T16:33:22Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2016-10-26T16:33:22Z"}, "message": "arc.c (acr_print_operand): Adjust fallthru comment.\n\n\t* config/arc/arc.c (acr_print_operand): Adjust fallthru comment.\n\t(check_if_valid_sleep_operand): Add missing fallthru comment.\n\t(arc_register_move_cost): Increase buffer size.\n\t* config/arc/arc.md (cbranch4si_scratch): Add missing fallthru\n\tcomment.\n\t* config/arc/predicates.md (move_str_operand): Avoid fallthru.\n\nFrom-SVN: r241585", "tree": {"sha": "c995fa8c254b37b9004b66766b0e3fb5449b498b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c995fa8c254b37b9004b66766b0e3fb5449b498b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3bbe0b82a1adb4b8ebaeb64d501baec386c0463e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3bbe0b82a1adb4b8ebaeb64d501baec386c0463e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3bbe0b82a1adb4b8ebaeb64d501baec386c0463e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3bbe0b82a1adb4b8ebaeb64d501baec386c0463e/comments", "author": null, "committer": null, "parents": [{"sha": "f2b2b01c5ddf2ee6d90b12823cf25dfa67b8ac30", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2b2b01c5ddf2ee6d90b12823cf25dfa67b8ac30", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2b2b01c5ddf2ee6d90b12823cf25dfa67b8ac30"}], "stats": {"total": 15, "additions": 13, "deletions": 2}, "files": [{"sha": "1aa397ec7b787ad1492bf511b8d5353fcb3911e8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bbe0b82a1adb4b8ebaeb64d501baec386c0463e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bbe0b82a1adb4b8ebaeb64d501baec386c0463e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3bbe0b82a1adb4b8ebaeb64d501baec386c0463e", "patch": "@@ -1,5 +1,12 @@\n 2016-10-26  Jeff Law  <law@redhat.com>\n \n+\t* config/arc/arc.c (acr_print_operand): Adjust fallthru comment.\n+\t(check_if_valid_sleep_operand): Add missing fallthru comment.\n+\t(arc_register_move_cost): Increase buffer size.\n+\t* config/arc/arc.md (cbranch4si_scratch): Add missing fallthru\n+\tcomment.\n+\t* config/arc/predicates.md (move_str_operand): Avoid fallthru.\n+\n \t* config/cr16/cr16.c (cr16_print_operand): Add missing fallthru\n \tcomment.  Add gcc_unreachable for path that should never happen.\n "}, {"sha": "0e7b63dc6f7bd5adf0f62b737f3654e7b32a7802", "filename": "gcc/config/arc/arc.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bbe0b82a1adb4b8ebaeb64d501baec386c0463e/gcc%2Fconfig%2Farc%2Farc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bbe0b82a1adb4b8ebaeb64d501baec386c0463e/gcc%2Fconfig%2Farc%2Farc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc.c?ref=3bbe0b82a1adb4b8ebaeb64d501baec386c0463e", "patch": "@@ -3459,7 +3459,8 @@ arc_print_operand (FILE *file, rtx x, int code)\n \t  fprintf (file, \"0x%08lx\", l);\n \t  break;\n \t}\n-      /* Fall through.  Let output_addr_const deal with it.  */\n+      /* FALLTHRU */\n+      /* Let output_addr_const deal with it.  */\n     default :\n       if (flag_pic\n \t  || (GET_CODE (x) == CONST\n@@ -6197,6 +6198,7 @@ check_if_valid_sleep_operand (rtx *operands, int opno)\n     case CONST_INT :\n \tif( UNSIGNED_INT6 (INTVAL (operands[opno])))\n \t    return true;\n+    /* FALLTHRU */\n     default:\n \tfatal_error (input_location,\n \t\t     \"operand for sleep instruction must be an unsigned 6 bit compile-time constant\");\n@@ -7284,7 +7286,7 @@ arc_register_move_cost (machine_mode,\n int\n arc_output_addsi (rtx *operands, bool cond_p, bool output_p)\n {\n-  char format[32];\n+  char format[35];\n \n   int match = operands_match_p (operands[0], operands[1]);\n   int match2 = operands_match_p (operands[0], operands[2]);"}, {"sha": "e127d5b03520c6fa6b27f6124c8fbb37b8198112", "filename": "gcc/config/arc/arc.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bbe0b82a1adb4b8ebaeb64d501baec386c0463e/gcc%2Fconfig%2Farc%2Farc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bbe0b82a1adb4b8ebaeb64d501baec386c0463e/gcc%2Fconfig%2Farc%2Farc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc.md?ref=3bbe0b82a1adb4b8ebaeb64d501baec386c0463e", "patch": "@@ -4891,6 +4891,7 @@\n        case 4: return \\\"br%d0%* %1, %B2, %^%l3\\\";\n        case 8: if (!brcc_nolimm_operator (operands[0], VOIDmode))\n \t\t return \\\"br%d0%* %1, %B2, %^%l3\\\";\n+       /* FALLTHRU */\n        case 6: case 10:\n        case 12:return \\\"cmp%? %1, %B2\\\\n\\\\tb%d0%* %^%l3%&;br%d0 out of range\\\";\n        default: fprintf (stderr, \\\"unexpected length %d\\\\n\\\", get_attr_length (insn)); fflush (stderr); gcc_unreachable ();"}, {"sha": "cb75dbce69b056dd6f51c5454e0e010d4ce6751c", "filename": "gcc/config/arc/predicates.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bbe0b82a1adb4b8ebaeb64d501baec386c0463e/gcc%2Fconfig%2Farc%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bbe0b82a1adb4b8ebaeb64d501baec386c0463e/gcc%2Fconfig%2Farc%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Fpredicates.md?ref=3bbe0b82a1adb4b8ebaeb64d501baec386c0463e", "patch": "@@ -266,6 +266,7 @@\n     case SYMBOL_REF :\n       if (SYMBOL_REF_TLS_MODEL (op))\n \treturn 0;\n+      return 1;\n     case LABEL_REF :\n       return 1;\n     case CONST :"}]}