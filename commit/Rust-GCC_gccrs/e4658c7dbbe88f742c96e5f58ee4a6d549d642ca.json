{"sha": "e4658c7dbbe88f742c96e5f58ee4a6d549d642ca", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTQ2NThjN2RiYmU4OGY3NDJjOTZlNWY1OGVlNGE2ZDU0OWQ2NDJjYQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-04-16T05:19:57Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-04-16T05:19:57Z"}, "message": "c++: Fix pasto in structured binding diagnostics [PR94571]\n\nThis snippet has been copied from the non-structured binding declaration\nparsing later in the function, and while for non-structured bindings\nit can be followed by comma or semicolon, structured bindings may be\nonly followed by semicolon.\n\nOr, do we want to have a different message for the case when there is\na comma (and keep this corrected one only if there is something else)\nthat would explain better what is the bug (or add a fix-it hint)?\nMarek said in the PR that clang++ reports\nerror: decomposition declaration must be the only declaration in its group\n\nThere is another thing Marek noted (though, something for different spot),\nthat diagnostic for auto x(1), [e,f] = test2; could also use a clearer\nwording like the above (or a fix-it hint), but the question is if we should\nassume [ after , as a structured binding or if we should do some tentative\nparsing first to figure out if it looks like a structured binding.\n\n2020-04-16  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR c++/94571\n\t* parser.c (cp_parser_simple_declaration): Fix up a pasto in\n\tdiagnostics.\n\n\t* g++.dg/cpp1z/decomp51.C: New test.", "tree": {"sha": "870ec5cb5b974a659b7883214d0b675482394b33", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/870ec5cb5b974a659b7883214d0b675482394b33"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e4658c7dbbe88f742c96e5f58ee4a6d549d642ca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4658c7dbbe88f742c96e5f58ee4a6d549d642ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e4658c7dbbe88f742c96e5f58ee4a6d549d642ca", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4658c7dbbe88f742c96e5f58ee4a6d549d642ca/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b8a1750a9c5c47e278d132a34a5c2e9dbb040f80", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8a1750a9c5c47e278d132a34a5c2e9dbb040f80", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8a1750a9c5c47e278d132a34a5c2e9dbb040f80"}], "stats": {"total": 87, "additions": 57, "deletions": 30}, "files": [{"sha": "3e324056ba75718f208e88cad5b7778409f60cf5", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4658c7dbbe88f742c96e5f58ee4a6d549d642ca/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4658c7dbbe88f742c96e5f58ee4a6d549d642ca/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=e4658c7dbbe88f742c96e5f58ee4a6d549d642ca", "patch": "@@ -1,3 +1,9 @@\n+2020-04-16  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/94571\n+\t* parser.c (cp_parser_simple_declaration): Fix up a pasto in\n+\tdiagnostics.\n+\n 2020-04-15  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c/94593\n@@ -97,7 +103,7 @@\n \tLOOKUP_AGGREGATE_PAREN_INIT but don't build up a constructor yet.\n \n 2020-04-08  Iain Sandoe  <iain@sandoe.co.uk>\n-\t    Jun Ma <JunMa@linux.alibaba.com>\n+\t    Jun Ma  <JunMa@linux.alibaba.com>\n \n \t* coroutines.cc (maybe_promote_captured_temps): Add a cleanup\n \texpression, if needed, to any call from which we promoted\n@@ -762,7 +768,7 @@\n \t* coroutines.cc (captures_temporary): Strip component_ref\n \tto its base object.\n \n-2020-03-03  Jun Ma <JunMa@linux.alibaba.com>\n+2020-03-03  Jun Ma  <JunMa@linux.alibaba.com>\n \n \t* coroutines.cc (finish_co_await_expr): Build co_await_expr\n \twith unknown_type_node.\n@@ -991,7 +997,7 @@\n \t* tree.c (cp_walk_subtrees): Walk CONSTRUCTOR types here.\n \t* pt.c (find_parameter_packs_r): Not here.\n \n-2020-02-12 Iain Sandoe <iain@sandoe.co.uk>\n+2020-02-12 Iain Sandoe  <iain@sandoe.co.uk>\n \n \t* coroutines.cc (build_actor_fn): Implement deallocation function\n \tselection per n4849, dcl.fct.def.coroutine bullet 12.\n@@ -1146,7 +1152,7 @@\n \t* coroutines.cc (maybe_promote_captured_temps): Increase the index\n \tnumber for temporary variables' name.\n \n-2020-02-05  Jun Ma <JunMa@linux.alibaba.com>\n+2020-02-05  Jun Ma  <JunMa@linux.alibaba.com>\n \n \t* coroutines.cc (build_co_await): Call convert_from_reference\n \tto wrap co_await_expr with indirect_ref which avoid\n@@ -1221,7 +1227,7 @@\n \t* cp-gimplify.c (predeclare_vla): New.\n \t(cp_genericize_r) [NOP_EXPR]: Call it.\n \n-2020-02-03  Jun Ma <JunMa@linux.alibaba.com>\n+2020-02-03  Jun Ma  <JunMa@linux.alibaba.com>\n \n \t* coroutines.cc (transform_await_wrapper): Set actor funcion as\n \tnew context of label_decl."}, {"sha": "7be4a8f5cbd35e31eb5cf122beb1b8eb064f4aa2", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4658c7dbbe88f742c96e5f58ee4a6d549d642ca/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4658c7dbbe88f742c96e5f58ee4a6d549d642ca/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=e4658c7dbbe88f742c96e5f58ee4a6d549d642ca", "patch": "@@ -13675,7 +13675,7 @@ cp_parser_simple_declaration (cp_parser* parser,\n \t    if ((decl != error_mark_node\n \t\t && DECL_INITIAL (decl) != error_mark_node)\n \t\t|| cp_parser_uncommitted_to_tentative_parse_p (parser))\n-\t      cp_parser_error (parser, \"expected %<,%> or %<;%>\");\n+\t      cp_parser_error (parser, \"expected %<;%>\");\n \t    /* Skip tokens until we reach the end of the statement.  */\n \t    cp_parser_skip_to_end_of_statement (parser);\n \t    /* If the next token is now a `;', consume it.  */"}, {"sha": "545a7f66a3e091f5a91bc0de2163c5c202dfe900", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 29, "deletions": 24, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4658c7dbbe88f742c96e5f58ee4a6d549d642ca/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4658c7dbbe88f742c96e5f58ee4a6d549d642ca/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e4658c7dbbe88f742c96e5f58ee4a6d549d642ca", "patch": "@@ -1,10 +1,15 @@\n+2020-04-16  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/94571\n+\t* g++.dg/cpp1z/decomp51.C: New test.\n+\n 2020-04-15  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n \n \tPR target/94603\n \t* gcc.target/i386/pr94603.c: New test.\n \n-2020-04-15  Andre Vieira <andre.simoesdiasvieira@arm.com>\n-            Srinath Parvathaneni <srinath.parvathaneni@arm.com>\n+2020-04-15  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n+            Srinath Parvathaneni  <srinath.parvathaneni@arm.com>\n \n \t* gcc.target/arm/mve/intrinsics/mve_vec_duplicate.c: New test.\n \n@@ -112,7 +117,7 @@\n \tPR fortran/87644\n \t* gfortran.dg/variable_parameter.f90: New test.\n \n-2020-04-13  Linus Koenig <link@sig-st.de>\n+2020-04-13  Linus Koenig  <link@sig-st.de>\n \n \tPR fortran/94192\n \t* gfortran.dg/bound_resolve_after_error_1.f90: New test.\n@@ -404,7 +409,7 @@\n \tPR c++/94507 - ICE-on-invalid with lambda template.\n \t* g++.dg/cpp2a/lambda-generic7.C: New test.\n \n-2020-04-08  Alexandre Oliva <oliva@adacore.com>\n+2020-04-08  Alexandre Oliva  <oliva@adacore.com>\n \n \t* gcc.target/arm/fp16-aapcs-3.c: Explicitly use the\n \t-mfp16-format=alternative option.\n@@ -429,7 +434,7 @@\n \t* gfortran.dg/ieee/dec_math_1.f90: ... here; change\n \tdg-options to dg-additional-options.\n \n-2020-04-08  Alexandre Oliva <oliva@adacore.com>\n+2020-04-08  Alexandre Oliva  <oliva@adacore.com>\n \n \t* gcc.dg/tls/pr78796.c: Require tls_runtime.\n \n@@ -472,7 +477,7 @@\n \tPR c++/94478 - ICE with defaulted comparison operator\n \t* g++.dg/cpp2a/spaceship-err4.C: New test.\n \n-2020-04-08  Alexandre Oliva <oliva@adacore.com>\n+2020-04-08  Alexandre Oliva  <oliva@adacore.com>\n \n \t* gcc.target/arm/polytypes.c: Add quotes around\n \t-flax-vector-conversions.\n@@ -1037,7 +1042,7 @@\n \tPR c++/94336 - template keyword accepted before destructor names.\n \t* g++.dg/template/template-keyword2.C: New test.\n \n-2020-03-27 Iain Sandoe <iain@sandoe.co.uk>\n+2020-03-27 Iain Sandoe  <iain@sandoe.co.uk>\n \n \t* g++.dg/coroutines/torture/symmetric-transfer-00-basic.C:\n \tAdd <cstdio>.\n@@ -7095,11 +7100,11 @@\n \t* gcc.c-torture/compile/pr93927-1.c: New test.\n \t* gcc.c-torture/compile/pr93927-2.c: New test.\n \n-2020-03-03  Jun Ma <JunMa@linux.alibaba.com>\n+2020-03-03  Jun Ma  <JunMa@linux.alibaba.com>\n \n \t* g++.dg/coroutines/torture/co-await-15-capture-comp-ref.C: New test.\n \n-2020-03-03  Jun Ma <JunMa@linux.alibaba.com>\n+2020-03-03  Jun Ma  <JunMa@linux.alibaba.com>\n \n \t* g++.dg/coroutines/torture/co-await-14-template-traits.C: New test.\n \n@@ -7115,7 +7120,7 @@\n \t* g++.dg/analyzer/cstdlib.C: New test.\n \n 2020-03-02  Iain Sandoe  <iain@sandoe.co.uk>\n-\t    Jun Ma <JunMa@linux.alibaba.com>\n+\t    Jun Ma  <JunMa@linux.alibaba.com>\n \n \t* g++.dg/coroutines/torture/class-05-lambda-capture-copy-local.C:\n \t* g++.dg/coroutines/torture/lambda-09-init-captures.C: New test.\n@@ -7183,7 +7188,7 @@\n \t* gcc.target/powerpc/pr88233.c: Update expected output and\n \tadd target selector.\n \n-2020-03-01 Iain Sandoe <iain@sandoe.co.uk>\n+2020-03-01  Iain Sandoe  <iain@sandoe.co.uk>\n \n \t* g++.dg/coroutines/torture/class-07-data-member.C: New test.\n \n@@ -7197,7 +7202,7 @@\n \tPR fortran/92959\n \t* gfortran.dg/associated_8.f90 : New test.\n \n-2020-02-29 Iain Sandoe <iain@sandoe.co.uk>\n+2020-02-29  Iain Sandoe  <iain@sandoe.co.uk>\n \n \t* g++.dg/coroutines/coro1-ret-int-yield-int.h: Add templated\n \tawaitable.\n@@ -7297,7 +7302,7 @@\n \t* gcc.target/powerpc/ppc64-abi-1.c: Compile with -mno-pcrel.\n \t* gcc.target/powerpc/ppc64-abi-2.c: Likewise.\n \n-2020-02-27  Alexandre Oliva <oliva@adacore.com>\n+2020-02-27  Alexandre Oliva  <oliva@adacore.com>\n \n \t* gcc.target/aarch64/vect-mull.x (SH): Undefine.\n \n@@ -7656,11 +7661,11 @@\n \tPR c++/93817\n \t* g++.dg/diagnostic/array-init1.C: Fix for ILP32.\n \n-2020-02-18  Jon Beniston <jon@beniston.com>\n+2020-02-18  Jon Beniston  <jon@beniston.com>\n \n \t* gcc.dg/strcmpopt_6.c: Add space in array for terminator.\n \n-2020-02-18  Mark Eggleston <markeggleston@gcc.gnu.org>\n+2020-02-18  Mark Eggleston  <markeggleston@gcc.gnu.org>\n \n \tPR fortran/93714\n \t* gfortran.dg/char_pointer_assign_6.f90: Look for no target\n@@ -7706,7 +7711,7 @@\n \tPR fortran/93603\n \t* gfortran.dg/pr93603.f90 : New test.\n \n-2020-02-20  Mark Eggleston <markeggleston@gcc.gnu.org>\n+2020-02-20  Mark Eggleston  <markeggleston@gcc.gnu.org>\n \n \tPR fortran/93580\n \t* gfortran.dg/dg/pr93580.f90: New test.\n@@ -8097,7 +8102,7 @@\n \tPR target/91927\n \t* gcc.target/aarch64/pr91927.c: New testcase.\n \n-2020-02-08  Peter Bergner <bergner@linux.ibm.com>\n+2020-02-08  Peter Bergner  <bergner@linux.ibm.com>\n \n \tPR target/93136\n \t* gcc.dg/vmx/ops.c: Add -flax-vector-conversions to dg-options.\n@@ -9199,7 +9204,7 @@\n \tPR ipa/93166\n \t* g++.dg/pr93166.C: New test.\n \n-2020-01-25  Andrew Pinski <apinski@marvell.com>\n+2020-01-25  Andrew Pinski  <apinski@marvell.com>\n \n \t* gcc.target/aarch64/vec_zeroextend.c: Fix for big-endian.\n \n@@ -10191,12 +10196,12 @@\n \tPR c++/92542\n \t* g++.dg/pr92542.C: New.\n \n-2020-01-17  Mihail-Calin Ionescu <mihail.ionescu@arm.com>\n+2020-01-17  Mihail-Calin Ionescu  <mihail.ionescu@arm.com>\n \t    Sudakshina Das  <sudi.das@arm.com>\n \n \t* gcc.target/arm/armv8_1m-shift-imm_1.c: New test.\n \n-2020-01-17  Mihail-Calin Ionescu <mihail.ionescu@arm.com>\n+2020-01-17  Mihail-Calin Ionescu  <mihail.ionescu@arm.com>\n \t    Sudakshina Das  <sudi.das@arm.com>\n \n \t* gcc.target/arm/armv8_1m-shift-reg_1.c: New test.\n@@ -10288,8 +10293,8 @@\n \n \t* testsuite/gcc.target/arm/multilib.exp: Add v8.1-M entries.\n \n-2020-01-16  Mihail-Calin Ionescu <mihail.ionescu@arm.com>\n-\t    Thomas Preud'homme <thomas.preudhomme@arm.com>\n+2020-01-16  Mihail-Calin Ionescu  <mihail.ionescu@arm.com>\n+\t    Thomas Preud'homme  <thomas.preudhomme@arm.com>\n \n \t* gcc.target/arm/cmse/cmse-1.c: Add check for BLXNS when instructions\n \tintroduced in Armv8.1-M Mainline Security Extensions are available and\n@@ -10555,8 +10560,8 @@\n \t* lib/target-supports.exp (check_effective_target_arm_cmse_clear_ok):\n \tNew procedure.\n \n-2020-01-16  Mihail-Calin Ionescu <mihail.ionescu@arm.com>\n-\t    Thomas Preud'homme <thomas.preudhomme@arm.com>\n+2020-01-16  Mihail-Calin Ionescu  <mihail.ionescu@arm.com>\n+\t    Thomas Preud'homme  <thomas.preudhomme@arm.com>\n \n \t* lib/target-supports.exp\n \t(check_effective_target_arm_arch_v8_1m_main_ok): Define."}, {"sha": "fe8b998abc8930b5e236a83f40d74859a79a4d3f", "filename": "gcc/testsuite/g++.dg/cpp1z/decomp51.C", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4658c7dbbe88f742c96e5f58ee4a6d549d642ca/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp51.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4658c7dbbe88f742c96e5f58ee4a6d549d642ca/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp51.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp51.C?ref=e4658c7dbbe88f742c96e5f58ee4a6d549d642ca", "patch": "@@ -0,0 +1,16 @@\n+// PR c++/94571\n+// { dg-do compile { target c++17 } }\n+\n+void\n+foo ()\n+{\n+  int e[2], f[2];\n+  auto [a,b] = e, [c,d] = f;\t// { dg-error \"expected ';' before ',' token\" }\n+}\n+\n+void\n+bar ()\n+{\n+  int e[2];\n+  auto [a, b] = e );\t\t// { dg-error \"expected ';' before '\\\\\\)' token\" }\n+}"}]}