{"sha": "8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "node_id": "C_kwDOANBUbNoAKDhkNGYwMDczOThiYzNmOGZlYTgxMmZiOGNmZjRkN2QwNTU2ZDEyZjE", "commit": {"author": {"name": "Andrea Corallo", "email": "andrea.corallo@arm.com", "date": "2022-12-01T14:42:52Z"}, "committer": {"name": "Andrea Corallo", "email": "andrea.corallo@arm.com", "date": "2022-12-08T09:37:42Z"}, "message": "arm: fix mve intrinsics scan body tests for C++\n\nHi all,\n\nthis patch is to export the functions defined in these MVE tests as C\nso the body scan assembler works as expected also for our C++ tests.\n\nBest Regards and sorry for the regression!\n\n  Andrea\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/arm/mve/intrinsics/vabavq_p_s16.c: Extern functions\n\tas \"C\".\n\t* gcc.target/arm/mve/intrinsics/vabavq_p_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vabavq_p_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vabavq_p_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vabavq_p_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vabavq_p_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vabavq_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vabavq_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vabavq_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vabavq_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vabavq_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vabavq_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vabdq_f16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vabdq_f32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vabdq_m_f16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vabdq_m_f32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vabdq_m_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vabdq_m_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vabdq_m_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vabdq_m_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vabdq_m_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vabdq_m_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vabdq_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vabdq_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vabdq_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vabdq_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vabdq_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vabdq_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vabdq_x_f16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vabdq_x_f32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vabdq_x_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vabdq_x_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vabdq_x_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vabdq_x_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vabdq_x_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vabdq_x_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vabsq_f16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vabsq_f32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vabsq_m_f16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vabsq_m_f32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vabsq_m_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vabsq_m_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vabsq_m_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vabsq_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vabsq_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vabsq_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vabsq_x_f16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vabsq_x_f32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vabsq_x_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vabsq_x_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vabsq_x_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vaddlvaq_p_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vaddlvaq_p_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vaddlvaq_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vaddlvaq_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vaddlvq_p_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vaddlvq_p_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vaddlvq_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vaddlvq_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vaddq_f16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vaddq_f32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vaddq_m_f16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vaddq_m_f32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vaddq_m_n_f16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vaddq_m_n_f32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vaddq_m_n_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vaddq_m_n_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vaddq_m_n_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vaddq_m_n_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vaddq_m_n_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vaddq_m_n_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vaddq_m_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vaddq_m_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vaddq_m_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vaddq_m_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vaddq_m_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vaddq_m_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vaddq_n_f16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vaddq_n_f32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vaddq_n_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vaddq_n_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vaddq_n_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vaddq_n_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vaddq_n_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vaddq_n_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vaddq_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vaddq_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vaddq_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vaddq_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vaddq_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vaddq_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vaddq_x_f16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vaddq_x_f32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vaddq_x_n_f16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vaddq_x_n_f32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vaddq_x_n_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vaddq_x_n_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vaddq_x_n_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vaddq_x_n_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vaddq_x_n_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vaddq_x_n_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vaddq_x_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vaddq_x_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vaddq_x_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vaddq_x_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vaddq_x_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vaddq_x_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vaddvaq_p_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vaddvaq_p_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vaddvaq_p_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vaddvaq_p_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vaddvaq_p_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vaddvaq_p_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vaddvaq_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vaddvaq_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vaddvaq_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vaddvaq_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vaddvaq_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vaddvaq_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vaddvq_p_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vaddvq_p_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vaddvq_p_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vaddvq_p_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vaddvq_p_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vaddvq_p_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vaddvq_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vaddvq_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vaddvq_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vaddvq_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vaddvq_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vaddvq_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpcsq_m_n_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpcsq_m_n_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpcsq_m_n_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpcsq_m_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpcsq_m_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpcsq_m_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpcsq_n_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpcsq_n_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpcsq_n_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpcsq_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpcsq_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpcsq_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpeqq_f16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpeqq_f32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpeqq_m_f16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpeqq_m_f32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpeqq_m_n_f16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpeqq_m_n_f32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpeqq_m_n_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpeqq_m_n_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpeqq_m_n_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpeqq_m_n_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpeqq_m_n_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpeqq_m_n_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpeqq_m_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpeqq_m_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpeqq_m_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpeqq_m_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpeqq_m_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpeqq_m_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpeqq_n_f16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpeqq_n_f32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpeqq_n_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpeqq_n_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpeqq_n_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpeqq_n_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpeqq_n_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpeqq_n_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpeqq_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpeqq_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpeqq_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpeqq_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpeqq_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpeqq_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpgeq_f16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpgeq_f32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpgeq_m_f16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpgeq_m_f32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpgeq_m_n_f16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpgeq_m_n_f32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpgeq_m_n_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpgeq_m_n_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpgeq_m_n_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpgeq_m_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpgeq_m_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpgeq_m_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpgeq_n_f16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpgeq_n_f32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpgeq_n_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpgeq_n_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpgeq_n_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpgeq_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpgeq_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpgeq_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpgtq_f16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpgtq_f32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpgtq_m_f16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpgtq_m_f32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpgtq_m_n_f16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpgtq_m_n_f32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpgtq_m_n_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpgtq_m_n_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpgtq_m_n_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpgtq_m_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpgtq_m_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpgtq_m_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpgtq_n_f16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpgtq_n_f32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpgtq_n_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpgtq_n_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpgtq_n_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpgtq_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpgtq_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpgtq_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmphiq_m_n_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmphiq_m_n_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmphiq_m_n_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmphiq_m_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmphiq_m_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmphiq_m_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmphiq_n_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmphiq_n_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmphiq_n_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmphiq_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmphiq_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmphiq_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpleq_f16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpleq_f32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpleq_m_f16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpleq_m_f32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpleq_m_n_f16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpleq_m_n_f32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpleq_m_n_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpleq_m_n_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpleq_m_n_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpleq_m_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpleq_m_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpleq_m_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpleq_n_f16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpleq_n_f32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpleq_n_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpleq_n_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpleq_n_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpleq_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpleq_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpleq_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpltq_f16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpltq_f32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpltq_m_f16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpltq_m_f32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpltq_m_n_f16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpltq_m_n_f32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpltq_m_n_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpltq_m_n_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpltq_m_n_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpltq_m_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpltq_m_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpltq_m_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpltq_n_f16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpltq_n_f32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpltq_n_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpltq_n_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpltq_n_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpltq_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpltq_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpltq_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpneq_f16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpneq_f32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpneq_m_f16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpneq_m_f32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpneq_m_n_f16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpneq_m_n_f32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpneq_m_n_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpneq_m_n_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpneq_m_n_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpneq_m_n_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpneq_m_n_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpneq_m_n_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpneq_m_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpneq_m_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpneq_m_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpneq_m_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpneq_m_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpneq_m_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpneq_n_f16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpneq_n_f32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpneq_n_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpneq_n_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpneq_n_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpneq_n_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpneq_n_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpneq_n_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpneq_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpneq_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpneq_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpneq_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpneq_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcmpneq_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcreateq_f16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcreateq_f32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcreateq_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcreateq_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcreateq_s64.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcreateq_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcreateq_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcreateq_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcreateq_u64.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vcreateq_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vddupq_m_n_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vddupq_m_n_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vddupq_m_n_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vddupq_m_wb_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vddupq_m_wb_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vddupq_m_wb_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vddupq_n_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vddupq_n_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vddupq_n_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vddupq_wb_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vddupq_wb_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vddupq_wb_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vddupq_x_n_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vddupq_x_n_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vddupq_x_n_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vddupq_x_wb_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vddupq_x_wb_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vddupq_x_wb_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vdupq_m_n_f16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vdupq_m_n_f32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vdupq_m_n_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vdupq_m_n_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vdupq_m_n_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vdupq_m_n_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vdupq_m_n_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vdupq_m_n_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vdupq_n_f16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vdupq_n_f32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vdupq_n_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vdupq_n_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vdupq_n_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vdupq_n_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vdupq_n_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vdupq_n_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vdupq_x_n_f16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vdupq_x_n_f32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vdupq_x_n_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vdupq_x_n_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vdupq_x_n_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vdupq_x_n_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vdupq_x_n_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vdupq_x_n_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vdwdupq_m_n_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vdwdupq_m_n_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vdwdupq_m_n_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vdwdupq_m_wb_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vdwdupq_m_wb_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vdwdupq_m_wb_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vdwdupq_n_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vdwdupq_n_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vdwdupq_n_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vdwdupq_wb_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vdwdupq_wb_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vdwdupq_wb_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vdwdupq_x_n_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vdwdupq_x_n_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vdwdupq_x_n_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vdwdupq_x_wb_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vdwdupq_x_wb_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vdwdupq_x_wb_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vfmasq_m_n_f16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vfmasq_m_n_f32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vhaddq_m_n_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vhaddq_m_n_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vhaddq_m_n_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vhaddq_m_n_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vhaddq_m_n_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vhaddq_m_n_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vhaddq_m_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vhaddq_m_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vhaddq_m_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vhaddq_m_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vhaddq_m_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vhaddq_m_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vhsubq_m_n_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vhsubq_m_n_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vhsubq_m_n_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vhsubq_m_n_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vhsubq_m_n_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vhsubq_m_n_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vhsubq_m_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vhsubq_m_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vhsubq_m_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vhsubq_m_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vhsubq_m_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vhsubq_m_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vidupq_m_n_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vidupq_m_n_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vidupq_m_n_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vidupq_m_wb_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vidupq_m_wb_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vidupq_m_wb_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vidupq_n_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vidupq_n_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vidupq_n_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vidupq_wb_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vidupq_wb_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vidupq_wb_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vidupq_x_n_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vidupq_x_n_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vidupq_x_n_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vidupq_x_wb_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vidupq_x_wb_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vidupq_x_wb_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/viwdupq_m_n_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/viwdupq_m_n_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/viwdupq_m_n_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/viwdupq_m_wb_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/viwdupq_m_wb_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/viwdupq_m_wb_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/viwdupq_n_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/viwdupq_n_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/viwdupq_n_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/viwdupq_wb_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/viwdupq_wb_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/viwdupq_wb_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/viwdupq_x_n_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/viwdupq_x_n_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/viwdupq_x_n_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/viwdupq_x_wb_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/viwdupq_x_wb_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/viwdupq_x_wb_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmaxaq_m_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmaxaq_m_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmaxaq_m_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmaxaq_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmaxaq_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmaxaq_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmaxavq_p_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmaxavq_p_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmaxavq_p_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmaxavq_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmaxavq_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmaxavq_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmaxnmaq_f16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmaxnmaq_f32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmaxnmaq_m_f16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmaxnmaq_m_f32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmaxnmavq_f16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmaxnmavq_f32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmaxnmavq_p_f16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmaxnmavq_p_f32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmaxnmq_f16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmaxnmq_f32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmaxnmq_m_f16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmaxnmq_m_f32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmaxnmq_x_f16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmaxnmq_x_f32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmaxnmvq_f16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmaxnmvq_f32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmaxnmvq_p_f16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmaxnmvq_p_f32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmaxq_m_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmaxq_m_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmaxq_m_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmaxq_m_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmaxq_m_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmaxq_m_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmaxq_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmaxq_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmaxq_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmaxq_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmaxq_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmaxq_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmaxq_x_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmaxq_x_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmaxq_x_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmaxq_x_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmaxq_x_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmaxq_x_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmaxvq_p_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmaxvq_p_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmaxvq_p_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmaxvq_p_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmaxvq_p_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmaxvq_p_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmaxvq_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmaxvq_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmaxvq_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmaxvq_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmaxvq_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmaxvq_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vminaq_m_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vminaq_m_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vminaq_m_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vminaq_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vminaq_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vminaq_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vminavq_p_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vminavq_p_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vminavq_p_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vminavq_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vminavq_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vminavq_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vminnmaq_f16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vminnmaq_f32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vminnmaq_m_f16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vminnmaq_m_f32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vminnmavq_f16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vminnmavq_f32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vminnmavq_p_f16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vminnmavq_p_f32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vminnmq_f16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vminnmq_f32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vminnmq_m_f16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vminnmq_m_f32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vminnmq_x_f16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vminnmq_x_f32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vminnmvq_f16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vminnmvq_f32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vminnmvq_p_f16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vminnmvq_p_f32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vminq_m_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vminq_m_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vminq_m_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vminq_m_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vminq_m_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vminq_m_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vminq_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vminq_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vminq_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vminq_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vminq_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vminq_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vminq_x_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vminq_x_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vminq_x_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vminq_x_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vminq_x_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vminq_x_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vminvq_p_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vminvq_p_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vminvq_p_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vminvq_p_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vminvq_p_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vminvq_p_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vminvq_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vminvq_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vminvq_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vminvq_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vminvq_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vminvq_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmladavaq_p_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmladavaq_p_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmladavaq_p_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmladavaq_p_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmladavaq_p_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmladavaq_p_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmladavaq_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmladavaq_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmladavaq_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmladavaq_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmladavaq_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmladavaq_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmlaldavaxq_p_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmlaldavaxq_p_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmlaldavaxq_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmlaldavaxq_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmlasq_m_n_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmlasq_m_n_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmlasq_m_n_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmlasq_m_n_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmlasq_m_n_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmlasq_m_n_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmlasq_n_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmlasq_n_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmlasq_n_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmlasq_n_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmlasq_n_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmlasq_n_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmulq_f16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmulq_f32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmulq_m_f16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmulq_m_f32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmulq_m_n_f16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmulq_m_n_f32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmulq_m_n_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmulq_m_n_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmulq_m_n_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmulq_m_n_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmulq_m_n_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmulq_m_n_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmulq_m_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmulq_m_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmulq_m_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmulq_m_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmulq_m_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmulq_m_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmulq_n_f16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmulq_n_f32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmulq_n_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmulq_n_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmulq_n_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmulq_n_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmulq_n_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmulq_n_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmulq_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmulq_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmulq_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmulq_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmulq_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmulq_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmulq_x_f16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmulq_x_f32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmulq_x_n_f16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmulq_x_n_f32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmulq_x_n_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmulq_x_n_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmulq_x_n_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmulq_x_n_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmulq_x_n_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmulq_x_n_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmulq_x_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmulq_x_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmulq_x_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmulq_x_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmulq_x_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vmulq_x_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqaddq_m_n_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqaddq_m_n_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqaddq_m_n_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqaddq_m_n_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqaddq_m_n_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqaddq_m_n_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqaddq_m_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqaddq_m_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqaddq_m_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqaddq_m_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqaddq_m_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqaddq_m_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqdmlahq_m_n_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqdmlahq_m_n_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqdmlahq_m_n_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqdmulhq_m_n_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqdmulhq_m_n_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqdmulhq_m_n_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqdmulhq_m_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqdmulhq_m_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqdmulhq_m_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqdmulhq_n_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqdmulhq_n_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqdmulhq_n_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqdmulhq_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqdmulhq_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqdmulhq_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqdmullbq_m_n_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqdmullbq_m_n_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqdmullbq_m_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqdmullbq_m_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqdmullbq_n_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqdmullbq_n_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqdmullbq_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqdmullbq_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqdmulltq_m_n_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqdmulltq_m_n_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqdmulltq_m_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqdmulltq_m_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqdmulltq_n_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqdmulltq_n_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqdmulltq_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqdmulltq_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqrdmlahq_m_n_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqrdmlahq_m_n_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqrdmlahq_m_n_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqrdmlahq_n_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqrdmlahq_n_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqrdmlahq_n_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqrdmlashq_m_n_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqrdmlashq_m_n_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqrdmlashq_m_n_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqsubq_m_n_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqsubq_m_n_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqsubq_m_n_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqsubq_m_n_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqsubq_m_n_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqsubq_m_n_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqsubq_m_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqsubq_m_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqsubq_m_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqsubq_m_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqsubq_m_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqsubq_m_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqsubq_n_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqsubq_n_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqsubq_n_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqsubq_n_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqsubq_n_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqsubq_n_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqsubq_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqsubq_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqsubq_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqsubq_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqsubq_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqsubq_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vrmlaldavhaq_p_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vrmlaldavhaq_p_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vrmlaldavhaq_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vrmlaldavhaq_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vrshlq_m_n_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vrshlq_m_n_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vrshlq_m_n_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vrshlq_m_n_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vrshlq_m_n_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vrshlq_m_n_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vrshlq_m_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vrshlq_m_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vrshlq_m_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vrshlq_m_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vrshlq_m_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vrshlq_m_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vrshlq_n_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vrshlq_n_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vrshlq_n_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vrshlq_n_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vrshlq_n_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vrshlq_n_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vrshlq_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vrshlq_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vrshlq_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vrshlq_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vrshlq_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vrshlq_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vrshlq_x_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vrshlq_x_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vrshlq_x_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vrshlq_x_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vrshlq_x_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vrshlq_x_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vsubq_f16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vsubq_f32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vsubq_m_f16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vsubq_m_f32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vsubq_m_n_f16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vsubq_m_n_f32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vsubq_m_n_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vsubq_m_n_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vsubq_m_n_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vsubq_m_n_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vsubq_m_n_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vsubq_m_n_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vsubq_m_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vsubq_m_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vsubq_m_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vsubq_m_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vsubq_m_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vsubq_m_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vsubq_n_f16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vsubq_n_f32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vsubq_n_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vsubq_n_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vsubq_n_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vsubq_n_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vsubq_n_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vsubq_n_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vsubq_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vsubq_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vsubq_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vsubq_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vsubq_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vsubq_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vsubq_x_f16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vsubq_x_f32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vsubq_x_n_f16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vsubq_x_n_f32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vsubq_x_n_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vsubq_x_n_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vsubq_x_n_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vsubq_x_n_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vsubq_x_n_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vsubq_x_n_u8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vsubq_x_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vsubq_x_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vsubq_x_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vsubq_x_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vsubq_x_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vsubq_x_u8.c: Likewise.", "tree": {"sha": "0c3e5113144926ccc523ceec621d56374138235a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0c3e5113144926ccc523ceec621d56374138235a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/comments", "author": {"login": "AndreaCorallo", "id": 6765576, "node_id": "MDQ6VXNlcjY3NjU1NzY=", "avatar_url": "https://avatars.githubusercontent.com/u/6765576?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndreaCorallo", "html_url": "https://github.com/AndreaCorallo", "followers_url": "https://api.github.com/users/AndreaCorallo/followers", "following_url": "https://api.github.com/users/AndreaCorallo/following{/other_user}", "gists_url": "https://api.github.com/users/AndreaCorallo/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndreaCorallo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndreaCorallo/subscriptions", "organizations_url": "https://api.github.com/users/AndreaCorallo/orgs", "repos_url": "https://api.github.com/users/AndreaCorallo/repos", "events_url": "https://api.github.com/users/AndreaCorallo/events{/privacy}", "received_events_url": "https://api.github.com/users/AndreaCorallo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "AndreaCorallo", "id": 6765576, "node_id": "MDQ6VXNlcjY3NjU1NzY=", "avatar_url": "https://avatars.githubusercontent.com/u/6765576?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndreaCorallo", "html_url": "https://github.com/AndreaCorallo", "followers_url": "https://api.github.com/users/AndreaCorallo/followers", "following_url": "https://api.github.com/users/AndreaCorallo/following{/other_user}", "gists_url": "https://api.github.com/users/AndreaCorallo/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndreaCorallo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndreaCorallo/subscriptions", "organizations_url": "https://api.github.com/users/AndreaCorallo/orgs", "repos_url": "https://api.github.com/users/AndreaCorallo/repos", "events_url": "https://api.github.com/users/AndreaCorallo/events{/privacy}", "received_events_url": "https://api.github.com/users/AndreaCorallo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2f187e9893916796992b60b278e743ec865f7418", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f187e9893916796992b60b278e743ec865f7418", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f187e9893916796992b60b278e743ec865f7418"}], "stats": {"total": 6504, "additions": 6464, "deletions": 40}, "files": [{"sha": "3b95fb140f785fe0f180bf2de58ee0c904f220db", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vabavq_p_s16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabavq_p_s16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabavq_p_s16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabavq_p_s16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -54,4 +58,8 @@ foo2 (int16x8_t b, int16x8_t c, mve_pred16_t p)\n   return vabavq_p (1, b, c, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "b9f84e581bd6b027d2467688831760d1481a4dd2", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vabavq_p_s32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabavq_p_s32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabavq_p_s32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabavq_p_s32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -54,4 +58,8 @@ foo2 (int32x4_t b, int32x4_t c, mve_pred16_t p)\n   return vabavq_p (1, b, c, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "fa76cd20e1be23672743606b2228fdf7e8a2a163", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vabavq_p_s8.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabavq_p_s8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabavq_p_s8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabavq_p_s8.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -54,4 +58,8 @@ foo2 (int8x16_t b, int8x16_t c, mve_pred16_t p)\n   return vabavq_p (1, b, c, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "93deb664eda524ca72847505e5b9a00edc02b97e", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vabavq_p_u16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabavq_p_u16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabavq_p_u16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabavq_p_u16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -54,4 +58,8 @@ foo2 (uint16x8_t b, uint16x8_t c, mve_pred16_t p)\n   return vabavq_p (1, b, c, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "c11fc704b34625f507409c7e131ef7e90a29fa63", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vabavq_p_u32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabavq_p_u32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabavq_p_u32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabavq_p_u32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -54,4 +58,8 @@ foo2 (uint32x4_t b, uint32x4_t c, mve_pred16_t p)\n   return vabavq_p (1, b, c, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "04b9a6e2e35b56d92cfe2474d6ac0f7febc54311", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vabavq_p_u8.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabavq_p_u8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabavq_p_u8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabavq_p_u8.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -54,4 +58,8 @@ foo2 (uint8x16_t b, uint8x16_t c, mve_pred16_t p)\n   return vabavq_p (1, b, c, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "d1a1c96758139ca73ff18f800bae09b63389703c", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vabavq_s16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabavq_s16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabavq_s16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabavq_s16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -42,4 +46,8 @@ foo2 (int16x8_t b, int16x8_t c)\n   return vabavq (1, b, c);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "9ccfc73f79c4358fad64c523c718efa92969ae64", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vabavq_s32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabavq_s32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabavq_s32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabavq_s32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -42,4 +46,8 @@ foo2 (int32x4_t b, int32x4_t c)\n   return vabavq (1, b, c);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "5184d7a068dd45e151804b97af02b78c53ecb251", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vabavq_s8.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabavq_s8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabavq_s8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabavq_s8.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -42,4 +46,8 @@ foo2 (int8x16_t b, int8x16_t c)\n   return vabavq (1, b, c);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "c800d79d3517ea3f9d88eabb9412327b37bf157a", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vabavq_u16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabavq_u16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabavq_u16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabavq_u16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -42,4 +46,8 @@ foo2 (uint16x8_t b, uint16x8_t c)\n   return vabavq (1, b, c);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "b1733bae3335ff7f9596871ee70f893314c65c2d", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vabavq_u32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabavq_u32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabavq_u32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabavq_u32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -42,4 +46,8 @@ foo2 (uint32x4_t b, uint32x4_t c)\n   return vabavq (1, b, c);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "897cd32b1bbba7a916c37d73422a3b86e55dbab6", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vabavq_u8.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabavq_u8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabavq_u8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabavq_u8.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -42,4 +46,8 @@ foo2 (uint8x16_t b, uint8x16_t c)\n   return vabavq (1, b, c);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "338514621ea456f9c7b189cca9f0fde67c92dab1", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vabdq_f16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabdq_f16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabdq_f16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabdq_f16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -30,4 +34,8 @@ foo1 (float16x8_t a, float16x8_t b)\n   return vabdq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "9a600384822b0dd91a1c9a1d6181e70c75f86574", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vabdq_f32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabdq_f32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabdq_f32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabdq_f32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -30,4 +34,8 @@ foo1 (float32x4_t a, float32x4_t b)\n   return vabdq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "3584f182e9a08071380385da4384b08ccf603ec1", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vabdq_m_f16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabdq_m_f16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabdq_m_f16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabdq_m_f16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -38,4 +42,8 @@ foo1 (float16x8_t inactive, float16x8_t a, float16x8_t b, mve_pred16_t p)\n   return vabdq_m (inactive, a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "8b64f39a75807dbb166dea10cc92c09df0294ff8", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vabdq_m_f32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabdq_m_f32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabdq_m_f32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabdq_m_f32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -38,4 +42,8 @@ foo1 (float32x4_t inactive, float32x4_t a, float32x4_t b, mve_pred16_t p)\n   return vabdq_m (inactive, a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "aeb9879f91cf78a845de2a3a3aadd534742f9c51", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vabdq_m_s16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabdq_m_s16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabdq_m_s16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabdq_m_s16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -38,4 +42,8 @@ foo1 (int16x8_t inactive, int16x8_t a, int16x8_t b, mve_pred16_t p)\n   return vabdq_m (inactive, a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "294c6f174673042e9ece0100cb180d3f015b4b0a", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vabdq_m_s32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabdq_m_s32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabdq_m_s32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabdq_m_s32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -38,4 +42,8 @@ foo1 (int32x4_t inactive, int32x4_t a, int32x4_t b, mve_pred16_t p)\n   return vabdq_m (inactive, a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "c4c414691cb3790e4469f3741f63691bd503bb9e", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vabdq_m_s8.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabdq_m_s8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabdq_m_s8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabdq_m_s8.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -38,4 +42,8 @@ foo1 (int8x16_t inactive, int8x16_t a, int8x16_t b, mve_pred16_t p)\n   return vabdq_m (inactive, a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "4567b0f7da8a91f368d6eeb8bdc32f52e73a0538", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vabdq_m_u16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabdq_m_u16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabdq_m_u16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabdq_m_u16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -38,4 +42,8 @@ foo1 (uint16x8_t inactive, uint16x8_t a, uint16x8_t b, mve_pred16_t p)\n   return vabdq_m (inactive, a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "fc58f5c90016e7d49c5d6c7b5f9564214435172a", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vabdq_m_u32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabdq_m_u32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabdq_m_u32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabdq_m_u32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -38,4 +42,8 @@ foo1 (uint32x4_t inactive, uint32x4_t a, uint32x4_t b, mve_pred16_t p)\n   return vabdq_m (inactive, a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "6c5e2fe479a087d3403bcc8040ea16856541db54", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vabdq_m_u8.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabdq_m_u8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabdq_m_u8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabdq_m_u8.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -38,4 +42,8 @@ foo1 (uint8x16_t inactive, uint8x16_t a, uint8x16_t b, mve_pred16_t p)\n   return vabdq_m (inactive, a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "ac300d287dcf4f407a54afcbdd5c3d086ee59d0a", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vabdq_s16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabdq_s16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabdq_s16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabdq_s16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -30,4 +34,8 @@ foo1 (int16x8_t a, int16x8_t b)\n   return vabdq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "6170a59c0b83b4d5b0a1600f51a1d3dc490108bc", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vabdq_s32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabdq_s32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabdq_s32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabdq_s32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -30,4 +34,8 @@ foo1 (int32x4_t a, int32x4_t b)\n   return vabdq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "9cf62f9742d6e9e93436b82bebdb30ad5b5e617c", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vabdq_s8.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabdq_s8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabdq_s8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabdq_s8.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -30,4 +34,8 @@ foo1 (int8x16_t a, int8x16_t b)\n   return vabdq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "c283d7482ccf878e58992e08327a2609fce1ab3c", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vabdq_u16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabdq_u16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabdq_u16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabdq_u16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -30,4 +34,8 @@ foo1 (uint16x8_t a, uint16x8_t b)\n   return vabdq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "be9abda0cab732d1b3724d0cfd242ca55539fe57", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vabdq_u32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabdq_u32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabdq_u32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabdq_u32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -30,4 +34,8 @@ foo1 (uint32x4_t a, uint32x4_t b)\n   return vabdq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "227af07d0e577430391f13aec9ff7c16bde24420", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vabdq_u8.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabdq_u8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabdq_u8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabdq_u8.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -30,4 +34,8 @@ foo1 (uint8x16_t a, uint8x16_t b)\n   return vabdq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "ae54ef21c3e24322a6d2fb16dd69d8c08e19abec", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vabdq_x_f16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabdq_x_f16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabdq_x_f16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabdq_x_f16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -38,4 +42,8 @@ foo1 (float16x8_t a, float16x8_t b, mve_pred16_t p)\n   return vabdq_x (a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "d8781db3fb8430a77e97ec951f14f5db6245a82a", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vabdq_x_f32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabdq_x_f32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabdq_x_f32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabdq_x_f32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -38,4 +42,8 @@ foo1 (float32x4_t a, float32x4_t b, mve_pred16_t p)\n   return vabdq_x (a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "9d1416160477313d6e51e1103a41a55a8fc8bbef", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vabdq_x_s16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabdq_x_s16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabdq_x_s16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabdq_x_s16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -38,4 +42,8 @@ foo1 (int16x8_t a, int16x8_t b, mve_pred16_t p)\n   return vabdq_x (a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "7eb6fad34995d46d90d34f105636728474a737b6", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vabdq_x_s32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabdq_x_s32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabdq_x_s32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabdq_x_s32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -38,4 +42,8 @@ foo1 (int32x4_t a, int32x4_t b, mve_pred16_t p)\n   return vabdq_x (a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "8431703f4ef423ee685fff2c2cdfde90e0c222d8", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vabdq_x_s8.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabdq_x_s8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabdq_x_s8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabdq_x_s8.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -38,4 +42,8 @@ foo1 (int8x16_t a, int8x16_t b, mve_pred16_t p)\n   return vabdq_x (a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "7d2f3dcea482e130d81a5ae1f4370f8e8de07306", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vabdq_x_u16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabdq_x_u16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabdq_x_u16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabdq_x_u16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -38,4 +42,8 @@ foo1 (uint16x8_t a, uint16x8_t b, mve_pred16_t p)\n   return vabdq_x (a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "b94358fb4ae6c4ef64ff5c8df3dd03ef9791269b", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vabdq_x_u32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabdq_x_u32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabdq_x_u32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabdq_x_u32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -38,4 +42,8 @@ foo1 (uint32x4_t a, uint32x4_t b, mve_pred16_t p)\n   return vabdq_x (a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "a88e1e5346f3a8671ea452a2389a01fd60392aaf", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vabdq_x_u8.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabdq_x_u8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabdq_x_u8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabdq_x_u8.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -38,4 +42,8 @@ foo1 (uint8x16_t a, uint8x16_t b, mve_pred16_t p)\n   return vabdq_x (a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "d4bc9110f38f0e502f3c0ab9323e436c22f88205", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vabsq_f16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabsq_f16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabsq_f16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabsq_f16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -30,4 +34,8 @@ foo1 (float16x8_t a)\n   return vabsq (a);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "9f2955829f89287bbdf7e5ad51a7c5f612b08c19", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vabsq_f32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabsq_f32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabsq_f32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabsq_f32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -30,4 +34,8 @@ foo1 (float32x4_t a)\n   return vabsq (a);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "33d113241e9cff888e6a16b72cd98866094b8e55", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vabsq_m_f16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabsq_m_f16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabsq_m_f16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabsq_m_f16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -38,4 +42,8 @@ foo1 (float16x8_t inactive, float16x8_t a, mve_pred16_t p)\n   return vabsq_m (inactive, a, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "a588f5fc94c60a9e4e626fe0fb90fcd4ff287b2b", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vabsq_m_f32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabsq_m_f32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabsq_m_f32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabsq_m_f32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -38,4 +42,8 @@ foo1 (float32x4_t inactive, float32x4_t a, mve_pred16_t p)\n   return vabsq_m (inactive, a, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "360087db4e358a15936f8e86b32cf8558d240484", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vabsq_m_s16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabsq_m_s16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabsq_m_s16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabsq_m_s16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -38,4 +42,8 @@ foo1 (int16x8_t inactive, int16x8_t a, mve_pred16_t p)\n   return vabsq_m (inactive, a, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "590d0204385e9b5d6237c609e14f61048951647f", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vabsq_m_s32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabsq_m_s32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabsq_m_s32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabsq_m_s32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -38,4 +42,8 @@ foo1 (int32x4_t inactive, int32x4_t a, mve_pred16_t p)\n   return vabsq_m (inactive, a, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "518c19fdf79d7b731f6dec3d14aac40fb9933069", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vabsq_m_s8.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabsq_m_s8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabsq_m_s8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabsq_m_s8.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -38,4 +42,8 @@ foo1 (int8x16_t inactive, int8x16_t a, mve_pred16_t p)\n   return vabsq_m (inactive, a, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "6f40447eb1d53d1cb34dde325a363e375b86542b", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vabsq_s16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabsq_s16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabsq_s16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabsq_s16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -30,4 +34,8 @@ foo1 (int16x8_t a)\n   return vabsq (a);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "3da8b740fc8692bf0f73683c0b5346e0db495bd6", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vabsq_s32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabsq_s32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabsq_s32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabsq_s32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -30,4 +34,8 @@ foo1 (int32x4_t a)\n   return vabsq (a);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "5fa4ce42f5db74932f81ed0773321b6600e17c1f", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vabsq_s8.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabsq_s8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabsq_s8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabsq_s8.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -30,4 +34,8 @@ foo1 (int8x16_t a)\n   return vabsq (a);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "fda43efcf966da9fbca713e8024dd668182053a6", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vabsq_x_f16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabsq_x_f16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabsq_x_f16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabsq_x_f16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -38,4 +42,8 @@ foo1 (float16x8_t a, mve_pred16_t p)\n   return vabsq_x (a, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "281e07468ca651418990af5b0c964219f0967409", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vabsq_x_f32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabsq_x_f32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabsq_x_f32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabsq_x_f32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -38,4 +42,8 @@ foo1 (float32x4_t a, mve_pred16_t p)\n   return vabsq_x (a, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "93d4ff5a4733c3e898f1142b2ff4a8341a1138e3", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vabsq_x_s16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabsq_x_s16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabsq_x_s16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabsq_x_s16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -38,4 +42,8 @@ foo1 (int16x8_t a, mve_pred16_t p)\n   return vabsq_x (a, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "1ddc8b81cf6d24a01def1553a53dfa5bf9bf81c5", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vabsq_x_s32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabsq_x_s32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabsq_x_s32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabsq_x_s32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -38,4 +42,8 @@ foo1 (int32x4_t a, mve_pred16_t p)\n   return vabsq_x (a, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "0dfcf3e62fb640f2c830a0d5a0cf0401b6270bdd", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vabsq_x_s8.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabsq_x_s8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabsq_x_s8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvabsq_x_s8.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -38,4 +42,8 @@ foo1 (int8x16_t a, mve_pred16_t p)\n   return vabsq_x (a, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "174f3e3b9581ec3cc914b7d84ecbba4affbdd469", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vaddlvaq_p_s32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddlvaq_p_s32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddlvaq_p_s32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddlvaq_p_s32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -38,4 +42,8 @@ foo1 (int64_t a, int32x4_t b, mve_pred16_t p)\n   return vaddlvaq_p (a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "41b93675b74c7c1933a30a50be867c210f8c4c53", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vaddlvaq_p_u32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddlvaq_p_u32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddlvaq_p_u32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddlvaq_p_u32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -54,4 +58,8 @@ foo2 (uint32x4_t b, mve_pred16_t p)\n   return vaddlvaq_p (1, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "d692df30d55bd73876d75b6a4a9729c9204417cd", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vaddlvaq_s32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddlvaq_s32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddlvaq_s32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddlvaq_s32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -30,4 +34,8 @@ foo1 (int64_t a, int32x4_t b)\n   return vaddlvaq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "4daba29620c9196ac81274bc239df7eaa10e6eeb", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vaddlvaq_u32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddlvaq_u32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddlvaq_u32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddlvaq_u32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -42,4 +46,8 @@ foo2 (uint32x4_t b)\n   return vaddlvaq (1, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "df71bf107b806fddde1c4c78059e20cd678c9a62", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vaddlvq_p_s32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddlvq_p_s32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddlvq_p_s32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddlvq_p_s32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -38,4 +42,8 @@ foo1 (int32x4_t a, mve_pred16_t p)\n   return vaddlvq_p (a, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "40d6f4c108202c47de733661acdef3182acbd1c7", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vaddlvq_p_u32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddlvq_p_u32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddlvq_p_u32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddlvq_p_u32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -38,4 +42,8 @@ foo1 (uint32x4_t a, mve_pred16_t p)\n   return vaddlvq_p (a, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "4c87fb6dd2a6729215253ccd7d4fb0d16f2b1595", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vaddlvq_s32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddlvq_s32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddlvq_s32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddlvq_s32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -30,4 +34,8 @@ foo1 (int32x4_t a)\n   return vaddlvq (a);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "3a9037addbbbddf64cec772d714a20cb7b42cd5e", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vaddlvq_u32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddlvq_u32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddlvq_u32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddlvq_u32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -30,4 +34,8 @@ foo1 (uint32x4_t a)\n   return vaddlvq (a);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "b0e6d5d2c59d39b307c78062bd1f76999b6c4ed1", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vaddq_f16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_f16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_f16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_f16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -30,4 +34,8 @@ foo1 (float16x8_t a, float16x8_t b)\n   return vaddq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "be459e68d3c2be2423c89d4830a6154ea95532be", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vaddq_f32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_f32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_f32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_f32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -30,4 +34,8 @@ foo1 (float32x4_t a, float32x4_t b)\n   return vaddq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "1631969a87f148dda772edff1233d914449ab497", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vaddq_m_f16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_m_f16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_m_f16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_m_f16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -38,4 +42,8 @@ foo1 (float16x8_t inactive, float16x8_t a, float16x8_t b, mve_pred16_t p)\n   return vaddq_m (inactive, a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "bd00b2056a3f5a843cf1288ef122763c9561b28c", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vaddq_m_f32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_m_f32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_m_f32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_m_f32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -38,4 +42,8 @@ foo1 (float32x4_t inactive, float32x4_t a, float32x4_t b, mve_pred16_t p)\n   return vaddq_m (inactive, a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "5622365dd965dfbda14649525ca5aa62f0186b94", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vaddq_m_n_f16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_m_n_f16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_m_n_f16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_m_n_f16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -54,4 +58,8 @@ foo2 (float16x8_t inactive, float16x8_t a, mve_pred16_t p)\n   return vaddq_m (inactive, a, 1.1, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "e8bdb6a6a982ed6079c0895bfa74b8ca1cd3e070", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vaddq_m_n_f32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_m_n_f32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_m_n_f32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_m_n_f32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -54,4 +58,8 @@ foo2 (float32x4_t inactive, float32x4_t a, mve_pred16_t p)\n   return vaddq_m (inactive, a, 1.1, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "b1c41e2b3bf1e96016de5629571a8b08314bc13a", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vaddq_m_n_s16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_m_n_s16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_m_n_s16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_m_n_s16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -38,4 +42,8 @@ foo1 (int16x8_t inactive, int16x8_t a, int16_t b, mve_pred16_t p)\n   return vaddq_m (inactive, a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "1ff3dff685a00aa3d1ccbdb9a1dc2a7baf3c6936", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vaddq_m_n_s32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_m_n_s32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_m_n_s32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_m_n_s32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -38,4 +42,8 @@ foo1 (int32x4_t inactive, int32x4_t a, int32_t b, mve_pred16_t p)\n   return vaddq_m (inactive, a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "3c7ed0f8e3ea9aa765d2887ebaa6d86e65f97837", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vaddq_m_n_s8.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_m_n_s8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_m_n_s8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_m_n_s8.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -38,4 +42,8 @@ foo1 (int8x16_t inactive, int8x16_t a, int8_t b, mve_pred16_t p)\n   return vaddq_m (inactive, a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "a8e7b989ba91a19e6051ebaa429b71d78484c7f2", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vaddq_m_n_u16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_m_n_u16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_m_n_u16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_m_n_u16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -54,4 +58,8 @@ foo2 (uint16x8_t inactive, uint16x8_t a, mve_pred16_t p)\n   return vaddq_m (inactive, a, 1, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "0cbc89d37d8dd79b5940cb278f2ca634eedfbeaf", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vaddq_m_n_u32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_m_n_u32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_m_n_u32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_m_n_u32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -54,4 +58,8 @@ foo2 (uint32x4_t inactive, uint32x4_t a, mve_pred16_t p)\n   return vaddq_m (inactive, a, 1, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "db95f28d5486233ade2e3a336948bda862726751", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vaddq_m_n_u8.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_m_n_u8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_m_n_u8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_m_n_u8.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -54,4 +58,8 @@ foo2 (uint8x16_t inactive, uint8x16_t a, mve_pred16_t p)\n   return vaddq_m (inactive, a, 1, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "4306e61b57b672b33860e0b9b977c32f5aa2f2c8", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vaddq_m_s16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_m_s16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_m_s16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_m_s16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -38,4 +42,8 @@ foo1 (int16x8_t inactive, int16x8_t a, int16x8_t b, mve_pred16_t p)\n   return vaddq_m (inactive, a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "fad289c8a41ccc416dccb08302907f2837f60755", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vaddq_m_s32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_m_s32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_m_s32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_m_s32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -38,4 +42,8 @@ foo1 (int32x4_t inactive, int32x4_t a, int32x4_t b, mve_pred16_t p)\n   return vaddq_m (inactive, a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "0b39c3dce21b7288121420c4fdd81901f73768f0", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vaddq_m_s8.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_m_s8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_m_s8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_m_s8.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -38,4 +42,8 @@ foo1 (int8x16_t inactive, int8x16_t a, int8x16_t b, mve_pred16_t p)\n   return vaddq_m (inactive, a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "c7a846a2dba9f59f1ccb76f06d8f8fb9e542ecae", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vaddq_m_u16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_m_u16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_m_u16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_m_u16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -38,4 +42,8 @@ foo1 (uint16x8_t inactive, uint16x8_t a, uint16x8_t b, mve_pred16_t p)\n   return vaddq_m (inactive, a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "bbead6073ced0d274cf5c65748b0fd0b97ead798", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vaddq_m_u32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_m_u32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_m_u32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_m_u32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -38,4 +42,8 @@ foo1 (uint32x4_t inactive, uint32x4_t a, uint32x4_t b, mve_pred16_t p)\n   return vaddq_m (inactive, a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "3097756d53e645b73272b9b317087e928b98b855", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vaddq_m_u8.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_m_u8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_m_u8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_m_u8.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -38,4 +42,8 @@ foo1 (uint8x16_t inactive, uint8x16_t a, uint8x16_t b, mve_pred16_t p)\n   return vaddq_m (inactive, a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "dbb86b7083c796f12446d46e90896ac080556fdd", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vaddq_n_f16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_n_f16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_n_f16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_n_f16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -42,4 +46,8 @@ foo2 (float16x8_t a)\n   return vaddq (a, 1.1);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "61cbe4d03cc6364a400de3820885600533218e35", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vaddq_n_f32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_n_f32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_n_f32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_n_f32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -42,4 +46,8 @@ foo2 (float32x4_t a)\n   return vaddq (a, 1.1);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "237838cb0e693946de27aa5719ac186427e32c72", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vaddq_n_s16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_n_s16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_n_s16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_n_s16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -30,4 +34,8 @@ foo1 (int16x8_t a, int16_t b)\n   return vaddq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "c2cee5dc69ba83bc46b35efc6e38536fa03ba18f", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vaddq_n_s32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_n_s32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_n_s32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_n_s32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -30,4 +34,8 @@ foo1 (int32x4_t a, int32_t b)\n   return vaddq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "d815eaaa16ed3f2e4fe56b92a480ced38dbea86a", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vaddq_n_s8.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_n_s8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_n_s8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_n_s8.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -30,4 +34,8 @@ foo1 (int8x16_t a, int8_t b)\n   return vaddq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "35527a63ef45cccd671f1cf8500af6db978d9bc2", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vaddq_n_u16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_n_u16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_n_u16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_n_u16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -42,4 +46,8 @@ foo2 (uint16x8_t a)\n   return vaddq (a, 1);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "66de687bef0e5a9226c1e3fe4e407fb42246246e", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vaddq_n_u32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_n_u32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_n_u32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_n_u32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -42,4 +46,8 @@ foo2 (uint32x4_t a)\n   return vaddq (a, 1);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "9d4f80738109e5d20e0ed67c7a4074ac658019e6", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vaddq_n_u8.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_n_u8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_n_u8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_n_u8.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -42,4 +46,8 @@ foo2 (uint8x16_t a)\n   return vaddq (a, 1);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "370e4332e657087dc145e95ee75ca176a4b49799", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vaddq_s16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_s16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_s16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_s16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -30,4 +34,8 @@ foo1 (int16x8_t a, int16x8_t b)\n   return vaddq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "8c3bd3316d6cae41cabe5212ac53c5a85f8830cb", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vaddq_s32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_s32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_s32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_s32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -30,4 +34,8 @@ foo1 (int32x4_t a, int32x4_t b)\n   return vaddq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "3d126df3c3cd981c36008b1bc05cc3b35f0b1160", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vaddq_s8.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_s8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_s8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_s8.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -30,4 +34,8 @@ foo1 (int8x16_t a, int8x16_t b)\n   return vaddq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "e8ed91457b3003e03fb59c4f7d7b825651b97c6d", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vaddq_u16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_u16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_u16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_u16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -30,4 +34,8 @@ foo1 (uint16x8_t a, uint16x8_t b)\n   return vaddq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "172ed24016ab795149c7cc3ba8b94513ceb9bc32", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vaddq_u32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_u32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_u32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_u32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -30,4 +34,8 @@ foo1 (uint32x4_t a, uint32x4_t b)\n   return vaddq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "b60b877bdba614159ecadfdcfdb97bc0ab910c5a", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vaddq_u8.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_u8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_u8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_u8.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -30,4 +34,8 @@ foo1 (uint8x16_t a, uint8x16_t b)\n   return vaddq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "e7a3693f4a6b209bcc43c389d1ebb566937c6368", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vaddq_x_f16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_x_f16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_x_f16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_x_f16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -38,4 +42,8 @@ foo1 (float16x8_t a, float16x8_t b, mve_pred16_t p)\n   return vaddq_x (a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "f38c6b1f7afe53c8a7b28eae021c3d737d940d17", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vaddq_x_f32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_x_f32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_x_f32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_x_f32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -38,4 +42,8 @@ foo1 (float32x4_t a, float32x4_t b, mve_pred16_t p)\n   return vaddq_x (a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "e092b28afa8ef69da2dcfc5905852c697f250819", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vaddq_x_n_f16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_x_n_f16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_x_n_f16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_x_n_f16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -54,4 +58,8 @@ foo2 (float16x8_t a, mve_pred16_t p)\n   return vaddq_x (a, 1.1, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "c58a5e50608281ab94fa5d19b48c53f49e5c7181", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vaddq_x_n_f32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_x_n_f32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_x_n_f32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_x_n_f32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -54,4 +58,8 @@ foo2 (float32x4_t a, mve_pred16_t p)\n   return vaddq_x (a, 1.1, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "876afc7367b73b700e335d1a6d1c9d614792e537", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vaddq_x_n_s16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_x_n_s16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_x_n_s16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_x_n_s16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -38,4 +42,8 @@ foo1 (int16x8_t a, int16_t b, mve_pred16_t p)\n   return vaddq_x (a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "c25ec006918c86999f84bee25c36633fd797056c", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vaddq_x_n_s32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_x_n_s32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_x_n_s32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_x_n_s32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -38,4 +42,8 @@ foo1 (int32x4_t a, int32_t b, mve_pred16_t p)\n   return vaddq_x (a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "b6389224fe665e4142da424b7295a2fad3edd9d0", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vaddq_x_n_s8.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_x_n_s8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_x_n_s8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_x_n_s8.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -38,4 +42,8 @@ foo1 (int8x16_t a, int8_t b, mve_pred16_t p)\n   return vaddq_x (a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "006a872034a87e632f31f9c9f5c3c295243880e7", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vaddq_x_n_u16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_x_n_u16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_x_n_u16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_x_n_u16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -54,4 +58,8 @@ foo2 (uint16x8_t a, mve_pred16_t p)\n   return vaddq_x (a, 1, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "0cc940b449c4679322c890e5670dcab1691cf31b", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vaddq_x_n_u32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_x_n_u32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_x_n_u32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_x_n_u32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -54,4 +58,8 @@ foo2 (uint32x4_t a, mve_pred16_t p)\n   return vaddq_x (a, 1, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "214a8decd8382817e1ad3389d2a1e80f12104557", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vaddq_x_n_u8.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_x_n_u8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_x_n_u8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_x_n_u8.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -54,4 +58,8 @@ foo2 (uint8x16_t a, mve_pred16_t p)\n   return vaddq_x (a, 1, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "a79531abf1404124d3ae30dfe9f681d282fa09e4", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vaddq_x_s16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_x_s16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_x_s16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_x_s16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -38,4 +42,8 @@ foo1 (int16x8_t a, int16x8_t b, mve_pred16_t p)\n   return vaddq_x (a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "019ed62813c856395156a7ec5dd2bd969008bc76", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vaddq_x_s32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_x_s32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_x_s32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_x_s32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -38,4 +42,8 @@ foo1 (int32x4_t a, int32x4_t b, mve_pred16_t p)\n   return vaddq_x (a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "4f390d109dd7089b953a75f59b49ac17cbedc88f", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vaddq_x_s8.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_x_s8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_x_s8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_x_s8.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -38,4 +42,8 @@ foo1 (int8x16_t a, int8x16_t b, mve_pred16_t p)\n   return vaddq_x (a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "e528a9ef1bfcba380a630614cb8b827d62da7ed4", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vaddq_x_u16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_x_u16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_x_u16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_x_u16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -38,4 +42,8 @@ foo1 (uint16x8_t a, uint16x8_t b, mve_pred16_t p)\n   return vaddq_x (a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "fa622f0a5203b1df6794f2de54c7a060ebe0ae24", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vaddq_x_u32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_x_u32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_x_u32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_x_u32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -38,4 +42,8 @@ foo1 (uint32x4_t a, uint32x4_t b, mve_pred16_t p)\n   return vaddq_x (a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "8ce1fe36015715de8c8a95c885b0ab7385223596", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vaddq_x_u8.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_x_u8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_x_u8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddq_x_u8.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -38,4 +42,8 @@ foo1 (uint8x16_t a, uint8x16_t b, mve_pred16_t p)\n   return vaddq_x (a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "95224809f669e4dcee86a4d285f98dc6e5077e52", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vaddvaq_p_s16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddvaq_p_s16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddvaq_p_s16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddvaq_p_s16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -38,4 +42,8 @@ foo1 (int32_t a, int16x8_t b, mve_pred16_t p)\n   return vaddvaq_p (a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "80281819f069408faf4bcb81aaaeab8e8a59f51a", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vaddvaq_p_s32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddvaq_p_s32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddvaq_p_s32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddvaq_p_s32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -38,4 +42,8 @@ foo1 (int32_t a, int32x4_t b, mve_pred16_t p)\n   return vaddvaq_p (a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "53a92513511172974942ae40616463254543ab84", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vaddvaq_p_s8.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddvaq_p_s8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddvaq_p_s8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddvaq_p_s8.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -38,4 +42,8 @@ foo1 (int32_t a, int8x16_t b, mve_pred16_t p)\n   return vaddvaq_p (a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "da61820c552ba8c30923fc8d21ba9dc2161ad205", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vaddvaq_p_u16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddvaq_p_u16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddvaq_p_u16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddvaq_p_u16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -54,4 +58,8 @@ foo2 (uint16x8_t b, mve_pred16_t p)\n   return vaddvaq_p (1, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "0b7892c8b9ab96dbfdc85cc8fa133d66673d9ab4", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vaddvaq_p_u32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddvaq_p_u32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddvaq_p_u32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddvaq_p_u32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -54,4 +58,8 @@ foo2 (uint32x4_t b, mve_pred16_t p)\n   return vaddvaq_p (1, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "51cba0385a9282c70a0bef3dd224c615d959d78e", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vaddvaq_p_u8.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddvaq_p_u8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddvaq_p_u8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddvaq_p_u8.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -54,4 +58,8 @@ foo2 (uint8x16_t b, mve_pred16_t p)\n   return vaddvaq_p (1, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "2a4dd6c33d9e0e3399e73d46ccd2f7b8259fc46c", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vaddvaq_s16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddvaq_s16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddvaq_s16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddvaq_s16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -30,4 +34,8 @@ foo1 (int32_t a, int16x8_t b)\n   return vaddvaq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "9f1c85151425ac167bb4804fcd334919642a07e0", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vaddvaq_s32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddvaq_s32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddvaq_s32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddvaq_s32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -30,4 +34,8 @@ foo1 (int32_t a, int32x4_t b)\n   return vaddvaq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "6f77cdb46f2f803ff2597320303e2eb171d99a09", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vaddvaq_s8.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddvaq_s8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddvaq_s8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddvaq_s8.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -30,4 +34,8 @@ foo1 (int32_t a, int8x16_t b)\n   return vaddvaq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "a3e0e39502f66840bba5b798a503ae4183a2aac3", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vaddvaq_u16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddvaq_u16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddvaq_u16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddvaq_u16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -42,4 +46,8 @@ foo2 (uint16x8_t b)\n   return vaddvaq (1, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "e6b2f85cdaec9a7a18ac9403bc4410303bc3c7d1", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vaddvaq_u32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddvaq_u32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddvaq_u32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddvaq_u32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -42,4 +46,8 @@ foo2 (uint32x4_t b)\n   return vaddvaq (1, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "5bad0ca996ec1e0451e6bc8485747c1911f1c06e", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vaddvaq_u8.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddvaq_u8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddvaq_u8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddvaq_u8.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -42,4 +46,8 @@ foo2 (uint8x16_t b)\n   return vaddvaq (1, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "f4e499b631edc41883305e5ceb584b1c8a34981f", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vaddvq_p_s16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddvq_p_s16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddvq_p_s16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddvq_p_s16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -38,4 +42,8 @@ foo1 (int16x8_t a, mve_pred16_t p)\n   return vaddvq_p (a, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "9417d86d6feb834ddd98fc387cffb1b28d4cc74b", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vaddvq_p_s32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddvq_p_s32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddvq_p_s32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddvq_p_s32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -38,4 +42,8 @@ foo1 (int32x4_t a, mve_pred16_t p)\n   return vaddvq_p (a, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "757bc5759ca400497ad3e1ed8357674517421fd5", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vaddvq_p_s8.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddvq_p_s8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddvq_p_s8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddvq_p_s8.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -38,4 +42,8 @@ foo1 (int8x16_t a, mve_pred16_t p)\n   return vaddvq_p (a, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "cc9673f7326bb7eaf4d5e11317efa07da5510097", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vaddvq_p_u16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddvq_p_u16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddvq_p_u16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddvq_p_u16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -38,4 +42,8 @@ foo1 (uint16x8_t a, mve_pred16_t p)\n   return vaddvq_p (a, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "9ead886d3e9881cf3bf9396c7ca496809235dc1a", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vaddvq_p_u32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddvq_p_u32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddvq_p_u32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddvq_p_u32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -38,4 +42,8 @@ foo1 (uint32x4_t a, mve_pred16_t p)\n   return vaddvq_p (a, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "45ed62f8b58c6478400950f6666ecf49d9f462a3", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vaddvq_p_u8.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddvq_p_u8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddvq_p_u8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddvq_p_u8.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -38,4 +42,8 @@ foo1 (uint8x16_t a, mve_pred16_t p)\n   return vaddvq_p (a, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "468cc810cc4338c5b9d75ff2d0d9a7641b199d44", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vaddvq_s16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddvq_s16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddvq_s16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddvq_s16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -30,4 +34,8 @@ foo1 (int16x8_t a)\n   return vaddvq (a);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "791e27bdbb5aabde65f1d65d5c4853577ac2aa49", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vaddvq_s32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddvq_s32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddvq_s32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddvq_s32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -30,4 +34,8 @@ foo1 (int32x4_t a)\n   return vaddvq (a);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "3a13efc93dd2dddb98914e4ab1636fcd209745ab", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vaddvq_s8.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddvq_s8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddvq_s8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddvq_s8.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -30,4 +34,8 @@ foo1 (int8x16_t a)\n   return vaddvq (a);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "6aabcdce2c60aa7913a97c0672f2c6a431855d35", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vaddvq_u16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddvq_u16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddvq_u16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddvq_u16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -30,4 +34,8 @@ foo1 (uint16x8_t a)\n   return vaddvq (a);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "8b5ba8166239e0a8c190dcf4e48b5633d7792a5b", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vaddvq_u32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddvq_u32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddvq_u32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddvq_u32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -30,4 +34,8 @@ foo1 (uint32x4_t a)\n   return vaddvq (a);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "2576d9c66d07f63ed6604143ae2d81883ebd2736", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vaddvq_u8.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddvq_u8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddvq_u8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvaddvq_u8.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -30,4 +34,8 @@ foo1 (uint8x16_t a)\n   return vaddvq (a);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "373acbd31b98c77eaf04e4dc6d1cf5b02a22da27", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpcsq_m_n_u16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpcsq_m_n_u16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpcsq_m_n_u16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpcsq_m_n_u16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -60,4 +64,8 @@ foo2 (uint16x8_t a, mve_pred16_t p)\n   return vcmpcsq_m (a, 1, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "25263654930960b8635cbf7c90ab17ed428f0e70", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpcsq_m_n_u32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpcsq_m_n_u32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpcsq_m_n_u32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpcsq_m_n_u32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -60,4 +64,8 @@ foo2 (uint32x4_t a, mve_pred16_t p)\n   return vcmpcsq_m (a, 1, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "60120e88ef985115f4c99928fd92efd3251e0c48", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpcsq_m_n_u8.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpcsq_m_n_u8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpcsq_m_n_u8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpcsq_m_n_u8.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -60,4 +64,8 @@ foo2 (uint8x16_t a, mve_pred16_t p)\n   return vcmpcsq_m (a, 1, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "fcdc41fdc81f75d84e1a1466ab6fcb77aff7c9c3", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpcsq_m_u16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpcsq_m_u16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpcsq_m_u16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpcsq_m_u16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -42,4 +46,8 @@ foo1 (uint16x8_t a, uint16x8_t b, mve_pred16_t p)\n   return vcmpcsq_m (a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "b294c8593d1b3d11d5c9eb62cd2a4b51f526c691", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpcsq_m_u32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpcsq_m_u32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpcsq_m_u32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpcsq_m_u32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -42,4 +46,8 @@ foo1 (uint32x4_t a, uint32x4_t b, mve_pred16_t p)\n   return vcmpcsq_m (a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "00c118a68c6d1d9fd673ae9ac0ae68a3c4f8c1f0", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpcsq_m_u8.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpcsq_m_u8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpcsq_m_u8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpcsq_m_u8.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -42,4 +46,8 @@ foo1 (uint8x16_t a, uint8x16_t b, mve_pred16_t p)\n   return vcmpcsq_m (a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "dc63c527743deefdbda62927d2786d43a9a86b6f", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpcsq_n_u16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpcsq_n_u16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpcsq_n_u16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpcsq_n_u16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -48,4 +52,8 @@ foo2 (uint16x8_t a)\n   return vcmpcsq (a, 1);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "8c5d185ca22693d7126cb74c525dc762f0ce98a6", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpcsq_n_u32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpcsq_n_u32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpcsq_n_u32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpcsq_n_u32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -48,4 +52,8 @@ foo2 (uint32x4_t a)\n   return vcmpcsq (a, 1);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "2296f3e165538cc4218fe96a41ae801509d7240d", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpcsq_n_u8.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpcsq_n_u8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpcsq_n_u8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpcsq_n_u8.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -48,4 +52,8 @@ foo2 (uint8x16_t a)\n   return vcmpcsq (a, 1);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "5ae4d0ceaef9124abf82e1271c93a95aec50a510", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpcsq_u16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpcsq_u16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpcsq_u16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpcsq_u16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -34,4 +38,8 @@ foo1 (uint16x8_t a, uint16x8_t b)\n   return vcmpcsq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "4695e7e34053cf0c99884ce1a669b95960fb7b88", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpcsq_u32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpcsq_u32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpcsq_u32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpcsq_u32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -34,4 +38,8 @@ foo1 (uint32x4_t a, uint32x4_t b)\n   return vcmpcsq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "3075050a943a0080d26b882f2c8006d3afaf152d", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpcsq_u8.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpcsq_u8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpcsq_u8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpcsq_u8.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -34,4 +38,8 @@ foo1 (uint8x16_t a, uint8x16_t b)\n   return vcmpcsq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "82b24a83f8b6a6d79f562d417779d1006efdd28a", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpeqq_f16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpeqq_f16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpeqq_f16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpeqq_f16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -34,4 +38,8 @@ foo1 (float16x8_t a, float16x8_t b)\n   return vcmpeqq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "1d7bda0a9866163da9a720a5d950b91e4029f48e", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpeqq_f32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpeqq_f32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpeqq_f32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpeqq_f32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -34,4 +38,8 @@ foo1 (float32x4_t a, float32x4_t b)\n   return vcmpeqq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "0a0406b3b74e975943aff2714a66e4e64320fa2c", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpeqq_m_f16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpeqq_m_f16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpeqq_m_f16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpeqq_m_f16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -42,4 +46,8 @@ foo1 (float16x8_t a, float16x8_t b, mve_pred16_t p)\n   return vcmpeqq_m (a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "ba8a946591c69b8f766731f9475a76f9ba143ac9", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpeqq_m_f32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpeqq_m_f32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpeqq_m_f32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpeqq_m_f32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -42,4 +46,8 @@ foo1 (float32x4_t a, float32x4_t b, mve_pred16_t p)\n   return vcmpeqq_m (a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "f095b4aff1e1cbf9fcc3648198f06a70632001e2", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpeqq_m_n_f16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpeqq_m_n_f16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpeqq_m_n_f16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpeqq_m_n_f16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -60,4 +64,8 @@ foo2 (float16x8_t a, mve_pred16_t p)\n   return vcmpeqq_m (a, 1.1, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "dd244db5e46abde3d11d5d5e85b251e7ebf40cf5", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpeqq_m_n_f32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpeqq_m_n_f32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpeqq_m_n_f32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpeqq_m_n_f32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -60,4 +64,8 @@ foo2 (float32x4_t a, mve_pred16_t p)\n   return vcmpeqq_m (a, 1.1, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "bbf5326d2b3d09049831f36cd4546db26871217a", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpeqq_m_n_s16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpeqq_m_n_s16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpeqq_m_n_s16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpeqq_m_n_s16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -42,4 +46,8 @@ foo1 (int16x8_t a, int16_t b, mve_pred16_t p)\n   return vcmpeqq_m (a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "b66949b76330c4a1dc5b341bb456f3b3cfdb3cd9", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpeqq_m_n_s32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpeqq_m_n_s32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpeqq_m_n_s32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpeqq_m_n_s32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -42,4 +46,8 @@ foo1 (int32x4_t a, int32_t b, mve_pred16_t p)\n   return vcmpeqq_m (a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "5730eebb47be25e52c0e6109659f603a6115b327", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpeqq_m_n_s8.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpeqq_m_n_s8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpeqq_m_n_s8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpeqq_m_n_s8.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -42,4 +46,8 @@ foo1 (int8x16_t a, int8_t b, mve_pred16_t p)\n   return vcmpeqq_m (a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "6009e951bebd58f870ee276ad76cac200d1aad7c", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpeqq_m_n_u16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpeqq_m_n_u16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpeqq_m_n_u16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpeqq_m_n_u16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -60,4 +64,8 @@ foo2 (uint16x8_t a, mve_pred16_t p)\n   return vcmpeqq_m (a, 1, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "2bce70de33e81b6b6a14284184ce83452edcb43b", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpeqq_m_n_u32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpeqq_m_n_u32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpeqq_m_n_u32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpeqq_m_n_u32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -60,4 +64,8 @@ foo2 (uint32x4_t a, mve_pred16_t p)\n   return vcmpeqq_m (a, 1, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "6c6fa8a7720e9d2623c30819fd9b023bbacfadd1", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpeqq_m_n_u8.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpeqq_m_n_u8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpeqq_m_n_u8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpeqq_m_n_u8.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -60,4 +64,8 @@ foo2 (uint8x16_t a, mve_pred16_t p)\n   return vcmpeqq_m (a, 1, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "4b5feb26a62723aaf1658e4b41fcee1f0a7e6bcd", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpeqq_m_s16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpeqq_m_s16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpeqq_m_s16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpeqq_m_s16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -42,4 +46,8 @@ foo1 (int16x8_t a, int16x8_t b, mve_pred16_t p)\n   return vcmpeqq_m (a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "60db456c60d020e8c29a3ab5660f695d9a355158", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpeqq_m_s32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpeqq_m_s32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpeqq_m_s32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpeqq_m_s32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -42,4 +46,8 @@ foo1 (int32x4_t a, int32x4_t b, mve_pred16_t p)\n   return vcmpeqq_m (a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "45cdc28fb2b712ee9fa8a0ea2390087662e583a0", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpeqq_m_s8.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpeqq_m_s8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpeqq_m_s8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpeqq_m_s8.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -42,4 +46,8 @@ foo1 (int8x16_t a, int8x16_t b, mve_pred16_t p)\n   return vcmpeqq_m (a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "41c3653b89205046fcffa5cdbea731637660bcdd", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpeqq_m_u16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpeqq_m_u16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpeqq_m_u16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpeqq_m_u16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -42,4 +46,8 @@ foo1 (uint16x8_t a, uint16x8_t b, mve_pred16_t p)\n   return vcmpeqq_m (a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "2e7bf175e63944de02ce1cb7dc63d6b63fa5e27d", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpeqq_m_u32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpeqq_m_u32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpeqq_m_u32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpeqq_m_u32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -42,4 +46,8 @@ foo1 (uint32x4_t a, uint32x4_t b, mve_pred16_t p)\n   return vcmpeqq_m (a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "e9d333f66612b7168a1b6bb95a590cb53df6197e", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpeqq_m_u8.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpeqq_m_u8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpeqq_m_u8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpeqq_m_u8.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -42,4 +46,8 @@ foo1 (uint8x16_t a, uint8x16_t b, mve_pred16_t p)\n   return vcmpeqq_m (a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "1d870428c5569dbff5fbd5373faba72872ba8e1d", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpeqq_n_f16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpeqq_n_f16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpeqq_n_f16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpeqq_n_f16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -48,4 +52,8 @@ foo2 (float16x8_t a)\n   return vcmpeqq (a, 1.1);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "8b8610b0617b8214d19bde8e09c36ead02f108d6", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpeqq_n_f32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpeqq_n_f32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpeqq_n_f32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpeqq_n_f32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -48,4 +52,8 @@ foo2 (float32x4_t a)\n   return vcmpeqq (a, 1.1);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "2f146d937ec1dfb4660d276511204759ac976e1f", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpeqq_n_s16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpeqq_n_s16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpeqq_n_s16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpeqq_n_s16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -34,4 +38,8 @@ foo1 (int16x8_t a, int16_t b)\n   return vcmpeqq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "f77743c00d3171177a4a1fa65e3df700a5269ff9", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpeqq_n_s32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpeqq_n_s32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpeqq_n_s32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpeqq_n_s32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -34,4 +38,8 @@ foo1 (int32x4_t a, int32_t b)\n   return vcmpeqq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "690ed1b811d39657452e9e6ed160f01d14132a37", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpeqq_n_s8.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpeqq_n_s8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpeqq_n_s8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpeqq_n_s8.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -34,4 +38,8 @@ foo1 (int8x16_t a, int8_t b)\n   return vcmpeqq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "409c9de58ba5dabdbd1048758fcb46da9fd8a88f", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpeqq_n_u16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpeqq_n_u16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpeqq_n_u16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpeqq_n_u16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -48,4 +52,8 @@ foo2 (uint16x8_t a)\n   return vcmpeqq (a, 1);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "c3b1736bfa1704cc7fcb03792ab72a64a0fe29b3", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpeqq_n_u32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpeqq_n_u32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpeqq_n_u32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpeqq_n_u32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -48,4 +52,8 @@ foo2 (uint32x4_t a)\n   return vcmpeqq (a, 1);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "3728c738b54380e2dcac935813adc271c7b924c7", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpeqq_n_u8.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpeqq_n_u8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpeqq_n_u8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpeqq_n_u8.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -48,4 +52,8 @@ foo2 (uint8x16_t a)\n   return vcmpeqq (a, 1);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "24f34a24ee37b19c0db720082ae4cdaf8dfdeb69", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpeqq_s16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpeqq_s16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpeqq_s16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpeqq_s16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -34,4 +38,8 @@ foo1 (int16x8_t a, int16x8_t b)\n   return vcmpeqq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "ae5d870d2b4217c3c7713c119a4d682ce9455cd7", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpeqq_s32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpeqq_s32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpeqq_s32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpeqq_s32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -34,4 +38,8 @@ foo1 (int32x4_t a, int32x4_t b)\n   return vcmpeqq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "81538a9957a1f18e0f331cc9a28b33fe2d1b77cd", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpeqq_s8.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpeqq_s8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpeqq_s8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpeqq_s8.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -34,4 +38,8 @@ foo1 (int8x16_t a, int8x16_t b)\n   return vcmpeqq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "39778cf1b6cb96cbd8dadf2bec5627f49e4f9aea", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpeqq_u16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpeqq_u16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpeqq_u16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpeqq_u16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -34,4 +38,8 @@ foo1 (uint16x8_t a, uint16x8_t b)\n   return vcmpeqq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "8afd39e89b5b7d45f656ecb7aaa56175d824bde5", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpeqq_u32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpeqq_u32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpeqq_u32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpeqq_u32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -34,4 +38,8 @@ foo1 (uint32x4_t a, uint32x4_t b)\n   return vcmpeqq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "84610a10445a7b322909db78283b67844ea07727", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpeqq_u8.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpeqq_u8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpeqq_u8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpeqq_u8.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -34,4 +38,8 @@ foo1 (uint8x16_t a, uint8x16_t b)\n   return vcmpeqq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "f11dc28376d488458f4f3c7cb41bead22a6025c9", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpgeq_f16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgeq_f16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgeq_f16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgeq_f16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -34,4 +38,8 @@ foo1 (float16x8_t a, float16x8_t b)\n   return vcmpgeq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "8eb38db2021b216bd36a80dcf34615c3aba75c1e", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpgeq_f32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgeq_f32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgeq_f32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgeq_f32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -34,4 +38,8 @@ foo1 (float32x4_t a, float32x4_t b)\n   return vcmpgeq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "c3a8df2ec46ff2c93cd0f6b0c5e0871f8c182e4d", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpgeq_m_f16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgeq_m_f16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgeq_m_f16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgeq_m_f16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -42,4 +46,8 @@ foo1 (float16x8_t a, float16x8_t b, mve_pred16_t p)\n   return vcmpgeq_m (a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "8069e426b730855ee5569d55a5084bd99f453866", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpgeq_m_f32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgeq_m_f32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgeq_m_f32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgeq_m_f32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -42,4 +46,8 @@ foo1 (float32x4_t a, float32x4_t b, mve_pred16_t p)\n   return vcmpgeq_m (a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "3a9be99bc0a0203e53cdc9838058034eb11e6888", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpgeq_m_n_f16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgeq_m_n_f16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgeq_m_n_f16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgeq_m_n_f16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -60,4 +64,8 @@ foo2 (float16x8_t a, mve_pred16_t p)\n   return vcmpgeq_m (a, 1.1, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "a785cfb52f89fbb393e355e797c84e23cf00a728", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpgeq_m_n_f32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgeq_m_n_f32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgeq_m_n_f32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgeq_m_n_f32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -60,4 +64,8 @@ foo2 (float32x4_t a, mve_pred16_t p)\n   return vcmpgeq_m (a, 1.1, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "0a2544e7ac4723fafca455d642573c821cac3e97", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpgeq_m_n_s16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgeq_m_n_s16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgeq_m_n_s16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgeq_m_n_s16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -42,4 +46,8 @@ foo1 (int16x8_t a, int16_t b, mve_pred16_t p)\n   return vcmpgeq_m (a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "fa453774d0650a1b1028b225aa38bdf6c334d0bf", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpgeq_m_n_s32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgeq_m_n_s32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgeq_m_n_s32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgeq_m_n_s32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -42,4 +46,8 @@ foo1 (int32x4_t a, int32_t b, mve_pred16_t p)\n   return vcmpgeq_m (a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "34d632b03e7c302b6a7defa872b2ab07cbc1c632", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpgeq_m_n_s8.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgeq_m_n_s8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgeq_m_n_s8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgeq_m_n_s8.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -42,4 +46,8 @@ foo1 (int8x16_t a, int8_t b, mve_pred16_t p)\n   return vcmpgeq_m (a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "1c5ce785a638b9371ed1170177ba51f7d24461fe", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpgeq_m_s16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgeq_m_s16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgeq_m_s16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgeq_m_s16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -42,4 +46,8 @@ foo1 (int16x8_t a, int16x8_t b, mve_pred16_t p)\n   return vcmpgeq_m (a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "3ac4d59bf1fd1e2493d6fc5f2aed77b2b70c6110", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpgeq_m_s32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgeq_m_s32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgeq_m_s32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgeq_m_s32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -42,4 +46,8 @@ foo1 (int32x4_t a, int32x4_t b, mve_pred16_t p)\n   return vcmpgeq_m (a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "3c3a584e075a30099bb6e55fb22c5812d67c99d0", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpgeq_m_s8.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgeq_m_s8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgeq_m_s8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgeq_m_s8.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -42,4 +46,8 @@ foo1 (int8x16_t a, int8x16_t b, mve_pred16_t p)\n   return vcmpgeq_m (a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "4e9a346ab14f553ef7f7872ff7833834d7b58401", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpgeq_n_f16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgeq_n_f16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgeq_n_f16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgeq_n_f16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -48,4 +52,8 @@ foo2 (float16x8_t a)\n   return vcmpgeq (a, 1.1);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "2cf1d1ab0b662524747e832daa7218bab65a1d87", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpgeq_n_f32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgeq_n_f32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgeq_n_f32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgeq_n_f32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -48,4 +52,8 @@ foo2 (float32x4_t a)\n   return vcmpgeq (a, 1.1);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "e0488dc00032cd0f757a26d2c72897ca2ff3be57", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpgeq_n_s16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgeq_n_s16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgeq_n_s16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgeq_n_s16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -34,4 +38,8 @@ foo1 (int16x8_t a, int16_t b)\n   return vcmpgeq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "b448e8a15e328a860b8b95f9ddcd4a0d1ca573ee", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpgeq_n_s32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgeq_n_s32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgeq_n_s32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgeq_n_s32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -34,4 +38,8 @@ foo1 (int32x4_t a, int32_t b)\n   return vcmpgeq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "9f609b9f243685c7c48e81cf9bc64c29a9334d98", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpgeq_n_s8.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgeq_n_s8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgeq_n_s8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgeq_n_s8.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -34,4 +38,8 @@ foo1 (int8x16_t a, int8_t b)\n   return vcmpgeq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "c835d99b47a41d74cb6b103c4afd2aab247ff951", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpgeq_s16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgeq_s16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgeq_s16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgeq_s16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -34,4 +38,8 @@ foo1 (int16x8_t a, int16x8_t b)\n   return vcmpgeq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "37d9524b4f8a7d6cf565ec45afac405db97dff12", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpgeq_s32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgeq_s32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgeq_s32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgeq_s32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -34,4 +38,8 @@ foo1 (int32x4_t a, int32x4_t b)\n   return vcmpgeq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "a752510621b11fee955efad13687d770ca0c3448", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpgeq_s8.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgeq_s8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgeq_s8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgeq_s8.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -34,4 +38,8 @@ foo1 (int8x16_t a, int8x16_t b)\n   return vcmpgeq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "d8f151a19f355cb00c9b033bba730ec18cd58280", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpgtq_f16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgtq_f16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgtq_f16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgtq_f16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -34,4 +38,8 @@ foo1 (float16x8_t a, float16x8_t b)\n   return vcmpgtq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "6f601889e853091e76e068926fc5b0e3fc04dc5c", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpgtq_f32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgtq_f32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgtq_f32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgtq_f32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -34,4 +38,8 @@ foo1 (float32x4_t a, float32x4_t b)\n   return vcmpgtq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "f724387023e0515e332ff644e7b092584e23a187", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpgtq_m_f16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgtq_m_f16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgtq_m_f16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgtq_m_f16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -42,4 +46,8 @@ foo1 (float16x8_t a, float16x8_t b, mve_pred16_t p)\n   return vcmpgtq_m (a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "6eebe92b797435cc38a7b67a656f482afdd9009c", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpgtq_m_f32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgtq_m_f32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgtq_m_f32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgtq_m_f32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -42,4 +46,8 @@ foo1 (float32x4_t a, float32x4_t b, mve_pred16_t p)\n   return vcmpgtq_m (a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "be4da4b50da2fbd8190e012b030d8edeb5067549", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpgtq_m_n_f16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgtq_m_n_f16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgtq_m_n_f16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgtq_m_n_f16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -60,4 +64,8 @@ foo2 (float16x8_t a, mve_pred16_t p)\n   return vcmpgtq_m (a, 1.1, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "e8244345eb2eb8a849b7e612ee333df69270d97e", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpgtq_m_n_f32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgtq_m_n_f32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgtq_m_n_f32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgtq_m_n_f32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -60,4 +64,8 @@ foo2 (float32x4_t a, mve_pred16_t p)\n   return vcmpgtq_m (a, 1.1, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "12d5540ba399bf0fcd62ae8249d0349c8c5025fb", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpgtq_m_n_s16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgtq_m_n_s16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgtq_m_n_s16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgtq_m_n_s16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -42,4 +46,8 @@ foo1 (int16x8_t a, int16_t b, mve_pred16_t p)\n   return vcmpgtq_m (a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "dca726fde3802452fd8457762889fc621f97fd72", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpgtq_m_n_s32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgtq_m_n_s32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgtq_m_n_s32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgtq_m_n_s32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -42,4 +46,8 @@ foo1 (int32x4_t a, int32_t b, mve_pred16_t p)\n   return vcmpgtq_m (a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "07216ac242f81591df13ad2d914eaa4ee8a7798c", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpgtq_m_n_s8.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgtq_m_n_s8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgtq_m_n_s8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgtq_m_n_s8.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -42,4 +46,8 @@ foo1 (int8x16_t a, int8_t b, mve_pred16_t p)\n   return vcmpgtq_m (a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "bd0ac3d927a8878ab756396398a8f992e22d6e4e", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpgtq_m_s16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgtq_m_s16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgtq_m_s16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgtq_m_s16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -42,4 +46,8 @@ foo1 (int16x8_t a, int16x8_t b, mve_pred16_t p)\n   return vcmpgtq_m (a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "0c2f3acf2bd9e3ecc990018d7082c34402df8558", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpgtq_m_s32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgtq_m_s32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgtq_m_s32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgtq_m_s32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -42,4 +46,8 @@ foo1 (int32x4_t a, int32x4_t b, mve_pred16_t p)\n   return vcmpgtq_m (a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "3f2f28b839b0ebc3790065cc270508336dc7a6fe", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpgtq_m_s8.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgtq_m_s8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgtq_m_s8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgtq_m_s8.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -42,4 +46,8 @@ foo1 (int8x16_t a, int8x16_t b, mve_pred16_t p)\n   return vcmpgtq_m (a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "0339fbcafc6f42ea2fcf03d22783b37affd26453", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpgtq_n_f16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgtq_n_f16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgtq_n_f16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgtq_n_f16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -48,4 +52,8 @@ foo2 (float16x8_t a)\n   return vcmpgtq (a, 1.1);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "482ac094cf389032ba759d58b9563a57837199c8", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpgtq_n_f32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgtq_n_f32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgtq_n_f32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgtq_n_f32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -48,4 +52,8 @@ foo2 (float32x4_t a)\n   return vcmpgtq (a, 1.1);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "9c8611d924cabde6917878bc403f66ec281aef5e", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpgtq_n_s16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgtq_n_s16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgtq_n_s16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgtq_n_s16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -34,4 +38,8 @@ foo1 (int16x8_t a, int16_t b)\n   return vcmpgtq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "ef285c9692b5e445dd347312e193afd55bd65458", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpgtq_n_s32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgtq_n_s32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgtq_n_s32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgtq_n_s32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -34,4 +38,8 @@ foo1 (int32x4_t a, int32_t b)\n   return vcmpgtq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "8cabf987c9ac4998c9022c1a52b3a9989a634af2", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpgtq_n_s8.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgtq_n_s8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgtq_n_s8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgtq_n_s8.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -34,4 +38,8 @@ foo1 (int8x16_t a, int8_t b)\n   return vcmpgtq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "da107d414b2e4e541264788dfef9950bd72deba7", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpgtq_s16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgtq_s16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgtq_s16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgtq_s16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -34,4 +38,8 @@ foo1 (int16x8_t a, int16x8_t b)\n   return vcmpgtq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "4508698a856e235470688a3f7d9b3786e0d74c9f", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpgtq_s32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgtq_s32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgtq_s32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgtq_s32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -34,4 +38,8 @@ foo1 (int32x4_t a, int32x4_t b)\n   return vcmpgtq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "d65d27704d04502fe06608a70349ddd1d9c491ae", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpgtq_s8.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgtq_s8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgtq_s8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpgtq_s8.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -34,4 +38,8 @@ foo1 (int8x16_t a, int8x16_t b)\n   return vcmpgtq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "403ad11fee866263a9e20e104ee0fcea964180d1", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmphiq_m_n_u16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmphiq_m_n_u16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmphiq_m_n_u16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmphiq_m_n_u16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -60,4 +64,8 @@ foo2 (uint16x8_t a, mve_pred16_t p)\n   return vcmphiq_m (a, 1, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "a9c9816976d73fb12a939a9c34eab761527acb4c", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmphiq_m_n_u32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmphiq_m_n_u32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmphiq_m_n_u32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmphiq_m_n_u32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -60,4 +64,8 @@ foo2 (uint32x4_t a, mve_pred16_t p)\n   return vcmphiq_m (a, 1, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "16e3af1d5568ca85f61e9d871c5fa093cadc9d6b", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmphiq_m_n_u8.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmphiq_m_n_u8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmphiq_m_n_u8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmphiq_m_n_u8.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -60,4 +64,8 @@ foo2 (uint8x16_t a, mve_pred16_t p)\n   return vcmphiq_m (a, 1, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "139f69e392b6c50ba70ef4010e60477c9bee1747", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmphiq_m_u16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmphiq_m_u16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmphiq_m_u16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmphiq_m_u16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -42,4 +46,8 @@ foo1 (uint16x8_t a, uint16x8_t b, mve_pred16_t p)\n   return vcmphiq_m (a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "a33aed0a0052394ad8bf77e95a7a9b80b372ea47", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmphiq_m_u32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmphiq_m_u32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmphiq_m_u32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmphiq_m_u32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -42,4 +46,8 @@ foo1 (uint32x4_t a, uint32x4_t b, mve_pred16_t p)\n   return vcmphiq_m (a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "18e9b1907b8cf2fdb3f776263f324a83ca54ee4e", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmphiq_m_u8.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmphiq_m_u8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmphiq_m_u8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmphiq_m_u8.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -42,4 +46,8 @@ foo1 (uint8x16_t a, uint8x16_t b, mve_pred16_t p)\n   return vcmphiq_m (a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "085b82777366413ffb0bb0fb002e92b94693e0a5", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmphiq_n_u16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmphiq_n_u16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmphiq_n_u16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmphiq_n_u16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -48,4 +52,8 @@ foo2 (uint16x8_t a)\n   return vcmphiq (a, 1);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "a62a73ff24c3101cf1703361329bdfe773132799", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmphiq_n_u32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmphiq_n_u32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmphiq_n_u32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmphiq_n_u32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -48,4 +52,8 @@ foo2 (uint32x4_t a)\n   return vcmphiq (a, 1);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "f05c9d246433c4c0c05d1baca56083da6ba125ad", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmphiq_n_u8.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmphiq_n_u8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmphiq_n_u8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmphiq_n_u8.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -48,4 +52,8 @@ foo2 (uint8x16_t a)\n   return vcmphiq (a, 1);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "3cff050425db5a28b48064229fa165a11e9138bd", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmphiq_u16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmphiq_u16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmphiq_u16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmphiq_u16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -34,4 +38,8 @@ foo1 (uint16x8_t a, uint16x8_t b)\n   return vcmphiq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "39f0c12a75b4e55c5b069d875aa232be49607f4b", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmphiq_u32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmphiq_u32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmphiq_u32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmphiq_u32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -34,4 +38,8 @@ foo1 (uint32x4_t a, uint32x4_t b)\n   return vcmphiq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "69103f502f5db73b55b5c3a52f210936c5f70f89", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmphiq_u8.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmphiq_u8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmphiq_u8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmphiq_u8.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -34,4 +38,8 @@ foo1 (uint8x16_t a, uint8x16_t b)\n   return vcmphiq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "fb92b67325f07b4d192e205c85a6fecad70f0be9", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpleq_f16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpleq_f16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpleq_f16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpleq_f16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -34,4 +38,8 @@ foo1 (float16x8_t a, float16x8_t b)\n   return vcmpleq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "61ab55d83dac0d21923c8a80a7579e859db40542", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpleq_f32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpleq_f32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpleq_f32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpleq_f32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -34,4 +38,8 @@ foo1 (float32x4_t a, float32x4_t b)\n   return vcmpleq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "f866469eadbaea266405bb88fb98dda35f32c7c4", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpleq_m_f16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpleq_m_f16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpleq_m_f16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpleq_m_f16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -42,4 +46,8 @@ foo1 (float16x8_t a, float16x8_t b, mve_pred16_t p)\n   return vcmpleq_m (a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "5704e6d7a0bb81192fcc5ef84df4e926f14075ea", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpleq_m_f32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpleq_m_f32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpleq_m_f32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpleq_m_f32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -42,4 +46,8 @@ foo1 (float32x4_t a, float32x4_t b, mve_pred16_t p)\n   return vcmpleq_m (a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "5fa3be11c2a2856ea4bbb502f877df8b44f19302", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpleq_m_n_f16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpleq_m_n_f16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpleq_m_n_f16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpleq_m_n_f16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -60,4 +64,8 @@ foo2 (float16x8_t a, mve_pred16_t p)\n   return vcmpleq_m (a, 1.1, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "cbab9606b3c80a230b3251ced3370bb67362aba6", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpleq_m_n_f32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpleq_m_n_f32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpleq_m_n_f32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpleq_m_n_f32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -60,4 +64,8 @@ foo2 (float32x4_t a, mve_pred16_t p)\n   return vcmpleq_m (a, 1.1, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "d16b5c49e833c09945e1061f341c14f0ad3433be", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpleq_m_n_s16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpleq_m_n_s16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpleq_m_n_s16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpleq_m_n_s16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -42,4 +46,8 @@ foo1 (int16x8_t a, int16_t b, mve_pred16_t p)\n   return vcmpleq_m (a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "e9504fad271fd18f7a79ea445bfc3ac4ec8b3a18", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpleq_m_n_s32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpleq_m_n_s32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpleq_m_n_s32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpleq_m_n_s32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -42,4 +46,8 @@ foo1 (int32x4_t a, int32_t b, mve_pred16_t p)\n   return vcmpleq_m (a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "10709a8520c987584afd04bb9e5c81a83604391d", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpleq_m_n_s8.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpleq_m_n_s8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpleq_m_n_s8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpleq_m_n_s8.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -42,4 +46,8 @@ foo1 (int8x16_t a, int8_t b, mve_pred16_t p)\n   return vcmpleq_m (a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "59102a6eb601c13d086dbda263b1bf10258c6cef", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpleq_m_s16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpleq_m_s16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpleq_m_s16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpleq_m_s16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -42,4 +46,8 @@ foo1 (int16x8_t a, int16x8_t b, mve_pred16_t p)\n   return vcmpleq_m (a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "42d7d7fdbb3a3ce77037807464916f27fa670545", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpleq_m_s32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpleq_m_s32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpleq_m_s32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpleq_m_s32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -42,4 +46,8 @@ foo1 (int32x4_t a, int32x4_t b, mve_pred16_t p)\n   return vcmpleq_m (a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "3d1407baebf439a42eab5ca0477352f721d4dd64", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpleq_m_s8.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpleq_m_s8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpleq_m_s8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpleq_m_s8.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -42,4 +46,8 @@ foo1 (int8x16_t a, int8x16_t b, mve_pred16_t p)\n   return vcmpleq_m (a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "4f6276484ba48dc3c67ec6e4508251b6d81f747d", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpleq_n_f16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpleq_n_f16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpleq_n_f16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpleq_n_f16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -48,4 +52,8 @@ foo2 (float16x8_t a)\n   return vcmpleq (a, 1.1);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "e71dcb8f1742b7d433b98fb06f037d7f705a4e3a", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpleq_n_f32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpleq_n_f32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpleq_n_f32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpleq_n_f32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -48,4 +52,8 @@ foo2 (float32x4_t a)\n   return vcmpleq (a, 1.1);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "6aad8de937a27963e44b3318864e3dbe6e404dea", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpleq_n_s16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpleq_n_s16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpleq_n_s16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpleq_n_s16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -34,4 +38,8 @@ foo1 (int16x8_t a, int16_t b)\n   return vcmpleq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "fedc87fa318a892aff8bc2cd7e41ba58ed91de6b", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpleq_n_s32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpleq_n_s32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpleq_n_s32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpleq_n_s32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -34,4 +38,8 @@ foo1 (int32x4_t a, int32_t b)\n   return vcmpleq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "066dd808771628aaac59538c3311ff0a3198b1a3", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpleq_n_s8.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpleq_n_s8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpleq_n_s8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpleq_n_s8.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -34,4 +38,8 @@ foo1 (int8x16_t a, int8_t b)\n   return vcmpleq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "00872c3503c02ff762f09ca1693ac86f64668c7c", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpleq_s16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpleq_s16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpleq_s16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpleq_s16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -34,4 +38,8 @@ foo1 (int16x8_t a, int16x8_t b)\n   return vcmpleq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "8f595a0d24bd280ab9566119cacb6eec5aadb5a9", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpleq_s32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpleq_s32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpleq_s32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpleq_s32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -34,4 +38,8 @@ foo1 (int32x4_t a, int32x4_t b)\n   return vcmpleq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "a827b9b6f5d9164205dd24f55c7f9a559db9e5fb", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpleq_s8.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpleq_s8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpleq_s8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpleq_s8.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -34,4 +38,8 @@ foo1 (int8x16_t a, int8x16_t b)\n   return vcmpleq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "15855e1bbedbdb453cfacd07a06ae9137bbb7d24", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpltq_f16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpltq_f16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpltq_f16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpltq_f16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -34,4 +38,8 @@ foo1 (float16x8_t a, float16x8_t b)\n   return vcmpltq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "d11c9e2f1e540ee354a4f0e7219eea3fc49368d1", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpltq_f32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpltq_f32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpltq_f32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpltq_f32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -34,4 +38,8 @@ foo1 (float32x4_t a, float32x4_t b)\n   return vcmpltq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "efb525cacce0f6e26445fd49a26d2164a759c03f", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpltq_m_f16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpltq_m_f16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpltq_m_f16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpltq_m_f16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -42,4 +46,8 @@ foo1 (float16x8_t a, float16x8_t b, mve_pred16_t p)\n   return vcmpltq_m (a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "6c788202199e443842ee6e83065476082149ffd1", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpltq_m_f32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpltq_m_f32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpltq_m_f32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpltq_m_f32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -42,4 +46,8 @@ foo1 (float32x4_t a, float32x4_t b, mve_pred16_t p)\n   return vcmpltq_m (a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "2b29d72bbf6b0c20d5029ffa43165130fd93a8ea", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpltq_m_n_f16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpltq_m_n_f16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpltq_m_n_f16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpltq_m_n_f16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -60,4 +64,8 @@ foo2 (float16x8_t a, mve_pred16_t p)\n   return vcmpltq_m (a, 1.1, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "0c89d2982e57afdc1c378c9bddb6c0256b473424", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpltq_m_n_f32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpltq_m_n_f32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpltq_m_n_f32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpltq_m_n_f32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -60,4 +64,8 @@ foo2 (float32x4_t a, mve_pred16_t p)\n   return vcmpltq_m (a, 1.1, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "34984fa777273bccc381cf5937a525c2a7516c15", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpltq_m_n_s16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpltq_m_n_s16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpltq_m_n_s16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpltq_m_n_s16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -42,4 +46,8 @@ foo1 (int16x8_t a, int16_t b, mve_pred16_t p)\n   return vcmpltq_m (a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "bb7c0a26bf162d899f17cf0e778f206fd908db7b", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpltq_m_n_s32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpltq_m_n_s32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpltq_m_n_s32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpltq_m_n_s32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -42,4 +46,8 @@ foo1 (int32x4_t a, int32_t b, mve_pred16_t p)\n   return vcmpltq_m (a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "035ce4540733787c4303ebac2d9522fe17876da9", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpltq_m_n_s8.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpltq_m_n_s8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpltq_m_n_s8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpltq_m_n_s8.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -42,4 +46,8 @@ foo1 (int8x16_t a, int8_t b, mve_pred16_t p)\n   return vcmpltq_m (a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "9776a4a64e9c8aab8a4e95d05797a5fb1c0e2e6a", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpltq_m_s16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpltq_m_s16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpltq_m_s16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpltq_m_s16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -42,4 +46,8 @@ foo1 (int16x8_t a, int16x8_t b, mve_pred16_t p)\n   return vcmpltq_m (a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "6a7459806ef92fd6770b57c747b62bcab83fe7f1", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpltq_m_s32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpltq_m_s32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpltq_m_s32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpltq_m_s32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -42,4 +46,8 @@ foo1 (int32x4_t a, int32x4_t b, mve_pred16_t p)\n   return vcmpltq_m (a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "ca08e1dadf17444bb0757c17e6b5307c118368b2", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpltq_m_s8.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpltq_m_s8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpltq_m_s8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpltq_m_s8.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -42,4 +46,8 @@ foo1 (int8x16_t a, int8x16_t b, mve_pred16_t p)\n   return vcmpltq_m (a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "c6fdb08d8ae08f13c6b7d3a2f747b834a286cc4a", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpltq_n_f16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpltq_n_f16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpltq_n_f16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpltq_n_f16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -48,4 +52,8 @@ foo2 (float16x8_t a)\n   return vcmpltq (a, 1.1);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "4f1ac3c09776a07e6671653dd9d3da808c81f033", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpltq_n_f32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpltq_n_f32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpltq_n_f32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpltq_n_f32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -48,4 +52,8 @@ foo2 (float32x4_t a)\n   return vcmpltq (a, 1.1);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "4c9d1d3d88705ecbdfa0b8f15fb8e3d0de7c26fe", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpltq_n_s16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpltq_n_s16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpltq_n_s16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpltq_n_s16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -34,4 +38,8 @@ foo1 (int16x8_t a, int16_t b)\n   return vcmpltq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "632c4aeca136afceafc414457f186c2419d3ad7b", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpltq_n_s32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpltq_n_s32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpltq_n_s32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpltq_n_s32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -34,4 +38,8 @@ foo1 (int32x4_t a, int32_t b)\n   return vcmpltq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "1eabc2e70bd2f0ece97b5280eff00b1ef883c6e5", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpltq_n_s8.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpltq_n_s8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpltq_n_s8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpltq_n_s8.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -34,4 +38,8 @@ foo1 (int8x16_t a, int8_t b)\n   return vcmpltq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "85117199a90fb27a7f2971518c68326b30deef20", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpltq_s16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpltq_s16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpltq_s16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpltq_s16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -34,4 +38,8 @@ foo1 (int16x8_t a, int16x8_t b)\n   return vcmpltq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "11379cf7ff81c2a3b68cd32a384f4c58868db4b2", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpltq_s32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpltq_s32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpltq_s32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpltq_s32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -34,4 +38,8 @@ foo1 (int32x4_t a, int32x4_t b)\n   return vcmpltq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "686ccd8eedb0e5699a9baec881cdefc0c1a38121", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpltq_s8.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpltq_s8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpltq_s8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpltq_s8.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -34,4 +38,8 @@ foo1 (int8x16_t a, int8x16_t b)\n   return vcmpltq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "20d722ca6499aab794428ab06251621f140cbb85", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpneq_f16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpneq_f16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpneq_f16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpneq_f16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -34,4 +38,8 @@ foo1 (float16x8_t a, float16x8_t b)\n   return vcmpneq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "1e4dcde89b1a9ae8f7de66ce1bf8ecf780bfabbf", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpneq_f32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpneq_f32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpneq_f32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpneq_f32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -34,4 +38,8 @@ foo1 (float32x4_t a, float32x4_t b)\n   return vcmpneq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "bafb7e8a956e90e566f9053bbf6e286265a2dce0", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpneq_m_f16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpneq_m_f16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpneq_m_f16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpneq_m_f16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -42,4 +46,8 @@ foo1 (float16x8_t a, float16x8_t b, mve_pred16_t p)\n   return vcmpneq_m (a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "168633d05c351c4f3753c87a46c9c3214772524a", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpneq_m_f32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpneq_m_f32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpneq_m_f32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpneq_m_f32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -42,4 +46,8 @@ foo1 (float32x4_t a, float32x4_t b, mve_pred16_t p)\n   return vcmpneq_m (a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "3b7951f4ee167c2adc951bae09aced33662ab4c0", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpneq_m_n_f16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpneq_m_n_f16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpneq_m_n_f16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpneq_m_n_f16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -60,4 +64,8 @@ foo2 (float16x8_t a, mve_pred16_t p)\n   return vcmpneq_m (a, 1.1, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "47b972cdeeb15d4c04c6217a9b89e559163d2958", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpneq_m_n_f32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpneq_m_n_f32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpneq_m_n_f32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpneq_m_n_f32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -60,4 +64,8 @@ foo2 (float32x4_t a, mve_pred16_t p)\n   return vcmpneq_m (a, 1.1, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "b16c64459425a2adcc7b34d35025a5b03a288a95", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpneq_m_n_s16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpneq_m_n_s16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpneq_m_n_s16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpneq_m_n_s16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -42,4 +46,8 @@ foo1 (int16x8_t a, int16_t b, mve_pred16_t p)\n   return vcmpneq_m (a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "2f8057050f10b0b61c2d0da4ec640e546aae9916", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpneq_m_n_s32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpneq_m_n_s32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpneq_m_n_s32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpneq_m_n_s32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -42,4 +46,8 @@ foo1 (int32x4_t a, int32_t b, mve_pred16_t p)\n   return vcmpneq_m (a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "4637bd10d2e224355b93c3a5c5ed44ab0a8e07c4", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpneq_m_n_s8.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpneq_m_n_s8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpneq_m_n_s8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpneq_m_n_s8.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -42,4 +46,8 @@ foo1 (int8x16_t a, int8_t b, mve_pred16_t p)\n   return vcmpneq_m (a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "90b23531f49b9344898bd1c2dab43049b7eafd63", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpneq_m_n_u16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpneq_m_n_u16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpneq_m_n_u16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpneq_m_n_u16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -60,4 +64,8 @@ foo2 (uint16x8_t a, mve_pred16_t p)\n   return vcmpneq_m (a, 1, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "c8b0c9527304f2d0551100821436140e7cd7ca77", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpneq_m_n_u32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpneq_m_n_u32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpneq_m_n_u32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpneq_m_n_u32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -60,4 +64,8 @@ foo2 (uint32x4_t a, mve_pred16_t p)\n   return vcmpneq_m (a, 1, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "d458b9ad15b8a20676c761e15b9f71a784ac0e7a", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpneq_m_n_u8.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpneq_m_n_u8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpneq_m_n_u8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpneq_m_n_u8.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -60,4 +64,8 @@ foo2 (uint8x16_t a, mve_pred16_t p)\n   return vcmpneq_m (a, 1, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "ea83993bd72a935b1fe6490f1b8eaed4c27860d2", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpneq_m_s16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpneq_m_s16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpneq_m_s16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpneq_m_s16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -42,4 +46,8 @@ foo1 (int16x8_t a, int16x8_t b, mve_pred16_t p)\n   return vcmpneq_m (a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "817060f8d73d2a5be72262917e4a1382beeb8d90", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpneq_m_s32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpneq_m_s32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpneq_m_s32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpneq_m_s32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -42,4 +46,8 @@ foo1 (int32x4_t a, int32x4_t b, mve_pred16_t p)\n   return vcmpneq_m (a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "9c0473d228e146bc8b1a22dbced76c6aa7c35dd4", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpneq_m_s8.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpneq_m_s8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpneq_m_s8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpneq_m_s8.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -42,4 +46,8 @@ foo1 (int8x16_t a, int8x16_t b, mve_pred16_t p)\n   return vcmpneq_m (a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "4f10b5a787e99aa07f4c9b2331856335de2656a5", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpneq_m_u16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpneq_m_u16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpneq_m_u16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpneq_m_u16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -42,4 +46,8 @@ foo1 (uint16x8_t a, uint16x8_t b, mve_pred16_t p)\n   return vcmpneq_m (a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "ba440459d5d9e9ad0f0c059ea86f4821dcb1b068", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpneq_m_u32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpneq_m_u32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpneq_m_u32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpneq_m_u32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -42,4 +46,8 @@ foo1 (uint32x4_t a, uint32x4_t b, mve_pred16_t p)\n   return vcmpneq_m (a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "ffe091bd082a9b0e9484ec499462c3b5d989e190", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpneq_m_u8.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpneq_m_u8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpneq_m_u8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpneq_m_u8.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -42,4 +46,8 @@ foo1 (uint8x16_t a, uint8x16_t b, mve_pred16_t p)\n   return vcmpneq_m (a, b, p);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "e36d8a95a85b9a12248f881d2d79e78e3d44a29e", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpneq_n_f16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpneq_n_f16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpneq_n_f16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpneq_n_f16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -48,4 +52,8 @@ foo2 (float16x8_t a)\n   return vcmpneq (a, 1.1);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "7262503eee6bb889ae3186d60d8a7d535fc49e31", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpneq_n_f32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpneq_n_f32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpneq_n_f32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpneq_n_f32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -48,4 +52,8 @@ foo2 (float32x4_t a)\n   return vcmpneq (a, 1.1);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "2e39b66b34cecc2c1a71506db146ebfbb4d227e9", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpneq_n_s16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpneq_n_s16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpneq_n_s16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpneq_n_s16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -34,4 +38,8 @@ foo1 (int16x8_t a, int16_t b)\n   return vcmpneq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "9471935d96f8e63aedcfce54b99a7c535c0b3280", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpneq_n_s32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpneq_n_s32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpneq_n_s32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpneq_n_s32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -34,4 +38,8 @@ foo1 (int32x4_t a, int32_t b)\n   return vcmpneq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "7d3d4ddd2c5f36e4c7f425270be4ea050a21d692", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpneq_n_s8.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpneq_n_s8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpneq_n_s8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpneq_n_s8.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -34,4 +38,8 @@ foo1 (int8x16_t a, int8_t b)\n   return vcmpneq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "71d878dff9fa20aa9d32c75123efbe10aae6170b", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpneq_n_u16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpneq_n_u16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpneq_n_u16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpneq_n_u16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -48,4 +52,8 @@ foo2 (uint16x8_t a)\n   return vcmpneq (a, 1);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "3f997e8e487cc370427326c9842066beb7caeee7", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpneq_n_u32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpneq_n_u32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpneq_n_u32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpneq_n_u32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -48,4 +52,8 @@ foo2 (uint32x4_t a)\n   return vcmpneq (a, 1);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "9917a95ffb7aa0e273a9137bd82d6d464a5de1cf", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpneq_n_u8.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpneq_n_u8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpneq_n_u8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpneq_n_u8.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -48,4 +52,8 @@ foo2 (uint8x16_t a)\n   return vcmpneq (a, 1);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "a3b0572c011ab0a5d642694c8c39e01e615c196d", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpneq_s16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpneq_s16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpneq_s16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpneq_s16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -34,4 +38,8 @@ foo1 (int16x8_t a, int16x8_t b)\n   return vcmpneq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "c6bf6ca82d73a1c1aa0adcfb7b5f057f3d250dd0", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpneq_s32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpneq_s32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpneq_s32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpneq_s32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -34,4 +38,8 @@ foo1 (int32x4_t a, int32x4_t b)\n   return vcmpneq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "99b343b04277df61ef6dbe071338985b468cddb1", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpneq_s8.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpneq_s8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpneq_s8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpneq_s8.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -34,4 +38,8 @@ foo1 (int8x16_t a, int8x16_t b)\n   return vcmpneq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "d676d9b3c22935fbc5453580ed61df4376c6db20", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpneq_u16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpneq_u16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpneq_u16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpneq_u16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -34,4 +38,8 @@ foo1 (uint16x8_t a, uint16x8_t b)\n   return vcmpneq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "56c399680354bffa4eade2f2f4b2daebbe7b40d8", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpneq_u32.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpneq_u32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpneq_u32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpneq_u32.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -34,4 +38,8 @@ foo1 (uint32x4_t a, uint32x4_t b)\n   return vcmpneq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "f906574d5e45b02450051746cfcf771890b81905", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcmpneq_u8.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpneq_u8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpneq_u8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcmpneq_u8.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -34,4 +38,8 @@ foo1 (uint8x16_t a, uint8x16_t b)\n   return vcmpneq (a, b);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "0458bb1bb7cd6a3f898f3138f86d9c52374ae48d", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vcreateq_f16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcreateq_f16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4f007398bc3f8fea812fb8cff4d7d0556d12f1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcreateq_f16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvcreateq_f16.c?ref=8d4f007398bc3f8fea812fb8cff4d7d0556d12f1", "patch": "@@ -5,6 +5,10 @@\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n /*\n **foo:\n **\t...\n@@ -31,4 +35,8 @@ foo1 ()\n   return vcreateq_f16 (1, 1);\n }\n \n+#ifdef __cplusplus\n+}\n+#endif\n+\n /* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}]}