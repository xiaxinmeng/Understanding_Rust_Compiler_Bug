{"sha": "60067b876326baff092554e5fb52e963a402e91b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjAwNjdiODc2MzI2YmFmZjA5MjU1NGU1ZmI1MmU5NjNhNDAyZTkxYg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2019-02-20T18:59:18Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2019-02-20T18:59:18Z"}, "message": "PR c++/87513 - 'sorry' mangling PMF template-id.\n\nHere build_offset_ref calls build_qualified_name to make a SCOPE_REF because\nthe dependent template arguments make type_dependent_expression_p (member)\ntrue.  We could probably work hard to prevent this, but it doesn't seem\nnecessary, and it's easy to fix write_expression to handle the result.\n\n\t* mangle.c (write_expression): Handle SCOPE_REF to BASELINK.\n\nFrom-SVN: r269048", "tree": {"sha": "2e39ac9ca78c434369f524c4904f7ba923b3ceed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2e39ac9ca78c434369f524c4904f7ba923b3ceed"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/60067b876326baff092554e5fb52e963a402e91b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60067b876326baff092554e5fb52e963a402e91b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/60067b876326baff092554e5fb52e963a402e91b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60067b876326baff092554e5fb52e963a402e91b/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e3fe9cfb2fe9393791c1a586fd537ffd9cbe9824", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3fe9cfb2fe9393791c1a586fd537ffd9cbe9824", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e3fe9cfb2fe9393791c1a586fd537ffd9cbe9824"}], "stats": {"total": 17, "additions": 16, "deletions": 1}, "files": [{"sha": "dc0d4a2081441c6df635fefde6fba13e649a4301", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60067b876326baff092554e5fb52e963a402e91b/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60067b876326baff092554e5fb52e963a402e91b/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=60067b876326baff092554e5fb52e963a402e91b", "patch": "@@ -1,3 +1,8 @@\n+2019-02-19  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/87513 - 'sorry' mangling PMF template-id.\n+\t* mangle.c (write_expression): Handle SCOPE_REF to BASELINK.\n+\n 2019-02-19  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/88380 - wrong-code with flexible array and NSDMI."}, {"sha": "777c4775bfd4b921cfa46bc10c96f2f86cfde7fb", "filename": "gcc/cp/mangle.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60067b876326baff092554e5fb52e963a402e91b/gcc%2Fcp%2Fmangle.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60067b876326baff092554e5fb52e963a402e91b/gcc%2Fcp%2Fmangle.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmangle.c?ref=60067b876326baff092554e5fb52e963a402e91b", "patch": "@@ -3003,7 +3003,8 @@ write_expression (tree expr)\n \t{\n \t  scope = TREE_OPERAND (expr, 0);\n \t  member = TREE_OPERAND (expr, 1);\n-\t  gcc_assert (!BASELINK_P (member));\n+\t  if (BASELINK_P (member))\n+\t    member = BASELINK_FUNCTIONS (member);\n \t}\n       else\n \t{"}, {"sha": "0328502208708f4ca2f3e5102fcbf850e8135ae2", "filename": "gcc/testsuite/g++.dg/cpp0x/decltype-tid1.C", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60067b876326baff092554e5fb52e963a402e91b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype-tid1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60067b876326baff092554e5fb52e963a402e91b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype-tid1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype-tid1.C?ref=60067b876326baff092554e5fb52e963a402e91b", "patch": "@@ -0,0 +1,9 @@\n+// PR c++/87513\n+// { dg-do compile { target c++11 } }\n+\n+struct A { template <long> void foo (); };\n+template <long t> auto bar () -> decltype (&A::foo<t>);\n+void foo ()\n+{\n+  bar<0> ();\n+}"}]}