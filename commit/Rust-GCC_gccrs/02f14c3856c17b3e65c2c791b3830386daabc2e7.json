{"sha": "02f14c3856c17b3e65c2c791b3830386daabc2e7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDJmMTRjMzg1NmMxN2IzZTY1YzJjNzkxYjM4MzAzODZkYWFiYzJlNw==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2004-09-02T22:26:08Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2004-09-02T22:26:08Z"}, "message": "* rtl.def (RANGE_INFO, RANGE_REG, RANGE_VAR, RANGE_LIVE): Kill.\n\nFrom-SVN: r86995", "tree": {"sha": "18527c70408468e40af7f7dbba0fa5bcf7c6e51a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/18527c70408468e40af7f7dbba0fa5bcf7c6e51a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/02f14c3856c17b3e65c2c791b3830386daabc2e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02f14c3856c17b3e65c2c791b3830386daabc2e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/02f14c3856c17b3e65c2c791b3830386daabc2e7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02f14c3856c17b3e65c2c791b3830386daabc2e7/comments", "author": null, "committer": null, "parents": [{"sha": "2fe7404ad443eacbce92cc0a695bd31d9b263bbb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2fe7404ad443eacbce92cc0a695bd31d9b263bbb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2fe7404ad443eacbce92cc0a695bd31d9b263bbb"}], "stats": {"total": 42, "additions": 4, "deletions": 38}, "files": [{"sha": "8c2573f9ccae1e6e097c86aac153a07ce4099da3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02f14c3856c17b3e65c2c791b3830386daabc2e7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02f14c3856c17b3e65c2c791b3830386daabc2e7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=02f14c3856c17b3e65c2c791b3830386daabc2e7", "patch": "@@ -1,3 +1,7 @@\n+2004-09-03  Jan Hubicka  <jh@suse.cz>\n+\n+\t* rtl.def (RANGE_INFO, RANGE_REG, RANGE_VAR, RANGE_LIVE): Kill.\n+\n 2004-09-02  Mark Mitchell  <mark@codesourcery.com>\n \n \t* config/arm/symbian.h (LIB_SPEC): Define to empty."}, {"sha": "4c678dbb67ea78970cf1eb45dc65ea2d7649292b", "filename": "gcc/rtl.def", "status": "modified", "additions": 0, "deletions": 38, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02f14c3856c17b3e65c2c791b3830386daabc2e7/gcc%2Frtl.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02f14c3856c17b3e65c2c791b3830386daabc2e7/gcc%2Frtl.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.def?ref=02f14c3856c17b3e65c2c791b3830386daabc2e7", "patch": "@@ -600,44 +600,6 @@ DEF_RTL_EXPR(HIGH, \"high\", \"e\", RTX_CONST_OBJ)\n    of a constant expression.  */\n DEF_RTL_EXPR(LO_SUM, \"lo_sum\", \"ee\", RTX_OBJ)\n \n-/* Header for range information.  Operand 0 is the NOTE_INSN_RANGE_BEG insn.\n-   Operand 1 is the NOTE_INSN_RANGE_END insn.  Operand 2 is a vector of all of\n-   the registers that can be substituted within this range.  Operand 3 is the\n-   number of calls in the range.  Operand 4 is the number of insns in the\n-   range.  Operand 5 is the unique range number for this range.  Operand 6 is\n-   the basic block # of the start of the live range.  Operand 7 is the basic\n-   block # of the end of the live range.  Operand 8 is the loop depth.  Operand\n-   9 is a bitmap of the registers live at the start of the range.  Operand 10\n-   is a bitmap of the registers live at the end of the range.  Operand 11 is\n-   marker number for the start of the range.  Operand 12 is the marker number\n-   for the end of the range.  */\n-DEF_RTL_EXPR(RANGE_INFO, \"range_info\", \"uuEiiiiiibbii\", RTX_EXTRA)\n-\n-/* Registers that can be substituted within the range.  Operand 0 is the\n-   original pseudo register number.  Operand 1 will be filled in with the\n-   pseudo register the value is copied for the duration of the range.  Operand\n-   2 is the number of references within the range to the register.  Operand 3\n-   is the number of sets or clobbers of the register in the range.  Operand 4\n-   is the number of deaths the register has.  Operand 5 is the copy flags that\n-   give the status of whether a copy is needed from the original register to\n-   the new register at the beginning of the range, or whether a copy from the\n-   new register back to the original at the end of the range.  Operand 6 is the\n-   live length.  Operand 7 is the number of calls that this register is live\n-   across.  Operand 8 is the symbol node of the variable if the register is a\n-   user variable.  Operand 9 is the block node that the variable is declared\n-   in if the register is a user variable.  */\n-DEF_RTL_EXPR(RANGE_REG, \"range_reg\", \"iiiiiiiitt\", RTX_EXTRA)\n-\n-/* Information about a local variable's ranges.  Operand 0 is an EXPR_LIST of\n-   the different ranges a variable is in where it is copied to a different\n-   pseudo register.  Operand 1 is the block that the variable is declared in.\n-   Operand 2 is the number of distinct ranges.  */\n-DEF_RTL_EXPR(RANGE_VAR, \"range_var\", \"eti\", RTX_EXTRA)\n-\n-/* Information about the registers that are live at the current point.  Operand\n-   0 is the live bitmap.  Operand 1 is the original block number.  */\n-DEF_RTL_EXPR(RANGE_LIVE, \"range_live\", \"bi\", RTX_EXTRA)\n-\n /* Describes a merge operation between two vector values.\n    Operands 0 and 1 are the vectors to be merged, operand 2 is a bitmask\n    that specifies where the parts of the result are taken from.  Set bits"}]}