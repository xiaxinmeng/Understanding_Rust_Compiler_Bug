{"sha": "3eb96d01d4cd50c20e35521429b523fe96ea9cb3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2ViOTZkMDFkNGNkNTBjMjBlMzU1MjE0MjliNTIzZmU5NmVhOWNiMw==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2009-08-16T17:00:30Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2009-08-16T17:00:30Z"}, "message": "alpha.c (alpha_and_function): Handle NULL_RTX returned from prev_active_insn.\n\n\t* config/alpha/alpha.c (alpha_and_function): Handle NULL_RTX returned\n\tfrom prev_active_insn.\n\nFrom-SVN: r150802", "tree": {"sha": "398cb2d41709b78be1fa9fd90dc423832ff7b88b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/398cb2d41709b78be1fa9fd90dc423832ff7b88b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3eb96d01d4cd50c20e35521429b523fe96ea9cb3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3eb96d01d4cd50c20e35521429b523fe96ea9cb3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3eb96d01d4cd50c20e35521429b523fe96ea9cb3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3eb96d01d4cd50c20e35521429b523fe96ea9cb3/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "164709cfe671e51fcf6c687847549f01a51366c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/164709cfe671e51fcf6c687847549f01a51366c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/164709cfe671e51fcf6c687847549f01a51366c4"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "5a8aa3620d3f89d806d2fb72fa00abc4c7d2a232", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3eb96d01d4cd50c20e35521429b523fe96ea9cb3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3eb96d01d4cd50c20e35521429b523fe96ea9cb3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3eb96d01d4cd50c20e35521429b523fe96ea9cb3", "patch": "@@ -1,3 +1,8 @@\n+2009-08-16  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/alpha/alpha.c (alpha_and_function): Handle NULL_RTX returned\n+\tfrom prev_active_insn.\n+\n 2009-08-16  Anatoly Sokolov  <aesok@post.ru>\n \n \t* config/avr/avr.h (AVR_HAVE_8BIT_SP): New macros."}, {"sha": "8dc9a3e68cf0b50b2081695061b4f8bbdb1fad28", "filename": "gcc/config/alpha/alpha.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3eb96d01d4cd50c20e35521429b523fe96ea9cb3/gcc%2Fconfig%2Falpha%2Falpha.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3eb96d01d4cd50c20e35521429b523fe96ea9cb3/gcc%2Fconfig%2Falpha%2Falpha.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.c?ref=3eb96d01d4cd50c20e35521429b523fe96ea9cb3", "patch": "@@ -8603,7 +8603,7 @@ alpha_end_function (FILE *file, const char *fnname, tree decl ATTRIBUTE_UNUSED)\n   insn = get_last_insn ();\n   if (!INSN_P (insn))\n     insn = prev_active_insn (insn);\n-  if (CALL_P (insn))\n+  if (insn && CALL_P (insn))\n     output_asm_insn (get_insn_template (CODE_FOR_nop, NULL), NULL);\n \n #if TARGET_ABI_OSF"}]}