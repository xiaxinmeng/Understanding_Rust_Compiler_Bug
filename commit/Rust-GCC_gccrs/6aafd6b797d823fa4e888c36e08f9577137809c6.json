{"sha": "6aafd6b797d823fa4e888c36e08f9577137809c6", "node_id": "C_kwDOANBUbNoAKDZhYWZkNmI3OTdkODIzZmE0ZTg4OGMzNmUwOGY5NTc3MTM3ODA5YzY", "commit": {"author": {"name": "Kito Cheng", "email": "kito.cheng@sifive.com", "date": "2022-09-09T08:39:08Z"}, "committer": {"name": "Kito Cheng", "email": "kito.cheng@sifive.com", "date": "2022-09-09T09:53:21Z"}, "message": "RISC-V: Suppress build warnings\n\n../../gcc/common/config/riscv/riscv-common.cc: In function 'const char* riscv_multi_lib_check(int, const char**)':\n../../gcc/common/config/riscv/riscv-common.cc:1451:11: error: bare apostrophe ''' in format [-Werror=format-diag]\n 1451 |       \"Can't find suitable multilib set for %<-march=%s%>/%<-mabi=%s%>\",\n      |           ^\n../../gcc/common/config/riscv/riscv-common.cc:1451:7: note: if avoiding the apostrophe is not feasible, enclose it in a pair of '%<' and '%>' directives instead\n 1451 |       \"Can't find suitable multilib set for %<-march=%s%>/%<-mabi=%s%>\",\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n../../gcc/common/config/riscv/riscv-common.cc: At global scope:\n../../gcc/common/config/riscv/riscv-common.cc:1492:1: error: 'int riscv_check_conds(const switchstr*, int, int, const std::vector<std::__cxx11::basic_string<char> >&)' defined but not used [-Werror=unused-function]\n 1492 | riscv_check_conds (\n      | ^~~~~~~~~~~~~~~~~\n../../gcc/common/config/riscv/riscv-common.cc:1374:1: error: 'const char* find_last_appear_switch(const switchstr*, int, const char*)' defined but not used [-Werror=unused-function]\n 1374 | find_last_appear_switch (\n      | ^~~~~~~~~~~~~~~~~~~~~~~\ncc1plus: all warnings being treated as errors\nmake[3]: *** [Makefile:2442: riscv-common.o] Error 1\n\ngcc/ChangeLog:\n\n\t* common/config/riscv/riscv-common.cc (RISCV_USE_CUSTOMISED_MULTI_LIB):\n\tMove forward for cover all all necessary functions for suppress\n\tunused function warnings.\n\t(riscv_multi_lib_check): Move forward, and tweak message to suppress\n\t-Werror=format-diag warning.", "tree": {"sha": "0661b2a7bc4581c5996149a90718febb2a0176a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0661b2a7bc4581c5996149a90718febb2a0176a6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6aafd6b797d823fa4e888c36e08f9577137809c6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6aafd6b797d823fa4e888c36e08f9577137809c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6aafd6b797d823fa4e888c36e08f9577137809c6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6aafd6b797d823fa4e888c36e08f9577137809c6/comments", "author": {"login": "kito-cheng", "id": 2723185, "node_id": "MDQ6VXNlcjI3MjMxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kito-cheng", "html_url": "https://github.com/kito-cheng", "followers_url": "https://api.github.com/users/kito-cheng/followers", "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions", "organizations_url": "https://api.github.com/users/kito-cheng/orgs", "repos_url": "https://api.github.com/users/kito-cheng/repos", "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/kito-cheng/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kito-cheng", "id": 2723185, "node_id": "MDQ6VXNlcjI3MjMxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kito-cheng", "html_url": "https://github.com/kito-cheng", "followers_url": "https://api.github.com/users/kito-cheng/followers", "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions", "organizations_url": "https://api.github.com/users/kito-cheng/orgs", "repos_url": "https://api.github.com/users/kito-cheng/repos", "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/kito-cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "923da63e0f69b091014df5cc91498756053b1a46", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/923da63e0f69b091014df5cc91498756053b1a46", "html_url": "https://github.com/Rust-GCC/gccrs/commit/923da63e0f69b091014df5cc91498756053b1a46"}], "stats": {"total": 36, "additions": 18, "deletions": 18}, "files": [{"sha": "77219162eeb0ae77d09b51ab432b4f7810da8fd7", "filename": "gcc/common/config/riscv/riscv-common.cc", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aafd6b797d823fa4e888c36e08f9577137809c6/gcc%2Fcommon%2Fconfig%2Friscv%2Friscv-common.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aafd6b797d823fa4e888c36e08f9577137809c6/gcc%2Fcommon%2Fconfig%2Friscv%2Friscv-common.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon%2Fconfig%2Friscv%2Friscv-common.cc?ref=6aafd6b797d823fa4e888c36e08f9577137809c6", "patch": "@@ -1366,6 +1366,24 @@ riscv_expand_arch_from_cpu (int argc ATTRIBUTE_UNUSED,\n   return xasprintf (\"-march=%s\", arch.c_str());\n }\n \n+/* Report error if not found suitable multilib.  */\n+const char *\n+riscv_multi_lib_check (int argc ATTRIBUTE_UNUSED,\n+\t\t       const char **argv ATTRIBUTE_UNUSED)\n+{\n+  if (riscv_no_matched_multi_lib)\n+    fatal_error (\n+      input_location,\n+      \"Cannot find suitable multilib set for %<-march=%s%>/%<-mabi=%s%>\",\n+      riscv_current_arch_str.c_str (),\n+      riscv_current_abi_str.c_str ());\n+\n+  return \"\";\n+}\n+\n+/* We only override this in bare-metal toolchain.  */\n+#ifdef RISCV_USE_CUSTOMISED_MULTI_LIB\n+\n /* Find last switch with the prefix, options are take last one in general,\n    return NULL if not found, and return the option value if found, it could\n    return empty string if the option has no value.  */\n@@ -1440,21 +1458,6 @@ riscv_multi_lib_info_t::parse (\n   return true;\n }\n \n-/* Report error if not found suitable multilib.  */\n-const char *\n-riscv_multi_lib_check (int argc ATTRIBUTE_UNUSED,\n-\t\t       const char **argv ATTRIBUTE_UNUSED)\n-{\n-  if (riscv_no_matched_multi_lib)\n-    fatal_error (\n-      input_location,\n-      \"Can't find suitable multilib set for %<-march=%s%>/%<-mabi=%s%>\",\n-      riscv_current_arch_str.c_str (),\n-      riscv_current_abi_str.c_str ());\n-\n-  return \"\";\n-}\n-\n /* Checking ARG is not appeared in SWITCHES if NOT_ARG is set or\n    ARG is appeared if NOT_ARG is not set.  */\n \n@@ -1534,9 +1537,6 @@ riscv_check_conds (\n   return match_score + ok_count * 100;\n }\n \n-/* We only override this in bare-metal toolchain.  */\n-#ifdef RISCV_USE_CUSTOMISED_MULTI_LIB\n-\n /* Implement TARGET_COMPUTE_MULTILIB.  */\n static const char *\n riscv_compute_multilib ("}]}