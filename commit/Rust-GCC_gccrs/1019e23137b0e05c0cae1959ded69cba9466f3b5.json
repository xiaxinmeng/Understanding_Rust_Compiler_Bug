{"sha": "1019e23137b0e05c0cae1959ded69cba9466f3b5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTAxOWUyMzEzN2IwZTA1YzBjYWUxOTU5ZGVkNjljYmE5NDY2ZjNiNQ==", "commit": {"author": {"name": "Ghjuvan Lacambre", "email": "lacambre@adacore.com", "date": "2020-08-14T09:34:06Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-10-22T12:11:20Z"}, "message": "[Ada] Fix error message for import aspect\n\ngcc/ada/\n\n\t* sem_prag.adb (Process_Convention,\n\tProcess_Import_Or_Interface): Fix error message.", "tree": {"sha": "b566a2e0647e7a47f455d79c442b84a003be0269", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b566a2e0647e7a47f455d79c442b84a003be0269"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1019e23137b0e05c0cae1959ded69cba9466f3b5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1019e23137b0e05c0cae1959ded69cba9466f3b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1019e23137b0e05c0cae1959ded69cba9466f3b5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1019e23137b0e05c0cae1959ded69cba9466f3b5/comments", "author": {"login": "glacambre", "id": 11534587, "node_id": "MDQ6VXNlcjExNTM0NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/11534587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/glacambre", "html_url": "https://github.com/glacambre", "followers_url": "https://api.github.com/users/glacambre/followers", "following_url": "https://api.github.com/users/glacambre/following{/other_user}", "gists_url": "https://api.github.com/users/glacambre/gists{/gist_id}", "starred_url": "https://api.github.com/users/glacambre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/glacambre/subscriptions", "organizations_url": "https://api.github.com/users/glacambre/orgs", "repos_url": "https://api.github.com/users/glacambre/repos", "events_url": "https://api.github.com/users/glacambre/events{/privacy}", "received_events_url": "https://api.github.com/users/glacambre/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8be08b9b67df52d90280f3b1314dc038943ffa3f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8be08b9b67df52d90280f3b1314dc038943ffa3f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8be08b9b67df52d90280f3b1314dc038943ffa3f"}], "stats": {"total": 24, "additions": 18, "deletions": 6}, "files": [{"sha": "4c7131accf1135598f08b8fc3d1051d0f4e5b8ca", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 18, "deletions": 6, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1019e23137b0e05c0cae1959ded69cba9466f3b5/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1019e23137b0e05c0cae1959ded69cba9466f3b5/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=1019e23137b0e05c0cae1959ded69cba9466f3b5", "patch": "@@ -8270,8 +8270,13 @@ package body Sem_Prag is\n             --  Accept Intrinsic Export on types if Relaxed_RM_Semantics\n \n             if not (Is_Type (E) and then Relaxed_RM_Semantics) then\n-               Error_Pragma_Arg\n-                 (\"second argument of pragma% must be a subprogram\", Arg2);\n+               if From_Aspect_Specification (N) then\n+                  Error_Pragma_Arg\n+                     (\"entity for aspect% must be a subprogram\", Arg2);\n+               else\n+                  Error_Pragma_Arg\n+                     (\"second argument of pragma% must be a subprogram\", Arg2);\n+               end if;\n             end if;\n \n          --  Special checks for C_Variadic_n\n@@ -9543,10 +9548,17 @@ package body Sem_Prag is\n             Process_Import_Predefined_Type;\n \n          else\n-            Error_Pragma_Arg\n-              (\"second argument of pragma% must be object, subprogram \"\n-               & \"or incomplete type\",\n-               Arg2);\n+            if From_Aspect_Specification (N) then\n+               Error_Pragma_Arg\n+                  (\"entity for aspect% must be object, subprogram \"\n+                     & \"or incomplete type\",\n+                   Arg2);\n+            else\n+               Error_Pragma_Arg\n+                  (\"second argument of pragma% must be object, subprogram \"\n+                     & \"or incomplete type\",\n+                   Arg2);\n+            end if;\n          end if;\n \n          --  If this pragma applies to a compilation unit, then the unit, which"}]}