{"sha": "f86e187e12db14ad1cced26b9f8aafb06498e208", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Zjg2ZTE4N2UxMmRiMTRhZDFjY2VkMjZiOWY4YWFmYjA2NDk4ZTIwOA==", "commit": {"author": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2021-02-19T17:07:26Z"}, "committer": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2021-02-19T17:07:26Z"}, "message": "Fortran: Fix coarray handling for gfc_dep_resolver [PR99010]\n\nCheck failed if identical = false was requested or for -fcoarray=single\nif an array ref was for a coindexed scalar.\n\ngcc/fortran/ChangeLog:\n\n\tPR fortran/99010\n\t* dependency.c (gfc_dep_resolver): Fix coarray handling.\n\ngcc/testsuite/ChangeLog:\n\n\tPR fortran/99010\n\t* gfortran.dg/coarray/array_temporary-1.f90: New test.", "tree": {"sha": "2a9a86175927a7508acd3617bbcf50c6e1fa0a73", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2a9a86175927a7508acd3617bbcf50c6e1fa0a73"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f86e187e12db14ad1cced26b9f8aafb06498e208", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f86e187e12db14ad1cced26b9f8aafb06498e208", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f86e187e12db14ad1cced26b9f8aafb06498e208", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f86e187e12db14ad1cced26b9f8aafb06498e208/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "72d91d6cd41f2987339a98c2c64f70b3850f4e0b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72d91d6cd41f2987339a98c2c64f70b3850f4e0b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/72d91d6cd41f2987339a98c2c64f70b3850f4e0b"}], "stats": {"total": 27, "additions": 24, "deletions": 3}, "files": [{"sha": "e1336e1c65458b4606c283f01051a3269b828487", "filename": "gcc/fortran/dependency.c", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f86e187e12db14ad1cced26b9f8aafb06498e208/gcc%2Ffortran%2Fdependency.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f86e187e12db14ad1cced26b9f8aafb06498e208/gcc%2Ffortran%2Fdependency.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdependency.c?ref=f86e187e12db14ad1cced26b9f8aafb06498e208", "patch": "@@ -2145,16 +2145,24 @@ gfc_dep_resolver (gfc_ref *lref, gfc_ref *rref, gfc_reverse *reverse,\n \tcase REF_ARRAY:\n \t  /* Coarrays: If there is a coindex, either the image differs and there\n \t     is no overlap or the image is the same - then the normal analysis\n-\t     applies.  Hence, return early only if 'identical' is required and\n-\t     either ref is coindexed and more than one image can exist.  */\n-\t  if (identical && flag_coarray != GFC_FCOARRAY_SINGLE\n+\t     applies.  Hence, return early if either ref is coindexed and more\n+\t     than one image can exist.  */\n+\t  if (flag_coarray != GFC_FCOARRAY_SINGLE\n \t      && ((lref->u.ar.codimen\n \t\t   && lref->u.ar.dimen_type[lref->u.ar.dimen]\n \t\t      != DIMEN_THIS_IMAGE)\n \t\t  || (rref->u.ar.codimen\n \t\t      && lref->u.ar.dimen_type[lref->u.ar.dimen]\n \t\t\t != DIMEN_THIS_IMAGE)))\n \t    return 1;\n+\t  if (lref->u.ar.dimen == 0 || rref->u.ar.dimen == 0)\n+\t    {\n+\t      /* Coindexed scalar coarray with GFC_FCOARRAY_SINGLE.  */\n+\t      if (lref->u.ar.dimen || rref->u.ar.dimen)\n+\t\treturn 1;  /* Just to be sure.  */\n+\t      fin_dep = GFC_DEP_EQUAL;\n+\t      break;\n+\t    }\n \n \t  if (ref_same_as_full_array (lref, rref))\n \t    return identical;"}, {"sha": "454929cf53baf0ca321c1a35b0630dbcf8b2b38b", "filename": "gcc/testsuite/gfortran.dg/coarray/array_temporary-1.f90", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f86e187e12db14ad1cced26b9f8aafb06498e208/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray%2Farray_temporary-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f86e187e12db14ad1cced26b9f8aafb06498e208/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray%2Farray_temporary-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray%2Farray_temporary-1.f90?ref=f86e187e12db14ad1cced26b9f8aafb06498e208", "patch": "@@ -0,0 +1,13 @@\n+! PR fortran/99010\n+!\n+! Follow-up to PR fortran/98913\n+!\n+! Contributed by G. Steinmetz\n+!\n+program p\n+   integer :: x[*]\n+   x = this_image()\n+   if ( this_image() == 2 ) then\n+      x = x[1]\n+   end if\n+end"}]}