{"sha": "7e4f89a23e32604f71f8f6756c8856bf07bf7ac2", "node_id": "C_kwDOANBUbNoAKDdlNGY4OWEyM2UzMjYwNGY3MWY4ZjY3NTZjODg1NmJmMDdiZjdhYzI", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2022-02-03T10:44:00Z"}, "committer": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2022-02-03T10:44:00Z"}, "message": "aarch64: Add missing movmisalign patterns\n\nThe Advanced SIMD movmisalign patterns didn't handle 16-bit\nFP modes, which meant that the vector loop for:\n\n  void\n  test (_Float16 *data)\n  {\n    _Pragma (\"omp simd\")\n    for (int i = 0; i < 8; ++i)\n      data[i] = 1.0;\n  }\n\nwould be versioned for alignment.\n\nThis was causing some new failures in aarch64/sve/single_5.c:\n\nFAIL: gcc.target/aarch64/sve/single_5.c scan-assembler-not \\\\tb\nFAIL: gcc.target/aarch64/sve/single_5.c scan-assembler-not \\\\tcmp\nFAIL: gcc.target/aarch64/sve/single_5.c scan-assembler-times \\\\tstr\\\\tq[0-9]+, 10\n\nbut I didn't look into what changed from earlier releases.\nAdding the missing modes removes some existing xfails.\n\ngcc/\n\t* config/aarch64/aarch64-simd.md (movmisalign<mode>): Extend from\n\tVALL to VALL_F16.\n\ngcc/testsuite/\n\t* gcc.target/aarch64/sve/single_5.c: Remove some XFAILs.", "tree": {"sha": "ed93c9ad662aac4ca6cea855a66105e359ac3646", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ed93c9ad662aac4ca6cea855a66105e359ac3646"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7e4f89a23e32604f71f8f6756c8856bf07bf7ac2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e4f89a23e32604f71f8f6756c8856bf07bf7ac2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e4f89a23e32604f71f8f6756c8856bf07bf7ac2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e4f89a23e32604f71f8f6756c8856bf07bf7ac2/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6a770526600a7ffda1f288fa481a4322d5f149b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a770526600a7ffda1f288fa481a4322d5f149b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a770526600a7ffda1f288fa481a4322d5f149b4"}], "stats": {"total": 11, "additions": 5, "deletions": 6}, "files": [{"sha": "6646e069ad293dd9b2216464d267bf00c91fbd13", "filename": "gcc/config/aarch64/aarch64-simd.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e4f89a23e32604f71f8f6756c8856bf07bf7ac2/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e4f89a23e32604f71f8f6756c8856bf07bf7ac2/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md?ref=7e4f89a23e32604f71f8f6756c8856bf07bf7ac2", "patch": "@@ -50,8 +50,8 @@\n )\n \n (define_expand \"movmisalign<mode>\"\n-  [(set (match_operand:VALL 0 \"nonimmediate_operand\")\n-        (match_operand:VALL 1 \"general_operand\"))]\n+  [(set (match_operand:VALL_F16 0 \"nonimmediate_operand\")\n+        (match_operand:VALL_F16 1 \"general_operand\"))]\n   \"TARGET_SIMD && !STRICT_ALIGNMENT\"\n {\n   /* This pattern is not permitted to fail during expansion: if both arguments"}, {"sha": "233118bbb383bbdf2d342d057ead024f92804221", "filename": "gcc/testsuite/gcc.target/aarch64/sve/single_5.c", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e4f89a23e32604f71f8f6756c8856bf07bf7ac2/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fsingle_5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e4f89a23e32604f71f8f6756c8856bf07bf7ac2/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fsingle_5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fsingle_5.c?ref=7e4f89a23e32604f71f8f6756c8856bf07bf7ac2", "patch": "@@ -13,15 +13,14 @@\n /* { dg-final { scan-assembler-times {\\tmovi\\tv[0-9]+\\.4s, 0x6\\n} 1 } } */\n /* { dg-final { scan-assembler-times {\\tmov\\tz[0-9]+\\.d, #7\\n} 1 { xfail *-*-* } } } */\n /* { dg-final { scan-assembler-times {\\tmov\\tz[0-9]+\\.d, #8\\n} 1 { xfail *-*-* } } } */\n-/* { dg-final { scan-assembler-times {\\tfmov\\tv[0-9]+\\.8h, 1\\.0e\\+0\\n} 1 { xfail *-*-* } } } */\n+/* { dg-final { scan-assembler-times {\\tfmov\\tv[0-9]+\\.8h, 1\\.0e\\+0\\n} 1 } } */\n /* { dg-final { scan-assembler-times {\\tfmov\\tv[0-9]+\\.4s, 2\\.0e\\+0\\n} 1 } } */\n /* { dg-final { scan-assembler-times {\\tfmov\\tv[0-9]+\\.2d, 3\\.0e\\+0\\n} 1 } } */\n \n-/* { dg-final { scan-assembler-times {\\tstr\\tq[0-9]+,} 11 { xfail *-*-* } } } */\n-/* { dg-final { scan-assembler-times {\\tstr\\tq[0-9]+,} 10 } } */\n+/* { dg-final { scan-assembler-times {\\tstr\\tq[0-9]+,} 11 } } */\n \n /* { dg-final { scan-assembler-not {\\twhile} } } */\n /* { dg-final { scan-assembler-not {\\tb} } } */\n /* { dg-final { scan-assembler-not {\\tcmp} } } */\n /* { dg-final { scan-assembler-not {\\tindex} } } */\n-/* { dg-final { scan-assembler-not {\\tptrue\\t} { xfail *-*-* } } } */\n+/* { dg-final { scan-assembler-not {\\tptrue\\t} } } */"}]}