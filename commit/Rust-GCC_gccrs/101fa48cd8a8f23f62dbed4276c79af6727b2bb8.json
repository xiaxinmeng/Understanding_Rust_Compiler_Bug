{"sha": "101fa48cd8a8f23f62dbed4276c79af6727b2bb8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTAxZmE0OGNkOGE4ZjIzZjYyZGJlZDQyNzZjNzlhZjY3MjdiMmJiOA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2001-05-22T23:01:33Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2001-05-22T23:01:33Z"}, "message": "unwind-dw2-fde.c (__deregister_frame_info): Stubbify in favour of...\n\n        * unwind-dw2-fde.c (__deregister_frame_info): Stubbify in favour of...\n        (__deregister_frame_info_bases): New.\n        * unwind-dw2-fde.h: Declare it.\n        * libgcc-std.ver: Export it.\n        * crtstuff.c (__do_global_dtors_aux): Call it if we would have\n        called __register_frame_info_bases.\n\nFrom-SVN: r42473", "tree": {"sha": "e3bcddcf6b42080b945be9ff61a0a1a76945106c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e3bcddcf6b42080b945be9ff61a0a1a76945106c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/101fa48cd8a8f23f62dbed4276c79af6727b2bb8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/101fa48cd8a8f23f62dbed4276c79af6727b2bb8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/101fa48cd8a8f23f62dbed4276c79af6727b2bb8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/101fa48cd8a8f23f62dbed4276c79af6727b2bb8/comments", "author": null, "committer": null, "parents": [{"sha": "b5e85669dd715ae2b2a07ca0b0483483cad8edd7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5e85669dd715ae2b2a07ca0b0483483cad8edd7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b5e85669dd715ae2b2a07ca0b0483483cad8edd7"}], "stats": {"total": 45, "additions": 44, "deletions": 1}, "files": [{"sha": "f33c86f404f86c77978103235b4617294c980e5a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/101fa48cd8a8f23f62dbed4276c79af6727b2bb8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/101fa48cd8a8f23f62dbed4276c79af6727b2bb8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=101fa48cd8a8f23f62dbed4276c79af6727b2bb8", "patch": "@@ -1,3 +1,12 @@\n+2001-05-22  Richard Henderson  <rth@redhat.com>\n+\n+\t* unwind-dw2-fde.c (__deregister_frame_info): Stubbify in favour of...\n+\t(__deregister_frame_info_bases): New.\n+\t* unwind-dw2-fde.h: Declare it.\n+\t* libgcc-std.ver: Export it.\n+\t* crtstuff.c (__do_global_dtors_aux): Call it if we would have\n+\tcalled __register_frame_info_bases.\n+\n 2001-05-22  Loren J. Rittle  <ljrittle@acm.org>\n \n \t* config/freebsd.h (FBSD_CPP_PREDEFINES): Use #endif/#if pair"}, {"sha": "862eeacfc61739dccbfa69b42b4a25d86e5500c0", "filename": "gcc/crtstuff.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/101fa48cd8a8f23f62dbed4276c79af6727b2bb8/gcc%2Fcrtstuff.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/101fa48cd8a8f23f62dbed4276c79af6727b2bb8/gcc%2Fcrtstuff.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcrtstuff.c?ref=101fa48cd8a8f23f62dbed4276c79af6727b2bb8", "patch": "@@ -95,6 +95,8 @@ extern void __register_frame_info_bases (void *, struct object *,\n \t\t\t\t  TARGET_ATTRIBUTE_WEAK;\n extern void *__deregister_frame_info (void *)\n \t\t\t\t     TARGET_ATTRIBUTE_WEAK;\n+extern void *__deregister_frame_info_bases (void *)\n+\t\t\t\t     TARGET_ATTRIBUTE_WEAK;\n \n #ifndef OBJECT_FORMAT_MACHO\n \n@@ -210,9 +212,17 @@ __do_global_dtors_aux (void)\n     }\n \n #ifdef EH_FRAME_SECTION_ASM_OP\n+#if defined(CRT_GET_RFIB_TEXT) || defined(CRT_GET_RFIB_DATA)\n+  /* If we used the new __register_frame_info_bases interface,\n+     make sure that we deregister from the same place.  */\n+  if (__deregister_frame_info_bases)\n+    __deregister_frame_info_bases (__EH_FRAME_BEGIN__);\n+#else\n   if (__deregister_frame_info)\n     __deregister_frame_info (__EH_FRAME_BEGIN__);\n #endif\n+#endif\n+\n   completed = 1;\n }\n "}, {"sha": "73c9f6fcbbe5da4a5e2f8a3f84a17dd39bec3e09", "filename": "gcc/libgcc-std.ver", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/101fa48cd8a8f23f62dbed4276c79af6727b2bb8/gcc%2Flibgcc-std.ver", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/101fa48cd8a8f23f62dbed4276c79af6727b2bb8/gcc%2Flibgcc-std.ver", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flibgcc-std.ver?ref=101fa48cd8a8f23f62dbed4276c79af6727b2bb8", "patch": "@@ -125,6 +125,7 @@ GCC_3.0 {\n   _Unwind_SetIP\n   __deregister_frame\n   __deregister_frame_info\n+  __deregister_frame_info_bases\n   __register_frame\n   __register_frame_info\n   __register_frame_info_bases"}, {"sha": "7b5c7574d9cfbf550d6e68bb5bf2c3077ae6841e", "filename": "gcc/unwind-dw2-fde.c", "status": "modified", "additions": 23, "deletions": 1, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/101fa48cd8a8f23f62dbed4276c79af6727b2bb8/gcc%2Funwind-dw2-fde.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/101fa48cd8a8f23f62dbed4276c79af6727b2bb8/gcc%2Funwind-dw2-fde.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Funwind-dw2-fde.c?ref=101fa48cd8a8f23f62dbed4276c79af6727b2bb8", "patch": "@@ -140,9 +140,19 @@ __register_frame_table (void *begin)\n }\n \n /* Called from crtbegin.o to deregister the unwind info for an object.  */\n+/* ??? Glibc has for a while now exported __register_frame_info and\n+   __deregister_frame_info.  If we call __register_frame_info_bases\n+   from crtbegin (wherein it is declared weak), and this object does\n+   not get pulled from libgcc.a for other reasons, then the\n+   invocation of __deregister_frame_info will be resolved from glibc.\n+   Since the registration did not happen there, we'll abort.\n+\n+   Therefore, declare a new deregistration entry point that does the\n+   exact same thing, but will resolve to the same library as \n+   implements __register_frame_info_bases.  */\n \n void *\n-__deregister_frame_info (void *begin)\n+__deregister_frame_info_bases (void *begin)\n {\n   struct object **p;\n   struct object *ob = 0;\n@@ -187,6 +197,18 @@ __deregister_frame_info (void *begin)\n   return (void *) ob;\n }\n \n+#ifdef ASM_OUTPUT_DEF\n+void *\n+__deregister_frame_info (void *)\n+ __attribute__((alias(__USER_LABEL_PREFIX__ \"__deregister_frame_info_bases\")));\n+#else\n+void *\n+__deregister_frame_info (void *begin)\n+{\n+  return __deregister_frame_info_bases (begin);\n+}\n+#endif\n+\n void\n __deregister_frame (void *begin)\n {"}, {"sha": "3d7df409e641672a2452a4fa04be8aa3df0144fc", "filename": "gcc/unwind-dw2-fde.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/101fa48cd8a8f23f62dbed4276c79af6727b2bb8/gcc%2Funwind-dw2-fde.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/101fa48cd8a8f23f62dbed4276c79af6727b2bb8/gcc%2Funwind-dw2-fde.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Funwind-dw2-fde.h?ref=101fa48cd8a8f23f62dbed4276c79af6727b2bb8", "patch": "@@ -94,6 +94,7 @@ extern void __register_frame_info_table_bases (void *, struct object *,\n extern void __register_frame_info_table (void *, struct object *);\n extern void __register_frame_table (void *);\n extern void *__deregister_frame_info (void *);\n+extern void *__deregister_frame_info_bases (void *);\n extern void __deregister_frame (void *);\n \n \f"}]}