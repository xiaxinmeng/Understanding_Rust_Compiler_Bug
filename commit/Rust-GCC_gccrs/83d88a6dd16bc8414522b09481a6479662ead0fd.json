{"sha": "83d88a6dd16bc8414522b09481a6479662ead0fd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODNkODhhNmRkMTZiYzg0MTQ1MjJiMDk0ODFhNjQ3OTY2MmVhZDBmZA==", "commit": {"author": {"name": "Oleg Endo", "email": "olegendo@gcc.gnu.org", "date": "2012-07-09T22:39:25Z"}, "committer": {"name": "Oleg Endo", "email": "olegendo@gcc.gnu.org", "date": "2012-07-09T22:39:25Z"}, "message": "re PR target/53886 (Seg fault in sh_insn_length_adjustment)\n\n\tPR target/53886\n\t* config/sh/sh.c (sequence_insn_p): New function.\n\t(find_barrier, sh_insn_length_adjustment): Use it.\n\nFrom-SVN: r189394", "tree": {"sha": "5186288d56447f5edd79f75e301d3c9f75692402", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5186288d56447f5edd79f75e301d3c9f75692402"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/83d88a6dd16bc8414522b09481a6479662ead0fd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83d88a6dd16bc8414522b09481a6479662ead0fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/83d88a6dd16bc8414522b09481a6479662ead0fd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83d88a6dd16bc8414522b09481a6479662ead0fd/comments", "author": null, "committer": null, "parents": [{"sha": "924ef62b9145c6c3e14e04dc6cd5034b472307b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/924ef62b9145c6c3e14e04dc6cd5034b472307b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/924ef62b9145c6c3e14e04dc6cd5034b472307b9"}], "stats": {"total": 33, "additions": 30, "deletions": 3}, "files": [{"sha": "bf06aa52453f5ee8c129b24d0c962dfa1c83d059", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83d88a6dd16bc8414522b09481a6479662ead0fd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83d88a6dd16bc8414522b09481a6479662ead0fd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=83d88a6dd16bc8414522b09481a6479662ead0fd", "patch": "@@ -1,3 +1,9 @@\n+2012-07-09  Oleg Endo  <olegendo@gcc.gnu.org>\n+\n+\tPR target/53886\n+\t* config/sh/sh.c (sequence_insn_p): New function.\n+\t(find_barrier, sh_insn_length_adjustment): Use it.\n+\n 2012-07-09  Iain Sandoe  <iain@codesourcery.com>\n \n \tPR target/53283"}, {"sha": "015e274b13bd5f2f47600f4b1b1ad9422631029d", "filename": "gcc/config/sh/sh.c", "status": "modified", "additions": 24, "deletions": 3, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83d88a6dd16bc8414522b09481a6479662ead0fd/gcc%2Fconfig%2Fsh%2Fsh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83d88a6dd16bc8414522b09481a6479662ead0fd/gcc%2Fconfig%2Fsh%2Fsh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.c?ref=83d88a6dd16bc8414522b09481a6479662ead0fd", "patch": "@@ -303,6 +303,7 @@ static int mov_insn_size (enum machine_mode, bool);\n static int max_mov_insn_displacement (enum machine_mode, bool);\n static int mov_insn_alignment_mask (enum machine_mode, bool);\n static HOST_WIDE_INT disp_addr_displacement (rtx);\n+static bool sequence_insn_p (rtx);\n \n static void sh_init_sync_libfuncs (void) ATTRIBUTE_UNUSED;\n \f\n@@ -4794,7 +4795,7 @@ find_barrier (int num_mova, rtx mova, rtx from)\n \t delay slot scheduler.  */\n       if (JUMP_P (from) && !JUMP_TABLE_DATA_P (from) \n \t  && get_attr_type (from) == TYPE_CBRANCH\n-\t  && GET_CODE (PATTERN (NEXT_INSN (PREV_INSN (from)))) != SEQUENCE)\n+\t  && ! sequence_insn_p (from))\n \tinc += 2;\n \n       if (found_si)\n@@ -9661,6 +9662,26 @@ fpscr_set_from_mem (int mode, HARD_REG_SET regs_live)\n #define IS_ASM_LOGICAL_LINE_SEPARATOR(C, STR) ((C) == ';')\n #endif\n \n+static bool\n+sequence_insn_p (rtx insn)\n+{\n+  rtx prev, next, pat;\n+\n+  prev = PREV_INSN (insn);\n+  if (prev == NULL)\n+    return false;\n+\n+  next = NEXT_INSN (prev);\n+  if (next == NULL)\n+    return false;\n+\n+  pat = PATTERN (next);\n+  if (pat == NULL)\n+    return false;\n+\n+  return GET_CODE (pat) == SEQUENCE;\n+}\n+\n int\n sh_insn_length_adjustment (rtx insn)\n {\n@@ -9671,7 +9692,7 @@ sh_insn_length_adjustment (rtx insn)\n \t&& GET_CODE (PATTERN (insn)) != CLOBBER)\n        || CALL_P (insn)\n        || (JUMP_P (insn) && !JUMP_TABLE_DATA_P (insn)))\n-      && GET_CODE (PATTERN (NEXT_INSN (PREV_INSN (insn)))) != SEQUENCE\n+      && ! sequence_insn_p (insn)\n       && get_attr_needs_delay_slot (insn) == NEEDS_DELAY_SLOT_YES)\n     return 2;\n \n@@ -9680,7 +9701,7 @@ sh_insn_length_adjustment (rtx insn)\n   if (sh_cpu_attr == CPU_SH2E\n       && JUMP_P (insn) && !JUMP_TABLE_DATA_P (insn)\n       && get_attr_type (insn) == TYPE_CBRANCH\n-      && GET_CODE (PATTERN (NEXT_INSN (PREV_INSN (insn)))) != SEQUENCE)\n+      && ! sequence_insn_p (insn))\n     return 2;\n \n   /* sh-dsp parallel processing insn take four bytes instead of two.  */"}]}