{"sha": "0ed414a4f6aa5a2d5fb5e2b6b3e508333cea047e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGVkNDE0YTRmNmFhNWEyZDVmYjVlMmI2YjNlNTA4MzMzY2VhMDQ3ZQ==", "commit": {"author": {"name": "Dorit Nuzman", "email": "dorit@il.ibm.com", "date": "2005-08-09T15:58:59Z"}, "committer": {"name": "Dorit Nuzman", "email": "dorit@gcc.gnu.org", "date": "2005-08-09T15:58:59Z"}, "message": "tree-vect-transform.c (vect_create_epilog_for_reduction): Set BIT_FIELD_REF_UNSIGNED for newly created BIT_FIELD_REFs.\n\n\t* tree-vect-transform.c (vect_create_epilog_for_reduction): Set\n        BIT_FIELD_REF_UNSIGNED for newly created BIT_FIELD_REFs.\n\nFrom-SVN: r102913", "tree": {"sha": "7ef85fe001b20d7e65640fb991108889be50583f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7ef85fe001b20d7e65640fb991108889be50583f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0ed414a4f6aa5a2d5fb5e2b6b3e508333cea047e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ed414a4f6aa5a2d5fb5e2b6b3e508333cea047e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ed414a4f6aa5a2d5fb5e2b6b3e508333cea047e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ed414a4f6aa5a2d5fb5e2b6b3e508333cea047e/comments", "author": null, "committer": null, "parents": [{"sha": "323dff9a7c3c468744d3345166806633fceef95e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/323dff9a7c3c468744d3345166806633fceef95e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/323dff9a7c3c468744d3345166806633fceef95e"}], "stats": {"total": 39, "additions": 28, "deletions": 11}, "files": [{"sha": "da09bc4495234166701f1adce47a62eda91d528b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ed414a4f6aa5a2d5fb5e2b6b3e508333cea047e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ed414a4f6aa5a2d5fb5e2b6b3e508333cea047e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0ed414a4f6aa5a2d5fb5e2b6b3e508333cea047e", "patch": "@@ -1,3 +1,8 @@\n+2005-08-09  Dorit Nuzman  <dorit@il.ibm.com>\n+\n+\t* tree-vect-transform.c (vect_create_epilog_for_reduction): Set \n+\tBIT_FIELD_REF_UNSIGNED for newly created BIT_FIELD_REFs.\n+\n 2005-08-09  Richard Guenther  <rguenther@suse.de>\n \n \t* c-common.c (builtin_function_2): Remove."}, {"sha": "ccd238c8245ccce18d41a913919bdaef35e6c492", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ed414a4f6aa5a2d5fb5e2b6b3e508333cea047e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ed414a4f6aa5a2d5fb5e2b6b3e508333cea047e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0ed414a4f6aa5a2d5fb5e2b6b3e508333cea047e", "patch": "@@ -1,3 +1,8 @@\n+2005-08-09  Dorit Nuzman  <dorit@il.ibm.com>\n+\n+\t* gcc.dg/vect/vect-reduc-1char.c: Reverse last change - change\n+\tinput data back to what it was originally.\n+\n 2005-08-09  Andrew Pinski  <pinskia@physics.uc.edu>\n \n \t* objc.dg/try-catch-8.m: Enable for all targets."}, {"sha": "418687dd23bfaec0ddb77b8a8e2969ad1ee9522a", "filename": "gcc/testsuite/gcc.dg/vect/vect-reduc-1char.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ed414a4f6aa5a2d5fb5e2b6b3e508333cea047e/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-reduc-1char.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ed414a4f6aa5a2d5fb5e2b6b3e508333cea047e/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-reduc-1char.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-reduc-1char.c?ref=0ed414a4f6aa5a2d5fb5e2b6b3e508333cea047e", "patch": "@@ -4,13 +4,13 @@\n #include \"tree-vect.h\"\n \n #define N 16\n-#define DIFF 122\n+#define DIFF 242\n \n void\n main1 (unsigned char x, unsigned char max_result, unsigned char min_result)\n {\n   int i;\n-  unsigned char ub[N] = {1,2,4,6,8,10,12,14,16,18,20,22,24,26,28,30};\n+  unsigned char ub[N] = {1,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45};\n   unsigned char uc[N] = {1,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15};\n   unsigned char udiff = 2;\n   unsigned char umax = x;"}, {"sha": "1923cbce828193bc5e466ffed85fe1680d11e49a", "filename": "gcc/tree-vect-transform.c", "status": "modified", "additions": 16, "deletions": 9, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ed414a4f6aa5a2d5fb5e2b6b3e508333cea047e/gcc%2Ftree-vect-transform.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ed414a4f6aa5a2d5fb5e2b6b3e508333cea047e/gcc%2Ftree-vect-transform.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-transform.c?ref=0ed414a4f6aa5a2d5fb5e2b6b3e508333cea047e", "patch": "@@ -1021,9 +1021,12 @@ vect_create_epilog_for_reduction (tree vect_def, tree stmt, tree reduction_op,\n \t     && (integer_zerop (scalar_initial_def) \n \t\t || real_zerop (scalar_initial_def)))\n \t    {\n-\t      epilog_stmt = build2 (MODIFY_EXPR, scalar_type, new_scalar_dest,\n-                                build3 (BIT_FIELD_REF, scalar_type,\n-                                \tvec_temp, bitsize, bitsize_zero_node));\n+\t      tree rhs = build3 (BIT_FIELD_REF, scalar_type, vec_temp, bitsize,\n+\t\t\t\t bitsize_zero_node);\n+\n+\t      BIT_FIELD_REF_UNSIGNED (rhs) = TYPE_UNSIGNED (scalar_type);\n+\t      epilog_stmt = build2 (MODIFY_EXPR, scalar_type, new_scalar_dest, \n+\t\t\t\t    rhs);\n               new_temp = make_ssa_name (new_scalar_dest, epilog_stmt);\n               TREE_OPERAND (epilog_stmt, 0) = new_temp;\n               bsi_insert_after (&exit_bsi, epilog_stmt, BSI_NEW_STMT);\n@@ -1043,10 +1046,12 @@ vect_create_epilog_for_reduction (tree vect_def, tree stmt, tree reduction_op,\n \t       bit_offset += element_bitsize)\n \t    { \n \t      tree bitpos = bitsize_int (bit_offset);\n-\n+\t      tree rhs = build3 (BIT_FIELD_REF, scalar_type, vec_temp, bitsize,\n+\t\t\t\t bitpos);\n+\t\t\n+\t      BIT_FIELD_REF_UNSIGNED (rhs) = TYPE_UNSIGNED (scalar_type);\n \t      epilog_stmt = build2 (MODIFY_EXPR, scalar_type, new_scalar_dest,\n-\t\t\t\tbuild3 (BIT_FIELD_REF, scalar_type,\n-\t\t\t\t\tvec_temp, bitsize, bitpos));\n+\t\t\t\t    rhs);\t\n \t      new_name = make_ssa_name (new_scalar_dest, epilog_stmt);\n \t      TREE_OPERAND (epilog_stmt, 0) = new_name;\n \t      bsi_insert_after (&exit_bsi, epilog_stmt, BSI_NEW_STMT);\n@@ -1074,6 +1079,8 @@ vect_create_epilog_for_reduction (tree vect_def, tree stmt, tree reduction_op,\n   \n   if (extract_scalar_result)\n     {\n+      tree rhs;\n+\n       if (vect_print_dump_info (REPORT_DETAILS))\n \tfprintf (vect_dump, \"extract scalar result\");\n \n@@ -1085,9 +1092,9 @@ vect_create_epilog_for_reduction (tree vect_def, tree stmt, tree reduction_op,\n       else\n \tbitpos = bitsize_zero_node;\n \n-      epilog_stmt = build2 (MODIFY_EXPR, scalar_type, new_scalar_dest,\n-\t\t     build3 (BIT_FIELD_REF, scalar_type,\n-\t\t\t     new_temp, bitsize, bitpos));\n+      rhs = build3 (BIT_FIELD_REF, scalar_type, new_temp, bitsize, bitpos);\n+      BIT_FIELD_REF_UNSIGNED (rhs) = TYPE_UNSIGNED (scalar_type);\n+      epilog_stmt = build2 (MODIFY_EXPR, scalar_type, new_scalar_dest, rhs);\n       new_temp = make_ssa_name (new_scalar_dest, epilog_stmt);\n       TREE_OPERAND (epilog_stmt, 0) = new_temp; \n       bsi_insert_after (&exit_bsi, epilog_stmt, BSI_NEW_STMT);"}]}