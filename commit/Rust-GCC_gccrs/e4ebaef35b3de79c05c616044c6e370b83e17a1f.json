{"sha": "e4ebaef35b3de79c05c616044c6e370b83e17a1f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTRlYmFlZjM1YjNkZTc5YzA1YzYxNjA0NGM2ZTM3MGI4M2UxN2ExZg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2008-12-28T20:06:00Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2008-12-28T20:06:00Z"}, "message": "re PR c++/38650 (Trouble with volatile and #pragma omp for)\n\n\tPR c++/38650\n\t* semantics.c (finish_omp_for): Don't add CLEANUP_POINT_EXPR\n\taround volatile iteration var in condition and/or increment\n\texpression.\n\n\t* testsuite/libgomp.c/pr38650.c: New test.\n\t* testsuite/libgomp.c++/pr38650.C: New test.\n\nFrom-SVN: r142940", "tree": {"sha": "f612b0b6482de3bfab5e984231c0d017244573cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f612b0b6482de3bfab5e984231c0d017244573cb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e4ebaef35b3de79c05c616044c6e370b83e17a1f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4ebaef35b3de79c05c616044c6e370b83e17a1f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e4ebaef35b3de79c05c616044c6e370b83e17a1f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4ebaef35b3de79c05c616044c6e370b83e17a1f/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2008239a953d29cd5a2dd45a08f3c903999080e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2008239a953d29cd5a2dd45a08f3c903999080e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2008239a953d29cd5a2dd45a08f3c903999080e0"}], "stats": {"total": 159, "additions": 146, "deletions": 13}, "files": [{"sha": "df04c1bb85ad0b3e158b465cc82bbf9ca2a90bd1", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4ebaef35b3de79c05c616044c6e370b83e17a1f/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4ebaef35b3de79c05c616044c6e370b83e17a1f/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=e4ebaef35b3de79c05c616044c6e370b83e17a1f", "patch": "@@ -1,3 +1,10 @@\n+2008-12-28  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/38650\n+\t* semantics.c (finish_omp_for): Don't add CLEANUP_POINT_EXPR\n+\taround volatile iteration var in condition and/or increment\n+\texpression.\n+\n 2008-12-27  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/38639"}, {"sha": "62d246294b726e2da7e466ce2c0d2cfd49de4f21", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 35, "deletions": 13, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4ebaef35b3de79c05c616044c6e370b83e17a1f/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4ebaef35b3de79c05c616044c6e370b83e17a1f/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=e4ebaef35b3de79c05c616044c6e370b83e17a1f", "patch": "@@ -4262,13 +4262,25 @@ finish_omp_for (location_t locus, tree declv, tree initv, tree condv,\n \t}\n       else\n \tinit = build2 (MODIFY_EXPR, void_type_node, decl, init);\n-      if (cond && TREE_SIDE_EFFECTS (cond) && COMPARISON_CLASS_P (cond))\n+      if (cond\n+\t  && TREE_SIDE_EFFECTS (cond)\n+\t  && COMPARISON_CLASS_P (cond)\n+\t  && !processing_template_decl)\n \t{\n-\t  int n = TREE_SIDE_EFFECTS (TREE_OPERAND (cond, 1)) != 0;\n-\t  tree t = TREE_OPERAND (cond, n);\n+\t  tree t = TREE_OPERAND (cond, 0);\n+\t  if (TREE_SIDE_EFFECTS (t)\n+\t      && t != decl\n+\t      && (TREE_CODE (t) != NOP_EXPR\n+\t\t  || TREE_OPERAND (t, 0) != decl))\n+\t    TREE_OPERAND (cond, 0)\n+\t      = fold_build_cleanup_point_expr (TREE_TYPE (t), t);\n \n-\t  if (!processing_template_decl)\n-\t    TREE_OPERAND (cond, n)\n+\t  t = TREE_OPERAND (cond, 1);\n+\t  if (TREE_SIDE_EFFECTS (t)\n+\t      && t != decl\n+\t      && (TREE_CODE (t) != NOP_EXPR\n+\t\t  || TREE_OPERAND (t, 0) != decl))\n+\t    TREE_OPERAND (cond, 1)\n \t      = fold_build_cleanup_point_expr (TREE_TYPE (t), t);\n \t}\n       if (decl == error_mark_node || init == error_mark_node)\n@@ -4292,21 +4304,31 @@ finish_omp_for (location_t locus, tree declv, tree initv, tree condv,\n \n   for (i = 0; i < TREE_VEC_LENGTH (OMP_FOR_INCR (omp_for)); i++)\n     {\n-      tree incr = TREE_VEC_ELT (OMP_FOR_INCR (omp_for), i);\n+      decl = TREE_OPERAND (TREE_VEC_ELT (OMP_FOR_INIT (omp_for), i), 0);\n+      incr = TREE_VEC_ELT (OMP_FOR_INCR (omp_for), i);\n \n       if (TREE_CODE (incr) != MODIFY_EXPR)\n \tcontinue;\n \n       if (TREE_SIDE_EFFECTS (TREE_OPERAND (incr, 1))\n-\t  && BINARY_CLASS_P (TREE_OPERAND (incr, 1)))\n+\t  && BINARY_CLASS_P (TREE_OPERAND (incr, 1))\n+\t  && !processing_template_decl)\n \t{\n-\t  tree t = TREE_OPERAND (incr, 1);\n-\t  int n = TREE_SIDE_EFFECTS (TREE_OPERAND (t, 1)) != 0;\n+\t  tree t = TREE_OPERAND (TREE_OPERAND (incr, 1), 0);\n+\t  if (TREE_SIDE_EFFECTS (t)\n+\t      && t != decl\n+\t      && (TREE_CODE (t) != NOP_EXPR\n+\t\t  || TREE_OPERAND (t, 0) != decl))\n+\t    TREE_OPERAND (TREE_OPERAND (incr, 1), 0)\n+\t      = fold_build_cleanup_point_expr (TREE_TYPE (t), t);\n \n-\t  if (!processing_template_decl)\n-\t    TREE_OPERAND (t, n)\n-\t      = fold_build_cleanup_point_expr (TREE_TYPE (TREE_OPERAND (t, n)),\n-\t\t\t\t\t       TREE_OPERAND (t, n));\n+\t  t = TREE_OPERAND (TREE_OPERAND (incr, 1), 1);\n+\t  if (TREE_SIDE_EFFECTS (t)\n+\t      && t != decl\n+\t      && (TREE_CODE (t) != NOP_EXPR\n+\t\t  || TREE_OPERAND (t, 0) != decl))\n+\t    TREE_OPERAND (TREE_OPERAND (incr, 1), 1)\n+\t      = fold_build_cleanup_point_expr (TREE_TYPE (t), t);\n \t}\n \n       if (orig_incr)"}, {"sha": "d8e91b340d074cc4eae6e569bf56f3c4ae4f5a83", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4ebaef35b3de79c05c616044c6e370b83e17a1f/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4ebaef35b3de79c05c616044c6e370b83e17a1f/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=e4ebaef35b3de79c05c616044c6e370b83e17a1f", "patch": "@@ -1,3 +1,9 @@\n+2008-12-28  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/38650\n+\t* testsuite/libgomp.c/pr38650.c: New test.\n+\t* testsuite/libgomp.c++/pr38650.C: New test.\n+\n 2008-12-27  Jakub Jelinek  <jakub@redhat.com>\n \n \t* testsuite/libgomp.c/collapse-1.c (main): Add private(k) clause."}, {"sha": "ebe221adcd5b32e17bbe56435d5c27e37b49e5e6", "filename": "libgomp/testsuite/libgomp.c++/pr38650.C", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4ebaef35b3de79c05c616044c6e370b83e17a1f/libgomp%2Ftestsuite%2Flibgomp.c%2B%2B%2Fpr38650.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4ebaef35b3de79c05c616044c6e370b83e17a1f/libgomp%2Ftestsuite%2Flibgomp.c%2B%2B%2Fpr38650.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.c%2B%2B%2Fpr38650.C?ref=e4ebaef35b3de79c05c616044c6e370b83e17a1f", "patch": "@@ -0,0 +1,49 @@\n+// PR c++/38650\n+// { dg-do run }\n+\n+#include <cstdlib>\n+\n+int e;\n+\n+int\n+main ()\n+{\n+  volatile int i, j = 10;\n+  e = 0;\n+#pragma omp parallel for reduction(+:e)\n+  for (i = 0; i < j; i += 1)\n+    e++;\n+  if (e != 10)\n+    std::abort ();\n+  e = 0;\n+#pragma omp parallel for reduction(+:e)\n+  for (i = 0; i < j; ++i)\n+    e++;\n+  if (e != 10)\n+    std::abort ();\n+  e = 0;\n+#pragma omp parallel for reduction(+:e)\n+  for (i = 0; i < j; i++)\n+    e++;\n+  if (e != 10)\n+    std::abort ();\n+  e = 0;\n+#pragma omp parallel for reduction(+:e)\n+  for (i = 0; i < 10; i += 1)\n+    e++;\n+  if (e != 10)\n+    std::abort ();\n+  e = 0;\n+#pragma omp parallel for reduction(+:e)\n+  for (i = 0; i < 10; ++i)\n+    e++;\n+  if (e != 10)\n+    std::abort ();\n+  e = 0;\n+#pragma omp parallel for reduction(+:e)\n+  for (i = 0; i < 10; i++)\n+    e++;\n+  if (e != 10)\n+    std::abort ();\n+  return 0;\n+}"}, {"sha": "7066239b07013e7409c38268f4828f54885d5c8a", "filename": "libgomp/testsuite/libgomp.c/pr38650.c", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4ebaef35b3de79c05c616044c6e370b83e17a1f/libgomp%2Ftestsuite%2Flibgomp.c%2Fpr38650.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4ebaef35b3de79c05c616044c6e370b83e17a1f/libgomp%2Ftestsuite%2Flibgomp.c%2Fpr38650.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.c%2Fpr38650.c?ref=e4ebaef35b3de79c05c616044c6e370b83e17a1f", "patch": "@@ -0,0 +1,49 @@\n+/* PR c++/38650 */\n+/* { dg-do run } */\n+\n+#include <stdlib.h>\n+\n+int e;\n+\n+int\n+main ()\n+{\n+  volatile int i, j = 10;\n+  e = 0;\n+#pragma omp parallel for reduction(+:e)\n+  for (i = 0; i < j; i += 1)\n+    e++;\n+  if (e != 10)\n+    abort ();\n+  e = 0;\n+#pragma omp parallel for reduction(+:e)\n+  for (i = 0; i < j; ++i)\n+    e++;\n+  if (e != 10)\n+    abort ();\n+  e = 0;\n+#pragma omp parallel for reduction(+:e)\n+  for (i = 0; i < j; i++)\n+    e++;\n+  if (e != 10)\n+    abort ();\n+  e = 0;\n+#pragma omp parallel for reduction(+:e)\n+  for (i = 0; i < 10; i += 1)\n+    e++;\n+  if (e != 10)\n+    abort ();\n+  e = 0;\n+#pragma omp parallel for reduction(+:e)\n+  for (i = 0; i < 10; ++i)\n+    e++;\n+  if (e != 10)\n+    abort ();\n+  e = 0;\n+#pragma omp parallel for reduction(+:e)\n+  for (i = 0; i < 10; i++)\n+    e++;\n+  if (e != 10)\n+    abort ();\n+  return 0;\n+}"}]}