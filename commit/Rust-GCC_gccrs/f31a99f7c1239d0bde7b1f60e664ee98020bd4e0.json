{"sha": "f31a99f7c1239d0bde7b1f60e664ee98020bd4e0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjMxYTk5ZjdjMTIzOWQwYmRlN2IxZjYwZTY2NGVlOTgwMjBiZDRlMA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-01-06T12:06:41Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2020-01-06T12:06:41Z"}, "message": "libstdc++: Define __cpp_lib_three_way_comparison conditionally\n\nThe contents of the <compare> header are not complete unless concepts\nare supported, so the feature test macro should depend on the macro for\nconcepts.\n\nAs a result, the std::lexicographical_compare_three_way function will\nnot be defined unless concepts are supported, so there is no need to\ncheck __cpp_lib_concepts before using concepts in those functions.\n\n\t* include/bits/stl_algobase.h (__is_byte_iter, __min_cmp)\n\t(lexicographical_compare_three_way): Do not depend on\n\t__cpp_lib_concepts.\n\t* include/std/version (__cpp_lib_three_way_comparison): Only define\n\twhen __cpp_lib_concepts is defined.\n\t* libsupc++/compare (__cpp_lib_three_way_comparison): Likewise.\n\nFrom-SVN: r279896", "tree": {"sha": "1602a60d22ed32fe44e32c4f65e93a489fdd944d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1602a60d22ed32fe44e32c4f65e93a489fdd944d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f31a99f7c1239d0bde7b1f60e664ee98020bd4e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f31a99f7c1239d0bde7b1f60e664ee98020bd4e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f31a99f7c1239d0bde7b1f60e664ee98020bd4e0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f31a99f7c1239d0bde7b1f60e664ee98020bd4e0/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4ce43ba44d696c97e21e9fb98d4a60f2f1dd9a04", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ce43ba44d696c97e21e9fb98d4a60f2f1dd9a04", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ce43ba44d696c97e21e9fb98d4a60f2f1dd9a04"}], "stats": {"total": 25, "additions": 16, "deletions": 9}, "files": [{"sha": "1fe69c46c75bc85eefa640971448bbcd762ff872", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f31a99f7c1239d0bde7b1f60e664ee98020bd4e0/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f31a99f7c1239d0bde7b1f60e664ee98020bd4e0/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=f31a99f7c1239d0bde7b1f60e664ee98020bd4e0", "patch": "@@ -1,3 +1,12 @@\n+2020-01-06  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/bits/stl_algobase.h (__is_byte_iter, __min_cmp)\n+\t(lexicographical_compare_three_way): Do not depend on\n+\t__cpp_lib_concepts.\n+\t* include/std/version (__cpp_lib_three_way_comparison): Only define\n+\twhen __cpp_lib_concepts is defined.\n+\t* libsupc++/compare (__cpp_lib_three_way_comparison): Likewise.\n+\n 2020-01-03  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* include/bits/stl_algobase.h (lexicographical_compare_three_way):"}, {"sha": "dc922a0f3d2bdafbffe88c1a5153b6d5d7208530", "filename": "libstdc++-v3/include/bits/stl_algobase.h", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f31a99f7c1239d0bde7b1f60e664ee98020bd4e0/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algobase.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f31a99f7c1239d0bde7b1f60e664ee98020bd4e0/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algobase.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algobase.h?ref=f31a99f7c1239d0bde7b1f60e664ee98020bd4e0", "patch": "@@ -1667,7 +1667,6 @@ _GLIBCXX_BEGIN_NAMESPACE_ALGO\n     }\n \n #if __cpp_lib_three_way_comparison\n-#if __cpp_lib_concepts\n   // Iter points to a contiguous range of unsigned narrow character type\n   // or std::byte, suitable for comparison by memcmp.\n   template<typename _Iter>\n@@ -1690,7 +1689,6 @@ _GLIBCXX_BEGIN_NAMESPACE_ALGO\n \treturn _Res{__y, __c};\n       return _Res{__x, __c};\n     }\n-#endif\n \n   /**\n    *  @brief Performs dictionary comparison on ranges.\n@@ -1718,7 +1716,7 @@ _GLIBCXX_BEGIN_NAMESPACE_ALGO\n       __glibcxx_requires_valid_range(__first1, __last1);\n       __glibcxx_requires_valid_range(__first2, __last2);\n \n-#if __cpp_lib_concepts && __cpp_lib_is_constant_evaluated\n+#if __cpp_lib_is_constant_evaluated\n       using _Cat = decltype(__comp(*__first1, *__first2));\n       static_assert(same_as<common_comparison_category_t<_Cat>, _Cat>);\n \n@@ -1739,7 +1737,7 @@ _GLIBCXX_BEGIN_NAMESPACE_ALGO\n \t\t  }\n \t\treturn __lencmp;\n \t      }\n-#endif // concepts && is_constant_evaluated\n+#endif // is_constant_evaluated\n       while (__first1 != __last1 && __first2 != __last2)\n \t{\n \t  if (auto __cmp = __comp(*__first1, *__first2); __cmp != 0)\n@@ -1751,7 +1749,6 @@ _GLIBCXX_BEGIN_NAMESPACE_ALGO\n \t: __first2 != __last2 ? strong_ordering::less : strong_ordering::equal;\n     }\n \n-#if __cpp_lib_concepts\n   template<typename _InputIter1, typename _InputIter2>\n     constexpr auto\n     lexicographical_compare_three_way(_InputIter1 __first1,\n@@ -1763,7 +1760,6 @@ _GLIBCXX_BEGIN_NAMESPACE_ALGO\n \t\t\t\t\t\t    __first2, __last2,\n \t\t\t\t\t\t    compare_three_way{});\n     }\n-#endif // concepts\n #endif // three_way_comparison\n \n   template<typename _InputIterator1, typename _InputIterator2,"}, {"sha": "81b9112e02a7ebdec3e5d97947fe2e7e1da0ca13", "filename": "libstdc++-v3/include/std/version", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f31a99f7c1239d0bde7b1f60e664ee98020bd4e0/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fversion", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f31a99f7c1239d0bde7b1f60e664ee98020bd4e0/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fversion", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fversion?ref=f31a99f7c1239d0bde7b1f60e664ee98020bd4e0", "patch": "@@ -191,7 +191,7 @@\n #define __cpp_lib_list_remove_return_type 201806L\n #define __cpp_lib_math_constants 201907L\n #define __cpp_lib_span 201902L\n-#if __cpp_impl_three_way_comparison >= 201907L\n+#if __cpp_impl_three_way_comparison >= 201907L && __cpp_lib_concepts\n # define __cpp_lib_three_way_comparison 201711L\n #endif\n #define __cpp_lib_to_array 201907L"}, {"sha": "98a592cbb14078fc2468634449f899a9d26315e4", "filename": "libstdc++-v3/libsupc++/compare", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f31a99f7c1239d0bde7b1f60e664ee98020bd4e0/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fcompare", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f31a99f7c1239d0bde7b1f60e664ee98020bd4e0/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fcompare", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fcompare?ref=f31a99f7c1239d0bde7b1f60e664ee98020bd4e0", "patch": "@@ -38,10 +38,12 @@\n \n #include <concepts>\n \n+#if __cpp_lib_concepts\n+# define __cpp_lib_three_way_comparison 201711L\n+#endif\n+\n namespace std\n {\n-#define __cpp_lib_three_way_comparison 201711L\n-\n   // [cmp.categories], comparison category types\n \n   namespace __cmp_cat"}]}