{"sha": "b74fa12697a7b369368b8792ea8217ba5fcfaf85", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yjc0ZmExMjY5N2E3YjM2OTM2OGI4NzkyZWE4MjE3YmE1ZmNmYWY4NQ==", "commit": {"author": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2018-03-22T21:42:07Z"}, "committer": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2018-03-22T21:42:07Z"}, "message": "re PR fortran/84922 (fortran reports inconsistency in rank of arguments in interface and contained procedures)\n\n2018-03-22  Steven G. Kargl  <kargl@gcc.gnu.org>\n\n\tPR fortran/84922\n\t* decl.c (get_proc_name): If the MODULE prefix appears in interface\n\tbody, then it must appear on the contained subroutine or function.\n\tWhile here, fix nearby mis-indented code.\n\n2018-03-22  Steven G. Kargl  <kargl@gcc.gnu.org\n\n\tPR fortran/84922\n\t* gfortran.dg/interface_42.f90: New test.\n\t* gfortran.dg/interface_43.f90: New test.\n\nFrom-SVN: r258784", "tree": {"sha": "f47abe155e17a6b3a3886a786d592ec08935e987", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f47abe155e17a6b3a3886a786d592ec08935e987"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b74fa12697a7b369368b8792ea8217ba5fcfaf85", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b74fa12697a7b369368b8792ea8217ba5fcfaf85", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b74fa12697a7b369368b8792ea8217ba5fcfaf85", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b74fa12697a7b369368b8792ea8217ba5fcfaf85/comments", "author": null, "committer": null, "parents": [{"sha": "0bf86d4683e42967bc55de1d3b5bc31a713396f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0bf86d4683e42967bc55de1d3b5bc31a713396f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0bf86d4683e42967bc55de1d3b5bc31a713396f1"}], "stats": {"total": 91, "additions": 82, "deletions": 9}, "files": [{"sha": "64142c54c21734dc476b7487aea551d2113a22de", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b74fa12697a7b369368b8792ea8217ba5fcfaf85/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b74fa12697a7b369368b8792ea8217ba5fcfaf85/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=b74fa12697a7b369368b8792ea8217ba5fcfaf85", "patch": "@@ -1,3 +1,10 @@\n+2018-03-22  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran/84922\n+\t* decl.c (get_proc_name): If the MODULE prefix appears in interface\n+\tbody, then it must appear on the contained subroutine or function.\n+\tWhile here, fix nearby mis-indented code.\n+\n 2018-03-21  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \tHarald Anlauf  <anlauf@gmx.de>\n "}, {"sha": "a82689069d4c869fe45478a0fadc490517ef2a55", "filename": "gcc/fortran/decl.c", "status": "modified", "additions": 20, "deletions": 9, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b74fa12697a7b369368b8792ea8217ba5fcfaf85/gcc%2Ffortran%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b74fa12697a7b369368b8792ea8217ba5fcfaf85/gcc%2Ffortran%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdecl.c?ref=b74fa12697a7b369368b8792ea8217ba5fcfaf85", "patch": "@@ -1245,15 +1245,26 @@ get_proc_name (const char *name, gfc_symbol **result, bool module_fcn_entry)\n \t\t       \"from a previous declaration\",  name);\n     }\n \n-    if (sym && !sym->gfc_new\n-\t&& sym->attr.flavor != FL_UNKNOWN\n-\t&& sym->attr.referenced == 0 && sym->attr.subroutine == 1\n-\t&& gfc_state_stack->state == COMP_CONTAINS\n-\t&& gfc_state_stack->previous->state == COMP_SUBROUTINE)\n-    {\n-\tgfc_error_now (\"Procedure %qs at %C is already defined at %L\",\n-\t\t       name, &sym->declared_at);\n-    }\n+  /* C1246 (R1225) MODULE shall appear only in the function-stmt or\n+     subroutine-stmt of a module subprogram or of a nonabstract interface\n+     body that is declared in the scoping unit of a module or submodule.  */\n+  if (sym->attr.external\n+      && (sym->attr.subroutine || sym->attr.function)\n+      && sym->attr.if_source == IFSRC_IFBODY\n+      && !current_attr.module_procedure\n+      && sym->attr.proc == PROC_MODULE\n+      && gfc_state_stack->state == COMP_CONTAINS)\n+    gfc_error_now (\"Procedure %qs defined in interface body at %L \"\n+\t\t   \"clashes with internal procedure defined at %C\",\n+\t\t    name, &sym->declared_at);\n+\n+  if (sym && !sym->gfc_new\n+      && sym->attr.flavor != FL_UNKNOWN\n+      && sym->attr.referenced == 0 && sym->attr.subroutine == 1\n+      && gfc_state_stack->state == COMP_CONTAINS\n+      && gfc_state_stack->previous->state == COMP_SUBROUTINE)\n+    gfc_error_now (\"Procedure %qs at %C is already defined at %L\",\n+\t\t    name, &sym->declared_at);\n \n   if (gfc_current_ns->parent == NULL || *result == NULL)\n     return rc;"}, {"sha": "d4b8c275d558100da0086b088811e228d5dc1116", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b74fa12697a7b369368b8792ea8217ba5fcfaf85/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b74fa12697a7b369368b8792ea8217ba5fcfaf85/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b74fa12697a7b369368b8792ea8217ba5fcfaf85", "patch": "@@ -1,3 +1,9 @@\n+2018-03-22  Steven G. Kargl  <kargl@gcc.gnu.org\n+\n+\tPR fortran/84922\n+\t* gfortran.dg/interface_42.f90: New test.\n+\t* gfortran.dg/interface_43.f90: New test.\n+\n 2018-03-22  Sudakshina Das  <sudi.das@arm.com>\n \n \tPR target/84826"}, {"sha": "1fd47b920dfd0638419ffe02ed0e46e78897f3f7", "filename": "gcc/testsuite/gfortran.dg/interface_42.f90", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b74fa12697a7b369368b8792ea8217ba5fcfaf85/gcc%2Ftestsuite%2Fgfortran.dg%2Finterface_42.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b74fa12697a7b369368b8792ea8217ba5fcfaf85/gcc%2Ftestsuite%2Fgfortran.dg%2Finterface_42.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Finterface_42.f90?ref=b74fa12697a7b369368b8792ea8217ba5fcfaf85", "patch": "@@ -0,0 +1,24 @@\n+! { dg-do compile }\n+! { dg-options \"-fmax-errors=1\" }\n+! PR fortran/84922\n+! Original code contributed by William Clodius.\n+module copy\n+\n+   interface\n+      module subroutine foo_da(da, copy) ! { dg-error \"(1)\" }\n+         integer, intent(in) :: da(:)\n+         integer, allocatable, intent(out) :: copy(:)\n+      end subroutine foo_da\n+   end interface\n+\n+   contains\n+\n+      subroutine foo_da(da, copy) ! { dg-error \"defined in interface body\" }\n+         integer, intent(in) :: da(:)\n+         integer, allocatable, intent(out) :: copy(:)\n+         allocate( copy( size(da) ) )\n+         copy = da\n+      end subroutine foo_da\n+\n+end module copy\n+{ dg-prune-output \"compilation terminated\" }"}, {"sha": "5a5294f99b9ba1862a5f93f9c5121ec5721d7178", "filename": "gcc/testsuite/gfortran.dg/interface_43.f90", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b74fa12697a7b369368b8792ea8217ba5fcfaf85/gcc%2Ftestsuite%2Fgfortran.dg%2Finterface_43.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b74fa12697a7b369368b8792ea8217ba5fcfaf85/gcc%2Ftestsuite%2Fgfortran.dg%2Finterface_43.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Finterface_43.f90?ref=b74fa12697a7b369368b8792ea8217ba5fcfaf85", "patch": "@@ -0,0 +1,25 @@\n+! { dg-do compile }\n+! PR fortran/84922\n+! This should compile without error.\n+module foom\n+\n+   implicit none\n+\n+   interface foo\n+      module procedure foo_sngl\n+      module procedure foo_dble\n+   end interface foo\n+\n+   contains\n+\n+      subroutine foo_sngl(n, f, g, h)\n+         integer n\n+         real f, g, h\n+      end subroutine foo_sngl\n+\n+      subroutine foo_dble(n, f, g, h)\n+         integer n\n+         double precision f, g, h\n+      end subroutine foo_dble\n+\n+end module foom"}]}