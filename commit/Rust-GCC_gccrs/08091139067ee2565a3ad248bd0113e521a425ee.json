{"sha": "08091139067ee2565a3ad248bd0113e521a425ee", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDgwOTExMzkwNjdlZTI1NjVhM2FkMjQ4YmQwMTEzZTUyMWE0MjVlZQ==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2005-03-15T02:16:25Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2005-03-15T02:16:25Z"}, "message": "cv_func.C, [...]: Ensure uniqueness of test assertion names.\n\n\t* g++.dg/other/cv_func.C, g++.dg/other/offsetof3.C,\n\tg++.dg/parse/error11.C, g++.dg/tc1/dr108.C,\n\tg++.dg/template/local4.C, g++.dg/template/nontype6.C,\n\tg++.dg/warn/deprecated.C: Ensure uniqueness of test assertion\n\tnames.\n\nFrom-SVN: r96463", "tree": {"sha": "11129f7c86173d085a9c93851dd01af5a3b9784e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/11129f7c86173d085a9c93851dd01af5a3b9784e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/08091139067ee2565a3ad248bd0113e521a425ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08091139067ee2565a3ad248bd0113e521a425ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08091139067ee2565a3ad248bd0113e521a425ee", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08091139067ee2565a3ad248bd0113e521a425ee/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9044951e0d66b05fb6f5b2982a99857d67d7c486", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9044951e0d66b05fb6f5b2982a99857d67d7c486", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9044951e0d66b05fb6f5b2982a99857d67d7c486"}], "stats": {"total": 32, "additions": 20, "deletions": 12}, "files": [{"sha": "6d39769c8d4f1f77e56515178651b77d72183c69", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08091139067ee2565a3ad248bd0113e521a425ee/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08091139067ee2565a3ad248bd0113e521a425ee/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=08091139067ee2565a3ad248bd0113e521a425ee", "patch": "@@ -1,3 +1,11 @@\n+2005-03-15  Joseph S. Myers  <joseph@codesourcery.com>\n+\n+\t* g++.dg/other/cv_func.C, g++.dg/other/offsetof3.C,\n+\tg++.dg/parse/error11.C, g++.dg/tc1/dr108.C,\n+\tg++.dg/template/local4.C, g++.dg/template/nontype6.C,\n+\tg++.dg/warn/deprecated.C: Ensure uniqueness of test assertion\n+\tnames.\n+\n 2005-03-14  Geoffrey Keating  <geoffk@apple.com>\n \n \t* gcc.dg/cpp/normalize-1.c: New."}, {"sha": "4f103824d9394f8bbfdd7ffa211b48d781d47353", "filename": "gcc/testsuite/g++.dg/other/cv_func.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08091139067ee2565a3ad248bd0113e521a425ee/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fcv_func.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08091139067ee2565a3ad248bd0113e521a425ee/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fcv_func.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fcv_func.C?ref=08091139067ee2565a3ad248bd0113e521a425ee", "patch": "@@ -4,7 +4,7 @@ typedef int FIC(int) const;\n typedef int FI(int);\n \n FIC f; // { dg-error \"qualified\" }\n-// { dg-error \"ignoring\" \"\" { target *-*-* } 6 }\n+// { dg-error \"ignoring\" \"ignoring\" { target *-*-* } 6 }\n struct S {\n   FIC f; // OK\n \n@@ -15,7 +15,7 @@ struct S {\n };\n FIC S::*pm = &S::f;\n const FI S::*pm2 = &S::f; // { dg-error \"qualifier\" }\n-// { dg-error \"cannot convert\" \"\" { target *-*-* } 17 }\n+// { dg-error \"cannot convert\" \"cannot convert\" { target *-*-* } 17 }\n const FIC S::*pm3 = &S::f; // { dg-error \"qualifier\" }\n \n int S::f(int) const"}, {"sha": "1e83af980718ed7eaf4d31f711a0a33c21975c91", "filename": "gcc/testsuite/g++.dg/other/offsetof3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08091139067ee2565a3ad248bd0113e521a425ee/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Foffsetof3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08091139067ee2565a3ad248bd0113e521a425ee/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Foffsetof3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Foffsetof3.C?ref=08091139067ee2565a3ad248bd0113e521a425ee", "patch": "@@ -13,4 +13,4 @@ typedef X* pX;\n typedef __SIZE_TYPE__ size_t;\n \n size_t yoff = size_t(&(pX(0)->y)); /* { dg-warning \"invalid access\" \"\" } */\n-/* { dg-warning \"macro was used incorrectly\" \"\" { target *-*-* } 15 } */\n+/* { dg-warning \"macro was used incorrectly\" \"macro\" { target *-*-* } 15 } */"}, {"sha": "0a8e2e4fc3d64b53ae589d11d4ff6071b008c659", "filename": "gcc/testsuite/g++.dg/parse/error11.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08091139067ee2565a3ad248bd0113e521a425ee/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror11.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08091139067ee2565a3ad248bd0113e521a425ee/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror11.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror11.C?ref=08091139067ee2565a3ad248bd0113e521a425ee", "patch": "@@ -50,4 +50,4 @@ template struct Foo<::B>; // { dg-error \"cannot begin|alternate spelling\" }\n \n // On the first error message, an additional note about the use of \n //  -fpermissive should be present\n-// { dg-error \"-fpermissive\" \"\" { target *-*-* } 18 }\n+// { dg-error \"-fpermissive\" \"-fpermissive\" { target *-*-* } 18 }"}, {"sha": "6b567a9fad551cb55a245c726559b52ba3f1c29a", "filename": "gcc/testsuite/g++.dg/tc1/dr108.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08091139067ee2565a3ad248bd0113e521a425ee/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftc1%2Fdr108.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08091139067ee2565a3ad248bd0113e521a425ee/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftc1%2Fdr108.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftc1%2Fdr108.C?ref=08091139067ee2565a3ad248bd0113e521a425ee", "patch": "@@ -12,4 +12,4 @@ template <class T> struct S {\n };\n \n // Additional notes on the same line are allowed\n-// { dg-error \"\" \"\" { target *-*-* } 10 }\n+// { dg-error \"\" \"additional\" { target *-*-* } 10 }"}, {"sha": "20f8bf294417456543ef325976c5ae380373a425", "filename": "gcc/testsuite/g++.dg/template/local4.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08091139067ee2565a3ad248bd0113e521a425ee/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Flocal4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08091139067ee2565a3ad248bd0113e521a425ee/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Flocal4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Flocal4.C?ref=08091139067ee2565a3ad248bd0113e521a425ee", "patch": "@@ -6,6 +6,6 @@ int main () {\n   struct S {};\n   // We do not simply use \"local|match\" on line 10 because we want to\n   // make sure that \"local\" appears.\n-  // { dg-error \"local\" \"\" { target *-*-* } 10 }\n+  // { dg-error \"local\" \"local\" { target *-*-* } 10 }\n   foo<S> (); // { dg-error \"trying|match\" } \n }"}, {"sha": "298ce82591c98cfaa9eda13a45bf86fbf33d866a", "filename": "gcc/testsuite/g++.dg/template/nontype6.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08091139067ee2565a3ad248bd0113e521a425ee/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fnontype6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08091139067ee2565a3ad248bd0113e521a425ee/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fnontype6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fnontype6.C?ref=08091139067ee2565a3ad248bd0113e521a425ee", "patch": "@@ -13,7 +13,7 @@ template <class T>\n void func(void)\n {\n   (void)A<T>::type();\t // { dg-error \"if a type is meant\" }\n-// { dg-error \"parsed as a non-type\" \"\" { target *-*-* } 15 }\n+// { dg-error \"parsed as a non-type\" \"non-type\" { target *-*-* } 15 }\n }\n \n template void func<float>(void);    // { dg-error \"instantiated from here\" }"}, {"sha": "59dc3d67257c9c722992a06078b0378c5ccbf73b", "filename": "gcc/testsuite/g++.dg/warn/deprecated.C", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08091139067ee2565a3ad248bd0113e521a425ee/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fdeprecated.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08091139067ee2565a3ad248bd0113e521a425ee/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fdeprecated.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fdeprecated.C?ref=08091139067ee2565a3ad248bd0113e521a425ee", "patch": "@@ -53,10 +53,10 @@ int func1()\n    int (*pf)() = f1;\t\t\t/* { dg-warning \"'f1' is deprecated\" \"\" } */\n \n    z = w + x + y + g1 + g2 + g3;\t/* { dg-warning \"'x' is deprecated\" \"\" } */\n-   \t\t\t\t\t/* { dg-warning \"'y' is deprecated\" \"\" { target *-*-* } 55 } */\n-   \t\t\t\t\t/* { dg-warning \"'g2' is deprecated\" \"\" { target *-*-* } 55 } */\n-   \t\t\t\t\t/* { dg-warning \"'g3' is deprecated\" \"\" { target *-*-* } 55 } */\n-   return f1(); \t\t\t/* { dg-warning \"'f1' is deprecated\" \"\" } */\n+   \t\t\t\t\t/* { dg-warning \"'y' is deprecated\" \"y\" { target *-*-* } 55 } */\n+   \t\t\t\t\t/* { dg-warning \"'g2' is deprecated\" \"g2\" { target *-*-* } 55 } */\n+   \t\t\t\t\t/* { dg-warning \"'g3' is deprecated\" \"g3\" { target *-*-* } 55 } */\n+   return f1(); \t\t\t/* { dg-warning \"'f1' is deprecated\" \"f1\" } */\n }\n \n int func2(S1 *p)\n@@ -71,7 +71,7 @@ int func2(S1 *p)\n   p->u1.field5 = g1 + p->field7;\n   p->u2.field9;\t\t\t\t/* { dg-warning \"'u2' is deprecated\" \"\" } */\n   return p->u1.field6 + p->field8;\t/* { dg-warning \"'field6' is deprecated\" \"\" } */\n-  \t\t\t\t\t/* { dg-warning \"'field8' is deprecated\" \"\" { target *-*-* } 73 } */\n+  \t\t\t\t\t/* { dg-warning \"'field8' is deprecated\" \"field8\" { target *-*-* } 73 } */\n }\n \n struct SS1 {"}]}