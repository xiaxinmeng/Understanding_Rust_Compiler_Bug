{"sha": "7ebe376bd68eb0d9aae9cef6308f3ec15407862d", "node_id": "C_kwDOANBUbNoAKDdlYmUzNzZiZDY4ZWIwZDlhYWU5Y2VmNjMwOGYzZWMxNTQwNzg2MmQ", "commit": {"author": {"name": "Arthur Cohen", "email": "arthur.cohen@embecosm.com", "date": "2022-05-17T12:01:19Z"}, "committer": {"name": "Arthur Cohen", "email": "arthur.cohen@embecosm.com", "date": "2022-05-17T12:04:34Z"}, "message": "privacy: Handle calls to functions defined in previous ancestors\n\nPreviously, we would only check if `current_module` was a direct\ndescendant of the item's module. However, we also need to visit each of this\nitem's module's children recursively.", "tree": {"sha": "bd548a4c5f4b4a1e250e4157fc65fc85325d9563", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bd548a4c5f4b4a1e250e4157fc65fc85325d9563"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7ebe376bd68eb0d9aae9cef6308f3ec15407862d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ebe376bd68eb0d9aae9cef6308f3ec15407862d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ebe376bd68eb0d9aae9cef6308f3ec15407862d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ebe376bd68eb0d9aae9cef6308f3ec15407862d/comments", "author": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8cad07cfd2244ad9a40027a4306b81b4553a4797", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8cad07cfd2244ad9a40027a4306b81b4553a4797", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8cad07cfd2244ad9a40027a4306b81b4553a4797"}], "stats": {"total": 32, "additions": 25, "deletions": 7}, "files": [{"sha": "a974de039c756489ab9b129647bb1c2750198003", "filename": "gcc/rust/privacy/rust-privacy-reporter.cc", "status": "modified", "additions": 12, "deletions": 7, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ebe376bd68eb0d9aae9cef6308f3ec15407862d/gcc%2Frust%2Fprivacy%2Frust-privacy-reporter.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ebe376bd68eb0d9aae9cef6308f3ec15407862d/gcc%2Frust%2Fprivacy%2Frust-privacy-reporter.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fprivacy%2Frust-privacy-reporter.cc?ref=7ebe376bd68eb0d9aae9cef6308f3ec15407862d", "patch": "@@ -20,15 +20,22 @@ PrivacyReporter::go (HIR::Crate &crate)\n }\n \n static bool\n-is_child_module (NodeId current_module,\n-\t\t Optional<std::vector<NodeId> &> children)\n+is_child_module (Analysis::Mappings &mappings, NodeId parent,\n+\t\t NodeId possible_child)\n {\n+  auto children = mappings.lookup_module_children (parent);\n+\n   if (!children)\n     return false;\n \n-  // FIXME: This checks for one step - we need to go deeper\n+  // Visit all toplevel children\n   for (auto &child : *children)\n-    if (child == current_module)\n+    if (child == possible_child)\n+      return true;\n+\n+  // Now descend recursively in the child module tree\n+  for (auto &child : *children)\n+    if (is_child_module (mappings, child, possible_child))\n       return true;\n \n   return false;\n@@ -72,11 +79,9 @@ PrivacyReporter::check_for_privacy_violation (const NodeId &use_id,\n \tif (mod_node_id == current_module.get ())\n \t  break;\n \n-\tauto children = mappings.lookup_module_children (mod_node_id);\n-\n \t// FIXME: This needs a LOT of TLC: hinting about the definition, a\n \t// string to say if it's a module, function, type, etc...\n-\tif (!is_child_module (current_module.get (), children))\n+\tif (!is_child_module (mappings, mod_node_id, current_module.get ()))\n \t  valid = false;\n       }\n       break;"}, {"sha": "3c0744928b19d7b85ee18c24b7e9276c7edddc38", "filename": "gcc/testsuite/rust/compile/privacy2.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ebe376bd68eb0d9aae9cef6308f3ec15407862d/gcc%2Ftestsuite%2Frust%2Fcompile%2Fprivacy2.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ebe376bd68eb0d9aae9cef6308f3ec15407862d/gcc%2Ftestsuite%2Frust%2Fcompile%2Fprivacy2.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Fprivacy2.rs?ref=7ebe376bd68eb0d9aae9cef6308f3ec15407862d", "patch": "@@ -0,0 +1,13 @@\n+// { dg-additional-options \"-w\" }\n+\n+mod orange {\n+    fn tangerine() {}\n+\n+    mod green {\n+        mod blue {\n+            fn berry() {\n+                tangerine();\n+            }\n+        }\n+    }\n+}"}]}