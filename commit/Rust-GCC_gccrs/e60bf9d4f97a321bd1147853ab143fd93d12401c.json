{"sha": "e60bf9d4f97a321bd1147853ab143fd93d12401c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTYwYmY5ZDRmOTdhMzIxYmQxMTQ3ODUzYWIxNDNmZDkzZDEyNDAxYw==", "commit": {"author": {"name": "Nathan Froyd", "email": "froydnj@codesourcery.com", "date": "2010-08-08T17:42:40Z"}, "committer": {"name": "Nathan Froyd", "email": "froydnj@gcc.gnu.org", "date": "2010-08-08T17:42:40Z"}, "message": "c-tree.h (c_arg_tag): Define.\n\n\t* c-tree.h (c_arg_tag): Define.  Define a VEC containing it.\n\t(struct c_arg_info): Change type of tags field.\n\t* c-decl.c (grokdeclarator): Update for changed type of tags field.\n\t(get_parm_info): Likewise.\n\t(store_parm_decls_newstyle): Likewise.\n\nFrom-SVN: r163013", "tree": {"sha": "1fc773b8a3cbcbc980aa5a7951f4ab0aea73bce5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1fc773b8a3cbcbc980aa5a7951f4ab0aea73bce5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e60bf9d4f97a321bd1147853ab143fd93d12401c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e60bf9d4f97a321bd1147853ab143fd93d12401c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e60bf9d4f97a321bd1147853ab143fd93d12401c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e60bf9d4f97a321bd1147853ab143fd93d12401c/comments", "author": null, "committer": null, "parents": [{"sha": "4f8c876d4305f863ebccf6b0905be4d8a8d99be6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f8c876d4305f863ebccf6b0905be4d8a8d99be6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f8c876d4305f863ebccf6b0905be4d8a8d99be6"}], "stats": {"total": 44, "additions": 33, "deletions": 11}, "files": [{"sha": "b3bcc73e32bbae1a8719205527c762b14994c172", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e60bf9d4f97a321bd1147853ab143fd93d12401c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e60bf9d4f97a321bd1147853ab143fd93d12401c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e60bf9d4f97a321bd1147853ab143fd93d12401c", "patch": "@@ -1,3 +1,11 @@\n+2010-08-08  Nathan Froyd  <froydnj@codesourcery.com>\n+\n+\t* c-tree.h (c_arg_tag): Define.  Define a VEC containing it.\n+\t(struct c_arg_info): Change type of tags field.\n+\t* c-decl.c (grokdeclarator): Update for changed type of tags field.\n+\t(get_parm_info): Likewise.\n+\t(store_parm_decls_newstyle): Likewise.\n+\n 2010-08-08  Nathan Froyd  <froydnj@codesourcery.com>\n \n \t* config/rs6000/rs6000.c (branch_island): Define.  Define a VEC of it."}, {"sha": "e4e872d9b9d314016e52d895390128655f2c0c5b", "filename": "gcc/c-decl.c", "status": "modified", "additions": 14, "deletions": 10, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e60bf9d4f97a321bd1147853ab143fd93d12401c/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e60bf9d4f97a321bd1147853ab143fd93d12401c/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=e60bf9d4f97a321bd1147853ab143fd93d12401c", "patch": "@@ -5541,12 +5541,11 @@ grokdeclarator (const struct c_declarator *declarator,\n \t       the formal parameter list of this FUNCTION_TYPE to point to\n \t       the FUNCTION_TYPE node itself.  */\n \t    {\n-\t      tree link;\n+\t      c_arg_tag *tag;\n+\t      unsigned ix;\n \n-\t      for (link = arg_info->tags;\n-\t\t   link;\n-\t\t   link = TREE_CHAIN (link))\n-\t\tTYPE_CONTEXT (TREE_VALUE (link)) = type;\n+\t      FOR_EACH_VEC_ELT_REVERSE (c_arg_tag, arg_info->tags, ix, tag)\n+\t\tTYPE_CONTEXT (tag->type) = type;\n \t    }\n \t    break;\n \t  }\n@@ -6192,7 +6191,7 @@ get_parm_info (bool ellipsis)\n   struct c_arg_info *arg_info = XOBNEW (&parser_obstack,\n \t\t\t\t\tstruct c_arg_info);\n   tree parms    = 0;\n-  tree tags     = 0;\n+  VEC(c_arg_tag,gc) *tags = NULL;\n   tree types    = 0;\n   tree others   = 0;\n \n@@ -6246,6 +6245,7 @@ get_parm_info (bool ellipsis)\n     {\n       tree decl = b->decl;\n       tree type = TREE_TYPE (decl);\n+      c_arg_tag *tag;\n       const char *keyword;\n \n       switch (TREE_CODE (decl))\n@@ -6319,7 +6319,9 @@ get_parm_info (bool ellipsis)\n \t\t}\n \t    }\n \n-\t  tags = tree_cons (b->id, decl, tags);\n+\t  tag = VEC_safe_push (c_arg_tag, gc, tags, NULL);\n+\t  tag->id = b->id;\n+\t  tag->type = decl;\n \t  break;\n \n \tcase CONST_DECL:\n@@ -7644,6 +7646,8 @@ static void\n store_parm_decls_newstyle (tree fndecl, const struct c_arg_info *arg_info)\n {\n   tree decl;\n+  c_arg_tag *tag;\n+  unsigned ix;\n \n   if (current_scope->bindings)\n     {\n@@ -7696,9 +7700,9 @@ store_parm_decls_newstyle (tree fndecl, const struct c_arg_info *arg_info)\n     }\n \n   /* And all the tag declarations.  */\n-  for (decl = arg_info->tags; decl; decl = TREE_CHAIN (decl))\n-    if (TREE_PURPOSE (decl))\n-      bind (TREE_PURPOSE (decl), TREE_VALUE (decl), current_scope,\n+  FOR_EACH_VEC_ELT_REVERSE (c_arg_tag, arg_info->tags, ix, tag)\n+    if (tag->id)\n+      bind (tag->id, tag->type, current_scope,\n \t    /*invisible=*/false, /*nested=*/false, UNKNOWN_LOCATION);\n }\n "}, {"sha": "745dd053a8c88332cde633a416a411f3f884c7dd", "filename": "gcc/c-tree.h", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e60bf9d4f97a321bd1147853ab143fd93d12401c/gcc%2Fc-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e60bf9d4f97a321bd1147853ab143fd93d12401c/gcc%2Fc-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-tree.h?ref=e60bf9d4f97a321bd1147853ab143fd93d12401c", "patch": "@@ -295,12 +295,22 @@ enum c_declarator_kind {\n   cdk_attrs\n };\n \n+typedef struct GTY(()) c_arg_tag_d {\n+  /* The argument name.  */\n+  tree id;\n+  /* The type of the argument.  */\n+  tree type;\n+} c_arg_tag;\n+\n+DEF_VEC_O(c_arg_tag);\n+DEF_VEC_ALLOC_O(c_arg_tag,gc);\n+\n /* Information about the parameters in a function declarator.  */\n struct c_arg_info {\n   /* A list of parameter decls.  */\n   tree parms;\n   /* A list of structure, union and enum tags defined.  */\n-  tree tags;\n+  VEC(c_arg_tag,gc) *tags;\n   /* A list of argument types to go in the FUNCTION_TYPE.  */\n   tree types;\n   /* A list of non-parameter decls (notably enumeration constants)"}]}