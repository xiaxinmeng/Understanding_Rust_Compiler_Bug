{"sha": "dd17274465724f65c09dc2f654d92f6ba92cd90f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGQxNzI3NDQ2NTcyNGY2NWMwOWRjMmY2NTRkOTJmNmJhOTJjZDkwZg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2018-05-04T13:33:15Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2018-05-04T13:33:15Z"}, "message": "bb-reorder.c (sanitize_hot_paths): Release hot_bbs_to_check.\n\n2018-05-04  Richard Biener  <rguenther@suse.de>\n\n\t* bb-reorder.c (sanitize_hot_paths): Release hot_bbs_to_check.\n\t* gimple-ssa-store-merging.c\n\t(imm_store_chain_info::output_merged_store): Remove redundant create,\n\trelease split_store vector contents on failure.\n\t* tree-vect-slp.c (vect_schedule_slp_instance): Avoid leaking\n\tscalar stmt vector on cache hit.\n\nFrom-SVN: r259932", "tree": {"sha": "eca6894de8eb84a9a75121b3dca9d9e5dcc80238", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eca6894de8eb84a9a75121b3dca9d9e5dcc80238"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dd17274465724f65c09dc2f654d92f6ba92cd90f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd17274465724f65c09dc2f654d92f6ba92cd90f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd17274465724f65c09dc2f654d92f6ba92cd90f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd17274465724f65c09dc2f654d92f6ba92cd90f/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2c2aa74d1df07cbe24739ddd7d0fcb175479bb87", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c2aa74d1df07cbe24739ddd7d0fcb175479bb87", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c2aa74d1df07cbe24739ddd7d0fcb175479bb87"}], "stats": {"total": 29, "additions": 21, "deletions": 8}, "files": [{"sha": "150639cb474c2750f2bc811c87c84138686f8981", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd17274465724f65c09dc2f654d92f6ba92cd90f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd17274465724f65c09dc2f654d92f6ba92cd90f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dd17274465724f65c09dc2f654d92f6ba92cd90f", "patch": "@@ -1,3 +1,12 @@\n+2018-05-04  Richard Biener  <rguenther@suse.de>\n+\n+\t* bb-reorder.c (sanitize_hot_paths): Release hot_bbs_to_check.\n+\t* gimple-ssa-store-merging.c\n+\t(imm_store_chain_info::output_merged_store): Remove redundant create,\n+\trelease split_store vector contents on failure.\n+\t* tree-vect-slp.c (vect_schedule_slp_instance): Avoid leaking\n+\tscalar stmt vector on cache hit.\n+\n 2018-05-04  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \t* common/config/rs6000/rs6000-common.c (rs6000_handle_option): Remove"}, {"sha": "bc08e11a81dc19f42eea12ebc008a72fddf907ca", "filename": "gcc/bb-reorder.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd17274465724f65c09dc2f654d92f6ba92cd90f/gcc%2Fbb-reorder.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd17274465724f65c09dc2f654d92f6ba92cd90f/gcc%2Fbb-reorder.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbb-reorder.c?ref=dd17274465724f65c09dc2f654d92f6ba92cd90f", "patch": "@@ -1572,6 +1572,7 @@ sanitize_hot_paths (bool walk_up, unsigned int cold_bb_count,\n           hot_bbs_to_check.safe_push (reach_bb);\n         }\n     }\n+  hot_bbs_to_check.release ();\n \n   return cold_bb_count;\n }"}, {"sha": "2e1a6ef0e5519b574c32026f3d1eeac8eefb1c96", "filename": "gcc/gimple-ssa-store-merging.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd17274465724f65c09dc2f654d92f6ba92cd90f/gcc%2Fgimple-ssa-store-merging.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd17274465724f65c09dc2f654d92f6ba92cd90f/gcc%2Fgimple-ssa-store-merging.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-ssa-store-merging.c?ref=dd17274465724f65c09dc2f654d92f6ba92cd90f", "patch": "@@ -3343,6 +3343,8 @@ invert_op (split_store *split_store, int idx, tree int_type, tree &mask)\n bool\n imm_store_chain_info::output_merged_store (merged_store_group *group)\n {\n+  split_store *split_store;\n+  unsigned int i;\n   unsigned HOST_WIDE_INT start_byte_pos\n     = group->bitregion_start / BITS_PER_UNIT;\n \n@@ -3351,7 +3353,6 @@ imm_store_chain_info::output_merged_store (merged_store_group *group)\n     return false;\n \n   auto_vec<struct split_store *, 32> split_stores;\n-  split_stores.create (0);\n   bool allow_unaligned_store\n     = !STRICT_ALIGNMENT && PARAM_VALUE (PARAM_STORE_MERGING_ALLOW_UNALIGNED);\n   bool allow_unaligned_load = allow_unaligned_store;\n@@ -3378,6 +3379,8 @@ imm_store_chain_info::output_merged_store (merged_store_group *group)\n \tfprintf (dump_file, \"Exceeded original number of stmts (%u).\"\n \t\t\t    \"  Not profitable to emit new sequence.\\n\",\n \t\t orig_num_stmts);\n+      FOR_EACH_VEC_ELT (split_stores, i, split_store)\n+\tdelete split_store;\n       return false;\n     }\n   if (total_orig <= total_new)\n@@ -3389,6 +3392,8 @@ imm_store_chain_info::output_merged_store (merged_store_group *group)\n \t\t\t    \" not larger than estimated number of new\"\n \t\t\t    \" stmts (%u).\\n\",\n \t\t total_orig, total_new);\n+      FOR_EACH_VEC_ELT (split_stores, i, split_store)\n+\tdelete split_store;\n       return false;\n     }\n \n@@ -3453,8 +3458,6 @@ imm_store_chain_info::output_merged_store (merged_store_group *group)\n     }\n \n   gimple *stmt = NULL;\n-  split_store *split_store;\n-  unsigned int i;\n   auto_vec<gimple *, 32> orig_stmts;\n   gimple_seq this_seq;\n   tree addr = force_gimple_operand_1 (unshare_expr (base_addr), &this_seq,"}, {"sha": "48ed96bb7b90100d173f4698b56b77a3f685c725", "filename": "gcc/tree-vect-slp.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd17274465724f65c09dc2f654d92f6ba92cd90f/gcc%2Ftree-vect-slp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd17274465724f65c09dc2f654d92f6ba92cd90f/gcc%2Ftree-vect-slp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-slp.c?ref=dd17274465724f65c09dc2f654d92f6ba92cd90f", "patch": "@@ -4064,15 +4064,15 @@ vect_schedule_slp_instance (slp_tree node, slp_instance instance,\n \n   /* See if we have already vectorized the same set of stmts and reuse their\n      vectorized stmts.  */\n-  slp_tree &leader\n-    = bst_map->get_or_insert (SLP_TREE_SCALAR_STMTS (node).copy ());\n-  if (leader)\n+  if (slp_tree *leader = bst_map->get (SLP_TREE_SCALAR_STMTS (node)))\n     {\n-      SLP_TREE_VEC_STMTS (node).safe_splice (SLP_TREE_VEC_STMTS (leader));\n+      SLP_TREE_VEC_STMTS (node).safe_splice (SLP_TREE_VEC_STMTS (*leader));\n+      SLP_TREE_NUMBER_OF_VEC_STMTS (node)\n+\t= SLP_TREE_NUMBER_OF_VEC_STMTS (*leader);\n       return false;\n     }\n \n-  leader = node;\n+  bst_map->put (SLP_TREE_SCALAR_STMTS (node).copy (), node);\n   FOR_EACH_VEC_ELT (SLP_TREE_CHILDREN (node), i, child)\n     vect_schedule_slp_instance (child, instance, bst_map);\n "}]}