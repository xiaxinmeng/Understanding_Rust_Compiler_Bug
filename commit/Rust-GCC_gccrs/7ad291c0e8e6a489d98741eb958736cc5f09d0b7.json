{"sha": "7ad291c0e8e6a489d98741eb958736cc5f09d0b7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2FkMjkxYzBlOGU2YTQ4OWQ5ODc0MWViOTU4NzM2Y2M1ZjA5ZDBiNw==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2015-11-11T14:04:47Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2015-11-11T14:04:47Z"}, "message": "re PR rtl-optimization/68287 (conditional jump or move depends on uninitialized value in lra-lives.c:1048)\n\nFix PR rtl-optimization/68287\n\n\tPR rtl-optimization/68287\n\t* lra-lives.c (lra_create_live_ranges_1): Reserve the right\n\tnumber of elements.\n\nCo-Authored-By: Richard Biener <rguenther@suse.de>\n\nFrom-SVN: r230163", "tree": {"sha": "7e8d4364662311c5caa981cc01d78f86e575561f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7e8d4364662311c5caa981cc01d78f86e575561f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7ad291c0e8e6a489d98741eb958736cc5f09d0b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ad291c0e8e6a489d98741eb958736cc5f09d0b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ad291c0e8e6a489d98741eb958736cc5f09d0b7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ad291c0e8e6a489d98741eb958736cc5f09d0b7/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "dcfe3c8f32c207cb4d8cb77425604ae72bee406a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dcfe3c8f32c207cb4d8cb77425604ae72bee406a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dcfe3c8f32c207cb4d8cb77425604ae72bee406a"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "fb7e4f071f012dca32dc128ebe8609db27fcedf3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ad291c0e8e6a489d98741eb958736cc5f09d0b7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ad291c0e8e6a489d98741eb958736cc5f09d0b7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7ad291c0e8e6a489d98741eb958736cc5f09d0b7", "patch": "@@ -1,3 +1,10 @@\n+2015-11-11  Martin Liska  <mliska@suse.cz>\n+\t    Richard Biener  <rguenther@suse.de>\n+\n+\tPR rtl-optimization/68287\n+\t* lra-lives.c (lra_create_live_ranges_1): Reserve the right\n+\tnumber of elements.\n+\n 2015-11-11  Simon Dardis  <simon.dardis@imgtec.com>\n \n \t* config/mips/mips.c (mips_breakable_sequence_p): New function."}, {"sha": "5f76a87de977c5930e38e0233d49acde29d15941", "filename": "gcc/lra-lives.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ad291c0e8e6a489d98741eb958736cc5f09d0b7/gcc%2Flra-lives.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ad291c0e8e6a489d98741eb958736cc5f09d0b7/gcc%2Flra-lives.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra-lives.c?ref=7ad291c0e8e6a489d98741eb958736cc5f09d0b7", "patch": "@@ -1241,8 +1241,8 @@ lra_create_live_ranges_1 (bool all_p, bool dead_insn_p)\n   unused_set = sparseset_alloc (max_regno);\n   curr_point = 0;\n   unsigned new_length = get_max_uid () * 2;\n-  if (point_freq_vec.length () < new_length)\n-    point_freq_vec.safe_grow (new_length);\n+  point_freq_vec.truncate (0);\n+  point_freq_vec.reserve_exact (new_length);\n   lra_point_freq = point_freq_vec.address ();\n   int *post_order_rev_cfg = XNEWVEC (int, last_basic_block_for_fn (cfun));\n   int n_blocks_inverted = inverted_post_order_compute (post_order_rev_cfg);"}]}