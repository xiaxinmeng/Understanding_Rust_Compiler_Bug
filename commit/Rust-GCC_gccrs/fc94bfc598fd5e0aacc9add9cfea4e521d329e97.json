{"sha": "fc94bfc598fd5e0aacc9add9cfea4e521d329e97", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmM5NGJmYzU5OGZkNWUwYWFjYzlhZGQ5Y2ZlYTRlNTIxZDMyOWU5Nw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2009-01-03T00:19:55Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2009-01-03T00:19:55Z"}, "message": "re PR c++/38698 (ICE initializing union with initializer list)\n\n        PR c++/38698\n        * typeck2.c (process_init_constructor_union): Handle excess\n        initializers.\n        (process_init_constructor_record): Likewise.\n\n        PR c++/38684\n        * typeck2.c (digest_init_r): Don't use process_init_constructor\n        for non-aggregate classes.\n\nFrom-SVN: r143024", "tree": {"sha": "042912cd19fa0aedf83febd250ff3484cda11631", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/042912cd19fa0aedf83febd250ff3484cda11631"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fc94bfc598fd5e0aacc9add9cfea4e521d329e97", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc94bfc598fd5e0aacc9add9cfea4e521d329e97", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc94bfc598fd5e0aacc9add9cfea4e521d329e97", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc94bfc598fd5e0aacc9add9cfea4e521d329e97/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "005c94297dd2f123b3852cd1a1b57b604d069307", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/005c94297dd2f123b3852cd1a1b57b604d069307", "html_url": "https://github.com/Rust-GCC/gccrs/commit/005c94297dd2f123b3852cd1a1b57b604d069307"}], "stats": {"total": 63, "additions": 61, "deletions": 2}, "files": [{"sha": "7ffa760679b6a2abcfeddb798620dcfb3dff9b95", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc94bfc598fd5e0aacc9add9cfea4e521d329e97/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc94bfc598fd5e0aacc9add9cfea4e521d329e97/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=fc94bfc598fd5e0aacc9add9cfea4e521d329e97", "patch": "@@ -1,3 +1,14 @@\n+2009-01-02  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/38698\n+\t* typeck2.c (process_init_constructor_union): Handle excess\n+\tinitializers.\n+\t(process_init_constructor_record): Likewise.\n+\n+\tPR c++/38684\n+\t* typeck2.c (digest_init_r): Don't use process_init_constructor\n+\tfor non-aggregate classes.\n+\n 2008-12-31  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/38647"}, {"sha": "e313e4b9a5d08f17b0ec2bfa3688f1723a414cf5", "filename": "gcc/cp/typeck2.c", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc94bfc598fd5e0aacc9add9cfea4e521d329e97/gcc%2Fcp%2Ftypeck2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc94bfc598fd5e0aacc9add9cfea4e521d329e97/gcc%2Fcp%2Ftypeck2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck2.c?ref=fc94bfc598fd5e0aacc9add9cfea4e521d329e97", "patch": "@@ -820,7 +820,8 @@ digest_init_r (tree type, tree init, bool nested)\n \t      || TREE_CODE (type) == UNION_TYPE\n \t      || TREE_CODE (type) == COMPLEX_TYPE);\n \n-  if (BRACE_ENCLOSED_INITIALIZER_P (init))\n+  if (BRACE_ENCLOSED_INITIALIZER_P (init)\n+      && !TYPE_NON_AGGREGATE_CLASS (type))\n     return process_init_constructor (type, init);\n   else\n     {\n@@ -1081,6 +1082,9 @@ process_init_constructor_record (tree type, tree init)\n       CONSTRUCTOR_APPEND_ELT (v, field, next);\n     }\n \n+  if (idx < VEC_length (constructor_elt, CONSTRUCTOR_ELTS (init)))\n+    error (\"too many initializers for %qT\", type);\n+    \n   CONSTRUCTOR_ELTS (init) = v;\n   return flags;\n }\n@@ -1093,12 +1097,19 @@ static int\n process_init_constructor_union (tree type, tree init)\n {\n   constructor_elt *ce;\n+  int len;\n \n   /* If the initializer was empty, use default zero initialization.  */\n   if (VEC_empty (constructor_elt, CONSTRUCTOR_ELTS (init)))\n     return 0;\n \n-  gcc_assert (VEC_length (constructor_elt, CONSTRUCTOR_ELTS (init)) == 1);\n+  len = VEC_length (constructor_elt, CONSTRUCTOR_ELTS (init));\n+  if (len > 1)\n+    {\n+      error (\"too many initializers for %qT\", type);\n+      VEC_block_remove (constructor_elt, CONSTRUCTOR_ELTS (init), 1, len-1);\n+    }\n+\n   ce = VEC_index (constructor_elt, CONSTRUCTOR_ELTS (init), 0);\n \n   /* If this element specifies a field, initialize via that field.  */"}, {"sha": "199784f52694dc15467e986abeea4241df054f55", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc94bfc598fd5e0aacc9add9cfea4e521d329e97/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc94bfc598fd5e0aacc9add9cfea4e521d329e97/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fc94bfc598fd5e0aacc9add9cfea4e521d329e97", "patch": "@@ -1,3 +1,8 @@\n+2009-01-02  Jason Merrill  <jason@redhat.com>\n+\n+\t* g++.dg/cpp0x/initlist11.C: New test.\n+\t* g++.dg/cpp0x/initlist12.C: New test.\n+\n 2009-01-02  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \t* gcc.dg/fixed-point/composite-type.c: Update wording of messages."}, {"sha": "789afc075562c664bb59d5293978984228a2988b", "filename": "gcc/testsuite/g++.dg/cpp0x/initlist11.C", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc94bfc598fd5e0aacc9add9cfea4e521d329e97/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist11.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc94bfc598fd5e0aacc9add9cfea4e521d329e97/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist11.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist11.C?ref=fc94bfc598fd5e0aacc9add9cfea4e521d329e97", "patch": "@@ -0,0 +1,17 @@\n+// PR c++/38684\n+\n+#include <initializer_list>\n+\n+struct Y {};\n+\n+struct X : Y { \n+  X(std::initializer_list<int>) {}\n+}; \n+\n+struct A { \n+  X v;\n+};\n+\n+int main() {\n+  A a{ {1,2,3} };\n+}"}, {"sha": "f3329d9b63ec1e08328684666e39eafecf1cf082", "filename": "gcc/testsuite/g++.dg/cpp0x/initlist12.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc94bfc598fd5e0aacc9add9cfea4e521d329e97/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist12.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc94bfc598fd5e0aacc9add9cfea4e521d329e97/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist12.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist12.C?ref=fc94bfc598fd5e0aacc9add9cfea4e521d329e97", "patch": "@@ -0,0 +1,15 @@\n+// PR c++/38698\n+\n+struct A\n+{\n+  int i;\n+};\n+\n+A a({1,2});\n+\n+union U\n+{\n+  int i,j;\n+};\n+\n+U u({1,2});"}]}