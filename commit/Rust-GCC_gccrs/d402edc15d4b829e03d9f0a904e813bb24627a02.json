{"sha": "d402edc15d4b829e03d9f0a904e813bb24627a02", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDQwMmVkYzE1ZDRiODI5ZTAzZDlmMGE5MDRlODEzYmIyNDYyN2EwMg==", "commit": {"author": {"name": "Nicola Pero", "email": "nicola.pero@meta-innovation.com", "date": "2010-11-29T20:43:35Z"}, "committer": {"name": "Nicola Pero", "email": "nicola@gcc.gnu.org", "date": "2010-11-29T20:43:35Z"}, "message": "In gcc/objc/: 2010-11-29 Nicola Pero <nicola.pero@meta-innovation.com>\n\nIn gcc/objc/:\n2010-11-29  Nicola Pero  <nicola.pero@meta-innovation.com>\n\n\t* objc-act.c (objc_maybe_build_component_ref): Removed TODO.\n\nIn gcc/testsuite/:\n2010-11-29  Nicola Pero  <nicola.pero@meta-innovation.com>\n\n\t* objc.dg/property/dotsyntax-21.m\n\t* obj-c++.dg/property/dotsyntax-21.mm\n\nFrom-SVN: r167269", "tree": {"sha": "d53807d14de458a39f0d003373659147dadddace", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d53807d14de458a39f0d003373659147dadddace"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d402edc15d4b829e03d9f0a904e813bb24627a02", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d402edc15d4b829e03d9f0a904e813bb24627a02", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d402edc15d4b829e03d9f0a904e813bb24627a02", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d402edc15d4b829e03d9f0a904e813bb24627a02/comments", "author": {"login": "Nico-31415", "id": 94470564, "node_id": "U_kgDOBaGBpA", "avatar_url": "https://avatars.githubusercontent.com/u/94470564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nico-31415", "html_url": "https://github.com/Nico-31415", "followers_url": "https://api.github.com/users/Nico-31415/followers", "following_url": "https://api.github.com/users/Nico-31415/following{/other_user}", "gists_url": "https://api.github.com/users/Nico-31415/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nico-31415/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nico-31415/subscriptions", "organizations_url": "https://api.github.com/users/Nico-31415/orgs", "repos_url": "https://api.github.com/users/Nico-31415/repos", "events_url": "https://api.github.com/users/Nico-31415/events{/privacy}", "received_events_url": "https://api.github.com/users/Nico-31415/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0e160b34c694459cca0532b510cbddf63bc7392d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e160b34c694459cca0532b510cbddf63bc7392d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e160b34c694459cca0532b510cbddf63bc7392d"}], "stats": {"total": 242, "additions": 237, "deletions": 5}, "files": [{"sha": "636bf85de1bfe3a6f5e539d3d454cca9d70a13ac", "filename": "gcc/objc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d402edc15d4b829e03d9f0a904e813bb24627a02/gcc%2Fobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d402edc15d4b829e03d9f0a904e813bb24627a02/gcc%2Fobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2FChangeLog?ref=d402edc15d4b829e03d9f0a904e813bb24627a02", "patch": "@@ -1,3 +1,7 @@\n+2010-11-29  Nicola Pero  <nicola.pero@meta-innovation.com>\n+\n+\t* objc-act.c (objc_maybe_build_component_ref): Removed TODO.\n+\n 2010-11-29  Nicola Pero  <nicola.pero@meta-innovation.com>\n \n \t* objc-act.c (objc_eh_runtime_type): Avoid ICE if error_mark_node"}, {"sha": "2382da4fd4d4eae3508e7f5b1889e0c004a8afe2", "filename": "gcc/objc/objc-act.c", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d402edc15d4b829e03d9f0a904e813bb24627a02/gcc%2Fobjc%2Fobjc-act.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d402edc15d4b829e03d9f0a904e813bb24627a02/gcc%2Fobjc%2Fobjc-act.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-act.c?ref=d402edc15d4b829e03d9f0a904e813bb24627a02", "patch": "@@ -1539,11 +1539,8 @@ objc_maybe_build_component_ref (tree object, tree property_ident)\n \t\t || TREE_CODE (t) == COMPONENT_REF)\n \t    t = TREE_OPERAND (t, 0);\n \t  \n-\t  if (t == UOBJC_SUPER_decl)\n-\t    {\n-\t      /* TODO: Check if this is correct also for 'super' in categories.  */\n-\t      interface_type = lookup_interface (CLASS_SUPER_NAME (implementation_template));\n-\t    }\n+\t  if (t == UOBJC_SUPER_decl)\t\n+\t    interface_type = lookup_interface (CLASS_SUPER_NAME (implementation_template));\n \t  else if (t == self_decl)\n \t    interface_type = lookup_interface (CLASS_NAME (implementation_template));\n "}, {"sha": "0a154e003a5388cd2e49169a021362975ae82793", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d402edc15d4b829e03d9f0a904e813bb24627a02/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d402edc15d4b829e03d9f0a904e813bb24627a02/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d402edc15d4b829e03d9f0a904e813bb24627a02", "patch": "@@ -1,3 +1,8 @@\n+2010-11-29  Nicola Pero  <nicola.pero@meta-innovation.com>\n+\n+\t* objc.dg/property/dotsyntax-21.m\n+\t* obj-c++.dg/property/dotsyntax-21.mm\n+\n 2010-11-29  Alexandre Oliva  <aoliva@redhat.com>\n \n \tPR debug/46338"}, {"sha": "4b8945ed644e1b76d98f24ef7a5517fd153ab8c4", "filename": "gcc/testsuite/obj-c++.dg/property/dotsyntax-21.mm", "status": "added", "additions": 113, "deletions": 0, "changes": 113, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d402edc15d4b829e03d9f0a904e813bb24627a02/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproperty%2Fdotsyntax-21.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d402edc15d4b829e03d9f0a904e813bb24627a02/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproperty%2Fdotsyntax-21.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproperty%2Fdotsyntax-21.mm?ref=d402edc15d4b829e03d9f0a904e813bb24627a02", "patch": "@@ -0,0 +1,113 @@\n+/* Contributed by Nicola Pero <nicola.pero@meta-innovation.com>, November 2010.  */\n+/* { dg-do run } */\n+/* { dg-xfail-run-if \"Needs OBJC2 ABI\" { *-*-darwin* && { lp64 && { ! objc2 } } } { \"-fnext-runtime\" } { \"\" } } */\n+\n+/* Test dot-syntax with super in a category.  */\n+\n+#include <stdlib.h>\n+#include <objc/objc.h>\n+#include <objc/runtime.h>\n+\n+@interface MyRootClass\n+{\n+  Class isa;\n+  int a;\n+}\n++ (id) initialize;\n++ (id) alloc;\n+- (id) init;\n+- (int) count;\n+- (void) setCount: (int)count;\n+@end\n+\n+@implementation MyRootClass\n++ (id) initialize { return self; }\n++ (id) alloc { return class_createInstance (self, 0); }\n+- (id) init { return self; }\n+- (int) count\n+{\n+  return a;\n+}\n+- (void) setCount: (int)count\n+{\n+  a = count;\n+}\n+@end\n+\n+/* First, test 'super' in the main implementation of a subclass.  */\n+@interface MySubClass : MyRootClass\n+- (int) superCount;\n+- (void) setSuperCount: (int)count;\n+@end\n+\n+@implementation MySubClass\n+- (int) superCount\n+{\n+  return super.count;\n+}\n+- (void) setSuperCount: (int)count\n+{\n+  super.count = count;\n+}\n+@end\n+\n+/* Now, test 'super' in a category of a subclass.  */\n+@interface MySubClass (Category)\n+- (int) superCount2;\n+- (void) setSuperCount2: (int)count;\n+- (int) test: (int)x;\n+@end\n+\n+@implementation MySubClass (Category)\n+- (int) superCount2\n+{\n+  return super.count;\n+}\n+- (void) setSuperCount2: (int)count\n+{\n+  super.count = count;\n+}\n+- (int) test: (int)x\n+{\n+  /* For positive x, the following will leave super.count\n+     unchanged.  */\n+  super.count++;\n+  --super.count;\n+\n+  super.count = (x < 0 ? x : super.count);\n+  \n+  if ((x = super.count))\n+    super.count += 1;\n+\n+  if ((x = super.count))\n+    super.count -= 1;\n+\n+  /* Finally, also put a bit of self.count in the mix.  */\n+  self.count++;\n+  super.count--;\n+\n+  return super.count;\n+}\n+@end\n+\n+int main (void)\n+{\n+  MySubClass *object = [[MySubClass alloc] init];\n+\n+  object.count = 10;\n+  if (object.count != 10)\n+    abort ();\n+\n+  object.superCount = 11;\n+  if (object.superCount != 11)\n+    abort ();\n+\n+  object.superCount2 = 12;\n+  if (object.superCount2 != 12)\n+    abort ();\n+\n+  if ([object test: 45] != 12)\n+    abort ();\n+\n+  return 0;\n+}"}, {"sha": "4b8945ed644e1b76d98f24ef7a5517fd153ab8c4", "filename": "gcc/testsuite/objc.dg/property/dotsyntax-21.m", "status": "added", "additions": 113, "deletions": 0, "changes": 113, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d402edc15d4b829e03d9f0a904e813bb24627a02/gcc%2Ftestsuite%2Fobjc.dg%2Fproperty%2Fdotsyntax-21.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d402edc15d4b829e03d9f0a904e813bb24627a02/gcc%2Ftestsuite%2Fobjc.dg%2Fproperty%2Fdotsyntax-21.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fproperty%2Fdotsyntax-21.m?ref=d402edc15d4b829e03d9f0a904e813bb24627a02", "patch": "@@ -0,0 +1,113 @@\n+/* Contributed by Nicola Pero <nicola.pero@meta-innovation.com>, November 2010.  */\n+/* { dg-do run } */\n+/* { dg-xfail-run-if \"Needs OBJC2 ABI\" { *-*-darwin* && { lp64 && { ! objc2 } } } { \"-fnext-runtime\" } { \"\" } } */\n+\n+/* Test dot-syntax with super in a category.  */\n+\n+#include <stdlib.h>\n+#include <objc/objc.h>\n+#include <objc/runtime.h>\n+\n+@interface MyRootClass\n+{\n+  Class isa;\n+  int a;\n+}\n++ (id) initialize;\n++ (id) alloc;\n+- (id) init;\n+- (int) count;\n+- (void) setCount: (int)count;\n+@end\n+\n+@implementation MyRootClass\n++ (id) initialize { return self; }\n++ (id) alloc { return class_createInstance (self, 0); }\n+- (id) init { return self; }\n+- (int) count\n+{\n+  return a;\n+}\n+- (void) setCount: (int)count\n+{\n+  a = count;\n+}\n+@end\n+\n+/* First, test 'super' in the main implementation of a subclass.  */\n+@interface MySubClass : MyRootClass\n+- (int) superCount;\n+- (void) setSuperCount: (int)count;\n+@end\n+\n+@implementation MySubClass\n+- (int) superCount\n+{\n+  return super.count;\n+}\n+- (void) setSuperCount: (int)count\n+{\n+  super.count = count;\n+}\n+@end\n+\n+/* Now, test 'super' in a category of a subclass.  */\n+@interface MySubClass (Category)\n+- (int) superCount2;\n+- (void) setSuperCount2: (int)count;\n+- (int) test: (int)x;\n+@end\n+\n+@implementation MySubClass (Category)\n+- (int) superCount2\n+{\n+  return super.count;\n+}\n+- (void) setSuperCount2: (int)count\n+{\n+  super.count = count;\n+}\n+- (int) test: (int)x\n+{\n+  /* For positive x, the following will leave super.count\n+     unchanged.  */\n+  super.count++;\n+  --super.count;\n+\n+  super.count = (x < 0 ? x : super.count);\n+  \n+  if ((x = super.count))\n+    super.count += 1;\n+\n+  if ((x = super.count))\n+    super.count -= 1;\n+\n+  /* Finally, also put a bit of self.count in the mix.  */\n+  self.count++;\n+  super.count--;\n+\n+  return super.count;\n+}\n+@end\n+\n+int main (void)\n+{\n+  MySubClass *object = [[MySubClass alloc] init];\n+\n+  object.count = 10;\n+  if (object.count != 10)\n+    abort ();\n+\n+  object.superCount = 11;\n+  if (object.superCount != 11)\n+    abort ();\n+\n+  object.superCount2 = 12;\n+  if (object.superCount2 != 12)\n+    abort ();\n+\n+  if ([object test: 45] != 12)\n+    abort ();\n+\n+  return 0;\n+}"}]}