{"sha": "cb56d8b09e0d1ad1dfdc111dd9b90b10e2164d9c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2I1NmQ4YjA5ZTBkMWFkMWRmZGMxMTFkZDliOTBiMTBlMjE2NGQ5Yw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2012-12-11T14:34:57Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2012-12-11T14:34:57Z"}, "message": "re PR tree-optimization/54570 (FAIL: gcc.dg/builtin-object-size-8.c execution test)\n\n\tPR tree-optimization/54570\n\t* gcc.dg/builtin-object-size-8.c: Xfail.\n\t* gcc.dg/builtin-object-size-13.c: New test.\n\nFrom-SVN: r194401", "tree": {"sha": "2fa1535a1651fb86fed11823664fede332377ddb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2fa1535a1651fb86fed11823664fede332377ddb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cb56d8b09e0d1ad1dfdc111dd9b90b10e2164d9c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb56d8b09e0d1ad1dfdc111dd9b90b10e2164d9c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb56d8b09e0d1ad1dfdc111dd9b90b10e2164d9c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb56d8b09e0d1ad1dfdc111dd9b90b10e2164d9c/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9cd9d33be92d48220b75c8d49f45acffa20aa890", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9cd9d33be92d48220b75c8d49f45acffa20aa890", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9cd9d33be92d48220b75c8d49f45acffa20aa890"}], "stats": {"total": 360, "additions": 359, "deletions": 1}, "files": [{"sha": "efdb9336377ef6e60b2c16d2a4173fc93a675be3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb56d8b09e0d1ad1dfdc111dd9b90b10e2164d9c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb56d8b09e0d1ad1dfdc111dd9b90b10e2164d9c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=cb56d8b09e0d1ad1dfdc111dd9b90b10e2164d9c", "patch": "@@ -1,4 +1,11 @@\n+2012-12-11  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/54570\n+\t* gcc.dg/builtin-object-size-8.c: Xfail.\n+\t* gcc.dg/builtin-object-size-13.c: New test.\n+\n 2012-12-11  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n \tPR target/55642\n \t* gcc.target/arm/pr55642.c: New testcase.\n "}, {"sha": "80a6280e3f9df962004774d990d3f1bc2a2f7d8d", "filename": "gcc/testsuite/gcc.dg/builtin-object-size-13.c", "status": "added", "additions": 351, "deletions": 0, "changes": 351, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb56d8b09e0d1ad1dfdc111dd9b90b10e2164d9c/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltin-object-size-13.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb56d8b09e0d1ad1dfdc111dd9b90b10e2164d9c/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltin-object-size-13.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltin-object-size-13.c?ref=cb56d8b09e0d1ad1dfdc111dd9b90b10e2164d9c", "patch": "@@ -0,0 +1,351 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O2\" } */\n+\n+typedef __SIZE_TYPE__ size_t;\n+extern void *malloc (size_t);\n+extern void free (void *);\n+extern void abort (void);\n+\n+union A\n+{\n+  int a1;\n+  char a2[3];\n+};\n+\n+union B\n+{\n+  long long b1;\n+  union A b2;\n+};\n+\n+struct C\n+{\n+  int c1;\n+  union A c2;\n+};\n+\n+struct D\n+{\n+  int d1;\n+  union B d2;\n+};\n+\n+union E\n+{\n+  struct C e1;\n+  char e2[3];\n+};\n+\n+union F\n+{\n+  int f1;\n+  struct D f2;\n+};\n+\n+struct G\n+{\n+  union A g1;\n+  char g2;\n+};\n+\n+struct H\n+{\n+  int h1;\n+  union E h2;\n+};\n+\n+#define T(X, S0, S1) \\\n+  if (__builtin_object_size (X, 0) != (S0))\t\\\n+    abort ();\t\t\t\t\t\\\n+  if (__builtin_object_size (X, 1) != (S1))\t\\\n+    abort ();\t\t\t\t\t\\\n+  if (__builtin_object_size (X, 2) != (S0))\t\\\n+    abort ();\t\t\t\t\t\\\n+  if (__builtin_object_size (X, 3) != (S1))\t\\\n+    abort ()\n+#define TS(X, S0) T(&X, S0, sizeof (X))\n+#define TA(X, S0, S1) \\\n+  T(X, S0, S1); T(&X[0], S0, S1); T(&X[1], (S0) - 1, (S1) - 1)\n+#define TF(X, S0) TA(X, S0, S0)\n+\n+int\n+main (void)\n+{\n+  size_t s, o, o2;\n+\n+  s = sizeof (union A);\n+  o = 0;\n+  union A *a1 = malloc (s);\n+  union A *a2 = malloc (o + 212);\n+  TS (a1->a1, s);\n+  s = o + 212;\n+  TS (a2->a1, s);\n+  free (a2);\n+  free (a1);\n+  s = sizeof (union A);\n+  o = 0;\n+  a1 = malloc (s);\n+  a2 = malloc (o + 212);\n+  TF (a1->a2, s);\n+  s = o + 212;\n+  TF (a2->a2, s);\n+  free (a2);\n+  free (a1);\n+\n+  s = sizeof (union B);\n+  o = 0;\n+  union B *b1 = malloc (s);\n+  union B *b2 = malloc (o + 212);\n+  TS (b1->b1, s);\n+  s = o + 212;\n+  TS (b2->b1, s);\n+  free (b2);\n+  free (b1);\n+  s = sizeof (union B);\n+  o = 0;\n+  b1 = malloc (s);\n+  b2 = malloc (o + 212);\n+  TS (b1->b2.a1, s);\n+  s = o + 212;\n+  TS (b2->b2.a1, s);\n+  free (b2);\n+  free (b1);\n+  s = sizeof (union B);\n+  o = 0;\n+  b1 = malloc (s);\n+  b2 = malloc (o + 212);\n+  TF (b1->b2.a2, s);\n+  s = o + 212;\n+  TF (b2->b2.a2, s);\n+  free (b2);\n+  free (b1);\n+\n+  s = sizeof (struct C);\n+  o = __builtin_offsetof (struct C, c2);\n+  struct C *c1 = malloc (s);\n+  struct C *c2 = malloc (o + 212);\n+  TS (c1->c1, s);\n+  s = o + 212;\n+  TS (c2->c1, s);\n+  free (c2);\n+  free (c1);\n+  s = sizeof (struct C);\n+  o = __builtin_offsetof (struct C, c2);\n+  c1 = malloc (s);\n+  c2 = malloc (o + 212);\n+  TS (c1->c2.a1, s - o);\n+  s = o + 212;\n+  TS (c2->c2.a1, s - o);\n+  free (c2);\n+  free (c1);\n+  s = sizeof (struct C);\n+  o = __builtin_offsetof (struct C, c2);\n+  c1 = malloc (s);\n+  c2 = malloc (o + 212);\n+  TF (c1->c2.a2, s - o);\n+  s = o + 212;\n+  TF (c2->c2.a2, s - o);\n+  free (c2);\n+  free (c1);\n+\n+  s = sizeof (struct D);\n+  o = __builtin_offsetof (struct D, d2);\n+  struct D *d1 = malloc (s);\n+  struct D *d2 = malloc (o + 212);\n+  TS (d1->d1, s);\n+  s = o + 212;\n+  TS (d2->d1, s);\n+  free (d2);\n+  free (d1);\n+  s = sizeof (struct D);\n+  o = __builtin_offsetof (struct D, d2);\n+  d1 = malloc (s);\n+  d2 = malloc (o + 212);\n+  TS (d1->d2.b1, s - o);\n+  s = o + 212;\n+  TS (d2->d2.b1, s - o);\n+  free (d2);\n+  free (d1);\n+  s = sizeof (struct D);\n+  o = __builtin_offsetof (struct D, d2);\n+  d1 = malloc (s);\n+  d2 = malloc (o + 212);\n+  TS (d1->d2.b2.a1, s - o);\n+  s = o + 212;\n+  TS (d2->d2.b2.a1, s - o);\n+  free (d2);\n+  free (d1);\n+  s = sizeof (struct D);\n+  o = __builtin_offsetof (struct D, d2);\n+  d1 = malloc (s);\n+  d2 = malloc (o + 212);\n+  TF (d1->d2.b2.a2, s - o);\n+  s = o + 212;\n+  TF (d2->d2.b2.a2, s - o);\n+  free (d2);\n+  free (d1);\n+\n+  s = sizeof (union E);\n+  o = __builtin_offsetof (union E, e1.c2);\n+  union E *e1 = malloc (s);\n+  union E *e2 = malloc (o + 212);\n+  TS (e1->e1.c1, s);\n+  s = o + 212;\n+  TS (e2->e1.c1, s);\n+  free (e2);\n+  free (e1);\n+  s = sizeof (union E);\n+  o = __builtin_offsetof (union E, e1.c2);\n+  e1 = malloc (s);\n+  e2 = malloc (o + 212);\n+  TS (e1->e1.c2.a1, s - o);\n+  s = o + 212;\n+  TS (e2->e1.c2.a1, s - o);\n+  free (e2);\n+  free (e1);\n+  s = sizeof (union E);\n+  o = __builtin_offsetof (union E, e1.c2);\n+  e1 = malloc (s);\n+  e2 = malloc (o + 212);\n+  TF (e1->e1.c2.a2, s - o);\n+  s = o + 212;\n+  TF (e2->e1.c2.a2, s - o);\n+  free (e2);\n+  free (e1);\n+  s = sizeof (union E);\n+  o = __builtin_offsetof (union E, e1.c2);\n+  e1 = malloc (s);\n+  e2 = malloc (o + 212);\n+  TF (e1->e2, s);\n+  s = o + 212;\n+  TF (e2->e2, s);\n+  free (e2);\n+  free (e1);\n+\n+  s = sizeof (union F);\n+  o = __builtin_offsetof (union F, f2.d2);\n+  union F *f1 = malloc (s);\n+  union F *f2 = malloc (o + 212);\n+  TS (f1->f1, s);\n+  s = o + 212;\n+  TS (f2->f1, s);\n+  free (f2);\n+  free (f1);\n+  s = sizeof (union F);\n+  o = __builtin_offsetof (union F, f2.d2);\n+  f1 = malloc (s);\n+  f2 = malloc (o + 212);\n+  TS (f1->f2.d1, s);\n+  s = o + 212;\n+  TS (f2->f2.d1, s);\n+  free (f2);\n+  free (f1);\n+  s = sizeof (union F);\n+  o = __builtin_offsetof (union F, f2.d2);\n+  f1 = malloc (s);\n+  f2 = malloc (o + 212);\n+  TS (f1->f2.d2.b1, s - o);\n+  s = o + 212;\n+  TS (f2->f2.d2.b1, s - o);\n+  free (f2);\n+  free (f1);\n+  s = sizeof (union F);\n+  o = __builtin_offsetof (union F, f2.d2);\n+  f1 = malloc (s);\n+  f2 = malloc (o + 212);\n+  TS (f1->f2.d2.b2.a1, s - o);\n+  s = o + 212;\n+  TS (f2->f2.d2.b2.a1, s - o);\n+  free (f2);\n+  free (f1);\n+  s = sizeof (union F);\n+  o = __builtin_offsetof (union F, f2.d2);\n+  f1 = malloc (s);\n+  f2 = malloc (o + 212);\n+  TF (f1->f2.d2.b2.a2, s - o);\n+  s = o + 212;\n+  TF (f2->f2.d2.b2.a2, s - o);\n+  free (f2);\n+  free (f1);\n+\n+  s = sizeof (struct G);\n+  o = __builtin_offsetof (struct G, g2);\n+  struct G *g1 = malloc (s);\n+  struct G *g2 = malloc (o + 212);\n+  TS (g1->g1.a1, s);\n+  s = o + 212;\n+  TS (g2->g1.a1, s);\n+  free (g2);\n+  free (g1);\n+  s = sizeof (struct G);\n+  o = __builtin_offsetof (struct G, g2);\n+  g1 = malloc (s);\n+  g2 = malloc (o + 212);\n+  TA (g1->g1.a2, s, sizeof (g1->g1.a2));\n+  s = o + 212;\n+  TA (g2->g1.a2, s, sizeof (g1->g1.a2));\n+  free (g2);\n+  free (g1);\n+  s = sizeof (struct G);\n+  o = __builtin_offsetof (struct G, g2);\n+  g1 = malloc (s);\n+  g2 = malloc (o + 212);\n+  TS (g1->g2, s - o);\n+  s = o + 212;\n+  TS (g2->g2, s - o);\n+  free (g2);\n+  free (g1);\n+\n+  s = sizeof (struct H);\n+  o = __builtin_offsetof (struct H, h2);\n+  o2 = __builtin_offsetof (struct H, h2.e1.c2);\n+  struct H *h1 = malloc (s);\n+  struct H *h2 = malloc (o2 + 212);\n+  TS (h1->h1, s);\n+  s = o2 + 212;\n+  TS (h2->h1, s);\n+  free (h2);\n+  free (h1);\n+  s = sizeof (struct H);\n+  o = __builtin_offsetof (struct H, h2);\n+  o2 = __builtin_offsetof (struct H, h2.e1.c2);\n+  h1 = malloc (s);\n+  h2 = malloc (o2 + 212);\n+  TS (h1->h2.e1.c1, s - o);\n+  s = o2 + 212;\n+  TS (h2->h2.e1.c1, s - o);\n+  free (h2);\n+  free (h1);\n+  s = sizeof (struct H);\n+  o = __builtin_offsetof (struct H, h2);\n+  o2 = __builtin_offsetof (struct H, h2.e1.c2);\n+  h1 = malloc (s);\n+  h2 = malloc (o2 + 212);\n+  TS (h1->h2.e1.c2.a1, s - o2);\n+  s = o2 + 212;\n+  TS (h2->h2.e1.c2.a1, s - o2);\n+  free (h2);\n+  free (h1);\n+  s = sizeof (struct H);\n+  o = __builtin_offsetof (struct H, h2);\n+  o2 = __builtin_offsetof (struct H, h2.e1.c2);\n+  h1 = malloc (s);\n+  h2 = malloc (o2 + 212);\n+  TA (h1->h2.e1.c2.a2, s - o2, sizeof (h1->h2.e1.c2.a2));\n+  s = o2 + 212;\n+  TA (h2->h2.e1.c2.a2, s - o2, sizeof (h2->h2.e1.c2.a2));\n+  free (h2);\n+  free (h1);\n+  s = sizeof (struct H);\n+  o = __builtin_offsetof (struct H, h2);\n+  o2 = __builtin_offsetof (struct H, h2.e1.c2);\n+  h1 = malloc (s);\n+  h2 = malloc (o2 + 212);\n+  TF (h1->h2.e2, s - o);\n+  s = o2 + 212;\n+  TF (h2->h2.e2, s - o);\n+  free (h2);\n+  free (h1);\n+\n+  return 0;\n+}"}, {"sha": "7af64d3ab7aa22a3bbbb3284bb02e0151f515b24", "filename": "gcc/testsuite/gcc.dg/builtin-object-size-8.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb56d8b09e0d1ad1dfdc111dd9b90b10e2164d9c/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltin-object-size-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb56d8b09e0d1ad1dfdc111dd9b90b10e2164d9c/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltin-object-size-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltin-object-size-8.c?ref=cb56d8b09e0d1ad1dfdc111dd9b90b10e2164d9c", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do run } */\n+/* { dg-do run { xfail *-*-* } } */\n /* { dg-options \"-O2\" } */\n \n typedef __SIZE_TYPE__ size_t;"}]}