{"sha": "c31bffa99b1a7007572637228bd99c00362ae597", "node_id": "C_kwDOANBUbNoAKGMzMWJmZmE5OWIxYTcwMDc1NzI2MzcyMjhiZDk5YzAwMzYyYWU1OTc", "commit": {"author": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2022-06-27T11:54:16Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2022-06-27T11:54:16Z"}, "message": "move resolve-item functions into their associated file", "tree": {"sha": "cf51a44cf731fab61d68da36e65b5c939cfed566", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cf51a44cf731fab61d68da36e65b5c939cfed566"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c31bffa99b1a7007572637228bd99c00362ae597", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c31bffa99b1a7007572637228bd99c00362ae597", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c31bffa99b1a7007572637228bd99c00362ae597", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c31bffa99b1a7007572637228bd99c00362ae597/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b9fffb15587d4e45796e1ac1b230119f38f10662", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9fffb15587d4e45796e1ac1b230119f38f10662", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b9fffb15587d4e45796e1ac1b230119f38f10662"}], "stats": {"total": 47, "additions": 23, "deletions": 24}, "files": [{"sha": "5a21d570d83dd932992a15f87c0d4f6a284bd4bf", "filename": "gcc/rust/resolve/rust-ast-resolve-item.cc", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c31bffa99b1a7007572637228bd99c00362ae597/gcc%2Frust%2Fresolve%2Frust-ast-resolve-item.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c31bffa99b1a7007572637228bd99c00362ae597/gcc%2Frust%2Fresolve%2Frust-ast-resolve-item.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fresolve%2Frust-ast-resolve-item.cc?ref=c31bffa99b1a7007572637228bd99c00362ae597", "patch": "@@ -914,6 +914,28 @@ ResolveItem::visit (AST::ExternBlock &extern_block)\n     }\n }\n \n+void\n+ResolveItem::resolve_impl_item (AST::TraitImplItem *item,\n+\t\t\t\tconst CanonicalPath &prefix,\n+\t\t\t\tconst CanonicalPath &canonical_prefix)\n+{\n+  ResolveImplItems::go (item, prefix, canonical_prefix);\n+}\n+\n+void\n+ResolveItem::resolve_impl_item (AST::InherentImplItem *item,\n+\t\t\t\tconst CanonicalPath &prefix,\n+\t\t\t\tconst CanonicalPath &canonical_prefix)\n+{\n+  ResolveImplItems::go (item, prefix, canonical_prefix);\n+}\n+\n+void\n+ResolveItem::resolve_extern_item (AST::ExternalItem *item)\n+{\n+  ResolveExternItem::go (item);\n+}\n+\n static void\n flatten_glob (const AST::UseTreeGlob &glob,\n \t      std::vector<AST::SimplePath> &paths);\n@@ -1296,6 +1318,7 @@ rust_simple_path_resolve_test (void)\n {\n   rust_use_dec_flattening ();\n }\n+\n } // namespace selftest\n \n #endif // CHECKING_P"}, {"sha": "ff042bc95eafbdeab9d0f7fc63e52390c9f99700", "filename": "gcc/rust/resolve/rust-ast-resolve.cc", "status": "modified", "additions": 0, "deletions": 24, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c31bffa99b1a7007572637228bd99c00362ae597/gcc%2Frust%2Fresolve%2Frust-ast-resolve.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c31bffa99b1a7007572637228bd99c00362ae597/gcc%2Frust%2Fresolve%2Frust-ast-resolve.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fresolve%2Frust-ast-resolve.cc?ref=c31bffa99b1a7007572637228bd99c00362ae597", "patch": "@@ -111,30 +111,6 @@ NameResolution::go (AST::Crate &crate)\n   resolver->pop_module_scope ();\n }\n \n-// rust-ast-resolve-item.h\n-\n-void\n-ResolveItem::resolve_impl_item (AST::TraitImplItem *item,\n-\t\t\t\tconst CanonicalPath &prefix,\n-\t\t\t\tconst CanonicalPath &canonical_prefix)\n-{\n-  ResolveImplItems::go (item, prefix, canonical_prefix);\n-}\n-\n-void\n-ResolveItem::resolve_impl_item (AST::InherentImplItem *item,\n-\t\t\t\tconst CanonicalPath &prefix,\n-\t\t\t\tconst CanonicalPath &canonical_prefix)\n-{\n-  ResolveImplItems::go (item, prefix, canonical_prefix);\n-}\n-\n-void\n-ResolveItem::resolve_extern_item (AST::ExternalItem *item)\n-{\n-  ResolveExternItem::go (item);\n-}\n-\n // qualified path in type\n \n bool"}]}