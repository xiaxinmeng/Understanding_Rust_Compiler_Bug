{"sha": "6ddae612862ce6cf65cfeddac2d0959d7397d0be", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmRkYWU2MTI4NjJjZTZjZjY1Y2ZlZGRhYzJkMDk1OWQ3Mzk3ZDBiZQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2002-03-25T11:34:11Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2002-03-25T11:34:11Z"}, "message": "re PR target/6043 (IICE on ia64 for Blitz config test for C++ complex math)\n\n\tPR target/6043\n\t* expr.c (emit_group_store): Handle storing into CONCAT.\n\n\t* g++.dg/opt/conj2.C: New test.\n\nFrom-SVN: r51311", "tree": {"sha": "3f696f0ff6c9196d8903fb35f20fb615915ea88d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3f696f0ff6c9196d8903fb35f20fb615915ea88d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6ddae612862ce6cf65cfeddac2d0959d7397d0be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ddae612862ce6cf65cfeddac2d0959d7397d0be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ddae612862ce6cf65cfeddac2d0959d7397d0be", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ddae612862ce6cf65cfeddac2d0959d7397d0be/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9035ec7952324e5b2a4b17cfc86db62c44d008a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9035ec7952324e5b2a4b17cfc86db62c44d008a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9035ec7952324e5b2a4b17cfc86db62c44d008a3"}], "stats": {"total": 52, "additions": 48, "deletions": 4}, "files": [{"sha": "613342afeb32781de3a4196d69a1070cc7ab34d9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ddae612862ce6cf65cfeddac2d0959d7397d0be/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ddae612862ce6cf65cfeddac2d0959d7397d0be/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6ddae612862ce6cf65cfeddac2d0959d7397d0be", "patch": "@@ -1,3 +1,8 @@\n+2002-03-25  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/6043\n+\t* expr.c (emit_group_store): Handle storing into CONCAT.\n+\n 2002-03-25  Jakub Jelinek  <jakub@redhat.com>\n \n \t* regrename.c (build_def_use): Share RTL between MATCH_OPERATOR and"}, {"sha": "e6821d5f28f982249c584f747a89af0bff0ff554", "filename": "gcc/expr.c", "status": "modified", "additions": 18, "deletions": 4, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ddae612862ce6cf65cfeddac2d0959d7397d0be/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ddae612862ce6cf65cfeddac2d0959d7397d0be/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=6ddae612862ce6cf65cfeddac2d0959d7397d0be", "patch": "@@ -2113,6 +2113,7 @@ emit_group_store (orig_dst, src, ssize)\n       HOST_WIDE_INT bytepos = INTVAL (XEXP (XVECEXP (src, 0, i), 1));\n       enum machine_mode mode = GET_MODE (tmps[i]);\n       unsigned int bytelen = GET_MODE_SIZE (mode);\n+      rtx dest = dst;\n \n       /* Handle trailing fragments that run over the size of the struct.  */\n       if (ssize >= 0 && bytepos + (HOST_WIDE_INT) bytelen > ssize)\n@@ -2126,14 +2127,27 @@ emit_group_store (orig_dst, src, ssize)\n \t  bytelen = ssize - bytepos;\n \t}\n \n+      if (GET_CODE (dst) == CONCAT)\n+\t{\n+\t  if (bytepos + bytelen <= GET_MODE_SIZE (GET_MODE (XEXP (dst, 0))))\n+\t    dest = XEXP (dst, 0);\n+\t  else if (bytepos >= GET_MODE_SIZE (GET_MODE (XEXP (dst, 0))))\n+\t    {\n+\t      bytepos -= GET_MODE_SIZE (GET_MODE (XEXP (dst, 0)));\n+\t      dest = XEXP (dst, 1);\n+\t    }\n+\t  else\n+\t    abort ();\n+\t}\n+\n       /* Optimize the access just a bit.  */\n-      if (GET_CODE (dst) == MEM\n-\t  && MEM_ALIGN (dst) >= GET_MODE_ALIGNMENT (mode)\n+      if (GET_CODE (dest) == MEM\n+\t  && MEM_ALIGN (dest) >= GET_MODE_ALIGNMENT (mode)\n \t  && bytepos * BITS_PER_UNIT % GET_MODE_ALIGNMENT (mode) == 0\n \t  && bytelen == GET_MODE_SIZE (mode))\n-\temit_move_insn (adjust_address (dst, mode, bytepos), tmps[i]);\n+\temit_move_insn (adjust_address (dest, mode, bytepos), tmps[i]);\n       else\n-\tstore_bit_field (dst, bytelen * BITS_PER_UNIT, bytepos * BITS_PER_UNIT,\n+\tstore_bit_field (dest, bytelen * BITS_PER_UNIT, bytepos * BITS_PER_UNIT,\n \t\t\t mode, tmps[i], ssize);\n     }\n "}, {"sha": "8a22162ec6648bb1ff569a72cf2e5fc7bc5c07be", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ddae612862ce6cf65cfeddac2d0959d7397d0be/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ddae612862ce6cf65cfeddac2d0959d7397d0be/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6ddae612862ce6cf65cfeddac2d0959d7397d0be", "patch": "@@ -2,6 +2,8 @@\n \n \t* gcc.c-torture/compile/20020323-1.c: New test.\n \n+\t* g++.dg/opt/conj2.C: New test.\n+\n 2002-03-24  Richard Henderson  <rth@redhat.com>\n \n \t* gcc.dg/weak-1.c: Use -fno-common."}, {"sha": "25e832a02c3328226bf66174ecae1efbf8f6cd26", "filename": "gcc/testsuite/g++.dg/opt/conj2.C", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ddae612862ce6cf65cfeddac2d0959d7397d0be/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fconj2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ddae612862ce6cf65cfeddac2d0959d7397d0be/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fconj2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fconj2.C?ref=6ddae612862ce6cf65cfeddac2d0959d7397d0be", "patch": "@@ -0,0 +1,23 @@\n+// PR target/6043\n+// This testcase ICEd on IA-64 because emit_group_store\n+// did not handle loading CONCAT from register group\n+// { dg-do compile }\n+\n+struct C\n+{\n+  C (double y, double z) { __real__ x = y; __imag__ x = z; }\n+  double r () const { return __real__ x; }\n+  double i () const { return __imag__ x; }\n+  __complex__ double x;\n+};\n+\n+inline C conj (const C& x)\n+{\n+  return C (x.r (), - x.i ());\n+}\n+\n+void foo (void)\n+{\n+  C x (1.0, 1.0);\n+  conj (x);\n+}"}]}