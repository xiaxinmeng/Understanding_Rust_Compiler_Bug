{"sha": "8e3f41e725238fdc0f7d8ba1a5ef6f1a27be72e3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGUzZjQxZTcyNTIzOGZkYzBmN2Q4YmExYTVlZjZmMWEyN2JlNzJlMw==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1995-12-20T17:05:26Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1995-12-20T17:05:26Z"}, "message": "Make AIX4 use -mcpu=common by default; add -mtune=\n\nFrom-SVN: r10820", "tree": {"sha": "776a076a6433332dd1b12ef32987743ca0c530de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/776a076a6433332dd1b12ef32987743ca0c530de"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8e3f41e725238fdc0f7d8ba1a5ef6f1a27be72e3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e3f41e725238fdc0f7d8ba1a5ef6f1a27be72e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e3f41e725238fdc0f7d8ba1a5ef6f1a27be72e3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e3f41e725238fdc0f7d8ba1a5ef6f1a27be72e3/comments", "author": null, "committer": null, "parents": [{"sha": "39dffea3c7e295b6e847f6709605de5ff2aff038", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39dffea3c7e295b6e847f6709605de5ff2aff038", "html_url": "https://github.com/Rust-GCC/gccrs/commit/39dffea3c7e295b6e847f6709605de5ff2aff038"}], "stats": {"total": 383, "additions": 318, "deletions": 65}, "files": [{"sha": "b790bb3f93faef7f18f8ab141e977aec0b8e8d6d", "filename": "gcc/config/rs6000/aix3newas.h", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e3f41e725238fdc0f7d8ba1a5ef6f1a27be72e3/gcc%2Fconfig%2Frs6000%2Faix3newas.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e3f41e725238fdc0f7d8ba1a5ef6f1a27be72e3/gcc%2Fconfig%2Frs6000%2Faix3newas.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faix3newas.h?ref=8e3f41e725238fdc0f7d8ba1a5ef6f1a27be72e3", "patch": "@@ -35,7 +35,9 @@ Boston, MA 02111-1307, USA.  */\n   %{!mno-power: %{mpowerpc*: -m601}} \\\n   %{!mno-power: %{!mpowerpc*: %{!mpower2: -mpwr}}}} \\\n %{mcpu=common: -mcom} \\\n+%{mcpu=rs6000: -mpwr} \\\n %{mcpu=power: -mpwr} \\\n+%{mcpu=power2: -mpwrx} \\\n %{mcpu=powerpc: -mppc} \\\n %{mcpu=rios: -mpwr} \\\n %{mcpu=rios1: -mpwr} \\\n@@ -44,9 +46,11 @@ Boston, MA 02111-1307, USA.  */\n %{mcpu=rsc1: -mpwr} \\\n %{mcpu=403: -mppc} \\\n %{mcpu=601: -m601} \\\n+%{mcpu=602: -mppc} \\\n %{mcpu=603: -mppc} \\\n %{mcpu=603e: -mppc} \\\n-%{mcpu=604: -mppc}\"\n+%{mcpu=604: -mppc} \\\n+%{mcpu=620: -mppc}\"\n \n /* Define the options for the binder: Start text at 512, align all segments\n    to 512 bytes, and warn if there is text relocation."}, {"sha": "fa8d168e0b177492e9ae2fd94bc6d7b2e5a3c8a6", "filename": "gcc/config/rs6000/aix41.h", "status": "modified", "additions": 53, "deletions": 6, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e3f41e725238fdc0f7d8ba1a5ef6f1a27be72e3/gcc%2Fconfig%2Frs6000%2Faix41.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e3f41e725238fdc0f7d8ba1a5ef6f1a27be72e3/gcc%2Fconfig%2Frs6000%2Faix41.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faix41.h?ref=8e3f41e725238fdc0f7d8ba1a5ef6f1a27be72e3", "patch": "@@ -26,14 +26,15 @@ Boston, MA 02111-1307, USA.  */\n #undef ASM_SPEC\n #define ASM_SPEC \"-u \\\n %{!mcpu*: \\\n-  %{mpower: %{!mpowerpc*: %{!mpower2: -mpwr}}} \\\n   %{mpower2: -mpwrx} \\\n-  %{mno-power: %{mpowerpc*: -mppc}} \\\n-  %{mno-power: %{!mpowerpc*: -mcom}} \\\n-  %{!mno-power: %{mpowerpc*: -m601}} \\\n-  %{!mno-power: %{!mpowerpc*: %{!mpower2: -mpwr}}}} \\\n+  %{mpowerpc*: %{!mpower: -mppc}} \\\n+  %{mpower: %{!mpower2: -mpwr}} \\\n+  %{mpowerpc*: %{mpower: -m601}} \\\n+  %{!mpowerpc*: %{!mpower*: -mcom}}} \\\n %{mcpu=common: -mcom} \\\n+%{mcpu=rs6000: -mpwr} \\\n %{mcpu=power: -mpwr} \\\n+%{mcpu=power2: -mpwrx} \\\n %{mcpu=powerpc: -mppc} \\\n %{mcpu=rios: -mpwr} \\\n %{mcpu=rios1: -mpwr} \\\n@@ -42,9 +43,55 @@ Boston, MA 02111-1307, USA.  */\n %{mcpu=rsc1: -mpwr} \\\n %{mcpu=403: -mppc} \\\n %{mcpu=601: -m601} \\\n+%{mcpu=602: -mppc} \\\n %{mcpu=603: -mppc} \\\n %{mcpu=603e: -mppc} \\\n-%{mcpu=604: -mppc}\"\n+%{mcpu=604: -mppc} \\\n+%{mcpu=620: -mppc}\"\n+\n+#undef CPP_PREDEFINES\n+#define CPP_PREDEFINES \"-D_IBMR2 -D_POWER -D_AIX -D_AIX32 \\\n+-Asystem(unix) -Asystem(aix)\"\n+\n+#undef CPP_SPEC\n+#define CPP_SPEC \"\\\n+%{posix: -D_POSIX_SOURCE} \\\n+%{!mcpu*: \\\n+  %{mpower: %{!mpower2: -D_ARCH_PWR}} \\\n+  %{mpower2: -D_ARCH_PWR2} \\\n+  %{mpowerpc*: -D_ARCH_PPC} \\\n+  %{!mpower*: -D_ARCH_COM}} \\\n+%{mcpu=common: -D_ARCH_COM} \\\n+%{mcpu=rs6000: -D_ARCH_PWR} \\\n+%{mcpu=power: -D_ARCH_PWR} \\\n+%{mcpu=power2: -D_ARCH_PWR2} \\\n+%{mcpu=powerpc: -D_ARCH_PPC} \\\n+%{mcpu=rios: -D_ARCH_PWR} \\\n+%{mcpu=rios1: -D_ARCH_PWR} \\\n+%{mcpu=rios2: -D_ARCH_PWR2} \\\n+%{mcpu=rsc: -D_ARCH_PWR} \\\n+%{mcpu=rsc1: -D_ARCH_PWR} \\\n+%{mcpu=403: -D_ARCH_PPC} \\\n+%{mcpu=601: -D_ARCH_PPC -D_ARCH_PWR} \\\n+%{mcpu=6*: -D_ARCH_PPC}\"\n+\n+#undef TARGET_DEFAULT\n+#define TARGET_DEFAULT MASK_NEW_MNEMONICS\n+\n+#undef PROCESSOR_DEFAULT\n+#define PROCESSOR_DEFAULT PROCESSOR_PPC601\n+\n+/* Define this macro as a C expression for the initializer of an\n+   array of string to tell the driver program which options are\n+   defaults for this target and thus do not need to be handled\n+   specially when using `MULTILIB_OPTIONS'.\n+\n+   Do not define this macro if `MULTILIB_OPTIONS' is not defined in\n+   the target makefile fragment or if none of the options listed in\n+   `MULTILIB_OPTIONS' are set by default.  *Note Target Fragment::.  */\n+\n+#undef\tMULTILIB_DEFAULTS\n+#define\tMULTILIB_DEFAULTS { \"mcpu=common\" }\n \n /* These are not necessary when we pass -u to the assembler, and undefining\n    them saves a great deal of space in object files.  */"}, {"sha": "dcb00c7de1bf6b026a4b3117ba4df4c0e49cd4e0", "filename": "gcc/config/rs6000/eabiaix.h", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e3f41e725238fdc0f7d8ba1a5ef6f1a27be72e3/gcc%2Fconfig%2Frs6000%2Feabiaix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e3f41e725238fdc0f7d8ba1a5ef6f1a27be72e3/gcc%2Fconfig%2Frs6000%2Feabiaix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Feabiaix.h?ref=8e3f41e725238fdc0f7d8ba1a5ef6f1a27be72e3", "patch": "@@ -42,7 +42,9 @@ Boston, MA 02111-1307, USA.  */\n   %{mno-powerpc: %{!mpower: %{!mpower2: -D_ARCH_COM}}} \\\n   %{!mno-powerpc: -D_ARCH_PPC}} \\\n %{mcpu=common: -D_ARCH_COM} \\\n+%{mcpu=rs6000: -D_ARCH_PWR} \\\n %{mcpu=power: -D_ARCH_PWR} \\\n+%{mcpu=power2: -D_ARCH_PWR2} \\\n %{mcpu=powerpc: -D_ARCH_PPC} \\\n %{mcpu=rios: -D_ARCH_PWR} \\\n %{mcpu=rios1: -D_ARCH_PWR} \\\n@@ -51,11 +53,7 @@ Boston, MA 02111-1307, USA.  */\n %{mcpu=rsc1: -D_ARCH_PWR} \\\n %{mcpu=403: -D_ARCH_PPC} \\\n %{mcpu=601: -D_ARCH_PPC -D_ARCH_PWR} \\\n-%{mcpu=602: -D_ARCH_PPC} \\\n-%{mcpu=603: -D_ARCH_PPC} \\\n-%{mcpu=603e: -D_ARCH_PPC} \\\n-%{mcpu=604: -D_ARCH_PPC} \\\n-%{mcpu=620: -D_ARCH_PPC}\"\n+%{mcpu=6*: -D_ARCH_PPC}\"\n \n /* Define this macro as a C expression for the initializer of an\n    array of string to tell the driver program which options are"}, {"sha": "06f8b1eebd8d9dc024673a67b5080e0c8dcbb174", "filename": "gcc/config/rs6000/eabile.h", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e3f41e725238fdc0f7d8ba1a5ef6f1a27be72e3/gcc%2Fconfig%2Frs6000%2Feabile.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e3f41e725238fdc0f7d8ba1a5ef6f1a27be72e3/gcc%2Fconfig%2Frs6000%2Feabile.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Feabile.h?ref=8e3f41e725238fdc0f7d8ba1a5ef6f1a27be72e3", "patch": "@@ -43,7 +43,9 @@ Boston, MA 02111-1307, USA.  */\n   %{mno-powerpc: %{!mpower: %{!mpower2: -D_ARCH_COM}}} \\\n   %{!mno-powerpc: -D_ARCH_PPC}} \\\n %{mcpu=common: -D_ARCH_COM} \\\n+%{mcpu=rs6000: -D_ARCH_PWR} \\\n %{mcpu=power: -D_ARCH_PWR} \\\n+%{mcpu=power2: -D_ARCH_PWR2} \\\n %{mcpu=powerpc: -D_ARCH_PPC} \\\n %{mcpu=rios: -D_ARCH_PWR} \\\n %{mcpu=rios1: -D_ARCH_PWR} \\\n@@ -52,11 +54,7 @@ Boston, MA 02111-1307, USA.  */\n %{mcpu=rsc1: -D_ARCH_PWR} \\\n %{mcpu=403: -D_ARCH_PPC} \\\n %{mcpu=601: -D_ARCH_PPC -D_ARCH_PWR} \\\n-%{mcpu=602: -D_ARCH_PPC} \\\n-%{mcpu=603: -D_ARCH_PPC} \\\n-%{mcpu=603e: -D_ARCH_PPC} \\\n-%{mcpu=604: -D_ARCH_PPC} \\\n-%{mcpu=620: -D_ARCH_PPC}\"\n+%{mcpu=6*: -D_ARCH_PPC}\"\n \n /* Define this macro as a C expression for the initializer of an\n    array of string to tell the driver program which options are"}, {"sha": "ac16a4cecf260c529dad5a3570778a2a93d0d1c2", "filename": "gcc/config/rs6000/lynx.h", "status": "modified", "additions": 26, "deletions": 1, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e3f41e725238fdc0f7d8ba1a5ef6f1a27be72e3/gcc%2Fconfig%2Frs6000%2Flynx.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e3f41e725238fdc0f7d8ba1a5ef6f1a27be72e3/gcc%2Fconfig%2Frs6000%2Flynx.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Flynx.h?ref=8e3f41e725238fdc0f7d8ba1a5ef6f1a27be72e3", "patch": "@@ -72,7 +72,32 @@ Boston, MA 02111-1307, USA.  */\n \n /* This can become more refined as we have more powerpc options. */\n #undef ASM_SPEC\n-#define ASM_SPEC \"-u %{m601:-m601} %{power*:-m601}\"\n+#define ASM_SPEC \"\\\n+-u \\\n+%{!mcpu*: \\\n+  %{mpower2: -mpwrx} \\\n+  %{mpowerpc*: %{!mpower: -mppc}} \\\n+  %{mno-powerpc: %{!mpower: %{!mpower2: -mcom}}} \\\n+  %{mno-powerpc: %{mpower: %{!mpower2: -mpwr}}} \\\n+  %{!mno-powerpc: %{mpower: -m601}} \\\n+  %{!mno-powerpc: %{!mpower: -mppc}}} \\\n+%{mcpu=common: -mcom} \\\n+%{mcpu=rs6000: -mpwr} \\\n+%{mcpu=power: -mpwr} \\\n+%{mcpu=power2: -mpwrx} \\\n+%{mcpu=powerpc: -mppc} \\\n+%{mcpu=rios: -mpwr} \\\n+%{mcpu=rios1: -mpwr} \\\n+%{mcpu=rios2: -mpwrx} \\\n+%{mcpu=rsc: -mpwr} \\\n+%{mcpu=rsc1: -mpwr} \\\n+%{mcpu=403: -mppc} \\\n+%{mcpu=601: -m601} \\\n+%{mcpu=602: -mppc} \\\n+%{mcpu=603: -mppc} \\\n+%{mcpu=603e: -mppc} \\\n+%{mcpu=604: -mppc} \\\n+%{mcpu=620: -mppc}\"\n \n #undef SUBTARGET_SWITCHES\n #define SUBTARGET_SWITCHES \\"}, {"sha": "e4ea1ca197ab864eccc82771fa03ebf764d3918f", "filename": "gcc/config/rs6000/netware.h", "status": "modified", "additions": 27, "deletions": 4, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e3f41e725238fdc0f7d8ba1a5ef6f1a27be72e3/gcc%2Fconfig%2Frs6000%2Fnetware.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e3f41e725238fdc0f7d8ba1a5ef6f1a27be72e3/gcc%2Fconfig%2Frs6000%2Fnetware.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fnetware.h?ref=8e3f41e725238fdc0f7d8ba1a5ef6f1a27be72e3", "patch": "@@ -181,11 +181,34 @@ toc_section ()\t\t\t\t\t\t\t\t\\\n #define ASM_OUTPUT_INTERNAL_LABEL_PREFIX(FILE,PREFIX)\t\\\n   fprintf (FILE, \".%s\", PREFIX)\n \n-/* Pass -m601 to the assembler, since that is what powerpc.h currently\n-   implies.  */\n #undef ASM_SPEC\n-#define ASM_SPEC \\\n-  \"-u -m601 %{V} %{v:%{!V:-V}} %{Qy:} %{!Qn:-Qy} %{n} %{T} %{Ym,*} %{Yd,*} %{Wa,*:%*}\"\n+#define ASM_SPEC \"\\\n+-u \\\n+%{!mcpu*: \\\n+  %{mpower2: -mpwrx} \\\n+  %{mpowerpc*: %{!mpower: -mppc}} \\\n+  %{mno-powerpc: %{!mpower: %{!mpower2: -mcom}}} \\\n+  %{mno-powerpc: %{mpower: %{!mpower2: -mpwr}}} \\\n+  %{!mno-powerpc: %{mpower: -m601}} \\\n+  %{!mno-powerpc: %{!mpower: -mppc}}} \\\n+%{mcpu=common: -mcom} \\\n+%{mcpu=rs6000: -mpwr} \\\n+%{mcpu=power: -mpwr} \\\n+%{mcpu=power2: -mpwrx} \\\n+%{mcpu=powerpc: -mppc} \\\n+%{mcpu=rios: -mpwr} \\\n+%{mcpu=rios1: -mpwr} \\\n+%{mcpu=rios2: -mpwrx} \\\n+%{mcpu=rsc: -mpwr} \\\n+%{mcpu=rsc1: -mpwr} \\\n+%{mcpu=403: -mppc} \\\n+%{mcpu=601: -m601} \\\n+%{mcpu=602: -mppc} \\\n+%{mcpu=603: -mppc} \\\n+%{mcpu=603e: -mppc} \\\n+%{mcpu=604: -mppc} \\\n+%{mcpu=620: -mppc} \\\n+%{V} %{v:%{!V:-V}} %{Qy:} %{!Qn:-Qy} %{n} %{T} %{Ym,*} %{Yd,*} %{Wa,*:%*}\"\n /* This is the end of what might become sysv4.h.  */\n \n /* Enable output of DBX (stabs) debugging information when asked for it.  */"}, {"sha": "0e9f95780892ce615e52115f1fc95f35f2843cc5", "filename": "gcc/config/rs6000/powerpc.h", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e3f41e725238fdc0f7d8ba1a5ef6f1a27be72e3/gcc%2Fconfig%2Frs6000%2Fpowerpc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e3f41e725238fdc0f7d8ba1a5ef6f1a27be72e3/gcc%2Fconfig%2Frs6000%2Fpowerpc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fpowerpc.h?ref=8e3f41e725238fdc0f7d8ba1a5ef6f1a27be72e3", "patch": "@@ -33,7 +33,9 @@ Boston, MA 02111-1307, USA.  */\n   %{!mno-powerpc: %{mpower: -m601}} \\\n   %{!mno-powerpc: %{!mpower: -mppc}}} \\\n %{mcpu=common: -mcom} \\\n+%{mcpu=rs6000: -mpwr} \\\n %{mcpu=power: -mpwr} \\\n+%{mcpu=power2: -mpwrx} \\\n %{mcpu=powerpc: -mppc} \\\n %{mcpu=rios: -mpwr} \\\n %{mcpu=rios1: -mpwr} \\\n@@ -42,9 +44,11 @@ Boston, MA 02111-1307, USA.  */\n %{mcpu=rsc1: -mpwr} \\\n %{mcpu=403: -mppc} \\\n %{mcpu=601: -m601} \\\n+%{mcpu=602: -mppc} \\\n %{mcpu=603: -mppc} \\\n %{mcpu=603e: -mppc} \\\n-%{mcpu=604: -mppc}\"\n+%{mcpu=604: -mppc} \\\n+%{mcpu=620: -mppc}\"\n \n #undef CPP_PREDEFINES\n #define CPP_PREDEFINES \"-D_IBMR2 -D_POWER -D_AIX -D_AIX32 \\\n@@ -60,7 +64,9 @@ Boston, MA 02111-1307, USA.  */\n   %{mno-powerpc: %{!mpower: %{!mpower2: -D_ARCH_COM}}} \\\n   %{!mno-powerpc: -D_ARCH_PPC}} \\\n %{mcpu=common: -D_ARCH_COM} \\\n+%{mcpu=rs6000: -D_ARCH_PWR} \\\n %{mcpu=power: -D_ARCH_PWR} \\\n+%{mcpu=power2: -D_ARCH_PWR2} \\\n %{mcpu=powerpc: -D_ARCH_PPC} \\\n %{mcpu=rios: -D_ARCH_PWR} \\\n %{mcpu=rios1: -D_ARCH_PWR} \\\n@@ -69,11 +75,7 @@ Boston, MA 02111-1307, USA.  */\n %{mcpu=rsc1: -D_ARCH_PWR} \\\n %{mcpu=403: -D_ARCH_PPC} \\\n %{mcpu=601: -D_ARCH_PPC -D_ARCH_PWR} \\\n-%{mcpu=602: -D_ARCH_PPC} \\\n-%{mcpu=603: -D_ARCH_PPC} \\\n-%{mcpu=603e: -D_ARCH_PPC} \\\n-%{mcpu=604: -D_ARCH_PPC} \\\n-%{mcpu=620: -D_ARCH_PPC}\"\n+%{mcpu=6*: -D_ARCH_PPC}\"\n \n #undef TARGET_DEFAULT\n #define TARGET_DEFAULT (MASK_POWERPC | MASK_NEW_MNEMONICS)"}, {"sha": "d2e3898a0dcabb4dbb4a5ebf762f3e4b20ccd337", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 44, "deletions": 21, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e3f41e725238fdc0f7d8ba1a5ef6f1a27be72e3/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e3f41e725238fdc0f7d8ba1a5ef6f1a27be72e3/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=8e3f41e725238fdc0f7d8ba1a5ef6f1a27be72e3", "patch": "@@ -46,7 +46,13 @@ extern int profile_block_flag;\n /* Target cpu type */\n \n enum processor_type rs6000_cpu;\n-char *rs6000_cpu_string;\n+struct rs6000_cpu_select rs6000_select[3] =\n+{\n+  /* switch\tname,\t\t\ttune\tarch */\n+  { (char *)0,\t\"--enbable-cpu=\",\t1,\t0 },\n+  { (char *)0,\t\"-mcpu=\",\t\t1,\t1 },\n+  { (char *)0,\t\"-mtune=\",\t\t1,\t0 },\n+};\n \n /* Set to non-zero by \"fix\" operation to indicate that itrunc and\n    uitrunc must be defined.  */\n@@ -171,8 +177,9 @@ output_options (file, f_options, f_len, W_options, W_len)\n \t}\n     }\n \n-  if (rs6000_cpu_string != (char *)0)\n-    pos = output_option (file, \"-mcpu=\", rs6000_cpu_string, pos);\n+  for (j = 0; j < sizeof (rs6000_select) / sizeof(rs6000_select[0]); j++)\n+    if (rs6000_select[j].string != (char *)0)\n+      pos = output_option (file, rs6000_select[j].name, rs6000_select[j].string, pos);\n \n   fputs (\"\\n\\n\", file);\n }\n@@ -182,9 +189,11 @@ output_options (file, f_options, f_len, W_options, W_len)\n    type and sometimes adjust other TARGET_ options.  */\n \n void\n-rs6000_override_options ()\n+rs6000_override_options (default_cpu)\n+     char *default_cpu;\n {\n-  int i;\n+  int i, j;\n+  struct rs6000_cpu_select *ptr;\n \n   /* Simplify the entries below by making a mask for any POWER\n      variant and any PowerPC variant.  */\n@@ -202,9 +211,15 @@ rs6000_override_options ()\n       int target_disable;\t/* Target flags to disable.  */\n     } processor_target_table[]\n       = {{\"common\", PROCESSOR_COMMON, 0, POWER_MASKS | POWERPC_MASKS},\n+\t {\"rs6000\", PROCESSOR_POWER,\n+\t    MASK_POWER | MASK_MULTIPLE | MASK_STRING,\n+\t    MASK_POWER2 | POWERPC_MASKS | MASK_NEW_MNEMONICS},\n \t {\"power\", PROCESSOR_POWER,\n \t    MASK_POWER | MASK_MULTIPLE | MASK_STRING,\n \t    MASK_POWER2 | POWERPC_MASKS | MASK_NEW_MNEMONICS},\n+\t {\"power2\", PROCESSOR_POWER,\n+\t    MASK_POWER | MASK_POWER2 | MASK_MULTIPLE | MASK_STRING,\n+\t    POWERPC_MASKS | MASK_NEW_MNEMONICS},\n \t {\"powerpc\", PROCESSOR_POWERPC,\n \t    MASK_POWERPC | MASK_NEW_MNEMONICS,\n \t    POWER_MASKS | POWERPC_OPT_MASKS | MASK_POWERPC64},\n@@ -253,24 +268,32 @@ rs6000_override_options ()\n   profile_block_flag = 0;\n \n   /* Identify the processor type */\n-  if (rs6000_cpu_string == 0)\n-    rs6000_cpu = PROCESSOR_DEFAULT;\n-  else\n-    {\n-      for (i = 0; i < ptt_size; i++)\n-\tif (! strcmp (rs6000_cpu_string, processor_target_table[i].name))\n-\t  {\n-\t    rs6000_cpu = processor_target_table[i].processor;\n-\t    target_flags |= processor_target_table[i].target_enable;\n-\t    target_flags &= ~processor_target_table[i].target_disable;\n-\t    break;\n-\t  }\n+  rs6000_select[0].string = default_cpu;\n+  rs6000_cpu = PROCESSOR_DEFAULT;\n+  if (rs6000_cpu == PROCESSOR_PPC403)\n+    target_flags |= MASK_SOFT_FLOAT;\n \n-      if (i == ptt_size)\n+  for (i = 0; i < sizeof (rs6000_select) / sizeof (rs6000_select[0]); i++)\n+    {\n+      ptr = &rs6000_select[i];\n+      if (ptr->string != (char *)0 && ptr->string[0] != '\\0')\n \t{\n-\t  error (\"bad value (%s) for -mcpu= switch\", rs6000_cpu_string);\n-\t  rs6000_cpu_string = \"default\";\n-\t  rs6000_cpu = PROCESSOR_DEFAULT;\n+\t  for (j = 0; j < ptt_size; j++)\n+\t    if (! strcmp (ptr->string, processor_target_table[j].name))\n+\t      {\n+\t\tif (ptr->set_tune_p)\n+\t\t  rs6000_cpu = processor_target_table[j].processor;\n+\n+\t\tif (ptr->set_arch_p)\n+\t\t  {\n+\t\t    target_flags |= processor_target_table[j].target_enable;\n+\t\t    target_flags &= ~processor_target_table[j].target_disable;\n+\t\t  }\n+\t\tbreak;\n+\t      }\n+\n+\t  if (i == ptt_size)\n+\t    error (\"bad value (%s) for %s switch\", ptr->string, ptr->name);\n \t}\n     }\n "}, {"sha": "db669be373201ffc56647b67e9e23b5c37654b93", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 30, "deletions": 13, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e3f41e725238fdc0f7d8ba1a5ef6f1a27be72e3/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e3f41e725238fdc0f7d8ba1a5ef6f1a27be72e3/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=8e3f41e725238fdc0f7d8ba1a5ef6f1a27be72e3", "patch": "@@ -32,6 +32,11 @@ Boston, MA 02111-1307, USA.  */\n /* Print subsidiary information on the compiler version in use.  */\n #define TARGET_VERSION ;\n \n+/* Default string to use for cpu if not specified.  */\n+#ifndef TARGET_CPU_DEFAULT\n+#define TARGET_CPU_DEFAULT ((char *)0)\n+#endif\n+\n /* Tell the assembler to assume that all undefined names are external.\n \n    Don't do this until the fixed IBM assembler is more generally available.\n@@ -54,7 +59,9 @@ Boston, MA 02111-1307, USA.  */\n   %{mno-power: %{!mpowerpc*: -D_ARCH_COM}} \\\n   %{!mno-power: %{!mpower2: -D_ARCH_PWR}}} \\\n %{mcpu=common: -D_ARCH_COM} \\\n+%{mcpu=rs6000: -D_ARCH_PWR} \\\n %{mcpu=power: -D_ARCH_PWR} \\\n+%{mcpu=power2: -D_ARCH_PWR2} \\\n %{mcpu=powerpc: -D_ARCH_PPC} \\\n %{mcpu=rios: -D_ARCH_PWR} \\\n %{mcpu=rios1: -D_ARCH_PWR} \\\n@@ -63,11 +70,11 @@ Boston, MA 02111-1307, USA.  */\n %{mcpu=rsc1: -D_ARCH_PWR} \\\n %{mcpu=403: -D_ARCH_PPC} \\\n %{mcpu=601: -D_ARCH_PPC -D_ARCH_PWR} \\\n-%{mcpu=602: -D_ARCH_PPC} \\\n-%{mcpu=603: -D_ARCH_PPC} \\\n-%{mcpu=603e: -D_ARCH_PPC} \\\n-%{mcpu=604: -D_ARCH_PPC} \\\n-%{mcpu=620: -D_ARCH_PPC}\"\n+%{mcpu=602: -mppc} \\\n+%{mcpu=603: -mppc} \\\n+%{mcpu=603e: -mppc} \\\n+%{mcpu=604: -mppc} \\\n+%{mcpu=620: -mppc}\"\n \n /* Define the options for the binder: Start text at 512, align all segments\n    to 512 bytes, and warn if there is text relocation.\n@@ -285,9 +292,9 @@ extern enum processor_type rs6000_cpu;\n #define rs6000_cpu_attr ((enum attr_cpu)rs6000_cpu)\n \n /* Define generic processor types based upon current deployment.  */\n-#define PROCESSOR_COMMON  PROCESSOR_PPC604\n+#define PROCESSOR_COMMON  PROCESSOR_PPC601\n #define PROCESSOR_POWER   PROCESSOR_RIOS1\n-#define PROCESSOR_POWERPC PROCESSOR_PPC601\n+#define PROCESSOR_POWERPC PROCESSOR_PPC604\n \n /* Define the default processor.  This is overridden by other tm.h files.  */\n #define PROCESSOR_DEFAULT PROCESSOR_RIOS1\n@@ -318,13 +325,23 @@ extern enum processor_type rs6000_cpu;\n #define\tSUBTARGET_OPTIONS\n #endif\n \n-#define TARGET_OPTIONS\t\t\t\\\n-{\t\t\t\t\t\\\n-   {\"cpu=\", &rs6000_cpu_string}\t\t\\\n-   SUBTARGET_OPTIONS\t\t\t\\\n+#define TARGET_OPTIONS\t\t\t\t\\\n+{\t\t\t\t\t\t\\\n+   {\"cpu=\",  &rs6000_select[1].string},\t\t\\\n+   {\"tune=\", &rs6000_select[2].string},\t\t\\\n+   SUBTARGET_OPTIONS\t\t\t\t\\\n }\n \n-extern char *rs6000_cpu_string;\n+/* rs6000_select[0] is reserved for the default cpu defined via --enable-cpu */\n+struct rs6000_cpu_select\n+{\n+  char *string;\n+  char *name;\n+  int set_tune_p;\n+  int set_arch_p;\n+};\n+\n+extern struct rs6000_cpu_select rs6000_select[];\n \n /* Sometimes certain combinations of command options do not make sense\n    on a particular target machine.  You can define a macro\n@@ -334,7 +351,7 @@ extern char *rs6000_cpu_string;\n \n    On the RS/6000 this is used to define the target cpu type.  */\n \n-#define OVERRIDE_OPTIONS rs6000_override_options ()\n+#define OVERRIDE_OPTIONS rs6000_override_options (TARGET_CPU_DEFAULT)\n \n /* Show we can debug even without a frame pointer.  */\n #define CAN_DEBUG_WITHOUT_FP"}, {"sha": "d2d13edafa34cf74b7271c10275fdd12c30bca1b", "filename": "gcc/config/rs6000/sysv4.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e3f41e725238fdc0f7d8ba1a5ef6f1a27be72e3/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e3f41e725238fdc0f7d8ba1a5ef6f1a27be72e3/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fsysv4.h?ref=8e3f41e725238fdc0f7d8ba1a5ef6f1a27be72e3", "patch": "@@ -435,7 +435,9 @@ extern int rs6000_pic_labelno;\n   %{!mno-powerpc: %{mpower: -m601}} \\\n   %{!mno-powerpc: %{!mpower: -mppc}}} \\\n %{mcpu=common: -mcom} \\\n+%{mcpu=rs6000: -mpwr} \\\n %{mcpu=power: -mpwr} \\\n+%{mcpu=power2: -mpwrx} \\\n %{mcpu=powerpc: -mppc} \\\n %{mcpu=rios: -mpwr} \\\n %{mcpu=rios1: -mpwr} \\\n@@ -444,9 +446,11 @@ extern int rs6000_pic_labelno;\n %{mcpu=rsc1: -mpwr} \\\n %{mcpu=403: -mppc} \\\n %{mcpu=601: -m601} \\\n+%{mcpu=602: -mppc} \\\n %{mcpu=603: -mppc} \\\n %{mcpu=603e: -mppc} \\\n %{mcpu=604: -mppc} \\\n+%{mcpu=620: -mppc} \\\n %{V} %{v:%{!V:-V}} %{Qy:} %{!Qn:-Qy} %{n} %{T} %{Ym,*} %{Yd,*} %{Wa,*:%*} \\\n %{mrelocatable} %{mrelocatable-lib} %{memb} \\\n %{mlittle} %{mlittle-endian} %{mbig} %{mbig-endian}\"\n@@ -620,7 +624,9 @@ do {\t\t\t\t\t\t\t\t\t\\\n   %{mno-powerpc: %{!mpower: %{!mpower2: -D_ARCH_COM}}} \\\n   %{!mno-powerpc: -D_ARCH_PPC}} \\\n %{mcpu=common: -D_ARCH_COM} \\\n+%{mcpu=rs6000: -D_ARCH_PWR} \\\n %{mcpu=power: -D_ARCH_PWR} \\\n+%{mcpu=power2: -D_ARCH_PWR2} \\\n %{mcpu=powerpc: -D_ARCH_PPC} \\\n %{mcpu=rios: -D_ARCH_PWR} \\\n %{mcpu=rios1: -D_ARCH_PWR} \\"}, {"sha": "e9cf5bc2d4c256f42b61146bd9d06f2223225aad", "filename": "gcc/config/rs6000/sysv4le.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e3f41e725238fdc0f7d8ba1a5ef6f1a27be72e3/gcc%2Fconfig%2Frs6000%2Fsysv4le.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e3f41e725238fdc0f7d8ba1a5ef6f1a27be72e3/gcc%2Fconfig%2Frs6000%2Fsysv4le.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fsysv4le.h?ref=8e3f41e725238fdc0f7d8ba1a5ef6f1a27be72e3", "patch": "@@ -43,7 +43,9 @@ Boston, MA 02111-1307, USA.  */\n   %{mno-powerpc: %{!mpower: %{!mpower2: -D_ARCH_COM}}} \\\n   %{!mno-powerpc: -D_ARCH_PPC}} \\\n %{mcpu=common: -D_ARCH_COM} \\\n+%{mcpu=rs6000: -D_ARCH_PWR} \\\n %{mcpu=power: -D_ARCH_PWR} \\\n+%{mcpu=power2: -D_ARCH_PWR2} \\\n %{mcpu=powerpc: -D_ARCH_PPC} \\\n %{mcpu=rios: -D_ARCH_PWR} \\\n %{mcpu=rios1: -D_ARCH_PWR} \\"}, {"sha": "9778b2bb274d5559cedd2309ecdd52c073e5a4b6", "filename": "gcc/config/rs6000/t-newas", "status": "modified", "additions": 26, "deletions": 3, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e3f41e725238fdc0f7d8ba1a5ef6f1a27be72e3/gcc%2Fconfig%2Frs6000%2Ft-newas", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e3f41e725238fdc0f7d8ba1a5ef6f1a27be72e3/gcc%2Fconfig%2Frs6000%2Ft-newas", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Ft-newas?ref=8e3f41e725238fdc0f7d8ba1a5ef6f1a27be72e3", "patch": "@@ -13,10 +13,33 @@ fp-bit.c: $(srcdir)/config/fp-bit.c\n \techo '#define FLOAT' > fp-bit.c\n \tcat $(srcdir)/config/fp-bit.c >> fp-bit.c\n \n-# Build the libraries for both hard and soft floating point\n+# Build the libraries for both hard and soft floating point and all of the \n+# different processor models\n \n-MULTILIB_OPTIONS = msoft-float mcpu=common\n-MULTILIB_DIRNAMES = soft-float common\n+MULTILIB_OPTIONS\t= msoft-float \\\n+\t\t\t  mcpu=common/mcpu=power/mcpu=powerpc/mcpu=601/mcpu=power2\n+\n+MULTILIB_DIRNAMES\t= soft-float \\\n+\t\t\t  common power powerpc 601 power2\n+\n+MULTILIB_MATCHES\t= msoft-float=mcpu?403 \\\n+\t\t\t  mcpu?power=mpower \\\n+\t\t\t  mcpu?power=mrios1 \\\n+\t\t\t  mcpu?power=mcpu=rios1 \\\n+\t\t\t  mcpu?power2=mpower2 \\\n+\t\t\t  mcpu?power2=mrios2 \\\n+\t\t\t  mcpu?power2=mcpu=rios2 \\\n+\t\t\t  mcpu?powerpc=mcpu?602 \\\n+\t\t\t  mcpu?powerpc=mcpu?603 \\\n+\t\t\t  mcpu?powerpc=mcpu?603e \\\n+\t\t\t  mcpu?powerpc=mcpu?604 \\\n+\t\t\t  mcpu?powerpc=mcpu?620 \\\n+\t\t\t  mcpu?powerpc=mcpu?403 \\\n+\t\t\t  mcpu?powerpc=mpowerpc \\\n+\t\t\t  mcpu?powerpc=mpowerpc-gpopt \\\n+\t\t\t  mcpu?powerpc=mpowerpc-gfxopt \\\n+\t\t\t  mcpu?601=mcpu?rsc \\\n+\t\t\t  mcpu?601=mcpu?rsc1\n \n LIBGCC = stmp-multilib\n INSTALL_LIBGCC = install-multilib"}, {"sha": "ba97287e0cc3f1c3df813ae87ed0e2826be2d364", "filename": "gcc/config/rs6000/t-xnewas", "status": "added", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e3f41e725238fdc0f7d8ba1a5ef6f1a27be72e3/gcc%2Fconfig%2Frs6000%2Ft-xnewas", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e3f41e725238fdc0f7d8ba1a5ef6f1a27be72e3/gcc%2Fconfig%2Frs6000%2Ft-xnewas", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Ft-xnewas?ref=8e3f41e725238fdc0f7d8ba1a5ef6f1a27be72e3", "patch": "@@ -0,0 +1,57 @@\n+# Same as t-newas, except don't build libgcc1-test.  This is because\n+# the compiler emits code to call external functions to save the\n+# arguments that are in libc, but since libgcc1-test is linked without\n+# libc, they will show up as errors.\n+LIBGCC1_TEST =\n+\n+# Do not build libgcc1.\n+LIBGCC1 =\n+CROSS_LIBGCC1 =\n+\n+# These are really part of libgcc1, but this will cause them to be\n+# built correctly, so... [taken from t-sparclite]\n+LIB2FUNCS_EXTRA = fp-bit.c dp-bit.c\n+\n+dp-bit.c: $(srcdir)/config/fp-bit.c\n+\tcat $(srcdir)/config/fp-bit.c > dp-bit.c\n+\n+fp-bit.c: $(srcdir)/config/fp-bit.c\n+\techo '#define FLOAT' > fp-bit.c\n+\tcat $(srcdir)/config/fp-bit.c >> fp-bit.c\n+\n+# Build the libraries for both hard and soft floating point and all of the \n+# different processor models\n+\n+MULTILIB_OPTIONS\t= msoft-float \\\n+\t\t\t  mcpu=common/mcpu=power/mcpu=powerpc/mcpu=601/mcpu=power2\n+\n+MULTILIB_DIRNAMES\t= soft-float \\\n+\t\t\t  common power powerpc 601 power2\n+\n+MULTILIB_MATCHES\t= msoft-float=mcpu?403 \\\n+\t\t\t  mcpu?power=mpower \\\n+\t\t\t  mcpu?power=mrios1 \\\n+\t\t\t  mcpu?power=mcpu=rios1 \\\n+\t\t\t  mcpu?power2=mpower2 \\\n+\t\t\t  mcpu?power2=mrios2 \\\n+\t\t\t  mcpu?power2=mcpu=rios2 \\\n+\t\t\t  mcpu?powerpc=mcpu?602 \\\n+\t\t\t  mcpu?powerpc=mcpu?603 \\\n+\t\t\t  mcpu?powerpc=mcpu?603e \\\n+\t\t\t  mcpu?powerpc=mcpu?604 \\\n+\t\t\t  mcpu?powerpc=mcpu?620 \\\n+\t\t\t  mcpu?powerpc=mcpu?403 \\\n+\t\t\t  mcpu?powerpc=mpowerpc \\\n+\t\t\t  mcpu?powerpc=mpowerpc-gpopt \\\n+\t\t\t  mcpu?powerpc=mpowerpc-gfxopt \\\n+\t\t\t  mcpu?601=mcpu?rsc \\\n+\t\t\t  mcpu?601=mcpu?rsc1\n+\n+LIBGCC = stmp-multilib\n+INSTALL_LIBGCC = install-multilib\n+\n+# Aix 3.2.x needs milli.exp for -mcpu=common\n+EXTRA_PARTS = milli.exp\n+milli.exp: $(srcdir)/config/rs6000/milli.exp\n+\trm -f milli.exp\n+\tcp $(srcdir)/config/rs6000/milli.exp ./milli.exp"}, {"sha": "f5d34d658b7d8d272976e824b08743752a2dba4d", "filename": "gcc/config/rs6000/t-xrs6000", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e3f41e725238fdc0f7d8ba1a5ef6f1a27be72e3/gcc%2Fconfig%2Frs6000%2Ft-xrs6000", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e3f41e725238fdc0f7d8ba1a5ef6f1a27be72e3/gcc%2Fconfig%2Frs6000%2Ft-xrs6000", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Ft-xrs6000?ref=8e3f41e725238fdc0f7d8ba1a5ef6f1a27be72e3", "patch": "@@ -0,0 +1,28 @@\n+# Same as t-rs6000, except don't build libgcc1-test.  This is because\n+# the compiler emits code to call external functions to save the\n+# arguments that are in libc, but since libgcc1-test is linked without\n+# libc, they will show up as errors.\n+LIBGCC1_TEST =\n+\n+# Do not build libgcc1.\n+LIBGCC1 =\n+CROSS_LIBGCC1 =\n+\n+# These are really part of libgcc1, but this will cause them to be\n+# built correctly, so... [taken from t-sparclite]\n+LIB2FUNCS_EXTRA = fp-bit.c dp-bit.c\n+\n+dp-bit.c: $(srcdir)/config/fp-bit.c\n+\tcat $(srcdir)/config/fp-bit.c > dp-bit.c\n+\n+fp-bit.c: $(srcdir)/config/fp-bit.c\n+\techo '#define FLOAT' > fp-bit.c\n+\tcat $(srcdir)/config/fp-bit.c >> fp-bit.c\n+\n+# Build the libraries for both hard and soft floating point\n+\n+MULTILIB_OPTIONS = msoft-float\n+MULTILIB_DIRNAMES = soft-float\n+\n+LIBGCC = stmp-multilib\n+INSTALL_LIBGCC = install-multilib"}]}