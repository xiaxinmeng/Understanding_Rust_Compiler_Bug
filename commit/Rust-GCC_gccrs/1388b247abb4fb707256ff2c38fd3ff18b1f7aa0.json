{"sha": "1388b247abb4fb707256ff2c38fd3ff18b1f7aa0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTM4OGIyNDdhYmI0ZmI3MDcyNTZmZjJjMzhmZDNmZjE4YjFmN2FhMA==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2000-04-06T14:12:34Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2000-04-06T14:12:34Z"}, "message": "* g++.old-deja/g++.abi/vmihint.C: New test.\n\nFrom-SVN: r32970", "tree": {"sha": "3926dcdd4de4f9a8c6603415af7da843fc3de615", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3926dcdd4de4f9a8c6603415af7da843fc3de615"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1388b247abb4fb707256ff2c38fd3ff18b1f7aa0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1388b247abb4fb707256ff2c38fd3ff18b1f7aa0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1388b247abb4fb707256ff2c38fd3ff18b1f7aa0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1388b247abb4fb707256ff2c38fd3ff18b1f7aa0/comments", "author": null, "committer": null, "parents": [{"sha": "030e2b516022736979748e955ca9b1aad1c496f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/030e2b516022736979748e955ca9b1aad1c496f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/030e2b516022736979748e955ca9b1aad1c496f0"}], "stats": {"total": 74, "additions": 74, "deletions": 0}, "files": [{"sha": "4b9eb7058177c769b80b11e9f4667f3197774042", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1388b247abb4fb707256ff2c38fd3ff18b1f7aa0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1388b247abb4fb707256ff2c38fd3ff18b1f7aa0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1388b247abb4fb707256ff2c38fd3ff18b1f7aa0", "patch": "@@ -1,3 +1,7 @@\n+2000-04-06  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* g++.old-deja/g++.abi/vmihint.C: New test.\n+\n 2000-04-06  Neil Booth  <NeilB@earthling.net>\n \n \t* cpp-ifparen.c, cpp-missingop.c, cpp-missingparen.c,"}, {"sha": "672af2cb79dcfc967d04d7b2496924bf4c74e4ed", "filename": "gcc/testsuite/g++.old-deja/g++.abi/vmihint.C", "status": "added", "additions": 70, "deletions": 0, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1388b247abb4fb707256ff2c38fd3ff18b1f7aa0/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.abi%2Fvmihint.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1388b247abb4fb707256ff2c38fd3ff18b1f7aa0/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.abi%2Fvmihint.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.abi%2Fvmihint.C?ref=1388b247abb4fb707256ff2c38fd3ff18b1f7aa0", "patch": "@@ -0,0 +1,70 @@\n+// Test rtti hint flags\n+// Copyright (C) 2000 Free Software Foundation, Inc.\n+// Contributed by Nathan Sidwell 3 Apr 2000 <nathan@nathan@codesourcery.com>\n+\n+#include <typeinfo>\n+\n+#if defined (__GXX_ABI_VERSION) && __GXX_ABI_VERSION >= 100\n+#include <cxxabi.h>\n+\n+struct A {int m;};\n+struct A1vA : virtual A {int m;};\n+struct A2vA : virtual A {int m;};\n+struct A1A : A {int m;};\n+struct A2A : A {int m;};\n+struct B {int m;};\n+\n+struct C1 : B, virtual A {int m;};\n+\n+struct D1 : A1vA, A2vA {int m;};\n+\n+struct E1 : A1A, A2A {int m;};\n+\n+struct E2 : A1A, A2vA {int m;};\n+\n+struct F1 : A1A, A1vA, A2vA {int m;};\n+\n+struct P1 : protected A {int m;};\n+\n+struct P2 : B, P1 {int m;};\n+\n+using namespace abi;\n+\n+int expect (int flags, type_info const &info)\n+{\n+  __vmi_class_type_info const *ptr =\n+      dynamic_cast <__vmi_class_type_info const *> (&info);\n+  if (!ptr)\n+    return 0;\n+  if (ptr->details != flags)\n+    return 0;\n+  return 1;\n+}\n+\n+int main ()\n+{\n+  if (! expect (0 | 8, typeid (C1)))\n+    return 1;\n+  if (! expect (2 | 8, typeid (D1)))\n+    return 2;\n+  if (! expect (1 | 8, typeid (E1)))\n+    return 3;\n+  if (! expect (1 | 8, typeid (E2)))\n+    return 4;\n+  if (! expect (3 | 8, typeid (F1)))\n+    return 5;\n+  \n+  if (!expect (4, typeid (P1)))\n+    return 6;\n+  if (!expect (12, typeid (P2)))\n+    return 7;\n+  \n+  return 0;\n+}\n+\n+#else\n+int main ()\n+{\n+  return 0;\n+}\n+#endif"}]}