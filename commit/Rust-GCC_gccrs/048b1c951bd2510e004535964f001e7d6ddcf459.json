{"sha": "048b1c951bd2510e004535964f001e7d6ddcf459", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDQ4YjFjOTUxYmQyNTEwZTAwNDUzNTk2NGYwMDFlN2Q2ZGRjZjQ1OQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2002-03-20T21:47:07Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2002-03-20T21:47:07Z"}, "message": "re PR c/5972 (produces wrong assembly code when -march=pentiumpro and optimization (e.g. -O2)is on)\n\n\tPR c/5972\n\t* config/i386/i386.md (movdicc_c_rex64, movsicc_noc, movhicc_noc,\n\tmovsfcc_1, movdfcc_1): Add %O2.\n\t* config/i386/i386.c (print_operand): Handle %ON.\n\tPrint . before float condition codes in Sun as cmov syntax.\n\t* config/i386/sol2.h (CMOV_SUN_AS_SYNTAX): Define for Sun as.\n\t* config.gcc (i[34567]86-*-solaris2*): Remove comment which is\n\tno longer true.\n\nFrom-SVN: r51086", "tree": {"sha": "191c91b3293a813fc83537ef72582b0a3042ba04", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/191c91b3293a813fc83537ef72582b0a3042ba04"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/048b1c951bd2510e004535964f001e7d6ddcf459", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/048b1c951bd2510e004535964f001e7d6ddcf459", "html_url": "https://github.com/Rust-GCC/gccrs/commit/048b1c951bd2510e004535964f001e7d6ddcf459", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/048b1c951bd2510e004535964f001e7d6ddcf459/comments", "author": null, "committer": null, "parents": [{"sha": "f48645880f8831835e0fa67ad8ed06979dc37a91", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f48645880f8831835e0fa67ad8ed06979dc37a91", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f48645880f8831835e0fa67ad8ed06979dc37a91"}], "stats": {"total": 63, "additions": 51, "deletions": 12}, "files": [{"sha": "1e3bb435d8d2b5c8745f56b59075becfba45eb1c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/048b1c951bd2510e004535964f001e7d6ddcf459/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/048b1c951bd2510e004535964f001e7d6ddcf459/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=048b1c951bd2510e004535964f001e7d6ddcf459", "patch": "@@ -1,3 +1,14 @@\n+2002-03-20  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c/5972\n+\t* config/i386/i386.md (movdicc_c_rex64, movsicc_noc, movhicc_noc,\n+\tmovsfcc_1, movdfcc_1): Add %O2.\n+\t* config/i386/i386.c (print_operand): Handle %ON.\n+\tPrint . before float condition codes in Sun as cmov syntax.\n+\t* config/i386/sol2.h (CMOV_SUN_AS_SYNTAX): Define for Sun as.\n+\t* config.gcc (i[34567]86-*-solaris2*): Remove comment which is\n+\tno longer true.\n+\n 2002-03-20  Philip Blundell  <pb@nexus.co.uk>\n \n \t* config/arm/arm.c (arm_output_epilogue): Don't generate separate\n@@ -8,7 +19,7 @@\n \t* config/xtensa/xtensa.md: Remove unused type attributes.\n \t(adddi_carry, subddi_carry): Change type attribute to \"multi\".\n \n-2002-03-19 Dale Johannesen  <dalej@apple.com>\n+2002-03-19  Dale Johannesen  <dalej@apple.com>\n \n \tPR optimization/5999, middle-end/5731\n \t* expr.c (expand_expr) [RDIV_EXPR]: Only convert real divisions into"}, {"sha": "8337baf2c84c216fd4059e93de14fe8a72178afa", "filename": "gcc/config.gcc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/048b1c951bd2510e004535964f001e7d6ddcf459/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/048b1c951bd2510e004535964f001e7d6ddcf459/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=048b1c951bd2510e004535964f001e7d6ddcf459", "patch": "@@ -1333,7 +1333,6 @@ i[34567]86-*-solaris2*)\n \txm_defines=\"POSIX SMALL_ARG_MAX\"\n \ttm_file=\"${tm_file} i386/att.h dbxelf.h elfos.h svr4.h i386/sysv4.h i386/sol2.h\"\n \tif test x$gas = xyes; then\n-\t\t# Only needed if gas does not support -s\n \t\ttm_file=\"i386/sol2gas.h ${tm_file}\"\n \tfi\n \ttmake_file=\"i386/t-sol2 t-svr4\""}, {"sha": "17a10c8f47e0e93af3249d077a9632e78a4a156e", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/048b1c951bd2510e004535964f001e7d6ddcf459/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/048b1c951bd2510e004535964f001e7d6ddcf459/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=048b1c951bd2510e004535964f001e7d6ddcf459", "patch": "@@ -5640,6 +5640,8 @@ print_reg (x, code, file)\n    C -- print opcode suffix for set/cmov insn.\n    c -- like C, but print reversed condition\n    F,f -- likewise, but for floating-point.\n+   O -- if CMOV_SUN_AS_SYNTAX, expand to \"w.\", \"l.\" or \"q.\", otherwise\n+        nothing\n    R -- print the prefix for register names.\n    z -- print the opcode suffix for the size of the current operand.\n    * -- print a star (in certain assembler syntax)\n@@ -5837,10 +5839,31 @@ print_operand (file, x, code)\n \t      break;\n \t    }\n \t  return;\n+\tcase 'O':\n+#ifdef CMOV_SUN_AS_SYNTAX\n+\t  if (ASSEMBLER_DIALECT == ASM_ATT)\n+\t    {\n+\t      switch (GET_MODE (x))\n+\t\t{\n+\t\tcase HImode: putc ('w', file); break;\n+\t\tcase SImode:\n+\t\tcase SFmode: putc ('l', file); break;\n+\t\tcase DImode:\n+\t\tcase DFmode: putc ('q', file); break;\n+\t\tdefault: abort ();\n+\t\t}\n+\t      putc ('.', file);\n+\t    }\n+#endif\n+\t  return;\n \tcase 'C':\n \t  put_condition_code (GET_CODE (x), GET_MODE (XEXP (x, 0)), 0, 0, file);\n \t  return;\n \tcase 'F':\n+#ifdef CMOV_SUN_AS_SYNTAX\n+\t  if (ASSEMBLER_DIALECT == ASM_ATT)\n+\t    putc ('.', file);\n+#endif\n \t  put_condition_code (GET_CODE (x), GET_MODE (XEXP (x, 0)), 0, 1, file);\n \t  return;\n \n@@ -5856,6 +5879,10 @@ print_operand (file, x, code)\n \t  put_condition_code (GET_CODE (x), GET_MODE (XEXP (x, 0)), 1, 0, file);\n \t  return;\n \tcase 'f':\n+#ifdef CMOV_SUN_AS_SYNTAX\n+\t  if (ASSEMBLER_DIALECT == ASM_ATT)\n+\t    putc ('.', file);\n+#endif\n \t  put_condition_code (GET_CODE (x), GET_MODE (XEXP (x, 0)), 1, 1, file);\n \t  return;\n \tcase '+':"}, {"sha": "079dfc03e09c177e51c63105add6c080dd8cd24a", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/048b1c951bd2510e004535964f001e7d6ddcf459/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/048b1c951bd2510e004535964f001e7d6ddcf459/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=048b1c951bd2510e004535964f001e7d6ddcf459", "patch": "@@ -15896,8 +15896,8 @@\n   \"TARGET_64BIT && TARGET_CMOVE\n    && (GET_CODE (operands[2]) != MEM || GET_CODE (operands[3]) != MEM)\"\n   \"@\n-   cmov%C1\\t{%2, %0|%0, %2}\n-   cmov%c1\\t{%3, %0|%0, %3}\"\n+   cmov%O2%C1\\t{%2, %0|%0, %2}\n+   cmov%O2%c1\\t{%3, %0|%0, %3}\"\n   [(set_attr \"type\" \"icmov\")\n    (set_attr \"mode\" \"DI\")])\n \n@@ -15938,8 +15938,8 @@\n   \"TARGET_CMOVE\n    && (GET_CODE (operands[2]) != MEM || GET_CODE (operands[3]) != MEM)\"\n   \"@\n-   cmov%C1\\t{%2, %0|%0, %2}\n-   cmov%c1\\t{%3, %0|%0, %3}\"\n+   cmov%O2%C1\\t{%2, %0|%0, %2}\n+   cmov%O2%c1\\t{%3, %0|%0, %3}\"\n   [(set_attr \"type\" \"icmov\")\n    (set_attr \"mode\" \"SI\")])\n \n@@ -15960,8 +15960,8 @@\n   \"TARGET_CMOVE\n    && (GET_CODE (operands[2]) != MEM || GET_CODE (operands[3]) != MEM)\"\n   \"@\n-   cmov%C1\\t{%2, %0|%0, %2}\n-   cmov%c1\\t{%3, %0|%0, %3}\"\n+   cmov%O2%C1\\t{%2, %0|%0, %2}\n+   cmov%O2%c1\\t{%3, %0|%0, %3}\"\n   [(set_attr \"type\" \"icmov\")\n    (set_attr \"mode\" \"HI\")])\n \n@@ -15984,8 +15984,8 @@\n   \"@\n    fcmov%F1\\t{%2, %0|%0, %2}\n    fcmov%f1\\t{%3, %0|%0, %3}\n-   cmov%C1\\t{%2, %0|%0, %2}\n-   cmov%c1\\t{%3, %0|%0, %3}\"\n+   cmov%O2%C1\\t{%2, %0|%0, %2}\n+   cmov%O2%c1\\t{%3, %0|%0, %3}\"\n   [(set_attr \"type\" \"fcmov,fcmov,icmov,icmov\")\n    (set_attr \"mode\" \"SF,SF,SI,SI\")])\n \n@@ -16024,8 +16024,8 @@\n   \"@\n    fcmov%F1\\t{%2, %0|%0, %2}\n    fcmov%f1\\t{%3, %0|%0, %3}\n-   cmov%C1\\t{%2, %0|%0, %2}\n-   cmov%c1\\t{%3, %0|%0, %3}\"\n+   cmov%O2%C1\\t{%2, %0|%0, %2}\n+   cmov%O2%c1\\t{%3, %0|%0, %3}\"\n   [(set_attr \"type\" \"fcmov,fcmov,icmov,icmov\")\n    (set_attr \"mode\" \"DF\")])\n "}, {"sha": "79c9ea8327f3d37e1069a89c00780933cdf0ab90", "filename": "gcc/config/i386/sol2.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/048b1c951bd2510e004535964f001e7d6ddcf459/gcc%2Fconfig%2Fi386%2Fsol2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/048b1c951bd2510e004535964f001e7d6ddcf459/gcc%2Fconfig%2Fi386%2Fsol2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsol2.h?ref=048b1c951bd2510e004535964f001e7d6ddcf459", "patch": "@@ -39,6 +39,8 @@ Boston, MA 02111-1307, USA.  */\n #define ASM_SPEC \\\n   \"%{v:-V} %{Qy:} %{!Qn:-Qy} %{n} %{T} %{Ym,*} %{Wa,*:%*} -s\"\n \n+#define CMOV_SUN_AS_SYNTAX 1\n+\n #else /* GAS_REJECTS_MINUS_S */\n \n /* Same as above, except for -s, unsupported by GNU as.  */"}]}