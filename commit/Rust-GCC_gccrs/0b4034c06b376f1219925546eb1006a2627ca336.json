{"sha": "0b4034c06b376f1219925546eb1006a2627ca336", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGI0MDM0YzA2YjM3NmYxMjE5OTI1NTQ2ZWIxMDA2YTI2MjdjYTMzNg==", "commit": {"author": {"name": "Gary Dismukes", "email": "dismukes@adacore.com", "date": "2020-06-01T19:22:48Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-07-15T13:42:37Z"}, "message": "[Ada] Minor reformatting of comments and some code, plus a typo correction\n\ngcc/ada/\n\n\t* exp_ch6.adb: Add a comma and fix a typo (machinary =>\n\tmachinery) in comment.\n\t* exp_aggr.adb: Reformat, fix capitalization, and add a couple\n\tof commas in a comment. Adjust columns in several code\n\tfragments.\n\t* sem_aggr.adb: Reformat and add a comma in a comment.", "tree": {"sha": "b18c78a8b5e86cf2d575eb77305aff5a1baa0f59", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b18c78a8b5e86cf2d575eb77305aff5a1baa0f59"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0b4034c06b376f1219925546eb1006a2627ca336", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b4034c06b376f1219925546eb1006a2627ca336", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b4034c06b376f1219925546eb1006a2627ca336", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b4034c06b376f1219925546eb1006a2627ca336/comments", "author": {"login": "dismukes", "id": 50880541, "node_id": "MDQ6VXNlcjUwODgwNTQx", "avatar_url": "https://avatars.githubusercontent.com/u/50880541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dismukes", "html_url": "https://github.com/dismukes", "followers_url": "https://api.github.com/users/dismukes/followers", "following_url": "https://api.github.com/users/dismukes/following{/other_user}", "gists_url": "https://api.github.com/users/dismukes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dismukes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dismukes/subscriptions", "organizations_url": "https://api.github.com/users/dismukes/orgs", "repos_url": "https://api.github.com/users/dismukes/repos", "events_url": "https://api.github.com/users/dismukes/events{/privacy}", "received_events_url": "https://api.github.com/users/dismukes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1c77806b48e87fb1e2dc75f2ac2957ef61bd5fe3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c77806b48e87fb1e2dc75f2ac2957ef61bd5fe3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c77806b48e87fb1e2dc75f2ac2957ef61bd5fe3"}], "stats": {"total": 38, "additions": 19, "deletions": 19}, "files": [{"sha": "6d58c8c5913cce3c134d5eef25c73c39c37a3b56", "filename": "gcc/ada/exp_aggr.adb", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b4034c06b376f1219925546eb1006a2627ca336/gcc%2Fada%2Fexp_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b4034c06b376f1219925546eb1006a2627ca336/gcc%2Fada%2Fexp_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_aggr.adb?ref=0b4034c06b376f1219925546eb1006a2627ca336", "patch": "@@ -6922,26 +6922,26 @@ package body Exp_Aggr is\n                  Defining_Identifier => Loop_Id,\n                  Discrete_Subtype_Definition => L_Range));\n \n-         --  Build insertion statement. for a positional aggregate only\n-         --  the expression is needed. For a named aggregate the loop\n-         --  variable, whose type is that of the key, is an additional\n-         --  parameter for the insertion operation.\n+         --  Build insertion statement. For a positional aggregate, only the\n+         --  expression is needed. For a named aggregate, the loop variable,\n+         --  whose type is that of the key, is an additional parameter for\n+         --  the insertion operation.\n \n          if Present (Add_Unnamed_Subp) then\n             Stats := New_List\n               (Make_Procedure_Call_Statement (Loc,\n-                Name => New_Occurrence_Of (Entity (Add_Unnamed_Subp), Loc),\n-                Parameter_Associations =>\n-                  New_List (New_Occurrence_Of (Temp, Loc),\n+                 Name => New_Occurrence_Of (Entity (Add_Unnamed_Subp), Loc),\n+                 Parameter_Associations =>\n+                   New_List (New_Occurrence_Of (Temp, Loc),\n                      New_Copy_Tree (Expr))));\n          else\n             Stats := New_List\n               (Make_Procedure_Call_Statement (Loc,\n                  Name => New_Occurrence_Of (Entity (Add_Named_Subp), Loc),\n                  Parameter_Associations =>\n                    New_List (New_Occurrence_Of (Temp, Loc),\n-                   New_Occurrence_Of (Loop_Id, Loc),\n-                   New_Copy_Tree (Expr))));\n+                     New_Occurrence_Of (Loop_Id, Loc),\n+                     New_Copy_Tree (Expr))));\n          end if;\n \n          Loop_Stat :=  Make_Implicit_Loop_Statement\n@@ -6990,7 +6990,7 @@ package body Exp_Aggr is\n                     Name => New_Occurrence_Of (Insert, Loc),\n                     Parameter_Associations =>\n                       New_List (New_Occurrence_Of (Temp, Loc),\n-                         New_Copy_Tree (Comp)));\n+                        New_Copy_Tree (Comp)));\n                   Append (Stat, Aggr_Code);\n                   Next (Comp);\n                end loop;\n@@ -7013,7 +7013,7 @@ package body Exp_Aggr is\n          begin\n             Comp := First (Component_Associations (N));\n \n-            --  Each component association may contain several choices,\n+            --  Each component association may contain several choices;\n             --  generate an insertion statement for each.\n \n             while Present (Comp) loop\n@@ -7027,8 +7027,8 @@ package body Exp_Aggr is\n                        Name => New_Occurrence_Of (Insert, Loc),\n                        Parameter_Associations =>\n                          New_List (New_Occurrence_Of (Temp, Loc),\n-                            New_Copy_Tree (Key),\n-                            New_Copy_Tree (Expression (Comp))));\n+                           New_Copy_Tree (Key),\n+                           New_Copy_Tree (Expression (Comp))));\n                      Append (Stat, Aggr_Code);\n \n                      Next (Key);"}, {"sha": "5bc8bf59fef20c6f084ac2c3c6d26225634100e9", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b4034c06b376f1219925546eb1006a2627ca336/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b4034c06b376f1219925546eb1006a2627ca336/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=0b4034c06b376f1219925546eb1006a2627ca336", "patch": "@@ -9733,8 +9733,8 @@ package body Exp_Ch6 is\n                   Expression   => New_Copy_Tree (BIP_Func_Call))));\n \n       --  Manually set the associated node for the anonymous access type to\n-      --  be its local declaration to avoid confusing and complicating\n-      --  the accessibility machinary.\n+      --  be its local declaration, to avoid confusing and complicating\n+      --  the accessibility machinery.\n \n       Set_Associated_Node_For_Itype (Anon_Type, Tmp_Decl);\n "}, {"sha": "31496bee1dd3cbd7521ef697fd99bb9d68c77fd4", "filename": "gcc/ada/sem_aggr.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b4034c06b376f1219925546eb1006a2627ca336/gcc%2Fada%2Fsem_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b4034c06b376f1219925546eb1006a2627ca336/gcc%2Fada%2Fsem_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aggr.adb?ref=0b4034c06b376f1219925546eb1006a2627ca336", "patch": "@@ -2648,11 +2648,11 @@ package body Sem_Aggr is\n        (Comp      : Node_Id;\n         Key_Type  : Entity_Id;\n         Elmt_Type : Entity_Id);\n-      --  Resolve choices and expression in an iterated component\n-      --  association. This is similar but not identical to the handling\n-      --  of this construct in an array aggregate.\n+      --  Resolve choices and expression in an iterated component association.\n+      --  This is similar but not identical to the handling of this construct\n+      --  in an array aggregate.\n       --  For a named container, the type of each choice must be compatible\n-      --  with the key type. For a positional container the choice must be\n+      --  with the key type. For a positional container, the choice must be\n       --  a subtype indication or an iterator specification that determines\n       --  an element type.\n "}]}