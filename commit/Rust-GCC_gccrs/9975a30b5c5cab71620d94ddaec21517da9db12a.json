{"sha": "9975a30b5c5cab71620d94ddaec21517da9db12a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTk3NWEzMGI1YzVjYWI3MTYyMGQ5NGRkYWVjMjE1MTdkYTlkYjEyYQ==", "commit": {"author": {"name": "Janne Blomqvist", "email": "jb@gcc.gnu.org", "date": "2012-01-29T19:01:09Z"}, "committer": {"name": "Janne Blomqvist", "email": "jb@gcc.gnu.org", "date": "2012-01-29T19:01:09Z"}, "message": "PR 51808 Constify binding_label.\n\n2012-01-29  Janne Blomqvist  <jb@gcc.gnu.org>\n\n\tPR fortran/51808\n\t* decl.c (set_binding_label): Make binding_label argument const.\n\t(curr_binding_label): Constify.\n\t* gfortran.h (gfc_symbol): Constify binding_label.\n\t(gfc_common_head): Likewise.\n\t(get_iso_c_sym): Likewise.\n\t* match.c (gfc_match_name_C): Constify buffer argument.\n\t* match.h (gfc_match_name_C): Likewise.\n\t* resolve.c (set_name_and_label): Constify binding_label argument.\n\t(gfc_iso_c_sub_interface): Constify binding_label variable.\n\t* symbol.c (get_iso_c_sym): Constify binding_label argument.\n\nFrom-SVN: r183679", "tree": {"sha": "23b6045fb8229578f5f13d9f3ea7b8ffd9821851", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/23b6045fb8229578f5f13d9f3ea7b8ffd9821851"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9975a30b5c5cab71620d94ddaec21517da9db12a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9975a30b5c5cab71620d94ddaec21517da9db12a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9975a30b5c5cab71620d94ddaec21517da9db12a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9975a30b5c5cab71620d94ddaec21517da9db12a/comments", "author": null, "committer": null, "parents": [{"sha": "9e85a9fd0dddf4df2991931cbc3dde1841a1b0fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e85a9fd0dddf4df2991931cbc3dde1841a1b0fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e85a9fd0dddf4df2991931cbc3dde1841a1b0fb"}], "stats": {"total": 39, "additions": 27, "deletions": 12}, "files": [{"sha": "447479d631d6a2042ee132d4838143c5a0338bb7", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9975a30b5c5cab71620d94ddaec21517da9db12a/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9975a30b5c5cab71620d94ddaec21517da9db12a/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=9975a30b5c5cab71620d94ddaec21517da9db12a", "patch": "@@ -1,3 +1,17 @@\n+2012-01-29  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\tPR fortran/51808\n+\t* decl.c (set_binding_label): Make binding_label argument const.\n+\t(curr_binding_label): Constify.\n+\t* gfortran.h (gfc_symbol): Constify binding_label.\n+\t(gfc_common_head): Likewise.\n+\t(get_iso_c_sym): Likewise.\n+\t* match.c (gfc_match_name_C): Constify buffer argument.\n+\t* match.h (gfc_match_name_C): Likewise.\n+\t* resolve.c (set_name_and_label): Constify binding_label argument.\n+\t(gfc_iso_c_sub_interface): Constify binding_label variable.\n+\t* symbol.c (get_iso_c_sym): Constify binding_label argument.\n+\n 2012-01-29  Janne Blomqvist  <jb@gcc.gnu.org>\n \n \tPR fortran/51808"}, {"sha": "c87fc1b1ac4d8f67cfb80b52764b5235cac2820d", "filename": "gcc/fortran/decl.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9975a30b5c5cab71620d94ddaec21517da9db12a/gcc%2Ffortran%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9975a30b5c5cab71620d94ddaec21517da9db12a/gcc%2Ffortran%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdecl.c?ref=9975a30b5c5cab71620d94ddaec21517da9db12a", "patch": "@@ -35,7 +35,7 @@ along with GCC; see the file COPYING3.  If not see\n #define gfc_get_data() XCNEW (gfc_data)\n \n \n-static gfc_try set_binding_label (char **, const char *, int);\n+static gfc_try set_binding_label (const char **, const char *, int);\n \n \n /* This flag is set if an old-style length selector is matched\n@@ -55,7 +55,7 @@ static gfc_array_spec *current_as;\n static int colon_seen;\n \n /* The current binding label (if any).  */\n-static char* curr_binding_label;\n+static const char* curr_binding_label;\n /* Need to know how many identifiers are on the current data declaration\n    line in case we're given the BIND(C) attribute with a NAME= specifier.  */\n static int num_idents_on_line;\n@@ -3808,7 +3808,8 @@ match_attr_spec (void)\n    there is more than one argument (num_idents), it is an error.  */\n \n static gfc_try\n-set_binding_label (char **dest_label, const char *sym_name, int num_idents)\n+set_binding_label (const char **dest_label, const char *sym_name, \n+\t\t   int num_idents)\n {\n   if (num_idents > 1 && has_name_equals)\n     {\n@@ -5713,7 +5714,7 @@ match\n gfc_match_bind_c (gfc_symbol *sym, bool allow_binding_name)\n {\n   /* binding label, if exists */   \n-  char* binding_label = NULL;\n+  const char* binding_label = NULL;\n   match double_quote;\n   match single_quote;\n "}, {"sha": "6f49d6146bae92c7fd1f66d63484a945485e5ff4", "filename": "gcc/fortran/gfortran.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9975a30b5c5cab71620d94ddaec21517da9db12a/gcc%2Ffortran%2Fgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9975a30b5c5cab71620d94ddaec21517da9db12a/gcc%2Ffortran%2Fgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.h?ref=9975a30b5c5cab71620d94ddaec21517da9db12a", "patch": "@@ -1237,7 +1237,7 @@ typedef struct gfc_symbol\n \n   /* This may be repetitive, since the typespec now has a binding\n      label field.  */\n-  char* binding_label;\n+  const char* binding_label;\n   /* Store a reference to the common_block, if this symbol is in one.  */\n   struct gfc_common_head *common_block;\n \n@@ -1254,7 +1254,7 @@ typedef struct gfc_common_head\n   char use_assoc, saved, threadprivate;\n   char name[GFC_MAX_SYMBOL_LEN + 1];\n   struct gfc_symbol *head;\n-  char* binding_label;\n+  const char* binding_label;\n   int is_bind_c;\n }\n gfc_common_head;\n@@ -2595,7 +2595,7 @@ gfc_try verify_bind_c_sym (gfc_symbol *, gfc_typespec *, int, gfc_common_head *)\n gfc_try verify_bind_c_derived_type (gfc_symbol *);\n gfc_try verify_com_block_vars_c_interop (gfc_common_head *);\n void generate_isocbinding_symbol (const char *, iso_c_binding_symbol, const char *);\n-gfc_symbol *get_iso_c_sym (gfc_symbol *, char *, char *, int);\n+gfc_symbol *get_iso_c_sym (gfc_symbol *, char *, const char *, int);\n int gfc_get_sym_tree (const char *, gfc_namespace *, gfc_symtree **, bool);\n int gfc_get_ha_symbol (const char *, gfc_symbol **);\n int gfc_get_ha_sym_tree (const char *, gfc_symtree **);"}, {"sha": "89b59bc8036d20eebb5e954b45151bc2daef2eb5", "filename": "gcc/fortran/match.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9975a30b5c5cab71620d94ddaec21517da9db12a/gcc%2Ffortran%2Fmatch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9975a30b5c5cab71620d94ddaec21517da9db12a/gcc%2Ffortran%2Fmatch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fmatch.c?ref=9975a30b5c5cab71620d94ddaec21517da9db12a", "patch": "@@ -581,7 +581,7 @@ gfc_match_name (char *buffer)\n    we successfully match a C name.  */\n \n match\n-gfc_match_name_C (char **buffer)\n+gfc_match_name_C (const char **buffer)\n {\n   locus old_loc;\n   size_t i = 0;"}, {"sha": "029faf77e7bedd623236b8179609e7c26bc80d40", "filename": "gcc/fortran/match.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9975a30b5c5cab71620d94ddaec21517da9db12a/gcc%2Ffortran%2Fmatch.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9975a30b5c5cab71620d94ddaec21517da9db12a/gcc%2Ffortran%2Fmatch.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fmatch.h?ref=9975a30b5c5cab71620d94ddaec21517da9db12a", "patch": "@@ -52,7 +52,7 @@ match gfc_match_label (void);\n match gfc_match_small_int (int *);\n match gfc_match_small_int_expr (int *, gfc_expr **);\n match gfc_match_name (char *);\n-match gfc_match_name_C (char **buffer);\n+match gfc_match_name_C (const char **buffer);\n match gfc_match_symbol (gfc_symbol **, int);\n match gfc_match_sym_tree (gfc_symtree **, int);\n match gfc_match_intrinsic_op (gfc_intrinsic_op *);"}, {"sha": "0560261be8d3bdcb430d0211b72932717a08a719", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9975a30b5c5cab71620d94ddaec21517da9db12a/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9975a30b5c5cab71620d94ddaec21517da9db12a/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=9975a30b5c5cab71620d94ddaec21517da9db12a", "patch": "@@ -3356,7 +3356,7 @@ resolve_generic_s (gfc_code *c)\n \n static void\n set_name_and_label (gfc_code *c, gfc_symbol *sym,\n-                    char *name, char **binding_label)\n+                    char *name, const char **binding_label)\n {\n   gfc_expr *arg = NULL;\n   char type;\n@@ -3420,7 +3420,7 @@ gfc_iso_c_sub_interface (gfc_code *c, gfc_symbol *sym)\n   gfc_symbol *new_sym;\n   /* this is fine, since we know the names won't use the max */\n   char name[GFC_MAX_SYMBOL_LEN + 1];\n-  char* binding_label;\n+  const char* binding_label;\n   /* default to success; will override if find error */\n   match m = MATCH_YES;\n "}, {"sha": "0cd7cc8d3e31ca8ee3aa8c98c6a661a23cbf483a", "filename": "gcc/fortran/symbol.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9975a30b5c5cab71620d94ddaec21517da9db12a/gcc%2Ffortran%2Fsymbol.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9975a30b5c5cab71620d94ddaec21517da9db12a/gcc%2Ffortran%2Fsymbol.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fsymbol.c?ref=9975a30b5c5cab71620d94ddaec21517da9db12a", "patch": "@@ -4683,7 +4683,7 @@ generate_isocbinding_symbol (const char *mod_name, iso_c_binding_symbol s,\n \n gfc_symbol *\n get_iso_c_sym (gfc_symbol *old_sym, char *new_name,\n-               char *new_binding_label, int add_optional_arg)\n+               const char *new_binding_label, int add_optional_arg)\n {\n   gfc_symtree *new_symtree = NULL;\n "}]}