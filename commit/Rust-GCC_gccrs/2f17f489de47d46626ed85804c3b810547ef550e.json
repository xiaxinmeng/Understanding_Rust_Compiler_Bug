{"sha": "2f17f489de47d46626ed85804c3b810547ef550e", "node_id": "C_kwDOANBUbNoAKDJmMTdmNDg5ZGU0N2Q0NjYyNmVkODU4MDRjM2I4MTA1NDdlZjU1MGU", "commit": {"author": {"name": "Ilya Leoshkevich", "email": "iii@linux.ibm.com", "date": "2022-07-29T14:14:10Z"}, "committer": {"name": "Ilya Leoshkevich", "email": "iii@linux.ibm.com", "date": "2022-08-04T10:28:43Z"}, "message": "PR106342 - IBM zSystems: Provide vsel for all vector modes\n\ndg.exp=pr104612.c fails with an ICE on s390x, because copysignv2sf3\nproduces an insn that vsel<mode> is supposed to recognize, but can't,\nbecause it's not defined for V2SF.  Fix by defining it for all vector\nmodes supported by copysign<mode>3.\n\ngcc/ChangeLog:\n\n\t* config/s390/vector.md (V_HW_FT): New iterator.\n\t* config/s390/vx-builtins.md (vsel<mode>): Use V_HW_FT instead\n\tof V_HW.", "tree": {"sha": "8f6bc4586dd4e152573baed053c80474a24c93a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8f6bc4586dd4e152573baed053c80474a24c93a1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2f17f489de47d46626ed85804c3b810547ef550e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f17f489de47d46626ed85804c3b810547ef550e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f17f489de47d46626ed85804c3b810547ef550e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f17f489de47d46626ed85804c3b810547ef550e/comments", "author": {"login": "iii-i", "id": 45998171, "node_id": "MDQ6VXNlcjQ1OTk4MTcx", "avatar_url": "https://avatars.githubusercontent.com/u/45998171?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iii-i", "html_url": "https://github.com/iii-i", "followers_url": "https://api.github.com/users/iii-i/followers", "following_url": "https://api.github.com/users/iii-i/following{/other_user}", "gists_url": "https://api.github.com/users/iii-i/gists{/gist_id}", "starred_url": "https://api.github.com/users/iii-i/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iii-i/subscriptions", "organizations_url": "https://api.github.com/users/iii-i/orgs", "repos_url": "https://api.github.com/users/iii-i/repos", "events_url": "https://api.github.com/users/iii-i/events{/privacy}", "received_events_url": "https://api.github.com/users/iii-i/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iii-i", "id": 45998171, "node_id": "MDQ6VXNlcjQ1OTk4MTcx", "avatar_url": "https://avatars.githubusercontent.com/u/45998171?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iii-i", "html_url": "https://github.com/iii-i", "followers_url": "https://api.github.com/users/iii-i/followers", "following_url": "https://api.github.com/users/iii-i/following{/other_user}", "gists_url": "https://api.github.com/users/iii-i/gists{/gist_id}", "starred_url": "https://api.github.com/users/iii-i/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iii-i/subscriptions", "organizations_url": "https://api.github.com/users/iii-i/orgs", "repos_url": "https://api.github.com/users/iii-i/repos", "events_url": "https://api.github.com/users/iii-i/events{/privacy}", "received_events_url": "https://api.github.com/users/iii-i/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4c23b534d472c2b22860180868d7cf65d4d8cf31", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c23b534d472c2b22860180868d7cf65d4d8cf31", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c23b534d472c2b22860180868d7cf65d4d8cf31"}], "stats": {"total": 18, "additions": 12, "deletions": 6}, "files": [{"sha": "624729814afdf420d6c81648ba8063d266669f30", "filename": "gcc/config/s390/vector.md", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f17f489de47d46626ed85804c3b810547ef550e/gcc%2Fconfig%2Fs390%2Fvector.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f17f489de47d46626ed85804c3b810547ef550e/gcc%2Fconfig%2Fs390%2Fvector.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fvector.md?ref=2f17f489de47d46626ed85804c3b810547ef550e", "patch": "@@ -63,6 +63,12 @@\n \t\t\t   V1DF V2DF\n \t\t\t   (V1TF \"TARGET_VXE\") (TF \"TARGET_VXE\")])\n \n+; All modes present in V_HW and VFT.\n+(define_mode_iterator V_HW_FT [V16QI V8HI V4SI V2DI (V1TI \"TARGET_VXE\") V1DF\n+\t\t\t       V2DF (V1SF \"TARGET_VXE\") (V2SF \"TARGET_VXE\")\n+\t\t\t       (V4SF \"TARGET_VXE\") (V1TF \"TARGET_VXE\")\n+\t\t\t       (TF \"TARGET_VXE\")])\n+\n ; FP vector modes directly supported by the HW.  This does not include\n ; vector modes using only part of a vector register and should be used\n ; for instructions which might trigger IEEE exceptions."}, {"sha": "98ee08b26833e0e33e1e1cb3cf0755d3c41de5f6", "filename": "gcc/config/s390/vx-builtins.md", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f17f489de47d46626ed85804c3b810547ef550e/gcc%2Fconfig%2Fs390%2Fvx-builtins.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f17f489de47d46626ed85804c3b810547ef550e/gcc%2Fconfig%2Fs390%2Fvx-builtins.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fvx-builtins.md?ref=2f17f489de47d46626ed85804c3b810547ef550e", "patch": "@@ -517,12 +517,12 @@\n ; swapped in s390-c.cc when we get here.\n \n (define_insn \"vsel<mode>\"\n-  [(set (match_operand:V_HW                      0 \"register_operand\" \"=v\")\n-\t(ior:V_HW\n-\t (and:V_HW (match_operand:V_HW           1 \"register_operand\"  \"v\")\n-\t\t   (match_operand:V_HW           3 \"register_operand\"  \"v\"))\n-\t (and:V_HW (not:V_HW (match_dup 3))\n-\t\t   (match_operand:V_HW           2 \"register_operand\"  \"v\"))))]\n+  [(set (match_operand:V_HW_FT               0 \"register_operand\" \"=v\")\n+\t(ior:V_HW_FT\n+\t (and:V_HW_FT (match_operand:V_HW_FT 1 \"register_operand\"  \"v\")\n+\t\t      (match_operand:V_HW_FT 3 \"register_operand\"  \"v\"))\n+\t (and:V_HW_FT (not:V_HW_FT (match_dup 3))\n+\t\t      (match_operand:V_HW_FT 2 \"register_operand\"  \"v\"))))]\n   \"TARGET_VX\"\n   \"vsel\\t%v0,%1,%2,%3\"\n   [(set_attr \"op_type\" \"VRR\")])"}]}