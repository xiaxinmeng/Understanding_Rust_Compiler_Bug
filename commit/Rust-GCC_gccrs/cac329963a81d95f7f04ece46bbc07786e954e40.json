{"sha": "cac329963a81d95f7f04ece46bbc07786e954e40", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2FjMzI5OTYzYTgxZDk1ZjdmMDRlY2U0NmJiYzA3Nzg2ZTk1NGU0MA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2005-08-11T08:59:22Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2005-08-11T08:59:22Z"}, "message": "re PR target/23289 (tail call optimization not performed)\n\n2005-08-11  Richard Guenther  <rguenther@suse.de>\n\n\tPR target/23289\n\t* config/i386/i386.c (ix86_function_ok_for_sibcall): Handle\n\tcases where we call to/from functions returning void.\n\n\t* gcc.target/i386/tailcall-1.c: New testcase.\n\nFrom-SVN: r102981", "tree": {"sha": "93dfba666e9c452b502c85b38462c19758950a9a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/93dfba666e9c452b502c85b38462c19758950a9a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cac329963a81d95f7f04ece46bbc07786e954e40", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cac329963a81d95f7f04ece46bbc07786e954e40", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cac329963a81d95f7f04ece46bbc07786e954e40", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cac329963a81d95f7f04ece46bbc07786e954e40/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bdea5c0eadb0ae0a825709fff5893360b326b861", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bdea5c0eadb0ae0a825709fff5893360b326b861", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bdea5c0eadb0ae0a825709fff5893360b326b861"}], "stats": {"total": 50, "additions": 48, "deletions": 2}, "files": [{"sha": "a6715d0dbd38be0c183ce0fe620270649f439807", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cac329963a81d95f7f04ece46bbc07786e954e40/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cac329963a81d95f7f04ece46bbc07786e954e40/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cac329963a81d95f7f04ece46bbc07786e954e40", "patch": "@@ -1,3 +1,9 @@\n+2005-08-11  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR target/23289\n+\t* config/i386/i386.c (ix86_function_ok_for_sibcall): Handle\n+\tcases where we call to/from functions returning void.\n+\n 2005-08-10  James A. Morrison  <phython@gcc.gnu.org>\n \n \tPR c++/23225"}, {"sha": "3c62bf0c5542eff20449ae5ce8cc206a4c741b1c", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cac329963a81d95f7f04ece46bbc07786e954e40/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cac329963a81d95f7f04ece46bbc07786e954e40/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=cac329963a81d95f7f04ece46bbc07786e954e40", "patch": "@@ -1907,6 +1907,7 @@ ix86_function_ok_for_sibcall (tree decl, tree exp)\n {\n   tree func;\n   rtx a, b;\n+  bool one_void, one_reg;\n \n   /* If we are generating position-independent code, we cannot sibcall\n      optimize any indirect call, or a direct call to a global function,\n@@ -1929,11 +1930,18 @@ ix86_function_ok_for_sibcall (tree decl, tree exp)\n      function that does or, conversely, from a function that does return\n      a float to a function that doesn't; the necessary stack adjustment\n      would not be executed.  This is also the place we notice\n-     differences in the return value ABI.  */\n+     differences in the return value ABI.  Note that it is ok for one\n+     of the functions to have void return type as long as the return\n+     value of the other is passed in a register.  */\n   a = ix86_function_value (TREE_TYPE (exp), func, false);\n   b = ix86_function_value (TREE_TYPE (DECL_RESULT (cfun->decl)),\n \t\t\t   cfun->decl, false);\n-  if (! rtx_equal_p (a, b))\n+  one_void = (VOID_TYPE_P (TREE_TYPE (exp))\n+\t      || VOID_TYPE_P (TREE_TYPE (DECL_RESULT (cfun->decl))));\n+  one_reg = ((REG_P (a) && !STACK_REG_P (a))\n+\t     || (REG_P (b) && !STACK_REG_P (b)));\n+  if (!(one_void && one_reg)\n+      && !rtx_equal_p (a, b))\n     return false;\n \n   /* If this call is indirect, we'll need to be able to use a call-clobbered"}, {"sha": "8a296288ab980b39733b856509222088a8a580f3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cac329963a81d95f7f04ece46bbc07786e954e40/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cac329963a81d95f7f04ece46bbc07786e954e40/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=cac329963a81d95f7f04ece46bbc07786e954e40", "patch": "@@ -1,3 +1,8 @@\n+2005-08-11  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR target/23289\n+\t* gcc.target/i386/tailcall-1.c: New testcase.\n+\n 2005-08-10  James A. Morrison  <phython@gc.gnu.org>\n \n \t* gcc.dg/vect/vect-67.c: Un-xfail."}, {"sha": "b916b6c7c1ed17b7a02993ed643c60b75ae2f299", "filename": "gcc/testsuite/gcc.target/i386/tailcall-1.c", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cac329963a81d95f7f04ece46bbc07786e954e40/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ftailcall-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cac329963a81d95f7f04ece46bbc07786e954e40/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ftailcall-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ftailcall-1.c?ref=cac329963a81d95f7f04ece46bbc07786e954e40", "patch": "@@ -0,0 +1,27 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+typedef unsigned int Cardinal;\n+typedef char *String;\n+typedef struct _WidgetRec *Widget;\n+\n+typedef union _XEvent {\n+        int type;\n+ long pad[24];\n+} XEvent;\n+\n+\n+extern int SendMousePosition (Widget w, XEvent* event);\n+\n+\n+void\n+HandleIgnore(Widget w,\n+      XEvent * event,\n+      String * params ,\n+      Cardinal *param_count )\n+{\n+\n+    (void) SendMousePosition(w, event);\n+}\n+\n+/* { dg-final { scan-assembler \"jmp\" } } */"}]}