{"sha": "3999578cc522eb57d65c00c9293ca88cfbd901c2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mzk5OTU3OGNjNTIyZWI1N2Q2NWMwMGM5MjkzY2E4OGNmYmQ5MDFjMg==", "commit": {"author": {"name": "Monk Chiang", "email": "sh.chiang04@gmail.com", "date": "2018-03-11T07:48:48Z"}, "committer": {"name": "Chung-Ju Wu", "email": "jasonwucj@gcc.gnu.org", "date": "2018-03-11T07:48:48Z"}, "message": "[NDS32] Add intrinsic function for ffb, ffmism and flmism.\n\ngcc/\n\t* config/nds32/constants.md (unspec_element): Add UNSPEC_FFB,\n\tUNSPEC_FFMISM and UNSPEC_FLMISM.\n\t* config/nds32/nds32-intrinsic.c (bdesc_2arg): Add builtin description\n\tfor ffb, ffmism and flmism.\n\t* config/nds32/nds32-intrinsic.md (unspec_ffb): Define new pattern.\n\t(unspec_ffmism): Ditto.\n\t(unspec_flmism): Ditto.\n\t(nds32_expand_builtin_impl): Check if string extension is available.\n\t* config/nds32/nds32.h (nds32_builtins): Add NDS32_BUILTIN_FFB,\n\tNDS32_BUILTIN_FFMISM and NDS32_BUILTIN_FLMISM.\n\nCo-Authored-By: Chung-Ju Wu <jasonwucj@gmail.com>\nCo-Authored-By: Kito Cheng <kito.cheng@gmail.com>\n\nFrom-SVN: r258424", "tree": {"sha": "5284f2146018d62182694d1337d2f35d0c85d39c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5284f2146018d62182694d1337d2f35d0c85d39c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3999578cc522eb57d65c00c9293ca88cfbd901c2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3999578cc522eb57d65c00c9293ca88cfbd901c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3999578cc522eb57d65c00c9293ca88cfbd901c2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3999578cc522eb57d65c00c9293ca88cfbd901c2/comments", "author": {"login": "monkchiang", "id": 62004175, "node_id": "MDQ6VXNlcjYyMDA0MTc1", "avatar_url": "https://avatars.githubusercontent.com/u/62004175?v=4", "gravatar_id": "", "url": "https://api.github.com/users/monkchiang", "html_url": "https://github.com/monkchiang", "followers_url": "https://api.github.com/users/monkchiang/followers", "following_url": "https://api.github.com/users/monkchiang/following{/other_user}", "gists_url": "https://api.github.com/users/monkchiang/gists{/gist_id}", "starred_url": "https://api.github.com/users/monkchiang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/monkchiang/subscriptions", "organizations_url": "https://api.github.com/users/monkchiang/orgs", "repos_url": "https://api.github.com/users/monkchiang/repos", "events_url": "https://api.github.com/users/monkchiang/events{/privacy}", "received_events_url": "https://api.github.com/users/monkchiang/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d8c12d24bf07594e9ea37ca120b7385152497f98", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8c12d24bf07594e9ea37ca120b7385152497f98", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8c12d24bf07594e9ea37ca120b7385152497f98"}], "stats": {"total": 75, "additions": 75, "deletions": 0}, "files": [{"sha": "0cdc24fdbc5ddfba0a6b8f59a8c434f9014a519b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3999578cc522eb57d65c00c9293ca88cfbd901c2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3999578cc522eb57d65c00c9293ca88cfbd901c2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3999578cc522eb57d65c00c9293ca88cfbd901c2", "patch": "@@ -1,3 +1,18 @@\n+2018-03-11  Monk Chiang  <sh.chiang04@gmail.com>\n+\t    Kito Cheng  <kito.cheng@gmail.com>\n+\t    Chung-Ju Wu  <jasonwucj@gmail.com>\n+\n+\t* config/nds32/constants.md (unspec_element): Add UNSPEC_FFB,\n+\tUNSPEC_FFMISM and UNSPEC_FLMISM.\n+\t* config/nds32/nds32-intrinsic.c (bdesc_2arg): Add builtin description\n+\tfor ffb, ffmism and flmism.\n+\t* config/nds32/nds32-intrinsic.md (unspec_ffb): Define new pattern.\n+\t(unspec_ffmism): Ditto.\n+\t(unspec_flmism): Ditto.\n+\t(nds32_expand_builtin_impl): Check if string extension is available.\n+\t* config/nds32/nds32.h (nds32_builtins): Add NDS32_BUILTIN_FFB,\n+\tNDS32_BUILTIN_FFMISM and NDS32_BUILTIN_FLMISM.\n+\n 2018-03-10  Vladimir Makarov  <vmakarov@redhat.com>\n \n \tReverting patch:"}, {"sha": "482e39ecfbaca56a15efd9e8fffdaf71f4c711df", "filename": "gcc/config/nds32/constants.md", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3999578cc522eb57d65c00c9293ca88cfbd901c2/gcc%2Fconfig%2Fnds32%2Fconstants.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3999578cc522eb57d65c00c9293ca88cfbd901c2/gcc%2Fconfig%2Fnds32%2Fconstants.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnds32%2Fconstants.md?ref=3999578cc522eb57d65c00c9293ca88cfbd901c2", "patch": "@@ -32,6 +32,9 @@\n \n ;; The unpec operation index.\n (define_c_enum \"unspec_element\" [\n+  UNSPEC_FFB\n+  UNSPEC_FFMISM\n+  UNSPEC_FLMISM\n   UNSPEC_UALOAD_HW\n   UNSPEC_UALOAD_W\n   UNSPEC_UALOAD_DW"}, {"sha": "636b1d1139fe2f9546169fdae6dce83b321ae66e", "filename": "gcc/config/nds32/nds32-intrinsic.c", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3999578cc522eb57d65c00c9293ca88cfbd901c2/gcc%2Fconfig%2Fnds32%2Fnds32-intrinsic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3999578cc522eb57d65c00c9293ca88cfbd901c2/gcc%2Fconfig%2Fnds32%2Fnds32-intrinsic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnds32%2Fnds32-intrinsic.c?ref=3999578cc522eb57d65c00c9293ca88cfbd901c2", "patch": "@@ -257,6 +257,9 @@ static struct builtin_description bdesc_1argimm[] =\n /* Intrinsics that take two arguments.  */\n static struct builtin_description bdesc_2arg[] =\n {\n+  NDS32_BUILTIN(unspec_ffb, \"ffb\", FFB)\n+  NDS32_BUILTIN(unspec_ffmism, \"ffmsim\", FFMISM)\n+  NDS32_BUILTIN(unspec_flmism, \"flmism\", FLMISM)\n   NDS32_NO_TARGET_BUILTIN(unspec_volatile_mtsr, \"mtsr\", MTSR)\n   NDS32_NO_TARGET_BUILTIN(unspec_volatile_mtusr, \"mtusr\", MTUSR)\n   NDS32_NO_TARGET_BUILTIN(unaligned_store_hw, \"unaligned_store_hw\", UASTORE_HW)\n@@ -277,6 +280,23 @@ nds32_expand_builtin_impl (tree exp,\n   unsigned i;\n   struct builtin_description *d;\n \n+  switch (fcode)\n+    {\n+    /* String Extension  */\n+    case NDS32_BUILTIN_FFB:\n+    case NDS32_BUILTIN_FFMISM:\n+    case NDS32_BUILTIN_FLMISM:\n+      if (!TARGET_EXT_STRING)\n+\t{\n+\t  error (\"don't support string extension instructions\");\n+\t  return NULL_RTX;\n+\t}\n+      break;\n+\n+    default:\n+      break;\n+    }\n+\n   /* Since there are no result and operands, we can simply emit this rtx.  */\n   switch (fcode)\n     {"}, {"sha": "5a07f89fa55bd02655276158a9b7766890bea035", "filename": "gcc/config/nds32/nds32-intrinsic.md", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3999578cc522eb57d65c00c9293ca88cfbd901c2/gcc%2Fconfig%2Fnds32%2Fnds32-intrinsic.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3999578cc522eb57d65c00c9293ca88cfbd901c2/gcc%2Fconfig%2Fnds32%2Fnds32-intrinsic.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnds32%2Fnds32-intrinsic.md?ref=3999578cc522eb57d65c00c9293ca88cfbd901c2", "patch": "@@ -94,6 +94,40 @@\n   [(set_attr \"type\" \"misc\")]\n )\n \n+;; String Extension\n+\n+(define_insn \"unspec_ffb\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"=r, r\")\n+\t(unspec:SI [(match_operand:SI 1 \"register_operand\" \"r, r\")\n+\t\t    (match_operand:SI 2 \"nonmemory_operand\" \"Iu08, r\")] UNSPEC_FFB))]\n+  \"\"\n+  \"@\n+  ffbi\\t%0, %1, %2\n+  ffb\\t%0, %1, %2\"\n+  [(set_attr \"type\" \"alu\")\n+   (set_attr \"length\" \"4\")]\n+)\n+\n+(define_insn \"unspec_ffmism\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n+\t(unspec:SI [(match_operand:SI 1 \"register_operand\" \"r\")\n+\t\t    (match_operand:SI 2 \"register_operand\" \"r\")] UNSPEC_FFMISM))]\n+  \"\"\n+  \"ffmism\\t%0, %1, %2\"\n+  [(set_attr \"type\" \"alu\")\n+   (set_attr \"length\" \"4\")]\n+)\n+\n+(define_insn \"unspec_flmism\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n+\t(unspec:SI [(match_operand:SI 1 \"register_operand\" \"r\")\n+\t\t    (match_operand:SI 2 \"register_operand\" \"r\")] UNSPEC_FLMISM))]\n+  \"\"\n+  \"flmism\\t%0, %1, %2\"\n+  [(set_attr \"type\" \"alu\")\n+   (set_attr \"length\" \"4\")]\n+)\n+\n ;;Unaligned Load/Store\n \n (define_expand \"unaligned_load_hw\""}, {"sha": "1c812f77579fafbc7a2290fa6d4fc466c74624ca", "filename": "gcc/config/nds32/nds32.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3999578cc522eb57d65c00c9293ca88cfbd901c2/gcc%2Fconfig%2Fnds32%2Fnds32.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3999578cc522eb57d65c00c9293ca88cfbd901c2/gcc%2Fconfig%2Fnds32%2Fnds32.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnds32%2Fnds32.h?ref=3999578cc522eb57d65c00c9293ca88cfbd901c2", "patch": "@@ -346,6 +346,9 @@ enum nds32_builtins\n   NDS32_BUILTIN_MTUSR,\n   NDS32_BUILTIN_SETGIE_EN,\n   NDS32_BUILTIN_SETGIE_DIS,\n+  NDS32_BUILTIN_FFB,\n+  NDS32_BUILTIN_FFMISM,\n+  NDS32_BUILTIN_FLMISM,\n   NDS32_BUILTIN_UALOAD_HW,\n   NDS32_BUILTIN_UALOAD_W,\n   NDS32_BUILTIN_UALOAD_DW,"}]}