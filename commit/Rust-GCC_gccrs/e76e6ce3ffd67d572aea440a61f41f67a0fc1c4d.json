{"sha": "e76e6ce3ffd67d572aea440a61f41f67a0fc1c4d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTc2ZTZjZTNmZmQ2N2Q1NzJhZWE0NDBhNjFmNDFmNjdhMGZjMWM0ZA==", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2007-11-20T01:37:43Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2007-11-20T01:37:43Z"}, "message": "re PR fortran/33317 (CSHIFT/EOSHIFT: Rejects optional dummy for DIM=)\n\n2007-11-19  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n\n\tPR fortran/33317\n\t* trans-expr.c (gfc_conv_missing_dummy): Revert.\n\t* iresolve.c (gfc_resolve_cshift): Revert.\n\t(gfc_resolve_eoshift): Likewise.\n\t* check.c (gfc_check_cshift): Revert.\n\t(gfc_check_eoshift): Likewise.\n\nFrom-SVN: r130304", "tree": {"sha": "8a68fc2c9d48c052a942710d7908b14ec1dd65c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8a68fc2c9d48c052a942710d7908b14ec1dd65c4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e76e6ce3ffd67d572aea440a61f41f67a0fc1c4d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e76e6ce3ffd67d572aea440a61f41f67a0fc1c4d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e76e6ce3ffd67d572aea440a61f41f67a0fc1c4d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e76e6ce3ffd67d572aea440a61f41f67a0fc1c4d/comments", "author": null, "committer": null, "parents": [{"sha": "9fc1c58ff05f4209eb29e14997ab6f6d21dabf33", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9fc1c58ff05f4209eb29e14997ab6f6d21dabf33", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9fc1c58ff05f4209eb29e14997ab6f6d21dabf33"}], "stats": {"total": 47, "additions": 29, "deletions": 18}, "files": [{"sha": "e6e5990fd3818a64d3a934966baec5ae60e09f9d", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e76e6ce3ffd67d572aea440a61f41f67a0fc1c4d/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e76e6ce3ffd67d572aea440a61f41f67a0fc1c4d/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=e76e6ce3ffd67d572aea440a61f41f67a0fc1c4d", "patch": "@@ -1,3 +1,12 @@\n+2007-11-19  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR fortran/33317\n+\t* trans-expr.c (gfc_conv_missing_dummy): Revert.\n+\t* iresolve.c (gfc_resolve_cshift): Revert.\n+\t(gfc_resolve_eoshift): Likewise.\n+\t* check.c (gfc_check_cshift): Revert.\n+\t(gfc_check_eoshift): Likewise.\n+\n 2007-11-19  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/34079"}, {"sha": "5b12147d6a0dde08b9700cade22c4c319e2fd420", "filename": "gcc/fortran/check.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e76e6ce3ffd67d572aea440a61f41f67a0fc1c4d/gcc%2Ffortran%2Fcheck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e76e6ce3ffd67d572aea440a61f41f67a0fc1c4d/gcc%2Ffortran%2Fcheck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fcheck.c?ref=e76e6ce3ffd67d572aea440a61f41f67a0fc1c4d", "patch": "@@ -863,7 +863,8 @@ gfc_check_cshift (gfc_expr *array, gfc_expr *shift, gfc_expr *dim)\n       /* TODO: more requirements on shift parameter.  */\n     }\n \n-  if (dim_check (dim, 2, true) == FAILURE)\n+  /* FIXME (PR33317): Allow optional DIM=.  */\n+  if (dim_check (dim, 2, false) == FAILURE)\n     return FAILURE;\n \n   return SUCCESS;\n@@ -1032,7 +1033,8 @@ gfc_check_eoshift (gfc_expr *array, gfc_expr *shift, gfc_expr *boundary,\n       /* TODO: more restrictions on boundary.  */\n     }\n \n-  if (dim_check (dim, 4, true) == FAILURE)\n+  /* FIXME (PR33317): Allow optional DIM=.  */\n+  if (dim_check (dim, 4, false) == FAILURE)\n     return FAILURE;\n \n   return SUCCESS;"}, {"sha": "e685a0a263d8054da65d9783551d40a4c6ac2012", "filename": "gcc/fortran/iresolve.c", "status": "modified", "additions": 14, "deletions": 6, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e76e6ce3ffd67d572aea440a61f41f67a0fc1c4d/gcc%2Ffortran%2Firesolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e76e6ce3ffd67d572aea440a61f41f67a0fc1c4d/gcc%2Ffortran%2Firesolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Firesolve.c?ref=e76e6ce3ffd67d572aea440a61f41f67a0fc1c4d", "patch": "@@ -583,9 +583,13 @@ gfc_resolve_cshift (gfc_expr *f, gfc_expr *array, gfc_expr *shift,\n       gfc_convert_type_warn (shift, &ts, 2, 0);\n     }\n \n-  /* Mark this for later setting the type in gfc_conv_missing_dummy.  */\n-  if (dim != NULL && dim->symtree != NULL)\n-    dim->symtree->n.sym->attr.untyped = 1;\n+  if (dim != NULL)\n+    {\n+      gfc_resolve_dim_arg (dim);\n+      /* Convert dim to shift's kind, so we don't need so many variations.  */\n+      if (dim->ts.kind != shift->ts.kind)\n+\tgfc_convert_type_warn (dim, &shift->ts, 2, 0);\n+    }\n \n   f->value.function.name\n     = gfc_get_string (PREFIX (\"cshift%d_%d%s\"), n, shift->ts.kind,\n@@ -704,9 +708,13 @@ gfc_resolve_eoshift (gfc_expr *f, gfc_expr *array, gfc_expr *shift,\n       gfc_convert_type_warn (shift, &ts, 2, 0);\n     }\n \n-  /* Mark this for later setting the type in gfc_conv_missing_dummy.  */\n-  if (dim != NULL && dim->symtree != NULL)\n-    dim->symtree->n.sym->attr.untyped = 1;\n+  if (dim != NULL)\n+    {\n+      gfc_resolve_dim_arg (dim);\n+      /* Convert dim to shift's kind, so we don't need so many variations.  */\n+      if (dim->ts.kind != shift->ts.kind)\n+\tgfc_convert_type_warn (dim, &shift->ts, 2, 0);\n+    }\n \n   f->value.function.name\n     = gfc_get_string (PREFIX (\"eoshift%d_%d%s\"), n, shift->ts.kind,"}, {"sha": "c15de4b92d55913f8d58fb4e6ce3e9b48561d23d", "filename": "gcc/fortran/trans-expr.c", "status": "modified", "additions": 2, "deletions": 10, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e76e6ce3ffd67d572aea440a61f41f67a0fc1c4d/gcc%2Ffortran%2Ftrans-expr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e76e6ce3ffd67d572aea440a61f41f67a0fc1c4d/gcc%2Ffortran%2Ftrans-expr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-expr.c?ref=e76e6ce3ffd67d572aea440a61f41f67a0fc1c4d", "patch": "@@ -153,16 +153,8 @@ gfc_conv_missing_dummy (gfc_se * se, gfc_expr * arg, gfc_typespec ts)\n \n   present = gfc_conv_expr_present (arg->symtree->n.sym);\n \n-  /* Make sure the type is at least default integer kind to match certain\n-     runtime library functions. (ie cshift and eoshift).  */\n-  if (ts.type == BT_INTEGER && arg->symtree->n.sym->attr.untyped)\n-    {\n-      tmp = gfc_get_int_type (gfc_default_integer_kind);\n-      tmp = fold_convert (tmp, se->expr);\n-    }\n-  else\n-    tmp = build3 (COND_EXPR, TREE_TYPE (se->expr), present, se->expr,\n-\t\t  fold_convert (TREE_TYPE (se->expr), integer_zero_node));\n+  tmp = build3 (COND_EXPR, TREE_TYPE (se->expr), present, se->expr,\n+\t\tfold_convert (TREE_TYPE (se->expr), integer_zero_node));\n \n   tmp = gfc_evaluate_now (tmp, &se->pre);\n   se->expr = tmp;"}]}