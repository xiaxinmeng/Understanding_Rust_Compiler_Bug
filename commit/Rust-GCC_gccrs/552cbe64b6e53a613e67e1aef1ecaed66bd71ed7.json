{"sha": "552cbe64b6e53a613e67e1aef1ecaed66bd71ed7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTUyY2JlNjRiNmU1M2E2MTNlNjdlMWFlZjFlY2FlZDY2YmQ3MWVkNw==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2010-08-04T09:15:51Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2010-08-04T09:15:51Z"}, "message": "Makefile.in (double-int.o): Add $(TOPLEV_H) dependency.\n\n2010-08-04  Richard Guenther  <rguenther@suse.de>\n\n\t* Makefile.in (double-int.o): Add $(TOPLEV_H) dependency.\n\t* double-int.h (double_int_ctz): Declare.\n\t* double-int.c (double_int_ctz): New function.\n\nFrom-SVN: r162859", "tree": {"sha": "048c888ac173b7ff5e353331c625f86b580387ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/048c888ac173b7ff5e353331c625f86b580387ee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/552cbe64b6e53a613e67e1aef1ecaed66bd71ed7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/552cbe64b6e53a613e67e1aef1ecaed66bd71ed7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/552cbe64b6e53a613e67e1aef1ecaed66bd71ed7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/552cbe64b6e53a613e67e1aef1ecaed66bd71ed7/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "31af83671c566af8a0c434d3bb1aabb58d7d7ac3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31af83671c566af8a0c434d3bb1aabb58d7d7ac3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/31af83671c566af8a0c434d3bb1aabb58d7d7ac3"}], "stats": {"total": 32, "additions": 31, "deletions": 1}, "files": [{"sha": "e89469f7fb4d64ce50aa77aec78e501afb4416e3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/552cbe64b6e53a613e67e1aef1ecaed66bd71ed7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/552cbe64b6e53a613e67e1aef1ecaed66bd71ed7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=552cbe64b6e53a613e67e1aef1ecaed66bd71ed7", "patch": "@@ -1,3 +1,9 @@\n+2010-08-04  Richard Guenther  <rguenther@suse.de>\n+\n+\t* Makefile.in (double-int.o): Add $(TOPLEV_H) dependency.\n+\t* double-int.h (double_int_ctz): Declare.\n+\t* double-int.c (double_int_ctz): New function.\n+\n 2010-08-04  Hariharan Sandanagobalane <hariharan@picochip.com>\n \n \t* config/picochip/picochip.c (TARGET_OVERRIDE_OPTIONS_AFTER_CHANGE):"}, {"sha": "030b9c06dcc3abad3213d5a047945cf7f14e2cce", "filename": "gcc/Makefile.in", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/552cbe64b6e53a613e67e1aef1ecaed66bd71ed7/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/552cbe64b6e53a613e67e1aef1ecaed66bd71ed7/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=552cbe64b6e53a613e67e1aef1ecaed66bd71ed7", "patch": "@@ -2279,7 +2279,8 @@ stringpool.o: stringpool.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n convert.o: convert.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n    $(FLAGS_H) convert.h $(TOPLEV_H) $(DIAGNOSTIC_CORE_H) langhooks.h\n \n-double-int.o: double-int.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H)\n+double-int.o: double-int.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n+\t$(TOPLEV_H) $(TREE_H)\n \n # lto-compress.o needs $(ZLIBINC) added to the include flags.\n lto-compress.o: lto-compress.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\"}, {"sha": "29e720b2919ad8e85be7980d5a94627d5c85e0cd", "filename": "gcc/double-int.c", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/552cbe64b6e53a613e67e1aef1ecaed66bd71ed7/gcc%2Fdouble-int.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/552cbe64b6e53a613e67e1aef1ecaed66bd71ed7/gcc%2Fdouble-int.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdouble-int.c?ref=552cbe64b6e53a613e67e1aef1ecaed66bd71ed7", "patch": "@@ -22,6 +22,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n+#include \"toplev.h\"\n \n /* We know that A1 + B1 = SUM1, using 2's complement arithmetic and ignoring\n    overflow.  Suppose A, B and SUM have the same respective signs as A1, B1,\n@@ -850,6 +851,26 @@ double_int_setbit (double_int a, unsigned bitpos)\n   return a;\n }\n \n+/* Count trailing zeros in A.  */\n+int\n+double_int_ctz (double_int a)\n+{\n+  unsigned HOST_WIDE_INT w = a.low ? a.low : (unsigned HOST_WIDE_INT) a.high;\n+  unsigned bits = a.low ? 0 : HOST_BITS_PER_WIDE_INT;\n+  if (!w)\n+    return HOST_BITS_PER_DOUBLE_INT;\n+#if (GCC_VERSION >= 3004)\n+  bits += CTZ_HWI (w);\n+#else\n+  while (!(w & 1))\n+    {\n+      w >>= 1;\n+      bits += 1;\n+    }\n+#endif\n+  return bits;\n+}\n+\n /* Shift A left by COUNT places keeping only PREC bits of result.  Shift\n    right if COUNT is negative.  ARITH true specifies arithmetic shifting;\n    otherwise use logical shift.  */"}, {"sha": "c2f74e95e28980cd92c760aac1107ffb9d43b204", "filename": "gcc/double-int.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/552cbe64b6e53a613e67e1aef1ecaed66bd71ed7/gcc%2Fdouble-int.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/552cbe64b6e53a613e67e1aef1ecaed66bd71ed7/gcc%2Fdouble-int.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdouble-int.h?ref=552cbe64b6e53a613e67e1aef1ecaed66bd71ed7", "patch": "@@ -148,7 +148,9 @@ double_int double_int_umod (double_int, double_int, unsigned);\n double_int double_int_divmod (double_int, double_int, bool, unsigned, double_int *);\n double_int double_int_sdivmod (double_int, double_int, unsigned, double_int *);\n double_int double_int_udivmod (double_int, double_int, unsigned, double_int *);\n+\n double_int double_int_setbit (double_int, unsigned);\n+int double_int_ctz (double_int);\n \n /* Logical operations.  */\n "}]}