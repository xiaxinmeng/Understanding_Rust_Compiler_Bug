{"sha": "f838e3ccf8d2849980e9d0f70aa60ecd2eb5772c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjgzOGUzY2NmOGQyODQ5OTgwZTlkMGY3MGFhNjBlY2QyZWI1NzcyYw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2021-05-28T03:54:52Z"}, "committer": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2021-05-28T12:56:42Z"}, "message": "c++: 'this' adjustment for devirtualized call\n\nMy patch for 95719 made us do a better job of finding the actual virtual\nfunction we want to call, but didn't update the 'this' pointer adjustment to\nmatch.\n\n\tPR c++/100797\n\tPR c++/95719\n\ngcc/cp/ChangeLog:\n\n\t* call.c (build_over_call): Adjust base_binfo in\n\tresolves_to_fixed_type_p case.\n\ngcc/testsuite/ChangeLog:\n\n\t* g++.dg/inherit/virtual15.C: New test.", "tree": {"sha": "e0f056341410f152dc66aa4d174ff5f2d5193aca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e0f056341410f152dc66aa4d174ff5f2d5193aca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f838e3ccf8d2849980e9d0f70aa60ecd2eb5772c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f838e3ccf8d2849980e9d0f70aa60ecd2eb5772c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f838e3ccf8d2849980e9d0f70aa60ecd2eb5772c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f838e3ccf8d2849980e9d0f70aa60ecd2eb5772c/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "359c0a86e2974a9f3036bc05b6e6c661f2c463cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/359c0a86e2974a9f3036bc05b6e6c661f2c463cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/359c0a86e2974a9f3036bc05b6e6c661f2c463cf"}], "stats": {"total": 59, "additions": 55, "deletions": 4}, "files": [{"sha": "bf524b50bc49f29b13f984e424a23c7275ecb024", "filename": "gcc/cp/call.c", "status": "modified", "additions": 18, "deletions": 4, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f838e3ccf8d2849980e9d0f70aa60ecd2eb5772c/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f838e3ccf8d2849980e9d0f70aa60ecd2eb5772c/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=f838e3ccf8d2849980e9d0f70aa60ecd2eb5772c", "patch": "@@ -9152,18 +9152,32 @@ build_over_call (struct z_candidate *cand, int flags, tsubst_flags_t complain)\n \t  if (base_binfo == error_mark_node)\n \t    return error_mark_node;\n \t}\n-      tree converted_arg = build_base_path (PLUS_EXPR, arg,\n-\t\t\t\t\t    base_binfo, 1, complain);\n \n       /* If we know the dynamic type of the object, look up the final overrider\n \t in the BINFO.  */\n       if (DECL_VINDEX (fn) && (flags & LOOKUP_NONVIRTUAL) == 0\n \t  && resolves_to_fixed_type_p (arg))\n \t{\n-\t  fn = lookup_vfn_in_binfo (DECL_VINDEX (fn), base_binfo);\n-\t  flags |= LOOKUP_NONVIRTUAL;\n+\t  tree ov = lookup_vfn_in_binfo (DECL_VINDEX (fn), base_binfo);\n+\n+\t  /* And unwind base_binfo to match.  If we don't find the type we're\n+\t     looking for in BINFO_INHERITANCE_CHAIN, we're looking at diamond\n+\t     inheritance; for now do a normal virtual call in that case.  */\n+\t  tree octx = DECL_CONTEXT (ov);\n+\t  tree obinfo = base_binfo;\n+\t  while (obinfo && !SAME_BINFO_TYPE_P (BINFO_TYPE (obinfo), octx))\n+\t    obinfo = BINFO_INHERITANCE_CHAIN (obinfo);\n+\t  if (obinfo)\n+\t    {\n+\t      fn = ov;\n+\t      base_binfo = obinfo;\n+\t      flags |= LOOKUP_NONVIRTUAL;\n+\t    }\n \t}\n \n+      tree converted_arg = build_base_path (PLUS_EXPR, arg,\n+\t\t\t\t\t    base_binfo, 1, complain);\n+\n       argarray[j++] = converted_arg;\n       parm = TREE_CHAIN (parm);\n       if (first_arg != NULL_TREE)"}, {"sha": "ebd8e3ad29bff29c0cb1694f120ca2be532dd8b7", "filename": "gcc/testsuite/g++.dg/inherit/virtual15.C", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f838e3ccf8d2849980e9d0f70aa60ecd2eb5772c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finherit%2Fvirtual15.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f838e3ccf8d2849980e9d0f70aa60ecd2eb5772c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finherit%2Fvirtual15.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finherit%2Fvirtual15.C?ref=f838e3ccf8d2849980e9d0f70aa60ecd2eb5772c", "patch": "@@ -0,0 +1,18 @@\n+// PR c++/100797\n+// { dg-do run }\n+\n+bool ok = false;\n+struct S1 { virtual ~S1() {} };\n+struct S2 { virtual void f1() = 0; };\n+struct S3: S1, S2 {\n+    void f1() { f2(); }\n+    virtual void f2() = 0;\n+};\n+struct S4: S3 {\n+  void f2() { ok = true; }\n+  using S2::f1;\n+};\n+int main() {\n+  S4().f1();\n+  if (!ok) __builtin_abort ();\n+}"}, {"sha": "6139385192def081104bb5856a58dd3bf92f4c5e", "filename": "gcc/testsuite/g++.dg/inherit/virtual15a.C", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f838e3ccf8d2849980e9d0f70aa60ecd2eb5772c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finherit%2Fvirtual15a.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f838e3ccf8d2849980e9d0f70aa60ecd2eb5772c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finherit%2Fvirtual15a.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finherit%2Fvirtual15a.C?ref=f838e3ccf8d2849980e9d0f70aa60ecd2eb5772c", "patch": "@@ -0,0 +1,19 @@\n+// PR c++/100797 plus diamond inheritance\n+// { dg-do run }\n+\n+bool ok = false;\n+struct S1 { virtual ~S1() {} };\n+struct S2 { virtual void f1() = 0; };\n+struct S3: S1, virtual S2 {\n+    void f1() { f2(); }\n+    virtual void f2() = 0;\n+};\n+struct SX: virtual S2 { };\n+struct S4: SX, S3 {\n+  void f2() { ok = true; }\n+  using S2::f1;\n+};\n+int main() {\n+  S4().f1();\n+  if (!ok) __builtin_abort ();\n+}"}]}