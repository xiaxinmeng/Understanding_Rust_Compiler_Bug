{"sha": "706ae11c9b55a3ec9963e6353b9823d0115ddfb6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzA2YWUxMWM5YjU1YTNlYzk5NjNlNjM1M2I5ODIzZDAxMTVkZGZiNg==", "commit": {"author": {"name": "Nathanael Nerode", "email": "neroden@gcc.gnu.org", "date": "2003-03-13T03:01:26Z"}, "committer": {"name": "Nathanael Nerode", "email": "neroden@gcc.gnu.org", "date": "2003-03-13T03:01:26Z"}, "message": "fixinc.interix: Remove dead code (most of it).\n\n\t* fixinc/fixinc.interix: Remove dead code (most of it).\n\t* fixinc/fixinc.dgux: Remove.\n\nFrom-SVN: r64292", "tree": {"sha": "6c6919c0b556fe41044933bbbe1b414424264759", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6c6919c0b556fe41044933bbbe1b414424264759"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/706ae11c9b55a3ec9963e6353b9823d0115ddfb6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/706ae11c9b55a3ec9963e6353b9823d0115ddfb6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/706ae11c9b55a3ec9963e6353b9823d0115ddfb6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/706ae11c9b55a3ec9963e6353b9823d0115ddfb6/comments", "author": null, "committer": null, "parents": [{"sha": "e531258e686f55b30e3d4a89f7f53b60764f694c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e531258e686f55b30e3d4a89f7f53b60764f694c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e531258e686f55b30e3d4a89f7f53b60764f694c"}], "stats": {"total": 389, "additions": 3, "deletions": 386}, "files": [{"sha": "0d43bccda300d9d497b9361cbe5211cc4c28babe", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/706ae11c9b55a3ec9963e6353b9823d0115ddfb6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/706ae11c9b55a3ec9963e6353b9823d0115ddfb6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=706ae11c9b55a3ec9963e6353b9823d0115ddfb6", "patch": "@@ -1,5 +1,8 @@\n 2003-03-12  Nathanael Nerode  <neroden@gcc.gnu.org>\n \n+\t* fixinc/fixinc.interix: Remove dead code (most of it).\n+\t* fixinc/fixinc.dgux: Remove.\n+\n \t* ginclude/float.h, ginclude/iso646.h, ginclude/stdarg.h,\n \tginclude/stdbool.h, ginclude/stddef.h: GCC, not GNU CC.\n "}, {"sha": "39a5b63f00eb3d4676e156605bd3d2dff2db5171", "filename": "gcc/fixinc/fixinc.dgux", "status": "removed", "additions": 0, "deletions": 224, "changes": 224, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e531258e686f55b30e3d4a89f7f53b60764f694c/gcc%2Ffixinc%2Ffixinc.dgux", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e531258e686f55b30e3d4a89f7f53b60764f694c/gcc%2Ffixinc%2Ffixinc.dgux", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ffixinc.dgux?ref=e531258e686f55b30e3d4a89f7f53b60764f694c", "patch": "@@ -1,224 +0,0 @@\n-#!/bin/sh\n-#\n-# modified for dgux by hassey@dg-rtp.dg.com based on\n-#\n-#   fixinc.svr4  written by Ron Guilmette (rfg@ncd.com).\n-#\n-# This file is part of GNU CC.\n-# \n-# GNU CC is free software; you can redistribute it and/or modify\n-# it under the terms of the GNU General Public License as published by\n-# the Free Software Foundation; either version 2, or (at your option)\n-# any later version.\n-# \n-# GNU CC is distributed in the hope that it will be useful,\n-# but WITHOUT ANY WARRANTY; without even the implied warranty of\n-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-# GNU General Public License for more details.\n-# \n-# You should have received a copy of the GNU General Public License\n-# along with GNU CC; see the file COPYING.  If not, write to\n-# the Free Software Foundation, 59 Temple Place - Suite 330,\n-# Boston, MA 02111-1307, USA.\n-#\n-#\n-#\tSee README-fixinc for more information.\n-\n-# Fail if no arg to specify a directory for the output.\n-if [ x$1 = x ]\n-then echo fixincludes: no output directory specified\n-exit 1\n-fi\n-\n-# Directory in which to store the results.\n-LIB=${1?\"fixincludes: output directory not specified\"}\n-\n-# Make sure it exists.\n-if [ ! -d $LIB ]; then\n-  mkdir $LIB || exit 1\n-fi\n-\n-ORIG_DIR=`${PWDCMD-pwd}`\n-\n-# Make LIB absolute if it is relative.\n-# Don't do this if not necessary, since may screw up automounters.\n-case $LIB in\n-/*)\n-\t;;\n-*)\n-\tcd $LIB; LIB=`${PWDCMD-pwd}`\n-\t;;\n-esac\n-\n-echo 'Building fixincludes in ' ${LIB}\n-\n-# Determine whether this filesystem has symbolic links.\n-if ln -s X $LIB/ShouldNotExist 2>/dev/null; then\n-  rm -f $LIB/ShouldNotExist\n-  LINKS=true\n-else\n-  LINKS=false\n-fi\n-\n-echo 'Making directories:'\n-# Directory containing the original header files.\n-shift\n-if [ $# -eq 0 ] ; then\n-  set /usr/include\n-fi\n-\n-INLIST=\"$@\"\n-\n-for INPUT in ${INLIST} ; do\n-cd ${ORIG_DIR}\n-cd ${INPUT}\n-\n-if $LINKS; then\n-  files=`ls -LR | sed -n s/:$//p`\n-else\n-  files=`find . -type d -print | sed '/^.$/d'`\n-fi\n-for file in $files; do\n-  rm -rf $LIB/$file\n-  if [ ! -d $LIB/$file ]\n-  then mkdir $LIB/$file\n-  fi\n-done\n-\n-# treetops gets an alternating list\n-# of old directories to copy\n-# and the new directories to copy to.\n-treetops=\"${INPUT} ${LIB}\"\n-\n-if $LINKS; then\n-  echo 'Making internal symbolic directory links'\n-  for file in $files; do\n-    dest=`ls -ld $file | sed -n 's/.*-> //p'`\n-    if [ \"$dest\" ]; then    \n-      cwd=`${PWDCMD-pwd}`\n-      # In case $dest is relative, get to $file's dir first.\n-      cd ${INPUT}\n-      cd `echo ./$file | sed -n 's&[^/]*$&&p'`\n-      # Check that the target directory exists.\n-      # Redirections changed to avoid bug in sh on Ultrix.\n-      (cd $dest) > /dev/null 2>&1\n-      if [ $? = 0 ]; then\n-\tcd $dest\n-\t# X gets the dir that the link actually leads to.\n-\tx=`${PWDCMD-pwd}`\n-\t# If link leads back into ${INPUT},\n-\t# make a similar link here.\n-\tif expr $x : \"${INPUT}/.*\" > /dev/null; then\n-\t  # Y gets the actual target dir name, relative to ${INPUT}.\n-\t  y=`echo $x | sed -n \"s&${INPUT}/&&p\"`\n-\t  # DOTS is the relative path from ${LIB}/$file's dir back to ${LIB}.\n-\t  dots=`echo \"$file\" |\n-\t    sed -e 's@^./@@' -e 's@/./@/@g' -e 's@[^/][^/]*@..@g' -e 's@..$@@'`\n-\t  echo $file '->' $dots$y ': Making link'\n-\t  rm -fr ${LIB}/$file > /dev/null 2>&1\n-\t  ln -s $dots$y ${LIB}/$file > /dev/null 2>&1\n-\telse\n-\t  # If the link is to outside ${INPUT},\n-\t  # treat this directory as if it actually contained the files.\n-# This line used to have $dest instead of $x.\n-# $dest seemed to be wrong for links found in subdirectories\n-# of ${INPUT}.  Does this change break anything?\n-\t  treetops=\"$treetops $x ${LIB}/$file\"\n-\tfi\n-      fi\n-      cd $cwd\n-    fi\n-  done\n-fi\n-\n-# Completely replace <_int_varargs.h> with a file that defines\n-# va_list and gnuc_va_list\n-\n-file=_int_varargs.h\n-if [ -r ${INPUT}/$file ]; then\n-  echo Replacing $file\n-  cat > ${LIB}/$file << EOF\n-/* This file was generated by fixinc.dgux.  */\n-#ifndef __INT_VARARGS_H\n-#define __INT_VARARGS_H\n-\n-#ifndef ___int_features_h\n-#include <sys/_int_features.h>\n-#endif\n-\n-#if !(defined(_VA_LIST) || defined(_VA_LIST_))\n-#define _VA_LIST\n-#define _VA_LIST_\n-\n-#ifdef __LINT__\n-\n-#ifdef __STDC__\n-typedef void * va_list;\n-#else\n-typedef char * va_list;\n-#endif\n-\n-#else\n-#if _M88K_ANY\n-\n-#if defined(__DCC__)\n-\n-typedef struct {\n-       int     next_arg;\n-       int     *mem_ptr;\n-       int     *reg_ptr;\n-} va_list;\n-\n-#else  /* ! defined(__DCC__) */\n-\n-typedef struct {\n-       int  __va_arg;          /* argument number */\n-       int *__va_stk;          /* start of args passed on stack */\n-       int *__va_reg;          /* start of args passed in regs */\n-} va_list;\n-\n-#endif  /* ! defined(__DCC__) */\n-\n-#elif _IX86_ANY\n-\n-#if defined(__GNUC__) || defined(__STDC__)\n-typedef void * va_list;\n-#else\n-typedef char * va_list;\n-#endif\n-\n-#endif  /*  _IX86_ANY */\n-\n-#endif /* __LINT__ */\n-#endif /*  !(defined(_VA_LIST) || defined(_VA_LIST_)) */\n-#endif /*  #ifndef __INT_VARARGS_H  */\n-\n-EOF\n-  chmod a+r ${LIB}/$file\n-fi\n-\n-echo 'Removing unneeded directories:'\n-cd $LIB\n-files=`find . -type d -print | sort -r`\n-for file in $files; do\n-  rmdir $LIB/$file > /dev/null 2>&1\n-done\n-\n-if $LINKS; then\n-  echo 'Making internal symbolic non-directory links'\n-  cd ${INPUT}\n-  files=`find . -type l -print`\n-  for file in $files; do\n-    dest=`ls -ld $file | sed -n 's/.*-> //p'`\n-    if expr \"$dest\" : '[^/].*' > /dev/null; then    \n-      target=${LIB}/`echo file | sed \"s|[^/]*\\$|$dest|\"`\n-      if [ -f $target ]; then\n-        ln -s $dest ${LIB}/$file >/dev/null 2>&1\n-      fi\n-    fi\n-  done\n-fi\n-\n-done\n-\n-exit 0"}, {"sha": "1e5413eeb6ad84e200a2aa20aa4d036b9e816600", "filename": "gcc/fixinc/fixinc.interix", "status": "modified", "additions": 0, "deletions": 162, "changes": 162, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/706ae11c9b55a3ec9963e6353b9823d0115ddfb6/gcc%2Ffixinc%2Ffixinc.interix", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/706ae11c9b55a3ec9963e6353b9823d0115ddfb6/gcc%2Ffixinc%2Ffixinc.interix", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ffixinc.interix?ref=706ae11c9b55a3ec9963e6353b9823d0115ddfb6", "patch": "@@ -1,165 +1,3 @@\n #!/bin/sh\n rm -f include/stddef.h\n exit\n-#\n-#   fixinc.interix  --  Install modified versions of Interix system include\n-#   files.\n-#\n-#   Based on fixinc.sco script by Ian Lance Taylor (ian@airs.com)).\n-#   With modifications by Douglas Rupp (drupp@cs.washington.edu)\n-#\n-# Copyright (C) 1999 Free Software Foundation, Inc.\n-#\n-# This file is part of GNU CC.\n-# \n-# GNU CC is free software; you can redistribute it and/or modify\n-# it under the terms of the GNU General Public License as published by\n-# the Free Software Foundation; either version 2, or (at your option)\n-# any later version.\n-# \n-# GNU CC is distributed in the hope that it will be useful,\n-# but WITHOUT ANY WARRANTY; without even the implied warranty of\n-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-# GNU General Public License for more details.\n-# \n-# You should have received a copy of the GNU General Public License\n-# along with GNU CC; see the file COPYING.  If not, write to\n-# the Free Software Foundation, 59 Temple Place - Suite 330,\n-# Boston, MA 02111-1307, USA.\n-#\n-#  ??????  fixup comment\n-#\tThis script munges the native include files provided with Windows NT\n-#\t3.5 SDK systems so as to provide a reasonable namespace when\n-#\tcompiling with gcc.  The header files by default do not\n-#\tprovide many essential definitions and declarations if\n-#\t__STDC__ is 1.  This script modifies the header files to check\n-#\tfor __STRICT_ANSI__ being defined instead.  Once munged, the\n-#\tresulting new system include files are placed in a directory\n-#\tthat GNU C will search *before* searching the Include\n-#\tdirectory.\n-#\n-#\tSee README-fixinc for more information.\n-\n-# Fail if no arg to specify a directory for the output.\n-if [ x$1 = x ]\n-then echo fixincludes: no output directory specified\n-exit 1\n-fi\n-\n-# Directory in which to store the results.\n-LIB=${1}\n-\n-# Make sure it exists.\n-if [ ! -d $LIB ]; then\n-  mkdir $LIB || exit 1\n-fi\n-\n-ORIG_DIR=`${PWDCMD-pwd}`\n-\n-# Make LIB absolute if it is relative.\n-# Don't do this if not necessary, since may screw up automounters.\n-case $LIB in\n-/*)\n-\t;;\n-*)\n-\tcd $LIB; LIB=`${PWDCMD-pwd}`\n-\t;;\n-esac\n-\n-echo 'Building fixincludes in ' ${LIB}\n-\n-# Determine whether this filesystem has symbolic links.\n-if ln -s X $LIB/ShouldNotExist 2>/dev/null; then\n-  rm -f $LIB/ShouldNotExist\n-  LINKS=true\n-else\n-  LINKS=false\n-fi\n-\n-echo 'Making directories:'\n-# Directory containing the original header files.\n-shift\n-if [ $# -eq 0 ] ; then\n-  set /usr/include\n-fi\n-\n-INLIST=\"$@\"\n-\n-for INPUT in ${INLIST} ; do\n-cd ${ORIG_DIR}\n-cd ${INPUT}\n-\n-if $LINKS; then\n-  files=`ls -LR | sed -n s/:$//p`\n-else\n-  files=`find . -type d -print | sed '/^\\.$/d'`\n-fi\n-\n-if [ \"x$files\" = x ]; then\n-  echo No files found in $INPUT\\; skipped\n-  continue\n-fi\n-\n-for file in $files; do\n-  rm -rf $LIB/$file\n-  if [ ! -d $LIB/$file ]\n-  then mkdir $LIB/$file\n-  fi\n-done\n-\n-# treetops gets an alternating list\n-# of old directories to copy\n-# and the new directories to copy to.\n-treetops=\"${INPUT} ${LIB}\"\n-\n-set - $treetops\n-while [ $# != 0 ]; do\n-  # $1 is an old directory to copy, and $2 is the new directory to copy to.\n-  echo \"Finding header files in $1:\"\n-  cd ${INPUT}\n-  cd $1\n-  files=`find . -name '*.[hH]' -type f -print`\n-  echo \"Checking header files in $1; transforming into directory $2:\"\n-  for file in $files; do\n-    echo \"   \" $file\n-    if [ -r $file ]; then\n-      cp $file $2/$file >/dev/null 2>&1 || echo \"Can't copy $file\"\n-      chmod +w,a+r $2/$file\n-\n-# The following have been removed from the sed command below\n-# because it is more useful to leave these things in.\n-# The only reason to remove them was for -pedantic,\n-# which isn't much of a reason. -- rms.\n-# ??? above/below\n-#\t  /^[ \t]*#[ \t]*ident/d\n-#\t  s/!__STDC__/!defined (__STRICT_ANSI__)/g\n-\n-      sed -e '/#[ \t]*include.*[<\"][A-Za-z]:\\\\/ s,\\\\,/,g' \\\n-\t  -e '/#[ \t]*include.*[<\"][A-Za-z]:\\// s,\\([A-Za-z]\\):/,//\\1/,' \\\n-\t  -e '\\,#[ \t]*include.*[<\"]//[A-Za-z]/, y,abcdefghijklmnopqrstuvwxyz,ABCDEFGHIJKLMNOPQRSTUVWXYZ,' \\\n-\t  -e '\\,#[ \t]*INCLUDE.*[<\"]//[A-Za-z]/, s,INCLUDE,include,' \\\n-\t  $2/$file > $2/$file.sed\n-\n-      mv $2/$file.sed $2/$file\n-      if cmp $file $2/$file >/dev/null 2>&1; then\n-\t rm $2/$file\n-      else\n-\t echo Fixed $file\n-         flip -u $2/$file\n-      fi\n-    fi\n-  done\n-  shift; shift\n-done\n-\n-echo 'Removing unneeded directories:'\n-# (Rmdir leaf to root, and if the rmdir fails, who cares....)\n-cd $LIB\n-files=`find . -type d -print | sort -r`\n-for file in $files; do\n-  rmdir $LIB/$file > /dev/null 2>&1\n-done\n-\n-done # for include directory list\n-\n-exit 0"}]}