{"sha": "5fd3fd793a862a2d8a748b82860db1a43b9bacd6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWZkM2ZkNzkzYTg2MmEyZDhhNzQ4YjgyODYwZGIxYTQzYjliYWNkNg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-10-30T13:27:40Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-10-30T13:27:40Z"}, "message": "[multiple changes]\n\n2009-10-30  Robert Dewar  <dewar@adacore.com>\n\n\t* a-tideio.adb: Minor reformatting\n\t* a-wtdeio.adb, a-ztdeio.adb: Update comments, code clean up.\n\n\t* a-reatim.adb, a-tideau.adb, a-ngelfu.adb, a-ztdeau.adb, a-ngrear.adb,\n\ta-wtedit.adb, a-ststio.adb, a-ztedit.adb: Minor code reorganization\n\t(use conditional expressions).\n\n2009-10-30  Ed Schonberg  <schonberg@adacore.com>\n\n\t* gnat_ugn.texi: Additional info on gnatw.i and gnatw.I\n\n\t* sem_case.adb: Improved error message.\n\n2009-10-30  Emmanuel Briot  <briot@adacore.com>\n\n\t* a-direct.adb, gnatcmd.adb, gnatname.adb, makeutl.adb, opt.ads,\n\tosint.adb, prj-ext.adb, switch-m.adb (Follow_Links_For_Dirs): Now\n\tdefaults to False, and controlled by -eL.\n\t* a-direct.adb: Add comments.\n\t* osint.adb (File_Stamp): Avoid unneeded duplicate system call\n\nFrom-SVN: r153744", "tree": {"sha": "854f726823e2af6587eb683f740988813fd28f9a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/854f726823e2af6587eb683f740988813fd28f9a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5fd3fd793a862a2d8a748b82860db1a43b9bacd6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5fd3fd793a862a2d8a748b82860db1a43b9bacd6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5fd3fd793a862a2d8a748b82860db1a43b9bacd6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5fd3fd793a862a2d8a748b82860db1a43b9bacd6/comments", "author": null, "committer": null, "parents": [{"sha": "297f34d71988b2599ac2a68332c47eba0c7345dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/297f34d71988b2599ac2a68332c47eba0c7345dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/297f34d71988b2599ac2a68332c47eba0c7345dc"}], "stats": {"total": 215, "additions": 104, "deletions": 111}, "files": [{"sha": "e3943b6f954e465b9a08c7cf6f1f74d0089cbced", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fd3fd793a862a2d8a748b82860db1a43b9bacd6/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fd3fd793a862a2d8a748b82860db1a43b9bacd6/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=5fd3fd793a862a2d8a748b82860db1a43b9bacd6", "patch": "@@ -1,3 +1,26 @@\n+2009-10-30  Robert Dewar  <dewar@adacore.com>\n+\n+\t* a-tideio.adb: Minor reformatting\n+\t* a-wtdeio.adb, a-ztdeio.adb: Update comments, code clean up.\n+\n+\t* a-reatim.adb, a-tideau.adb, a-ngelfu.adb, a-ztdeau.adb, a-ngrear.adb,\n+\ta-wtedit.adb, a-ststio.adb, a-ztedit.adb: Minor code reorganization\n+\t(use conditional expressions).\n+\n+2009-10-30  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* gnat_ugn.texi: Additional info on gnatw.i and gnatw.I\n+\n+\t* sem_case.adb: Improved error message.\n+\n+2009-10-30  Emmanuel Briot  <briot@adacore.com>\n+\n+\t* a-direct.adb, gnatcmd.adb, gnatname.adb, makeutl.adb, opt.ads,\n+\tosint.adb, prj-ext.adb, switch-m.adb (Follow_Links_For_Dirs): Now\n+\tdefaults to False, and controlled by -eL.\n+\t* a-direct.adb: Add comments.\n+\t* osint.adb (File_Stamp): Avoid unneeded duplicate system call\n+\n 2009-10-30  Robert Dewar  <dewar@adacore.com>\n \n \t* sem_res.adb (Resolve_Type_Conversion): Avoid false positive when"}, {"sha": "ae7a28ebd55e6836928e5e463c12d7bccf0592bf", "filename": "gcc/ada/a-direct.adb", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fd3fd793a862a2d8a748b82860db1a43b9bacd6/gcc%2Fada%2Fa-direct.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fd3fd793a862a2d8a748b82860db1a43b9bacd6/gcc%2Fada%2Fa-direct.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-direct.adb?ref=5fd3fd793a862a2d8a748b82860db1a43b9bacd6", "patch": "@@ -210,6 +210,8 @@ package body Ada.Directories is\n \n       else\n          declare\n+            --  We need to resolve links because of A.16(47), since we must not\n+            --  return alternative names for files\n             Norm    : constant String := Normalize_Pathname (Name);\n             Last_DS : constant Natural :=\n                         Strings.Fixed.Index\n@@ -441,6 +443,8 @@ package body Ada.Directories is\n       Local_Get_Current_Dir (Buffer'Address, Path_Len'Address);\n \n       declare\n+         --  We need to resolve links because of A.16(47), since we must not\n+         --  return alternative names for files\n          Cur : constant String := Normalize_Pathname (Buffer (1 .. Path_Len));\n \n       begin\n@@ -781,6 +785,8 @@ package body Ada.Directories is\n          --  Use System.OS_Lib.Normalize_Pathname\n \n          declare\n+            --  We need to resolve links because of A.16(47), since we must not\n+            --  return alternative names for files\n             Value : constant String := Normalize_Pathname (Name);\n             subtype Result is String (1 .. Value'Length);\n          begin"}, {"sha": "55d14e7db5381be8ac19f631e74f1fa2a149ec2c", "filename": "gcc/ada/a-ngelfu.adb", "status": "modified", "additions": 5, "deletions": 14, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fd3fd793a862a2d8a748b82860db1a43b9bacd6/gcc%2Fada%2Fa-ngelfu.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fd3fd793a862a2d8a748b82860db1a43b9bacd6/gcc%2Fada%2Fa-ngelfu.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ngelfu.adb?ref=5fd3fd793a862a2d8a748b82860db1a43b9bacd6", "patch": "@@ -729,21 +729,12 @@ package body Ada.Numerics.Generic_Elementary_Functions is\n       Raw_Atan : Float_Type'Base;\n \n    begin\n-      if abs Y > abs X then\n-         Z := abs (X / Y);\n-      else\n-         Z := abs (Y / X);\n-      end if;\n-\n-      if Z < Sqrt_Epsilon then\n-         Raw_Atan := Z;\n+      Z := (if abs Y > abs X then abs (X / Y) else abs (Y / X));\n \n-      elsif Z = 1.0 then\n-         Raw_Atan := Pi / 4.0;\n-\n-      else\n-         Raw_Atan := Float_Type'Base (Aux.Atan (Double (Z)));\n-      end if;\n+      Raw_Atan :=\n+        (if Z < Sqrt_Epsilon then Z\n+         elsif Z = 1.0 then Pi / 4.0\n+         else Float_Type'Base (Aux.Atan (Double (Z))));\n \n       if abs Y > abs X then\n          Raw_Atan := Half_Pi - Raw_Atan;"}, {"sha": "5c8a0092477a66f82c87b08806d23c1ae1bce248", "filename": "gcc/ada/a-ngrear.adb", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fd3fd793a862a2d8a748b82860db1a43b9bacd6/gcc%2Fada%2Fa-ngrear.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fd3fd793a862a2d8a748b82860db1a43b9bacd6/gcc%2Fada%2Fa-ngrear.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ngrear.adb?ref=5fd3fd793a862a2d8a748b82860db1a43b9bacd6", "patch": "@@ -433,11 +433,7 @@ package body Ada.Numerics.Generic_Real_Arrays is\n       end if;\n \n       for J in 1 .. N loop\n-         if Piv (J) /= J then\n-            Det := -Det * LU (J, J);\n-         else\n-            Det := Det * LU (J, J);\n-         end if;\n+         Det := (if Piv (J) /= J then -Det * LU (J, J) else Det * LU (J, J));\n       end loop;\n \n       return Det;"}, {"sha": "c3cbec69ddc45d706ccdd320e4a5f03f34fb6a53", "filename": "gcc/ada/a-reatim.adb", "status": "modified", "additions": 4, "deletions": 11, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fd3fd793a862a2d8a748b82860db1a43b9bacd6/gcc%2Fada%2Fa-reatim.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fd3fd793a862a2d8a748b82860db1a43b9bacd6/gcc%2Fada%2Fa-reatim.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-reatim.adb?ref=5fd3fd793a862a2d8a748b82860db1a43b9bacd6", "patch": "@@ -7,7 +7,7 @@\n --                                 B o d y                                  --\n --                                                                          --\n --             Copyright (C) 1991-1994, Florida State University            --\n---                     Copyright (C) 1995-2006, AdaCore                     --\n+--                     Copyright (C) 1995-2009, AdaCore                     --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -189,19 +189,12 @@ package body Ada.Real_Time is\n       --  Special-case for Time_First, whose absolute value is anomalous,\n       --  courtesy of two's complement.\n \n-      if T = Time_First then\n-         T_Val := abs (Time_Last);\n-      else\n-         T_Val := abs (T);\n-      end if;\n+      T_Val := (if T = Time_First then abs (Time_Last) else abs (T));\n \n       --  Extract the integer part of T, truncating towards zero\n \n-      if T_Val < 0.5 then\n-         SC := 0;\n-      else\n-         SC := Seconds_Count (Time_Span'(T_Val - 0.5));\n-      end if;\n+      SC :=\n+        (if T_Val < 0.5 then 0 else Seconds_Count (Time_Span'(T_Val - 0.5)));\n \n       if T < 0.0 then\n          SC := -SC;"}, {"sha": "79ee6cdfd5a0fd09c6dca29f182220e6ab5b102b", "filename": "gcc/ada/a-ststio.adb", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fd3fd793a862a2d8a748b82860db1a43b9bacd6/gcc%2Fada%2Fa-ststio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fd3fd793a862a2d8a748b82860db1a43b9bacd6/gcc%2Fada%2Fa-ststio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ststio.adb?ref=5fd3fd793a862a2d8a748b82860db1a43b9bacd6", "patch": "@@ -241,11 +241,7 @@ package body Ada.Streams.Stream_IO is\n       --  (and furthermore there are situations (such as the case of writing\n       --  a sequential Posix FIFO file) where the lseek would cause problems.\n \n-      if Mode = Out_File then\n-         File.Last_Op := Op_Write;\n-      else\n-         File.Last_Op := Op_Read;\n-      end if;\n+      File.Last_Op := (if Mode = Out_File then Op_Write else Op_Read);\n    end Open;\n \n    ----------"}, {"sha": "2790bed68d7833e0f11d12778fccebeb3d211ab5", "filename": "gcc/ada/a-tideau.adb", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fd3fd793a862a2d8a748b82860db1a43b9bacd6/gcc%2Fada%2Fa-tideau.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fd3fd793a862a2d8a748b82860db1a43b9bacd6/gcc%2Fada%2Fa-tideau.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-tideau.adb?ref=5fd3fd793a862a2d8a748b82860db1a43b9bacd6", "patch": "@@ -242,11 +242,8 @@ package body Ada.Text_IO.Decimal_Aux is\n       Ptr  : Natural := 0;\n \n    begin\n-      if Exp = 0 then\n-         Fore := To'Length - 1 - Aft;\n-      else\n-         Fore := To'Length - 2 - Aft - Exp;\n-      end if;\n+      Fore :=\n+        (if Exp = 0 then To'Length - 1 - Aft else To'Length - 2 - Aft - Exp);\n \n       if Fore < 1 then\n          raise Layout_Error;"}, {"sha": "5dceb128f90ea6d5bd6115885b2775f500fb61bd", "filename": "gcc/ada/a-tideio.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fd3fd793a862a2d8a748b82860db1a43b9bacd6/gcc%2Fada%2Fa-tideio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fd3fd793a862a2d8a748b82860db1a43b9bacd6/gcc%2Fada%2Fa-tideio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-tideio.adb?ref=5fd3fd793a862a2d8a748b82860db1a43b9bacd6", "patch": "@@ -51,7 +51,6 @@ package body Ada.Text_IO.Decimal_IO is\n    begin\n       if Num'Size > Integer'Size then\n          Item := Num'Fixed_Value (Aux.Get_LLD (File, Width, Scale));\n-\n       else\n          Item := Num'Fixed_Value (Aux.Get_Dec (File, Width, Scale));\n       end if;"}, {"sha": "598b72a941e5e2ad99c5cc9822f7d55d119baa17", "filename": "gcc/ada/a-wtdeio.adb", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fd3fd793a862a2d8a748b82860db1a43b9bacd6/gcc%2Fada%2Fa-wtdeio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fd3fd793a862a2d8a748b82860db1a43b9bacd6/gcc%2Fada%2Fa-wtdeio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-wtdeio.adb?ref=5fd3fd793a862a2d8a748b82860db1a43b9bacd6", "patch": "@@ -54,16 +54,10 @@ package body Ada.Wide_Text_IO.Decimal_IO is\n    is\n    begin\n       if Num'Size > Integer'Size then\n-         Item := Num (Aux.Get_LLD (TFT (File), Width, Scale));\n-         --  Item := Num'Fixed_Value (Aux.Get_LLD (TFT (File), Width, Scale));\n-         --  above is what we should write, but gets assert error ???\n-\n+         Item := Num'Fixed_Value (Aux.Get_LLD (TFT (File), Width, Scale));\n       else\n-         Item := Num (Aux.Get_Dec (TFT (File), Width, Scale));\n-         --  Item := Num'Fixed_Value (Aux.Get_Dec (TFT (File), Width, Scale));\n-         --  above is what we should write, but gets assert error ???\n+         Item := Num'Fixed_Value (Aux.Get_Dec (TFT (File), Width, Scale));\n       end if;\n-\n    exception\n       when Constraint_Error => raise Data_Error;\n    end Get;"}, {"sha": "cc41dc1cd866840d3d2604fe795318096fa1c606", "filename": "gcc/ada/a-wtedit.adb", "status": "modified", "additions": 14, "deletions": 20, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fd3fd793a862a2d8a748b82860db1a43b9bacd6/gcc%2Fada%2Fa-wtedit.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fd3fd793a862a2d8a748b82860db1a43b9bacd6/gcc%2Fada%2Fa-wtedit.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-wtedit.adb?ref=5fd3fd793a862a2d8a748b82860db1a43b9bacd6", "patch": "@@ -477,21 +477,17 @@ package body Ada.Wide_Text_IO.Editing is\n          raise Layout_Error;\n       end if;\n \n-      if Pic.Radix_Position = Invalid_Position then\n-         Position := Answer'Last;\n-      else\n-         Position := Pic.Radix_Position - 1;\n-      end if;\n+      Position :=\n+        (if Pic.Radix_Position = Invalid_Position then Answer'Last\n+         else Pic.Radix_Position - 1);\n \n       for J in reverse Attrs.Start_Of_Int .. Attrs.End_Of_Int loop\n-\n          while Answer (Position) /= '9'\n                  and then\n                Answer (Position) /= Pic.Floater\n          loop\n             if Answer (Position) = '_' then\n                Answer (Position) := Separator_Character;\n-\n             elsif Answer (Position) = 'b' then\n                Answer (Position) := ' ';\n             end if;\n@@ -790,25 +786,22 @@ package body Ada.Wide_Text_IO.Editing is\n          --  No trailing digits, but now J may need to stick in a currency\n          --  symbol or sign.\n \n-         if Pic.Start_Currency = Invalid_Position then\n-            Position := Answer'Last + 1;\n-         else\n-            Position := Pic.Start_Currency;\n-         end if;\n+         Position :=\n+           (if Pic.Start_Currency = Invalid_Position then Answer'Last + 1\n+            else Pic.Start_Currency);\n       end if;\n \n       for J in Position .. Answer'Last loop\n-\n          if Pic.Start_Currency /= Invalid_Position and then\n             Answer (Pic.Start_Currency) = '#' then\n             Currency_Pos := 1;\n          end if;\n \n-         --  Note: There are some weird cases J can imagine with 'b' or '#'\n-         --  in currency strings where the following code will cause\n-         --  glitches. The trick is to tell when the character in the\n-         --  answer should be checked, and when to look at the original\n-         --  string. Some other time. RIE 11/26/96 ???\n+         --  Note: There are some weird cases J can imagine with 'b' or '#' in\n+         --  currency strings where the following code will cause glitches. The\n+         --  trick is to tell when the character in the answer should be\n+         --  checked, and when to look at the original string. Some other time.\n+         --  RIE 11/26/96 ???\n \n          case Answer (J) is\n             when '*' =>\n@@ -942,8 +935,9 @@ package body Ada.Wide_Text_IO.Editing is\n \n                --  1) Expand $, replace '.' with Radix_Point\n \n-               return Answer (1 .. Currency_Pos - 1) & Currency_Symbol &\n-                  Answer (Currency_Pos + 1 .. Answer'Last);\n+               return\n+                 Answer (1 .. Currency_Pos - 1) & Currency_Symbol &\n+                 Answer (Currency_Pos + 1 .. Answer'Last);\n \n             else\n                --  2) No currency expansion, replace '.' with Radix_Point"}, {"sha": "38450fcb0119d4a7ee9665cc79690c2e477c27cf", "filename": "gcc/ada/a-ztdeau.adb", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fd3fd793a862a2d8a748b82860db1a43b9bacd6/gcc%2Fada%2Fa-ztdeau.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fd3fd793a862a2d8a748b82860db1a43b9bacd6/gcc%2Fada%2Fa-ztdeau.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ztdeau.adb?ref=5fd3fd793a862a2d8a748b82860db1a43b9bacd6", "patch": "@@ -244,11 +244,8 @@ package body Ada.Wide_Wide_Text_IO.Decimal_Aux is\n       Ptr  : Natural := 0;\n \n    begin\n-      if Exp = 0 then\n-         Fore := To'Length - 1 - Aft;\n-      else\n-         Fore := To'Length - 2 - Aft - Exp;\n-      end if;\n+      Fore :=\n+        (if Exp = 0 then To'Length - 1 - Aft else To'Length - 2 - Aft - Exp);\n \n       if Fore < 1 then\n          raise Layout_Error;"}, {"sha": "52f8820a7871b486d8c437dc07b764d016400266", "filename": "gcc/ada/a-ztdeio.adb", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fd3fd793a862a2d8a748b82860db1a43b9bacd6/gcc%2Fada%2Fa-ztdeio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fd3fd793a862a2d8a748b82860db1a43b9bacd6/gcc%2Fada%2Fa-ztdeio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ztdeio.adb?ref=5fd3fd793a862a2d8a748b82860db1a43b9bacd6", "patch": "@@ -54,16 +54,10 @@ package body Ada.Wide_Wide_Text_IO.Decimal_IO is\n    is\n    begin\n       if Num'Size > Integer'Size then\n-         Item := Num (Aux.Get_LLD (TFT (File), Width, Scale));\n-         --  Item := Num'Fixed_Value (Aux.Get_LLD (TFT (File), Width, Scale));\n-         --  above is what we should write, but gets assert error ???\n-\n+         Item := Num'Fixed_Value (Aux.Get_LLD (TFT (File), Width, Scale));\n       else\n-         Item := Num (Aux.Get_Dec (TFT (File), Width, Scale));\n-         --  Item := Num'Fixed_Value (Aux.Get_Dec (TFT (File), Width, Scale));\n-         --  above is what we should write, but gets assert error ???\n+         Item := Num'Fixed_Value (Aux.Get_Dec (TFT (File), Width, Scale));\n       end if;\n-\n    exception\n       when Constraint_Error => raise Data_Error;\n    end Get;"}, {"sha": "9b5036a4d08d468c6a632c4b9c75e1d52e8185ea", "filename": "gcc/ada/a-ztedit.adb", "status": "modified", "additions": 6, "deletions": 13, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fd3fd793a862a2d8a748b82860db1a43b9bacd6/gcc%2Fada%2Fa-ztedit.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fd3fd793a862a2d8a748b82860db1a43b9bacd6/gcc%2Fada%2Fa-ztedit.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ztedit.adb?ref=5fd3fd793a862a2d8a748b82860db1a43b9bacd6", "patch": "@@ -478,21 +478,17 @@ package body Ada.Wide_Wide_Text_IO.Editing is\n          raise Layout_Error;\n       end if;\n \n-      if Pic.Radix_Position = Invalid_Position then\n-         Position := Answer'Last;\n-      else\n-         Position := Pic.Radix_Position - 1;\n-      end if;\n+      Position :=\n+        (if Pic.Radix_Position = Invalid_Position then Answer'Last\n+         else Pic.Radix_Position - 1);\n \n       for J in reverse Attrs.Start_Of_Int .. Attrs.End_Of_Int loop\n-\n          while Answer (Position) /= '9'\n                  and then\n                Answer (Position) /= Pic.Floater\n          loop\n             if Answer (Position) = '_' then\n                Answer (Position) := Separator_Character;\n-\n             elsif Answer (Position) = 'b' then\n                Answer (Position) := ' ';\n             end if;\n@@ -791,15 +787,12 @@ package body Ada.Wide_Wide_Text_IO.Editing is\n          --  No trailing digits, but now J may need to stick in a currency\n          --  symbol or sign.\n \n-         if Pic.Start_Currency = Invalid_Position then\n-            Position := Answer'Last + 1;\n-         else\n-            Position := Pic.Start_Currency;\n-         end if;\n+         Position :=\n+           (if Pic.Start_Currency = Invalid_Position then Answer'Last + 1\n+            else Pic.Start_Currency);\n       end if;\n \n       for J in Position .. Answer'Last loop\n-\n          if Pic.Start_Currency /= Invalid_Position and then\n             Answer (Pic.Start_Currency) = '#' then\n             Currency_Pos := 1;"}, {"sha": "19304a75f4008e27085ca93ce3ee64bd14a4f993", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fd3fd793a862a2d8a748b82860db1a43b9bacd6/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fd3fd793a862a2d8a748b82860db1a43b9bacd6/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=5fd3fd793a862a2d8a748b82860db1a43b9bacd6", "patch": "@@ -5271,9 +5271,15 @@ implementation unit.\n @item -gnatw.i\n @emph{Activate warnings on overlapping actuals.}\n @cindex @option{-gnatw.i} (@command{gcc})\n-This switch enables a warning on statically detectable overlapping actuals\n-in a subprogram call, when one of the actuals is an in-out parameter, and\n-the types of the actuals are not by-copy types.\n+This switch enables a warning on statically detectable overlapping actuals in\n+a subprogram call, when one of the actuals is an in-out parameter, and the\n+types of the actuals are not by-copy types. The warning is off by default,\n+and is not included under -gnatwa.\n+\n+@item -gnatw.I\n+@emph{Disable warnings on overlapping actuals.}\n+@cindex @option{-gnatw.I} (@command{gcc})\n+This switch disables warnings on overlapping actuals in a call..\n \n @item -gnatwj\n @emph{Activate warnings on obsolescent features (Annex J).}"}, {"sha": "e0ccc2284734167368cfff4a41d2bb118dddbd7f", "filename": "gcc/ada/gnatcmd.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fd3fd793a862a2d8a748b82860db1a43b9bacd6/gcc%2Fada%2Fgnatcmd.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fd3fd793a862a2d8a748b82860db1a43b9bacd6/gcc%2Fada%2Fgnatcmd.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatcmd.adb?ref=5fd3fd793a862a2d8a748b82860db1a43b9bacd6", "patch": "@@ -1612,6 +1612,7 @@ begin\n \n                   elsif Argv.all = \"-eL\" then\n                      Follow_Links_For_Files := True;\n+                     Follow_Links_For_Dirs  := True;\n \n                      Remove_Switch (Arg_Num);\n "}, {"sha": "4c935bebbc7e005da80a77c28b0c3d2794a63c88", "filename": "gcc/ada/gnatname.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fd3fd793a862a2d8a748b82860db1a43b9bacd6/gcc%2Fada%2Fgnatname.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fd3fd793a862a2d8a748b82860db1a43b9bacd6/gcc%2Fada%2Fgnatname.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatname.adb?ref=5fd3fd793a862a2d8a748b82860db1a43b9bacd6", "patch": "@@ -385,6 +385,7 @@ procedure Gnatname is\n \n                elsif Arg = \"-eL\" then\n                   Opt.Follow_Links_For_Files := True;\n+                  Opt.Follow_Links_For_Dirs  := True;\n \n                --  -f\n "}, {"sha": "307ec6ffccc7a6bf2af947292f64bf3b4f0b2ddb", "filename": "gcc/ada/makeutl.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fd3fd793a862a2d8a748b82860db1a43b9bacd6/gcc%2Fada%2Fmakeutl.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fd3fd793a862a2d8a748b82860db1a43b9bacd6/gcc%2Fada%2Fmakeutl.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakeutl.adb?ref=5fd3fd793a862a2d8a748b82860db1a43b9bacd6", "patch": "@@ -328,7 +328,9 @@ package body Makeutl is\n             return \"\";\n          end if;\n \n-         return Normalize_Pathname (Exec (Exec'First .. Path_Last - 4))\n+         return Normalize_Pathname\n+           (Exec (Exec'First .. Path_Last - 4),\n+            Resolve_Links => Opt.Follow_Links_For_Dirs)\n            & Directory_Separator;\n       end Get_Install_Dir;\n "}, {"sha": "542b1f025513e04300cd514e2053d7ec0f6d4b98", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fd3fd793a862a2d8a748b82860db1a43b9bacd6/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fd3fd793a862a2d8a748b82860db1a43b9bacd6/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=5fd3fd793a862a2d8a748b82860db1a43b9bacd6", "patch": "@@ -663,7 +663,7 @@ package Opt is\n    --  still valid if they point to a file which is outside of the project),\n    --  and that no directory has a name which is a valid source name.\n \n-   Follow_Links_For_Dirs : Boolean := True;\n+   Follow_Links_For_Dirs : Boolean := False;\n    --  PROJECT MANAGER\n    --  Set to True if directories can be links in this project, and therefore\n    --  additional system calls must be performed to ensure that we always see"}, {"sha": "a8db0a557a84bf8c9ff70d7193cab1c7a2826f55", "filename": "gcc/ada/osint.adb", "status": "modified", "additions": 13, "deletions": 7, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fd3fd793a862a2d8a748b82860db1a43b9bacd6/gcc%2Fada%2Fosint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fd3fd793a862a2d8a748b82860db1a43b9bacd6/gcc%2Fada%2Fosint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fosint.adb?ref=5fd3fd793a862a2d8a748b82860db1a43b9bacd6", "patch": "@@ -80,7 +80,8 @@ package body Osint is\n    --  Appends Suffix to Name and returns the new name\n \n    function OS_Time_To_GNAT_Time (T : OS_Time) return Time_Stamp_Type;\n-   --  Convert OS format time to GNAT format time stamp\n+   --  Convert OS format time to GNAT format time stamp.\n+   --  Returns Empty_Time_Stamp if T is Invalid_Time\n \n    function Executable_Prefix return String_Ptr;\n    --  Returns the name of the root directory where the executable is stored.\n@@ -970,12 +971,13 @@ package body Osint is\n \n       Get_Name_String (Name);\n \n-      if not Is_Regular_File (Name_Buffer (1 .. Name_Len)) then\n-         return Empty_Time_Stamp;\n-      else\n-         Name_Buffer (Name_Len + 1) := ASCII.NUL;\n-         return OS_Time_To_GNAT_Time (File_Time_Stamp (Name_Buffer));\n-      end if;\n+      --  File_Time_Stamp will always return Invalid_Time if the file does not\n+      --  exist, and that OS_Time_To_GNAT_Time will convert that to\n+      --  Empty_Time_Stamp. Therefore we do not need to first test whether the\n+      --  file actually exists, which saves a system call\n+\n+      return OS_Time_To_GNAT_Time\n+        (File_Time_Stamp (Name_Buffer (1 .. Name_Len)));\n    end File_Stamp;\n \n    function File_Stamp (Name : Path_Name_Type) return Time_Stamp_Type is\n@@ -1887,6 +1889,10 @@ package body Osint is\n       S  : Second_Type;\n \n    begin\n+      if T = Invalid_Time then\n+         return Empty_Time_Stamp;\n+      end if;\n+\n       GM_Split (T, Y, Mo, D, H, Mn, S);\n       Make_Time_Stamp\n         (Year    => Nat (Y),"}, {"sha": "8c7a5d95d963d232ceac7ed34a802c5e54bc7c77", "filename": "gcc/ada/prj-ext.adb", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fd3fd793a862a2d8a748b82860db1a43b9bacd6/gcc%2Fada%2Fprj-ext.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fd3fd793a862a2d8a748b82860db1a43b9bacd6/gcc%2Fada%2Fprj-ext.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-ext.adb?ref=5fd3fd793a862a2d8a748b82860db1a43b9bacd6", "patch": "@@ -26,6 +26,7 @@\n with System.OS_Lib; use System.OS_Lib;\n with Hostparm;\n with Makeutl;       use Makeutl;\n+with Opt;\n with Osint;         use Osint;\n with Prj.Tree;      use Prj.Tree;\n with Sdefault;\n@@ -212,7 +213,9 @@ package body Prj.Ext is\n \n             declare\n                New_Dir : constant String :=\n-                           Normalize_Pathname (Name_Buffer (First .. Last));\n+                 Normalize_Pathname\n+                   (Name_Buffer (First .. Last),\n+                    Resolve_Links => Opt.Follow_Links_For_Dirs);\n \n             begin\n                --  If the absolute path was resolved and is different from"}, {"sha": "840214d2c648c0e2cb5b81373a8506765ad2c5a8", "filename": "gcc/ada/sem_case.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fd3fd793a862a2d8a748b82860db1a43b9bacd6/gcc%2Fada%2Fsem_case.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fd3fd793a862a2d8a748b82860db1a43b9bacd6/gcc%2Fada%2Fsem_case.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_case.adb?ref=5fd3fd793a862a2d8a748b82860db1a43b9bacd6", "patch": "@@ -239,7 +239,7 @@ package body Sem_Case is\n                     \" alternatives must cover base type\", Expr, Expr);\n \n             else\n-               Error_Msg_N (\"expression is not static,\" &\n+               Error_Msg_N (\"subtype of expression is not static,\" &\n                 \" alternatives must cover base type!\", Expr);\n             end if;\n \n@@ -249,8 +249,8 @@ package body Sem_Case is\n \n          elsif not Is_Entity_Name (Expr) then\n             Error_Msg_N\n-              (\"expression is not static, alternatives must cover base type!\",\n-               Expr);\n+              (\"subtype of expression is not static, \" &\n+                \"alternatives must cover base type!\", Expr);\n          end if;\n       end Explain_Non_Static_Bound;\n "}, {"sha": "a7a8d192626067152b7a9e4132523fa69e7eb6ea", "filename": "gcc/ada/switch-m.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fd3fd793a862a2d8a748b82860db1a43b9bacd6/gcc%2Fada%2Fswitch-m.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fd3fd793a862a2d8a748b82860db1a43b9bacd6/gcc%2Fada%2Fswitch-m.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fswitch-m.adb?ref=5fd3fd793a862a2d8a748b82860db1a43b9bacd6", "patch": "@@ -656,6 +656,7 @@ package body Switch.M is\n \n                   else\n                      Follow_Links_For_Files := True;\n+                     Follow_Links_For_Dirs  := True;\n                   end if;\n \n                --  Processing for eS switch"}]}