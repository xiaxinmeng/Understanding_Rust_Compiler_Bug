{"sha": "259f206328b3de4f4d35ffd22540ba2e75248646", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjU5ZjIwNjMyOGIzZGU0ZjRkMzVmZmQyMjU0MGJhMmU3NTI0ODY0Ng==", "commit": {"author": {"name": "Richard B. Kreckel", "email": "kreckel@ginac.de", "date": "2011-10-27T11:00:25Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2011-10-27T11:00:25Z"}, "message": "re PR libstdc++/50880 (__complex_acosh() picks wrong complex branch)\n\n2011-10-27  Richard B. Kreckel  <kreckel@ginac.de>\n\t    Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR libstdc++/50880\n\t* include/std/complex (__complex_acosh): Fix for __z.real() < 0.\n\t* include/tr1/complex (__complex_acosh): Likewise.\n\t* testsuite/26_numerics/complex/50880.cc: New.\n\t* testsuite/tr1/8_c_compatibility/complex/50880.cc: Likewise.\n\nCo-Authored-By: Paolo Carlini <paolo.carlini@oracle.com>\n\nFrom-SVN: r180563", "tree": {"sha": "620e30a17939bf79786ab66334d4b0041cd8c78d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/620e30a17939bf79786ab66334d4b0041cd8c78d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/259f206328b3de4f4d35ffd22540ba2e75248646", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/259f206328b3de4f4d35ffd22540ba2e75248646", "html_url": "https://github.com/Rust-GCC/gccrs/commit/259f206328b3de4f4d35ffd22540ba2e75248646", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/259f206328b3de4f4d35ffd22540ba2e75248646/comments", "author": null, "committer": null, "parents": [{"sha": "e7a7929d91e79912fc626ba178d8ee7bd68bed5e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7a7929d91e79912fc626ba178d8ee7bd68bed5e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7a7929d91e79912fc626ba178d8ee7bd68bed5e"}], "stats": {"total": 117, "additions": 117, "deletions": 0}, "files": [{"sha": "d92d36312dfbaa124fefbc5f8931e5045045511a", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/259f206328b3de4f4d35ffd22540ba2e75248646/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/259f206328b3de4f4d35ffd22540ba2e75248646/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=259f206328b3de4f4d35ffd22540ba2e75248646", "patch": "@@ -1,3 +1,12 @@\n+2011-10-27  Richard B. Kreckel  <kreckel@ginac.de>\n+\t    Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR libstdc++/50880\n+\t* include/std/complex (__complex_acosh): Fix for __z.real() < 0.\n+\t* include/tr1/complex (__complex_acosh): Likewise.\n+\t* testsuite/26_numerics/complex/50880.cc: New.\n+\t* testsuite/tr1/8_c_compatibility/complex/50880.cc: Likewise.\n+\n 2011-10-27  Jonathan Wakely  <jwakely.gcc@gmail.com>\n \n \tPR libstdc++/50862"}, {"sha": "7f1581bbcb4a7a0b611c150c36adb30b59a97577", "filename": "libstdc++-v3/include/std/complex", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/259f206328b3de4f4d35ffd22540ba2e75248646/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcomplex", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/259f206328b3de4f4d35ffd22540ba2e75248646/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcomplex", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcomplex?ref=259f206328b3de4f4d35ffd22540ba2e75248646", "patch": "@@ -1690,6 +1690,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t\t\t    * (__z.real() + __z.imag()) - _Tp(1.0),\n \t\t\t    _Tp(2.0) * __z.real() * __z.imag());\n       __t = std::sqrt(__t);\n+      if (__z.real() < _Tp(-0.0))\n+\t__t = -__t;\n \n       return std::log(__t + __z);\n     }"}, {"sha": "d29b13fe8b8bab85eaa38bda355a0ef0c5674aec", "filename": "libstdc++-v3/include/tr1/complex", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/259f206328b3de4f4d35ffd22540ba2e75248646/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fcomplex", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/259f206328b3de4f4d35ffd22540ba2e75248646/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fcomplex", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fcomplex?ref=259f206328b3de4f4d35ffd22540ba2e75248646", "patch": "@@ -189,6 +189,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t\t\t    * (__z.real() + __z.imag()) - _Tp(1.0),\n \t\t\t    _Tp(2.0) * __z.real() * __z.imag());\n       __t = std::sqrt(__t);\n+      if (__z.real() < _Tp(-0.0))\n+\t__t = -__t;\n \n       return std::log(__t + __z);\n     }"}, {"sha": "2b70a99ddcaf92b49149235e2ebd44d61135829a", "filename": "libstdc++-v3/testsuite/26_numerics/complex/50880.cc", "status": "added", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/259f206328b3de4f4d35ffd22540ba2e75248646/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fcomplex%2F50880.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/259f206328b3de4f4d35ffd22540ba2e75248646/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fcomplex%2F50880.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fcomplex%2F50880.cc?ref=259f206328b3de4f4d35ffd22540ba2e75248646", "patch": "@@ -0,0 +1,53 @@\n+// { dg-options \"-std=gnu++0x\" }\n+//\n+// Copyright (C) 2011 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <complex>\n+#include <testsuite_hooks.h> \n+\n+template<typename T>\n+  void test01_do()\n+  {\n+    bool test __attribute__((unused)) = true;\n+\n+    const std::complex<T> ca(T(-2), T(2));\n+    const std::complex<T> cb(T(-2), T(0));\n+    const std::complex<T> cc(T(-2), T(-2));\n+\n+    std::complex<T> cra = std::acosh(ca);\n+    std::complex<T> crb = std::acosh(cb);\n+    std::complex<T> crc = std::acosh(cc);\n+\n+    VERIFY( cra.real() > T(0) );\n+    VERIFY( crb.real() > T(0) );\n+    VERIFY( crc.real() > T(0) );\n+  }\n+\n+// libstdc++/50880\n+void test01()\n+{\n+  test01_do<float>();\n+  test01_do<double>();\n+  test01_do<long double>();\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "eaa2f3d81f4ac1aa342fb6ee7fd849900bc5adb4", "filename": "libstdc++-v3/testsuite/tr1/8_c_compatibility/complex/50880.cc", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/259f206328b3de4f4d35ffd22540ba2e75248646/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F8_c_compatibility%2Fcomplex%2F50880.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/259f206328b3de4f4d35ffd22540ba2e75248646/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F8_c_compatibility%2Fcomplex%2F50880.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F8_c_compatibility%2Fcomplex%2F50880.cc?ref=259f206328b3de4f4d35ffd22540ba2e75248646", "patch": "@@ -0,0 +1,51 @@\n+// Copyright (C) 2011 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <tr1/complex>\n+#include <testsuite_hooks.h> \n+\n+template<typename T>\n+  void test01_do()\n+  {\n+    bool test __attribute__((unused)) = true;\n+\n+    const std::complex<T> ca(T(-2), T(2));\n+    const std::complex<T> cb(T(-2), T(0));\n+    const std::complex<T> cc(T(-2), T(-2));\n+\n+    std::complex<T> cra = std::tr1::acosh(ca);\n+    std::complex<T> crb = std::tr1::acosh(cb);\n+    std::complex<T> crc = std::tr1::acosh(cc);\n+\n+    VERIFY( cra.real() > T(0) );\n+    VERIFY( crb.real() > T(0) );\n+    VERIFY( crc.real() > T(0) );\n+  }\n+\n+// libstdc++/50880\n+void test01()\n+{\n+  test01_do<float>();\n+  test01_do<double>();\n+  test01_do<long double>();\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}]}