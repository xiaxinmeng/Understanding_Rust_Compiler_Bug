{"sha": "ec8f7ce60791b582ce377eac47d14ee9122c557e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWM4ZjdjZTYwNzkxYjU4MmNlMzc3ZWFjNDdkMTRlZTkxMjJjNTU3ZQ==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2017-10-24T10:52:50Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2017-10-24T10:52:50Z"}, "message": "i386: Don't insert ENDBR at function entrance when called directly\n\nThere is no need to insert ENDBR instruction at function entrance if\nfunction is only called directly.\n\ngcc/\n\n\tPR target/82659\n\t* config/i386/i386.c (rest_of_insert_endbranch): Don't insert\n\tENDBR instruction at function entrance if function is only\n\tcalled directly.\n\ngcc/testsuite/\n\n\tPR target/82659\n\t* gcc.target/i386/cet-label-2.c: New test.\n\t* gcc.target/i386/cet-sjlj-4.c: Likewise.\n\t* gcc.target/i386/cet-sjlj-5.c: Likewise.\n\t* gcc.target/i386/cet-switch-3.c: Likewise.\n\t* gcc.target/i386/pr82659-1.c: Likewise.\n\t* gcc.target/i386/pr82659-2.c: Likewise.\n\t* gcc.target/i386/pr82659-3.c: Likewise.\n\t* gcc.target/i386/pr82659-4.c: Likewise.\n\t* gcc.target/i386/pr82659-5.c: Likewise.\n\t* gcc.target/i386/pr82659-6.c: Likewise.\n\nFrom-SVN: r254040", "tree": {"sha": "61d5dfbbc1cb4ca1148dc14fbdcef62d8b3f1668", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/61d5dfbbc1cb4ca1148dc14fbdcef62d8b3f1668"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ec8f7ce60791b582ce377eac47d14ee9122c557e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec8f7ce60791b582ce377eac47d14ee9122c557e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec8f7ce60791b582ce377eac47d14ee9122c557e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec8f7ce60791b582ce377eac47d14ee9122c557e/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b75200689b0d86be5c3b91afb7303575359622ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b75200689b0d86be5c3b91afb7303575359622ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b75200689b0d86be5c3b91afb7303575359622ae"}], "stats": {"total": 272, "additions": 271, "deletions": 1}, "files": [{"sha": "5a43ff890be9a45264c2626b86c6d0d525101e5e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec8f7ce60791b582ce377eac47d14ee9122c557e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec8f7ce60791b582ce377eac47d14ee9122c557e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ec8f7ce60791b582ce377eac47d14ee9122c557e", "patch": "@@ -1,3 +1,10 @@\n+2017-10-24  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/82659\n+\t* config/i386/i386.c (rest_of_insert_endbranch): Don't insert\n+\tENDBR instruction at function entrance if function is only\n+\tcalled directly.\n+\n 2017-10-24  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/82628"}, {"sha": "d2188ad6086a0595025b42ebe524a3d314b8379e", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec8f7ce60791b582ce377eac47d14ee9122c557e/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec8f7ce60791b582ce377eac47d14ee9122c557e/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=ec8f7ce60791b582ce377eac47d14ee9122c557e", "patch": "@@ -2587,7 +2587,8 @@ rest_of_insert_endbranch (void)\n      nocf_check attribute.  This will allow to reduce the number of EB.  */\n \n   if (!lookup_attribute (\"nocf_check\",\n-\t\t\t TYPE_ATTRIBUTES (TREE_TYPE (cfun->decl))))\n+\t\t\t TYPE_ATTRIBUTES (TREE_TYPE (cfun->decl)))\n+      && !cgraph_node::get (cfun->decl)->only_called_directly_p ())\n     {\n       cet_eb = gen_nop_endbr ();\n "}, {"sha": "35c31e70b617da5181f08dbda57ddf8fc94c6b3c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec8f7ce60791b582ce377eac47d14ee9122c557e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec8f7ce60791b582ce377eac47d14ee9122c557e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ec8f7ce60791b582ce377eac47d14ee9122c557e", "patch": "@@ -1,3 +1,17 @@\n+2017-10-24  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/82659\n+\t* gcc.target/i386/cet-label-2.c: New test.\n+\t* gcc.target/i386/cet-sjlj-4.c: Likewise.\n+\t* gcc.target/i386/cet-sjlj-5.c: Likewise.\n+\t* gcc.target/i386/cet-switch-3.c: Likewise.\n+\t* gcc.target/i386/pr82659-1.c: Likewise.\n+\t* gcc.target/i386/pr82659-2.c: Likewise.\n+\t* gcc.target/i386/pr82659-3.c: Likewise.\n+\t* gcc.target/i386/pr82659-4.c: Likewise.\n+\t* gcc.target/i386/pr82659-5.c: Likewise.\n+\t* gcc.target/i386/pr82659-6.c: Likewise.\n+\n 2017-10-23  Sandra Loosemore  <sandra@codesourcery.com>\n \n \t* gcc.target/nios2/cdx-branch.c:  Fix broken test."}, {"sha": "c7f79819079b65a907ac311bd80e0802c8f7fdf5", "filename": "gcc/testsuite/gcc.target/i386/cet-label-2.c", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec8f7ce60791b582ce377eac47d14ee9122c557e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fcet-label-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec8f7ce60791b582ce377eac47d14ee9122c557e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fcet-label-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fcet-label-2.c?ref=ec8f7ce60791b582ce377eac47d14ee9122c557e", "patch": "@@ -0,0 +1,24 @@\n+/* Verify that CET works.  */\n+/* { dg-do compile } */\n+/* { dg-options \"-O -fcf-protection -mcet\" } */\n+/* { dg-final { scan-assembler-times \"endbr32\" 3 { target ia32 } } } */\n+/* { dg-final { scan-assembler-times \"endbr64\" 3 { target { ! ia32 } } } } */\n+\n+__attribute__ ((noinline, noclone))\n+static int\n+func (int arg)\n+{\n+  static void *array[] = { &&foo, &&bar };\n+\n+  goto *array[arg];\n+foo:\n+  return arg*111;\n+bar:\n+  return arg*777;\n+}\n+\n+int\n+foo (int arg)\n+{\n+  return func (arg);\n+}"}, {"sha": "d41406fde1fa30beb338980bcb1a3ab1b0c2b195", "filename": "gcc/testsuite/gcc.target/i386/cet-sjlj-4.c", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec8f7ce60791b582ce377eac47d14ee9122c557e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fcet-sjlj-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec8f7ce60791b582ce377eac47d14ee9122c557e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fcet-sjlj-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fcet-sjlj-4.c?ref=ec8f7ce60791b582ce377eac47d14ee9122c557e", "patch": "@@ -0,0 +1,45 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -fcf-protection -mcet\" } */\n+/* { dg-final { scan-assembler-times \"endbr32\" 3 { target ia32 } } } */\n+/* { dg-final { scan-assembler-times \"endbr64\" 3 { target { ! ia32 } } } } */\n+/* { dg-final { scan-assembler-times \"rdssp\\[dq]\" 2 } } */\n+/* { dg-final { scan-assembler-times \"incssp\\[dq]\" 1 } } */\n+\n+/* Based on gcc.dg/setjmp-3.c.  */\n+\n+void *buf[5];\n+\n+extern void abort (void);\n+\n+void\n+raise0 (void)\n+{\n+  __builtin_longjmp (buf, 1);\n+}\n+\n+__attribute__ ((noinline, noclone))\n+static int\n+execute (int cmd)\n+{\n+  int last = 0;\n+\n+  if (__builtin_setjmp (buf) == 0)\n+    while (1)\n+      {\n+\tlast = 1;\n+\traise0 ();\n+      }\n+\n+  if (last == 0)\n+    return 0;\n+  else\n+    return cmd;\n+}\n+\n+int main(void)\n+{\n+  if (execute (1) == 0)\n+    abort ();\n+\n+  return 0;\n+}"}, {"sha": "12ea9f4e4426fb638374d68bf45d8a9b5ae376e9", "filename": "gcc/testsuite/gcc.target/i386/cet-sjlj-5.c", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec8f7ce60791b582ce377eac47d14ee9122c557e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fcet-sjlj-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec8f7ce60791b582ce377eac47d14ee9122c557e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fcet-sjlj-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fcet-sjlj-5.c?ref=ec8f7ce60791b582ce377eac47d14ee9122c557e", "patch": "@@ -0,0 +1,48 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -fcf-protection -mcet\" } */\n+/* { dg-final { scan-assembler-times \"endbr32\" 2 { target ia32 } } } */\n+/* { dg-final { scan-assembler-times \"endbr64\" 2 { target { ! ia32 } } } } */\n+/* { dg-final { scan-assembler-times \"call\t_setjmp\" 1 } } */\n+/* { dg-final { scan-assembler-times \"call\tlongjmp\" 1 } } */\n+\n+#include <stdio.h>\n+#include <setjmp.h>\n+\n+jmp_buf buf;\n+static int bar (int);\n+\n+__attribute__ ((noinline, noclone))\n+static int\n+foo (int i)\n+{\n+  int j = i * 11;\n+\n+  if (!setjmp (buf))\n+    {\n+      j += 33;\n+      printf (\"After setjmp: j = %d\\n\", j);\n+      bar (j);\n+    }\n+\n+  return j + i;\n+}\n+\n+__attribute__ ((noinline, noclone))\n+static int\n+bar (int i)\n+{\n+ int j = i;\n+\n+  j -= 111;\n+  printf (\"In longjmp: j = %d\\n\", j);\n+  longjmp (buf, 1);\n+\n+  return j;\n+}\n+\n+int\n+main ()\n+{\n+  foo (10);\n+  return 0;\n+}"}, {"sha": "9b1b436958292447c9a6c00b3ccb8fa823b52311", "filename": "gcc/testsuite/gcc.target/i386/cet-switch-3.c", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec8f7ce60791b582ce377eac47d14ee9122c557e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fcet-switch-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec8f7ce60791b582ce377eac47d14ee9122c557e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fcet-switch-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fcet-switch-3.c?ref=ec8f7ce60791b582ce377eac47d14ee9122c557e", "patch": "@@ -0,0 +1,34 @@\n+/* Verify that CET works.  */\n+/* { dg-do compile } */\n+/* { dg-options \"-O -fcf-protection -mcet -mcet-switch\" } */\n+/* { dg-final { scan-assembler-times \"endbr32\" 12 { target ia32 } } } */\n+/* { dg-final { scan-assembler-times \"endbr64\" 12 { target { ! ia32 } } } } */\n+/* { dg-final { scan-assembler-times \"\\[ \\t]+jmp\\[ \\t]+\\[*]\" 1 } } */\n+\n+void func2 (int);\n+\n+__attribute__ ((noinline, noclone))\n+static int\n+func1 (int arg)\n+{\n+  switch (arg)\n+  {\n+    case 1: func2 (arg*100);\n+    case 2: func2 (arg*300);\n+    case 5: func2 (arg*500);\n+    case 8: func2 (arg*700);\n+    case 7: func2 (arg*900);\n+    case -1: func2 (arg*-100);\n+    case -2: func2 (arg*-300);\n+    case -5: func2 (arg*-500);\n+    case -7: func2 (arg*-700);\n+    case -9: func2 (arg*-900);\n+  }\n+  return 0;\n+}\n+\n+int\n+foo (int arg)\n+{\n+  return func1 (arg);\n+}"}, {"sha": "485771d0f38a3740c5fcea70e0a89d5f709df2ba", "filename": "gcc/testsuite/gcc.target/i386/pr82659-1.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec8f7ce60791b582ce377eac47d14ee9122c557e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr82659-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec8f7ce60791b582ce377eac47d14ee9122c557e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr82659-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr82659-1.c?ref=ec8f7ce60791b582ce377eac47d14ee9122c557e", "patch": "@@ -0,0 +1,18 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fcf-protection -mcet\" } */\n+/* { dg-final { scan-assembler-times {\\mendbr} 1 } } */\n+\n+extern int x;\n+\n+static void\n+__attribute__ ((noinline, noclone))\n+test (int i)\n+{\n+  x = i;\n+}\n+\n+void\n+bar (int i)\n+{\n+  test (i);\n+}"}, {"sha": "7afffa440aa71a824b5a9d5e38f64a0ac66a4f7f", "filename": "gcc/testsuite/gcc.target/i386/pr82659-2.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec8f7ce60791b582ce377eac47d14ee9122c557e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr82659-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec8f7ce60791b582ce377eac47d14ee9122c557e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr82659-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr82659-2.c?ref=ec8f7ce60791b582ce377eac47d14ee9122c557e", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fcf-protection -mcet\" } */\n+/* { dg-final { scan-assembler-times {\\mendbr} 2 } } */\n+\n+extern int x;\n+\n+void\n+test (int i)\n+{\n+  x = i;\n+}\n+\n+void\n+bar (int i)\n+{\n+  test (i);\n+}"}, {"sha": "5f97b3140926ab58264b1a51c01decc98c71d2df", "filename": "gcc/testsuite/gcc.target/i386/pr82659-3.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec8f7ce60791b582ce377eac47d14ee9122c557e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr82659-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec8f7ce60791b582ce377eac47d14ee9122c557e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr82659-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr82659-3.c?ref=ec8f7ce60791b582ce377eac47d14ee9122c557e", "patch": "@@ -0,0 +1,20 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fcf-protection -mcet\" } */\n+/* { dg-final { scan-assembler-times {\\mendbr} 2 } } */\n+\n+extern int x;\n+\n+static void\n+__attribute__ ((noinline, noclone))\n+test (int i)\n+{\n+  x = i;\n+}\n+\n+extern __typeof (test) foo __attribute__ ((alias (\"test\")));\n+\n+void\n+bar (int i)\n+{\n+  test (i);\n+}"}, {"sha": "c3cacaccbef8070bbc4bc1db2fe6f1883c8e4ac6", "filename": "gcc/testsuite/gcc.target/i386/pr82659-4.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec8f7ce60791b582ce377eac47d14ee9122c557e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr82659-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec8f7ce60791b582ce377eac47d14ee9122c557e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr82659-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr82659-4.c?ref=ec8f7ce60791b582ce377eac47d14ee9122c557e", "patch": "@@ -0,0 +1,14 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fcf-protection -mcet\" } */\n+/* { dg-final { scan-assembler-times {\\mendbr} 2 } } */\n+\n+static void\n+test (void)\n+{\n+}\n+\n+void *\n+bar (void)\n+{\n+  return test;\n+}"}, {"sha": "95413671d5cb378e522c973330d481c9861471d1", "filename": "gcc/testsuite/gcc.target/i386/pr82659-5.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec8f7ce60791b582ce377eac47d14ee9122c557e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr82659-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec8f7ce60791b582ce377eac47d14ee9122c557e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr82659-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr82659-5.c?ref=ec8f7ce60791b582ce377eac47d14ee9122c557e", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fcf-protection -mcet\" } */\n+/* { dg-final { scan-assembler-times {\\mendbr} 1 } } */\n+\n+static void\n+test (void)\n+{\n+}\n+\n+void (*test_p) (void) = test;"}, {"sha": "51fc1a9f5c9df438a816776ad7ba9467f33d37f4", "filename": "gcc/testsuite/gcc.target/i386/pr82659-6.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec8f7ce60791b582ce377eac47d14ee9122c557e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr82659-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec8f7ce60791b582ce377eac47d14ee9122c557e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr82659-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr82659-6.c?ref=ec8f7ce60791b582ce377eac47d14ee9122c557e", "patch": "@@ -0,0 +1,18 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fcf-protection -mcet\" } */\n+/* { dg-final { scan-assembler-times {\\mendbr} 2 } } */\n+\n+extern int x;\n+\n+ __attribute__ ((visibility (\"hidden\")))\n+void\n+test (int i)\n+{\n+  x = i;\n+}\n+\n+void\n+bar (int i)\n+{\n+  test (i);\n+}"}]}