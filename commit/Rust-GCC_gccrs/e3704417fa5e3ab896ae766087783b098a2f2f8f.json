{"sha": "e3704417fa5e3ab896ae766087783b098a2f2f8f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTM3MDQ0MTdmYTVlM2FiODk2YWU3NjYwODc3ODNiMDk4YTJmMmY4Zg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2017-11-29T21:01:23Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2017-11-29T21:01:23Z"}, "message": "PR c++/82760 - memory corruption with aligned new.\n\n\t* call.c (build_operator_new_call): Update *args if we add the\n\talign_arg.\n\nFrom-SVN: r255253", "tree": {"sha": "723e990cac4187a1da2f93888fa2fe98694045f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/723e990cac4187a1da2f93888fa2fe98694045f1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e3704417fa5e3ab896ae766087783b098a2f2f8f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3704417fa5e3ab896ae766087783b098a2f2f8f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e3704417fa5e3ab896ae766087783b098a2f2f8f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3704417fa5e3ab896ae766087783b098a2f2f8f/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "edaa6eb53a331e71fe3e8826fc40f51683d01237", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/edaa6eb53a331e71fe3e8826fc40f51683d01237", "html_url": "https://github.com/Rust-GCC/gccrs/commit/edaa6eb53a331e71fe3e8826fc40f51683d01237"}], "stats": {"total": 27, "additions": 27, "deletions": 0}, "files": [{"sha": "1bc460002ddf5fe76500ee294ac2b8e753aa8671", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3704417fa5e3ab896ae766087783b098a2f2f8f/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3704417fa5e3ab896ae766087783b098a2f2f8f/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=e3704417fa5e3ab896ae766087783b098a2f2f8f", "patch": "@@ -1,3 +1,9 @@\n+2017-11-29  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/82760 - memory corruption with aligned new.\n+\t* call.c (build_operator_new_call): Update *args if we add the\n+\talign_arg.\n+\n 2017-11-28  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR sanitizer/81275"}, {"sha": "e04626863af5cde497c83f7d10ce26155a3ab299", "filename": "gcc/cp/call.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3704417fa5e3ab896ae766087783b098a2f2f8f/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3704417fa5e3ab896ae766087783b098a2f2f8f/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=e3704417fa5e3ab896ae766087783b098a2f2f8f", "patch": "@@ -4372,6 +4372,8 @@ build_operator_new_call (tree fnname, vec<tree, va_gc> **args,\n \t= vec_copy_and_insert (*args, align_arg, 1);\n       cand = perform_overload_resolution (fns, align_args, &candidates,\n \t\t\t\t\t  &any_viable_p, tf_none);\n+      if (cand)\n+\t*args = align_args;\n       /* If no aligned allocation function matches, try again without the\n \t alignment.  */\n     }"}, {"sha": "11dd45722b78a8553bf0112d966dd1e7733db8de", "filename": "gcc/testsuite/g++.dg/cpp1z/aligned-new8.C", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3704417fa5e3ab896ae766087783b098a2f2f8f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Faligned-new8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3704417fa5e3ab896ae766087783b098a2f2f8f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Faligned-new8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Faligned-new8.C?ref=e3704417fa5e3ab896ae766087783b098a2f2f8f", "patch": "@@ -0,0 +1,19 @@\n+// PR c++/82760\n+// { dg-options -std=c++17 }\n+// { dg-do run }\n+\n+#include <new>\n+#include <cstddef>\n+\n+struct alignas(2 * alignof (std::max_align_t)) aligned_foo {\n+  char x[2048];\n+\n+  ~aligned_foo() { }\n+  aligned_foo() { __builtin_memset(x, 0, sizeof(x)); }\n+};\n+\n+int main()\n+{\n+  aligned_foo * gFoo = new (std::nothrow) aligned_foo[2];\n+  delete[] gFoo;\n+}"}]}