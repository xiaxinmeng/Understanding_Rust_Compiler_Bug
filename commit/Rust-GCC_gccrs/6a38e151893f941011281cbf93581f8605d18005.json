{"sha": "6a38e151893f941011281cbf93581f8605d18005", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmEzOGUxNTE4OTNmOTQxMDExMjgxY2JmOTM1ODFmODYwNWQxODAwNQ==", "commit": {"author": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2011-09-07T22:20:47Z"}, "committer": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2011-09-07T22:20:47Z"}, "message": "re PR fortran/48095 ([OOP] Invalid assignment to procedure pointer component not rejected)\n\n2011-09-07  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/48095\n\t* primary.c (gfc_match_structure_constructor): Handle parsing of\n\tprocedure pointers components in structure constructors.\n\t* resolve.c (resolve_structure_cons): Check interface of procedure\n\tpointer components. Changed wording of some error messages.\n\n\n2011-09-07  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/48095\n\t* gfortran.dg/derived_constructor_comps_2.f90: Modified.\n\t* gfortran.dg/impure_constructor_1.f90: Modified.\n\t* gfortran.dg/proc_ptr_comp_33.f90: New.\n\nFrom-SVN: r178665", "tree": {"sha": "c17f3e416f39964150f112a3944dd6bbee17ea63", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c17f3e416f39964150f112a3944dd6bbee17ea63"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6a38e151893f941011281cbf93581f8605d18005", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a38e151893f941011281cbf93581f8605d18005", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a38e151893f941011281cbf93581f8605d18005", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a38e151893f941011281cbf93581f8605d18005/comments", "author": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "601a5d76ca67442686facfb179aac2064003bb99", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/601a5d76ca67442686facfb179aac2064003bb99", "html_url": "https://github.com/Rust-GCC/gccrs/commit/601a5d76ca67442686facfb179aac2064003bb99"}], "stats": {"total": 137, "additions": 130, "deletions": 7}, "files": [{"sha": "53c2929bf7417a00de8167c94396e65ce64503d2", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a38e151893f941011281cbf93581f8605d18005/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a38e151893f941011281cbf93581f8605d18005/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=6a38e151893f941011281cbf93581f8605d18005", "patch": "@@ -1,3 +1,11 @@\n+2011-09-07  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/48095\n+\t* primary.c (gfc_match_structure_constructor): Handle parsing of\n+\tprocedure pointers components in structure constructors.\n+\t* resolve.c (resolve_structure_cons): Check interface of procedure\n+\tpointer components. Changed wording of some error messages.\n+\n 2011-09-04  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/50227"}, {"sha": "bccf7d49cf95ebcc900df8c4cc3484542e76acdf", "filename": "gcc/fortran/primary.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a38e151893f941011281cbf93581f8605d18005/gcc%2Ffortran%2Fprimary.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a38e151893f941011281cbf93581f8605d18005/gcc%2Ffortran%2Fprimary.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fprimary.c?ref=6a38e151893f941011281cbf93581f8605d18005", "patch": "@@ -2418,7 +2418,10 @@ gfc_match_structure_constructor (gfc_symbol *sym, gfc_expr **result,\n \t    }\n \n \t  /* Match the current initializer expression.  */\n+\t  if (this_comp->attr.proc_pointer)\n+\t    gfc_matching_procptr_assignment = 1;\n \t  m = gfc_match_expr (&comp_tail->val);\n+\t  gfc_matching_procptr_assignment = 0;\n \t  if (m == MATCH_NO)\n \t    goto syntax;\n \t  if (m == MATCH_ERROR)"}, {"sha": "a12e6e746750717da133fd44304873b4e6fc442b", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 39, "deletions": 5, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a38e151893f941011281cbf93581f8605d18005/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a38e151893f941011281cbf93581f8605d18005/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=6a38e151893f941011281cbf93581f8605d18005", "patch": "@@ -1013,7 +1013,7 @@ resolve_structure_cons (gfc_expr *expr, int init)\n       if (cons->expr->expr_type != EXPR_NULL && rank != cons->expr->rank\n \t  && (comp->attr.allocatable || cons->expr->rank))\n \t{\n-\t  gfc_error (\"The rank of the element in the derived type \"\n+\t  gfc_error (\"The rank of the element in the structure \"\n \t\t     \"constructor at %L does not match that of the \"\n \t\t     \"component (%d/%d)\", &cons->expr->where,\n \t\t     cons->expr->rank, rank);\n@@ -1035,7 +1035,7 @@ resolve_structure_cons (gfc_expr *expr, int init)\n \t      t = SUCCESS;\n \t    }\n \t  else if (comp->attr.pointer && cons->expr->ts.type != BT_UNKNOWN)\n-\t    gfc_error (\"The element in the derived type constructor at %L, \"\n+\t    gfc_error (\"The element in the structure constructor at %L, \"\n \t\t       \"for pointer component '%s', is %s but should be %s\",\n \t\t       &cons->expr->where, comp->name,\n \t\t       gfc_basic_typename (cons->expr->ts.type),\n@@ -1113,12 +1113,46 @@ resolve_structure_cons (gfc_expr *expr, int init)\n \t\t       || CLASS_DATA (comp)->attr.allocatable))))\n \t{\n \t  t = FAILURE;\n-\t  gfc_error (\"The NULL in the derived type constructor at %L is \"\n+\t  gfc_error (\"The NULL in the structure constructor at %L is \"\n \t\t     \"being applied to component '%s', which is neither \"\n \t\t     \"a POINTER nor ALLOCATABLE\", &cons->expr->where,\n \t\t     comp->name);\n \t}\n \n+      if (comp->attr.proc_pointer && comp->ts.interface)\n+\t{\n+\t  /* Check procedure pointer interface.  */\n+\t  gfc_symbol *s2 = NULL;\n+\t  gfc_component *c2;\n+\t  const char *name;\n+\t  char err[200];\n+\n+\t  if (gfc_is_proc_ptr_comp (cons->expr, &c2))\n+\t    {\n+\t      s2 = c2->ts.interface;\n+\t      name = c2->name;\n+\t    }\n+\t  else if (cons->expr->expr_type == EXPR_FUNCTION)\n+\t    {\n+\t      s2 = cons->expr->symtree->n.sym->result;\n+\t      name = cons->expr->symtree->n.sym->result->name;\n+\t    }\n+\t  else if (cons->expr->expr_type != EXPR_NULL)\n+\t    {\n+\t      s2 = cons->expr->symtree->n.sym;\n+\t      name = cons->expr->symtree->n.sym->name;\n+\t    }\n+\n+\t  if (s2 && !gfc_compare_interfaces (comp->ts.interface, s2, name, 0, 1,\n+\t\t\t\t\t     err, sizeof (err)))\n+\t    {\n+\t      gfc_error (\"Interface mismatch for procedure-pointer component \"\n+\t\t\t \"'%s' in structure constructor at %L: %s\",\n+\t\t\t comp->name, &cons->expr->where, err);\n+\t      return FAILURE;\n+\t    }\n+\t}\n+\n       if (!comp->attr.pointer || comp->attr.proc_pointer\n \t  || cons->expr->expr_type == EXPR_NULL)\n \tcontinue;\n@@ -1128,7 +1162,7 @@ resolve_structure_cons (gfc_expr *expr, int init)\n       if (!a.pointer && !a.target)\n \t{\n \t  t = FAILURE;\n-\t  gfc_error (\"The element in the derived type constructor at %L, \"\n+\t  gfc_error (\"The element in the structure constructor at %L, \"\n \t\t     \"for pointer component '%s' should be a POINTER or \"\n \t\t     \"a TARGET\", &cons->expr->where, comp->name);\n \t}\n@@ -1156,7 +1190,7 @@ resolve_structure_cons (gfc_expr *expr, int init)\n \t      || gfc_is_coindexed (cons->expr)))\n \t{\n \t  t = FAILURE;\n-\t  gfc_error (\"Invalid expression in the derived type constructor for \"\n+\t  gfc_error (\"Invalid expression in the structure constructor for \"\n \t\t     \"pointer component '%s' at %L in PURE procedure\",\n \t\t     comp->name, &cons->expr->where);\n \t}"}, {"sha": "5189d62c7bfa09bc829f36a1ff0ac782ab5081e0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a38e151893f941011281cbf93581f8605d18005/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a38e151893f941011281cbf93581f8605d18005/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6a38e151893f941011281cbf93581f8605d18005", "patch": "@@ -1,3 +1,10 @@\n+2011-09-07  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/48095\n+\t* gfortran.dg/derived_constructor_comps_2.f90: Modified.\n+\t* gfortran.dg/impure_constructor_1.f90: Modified.\n+\t* gfortran.dg/proc_ptr_comp_33.f90: New.\n+\n 2011-09-07  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/50310"}, {"sha": "a5e951ad1021f4d2da03ae531d9f68a5b8584c60", "filename": "gcc/testsuite/gfortran.dg/derived_constructor_comps_2.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a38e151893f941011281cbf93581f8605d18005/gcc%2Ftestsuite%2Fgfortran.dg%2Fderived_constructor_comps_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a38e151893f941011281cbf93581f8605d18005/gcc%2Ftestsuite%2Fgfortran.dg%2Fderived_constructor_comps_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fderived_constructor_comps_2.f90?ref=6a38e151893f941011281cbf93581f8605d18005", "patch": "@@ -23,5 +23,5 @@ subroutine foo\n   type (ByteType) :: bytes(4)\n \n   print *, size(bytes)\n-  bytes = ByteType((/'H', 'i', '!', ' '/)) ! { dg-error \"rank of the element in the derived type constructor\" }\n+  bytes = ByteType((/'H', 'i', '!', ' '/)) ! { dg-error \"rank of the element in the structure constructor\" }\n end subroutine foo"}, {"sha": "01aa01b63a61703e15fe9611ce6942afd70ebd17", "filename": "gcc/testsuite/gfortran.dg/impure_constructor_1.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a38e151893f941011281cbf93581f8605d18005/gcc%2Ftestsuite%2Fgfortran.dg%2Fimpure_constructor_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a38e151893f941011281cbf93581f8605d18005/gcc%2Ftestsuite%2Fgfortran.dg%2Fimpure_constructor_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fimpure_constructor_1.f90?ref=6a38e151893f941011281cbf93581f8605d18005", "patch": "@@ -23,7 +23,7 @@ pure subroutine foo(x)\n    y = t2(x) ! Note: F2003, C1272 (3) and (4) do not apply\n    \n    ! Variant which is invalid as C1272 (3) applies\n-   z = t3(x) ! { dg-error \"Invalid expression in the derived type constructor\" }\n+   z = t3(x) ! { dg-error \"Invalid expression in the structure constructor\" }\n  end subroutine foo\n end module m\n "}, {"sha": "1bb863d3a97dd1b2109f1c5b7fae7af37dfc591e", "filename": "gcc/testsuite/gfortran.dg/proc_ptr_comp_33.f90", "status": "added", "additions": 71, "deletions": 0, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a38e151893f941011281cbf93581f8605d18005/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_ptr_comp_33.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a38e151893f941011281cbf93581f8605d18005/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_ptr_comp_33.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_ptr_comp_33.f90?ref=6a38e151893f941011281cbf93581f8605d18005", "patch": "@@ -0,0 +1,71 @@\n+! { dg-do compile }\n+!\n+! PR 48095: [OOP] Invalid assignment to procedure pointer component not rejected\n+!\n+! Original test case by Arjen Markus <arjen.markus895@gmail.com>\n+! Modified by Janus Weil <janus@gcc.gnu.org>\n+\n+module m\n+\n+  implicit none\n+\n+  type :: rectangle\n+    real :: width, height\n+    procedure(get_area_ai), pointer :: get_area => get_my_area  ! { dg-error \"Type/rank mismatch\" }\n+  end type rectangle\n+\n+  abstract interface\n+    real function get_area_ai( this )\n+      import                       :: rectangle\n+      class(rectangle), intent(in) :: this\n+    end function get_area_ai\n+  end interface\n+\n+contains\n+\n+  real function get_my_area( this )\n+    type(rectangle), intent(in) :: this\n+    get_my_area = 3.0 * this%width * this%height\n+  end function get_my_area\n+\n+end\n+\n+!-------------------------------------------------------------------------------\n+\n+program p\n+\n+  implicit none\n+\n+  type :: rectangle\n+    real :: width, height\n+    procedure(get_area_ai), pointer :: get_area\n+  end type rectangle\n+\n+  abstract interface\n+    real function get_area_ai (this)\n+      import                       :: rectangle\n+      class(rectangle), intent(in) :: this\n+    end function get_area_ai\n+  end interface\n+\n+  type(rectangle) :: rect\n+\n+  rect  = rectangle (1.0, 2.0, get1)\n+  rect  = rectangle (3.0, 4.0, get2)  ! { dg-error \"Type/rank mismatch\" }\n+\n+contains\n+\n+  real function get1 (this)\n+    class(rectangle), intent(in) :: this\n+    get1 = 1.0 * this%width * this%height\n+  end function get1\n+\n+  real function get2 (this)\n+    type(rectangle), intent(in) :: this\n+    get2 = 2.0 * this%width * this%height\n+  end function get2\n+\n+end\n+\n+\n+! { dg-final { cleanup-modules \"m\" } }"}]}