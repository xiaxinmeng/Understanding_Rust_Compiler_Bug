{"sha": "da719a9f8e8e542e78460c648f36649164666e9d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGE3MTlhOWY4ZThlNTQyZTc4NDYwYzY0OGYzNjY0OTE2NDY2NmU5ZA==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2013-11-26T19:37:01Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2013-11-26T19:37:01Z"}, "message": "openmp-simd-1.c: Cleanup original tree dump.\n\n\t* gcc.dg/gomp/openmp-simd-1.c: Cleanup original tree dump.\n\t* gcc.dg/gomp/openmp-simd-2.c: Ditto.\n\t* g++.dg/gomp/openmp-simd-1.C: Ditto.\n\t* g++.dg/gomp/openmp-simd-2.C: Ditto.\n\t* gfortran.dg/c_loc_test_22.f90: Ditto.\n\t* gcc.dg/tree-ssa/attr-alias-2.c: Cleanup optimized tree dump.\n\t* gcc.dg/tree-ssa/isolate-5.c: Ditto.\n\t* gcc.dg/tree-ssa/pr57361.c: Cleanup dse1 tree dump.\n\t* gcc.dg/vect/vect-124.c: Cleanup vect tree dump.\n\t* gcc.dg/pr57518.c: Cleanup ira rtl dump.\n\t* gcc.dg/tree-prof/cold_partition_label.c: Cleanup saved temps.\n\nFrom-SVN: r205408", "tree": {"sha": "298659085f605549e7b06d0fc62ffa2ab83b2413", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/298659085f605549e7b06d0fc62ffa2ab83b2413"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/da719a9f8e8e542e78460c648f36649164666e9d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da719a9f8e8e542e78460c648f36649164666e9d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da719a9f8e8e542e78460c648f36649164666e9d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da719a9f8e8e542e78460c648f36649164666e9d/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4f01bee519e3deb98f9afc68616960fef75fb338", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f01bee519e3deb98f9afc68616960fef75fb338", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f01bee519e3deb98f9afc68616960fef75fb338"}], "stats": {"total": 44, "additions": 30, "deletions": 14}, "files": [{"sha": "e16308d1d93fc2eaef115138353559d22d60100a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da719a9f8e8e542e78460c648f36649164666e9d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da719a9f8e8e542e78460c648f36649164666e9d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=da719a9f8e8e542e78460c648f36649164666e9d", "patch": "@@ -1,3 +1,17 @@\n+2013-11-26  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* gcc.dg/gomp/openmp-simd-1.c: Cleanup original tree dump.\n+\t* gcc.dg/gomp/openmp-simd-2.c: Ditto.\n+\t* g++.dg/gomp/openmp-simd-1.C: Ditto.\n+\t* g++.dg/gomp/openmp-simd-2.C: Ditto.\n+\t* gfortran.dg/c_loc_test_22.f90: Ditto.\n+\t* gcc.dg/tree-ssa/attr-alias-2.c: Cleanup optimized tree dump.\n+\t* gcc.dg/tree-ssa/isolate-5.c: Ditto.\n+\t* gcc.dg/tree-ssa/pr57361.c: Cleanup dse1 tree dump.\n+\t* gcc.dg/vect/vect-124.c: Cleanup vect tree dump.\n+\t* gcc.dg/pr57518.c: Cleanup ira rtl dump.\n+\t* gcc.dg/tree-prof/cold_partition_label.c: Cleanup saved temps.\n+\n 2013-11-26  Yufeng Zhang  <yufeng.zhang@arm.com>\n \n \t* gcc.target/arm/20131120.c: New test."}, {"sha": "e8e057a6166ffe32e4e3654537d31b2be3234706", "filename": "gcc/testsuite/g++.dg/gomp/openmp-simd-1.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da719a9f8e8e542e78460c648f36649164666e9d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fopenmp-simd-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da719a9f8e8e542e78460c648f36649164666e9d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fopenmp-simd-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fopenmp-simd-1.C?ref=da719a9f8e8e542e78460c648f36649164666e9d", "patch": "@@ -44,3 +44,4 @@ void foo(int n, float *a, float *b)\n /* { dg-final { scan-tree-dump-not \"omp teams\" \"original\" } } */\n /* { dg-final { scan-tree-dump-not \"omp target\" \"original\" } } */\n /* { dg-final { scan-tree-dump-not \"omp parallel\" \"original\" } } */\n+/* { dg-final { cleanup-tree-dump \"original\" } } */"}, {"sha": "ad9b441f21d9d7095e3cb28909d9fa4e4c3bb3b9", "filename": "gcc/testsuite/g++.dg/gomp/openmp-simd-2.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da719a9f8e8e542e78460c648f36649164666e9d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fopenmp-simd-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da719a9f8e8e542e78460c648f36649164666e9d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fopenmp-simd-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fopenmp-simd-2.C?ref=da719a9f8e8e542e78460c648f36649164666e9d", "patch": "@@ -42,3 +42,4 @@ void bar(int n, float *a, float *b)\n /* { dg-final { scan-tree-dump-times \"pragma omp simd safelen\\\\(64\\\\)\" 1 \"original\" } } */\n /* { dg-final { scan-tree-dump-not \"omp parallel\" \"original\" } } */\n /* { dg-final { scan-tree-dump-not \"omp for\" \"original\" } } */\n+/* { dg-final { cleanup-tree-dump \"original\" } } */"}, {"sha": "e8e057a6166ffe32e4e3654537d31b2be3234706", "filename": "gcc/testsuite/gcc.dg/gomp/openmp-simd-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da719a9f8e8e542e78460c648f36649164666e9d/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fopenmp-simd-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da719a9f8e8e542e78460c648f36649164666e9d/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fopenmp-simd-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fopenmp-simd-1.c?ref=da719a9f8e8e542e78460c648f36649164666e9d", "patch": "@@ -44,3 +44,4 @@ void foo(int n, float *a, float *b)\n /* { dg-final { scan-tree-dump-not \"omp teams\" \"original\" } } */\n /* { dg-final { scan-tree-dump-not \"omp target\" \"original\" } } */\n /* { dg-final { scan-tree-dump-not \"omp parallel\" \"original\" } } */\n+/* { dg-final { cleanup-tree-dump \"original\" } } */"}, {"sha": "94afced248f82da9faca436eded82589b543fc8f", "filename": "gcc/testsuite/gcc.dg/gomp/openmp-simd-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da719a9f8e8e542e78460c648f36649164666e9d/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fopenmp-simd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da719a9f8e8e542e78460c648f36649164666e9d/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fopenmp-simd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fopenmp-simd-2.c?ref=da719a9f8e8e542e78460c648f36649164666e9d", "patch": "@@ -40,3 +40,4 @@ void bar(int n, float *a, float *b)\n /* { dg-final { scan-tree-dump-times \"pragma omp simd safelen\\\\(64\\\\)\" 1 \"original\" } } */\n /* { dg-final { scan-tree-dump-not \"omp parallel\" \"original\" } } */\n /* { dg-final { scan-tree-dump-not \"omp for\" \"original\" } } */\n+/* { dg-final { cleanup-tree-dump \"original\" } } */"}, {"sha": "94ef82db8e39dc9c5f451af5b777ada2fe03aaa5", "filename": "gcc/testsuite/gcc.dg/pr57518.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da719a9f8e8e542e78460c648f36649164666e9d/gcc%2Ftestsuite%2Fgcc.dg%2Fpr57518.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da719a9f8e8e542e78460c648f36649164666e9d/gcc%2Ftestsuite%2Fgcc.dg%2Fpr57518.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr57518.c?ref=da719a9f8e8e542e78460c648f36649164666e9d", "patch": "@@ -2,7 +2,6 @@\n \n /* { dg-do compile } */\n /* { dg-options \"-O2 -fdump-rtl-ira\" } */\n-/* { dg-final { scan-rtl-dump-not \"REG_EQUIV\\[^\\n\\]*mem\\[^\\n\\]*\\\"ip\\\".*subreg\" \"ira\" } } */\n \n char ip[10];\n int total;\n@@ -13,3 +12,6 @@ void foo() {\n   t = ip[2];\n   total = t & 0x3;\n }\n+\n+/* { dg-final { scan-rtl-dump-not \"REG_EQUIV\\[^\\n\\]*mem\\[^\\n\\]*\\\"ip\\\".*subreg\" \"ira\" } } */\n+/* { dg-final { cleanup-rtl-dump \"ira\" } } */"}, {"sha": "a03aad7f6d8f0fcb858b4a00b6d90295de4d6ede", "filename": "gcc/testsuite/gcc.dg/tree-prof/cold_partition_label.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da719a9f8e8e542e78460c648f36649164666e9d/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fcold_partition_label.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da719a9f8e8e542e78460c648f36649164666e9d/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fcold_partition_label.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fcold_partition_label.c?ref=da719a9f8e8e542e78460c648f36649164666e9d", "patch": "@@ -1,7 +1,7 @@\n /* Test case to check if function foo gets split and the cold function\n    gets a label.  */\n /* { dg-require-effective-target freorder } */\n-/* { dg-options \"-O2 -freorder-blocks-and-partition --save-temps\" } */\n+/* { dg-options \"-O2 -freorder-blocks-and-partition -save-temps\" } */\n \n #define SIZE 10000\n \n@@ -34,3 +34,5 @@ main (int argc, char *argv[])\n   foo (argc);\n   return 0;\n }\n+\n+/* { dg-final-use { cleanup-saved-temps } } */"}, {"sha": "89477d92f2340805bb8a45c1a6d6b4e2a3a6b859", "filename": "gcc/testsuite/gcc.dg/tree-ssa/attr-alias-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da719a9f8e8e542e78460c648f36649164666e9d/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fattr-alias-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da719a9f8e8e542e78460c648f36649164666e9d/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fattr-alias-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fattr-alias-2.c?ref=da719a9f8e8e542e78460c648f36649164666e9d", "patch": "@@ -8,3 +8,4 @@ main()\n    return b+a;\n }\n /* { dg-final { scan-tree-dump \"return 8\" \"optimized\" } } */\n+/* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "4d01d5c6399420d53a2eda263ca55b4b2f2d7ad5", "filename": "gcc/testsuite/gcc.dg/tree-ssa/isolate-5.c", "status": "modified", "additions": 1, "deletions": 11, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da719a9f8e8e542e78460c648f36649164666e9d/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fisolate-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da719a9f8e8e542e78460c648f36649164666e9d/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fisolate-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fisolate-5.c?ref=da719a9f8e8e542e78460c648f36649164666e9d", "patch": "@@ -1,8 +1,6 @@\n-\n /* { dg-do compile } */ \n /* { dg-options \"-O2 -fdump-tree-isolate-paths -fdump-tree-optimized\" } */\n \n-\n struct demangle_component\n {\n \n@@ -11,15 +9,13 @@ struct demangle_component\n \n };\n \n-\n struct d_info\n {\n   struct demangle_component *comps;\n   int next_comp;\n   int num_comps;\n };\n \n-\n static struct demangle_component *\n d_make_empty (struct d_info *di)\n {\n@@ -31,8 +27,6 @@ d_make_empty (struct d_info *di)\n   return p;\n }\n \n-\n-\n struct demangle_component *\n d_type (struct d_info *di)\n {\n@@ -55,8 +49,4 @@ d_type (struct d_info *di)\n /* { dg-final { scan-tree-dump-times \"\\\\.type\" 1 \"optimized\"} } */\n /* { dg-final { scan-tree-dump-times \"->zzz\" 1 \"isolate-paths\"} } */\n /* { dg-final { cleanup-tree-dump \"isolate-paths\" } } */\n-/* { dg-final { cleanup-tree-dump \"optimized-paths\" } } */\n-\n-\n-\n-\n+/* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "bc265db6ff478c70bfd8c859a5a7adc4bfc3226c", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr57361.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da719a9f8e8e542e78460c648f36649164666e9d/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr57361.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da719a9f8e8e542e78460c648f36649164666e9d/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr57361.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr57361.c?ref=da719a9f8e8e542e78460c648f36649164666e9d", "patch": "@@ -7,3 +7,4 @@ void f (struct A *a) {\n }\n \n /* { dg-final { scan-tree-dump \"Deleted dead store\" \"dse1\"} } */\n+/* { dg-final { cleanup-tree-dump \"dse1\" } } */"}, {"sha": "f659b94baba050c06b8212979fe22873f08e5aba", "filename": "gcc/testsuite/gcc.dg/vect/vect-124.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da719a9f8e8e542e78460c648f36649164666e9d/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-124.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da719a9f8e8e542e78460c648f36649164666e9d/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-124.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-124.c?ref=da719a9f8e8e542e78460c648f36649164666e9d", "patch": "@@ -26,3 +26,5 @@ main ()\n       abort ();\n   return 0;\n }\n+\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "2eea2a5277718a64a4c332dd3ffd3b721eb3ee3b", "filename": "gcc/testsuite/gfortran.dg/c_loc_test_22.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da719a9f8e8e542e78460c648f36649164666e9d/gcc%2Ftestsuite%2Fgfortran.dg%2Fc_loc_test_22.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da719a9f8e8e542e78460c648f36649164666e9d/gcc%2Ftestsuite%2Fgfortran.dg%2Fc_loc_test_22.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fc_loc_test_22.f90?ref=da719a9f8e8e542e78460c648f36649164666e9d", "patch": "@@ -21,4 +21,4 @@ subroutine sub(xxx, yyy)\n ! { dg-final { scan-tree-dump-times \"parm.\\[0-9\\]+.data = \\\\(void .\\\\) &\\\\(.yyy.\\[0-9\\]+\\\\)\\\\\\[D.\\[0-9\\]+ \\\\* 4\\\\\\];\" 1 \"original\" } }\n \n ! { dg-final { scan-tree-dump-times \"D.\\[0-9\\]+ = parm.\\[0-9\\]+.data;\\[^;]+ptr\\[1-4\\] = D.\\[0-9\\]+;\" 4 \"original\" } }\n-! { dg-final { cleanup-tree-dump \"optimized\" } }\n+! { dg-final { cleanup-tree-dump \"original\" } }"}]}