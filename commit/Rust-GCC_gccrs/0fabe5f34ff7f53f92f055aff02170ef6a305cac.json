{"sha": "0fabe5f34ff7f53f92f055aff02170ef6a305cac", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGZhYmU1ZjM0ZmY3ZjUzZjkyZjA1NWFmZjAyMTcwZWY2YTMwNWNhYw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2014-01-20T09:52:21Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2014-01-20T09:52:21Z"}, "message": "re PR target/59880 (ix86_avoid_lea_for_addr is buggy)\n\n\tPR target/59880\n\t* config/i386/i386.c (ix86_avoid_lea_for_addr): Return false\n\tif operands[1] is a REG or ZERO_EXTEND of a REG.\n\n\t* gcc.target/i386/pr59880.c: New test.\n\nFrom-SVN: r206792", "tree": {"sha": "72ae1b0d8c429da9fb93082e460c754929b43049", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/72ae1b0d8c429da9fb93082e460c754929b43049"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0fabe5f34ff7f53f92f055aff02170ef6a305cac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0fabe5f34ff7f53f92f055aff02170ef6a305cac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0fabe5f34ff7f53f92f055aff02170ef6a305cac", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0fabe5f34ff7f53f92f055aff02170ef6a305cac/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6fc00404fa5037b61bd85d1825c2504e70d4992c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6fc00404fa5037b61bd85d1825c2504e70d4992c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6fc00404fa5037b61bd85d1825c2504e70d4992c"}], "stats": {"total": 40, "additions": 38, "deletions": 2}, "files": [{"sha": "ef099b1a5c21689102cb46d6df1f08a0ad4de19c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fabe5f34ff7f53f92f055aff02170ef6a305cac/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fabe5f34ff7f53f92f055aff02170ef6a305cac/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0fabe5f34ff7f53f92f055aff02170ef6a305cac", "patch": "@@ -1,3 +1,9 @@\n+2014-01-20  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/59880\n+\t* config/i386/i386.c (ix86_avoid_lea_for_addr): Return false\n+\tif operands[1] is a REG or ZERO_EXTEND of a REG.\n+\n 2014-01-19  Jan Hubicka  <jh@suse.cz>\n \n \t* varasm.c (compute_reloc_for_constant): Use targetm.binds_local_p."}, {"sha": "9991c30b11c9e0d4f519db8ba0fa7eb6b9862313", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fabe5f34ff7f53f92f055aff02170ef6a305cac/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fabe5f34ff7f53f92f055aff02170ef6a305cac/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=0fabe5f34ff7f53f92f055aff02170ef6a305cac", "patch": "@@ -18159,8 +18159,19 @@ ix86_avoid_lea_for_addr (rtx insn, rtx operands[])\n   if (!TARGET_AVOID_LEA_FOR_ADDR || optimize_function_for_size_p (cfun))\n     return false;\n \n+  /* The \"at least two components\" test below might not catch simple\n+     *mov[sd]i_internal or *zero_extendsidi2 insns if parts.base is\n+     non-NULL and parts.disp is const0_rtx as the only components in\n+     the address, e.g. if the register is %rbp or %r13.  As this\n+     test is much cheaper and moves or zero extensions are the common\n+     case, do this check first.  */\n+  if (REG_P (operands[1])\n+      || (GET_CODE (operands[1]) == ZERO_EXTEND\n+\t  && REG_P (XEXP (operands[1], 0))))\n+    return false;\n+\n   /* Check it is correct to split here.  */\n-  if (!ix86_ok_to_clobber_flags(insn))\n+  if (!ix86_ok_to_clobber_flags (insn))\n     return false;\n \n   ok = ix86_decompose_address (operands[1], &parts);"}, {"sha": "e9f59abf675ebf206a23cf67d3b3e186f03a16c0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fabe5f34ff7f53f92f055aff02170ef6a305cac/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fabe5f34ff7f53f92f055aff02170ef6a305cac/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0fabe5f34ff7f53f92f055aff02170ef6a305cac", "patch": "@@ -1,3 +1,8 @@\n+2014-01-20  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/59880\n+\t* gcc.target/i386/pr59880.c: New test.\n+\n 2014-01-20  Renlin Li  <renlin.li@arm.com>\n \n \t* gcc.dg/pr44194-1.c: Tweak regexp.\n@@ -72,7 +77,7 @@\n 2014-01-17  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR testsuite/58776\n-\t* gcc.dg/tree-ssa-gen-vect-32.c: Add -fno-vect-cost-model to\n+\t* gcc.dg/tree-ssa/gen-vect-32.c: Add -fno-vect-cost-model to\n \tdg-options, use dg-additional-options for i?86/x86_64 to avoid\n \toption duplication.\n "}, {"sha": "5a116925febbfcc0bf30f2c21e6dcf8012a846cd", "filename": "gcc/testsuite/gcc.target/i386/pr59880.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fabe5f34ff7f53f92f055aff02170ef6a305cac/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr59880.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fabe5f34ff7f53f92f055aff02170ef6a305cac/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr59880.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr59880.c?ref=0fabe5f34ff7f53f92f055aff02170ef6a305cac", "patch": "@@ -0,0 +1,14 @@\n+/* PR target/59880 */\n+/* { dg-do compile { target { ! ia32 } } } */\n+/* { dg-options \"-O2 -mtune=silvermont\" } */\n+\n+register unsigned int r13 __asm (\"r13\");\n+unsigned long long\n+foo (void)\n+{\n+  return r13;\n+}\n+\n+/* Ensure we don't emit a useless zero-extension after another\n+   zero-extension.  */\n+/* { dg-final { scan-assembler-not \"%eax, %eax\" } } */"}]}