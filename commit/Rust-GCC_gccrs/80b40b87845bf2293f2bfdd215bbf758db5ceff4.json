{"sha": "80b40b87845bf2293f2bfdd215bbf758db5ceff4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODBiNDBiODc4NDViZjIyOTNmMmJmZGQyMTViYmY3NThkYjVjZWZmNA==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2017-01-21T03:11:49Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2017-01-21T03:11:49Z"}, "message": "rs6000: Small varargs for BE SVR4 (PR61729, PR77850)\n\nThe varargs code for SVR4 puts all (integer) arguments in 4-byte slots.\nWhen it then reads an item from there as something not a multiple of 4\nbytes, it needs to adjust the address if big endian.  We didn't yet do\nthat.\n\nThis fixes the g++.dg/abi/scoped1.C, gcc.dg/compat/scalar-by-value-4,\nand gcc.dg/compat/scalar-return-4 testcases.\n\n\n\tPR target/61729\n\tPR target/77850\n\t* config/rs6000/rs6000.c (rs6000_gimplify_va_arg): Adjust address to\n\tread from, for big endian.\n\nFrom-SVN: r244740", "tree": {"sha": "5c20c044c795bb09eb45f74fd42a8ce07bd44293", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5c20c044c795bb09eb45f74fd42a8ce07bd44293"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/80b40b87845bf2293f2bfdd215bbf758db5ceff4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80b40b87845bf2293f2bfdd215bbf758db5ceff4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/80b40b87845bf2293f2bfdd215bbf758db5ceff4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80b40b87845bf2293f2bfdd215bbf758db5ceff4/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5e0075702264e98580f8487c12ebcf7eb8382d1b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e0075702264e98580f8487c12ebcf7eb8382d1b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5e0075702264e98580f8487c12ebcf7eb8382d1b"}], "stats": {"total": 17, "additions": 17, "deletions": 0}, "files": [{"sha": "254e73949d68465b14bee04c78df2ddd4211e4da", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80b40b87845bf2293f2bfdd215bbf758db5ceff4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80b40b87845bf2293f2bfdd215bbf758db5ceff4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=80b40b87845bf2293f2bfdd215bbf758db5ceff4", "patch": "@@ -1,3 +1,10 @@\n+2017-01-20  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\tPR target/61729\n+\tPR target/77850\n+\t* config/rs6000/rs6000.c (rs6000_gimplify_va_arg): Adjust address to\n+\tread from, for big endian.\n+\n 2017-01-20  Jiong Wang  <jiong.wang@arm.com>\n \n \t* config/aarch64/aarch64-builtins.c (aarch64_init_builtins): Register"}, {"sha": "124f562185d2c6d3392c4913013ae9de324629f2", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80b40b87845bf2293f2bfdd215bbf758db5ceff4/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80b40b87845bf2293f2bfdd215bbf758db5ceff4/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=80b40b87845bf2293f2bfdd215bbf758db5ceff4", "patch": "@@ -13684,6 +13684,7 @@ rs6000_gimplify_va_arg (tree valist, tree type, gimple_seq *pre_p,\n \n   size = int_size_in_bytes (type);\n   rsize = (size + 3) / 4;\n+  int pad = 4 * rsize - size;\n   align = 1;\n \n   machine_mode mode = TYPE_MODE (type);\n@@ -13765,6 +13766,10 @@ rs6000_gimplify_va_arg (tree valist, tree type, gimple_seq *pre_p,\n \t  && mode == SDmode)\n \tt = fold_build_pointer_plus_hwi (t, size);\n \n+      /* Args are passed right-aligned.  */\n+      if (BYTES_BIG_ENDIAN)\n+\tt = fold_build_pointer_plus_hwi (t, pad);\n+\n       gimplify_assign (addr, t, pre_p);\n \n       gimple_seq_add_stmt (pre_p, gimple_build_goto (lab_over));\n@@ -13790,6 +13795,11 @@ rs6000_gimplify_va_arg (tree valist, tree type, gimple_seq *pre_p,\n       t = build2 (BIT_AND_EXPR, TREE_TYPE (t), t,\n \t\t  build_int_cst (TREE_TYPE (t), -align));\n     }\n+\n+  /* Args are passed right-aligned.  */\n+  if (BYTES_BIG_ENDIAN)\n+    t = fold_build_pointer_plus_hwi (t, pad);\n+\n   gimplify_expr (&t, pre_p, NULL, is_gimple_val, fb_rvalue);\n \n   gimplify_assign (unshare_expr (addr), t, pre_p);"}]}