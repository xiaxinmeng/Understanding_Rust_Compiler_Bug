{"sha": "0101137c7c5d612c0624f9a2fd5198b302243f85", "node_id": "C_kwDOANBUbNoAKDAxMDExMzdjN2M1ZDYxMmMwNjI0ZjlhMmZkNTE5OGIzMDIyNDNmODU", "commit": {"author": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2022-10-18T14:57:30Z"}, "committer": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2022-10-18T14:57:30Z"}, "message": "c++ modules: stream non-trailing default targs [PR105045]\n\nThis fixes the below testcase in which we neglect to stream the default\nargument for T only because the subsequent parameter U doesn't also have\na default argument.\n\n\tPR c++/105045\n\ngcc/cp/ChangeLog:\n\n\t* module.cc (trees_out::tpl_parms_fini): Don't assume default\n\ttemplate arguments must be trailing.\n\t(trees_in::tpl_parms_fini): Likewise.\n\ngcc/testsuite/ChangeLog:\n\n\t* g++.dg/modules/pr105045_a.C: New test.\n\t* g++.dg/modules/pr105045_b.C: New test.", "tree": {"sha": "da94788a755b6440d4fe4174afcf9a115edd2529", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/da94788a755b6440d4fe4174afcf9a115edd2529"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0101137c7c5d612c0624f9a2fd5198b302243f85", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0101137c7c5d612c0624f9a2fd5198b302243f85", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0101137c7c5d612c0624f9a2fd5198b302243f85", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0101137c7c5d612c0624f9a2fd5198b302243f85/comments", "author": null, "committer": null, "parents": [{"sha": "c70b44f2c1adf9a9b1c64105d07f177e86139fca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c70b44f2c1adf9a9b1c64105d07f177e86139fca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c70b44f2c1adf9a9b1c64105d07f177e86139fca"}], "stats": {"total": 33, "additions": 19, "deletions": 14}, "files": [{"sha": "2c2f9a9a8cb5233f5a944ae540db0bed1122400b", "filename": "gcc/cp/module.cc", "status": "modified", "additions": 6, "deletions": 14, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0101137c7c5d612c0624f9a2fd5198b302243f85/gcc%2Fcp%2Fmodule.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0101137c7c5d612c0624f9a2fd5198b302243f85/gcc%2Fcp%2Fmodule.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmodule.cc?ref=0101137c7c5d612c0624f9a2fd5198b302243f85", "patch": "@@ -10034,15 +10034,11 @@ trees_out::tpl_parms_fini (tree tmpl, unsigned tpl_levels)\n       tree vec = TREE_VALUE (parms);\n \n       tree_node (TREE_TYPE (vec));\n-      tree dflt = error_mark_node;\n       for (unsigned ix = TREE_VEC_LENGTH (vec); ix--;)\n \t{\n \t  tree parm = TREE_VEC_ELT (vec, ix);\n-\t  if (dflt)\n-\t    {\n-\t      dflt = TREE_PURPOSE (parm);\n-\t      tree_node (dflt);\n-\t    }\n+\t  tree dflt = TREE_PURPOSE (parm);\n+\t  tree_node (dflt);\n \n \t  if (streaming_p ())\n \t    {\n@@ -10072,19 +10068,15 @@ trees_in::tpl_parms_fini (tree tmpl, unsigned tpl_levels)\n        tpl_levels--; parms = TREE_CHAIN (parms))\n     {\n       tree vec = TREE_VALUE (parms);\n-      tree dflt = error_mark_node;\n \n       TREE_TYPE (vec) = tree_node ();\n       for (unsigned ix = TREE_VEC_LENGTH (vec); ix--;)\n \t{\n \t  tree parm = TREE_VEC_ELT (vec, ix);\n-\t  if (dflt)\n-\t    {\n-\t      dflt = tree_node ();\n-\t      if (get_overrun ())\n-\t\treturn false;\n-\t      TREE_PURPOSE (parm) = dflt;\n-\t    }\n+\t  tree dflt = tree_node ();\n+\t  if (get_overrun ())\n+\t    return false;\n+\t  TREE_PURPOSE (parm) = dflt;\n \n \t  tree decl = TREE_VALUE (parm);\n \t  if (TREE_CODE (decl) == TEMPLATE_DECL)"}, {"sha": "597f9294185cd7b33c71ff83a6eb849a456f3e6a", "filename": "gcc/testsuite/g++.dg/modules/pr105045_a.C", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0101137c7c5d612c0624f9a2fd5198b302243f85/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fpr105045_a.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0101137c7c5d612c0624f9a2fd5198b302243f85/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fpr105045_a.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fpr105045_a.C?ref=0101137c7c5d612c0624f9a2fd5198b302243f85", "patch": "@@ -0,0 +1,7 @@\n+// PR c++/105045\n+// { dg-additional-options -fmodules-ts }\n+// { dg-module-cmi pr105045 }\n+\n+export module pr105045;\n+\n+export template<int T=0, class U> void f(U) { }"}, {"sha": "77c94d4c4730e219945b0579ad7728f73458e57f", "filename": "gcc/testsuite/g++.dg/modules/pr105045_b.C", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0101137c7c5d612c0624f9a2fd5198b302243f85/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fpr105045_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0101137c7c5d612c0624f9a2fd5198b302243f85/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fpr105045_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fpr105045_b.C?ref=0101137c7c5d612c0624f9a2fd5198b302243f85", "patch": "@@ -0,0 +1,6 @@\n+// PR c++/105045\n+// { dg-additional-options -fmodules-ts }\n+\n+import pr105045;\n+\n+int main() { f(0); }"}]}