{"sha": "dc4ad6689551f2ed0cb2384856f77fe6b46fc508", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGM0YWQ2Njg5NTUxZjJlZDBjYjIzODQ4NTZmNzdmZTZiNDZmYzUwOA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@vlsi1.ultra.nyu.edu", "date": "2001-12-05T22:59:09Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2001-12-05T22:59:09Z"}, "message": "c-tree.texi (RECORD_TYPE, UNION_TYPE): Expand on definition.\n\n\t* doc/c-tree.texi (RECORD_TYPE, UNION_TYPE): Expand on definition.\n\t(QUAL_UNION_TYPE): New type.\n\nFrom-SVN: r47699", "tree": {"sha": "71104031ba59e2d737cc6d82e1c78ae0941d4967", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/71104031ba59e2d737cc6d82e1c78ae0941d4967"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dc4ad6689551f2ed0cb2384856f77fe6b46fc508", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc4ad6689551f2ed0cb2384856f77fe6b46fc508", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc4ad6689551f2ed0cb2384856f77fe6b46fc508", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc4ad6689551f2ed0cb2384856f77fe6b46fc508/comments", "author": null, "committer": null, "parents": [{"sha": "0974a3b8227d2d410e865528592b4d2516b46c88", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0974a3b8227d2d410e865528592b4d2516b46c88", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0974a3b8227d2d410e865528592b4d2516b46c88"}], "stats": {"total": 39, "additions": 29, "deletions": 10}, "files": [{"sha": "19c5443ab6ba5e9fb5359f5a87b81e0e124e1b89", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc4ad6689551f2ed0cb2384856f77fe6b46fc508/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc4ad6689551f2ed0cb2384856f77fe6b46fc508/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dc4ad6689551f2ed0cb2384856f77fe6b46fc508", "patch": "@@ -1,5 +1,8 @@\n Wed Dec  5 16:03:04 2001  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n+\t* doc/c-tree.texi (RECORD_TYPE, UNION_TYPE): Expand on definition.\n+\t(QUAL_UNION_TYPE): New type.\n+\n \t* varasm.c (output_constant, case ERROR_MARK): New case.\n \n \t* attribs.c (handle_no_check_memory_usage_atribute): Deleted."}, {"sha": "4046d18c4b45ee80849e54494e67cc61439fb716", "filename": "gcc/doc/c-tree.texi", "status": "modified", "additions": 26, "deletions": 10, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc4ad6689551f2ed0cb2384856f77fe6b46fc508/gcc%2Fdoc%2Fc-tree.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc4ad6689551f2ed0cb2384856f77fe6b46fc508/gcc%2Fdoc%2Fc-tree.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fc-tree.texi?ref=dc4ad6689551f2ed0cb2384856f77fe6b46fc508", "patch": "@@ -523,13 +523,32 @@ in the array.\n \n @item RECORD_TYPE\n Used to represent @code{struct} and @code{class} types, as well as\n-pointers to member functions.  If @code{TYPE_PTRMEMFUNC_P} holds, then\n-this type is a pointer-to-member type.  In that case, the\n-@code{TYPE_PTRMEMFUNC_FN_TYPE} is a @code{POINTER_TYPE} pointing to a\n-@code{METHOD_TYPE}.  The @code{METHOD_TYPE} is the type of a function\n-pointed to by the pointer-to-member function.  If\n-@code{TYPE_PTRMEMFUNC_P} does not hold, this type is a class type.  For\n-more information, see @pxref{Classes}.\n+pointers to member functions and similar constructs in other languages.\n+@code{TYPE_FIELDS} contains the items contained in this type, each of\n+which can be a @code{FIELD_DECL}, @code{VAR_DECL}, @code{CONST_DECL}, or\n+@code{TYPE_DECL}.  You may not make any assumptions about the ordering\n+of the fields in the type or whether one or more of them overlap.  If\n+@code{TYPE_PTRMEMFUNC_P} holds, then this type is a pointer-to-member\n+type.  In that case, the @code{TYPE_PTRMEMFUNC_FN_TYPE} is a\n+@code{POINTER_TYPE} pointing to a @code{METHOD_TYPE}.  The\n+@code{METHOD_TYPE} is the type of a function pointed to by the\n+pointer-to-member function.  If @code{TYPE_PTRMEMFUNC_P} does not hold,\n+this type is a class type.  For more information, see @pxref{Classes}.\n+\n+@item UNION_TYPE\n+Used to represent @code{union} types.  Similar to @code{RECORD_TYPE}\n+except that all @code{FIELD_DECL} nodes in @code{TYPE_FIELD} start at\n+bit position zero.\n+\n+@item QUAL_UNION_TYPE\n+Used to represent part of a variant record in Ada.  Similar to\n+@code{UNION_TYPE} except that each @code{FIELD_DECL} has a\n+@code{DECL_QUALIFIER} field, which contains a boolean expression that\n+indicates whether the field is present in the object.  The type will only\n+have one field, so each field's @code{DECL_QUALIFIER} is only evaluated\n+if none of the expressions in the previous fields in @code{TYPE_FIELDS}\n+are nonzero.  Normally these expressions will reference a field in the\n+outer object using a @code{PLACEHOLDER_EXPR}.\n \n @item UNKNOWN_TYPE\n This node is used to represent a type the knowledge of which is\n@@ -556,9 +575,6 @@ base-class.\n Used to represent the @code{__typeof__} extension.  The\n @code{TYPE_FIELDS} is the expression the type of which is being\n represented.\n-\n-@item UNION_TYPE\n-Used to represent @code{union} types.  For more information, @pxref{Classes}.\n @end table\n \n There are variables whose values represent some of the basic types."}]}