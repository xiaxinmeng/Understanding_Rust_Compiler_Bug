{"sha": "222a5b1d6701dd5de06526b4bc4523a807b160c7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjIyYTViMWQ2NzAxZGQ1ZGUwNjUyNmI0YmM0NTIzYTgwN2IxNjBjNw==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@TechFak.Uni-Bielefeld.DE", "date": "2003-10-01T20:45:59Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2003-10-01T20:45:59Z"}, "message": "linkage.m4 (GLIBCXX_CHECK_STDLIB_DECL_AND_LINKAGE_0): Define.\n\n\t* linkage.m4 (GLIBCXX_CHECK_STDLIB_DECL_AND_LINKAGE_0): Define.\n\t(GLIBCXX_CHECK_STDLIB_SUPPORT): Use it to test for lrand48\n\tinstead of drand48.\n\t* acconfig.h (HAVE_DRAND48): Renamed to HAVE_LRAND48.\n\t* crossconfig.m4 (*-freebsd*): Define HAVE_LRAND48 instead of\n\tHAVE_DRAND48.\n\t* config.h.in, configure: Regenerate.\n\t* include/bits/stl_algo.h: Use _GLIBCXX_HAVE_LRAND48 to guard\n\tlrand48 use.\n\nFrom-SVN: r71990", "tree": {"sha": "87d652c1311b337bc04b5fca130c7262b1a2cf59", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/87d652c1311b337bc04b5fca130c7262b1a2cf59"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/222a5b1d6701dd5de06526b4bc4523a807b160c7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/222a5b1d6701dd5de06526b4bc4523a807b160c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/222a5b1d6701dd5de06526b4bc4523a807b160c7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/222a5b1d6701dd5de06526b4bc4523a807b160c7/comments", "author": null, "committer": null, "parents": [{"sha": "64177a6d2fa28f4dcb1ade1fcd6164809fcff9ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64177a6d2fa28f4dcb1ade1fcd6164809fcff9ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/64177a6d2fa28f4dcb1ade1fcd6164809fcff9ad"}], "stats": {"total": 201, "additions": 188, "deletions": 13}, "files": [{"sha": "4bf9102d8bb711ca5c1aeeac5025c3f7ee47c6b5", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/222a5b1d6701dd5de06526b4bc4523a807b160c7/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/222a5b1d6701dd5de06526b4bc4523a807b160c7/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=222a5b1d6701dd5de06526b4bc4523a807b160c7", "patch": "@@ -1,3 +1,15 @@\n+2003-10-01  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n+\n+\t* linkage.m4 (GLIBCXX_CHECK_STDLIB_DECL_AND_LINKAGE_0): Define.\n+\t(GLIBCXX_CHECK_STDLIB_SUPPORT): Use it to test for lrand48\n+\tinstead of drand48.\n+\t* acconfig.h (HAVE_DRAND48): Renamed to HAVE_LRAND48.\n+\t* crossconfig.m4 (*-freebsd*): Define HAVE_LRAND48 instead of\n+\tHAVE_DRAND48.\n+\t* config.h.in, configure: Regenerate.\n+\t* include/bits/stl_algo.h: Use _GLIBCXX_HAVE_LRAND48 to guard\n+\tlrand48 use.\n+\n 2003-10-01  Nathan Myers  <ncm@cantrip.org>\n \n \t* include/bits/locale_facets.tcc (time_put::put): Avoid"}, {"sha": "1532bb2d1dc0296119fe430164e29b41adec3738", "filename": "libstdc++-v3/acconfig.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/222a5b1d6701dd5de06526b4bc4523a807b160c7/libstdc%2B%2B-v3%2Facconfig.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/222a5b1d6701dd5de06526b4bc4523a807b160c7/libstdc%2B%2B-v3%2Facconfig.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facconfig.h?ref=222a5b1d6701dd5de06526b4bc4523a807b160c7", "patch": "@@ -63,8 +63,8 @@\n // Define if gthr-default.h exists (meaning that threading support is enabled).\n #undef HAVE_GTHR_DEFAULT\n \n-// Define if drand48 exists.\n-#undef HAVE_DRAND48\n+// Define if lrand48 exists.\n+#undef HAVE_LRAND48\n \n // Define if getpagesize exists.\n #undef HAVE_GETPAGESIZE"}, {"sha": "b9a9d146354b8c685eee2c71e8f91206bcd07338", "filename": "libstdc++-v3/config.h.in", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/222a5b1d6701dd5de06526b4bc4523a807b160c7/libstdc%2B%2B-v3%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/222a5b1d6701dd5de06526b4bc4523a807b160c7/libstdc%2B%2B-v3%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig.h.in?ref=222a5b1d6701dd5de06526b4bc4523a807b160c7", "patch": "@@ -64,8 +64,8 @@\n // Define if gthr-default.h exists (meaning that threading support is enabled).\n #undef HAVE_GTHR_DEFAULT\n \n-// Define if drand48 exists.\n-#undef HAVE_DRAND48\n+// Define if lrand48 exists.\n+#undef HAVE_LRAND48\n \n // Define if getpagesize exists.\n #undef HAVE_GETPAGESIZE\n@@ -221,8 +221,8 @@\n /* Define to 1 if you have the `cosl' function. */\n #undef HAVE_COSL\n \n-/* Define to 1 if you have the `drand48' function. */\n-#undef HAVE_DRAND48\n+/* Define to 1 if you have the `lrand48' function. */\n+#undef HAVE_LRAND48\n \n /* Define to 1 if you have the <endian.h> header file. */\n #undef HAVE_ENDIAN_H"}, {"sha": "4bf083265e90656cbf13811ba60fd566e8c99fe6", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 137, "deletions": 3, "changes": 140, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/222a5b1d6701dd5de06526b4bc4523a807b160c7/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/222a5b1d6701dd5de06526b4bc4523a807b160c7/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=222a5b1d6701dd5de06526b4bc4523a807b160c7", "patch": "@@ -26140,7 +26140,72 @@ done\n   fi\n \n \n-for ac_func in drand48\n+  echo \"$as_me:$LINENO: checking for lrand48 declaration\" >&5\n+echo $ECHO_N \"checking for lrand48 declaration... $ECHO_C\" >&6\n+  if test x${glibcxx_cv_func_lrand48_use+set} != xset; then\n+    if test \"${glibcxx_cv_func_lrand48_use+set}\" = set; then\n+  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n+else\n+\n+\n+\n+      ac_ext=cc\n+ac_cpp='$CXXCPP $CPPFLAGS'\n+ac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n+ac_link='$CXX -o conftest$ac_exeext $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n+ac_compiler_gnu=$ac_cv_cxx_compiler_gnu\n+\n+      cat >conftest.$ac_ext <<_ACEOF\n+#line $LINENO \"configure\"\n+/* confdefs.h.  */\n+_ACEOF\n+cat confdefs.h >>conftest.$ac_ext\n+cat >>conftest.$ac_ext <<_ACEOF\n+/* end confdefs.h.  */\n+#include <stdlib.h>\n+int\n+main ()\n+{\n+ lrand48();\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+rm -f conftest.$ac_objext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n+  (eval $ac_compile) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } &&\n+         { ac_try='test -s conftest.$ac_objext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+  glibcxx_cv_func_lrand48_use=yes\n+else\n+  echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+glibcxx_cv_func_lrand48_use=no\n+fi\n+rm -f conftest.$ac_objext conftest.$ac_ext\n+      ac_ext=c\n+ac_cpp='$CPP $CPPFLAGS'\n+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n+ac_compiler_gnu=$ac_cv_c_compiler_gnu\n+\n+\n+fi\n+\n+  fi\n+  echo \"$as_me:$LINENO: result: $glibcxx_cv_func_lrand48_use\" >&5\n+echo \"${ECHO_T}$glibcxx_cv_func_lrand48_use\" >&6\n+  if test x$glibcxx_cv_func_lrand48_use = x\"yes\"; then\n+\n+for ac_func in lrand48\n do\n as_ac_var=`echo \"ac_cv_func_$ac_func\" | $as_tr_sh`\n echo \"$as_me:$LINENO: checking for $ac_func\" >&5\n@@ -26228,6 +26293,8 @@ _ACEOF\n fi\n done\n \n+  fi\n+\n \n   CXXFLAGS=\"$ac_save_CXXFLAGS\"\n \n@@ -46100,7 +46167,72 @@ done\n   fi\n \n \n-for ac_func in drand48\n+  echo \"$as_me:$LINENO: checking for lrand48 declaration\" >&5\n+echo $ECHO_N \"checking for lrand48 declaration... $ECHO_C\" >&6\n+  if test x${glibcxx_cv_func_lrand48_use+set} != xset; then\n+    if test \"${glibcxx_cv_func_lrand48_use+set}\" = set; then\n+  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n+else\n+\n+\n+\n+      ac_ext=cc\n+ac_cpp='$CXXCPP $CPPFLAGS'\n+ac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n+ac_link='$CXX -o conftest$ac_exeext $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n+ac_compiler_gnu=$ac_cv_cxx_compiler_gnu\n+\n+      cat >conftest.$ac_ext <<_ACEOF\n+#line $LINENO \"configure\"\n+/* confdefs.h.  */\n+_ACEOF\n+cat confdefs.h >>conftest.$ac_ext\n+cat >>conftest.$ac_ext <<_ACEOF\n+/* end confdefs.h.  */\n+#include <stdlib.h>\n+int\n+main ()\n+{\n+ lrand48();\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+rm -f conftest.$ac_objext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n+  (eval $ac_compile) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } &&\n+         { ac_try='test -s conftest.$ac_objext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+  glibcxx_cv_func_lrand48_use=yes\n+else\n+  echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+glibcxx_cv_func_lrand48_use=no\n+fi\n+rm -f conftest.$ac_objext conftest.$ac_ext\n+      ac_ext=c\n+ac_cpp='$CPP $CPPFLAGS'\n+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n+ac_compiler_gnu=$ac_cv_c_compiler_gnu\n+\n+\n+fi\n+\n+  fi\n+  echo \"$as_me:$LINENO: result: $glibcxx_cv_func_lrand48_use\" >&5\n+echo \"${ECHO_T}$glibcxx_cv_func_lrand48_use\" >&6\n+  if test x$glibcxx_cv_func_lrand48_use = x\"yes\"; then\n+\n+for ac_func in lrand48\n do\n as_ac_var=`echo \"ac_cv_func_$ac_func\" | $as_tr_sh`\n echo \"$as_me:$LINENO: checking for $ac_func\" >&5\n@@ -46188,6 +46320,8 @@ _ACEOF\n fi\n done\n \n+  fi\n+\n \n   CXXFLAGS=\"$ac_save_CXXFLAGS\"\n \n@@ -48730,7 +48864,7 @@ echo \"${ECHO_T}$enable_wchar_t\" >&6\n _ACEOF\n \n     cat >>confdefs.h <<\\_ACEOF\n-#define HAVE_DRAND48 1\n+#define HAVE_LRAND48 1\n _ACEOF\n \n     cat >>confdefs.h <<\\_ACEOF"}, {"sha": "2da803892636fa354f62b450e48cb58fc59724c7", "filename": "libstdc++-v3/crossconfig.m4", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/222a5b1d6701dd5de06526b4bc4523a807b160c7/libstdc%2B%2B-v3%2Fcrossconfig.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/222a5b1d6701dd5de06526b4bc4523a807b160c7/libstdc%2B%2B-v3%2Fcrossconfig.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fcrossconfig.m4?ref=222a5b1d6701dd5de06526b4bc4523a807b160c7", "patch": "@@ -54,7 +54,7 @@ case \"${host}\" in\n     GLIBCXX_CHECK_COMPLEX_MATH_SUPPORT\n     GLIBCXX_CHECK_WCHAR_T_SUPPORT\n     AC_DEFINE(HAVE_LC_MESSAGES)\n-    AC_DEFINE(HAVE_DRAND48)\n+    AC_DEFINE(HAVE_LRAND48)\n     AC_DEFINE(HAVE_GETPAGESIZE)\n     AC_DEFINE(HAVE_SETENV)\n     AC_DEFINE(HAVE_SIGSETJMP)"}, {"sha": "062550cc98b39d73cfd7b8c3e8ebb821ace209bb", "filename": "libstdc++-v3/include/bits/stl_algo.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/222a5b1d6701dd5de06526b4bc4523a807b160c7/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algo.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/222a5b1d6701dd5de06526b4bc4523a807b160c7/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algo.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algo.h?ref=222a5b1d6701dd5de06526b4bc4523a807b160c7", "patch": "@@ -1612,7 +1612,7 @@ namespace std\n     inline _Distance\n     __random_number(_Distance __n)\n     {\n-  #ifdef _GLIBCXX_HAVE_DRAND48\n+  #ifdef _GLIBCXX_HAVE_LRAND48\n       return lrand48() % __n;\n   #else\n       return rand() % __n;"}, {"sha": "9597635359cf4aa85fd699b9b669f28a04fd49a0", "filename": "libstdc++-v3/linkage.m4", "status": "modified", "additions": 31, "deletions": 2, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/222a5b1d6701dd5de06526b4bc4523a807b160c7/libstdc%2B%2B-v3%2Flinkage.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/222a5b1d6701dd5de06526b4bc4523a807b160c7/libstdc%2B%2B-v3%2Flinkage.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flinkage.m4?ref=222a5b1d6701dd5de06526b4bc4523a807b160c7", "patch": "@@ -166,6 +166,35 @@ AC_DEFUN(GLIBCXX_CHECK_MATH_DECL_AND_LINKAGE_3, [\n ])\n \n \n+dnl\n+dnl Check to see if the (stdlib function) argument passed is\n+dnl 1) declared when using the c++ compiler\n+dnl 2) has \"C\" linkage\n+dnl\n+dnl argument 1 is name of function to check\n+dnl\n+dnl ASSUMES argument is a stdlib function without parameters\n+dnl\n+dnl GLIBCXX_CHECK_STDLIB_DECL_AND_LINKAGE_0\n+AC_DEFUN(GLIBCXX_CHECK_STDLIB_DECL_AND_LINKAGE_0, [\n+  AC_MSG_CHECKING([for $1 declaration])\n+  if test x${glibcxx_cv_func_$1_use+set} != xset; then\n+    AC_CACHE_VAL(glibcxx_cv_func_$1_use, [\n+      AC_LANG_SAVE\n+      AC_LANG_CPLUSPLUS\n+      AC_TRY_COMPILE([#include <stdlib.h>],\n+                     [ $1();],\n+                     [glibcxx_cv_func_$1_use=yes], [glibcxx_cv_func_$1_use=no])\n+      AC_LANG_RESTORE\n+    ])\n+  fi\n+  AC_MSG_RESULT($glibcxx_cv_func_$1_use)\n+  if test x$glibcxx_cv_func_$1_use = x\"yes\"; then\n+    AC_CHECK_FUNCS($1)\n+  fi\n+])\n+\n+\n dnl\n dnl Check to see if the (stdlib function) argument passed is\n dnl 1) declared when using the c++ compiler\n@@ -342,7 +371,7 @@ dnl This might seem like overkill but experience has shown that it's not...\n dnl\n dnl Define HAVE_STRTOLD if \"strtold\" is declared and links\n dnl Define HAVE_STRTOF if \"strtof\" is declared and links\n-dnl Define HAVE_DRAND48 if \"drand48\" is declared and links\n+dnl Define HAVE_LRAND48 if \"lrand48\" is declared and links\n dnl\n dnl GLIBCXX_CHECK_STDLIB_SUPPORT\n AC_DEFUN(GLIBCXX_CHECK_STDLIB_SUPPORT, [\n@@ -352,7 +381,7 @@ AC_DEFUN(GLIBCXX_CHECK_STDLIB_SUPPORT, [\n \n   GLIBCXX_CHECK_STDLIB_DECL_AND_LINKAGE_2(strtold)\n   GLIBCXX_CHECK_STDLIB_DECL_AND_LINKAGE_2(strtof)\n-  AC_CHECK_FUNCS(drand48)\n+  GLIBCXX_CHECK_STDLIB_DECL_AND_LINKAGE_0(lrand48)\n \n   CXXFLAGS=\"$ac_save_CXXFLAGS\"\n ])"}]}