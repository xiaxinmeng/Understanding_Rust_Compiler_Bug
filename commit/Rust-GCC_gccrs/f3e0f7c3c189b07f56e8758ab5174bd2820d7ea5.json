{"sha": "f3e0f7c3c189b07f56e8758ab5174bd2820d7ea5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjNlMGY3YzNjMTg5YjA3ZjU2ZTg3NThhYjUxNzRiZDI4MjBkN2VhNQ==", "commit": {"author": {"name": "Bob Duff", "email": "duff@adacore.com", "date": "2016-07-04T12:30:44Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2016-07-04T12:30:44Z"}, "message": "sem_attr.adb (Eval_Attribute): The code was assuming that X'Enum_Rep...\n\n2016-07-04  Bob Duff  <duff@adacore.com>\n\n\t* sem_attr.adb (Eval_Attribute): The code was assuming\n\tthat X'Enum_Rep, where X denotes a constant, can be constant\n\tfolded. Fix it so it makes that assumption only when X denotes\n\ta STATIC constant.\n\nFrom-SVN: r237975", "tree": {"sha": "a592f2515fda7b4c960e76213d0fe3682e6aeaeb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a592f2515fda7b4c960e76213d0fe3682e6aeaeb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f3e0f7c3c189b07f56e8758ab5174bd2820d7ea5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3e0f7c3c189b07f56e8758ab5174bd2820d7ea5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f3e0f7c3c189b07f56e8758ab5174bd2820d7ea5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3e0f7c3c189b07f56e8758ab5174bd2820d7ea5/comments", "author": {"login": "bobduff", "id": 29099567, "node_id": "MDQ6VXNlcjI5MDk5NTY3", "avatar_url": "https://avatars.githubusercontent.com/u/29099567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bobduff", "html_url": "https://github.com/bobduff", "followers_url": "https://api.github.com/users/bobduff/followers", "following_url": "https://api.github.com/users/bobduff/following{/other_user}", "gists_url": "https://api.github.com/users/bobduff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bobduff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bobduff/subscriptions", "organizations_url": "https://api.github.com/users/bobduff/orgs", "repos_url": "https://api.github.com/users/bobduff/repos", "events_url": "https://api.github.com/users/bobduff/events{/privacy}", "received_events_url": "https://api.github.com/users/bobduff/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "aceb8afe14b10882ca094b24d7b0467a13dfeea7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aceb8afe14b10882ca094b24d7b0467a13dfeea7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aceb8afe14b10882ca094b24d7b0467a13dfeea7"}], "stats": {"total": 69, "additions": 45, "deletions": 24}, "files": [{"sha": "9af2d5f8a809d58f21d4864b6e6d2eccfac16a32", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3e0f7c3c189b07f56e8758ab5174bd2820d7ea5/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3e0f7c3c189b07f56e8758ab5174bd2820d7ea5/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=f3e0f7c3c189b07f56e8758ab5174bd2820d7ea5", "patch": "@@ -1,3 +1,10 @@\n+2016-07-04  Bob Duff  <duff@adacore.com>\n+\n+\t* sem_attr.adb (Eval_Attribute): The code was assuming\n+\tthat X'Enum_Rep, where X denotes a constant, can be constant\n+\tfolded. Fix it so it makes that assumption only when X denotes\n+\ta STATIC constant.\n+\n 2016-07-04  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_ch4.adb (Compatible_Types_In_Predicate): New function"}, {"sha": "389f83004df77d39ffee2f9126652d778cd66d44", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 38, "deletions": 24, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3e0f7c3c189b07f56e8758ab5174bd2820d7ea5/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3e0f7c3c189b07f56e8758ab5174bd2820d7ea5/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=f3e0f7c3c189b07f56e8758ab5174bd2820d7ea5", "patch": "@@ -7424,35 +7424,49 @@ package body Sem_Attr is\n          elsif Id = Attribute_Enum_Rep then\n             if Is_Entity_Name (P) then\n \n-               --  The prefix denotes a constant or an enumeration literal, the\n-               --  attribute can be folded. A generated loop variable for an\n-               --  iterator is a constant, but cannot be constant-folded.\n+               declare\n+                  Enum_Expr : Node_Id;\n+                  --  The enumeration-type expression of interest\n+               begin\n+                  --  P'Enum_Rep case\n \n-               if Ekind (Entity (P)) = E_Enumeration_Literal\n-                 or else\n-                   (Ekind (Entity (P)) = E_Constant\n-                     and then Ekind (Scope (Entity (P))) /= E_Loop)\n-               then\n-                  P_Entity := Etype (P);\n+                  if Ekind_In\n+                    (Entity (P), E_Constant, E_Enumeration_Literal)\n+                  then\n+                     Enum_Expr := P;\n \n-               --  The prefix denotes an enumeration type. Folding can occur\n-               --  when the argument is a constant or an enumeration literal.\n+                  --  Enum_Type'Enum_Rep (E1) case\n \n-               elsif Is_Enumeration_Type (Entity (P))\n-                 and then Present (E1)\n-                 and then Is_Entity_Name (E1)\n-                 and then Ekind_In (Entity (E1), E_Constant,\n-                                                 E_Enumeration_Literal)\n-               then\n-                  P_Entity := Etype (P);\n+                  elsif Is_Enumeration_Type (Entity (P)) then\n+                     Enum_Expr := E1;\n \n-               --  Otherwise the attribute must be expanded into a conversion\n-               --  and evaluated at run time.\n+                  --  Otherwise the attribute must be expanded into a\n+                  --  conversion and evaluated at run time.\n \n-               else\n-                  Check_Expressions;\n-                  return;\n-               end if;\n+                  else\n+                     Check_Expressions;\n+                     return;\n+                  end if;\n+\n+                  --  We can fold if the expression is an enumeration\n+                  --  literal, or if it denotes a static constant.\n+\n+                  if Nkind (Enum_Expr) in N_Has_Entity\n+                    and then (Ekind (Entity (Enum_Expr)) =\n+                                E_Enumeration_Literal\n+                      or else\n+                       (Ekind (Entity (Enum_Expr)) = E_Constant\n+                          and then Nkind (Parent (Entity (Enum_Expr))) =\n+                                     N_Object_Declaration\n+                          and then Is_Static_Expression\n+                                     (Expression (Parent (Entity (P))))))\n+                  then\n+                     P_Entity := Etype (P);\n+                  else\n+                     Check_Expressions;\n+                     return;\n+                  end if;\n+               end;\n \n             --  Otherwise the attribute is illegal, do not attempt to perform\n             --  any kind of folding."}]}