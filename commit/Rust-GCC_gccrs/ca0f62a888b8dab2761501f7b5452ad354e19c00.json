{"sha": "ca0f62a888b8dab2761501f7b5452ad354e19c00", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2EwZjYyYTg4OGI4ZGFiMjc2MTUwMWY3YjU0NTJhZDM1NGUxOWMwMA==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2013-06-12T14:41:12Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2013-06-12T14:41:12Z"}, "message": "cgraph.c (verify_edge_corresponds_to_fndecl): Be lax about decl has when in streaming stage.\n\n\n\t* cgraph.c (verify_edge_corresponds_to_fndecl): Be lax about\n\tdecl has when in streaming stage.\n\t* lto-symtab.c (lto_symtab_merge_symbols): Likewise.\n\t* cgraph.h (cgraph_state): Add CGRAPH_LTO_STREAMING.\n\n\t* lto.c (read_cgraph_and_symbols): Set cgraph into streaming state.\n\nFrom-SVN: r200018", "tree": {"sha": "d78ee153e238e22c85b9ff00c282bd8ba1090418", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d78ee153e238e22c85b9ff00c282bd8ba1090418"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ca0f62a888b8dab2761501f7b5452ad354e19c00", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca0f62a888b8dab2761501f7b5452ad354e19c00", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca0f62a888b8dab2761501f7b5452ad354e19c00", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca0f62a888b8dab2761501f7b5452ad354e19c00/comments", "author": null, "committer": null, "parents": [{"sha": "5c3decfd177102539ce87838154f30d01e30a41b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c3decfd177102539ce87838154f30d01e30a41b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c3decfd177102539ce87838154f30d01e30a41b"}], "stats": {"total": 38, "additions": 32, "deletions": 6}, "files": [{"sha": "bd2d37b3eaac90b88da179597e5864a3041d4e73", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca0f62a888b8dab2761501f7b5452ad354e19c00/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca0f62a888b8dab2761501f7b5452ad354e19c00/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ca0f62a888b8dab2761501f7b5452ad354e19c00", "patch": "@@ -1,3 +1,10 @@\n+2013-06-12  Jan Hubicka  <jh@suse.cz>\n+\n+\t* cgraph.c (verify_edge_corresponds_to_fndecl): Be lax about\n+\tdecl has when in streaming stage.\n+\t* lto-symtab.c (lto_symtab_merge_symbols): Likewise.\n+\t* cgraph.h (cgraph_state): Add CGRAPH_LTO_STREAMING.\n+\n 2013-06-12  Roland Stigge <stigge@antcom.de>\n \n \tPR target/57578"}, {"sha": "797d58a00200297ca811ba477dab043dd74d1963", "filename": "gcc/cgraph.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca0f62a888b8dab2761501f7b5452ad354e19c00/gcc%2Fcgraph.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca0f62a888b8dab2761501f7b5452ad354e19c00/gcc%2Fcgraph.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.c?ref=ca0f62a888b8dab2761501f7b5452ad354e19c00", "patch": "@@ -2291,6 +2291,8 @@ verify_edge_corresponds_to_fndecl (struct cgraph_edge *e, tree decl)\n \n   if (!decl || e->callee->global.inlined_to)\n     return false;\n+  if (cgraph_state == CGRAPH_LTO_STREAMING)\n+    return false;\n   node = cgraph_get_node (decl);\n \n   /* We do not know if a node from a different partition is an alias or what it"}, {"sha": "62591890182dc82df7fe10a5711fb8ab8d603048", "filename": "gcc/cgraph.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca0f62a888b8dab2761501f7b5452ad354e19c00/gcc%2Fcgraph.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca0f62a888b8dab2761501f7b5452ad354e19c00/gcc%2Fcgraph.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.h?ref=ca0f62a888b8dab2761501f7b5452ad354e19c00", "patch": "@@ -551,6 +551,8 @@ enum cgraph_state\n   CGRAPH_STATE_PARSING,\n   /* Callgraph is being constructed.  It is safe to add new functions.  */\n   CGRAPH_STATE_CONSTRUCTION,\n+  /* Callgraph is being at LTO time.  */\n+  CGRAPH_LTO_STREAMING,\n   /* Callgraph is built and IPA passes are being run.  */\n   CGRAPH_STATE_IPA,\n   /* Callgraph is built and all functions are transformed to SSA form.  */"}, {"sha": "257280cb9703622d6f8446c431698533f64bd6cb", "filename": "gcc/lto-symtab.c", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca0f62a888b8dab2761501f7b5452ad354e19c00/gcc%2Flto-symtab.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca0f62a888b8dab2761501f7b5452ad354e19c00/gcc%2Flto-symtab.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-symtab.c?ref=ca0f62a888b8dab2761501f7b5452ad354e19c00", "patch": "@@ -587,7 +587,7 @@ lto_symtab_merge_symbols (void)\n \t also re-populate the hash translating decls into symtab nodes*/\n       FOR_EACH_SYMBOL (node)\n \t{\n-\t  cgraph_node *cnode;\n+\t  cgraph_node *cnode, *cnode2;\n \t  if (!node->symbol.analyzed && node->symbol.alias_target)\n \t    {\n \t      symtab_node tgt = symtab_node_for_asm (node->symbol.alias_target);\n@@ -596,10 +596,17 @@ lto_symtab_merge_symbols (void)\n \t\tsymtab_resolve_alias (node, tgt);\n \t    }\n \t  node->symbol.aux = NULL;\n+\t  \n \t  if (!(cnode = dyn_cast <cgraph_node> (node))\n \t      || !cnode->clone_of\n \t      || cnode->clone_of->symbol.decl != cnode->symbol.decl)\n-\t    symtab_insert_node_to_hashtable ((symtab_node)node);\n+\t    {\n+\t      if (cnode && DECL_BUILT_IN (node->symbol.decl)\n+\t\t  && (cnode2 = cgraph_get_node (node->symbol.decl))\n+\t\t  && cnode2 != cnode)\n+\t\tlto_cgraph_replace_node (cnode2, cnode);\n+\t      symtab_insert_node_to_hashtable ((symtab_node)node);\n+\t    }\n \t}\n     }\n }"}, {"sha": "4b36f440ca42f90f31720338e078e249790a88d8", "filename": "gcc/lto/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca0f62a888b8dab2761501f7b5452ad354e19c00/gcc%2Flto%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca0f62a888b8dab2761501f7b5452ad354e19c00/gcc%2Flto%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2FChangeLog?ref=ca0f62a888b8dab2761501f7b5452ad354e19c00", "patch": "@@ -1,3 +1,7 @@\n+2013-06-12  Jan Hubicka  <jh@suse.cz>\n+\n+\t* lto.c (read_cgraph_and_symbols): Set cgraph into streaming state.\n+\n 2013-06-12  Jan Hubicka  <jh@suse.cz>\n \n \t* lto.c (register_resolution): Take lto_file_data argument."}, {"sha": "c756c31a19c2d157ef4d0aa836b55a0655ff0a7f", "filename": "gcc/lto/lto.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca0f62a888b8dab2761501f7b5452ad354e19c00/gcc%2Flto%2Flto.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca0f62a888b8dab2761501f7b5452ad354e19c00/gcc%2Flto%2Flto.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2Flto.c?ref=ca0f62a888b8dab2761501f7b5452ad354e19c00", "patch": "@@ -2891,6 +2891,7 @@ read_cgraph_and_symbols (unsigned nfiles, const char **fnames)\n       /* True, since the plugin splits the archives.  */\n       gcc_assert (num_objects == nfiles);\n     }\n+  cgraph_state = CGRAPH_LTO_STREAMING;\n \n   tree_with_vars = htab_create_ggc (101, htab_hash_pointer, htab_eq_pointer,\n \t\t\t\t    NULL);"}, {"sha": "c9f32d5635126053fbf6fc4d98049f2ff718da35", "filename": "gcc/symtab.c", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca0f62a888b8dab2761501f7b5452ad354e19c00/gcc%2Fsymtab.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca0f62a888b8dab2761501f7b5452ad354e19c00/gcc%2Fsymtab.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsymtab.c?ref=ca0f62a888b8dab2761501f7b5452ad354e19c00", "patch": "@@ -647,11 +647,14 @@ verify_symtab_base (symtab_node node)\n       error_found = true;\n     }\n    \n-  hashed_node = symtab_get_node (node->symbol.decl);\n-  if (!hashed_node)\n+  if (cgraph_state != CGRAPH_LTO_STREAMING)\n     {\n-      error (\"node not found in symtab decl hashtable\");\n-      error_found = true;\n+      hashed_node = symtab_get_node (node->symbol.decl);\n+      if (!hashed_node)\n+\t{\n+\t  error (\"node not found in symtab decl hashtable\");\n+\t  error_found = true;\n+\t}\n     }\n   if (assembler_name_hash)\n     {"}]}