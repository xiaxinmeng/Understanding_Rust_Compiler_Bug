{"sha": "be3ec667e806bb59effe4cce97c5209c2df2d191", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmUzZWM2NjdlODA2YmI1OWVmZmU0Y2NlOTdjNTIwOWMyZGYyZDE5MQ==", "commit": {"author": {"name": "Janis Johnson", "email": "janis187@us.ibm.com", "date": "2004-07-23T18:33:19Z"}, "committer": {"name": "Janis Johnson", "email": "janis@gcc.gnu.org", "date": "2004-07-23T18:33:19Z"}, "message": "altivec.h (vec_stvewx, [...]): Use specific pointer types.\n\n2004-07-23  Janis Johnson  <janis187@us.ibm.com>\n\n\t* config/rs6000/altivec.h (vec_stvewx, vec_stvehx, vec_stvebx): Use\n\tspecific pointer types.\n\nFrom-SVN: r85091", "tree": {"sha": "55bc58d173234fbe83e2827b4f560c5526994df9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/55bc58d173234fbe83e2827b4f560c5526994df9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/be3ec667e806bb59effe4cce97c5209c2df2d191", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be3ec667e806bb59effe4cce97c5209c2df2d191", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be3ec667e806bb59effe4cce97c5209c2df2d191", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be3ec667e806bb59effe4cce97c5209c2df2d191/comments", "author": null, "committer": null, "parents": [{"sha": "e0b9f33575839952b119bf9c9e7e8c7c97bd9588", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0b9f33575839952b119bf9c9e7e8c7c97bd9588", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e0b9f33575839952b119bf9c9e7e8c7c97bd9588"}], "stats": {"total": 101, "additions": 84, "deletions": 17}, "files": [{"sha": "1a64c956037a9743a737a19c734871c257a7815e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be3ec667e806bb59effe4cce97c5209c2df2d191/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be3ec667e806bb59effe4cce97c5209c2df2d191/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=be3ec667e806bb59effe4cce97c5209c2df2d191", "patch": "@@ -1,5 +1,8 @@\n 2004-07-23  Janis Johnson  <janis187@us.ibm.com>\n \n+\t* config/rs6000/altivec.h (vec_stvewx, vec_stvehx, vec_stvebx): Use\n+\tspecific pointer types.\n+\n \t* config/rs6000/altivec.h (vec_vadduwm): (vec_vadduwm, vec_vadduhm,\n \tvec_vaddubm, vec_vsubuwm, vec_vsubuhm, vec_vsububm): Fix types used\n \tfor vector bool and/or vector pixel, add C++ and C missing support."}, {"sha": "8d6ea1c724d2fbfa11e9107d1311c9d69a22d357", "filename": "gcc/config/rs6000/altivec.h", "status": "modified", "additions": 81, "deletions": 17, "changes": 98, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be3ec667e806bb59effe4cce97c5209c2df2d191/gcc%2Fconfig%2Frs6000%2Faltivec.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be3ec667e806bb59effe4cce97c5209c2df2d191/gcc%2Fconfig%2Frs6000%2Faltivec.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faltivec.h?ref=be3ec667e806bb59effe4cce97c5209c2df2d191", "patch": "@@ -5626,47 +5626,95 @@ vec_ste (vector bool int a1, int a2, unsigned int *a3)\n /* vec_stvewx */\n \n inline void\n-vec_stvewx (vector float a1, int a2, void *a3)\n+vec_stvewx (vector float a1, int a2, float *a3)\n {\n   __builtin_altivec_stvewx ((vector signed int) a1, a2, (void *) a3);\n }\n \n inline void\n-vec_stvewx (vector signed int a1, int a2, void *a3)\n+vec_stvewx (vector signed int a1, int a2, int *a3)\n {\n   __builtin_altivec_stvewx ((vector signed int) a1, a2, (void *) a3);\n }\n \n inline void\n-vec_stvewx (vector unsigned int a1, int a2, void *a3)\n+vec_stvewx (vector unsigned int a1, int a2, unsigned int *a3)\n+{\n+  __builtin_altivec_stvewx ((vector signed int) a1, a2, (void *) a3);\n+}\n+\n+inline void\n+vec_stvewx (vector bool int a1, int a2, int *a3)\n+{\n+  __builtin_altivec_stvewx ((vector signed int) a1, a2, (void *) a3);\n+}\n+\n+inline void\n+vec_stvewx (vector bool int a1, int a2, unsigned int *a3)\n {\n   __builtin_altivec_stvewx ((vector signed int) a1, a2, (void *) a3);\n }\n \n /* vec_stvehx */\n \n inline void\n-vec_stvehx (vector signed short a1, int a2, void *a3)\n+vec_stvehx (vector signed short a1, int a2, short *a3)\n+{\n+  __builtin_altivec_stvehx ((vector signed short) a1, a2, (void *) a3);\n+}\n+\n+inline void\n+vec_stvehx (vector unsigned short a1, int a2, unsigned short *a3)\n+{\n+  __builtin_altivec_stvehx ((vector signed short) a1, a2, (void *) a3);\n+}\n+\n+inline void\n+vec_stvehx (vector bool short a1, int a2, short *a3)\n+{\n+  __builtin_altivec_stvehx ((vector signed short) a1, a2, (void *) a3);\n+}\n+\n+inline void\n+vec_stvehx (vector bool short a1, int a2, unsigned short *a3)\n+{\n+  __builtin_altivec_stvehx ((vector signed short) a1, a2, (void *) a3);\n+}\n+\n+inline void\n+vec_stvehx (vector pixel a1, int a2, short *a3)\n {\n   __builtin_altivec_stvehx ((vector signed short) a1, a2, (void *) a3);\n }\n \n inline void\n-vec_stvehx (vector unsigned short a1, int a2, void *a3)\n+vec_stvehx (vector pixel a1, int a2, unsigned short *a3)\n {\n   __builtin_altivec_stvehx ((vector signed short) a1, a2, (void *) a3);\n }\n \n /* vec_stvebx */\n \n inline void\n-vec_stvebx (vector signed char a1, int a2, void *a3)\n+vec_stvebx (vector signed char a1, int a2, signed char *a3)\n {\n   __builtin_altivec_stvebx ((vector signed char) a1, a2, (void *) a3);\n }\n \n inline void\n-vec_stvebx (vector unsigned char a1, int a2, void *a3)\n+vec_stvebx (vector unsigned char a1, int a2, unsigned char *a3)\n+{\n+  __builtin_altivec_stvebx ((vector signed char) a1, a2, (void *) a3);\n+}\n+\n+inline void\n+vec_stvebx (vector bool char a1, int a2, signed char *a3)\n+{\n+  __builtin_altivec_stvebx ((vector signed char) a1, a2, (void *) a3);\n+}\n+\n+inline void\n+vec_stvebx (vector bool char a1, int a2, unsigned char *a3)\n {\n   __builtin_altivec_stvebx ((vector signed char) a1, a2, (void *) a3);\n }\n@@ -10476,27 +10524,43 @@ __ch (__bin_args_eq (vector float, (a), float, *(c)), \\\n      __builtin_altivec_compiletime_error (\"vec_ste\"))))))))))))))))\n \n #define vec_stvewx(a, b, c) \\\n-__ch (__un_args_eq (vector unsigned int, (a)), \\\n+__ch (__bin_args_eq (vector unsigned int, (a), unsigned int, *(c)), \\\n+     __builtin_altivec_stvewx ((vector signed int) (a), (b), (c)), \\\n+__ch (__bin_args_eq (vector signed int, (a), int, *(c)), \\\n+     __builtin_altivec_stvewx ((vector signed int) (a), (b), (c)), \\\n+__ch (__bin_args_eq (vector bool int, (a), unsigned int, *(c)), \\\n      __builtin_altivec_stvewx ((vector signed int) (a), (b), (c)), \\\n-__ch (__un_args_eq (vector signed int, (a)), \\\n+__ch (__bin_args_eq (vector bool int, (a), int, *(c)), \\\n      __builtin_altivec_stvewx ((vector signed int) (a), (b), (c)), \\\n-__ch (__un_args_eq (vector float, (a)), \\\n+__ch (__bin_args_eq (vector float, (a), float, *(c)), \\\n      __builtin_altivec_stvewx ((vector signed int) (a), (b), (c)), \\\n-__builtin_altivec_compiletime_error (\"vec_stvewx\"))))\n+__builtin_altivec_compiletime_error (\"vec_stvewx\"))))))\n \n #define vec_stvehx(a, b, c) \\\n-__ch (__un_args_eq (vector unsigned short, (a)), \\\n+__ch (__bin_args_eq (vector unsigned short, (a), unsigned short, *(c)), \\\n      __builtin_altivec_stvehx ((vector signed short) (a), (b), (c)), \\\n-__ch (__un_args_eq (vector signed short, (a)), \\\n+__ch (__bin_args_eq (vector signed short, (a), short, *(c)), \\\n+     __builtin_altivec_stvehx ((vector signed short) (a), (b), (c)), \\\n+__ch (__bin_args_eq (vector bool short, (a), unsigned short, *(c)), \\\n+     __builtin_altivec_stvehx ((vector signed short) (a), (b), (c)), \\\n+__ch (__bin_args_eq (vector bool short, (a), short, *(c)), \\\n+     __builtin_altivec_stvehx ((vector signed short) (a), (b), (c)), \\\n+__ch (__bin_args_eq (vector pixel, (a), unsigned short, *(c)), \\\n      __builtin_altivec_stvehx ((vector signed short) (a), (b), (c)), \\\n-__builtin_altivec_compiletime_error (\"vec_stvehx\")))\n+__ch (__bin_args_eq (vector pixel, (a), short, *(c)), \\\n+     __builtin_altivec_stvehx ((vector signed short) (a), (b), (c)), \\\n+__builtin_altivec_compiletime_error (\"vec_stvehx\")))))))\n \n #define vec_stvebx(a, b, c) \\\n-__ch (__un_args_eq (vector unsigned char, (a)), \\\n+__ch (__bin_args_eq (vector unsigned char, (a), unsigned char, *(c)), \\\n+      __builtin_altivec_stvebx ((vector signed char) (a), (b), (c)), \\\n+__ch (__bin_args_eq (vector signed char, (a), signed char, *(c)), \\\n       __builtin_altivec_stvebx ((vector signed char) (a), (b), (c)), \\\n-__ch (__un_args_eq (vector signed char, (a)), \\\n+__ch (__bin_args_eq (vector bool char, (a), unsigned char, *(c)), \\\n+      __builtin_altivec_stvebx ((vector signed char) (a), (b), (c)), \\\n+__ch (__bin_args_eq (vector bool char, (a), signed char, *(c)), \\\n       __builtin_altivec_stvebx ((vector signed char) (a), (b), (c)), \\\n-__builtin_altivec_compiletime_error (\"vec_stvebx\")))\n+__builtin_altivec_compiletime_error (\"vec_stvebx\")))))\n \n #define vec_sub(a1, a2) \\\n __ch (__bin_args_eq (vector bool char, (a1), vector signed char, (a2)), \\"}]}