{"sha": "86d71fcabfba7a1f288ea6b90e7228705d6f5b99", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODZkNzFmY2FiZmJhN2ExZjI4OGVhNmI5MGU3MjI4NzA1ZDZmNWI5OQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2012-01-06T14:11:33Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-01-06T14:11:33Z"}, "message": "c-decl.c (ext_block): Moved up.\n\n\t* c-decl.c (ext_block): Moved up.\n\t(collect_all_refs, for_each_global_decl): Take ext_block into account.\n\nFrom-SVN: r182953", "tree": {"sha": "4ff8e7acf1f2eb69d93439fae3fe079b3290b0d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4ff8e7acf1f2eb69d93439fae3fe079b3290b0d7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/86d71fcabfba7a1f288ea6b90e7228705d6f5b99", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86d71fcabfba7a1f288ea6b90e7228705d6f5b99", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86d71fcabfba7a1f288ea6b90e7228705d6f5b99", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86d71fcabfba7a1f288ea6b90e7228705d6f5b99/comments", "author": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1ab3568bd5359801a13c0623262879baece7136c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ab3568bd5359801a13c0623262879baece7136c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ab3568bd5359801a13c0623262879baece7136c"}], "stats": {"total": 16, "additions": 13, "deletions": 3}, "files": [{"sha": "0457656b3ff945d19bf5969b481a2adfac51c768", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86d71fcabfba7a1f288ea6b90e7228705d6f5b99/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86d71fcabfba7a1f288ea6b90e7228705d6f5b99/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=86d71fcabfba7a1f288ea6b90e7228705d6f5b99", "patch": "@@ -1,3 +1,8 @@\n+2012-01-06  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* c-decl.c (ext_block): Moved up.\n+\t(collect_all_refs, for_each_global_decl): Take ext_block into account.\n+\n 2012-01-06  Han Shen  <shenhan@google.com>\n \n \tTranslate built-in include paths for sysroot."}, {"sha": "45fb6b39f24f2ef2db9d76368ed812408c2bc9e3", "filename": "gcc/c-decl.c", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86d71fcabfba7a1f288ea6b90e7228705d6f5b99/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86d71fcabfba7a1f288ea6b90e7228705d6f5b99/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=86d71fcabfba7a1f288ea6b90e7228705d6f5b99", "patch": "@@ -9932,6 +9932,9 @@ collect_source_ref_cb (tree decl)\n     collect_source_ref (LOCATION_FILE (decl_sloc (decl, false)));\n }\n \n+/* Preserve the external declarations scope across a garbage collect.  */\n+static GTY(()) tree ext_block;\n+\n /* Collect all references relevant to SOURCE_FILE.  */\n \n static void\n@@ -9942,6 +9945,8 @@ collect_all_refs (const char *source_file)\n \n   FOR_EACH_VEC_ELT (tree, all_translation_units, i, t)\n     collect_ada_nodes (BLOCK_VARS (DECL_INITIAL (t)), source_file);\n+\n+  collect_ada_nodes (BLOCK_VARS (ext_block), source_file);\n }\n \n /* Iterate over all global declarations and call CALLBACK.  */\n@@ -9960,10 +9965,10 @@ for_each_global_decl (void (*callback) (tree decl))\n       for (decl = BLOCK_VARS (decls); decl; decl = TREE_CHAIN (decl))\n \tcallback (decl);\n     }\n-}\n \n-/* Preserve the external declarations scope across a garbage collect.  */\n-static GTY(()) tree ext_block;\n+  for (decl = BLOCK_VARS (ext_block); decl; decl = TREE_CHAIN (decl))\n+    callback (decl);\n+}\n \n void\n c_write_global_declarations (void)"}]}