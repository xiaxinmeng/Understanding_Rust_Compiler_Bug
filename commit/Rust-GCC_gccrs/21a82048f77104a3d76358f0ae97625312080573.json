{"sha": "21a82048f77104a3d76358f0ae97625312080573", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjFhODIwNDhmNzcxMDRhM2Q3NjM1OGYwYWU5NzYyNTMxMjA4MDU3Mw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2014-10-06T07:44:13Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2014-10-06T07:44:13Z"}, "message": "ubsan.h (ubsan_get_source_location): New prototype.\n\n\t* ubsan.h (ubsan_get_source_location): New prototype.\n\t* ubsan.c (ubsan_source_location_type): New variable.\n\tFunction renamed to ...\n\t(ubsan_get_source_location_type): ... this.  Cache\n\treturn value in ubsan_source_location_type variable.\n\t(ubsan_source_location, ubsan_create_data): Use\n\tubsan_get_source_location_type instead of\n\tubsan_source_location_type.\n\t* asan.c (asan_protect_global): Don't protect globals\n\twith ubsan_get_source_location_type () type.\n\t(asan_add_global): Provide global decl location info\n\tif possible.\n\nFrom-SVN: r215916", "tree": {"sha": "4c82e3f6bdcbf33d5ea0a345a45f463114a05b55", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4c82e3f6bdcbf33d5ea0a345a45f463114a05b55"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/21a82048f77104a3d76358f0ae97625312080573", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21a82048f77104a3d76358f0ae97625312080573", "html_url": "https://github.com/Rust-GCC/gccrs/commit/21a82048f77104a3d76358f0ae97625312080573", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21a82048f77104a3d76358f0ae97625312080573/comments", "author": null, "committer": null, "parents": [{"sha": "1928ec50dff51203757954ac17e722d1c7daf07e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1928ec50dff51203757954ac17e722d1c7daf07e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1928ec50dff51203757954ac17e722d1c7daf07e"}], "stats": {"total": 54, "additions": 46, "deletions": 8}, "files": [{"sha": "fca4ee6fb3f280c3f3877a2a75081dd564f9a712", "filename": "gcc/asan.c", "status": "modified", "additions": 34, "deletions": 3, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21a82048f77104a3d76358f0ae97625312080573/gcc%2Fasan.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21a82048f77104a3d76358f0ae97625312080573/gcc%2Fasan.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fasan.c?ref=21a82048f77104a3d76358f0ae97625312080573", "patch": "@@ -1316,7 +1316,8 @@ asan_protect_global (tree decl)\n       || DECL_SIZE (decl) == 0\n       || ASAN_RED_ZONE_SIZE * BITS_PER_UNIT > MAX_OFILE_ALIGNMENT\n       || !valid_constant_size_p (DECL_SIZE_UNIT (decl))\n-      || DECL_ALIGN_UNIT (decl) > 2 * ASAN_RED_ZONE_SIZE)\n+      || DECL_ALIGN_UNIT (decl) > 2 * ASAN_RED_ZONE_SIZE\n+      || TREE_TYPE (decl) == ubsan_get_source_location_type ())\n     return false;\n \n   rtl = DECL_RTL (decl);\n@@ -2226,8 +2227,38 @@ asan_add_global (tree decl, tree type, vec<constructor_elt, va_gc> *v)\n   int has_dynamic_init = vnode ? vnode->dynamically_initialized : 0;\n   CONSTRUCTOR_APPEND_ELT (vinner, NULL_TREE,\n \t\t\t  build_int_cst (uptr, has_dynamic_init));\n-  CONSTRUCTOR_APPEND_ELT (vinner, NULL_TREE,\n-\t\t\t  build_int_cst (uptr, 0));\n+  tree locptr = NULL_TREE;\n+  location_t loc = DECL_SOURCE_LOCATION (decl);\n+  expanded_location xloc = expand_location (loc);\n+  if (xloc.file != NULL)\n+    {\n+      static int lasanloccnt = 0;\n+      char buf[25];\n+      ASM_GENERATE_INTERNAL_LABEL (buf, \"LASANLOC\", ++lasanloccnt);\n+      tree var = build_decl (UNKNOWN_LOCATION, VAR_DECL, get_identifier (buf),\n+\t\t\t     ubsan_get_source_location_type ());\n+      TREE_STATIC (var) = 1;\n+      TREE_PUBLIC (var) = 0;\n+      DECL_ARTIFICIAL (var) = 1;\n+      DECL_IGNORED_P (var) = 1;\n+      pretty_printer filename_pp;\n+      pp_string (&filename_pp, xloc.file);\n+      tree str = asan_pp_string (&filename_pp);\n+      tree ctor = build_constructor_va (TREE_TYPE (var), 3,\n+\t\t\t\t\tNULL_TREE, str, NULL_TREE,\n+\t\t\t\t\tbuild_int_cst (unsigned_type_node,\n+\t\t\t\t\t\t       xloc.line), NULL_TREE,\n+\t\t\t\t\tbuild_int_cst (unsigned_type_node,\n+\t\t\t\t\t\t       xloc.column));\n+      TREE_CONSTANT (ctor) = 1;\n+      TREE_STATIC (ctor) = 1;\n+      DECL_INITIAL (var) = ctor;\n+      varpool_node::finalize_decl (var);\n+      locptr = fold_convert (uptr, build_fold_addr_expr (var));\n+    }\n+  else\n+    locptr = build_int_cst (uptr, 0);\n+  CONSTRUCTOR_APPEND_ELT (vinner, NULL_TREE, locptr);\n   init = build_constructor (type, vinner);\n   CONSTRUCTOR_APPEND_ELT (v, NULL_TREE, init);\n }"}, {"sha": "c9a72ad47202e1c6e9b4539ac9cf49eb99175cd8", "filename": "gcc/ubsan.c", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21a82048f77104a3d76358f0ae97625312080573/gcc%2Fubsan.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21a82048f77104a3d76358f0ae97625312080573/gcc%2Fubsan.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fubsan.c?ref=21a82048f77104a3d76358f0ae97625312080573", "patch": "@@ -197,6 +197,9 @@ ubsan_type_descriptor_type (void)\n   return ret;\n }\n \n+/* Cached ubsan_get_source_location_type () return value.  */\n+static GTY(()) tree ubsan_source_location_type;\n+\n /* Build\n    struct __ubsan_source_location\n    {\n@@ -206,12 +209,15 @@ ubsan_type_descriptor_type (void)\n    }\n    type.  */\n \n-static tree\n-ubsan_source_location_type (void)\n+tree\n+ubsan_get_source_location_type (void)\n {\n   static const char *field_names[3]\n     = { \"__filename\", \"__line\", \"__column\" };\n   tree fields[3], ret;\n+  if (ubsan_source_location_type)\n+    return ubsan_source_location_type;\n+\n   tree const_char_type = build_qualified_type (char_type_node,\n \t\t\t\t\t       TYPE_QUAL_CONST);\n \n@@ -229,6 +235,7 @@ ubsan_source_location_type (void)\n   TYPE_FIELDS (ret) = fields[0];\n   TYPE_NAME (ret) = get_identifier (\"__ubsan_source_location\");\n   layout_type (ret);\n+  ubsan_source_location_type = ret;\n   return ret;\n }\n \n@@ -239,7 +246,7 @@ static tree\n ubsan_source_location (location_t loc)\n {\n   expanded_location xloc;\n-  tree type = ubsan_source_location_type ();\n+  tree type = ubsan_get_source_location_type ();\n \n   xloc = expand_location (loc);\n   tree str;\n@@ -484,7 +491,7 @@ ubsan_create_data (const char *name, int loccnt, const location_t *ploc, ...)\n     {\n       gcc_checking_assert (i < 2);\n       fields[i] = build_decl (UNKNOWN_LOCATION, FIELD_DECL, NULL_TREE,\n-\t\t\t      ubsan_source_location_type ());\n+\t\t\t      ubsan_get_source_location_type ());\n       DECL_CONTEXT (fields[i]) = ret;\n       if (i)\n \tDECL_CHAIN (fields[i - 1]) = fields[i];"}, {"sha": "d0b404f63e4e1ba191840f31704badeed8d2b472", "filename": "gcc/ubsan.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21a82048f77104a3d76358f0ae97625312080573/gcc%2Fubsan.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21a82048f77104a3d76358f0ae97625312080573/gcc%2Fubsan.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fubsan.h?ref=21a82048f77104a3d76358f0ae97625312080573", "patch": "@@ -47,6 +47,6 @@ extern tree ubsan_encode_value (tree, bool = false);\n extern bool is_ubsan_builtin_p (tree);\n extern tree ubsan_build_overflow_builtin (tree_code, location_t, tree, tree, tree);\n extern tree ubsan_instrument_float_cast (location_t, tree, tree);\n+extern tree ubsan_get_source_location_type (void);\n \n #endif  /* GCC_UBSAN_H  */\n-"}]}