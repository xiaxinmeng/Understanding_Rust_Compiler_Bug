{"sha": "bc2fc1f3b84472865724b7e91b540ca0fadedd1b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmMyZmMxZjNiODQ0NzI4NjU3MjRiN2U5MWI1NDBjYTBmYWRlZGQxYg==", "commit": {"author": {"name": "Vladimir Makarov", "email": "vmakarov@redhat.com", "date": "2016-04-06T16:48:36Z"}, "committer": {"name": "Vladimir Makarov", "email": "vmakarov@gcc.gnu.org", "date": "2016-04-06T16:48:36Z"}, "message": "re PR rtl-optimization/70398 (gcc.dg/vect/slp-multitypes-9.c FAILs with -fno-tree-loop-optimize -fno-tree-ter)\n\n2016-04-06  Vladimir Makarov  <vmakarov@redhat.com>\n\n\tPR rtl-optimization/70398\n\t* lra-constraints.c (process_address_1): Check zero scale and code\n\tfor reloading with zero scale.\n\n2016-04-06  Vladimir Makarov  <vmakarov@redhat.com>\n\n\tPR rtl-optimization/70398\n\t* testsuite/gcc.target/aarch64/pr70398.c: New.\n\nFrom-SVN: r234792", "tree": {"sha": "7cada23d7ebb7839e393ccbce8fed46721ed7422", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7cada23d7ebb7839e393ccbce8fed46721ed7422"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bc2fc1f3b84472865724b7e91b540ca0fadedd1b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc2fc1f3b84472865724b7e91b540ca0fadedd1b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc2fc1f3b84472865724b7e91b540ca0fadedd1b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc2fc1f3b84472865724b7e91b540ca0fadedd1b/comments", "author": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "469abfd2efbeb0923f4f07fbd67d1b8812f25479", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/469abfd2efbeb0923f4f07fbd67d1b8812f25479", "html_url": "https://github.com/Rust-GCC/gccrs/commit/469abfd2efbeb0923f4f07fbd67d1b8812f25479"}], "stats": {"total": 53, "additions": 51, "deletions": 2}, "files": [{"sha": "ecbac2e7dc71361d40253eecfd0fcc86a263299b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc2fc1f3b84472865724b7e91b540ca0fadedd1b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc2fc1f3b84472865724b7e91b540ca0fadedd1b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bc2fc1f3b84472865724b7e91b540ca0fadedd1b", "patch": "@@ -1,3 +1,9 @@\n+2016-04-06  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\tPR rtl-optimization/70398\n+\t* lra-constraints.c (process_address_1): Check zero scale and code\n+\tfor reloading with zero scale.\n+\n 2016-04-06  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/sse.md (shuffletype): Add V32HI and V4TI modes."}, {"sha": "c00afe766cf0581204cae6d7ec5b51373b8ff179", "filename": "gcc/lra-constraints.c", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc2fc1f3b84472865724b7e91b540ca0fadedd1b/gcc%2Flra-constraints.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc2fc1f3b84472865724b7e91b540ca0fadedd1b/gcc%2Flra-constraints.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra-constraints.c?ref=bc2fc1f3b84472865724b7e91b540ca0fadedd1b", "patch": "@@ -2914,6 +2914,7 @@ process_address_1 (int nop, bool check_only_p,\n {\n   struct address_info ad;\n   rtx new_reg;\n+  HOST_WIDE_INT scale;\n   rtx op = *curr_id->operand_loc[nop];\n   const char *constraint = curr_static_id->operand[nop].constraint;\n   enum constraint_num cn = lookup_constraint (constraint);\n@@ -3161,14 +3162,14 @@ process_address_1 (int nop, bool check_only_p,\n       *ad.inner = simplify_gen_binary (PLUS, GET_MODE (new_reg),\n \t\t\t\t       new_reg, *ad.index);\n     }\n-  else if (get_index_scale (&ad) == 1)\n+  else if ((scale = get_index_scale (&ad)) == 1)\n     {\n       /* The last transformation to one reg will be made in\n \t curr_insn_transform function.  */\n       end_sequence ();\n       return false;\n     }\n-  else\n+  else if (scale != 0)\n     {\n       /* base + scale * index => base + new_reg,\n \t case (1) above.\n@@ -3180,6 +3181,17 @@ process_address_1 (int nop, bool check_only_p,\n       *ad.inner = simplify_gen_binary (PLUS, GET_MODE (new_reg),\n \t\t\t\t       *ad.base_term, new_reg);\n     }\n+  else\n+    {\n+      enum reg_class cl = base_reg_class (ad.mode, ad.as,\n+\t\t\t\t\t  SCRATCH, SCRATCH);\n+      rtx addr = *ad.inner;\n+      \n+      new_reg = lra_create_new_reg (Pmode, NULL_RTX, cl, \"addr\");\n+      /* addr => new_base.  */\n+      lra_emit_move (new_reg, addr);\n+      *ad.inner = new_reg;\n+    }\n   *before = get_insns ();\n   end_sequence ();\n   return true;"}, {"sha": "bc9eed1d2901353d4c826e3a5969d2f2aad268cf", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc2fc1f3b84472865724b7e91b540ca0fadedd1b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc2fc1f3b84472865724b7e91b540ca0fadedd1b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bc2fc1f3b84472865724b7e91b540ca0fadedd1b", "patch": "@@ -1,3 +1,8 @@\n+2016-04-06  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\tPR rtl-optimization/70398\n+\t* testsuite/gcc.target/aarch64/pr70398.c: New.\n+\n 2016-04-06  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc.c-torture/execute/20101011-1.c (__VISIUM__): Set DO_TEST to 0."}, {"sha": "dbe5ad1b24f120264a2cc7a8ff05c3936ee38d1c", "filename": "gcc/testsuite/gcc.target/aarch64/pr70398.c", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc2fc1f3b84472865724b7e91b540ca0fadedd1b/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpr70398.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc2fc1f3b84472865724b7e91b540ca0fadedd1b/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpr70398.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpr70398.c?ref=bc2fc1f3b84472865724b7e91b540ca0fadedd1b", "patch": "@@ -0,0 +1,26 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O -fno-tree-loop-optimize -fno-tree-ter -static\" } */\n+unsigned int in[8 * 8] =\n+  { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n+    45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63 };\n+\n+unsigned char out[8 * 8];\n+\n+int\n+main (void)\n+{\n+  int i;\n+  for (i = 0; i < 8 * 4; i++)\n+    {\n+      out[i * 2] = (unsigned char) in[i * 2] + 1;\n+      out[i * 2 + 1] = (unsigned char) in[i * 2 + 1] + 2;\n+    }\n+  __asm__(\"\":::\"memory\");\n+  for (i = 0; i < 8 * 4; i++)\n+    {\n+      if (out[i * 2] != in[i * 2] + 1\n+\t  || out[i * 2 + 1] != in[i * 2 + 1] + 2)\n+\t__builtin_abort ();\n+    }\n+  return 0;\n+}"}]}