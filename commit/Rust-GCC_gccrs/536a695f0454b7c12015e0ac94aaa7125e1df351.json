{"sha": "536a695f0454b7c12015e0ac94aaa7125e1df351", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTM2YTY5NWYwNDU0YjdjMTIwMTVlMGFjOTRhYWE3MTI1ZTFkZjM1MQ==", "commit": {"author": {"name": "Michael Koch", "email": "konqueror@gmx.de", "date": "2003-06-19T16:30:09Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2003-06-19T16:30:09Z"}, "message": "JComponent.java, [...]: New versions from classpath.\n\n2003-06-19  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/JComponent.java,\n\tjavax/swing/JInternalFrame.java,\n\tjavax/swing/MenuSelectionManager.java,\n\tjavax/swing/SwingUtilities.java,\n\tjavax/swing/ToggleButtonModel.java:\n\tNew versions from classpath.\n\nFrom-SVN: r68207", "tree": {"sha": "ed5f4608b18c023ffe55eddd194f6b2db913b1c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ed5f4608b18c023ffe55eddd194f6b2db913b1c6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/536a695f0454b7c12015e0ac94aaa7125e1df351", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/536a695f0454b7c12015e0ac94aaa7125e1df351", "html_url": "https://github.com/Rust-GCC/gccrs/commit/536a695f0454b7c12015e0ac94aaa7125e1df351", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/536a695f0454b7c12015e0ac94aaa7125e1df351/comments", "author": null, "committer": null, "parents": [{"sha": "50af15ec616940c40dfbefe865c89853ee09622e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50af15ec616940c40dfbefe865c89853ee09622e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/50af15ec616940c40dfbefe865c89853ee09622e"}], "stats": {"total": 198, "additions": 90, "deletions": 108}, "files": [{"sha": "28446b35ed50aa19ecf68af3878da8cf8fe07084", "filename": "libjava/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/536a695f0454b7c12015e0ac94aaa7125e1df351/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/536a695f0454b7c12015e0ac94aaa7125e1df351/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=536a695f0454b7c12015e0ac94aaa7125e1df351", "patch": "@@ -1,3 +1,12 @@\n+2003-06-19  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/JComponent.java,\n+\tjavax/swing/JInternalFrame.java,\n+\tjavax/swing/MenuSelectionManager.java,\n+\tjavax/swing/SwingUtilities.java,\n+\tjavax/swing/ToggleButtonModel.java:\n+\tNew versions from classpath.\n+\n 2003-06-19  Michael Koch  <konqueror@gmx.de>\n \n \t* java/text/CollationElementIterator.java"}, {"sha": "a0409a4fbfe3bc9b45a23fea33b2efa32f29db70", "filename": "libjava/javax/swing/JComponent.java", "status": "modified", "additions": 1, "deletions": 86, "changes": 87, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/536a695f0454b7c12015e0ac94aaa7125e1df351/libjava%2Fjavax%2Fswing%2FJComponent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/536a695f0454b7c12015e0ac94aaa7125e1df351/libjava%2Fjavax%2Fswing%2FJComponent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJComponent.java?ref=536a695f0454b7c12015e0ac94aaa7125e1df351", "patch": "@@ -66,7 +66,6 @@\n import javax.accessibility.Accessible;\n import javax.accessibility.AccessibleContext;\n import javax.accessibility.AccessibleExtendedComponent;\n-import javax.accessibility.AccessibleKeyBinding;\n import javax.accessibility.AccessibleRole;\n import javax.accessibility.AccessibleStateSet;\n import javax.swing.event.AncestorListener;\n@@ -116,16 +115,6 @@ public abstract class AccessibleJComponent\n \t\t * AccessibleFocusHandler\n \t\t */\n \t\tprotected class AccessibleFocusHandler implements FocusListener {\n-\n-\t\t\t//-------------------------------------------------------------\n-\t\t\t// Variables --------------------------------------------------\n-\t\t\t//-------------------------------------------------------------\n-\n-\n-\t\t\t//-------------------------------------------------------------\n-\t\t\t// Initialization ---------------------------------------------\n-\t\t\t//-------------------------------------------------------------\n-\n \t\t\t/**\n \t\t\t * Constructor AccessibleFocusHandler\n \t\t\t * @param component TODO\n@@ -134,11 +123,6 @@ protected AccessibleFocusHandler(AccessibleJComponent component) {\n \t\t\t\t// TODO\n \t\t\t} // AccessibleFocusHandler()\n \n-\n-\t\t\t//-------------------------------------------------------------\n-\t\t\t// Methods ----------------------------------------------------\n-\t\t\t//-------------------------------------------------------------\n-\n \t\t\t/**\n \t\t\t * focusGained\n \t\t\t * @param event TODO\n@@ -154,24 +138,12 @@ public void focusGained(FocusEvent event) {\n \t\t\tpublic void focusLost(FocusEvent valevent) {\n \t\t\t\t// TODO\n \t\t\t} // focusLost()\n-\n-\n \t\t} // AccessibleFocusHandler\n \n \t\t/**\n \t\t * AccessibleContainerHandler\n \t\t */\n \t\tprotected class AccessibleContainerHandler implements ContainerListener {\n-\n-\t\t\t//-------------------------------------------------------------\n-\t\t\t// Variables --------------------------------------------------\n-\t\t\t//-------------------------------------------------------------\n-\n-\n-\t\t\t//-------------------------------------------------------------\n-\t\t\t// Initialization ---------------------------------------------\n-\t\t\t//-------------------------------------------------------------\n-\n \t\t\t/**\n \t\t\t * Constructor AccessibleContainerHandler\n \t\t\t * @param component TODO\n@@ -180,11 +152,6 @@ protected AccessibleContainerHandler(AccessibleJComponent component) {\n \t\t\t\t// TODO\n \t\t\t} // AccessibleContainerHandler()\n \n-\n-\t\t\t//-------------------------------------------------------------\n-\t\t\t// Methods ----------------------------------------------------\n-\t\t\t//-------------------------------------------------------------\n-\n \t\t\t/**\n \t\t\t * componentAdded\n \t\t\t * @param event TODO\n@@ -200,15 +167,8 @@ public void componentAdded(ContainerEvent event) {\n \t\t\tpublic void componentRemoved(ContainerEvent valevent) {\n \t\t\t\t// TODO\n \t\t\t} // componentRemoved()\n-\n-\n \t\t} // AccessibleContainerHandler\n \n-\n-\t\t//-------------------------------------------------------------\n-\t\t// Variables --------------------------------------------------\n-\t\t//-------------------------------------------------------------\n-\n \t\t/**\n \t\t * accessibleContainerHandler\n \t\t */\n@@ -219,11 +179,6 @@ public void componentRemoved(ContainerEvent valevent) {\n \t\t */\n \t\tprotected FocusListener accessibleFocusHandler;\n \n-\n-\t\t//-------------------------------------------------------------\n-\t\t// Initialization ---------------------------------------------\n-\t\t//-------------------------------------------------------------\n-\n \t\t/**\n \t\t * Constructor AccessibleJComponent\n \t\t * @param component TODO\n@@ -233,11 +188,6 @@ protected AccessibleJComponent(JComponent component) {\n \t\t\t// TODO\n \t\t} // AccessibleJComponent()\n \n-\n-\t\t//-------------------------------------------------------------\n-\t\t// Methods ----------------------------------------------------\n-\t\t//-------------------------------------------------------------\n-\n \t\t/**\n \t\t * addPropertyChangeListener\n \t\t * @param listener TODO\n@@ -327,22 +277,19 @@ public JComponent()\n \t\t//updateUI(); // get a proper ui\n \t}\n \n-\n \t// protected EventListenerList listenerList\n \tpublic boolean contains(int x, int y)\n \t{\n \t\t//return dims.contains(x,y);\n \t\treturn super.contains(x,y);\n \t}\n \n-\n \tpublic  void addNotify()\n \t{\n \t\t//Notification to this component that it now has a parent component.\n \t\tsuper.addNotify();\n \t}\n \n-\n \tHashtable get_prop_hash()\n \t{\n \t\tif (prop_hash == null)\n@@ -374,7 +321,6 @@ public Object getClientProperty(Object key)\n \tpublic void putClientProperty(Object key, Object value)\n \t{    get_prop_hash().put(key, value);   }\n \n-\n \tpublic void removeAncestorListener(AncestorListener listener)\n \t{  get_ancestor_list().removeElement(listener);  }\n \n@@ -405,7 +351,6 @@ public void computeVisibleRect(Rectangle rect)\n \t\t//super.computeVisibleRect(rect);\n \t}\n \n-\n \tpublic void firePropertyChange(String propertyName, boolean oldValue, boolean newValue)\n \t{\n \t\t//Reports a bound property change.\n@@ -446,7 +391,6 @@ public void firePropertyChange(String propertyName, short oldValue, short newVal\n \t\t//       Reports a bound property change.\n \t}\n \n-\n \tprotected  void fireVetoableChange(String propertyName, Object oldValue, Object newValue)\n \t{\n \t\t//       Support for reporting constrained property changes.\n@@ -658,16 +602,6 @@ public Dimension getSize(Dimension rv)\n \t\t}\n \t}\n \n-\n-\n-\t/*********************************************************************\n-\t *\n-\t *\n-\t *  tooltips:\n-\t *\n-\t *\n-\t **************************************/\n-\n \tpublic JToolTip createToolTip()\n \t{\n \t\tif (tooltip == null)\n@@ -687,15 +621,6 @@ public String getToolTipText()\n \tpublic String getToolTipText(MouseEvent event)\n \t{\treturn tool_tip_text;    }\n \n-\t/*********************************************************************\n-\t *\n-\t *\n-\t *    things to do with visibility:\n-\t *\n-\t *\n-\t **************************************/\n-\n-\n \tpublic Container getTopLevelAncestor()\n \t{\n \t\t//      Returns the top-level ancestor of this component (either the containing Window or Applet), or null if this component has not been added to any container.\n@@ -953,7 +878,6 @@ public void setAutoscrolls(boolean autoscrolls)\n \t\t//      If true this component will automatically scroll its contents when dragged, if contained in a component that supports scrolling, such as JViewport\n \t}\n \n-\n \tpublic void setDebugGraphicsOptions(int debugOptions)\n \t{\n \t\t//      Enables or disables diagnostic information about every graphics operation performed within the component or one of its children.\n@@ -977,6 +901,7 @@ public void setFont(Font font)\n \t\trevalidate();\n \t\trepaint();\n \t}\n+\n \tpublic void setBackground(Color bg)\n \t{\n \t\tsuper.setBackground(bg);\n@@ -1043,16 +968,6 @@ public void update(Graphics g)\n \t\tpaint(g);\n \t}\n \n-\n-\n-\t/******************************************\n-\t *\n-\t *\n-\t *  UI management\n-\t * \n-\t *\n-\t *********/\n-\n         public String getUIClassID()\n \t{\n \t\t///          Return the UIDefaults key used to look up the name of the swing."}, {"sha": "034050b6456c25e187c0ed26e42e0dcab4e2d00b", "filename": "libjava/javax/swing/JInternalFrame.java", "status": "modified", "additions": 19, "deletions": 3, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/536a695f0454b7c12015e0ac94aaa7125e1df351/libjava%2Fjavax%2Fswing%2FJInternalFrame.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/536a695f0454b7c12015e0ac94aaa7125e1df351/libjava%2Fjavax%2Fswing%2FJInternalFrame.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJInternalFrame.java?ref=536a695f0454b7c12015e0ac94aaa7125e1df351", "patch": "@@ -35,11 +35,27 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n+\n package javax.swing;\n-/**\n- * STUBBED\n- */\n+\n+import java.awt.Component;\n+import java.awt.Container;\n+import javax.accessibility.Accessible;\n+\n public class JInternalFrame extends JComponent\n /*implements Accessible, WindowConstants, RootPaneContainer*/\n {\n+  private static final long serialVersionUID = -5425177187760785402L;\n+\n+  public static final String CONTENT_PANE_PROPERTY = \"contentPane\";\n+  public static final String MENU_BAR_PROPERTY = \"JMenuBar\";\n+  public static final String TITLE_PROPERTY = \"title\";\n+  public static final String LAYERED_PANE_PROPERTY = \"layeredPane\";\n+  public static final String ROOT_PANE_PROPERTY = \"rootPane\";\n+  public static final String GLASS_PANE_PROPERTY = \"glassPane\";\n+  public static final String FRAME_ICON_PROPERTY = \"frameIcon\";\n+  public static final String IS_SELECTED_PROPERTY = \"selected\";\n+  public static final String IS_CLOSED_PROPERTY = \"closed\";\n+  public static final String IS_MAXIMUM_PROPERTY = \"maximum\";\n+  public static final String IS_ICON_PROPERTY = \"icon\";\n } // class JInternalFrame"}, {"sha": "9088968538ace28e196f3020cd9063d3e3c27dfa", "filename": "libjava/javax/swing/MenuSelectionManager.java", "status": "modified", "additions": 35, "deletions": 3, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/536a695f0454b7c12015e0ac94aaa7125e1df351/libjava%2Fjavax%2Fswing%2FMenuSelectionManager.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/536a695f0454b7c12015e0ac94aaa7125e1df351/libjava%2Fjavax%2Fswing%2FMenuSelectionManager.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FMenuSelectionManager.java?ref=536a695f0454b7c12015e0ac94aaa7125e1df351", "patch": "@@ -35,10 +35,42 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n+\n package javax.swing;\n-/**\n- * STUBBED\n- */\n+\n+import javax.swing.event.ChangeEvent;\n+import javax.swing.event.ChangeListener;\n+import javax.swing.event.EventListenerList;\n+\n public class MenuSelectionManager\n {\n+  protected ChangeEvent changeEvent;\n+  \n+  protected EventListenerList listenerList = new EventListenerList ();\n+\n+  protected void fireStateChanged ()\n+  {\n+    ChangeListener[] listeners = getChangeListeners ();\n+\n+    for (int i = 0; i < listeners.length; i++)\n+      {\n+        listeners [i].stateChanged (new ChangeEvent (this));\n+      }\n+  }\n+\n+  public void addChangeListener (ChangeListener listener)\n+  {\n+    listenerList.add (ChangeListener.class, listener);\n+  }\n+\n+  public void removeChangeListener (ChangeListener listener)\n+  {\n+    listenerList.remove (ChangeListener.class, listener);\n+  }\n+\n+  /** @since 1.4 */\n+  public ChangeListener[] getChangeListeners ()\n+  {\n+    return (ChangeListener[]) listenerList.getListeners (ChangeListener.class);\n+  }\n } // class MenuSelectionManager"}, {"sha": "a123ad834385c94f1209fb79dc7cab25d671307e", "filename": "libjava/javax/swing/SwingUtilities.java", "status": "modified", "additions": 24, "deletions": 10, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/536a695f0454b7c12015e0ac94aaa7125e1df351/libjava%2Fjavax%2Fswing%2FSwingUtilities.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/536a695f0454b7c12015e0ac94aaa7125e1df351/libjava%2Fjavax%2Fswing%2FSwingUtilities.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FSwingUtilities.java?ref=536a695f0454b7c12015e0ac94aaa7125e1df351", "patch": "@@ -35,20 +35,34 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n-package javax.swing;\n-\n-import java.awt.*;\n \n+package javax.swing;\n \n-public class SwingUtilities\n+import java.awt.Component;\n+import java.awt.Container;\n+import java.awt.EventQueue;\n+import java.awt.Font;\n+import java.awt.FontMetrics;\n+import java.awt.Graphics;\n+import java.awt.Insets;\n+import java.awt.Point;\n+import java.awt.Rectangle;\n+import java.awt.Toolkit;\n+import java.awt.Window;\n+import java.awt.event.KeyEvent;\n+import java.awt.event.MouseEvent;\n+import java.lang.reflect.InvocationTargetException;\n+import javax.accessibility.Accessible;\n+import javax.accessibility.AccessibleStateSet;\n+\n+public class SwingUtilities implements SwingConstants\n+{\n+  public static FontMetrics getFontMetrics (Font font)\n {\n-    \n-    public static FontMetrics getFontMetrics ( Font font ) {\n \treturn Toolkit.getDefaultToolkit().getFontMetrics(font);\n     }\n \n-\n-    static JRootPane getRootPane(Component a)\n+  public static JRootPane getRootPane (Component a)\n     {\n \tif (a instanceof JRootPane)\n \t    return (JRootPane) a;\n@@ -63,11 +77,11 @@ static JRootPane getRootPane(Component a)\n \treturn null;\n     }\n \n-    static void updateComponentTreeUI(JFrame comp)\n+  public static void updateComponentTreeUI(JFrame comp)\n     {\n     }\n \n-    static public String layoutCompoundLabel(JComponent c, \n+  public static String layoutCompoundLabel(JComponent c, \n \t\t\t\t\t     FontMetrics fm,\n \t\t\t\t\t     String text,\n \t\t\t\t\t     Icon i,"}, {"sha": "b268925d1b9957f9b05809e8667ba16fc7626b54", "filename": "libjava/javax/swing/ToggleButtonModel.java", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/536a695f0454b7c12015e0ac94aaa7125e1df351/libjava%2Fjavax%2Fswing%2FToggleButtonModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/536a695f0454b7c12015e0ac94aaa7125e1df351/libjava%2Fjavax%2Fswing%2FToggleButtonModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FToggleButtonModel.java?ref=536a695f0454b7c12015e0ac94aaa7125e1df351", "patch": "@@ -35,14 +35,10 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n-package javax.swing;\n \n-import java.util.*;\n-import java.awt.event.*;\n-import javax.swing.event.*;\n+package javax.swing;\n \n-public \n-class ToggleButtonModel extends DefaultButtonModel\n+public class ToggleButtonModel extends DefaultButtonModel\n {\n     ToggleButtonModel(JComponent c)\n     {"}]}