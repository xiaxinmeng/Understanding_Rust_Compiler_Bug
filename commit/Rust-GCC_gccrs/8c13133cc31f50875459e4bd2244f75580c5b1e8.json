{"sha": "8c13133cc31f50875459e4bd2244f75580c5b1e8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGMxMzEzM2NjMzFmNTA4NzU0NTllNGJkMjI0NGY3NTU4MGM1YjFlOA==", "commit": {"author": {"name": "Daniel Kraft", "email": "d@domob.eu", "date": "2008-12-17T10:16:28Z"}, "committer": {"name": "Daniel Kraft", "email": "domob@gcc.gnu.org", "date": "2008-12-17T10:16:28Z"}, "message": "re PR fortran/38137 (MERGE: -fbounds-check runtime check for same string length)\n\n2008-12-17  Daniel Kraft  <d@domob.eu>\n\n\tPR fortran/38137\n\t* trans-intrinsic.c (conv_same_strlen_check): New method.\n\t(gfc_conv_intrinsic_merge): Call it here to actually do the check.\n\n2008-12-17  Daniel Kraft  <d@domob.eu>\n\n\tPR fortran/38137\n\t* gfortran.dg/merge_char_3.f90: New test.\n\nFrom-SVN: r142791", "tree": {"sha": "12168bbad379364a2c0614f98fc86871ab5d8b9c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/12168bbad379364a2c0614f98fc86871ab5d8b9c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8c13133cc31f50875459e4bd2244f75580c5b1e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c13133cc31f50875459e4bd2244f75580c5b1e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c13133cc31f50875459e4bd2244f75580c5b1e8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c13133cc31f50875459e4bd2244f75580c5b1e8/comments", "author": {"login": "domob1812", "id": 4943644, "node_id": "MDQ6VXNlcjQ5NDM2NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4943644?v=4", "gravatar_id": "", "url": "https://api.github.com/users/domob1812", "html_url": "https://github.com/domob1812", "followers_url": "https://api.github.com/users/domob1812/followers", "following_url": "https://api.github.com/users/domob1812/following{/other_user}", "gists_url": "https://api.github.com/users/domob1812/gists{/gist_id}", "starred_url": "https://api.github.com/users/domob1812/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/domob1812/subscriptions", "organizations_url": "https://api.github.com/users/domob1812/orgs", "repos_url": "https://api.github.com/users/domob1812/repos", "events_url": "https://api.github.com/users/domob1812/events{/privacy}", "received_events_url": "https://api.github.com/users/domob1812/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "af8a63d21de5e61f45eaf8a5ed5b270d08289db9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af8a63d21de5e61f45eaf8a5ed5b270d08289db9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af8a63d21de5e61f45eaf8a5ed5b270d08289db9"}], "stats": {"total": 65, "additions": 64, "deletions": 1}, "files": [{"sha": "3cd8c1aae478ff0b2cc1ee86c7aa1bbb38e524ce", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c13133cc31f50875459e4bd2244f75580c5b1e8/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c13133cc31f50875459e4bd2244f75580c5b1e8/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=8c13133cc31f50875459e4bd2244f75580c5b1e8", "patch": "@@ -1,3 +1,9 @@\n+2008-12-17  Daniel Kraft  <d@domob.eu>\n+\n+\tPR fortran/38137\n+\t* trans-intrinsic.c (conv_same_strlen_check): New method.\n+\t(gfc_conv_intrinsic_merge): Call it here to actually do the check.\n+\n 2008-12-15  Mikael Morin  <mikael.morin@tele2.fr>\n \n \tPR fortran/38487"}, {"sha": "577cd20d17f26cd7dbf47f9e324e7300c0a8f05c", "filename": "gcc/fortran/trans-intrinsic.c", "status": "modified", "additions": 34, "deletions": 1, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c13133cc31f50875459e4bd2244f75580c5b1e8/gcc%2Ffortran%2Ftrans-intrinsic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c13133cc31f50875459e4bd2244f75580c5b1e8/gcc%2Ffortran%2Ftrans-intrinsic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-intrinsic.c?ref=8c13133cc31f50875459e4bd2244f75580c5b1e8", "patch": "@@ -746,6 +746,36 @@ gfc_conv_intrinsic_lib_function (gfc_se * se, gfc_expr * expr)\n   se->expr = build_call_array (rettype, fndecl, num_args, args);\n }\n \n+\n+/* If bounds-checking is enabled, create code to verify at runtime that the\n+   string lengths for both expressions are the same (needed for e.g. MERGE).\n+   If bounds-checking is not enabled, does nothing.  */\n+\n+static void\n+conv_same_strlen_check (const char* intr_name, locus* where, tree a, tree b,\n+\t\t\tstmtblock_t* target)\n+{\n+  tree cond;\n+  tree name;\n+\n+  /* If bounds-checking is disabled, do nothing.  */\n+  if (!flag_bounds_check)\n+    return;\n+\n+  /* Compare the two string lengths.  */\n+  cond = fold_build2 (NE_EXPR, boolean_type_node, a, b);\n+\n+  /* Output the runtime-check.  */\n+  name = gfc_build_cstring_const (intr_name);\n+  name = gfc_build_addr_expr (pchar_type_node, name);\n+  gfc_trans_runtime_check (true, false, cond, target, where,\n+\t\t\t   \"Unequal character lengths (%ld/%ld) for arguments\"\n+\t\t\t   \" to %s\",\n+\t\t\t   fold_convert (long_integer_type_node, a),\n+\t\t\t   fold_convert (long_integer_type_node, b), name);\n+}\n+\n+\n /* The EXPONENT(s) intrinsic function is translated into\n        int ret;\n        frexp (s, &ret);\n@@ -3026,7 +3056,7 @@ gfc_conv_intrinsic_merge (gfc_se * se, gfc_expr * expr)\n   tree fsource;\n   tree mask;\n   tree type;\n-  tree len;\n+  tree len, len2;\n   tree *args;\n   unsigned int num_args;\n \n@@ -3047,9 +3077,12 @@ gfc_conv_intrinsic_merge (gfc_se * se, gfc_expr * expr)\n \t also have to set the string length for the result.  */\n       len = args[0];\n       tsource = args[1];\n+      len2 = args[2];\n       fsource = args[3];\n       mask = args[4];\n \n+      conv_same_strlen_check (\"MERGE\", &expr->where, len, len2, &se->post);\n+\n       se->string_length = len;\n     }\n   type = TREE_TYPE (tsource);"}, {"sha": "74b39a4eaf626667b026e3dcec92f63a99933d49", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c13133cc31f50875459e4bd2244f75580c5b1e8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c13133cc31f50875459e4bd2244f75580c5b1e8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8c13133cc31f50875459e4bd2244f75580c5b1e8", "patch": "@@ -1,3 +1,8 @@\n+2008-12-17  Daniel Kraft  <d@domob.eu>\n+\n+\tPR fortran/38137\n+\t* gfortran.dg/merge_char_3.f90: New test.\n+\n 2008-12-15  Mikael Morin  <mikael.morin@tele2.fr>\n \n \tPR fortran/38487"}, {"sha": "498e3ec73c54dc3e0ad35a7cb628fa0546fd6a66", "filename": "gcc/testsuite/gfortran.dg/merge_char_3.f90", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c13133cc31f50875459e4bd2244f75580c5b1e8/gcc%2Ftestsuite%2Fgfortran.dg%2Fmerge_char_3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c13133cc31f50875459e4bd2244f75580c5b1e8/gcc%2Ftestsuite%2Fgfortran.dg%2Fmerge_char_3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fmerge_char_3.f90?ref=8c13133cc31f50875459e4bd2244f75580c5b1e8", "patch": "@@ -0,0 +1,19 @@\n+! { dg-do run }\n+! { dg-options \"-fbounds-check\" }\n+! { dg-shouldfail \"Unequal character lengths\" }\n+\n+! PR fortran/38137\n+! Test that -fbounds-check detects unequal character lengths to MERGE\n+! at runtime.\n+\n+! Contributed by Tobias Burnus <burnus@gcc.gnu.org>\n+\n+subroutine foo(a)\n+implicit none\n+character(len=*) :: a\n+character(len=3) :: b\n+print *, merge(a,b,.true.)  ! Unequal character lengths\n+end subroutine foo\n+\n+call foo(\"ab\")\n+end"}]}