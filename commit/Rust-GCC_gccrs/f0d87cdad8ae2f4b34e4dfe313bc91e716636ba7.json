{"sha": "f0d87cdad8ae2f4b34e4dfe313bc91e716636ba7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjBkODdjZGFkOGFlMmY0YjM0ZTRkZmUzMTNiYzkxZTcxNjYzNmJhNw==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2005-02-07T20:19:58Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2005-02-07T20:19:58Z"}, "message": "re PR libgcj/19611 (create 'sources.zip' for use in eclipse)\n\n\tPR libgcj/19611:\n\t* Makefile.in: Rebuilt.\n\t* Makefile.am (src.zip): New target.\n\t(install-src.zip): Likewise.\n\t(sourcesdir): New variable.\n\nFrom-SVN: r94710", "tree": {"sha": "2d4549689a45b5995bffa702a7340b860cb99df4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2d4549689a45b5995bffa702a7340b860cb99df4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f0d87cdad8ae2f4b34e4dfe313bc91e716636ba7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0d87cdad8ae2f4b34e4dfe313bc91e716636ba7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f0d87cdad8ae2f4b34e4dfe313bc91e716636ba7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0d87cdad8ae2f4b34e4dfe313bc91e716636ba7/comments", "author": null, "committer": null, "parents": [{"sha": "b950a32e341adc4457bc428e9b261764ed8456ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b950a32e341adc4457bc428e9b261764ed8456ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b950a32e341adc4457bc428e9b261764ed8456ef"}], "stats": {"total": 77, "additions": 77, "deletions": 0}, "files": [{"sha": "e093db43caae69fa53104b9428e9c15cf281db9a", "filename": "libjava/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0d87cdad8ae2f4b34e4dfe313bc91e716636ba7/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0d87cdad8ae2f4b34e4dfe313bc91e716636ba7/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=f0d87cdad8ae2f4b34e4dfe313bc91e716636ba7", "patch": "@@ -1,3 +1,11 @@\n+2005-02-07  Tom Tromey  <tromey@redhat.com>\n+\n+\tPR libgcj/19611:\n+\t* Makefile.in: Rebuilt.\n+\t* Makefile.am (src.zip): New target.\n+\t(install-src.zip): Likewise.\n+\t(sourcesdir): New variable.\n+\n 2005-02-06  Jerry Quinn  <jlquinn@optonline.net>\n \n \t* javax/imageio/metadata/IIOMetadataNode.java:"}, {"sha": "ba40f65467574f3b0febebde0fe8eebfb8eefd20", "filename": "libjava/Makefile.am", "status": "modified", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0d87cdad8ae2f4b34e4dfe313bc91e716636ba7/libjava%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0d87cdad8ae2f4b34e4dfe313bc91e716636ba7/libjava%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.am?ref=f0d87cdad8ae2f4b34e4dfe313bc91e716636ba7", "patch": "@@ -3733,6 +3733,49 @@ texinfo: TexinfoDoclet.class\n \n ## ################################################################\n \n+##\n+## Creating and installing sources.zip\n+##\n+\n+## Create a zip holding all the sources.  This can be meaningfully\n+## used in Eclipse.\n+src.zip:\n+\t-rm -f src.zip\n+\there=`pwd`; \\\n+\t( ( cd $(srcdir); \\\n+\t  find java gnu javax org -name '*.java' -print | \\\n+\t  while read file; do \\\n+## Ugly code to avoid \"echo -C\".  Must separate each entry by a newline\n+## Gross but easy.\n+\t    echo \"x-C\" | sed -e 's/^.//'; \\\n+\t    echo $(srcdir); \\\n+\t    echo $$file; \\\n+\t  done ); \\\n+## Now the build tree.\n+\t  find gnu java -name '*.java' -print) | \\\n+## Many of the above circumlocutions are because ZIP will most likely\n+## be a relative path to fastjar.\n+\t$(ZIP) -cfM@ $$here/src.zip\n+## Now include the files from external/.\n+\tfor dir in sax w3c_dom; do \\\n+\t  (cd $(srcdir)/external/$$dir; \\\n+\t  find org -type f -name '*.java' -print | while read file; do \\\n+\t    echo \"x-C\" | sed -e 's/^.//'; \\\n+\t    echo $(srcdir)/external/$$dir; \\\n+\t    echo $$file; \\\n+          done) | \\\n+\t  $(ZIP) -ufM0E@ src.zip; \\\n+\tdone\n+\n+## We use a variable for this in case the user wants to override it.\n+sourcesdir = $(jardir)\n+\n+install-src.zip: src.zip\n+\t$(INSTALL_DATA) src.zip $(DESTDIR)$(sourcesdir)/src-@gcc_version@.zip\n+\n+\n+## ################################################################\n+\n ##\n ## Dependency tracking madness.\n ##"}, {"sha": "9b2d27477fc5fdaa497fc052f9b3e37daad0d9b3", "filename": "libjava/Makefile.in", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0d87cdad8ae2f4b34e4dfe313bc91e716636ba7/libjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0d87cdad8ae2f4b34e4dfe313bc91e716636ba7/libjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.in?ref=f0d87cdad8ae2f4b34e4dfe313bc91e716636ba7", "patch": "@@ -7891,6 +7891,7 @@ gnu/gcj/xlib/natXExposeEvent.cc \\\n gnu/gcj/xlib/natXImage.cc \\\n gnu/gcj/xlib/natXUnmapEvent.cc\n \n+sourcesdir = $(jardir)\n \n # Work around what appears to be a GNU make bug handling MAKEFLAGS\n # values defined in terms of make variables, as is the case for CC and\n@@ -26179,6 +26180,31 @@ texinfo: TexinfoDoclet.class\n \tjavadoc -outfile $(srcdir)/doc/java-util-jar.texi -doclet TexinfoDoclet -sourcepath .'$(CLASSPATH_SEPARATOR)'$(srcdir) $(srcdir)/java/util/jar/*.java\n \tjavadoc -outfile $(srcdir)/doc/java-util-zip.texi -doclet TexinfoDoclet -sourcepath .'$(CLASSPATH_SEPARATOR)'$(srcdir) $(srcdir)/java/util/zip/*.java\n \n+src.zip:\n+\t-rm -f src.zip\n+\there=`pwd`; \\\n+\t( ( cd $(srcdir); \\\n+\t  find java gnu javax org -name '*.java' -print | \\\n+\t  while read file; do \\\n+\t    echo \"x-C\" | sed -e 's/^.//'; \\\n+\t    echo $(srcdir); \\\n+\t    echo $$file; \\\n+\t  done ); \\\n+\t  find gnu java -name '*.java' -print) | \\\n+\t$(ZIP) -cfM@ $$here/src.zip\n+\tfor dir in sax w3c_dom; do \\\n+\t  (cd $(srcdir)/external/$$dir; \\\n+\t  find org -type f -name '*.java' -print | while read file; do \\\n+\t    echo \"x-C\" | sed -e 's/^.//'; \\\n+\t    echo $(srcdir)/external/$$dir; \\\n+\t    echo $$file; \\\n+          done) | \\\n+\t  $(ZIP) -ufM0E@ src.zip; \\\n+\tdone\n+\n+install-src.zip: src.zip\n+\t$(INSTALL_DATA) src.zip $(DESTDIR)$(sourcesdir)/src-@gcc_version@.zip\n+\n all-recursive: classes.stamp $(nat_headers) $(xlib_nat_headers)\n \n # Multilib support."}]}