{"sha": "f5afb270e6dae6d56ddad1fb2b8661dffe03259c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjVhZmIyNzBlNmRhZTZkNTZkZGFkMWZiMmI4NjYxZGZmZTAzMjU5Yw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-02T13:43:04Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-02T13:43:04Z"}, "message": "[multiple changes]\n\n2011-08-02  Yannick Moy  <moy@adacore.com>\n\n\t* sem_res.adb (Resolve_Logical_Op): ensure N is a binary operator\n\tbefore accessing operands.\n\t* sem_util.adb (Is_SPARK_Initialization_Expr): follow original nodes to\n\tdecide whether an initialization expression respects SPARK rules, as\n\tthe plain node is the expanded one. This allows for more valid warnings\n\tto be issued.\n\t* gnat_rm.texi: Minor update.\n\n2011-08-02  Arnaud Charlet  <charlet@adacore.com>\n\n\t* sem_ch13.adb (Analyze_Enumeration_Representation_Clause): Revert\n\tprevious change.\n\n2011-08-02  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_ch3.adb, sem_ch4.adb: Minor reformatting.\n\n2011-08-02  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* exp_ch5.adb (Expand_Iterator_Loop): Reformatting. Wrap the original\n\tloop statements and the element renaming declaration with a block when\n\tthe element type is controlled.\n\n2011-08-02  Yannick Moy  <moy@adacore.com>\n\n\t* sinfo.ads: Minor formatting.\n\n2011-08-02  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_aggr.adb (Add_Association): if the association has a box and no\n\texpression, use the Sloc of the aggregate itself for the new\n\tassociation.\n\t* errout.adb (First_Node): Exclude nodes with no Sloc, and always use\n\tthe Original_Node.\n\nFrom-SVN: r177153", "tree": {"sha": "d953455348b6692356e9d3505911569c6c09eb5a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d953455348b6692356e9d3505911569c6c09eb5a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f5afb270e6dae6d56ddad1fb2b8661dffe03259c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5afb270e6dae6d56ddad1fb2b8661dffe03259c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f5afb270e6dae6d56ddad1fb2b8661dffe03259c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5afb270e6dae6d56ddad1fb2b8661dffe03259c/comments", "author": null, "committer": null, "parents": [{"sha": "db72f10a75e878cf0c678e21bdc4b7222acca271", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db72f10a75e878cf0c678e21bdc4b7222acca271", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db72f10a75e878cf0c678e21bdc4b7222acca271"}], "stats": {"total": 283, "additions": 206, "deletions": 77}, "files": [{"sha": "0308954eed809c13701718a32917e9989eb90dd9", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5afb270e6dae6d56ddad1fb2b8661dffe03259c/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5afb270e6dae6d56ddad1fb2b8661dffe03259c/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=f5afb270e6dae6d56ddad1fb2b8661dffe03259c", "patch": "@@ -1,3 +1,40 @@\n+2011-08-02  Yannick Moy  <moy@adacore.com>\n+\n+\t* sem_res.adb (Resolve_Logical_Op): ensure N is a binary operator\n+\tbefore accessing operands.\n+\t* sem_util.adb (Is_SPARK_Initialization_Expr): follow original nodes to\n+\tdecide whether an initialization expression respects SPARK rules, as\n+\tthe plain node is the expanded one. This allows for more valid warnings\n+\tto be issued.\n+\t* gnat_rm.texi: Minor update.\n+\n+2011-08-02  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* sem_ch13.adb (Analyze_Enumeration_Representation_Clause): Revert\n+\tprevious change.\n+\n+2011-08-02  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_ch3.adb, sem_ch4.adb: Minor reformatting.\n+\n+2011-08-02  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* exp_ch5.adb (Expand_Iterator_Loop): Reformatting. Wrap the original\n+\tloop statements and the element renaming declaration with a block when\n+\tthe element type is controlled.\n+\n+2011-08-02  Yannick Moy  <moy@adacore.com>\n+\n+\t* sinfo.ads: Minor formatting.\n+\n+2011-08-02  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_aggr.adb (Add_Association): if the association has a box and no\n+\texpression, use the Sloc of the aggregate itself for the new\n+\tassociation.\n+\t* errout.adb (First_Node): Exclude nodes with no Sloc, and always use\n+\tthe Original_Node.\n+\n 2011-08-02  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* exp_ch5.adb (Expand_Iterator_Loop): Code cleanup and refactoring."}, {"sha": "076fec223df4ba708c55d87a4ac8370adb554e62", "filename": "gcc/ada/errout.adb", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5afb270e6dae6d56ddad1fb2b8661dffe03259c/gcc%2Fada%2Ferrout.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5afb270e6dae6d56ddad1fb2b8661dffe03259c/gcc%2Fada%2Ferrout.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.adb?ref=f5afb270e6dae6d56ddad1fb2b8661dffe03259c", "patch": "@@ -1308,6 +1308,7 @@ package body Errout is\n \n    function First_Node (C : Node_Id) return Node_Id is\n       L        : constant Source_Ptr        := Sloc (Original_Node (C));\n+      Orig     : constant Node_Id           := Original_Node (C);\n       Sfile    : constant Source_File_Index := Get_Source_File_Index (L);\n       Earliest : Node_Id;\n       Eloc     : Source_Ptr;\n@@ -1333,6 +1334,7 @@ package body Errout is\n \n          if Loc < Eloc\n            and then Loc /= Standard_Location\n+           and then Loc /= No_Location\n            and then Get_Source_File_Index (Loc) = Sfile\n          then\n             Earliest := Original_Node (N);\n@@ -1345,13 +1347,14 @@ package body Errout is\n    --  Start of processing for First_Node\n \n    begin\n-      if Nkind (C) in N_Subexpr then\n-         Earliest := Original_Node (C);\n+      if Nkind (Orig) in N_Subexpr then\n+         Earliest := Orig;\n          Eloc := Sloc (Earliest);\n-         Search_Tree_First (Original_Node (C));\n+         Search_Tree_First (Orig);\n          return Earliest;\n+\n       else\n-         return C;\n+         return Orig;\n       end if;\n    end First_Node;\n "}, {"sha": "7ff1a3dcce24f591fb05336e8bc1ea2a573078f2", "filename": "gcc/ada/exp_ch5.adb", "status": "modified", "additions": 54, "deletions": 22, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5afb270e6dae6d56ddad1fb2b8661dffe03259c/gcc%2Fada%2Fexp_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5afb270e6dae6d56ddad1fb2b8661dffe03259c/gcc%2Fada%2Fexp_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch5.adb?ref=f5afb270e6dae6d56ddad1fb2b8661dffe03259c", "patch": "@@ -2770,13 +2770,12 @@ package body Exp_Ch5 is\n       I_Spec : constant Node_Id    := Iterator_Specification (Isc);\n       Id     : constant Entity_Id  := Defining_Identifier (I_Spec);\n       Loc    : constant Source_Ptr := Sloc (N);\n-      Stats  : constant List_Id    := Statements (N);\n \n       Container     : constant Node_Id   := Name (I_Spec);\n       Container_Typ : constant Entity_Id := Etype (Container);\n-\n-      Cursor   : Entity_Id;\n-      New_Loop : Node_Id;\n+      Cursor        : Entity_Id;\n+      New_Loop      : Node_Id;\n+      Stats         : List_Id := Statements (N);\n \n    begin\n       --  Processing for arrays\n@@ -2839,25 +2838,32 @@ package body Exp_Ch5 is\n       --  Processing for containers\n \n       else\n-         --  In both cases these require a cursor of the proper type\n+         --  The for loop is expanded into a while loop which uses a container\n+         --  specific cursor to examine each element.\n \n          --    Cursor : Pack.Cursor := Container.First;\n          --    while Cursor /= Pack.No_Element loop\n-         --       Obj : Pack.Element_Type renames Element (Cursor);\n-         --       --  for the \"of\" form\n+         --       declare\n+         --       --  the block is added when Element_Type is controlled\n \n-         --       <original loop statements>\n+         --          Obj : Pack.Element_Type := Element (Cursor);\n+         --          --  for the \"of\" loop form\n+         --       begin\n+         --          <original loop statements>\n+         --       end;\n \n          --       Pack.Next (Cursor);\n          --    end loop;\n \n-         --  with the obvious replacements if \"reverse\" is specified. Pack is\n-         --  the name of the package which instantiates the container.\n+         --  If \"reverse\" is present, then the initialization of the cursor\n+         --  uses Last and the step becomes Prev. Pack is the name of the\n+         --  package which instantiates the container.\n \n          declare\n             Element_Type : constant Entity_Id := Etype (Id);\n             Pack         : constant Entity_Id :=\n                              Scope (Base_Type (Container_Typ));\n+            Decl         : Node_Id;\n             Cntr         : Node_Id;\n             Name_Init    : Name_Id;\n             Name_Step    : Name_Id;\n@@ -2873,26 +2879,52 @@ package body Exp_Ch5 is\n \n             --  The code below only handles containers where Element is not a\n             --  primitive operation of the container. This excludes for now the\n-            --  Hi-Lite formal containers. Generate:\n-            --\n-            --    Id : Element_Type renames Container.Element (Cursor);\n+            --  Hi-Lite formal containers.\n \n             if Of_Present (I_Spec) then\n-               Prepend_To (Stats,\n+\n+               --  Generate:\n+               --    Id : Element_Type := Pack.Element (Cursor);\n+\n+               Decl :=\n                  Make_Object_Renaming_Declaration (Loc,\n                    Defining_Identifier => Id,\n                    Subtype_Mark =>\n-                     New_Occurrence_Of (Element_Type, Loc),\n+                     New_Reference_To (Element_Type, Loc),\n                    Name =>\n                      Make_Indexed_Component (Loc,\n                        Prefix =>\n                          Make_Selected_Component (Loc,\n                            Prefix =>\n-                             New_Occurrence_Of (Pack, Loc),\n+                             New_Reference_To (Pack, Loc),\n                            Selector_Name =>\n                              Make_Identifier (Loc, Chars => Name_Element)),\n                        Expressions => New_List (\n-                         New_Occurrence_Of (Cursor, Loc)))));\n+                         New_Reference_To (Cursor, Loc))));\n+\n+               --  When the container holds controlled objects, wrap the loop\n+               --  statements and element renaming declaration with a block.\n+               --  This ensures that the transient result of Element (Cursor)\n+               --  is cleaned up after each iteration of the loop.\n+\n+               if Needs_Finalization (Element_Type) then\n+\n+                  --  Generate:\n+                  --    declare\n+                  --       Id : Element_Type := Pack.Element (Cursor);\n+                  --    begin\n+                  --       <original loop statments>\n+                  --    end;\n+\n+                  Stats := New_List (\n+                    Make_Block_Statement (Loc,\n+                      Declarations => New_List (Decl),\n+                      Handled_Statement_Sequence =>\n+                        Make_Handled_Sequence_Of_Statements (Loc,\n+                          Statements => Stats)));\n+               else\n+                  Prepend_To (Stats, Decl);\n+               end if;\n             end if;\n \n             --  Determine the advancement and initialization steps for the\n@@ -2918,12 +2950,12 @@ package body Exp_Ch5 is\n                 Name =>\n                   Make_Selected_Component (Loc,\n                     Prefix =>\n-                      New_Occurrence_Of (Pack, Loc),\n+                      New_Reference_To (Pack, Loc),\n                     Selector_Name =>\n                       Make_Identifier (Loc, Name_Step)),\n \n                 Parameter_Associations => New_List (\n-                  New_Occurrence_Of (Cursor, Loc))));\n+                  New_Reference_To (Cursor, Loc))));\n \n             --  Generate:\n             --    while Cursor /= Pack.No_Element loop\n@@ -2937,11 +2969,11 @@ package body Exp_Ch5 is\n                     Condition =>\n                       Make_Op_Ne (Loc,\n                         Left_Opnd =>\n-                          New_Occurrence_Of (Cursor, Loc),\n+                          New_Reference_To (Cursor, Loc),\n                         Right_Opnd =>\n                           Make_Selected_Component (Loc,\n                             Prefix =>\n-                              New_Occurrence_Of (Pack, Loc),\n+                              New_Reference_To (Pack, Loc),\n                             Selector_Name =>\n                               Make_Identifier (Loc, Name_No_Element)))),\n                 Statements => Stats,\n@@ -2985,7 +3017,7 @@ package body Exp_Ch5 is\n                 Object_Definition =>\n                   Make_Selected_Component (Loc,\n                     Prefix =>\n-                      New_Occurrence_Of (Pack, Loc),\n+                      New_Reference_To (Pack, Loc),\n                     Selector_Name =>\n                       Make_Identifier (Loc, Name_Cursor)),\n "}, {"sha": "ac0a7ee6d1932364130e21c18da9824037249416", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5afb270e6dae6d56ddad1fb2b8661dffe03259c/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5afb270e6dae6d56ddad1fb2b8661dffe03259c/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=f5afb270e6dae6d56ddad1fb2b8661dffe03259c", "patch": "@@ -9059,7 +9059,10 @@ the Ada mode for the unit, so a unit compiled in Ada 95 mode with SPARK\n restrictions will be checked for constructs forbidden in SPARK 95.\n Error messages related to SPARK restriction have the form:\n \n-@code{(spark) error message}.\n+@smallexample\n+violation of restriction \"Spark\" at <file>\n+ <error message>\n+@end smallexample\n \n This is not a replacement for the semantic checks performed by the\n SPARK Examiner tool, as the compiler only deals currently with code,"}, {"sha": "89db3d005dfb970fc3bd6ac6e0b6706e30a0e7fa", "filename": "gcc/ada/sem_aggr.adb", "status": "modified", "additions": 49, "deletions": 2, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5afb270e6dae6d56ddad1fb2b8661dffe03259c/gcc%2Fada%2Fsem_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5afb270e6dae6d56ddad1fb2b8661dffe03259c/gcc%2Fada%2Fsem_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aggr.adb?ref=f5afb270e6dae6d56ddad1fb2b8661dffe03259c", "patch": "@@ -1171,6 +1171,17 @@ package body Sem_Aggr is\n             end if;\n \n             if not Aggr_Resolved then\n+\n+               --  A parenthesized expression may have been intended as an\n+               --  aggregate, leading to a type error when analyzing the\n+               --  component. This can also happen for a nested component\n+               --  (see Analyze_Aggr_Expr).\n+\n+               if Paren_Count (N) > 0 then\n+                  Error_Msg_N\n+                    (\"positional aggregate cannot have one component\", N);\n+               end if;\n+\n                Aggr_Subtyp := Any_Composite;\n             else\n                Aggr_Subtyp := Array_Aggr_Subtype (N, Typ);\n@@ -1589,6 +1600,7 @@ package body Sem_Aggr is\n                        (\"\\if single-component aggregate is intended,\"\n                         & \" write e.g. (1 ='> ...)\", Expr);\n                   end if;\n+\n                   return Failure;\n                end if;\n             end if;\n@@ -1742,6 +1754,31 @@ package body Sem_Aggr is\n          return Failure;\n       end if;\n \n+      if Others_Present\n+        and then Nkind (Parent (N)) /= N_Component_Association\n+        and then No (Expressions (N))\n+        and then\n+          Nkind (First (Choices (First (Component_Associations (N)))))\n+            = N_Others_Choice\n+        and then Is_Elementary_Type (Component_Typ)\n+        and then False\n+      then\n+         declare\n+            Assoc : constant Node_Id := First (Component_Associations (N));\n+         begin\n+            Rewrite (Assoc,\n+              Make_Component_Association (Loc,\n+                 Choices =>\n+                   New_List (\n+                     Make_Attribute_Reference (Loc,\n+                       Prefix => New_Occurrence_Of (Index_Typ, Loc),\n+                       Attribute_Name => Name_Range)),\n+                 Expression => Relocate_Node (Expression (Assoc))));\n+            return Resolve_Array_Aggregate\n+              (N, Index, Index_Constr, Component_Typ, Others_Allowed);\n+         end;\n+      end if;\n+\n       --  Protect against cascaded errors\n \n       if Etype (Index_Typ) = Any_Type then\n@@ -2752,13 +2789,23 @@ package body Sem_Aggr is\n          Assoc_List     : List_Id;\n          Is_Box_Present : Boolean := False)\n       is\n+         Loc : Source_Ptr;\n          Choice_List : constant List_Id := New_List;\n          New_Assoc   : Node_Id;\n \n       begin\n-         Append (New_Occurrence_Of (Component, Sloc (Expr)), Choice_List);\n+         --  If this is a box association the expression is missing, so\n+         --  use the Sloc of the aggregate itself for the new association.\n+\n+         if Present (Expr) then\n+            Loc := Sloc (Expr);\n+         else\n+            Loc := Sloc (N);\n+         end if;\n+\n+         Append (New_Occurrence_Of (Component, Loc), Choice_List);\n          New_Assoc :=\n-           Make_Component_Association (Sloc (Expr),\n+           Make_Component_Association (Loc,\n              Choices     => Choice_List,\n              Expression  => Expr,\n              Box_Present => Is_Box_Present);"}, {"sha": "a1af56f5aec2dedfcecab1b0967c9825de9836a8", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5afb270e6dae6d56ddad1fb2b8661dffe03259c/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5afb270e6dae6d56ddad1fb2b8661dffe03259c/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=f5afb270e6dae6d56ddad1fb2b8661dffe03259c", "patch": "@@ -2843,7 +2843,7 @@ package body Sem_Ch13 is\n       --  Pointer to node for literal providing max value\n \n    begin\n-      if Ignore_Rep_Clauses or else CodePeer_Mode then\n+      if Ignore_Rep_Clauses then\n          return;\n       end if;\n "}, {"sha": "0571ab24eb84866dd1ff9b2e4db1cf62ab3554ed", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5afb270e6dae6d56ddad1fb2b8661dffe03259c/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5afb270e6dae6d56ddad1fb2b8661dffe03259c/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=f5afb270e6dae6d56ddad1fb2b8661dffe03259c", "patch": "@@ -3175,7 +3175,9 @@ package body Sem_Ch3 is\n \n          if Nkind (Original_Node (N)) = N_Object_Declaration\n            and then Comes_From_Source (Original_Node (N))\n-           --  only call test if needed\n+\n+           --  Only call test if needed\n+\n            and then (Formal_Verification_Mode\n                       or else Restriction_Check_Required (SPARK))\n            and then not Is_SPARK_Initialization_Expr (E)"}, {"sha": "5a5169bc50d5a8d53d5d7afe051963db82105d51", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5afb270e6dae6d56ddad1fb2b8661dffe03259c/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5afb270e6dae6d56ddad1fb2b8661dffe03259c/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=f5afb270e6dae6d56ddad1fb2b8661dffe03259c", "patch": "@@ -809,9 +809,11 @@ package body Sem_Ch4 is\n       procedure Check_Mixed_Parameter_And_Named_Associations is\n          Actual     : Node_Id;\n          Named_Seen : Boolean;\n+\n       begin\n-         Actual := First (Actuals);\n          Named_Seen := False;\n+\n+         Actual := First (Actuals);\n          while Present (Actual) loop\n             case Nkind (Actual) is\n                when N_Parameter_Association =>\n@@ -1922,7 +1924,8 @@ package body Sem_Ch4 is\n       ---------------------------\n \n       procedure Process_Function_Call is\n-         Actual     : Node_Id;\n+         Actual : Node_Id;\n+\n       begin\n          Change_Node (N, N_Function_Call);\n          Set_Name (N, P);"}, {"sha": "4d54142b5b8d46de5988fc4cb3227708518815e3", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 17, "deletions": 16, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5afb270e6dae6d56ddad1fb2b8661dffe03259c/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5afb270e6dae6d56ddad1fb2b8661dffe03259c/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=f5afb270e6dae6d56ddad1fb2b8661dffe03259c", "patch": "@@ -7324,22 +7324,23 @@ package body Sem_Res is\n       --  bounds. Of course the types have to match, so only check if operands\n       --  are compatible and the node itself has no errors.\n \n-      declare\n-         Left_Typ  : constant Node_Id := Etype (Left_Opnd (N));\n-         Right_Typ : constant Node_Id := Etype (Right_Opnd (N));\n-      begin\n-         if Is_Array_Type (B_Typ)\n-           and then Nkind (N) in N_Binary_Op\n-           and then Base_Type (Left_Typ) = Base_Type (Right_Typ)\n-           and then Left_Typ /= Any_Composite  --  or else Left_Opnd in error\n-           and then Right_Typ /= Any_Composite  --  or else Right_Opnd in error\n-           and then not Matching_Static_Array_Bounds (Left_Typ, Right_Typ)\n-         then\n-            Check_Formal_Restriction\n-              (\"array types should have matching static bounds\", N);\n-         end if;\n-      end;\n-\n+      if Is_Array_Type (B_Typ)\n+        and then Nkind (N) in N_Binary_Op\n+      then\n+         declare\n+            Left_Typ  : constant Node_Id := Etype (Left_Opnd (N));\n+            Right_Typ : constant Node_Id := Etype (Right_Opnd (N));\n+         begin\n+            if Base_Type (Left_Typ) = Base_Type (Right_Typ)\n+              and then Left_Typ /= Any_Composite  --  or Left_Opnd in error\n+              and then Right_Typ /= Any_Composite  --  or Right_Opnd in error\n+              and then not Matching_Static_Array_Bounds (Left_Typ, Right_Typ)\n+            then\n+               Check_Formal_Restriction\n+                 (\"array types should have matching static bounds\", N);\n+            end if;\n+         end;\n+      end if;\n    end Resolve_Logical_Op;\n \n    ---------------------------"}, {"sha": "dbe5887690b4b38305fd5788c83a6a94a1f8b428", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 19, "deletions": 18, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5afb270e6dae6d56ddad1fb2b8661dffe03259c/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5afb270e6dae6d56ddad1fb2b8661dffe03259c/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=f5afb270e6dae6d56ddad1fb2b8661dffe03259c", "patch": "@@ -7503,17 +7503,18 @@ package body Sem_Util is\n       Is_Ok     : Boolean;\n       Expr      : Node_Id;\n       Comp_Assn : Node_Id;\n+      Orig_N    : constant Node_Id := Original_Node (N);\n \n    begin\n       Is_Ok := True;\n \n-      if not Comes_From_Source (N) then\n+      if not Comes_From_Source (Orig_N) then\n          goto Done;\n       end if;\n \n-      pragma Assert (Nkind (N) in N_Subexpr);\n+      pragma Assert (Nkind (Orig_N) in N_Subexpr);\n \n-      case Nkind (N) is\n+      case Nkind (Orig_N) is\n          when N_Character_Literal |\n               N_Integer_Literal   |\n               N_Real_Literal      |\n@@ -7522,17 +7523,17 @@ package body Sem_Util is\n \n          when N_Identifier    |\n               N_Expanded_Name =>\n-            if Is_Entity_Name (N)\n-              and then Present (Entity (N))  --  needed in some cases\n+            if Is_Entity_Name (Orig_N)\n+              and then Present (Entity (Orig_N))  --  needed in some cases\n             then\n-               case Ekind (Entity (N)) is\n+               case Ekind (Entity (Orig_N)) is\n                   when E_Constant            |\n                        E_Enumeration_Literal |\n                        E_Named_Integer       |\n                        E_Named_Real          =>\n                      null;\n                   when others =>\n-                     if Is_Type (Entity (N)) then\n+                     if Is_Type (Entity (Orig_N)) then\n                         null;\n                      else\n                         Is_Ok := False;\n@@ -7542,24 +7543,24 @@ package body Sem_Util is\n \n          when N_Qualified_Expression |\n               N_Type_Conversion      =>\n-            Is_Ok := Is_SPARK_Initialization_Expr (Expression (N));\n+            Is_Ok := Is_SPARK_Initialization_Expr (Expression (Orig_N));\n \n          when N_Unary_Op =>\n-            Is_Ok := Is_SPARK_Initialization_Expr (Right_Opnd (N));\n+            Is_Ok := Is_SPARK_Initialization_Expr (Right_Opnd (Orig_N));\n \n          when N_Binary_Op       |\n               N_Short_Circuit   |\n               N_Membership_Test =>\n-            Is_Ok := Is_SPARK_Initialization_Expr (Left_Opnd (N))\n-              and then Is_SPARK_Initialization_Expr (Right_Opnd (N));\n+            Is_Ok := Is_SPARK_Initialization_Expr (Left_Opnd (Orig_N))\n+              and then Is_SPARK_Initialization_Expr (Right_Opnd (Orig_N));\n \n          when N_Aggregate           |\n               N_Extension_Aggregate =>\n-            if Nkind (N) = N_Extension_Aggregate then\n-               Is_Ok := Is_SPARK_Initialization_Expr (Ancestor_Part (N));\n+            if Nkind (Orig_N) = N_Extension_Aggregate then\n+               Is_Ok := Is_SPARK_Initialization_Expr (Ancestor_Part (Orig_N));\n             end if;\n \n-            Expr := First (Expressions (N));\n+            Expr := First (Expressions (Orig_N));\n             while Present (Expr) loop\n                if not Is_SPARK_Initialization_Expr (Expr) then\n                   Is_Ok := False;\n@@ -7569,7 +7570,7 @@ package body Sem_Util is\n                Next (Expr);\n             end loop;\n \n-            Comp_Assn := First (Component_Associations (N));\n+            Comp_Assn := First (Component_Associations (Orig_N));\n             while Present (Comp_Assn) loop\n                Expr := Expression (Comp_Assn);\n                if Present (Expr)  --  needed for box association\n@@ -7583,11 +7584,11 @@ package body Sem_Util is\n             end loop;\n \n          when N_Attribute_Reference =>\n-            if Nkind (Prefix (N)) in N_Subexpr then\n-               Is_Ok := Is_SPARK_Initialization_Expr (Prefix (N));\n+            if Nkind (Prefix (Orig_N)) in N_Subexpr then\n+               Is_Ok := Is_SPARK_Initialization_Expr (Prefix (Orig_N));\n             end if;\n \n-            Expr := First (Expressions (N));\n+            Expr := First (Expressions (Orig_N));\n             while Present (Expr) loop\n                if not Is_SPARK_Initialization_Expr (Expr) then\n                   Is_Ok := False;"}, {"sha": "e5ca5aae247007e520b4299296966a80e43ab6f7", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5afb270e6dae6d56ddad1fb2b8661dffe03259c/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5afb270e6dae6d56ddad1fb2b8661dffe03259c/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=f5afb270e6dae6d56ddad1fb2b8661dffe03259c", "patch": "@@ -2095,7 +2095,7 @@ package Sinfo is\n       --  pragma has a local name argument (such as pragma Inline), it is\n       --  resolved to point to the specific entity affected by the pragma.\n \n-   --------------------------------------\n+      --------------------------------------\n       -- 2.8  Pragma Argument Association --\n       --------------------------------------\n \n@@ -4203,9 +4203,9 @@ package Sinfo is\n       --  True. So after semantic analysis, the Identifier is always set,\n       --  referencing an identifier whose entity has an Ekind of E_Loop.\n \n-      --------------------------\n-      -- 5.5 Iteration Scheme --\n-      --------------------------\n+      ---------------------------\n+      -- 5.5  Iteration Scheme --\n+      ---------------------------\n \n       --  ITERATION_SCHEME ::=\n       --    while CONDITION\n@@ -4228,7 +4228,7 @@ package Sinfo is\n       --  Loop_Parameter_Specification (Node4) (set to Empty if WHILE case)\n \n       ---------------------------------------\n-      -- 5.5  Loop parameter specification --\n+      -- 5.5  Loop Parameter Specification --\n       ---------------------------------------\n \n       --  LOOP_PARAMETER_SPECIFICATION ::=\n@@ -4240,9 +4240,9 @@ package Sinfo is\n       --  Reverse_Present (Flag15)\n       --  Discrete_Subtype_Definition (Node4)\n \n-      ----------------------------------\n-      -- 5.5.1 Iterator specification --\n-      ----------------------------------\n+      -----------------------------------\n+      -- 5.5.1  Iterator Specification --\n+      -----------------------------------\n \n       --  ITERATOR_SPECIFICATION ::=\n       --    DEFINING_IDENTIFIER in [reverse] NAME\n@@ -4512,14 +4512,14 @@ package Sinfo is\n       --  profile. Instead the information appears directly in the parent.\n \n       ----------------------\n-      -- 6.1  Formal part --\n+      -- 6.1  Formal Part --\n       ----------------------\n \n       --  FORMAL_PART ::=\n       --    (PARAMETER_SPECIFICATION {; PARAMETER_SPECIFICATION})\n \n       ----------------------------------\n-      -- 6.1  Parameter specification --\n+      -- 6.1  Parameter Specification --\n       ----------------------------------\n \n       --  PARAMETER_SPECIFICATION ::="}]}