{"sha": "96f315213f337c2d5a9268f2d3e8337bbdb71bfc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTZmMzE1MjEzZjMzN2MyZDVhOTI2OGYyZDNlODMzN2JiZGI3MWJmYw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-11-09T13:32:41Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-11-09T14:50:24Z"}, "message": "tree-optimization/97761 - fix SLP live calculation\n\nThis removes a premature end of the DFS walk.\n\n2020-11-09  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/97761\n\t* tree-vect-slp.c (vect_bb_slp_mark_live_stmts): Remove\n\tpremature end of DFS walk.\n\n\t* gfortran.dg/vect/pr97761.f90: New testcase.", "tree": {"sha": "8d83148e49ee571251e54dfd4cd9e55d66c23a3c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8d83148e49ee571251e54dfd4cd9e55d66c23a3c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/96f315213f337c2d5a9268f2d3e8337bbdb71bfc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96f315213f337c2d5a9268f2d3e8337bbdb71bfc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/96f315213f337c2d5a9268f2d3e8337bbdb71bfc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96f315213f337c2d5a9268f2d3e8337bbdb71bfc/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4e85ad79a137535393d8dc169359e1730cab3533", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e85ad79a137535393d8dc169359e1730cab3533", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e85ad79a137535393d8dc169359e1730cab3533"}], "stats": {"total": 36, "additions": 32, "deletions": 4}, "files": [{"sha": "250e2bf016e649cd28acc1d377526afcc7614782", "filename": "gcc/testsuite/gfortran.dg/vect/pr97761.f90", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96f315213f337c2d5a9268f2d3e8337bbdb71bfc/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Fpr97761.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96f315213f337c2d5a9268f2d3e8337bbdb71bfc/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Fpr97761.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Fpr97761.f90?ref=96f315213f337c2d5a9268f2d3e8337bbdb71bfc", "patch": "@@ -0,0 +1,32 @@\n+! { dg-do compile }\n+! { dg-additional-options \"-O1\" }\n+\n+subroutine ni (ps)\n+    type vector\n+       real  x, y\n+    end type \n+    type quad_inductor\n+       type (vector) v1, v2\n+    end type \n+    type (quad_inductor), dimension(inout) :: ps\n+    integer :: dl, nk = 1.0\n+    fo = 1.0\n+    if (f == 1) then\n+       nk = 0.0\n+       fo = 0.0\n+    end if\n+    ot = nk * 0.5\n+    gb = -fo * 0.5\n+    wu = fo * 0.5\n+    up = nk * 0.1\n+    xe = up * 0.1\n+    do lx = 0, 7\n+       ps%v2%y = -wu\n+       ps(dl)%v1%x = xe + 1.0\n+       ps(dl)%v1%y = wu - tn\n+    end do\n+    do lx = 0, 7\n+       ps(dl)%v1%x = 0.1 - ot\n+       ps(dl)%v1%y = 0.1 - wu\n+    end do\n+end"}, {"sha": "e4c2aa480e5dec34ab0afb68cf55e1c57ad501b1", "filename": "gcc/tree-vect-slp.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96f315213f337c2d5a9268f2d3e8337bbdb71bfc/gcc%2Ftree-vect-slp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96f315213f337c2d5a9268f2d3e8337bbdb71bfc/gcc%2Ftree-vect-slp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-slp.c?ref=96f315213f337c2d5a9268f2d3e8337bbdb71bfc", "patch": "@@ -3549,12 +3549,10 @@ vect_bb_slp_mark_live_stmts (bb_vec_info bb_vinfo, slp_tree node,\n   unsigned i;\n   stmt_vec_info stmt_info;\n   stmt_vec_info last_stmt = vect_find_last_scalar_stmt_in_slp (node);\n-  bool all_visited = true;\n   FOR_EACH_VEC_ELT (SLP_TREE_SCALAR_STMTS (node), i, stmt_info)\n     {\n       if (svisited.contains (stmt_info))\n \tcontinue;\n-      all_visited = false;\n       stmt_vec_info orig_stmt_info = vect_orig_stmt (stmt_info);\n       if (STMT_VINFO_IN_PATTERN_P (orig_stmt_info)\n \t  && STMT_VINFO_RELATED_STMT (orig_stmt_info) != stmt_info)\n@@ -3628,8 +3626,6 @@ vect_bb_slp_mark_live_stmts (bb_vec_info bb_vinfo, slp_tree node,\n       if (mark_visited)\n \tsvisited.add (stmt_info);\n     }\n-  if (all_visited)\n-    return;\n \n   slp_tree child;\n   FOR_EACH_VEC_ELT (SLP_TREE_CHILDREN (node), i, child)"}]}