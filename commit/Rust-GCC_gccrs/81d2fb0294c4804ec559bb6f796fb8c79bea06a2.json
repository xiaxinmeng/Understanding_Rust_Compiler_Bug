{"sha": "81d2fb0294c4804ec559bb6f796fb8c79bea06a2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODFkMmZiMDI5NGM0ODA0ZWM1NTliYjZmNzk2ZmI4Yzc5YmVhMDZhMg==", "commit": {"author": {"name": "Christian Bruel", "email": "christian.bruel@st.com", "date": "2007-08-22T14:38:16Z"}, "committer": {"name": "Christian Bruel", "email": "chrbr@gcc.gnu.org", "date": "2007-08-22T14:38:16Z"}, "message": "fixed -ffinite-math-only A-A missing optimisation\n\n\nCo-Authored-By: Richard Guenther <rguenther@suse.de>\n\nFrom-SVN: r127705", "tree": {"sha": "e4a372adecd095b7b82017b726220ef5440be287", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e4a372adecd095b7b82017b726220ef5440be287"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/81d2fb0294c4804ec559bb6f796fb8c79bea06a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81d2fb0294c4804ec559bb6f796fb8c79bea06a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/81d2fb0294c4804ec559bb6f796fb8c79bea06a2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81d2fb0294c4804ec559bb6f796fb8c79bea06a2/comments", "author": null, "committer": null, "parents": [{"sha": "fcdb5d68deffd7e82c3362e210e64dec78a66d62", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fcdb5d68deffd7e82c3362e210e64dec78a66d62", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fcdb5d68deffd7e82c3362e210e64dec78a66d62"}], "stats": {"total": 35, "additions": 25, "deletions": 10}, "files": [{"sha": "884552320c08f581dbd5b97c286153f87eb8992a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81d2fb0294c4804ec559bb6f796fb8c79bea06a2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81d2fb0294c4804ec559bb6f796fb8c79bea06a2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=81d2fb0294c4804ec559bb6f796fb8c79bea06a2", "patch": "@@ -1,3 +1,9 @@\n+2007-02-16  Christian Bruel  <christian.bruel@st.com>\t\n+            Richard Guenther <rguenther@suse.de>\n+\t\n+\t* fold-const.c (fold_binary): Optimize A-A if -ffinite-math-only.\n+\t* simplify_rtx (simplify_binary_operation_1): Likewise.\n+\t\t\n 2007-08-22  Rask Ingemann Lambertsen  <rask@sygehus.dk>\n \n \tPR rtl-optimization/32557"}, {"sha": "ed05f1fc2c0189f82ceabeeed268507d01b2edbc", "filename": "gcc/fold-const.c", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81d2fb0294c4804ec559bb6f796fb8c79bea06a2/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81d2fb0294c4804ec559bb6f796fb8c79bea06a2/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=81d2fb0294c4804ec559bb6f796fb8c79bea06a2", "patch": "@@ -10149,10 +10149,7 @@ fold_binary (enum tree_code code, tree type, tree op0, tree op1)\n \t Also note that operand_equal_p is always false if an operand\n \t is volatile.  */\n \n-      if ((! FLOAT_TYPE_P (type)\n-\t   || (flag_unsafe_math_optimizations\n-\t       && !HONOR_NANS (TYPE_MODE (type))\n-\t       && !HONOR_INFINITIES (TYPE_MODE (type))))\n+      if ((!FLOAT_TYPE_P (type) || !HONOR_NANS (TYPE_MODE (type)))\n \t  && operand_equal_p (arg0, arg1, 0))\n \treturn fold_convert (type, integer_zero_node);\n "}, {"sha": "d9cf023c7c2ed5d4d2676a395411987544ff62c1", "filename": "gcc/simplify-rtx.c", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81d2fb0294c4804ec559bb6f796fb8c79bea06a2/gcc%2Fsimplify-rtx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81d2fb0294c4804ec559bb6f796fb8c79bea06a2/gcc%2Fsimplify-rtx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsimplify-rtx.c?ref=81d2fb0294c4804ec559bb6f796fb8c79bea06a2", "patch": "@@ -1769,14 +1769,10 @@ simplify_binary_operation_1 (enum rtx_code code, enum machine_mode mode,\n     case MINUS:\n       /* We can't assume x-x is 0 even with non-IEEE floating point,\n \t but since it is zero except in very strange circumstances, we\n-\t will treat it as zero with -funsafe-math-optimizations and\n-\t -ffinite-math-only.  */\n+\t will treat it as zero with -ffinite-math-only.  */\n       if (rtx_equal_p (trueop0, trueop1)\n \t  && ! side_effects_p (op0)\n-\t  && (! FLOAT_MODE_P (mode)\n-\t      || (flag_unsafe_math_optimizations\n-\t\t  && !HONOR_NANS (mode)\n-\t\t  && !HONOR_INFINITIES (mode))))\n+\t  && (!FLOAT_MODE_P (mode) || !HONOR_NANS (mode)))\n \treturn CONST0_RTX (mode);\n \n       /* Change subtraction from zero into negation.  (0 - x) is the"}, {"sha": "6068fa9db9ba27313826d318d41698c9e62b7d15", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81d2fb0294c4804ec559bb6f796fb8c79bea06a2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81d2fb0294c4804ec559bb6f796fb8c79bea06a2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=81d2fb0294c4804ec559bb6f796fb8c79bea06a2", "patch": "@@ -1,3 +1,7 @@\n+2007-08-21  Christian Bruel  <christian.bruel@st.com>\n+\n+\t* gcc.dg/fold-sub.c: New test.\n+\t\n 2007-08-22  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* gcc.dg/20000724-1.c, gcc.dg/980312-1.c, gcc.dg/980313-1.c,"}, {"sha": "28a8dd51fda43c20d29ca28b2e11e9f577efb98e", "filename": "gcc/testsuite/gcc.dg/fold-sub.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81d2fb0294c4804ec559bb6f796fb8c79bea06a2/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-sub.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81d2fb0294c4804ec559bb6f796fb8c79bea06a2/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-sub.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-sub.c?ref=81d2fb0294c4804ec559bb6f796fb8c79bea06a2", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-ffinite-math-only -fdump-tree-gimple\" } */\n+\n+float f(float x)\n+{\n+  return x - x;\n+}\n+\n+/* Substraction should be turned into 0.  */\n+\n+/* { dg-final { scan-tree-dump-not \" - \" \"gimple\" } } */\n+/* { dg-final { cleanup-tree-dump \"gimple\" } } */"}]}