{"sha": "f2bc252be3a5ccb8846fdc28a830b8a75cf64519", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjJiYzI1MmJlM2E1Y2NiODg0NmZkYzI4YTgzMGI4YTc1Y2Y2NDUxOQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2014-01-04T21:51:51Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2014-01-04T21:51:51Z"}, "message": "arm.c (arm_get_frame_offsets): Revamp long lines.\n\n\t* config/arm/arm.c (arm_get_frame_offsets): Revamp long lines.\n\t(arm_expand_epilogue_apcs_frame): Take into account the number of bytes\n\tused to save the static chain register in the computation of the offset\n\tfrom which the FP registers need to be restored.\n\nFrom-SVN: r206337", "tree": {"sha": "e739bab6b27734e81f94f43d982d889228873821", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e739bab6b27734e81f94f43d982d889228873821"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f2bc252be3a5ccb8846fdc28a830b8a75cf64519", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2bc252be3a5ccb8846fdc28a830b8a75cf64519", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2bc252be3a5ccb8846fdc28a830b8a75cf64519", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2bc252be3a5ccb8846fdc28a830b8a75cf64519/comments", "author": null, "committer": null, "parents": [{"sha": "39719c84006d2dc2873cef482de74755925e631f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39719c84006d2dc2873cef482de74755925e631f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/39719c84006d2dc2873cef482de74755925e631f"}], "stats": {"total": 74, "additions": 69, "deletions": 5}, "files": [{"sha": "83b39e246509a89e220dd3ecad348c6e231a9437", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2bc252be3a5ccb8846fdc28a830b8a75cf64519/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2bc252be3a5ccb8846fdc28a830b8a75cf64519/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f2bc252be3a5ccb8846fdc28a830b8a75cf64519", "patch": "@@ -1,3 +1,10 @@\n+2014-01-04  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* config/arm/arm.c (arm_get_frame_offsets): Revamp long lines.\n+\t(arm_expand_epilogue_apcs_frame): Take into account the number of bytes\n+\tused to save the static chain register in the computation of the offset\n+\tfrom which the FP registers need to be restored.\n+\n 2014-01-04  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/59519"}, {"sha": "142db45d7c57a435a18056ff8d83aab49699778e", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2bc252be3a5ccb8846fdc28a830b8a75cf64519/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2bc252be3a5ccb8846fdc28a830b8a75cf64519/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=f2bc252be3a5ccb8846fdc28a830b8a75cf64519", "patch": "@@ -20316,8 +20316,10 @@ arm_get_frame_offsets (void)\n   offsets->saved_args = crtl->args.pretend_args_size;\n \n   /* In Thumb mode this is incorrect, but never used.  */\n-  offsets->frame = offsets->saved_args + (frame_pointer_needed ? 4 : 0) +\n-                   arm_compute_static_chain_stack_bytes();\n+  offsets->frame\n+    = (offsets->saved_args\n+       + arm_compute_static_chain_stack_bytes ()\n+       + (frame_pointer_needed ? 4 : 0));\n \n   if (TARGET_32BIT)\n     {\n@@ -20357,9 +20359,10 @@ arm_get_frame_offsets (void)\n     }\n \n   /* Saved registers include the stack frame.  */\n-  offsets->saved_regs = offsets->saved_args + saved +\n-                        arm_compute_static_chain_stack_bytes();\n+  offsets->saved_regs\n+    = offsets->saved_args + arm_compute_static_chain_stack_bytes () + saved;\n   offsets->soft_frame = offsets->saved_regs + CALLER_INTERWORKING_SLOT_SIZE;\n+\n   /* A leaf function does not need any stack alignment if it has nothing\n      on the stack.  */\n   if (leaf && frame_size == 0\n@@ -27048,7 +27051,10 @@ arm_expand_epilogue_apcs_frame (bool really_return)\n   saved_regs_mask = offsets->saved_regs_mask;\n \n   /* Find the offset of the floating-point save area in the frame.  */\n-  floats_from_frame = offsets->saved_args - offsets->frame;\n+  floats_from_frame\n+    = (offsets->saved_args\n+       + arm_compute_static_chain_stack_bytes ()\n+       - offsets->frame);\n \n   /* Compute how many core registers saved and how far away the floats are.  */\n   for (i = 0; i <= LAST_ARM_REGNUM; i++)"}, {"sha": "f6dbf1f6ac887bc2d29abee040837a197faefd41", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2bc252be3a5ccb8846fdc28a830b8a75cf64519/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2bc252be3a5ccb8846fdc28a830b8a75cf64519/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f2bc252be3a5ccb8846fdc28a830b8a75cf64519", "patch": "@@ -1,3 +1,7 @@\n+2014-01-04  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc.target/arm/neon-nested-apcs.c: New test.\n+\n 2014-01-04  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/59519"}, {"sha": "a2cf642f8c749d988ac58a29877e7d1c2be27f72", "filename": "gcc/testsuite/gcc.target/arm/neon-nested-apcs.c", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2bc252be3a5ccb8846fdc28a830b8a75cf64519/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fneon-nested-apcs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2bc252be3a5ccb8846fdc28a830b8a75cf64519/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fneon-nested-apcs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fneon-nested-apcs.c?ref=f2bc252be3a5ccb8846fdc28a830b8a75cf64519", "patch": "@@ -0,0 +1,47 @@\n+/* { dg-do run } */\n+/* { dg-require-effective-target arm_neon_hw } */\n+/* { dg-options \"-fno-omit-frame-pointer -mapcs-frame -O -mfloat-abi=softfp -mfpu=neon\" } */\n+\n+extern void abort (void);\n+\n+float data;\n+\n+void __attribute__((noinline, noclone)) bar (float f)\n+{\n+  data = f;\n+}\n+\n+float __attribute__((noinline, noclone)) foo (float f)\n+{\n+  int error_reported = 0;\n+\n+  void __attribute__((noinline, noclone)) \n+  nested (int a, int b, int c, int d, float f0, float f1, float f2, float f3)\n+  {\n+    float e;\n+\n+    if (f3 > f2)\n+      e = f3;\n+    else\n+      e = f2;\n+\n+    if (f0 - f1 > e)\n+      {\n+\terror_reported = a + b + c + d;\n+\tbar (f0);\n+\tbar (e);\n+      }\n+  }\n+\n+  nested (1, 2, 3, 4, 1.0, 1.0, 3.5, 4.2);\n+  return f + (float)error_reported;\n+}\n+\n+#define PI 3.1415927f\n+\n+int main (void)\n+{\n+  if (foo (PI) != PI)\n+    abort ();\n+  return 0;\n+}"}]}