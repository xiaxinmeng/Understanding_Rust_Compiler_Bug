{"sha": "45484dcfb14634ff30b409c58ecc754e9fd88b5c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDU0ODRkY2ZiMTQ2MzRmZjMwYjQwOWM1OGVjYzc1NGU5ZmQ4OGI1Yw==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2014-04-25T11:04:40Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2014-04-25T11:04:40Z"}, "message": "re PR c/18079 (Contradicting function attributes (always_inline vs noinline))\n\n\tPR c/18079\nc/\n\t* c-decl.c (diagnose_mismatched_decls): Warn for mismatched\n\talways_inline/noinline and hot/cold attributes.\nc-family/\n\t* c-common.c (handle_noinline_attribute): Warn if the attribute\n\tconflicts with always_inline attribute.\n\t(handle_always_inline_attribute): Warn if the attribute conflicts\n\twith noinline attribute.\ntestsuite/\n\t* gcc.dg/pr18079.c: New test.\n\t* gcc.dg/pr18079-2.c: New test.\n\nFrom-SVN: r209796", "tree": {"sha": "f5afc0c3e26bd0d19bac539f415596cf3bbeea28", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f5afc0c3e26bd0d19bac539f415596cf3bbeea28"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/45484dcfb14634ff30b409c58ecc754e9fd88b5c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45484dcfb14634ff30b409c58ecc754e9fd88b5c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/45484dcfb14634ff30b409c58ecc754e9fd88b5c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45484dcfb14634ff30b409c58ecc754e9fd88b5c/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "707d775782ee1a899c86fe2477c5bfabb3231777", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/707d775782ee1a899c86fe2477c5bfabb3231777", "html_url": "https://github.com/Rust-GCC/gccrs/commit/707d775782ee1a899c86fe2477c5bfabb3231777"}], "stats": {"total": 141, "additions": 123, "deletions": 18}, "files": [{"sha": "fb0d102eac3351aa1117bf567f30920a9315b9e0", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45484dcfb14634ff30b409c58ecc754e9fd88b5c/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45484dcfb14634ff30b409c58ecc754e9fd88b5c/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=45484dcfb14634ff30b409c58ecc754e9fd88b5c", "patch": "@@ -1,3 +1,11 @@\n+2014-04-25  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c/18079\n+\t* c-common.c (handle_noinline_attribute): Warn if the attribute\n+\tconflicts with always_inline attribute.\n+\t(handle_always_inline_attribute): Warn if the attribute conflicts\n+\twith noinline attribute.\n+\n 2014-04-25  Marek Polacek  <polacek@redhat.com>\n \n \tPR c/60156"}, {"sha": "0ad955d9ccaf0627b84963d9ccfdf9be29e7bb0d", "filename": "gcc/c-family/c-common.c", "status": "modified", "additions": 24, "deletions": 8, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45484dcfb14634ff30b409c58ecc754e9fd88b5c/gcc%2Fc-family%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45484dcfb14634ff30b409c58ecc754e9fd88b5c/gcc%2Fc-family%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.c?ref=45484dcfb14634ff30b409c58ecc754e9fd88b5c", "patch": "@@ -6568,8 +6568,8 @@ handle_hot_attribute (tree *node, tree name, tree ARG_UNUSED (args),\n     {\n       if (lookup_attribute (\"cold\", DECL_ATTRIBUTES (*node)) != NULL)\n \t{\n-\t  warning (OPT_Wattributes, \"%qE attribute conflicts with attribute %s\",\n-\t\t   name, \"cold\");\n+\t  warning (OPT_Wattributes, \"%qE attribute ignored due to conflict \"\n+\t\t   \"with attribute %qs\", name, \"cold\");\n \t  *no_add_attrs = true;\n \t}\n       /* Most of the rest of the hot processing is done later with\n@@ -6596,8 +6596,8 @@ handle_cold_attribute (tree *node, tree name, tree ARG_UNUSED (args),\n     {\n       if (lookup_attribute (\"hot\", DECL_ATTRIBUTES (*node)) != NULL)\n \t{\n-\t  warning (OPT_Wattributes, \"%qE attribute conflicts with attribute %s\",\n-\t\t   name, \"hot\");\n+\t  warning (OPT_Wattributes, \"%qE attribute ignored due to conflict \"\n+\t\t   \"with attribute %qs\", name, \"hot\");\n \t  *no_add_attrs = true;\n \t}\n       /* Most of the rest of the cold processing is done later with\n@@ -6670,7 +6670,16 @@ handle_noinline_attribute (tree *node, tree name,\n \t\t\t   int ARG_UNUSED (flags), bool *no_add_attrs)\n {\n   if (TREE_CODE (*node) == FUNCTION_DECL)\n-    DECL_UNINLINABLE (*node) = 1;\n+    {\n+      if (lookup_attribute (\"always_inline\", DECL_ATTRIBUTES (*node)))\n+\t{\n+\t  warning (OPT_Wattributes, \"%qE attribute ignored due to conflict \"\n+\t\t   \"with attribute %qs\", name, \"always_inline\");\n+\t  *no_add_attrs = true;\n+\t}\n+      else\n+\tDECL_UNINLINABLE (*node) = 1;\n+    }\n   else\n     {\n       warning (OPT_Wattributes, \"%qE attribute ignored\", name);\n@@ -6708,9 +6717,16 @@ handle_always_inline_attribute (tree *node, tree name,\n {\n   if (TREE_CODE (*node) == FUNCTION_DECL)\n     {\n-      /* Set the attribute and mark it for disregarding inline\n-\t limits.  */\n-      DECL_DISREGARD_INLINE_LIMITS (*node) = 1;\n+      if (lookup_attribute (\"noinline\", DECL_ATTRIBUTES (*node)))\n+\t{\n+\t  warning (OPT_Wattributes, \"%qE attribute ignored due to conflict \"\n+\t\t   \"with %qs attribute\", name, \"noinline\");\n+\t  *no_add_attrs = true;\n+\t}\n+      else\n+\t/* Set the attribute and mark it for disregarding inline\n+\t   limits.  */\n+\tDECL_DISREGARD_INLINE_LIMITS (*node) = 1;\n     }\n   else\n     {"}, {"sha": "80841af40ee89cffa02d0ca5eccb2d4aba253ed5", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45484dcfb14634ff30b409c58ecc754e9fd88b5c/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45484dcfb14634ff30b409c58ecc754e9fd88b5c/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=45484dcfb14634ff30b409c58ecc754e9fd88b5c", "patch": "@@ -1,3 +1,9 @@\n+2014-04-25  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c/18079\n+\t* c-decl.c (diagnose_mismatched_decls): Warn for mismatched\n+\talways_inline/noinline and hot/cold attributes.\n+\n 2014-04-25  Marek Polacek  <polacek@redhat.com>\n \n \tPR c/60114"}, {"sha": "e30876cbd1b8865b923386ddabcd966696450238", "filename": "gcc/c/c-decl.c", "status": "modified", "additions": 30, "deletions": 10, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45484dcfb14634ff30b409c58ecc754e9fd88b5c/gcc%2Fc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45484dcfb14634ff30b409c58ecc754e9fd88b5c/gcc%2Fc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-decl.c?ref=45484dcfb14634ff30b409c58ecc754e9fd88b5c", "patch": "@@ -2099,18 +2099,38 @@ diagnose_mismatched_decls (tree newdecl, tree olddecl,\n       /* Diagnose inline __attribute__ ((noinline)) which is silly.  */\n       if (DECL_DECLARED_INLINE_P (newdecl)\n \t  && lookup_attribute (\"noinline\", DECL_ATTRIBUTES (olddecl)))\n-\t{\n-\t  warned |= warning (OPT_Wattributes,\n-\t\t\t     \"inline declaration of %qD follows \"\n-\t\t\t     \"declaration with attribute noinline\", newdecl);\n-\t}\n+\twarned |= warning (OPT_Wattributes,\n+\t\t\t   \"inline declaration of %qD follows \"\n+\t\t\t   \"declaration with attribute noinline\", newdecl);\n       else if (DECL_DECLARED_INLINE_P (olddecl)\n \t       && lookup_attribute (\"noinline\", DECL_ATTRIBUTES (newdecl)))\n-\t{\n-\t  warned |= warning (OPT_Wattributes,\n-\t\t\t     \"declaration of %q+D with attribute \"\n-\t\t\t     \"noinline follows inline declaration \", newdecl);\n-\t}\n+\twarned |= warning (OPT_Wattributes,\n+\t\t\t   \"declaration of %q+D with attribute \"\n+\t\t\t   \"noinline follows inline declaration \", newdecl);\n+      else if (lookup_attribute (\"noinline\", DECL_ATTRIBUTES (newdecl))\n+\t       && lookup_attribute (\"always_inline\", DECL_ATTRIBUTES (olddecl)))\n+\twarned |= warning (OPT_Wattributes,\n+\t\t\t   \"declaration of %q+D with attribute \"\n+\t\t\t   \"%qs follows declaration with attribute %qs\",\n+\t\t\t   newdecl, \"noinline\", \"always_inline\");\n+      else if (lookup_attribute (\"always_inline\", DECL_ATTRIBUTES (newdecl))\n+\t       && lookup_attribute (\"noinline\", DECL_ATTRIBUTES (olddecl)))\n+\twarned |= warning (OPT_Wattributes,\n+\t\t\t   \"declaration of %q+D with attribute \"\n+\t\t\t   \"%qs follows declaration with attribute %qs\",\n+\t\t\t   newdecl, \"always_inline\", \"noinline\");\n+      else if (lookup_attribute (\"cold\", DECL_ATTRIBUTES (newdecl))\n+\t       && lookup_attribute (\"hot\", DECL_ATTRIBUTES (olddecl)))\n+\twarned |= warning (OPT_Wattributes,\n+\t\t\t   \"declaration of %q+D with attribute %qs follows \"\n+\t\t\t   \"declaration with attribute %qs\", newdecl, \"cold\",\n+\t\t\t   \"hot\");\n+      else if (lookup_attribute (\"hot\", DECL_ATTRIBUTES (newdecl))\n+\t       && lookup_attribute (\"cold\", DECL_ATTRIBUTES (olddecl)))\n+\twarned |= warning (OPT_Wattributes,\n+\t\t\t   \"declaration of %q+D with attribute %qs follows \"\n+\t\t\t   \"declaration with attribute %qs\", newdecl, \"hot\",\n+\t\t\t   \"cold\");\n     }\n   else /* PARM_DECL, VAR_DECL */\n     {"}, {"sha": "6747b754b4c4ebfee9c536894a8f106149591863", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45484dcfb14634ff30b409c58ecc754e9fd88b5c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45484dcfb14634ff30b409c58ecc754e9fd88b5c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=45484dcfb14634ff30b409c58ecc754e9fd88b5c", "patch": "@@ -1,3 +1,9 @@\n+2014-04-25  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c/18079\n+\t* gcc.dg/pr18079.c: New test.\n+\t* gcc.dg/pr18079-2.c: New test.\n+\n 2014-04-25  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* c-c++-common/gomp/pr60823-2.c: Require effective target"}, {"sha": "5091dd41b2faf996dd719cf0c9e89c8326fb206f", "filename": "gcc/testsuite/gcc.dg/pr18079-2.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45484dcfb14634ff30b409c58ecc754e9fd88b5c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr18079-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45484dcfb14634ff30b409c58ecc754e9fd88b5c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr18079-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr18079-2.c?ref=45484dcfb14634ff30b409c58ecc754e9fd88b5c", "patch": "@@ -0,0 +1,16 @@\n+/* PR c/18079 */\n+/* { dg-do compile } */\n+/* { dg-options \"-Wall\" } */\n+\n+__attribute__ ((always_inline)) void fndecl1 (void);\n+__attribute__ ((noinline)) void fndecl1 (void); /* { dg-warning \"attribute noinline follows declaration with attribute always_inline\" } */\n+\n+__attribute__ ((noinline)) void fndecl2 (void);\n+__attribute__ ((always_inline)) void fndecl2 (void); /* { dg-warning \"attribute always_inline follows declaration with attribute noinline\" } */\n+\n+\n+__attribute__ ((hot)) void fndecl3 (void);\n+__attribute__ ((cold)) void fndecl3 (void); /* { dg-warning \"attribute cold follows declaration with attribute hot\" } */\n+\n+__attribute__ ((cold)) void fndecl4 (void);\n+__attribute__ ((hot)) void fndecl4 (void); /* { dg-warning \"attribute hot follows declaration with attribute cold\" } */"}, {"sha": "b84cdebde3f465abf938a0bc788680a750870d3f", "filename": "gcc/testsuite/gcc.dg/pr18079.c", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45484dcfb14634ff30b409c58ecc754e9fd88b5c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr18079.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45484dcfb14634ff30b409c58ecc754e9fd88b5c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr18079.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr18079.c?ref=45484dcfb14634ff30b409c58ecc754e9fd88b5c", "patch": "@@ -0,0 +1,33 @@\n+/* PR c/18079 */\n+/* { dg-do compile } */\n+/* { dg-options \"-Wall\" } */\n+\n+__attribute__ ((noinline))\n+__attribute__ ((always_inline))\n+int\n+fn1 (int r)\n+{ /* { dg-warning \"attribute ignored due to conflict\" } */\n+  return r & 4;\n+}\n+\n+__attribute__ ((noinline, always_inline))\n+int\n+fn2 (int r)\n+{ /* { dg-warning \"attribute ignored due to conflict\" } */\n+  return r & 4;\n+}\n+\n+__attribute__ ((always_inline))\n+__attribute__ ((noinline))\n+inline int\n+fn3 (int r)\n+{ /* { dg-warning \"attribute ignored due to conflict\" } */\n+  return r & 8;\n+}\n+\n+__attribute__ ((always_inline, noinline))\n+inline int\n+fn4 (int r)\n+{ /* { dg-warning \"attribute ignored due to conflict\" } */\n+  return r & 8;\n+}"}]}