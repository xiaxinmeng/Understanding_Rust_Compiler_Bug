{"sha": "b5d27be7d7803e6537c3f0dce4abfe62a8b60643", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjVkMjdiZTdkNzgwM2U2NTM3YzNmMGRjZTRhYmZlNjJhOGI2MDY0Mw==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-10-23T06:02:13Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-10-23T06:02:13Z"}, "message": "(record_biv): Clear total_benefit field of new iv_class.\n\n(get_condition): Verify op 2 of source is label_ref before looking within.\n\nFrom-SVN: r2566", "tree": {"sha": "3345ca79970e4a6d8796f5d20c7755d078e4b4f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3345ca79970e4a6d8796f5d20c7755d078e4b4f2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b5d27be7d7803e6537c3f0dce4abfe62a8b60643", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5d27be7d7803e6537c3f0dce4abfe62a8b60643", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b5d27be7d7803e6537c3f0dce4abfe62a8b60643", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5d27be7d7803e6537c3f0dce4abfe62a8b60643/comments", "author": null, "committer": null, "parents": [{"sha": "b76771897a5cf5ad5301e5cca890683983dddc42", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b76771897a5cf5ad5301e5cca890683983dddc42", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b76771897a5cf5ad5301e5cca890683983dddc42"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "6ffa6bced187ddcec02930e4aaa202e29f0b0a00", "filename": "gcc/loop.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5d27be7d7803e6537c3f0dce4abfe62a8b60643/gcc%2Floop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5d27be7d7803e6537c3f0dce4abfe62a8b60643/gcc%2Floop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop.c?ref=b5d27be7d7803e6537c3f0dce4abfe62a8b60643", "patch": "@@ -4122,6 +4122,7 @@ record_biv (v, insn, dest_reg, inc_val, mult_val,\n       bl->eliminable = 0;\n       bl->nonneg = 0;\n       bl->reversed = 0;\n+      bl->total_benefit = 0;\n \n       /* Add this class to loop_iv_list.  */\n       bl->next = loop_iv_list;\n@@ -6255,7 +6256,8 @@ get_condition (jump, earliest)\n \n   /* If this branches to JUMP_LABEL when the condition is false, reverse\n      the condition.  */\n-  if (XEXP (XEXP (SET_SRC (PATTERN (jump)), 2), 0) == JUMP_LABEL (jump))\n+  if (GET_CODE (XEXP (SET_SRC (PATTERN (jump)), 2)) == LABEL_REF\n+      && XEXP (XEXP (SET_SRC (PATTERN (jump)), 2), 0) == JUMP_LABEL (jump))\n     code = reverse_condition (code), did_reverse_condition ^= 1;\n \n   /* If we are comparing a register with zero, see if the register is set"}]}