{"sha": "5251b8b3505902ee4c5f49d8c58c42f2950ba6c1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTI1MWI4YjM1MDU5MDJlZTRjNWY0OWQ4YzU4YzQyZjI5NTBiYTZjMQ==", "commit": {"author": {"name": "Trevor Saunders", "email": "tbsaunde+gcc@tbsaunde.org", "date": "2015-04-28T04:45:12Z"}, "committer": {"name": "Trevor Saunders", "email": "tbsaunde@gcc.gnu.org", "date": "2015-04-28T04:45:12Z"}, "message": "always define HAVE_epilogue\n\ngcc/ChangeLog:\n\n2015-04-27  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n\n\t* defaults.h (gen_epilogue): New function.\n(HAVE_epilogue): Add default definition to false.\n\t* alias.c (init_alias_analysis): don't check if HAVE_epilogue is\n\tdefined.\n\t* cfgrtl.c (cfg_layout_finalize): Likewise.\n\t* df-scan.c: Likewise.\n\t* function.c (thread_prologue_and_epilogue_insns): Likewise.\n\t(reposition_prologue_and_epilogue_notes): Likewise.\n\t* reorg.c (find_end_label): Likewise.\n\t* toplev.c: Likewise.\n\nFrom-SVN: r222506", "tree": {"sha": "097a4454cae0a6804ad11961c8971610f939615b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/097a4454cae0a6804ad11961c8971610f939615b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5251b8b3505902ee4c5f49d8c58c42f2950ba6c1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5251b8b3505902ee4c5f49d8c58c42f2950ba6c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5251b8b3505902ee4c5f49d8c58c42f2950ba6c1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5251b8b3505902ee4c5f49d8c58c42f2950ba6c1/comments", "author": null, "committer": null, "parents": [{"sha": "08b7ff1e1dda0bb35741ad8156bf31ba5151ddea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08b7ff1e1dda0bb35741ad8156bf31ba5151ddea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08b7ff1e1dda0bb35741ad8156bf31ba5151ddea"}], "stats": {"total": 58, "additions": 35, "deletions": 23}, "files": [{"sha": "6eeba5fde877db517fc5610ed998ee10cdced049", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5251b8b3505902ee4c5f49d8c58c42f2950ba6c1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5251b8b3505902ee4c5f49d8c58c42f2950ba6c1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5251b8b3505902ee4c5f49d8c58c42f2950ba6c1", "patch": "@@ -1,3 +1,15 @@\n+2015-04-27  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n+\n+\t* defaults.h (gen_epilogue): New function.\n+\t* alias.c (init_alias_analysis): don't check if HAVE_epilogue is\n+\tdefined.\n+\t* cfgrtl.c (cfg_layout_finalize): Likewise.\n+\t* df-scan.c: Likewise.\n+\t* function.c (thread_prologue_and_epilogue_insns): Likewise.\n+\t(reposition_prologue_and_epilogue_notes): Likewise.\n+\t* reorg.c (find_end_label): Likewise.\n+\t* toplev.c: Likewise.\n+\n 2015-04-27  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n \n \t* bb-reorder.c (HAVE_return): Don't check if its undefined."}, {"sha": "7d9a3d9113d8dbe00b31e5a91e592a9822f95ec6", "filename": "gcc/alias.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5251b8b3505902ee4c5f49d8c58c42f2950ba6c1/gcc%2Falias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5251b8b3505902ee4c5f49d8c58c42f2950ba6c1/gcc%2Falias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Falias.c?ref=5251b8b3505902ee4c5f49d8c58c42f2950ba6c1", "patch": "@@ -2925,15 +2925,19 @@ init_alias_analysis (void)\n \t\t{\n \t\t  rtx note, set;\n \n-#if defined (HAVE_prologue) || defined (HAVE_epilogue)\n+#if defined (HAVE_prologue)\n+\t\t  static const bool prologue = true;\n+#else\n+\t\t  static const bool prologue = false;\n+#endif\n+\n \t\t  /* The prologue/epilogue insns are not threaded onto the\n \t\t     insn chain until after reload has completed.  Thus,\n \t\t     there is no sense wasting time checking if INSN is in\n \t\t     the prologue/epilogue until after reload has completed.  */\n-\t\t  if (reload_completed\n+\t\t  if ((prologue || HAVE_epilogue) && reload_completed\n \t\t      && prologue_epilogue_contains (insn))\n \t\t    continue;\n-#endif\n \n \t\t  /* If this insn has a noalias note, process it,  Otherwise,\n \t\t     scan for sets.  A simple set will have no side effects"}, {"sha": "8a750448866a9a670330be1451e4271c53e65747", "filename": "gcc/cfgrtl.c", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5251b8b3505902ee4c5f49d8c58c42f2950ba6c1/gcc%2Fcfgrtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5251b8b3505902ee4c5f49d8c58c42f2950ba6c1/gcc%2Fcfgrtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgrtl.c?ref=5251b8b3505902ee4c5f49d8c58c42f2950ba6c1", "patch": "@@ -4339,11 +4339,7 @@ cfg_layout_finalize (void)\n #endif\n   force_one_exit_fallthru ();\n   rtl_register_cfg_hooks ();\n-  if (reload_completed\n-#ifdef HAVE_epilogue\n-      && !HAVE_epilogue\n-#endif\n-      )\n+  if (reload_completed && !HAVE_epilogue)\n     fixup_fallthru_exit_predecessor ();\n   fixup_reorder_chain ();\n "}, {"sha": "4c8719163e2f71e9a9a3b47c2f46a5938a1a28ad", "filename": "gcc/defaults.h", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5251b8b3505902ee4c5f49d8c58c42f2950ba6c1/gcc%2Fdefaults.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5251b8b3505902ee4c5f49d8c58c42f2950ba6c1/gcc%2Fdefaults.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdefaults.h?ref=5251b8b3505902ee4c5f49d8c58c42f2950ba6c1", "patch": "@@ -1418,6 +1418,16 @@ gen_return ()\n }\n #endif\n \n+#ifndef HAVE_epilogue\n+#define HAVE_epilogue 0\n+static inline rtx\n+gen_epilogue ()\n+{\n+  gcc_unreachable ();\n+  return NULL;\n+}\n+#endif\n+\n #endif /* GCC_INSN_FLAGS_H  */\n \n #endif  /* ! GCC_DEFAULTS_H */"}, {"sha": "a990a7b166b0ff67eb976a6f5ef2c9bd654ca93b", "filename": "gcc/df-scan.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5251b8b3505902ee4c5f49d8c58c42f2950ba6c1/gcc%2Fdf-scan.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5251b8b3505902ee4c5f49d8c58c42f2950ba6c1/gcc%2Fdf-scan.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdf-scan.c?ref=5251b8b3505902ee4c5f49d8c58c42f2950ba6c1", "patch": "@@ -62,9 +62,6 @@ along with GCC; see the file COPYING3.  If not see\n typedef struct df_mw_hardreg *df_mw_hardreg_ptr;\n \n \n-#ifndef HAVE_epilogue\n-#define HAVE_epilogue 0\n-#endif\n #ifndef HAVE_prologue\n #define HAVE_prologue 0\n #endif"}, {"sha": "14afc53c603432d0970e1c8c839e53abe067162e", "filename": "gcc/function.c", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5251b8b3505902ee4c5f49d8c58c42f2950ba6c1/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5251b8b3505902ee4c5f49d8c58c42f2950ba6c1/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=5251b8b3505902ee4c5f49d8c58c42f2950ba6c1", "patch": "@@ -6066,7 +6066,6 @@ thread_prologue_and_epilogue_insns (void)\n   if (exit_fallthru_edge == NULL)\n     goto epilogue_done;\n \n-#ifdef HAVE_epilogue\n   if (HAVE_epilogue)\n     {\n       start_sequence ();\n@@ -6090,7 +6089,6 @@ thread_prologue_and_epilogue_insns (void)\n \tset_return_jump_label (returnjump);\n     }\n   else\n-#endif\n     {\n       basic_block cur_bb;\n \n@@ -6183,7 +6181,6 @@ thread_prologue_and_epilogue_insns (void)\n     }\n #endif\n \n-#ifdef HAVE_epilogue\n   if (epilogue_end)\n     {\n       rtx_insn *insn, *next;\n@@ -6201,7 +6198,6 @@ thread_prologue_and_epilogue_insns (void)\n \t    reorder_insns (insn, insn, PREV_INSN (epilogue_end));\n \t}\n     }\n-#endif\n \n   bitmap_clear (&bb_flags);\n \n@@ -6217,8 +6213,11 @@ thread_prologue_and_epilogue_insns (void)\n void\n reposition_prologue_and_epilogue_notes (void)\n {\n-#if defined (HAVE_prologue) || defined (HAVE_epilogue) \\\n-    || defined (HAVE_sibcall_epilogue)\n+#if ! defined (HAVE_prologue) && ! defined (HAVE_sibcall_epilogue)\n+  if (!HAVE_epilogue)\n+    return;\n+#endif\n+\n   /* Since the hash table is created on demand, the fact that it is\n      non-null is a signal that it is non-empty.  */\n   if (prologue_insn_hash != NULL)\n@@ -6315,7 +6314,6 @@ reposition_prologue_and_epilogue_notes (void)\n \t    }\n \t}\n     }\n-#endif /* HAVE_prologue or HAVE_epilogue */\n }\n \n /* Returns the name of function declared by FNDECL.  */"}, {"sha": "e9af7b7bd4abc755accd3b162e04a6b54f71c087", "filename": "gcc/reorg.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5251b8b3505902ee4c5f49d8c58c42f2950ba6c1/gcc%2Freorg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5251b8b3505902ee4c5f49d8c58c42f2950ba6c1/gcc%2Freorg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freorg.c?ref=5251b8b3505902ee4c5f49d8c58c42f2950ba6c1", "patch": "@@ -484,14 +484,12 @@ find_end_label (rtx kind)\n \t}\n       else\n \t{\n-#ifdef HAVE_epilogue\n \t  if (HAVE_epilogue && ! HAVE_return)\n \t    /* The RETURN insn has its delay slot filled so we cannot\n \t       emit the label just before it.  Since we already have\n \t       an epilogue and cannot emit a new RETURN, we cannot\n \t       emit the label at all.  */\n \t    return NULL;\n-#endif /* HAVE_epilogue */\n \n \t  /* Otherwise, make a new label and emit a RETURN and BARRIER,\n \t     if needed.  */"}, {"sha": "38de36b107bc3fa3b678a51bbb7aee5b37d559b6", "filename": "gcc/toplev.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5251b8b3505902ee4c5f49d8c58c42f2950ba6c1/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5251b8b3505902ee4c5f49d8c58c42f2950ba6c1/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=5251b8b3505902ee4c5f49d8c58c42f2950ba6c1", "patch": "@@ -128,9 +128,6 @@ along with GCC; see the file COPYING3.  If not see\n \t\t\t\t   declarations for e.g. AIX 4.x.  */\n #endif\n \n-#ifndef HAVE_epilogue\n-#define HAVE_epilogue 0\n-#endif\n #ifndef HAVE_prologue\n #define HAVE_prologue 0\n #endif"}]}