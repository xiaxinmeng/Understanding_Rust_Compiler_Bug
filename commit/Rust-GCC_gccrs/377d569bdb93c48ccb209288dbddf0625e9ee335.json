{"sha": "377d569bdb93c48ccb209288dbddf0625e9ee335", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mzc3ZDU2OWJkYjkzYzQ4Y2NiMjA5Mjg4ZGJkZGYwNjI1ZTllZTMzNQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2006-10-11T16:05:37Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2006-10-11T16:05:37Z"}, "message": "re PR tree-optimization/28230 (-O2 -fwrapv miscompiles gcc, binutils, gzip.)\n\n2006-10-11  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/28230\n\t* tree-vrp.c (vrp_int_const_binop): Move flag_wrapv handling\n\tto the correct place.\n\n\t* gcc.dg/torture/pr28230.c: New testcase.\n\nFrom-SVN: r117637", "tree": {"sha": "d54ada4cbde7ded1a040c5e4405cf669b2b3c13c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d54ada4cbde7ded1a040c5e4405cf669b2b3c13c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/377d569bdb93c48ccb209288dbddf0625e9ee335", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/377d569bdb93c48ccb209288dbddf0625e9ee335", "html_url": "https://github.com/Rust-GCC/gccrs/commit/377d569bdb93c48ccb209288dbddf0625e9ee335", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/377d569bdb93c48ccb209288dbddf0625e9ee335/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d233eb7a05ca704c3d220a555e94c04fa328aee6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d233eb7a05ca704c3d220a555e94c04fa328aee6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d233eb7a05ca704c3d220a555e94c04fa328aee6"}], "stats": {"total": 39, "additions": 34, "deletions": 5}, "files": [{"sha": "6fd39c76efdf61131c552c14b6c7c6172fa8ccdd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/377d569bdb93c48ccb209288dbddf0625e9ee335/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/377d569bdb93c48ccb209288dbddf0625e9ee335/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=377d569bdb93c48ccb209288dbddf0625e9ee335", "patch": "@@ -1,3 +1,9 @@\n+2006-10-11  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/28230\n+\t* tree-vrp.c (vrp_int_const_binop): Move flag_wrapv handling\n+\tto the correct place.\n+\n 2006-10-11  Richard Guenther  <rguenther@suse.de>\n \n \tPR inline-asm/29119"}, {"sha": "aa9cd9ec1345dbd96fc3ee33e98640c1773edb53", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/377d569bdb93c48ccb209288dbddf0625e9ee335/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/377d569bdb93c48ccb209288dbddf0625e9ee335/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=377d569bdb93c48ccb209288dbddf0625e9ee335", "patch": "@@ -1,3 +1,8 @@\n+2006-10-11  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/28230\n+\t* gcc.dg/torture/pr28230.c: New testcase.\n+\n 2006-10-11  Richard Guenther  <rguenther@suse.de>\n \n \tPR inline-asm/29119"}, {"sha": "5ecc0c716bae2c4598988eee561e93b6cabb33f3", "filename": "gcc/testsuite/gcc.dg/torture/pr28230.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/377d569bdb93c48ccb209288dbddf0625e9ee335/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr28230.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/377d569bdb93c48ccb209288dbddf0625e9ee335/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr28230.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr28230.c?ref=377d569bdb93c48ccb209288dbddf0625e9ee335", "patch": "@@ -0,0 +1,20 @@\n+/* { dg-do run } */\n+/* { dg-options \"-fwrapv\" } */\n+\n+void foo( unsigned long long bb, unsigned short tn, unsigned e, unsigned* w );\n+void foo( unsigned long long bb, unsigned short tn, unsigned e, unsigned* w )\n+{\n+        unsigned n = tn + bb;\n+        do {\n+                e = (e > n) ? e : *w;\n+                n -= (e > n) ? n : e;\n+                if (*w)\n+                        *w = 0;\n+        } while ( n );\n+}\n+int main()\n+{\n+        unsigned w = 0;\n+        foo( 0, 0, 0, &w );\n+        return 0;\n+}"}, {"sha": "4a30e4ee8a553670d264e40a738add32efbdcd86", "filename": "gcc/tree-vrp.c", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/377d569bdb93c48ccb209288dbddf0625e9ee335/gcc%2Ftree-vrp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/377d569bdb93c48ccb209288dbddf0625e9ee335/gcc%2Ftree-vrp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vrp.c?ref=377d569bdb93c48ccb209288dbddf0625e9ee335", "patch": "@@ -1235,14 +1235,12 @@ vrp_int_const_binop (enum tree_code code, tree val1, tree val2)\n {\n   tree res;\n \n-  if (flag_wrapv)\n-    return int_const_binop (code, val1, val2, 0);\n+  res = int_const_binop (code, val1, val2, 0);\n \n   /* If we are not using wrapping arithmetic, operate symbolically\n      on -INF and +INF.  */\n-  res = int_const_binop (code, val1, val2, 0);\n-\n-  if (TYPE_UNSIGNED (TREE_TYPE (val1)))\n+  if (TYPE_UNSIGNED (TREE_TYPE (val1))\n+      || flag_wrapv)\n     {\n       int checkz = compare_values (res, val1);\n       bool overflow = false;"}]}