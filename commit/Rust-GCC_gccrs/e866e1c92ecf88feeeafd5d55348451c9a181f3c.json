{"sha": "e866e1c92ecf88feeeafd5d55348451c9a181f3c", "node_id": "C_kwDOANBUbNoAKGU4NjZlMWM5MmVjZjg4ZmVlZWFmZDVkNTUzNDg0NTFjOWExODFmM2M", "commit": {"author": {"name": "Harald Anlauf", "email": "anlauf@gmx.de", "date": "2021-12-14T20:02:04Z"}, "committer": {"name": "Harald Anlauf", "email": "anlauf@gmx.de", "date": "2021-12-14T20:14:08Z"}, "message": "Fortran: prevent NULL pointer dereferences checking do-loop contained stuff\n\ngcc/fortran/ChangeLog:\n\n\tPR fortran/103718\n\tPR fortran/103719\n\t* frontend-passes.c (doloop_contained_procedure_code): Add several\n\tchecks to prevent NULL pointer dereferences on valid and invalid\n\tcode called within do-loops.\n\ngcc/testsuite/ChangeLog:\n\n\tPR fortran/103718\n\tPR fortran/103719\n\t* gfortran.dg/do_check_18.f90: New test.", "tree": {"sha": "cfe0bb2bbb19260ad15ddf7ceffbbda0aeaf2e62", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cfe0bb2bbb19260ad15ddf7ceffbbda0aeaf2e62"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e866e1c92ecf88feeeafd5d55348451c9a181f3c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e866e1c92ecf88feeeafd5d55348451c9a181f3c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e866e1c92ecf88feeeafd5d55348451c9a181f3c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e866e1c92ecf88feeeafd5d55348451c9a181f3c/comments", "author": {"login": "harald-anlauf", "id": 90786862, "node_id": "MDQ6VXNlcjkwNzg2ODYy", "avatar_url": "https://avatars.githubusercontent.com/u/90786862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harald-anlauf", "html_url": "https://github.com/harald-anlauf", "followers_url": "https://api.github.com/users/harald-anlauf/followers", "following_url": "https://api.github.com/users/harald-anlauf/following{/other_user}", "gists_url": "https://api.github.com/users/harald-anlauf/gists{/gist_id}", "starred_url": "https://api.github.com/users/harald-anlauf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harald-anlauf/subscriptions", "organizations_url": "https://api.github.com/users/harald-anlauf/orgs", "repos_url": "https://api.github.com/users/harald-anlauf/repos", "events_url": "https://api.github.com/users/harald-anlauf/events{/privacy}", "received_events_url": "https://api.github.com/users/harald-anlauf/received_events", "type": "User", "site_admin": false}, "committer": {"login": "harald-anlauf", "id": 90786862, "node_id": "MDQ6VXNlcjkwNzg2ODYy", "avatar_url": "https://avatars.githubusercontent.com/u/90786862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harald-anlauf", "html_url": "https://github.com/harald-anlauf", "followers_url": "https://api.github.com/users/harald-anlauf/followers", "following_url": "https://api.github.com/users/harald-anlauf/following{/other_user}", "gists_url": "https://api.github.com/users/harald-anlauf/gists{/gist_id}", "starred_url": "https://api.github.com/users/harald-anlauf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harald-anlauf/subscriptions", "organizations_url": "https://api.github.com/users/harald-anlauf/orgs", "repos_url": "https://api.github.com/users/harald-anlauf/repos", "events_url": "https://api.github.com/users/harald-anlauf/events{/privacy}", "received_events_url": "https://api.github.com/users/harald-anlauf/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7a54d3deecf967029f18aa5ed1fcbdb752e213b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a54d3deecf967029f18aa5ed1fcbdb752e213b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a54d3deecf967029f18aa5ed1fcbdb752e213b9"}], "stats": {"total": 44, "additions": 37, "deletions": 7}, "files": [{"sha": "c106ee0957a2ab0acccf4abeb3b381b504581339", "filename": "gcc/fortran/frontend-passes.c", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e866e1c92ecf88feeeafd5d55348451c9a181f3c/gcc%2Ffortran%2Ffrontend-passes.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e866e1c92ecf88feeeafd5d55348451c9a181f3c/gcc%2Ffortran%2Ffrontend-passes.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ffrontend-passes.c?ref=e866e1c92ecf88feeeafd5d55348451c9a181f3c", "patch": "@@ -2390,7 +2390,7 @@ doloop_contained_procedure_code (gfc_code **c,\n   switch (co->op)\n     {\n     case EXEC_ASSIGN:\n-      if (co->expr1->symtree->n.sym == do_var)\n+      if (co->expr1->symtree && co->expr1->symtree->n.sym == do_var)\n \tgfc_error_now (errmsg, do_var->name, &co->loc, info->procedure->name,\n \t\t       &info->where_do);\n       break;\n@@ -2411,14 +2411,14 @@ doloop_contained_procedure_code (gfc_code **c,\n       break;\n \n     case EXEC_OPEN:\n-      if (co->ext.open->iostat\n+      if (co->ext.open && co->ext.open->iostat\n \t  && co->ext.open->iostat->symtree->n.sym == do_var)\n \tgfc_error_now (errmsg, do_var->name, &co->ext.open->iostat->where,\n \t\t       info->procedure->name, &info->where_do);\n       break;\n \n     case EXEC_CLOSE:\n-      if (co->ext.close->iostat\n+      if (co->ext.close && co->ext.close->iostat\n \t  && co->ext.close->iostat->symtree->n.sym == do_var)\n \tgfc_error_now (errmsg, do_var->name, &co->ext.close->iostat->where,\n \t\t       info->procedure->name, &info->where_do);\n@@ -2429,7 +2429,8 @@ doloop_contained_procedure_code (gfc_code **c,\n \t{\n \n \tcase EXEC_INQUIRE:\n-#define CHECK_INQ(a) do { if (co->ext.inquire->a &&\t\t\t\\\n+#define CHECK_INQ(a) do { if (co->ext.inquire    &&\t\t\t\\\n+\t\t\t      co->ext.inquire->a &&\t\t\t\\\n \t\t\t      co->ext.inquire->a->symtree->n.sym == do_var) \\\n \t      gfc_error_now (errmsg, do_var->name,\t\t\t\\\n \t\t\t     &co->ext.inquire->a->where,\t\t\\\n@@ -2448,21 +2449,23 @@ doloop_contained_procedure_code (gfc_code **c,\n #undef CHECK_INQ\n \n \tcase EXEC_READ:\n-\t  if (co->expr1 && co->expr1->symtree->n.sym == do_var)\n+\t  if (co->expr1 && co->expr1->symtree\n+\t      && co->expr1->symtree->n.sym == do_var)\n \t    gfc_error_now (errmsg, do_var->name, &co->expr1->where,\n \t\t\t   info->procedure->name, &info->where_do);\n \n \t  /* Fallthrough.  */\n \n \tcase EXEC_WRITE:\n-\t  if (co->ext.dt->iostat\n+\t  if (co->ext.dt && co->ext.dt->iostat && co->ext.dt->iostat->symtree\n \t      && co->ext.dt->iostat->symtree->n.sym == do_var)\n \t    gfc_error_now (errmsg, do_var->name, &co->ext.dt->iostat->where,\n \t\t\t   info->procedure->name, &info->where_do);\n \t  break;\n \n \tcase EXEC_IOLENGTH:\n-\t  if (co->expr1 && co->expr1->symtree->n.sym == do_var)\n+\t  if (co->expr1 && co->expr1->symtree\n+\t      && co->expr1->symtree->n.sym == do_var)\n \t    gfc_error_now (errmsg, do_var->name, &co->expr1->where,\n \t\t\t   info->procedure->name, &info->where_do);\n \t  break;"}, {"sha": "b06112aa68f5edcd839f0f35ad98da213c122022", "filename": "gcc/testsuite/gfortran.dg/do_check_18.f90", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e866e1c92ecf88feeeafd5d55348451c9a181f3c/gcc%2Ftestsuite%2Fgfortran.dg%2Fdo_check_18.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e866e1c92ecf88feeeafd5d55348451c9a181f3c/gcc%2Ftestsuite%2Fgfortran.dg%2Fdo_check_18.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdo_check_18.f90?ref=e866e1c92ecf88feeeafd5d55348451c9a181f3c", "patch": "@@ -0,0 +1,27 @@\n+! { dg-do compile }\n+! PR103718,\n+! PR103719 - ICE in doloop_contained_procedure_code\n+! Contributed by G.Steinmetz\n+\n+subroutine s1\n+  integer :: i\n+  do i = 1, 2\n+     call s\n+  end do\n+contains\n+  subroutine s\n+    integer :: n\n+    inquire (iolength=n) 0  ! valid\n+  end\n+end\n+\n+subroutine s2\n+  integer :: i\n+  do i = 1, 2\n+     call s\n+  end do\n+contains\n+  subroutine s\n+    shape(1) = 0    ! { dg-error \"Non-variable expression\" }\n+  end\n+end"}]}