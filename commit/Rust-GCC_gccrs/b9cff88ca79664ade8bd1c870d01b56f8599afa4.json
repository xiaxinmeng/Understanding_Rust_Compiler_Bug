{"sha": "b9cff88ca79664ade8bd1c870d01b56f8599afa4", "node_id": "C_kwDOANBUbNoAKGI5Y2ZmODhjYTc5NjY0YWRlOGJkMWM4NzBkMDFiNTZmODU5OWFmYTQ", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2022-02-06T14:54:25Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2022-05-12T12:38:34Z"}, "message": "[Ada] Fix remaining asymmetry in Specific_Type\n\ngcc/ada/\n\n\t* sem_type.adb (Specific_Type): Add swapped cases for interfaces.", "tree": {"sha": "b75825bfbbcff457e09b19a7ae2bfa966de4c9db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b75825bfbbcff457e09b19a7ae2bfa966de4c9db"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b9cff88ca79664ade8bd1c870d01b56f8599afa4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9cff88ca79664ade8bd1c870d01b56f8599afa4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b9cff88ca79664ade8bd1c870d01b56f8599afa4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9cff88ca79664ade8bd1c870d01b56f8599afa4/comments", "author": null, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e845160a0829f66ff65f9a720fa9c4757fa50798", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e845160a0829f66ff65f9a720fa9c4757fa50798", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e845160a0829f66ff65f9a720fa9c4757fa50798"}], "stats": {"total": 23, "additions": 16, "deletions": 7}, "files": [{"sha": "971b1a3183bc1735e1f159b1854767b769496b8a", "filename": "gcc/ada/sem_type.adb", "status": "modified", "additions": 16, "deletions": 7, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9cff88ca79664ade8bd1c870d01b56f8599afa4/gcc%2Fada%2Fsem_type.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9cff88ca79664ade8bd1c870d01b56f8599afa4/gcc%2Fada%2Fsem_type.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_type.adb?ref=b9cff88ca79664ade8bd1c870d01b56f8599afa4", "patch": "@@ -3354,22 +3354,23 @@ package body Sem_Type is\n       elsif T2 = Raise_Type then\n          return B1;\n \n-      --  ----------------------------------------------------------\n-      --  Special cases for equality operators (all other predefined\n-      --  operators can never apply to tagged types)\n-      --  ----------------------------------------------------------\n-\n       --  Ada 2005 (AI-251): T1 and T2 are class-wide types, and T2 is an\n-      --  interface\n+      --  interface, return T1, and vice versa.\n \n       elsif Is_Class_Wide_Type (T1)\n         and then Is_Class_Wide_Type (T2)\n         and then Is_Interface (Etype (T2))\n       then\n          return T1;\n \n+      elsif Is_Class_Wide_Type (T2)\n+        and then Is_Class_Wide_Type (T1)\n+        and then Is_Interface (Etype (T1))\n+      then\n+         return T2;\n+\n       --  Ada 2005 (AI-251): T1 is a concrete type that implements the\n-      --  class-wide interface T2\n+      --  class-wide interface T2, return T1, and vice versa.\n \n       elsif Is_Tagged_Type (T1)\n         and then Is_Class_Wide_Type (T2)\n@@ -3379,6 +3380,14 @@ package body Sem_Type is\n       then\n          return T1;\n \n+      elsif Is_Tagged_Type (T2)\n+        and then Is_Class_Wide_Type (T1)\n+        and then Is_Interface (Etype (T1))\n+        and then Interface_Present_In_Ancestor (Typ   => T2,\n+                                                Iface => Etype (T1))\n+      then\n+         return T2;\n+\n       elsif Is_Class_Wide_Type (T1)\n         and then Is_Ancestor (Root_Type (T1), T2)\n       then"}]}