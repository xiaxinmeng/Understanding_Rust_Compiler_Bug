{"sha": "b24f7345365c9faea98acfb1e145f3efe943f8d1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjI0ZjczNDUzNjVjOWZhZWE5OGFjZmIxZTE0NWYzZWZlOTQzZjhkMQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2015-06-19T20:10:50Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2015-06-19T20:10:50Z"}, "message": "decl.c (gnat_to_gnu_entity): Make sure the size of a padding type built around the return type is positive.\n\n\t* gcc-interface/decl.c (gnat_to_gnu_entity) <E_Function>: Make sure\n\tthe size of a padding type built around the return type is positive.\n\t* gcc-interface/trans.c (gnat_to_gnu) <N_Simple_Return_Statement>:\n\tUse INIT_EXPR instead of MODIFY_EXPR to assign to the return object.\n\nFrom-SVN: r224697", "tree": {"sha": "57fbd1f7dca579febe84e8afbe2f72fa7d1e432f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/57fbd1f7dca579febe84e8afbe2f72fa7d1e432f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b24f7345365c9faea98acfb1e145f3efe943f8d1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b24f7345365c9faea98acfb1e145f3efe943f8d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b24f7345365c9faea98acfb1e145f3efe943f8d1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b24f7345365c9faea98acfb1e145f3efe943f8d1/comments", "author": null, "committer": null, "parents": [{"sha": "1539357d45345b583fa613b79e9ccdc35de0527b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1539357d45345b583fa613b79e9ccdc35de0527b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1539357d45345b583fa613b79e9ccdc35de0527b"}], "stats": {"total": 28, "additions": 23, "deletions": 5}, "files": [{"sha": "639d5c8c81e2e41aa34215703e45a325118b1aa4", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b24f7345365c9faea98acfb1e145f3efe943f8d1/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b24f7345365c9faea98acfb1e145f3efe943f8d1/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=b24f7345365c9faea98acfb1e145f3efe943f8d1", "patch": "@@ -1,3 +1,10 @@\n+2015-06-19  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/decl.c (gnat_to_gnu_entity) <E_Function>: Make sure\n+\tthe size of a padding type built around the return type is positive.\n+\t* gcc-interface/trans.c (gnat_to_gnu) <N_Simple_Return_Statement>:\n+\tUse INIT_EXPR instead of MODIFY_EXPR to assign to the return object.\n+\n 2015-06-17  Andrew MacLeod  <amacleod@redhat.com>\n \n \t* gcc-interface/cuintp.c: Do not include input.h, line-map.h or is-a.h."}, {"sha": "f487e9b5849ab848ae978e40d323daba13e5e1de", "filename": "gcc/ada/gcc-interface/decl.c", "status": "modified", "additions": 15, "deletions": 4, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b24f7345365c9faea98acfb1e145f3efe943f8d1/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b24f7345365c9faea98acfb1e145f3efe943f8d1/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fdecl.c?ref=b24f7345365c9faea98acfb1e145f3efe943f8d1", "patch": "@@ -4242,12 +4242,23 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, int definition)\n \t    if (CONTAINS_PLACEHOLDER_P (TYPE_SIZE (gnu_return_type)))\n \t      {\n \t\ttree orig_type = gnu_return_type;\n+\t\ttree max_return_size\n+\t\t  = max_size (TYPE_SIZE (gnu_return_type), true);\n+\n+\t\t/* If the size overflows to 0, set it to an arbitrary positive\n+\t\t   value so that assignments in the type are preserved.  Their\n+\t\t   actual size is independent of this positive value.  */\n+\t\tif (TREE_CODE (max_return_size) == INTEGER_CST\n+\t\t    && TREE_OVERFLOW (max_return_size)\n+\t\t    && integer_zerop (max_return_size))\n+\t\t  {\n+\t\t    max_return_size = copy_node (bitsize_unit_node);\n+\t\t    TREE_OVERFLOW (max_return_size) = 1;\n+\t\t  }\n \n \t\tgnu_return_type\n-\t\t  = maybe_pad_type (gnu_return_type,\n-\t\t\t\t    max_size (TYPE_SIZE (gnu_return_type),\n-\t\t\t\t\t      true),\n-\t\t\t\t    0, gnat_entity, false, false, definition,\n+\t\t  = maybe_pad_type (gnu_return_type, max_return_size, 0,\n+\t\t\t\t    gnat_entity, false, false, definition,\n \t\t\t\t    true);\n \n \t\t/* Declare it now since it will never be declared otherwise."}, {"sha": "418f923b2bfd8bf67f1de56b3ea9f64b1cc93454", "filename": "gcc/ada/gcc-interface/trans.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b24f7345365c9faea98acfb1e145f3efe943f8d1/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b24f7345365c9faea98acfb1e145f3efe943f8d1/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Ftrans.c?ref=b24f7345365c9faea98acfb1e145f3efe943f8d1", "patch": "@@ -6861,7 +6861,7 @@ gnat_to_gnu (Node_Id gnat_node)\n \t\ttree gnu_ret_deref\n \t\t  = build_unary_op (INDIRECT_REF, TREE_TYPE (gnu_ret_val),\n \t\t\t\t    gnu_ret_obj);\n-\t\tgnu_result = build2 (MODIFY_EXPR, void_type_node,\n+\t\tgnu_result = build2 (INIT_EXPR, void_type_node,\n \t\t\t\t     gnu_ret_deref, gnu_ret_val);\n \t\tadd_stmt_with_node (gnu_result, gnat_node);\n \t\tgnu_ret_val = NULL_TREE;"}]}