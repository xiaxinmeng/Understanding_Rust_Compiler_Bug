{"sha": "d2784db4e5b1950ca24582e3dd716af7f5e04906", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDI3ODRkYjRlNWIxOTUwY2EyNDU4MmUzZGQ3MTZhZjdmNWUwNDkwNg==", "commit": {"author": {"name": "Paolo Bonzini", "email": "bonzini@gnu.org", "date": "2008-04-03T05:38:32Z"}, "committer": {"name": "Paolo Bonzini", "email": "bonzini@gcc.gnu.org", "date": "2008-04-03T05:38:32Z"}, "message": "c-objc-common.h (LANG_HOOKS_FUNCTION_ENTER_NESTED, [...]): Delete.\n\n2008-04-03  Paolo Bonzini  <bonzini@gnu.org>\n\n\t* c-objc-common.h (LANG_HOOKS_FUNCTION_ENTER_NESTED,\n\tLANG_HOOKS_FUNCTION_LEAVE_NESTED): Delete.\n\t* c-tree.h (c_push_function_context, c_pop_function_context): Remove\n\targument.\n\t* c-decl.c (c_push_function_context, c_pop_function_context): Remove\n\targument, call {push,pop}_function_context from here.\n\t* c-parser.c: Use c_{push,pop}_function_context.\n\n\t* function.c (push_function_context_to): Move meat ...\n\t(push_function_context): ... here.  Simplify.\n\t* function.c (pop_function_context_from): Move meat ...\n\t(pop_function_context): ... here.  Simplify.\n\t* langhooks.h (struct lang_hooks_for_functions): Remove enter_nested,\n\tleave_nested).\n\t* langhooks-def.h (LANG_HOOKS_FUNCTION_ENTER_NESTED,\n        LANG_HOOKS_FUNCTION_LEAVE_NESTED): Delete.\n\t(LANG_HOOKS_FUNCTION_INITIALIZER): Delete them from here.\n\t* tree.h (push_function_context_to, pop_function_context_from): Remove.\n\ncp:\n2008-04-03  Paolo Bonzini  <bonzini@gnu.org>\n\n\t* method.c (synthesize_method): Use {push,pop}_function_context.\n\t* name-lookup.c (push_to_top_level): Likewise.\n\t* parser.c (cp_parser_late_parsing_for_member): Likewise.\n\nFrom-SVN: r133860", "tree": {"sha": "85505dacc4125c518bd797dee4270aa38c395fe9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/85505dacc4125c518bd797dee4270aa38c395fe9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d2784db4e5b1950ca24582e3dd716af7f5e04906", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2784db4e5b1950ca24582e3dd716af7f5e04906", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d2784db4e5b1950ca24582e3dd716af7f5e04906", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2784db4e5b1950ca24582e3dd716af7f5e04906/comments", "author": {"login": "bonzini", "id": 42082, "node_id": "MDQ6VXNlcjQyMDgy", "avatar_url": "https://avatars.githubusercontent.com/u/42082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bonzini", "html_url": "https://github.com/bonzini", "followers_url": "https://api.github.com/users/bonzini/followers", "following_url": "https://api.github.com/users/bonzini/following{/other_user}", "gists_url": "https://api.github.com/users/bonzini/gists{/gist_id}", "starred_url": "https://api.github.com/users/bonzini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bonzini/subscriptions", "organizations_url": "https://api.github.com/users/bonzini/orgs", "repos_url": "https://api.github.com/users/bonzini/repos", "events_url": "https://api.github.com/users/bonzini/events{/privacy}", "received_events_url": "https://api.github.com/users/bonzini/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0a262d5466e618a2df7c25c9eac7ef1d4497c0c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a262d5466e618a2df7c25c9eac7ef1d4497c0c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a262d5466e618a2df7c25c9eac7ef1d4497c0c7"}], "stats": {"total": 118, "additions": 53, "deletions": 65}, "files": [{"sha": "de6a4c7d38cb25cf42db5e07507ec38fbb194a10", "filename": "gcc/ChangeLog", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2784db4e5b1950ca24582e3dd716af7f5e04906/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2784db4e5b1950ca24582e3dd716af7f5e04906/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d2784db4e5b1950ca24582e3dd716af7f5e04906", "patch": "@@ -1,3 +1,24 @@\n+2008-04-03  Paolo Bonzini  <bonzini@gnu.org>\n+\n+        * c-objc-common.h (LANG_HOOKS_FUNCTION_ENTER_NESTED,\n+        LANG_HOOKS_FUNCTION_LEAVE_NESTED): Delete.\n+        * c-tree.h (c_push_function_context, c_pop_function_context): Remove\n+        argument.\n+        * c-decl.c (c_push_function_context, c_pop_function_context): Remove\n+        argument, call {push,pop}_function_context from here.\n+        * c-parser.c: Use c_{push,pop}_function_context.\n+\n+        * function.c (push_function_context_to): Move meat ...\n+        (push_function_context): ... here.  Simplify.\n+        * function.c (pop_function_context_from): Move meat ...\n+        (pop_function_context): ... here.  Simplify.\n+        * langhooks.h (struct lang_hooks_for_functions): Remove enter_nested,\n+        leave_nested).\n+        * langhooks-def.h (LANG_HOOKS_FUNCTION_ENTER_NESTED,\n+        LANG_HOOKS_FUNCTION_LEAVE_NESTED): Delete.\n+        (LANG_HOOKS_FUNCTION_INITIALIZER): Delete them from here.\n+        * tree.h (push_function_context_to, pop_function_context_from): Remove.\n+\n 2008-04-03  Ben Elliston  <bje@au.ibm.com>\n \n \t* expmed.c (extract_force_align_mem_bit_field): Remove."}, {"sha": "3d381231a59386efd7e140e7689155deb656d90c", "filename": "gcc/c-decl.c", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2784db4e5b1950ca24582e3dd716af7f5e04906/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2784db4e5b1950ca24582e3dd716af7f5e04906/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=d2784db4e5b1950ca24582e3dd716af7f5e04906", "patch": "@@ -6886,11 +6886,11 @@ check_for_loop_decls (void)\n    used during compilation of a C function.  */\n \n void\n-c_push_function_context (struct function *f)\n+c_push_function_context (void)\n {\n   struct language_function *p;\n   p = GGC_NEW (struct language_function);\n-  f->language = p;\n+  cfun->language = p;\n \n   p->base.x_stmt_tree = c_stmt_tree;\n   p->x_break_label = c_break_label;\n@@ -6901,14 +6901,20 @@ c_push_function_context (struct function *f)\n   p->returns_null = current_function_returns_null;\n   p->returns_abnormally = current_function_returns_abnormally;\n   p->warn_about_return_type = warn_about_return_type;\n+\n+  push_function_context ();\n }\n \n /* Restore the variables used during compilation of a C function.  */\n \n void\n-c_pop_function_context (struct function *f)\n+c_pop_function_context (void)\n {\n-  struct language_function *p = f->language;\n+  struct language_function *p;\n+\n+  pop_function_context ();\n+  p = cfun->language;\n+  cfun->language = NULL;\n \n   if (DECL_STRUCT_FUNCTION (current_function_decl) == 0\n       && DECL_SAVED_TREE (current_function_decl) == NULL_TREE)\n@@ -6929,8 +6935,6 @@ c_pop_function_context (struct function *f)\n   current_function_returns_null = p->returns_null;\n   current_function_returns_abnormally = p->returns_abnormally;\n   warn_about_return_type = p->warn_about_return_type;\n-\n-  f->language = NULL;\n }\n \n /* Copy the DECL_LANG_SPECIFIC data associated with DECL.  */"}, {"sha": "5494ffb3754ad4bf84266c0ff26eed5bc6983166", "filename": "gcc/c-objc-common.h", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2784db4e5b1950ca24582e3dd716af7f5e04906/gcc%2Fc-objc-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2784db4e5b1950ca24582e3dd716af7f5e04906/gcc%2Fc-objc-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-objc-common.h?ref=d2784db4e5b1950ca24582e3dd716af7f5e04906", "patch": "@@ -53,8 +53,6 @@ extern void c_initialize_diagnostics (diagnostic_context *);\n #define LANG_HOOKS_PARSE_FILE c_common_parse_file\n #undef LANG_HOOKS_FINISH_INCOMPLETE_DECL\n #define LANG_HOOKS_FINISH_INCOMPLETE_DECL c_finish_incomplete_decl\n-#undef LANG_HOOKS_REDUCE_BIT_FIELD_OPERATIONS\n-#define LANG_HOOKS_REDUCE_BIT_FIELD_OPERATIONS true\n #undef LANG_HOOKS_STATICP\n #define LANG_HOOKS_STATICP c_staticp\n #undef LANG_HOOKS_NO_BODY_BLOCKS\n@@ -65,10 +63,6 @@ extern void c_initialize_diagnostics (diagnostic_context *);\n #define LANG_HOOKS_PRINT_IDENTIFIER c_print_identifier\n #undef LANG_HOOKS_TYPES_COMPATIBLE_P\n #define LANG_HOOKS_TYPES_COMPATIBLE_P c_types_compatible_p\n-#undef LANG_HOOKS_FUNCTION_ENTER_NESTED\n-#define LANG_HOOKS_FUNCTION_ENTER_NESTED c_push_function_context\n-#undef LANG_HOOKS_FUNCTION_LEAVE_NESTED\n-#define LANG_HOOKS_FUNCTION_LEAVE_NESTED c_pop_function_context\n #undef LANG_HOOKS_FUNCTION_MISSING_NORETURN_OK_P\n #define LANG_HOOKS_FUNCTION_MISSING_NORETURN_OK_P c_missing_noreturn_ok_p\n #undef LANG_HOOKS_DUP_LANG_SPECIFIC_DECL"}, {"sha": "d638a0b2537421b96222748ceeffe207f932eef6", "filename": "gcc/c-parser.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2784db4e5b1950ca24582e3dd716af7f5e04906/gcc%2Fc-parser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2784db4e5b1950ca24582e3dd716af7f5e04906/gcc%2Fc-parser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-parser.c?ref=d2784db4e5b1950ca24582e3dd716af7f5e04906", "patch": "@@ -1374,7 +1374,7 @@ c_parser_declaration_or_fndef (c_parser *parser, bool fndef_ok, bool empty_ok,\n \t{\n \t  if (pedantic)\n \t    pedwarn (\"%HISO C forbids nested functions\", &here);\n-\t  push_function_context ();\n+\t  c_push_function_context ();\n \t}\n       if (!start_function (specs, declarator, all_prefix_attrs))\n \t{\n@@ -1384,7 +1384,7 @@ c_parser_declaration_or_fndef (c_parser *parser, bool fndef_ok, bool empty_ok,\n \t  c_parser_error (parser, \"expected %<=%>, %<,%>, %<;%>, %<asm%> \"\n \t\t\t  \"or %<__attribute__%>\");\n \t  if (nested)\n-\t    pop_function_context ();\n+\t    c_pop_function_context ();\n \t  break;\n \t}\n       /* Parse old-style parameter declarations.  ??? Attributes are\n@@ -1411,7 +1411,7 @@ c_parser_declaration_or_fndef (c_parser *parser, bool fndef_ok, bool empty_ok,\n \t  tree decl = current_function_decl;\n \t  add_stmt (fnbody);\n \t  finish_function ();\n-\t  pop_function_context ();\n+\t  c_pop_function_context ();\n \t  add_stmt (build_stmt (DECL_EXPR, decl));\n \t}\n       else"}, {"sha": "687d39a3cc544ed0de03a21ac8d5df8e9c44d6c0", "filename": "gcc/c-tree.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2784db4e5b1950ca24582e3dd716af7f5e04906/gcc%2Fc-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2784db4e5b1950ca24582e3dd716af7f5e04906/gcc%2Fc-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-tree.h?ref=d2784db4e5b1950ca24582e3dd716af7f5e04906", "patch": "@@ -483,8 +483,8 @@ extern tree grokparm (const struct c_parm *);\n extern tree implicitly_declare (tree);\n extern void keep_next_level (void);\n extern void pending_xref_error (void);\n-extern void c_push_function_context (struct function *);\n-extern void c_pop_function_context (struct function *);\n+extern void c_push_function_context (void);\n+extern void c_pop_function_context (void);\n extern void push_parm_decl (const struct c_parm *);\n extern struct c_declarator *set_array_declarator_inner (struct c_declarator *,\n \t\t\t\t\t\t\tstruct c_declarator *);"}, {"sha": "6aaf392a3fe160100d50638552e748f2e1202bb4", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2784db4e5b1950ca24582e3dd716af7f5e04906/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2784db4e5b1950ca24582e3dd716af7f5e04906/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=d2784db4e5b1950ca24582e3dd716af7f5e04906", "patch": "@@ -1,3 +1,9 @@\n+2008-04-03  Paolo Bonzini  <bonzini@gnu.org>\n+\n+        * method.c (synthesize_method): Use {push,pop}_function_context.\n+        * name-lookup.c (push_to_top_level): Likewise.\n+        * parser.c (cp_parser_late_parsing_for_member): Likewise.\n+\n 2008-03-30  Volker Reichelt  <v.reichelt@netcologne.de>\n \n \tPR c++/35578"}, {"sha": "03cd44390909a85dc782b4b402a87c7ba722c316", "filename": "gcc/cp/method.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2784db4e5b1950ca24582e3dd716af7f5e04906/gcc%2Fcp%2Fmethod.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2784db4e5b1950ca24582e3dd716af7f5e04906/gcc%2Fcp%2Fmethod.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmethod.c?ref=d2784db4e5b1950ca24582e3dd716af7f5e04906", "patch": "@@ -772,7 +772,7 @@ synthesize_method (tree fndecl)\n   if (! context)\n     push_to_top_level ();\n   else if (nested)\n-    push_function_context_to (context);\n+    push_function_context ();\n \n   input_location = DECL_SOURCE_LOCATION (fndecl);\n \n@@ -810,7 +810,7 @@ synthesize_method (tree fndecl)\n   if (! context)\n     pop_from_top_level ();\n   else if (nested)\n-    pop_function_context_from (context);\n+    pop_function_context ();\n \n   pop_deferring_access_checks ();\n "}, {"sha": "94d1c8e509aea055674cc5fe248f8798cf1248be", "filename": "gcc/cp/name-lookup.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2784db4e5b1950ca24582e3dd716af7f5e04906/gcc%2Fcp%2Fname-lookup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2784db4e5b1950ca24582e3dd716af7f5e04906/gcc%2Fcp%2Fname-lookup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fname-lookup.c?ref=d2784db4e5b1950ca24582e3dd716af7f5e04906", "patch": "@@ -5101,7 +5101,7 @@ push_to_top_level (void)\n   if (cfun)\n     {\n       need_pop = true;\n-      push_function_context_to (NULL_TREE);\n+      push_function_context ();\n     }\n   else\n     need_pop = false;\n@@ -5180,7 +5180,7 @@ pop_from_top_level (void)\n   /* If we were in the middle of compiling a function, restore our\n      state.  */\n   if (s->need_pop_function_context)\n-    pop_function_context_from (NULL_TREE);\n+    pop_function_context ();\n   current_function_decl = s->function_decl;\n   skip_evaluation = s->skip_evaluation;\n   timevar_pop (TV_NAME_LOOKUP);"}, {"sha": "85295eb743c18f9de4fc2867d11a4d6ef8f6ce35", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2784db4e5b1950ca24582e3dd716af7f5e04906/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2784db4e5b1950ca24582e3dd716af7f5e04906/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=d2784db4e5b1950ca24582e3dd716af7f5e04906", "patch": "@@ -17426,8 +17426,7 @@ cp_parser_late_parsing_for_member (cp_parser* parser, tree member_function)\n \t function.  */\n       function_scope = current_function_decl;\n       if (function_scope)\n-\tpush_function_context_to (function_scope);\n-\n+\tpush_function_context ();\n \n       /* Push the body of the function onto the lexer stack.  */\n       cp_parser_push_lexer_for_tokens (parser, tokens);\n@@ -17450,7 +17449,7 @@ cp_parser_late_parsing_for_member (cp_parser* parser, tree member_function)\n \n       /* Leave the scope of the containing function.  */\n       if (function_scope)\n-\tpop_function_context_from (function_scope);\n+\tpop_function_context ();\n       cp_parser_pop_lexer (parser);\n     }\n "}, {"sha": "197c39375e236feaa808b5648101d9233f2385e7", "filename": "gcc/function.c", "status": "modified", "additions": 5, "deletions": 29, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2784db4e5b1950ca24582e3dd716af7f5e04906/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2784db4e5b1950ca24582e3dd716af7f5e04906/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=d2784db4e5b1950ca24582e3dd716af7f5e04906", "patch": "@@ -234,60 +234,36 @@ find_function_data (tree decl)\n }\n \n /* Save the current context for compilation of a nested function.\n-   This is called from language-specific code.  The caller should use\n-   the enter_nested langhook to save any language-specific state,\n-   since this function knows only about language-independent\n-   variables.  */\n+   This is called from language-specific code.  */\n \n void\n-push_function_context_to (tree context ATTRIBUTE_UNUSED)\n+push_function_context (void)\n {\n-  struct function *p;\n-\n   if (cfun == 0)\n     allocate_struct_function (NULL, false);\n-  p = cfun;\n-\n-  p->outer = outer_function_chain;\n-  outer_function_chain = p;\n-\n-  lang_hooks.function.enter_nested (p);\n \n+  cfun->outer = outer_function_chain;\n+  outer_function_chain = cfun;\n   set_cfun (NULL);\n }\n \n-void\n-push_function_context (void)\n-{\n-  push_function_context_to (current_function_decl);\n-}\n-\n /* Restore the last saved context, at the end of a nested function.\n    This function is called from language-specific code.  */\n \n void\n-pop_function_context_from (tree context ATTRIBUTE_UNUSED)\n+pop_function_context (void)\n {\n   struct function *p = outer_function_chain;\n \n   set_cfun (p);\n   outer_function_chain = p->outer;\n-\n   current_function_decl = p->decl;\n \n-  lang_hooks.function.leave_nested (p);\n-\n   /* Reset variables that have known state during rtx generation.  */\n   virtuals_instantiated = 0;\n   generating_concat_p = 1;\n }\n \n-void\n-pop_function_context (void)\n-{\n-  pop_function_context_from (current_function_decl);\n-}\n-\n /* Clear out all parts of the state in F that can safely be discarded\n    after the function has been parsed, but not compiled, to let\n    garbage collection reclaim the memory.  */"}, {"sha": "745e3a260678868a5a0ccd981e058e5da2e6d0f2", "filename": "gcc/langhooks-def.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2784db4e5b1950ca24582e3dd716af7f5e04906/gcc%2Flanghooks-def.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2784db4e5b1950ca24582e3dd716af7f5e04906/gcc%2Flanghooks-def.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flanghooks-def.h?ref=d2784db4e5b1950ca24582e3dd716af7f5e04906", "patch": "@@ -117,8 +117,6 @@ extern void lhd_omp_firstprivatize_type_sizes (struct gimplify_omp_ctx *,\n \n #define LANG_HOOKS_FUNCTION_INIT\tlhd_do_nothing_f\n #define LANG_HOOKS_FUNCTION_FINAL\tlhd_do_nothing_f\n-#define LANG_HOOKS_FUNCTION_ENTER_NESTED lhd_do_nothing_f\n-#define LANG_HOOKS_FUNCTION_LEAVE_NESTED lhd_do_nothing_f\n #define LANG_HOOKS_FUNCTION_MISSING_NORETURN_OK_P hook_bool_tree_true\n \n /* Attribute hooks.  */\n@@ -145,8 +143,6 @@ extern void lhd_omp_firstprivatize_type_sizes (struct gimplify_omp_ctx *,\n #define LANG_HOOKS_FUNCTION_INITIALIZER {\t\\\n   LANG_HOOKS_FUNCTION_INIT,\t\t\t\\\n   LANG_HOOKS_FUNCTION_FINAL,\t\t\t\\\n-  LANG_HOOKS_FUNCTION_ENTER_NESTED,\t\t\\\n-  LANG_HOOKS_FUNCTION_LEAVE_NESTED,\t\t\\\n   LANG_HOOKS_FUNCTION_MISSING_NORETURN_OK_P\t\\\n }\n "}, {"sha": "ef46912c8cb13b781baf06f79001f75c8c1e149c", "filename": "gcc/langhooks.h", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2784db4e5b1950ca24582e3dd716af7f5e04906/gcc%2Flanghooks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2784db4e5b1950ca24582e3dd716af7f5e04906/gcc%2Flanghooks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flanghooks.h?ref=d2784db4e5b1950ca24582e3dd716af7f5e04906", "patch": "@@ -64,12 +64,6 @@ struct lang_hooks_for_functions\n   /* Called when leaving a function.  */\n   void (*final) (struct function *);\n \n-  /* Called when entering a nested function.  */\n-  void (*enter_nested) (struct function *);\n-\n-  /* Called when leaving a nested function.  */\n-  void (*leave_nested) (struct function *);\n-\n   /* Determines if it's ok for a function to have no noreturn attribute.  */\n   bool (*missing_noreturn_ok_p) (tree);\n };"}, {"sha": "9eac3e8b2fa7c4a2950aa4c8a8bbda6a5525f3f2", "filename": "gcc/tree.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2784db4e5b1950ca24582e3dd716af7f5e04906/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2784db4e5b1950ca24582e3dd716af7f5e04906/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=d2784db4e5b1950ca24582e3dd716af7f5e04906", "patch": "@@ -4958,8 +4958,6 @@ extern void preserve_temp_slots (rtx);\n extern int aggregate_value_p (const_tree, const_tree);\n extern void push_function_context (void);\n extern void pop_function_context (void);\n-extern void push_function_context_to (tree);\n-extern void pop_function_context_from (tree);\n extern tree gimplify_parameters (void);\n \n /* In print-rtl.c */"}]}