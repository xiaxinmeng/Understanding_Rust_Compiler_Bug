{"sha": "34220a12295cfd5f36a04a0342287048d7a875b7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzQyMjBhMTIyOTVjZmQ1ZjM2YTA0YTAzNDIyODcwNDhkN2E4NzViNw==", "commit": {"author": {"name": "Bernd Schmidt", "email": "bernds@cygnus.co.uk", "date": "1999-09-04T22:08:44Z"}, "committer": {"name": "Bernd Schmidt", "email": "crux@gcc.gnu.org", "date": "1999-09-04T22:08:44Z"}, "message": "Convert many single variables to arrays\n\nFrom-SVN: r29110", "tree": {"sha": "ba50ef36b34c0c2e6f0d788595bd3a542c688ab0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ba50ef36b34c0c2e6f0d788595bd3a542c688ab0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/34220a12295cfd5f36a04a0342287048d7a875b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34220a12295cfd5f36a04a0342287048d7a875b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/34220a12295cfd5f36a04a0342287048d7a875b7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34220a12295cfd5f36a04a0342287048d7a875b7/comments", "author": null, "committer": null, "parents": [{"sha": "6c7c62c6375e8fc0ea2c6d6da475db40d06191e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c7c62c6375e8fc0ea2c6d6da475db40d06191e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c7c62c6375e8fc0ea2c6d6da475db40d06191e9"}], "stats": {"total": 729, "additions": 396, "deletions": 333}, "files": [{"sha": "6049ab5f68abb6b9face1b52c46aef91414908ea", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34220a12295cfd5f36a04a0342287048d7a875b7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34220a12295cfd5f36a04a0342287048d7a875b7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=34220a12295cfd5f36a04a0342287048d7a875b7", "patch": "@@ -1,3 +1,13 @@\n+Sat Sep  4 22:53:13 1999  Bernd Schmidt  <bernds@cygnus.co.uk>\n+\n+\t* expr.h: Collapse individual optab and libfunc vars to arrays.\n+\t(optab_index, libfunc_index): New enumerations.\n+\t(optab_table, libfunc_table): New arrays.\n+\tAdd accessor macros for both.\n+\n+\t* optabs.c (optab_table, libfunc_table): New.\n+\tDelete declarations for individual optab and libfunc vars.\n+\n Sat Sep  4 12:57:17 1999  Richard Henderson  <rth@cygnus.com>\n \n \t* i386/sco5.h (RETURN_POPS_ARGS): Name change ix86_return_pops_args."}, {"sha": "e27797a54e859fa1828cfc64817810b3b8951ee7", "filename": "gcc/expr.h", "status": "modified", "additions": 383, "deletions": 166, "changes": 549, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34220a12295cfd5f36a04a0342287048d7a875b7/gcc%2Fexpr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34220a12295cfd5f36a04a0342287048d7a875b7/gcc%2Fexpr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.h?ref=34220a12295cfd5f36a04a0342287048d7a875b7", "patch": "@@ -293,50 +293,141 @@ typedef struct optab\n \n extern rtx (*const insn_gen_function[]) PROTO ((rtx, ...));\n \n-extern optab add_optab;\n-extern optab sub_optab;\n-extern optab smul_optab;\t/* Signed and floating-point multiply */\n-extern optab smul_highpart_optab; /* Signed multiply, return high word */\n-extern optab umul_highpart_optab;\n-extern optab smul_widen_optab;\t/* Signed multiply with result \n-\t\t\t\t   one machine mode wider than args */\n-extern optab umul_widen_optab;\n-extern optab sdiv_optab;\t/* Signed divide */\n-extern optab sdivmod_optab;\t/* Signed divide-and-remainder in one */\n-extern optab udiv_optab;\n-extern optab udivmod_optab;\n-extern optab smod_optab;\t/* Signed remainder */\n-extern optab umod_optab;\n-extern optab flodiv_optab;\t/* Optab for floating divide. */\n-extern optab ftrunc_optab;\t/* Convert float to integer in float fmt */\n-extern optab and_optab;\t\t/* Logical and */\n-extern optab ior_optab;\t\t/* Logical or */\n-extern optab xor_optab;\t\t/* Logical xor */\n-extern optab ashl_optab;\t/* Arithmetic shift left */\n-extern optab ashr_optab;\t/* Arithmetic shift right */\n-extern optab lshr_optab;\t/* Logical shift right */\n-extern optab rotl_optab;\t/* Rotate left */\n-extern optab rotr_optab;\t/* Rotate right */\n-extern optab smin_optab;\t/* Signed and floating-point minimum value */\n-extern optab smax_optab;\t/* Signed and floating-point maximum value */\n-extern optab umin_optab;\t/* Unsigned minimum value */\n-extern optab umax_optab;\t/* Unsigned maximum value */\n-\n-extern optab mov_optab;\t\t/* Move instruction.  */\n-extern optab movstrict_optab;\t/* Move, preserving high part of register.  */\n-\n-extern optab cmp_optab;\t\t/* Compare insn; two operands.  */\n-extern optab tst_optab;\t\t/* tst insn; compare one operand against 0 */\n-\n-/* Unary operations */\n-extern optab neg_optab;\t\t/* Negation */\n-extern optab abs_optab;\t\t/* Abs value */\n-extern optab one_cmpl_optab;\t/* Bitwise not */\n-extern optab ffs_optab;\t\t/* Find first bit set */\n-extern optab sqrt_optab;\t/* Square root */\n-extern optab sin_optab;\t\t/* Sine */\n-extern optab cos_optab;\t\t/* Cosine */\n-extern optab strlen_optab;\t/* String length */\n+/* Enumeration of valid indexes into optab_table.  */\n+enum optab_index\n+{\n+  OTI_add,\n+  OTI_sub,\n+\n+  /* Signed and fp multiply */\n+  OTI_smul,\n+  /* Signed multiply, return high word */\n+  OTI_smul_highpart,\n+  OTI_umul_highpart,\n+  /* Signed multiply with result one machine mode wider than args */\n+  OTI_smul_widen,\n+  OTI_umul_widen,\n+\n+  /* Signed divide */\n+  OTI_sdiv,\n+  /* Signed divide-and-remainder in one */\n+  OTI_sdivmod,\n+  OTI_udiv,\n+  OTI_udivmod,\n+  /* Signed remainder */\n+  OTI_smod,\n+  OTI_umod,\n+  /* Optab for floating divide. */\n+  OTI_flodiv,\n+  /* Convert float to integer in float fmt */\n+  OTI_ftrunc,\n+\n+  /* Logical and */\n+  OTI_and,\n+  /* Logical or */\n+  OTI_ior,\n+  /* Logical xor */\n+  OTI_xor,\n+\n+  /* Arithmetic shift left */\n+  OTI_ashl,\n+  /* Logical shift right */\n+  OTI_lshr,  \n+  /* Arithmetic shift right */\n+  OTI_ashr,\n+  /* Rotate left */\n+  OTI_rotl,\n+  /* Rotate right */\n+  OTI_rotr,\n+  /* Signed and floating-point minimum value */\n+  OTI_smin,\n+  /* Signed and floating-point maximum value */\n+  OTI_smax,\n+  /* Unsigned minimum value */\n+  OTI_umin,\n+  /* Unsigned maximum value */\n+  OTI_umax,\n+\n+  /* Move instruction.  */\n+  OTI_mov,\n+  /* Move, preserving high part of register.  */\n+  OTI_movstrict,\n+\n+  /* Unary operations */\n+  /* Negation */\n+  OTI_neg,\n+  /* Abs value */\n+  OTI_abs,\n+  /* Bitwise not */\n+  OTI_one_cmpl,\n+  /* Find first bit set */\n+  OTI_ffs,\n+  /* Square root */\n+  OTI_sqrt,\n+  /* Sine */\n+  OTI_sin,\n+  /* Cosine */\n+  OTI_cos,\n+\n+  /* Compare insn; two operands.  */\n+  OTI_cmp,\n+  /* Used only for libcalls for unsigned comparisons.  */\n+  OTI_ucmp,\n+  /* tst insn; compare one operand against 0 */\n+  OTI_tst,\n+\n+  /* String length */\n+  OTI_strlen,\n+\n+  OTI_MAX\n+};\n+\n+extern optab optab_table[OTI_MAX];\n+\n+#define add_optab (optab_table[OTI_add])\n+#define sub_optab (optab_table[OTI_sub])\n+#define smul_optab (optab_table[OTI_smul])\n+#define smul_highpart_optab (optab_table[OTI_smul_highpart])\n+#define umul_highpart_optab (optab_table[OTI_umul_highpart])\n+#define smul_widen_optab (optab_table[OTI_smul_widen])\n+#define umul_widen_optab (optab_table[OTI_umul_widen])\n+#define sdiv_optab (optab_table[OTI_sdiv])\n+#define sdivmod_optab (optab_table[OTI_sdivmod])\n+#define udiv_optab (optab_table[OTI_udiv])\n+#define udivmod_optab (optab_table[OTI_udivmod])\n+#define smod_optab (optab_table[OTI_smod])\n+#define umod_optab (optab_table[OTI_umod])\n+#define flodiv_optab (optab_table[OTI_flodiv])\n+#define ftrunc_optab (optab_table[OTI_ftrunc])\n+#define and_optab (optab_table[OTI_and])\n+#define ior_optab (optab_table[OTI_ior])\n+#define xor_optab (optab_table[OTI_xor])\n+#define ashl_optab (optab_table[OTI_ashl])\n+#define lshr_optab (optab_table[OTI_lshr])\n+#define ashr_optab (optab_table[OTI_ashr])\n+#define rotl_optab (optab_table[OTI_rotl])\n+#define rotr_optab (optab_table[OTI_rotr])\n+#define smin_optab (optab_table[OTI_smin])\n+#define smax_optab (optab_table[OTI_smax])\n+#define umin_optab (optab_table[OTI_umin])\n+#define umax_optab (optab_table[OTI_umax])\n+\n+#define mov_optab (optab_table[OTI_mov])\n+#define movstrict_optab (optab_table[OTI_movstrict])\n+\n+#define neg_optab (optab_table[OTI_neg])\n+#define abs_optab (optab_table[OTI_abs])\n+#define one_cmpl_optab (optab_table[OTI_one_cmpl])\n+#define ffs_optab (optab_table[OTI_ffs])\n+#define sqrt_optab (optab_table[OTI_sqrt])\n+#define sin_optab (optab_table[OTI_sin])\n+#define cos_optab (optab_table[OTI_cos])\n+\n+#define cmp_optab (optab_table[OTI_cmp])\n+#define ucmp_optab (optab_table[OTI_ucmp])\n+#define tst_optab (optab_table[OTI_tst])\n+\n+#define strlen_optab (optab_table[OTI_strlen])\n \n /* Tables of patterns for extending one integer mode to another.  */\n extern enum insn_code extendtab[MAX_MACHINE_MODE][MAX_MACHINE_MODE][2];\n@@ -364,130 +455,256 @@ enum optab_methods\n   OPTAB_MUST_WIDEN\n };\n \n+/* Enumeration of indexes into libfunc_table.  */\n+enum libfunc_index\n+{\n+  LTI_extendsfdf2,\n+  LTI_extendsfxf2,\n+  LTI_extendsftf2,\n+  LTI_extenddfxf2,\n+  LTI_extenddftf2,\n+\n+  LTI_truncdfsf2,\n+  LTI_truncxfsf2,\n+  LTI_trunctfsf2,\n+  LTI_truncxfdf2,\n+  LTI_trunctfdf2,\n+\n+  LTI_memcpy,\n+  LTI_bcopy,\n+  LTI_memcmp,\n+  LTI_bcmp,\n+  LTI_memset,\n+  LTI_bzero,\n+\n+  LTI_throw,\n+  LTI_rethrow,\n+  LTI_sjthrow,\n+  LTI_sjpopnthrow,\n+  LTI_terminate,\n+  LTI_setjmp,\n+  LTI_longjmp,\n+  LTI_eh_rtime_match,\n+\n+  LTI_eqhf2,\n+  LTI_nehf2,\n+  LTI_gthf2,\n+  LTI_gehf2,\n+  LTI_lthf2,\n+  LTI_lehf2,\n+\n+  LTI_eqsf2,\n+  LTI_nesf2,\n+  LTI_gtsf2,\n+  LTI_gesf2,\n+  LTI_ltsf2,\n+  LTI_lesf2,\n+\n+  LTI_eqdf2,\n+  LTI_nedf2,\n+  LTI_gtdf2,\n+  LTI_gedf2,\n+  LTI_ltdf2,\n+  LTI_ledf2,\n+\n+  LTI_eqxf2,\n+  LTI_nexf2,\n+  LTI_gtxf2,\n+  LTI_gexf2,\n+  LTI_ltxf2,\n+  LTI_lexf2,\n+\n+  LTI_eqtf2,\n+  LTI_netf2,\n+  LTI_gttf2,\n+  LTI_getf2,\n+  LTI_lttf2,\n+  LTI_letf2,\n+\n+  LTI_floatsisf,\n+  LTI_floatdisf,\n+  LTI_floattisf,\n+\n+  LTI_floatsidf,\n+  LTI_floatdidf,\n+  LTI_floattidf,\n+\n+  LTI_floatsixf,\n+  LTI_floatdixf,\n+  LTI_floattixf,\n+\n+  LTI_floatsitf,\n+  LTI_floatditf,\n+  LTI_floattitf,\n+\n+  LTI_fixsfsi,\n+  LTI_fixsfdi,\n+  LTI_fixsfti,\n+\n+  LTI_fixdfsi,\n+  LTI_fixdfdi,\n+  LTI_fixdfti,\n+\n+  LTI_fixxfsi,\n+  LTI_fixxfdi,\n+  LTI_fixxfti,\n+\n+  LTI_fixtfsi,\n+  LTI_fixtfdi,\n+  LTI_fixtfti,\n+\n+  LTI_fixunssfsi,\n+  LTI_fixunssfdi,\n+  LTI_fixunssfti,\n+\n+  LTI_fixunsdfsi,\n+  LTI_fixunsdfdi,\n+  LTI_fixunsdfti,\n+\n+  LTI_fixunsxfsi,\n+  LTI_fixunsxfdi,\n+  LTI_fixunsxfti,\n+\n+  LTI_fixunstfsi,\n+  LTI_fixunstfdi,\n+  LTI_fixunstfti,\n+\n+  LTI_chkr_check_addr,\n+  LTI_chkr_set_right,\n+  LTI_chkr_copy_bitmap,\n+  LTI_chkr_check_exec,\n+  LTI_chkr_check_str,\n+\n+  LTI_profile_function_entry,\n+  LTI_profile_function_exit,\n+\n+  LTI_MAX\n+};\n+\n /* SYMBOL_REF rtx's for the library functions that are called\n    implicitly and not via optabs.  */\n-\n-extern rtx extendsfdf2_libfunc;\n-extern rtx extendsfxf2_libfunc;\n-extern rtx extendsftf2_libfunc;\n-extern rtx extenddfxf2_libfunc;\n-extern rtx extenddftf2_libfunc;\n-\n-extern rtx truncdfsf2_libfunc;\n-extern rtx truncxfsf2_libfunc;\n-extern rtx trunctfsf2_libfunc;\n-extern rtx truncxfdf2_libfunc;\n-extern rtx trunctfdf2_libfunc;\n-\n-extern rtx memcpy_libfunc;\n-extern rtx bcopy_libfunc;\n-extern rtx memcmp_libfunc;\n-extern rtx bcmp_libfunc;\n-extern rtx memset_libfunc;\n-extern rtx bzero_libfunc;\n-\n-extern rtx throw_libfunc;\n-extern rtx rethrow_libfunc;\n-extern rtx sjthrow_libfunc;\n-extern rtx sjpopnthrow_libfunc;\n-extern rtx terminate_libfunc;\n-extern rtx setjmp_libfunc;\n-extern rtx longjmp_libfunc;\n-extern rtx eh_rtime_match_libfunc;\n-\n-extern rtx eqhf2_libfunc;\n-extern rtx nehf2_libfunc;\n-extern rtx gthf2_libfunc;\n-extern rtx gehf2_libfunc;\n-extern rtx lthf2_libfunc;\n-extern rtx lehf2_libfunc;\n-\n-extern rtx eqsf2_libfunc;\n-extern rtx nesf2_libfunc;\n-extern rtx gtsf2_libfunc;\n-extern rtx gesf2_libfunc;\n-extern rtx ltsf2_libfunc;\n-extern rtx lesf2_libfunc;\n-\n-extern rtx eqdf2_libfunc;\n-extern rtx nedf2_libfunc;\n-extern rtx gtdf2_libfunc;\n-extern rtx gedf2_libfunc;\n-extern rtx ltdf2_libfunc;\n-extern rtx ledf2_libfunc;\n-\n-extern rtx eqxf2_libfunc;\n-extern rtx nexf2_libfunc;\n-extern rtx gtxf2_libfunc;\n-extern rtx gexf2_libfunc;\n-extern rtx ltxf2_libfunc;\n-extern rtx lexf2_libfunc;\n-\n-extern rtx eqtf2_libfunc;\n-extern rtx netf2_libfunc;\n-extern rtx gttf2_libfunc;\n-extern rtx getf2_libfunc;\n-extern rtx lttf2_libfunc;\n-extern rtx letf2_libfunc;\n-\n-extern rtx floatsisf_libfunc;\n-extern rtx floatdisf_libfunc;\n-extern rtx floattisf_libfunc;\n-\n-extern rtx floatsidf_libfunc;\n-extern rtx floatdidf_libfunc;\n-extern rtx floattidf_libfunc;\n-\n-extern rtx floatsixf_libfunc;\n-extern rtx floatdixf_libfunc;\n-extern rtx floattixf_libfunc;\n-\n-extern rtx floatsitf_libfunc;\n-extern rtx floatditf_libfunc;\n-extern rtx floattitf_libfunc;\n-\n-extern rtx fixsfsi_libfunc;\n-extern rtx fixsfdi_libfunc;\n-extern rtx fixsfti_libfunc;\n-\n-extern rtx fixdfsi_libfunc;\n-extern rtx fixdfdi_libfunc;\n-extern rtx fixdfti_libfunc;\n-\n-extern rtx fixxfsi_libfunc;\n-extern rtx fixxfdi_libfunc;\n-extern rtx fixxfti_libfunc;\n-\n-extern rtx fixtfsi_libfunc;\n-extern rtx fixtfdi_libfunc;\n-extern rtx fixtfti_libfunc;\n-\n-extern rtx fixunssfsi_libfunc;\n-extern rtx fixunssfdi_libfunc;\n-extern rtx fixunssfti_libfunc;\n-\n-extern rtx fixunsdfsi_libfunc;\n-extern rtx fixunsdfdi_libfunc;\n-extern rtx fixunsdfti_libfunc;\n-\n-extern rtx fixunsxfsi_libfunc;\n-extern rtx fixunsxfdi_libfunc;\n-extern rtx fixunsxfti_libfunc;\n-\n-extern rtx fixunstfsi_libfunc;\n-extern rtx fixunstfdi_libfunc;\n-extern rtx fixunstfti_libfunc;\n-\n-/* For check-memory-usage.  */\n-extern rtx chkr_check_addr_libfunc;\n-extern rtx chkr_set_right_libfunc;\n-extern rtx chkr_copy_bitmap_libfunc;\n-extern rtx chkr_check_exec_libfunc;\n-extern rtx chkr_check_str_libfunc;\n-\n-/* For instrument-functions.  */\n-extern rtx profile_function_entry_libfunc;\n-extern rtx profile_function_exit_libfunc;\n+extern rtx libfunc_table[LTI_MAX];\n+\n+/* Accessor macros for libfunc_table.  */\n+#define extendsfdf2_libfunc\t(libfunc_table[LTI_extendsfdf2])\n+#define extendsfxf2_libfunc\t(libfunc_table[LTI_extendsfxf2])\n+#define extendsftf2_libfunc\t(libfunc_table[LTI_extendsftf2])\n+#define extenddfxf2_libfunc\t(libfunc_table[LTI_extenddfxf2])\n+#define extenddftf2_libfunc\t(libfunc_table[LTI_extenddftf2])\n+\n+#define truncdfsf2_libfunc\t(libfunc_table[LTI_truncdfsf2])\n+#define truncxfsf2_libfunc\t(libfunc_table[LTI_truncxfsf2])\n+#define trunctfsf2_libfunc\t(libfunc_table[LTI_trunctfsf2])\n+#define truncxfdf2_libfunc\t(libfunc_table[LTI_truncxfdf2])\n+#define trunctfdf2_libfunc\t(libfunc_table[LTI_trunctfdf2])\n+\n+#define memcpy_libfunc\t(libfunc_table[LTI_memcpy])\n+#define bcopy_libfunc\t(libfunc_table[LTI_bcopy])\n+#define memcmp_libfunc\t(libfunc_table[LTI_memcmp])\n+#define bcmp_libfunc\t(libfunc_table[LTI_bcmp])\n+#define memset_libfunc\t(libfunc_table[LTI_memset])\n+#define bzero_libfunc\t(libfunc_table[LTI_bzero])\n+\n+#define throw_libfunc\t(libfunc_table[LTI_throw])\n+#define rethrow_libfunc\t(libfunc_table[LTI_rethrow])\n+#define sjthrow_libfunc\t(libfunc_table[LTI_sjthrow])\n+#define sjpopnthrow_libfunc\t(libfunc_table[LTI_sjpopnthrow])\n+#define terminate_libfunc\t(libfunc_table[LTI_terminate])\n+#define setjmp_libfunc\t(libfunc_table[LTI_setjmp])\n+#define longjmp_libfunc\t(libfunc_table[LTI_longjmp])\n+#define eh_rtime_match_libfunc\t(libfunc_table[LTI_eh_rtime_match])\n+\n+#define eqhf2_libfunc\t(libfunc_table[LTI_eqhf2])\n+#define nehf2_libfunc\t(libfunc_table[LTI_nehf2])\n+#define gthf2_libfunc\t(libfunc_table[LTI_gthf2])\n+#define gehf2_libfunc\t(libfunc_table[LTI_gehf2])\n+#define lthf2_libfunc\t(libfunc_table[LTI_lthf2])\n+#define lehf2_libfunc\t(libfunc_table[LTI_lehf2])\n+\n+#define eqsf2_libfunc\t(libfunc_table[LTI_eqsf2])\n+#define nesf2_libfunc\t(libfunc_table[LTI_nesf2])\n+#define gtsf2_libfunc\t(libfunc_table[LTI_gtsf2])\n+#define gesf2_libfunc\t(libfunc_table[LTI_gesf2])\n+#define ltsf2_libfunc\t(libfunc_table[LTI_ltsf2])\n+#define lesf2_libfunc\t(libfunc_table[LTI_lesf2])\n+\n+#define eqdf2_libfunc\t(libfunc_table[LTI_eqdf2])\n+#define nedf2_libfunc\t(libfunc_table[LTI_nedf2])\n+#define gtdf2_libfunc\t(libfunc_table[LTI_gtdf2])\n+#define gedf2_libfunc\t(libfunc_table[LTI_gedf2])\n+#define ltdf2_libfunc\t(libfunc_table[LTI_ltdf2])\n+#define ledf2_libfunc\t(libfunc_table[LTI_ledf2])\n+\n+#define eqxf2_libfunc\t(libfunc_table[LTI_eqxf2])\n+#define nexf2_libfunc\t(libfunc_table[LTI_nexf2])\n+#define gtxf2_libfunc\t(libfunc_table[LTI_gtxf2])\n+#define gexf2_libfunc\t(libfunc_table[LTI_gexf2])\n+#define ltxf2_libfunc\t(libfunc_table[LTI_ltxf2])\n+#define lexf2_libfunc\t(libfunc_table[LTI_lexf2])\n+\n+#define eqtf2_libfunc\t(libfunc_table[LTI_eqtf2])\n+#define netf2_libfunc\t(libfunc_table[LTI_netf2])\n+#define gttf2_libfunc\t(libfunc_table[LTI_gttf2])\n+#define getf2_libfunc\t(libfunc_table[LTI_getf2])\n+#define lttf2_libfunc\t(libfunc_table[LTI_lttf2])\n+#define letf2_libfunc\t(libfunc_table[LTI_letf2])\n+\n+#define floatsisf_libfunc\t(libfunc_table[LTI_floatsisf])\n+#define floatdisf_libfunc\t(libfunc_table[LTI_floatdisf])\n+#define floattisf_libfunc\t(libfunc_table[LTI_floattisf])\n+\n+#define floatsidf_libfunc\t(libfunc_table[LTI_floatsidf])\n+#define floatdidf_libfunc\t(libfunc_table[LTI_floatdidf])\n+#define floattidf_libfunc\t(libfunc_table[LTI_floattidf])\n+\n+#define floatsixf_libfunc\t(libfunc_table[LTI_floatsixf])\n+#define floatdixf_libfunc\t(libfunc_table[LTI_floatdixf])\n+#define floattixf_libfunc\t(libfunc_table[LTI_floattixf])\n+\n+#define floatsitf_libfunc\t(libfunc_table[LTI_floatsitf])\n+#define floatditf_libfunc\t(libfunc_table[LTI_floatditf])\n+#define floattitf_libfunc\t(libfunc_table[LTI_floattitf])\n+\n+#define fixsfsi_libfunc\t(libfunc_table[LTI_fixsfsi])\n+#define fixsfdi_libfunc\t(libfunc_table[LTI_fixsfdi])\n+#define fixsfti_libfunc\t(libfunc_table[LTI_fixsfti])\n+\n+#define fixdfsi_libfunc\t(libfunc_table[LTI_fixdfsi])\n+#define fixdfdi_libfunc\t(libfunc_table[LTI_fixdfdi])\n+#define fixdfti_libfunc\t(libfunc_table[LTI_fixdfti])\n+\n+#define fixxfsi_libfunc\t(libfunc_table[LTI_fixxfsi])\n+#define fixxfdi_libfunc\t(libfunc_table[LTI_fixxfdi])\n+#define fixxfti_libfunc\t(libfunc_table[LTI_fixxfti])\n+\n+#define fixtfsi_libfunc\t(libfunc_table[LTI_fixtfsi])\n+#define fixtfdi_libfunc\t(libfunc_table[LTI_fixtfdi])\n+#define fixtfti_libfunc\t(libfunc_table[LTI_fixtfti])\n+\n+#define fixunssfsi_libfunc\t(libfunc_table[LTI_fixunssfsi])\n+#define fixunssfdi_libfunc\t(libfunc_table[LTI_fixunssfdi])\n+#define fixunssfti_libfunc\t(libfunc_table[LTI_fixunssfti])\n+\n+#define fixunsdfsi_libfunc\t(libfunc_table[LTI_fixunsdfsi])\n+#define fixunsdfdi_libfunc\t(libfunc_table[LTI_fixunsdfdi])\n+#define fixunsdfti_libfunc\t(libfunc_table[LTI_fixunsdfti])\n+\n+#define fixunsxfsi_libfunc\t(libfunc_table[LTI_fixunsxfsi])\n+#define fixunsxfdi_libfunc\t(libfunc_table[LTI_fixunsxfdi])\n+#define fixunsxfti_libfunc\t(libfunc_table[LTI_fixunsxfti])\n+\n+#define fixunstfsi_libfunc\t(libfunc_table[LTI_fixunstfsi])\n+#define fixunstfdi_libfunc\t(libfunc_table[LTI_fixunstfdi])\n+#define fixunstfti_libfunc\t(libfunc_table[LTI_fixunstfti])\n+\n+#define chkr_check_addr_libfunc\t(libfunc_table[LTI_chkr_check_addr])\n+#define chkr_set_right_libfunc\t(libfunc_table[LTI_chkr_set_right])\n+#define chkr_copy_bitmap_libfunc\t(libfunc_table[LTI_chkr_copy_bitmap])\n+#define chkr_check_exec_libfunc\t(libfunc_table[LTI_chkr_check_exec])\n+#define chkr_check_str_libfunc\t(libfunc_table[LTI_chkr_check_str])\n+\n+#define profile_function_entry_libfunc\t(libfunc_table[LTI_profile_function_entry])\n+#define profile_function_exit_libfunc\t(libfunc_table[LTI_profile_function_exit])\n \f\n typedef rtx (*rtxfun) PROTO ((rtx));\n "}, {"sha": "ae6a6ff999be59ac0d25c235e1d9ac1be7bd6208", "filename": "gcc/optabs.c", "status": "modified", "additions": 3, "deletions": 167, "changes": 170, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34220a12295cfd5f36a04a0342287048d7a875b7/gcc%2Foptabs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34220a12295cfd5f36a04a0342287048d7a875b7/gcc%2Foptabs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptabs.c?ref=34220a12295cfd5f36a04a0342287048d7a875b7", "patch": "@@ -45,50 +45,9 @@ Boston, MA 02111-1307, USA.  */\n \n    See expr.h for documentation of these optabs.  */\n \n-optab add_optab;\n-optab sub_optab;\n-optab smul_optab;\n-optab smul_highpart_optab;\n-optab umul_highpart_optab;\n-optab smul_widen_optab;\n-optab umul_widen_optab;\n-optab sdiv_optab;\n-optab sdivmod_optab;\n-optab udiv_optab;\n-optab udivmod_optab;\n-optab smod_optab;\n-optab umod_optab;\n-optab flodiv_optab;\n-optab ftrunc_optab;\n-optab and_optab;\n-optab ior_optab;\n-optab xor_optab;\n-optab ashl_optab;\n-optab lshr_optab;\n-optab ashr_optab;\n-optab rotl_optab;\n-optab rotr_optab;\n-optab smin_optab;\n-optab smax_optab;\n-optab umin_optab;\n-optab umax_optab;\n-\n-optab mov_optab;\n-optab movstrict_optab;\n-\n-optab neg_optab;\n-optab abs_optab;\n-optab one_cmpl_optab;\n-optab ffs_optab;\n-optab sqrt_optab;\n-optab sin_optab;\n-optab cos_optab;\n-\n-optab cmp_optab;\n-optab ucmp_optab;  /* Used only for libcalls for unsigned comparisons.  */\n-optab tst_optab;\n-\n-optab strlen_optab;\n+optab optab_table[OTI_MAX];\n+\n+rtx libfunc_table[LTI_MAX];\n \n /* Tables of patterns for extending one integer mode to another.  */\n enum insn_code extendtab[MAX_MACHINE_MODE][MAX_MACHINE_MODE][2];\n@@ -101,129 +60,6 @@ enum insn_code floattab[NUM_MACHINE_MODES][NUM_MACHINE_MODES][2];\n /* Contains the optab used for each rtx code.  */\n optab code_to_optab[NUM_RTX_CODE + 1];\n \n-/* SYMBOL_REF rtx's for the library functions that are called\n-   implicitly and not via optabs.  */\n-\n-rtx extendsfdf2_libfunc;\n-rtx extendsfxf2_libfunc;\n-rtx extendsftf2_libfunc;\n-rtx extenddfxf2_libfunc;\n-rtx extenddftf2_libfunc;\n-\n-rtx truncdfsf2_libfunc;\n-rtx truncxfsf2_libfunc;\n-rtx trunctfsf2_libfunc;\n-rtx truncxfdf2_libfunc;\n-rtx trunctfdf2_libfunc;\n-\n-rtx memcpy_libfunc;\n-rtx bcopy_libfunc;\n-rtx memcmp_libfunc;\n-rtx bcmp_libfunc;\n-rtx memset_libfunc;\n-rtx bzero_libfunc;\n-\n-rtx throw_libfunc;\n-rtx rethrow_libfunc;\n-rtx sjthrow_libfunc;\n-rtx sjpopnthrow_libfunc;\n-rtx terminate_libfunc;\n-rtx setjmp_libfunc;\n-rtx longjmp_libfunc;\n-rtx eh_rtime_match_libfunc;\n-\n-rtx eqhf2_libfunc;\n-rtx nehf2_libfunc;\n-rtx gthf2_libfunc;\n-rtx gehf2_libfunc;\n-rtx lthf2_libfunc;\n-rtx lehf2_libfunc;\n-\n-rtx eqsf2_libfunc;\n-rtx nesf2_libfunc;\n-rtx gtsf2_libfunc;\n-rtx gesf2_libfunc;\n-rtx ltsf2_libfunc;\n-rtx lesf2_libfunc;\n-\n-rtx eqdf2_libfunc;\n-rtx nedf2_libfunc;\n-rtx gtdf2_libfunc;\n-rtx gedf2_libfunc;\n-rtx ltdf2_libfunc;\n-rtx ledf2_libfunc;\n-\n-rtx eqxf2_libfunc;\n-rtx nexf2_libfunc;\n-rtx gtxf2_libfunc;\n-rtx gexf2_libfunc;\n-rtx ltxf2_libfunc;\n-rtx lexf2_libfunc;\n-\n-rtx eqtf2_libfunc;\n-rtx netf2_libfunc;\n-rtx gttf2_libfunc;\n-rtx getf2_libfunc;\n-rtx lttf2_libfunc;\n-rtx letf2_libfunc;\n-\n-rtx floatsisf_libfunc;\n-rtx floatdisf_libfunc;\n-rtx floattisf_libfunc;\n-\n-rtx floatsidf_libfunc;\n-rtx floatdidf_libfunc;\n-rtx floattidf_libfunc;\n-\n-rtx floatsixf_libfunc;\n-rtx floatdixf_libfunc;\n-rtx floattixf_libfunc;\n-\n-rtx floatsitf_libfunc;\n-rtx floatditf_libfunc;\n-rtx floattitf_libfunc;\n-\n-rtx fixsfsi_libfunc;\n-rtx fixsfdi_libfunc;\n-rtx fixsfti_libfunc;\n-\n-rtx fixdfsi_libfunc;\n-rtx fixdfdi_libfunc;\n-rtx fixdfti_libfunc;\n-\n-rtx fixxfsi_libfunc;\n-rtx fixxfdi_libfunc;\n-rtx fixxfti_libfunc;\n-\n-rtx fixtfsi_libfunc;\n-rtx fixtfdi_libfunc;\n-rtx fixtfti_libfunc;\n-\n-rtx fixunssfsi_libfunc;\n-rtx fixunssfdi_libfunc;\n-rtx fixunssfti_libfunc;\n-\n-rtx fixunsdfsi_libfunc;\n-rtx fixunsdfdi_libfunc;\n-rtx fixunsdfti_libfunc;\n-\n-rtx fixunsxfsi_libfunc;\n-rtx fixunsxfdi_libfunc;\n-rtx fixunsxfti_libfunc;\n-\n-rtx fixunstfsi_libfunc;\n-rtx fixunstfdi_libfunc;\n-rtx fixunstfti_libfunc;\n-\n-rtx chkr_check_addr_libfunc;\n-rtx chkr_set_right_libfunc;\n-rtx chkr_copy_bitmap_libfunc;\n-rtx chkr_check_exec_libfunc;\n-rtx chkr_check_str_libfunc;\n-\n-rtx profile_function_entry_libfunc;\n-rtx profile_function_exit_libfunc;\n-\n /* Indexed by the rtx-code for a conditional (eg. EQ, LT,...)\n    gives the gen_function to make a branch to test that condition.  */\n "}]}