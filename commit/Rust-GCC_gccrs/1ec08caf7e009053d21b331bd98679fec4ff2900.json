{"sha": "1ec08caf7e009053d21b331bd98679fec4ff2900", "node_id": "C_kwDOANBUbNoAKDFlYzA4Y2FmN2UwMDkwNTNkMjFiMzMxYmQ5ODY3OWZlYzRmZjI5MDA", "commit": {"author": {"name": "Paul A. Clarke", "email": "pc@us.ibm.com", "date": "2021-07-21T16:35:52Z"}, "committer": {"name": "Paul A. Clarke", "email": "pc@us.ibm.com", "date": "2021-10-12T01:26:15Z"}, "message": "rs6000: Simplify some SSE4.1 \"test\" intrinsics\n\nCopy some simple redirections from i386 <smmintrin.h>, for:\n- _mm_test_all_zeros\n- _mm_test_all_ones\n- _mm_test_mix_ones_zeros\n\n2021-10-11  Paul A. Clarke  <pc@us.ibm.com>\n\ngcc\n\t* config/rs6000/smmintrin.h (_mm_test_all_zeros,\n\t_mm_test_all_ones, _mm_test_mix_ones_zeros): Rewrite as macro.", "tree": {"sha": "2c398764a1ab33693fe557db5c6d33a3b3193e02", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2c398764a1ab33693fe557db5c6d33a3b3193e02"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1ec08caf7e009053d21b331bd98679fec4ff2900", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ec08caf7e009053d21b331bd98679fec4ff2900", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ec08caf7e009053d21b331bd98679fec4ff2900", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ec08caf7e009053d21b331bd98679fec4ff2900/comments", "author": {"login": "ThinkOpenly", "id": 12301795, "node_id": "MDQ6VXNlcjEyMzAxNzk1", "avatar_url": "https://avatars.githubusercontent.com/u/12301795?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ThinkOpenly", "html_url": "https://github.com/ThinkOpenly", "followers_url": "https://api.github.com/users/ThinkOpenly/followers", "following_url": "https://api.github.com/users/ThinkOpenly/following{/other_user}", "gists_url": "https://api.github.com/users/ThinkOpenly/gists{/gist_id}", "starred_url": "https://api.github.com/users/ThinkOpenly/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ThinkOpenly/subscriptions", "organizations_url": "https://api.github.com/users/ThinkOpenly/orgs", "repos_url": "https://api.github.com/users/ThinkOpenly/repos", "events_url": "https://api.github.com/users/ThinkOpenly/events{/privacy}", "received_events_url": "https://api.github.com/users/ThinkOpenly/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ThinkOpenly", "id": 12301795, "node_id": "MDQ6VXNlcjEyMzAxNzk1", "avatar_url": "https://avatars.githubusercontent.com/u/12301795?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ThinkOpenly", "html_url": "https://github.com/ThinkOpenly", "followers_url": "https://api.github.com/users/ThinkOpenly/followers", "following_url": "https://api.github.com/users/ThinkOpenly/following{/other_user}", "gists_url": "https://api.github.com/users/ThinkOpenly/gists{/gist_id}", "starred_url": "https://api.github.com/users/ThinkOpenly/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ThinkOpenly/subscriptions", "organizations_url": "https://api.github.com/users/ThinkOpenly/orgs", "repos_url": "https://api.github.com/users/ThinkOpenly/repos", "events_url": "https://api.github.com/users/ThinkOpenly/events{/privacy}", "received_events_url": "https://api.github.com/users/ThinkOpenly/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2be6f6d4980d0ca54c4f593a46ff82ef228a928d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2be6f6d4980d0ca54c4f593a46ff82ef228a928d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2be6f6d4980d0ca54c4f593a46ff82ef228a928d"}], "stats": {"total": 30, "additions": 4, "deletions": 26}, "files": [{"sha": "f935ab060abcd438927059dd7893a099fd39e34f", "filename": "gcc/config/rs6000/smmintrin.h", "status": "modified", "additions": 4, "deletions": 26, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ec08caf7e009053d21b331bd98679fec4ff2900/gcc%2Fconfig%2Frs6000%2Fsmmintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ec08caf7e009053d21b331bd98679fec4ff2900/gcc%2Fconfig%2Frs6000%2Fsmmintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fsmmintrin.h?ref=1ec08caf7e009053d21b331bd98679fec4ff2900", "patch": "@@ -203,34 +203,12 @@ _mm_testnzc_si128 (__m128i __A, __m128i __B)\n   return _mm_testz_si128 (__A, __B) == 0 && _mm_testc_si128 (__A, __B) == 0;\n }\n \n-__inline int\n-__attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n-_mm_test_all_zeros (__m128i __A, __m128i __mask)\n-{\n-  const __v16qu __zero = {0};\n-  return vec_all_eq (vec_and ((__v16qu) __A, (__v16qu) __mask), __zero);\n-}\n+#define _mm_test_all_zeros(M, V) _mm_testz_si128 ((M), (V))\n \n-__inline int\n-__attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n-_mm_test_all_ones (__m128i __A)\n-{\n-  const __v16qu __ones = vec_splats ((unsigned char) 0xff);\n-  return vec_all_eq ((__v16qu) __A, __ones);\n-}\n+#define _mm_test_all_ones(V) \\\n+  _mm_testc_si128 ((V), _mm_cmpeq_epi32 ((V), (V)))\n \n-__inline int\n-__attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n-_mm_test_mix_ones_zeros (__m128i __A, __m128i __mask)\n-{\n-  const __v16qu __zero = {0};\n-  const __v16qu __Amasked = vec_and ((__v16qu) __A, (__v16qu) __mask);\n-  const int any_ones = vec_any_ne (__Amasked, __zero);\n-  const __v16qu __notA = vec_nor ((__v16qu) __A, (__v16qu) __A);\n-  const __v16qu __notAmasked = vec_and ((__v16qu) __notA, (__v16qu) __mask);\n-  const int any_zeros = vec_any_ne (__notAmasked, __zero);\n-  return any_ones * any_zeros;\n-}\n+#define _mm_test_mix_ones_zeros(M, V) _mm_testnzc_si128 ((M), (V))\n \n __inline __m128d\n __attribute__ ((__gnu_inline__, __always_inline__, __artificial__))"}]}