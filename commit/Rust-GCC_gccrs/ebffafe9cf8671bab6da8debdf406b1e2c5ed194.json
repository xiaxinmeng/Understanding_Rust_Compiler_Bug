{"sha": "ebffafe9cf8671bab6da8debdf406b1e2c5ed194", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWJmZmFmZTljZjg2NzFiYWI2ZGE4ZGViZGY0MDZiMWUyYzVlZDE5NA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2021-05-10T21:14:43Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2021-05-10T21:24:20Z"}, "message": "Avoid spurious rebuild actions in ada/gen_il\n\nThis uses the same mechanism as for ada/snames and ada/sdefault to avoid\nspurious rebuild actions in the ada/gen_il directory.  This also avoids\ncopying some files into the generated directory, which is unnecessary.\n\ngcc/ada/\n\t* Make-generated.in (do_gen_il): Replace with...\n\t(ada/stamp-gen_il): ...this.  Do not copy files into generated/.", "tree": {"sha": "29bdb0ce2027cdfebc7e80f1763be41887678c0e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/29bdb0ce2027cdfebc7e80f1763be41887678c0e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ebffafe9cf8671bab6da8debdf406b1e2c5ed194", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ebffafe9cf8671bab6da8debdf406b1e2c5ed194", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ebffafe9cf8671bab6da8debdf406b1e2c5ed194", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ebffafe9cf8671bab6da8debdf406b1e2c5ed194/comments", "author": null, "committer": null, "parents": [{"sha": "ead233e6ff01c0bcaffce567ef656259fcc3530d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ead233e6ff01c0bcaffce567ef656259fcc3530d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ead233e6ff01c0bcaffce567ef656259fcc3530d"}], "stats": {"total": 49, "additions": 10, "deletions": 39}, "files": [{"sha": "26832beb589a5f873abb7321079bef839f19b5d8", "filename": "gcc/ada/Make-generated.in", "status": "modified", "additions": 10, "deletions": 39, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebffafe9cf8671bab6da8debdf406b1e2c5ed194/gcc%2Fada%2FMake-generated.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebffafe9cf8671bab6da8debdf406b1e2c5ed194/gcc%2Fada%2FMake-generated.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMake-generated.in?ref=ebffafe9cf8671bab6da8debdf406b1e2c5ed194", "patch": "@@ -15,10 +15,9 @@ fsrcdir := $(shell cd $(srcdir);${PWD_COMMAND})\n GEN_IL_INCLUDES = -I$(fsrcdir)/ada\n GEN_IL_FLAGS = -a -q -g -gnata -j0 -gnat2012 -gnatw.g -gnatyg -gnatU $(GEN_IL_INCLUDES)\n \n-.PHONY: do_gen_il\n-do_gen_il:\n+ada/seinfo_tables.ads ada/seinfo_tables.adb ada/sinfo.h ada/einfo.h ada/nmake.ads ada/nmake.adb ada/seinfo.ads ada/sinfo-nodes.ads ada/sinfo-nodes.adb ada/einfo-entities.ads ada/einfo-entities.adb: ada/stamp-gen_il ; @true\n+ada/stamp-gen_il: $(fsrcdir)/ada/gen_il* $(fsrcdir)/ada/libgnat/a-sto*.ad? $(fsrcdir)/ada/libgnat/a-stteou__bootstrap.ads\n \t$(MKDIR) ada/gen_il\n-\t$(MKDIR) ada/generated\n \t# Copy recent runtime files needed by gen_il that may not be available\n \t# in the base compiler.\n \t$(CP) -f $(fsrcdir)/ada/libgnat/a-sto*.ad? ada/gen_il\n@@ -27,53 +26,25 @@ do_gen_il:\n \t# ignore errors when running gen_il-main due to bootstrap\n \t# considerations\n \t-cd ada/gen_il ; ./gen_il-main\n-\n-ada/seinfo_tables.ads: do_gen_il\n \t$(fsrcdir)/../move-if-change ada/gen_il/seinfo_tables.ads ada/seinfo_tables.ads\n-\n-ada/seinfo_tables.adb: do_gen_il\n \t$(fsrcdir)/../move-if-change ada/gen_il/seinfo_tables.adb ada/seinfo_tables.adb\n-\n-# We need -gnatX to compile seinfo_tables, because it uses extensions. This\n-# target is not currently used when building gnat, because these extensions\n-# would cause bootstrapping with older compilers to fail. You can call it by\n-# hand, as a sanity check that these files are legal.\n-ada/seinfo_tables.o: ada/seinfo_tables.ads ada/seinfo_tables.adb\n-\tcd ada ; time gnatmake $(GEN_IL_INCLUDES) seinfo_tables.adb -gnatU -gnatX\n-\n-ada/sinfo.h: do_gen_il\n \t$(fsrcdir)/../move-if-change ada/gen_il/sinfo.h ada/sinfo.h\n-\n-ada/einfo.h: do_gen_il\n \t$(fsrcdir)/../move-if-change ada/gen_il/einfo.h ada/einfo.h\n-\n-ada/nmake.ads: do_gen_il\n \t$(fsrcdir)/../move-if-change ada/gen_il/nmake.ads ada/nmake.ads\n-\t$(CP) ada/nmake.ads ada/generated\n-\n-ada/nmake.adb: do_gen_il\n \t$(fsrcdir)/../move-if-change ada/gen_il/nmake.adb ada/nmake.adb\n-\t$(CP) ada/nmake.adb ada/generated\n-\n-ada/seinfo.ads: do_gen_il\n \t$(fsrcdir)/../move-if-change ada/gen_il/seinfo.ads ada/seinfo.ads\n-\t$(CP) ada/seinfo.ads ada/generated\n-\n-ada/sinfo-nodes.ads: do_gen_il\n \t$(fsrcdir)/../move-if-change ada/gen_il/sinfo-nodes.ads ada/sinfo-nodes.ads\n-\t$(CP) ada/sinfo-nodes.ads ada/generated\n-\n-ada/sinfo-nodes.adb: do_gen_il\n \t$(fsrcdir)/../move-if-change ada/gen_il/sinfo-nodes.adb ada/sinfo-nodes.adb\n-\t$(CP) ada/sinfo-nodes.adb ada/generated\n-\n-ada/einfo-entities.ads: do_gen_il\n \t$(fsrcdir)/../move-if-change ada/gen_il/einfo-entities.ads ada/einfo-entities.ads\n-\t$(CP) ada/einfo-entities.ads ada/generated\n-\n-ada/einfo-entities.adb: do_gen_il\n \t$(fsrcdir)/../move-if-change ada/gen_il/einfo-entities.adb ada/einfo-entities.adb\n-\t$(CP) ada/einfo-entities.adb ada/generated\n+\ttouch ada/stamp-gen_il\n+\n+# We need -gnatX to compile seinfo_tables, because it uses extensions. This\n+# target is not currently used when building gnat, because these extensions\n+# would cause bootstrapping with older compilers to fail. You can call it by\n+# hand, as a sanity check that these files are legal.\n+ada/seinfo_tables.o: ada/seinfo_tables.ads ada/seinfo_tables.adb\n+\tcd ada ; gnatmake $(GEN_IL_INCLUDES) seinfo_tables.adb -gnatU -gnatX\n \n ada/snames.h ada/snames.ads ada/snames.adb : ada/stamp-snames ; @true\n ada/stamp-snames : ada/snames.ads-tmpl ada/snames.adb-tmpl ada/snames.h-tmpl ada/xsnamest.adb ada/xutil.ads ada/xutil.adb"}]}