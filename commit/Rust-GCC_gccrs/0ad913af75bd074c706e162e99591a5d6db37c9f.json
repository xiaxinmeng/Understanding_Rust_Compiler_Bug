{"sha": "0ad913af75bd074c706e162e99591a5d6db37c9f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGFkOTEzYWY3NWJkMDc0YzcwNmUxNjJlOTk1OTFhNWQ2ZGIzN2M5Zg==", "commit": {"author": {"name": "J\"orn Rennecke", "email": "amylaar@cygnus.co.uk", "date": "2000-02-25T20:12:02Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2000-02-25T20:12:02Z"}, "message": "sh.c (calc_live_regs): Multiply value assigned to *COUNT_PTR by UNITS_PER_WORD.\n\n\t* sh.c (calc_live_regs): Multiply value assigned to *COUNT_PTR by\n\tUNITS_PER_WORD.  Change caller initial_elimination_offset.\n\t(rounded_frame_size): Take into account that argument pushed has\n\tchanged.  Fix TARGET_ALIGN_DOUBLE problem.\n\nFrom-SVN: r32152", "tree": {"sha": "d7775bea2212e7f6521be0ee9ca5ecb3a52462a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d7775bea2212e7f6521be0ee9ca5ecb3a52462a4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0ad913af75bd074c706e162e99591a5d6db37c9f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ad913af75bd074c706e162e99591a5d6db37c9f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ad913af75bd074c706e162e99591a5d6db37c9f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ad913af75bd074c706e162e99591a5d6db37c9f/comments", "author": null, "committer": null, "parents": [{"sha": "dc5de37072b855beba90a62056d96ce1bf422c7c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc5de37072b855beba90a62056d96ce1bf422c7c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc5de37072b855beba90a62056d96ce1bf422c7c"}], "stats": {"total": 18, "additions": 13, "deletions": 5}, "files": [{"sha": "83307d15c62e6d9d01f19d9636cb325fb0edf2aa", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ad913af75bd074c706e162e99591a5d6db37c9f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ad913af75bd074c706e162e99591a5d6db37c9f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0ad913af75bd074c706e162e99591a5d6db37c9f", "patch": "@@ -1,3 +1,10 @@\n+Fri Feb 25 20:02:35 2000  J\"orn Rennecke <amylaar@cygnus.co.uk>\n+\n+\t* sh.c (calc_live_regs): Multiply value assigned to *COUNT_PTR by\n+\tUNITS_PER_WORD.  Change caller initial_elimination_offset.\n+\t(rounded_frame_size): Take into account that argument pushed has\n+\tchanged.  Fix TARGET_ALIGN_DOUBLE problem.\n+\n 2000-02-25  Geoff Keating  <geoffk@cygnus.com>\n \n \t* haifa-sched.c (schedule_block): Explain the real reason"}, {"sha": "6f4566901c553b89a0723426a0f8f96cc4e03c1a", "filename": "gcc/config/sh/sh.c", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ad913af75bd074c706e162e99591a5d6db37c9f/gcc%2Fconfig%2Fsh%2Fsh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ad913af75bd074c706e162e99591a5d6db37c9f/gcc%2Fconfig%2Fsh%2Fsh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.c?ref=0ad913af75bd074c706e162e99591a5d6db37c9f", "patch": "@@ -3788,22 +3788,23 @@ calc_live_regs (count_ptr, live_regs_mask2)\n \t}\n     }\n \n-  *count_ptr = count;\n+  *count_ptr = count * UNITS_PER_WORD;\n   return live_regs_mask;\n }\n \n /* Code to generate prologue and epilogue sequences */\n \n+/* PUSHED is the number of bytes that are bing pushed on the\n+   stack for register saves.  Return the frame size, padded\n+   appropriately so that the stack stays properly aligned.  */\n static HOST_WIDE_INT\n rounded_frame_size (pushed)\n      int pushed;\n {\n   HOST_WIDE_INT size = get_frame_size ();\n   HOST_WIDE_INT align = STACK_BOUNDARY / BITS_PER_UNIT;\n \n-  if (TARGET_ALIGN_DOUBLE && pushed & 1)\n-    size += 4;\n-  return size + align - 1 & -align;\n+  return (size + pushed + align - 1 & -align) - pushed;\n }\n \n void\n@@ -4311,7 +4312,7 @@ initial_elimination_offset (from, to)\n   total_auto_space = rounded_frame_size (regs_saved);\n   target_flags = save_flags;\n \n-  total_saved_regs_space = (regs_saved) * 4;\n+  total_saved_regs_space = regs_saved;\n \n   if (from == ARG_POINTER_REGNUM && to == FRAME_POINTER_REGNUM)\n     return total_saved_regs_space + total_auto_space;"}]}