{"sha": "e3ac77ff51a54f0def757d05affde4ecf3f941e9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTNhYzc3ZmY1MWE1NGYwZGVmNzU3ZDA1YWZmZGU0ZWNmM2Y5NDFlOQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2009-04-17T10:29:26Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2009-04-17T10:29:26Z"}, "message": "re PR tree-optimization/39746 (Fail pr34513.c and pr34513.C at -O1 and above)\n\n2009-04-17  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/39746\n\t* tree-ssa-alias.c (ref_maybe_used_by_call_p_1): Remove\n\tspecial-casing for builtins and static variable use/def.\n\t(call_may_clobber_ref_p_1): Likewise.\n\nFrom-SVN: r146240", "tree": {"sha": "782952ba2e1e9c698d64bfd383ed0f45f0756c48", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/782952ba2e1e9c698d64bfd383ed0f45f0756c48"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e3ac77ff51a54f0def757d05affde4ecf3f941e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3ac77ff51a54f0def757d05affde4ecf3f941e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e3ac77ff51a54f0def757d05affde4ecf3f941e9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3ac77ff51a54f0def757d05affde4ecf3f941e9/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "36c735526202039b0dbc128cbf47fde38d39e21f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36c735526202039b0dbc128cbf47fde38d39e21f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/36c735526202039b0dbc128cbf47fde38d39e21f"}], "stats": {"total": 33, "additions": 15, "deletions": 18}, "files": [{"sha": "22f1aac0debad2600e7f3f54eae6bee182ea71b1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3ac77ff51a54f0def757d05affde4ecf3f941e9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3ac77ff51a54f0def757d05affde4ecf3f941e9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e3ac77ff51a54f0def757d05affde4ecf3f941e9", "patch": "@@ -1,3 +1,10 @@\n+2009-04-17  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/39746\n+\t* tree-ssa-alias.c (ref_maybe_used_by_call_p_1): Remove\n+\tspecial-casing for builtins and static variable use/def.\n+\t(call_may_clobber_ref_p_1): Likewise.\n+\n 2009-04-16  Ian Lance Taylor  <iant@google.com>\n \n \t* df.h: Include \"timevar.h\"."}, {"sha": "5207bc962f1d8ac9466230af76615ea66425ea9f", "filename": "gcc/tree-ssa-alias.c", "status": "modified", "additions": 8, "deletions": 18, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3ac77ff51a54f0def757d05affde4ecf3f941e9/gcc%2Ftree-ssa-alias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3ac77ff51a54f0def757d05affde4ecf3f941e9/gcc%2Ftree-ssa-alias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-alias.c?ref=e3ac77ff51a54f0def757d05affde4ecf3f941e9", "patch": "@@ -737,7 +737,7 @@ refs_may_alias_p (tree ref1, tree ref2)\n static bool\n ref_maybe_used_by_call_p_1 (gimple call, tree ref)\n {\n-  tree base, fndecl;\n+  tree base;\n   unsigned i;\n   int flags = gimple_call_flags (call);\n \n@@ -758,14 +758,8 @@ ref_maybe_used_by_call_p_1 (gimple call, tree ref)\n      cannot possibly use it.  */\n   if (DECL_P (base)\n       && !may_be_aliased (base)\n-      /* But local statics can be used through recursion!  */\n-      && (!is_global_var (base)\n-\t  /* But not via builtins.\n-\t     ???  We just assume that this is true if we are not a\n-\t     builtin function ourself.  */\n-\t  || (!DECL_BUILT_IN (cfun->decl)\n-\t      && (fndecl = gimple_call_fndecl (call))\n-\t      && DECL_BUILT_IN (fndecl))))\n+      /* But local statics can be used through recursion.  */\n+      && !is_global_var (base))\n     goto process_args;\n \n   /* Check if base is a global static variable that is not read\n@@ -865,7 +859,7 @@ ref_maybe_used_by_stmt_p (gimple stmt, tree ref)\n static bool\n call_may_clobber_ref_p_1 (gimple call, tree ref)\n {\n-  tree fndecl, base;\n+  tree base;\n \n   /* If the call is pure or const it cannot clobber anything.  */\n   if (gimple_call_flags (call)\n@@ -884,15 +878,11 @@ call_may_clobber_ref_p_1 (gimple call, tree ref)\n      cannot possibly clobber it.  */\n   if (DECL_P (base)\n       && !may_be_aliased (base)\n-      /* But local non-readonly statics can be modified through recursion!  */\n+      /* But local non-readonly statics can be modified through recursion\n+         or the call may implement a threading barrier which we must\n+\t treat as may-def.  */\n       && (TREE_READONLY (base)\n-\t  || !is_global_var (base)\n-\t  /* But not via builtins.\n-\t     ???  We just assume that this is true if we are not a\n-\t     builtin function ourself.  */\n-\t  || (!DECL_BUILT_IN (cfun->decl)\n-\t      && (fndecl = gimple_call_fndecl (call))\n-\t      && DECL_BUILT_IN (fndecl))))\n+\t  || !is_global_var (base)))\n     return false;\n \n   /* Check if base is a global static variable that is not written"}]}