{"sha": "06a5fb60eb53ef297454f58db61d3374d538f515", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDZhNWZiNjBlYjUzZWYyOTc0NTRmNThkYjYxZDMzNzRkNTM4ZjUxNQ==", "commit": {"author": {"name": "Gary Dismukes", "email": "dismukes@adacore.com", "date": "2021-05-08T21:49:04Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-07-06T14:46:54Z"}, "message": "[Ada] Removal of various ??? comments plus related code changes\n\ngcc/ada/\n\n\t* checks.adb: Remove calls of Set_Do_Tag_Check (N, False).\n\t* einfo.ads: Remove hanging unneeded ??? comment (\"this real description\n\twas clobbered\").\n\t* exp_util.ads (Insert_Actions_After): Remove ??? from spec comment.\n\t* gen_il-fields.ads (Opt_Field_Enum): Remove literals\n\tDo_Accessibility_Check and Do_Tag_Check.\n\t* gen_il-gen-gen_nodes.adb: Remove all calls to Sm for\n\tDo_Accessibility_Check and Do_Tag_Check.\n\t* sem_type.ads (Is_Subtype_Of): Remove obsolete ???\n\tcomment (function is not limited to scalar subtypes).\n\t* sem_util.ads (Is_Local_Variable_Reference): Revise comment to\n\tmention out-mode parameters as well, and remove ???.\n\t(Propagate_Concurrent_Flags): Minor reformatting.\n\t(Propagate_Invariant_Attributes): Typo fix.\n\t(Propagate_Predicate_Attributes): Indicate what is propagated\n\tand remove ??? comment.\n\t* sem_util.adb (Cannot_Raise_Constraint_Error): Remove unneeded\n\ttest of Do_Tag_Check.\n\t(Is_Local_Variable_Reference): Extend function to testing for\n\tformals of mode out as well.\n\t* sinfo.ads: Remove ??? comment about flag\n\tConvert_To_Return_False indicating that the flag is obsolete (in\n\tfact it's used). Remove references to Do_Accessibility_Check and\n\tDo_Tag_Check (and the two associated ??? comments), as these\n\tflags are unneeded.\n\t* sinfo-cn.adb (Change_Conversion_To_Unchecked): Remove call of\n\tSet_Do_Tag_Check (N, False).\n\t* targparm.ads (Support_Atomic_Primitives_On_Target): Remove ???\n\tcomment, plus minor reformatting.", "tree": {"sha": "b3a9105dd39742b93d6da40444b9f0a77f8d6a77", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b3a9105dd39742b93d6da40444b9f0a77f8d6a77"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/06a5fb60eb53ef297454f58db61d3374d538f515", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06a5fb60eb53ef297454f58db61d3374d538f515", "html_url": "https://github.com/Rust-GCC/gccrs/commit/06a5fb60eb53ef297454f58db61d3374d538f515", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06a5fb60eb53ef297454f58db61d3374d538f515/comments", "author": {"login": "dismukes", "id": 50880541, "node_id": "MDQ6VXNlcjUwODgwNTQx", "avatar_url": "https://avatars.githubusercontent.com/u/50880541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dismukes", "html_url": "https://github.com/dismukes", "followers_url": "https://api.github.com/users/dismukes/followers", "following_url": "https://api.github.com/users/dismukes/following{/other_user}", "gists_url": "https://api.github.com/users/dismukes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dismukes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dismukes/subscriptions", "organizations_url": "https://api.github.com/users/dismukes/orgs", "repos_url": "https://api.github.com/users/dismukes/repos", "events_url": "https://api.github.com/users/dismukes/events{/privacy}", "received_events_url": "https://api.github.com/users/dismukes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c7959e489dd324fb6c4266c01c2dd6afd1fabb34", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7959e489dd324fb6c4266c01c2dd6afd1fabb34", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c7959e489dd324fb6c4266c01c2dd6afd1fabb34"}], "stats": {"total": 75, "additions": 19, "deletions": 56}, "files": [{"sha": "d3d78524969856dcc8e68424baceb3aa671a3b0e", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a5fb60eb53ef297454f58db61d3374d538f515/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a5fb60eb53ef297454f58db61d3374d538f515/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=06a5fb60eb53ef297454f58db61d3374d538f515", "patch": "@@ -9766,9 +9766,6 @@ package body Checks is\n             when N_Attribute_Reference =>\n                Set_Do_Overflow_Check (N, False);\n \n-            when N_Function_Call =>\n-               Set_Do_Tag_Check (N, False);\n-\n             when N_Op =>\n                Set_Do_Overflow_Check (N, False);\n \n@@ -9804,7 +9801,6 @@ package body Checks is\n \n             when N_Type_Conversion =>\n                Set_Do_Length_Check   (N, False);\n-               Set_Do_Tag_Check      (N, False);\n                Set_Do_Overflow_Check (N, False);\n \n             when others =>"}, {"sha": "2feef7a0bf76bdaabe09ffdeb6f605e888f24af9", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a5fb60eb53ef297454f58db61d3374d538f515/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a5fb60eb53ef297454f58db61d3374d538f515/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=06a5fb60eb53ef297454f58db61d3374d538f515", "patch": "@@ -1931,8 +1931,6 @@ package Einfo is\n --       that clients should generally not test this flag directly, but instead\n --       use function Has_Unreferenced.\n \n---  ??? this real description was clobbered\n-\n --    Has_Pragma_Unreferenced_Objects\n --       Defined in all entities. Set if a valid pragma Unused applies to an\n --       entity, indicating that warnings should be given if the entity is"}, {"sha": "3be0166896a6647127b7df6d6bccd1008fbad2ce", "filename": "gcc/ada/exp_util.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a5fb60eb53ef297454f58db61d3374d538f515/gcc%2Fada%2Fexp_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a5fb60eb53ef297454f58db61d3374d538f515/gcc%2Fada%2Fexp_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.ads?ref=06a5fb60eb53ef297454f58db61d3374d538f515", "patch": "@@ -162,7 +162,7 @@ package Exp_Util is\n    --\n    --  Implementation limitation: Assoc_Node must be a statement. We can\n    --  generalize to expressions if there is a need but this is tricky to\n-   --  implement because of short-circuits (among other things).???\n+   --  implement because of short-circuits (among other things).\n \n    procedure Insert_Declaration (N : Node_Id; Decl : Node_Id);\n    --  N must be a subexpression (Nkind in N_Subexpr). This is similar to"}, {"sha": "e2592eedcc9d28f8ec0bb702e008f0296bb579ba", "filename": "gcc/ada/gen_il-fields.ads", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a5fb60eb53ef297454f58db61d3374d538f515/gcc%2Fada%2Fgen_il-fields.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a5fb60eb53ef297454f58db61d3374d538f515/gcc%2Fada%2Fgen_il-fields.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgen_il-fields.ads?ref=06a5fb60eb53ef297454f58db61d3374d538f515", "patch": "@@ -150,14 +150,12 @@ package Gen_IL.Fields is\n       Discrete_Subtype_Definitions,\n       Discriminant_Specifications,\n       Discriminant_Type,\n-      Do_Accessibility_Check,\n       Do_Discriminant_Check,\n       Do_Division_Check,\n       Do_Length_Check,\n       Do_Overflow_Check,\n       Do_Range_Check,\n       Do_Storage_Check,\n-      Do_Tag_Check,\n       Elaborate_All_Desirable,\n       Elaborate_All_Present,\n       Elaborate_Desirable,"}, {"sha": "ef7dfa4c19081a4c7eb955bfee7953f644d76f5d", "filename": "gcc/ada/gen_il-gen-gen_nodes.adb", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a5fb60eb53ef297454f58db61d3374d538f515/gcc%2Fada%2Fgen_il-gen-gen_nodes.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a5fb60eb53ef297454f58db61d3374d538f515/gcc%2Fada%2Fgen_il-gen-gen_nodes.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgen_il-gen-gen_nodes.adb?ref=06a5fb60eb53ef297454f58db61d3374d538f515", "patch": "@@ -390,7 +390,6 @@ begin -- Gen_IL.Gen.Gen_Nodes\n \n    Ab (N_Subprogram_Call, N_Subexpr,\n        (Sm (Controlling_Argument, Node_Id),\n-        Sm (Do_Tag_Check, Flag),\n         Sm (First_Named_Actual, Node_Id),\n         Sm (Is_Elaboration_Checks_OK_Node, Flag),\n         Sm (Is_Elaboration_Warnings_OK_Node, Flag),\n@@ -553,7 +552,6 @@ begin -- Gen_IL.Gen.Gen_Nodes\n         Sm (Do_Discriminant_Check, Flag),\n         Sm (Do_Length_Check, Flag),\n         Sm (Do_Overflow_Check, Flag),\n-        Sm (Do_Tag_Check, Flag),\n         Sm (Float_Truncate, Flag),\n         Sm (Rounded_Result, Flag)));\n \n@@ -949,7 +947,6 @@ begin -- Gen_IL.Gen.Gen_Nodes\n         Sm (Componentwise_Assignment, Flag),\n         Sm (Do_Discriminant_Check, Flag),\n         Sm (Do_Length_Check, Flag),\n-        Sm (Do_Tag_Check, Flag),\n         Sm (Forwards_OK, Flag),\n         Sm (Has_Target_Names, Flag),\n         Sm (Is_Elaboration_Checks_OK_Node, Flag),\n@@ -1056,7 +1053,6 @@ begin -- Gen_IL.Gen.Gen_Nodes\n        (Sy (Expression, Node_Id, Default_Empty),\n         Sm (By_Ref, Flag),\n         Sm (Comes_From_Extended_Return_Statement, Flag),\n-        Sm (Do_Tag_Check, Flag),\n         Sm (Procedure_To_Call, Node_Id),\n         Sm (Return_Statement_Entity, Node_Id),\n         Sm (Storage_Pool, Node_Id)));\n@@ -1065,7 +1061,6 @@ begin -- Gen_IL.Gen.Gen_Nodes\n        (Sy (Return_Object_Declarations, List_Id),\n         Sy (Handled_Statement_Sequence, Node_Id, Default_Empty),\n         Sm (By_Ref, Flag),\n-        Sm (Do_Tag_Check, Flag),\n         Sm (Procedure_To_Call, Node_Id),\n         Sm (Return_Statement_Entity, Node_Id),\n         Sm (Storage_Pool, Node_Id)));\n@@ -1487,7 +1482,6 @@ begin -- Gen_IL.Gen.Gen_Nodes\n         Sy (Parameter_Type, Node_Id),\n         Sy (Expression, Node_Id, Default_Empty),\n         Sm (Default_Expression, Node_Id),\n-        Sm (Do_Accessibility_Check, Flag),\n         Sm (More_Ids, Flag),\n         Sm (Prev_Ids, Flag)));\n "}, {"sha": "018c2837fd7e0a8d1cbc4be8355921e5df9448b1", "filename": "gcc/ada/sem_type.ads", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a5fb60eb53ef297454f58db61d3374d538f515/gcc%2Fada%2Fsem_type.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a5fb60eb53ef297454f58db61d3374d538f515/gcc%2Fada%2Fsem_type.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_type.ads?ref=06a5fb60eb53ef297454f58db61d3374d538f515", "patch": "@@ -243,8 +243,7 @@ package Sem_Type is\n    --  in the signature of an inherited operation must carry the derived type.\n \n    function Is_Subtype_Of (T1 : Entity_Id; T2 : Entity_Id) return Boolean;\n-   --  Checks whether T1 is any subtype of T2 directly or indirectly. Applies\n-   --  only to scalar subtypes???\n+   --  Checks whether T1 is any subtype of T2 directly or indirectly\n \n    function Operator_Matches_Spec (Op, New_S : Entity_Id) return Boolean;\n    --  Used to resolve subprograms renaming operators, and calls to user"}, {"sha": "cfb3293c3d0b313ecb8352e3d099dc3f5b9df541", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a5fb60eb53ef297454f58db61d3374d538f515/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a5fb60eb53ef297454f58db61d3374d538f515/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=06a5fb60eb53ef297454f58db61d3374d538f515", "patch": "@@ -3087,7 +3087,6 @@ package body Sem_Util is\n             when N_Type_Conversion =>\n                if Do_Overflow_Check (Expr)\n                  or else Do_Length_Check (Expr)\n-                 or else Do_Tag_Check (Expr)\n                then\n                   return False;\n                else\n@@ -18097,7 +18096,9 @@ package body Sem_Util is\n             Ent : constant Entity_Id := Entity (Expr);\n             Sub : constant Entity_Id := Enclosing_Subprogram (Ent);\n          begin\n-            if Ekind (Ent) not in E_Variable | E_In_Out_Parameter then\n+            if Ekind (Ent)\n+              not in E_Variable | E_In_Out_Parameter | E_Out_Parameter\n+            then\n                return False;\n             else\n                return Present (Sub) and then Sub = Current_Subprogram;"}, {"sha": "bacf8b424599e1e4f49f26a7024395ec4a437b78", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 8, "deletions": 9, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a5fb60eb53ef297454f58db61d3374d538f515/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a5fb60eb53ef297454f58db61d3374d538f515/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=06a5fb60eb53ef297454f58db61d3374d538f515", "patch": "@@ -2113,9 +2113,8 @@ package Sem_Util is\n    --  limited view must be treated in the same way.\n \n    function Is_Local_Variable_Reference (Expr : Node_Id) return Boolean;\n-   --  Determines whether Expr is a reference to a variable or IN OUT mode\n-   --  parameter of the current enclosing subprogram.\n-   --  Why are OUT parameters not considered here ???\n+   --  Determines whether Expr is a reference to a variable or formal parameter\n+   --  of mode OUT or IN OUT of the current enclosing subprogram.\n \n    function Is_Master (N : Node_Id) return Boolean;\n    --  Determine if the given node N constitutes a finalization master\n@@ -2902,9 +2901,9 @@ package Sem_Util is\n    procedure Propagate_Concurrent_Flags\n      (Typ      : Entity_Id;\n       Comp_Typ : Entity_Id);\n-   --  Set Has_Task, Has_Protected and Has_Timing_Event on Typ when the flags\n-   --  are set on Comp_Typ. This follows the definition of these flags which\n-   --  are set (recursively) on any composite type which has a component marked\n+   --  Set Has_Task, Has_Protected, and Has_Timing_Event on Typ when the flags\n+   --  are set on Comp_Typ. This follows the definition of these flags, which\n+   --  are set (recursively) on any composite type that has a component marked\n    --  by one of these flags. This procedure can only set flags for Typ, and\n    --  never clear them. Comp_Typ is the type of a component or a parent.\n \n@@ -2917,14 +2916,14 @@ package Sem_Util is\n    procedure Propagate_Invariant_Attributes\n      (Typ      : Entity_Id;\n       From_Typ : Entity_Id);\n-   --  Inherit all invariant-related attributes form type From_Typ. Typ is the\n+   --  Inherit all invariant-related attributes from type From_Typ. Typ is the\n    --  destination type.\n \n    procedure Propagate_Predicate_Attributes\n      (Typ      : Entity_Id;\n       From_Typ : Entity_Id);\n-   --  Inherit some predicate-related attributes form type From_Typ. Typ is the\n-   --  destination type. Probably to be completed with more attributes???\n+   --  Inherit predicate functions and Has_Predicates flag from type From_Typ.\n+   --  Typ is the destination type.\n \n    procedure Record_Possible_Part_Of_Reference\n      (Var_Id : Entity_Id;"}, {"sha": "c676d47527eebeffb38b2fdeb061cf5f15ed16db", "filename": "gcc/ada/sinfo-cn.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a5fb60eb53ef297454f58db61d3374d538f515/gcc%2Fada%2Fsinfo-cn.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a5fb60eb53ef297454f58db61d3374d538f515/gcc%2Fada%2Fsinfo-cn.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo-cn.adb?ref=06a5fb60eb53ef297454f58db61d3374d538f515", "patch": "@@ -56,7 +56,6 @@ package body Sinfo.CN is\n    procedure Change_Conversion_To_Unchecked (N : Node_Id) is\n    begin\n       Set_Do_Overflow_Check (N, False);\n-      Set_Do_Tag_Check (N, False);\n       Set_Do_Length_Check (N, False);\n       Mutate_Nkind (N, N_Unchecked_Type_Conversion);\n    end Change_Conversion_To_Unchecked;"}, {"sha": "8f23f7dfe1a2a4fa5d76650f362763c556370613", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 1, "deletions": 22, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a5fb60eb53ef297454f58db61d3374d538f515/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a5fb60eb53ef297454f58db61d3374d538f515/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=06a5fb60eb53ef297454f58db61d3374d538f515", "patch": "@@ -689,11 +689,9 @@ package Sinfo is\n \n    --  The following flag fields appear in various nodes:\n \n-   --    Do_Accessibility_Check\n    --    Do_Discriminant_Check\n    --    Do_Length_Check\n    --    Do_Storage_Check\n-   --    Do_Tag_Check\n \n    --  These flags are used in some specific cases by the front end, either\n    --  during semantic analysis or during expansion, and cannot be expected\n@@ -1012,7 +1010,7 @@ package Sinfo is\n    --    Present in N_Raise_Expression nodes that appear in the body of the\n    --    special predicateM function used to test a predicate in the context\n    --    of a membership test, where raise expression results in returning a\n-   --    value of False rather than raising an exception.???obsolete flag\n+   --    value of False rather than raising an exception.\n \n    --  Corresponding_Aspect\n    --    Present in N_Pragma node. Used to point back to the source aspect from\n@@ -1096,11 +1094,6 @@ package Sinfo is\n    --    discriminant checking functions are constructed. The purpose is to\n    --    avoid attempting to set these functions more than once.\n \n-   --  Do_Accessibility_Check\n-   --    This flag is set on N_Parameter_Specification nodes to indicate\n-   --    that an accessibility check is required for the parameter. It is\n-   --    not yet decided who takes care of this check???.\n-\n    --  Do_Discriminant_Check\n    --    This flag is set on N_Selected_Component nodes to indicate that a\n    --    discriminant check is required using the discriminant check routine\n@@ -1185,13 +1178,6 @@ package Sinfo is\n    --    to the runtime routine. The N_Subprogram_Body case is handled by the\n    --    backend, and all the semantics does is set the flag.\n \n-   --  Do_Tag_Check\n-   --    This flag is set on an N_Assignment_Statement, N_Function_Call,\n-   --    N_Procedure_Call_Statement, N_Type_Conversion,\n-   --    N_Simple_Return_Statement, or N_Extended_Return_Statement\n-   --    node to indicate that the tag check can be suppressed. It is not\n-   --    yet decided how this flag is used???.\n-\n    --  Elaborate_Present\n    --    This flag is set in the N_With_Clause node to indicate that pragma\n    --    Elaborate pragma appears for the with'ed units.\n@@ -4740,7 +4726,6 @@ package Sinfo is\n       --  Do_Discriminant_Check\n       --  Do_Length_Check\n       --  Float_Truncate\n-      --  Do_Tag_Check\n       --  Conversion_OK\n       --  Do_Overflow_Check\n       --  Rounded_Result\n@@ -4913,7 +4898,6 @@ package Sinfo is\n       --  No_Ctrl_Actions\n       --  Has_Target_Names\n       --  Is_Elaboration_Code\n-      --  Do_Tag_Check\n       --  Componentwise_Assignment\n       --  Suppress_Assignment_Checks\n \n@@ -5436,7 +5420,6 @@ package Sinfo is\n       --  Null_Exclusion_Present\n       --  Parameter_Type subtype mark or access definition\n       --  Expression (set to Empty if no default expression present)\n-      --  Do_Accessibility_Check\n       --  More_Ids (set to False if no more identifiers in list)\n       --  Prev_Ids (set to False if no previous identifiers in list)\n       --  Default_Expression\n@@ -5505,7 +5488,6 @@ package Sinfo is\n       --  Is_SPARK_Mode_On_Node\n       --  Is_Elaboration_Warnings_OK_Node\n       --  No_Elaboration_Check\n-      --  Do_Tag_Check\n       --  Is_Known_Guaranteed_ABE\n       --  plus fields for expression\n \n@@ -5539,7 +5521,6 @@ package Sinfo is\n       --  Is_Elaboration_Warnings_OK_Node\n       --  No_Elaboration_Check\n       --  Is_Expanded_Build_In_Place_Call\n-      --  Do_Tag_Check\n       --  No_Side_Effect_Removal\n       --  Is_Known_Guaranteed_ABE\n       --  plus fields for expression\n@@ -5602,7 +5583,6 @@ package Sinfo is\n       --  Expression (set to Empty if no expression present)\n       --  Storage_Pool\n       --  Procedure_To_Call\n-      --  Do_Tag_Check\n       --  By_Ref\n       --  Comes_From_Extended_Return_Statement\n \n@@ -5618,7 +5598,6 @@ package Sinfo is\n       --  Handled_Statement_Sequence (set to Empty if not present)\n       --  Storage_Pool\n       --  Procedure_To_Call\n-      --  Do_Tag_Check\n       --  By_Ref\n \n       --  Note: Return_Statement_Entity points to an E_Return_Statement."}, {"sha": "302247fbeac116eef6047ed7cf1039d6a20bfa6c", "filename": "gcc/ada/targparm.ads", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06a5fb60eb53ef297454f58db61d3374d538f515/gcc%2Fada%2Ftargparm.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06a5fb60eb53ef297454f58db61d3374d538f515/gcc%2Fada%2Ftargparm.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftargparm.ads?ref=06a5fb60eb53ef297454f58db61d3374d538f515", "patch": "@@ -365,12 +365,12 @@ package Targparm is\n    --  this flag is False, and the use of aggregates is not permitted.\n \n    Support_Atomic_Primitives_On_Target : Boolean := False;\n-   --  If this flag is True, then the back-end support GCC built-in atomic\n-   --  operations for memory model such as atomic load or atomic compare\n+   --  If this flag is True, then the back end supports GCC built-in atomic\n+   --  operations for memory model, such as atomic load or atomic compare\n    --  exchange (see the GCC manual for more information). If the flag is\n-   --  False, then the back-end doesn't provide this support. Note this flag is\n-   --  set to True only if the target supports all atomic primitives up to 64\n-   --  bits. ??? To be modified.\n+   --  False, then the back end doesn't provide this support. Note that this\n+   --  flag is set to True only if the target supports all atomic primitives\n+   --  up to 64 bits.\n \n    Support_Composite_Assign_On_Target : Boolean := True;\n    --  The assignment of composite objects other than small records and"}]}