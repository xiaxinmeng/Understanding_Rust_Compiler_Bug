{"sha": "c68c56f7272a81e363a632eda204055d8c8c7319", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzY4YzU2ZjcyNzJhODFlMzYzYTYzMmVkYTIwNDA1NWQ4YzhjNzMxOQ==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@markmitchell.com", "date": "1998-07-16T23:38:43Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "1998-07-16T23:38:43Z"}, "message": "semantics.c (finish_object_call_expr): Revert previous change.\n\n1998-07-16  Mark Mitchell  <mark@markmitchell.com>\n\t* semantics.c (finish_object_call_expr): Revert previous change.\n\t* call.c (build_new_method_call): Likewise.  Instead, convert\n\tTYPE_DECLs to IDENTIFIERs here, in the presence of templates.\n\nFrom-SVN: r21240", "tree": {"sha": "fed587701549fb9eb8a3d48c3397855465c64b09", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fed587701549fb9eb8a3d48c3397855465c64b09"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c68c56f7272a81e363a632eda204055d8c8c7319", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c68c56f7272a81e363a632eda204055d8c8c7319", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c68c56f7272a81e363a632eda204055d8c8c7319", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c68c56f7272a81e363a632eda204055d8c8c7319/comments", "author": null, "committer": null, "parents": [{"sha": "b5044593c9c5e815f5bbfd482ef0bb64396d90c9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5044593c9c5e815f5bbfd482ef0bb64396d90c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b5044593c9c5e815f5bbfd482ef0bb64396d90c9"}], "stats": {"total": 33, "additions": 27, "deletions": 6}, "files": [{"sha": "62d2753af9a8552afdba5623235430bcdc161522", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c68c56f7272a81e363a632eda204055d8c8c7319/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c68c56f7272a81e363a632eda204055d8c8c7319/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=c68c56f7272a81e363a632eda204055d8c8c7319", "patch": "@@ -1,3 +1,9 @@\n+1998-07-16  Mark Mitchell  <mark@markmitchell.com>\n+\n+\t* semantics.c (finish_object_call_expr): Revert previous change.\n+\t* call.c (build_new_method_call): Likewise.  Instead, convert\n+\tTYPE_DECLs to IDENTIFIERs here, in the presence of templates.\n+\n 1998-07-16  Jason Merrill  <jason@yorick.cygnus.com>\n \n \t* decl.c (qualify_lookup): Handle templates."}, {"sha": "3e11a741fa5ccdf5329dd2c75d00bfe56cf54a97", "filename": "gcc/cp/call.c", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c68c56f7272a81e363a632eda204055d8c8c7319/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c68c56f7272a81e363a632eda204055d8c8c7319/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=c68c56f7272a81e363a632eda204055d8c8c7319", "patch": "@@ -3552,12 +3552,6 @@ build_new_method_call (instance, name, args, basetype_path, flags)\n       template_only = 1;\n     }\n \n-  if (TREE_CODE (name) == TYPE_DECL)\n-    {\n-      cp_error (\"calling type `%T' like a method\", name);\n-      return error_mark_node;\n-    }\n-    \n   /* If there is an extra argument for controlling virtual bases,\n      remove it for error reporting.  */\n   if (flags & LOOKUP_HAS_IN_CHARGE)"}, {"sha": "3459d1a80fcbdceb538b4be3e47a78036cd587a9", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c68c56f7272a81e363a632eda204055d8c8c7319/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c68c56f7272a81e363a632eda204055d8c8c7319/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=c68c56f7272a81e363a632eda204055d8c8c7319", "patch": "@@ -922,6 +922,25 @@ finish_object_call_expr (fn, object, args)\n   tree real_fn = build_component_ref (object, fn, NULL_TREE, 1);\n   return finish_call_expr (real_fn, args);\n #else\n+  if (TREE_CODE (fn) == TYPE_DECL)\n+    {\n+      if (processing_template_decl)\n+\t/* This can happen on code like:\n+\n+\t   class X;\n+\t   template <class T> void f(T t) {\n+\t     t.X();\n+\t   }  \n+\n+\t   We just grab the underlying IDENTIFIER.  */\n+\tfn = DECL_NAME (fn);\n+      else\n+\t{\n+\t  cp_error (\"calling type `%T' like a method\", fn);\n+\t  return error_mark_node;\n+\t}\n+    }\n+\n   return build_method_call (object, fn, args, NULL_TREE, LOOKUP_NORMAL);\n #endif\n }"}, {"sha": "b9836bbcc5a897ff6abb18cf924dfa3ba093d660", "filename": "gcc/testsuite/g++.old-deja/g++.pt/call1.C", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c68c56f7272a81e363a632eda204055d8c8c7319/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fcall1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c68c56f7272a81e363a632eda204055d8c8c7319/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fcall1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fcall1.C?ref=c68c56f7272a81e363a632eda204055d8c8c7319", "patch": "@@ -11,3 +11,5 @@ for_each(const Field& p, IsCompressed, C)\n {\n   return p.IsCompressed();\n }\n+\n+template bool for_each<int>(const Field& p, IsCompressed, int);"}]}