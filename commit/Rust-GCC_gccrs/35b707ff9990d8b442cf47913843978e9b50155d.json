{"sha": "35b707ff9990d8b442cf47913843978e9b50155d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzViNzA3ZmY5OTkwZDhiNDQyY2Y0NzkxMzg0Mzk3OGU5YjUwMTU1ZA==", "commit": {"author": {"name": "Vladimir Makarov", "email": "vmakarov@redhat.com", "date": "2016-01-21T16:01:22Z"}, "committer": {"name": "Vladimir Makarov", "email": "vmakarov@gcc.gnu.org", "date": "2016-01-21T16:01:22Z"}, "message": "re PR rtl-optimization/68990 (wrong code at -O3 on x86_64-pc-linux-gnu in 32-bit mode.)\n\n2016-01-21  Vladimir Makarov  <vmakarov@redhat.com>\n\n\tPR rtl-optimization/68990\n\t* lra-coalesce.c (lra_coalesce): Invalidate value for the result\n\tpseudo instead of inheritance ones.\n\n2016-01-21  Vladimir Makarov  <vmakarov@redhat.com>\n\n\tPR rtl-optimization/68990\n\t* gcc.target/i386/pr68990: New.\n\nFrom-SVN: r232679", "tree": {"sha": "b3055c030a57134e331d72ec24e809597ecd596f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b3055c030a57134e331d72ec24e809597ecd596f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/35b707ff9990d8b442cf47913843978e9b50155d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35b707ff9990d8b442cf47913843978e9b50155d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35b707ff9990d8b442cf47913843978e9b50155d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35b707ff9990d8b442cf47913843978e9b50155d/comments", "author": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "975b10daea816d562546cfa22b403699177aeb4e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/975b10daea816d562546cfa22b403699177aeb4e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/975b10daea816d562546cfa22b403699177aeb4e"}], "stats": {"total": 85, "additions": 70, "deletions": 15}, "files": [{"sha": "d15a87dcca6976de8298ac50def11a27dcb985fa", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35b707ff9990d8b442cf47913843978e9b50155d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35b707ff9990d8b442cf47913843978e9b50155d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=35b707ff9990d8b442cf47913843978e9b50155d", "patch": "@@ -1,3 +1,9 @@\n+2016-01-21  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\tPR rtl-optimization/68990\n+\t* lra-coalesce.c (lra_coalesce): Invalidate value for the result\n+\tpseudo instead of inheritance ones.\n+\n 2016-01-21  Bernd Enlinger  <bernd.edlinger@hotmail.de>\n \t    Nick Clifton  <nickc@redhat.com>\n "}, {"sha": "178ed3ff5cbfbb57c104a33134732ccc7c626d30", "filename": "gcc/lra-coalesce.c", "status": "modified", "additions": 10, "deletions": 15, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35b707ff9990d8b442cf47913843978e9b50155d/gcc%2Flra-coalesce.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35b707ff9990d8b442cf47913843978e9b50155d/gcc%2Flra-coalesce.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra-coalesce.c?ref=35b707ff9990d8b442cf47913843978e9b50155d", "patch": "@@ -224,13 +224,10 @@ lra_coalesce (void)\n   rtx_insn *mv, *insn, *next, **sorted_moves;\n   rtx set;\n   int i, mv_num, sregno, dregno;\n-  unsigned int regno;\n   int coalesced_moves;\n   int max_regno = max_reg_num ();\n   bitmap_head involved_insns_bitmap;\n-  bitmap_head result_pseudo_vals_bitmap;\n-  bitmap_iterator bi;\n-\n+  \n   timevar_push (TV_LRA_COALESCE);\n \n   if (lra_dump_file != NULL)\n@@ -327,7 +324,7 @@ lra_coalesce (void)\n     }\n   /* If we have situation after inheritance pass:\n \n-     r1 <- ...  insn originally setting p1\n+     r1 <- p1   insn originally setting p1\n      i1 <- r1   setting inheritance i1 from reload r1\n        ...\n      ... <- ... p2 ... dead p2\n@@ -339,20 +336,18 @@ lra_coalesce (void)\n      And we are coalescing p1 and p2 using p1.  In this case i1 and p1\n      should have different values, otherwise they can get the same\n      hard reg and this is wrong for insn using p2 before coalescing.\n-     So invalidate such inheritance pseudo values.  */\n-  bitmap_initialize (&result_pseudo_vals_bitmap, &reg_obstack);\n-  EXECUTE_IF_SET_IN_BITMAP (&coalesced_pseudos_bitmap, 0, regno, bi)\n-    bitmap_set_bit (&result_pseudo_vals_bitmap,\n-\t\t    lra_reg_info[first_coalesced_pseudo[regno]].val);\n-  EXECUTE_IF_SET_IN_BITMAP (&lra_inheritance_pseudos, 0, regno, bi)\n-    if (bitmap_bit_p (&result_pseudo_vals_bitmap, lra_reg_info[regno].val))\n+     The situation even can be more complicated when new reload\n+     pseudos occur after the inheriatnce.  So invalidate the result\n+     pseudos.  */\n+  for (i = 0; i < max_regno; i++)\n+    if (first_coalesced_pseudo[i] == i\n+\t&& first_coalesced_pseudo[i] != next_coalesced_pseudo[i])\n       {\n-\tlra_set_regno_unique_value (regno);\n+\tlra_set_regno_unique_value (i);\n \tif (lra_dump_file != NULL)\n \t  fprintf (lra_dump_file,\n-\t\t   \"\t Make unique value for inheritance r%d\\n\", regno);\n+\t\t   \"\t Make unique value for coalescing result r%d\\n\", i);\n       }\n-  bitmap_clear (&result_pseudo_vals_bitmap);\n   bitmap_clear (&used_pseudos_bitmap);\n   bitmap_clear (&involved_insns_bitmap);\n   bitmap_clear (&coalesced_pseudos_bitmap);"}, {"sha": "843ccac194dfe8c7f3a7578a42289df38d5dbc6d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35b707ff9990d8b442cf47913843978e9b50155d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35b707ff9990d8b442cf47913843978e9b50155d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=35b707ff9990d8b442cf47913843978e9b50155d", "patch": "@@ -1,3 +1,8 @@\n+2016-01-21  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\tPR rtl-optimization/68990\n+\t* gcc.target/i386/pr68990: New.\n+\n 2016-01-21  Nick Clifton  <nickc@redhat.com>\n \n \tPR target/69129"}, {"sha": "4c3ca0331d53f4bac24993beca2848bf24fb9888", "filename": "gcc/testsuite/gcc.target/i386/pr68990.c", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35b707ff9990d8b442cf47913843978e9b50155d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr68990.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35b707ff9990d8b442cf47913843978e9b50155d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr68990.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr68990.c?ref=35b707ff9990d8b442cf47913843978e9b50155d", "patch": "@@ -0,0 +1,49 @@\n+/* { dg-do compile { target { ia32 } } } */\n+/* { dg-options \"-O3 -march=x86-64\" } */\n+/* { dg-final { scan-assembler-not \"cmpl\\[ \\t]+(\\[%a-z]+), \\\\1\" } } */\n+\n+short a;\n+int b = 1, f;\n+char c, e = 1;\n+long long d;\n+\n+static short\n+foo ()\n+{\n+  unsigned g, h = 0;\n+  int i = 0 || d * (b | e);\n+  char j = a << i, l = a;\n+  short k;\n+  int m = -b;\n+  if (m < b)\n+    {\n+      k = m = b;\n+      g = (k || l) / (b / e);\n+      if (b)\n+\t__builtin_printf (\"foo=%lld\\n\", (long long) a);\n+    }\n+  a = b = m;\n+  if (j || e)\n+    {\n+      h = g;\n+      i = m;\n+      g = j * k / (i - d);\n+      if (m)\n+\tb = j && b;\n+      e = b * (h & d) || g;\n+    }\n+  b = i;\n+  char n = e || h | d;\n+  e = i < d & k / n;\n+  return f;\n+}\n+\n+int\n+main ()\n+{\n+  if (foo ())\n+    if (c)\n+    lab:\n+      goto lab;\n+  return 0;\n+}"}]}