{"sha": "6fc00b41e764219e2c88d8892d7c701c0d292a17", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmZjMDBiNDFlNzY0MjE5ZTJjODhkODg5MmQ3YzcwMWMwZDI5MmExNw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-05-06T08:23:15Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-05-06T11:36:46Z"}, "message": "middle-end/94964 - avoid EH loop entry with CP_SIMPLE_PREHEADERS\n\nLoop optimizers expect to be able to insert on the preheader\nedge w/o splitting it thus avoid ending up with a preheader\nthat enters the loop via an EH edge (or an abnormal edge).\n\n2020-05-06  Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/94964\n\t* cfgloopmanip.c (create_preheader): Require non-complex\n\tpreheader edge for CP_SIMPLE_PREHEADERS.", "tree": {"sha": "248cd6f3960cfb19096bf29f14a1e4a9b1645ec3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/248cd6f3960cfb19096bf29f14a1e4a9b1645ec3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6fc00b41e764219e2c88d8892d7c701c0d292a17", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6fc00b41e764219e2c88d8892d7c701c0d292a17", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6fc00b41e764219e2c88d8892d7c701c0d292a17", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6fc00b41e764219e2c88d8892d7c701c0d292a17/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "371905d12259c180efb9b1f1b5716e969feb60f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/371905d12259c180efb9b1f1b5716e969feb60f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/371905d12259c180efb9b1f1b5716e969feb60f9"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "ae6dd069578d6cada7099208b1010d7736fd5b85", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fc00b41e764219e2c88d8892d7c701c0d292a17/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fc00b41e764219e2c88d8892d7c701c0d292a17/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6fc00b41e764219e2c88d8892d7c701c0d292a17", "patch": "@@ -1,3 +1,9 @@\n+2020-05-06  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/94964\n+\t* cfgloopmanip.c (create_preheader): Require non-complex\n+\tpreheader edge for CP_SIMPLE_PREHEADERS.\n+\n 2020-05-06  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/94963"}, {"sha": "73134a20e3376b5d41ceb2820fb4827d3a9d5fac", "filename": "gcc/cfgloopmanip.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fc00b41e764219e2c88d8892d7c701c0d292a17/gcc%2Fcfgloopmanip.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fc00b41e764219e2c88d8892d7c701c0d292a17/gcc%2Fcfgloopmanip.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgloopmanip.c?ref=6fc00b41e764219e2c88d8892d7c701c0d292a17", "patch": "@@ -1506,9 +1506,10 @@ create_preheader (class loop *loop, int flags)\n       else\n         {\n           /* If we want simple preheaders, also force the preheader to have\n-             just a single successor.  */\n+\t     just a single successor and a normal edge.  */\n           if ((flags & CP_SIMPLE_PREHEADERS)\n-              && !single_succ_p (single_entry->src))\n+\t      && ((single_entry->flags & EDGE_COMPLEX)\n+\t\t  || !single_succ_p (single_entry->src)))\n             need_forwarder_block = true;\n           /* If we want fallthru preheaders, also create forwarder block when\n              preheader ends with a jump or has predecessors from loop.  */"}]}