{"sha": "af94453d356ddfd1087c505442e6c74e7b8974f7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWY5NDQ1M2QzNTZkZGZkMTA4N2M1MDU0NDJlNmM3NGU3Yjg5NzRmNw==", "commit": {"author": {"name": "Christian Bruel", "email": "chrbr@gcc.gnu.org", "date": "2009-09-15T13:15:51Z"}, "committer": {"name": "Christian Bruel", "email": "chrbr@gcc.gnu.org", "date": "2009-09-15T13:15:51Z"}, "message": "Update REG_DEAD notes\n\nFrom-SVN: r151720", "tree": {"sha": "1d5dc639c5f8dc99a27155272a568a39dae7b788", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1d5dc639c5f8dc99a27155272a568a39dae7b788"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/af94453d356ddfd1087c505442e6c74e7b8974f7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af94453d356ddfd1087c505442e6c74e7b8974f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af94453d356ddfd1087c505442e6c74e7b8974f7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af94453d356ddfd1087c505442e6c74e7b8974f7/comments", "author": null, "committer": null, "parents": [{"sha": "384ed84dc00e62af7bb69497fd9c34225edf9b55", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/384ed84dc00e62af7bb69497fd9c34225edf9b55", "html_url": "https://github.com/Rust-GCC/gccrs/commit/384ed84dc00e62af7bb69497fd9c34225edf9b55"}], "stats": {"total": 15, "additions": 15, "deletions": 0}, "files": [{"sha": "68d08749e6ea81f136482139e4754156dd040b80", "filename": "gcc/regrename.c", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af94453d356ddfd1087c505442e6c74e7b8974f7/gcc%2Fregrename.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af94453d356ddfd1087c505442e6c74e7b8974f7/gcc%2Fregrename.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fregrename.c?ref=af94453d356ddfd1087c505442e6c74e7b8974f7", "patch": "@@ -376,11 +376,26 @@ do_replace (struct du_chain *chain, int reg)\n \tINSN_VAR_LOCATION_LOC (chain->insn) = gen_rtx_UNKNOWN_VAR_LOC ();\n       else\n \t{\n+\t  rtx note;\n+\n \t  *chain->loc = gen_raw_REG (GET_MODE (*chain->loc), reg);\n \t  if (regno >= FIRST_PSEUDO_REGISTER)\n \t    ORIGINAL_REGNO (*chain->loc) = regno;\n \t  REG_ATTRS (*chain->loc) = attr;\n \t  REG_POINTER (*chain->loc) = reg_ptr;\n+\n+\t  for (note = REG_NOTES (chain->insn); note; note = XEXP (note, 1))\n+\t    {\n+\t      if (REG_NOTE_KIND (note) == REG_DEAD \n+\t\t  || REG_NOTE_KIND (note) == REG_UNUSED)\n+\t\t{\n+\t\t  rtx reg = XEXP (note, 0);\n+\t\t  gcc_assert (HARD_REGISTER_P (reg));\n+\t\t  \n+\t\t  if (REGNO (reg) == base_regno) \n+\t\t    XEXP (note, 0) = *chain->loc;\n+\t\t}\n+\t    }\n \t}\n \n       df_insn_rescan (chain->insn);"}]}