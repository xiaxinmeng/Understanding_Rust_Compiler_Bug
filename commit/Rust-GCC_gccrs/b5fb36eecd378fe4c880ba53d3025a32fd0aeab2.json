{"sha": "b5fb36eecd378fe4c880ba53d3025a32fd0aeab2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjVmYjM2ZWVjZDM3OGZlNGM4ODBiYTUzZDMwMjVhMzJmZDBhZWFiMg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2008-09-16T22:15:49Z"}, "committer": {"name": "Adam Nemet", "email": "nemet@gcc.gnu.org", "date": "2008-09-16T22:15:49Z"}, "message": "re PR rtl-optimization/37483 (Segfault in noce_try_sign_mask (ifcvt.c): b_unconditional)\n\n\tPR rtl-optimization/37483\n\t* ifcvt.c (noce_try_sign_mask): Use if_info->test_bb instead of\n\tif_info->insn_b's bb as argument to optimize_bb_for_speed_p.\n\tRearrange code to better match the original comment.  Check\n\tt_unconditional first.  Improve comment.\n\ntestsuite/\n\t* gcc.c-torture/compile/pr37483.c: New test.\n\t* gcc.c-torture/compile/pr37395.c: New test.\n\nCo-Authored-By: Adam Nemet <anemet@caviumnetworks.com>\n\nFrom-SVN: r140403", "tree": {"sha": "024503185c3eb32872ed5a1b409891d4ebb4300c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/024503185c3eb32872ed5a1b409891d4ebb4300c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b5fb36eecd378fe4c880ba53d3025a32fd0aeab2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5fb36eecd378fe4c880ba53d3025a32fd0aeab2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b5fb36eecd378fe4c880ba53d3025a32fd0aeab2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5fb36eecd378fe4c880ba53d3025a32fd0aeab2/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8c50b4950276e667112e1999018ab792a9e24134", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c50b4950276e667112e1999018ab792a9e24134", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c50b4950276e667112e1999018ab792a9e24134"}], "stats": {"total": 62, "additions": 51, "deletions": 11}, "files": [{"sha": "e6238c23a97ce4c8853c133884c840b1583aeabf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5fb36eecd378fe4c880ba53d3025a32fd0aeab2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5fb36eecd378fe4c880ba53d3025a32fd0aeab2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b5fb36eecd378fe4c880ba53d3025a32fd0aeab2", "patch": "@@ -1,3 +1,12 @@\n+2008-09-16  Jakub Jelinek  <jakub@redhat.com>\n+\t    Adam Nemet  <anemet@caviumnetworks.com>\n+\n+\tPR rtl-optimization/37483\n+\t* ifcvt.c (noce_try_sign_mask): Use if_info->test_bb instead of\n+\tif_info->insn_b's bb as argument to optimize_bb_for_speed_p.\n+\tRearrange code to better match the original comment.  Check\n+\tt_unconditional first.  Improve comment.\n+\n 2008-09-16  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c/37529"}, {"sha": "341174ab02fe08773491efc30a00d41a0a679b12", "filename": "gcc/ifcvt.c", "status": "modified", "additions": 14, "deletions": 11, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5fb36eecd378fe4c880ba53d3025a32fd0aeab2/gcc%2Fifcvt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5fb36eecd378fe4c880ba53d3025a32fd0aeab2/gcc%2Fifcvt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fifcvt.c?ref=b5fb36eecd378fe4c880ba53d3025a32fd0aeab2", "patch": "@@ -1869,7 +1869,7 @@ noce_try_sign_mask (struct noce_if_info *if_info)\n   rtx cond, t, m, c, seq;\n   enum machine_mode mode;\n   enum rtx_code code;\n-  bool b_unconditional;\n+  bool t_unconditional;\n \n   cond = if_info->cond;\n   code = GET_CODE (cond);\n@@ -1898,16 +1898,19 @@ noce_try_sign_mask (struct noce_if_info *if_info)\n   if (GET_MODE (m) != mode)\n     return FALSE;\n \n-  /* This is only profitable if T is cheap, or T is unconditionally\n-     executed/evaluated in the original insn sequence.  The latter\n-     happens if INSN_B was taken from TEST_BB, or if there was no\n-     INSN_B which can happen for e.g. conditional stores to memory.  */\n-  b_unconditional = (if_info->insn_b == NULL_RTX\n-\t\t     || BLOCK_FOR_INSN (if_info->insn_b) == if_info->test_bb);\n-  if (rtx_cost (t, SET, optimize_bb_for_speed_p (BLOCK_FOR_INSN (if_info->insn_b)))\n-      >= COSTS_N_INSNS (2)\n-      && (!b_unconditional\n-          || t != if_info->b))\n+  /* This is only profitable if T is unconditionally executed/evaluated in the\n+     original insn sequence or T is cheap.  The former happens if B is the\n+     non-zero (T) value and if INSN_B was taken from TEST_BB, or there was no\n+     INSN_B which can happen for e.g. conditional stores to memory.  For the\n+     cost computation use the block TEST_BB where the evaluation will end up\n+     after the transformation.  */\n+  t_unconditional =\n+    (t == if_info->b\n+     && (if_info->insn_b == NULL_RTX\n+\t || BLOCK_FOR_INSN (if_info->insn_b) == if_info->test_bb));\n+  if (!(t_unconditional\n+\t|| (rtx_cost (t, SET, optimize_bb_for_speed_p (if_info->test_bb))\n+\t    < COSTS_N_INSNS (2))))\n     return FALSE;\n \n   start_sequence ();"}, {"sha": "f1763d47fc7b113b45d2414183cd55e432a53272", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5fb36eecd378fe4c880ba53d3025a32fd0aeab2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5fb36eecd378fe4c880ba53d3025a32fd0aeab2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b5fb36eecd378fe4c880ba53d3025a32fd0aeab2", "patch": "@@ -1,3 +1,10 @@\n+2008-09-16  Jakub Jelinek  <jakub@redhat.com>\n+\t    Adam Nemet  <anemet@caviumnetworks.com>\n+\n+\tPR rtl-optimization/37483\n+\t* gcc.c-torture/compile/pr37483.c: New test.\n+\t* gcc.c-torture/compile/pr37395.c: New test.\n+\n 2008-09-16  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c/37529"}, {"sha": "e15b1543f3e2ca0c945d00d304361259dcecada7", "filename": "gcc/testsuite/gcc.c-torture/compile/pr37395.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5fb36eecd378fe4c880ba53d3025a32fd0aeab2/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr37395.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5fb36eecd378fe4c880ba53d3025a32fd0aeab2/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr37395.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr37395.c?ref=b5fb36eecd378fe4c880ba53d3025a32fd0aeab2", "patch": "@@ -0,0 +1,11 @@\n+/* PR target/37395 */\n+\n+int\n+f (int j)\n+{\n+  int i;\n+  asm volatile (\"\" : \"=r\"(i));\n+  if (i >= 0)\n+    j = 0;\n+  return j;\n+}"}, {"sha": "b09489250954f15f5bfc568442b0937dfc2c5474", "filename": "gcc/testsuite/gcc.c-torture/compile/pr37483.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5fb36eecd378fe4c880ba53d3025a32fd0aeab2/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr37483.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5fb36eecd378fe4c880ba53d3025a32fd0aeab2/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr37483.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr37483.c?ref=b5fb36eecd378fe4c880ba53d3025a32fd0aeab2", "patch": "@@ -0,0 +1,10 @@\n+/* PR target/37483 */\n+\n+unsigned long long\n+foo (unsigned count, int i)\n+{\n+  unsigned long long value;\n+  if (i == 0)\n+    value = (value & 0xFFFFFFFF) >> count;\n+  return value;\n+}"}]}