{"sha": "ef0a4b673817ad7e866e00a5078b9410411e1c49", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWYwYTRiNjczODE3YWQ3ZTg2NmUwMGE1MDc4Yjk0MTA0MTFlMWM0OQ==", "commit": {"author": {"name": "Paul Brook", "email": "paul@codesourcery.com", "date": "2008-06-12T17:29:47Z"}, "committer": {"name": "Paul Brook", "email": "pbrook@gcc.gnu.org", "date": "2008-06-12T17:29:47Z"}, "message": "longlong.h (__arm__): Define count_leading_zeros.\n\n2008-06-12  Paul Brook  <paul@codesourcery.com>\n\n\tgcc/\n\t* longlong.h (__arm__): Define count_leading_zeros.\n\t* config/arm/lib1funcs.asm (xxh, xxl, yyh, yyl): Define.\n\t(clzsi2, clzdi2): New functions.\n\t* config/arm/bpabi-v6m.S (xxh, xxl, yyh, yyl): Remove.\n\t* config/arm/bpabi.S (xxh, xxl, yyh, yyl): Remove.\n\t* config/arm/t-strongarm-elf (LIB1ASMFUNCS): Ditto.\n\t* config/arm/t-vxworks (LIB1ASMFUNCS): Ditto.\n\t* config/arm/t-pe (LIB1ASMFUNCS): Ditto.\n\t* config/arm/t-arm-elf (LIB1ASMFUNCS): Ditto.\n\t* config/arm/t-arm-coff (LIB1ASMFUNCS): Ditto.\n\t* config/arm/t-linux (LIB1ASMFUNCS): Ditto.\n\t* config/arm/t-symbian (LIB1ASMFUNCS): Ditto.\n\t* config/arm/t-wince-pe (LIB1ASMFUNCS): Ditto.\n\nFrom-SVN: r136718", "tree": {"sha": "c52d53e9558cca6d8b8c3880662f0c8b089d6883", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c52d53e9558cca6d8b8c3880662f0c8b089d6883"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ef0a4b673817ad7e866e00a5078b9410411e1c49", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef0a4b673817ad7e866e00a5078b9410411e1c49", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef0a4b673817ad7e866e00a5078b9410411e1c49", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef0a4b673817ad7e866e00a5078b9410411e1c49/comments", "author": null, "committer": null, "parents": [{"sha": "01b79d1165836671e8d2688f32b6f9eb568f80c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01b79d1165836671e8d2688f32b6f9eb568f80c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/01b79d1165836671e8d2688f32b6f9eb568f80c3"}], "stats": {"total": 191, "additions": 158, "deletions": 33}, "files": [{"sha": "cf53434d5791f35e0eae5ad8c95e741d06a945f4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef0a4b673817ad7e866e00a5078b9410411e1c49/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef0a4b673817ad7e866e00a5078b9410411e1c49/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ef0a4b673817ad7e866e00a5078b9410411e1c49", "patch": "@@ -1,3 +1,19 @@\n+2008-06-12  Paul Brook  <paul@codesourcery.com>\n+\n+\t* longlong.h (__arm__): Define count_leading_zeros.\n+\t* config/arm/lib1funcs.asm (xxh, xxl, yyh, yyl): Define.\n+\t(clzsi2, clzdi2): New functions.\n+\t* config/arm/bpabi-v6m.S (xxh, xxl, yyh, yyl): Remove.\n+\t* config/arm/bpabi.S (xxh, xxl, yyh, yyl): Remove.\n+\t* config/arm/t-strongarm-elf (LIB1ASMFUNCS): Ditto.\n+\t* config/arm/t-vxworks (LIB1ASMFUNCS): Ditto.\n+\t* config/arm/t-pe (LIB1ASMFUNCS): Ditto.\n+\t* config/arm/t-arm-elf (LIB1ASMFUNCS): Ditto.\n+\t* config/arm/t-arm-coff (LIB1ASMFUNCS): Ditto.\n+\t* config/arm/t-linux (LIB1ASMFUNCS): Ditto.\n+\t* config/arm/t-symbian (LIB1ASMFUNCS): Ditto.\n+\t* config/arm/t-wince-pe (LIB1ASMFUNCS): Ditto.\n+\n 2008-06-12  Kazu Hirata  <kazu@codesourcery.com>\n \n \t* config/m68k/m68k.c (m68k_tune_flags): New."}, {"sha": "3a20227499bd1210a10f009b306685fdece25a5a", "filename": "gcc/config/arm/bpabi-v6m.S", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef0a4b673817ad7e866e00a5078b9410411e1c49/gcc%2Fconfig%2Farm%2Fbpabi-v6m.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef0a4b673817ad7e866e00a5078b9410411e1c49/gcc%2Fconfig%2Farm%2Fbpabi-v6m.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fbpabi-v6m.S?ref=ef0a4b673817ad7e866e00a5078b9410411e1c49", "patch": "@@ -27,18 +27,6 @@\n    the Free Software Foundation, 51 Franklin Street, Fifth Floor,\n    Boston, MA 02110-1301, USA.  */\n \n-#ifdef __ARMEB__\n-#define xxh r0\n-#define xxl r1\n-#define yyh r2\n-#define yyl r3\n-#else\n-#define xxh r1\n-#define xxl r0\n-#define yyh r3\n-#define yyl r2\n-#endif\t\n-\t\n #ifdef L_aeabi_lcmp\n \n FUNC_START aeabi_lcmp"}, {"sha": "82ca140a6bc6e039b0630a7318e467382a43506a", "filename": "gcc/config/arm/bpabi.S", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef0a4b673817ad7e866e00a5078b9410411e1c49/gcc%2Fconfig%2Farm%2Fbpabi.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef0a4b673817ad7e866e00a5078b9410411e1c49/gcc%2Fconfig%2Farm%2Fbpabi.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fbpabi.S?ref=ef0a4b673817ad7e866e00a5078b9410411e1c49", "patch": "@@ -27,18 +27,6 @@\n    the Free Software Foundation, 51 Franklin Street, Fifth Floor,\n    Boston, MA 02110-1301, USA.  */\n \n-#ifdef __ARMEB__\n-#define xxh r0\n-#define xxl r1\n-#define yyh r2\n-#define yyl r3\n-#else\n-#define xxh r1\n-#define xxl r0\n-#define yyh r3\n-#define yyl r2\n-#endif\t\n-\t\n #ifdef L_aeabi_lcmp\n \n ARM_FUNC_START aeabi_lcmp"}, {"sha": "fe315bcb69b48d76876bc1728c693ad6d5d0be88", "filename": "gcc/config/arm/lib1funcs.asm", "status": "modified", "additions": 126, "deletions": 0, "changes": 126, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef0a4b673817ad7e866e00a5078b9410411e1c49/gcc%2Fconfig%2Farm%2Flib1funcs.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef0a4b673817ad7e866e00a5078b9410411e1c49/gcc%2Fconfig%2Farm%2Flib1funcs.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Flib1funcs.asm?ref=ef0a4b673817ad7e866e00a5078b9410411e1c49", "patch": "@@ -406,6 +406,18 @@ SYM (__\\name):\n .endm\n #endif\n \n+#ifdef __ARMEB__\n+#define xxh r0\n+#define xxl r1\n+#define yyh r2\n+#define yyl r3\n+#else\n+#define xxh r1\n+#define xxl r0\n+#define yyh r3\n+#define yyl r2\n+#endif\t\n+\n #ifdef __thumb__\n /* Register aliases.  */\n \n@@ -1212,6 +1224,120 @@ LSYM(Lover12):\n \n #endif /* __symbian__ */\n \n+#if ((__ARM_ARCH__ > 5) && !defined(__ARM_ARCH_6M__)) \\\n+    || defined(__ARM_ARCH_5E__) || defined(__ARM_ARCH_5TE__) \\\n+    || defined(__ARM_ARCH_5TEJ__)\n+#define HAVE_ARM_CLZ 1\n+#endif\n+\n+#ifdef L_clzsi2\n+#if defined(__ARM_ARCH_6M__)\n+FUNC_START clzsi2\n+\tmov\tr1, #28\n+\tmov\tr3, #1\n+\tlsl\tr3, r3, #16\n+\tcmp\tr0, r3 /* 0x10000 */\n+\tbcc\t2f\n+\tlsr\tr0, r0, #16\n+\tsub\tr1, r1, #16\n+2:\tlsr\tr3, r3, #8\n+\tcmp\tr0, r3 /* #0x100 */\n+\tbcc\t2f\n+\tlsr\tr0, r0, #8\n+\tsub\tr1, r1, #8\n+2:\tlsr\tr3, r3, #4\n+\tcmp\tr0, r3 /* #0x10 */\n+\tbcc\t2f\n+\tlsr\tr0, r0, #4\n+\tsub\tr1, r1, #4\n+2:\tadr\tr2, 1f\n+\tldrb\tr0, [r2, r0]\n+\tadd\tr0, r0, r1\n+\tbx lr\n+.align 2\n+1:\n+.byte 4, 3, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0\n+\tFUNC_END clzsi2\n+#else\n+ARM_FUNC_START clzsi2\n+# if defined(HAVE_ARM_CLZ)\n+\tclz\tr0, r0\n+\tRET\n+# else\n+\tmov\tr1, #28\n+\tcmp\tr0, #0x10000\n+\tdo_it\tcs, t\n+\tmovcs\tr0, r0, lsr #16\n+\tsubcs\tr1, r1, #16\n+\tcmp\tr0, #0x100\n+\tdo_it\tcs, t\n+\tmovcs\tr0, r0, lsr #8\n+\tsubcs\tr1, r1, #8\n+\tcmp\tr0, #0x10\n+\tdo_it\tcs, t\n+\tmovcs\tr0, r0, lsr #4\n+\tsubcs\tr1, r1, #4\n+\tadr\tr2, 1f\n+\tldrb\tr0, [r2, r0]\n+\tadd\tr0, r0, r1\n+\tbx lr\n+.align 2\n+1:\n+.byte 4, 3, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0\n+# endif /* !HAVE_ARM_CLZ */\n+\tFUNC_END clzsi2\n+#endif\n+#endif /* L_clzsi2 */\n+\n+#ifdef L_clzdi2\n+#if !defined(HAVE_ARM_CLZ)\n+\n+# if defined(__ARM_ARCH_6M__)\n+FUNC_START clzdi2\n+\tpush\t{r4, lr}\n+# else\n+ARM_FUNC_START clzdi2\n+\tdo_push\t{r4, lr}\n+# endif\n+\tcmp\txxh, #0\n+\tbne\t1f\n+# ifdef __ARMEB__\n+\tmov\tr0, xxl\n+\tbl\t__clzsi2\n+\tadd\tr0, r0, #32\n+\tb 2f\n+1:\n+\tbl\t__clzsi2\n+# else\n+\tbl\t__clzsi2\n+\tadd\tr0, r0, #32\n+\tb 2f\n+1:\n+\tmov\tr0, xxh\n+\tbl\t__clzsi2\n+# endif\n+2:\n+# if defined(__ARM_ARCH_6M__)\n+\tpop\t{r4, pc}\n+# else\n+\tRETLDM\tr4\n+# endif\n+\tFUNC_END clzdi2\n+\n+#else /* HAVE_ARM_CLZ */\n+\n+ARM_FUNC_START clzdi2\n+\tcmp\txxh, #0\n+\tdo_it\teq, et\n+\tclzeq\tr0, xxl\n+\tclzne\tr0, xxh\n+\taddeq\tr0, r0, #32\n+\tRET\n+\tFUNC_END clzdi2\n+\n+#endif\n+#endif /* L_clzdi2 */\n+\n /* ------------------------------------------------------------------------ */\n /* These next two sections are here despite the fact that they contain Thumb \n    assembler because their presence allows interworked code to be linked even"}, {"sha": "4fa1929bb4b1fea054bd6cfa3a300eb105e94235", "filename": "gcc/config/arm/t-arm-coff", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef0a4b673817ad7e866e00a5078b9410411e1c49/gcc%2Fconfig%2Farm%2Ft-arm-coff", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef0a4b673817ad7e866e00a5078b9410411e1c49/gcc%2Fconfig%2Farm%2Ft-arm-coff", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ft-arm-coff?ref=ef0a4b673817ad7e866e00a5078b9410411e1c49", "patch": "@@ -1,5 +1,5 @@\n LIB1ASMSRC = arm/lib1funcs.asm\n-LIB1ASMFUNCS = _udivsi3 _divsi3 _umodsi3 _modsi3 _dvmd_tls _bb_init_func _call_via_rX _interwork_call_via_rX\n+LIB1ASMFUNCS = _udivsi3 _divsi3 _umodsi3 _modsi3 _dvmd_tls _bb_init_func _call_via_rX _interwork_call_via_rX clzsi2 _clzdi2\n \n # We want fine grained libraries, so use the new code to build the\n # floating point emulation libraries."}, {"sha": "33462939994ed0303084efcc7a6d8c9445447bb1", "filename": "gcc/config/arm/t-arm-elf", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef0a4b673817ad7e866e00a5078b9410411e1c49/gcc%2Fconfig%2Farm%2Ft-arm-elf", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef0a4b673817ad7e866e00a5078b9410411e1c49/gcc%2Fconfig%2Farm%2Ft-arm-elf", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ft-arm-elf?ref=ef0a4b673817ad7e866e00a5078b9410411e1c49", "patch": "@@ -10,7 +10,8 @@ LIB1ASMFUNCS = _udivsi3 _divsi3 _umodsi3 _modsi3 _dvmd_tls _bb_init_func \\\n \t_arm_fixdfsi _arm_fixunsdfsi \\\n \t_arm_truncdfsf2 _arm_negsf2 _arm_addsubsf3 _arm_muldivsf3 \\\n \t_arm_cmpsf2 _arm_unordsf2 _arm_fixsfsi _arm_fixunssfsi \\\n-\t_arm_floatdidf _arm_floatdisf _arm_floatundidf _arm_floatundisf\n+\t_arm_floatdidf _arm_floatdisf _arm_floatundidf _arm_floatundisf \\\n+\t_clzsi2 _clzdi2\n \n MULTILIB_OPTIONS     = marm/mthumb\n MULTILIB_DIRNAMES    = arm thumb"}, {"sha": "0e5c0b2501b57834768f50020cdbae3847c038dd", "filename": "gcc/config/arm/t-linux", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef0a4b673817ad7e866e00a5078b9410411e1c49/gcc%2Fconfig%2Farm%2Ft-linux", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef0a4b673817ad7e866e00a5078b9410411e1c49/gcc%2Fconfig%2Farm%2Ft-linux", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ft-linux?ref=ef0a4b673817ad7e866e00a5078b9410411e1c49", "patch": "@@ -3,7 +3,7 @@\n TARGET_LIBGCC2_CFLAGS = -fomit-frame-pointer -fPIC\n \n LIB1ASMSRC = arm/lib1funcs.asm\n-LIB1ASMFUNCS = _udivsi3 _divsi3 _umodsi3 _modsi3 _dvmd_lnx\n+LIB1ASMFUNCS = _udivsi3 _divsi3 _umodsi3 _modsi3 _dvmd_lnx clzsi2 _clzdi2\n \n # MULTILIB_OPTIONS = mhard-float/msoft-float\n # MULTILIB_DIRNAMES = hard-float soft-float"}, {"sha": "83c096ced70d256a9a60e2a588da216e835c0982", "filename": "gcc/config/arm/t-pe", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef0a4b673817ad7e866e00a5078b9410411e1c49/gcc%2Fconfig%2Farm%2Ft-pe", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef0a4b673817ad7e866e00a5078b9410411e1c49/gcc%2Fconfig%2Farm%2Ft-pe", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ft-pe?ref=ef0a4b673817ad7e866e00a5078b9410411e1c49", "patch": "@@ -1,5 +1,5 @@\n LIB1ASMSRC = arm/lib1funcs.asm\n-LIB1ASMFUNCS = _udivsi3 _divsi3 _umodsi3 _modsi3 _dvmd_tls _call_via_rX _interwork_call_via_rX\n+LIB1ASMFUNCS = _udivsi3 _divsi3 _umodsi3 _modsi3 _dvmd_tls _call_via_rX _interwork_call_via_rX _clzsi2 _clzdi2\n \n # We want fine grained libraries, so use the new code to build the\n # floating point emulation libraries.\n@@ -29,4 +29,4 @@ MULTILIB_DIRNAMES = fpu thumb\n \n LIBGCC = stmp-multilib\n INSTALL_LIBGCC = install-multilib\n-TARGET_LIBGCC2_CFLAGS = \n\\ No newline at end of file\n+TARGET_LIBGCC2_CFLAGS = "}, {"sha": "bc076e88a047aa9704ac609288e886bf65c54828", "filename": "gcc/config/arm/t-strongarm-elf", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef0a4b673817ad7e866e00a5078b9410411e1c49/gcc%2Fconfig%2Farm%2Ft-strongarm-elf", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef0a4b673817ad7e866e00a5078b9410411e1c49/gcc%2Fconfig%2Farm%2Ft-strongarm-elf", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ft-strongarm-elf?ref=ef0a4b673817ad7e866e00a5078b9410411e1c49", "patch": "@@ -1,5 +1,5 @@\n LIB1ASMSRC = arm/lib1funcs.asm\n-LIB1ASMFUNCS = _udivsi3 _divsi3 _umodsi3 _modsi3 _dvmd_tls _bb_init_func\n+LIB1ASMFUNCS = _udivsi3 _divsi3 _umodsi3 _modsi3 _dvmd_tls _bb_init_func _clzsi2 _clzdi2\n \n # We want fine grained libraries, so use the new code to build the\n # floating point emulation libraries."}, {"sha": "cadbd2236b3e2297aee275d25e568dcb9eb9baa5", "filename": "gcc/config/arm/t-symbian", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef0a4b673817ad7e866e00a5078b9410411e1c49/gcc%2Fconfig%2Farm%2Ft-symbian", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef0a4b673817ad7e866e00a5078b9410411e1c49/gcc%2Fconfig%2Farm%2Ft-symbian", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ft-symbian?ref=ef0a4b673817ad7e866e00a5078b9410411e1c49", "patch": "@@ -1,4 +1,4 @@\n-LIB1ASMFUNCS = _bb_init_func _call_via_rX _interwork_call_via_rX\n+LIB1ASMFUNCS = _bb_init_func _call_via_rX _interwork_call_via_rX _clzsi2 _clzdi2\n \n # These functions have __aeabi equivalents and will never be called by GCC.  \n # By putting them in LIB1ASMFUNCS, we avoid the standard libgcc2.c code being"}, {"sha": "565b33d6ce9342f39aeb7ab28c6b392dd3e00083", "filename": "gcc/config/arm/t-vxworks", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef0a4b673817ad7e866e00a5078b9410411e1c49/gcc%2Fconfig%2Farm%2Ft-vxworks", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef0a4b673817ad7e866e00a5078b9410411e1c49/gcc%2Fconfig%2Farm%2Ft-vxworks", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ft-vxworks?ref=ef0a4b673817ad7e866e00a5078b9410411e1c49", "patch": "@@ -1,5 +1,5 @@\n LIB1ASMSRC = arm/lib1funcs.asm\n-LIB1ASMFUNCS = _udivsi3 _divsi3 _umodsi3 _modsi3 _dvmd_tls _bb_init_func _call_via_rX _interwork_call_via_rX\n+LIB1ASMFUNCS = _udivsi3 _divsi3 _umodsi3 _modsi3 _dvmd_tls _bb_init_func _call_via_rX _interwork_call_via_rX _clzsi2 _clzdi2\n \n # We want fine grained libraries, so use the new code to build the\n # floating point emulation libraries."}, {"sha": "84b8170ecdfaf314fd2dcc7290e152161773df1a", "filename": "gcc/config/arm/t-wince-pe", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef0a4b673817ad7e866e00a5078b9410411e1c49/gcc%2Fconfig%2Farm%2Ft-wince-pe", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef0a4b673817ad7e866e00a5078b9410411e1c49/gcc%2Fconfig%2Farm%2Ft-wince-pe", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ft-wince-pe?ref=ef0a4b673817ad7e866e00a5078b9410411e1c49", "patch": "@@ -1,5 +1,5 @@\n LIB1ASMSRC = arm/lib1funcs.asm\n-LIB1ASMFUNCS = _udivsi3 _divsi3 _umodsi3 _modsi3 _dvmd_tls _call_via_rX _interwork_call_via_rX\n+LIB1ASMFUNCS = _udivsi3 _divsi3 _umodsi3 _modsi3 _dvmd_tls _call_via_rX _interwork_call_via_rX _clzsi2 _clzdi2\n \n # We want fine grained libraries, so use the new code to build the\n # floating point emulation libraries."}, {"sha": "45a95c40eb55bfd14cd5d45a37a38c67061c0e45", "filename": "gcc/longlong.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef0a4b673817ad7e866e00a5078b9410411e1c49/gcc%2Flonglong.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef0a4b673817ad7e866e00a5078b9410411e1c49/gcc%2Flonglong.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flonglong.h?ref=ef0a4b673817ad7e866e00a5078b9410411e1c49", "patch": "@@ -226,6 +226,12 @@ UDItype __umulsidi3 (USItype, USItype);\n #define UDIV_TIME 100\n #endif /* __arm__ */\n \n+#if defined(__arm__)\n+/* Let gcc decide how best to implement count_leading_zeros.  */\n+#define count_leading_zeros(COUNT,X)\t((COUNT) = __builtin_clz (X))\n+#define COUNT_LEADING_ZEROS_0 32\n+#endif\n+\n #if defined (__CRIS__) && __CRIS_arch_version >= 3\n #define count_leading_zeros(COUNT, X) ((COUNT) = __builtin_clz (X))\n #if __CRIS_arch_version >= 8"}]}