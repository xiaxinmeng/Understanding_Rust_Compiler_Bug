{"sha": "f33a8d10d239ec37b3d84cdb6fec0cd45b250df6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjMzYThkMTBkMjM5ZWMzN2IzZDg0Y2RiNmZlYzBjZDQ1YjI1MGRmNg==", "commit": {"author": {"name": "Richard Sandiford", "email": "rdsandiford@googlemail.com", "date": "2014-07-31T08:25:56Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2014-07-31T08:25:56Z"}, "message": "ira.c (insn_contains_asm_1, [...]): Delete.\n\ngcc/\n\t* ira.c (insn_contains_asm_1, insn_contains_asm): Delete.\n\t(compute_regs_asm_clobbered): Use extract_asm_operands instead.\n\nFrom-SVN: r213318", "tree": {"sha": "c2be35a0962a6d94218f3189fdbf08361a403843", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c2be35a0962a6d94218f3189fdbf08361a403843"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f33a8d10d239ec37b3d84cdb6fec0cd45b250df6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f33a8d10d239ec37b3d84cdb6fec0cd45b250df6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f33a8d10d239ec37b3d84cdb6fec0cd45b250df6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f33a8d10d239ec37b3d84cdb6fec0cd45b250df6/comments", "author": {"login": "rsandifo", "id": 4235983, "node_id": "MDQ6VXNlcjQyMzU5ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4235983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo", "html_url": "https://github.com/rsandifo", "followers_url": "https://api.github.com/users/rsandifo/followers", "following_url": "https://api.github.com/users/rsandifo/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo/orgs", "repos_url": "https://api.github.com/users/rsandifo/repos", "events_url": "https://api.github.com/users/rsandifo/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bfa2ebe3d7f83bf8d38b99e4015510505ef164ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bfa2ebe3d7f83bf8d38b99e4015510505ef164ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bfa2ebe3d7f83bf8d38b99e4015510505ef164ea"}], "stats": {"total": 26, "additions": 6, "deletions": 20}, "files": [{"sha": "f1e11839ff6aaff0e456f4025b5848ab1a9b2bc5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f33a8d10d239ec37b3d84cdb6fec0cd45b250df6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f33a8d10d239ec37b3d84cdb6fec0cd45b250df6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f33a8d10d239ec37b3d84cdb6fec0cd45b250df6", "patch": "@@ -1,3 +1,8 @@\n+2014-07-31  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\t* ira.c (insn_contains_asm_1, insn_contains_asm): Delete.\n+\t(compute_regs_asm_clobbered): Use extract_asm_operands instead.\n+\n 2014-07-31  Richard Biener  <rguenther@suse.de>\n \n \t* data-streamer.h (streamer_write_data_stream): Declare here,"}, {"sha": "ccc6c7988621fc85b7c4692940c315c9e60e13cf", "filename": "gcc/ira.c", "status": "modified", "additions": 1, "deletions": 20, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f33a8d10d239ec37b3d84cdb6fec0cd45b250df6/gcc%2Fira.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f33a8d10d239ec37b3d84cdb6fec0cd45b250df6/gcc%2Fira.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira.c?ref=f33a8d10d239ec37b3d84cdb6fec0cd45b250df6", "patch": "@@ -2221,25 +2221,6 @@ ira_bad_reload_regno (int regno, rtx in, rtx out)\n \t  || ira_bad_reload_regno_1 (regno, out));\n }\n \n-/* Return TRUE if *LOC contains an asm.  */\n-static int\n-insn_contains_asm_1 (rtx *loc, void *data ATTRIBUTE_UNUSED)\n-{\n-  if ( !*loc)\n-    return FALSE;\n-  if (GET_CODE (*loc) == ASM_OPERANDS)\n-    return TRUE;\n-  return FALSE;\n-}\n-\n-\n-/* Return TRUE if INSN contains an ASM.  */\n-static bool\n-insn_contains_asm (rtx insn)\n-{\n-  return for_each_rtx (&insn, insn_contains_asm_1, NULL);\n-}\n-\n /* Add register clobbers from asm statements.  */\n static void\n compute_regs_asm_clobbered (void)\n@@ -2253,7 +2234,7 @@ compute_regs_asm_clobbered (void)\n \t{\n \t  df_ref def;\n \n-\t  if (insn_contains_asm (insn))\n+\t  if (NONDEBUG_INSN_P (insn) && extract_asm_operands (PATTERN (insn)))\n \t    FOR_EACH_INSN_DEF (def, insn)\n \t      {\n \t\tunsigned int dregno = DF_REF_REGNO (def);"}]}