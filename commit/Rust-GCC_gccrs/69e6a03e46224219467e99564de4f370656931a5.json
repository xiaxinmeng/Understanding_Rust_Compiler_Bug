{"sha": "69e6a03e46224219467e99564de4f370656931a5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjllNmEwM2U0NjIyNDIxOTQ2N2U5OTU2NGRlNGYzNzA2NTY5MzFhNQ==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2006-02-17T16:05:24Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2006-02-17T16:05:24Z"}, "message": "sem_ch4.adb (Find_Boolean_Types): If one of the operands is an aggregate...\n\n2006-02-17  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch4.adb (Find_Boolean_Types): If one of the operands is an\n\taggregate, check the interpretations of the other operand to find one\n\tthat may be a boolean array.\n\t(Analyze_Selected_Component): Fix flow-of-control typo in case where\n\tthe prefix is a private extension.\n\nFrom-SVN: r111182", "tree": {"sha": "f257f7078871c206894f16e951ce83cb5e3cb562", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f257f7078871c206894f16e951ce83cb5e3cb562"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/69e6a03e46224219467e99564de4f370656931a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69e6a03e46224219467e99564de4f370656931a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69e6a03e46224219467e99564de4f370656931a5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69e6a03e46224219467e99564de4f370656931a5/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "24ca2a963aabc8157443c3a39f9fdc2bb728ca49", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24ca2a963aabc8157443c3a39f9fdc2bb728ca49", "html_url": "https://github.com/Rust-GCC/gccrs/commit/24ca2a963aabc8157443c3a39f9fdc2bb728ca49"}], "stats": {"total": 27, "additions": 26, "deletions": 1}, "files": [{"sha": "ac5f38da2ced902120c30b56b99c7b021cb51924", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 26, "deletions": 1, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69e6a03e46224219467e99564de4f370656931a5/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69e6a03e46224219467e99564de4f370656931a5/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=69e6a03e46224219467e99564de4f370656931a5", "patch": "@@ -2953,7 +2953,7 @@ package body Sem_Ch4 is\n                      Set_Entity_With_Style_Check (Sel, Comp);\n                      Set_Etype (Sel, Etype (Comp));\n                      Set_Etype (N,   Etype (Comp));\n-                     exit;\n+                     return;\n                   end if;\n \n                   Next_Component (Comp);\n@@ -3841,6 +3841,31 @@ package body Sem_Ch4 is\n                end loop;\n             end if;\n \n+         --  If operands are aggregates, we must assume that they may be\n+         --  boolean arrays, and leave disambiguation for the second pass.\n+         --  If only one is an aggregate, verify that the other one has an\n+         --  interpretation as a boolean array\n+\n+         elsif Nkind (L) = N_Aggregate then\n+            if Nkind (R) = N_Aggregate then\n+               Add_One_Interp (N, Op_Id, Etype (L));\n+\n+            elsif not Is_Overloaded (R) then\n+               if Valid_Boolean_Arg (Etype (R)) then\n+                  Add_One_Interp (N, Op_Id, Etype (R));\n+               end if;\n+\n+            else\n+               Get_First_Interp (R, Index, It);\n+               while Present (It.Typ) loop\n+                  if Valid_Boolean_Arg (It.Typ) then\n+                     Add_One_Interp (N, Op_Id, It.Typ);\n+                  end if;\n+\n+                  Get_Next_Interp (Index, It);\n+               end loop;\n+            end if;\n+\n          elsif Valid_Boolean_Arg (Etype (L))\n            and then Has_Compatible_Type (R, Etype (L))\n          then"}]}