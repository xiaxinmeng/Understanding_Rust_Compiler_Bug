{"sha": "a96377575b546f2207c83906c68683af30fe92f7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTk2Mzc3NTc1YjU0NmYyMjA3YzgzOTA2YzY4NjgzYWYzMGZlOTJmNw==", "commit": {"author": {"name": "Claudiu Zissulescu", "email": "claziss@synopsys.com", "date": "2018-07-25T14:31:16Z"}, "committer": {"name": "Claudiu Zissulescu", "email": "claziss@gcc.gnu.org", "date": "2018-07-25T14:31:16Z"}, "message": "[ARC] Improve instruction selection for fp moves.\n\nImprove selection of short instruction for fp-moves.\n\ngcc/\n2018-05-17  Claudiu Zissulescu  <claziss@synopsys.com>\n\n\t* config/arc/arc.md (movsf_insn): Add short instruction selection.\n\t* config/arc/constraints.md (CfZ): New constraint.\n\t* config/arc/fpu.md (addssf3_fpu): Use CfZ constraint.\n\t(subsf3_fpu): Likewise.\n\t(cmpsf_fpu): Likewise.\n\t(cmpsf_fpu_uneq): Likewise.\n\nFrom-SVN: r262971", "tree": {"sha": "faf79797864b1baacde4f7550f4db897495fb8c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/faf79797864b1baacde4f7550f4db897495fb8c3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a96377575b546f2207c83906c68683af30fe92f7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a96377575b546f2207c83906c68683af30fe92f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a96377575b546f2207c83906c68683af30fe92f7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a96377575b546f2207c83906c68683af30fe92f7/comments", "author": {"login": "claziss", "id": 2761368, "node_id": "MDQ6VXNlcjI3NjEzNjg=", "avatar_url": "https://avatars.githubusercontent.com/u/2761368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/claziss", "html_url": "https://github.com/claziss", "followers_url": "https://api.github.com/users/claziss/followers", "following_url": "https://api.github.com/users/claziss/following{/other_user}", "gists_url": "https://api.github.com/users/claziss/gists{/gist_id}", "starred_url": "https://api.github.com/users/claziss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/claziss/subscriptions", "organizations_url": "https://api.github.com/users/claziss/orgs", "repos_url": "https://api.github.com/users/claziss/repos", "events_url": "https://api.github.com/users/claziss/events{/privacy}", "received_events_url": "https://api.github.com/users/claziss/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3e4a5f5485c15381c67a940d5da449242ace9029", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e4a5f5485c15381c67a940d5da449242ace9029", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e4a5f5485c15381c67a940d5da449242ace9029"}], "stats": {"total": 99, "additions": 59, "deletions": 40}, "files": [{"sha": "5bc31a3e2cbd1c1bf3fefa2e702dfc8adf0dfe99", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a96377575b546f2207c83906c68683af30fe92f7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a96377575b546f2207c83906c68683af30fe92f7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a96377575b546f2207c83906c68683af30fe92f7", "patch": "@@ -1,3 +1,12 @@\n+2018-07-25  Claudiu Zissulescu  <claziss@synopsys.com>\n+\n+\t* config/arc/arc.md (movsf_insn): Add short instruction selection.\n+\t* config/arc/constraints.md (CfZ): New constraint.\n+\t* config/arc/fpu.md (addssf3_fpu): Use CfZ constraint.\n+\t(subsf3_fpu): Likewise.\n+\t(cmpsf_fpu): Likewise.\n+\t(cmpsf_fpu_uneq): Likewise.\n+\n 2018-07-25  Claudiu Zissulescu  <claziss@synopsys.com>\n \n \t* config/arc/arc.c (compact_memory_operand_p): Check for uncached"}, {"sha": "181a738f3ab8cb5d729add4859c834c5c72c86ce", "filename": "gcc/config/arc/arc.md", "status": "modified", "additions": 15, "deletions": 10, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a96377575b546f2207c83906c68683af30fe92f7/gcc%2Fconfig%2Farc%2Farc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a96377575b546f2207c83906c68683af30fe92f7/gcc%2Fconfig%2Farc%2Farc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc.md?ref=a96377575b546f2207c83906c68683af30fe92f7", "patch": "@@ -1294,19 +1294,24 @@ archs4x, archs4xd, archs4xd_slow\"\n   \"if (prepare_move_operands (operands, SFmode)) DONE;\")\n \n (define_insn \"*movsf_insn\"\n-  [(set (match_operand:SF 0 \"move_dest_operand\"    \"=h,w,w,r,m\")\n-\t(match_operand:SF 1 \"move_src_operand\"   \"hCm1,c,E,m,c\"))]\n+  [(set (match_operand:SF 0 \"move_dest_operand\"   \"=h,h,   r,r,  q,S,Usc,r,m\")\n+\t(match_operand:SF 1 \"move_src_operand\"  \"hCfZ,E,rCfZ,E,Uts,q,  E,m,r\"))]\n   \"register_operand (operands[0], SFmode)\n    || register_operand (operands[1], SFmode)\"\n   \"@\n-   mov%? %0,%1\n-   mov%? %0,%1\n-   mov%? %0,%1 ; %A1\n-   ld%U1%V1 %0,%1\n-   st%U0%V0 %1,%0\"\n-  [(set_attr \"type\" \"move,move,move,load,store\")\n-   (set_attr \"predicable\" \"no,yes,yes,no,no\")\n-   (set_attr \"iscompact\" \"true,false,false,false,false\")])\n+   mov%?\\\\t%0,%1\n+   mov%?\\\\t%0,%1 ; %A1\n+   mov%?\\\\t%0,%1\n+   mov%?\\\\t%0,%1 ; %A1\n+   ld%?%U1\\\\t%0,%1\n+   st%?\\\\t%1,%0\n+   st%U0%V0\\\\t%1,%0\n+   ld%U1%V1\\\\t%0,%1\n+   st%U0%V0\\\\t%1,%0\"\n+  [(set_attr \"type\" \"move,move,move,move,load,store,store,load,store\")\n+   (set_attr \"predicable\" \"no,no,yes,yes,no,no,no,no,no\")\n+   (set_attr \"length\" \"*,*,4,*,*,*,*,*,*\")\n+   (set_attr \"iscompact\" \"true,true_limm,false,false,true,true,false,false,false\")])\n \n (define_expand \"movdf\"\n   [(set (match_operand:DF 0 \"move_dest_operand\" \"\")"}, {"sha": "61b1d3f57c2bc1eb55914b526766eadbd38d5b43", "filename": "gcc/config/arc/constraints.md", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a96377575b546f2207c83906c68683af30fe92f7/gcc%2Fconfig%2Farc%2Fconstraints.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a96377575b546f2207c83906c68683af30fe92f7/gcc%2Fconfig%2Farc%2Fconstraints.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Fconstraints.md?ref=a96377575b546f2207c83906c68683af30fe92f7", "patch": "@@ -321,6 +321,12 @@\n   (and (match_code \"const_double\")\n        (match_test \"1\")))\n \n+(define_constraint \"CfZ\"\n+  \"@internal\n+   Match a floating-point zero\"\n+  (and (match_code \"const_double\")\n+       (match_test \"op == CONST0_RTX (SFmode)\")))\n+\n ;; Memory constraints\n (define_memory_constraint \"T\"\n   \"@internal"}, {"sha": "6289e9c3f593f7a240c8c581e250f30540a3a550", "filename": "gcc/config/arc/fpu.md", "status": "modified", "additions": 29, "deletions": 30, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a96377575b546f2207c83906c68683af30fe92f7/gcc%2Fconfig%2Farc%2Ffpu.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a96377575b546f2207c83906c68683af30fe92f7/gcc%2Fconfig%2Farc%2Ffpu.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Ffpu.md?ref=a96377575b546f2207c83906c68683af30fe92f7", "patch": "@@ -6,34 +6,34 @@\n \n ;; Addition\n (define_insn \"*addsf3_fpu\"\n-  [(set (match_operand:SF 0 \"register_operand\"           \"=r,r,r,r,r\")\n-\t(plus:SF (match_operand:SF 1 \"nonmemory_operand\" \"%0,r,0,r,F\")\n-\t\t (match_operand:SF 2 \"nonmemory_operand\"  \"r,r,F,F,r\")))]\n+  [(set (match_operand:SF 0 \"register_operand\"           \"=r,r,  r,r,r,r\")\n+\t(plus:SF (match_operand:SF 1 \"nonmemory_operand\" \"%0,r,  r,0,r,F\")\n+\t\t (match_operand:SF 2 \"nonmemory_operand\"  \"r,r,CfZ,F,F,r\")))]\n   \"TARGET_FP_SP_BASE\n    && (register_operand (operands[1], SFmode)\n        || register_operand (operands[2], SFmode))\"\n-  \"fsadd%? %0,%1,%2\"\n-  [(set_attr \"length\" \"4,4,8,8,8\")\n+  \"fsadd%?\\\\t%0,%1,%2\"\n+  [(set_attr \"length\" \"4,4,4,8,8,8\")\n    (set_attr \"iscompact\" \"false\")\n    (set_attr \"type\" \"fpu\")\n-   (set_attr \"predicable\" \"yes,no,yes,no,no\")\n-   (set_attr \"cond\" \"canuse,nocond,canuse_limm,nocond,nocond\")\n+   (set_attr \"predicable\" \"yes,no,no,yes,no,no\")\n+   (set_attr \"cond\" \"canuse,nocond,nocond,canuse_limm,nocond,nocond\")\n    ])\n \n ;; Subtraction\n (define_insn \"*subsf3_fpu\"\n-  [(set (match_operand:SF 0 \"register_operand\"           \"=r,r,r,r,r\")\n-\t(minus:SF (match_operand:SF 1 \"nonmemory_operand\" \"0,r,0,r,F\")\n-\t\t  (match_operand:SF 2 \"nonmemory_operand\" \"r,r,F,F,r\")))]\n+  [(set (match_operand:SF 0 \"register_operand\"           \"=r,r,  r,r,r,r\")\n+\t(minus:SF (match_operand:SF 1 \"nonmemory_operand\" \"0,r,  r,0,r,F\")\n+\t\t  (match_operand:SF 2 \"nonmemory_operand\" \"r,r,CfZ,F,F,r\")))]\n   \"TARGET_FP_SP_BASE\n    && (register_operand (operands[1], SFmode)\n        || register_operand (operands[2], SFmode))\"\n-  \"fssub%? %0,%1,%2\"\n-  [(set_attr \"length\" \"4,4,8,8,8\")\n+  \"fssub%?\\\\t%0,%1,%2\"\n+  [(set_attr \"length\" \"4,4,4,8,8,8\")\n    (set_attr \"iscompact\" \"false\")\n    (set_attr \"type\" \"fpu\")\n-   (set_attr \"predicable\" \"yes,no,yes,no,no\")\n-   (set_attr \"cond\" \"canuse,nocond,canuse_limm,nocond,nocond\")\n+   (set_attr \"predicable\" \"yes,no,no,yes,no,no\")\n+   (set_attr \"cond\" \"canuse,nocond,nocond,canuse_limm,nocond,nocond\")\n    ])\n \n ;; Multiplication\n@@ -44,7 +44,7 @@\n   \"TARGET_FP_SP_BASE\n    && (register_operand (operands[1], SFmode)\n        || register_operand (operands[2], SFmode))\"\n-  \"fsmul%? %0,%1,%2\"\n+  \"fsmul%?\\\\t%0,%1,%2\"\n   [(set_attr \"length\" \"4,4,8,8,8\")\n    (set_attr \"iscompact\" \"false\")\n    (set_attr \"type\" \"fpu\")\n@@ -108,7 +108,7 @@\n   \"TARGET_FP_SP_FUSED\n    && (register_operand (operands[1], SFmode)\n        || register_operand (operands[2], SFmode))\"\n-  \"fsmsub%? %0,%1,%2\"\n+  \"fsmsub%?\\\\t%0,%1,%2\"\n   [(set_attr \"length\" \"4,4,8,8,8\")\n    (set_attr \"predicable\" \"yes,no,yes,no,no\")\n    (set_attr \"cond\" \"canuse,nocond,canuse_limm,nocond,nocond\")\n@@ -178,7 +178,7 @@\n \t\t(match_operand:DF 2 \"even_register_operand\"  \"r,r\")\n \t\t(reg:DF ARCV2_ACC)))]\n   \"TARGET_FP_DP_FUSED\"\n-  \"fdmadd%? %0,%1,%2\"\n+  \"fdmadd%?\\\\t%0,%1,%2\"\n   [(set_attr \"length\" \"4,4\")\n    (set_attr \"predicable\" \"yes,no\")\n    (set_attr \"cond\" \"canuse,nocond\")\n@@ -191,7 +191,7 @@\n \t\t(match_operand:DF 2 \"even_register_operand\"          \"r,r\")\n \t\t(reg:DF ARCV2_ACC)))]\n   \"TARGET_FP_DP_FUSED\"\n-  \"fdmsub%? %0,%1,%2\"\n+  \"fdmsub%?\\\\t%0,%1,%2\"\n   [(set_attr \"length\" \"4,4\")\n    (set_attr \"predicable\" \"yes,no\")\n    (set_attr \"cond\" \"canuse,nocond\")\n@@ -206,7 +206,7 @@\n   \"TARGET_FP_SP_SQRT\n    && (register_operand (operands[1], SFmode)\n        || register_operand (operands[2], SFmode))\"\n-  \"fsdiv%? %0,%1,%2\"\n+  \"fsdiv%?\\\\t%0,%1,%2\"\n   [(set_attr \"length\" \"4,4,8,8,8\")\n    (set_attr \"iscompact\" \"false\")\n    (set_attr \"type\" \"fpu_sdiv\")\n@@ -225,31 +225,31 @@\n   [(set (match_operand:SF 0 \"register_operand\"           \"=r,r\")\n \t(sqrt:SF (match_operand:SF 1 \"nonmemory_operand\"  \"r,F\")))]\n   \"TARGET_FP_SP_SQRT\"\n-  \"fssqrt %0,%1\"\n+  \"fssqrt\\\\t%0,%1\"\n   [(set_attr \"length\" \"4,8\")\n    (set_attr \"type\" \"fpu_sdiv\")])\n \n ;; Comparison\n (define_insn \"*cmpsf_fpu\"\n   [(set (reg:CC_FPU CC_REG)\n-\t(compare:CC_FPU (match_operand:SF 0 \"register_operand\"  \"r,r\")\n-\t\t\t(match_operand:SF 1 \"nonmemory_operand\" \"r,F\")))]\n+\t(compare:CC_FPU (match_operand:SF 0 \"register_operand\"  \"r,  r,r\")\n+\t\t\t(match_operand:SF 1 \"nonmemory_operand\" \"r,CfZ,F\")))]\n   \"TARGET_FP_SP_BASE\"\n-  \"fscmp%? %0, %1\"\n-  [(set_attr \"length\" \"4,8\")\n+  \"fscmp%?\\\\t%0,%1\"\n+  [(set_attr \"length\" \"4,4,8\")\n    (set_attr \"iscompact\" \"false\")\n    (set_attr \"cond\" \"set\")\n    (set_attr \"type\" \"fpu\")\n-   (set_attr \"predicable\" \"yes,yes\")])\n+   (set_attr \"predicable\" \"yes\")])\n \n (define_insn \"*cmpsf_fpu_uneq\"\n   [(set (reg:CC_FPU_UNEQ CC_REG)\n \t(compare:CC_FPU_UNEQ\n-\t (match_operand:SF 0 \"register_operand\"  \"r,r\")\n-\t (match_operand:SF 1 \"nonmemory_operand\" \"r,F\")))]\n+\t (match_operand:SF 0 \"register_operand\"  \"r,  r,r\")\n+\t (match_operand:SF 1 \"nonmemory_operand\" \"r,CfZ,F\")))]\n   \"TARGET_FP_SP_BASE\"\n-  \"fscmp %0, %1\\\\n\\\\tmov.v.f 0,0\\\\t;set Z flag\"\n-  [(set_attr \"length\" \"8,12\")\n+  \"fscmp\\\\t%0,%1\\\\n\\\\tmov.v.f\\\\t0,0\\\\t;set Z flag\"\n+  [(set_attr \"length\" \"8,8,12\")\n    (set_attr \"iscompact\" \"false\")\n    (set_attr \"cond\" \"set\")\n    (set_attr \"type\" \"fpu\")])\n@@ -274,7 +274,6 @@\n    (set_attr \"cond\" \"canuse,nocond\")\n    ])\n \n-\n ;; Subtraction\n (define_insn \"*subdf3_fpu\"\n   [(set (match_operand:DF 0 \"even_register_operand\"           \"=r,r\")"}]}