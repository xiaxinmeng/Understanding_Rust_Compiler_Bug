{"sha": "1105cf8163f635ac4e4a3357d8b16a73fb6aced5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTEwNWNmODE2M2Y2MzVhYzRlNGEzMzU3ZDhiMTZhNzNmYjZhY2VkNQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-02-05T13:04:29Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-02-05T13:06:40Z"}, "message": "middle-end/90648 fend off builtin calls with not enough arguments from match\n\nThis adds guards to genmatch generated code before accessing call\nexpression or stmt arguments that might be out of bounds when\nthe user provided bogus prototypes for what we consider builtins.\n\n2020-02-05  Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/90648\n\t* genmatch.c (dt_node::gen_kids_1): Emit number of argument\n\tchecks before matching calls.\n\n\t* gcc.dg/pr90648.c: New testcase.", "tree": {"sha": "beb7961773473aa15a76c9261cda280e556e7e02", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/beb7961773473aa15a76c9261cda280e556e7e02"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1105cf8163f635ac4e4a3357d8b16a73fb6aced5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1105cf8163f635ac4e4a3357d8b16a73fb6aced5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1105cf8163f635ac4e4a3357d8b16a73fb6aced5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1105cf8163f635ac4e4a3357d8b16a73fb6aced5/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5f44a4341cf9793ccfb28cb0ab6876174c0d89dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f44a4341cf9793ccfb28cb0ab6876174c0d89dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f44a4341cf9793ccfb28cb0ab6876174c0d89dc"}], "stats": {"total": 42, "additions": 34, "deletions": 8}, "files": [{"sha": "072c89171ae69480025a02d9d6fb9d990e145710", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1105cf8163f635ac4e4a3357d8b16a73fb6aced5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1105cf8163f635ac4e4a3357d8b16a73fb6aced5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1105cf8163f635ac4e4a3357d8b16a73fb6aced5", "patch": "@@ -1,3 +1,9 @@\n+2020-02-05  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/90648\n+\t* genmatch.c (dt_node::gen_kids_1): Emit number of argument\n+\tchecks before matching calls.\n+\n 2020-02-05  Jakub Jelinek  <jakub@redhat.com>\n \n \t* tree-ssa-alias.c (aliasing_matching_component_refs_p): Fix up"}, {"sha": "0a8cba62e0cc1d5e928df39ba961c1a33bf9185e", "filename": "gcc/genmatch.c", "status": "modified", "additions": 14, "deletions": 8, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1105cf8163f635ac4e4a3357d8b16a73fb6aced5/gcc%2Fgenmatch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1105cf8163f635ac4e4a3357d8b16a73fb6aced5/gcc%2Fgenmatch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenmatch.c?ref=1105cf8163f635ac4e4a3357d8b16a73fb6aced5", "patch": "@@ -3060,10 +3060,15 @@ dt_node::gen_kids_1 (FILE *f, int indent, bool gimple, int depth,\n \t    {\n \t      expr *e = as_a <expr *>(fns[i]->op);\n \t      fprintf_indent (f, indent, \"case %s:\\n\", e->operation->id);\n-\t      fprintf_indent (f, indent, \"  {\\n\");\n-\t      fns[i]->gen (f, indent + 4, true, depth);\n-\t      fprintf_indent (f, indent, \"    break;\\n\");\n-\t      fprintf_indent (f, indent, \"  }\\n\");\n+\t      /* We need to be defensive against bogus prototypes allowing\n+\t\t calls with not enough arguments.  */\n+\t      fprintf_indent (f, indent,\n+\t\t\t      \"  if (gimple_call_num_args (_c%d) == %d)\\n\"\n+\t\t\t      \"    {\\n\", depth, e->ops.length ());\n+\t      fns[i]->gen (f, indent + 6, true, depth);\n+\t      fprintf_indent (f, indent,\n+\t\t\t      \"    }\\n\"\n+\t\t\t      \"  break;\\n\");\n \t    }\n \n \t  fprintf_indent (f, indent, \"default:;\\n\");\n@@ -3125,10 +3130,11 @@ dt_node::gen_kids_1 (FILE *f, int indent, bool gimple, int depth,\n \t  gcc_assert (e->operation->kind == id_base::FN);\n \n \t  fprintf_indent (f, indent, \"case %s:\\n\", e->operation->id);\n-\t  fprintf_indent (f, indent, \"  {\\n\");\n-\t  generic_fns[j]->gen (f, indent + 4, false, depth);\n-\t  fprintf_indent (f, indent, \"    break;\\n\");\n-\t  fprintf_indent (f, indent, \"  }\\n\");\n+\t  fprintf_indent (f, indent, \"  if (call_expr_nargs (%s) == %d)\\n\"\n+\t\t\t\t     \"    {\\n\", kid_opname, e->ops.length ());\n+\t  generic_fns[j]->gen (f, indent + 6, false, depth);\n+\t  fprintf_indent (f, indent, \"    }\\n\"\n+\t\t\t\t     \"  break;\\n\");\n \t}\n       fprintf_indent (f, indent, \"default:;\\n\");\n "}, {"sha": "873a7c415ae70af8e16204e4685fcaa374d55d81", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1105cf8163f635ac4e4a3357d8b16a73fb6aced5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1105cf8163f635ac4e4a3357d8b16a73fb6aced5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1105cf8163f635ac4e4a3357d8b16a73fb6aced5", "patch": "@@ -1,3 +1,9 @@\n+2020-02-05  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/90648\n+\t* genmatch.c (dt_node::gen_kids_1): Emit number of argument\n+\tchecks before matching calls.\n+\n 2020-02-05  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/93555"}, {"sha": "bf1fa9894782985708cf36888f2ae18b7507aeef", "filename": "gcc/testsuite/gcc.dg/pr90648.c", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1105cf8163f635ac4e4a3357d8b16a73fb6aced5/gcc%2Ftestsuite%2Fgcc.dg%2Fpr90648.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1105cf8163f635ac4e4a3357d8b16a73fb6aced5/gcc%2Ftestsuite%2Fgcc.dg%2Fpr90648.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr90648.c?ref=1105cf8163f635ac4e4a3357d8b16a73fb6aced5", "patch": "@@ -0,0 +1,8 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O\" } */\n+\n+extern double copysign ();\n+double foo (double x)\n+{\n+  return x * copysign (); /* { dg-warning \"too few arguments\" } */\n+}"}]}