{"sha": "70ad376e2f4f6cc950fb543f87e96e42d40c72d9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzBhZDM3NmUyZjRmNmNjOTUwZmI1NDNmODdlOTZlNDJkNDBjNzJkOQ==", "commit": {"author": {"name": "Doug Rupp", "email": "rupp@adacore.com", "date": "2005-02-10T13:49:15Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2005-02-10T13:49:15Z"}, "message": "gnatchop.adb (dup, [...]): Reference via System.CRTL.\n\n2005-02-09  Doug Rupp  <rupp@adacore.com>\n\n\t* gnatchop.adb (dup, dup2),\n\tg-dirope.adb (closedir, opendir, rmdir): Reference via System.CRTL.\n\n\t* gnatlbr.adb (mkdir),\n\tmlib-tgt-vms-ia64.adb (popen, plose):  Import with decc$ prefix.\n\n\t* s-crtl.ads (closdir, dup, dup2, opendir, rmdir): Import.\n\nFrom-SVN: r94807", "tree": {"sha": "5dc2dd33c332df90154ebf5f0909edf17dcd72d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5dc2dd33c332df90154ebf5f0909edf17dcd72d9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/70ad376e2f4f6cc950fb543f87e96e42d40c72d9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70ad376e2f4f6cc950fb543f87e96e42d40c72d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70ad376e2f4f6cc950fb543f87e96e42d40c72d9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70ad376e2f4f6cc950fb543f87e96e42d40c72d9/comments", "author": {"login": "Cementitious", "id": 115579865, "node_id": "U_kgDOBuOb2Q", "avatar_url": "https://avatars.githubusercontent.com/u/115579865?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Cementitious", "html_url": "https://github.com/Cementitious", "followers_url": "https://api.github.com/users/Cementitious/followers", "following_url": "https://api.github.com/users/Cementitious/following{/other_user}", "gists_url": "https://api.github.com/users/Cementitious/gists{/gist_id}", "starred_url": "https://api.github.com/users/Cementitious/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Cementitious/subscriptions", "organizations_url": "https://api.github.com/users/Cementitious/orgs", "repos_url": "https://api.github.com/users/Cementitious/repos", "events_url": "https://api.github.com/users/Cementitious/events{/privacy}", "received_events_url": "https://api.github.com/users/Cementitious/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "edc7394cad7cf7e7a656a91b23694150dc84dae3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/edc7394cad7cf7e7a656a91b23694150dc84dae3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/edc7394cad7cf7e7a656a91b23694150dc84dae3"}], "stats": {"total": 84, "additions": 55, "deletions": 29}, "files": [{"sha": "6c46baa86b4473759b5e7b82b457b28228ef1578", "filename": "gcc/ada/g-dirope.adb", "status": "modified", "additions": 7, "deletions": 15, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70ad376e2f4f6cc950fb543f87e96e42d40c72d9/gcc%2Fada%2Fg-dirope.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70ad376e2f4f6cc950fb543f87e96e42d40c72d9/gcc%2Fada%2Fg-dirope.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-dirope.adb?ref=70ad376e2f4f6cc950fb543f87e96e42d40c72d9", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---            Copyright (C) 1998-2003 Ada Core Technologies, Inc.           --\n+--            Copyright (C) 1998-2005 Ada Core Technologies, Inc.           --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -34,9 +34,12 @@\n with Ada.Characters.Handling;\n with Ada.Strings.Fixed;\n with Ada.Strings.Maps;\n+\n with Unchecked_Deallocation;\n with Unchecked_Conversion;\n-with System;  use System;\n+\n+with System;      use System;\n+with System.CRTL; use System.CRTL;\n \n with GNAT.OS_Lib;\n \n@@ -181,10 +184,6 @@ package body GNAT.Directory_Operations is\n    -----------\n \n    procedure Close (Dir : in out Dir_Type) is\n-\n-      function closedir (Directory : System.Address) return Integer;\n-      pragma Import (C, closedir, \"closedir\");\n-\n       Discard : Integer;\n       pragma Warnings (Off, Discard);\n \n@@ -193,7 +192,7 @@ package body GNAT.Directory_Operations is\n          raise Directory_Error;\n       end if;\n \n-      Discard := closedir (System.Address (Dir.all));\n+      Discard := closedir (DIRs (Dir.all));\n       Free (Dir);\n    end Close;\n \n@@ -630,12 +629,8 @@ package body GNAT.Directory_Operations is\n    is\n       C_File_Name : constant String := Dir_Name & ASCII.NUL;\n \n-      function opendir\n-        (File_Name : String) return Dir_Type_Value;\n-      pragma Import (C, opendir, \"opendir\");\n-\n    begin\n-      Dir := new Dir_Type_Value'(opendir (C_File_Name));\n+      Dir := new Dir_Type_Value'(Dir_Type_Value (opendir (C_File_Name)));\n \n       if not Is_Open (Dir) then\n          Free (Dir);\n@@ -737,9 +732,6 @@ package body GNAT.Directory_Operations is\n       Success     : Boolean;\n       Working_Dir : Dir_Type;\n \n-      procedure rmdir (Dir_Name : String);\n-      pragma Import (C, rmdir, \"rmdir\");\n-\n    begin\n       --  Remove the directory only if it is empty\n "}, {"sha": "a6b12e5c5fa8b7de0fa8137886ac87df423bfc0b", "filename": "gcc/ada/gnatchop.adb", "status": "modified", "additions": 24, "deletions": 8, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70ad376e2f4f6cc950fb543f87e96e42d40c72d9/gcc%2Fada%2Fgnatchop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70ad376e2f4f6cc950fb543f87e96e42d40c72d9/gcc%2Fada%2Fgnatchop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatchop.adb?ref=70ad376e2f4f6cc950fb543f87e96e42d40c72d9", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---            Copyright (C) 1998-2004 Ada Core Technologies, Inc.           --\n+--            Copyright (C) 1998-2005 Ada Core Technologies, Inc.           --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -35,6 +35,8 @@ with GNAT.Table;\n with Gnatvsn;\n with Hostparm;\n \n+with System.CRTL;       use System.CRTL;\n+\n procedure Gnatchop is\n \n    Terminate_Program : exception;\n@@ -182,18 +184,14 @@ procedure Gnatchop is\n    --  Note that this function returns false for the last entry.\n \n    procedure Sort_Units;\n-   --  Sort units and set up sorted unit table.\n+   --  Sort units and set up sorted unit table\n \n    ----------------------\n    -- File_Descriptors --\n    ----------------------\n \n    function dup  (handle   : File_Descriptor) return File_Descriptor;\n    function dup2 (from, to : File_Descriptor) return File_Descriptor;\n-   --  File descriptor based functions needed for redirecting stdin/stdout\n-\n-   pragma Import (C, dup, \"dup\");\n-   pragma Import (C, dup2, \"dup2\");\n \n    ---------------------\n    -- Local variables --\n@@ -332,6 +330,24 @@ procedure Gnatchop is\n       Success : out Boolean);\n    --  Write one compilation unit of the source to file\n \n+   ---------\n+   -- dup --\n+   ---------\n+\n+   function dup  (handle   : File_Descriptor) return File_Descriptor is\n+   begin\n+      return File_Descriptor (System.CRTL.dup (int (handle)));\n+   end dup;\n+\n+   ----------\n+   -- dup2 --\n+   ----------\n+\n+   function dup2 (from, to : File_Descriptor) return File_Descriptor is\n+   begin\n+      return File_Descriptor (System.CRTL.dup2 (int (from), int (to)));\n+   end dup2;\n+\n    ---------------\n    -- Error_Msg --\n    ---------------\n@@ -1148,7 +1164,7 @@ procedure Gnatchop is\n                Put_Line (Standard_Error, Gnatvsn.Gnat_Version_String);\n                Put_Line\n                  (Standard_Error,\n-                  \"Copyright 1998-2004, Ada Core Technologies Inc.\");\n+                  \"Copyright 1998-2005, Ada Core Technologies Inc.\");\n \n             when 'w' =>\n                Overwrite_Files := True;\n@@ -1316,7 +1332,7 @@ procedure Gnatchop is\n \n       Unit_Sort.Sort (Natural (Unit.Last));\n \n-      --  Set the Sorted_Index fields in the unit tables.\n+      --  Set the Sorted_Index fields in the unit tables\n \n       for J in 1 .. SUnit_Num (Unit.Last) loop\n          Unit.Table (Sorted_Units.Table (J)).Sorted_Index := J;"}, {"sha": "6873c3cc5f2a28a717773208f817881c47e8c664", "filename": "gcc/ada/gnatlbr.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70ad376e2f4f6cc950fb543f87e96e42d40c72d9/gcc%2Fada%2Fgnatlbr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70ad376e2f4f6cc950fb543f87e96e42d40c72d9/gcc%2Fada%2Fgnatlbr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatlbr.adb?ref=70ad376e2f4f6cc950fb543f87e96e42d40c72d9", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1997-2004 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1997-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -61,7 +61,7 @@ procedure GnatLbr is\n    Make_Path : String_Access;\n \n    procedure Create_Directory (Name : System.Address; Mode : Integer);\n-   pragma Import (C, Create_Directory, \"mkdir\");\n+   pragma Import (C, Create_Directory, \"decc$mkdir\");\n \n begin\n    if Argument_Count = 0 then"}, {"sha": "e921566473c3c88eb31d6e1935a063310bccdb10", "filename": "gcc/ada/mlib-tgt-vms-ia64.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70ad376e2f4f6cc950fb543f87e96e42d40c72d9/gcc%2Fada%2Fmlib-tgt-vms-ia64.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70ad376e2f4f6cc950fb543f87e96e42d40c72d9/gcc%2Fada%2Fmlib-tgt-vms-ia64.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-tgt-vms-ia64.adb?ref=70ad376e2f4f6cc950fb543f87e96e42d40c72d9", "patch": "@@ -7,7 +7,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---              Copyright (C) 2004, Free Software Foundation, Inc.          --\n+--            Copyright (C) 2004-2005 Free Software Foundation, Inc.        --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -77,10 +77,10 @@ package body MLib.Tgt is\n    ------------------------------\n \n    function Popen (Command, Mode : System.Address) return System.Address;\n-   pragma Import (C, Popen);\n+   pragma Import (C, Popen, \"decc$popen\");\n \n    function Pclose (File : System.Address) return Integer;\n-   pragma Import (C, Pclose);\n+   pragma Import (C, Pclose, \"decc$pclose\");\n \n    ---------------------\n    -- Archive_Builder --"}, {"sha": "42bdf02c73e3ba6d1c62637e67a6a74424ebab26", "filename": "gcc/ada/s-crtl.ads", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70ad376e2f4f6cc950fb543f87e96e42d40c72d9/gcc%2Fada%2Fs-crtl.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70ad376e2f4f6cc950fb543f87e96e42d40c72d9/gcc%2Fada%2Fs-crtl.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-crtl.ads?ref=70ad376e2f4f6cc950fb543f87e96e42d40c72d9", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---           Copyright (C) 2003 Free Software Foundation, Inc.              --\n+--          Copyright (C) 2003-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -41,6 +41,9 @@ pragma Preelaborate (CRTL);\n    subtype chars is System.Address;\n    --  Pointer to null-terminated array of characters\n \n+   subtype DIRs is System.Address;\n+   --  Corresponds to the C type DIR*\n+\n    subtype FILEs is System.Address;\n    --  Corresponds to the C type FILE*\n \n@@ -59,6 +62,15 @@ pragma Preelaborate (CRTL);\n    procedure clearerr (stream : FILEs);\n    pragma Import (C, clearerr, \"clearerr\");\n \n+   function closedir (directory : DIRs) return Integer;\n+   pragma Import (C, closedir, \"closedir\");\n+\n+   function dup  (handle : int) return int;\n+   pragma Import (C, dup, \"dup\");\n+\n+   function dup2 (from, to : int) return int;\n+   pragma Import (C, dup2, \"dup2\");\n+\n    function fclose (stream : FILEs) return int;\n    pragma Import (C, fclose, \"fclose\");\n \n@@ -124,6 +136,9 @@ pragma Preelaborate (CRTL);\n    procedure mktemp (template : chars);\n    pragma Import (C, mktemp, \"mktemp\");\n \n+   function opendir (file_name : String) return DIRs;\n+   pragma Import (C, opendir, \"opendir\");\n+\n    function read (fd : int; buffer : chars; nbytes : int) return int;\n    pragma Import (C, read, \"read\");\n \n@@ -134,6 +149,9 @@ pragma Preelaborate (CRTL);\n    procedure rewind (stream : FILEs);\n    pragma Import (C, rewind, \"rewind\");\n \n+   procedure rmdir (dir_name : String);\n+   pragma Import (C, rmdir, \"rmdir\");\n+\n    function setvbuf\n      (stream : FILEs;\n       buffer : chars;"}]}