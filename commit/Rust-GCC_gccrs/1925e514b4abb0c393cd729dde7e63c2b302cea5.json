{"sha": "1925e514b4abb0c393cd729dde7e63c2b302cea5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTkyNWU1MTRiNGFiYjBjMzkzY2Q3MjlkZGU3ZTYzYzJiMzAyY2VhNQ==", "commit": {"author": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2021-08-28T18:20:28Z"}, "committer": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2021-08-29T15:19:02Z"}, "message": "d: Use POINTER_SIZE for testing whether to predefine D_LP64\n\ngcc/d/ChangeLog:\n\n\t* d-builtins.cc (d_init_versions): Use POINTER_SIZE for testing\n\twhether to predefine D_LP64.", "tree": {"sha": "7e6630d6447cbed3a829d62afba930af7f1db7a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7e6630d6447cbed3a829d62afba930af7f1db7a3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1925e514b4abb0c393cd729dde7e63c2b302cea5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1925e514b4abb0c393cd729dde7e63c2b302cea5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1925e514b4abb0c393cd729dde7e63c2b302cea5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1925e514b4abb0c393cd729dde7e63c2b302cea5/comments", "author": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "07984707be4eb9aea55dafbbc796790b8b8ac700", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07984707be4eb9aea55dafbbc796790b8b8ac700", "html_url": "https://github.com/Rust-GCC/gccrs/commit/07984707be4eb9aea55dafbbc796790b8b8ac700"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "ab39d69c294e419d46d520c65393e1a61da77991", "filename": "gcc/d/d-builtins.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1925e514b4abb0c393cd729dde7e63c2b302cea5/gcc%2Fd%2Fd-builtins.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1925e514b4abb0c393cd729dde7e63c2b302cea5/gcc%2Fd%2Fd-builtins.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fd-builtins.cc?ref=1925e514b4abb0c393cd729dde7e63c2b302cea5", "patch": "@@ -462,7 +462,7 @@ d_init_versions (void)\n   VersionCondition::addPredefinedGlobalIdent (\"GNU_InlineAsm\");\n \n   /* LP64 only means 64bit pointers in D.  */\n-  if (global.params.isLP64)\n+  if (POINTER_SIZE == 64)\n     VersionCondition::addPredefinedGlobalIdent (\"D_LP64\");\n \n   /* Setting `global.params.cov' forces module info generation which is"}]}