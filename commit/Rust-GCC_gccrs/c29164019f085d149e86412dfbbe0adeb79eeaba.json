{"sha": "c29164019f085d149e86412dfbbe0adeb79eeaba", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzI5MTY0MDE5ZjA4NWQxNDllODY0MTJkZmJiZTBhZGViNzllZWFiYQ==", "commit": {"author": {"name": "Daniel Franke", "email": "franke.daniel@gmail.com", "date": "2008-01-22T12:19:54Z"}, "committer": {"name": "Daniel Franke", "email": "dfranke@gcc.gnu.org", "date": "2008-01-22T12:19:54Z"}, "message": "re PR fortran/34915 (-std=f95 rejects len_trim() and index() in init expressions)\n\ngcc/fortran:\n2008-01-22  Daniel Franke  <franke.daniel@gmail.com>\n\n\tPR fortran/34915\n\t* expr.c (check_elemental): Fix check for valid data types.\n\n\ngcc/testsuite:\n\t2008-01-22  Daniel Franke  <franke.daniel@gmail.com>\n\n\tPR fortran/34915\n\t* gfortran.dg/initialization_18.f90: New test.\n\nFrom-SVN: r131715", "tree": {"sha": "4ccd11ff53ce8a7677ff63920917386f216d8026", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4ccd11ff53ce8a7677ff63920917386f216d8026"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c29164019f085d149e86412dfbbe0adeb79eeaba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c29164019f085d149e86412dfbbe0adeb79eeaba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c29164019f085d149e86412dfbbe0adeb79eeaba", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c29164019f085d149e86412dfbbe0adeb79eeaba/comments", "author": {"login": "dfranke76", "id": 15729164, "node_id": "MDQ6VXNlcjE1NzI5MTY0", "avatar_url": "https://avatars.githubusercontent.com/u/15729164?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dfranke76", "html_url": "https://github.com/dfranke76", "followers_url": "https://api.github.com/users/dfranke76/followers", "following_url": "https://api.github.com/users/dfranke76/following{/other_user}", "gists_url": "https://api.github.com/users/dfranke76/gists{/gist_id}", "starred_url": "https://api.github.com/users/dfranke76/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dfranke76/subscriptions", "organizations_url": "https://api.github.com/users/dfranke76/orgs", "repos_url": "https://api.github.com/users/dfranke76/repos", "events_url": "https://api.github.com/users/dfranke76/events{/privacy}", "received_events_url": "https://api.github.com/users/dfranke76/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0387c1429da4a44bfe71b587cce23bb76d283ab8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0387c1429da4a44bfe71b587cce23bb76d283ab8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0387c1429da4a44bfe71b587cce23bb76d283ab8"}], "stats": {"total": 23, "additions": 22, "deletions": 1}, "files": [{"sha": "72af9f03ca661b34a45d6738d80e5006f4737c56", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c29164019f085d149e86412dfbbe0adeb79eeaba/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c29164019f085d149e86412dfbbe0adeb79eeaba/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=c29164019f085d149e86412dfbbe0adeb79eeaba", "patch": "@@ -1,3 +1,8 @@\n+2008-01-22  Daniel Franke  <franke.daniel@gmail.com>\n+\n+\tPR fortran/34915\n+\t* expr.c (check_elemental): Fix check for valid data types.\n+\n 2008-01-22  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/34899"}, {"sha": "fb1886e94b612d57d85ca642c9c2d4d331c13089", "filename": "gcc/fortran/expr.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c29164019f085d149e86412dfbbe0adeb79eeaba/gcc%2Ffortran%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c29164019f085d149e86412dfbbe0adeb79eeaba/gcc%2Ffortran%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fexpr.c?ref=c29164019f085d149e86412dfbbe0adeb79eeaba", "patch": "@@ -2109,7 +2109,8 @@ check_elemental (gfc_expr *e)\n       || !e->value.function.isym->elemental)\n     return MATCH_NO;\n \n-  if ((e->ts.type != BT_INTEGER || e->ts.type != BT_CHARACTER)\n+  if (e->ts.type != BT_INTEGER\n+      && e->ts.type != BT_CHARACTER\n       && gfc_notify_std (GFC_STD_F2003, \"Extension: Evaluation of \"\n \t\t\t\"nonstandard initialization expression at %L\",\n \t\t\t&e->where) == FAILURE)"}, {"sha": "e8cc0c25ce412b86a6e33ab94b287a3926fd0b21", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c29164019f085d149e86412dfbbe0adeb79eeaba/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c29164019f085d149e86412dfbbe0adeb79eeaba/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c29164019f085d149e86412dfbbe0adeb79eeaba", "patch": "@@ -1,3 +1,8 @@\n+2008-01-22  Daniel Franke  <franke.daniel@gmail.com>\n+\n+\tPR fortran/34915\n+\t* gfortran.dg/initialization_18.f90: New test.\n+\n 2008-01-22  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/34899"}, {"sha": "4e26e1b9ec0a3faaddd920a23a672ee6e9e19837", "filename": "gcc/testsuite/gfortran.dg/initialization_18.f90", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c29164019f085d149e86412dfbbe0adeb79eeaba/gcc%2Ftestsuite%2Fgfortran.dg%2Finitialization_18.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c29164019f085d149e86412dfbbe0adeb79eeaba/gcc%2Ftestsuite%2Fgfortran.dg%2Finitialization_18.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Finitialization_18.f90?ref=c29164019f085d149e86412dfbbe0adeb79eeaba", "patch": "@@ -0,0 +1,10 @@\n+! { dg-do compile }\n+! { dg-options \"-std=f95 -Wall\" }\n+!\n+! PR fortran/34915\n+! Testcase contributed by Al Greynolds via comp.lang.fortran.\n+!\n+\n+ character(*),dimension(3),parameter :: a=(/'a()  ','b(,) ','c(,,)'/)\n+ integer,dimension(3),parameter :: l=len_trim(a)\n+end"}]}