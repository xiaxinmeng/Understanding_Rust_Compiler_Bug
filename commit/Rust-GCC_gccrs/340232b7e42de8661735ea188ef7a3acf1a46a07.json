{"sha": "340232b7e42de8661735ea188ef7a3acf1a46a07", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzQwMjMyYjdlNDJkZTg2NjE3MzVlYTE4OGVmN2EzYWNmMWE0NmEwNw==", "commit": {"author": {"name": "Oleg Endo", "email": "olegendo@gcc.gnu.org", "date": "2014-10-14T00:50:18Z"}, "committer": {"name": "Oleg Endo", "email": "olegendo@gcc.gnu.org", "date": "2014-10-14T00:50:18Z"}, "message": "re PR target/63260 ([SH] fabs, fneg do not need fp-mode setting and do not use fpscr)\n\ngcc/\n\tPR target/63260\n\t* config/sh/sh.md (negsf2, negsf2_i, negdf2, negdf2_i, abssf2,\n\tabssf2_i, absdf2, absdf2_i): Remove fp_mode attribute.  Remove use\n\tof FPSCR.\n\t(negsf2_i): Rename to *negsf2_i.\n\t(abssf2_i): Rename to *abssf2_i.\n\t(negdf2_i): Rename to *negdf2_i.\n\t(absdf2_i): Rename to *absdf2_i.\n\ngcc/testsuite/\n\tPR target/63260\n\t* gcc.target/sh/pr63260.c: New.\n\nFrom-SVN: r216173", "tree": {"sha": "1313f6dec5acc0aadfee401c681fd28f1b06dd72", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1313f6dec5acc0aadfee401c681fd28f1b06dd72"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/340232b7e42de8661735ea188ef7a3acf1a46a07", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/340232b7e42de8661735ea188ef7a3acf1a46a07", "html_url": "https://github.com/Rust-GCC/gccrs/commit/340232b7e42de8661735ea188ef7a3acf1a46a07", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/340232b7e42de8661735ea188ef7a3acf1a46a07/comments", "author": null, "committer": null, "parents": [{"sha": "f0a81c69c90c9ce3f3d339cd62b62ded0e602ffa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0a81c69c90c9ce3f3d339cd62b62ded0e602ffa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f0a81c69c90c9ce3f3d339cd62b62ded0e602ffa"}], "stats": {"total": 126, "additions": 68, "deletions": 58}, "files": [{"sha": "2890d52df988bc31e7b02d4425ea50262e5f928e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/340232b7e42de8661735ea188ef7a3acf1a46a07/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/340232b7e42de8661735ea188ef7a3acf1a46a07/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=340232b7e42de8661735ea188ef7a3acf1a46a07", "patch": "@@ -1,3 +1,14 @@\n+2014-10-14  Oleg Endo  <olegendo@gcc.gnu.org>\n+\n+\tPR target/63260\n+\t* config/sh/sh.md (negsf2, negsf2_i, negdf2, negdf2_i, abssf2,\n+\tabssf2_i, absdf2, absdf2_i): Remove fp_mode attribute.  Remove use\n+\tof FPSCR.\n+\t(negsf2_i): Rename to *negsf2_i.\n+\t(abssf2_i): Rename to *abssf2_i.\n+\t(negdf2_i): Rename to *negdf2_i.\n+\t(absdf2_i): Rename to *absdf2_i.\n+\n 2014-10-14  Felix Yang  <felix.yang@huawei.com>\n \t    Jeff Law  <law@redhat.com>\n "}, {"sha": "b43a104d31d4d7c2d005c9cef5cd3f768beaa7e5", "filename": "gcc/config/sh/sh.md", "status": "modified", "additions": 20, "deletions": 56, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/340232b7e42de8661735ea188ef7a3acf1a46a07/gcc%2Fconfig%2Fsh%2Fsh.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/340232b7e42de8661735ea188ef7a3acf1a46a07/gcc%2Fconfig%2Fsh%2Fsh.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.md?ref=340232b7e42de8661735ea188ef7a3acf1a46a07", "patch": "@@ -12792,16 +12792,9 @@ label:\n })\n \n (define_expand \"negsf2\"\n-  [(set (match_operand:SF 0 \"fp_arith_reg_operand\" \"\")\n-\t(neg:SF (match_operand:SF 1 \"fp_arith_reg_operand\" \"\")))]\n-  \"TARGET_SH2E || TARGET_SHMEDIA_FPU\"\n-{\n-  if (TARGET_SH2E)\n-    {\n-      expand_sf_unop (&gen_negsf2_i, operands);\n-      DONE;\n-    }\n-})\n+  [(set (match_operand:SF 0 \"fp_arith_reg_operand\")\n+\t(neg:SF (match_operand:SF 1 \"fp_arith_reg_operand\")))]\n+  \"TARGET_SH2E || TARGET_SHMEDIA_FPU\")\n \n (define_insn \"*negsf2_media\"\n   [(set (match_operand:SF 0 \"fp_arith_reg_operand\" \"=f\")\n@@ -12810,14 +12803,12 @@ label:\n   \"fneg.s\t%1, %0\"\n   [(set_attr \"type\" \"fmove_media\")])\n \n-(define_insn \"negsf2_i\"\n+(define_insn \"*negsf2_i\"\n   [(set (match_operand:SF 0 \"fp_arith_reg_operand\" \"=f\")\n-\t(neg:SF (match_operand:SF 1 \"fp_arith_reg_operand\" \"0\")))\n-   (use (match_operand:PSI 2 \"fpscr_operand\" \"c\"))]\n+\t(neg:SF (match_operand:SF 1 \"fp_arith_reg_operand\" \"0\")))]\n   \"TARGET_SH2E\"\n   \"fneg\t%0\"\n-  [(set_attr \"type\" \"fmove\")\n-   (set_attr \"fp_mode\" \"single\")])\n+  [(set_attr \"type\" \"fmove\")])\n \n (define_expand \"sqrtsf2\"\n   [(set (match_operand:SF 0 \"fp_arith_reg_operand\" \"\")\n@@ -12916,16 +12907,9 @@ label:\n    (set_attr \"fp_mode\" \"single\")])\n \n (define_expand \"abssf2\"\n-  [(set (match_operand:SF 0 \"fp_arith_reg_operand\" \"\")\n-\t(abs:SF (match_operand:SF 1 \"fp_arith_reg_operand\" \"\")))]\n-  \"TARGET_SH2E || TARGET_SHMEDIA_FPU\"\n-{\n-  if (TARGET_SH2E)\n-    {\n-      expand_sf_unop (&gen_abssf2_i, operands);\n-      DONE;\n-    }\n-})\n+  [(set (match_operand:SF 0 \"fp_arith_reg_operand\")\n+\t(abs:SF (match_operand:SF 1 \"fp_arith_reg_operand\")))]\n+  \"TARGET_SH2E || TARGET_SHMEDIA_FPU\")\n \n (define_insn \"*abssf2_media\"\n   [(set (match_operand:SF 0 \"fp_arith_reg_operand\" \"=f\")\n@@ -12934,14 +12918,12 @@ label:\n   \"fabs.s\t%1, %0\"\n   [(set_attr \"type\" \"fmove_media\")])\n \n-(define_insn \"abssf2_i\"\n+(define_insn \"*abssf2_i\"\n   [(set (match_operand:SF 0 \"fp_arith_reg_operand\" \"=f\")\n-\t(abs:SF (match_operand:SF 1 \"fp_arith_reg_operand\" \"0\")))\n-   (use (match_operand:PSI 2 \"fpscr_operand\" \"c\"))]\n+\t(abs:SF (match_operand:SF 1 \"fp_arith_reg_operand\" \"0\")))]\n   \"TARGET_SH2E\"\n   \"fabs\t%0\"\n-  [(set_attr \"type\" \"fmove\")\n-   (set_attr \"fp_mode\" \"single\")])\n+  [(set_attr \"type\" \"fmove\")])\n \n (define_expand \"adddf3\"\n   [(set (match_operand:DF 0 \"fp_arith_reg_operand\" \"\")\n@@ -13247,14 +13229,7 @@ label:\n (define_expand \"negdf2\"\n   [(set (match_operand:DF 0 \"fp_arith_reg_operand\")\n \t(neg:DF (match_operand:DF 1 \"fp_arith_reg_operand\")))]\n-  \"(TARGET_SH4 || TARGET_SH2A_DOUBLE) || TARGET_SHMEDIA_FPU\"\n-{\n-  if (TARGET_SH4 || TARGET_SH2A_DOUBLE)\n-    {\n-      expand_df_unop (&gen_negdf2_i, operands);\n-      DONE;\n-    }\n-})\n+  \"(TARGET_SH4 || TARGET_SH2A_DOUBLE) || TARGET_SHMEDIA_FPU\")\n \n (define_insn \"*negdf2_media\"\n   [(set (match_operand:DF 0 \"fp_arith_reg_operand\" \"=f\")\n@@ -13263,14 +13238,12 @@ label:\n   \"fneg.d\t%1, %0\"\n   [(set_attr \"type\" \"fmove_media\")])\n \n-(define_insn \"negdf2_i\"\n+(define_insn \"*negdf2_i\"\n   [(set (match_operand:DF 0 \"fp_arith_reg_operand\" \"=f\")\n-\t(neg:DF (match_operand:DF 1 \"fp_arith_reg_operand\" \"0\")))\n-   (use (match_operand:PSI 2 \"fpscr_operand\" \"c\"))]\n+\t(neg:DF (match_operand:DF 1 \"fp_arith_reg_operand\" \"0\")))]\n   \"(TARGET_SH4 || TARGET_SH2A_DOUBLE)\"\n   \"fneg\t%0\"\n-  [(set_attr \"type\" \"fmove\")\n-   (set_attr \"fp_mode\" \"double\")])\n+  [(set_attr \"type\" \"fmove\")])\n \n (define_expand \"sqrtdf2\"\n   [(set (match_operand:DF 0 \"fp_arith_reg_operand\")\n@@ -13303,14 +13276,7 @@ label:\n (define_expand \"absdf2\"\n   [(set (match_operand:DF 0 \"fp_arith_reg_operand\")\n \t(abs:DF (match_operand:DF 1 \"fp_arith_reg_operand\")))]\n-  \"(TARGET_SH4 || TARGET_SH2A_DOUBLE) || TARGET_SHMEDIA_FPU\"\n-{\n-  if (TARGET_SH4 || TARGET_SH2A_DOUBLE)\n-    {\n-      expand_df_unop (&gen_absdf2_i, operands);\n-      DONE;\n-    }\n-})\n+  \"(TARGET_SH4 || TARGET_SH2A_DOUBLE) || TARGET_SHMEDIA_FPU\")\n \n (define_insn \"*absdf2_media\"\n   [(set (match_operand:DF 0 \"fp_arith_reg_operand\" \"=f\")\n@@ -13319,14 +13285,12 @@ label:\n   \"fabs.d\t%1, %0\"\n   [(set_attr \"type\" \"fmove_media\")])\n \n-(define_insn \"absdf2_i\"\n+(define_insn \"*absdf2_i\"\n   [(set (match_operand:DF 0 \"fp_arith_reg_operand\" \"=f\")\n-\t(abs:DF (match_operand:DF 1 \"fp_arith_reg_operand\" \"0\")))\n-   (use (match_operand:PSI 2 \"fpscr_operand\" \"c\"))]\n+\t(abs:DF (match_operand:DF 1 \"fp_arith_reg_operand\" \"0\")))]\n   \"(TARGET_SH4 || TARGET_SH2A_DOUBLE)\"\n   \"fabs\t%0\"\n-  [(set_attr \"type\" \"fmove\")\n-   (set_attr \"fp_mode\" \"double\")])\n+  [(set_attr \"type\" \"fmove\")])\n \n (define_expand \"extendsfdf2\"\n   [(set (match_operand:DF 0 \"fp_arith_reg_operand\" \"\")"}, {"sha": "d42991f0120e545acdc1087725a1b02a9bff72e7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/340232b7e42de8661735ea188ef7a3acf1a46a07/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/340232b7e42de8661735ea188ef7a3acf1a46a07/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=340232b7e42de8661735ea188ef7a3acf1a46a07", "patch": "@@ -1,3 +1,8 @@\n+2014-10-14  Oleg Endo  <olegendo@gcc.gnu.org>\n+\n+\tPR target/63260\n+\t* gcc.target/sh/pr63260.c: New.\n+\n 2014-10-13  Richard Henderson  <rth@redhat.com>\n \n \t* g++.dg/torture/20141013.C: New.\n@@ -30,8 +35,8 @@\n \n \tPR target/59401\n \tPR target/54760\n-\t* gcc.target/pr54760-5.c: New.\n-\t* gcc.target/pr54760-6.c: New.\n+\t* gcc.target/sh/pr54760-5.c: New.\n+\t* gcc.target/sh/pr54760-6.c: New.\n \t* gcc.target/sh/pr59401-1.c: New.\n \n 2014-10-11  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>"}, {"sha": "dba3ccf7d826a9b482a0ce15e7d965b8b3afbea6", "filename": "gcc/testsuite/gcc.target/sh/pr63260.c", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/340232b7e42de8661735ea188ef7a3acf1a46a07/gcc%2Ftestsuite%2Fgcc.target%2Fsh%2Fpr63260.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/340232b7e42de8661735ea188ef7a3acf1a46a07/gcc%2Ftestsuite%2Fgcc.target%2Fsh%2Fpr63260.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fsh%2Fpr63260.c?ref=340232b7e42de8661735ea188ef7a3acf1a46a07", "patch": "@@ -0,0 +1,30 @@\n+/* Check that there is no FPSCR precision mode change generated for fneg and\n+   fabs instructions.  */\n+/* { dg-do compile }  */\n+/* { dg-options \"-O1\" } */\n+/* { dg-skip-if \"\" { \"sh*-*-*\" } { \"-m5*\"} { \"\" } }  */\n+/* { dg-final { scan-assembler-not \"fpscr|fpchg\" } } */\n+\n+float\n+test_0 (float x)\n+{\n+  return -x;\n+}\n+\n+double\n+test_1 (double x)\n+{\n+  return -x;\n+}\n+\n+float\n+test_2 (float x)\n+{\n+  return __builtin_fabs (x);\n+}\n+\n+double\n+test_3 (double x)\n+{\n+  return __builtin_abs (x);\n+}"}]}