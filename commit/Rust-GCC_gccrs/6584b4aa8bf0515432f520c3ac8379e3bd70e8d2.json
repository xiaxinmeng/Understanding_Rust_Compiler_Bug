{"sha": "6584b4aa8bf0515432f520c3ac8379e3bd70e8d2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjU4NGI0YWE4YmYwNTE1NDMyZjUyMGMzYWM4Mzc5ZTNiZDcwZThkMg==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2002-04-03T07:56:47Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2002-04-03T07:56:47Z"}, "message": "re PR rtl-optimization/4311 (unrolling loops creates non-ending loop)\n\n        PR opt/4311\n        * loop.h (LOOP_FIRST_PASS): New.\n        * loop.c (strength_reduce): Mind it when deciding to unroll.\n        * toplev.c (rest_of_compilation): Set it.\n\nFrom-SVN: r51798", "tree": {"sha": "20695b9c1c06a51bef949e2e27c2c1bc4213eb58", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/20695b9c1c06a51bef949e2e27c2c1bc4213eb58"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6584b4aa8bf0515432f520c3ac8379e3bd70e8d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6584b4aa8bf0515432f520c3ac8379e3bd70e8d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6584b4aa8bf0515432f520c3ac8379e3bd70e8d2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6584b4aa8bf0515432f520c3ac8379e3bd70e8d2/comments", "author": null, "committer": null, "parents": [{"sha": "0acf409fdc1266c03caf70c778e8a79ce2f59261", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0acf409fdc1266c03caf70c778e8a79ce2f59261", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0acf409fdc1266c03caf70c778e8a79ce2f59261"}], "stats": {"total": 14, "additions": 11, "deletions": 3}, "files": [{"sha": "5a4f4f324cdf6bbd35cfe1a82d2ad5e42af8f856", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6584b4aa8bf0515432f520c3ac8379e3bd70e8d2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6584b4aa8bf0515432f520c3ac8379e3bd70e8d2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6584b4aa8bf0515432f520c3ac8379e3bd70e8d2", "patch": "@@ -1,3 +1,10 @@\n+2002-04-02  Richard Henderson  <rth@redhat.com>\n+\n+\tPR opt/4311\n+\t* loop.h (LOOP_FIRST_PASS): New.\n+\t* loop.c (strength_reduce): Mind it when deciding to unroll.\n+\t* toplev.c (rest_of_compilation): Set it.\n+\n 2002-04-02  David S. Miller  <davem@redhat.com>\n \n \t* config/sparc/sparc.md (ldd peephole2s): Fix final arg to"}, {"sha": "b51b2a850d7e8703364066d6e8214786359a202b", "filename": "gcc/loop.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6584b4aa8bf0515432f520c3ac8379e3bd70e8d2/gcc%2Floop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6584b4aa8bf0515432f520c3ac8379e3bd70e8d2/gcc%2Floop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop.c?ref=6584b4aa8bf0515432f520c3ac8379e3bd70e8d2", "patch": "@@ -5214,7 +5214,8 @@ strength_reduce (loop, flags)\n      collected.  Always unroll loops that would be as small or smaller\n      unrolled than when rolled.  */\n   if ((flags & LOOP_UNROLL)\n-      || (loop_info->n_iterations > 0\n+      || (!(flags & LOOP_FIRST_PASS)\n+\t  && loop_info->n_iterations > 0\n \t  && unrolled_insn_copies <= insn_count))\n     unroll_loop (loop, insn_count, 1);\n "}, {"sha": "8e3a9351f36c7947d0ade34a3988ee08c06d5ca4", "filename": "gcc/loop.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6584b4aa8bf0515432f520c3ac8379e3bd70e8d2/gcc%2Floop.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6584b4aa8bf0515432f520c3ac8379e3bd70e8d2/gcc%2Floop.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop.h?ref=6584b4aa8bf0515432f520c3ac8379e3bd70e8d2", "patch": "@@ -28,6 +28,7 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #define LOOP_UNROLL 1\n #define LOOP_BCT 2\n #define LOOP_PREFETCH 4\n+#define LOOP_FIRST_PASS 8\n \n /* Get the loop info pointer of a loop.  */\n #define LOOP_INFO(LOOP) ((struct loop_info *) (LOOP)->aux)"}, {"sha": "9fa22fc9cdfa5bb64b35dd70cad8ea7874d07342", "filename": "gcc/toplev.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6584b4aa8bf0515432f520c3ac8379e3bd70e8d2/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6584b4aa8bf0515432f520c3ac8379e3bd70e8d2/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=6584b4aa8bf0515432f520c3ac8379e3bd70e8d2", "patch": "@@ -2805,8 +2805,7 @@ rest_of_compilation (decl)\n \t  cleanup_barriers ();\n \n \t  /* We only want to perform unrolling once.  */\n-\n-\t  loop_optimize (insns, rtl_dump_file, 0);\n+\t  loop_optimize (insns, rtl_dump_file, LOOP_FIRST_PASS);\n \n \t  /* The first call to loop_optimize makes some instructions\n \t     trivially dead.  We delete those instructions now in the"}]}