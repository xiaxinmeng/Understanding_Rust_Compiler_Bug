{"sha": "ac6d1200be5d5f6c49a8b6c4ae447bf82c449c25", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWM2ZDEyMDBiZTVkNWY2YzQ5YThiNmM0YWU0NDdiZjgyYzQ0OWMyNQ==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2012-09-20T02:10:22Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2012-09-20T02:10:22Z"}, "message": "re PR libstdc++/28811 (--with-pic vs static libraries and libstdc++)\n\n2012-09-18  Benjamin Kosnik  <bkoz@redhat.com>\n\n        PR libstdc++/28811\n        PR libstdc++/54482\n        * configure.ac (glibcxx_lt_pic_flag,\n          glibcxx_compiler_pic_flag,\n          glibcxx_compiler_shared_flag): New. Use them.\n        (lt_prog_compiler_pic_CXX): Set via glibcxx_*_flag(s) above.\n        (pic_mode): Set to default.\n        (PIC_CXXFLAGS): Remove.\n        * Makefile.am (PICFLAG, PICFLAG_FOR_TARGET): Remove. Comment.\n        * libsupc++/Makefile.am: Use glibcxx_ld_pic_flag and\n          glibcxx_compiler_shared_flag. Comment.\n        * src/c++11/Makefile.am: Same.\n        * src/c++98/Makefile.am: Same.\n        * src/Makefile.am: Use glibcxx_compiler_pic_flag.\n\n        * Makefile.in: Regenerated.\n        * aclocal.m4: Same.\n        * configure: Same.\n        * doc/Makefile.in: Same.\n        * include/Makefile.in: Same.\n        * libsupc++/Makefile.in: Same.\n        * po/Makefile.in: Same.\n        * python/Makefile.in: Same.\n        * src/Makefile.in: Same.\n        * src/c++11/Makefile.in: Same.\n        * src/c++98/Makefile.in: Same.\n        * testsuite/Makefile.in: Same.\n\n        * src/c++11/compatibility-atomic-c++0x.cc: Use\n          _GLIBCXX_SHARED instead of PIC to designate shared-only\n          code blocks.\n        * src/c++11/compatibility-c++0x.cc: Same.\n        * src/c++11/compatibility-thread-c++0x.cc: Same.\n        * src/c++98/compatibility-list-2.cc: Same.\n        * src/c++98/compatibility.cc: : Same.\n\n        * testsuite/17_intro/shared_with_static_deps.cc: New.\n\n        * doc/xml/manual/build_hacking.xml: Separate configure from\n        make/build issues, add build details.\n\nFrom-SVN: r191509", "tree": {"sha": "83818fa8812212f4c4643f4ab5975bed4c9efd59", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/83818fa8812212f4c4643f4ab5975bed4c9efd59"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ac6d1200be5d5f6c49a8b6c4ae447bf82c449c25", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac6d1200be5d5f6c49a8b6c4ae447bf82c449c25", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac6d1200be5d5f6c49a8b6c4ae447bf82c449c25", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac6d1200be5d5f6c49a8b6c4ae447bf82c449c25/comments", "author": null, "committer": null, "parents": [{"sha": "17f293b01426805287a4aee50a3494372f0d3d7d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17f293b01426805287a4aee50a3494372f0d3d7d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/17f293b01426805287a4aee50a3494372f0d3d7d"}], "stats": {"total": 996, "additions": 640, "deletions": 356}, "files": [{"sha": "3efec87374bb1474b9476b7aeb94dfd3e10cc4d4", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac6d1200be5d5f6c49a8b6c4ae447bf82c449c25/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac6d1200be5d5f6c49a8b6c4ae447bf82c449c25/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=ac6d1200be5d5f6c49a8b6c4ae447bf82c449c25", "patch": "@@ -1,3 +1,46 @@\n+2012-09-18  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\tPR libstdc++/28811\n+\tPR libstdc++/54482\n+\t* configure.ac (glibcxx_lt_pic_flag,\n+          glibcxx_compiler_pic_flag,\n+          glibcxx_compiler_shared_flag): New. Use them.\n+\t(lt_prog_compiler_pic_CXX): Set via glibcxx_*_flag(s) above.\n+\t(pic_mode): Set to default.\n+\t(PIC_CXXFLAGS): Remove.\n+\t* Makefile.am (PICFLAG, PICFLAG_FOR_TARGET): Remove. Comment.\n+\t* libsupc++/Makefile.am: Use glibcxx_ld_pic_flag and\n+          glibcxx_compiler_shared_flag. Comment.\n+\t* src/c++11/Makefile.am: Same.\n+\t* src/c++98/Makefile.am: Same.\n+\t* src/Makefile.am: Use glibcxx_compiler_pic_flag.\n+\n+\t* Makefile.in: Regenerated.\n+\t* aclocal.m4: Same.\n+\t* configure: Same.\n+\t* doc/Makefile.in: Same.\n+\t* include/Makefile.in: Same.\n+\t* libsupc++/Makefile.in: Same.\n+\t* po/Makefile.in: Same.\n+\t* python/Makefile.in: Same.\n+\t* src/Makefile.in: Same.\n+\t* src/c++11/Makefile.in: Same.\n+\t* src/c++98/Makefile.in: Same.\n+\t* testsuite/Makefile.in: Same.\n+\n+\t* src/c++11/compatibility-atomic-c++0x.cc: Use\n+          _GLIBCXX_SHARED instead of PIC to designate shared-only\n+          code blocks.\n+\t* src/c++11/compatibility-c++0x.cc: Same.\n+\t* src/c++11/compatibility-thread-c++0x.cc: Same.\n+\t* src/c++98/compatibility-list-2.cc: Same.\n+\t* src/c++98/compatibility.cc: : Same.\n+\n+\t* testsuite/17_intro/shared_with_static_deps.cc: New.\n+\n+\t* doc/xml/manual/build_hacking.xml: Separate configure from\n+\tmake/build issues, add build details.\n+\n 2012-09-18  Edward Smith-Rowland  <3dw4rd@verizon.net>\n \n \t* include/ext/random: Add __gnu_cxx::nakagami_distribution<> class."}, {"sha": "8be4f6c3c43bbefe901bcffbb4e05fa27e02c67d", "filename": "libstdc++-v3/Makefile.am", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac6d1200be5d5f6c49a8b6c4ae447bf82c449c25/libstdc%2B%2B-v3%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac6d1200be5d5f6c49a8b6c4ae447bf82c449c25/libstdc%2B%2B-v3%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FMakefile.am?ref=ac6d1200be5d5f6c49a8b6c4ae447bf82c449c25", "patch": "@@ -152,8 +152,6 @@ AM_MAKEFLAGS = \\\n \t\"LIBCFLAGS_FOR_TARGET=$(LIBCFLAGS_FOR_TARGET)\" \\\n \t\"MAKE=$(MAKE)\" \\\n \t\"MAKEINFO=$(MAKEINFO) $(MAKEINFOFLAGS)\" \\\n-\t\"PICFLAG=$(PICFLAG)\" \\\n-\t\"PICFLAG_FOR_TARGET=$(PICFLAG_FOR_TARGET)\" \\\n \t\"SHELL=$(SHELL)\" \\\n \t\"RUNTESTFLAGS=$(RUNTESTFLAGS)\" \\\n \t\"exec_prefix=$(exec_prefix)\" \\"}, {"sha": "3deee0e754930192c5c7af17cd8a9d80b4df01ba", "filename": "libstdc++-v3/Makefile.in", "status": "modified", "additions": 15, "deletions": 19, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac6d1200be5d5f6c49a8b6c4ae447bf82c449c25/libstdc%2B%2B-v3%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac6d1200be5d5f6c49a8b6c4ae447bf82c449c25/libstdc%2B%2B-v3%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FMakefile.in?ref=ac6d1200be5d5f6c49a8b6c4ae447bf82c449c25", "patch": "@@ -1,9 +1,9 @@\n-# Makefile.in generated by automake 1.11.3 from Makefile.am.\n+# Makefile.in generated by automake 1.11.1 from Makefile.am.\n # @configure_input@\n \n # Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,\n-# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software\n-# Foundation, Inc.\n+# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,\n+# Inc.\n # This Makefile.in is free software; the Free Software Foundation\n # gives unlimited permission to copy and/or distribute it,\n # with or without modifications, as long as this notice is preserved.\n@@ -190,7 +190,6 @@ PACKAGE_URL = @PACKAGE_URL@\n PACKAGE_VERSION = @PACKAGE_VERSION@\n PATH_SEPARATOR = @PATH_SEPARATOR@\n PDFLATEX = @PDFLATEX@\n-PIC_CXXFLAGS = @PIC_CXXFLAGS@\n RANLIB = @RANLIB@\n SECTION_FLAGS = @SECTION_FLAGS@\n SECTION_LDFLAGS = @SECTION_LDFLAGS@\n@@ -238,7 +237,10 @@ glibcxx_MOFILES = @glibcxx_MOFILES@\n glibcxx_PCHFLAGS = @glibcxx_PCHFLAGS@\n glibcxx_POFILES = @glibcxx_POFILES@\n glibcxx_builddir = @glibcxx_builddir@\n+glibcxx_compiler_pic_flag = @glibcxx_compiler_pic_flag@\n+glibcxx_compiler_shared_flag = @glibcxx_compiler_shared_flag@\n glibcxx_localedir = @glibcxx_localedir@\n+glibcxx_lt_pic_flag = @glibcxx_lt_pic_flag@\n glibcxx_prefixdir = @glibcxx_prefixdir@\n glibcxx_srcdir = @glibcxx_srcdir@\n glibcxx_toolexecdir = @glibcxx_toolexecdir@\n@@ -355,8 +357,6 @@ AM_MAKEFLAGS = \\\n \t\"LIBCFLAGS_FOR_TARGET=$(LIBCFLAGS_FOR_TARGET)\" \\\n \t\"MAKE=$(MAKE)\" \\\n \t\"MAKEINFO=$(MAKEINFO) $(MAKEINFOFLAGS)\" \\\n-\t\"PICFLAG=$(PICFLAG)\" \\\n-\t\"PICFLAG_FOR_TARGET=$(PICFLAG_FOR_TARGET)\" \\\n \t\"SHELL=$(SHELL)\" \\\n \t\"RUNTESTFLAGS=$(RUNTESTFLAGS)\" \\\n \t\"exec_prefix=$(exec_prefix)\" \\\n@@ -383,7 +383,7 @@ all: config.h\n \t$(MAKE) $(AM_MAKEFLAGS) all-recursive\n \n .SUFFIXES:\n-am--refresh: Makefile\n+am--refresh:\n \t@:\n $(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am $(top_srcdir)/fragment.am $(am__configure_deps)\n \t@for dep in $?; do \\\n@@ -408,7 +408,6 @@ Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status\n \t    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \\\n \t    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \\\n \tesac;\n-$(top_srcdir)/fragment.am:\n \n $(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)\n \t$(SHELL) ./config.status --recheck\n@@ -420,8 +419,10 @@ $(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)\n $(am__aclocal_m4_deps):\n \n config.h: stamp-h1\n-\t@if test ! -f $@; then rm -f stamp-h1; else :; fi\n-\t@if test ! -f $@; then $(MAKE) $(AM_MAKEFLAGS) stamp-h1; else :; fi\n+\t@if test ! -f $@; then \\\n+\t  rm -f stamp-h1; \\\n+\t  $(MAKE) $(AM_MAKEFLAGS) stamp-h1; \\\n+\telse :; fi\n \n stamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.status\n \t@rm -f stamp-h1\n@@ -580,15 +581,10 @@ install-am: all-am\n \n installcheck: installcheck-recursive\n install-strip:\n-\tif test -z '$(STRIP)'; then \\\n-\t  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" \\\n-\t    install_sh_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" INSTALL_STRIP_FLAG=-s \\\n-\t      install; \\\n-\telse \\\n-\t  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" \\\n-\t    install_sh_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" INSTALL_STRIP_FLAG=-s \\\n-\t    \"INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'\" install; \\\n-\tfi\n+\t$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" \\\n+\t  install_sh_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" INSTALL_STRIP_FLAG=-s \\\n+\t  `test -z '$(STRIP)' || \\\n+\t    echo \"INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'\"` install\n mostlyclean-generic:\n \n clean-generic:"}, {"sha": "60b7ccb59124ea9bdd7736b4c244e5a697edbd76", "filename": "libstdc++-v3/aclocal.m4", "status": "modified", "additions": 23, "deletions": 39, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac6d1200be5d5f6c49a8b6c4ae447bf82c449c25/libstdc%2B%2B-v3%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac6d1200be5d5f6c49a8b6c4ae447bf82c449c25/libstdc%2B%2B-v3%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Faclocal.m4?ref=ac6d1200be5d5f6c49a8b6c4ae447bf82c449c25", "patch": "@@ -1,8 +1,7 @@\n-# generated automatically by aclocal 1.11.3 -*- Autoconf -*-\n+# generated automatically by aclocal 1.11.1 -*- Autoconf -*-\n \n # Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004,\n-# 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software Foundation,\n-# Inc.\n+# 2005, 2006, 2007, 2008, 2009  Free Software Foundation, Inc.\n # This file is free software; the Free Software Foundation\n # gives unlimited permission to copy and/or distribute it,\n # with or without modifications, as long as this notice is preserved.\n@@ -20,15 +19,12 @@ You have another version of autoconf.  It may work, but is not guaranteed to.\n If you have problems, you may need to regenerate the build system entirely.\n To do so, use the procedure documented by the package, typically `autoreconf'.])])\n \n-# Copyright (C) 2002, 2003, 2005, 2006, 2007, 2008, 2011 Free Software\n-# Foundation, Inc.\n+# Copyright (C) 2002, 2003, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.\n #\n # This file is free software; the Free Software Foundation\n # gives unlimited permission to copy and/or distribute it,\n # with or without modifications, as long as this notice is preserved.\n \n-# serial 1\n-\n # AM_AUTOMAKE_VERSION(VERSION)\n # ----------------------------\n # Automake X.Y traces this macro to ensure aclocal.m4 has been\n@@ -38,7 +34,7 @@ AC_DEFUN([AM_AUTOMAKE_VERSION],\n [am__api_version='1.11'\n dnl Some users find AM_AUTOMAKE_VERSION and mistake it for a way to\n dnl require some minimum version.  Point them to the right macro.\n-m4_if([$1], [1.11.3], [],\n+m4_if([$1], [1.11.1], [],\n       [AC_FATAL([Do not call $0, use AM_INIT_AUTOMAKE([$1]).])])dnl\n ])\n \n@@ -54,21 +50,19 @@ m4_define([_AM_AUTOCONF_VERSION], [])\n # Call AM_AUTOMAKE_VERSION and AM_AUTOMAKE_VERSION so they can be traced.\n # This function is AC_REQUIREd by AM_INIT_AUTOMAKE.\n AC_DEFUN([AM_SET_CURRENT_AUTOMAKE_VERSION],\n-[AM_AUTOMAKE_VERSION([1.11.3])dnl\n+[AM_AUTOMAKE_VERSION([1.11.1])dnl\n m4_ifndef([AC_AUTOCONF_VERSION],\n   [m4_copy([m4_PACKAGE_VERSION], [AC_AUTOCONF_VERSION])])dnl\n _AM_AUTOCONF_VERSION(m4_defn([AC_AUTOCONF_VERSION]))])\n \n # AM_AUX_DIR_EXPAND                                         -*- Autoconf -*-\n \n-# Copyright (C) 2001, 2003, 2005, 2011 Free Software Foundation, Inc.\n+# Copyright (C) 2001, 2003, 2005  Free Software Foundation, Inc.\n #\n # This file is free software; the Free Software Foundation\n # gives unlimited permission to copy and/or distribute it,\n # with or without modifications, as long as this notice is preserved.\n \n-# serial 1\n-\n # For projects using AC_CONFIG_AUX_DIR([foo]), Autoconf sets\n # $ac_aux_dir to `$srcdir/foo'.  In other projects, it is set to\n # `$srcdir', `$srcdir/..', or `$srcdir/../..'.\n@@ -289,15 +283,12 @@ for _am_header in $config_headers :; do\n done\n echo \"timestamp for $_am_arg\" >`AS_DIRNAME([\"$_am_arg\"])`/stamp-h[]$_am_stamp_count])\n \n-# Copyright (C) 2001, 2003, 2005, 2008, 2011 Free Software Foundation,\n-# Inc.\n+# Copyright (C) 2001, 2003, 2005, 2008  Free Software Foundation, Inc.\n #\n # This file is free software; the Free Software Foundation\n # gives unlimited permission to copy and/or distribute it,\n # with or without modifications, as long as this notice is preserved.\n \n-# serial 1\n-\n # AM_PROG_INSTALL_SH\n # ------------------\n # Define $install_sh.\n@@ -316,8 +307,8 @@ AC_SUBST(install_sh)])\n # Add --enable-maintainer-mode option to configure.         -*- Autoconf -*-\n # From Jim Meyering\n \n-# Copyright (C) 1996, 1998, 2000, 2001, 2002, 2003, 2004, 2005, 2008,\n-# 2011 Free Software Foundation, Inc.\n+# Copyright (C) 1996, 1998, 2000, 2001, 2002, 2003, 2004, 2005, 2008\n+# Free Software Foundation, Inc.\n #\n # This file is free software; the Free Software Foundation\n # gives unlimited permission to copy and/or distribute it,\n@@ -337,7 +328,7 @@ AC_DEFUN([AM_MAINTAINER_MODE],\n        [disable], [m4_define([am_maintainer_other], [enable])],\n        [m4_define([am_maintainer_other], [enable])\n         m4_warn([syntax], [unexpected argument to AM@&t@_MAINTAINER_MODE: $1])])\n-AC_MSG_CHECKING([whether to enable maintainer-specific portions of Makefiles])\n+AC_MSG_CHECKING([whether to am_maintainer_other maintainer-specific portions of Makefiles])\n   dnl maintainer-mode's default is 'disable' unless 'enable' is passed\n   AC_ARG_ENABLE([maintainer-mode],\n [  --][am_maintainer_other][-maintainer-mode  am_maintainer_other make rules and dependencies not useful\n@@ -396,15 +387,12 @@ else\n fi\n ])\n \n-# Copyright (C) 2003, 2004, 2005, 2006, 2011 Free Software Foundation,\n-# Inc.\n+# Copyright (C) 2003, 2004, 2005, 2006  Free Software Foundation, Inc.\n #\n # This file is free software; the Free Software Foundation\n # gives unlimited permission to copy and/or distribute it,\n # with or without modifications, as long as this notice is preserved.\n \n-# serial 1\n-\n # AM_PROG_MKDIR_P\n # ---------------\n # Check for `mkdir -p'.\n@@ -427,28 +415,27 @@ esac\n \n # Helper functions for option handling.                     -*- Autoconf -*-\n \n-# Copyright (C) 2001, 2002, 2003, 2005, 2008, 2010 Free Software\n-# Foundation, Inc.\n+# Copyright (C) 2001, 2002, 2003, 2005, 2008  Free Software Foundation, Inc.\n #\n # This file is free software; the Free Software Foundation\n # gives unlimited permission to copy and/or distribute it,\n # with or without modifications, as long as this notice is preserved.\n \n-# serial 5\n+# serial 4\n \n # _AM_MANGLE_OPTION(NAME)\n # -----------------------\n AC_DEFUN([_AM_MANGLE_OPTION],\n [[_AM_OPTION_]m4_bpatsubst($1, [[^a-zA-Z0-9_]], [_])])\n \n # _AM_SET_OPTION(NAME)\n-# --------------------\n+# ------------------------------\n # Set option NAME.  Presently that only means defining a flag for this option.\n AC_DEFUN([_AM_SET_OPTION],\n [m4_define(_AM_MANGLE_OPTION([$1]), 1)])\n \n # _AM_SET_OPTIONS(OPTIONS)\n-# ------------------------\n+# ----------------------------------\n # OPTIONS is a space-separated list of Automake options.\n AC_DEFUN([_AM_SET_OPTIONS],\n [m4_foreach_w([_AM_Option], [$1], [_AM_SET_OPTION(_AM_Option)])])\n@@ -524,14 +511,12 @@ Check your system clock])\n fi\n AC_MSG_RESULT(yes)])\n \n-# Copyright (C) 2001, 2003, 2005, 2011 Free Software Foundation, Inc.\n+# Copyright (C) 2001, 2003, 2005  Free Software Foundation, Inc.\n #\n # This file is free software; the Free Software Foundation\n # gives unlimited permission to copy and/or distribute it,\n # with or without modifications, as long as this notice is preserved.\n \n-# serial 1\n-\n # AM_PROG_INSTALL_STRIP\n # ---------------------\n # One issue with vendor `install' (even GNU) is that you can't\n@@ -554,13 +539,13 @@ fi\n INSTALL_STRIP_PROGRAM=\"\\$(install_sh) -c -s\"\n AC_SUBST([INSTALL_STRIP_PROGRAM])])\n \n-# Copyright (C) 2006, 2008, 2010 Free Software Foundation, Inc.\n+# Copyright (C) 2006, 2008  Free Software Foundation, Inc.\n #\n # This file is free software; the Free Software Foundation\n # gives unlimited permission to copy and/or distribute it,\n # with or without modifications, as long as this notice is preserved.\n \n-# serial 3\n+# serial 2\n \n # _AM_SUBST_NOTMAKE(VARIABLE)\n # ---------------------------\n@@ -569,13 +554,13 @@ AC_SUBST([INSTALL_STRIP_PROGRAM])])\n AC_DEFUN([_AM_SUBST_NOTMAKE])\n \n # AM_SUBST_NOTMAKE(VARIABLE)\n-# --------------------------\n+# ---------------------------\n # Public sister of _AM_SUBST_NOTMAKE.\n AC_DEFUN([AM_SUBST_NOTMAKE], [_AM_SUBST_NOTMAKE($@)])\n \n # Check how to create a tarball.                            -*- Autoconf -*-\n \n-# Copyright (C) 2004, 2005, 2012 Free Software Foundation, Inc.\n+# Copyright (C) 2004, 2005  Free Software Foundation, Inc.\n #\n # This file is free software; the Free Software Foundation\n # gives unlimited permission to copy and/or distribute it,\n@@ -597,11 +582,10 @@ AC_DEFUN([AM_SUBST_NOTMAKE], [_AM_SUBST_NOTMAKE($@)])\n # a tarball read from stdin.\n #     $(am__untar) < result.tar\n AC_DEFUN([_AM_PROG_TAR],\n-[# Always define AMTAR for backward compatibility.  Yes, it's still used\n-# in the wild :-(  We should find a proper way to deprecate it ...\n-AC_SUBST([AMTAR], ['$${TAR-tar}'])\n+[# Always define AMTAR for backward compatibility.\n+AM_MISSING_PROG([AMTAR], [tar])\n m4_if([$1], [v7],\n-     [am__tar='$${TAR-tar} chof - \"$$tardir\"' am__untar='$${TAR-tar} xf -'],\n+     [am__tar='${AMTAR} chof - \"$$tardir\"'; am__untar='${AMTAR} xf -'],\n      [m4_case([$1], [ustar],, [pax],,\n               [m4_fatal([Unknown tar format])])\n AC_MSG_CHECKING([how to create a $1 tar archive])"}, {"sha": "7e68712cb75315dcb1a4486addb3c14d0c038870", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 50, "deletions": 22, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac6d1200be5d5f6c49a8b6c4ae447bf82c449c25/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac6d1200be5d5f6c49a8b6c4ae447bf82c449c25/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=ac6d1200be5d5f6c49a8b6c4ae447bf82c449c25", "patch": "@@ -602,7 +602,6 @@ ac_subst_vars='am__EXEEXT_FALSE\n am__EXEEXT_TRUE\n LTLIBOBJS\n LIBOBJS\n-PIC_CXXFLAGS\n WARN_FLAGS\n OPTIMIZE_CXXFLAGS\n TOPLEVEL_INCLUDES\n@@ -715,6 +714,9 @@ GLIBCXX_BUILD_PCH_FALSE\n GLIBCXX_BUILD_PCH_TRUE\n GLIBCXX_HOSTED_FALSE\n GLIBCXX_HOSTED_TRUE\n+glibcxx_compiler_shared_flag\n+glibcxx_compiler_pic_flag\n+glibcxx_lt_pic_flag\n enable_static\n enable_shared\n lt_host_flags\n@@ -3528,11 +3530,11 @@ MAKEINFO=${MAKEINFO-\"${am_missing_run}makeinfo\"}\n \n # We need awk for the \"check\" target.  The system \"awk\" is bad on\n # some platforms.\n-# Always define AMTAR for backward compatibility.  Yes, it's still used\n-# in the wild :-(  We should find a proper way to deprecate it ...\n-AMTAR='$${TAR-tar}'\n+# Always define AMTAR for backward compatibility.\n \n-am__tar='$${TAR-tar} chof - \"$$tardir\"' am__untar='$${TAR-tar} xf -'\n+AMTAR=${AMTAR-\"${am_missing_run}tar\"}\n+\n+am__tar='${AMTAR} chof - \"$$tardir\"'; am__untar='${AMTAR} xf -'\n \n \n \n@@ -5285,6 +5287,7 @@ $as_echo \"$as_me: OS config directory is $os_include_dir\" >&6;}\n \n \n \n+# Libtool setup.\n if test \"x${with_newlib}\" != \"xyes\"; then\n   enable_dlopen=yes\n \n@@ -11510,7 +11513,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11513 \"configure\"\n+#line 11516 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11616,7 +11619,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11619 \"configure\"\n+#line 11622 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -14903,6 +14906,38 @@ esac\n \n \n \n+# libtool variables for C++ shared and position-independent compiles.\n+#\n+# Use glibcxx_lt_pic_flag to designate the automake variable\n+# used to encapsulate the default libtool approach to creating objects\n+# with position-independent code. Default: -prefer-pic.\n+#\n+# Use glibcxx_compiler_shared_flag to designate a compile-time flags for\n+# creating shared objects. Default: -D_GLIBCXX_SHARED.\n+#\n+# Use glibcxx_compiler_pic_flag to designate a compile-time flags for\n+# creating position-independent objects. This varies with the target\n+# hardware and operating system, but is often: -DPIC -fPIC.\n+if test \"$enable_shared\" = yes; then\n+  glibcxx_lt_pic_flag=\"-prefer-pic\"\n+  glibcxx_compiler_pic_flag=\"$lt_prog_compiler_pic_CXX\"\n+  glibcxx_compiler_shared_flag=\"-D_GLIBCXX_SHARED\"\n+\n+else\n+  glibcxx_lt_pic_flag=\n+  glibcxx_compiler_pic_flag=\n+  glibcxx_compiler_shared_flag=\n+fi\n+\n+\n+\n+\n+# Override the libtool's pic_flag and pic_mode.\n+# Do this step after AM_PROG_LIBTOOL, but before AC_OUTPUT.\n+# NB: this impacts --with-pic and --without-pic.\n+lt_prog_compiler_pic_CXX=\"$glibcxx_compiler_pic_flag $glibcxx_compiler_shared_flag\"\n+pic_mode='default'\n+\n # Eliminate -lstdc++ addition to postdeps for cross compiles.\n postdeps_CXX=`echo \" $postdeps_CXX \" | sed 's, -lstdc++ ,,g'`\n \n@@ -14998,7 +15033,7 @@ fi\n     #\n     # Fake what AC_TRY_COMPILE does.  XXX Look at redoing this new-style.\n     cat > conftest.$ac_ext << EOF\n-#line 15001 \"configure\"\n+#line 15036 \"configure\"\n struct S { ~S(); };\n void bar();\n void foo()\n@@ -15333,7 +15368,7 @@ $as_echo \"$glibcxx_cv_atomic_long_long\" >&6; }\n   # Fake what AC_TRY_COMPILE does.\n \n     cat > conftest.$ac_ext << EOF\n-#line 15336 \"configure\"\n+#line 15371 \"configure\"\n int main()\n {\n   typedef bool atomic_type;\n@@ -15368,7 +15403,7 @@ $as_echo \"$glibcxx_cv_atomic_bool\" >&6; }\n     rm -f conftest*\n \n     cat > conftest.$ac_ext << EOF\n-#line 15371 \"configure\"\n+#line 15406 \"configure\"\n int main()\n {\n   typedef short atomic_type;\n@@ -15403,7 +15438,7 @@ $as_echo \"$glibcxx_cv_atomic_short\" >&6; }\n     rm -f conftest*\n \n     cat > conftest.$ac_ext << EOF\n-#line 15406 \"configure\"\n+#line 15441 \"configure\"\n int main()\n {\n   // NB: _Atomic_word not necessarily int.\n@@ -15439,7 +15474,7 @@ $as_echo \"$glibcxx_cv_atomic_int\" >&6; }\n     rm -f conftest*\n \n     cat > conftest.$ac_ext << EOF\n-#line 15442 \"configure\"\n+#line 15477 \"configure\"\n int main()\n {\n   typedef long long atomic_type;\n@@ -15518,7 +15553,7 @@ $as_echo \"$as_me: WARNING: Performance of certain classes will degrade as a resu\n   # unnecessary for this test.\n \n     cat > conftest.$ac_ext << EOF\n-#line 15521 \"configure\"\n+#line 15556 \"configure\"\n int main()\n {\n   _Decimal32 d1;\n@@ -15560,7 +15595,7 @@ ac_compiler_gnu=$ac_cv_cxx_compiler_gnu\n   # unnecessary for this test.\n \n     cat > conftest.$ac_ext << EOF\n-#line 15563 \"configure\"\n+#line 15598 \"configure\"\n template<typename T1, typename T2>\n   struct same\n   { typedef T2 type; };\n@@ -15594,7 +15629,7 @@ $as_echo \"$enable_int128\" >&6; }\n     rm -f conftest*\n \n     cat > conftest.$ac_ext << EOF\n-#line 15597 \"configure\"\n+#line 15632 \"configure\"\n template<typename T1, typename T2>\n   struct same\n   { typedef T2 type; };\n@@ -71991,13 +72026,6 @@ $as_echo \"$gxx_include_dir\" >&6; }\n \n \n \n-if test \"$enable_shared\" = yes; then\n-  PIC_CXXFLAGS=\"-prefer-pic\"\n-else\n-  PIC_CXXFLAGS=\n-fi\n-\n-\n ac_config_files=\"$ac_config_files Makefile\"\n \n ac_config_files=\"$ac_config_files scripts/testsuite_flags\""}, {"sha": "aff19f583951e8926365d77cd754512801550344", "filename": "libstdc++-v3/configure.ac", "status": "modified", "additions": 33, "deletions": 7, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac6d1200be5d5f6c49a8b6c4ae447bf82c449c25/libstdc%2B%2B-v3%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac6d1200be5d5f6c49a8b6c4ae447bf82c449c25/libstdc%2B%2B-v3%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure.ac?ref=ac6d1200be5d5f6c49a8b6c4ae447bf82c449c25", "patch": "@@ -88,6 +88,7 @@ CXXFLAGS=\"$save_CXXFLAGS\"\n # up critical shell variables.\n GLIBCXX_CONFIGURE\n \n+# Libtool setup.\n if test \"x${with_newlib}\" != \"xyes\"; then\n   AC_LIBTOOL_DLOPEN\n fi\n@@ -96,6 +97,38 @@ ACX_LT_HOST_FLAGS\n AC_SUBST(enable_shared)\n AC_SUBST(enable_static)\n \n+# libtool variables for C++ shared and position-independent compiles.\n+#\n+# Use glibcxx_lt_pic_flag to designate the automake variable\n+# used to encapsulate the default libtool approach to creating objects\n+# with position-independent code. Default: -prefer-pic.\n+#\n+# Use glibcxx_compiler_shared_flag to designate a compile-time flags for\n+# creating shared objects. Default: -D_GLIBCXX_SHARED.\n+#\n+# Use glibcxx_compiler_pic_flag to designate a compile-time flags for\n+# creating position-independent objects. This varies with the target\n+# hardware and operating system, but is often: -DPIC -fPIC.\n+if test \"$enable_shared\" = yes; then\n+  glibcxx_lt_pic_flag=\"-prefer-pic\"\n+  glibcxx_compiler_pic_flag=\"$lt_prog_compiler_pic_CXX\"\n+  glibcxx_compiler_shared_flag=\"-D_GLIBCXX_SHARED\"\n+\n+else\n+  glibcxx_lt_pic_flag=\n+  glibcxx_compiler_pic_flag=\n+  glibcxx_compiler_shared_flag=\n+fi\n+AC_SUBST(glibcxx_lt_pic_flag)\n+AC_SUBST(glibcxx_compiler_pic_flag)\n+AC_SUBST(glibcxx_compiler_shared_flag)\n+\n+# Override the libtool's pic_flag and pic_mode.\n+# Do this step after AM_PROG_LIBTOOL, but before AC_OUTPUT.\n+# NB: this impacts --with-pic and --without-pic.\n+lt_prog_compiler_pic_CXX=\"$glibcxx_compiler_pic_flag $glibcxx_compiler_shared_flag\"\n+pic_mode='default'\n+\n # Eliminate -lstdc++ addition to postdeps for cross compiles.\n postdeps_CXX=`echo \" $postdeps_CXX \" | sed 's, -lstdc++ ,,g'`\n \n@@ -430,13 +463,6 @@ GLIBCXX_EXPORT_INSTALL_INFO\n GLIBCXX_EXPORT_INCLUDES\n GLIBCXX_EXPORT_FLAGS\n \n-if test \"$enable_shared\" = yes; then\n-  PIC_CXXFLAGS=\"-prefer-pic\"\n-else\n-  PIC_CXXFLAGS=\n-fi\n-AC_SUBST(PIC_CXXFLAGS)\n-\n dnl In autoconf 2.5x, AC_OUTPUT is replaced by four AC_CONFIG_* macros,\n dnl which can all be called multiple times as needed, plus one (different)\n dnl AC_OUTPUT macro.  This one lists the files to be created:"}, {"sha": "394c6cd5706270c75bd09a7c8159ff362529ed61", "filename": "libstdc++-v3/doc/Makefile.in", "status": "modified", "additions": 10, "deletions": 14, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac6d1200be5d5f6c49a8b6c4ae447bf82c449c25/libstdc%2B%2B-v3%2Fdoc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac6d1200be5d5f6c49a8b6c4ae447bf82c449c25/libstdc%2B%2B-v3%2Fdoc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2FMakefile.in?ref=ac6d1200be5d5f6c49a8b6c4ae447bf82c449c25", "patch": "@@ -1,9 +1,9 @@\n-# Makefile.in generated by automake 1.11.3 from Makefile.am.\n+# Makefile.in generated by automake 1.11.1 from Makefile.am.\n # @configure_input@\n \n # Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,\n-# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software\n-# Foundation, Inc.\n+# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,\n+# Inc.\n # This Makefile.in is free software; the Free Software Foundation\n # gives unlimited permission to copy and/or distribute it,\n # with or without modifications, as long as this notice is preserved.\n@@ -162,7 +162,6 @@ PACKAGE_URL = @PACKAGE_URL@\n PACKAGE_VERSION = @PACKAGE_VERSION@\n PATH_SEPARATOR = @PATH_SEPARATOR@\n PDFLATEX = @PDFLATEX@\n-PIC_CXXFLAGS = @PIC_CXXFLAGS@\n RANLIB = @RANLIB@\n SECTION_FLAGS = @SECTION_FLAGS@\n SECTION_LDFLAGS = @SECTION_LDFLAGS@\n@@ -212,7 +211,10 @@ glibcxx_MOFILES = @glibcxx_MOFILES@\n glibcxx_PCHFLAGS = @glibcxx_PCHFLAGS@\n glibcxx_POFILES = @glibcxx_POFILES@\n glibcxx_builddir = @glibcxx_builddir@\n+glibcxx_compiler_pic_flag = @glibcxx_compiler_pic_flag@\n+glibcxx_compiler_shared_flag = @glibcxx_compiler_shared_flag@\n glibcxx_localedir = @glibcxx_localedir@\n+glibcxx_lt_pic_flag = @glibcxx_lt_pic_flag@\n glibcxx_prefixdir = @glibcxx_prefixdir@\n glibcxx_srcdir = @glibcxx_srcdir@\n glibcxx_toolexecdir = @glibcxx_toolexecdir@\n@@ -590,7 +592,6 @@ Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status\n \t    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \\\n \t    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \\\n \tesac;\n-$(top_srcdir)/fragment.am:\n \n $(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)\n \tcd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh\n@@ -626,15 +627,10 @@ install-am: all-am\n \n installcheck: installcheck-am\n install-strip:\n-\tif test -z '$(STRIP)'; then \\\n-\t  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" \\\n-\t    install_sh_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" INSTALL_STRIP_FLAG=-s \\\n-\t      install; \\\n-\telse \\\n-\t  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" \\\n-\t    install_sh_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" INSTALL_STRIP_FLAG=-s \\\n-\t    \"INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'\" install; \\\n-\tfi\n+\t$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" \\\n+\t  install_sh_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" INSTALL_STRIP_FLAG=-s \\\n+\t  `test -z '$(STRIP)' || \\\n+\t    echo \"INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'\"` install\n mostlyclean-generic:\n \n clean-generic:"}, {"sha": "771d005e71b667b30e208c8317cf73742b2300ea", "filename": "libstdc++-v3/doc/xml/manual/build_hacking.xml", "status": "modified", "additions": 145, "deletions": 15, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac6d1200be5d5f6c49a8b6c4ae447bf82c449c25/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fbuild_hacking.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac6d1200be5d5f6c49a8b6c4ae447bf82c449c25/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fbuild_hacking.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fbuild_hacking.xml?ref=ac6d1200be5d5f6c49a8b6c4ae447bf82c449c25", "patch": "@@ -8,7 +8,13 @@\n       C++\n     </keyword>\n     <keyword>\n-      BUILD_HACKING\n+      build\n+    </keyword>\n+    <keyword>\n+      configure\n+    </keyword>\n+    <keyword>\n+      hacking\n     </keyword>\n     <keyword>\n       version\n@@ -38,7 +44,50 @@\n   </para>\n </section>\n \n-<section xml:id=\"build_hacking.map\"><info><title>Overview: What Comes from Where</title></info>\n+<section xml:id=\"build_hacking.overview\">\n+<info><title>Overview</title></info>\n+\n+<section xml:id=\"build_hacking.overview.basic\">\n+<info><title>General Process</title></info>\n+\n+<para>\n+  The configure process begins the act of building libstdc++, and is\n+  started via:\n+</para>\n+\n+<screen>\n+<computeroutput>\n+configure\n+</computeroutput>\n+</screen>\n+\n+<para>\n+The <filename>configure</filename> file is a script generated (via\n+<command>autoconf</command>) from the file\n+<filename>configure.ac</filename>.\n+</para>\n+\n+\n+<para>\n+  After the configure process is complete, \n+</para>\n+\n+<screen>\n+<computeroutput>\n+make all\n+</computeroutput>\n+</screen>\n+\n+<para>\n+in the build directory starts the build process. The <literal>all</literal> target comes from the <filename>Makefile</filename> file, which is  generated via <command>configure</command> from the <filename>Makefile.in</filename> file, which is in turn generated (via\n+<command>automake</command>) from the file\n+<filename>Makefile.am</filename>.\n+</para>\n+\n+</section>\n+\n+\n+<section xml:id=\"build_hacking.overview.map\"><info><title>What Comes from Where</title></info>\n \n \n   <figure>\n@@ -57,19 +106,19 @@\n   </figure>\n \n   <para>\n-    Regenerate all generated files by using the command sequence\n-    <code>\"autoreconf\"</code> at the top level of the libstdc++ source\n-    directory. The following will also work, but is much more complex:\n-    <code>\"aclocal-1.11 &amp;&amp; autoconf-2.64 &amp;&amp;\n-    autoheader-2.64 &amp;&amp; automake-1.11\"</code> The version\n-    numbers may be absent entirely or otherwise vary depending on\n-    <link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://gcc.gnu.org/install/prerequisites.html\">the\n-    current requirements</link> and your vendor's choice of\n-    installation names.\n+    Regenerate all generated files by using the command \n+    <code>autoreconf</code> at the top level of the libstdc++ source\n+    directory.\n   </para>\n </section>\n \n-<section xml:id=\"build_hacking.scripts\"><info><title>Storing Information in non-AC files (like configure.host)</title></info>\n+</section> <!-- overview -->\n+\n+\n+<section xml:id=\"build_hacking.configure\">\n+<info><title>Configure</title></info>\n+\n+<section xml:id=\"build_hacking.configure.scripts\"><info><title>Storing Information in non-AC files (like configure.host)</title></info>\n \n \n   <para>\n@@ -101,7 +150,7 @@\n </para>\n </section>\n \n-<section xml:id=\"build_hacking.conventions\"><info><title>Coding and Commenting Conventions</title></info>\n+<section xml:id=\"build_hacking.configure.conventions\"><info><title>Coding and Commenting Conventions</title></info>\n \n \n   <para>\n@@ -126,7 +175,7 @@\n   </para>\n </section>\n \n-<section xml:id=\"build_hacking.acinclude\"><info><title>The acinclude.m4 layout</title></info>\n+<section xml:id=\"build_hacking.configure.acinclude\"><info><title>The acinclude.m4 layout</title></info>\n \n   <para>\n     The nice thing about acinclude.m4/aclocal.m4 is that macros aren't\n@@ -217,7 +266,7 @@\n \n </section>\n \n-<section xml:id=\"build_hacking.enable\"><info><title><constant>GLIBCXX_ENABLE</constant>, the <literal>--enable</literal> maker</title></info>\n+<section xml:id=\"build_hacking.configure.enable\"><info><title><constant>GLIBCXX_ENABLE</constant>, the <literal>--enable</literal> maker</title></info>\n \n \n   <para>\n@@ -351,5 +400,86 @@\n </para>\n \n </section>\n+</section> <!-- configure -->\n+\n+<section xml:id=\"build_hacking.make\"><info><title>Make</title></info>\n+\n+  <para>\n+    The build process has to make all of object files needed for\n+    static or shared libraries, but first it has to generate some\n+    include files. The general order is as follows:\n+  </para>\n+\n+<orderedlist>\n+ <listitem>\n+   <para>\n+     make include files, make pre-compiled headers\n+   </para>\n+ </listitem>\n+ <listitem>\n+   <para>\n+     make libsupc++\n+   </para>\n+   <para>\n+     Generates a libtool convenience library,\n+     <filename>libsupc++convenience</filename> with language-support\n+     routines. Also generates a freestanding static library,\n+     <filename>libsupc++.a</filename>.\n+   </para>\n+ </listitem>\n+ <listitem>\n+   <para>\n+     make src\n+   </para>\n+   <para>\n+     Generates two convenience libraries, one for C++98 and one for\n+     C++11, various compability files for shared and static\n+     libraries, and then collects all the generated bits and creates\n+     the final libstdc++ libraries.\n+  </para>\n+<orderedlist>\n+ <listitem>\n+   <para>\n+     make src/c++98\n+   </para>\n+   <para>\n+     Generates a libtool convenience library,\n+     <filename>libc++98convenience</filename> with language-support\n+     routines. Uses the <literal>-std=gnu++98</literal> dialect.\n+   </para>\n+ </listitem>\n+ <listitem>\n+   <para>\n+     make src/c++11\n+   </para>\n+   <para>\n+     Generates a libtool convenience library,\n+     <filename>libc++11convenience</filename> with language-support\n+     routines. Uses the <literal>-std=gnu++11</literal> dialect.\n+   </para>\n+ </listitem>\n+ <listitem>\n+   <para>\n+     make src\n+   </para>\n+   <para>\n+     Generates needed compatibility objects for shared and static\n+     libraries. Shared-only code is seggregated at compile-time via\n+     the macro <literal>_GLIBCXX_SHARED</literal>.\n+   </para>\n+\n+   <para>\n+     Then, collects all the generated convenience libraries, adds in\n+     any required compatibility objects, and creates the final shared\n+     and static libraries: <filename>libstdc++.so</filename> and\n+     <filename>libstdc++.a</filename>.\n+   </para>\n+\n+ </listitem>\n+</orderedlist>\n+ </listitem>\n+</orderedlist>\n+\n+</section> <!-- make -->\n \n </section>"}, {"sha": "09dd28bc4a52cec55a81d6c3246080facac60a3c", "filename": "libstdc++-v3/include/Makefile.in", "status": "modified", "additions": 10, "deletions": 14, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac6d1200be5d5f6c49a8b6c4ae447bf82c449c25/libstdc%2B%2B-v3%2Finclude%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac6d1200be5d5f6c49a8b6c4ae447bf82c449c25/libstdc%2B%2B-v3%2Finclude%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2FMakefile.in?ref=ac6d1200be5d5f6c49a8b6c4ae447bf82c449c25", "patch": "@@ -1,9 +1,9 @@\n-# Makefile.in generated by automake 1.11.3 from Makefile.am.\n+# Makefile.in generated by automake 1.11.1 from Makefile.am.\n # @configure_input@\n \n # Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,\n-# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software\n-# Foundation, Inc.\n+# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,\n+# Inc.\n # This Makefile.in is free software; the Free Software Foundation\n # gives unlimited permission to copy and/or distribute it,\n # with or without modifications, as long as this notice is preserved.\n@@ -162,7 +162,6 @@ PACKAGE_URL = @PACKAGE_URL@\n PACKAGE_VERSION = @PACKAGE_VERSION@\n PATH_SEPARATOR = @PATH_SEPARATOR@\n PDFLATEX = @PDFLATEX@\n-PIC_CXXFLAGS = @PIC_CXXFLAGS@\n RANLIB = @RANLIB@\n SECTION_FLAGS = @SECTION_FLAGS@\n SECTION_LDFLAGS = @SECTION_LDFLAGS@\n@@ -210,7 +209,10 @@ glibcxx_MOFILES = @glibcxx_MOFILES@\n glibcxx_PCHFLAGS = @glibcxx_PCHFLAGS@\n glibcxx_POFILES = @glibcxx_POFILES@\n glibcxx_builddir = @glibcxx_builddir@\n+glibcxx_compiler_pic_flag = @glibcxx_compiler_pic_flag@\n+glibcxx_compiler_shared_flag = @glibcxx_compiler_shared_flag@\n glibcxx_localedir = @glibcxx_localedir@\n+glibcxx_lt_pic_flag = @glibcxx_lt_pic_flag@\n glibcxx_prefixdir = @glibcxx_prefixdir@\n glibcxx_srcdir = @glibcxx_srcdir@\n glibcxx_toolexecdir = @glibcxx_toolexecdir@\n@@ -1183,7 +1185,6 @@ Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status\n \t    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \\\n \t    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \\\n \tesac;\n-$(top_srcdir)/fragment.am:\n \n $(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)\n \tcd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh\n@@ -1219,15 +1220,10 @@ install-am: all-am\n \n installcheck: installcheck-am\n install-strip:\n-\tif test -z '$(STRIP)'; then \\\n-\t  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" \\\n-\t    install_sh_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" INSTALL_STRIP_FLAG=-s \\\n-\t      install; \\\n-\telse \\\n-\t  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" \\\n-\t    install_sh_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" INSTALL_STRIP_FLAG=-s \\\n-\t    \"INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'\" install; \\\n-\tfi\n+\t$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" \\\n+\t  install_sh_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" INSTALL_STRIP_FLAG=-s \\\n+\t  `test -z '$(STRIP)' || \\\n+\t    echo \"INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'\"` install\n mostlyclean-generic:\n \n clean-generic:"}, {"sha": "7c72f58df85b8122e96ca45cab1b9e8f041bfaa2", "filename": "libstdc++-v3/libsupc++/Makefile.am", "status": "modified", "additions": 41, "deletions": 35, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac6d1200be5d5f6c49a8b6c4ae447bf82c449c25/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac6d1200be5d5f6c49a8b6c4ae447bf82c449c25/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.am?ref=ac6d1200be5d5f6c49a8b6c4ae447bf82c449c25", "patch": "@@ -98,33 +98,6 @@ sources = \\\n libsupc___la_SOURCES = $(sources) $(c_sources)\n libsupc__convenience_la_SOURCES = $(sources) $(c_sources)\n \n-# AM_CXXFLAGS needs to be in each subdirectory so that it can be\n-# modified in a per-library or per-sub-library way.  Need to manually\n-# set this option because CONFIG_CXXFLAGS has to be after\n-# OPTIMIZE_CXXFLAGS on the compile line so that -O2 can be overridden\n-# as the occasion call for it.\n-AM_CXXFLAGS = \\\n-\t$(PIC_CXXFLAGS) \\\n-\t$(XTEMPLATE_FLAGS) \\\n-\t$(WARN_CXXFLAGS) $(OPTIMIZE_CXXFLAGS)  $(CONFIG_CXXFLAGS)\n-\n-AM_MAKEFLAGS = \\\n-\t\"gxx_include_dir=$(gxx_include_dir)\"\n-\n-\n-# Use special rules for pulling things out of libiberty.  These\n-# objects should be compiled with the \"C\" compiler, not the C++\n-# compiler, and also should not use the C++ includes.\n-C_INCLUDES = -I.. -I$(toplevel_srcdir)/libiberty -I$(toplevel_srcdir)/include\n-C_COMPILE = \\\n-\t$(CC) $(DEFS) $(C_INCLUDES) \\\n-\t$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)\n-\n-# LTCOMPILE is copied from LTCXXCOMPILE below.\n-LTCOMPILE = $(LIBTOOL) --tag CC --tag disable-shared $(LIBTOOLFLAGS) --mode=compile \\\n-\t    $(CC) $(DEFS) $(C_INCLUDES) $(PIC_CXXFLAGS) \\\n-\t    $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)\n-\n cp-demangle.c:\n \trm -f $@\n \t$(LN_S) $(toplevel_srcdir)/libiberty/cp-demangle.c $@\n@@ -155,13 +128,37 @@ nested_exception.lo: nested_exception.cc\n nested_exception.o: nested_exception.cc\n \t$(CXXCOMPILE) -std=gnu++0x -c $<\n \n-# Libtool notes\n+# AM_CXXFLAGS needs to be in each subdirectory so that it can be\n+# modified in a per-library or per-sub-library way.  Need to manually\n+# set this option because CONFIG_CXXFLAGS has to be after\n+# OPTIMIZE_CXXFLAGS on the compile line so that -O2 can be overridden\n+# as the occasion call for it.\n+AM_CXXFLAGS = \\\n+\t$(glibcxx_lt_pic_flag) $(glibcxx_compiler_shared_flag) \\\n+\t$(XTEMPLATE_FLAGS) \\\n+\t$(WARN_CXXFLAGS) $(OPTIMIZE_CXXFLAGS)  $(CONFIG_CXXFLAGS)\n+\n+AM_MAKEFLAGS = \\\n+\t\"gxx_include_dir=$(gxx_include_dir)\"\n \n-# 1) Need to explicitly set LTCXXCOMPILE so that AM_CXXFLAGS is\n-# last. (That way, things like -O2 passed down from the toplevel can\n-# be overridden by --enable-debug.)\n \n-# 2) In general, libtool expects an argument such as `--tag=CXX' when\n+# Use special rules for pulling things out of libiberty.  These\n+# objects should be compiled with the \"C\" compiler, not the C++\n+# compiler, and also should not use the C++ includes.\n+C_INCLUDES = -I.. -I$(toplevel_srcdir)/libiberty -I$(toplevel_srcdir)/include\n+C_COMPILE = \\\n+\t$(CC) $(DEFS) $(C_INCLUDES) \\\n+\t$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)\n+\n+# LTCOMPILE is copied from LTCXXCOMPILE below.\n+LTCOMPILE = $(LIBTOOL) --tag CC --tag disable-shared $(LIBTOOLFLAGS) --mode=compile \\\n+\t    $(CC) $(DEFS) $(C_INCLUDES) \\\n+\t    $(glibcxx_lt_pic_flag) $(glibcxx_compiler_shared_flag) \\\n+\t    $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)\n+\n+# Libtool notes\n+\n+# 1) In general, libtool expects an argument such as `--tag=CXX' when\n # using the C++ compiler, because that will enable the settings\n # detected when C++ support was being configured.  However, when no\n # such flag is given in the command line, libtool attempts to figure\n@@ -173,9 +170,18 @@ nested_exception.o: nested_exception.cc\n # correct solution is to add `--tag CXX' to LTCXXCOMPILE and maybe\n # CXXLINK, just after $(LIBTOOL), so that libtool doesn't have to\n # attempt to infer which configuration to use.\n-#\n-# We have to put --tag disable-shared after --tag CXX lest things\n-# CXX undo the affect of disable-shared.\n+# \n+# The second tag argument, `--tag disable-shared` means that libtool\n+# only compiles each source once, for static objects. In actuality,\n+# glibcxx_lt_pic_flag and glibcxx_compiler_shared_flag are added to\n+# the libtool command that is used create the object, which is\n+# suitable for shared libraries.  The `--tag disable-shared` must be\n+# placed after --tag CXX lest things CXX undo the affect of\n+# disable-shared.\n+\n+# 2) Need to explicitly set LTCXXCOMPILE so that AM_CXXFLAGS is\n+# last. (That way, things like -O2 passed down from the toplevel can\n+# be overridden by --enable-debug.)\n LTCXXCOMPILE = \\\n \t$(LIBTOOL) --tag CXX --tag disable-shared \\\n \t$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\"}, {"sha": "174146c42a4cab285b076f5430a99cc49b98bcbd", "filename": "libstdc++-v3/libsupc++/Makefile.in", "status": "modified", "additions": 28, "deletions": 32, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac6d1200be5d5f6c49a8b6c4ae447bf82c449c25/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac6d1200be5d5f6c49a8b6c4ae447bf82c449c25/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in?ref=ac6d1200be5d5f6c49a8b6c4ae447bf82c449c25", "patch": "@@ -1,9 +1,9 @@\n-# Makefile.in generated by automake 1.11.3 from Makefile.am.\n+# Makefile.in generated by automake 1.11.1 from Makefile.am.\n # @configure_input@\n \n # Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,\n-# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software\n-# Foundation, Inc.\n+# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,\n+# Inc.\n # This Makefile.in is free software; the Free Software Foundation\n # gives unlimited permission to copy and/or distribute it,\n # with or without modifications, as long as this notice is preserved.\n@@ -86,12 +86,6 @@ am__nobase_list = $(am__nobase_strip_setup); \\\n am__base_list = \\\n   sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\\n/ /g' | \\\n   sed '$$!N;$$!N;$$!N;$$!N;s/\\n/ /g'\n-am__uninstall_files_from_dir = { \\\n-  test -z \"$$files\" \\\n-    || { test ! -d \"$$dir\" && test ! -f \"$$dir\" && test ! -r \"$$dir\"; } \\\n-    || { echo \" ( cd '$$dir' && rm -f\" $$files \")\"; \\\n-         $(am__cd) \"$$dir\" && rm -f $$files; }; \\\n-  }\n am__installdirs = \"$(DESTDIR)$(toolexeclibdir)\" \"$(DESTDIR)$(bitsdir)\" \\\n \t\"$(DESTDIR)$(stddir)\"\n LTLIBRARIES = $(noinst_LTLIBRARIES) $(toolexeclib_LTLIBRARIES)\n@@ -228,7 +222,6 @@ PACKAGE_URL = @PACKAGE_URL@\n PACKAGE_VERSION = @PACKAGE_VERSION@\n PATH_SEPARATOR = @PATH_SEPARATOR@\n PDFLATEX = @PDFLATEX@\n-PIC_CXXFLAGS = @PIC_CXXFLAGS@\n RANLIB = @RANLIB@\n SECTION_FLAGS = @SECTION_FLAGS@\n SECTION_LDFLAGS = @SECTION_LDFLAGS@\n@@ -276,7 +269,10 @@ glibcxx_MOFILES = @glibcxx_MOFILES@\n glibcxx_PCHFLAGS = @glibcxx_PCHFLAGS@\n glibcxx_POFILES = @glibcxx_POFILES@\n glibcxx_builddir = @glibcxx_builddir@\n+glibcxx_compiler_pic_flag = @glibcxx_compiler_pic_flag@\n+glibcxx_compiler_shared_flag = @glibcxx_compiler_shared_flag@\n glibcxx_localedir = @glibcxx_localedir@\n+glibcxx_lt_pic_flag = @glibcxx_lt_pic_flag@\n glibcxx_prefixdir = @glibcxx_prefixdir@\n glibcxx_srcdir = @glibcxx_srcdir@\n glibcxx_toolexecdir = @glibcxx_toolexecdir@\n@@ -421,7 +417,7 @@ libsupc__convenience_la_SOURCES = $(sources) $(c_sources)\n # OPTIMIZE_CXXFLAGS on the compile line so that -O2 can be overridden\n # as the occasion call for it.\n AM_CXXFLAGS = \\\n-\t$(PIC_CXXFLAGS) \\\n+\t$(glibcxx_lt_pic_flag) $(glibcxx_compiler_shared_flag) \\\n \t$(XTEMPLATE_FLAGS) \\\n \t$(WARN_CXXFLAGS) $(OPTIMIZE_CXXFLAGS)  $(CONFIG_CXXFLAGS)\n \n@@ -440,17 +436,14 @@ C_COMPILE = \\\n \n # LTCOMPILE is copied from LTCXXCOMPILE below.\n LTCOMPILE = $(LIBTOOL) --tag CC --tag disable-shared $(LIBTOOLFLAGS) --mode=compile \\\n-\t    $(CC) $(DEFS) $(C_INCLUDES) $(PIC_CXXFLAGS) \\\n+\t    $(CC) $(DEFS) $(C_INCLUDES) \\\n+\t    $(glibcxx_lt_pic_flag) $(glibcxx_compiler_shared_flag) \\\n \t    $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)\n \n \n # Libtool notes\n \n-# 1) Need to explicitly set LTCXXCOMPILE so that AM_CXXFLAGS is\n-# last. (That way, things like -O2 passed down from the toplevel can\n-# be overridden by --enable-debug.)\n-\n-# 2) In general, libtool expects an argument such as `--tag=CXX' when\n+# 1) In general, libtool expects an argument such as `--tag=CXX' when\n # using the C++ compiler, because that will enable the settings\n # detected when C++ support was being configured.  However, when no\n # such flag is given in the command line, libtool attempts to figure\n@@ -462,9 +455,18 @@ LTCOMPILE = $(LIBTOOL) --tag CC --tag disable-shared $(LIBTOOLFLAGS) --mode=comp\n # correct solution is to add `--tag CXX' to LTCXXCOMPILE and maybe\n # CXXLINK, just after $(LIBTOOL), so that libtool doesn't have to\n # attempt to infer which configuration to use.\n-#\n-# We have to put --tag disable-shared after --tag CXX lest things\n-# CXX undo the affect of disable-shared.\n+# \n+# The second tag argument, `--tag disable-shared` means that libtool\n+# only compiles each source once, for static objects. In actuality,\n+# glibcxx_lt_pic_flag and glibcxx_compiler_shared_flag are added to\n+# the libtool command that is used create the object, which is\n+# suitable for shared libraries.  The `--tag disable-shared` must be\n+# placed after --tag CXX lest things CXX undo the affect of\n+# disable-shared.\n+\n+# 2) Need to explicitly set LTCXXCOMPILE so that AM_CXXFLAGS is\n+# last. (That way, things like -O2 passed down from the toplevel can\n+# be overridden by --enable-debug.)\n LTCXXCOMPILE = \\\n \t$(LIBTOOL) --tag CXX --tag disable-shared \\\n \t$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\\n@@ -516,7 +518,6 @@ Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status\n \t    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \\\n \t    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \\\n \tesac;\n-$(top_srcdir)/fragment.am:\n \n $(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)\n \tcd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh\n@@ -566,9 +567,9 @@ clean-toolexeclibLTLIBRARIES:\n \t  echo \"rm -f \\\"$${dir}/so_locations\\\"\"; \\\n \t  rm -f \"$${dir}/so_locations\"; \\\n \tdone\n-libsupc++.la: $(libsupc___la_OBJECTS) $(libsupc___la_DEPENDENCIES) $(EXTRA_libsupc___la_DEPENDENCIES) \n+libsupc++.la: $(libsupc___la_OBJECTS) $(libsupc___la_DEPENDENCIES) \n \t$(CXXLINK) -rpath $(toolexeclibdir) $(libsupc___la_OBJECTS) $(libsupc___la_LIBADD) $(LIBS)\n-libsupc++convenience.la: $(libsupc__convenience_la_OBJECTS) $(libsupc__convenience_la_DEPENDENCIES) $(EXTRA_libsupc__convenience_la_DEPENDENCIES) \n+libsupc++convenience.la: $(libsupc__convenience_la_OBJECTS) $(libsupc__convenience_la_DEPENDENCIES) \n \t$(CXXLINK)  $(libsupc__convenience_la_OBJECTS) $(libsupc__convenience_la_LIBADD) $(LIBS)\n \n mostlyclean-compile:\n@@ -669,15 +670,10 @@ install-am: all-am\n \n installcheck: installcheck-am\n install-strip:\n-\tif test -z '$(STRIP)'; then \\\n-\t  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" \\\n-\t    install_sh_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" INSTALL_STRIP_FLAG=-s \\\n-\t      install; \\\n-\telse \\\n-\t  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" \\\n-\t    install_sh_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" INSTALL_STRIP_FLAG=-s \\\n-\t    \"INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'\" install; \\\n-\tfi\n+\t$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" \\\n+\t  install_sh_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" INSTALL_STRIP_FLAG=-s \\\n+\t  `test -z '$(STRIP)' || \\\n+\t    echo \"INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'\"` install\n mostlyclean-generic:\n \n clean-generic:"}, {"sha": "e88ed8a434e54e4340da8053beaf7fef62a2693f", "filename": "libstdc++-v3/po/Makefile.in", "status": "modified", "additions": 10, "deletions": 14, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac6d1200be5d5f6c49a8b6c4ae447bf82c449c25/libstdc%2B%2B-v3%2Fpo%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac6d1200be5d5f6c49a8b6c4ae447bf82c449c25/libstdc%2B%2B-v3%2Fpo%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fpo%2FMakefile.in?ref=ac6d1200be5d5f6c49a8b6c4ae447bf82c449c25", "patch": "@@ -1,9 +1,9 @@\n-# Makefile.in generated by automake 1.11.3 from Makefile.am.\n+# Makefile.in generated by automake 1.11.1 from Makefile.am.\n # @configure_input@\n \n # Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,\n-# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software\n-# Foundation, Inc.\n+# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,\n+# Inc.\n # This Makefile.in is free software; the Free Software Foundation\n # gives unlimited permission to copy and/or distribute it,\n # with or without modifications, as long as this notice is preserved.\n@@ -162,7 +162,6 @@ PACKAGE_URL = @PACKAGE_URL@\n PACKAGE_VERSION = @PACKAGE_VERSION@\n PATH_SEPARATOR = @PATH_SEPARATOR@\n PDFLATEX = @PDFLATEX@\n-PIC_CXXFLAGS = @PIC_CXXFLAGS@\n RANLIB = @RANLIB@\n SECTION_FLAGS = @SECTION_FLAGS@\n SECTION_LDFLAGS = @SECTION_LDFLAGS@\n@@ -210,7 +209,10 @@ glibcxx_MOFILES = @glibcxx_MOFILES@\n glibcxx_PCHFLAGS = @glibcxx_PCHFLAGS@\n glibcxx_POFILES = @glibcxx_POFILES@\n glibcxx_builddir = @glibcxx_builddir@\n+glibcxx_compiler_pic_flag = @glibcxx_compiler_pic_flag@\n+glibcxx_compiler_shared_flag = @glibcxx_compiler_shared_flag@\n glibcxx_localedir = @glibcxx_localedir@\n+glibcxx_lt_pic_flag = @glibcxx_lt_pic_flag@\n glibcxx_prefixdir = @glibcxx_prefixdir@\n glibcxx_srcdir = @glibcxx_srcdir@\n glibcxx_toolexecdir = @glibcxx_toolexecdir@\n@@ -319,7 +321,6 @@ Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status\n \t    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \\\n \t    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \\\n \tesac;\n-$(top_srcdir)/fragment.am:\n \n $(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)\n \tcd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh\n@@ -355,15 +356,10 @@ install-am: all-am\n \n installcheck: installcheck-am\n install-strip:\n-\tif test -z '$(STRIP)'; then \\\n-\t  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" \\\n-\t    install_sh_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" INSTALL_STRIP_FLAG=-s \\\n-\t      install; \\\n-\telse \\\n-\t  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" \\\n-\t    install_sh_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" INSTALL_STRIP_FLAG=-s \\\n-\t    \"INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'\" install; \\\n-\tfi\n+\t$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" \\\n+\t  install_sh_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" INSTALL_STRIP_FLAG=-s \\\n+\t  `test -z '$(STRIP)' || \\\n+\t    echo \"INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'\"` install\n mostlyclean-generic:\n \n clean-generic:"}, {"sha": "827f46205fafef583166a94c3bae632300d15837", "filename": "libstdc++-v3/python/Makefile.in", "status": "modified", "additions": 13, "deletions": 21, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac6d1200be5d5f6c49a8b6c4ae447bf82c449c25/libstdc%2B%2B-v3%2Fpython%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac6d1200be5d5f6c49a8b6c4ae447bf82c449c25/libstdc%2B%2B-v3%2Fpython%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fpython%2FMakefile.in?ref=ac6d1200be5d5f6c49a8b6c4ae447bf82c449c25", "patch": "@@ -1,9 +1,9 @@\n-# Makefile.in generated by automake 1.11.3 from Makefile.am.\n+# Makefile.in generated by automake 1.11.1 from Makefile.am.\n # @configure_input@\n \n # Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,\n-# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software\n-# Foundation, Inc.\n+# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,\n+# Inc.\n # This Makefile.in is free software; the Free Software Foundation\n # gives unlimited permission to copy and/or distribute it,\n # with or without modifications, as long as this notice is preserved.\n@@ -88,12 +88,6 @@ am__nobase_list = $(am__nobase_strip_setup); \\\n am__base_list = \\\n   sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\\n/ /g' | \\\n   sed '$$!N;$$!N;$$!N;$$!N;s/\\n/ /g'\n-am__uninstall_files_from_dir = { \\\n-  test -z \"$$files\" \\\n-    || { test ! -d \"$$dir\" && test ! -f \"$$dir\" && test ! -r \"$$dir\"; } \\\n-    || { echo \" ( cd '$$dir' && rm -f\" $$files \")\"; \\\n-         $(am__cd) \"$$dir\" && rm -f $$files; }; \\\n-  }\n am__installdirs = \"$(DESTDIR)$(pythondir)\"\n DATA = $(nobase_python_DATA)\n ABI_TWEAKS_SRCDIR = @ABI_TWEAKS_SRCDIR@\n@@ -192,7 +186,6 @@ PACKAGE_URL = @PACKAGE_URL@\n PACKAGE_VERSION = @PACKAGE_VERSION@\n PATH_SEPARATOR = @PATH_SEPARATOR@\n PDFLATEX = @PDFLATEX@\n-PIC_CXXFLAGS = @PIC_CXXFLAGS@\n RANLIB = @RANLIB@\n SECTION_FLAGS = @SECTION_FLAGS@\n SECTION_LDFLAGS = @SECTION_LDFLAGS@\n@@ -240,7 +233,10 @@ glibcxx_MOFILES = @glibcxx_MOFILES@\n glibcxx_PCHFLAGS = @glibcxx_PCHFLAGS@\n glibcxx_POFILES = @glibcxx_POFILES@\n glibcxx_builddir = @glibcxx_builddir@\n+glibcxx_compiler_pic_flag = @glibcxx_compiler_pic_flag@\n+glibcxx_compiler_shared_flag = @glibcxx_compiler_shared_flag@\n glibcxx_localedir = @glibcxx_localedir@\n+glibcxx_lt_pic_flag = @glibcxx_lt_pic_flag@\n glibcxx_prefixdir = @glibcxx_prefixdir@\n glibcxx_srcdir = @glibcxx_srcdir@\n glibcxx_toolexecdir = @glibcxx_toolexecdir@\n@@ -339,7 +335,6 @@ Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status\n \t    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \\\n \t    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \\\n \tesac;\n-$(top_srcdir)/fragment.am:\n \n $(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)\n \tcd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh\n@@ -375,7 +370,9 @@ uninstall-nobase_pythonDATA:\n \t@$(NORMAL_UNINSTALL)\n \t@list='$(nobase_python_DATA)'; test -n \"$(pythondir)\" || list=; \\\n \t$(am__nobase_strip_setup); files=`$(am__nobase_strip)`; \\\n-\tdir='$(DESTDIR)$(pythondir)'; $(am__uninstall_files_from_dir)\n+\ttest -n \"$$files\" || exit 0; \\\n+\techo \" ( cd '$(DESTDIR)$(pythondir)' && rm -f\" $$files \")\"; \\\n+\tcd \"$(DESTDIR)$(pythondir)\" && rm -f $$files\n tags: TAGS\n TAGS:\n \n@@ -399,15 +396,10 @@ install-am: all-am\n \n installcheck: installcheck-am\n install-strip:\n-\tif test -z '$(STRIP)'; then \\\n-\t  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" \\\n-\t    install_sh_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" INSTALL_STRIP_FLAG=-s \\\n-\t      install; \\\n-\telse \\\n-\t  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" \\\n-\t    install_sh_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" INSTALL_STRIP_FLAG=-s \\\n-\t    \"INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'\" install; \\\n-\tfi\n+\t$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" \\\n+\t  install_sh_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" INSTALL_STRIP_FLAG=-s \\\n+\t  `test -z '$(STRIP)' || \\\n+\t    echo \"INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'\"` install\n mostlyclean-generic:\n \n clean-generic:"}, {"sha": "f64dca4a200de4ea18d466a3e05a6308a1b725a8", "filename": "libstdc++-v3/src/Makefile.am", "status": "modified", "additions": 38, "deletions": 7, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac6d1200be5d5f6c49a8b6c4ae447bf82c449c25/libstdc%2B%2B-v3%2Fsrc%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac6d1200be5d5f6c49a8b6c4ae447bf82c449c25/libstdc%2B%2B-v3%2Fsrc%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2FMakefile.am?ref=ac6d1200be5d5f6c49a8b6c4ae447bf82c449c25", "patch": "@@ -116,22 +116,41 @@ compatibility-thread-c++0x.lo: compatibility-thread-c++0x.cc\n compatibility-thread-c++0x.o: compatibility-thread-c++0x.cc\n \t$(CXXCOMPILE) -std=gnu++11 -c $<\n \n-# AM_CXXFLAGS needs to be in each subdirectory so that it can be\n+# A note on compatibility and static libraries.\n+# \n+# static lib == linked against only this version, should not need compat\n+# shared lib == linked against potentially all compat versions\n+#\n+# Thus, the shared libs have more compat symbols, which can be found\n+# segregated in the sources with -D_GLIBCXX_SHARED.\n+#\n+# In the sub-directories of libsupc++, src/c++98, src/c++11, only\n+# -prefer-pic objects are generated for the convenience libraries.\n+# \n+# In the main src directory, make shared and static objects just for\n+# the compat libraries. Shared objects are compiled with -prefer-pic\n+# -D_GLIBCXX_SHARED and in the .libs sub-directory, static objects are\n+# compiled with -prefer-pic (ie, -fPIC but not -D_GLIBCXX_SHARED) and\n+# the main src directory.\n+#\n+# Why are objects destined for libstdc++.a compiled with -fPIC? First,\n+# because -fPIC is not harmful to use for objects destined for static\n+# libraries. In addition, using -fPIC will allow the use of static\n+# libstdc++.a in the creation of other C++ shared libraries.\n+\n+# AM_CXXFLAGS needs to be in each sub-directory so that it can be\n # modified in a per-library or per-sub-library way.  Need to manually\n # set this option because CONFIG_CXXFLAGS has to be after\n # OPTIMIZE_CXXFLAGS on the compile line so that -O2 can be overridden\n # as the occasion calls for it.\n AM_CXXFLAGS = \\\n+\t$(glibcxx_compiler_pic_flag) \\\n \t$(XTEMPLATE_FLAGS) \\\n \t$(WARN_CXXFLAGS) $(OPTIMIZE_CXXFLAGS) $(CONFIG_CXXFLAGS)\n \n # Libtool notes\n \n-# 1) Need to explicitly set LTCXXCOMPILE so that AM_CXXFLAGS is\n-# last. (That way, things like -O2 passed down from the toplevel can\n-# be overridden by --enable-debug.)\n-\n-# 2) In general, libtool expects an argument such as `--tag=CXX' when\n+# 1) In general, libtool expects an argument such as `--tag=CXX' when\n # using the C++ compiler, because that will enable the settings\n # detected when C++ support was being configured.  However, when no\n # such flag is given in the command line, libtool attempts to figure\n@@ -142,7 +161,19 @@ AM_CXXFLAGS = \\\n # can't decide which configuration to use, and it gives up.  The\n # correct solution is to add `--tag CXX' to LTCXXCOMPILE and maybe\n # CXXLINK, just after $(LIBTOOL), so that libtool doesn't have to\n-# attempt to infer which configuration to use\n+# attempt to infer which configuration to use.\n+# \n+# The second tag argument, `--tag disable-shared` means that libtool\n+# only compiles each source once, for static objects. In actuality,\n+# glibcxx_lt_pic_flag and glibcxx_compiler_shared_flag are added to\n+# the libtool command that is used create the object, which is\n+# suitable for shared libraries.  The `--tag disable-shared` must be\n+# placed after --tag CXX lest things CXX undo the affect of\n+# disable-shared.\n+\n+# 2) Need to explicitly set LTCXXCOMPILE so that AM_CXXFLAGS is\n+# last. (That way, things like -O2 passed down from the toplevel can\n+# be overridden by --enable-debug.)\n LTCXXCOMPILE = \\\n \t$(LIBTOOL) --tag CXX \\\n \t$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\"}, {"sha": "df3d1b22e253f20f83726145c61723a3138a2de8", "filename": "libstdc++-v3/src/Makefile.in", "status": "modified", "additions": 49, "deletions": 28, "changes": 77, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac6d1200be5d5f6c49a8b6c4ae447bf82c449c25/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac6d1200be5d5f6c49a8b6c4ae447bf82c449c25/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in?ref=ac6d1200be5d5f6c49a8b6c4ae447bf82c449c25", "patch": "@@ -1,9 +1,9 @@\n-# Makefile.in generated by automake 1.11.3 from Makefile.am.\n+# Makefile.in generated by automake 1.11.1 from Makefile.am.\n # @configure_input@\n \n # Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,\n-# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software\n-# Foundation, Inc.\n+# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,\n+# Inc.\n # This Makefile.in is free software; the Free Software Foundation\n # gives unlimited permission to copy and/or distribute it,\n # with or without modifications, as long as this notice is preserved.\n@@ -85,12 +85,6 @@ am__nobase_list = $(am__nobase_strip_setup); \\\n am__base_list = \\\n   sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\\n/ /g' | \\\n   sed '$$!N;$$!N;$$!N;$$!N;s/\\n/ /g'\n-am__uninstall_files_from_dir = { \\\n-  test -z \"$$files\" \\\n-    || { test ! -d \"$$dir\" && test ! -f \"$$dir\" && test ! -r \"$$dir\"; } \\\n-    || { echo \" ( cd '$$dir' && rm -f\" $$files \")\"; \\\n-         $(am__cd) \"$$dir\" && rm -f $$files; }; \\\n-  }\n am__installdirs = \"$(DESTDIR)$(toolexeclibdir)\"\n LTLIBRARIES = $(toolexeclib_LTLIBRARIES)\n am__DEPENDENCIES_1 =\n@@ -221,7 +215,6 @@ PACKAGE_URL = @PACKAGE_URL@\n PACKAGE_VERSION = @PACKAGE_VERSION@\n PATH_SEPARATOR = @PATH_SEPARATOR@\n PDFLATEX = @PDFLATEX@\n-PIC_CXXFLAGS = @PIC_CXXFLAGS@\n RANLIB = @RANLIB@\n SECTION_FLAGS = @SECTION_FLAGS@\n SECTION_LDFLAGS = @SECTION_LDFLAGS@\n@@ -269,7 +262,10 @@ glibcxx_MOFILES = @glibcxx_MOFILES@\n glibcxx_PCHFLAGS = @glibcxx_PCHFLAGS@\n glibcxx_POFILES = @glibcxx_POFILES@\n glibcxx_builddir = @glibcxx_builddir@\n+glibcxx_compiler_pic_flag = @glibcxx_compiler_pic_flag@\n+glibcxx_compiler_shared_flag = @glibcxx_compiler_shared_flag@\n glibcxx_localedir = @glibcxx_localedir@\n+glibcxx_lt_pic_flag = @glibcxx_lt_pic_flag@\n glibcxx_prefixdir = @glibcxx_prefixdir@\n glibcxx_srcdir = @glibcxx_srcdir@\n glibcxx_toolexecdir = @glibcxx_toolexecdir@\n@@ -382,23 +378,42 @@ libstdc___la_LINK = $(CXXLINK) $(libstdc___la_LDFLAGS)\n # Use special rules for parallel mode compilation.\n PARALLEL_FLAGS = -fopenmp -D_GLIBCXX_PARALLEL -I$(glibcxx_builddir)/../libgomp\n \n-# AM_CXXFLAGS needs to be in each subdirectory so that it can be\n+# A note on compatibility and static libraries.\n+# \n+# static lib == linked against only this version, should not need compat\n+# shared lib == linked against potentially all compat versions\n+#\n+# Thus, the shared libs have more compat symbols, which can be found\n+# segregated in the sources with -D_GLIBCXX_SHARED.\n+#\n+# In the sub-directories of libsupc++, src/c++98, src/c++11, only\n+# -prefer-pic objects are generated for the convenience libraries.\n+# \n+# In the main src directory, make shared and static objects just for\n+# the compat libraries. Shared objects are compiled with -prefer-pic\n+# -D_GLIBCXX_SHARED and in the .libs sub-directory, static objects are\n+# compiled with -prefer-pic (ie, -fPIC but not -D_GLIBCXX_SHARED) and\n+# the main src directory.\n+#\n+# Why are objects destined for libstdc++.a compiled with -fPIC? First,\n+# because -fPIC is not harmful to use for objects destined for static\n+# libraries. In addition, using -fPIC will allow the use of static\n+# libstdc++.a in the creation of other C++ shared libraries.\n+\n+# AM_CXXFLAGS needs to be in each sub-directory so that it can be\n # modified in a per-library or per-sub-library way.  Need to manually\n # set this option because CONFIG_CXXFLAGS has to be after\n # OPTIMIZE_CXXFLAGS on the compile line so that -O2 can be overridden\n # as the occasion calls for it.\n AM_CXXFLAGS = \\\n+\t$(glibcxx_compiler_pic_flag) \\\n \t$(XTEMPLATE_FLAGS) \\\n \t$(WARN_CXXFLAGS) $(OPTIMIZE_CXXFLAGS) $(CONFIG_CXXFLAGS)\n \n \n # Libtool notes\n \n-# 1) Need to explicitly set LTCXXCOMPILE so that AM_CXXFLAGS is\n-# last. (That way, things like -O2 passed down from the toplevel can\n-# be overridden by --enable-debug.)\n-\n-# 2) In general, libtool expects an argument such as `--tag=CXX' when\n+# 1) In general, libtool expects an argument such as `--tag=CXX' when\n # using the C++ compiler, because that will enable the settings\n # detected when C++ support was being configured.  However, when no\n # such flag is given in the command line, libtool attempts to figure\n@@ -409,7 +424,19 @@ AM_CXXFLAGS = \\\n # can't decide which configuration to use, and it gives up.  The\n # correct solution is to add `--tag CXX' to LTCXXCOMPILE and maybe\n # CXXLINK, just after $(LIBTOOL), so that libtool doesn't have to\n-# attempt to infer which configuration to use\n+# attempt to infer which configuration to use.\n+# \n+# The second tag argument, `--tag disable-shared` means that libtool\n+# only compiles each source once, for static objects. In actuality,\n+# glibcxx_lt_pic_flag and glibcxx_compiler_shared_flag are added to\n+# the libtool command that is used create the object, which is\n+# suitable for shared libraries.  The `--tag disable-shared` must be\n+# placed after --tag CXX lest things CXX undo the affect of\n+# disable-shared.\n+\n+# 2) Need to explicitly set LTCXXCOMPILE so that AM_CXXFLAGS is\n+# last. (That way, things like -O2 passed down from the toplevel can\n+# be overridden by --enable-debug.)\n LTCXXCOMPILE = \\\n \t$(LIBTOOL) --tag CXX \\\n \t$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\\n@@ -480,7 +507,6 @@ Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status\n \t    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \\\n \t    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \\\n \tesac;\n-$(top_srcdir)/fragment.am:\n \n $(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)\n \tcd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh\n@@ -521,7 +547,7 @@ clean-toolexeclibLTLIBRARIES:\n \t  echo \"rm -f \\\"$${dir}/so_locations\\\"\"; \\\n \t  rm -f \"$${dir}/so_locations\"; \\\n \tdone\n-libstdc++.la: $(libstdc___la_OBJECTS) $(libstdc___la_DEPENDENCIES) $(EXTRA_libstdc___la_DEPENDENCIES) \n+libstdc++.la: $(libstdc___la_OBJECTS) $(libstdc___la_DEPENDENCIES) \n \t$(libstdc___la_LINK) -rpath $(toolexeclibdir) $(libstdc___la_OBJECTS) $(libstdc___la_LIBADD) $(LIBS)\n \n mostlyclean-compile:\n@@ -697,15 +723,10 @@ install-am: all-am\n \n installcheck: installcheck-recursive\n install-strip:\n-\tif test -z '$(STRIP)'; then \\\n-\t  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" \\\n-\t    install_sh_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" INSTALL_STRIP_FLAG=-s \\\n-\t      install; \\\n-\telse \\\n-\t  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" \\\n-\t    install_sh_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" INSTALL_STRIP_FLAG=-s \\\n-\t    \"INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'\" install; \\\n-\tfi\n+\t$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" \\\n+\t  install_sh_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" INSTALL_STRIP_FLAG=-s \\\n+\t  `test -z '$(STRIP)' || \\\n+\t    echo \"INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'\"` install\n mostlyclean-generic:\n \n clean-generic:"}, {"sha": "1e3dd999a61f4d6815d64848d782134bac1b1240", "filename": "libstdc++-v3/src/c++11/Makefile.am", "status": "modified", "additions": 14, "deletions": 8, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac6d1200be5d5f6c49a8b6c4ae447bf82c449c25/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac6d1200be5d5f6c49a8b6c4ae447bf82c449c25/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2FMakefile.am?ref=ac6d1200be5d5f6c49a8b6c4ae447bf82c449c25", "patch": "@@ -69,7 +69,7 @@ libc__11convenience_la_SOURCES = $(sources)  $(inst_sources)\n # as the occasion calls for it.\n AM_CXXFLAGS = \\\n \t-std=gnu++11 \\\n-\t$(PIC_CXXFLAGS) \\\n+\t$(glibcxx_lt_pic_flag) $(glibcxx_compiler_shared_flag) \\\n \t$(XTEMPLATE_FLAGS) \\\n \t$(WARN_CXXFLAGS) $(OPTIMIZE_CXXFLAGS) $(CONFIG_CXXFLAGS)\n \n@@ -78,11 +78,7 @@ AM_MAKEFLAGS = \\\n \n # Libtool notes\n \n-# 1) Need to explicitly set LTCXXCOMPILE so that AM_CXXFLAGS is\n-# last. (That way, things like -O2 passed down from the toplevel can\n-# be overridden by --enable-debug.)\n-\n-# 2) In general, libtool expects an argument such as `--tag=CXX' when\n+# 1) In general, libtool expects an argument such as `--tag=CXX' when\n # using the C++ compiler, because that will enable the settings\n # detected when C++ support was being configured.  However, when no\n # such flag is given in the command line, libtool attempts to figure\n@@ -94,8 +90,18 @@ AM_MAKEFLAGS = \\\n # correct solution is to add `--tag CXX' to LTCXXCOMPILE and maybe\n # CXXLINK, just after $(LIBTOOL), so that libtool doesn't have to\n # attempt to infer which configuration to use.\n-# We have to put --tag disable-shared after --tag CXX lest things\n-# CXX undo the affect of disable-shared.\n+# \n+# The second tag argument, `--tag disable-shared` means that libtool\n+# only compiles each source once, for static objects. In actuality,\n+# glibcxx_lt_pic_flag and glibcxx_compiler_shared_flag are added to\n+# the libtool command that is used create the object, which is\n+# suitable for shared libraries.  The `--tag disable-shared` must be\n+# placed after --tag CXX lest things CXX undo the affect of\n+# disable-shared.\n+\n+# 2) Need to explicitly set LTCXXCOMPILE so that AM_CXXFLAGS is\n+# last. (That way, things like -O2 passed down from the toplevel can\n+# be overridden by --enable-debug.)\n LTCXXCOMPILE = \\\n \t$(LIBTOOL) --tag CXX --tag disable-shared \\\n \t$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\"}, {"sha": "ee5efaa2c781e27b50df169d14d9102b74c4b06c", "filename": "libstdc++-v3/src/c++11/Makefile.in", "status": "modified", "additions": 25, "deletions": 23, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac6d1200be5d5f6c49a8b6c4ae447bf82c449c25/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac6d1200be5d5f6c49a8b6c4ae447bf82c449c25/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2FMakefile.in?ref=ac6d1200be5d5f6c49a8b6c4ae447bf82c449c25", "patch": "@@ -1,9 +1,9 @@\n-# Makefile.in generated by automake 1.11.3 from Makefile.am.\n+# Makefile.in generated by automake 1.11.1 from Makefile.am.\n # @configure_input@\n \n # Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,\n-# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software\n-# Foundation, Inc.\n+# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,\n+# Inc.\n # This Makefile.in is free software; the Free Software Foundation\n # gives unlimited permission to copy and/or distribute it,\n # with or without modifications, as long as this notice is preserved.\n@@ -179,7 +179,6 @@ PACKAGE_URL = @PACKAGE_URL@\n PACKAGE_VERSION = @PACKAGE_VERSION@\n PATH_SEPARATOR = @PATH_SEPARATOR@\n PDFLATEX = @PDFLATEX@\n-PIC_CXXFLAGS = @PIC_CXXFLAGS@\n RANLIB = @RANLIB@\n SECTION_FLAGS = @SECTION_FLAGS@\n SECTION_LDFLAGS = @SECTION_LDFLAGS@\n@@ -227,7 +226,10 @@ glibcxx_MOFILES = @glibcxx_MOFILES@\n glibcxx_PCHFLAGS = @glibcxx_PCHFLAGS@\n glibcxx_POFILES = @glibcxx_POFILES@\n glibcxx_builddir = @glibcxx_builddir@\n+glibcxx_compiler_pic_flag = @glibcxx_compiler_pic_flag@\n+glibcxx_compiler_shared_flag = @glibcxx_compiler_shared_flag@\n glibcxx_localedir = @glibcxx_localedir@\n+glibcxx_lt_pic_flag = @glibcxx_lt_pic_flag@\n glibcxx_prefixdir = @glibcxx_prefixdir@\n glibcxx_srcdir = @glibcxx_srcdir@\n glibcxx_toolexecdir = @glibcxx_toolexecdir@\n@@ -334,7 +336,7 @@ libc__11convenience_la_SOURCES = $(sources)  $(inst_sources)\n # as the occasion calls for it.\n AM_CXXFLAGS = \\\n \t-std=gnu++11 \\\n-\t$(PIC_CXXFLAGS) \\\n+\t$(glibcxx_lt_pic_flag) $(glibcxx_compiler_shared_flag) \\\n \t$(XTEMPLATE_FLAGS) \\\n \t$(WARN_CXXFLAGS) $(OPTIMIZE_CXXFLAGS) $(CONFIG_CXXFLAGS)\n \n@@ -344,11 +346,7 @@ AM_MAKEFLAGS = \\\n \n # Libtool notes\n \n-# 1) Need to explicitly set LTCXXCOMPILE so that AM_CXXFLAGS is\n-# last. (That way, things like -O2 passed down from the toplevel can\n-# be overridden by --enable-debug.)\n-\n-# 2) In general, libtool expects an argument such as `--tag=CXX' when\n+# 1) In general, libtool expects an argument such as `--tag=CXX' when\n # using the C++ compiler, because that will enable the settings\n # detected when C++ support was being configured.  However, when no\n # such flag is given in the command line, libtool attempts to figure\n@@ -360,8 +358,18 @@ AM_MAKEFLAGS = \\\n # correct solution is to add `--tag CXX' to LTCXXCOMPILE and maybe\n # CXXLINK, just after $(LIBTOOL), so that libtool doesn't have to\n # attempt to infer which configuration to use.\n-# We have to put --tag disable-shared after --tag CXX lest things\n-# CXX undo the affect of disable-shared.\n+# \n+# The second tag argument, `--tag disable-shared` means that libtool\n+# only compiles each source once, for static objects. In actuality,\n+# glibcxx_lt_pic_flag and glibcxx_compiler_shared_flag are added to\n+# the libtool command that is used create the object, which is\n+# suitable for shared libraries.  The `--tag disable-shared` must be\n+# placed after --tag CXX lest things CXX undo the affect of\n+# disable-shared.\n+\n+# 2) Need to explicitly set LTCXXCOMPILE so that AM_CXXFLAGS is\n+# last. (That way, things like -O2 passed down from the toplevel can\n+# be overridden by --enable-debug.)\n LTCXXCOMPILE = \\\n \t$(LIBTOOL) --tag CXX --tag disable-shared \\\n \t$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\\n@@ -407,7 +415,6 @@ Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status\n \t    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \\\n \t    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \\\n \tesac;\n-$(top_srcdir)/fragment.am:\n \n $(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)\n \tcd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh\n@@ -426,7 +433,7 @@ clean-noinstLTLIBRARIES:\n \t  echo \"rm -f \\\"$${dir}/so_locations\\\"\"; \\\n \t  rm -f \"$${dir}/so_locations\"; \\\n \tdone\n-libc++11convenience.la: $(libc__11convenience_la_OBJECTS) $(libc__11convenience_la_DEPENDENCIES) $(EXTRA_libc__11convenience_la_DEPENDENCIES) \n+libc++11convenience.la: $(libc__11convenience_la_OBJECTS) $(libc__11convenience_la_DEPENDENCIES) \n \t$(CXXLINK)  $(libc__11convenience_la_OBJECTS) $(libc__11convenience_la_LIBADD) $(LIBS)\n \n mostlyclean-compile:\n@@ -515,15 +522,10 @@ install-am: all-am\n \n installcheck: installcheck-am\n install-strip:\n-\tif test -z '$(STRIP)'; then \\\n-\t  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" \\\n-\t    install_sh_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" INSTALL_STRIP_FLAG=-s \\\n-\t      install; \\\n-\telse \\\n-\t  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" \\\n-\t    install_sh_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" INSTALL_STRIP_FLAG=-s \\\n-\t    \"INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'\" install; \\\n-\tfi\n+\t$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" \\\n+\t  install_sh_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" INSTALL_STRIP_FLAG=-s \\\n+\t  `test -z '$(STRIP)' || \\\n+\t    echo \"INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'\"` install\n mostlyclean-generic:\n \n clean-generic:"}, {"sha": "3ad0b93974ec67b80e292016db4b28e71498e2b7", "filename": "libstdc++-v3/src/c++11/compatibility-atomic-c++0x.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac6d1200be5d5f6c49a8b6c4ae447bf82c449c25/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fcompatibility-atomic-c%2B%2B0x.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac6d1200be5d5f6c49a8b6c4ae447bf82c449c25/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fcompatibility-atomic-c%2B%2B0x.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fcompatibility-atomic-c%2B%2B0x.cc?ref=ac6d1200be5d5f6c49a8b6c4ae447bf82c449c25", "patch": "@@ -30,7 +30,7 @@\n // XXX GLIBCXX_ABI Deprecated\n // gcc-4.7.0\n \n-#ifdef PIC\n+#ifdef _GLIBCXX_SHARED\n \n #define LOGSIZE 4\n \n@@ -147,7 +147,7 @@ _GLIBCXX_END_NAMESPACE_VERSION\n // In the future, GLIBCXX_ABI > 6 should remove all uses of\n // _GLIBCXX_*_SYMVER macros in this file.\n \n-#if defined(_GLIBCXX_SYMVER_GNU) && defined(PIC) \\\n+#if defined(_GLIBCXX_SYMVER_GNU) && defined(_GLIBCXX_SHARED) \\\n     && defined(_GLIBCXX_HAVE_AS_SYMVER_DIRECTIVE) \\\n     && defined(_GLIBCXX_HAVE_SYMVER_SYMBOL_RENAMING_RUNTIME_SUPPORT)\n "}, {"sha": "306bad55faf752ad482ef144ff4636b7ac6e6beb", "filename": "libstdc++-v3/src/c++11/compatibility-c++0x.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac6d1200be5d5f6c49a8b6c4ae447bf82c449c25/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fcompatibility-c%2B%2B0x.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac6d1200be5d5f6c49a8b6c4ae447bf82c449c25/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fcompatibility-c%2B%2B0x.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fcompatibility-c%2B%2B0x.cc?ref=ac6d1200be5d5f6c49a8b6c4ae447bf82c449c25", "patch": "@@ -30,7 +30,7 @@\n # error \"compatibility-c++0x.cc must be compiled with -std=gnu++0x\"\n #endif\n \n-#ifdef PIC\n+#ifdef _GLIBCXX_SHARED\n \n namespace std _GLIBCXX_VISIBILITY(default)\n {"}, {"sha": "5e87b53192329ee92fcac8108865f02f8a96e33c", "filename": "libstdc++-v3/src/c++11/compatibility-thread-c++0x.cc", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac6d1200be5d5f6c49a8b6c4ae447bf82c449c25/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fcompatibility-thread-c%2B%2B0x.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac6d1200be5d5f6c49a8b6c4ae447bf82c449c25/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fcompatibility-thread-c%2B%2B0x.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fcompatibility-thread-c%2B%2B0x.cc?ref=ac6d1200be5d5f6c49a8b6c4ae447bf82c449c25", "patch": "@@ -23,7 +23,7 @@\n // <http://www.gnu.org/licenses/>.\n \n #include <bits/c++config.h>\n-#if defined(_GLIBCXX_HAVE_TLS) && defined(PIC)\n+#if defined(_GLIBCXX_HAVE_TLS) && defined(_GLIBCXX_SHARED)\n #define _GLIBCXX_ASYNC_ABI_COMPAT\n #endif\n \n@@ -40,7 +40,7 @@\n // XXX GLIBCXX_ABI Deprecated\n // gcc-4.6.0\n // <future> export changes\n-#if defined(_GLIBCXX_SYMVER_GNU) && defined(PIC) \\\n+#if defined(_GLIBCXX_SYMVER_GNU) && defined(_GLIBCXX_SHARED) \\\n     && defined(_GLIBCXX_HAVE_AS_SYMVER_DIRECTIVE) \\\n     && defined(_GLIBCXX_HAVE_SYMVER_SYMBOL_RENAMING_RUNTIME_SUPPORT)\n \n@@ -57,7 +57,7 @@ _GLIBCXX_ASM_SYMVER(_ZN9__gnu_cxx15future_categoryE, _ZSt15future_category, GLIB\n // gcc-4.6.0\n // <mutex> export changes\n #if defined(_GLIBCXX_HAS_GTHREADS) && defined(_GLIBCXX_USE_C99_STDINT_TR1)\n-#if defined(_GLIBCXX_SYMVER_GNU) && defined(PIC) \\\n+#if defined(_GLIBCXX_SYMVER_GNU) && defined(_GLIBCXX_SHARED) \\\n     && defined(_GLIBCXX_HAVE_AS_SYMVER_DIRECTIVE) \\\n     && defined(_GLIBCXX_HAVE_SYMVER_SYMBOL_RENAMING_RUNTIME_SUPPORT)\n \n@@ -82,7 +82,7 @@ _GLIBCXX_ASM_SYMVER(_ZN9__gnu_cxx11try_to_lockE, _ZSt11try_to_lock, GLIBCXX_3.4.\n // <future> export changes\n #if defined(_GLIBCXX_HAS_GTHREADS) && defined(_GLIBCXX_USE_C99_STDINT_TR1) \\\n   && (ATOMIC_INT_LOCK_FREE > 1)\n-#if defined(_GLIBCXX_HAVE_TLS) && defined(PIC)\n+#if defined(_GLIBCXX_HAVE_TLS) && defined(_GLIBCXX_SHARED)\n namespace std _GLIBCXX_VISIBILITY(default)\n {\n _GLIBCXX_BEGIN_NAMESPACE_VERSION"}, {"sha": "c153a59336da65aedb9f6793447fe1d5a1e20b0b", "filename": "libstdc++-v3/src/c++98/Makefile.am", "status": "modified", "additions": 14, "deletions": 8, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac6d1200be5d5f6c49a8b6c4ae447bf82c449c25/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac6d1200be5d5f6c49a8b6c4ae447bf82c449c25/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2FMakefile.am?ref=ac6d1200be5d5f6c49a8b6c4ae447bf82c449c25", "patch": "@@ -172,7 +172,7 @@ parallel_settings.o: parallel_settings.cc\n # OPTIMIZE_CXXFLAGS on the compile line so that -O2 can be overridden\n # as the occasion calls for it.\n AM_CXXFLAGS = \\\n-\t$(PIC_CXXFLAGS) \\\n+\t$(glibcxx_lt_pic_flag) $(glibcxx_compiler_shared_flag) \\\n \t$(XTEMPLATE_FLAGS) \\\n \t$(WARN_CXXFLAGS) $(OPTIMIZE_CXXFLAGS) $(CONFIG_CXXFLAGS)\n \n@@ -181,11 +181,7 @@ AM_MAKEFLAGS = \\\n \n # Libtool notes\n \n-# 1) Need to explicitly set LTCXXCOMPILE so that AM_CXXFLAGS is\n-# last. (That way, things like -O2 passed down from the toplevel can\n-# be overridden by --enable-debug.)\n-\n-# 2) In general, libtool expects an argument such as `--tag=CXX' when\n+# 1) In general, libtool expects an argument such as `--tag=CXX' when\n # using the C++ compiler, because that will enable the settings\n # detected when C++ support was being configured.  However, when no\n # such flag is given in the command line, libtool attempts to figure\n@@ -197,8 +193,18 @@ AM_MAKEFLAGS = \\\n # correct solution is to add `--tag CXX' to LTCXXCOMPILE and maybe\n # CXXLINK, just after $(LIBTOOL), so that libtool doesn't have to\n # attempt to infer which configuration to use.\n-# We have to put --tag disable-shared after --tag CXX lest things\n-# CXX undo the affect of disable-shared.\n+# \n+# The second tag argument, `--tag disable-shared` means that libtool\n+# only compiles each source once, for static objects. In actuality,\n+# glibcxx_lt_pic_flag and glibcxx_compiler_shared_flag are added to\n+# the libtool command that is used create the object, which is\n+# suitable for shared libraries.  The `--tag disable-shared` must be\n+# placed after --tag CXX lest things CXX undo the affect of\n+# disable-shared.\n+\n+# 2) Need to explicitly set LTCXXCOMPILE so that AM_CXXFLAGS is\n+# last. (That way, things like -O2 passed down from the toplevel can\n+# be overridden by --enable-debug.)\n LTCXXCOMPILE = \\\n \t$(LIBTOOL) --tag CXX --tag disable-shared \\\n \t$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\"}, {"sha": "519dd20da3cd8512ea67fbbd7841a42240d38e7e", "filename": "libstdc++-v3/src/c++98/Makefile.in", "status": "modified", "additions": 25, "deletions": 23, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac6d1200be5d5f6c49a8b6c4ae447bf82c449c25/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac6d1200be5d5f6c49a8b6c4ae447bf82c449c25/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2FMakefile.in?ref=ac6d1200be5d5f6c49a8b6c4ae447bf82c449c25", "patch": "@@ -1,9 +1,9 @@\n-# Makefile.in generated by automake 1.11.3 from Makefile.am.\n+# Makefile.in generated by automake 1.11.1 from Makefile.am.\n # @configure_input@\n \n # Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,\n-# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software\n-# Foundation, Inc.\n+# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,\n+# Inc.\n # This Makefile.in is free software; the Free Software Foundation\n # gives unlimited permission to copy and/or distribute it,\n # with or without modifications, as long as this notice is preserved.\n@@ -194,7 +194,6 @@ PACKAGE_URL = @PACKAGE_URL@\n PACKAGE_VERSION = @PACKAGE_VERSION@\n PATH_SEPARATOR = @PATH_SEPARATOR@\n PDFLATEX = @PDFLATEX@\n-PIC_CXXFLAGS = @PIC_CXXFLAGS@\n RANLIB = @RANLIB@\n SECTION_FLAGS = @SECTION_FLAGS@\n SECTION_LDFLAGS = @SECTION_LDFLAGS@\n@@ -242,7 +241,10 @@ glibcxx_MOFILES = @glibcxx_MOFILES@\n glibcxx_PCHFLAGS = @glibcxx_PCHFLAGS@\n glibcxx_POFILES = @glibcxx_POFILES@\n glibcxx_builddir = @glibcxx_builddir@\n+glibcxx_compiler_pic_flag = @glibcxx_compiler_pic_flag@\n+glibcxx_compiler_shared_flag = @glibcxx_compiler_shared_flag@\n glibcxx_localedir = @glibcxx_localedir@\n+glibcxx_lt_pic_flag = @glibcxx_lt_pic_flag@\n glibcxx_prefixdir = @glibcxx_prefixdir@\n glibcxx_srcdir = @glibcxx_srcdir@\n glibcxx_toolexecdir = @glibcxx_toolexecdir@\n@@ -402,7 +404,7 @@ PARALLEL_FLAGS = -fopenmp -D_GLIBCXX_PARALLEL -I$(glibcxx_builddir)/../libgomp\n # OPTIMIZE_CXXFLAGS on the compile line so that -O2 can be overridden\n # as the occasion calls for it.\n AM_CXXFLAGS = \\\n-\t$(PIC_CXXFLAGS) \\\n+\t$(glibcxx_lt_pic_flag) $(glibcxx_compiler_shared_flag) \\\n \t$(XTEMPLATE_FLAGS) \\\n \t$(WARN_CXXFLAGS) $(OPTIMIZE_CXXFLAGS) $(CONFIG_CXXFLAGS)\n \n@@ -412,11 +414,7 @@ AM_MAKEFLAGS = \\\n \n # Libtool notes\n \n-# 1) Need to explicitly set LTCXXCOMPILE so that AM_CXXFLAGS is\n-# last. (That way, things like -O2 passed down from the toplevel can\n-# be overridden by --enable-debug.)\n-\n-# 2) In general, libtool expects an argument such as `--tag=CXX' when\n+# 1) In general, libtool expects an argument such as `--tag=CXX' when\n # using the C++ compiler, because that will enable the settings\n # detected when C++ support was being configured.  However, when no\n # such flag is given in the command line, libtool attempts to figure\n@@ -428,8 +426,18 @@ AM_MAKEFLAGS = \\\n # correct solution is to add `--tag CXX' to LTCXXCOMPILE and maybe\n # CXXLINK, just after $(LIBTOOL), so that libtool doesn't have to\n # attempt to infer which configuration to use.\n-# We have to put --tag disable-shared after --tag CXX lest things\n-# CXX undo the affect of disable-shared.\n+# \n+# The second tag argument, `--tag disable-shared` means that libtool\n+# only compiles each source once, for static objects. In actuality,\n+# glibcxx_lt_pic_flag and glibcxx_compiler_shared_flag are added to\n+# the libtool command that is used create the object, which is\n+# suitable for shared libraries.  The `--tag disable-shared` must be\n+# placed after --tag CXX lest things CXX undo the affect of\n+# disable-shared.\n+\n+# 2) Need to explicitly set LTCXXCOMPILE so that AM_CXXFLAGS is\n+# last. (That way, things like -O2 passed down from the toplevel can\n+# be overridden by --enable-debug.)\n LTCXXCOMPILE = \\\n \t$(LIBTOOL) --tag CXX --tag disable-shared \\\n \t$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\\n@@ -475,7 +483,6 @@ Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status\n \t    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \\\n \t    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \\\n \tesac;\n-$(top_srcdir)/fragment.am:\n \n $(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)\n \tcd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh\n@@ -494,7 +501,7 @@ clean-noinstLTLIBRARIES:\n \t  echo \"rm -f \\\"$${dir}/so_locations\\\"\"; \\\n \t  rm -f \"$${dir}/so_locations\"; \\\n \tdone\n-libc++98convenience.la: $(libc__98convenience_la_OBJECTS) $(libc__98convenience_la_DEPENDENCIES) $(EXTRA_libc__98convenience_la_DEPENDENCIES) \n+libc++98convenience.la: $(libc__98convenience_la_OBJECTS) $(libc__98convenience_la_DEPENDENCIES) \n \t$(CXXLINK)  $(libc__98convenience_la_OBJECTS) $(libc__98convenience_la_LIBADD) $(LIBS)\n \n mostlyclean-compile:\n@@ -583,15 +590,10 @@ install-am: all-am\n \n installcheck: installcheck-am\n install-strip:\n-\tif test -z '$(STRIP)'; then \\\n-\t  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" \\\n-\t    install_sh_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" INSTALL_STRIP_FLAG=-s \\\n-\t      install; \\\n-\telse \\\n-\t  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" \\\n-\t    install_sh_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" INSTALL_STRIP_FLAG=-s \\\n-\t    \"INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'\" install; \\\n-\tfi\n+\t$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" \\\n+\t  install_sh_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" INSTALL_STRIP_FLAG=-s \\\n+\t  `test -z '$(STRIP)' || \\\n+\t    echo \"INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'\"` install\n mostlyclean-generic:\n \n clean-generic:"}, {"sha": "0e118ff4371fb5655f869a3b9af6d04e745beb71", "filename": "libstdc++-v3/src/c++98/compatibility-list-2.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac6d1200be5d5f6c49a8b6c4ae447bf82c449c25/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fcompatibility-list-2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac6d1200be5d5f6c49a8b6c4ae447bf82c449c25/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fcompatibility-list-2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fcompatibility-list-2.cc?ref=ac6d1200be5d5f6c49a8b6c4ae447bf82c449c25", "patch": "@@ -24,7 +24,7 @@\n \n #include <bits/move.h>\n \n-#ifdef PIC\n+#ifdef _GLIBCXX_SHARED\n \n #ifndef _GLIBCXX_BEGIN_NAMESPACE_COMPAT\n # define _GLIBCXX_BEGIN_NAMESPACE_COMPAT"}, {"sha": "9f423d0e821460b1ed5d232e83df6875e573bab7", "filename": "libstdc++-v3/src/c++98/compatibility.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac6d1200be5d5f6c49a8b6c4ae447bf82c449c25/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fcompatibility.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac6d1200be5d5f6c49a8b6c4ae447bf82c449c25/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fcompatibility.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fcompatibility.cc?ref=ac6d1200be5d5f6c49a8b6c4ae447bf82c449c25", "patch": "@@ -25,7 +25,7 @@\n \n #include <bits/c++config.h>\n \n-#if defined(_GLIBCXX_SYMVER_GNU) && defined(PIC) \\\n+#if defined(_GLIBCXX_SYMVER_GNU) && defined(_GLIBCXX_SHARED) \\\n     && defined(_GLIBCXX_HAVE_AS_SYMVER_DIRECTIVE)\\\n     && defined(_GLIBCXX_HAVE_SYMVER_SYMBOL_RENAMING_RUNTIME_SUPPORT)\n #define istreambuf_iterator istreambuf_iteratorXX\n@@ -204,7 +204,7 @@ _GLIBCXX_END_NAMESPACE_VERSION\n \n // NB: These symbols renames should go into the shared library only,\n // and only those shared libraries that support versioning.\n-#if defined(_GLIBCXX_SYMVER_GNU) && defined(PIC) \\\n+#if defined(_GLIBCXX_SYMVER_GNU) && defined(_GLIBCXX_SHARED) \\\n     && defined(_GLIBCXX_HAVE_AS_SYMVER_DIRECTIVE) \\\n     && defined(_GLIBCXX_HAVE_SYMVER_SYMBOL_RENAMING_RUNTIME_SUPPORT)\n \n@@ -529,7 +529,7 @@ extern __attribute__((used, weak)) const void * const _ZTIPKe[4]\n #endif // _GLIBCXX_LONG_DOUBLE_COMPAT\n \n #ifdef _GLIBCXX_SYMVER_DARWIN\n-#if (defined(__ppc__) || defined(__ppc64__)) && defined(PIC)\n+#if (defined(__ppc__) || defined(__ppc64__)) && defined(_GLIBCXX_SHARED)\n /* __eprintf shouldn't have been made visible from libstdc++, or\n    anywhere, but on Mac OS X 10.4 it was defined in\n    libstdc++.6.0.3.dylib; so on that platform we have to keep defining"}, {"sha": "7feac92cce104354bccbe3b816252e89e0e0c70f", "filename": "libstdc++-v3/testsuite/17_intro/shared_with_static_deps.cc", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac6d1200be5d5f6c49a8b6c4ae447bf82c449c25/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fshared_with_static_deps.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac6d1200be5d5f6c49a8b6c4ae447bf82c449c25/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fshared_with_static_deps.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fshared_with_static_deps.cc?ref=ac6d1200be5d5f6c49a8b6c4ae447bf82c449c25", "patch": "@@ -0,0 +1,33 @@\n+// { dg-do link }\n+// { dg-require-static-libstdcxx }\n+// { dg-require-sharedlib \"\" }\n+// { dg-require-effective-target fpic }\n+// { dg-options \"-shared -fPIC -static-libgcc -static-libstdc++\" }\n+\n+// Copyright (C) 2012 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>\n+\n+// libstdc++/28811 --with-pic vs. static linking\n+#include <iostream>\n+#include <locale>\n+\n+int main()\n+{\n+  std::locale c __attribute__((unused)) = std::locale::classic();\n+  std::cout << \"i am old-skool\\n\";\n+  return 0;\n+}"}, {"sha": "f8774bb26a229bfce0d9d7df1584fcb8c908d01c", "filename": "libstdc++-v3/testsuite/Makefile.in", "status": "modified", "additions": 10, "deletions": 14, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac6d1200be5d5f6c49a8b6c4ae447bf82c449c25/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac6d1200be5d5f6c49a8b6c4ae447bf82c449c25/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in?ref=ac6d1200be5d5f6c49a8b6c4ae447bf82c449c25", "patch": "@@ -1,9 +1,9 @@\n-# Makefile.in generated by automake 1.11.3 from Makefile.am.\n+# Makefile.in generated by automake 1.11.1 from Makefile.am.\n # @configure_input@\n \n # Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,\n-# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software\n-# Foundation, Inc.\n+# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,\n+# Inc.\n # This Makefile.in is free software; the Free Software Foundation\n # gives unlimited permission to copy and/or distribute it,\n # with or without modifications, as long as this notice is preserved.\n@@ -162,7 +162,6 @@ PACKAGE_URL = @PACKAGE_URL@\n PACKAGE_VERSION = @PACKAGE_VERSION@\n PATH_SEPARATOR = @PATH_SEPARATOR@\n PDFLATEX = @PDFLATEX@\n-PIC_CXXFLAGS = @PIC_CXXFLAGS@\n RANLIB = @RANLIB@\n SECTION_FLAGS = @SECTION_FLAGS@\n SECTION_LDFLAGS = @SECTION_LDFLAGS@\n@@ -210,7 +209,10 @@ glibcxx_MOFILES = @glibcxx_MOFILES@\n glibcxx_PCHFLAGS = @glibcxx_PCHFLAGS@\n glibcxx_POFILES = @glibcxx_POFILES@\n glibcxx_builddir = @glibcxx_builddir@\n+glibcxx_compiler_pic_flag = @glibcxx_compiler_pic_flag@\n+glibcxx_compiler_shared_flag = @glibcxx_compiler_shared_flag@\n glibcxx_localedir = @glibcxx_localedir@\n+glibcxx_lt_pic_flag = @glibcxx_lt_pic_flag@\n glibcxx_prefixdir = @glibcxx_prefixdir@\n glibcxx_srcdir = @glibcxx_srcdir@\n glibcxx_toolexecdir = @glibcxx_toolexecdir@\n@@ -350,7 +352,6 @@ Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status\n \t    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \\\n \t    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \\\n \tesac;\n-$(top_srcdir)/fragment.am:\n \n $(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)\n \tcd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh\n@@ -386,15 +387,10 @@ install-am: all-am\n \n installcheck: installcheck-am\n install-strip:\n-\tif test -z '$(STRIP)'; then \\\n-\t  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" \\\n-\t    install_sh_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" INSTALL_STRIP_FLAG=-s \\\n-\t      install; \\\n-\telse \\\n-\t  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" \\\n-\t    install_sh_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" INSTALL_STRIP_FLAG=-s \\\n-\t    \"INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'\" install; \\\n-\tfi\n+\t$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" \\\n+\t  install_sh_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" INSTALL_STRIP_FLAG=-s \\\n+\t  `test -z '$(STRIP)' || \\\n+\t    echo \"INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'\"` install\n mostlyclean-generic:\n \n clean-generic:"}]}