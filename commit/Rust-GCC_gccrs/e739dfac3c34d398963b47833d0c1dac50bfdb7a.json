{"sha": "e739dfac3c34d398963b47833d0c1dac50bfdb7a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTczOWRmYWMzYzM0ZDM5ODk2M2I0NzgzM2QwYzFkYWM1MGJmZGI3YQ==", "commit": {"author": {"name": "Daniel Franke", "email": "franke.daniel@gmail.com", "date": "2007-04-29T10:49:08Z"}, "committer": {"name": "Daniel Franke", "email": "dfranke@gcc.gnu.org", "date": "2007-04-29T10:49:08Z"}, "message": "gfortran.texi: Cleaned up keyword index.\n\n2007-04-29  Daniel Franke  <franke.daniel@gmail.com>\n\n        * gfortran.texi: Cleaned up keyword index.\n        * invoke.texi: Likewise.\n        * intrinsic.texi: Likewise.\n\nFrom-SVN: r124275", "tree": {"sha": "2dd5f39caf5b683dda1f0da0bfee0c6fc947c058", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2dd5f39caf5b683dda1f0da0bfee0c6fc947c058"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e739dfac3c34d398963b47833d0c1dac50bfdb7a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e739dfac3c34d398963b47833d0c1dac50bfdb7a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e739dfac3c34d398963b47833d0c1dac50bfdb7a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e739dfac3c34d398963b47833d0c1dac50bfdb7a/comments", "author": {"login": "dfranke76", "id": 15729164, "node_id": "MDQ6VXNlcjE1NzI5MTY0", "avatar_url": "https://avatars.githubusercontent.com/u/15729164?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dfranke76", "html_url": "https://github.com/dfranke76", "followers_url": "https://api.github.com/users/dfranke76/followers", "following_url": "https://api.github.com/users/dfranke76/following{/other_user}", "gists_url": "https://api.github.com/users/dfranke76/gists{/gist_id}", "starred_url": "https://api.github.com/users/dfranke76/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dfranke76/subscriptions", "organizations_url": "https://api.github.com/users/dfranke76/orgs", "repos_url": "https://api.github.com/users/dfranke76/repos", "events_url": "https://api.github.com/users/dfranke76/events{/privacy}", "received_events_url": "https://api.github.com/users/dfranke76/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "caef7872f0dc4a62dfc449785974eaa179b0a449", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/caef7872f0dc4a62dfc449785974eaa179b0a449", "html_url": "https://github.com/Rust-GCC/gccrs/commit/caef7872f0dc4a62dfc449785974eaa179b0a449"}], "stats": {"total": 1157, "additions": 652, "deletions": 505}, "files": [{"sha": "845e35e702b9e01b4b7370c1c685aa7eaaa137e0", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e739dfac3c34d398963b47833d0c1dac50bfdb7a/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e739dfac3c34d398963b47833d0c1dac50bfdb7a/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=e739dfac3c34d398963b47833d0c1dac50bfdb7a", "patch": "@@ -1,3 +1,9 @@\n+2007-04-29  Daniel Franke  <franke.daniel@gmail.com>\n+\n+\t* gfortran.texi: Cleaned up keyword index.\n+\t* invoke.texi: Likewise.\n+\t* intrinsic.texi: Likewise.\n+\t\t\t\n 2007-04-29  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n \n \tPR fortran/31645"}, {"sha": "819651b1f05172fbe5a482bff2a7d1e7120c65a4", "filename": "gcc/fortran/gfortran.texi", "status": "modified", "additions": 36, "deletions": 27, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e739dfac3c34d398963b47833d0c1dac50bfdb7a/gcc%2Ffortran%2Fgfortran.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e739dfac3c34d398963b47833d0c1dac50bfdb7a/gcc%2Ffortran%2Fgfortran.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.texi?ref=e739dfac3c34d398963b47833d0c1dac50bfdb7a", "patch": "@@ -388,14 +388,14 @@ Fortran compiler.\n @node GNU Fortran and G77\n @section GNU Fortran and G77\n @cindex Fortran 77\n-@cindex G77\n+@cindex @command{g77}\n \n-The GNU Fortran compiler is the successor to G77, the Fortran 77 front\n-end included in GCC prior to version 4.  It is an entirely new program\n-that has been designed to provide Fortran 95 support and extensibility\n-for future Fortran language standards, as well as providing backwards\n-compatibility for Fortran 77 and nearly all of the GNU language \n-extensions supported by G77.\n+The GNU Fortran compiler is the successor to @command{g77}, the Fortran \n+77 front end included in GCC prior to version 4.  It is an entirely new \n+program that has been designed to provide Fortran 95 support and \n+extensibility for future Fortran language standards, as well as providing \n+backwards compatibility for Fortran 77 and nearly all of the GNU language \n+extensions supported by @command{g77}.\n \n \n @c ---------------------------------------------------------------------\n@@ -499,7 +499,7 @@ ISO/IEC 1539-1:2004 (Fortran 2003).\n \n @node Runtime\n @chapter Runtime:  Influencing runtime behavior with environment variables\n-@cindex Runtime\n+@cindex environment variable\n \n The behavior of the @command{gfortran} can be influenced by\n environment variables.\n@@ -695,13 +695,14 @@ Intrinsics @code{command_argument_count}, @code{get_command},\n @code{move_alloc}.\n \n @item \n-@cindex Array constructors\n+@cindex array, constructors\n @cindex @code{[...]}\n Array constructors using square brackets. That is, @code{[...]} rather\n than @code{(/.../)}.\n \n @item\n @cindex @code{FLUSH} statement\n+@cindex statement, @code{FLUSH}\n @code{FLUSH} statement.\n \n @item\n@@ -711,6 +712,8 @@ than @code{(/.../)}.\n @item\n @cindex @code{ENUM} statement\n @cindex @code{ENUMERATOR} statement\n+@cindex statement, @code{ENUM}\n+@cindex statement, @code{ENUMERATOR}\n @opindex @code{fshort-enums}\n Support for the declaration of enumeration constants via the\n @code{ENUM} and @code{ENUMERATOR} statements.  Interoperability with\n@@ -742,25 +745,31 @@ allowing I/O without any record structure.\n Namelist input/output for internal files.\n \n @item\n-@cindex @code{PROTECTED}\n+@cindex @code{PROTECTED} statement\n+@cindex statement, @code{PROTECTED}\n The @code{PROTECTED} statement and attribute.\n \n @item\n-@cindex @code{VALUE}\n+@cindex @code{VALUE} statement\n+@cindex statement, @code{VALUE}\n The @code{VALUE} statement and attribute.\n \n @item\n-@cindex @code{VOLATILE}\n+@cindex @code{VOLATILE} statement\n+@cindex statement, @code{VOLATILE}\n The @code{VOLATILE} statement and attribute.\n \n @item\n-@cindex @code{IMPORT}\n+@cindex @code{IMPORT} statement\n+@cindex statement, @code{IMPORT}\n The @code{IMPORT} statement, allowing to import\n host-associated derived types.\n \n @item\n-@cindex @code{USE, INTRINSIC}\n-@cindex @code{ISO_FORTRAN_ENV}\n+@cindex @code{USE, INTRINSIC} statement\n+@cindex statement, @code{USE, INTRINSIC}\n+@cindex @code{ISO_FORTRAN_ENV} statement\n+@cindex statement, @code{ISO_FORTRAN_ENV}\n @code{USE} statement with @code{INTRINSIC} and @code{NON_INTRINSIC}\n attribute; supported intrinsic modules: @code{ISO_FORTRAN_ENV},\n @code{OMP_LIB} and @code{OMP_LIB_KINDS}.\n@@ -814,7 +823,7 @@ of extensions, and @option{-std=legacy} allows both without warning.\n \n @node Old-style kind specifications\n @section Old-style kind specifications\n-@cindex Kind specifications\n+@cindex kind, old-style\n \n GNU Fortran allows old-style kind specifications in declarations. These\n look like:\n@@ -838,7 +847,6 @@ where @code{k} is equal to @code{size} for most types, but is equal to\n \n @node Old-style variable initialization\n @section Old-style variable initialization\n-@cindex Initialization\n \n GNU Fortran allows old-style initialization of variables of the\n form:\n@@ -942,7 +950,6 @@ elements will be given the values 1.00 and 2.00.\n \n @node X format descriptor without count field\n @section @code{X} format descriptor without count field\n-@cindex @code{X} format descriptor without count field\n \n To support legacy codes, GNU Fortran permits the count field of the\n @code{X} edit descriptor in @code{FORMAT} statements to be omitted.\n@@ -955,7 +962,6 @@ When omitted, the count is implicitly assumed to be one.\n \n @node Commas in FORMAT specifications\n @section Commas in @code{FORMAT} specifications\n-@cindex Commas in @code{FORMAT} specifications\n \n To support legacy codes, GNU Fortran allows the comma separator\n to be omitted immediately before and after character string edit\n@@ -969,7 +975,6 @@ descriptors in @code{FORMAT} statements.\n \n @node Missing period in FORMAT specifications\n @section Missing period in @code{FORMAT} specifications\n-@cindex Missing period in @code{FORMAT} specifications\n \n To support legacy codes, GNU Fortran allows missing periods in format\n specifications if and only if @option{-std=legacy} is given on the\n@@ -1021,14 +1026,14 @@ integers in this manner.\n \n @node Real array indices\n @section Real array indices\n-@cindex Real array indices\n+@cindex array, indices of type real\n \n As an extension, GNU Fortran allows the use of @code{REAL} expressions\n or variables as array indices.\n \n @node Unary operators\n @section Unary operators\n-@cindex Unary operators\n+@cindex operators, unary\n \n As an extension, GNU Fortran allows unary plus and unary minus operators\n to appear as the second operand of binary arithmetic operators without\n@@ -1040,7 +1045,8 @@ the need for parenthesis.\n \n @node Implicitly convert LOGICAL and INTEGER values\n @section Implicitly convert @code{LOGICAL} and @code{INTEGER} values\n-@cindex Implicitly convert @code{LOGICAL} and @code{INTEGER} values\n+@cindex conversion, to integer\n+@cindex conversion, to logical\n \n As an extension for backwards compatibility with other compilers, GNU\n Fortran allows the implicit conversion of @code{LOGICAL} values to\n@@ -1099,7 +1105,7 @@ obtained by using the @code{TRANSFER} statement, as in this example.\n \n @node Cray pointers\n @section Cray pointers\n-@cindex Cray pointers\n+@cindex pointer, cray\n \n Cray pointers are part of a non-standard extension that provides a\n C-like pointer in Fortran.  This is accomplished through a pair of\n@@ -1292,7 +1298,10 @@ OpenMP Application Program Interface v2.5} specification.\n \n @node Argument list functions\n @section Argument list functions %VAL, %REF and %LOC\n-@cindex Argument list functions %VAL, %REF and %LOC\n+@cindex argument list functions\n+@cindex %VAL\n+@cindex %REF\n+@cindex %LOC\n \n GNU Fortran supports argument list functions @code{%VAL}, @code{%REF} \n and @code{%LOC} statements, for backward compatibility with g77. \n@@ -1582,7 +1591,7 @@ Environment variable forcing standard output to be line buffered (unix).\n @c ---------------------------------------------------------------------\n \n @node Option Index\n-@unnumbered Index of command line options\n+@unnumbered Option Index\n @command{gfortran}'s command line options are indexed here without any\n initial @samp{-} or @samp{--}. Where an option has both positive and\n negative forms (such as -foption and -fno-option), relevant entries in\n@@ -1591,7 +1600,7 @@ be useful to look up both forms.\n @printindex op\n \n @node Keyword Index\n-@unnumbered Index of concepts\n+@unnumbered Keyword Index\n @printindex cp\n \n @bye"}, {"sha": "b9547119331cdb2a9aa4ac6218ac32e010d6c101", "filename": "gcc/fortran/intrinsic.texi", "status": "modified", "additions": 594, "deletions": 450, "changes": 1044, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e739dfac3c34d398963b47833d0c1dac50bfdb7a/gcc%2Ffortran%2Fintrinsic.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e739dfac3c34d398963b47833d0c1dac50bfdb7a/gcc%2Ffortran%2Fintrinsic.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fintrinsic.texi?ref=e739dfac3c34d398963b47833d0c1dac50bfdb7a", "patch": "@@ -81,19 +81,19 @@ Some basic guidelines for editing this document:\n * @code{COSH}:          COSH,      Hyperbolic cosine function\n * @code{COUNT}:         COUNT,     Count occurrences of TRUE in an array\n * @code{CPU_TIME}:      CPU_TIME,  CPU time subroutine\n-* @code{CSHIFT}:        CSHIFT,    Circular array shift function\n+* @code{CSHIFT}:        CSHIFT,    Circular shift elements of an array\n * @code{CTIME}:         CTIME,     Subroutine (or function) to convert a time into a string\n * @code{DATE_AND_TIME}: DATE_AND_TIME, Date and time subroutine\n * @code{DBLE}:          DBLE,      Double precision conversion function\n * @code{DCMPLX}:        DCMPLX,    Double complex conversion function\n * @code{DFLOAT}:        DFLOAT,    Double precision conversion function\n * @code{DIGITS}:        DIGITS,    Significant digits function\n-* @code{DIM}:           DIM,       Dim function\n+* @code{DIM}:           DIM,       Positive difference\n * @code{DOT_PRODUCT}:   DOT_PRODUCT, Dot product function\n * @code{DPROD}:         DPROD,     Double product function\n * @code{DREAL}:         DREAL,     Double real part function\n * @code{DTIME}:         DTIME,     Execution time subroutine (or function)\n-* @code{EOSHIFT}:       EOSHIFT,   End-off shift function\n+* @code{EOSHIFT}:       EOSHIFT,   End-off shift elements of an array\n * @code{EPSILON}:       EPSILON,   Epsilon function\n * @code{ERF}:           ERF,       Error function\n * @code{ERFC}:          ERFC,      Complementary error function\n@@ -291,9 +291,11 @@ the applicable standard for each intrinsic procedure is noted.\n \n \n @node ABORT\n-@section @code{ABORT} --- Abort the program  \n-@cindex @code{ABORT} intrinsic\n-@cindex abort\n+@section @code{ABORT} --- Abort the program\n+@fnindex ABORT\n+@cindex program termination, with core dump\n+@cindex terminate program, with core dump\n+@cindex core, dump\n \n @table @asis\n @item @emph{Description}:\n@@ -329,13 +331,13 @@ end program test_abort\n \n \n @node ABS\n-@section @code{ABS} --- Absolute value  \n-@cindex @code{ABS} intrinsic\n-@cindex @code{CABS} intrinsic\n-@cindex @code{DABS} intrinsic\n-@cindex @code{IABS} intrinsic\n-@cindex @code{ZABS} intrinsic\n-@cindex @code{CDABS} intrinsic\n+@section @code{ABS} --- Absolute value\n+@fnindex ABS\n+@fnindex CABS\n+@fnindex DABS\n+@fnindex IABS\n+@fnindex ZABS\n+@fnindex CDABS\n @cindex absolute value\n \n @table @asis\n@@ -389,8 +391,8 @@ end program test_abs\n \n @node ACCESS\n @section @code{ACCESS} --- Checks file access modes\n-@cindex @code{ACCESS} \n-@cindex file system operations\n+@fnindex ACCESS\n+@cindex file system, access mode\n \n @table @asis\n @item @emph{Description}:\n@@ -447,8 +449,9 @@ end program access_test\n \n @node ACHAR\n @section @code{ACHAR} --- Character in @acronym{ASCII} collating sequence \n-@cindex @code{ACHAR} intrinsic\n+@fnindex ACHAR\n @cindex @acronym{ASCII} collating sequence\n+@cindex collating sequence, @acronym{ASCII}\n \n @table @asis\n @item @emph{Description}:\n@@ -494,9 +497,10 @@ and formatted string representations.\n \n @node ACOS\n @section @code{ACOS} --- Arccosine function \n-@cindex @code{ACOS} intrinsic\n-@cindex @code{DACOS} intrinsic\n-@cindex trigonometric functions (inverse)\n+@fnindex ACOS\n+@fnindex DACOS\n+@cindex trigonometric function, cosine, inverse\n+@cindex cosine, inverse\n \n @table @asis\n @item @emph{Description}:\n@@ -545,10 +549,12 @@ Inverse function: @ref{COS}\n \n @node ACOSH\n @section @code{ACOSH} --- Hyperbolic arccosine function\n-@cindex @code{ACOSH} intrinsic\n-@cindex @code{DACOSH} intrinsic\n+@fnindex ACOSH\n+@fnindex DACOSH\n+@cindex area hyperbolic cosine\n @cindex hyperbolic arccosine\n-@cindex hyperbolic cosine (inverse)\n+@cindex hyperbolic function, cosine, inverse\n+@cindex cosine, hyperbolic, inverse\n \n @table @asis\n @item @emph{Description}:\n@@ -596,8 +602,9 @@ Inverse function: @ref{COSH}\n \n @node ADJUSTL\n @section @code{ADJUSTL} --- Left adjust a string \n-@cindex @code{ADJUSTL} intrinsic\n-@cindex string manipulation\n+@fnindex ADJUSTL\n+@cindex string, adjust left\n+@cindex adjust string\n \n @table @asis\n @item @emph{Description}:\n@@ -640,8 +647,9 @@ end program test_adjustl\n \n @node ADJUSTR\n @section @code{ADJUSTR} --- Right adjust a string \n-@cindex @code{ADJUSTR} intrinsic\n-@cindex string manipulation\n+@fnindex ADJUSTR\n+@cindex string, adjust right\n+@cindex adjust string\n \n @table @asis\n @item @emph{Description}:\n@@ -684,11 +692,11 @@ end program test_adjustr\n \n @node AIMAG\n @section @code{AIMAG} --- Imaginary part of complex number  \n-@cindex @code{AIMAG} intrinsic\n-@cindex @code{DIMAG} intrinsic\n-@cindex @code{IMAG} intrinsic\n-@cindex @code{IMAGPART} intrinsic\n-@cindex imaginary part of a complex number\n+@fnindex AIMAG\n+@fnindex DIMAG\n+@fnindex IMAG\n+@fnindex IMAGPART\n+@cindex complex numbers, imaginary part\n \n @table @asis\n @item @emph{Description}:\n@@ -739,9 +747,10 @@ end program test_aimag\n \n @node AINT\n @section @code{AINT} --- Truncate to a whole number\n-@cindex @code{AINT} intrinsic\n-@cindex @code{DINT} intrinsic\n-@cindex whole number\n+@fnindex AINT\n+@fnindex DINT\n+@cindex floor\n+@cindex rounding, floor\n \n @table @asis\n @item @emph{Description}:\n@@ -796,7 +805,8 @@ end program test_aint\n \n @node ALARM\n @section @code{ALARM} --- Execute a routine after a given delay\n-@cindex @code{ALARM} intrinsic\n+@fnindex ALARM\n+@cindex delayed execution\n \n @table @asis\n @item @emph{Description}:\n@@ -846,8 +856,9 @@ after 3 seconds.\n \n @node ALL\n @section @code{ALL} --- All values in @var{MASK} along @var{DIM} are true \n-@cindex @code{ALL} intrinsic\n-@cindex true values\n+@fnindex ALL\n+@cindex array, apply condition\n+@cindex array, condition testing\n \n @table @asis\n @item @emph{Description}:\n@@ -912,8 +923,8 @@ end program test_all\n \n @node ALLOCATED\n @section @code{ALLOCATED} --- Status of an allocatable entity\n-@cindex @code{ALLOCATED} intrinsic\n-@cindex allocation status\n+@fnindex ALLOCATED\n+@cindex allocation, status\n \n @table @asis\n @item @emph{Description}:\n@@ -952,8 +963,9 @@ end program test_allocated\n \n @node AND\n @section @code{AND} --- Bitwise logical AND\n-@cindex @code{AND} intrinsic\n-@cindex bit operations\n+@fnindex AND\n+@cindex bitwise logical and\n+@cindex logical and, bitwise\n \n @table @asis\n @item @emph{Description}:\n@@ -1002,9 +1014,10 @@ F95 elemental function: @ref{IAND}\n \n @node ANINT\n @section @code{ANINT} --- Nearest whole number\n-@cindex @code{ANINT} intrinsic\n-@cindex @code{DNINT} intrinsic\n-@cindex whole number\n+@fnindex ANINT\n+@fnindex DNINT\n+@cindex ceiling\n+@cindex rounding, ceiling\n \n @table @asis\n @item @emph{Description}:\n@@ -1057,8 +1070,9 @@ end program test_anint\n \n @node ANY\n @section @code{ANY} --- Any value in @var{MASK} along @var{DIM} is true \n-@cindex @code{ANY} intrinsic\n-@cindex true values\n+@fnindex ANY\n+@cindex array, apply condition\n+@cindex array, condition testing\n \n @table @asis\n @item @emph{Description}:\n@@ -1123,9 +1137,10 @@ end program test_any\n \n @node ASIN\n @section @code{ASIN} --- Arcsine function \n-@cindex @code{ASIN} intrinsic\n-@cindex @code{DASIN} intrinsic\n-@cindex trigonometric functions (inverse)\n+@fnindex ASIN\n+@fnindex DASIN\n+@cindex trigonometric function, sine, inverse\n+@cindex sine, inverse\n \n @table @asis\n @item @emph{Description}:\n@@ -1174,10 +1189,12 @@ Inverse function: @ref{SIN}\n \n @node ASINH\n @section @code{ASINH} --- Hyperbolic arcsine function\n-@cindex @code{ASINH} intrinsic\n-@cindex @code{DASINH} intrinsic\n+@fnindex ASINH\n+@fnindex DASINH\n+@cindex area hyperbolic sine\n @cindex hyperbolic arcsine\n-@cindex hyperbolic sine (inverse)\n+@cindex hyperbolic function, sine, inverse\n+@cindex sine, hyperbolic, inverse\n \n @table @asis\n @item @emph{Description}:\n@@ -1223,8 +1240,9 @@ Inverse function: @ref{SINH}\n \n @node ASSOCIATED\n @section @code{ASSOCIATED} --- Status of a pointer or pointer/target pair \n-@cindex @code{ASSOCIATED} intrinsic\n-@cindex pointer status\n+@fnindex ASSOCIATED\n+@cindex pointer, status\n+@cindex association status\n \n @table @asis\n @item @emph{Description}:\n@@ -1298,9 +1316,10 @@ end program test_associated\n \n @node ATAN\n @section @code{ATAN} --- Arctangent function \n-@cindex @code{ATAN} intrinsic\n-@cindex @code{DATAN} intrinsic\n-@cindex trigonometric functions (inverse)\n+@fnindex ATAN\n+@fnindex DATAN\n+@cindex trigonometric function, tangent, inverse\n+@cindex tangent, inverse\n \n @table @asis\n @item @emph{Description}:\n@@ -1347,9 +1366,10 @@ Inverse function: @ref{TAN}\n \n @node ATAN2\n @section @code{ATAN2} --- Arctangent function \n-@cindex @code{ATAN2} intrinsic\n-@cindex @code{DATAN2} intrinsic\n-@cindex trigonometric functions (inverse)\n+@fnindex ATAN2\n+@fnindex DATAN2\n+@cindex trigonometric function, tangent, inverse\n+@cindex tangent, inverse\n \n @table @asis\n @item @emph{Description}:\n@@ -1400,10 +1420,12 @@ end program test_atan2\n \n @node ATANH\n @section @code{ATANH} --- Hyperbolic arctangent function\n-@cindex @code{ASINH} intrinsic\n-@cindex @code{DASINH} intrinsic\n+@fnindex ASINH\n+@fnindex DASINH\n+@cindex area hyperbolic tangent\n @cindex hyperbolic arctangent\n-@cindex hyperbolic tangent (inverse)\n+@cindex hyperbolic function, tangent, inverse\n+@cindex tangent, hyperbolic, inverse\n \n @table @asis\n @item @emph{Description}:\n@@ -1451,9 +1473,9 @@ Inverse function: @ref{TANH}\n \n @node BESJ0\n @section @code{BESJ0} --- Bessel function of the first kind of order 0\n-@cindex @code{BESJ0} intrinsic\n-@cindex @code{DBESJ0} intrinsic\n-@cindex Bessel\n+@fnindex BESJ0\n+@fnindex DBESJ0\n+@cindex Bessel function, first kind\n \n @table @asis\n @item @emph{Description}:\n@@ -1497,9 +1519,9 @@ end program test_besj0\n \n @node BESJ1\n @section @code{BESJ1} --- Bessel function of the first kind of order 1\n-@cindex @code{BESJ1} intrinsic\n-@cindex @code{DBESJ1} intrinsic\n-@cindex Bessel\n+@fnindex BESJ1\n+@fnindex DBESJ1\n+@cindex Bessel function, first kind\n \n @table @asis\n @item @emph{Description}:\n@@ -1543,9 +1565,9 @@ end program test_besj1\n \n @node BESJN\n @section @code{BESJN} --- Bessel function of the first kind\n-@cindex @code{BESJN} intrinsic\n-@cindex @code{DBESJN} intrinsic\n-@cindex Bessel\n+@fnindex BESJN\n+@fnindex DBESJN\n+@cindex Bessel function, first kind\n \n @table @asis\n @item @emph{Description}:\n@@ -1590,9 +1612,9 @@ end program test_besjn\n \n @node BESY0\n @section @code{BESY0} --- Bessel function of the second kind of order 0\n-@cindex @code{BESY0} intrinsic\n-@cindex @code{DBESY0} intrinsic\n-@cindex Bessel\n+@fnindex BESY0\n+@fnindex DBESY0\n+@cindex Bessel function, second kind\n \n @table @asis\n @item @emph{Description}:\n@@ -1635,9 +1657,9 @@ end program test_besy0\n \n @node BESY1\n @section @code{BESY1} --- Bessel function of the second kind of order 1\n-@cindex @code{BESY1} intrinsic\n-@cindex @code{DBESY1} intrinsic\n-@cindex Bessel\n+@fnindex BESY1\n+@fnindex DBESY1\n+@cindex Bessel function, second kind\n \n @table @asis\n @item @emph{Description}:\n@@ -1680,9 +1702,9 @@ end program test_besy1\n \n @node BESYN\n @section @code{BESYN} --- Bessel function of the second kind\n-@cindex @code{BESYN} intrinsic\n-@cindex @code{DBESYN} intrinsic\n-@cindex Bessel\n+@fnindex BESYN\n+@fnindex DBESYN\n+@cindex Bessel function, second kind\n \n @table @asis\n @item @emph{Description}:\n@@ -1727,8 +1749,8 @@ end program test_besyn\n \n @node BIT_SIZE\n @section @code{BIT_SIZE} --- Bit size inquiry function\n-@cindex @code{BIT_SIZE} intrinsic\n-@cindex bit size of a variable\n+@fnindex BIT_SIZE\n+@cindex bits, number of\n @cindex size of a variable, in bits\n \n @table @asis\n@@ -1768,8 +1790,8 @@ end program test_bit_size\n \n @node BTEST\n @section @code{BTEST} --- Bit test function\n-@cindex @code{BTEST} intrinsic\n-@cindex bit operations\n+@fnindex BTEST\n+@cindex bits, testing\n \n @table @asis\n @item @emph{Description}:\n@@ -1812,8 +1834,9 @@ end program test_btest\n \n @node CEILING\n @section @code{CEILING} --- Integer ceiling function\n-@cindex @code{CEILING} intrinsic\n+@fnindex CEILING\n @cindex ceiling\n+@cindex rounding, ceiling\n \n @table @asis\n @item @emph{Description}:\n@@ -1858,8 +1881,8 @@ end program test_ceiling\n \n @node CHAR\n @section @code{CHAR} --- Character conversion function\n-@cindex @code{CHAR} intrinsic\n-@cindex conversion function (character)\n+@fnindex CHAR\n+@cindex conversion, to character\n \n @table @asis\n @item @emph{Description}:\n@@ -1908,8 +1931,8 @@ and formatted string representations.\n \n @node CHDIR\n @section @code{CHDIR} --- Change working directory\n-@cindex @code{CHDIR} intrinsic\n-@cindex file system operations\n+@fnindex CHDIR\n+@cindex system, working directory\n \n @table @asis\n @item @emph{Description}:\n@@ -1959,8 +1982,8 @@ END PROGRAM\n \n @node CHMOD\n @section @code{CHMOD} --- Change access permissions of files\n-@cindex @code{CHMOD} intrinsic\n-@cindex file system operations\n+@fnindex CHMOD\n+@cindex file system, change access mode\n \n @table @asis\n @item @emph{Description}:\n@@ -2027,8 +2050,9 @@ end program chmod_test\n \n @node CMPLX\n @section @code{CMPLX} --- Complex conversion function\n-@cindex @code{CMPLX} intrinsic\n+@fnindex CMPLX\n @cindex complex numbers, conversion to\n+@cindex conversion, to complex\n \n @table @asis\n @item @emph{Description}:\n@@ -2077,8 +2101,10 @@ end program test_cmplx\n \n @node COMMAND_ARGUMENT_COUNT\n @section @code{COMMAND_ARGUMENT_COUNT} --- Get number of command line arguments\n-@cindex @code{COMMAND_ARGUMENT_COUNT} intrinsic\n-@cindex command-line arguments, to program\n+@fnindex COMMAND_ARGUMENT_COUNT\n+@cindex command-line arguments\n+@cindex command-line arguments, number of\n+@cindex arguments, to program\n \n @table @asis\n @item @emph{Description}:\n@@ -2119,9 +2145,10 @@ end program test_command_argument_count\n \n @node CONJG\n @section @code{CONJG} --- Complex conjugate function \n-@cindex @code{CONJG} intrinsic\n-@cindex @code{DCONJG} intrinsic\n+@fnindex CONJG\n+@fnindex DCONJG\n @cindex complex conjugate\n+\n @table @asis\n @item @emph{Description}:\n @code{CONJG(Z)} returns the conjugate of @var{Z}.  If @var{Z} is @code{(x, y)}\n@@ -2167,12 +2194,13 @@ end program test_conjg\n \n @node COS\n @section @code{COS} --- Cosine function \n-@cindex @code{COS} intrinsic\n-@cindex @code{DCOS} intrinsic\n-@cindex @code{CCOS} intrinsic\n-@cindex @code{ZCOS} intrinsic\n-@cindex @code{CDCOS} intrinsic\n-@cindex trigonometric functions\n+@fnindex COS\n+@fnindex DCOS\n+@fnindex CCOS\n+@fnindex ZCOS\n+@fnindex CDCOS\n+@cindex trigonometric function, cosine\n+@cindex cosine\n \n @table @asis\n @item @emph{Description}:\n@@ -2224,9 +2252,11 @@ Inverse function: @ref{ACOS}\n \n @node COSH\n @section @code{COSH} --- Hyperbolic cosine function \n-@cindex @code{COSH} intrinsic\n-@cindex @code{DCOSH} intrinsic\n+@fnindex COSH\n+@fnindex DCOSH\n @cindex hyperbolic cosine\n+@cindex hyperbolic function, cosine\n+@cindex cosine, hyperbolic\n \n @table @asis\n @item @emph{Description}:\n@@ -2273,8 +2303,10 @@ Inverse function: @ref{ACOSH}\n \n @node COUNT\n @section @code{COUNT} --- Count function\n-@cindex @code{COUNT} intrinsic\n-@cindex count\n+@fnindex COUNT\n+@cindex array, conditionally count elements\n+@cindex array, element counting\n+@cindex array, number of elements\n \n @table @asis\n @item @emph{Description}:\n@@ -2332,9 +2364,8 @@ end program test_count\n \n @node CPU_TIME\n @section @code{CPU_TIME} --- CPU elapsed time in seconds\n-@cindex @code{CPU_TIME} intrinsic\n+@fnindex CPU_TIME\n @cindex time, elapsed\n-@cindex elapsed time\n \n @table @asis\n @item @emph{Description}:\n@@ -2377,9 +2408,11 @@ end program test_cpu_time\n \n \n @node CSHIFT\n-@section @code{CSHIFT} --- Circular shift function\n-@cindex @code{CSHIFT} intrinsic\n-@cindex bit operations\n+@section @code{CSHIFT} --- Circular shift elements of an array\n+@fnindex CSHIFT\n+@cindex array, shift circularly\n+@cindex array, permutation\n+@cindex array, rotate\n \n @table @asis\n @item @emph{Description}:\n@@ -2432,8 +2465,9 @@ end program test_cshift\n \n @node CTIME\n @section @code{CTIME} --- Convert a time into a string\n-@cindex @code{CTIME} intrinsic\n-@cindex time, conversion function\n+@fnindex CTIME\n+@cindex time, conversion to string\n+@cindex conversion, to string\n \n @table @asis\n @item @emph{Description}:\n@@ -2480,14 +2514,13 @@ end program test_ctime\n \n @item @emph{See Also}:\n @ref{GMTIME}, @ref{LTIME}, @ref{TIME}, @ref{TIME8}\n-\n @end table\n \n \n \n @node DATE_AND_TIME\n @section @code{DATE_AND_TIME} --- Date and time subroutine\n-@cindex @code{DATE_AND_TIME} intrinsic\n+@fnindex DATE_AND_TIME\n @cindex date, current\n @cindex current date\n @cindex time, current\n@@ -2560,8 +2593,8 @@ end program test_time_and_date\n \n @node DBLE\n @section @code{DBLE} --- Double conversion function \n-@cindex @code{DBLE} intrinsic\n-@cindex double conversion\n+@fnindex DBLE\n+@cindex conversion, to real\n \n @table @asis\n @item @emph{Description}:\n@@ -2603,8 +2636,9 @@ end program test_dble\n \n @node DCMPLX\n @section @code{DCMPLX} --- Double complex conversion function\n-@cindex @code{DCMPLX} intrinsic\n+@fnindex DCMPLX\n @cindex complex numbers, conversion to\n+@cindex conversion, to complex\n \n @table @asis\n @item @emph{Description}:\n@@ -2652,8 +2686,8 @@ end program test_dcmplx\n \n @node DFLOAT\n @section @code{DFLOAT} --- Double conversion function \n-@cindex @code{DFLOAT} intrinsic\n-@cindex double float conversion\n+@fnindex DFLOAT\n+@cindex conversion, to real\n \n @table @asis\n @item @emph{Description}:\n@@ -2692,8 +2726,8 @@ end program test_dfloat\n \n @node DIGITS\n @section @code{DIGITS} --- Significant digits function\n-@cindex @code{DIGITS} intrinsic\n-@cindex digits, significant\n+@fnindex DIGITS\n+@cindex model representation, significant digits\n \n @table @asis\n @item @emph{Description}:\n@@ -2734,11 +2768,11 @@ end program test_digits\n \n \n @node DIM\n-@section @code{DIM} --- Dim function\n-@cindex @code{DIM} intrinsic\n-@cindex @code{IDIM} intrinsic\n-@cindex @code{DDIM} intrinsic\n-@cindex dim\n+@section @code{DIM} --- Positive difference\n+@fnindex DIM\n+@fnindex IDIM\n+@fnindex DDIM\n+@cindex positive difference\n \n @table @asis\n @item @emph{Description}:\n@@ -2787,8 +2821,10 @@ end program test_dim\n \n @node DOT_PRODUCT\n @section @code{DOT_PRODUCT} --- Dot product function\n-@cindex @code{DOT_PRODUCT} intrinsic\n+@fnindex DOT_PRODUCT\n @cindex dot product\n+@cindex vector product\n+@cindex product, vector\n \n @table @asis\n @item @emph{Description}:\n@@ -2838,8 +2874,8 @@ end program test_dot_prod\n \n @node DPROD\n @section @code{DPROD} --- Double product function\n-@cindex @code{DPROD} intrinsic\n-@cindex double-precision product\n+@fnindex DPROD\n+@cindex product, double-precision\n \n @table @asis\n @item @emph{Description}:\n@@ -2866,7 +2902,6 @@ The return value is of type @code{REAL(8)}.\n @item @emph{Example}:\n @smallexample\n program test_dprod\n-    integer :: i\n     real :: x = 5.2\n     real :: y = 2.3\n     real(8) :: d\n@@ -2880,8 +2915,8 @@ end program test_dprod\n \n @node DREAL\n @section @code{DREAL} --- Double real part function\n-@cindex @code{DREAL} intrinsic\n-@cindex double-precision real part\n+@fnindex DREAL\n+@cindex complex numbers, real part\n \n @table @asis\n @item @emph{Description}:\n@@ -2921,7 +2956,7 @@ end program test_dreal\n \n @node DTIME\n @section @code{DTIME} --- Execution time subroutine (or function)\n-@cindex @code{DTIME} intrinsic\n+@fnindex DTIME\n @cindex time, elapsed\n @cindex elapsed time\n \n@@ -2998,9 +3033,9 @@ end program test_dtime\n \n \n @node EOSHIFT\n-@section @code{EOSHIFT} --- End-off shift function\n-@cindex @code{EOSHIFT} intrinsic\n-@cindex bit operations\n+@section @code{EOSHIFT} --- End-off shift elements of an array\n+@fnindex EOSHIFT\n+@cindex array, shift\n \n @table @asis\n @item @emph{Description}:\n@@ -3064,8 +3099,8 @@ end program test_eoshift\n \n @node EPSILON\n @section @code{EPSILON} --- Epsilon function\n-@cindex @code{EPSILON} intrinsic\n-@cindex epsilon, significant\n+@fnindex EPSILON\n+@cindex model representation, epsilon\n \n @table @asis\n @item @emph{Description}:\n@@ -3103,7 +3138,7 @@ end program test_epsilon\n \n @node ERF\n @section @code{ERF} --- Error function \n-@cindex @code{ERF} intrinsic\n+@fnindex ERF\n @cindex error function\n \n @table @asis\n@@ -3147,8 +3182,8 @@ end program test_erf\n \n @node ERFC\n @section @code{ERFC} --- Error function \n-@cindex @code{ERFC} intrinsic\n-@cindex error function\n+@fnindex ERFC\n+@cindex error function, complementary\n \n @table @asis\n @item @emph{Description}:\n@@ -3191,7 +3226,7 @@ end program test_erfc\n \n @node ETIME\n @section @code{ETIME} --- Execution time subroutine (or function)\n-@cindex @code{ETIME} intrinsic\n+@fnindex ETIME\n @cindex time, elapsed\n \n @table @asis\n@@ -3268,8 +3303,9 @@ end program test_etime\n \n @node EXIT\n @section @code{EXIT} --- Exit the program with status. \n-@cindex @code{EXIT} intrinsic\n-@cindex exit program\n+@fnindex EXIT\n+@cindex program termination\n+@cindex terminate program\n \n @table @asis\n @item @emph{Description}:\n@@ -3311,12 +3347,13 @@ end program test_exit\n \n @node EXP\n @section @code{EXP} --- Exponential function \n-@cindex @code{EXP} intrinsic\n-@cindex @code{DEXP} intrinsic\n-@cindex @code{CEXP} intrinsic\n-@cindex @code{ZEXP} intrinsic\n-@cindex @code{CDEXP} intrinsic\n-@cindex exponential\n+@fnindex EXP\n+@fnindex DEXP\n+@fnindex CEXP\n+@fnindex ZEXP\n+@fnindex CDEXP\n+@cindex exponential function\n+@cindex logarithmic function, inverse\n \n @table @asis\n @item @emph{Description}:\n@@ -3362,8 +3399,9 @@ end program test_exp\n \n @node EXPONENT\n @section @code{EXPONENT} --- Exponent function \n-@cindex @code{EXPONENT} intrinsic\n-@cindex exponent part of a real number\n+@fnindex EXPONENT\n+@cindex real number, exponent\n+@cindex floating point, exponent\n \n @table @asis\n @item @emph{Description}:\n@@ -3403,7 +3441,7 @@ end program test_exponent\n \n @node FDATE\n @section @code{FDATE} --- Get the current time as a string\n-@cindex @code{FDATE} intrinsic\n+@fnindex FDATE\n @cindex time, current\n @cindex current time\n @cindex date, current\n@@ -3459,10 +3497,9 @@ end program test_fdate\n \n \n @node FLOAT\n-\n @section @code{FLOAT} --- Convert integer to default real\n-@cindex @code{FLOAT} intrinsic\n-@cindex conversion function (float)\n+@fnindex FLOAT\n+@cindex conversion, to real\n \n @table @asis\n @item @emph{Description}:\n@@ -3501,9 +3538,10 @@ end program test_float\n \n @node FGET\n @section @code{FGET} --- Read a single character in stream mode from stdin \n-@cindex @code{FGET} intrinsic\n-@cindex file operations\n-@cindex stream operations\n+@fnindex FGET\n+@cindex read character, stream mode\n+@cindex stream mode, read character\n+@cindex file operation, read character\n \n @table @asis\n @item @emph{Description}:\n@@ -3558,9 +3596,10 @@ END PROGRAM\n \n @node FGETC\n @section @code{FGETC} --- Read a single character in stream mode\n-@cindex @code{FGETC} intrinsic\n-@cindex file operations\n-@cindex stream operations\n+@fnindex FGETC\n+@cindex read character, stream mode\n+@cindex stream mode, read character\n+@cindex file operation, read character\n \n @table @asis\n @item @emph{Description}:\n@@ -3614,8 +3653,9 @@ END PROGRAM\n \n @node FLOOR\n @section @code{FLOOR} --- Integer floor function\n-@cindex @code{FLOOR} intrinsic\n+@fnindex FLOOR\n @cindex floor\n+@cindex rounding, floor\n \n @table @asis\n @item @emph{Description}:\n@@ -3660,8 +3700,8 @@ end program test_floor\n \n @node FLUSH\n @section @code{FLUSH} --- Flush I/O unit(s)\n-@cindex @code{FLUSH} intrinsic\n-@cindex flush output files\n+@fnindex FLUSH\n+@cindex file operation, flush\n \n @table @asis\n @item @emph{Description}:\n@@ -3692,8 +3732,8 @@ statement that should be preferred over the @code{FLUSH} intrinsic.\n \n @node FNUM\n @section @code{FNUM} --- File number function\n-@cindex @code{FNUM} intrinsic\n-@cindex fnum\n+@fnindex FNUM\n+@cindex file operation, file number\n \n @table @asis\n @item @emph{Description}:\n@@ -3733,9 +3773,10 @@ end program test_fnum\n \n @node FPUT\n @section @code{FPUT} --- Write a single character in stream mode to stdout \n-@cindex @code{FPUT} intrinsic\n-@cindex file operations\n-@cindex stream operations\n+@fnindex FPUT\n+@cindex write character, stream mode\n+@cindex stream mode, write character\n+@cindex file operation, write character\n \n @table @asis\n @item @emph{Description}:\n@@ -3783,9 +3824,10 @@ END PROGRAM\n \n @node FPUTC\n @section @code{FPUTC} --- Write a single character in stream mode\n-@cindex @code{FPUTC} intrinsic\n-@cindex file operations\n-@cindex stream operations\n+@fnindex FPUTC\n+@cindex write character, stream mode\n+@cindex stream mode, write character\n+@cindex file operation, write character\n \n @table @asis\n @item @emph{Description}:\n@@ -3837,8 +3879,9 @@ END PROGRAM\n \n @node FRACTION\n @section @code{FRACTION} --- Fractional part of the model representation\n-@cindex @code{FRACTION} intrinsic\n-@cindex fractional part\n+@fnindex FRACTION\n+@cindex real number, fraction\n+@cindex floating point, fraction\n \n @table @asis\n @item @emph{Description}:\n@@ -3879,8 +3922,8 @@ end program test_fraction\n \n @node FREE\n @section @code{FREE} --- Frees memory\n-@cindex @code{FREE} intrinsic\n-@cindex Cray pointers\n+@fnindex FREE\n+@cindex pointer, cray\n \n @table @asis\n @item @emph{Description}:\n@@ -3919,8 +3962,9 @@ See @code{MALLOC} for an example.\n \n @node FSEEK\n @section @code{FSEEK} --- Low level file positioning subroutine\n-@cindex @code{FSEEK} intrinsic\n-@cindex file system operations\n+@fnindex FSEEK\n+@cindex file operation, seek\n+@cindex file operation, position\n \n Not yet implemented in GNU Fortran.\n \n@@ -3947,8 +3991,8 @@ Subroutine\n \n @node FSTAT\n @section @code{FSTAT} --- Get file status\n-@cindex @code{FSTAT} intrinsic\n-@cindex file system operations \n+@fnindex FSTAT\n+@cindex file system, file status\n \n @table @asis\n @item @emph{Description}:\n@@ -3985,7 +4029,8 @@ To stat a link: @ref{LSTAT}, to stat a file: @ref{STAT}\n \n @node FTELL\n @section @code{FTELL} --- Current stream position\n-@cindex @code{FTELL} intrinsic\n+@fnindex FTELL\n+@cindex file operation, position\n \n @table @asis\n @item @emph{Description}:\n@@ -4034,7 +4079,8 @@ END PROGRAM\n \n @node GERROR\n @section @code{GERROR} --- Get last system error message\n-@cindex @code{GERROR} intrinsic\n+@fnindex GERROR\n+@cindex system, error handling\n \n @table @asis\n @item @emph{Description}:\n@@ -4072,8 +4118,9 @@ END PROGRAM\n \n @node GETARG\n @section @code{GETARG} --- Get command line arguments\n-@cindex @code{GETARG} intrinsic\n-@cindex command-line arguments, to program\n+@fnindex GETARG\n+@cindex command-line arguments\n+@cindex arguments, to program\n \n @table @asis\n @item @emph{Description}:\n@@ -4132,8 +4179,9 @@ F2003 functions and subroutines: @ref{GET_COMMAND}, @ref{GET_COMMAND_ARGUMENT},\n \n @node GET_COMMAND\n @section @code{GET_COMMAND} --- Get the entire command line\n-@cindex @code{GET_COMMAND} intrinsic\n-@cindex command-line arguments, to program\n+@fnindex GET_COMMAND\n+@cindex command-line arguments\n+@cindex arguments, to program\n \n @table @asis\n @item @emph{Description}:\n@@ -4174,8 +4222,9 @@ END PROGRAM\n \n @node GET_COMMAND_ARGUMENT\n @section @code{GET_COMMAND_ARGUMENT} --- Get command line arguments\n-@cindex @code{GET_COMMAND_ARGUMENT} intrinsic\n-@cindex command-line arguments, to program\n+@fnindex GET_COMMAND_ARGUMENT\n+@cindex command-line arguments\n+@cindex arguments, to program\n \n @table @asis\n @item @emph{Description}:\n@@ -4230,8 +4279,8 @@ END PROGRAM\n \n @node GETCWD\n @section @code{GETCWD} --- Get current working directory\n-@cindex @code{GETCWD} intrinsic\n-@cindex file system operations\n+@fnindex GETCWD\n+@cindex system, working directory\n \n @table @asis\n @item @emph{Description}:\n@@ -4270,7 +4319,7 @@ END PROGRAM\n \n @node GETENV\n @section @code{GETENV} --- Get an environmental variable\n-@cindex @code{GETENV} intrinsic\n+@fnindex GETENV\n @cindex environment variable\n \n @table @asis\n@@ -4319,7 +4368,7 @@ END PROGRAM\n \n @node GET_ENVIRONMENT_VARIABLE\n @section @code{GET_ENVIRONMENT_VARIABLE} --- Get an environmental variable\n-@cindex @code{GET_ENVIRONMENT_VARIABLE} intrinsic\n+@fnindex GET_ENVIRONMENT_VARIABLE\n @cindex environment variable\n \n @table @asis\n@@ -4360,8 +4409,8 @@ END PROGRAM\n \n @node GETGID\n @section @code{GETGID} --- Group ID function\n-@cindex @code{GETGID} intrinsic\n-@cindex file system operations\n+@fnindex GETGID\n+@cindex system, group id\n \n @table @asis\n @item @emph{Description}:\n@@ -4392,7 +4441,9 @@ See @code{GETPID} for an example.\n \n @node GETLOG\n @section @code{GETLOG} --- Get login name\n-@cindex @code{GETLOG} intrinsic\n+@fnindex GETLOG\n+@cindex system, login name\n+@cindex login name\n \n @table @asis\n @item @emph{Description}:\n@@ -4435,8 +4486,9 @@ END PROGRAM\n \n @node GETPID\n @section @code{GETPID} --- Process ID function\n-@cindex @code{GETPID} intrinsic\n-@cindex process ID, current\n+@fnindex GETPID\n+@cindex system, process id\n+@cindex process id\n \n @table @asis\n @item @emph{Description}:\n@@ -4473,8 +4525,9 @@ end program info\n \n @node GETUID\n @section @code{GETUID} --- User ID function\n-@cindex @code{GETUID} intrinsic\n-@cindex user ID, current\n+@fnindex GETUID\n+@cindex system, user id\n+@cindex user id\n \n @table @asis\n @item @emph{Description}:\n@@ -4505,8 +4558,8 @@ See @code{GETPID} for an example.\n \n @node GMTIME\n @section @code{GMTIME} --- Convert time to GMT info\n-@cindex @code{GMTIME} intrinsic\n-@cindex time, conversion function\n+@fnindex GMTIME\n+@cindex time, conversion to GMT info\n \n @table @asis\n @item @emph{Description}:\n@@ -4559,7 +4612,8 @@ The elements of @var{TARRAY} are assigned as follows:\n \n @node HOSTNM\n @section @code{HOSTNM} --- Get system host name\n-@cindex @code{HOSTNM} intrinsic\n+@fnindex HOSTNM\n+@cindex system, host name\n \n @table @asis\n @item @emph{Description}:\n@@ -4598,8 +4652,9 @@ be obtained, or to a blank string otherwise.\n \n @node HUGE\n @section @code{HUGE} --- Largest number of a kind\n-@cindex @code{HUGE} intrinsic\n-@cindex huge\n+@fnindex HUGE\n+@cindex limits, largest number\n+@cindex model representation, largest number\n \n @table @asis\n @item @emph{Description}:\n@@ -4636,9 +4691,10 @@ end program test_huge_tiny\n \n @node IACHAR\n @section @code{IACHAR} --- Code in @acronym{ASCII} collating sequence \n-@cindex @code{IACHAR} intrinsic\n+@fnindex IACHAR\n @cindex @acronym{ASCII} collating sequence\n-@cindex conversion function (character)\n+@cindex collating sequence, @acronym{ASCII}\n+@cindex conversion, to integer\n \n @table @asis\n @item @emph{Description}:\n@@ -4684,8 +4740,9 @@ and formatted string representations.\n \n @node IAND\n @section @code{IAND} --- Bitwise logical and\n-@cindex @code{IAND} intrinsic\n-@cindex bit operations\n+@fnindex IAND\n+@cindex bitwise logical and\n+@cindex logical and, bitwise\n \n @table @asis\n @item @emph{Description}:\n@@ -4731,8 +4788,10 @@ END PROGRAM\n \n @node IARGC\n @section @code{IARGC} --- Get the number of command line arguments\n-@cindex @code{IARGC} intrinsic\n-@cindex command-line arguments, to program\n+@fnindex IARGC\n+@cindex command-line arguments\n+@cindex command-line arguments, number of\n+@cindex arguments, to program\n \n @table @asis\n @item @emph{Description}:\n@@ -4773,8 +4832,9 @@ F2003 functions and subroutines: @ref{GET_COMMAND}, @ref{GET_COMMAND_ARGUMENT},\n \n @node IBCLR\n @section @code{IBCLR} --- Clear bit\n-@cindex @code{IBCLR} intrinsic\n-@cindex bit operations\n+@fnindex IBCLR\n+@cindex bits, unset\n+@cindex bits, clear\n \n @table @asis\n @item @emph{Description}:\n@@ -4809,8 +4869,9 @@ The return value is of type @code{INTEGER(*)} and of the same kind as\n \n @node IBITS\n @section @code{IBITS} --- Bit extraction\n-@cindex @code{IBITS} intrinsic\n-@cindex bit operations\n+@fnindex IBITS\n+@cindex bits, get\n+@cindex bits, extract\n \n @table @asis\n @item @emph{Description}:\n@@ -4848,8 +4909,8 @@ The return value is of type @code{INTEGER(*)} and of the same kind as\n \n @node IBSET\n @section @code{IBSET} --- Set bit\n-@cindex @code{IBSET} intrinsic\n-@cindex bit operations\n+@fnindex IBSET\n+@cindex bits, set\n \n @table @asis\n @item @emph{Description}:\n@@ -4884,8 +4945,8 @@ The return value is of type @code{INTEGER(*)} and of the same kind as\n \n @node ICHAR\n @section @code{ICHAR} --- Character-to-integer conversion function\n-@cindex @code{ICHAR} intrinsic\n-@cindex conversion function (character)\n+@fnindex ICHAR\n+@cindex conversion, to integer\n \n @table @asis\n @item @emph{Description}:\n@@ -4952,7 +5013,9 @@ end program read_val\n \n @node IDATE\n @section @code{IDATE} --- Get current local time subroutine (day/month/year) \n-@cindex @code{IDATE} intrinsic\n+@fnindex IDATE\n+@cindex date, current\n+@cindex current date\n \n @table @asis\n @item @emph{Description}:\n@@ -4995,8 +5058,9 @@ end program test_idate\n \n @node IEOR\n @section @code{IEOR} --- Bitwise logical exclusive or\n-@cindex @code{IEOR} intrinsic\n-@cindex bit operations\n+@fnindex IEOR\n+@cindex bitwise logical exclusive or\n+@cindex logical exclusive or, bitwise\n \n @table @asis\n @item @emph{Description}:\n@@ -5033,7 +5097,8 @@ the larger argument.)\n \n @node IERRNO\n @section @code{IERRNO} --- Get the last system error number\n-@cindex @code{IERRNO} intrinsic\n+@fnindex IERRNO\n+@cindex system, error handling\n \n @table @asis\n @item @emph{Description}:\n@@ -5064,8 +5129,9 @@ kind.\n \n @node INDEX\n @section @code{INDEX} --- Position of a substring within a string\n-@cindex @code{INDEX} intrinsic\n-@cindex string manipulation\n+@fnindex INDEX\n+@cindex substring position\n+@cindex string, find substring\n \n @table @asis\n @item @emph{Description}:\n@@ -5106,10 +5172,10 @@ kind.\n \n @node INT\n @section @code{INT} --- Convert to integer type\n-@cindex @code{INT} intrinsic\n-@cindex @code{IFIX} intrinsic\n-@cindex @code{IDINT} intrinsic\n-@cindex conversion function (integer)\n+@fnindex INT\n+@fnindex IFIX\n+@fnindex IDINT\n+@cindex conversion, to integer\n \n @table @asis\n @item @emph{Description}:\n@@ -5171,9 +5237,9 @@ end program\n \n @node INT2\n @section @code{INT2} --- Convert to 16-bit integer type\n-@cindex @code{INT2} intrinsic\n-@cindex @code{SHORT} intrinsic\n-@cindex conversion function (integer)\n+@fnindex INT2\n+@fnindex SHORT\n+@cindex conversion, to integer\n \n @table @asis\n @item @emph{Description}:\n@@ -5209,8 +5275,8 @@ The return value is a @code{INTEGER(2)} variable.\n \n @node INT8\n @section @code{INT8} --- Convert to 64-bit integer type\n-@cindex @code{INT8} intrinsic\n-@cindex conversion function (integer)\n+@fnindex INT8\n+@cindex conversion, to integer\n \n @table @asis\n @item @emph{Description}:\n@@ -5244,8 +5310,9 @@ The return value is a @code{INTEGER(8)} variable.\n \n @node IOR\n @section @code{IOR} --- Bitwise logical or\n-@cindex @code{IOR} intrinsic\n-@cindex bit operations\n+@fnindex IOR\n+@cindex bitwise logical or\n+@cindex logical or, bitwise\n \n @table @asis\n @item @emph{Description}:\n@@ -5282,8 +5349,8 @@ the larger argument.)\n \n @node IRAND\n @section @code{IRAND} --- Integer pseudo-random number\n-@cindex @code{IRAND} intrinsic\n-@cindex random numbers\n+@fnindex IRAND\n+@cindex random number generation\n \n @table @asis\n @item @emph{Description}:\n@@ -5328,7 +5395,8 @@ end program test_irand\n \n @node ISATTY\n @section @code{ISATTY} --- Whether a unit is a terminal device.\n-@cindex @code{ISATTY} intrinsic\n+@fnindex ISATTY\n+@cindex system, terminal\n \n @table @asis\n @item @emph{Description}:\n@@ -5369,8 +5437,8 @@ END PROGRAM\n \n @node ISHFT\n @section @code{ISHFT} --- Shift bits\n-@cindex @code{ISHFT} intrinsic\n-@cindex bit operations\n+@fnindex ISHFT\n+@cindex bits, shift\n \n @table @asis\n @item @emph{Description}:\n@@ -5409,8 +5477,8 @@ The return value is of type @code{INTEGER(*)} and of the same kind as\n \n @node ISHFTC\n @section @code{ISHFTC} --- Shift bits circularly\n-@cindex @code{ISHFTC} intrinsic\n-@cindex bit operations\n+@fnindex ISHFTC\n+@cindex bits, shift circular\n \n @table @asis\n @item @emph{Description}:\n@@ -5453,7 +5521,9 @@ The return value is of type @code{INTEGER(*)} and of the same kind as\n \n @node ITIME\n @section @code{ITIME} --- Get current local time subroutine (hour/minutes/seconds) \n-@cindex @code{ITIME} intrinsic\n+@fnindex ITIME\n+@cindex time, current\n+@cindex current time\n \n @table @asis\n @item @emph{Description}:\n@@ -5497,7 +5567,7 @@ end program test_itime\n \n @node KILL\n @section @code{KILL} --- Send a signal to a process\n-@cindex @code{KILL} intrinsic\n+@fnindex KILL\n \n @table @asis\n @item @emph{Description}:\n@@ -5530,7 +5600,8 @@ Subroutine\n \n @node KIND\n @section @code{KIND} --- Kind of an entity\n-@cindex @code{KIND} intrinsic\n+@fnindex KIND\n+@cindex kind\n \n @table @asis\n @item @emph{Description}:\n@@ -5572,7 +5643,8 @@ end program test_kind\n \n @node LBOUND\n @section @code{LBOUND} --- Lower dimension bounds of an array\n-@cindex @code{LBOUND} intrinsic\n+@fnindex LBOUND\n+@cindex array, lower bound\n \n @table @asis\n @item @emph{Description}:\n@@ -5609,7 +5681,8 @@ dimension, the lower bound is taken to be 1.\n \n @node LEN\n @section @code{LEN} --- Length of a character entity\n-@cindex @code{LEN} intrinsic\n+@fnindex LEN\n+@cindex string, length\n \n @table @asis\n @item @emph{Description}:\n@@ -5644,7 +5717,8 @@ The return value is an @code{INTEGER} of the default kind.\n \n @node LEN_TRIM\n @section @code{LEN_TRIM} --- Length of a character entity without trailing blank characters\n-@cindex @code{LEN_TRIM} intrinsic\n+@fnindex LEN_TRIM\n+@cindex string, length, without trailing whitespace\n \n @table @asis\n @item @emph{Description}:\n@@ -5676,9 +5750,9 @@ The return value is an @code{INTEGER} of the default kind.\n \n @node LGE\n @section @code{LGE} --- Lexical greater than or equal\n-@cindex @code{LGE} intrinsic\n-@cindex comparison (lexical)\n-@cindex lexical comparison\n+@fnindex LGE\n+@cindex lexical comparison of strings\n+@cindex string, comparison\n \n @table @asis\n @item @emph{Description}:\n@@ -5722,9 +5796,9 @@ otherwise, based on the ASCII ordering.\n \n @node LGT\n @section @code{LGT} --- Lexical greater than\n-@cindex @code{LGT} intrinsic\n-@cindex comparison (lexical)\n-@cindex lexical comparison\n+@fnindex LGT\n+@cindex lexical comparison of strings\n+@cindex string, comparison\n \n @table @asis\n @item @emph{Description}:\n@@ -5768,8 +5842,9 @@ otherwise, based on the ASCII ordering.\n \n @node LINK\n @section @code{LINK} --- Create a hard link\n-@cindex @code{LINK} intrinsic\n-@cindex file system operations\n+@fnindex LINK\n+@cindex file system, create link\n+@cindex file system, hard link\n \n @table @asis\n @item @emph{Description}:\n@@ -5810,9 +5885,9 @@ Subroutine, non-elemental function\n \n @node LLE\n @section @code{LLE} --- Lexical less than or equal\n-@cindex @code{LLE} intrinsic\n-@cindex comparison (lexical)\n-@cindex lexical comparison\n+@fnindex LLE\n+@cindex lexical comparison of strings\n+@cindex string, comparison\n \n @table @asis\n @item @emph{Description}:\n@@ -5856,9 +5931,9 @@ otherwise, based on the ASCII ordering.\n \n @node LLT\n @section @code{LLT} --- Lexical less than\n-@cindex @code{LLT} intrinsic\n-@cindex comparison (lexical)\n-@cindex lexical comparison\n+@fnindex LLT\n+@cindex lexical comparison of strings\n+@cindex string, comparison\n \n @table @asis\n @item @emph{Description}:\n@@ -5902,7 +5977,8 @@ otherwise, based on the ASCII ordering.\n \n @node LNBLNK\n @section @code{LNBLNK} --- Index of the last non-blank character in a string\n-@cindex @code{LNBLNK} intrinsic\n+@fnindex LNBLNK\n+@cindex string, find non-blank character\n \n @table @asis\n @item @emph{Description}:\n@@ -5936,7 +6012,7 @@ The return value is of @code{INTEGER(kind=4)} type.\n \n @node LOC\n @section @code{LOC} --- Returns the address of a variable\n-@cindex @code{LOC} intrinsic\n+@fnindex LOC\n @cindex location of a variable in memory\n \n @table @asis\n@@ -5977,13 +6053,14 @@ end program test_loc\n \n @node LOG\n @section @code{LOG} --- Logarithm function\n-@cindex @code{LOG} intrinsic\n-@cindex @code{ALOG} intrinsic\n-@cindex @code{DLOG} intrinsic\n-@cindex @code{CLOG} intrinsic\n-@cindex @code{ZLOG} intrinsic\n-@cindex @code{CDLOG} intrinsic\n-@cindex logarithm\n+@fnindex LOG\n+@fnindex ALOG\n+@fnindex DLOG\n+@fnindex CLOG\n+@fnindex ZLOG\n+@fnindex CDLOG\n+@cindex exponential function, inverse\n+@cindex logarithmic function\n \n @table @asis\n @item @emph{Description}:\n@@ -6033,10 +6110,11 @@ end program test_log\n \n @node LOG10\n @section @code{LOG10} --- Base 10 logarithm function\n-@cindex @code{LOG10} intrinsic\n-@cindex @code{ALOG10} intrinsic\n-@cindex @code{DLOG10} intrinsic\n-@cindex logarithm\n+@fnindex LOG10\n+@fnindex ALOG10\n+@fnindex DLOG10\n+@cindex exponential function, inverse\n+@cindex logarithmic function\n \n @table @asis\n @item @emph{Description}:\n@@ -6081,8 +6159,8 @@ end program test_log10\n \n @node LOGICAL\n @section @code{LOGICAL} --- Convert to logical type\n-@cindex @code{LOGICAL} intrinsic\n-@cindex conversion function (logical)\n+@fnindex LOGICAL\n+@cindex conversion, to logical\n \n @table @asis\n @item @emph{Description}:\n@@ -6118,8 +6196,8 @@ kind corresponding to @var{KIND}, or of the default logical kind if\n \n @node LONG\n @section @code{LONG} --- Convert to integer type\n-@cindex @code{LONG} intrinsic\n-@cindex conversion function (integer)\n+@fnindex LONG\n+@cindex conversion, to integer\n \n @table @asis\n @item @emph{Description}:\n@@ -6154,8 +6232,8 @@ The return value is a @code{INTEGER(4)} variable.\n \n @node LSHIFT\n @section @code{LSHIFT} --- Left shift bits\n-@cindex @code{LSHIFT} intrinsic\n-@cindex bit operations\n+@fnindex LSHIFT\n+@cindex bits, shift left\n \n @table @asis\n @item @emph{Description}:\n@@ -6196,8 +6274,8 @@ The return value is of type @code{INTEGER(*)} and of the same kind as\n \n @node LSTAT\n @section @code{LSTAT} --- Get file status\n-@cindex @code{LSTAT} intrinsic\n-@cindex file system operations \n+@fnindex LSTAT\n+@cindex file system, file status\n \n @table @asis\n @item @emph{Description}:\n@@ -6234,8 +6312,8 @@ To stat an open file: @ref{FSTAT}, to stat a file: @ref{STAT}\n \n @node LTIME\n @section @code{LTIME} --- Convert time to local time info\n-@cindex @code{LTIME} intrinsic\n-@cindex time, conversion function\n+@fnindex LTIME\n+@cindex time, converstion to local time info\n \n @table @asis\n @item @emph{Description}:\n@@ -6287,8 +6365,8 @@ The elements of @var{TARRAY} are assigned as follows:\n \n @node MALLOC\n @section @code{MALLOC} --- Allocate dynamic memory\n-@cindex @code{MALLOC} intrinsic\n-@cindex Cray pointers\n+@fnindex MALLOC\n+@cindex pointer, cray\n \n @table @asis\n @item @emph{Description}:\n@@ -6353,8 +6431,9 @@ end program test_malloc\n \n @node MATMUL\n @section @code{MATMUL} --- matrix multiplication\n-@cindex @code{MATMUL} intrinsic\n-@cindex matrix operations\n+@fnindex MATMUL\n+@cindex matrix multiplication\n+@cindex product, matrix\n \n @table @asis\n @item @emph{Description}:\n@@ -6397,12 +6476,13 @@ for the @code{*} or @code{.AND.} operators.\n \n @node MAX\n @section @code{MAX} --- Maximum value of an argument list\n-@cindex @code{MAX} intrinsic\n-@cindex @code{MAX0} intrinsic\n-@cindex @code{AMAX0} intrinsic\n-@cindex @code{MAX1} intrinsic\n-@cindex @code{AMAX1} intrinsic\n-@cindex @code{DMAX1} intrinsic\n+@fnindex MAX\n+@fnindex MAX0\n+@fnindex AMAX0\n+@fnindex MAX1\n+@fnindex AMAX1\n+@fnindex DMAX1\n+@cindex maximum value\n \n @table @asis\n @item @emph{Description}:\n@@ -6450,9 +6530,8 @@ and has the same type and kind as the first argument.\n \n @node MAXEXPONENT\n @section @code{MAXEXPONENT} --- Maximum exponent of a real kind\n-@cindex @code{MAXEXPONENT} intrinsic\n-@cindex maximum exponent\n-@cindex exponent, maximum\n+@fnindex MAXEXPONENT\n+@cindex model representation, maximum exponent\n \n @table @asis\n @item @emph{Description}:\n@@ -6493,7 +6572,8 @@ end program exponents\n \n @node MAXLOC\n @section @code{MAXLOC} --- Location of the maximum value within an array\n-@cindex @code{MAXLOC} intrinsic\n+@fnindex MAXLOC\n+@cindex array, location of maximum element\n \n @table @asis\n @item @emph{Description}:\n@@ -6551,7 +6631,9 @@ of one, the result is a scalar.  In all cases, the result is of default\n \n @node MAXVAL\n @section @code{MAXVAL} --- Maximum value of an array\n-@cindex @code{MAXVAL} intrinsic\n+@fnindex MAXVAL\n+@cindex array, maximum value\n+@cindex maximum value\n \n @table @asis\n @item @emph{Description}:\n@@ -6603,7 +6685,7 @@ cases, the result is of the same type and kind as @var{ARRAY}.\n \n @node MCLOCK\n @section @code{MCLOCK} --- Time function\n-@cindex @code{MCLOCK} intrinsic\n+@fnindex MCLOCK\n @cindex time, clock ticks\n @cindex clock ticks\n \n@@ -6641,9 +6723,9 @@ the system does not support @code{clock(3)}.\n \n @node MCLOCK8\n @section @code{MCLOCK8} --- Time function (64-bit)\n-@cindex @code{MCLOCK8} intrinsic\n-@cindex time, current\n-@cindex current time\n+@fnindex MCLOCK8\n+@cindex time, clock ticks\n+@cindex clock ticks\n \n @table @asis\n @item @emph{Description}:\n@@ -6681,7 +6763,9 @@ the system does not support @code{clock(3)}.\n \n @node MERGE\n @section @code{MERGE} --- Merge variables\n-@cindex @code{MERGE} intrinsic\n+@fnindex MERGE\n+@cindex array, merge arrays\n+@cindex array, combine arrays\n \n @table @asis\n @item @emph{Description}:\n@@ -6715,12 +6799,13 @@ The result is of the same type and type parameters as @var{TSOURCE}.\n \n @node MIN\n @section @code{MIN} --- Minimum value of an argument list\n-@cindex @code{MIN} intrinsic\n-@cindex @code{MIN0} intrinsic\n-@cindex @code{AMIN0} intrinsic\n-@cindex @code{MIN1} intrinsic\n-@cindex @code{AMIN1} intrinsic\n-@cindex @code{DMIN1} intrinsic\n+@fnindex MIN\n+@fnindex MIN0\n+@fnindex AMIN0\n+@fnindex MIN1\n+@fnindex AMIN1\n+@fnindex DMIN1\n+@cindex minimum value\n \n @table @asis\n @item @emph{Description}:\n@@ -6767,9 +6852,8 @@ and has the same type and kind as the first argument.\n \n @node MINEXPONENT\n @section @code{MINEXPONENT} --- Minimum exponent of a real kind\n-@cindex @code{MINEXPONENT} intrinsic\n-@cindex minimum exponent\n-@cindex exponent, minimum\n+@fnindex MINEXPONENT\n+@cindex model representation, minimum exponent\n \n @table @asis\n @item @emph{Description}:\n@@ -6802,7 +6886,8 @@ See @code{MAXEXPONENT} for an example.\n \n @node MINLOC\n @section @code{MINLOC} --- Location of the minimum value within an array\n-@cindex @code{MINLOC} intrinsic\n+@fnindex MINLOC\n+@cindex array, location of minimum element\n \n @table @asis\n @item @emph{Description}:\n@@ -6860,7 +6945,9 @@ of one, the result is a scalar.  In all cases, the result is of default\n \n @node MINVAL\n @section @code{MINVAL} --- Minimum value of an array\n-@cindex @code{MINVAL} intrinsic\n+@fnindex MINVAL\n+@cindex array, minmum value\n+@cindex minimum value\n \n @table @asis\n @item @emph{Description}:\n@@ -6913,10 +7000,11 @@ cases, the result is of the same type and kind as @var{ARRAY}.\n \n @node MOD\n @section @code{MOD} --- Remainder function\n-@cindex @code{MOD} intrinsic\n-@cindex @code{AMOD} intrinsic\n-@cindex @code{DMOD} intrinsic\n+@fnindex MOD\n+@fnindex AMOD\n+@fnindex DMOD\n @cindex remainder\n+@cindex division, remainder\n \n @table @asis\n @item @emph{Description}:\n@@ -6975,8 +7063,9 @@ end program test_mod\n \n @node MODULO\n @section @code{MODULO} --- Modulo function\n-@cindex @code{MODULO} intrinsic\n+@fnindex MODULO\n @cindex modulo\n+@cindex division, modulo\n \n @table @asis\n @item @emph{Description}:\n@@ -7029,7 +7118,7 @@ end program\n \n @node MOVE_ALLOC\n @section @code{MOVE_ALLOC} --- Move allocation from one object to another\n-@cindex @code{MOVE_ALLOC} intrinsic\n+@fnindex MOVE_ALLOC\n @cindex moving allocation\n @cindex allocation, moving\n \n@@ -7076,8 +7165,8 @@ end program test_move_alloc\n \n @node MVBITS\n @section @code{MVBITS} --- Move bits from one integer to another\n-@cindex @code{MVBITS} intrinsic\n-@cindex bit operations\n+@fnindex MVBITS\n+@cindex bits, move\n \n @table @asis\n @item @emph{Description}:\n@@ -7120,8 +7209,9 @@ The return value is of type @code{INTEGER(*)} and of the same kind as\n \n @node NEAREST\n @section @code{NEAREST} --- Nearest representable number\n-@cindex @code{NEAREST} intrinsic\n-@cindex processor-representable number\n+@fnindex NEAREST\n+@cindex real number, nearest different\n+@cindex floating point, nearest different\n \n @table @asis\n @item @emph{Description}:\n@@ -7166,8 +7256,9 @@ end program test_nearest\n \n @node NEW_LINE\n @section @code{NEW_LINE} --- New line character\n-@cindex @code{NEW_LINE} intrinsic\n-@cindex @code{NEW_LINE} intrinsic\n+@fnindex NEW_LINE\n+@cindex newline\n+@cindex output, newline\n \n @table @asis\n @item @emph{Description}:\n@@ -7205,9 +7296,9 @@ end program newline\n \n @node NINT\n @section @code{NINT} --- Nearest whole number\n-@cindex @code{NINT} intrinsic\n-@cindex @code{IDNINT} intrinsic\n-@cindex whole number\n+@fnindex NINT\n+@fnindex IDNINT\n+@cindex rounding, nearest whole number\n \n @table @asis\n @item @emph{Description}:\n@@ -7258,8 +7349,10 @@ end program test_nint\n \n @node NOT\n @section @code{NOT} --- Logical negation\n-@cindex @code{NOT} intrinsic\n-@cindex bit operations\n+@fnindex NOT\n+@cindex bits, negate\n+@cindex bitwise logical not\n+@cindex logical not, bitwise\n \n @table @asis\n @item @emph{Description}:\n@@ -7292,8 +7385,9 @@ argument.\n \n @node NULL\n @section @code{NULL} --- Function that returns an disassociated pointer\n-@cindex @code{NULL} intrinsic\n-@cindex pointer status\n+@fnindex NULL\n+@cindex pointer, status\n+@cindex pointer, disassociated\n \n @table @asis\n @item @emph{Description}:\n@@ -7336,8 +7430,9 @@ REAL, POINTER, DIMENSION(:) :: VEC => NULL ()\n \n @node OR\n @section @code{OR} --- Bitwise logical OR\n-@cindex @code{OR} intrinsic\n-@cindex bit operations\n+@fnindex OR\n+@cindex bitwise logical or\n+@cindex logical or, bitwise\n \n @table @asis\n @item @emph{Description}:\n@@ -7386,8 +7481,10 @@ F95 elemental function: @ref{IOR}\n \n @node PACK\n @section @code{PACK} --- Pack an array into an array of rank one\n-@cindex @code{PACK} intrinsic\n-@cindex array manipulation\n+@fnindex PACK\n+@cindex array, packing\n+@cindex array, reduce dimension\n+@cindex array, gather elements\n \n @table @asis\n @item @emph{Description}:\n@@ -7452,7 +7549,8 @@ END PROGRAM\n \n @node PERROR\n @section @code{PERROR} --- Print system error message\n-@cindex @code{PERROR} intrinsic\n+@fnindex PERROR\n+@cindex system, error handling\n \n @table @asis\n @item @emph{Description}:\n@@ -7482,8 +7580,8 @@ Subroutine\n \n @node PRECISION\n @section @code{PRECISION} --- Decimal precision of a real kind\n-@cindex @code{PRECISION} intrinsic\n-@cindex precision of a real variable\n+@fnindex PRECISION\n+@cindex model representation, precision\n \n @table @asis\n @item @emph{Description}:\n@@ -7524,7 +7622,7 @@ end program prec_and_range\n \n @node PRESENT\n @section @code{PRESENT} --- Determine whether an optional dummy argument is specified\n-@cindex @code{PRESENT} intrinsic\n+@fnindex PRESENT\n \n @table @asis\n @item @emph{Description}:\n@@ -7567,8 +7665,11 @@ END PROGRAM\n \n @node PRODUCT\n @section @code{PRODUCT} --- Product of array elements\n-@cindex @code{PRODUCT} intrinsic\n-@cindex array operation\n+@fnindex PRODUCT\n+@cindex array, product\n+@cindex array, multiply elements\n+@cindex array, conditionally multiply elements\n+@cindex multiply array elements\n \n @table @asis\n @item @emph{Description}:\n@@ -7622,8 +7723,9 @@ END PROGRAM\n \n @node RADIX\n @section @code{RADIX} --- Base of a model number\n-@cindex @code{RADIX} intrinsic\n-@cindex base\n+@fnindex RADIX\n+@cindex model representation, base\n+@cindex model representation, radix\n \n @table @asis\n @item @emph{Description}:\n@@ -7661,8 +7763,8 @@ end program test_radix\n \n @node RAN\n @section @code{RAN} --- Real pseudo-random number\n-@cindex @code{RAN} intrinsic\n-@cindex random numbers\n+@fnindex RAN\n+@cindex random number generation\n \n @table @asis\n @item @emph{Description}:\n@@ -7684,8 +7786,8 @@ Non-elemental function\n \n @node RAND\n @section @code{RAND} --- Real pseudo-random number\n-@cindex @code{RAND} intrinsic\n-@cindex random numbers\n+@fnindex RAND\n+@cindex random number generation\n \n @table @asis\n @item @emph{Description}:\n@@ -7732,8 +7834,8 @@ end program test_rand\n \n @node RANDOM_NUMBER\n @section @code{RANDOM_NUMBER} --- Pseudo-random number\n-@cindex @code{RANDOM_NUMBER} intrinsic\n-@cindex random numbers\n+@fnindex RANDOM_NUMBER\n+@cindex random number generation\n \n @table @asis\n @item @emph{Description}:\n@@ -7780,8 +7882,9 @@ random number generator instead.\n \n @node RANDOM_SEED\n @section @code{RANDOM_SEED} --- Initialize a pseudo-random number sequence\n-@cindex @code{RANDOM_SEED} intrinsic\n-@cindex random numbers\n+@fnindex RANDOM_SEED\n+@cindex random number generation, seeding\n+@cindex seeding a random number generator\n \n @table @asis\n @item @emph{Description}:\n@@ -7842,8 +7945,8 @@ END SUBROUTINE\n \n @node RANGE\n @section @code{RANGE} --- Decimal exponent range of a real kind\n-@cindex @code{RANGE} intrinsic\n-@cindex range of a real variable\n+@fnindex RANGE\n+@cindex model representation, range\n \n @table @asis\n @item @emph{Description}:\n@@ -7876,9 +7979,10 @@ See @code{PRECISION} for an example.\n \n @node REAL\n @section @code{REAL} --- Convert to real type \n-@cindex @code{REAL} intrinsic\n-@cindex @code{REALPART} intrinsic\n-@cindex true values\n+@fnindex REAL\n+@fnindex REALPART\n+@cindex conversion, to real\n+@cindex complex numbers, real part\n \n @table @asis\n @item @emph{Description}:\n@@ -7941,8 +8045,8 @@ end program test_real\n \n @node RENAME\n @section @code{RENAME} --- Rename a file\n-@cindex @code{RENAME} intrinsic\n-@cindex file system operations\n+@fnindex RENAME\n+@cindex file system, rename file\n \n @table @asis\n @item @emph{Description}:\n@@ -7984,8 +8088,9 @@ Subroutine, non-elemental function\n \n @node REPEAT\n @section @code{REPEAT} --- Repeated string concatenation \n-@cindex @code{REPEAT} intrinsic\n-@cindex string manipulation\n+@fnindex REPEAT\n+@cindex string, repeat\n+@cindex string, concatenate\n \n @table @asis\n @item @emph{Description}:\n@@ -8022,8 +8127,9 @@ end program\n \n @node RESHAPE\n @section @code{RESHAPE} --- Function to reshape an array\n-@cindex @code{RESHAPE} intrinsic\n-@cindex array manipulation\n+@fnindex RESHAPE\n+@cindex array, change dimensions\n+@cindex array, transmogrify\n \n @table @asis\n @item @emph{Description}:\n@@ -8075,7 +8181,10 @@ END PROGRAM\n \n @node RRSPACING\n @section @code{RRSPACING} --- Reciprocal of the relative spacing\n-@cindex @code{RRSPACING} intrinsic\n+@fnindex RRSPACING\n+@cindex real number, relative spacing\n+@cindex floating point, relative spacing\n+\n \n @table @asis\n @item @emph{Description}:\n@@ -8109,8 +8218,8 @@ The value returned is equal to\n \n @node RSHIFT\n @section @code{RSHIFT} --- Right shift bits\n-@cindex @code{RSHIFT} intrinsic\n-@cindex bit operations\n+@fnindex RSHIFT\n+@cindex bits, shift right\n \n @table @asis\n @item @emph{Description}:\n@@ -8151,7 +8260,9 @@ The return value is of type @code{INTEGER(*)} and of the same kind as\n \n @node SCALE\n @section @code{SCALE} --- Scale a real value\n-@cindex @code{SCALE} intrinsic\n+@fnindex SCALE\n+@cindex real number, scale\n+@cindex floating point, scale\n \n @table @asis\n @item @emph{Description}:\n@@ -8191,8 +8302,8 @@ end program test_scale\n \n @node SCAN\n @section @code{SCAN} --- Scan a string for the presence of a set of characters\n-@cindex @code{SCAN} intrinsic\n-@cindex string manipulation\n+@fnindex SCAN\n+@cindex string, find subset\n \n @table @asis\n @item @emph{Description}:\n@@ -8242,9 +8353,9 @@ END PROGRAM\n \n @node SECNDS\n @section @code{SECNDS} --- Time function\n-@cindex @code{SECNDS} intrinsic\n-@cindex time, current\n-@cindex current time\n+@fnindex SECNDS\n+@cindex time, elapsed\n+@cindex elapsed time\n \n @table @asis\n @item @emph{Description}:\n@@ -8274,6 +8385,7 @@ None\n @item @emph{Example}:\n @smallexample\n program test_secnds\n+    integer :: i\n     real(4) :: t1, t2\n     print *, secnds (0.0)   ! seconds since midnight\n     t1 = secnds (0.0)       ! reference time\n@@ -8289,7 +8401,7 @@ end program test_secnds\n \n @node SECOND\n @section @code{SECOND} --- CPU time function\n-@cindex @code{SECOND} intrinsic\n+@fnindex SECOND\n @cindex time, elapsed\n @cindex elapsed time\n \n@@ -8333,8 +8445,9 @@ seconds.\n \n @node SELECTED_INT_KIND\n @section @code{SELECTED_INT_KIND} --- Choose integer kind\n-@cindex @code{SELECTED_INT_KIND} intrinsic\n+@fnindex SELECTED_INT_KIND\n @cindex integer kind\n+@cindex kind, integer\n \n @table @asis\n @item @emph{Description}:\n@@ -8378,8 +8491,9 @@ end program large_integers\n \n @node SELECTED_REAL_KIND\n @section @code{SELECTED_REAL_KIND} --- Choose real kind\n-@cindex @code{SELECTED_REAL_KIND} intrinsic\n+@fnindex SELECTED_REAL_KIND\n @cindex real kind\n+@cindex kind, real\n \n @table @asis\n @item @emph{Description}:\n@@ -8440,8 +8554,9 @@ end program real_kinds\n \n @node SET_EXPONENT\n @section @code{SET_EXPONENT} --- Set the exponent of the model\n-@cindex @code{SET_EXPONENT} intrinsic\n-@cindex exponent part of a real number\n+@fnindex SET_EXPONENT\n+@cindex real number, set exponent\n+@cindex floating point, set exponent\n \n @table @asis\n @item @emph{Description}:\n@@ -8484,8 +8599,8 @@ END PROGRAM\n \n @node SHAPE\n @section @code{SHAPE} --- Determine the shape of an array\n-@cindex @code{SHAPE} intrinsic\n-@cindex array manipulation\n+@fnindex SHAPE\n+@cindex array, shape\n \n @table @asis\n @item @emph{Description}:\n@@ -8530,9 +8645,9 @@ END PROGRAM\n \n @node SIGN\n @section @code{SIGN} --- Sign copying function\n-@cindex @code{SIGN} intrinsic\n-@cindex @code{ISIGN} intrinsic\n-@cindex @code{DSIGN} intrinsic\n+@fnindex SIGN\n+@fnindex ISIGN\n+@fnindex DSIGN\n @cindex sign copying\n \n @table @asis\n@@ -8584,8 +8699,8 @@ end program test_sign\n \n @node SIGNAL\n @section @code{SIGNAL} --- Signal handling subroutine (or function)\n-@cindex @code{SIGNAL} intrinsic\n-@cindex signal handling\n+@fnindex SIGNAL\n+@cindex system, signal handling\n \n @table @asis\n @item @emph{Description}:\n@@ -8641,12 +8756,13 @@ end program test_signal\n \n @node SIN\n @section @code{SIN} --- Sine function \n-@cindex @code{SIN} intrinsic\n-@cindex @code{DSIN} intrinsic\n-@cindex @code{CSIN} intrinsic\n-@cindex @code{ZSIN} intrinsic\n-@cindex @code{CDSIN} intrinsic\n-@cindex trigonometric functions\n+@fnindex SIN\n+@fnindex DSIN\n+@fnindex CSIN\n+@fnindex ZSIN\n+@fnindex CDSIN\n+@cindex trigonometric function, sine\n+@cindex sine\n \n @table @asis\n @item @emph{Description}:\n@@ -8695,9 +8811,11 @@ end program test_sin\n \n @node SINH\n @section @code{SINH} --- Hyperbolic sine function \n-@cindex @code{SINH} intrinsic\n-@cindex @code{DSINH} intrinsic\n+@fnindex SINH\n+@fnindex DSINH\n @cindex hyperbolic sine\n+@cindex hyperbolic function, sine\n+@cindex sine, hyperbolic\n \n @table @asis\n @item @emph{Description}:\n@@ -8742,8 +8860,10 @@ end program test_sinh\n \n @node SIZE\n @section @code{SIZE} --- Determine the size of an array\n-@cindex @code{SIZE} intrinsic\n-@cindex array manipulation\n+@fnindex SIZE\n+@cindex array, size\n+@cindex array, number of elements\n+@cindex array, count elements\n \n @table @asis\n @item @emph{Description}:\n@@ -8787,7 +8907,8 @@ END PROGRAM\n \n @node SLEEP\n @section @code{SLEEP} --- Sleep for the specified number of seconds\n-@cindex @code{SLEEP} intrinsic\n+@fnindex SLEEP\n+@cindex delayed execution\n \n @table @asis\n @item @emph{Description}:\n@@ -8819,8 +8940,8 @@ end\n \n @node SNGL\n @section @code{SNGL} --- Convert double precision real to default real\n-@cindex @code{SNGL} intrinsic\n-@cindex conversion function (real)\n+@fnindex SNGL\n+@cindex conversion, to real\n \n @table @asis\n @item @emph{Description}:\n@@ -8853,7 +8974,9 @@ The return value is of type default @code{REAL}.\n \n @node SPACING\n @section @code{SPACING} --- Smallest distance between two numbers of a given type\n-@cindex @code{SPACING} intrinsic\n+@fnindex SPACING\n+@cindex real number, relative spacing\n+@cindex floating point, relative spacing\n \n @table @asis\n @item @emph{Description}:\n@@ -8896,8 +9019,10 @@ END PROGRAM\n \n @node SPREAD\n @section @code{SPREAD} --- Add a dimension to an array\n-@cindex @code{SPREAD} intrinsic\n-@cindex array manipulation\n+@fnindex SPREAD\n+@cindex array, increase dimension\n+@cindex array, duplicate elementes\n+@cindex array, duplicate dimensions\n \n @table @asis\n @item @emph{Description}:\n@@ -8943,11 +9068,12 @@ END PROGRAM\n \n @node SQRT\n @section @code{SQRT} --- Square-root function\n-@cindex @code{SQRT} intrinsic\n-@cindex @code{DSQRT} intrinsic\n-@cindex @code{CSQRT} intrinsic\n-@cindex @code{ZSQRT} intrinsic\n-@cindex @code{CDSQRT} intrinsic\n+@fnindex SQRT\n+@fnindex DSQRT\n+@fnindex CSQRT\n+@fnindex ZSQRT\n+@fnindex CDSQRT\n+@cindex root\n @cindex square-root\n \n @table @asis\n@@ -8997,8 +9123,9 @@ end program test_sqrt\n \n @node SRAND\n @section @code{SRAND} --- Reinitialize the random number generator\n-@cindex @code{SRAND} intrinsic\n-@cindex random numbers\n+@fnindex SRAND\n+@cindex random number generation, seeding\n+@cindex seeding a random number generator\n \n @table @asis\n @item @emph{Description}:\n@@ -9044,8 +9171,8 @@ pseudo-random number generators.\n \n @node STAT\n @section @code{STAT} --- Get file status\n-@cindex @code{STAT} intrinsic\n-@cindex file system operations\n+@fnindex STAT\n+@cindex file system, file status\n \n @table @asis\n @item @emph{Description}:\n@@ -9125,8 +9252,11 @@ To stat an open file: @ref{FSTAT}, to stat a link: @ref{LSTAT}\n \n @node SUM\n @section @code{SUM} --- Sum of array elements\n-@cindex @code{SUM} intrinsic\n-@cindex array operation\n+@fnindex SUM\n+@cindex array, sum\n+@cindex array, add elements\n+@cindex array, conditionally add elements\n+@cindex sum array elements\n \n @table @asis\n @item @emph{Description}:\n@@ -9179,8 +9309,9 @@ END PROGRAM\n \n @node SYMLNK\n @section @code{SYMLNK} --- Create a symbolic link\n-@cindex @code{SYMLNK} intrinsic\n-@cindex file system operations\n+@fnindex SYMLNK\n+@cindex file system, create link\n+@cindex file system, soft link\n \n @table @asis\n @item @emph{Description}:\n@@ -9223,7 +9354,8 @@ Subroutine, non-elemental function\n \n @node SYSTEM\n @section @code{SYSTEM} --- Execute a shell command\n-@cindex @code{SYSTEM} intrinsic\n+@fnindex SYSTEM\n+@cindex system, system call\n \n @table @asis\n @item @emph{Description}:\n@@ -9261,9 +9393,9 @@ Subroutine, non-elemental function\n \n @node SYSTEM_CLOCK\n @section @code{SYSTEM_CLOCK} --- Time function\n-@cindex @code{SYSTEM_CLOCK} intrinsic\n-@cindex time, current\n-@cindex current time\n+@fnindex SYSTEM_CLOCK\n+@cindex time, clock ticks\n+@cindex clock ticks\n \n @table @asis\n @item @emph{Description}:\n@@ -9313,9 +9445,10 @@ END PROGRAM\n \n @node TAN\n @section @code{TAN} --- Tangent function\n-@cindex @code{TAN} intrinsic\n-@cindex @code{DTAN} intrinsic\n-@cindex trigonometric functions\n+@fnindex TAN\n+@fnindex DTAN\n+@cindex trigonometric function, tangent\n+@cindex tangent\n \n @table @asis\n @item @emph{Description}:\n@@ -9361,9 +9494,11 @@ end program test_tan\n \n @node TANH\n @section @code{TANH} --- Hyperbolic tangent function \n-@cindex @code{TANH} intrinsic\n-@cindex @code{DTANH} intrinsic\n+@fnindex TANH\n+@fnindex DTANH\n @cindex hyperbolic tangent\n+@cindex hyperbolic function, tangent\n+@cindex tangent, hyperbolic\n \n @table @asis\n @item @emph{Description}:\n@@ -9409,7 +9544,7 @@ end program test_tanh\n \n @node TIME\n @section @code{TIME} --- Time function\n-@cindex @code{TIME} intrinsic\n+@fnindex TIME\n @cindex time, current\n @cindex current time\n \n@@ -9450,7 +9585,7 @@ The return value is a scalar of type @code{INTEGER(4)}.\n \n @node TIME8\n @section @code{TIME8} --- Time function (64-bit)\n-@cindex @code{TIME8} intrinsic\n+@fnindex TIME8\n @cindex time, current\n @cindex current time\n \n@@ -9489,8 +9624,9 @@ The return value is a scalar of type @code{INTEGER(8)}.\n \n @node TINY\n @section @code{TINY} --- Smallest positive number of a real kind\n-@cindex @code{TINY} intrinsic\n-@cindex tiny\n+@fnindex TINY\n+@cindex limits, smallest number\n+@cindex model representation, smallest number\n \n @table @asis\n @item @emph{Description}:\n@@ -9522,7 +9658,8 @@ See @code{HUGE} for an example.\n \n @node TRANSFER\n @section @code{TRANSFER} --- Transfer bit patterns\n-@cindex @code{TRANSFER} intrinsic\n+@fnindex TRANSFER\n+@cindex bits, move\n @cindex type cast\n \n @table @asis\n@@ -9584,8 +9721,10 @@ END PROGRAM\n \n @node TRANSPOSE\n @section @code{TRANSPOSE} --- Transpose an array of rank two\n-@cindex @code{TRANSPOSE} intrinsic\n-@cindex matrix manipulation\n+@fnindex TRANSPOSE\n+@cindex array, transpose\n+@cindex matrix, transpose\n+@cindex transpose\n \n @table @asis\n @item @emph{Description}:\n@@ -9615,8 +9754,8 @@ The result has the the same type as @var{MATRIX}, and has shape\n \n @node TRIM\n @section @code{TRIM} --- Remove trailing blank characters of a string\n-@cindex @code{TRIM} intrinsic\n-@cindex string manipulation\n+@fnindex TRIM\n+@cindex string, remove trailing whitespace\n \n @table @asis\n @item @emph{Description}:\n@@ -9656,7 +9795,8 @@ END PROGRAM\n \n @node TTYNAM\n @section @code{TTYNAM} --- Get the name of a terminal device.\n-@cindex @code{TTYNAM} intrinsic\n+@fnindex TTYNAM\n+@cindex system, terminal\n \n @table @asis\n @item @emph{Description}:\n@@ -9702,7 +9842,8 @@ END PROGRAM\n \n @node UBOUND\n @section @code{UBOUND} --- Upper dimension bounds of an array\n-@cindex @code{UBOUND} intrinsic\n+@fnindex UBOUND\n+@cindex array, upper bound\n \n @table @asis\n @item @emph{Description}:\n@@ -9740,8 +9881,8 @@ the relevant dimension.\n \n @node UMASK\n @section @code{UMASK} --- Set the file creation mask\n-@cindex @code{UMASK} intrinsic\n-@cindex file system operations\n+@fnindex UMASK\n+@cindex file system, file creation mask\n \n @table @asis\n @item @emph{Description}:\n@@ -9770,8 +9911,8 @@ Subroutine\n \n @node UNLINK\n @section @code{UNLINK} --- Remove a file from the file system\n-@cindex @code{UNLINK} intrinsic\n-@cindex file system operations\n+@fnindex UNLINK\n+@cindex file system, remove file\n \n @table @asis\n @item @emph{Description}:\n@@ -9810,8 +9951,10 @@ Subroutine, non-elemental function\n \n @node UNPACK\n @section @code{UNPACK} --- Unpack an array of rank one into an array\n-@cindex @code{UNPACK} intrinsic\n-@cindex array manipulation\n+@fnindex UNPACK\n+@cindex array, unpacking\n+@cindex array, increase dimension\n+@cindex array, scatter elements\n \n @table @asis\n @item @emph{Description}:\n@@ -9843,11 +9986,11 @@ of @var{MASK} replaced by values from @var{VECTOR} in array element order.\n @smallexample\n PROGRAM test_unpack\n   integer :: vector(2)  = (/1,1/)\n-  logical :: mask(2,2)  = (/ .TRUE., .FALSE., .FALSE., .TRUE. /)\n+  logical :: mask(4)  = (/ .TRUE., .FALSE., .FALSE., .TRUE. /)\n   integer :: field(2,2) = 0, unity(2,2)\n \n   ! result: unity matrix\n-  unity = unpack(vector, reshape(mask, (/2,2/), field)\n+  unity = unpack(vector, reshape(mask, (/2,2/)), field)\n END PROGRAM\n @end smallexample\n \n@@ -9859,8 +10002,8 @@ END PROGRAM\n \n @node VERIFY\n @section @code{VERIFY} --- Scan a string for the absence of a set of characters\n-@cindex @code{VERIFY} intrinsic\n-@cindex string manipulation\n+@fnindex VERIFY\n+@cindex string, find missing set\n \n @table @asis\n @item @emph{Description}:\n@@ -9911,8 +10054,9 @@ END PROGRAM\n \n @node XOR\n @section @code{XOR} --- Bitwise logical exclusive OR\n-@cindex @code{XOR} intrinsic\n-@cindex bit operations\n+@fnindex XOR\n+@cindex bitwise logical exclusive or\n+@cindex logical exclusive or, bitwise\n \n @table @asis\n @item @emph{Description}:"}, {"sha": "0cb701e790bbd94e180184226035e2f8ca6bcb67", "filename": "gcc/fortran/invoke.texi", "status": "modified", "additions": 16, "deletions": 28, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e739dfac3c34d398963b47833d0c1dac50bfdb7a/gcc%2Ffortran%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e739dfac3c34d398963b47833d0c1dac50bfdb7a/gcc%2Ffortran%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Finvoke.texi?ref=e739dfac3c34d398963b47833d0c1dac50bfdb7a", "patch": "@@ -75,7 +75,6 @@ on the non-Fortran-specific aspects of the @command{gcc} command (and,\n therefore, the @command{gfortran} command).\n \n @cindex options, negative forms\n-@cindex negative forms of options\n All GCC and GNU Fortran options\n are accepted both by @command{gfortran} and by @command{gcc}\n (as well as any other drivers built at the same time,\n@@ -181,11 +180,8 @@ accepted by the compiler:\n @opindex @code{ffree-form}\n @opindex @code{fno-fixed-form}\n @cindex options, fortran dialect\n-@cindex source file format\n-@cindex free form\n-@cindex fixed form\n-@cindex Source Form\n-@cindex Fortran 90, features\n+@cindex file format, free\n+@cindex file format, fixed\n Specify the layout used by the source file.  The free form layout\n was introduced in Fortran 90.  Fixed form was traditionally used in\n older Fortran programs.  When neither option is specified, the source\n@@ -224,7 +220,7 @@ Do nothing if this is already the default.\n \n @item -fdollar-ok\n @opindex @code{fdollar-ok}\n-@cindex dollar sign\n+@cindex $\n @cindex symbol names\n @cindex character set\n Allow @samp{$} as a valid character in a symbol name.\n@@ -238,12 +234,7 @@ Change the interpretation of backslashes in string literals from\n \n @item -ffixed-line-length-@var{n}\n @opindex @code{ffixed-line-length-}@var{n}\n-@cindex source file format\n-@cindex lines, length\n-@cindex length of source lines\n-@cindex limits, lengths of source lines\n-@cindex card image\n-@cindex extended-source option\n+@cindex file format, fixed\n Set column after which characters are ignored in typical fixed-form\n lines in the source file, and through which spaces are assumed (as\n if padded to that length) after the ends of short fixed-form lines.\n@@ -259,10 +250,7 @@ to them to fill out the line.\n \n @item -ffree-line-length-@var{n}\n @opindex @code{ffree-line-length-}@var{n}\n-@cindex source file format\n-@cindex lines, length\n-@cindex length of source lines\n-@cindex limits, lengths of source lines\n+@cindex file format, free\n Set column after which characters are ignored in typical free-form\n lines in the source file. The default value is 132.\n @var{n} may be @samp{none}, meaning that the entire line is meaningful.\n@@ -434,7 +422,7 @@ The following example will trigger the warning.\n @item -Wampersand\n @opindex @code{Wampersand}\n @cindex warnings, ampersand\n-@cindex ampersand\n+@cindex &\n Warn about missing ampersand in continued character constants. The warning is\n given with @option{-Wampersand}, @option{-pedantic}, @option{-std=f95}, and\n @option{-std=f2003}. Note: With no ampersand given in a continued character\n@@ -485,7 +473,7 @@ A LOGICAL SELECT construct has three CASE statements.\n @item -Wtabs\n @opindex @code{Wtabs}\n @cindex warnings, tabs\n-@cindex tabs\n+@cindex tabulators\n By default, tabs are accepted as whitespace, but tabs are not members\n of the Fortran Character Set.  @option{-Wno-tabs} will cause a warning\n to be issued if a tab is encountered. Note, @option{-Wno-tabs} is active\n@@ -556,8 +544,8 @@ library should output a backtrace of the error.  This option\n only has influence for compilation of the Fortran main program.\n \n @item -fdump-core\n-@cindex core\n-@cindex @code{fdump-core}\n+@cindex core, dump\n+@opindex @code{fdump-core}\n Request that a core-dump file is written to disk when a runtime error\n is encountered on systems that support core dumps. This option is\n only effective for the compilation of the Fortran main program.\n@@ -630,7 +618,7 @@ they are not in the default location expected by the compiler.\n \n @node Runtime Options\n @section Influencing runtime behavior\n-@cindex runtime, options\n+@cindex options, runtime\n \n These options affect the runtime behavior of programs compiled with GNU Fortran.\n @table @gcctabopt\n@@ -666,7 +654,7 @@ really useful for use by the gfortran testsuite.\n @section Options for Code Generation Conventions\n @cindex code generation, conventions\n @cindex options, code generation\n-@cindex run-time, options\n+@cindex options, run-time\n \n These machine-independent options control the interface conventions\n used in code generation.\n@@ -680,15 +668,15 @@ it.\n @table @gcctabopt\n @item -fno-automatic\n @opindex @code{fno-automatic}\n-@cindex SAVE statement\n-@cindex statements, SAVE\n+@cindex @code{SAVE} statement\n+@cindex statement, @code{SAVE}\n Treat each program unit as if the @code{SAVE} statement was specified for\n every local variable and array referenced in it. Does not affect common\n blocks. (Some Fortran compilers provide this option under the name\n @option{-static}.)\n \n @item -ff2c\n-@opindex @code{ff2c}\n+@opindex ff2c\n @cindex calling convention\n @cindex @command{f2c} calling convention\n @cindex @command{g77} calling convention\n@@ -818,9 +806,9 @@ by use of the @option{-ff2c} option.\n \n @item -fbounds-check\n @opindex @code{fbounds-check}\n+@cindex array, bounds checking\n @cindex bounds checking\n @cindex range checking\n-@cindex array bounds checking\n @cindex subscript checking\n @cindex checking subscripts\n Enable generation of run-time checks for array subscripts\n@@ -900,7 +888,7 @@ shared by @command{gfortran}, @command{gcc}, and other GNU compilers.\n \n @node Environment Variables\n @section Environment Variables Affecting @command{gfortran}\n-@cindex environment variables\n+@cindex environment variable\n \n @c man begin ENVIRONMENT\n "}]}