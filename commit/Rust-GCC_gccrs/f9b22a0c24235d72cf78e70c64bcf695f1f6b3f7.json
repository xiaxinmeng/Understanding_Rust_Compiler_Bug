{"sha": "f9b22a0c24235d72cf78e70c64bcf695f1f6b3f7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjliMjJhMGMyNDIzNWQ3MmNmNzhlNzBjNjRiY2Y2OTVmMWY2YjNmNw==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2019-05-22T22:14:34Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2019-05-22T22:14:34Z"}, "message": "PR libstdc++/90557 fix path assignment that alters source\n\n\tPR libstdc++/90557\n\t* src/c++17/fs_path.cc (path::_List::operator=(const _List&)): Fix\n\treversed arguments to uninitialized_copy_n.\n\t* testsuite/27_io/filesystem/path/assign/copy.cc: Check that source\n\tis unchanged by copy assignment.\n\t* testsuite/util/testsuite_fs.h (compare_paths): Use std::equal to\n\tcompare path components.\n\nFrom-SVN: r271527", "tree": {"sha": "5e8c520f2c788fa9b41b914b291fe2ba461f955b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5e8c520f2c788fa9b41b914b291fe2ba461f955b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f9b22a0c24235d72cf78e70c64bcf695f1f6b3f7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9b22a0c24235d72cf78e70c64bcf695f1f6b3f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f9b22a0c24235d72cf78e70c64bcf695f1f6b3f7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9b22a0c24235d72cf78e70c64bcf695f1f6b3f7/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7039cebfa8da3e6309bf1792ca063497257edcd8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7039cebfa8da3e6309bf1792ca063497257edcd8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7039cebfa8da3e6309bf1792ca063497257edcd8"}], "stats": {"total": 37, "additions": 33, "deletions": 4}, "files": [{"sha": "d7faf93d0e14a56932ddd468cd711ddff3a3b055", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9b22a0c24235d72cf78e70c64bcf695f1f6b3f7/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9b22a0c24235d72cf78e70c64bcf695f1f6b3f7/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=f9b22a0c24235d72cf78e70c64bcf695f1f6b3f7", "patch": "@@ -1,5 +1,13 @@\n 2019-05-22  Jonathan Wakely  <jwakely@redhat.com>\n \n+\tPR libstdc++/90557\n+\t* src/c++17/fs_path.cc (path::_List::operator=(const _List&)): Fix\n+\treversed arguments to uninitialized_copy_n.\n+\t* testsuite/27_io/filesystem/path/assign/copy.cc: Check that source\n+\tis unchanged by copy assignment.\n+\t* testsuite/util/testsuite_fs.h (compare_paths): Use std::equal to\n+\tcompare path components.\n+\n \tPR libstdc++/77691\n \t* include/experimental/memory_resource: Add system header pragma and\n \tdo not define anything unless compiled as C++14 or later."}, {"sha": "8e01bf510d3edf847c4a22f444211f58e5b76010", "filename": "libstdc++-v3/src/c++17/fs_path.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9b22a0c24235d72cf78e70c64bcf695f1f6b3f7/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B17%2Ffs_path.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9b22a0c24235d72cf78e70c64bcf695f1f6b3f7/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B17%2Ffs_path.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B17%2Ffs_path.cc?ref=f9b22a0c24235d72cf78e70c64bcf695f1f6b3f7", "patch": "@@ -278,8 +278,8 @@ path::_List::operator=(const _List& other)\n \t    to[i]._M_pathname.reserve(from[i]._M_pathname.length());\n \t  if (newsize > oldsize)\n \t    {\n-\t      std::uninitialized_copy_n(to + oldsize, newsize - oldsize,\n-\t\t\t\t\tfrom + oldsize);\n+\t      std::uninitialized_copy_n(from + oldsize, newsize - oldsize,\n+\t\t\t\t\tto + oldsize);\n \t      impl->_M_size = newsize;\n \t    }\n \t  else if (newsize < oldsize)"}, {"sha": "6aa25ae12ef3498c53f537a14c3b6952e4c6b8e9", "filename": "libstdc++-v3/testsuite/27_io/filesystem/path/assign/copy.cc", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9b22a0c24235d72cf78e70c64bcf695f1f6b3f7/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Fpath%2Fassign%2Fcopy.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9b22a0c24235d72cf78e70c64bcf695f1f6b3f7/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Fpath%2Fassign%2Fcopy.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Fpath%2Fassign%2Fcopy.cc?ref=f9b22a0c24235d72cf78e70c64bcf695f1f6b3f7", "patch": "@@ -64,10 +64,25 @@ test03()\n   VERIFY( ptr2 == p.begin()->c_str() );\n }\n \n+void\n+test04()\n+{\n+  // PR libstdc++/90557\n+  path p1 = \"a/b/c\";\n+  const path p2 = \"d/e\";\n+  const path p3 = p2;\n+  p1.clear();\n+  p1 = p2;\n+  __gnu_test::compare_paths(p1, p2);\n+  __gnu_test::compare_paths(p1, p3);\n+  __gnu_test::compare_paths(p2, p3);\n+}\n+\n int\n main()\n {\n   test01();\n   test02();\n   test03();\n+  test04();\n }"}, {"sha": "b2a5ee6e65528d7f86ffafea27a966d2e82b812c", "filename": "libstdc++-v3/testsuite/util/testsuite_fs.h", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9b22a0c24235d72cf78e70c64bcf695f1f6b3f7/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_fs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9b22a0c24235d72cf78e70c64bcf695f1f6b3f7/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_fs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_fs.h?ref=f9b22a0c24235d72cf78e70c64bcf695f1f6b3f7", "patch": "@@ -30,6 +30,7 @@ namespace test_fs = std::filesystem;\n #include <experimental/filesystem>\n namespace test_fs = std::experimental::filesystem;\n #endif\n+#include <algorithm>\n #include <fstream>\n #include <string>\n #include <cstdio>\n@@ -62,10 +63,15 @@ namespace __gnu_test\n     PATH_CHK( p1, p2, is_relative );\n     auto d1 = std::distance(p1.begin(), p1.end());\n     auto d2 = std::distance(p2.begin(), p2.end());\n-    if( d1 != d2 )\n+    if (d1 != d2)\n       throw test_fs::filesystem_error(\n-\t  \"distance(begin, end)\", p1, p2,\n+\t  \"distance(begin1, end1) != distance(begin2, end2)\", p1, p2,\n \t  std::make_error_code(std::errc::invalid_argument) );\n+    if (!std::equal(p1.begin(), p1.end(), p2.begin(), p2.end()))\n+      throw test_fs::filesystem_error(\n+\t  \"!equal(begin1, end1, begin2, end2)\", p1, p2,\n+\t  std::make_error_code(std::errc::invalid_argument) );\n+\n   }\n \n   const std::string test_paths[] = {"}]}