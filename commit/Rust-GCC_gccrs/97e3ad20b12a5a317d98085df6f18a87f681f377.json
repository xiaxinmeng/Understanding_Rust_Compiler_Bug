{"sha": "97e3ad20b12a5a317d98085df6f18a87f681f377", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTdlM2FkMjBiMTJhNWEzMTdkOTgwODVkZjZmMThhODdmNjgxZjM3Nw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-10-31T19:34:14Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-10-31T19:34:14Z"}, "message": "re PR c++/50920 (add a -std=c++11 option to the driver)\n\n\tPR c++/50920\ngcc/c-family\n\t* c-common.h (cxx_dialect): Add cxx11 and cxx03.\n\t* c.opt: Add -std=c++11, -std=gnu++11, -std=gnu++03,\n\tand -Wc++11-compat.\n\t* c-opts.c (set_std_cxx11): Rename from set_std_cxx0x.\ngcc/cp\n\t* class.c (check_field_decl): Change c++0x in diags to c++11.\n\t* error.c (maybe_warn_cpp0x): Likewise.\n\t* parser.c (cp_parser_diagnose_invalid_type_name): Likewise.\n\t* pt.c (check_default_tmpl_args): Likewise.\nlibcpp\n\t* include/cpplib.h (enum c_lang): Rename CLK_CXX0X to CLK_CXX11,\n\tCLK_GNUCXX0X to CLK_GNUCXX11.\nlibstdc++-v3\n\t* include/bits/c++0x_warning.h: Change -std=c++0x to -std=c++11.\n\nFrom-SVN: r180707", "tree": {"sha": "b4ae8466c45bdc28466d915bb6a768995c3222b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b4ae8466c45bdc28466d915bb6a768995c3222b0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/97e3ad20b12a5a317d98085df6f18a87f681f377", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97e3ad20b12a5a317d98085df6f18a87f681f377", "html_url": "https://github.com/Rust-GCC/gccrs/commit/97e3ad20b12a5a317d98085df6f18a87f681f377", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97e3ad20b12a5a317d98085df6f18a87f681f377/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fdb0e1b4bcf88b63bb6bc0b6a6d52b32a1016f7d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fdb0e1b4bcf88b63bb6bc0b6a6d52b32a1016f7d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fdb0e1b4bcf88b63bb6bc0b6a6d52b32a1016f7d"}], "stats": {"total": 176, "additions": 108, "deletions": 68}, "files": [{"sha": "d77004eb7948bd829e2a8a387713512fcd79dd66", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97e3ad20b12a5a317d98085df6f18a87f681f377/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97e3ad20b12a5a317d98085df6f18a87f681f377/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=97e3ad20b12a5a317d98085df6f18a87f681f377", "patch": "@@ -1,3 +1,11 @@\n+2011-10-31  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/50920\n+\t* c-common.h (cxx_dialect): Add cxx11 and cxx03.\n+\t* c.opt: Add -std=c++11, -std=gnu++11, -std=gnu++03,\n+\tand -Wc++11-compat.\n+\t* c-opts.c (set_std_cxx11): Rename from set_std_cxx0x.\n+\n 2011-10-27  Roberto Agostino Vitillo  <ravitillo@lbl.gov>\n \n \tPR c++/30066"}, {"sha": "71746a949d3e1a3340b5025747690fdf83e19e0c", "filename": "gcc/c-family/c-common.h", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97e3ad20b12a5a317d98085df6f18a87f681f377/gcc%2Fc-family%2Fc-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97e3ad20b12a5a317d98085df6f18a87f681f377/gcc%2Fc-family%2Fc-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.h?ref=97e3ad20b12a5a317d98085df6f18a87f681f377", "patch": "@@ -643,11 +643,12 @@ extern int flag_use_repository;\n /* The supported C++ dialects.  */\n \n enum cxx_dialect {\n-  /* C++98  */\n+  /* C++98 with TC1  */\n   cxx98,\n-  /* Experimental features that are likely to become part of\n-     C++0x.  */\n-  cxx0x\n+  cxx03 = cxx98,\n+  /* C++11  */\n+  cxx0x,\n+  cxx11 = cxx0x\n };\n \n /* The C++ dialect being used. C++98 is the default.  */"}, {"sha": "b56aec79906e8b3a92898419810795aa8d6157d7", "filename": "gcc/c-family/c-opts.c", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97e3ad20b12a5a317d98085df6f18a87f681f377/gcc%2Fc-family%2Fc-opts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97e3ad20b12a5a317d98085df6f18a87f681f377/gcc%2Fc-family%2Fc-opts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-opts.c?ref=97e3ad20b12a5a317d98085df6f18a87f681f377", "patch": "@@ -110,7 +110,7 @@ static size_t include_cursor;\n \n static void handle_OPT_d (const char *);\n static void set_std_cxx98 (int);\n-static void set_std_cxx0x (int);\n+static void set_std_cxx11 (int);\n static void set_std_c89 (int, int);\n static void set_std_c99 (int);\n static void set_std_c1x (int);\n@@ -775,10 +775,10 @@ c_common_handle_option (size_t scode, const char *arg, int value,\n \tset_std_cxx98 (code == OPT_std_c__98 /* ISO */);\n       break;\n \n-    case OPT_std_c__0x:\n-    case OPT_std_gnu__0x:\n+    case OPT_std_c__11:\n+    case OPT_std_gnu__11:\n       if (!preprocessing_asm_p)\n-\tset_std_cxx0x (code == OPT_std_c__0x /* ISO */);\n+\tset_std_cxx11 (code == OPT_std_c__11 /* ISO */);\n       break;\n \n     case OPT_std_c90:\n@@ -1501,18 +1501,18 @@ set_std_cxx98 (int iso)\n   cxx_dialect = cxx98;\n }\n \n-/* Set the C++ 0x working draft \"standard\" (without GNU extensions if ISO).  */\n+/* Set the C++ 2011 standard (without GNU extensions if ISO).  */\n static void\n-set_std_cxx0x (int iso)\n+set_std_cxx11 (int iso)\n {\n-  cpp_set_lang (parse_in, iso ? CLK_CXX0X: CLK_GNUCXX0X);\n+  cpp_set_lang (parse_in, iso ? CLK_CXX11: CLK_GNUCXX11);\n   flag_no_gnu_keywords = iso;\n   flag_no_nonansi_builtin = iso;\n   flag_iso = iso;\n-  /* C++0x includes the C99 standard library.  */\n+  /* C++11 includes the C99 standard library.  */\n   flag_isoc94 = 1;\n   flag_isoc99 = 1;\n-  cxx_dialect = cxx0x;\n+  cxx_dialect = cxx11;\n }\n \n /* Args to -d specify what to dump.  Silently ignore"}, {"sha": "336a75aa7b89b39002b1a33b2fa169042716f157", "filename": "gcc/c-family/c.opt", "status": "modified", "additions": 24, "deletions": 12, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97e3ad20b12a5a317d98085df6f18a87f681f377/gcc%2Fc-family%2Fc.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97e3ad20b12a5a317d98085df6f18a87f681f377/gcc%2Fc-family%2Fc.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc.opt?ref=97e3ad20b12a5a317d98085df6f18a87f681f377", "patch": "@@ -289,7 +289,11 @@ Warn about C constructs that are not in the common subset of C and C++\n \n Wc++0x-compat\n C++ ObjC++ Var(warn_cxx0x_compat) Warning\n-Warn about C++ constructs whose meaning differs between ISO C++ 1998 and ISO C++ 200x\n+Deprecated in favor of -Wc++11-compat\n+\n+Wc++11-compat\n+C++ ObjC++ Warning Alias(Wc++0x-compat)\n+Warn about C++ constructs whose meaning differs between ISO C++ 1998 and ISO C++ 2011\n \n Wcast-qual\n C ObjC C++ ObjC++ Var(warn_cast_qual) Warning\n@@ -1175,12 +1179,13 @@ std=c++03\n C++ ObjC++ Alias(std=c++98)\n Conform to the ISO 1998 C++ standard revised by the 2003 technical corrigendum\n \n-std=c++0x\n+std=c++11\n C++ ObjC++\n-Conform to the ISO 1998 C++ standard, with extensions that are likely to\n-become a part of the upcoming ISO C++ standard, dubbed C++0x. Note that the\n-extensions enabled by this mode are experimental and may be removed in\n-future releases of GCC.\n+Conform to the ISO 2011 C++ standard (experimental and incomplete support)\n+\n+std=c++0x\n+C++ ObjC++ Alias(std=c++11)\n+Deprecated in favor of -std=c++11\n \n std=c1x\n C ObjC\n@@ -1204,14 +1209,21 @@ Deprecated in favor of -std=c99\n \n std=gnu++98\n C++ ObjC++\n-Conform to the ISO 1998 C++ standard with GNU extensions\n+Conform to the ISO 1998 C++ standard revised by the 2003 technical\n+corrigendum with GNU extensions\n \n-std=gnu++0x\n+std=gnu++03\n+C++ ObjC++ Alias(std=gnu++98)\n+Conform to the ISO 1998 C++ standard revised by the 2003 technical\n+corrigendum with GNU extensions\n+\n+std=gnu++11\n C++ ObjC++\n-Conform to the ISO 1998 C++ standard, with GNU extensions and\n-extensions that are likely to become a part of the upcoming ISO C++\n-standard, dubbed C++0x. Note that the extensions enabled by this mode\n-are experimental and may be removed in future releases of GCC.\n+Conform to the ISO 2011 C++ standard with GNU extensions (experimental and incomplete support)\n+\n+std=gnu++0x\n+C++ ObjC++ Alias(std=gnu++11)\n+Deprecated in favor of -std=gnu++11\n \n std=gnu1x\n C ObjC"}, {"sha": "dbf2dd7a8ba510ea5acd9a1f129e4e4d3508b1b2", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97e3ad20b12a5a317d98085df6f18a87f681f377/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97e3ad20b12a5a317d98085df6f18a87f681f377/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=97e3ad20b12a5a317d98085df6f18a87f681f377", "patch": "@@ -1,3 +1,11 @@\n+2011-10-31  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/50920\n+\t* class.c (check_field_decl): Change c++0x in diags to c++11.\n+\t* error.c (maybe_warn_cpp0x): Likewise.\n+\t* parser.c (cp_parser_diagnose_invalid_type_name): Likewise.\n+\t* pt.c (check_default_tmpl_args): Likewise.\n+\n 2011-10-31   Diego Novillo  <dnovillo@google.com>\n \n \t* mangle.c (get_mangled_id): Factor from ..."}, {"sha": "a014d251409a4f284c79c3d14283c9f92d40709d", "filename": "gcc/cp/class.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97e3ad20b12a5a317d98085df6f18a87f681f377/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97e3ad20b12a5a317d98085df6f18a87f681f377/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=97e3ad20b12a5a317d98085df6f18a87f681f377", "patch": "@@ -2924,7 +2924,7 @@ check_field_decl (tree field,\n \t  if (!warned && errorcount > oldcount)\n \t    {\n \t      inform (DECL_SOURCE_LOCATION (field), \"unrestricted unions \"\n-\t\t      \"only available with -std=c++0x or -std=gnu++0x\");\n+\t\t      \"only available with -std=c++11 or -std=gnu++11\");\n \t      warned = true;\n \t    }\n \t}"}, {"sha": "0bee6b4105cda3107d8927379db21ed021829fe4", "filename": "gcc/cp/error.c", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97e3ad20b12a5a317d98085df6f18a87f681f377/gcc%2Fcp%2Ferror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97e3ad20b12a5a317d98085df6f18a87f681f377/gcc%2Fcp%2Ferror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ferror.c?ref=97e3ad20b12a5a317d98085df6f18a87f681f377", "patch": "@@ -3205,55 +3205,55 @@ maybe_warn_cpp0x (cpp0x_warn_str str)\n       case CPP0X_INITIALIZER_LISTS:\n \tpedwarn (input_location, 0, \n \t\t \"extended initializer lists \"\n-\t\t \"only available with -std=c++0x or -std=gnu++0x\");\n+\t\t \"only available with -std=c++11 or -std=gnu++11\");\n \tbreak;\n       case CPP0X_EXPLICIT_CONVERSION:\n \tpedwarn (input_location, 0,\n \t\t \"explicit conversion operators \"\n-\t\t \"only available with -std=c++0x or -std=gnu++0x\"); \n+\t\t \"only available with -std=c++11 or -std=gnu++11\");\n \tbreak;\n       case CPP0X_VARIADIC_TEMPLATES:\n \tpedwarn (input_location, 0,\n \t\t \"variadic templates \"\n-\t\t \"only available with -std=c++0x or -std=gnu++0x\");\n+\t\t \"only available with -std=c++11 or -std=gnu++11\");\n \tbreak;\n       case CPP0X_LAMBDA_EXPR:\n \tpedwarn (input_location, 0,\n \t\t \"lambda expressions \"\n-\t\t  \"only available with -std=c++0x or -std=gnu++0x\");\n+\t\t  \"only available with -std=c++11 or -std=gnu++11\");\n \tbreak;\n       case CPP0X_AUTO:\n \tpedwarn (input_location, 0,\n-\t\t \"C++0x auto only available with -std=c++0x or -std=gnu++0x\");\n+\t\t \"C++0x auto only available with -std=c++11 or -std=gnu++11\");\n \tbreak;\n       case CPP0X_SCOPED_ENUMS:\n \tpedwarn (input_location, 0,\n-\t\t \"scoped enums only available with -std=c++0x or -std=gnu++0x\");\n+\t\t \"scoped enums only available with -std=c++11 or -std=gnu++11\");\n \tbreak;\n       case CPP0X_DEFAULTED_DELETED:\n \tpedwarn (input_location, 0,\n \t\t \"defaulted and deleted functions \"\n-\t\t \"only available with -std=c++0x or -std=gnu++0x\");\n+\t\t \"only available with -std=c++11 or -std=gnu++11\");\n \tbreak;\n       case CPP0X_INLINE_NAMESPACES:\n \tpedwarn (input_location, OPT_pedantic,\n \t\t \"inline namespaces \"\n-\t\t \"only available with -std=c++0x or -std=gnu++0x\");\n+\t\t \"only available with -std=c++11 or -std=gnu++11\");\n \tbreak;\n       case CPP0X_OVERRIDE_CONTROLS:\n \tpedwarn (input_location, 0,\n \t\t \"override controls (override/final) \"\n-\t\t \"only available with -std=c++0x or -std=gnu++0x\");\n+\t\t \"only available with -std=c++11 or -std=gnu++11\");\n         break;\n       case CPP0X_NSDMI:\n \tpedwarn (input_location, 0,\n \t\t \"non-static data member initializers \"\n-\t\t \"only available with -std=c++0x or -std=gnu++0x\");\n+\t\t \"only available with -std=c++11 or -std=gnu++11\");\n         break;\n       case CPP0X_USER_DEFINED_LITERALS:\n \tpedwarn (input_location, 0,\n \t\t \"user-defined literals \"\n-\t\t \"only available with -std=c++0x or -std=gnu++0x\");\n+\t\t \"only available with -std=c++11 or -std=gnu++11\");\n \tbreak;\n       default:\n \tgcc_unreachable ();"}, {"sha": "63f92620886ebba92a4757e3464bb662f92d73f3", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97e3ad20b12a5a317d98085df6f18a87f681f377/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97e3ad20b12a5a317d98085df6f18a87f681f377/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=97e3ad20b12a5a317d98085df6f18a87f681f377", "patch": "@@ -2759,8 +2759,8 @@ cp_parser_diagnose_invalid_type_name (cp_parser *parser,\n \n \t The user should have said \"typename A<T>::X\".  */\n       if (cxx_dialect < cxx0x && id == ridpointers[(int)RID_CONSTEXPR])\n-\tinform (location, \"C++0x %<constexpr%> only available with \"\n-\t\t\"-std=c++0x or -std=gnu++0x\");\n+\tinform (location, \"C++11 %<constexpr%> only available with \"\n+\t\t\"-std=c++11 or -std=gnu++11\");\n       else if (processing_template_decl && current_class_type\n \t       && TYPE_BINFO (current_class_type))\n \t{"}, {"sha": "493e3e6bcc311e2e6679c341f6592cc0f9192a4e", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97e3ad20b12a5a317d98085df6f18a87f681f377/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97e3ad20b12a5a317d98085df6f18a87f681f377/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=97e3ad20b12a5a317d98085df6f18a87f681f377", "patch": "@@ -4650,7 +4650,7 @@ check_default_tmpl_args (tree decl, tree parms, int is_primary,\n \t     \"friend declarations\");\n   else if (TREE_CODE (decl) == FUNCTION_DECL && (cxx_dialect == cxx98))\n     msg = G_(\"default template arguments may not be used in function templates \"\n-\t     \"without -std=c++0x or -std=gnu++0x\");\n+\t     \"without -std=c++11 or -std=gnu++11\");\n   else if (is_partial)\n     msg = G_(\"default template arguments may not be used in \"\n \t     \"partial specializations\");"}, {"sha": "1a0189b56e20031e1885e55da5f7c839bba494e2", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-98.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97e3ad20b12a5a317d98085df6f18a87f681f377/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-98.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97e3ad20b12a5a317d98085df6f18a87f681f377/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-98.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-98.C?ref=97e3ad20b12a5a317d98085df6f18a87f681f377", "patch": "@@ -1,4 +1,4 @@\n // { dg-options \"-std=c++98\" }\n \n-constexpr int i = 42;\t  // { dg-message \"std=c\\\\+\\\\+0x\" }\n+constexpr int i = 42;\t  // { dg-message \"std=c\\\\+\\\\+11\" }\n // { dg-error \"constexpr\" \"\" { target *-*-* } 3 }"}, {"sha": "8013364e6be17982a58eb47172301acf9f7b199f", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97e3ad20b12a5a317d98085df6f18a87f681f377/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97e3ad20b12a5a317d98085df6f18a87f681f377/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=97e3ad20b12a5a317d98085df6f18a87f681f377", "patch": "@@ -1,3 +1,9 @@\n+2011-10-31  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/50920\n+\t* include/cpplib.h (enum c_lang): Rename CLK_CXX0X to CLK_CXX11,\n+\tCLK_GNUCXX0X to CLK_GNUCXX11.\n+\n 2011-10-26  Ed Smith-Rowland  <3dw4rd@verizon.net>\n \n \tImplement C++11 user-defined literals."}, {"sha": "518fe945ebb71e67349ad87185b69e61e1aed811", "filename": "libcpp/include/cpplib.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97e3ad20b12a5a317d98085df6f18a87f681f377/libcpp%2Finclude%2Fcpplib.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97e3ad20b12a5a317d98085df6f18a87f681f377/libcpp%2Finclude%2Fcpplib.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Finclude%2Fcpplib.h?ref=97e3ad20b12a5a317d98085df6f18a87f681f377", "patch": "@@ -167,7 +167,7 @@ enum cpp_ttype\n /* C language kind, used when calling cpp_create_reader.  */\n enum c_lang {CLK_GNUC89 = 0, CLK_GNUC99, CLK_GNUC1X,\n \t     CLK_STDC89, CLK_STDC94, CLK_STDC99, CLK_STDC1X,\n-\t     CLK_GNUCXX, CLK_CXX98, CLK_GNUCXX0X, CLK_CXX0X, CLK_ASM};\n+\t     CLK_GNUCXX, CLK_CXX98, CLK_GNUCXX11, CLK_CXX11, CLK_ASM};\n \n /* Payload of a NUMBER, STRING, CHAR or COMMENT token.  */\n struct GTY(()) cpp_string {"}, {"sha": "bbaa8ae10c35bbec5e54646ae4e7b72fff152138", "filename": "libcpp/init.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97e3ad20b12a5a317d98085df6f18a87f681f377/libcpp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97e3ad20b12a5a317d98085df6f18a87f681f377/libcpp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Finit.c?ref=97e3ad20b12a5a317d98085df6f18a87f681f377", "patch": "@@ -94,11 +94,11 @@ static const struct lang_flags lang_defaults[] =\n   /* STDC1X   */  { 1,  0,  1,   0,  1,   1,   1,   1,   0,    0 },\n   /* GNUCXX   */  { 0,  1,  1,   0,  0,   1,   1,   0,   0,    0 },\n   /* CXX98    */  { 0,  1,  1,   0,  1,   1,   1,   0,   0,    0 },\n-  /* GNUCXX0X */  { 1,  1,  1,   0,  0,   1,   1,   1,   1,    1 },\n-  /* CXX0X    */  { 1,  1,  1,   0,  1,   1,   1,   1,   1,    1 },\n+  /* GNUCXX11 */  { 1,  1,  1,   0,  0,   1,   1,   1,   1,    1 },\n+  /* CXX11    */  { 1,  1,  1,   0,  1,   1,   1,   1,   1,    1 },\n   /* ASM      */  { 0,  0,  1,   0,  0,   1,   0,   0,   0,    0 }\n-  /* xid should be 1 for GNUC99, STDC99, GNUCXX, CXX98, GNUCXX0X, and\n-     CXX0X when no longer experimental (when all uses of identifiers\n+  /* xid should be 1 for GNUC99, STDC99, GNUCXX, CXX98, GNUCXX11, and\n+     CXX11 when no longer experimental (when all uses of identifiers\n      in the compiler have been audited for correct handling of\n      extended identifiers).  */\n };"}, {"sha": "9f7c67d04274cdb13e668e6d5a0a09f1aeadc648", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97e3ad20b12a5a317d98085df6f18a87f681f377/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97e3ad20b12a5a317d98085df6f18a87f681f377/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=97e3ad20b12a5a317d98085df6f18a87f681f377", "patch": "@@ -1,3 +1,8 @@\n+2011-10-31  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/50920\n+\t* include/bits/c++0x_warning.h: Change -std=c++0x to -std=c++11.\n+\n 2011-10-30  Gerald Pfeifer  <gerald@pfeifer.com>\n \n \t* prerequisites.xml: Refer to GCC (instead of gcc) and GNU/Linux."}, {"sha": "eb072d00a45d978ca2bf5f40e34e65df28b22b95", "filename": "libstdc++-v3/include/bits/c++0x_warning.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97e3ad20b12a5a317d98085df6f18a87f681f377/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fc%2B%2B0x_warning.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97e3ad20b12a5a317d98085df6f18a87f681f377/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fc%2B%2B0x_warning.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fc%2B%2B0x_warning.h?ref=97e3ad20b12a5a317d98085df6f18a87f681f377", "patch": "@@ -29,9 +29,9 @@\n #define _CXX0X_WARNING_H 1\n \n #ifndef __GXX_EXPERIMENTAL_CXX0X__\n-#error This file requires compiler and library support for the upcoming \\\n-ISO C++ standard, C++0x. This support is currently experimental, and must be \\\n-enabled with the -std=c++0x or -std=gnu++0x compiler options.\n+#error This file requires compiler and library support for the \\\n+ISO C++ 2011 standard. This support is currently experimental, and must be \\\n+enabled with the -std=c++11 or -std=gnu++11 compiler options.\n #endif\n \n #endif"}, {"sha": "f8361c40cf24fdf0df62deeae83ea8c3a086e024", "filename": "libstdc++-v3/testsuite/18_support/headers/cstdbool/std_c++0x_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97e3ad20b12a5a317d98085df6f18a87f681f377/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fheaders%2Fcstdbool%2Fstd_c%2B%2B0x_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97e3ad20b12a5a317d98085df6f18a87f681f377/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fheaders%2Fcstdbool%2Fstd_c%2B%2B0x_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fheaders%2Fcstdbool%2Fstd_c%2B%2B0x_neg.cc?ref=97e3ad20b12a5a317d98085df6f18a87f681f377", "patch": "@@ -20,7 +20,7 @@\n \n #include <cstdbool>\n \n-// { dg-error \"upcoming ISO\" \"\" { target *-*-* } 32 } \n+// { dg-error \"ISO C.. 2011\" \"\" { target *-*-* } 32 }\n \n \n "}, {"sha": "7dbc10ef20c7b54412c8dcced84fa71b3b014987", "filename": "libstdc++-v3/testsuite/18_support/headers/cstdint/std_c++0x_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97e3ad20b12a5a317d98085df6f18a87f681f377/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fheaders%2Fcstdint%2Fstd_c%2B%2B0x_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97e3ad20b12a5a317d98085df6f18a87f681f377/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fheaders%2Fcstdint%2Fstd_c%2B%2B0x_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fheaders%2Fcstdint%2Fstd_c%2B%2B0x_neg.cc?ref=97e3ad20b12a5a317d98085df6f18a87f681f377", "patch": "@@ -20,7 +20,7 @@\n \n #include <cstdint>\n \n-// { dg-error \"upcoming ISO\" \"\" { target *-*-* } 32 } \n+// { dg-error \"ISO C.. 2011\" \"\" { target *-*-* } 32 }\n \n \n "}, {"sha": "38e27dc8246a19667a9f0b5fdd7344332463b764", "filename": "libstdc++-v3/testsuite/19_diagnostics/headers/system_error/std_c++0x_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97e3ad20b12a5a317d98085df6f18a87f681f377/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Fheaders%2Fsystem_error%2Fstd_c%2B%2B0x_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97e3ad20b12a5a317d98085df6f18a87f681f377/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Fheaders%2Fsystem_error%2Fstd_c%2B%2B0x_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Fheaders%2Fsystem_error%2Fstd_c%2B%2B0x_neg.cc?ref=97e3ad20b12a5a317d98085df6f18a87f681f377", "patch": "@@ -19,7 +19,7 @@\n \n #include <system_error>\n \n-// { dg-error \"upcoming ISO\" \"\" { target *-*-* } 32 } \n+// { dg-error \"ISO C.. 2011\" \"\" { target *-*-* } 32 }\n \n \n "}, {"sha": "e698114091b9360b011802162c088036943624c6", "filename": "libstdc++-v3/testsuite/20_util/headers/type_traits/std_c++0x_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97e3ad20b12a5a317d98085df6f18a87f681f377/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fheaders%2Ftype_traits%2Fstd_c%2B%2B0x_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97e3ad20b12a5a317d98085df6f18a87f681f377/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fheaders%2Ftype_traits%2Fstd_c%2B%2B0x_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fheaders%2Ftype_traits%2Fstd_c%2B%2B0x_neg.cc?ref=97e3ad20b12a5a317d98085df6f18a87f681f377", "patch": "@@ -20,7 +20,7 @@\n \n #include <type_traits>\n \n-// { dg-error \"upcoming ISO\" \"\" { target *-*-* } 32 } \n+// { dg-error \"ISO C.. 2011\" \"\" { target *-*-* } 32 }\n \n \n "}, {"sha": "bded29ee68cebaa0d992e70943ad03a58252c11e", "filename": "libstdc++-v3/testsuite/23_containers/headers/array/std_c++0x_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97e3ad20b12a5a317d98085df6f18a87f681f377/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fheaders%2Farray%2Fstd_c%2B%2B0x_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97e3ad20b12a5a317d98085df6f18a87f681f377/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fheaders%2Farray%2Fstd_c%2B%2B0x_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fheaders%2Farray%2Fstd_c%2B%2B0x_neg.cc?ref=97e3ad20b12a5a317d98085df6f18a87f681f377", "patch": "@@ -20,7 +20,7 @@\n \n #include <array>\n \n-// { dg-error \"upcoming ISO\" \"\" { target *-*-* } 32 } \n+// { dg-error \"ISO C.. 2011\" \"\" { target *-*-* } 32 }\n \n \n "}, {"sha": "b5a10d2d611586bc78e8e9d32560544889479390", "filename": "libstdc++-v3/testsuite/23_containers/headers/tuple/std_c++0x_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97e3ad20b12a5a317d98085df6f18a87f681f377/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fheaders%2Ftuple%2Fstd_c%2B%2B0x_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97e3ad20b12a5a317d98085df6f18a87f681f377/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fheaders%2Ftuple%2Fstd_c%2B%2B0x_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fheaders%2Ftuple%2Fstd_c%2B%2B0x_neg.cc?ref=97e3ad20b12a5a317d98085df6f18a87f681f377", "patch": "@@ -20,7 +20,7 @@\n \n #include <tuple>\n \n-// { dg-error \"upcoming ISO\" \"\" { target *-*-* } 32 } \n+// { dg-error \"ISO C.. 2011\" \"\" { target *-*-* } 32 }\n \n \n "}, {"sha": "612124006c1ad57879d3956425ed9865ae8399fe", "filename": "libstdc++-v3/testsuite/23_containers/headers/unordered_map/std_c++0x_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97e3ad20b12a5a317d98085df6f18a87f681f377/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fheaders%2Funordered_map%2Fstd_c%2B%2B0x_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97e3ad20b12a5a317d98085df6f18a87f681f377/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fheaders%2Funordered_map%2Fstd_c%2B%2B0x_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fheaders%2Funordered_map%2Fstd_c%2B%2B0x_neg.cc?ref=97e3ad20b12a5a317d98085df6f18a87f681f377", "patch": "@@ -20,7 +20,7 @@\n \n #include <unordered_map>\n \n-// { dg-error \"upcoming ISO\" \"\" { target *-*-* } 32 } \n+// { dg-error \"ISO C.. 2011\" \"\" { target *-*-* } 32 }\n \n \n "}, {"sha": "85aca13c34449ad40c1c68730479314423bf7fb4", "filename": "libstdc++-v3/testsuite/23_containers/headers/unordered_set/std_c++0x_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97e3ad20b12a5a317d98085df6f18a87f681f377/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fheaders%2Funordered_set%2Fstd_c%2B%2B0x_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97e3ad20b12a5a317d98085df6f18a87f681f377/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fheaders%2Funordered_set%2Fstd_c%2B%2B0x_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fheaders%2Funordered_set%2Fstd_c%2B%2B0x_neg.cc?ref=97e3ad20b12a5a317d98085df6f18a87f681f377", "patch": "@@ -20,7 +20,7 @@\n \n #include <unordered_set>\n \n-// { dg-error \"upcoming ISO\" \"\" { target *-*-* } 32 } \n+// { dg-error \"ISO C.. 2011\" \"\" { target *-*-* } 32 }\n \n \n "}, {"sha": "2f1226f3e17f5a64e81cf6957e5bf82db1997aca", "filename": "libstdc++-v3/testsuite/26_numerics/headers/ccomplex/std_c++0x_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97e3ad20b12a5a317d98085df6f18a87f681f377/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fheaders%2Fccomplex%2Fstd_c%2B%2B0x_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97e3ad20b12a5a317d98085df6f18a87f681f377/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fheaders%2Fccomplex%2Fstd_c%2B%2B0x_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fheaders%2Fccomplex%2Fstd_c%2B%2B0x_neg.cc?ref=97e3ad20b12a5a317d98085df6f18a87f681f377", "patch": "@@ -20,7 +20,7 @@\n \n #include <ccomplex>\n \n-// { dg-error \"upcoming ISO\" \"\" { target *-*-* } 32 } \n+// { dg-error \"ISO C.. 2011\" \"\" { target *-*-* } 32 }\n \n \n "}, {"sha": "36e19d05af9c4078d7122dee1f57f2bec3b2435b", "filename": "libstdc++-v3/testsuite/26_numerics/headers/cfenv/std_c++0x_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97e3ad20b12a5a317d98085df6f18a87f681f377/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fheaders%2Fcfenv%2Fstd_c%2B%2B0x_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97e3ad20b12a5a317d98085df6f18a87f681f377/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fheaders%2Fcfenv%2Fstd_c%2B%2B0x_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fheaders%2Fcfenv%2Fstd_c%2B%2B0x_neg.cc?ref=97e3ad20b12a5a317d98085df6f18a87f681f377", "patch": "@@ -20,7 +20,7 @@\n \n #include <cfenv>\n \n-// { dg-error \"upcoming ISO\" \"\" { target *-*-* } 32 } \n+// { dg-error \"ISO C.. 2011\" \"\" { target *-*-* } 32 }\n \n \n "}, {"sha": "b8238df9591fcf6352725594908d1a5400c68bf3", "filename": "libstdc++-v3/testsuite/26_numerics/headers/ctgmath/std_c++0x_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97e3ad20b12a5a317d98085df6f18a87f681f377/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fheaders%2Fctgmath%2Fstd_c%2B%2B0x_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97e3ad20b12a5a317d98085df6f18a87f681f377/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fheaders%2Fctgmath%2Fstd_c%2B%2B0x_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fheaders%2Fctgmath%2Fstd_c%2B%2B0x_neg.cc?ref=97e3ad20b12a5a317d98085df6f18a87f681f377", "patch": "@@ -20,7 +20,7 @@\n \n #include <ctgmath>\n \n-// { dg-error \"upcoming ISO\" \"\" { target *-*-* } 32 } \n+// { dg-error \"ISO C.. 2011\" \"\" { target *-*-* } 32 }\n \n \n "}, {"sha": "467caa0736ccab8685f10f31bf96916d0e25fc1b", "filename": "libstdc++-v3/testsuite/26_numerics/headers/random/std_c++0x_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97e3ad20b12a5a317d98085df6f18a87f681f377/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fheaders%2Frandom%2Fstd_c%2B%2B0x_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97e3ad20b12a5a317d98085df6f18a87f681f377/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fheaders%2Frandom%2Fstd_c%2B%2B0x_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fheaders%2Frandom%2Fstd_c%2B%2B0x_neg.cc?ref=97e3ad20b12a5a317d98085df6f18a87f681f377", "patch": "@@ -20,7 +20,7 @@\n \n #include <random>\n \n-// { dg-error \"upcoming ISO\" \"\" { target *-*-* } 32 } \n+// { dg-error \"ISO C.. 2011\" \"\" { target *-*-* } 32 }\n \n \n "}, {"sha": "0285417ab12c4271ceeff489a983879f887db9cb", "filename": "libstdc++-v3/testsuite/27_io/headers/cinttypes/std_c++0x_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97e3ad20b12a5a317d98085df6f18a87f681f377/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fheaders%2Fcinttypes%2Fstd_c%2B%2B0x_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97e3ad20b12a5a317d98085df6f18a87f681f377/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fheaders%2Fcinttypes%2Fstd_c%2B%2B0x_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fheaders%2Fcinttypes%2Fstd_c%2B%2B0x_neg.cc?ref=97e3ad20b12a5a317d98085df6f18a87f681f377", "patch": "@@ -20,7 +20,7 @@\n \n #include <cinttypes>\n \n-// { dg-error \"upcoming ISO\" \"\" { target *-*-* } 32 } \n+// { dg-error \"ISO C.. 2011\" \"\" { target *-*-* } 32 }\n \n \n "}, {"sha": "b5289f802b6b050ed6f4a9709b180cd0f6416e8a", "filename": "libstdc++-v3/testsuite/28_regex/headers/regex/std_c++0x_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97e3ad20b12a5a317d98085df6f18a87f681f377/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Fheaders%2Fregex%2Fstd_c%2B%2B0x_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97e3ad20b12a5a317d98085df6f18a87f681f377/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Fheaders%2Fregex%2Fstd_c%2B%2B0x_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Fheaders%2Fregex%2Fstd_c%2B%2B0x_neg.cc?ref=97e3ad20b12a5a317d98085df6f18a87f681f377", "patch": "@@ -20,7 +20,7 @@\n \n #include <regex>\n \n-// { dg-error \"upcoming ISO\" \"\" { target *-*-* } 32 } \n+// { dg-error \"ISO C.. 2011\" \"\" { target *-*-* } 32 }\n \n \n "}, {"sha": "38b49b6db1101c73a1ba2d882c501e1756867f62", "filename": "libstdc++-v3/testsuite/29_atomics/headers/atomic/std_c++0x_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97e3ad20b12a5a317d98085df6f18a87f681f377/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fheaders%2Fatomic%2Fstd_c%2B%2B0x_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97e3ad20b12a5a317d98085df6f18a87f681f377/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fheaders%2Fatomic%2Fstd_c%2B%2B0x_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fheaders%2Fatomic%2Fstd_c%2B%2B0x_neg.cc?ref=97e3ad20b12a5a317d98085df6f18a87f681f377", "patch": "@@ -20,7 +20,7 @@\n \n #include <atomic>  // { dg-excess-errors \"In file included from\" }\n \n-// { dg-error \"upcoming ISO\" \"\" { target *-*-* } 32 } \n+// { dg-error \"ISO C.. 2011\" \"\" { target *-*-* } 32 }\n \n \n "}, {"sha": "5df33d943a9dad7cbc7c75c3140bab38181c80f2", "filename": "libstdc++-v3/testsuite/30_threads/headers/condition_variable/std_c++0x_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97e3ad20b12a5a317d98085df6f18a87f681f377/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fheaders%2Fcondition_variable%2Fstd_c%2B%2B0x_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97e3ad20b12a5a317d98085df6f18a87f681f377/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fheaders%2Fcondition_variable%2Fstd_c%2B%2B0x_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fheaders%2Fcondition_variable%2Fstd_c%2B%2B0x_neg.cc?ref=97e3ad20b12a5a317d98085df6f18a87f681f377", "patch": "@@ -20,7 +20,7 @@\n \n #include <condition_variable>\n \n-// { dg-error \"upcoming ISO\" \"\" { target *-*-* } 32 } \n+// { dg-error \"ISO C.. 2011\" \"\" { target *-*-* } 32 }\n \n \n "}, {"sha": "ec018f736399e51266779493d7a59cd21f7b0053", "filename": "libstdc++-v3/testsuite/30_threads/headers/future/std_c++0x_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97e3ad20b12a5a317d98085df6f18a87f681f377/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fheaders%2Ffuture%2Fstd_c%2B%2B0x_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97e3ad20b12a5a317d98085df6f18a87f681f377/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fheaders%2Ffuture%2Fstd_c%2B%2B0x_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fheaders%2Ffuture%2Fstd_c%2B%2B0x_neg.cc?ref=97e3ad20b12a5a317d98085df6f18a87f681f377", "patch": "@@ -20,7 +20,7 @@\n \n #include <future>\n \n-// { dg-error \"upcoming ISO\" \"\" { target *-*-* } 32 } \n+// { dg-error \"ISO C.. 2011\" \"\" { target *-*-* } 32 }\n \n \n "}, {"sha": "3d7a09d829a92da1bf854428d9cac702e0958f3b", "filename": "libstdc++-v3/testsuite/30_threads/headers/mutex/std_c++0x_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97e3ad20b12a5a317d98085df6f18a87f681f377/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fheaders%2Fmutex%2Fstd_c%2B%2B0x_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97e3ad20b12a5a317d98085df6f18a87f681f377/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fheaders%2Fmutex%2Fstd_c%2B%2B0x_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fheaders%2Fmutex%2Fstd_c%2B%2B0x_neg.cc?ref=97e3ad20b12a5a317d98085df6f18a87f681f377", "patch": "@@ -20,7 +20,7 @@\n \n #include <mutex>\n \n-// { dg-error \"upcoming ISO\" \"\" { target *-*-* } 32 } \n+// { dg-error \"ISO C.. 2011\" \"\" { target *-*-* } 32 }\n \n \n "}, {"sha": "6089f33171aad79811a2e4bee84331185b28c52e", "filename": "libstdc++-v3/testsuite/30_threads/headers/thread/std_c++0x_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97e3ad20b12a5a317d98085df6f18a87f681f377/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fheaders%2Fthread%2Fstd_c%2B%2B0x_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97e3ad20b12a5a317d98085df6f18a87f681f377/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fheaders%2Fthread%2Fstd_c%2B%2B0x_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fheaders%2Fthread%2Fstd_c%2B%2B0x_neg.cc?ref=97e3ad20b12a5a317d98085df6f18a87f681f377", "patch": "@@ -22,4 +22,4 @@\n \n #include <thread>\n \n-// { dg-error \"upcoming ISO\" \"\" { target *-*-* } 32 }\n+// { dg-error \"ISO C.. 2011\" \"\" { target *-*-* } 32 }"}]}