{"sha": "033797e23c3723dd1cc7911981e3747cc0dda6e3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDMzNzk3ZTIzYzM3MjNkZDFjYzc5MTE5ODFlMzc0N2NjMGRkYTZlMw==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@libertysurf.fr", "date": "2004-11-24T08:39:34Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2004-11-24T08:39:34Z"}, "message": "target.h (late_rtl_prologue_epilogue): Remove.\n\n\t* target.h (late_rtl_prologue_epilogue): Remove.\n\t* target-def.h (TARGET_LATE_RTL_PROLOGUE_EPILOGUE): Remove.\n\t* system.h: Poison TARGET_LATE_RTL_PROLOGUE_EPILOGUE.\n\t* passes.c (rest_of_handle_prologue_epilogue): Remove and move\n\tremaining bits to...\n\t(rest_of_handle_flow2): ...here.\n\t(rest_of_compilation): Remove call to rest_of_handle_prologue_epilogue.\n\t* doc/tm.texi (TARGET_LATE_RTL_PROLOGUE_EPILOGUE): Remove.\n\nFrom-SVN: r91140", "tree": {"sha": "eee54f5749132c980a4ba899e0922e67ffb37f13", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eee54f5749132c980a4ba899e0922e67ffb37f13"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/033797e23c3723dd1cc7911981e3747cc0dda6e3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/033797e23c3723dd1cc7911981e3747cc0dda6e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/033797e23c3723dd1cc7911981e3747cc0dda6e3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/033797e23c3723dd1cc7911981e3747cc0dda6e3/comments", "author": {"login": "ebotcazou", "id": 48091907, "node_id": "MDQ6VXNlcjQ4MDkxOTA3", "avatar_url": "https://avatars.githubusercontent.com/u/48091907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebotcazou", "html_url": "https://github.com/ebotcazou", "followers_url": "https://api.github.com/users/ebotcazou/followers", "following_url": "https://api.github.com/users/ebotcazou/following{/other_user}", "gists_url": "https://api.github.com/users/ebotcazou/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebotcazou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebotcazou/subscriptions", "organizations_url": "https://api.github.com/users/ebotcazou/orgs", "repos_url": "https://api.github.com/users/ebotcazou/repos", "events_url": "https://api.github.com/users/ebotcazou/events{/privacy}", "received_events_url": "https://api.github.com/users/ebotcazou/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "278d4cc485b5d7a133e5ec34022d92d06d7da9c9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/278d4cc485b5d7a133e5ec34022d92d06d7da9c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/278d4cc485b5d7a133e5ec34022d92d06d7da9c9"}], "stats": {"total": 62, "additions": 21, "deletions": 41}, "files": [{"sha": "ada5b335c194f9b3e1b7c4c98fccabfe9766b1ba", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/033797e23c3723dd1cc7911981e3747cc0dda6e3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/033797e23c3723dd1cc7911981e3747cc0dda6e3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=033797e23c3723dd1cc7911981e3747cc0dda6e3", "patch": "@@ -1,3 +1,14 @@\n+2004-11-24  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+\n+\t* target.h (late_rtl_prologue_epilogue): Remove.\n+\t* target-def.h (TARGET_LATE_RTL_PROLOGUE_EPILOGUE): Remove.\n+\t* system.h: Poison TARGET_LATE_RTL_PROLOGUE_EPILOGUE.\n+\t* passes.c (rest_of_handle_prologue_epilogue): Remove and move\n+\tremaining bits to...\n+\t(rest_of_handle_flow2): ...here.\n+\t(rest_of_compilation): Remove call to rest_of_handle_prologue_epilogue.\n+\t* doc/tm.texi (TARGET_LATE_RTL_PROLOGUE_EPILOGUE): Remove.\n+\n 2004-11-23  Mark Mitchell  <mark@codesourcery.com>\n \n \t* hwint.h (HOST_LONG_LONG_FORMAT): New macro.  Use it throughout."}, {"sha": "339a41d314ad29384574c780b1eb387e51697a5c", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/033797e23c3723dd1cc7911981e3747cc0dda6e3/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/033797e23c3723dd1cc7911981e3747cc0dda6e3/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=033797e23c3723dd1cc7911981e3747cc0dda6e3", "patch": "@@ -4263,16 +4263,6 @@ arguments that a function should pop.  @xref{Scalar Return}.\n @c tell?  --mew 5feb93\n @end deftypefn\n \n-@deftypefn {Target Hook} bool TARGET_LATE_RTL_PROLOGUE_EPILOGUE\n-If set to @code{true}, it instructs the compiler to emit the RTL prologue\n-and epilogue later in the game than usual, namely after all passes that\n-modify the instructions (and not merely reorder them) have been run.  In\n-particular, the C variable @code{current_function_uses_only_leaf_regs} is\n-valid at that point.  This can be used on machines that have \"register\n-windows\" to optimize away the regular \"push\" on the register stack.\n-@xref{Leaf Functions}.\n-@end deftypefn\n-\n @itemize @bullet\n @item\n @findex current_function_pretend_args_size"}, {"sha": "36b13d155fbf44feb5261c7a9304c1c8db8b62ec", "filename": "gcc/passes.c", "status": "modified", "additions": 9, "deletions": 23, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/033797e23c3723dd1cc7911981e3747cc0dda6e3/gcc%2Fpasses.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/033797e23c3723dd1cc7911981e3747cc0dda6e3/gcc%2Fpasses.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpasses.c?ref=033797e23c3723dd1cc7911981e3747cc0dda6e3", "patch": "@@ -1314,24 +1314,6 @@ rest_of_handle_eh (void)\n     }\n }\n \n-\n-static void\n-rest_of_handle_prologue_epilogue (void)\n-{\n-  if (optimize && !flow2_completed)\n-    cleanup_cfg (CLEANUP_EXPENSIVE);\n-\n-  /* On some machines, the prologue and epilogue code, or parts thereof,\n-     can be represented as RTL.  Doing so lets us schedule insns between\n-     it and the rest of the code and also allows delayed branch\n-     scheduling to operate in the epilogue.  */\n-  thread_prologue_and_epilogue_insns (get_insns ());\n-  epilogue_completed = 1;\n-\n-  if (optimize && flow2_completed)\n-    life_analysis (dump_file, PROP_POSTRELOAD);\n-}\n-\n static void\n rest_of_handle_stack_adjustments (void)\n {\n@@ -1369,8 +1351,15 @@ rest_of_handle_flow2 (void)\n   if (flag_branch_target_load_optimize)\n     rest_of_handle_branch_target_load_optimize ();\n \n-  if (!targetm.late_rtl_prologue_epilogue)\n-    rest_of_handle_prologue_epilogue ();\n+  if (optimize)\n+    cleanup_cfg (CLEANUP_EXPENSIVE);\n+\n+  /* On some machines, the prologue and epilogue code, or parts thereof,\n+     can be represented as RTL.  Doing so lets us schedule insns between\n+     it and the rest of the code and also allows delayed branch\n+     scheduling to operate in the epilogue.  */\n+  thread_prologue_and_epilogue_insns (get_insns ());\n+  epilogue_completed = 1;\n \n   if (optimize)\n     rest_of_handle_stack_adjustments ();\n@@ -1765,9 +1754,6 @@ rest_of_compilation (void)\n     = optimize > 0 && only_leaf_regs_used () && leaf_function_p ();\n #endif\n \n-  if (targetm.late_rtl_prologue_epilogue)\n-    rest_of_handle_prologue_epilogue ();\n-\n #ifdef INSN_SCHEDULING\n   if (optimize > 0 && flag_schedule_insns_after_reload)\n     rest_of_handle_sched2 ();"}, {"sha": "c19f129f6a07df986c361a1fd1212f49848cbdc8", "filename": "gcc/system.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/033797e23c3723dd1cc7911981e3747cc0dda6e3/gcc%2Fsystem.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/033797e23c3723dd1cc7911981e3747cc0dda6e3/gcc%2Fsystem.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsystem.h?ref=033797e23c3723dd1cc7911981e3747cc0dda6e3", "patch": "@@ -658,7 +658,7 @@ extern void fancy_abort (const char *, int, const char *) ATTRIBUTE_NORETURN;\n \tGDB_INV_REF_REGPARM_STABS_LETTER DBX_MEMPARM_STABS_LETTER\t   \\\n \tPUT_SDB_SRC_FILE STABS_GCC_MARKER DBX_OUTPUT_FUNCTION_END\t   \\\n \tDBX_OUTPUT_GCC_MARKER DBX_FINISH_SYMBOL SDB_GENERATE_FAKE\t   \\\n-\tNON_SAVING_SETJMP\n+\tNON_SAVING_SETJMP TARGET_LATE_RTL_PROLOGUE_EPILOGUE\n \n /* Hooks that are no longer used.  */\n  #pragma GCC poison LANG_HOOKS_FUNCTION_MARK LANG_HOOKS_FUNCTION_FREE\t\\"}, {"sha": "063623700e439476b215addde9925e29ddfb0f5b", "filename": "gcc/target-def.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/033797e23c3723dd1cc7911981e3747cc0dda6e3/gcc%2Ftarget-def.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/033797e23c3723dd1cc7911981e3747cc0dda6e3/gcc%2Ftarget-def.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarget-def.h?ref=033797e23c3723dd1cc7911981e3747cc0dda6e3", "patch": "@@ -398,7 +398,6 @@ Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n \n #define TARGET_GIMPLIFY_VA_ARG_EXPR std_gimplify_va_arg_expr\n #define TARGET_PASS_BY_REFERENCE hook_bool_CUMULATIVE_ARGS_mode_tree_bool_false\n-#define TARGET_LATE_RTL_PROLOGUE_EPILOGUE false\n #define TARGET_MUST_PASS_IN_STACK must_pass_in_stack_var_size_or_pad\n #define TARGET_CALLEE_COPIES hook_bool_CUMULATIVE_ARGS_mode_tree_bool_false\n \n@@ -537,7 +536,6 @@ Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n   TARGET_ASM_FILE_START_FILE_DIRECTIVE,\t\t\\\n   TARGET_HANDLE_PRAGMA_REDEFINE_EXTNAME,\t\\\n   TARGET_HANDLE_PRAGMA_EXTERN_PREFIX,\t\t\\\n-  TARGET_LATE_RTL_PROLOGUE_EPILOGUE,\t\t\\\n }\n \n #include \"hooks.h\""}, {"sha": "0c2b1b467f0807afde5877d409f808fb554af0e6", "filename": "gcc/target.h", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/033797e23c3723dd1cc7911981e3747cc0dda6e3/gcc%2Ftarget.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/033797e23c3723dd1cc7911981e3747cc0dda6e3/gcc%2Ftarget.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarget.h?ref=033797e23c3723dd1cc7911981e3747cc0dda6e3", "patch": "@@ -597,11 +597,6 @@ struct gcc_target\n   /* True if #pragma extern_prefix is to be supported.  */\n   bool handle_pragma_extern_prefix;\n \n-  /* True if the RTL prologue and epilogue should be expanded after all\n-     passes that modify the instructions (and not merely reorder them)\n-     have been run.  */\n-  bool late_rtl_prologue_epilogue;\n-\n   /* Leave the boolean fields at the end.  */\n };\n "}]}