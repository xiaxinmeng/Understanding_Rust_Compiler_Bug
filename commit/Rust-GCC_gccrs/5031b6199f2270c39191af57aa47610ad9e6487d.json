{"sha": "5031b6199f2270c39191af57aa47610ad9e6487d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTAzMWI2MTk5ZjIyNzBjMzkxOTFhZjU3YWE0NzYxMGFkOWU2NDg3ZA==", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2019-12-18T17:02:18Z"}, "committer": {"name": "Thomas Schwinge", "email": "tschwinge@gcc.gnu.org", "date": "2019-12-18T17:02:18Z"}, "message": "[OpenACC] Refactor 'goacc_remove_pointer' interface\n\nNo functional changes.\n\n\tlibgomp/\n\t* oacc-mem.c (goacc_remove_pointer): Refactor interface.  Adjust\n\tall users.\n\nFrom-SVN: r279538", "tree": {"sha": "6ca8b546c07939ca00fff3e1cc0db196af5a9d31", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6ca8b546c07939ca00fff3e1cc0db196af5a9d31"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5031b6199f2270c39191af57aa47610ad9e6487d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5031b6199f2270c39191af57aa47610ad9e6487d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5031b6199f2270c39191af57aa47610ad9e6487d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5031b6199f2270c39191af57aa47610ad9e6487d/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1a79b5788df0515f13f9ba262809dcc804692874", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a79b5788df0515f13f9ba262809dcc804692874", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a79b5788df0515f13f9ba262809dcc804692874"}], "stats": {"total": 29, "additions": 15, "deletions": 14}, "files": [{"sha": "1938199928193d361874a9fb0cf20ac523adf37a", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5031b6199f2270c39191af57aa47610ad9e6487d/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5031b6199f2270c39191af57aa47610ad9e6487d/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=5031b6199f2270c39191af57aa47610ad9e6487d", "patch": "@@ -1,5 +1,8 @@\n 2019-12-18  Thomas Schwinge  <thomas@codesourcery.com>\n \n+\t* oacc-mem.c (goacc_remove_pointer): Refactor interface.  Adjust\n+\tall users.\n+\n \t* oacc-mem.c (GOACC_enter_exit_data): Refactor code to call\n \t'goacc_enter_data', 'goacc_exit_data'.\n "}, {"sha": "d08eb8b4b4fd401b89d630f574d6832c386574f7", "filename": "libgomp/oacc-mem.c", "status": "modified", "additions": 12, "deletions": 14, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5031b6199f2270c39191af57aa47610ad9e6487d/libgomp%2Foacc-mem.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5031b6199f2270c39191af57aa47610ad9e6487d/libgomp%2Foacc-mem.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Foacc-mem.c?ref=5031b6199f2270c39191af57aa47610ad9e6487d", "patch": "@@ -873,8 +873,8 @@ acc_update_self_async (void *h, size_t s, int async)\n /* Special handling for 'GOMP_MAP_POINTER', 'GOMP_MAP_TO_PSET'.\n \n    Only the first mapping is considered in reference counting; the following\n-   ones implicitly follow suit.  Similarly, 'copyout' ('force_copyfrom') is\n-   done only for the first mapping.  */\n+   ones implicitly follow suit.  Similarly, 'copyout' is done only for the\n+   first mapping.  */\n \n static void\n goacc_insert_pointer (size_t mapnum, void **hostaddrs, size_t *sizes,\n@@ -925,9 +925,10 @@ goacc_insert_pointer (size_t mapnum, void **hostaddrs, size_t *sizes,\n }\n \n static void\n-goacc_remove_pointer (void *h, size_t s, bool force_copyfrom, int async,\n-\t\t      int finalize)\n+goacc_remove_pointer (void *h, size_t s, unsigned short kind, int async)\n {\n+  kind &= 0xff;\n+\n   struct goacc_thread *thr = goacc_thread ();\n   struct gomp_device_descr *acc_dev = thr->dev;\n   splay_tree_key n;\n@@ -958,6 +959,8 @@ goacc_remove_pointer (void *h, size_t s, bool force_copyfrom, int async,\n       gomp_fatal (\"Dynamic reference counting assert fail\\n\");\n     }\n \n+  bool finalize = (kind == GOMP_MAP_DELETE\n+\t\t   || kind == GOMP_MAP_FORCE_FROM);\n   if (finalize)\n     {\n       n->refcount -= n->dynamic_refcount;\n@@ -973,11 +976,12 @@ goacc_remove_pointer (void *h, size_t s, bool force_copyfrom, int async,\n     {\n       goacc_aq aq = get_goacc_asyncqueue (async);\n \n-      if (force_copyfrom)\n+      bool copyout = (kind == GOMP_MAP_FROM\n+\t\t      || kind == GOMP_MAP_FORCE_FROM);\n+      if (copyout)\n \t{\n \t  void *d = (void *) (t->tgt_start + n->tgt_offset\n \t\t\t      + (uintptr_t) h - n->host_start);\n-\n \t  gomp_copy_dev2host (acc_dev, aq, h, d, s);\n \t}\n \n@@ -1194,12 +1198,11 @@ GOACC_enter_exit_data (int flags_m, size_t mapnum, void **hostaddrs,\n   else\n     for (i = 0; i < mapnum; ++i)\n       {\n-\tunsigned char kind = kinds[i] & 0xff;\n-\n \tint pointer = find_pointer (i, mapnum, kinds);\n \n \tif (!pointer)\n \t  {\n+\t    unsigned char kind = kinds[i] & 0xff;\n \t    switch (kind)\n \t      {\n \t      case GOMP_MAP_RELEASE:\n@@ -1217,12 +1220,7 @@ GOACC_enter_exit_data (int flags_m, size_t mapnum, void **hostaddrs,\n \t  }\n \telse\n \t  {\n-\t    bool finalize = (kind == GOMP_MAP_DELETE\n-\t\t\t     || kind == GOMP_MAP_FORCE_FROM);\n-\t    bool copyfrom = (kind == GOMP_MAP_FORCE_FROM\n-\t\t\t     || kind == GOMP_MAP_FROM);\n-\t    goacc_remove_pointer (hostaddrs[i], sizes[i], copyfrom, async,\n-\t\t\t\t  finalize);\n+\t    goacc_remove_pointer (hostaddrs[i], sizes[i], kinds[i], async);\n \t    /* See the above comment.  */\n \t    i += pointer - 1;\n \t  }"}]}