{"sha": "4a7eaf5f94ee68466b2c6419ffbf5b99dcf4d969", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGE3ZWFmNWY5NGVlNjg0NjZiMmM2NDE5ZmZiZjViOTlkY2Y0ZDk2OQ==", "commit": {"author": {"name": "Yury Gribov", "email": "y.gribov@samsung.com", "date": "2014-01-23T14:32:05Z"}, "committer": {"name": "Yury Gribov", "email": "ygribov@gcc.gnu.org", "date": "2014-01-23T14:32:05Z"}, "message": "re PR sanitizer/57316 (build failure in libsanitizer)\n\n2014-01-23  Yury Gribov  <y.gribov@samsung.com>\n\t    Jakub Jelinek  <jakub@redhat.com>\n\n\tPR sanitizer/57316\n\t* configure.ac: Check for missing syscalls.\n\t* Makefile.am: Likewise.\n\t* configure: Regenerate.\n\t* Makefile.in: Regenerate.\n\nCo-Authored-By: Jakub Jelinek <jakub@redhat.com>\n\nFrom-SVN: r206966", "tree": {"sha": "4d075b27403ec43fc7f118adb0e459bdd3ad930b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4d075b27403ec43fc7f118adb0e459bdd3ad930b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4a7eaf5f94ee68466b2c6419ffbf5b99dcf4d969", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a7eaf5f94ee68466b2c6419ffbf5b99dcf4d969", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a7eaf5f94ee68466b2c6419ffbf5b99dcf4d969", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a7eaf5f94ee68466b2c6419ffbf5b99dcf4d969/comments", "author": null, "committer": null, "parents": [{"sha": "652fea39227eeead0e9876097cacc6bf727b39a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/652fea39227eeead0e9876097cacc6bf727b39a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/652fea39227eeead0e9876097cacc6bf727b39a6"}], "stats": {"total": 91, "additions": 84, "deletions": 7}, "files": [{"sha": "f4cc57f83f124ed2c5c4ce1ecc5a2ead86c8dd7b", "filename": "libsanitizer/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a7eaf5f94ee68466b2c6419ffbf5b99dcf4d969/libsanitizer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a7eaf5f94ee68466b2c6419ffbf5b99dcf4d969/libsanitizer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2FChangeLog?ref=4a7eaf5f94ee68466b2c6419ffbf5b99dcf4d969", "patch": "@@ -1,3 +1,12 @@\n+2014-01-23  Yury Gribov  <y.gribov@samsung.com>\n+\t    Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR sanitizer/57316\n+\t* configure.ac: Check for missing syscalls.\n+\t* Makefile.am: Likewise.\n+\t* configure: Regenerate.\n+\t* Makefile.in: Regenerate.\n+\n 2014-01-09  Jakub Jelinek  <jakub@redhat.com>\n \n \t* sanitizer_common/sanitizer_symbolizer_libbacktrace.h"}, {"sha": "b0dc582ccfb5316f3437f1f9820f80776257f8aa", "filename": "libsanitizer/Makefile.am", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a7eaf5f94ee68466b2c6419ffbf5b99dcf4d969/libsanitizer%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a7eaf5f94ee68466b2c6419ffbf5b99dcf4d969/libsanitizer%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2FMakefile.am?ref=4a7eaf5f94ee68466b2c6419ffbf5b99dcf4d969", "patch": "@@ -1,5 +1,6 @@\n ACLOCAL_AMFLAGS = -I .. -I ../config\n \n+if SANITIZER_SUPPORTED\n SUBDIRS = sanitizer_common\n if !USING_MAC_INTERPOSE\n SUBDIRS += interception\n@@ -11,6 +12,7 @@ SUBDIRS += lsan asan ubsan\n if TSAN_SUPPORTED\n SUBDIRS += tsan\n endif\n+endif\n \n ## May be used by toolexeclibdir.\n gcc_version := $(shell cat $(top_srcdir)/../gcc/BASE-VER)"}, {"sha": "60cbe2ee55430484cced41145a234bb4e53cf788", "filename": "libsanitizer/Makefile.in", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a7eaf5f94ee68466b2c6419ffbf5b99dcf4d969/libsanitizer%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a7eaf5f94ee68466b2c6419ffbf5b99dcf4d969/libsanitizer%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2FMakefile.in?ref=4a7eaf5f94ee68466b2c6419ffbf5b99dcf4d969", "patch": "@@ -35,9 +35,9 @@ POST_UNINSTALL = :\n build_triplet = @build@\n host_triplet = @host@\n target_triplet = @target@\n-@USING_MAC_INTERPOSE_FALSE@am__append_1 = interception\n-@LIBBACKTRACE_SUPPORTED_TRUE@am__append_2 = libbacktrace\n-@TSAN_SUPPORTED_TRUE@am__append_3 = tsan\n+@SANITIZER_SUPPORTED_TRUE@@USING_MAC_INTERPOSE_FALSE@am__append_1 = interception\n+@LIBBACKTRACE_SUPPORTED_TRUE@@SANITIZER_SUPPORTED_TRUE@am__append_2 = libbacktrace\n+@SANITIZER_SUPPORTED_TRUE@@TSAN_SUPPORTED_TRUE@am__append_3 = tsan\n subdir = .\n DIST_COMMON = ChangeLog $(srcdir)/Makefile.in $(srcdir)/Makefile.am \\\n \t$(top_srcdir)/configure $(am__configure_deps) \\\n@@ -250,8 +250,9 @@ top_build_prefix = @top_build_prefix@\n top_builddir = @top_builddir@\n top_srcdir = @top_srcdir@\n ACLOCAL_AMFLAGS = -I .. -I ../config\n-SUBDIRS = sanitizer_common $(am__append_1) $(am__append_2) lsan asan \\\n-\tubsan $(am__append_3)\n+@SANITIZER_SUPPORTED_TRUE@SUBDIRS = sanitizer_common $(am__append_1) \\\n+@SANITIZER_SUPPORTED_TRUE@\t$(am__append_2) lsan asan ubsan \\\n+@SANITIZER_SUPPORTED_TRUE@\t$(am__append_3)\n gcc_version := $(shell cat $(top_srcdir)/../gcc/BASE-VER)\n \n # Work around what appears to be a GNU make bug handling MAKEFLAGS"}, {"sha": "5e4840ffea425f4e95399710e6f870c58d91da44", "filename": "libsanitizer/configure", "status": "modified", "additions": 49, "deletions": 2, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a7eaf5f94ee68466b2c6419ffbf5b99dcf4d969/libsanitizer%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a7eaf5f94ee68466b2c6419ffbf5b99dcf4d969/libsanitizer%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fconfigure?ref=4a7eaf5f94ee68466b2c6419ffbf5b99dcf4d969", "patch": "@@ -612,6 +612,8 @@ ALLOC_FILE\n VIEW_FILE\n BACKTRACE_SUPPORTED\n FORMAT_FILE\n+SANITIZER_SUPPORTED_FALSE\n+SANITIZER_SUPPORTED_TRUE\n USING_MAC_INTERPOSE_FALSE\n USING_MAC_INTERPOSE_TRUE\n link_liblsan\n@@ -12017,7 +12019,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12020 \"configure\"\n+#line 12022 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -12123,7 +12125,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12126 \"configure\"\n+#line 12128 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -15586,6 +15588,47 @@ fi\n \n backtrace_supported=yes\n \n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for necessary platform features\" >&5\n+$as_echo_n \"checking for necessary platform features... \" >&6; }\n+case \"$target\" in\n+  *-*-linux*)\n+    # Some old Linux distributions miss required syscalls.\n+    sanitizer_supported=no\n+    cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+#include <sys/syscall.h>\n+int\n+main ()\n+{\n+\n+      syscall (__NR_gettid);\n+      syscall (__NR_futex);\n+      syscall (__NR_exit_group);\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  sanitizer_supported=yes\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+    ;;\n+  *)\n+    sanitizer_supported=yes\n+    ;;\n+esac\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $sanitizer_supported\" >&5\n+$as_echo \"$sanitizer_supported\" >&6; }\n+ if test \"$sanitizer_supported\" = yes; then\n+  SANITIZER_SUPPORTED_TRUE=\n+  SANITIZER_SUPPORTED_FALSE='#'\n+else\n+  SANITIZER_SUPPORTED_TRUE='#'\n+  SANITIZER_SUPPORTED_FALSE=\n+fi\n+\n+\n # Test for __sync support.\n { $as_echo \"$as_me:${as_lineno-$LINENO}: checking __sync extensions\" >&5\n $as_echo_n \"checking __sync extensions... \" >&6; }\n@@ -16456,6 +16499,10 @@ if test -z \"${USING_MAC_INTERPOSE_TRUE}\" && test -z \"${USING_MAC_INTERPOSE_FALSE\n   as_fn_error \"conditional \\\"USING_MAC_INTERPOSE\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\n fi\n+if test -z \"${SANITIZER_SUPPORTED_TRUE}\" && test -z \"${SANITIZER_SUPPORTED_FALSE}\"; then\n+  as_fn_error \"conditional \\\"SANITIZER_SUPPORTED\\\" was never defined.\n+Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\n+fi\n if test -z \"${LIBBACKTRACE_SUPPORTED_TRUE}\" && test -z \"${LIBBACKTRACE_SUPPORTED_FALSE}\"; then\n   as_fn_error \"conditional \\\"LIBBACKTRACE_SUPPORTED\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5"}, {"sha": "e6721312d0ce78eb8adc4525cd755a12080baa14", "filename": "libsanitizer/configure.ac", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a7eaf5f94ee68466b2c6419ffbf5b99dcf4d969/libsanitizer%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a7eaf5f94ee68466b2c6419ffbf5b99dcf4d969/libsanitizer%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fconfigure.ac?ref=4a7eaf5f94ee68466b2c6419ffbf5b99dcf4d969", "patch": "@@ -132,6 +132,24 @@ AM_CONDITIONAL(USING_MAC_INTERPOSE, $MAC_INTERPOSE)\n \n backtrace_supported=yes\n \n+AC_MSG_CHECKING([for necessary platform features])\n+case \"$target\" in\n+  *-*-linux*)\n+    # Some old Linux distributions miss required syscalls.\n+    sanitizer_supported=no\n+    AC_TRY_COMPILE([#include <sys/syscall.h>],[\n+      syscall (__NR_gettid);\n+      syscall (__NR_futex);\n+      syscall (__NR_exit_group);\n+    ], [sanitizer_supported=yes])\n+    ;;\n+  *)\n+    sanitizer_supported=yes\n+    ;;\n+esac\n+AC_MSG_RESULT($sanitizer_supported)\n+AM_CONDITIONAL(SANITIZER_SUPPORTED, test \"$sanitizer_supported\" = yes)\n+\n # Test for __sync support.\n AC_CACHE_CHECK([__sync extensions],\n [libsanitizer_cv_sys_sync],"}]}