{"sha": "d25cf6335ed1126882c7f2a25dc0565628daa60a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDI1Y2Y2MzM1ZWQxMTI2ODgyYzdmMmEyNWRjMDU2NTYyOGRhYTYwYQ==", "commit": {"author": {"name": "Bernd Schmidt", "email": "bernds@cygnus.co.uk", "date": "1999-09-28T13:43:34Z"}, "committer": {"name": "Bernd Schmidt", "email": "crux@gcc.gnu.org", "date": "1999-09-28T13:43:34Z"}, "message": "c-decl.c (init_decl_processing): If MD_INIT_BUILTINS is defined, call it.\n\n\t* c-decl.c (init_decl_processing): If MD_INIT_BUILTINS is defined,\n\tcall it.\n\t* reg-stack.c (straighten_stack): Copy hard reg set with\n\tCOPY_HARD_REG_SET.\n\nFrom-SVN: r29694", "tree": {"sha": "adc5a94248dcbcef8191876ccbd08451a7492a0d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/adc5a94248dcbcef8191876ccbd08451a7492a0d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d25cf6335ed1126882c7f2a25dc0565628daa60a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d25cf6335ed1126882c7f2a25dc0565628daa60a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d25cf6335ed1126882c7f2a25dc0565628daa60a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d25cf6335ed1126882c7f2a25dc0565628daa60a/comments", "author": null, "committer": null, "parents": [{"sha": "24d505988681a89a8befc0467ba4fc6d0685d2b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24d505988681a89a8befc0467ba4fc6d0685d2b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/24d505988681a89a8befc0467ba4fc6d0685d2b7"}], "stats": {"total": 13, "additions": 12, "deletions": 1}, "files": [{"sha": "e6576d3e34c3ea65a4471bd08589d27f4c7680c4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d25cf6335ed1126882c7f2a25dc0565628daa60a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d25cf6335ed1126882c7f2a25dc0565628daa60a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d25cf6335ed1126882c7f2a25dc0565628daa60a", "patch": "@@ -1,3 +1,10 @@\n+Tue Sep 28 14:33:47 1999  Bernd Schmidt  <bernds@cygnus.co.uk>\n+\n+\t* c-decl.c (init_decl_processing): If MD_INIT_BUILTINS is defined,\n+\tcall it.\n+\t* reg-stack.c (straighten_stack): Copy hard reg set with\n+\tCOPY_HARD_REG_SET.\n+\n Tue Sep 28 01:11:05 1999  Richard Henderson  <rth@cygnus.com>\n \n \t* builtins.c (stabilize_va_list): Stabilize array type va_list"}, {"sha": "433030db2fa729e93fcdc07f21127d94f4b92ceb", "filename": "gcc/c-decl.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d25cf6335ed1126882c7f2a25dc0565628daa60a/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d25cf6335ed1126882c7f2a25dc0565628daa60a/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=d25cf6335ed1126882c7f2a25dc0565628daa60a", "patch": "@@ -2992,6 +2992,10 @@ init_decl_processing ()\n   pushdecl (build_decl (TYPE_DECL,\n \t\t\tridpointers[(int) RID_VOID], void_type_node));\n \n+#ifdef MD_INIT_BUILTINS\n+  MD_INIT_BUILTINS;\n+#endif\n+\n   wchar_type_node = get_identifier (flag_short_wchar\n \t\t\t\t    ? \"short unsigned int\"\n \t\t\t\t    : WCHAR_TYPE);"}, {"sha": "0cbc5da21247228a7d39bb2518c0a4accc7ed4e2", "filename": "gcc/reg-stack.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d25cf6335ed1126882c7f2a25dc0565628daa60a/gcc%2Freg-stack.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d25cf6335ed1126882c7f2a25dc0565628daa60a/gcc%2Freg-stack.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freg-stack.c?ref=d25cf6335ed1126882c7f2a25dc0565628daa60a", "patch": "@@ -407,7 +407,7 @@ straighten_stack (insn, regstack)\n   if (regstack->top <= 0)\n     return;\n \n-  temp_stack.reg_set = regstack->reg_set;\n+  COPY_HARD_REG_SET (temp_stack.reg_set, regstack->reg_set);\n \n   for (top = temp_stack.top = regstack->top; top >= 0; top--)\n     temp_stack.reg[top] = FIRST_STACK_REG + temp_stack.top - top;"}]}