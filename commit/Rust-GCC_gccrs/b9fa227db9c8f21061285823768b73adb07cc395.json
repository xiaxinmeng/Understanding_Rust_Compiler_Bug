{"sha": "b9fa227db9c8f21061285823768b73adb07cc395", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjlmYTIyN2RiOWM4ZjIxMDYxMjg1ODIzNzY4YjczYWRiMDdjYzM5NQ==", "commit": {"author": {"name": "Andreas Jaeger", "email": "aj@suse.de", "date": "2005-05-26T19:10:52Z"}, "committer": {"name": "Andreas Jaeger", "email": "aj@gcc.gnu.org", "date": "2005-05-26T19:10:52Z"}, "message": "re PR testsuite/20772 (x86 tests should run on both i?86 and x86_64)\n\n        PR testsuite/20772\n\t* gfortran.dg/promotion.f90, gcc.misc-tests/i386-pf-3dnow-1.c,\n\tgcc.misc-tests/i386-pf-athlon-1.c,\n\tgcc.misc-tests/i386-pf-none-1.c, gcc.misc-tests/i386-pf-sse-1.c,\n\tg++.dg/opt/mmx1.C, g++.dg/other/big-struct.C,\n\tg++.dg/abi/bitfield3.C, g++.dg/abi/bitfield8.C,\n\tg++.dg/abi/bitfield9.C, g++.dg/abi/empty7.C, g++.dg/abi/empty9.C,\n\tg++.dg/abi/layout4.C, g++.dg/abi/thunk1.C, g++.dg/abi/thunk2.C,\n\tg++.dg/abi/vbase11.C, g++.dg/abi/vthunk2.C, g++.dg/abi/vthunk3.C,\n\tg++.dg/ext/attrib8.C: Run also on x86_64 compiling 32-bit x86\n\tprograms.\n\n\t* g++.dg/opt/reg-stack4.C, g++.dg/eh/simd-1.C, g++.dg/eh/simd-1.C,\n\tgcc.dg/setjmp-2.c, gcc.dg/short-compare-1.c,\n\tgcc.dg/short-compare-2.c, gcc.target/i386/asm-1.c: Handle 32-bit\n\tx86-64 compilation.\n\n\t* g++.dg/warn/register-var-1.C, g++.dg/charset/asm2.c: Run also on\n\tx86_64.\n\n\t* gcc.dg/i386-pentium4-not-mull.c: Change option handling to use\n\teffective-target ilp32.\n\nFrom-SVN: r100220", "tree": {"sha": "ef96d74eca545ea4a83579d4722b56a91fe6346b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ef96d74eca545ea4a83579d4722b56a91fe6346b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b9fa227db9c8f21061285823768b73adb07cc395", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9fa227db9c8f21061285823768b73adb07cc395", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b9fa227db9c8f21061285823768b73adb07cc395", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9fa227db9c8f21061285823768b73adb07cc395/comments", "author": {"login": "ajaeger", "id": 16867, "node_id": "MDQ6VXNlcjE2ODY3", "avatar_url": "https://avatars.githubusercontent.com/u/16867?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ajaeger", "html_url": "https://github.com/ajaeger", "followers_url": "https://api.github.com/users/ajaeger/followers", "following_url": "https://api.github.com/users/ajaeger/following{/other_user}", "gists_url": "https://api.github.com/users/ajaeger/gists{/gist_id}", "starred_url": "https://api.github.com/users/ajaeger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ajaeger/subscriptions", "organizations_url": "https://api.github.com/users/ajaeger/orgs", "repos_url": "https://api.github.com/users/ajaeger/repos", "events_url": "https://api.github.com/users/ajaeger/events{/privacy}", "received_events_url": "https://api.github.com/users/ajaeger/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "aa9c57ecdb019627de1349e37c30f04536108a8f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa9c57ecdb019627de1349e37c30f04536108a8f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa9c57ecdb019627de1349e37c30f04536108a8f"}], "stats": {"total": 123, "additions": 77, "deletions": 46}, "files": [{"sha": "620ae211c388856504031daf8475ae9a5df43be9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 26, "deletions": 1, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9fa227db9c8f21061285823768b73adb07cc395/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9fa227db9c8f21061285823768b73adb07cc395/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b9fa227db9c8f21061285823768b73adb07cc395", "patch": "@@ -1,8 +1,33 @@\n+2005-05-26  Andreas Jaeger  <aj@suse.de>\n+\n+        PR testsuite/20772\n+\t* gfortran.dg/promotion.f90, gcc.misc-tests/i386-pf-3dnow-1.c,\n+\tgcc.misc-tests/i386-pf-athlon-1.c,\n+\tgcc.misc-tests/i386-pf-none-1.c, gcc.misc-tests/i386-pf-sse-1.c,\n+\tg++.dg/opt/mmx1.C, g++.dg/other/big-struct.C,\n+\tg++.dg/abi/bitfield3.C, g++.dg/abi/bitfield8.C,\n+\tg++.dg/abi/bitfield9.C, g++.dg/abi/empty7.C, g++.dg/abi/empty9.C,\n+\tg++.dg/abi/layout4.C, g++.dg/abi/thunk1.C, g++.dg/abi/thunk2.C,\n+\tg++.dg/abi/vbase11.C, g++.dg/abi/vthunk2.C, g++.dg/abi/vthunk3.C,\n+\tg++.dg/ext/attrib8.C: Run also on x86_64 compiling 32-bit x86\n+\tprograms.\n+\n+\t* g++.dg/opt/reg-stack4.C, g++.dg/eh/simd-1.C, g++.dg/eh/simd-1.C,\n+\tgcc.dg/setjmp-2.c, gcc.dg/short-compare-1.c,\n+\tgcc.dg/short-compare-2.c, gcc.target/i386/asm-1.c: Handle 32-bit\n+\tx86-64 compilation.\n+\n+\t* g++.dg/warn/register-var-1.C, g++.dg/charset/asm2.c: Run also on\n+\tx86_64.\n+\n+\t* gcc.dg/i386-pentium4-not-mull.c: Change option handling to use\n+\teffective-target ilp32.\n+\n 2005-05-26  David Ung  <davidu@mips.com>\n \n \t* gcc.target/mips/ext_ins.c: New test for testing the generation\n \tof MIPS32/64 rev 2 ext/ins instructions.\n-\t\n+\n 2005-05-26  Andreas Jaeger  <aj@suse.de>\n \n \t* treelang/compile/unsigned.tree: Use gimple instead of"}, {"sha": "b96c9ed8d932e708c7754e4a27861bb6384f82d0", "filename": "gcc/testsuite/g++.dg/abi/bitfield3.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9fa227db9c8f21061285823768b73adb07cc395/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fbitfield3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9fa227db9c8f21061285823768b73adb07cc395/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fbitfield3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fbitfield3.C?ref=b9fa227db9c8f21061285823768b73adb07cc395", "patch": "@@ -1,10 +1,10 @@\n // Test for oversized bitfield alignment in structs on IA-32\n-// { dg-do run { target i?86-*-* } }\n+// { dg-do run { target i?86-*-* x86_64-*-* } }\n // { dg-options \"-O2\" }\n // Cygwin and mingw32 default to MASK_ALIGN_DOUBLE. Override to ensure\n // 4-byte alignment.\n // { dg-options \"-mno-align-double\" { target i?86-*-cygwin* i?86-*-mingw* } }\n-// { dg-skip-if \"\" { i?86-*-* } { \"-m64\" } { \"\" } }\n+// { dg-require-effective-target ilp32 }\n \n struct A\n {"}, {"sha": "58e74be08fb52d957fcfd5e299d3a7a813bdbd1b", "filename": "gcc/testsuite/g++.dg/abi/bitfield8.C", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9fa227db9c8f21061285823768b73adb07cc395/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fbitfield8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9fa227db9c8f21061285823768b73adb07cc395/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fbitfield8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fbitfield8.C?ref=b9fa227db9c8f21061285823768b73adb07cc395", "patch": "@@ -1,6 +1,7 @@\n-// { dg-do run { target i?86-*-* } }\n+// { dg-do run { target i?86-*-* x86_64-*-* } }\n // { dg-options \"-fabi-version=0\" }\n-// { dg-skip-if \"\" { i?86-*-* } { \"-m64\" } { \"\" } }\n+// { dg-require-effective-target ilp32 }\n+\n \n struct A { \n   virtual void f() {}"}, {"sha": "0d3a8bf89858e4f348c2256281f90adf82096991", "filename": "gcc/testsuite/g++.dg/abi/bitfield9.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9fa227db9c8f21061285823768b73adb07cc395/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fbitfield9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9fa227db9c8f21061285823768b73adb07cc395/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fbitfield9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fbitfield9.C?ref=b9fa227db9c8f21061285823768b73adb07cc395", "patch": "@@ -1,4 +1,5 @@\n-// { dg-do run { target i?86-*-* } }\n+// { dg-do run { target i?86-*-* x86_64-*-* } }\n+// { dg-require-effective-target ilp32 }\n // { dg-options -w }\n \n struct X {"}, {"sha": "0a665a845317031d012d011ee02174350869a58a", "filename": "gcc/testsuite/g++.dg/abi/empty7.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9fa227db9c8f21061285823768b73adb07cc395/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fempty7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9fa227db9c8f21061285823768b73adb07cc395/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fempty7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fempty7.C?ref=b9fa227db9c8f21061285823768b73adb07cc395", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target i?86-*-* } }\n-// { dg-skip-if \"\" { i?86-*-* } { \"-m64\" } { \"\" } }\n+// { dg-do run { target i?86-*-* x86_64-*-* } }\n+// { dg-require-effective-target ilp32 }\n // { dg-options \"-fabi-version=0\" }\n \n struct S1 {};"}, {"sha": "06e616adb30d48ebe588aa184759e905075dd039", "filename": "gcc/testsuite/g++.dg/abi/empty9.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9fa227db9c8f21061285823768b73adb07cc395/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fempty9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9fa227db9c8f21061285823768b73adb07cc395/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fempty9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fempty9.C?ref=b9fa227db9c8f21061285823768b73adb07cc395", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target i?86-*-* } }\n-// { dg-skip-if \"\" { i?86-*-* } { \"-m64\" } { \"\" } }\n+// { dg-do run { target i?86-*-* x86_64-*-* } }\n+// { dg-require-effective-target ilp32 }\n // { dg-options \"-w -fabi-version=0\" }\n \n struct E1 {};"}, {"sha": "da3c2f5d8c77f3512a7e9b946205fdb4a64ee10a", "filename": "gcc/testsuite/g++.dg/abi/layout4.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9fa227db9c8f21061285823768b73adb07cc395/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Flayout4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9fa227db9c8f21061285823768b73adb07cc395/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Flayout4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Flayout4.C?ref=b9fa227db9c8f21061285823768b73adb07cc395", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target i?86-*-* } }\n-// { dg-skip-if \"\" { i?86-*-* } { \"-m64\" } { \"\" } }\n+// { dg-do run { target i?86-*-* x86_64-*-* } }\n+// { dg-require-effective-target ilp32 }\n // { dg-options \"-fabi-version=1\" }\n \n struct C4"}, {"sha": "343a2aa6e276bbd8afa9e03bb093399e5e3a9c7c", "filename": "gcc/testsuite/g++.dg/abi/thunk1.C", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9fa227db9c8f21061285823768b73adb07cc395/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fthunk1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9fa227db9c8f21061285823768b73adb07cc395/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fthunk1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fthunk1.C?ref=b9fa227db9c8f21061285823768b73adb07cc395", "patch": "@@ -1,5 +1,6 @@\n-// { dg-do compile { target i?86-*-* } }\n-// { dg-skip-if \"\" { i?86-*-* } { \"-m64\" } { \"\" } }\n+// { dg-do compile { target i?86-*-* x86_64-*-* } }\n+// { dg-require-effective-target ilp32 }\n+\n \n struct A {\n   virtual void f ();"}, {"sha": "e6b2924cfdba3d3d370fde8c63345bdc002ca5cf", "filename": "gcc/testsuite/g++.dg/abi/thunk2.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9fa227db9c8f21061285823768b73adb07cc395/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fthunk2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9fa227db9c8f21061285823768b73adb07cc395/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fthunk2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fthunk2.C?ref=b9fa227db9c8f21061285823768b73adb07cc395", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do compile { target i?86-*-* } }\n-// { dg-skip-if \"\" { i?86-*-* } { \"-m64\" } { \"\" } }\n+// { dg-do compile { target i?86-*-* x86_64-*-* } }\n+// { dg-require-effective-target ilp32 }\n // { dg-options -w }\n \n struct A {"}, {"sha": "8c854b9c13e6bde11f0362e76d34c9b345408cc4", "filename": "gcc/testsuite/g++.dg/abi/vbase11.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9fa227db9c8f21061285823768b73adb07cc395/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fvbase11.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9fa227db9c8f21061285823768b73adb07cc395/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fvbase11.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fvbase11.C?ref=b9fa227db9c8f21061285823768b73adb07cc395", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do run { target i?86-*-* } }\n-// { dg-skip-if \"\" { i?86-*-* } { \"-m64\" } { \"\" } }\n+// { dg-do run { target i?86-*-* x86_64-*-* } }\n+// { dg-require-effective-target ilp32 }\n // { dg-options \"-fabi-version=0\" }\n \n struct A { virtual void f(); char c1; };"}, {"sha": "9b6f14c50e2c83973f8789d5941fc067ed750f62", "filename": "gcc/testsuite/g++.dg/abi/vthunk2.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9fa227db9c8f21061285823768b73adb07cc395/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fvthunk2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9fa227db9c8f21061285823768b73adb07cc395/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fvthunk2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fvthunk2.C?ref=b9fa227db9c8f21061285823768b73adb07cc395", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do compile { target i?86-*-* } }\n-// { dg-skip-if \"\" { i?86-*-* } { \"-m64\" } { \"\" } }\n+// { dg-do compile { target i?86-*-* x86_64-*-*} }\n+// { dg-require-effective-target ilp32 }\n \n struct c0 {\n   virtual void f ();"}, {"sha": "59fbbdc4be30ea507397ef6db488ae891d0f8752", "filename": "gcc/testsuite/g++.dg/abi/vthunk3.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9fa227db9c8f21061285823768b73adb07cc395/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fvthunk3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9fa227db9c8f21061285823768b73adb07cc395/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fvthunk3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fvthunk3.C?ref=b9fa227db9c8f21061285823768b73adb07cc395", "patch": "@@ -1,5 +1,5 @@\n-// { dg-do compile { target i?86-*-* } }\n-// { dg-skip-if \"\" { i?86-*-* } { \"-m64\" } { \"\" } }\n+// { dg-do compile { target i?86-*-* x86_64-*-* } }\n+// { dg-require-effective-target ilp32 }\n // { dg-options \"-fabi-version=0\" }\n \n struct A {"}, {"sha": "7fb1959d260f0fa15989e9617d5b0832160bb797", "filename": "gcc/testsuite/g++.dg/charset/asm2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9fa227db9c8f21061285823768b73adb07cc395/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcharset%2Fasm2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9fa227db9c8f21061285823768b73adb07cc395/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcharset%2Fasm2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcharset%2Fasm2.c?ref=b9fa227db9c8f21061285823768b73adb07cc395", "patch": "@@ -1,6 +1,6 @@\n /* Test for complex asm statements. Make sure it compiles\n    then test for some of the asm statements not being translated.  */\n-/* { dg-do compile { target i?86-*-* } }\n+/* { dg-do compile { target i?86-*-* x86_64-*-* } }\n    { dg-require-iconv \"IBM1047\" }\n    { dg-final { scan-assembler \"std\" } }\n    { dg-final { scan-assembler \"cld\" } }"}, {"sha": "e7c30dbf3bdae0e66e5b81fbe299cdfc6315c615", "filename": "gcc/testsuite/g++.dg/eh/simd-1.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9fa227db9c8f21061285823768b73adb07cc395/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fsimd-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9fa227db9c8f21061285823768b73adb07cc395/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fsimd-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fsimd-1.C?ref=b9fa227db9c8f21061285823768b73adb07cc395", "patch": "@@ -2,6 +2,7 @@\n // Contributed by Aldy Hernandez (aldy@quesejoda.com).\n // { dg-options \"-O\" }\n // { dg-options \"-O -w\" { target i?86-*-* } }\n+// { dg-options \"-O -w\" { target { x86_64-*-* && ilp32 } } }\n // { dg-do run }\n \n typedef int __attribute__((vector_size (8))) vecint;"}, {"sha": "7d99132c1751544c1b3e1eb8f7b47333eef8435b", "filename": "gcc/testsuite/g++.dg/ext/attrib8.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9fa227db9c8f21061285823768b73adb07cc395/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fattrib8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9fa227db9c8f21061285823768b73adb07cc395/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fattrib8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fattrib8.C?ref=b9fa227db9c8f21061285823768b73adb07cc395", "patch": "@@ -1,6 +1,6 @@\n // PR 8656\n-// { dg-do compile { target i?86-*-* } }\n-// { dg-skip-if \"\" { i?86-*-* } { \"-m64\" } { \"\" } }\n+// { dg-do compile { target i?86-*-* x86_64-*-* } }\n+// { dg-require-effective-target ilp32 }\n \n extern int * (__attribute__((stdcall)) *fooPtr)( void);\n int * __attribute__((stdcall)) myFn01( void) { return 0; }"}, {"sha": "f13b2f844af6ab0d11860c5837182490fd3bd705", "filename": "gcc/testsuite/g++.dg/opt/mmx1.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9fa227db9c8f21061285823768b73adb07cc395/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fmmx1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9fa227db9c8f21061285823768b73adb07cc395/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fmmx1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fmmx1.C?ref=b9fa227db9c8f21061285823768b73adb07cc395", "patch": "@@ -3,7 +3,8 @@\n // mmx -> mmx register moves.\n // { dg-do compile }\n // { dg-options \"-O2\" }\n-// { dg-options \"-fno-exceptions -O2 -mmmx -fPIC\" { target i?86-*-*  } }\n+// { dg-options \"-fno-exceptions -O2 -mmmx -fPIC\" { target { i?86-*-*  && ilp32 }  } }\n+// { dg-options \"-fno-exceptions -O2 -mmmx -fPIC\" { target { x86_64-*-* && ilp32 } } }\n \n struct A {\n   unsigned a0;"}, {"sha": "9d52845db646ab42c3ed1146798686d63e5042d1", "filename": "gcc/testsuite/g++.dg/opt/reg-stack4.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9fa227db9c8f21061285823768b73adb07cc395/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Freg-stack4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9fa227db9c8f21061285823768b73adb07cc395/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Freg-stack4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Freg-stack4.C?ref=b9fa227db9c8f21061285823768b73adb07cc395", "patch": "@@ -5,8 +5,8 @@\n // deleted a valid edge.\n \n // { dg-do compile }\n-// { dg-options \"-mtune=i586 -O2\" { target i?86-*-* } }\n-// { dg-skip-if \"\" { i?86-*-* } { \"-m64\" } { \"\" } }\n+// { dg-options \"-mtune=i586 -O2\" { target { i?86-*-* && ilp32 } } }\n+// { dg-options \"-mtune=i586 -O2\" { target { x86_64-*-* && ilp32 } } }\n \n struct array {\n   double data;"}, {"sha": "dcf230dd69cf05df92bdcee1437c15033f57d05d", "filename": "gcc/testsuite/g++.dg/other/big-struct.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9fa227db9c8f21061285823768b73adb07cc395/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fbig-struct.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9fa227db9c8f21061285823768b73adb07cc395/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fbig-struct.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fbig-struct.C?ref=b9fa227db9c8f21061285823768b73adb07cc395", "patch": "@@ -1,4 +1,5 @@\n-// { dg-do compile { target i?86-*-* } }\n+// { dg-do compile { target i?86-*-* x86_64-*-* } }\n+// { dg-require-effective-target ilp32 }\n \n struct A\n {"}, {"sha": "3396d211385a089dbe1c7730ebe686b5f40f12a7", "filename": "gcc/testsuite/g++.dg/warn/register-var-1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9fa227db9c8f21061285823768b73adb07cc395/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fregister-var-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9fa227db9c8f21061285823768b73adb07cc395/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fregister-var-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fregister-var-1.C?ref=b9fa227db9c8f21061285823768b73adb07cc395", "patch": "@@ -1,6 +1,6 @@\n /* PR/18160 */\n \n-/* { dg-do compile { target i?86-*-* } } */\n+/* { dg-do compile { target i?86-*-* x86_64-*-* } } */\n \n /* This should yield an error even without -pedantic.  */\n /* { dg-options \"-ansi\" } */"}, {"sha": "2ae7512cb48b09d325d87774ecf82cfb8a4ac42e", "filename": "gcc/testsuite/gcc.dg/i386-pentium4-not-mull.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9fa227db9c8f21061285823768b73adb07cc395/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-pentium4-not-mull.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9fa227db9c8f21061285823768b73adb07cc395/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-pentium4-not-mull.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-pentium4-not-mull.c?ref=b9fa227db9c8f21061285823768b73adb07cc395", "patch": "@@ -1,7 +1,6 @@\n /* { dg-do compile { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -march=pentium4\" { target i?86-*-* } } */\n-/* { dg-skip-if \"\" { i?86-*-* } { \"-m64\" } { \"\" } } */\n-/* { dg-options \"-O2 -march=pentium4 -m32\" { target x86_64-*-* } } */\n+/* { dg-require-effective-target ilp32 } */\n+/* { dg-options \"-O2 -march=pentium4\" } */\n /* { dg-final { scan-assembler-not \"imull\" } } */\n \n /* Should be done not using imull.  */"}, {"sha": "14c27ddc12e8a1bc12565bbfe99e3f73eaafbae6", "filename": "gcc/testsuite/gcc.dg/setjmp-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9fa227db9c8f21061285823768b73adb07cc395/gcc%2Ftestsuite%2Fgcc.dg%2Fsetjmp-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9fa227db9c8f21061285823768b73adb07cc395/gcc%2Ftestsuite%2Fgcc.dg%2Fsetjmp-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fsetjmp-2.c?ref=b9fa227db9c8f21061285823768b73adb07cc395", "patch": "@@ -1,8 +1,8 @@\n /* PR middle-end/17813 */\n /* Origin: Tom Hughes <tom@compton.nu> */\n /* { dg-do run { target i?86-*-linux* x86_64-*-linux* } } */\n-/* { dg-options \"-O -fomit-frame-pointer -march=i386\" { target i?86-*-linux* } } */\n-/* { dg-options \"-O -fomit-frame-pointer -m32 -march=i386\" { target x86_64-*-linux* } } */\n+/* { dg-options \"-O -fomit-frame-pointer -march=i386\" { target { i?86-*-linux* && ilp32 } } } */\n+/* { dg-options \"-O -fomit-frame-pointer -march=i386\" { target { x86_64-*-linux* && ilp32 } } } */\n \n #include <setjmp.h>\n #include <signal.h>"}, {"sha": "8c02a893347b08ac76c0ca9b17fefc64ee01187a", "filename": "gcc/testsuite/gcc.dg/short-compare-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9fa227db9c8f21061285823768b73adb07cc395/gcc%2Ftestsuite%2Fgcc.dg%2Fshort-compare-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9fa227db9c8f21061285823768b73adb07cc395/gcc%2Ftestsuite%2Fgcc.dg%2Fshort-compare-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fshort-compare-1.c?ref=b9fa227db9c8f21061285823768b73adb07cc395", "patch": "@@ -4,7 +4,7 @@\n /* { dg-do run } */\n /* { dg-options \"-O\" } */\n /* { dg-options \"-O -mtune=i686\" { target { i?86-*-* && ilp32 } } } */\n-/* { dg-options \"-O -m32 -mtune=i686\" { target x86_64-*-* } } */\n+/* { dg-options \"-O -mtune=i686\" { target { x86_64-*-* && ilp32 } } } */\n \n extern void abort(void);\n "}, {"sha": "1c2192e821a8417de6ce5770969bb16954e6b72f", "filename": "gcc/testsuite/gcc.dg/short-compare-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9fa227db9c8f21061285823768b73adb07cc395/gcc%2Ftestsuite%2Fgcc.dg%2Fshort-compare-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9fa227db9c8f21061285823768b73adb07cc395/gcc%2Ftestsuite%2Fgcc.dg%2Fshort-compare-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fshort-compare-2.c?ref=b9fa227db9c8f21061285823768b73adb07cc395", "patch": "@@ -5,7 +5,7 @@\n /* { dg-do run } */\n /* { dg-options \"-O\" } */\n /* { dg-options \"-O -mtune=i686\" { target { i?86-*-* && ilp32 } } } */\n-/* { dg-options \"-O -m32 -mtune=i686\" { target x86_64-*-* } } */\n+/* { dg-options \"-O -mtune=i686\" { target { x86_64-*-* && ilp32 } } } */\n \n extern void abort();\n "}, {"sha": "ffb2e79530b9f252105ff9a12a76e99ec1c933c4", "filename": "gcc/testsuite/gcc.misc-tests/i386-pf-3dnow-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9fa227db9c8f21061285823768b73adb07cc395/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fi386-pf-3dnow-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9fa227db9c8f21061285823768b73adb07cc395/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fi386-pf-3dnow-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fi386-pf-3dnow-1.c?ref=b9fa227db9c8f21061285823768b73adb07cc395", "patch": "@@ -1,8 +1,8 @@\n /* Test that the correct data prefetch instructions are generated for i386\n    variants that use 3DNow! prefetch instructions.  */\n \n-/* { dg-do compile { target i?86-*-* } } */\n-/* { dg-skip-if \"\" { i?86-*-* } { \"-m64\" } { \"\" } } */\n+/* { dg-do compile { target i?86-*-* x86_64-*-*} } */\n+/* { dg-require-effective-target ilp32 } */\n \n extern void exit (int);\n "}, {"sha": "8d5ad1efe7d6b5cfccd13ac3aefa903d874739a0", "filename": "gcc/testsuite/gcc.misc-tests/i386-pf-athlon-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9fa227db9c8f21061285823768b73adb07cc395/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fi386-pf-athlon-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9fa227db9c8f21061285823768b73adb07cc395/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fi386-pf-athlon-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fi386-pf-athlon-1.c?ref=b9fa227db9c8f21061285823768b73adb07cc395", "patch": "@@ -2,8 +2,8 @@\n    variants that use 3DNow! prefetchw or SSE prefetch instructions with\n    locality hints.  */\n \n-/* { dg-do compile { target i?86-*-* } } */\n-/* { dg-skip-if \"\" { i?86-*-* } { \"-m64\" } { \"\" } } */\n+/* { dg-do compile { target i?86-*-* x86_64-*-* } } */\n+/* { dg-require-effective-target ilp32 } */\n \n extern void exit (int);\n "}, {"sha": "d87a2100dda871fca1a429fdcc0419c3b4bda775", "filename": "gcc/testsuite/gcc.misc-tests/i386-pf-none-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9fa227db9c8f21061285823768b73adb07cc395/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fi386-pf-none-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9fa227db9c8f21061285823768b73adb07cc395/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fi386-pf-none-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fi386-pf-none-1.c?ref=b9fa227db9c8f21061285823768b73adb07cc395", "patch": "@@ -1,8 +1,8 @@\n /* Test that data prefetch instructions are not generated for i386 variants\n    that do not support those instructions.  */\n \n-/* { dg-do compile { target i?86-*-* } } */\n-/* { dg-skip-if \"\" { i?86-*-* } { \"-m64\" } { \"\" } } */\n+/* { dg-do compile { target i?86-*-* x86_64-*-* } } */\n+/* { dg-require-effective-target ilp32 } */\n \n extern void exit (int);\n "}, {"sha": "fb47c9dfc539899fa98b6cce49ea78929f01386c", "filename": "gcc/testsuite/gcc.misc-tests/i386-pf-sse-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9fa227db9c8f21061285823768b73adb07cc395/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fi386-pf-sse-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9fa227db9c8f21061285823768b73adb07cc395/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fi386-pf-sse-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fi386-pf-sse-1.c?ref=b9fa227db9c8f21061285823768b73adb07cc395", "patch": "@@ -1,8 +1,8 @@\n /* Test that the correct data prefetch instructions are generated for i386\n    variants that use SSE prefetch instructions.  */\n \n-/* { dg-do compile { target i?86-*-* } } */\n-/* { dg-skip-if \"\" { i?86-*-* } { \"-m64\" } { \"\" } } */\n+/* { dg-do compile { target i?86-*-* x86_64-*-* } } */\n+/* { dg-require-effective-target ilp32 } */\n \n extern void exit (int);\n "}, {"sha": "80716093136b602cbffb01aa5ed2bbdbc12f1ac4", "filename": "gcc/testsuite/gfortran.dg/promotion.f90", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9fa227db9c8f21061285823768b73adb07cc395/gcc%2Ftestsuite%2Fgfortran.dg%2Fpromotion.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9fa227db9c8f21061285823768b73adb07cc395/gcc%2Ftestsuite%2Fgfortran.dg%2Fpromotion.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpromotion.f90?ref=b9fa227db9c8f21061285823768b73adb07cc395", "patch": "@@ -1,4 +1,5 @@\n-! { dg-do run { target i?86-*-* } }\n+! { dg-do run { target i?86-*-* x86_64-*-* } }\n+! { dg-require-effective-target ilp32 }\n ! { dg-options \"-fdefault-integer-8 -fdefault-real-8\" }\n program a\n    logical l"}]}