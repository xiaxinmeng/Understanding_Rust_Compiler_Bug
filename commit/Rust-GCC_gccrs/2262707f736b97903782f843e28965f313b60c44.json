{"sha": "2262707f736b97903782f843e28965f313b60c44", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjI2MjcwN2Y3MzZiOTc5MDM3ODJmODQzZTI4OTY1ZjMxM2I2MGM0NA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2010-11-16T12:57:34Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2010-11-16T12:57:34Z"}, "message": "tree-ssa-sccvn.c (visit_unary_op): Rename to ...\n\n2010-11-16  Richard Guenther  <rguenther@suse.de>\n\n\t* tree-ssa-sccvn.c (visit_unary_op): Rename to ...\n\t(visit_nary_op): ... this.\n\t(visit_binary_op): Remove.\n\t(visit_use): Adjust and handle GIMPLE_TERNARY_RHS.\n\n\t* gcc.dg/tree-ssa/ssa-fre-30.c: New testcase.\n\nFrom-SVN: r166795", "tree": {"sha": "da69715b8434eb8b7e1d475123a31e7af3ad34de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/da69715b8434eb8b7e1d475123a31e7af3ad34de"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2262707f736b97903782f843e28965f313b60c44", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2262707f736b97903782f843e28965f313b60c44", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2262707f736b97903782f843e28965f313b60c44", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2262707f736b97903782f843e28965f313b60c44/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "05613877bda9a29d72c092b33a92d062f1f9ece4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05613877bda9a29d72c092b33a92d062f1f9ece4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/05613877bda9a29d72c092b33a92d062f1f9ece4"}], "stats": {"total": 64, "additions": 31, "deletions": 33}, "files": [{"sha": "3329ae34ca116f94ecb6a06c97a9773275bfe2a0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2262707f736b97903782f843e28965f313b60c44/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2262707f736b97903782f843e28965f313b60c44/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2262707f736b97903782f843e28965f313b60c44", "patch": "@@ -1,3 +1,10 @@\n+2010-11-16  Richard Guenther  <rguenther@suse.de>\n+\n+\t* tree-ssa-sccvn.c (visit_unary_op): Rename to ...\n+\t(visit_nary_op): ... this.\n+\t(visit_binary_op): Remove.\n+\t(visit_use): Adjust and handle GIMPLE_TERNARY_RHS.\n+\n 2010-11-16  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/45172"}, {"sha": "3ef9ee0d0aefbc2f30120e020d33af0df289c955", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2262707f736b97903782f843e28965f313b60c44/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2262707f736b97903782f843e28965f313b60c44/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2262707f736b97903782f843e28965f313b60c44", "patch": "@@ -1,3 +1,7 @@\n+2010-11-16  Richard Guenther  <rguenther@suse.de>\n+\n+\t* gcc.dg/tree-ssa/ssa-fre-30.c: New testcase.\n+\n 2010-11-16  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/45172"}, {"sha": "bfbef804d3ab653f56ba395d0e633d483a844f90", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-fre-30.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2262707f736b97903782f843e28965f313b60c44/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-30.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2262707f736b97903782f843e28965f313b60c44/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-30.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-30.c?ref=2262707f736b97903782f843e28965f313b60c44", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -ffinite-math-only -fdump-tree-optimized\" } */\n+\n+float foo(float x, float y, float z)\n+{\n+  float a = __builtin_fmaf (x, y, z);\n+  float b = __builtin_fmaf (x, y, z);\n+  return a - b;\n+}\n+\n+/* { dg-final { scan-tree-dump \"return 0\" \"optimized\" } } */\n+/* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "01b66ae3567a4977b460733dafc2759deb46f6c7", "filename": "gcc/tree-ssa-sccvn.c", "status": "modified", "additions": 8, "deletions": 33, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2262707f736b97903782f843e28965f313b60c44/gcc%2Ftree-ssa-sccvn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2262707f736b97903782f843e28965f313b60c44/gcc%2Ftree-ssa-sccvn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-sccvn.c?ref=2262707f736b97903782f843e28965f313b60c44", "patch": "@@ -2167,41 +2167,17 @@ visit_copy (tree lhs, tree rhs)\n   return set_ssa_val_to (lhs, rhs);\n }\n \n-/* Visit a unary operator RHS, value number it, and return true if the\n+/* Visit a nary operator RHS, value number it, and return true if the\n    value number of LHS has changed as a result.  */\n \n static bool\n-visit_unary_op (tree lhs, gimple stmt)\n+visit_nary_op (tree lhs, gimple stmt)\n {\n   bool changed = false;\n   tree result = vn_nary_op_lookup_stmt (stmt, NULL);\n \n   if (result)\n-    {\n-      changed = set_ssa_val_to (lhs, result);\n-    }\n-  else\n-    {\n-      changed = set_ssa_val_to (lhs, lhs);\n-      vn_nary_op_insert_stmt (stmt, lhs);\n-    }\n-\n-  return changed;\n-}\n-\n-/* Visit a binary operator RHS, value number it, and return true if the\n-   value number of LHS has changed as a result.  */\n-\n-static bool\n-visit_binary_op (tree lhs, gimple stmt)\n-{\n-  bool changed = false;\n-  tree result = vn_nary_op_lookup_stmt (stmt, NULL);\n-\n-  if (result)\n-    {\n-      changed = set_ssa_val_to (lhs, result);\n-    }\n+    changed = set_ssa_val_to (lhs, result);\n   else\n     {\n       changed = set_ssa_val_to (lhs, lhs);\n@@ -2909,10 +2885,9 @@ visit_use (tree use)\n \t\t  switch (get_gimple_rhs_class (gimple_assign_rhs_code (stmt)))\n \t\t    {\n \t\t    case GIMPLE_UNARY_RHS:\n-\t\t      changed = visit_unary_op (lhs, stmt);\n-\t\t      break;\n \t\t    case GIMPLE_BINARY_RHS:\n-\t\t      changed = visit_binary_op (lhs, stmt);\n+\t\t    case GIMPLE_TERNARY_RHS:\n+\t\t      changed = visit_nary_op (lhs, stmt);\n \t\t      break;\n \t\t    case GIMPLE_SINGLE_RHS:\n \t\t      switch (TREE_CODE_CLASS (gimple_assign_rhs_code (stmt)))\n@@ -2921,10 +2896,10 @@ visit_use (tree use)\n \t\t\t  /* VOP-less references can go through unary case.  */\n \t\t\t  if ((gimple_assign_rhs_code (stmt) == REALPART_EXPR\n \t\t\t       || gimple_assign_rhs_code (stmt) == IMAGPART_EXPR\n-\t\t\t       || gimple_assign_rhs_code (stmt) == VIEW_CONVERT_EXPR )\n+\t\t\t       || gimple_assign_rhs_code (stmt) == VIEW_CONVERT_EXPR)\n \t\t\t      && TREE_CODE (TREE_OPERAND (gimple_assign_rhs1 (stmt), 0)) == SSA_NAME)\n \t\t\t    {\n-\t\t\t      changed = visit_unary_op (lhs, stmt);\n+\t\t\t      changed = visit_nary_op (lhs, stmt);\n \t\t\t      break;\n \t\t\t    }\n \t\t\t  /* Fallthrough.  */\n@@ -2935,7 +2910,7 @@ visit_use (tree use)\n \t\t\tcase tcc_expression:\n \t\t\t  if (gimple_assign_rhs_code (stmt) == ADDR_EXPR)\n \t\t\t    {\n-\t\t\t      changed = visit_unary_op (lhs, stmt);\n+\t\t\t      changed = visit_nary_op (lhs, stmt);\n \t\t\t      break;\n \t\t\t    }\n \t\t\t  /* Fallthrough.  */"}]}