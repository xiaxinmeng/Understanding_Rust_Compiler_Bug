{"sha": "0dbe3777353ae62281f913cfc5df518d1dce98c7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGRiZTM3NzczNTNhZTYyMjgxZjkxM2NmYzVkZjUxOGQxZGNlOThjNw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-06-10T03:56:17Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-06-10T03:56:17Z"}, "message": "prune.exp: Prune \"note\"s.\n\n\t* lib/prune.exp: Prune \"note\"s.\n\t* g++.dg/uninit-pred-3_b.C: Remove dg-excess-errors.\n\n\t* g++.dg/ext/injected-ttp.C: Specify -std=c++98.\n\t* g++.dg/template/dependent-expr3.C: Likewise.\n\t* g++.dg/parse/template7.C: Likewise.\n\t* g++.old-deja/g++.bugs/900119_01.C: Likewise.\n\t* g++.old-deja/g++.jason/rfg10.C: Likewise.\n\t* g++.old-deja/g++.pt/friend38.C: Likewise.\n\t* g++.old-deja/g++.pt/crash32.C: Likewise.\n\t* g++.old-deja/g++.other/init4.C: Likewise.\n\t* g++.old-deja/g++.other/friend8.C: Likewise.\n\n\t* g++.dg/ext/complex7.C: Adjust expected output.\n\t* g++.dg/diagnostic/method1.C: Likewise.\n\t* g++.dg/parse/parameter-declaration-2.C: Likewise.\n\t* g++.dg/parse/crash33.C: Likewise.\n\t* g++.dg/other/warning1.C: Likewise.\n\t* g++.dg/init/pr29571.C: Likewise.\n\t* g++.dg/warn/overflow-warn-1.C: Likewise.\n\t* g++.dg/warn/overflow-warn-3.C: Likewise.\n\t* g++.dg/warn/overflow-warn-4.C: Likewise.\n\t* g++.old-deja/g++.oliva/template1.C: Likewise.\n\nFrom-SVN: r174886", "tree": {"sha": "3d91ce019732151289b6152bdfb02ccd23c43521", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3d91ce019732151289b6152bdfb02ccd23c43521"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0dbe3777353ae62281f913cfc5df518d1dce98c7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0dbe3777353ae62281f913cfc5df518d1dce98c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0dbe3777353ae62281f913cfc5df518d1dce98c7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0dbe3777353ae62281f913cfc5df518d1dce98c7/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "793fbf0b4857056c5723a5e2b9fc20c3726726c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/793fbf0b4857056c5723a5e2b9fc20c3726726c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/793fbf0b4857056c5723a5e2b9fc20c3726726c5"}], "stats": {"total": 75, "additions": 59, "deletions": 16}, "files": [{"sha": "d93c01a2a4e63020f27a5eeb34aae3f406ea6601", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0dbe3777353ae62281f913cfc5df518d1dce98c7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0dbe3777353ae62281f913cfc5df518d1dce98c7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0dbe3777353ae62281f913cfc5df518d1dce98c7", "patch": "@@ -1,5 +1,29 @@\n 2011-06-09  Jason Merrill  <jason@redhat.com>\n \n+\t* lib/prune.exp: Prune \"note\"s.\n+\t* g++.dg/uninit-pred-3_b.C: Remove dg-excess-errors.\n+\n+\t* g++.dg/ext/injected-ttp.C: Specify -std=c++98.\n+\t* g++.dg/template/dependent-expr3.C: Likewise.\n+\t* g++.dg/parse/template7.C: Likewise.\n+\t* g++.old-deja/g++.bugs/900119_01.C: Likewise.\n+\t* g++.old-deja/g++.jason/rfg10.C: Likewise.\n+\t* g++.old-deja/g++.pt/friend38.C: Likewise.\n+\t* g++.old-deja/g++.pt/crash32.C: Likewise.\n+\t* g++.old-deja/g++.other/init4.C: Likewise.\n+\t* g++.old-deja/g++.other/friend8.C: Likewise.\n+\n+\t* g++.dg/ext/complex7.C: Adjust expected output.\n+\t* g++.dg/diagnostic/method1.C: Likewise.\n+\t* g++.dg/parse/parameter-declaration-2.C: Likewise.\n+\t* g++.dg/parse/crash33.C: Likewise.\n+\t* g++.dg/other/warning1.C: Likewise.\n+\t* g++.dg/init/pr29571.C: Likewise.\n+\t* g++.dg/warn/overflow-warn-1.C: Likewise.\n+\t* g++.dg/warn/overflow-warn-3.C: Likewise.\n+\t* g++.dg/warn/overflow-warn-4.C: Likewise.\n+\t* g++.old-deja/g++.oliva/template1.C: Likewise.\n+\n \t* g++.dg/cpp0x/regress/error-recovery1.C: Adjust.\n \t* g++.dg/parse/template7.C: Adjust.\n "}, {"sha": "4a781047ef882d18456e7e31db069a43f70d11e5", "filename": "gcc/testsuite/g++.dg/diagnostic/method1.C", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0dbe3777353ae62281f913cfc5df518d1dce98c7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdiagnostic%2Fmethod1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0dbe3777353ae62281f913cfc5df518d1dce98c7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdiagnostic%2Fmethod1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdiagnostic%2Fmethod1.C?ref=0dbe3777353ae62281f913cfc5df518d1dce98c7", "patch": "@@ -18,3 +18,5 @@ baz ()\n {\n   bar <int> ();\n }\n+\n+// { dg-prune-output \"without object\" }"}, {"sha": "5b3eead1810f6a1eb8dba536b68fcf8d9bd37649", "filename": "gcc/testsuite/g++.dg/ext/complex7.C", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0dbe3777353ae62281f913cfc5df518d1dce98c7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fcomplex7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0dbe3777353ae62281f913cfc5df518d1dce98c7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fcomplex7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fcomplex7.C?ref=0dbe3777353ae62281f913cfc5df518d1dce98c7", "patch": "@@ -4,3 +4,5 @@ class A\n {\n   static const _Complex double x = 1.0 + 2.0i;\n };\n+\n+// { dg-prune-output \"constexpr. needed\" }"}, {"sha": "5ef4a4ec4f1e5404602ef769314a4c44fc9515c2", "filename": "gcc/testsuite/g++.dg/ext/injected-ttp.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0dbe3777353ae62281f913cfc5df518d1dce98c7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Finjected-ttp.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0dbe3777353ae62281f913cfc5df518d1dce98c7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Finjected-ttp.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Finjected-ttp.C?ref=0dbe3777353ae62281f913cfc5df518d1dce98c7", "patch": "@@ -1,7 +1,7 @@\n // Test for doing the right thing with injected-class-name used as template\n // type argument.  This is an extension from DR 176.\n \n-// { dg-options \"-pedantic\" }\n+// { dg-options \"-pedantic -std=c++98\" }\n \n template <class T>\n struct A { };"}, {"sha": "c9bfa28862e3e77e12d5cec42b09cc7d7c761c78", "filename": "gcc/testsuite/g++.dg/init/pr29571.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0dbe3777353ae62281f913cfc5df518d1dce98c7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fpr29571.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0dbe3777353ae62281f913cfc5df518d1dce98c7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fpr29571.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fpr29571.C?ref=0dbe3777353ae62281f913cfc5df518d1dce98c7", "patch": "@@ -3,6 +3,6 @@\n struct A\n {\n   static const int i = 0/0 + \"\"; // { dg-warning \"division by zero\" }\n-  // { dg-error \"field initializer is not constant\" \"\" { target *-*-* } 5 }\n+  // { dg-error \"field initializer is not constant|not a constant-expression\" \"\" { target *-*-* } 5 }\n   static const int j = int(i);\n };"}, {"sha": "c65ae0ff6efbf02e7009bab7c0fe500187c2a543", "filename": "gcc/testsuite/g++.dg/other/warning1.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0dbe3777353ae62281f913cfc5df518d1dce98c7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fwarning1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0dbe3777353ae62281f913cfc5df518d1dce98c7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fwarning1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fwarning1.C?ref=0dbe3777353ae62281f913cfc5df518d1dce98c7", "patch": "@@ -7,8 +7,8 @@ extern \"C\" int printf(const char *, ...);\n \n struct S\n {\n-  static const float inf = 1.0f / 0.0f; // { dg-warning \"1.0|float|initialization\" }\n-  static const float nan = 0.0f / 0.0f; // { dg-warning \"0.0|float|initialization\" }\n+  static const float inf = 1.0f / 0.0f; // { dg-warning \"1.0|float|initializ\" }\n+  static const float nan = 0.0f / 0.0f; // { dg-warning \"0.0|float|initializ\" }\n };\n \n int main()"}, {"sha": "5ccb6529c6ee718b64c3f3002959b6b952bb5783", "filename": "gcc/testsuite/g++.dg/parse/crash33.C", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0dbe3777353ae62281f913cfc5df518d1dce98c7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcrash33.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0dbe3777353ae62281f913cfc5df518d1dce98c7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcrash33.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcrash33.C?ref=0dbe3777353ae62281f913cfc5df518d1dce98c7", "patch": "@@ -4,5 +4,8 @@\n template<int>\n void foo()\n [\n-  throw;\t// { dg-error \"expected\" }\n-}\t\t// { dg-error \"expected\" }\n+  throw;\n+}\n+\n+// { dg-prune-output \"expected\" }\n+// { dg-prune-output \"array bound\" }"}, {"sha": "6116630433f3d5c825258f68f74842c4e967047f", "filename": "gcc/testsuite/g++.dg/parse/parameter-declaration-2.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0dbe3777353ae62281f913cfc5df518d1dce98c7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fparameter-declaration-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0dbe3777353ae62281f913cfc5df518d1dce98c7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fparameter-declaration-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fparameter-declaration-2.C?ref=0dbe3777353ae62281f913cfc5df518d1dce98c7", "patch": "@@ -1 +1,2 @@\n void f (int i, int p[i]); // { dg-error \"use of parameter .i. outside function body\" }\n+// { dg-prune-output \"array bound\" }"}, {"sha": "930e259fe1e6d58ea7b8ba78107c9ebd9417dc08", "filename": "gcc/testsuite/g++.dg/parse/template7.C", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0dbe3777353ae62281f913cfc5df518d1dce98c7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ftemplate7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0dbe3777353ae62281f913cfc5df518d1dce98c7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ftemplate7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ftemplate7.C?ref=0dbe3777353ae62281f913cfc5df518d1dce98c7", "patch": "@@ -1,3 +1,5 @@\n+// { dg-options -std=c++98 }\n+\n template <int I>\n void f();\t\t\t// { dg-message \"note\" }\n "}, {"sha": "bf14c49b42bbd378f39e1f3af59f378ade8c3a34", "filename": "gcc/testsuite/g++.dg/template/dependent-expr3.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0dbe3777353ae62281f913cfc5df518d1dce98c7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fdependent-expr3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0dbe3777353ae62281f913cfc5df518d1dce98c7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fdependent-expr3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fdependent-expr3.C?ref=0dbe3777353ae62281f913cfc5df518d1dce98c7", "patch": "@@ -1,3 +1,4 @@\n+// { dg-options -std=c++98 }\n // { dg-do compile }\n // Origin: jbrandmeyer at users dot sourceforge dot net\n // PR c++/12573: COMPONENT_REFs must be inspected for dependness."}, {"sha": "a66e04becb2de2a19cc3dde73ce2a32ace201eb4", "filename": "gcc/testsuite/g++.dg/uninit-pred-3_b.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0dbe3777353ae62281f913cfc5df518d1dce98c7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Funinit-pred-3_b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0dbe3777353ae62281f913cfc5df518d1dce98c7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Funinit-pred-3_b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Funinit-pred-3_b.C?ref=0dbe3777353ae62281f913cfc5df518d1dce98c7", "patch": "@@ -65,7 +65,7 @@ class M {\n \n   void P (int64 t)\n     {\n-      int cc; /* { dg-excess-errors \"note: 'cc' was declared here\" } */\n+      int cc;\n       if (!GetC (&cc))\n         return;\n "}, {"sha": "7cd76e74c7afb26607a642dea6de959cb71d8bd3", "filename": "gcc/testsuite/g++.dg/warn/overflow-warn-1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0dbe3777353ae62281f913cfc5df518d1dce98c7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Foverflow-warn-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0dbe3777353ae62281f913cfc5df518d1dce98c7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Foverflow-warn-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Foverflow-warn-1.C?ref=0dbe3777353ae62281f913cfc5df518d1dce98c7", "patch": "@@ -13,7 +13,7 @@ enum e {\n      in the standard).  */\n   E2 = 2 || 1 / 0, /* { dg-bogus \"warning: division by zero\" \"\" { xfail *-*-* } 14 } */\n   E3 = 1 / 0, /* { dg-warning \"division by zero\" } */\n-  /* { dg-error \"enumerator value for 'E3' is not an integer constant|not a constant expression\" \"enum error\" { target *-*-* } 15 } */\n+  /* { dg-error \"enumerator value for 'E3' is not an integer constant|not a constant.expression\" \"enum error\" { target *-*-* } 15 } */\n   /* But as in DR#031, the 1/0 in an evaluated subexpression means the\n      whole expression violates the constraints.  */\n   E4 = 0 * (1 / 0), /* { dg-warning \"division by zero\" } */"}, {"sha": "73c0e006f56c862d6ab89537264080fe46860f28", "filename": "gcc/testsuite/g++.dg/warn/overflow-warn-3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0dbe3777353ae62281f913cfc5df518d1dce98c7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Foverflow-warn-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0dbe3777353ae62281f913cfc5df518d1dce98c7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Foverflow-warn-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Foverflow-warn-3.C?ref=0dbe3777353ae62281f913cfc5df518d1dce98c7", "patch": "@@ -13,7 +13,7 @@ enum e {\n      in the standard).  */\n   E2 = 2 || 1 / 0, /* { dg-bogus \"warning: division by zero\" \"\" { xfail *-*-* } 14 } */\n   E3 = 1 / 0, /* { dg-warning \"division by zero\" } */\n-  /* { dg-error \"enumerator value for 'E3' is not an integer constant|not a constant expression\" \"enum error\" { target *-*-* } 15 } */\n+  /* { dg-error \"enumerator value for 'E3' is not an integer constant|not a constant.expression\" \"enum error\" { target *-*-* } 15 } */\n   /* But as in DR#031, the 1/0 in an evaluated subexpression means the\n      whole expression violates the constraints.  */\n   E4 = 0 * (1 / 0), /* { dg-warning \"division by zero\" } */"}, {"sha": "24b3959a03494ae0720128d917b49a610c2bf448", "filename": "gcc/testsuite/g++.dg/warn/overflow-warn-4.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0dbe3777353ae62281f913cfc5df518d1dce98c7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Foverflow-warn-4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0dbe3777353ae62281f913cfc5df518d1dce98c7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Foverflow-warn-4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Foverflow-warn-4.C?ref=0dbe3777353ae62281f913cfc5df518d1dce98c7", "patch": "@@ -13,7 +13,7 @@ enum e {\n      in the standard).  */\n   E2 = 2 || 1 / 0, /* { dg-bogus \"warning: division by zero\" \"\" { xfail *-*-* } } */\n   E3 = 1 / 0, /* { dg-warning \"division by zero\" } */\n-  /* { dg-error \"enumerator value for 'E3' is not an integer constant|not a constant expression\" \"enum error\" { target *-*-* } 15 } */\n+  /* { dg-error \"enumerator value for 'E3' is not an integer constant|not a constant.expression\" \"enum error\" { target *-*-* } 15 } */\n   /* But as in DR#031, the 1/0 in an evaluated subexpression means the\n      whole expression violates the constraints.  */\n   E4 = 0 * (1 / 0), /* { dg-warning \"division by zero\" } */"}, {"sha": "0d181c7eeb8218c4982b72b8a812eb93d17262f4", "filename": "gcc/testsuite/g++.old-deja/g++.bugs/900119_01.C", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0dbe3777353ae62281f913cfc5df518d1dce98c7/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bugs%2F900119_01.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0dbe3777353ae62281f913cfc5df518d1dce98c7/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bugs%2F900119_01.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bugs%2F900119_01.C?ref=0dbe3777353ae62281f913cfc5df518d1dce98c7", "patch": "@@ -1,3 +1,4 @@\n+// { dg-options \"-pedantic-errors -std=c++98\" }\n // { dg-do assemble  }\n // g++ 1.36.1 bug 900119_01\n \n@@ -8,7 +9,7 @@\n \n // keywords: member declaration, member initialization\n \n-// { dg-prune-output \"non-static data member initializers\" }\n+// { dg-prune-output \"is a static data member\" }\n \n int global_int;\n \n@@ -18,7 +19,7 @@ public:\n   static int class0_member_1 = 99;\t\t/* { dg-error \"\" }  */\n   int &class0_member_2 = global_int;\t\t/* { dg-error \"\" }  */\n \n-  class0 () : class0_member_2 (global_int) { }  /* { dg-error \"\" }  */\n+  class0 () : class0_member_2 (global_int) { }\n };\n \n \n@@ -27,7 +28,7 @@ struct struct0 {\n   static int struct0_member_1 = 99;\t\t/* { dg-error \"\" }  */\n   int &struct0_member_2 = global_int;\t\t/* { dg-error \"\" }  */\n \n-  struct0 () : struct0_member_2 (global_int) { } /* { dg-error \"\" }  */\n+  struct0 () : struct0_member_2 (global_int) { }\n };\n \n // g++ does not allow unions to have more than one member with an initializer\n@@ -43,7 +44,7 @@ union union1 {\n union union2 {\n   int &union2_member_0 = global_int;\t\t/* { dg-error \"\" }  */\n \n-  union2 () : union2_member_0 (global_int) { }  /* { dg-error \"\" }  */\n+  union2 () : union2_member_0 (global_int) { }\n };\n \n int main () { return 0; }"}, {"sha": "8769f5afc4604ab0970c7a786a33ffe74a829b0b", "filename": "gcc/testsuite/g++.old-deja/g++.jason/rfg10.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0dbe3777353ae62281f913cfc5df518d1dce98c7/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Frfg10.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0dbe3777353ae62281f913cfc5df518d1dce98c7/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Frfg10.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Frfg10.C?ref=0dbe3777353ae62281f913cfc5df518d1dce98c7", "patch": "@@ -1,5 +1,5 @@\n // { dg-do assemble  }\n-// { dg-options \"-pedantic-errors\" }\n+// { dg-options \"-pedantic-errors -std=c++98\" }\n // Bug: g++ doesn't notice the overflow in the enum values.\n \n #include <limits.h>"}, {"sha": "995ac91835a1d269e94f706c71820214d645c49e", "filename": "gcc/testsuite/g++.old-deja/g++.oliva/ChangeLog-2005", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0dbe3777353ae62281f913cfc5df518d1dce98c7/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.oliva%2FChangeLog-2005", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0dbe3777353ae62281f913cfc5df518d1dce98c7/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.oliva%2FChangeLog-2005", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.oliva%2FChangeLog-2005?ref=0dbe3777353ae62281f913cfc5df518d1dce98c7", "previous_filename": "gcc/testsuite/g++.old-deja/g++.oliva/ChangeLog"}, {"sha": "908a06990a2179d59a4dc8f14006de0793ed0424", "filename": "gcc/testsuite/g++.old-deja/g++.oliva/template1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0dbe3777353ae62281f913cfc5df518d1dce98c7/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.oliva%2Ftemplate1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0dbe3777353ae62281f913cfc5df518d1dce98c7/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.oliva%2Ftemplate1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.oliva%2Ftemplate1.C?ref=0dbe3777353ae62281f913cfc5df518d1dce98c7", "patch": "@@ -7,7 +7,7 @@\n \n \n template<int P = 0> struct foo {\n-  static void bar(double (*)[dim]) {} // { dg-error \"'dim' was not declared\" } \n+  static void bar(double (*)[dim]) {} // { dg-error \"'dim' was not declared|array bound\" }\n };\n \n void bar() {"}, {"sha": "c1e93d94ab03fc7648b7a0e3d924ca5b77d50dff", "filename": "gcc/testsuite/g++.old-deja/g++.other/friend8.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0dbe3777353ae62281f913cfc5df518d1dce98c7/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Ffriend8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0dbe3777353ae62281f913cfc5df518d1dce98c7/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Ffriend8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Ffriend8.C?ref=0dbe3777353ae62281f913cfc5df518d1dce98c7", "patch": "@@ -1,3 +1,4 @@\n+// { dg-options \"-std=c++98 -pedantic-errors\" }\n // { dg-do assemble  }\n // \n // Copyright (C) 2000 Free Software Foundation, Inc."}, {"sha": "92562ef5845c22b4ff6d335bb65cdba4f19da81a", "filename": "gcc/testsuite/g++.old-deja/g++.other/init4.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0dbe3777353ae62281f913cfc5df518d1dce98c7/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Finit4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0dbe3777353ae62281f913cfc5df518d1dce98c7/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Finit4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Finit4.C?ref=0dbe3777353ae62281f913cfc5df518d1dce98c7", "patch": "@@ -1,3 +1,4 @@\n+// { dg-options -std=c++98 }\n // { dg-do assemble  }\n \n class error {"}, {"sha": "0be26eab414ced67c89d11f9c8332a0e143f3663", "filename": "gcc/testsuite/g++.old-deja/g++.pt/crash32.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0dbe3777353ae62281f913cfc5df518d1dce98c7/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fcrash32.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0dbe3777353ae62281f913cfc5df518d1dce98c7/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fcrash32.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fcrash32.C?ref=0dbe3777353ae62281f913cfc5df518d1dce98c7", "patch": "@@ -1,3 +1,4 @@\n+// { dg-options \"-std=c++98 -pedantic-errors\" }\n // { dg-do assemble  }\n // Origin: Jason Merrill <jason@cygnus.com>\n "}, {"sha": "f2343d0d7d16458226c3f062b8913ceac162ed93", "filename": "gcc/testsuite/g++.old-deja/g++.pt/friend38.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0dbe3777353ae62281f913cfc5df518d1dce98c7/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ffriend38.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0dbe3777353ae62281f913cfc5df518d1dce98c7/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ffriend38.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ffriend38.C?ref=0dbe3777353ae62281f913cfc5df518d1dce98c7", "patch": "@@ -1,3 +1,4 @@\n+// { dg-options \"-std=c++98 -pedantic-errors\" }\n // { dg-do assemble  }\n \n // Overly simplified from testcase by \"B. K. Oxley\" <binkley@bigfoot.com>"}, {"sha": "f5cbc4ca62ed50b94943fda0a992c10ce830a78f", "filename": "gcc/testsuite/lib/prune.exp", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0dbe3777353ae62281f913cfc5df518d1dce98c7/gcc%2Ftestsuite%2Flib%2Fprune.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0dbe3777353ae62281f913cfc5df518d1dce98c7/gcc%2Ftestsuite%2Flib%2Fprune.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fprune.exp?ref=0dbe3777353ae62281f913cfc5df518d1dce98c7", "patch": "@@ -30,6 +30,9 @@ proc prune_gcc_output { text } {\n     regsub -all \"(^|\\n)Please submit.*instructions\\[^\\n\\]*\" $text \"\" text\n     regsub -all \"(^|\\n)\\[0-9\\]\\[0-9\\]* errors\\.\" $text \"\" text\n \n+    # Ignore informational notes.\n+    regsub -all \"(^|\\n)\\[^\\n\\]*: note: \\[^\\n\\]*\" $text \"\" text\n+\n     # Ignore harmless -fpic warnings.\n     regsub -all \"(^|\\n)\\[^\\n\\]*: warning: -f(pic|PIC) ignored for target\\[^\\n\\]*\" $text \"\" text\n     regsub -all \"(^|\\n)\\[^\\n\\]*: warning: -f(pic|PIC)( and -fpic are| is)? not supported\\[^\\n\\]*\" $text \"\" text"}]}