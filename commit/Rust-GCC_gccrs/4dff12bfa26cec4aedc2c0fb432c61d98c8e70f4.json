{"sha": "4dff12bfa26cec4aedc2c0fb432c61d98c8e70f4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGRmZjEyYmZhMjZjZWM0YWVkYzJjMGZiNDMyYzYxZDk4YzhlNzBmNA==", "commit": {"author": {"name": "J\"orn Rennecke", "email": "amylaar@cygnus.co.uk", "date": "1997-11-19T00:36:12Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "1997-11-19T00:36:12Z"}, "message": "sh.md (attribute \"type\"): Add nil.\n\n        * sh.md (attribute \"type\"): Add nil.\n        (movsi_ie): y/y alternative is type nil.\n        (movsf_ie): Replace ry/yr/X alternative by r/y/X , y/r/X and y/y/X\n        alternatives.\n        (movsf_ie+1): Delete.\n\nFrom-SVN: r16575", "tree": {"sha": "81260cfb9fb714b7e235438910f9d9910b826368", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/81260cfb9fb714b7e235438910f9d9910b826368"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4dff12bfa26cec4aedc2c0fb432c61d98c8e70f4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4dff12bfa26cec4aedc2c0fb432c61d98c8e70f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4dff12bfa26cec4aedc2c0fb432c61d98c8e70f4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4dff12bfa26cec4aedc2c0fb432c61d98c8e70f4/comments", "author": null, "committer": null, "parents": [{"sha": "218c2cdbed7d708d93afff81c11a3f5f0b933ef7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/218c2cdbed7d708d93afff81c11a3f5f0b933ef7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/218c2cdbed7d708d93afff81c11a3f5f0b933ef7"}], "stats": {"total": 44, "additions": 22, "deletions": 22}, "files": [{"sha": "541c9c5e44b1d564cda091d3b01fc68bd96aad25", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dff12bfa26cec4aedc2c0fb432c61d98c8e70f4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dff12bfa26cec4aedc2c0fb432c61d98c8e70f4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4dff12bfa26cec4aedc2c0fb432c61d98c8e70f4", "patch": "@@ -1,3 +1,11 @@\n+Tue Nov 18 23:03:30 1997  J\"orn Rennecke <amylaar@cygnus.co.uk>\n+\n+\t* sh.md (attribute \"type\"): Add nil.\n+\t(movsi_ie): y/y alternative is type nil.\n+\t(movsf_ie): Replace ry/yr/X alternative by r/y/X , y/r/X and y/y/X\n+\talternatives.\n+\t(movsf_ie+1): Delete.\n+\n Tue Nov 18 15:39:59 1997  Jim Wilson  <wilson@cygnus.com>\n \n \t* mips/mips.c (save_restore_insns): If gp_offset or fp_offset are"}, {"sha": "42b866c2af2c11df5ec580a3808df9fe71b0b55a", "filename": "gcc/config/sh/sh.md", "status": "modified", "additions": 14, "deletions": 22, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dff12bfa26cec4aedc2c0fb432c61d98c8e70f4/gcc%2Fconfig%2Fsh%2Fsh.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dff12bfa26cec4aedc2c0fb432c61d98c8e70f4/gcc%2Fconfig%2Fsh%2Fsh.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.md?ref=4dff12bfa26cec4aedc2c0fb432c61d98c8e70f4", "patch": "@@ -101,9 +101,10 @@\n ;; fp\t\tfloating point\n ;; fdiv\t\tfloating point divide (or square root)\n ;; gp_fpul\tmove between general purpose register and fpul\n+;; nil\t\tno-op move, will be deleted.\n \n (define_attr \"type\"\n- \"cbranch,jump,jump_ind,arith,arith3,arith3b,dyn_shift,other,load,load_si,store,move,fmove,smpy,dmpy,return,pload,pstore,pcload,pcload_si,rte,sfunc,call,fp,fdiv,gp_fpul\"\n+ \"cbranch,jump,jump_ind,arith,arith3,arith3b,dyn_shift,other,load,load_si,store,move,fmove,smpy,dmpy,return,pload,pstore,pcload,pcload_si,rte,sfunc,call,fp,fdiv,gp_fpul,nil\"\n   (const_string \"other\"))\n \n ; If a conditional branch destination is within -252..258 bytes away\n@@ -1847,7 +1848,7 @@\n \tlds\t%1,%0\n \tsts\t%1,%0\n \t! move optimized away\"\n-  [(set_attr \"type\" \"pcload_si,move,*,load_si,move,move,store,store,pstore,move,load,pload,pcload_si,gp_fpul,gp_fpul,other\")\n+  [(set_attr \"type\" \"pcload_si,move,*,load_si,move,move,store,store,pstore,move,load,pload,pcload_si,gp_fpul,gp_fpul,nil\")\n    (set_attr \"length\" \"*,*,*,*,*,*,*,*,*,*,*,*,*,*,*,0\")])\n \n (define_insn \"movsi_i_lowpart\"\n@@ -2118,12 +2119,15 @@\n \tsts\t%1,%0\"\n   [(set_attr \"type\" \"move,move,pcload,load,store,move,move\")])\n \n+;; We may not split the ry/yr/XX alternatives to movsi_ie, since\n+;; update_flow_info would not know where to put REG_EQUAL notes\n+;; when the destination changes mode.\n (define_insn \"movsf_ie\"\n   [(set (match_operand:SF 0 \"general_movdst_operand\"\n-\t \"=f,r,f,f,fy,f,m,r,r,m,f,y,y,rf,ry\")\n+\t \"=f,r,f,f,fy,f,m,r,r,m,f,y,y,rf,r,y,y\")\n \t(match_operand:SF 1 \"general_movsrc_operand\"\n-\t  \"f,r,G,H,FQ,m,f,FQ,m,r,y,f,>,fr,yr\"))\n-   (clobber (match_scratch:SI 2 \"=X,X,X,X,&z,X,X,X,X,X,X,X,X,y,X\"))]\n+\t  \"f,r,G,H,FQ,m,f,FQ,m,r,y,f,>,fr,y,r,y\"))\n+   (clobber (match_scratch:SI 2 \"=X,X,X,X,&z,X,X,X,X,X,X,X,X,y,X,X,X\"))]\n \n   \"TARGET_SH3E\n    && (arith_reg_operand (operands[0], SFmode)\n@@ -2143,23 +2147,11 @@\n \tflds\t%1,fpul\n \tlds.l\t%1,%0\n \t#\n-\t#\"\n-  [(set_attr \"type\" \"fmove,move,fmove,fmove,pcload,load,store,pcload,load,store,fmove,fmove,load,*,*\")\n-   (set_attr \"length\" \"*,*,*,*,4,*,*,*,*,*,2,2,2,*,*\")])\n-\n-(define_split\n-  [(set (match_operand:SF 0 \"register_operand\" \"ry\")\n-\t(match_operand:SF 1 \"register_operand\" \"ry\"))\n-   (clobber (match_scratch:SI 2 \"X\"))]\n-  \"reload_completed\n-   && true_regnum (operands[0]) < FIRST_FP_REG\n-   && true_regnum (operands[1]) < FIRST_FP_REG\"\n-  [(set (match_dup 0) (match_dup 1))]\n-  \"\n-{\n-  operands[0] = gen_rtx (REG, SImode, true_regnum (operands[0]));\n-  operands[1] = gen_rtx (REG, SImode, true_regnum (operands[1]));\n-}\")\n+\tsts\t%1,%0\n+\tlds\t%1,%0\n+\t! move optimized away\"\n+  [(set_attr \"type\" \"fmove,move,fmove,fmove,pcload,load,store,pcload,load,store,fmove,fmove,load,*,gp_fpul,gp_fpul,nil\")\n+   (set_attr \"length\" \"*,*,*,*,4,*,*,*,*,*,2,2,2,*,2,2,0\")])\n \n (define_split\n   [(set (match_operand:SF 0 \"register_operand\" \"\")"}]}