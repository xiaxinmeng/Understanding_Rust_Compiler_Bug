{"sha": "f47e40847d4c6dcbecf637540f0f47aaebb75982", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjQ3ZTQwODQ3ZDRjNmRjYmVjZjYzNzU0MGYwZjQ3YWFlYmI3NTk4Mg==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2000-07-25T20:43:05Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2000-07-25T20:43:05Z"}, "message": "* gcc.dg/cpp/tr-warn3.c: New test.\n\nFrom-SVN: r35255", "tree": {"sha": "5f75b2a8044261d134b79224be21a80ba8697902", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5f75b2a8044261d134b79224be21a80ba8697902"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f47e40847d4c6dcbecf637540f0f47aaebb75982", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f47e40847d4c6dcbecf637540f0f47aaebb75982", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f47e40847d4c6dcbecf637540f0f47aaebb75982", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f47e40847d4c6dcbecf637540f0f47aaebb75982/comments", "author": null, "committer": null, "parents": [{"sha": "8b27e9efa02ba012f2dfeb04e88204f38e8517fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b27e9efa02ba012f2dfeb04e88204f38e8517fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b27e9efa02ba012f2dfeb04e88204f38e8517fd"}], "stats": {"total": 65, "additions": 65, "deletions": 0}, "files": [{"sha": "e1c0fda0482fdd0b669dde698b3932d6cb908675", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f47e40847d4c6dcbecf637540f0f47aaebb75982/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f47e40847d4c6dcbecf637540f0f47aaebb75982/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f47e40847d4c6dcbecf637540f0f47aaebb75982", "patch": "@@ -1,3 +1,7 @@\n+2000-07-25  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* gcc.dg/cpp/tr-warn3.c: New test.\n+\n 2000-07-25  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* g++.old-deja/g++.ext/implicit1.C: Remove."}, {"sha": "4819d2f3bd38bf4c4e59259806d9facb4548d342", "filename": "gcc/testsuite/gcc.dg/cpp/tr-warn3.c", "status": "added", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f47e40847d4c6dcbecf637540f0f47aaebb75982/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Ftr-warn3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f47e40847d4c6dcbecf637540f0f47aaebb75982/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Ftr-warn3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Ftr-warn3.c?ref=f47e40847d4c6dcbecf637540f0f47aaebb75982", "patch": "@@ -0,0 +1,61 @@\n+/* Test for warnings about nontraditional directives inside the unused\n+   clauses of #if statements.  Extensions do _not_ receive pedantic\n+   warnings inside unused clauses because they are often hidden this\n+   way on purpose.  However they do still require indentation for K&R.  */\n+/* { dg-do preprocess } */\n+/* { dg-options \"-pedantic -Wtraditional -fno-show-column\" } */\n+\n+#if 1\n+\n+/* Block 1: K+R directives should have the # indented to warn.  */\n+\n+#define foo bar\t\t/* { dg-bogus \"indented\" \"^#kandr\"     } */\n+# define foo bar\t/* { dg-bogus \"indented\" \"^# kandr\"    } */\n+ #define foo bar\t/* { dg-warning \"indented\" \"^ #kandr\"  } */\n+ # define foo bar\t/* { dg-warning \"indented\" \"^ # kandr\" } */\n+\n+/* Block 2: C89 directives should not have the # indented to warn.  */\n+\n+#pragma whatever\t/* { dg-warning \"indented\" \"^#c89\"     } */\n+# pragma whatever\t/* { dg-warning \"indented\" \"^# c89\"    } */\n+ #pragma whatever\t/* { dg-bogus \"indented\" \"^ #c89\"      } */\n+ # pragma whatever\t/* { dg-bogus \"indented\" \"^ # c89\"     } */\n+\n+/* Block 3: Extensions should not have the # indented to warn, _and_\n+   they should get a -pedantic warning. */\n+\n+#assert foo(bar)\t/* { dg-warning \"indented\" \"^#ext\"    } */\n+# assert bar(baz)\t/* { dg-warning \"indented\" \"^# ext\"   } */\n+ #assert baz(quux)\t/* { dg-bogus \"indented\" \"^ #ext\"     } */\n+ # assert quux(weeble)\t/* { dg-bogus \"indented\" \"^ # ext\"    } */\n+\n+#else\n+\n+/* Block 1: K+R directives should have the # indented to warn.  */\n+\n+#undef foo bar\t\t/* { dg-bogus \"indented\" \"^#kandr\"     } */\n+# undef foo bar\t\t/* { dg-bogus \"indented\" \"^# kandr\"    } */\n+ #undef foo bar\t\t/* { dg-warning \"indented\" \"^ #kandr\"  } */\n+ # undef foo bar\t/* { dg-warning \"indented\" \"^ # kandr\" } */\n+\n+/* Block 2: C89 directives should not have the # indented to warn.  */\n+\n+#error whatever\t\t/* { dg-warning \"indented\" \"^#c89\"     } */\n+# error whatever\t/* { dg-warning \"indented\" \"^# c89\"    } */\n+ #error whatever\t/* { dg-bogus \"indented\" \"^ #c89\"      } */\n+ # error whatever\t/* { dg-bogus \"indented\" \"^ # c89\"     } */\n+\n+/* Block 3: Extensions should not have the # indented to warn, and\n+   they should _not_ get a -pedantic warning. */\n+\n+#unassert foo(bar)\t\t/* { dg-warning \"indented\" \"^#ext\"    } */\n+# unassert bar(baz)\t\t/* { dg-warning \"indented\" \"^# ext\"   } */\n+ #unassert baz(quux)\t\t/* { dg-bogus \"indented\" \"^ #ext\"     } */\n+ # unassert quux(weeble)\t/* { dg-bogus \"indented\" \"^ # ext\"    } */\n+\n+#endif\n+\n+/* { dg-warning \"ISO C does not\" \"extension warning\" { target *-*-* } 27 } */\n+/* { dg-warning \"ISO C does not\" \"extension warning\" { target *-*-* } 28 } */\n+/* { dg-warning \"ISO C does not\" \"extension warning\" { target *-*-* } 29 } */\n+/* { dg-warning \"ISO C does not\" \"extension warning\" { target *-*-* } 30 } */"}]}