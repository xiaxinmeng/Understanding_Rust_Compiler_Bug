{"sha": "956af06945bcc89d5c7a7382d3e47c9090a98d4c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTU2YWYwNjk0NWJjYzg5ZDVjN2E3MzgyZDNlNDdjOTA5MGE5OGQ0Yw==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-08-04T23:18:30Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-08-04T23:18:30Z"}, "message": "Comment change.\n\nFrom-SVN: r5072", "tree": {"sha": "e13404bba4cdc7a748173296d9bd75e3e57b0155", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e13404bba4cdc7a748173296d9bd75e3e57b0155"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/956af06945bcc89d5c7a7382d3e47c9090a98d4c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/956af06945bcc89d5c7a7382d3e47c9090a98d4c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/956af06945bcc89d5c7a7382d3e47c9090a98d4c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/956af06945bcc89d5c7a7382d3e47c9090a98d4c/comments", "author": null, "committer": null, "parents": [{"sha": "20748cab1fc34df007924fd42bc7740e418a7624", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20748cab1fc34df007924fd42bc7740e418a7624", "html_url": "https://github.com/Rust-GCC/gccrs/commit/20748cab1fc34df007924fd42bc7740e418a7624"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "92fa7af5f8516a1b730f4806b72006409e44c6f7", "filename": "gcc/tree.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956af06945bcc89d5c7a7382d3e47c9090a98d4c/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956af06945bcc89d5c7a7382d3e47c9090a98d4c/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=956af06945bcc89d5c7a7382d3e47c9090a98d4c", "patch": "@@ -363,7 +363,7 @@ restore_tree_status (p)\n /* Start allocating on the temporary (per function) obstack.\n    This is done in start_function before parsing the function body,\n    and before each initialization at top level, and to go back\n-   to temporary allocation after doing end_temporary_allocation.  */\n+   to temporary allocation after doing permanent_allocation.  */\n \n void\n temporary_allocation ()"}]}