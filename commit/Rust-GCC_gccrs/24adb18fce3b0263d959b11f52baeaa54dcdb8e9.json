{"sha": "24adb18fce3b0263d959b11f52baeaa54dcdb8e9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjRhZGIxOGZjZTNiMDI2M2Q5NTliMTFmNTJiYWVhYTU0ZGNkYjhlOQ==", "commit": {"author": {"name": "Ira Rosen", "email": "irar@il.ibm.com", "date": "2009-05-28T09:02:53Z"}, "committer": {"name": "Ira Rosen", "email": "irar@gcc.gnu.org", "date": "2009-05-28T09:02:53Z"}, "message": "re PR tree-optimization/40254 (SPEC2006 403.gcc miscompares)\n\n\n\tPR tree-optimization/40254\n\t* tree-data-ref.c (dr_analyze_innermost): Take POFFSET into account\n\tin analysis of basic blocks.\n\nFrom-SVN: r147945", "tree": {"sha": "a99db9e2ac7ceb41f1fe537971ad4d7160246508", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a99db9e2ac7ceb41f1fe537971ad4d7160246508"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/24adb18fce3b0263d959b11f52baeaa54dcdb8e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24adb18fce3b0263d959b11f52baeaa54dcdb8e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/24adb18fce3b0263d959b11f52baeaa54dcdb8e9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24adb18fce3b0263d959b11f52baeaa54dcdb8e9/comments", "author": {"login": "irar2", "id": 16818592, "node_id": "MDQ6VXNlcjE2ODE4NTky", "avatar_url": "https://avatars.githubusercontent.com/u/16818592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/irar2", "html_url": "https://github.com/irar2", "followers_url": "https://api.github.com/users/irar2/followers", "following_url": "https://api.github.com/users/irar2/following{/other_user}", "gists_url": "https://api.github.com/users/irar2/gists{/gist_id}", "starred_url": "https://api.github.com/users/irar2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/irar2/subscriptions", "organizations_url": "https://api.github.com/users/irar2/orgs", "repos_url": "https://api.github.com/users/irar2/repos", "events_url": "https://api.github.com/users/irar2/events{/privacy}", "received_events_url": "https://api.github.com/users/irar2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2c5bfdf70b616ace5c3f5322299ccc9729e08384", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c5bfdf70b616ace5c3f5322299ccc9729e08384", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c5bfdf70b616ace5c3f5322299ccc9729e08384"}], "stats": {"total": 71, "additions": 65, "deletions": 6}, "files": [{"sha": "b0c880386f4aca681bd07f4793b40c7abaf35213", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24adb18fce3b0263d959b11f52baeaa54dcdb8e9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24adb18fce3b0263d959b11f52baeaa54dcdb8e9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=24adb18fce3b0263d959b11f52baeaa54dcdb8e9", "patch": "@@ -1,3 +1,9 @@\n+2009-05-28  Ira Rosen  <irar@il.ibm.com>\n+\n+\tPR tree-optimization/40254\n+\t* tree-data-ref.c (dr_analyze_innermost): Take POFFSET into account\n+\tin analysis of basic blocks.\n+\n 2009-05-28  Adam Nemet  <anemet@caviumnetworks.com>\n \n \tPR middle-end/33699"}, {"sha": "ff73c366f2f527c058342f6b18622636e7221baa", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24adb18fce3b0263d959b11f52baeaa54dcdb8e9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24adb18fce3b0263d959b11f52baeaa54dcdb8e9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=24adb18fce3b0263d959b11f52baeaa54dcdb8e9", "patch": "@@ -1,3 +1,8 @@\n+2009-05-28  Ira Rosen  <irar@il.ibm.com>\n+\n+\tPR tree-optimization/40254\n+\t* gcc.dg/vect/pr40254.c: New test.\n+\n 2009-05-28  Adam Nemet  <anemet@caviumnetworks.com>\n \n \tPR middle-end/33699"}, {"sha": "b890a4493120de293ebcdeadd4191363303292b9", "filename": "gcc/testsuite/gcc.dg/vect/pr40254.c", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24adb18fce3b0263d959b11f52baeaa54dcdb8e9/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr40254.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24adb18fce3b0263d959b11f52baeaa54dcdb8e9/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr40254.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr40254.c?ref=24adb18fce3b0263d959b11f52baeaa54dcdb8e9", "patch": "@@ -0,0 +1,39 @@\n+#include <stdlib.h>\n+#include <stdarg.h>\n+#include \"tree-vect.h\"\n+\n+struct s\n+{\n+  int *x;\n+  int x1;\n+  int x2;\n+  int x3;\n+  int *y;\n+};\n+\n+struct s arr[64] __attribute__ ((__aligned__(__BIGGEST_ALIGNMENT__)));\n+\n+__attribute__ ((noinline)) void\n+foo (int i, int *in_x, int *in_y)\n+{\n+  arr[i].x = in_x;\n+  arr[i].y = in_y;\n+}\n+\n+int\n+main (void)\n+{\n+  int a, b;\n+\n+  check_vect ();\n+\n+  foo (5, &a, &b);\n+\n+  if (arr[5].x != &a || arr[5].y != &b)\n+    abort ();\n+\n+  return 0;\n+}\n+\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */\n+"}, {"sha": "2181f469ca036730b07e34bdd68b470d3221394d", "filename": "gcc/tree-data-ref.c", "status": "modified", "additions": 15, "deletions": 6, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24adb18fce3b0263d959b11f52baeaa54dcdb8e9/gcc%2Ftree-data-ref.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24adb18fce3b0263d959b11f52baeaa54dcdb8e9/gcc%2Ftree-data-ref.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-data-ref.c?ref=24adb18fce3b0263d959b11f52baeaa54dcdb8e9", "patch": "@@ -718,17 +718,26 @@ dr_analyze_innermost (struct data_reference *dr)\n       base_iv.no_overflow = true;\n     }\n \n-  if (!poffset || !in_loop)\n+  if (!poffset)\n     {\n       offset_iv.base = ssize_int (0);\n       offset_iv.step = ssize_int (0);\n     }\n-  else if (!simple_iv (loop, loop_containing_stmt (stmt),\n-\t\t       poffset, &offset_iv, false))\n+  else\n     {\n-      if (dump_file && (dump_flags & TDF_DETAILS))\n-\tfprintf (dump_file, \"failed: evolution of offset is not affine.\\n\");\n-      return false;\n+      if (!in_loop)\n+        {\n+          offset_iv.base = poffset;\n+          offset_iv.step = ssize_int (0);\n+        }\n+      else if (!simple_iv (loop, loop_containing_stmt (stmt),\n+                           poffset, &offset_iv, false))\n+        {\n+          if (dump_file && (dump_flags & TDF_DETAILS))\n+            fprintf (dump_file, \"failed: evolution of offset is not\"\n+                                \" affine.\\n\");\n+          return false;\n+        }\n     }\n \n   init = ssize_int (pbitpos / BITS_PER_UNIT);"}]}