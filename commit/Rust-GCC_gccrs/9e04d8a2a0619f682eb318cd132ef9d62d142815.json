{"sha": "9e04d8a2a0619f682eb318cd132ef9d62d142815", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWUwNGQ4YTJhMDYxOWY2ODJlYjMxOGNkMTMyZWY5ZDYyZDE0MjgxNQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2012-12-06T14:45:11Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2012-12-06T14:45:11Z"}, "message": "re PR c++/54947 ([C++11] lambda cannot capture-by-copy inside braced-init-list)\n\n\tPR c++/54947\n\t* parser.c (cp_parser_initializer_list): Don't require an\n\texpression in [] to be constant until we know it's a C99\n\tdesignator.\n\nFrom-SVN: r194256", "tree": {"sha": "0c64c0a410f08e53dfe221b0eb67b889bc38d035", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0c64c0a410f08e53dfe221b0eb67b889bc38d035"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9e04d8a2a0619f682eb318cd132ef9d62d142815", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e04d8a2a0619f682eb318cd132ef9d62d142815", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e04d8a2a0619f682eb318cd132ef9d62d142815", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e04d8a2a0619f682eb318cd132ef9d62d142815/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "695edbac5c1b02ac162a301d6886dc073b0361fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/695edbac5c1b02ac162a301d6886dc073b0361fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/695edbac5c1b02ac162a301d6886dc073b0361fb"}], "stats": {"total": 37, "additions": 36, "deletions": 1}, "files": [{"sha": "96a88b92b197662e14296a8dcacea1c1ab838510", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e04d8a2a0619f682eb318cd132ef9d62d142815/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e04d8a2a0619f682eb318cd132ef9d62d142815/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=9e04d8a2a0619f682eb318cd132ef9d62d142815", "patch": "@@ -1,5 +1,10 @@\n 2012-12-06  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/54947\n+\t* parser.c (cp_parser_initializer_list): Don't require an\n+\texpression in [] to be constant until we know it's a C99\n+\tdesignator.\n+\n \tPR c++/55015\n \tPR c++/53821\n \t* semantics.c (maybe_add_lambda_conv_op): Revert earlier change."}, {"sha": "a010f1fb30588e813657cf7f6ef99ae2fb3aaba8", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e04d8a2a0619f682eb318cd132ef9d62d142815/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e04d8a2a0619f682eb318cd132ef9d62d142815/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=9e04d8a2a0619f682eb318cd132ef9d62d142815", "patch": "@@ -17923,11 +17923,14 @@ cp_parser_initializer_list (cp_parser* parser, bool* non_constant_p)\n \t  /* In C++11, [ could start a lambda-introducer.  */\n \t  cp_parser_parse_tentatively (parser);\n \t  cp_lexer_consume_token (parser->lexer);\n-\t  designator = cp_parser_constant_expression (parser, false, NULL);\n+\t  bool non_const = false;\n+\t  designator = cp_parser_constant_expression (parser, true, &non_const);\n \t  cp_parser_require (parser, CPP_CLOSE_SQUARE, RT_CLOSE_SQUARE);\n \t  cp_parser_require (parser, CPP_EQ, RT_EQ);\n \t  if (!cp_parser_parse_definitely (parser))\n \t    designator = NULL_TREE;\n+\t  else if (non_const)\n+\t    require_potential_rvalue_constant_expression (designator);\n \t}\n       else\n \tdesignator = NULL_TREE;"}, {"sha": "daaa33938ad864254a7855f5e7731e0bf590b2ce", "filename": "gcc/testsuite/g++.dg/cpp0x/lambda/lambda-initlist2.C", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e04d8a2a0619f682eb318cd132ef9d62d142815/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-initlist2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e04d8a2a0619f682eb318cd132ef9d62d142815/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-initlist2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-initlist2.C?ref=9e04d8a2a0619f682eb318cd132ef9d62d142815", "patch": "@@ -0,0 +1,27 @@\n+// PR c++/54947\n+// { dg-options -std=gnu++11 }\n+\n+struct X\n+{\n+  template<typename L>\n+    X(L)\n+    { }\n+};\n+\n+template<typename A>\n+  void\n+  test()\n+  {\n+    int i = 0;\n+\n+    A a_ok_1( [=] { return i; } );  // OK\n+    A a_ok_2( [i] { return i; } );  // OK\n+\n+    A a_err_1{ [i] { return i; } };  // error\n+    A a_err_2{ [=] { return i; } };  // error\n+  }\n+\n+int main()\n+{\n+  test<X>();\n+}"}]}