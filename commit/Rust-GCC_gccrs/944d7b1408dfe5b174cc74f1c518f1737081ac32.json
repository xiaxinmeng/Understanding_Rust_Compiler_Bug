{"sha": "944d7b1408dfe5b174cc74f1c518f1737081ac32", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTQ0ZDdiMTQwOGRmZTViMTc0Y2M3NGYxYzUxOGYxNzM3MDgxYWMzMg==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-09-16T17:35:50Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-09-16T17:35:50Z"}, "message": "(find_reloads): For PLUS operand, call find_reloads_toplev.\n\nFrom-SVN: r5342", "tree": {"sha": "c2e208278ddf346e9bda95fc5ccd412fbafdaf1a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c2e208278ddf346e9bda95fc5ccd412fbafdaf1a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/944d7b1408dfe5b174cc74f1c518f1737081ac32", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/944d7b1408dfe5b174cc74f1c518f1737081ac32", "html_url": "https://github.com/Rust-GCC/gccrs/commit/944d7b1408dfe5b174cc74f1c518f1737081ac32", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/944d7b1408dfe5b174cc74f1c518f1737081ac32/comments", "author": null, "committer": null, "parents": [{"sha": "fefc83ce1c3e63af0807a98490779d599c408f39", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fefc83ce1c3e63af0807a98490779d599c408f39", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fefc83ce1c3e63af0807a98490779d599c408f39"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "6b91e0cb53ac7eb0f5e6694dac3a8d5dc0b991e8", "filename": "gcc/reload.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/944d7b1408dfe5b174cc74f1c518f1737081ac32/gcc%2Freload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/944d7b1408dfe5b174cc74f1c518f1737081ac32/gcc%2Freload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload.c?ref=944d7b1408dfe5b174cc74f1c518f1737081ac32", "patch": "@@ -2438,6 +2438,12 @@ find_reloads (insn, replace, ind_levels, live_known, reload_reg_p)\n \t\t\t\t ind_levels,\n \t\t\t\t set != 0\n \t\t\t\t && &SET_DEST (set) == recog_operand_loc[i]);\n+      else if (code == PLUS)\n+\t/* We can get a PLUS as an \"operand\" as a result of\n+\t   register elimination.  See eliminate_regs and gen_input_reload.  */\n+\tsubsted_operand[i] = recog_operand[i] = *recog_operand_loc[i]\n+\t  = find_reloads_toplev (recog_operand[i], i, address_type[i],\n+\t\t\t\t ind_levels, 0);\n       else if (code == REG)\n \t{\n \t  /* This is equivalent to calling find_reloads_toplev."}]}