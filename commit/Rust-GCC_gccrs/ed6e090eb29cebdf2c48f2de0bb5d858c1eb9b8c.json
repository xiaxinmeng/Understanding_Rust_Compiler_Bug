{"sha": "ed6e090eb29cebdf2c48f2de0bb5d858c1eb9b8c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWQ2ZTA5MGViMjljZWJkZjJjNDhmMmRlMGJiNWQ4NThjMWViOWI4Yw==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2010-09-03T14:40:36Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2010-09-03T14:40:36Z"}, "message": "Add gcc.dg/pr45506.c.\n\n2010-09-03  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR tree-optimization/45506\n\t* gcc.dg/pr45506.c: New.\n\nFrom-SVN: r163821", "tree": {"sha": "349fc6876e900dc2f94e24c9ca1e7b0ce7b2bcee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/349fc6876e900dc2f94e24c9ca1e7b0ce7b2bcee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ed6e090eb29cebdf2c48f2de0bb5d858c1eb9b8c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed6e090eb29cebdf2c48f2de0bb5d858c1eb9b8c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed6e090eb29cebdf2c48f2de0bb5d858c1eb9b8c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed6e090eb29cebdf2c48f2de0bb5d858c1eb9b8c/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4159fb8dd2dfd0934509a832f90b6122bfdba776", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4159fb8dd2dfd0934509a832f90b6122bfdba776", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4159fb8dd2dfd0934509a832f90b6122bfdba776"}], "stats": {"total": 52, "additions": 52, "deletions": 0}, "files": [{"sha": "677202011b9c5be4cebe9c56c9a6d8394c0cf65a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed6e090eb29cebdf2c48f2de0bb5d858c1eb9b8c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed6e090eb29cebdf2c48f2de0bb5d858c1eb9b8c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ed6e090eb29cebdf2c48f2de0bb5d858c1eb9b8c", "patch": "@@ -1,3 +1,8 @@\n+2010-09-03  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR tree-optimization/45506\n+\t* gcc.dg/pr45506.c: New.\n+\n 2010-09-03  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/45476"}, {"sha": "e934dc93cce26375fec0e19815240e2e8934131e", "filename": "gcc/testsuite/gcc.dg/pr45506.c", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed6e090eb29cebdf2c48f2de0bb5d858c1eb9b8c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr45506.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed6e090eb29cebdf2c48f2de0bb5d858c1eb9b8c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr45506.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr45506.c?ref=ed6e090eb29cebdf2c48f2de0bb5d858c1eb9b8c", "patch": "@@ -0,0 +1,47 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target ilp32 } */\n+/* { dg-options \"-g -O -w\" } */\n+\n+typedef unsigned _GCC_ATTR_ALIGN_u32t;\n+typedef _GCC_ATTR_ALIGN_u32t _Uint32t __attribute__((__aligned__(4)));\n+typedef int _Intptrt __attribute__((__mode__(__pointer__)));\n+typedef unsigned int _Uintptrt __attribute__((__mode__(__pointer__)));\n+typedef _Intptrt ptrdiff_t;\n+typedef _Uintptrt uintptr_t;\n+typedef _Uint32t Elf32_Word;\n+typedef struct list_head list_head_t;\n+\n+struct list_head {\n+  list_head_t *next;\n+};\n+\n+struct object { };\n+\n+struct objlist {\n+  struct object *object;\n+};\n+\n+static uintptr_t ldd(void *frame) __attribute__((__used__));\n+static list_head_t *_dl_all_objects_ptr;\n+static void fini_array(struct object *const obj) {\n+  if ((dynvec(obj,(unsigned)26)) != ((Elf32_Word)-1)) {\n+    unsigned i;\n+    const unsigned funcs = (dynvec(obj,(unsigned)28)) / 4;\n+    const Elf32_Word fa = (dynvec(obj,(unsigned)26));\n+    const int *const p = relative_relocp(obj);\n+    for (i = (funcs ? (funcs - 1) : 0U); i != 0U; i--) {\n+      void (*const func)(void) = (void *) p[i];\n+      (*func)();\n+    }\n+  }\n+}\n+static void _do_exit_fini(void) {\n+  const struct objlist *o;\n+  for (((o)) = ((void *)(((list_head_t *)(_dl_all_objects_ptr))->next));\n+       !((((o))) == ((void *)((list_head_t *)(_dl_all_objects_ptr))));\n+       ((o)) = ((void *)(((list_head_t *)((o)))->next)))\n+    fini_array (o->object);\n+}\n+static uintptr_t ldd (void *frame) {\n+  atexit(_do_exit_fini);\n+}"}]}