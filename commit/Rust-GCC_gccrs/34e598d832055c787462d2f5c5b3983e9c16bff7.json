{"sha": "34e598d832055c787462d2f5c5b3983e9c16bff7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzRlNTk4ZDgzMjA1NWM3ODc0NjJkMmY1YzViMzk4M2U5YzE2YmZmNw==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2006-06-14T13:56:22Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2006-06-14T13:56:22Z"}, "message": "re PR java/28024 (libjava build failure on Solaris 2.8 (sun4u))\n\n\tPR java/28024:\n\t* aclocal.m4, configure: Rebuilt.\n\t* m4/acinclude.m4 (REGEN_WITH_JAY): Use backquote, not $(...).\n\t* configure.ac (QT_INCLUDE_DIR): Use backquote, not $(...).\n\nFrom-SVN: r114639", "tree": {"sha": "a64814404a7ebe128349e99697ff5458ce2e0089", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a64814404a7ebe128349e99697ff5458ce2e0089"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/34e598d832055c787462d2f5c5b3983e9c16bff7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34e598d832055c787462d2f5c5b3983e9c16bff7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/34e598d832055c787462d2f5c5b3983e9c16bff7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34e598d832055c787462d2f5c5b3983e9c16bff7/comments", "author": null, "committer": null, "parents": [{"sha": "ba1304a3dce495313b7c6a201fded9d0acd8e560", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba1304a3dce495313b7c6a201fded9d0acd8e560", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba1304a3dce495313b7c6a201fded9d0acd8e560"}], "stats": {"total": 54, "additions": 21, "deletions": 33}, "files": [{"sha": "7304d663d72e94e97d017e3e7705621c2cd248f9", "filename": "libjava/classpath/ChangeLog.gcj", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34e598d832055c787462d2f5c5b3983e9c16bff7/libjava%2Fclasspath%2FChangeLog.gcj", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34e598d832055c787462d2f5c5b3983e9c16bff7/libjava%2Fclasspath%2FChangeLog.gcj", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2FChangeLog.gcj?ref=34e598d832055c787462d2f5c5b3983e9c16bff7", "patch": "@@ -1,3 +1,10 @@\n+2006-06-14  Tom Tromey  <tromey@redhat.com>\n+\n+\tPR java/28024:\n+\t* aclocal.m4, configure: Rebuilt.\n+\t* m4/acinclude.m4 (REGEN_WITH_JAY): Use backquote, not $(...).\n+\t* configure.ac (QT_INCLUDE_DIR): Use backquote, not $(...).\n+\n 2006-06-09  Tom Tromey  <tromey@redhat.com>\n \n \tPR classpath/23863:"}, {"sha": "c6085b3d8934be99fa51f4a14632be6c5d84d15c", "filename": "libjava/classpath/aclocal.m4", "status": "modified", "additions": 2, "deletions": 21, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34e598d832055c787462d2f5c5b3983e9c16bff7/libjava%2Fclasspath%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34e598d832055c787462d2f5c5b3983e9c16bff7/libjava%2Fclasspath%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Faclocal.m4?ref=34e598d832055c787462d2f5c5b3983e9c16bff7", "patch": "@@ -468,27 +468,6 @@ AC_DEFUN([AM_PROG_INSTALL_SH],\n install_sh=${install_sh-\"$am_aux_dir/install-sh\"}\n AC_SUBST(install_sh)])\n \n-# Copyright (C) 2003, 2005  Free Software Foundation, Inc.\n-#\n-# This file is free software; the Free Software Foundation\n-# gives unlimited permission to copy and/or distribute it,\n-# with or without modifications, as long as this notice is preserved.\n-\n-# serial 2\n-\n-# Check whether the underlying file-system supports filenames\n-# with a leading dot.  For instance MS-DOS doesn't.\n-AC_DEFUN([AM_SET_LEADING_DOT],\n-[rm -rf .tst 2>/dev/null\n-mkdir .tst 2>/dev/null\n-if test -d .tst; then\n-  am__leading_dot=.\n-else\n-  am__leading_dot=_\n-fi\n-rmdir .tst 2>/dev/null\n-AC_SUBST([am__leading_dot])])\n-\n # Add --enable-maintainer-mode option to configure.         -*- Autoconf -*-\n # From Jim Meyering\n \n@@ -894,6 +873,8 @@ AC_SUBST([am__tar])\n AC_SUBST([am__untar])\n ]) # _AM_PROG_TAR\n \n+m4_include([../../config/depstand.m4])\n+m4_include([../../config/lead-dot.m4])\n m4_include([../../libtool.m4])\n m4_include([m4/acattribute.m4])\n m4_include([m4/accross.m4])"}, {"sha": "cded54990b0398a35464af5ef3fe62bc1c61f931", "filename": "libjava/classpath/configure", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34e598d832055c787462d2f5c5b3983e9c16bff7/libjava%2Fclasspath%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34e598d832055c787462d2f5c5b3983e9c16bff7/libjava%2Fclasspath%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fconfigure?ref=34e598d832055c787462d2f5c5b3983e9c16bff7", "patch": "@@ -10007,15 +10007,15 @@ ac_x_header_dirs='\n /usr/openwin/share/include'\n \n if test \"$ac_x_includes\" = no; then\n-  # Guess where to find include files, by looking for Xlib.h.\n+  # Guess where to find include files, by looking for Intrinsic.h.\n   # First, try using that file with no special directory specified.\n   cat >conftest.$ac_ext <<_ACEOF\n /* confdefs.h.  */\n _ACEOF\n cat confdefs.h >>conftest.$ac_ext\n cat >>conftest.$ac_ext <<_ACEOF\n /* end confdefs.h.  */\n-#include <X11/Xlib.h>\n+#include <X11/Intrinsic.h>\n _ACEOF\n if { (eval echo \"$as_me:$LINENO: \\\"$ac_cpp conftest.$ac_ext\\\"\") >&5\n   (eval $ac_cpp conftest.$ac_ext) 2>conftest.er1\n@@ -10042,7 +10042,7 @@ else\n sed 's/^/| /' conftest.$ac_ext >&5\n \n   for ac_dir in $ac_x_header_dirs; do\n-  if test -r \"$ac_dir/X11/Xlib.h\"; then\n+  if test -r \"$ac_dir/X11/Intrinsic.h\"; then\n     ac_x_includes=$ac_dir\n     break\n   fi\n@@ -10063,11 +10063,11 @@ _ACEOF\n cat confdefs.h >>conftest.$ac_ext\n cat >>conftest.$ac_ext <<_ACEOF\n /* end confdefs.h.  */\n-#include <X11/Xlib.h>\n+#include <X11/Intrinsic.h>\n int\n main ()\n {\n-XrmInitialize ()\n+XtMalloc (0)\n   ;\n   return 0;\n }\n@@ -11929,7 +11929,7 @@ echo \"${ECHO_T}$QT_LIBS\" >&6\n   fi\n \n     if test \"x$HAVE_QT4\" = \"xyes\"; then\n-                  QT_INCLUDE_DIR=$($PKG_CONFIG --variable=includedir QtGui)\n+                  QT_INCLUDE_DIR=`$PKG_CONFIG --variable=includedir QtGui`\n       EXTRA_QT_INCLUDE_DIR=\"$QT_INCLUDE_DIR/Qt\"\n       as_ac_File=`echo \"ac_cv_file_$QT_INCLUDE_DIR/QWidget\" | $as_tr_sh`\n echo \"$as_me:$LINENO: checking for $QT_INCLUDE_DIR/QWidget\" >&5\n@@ -15159,7 +15159,7 @@ echo \"$as_me: error: \\\"jay executable not found\\\"\" >&2;}\n    { (exit 1); exit 1; }; };\n       fi\n     else\n-      JAY_DIR_PATH=$(dirname \"${withval}\")\n+      JAY_DIR_PATH=`dirname \"${withval}\"`\n       JAY=\"${withval}\"\n \n     fi\n@@ -15185,8 +15185,8 @@ echo \"${ECHO_T}`eval echo '${'$as_ac_File'}'`\" >&6\n if test `eval echo '${'$as_ac_File'}'` = yes; then\n   :\n else\n-  { { echo \"$as_me:$LINENO: error: \\\"Expected skeleton file in $(dirname ${withval})\\\"\" >&5\n-echo \"$as_me: error: \\\"Expected skeleton file in $(dirname ${withval})\\\"\" >&2;}\n+  { { echo \"$as_me:$LINENO: error: \\\"Expected skeleton file in \\`dirname ${withval}\\`\\\"\" >&5\n+echo \"$as_me: error: \\\"Expected skeleton file in \\`dirname ${withval}\\`\\\"\" >&2;}\n    { (exit 1); exit 1; }; }\n fi\n "}, {"sha": "bd3ba21998ec17b54140dc086bcc40aecae38691", "filename": "libjava/classpath/configure.ac", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34e598d832055c787462d2f5c5b3983e9c16bff7/libjava%2Fclasspath%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34e598d832055c787462d2f5c5b3983e9c16bff7/libjava%2Fclasspath%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fconfigure.ac?ref=34e598d832055c787462d2f5c5b3983e9c16bff7", "patch": "@@ -438,7 +438,7 @@ if test \"x${COMPILE_JNI}\" = xyes; then\n     if test \"x$HAVE_QT4\" = \"xyes\"; then\n       dnl Check needed because in some cases the QtGui includedir\n       dnl doesn't contain the subsystem dir.\n-      QT_INCLUDE_DIR=$($PKG_CONFIG --variable=includedir QtGui)\n+      QT_INCLUDE_DIR=`$PKG_CONFIG --variable=includedir QtGui`\n       EXTRA_QT_INCLUDE_DIR=\"$QT_INCLUDE_DIR/Qt\"\n       AC_CHECK_FILE([$QT_INCLUDE_DIR/QWidget],\n       AC_MSG_NOTICE([No extra QT_INCLUDE_DIR needed]),"}, {"sha": "ead0090b4ba3fbfb0a6983754285fe850524c58a", "filename": "libjava/classpath/m4/acinclude.m4", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34e598d832055c787462d2f5c5b3983e9c16bff7/libjava%2Fclasspath%2Fm4%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34e598d832055c787462d2f5c5b3983e9c16bff7/libjava%2Fclasspath%2Fm4%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fm4%2Facinclude.m4?ref=34e598d832055c787462d2f5c5b3983e9c16bff7", "patch": "@@ -409,13 +409,13 @@ AC_DEFUN([REGEN_WITH_JAY],\n         AC_MSG_ERROR(\"jay executable not found\");\n       fi\n     else\n-      JAY_DIR_PATH=$(dirname \"${withval}\")\n+      JAY_DIR_PATH=`dirname \"${withval}\"`\n       JAY=\"${withval}\"\n       AC_SUBST(JAY)\n     fi\n     JAY_SKELETON=\"${JAY_DIR_PATH}/skeleton\"\n     AC_CHECK_FILE(${JAY_SKELETON}, AC_SUBST(JAY_SKELETON),\n-\tAC_MSG_ERROR(\"Expected skeleton file in $(dirname ${withval})\"))\n+\tAC_MSG_ERROR(\"Expected skeleton file in `dirname ${withval}`\"))\n     JAY_FOUND=yes\n   ],\n   ["}]}