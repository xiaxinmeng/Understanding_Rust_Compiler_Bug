{"sha": "ab6e6969342d2aa3a7e59eb092767e80bd7852a4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWI2ZTY5NjkzNDJkMmFhM2E3ZTU5ZWIwOTI3NjdlODBiZDc4NTJhNA==", "commit": {"author": {"name": "George Helffrich", "email": "george@geo.titech.ac.jp", "date": "2001-09-22T10:36:11Z"}, "committer": {"name": "Toon Moene", "email": "toon@gcc.gnu.org", "date": "2001-09-22T10:36:11Z"}, "message": "strlen0.f: New test.\n\n2001-09-22  George Helffrich  <george@geo.titech.ac.jp>\n\n\t* g77.dg/strlen0.f: New test.\n\nFrom-SVN: r45748", "tree": {"sha": "d98849f4041a9bf96efa09ebbfc18356a08c45cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d98849f4041a9bf96efa09ebbfc18356a08c45cc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ab6e6969342d2aa3a7e59eb092767e80bd7852a4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab6e6969342d2aa3a7e59eb092767e80bd7852a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab6e6969342d2aa3a7e59eb092767e80bd7852a4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab6e6969342d2aa3a7e59eb092767e80bd7852a4/comments", "author": null, "committer": null, "parents": [{"sha": "2bc21ba588678796be5aa4981d6e3ebdabc1f6e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2bc21ba588678796be5aa4981d6e3ebdabc1f6e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2bc21ba588678796be5aa4981d6e3ebdabc1f6e8"}], "stats": {"total": 99, "additions": 99, "deletions": 0}, "files": [{"sha": "6e7008ecbb9037871d5c494105f6157fda45e1f0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab6e6969342d2aa3a7e59eb092767e80bd7852a4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab6e6969342d2aa3a7e59eb092767e80bd7852a4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ab6e6969342d2aa3a7e59eb092767e80bd7852a4", "patch": "@@ -1,3 +1,7 @@\n+2001-09-22  George Helffrich  <george@geo.titech.ac.jp>\n+\n+\t* g77.dg/strlen0.f: New test.\n+\n 2001-09-21  Richard Henderson  <rth@redhat.com>\n \n \t* g++.old-deja/g++.abi/ptrmem.C: Update for ia64 c++ abi."}, {"sha": "79439514726fed2f54b43b7ba25c6a02aa4150ed", "filename": "gcc/testsuite/g77.dg/strlen0.f", "status": "added", "additions": 95, "deletions": 0, "changes": 95, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab6e6969342d2aa3a7e59eb092767e80bd7852a4/gcc%2Ftestsuite%2Fg77.dg%2Fstrlen0.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab6e6969342d2aa3a7e59eb092767e80bd7852a4/gcc%2Ftestsuite%2Fg77.dg%2Fstrlen0.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.dg%2Fstrlen0.f?ref=ab6e6969342d2aa3a7e59eb092767e80bd7852a4", "patch": "@@ -0,0 +1,95 @@\n+C     Substring range checking test program, to check behavior with respect\n+C     to X3J3/90.4 paragraph 5.7.1.\n+C\n+C     Patches relax substring checking for subscript expressions in order to\n+C     simplify coding (elimination of length checks for strings passed as\n+C     parameters) and to avoid contradictory behavior of subscripted substring\n+C     expressions with respect to unsubscripted string expressions.\n+C\n+C     Key part of 5.7.1 interpretation comes down to statement that in the\n+C     substring expression,\n+C        v ( e1 : e2 )\n+C     1 <= e1 <= e2 <= len to be valid, yet the expression\n+C        v ( : )\n+C     is equivalent to\n+C        v(1:len(v))\n+C\n+C     meaning that any statement that reads\n+C        str = v // 'tail'\n+C     (where v is a string passed as a parameter) would require coding as\n+C        if (len(v) .gt. 0) then\n+C           str = v // 'tail'\n+C        else\n+C           str = 'tail'\n+C        endif\n+C     to comply with the standard specification.  Under the stricter\n+C     interpretation, functions strcat and strlat would be incorrect as\n+C     written for null values of str1 and/or str2.\n+C\n+C     This code compiles and runs without error on\n+C       SunOS 4.1.3 f77 (-C option)\n+C       SUNWspro SparcCompiler 4.2 f77 (-C option)\n+C       (and with proposed patches, gcc-2.9.2 -fbounds-check except for test 6,\n+C        which is a genuine, deliberate error - comment out to make further\n+C        tests)\n+C\n+C { dg-do run }\n+C { dg-options \"-fbounds-check\" }\n+C\n+C     G. Helffrich/Tokyo Inst. Technology Jul 24 2001\n+\n+      character str*8,strres*16,strfun*16,strcat*16,strlat*16\n+\n+      str='Hi there'\n+\n+C     Test 1 - (current+patched) two char substring result\n+      strres=strfun(str,1,2)\n+      write(*,*) 'strres is ',strres\n+\n+C     Test 2 - (current+patched) null string result\n+      strres=strfun(str,5,4)\n+      write(*,*) 'strres is ',strres\n+\n+C     Test 3 - (current+patched) null string result\n+      strres=strfun(str,8,7)\n+      write(*,*) 'strres is ',strres\n+\n+C     Test 4 - (current) error; (patched) null string result\n+      strres=strfun(str,9,8)\n+      write(*,*) 'strres is ',strres\n+\n+C     Test 5 - (current) error; (patched) null string result\n+      strres=strfun(str,1,0)\n+      write(*,*) 'strres is ',strres\n+\n+C     Test 6 - (current+patched) error\n+C     strres=strfun(str,20,20)\n+C     write(*,*) 'strres is ',strres\n+\n+C     Test 7 - (current+patched) str result\n+      strres=strcat(str,'')\n+      write(*,*) 'strres is ',strres\n+\n+C     Test 8 - (current) error; (patched) str result\n+      strres=strlat('',str)\n+      write(*,*) 'strres is ',strres\n+\n+      end\n+\n+      character*(*) function strfun(str,i,j)\n+      character str*(*)\n+\n+      strfun = str(i:j)\n+      end\n+\n+      character*(*) function strcat(str1,str2)\n+      character str1*(*), str2*(*)\n+\n+      strcat = str1 // str2\n+      end\n+\n+      character*(*) function strlat(str1,str2)\n+      character str1*(*), str2*(*)\n+\n+      strlat = str1(1:len(str1)) // str2(1:len(str2))\n+      end"}]}