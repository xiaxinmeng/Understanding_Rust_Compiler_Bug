{"sha": "deef71132774618d06d571e935d10753f92d8ad9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGVlZjcxMTMyNzc0NjE4ZDA2ZDU3MWU5MzVkMTA3NTNmOTJkOGFkOQ==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2016-05-04T16:00:33Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2016-05-04T16:00:33Z"}, "message": "c.opt (Wdangling-else): New option.\n\n\t* c.opt (Wdangling-else): New option.\n\n\t* c-parser.c (c_parser_if_statement): Replace OPT_Wparentheses with\n\tOPT_Wdangling_else.\n\n\t* parser.c (cp_parser_selection_statement): Replace OPT_Wparentheses\n\twith OPT_Wdangling_else.\n\n\t* doc/invoke.texi: Document -Wdangling-else.\n\n\t* c-c++-common/Wdangling-else-1.c: New test.\n\t* c-c++-common/Wdangling-else-2.c: New test.\n\t* c-c++-common/Wdangling-else-3.c: New test.\n\nFrom-SVN: r235885", "tree": {"sha": "8b890b5273bda4aece838374284c4c95a65d2d0c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8b890b5273bda4aece838374284c4c95a65d2d0c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/deef71132774618d06d571e935d10753f92d8ad9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/deef71132774618d06d571e935d10753f92d8ad9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/deef71132774618d06d571e935d10753f92d8ad9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/deef71132774618d06d571e935d10753f92d8ad9/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5396db971eb7a0997e9bcf15b2f9bda4db003b87", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5396db971eb7a0997e9bcf15b2f9bda4db003b87", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5396db971eb7a0997e9bcf15b2f9bda4db003b87"}], "stats": {"total": 159, "additions": 116, "deletions": 43}, "files": [{"sha": "17390ab74718138c56491499fce84a36de32f3c8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/deef71132774618d06d571e935d10753f92d8ad9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/deef71132774618d06d571e935d10753f92d8ad9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=deef71132774618d06d571e935d10753f92d8ad9", "patch": "@@ -1,3 +1,7 @@\n+2016-05-04  Marek Polacek  <polacek@redhat.com>\n+\n+\t* doc/invoke.texi: Document -Wdangling-else.\n+\n 2016-05-04  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n \n \t* config.gcc: Error out when conflicting multilib is detected.  Do not"}, {"sha": "e1ba43945c64dc9a9504946189d032e58e698e50", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/deef71132774618d06d571e935d10753f92d8ad9/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/deef71132774618d06d571e935d10753f92d8ad9/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=deef71132774618d06d571e935d10753f92d8ad9", "patch": "@@ -1,3 +1,7 @@\n+2016-05-04  Marek Polacek  <polacek@redhat.com>\n+\n+\t* c.opt (Wdangling-else): New option.\n+\n 2016-05-03  Marek Polacek  <polacek@redhat.com>\n \n \tPR c/70859"}, {"sha": "bdc6ee0f83bc948323ba47460bd0e458b3b0f4fa", "filename": "gcc/c-family/c.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/deef71132774618d06d571e935d10753f92d8ad9/gcc%2Fc-family%2Fc.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/deef71132774618d06d571e935d10753f92d8ad9/gcc%2Fc-family%2Fc.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc.opt?ref=deef71132774618d06d571e935d10753f92d8ad9", "patch": "@@ -370,6 +370,10 @@ Wctor-dtor-privacy\n C++ ObjC++ Var(warn_ctor_dtor_privacy) Warning\n Warn when all constructors and destructors are private.\n \n+Wdangling-else\n+C ObjC C++ ObjC++ Var(warn_dangling_else) Warning LangEnabledBy(C ObjC C++ ObjC++,Wparentheses)\n+Warn about dangling else.\n+\n Wdate-time\n C ObjC C++ ObjC++ CPP(warn_date_time) CppReason(CPP_W_DATE_TIME) Var(cpp_warn_date_time) Init(0) Warning\n Warn about __TIME__, __DATE__ and __TIMESTAMP__ usage."}, {"sha": "1e77ef5e40f125215c6161d747e9a1b3cb8ee428", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/deef71132774618d06d571e935d10753f92d8ad9/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/deef71132774618d06d571e935d10753f92d8ad9/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=deef71132774618d06d571e935d10753f92d8ad9", "patch": "@@ -1,3 +1,8 @@\n+2016-05-04  Marek Polacek  <polacek@redhat.com>\n+\n+\t* c-parser.c (c_parser_if_statement): Replace OPT_Wparentheses with\n+\tOPT_Wdangling_else.\n+\n 2016-05-04  Marek Polacek  <polacek@redhat.com>\n \n \tPR c/48778"}, {"sha": "d275f8ef594a45cba9ae3907843b4268749adb40", "filename": "gcc/c/c-parser.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/deef71132774618d06d571e935d10753f92d8ad9/gcc%2Fc%2Fc-parser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/deef71132774618d06d571e935d10753f92d8ad9/gcc%2Fc%2Fc-parser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-parser.c?ref=deef71132774618d06d571e935d10753f92d8ad9", "patch": "@@ -5542,7 +5542,7 @@ c_parser_if_statement (c_parser *parser, bool *if_p, vec<tree> *chain)\n       /* Diagnose an ambiguous else if if-then-else is nested inside\n \t if-then.  */\n       if (nested_if)\n-\twarning_at (loc, OPT_Wparentheses,\n+\twarning_at (loc, OPT_Wdangling_else,\n \t\t    \"suggest explicit braces to avoid ambiguous %<else%>\");\n \n       if (warn_duplicated_cond)"}, {"sha": "74df11011fcaefe0c3ae42dc0bbb351b09b84061", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/deef71132774618d06d571e935d10753f92d8ad9/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/deef71132774618d06d571e935d10753f92d8ad9/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=deef71132774618d06d571e935d10753f92d8ad9", "patch": "@@ -1,3 +1,8 @@\n+2016-05-04  Marek Polacek  <polacek@redhat.com>\n+\n+\t* parser.c (cp_parser_selection_statement): Replace OPT_Wparentheses\n+\twith OPT_Wdangling_else.\n+\n 2016-05-03  Martin Sebor  <msebor@redhat.com>\n \n \tPR c++/66561"}, {"sha": "da2ee3cf1dc5a98ad5bda0c00c1a91a6a2e315ff", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/deef71132774618d06d571e935d10753f92d8ad9/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/deef71132774618d06d571e935d10753f92d8ad9/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=deef71132774618d06d571e935d10753f92d8ad9", "patch": "@@ -10951,7 +10951,7 @@ cp_parser_selection_statement (cp_parser* parser, bool *if_p,\n \t\t   statement which does have an else clause.  We warn\n \t\t   about the potential ambiguity.  */\n \t\tif (nested_if)\n-\t\t  warning_at (EXPR_LOCATION (statement), OPT_Wparentheses,\n+\t\t  warning_at (EXPR_LOCATION (statement), OPT_Wdangling_else,\n \t\t\t      \"suggest explicit braces to avoid ambiguous\"\n \t\t\t      \" %<else%>\");\n \t\tif (warn_duplicated_cond)"}, {"sha": "96df18e4c31f2530b31ce6014348d04e6f2f85b9", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 47, "deletions": 41, "changes": 88, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/deef71132774618d06d571e935d10753f92d8ad9/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/deef71132774618d06d571e935d10753f92d8ad9/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=deef71132774618d06d571e935d10753f92d8ad9", "patch": "@@ -257,7 +257,8 @@ Objective-C and Objective-C++ Dialects}.\n -Wc90-c99-compat -Wc99-c11-compat @gol\n -Wc++-compat -Wc++11-compat -Wc++14-compat -Wcast-align  -Wcast-qual  @gol\n -Wchar-subscripts -Wclobbered  -Wcomment -Wconditionally-supported  @gol\n--Wconversion -Wcoverage-mismatch -Wno-cpp -Wdate-time -Wdelete-incomplete @gol\n+-Wconversion -Wcoverage-mismatch -Wno-cpp -Wdangling-else -Wdate-time @gol\n+-Wdelete-incomplete @gol\n -Wno-deprecated -Wno-deprecated-declarations -Wno-designated-init @gol\n -Wdisabled-optimization @gol\n -Wno-discarded-qualifiers -Wno-discarded-array-qualifiers @gol\n@@ -3976,46 +3977,6 @@ Also warn if a comparison like @code{x<=y<=z} appears; this is\n equivalent to @code{(x<=y ? 1 : 0) <= z}, which is a different\n interpretation from that of ordinary mathematical notation.\n \n-Also warn about constructions where there may be confusion to which\n-@code{if} statement an @code{else} branch belongs.  Here is an example of\n-such a case:\n-\n-@smallexample\n-@group\n-@{\n-  if (a)\n-    if (b)\n-      foo ();\n-  else\n-    bar ();\n-@}\n-@end group\n-@end smallexample\n-\n-In C/C++, every @code{else} branch belongs to the innermost possible\n-@code{if} statement, which in this example is @code{if (b)}.  This is\n-often not what the programmer expected, as illustrated in the above\n-example by indentation the programmer chose.  When there is the\n-potential for this confusion, GCC issues a warning when this flag\n-is specified.  To eliminate the warning, add explicit braces around\n-the innermost @code{if} statement so there is no way the @code{else}\n-can belong to the enclosing @code{if}.  The resulting code\n-looks like this:\n-\n-@smallexample\n-@group\n-@{\n-  if (a)\n-    @{\n-      if (b)\n-        foo ();\n-      else\n-        bar ();\n-    @}\n-@}\n-@end group\n-@end smallexample\n-\n Also warn for dangerous uses of the GNU extension to\n @code{?:} with omitted middle operand. When the condition\n in the @code{?}: operator is a boolean expression, the omitted value is\n@@ -5148,6 +5109,51 @@ compiler doesn't give this warning for types defined in the main .C\n file, as those are unlikely to have multiple definitions.\n @option{-Wsubobject-linkage} is enabled by default.\n \n+@item -Wdangling-else\n+@opindex Wdangling-else\n+@opindex Wno-dangling-else\n+Warn about constructions where there may be confusion to which\n+@code{if} statement an @code{else} branch belongs.  Here is an example of\n+such a case:\n+\n+@smallexample\n+@group\n+@{\n+  if (a)\n+    if (b)\n+      foo ();\n+  else\n+    bar ();\n+@}\n+@end group\n+@end smallexample\n+\n+In C/C++, every @code{else} branch belongs to the innermost possible\n+@code{if} statement, which in this example is @code{if (b)}.  This is\n+often not what the programmer expected, as illustrated in the above\n+example by indentation the programmer chose.  When there is the\n+potential for this confusion, GCC issues a warning when this flag\n+is specified.  To eliminate the warning, add explicit braces around\n+the innermost @code{if} statement so there is no way the @code{else}\n+can belong to the enclosing @code{if}.  The resulting code\n+looks like this:\n+\n+@smallexample\n+@group\n+@{\n+  if (a)\n+    @{\n+      if (b)\n+        foo ();\n+      else\n+        bar ();\n+    @}\n+@}\n+@end group\n+@end smallexample\n+\n+This warning is enabled by @option{-Wparentheses}.\n+\n @item -Wdate-time\n @opindex Wdate-time\n @opindex Wno-date-time"}, {"sha": "fdf961d72ff23f753bf9b9c1a7f108cff4f885ca", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/deef71132774618d06d571e935d10753f92d8ad9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/deef71132774618d06d571e935d10753f92d8ad9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=deef71132774618d06d571e935d10753f92d8ad9", "patch": "@@ -1,3 +1,9 @@\n+2016-05-04  Marek Polacek  <polacek@redhat.com>\n+\n+\t* c-c++-common/Wdangling-else-1.c: New test.\n+\t* c-c++-common/Wdangling-else-2.c: New test.\n+\t* c-c++-common/Wdangling-else-3.c: New test.\n+\n 2016-05-04  Kwok Cheung Yeung  <kcy@codesourcery.com>\n \n \t* gcc.target/mips/mips16-attributes.c: Skip if -mmicromips"}, {"sha": "28a5a8f53fb6fbc0debedaa2aff5b8ccca3f48f8", "filename": "gcc/testsuite/c-c++-common/Wdangling-else-1.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/deef71132774618d06d571e935d10753f92d8ad9/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWdangling-else-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/deef71132774618d06d571e935d10753f92d8ad9/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWdangling-else-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWdangling-else-1.c?ref=deef71132774618d06d571e935d10753f92d8ad9", "patch": "@@ -0,0 +1,13 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-Wdangling-else\" } */\n+\n+void bar (int);\n+void\n+foo (int a, int b)\n+{\n+  if (a) /* { dg-warning \"suggest explicit braces to avoid ambiguous\" } */\n+    if (b)\n+      bar (1);\n+  else\n+    bar (2);\n+}"}, {"sha": "87ea1ab568792fd4b0743d0842440a31ccc8f46e", "filename": "gcc/testsuite/c-c++-common/Wdangling-else-2.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/deef71132774618d06d571e935d10753f92d8ad9/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWdangling-else-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/deef71132774618d06d571e935d10753f92d8ad9/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWdangling-else-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWdangling-else-2.c?ref=deef71132774618d06d571e935d10753f92d8ad9", "patch": "@@ -0,0 +1,13 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-Wparentheses\" } */\n+\n+void bar (int);\n+void\n+foo (int a, int b)\n+{\n+  if (a) /* { dg-warning \"suggest explicit braces to avoid ambiguous\" } */\n+    if (b)\n+      bar (1);\n+  else\n+    bar (2);\n+}"}, {"sha": "0dae0d54ec8486b1a17192bbcc191227e46019ff", "filename": "gcc/testsuite/c-c++-common/Wdangling-else-3.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/deef71132774618d06d571e935d10753f92d8ad9/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWdangling-else-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/deef71132774618d06d571e935d10753f92d8ad9/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWdangling-else-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWdangling-else-3.c?ref=deef71132774618d06d571e935d10753f92d8ad9", "patch": "@@ -0,0 +1,13 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-Wparentheses -Wno-dangling-else\" } */\n+\n+void bar (int);\n+void\n+foo (int a, int b)\n+{\n+  if (a) /* { dg-bogus \"suggest explicit braces to avoid ambiguous\" } */\n+    if (b)\n+      bar (1);\n+  else\n+    bar (2);\n+}"}]}