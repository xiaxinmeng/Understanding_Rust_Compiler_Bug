{"sha": "2374a88acff100721223f7b944488e64279f0fb2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjM3NGE4OGFjZmYxMDA3MjEyMjNmN2I5NDQ0ODhlNjQyNzlmMGZiMg==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@gmail.com", "date": "2011-07-28T07:44:24Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2011-07-28T07:44:24Z"}, "message": "linux-unwind.h (frob_update_context <__powerpc64__>): Leave r2 REG_UNSAVED if stopped on the instruction that saves r2 in a plt call stub.\n\n\t* config/rs6000/linux-unwind.h (frob_update_context <__powerpc64__>):\n\tLeave r2 REG_UNSAVED if stopped on the instruction that saves r2\n\tin a plt call stub.  Do restore r2 if stopped on bctrl.\n\nFrom-SVN: r176861", "tree": {"sha": "38124867cdec12320e0c7fdd18da3c2229ed2f1c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/38124867cdec12320e0c7fdd18da3c2229ed2f1c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2374a88acff100721223f7b944488e64279f0fb2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2374a88acff100721223f7b944488e64279f0fb2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2374a88acff100721223f7b944488e64279f0fb2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2374a88acff100721223f7b944488e64279f0fb2/comments", "author": {"login": "amodra", "id": 6006325, "node_id": "MDQ6VXNlcjYwMDYzMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amodra", "html_url": "https://github.com/amodra", "followers_url": "https://api.github.com/users/amodra/followers", "following_url": "https://api.github.com/users/amodra/following{/other_user}", "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}", "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amodra/subscriptions", "organizations_url": "https://api.github.com/users/amodra/orgs", "repos_url": "https://api.github.com/users/amodra/repos", "events_url": "https://api.github.com/users/amodra/events{/privacy}", "received_events_url": "https://api.github.com/users/amodra/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d8fa1b739feb67b0b93f93d37b0384b403e74662", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8fa1b739feb67b0b93f93d37b0384b403e74662", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8fa1b739feb67b0b93f93d37b0384b403e74662"}], "stats": {"total": 32, "additions": 28, "deletions": 4}, "files": [{"sha": "49b087d3579f67628d992afa9e563d0c4338ad0a", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2374a88acff100721223f7b944488e64279f0fb2/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2374a88acff100721223f7b944488e64279f0fb2/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=2374a88acff100721223f7b944488e64279f0fb2", "patch": "@@ -1,3 +1,9 @@\n+2011-07-28  Alan Modra  <amodra@gmail.com>\n+\n+\t* config/rs6000/linux-unwind.h (frob_update_context <__powerpc64__>):\n+\tLeave r2 REG_UNSAVED if stopped on the instruction that saves r2\n+\tin a plt call stub.  Do restore r2 if stopped on bctrl.\n+\n 2011-07-18  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* config.host (i[3456x]86-*-netware*): Remove."}, {"sha": "27e5f82c7e30f165ae8178da722fef9212478b96", "filename": "libgcc/config/rs6000/linux-unwind.h", "status": "modified", "additions": 22, "deletions": 4, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2374a88acff100721223f7b944488e64279f0fb2/libgcc%2Fconfig%2Frs6000%2Flinux-unwind.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2374a88acff100721223f7b944488e64279f0fb2/libgcc%2Fconfig%2Frs6000%2Flinux-unwind.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Frs6000%2Flinux-unwind.h?ref=2374a88acff100721223f7b944488e64279f0fb2", "patch": "@@ -346,10 +346,28 @@ frob_update_context (struct _Unwind_Context *context, _Unwind_FrameState *fs ATT\n \t figure out if it was saved.  The big problem here is that the\n \t code that does the save/restore is generated by the linker, so\n \t we have no good way to determine at compile time what to do.  */\n-      unsigned int *insn\n-\t= (unsigned int *) _Unwind_GetGR (context, R_LR);\n-      if (insn && *insn == 0xE8410028)\n-\t_Unwind_SetGRPtr (context, 2, context->cfa + 40);\n+      if (pc[0] == 0xF8410028\n+\t  || ((pc[0] & 0xFFFF0000) == 0x3D820000\n+\t      && pc[1] == 0xF8410028))\n+\t{\n+\t  /* We are in a plt call stub or r2 adjusting long branch stub,\n+\t     before r2 has been saved.  Keep REG_UNSAVED.  */\n+\t}\n+      else if (pc[0] == 0x4E800421\n+\t       && pc[1] == 0xE8410028)\n+\t{\n+\t  /* We are at the bctrl instruction in a call via function\n+\t     pointer.  gcc always emits the load of the new r2 just\n+\t     before the bctrl.  */\n+\t  _Unwind_SetGRPtr (context, 2, context->cfa + 40);\n+\t}\n+      else\n+\t{\n+\t  unsigned int *insn\n+\t    = (unsigned int *) _Unwind_GetGR (context, R_LR);\n+\t  if (insn && *insn == 0xE8410028)\n+\t    _Unwind_SetGRPtr (context, 2, context->cfa + 40);\n+\t}\n     }\n #endif\n }"}]}