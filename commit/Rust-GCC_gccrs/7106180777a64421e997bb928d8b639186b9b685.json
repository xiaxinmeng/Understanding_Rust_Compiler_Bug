{"sha": "7106180777a64421e997bb928d8b639186b9b685", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzEwNjE4MDc3N2E2NDQyMWU5OTdiYjkyOGQ4YjYzOTE4NmI5YjY4NQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-07-30T23:01:48Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-07-30T23:01:48Z"}, "message": "Fix typo.\n\nFrom-SVN: r7840", "tree": {"sha": "734be31fb54713bd0752ac4a23a4fa62871121ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/734be31fb54713bd0752ac4a23a4fa62871121ca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7106180777a64421e997bb928d8b639186b9b685", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7106180777a64421e997bb928d8b639186b9b685", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7106180777a64421e997bb928d8b639186b9b685", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7106180777a64421e997bb928d8b639186b9b685/comments", "author": null, "committer": null, "parents": [{"sha": "474636f3e8519be55085b1ebcc915fde47068343", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/474636f3e8519be55085b1ebcc915fde47068343", "html_url": "https://github.com/Rust-GCC/gccrs/commit/474636f3e8519be55085b1ebcc915fde47068343"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "87a4a1d832fa8a240cda4a4d9dfe328234332580", "filename": "gcc/fold-const.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7106180777a64421e997bb928d8b639186b9b685/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7106180777a64421e997bb928d8b639186b9b685/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=7106180777a64421e997bb928d8b639186b9b685", "patch": "@@ -2836,14 +2836,14 @@ fold_truthop (code, truth_type, lhs, rhs)\n       l_const = convert (unsigned_type (TREE_TYPE (l_const)), l_const);\n       l_const = const_binop (LSHIFT_EXPR, convert (type, l_const),\n \t\t\t     size_int (xll_bitpos), 0);\n-      l_const = const_binop (BIT_AND_EXPR, l_const, ll_mask);\n+      l_const = const_binop (BIT_AND_EXPR, l_const, ll_mask, 0);\n     }\n   if (r_const)\n     {\n       r_const = convert (unsigned_type (TREE_TYPE (r_const)), r_const);\n       r_const = const_binop (LSHIFT_EXPR, convert (type, r_const),\n \t\t\t     size_int (xrl_bitpos), 0);\n-      r_const = const_binop (BIT_AND_EXPR, r_const, rl_mask);\n+      r_const = const_binop (BIT_AND_EXPR, r_const, rl_mask, 0);\n     }\n \n   /* If the right sides are not constant, do the same for it.  Also,"}]}