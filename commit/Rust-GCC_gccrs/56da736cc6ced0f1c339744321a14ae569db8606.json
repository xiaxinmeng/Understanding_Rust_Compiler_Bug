{"sha": "56da736cc6ced0f1c339744321a14ae569db8606", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTZkYTczNmNjNmNlZDBmMWMzMzk3NDQzMjFhMTRhZTU2OWRiODYwNg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-10-01T09:18:35Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-10-01T09:18:35Z"}, "message": "c++: Fix up default initialization with consteval default ctor [PR96994]\n\n> > The following testcase is miscompiled (in particular the a and i\n> > initialization).  The problem is that build_special_member_call due to\n> > the immediate constructors (but not evaluated in constant expression mode)\n> > doesn't create a CALL_EXPR, but returns a TARGET_EXPR with CONSTRUCTOR\n> > as the initializer for it,\n>\n> That seems like the bug; at the end of build_over_call, after you\n>\n> >        call = cxx_constant_value (call, obj_arg);\n>\n> You need to build an INIT_EXPR if obj_arg isn't a dummy.\n\nThat works.  obj_arg is NULL if it is a dummy from the earlier code.\n\n2020-10-01  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR c++/96994\n\t* call.c (build_over_call): If obj_arg is non-NULL, return INIT_EXPR\n\tsetting obj_arg to call.\n\n\t* g++.dg/cpp2a/consteval18.C: New test.", "tree": {"sha": "d08f30c2a40c9fdc6d4b5d50cd0f429f3251999e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d08f30c2a40c9fdc6d4b5d50cd0f429f3251999e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/56da736cc6ced0f1c339744321a14ae569db8606", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56da736cc6ced0f1c339744321a14ae569db8606", "html_url": "https://github.com/Rust-GCC/gccrs/commit/56da736cc6ced0f1c339744321a14ae569db8606", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56da736cc6ced0f1c339744321a14ae569db8606/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2805fcb32660bc0cdcd5ba54310f1f02651e039f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2805fcb32660bc0cdcd5ba54310f1f02651e039f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2805fcb32660bc0cdcd5ba54310f1f02651e039f"}], "stats": {"total": 28, "additions": 28, "deletions": 0}, "files": [{"sha": "d67e8fe2b2867f1eb6dfae0c33d09e8604a9117b", "filename": "gcc/cp/call.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56da736cc6ced0f1c339744321a14ae569db8606/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56da736cc6ced0f1c339744321a14ae569db8606/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=56da736cc6ced0f1c339744321a14ae569db8606", "patch": "@@ -9212,6 +9212,8 @@ build_over_call (struct z_candidate *cand, int flags, tsubst_flags_t complain)\n \t\t}\n \t    }\n \t  call = cxx_constant_value (call, obj_arg);\n+\t  if (obj_arg && !error_operand_p (call))\n+\t    call = build2 (INIT_EXPR, void_type_node, obj_arg, call);\n \t}\n     }\n   return call;"}, {"sha": "586feded505c6ab7489af9b3c69b10c49a82bde0", "filename": "gcc/testsuite/g++.dg/cpp2a/consteval18.C", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56da736cc6ced0f1c339744321a14ae569db8606/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconsteval18.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56da736cc6ced0f1c339744321a14ae569db8606/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconsteval18.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconsteval18.C?ref=56da736cc6ced0f1c339744321a14ae569db8606", "patch": "@@ -0,0 +1,26 @@\n+// PR c++/96994\n+// { dg-do run { target c++20 } }\n+\n+struct A { consteval A () { i = 1; } consteval A (int x) : i (x) {} int i = 0; };\n+struct B { constexpr B () { i = 1; } constexpr B (int x) : i (x) {} int i = 0; };\n+A const a;\n+constexpr A b;\n+B const c;\n+A const constinit d;\n+A const e = 2;\n+constexpr A f = 3;\n+B const g = 4;\n+A const constinit h = 5;\n+A i;\n+B j;\n+A k = 6;\n+B l = 7;\n+static_assert (b.i == 1 && f.i == 3);\n+\n+int\n+main()\n+{\n+  if (a.i != 1 || c.i != 1 || d.i != 1 || e.i != 2 || g.i != 4 || h.i != 5\n+      || i.i != 1 || j.i != 1 || k.i != 6 || l.i != 7)\n+    __builtin_abort ();\n+}"}]}