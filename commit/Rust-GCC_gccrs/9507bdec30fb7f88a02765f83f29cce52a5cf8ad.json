{"sha": "9507bdec30fb7f88a02765f83f29cce52a5cf8ad", "node_id": "C_kwDOANBUbNoAKDk1MDdiZGVjMzBmYjdmODhhMDI3NjVmODNmMjljY2U1MmE1Y2Y4YWQ", "commit": {"author": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2022-07-04T15:56:24Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2022-07-06T16:38:37Z"}, "message": "Support extern-blocks in ast-dumps\n\nThis allows us to support really basic expressions and extern blocks. These\nare used for the hello world version of importing metadata in crates.", "tree": {"sha": "8938c8193f1be566506eb871cdbfa7fe514365e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8938c8193f1be566506eb871cdbfa7fe514365e0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9507bdec30fb7f88a02765f83f29cce52a5cf8ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9507bdec30fb7f88a02765f83f29cce52a5cf8ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9507bdec30fb7f88a02765f83f29cce52a5cf8ad", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9507bdec30fb7f88a02765f83f29cce52a5cf8ad/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "29d594e263f0ccbcbd2babf43ff453c5188f4f2c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29d594e263f0ccbcbd2babf43ff453c5188f4f2c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/29d594e263f0ccbcbd2babf43ff453c5188f4f2c"}], "stats": {"total": 88, "additions": 81, "deletions": 7}, "files": [{"sha": "a06dd72abca1bdd2844528d14e411b01f80c29b9", "filename": "gcc/rust/ast/rust-ast-dump.cc", "status": "modified", "additions": 80, "deletions": 7, "changes": 87, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9507bdec30fb7f88a02765f83f29cce52a5cf8ad/gcc%2Frust%2Fast%2Frust-ast-dump.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9507bdec30fb7f88a02765f83f29cce52a5cf8ad/gcc%2Frust%2Fast%2Frust-ast-dump.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fast%2Frust-ast-dump.cc?ref=9507bdec30fb7f88a02765f83f29cce52a5cf8ad", "patch": "@@ -51,6 +51,12 @@ Dump::go (AST::Crate &crate)\n     item->accept_vis (*this);\n }\n \n+void\n+Dump::go (AST::Item &item)\n+{\n+  item.accept_vis (*this);\n+}\n+\n void\n Dump::format_function_param (FunctionParam &param)\n {\n@@ -73,7 +79,9 @@ Dump::visit (AttrInputMetaItemContainer &input)\n \n void\n Dump::visit (IdentifierExpr &ident_expr)\n-{}\n+{\n+  stream << ident_expr.get_ident ();\n+}\n \n void\n Dump::visit (Lifetime &lifetime)\n@@ -121,7 +129,9 @@ Dump::visit (QualifiedPathInType &path)\n // rust-expr.h\n void\n Dump::visit (LiteralExpr &expr)\n-{}\n+{\n+  stream << expr.as_string ();\n+}\n \n void\n Dump::visit (AttrInputLiteral &attr_input)\n@@ -153,7 +163,24 @@ Dump::visit (NegationExpr &expr)\n \n void\n Dump::visit (ArithmeticOrLogicalExpr &expr)\n-{}\n+{\n+  expr.get_left_expr ()->accept_vis (*this);\n+  stream << \" \";\n+\n+  switch (expr.get_expr_type ())\n+    {\n+    case ArithmeticOrLogicalOperator::ADD:\n+      stream << \"+\";\n+      break;\n+\n+    default:\n+      gcc_unreachable ();\n+      break;\n+    }\n+\n+  stream << \" \";\n+  expr.get_right_expr ()->accept_vis (*this);\n+}\n \n void\n Dump::visit (ComparisonExpr &expr)\n@@ -257,7 +284,10 @@ Dump::visit (BlockExpr &expr)\n     }\n \n   if (expr.has_tail_expr ())\n-    expr.get_tail_expr ()->accept_vis (*this);\n+    {\n+      stream << indentation;\n+      expr.get_tail_expr ()->accept_vis (*this);\n+    }\n \n   indentation.decrement ();\n   stream << \"\\n\" << indentation << \"}\\n\";\n@@ -649,12 +679,55 @@ Dump::visit (ExternalStaticItem &item)\n {}\n \n void\n-Dump::visit (ExternalFunctionItem &item)\n-{}\n+Dump::visit (ExternalFunctionItem &function)\n+{\n+  stream << \"fn \" << function.get_identifier () << '(';\n+\n+  for (size_t i = 0; i < function.get_function_params ().size (); i++)\n+    {\n+      auto &param = function.get_function_params ().at (i);\n+      bool has_next = (i + 1) < function.get_function_params ().size ();\n+\n+      stream << param.get_name () << \": \";\n+      param.get_type ()->accept_vis (*this);\n+\n+      if (has_next)\n+\tstream << \", \";\n+    }\n+\n+  stream << ')';\n+  if (function.has_return_type ())\n+    {\n+      stream << \"-> \";\n+      function.get_return_type ()->accept_vis (*this);\n+    }\n+}\n \n void\n Dump::visit (ExternBlock &block)\n-{}\n+{\n+  stream << \"extern \";\n+\n+  if (block.has_abi ())\n+    {\n+      stream << \"\\\"\";\n+      stream << block.get_abi ();\n+      stream << \"\\\" \";\n+    }\n+\n+  stream << \"{\\n\";\n+  indentation.increment ();\n+\n+  for (auto &item : block.get_extern_items ())\n+    {\n+      stream << indentation;\n+      item->accept_vis (*this);\n+      stream << \";\\n\";\n+    }\n+\n+  indentation.decrement ();\n+  stream << \"\\n\" << indentation << \"}\\n\";\n+}\n \n // rust-macro.h\n void"}, {"sha": "d74d88759b0afb389f2550e5cd4b537b99a5a7db", "filename": "gcc/rust/ast/rust-ast-dump.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9507bdec30fb7f88a02765f83f29cce52a5cf8ad/gcc%2Frust%2Fast%2Frust-ast-dump.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9507bdec30fb7f88a02765f83f29cce52a5cf8ad/gcc%2Frust%2Fast%2Frust-ast-dump.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fast%2Frust-ast-dump.h?ref=9507bdec30fb7f88a02765f83f29cce52a5cf8ad", "patch": "@@ -50,6 +50,7 @@ class Dump : public ASTVisitor\n    * Run the visitor on an entire crate and its items\n    */\n   void go (AST::Crate &crate);\n+  void go (AST::Item &item);\n \n private:\n   std::ostream &stream;"}]}