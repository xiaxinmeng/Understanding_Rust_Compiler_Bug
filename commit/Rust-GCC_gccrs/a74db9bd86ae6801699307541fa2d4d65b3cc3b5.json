{"sha": "a74db9bd86ae6801699307541fa2d4d65b3cc3b5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTc0ZGI5YmQ4NmFlNjgwMTY5OTMwNzU0MWZhMmQ0ZDY1YjNjYzNiNQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2013-02-05T15:55:31Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2013-02-05T15:55:31Z"}, "message": "re PR sanitizer/55374 ([asan] -static-libasan -static-libstdc++ doesn't work)\n\n\tPR sanitizer/55374\n\t* config/gnu-user.h (LIBTSAN_EARLY_SPEC): Define.\n\t(STATIC_LIBTSAN_LIBS): Likewise.\n\t* gcc.c (ADD_STATIC_LIBTSAN_LIBS, LIBTSAN_EARLY_SPEC): Define.\n\t(LIBTSAN_SPEC): Add ADD_STATIC_LIBTSAN_LIBS, if LIBTSAN_EARLY_SPEC\n\tis defined, don't add anything else beyond that.\n\t(SANITIZER_EARLY_SPEC, SANITIZER_SPEC): Define.\n\t(LINK_COMMAND_SPEC): Use them.\n\nFrom-SVN: r195761", "tree": {"sha": "100757cceba7527450ccfa949a2cd497d340f97a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/100757cceba7527450ccfa949a2cd497d340f97a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a74db9bd86ae6801699307541fa2d4d65b3cc3b5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a74db9bd86ae6801699307541fa2d4d65b3cc3b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a74db9bd86ae6801699307541fa2d4d65b3cc3b5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a74db9bd86ae6801699307541fa2d4d65b3cc3b5/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "11f1e3ab239b3a45b085ca5eb1327f1254fb6205", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11f1e3ab239b3a45b085ca5eb1327f1254fb6205", "html_url": "https://github.com/Rust-GCC/gccrs/commit/11f1e3ab239b3a45b085ca5eb1327f1254fb6205"}], "stats": {"total": 62, "additions": 52, "deletions": 10}, "files": [{"sha": "6440481a27ab28af3e78f24e11d0160e1004e36e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a74db9bd86ae6801699307541fa2d4d65b3cc3b5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a74db9bd86ae6801699307541fa2d4d65b3cc3b5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a74db9bd86ae6801699307541fa2d4d65b3cc3b5", "patch": "@@ -1,5 +1,14 @@\n 2013-02-05  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR sanitizer/55374\n+\t* config/gnu-user.h (LIBTSAN_EARLY_SPEC): Define.\n+\t(STATIC_LIBTSAN_LIBS): Likewise.\n+\t* gcc.c (ADD_STATIC_LIBTSAN_LIBS, LIBTSAN_EARLY_SPEC): Define.\n+\t(LIBTSAN_SPEC): Add ADD_STATIC_LIBTSAN_LIBS, if LIBTSAN_EARLY_SPEC\n+\tis defined, don't add anything else beyond that.\n+\t(SANITIZER_EARLY_SPEC, SANITIZER_SPEC): Define.\n+\t(LINK_COMMAND_SPEC): Use them.\n+\n \tPR tree-optimization/56205\n \t* tree-stdarg.c (check_all_va_list_escapes): Return true if\n \tthere are any PHI nodes that set non-va_list_escape_vars SSA_NAME"}, {"sha": "ba627e0ab0dc82e5979b2264abc4c650957f0d0f", "filename": "gcc/config/gnu-user.h", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a74db9bd86ae6801699307541fa2d4d65b3cc3b5/gcc%2Fconfig%2Fgnu-user.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a74db9bd86ae6801699307541fa2d4d65b3cc3b5/gcc%2Fconfig%2Fgnu-user.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fgnu-user.h?ref=a74db9bd86ae6801699307541fa2d4d65b3cc3b5", "patch": "@@ -101,14 +101,22 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n /* Link -lasan early on the command line.  For -static-libasan, don't link\n    it for -shared link, the executable should be compiled with -static-libasan\n    in that case, and for executable link link with --{,no-}whole-archive around\n-   it to force everything into the executable.  */\n+   it to force everything into the executable.  And similarly for -ltsan.  */\n #if defined(HAVE_LD_STATIC_DYNAMIC)\n #undef LIBASAN_EARLY_SPEC\n #define LIBASAN_EARLY_SPEC \"%{static-libasan:%{!shared:\" \\\n   LD_STATIC_OPTION \" --whole-archive -lasan --no-whole-archive \" \\\n   LD_DYNAMIC_OPTION \"}}%{!static-libasan:-lasan}\"\n+#undef LIBTSAN_EARLY_SPEC\n+#define LIBTSAN_EARLY_SPEC \"%{static-libtsan:%{!shared:\" \\\n+  LD_STATIC_OPTION \" --whole-archive -ltsan --no-whole-archive \" \\\n+  LD_DYNAMIC_OPTION \"}}%{!static-libtsan:-ltsan}\"\n #endif\n \n /* Additional libraries needed by -static-libasan.  */\n #undef STATIC_LIBASAN_LIBS\n #define STATIC_LIBASAN_LIBS \"-ldl -lpthread\"\n+\n+/* Additional libraries needed by -static-libtsan.  */\n+#undef STATIC_LIBTSAN_LIBS\n+#define STATIC_LIBTSAN_LIBS \"-ldl -lpthread\""}, {"sha": "5022789609c6e71dbadb3bc64138dc6493ec5f03", "filename": "gcc/gcc.c", "status": "modified", "additions": 34, "deletions": 9, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a74db9bd86ae6801699307541fa2d4d65b3cc3b5/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a74db9bd86ae6801699307541fa2d4d65b3cc3b5/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=a74db9bd86ae6801699307541fa2d4d65b3cc3b5", "patch": "@@ -564,12 +564,25 @@ proper position among the other output files.  */\n #endif\n \n #ifndef LIBTSAN_SPEC\n-#ifdef HAVE_LD_STATIC_DYNAMIC\n+#ifdef STATIC_LIBTSAN_LIBS\n+#define ADD_STATIC_LIBTSAN_LIBS \\\n+  \" %{static-libtsan:\" STATIC_LIBTSAN_LIBS \"}\"\n+#else\n+#define ADD_STATIC_LIBTSAN_LIBS\n+#endif\n+#ifdef LIBTSAN_EARLY_SPEC\n+#define LIBTSAN_SPEC ADD_STATIC_LIBTSAN_LIBS\n+#elif defined(HAVE_LD_STATIC_DYNAMIC)\n #define LIBTSAN_SPEC \"%{static-libtsan:\" LD_STATIC_OPTION \\\n-\t\t     \"} -ltsan %{static-libtsan:\" LD_DYNAMIC_OPTION \"}\"\n+\t\t     \"} -ltsan %{static-libtsan:\" LD_DYNAMIC_OPTION \"}\" \\\n+\t\t     ADD_STATIC_LIBTSAN_LIBS\n #else\n-#define LIBTSAN_SPEC \"-ltsan\"\n+#define LIBTSAN_SPEC \"-ltsan\" ADD_STATIC_LIBTSAN_LIBS\n+#endif\n #endif\n+\n+#ifndef LIBTSAN_EARLY_SPEC\n+#define LIBTSAN_EARLY_SPEC \"\"\n #endif\n \n /* config.h can define LIBGCC_SPEC to override how and when libgcc.a is\n@@ -691,6 +704,21 @@ proper position among the other output files.  */\n     %e-fuse-linker-plugin is not supported in this configuration}\"\n #endif\n \n+/* Linker command line options for -fsanitize= early on the command line.  */\n+#ifndef SANITIZER_EARLY_SPEC\n+#define SANITIZER_EARLY_SPEC \"\\\n+%{!nostdlib:%{!nodefaultlibs:%{fsanitize=address:\" LIBASAN_EARLY_SPEC \"} \\\n+    %{fsanitize=thread:\" LIBTSAN_EARLY_SPEC \"}}}\"\n+#endif\n+\n+/* Linker command line options for -fsanitize= late on the command line.  */\n+#ifndef SANITIZER_SPEC\n+#define SANITIZER_SPEC \"\\\n+%{!nostdlib:%{!nodefaultlibs:%{fsanitize=address:\" LIBASAN_SPEC \"\\\n+    %{static:%ecannot specify -static with -fsanitize=address}}\\\n+    %{fsanitize=thread:\" LIBTSAN_SPEC \"\\\n+    %{!pie:%{!shared:%e-fsanitize=thread linking must be done with -pie or -shared}}}}}\"\n+#endif\n \n /* -u* was put back because both BSD and SysV seem to support it.  */\n /* %{static:} simply prevents an error message if the target machine\n@@ -706,19 +734,16 @@ proper position among the other output files.  */\n %{!fsyntax-only:%{!c:%{!M:%{!MM:%{!E:%{!S:\\\n     %(linker) \" \\\n     LINK_PLUGIN_SPEC \\\n-    \"%{flto|flto=*:%<fcompare-debug*} \\\n+   \"%{flto|flto=*:%<fcompare-debug*} \\\n     %{flto} %{flto=*} %l \" LINK_PIE_SPEC \\\n    \"%{fuse-ld=*:-fuse-ld=%*}\\\n     %X %{o*} %{e*} %{N} %{n} %{r}\\\n     %{s} %{t} %{u*} %{z} %{Z} %{!nostdlib:%{!nostartfiles:%S}}\\\n-    %{static:} %{L*} %(mfwrap) %(link_libgcc) \\\n-    %{fsanitize=address:\" LIBASAN_EARLY_SPEC \"} %o\\\n+    %{static:} %{L*} %(mfwrap) %(link_libgcc) \" SANITIZER_EARLY_SPEC \" %o\\\n     %{fopenmp|ftree-parallelize-loops=*:%:include(libgomp.spec)%(link_gomp)}\\\n     %{fgnu-tm:%:include(libitm.spec)%(link_itm)}\\\n     %(mflib) \" STACK_SPLIT_SPEC \"\\\n-    %{fprofile-arcs|fprofile-generate*|coverage:-lgcov}\\\n-    %{fsanitize=address:\" LIBASAN_SPEC \"%{static:%ecannot specify -static with -fsanitize=address}}\\\n-    %{fsanitize=thread:\" LIBTSAN_SPEC \"}\\\n+    %{fprofile-arcs|fprofile-generate*|coverage:-lgcov} \" SANITIZER_SPEC \" \\\n     %{!nostdlib:%{!nodefaultlibs:%(link_ssp) %(link_gcc_c_sequence)}}\\\n     %{!nostdlib:%{!nostartfiles:%E}} %{T*} }}}}}}\"\n #endif"}]}