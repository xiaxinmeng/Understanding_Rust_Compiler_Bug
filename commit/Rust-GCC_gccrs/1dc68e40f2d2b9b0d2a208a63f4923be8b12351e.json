{"sha": "1dc68e40f2d2b9b0d2a208a63f4923be8b12351e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWRjNjhlNDBmMmQyYjliMGQyYTIwOGE2M2Y0OTIzYmU4YjEyMzUxZQ==", "commit": {"author": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2021-07-22T11:18:59Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2021-07-22T11:24:50Z"}, "message": "Add mappings for trait items", "tree": {"sha": "026930990f4d936269b14d25a6a783414b41fc1d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/026930990f4d936269b14d25a6a783414b41fc1d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1dc68e40f2d2b9b0d2a208a63f4923be8b12351e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1dc68e40f2d2b9b0d2a208a63f4923be8b12351e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1dc68e40f2d2b9b0d2a208a63f4923be8b12351e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1dc68e40f2d2b9b0d2a208a63f4923be8b12351e/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6dfde8225f4184552aca9c614894ac13144c2298", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6dfde8225f4184552aca9c614894ac13144c2298", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6dfde8225f4184552aca9c614894ac13144c2298"}], "stats": {"total": 66, "additions": 58, "deletions": 8}, "files": [{"sha": "cbc80d305684fe417735bd8f1086348e31e3ed0d", "filename": "gcc/rust/hir/rust-ast-lower-implitem.h", "status": "modified", "additions": 29, "deletions": 8, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1dc68e40f2d2b9b0d2a208a63f4923be8b12351e/gcc%2Frust%2Fhir%2Frust-ast-lower-implitem.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1dc68e40f2d2b9b0d2a208a63f4923be8b12351e/gcc%2Frust%2Fhir%2Frust-ast-lower-implitem.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fhir%2Frust-ast-lower-implitem.h?ref=1dc68e40f2d2b9b0d2a208a63f4923be8b12351e", "patch": "@@ -364,10 +364,15 @@ class ASTLowerTraitItem : public ASTLoweringBase\n \t\t\t\t   mappings->get_next_hir_id (crate_num),\n \t\t\t\t   mappings->get_next_localdef_id (crate_num));\n \n-    translated\n+    HIR::TraitItemFunc *trait_item\n       = new HIR::TraitItemFunc (mapping, std::move (decl),\n \t\t\t\tstd::unique_ptr<HIR::Expr> (block_expr),\n \t\t\t\tfunc.get_outer_attrs (), func.get_locus ());\n+    translated = trait_item;\n+    mappings->insert_hir_trait_item (mapping.get_crate_num (),\n+\t\t\t\t     mapping.get_hirid (), translated);\n+    mappings->insert_location (crate_num, mapping.get_hirid (),\n+\t\t\t       trait_item->get_locus ());\n   }\n \n   void visit (AST::TraitItemMethod &method) override\n@@ -428,10 +433,15 @@ class ASTLowerTraitItem : public ASTLoweringBase\n \t\t\t\t   mappings->get_next_hir_id (crate_num),\n \t\t\t\t   mappings->get_next_localdef_id (crate_num));\n \n-    translated\n+    HIR::TraitItemFunc *trait_item\n       = new HIR::TraitItemFunc (mapping, std::move (decl),\n \t\t\t\tstd::unique_ptr<HIR::Expr> (block_expr),\n \t\t\t\tmethod.get_outer_attrs (), method.get_locus ());\n+    translated = trait_item;\n+    mappings->insert_hir_trait_item (mapping.get_crate_num (),\n+\t\t\t\t     mapping.get_hirid (), translated);\n+    mappings->insert_location (crate_num, mapping.get_hirid (),\n+\t\t\t       trait_item->get_locus ());\n   }\n \n   void visit (AST::TraitItemConst &constant) override\n@@ -447,11 +457,17 @@ class ASTLowerTraitItem : public ASTLoweringBase\n \t\t\t\t   mappings->get_next_hir_id (crate_num),\n \t\t\t\t   mappings->get_next_localdef_id (crate_num));\n \n-    translated = new HIR::TraitItemConst (mapping, constant.get_identifier (),\n-\t\t\t\t\t  std::unique_ptr<HIR::Type> (type),\n-\t\t\t\t\t  std::unique_ptr<HIR::Expr> (expr),\n-\t\t\t\t\t  constant.get_outer_attrs (),\n-\t\t\t\t\t  constant.get_locus ());\n+    HIR::TraitItemConst *trait_item\n+      = new HIR::TraitItemConst (mapping, constant.get_identifier (),\n+\t\t\t\t std::unique_ptr<HIR::Type> (type),\n+\t\t\t\t std::unique_ptr<HIR::Expr> (expr),\n+\t\t\t\t constant.get_outer_attrs (),\n+\t\t\t\t constant.get_locus ());\n+    translated = trait_item;\n+    mappings->insert_hir_trait_item (mapping.get_crate_num (),\n+\t\t\t\t     mapping.get_hirid (), translated);\n+    mappings->insert_location (crate_num, mapping.get_hirid (),\n+\t\t\t       trait_item->get_locus ());\n   }\n \n   void visit (AST::TraitItemType &type) override\n@@ -463,10 +479,15 @@ class ASTLowerTraitItem : public ASTLoweringBase\n \t\t\t\t   mappings->get_next_hir_id (crate_num),\n \t\t\t\t   mappings->get_next_localdef_id (crate_num));\n \n-    translated\n+    HIR::TraitItemType *trait_item\n       = new HIR::TraitItemType (mapping, type.get_identifier (),\n \t\t\t\tstd::move (type_param_bounds),\n \t\t\t\ttype.get_outer_attrs (), type.get_locus ());\n+    translated = trait_item;\n+    mappings->insert_hir_trait_item (mapping.get_crate_num (),\n+\t\t\t\t     mapping.get_hirid (), translated);\n+    mappings->insert_location (crate_num, mapping.get_hirid (),\n+\t\t\t       trait_item->get_locus ());\n   }\n \n private:"}, {"sha": "04fd7e5ff9b649dd251d7072e96cdf566ea625c3", "filename": "gcc/rust/util/rust-hir-map.cc", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1dc68e40f2d2b9b0d2a208a63f4923be8b12351e/gcc%2Frust%2Futil%2Frust-hir-map.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1dc68e40f2d2b9b0d2a208a63f4923be8b12351e/gcc%2Frust%2Futil%2Frust-hir-map.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Futil%2Frust-hir-map.cc?ref=1dc68e40f2d2b9b0d2a208a63f4923be8b12351e", "patch": "@@ -259,6 +259,30 @@ Mappings::lookup_hir_item (CrateNum crateNum, HirId id)\n   return iy->second;\n }\n \n+void\n+Mappings::insert_hir_trait_item (CrateNum crateNum, HirId id,\n+\t\t\t\t HIR::TraitItem *item)\n+{\n+  rust_assert (lookup_hir_item (crateNum, id) == nullptr);\n+\n+  hirTraitItemMappings[crateNum][id] = item;\n+  nodeIdToHirMappings[crateNum][item->get_mappings ().get_nodeid ()] = id;\n+}\n+\n+HIR::TraitItem *\n+Mappings::lookup_hir_trait_item (CrateNum crateNum, HirId id)\n+{\n+  auto it = hirTraitItemMappings.find (crateNum);\n+  if (it == hirTraitItemMappings.end ())\n+    return nullptr;\n+\n+  auto iy = it->second.find (id);\n+  if (iy == it->second.end ())\n+    return nullptr;\n+\n+  return iy->second;\n+}\n+\n void\n Mappings::insert_hir_impl_block (CrateNum crateNum, HirId id,\n \t\t\t\t HIR::ImplBlock *item)"}, {"sha": "0d1456972f9146d2c8078ecf0e068c6ef42e6b68", "filename": "gcc/rust/util/rust-hir-map.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1dc68e40f2d2b9b0d2a208a63f4923be8b12351e/gcc%2Frust%2Futil%2Frust-hir-map.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1dc68e40f2d2b9b0d2a208a63f4923be8b12351e/gcc%2Frust%2Futil%2Frust-hir-map.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Futil%2Frust-hir-map.h?ref=1dc68e40f2d2b9b0d2a208a63f4923be8b12351e", "patch": "@@ -128,6 +128,10 @@ class Mappings\n   void insert_hir_item (CrateNum crateNum, HirId id, HIR::Item *item);\n   HIR::Item *lookup_hir_item (CrateNum crateNum, HirId id);\n \n+  void insert_hir_trait_item (CrateNum crateNum, HirId id,\n+\t\t\t      HIR::TraitItem *item);\n+  HIR::TraitItem *lookup_hir_trait_item (CrateNum crateNum, HirId id);\n+\n   void insert_hir_impl_block (CrateNum crateNum, HirId id,\n \t\t\t      HIR::ImplBlock *item);\n   HIR::ImplBlock *lookup_hir_impl_block (CrateNum crateNum, HirId id);\n@@ -232,6 +236,7 @@ class Mappings\n   std::map<CrateNum, std::map<HirId, HIR::SelfParam *> > hirSelfParamMappings;\n   std::map<HirId, HIR::ImplBlock *> hirImplItemsToImplMappings;\n   std::map<CrateNum, std::map<HirId, HIR::ImplBlock *> > hirImplBlockMappings;\n+  std::map<CrateNum, std::map<HirId, HIR::TraitItem *> > hirTraitItemMappings;\n \n   // location info\n   std::map<CrateNum, std::map<NodeId, Location> > locations;"}]}