{"sha": "69fa742f51be811038302e736c5a01eba6dbba5f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjlmYTc0MmY1MWJlODExMDM4MzAyZTczNmM1YTAxZWJhNmRiYmE1Zg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-03-02T13:10:36Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-03-02T13:10:36Z"}, "message": "re PR target/70028 (Error: operand size mismatch for `kmovw' (wrong assembly generated) with -mavx512bw -masm=intel)\n\n\tPR target/70028\n\t* config/i386/i386.md (kmovw): Move m constraint to 2nd alternative.\n\t(*movhi_internal): Put mask moves from and to memory separately\n\tfrom moves from/to GPRs.\n\n\t* gcc.target/i386/pr70028.c: New test.\n\nFrom-SVN: r233904", "tree": {"sha": "9736f77aed98b123ff61b9d000312e5335529b82", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9736f77aed98b123ff61b9d000312e5335529b82"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/69fa742f51be811038302e736c5a01eba6dbba5f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69fa742f51be811038302e736c5a01eba6dbba5f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69fa742f51be811038302e736c5a01eba6dbba5f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69fa742f51be811038302e736c5a01eba6dbba5f/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c954de7f5c34c044773cad88ceb7ae2aa60506ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c954de7f5c34c044773cad88ceb7ae2aa60506ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c954de7f5c34c044773cad88ceb7ae2aa60506ed"}], "stats": {"total": 44, "additions": 38, "deletions": 6}, "files": [{"sha": "adc085cb186565ed966f09c836dd53f750bb4471", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69fa742f51be811038302e736c5a01eba6dbba5f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69fa742f51be811038302e736c5a01eba6dbba5f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=69fa742f51be811038302e736c5a01eba6dbba5f", "patch": "@@ -1,3 +1,10 @@\n+2016-03-02  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/70028\n+\t* config/i386/i386.md (kmovw): Move m constraint to 2nd alternative.\n+\t(*movhi_internal): Put mask moves from and to memory separately\n+\tfrom moves from/to GPRs.\n+\n 2016-03-02  Richard Biener  <rguenther@suse.de>\n \n \t* genmatch.c (dt_node::gen_kids): Fix match code-gen for embedded"}, {"sha": "7fec5ded031faff68fb5294a0b41d16b805f3bea", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69fa742f51be811038302e736c5a01eba6dbba5f/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69fa742f51be811038302e736c5a01eba6dbba5f/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=69fa742f51be811038302e736c5a01eba6dbba5f", "patch": "@@ -2442,7 +2442,7 @@\n (define_insn \"kmovw\"\n   [(set (match_operand:HI 0 \"nonimmediate_operand\" \"=k,k\")\n \t(unspec:HI\n-\t  [(match_operand:HI 1 \"nonimmediate_operand\" \"rm,k\")]\n+\t  [(match_operand:HI 1 \"nonimmediate_operand\" \"r,km\")]\n \t  UNSPEC_KMOV))]\n   \"!(MEM_P (operands[0]) && MEM_P (operands[1])) && TARGET_AVX512F\"\n   \"@\n@@ -2454,8 +2454,8 @@\n \n \n (define_insn \"*movhi_internal\"\n-  [(set (match_operand:HI 0 \"nonimmediate_operand\" \"=r,r ,r ,m ,k,k,rm\")\n-\t(match_operand:HI 1 \"general_operand\"      \"r ,rn,rm,rn,rm,k,k\"))]\n+  [(set (match_operand:HI 0 \"nonimmediate_operand\" \"=r,r ,r ,m ,k,k, r,m\")\n+\t(match_operand:HI 1 \"general_operand\"      \"r ,rn,rm,rn,r,km,k,k\"))]\n   \"!(MEM_P (operands[0]) && MEM_P (operands[1]))\"\n {\n   switch (get_attr_type (insn))\n@@ -2469,7 +2469,8 @@\n       switch (which_alternative)\n         {\n \tcase 4: return \"kmovw\\t{%k1, %0|%0, %k1}\";\n-\tcase 5: return \"kmovw\\t{%1, %0|%0, %1}\";\n+\tcase 5: /* FALLTHRU */\n+\tcase 7: return \"kmovw\\t{%1, %0|%0, %1}\";\n \tcase 6: return \"kmovw\\t{%1, %k0|%k0, %1}\";\n \tdefault: gcc_unreachable ();\n \t}\n@@ -2482,7 +2483,7 @@\n     }\n }\n   [(set (attr \"type\")\n-     (cond [(eq_attr \"alternative\" \"4,5,6\")\n+     (cond [(eq_attr \"alternative\" \"4,5,6,7\")\n \t      (const_string \"mskmov\")\n \t    (match_test \"optimize_function_for_size_p (cfun)\")\n \t      (const_string \"imov\")\n@@ -2499,7 +2500,7 @@\n \t   ]\n \t   (const_string \"imov\")))\n     (set (attr \"prefix\")\n-      (if_then_else (eq_attr \"alternative\" \"4,5,6\")\n+      (if_then_else (eq_attr \"alternative\" \"4,5,6,7\")\n \t(const_string \"vex\")\n \t(const_string \"orig\")))\n     (set (attr \"mode\")"}, {"sha": "2f977c1f9bf92e1d97684c46fe9be94668e8469f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69fa742f51be811038302e736c5a01eba6dbba5f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69fa742f51be811038302e736c5a01eba6dbba5f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=69fa742f51be811038302e736c5a01eba6dbba5f", "patch": "@@ -1,3 +1,8 @@\n+2016-03-02  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/70028\n+\t* gcc.target/i386/pr70028.c: New test.\n+\n 2016-03-02  Maxim Kuvyrkov  <maxim.kuvyrkov@linaro.org>\n \n \t* c-c++-common/asan/swapcontext-test-1.c,"}, {"sha": "c071aad7403c2128dc7a412cce4f3d7666b1d53d", "filename": "gcc/testsuite/gcc.target/i386/pr70028.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69fa742f51be811038302e736c5a01eba6dbba5f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr70028.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69fa742f51be811038302e736c5a01eba6dbba5f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr70028.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr70028.c?ref=69fa742f51be811038302e736c5a01eba6dbba5f", "patch": "@@ -0,0 +1,19 @@\n+/* PR target/70028 */\n+/* { dg-do assemble { target avx512bw } } */\n+/* { dg-require-effective-target int128 } */\n+/* { dg-require-effective-target masm_intel } */\n+/* { dg-options \"-O2 -fno-forward-propagate -mavx512bw -masm=intel\" } */\n+\n+typedef unsigned short A;\n+typedef int B __attribute__ ((vector_size (32)));\n+typedef unsigned __int128 C;\n+typedef __int128 D __attribute__ ((vector_size (32)));\n+\n+C\n+foo (A a, int b, unsigned c, C d, A e, unsigned f, B g, D h)\n+{\n+  g[1] ^= (A) ~ a;\n+  a ^= (unsigned) g[0];\n+  h %= (D) h | 1;\n+  return a + b + c + d + e + g[0] + g[1] + h[1];\n+}"}]}