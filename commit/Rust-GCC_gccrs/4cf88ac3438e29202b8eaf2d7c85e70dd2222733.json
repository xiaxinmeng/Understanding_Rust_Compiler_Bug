{"sha": "4cf88ac3438e29202b8eaf2d7c85e70dd2222733", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGNmODhhYzM0MzhlMjkyMDJiOGVhZjJkN2M4NWU3MGRkMjIyMjczMw==", "commit": {"author": {"name": "Gabriel Dos Reis", "email": "gdr@integrable-solutions.net", "date": "2005-04-13T00:52:16Z"}, "committer": {"name": "Gabriel Dos Reis", "email": "gdr@gcc.gnu.org", "date": "2005-04-13T00:52:16Z"}, "message": "regex.c (wcs_re_match_2_internal, [...]): Replace not with negate.\n\n        * regex.c (wcs_re_match_2_internal, byte_re_match_2_internal):\n        Replace not with negate.\n\nFrom-SVN: r98062", "tree": {"sha": "89a10dc4578714cb0ab109483aa1d25bad0aab37", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/89a10dc4578714cb0ab109483aa1d25bad0aab37"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4cf88ac3438e29202b8eaf2d7c85e70dd2222733", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4cf88ac3438e29202b8eaf2d7c85e70dd2222733", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4cf88ac3438e29202b8eaf2d7c85e70dd2222733", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4cf88ac3438e29202b8eaf2d7c85e70dd2222733/comments", "author": {"login": "cxx-undef", "id": 5528103, "node_id": "MDQ6VXNlcjU1MjgxMDM=", "avatar_url": "https://avatars.githubusercontent.com/u/5528103?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cxx-undef", "html_url": "https://github.com/cxx-undef", "followers_url": "https://api.github.com/users/cxx-undef/followers", "following_url": "https://api.github.com/users/cxx-undef/following{/other_user}", "gists_url": "https://api.github.com/users/cxx-undef/gists{/gist_id}", "starred_url": "https://api.github.com/users/cxx-undef/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cxx-undef/subscriptions", "organizations_url": "https://api.github.com/users/cxx-undef/orgs", "repos_url": "https://api.github.com/users/cxx-undef/repos", "events_url": "https://api.github.com/users/cxx-undef/events{/privacy}", "received_events_url": "https://api.github.com/users/cxx-undef/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "43a0798307faaa9f7c2fbd4fd58da46def48da2a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43a0798307faaa9f7c2fbd4fd58da46def48da2a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43a0798307faaa9f7c2fbd4fd58da46def48da2a"}], "stats": {"total": 21, "additions": 13, "deletions": 8}, "files": [{"sha": "bdede48bbc961d46f0ffcee419cf4338242c0b8f", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4cf88ac3438e29202b8eaf2d7c85e70dd2222733/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4cf88ac3438e29202b8eaf2d7c85e70dd2222733/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=4cf88ac3438e29202b8eaf2d7c85e70dd2222733", "patch": "@@ -1,3 +1,8 @@\n+2005-04-12  Gabriel Dos Reis  <gdr@integrable-solutions.net>\n+\n+\t* regex.c (wcs_re_match_2_internal, byte_re_match_2_internal):\n+\tReplace not with negate. \n+\n 2005-04-12  Gabriel Dos Reis  <gdr@integrable-solutions.net>\n \n \t* configure.ac: Check declarations for basename, ffs, asprintf,"}, {"sha": "601bbf14b368d45c88396147d0522b579ab4d14d", "filename": "libiberty/regex.c", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4cf88ac3438e29202b8eaf2d7c85e70dd2222733/libiberty%2Fregex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4cf88ac3438e29202b8eaf2d7c85e70dd2222733/libiberty%2Fregex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fregex.c?ref=4cf88ac3438e29202b8eaf2d7c85e70dd2222733", "patch": "@@ -6172,7 +6172,7 @@ byte_re_match_2_internal (struct re_pattern_buffer *bufp,\n \t    uint32_t nrules;\n # endif /* _LIBC */\n #endif /* WCHAR */\n-\t    boolean not = (re_opcode_t) *(p - 1) == charset_not;\n+\t    boolean negate = (re_opcode_t) *(p - 1) == charset_not;\n \n             DEBUG_PRINT2 (\"EXECUTING charset%s.\\n\", not ? \"_not\" : \"\");\n \t    PREFETCH ();\n@@ -6541,7 +6541,7 @@ byte_re_match_2_internal (struct re_pattern_buffer *bufp,\n \t      if (c == *workp)\n \t\tgoto char_set_matched;\n \n-\t    not = !not;\n+\t    negate = !negate;\n \n \t  char_set_matched:\n \t    if (not) goto fail;\n@@ -6550,11 +6550,11 @@ byte_re_match_2_internal (struct re_pattern_buffer *bufp,\n                bit list is a full 32 bytes long.  */\n \t    if (c < (unsigned) (*p * BYTEWIDTH)\n \t\t&& p[1 + c / BYTEWIDTH] & (1 << (c % BYTEWIDTH)))\n-\t      not = !not;\n+\t      negate = !negate;\n \n \t    p += 1 + *p;\n \n-\t    if (!not) goto fail;\n+\t    if (!negate) goto fail;\n #undef WORK_BUFFER_SIZE\n #endif /* WCHAR */\n \t    SET_REGS_MATCHED ();\n@@ -7044,15 +7044,15 @@ byte_re_match_2_internal (struct re_pattern_buffer *bufp,\n \t\telse if ((re_opcode_t) p1[3] == charset\n \t\t\t || (re_opcode_t) p1[3] == charset_not)\n \t\t  {\n-\t\t    int not = (re_opcode_t) p1[3] == charset_not;\n+\t\t    int negate = (re_opcode_t) p1[3] == charset_not;\n \n \t\t    if (c < (unsigned) (p1[4] * BYTEWIDTH)\n \t\t\t&& p1[5 + c / BYTEWIDTH] & (1 << (c % BYTEWIDTH)))\n-\t\t      not = !not;\n+\t\t      negate = !negate;\n \n-                    /* `not' is equal to 1 if c would match, which means\n+                    /* `negate' is equal to 1 if c would match, which means\n                         that we can't change to pop_failure_jump.  */\n-\t\t    if (!not)\n+\t\t    if (!negate)\n                       {\n   \t\t        p[-3] = (unsigned char) pop_failure_jump;\n                         DEBUG_PRINT1 (\"  No match => pop_failure_jump.\\n\");"}]}