{"sha": "2fd58acb350822b9b9fd4dc92fc924f5a53a30b4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmZkNThhY2IzNTA4MjJiOWI5ZmQ0ZGM5MmZjOTI0ZjVhNTNhMzBiNA==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2000-01-18T23:02:03Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2000-01-18T23:02:03Z"}, "message": "vax-protos.h: New file.\n\n        * vax-protos.h: New file.\n\n        * vax.c: Fix compile time warnings.\n\n        * vax.h: Move prototypes to vax-protos.h.  Fix compile time\n        warnings.\n\n        * vax.md: Likewise.\n\n        * vaxv.md: Likewise.\n\nFrom-SVN: r31493", "tree": {"sha": "ba40d45eb5be35e82bc994a14526b687dcbe4f38", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ba40d45eb5be35e82bc994a14526b687dcbe4f38"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2fd58acb350822b9b9fd4dc92fc924f5a53a30b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2fd58acb350822b9b9fd4dc92fc924f5a53a30b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2fd58acb350822b9b9fd4dc92fc924f5a53a30b4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2fd58acb350822b9b9fd4dc92fc924f5a53a30b4/comments", "author": null, "committer": null, "parents": [{"sha": "13d516d91a9f6c73ac3d174804a7004b51a17787", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13d516d91a9f6c73ac3d174804a7004b51a17787", "html_url": "https://github.com/Rust-GCC/gccrs/commit/13d516d91a9f6c73ac3d174804a7004b51a17787"}], "stats": {"total": 93, "additions": 76, "deletions": 17}, "files": [{"sha": "f541f0a0fd1a9bb7ac567096ea9a4f72724c5f1d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fd58acb350822b9b9fd4dc92fc924f5a53a30b4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fd58acb350822b9b9fd4dc92fc924f5a53a30b4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2fd58acb350822b9b9fd4dc92fc924f5a53a30b4", "patch": "@@ -1,3 +1,16 @@\n+2000-01-18  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* vax-protos.h: New file.\n+\n+\t* vax.c: Fix compile time warnings.\n+\t\n+\t* vax.h: Move prototypes to vax-protos.h.  Fix compile time\n+\twarnings.\n+\n+\t* vax.md: Likewise.\n+\n+\t* vaxv.md: Likewise.\n+\n 2000-01-18  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* romp-protos.h: New file."}, {"sha": "f770871957ff5ff5d78a360975e20e3c52d88a73", "filename": "gcc/config/vax/vax-protos.h", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fd58acb350822b9b9fd4dc92fc924f5a53a30b4/gcc%2Fconfig%2Fvax%2Fvax-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fd58acb350822b9b9fd4dc92fc924f5a53a30b4/gcc%2Fconfig%2Fvax%2Fvax-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvax%2Fvax-protos.h?ref=2fd58acb350822b9b9fd4dc92fc924f5a53a30b4", "patch": "@@ -0,0 +1,38 @@\n+/* Definitions of target machine for GNU compiler.  Vax version.\n+   Copyright (C) 2000 Free Software Foundation, Inc.\n+\n+This file is part of GNU CC.\n+\n+GNU CC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU CC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU CC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 59 Temple Place - Suite 330,\n+Boston, MA 02111-1307, USA.  */\n+\n+#ifdef RTX_CODE\n+extern const char *rev_cond_name PARAMS ((rtx));\n+extern void split_quadword_operands PARAMS ((rtx *, rtx *, int));\n+extern void print_operand_address PARAMS ((FILE *, rtx));\n+extern int vax_float_literal PARAMS ((rtx));\n+extern int vax_address_cost PARAMS ((rtx));\n+extern int vax_rtx_cost PARAMS ((rtx));\n+#endif /* RTX_CODE */\n+\n+#ifdef REAL_VALUE_TYPE\n+extern int check_float_value PARAMS ((enum machine_mode, REAL_VALUE_TYPE *, int));\n+#endif /* REAL_VALUE_TYPE */\n+\n+#ifdef TREE_CODE\n+extern void vms_check_external PARAMS ((tree, const char *, int));\n+#endif /* TREE_CODE */\n+\n+extern void vms_flush_pending_externals PARAMS ((FILE *));"}, {"sha": "1ccc3eb7b6ae529aae9fd622bfa29c69cdd82161", "filename": "gcc/config/vax/vax.c", "status": "modified", "additions": 17, "deletions": 8, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fd58acb350822b9b9fd4dc92fc924f5a53a30b4/gcc%2Fconfig%2Fvax%2Fvax.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fd58acb350822b9b9fd4dc92fc924f5a53a30b4/gcc%2Fconfig%2Fvax%2Fvax.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvax%2Fvax.c?ref=2fd58acb350822b9b9fd4dc92fc924f5a53a30b4", "patch": "@@ -1,5 +1,5 @@\n /* Subroutines for insn-output.c for Vax.\n-   Copyright (C) 1987, 94, 95, 97, 98, 1999 Free Software Foundation, Inc.\n+   Copyright (C) 1987, 94, 95, 97-99, 2000 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -33,13 +33,14 @@ Boston, MA 02111-1307, USA.  */\n #ifdef VMS_TARGET\n #include \"tree.h\"\n #endif\n+#include \"tm_p.h\"\n \n /* This is like nonimmediate_operand with a restriction on the type of MEM.  */\n \n void\n split_quadword_operands (operands, low, n)\n      rtx *operands, *low;\n-     int n;\n+     int n ATTRIBUTE_UNUSED;\n {\n   int i;\n   /* Split operands.  */\n@@ -68,11 +69,12 @@ split_quadword_operands (operands, low, n)\n     }\n }\n \f\n+void\n print_operand_address (file, addr)\n      FILE *file;\n      register rtx addr;\n {\n-  register rtx reg1, reg2, breg, ireg;\n+  register rtx reg1, breg, ireg;\n   rtx offset;\n \n  retry:\n@@ -250,7 +252,7 @@ print_operand_address (file, addr)\n     }\n }\n \f\n-char *\n+const char *\n rev_cond_name (op)\n      rtx op;\n {\n@@ -287,8 +289,10 @@ vax_float_literal(c)\n     register rtx c;\n {\n   register enum machine_mode mode;\n+#if HOST_FLOAT_FORMAT == VAX_FLOAT_FORMAT\n   int i;\n   union {double d; int i[2];} val;\n+#endif\n \n   if (GET_CODE (c) != CONST_DOUBLE)\n     return 0;\n@@ -324,7 +328,8 @@ vax_float_literal(c)\n    2 - indirect */\n \n \n-int vax_address_cost(addr)\n+int\n+vax_address_cost (addr)\n     register rtx addr;\n {\n   int reg = 0, indexed = 0, indir = 0, offset = 0, predec = 0;\n@@ -366,6 +371,8 @@ int vax_address_cost(addr)\n       indir = 2;\t/* 3 on VAX 2 */\n       addr = XEXP (addr, 0);\n       goto restart;\n+    default:\n+      break;\n     }\n \n   /* Up to 3 things can be added in an address.  They are stored in\n@@ -428,6 +435,8 @@ vax_rtx_cost (x)\n \tcase QImode:\n \t  c = 10;\t\t/* 3-4 on VAX 9000, 20-28 on VAX 2 */\n \t  break;\n+\tdefault:\n+\t  break;\n \t}\n       break;\n     case UDIV:\n@@ -583,7 +592,7 @@ vax_rtx_cost (x)\n \n /* Check a `double' value for validity for a particular machine mode.  */\n \n-static char *float_strings[] =\n+static const char *const float_strings[] =\n {\n    \"1.70141173319264430e+38\", /* 2^127 (2^24 - 1) / 2^24 */\n   \"-1.70141173319264430e+38\",\n@@ -662,7 +671,7 @@ check_float_value (mode, d, overflow)\n static\n struct extern_list {\n   struct extern_list *next;\t/* next external */\n-  char *name;\t\t\t/* name of the external */\n+  const char *name;\t\t/* name of the external */\n   int size;\t\t\t/* external's actual size */\n   int in_const;\t\t\t/* section type flag */\n } *extern_head = 0, *pending_head = 0;\n@@ -673,7 +682,7 @@ struct extern_list {\n void\n vms_check_external (decl, name, pending)\n      tree decl;\n-     char *name;\n+     const char *name;\n      int pending;\n {\n   register struct extern_list *p, *p0;"}, {"sha": "db61a50a52b6cc119bf1dd8227a419799c16268f", "filename": "gcc/config/vax/vax.h", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fd58acb350822b9b9fd4dc92fc924f5a53a30b4/gcc%2Fconfig%2Fvax%2Fvax.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fd58acb350822b9b9fd4dc92fc924f5a53a30b4/gcc%2Fconfig%2Fvax%2Fvax.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvax%2Fvax.h?ref=2fd58acb350822b9b9fd4dc92fc924f5a53a30b4", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GNU compiler.  Vax version.\n-   Copyright (C) 1987, 88, 91, 93-98, 1999 Free Software Foundation, Inc.\n+   Copyright (C) 1987, 88, 91, 93-99, 2000 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -258,7 +258,7 @@ enum reg_class { NO_REGS, ALL_REGS, LIM_REG_CLASSES };\n    This is an initializer for a vector of HARD_REG_SET\n    of length N_REG_CLASSES.  */\n \n-#define REG_CLASS_CONTENTS {0, 0xffff}\n+#define REG_CLASS_CONTENTS {{0}, {0xffff}}\n \n /* The same information, inverted:\n    Return the class number of the smallest class containing\n@@ -1270,8 +1270,7 @@ VAX operand formatting codes:\n   ((CODE) == '#')\n \n #define PRINT_OPERAND(FILE, X, CODE)  \\\n-{ extern char *rev_cond_name ();\t\t\t\t\t\\\n-  if (CODE == '#') fputc (ASM_DOUBLE_CHAR, FILE);\t\t\t\\\n+{ if (CODE == '#') fputc (ASM_DOUBLE_CHAR, FILE);\t\t\t\\\n   else if (CODE == 'C')\t\t\t\t\t\t\t\\\n     fputs (rev_cond_name (X), FILE);\t\t\t\t\t\\\n   else if (CODE == 'D' && GET_CODE (X) == CONST_INT && INTVAL (X) < 0)\t\\"}, {"sha": "9097b1cc9dacdc329bac82bb9d74ef04dcf136ec", "filename": "gcc/config/vax/vax.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fd58acb350822b9b9fd4dc92fc924f5a53a30b4/gcc%2Fconfig%2Fvax%2Fvax.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fd58acb350822b9b9fd4dc92fc924f5a53a30b4/gcc%2Fconfig%2Fvax%2Fvax.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvax%2Fvax.md?ref=2fd58acb350822b9b9fd4dc92fc924f5a53a30b4", "patch": "@@ -1,5 +1,5 @@\n ;; Machine description for GNU compiler, Vax Version\n-;; Copyright (C) 1987, 88, 91, 94-96, 1998, 1999 Free Software Foundation, Inc.\n+;; Copyright (C) 1987, 88, 91, 94-96, 98, 99, 2000 Free Software Foundation, Inc.\n \n ;; This file is part of GNU CC.\n \n@@ -662,7 +662,7 @@\n   \"*\n {\n   rtx low[3];\n-  char *pattern;\n+  const char *pattern;\n   int carry = 1;\n \n   split_quadword_operands (operands, low, 3);\n@@ -753,7 +753,7 @@\n   \"*\n {\n   rtx low[3];\n-  char *pattern;\n+  const char *pattern;\n   int carry = 1;\n \n   split_quadword_operands (operands, low, 3);"}, {"sha": "ed61d23b8bf8a9d54ba831a98cfe8155351cd0cc", "filename": "gcc/config/vax/vaxv.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fd58acb350822b9b9fd4dc92fc924f5a53a30b4/gcc%2Fconfig%2Fvax%2Fvaxv.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fd58acb350822b9b9fd4dc92fc924f5a53a30b4/gcc%2Fconfig%2Fvax%2Fvaxv.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvax%2Fvaxv.h?ref=2fd58acb350822b9b9fd4dc92fc924f5a53a30b4", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GNU compiler.  Vax sysV version.\n-   Copyright (C) 1988, 1993, 1996 Free Software Foundation, Inc.\n+   Copyright (C) 1988, 1993, 1996, 2000 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -51,7 +51,7 @@ output_file_directive ((FILE), main_input_filename)\n \n #define ASM_OUTPUT_ASCII(FILE,PTR,LEN)\t\t\t\\\n do {\t\t\t\t\t\t\t\\\n-  unsigned char *s;\t\t\t\t\t\\\n+  const unsigned char *s;\t\t\t\t\\\n   int i;\t\t\t\t\t\t\\\n   for (i = 0, s = (PTR); i < (LEN); s++, i++)\t\t\\\n     {\t\t\t\t\t\t\t\\"}]}