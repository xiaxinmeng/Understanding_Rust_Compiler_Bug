{"sha": "0e657ecb98b8413b41975ddfce8e240186720977", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGU2NTdlY2I5OGI4NDEzYjQxOTc1ZGRmY2U4ZTI0MDE4NjcyMDk3Nw==", "commit": {"author": {"name": "Ilya Enkovich", "email": "enkovich.gnu@gmail.com", "date": "2015-11-09T15:11:02Z"}, "committer": {"name": "Ilya Enkovich", "email": "ienkovich@gcc.gnu.org", "date": "2015-11-09T15:11:02Z"}, "message": "optabs.c (expand_vec_cond_expr): Always get sign from type.\n\ngcc/\n\n\t* optabs.c (expand_vec_cond_expr): Always get sign from type.\n\t* tree.c (wide_int_to_tree): Support negative values for boolean.\n\t(build_nonstandard_boolean_type): Use signed type for booleans.\n\nFrom-SVN: r230022", "tree": {"sha": "356c7ce476f9dfc1708d4f64fb523e2a036c35c9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/356c7ce476f9dfc1708d4f64fb523e2a036c35c9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0e657ecb98b8413b41975ddfce8e240186720977", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e657ecb98b8413b41975ddfce8e240186720977", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e657ecb98b8413b41975ddfce8e240186720977", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e657ecb98b8413b41975ddfce8e240186720977/comments", "author": null, "committer": null, "parents": [{"sha": "0b3ecf755196df79c795c8b9bbcb735adbb604d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b3ecf755196df79c795c8b9bbcb735adbb604d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b3ecf755196df79c795c8b9bbcb735adbb604d0"}], "stats": {"total": 13, "additions": 9, "deletions": 4}, "files": [{"sha": "9ee6c72d7118e79ecaf70c95d53f2a8e8fc52257", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e657ecb98b8413b41975ddfce8e240186720977/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e657ecb98b8413b41975ddfce8e240186720977/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0e657ecb98b8413b41975ddfce8e240186720977", "patch": "@@ -1,3 +1,9 @@\n+2015-11-09  Ilya Enkovich  <enkovich.gnu@gmail.com>\n+\n+\t* optabs.c (expand_vec_cond_expr): Always get sign from type.\n+\t* tree.c (wide_int_to_tree): Support negative values for boolean.\n+\t(build_nonstandard_boolean_type): Use signed type for booleans.\n+\n 2015-11-09  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/68248"}, {"sha": "44971ad827fe5851f63469fb6b4638139f0a65f0", "filename": "gcc/optabs.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e657ecb98b8413b41975ddfce8e240186720977/gcc%2Foptabs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e657ecb98b8413b41975ddfce8e240186720977/gcc%2Foptabs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptabs.c?ref=0e657ecb98b8413b41975ddfce8e240186720977", "patch": "@@ -5365,7 +5365,6 @@ expand_vec_cond_expr (tree vec_cond_type, tree op0, tree op1, tree op2,\n       op0a = TREE_OPERAND (op0, 0);\n       op0b = TREE_OPERAND (op0, 1);\n       tcode = TREE_CODE (op0);\n-      unsignedp = TYPE_UNSIGNED (TREE_TYPE (op0a));\n     }\n   else\n     {\n@@ -5374,9 +5373,9 @@ expand_vec_cond_expr (tree vec_cond_type, tree op0, tree op1, tree op2,\n       op0a = op0;\n       op0b = build_zero_cst (TREE_TYPE (op0));\n       tcode = LT_EXPR;\n-      unsignedp = false;\n     }\n   cmp_op_mode = TYPE_MODE (TREE_TYPE (op0a));\n+  unsignedp = TYPE_UNSIGNED (TREE_TYPE (op0a));\n \n \n   gcc_assert (GET_MODE_SIZE (mode) == GET_MODE_SIZE (cmp_op_mode)"}, {"sha": "50e1db019d37788e3a61b97438d6dc2fa563312c", "filename": "gcc/tree.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e657ecb98b8413b41975ddfce8e240186720977/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e657ecb98b8413b41975ddfce8e240186720977/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=0e657ecb98b8413b41975ddfce8e240186720977", "patch": "@@ -1439,7 +1439,7 @@ wide_int_to_tree (tree type, const wide_int_ref &pcst)\n \tcase BOOLEAN_TYPE:\n \t  /* Cache false or true.  */\n \t  limit = 2;\n-\t  if (hwi < 2)\n+\t  if (IN_RANGE (hwi, 0, 1))\n \t    ix = hwi;\n \t  break;\n \n@@ -8072,7 +8072,7 @@ build_nonstandard_boolean_type (unsigned HOST_WIDE_INT precision)\n \n   type = make_node (BOOLEAN_TYPE);\n   TYPE_PRECISION (type) = precision;\n-  fixup_unsigned_type (type);\n+  fixup_signed_type (type);\n \n   if (precision <= MAX_INT_CACHED_PREC)\n     nonstandard_boolean_type_cache[precision] = type;"}]}