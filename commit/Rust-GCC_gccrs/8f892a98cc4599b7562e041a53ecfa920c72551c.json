{"sha": "8f892a98cc4599b7562e041a53ecfa920c72551c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGY4OTJhOThjYzQ1OTliNzU2MmUwNDFhNTNlY2ZhOTIwYzcyNTUxYw==", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2020-04-29T20:15:16Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-07-06T11:35:05Z"}, "message": "[Ada] Set range checks flag on 'Update for GNATprove in expansion\n\ngcc/ada/\n\n\t* exp_spark.adb (Expand_SPARK_N_Attribute_Reference): Apply\n\tscalar range checks.\n\t* sem_attr.adb (Resolve_Attribute): Do not set scalar range\n\tchecks when resolving attribute Update.", "tree": {"sha": "41774e2e1ec10a0caf01d0d23b195c44b4bfd14d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/41774e2e1ec10a0caf01d0d23b195c44b4bfd14d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8f892a98cc4599b7562e041a53ecfa920c72551c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f892a98cc4599b7562e041a53ecfa920c72551c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f892a98cc4599b7562e041a53ecfa920c72551c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f892a98cc4599b7562e041a53ecfa920c72551c/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "977b168196992b3f15d167c2f7d05cec38ac0302", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/977b168196992b3f15d167c2f7d05cec38ac0302", "html_url": "https://github.com/Rust-GCC/gccrs/commit/977b168196992b3f15d167c2f7d05cec38ac0302"}], "stats": {"total": 75, "additions": 47, "deletions": 28}, "files": [{"sha": "1f95aa49aa83cdd65a3b21b9e484739d1451f5e8", "filename": "gcc/ada/exp_spark.adb", "status": "modified", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f892a98cc4599b7562e041a53ecfa920c72551c/gcc%2Fada%2Fexp_spark.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f892a98cc4599b7562e041a53ecfa920c72551c/gcc%2Fada%2Fexp_spark.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_spark.adb?ref=8f892a98cc4599b7562e041a53ecfa920c72551c", "patch": "@@ -251,6 +251,53 @@ package body Exp_SPARK is\n             Analyze_And_Resolve (N, Standard_Boolean);\n          end if;\n \n+      elsif Attr_Id = Attribute_Update then\n+         declare\n+            Aggr : constant Node_Id := First (Expressions (N));\n+            --  The aggregate expression\n+\n+            Assoc     : Node_Id;\n+            Comp      : Node_Id;\n+            Comp_Type : Node_Id;\n+            Expr      : Node_Id;\n+\n+         begin\n+            --  Apply scalar range checks on the updated components, if needed\n+\n+            if Is_Array_Type (Typ) then\n+               Assoc := First (Component_Associations (Aggr));\n+\n+               while Present (Assoc) loop\n+                  Expr      := Expression (Assoc);\n+                  Comp_Type := Component_Type (Typ);\n+\n+                  if Is_Scalar_Type (Comp_Type) then\n+                     Apply_Scalar_Range_Check (Expr, Comp_Type);\n+                  end if;\n+\n+                  Next (Assoc);\n+               end loop;\n+\n+            else pragma Assert (Is_Record_Type (Typ));\n+\n+               Assoc := First (Component_Associations (Aggr));\n+               while Present (Assoc) loop\n+                  Expr      := Expression (Assoc);\n+                  Comp      := First (Choices (Assoc));\n+                  Comp_Type := Etype (Entity (Comp));\n+\n+                  --  Use the type of the first component from the Choices\n+                  --  list, as multiple components can only appear there if\n+                  --  they have exactly the same type.\n+\n+                  if Is_Scalar_Type (Comp_Type) then\n+                     Apply_Scalar_Range_Check (Expr, Comp_Type);\n+                  end if;\n+\n+                  Next (Assoc);\n+               end loop;\n+            end if;\n+         end;\n       end if;\n    end Expand_SPARK_N_Attribute_Reference;\n "}, {"sha": "4f112065abeddbba96e94694296de8382e816b3f", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 0, "deletions": 28, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f892a98cc4599b7562e041a53ecfa920c72551c/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f892a98cc4599b7562e041a53ecfa920c72551c/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=8f892a98cc4599b7562e041a53ecfa920c72551c", "patch": "@@ -11995,26 +11995,6 @@ package body Sem_Attr is\n                   Expr := Expression (Assoc);\n                   Resolve (Expr, Component_Type (Typ));\n \n-                  --  For scalar array components set Do_Range_Check when\n-                  --  needed. Constraint checking on non-scalar components\n-                  --  is done in Aggregate_Constraint_Checks, but only if\n-                  --  full analysis is enabled. These flags are not set in\n-                  --  the front-end in GnatProve mode.\n-\n-                  if Is_Scalar_Type (Component_Type (Typ))\n-                    and then not Is_OK_Static_Expression (Expr)\n-                    and then not Range_Checks_Suppressed (Component_Type (Typ))\n-                  then\n-                     if Is_Entity_Name (Expr)\n-                       and then Etype (Expr) = Component_Type (Typ)\n-                     then\n-                        null;\n-\n-                     else\n-                        Set_Do_Range_Check (Expr);\n-                     end if;\n-                  end if;\n-\n                   --  The choices in the association are static constants,\n                   --  or static aggregates each of whose components belongs\n                   --  to the proper index type. However, they must also\n@@ -12072,14 +12052,6 @@ package body Sem_Attr is\n                     and then not Error_Posted (Comp)\n                   then\n                      Resolve (Expr, Etype (Entity (Comp)));\n-\n-                     if Is_Scalar_Type (Etype (Entity (Comp)))\n-                       and then not Is_OK_Static_Expression (Expr)\n-                       and then not Range_Checks_Suppressed\n-                                      (Etype (Entity (Comp)))\n-                     then\n-                        Set_Do_Range_Check (Expr);\n-                     end if;\n                   end if;\n \n                   Next (Assoc);"}]}