{"sha": "c51b2c8ce3612eb36ed8e76719e5163a7095bf59", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzUxYjJjOGNlMzYxMmViMzZlZDhlNzY3MTllNTE2M2E3MDk1YmY1OQ==", "commit": {"author": {"name": "Tom de Vries", "email": "tdevries@suse.de", "date": "2019-02-10T03:16:09Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2019-02-10T03:16:09Z"}, "message": "[libbacktrace] Add btest_lto\n\nAdd libbacktrace test-case using -flto.\n\n2019-02-10  Tom de Vries  <tdevries@suse.de>\n\n\t* Makefile.am (BUILDTESTS): Add btest_lto.\n\t* Makefile.in: Regenerate.\n\t* btest.c (test1, f2, f3, test3, f22, f23): Declare with\n\t__attribute__((noclone)).\n\nFrom-SVN: r268736", "tree": {"sha": "3c1f9c3fc5814436d38d43e1785d388e77ec5a65", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3c1f9c3fc5814436d38d43e1785d388e77ec5a65"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c51b2c8ce3612eb36ed8e76719e5163a7095bf59", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c51b2c8ce3612eb36ed8e76719e5163a7095bf59", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c51b2c8ce3612eb36ed8e76719e5163a7095bf59", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c51b2c8ce3612eb36ed8e76719e5163a7095bf59/comments", "author": {"login": "vries", "id": 4057235, "node_id": "MDQ6VXNlcjQwNTcyMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vries", "html_url": "https://github.com/vries", "followers_url": "https://api.github.com/users/vries/followers", "following_url": "https://api.github.com/users/vries/following{/other_user}", "gists_url": "https://api.github.com/users/vries/gists{/gist_id}", "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vries/subscriptions", "organizations_url": "https://api.github.com/users/vries/orgs", "repos_url": "https://api.github.com/users/vries/repos", "events_url": "https://api.github.com/users/vries/events{/privacy}", "received_events_url": "https://api.github.com/users/vries/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d21cac18aeb958091db9d4086b8e657235da5d09", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d21cac18aeb958091db9d4086b8e657235da5d09", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d21cac18aeb958091db9d4086b8e657235da5d09"}], "stats": {"total": 110, "additions": 83, "deletions": 27}, "files": [{"sha": "9e0da6353e32db18bdb0c78f04844eda5f8bb14c", "filename": "libbacktrace/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c51b2c8ce3612eb36ed8e76719e5163a7095bf59/libbacktrace%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c51b2c8ce3612eb36ed8e76719e5163a7095bf59/libbacktrace%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2FChangeLog?ref=c51b2c8ce3612eb36ed8e76719e5163a7095bf59", "patch": "@@ -1,3 +1,10 @@\n+2019-02-10  Tom de Vries  <tdevries@suse.de>\n+\n+\t* Makefile.am (BUILDTESTS): Add btest_lto.\n+\t* Makefile.in: Regenerate.\n+\t* btest.c (test1, f2, f3, test3, f22, f23): Declare with\n+\t__attribute__((noclone)).\n+\n 2019-02-08  Tom de Vries  <tdevries@suse.de>\n \n \t* backtrace.c (backtrace_full): Declare with __attribute__((noinline))."}, {"sha": "3b5f6e374d81c2106320ccc35b813d1ac71b5cdd", "filename": "libbacktrace/Makefile.am", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c51b2c8ce3612eb36ed8e76719e5163a7095bf59/libbacktrace%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c51b2c8ce3612eb36ed8e76719e5163a7095bf59/libbacktrace%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2FMakefile.am?ref=c51b2c8ce3612eb36ed8e76719e5163a7095bf59", "patch": "@@ -222,6 +222,16 @@ btest_LDADD = libbacktrace.la\n \n BUILDTESTS += btest\n \n+if HAVE_ELF\n+\n+btest_lto_SOURCES = btest.c testlib.c\n+btest_lto_CFLAGS = $(AM_CFLAGS) -g -O -flto\n+btest_lto_LDADD = libbacktrace.la\n+\n+BUILDTESTS += btest_lto\n+\n+endif HAVE_ELF\n+\n btest_alloc_SOURCES = $(btest_SOURCES)\n btest_alloc_CFLAGS = $(btest_CFLAGS)\n btest_alloc_LDADD = libbacktrace_alloc.la"}, {"sha": "f60aca6463aa0ba8ce33f7b6f1f1987538be323a", "filename": "libbacktrace/Makefile.in", "status": "modified", "additions": 60, "deletions": 21, "changes": 81, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c51b2c8ce3612eb36ed8e76719e5163a7095bf59/libbacktrace%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c51b2c8ce3612eb36ed8e76719e5163a7095bf59/libbacktrace%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2FMakefile.in?ref=c51b2c8ce3612eb36ed8e76719e5163a7095bf59", "patch": "@@ -120,27 +120,29 @@ POST_UNINSTALL = :\n build_triplet = @build@\n host_triplet = @host@\n target_triplet = @target@\n-check_PROGRAMS = $(am__EXEEXT_1) $(am__EXEEXT_2) $(am__EXEEXT_6)\n-TESTS = $(am__append_4) $(am__append_6) $(am__append_7) \\\n-\t$(am__append_8) $(am__append_12) $(am__EXEEXT_6)\n+check_PROGRAMS = $(am__EXEEXT_1) $(am__EXEEXT_2) $(am__EXEEXT_8)\n+TESTS = $(am__append_4) $(am__append_6) $(am__append_9) \\\n+\t$(am__append_10) $(am__append_14) $(am__EXEEXT_8)\n @HAVE_ELF_TRUE@@HAVE_OBJCOPY_DEBUGLINK_TRUE@@NATIVE_TRUE@am__append_1 = libbacktrace_elf_for_test.la\n @NATIVE_TRUE@am__append_2 = test_elf test_xcoff_32 test_xcoff_64 \\\n @NATIVE_TRUE@\ttest_pecoff test_unknown unittest unittest_alloc \\\n-@NATIVE_TRUE@\tbtest btest_alloc stest stest_alloc ztest \\\n-@NATIVE_TRUE@\tztest_alloc edtest edtest_alloc\n+@NATIVE_TRUE@\tbtest\n @NATIVE_TRUE@am__append_3 = allocfail\n @NATIVE_TRUE@am__append_4 = allocfail.sh\n @HAVE_ELF_TRUE@@HAVE_OBJCOPY_DEBUGLINK_TRUE@@NATIVE_TRUE@am__append_5 = b2test \\\n @HAVE_ELF_TRUE@@HAVE_OBJCOPY_DEBUGLINK_TRUE@@NATIVE_TRUE@\tb3test\n @HAVE_ELF_TRUE@@HAVE_OBJCOPY_DEBUGLINK_TRUE@@NATIVE_TRUE@am__append_6 = b2test_buildid \\\n @HAVE_ELF_TRUE@@HAVE_OBJCOPY_DEBUGLINK_TRUE@@NATIVE_TRUE@\tb3test_dwz_buildid\n-@HAVE_DWZ_TRUE@@NATIVE_TRUE@am__append_7 = btest_dwz\n-@HAVE_DWZ_TRUE@@HAVE_OBJCOPY_DEBUGLINK_TRUE@@NATIVE_TRUE@am__append_8 = btest_dwz_gnudebuglink\n-@HAVE_ZLIB_TRUE@@NATIVE_TRUE@am__append_9 = -lz\n-@HAVE_ZLIB_TRUE@@NATIVE_TRUE@am__append_10 = -lz\n-@HAVE_PTHREAD_TRUE@@NATIVE_TRUE@am__append_11 = ttest ttest_alloc\n-@HAVE_OBJCOPY_DEBUGLINK_TRUE@@NATIVE_TRUE@am__append_12 = btest_gnudebuglink\n-@HAVE_COMPRESSED_DEBUG_TRUE@@NATIVE_TRUE@am__append_13 = ctestg ctesta \\\n+@HAVE_ELF_TRUE@@NATIVE_TRUE@am__append_7 = btest_lto\n+@NATIVE_TRUE@am__append_8 = btest_alloc stest stest_alloc ztest \\\n+@NATIVE_TRUE@\tztest_alloc edtest edtest_alloc\n+@HAVE_DWZ_TRUE@@NATIVE_TRUE@am__append_9 = btest_dwz\n+@HAVE_DWZ_TRUE@@HAVE_OBJCOPY_DEBUGLINK_TRUE@@NATIVE_TRUE@am__append_10 = btest_dwz_gnudebuglink\n+@HAVE_ZLIB_TRUE@@NATIVE_TRUE@am__append_11 = -lz\n+@HAVE_ZLIB_TRUE@@NATIVE_TRUE@am__append_12 = -lz\n+@HAVE_PTHREAD_TRUE@@NATIVE_TRUE@am__append_13 = ttest ttest_alloc\n+@HAVE_OBJCOPY_DEBUGLINK_TRUE@@NATIVE_TRUE@am__append_14 = btest_gnudebuglink\n+@HAVE_COMPRESSED_DEBUG_TRUE@@NATIVE_TRUE@am__append_15 = ctestg ctesta \\\n @HAVE_COMPRESSED_DEBUG_TRUE@@NATIVE_TRUE@\tctestg_alloc \\\n @HAVE_COMPRESSED_DEBUG_TRUE@@NATIVE_TRUE@\tctesta_alloc\n subdir = .\n@@ -204,19 +206,21 @@ libbacktrace_noformat_la_OBJECTS =  \\\n @NATIVE_TRUE@am__EXEEXT_3 = test_elf$(EXEEXT) test_xcoff_32$(EXEEXT) \\\n @NATIVE_TRUE@\ttest_xcoff_64$(EXEEXT) test_pecoff$(EXEEXT) \\\n @NATIVE_TRUE@\ttest_unknown$(EXEEXT) unittest$(EXEEXT) \\\n-@NATIVE_TRUE@\tunittest_alloc$(EXEEXT) btest$(EXEEXT) \\\n-@NATIVE_TRUE@\tbtest_alloc$(EXEEXT) stest$(EXEEXT) \\\n+@NATIVE_TRUE@\tunittest_alloc$(EXEEXT) btest$(EXEEXT)\n+@HAVE_ELF_TRUE@@NATIVE_TRUE@am__EXEEXT_4 = btest_lto$(EXEEXT)\n+@NATIVE_TRUE@am__EXEEXT_5 = btest_alloc$(EXEEXT) stest$(EXEEXT) \\\n @NATIVE_TRUE@\tstest_alloc$(EXEEXT) ztest$(EXEEXT) \\\n @NATIVE_TRUE@\tztest_alloc$(EXEEXT) edtest$(EXEEXT) \\\n @NATIVE_TRUE@\tedtest_alloc$(EXEEXT)\n-@HAVE_PTHREAD_TRUE@@NATIVE_TRUE@am__EXEEXT_4 = ttest$(EXEEXT) \\\n+@HAVE_PTHREAD_TRUE@@NATIVE_TRUE@am__EXEEXT_6 = ttest$(EXEEXT) \\\n @HAVE_PTHREAD_TRUE@@NATIVE_TRUE@\tttest_alloc$(EXEEXT)\n-@HAVE_COMPRESSED_DEBUG_TRUE@@NATIVE_TRUE@am__EXEEXT_5 =  \\\n+@HAVE_COMPRESSED_DEBUG_TRUE@@NATIVE_TRUE@am__EXEEXT_7 =  \\\n @HAVE_COMPRESSED_DEBUG_TRUE@@NATIVE_TRUE@\tctestg$(EXEEXT) \\\n @HAVE_COMPRESSED_DEBUG_TRUE@@NATIVE_TRUE@\tctesta$(EXEEXT) \\\n @HAVE_COMPRESSED_DEBUG_TRUE@@NATIVE_TRUE@\tctestg_alloc$(EXEEXT) \\\n @HAVE_COMPRESSED_DEBUG_TRUE@@NATIVE_TRUE@\tctesta_alloc$(EXEEXT)\n-am__EXEEXT_6 = $(am__EXEEXT_3) $(am__EXEEXT_4) $(am__EXEEXT_5)\n+am__EXEEXT_8 = $(am__EXEEXT_3) $(am__EXEEXT_4) $(am__EXEEXT_5) \\\n+\t$(am__EXEEXT_6) $(am__EXEEXT_7)\n @NATIVE_TRUE@am_allocfail_OBJECTS = allocfail.$(OBJEXT) \\\n @NATIVE_TRUE@\ttestlib.$(OBJEXT)\n allocfail_OBJECTS = $(am_allocfail_OBJECTS)\n@@ -253,6 +257,14 @@ btest_alloc_OBJECTS = $(am_btest_alloc_OBJECTS)\n btest_alloc_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\\n \t$(LIBTOOLFLAGS) --mode=link $(CCLD) $(btest_alloc_CFLAGS) \\\n \t$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\n+@HAVE_ELF_TRUE@@NATIVE_TRUE@am_btest_lto_OBJECTS =  \\\n+@HAVE_ELF_TRUE@@NATIVE_TRUE@\tbtest_lto-btest.$(OBJEXT) \\\n+@HAVE_ELF_TRUE@@NATIVE_TRUE@\tbtest_lto-testlib.$(OBJEXT)\n+btest_lto_OBJECTS = $(am_btest_lto_OBJECTS)\n+@HAVE_ELF_TRUE@@NATIVE_TRUE@btest_lto_DEPENDENCIES = libbacktrace.la\n+btest_lto_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\\n+\t$(LIBTOOLFLAGS) --mode=link $(CCLD) $(btest_lto_CFLAGS) \\\n+\t$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\n @HAVE_COMPRESSED_DEBUG_TRUE@@NATIVE_TRUE@am_ctesta_OBJECTS = ctesta-btest.$(OBJEXT) \\\n @HAVE_COMPRESSED_DEBUG_TRUE@@NATIVE_TRUE@\tctesta-testlib.$(OBJEXT)\n ctesta_OBJECTS = $(am_ctesta_OBJECTS)\n@@ -410,7 +422,7 @@ SOURCES = $(libbacktrace_la_SOURCES) $(EXTRA_libbacktrace_la_SOURCES) \\\n \t$(libbacktrace_instrumented_alloc_la_SOURCES) \\\n \t$(libbacktrace_noformat_la_SOURCES) $(allocfail_SOURCES) \\\n \t$(b2test_SOURCES) $(b3test_SOURCES) $(btest_SOURCES) \\\n-\t$(btest_alloc_SOURCES) $(ctesta_SOURCES) \\\n+\t$(btest_alloc_SOURCES) $(btest_lto_SOURCES) $(ctesta_SOURCES) \\\n \t$(ctesta_alloc_SOURCES) $(ctestg_SOURCES) \\\n \t$(ctestg_alloc_SOURCES) $(edtest_SOURCES) \\\n \t$(edtest_alloc_SOURCES) $(stest_SOURCES) \\\n@@ -831,7 +843,8 @@ libbacktrace_la_LIBADD = \\\n libbacktrace_la_DEPENDENCIES = $(libbacktrace_la_LIBADD)\n \n # Add test to this variable, if you want it to be build and run.\n-BUILDTESTS = $(am__append_2) $(am__append_11) $(am__append_13)\n+BUILDTESTS = $(am__append_2) $(am__append_7) $(am__append_8) \\\n+\t$(am__append_13) $(am__append_15)\n @NATIVE_TRUE@check_LTLIBRARIES = libbacktrace_alloc.la \\\n @NATIVE_TRUE@\tlibbacktrace_noformat.la $(am__append_1) \\\n @NATIVE_TRUE@\tlibbacktrace_instrumented_alloc.la\n@@ -880,6 +893,9 @@ BUILDTESTS = $(am__append_2) $(am__append_11) $(am__append_13)\n @NATIVE_TRUE@btest_SOURCES = btest.c testlib.c\n @NATIVE_TRUE@btest_CFLAGS = $(AM_CFLAGS) -g -O\n @NATIVE_TRUE@btest_LDADD = libbacktrace.la\n+@HAVE_ELF_TRUE@@NATIVE_TRUE@btest_lto_SOURCES = btest.c testlib.c\n+@HAVE_ELF_TRUE@@NATIVE_TRUE@btest_lto_CFLAGS = $(AM_CFLAGS) -g -O -flto\n+@HAVE_ELF_TRUE@@NATIVE_TRUE@btest_lto_LDADD = libbacktrace.la\n @NATIVE_TRUE@btest_alloc_SOURCES = $(btest_SOURCES)\n @NATIVE_TRUE@btest_alloc_CFLAGS = $(btest_CFLAGS)\n @NATIVE_TRUE@btest_alloc_LDADD = libbacktrace_alloc.la\n@@ -889,10 +905,10 @@ BUILDTESTS = $(am__append_2) $(am__append_11) $(am__append_13)\n @NATIVE_TRUE@stest_alloc_LDADD = libbacktrace_alloc.la\n @NATIVE_TRUE@ztest_SOURCES = ztest.c testlib.c\n @NATIVE_TRUE@ztest_CFLAGS = -DSRCDIR=\\\"$(srcdir)\\\"\n-@NATIVE_TRUE@ztest_LDADD = libbacktrace.la $(am__append_9) \\\n+@NATIVE_TRUE@ztest_LDADD = libbacktrace.la $(am__append_11) \\\n @NATIVE_TRUE@\t$(CLOCK_GETTIME_LINK)\n @NATIVE_TRUE@ztest_alloc_LDADD = libbacktrace_alloc.la \\\n-@NATIVE_TRUE@\t$(am__append_10) $(CLOCK_GETTIME_LINK)\n+@NATIVE_TRUE@\t$(am__append_12) $(CLOCK_GETTIME_LINK)\n @NATIVE_TRUE@ztest_alloc_SOURCES = $(ztest_SOURCES)\n @NATIVE_TRUE@ztest_alloc_CFLAGS = $(ztest_CFLAGS)\n @NATIVE_TRUE@edtest_SOURCES = edtest.c edtest2_build.c testlib.c\n@@ -1065,6 +1081,10 @@ btest_alloc$(EXEEXT): $(btest_alloc_OBJECTS) $(btest_alloc_DEPENDENCIES) $(EXTRA\n \t@rm -f btest_alloc$(EXEEXT)\n \t$(AM_V_CCLD)$(btest_alloc_LINK) $(btest_alloc_OBJECTS) $(btest_alloc_LDADD) $(LIBS)\n \n+btest_lto$(EXEEXT): $(btest_lto_OBJECTS) $(btest_lto_DEPENDENCIES) $(EXTRA_btest_lto_DEPENDENCIES) \n+\t@rm -f btest_lto$(EXEEXT)\n+\t$(AM_V_CCLD)$(btest_lto_LINK) $(btest_lto_OBJECTS) $(btest_lto_LDADD) $(LIBS)\n+\n ctesta$(EXEEXT): $(ctesta_OBJECTS) $(ctesta_DEPENDENCIES) $(EXTRA_ctesta_DEPENDENCIES) \n \t@rm -f ctesta$(EXEEXT)\n \t$(AM_V_CCLD)$(ctesta_LINK) $(ctesta_OBJECTS) $(ctesta_LDADD) $(LIBS)\n@@ -1204,6 +1224,18 @@ btest_alloc-testlib.o: testlib.c\n btest_alloc-testlib.obj: testlib.c\n \t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(btest_alloc_CFLAGS) $(CFLAGS) -c -o btest_alloc-testlib.obj `if test -f 'testlib.c'; then $(CYGPATH_W) 'testlib.c'; else $(CYGPATH_W) '$(srcdir)/testlib.c'; fi`\n \n+btest_lto-btest.o: btest.c\n+\t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(btest_lto_CFLAGS) $(CFLAGS) -c -o btest_lto-btest.o `test -f 'btest.c' || echo '$(srcdir)/'`btest.c\n+\n+btest_lto-btest.obj: btest.c\n+\t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(btest_lto_CFLAGS) $(CFLAGS) -c -o btest_lto-btest.obj `if test -f 'btest.c'; then $(CYGPATH_W) 'btest.c'; else $(CYGPATH_W) '$(srcdir)/btest.c'; fi`\n+\n+btest_lto-testlib.o: testlib.c\n+\t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(btest_lto_CFLAGS) $(CFLAGS) -c -o btest_lto-testlib.o `test -f 'testlib.c' || echo '$(srcdir)/'`testlib.c\n+\n+btest_lto-testlib.obj: testlib.c\n+\t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(btest_lto_CFLAGS) $(CFLAGS) -c -o btest_lto-testlib.obj `if test -f 'testlib.c'; then $(CYGPATH_W) 'testlib.c'; else $(CYGPATH_W) '$(srcdir)/testlib.c'; fi`\n+\n ctesta-btest.o: btest.c\n \t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ctesta_CFLAGS) $(CFLAGS) -c -o ctesta-btest.o `test -f 'btest.c' || echo '$(srcdir)/'`btest.c\n \n@@ -1607,6 +1639,13 @@ btest.log: btest$(EXEEXT)\n \t--log-file $$b.log --trs-file $$b.trs \\\n \t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n \t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\n+btest_lto.log: btest_lto$(EXEEXT)\n+\t@p='btest_lto$(EXEEXT)'; \\\n+\tb='btest_lto'; \\\n+\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n+\t--log-file $$b.log --trs-file $$b.trs \\\n+\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n+\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\n btest_alloc.log: btest_alloc$(EXEEXT)\n \t@p='btest_alloc$(EXEEXT)'; \\\n \tb='btest_alloc'; \\"}, {"sha": "b1c2a2a860d3998cc73952a019bb0b1b52e9ad0a", "filename": "libbacktrace/btest.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c51b2c8ce3612eb36ed8e76719e5163a7095bf59/libbacktrace%2Fbtest.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c51b2c8ce3612eb36ed8e76719e5163a7095bf59/libbacktrace%2Fbtest.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2Fbtest.c?ref=c51b2c8ce3612eb36ed8e76719e5163a7095bf59", "patch": "@@ -48,9 +48,9 @@ POSSIBILITY OF SUCH DAMAGE.  */\n \n /* Test the backtrace function with non-inlined functions.  */\n \n-static int test1 (void) __attribute__ ((noinline, unused));\n-static int f2 (int) __attribute__ ((noinline));\n-static int f3 (int, int) __attribute__ ((noinline));\n+static int test1 (void) __attribute__ ((noinline, noclone, unused));\n+static int f2 (int) __attribute__ ((noinline, noclone));\n+static int f3 (int, int) __attribute__ ((noinline, noclone));\n \n static int\n test1 (void)\n@@ -162,9 +162,9 @@ f13 (int f1line, int f2line)\n \n /* Test the backtrace_simple function with non-inlined functions.  */\n \n-static int test3 (void) __attribute__ ((noinline, unused));\n-static int f22 (int) __attribute__ ((noinline));\n-static int f23 (int, int) __attribute__ ((noinline));\n+static int test3 (void) __attribute__ ((noinline, noclone, unused));\n+static int f22 (int) __attribute__ ((noinline, noclone));\n+static int f23 (int, int) __attribute__ ((noinline, noclone));\n \n static int\n test3 (void)"}]}