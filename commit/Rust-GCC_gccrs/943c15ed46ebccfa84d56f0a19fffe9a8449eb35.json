{"sha": "943c15ed46ebccfa84d56f0a19fffe9a8449eb35", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTQzYzE1ZWQ0NmViY2NmYTg0ZDU2ZjBhMTlmZmZlOWE4NDQ5ZWIzNQ==", "commit": {"author": {"name": "David Edelsohn", "email": "edelsohn@gnu.org", "date": "2004-11-10T21:57:14Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2004-11-10T21:57:14Z"}, "message": "rs6000.md (define_attr \"type\"): Add two and three.\n\n        * config/rs6000/rs6000.md (define_attr \"type\"): Add two and three.\n        Change multi-instruction sequences to new attribute.\n        * config/rs6000/{40x.md,440.md,603.md,6xx.md,\n        7450.md,7xx.md,8540.md,mpc.md,power4.md,power5.md,\n        rios1.md,rios2.md,rs64.md}: Add descriptions for two and three.\n\nFrom-SVN: r90456", "tree": {"sha": "113f4145c1ea91456f26bfeb989b16ed4c0d5230", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/113f4145c1ea91456f26bfeb989b16ed4c0d5230"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/943c15ed46ebccfa84d56f0a19fffe9a8449eb35", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/943c15ed46ebccfa84d56f0a19fffe9a8449eb35", "html_url": "https://github.com/Rust-GCC/gccrs/commit/943c15ed46ebccfa84d56f0a19fffe9a8449eb35", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/943c15ed46ebccfa84d56f0a19fffe9a8449eb35/comments", "author": null, "committer": null, "parents": [{"sha": "8b41b1b24fa17fc41a28c4466b1dcd8d9fdcb170", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b41b1b24fa17fc41a28c4466b1dcd8d9fdcb170", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b41b1b24fa17fc41a28c4466b1dcd8d9fdcb170"}], "stats": {"total": 275, "additions": 234, "deletions": 41}, "files": [{"sha": "a3f0026371e0f0641ce66630ca7066ddf5de1b01", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/943c15ed46ebccfa84d56f0a19fffe9a8449eb35/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/943c15ed46ebccfa84d56f0a19fffe9a8449eb35/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=943c15ed46ebccfa84d56f0a19fffe9a8449eb35", "patch": "@@ -1,3 +1,11 @@\n+2004-11-10  David Edelsohn  <edelsohn@gnu.org>\n+\n+\t* config/rs6000/rs6000.md (define_attr \"type\"): Add two and three.\n+\tChange multi-instruction sequences to new attribute.\n+\t* config/rs6000/{40x.md,440.md,603.md,6xx.md,\n+\t7450.md,7xx.md,8540.md,mpc.md,power4.md,power5.md,\n+\trios1.md,rios2.md,rs64.md}: Add descriptions for two and three.\n+\n 2004-11-10  Daniel Berlin  <dberlin@dberlin.org>\n \n \t* tree-data-ref.c (build_classic_dist_vector): If either loop"}, {"sha": "9e51bea096f53c09a36f98493e47a4937eca461a", "filename": "gcc/config/rs6000/40x.md", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/943c15ed46ebccfa84d56f0a19fffe9a8449eb35/gcc%2Fconfig%2Frs6000%2F40x.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/943c15ed46ebccfa84d56f0a19fffe9a8449eb35/gcc%2Fconfig%2Frs6000%2F40x.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2F40x.md?ref=943c15ed46ebccfa84d56f0a19fffe9a8449eb35", "patch": "@@ -41,6 +41,16 @@\n        (eq_attr \"cpu\" \"ppc403,ppc405\"))\n   \"iu_40x\")\n \n+(define_insn_reservation \"ppc403-two\" 1\n+  (and (eq_attr \"type\" \"two\")\n+       (eq_attr \"cpu\" \"ppc403,ppc405\"))\n+  \"iu_40x,iu_40x\")\n+\n+(define_insn_reservation \"ppc403-three\" 1\n+  (and (eq_attr \"type\" \"three\")\n+       (eq_attr \"cpu\" \"ppc403,ppc405\"))\n+  \"iu_40x,iu_40x,iu_40x\")\n+\n (define_insn_reservation \"ppc403-compare\" 3\n   (and (eq_attr \"type\" \"cmp,fast_compare,compare,delayed_compare\")\n        (eq_attr \"cpu\" \"ppc403,ppc405\"))"}, {"sha": "1402f3d74b7846426eec13fd16f8a2cd3ee5c415", "filename": "gcc/config/rs6000/440.md", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/943c15ed46ebccfa84d56f0a19fffe9a8449eb35/gcc%2Fconfig%2Frs6000%2F440.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/943c15ed46ebccfa84d56f0a19fffe9a8449eb35/gcc%2Fconfig%2Frs6000%2F440.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2F440.md?ref=943c15ed46ebccfa84d56f0a19fffe9a8449eb35", "patch": "@@ -58,6 +58,18 @@\n        (eq_attr \"cpu\" \"ppc440\"))\n   \"ppc440_issue,ppc440_i_pipe|ppc440_j_pipe\")\n \n+(define_insn_reservation \"ppc440-two\" 1\n+  (and (eq_attr \"type\" \"two\")\n+       (eq_attr \"cpu\" \"ppc440\"))\n+  \"ppc440_issue_0+ppc440_issue_1,\\\n+   ppc440_i_pipe|ppc440_j_pipe,ppc440_i_pipe|ppc440_j_pipe\")\n+\n+(define_insn_reservation \"ppc440-three\" 1\n+  (and (eq_attr \"type\" \"three\")\n+       (eq_attr \"cpu\" \"ppc440\"))\n+  \"ppc440_issue_0+ppc440_issue_1,ppc440_i_pipe|ppc440_j_pipe,\\\n+   ppc440_i_pipe|ppc440_j_pipe,ppc440_i_pipe|ppc440_j_pipe\")\n+\n (define_insn_reservation \"ppc440-imul\" 3\n   (and (eq_attr \"type\" \"imul,imul_compare\")\n        (eq_attr \"cpu\" \"ppc440\"))"}, {"sha": "72a8a95c2f6128772a0c88ccc3a3b365b940b541", "filename": "gcc/config/rs6000/603.md", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/943c15ed46ebccfa84d56f0a19fffe9a8449eb35/gcc%2Fconfig%2Frs6000%2F603.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/943c15ed46ebccfa84d56f0a19fffe9a8449eb35/gcc%2Fconfig%2Frs6000%2F603.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2F603.md?ref=943c15ed46ebccfa84d56f0a19fffe9a8449eb35", "patch": "@@ -58,6 +58,16 @@\n        (eq_attr \"cpu\" \"ppc603\"))\n   \"iu_603\")\n \n+(define_insn_reservation \"ppc603-two\" 1\n+  (and (eq_attr \"type\" \"two\")\n+       (eq_attr \"cpu\" \"ppc603\"))\n+  \"iu_603,iu_603\")\n+\n+(define_insn_reservation \"ppc603-three\" 1\n+  (and (eq_attr \"type\" \"three\")\n+       (eq_attr \"cpu\" \"ppc603\"))\n+  \"iu_603,iu_603,iu_603\")\n+\n ; This takes 2 or 3 cycles\n (define_insn_reservation \"ppc603-imul\" 3\n   (and (eq_attr \"type\" \"imul,imul_compare\")"}, {"sha": "2647661923e322f241b756aeb97ead974e2f369e", "filename": "gcc/config/rs6000/6xx.md", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/943c15ed46ebccfa84d56f0a19fffe9a8449eb35/gcc%2Fconfig%2Frs6000%2F6xx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/943c15ed46ebccfa84d56f0a19fffe9a8449eb35/gcc%2Fconfig%2Frs6000%2F6xx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2F6xx.md?ref=943c15ed46ebccfa84d56f0a19fffe9a8449eb35", "patch": "@@ -68,6 +68,16 @@\n        (eq_attr \"cpu\" \"ppc604,ppc604e,ppc620,ppc630\"))\n   \"iu1_6xx|iu2_6xx\")\n \n+(define_insn_reservation \"ppc604-two\" 1\n+  (and (eq_attr \"type\" \"two\")\n+       (eq_attr \"cpu\" \"ppc604,ppc604e,ppc620,ppc630\"))\n+  \"iu1_6xx|iu2_6xx,iu1_6xx|iu2_6xx\")\n+\n+(define_insn_reservation \"ppc604-three\" 1\n+  (and (eq_attr \"type\" \"three\")\n+       (eq_attr \"cpu\" \"ppc604,ppc604e,ppc620,ppc630\"))\n+  \"iu1_6xx|iu2_6xx,iu1_6xx|iu2_6xx,iu1_6xx|iu2_6xx\")\n+\n (define_insn_reservation \"ppc604-imul\" 4\n   (and (eq_attr \"type\" \"imul,imul2,imul3,imul_compare\")\n        (eq_attr \"cpu\" \"ppc604\"))"}, {"sha": "1b912dd1144ad74f8edc0c6e7f23e16fa67c24dd", "filename": "gcc/config/rs6000/7450.md", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/943c15ed46ebccfa84d56f0a19fffe9a8449eb35/gcc%2Fconfig%2Frs6000%2F7450.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/943c15ed46ebccfa84d56f0a19fffe9a8449eb35/gcc%2Fconfig%2Frs6000%2F7450.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2F7450.md?ref=943c15ed46ebccfa84d56f0a19fffe9a8449eb35", "patch": "@@ -67,7 +67,18 @@\n (define_insn_reservation \"ppc7450-integer\" 1\n   (and (eq_attr \"type\" \"integer,insert_word\")\n        (eq_attr \"cpu\" \"ppc7450\"))\n-  \"ppc7450_du,(iu1_7450|iu2_7450|iu3_7450)\")\n+  \"ppc7450_du,iu1_7450|iu2_7450|iu3_7450\")\n+\n+(define_insn_reservation \"ppc7450-two\" 1\n+  (and (eq_attr \"type\" \"two\")\n+       (eq_attr \"cpu\" \"ppc7450\"))\n+  \"ppc7450_du,iu1_7450|iu2_7450|iu3_7450,iu1_7450|iu2_7450|iu3_7450\")\n+\n+(define_insn_reservation \"ppc7450-three\" 1\n+  (and (eq_attr \"type\" \"three\")\n+       (eq_attr \"cpu\" \"ppc7450\"))\n+  \"ppc7450_du,iu1_7450|iu2_7450|iu3_7450,\\\n+   iu1_7450|iu2_7450|iu3_7450,iu1_7450|iu2_7450|iu3_7450\")\n \n (define_insn_reservation \"ppc7450-imul\" 4\n   (and (eq_attr \"type\" \"imul,imul_compare\")"}, {"sha": "c669d2e6f23dac4855b217bc375ffd881d64302b", "filename": "gcc/config/rs6000/7xx.md", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/943c15ed46ebccfa84d56f0a19fffe9a8449eb35/gcc%2Fconfig%2Frs6000%2F7xx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/943c15ed46ebccfa84d56f0a19fffe9a8449eb35/gcc%2Fconfig%2Frs6000%2F7xx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2F7xx.md?ref=943c15ed46ebccfa84d56f0a19fffe9a8449eb35", "patch": "@@ -61,7 +61,17 @@\n (define_insn_reservation \"ppc750-integer\" 1\n   (and (eq_attr \"type\" \"integer,insert_word\")\n        (eq_attr \"cpu\" \"ppc750,ppc7400\"))\n-  \"ppc750_du,(iu1_7xx|iu2_7xx)\")\n+  \"ppc750_du,iu1_7xx|iu2_7xx\")\n+\n+(define_insn_reservation \"ppc750-two\" 1\n+  (and (eq_attr \"type\" \"two\")\n+       (eq_attr \"cpu\" \"ppc750,ppc7400\"))\n+  \"ppc750_du,iu1_7xx|iu2_7xx,iu1_7xx|iu2_7xx\")\n+\n+(define_insn_reservation \"ppc750-three\" 1\n+  (and (eq_attr \"type\" \"three\")\n+       (eq_attr \"cpu\" \"ppc750,ppc7400\"))\n+  \"ppc750_du,iu1_7xx|iu2_7xx,iu1_7xx|iu2_7xx,iu1_7xx|iu2_7xx\")\n \n (define_insn_reservation \"ppc750-imul\" 4\n   (and (eq_attr \"type\" \"imul,imul_compare\")"}, {"sha": "408fd24d4ef20a4de25ca5e3ce93154d2752a7c7", "filename": "gcc/config/rs6000/8540.md", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/943c15ed46ebccfa84d56f0a19fffe9a8449eb35/gcc%2Fconfig%2Frs6000%2F8540.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/943c15ed46ebccfa84d56f0a19fffe9a8449eb35/gcc%2Fconfig%2Frs6000%2F8540.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2F8540.md?ref=943c15ed46ebccfa84d56f0a19fffe9a8449eb35", "patch": "@@ -89,6 +89,19 @@\n        (eq_attr \"cpu\" \"ppc8540\"))\n   \"ppc8540_decode,ppc8540_issue+ppc8540_su_stage0+ppc8540_retire\")\n \n+(define_insn_reservation \"ppc8540_two\" 1\n+  (and (eq_attr \"type\" \"two\")\n+       (eq_attr \"cpu\" \"ppc8540\"))\n+  \"ppc8540_decode,ppc8540_issue+ppc8540_su_stage0+ppc8540_retire,\\\n+   ppc8540_issue+ppc8540_su_stage0+ppc8540_retire\")\n+\n+(define_insn_reservation \"ppc8540_three\" 1\n+  (and (eq_attr \"type\" \"three\")\n+       (eq_attr \"cpu\" \"ppc8540\"))\n+  \"ppc8540_decode,ppc8540_issue+ppc8540_su_stage0+ppc8540_retire,\\\n+   ppc8540_issue+ppc8540_su_stage0+ppc8540_retire,\\\n+   ppc8540_issue+ppc8540_su_stage0+ppc8540_retire\")\n+\n ;; Branch.  Actually this latency time is not used by the scheduler.\n (define_insn_reservation \"ppc8540_branch\" 1\n   (and (eq_attr \"type\" \"jmpreg,branch\")"}, {"sha": "64fa0861eee052a753cf208c29502dd50943c61d", "filename": "gcc/config/rs6000/mpc.md", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/943c15ed46ebccfa84d56f0a19fffe9a8449eb35/gcc%2Fconfig%2Frs6000%2Fmpc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/943c15ed46ebccfa84d56f0a19fffe9a8449eb35/gcc%2Fconfig%2Frs6000%2Fmpc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fmpc.md?ref=943c15ed46ebccfa84d56f0a19fffe9a8449eb35", "patch": "@@ -46,6 +46,16 @@\n        (eq_attr \"cpu\" \"mpccore\"))\n   \"iu_mpc\")\n \n+(define_insn_reservation \"mpccore-two\" 1\n+  (and (eq_attr \"type\" \"two\")\n+       (eq_attr \"cpu\" \"mpccore\"))\n+  \"iu_mpc,iu_mpc\")\n+\n+(define_insn_reservation \"mpccore-three\" 1\n+  (and (eq_attr \"type\" \"three\")\n+       (eq_attr \"cpu\" \"mpccore\"))\n+  \"iu_mpc,iu_mpc,iu_mpc\")\n+\n (define_insn_reservation \"mpccore-imul\" 2\n   (and (eq_attr \"type\" \"imul,imul2,imul3,imul_compare\")\n        (eq_attr \"cpu\" \"mpccore\"))"}, {"sha": "d6090486b62864e2824cc2c0a7368a673c2d2b4e", "filename": "gcc/config/rs6000/power4.md", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/943c15ed46ebccfa84d56f0a19fffe9a8449eb35/gcc%2Fconfig%2Frs6000%2Fpower4.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/943c15ed46ebccfa84d56f0a19fffe9a8449eb35/gcc%2Fconfig%2Frs6000%2Fpower4.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fpower4.md?ref=943c15ed46ebccfa84d56f0a19fffe9a8449eb35", "patch": "@@ -183,6 +183,26 @@\n        (eq_attr \"cpu\" \"power4\"))\n   \"iq_power4\")\n \n+(define_insn_reservation \"power4-two\" 2\n+  (and (eq_attr \"type\" \"two\")\n+       (eq_attr \"cpu\" \"power4\"))\n+  \"(du1_power4+du2_power4,iu1_power4,nothing,iu2_power4)\\\n+  |(du2_power4+du3_power4,iu2_power4,nothing,iu2_power4)\\\n+  |(du3_power4+du4_power4,iu2_power4,nothing,iu1_power4)\\\n+  |(du4_power4+du1_power4,iu1_power4,nothing,iu1_power4)\")\n+\n+(define_insn_reservation \"power4-three\" 2\n+  (and (eq_attr \"type\" \"three\")\n+       (eq_attr \"cpu\" \"power4\"))\n+  \"(du1_power4+du2_power4+du3_power4,\\\n+    iu1_power4,nothing,iu2_power4,nothing,iu2_power4)\\\n+  |(du2_power4+du3_power4+du4_power4,\\\n+    iu2_power4,nothing,iu2_power4,nothing,iu1_power4)\\\n+  |(du3_power4+du4_power4+du1_power4,\\\n+    iu2_power4,nothing,iu1_power4,nothing,iu1_power4)\\\n+  |(du4_power4+du1_power4+du2_power4,\\\n+    iu1_power4,nothing,iu2_power4,nothing,iu2_power4)\")\n+\n (define_insn_reservation \"power4-insert\" 4\n   (and (eq_attr \"type\" \"insert_word\")\n        (eq_attr \"cpu\" \"power4\"))"}, {"sha": "30ae6c0b69a3f400e22a5dd5e18745ff19043c36", "filename": "gcc/config/rs6000/power5.md", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/943c15ed46ebccfa84d56f0a19fffe9a8449eb35/gcc%2Fconfig%2Frs6000%2Fpower5.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/943c15ed46ebccfa84d56f0a19fffe9a8449eb35/gcc%2Fconfig%2Frs6000%2Fpower5.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fpower5.md?ref=943c15ed46ebccfa84d56f0a19fffe9a8449eb35", "patch": "@@ -142,6 +142,26 @@\n        (eq_attr \"cpu\" \"power5\"))\n   \"iq_power5\")\n \n+(define_insn_reservation \"power5-two\" 2\n+  (and (eq_attr \"type\" \"two\")\n+       (eq_attr \"cpu\" \"power5\"))\n+  \"(du1_power5+du2_power5,iu1_power5,nothing,iu2_power5)\\\n+  |(du2_power5+du3_power5,iu2_power5,nothing,iu2_power5)\\\n+  |(du3_power5+du4_power5,iu2_power5,nothing,iu1_power5)\\\n+  |(du4_power5+du1_power5,iu1_power5,nothing,iu1_power5)\")\n+\n+(define_insn_reservation \"power5-three\" 2\n+  (and (eq_attr \"type\" \"three\")\n+       (eq_attr \"cpu\" \"power5\"))\n+  \"(du1_power5+du2_power5+du3_power5,\\\n+    iu1_power5,nothing,iu2_power5,nothing,iu2_power5)\\\n+  |(du2_power5+du3_power5+du4_power5,\\\n+    iu2_power5,nothing,iu2_power5,nothing,iu1_power5)\\\n+  |(du3_power5+du4_power5+du1_power5,\\\n+    iu2_power5,nothing,iu1_power5,nothing,iu1_power5)\\\n+  |(du4_power5+du1_power5+du2_power5,\\\n+    iu1_power5,nothing,iu2_power5,nothing,iu2_power5)\")\n+\n (define_insn_reservation \"power5-insert\" 4\n   (and (eq_attr \"type\" \"insert_word\")\n        (eq_attr \"cpu\" \"power5\"))"}, {"sha": "d36e99f327cd280d236a9be2c9f38634b148125b", "filename": "gcc/config/rs6000/rios1.md", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/943c15ed46ebccfa84d56f0a19fffe9a8449eb35/gcc%2Fconfig%2Frs6000%2Frios1.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/943c15ed46ebccfa84d56f0a19fffe9a8449eb35/gcc%2Fconfig%2Frs6000%2Frios1.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frios1.md?ref=943c15ed46ebccfa84d56f0a19fffe9a8449eb35", "patch": "@@ -55,6 +55,16 @@\n        (eq_attr \"cpu\" \"rios1,ppc601\"))\n   \"iu_rios1\")\n \n+(define_insn_reservation \"rios1-two\" 1\n+  (and (eq_attr \"type\" \"two\")\n+       (eq_attr \"cpu\" \"rios1,ppc601\"))\n+  \"iu_rios1,iu_rios1\")\n+\n+(define_insn_reservation \"rios1-three\" 1\n+  (and (eq_attr \"type\" \"three\")\n+       (eq_attr \"cpu\" \"rios1,ppc601\"))\n+  \"iu_rios1,iu_rios1,iu_rios1\")\n+\n (define_insn_reservation \"rios1-imul\" 5\n   (and (eq_attr \"type\" \"imul,imul_compare\")\n        (eq_attr \"cpu\" \"rios1\"))"}, {"sha": "6fa93a49fbc2f3a557d32179c03704d450b3ffbb", "filename": "gcc/config/rs6000/rios2.md", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/943c15ed46ebccfa84d56f0a19fffe9a8449eb35/gcc%2Fconfig%2Frs6000%2Frios2.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/943c15ed46ebccfa84d56f0a19fffe9a8449eb35/gcc%2Fconfig%2Frs6000%2Frios2.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frios2.md?ref=943c15ed46ebccfa84d56f0a19fffe9a8449eb35", "patch": "@@ -43,6 +43,16 @@\n        (eq_attr \"cpu\" \"rios2\"))\n   \"iu1_rios2|iu2_rios2\")\n \n+(define_insn_reservation \"rios2-two\" 1\n+  (and (eq_attr \"type\" \"two\")\n+       (eq_attr \"cpu\" \"rios2\"))\n+  \"iu1_rios2|iu2_rios2,iu1_rios2|iu2_rios2\")\n+\n+(define_insn_reservation \"rios2-three\" 1\n+  (and (eq_attr \"type\" \"three\")\n+       (eq_attr \"cpu\" \"rios2\"))\n+  \"iu1_rios2|iu2_rios2,iu1_rios2|iu2_rios2,iu1_rios2|iu2_rios2\")\n+\n (define_insn_reservation \"rios2-imul\" 2\n   (and (eq_attr \"type\" \"imul,imul2,imul3,imul_compare\")\n        (eq_attr \"cpu\" \"rios2\"))"}, {"sha": "9c6f08847af8101422db3038a6b039c4c00386fa", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 68, "deletions": 39, "changes": 107, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/943c15ed46ebccfa84d56f0a19fffe9a8449eb35/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/943c15ed46ebccfa84d56f0a19fffe9a8449eb35/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=943c15ed46ebccfa84d56f0a19fffe9a8449eb35", "patch": "@@ -64,7 +64,7 @@\n \f\n ;; Define an insn type attribute.  This is used in function unit delay\n ;; computations.\n-(define_attr \"type\" \"integer,load,load_ext,load_ext_u,load_ext_ux,load_ux,load_u,store,store_ux,store_u,fpload,fpload_ux,fpload_u,fpstore,fpstore_ux,fpstore_u,vecload,vecstore,imul,imul2,imul3,lmul,idiv,ldiv,insert_word,branch,cmp,fast_compare,compare,delayed_compare,imul_compare,lmul_compare,fpcompare,cr_logical,delayed_cr,mfcr,mfcrf,mtcr,mfjmpr,mtjmpr,fp,fpsimple,dmul,sdiv,ddiv,ssqrt,dsqrt,jmpreg,brinc,vecsimple,veccomplex,vecdiv,veccmp,veccmpsimple,vecperm,vecfloat,vecfdiv\"\n+(define_attr \"type\" \"integer,two,three,load,load_ext,load_ext_u,load_ext_ux,load_ux,load_u,store,store_ux,store_u,fpload,fpload_ux,fpload_u,fpstore,fpstore_ux,fpstore_u,vecload,vecstore,imul,imul2,imul3,lmul,idiv,ldiv,insert_word,branch,cmp,fast_compare,compare,delayed_compare,imul_compare,lmul_compare,fpcompare,cr_logical,delayed_cr,mfcr,mfcrf,mtcr,mfjmpr,mtjmpr,fp,fpsimple,dmul,sdiv,ddiv,ssqrt,dsqrt,jmpreg,brinc,vecsimple,veccomplex,vecdiv,veccmp,veccmpsimple,vecperm,vecfloat,vecfdiv\"\n   (const_string \"integer\"))\n \n ;; Length (in bytes).\n@@ -1976,7 +1976,8 @@\n \t\t(match_operand:SI 2 \"exact_log2_cint_operand\" \"N\")))]\n   \"\"\n   \"{srai|srawi} %0,%1,%p2\\;{aze|addze} %0,%0\"\n-  [(set_attr \"length\" \"8\")])\n+  [(set_attr \"type\" \"two\")\n+   (set_attr \"length\" \"8\")])\n \n (define_insn \"\"\n   [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,?y\")\n@@ -5483,7 +5484,8 @@\n \t    ? \\\"{a|addc} %0,%1,%2\\;{ae|adde} %L0,%L1,%L2\\\"\n \t    : \\\"{ai|addic} %0,%1,%2\\;{a%G2e|add%G2e} %L0,%L1\\\";\n }\"\n-  [(set_attr \"length\" \"8\")])\n+  [(set_attr \"type\" \"two\")\n+   (set_attr \"length\" \"8\")])\n \n (define_insn \"*subdi3_noppc64\"\n   [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=&r,&r,r,r,r\")\n@@ -5501,7 +5503,8 @@\n \t    ? \\\"{sf|subfc} %0,%2,%1\\;{sfe|subfe} %L0,%L2,%L1\\\"\n \t    : \\\"{sfi|subfic} %0,%2,%1\\;{sf%G1e|subf%G1e} %L0,%L2\\\";\n }\"\n-  [(set_attr \"length\" \"8\")])\n+  [(set_attr \"type\" \"two\")\n+   (set_attr \"length\" \"8\")])\n \n (define_insn \"*negdi2_noppc64\"\n   [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=&r,r\")\n@@ -5513,7 +5516,8 @@\n     ? \\\"{sfi|subfic} %L0,%L1,0\\;{sfze|subfze} %0,%1\\\"\n     : \\\"{sfi|subfic} %0,%1,0\\;{sfze|subfze} %L0,%L1\\\";\n }\"\n-  [(set_attr \"length\" \"8\")])\n+  [(set_attr \"type\" \"two\")\n+   (set_attr \"length\" \"8\")])\n \n (define_expand \"mulsidi3\"\n   [(set (match_operand:DI 0 \"gpc_reg_operand\" \"\")\n@@ -5796,7 +5800,8 @@\n   \"@\n    {srai|srawi} %0,%1,31\\;{srai|srawi} %L0,%1,%h2\n    {sri|srwi} %L0,%L1,%h2\\;insrwi %L0,%1,%h2,0\\;{srai|srawi} %0,%1,%h2\"\n-  [(set_attr \"length\" \"8,12\")])\n+  [(set_attr \"type\" \"two,three\")\n+   (set_attr \"length\" \"8,12\")])\n \n (define_insn \"*ashrdisi3_noppc64\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n@@ -6353,7 +6358,8 @@\n \t\t(match_operand:DI 2 \"exact_log2_cint_operand\" \"N\")))]\n   \"TARGET_POWERPC64\"\n   \"sradi %0,%1,%p2\\;addze %0,%0\"\n-  [(set_attr \"length\" \"8\")])\n+  [(set_attr \"type\" \"two\")\n+   (set_attr \"length\" \"8\")])\n \n (define_insn \"\"\n   [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,?y\")\n@@ -6812,8 +6818,7 @@\n \t(ashift:DI (match_operand:DI 1 \"gpc_reg_operand\" \"r\")\n \t\t   (match_operand:SI 2 \"reg_or_cint_operand\" \"ri\")))]\n   \"TARGET_POWERPC64\"\n-  \"sld%I2 %0,%1,%H2\"\n-  [(set_attr \"length\" \"8\")])\n+  \"sld%I2 %0,%1,%H2\")\n \n (define_insn \"*ashldi3_internal2\"\n   [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,?y\")\n@@ -8184,7 +8189,7 @@\n       return \\\"#\\\";\n     }\n }\"\n-  [(set_attr \"type\" \"*,load,store,fp,fpload,fpstore,*,*,*\")\n+  [(set_attr \"type\" \"two,load,store,fp,fpload,fpstore,*,*,*\")\n    (set_attr \"length\" \"8,16,16,4,4,4,8,12,16\")])\n \n (define_insn \"*movdf_softfloat32\"\n@@ -8225,7 +8230,7 @@\n       return \\\"#\\\";\n     }\n }\"\n-  [(set_attr \"type\" \"*,load,store,*,*,*\")\n+  [(set_attr \"type\" \"two,load,store,*,*,*\")\n    (set_attr \"length\" \"8,8,8,8,12,16\")])\n \n ; ld/std require word-aligned displacements -> 'Y' constraint.\n@@ -11558,7 +11563,8 @@\n    {xoril|xori} %0,%1,%b2\\;{sfi|subfic} %3,%0,0\\;{ae|adde} %0,%3,%0\n    {xoriu|xoris} %0,%1,%u2\\;{sfi|subfic} %3,%0,0\\;{ae|adde} %0,%3,%0\n    {sfi|subfic} %0,%1,%2\\;{sfi|subfic} %3,%0,0\\;{ae|adde} %0,%3,%0\"\n-  [(set_attr \"length\" \"12,8,12,12,12\")])\n+  [(set_attr \"type\" \"three,two,three,three,three\")\n+   (set_attr \"length\" \"12,8,12,12,12\")])\n \n (define_insn \"\"\n   [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=r,r,r,r,r\")\n@@ -11572,7 +11578,8 @@\n    xori %0,%1,%b2\\;subfic %3,%0,0\\;adde %0,%3,%0\n    xoris %0,%1,%u2\\;subfic %3,%0,0\\;adde %0,%3,%0\n    subfic %0,%1,%2\\;subfic %3,%0,0\\;adde %0,%3,%0\"\n-  [(set_attr \"length\" \"12,8,12,12,12\")])\n+  [(set_attr \"type\" \"three,two,three,three,three\")\n+   (set_attr \"length\" \"12,8,12,12,12\")])\n \n (define_insn \"\"\n   [(set (match_operand:CC 4 \"cc_reg_operand\" \"=x,x,x,x,x,?y,?y,?y,?y,?y\")\n@@ -11685,7 +11692,8 @@\n    {xoril|xori} %0,%1,%b2\\;{sfi|subfic} %0,%0,0\\;{aze|addze} %0,%3\n    {xoriu|xoris} %0,%1,%u2\\;{sfi|subfic} %0,%0,0\\;{aze|addze} %0,%3\n    {sfi|subfic} %0,%1,%2\\;{sfi|subfic} %0,%0,0\\;{aze|addze} %0,%3\"\n-  [(set_attr \"length\" \"12,8,12,12,12\")])\n+  [(set_attr \"type\" \"three,two,three,three,three\")\n+   (set_attr \"length\" \"12,8,12,12,12\")])\n \n (define_insn \"\"\n   [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,x,x,x,x,?y,?y,?y,?y,?y\")\n@@ -11784,7 +11792,8 @@\n    {xoril|xori} %0,%1,%b2\\;{ai|addic} %0,%0,-1\\;{sfe|subfe} %0,%0,%0\n    {xoriu|xoris} %0,%1,%u2\\;{ai|addic} %0,%0,-1\\;{sfe|subfe} %0,%0,%0\n    {sfi|subfic} %0,%1,%2\\;{ai|addic} %0,%0,-1\\;{sfe|subfe} %0,%0,%0\"\n-   [(set_attr \"length\" \"12,8,12,12,12\")])\n+   [(set_attr \"type\" \"three,two,three,three,three\")\n+    (set_attr \"length\" \"12,8,12,12,12\")])\n \n ;; Simplify (ne X (const_int 0)) on the PowerPC.  No need to on the Power,\n ;; since it nabs/sr is just as fast.\n@@ -11795,7 +11804,8 @@\n    (clobber (match_scratch:SI 2 \"=&r\"))]\n   \"! TARGET_POWER && TARGET_32BIT && !TARGET_ISEL\"\n   \"{ai|addic} %2,%1,-1\\;{sfe|subfe} %0,%2,%1\"\n-  [(set_attr \"length\" \"8\")])\n+  [(set_attr \"type\" \"two\")\n+   (set_attr \"length\" \"8\")])\n \n (define_insn \"\"\n   [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=r\")\n@@ -11804,7 +11814,8 @@\n    (clobber (match_scratch:DI 2 \"=&r\"))]\n   \"TARGET_64BIT\"\n   \"addic %2,%1,-1\\;subfe %0,%2,%1\"\n-  [(set_attr \"length\" \"8\")])\n+  [(set_attr \"type\" \"two\")\n+   (set_attr \"length\" \"8\")])\n \n ;; This is what (plus (ne X (const_int 0)) Y) looks like.\n (define_insn \"\"\n@@ -11816,7 +11827,8 @@\n    (clobber (match_scratch:SI 3 \"=&r\"))]\n   \"TARGET_32BIT\"\n   \"{ai|addic} %3,%1,-1\\;{aze|addze} %0,%2\"\n-  [(set_attr \"length\" \"8\")])\n+  [(set_attr \"type\" \"two\")\n+   (set_attr \"length\" \"8\")])\n \n (define_insn \"\"\n   [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=r\")\n@@ -11827,7 +11839,8 @@\n    (clobber (match_scratch:DI 3 \"=&r\"))]\n   \"TARGET_64BIT\"\n   \"addic %3,%1,-1\\;addze %0,%2\"\n-  [(set_attr \"length\" \"8\")])\n+  [(set_attr \"type\" \"two\")\n+   (set_attr \"length\" \"8\")])\n \n (define_insn \"\"\n   [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,?y\")\n@@ -12127,15 +12140,17 @@\n \t\t(match_operand:SI 2 \"reg_or_short_operand\" \"rI\")))]\n   \"TARGET_32BIT\"\n   \"{sf%I2|subf%I2c} %0,%1,%2\\;{cal %0,0(0)|li %0,0}\\;{ae|adde} %0,%0,%0\"\n-  [(set_attr \"length\" \"12\")])\n+  [(set_attr \"type\" \"three\")\n+   (set_attr \"length\" \"12\")])\n \n (define_insn \"\"\n   [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=r\")\n \t(leu:DI (match_operand:DI 1 \"gpc_reg_operand\" \"r\")\n \t\t(match_operand:DI 2 \"reg_or_short_operand\" \"rI\")))]\n   \"TARGET_64BIT\"\n   \"subf%I2c %0,%1,%2\\;li %0,0\\;adde %0,%0,%0\"\n-  [(set_attr \"length\" \"12\")])\n+  [(set_attr \"type\" \"three\")\n+   (set_attr \"length\" \"12\")])\n \n (define_insn \"\"\n   [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x,?y\")\n@@ -12206,7 +12221,8 @@\n \t\t (match_operand:SI 3 \"gpc_reg_operand\" \"r\")))]\n   \"TARGET_32BIT\"\n   \"{sf%I2|subf%I2c} %0,%1,%2\\;{aze|addze} %0,%3\"\n-  [(set_attr \"length\" \"8\")])\n+  [(set_attr \"type\" \"two\")\n+   (set_attr \"length\" \"8\")])\n \n (define_insn \"\"\n   [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,?y\")\n@@ -12279,7 +12295,8 @@\n \t\t\t(match_operand:SI 2 \"reg_or_short_operand\" \"rI\"))))]\n   \"TARGET_32BIT\"\n   \"{sf%I2|subf%I2c} %0,%1,%2\\;{sfe|subfe} %0,%0,%0\\;nand %0,%0,%0\"\n-   [(set_attr \"length\" \"12\")])\n+   [(set_attr \"type\" \"three\")\n+    (set_attr \"length\" \"12\")])\n \n (define_insn \"\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=&r\")\n@@ -12289,7 +12306,8 @@\n \t\t(match_operand:SI 3 \"gpc_reg_operand\" \"r\")))]\n   \"TARGET_32BIT\"\n   \"{sf%I2|subf%I2c} %0,%1,%2\\;{sfe|subfe} %0,%0,%0\\;andc %0,%3,%0\"\n-  [(set_attr \"length\" \"12\")])\n+  [(set_attr \"type\" \"three\")\n+   (set_attr \"length\" \"12\")])\n \n (define_insn \"\"\n   [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,?y\")\n@@ -12638,7 +12656,7 @@\n   \"@\n    {sf|subfc} %0,%2,%1\\;{sfe|subfe} %0,%0,%0\n    {ai|addic} %0,%1,%n2\\;{sfe|subfe} %0,%0,%0\"\n-  [(set_attr \"type\" \"insert_word\")\n+  [(set_attr \"type\" \"two\")\n    (set_attr \"length\" \"8\")])\n \n (define_insn \"\"\n@@ -12649,7 +12667,7 @@\n   \"@\n    {sf|subfc} %0,%2,%1\\;{sfe|subfe} %0,%0,%0\n    {ai|addic} %0,%1,%n2\\;{sfe|subfe} %0,%0,%0\"\n-  [(set_attr \"type\" \"insert_word\")\n+  [(set_attr \"type\" \"two\")\n    (set_attr \"length\" \"8\")])\n \n (define_insn \"\"\n@@ -12785,7 +12803,8 @@\n   \"@\n    {sf|subfc} %0,%2,%1\\;{cal %0,0(0)|li %0,0}\\;{ae|adde} %0,%0,%0\n    {ai|addic} %0,%1,%n2\\;{cal %0,0(0)|li %0,0}\\;{ae|adde} %0,%0,%0\"\n-  [(set_attr \"length\" \"12\")])\n+  [(set_attr \"type\" \"three\")\n+   (set_attr \"length\" \"12\")])\n \n (define_insn \"\"\n   [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=r,r\")\n@@ -12795,7 +12814,8 @@\n   \"@\n    subfc %0,%2,%1\\;li %0,0\\;adde %0,%0,%0\n    addic %0,%1,%n2\\;li %0,0\\;adde %0,%0,%0\"\n-  [(set_attr \"length\" \"12\")])\n+  [(set_attr \"type\" \"three\")\n+   (set_attr \"length\" \"12\")])\n \n (define_insn \"\"\n   [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x,x,?y,?y\")\n@@ -12872,7 +12892,8 @@\n   \"@\n    {sf|subfc} %0,%2,%1\\;{aze|addze} %0,%3\n    {ai|addic} %0,%1,%n2\\;{aze|addze} %0,%3\"\n-  [(set_attr \"length\" \"8\")])\n+  [(set_attr \"type\" \"two\")\n+   (set_attr \"length\" \"8\")])\n \n (define_insn \"\"\n   [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,x,?y,?y\")\n@@ -12951,7 +12972,8 @@\n   \"@\n    {sf|subfc} %0,%2,%1\\;{sfe|subfe} %0,%0,%0\\;nand %0,%0,%0\n    {sfi|subfic} %0,%1,-1\\;{a%I2|add%I2c} %0,%0,%2\\;{sfe|subfe} %0,%0,%0\"\n-  [(set_attr \"length\" \"12\")])\n+  [(set_attr \"type\" \"three\")\n+   (set_attr \"length\" \"12\")])\n \n (define_insn \"\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=&r,&r\")\n@@ -12963,7 +12985,8 @@\n   \"@\n    {sf|subfc} %0,%2,%1\\;{sfe|subfe} %0,%0,%0\\;andc %0,%3,%0\n    {ai|addic} %0,%1,%n2\\;{sfe|subfe} %0,%0,%0\\;andc %0,%3,%0\"\n-  [(set_attr \"length\" \"12\")])\n+  [(set_attr \"type\" \"three\")\n+   (set_attr \"length\" \"12\")])\n \n (define_insn \"\"\n   [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,x,?y,?y\")\n@@ -13044,15 +13067,17 @@\n \t       (const_int 0)))]\n   \"TARGET_32BIT\"\n   \"{sfi|subfic} %0,%1,0\\;{ame|addme} %0,%0\\;{sri|srwi} %0,%0,31\"\n-  [(set_attr \"length\" \"12\")])\n+  [(set_attr \"type\" \"three\")\n+   (set_attr \"length\" \"12\")])\n \n (define_insn \"\"\n   [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=r\")\n \t(gt:DI (match_operand:DI 1 \"gpc_reg_operand\" \"r\")\n \t       (const_int 0)))]\n   \"TARGET_64BIT\"\n   \"subfic %0,%1,0\\;addme %0,%0\\;srdi %0,%0,63\"\n-  [(set_attr \"length\" \"12\")])\n+  [(set_attr \"type\" \"three\")\n+   (set_attr \"length\" \"12\")])\n \n (define_insn \"\"\n   [(set (match_operand:CC 2 \"cc_reg_operand\" \"=x,?y\")\n@@ -13162,7 +13187,8 @@\n \t\t (match_operand:SI 2 \"gpc_reg_operand\" \"r\")))]\n   \"TARGET_32BIT\"\n   \"{a|addc} %0,%1,%1\\;{sfe|subfe} %0,%1,%0\\;{aze|addze} %0,%2\"\n-  [(set_attr \"length\" \"12\")])\n+  [(set_attr \"type\" \"three\")\n+   (set_attr \"length\" \"12\")])\n \n (define_insn \"\"\n   [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=&r\")\n@@ -13171,7 +13197,8 @@\n \t\t (match_operand:DI 2 \"gpc_reg_operand\" \"r\")))]\n   \"TARGET_64BIT\"\n   \"addc %0,%1,%1\\;subfe %0,%1,%0\\;addze %0,%2\"\n-  [(set_attr \"length\" \"12\")])\n+  [(set_attr \"type\" \"three\")\n+   (set_attr \"length\" \"12\")])\n \n (define_insn \"\"\n   [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,?y\")\n@@ -13382,15 +13409,17 @@\n \t\t       (const_int 0))))]\n   \"TARGET_32BIT\"\n   \"{sfi|subfic} %0,%1,0\\;{ame|addme} %0,%0\\;{srai|srawi} %0,%0,31\"\n-  [(set_attr \"length\" \"12\")])\n+  [(set_attr \"type\" \"three\")\n+   (set_attr \"length\" \"12\")])\n \n (define_insn \"\"\n   [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=r\")\n \t(neg:DI (gt:DI (match_operand:DI 1 \"gpc_reg_operand\" \"r\")\n \t\t       (const_int 0))))]\n   \"TARGET_64BIT\"\n   \"subfic %0,%1,0\\;addme %0,%0\\;sradi %0,%0,63\"\n-  [(set_attr \"length\" \"12\")])\n+  [(set_attr \"type\" \"three\")\n+   (set_attr \"length\" \"12\")])\n \n (define_insn \"\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n@@ -13652,7 +13681,7 @@\n \t\t\t(match_operand:SI 2 \"reg_or_short_operand\" \"rI\"))))]\n   \"TARGET_32BIT\"\n   \"{sf%I2|subf%I2c} %0,%1,%2\\;{sfe|subfe} %0,%0,%0\"\n-  [(set_attr \"type\" \"insert_word\")\n+  [(set_attr \"type\" \"two\")\n    (set_attr \"length\" \"8\")])\n \n (define_insn \"\"\n@@ -13661,7 +13690,7 @@\n \t\t\t(match_operand:DI 2 \"reg_or_short_operand\" \"rI\"))))]\n   \"TARGET_64BIT\"\n   \"subf%I2c %0,%1,%2\\;subfe %0,%0,%0\"\n-  [(set_attr \"type\" \"insert_word\")\n+  [(set_attr \"type\" \"two\")\n    (set_attr \"length\" \"8\")])\n \f\n ;; Define both directions of branch and return.  If we need a reload"}, {"sha": "100960a8ddc3ce7ca116b0697e616276b49a6c0c", "filename": "gcc/config/rs6000/rs64.md", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/943c15ed46ebccfa84d56f0a19fffe9a8449eb35/gcc%2Fconfig%2Frs6000%2Frs64.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/943c15ed46ebccfa84d56f0a19fffe9a8449eb35/gcc%2Fconfig%2Frs6000%2Frs64.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs64.md?ref=943c15ed46ebccfa84d56f0a19fffe9a8449eb35", "patch": "@@ -46,6 +46,16 @@\n        (eq_attr \"cpu\" \"rs64a\"))\n   \"iu_rs64\")\n \n+(define_insn_reservation \"rs64a-two\" 1\n+  (and (eq_attr \"type\" \"two\")\n+       (eq_attr \"cpu\" \"rs64a\"))\n+  \"iu_rs64,iu_rs64\")\n+\n+(define_insn_reservation \"rs64a-three\" 1\n+  (and (eq_attr \"type\" \"three\")\n+       (eq_attr \"cpu\" \"rs64a\"))\n+  \"iu_rs64,iu_rs64,iu_rs64\")\n+\n (define_insn_reservation \"rs64a-imul\" 20\n   (and (eq_attr \"type\" \"imul,imul_compare\")\n        (eq_attr \"cpu\" \"rs64a\"))"}]}