{"sha": "4c4f3c3fefc61ca5045a6c1d7592786e2cf57499", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGM0ZjNjM2ZlZmM2MWNhNTA0NWE2YzFkNzU5Mjc4NmUyY2Y1NzQ5OQ==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2018-02-05T11:01:50Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2018-02-05T11:01:50Z"}, "message": "Cherry-pick libsanitizer pointer-pair tristate option.\n\n2018-02-05  Martin Liska  <mliska@suse.cz>\n\n\t* doc/invoke.texi: Cherry-pick upstream r323995.\n2018-02-05  Martin Liska  <mliska@suse.cz>\n\n\t* c-c++-common/asan/pointer-compare-1.c: Adjust ASAN_OPTIONS\n\toptions.\n\t* c-c++-common/asan/pointer-compare-2.c: Likewise.\n\t* c-c++-common/asan/pointer-subtract-1.c: Likewise.\n\t* c-c++-common/asan/pointer-subtract-2.c: Likewise.\n\t* c-c++-common/asan/pointer-subtract-3.c: Likewise.\n\t* c-c++-common/asan/pointer-subtract-4.c: Likewise.\n\t* c-c++-common/asan/pointer-compare-3.c: New test.\n2018-02-05  Martin Liska  <mliska@suse.cz>\n\n\t* asan/asan_flags.inc: Cherry-pick upstream r323995.\n\t* asan/asan_report.cc (CheckForInvalidPointerPair):\n\tCherry-pick upstream r323995.\n\nFrom-SVN: r257387", "tree": {"sha": "47f182084e3c2b708b3cf75ae1acf6cb4705feaf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/47f182084e3c2b708b3cf75ae1acf6cb4705feaf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4c4f3c3fefc61ca5045a6c1d7592786e2cf57499", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c4f3c3fefc61ca5045a6c1d7592786e2cf57499", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c4f3c3fefc61ca5045a6c1d7592786e2cf57499", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c4f3c3fefc61ca5045a6c1d7592786e2cf57499/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ba26157992975c2cdad2020571cdabf77a5b7c41", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba26157992975c2cdad2020571cdabf77a5b7c41", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba26157992975c2cdad2020571cdabf77a5b7c41"}], "stats": {"total": 94, "additions": 80, "deletions": 14}, "files": [{"sha": "e5a8c11b30390baeb9755e94d77b7e463a0515a8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c4f3c3fefc61ca5045a6c1d7592786e2cf57499/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c4f3c3fefc61ca5045a6c1d7592786e2cf57499/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4c4f3c3fefc61ca5045a6c1d7592786e2cf57499", "patch": "@@ -1,3 +1,7 @@\n+2018-02-05  Martin Liska  <mliska@suse.cz>\n+\n+\t* doc/invoke.texi: Cherry-pick upstream r323995.\n+\n 2018-02-05  Richard Sandiford  <richard.sandiford@linaro.org>\n \n \t* ira.c (ira_init_register_move_cost): Adjust comment."}, {"sha": "cf6d3ae5b990d32dcb97b82f4522f388c3217ea7", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c4f3c3fefc61ca5045a6c1d7592786e2cf57499/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c4f3c3fefc61ca5045a6c1d7592786e2cf57499/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=4c4f3c3fefc61ca5045a6c1d7592786e2cf57499", "patch": "@@ -11165,8 +11165,9 @@ The option must be combined with either @option{-fsanitize=kernel-address} or\n The option cannot be combined with @option{-fsanitize=thread}\n and/or @option{-fcheck-pointer-bounds}.\n Note: By default the check is disabled at run time.  To enable it,\n-add @code{detect_invalid_pointer_pairs=1} to the environment variable\n-@env{ASAN_OPTIONS}.\n+add @code{detect_invalid_pointer_pairs=2} to the environment variable\n+@env{ASAN_OPTIONS}. Using @code{detect_invalid_pointer_pairs=1} detects\n+invalid operation only when both pointers are non-null.\n \n @item -fsanitize=pointer-subtract\n @opindex fsanitize=pointer-subtract\n@@ -11176,8 +11177,9 @@ The option must be combined with either @option{-fsanitize=kernel-address} or\n The option cannot be combined with @option{-fsanitize=thread}\n and/or @option{-fcheck-pointer-bounds}.\n Note: By default the check is disabled at run time.  To enable it,\n-add @code{detect_invalid_pointer_pairs=1} to the environment variable\n-@env{ASAN_OPTIONS}.\n+add @code{detect_invalid_pointer_pairs=2} to the environment variable\n+@env{ASAN_OPTIONS}. Using @code{detect_invalid_pointer_pairs=1} detects\n+invalid operation only when both pointers are non-null.\n \n @item -fsanitize=thread\n @opindex fsanitize=thread"}, {"sha": "074e6eadbd1803433bb32ac9553dafe3e845c244", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c4f3c3fefc61ca5045a6c1d7592786e2cf57499/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c4f3c3fefc61ca5045a6c1d7592786e2cf57499/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4c4f3c3fefc61ca5045a6c1d7592786e2cf57499", "patch": "@@ -1,3 +1,14 @@\n+2018-02-05  Martin Liska  <mliska@suse.cz>\n+\n+\t* c-c++-common/asan/pointer-compare-1.c: Adjust ASAN_OPTIONS\n+\toptions.\n+\t* c-c++-common/asan/pointer-compare-2.c: Likewise.\n+\t* c-c++-common/asan/pointer-subtract-1.c: Likewise.\n+\t* c-c++-common/asan/pointer-subtract-2.c: Likewise.\n+\t* c-c++-common/asan/pointer-subtract-3.c: Likewise.\n+\t* c-c++-common/asan/pointer-subtract-4.c: Likewise.\n+\t* c-c++-common/asan/pointer-compare-3.c: New test.\n+\n 2018-02-05  Richard Sandiford  <richard.sandiford@linaro.org>\n \n \t* gcc.target/aarch64/sve/vcond_4.c: Remove XFAILs."}, {"sha": "cf67fe98bee84947c2cf8153618a0ad6438b2682", "filename": "gcc/testsuite/c-c++-common/asan/pointer-compare-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c4f3c3fefc61ca5045a6c1d7592786e2cf57499/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fpointer-compare-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c4f3c3fefc61ca5045a6c1d7592786e2cf57499/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fpointer-compare-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fpointer-compare-1.c?ref=4c4f3c3fefc61ca5045a6c1d7592786e2cf57499", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do run } */\n-/* { dg-set-target-env-var ASAN_OPTIONS \"detect_invalid_pointer_pairs=1:halt_on_error=0\" } */\n+/* { dg-set-target-env-var ASAN_OPTIONS \"detect_invalid_pointer_pairs=2:halt_on_error=0\" } */\n /* { dg-options \"-fsanitize=address,pointer-compare\" } */\n \n volatile int v;"}, {"sha": "d2142c8f1600903d9a672fb182e7c7d72a5eaba2", "filename": "gcc/testsuite/c-c++-common/asan/pointer-compare-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c4f3c3fefc61ca5045a6c1d7592786e2cf57499/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fpointer-compare-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c4f3c3fefc61ca5045a6c1d7592786e2cf57499/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fpointer-compare-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fpointer-compare-2.c?ref=4c4f3c3fefc61ca5045a6c1d7592786e2cf57499", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do run } */\n-/* { dg-set-target-env-var ASAN_OPTIONS \"detect_invalid_pointer_pairs=1 halt_on_error=1\" } */\n+/* { dg-set-target-env-var ASAN_OPTIONS \"detect_invalid_pointer_pairs=2 halt_on_error=1\" } */\n /* { dg-options \"-fsanitize=address,pointer-compare\" } */\n \n volatile int v;"}, {"sha": "7156e494aebbe1ac61e37910bf728a40ff287bd7", "filename": "gcc/testsuite/c-c++-common/asan/pointer-compare-3.c", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c4f3c3fefc61ca5045a6c1d7592786e2cf57499/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fpointer-compare-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c4f3c3fefc61ca5045a6c1d7592786e2cf57499/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fpointer-compare-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fpointer-compare-3.c?ref=4c4f3c3fefc61ca5045a6c1d7592786e2cf57499", "patch": "@@ -0,0 +1,39 @@\n+/* { dg-do run } */\n+/* { dg-set-target-env-var ASAN_OPTIONS \"detect_invalid_pointer_pairs=1:halt_on_error=1\" } */\n+/* { dg-options \"-fsanitize=address,pointer-compare\" } */\n+\n+int foo(char *p, char *q) {\n+  return p <= q;\n+}\n+\n+char global[8192] = {};\n+char small_global[7] = {};\n+\n+int main() {\n+  // Heap allocated memory.\n+  char *p = (char *)__builtin_malloc(42);\n+  int r = foo(p, 0);\n+  __builtin_free(p);\n+\n+  p = (char *)__builtin_malloc(1024);\n+  foo(0, p);\n+  __builtin_free(p);\n+\n+  p = (char *)__builtin_malloc(4096);\n+  foo(p, 0);\n+  __builtin_free(p);\n+\n+  // Global variable.\n+  foo(&global[0], 0);\n+  foo(&global[1000], 0);\n+\n+  p = &small_global[0];\n+  foo(p, 0);\n+\n+  // Stack variable.\n+  char stack[10000];\n+  foo(&stack[0], 0);\n+  foo(0, &stack[9000]);\n+\n+  return 0;\n+}"}, {"sha": "091a33f167d2a272745054a0f1ee77315a60c3d7", "filename": "gcc/testsuite/c-c++-common/asan/pointer-subtract-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c4f3c3fefc61ca5045a6c1d7592786e2cf57499/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fpointer-subtract-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c4f3c3fefc61ca5045a6c1d7592786e2cf57499/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fpointer-subtract-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fpointer-subtract-1.c?ref=4c4f3c3fefc61ca5045a6c1d7592786e2cf57499", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do run } */\n-/* { dg-set-target-env-var ASAN_OPTIONS \"detect_invalid_pointer_pairs=1 halt_on_error=0\" } */\n+/* { dg-set-target-env-var ASAN_OPTIONS \"detect_invalid_pointer_pairs=2 halt_on_error=0\" } */\n /* { dg-options \"-fsanitize=address,pointer-subtract\" } */\n \n volatile __PTRDIFF_TYPE__ v;"}, {"sha": "7ef106c03ce505fde5681d823d75dde15b731fc9", "filename": "gcc/testsuite/c-c++-common/asan/pointer-subtract-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c4f3c3fefc61ca5045a6c1d7592786e2cf57499/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fpointer-subtract-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c4f3c3fefc61ca5045a6c1d7592786e2cf57499/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fpointer-subtract-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fpointer-subtract-2.c?ref=4c4f3c3fefc61ca5045a6c1d7592786e2cf57499", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do run } */\n-/* { dg-set-target-env-var ASAN_OPTIONS \"detect_invalid_pointer_pairs=1 halt_on_error=1\" } */\n+/* { dg-set-target-env-var ASAN_OPTIONS \"detect_invalid_pointer_pairs=2 halt_on_error=1\" } */\n /* { dg-options \"-fsanitize=address,pointer-subtract\" } */\n \n volatile __PTRDIFF_TYPE__ v;"}, {"sha": "7cae91b699108016da589b84ca634123e5711f50", "filename": "gcc/testsuite/c-c++-common/asan/pointer-subtract-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c4f3c3fefc61ca5045a6c1d7592786e2cf57499/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fpointer-subtract-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c4f3c3fefc61ca5045a6c1d7592786e2cf57499/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fpointer-subtract-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fpointer-subtract-3.c?ref=4c4f3c3fefc61ca5045a6c1d7592786e2cf57499", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do run { target pthread_h } } */\n-/* { dg-set-target-env-var ASAN_OPTIONS \"detect_invalid_pointer_pairs=1:halt_on_error=1\" } */\n+/* { dg-set-target-env-var ASAN_OPTIONS \"detect_invalid_pointer_pairs=2:halt_on_error=1\" } */\n /* { dg-options \"-fsanitize=address,pointer-subtract\" } */\n /* { dg-additional-options \"-pthread\" { target pthread } } */\n "}, {"sha": "af65c59512b8c3a5615894138935ceb66d6c6a10", "filename": "gcc/testsuite/c-c++-common/asan/pointer-subtract-4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c4f3c3fefc61ca5045a6c1d7592786e2cf57499/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fpointer-subtract-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c4f3c3fefc61ca5045a6c1d7592786e2cf57499/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fpointer-subtract-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fpointer-subtract-4.c?ref=4c4f3c3fefc61ca5045a6c1d7592786e2cf57499", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do run { target pthread_h } } */\n /* { dg-shouldfail \"asan\" } */\n-/* { dg-set-target-env-var ASAN_OPTIONS \"detect_invalid_pointer_pairs=1:halt_on_error=1\" } */\n+/* { dg-set-target-env-var ASAN_OPTIONS \"detect_invalid_pointer_pairs=2:halt_on_error=1\" } */\n /* { dg-options \"-fsanitize=address,pointer-subtract\" } */\n /* { dg-additional-options \"-pthread\" { target pthread } } */\n "}, {"sha": "5c95e45a8f262afec67319d3646317269a7d84c5", "filename": "libsanitizer/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c4f3c3fefc61ca5045a6c1d7592786e2cf57499/libsanitizer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c4f3c3fefc61ca5045a6c1d7592786e2cf57499/libsanitizer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2FChangeLog?ref=4c4f3c3fefc61ca5045a6c1d7592786e2cf57499", "patch": "@@ -1,3 +1,9 @@\n+2018-02-05  Martin Liska  <mliska@suse.cz>\n+\n+\t* asan/asan_flags.inc: Cherry-pick upstream r323995.\n+\t* asan/asan_report.cc (CheckForInvalidPointerPair):\n+\tCherry-pick upstream r323995.\n+\n 2018-01-17  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \tPR sanitizer/82825"}, {"sha": "b4253e025243aa49d853c2d7c844e3c8781e2238", "filename": "libsanitizer/asan/asan_flags.inc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c4f3c3fefc61ca5045a6c1d7592786e2cf57499/libsanitizer%2Fasan%2Fasan_flags.inc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c4f3c3fefc61ca5045a6c1d7592786e2cf57499/libsanitizer%2Fasan%2Fasan_flags.inc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fasan%2Fasan_flags.inc?ref=4c4f3c3fefc61ca5045a6c1d7592786e2cf57499", "patch": "@@ -134,9 +134,9 @@ ASAN_FLAG(\n     \"Android. \")\n ASAN_FLAG(\n     int, detect_invalid_pointer_pairs, 0,\n-    \"If non-zero, try to detect operations like <, <=, >, >= and - on \"\n-    \"invalid pointer pairs (e.g. when pointers belong to different objects). \"\n-    \"The bigger the value the harder we try.\")\n+    \"If >= 2, detect operations like <, <=, >, >= and - on invalid pointer \"\n+    \"pairs (e.g. when pointers belong to different objects); \"\n+    \"If == 1, detect invalid operations only when both pointers are non-null.\")\n ASAN_FLAG(\n     bool, detect_container_overflow, true,\n     \"If true, honor the container overflow annotations. See \""}, {"sha": "434aa734c8fec7169b6e6156a66f1f12af979f88", "filename": "libsanitizer/asan/asan_report.cc", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c4f3c3fefc61ca5045a6c1d7592786e2cf57499/libsanitizer%2Fasan%2Fasan_report.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c4f3c3fefc61ca5045a6c1d7592786e2cf57499/libsanitizer%2Fasan%2Fasan_report.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fasan%2Fasan_report.cc?ref=4c4f3c3fefc61ca5045a6c1d7592786e2cf57499", "patch": "@@ -340,7 +340,11 @@ static bool IsInvalidPointerPair(uptr a1, uptr a2) {\n }\n \n static INLINE void CheckForInvalidPointerPair(void *p1, void *p2) {\n-  if (!flags()->detect_invalid_pointer_pairs) return;\n+  switch (flags()->detect_invalid_pointer_pairs) {\n+    case 0 : return;\n+    case 1 : if (p1 == nullptr || p2 == nullptr) return; break;\n+  }\n+\n   uptr a1 = reinterpret_cast<uptr>(p1);\n   uptr a2 = reinterpret_cast<uptr>(p2);\n "}]}