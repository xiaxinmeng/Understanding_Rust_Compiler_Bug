{"sha": "425c176f742d2629288b9f3211310cf3f806d051", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDI1YzE3NmY3NDJkMjYyOTI4OGI5ZjMyMTEzMTBjZjNmODA2ZDA1MQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-06-23T23:19:33Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-06-23T23:19:33Z"}, "message": "(fix_truncdfsi2, movsf, movdi): Use assign_stack_temp.\n\n(mulsidi3): Add earlyclobber constraint modifier to PowerPC version\nand !TARGET_POWERPC64 to final condition.\n\nFrom-SVN: r7548", "tree": {"sha": "42272257db415489bf59bbfc650b6cff6f7d966e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/42272257db415489bf59bbfc650b6cff6f7d966e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/425c176f742d2629288b9f3211310cf3f806d051", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/425c176f742d2629288b9f3211310cf3f806d051", "html_url": "https://github.com/Rust-GCC/gccrs/commit/425c176f742d2629288b9f3211310cf3f806d051", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/425c176f742d2629288b9f3211310cf3f806d051/comments", "author": null, "committer": null, "parents": [{"sha": "138cec5908fc120ca13370a99c26158e755591d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/138cec5908fc120ca13370a99c26158e755591d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/138cec5908fc120ca13370a99c26158e755591d9"}], "stats": {"total": 27, "additions": 8, "deletions": 19}, "files": [{"sha": "1f2872536059d6dd8ff8ef80183916c4e6134779", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 8, "deletions": 19, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/425c176f742d2629288b9f3211310cf3f806d051/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/425c176f742d2629288b9f3211310cf3f806d051/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=425c176f742d2629288b9f3211310cf3f806d051", "patch": "@@ -3094,10 +3094,10 @@\n {\n   if (TARGET_POWER2 || TARGET_POWERPC)\n     {\n-      rtx stack_slot, temp = gen_reg_rtx (DImode);\n+      rtx stack_slot = assign_stack_temp (DImode, 8, 0),\n+\ttemp = gen_reg_rtx (DImode);\n+\n       emit_insn (gen_fpcvtsi (temp, operands[1]));\n-      stack_slot = gen_rtx (MEM, DImode,\n-\t\t\t    plus_constant (stack_pointer_rtx, 8));\n       emit_move_insn (stack_slot, temp);\n       emit_move_insn (operands[0],\n \t\t      operand_subword (stack_slot, 1, 0, DImode));\n@@ -3288,10 +3288,10 @@\n    (set_attr \"length\" \"8\")])\n \n (define_insn \"\"\n-  [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=r\")\n+  [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=&r\")\n \t(mult:DI (sign_extend:DI (match_operand:SI 1 \"gpc_reg_operand\" \"%r\"))\n \t\t (sign_extend:DI (match_operand:SI 2 \"gpc_reg_operand\" \"r\"))))]\n-  \"TARGET_POWERPC\"\n+  \"TARGET_POWERPC && ! TARGET_POWERPC64\"\n   \"mulhw %0,%1,%2\\;mullw %L0,%1,%2\"\n   [(set_attr \"type\" \"imul\")\n    (set_attr \"length\" \"8\")])\n@@ -3763,7 +3763,7 @@\n \n   if (GET_CODE (operands[1]) == REG && REGNO (operands[1]) < 32)\n     {\n-      rtx stack_slot;\n+      rtx stack_slot = assign_stack_temp (SFmode, 4, 0);\n \n       /* If this is a store to memory or another integer register do the\n \t move directly.  Otherwise store to a temporary stack slot and\n@@ -3780,7 +3780,6 @@\n \t  DONE;\n \t}\n \n-      stack_slot = gen_rtx (MEM, SFmode, plus_constant (stack_pointer_rtx, 4));\n       emit_move_insn (stack_slot, operands[1]);\n       emit_move_insn (operands[0], stack_slot);\n       DONE;\n@@ -3791,7 +3790,7 @@\n \n   if (GET_CODE (operands[0]) == REG && REGNO (operands[0]) < 32)\n     {\n-      rtx stack_slot;\n+      rtx stack_slot = assign_stack_temp (SFmode, 4, 0);\n \n       if (GET_CODE (operands[1]) == MEM\n #if HOST_FLOAT_FORMAT == TARGET_FLOAT_FORMAT && ! defined(REAL_IS_NOT_DOUBLE)\n@@ -3807,11 +3806,6 @@\n \t  DONE;\n \t}\n \n-      if (reload_in_progress)\n-\tstack_slot = gen_rtx (MEM, SFmode,\n-\t\t\t      plus_constant (stack_pointer_rtx, 4));\n-      else\n-\tstack_slot = assign_stack_temp (SFmode, 4, 0);\n       emit_move_insn (stack_slot, operands[1]);\n       emit_move_insn (operands[0], stack_slot);\n       DONE;\n@@ -3981,13 +3975,8 @@\n \t  || (FP_REGNO_P (REGNO (operands[1]))\n \t      && ! FP_REGNO_P (REGNO (operands[0])))))\n     {\n-      rtx stack_slot;\n+      rtx stack_slot = assign_stack_temp (DImode, 8, 0);\n \n-      if (reload_in_progress)\n-\tstack_slot = gen_rtx (MEM, DImode,\n-\t\t\t      plus_constant (stack_pointer_rtx, 8));\n-      else\n-\tstack_slot = assign_stack_temp (DImode, 8, 0);\n       emit_move_insn (stack_slot, operands[1]);\n       emit_move_insn (operands[0], stack_slot);\n       DONE;"}]}